SUBROUTINE CALC_CONC_TIME_WS(TTYPE, STIME, ETIME, CTIME, ESTAT)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - CALC.CONC.TIME
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/07/87
*
* DESCRIPTION
*
* This subroutine calculates the amount of time for each time entry that
* was spent doing something else.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
$INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
      CTIME = ""
      ESTAT = ""
*     TOT.CONC.MIN = 0
*     TOT.CONC.TIME = 0
*
*---- MAKE ALL TIME ENTRIES RELATIVE TO START TIME
*
      OVERLAP = 0
      CNT = COUNT(TTYPE,VM) + (TTYPE # "")
      ET = STIME<1,1>
      FOR TP = 1 TO CNT
         IF STIME<1,TP> = "" OR TTYPE<1,TP> = "C" THEN GOTO 40
         ST = STIME<1,TP>
         PET = ET
         IF ST < ET AND (PET-ST) > 1600 THEN
            ST = ST + 2400
            STIME<1,TP> = ST
         END
         IF ST < PET THEN OVERLAP = 1
         ET = ETIME<1,TP>
         IF ET < ST THEN
            ET = ET + 2400
            ETIME<1,TP> = ET
         END
40    NEXT TP
      IF NOT(OVERLAP) THEN GOTO 99999
*
*---- SERIALIZE TIME ENTRIES
*
      TIMEX = ""
      TIMEV = ""
      FOR TP = 1 TO CNT
         IF STIME<1,TP> = "" OR TTYPE<1,TP> = "C" THEN GOTO 90
         ST = STIME<1,TP>
         ET = ETIME<1,TP>
* CORRECT LOCATE ON UNIDATA - LMR 9/24/93
         STX = ST+1
         STX = STR('0',4-LEN(STX)):STX
*        LOCATE (ST+1) IN TIMEX,1 BY "AR" SETTING P ELSE NULL
         LOCATE STX IN TIMEX,1 BY "AR" SETTING P ELSE NULL
*
         TIMEX = INSERT(TIMEX,P,0,0,ST)
         TIMEV = INSERT(TIMEV,P,0,0,TP)
* CORRECT LOCATE ON UNIDATA - LMR 9/24/93
         ETX = ET+1
         ETX = STR('0',4-LEN(ETX)):ETX
*        LOCATE (ET+1) IN TIMEX,1 BY "AR" SETTING P ELSE NULL
         LOCATE ETX IN TIMEX,1 BY "AR" SETTING P ELSE NULL
*
         TIMEX = INSERT(TIMEX,P,0,0,ET)
         TIMEV = INSERT(TIMEV,P,0,0,TP)
90     NEXT TP
*
*---- MAIN PROCESSING
*
100*
DT=""
      TCNT = COUNT(TIMEX,AM) + (TIMEX # "")
      FOR TP1 = 1 TO CNT
         IF STIME<1,TP1> = "" OR TTYPE<1,TP1> = "C" THEN GOTO 290
         PP1 = 0
         PPX = ""
         PPP = 0
         CONC.MIN = 0
         DONE = 0
         FOR TP = 1 TO TCNT UNTIL DONE
            V = TIMEV<TP>
            BEGIN CASE
            CASE PPP = 0 AND V = TP1
               PPP = 1
               PP1 = TP
            CASE V = TP1
               IF PP1 > 0 AND PPX # "" THEN
                  PP2 = TP
                  GOSUB 1000
               END
               DONE = 1
            CASE 1
               LOCATE V IN PPX,1 SETTING PX ELSE PX = 0
               IF PX = 0 THEN
                  IF PPX = "" THEN PP1 = TP
                  PPX = INSERT(PPX,-1,0,0,V)
               END ELSE
                  PPX = DELETE(PPX,PX,0,0)
                  IF PPX = "" AND PPP > 0 THEN
                     PP2 = TP
                     GOSUB 1000
                     PP1 = 0
                  END
               END
            END CASE
         NEXT TP
         CT = INT(CONC.MIN/60)*100+MOD(CONC.MIN,60)
*        CT = INT(CONC.MIN/60*100+0.5)
         IF CT > 0 THEN
            CTIME<1,TP1> = CT
            IF TTYPE<1,TP1> # "T" THEN
               ESTAT<1,TP1> = 1
            END
         END
*        TOT.CONC.MIN = TOT.CONC.MIN + CONC.MIN
DT = DT : " " : CONC.MIN
290   NEXT TP1
*     PRINT @(0,23):"CONCURRENT MINUTES = ":DT:
*     INPUT REPLY:
*     PRINT @(0,23):CL:
*     TOT.CONC.TIME = INT(TOT.CONC.MIN/60)*100+MOD(TOT.CONC.MIN,60)
      GOTO 99999
*
*---- CALCULATE CONCURRENT TIME FOR THIS ENTRY
*
1000*
      STRTC = TIMEX<PP1>
      STPTC = TIMEX<PP2>
      STRMC = INT(STRTC/100)*60+MOD(STRTC,100)
      STPMC = INT(STPTC/100)*60+MOD(STPTC,100)
      CONC.MIN = CONC.MIN + (STPMC - STRMC)
      RETURN
*
*---- RETURN TO CALLING PROGRAM
*
99999*
      RETURN
   END
