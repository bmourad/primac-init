*******************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*******************
      LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED.FLAG ELSE INVOICED.FLAG = 0
      MORE = 1
      LOOP
         ECD.NUM=33
         SCV.REC(ECD.NUM)<1>=""
         ECD.ACTION=4
         CALL SCRN.EDIT
         REQUEST=ECD.RET.VALUE
         BEGIN CASE
            CASE REQUEST='END' OR REQUEST='E'
               RELEASE JOB.CREDIT.STATS, CONO:JOB.NUM
               RELEASE JOB, CONO:JOB.NUM
               MORE = 0
            CASE REQUEST='DS'
               GOSUB 4000
            CASE REQUEST = 'RS'
               IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN
                  DISPLAY=1
               END ELSE
                  DISPLAY=0
               END
               ECD.SCRN.NO=2
               SCV.REC(1)<2>=SCV.REC(7)<1>
               SCV.REC(2)<2>=SCV.REC(8)<1>
               SCV.REC(3)<2>=SCV.REC(9)<1>
               SCV.REC(4)<2>=SCV.REC(10)<1>
               ECD.ACTION=3
               CALL SCRN.EDIT
               CALL JOB.MATL.SUB(CONO,JOB.NUM,DISPLAY)
               ECD.SCRN.NO=1
               GOSUB 30500
            CASE REQUEST ='OP' AND CO.POS = "Y"
               ECD.SCRN.NO = 5
               SCV.REC(1)<5>=SCV.REC(7)<1>
               ECD.ACTION = 3
               CALL SCRN.EDIT
               SUB.FLAG = 0
               CALL JOB.OSP.INQ(CONO,JOB.NUM,PROG.FLAG,SUB.FLAG)
               ECD.SCRN.NO = 1
               GOSUB 30500
            CASE REQUEST='RD'
               RD.DISPLAY = 1
               IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN
                  DISPLAY=1
               END ELSE
                  DISPLAY=0
               END
               ECD.SCRN.NO=4
               SCV.REC(1)<4> = SCV.REC(7)<1>
               SCV.REC(2)<4>=SCV.REC(8)<1>
               SCV.REC(3)<4>=SCV.REC(9)<1>
               SCV.REC(4)<4>=SCV.REC(10)<1>
               ECD.ACTION=3
               CALL SCRN.EDIT
               CALL JOB.REQD.SUB(CONO,JOB.NUM,DISPLAY,SAVE.INV.JS.REC)
               ECD.SCRN.NO=1
               GOSUB 30500
            CASE NUM(REQUEST) AND REQUEST >=1 AND REQUEST < 24
               IF INVOICED.FLAG THEN
                  BEGIN CASE
                     CASE JOB.STATUS # "" AND REQUEST = 3
                        ERRMSG = "CANNOT CHANGE DIVISION WHEN JOB IS INVOICED OR COMPLETE"
                        GOSUB 91000
                        GOTO 500
                     CASE JOB.STATUS<1,1> <= 2
                        FIELDS.ACC = FIELDS.ACC1
                     CASE 1
                        FIELDS.ACC = FIELDS.ACC2
                  END CASE
                  LOCATE REQUEST IN FIELDS.ACC<1>,1 SETTING FF ELSE
                     ERRMSG="YOU CANNOT CHANGE THIS FIELD BECAUSE OF JOB STATUS"
                     GOSUB 91000
                     GOTO 500
                  END
                  IF REQUEST = 1 THEN
                     ECD.NUM=55
                     ECD.ACTION=4
                     CALL SCRN.EDIT
                     IF ECD.RET.VALUE # "Y" THEN GO 500
                  END
               END
               ON REQUEST GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100,3200
500*
            CASE REQUEST = "CA" AND JOB.STATUS<1,1> # 9 AND FLG = "O"
               X = 0
               Y = 23
               TYP = 8
               MAXL = 1
               PMSG = "DO YOU WANT TO REVERSE WIP, RELEASE INVENTORY AND CANCEL THIS JOB (Y/N) :"
               CALL EDIT.SUB
               PRINT @(0,23) : CL :
               IF VALUE = "Y" THEN
                  IF OLD.CUST = "" THEN OLD.CUST = JOB.CUST
                  JOB.CUST = OLD.CUST
                  MATREADU CUST.REC FROM CUSTOMER, CONO : JOB.CUST ELSE
                     ERRMSG = "CANNOT LOCATE CUSTOMER -" : JOB.CUST
                     GOSUB 91000
                     GOTO 501
                  END
                  IF OLD.MASTER = "" THEN
                     JOB.MASTER=JOB.NUM
                  END ELSE
                     JOB.MASTER=OLD.MASTER
                  END
                  IF JOB.WIP<1,1> > 0 THEN
                     IF FR.CURR.PER = "" THEN
                        MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE
                           ERRMSG = "CANNOT LOCATE CONTROL, JCFISCAL"
                           GOSUB 91000
                           GOTO 501
                        END
                     END
                     WIP.TYPE = "ALL"
                     WIP.PERCENT = 10000
                     WIP.DATE = "ALL"
                     WIP.PER = "ALL"
                     CALL REVERSE.JOB.WIP(CONO,JOB.NUM,WIP.TYPE,WIP.PERCENT,WIP.DATE,WIP.PER,FR.CURR.PER)
* CALL REVERSE.JOBa(CONO,JOB.NUM,WIP.TYPE,WIP.PERCENT,WIP.DATE,WIP.PER,FR.CURR.PER)
                  END
                  RESV.ACTION = 'D'
                  GOSUB 600
                  IF SUM(JOB.ALOC.QTY) + 0 # 0 THEN
                     ERRMSG = "PRODUCT QUANTITY STILL ALLOCATED FOR JOB"
                     GOSUB 91000
                  END
                  JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"9")
                  JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
                  LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE
                     CUST.JOB<1,JFND> = JOB.NUM
                  END
                  CUST.JOB.BAL<1,JFND> = 0
                  MATWRITE CUST.REC ON CUSTOMER , CONO : JOB.CUST
                  MATWRITE JOB.REC ON JOB , CONO : JOB.NUM
501MORE           = 0
               END
            CASE REQUEST='F'
               IF NOT(RD.DISPLAY) AND JOB.RESV.MATL # "" THEN
                  RD.DISPLAY = 1
                  ERRMSG = "Must review the required materials for estimate before filing. "
                  GOSUB 91000
                  IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN
                     DISPLAY=1
                  END ELSE
                     DISPLAY=0
                  END
                  ECD.SCRN.NO=4
                  SCV.REC(1)<4> = SCV.REC(7)<1>
                  SCV.REC(2)<4>=SCV.REC(8)<1>
                  SCV.REC(3)<4>=SCV.REC(9)<1>
                  SCV.REC(4)<4>=SCV.REC(10)<1>
                  ECD.ACTION=3
                  CALL SCRN.EDIT
                  CALL JOB.REQD.SUB(CONO,JOB.NUM,DISPLAY,SAVE.INV.JS.REC)
                  ECD.SCRN.NO=1
                  GOSUB 30500
                  GOTO 510
               END
               IF JOB.STATUS="" THEN
                  IF JOB.CREDIT = "" THEN GOSUB 3100
                  IF ECD.RET.VALUE = "END" THEN GOTO 510
               END
               QUOTED.AMT = 0
               IF JOB.STATUS<1,1> < 4  THEN
                  LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
                     IF JOB.TOT.INV > 0 THEN
                        QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
                     END ELSE
                        QUOTED.AMT = JOB.CONF.AMT
                     END
                     IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
                  END
               END
               IF JOB.MASTER = "" THEN JOB.MASTER = JOB.NUM
               IF OLD.MASTER = "" THEN OLD.MASTER = JOB.MASTER
               IF OLD.CUST = "" THEN OLD.CUST = JOB.CUST
               CUR.CUST = JOB.CUST
               CUR.MASTER = JOB.MASTER
               MAT SAVE.JOB = MAT JOB.REC
               IF OLD.MASTER = CUR.MASTER THEN GOTO 502
               MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE
                  RELEASE JOB, CONO:OLD.MASTER
                  ERRMSG = "CANNOT LOCATE MASTER JOB - " : OLD.MASTER
                  GOSUB 91000
                  GOTO 502
               END
               LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING JFND ELSE
                  RELEASE JOB, CONO : OLD.MASTER
                  GOTO 502
               END
               JOB.SUBS = DELETE(JOB.SUBS,1,JFND,0)
               MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
502IF          OLD.CUST = CUR.CUST THEN GOTO 503
               MATREADU CUST.REC FROM CUSTOMER, CONO : OLD.CUST ELSE
                  RELEASE CUSTOMER, CONO : OLD.CUST
                  ERRMSG = "CANNOT LOCATE CUSTOMER - " : OLD.CUST
                  GOSUB 91000
                  GOTO 503
               END
               LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE
                  RELEASE CUSTOMER, CONO : OLD.CUST
                  GOTO 503
               END
               CUST.JOB = DELETE(CUST.JOB,1,JFND,0)
               CUST.JOB.BAL = DELETE(CUST.JOB.BAL,1,JFND,0)
               MATWRITE CUST.REC ON CUSTOMER , CONO:OLD.CUST
503IF          CUR.MASTER = JOB.NUM THEN GOTO 504
               MATREADU JOB.REC FROM JOB, CONO : CUR.MASTER ELSE
                  RELEASE JOB, CONO:CUR.MASTER
                  ERRMSG = "CANNOT LOCATE MASTER JOB - " : CUR.MASTER
                  GOSUB 91000
                  GOTO 505
               END
               IF JOB.CUST # CUR.CUST THEN
                  ERRMSG = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - " : JOB.CUST
                  GOSUB 91000
                  RELEASE JOB, CONO : CUR.MASTER
                  GOTO 505
               END
               IF JOB.MASTER = "" THEN JOB.MASTER = CUR.MASTER
               IF JOB.MASTER # CUR.MASTER THEN
                  ERRMSG = "MASTER JOB CANNOT BE A SUB JOB"
                  GOSUB 91000
                  RELEASE JOB, CONO : CUR.MASTER
                  GOTO 505
               END
               LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING SFND ELSE
                  JOB.SUBS<1,SFND> = JOB.NUM
               END
504MATREADU    CUST.REC FROM CUSTOMER, CONO : CUR.CUST ELSE
               ERRMSG = "CANNOT LOCATE CUSTOMER - " : CUR.CUST
               GOSUB 91000
               IF CUR.MASTER = JOB.NUM THEN GOTO 505
               RELEASE JOB, CONO : CUR.MASTER
505IF          OLD.MASTER = CUR.MASTER THEN GOTO 506
               MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE
                  RELEASE JOB, CONO:OLD.MASTER
                  GOTO 506
               END
               LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING JFND ELSE NULL
               JOB.SUBS<1,JFND> = JOB.NUM
               MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
506MAT         JOB.REC = MAT SAVE.JOB
               IF OLD.CUST = CUR.CUST THEN GOTO 510
               MATREADU CUST.REC FROM CUSTOMER, OLD.CUST ELSE GOTO 510
               LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
               CUST.JOB<1,JFND> = JOB.NUM
               CUST.JOB.BAL<1,JFND> = QUOTED.AMT
               MATWRITE CUST.REC ON CUSTOMER, CONO : OLD.CUST
               GOTO 510
            END
            IF CUR.MASTER # JOB.NUM THEN
               MATWRITE JOB.REC ON JOB, CONO : CUR.MASTER
            END
            MAT JOB.REC = MAT SAVE.JOB
            LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
            CUST.JOB<1,JFND> = JOB.NUM
            CUST.JOB.BAL<1,JFND> = QUOTED.AMT
            MATWRITE CUST.REC ON CUSTOMER , CONO : CUR.CUST
            MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
            IF SAVE.INV.JS.REC # '' THEN
               FOR M = 1 TO MCNT
                  JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
                  MATREADU INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
                     MAT INV.JS.REC = ''
                  END
                  IJS.JOB.CUST = JOB.CUST
                  IJS.REQ.DATE = SAVE.INV.JS.REC<M,1>
                  IJS.REQ.AMT = SAVE.INV.JS.REC<M,2>
                  IJS.REQ.QTY = SAVE.INV.JS.REC<M,3>
                  MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID
               NEXT M
            END
            RESV.ACTION = 'A'
            GOSUB 600
            MATREADU JOCS.REC FROM JOB.CREDIT.STATS,CONO:JOB.NUM ELSE MAT JOCS.REC=''
            IF PREV.CRED.AUTH # JOB.CREDIT THEN
               AVAIL = ""
               BEGIN CASE
                  CASE CUST.CREDIT = "E"
                     AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - QUOTED.AMT
                  CASE CUST.CREDIT = "CASH"
                     AVAIL = CUST.AR.BAL + CUR.JOB.BAL + QUOTED.AMT
               END CASE
               JOCS.CRED.CODE = INSERT(JOCS.CRED.CODE,1,1,0,CUST.CREDIT)
               JOCS.CRED.AUTH = INSERT(JOCS.CRED.AUTH,1,1,0,JOB.CREDIT)
               JOCS.CUST.NO = INSERT(JOCS.CUST.NO,1,1,0,JOB.CUST)
               JOCS.CRED.AVAIL = INSERT(JOCS.CRED.AVAIL,1,1,0,AVAIL)
               JOCS.CRED.LIMIT = INSERT(JOCS.CRED.LIMIT,1,1,0,CUST.CR.LIMIT)
               JOCS.CHG.DATE = INSERT(JOCS.CHG.DATE,1,1,0,DATE())
               MATWRITE JOCS.REC ON JOB.CREDIT.STATS, CONO:JOB.NUM
            END ELSE
               RELEASE JOB.CREDIT.STATS,CONO:JOB.NUM
            END
            MATWRITE JOB.REC ON JOB , CONO : JOB.NUM
            IF CO.JES = "Y" THEN
               CALL JOB.BOOK.SUB (CONO,"3",JOB.NUM,OLD.EST,JOB.EST,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
            END
            MORE = 0
510*
         CASE REQUEST="TR"
            ECD.SCRN.NO = 3
            ECD.ACTION=2
            CALL SCRN.EDIT
            SCV.REC(1)<3>=JOB.NUM
            SCV.REC(16)<3>=JOB.DESC<1,1>
            SCV.REC(2)<3>=JOB.CUST
            SCV.REC(3)<3>=CUST.NAME
            SCV.REC(4)<3>=JOB.SLSMN
            SCV.REC(5)<3>=SALS.NAME
            CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG)
* CALL JOB.TRACK.Ma(PROG.FLAG,INVOICED.FLAG)
            SCV.REC(14)<1>=JOB.TRACK.DATE<1,4>
            ECD.NUM=8
            GOSUB 20000
            ECD.SCRN.NO = 1
            GOSUB 30500
         CASE REQUEST='CA' OR REQUEST='FI'
            MORE = 0
         CASE 1
            ERRMSG= "Invalid  Entry - Try Again!"
            GOSUB 91000
      END CASE
      WHILE MORE DO REPEAT
      GOTO 100
600*
      RESV.LOC = 0
      CALL JOB.RESV.SUB(RESV.ACTION,RESV.LOC,CONO,JOB.NUM)
      MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
      FOR M = MCNT TO 1 STEP -1
         IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
            JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
            MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
               JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
               JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
               JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
               JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
               JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
               JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
               JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
               JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
               JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
            END
         END
      NEXT M
      RETURN
