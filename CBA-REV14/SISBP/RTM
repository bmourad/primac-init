SUBROUTINE RTM(DTMID)
***********************************************************************
*  SPECIAL ROUTINE TO ROUND DAILY TIME ENTRIES FROM SHOP FLOOR
***********************************************************************
*Yakub 12/18/2006 *  Read CONTROL file and Round LOG ON and LOG OFF times 

*COPY>JCS.CPYLIB>DAILY.TIME.MATL
*COPY>CPYLIB>CHAR
*
   DIM RND.REC(4)
   EQU STR.TIME            TO RND.REC(1)
   EQU BFR.TIME            TO RND.REC(2)
   EQU AFT.TIME            TO RND.REC(3)
   EQU RND.TIME            TO RND.REC(4)

   OPEN '','DAILY.TIME.MATL' TO DAILY.TIME.MATL ELSE
      ERRMSG = 'DAILY.TIME.MATL FILE IS MISSING'
      CRT ERRMSG: ; INPUT DKVAR: ; STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    CRT ERRMSG: ; INPUT DKVAR1: ; STOP
   END
 
   CONO.RTM =''
   MATREADU DTM.REC FROM DAILY.TIME.MATL,DTMID ELSE RETURN
   CONO.RTM = DTMID[1,3]
   MATREADU RND.REC FROM CONTROL,CONO.RTM:'JCS.RTM' ELSE RETURN

   DTM.ACT.TIME.ST = DTM.TIME.ST
   DTM.ACT.TIME = DTM.TIME
   
 BEG_TIME="";END_TIME="";  HR="";MM="";ITIME="";IPTR="";RND_LOGIN = "";RND_LOGOFF = ""
 FOR IPTR = 1 TO DCOUNT(STR.TIME,VM)
	   HR = STR.TIME<1,IPTR>[1,2]
	   MM = STR.TIME<1,IPTR>[3,2]
	   IF MM = 00 THEN
		HR = HR - 1
		MM = 60
		STR.TIME<1,IPTR> = HR:MM
	   END ELSE
	       STR.TIME<1,IPTR> = HR:MM
	   END
	   BEG_TIME<1,IPTR> = STR.TIME<1,IPTR> - BFR.TIME<1,IPTR>
  NEXT IPTR 

 FOR IPTR = 1 TO DCOUNT(RND.TIME,VM)

	HR = RND.TIME<1,IPTR>[1,2]
	MM = RND.TIME<1,IPTR>[3,2]

	MM = MM + AFT.TIME<1,IPTR>

	IF MM >= 60 THEN
	   MM = MM - 60
	   HR = HR + 1
	END 
	ITIME = HR:MM
	END_TIME<1,IPTR> = ITIME
NEXT IPTR

RAWSTART='' ; RAWEND='' ; FIRST.ST.TIME=0 ;LAST.TIME = '';CNT=''
   CNT = DCOUNT(DTM.TYPE,VM)
   LAST.TIME = CNT
   FOR II = 1 TO LAST.TIME WHILE RAWSTART=""
      IF DTM.TIME.ST<1,II> # "" AND RAWSTART = "" THEN
         IF DTM.TIME.ST<1,II> # DTM.TIME<1,II> OR CNT = 1 THEN 
            RAWSTART = DTM.TIME.ST<1,II>"R%4"
            FIRST.ST.TIME = II
         END 
      END
   NEXT II

FOR IPTR = 1 TO DCOUNT(BEG_TIME,VM) 
   IF (RAWSTART GT BEG_TIME<1,IPTR>) AND (RAWSTART LT END_TIME<1,IPTR>) THEN
          RND_LOGIN = RND.TIME<1,IPTR>
   END 
NEXT IPTR
 IF RND_LOGIN # "" THEN
	DTM.TIME.ST<1,FIRST.ST.TIME> = RND_LOGIN
 END
 CNT.LOFF = '';LOGOFF = ''
 CNT.LOFF= DCOUNT(DTM.TYPE,VM)
 LOGOFF = DTM.TIME<1,CNT.LOFF>"R%4"
   FOR IPTR = 1 TO DCOUNT(END_TIME,VM)
	   IF ( LOGOFF GT BEG_TIME<1,IPTR> ) AND ( LOGOFF LT END_TIME<1,IPTR> ) THEN
		  RND_LOGOFF = RND.TIME<1,IPTR>
	   END
   NEXT IPTR
 IF RND_LOGOFF # "" THEN
	DTM.TIME<1,CNT.LOFF> = RND_LOGOFF
 END
 FOR PP = 1 TO CNT
      ST=DTM.TIME.ST<1,PP>"R%4"
      ET=DTM.TIME<1,PP>"R%4"
      IF ET < ST THEN ET=ET+2400
      ELAP.MIN=(INT(ET/100)*60+MOD(ET,100))-(INT(ST/100)*60+MOD(ST,100))
      ELAP.HRS=INT(ELAP.MIN*100/60+0.5)
      TC=DTM.TIME.CODE<1,PP>
      BEGIN CASE
         CASE TC="01"
            DTM.REG.TIME<1,PP>=ELAP.HRS
         CASE TC="02"
            DTM.OVR.TIME<1,PP>=ELAP.HRS
         CASE TC="03"
            DTM.DUB.TIME<1,PP>=ELAP.HRS
         CASE 1
            DTM.REG.TIME<1,PP>=ELAP.HRS
      END CASE
      DTM.LAPS.TIME<1,PP>=ELAP.HRS
  NEXT PP
  MATWRITE DTM.REC ON DAILY.TIME.MATL,DTMID
   GOTO 99999
   **---- End Of Program
99999*
   RETURN
