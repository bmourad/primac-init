******************
*  REBUILD.SIS_INPUT
********************
*COPY>SIS.CPYLIB>SISMSG
*COPY>SIS.CPYLIB>SIS_TRANS
*COPY>CPYLIB>CHAR
*
*---- PRE-INITIALIZATION
*
   PROMPT ""
   PROCREAD PARAM ELSE PARAM = ""
   BEGIN CASE
      CASE @USER.TYPE = 1
         RMODE = "PHANTOM"
      CASE PARAM<1> = "T"
         RMODE = "T"
      CASE 1
         RMODE = "BATCH"
   END CASE
   SINGLE_MODE = 1
*
*---- OPEN ALL FILES
*
   OPEN "","SIS_CONTROL" TO SIS_CONTROL ELSE
      ERRMSG = "CANNOT OPEN SIS_CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SIS_INPUT" TO SIS_INPUT ELSE
      ERRMSG = "CANNOT OPEN SIS_INPUT FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SIS_OUTPUT" TO SIS_OUTPUT ELSE
      ERRMSG = "CANNOT OPEN SIS_OUTPUT FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SIS_TRANS" TO SIS_TRANS ELSE
      ERRMSG = "CANNOT OPEN SIS_TRANS FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SIS_LOG" TO SIS_LOG ELSE
      ERRMSG = "CANNOT OPEN SIS_LOG FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT LOCATE CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT LOCATE COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SIS_OUTPUT.REBUILD" TO SIS_OUTPUT.REBUILD ELSE
      ERRMSG = "CANNOT OPEN SIS_OUTPUT.REBUILD FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
   DASHES = STR("-",80)
   KILL_PROCESS = 0
   REC_COUNT = -1
   SIS_STMT = "SSELECT SIS_OUTPUT"
   CONO = ""
   SKIP_TRN = 1
*
   KILL_PROCESS = 1
   FOR I = 1 TO 5 WHILE KILL_PROCESS
      READU TREC FROM SIS_CONTROL, "MSG_LOCK" THEN
         KILL_PROCESS = 0
      END LOCKED
         KILL_PROCESS = 1
      END ELSE
         KILL_PROCESS = 0
      END
   NEXT I
   IF KILL_PROCESS THEN GOTO 99999
   KILL_PROCESS = 0
   CDATE = DATE()
   CTIME = TIME()
   IF CTIME < 10 THEN CDATE = DATE()
   TREC = "REBUILD STARTED ON ":OCONV(CDATE,"D2/"):" AT ":OCONV(CTIME,"MTS")
   WRITEU TREC ON SIS_CONTROL, "MSG_LOCK"
*
   READU TREC FROM SIS_CONTROL, "BLD_CNTL" ELSE TREC = ""
   TREC = ""
   TREC<2> = "REBUILD STARTED ON ":OCONV(CDATE,"D2/"):" AT ":OCONV(CTIME,"MTS")
   TREC<3> = RMODE
   WRITE TREC ON SIS_CONTROL, "BLD_CNTL"
*
   IF RMODE # "PHANTOM" THEN
      SLINE = CS
      SLINE = SLINE:@(0,0):"PRIMAC"
      SLINE = SLINE:@(20,0):"Shop Floor Information System Message Server"
      SLINE = SLINE:@(72,0):OCONV(CDATE,"D2/")
      SLINE = SLINE:@(30,0):"REBUILD SIS_INPUT"
      SLINE = SLINE:@(0,1):DASHES
      SLINE = SLINE:@(0,20):DASHES
      SLINE = SLINE:@(0,22):DASHES
      CRT SLINE:
   END
*
*---- PROCESSING
*
   LOOP
      BEGIN CASE
         CASE KILL_PROCESS
         CASE REC_COUNT = 0
            SLEEP 5
            GOSUB 1000
         CASE 1
            REC_COUNT = 0
            GOSUB 1000
      END CASE
   UNTIL KILL_PROCESS DO
      IF RMODE # "PHANTOM" THEN
         CRT @(0,10):CL:SIS_STMT:
      END
      UDTEXECUTE SIS_STMT CAPTURING SCREENDATA
      DONE = 0
      LOOP
         GOSUB 1000
         IF KILL_PROCESS THEN
            DONE = 1
         END ELSE
            READNEXT ID ELSE DONE = 1
         END
      UNTIL DONE DO
         IF RMODE # "PHANTOM" THEN
            CRT @(0,10):CL:"PROCESSING SIS_OUTPUT ":ID
         END
         MATREADU SISMSG_REC FROM SIS_OUTPUT, ID THEN
* PROCESS FOUND RECORD
            GOSUB 2000
            IF SKIP_TRN THEN
               RELEASE SIS_OUTPUT, ID
            END ELSE
               DELETE SIS_OUTPUT, ID
            END
         END LOCKED
* SKIP LOCKED RECORD (Multi SISMSG Process ???!!!)
         END ELSE
* Record Not Found
            RELEASE SIS_OUTPUT, ID
         END
      REPEAT
      IF KILL_PROCESS THEN GOTO 199
      IF SINGLE_MODE = 1 THEN
         IF REC_COUNT = 0 THEN
            KILL_PROCESS = 1
         END
      END
199*
   REPEAT
   CDATE = DATE()
   CTIME = TIME()
   IF CTIME < 10 THEN CDATE = DATE()
   READU TREC FROM SIS_CONTROL, "BLD_CNTL" ELSE TREC = ""
   TREC = ""
   TREC<2> = "REBUILD STOPPED ON ":OCONV(CDATE,"D2/"):" AT ":OCONV(CTIME,"MTS")
   WRITE TREC ON SIS_CONTROL, "BLD_CNTL"
   GOTO 99999
*
*---- CHECK AND SETUP KILL_PROCESS
*
1000*
   IF KILL_PROCESS THEN RETURN
   READ TREC FROM SIS_CONTROL, "BLD_CNTL" ELSE TREC = ""
   IF TREC<1> = "STOP" THEN KILL_PROCESS = 1
   RETURN
*
*---- WRITE SIS_OUTPUT
*
2000*
   SKIP_TRN = 1
*   CHECK SIS_OUTPUT RECORD IF VALID FOR REBUILD
   BEGIN CASE
      CASE SISMSG_SERVER = ""
         GOTO 2999
      CASE SISMSG_CLIENT = ""
         GOTO 2999
      CASE SISMSG_MESSAGE = "DownLoad"
         GOTO 2999
      CASE SISMSG_MESSAGE # SISMSG_ORGID
         GOTO 2999
      CASE SISMSG_ERROR # "LOST"
         GOTO 2999
      CASE SISMSG_FILE # "SIS_Trans"
         GOTO 2999
      CASE SISMSG_ITEM = ""
         GOTO 2999
      CASE SISMSG_ORGID = ""
         GOTO 2999
      CASE 1
   END CASE
   NEWID = SISMSG_ORGID
*   CHECK IF SIS_TRANS IS NOT LOST
   MATREADU SISTRN_REC FROM SIS_TRANS, NEWID ELSE
      MAT SISTRN_REC = ""
   END
*   CHECK IF THE SIS_TRANS MATCH THE SIS_OUTPUT
   BEGIN CASE
      CASE SISTRN_TRANSID # SISMSG_ITEM
         GOTO 2888
      CASE SISTRN_CONO # SISMSG_CONO
         GOTO 2888
      CASE SISTRN_SERVER # SISMSG_SERVER
         GOTO 2888
      CASE SISTRN_CLIENT # SISMSG_CLIENT
         GOTO 2888
      CASE 1
   END CASE
*   CHECK IF SIS_OUTPUT.REBUILD EXIST
   READU DUMMY FROM SIS_OUTPUT.REBUILD, ID THEN
      RELEASE SIS_OUTPUT.REBUILD, ID
      GOTO 2888
   END
*   CHECK IF SIS_INPUT EXIST
   READU DUMMY FROM SIS_INPUT, NEWID THEN
      RELEASE SIS_OUTPUT.REBUILD, ID
      RELEASE SIS_INPUT, NEWID
      GOTO 2888
   END
*   WRITE SIS_OUTPUT.REBUILD
   MATWRITE SISMSG_REC ON SIS_OUTPUT.REBUILD, ID
*   WRITE SIS_INPUT
   SISMSG_MESSAGE = "ReBuild"
   SISMSG_PROCESSED = ""
   SISMSG_ORGID = ""
   SISMSG_ERROR = ""
   MATWRITE SISMSG_REC ON SIS_INPUT, NEWID
   REC_COUNT += 1
   SKIP_TRN = 0
2888*
   RELEASE SIS_TRANS, NEWID
   DUMMY = ""
2999*
   RETURN
*
*---- ERROR ROUTINE
*
90000*
   IF RMODE # "PHANTOM" THEN
      CRT @(0,23):CL:ERRMSG:
      INPUT REPLY,1:
      CRT @(0,23):CL:
   END
   RETURN
*
*---- END OF PROGRAM
*
99999*
   STOP
END
