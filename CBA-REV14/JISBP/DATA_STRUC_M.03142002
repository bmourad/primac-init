*COPY>CPYLIB>COM1
*COPY>JIS.CPYLIB>COM_DATA_STRUC_M
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* Revision      - [10.0]
* Revision Date - 03/22/94
* System        - PRIMAC
* Library       - JISBP/DATA_STRUC_M
* Author        - Ziad Yamout, VERCOM Software, Inc.
* MOD DT 8/28/96
*T21177 diane 02/10/1997 * REV11 UPG
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>PMC.CPYLIB>MENUS.CONTROL
*COPY>JIS.CPYLIB>PFX_FILES
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>JIS.CPYLIB>SYS_FIELDS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SET UP SYSCOM
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- Open required Files
*
  OPEN "","SYS_FILES" TO SYS_FILES ELSE
      ERRMSG = "Cannot locate the SYS_FILES file"
      GOTO 93000
  END
  OPEN "","PFX_FILES" TO PFX_FILES ELSE
      ERRMSG = "Cannot locate the PFX_FILES file"
      GOTO 93000
  END
  OPEN "","SYS_FIELDS" TO SYS_FIELDS ELSE
      ERRMSG = "Cannot locate the SYS_FIELDS file"
      GOTO 93000
  END
  OPEN "","SYS_FLD_HMSG" TO SYS_FLD_HMSG ELSE
      ERRMSG = "Cannot locate the SYS_FLD_HMSG file"
      GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate the CONTROL file"
      GOTO 93000
  END
  OPEN "","JIS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "Cannot locate the JIS.SCREENS file"
      GOTO 93000
  END
*   OPEN "","DEV.SCREENS" TO SECOND.SCREENS ELSE
*      ERRMSG = "Cannot locate the DEV.SCREENS file"
*      GOTO 93000
*   END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "Cannot locate the XREF.DATA file"
      GOTO 93000
  END
  OPEN "","PREFIX" TO PREFIX ELSE
      ERRMSG = "Cannot locate the PREFIX file"
      GOTO 93000
  END
*
*---- Get setup variables
*
  MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
      ERRMSG = "Cannot locate the CONTROL, MENUS.CONTROL record"
      GOTO 93000
  END
  CNT = COUNT(PRIMAC.PATH,"/") + 1
  IF M.ACCOUNT # FIELD(PRIMAC.PATH,"/",CNT) THEN
      ERRMSG = "PRIMAC Control setup error ?"
      GOSUB 91000; GOTO 99999
  END
  CNT = COUNT(CBA.PATH,"/") + 1
  CBA.ACCT = FIELD(CBA.PATH,"/",CNT)
  PORT_NO = "TTY"; CALL SYSVARS.SUB(PORT_NO)
  DIR_NAME = "ACCT"; CALL SYSVARS.SUB(DIR_NAME)
*
  PMC.ACCTS = "CBA"
  PMC.ACCTS<2> = "PMC"
  SYSLINES = DCOUNT(VALID.SYS,VM)
  FOR I = 1 TO SYSLINES
      PMC.ACCTS<2+I> = VALID.SYS<1,I>
  NEXT I
  LOCATE "RES" IN PMC.ACCTS,1 SETTING RESLOC THEN
      LOCATE "JES" IN PMC.ACCTS,1 SETTING FND THEN
          PMC.ACCTS = DELETE(PMC.ACCTS,RESLOC,0,0)
          SYSLINES = SYSLINES - 1
      END
  END
  SYSLINES = SYSLINES + 2
*
*---- Initialize SCRN.EDIT, EDIT.SUB, and other variables
*
*   MAT EDIT.COM = ""
*   TYP = 0; CALL EDIT.SUB; FILL = "#"
*
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 4
  ECD.SCRN.NAME = "DATA_STRUC_M"
  ECD.SCRN.NAME<2> = "DATA_STRUC_I"
  ECD.SCRN.NAME<3> = "DATA_ID_M"
  ECD.SCRN.NAME<4> = "DATA_FIELD_M"
  ECD.SCRN.NAME<5> = "DATA_FIELD_LNK_M"
  ECD.SCRN.NAME<6> = "DATA_XREF_M"
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1; ESN = ECD.SCRN.NO
  MAT SCV.REC = ""
  GUIFORM = ""
*
  BEGIN.PAGE = 9; PAGE.SIZE = 11
  LINE.SPACE = 1
*
  CPYLIB_NAME = ""; MAT CPYLIB_FILE = ""
  GEN_LNK_IDS = "CO"
*
*---- Display screen header
*
  ECD.ACTION = 2; CALL SCRN.EDIT
*
*---- Get Table name
100*
  ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
      CASE ECD.RET.VALUE = "END"
          GOTO 99999
      CASE ECD.RET.VALUE = "???" OR ECD.RET.VALUE = ""
110*
          ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
          SCV.REC(ECD.NUM) = ""
          BEGIN CASE
              CASE ECD.RET.VALUE = "END"
                  GOTO 100
              CASE ECD.RET.VALUE = ""
                  ECD.RET.VALUE = "^IGNORE^"
              CASE 1
                  LOCATE ECD.RET.VALUE IN PMC.ACCTS,1 SETTING FND ELSE
                      ERRMSG = "Cannot locate Account Initials # ":ECD.RET.VALUE
                      GOSUB 91000; GOTO 110
                  END
          END CASE
          MAT GEN.XREF.REC = ""
          GXR.NAME = "SYS_FILES"
          GXR.FILE = SYS_FILES
          GXR.VALUE1 = ECD.RET.VALUE
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          ECD.ACTION = 2; CALL SCRN.EDIT
          SCV.REC(1) = GXR.ID
          ECD.ACTION = 3; CALL SCRN.EDIT
          IF GXR.ID = "" THEN GOTO 100
          TABLE_ID = GXR.ID
      CASE 1
          TABLE_ID = ECD.RET.VALUE
  END CASE
  MATREADU SFR.REC FROM SYS_FILES, TABLE_ID ELSE
      RELEASE SYS_FILES, TABLE_ID
      ERRMSG = "Cannot locate TABLE # ":TABLE_ID
      GOSUB 91000; GOTO 100
  END
  BEGIN CASE
      CASE SFR.TYPE # "D" AND SFR.TYPE # "O"
          RELEASE SYS_FILES, TABLE_ID
          ERRMSG = "TABLE (":TABLE_ID:") is defined as a utility table"
          GOSUB 91000; GOTO 100
      CASE SFR.CPYLIB = ""
          RELEASE SYS_FILES, TABLE_ID
          ERRMSG = "The Data Structure has not been set for TABLE # ":TABLE_ID
          GOSUB 91000; GOTO 100
  END CASE
  LOCATE SFR.CPYLIB IN CPYLIB_NAME,1 SETTING CPLB_LOC ELSE
      OPEN "", SFR.CPYLIB TO CPYLIB_FILE(CPLB_LOC) ELSE
          RELEASE SYS_FILES, TABLE_ID
          ERRMSG = "Cannot locate the (":SFR.CPYLIB:") Data structue"
          GOSUB 91000; GOTO 100
      END
      CPYLIB_NAME<CPLB_LOC> = SFR.CPYLIB
  END
  READ CPYLIB_REC FROM CPYLIB_FILE(CPLB_LOC), SFR.CPLB.NAME ELSE
      RELEASE SYS_FILES, SFR.CPLB.NAME
      ERRMSG = "Cannot locate the Data Structure for TABLE # ":SFR.CPLB.NAME
      GOSUB 91000; GOTO 100
  END
*
  OPEN "",TABLE_ID TO DATA_FILE_PTR ELSE
      RELEASE SYS_FILES, TABLE_ID
      ERRMSG = "Cannot locate the (":TABLE_ID:") data file"
      GOSUB 91000; GOTO 100
  END
  OPEN "DICT", TABLE_ID TO DICT_FILE_PTR ELSE
      RELEASE SYS_FILES, TABLE_ID
      ERRMSG = "Cannot locate the (":TABLE_ID:") dict file"
      GOSUB 91000; GOTO 100
  END
*
  GOSUB 8500
  SCV.REC(2) = SFR.ACCT
  SCV.REC(3) = SFR.D.NAME
*
  PFX = ""; FLD_REC = CPYLIB_REC
  CALL CPYLIB_SUB(FLD_REC,PFX,ARRAY_NAME,ARRAY_SIZE,ERRMSG)
  IF ERRMSG # "" THEN
      GOSUB 91000
      CPYLIB.NOT.OK = 1
      LINES = 0; LN = 1
  END ELSE
      MATREAD PFR.REC FROM PFX_FILES, PFX ELSE
          MAT PFR.REC = ""
          PFR_FILE = TABLE_ID
      END
      IF PFR_FILE # TABLE_ID THEN
          ERRMSG = "Prefix (":PFX:") has already been setup for table (":PFR_FILE:")"
          GOSUB 91000
          CPYLIB.NOT.OK = 1
      END ELSE
          CPYLIB.NOT.OK = 0
      END
      LINES = DCOUNT(FLD_REC,AM); LN = 1
      SCV.REC(4) = ARRAY_SIZE
      SCV.REC(5) = PFX
      SCV.REC(6) = ARRAY_SIZE - LINES
      FOR I = 1 TO LINES
          IF FLD_REC<I> = "" THEN
              SCV.REC(6) = SCV.REC(6) + 1
          END
      NEXT I
  END
  SCV.REC(49) = INT(LINES/PAGE.SIZE+.9) "R%2"
  GOSUB 8100
*
*---- Prompt line
*
  MORE = 1
  LOOP
      ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
          CASE OPTION = "E" OR OPTION = "END"
              RELEASE SYS_FILES, TABLE_ID
              MORE = 0
          CASE OPTION = "F"
              MATWRITE SFR.REC ON SYS_FILES, TABLE_ID
              CUR_SFR_ID = SFR.ID
              CNT = DCOUNT(SFR.ID,VM)
              LNK_ID = ""; LNK_I_ID = ""
              FOR I = 1 TO CNT
                  BEGIN CASE
                      CASE SFR.ID.TYPE<1,I> = "D"
                          LOCATE SFR.ID<1,I> IN GEN_LNK_IDS,1 SETTING FND ELSE
                              LNK_ID<-1> = SFR.ID<1,I>
                          END
                      CASE SFR.ID.TYPE<1,I> = "I"
                          LOCATE SFR.ID<1,I> IN GEN_LNK_IDS,1 SETTING FND ELSE
                              LNK_I_ID<1,1,-1> = SFR.ID<1,I>
                          END
                  END CASE
              NEXT I
              CNT = DCOUNT(LNK_ID,AM)
              FOR I = 1 TO CNT
                  MATREADU PFR.REC FROM PFX_FILES, LNK_ID<I> THEN
                      MATREAD SFR.REC FROM SYS_FILES, PFR_FILE THEN
                          IF SFR.ID = CUR_SFR_ID THEN
                              LOCATE TABLE_ID IN PFR_MID_FILE<1>,1 SETTING FND ELSE
                                  PFR_MID_FILE<1,FND> = TABLE_ID
                              END
                          END ELSE
                              LOCATE TABLE_ID IN PFR_ID_FILE<1>,1 SETTING FND ELSE
                                  PFR_ID_FILE<1,FND> = TABLE_ID
                              END
                              PFR_ID_OTH<1,FND> = LNK_I_ID
                              LIMIT = I - 1
                              FOR J = 1 TO LIMIT
                                  PFR_ID_OTH<1,FND,J> = LNK_ID<J>
                              NEXT J
                              LIMIT = I + 1
                              FOR J = LIMIT TO CNT
                                  PFR_ID_OTH<1,FND,J-1> = LNK_ID<J>
                              NEXT J
                          END
                          MATWRITE PFR.REC ON PFX_FILES, LNK_ID<I>
                      END ELSE
                          RELEASE PFX_FILES, LNK_ID<I>
                      END
                  END ELSE
                      RELEASE PFX_FILES, LNK_ID<I>
                  END
              NEXT I
              MORE = 0
          CASE OPTION = "V"
              MAT GEN.XREF.REC = ""
              GXR.NAME = "XREF.CPYLIB"
              GXR.XREF = CPYLIB_FILE(CPLB_LOC)
              GXR.FILE = GXR.XREF
              GXR.SRCH.ID = TABLE_ID
              CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
              GOSUB 8000
          CASE OPTION = "I"
              ECD.SCRN.NO = ESN + 1
              CALL DATA_STRUC_I(TABLE_ID)
              ECD.SCRN.NO = ESN
              GOSUB 8000
          CASE OPTION = "X"
              ECD.SCRN.NO = ESN + 5
              CALL DATA_XREF_M
              ECD.SCRN.NO = ESN
              GOSUB 8000
          CASE OPTION = "D"
              MAT GEN.XREF.REC = ""
              GXR.NAME = "XREF.DICT.FLD"
              GXR.SORT.FILE = TABLE_ID
              GXR.FILE = DICT_FILE_PTR
              GXR.XREF = GXR.FILE
              CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
              GOSUB 8000
          CASE OPTION = "DA"
              MAT GEN.XREF.REC = ""
              GXR.NAME = "XREF.DICT"
              GXR.SORT.FILE = TABLE_ID
              GXR.FILE = DICT_FILE_PTR
              GXR.XREF = GXR.FILE
              CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
              GOSUB 8000
          CASE CPYLIB.NOT.OK
          CASE OPTION = "S" OR OPTION = "SF"
              LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
              IF LN > LINES THEN LN = 1
              GOSUB 7900
          CASE OPTION = "SR"
              LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
              IF LN < 1 THEN LN = 1
              GOSUB 7900
          CASE OPTION = "ST"
              LN = 1
              GOSUB 7900
          CASE OPTION = "SB"
              LN = LINES
              GOSUB 7900
          CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
              LN.NO = OPTION[2,99] + 0
              IF LN.NO < 1 OR LN.NO > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
              END ELSE
                  LN = LN.NO
                  GOSUB 7900
              END
          CASE OPTION = "ID"
              ECD.SCRN.NO = ESN + 2
              CALL DATA_ID_M(TABLE_ID,PFX)
              ECD.SCRN.NO = ESN
              GOSUB 8500; GOSUB 8000
          CASE NOT(NUM(OPTION))
              LOCATE OPTION IN FLD_REC,1 SETTING ATTNO THEN
                  P_X = 54; P_Y = SLN ; P_VALUE = DFD_LNK_FILE "L#25" ; P_OPT = ""
                  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                  MATREAD DFD.REC FROM SYS_FIELDS, PFX:"_":FLD_REC<ATTNO> ELSE
                      IF XXX THEN
                          ECD.SCRN.NO = ESN + 3
                      END ELSE
                          ECD.SCRN.NO = ESN + 4
                      END
                      FLD_ID = OPTION; OPTION = ATTNO
                      CALL DATA_FIELD_M(TABLE_ID,PFX,FLD_ID,OPTION)
                      ECD.SCRN.NO = ESN
                      GOSUB 8000
                  END
              END ELSE
                  ERRMSG = "Invalid entry, please re-enter"
                  GOSUB 91000
              END
          CASE OPTION < 1 OR OPTION > ARRAY_SIZE
              ERRMSG = "Out of range, please re-enter"
              GOSUB 91000
          CASE FLD_REC<OPTION> = ""
              ERRMSG = "This location is not defined yet!"
              GOSUB 91000
          CASE 1
              ECD.SCRN.NO = ESN + 3
              FLD_ID = FLD_REC<OPTION>
              CALL DATA_FIELD_M(TABLE_ID,PFX,FLD_ID,OPTION)
              ECD.SCRN.NO = ESN
              GOSUB 8000
      END CASE
  WHILE MORE DO REPEAT
  MAT SCV.REC = ""
  ECD.ACTION = 6; CALL SCRN.EDIT
  LINES = 0; LN = 1; OLD.START.LINE = 0
  GOTO 100
*
*---- Display scrolling lines
7900*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 7090
  OLD.START.LINE = START.LINE
  ECD.NUM = 48
  SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      FLD_NAME = FLD_REC<N>
      IF FLD_NAME = "" THEN
          FLD_NAME = "* * *   O P E N   * * *"
          MAT DFD.REC = ""
      END ELSE
          MATREAD DFD.REC FROM SYS_FIELDS, PFX:"_":FLD_NAME ELSE
              MAT DFD.REC = ""
          END
      END
      P_X = 0 ; P_Y = SLN ; P_VALUE = N "R%3" ; P_OPT = "CL"
      P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:FLD_NAME "L#25"
      BEGIN CASE
          CASE DFD_TYPE = "T"
              DESC = "Text"
          CASE DFD_TYPE = "C"
              DESC = "deCimal"
          CASE DFD_TYPE = "N"
              DESC = "Numeric"
          CASE DFD_TYPE = "A"
              DESC = "Alpha"
          CASE DFD_TYPE = "D"
              DESC = "Date"
          CASE DFD_TYPE = "L"
              DESC = "Logical"
          CASE DFD_TYPE = "P"
              DESC = "Pattern"
          CASE DFD_TYPE = "U"
              DESC = "Counter"
          CASE 1
              DESC = DFD_TYPE
      END CASE
      P_X := AM:30; P_Y := AM:SLN ; P_VALUE := AM:DESC "L#12"
      P_X := AM:43; P_Y := AM:SLN ; P_VALUE := AM:DFD_LVL "L#1"
      P_X := AM:46; P_Y := AM:SLN ; P_VALUE := AM:DFD_LEN "R#2"
      P_X := AM:50; P_Y := AM:SLN ; P_VALUE := AM:DFD_DEC "R#2"
      P_X := AM:54; P_Y := AM:SLN ; P_VALUE := AM:DFD_LNK_FILE "L#25"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
7090 RETURN
*
*---- Diplay screen options
8000*
  ECD.ACTION = 2; CALL SCRN.EDIT
8100*
  ECD.ACTION = 3; CALL SCRN.EDIT
  OLD.START.LINE = 0; GOSUB 7900
  RETURN
*
*---- Build variables
8500*
  IF SFR.ID.TYPE<1,1> = "T" THEN
      ID_DESC = '"':SFR.ID<1,1>:'"'
  END ELSE
      ID_DESC = SFR.ID<1,1>
  END
  CNT = DCOUNT(SFR.ID,VM)
  FOR I = 2 TO CNT
      IF SFR.ID.TYPE<1,I> = "T" THEN
          ID_DESC = ID_DESC:':"':SFR.ID<1,I>:'"'
      END ELSE
          ID_DESC = ID_DESC:":":SFR.ID<1,I>
      END
  NEXT I
  ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = ID_DESC
  RETURN
*
*---- Error routines
91000*
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
*
99999*
END
