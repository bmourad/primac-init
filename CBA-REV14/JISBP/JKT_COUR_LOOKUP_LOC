SUBROUTINE JKT_COUR_LOOKUP_LOC(CONO,ERRMSG,I_FNAME,I_FPTR,I_VNAME,I_VREC,I_SNAME,I_SREC,TID_LOC)
*COPY>CPYLIB>COM1

******************************************************************************
*                 written for Courier Corporation
*  
*  Revision Date -  09/23/98
*
*  Library       -  JISBP/JKT_COUR_LOOKUP_LOC
*
*  Author        -  Dave Markell
*
******************************************************************************
*
*  For use by JIS for Courier Job Tickets to look up the location for
*  the flats or dies for a given title id in a given plant.
*
*  This subroutine should be invoked for the IPREP1 form, which is the 
*  first time it is referenced and should be put into COURIER_FLD_130.
*
*  The following fields must be on the JIS form that utilizes this subroutine
*  and must be placed in the Passing Field Names section of the
*  Screen Subroutine Definition form are:
*
*     JOB_DIV -  the division (i.e. plant) in which the sub job is being done
*                     (JOB record attribute 6)
*
*     JOB_TITLE_ID - the title id to which the job is linked
*                     (JOB record attribute 111)                       
*
*     COURIER_FLD_011 - the component type (e.g. TEXT, COVER, JACKET)
*                          (COURIER_TKT record attribute 11 - from
*                              Header ticket screen)
*
*     COURIER_FLD_591 - the Company Number
*
*  A variable must be established and set to "F" for Flats or "D" for Die in the
*  Passing Variable Names section of the Screen Subroutine Definition form:
*
*     MEDIATYPE        
*
*   Since all retrieval of information from TITLE.ID and TITLE.ID.DET
*   is done within the logic of this subroutine, there is no need for the
*   passing these file names in the I_FNAMES variable
*
*
*  This subroutine's logic will get the list of ID's of any component detail
*  detail records for the Title ID from the TITLEID file's multivalued field
*  TITID_DETAIL field (attribute 20) and then use this list to read each such
*  record from the TITLE.ID.DET until it finds one whose
*
*   TITDT_DIV   (attribute 6) matches  JOB_DIV
*   TITDT_COMP  (attribute 3) matches  COURIER_FLD_011
*   TITDT_MEDIA (attribute 2) matches  the MEDIATYPE variable
*      
*  When it finds the first such matching record - it returns its
*  TITDT_LOC (attribute 7) by placing its value in the TID_LOC variable
*
*  If no such a component detail record is found, it returns a blank
*  TID_LOC variable
*
******************************************************************************
*
*
*---  Data Structure Libraries  ---
*
*COPY>COURIER.CPYLIB>TITLE.ID
*COPY>COURIER.CPYLIB>TITLE.ID.DET
*
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR

* Open for Title ID & Title ID Detail files required since are not standard
*   PRIMAC files accessible to JIS

      OPENFLAG = 0
      OPEN 'TITLE.ID' TO TITLE.ID ELSE OPENFLAG = 1
      IF OPENFLAG = 1 THEN
        ERRMSG = "CANNOT OPEN TITLE.ID FILE"
        GOTO 99999
        END
*
      OPEN 'TITLE.ID.DET' TO TITLE.ID.DET ELSE OPENFLAG = 1
      IF OPENFLAG = 1 THEN
        ERRMSG = "CANNOT OPEN TITLE.ID.DET FILE"
        GOTO 99999
      END
*
*  no need to set up FNAME/FPTR since no file names are being passed
*
*->     FNAME    = "TITLE.ID"
*->      FNAME<2> = "TITLE.ID.DET"
*->      FCNT = 2
*->      DIM FPTR(FCNT)
*->      EQU  TITLEID_FPTR    TO FPTR(1)
*->      EQU  TITLEIDDET_FPTR TO FPTR(2)
*
      VNAME    = "JOB_DIV"
      VNAME<2> = "JOB_TITLE_ID"
      VNAME<3> = "COURIER_FLD_011"
      VNAME<4> = "COURIER_FLD_591"
      VCNT = 4
      DIM VREC(VCNT)
      EQU JOB_DIV     TO VREC(1)
      EQU JOB_TITLEID TO VREC(2)
      EQU COMP_TYPE   TO VREC(3)
      EQU CONO        TO VREC(4)
*
      SNAME = "MEDIATYPE"
      SCNT = 1
      DIM SREC(SCNT)
      EQU MEDIA_SEL TO SREC(1)
*
* set up blank error message and return value
*
      ERRMSG = ""
      TID_LOC = "-- none --"
*
* no need to scan array of file names from Screen Subroutine Definition
*
*->      ICNT = 9
*->      FOR I = 1 TO FCNT
*->        LOCATE FNAME<I> IN I_FNAME,1 SETTING FND THEN
*->          FPTR(I) = I_FPTR<FND>
*->        END ELSE
*->          ERRMSG = "File (":FNAME<I>:") is required for this Subroutine"
*->          ICNT = 0
*->        END
*->      NEXT I
*->      IF ICNT = 0 THEN GOTO 99999
*
* scan array of field names passed on Screen Subroutine Definition
*   for each file name in VNAME dynamic array
*
      ICNT = 9
*
      FOR I = 1 TO VCNT
        LOCATE VNAME<I> IN I_VNAME,1 SETTING FND THEN
          VREC(I) = I_VREC<FND>
        END ELSE
          ERRMSG = "Data Field (":VNAME<I>:") is required for this Subroutine"
          ICNT = 0
        END
      NEXT I
      IF ICNT = 0 THEN GOTO 99999
*
* scan array of variable names passed on Screen Subroutine Definition
*   for each variable name in SNAME dynamic array
*
      ICNT = 9
      FOR I = 1 TO SCNT
        LOCATE SNAME<I> IN I_SNAME,1 SETTING FND THEN
          SREC(I) = I_SREC<FND>
        END ELSE
          ERRMSG = "Variable Field (":SNAME<I>:") is required for this Subroutine"
          ICNT = 0
        END
      NEXT I
      IF ICNT = 0 THEN GOTO 99999
*
* now that have all the passed arguments established execute the logic
*
*
* read  TITLE.ID record pointed to in JOB record
      MATREAD TITID.REC FROM TITLE.ID, CONO:JOB_TITLEID ELSE
        ERRMSG = "No TITLE ID record for this JOB [":CONO:JOB_TITLEID:"]"
        GOTO 99999
      END
* attribute 20 contains multi-value list of detail records
*
*  get count of detail records
      MCNT = DCOUNT(TITID.DETAIL,VM)
      K = 1
      FOR M = 1 TO MCNT WHILE K > 0
        MATREAD TITDT.REC FROM TITLE.ID.DET, CONO:TITID.DETAIL<1,M> ELSE
          ERRMSG = "No TITLE ID DETAIL for key [":CONO:TITID.DETAIL<1,M>:"]"
          K = -1
        END
        IF  TITDT.MEDIA = MEDIA_SEL  THEN
          IF (TITDT.COMP = COMP_TYPE) OR (MEDIA_SEL = "D")   THEN
            IF  TITDT.DIV = JOB_DIV      THEN
*             found a matching record - get location into return - set K = 0
*             to force exit from loop
              TID_LOC = TITDT.LOC
              K = 0
            END
          END
        END
      NEXT M
* get here either when found match & have set up return value w/ location
* or if was no title id detail for a an id in the title id's detail list
* or if exhausted detail records without finding a match

99999*
      RETURN
      END
