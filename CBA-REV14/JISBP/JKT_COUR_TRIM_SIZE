SUBROUTINE JKT_COUR_TRIM_SIZE(CONO,ERRMSG,I_FNAME,I_FPTR,I_VNAME,I_VREC,I_SNAME,I_SREC,SHOW_TRIM)
*COPY>CPYLIB>COM1

******************************************************************************
*                 written for Courier Corporation
*  
*  Revision Date -  10/06/98
*
*  Library       -  JISBP/JKT_COUR_TRIM_SIZE
*
*  Author        -  Dave Markell
*
******************************************************************************
*
*  For use by JIS for Courier Job Tickets to convert the Trim Width & Length
*  fields stored with decimal values in the Projection file to their
*  fractional equivalents.
*
*  This subroutine should be invoked for the IHEADER form, which is the 
*  first time it is referenced and should be put into COURIER_FLD_604
*
*  The following 2 fields must be on the JIS form that utilizes this subroutine
*  and must be placed in the Passing Field Names section of the
*  Screen Subroutine Definition form :
*
*     PROJ_TR_WID -  the Trim Width 
*                     (PROJECTION record attribute 3)
*     PROJ_TR_LEN -  the Trim Length
*                     (PROJECTION record attribute 4)
*
*   Since JIS does require a file name in the Passing File Names section
*   TITLE.ID should be placed there.
*
*  This subroutine uses the OCONV function to get each number as a text
*  string with a decimal value.  
*
*  For each dimension it breaks out the whole number and decimal value strings.  
*  It attempts to find the decimal value in the
*  TRIM_DECIMAL dimensioned array.  If it finds an exact match, it uses
*  the corresponding fraction at the same relative position in the
*  TRIM_FRACTION dimensioned array and concatenates it with the whole number
*  value in the WORK_WID or WORK_LEN variable that is used to build the return 
*  value to the  JIS form that invoked this subroutine.  
*  If no such exact match is found,  it uses "**/**" to show the user that the 
*  decimal value entered was not valid.
*
******************************************************************************
*
*
*---  Data Structure Libraries  ---
*
*COPY>COURIER.CPYLIB>TITLE.ID
*COPY>COURIER.CPYLIB>TITLE.ID.DET
*
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR

*
*  no need to set up FNAME/FPTR since no file names are being passed
*
*->     FNAME    = "TITLE.ID"
*->      FNAME<2> = "TITLE.ID.DET"
*->      FCNT = 2
*->      DIM FPTR(FCNT)
*->      EQU  TITLEID_FPTR    TO FPTR(1)
*->      EQU  TITLEIDDET_FPTR TO FPTR(2)
*
*

*
* set up blank error message and default return value (in case of no match)
*
      ERRMSG = ""
      SHOW_TRIM = "*-???-*"
*
* no need to scan array of file names from Screen Subroutine Definition
*
*->      ICNT = 9
*->      FOR I = 1 TO FCNT
*->        LOCATE FNAME<I> IN I_FNAME,1 SETTING FND THEN
*->          FPTR(I) = I_FPTR<FND>
*->        END ELSE
*->          ERRMSG = "File (":FNAME<I>:") is required for this Subroutine"
*->          ICNT = 0
*->        END
*->      NEXT I
*->      IF ICNT = 0 THEN GOTO 99999
*
* check 1st element of  array of field names passed on Screen Subroutine
*  Find the field names of PROJ_TR_WID or PROJ_TR_LEN in the I_VNAME array
*  and pick up the values of each from the corresponding slot in I_VREC
*
      CT_PASSED = 0
      TRIM_TYPE = "?"
      LOCATE "PROJ_TR_WID" IN I_VNAME,1 SETTING FND THEN
        RAW_WID = I_VREC<FND>
      END ELSE
        ERRMSG = "The field PROJ_TR_WID is required for this Subroutine"
        GOTO 99999
      END
      LOCATE "PROJ_TR_LEN" IN I_VNAME,1 SETTING FND THEN
        RAW_LEN = I_VREC<FND>
      END ELSE
        ERRMSG = "The field PROJ_TR_WID is required for this Subroutine"
        GOTO 99999
      END
*
* build dimensioned arrays of valid decimal values & their fractional equivalents
*
       DIM TRIM_DECIMAL(31)
       DIM TRIM_FRACTION(31)
*
       TRIM_DECIMAL(1)  = ".0310"
              TRIM_FRACTION(1) = "1/32"
       TRIM_DECIMAL(2)  = ".0630"
              TRIM_FRACTION(2) = "1/16"
       TRIM_DECIMAL(3)  = ".0940"
              TRIM_FRACTION(3) = "3/32"
       TRIM_DECIMAL(4)  = ".1250"
              TRIM_FRACTION(4) = "1/8"
       TRIM_DECIMAL(5)  = ".1560"
              TRIM_FRACTION(5) = "5/32"
       TRIM_DECIMAL(6)  = ".1880"
              TRIM_FRACTION(6) = "3/16"
       TRIM_DECIMAL(7)  = ".2190"
              TRIM_FRACTION(7) = "7/32"
       TRIM_DECIMAL(8)  = ".2500"
              TRIM_FRACTION(8) = "1/4"
       TRIM_DECIMAL(9)  = ".2810"
              TRIM_FRACTION(9) = "9/32"
       TRIM_DECIMAL(10)  = ".3130"
              TRIM_FRACTION(10) = "5/16"
       TRIM_DECIMAL(11)  = ".3440"
              TRIM_FRACTION(11) = "11/32"
       TRIM_DECIMAL(12)  = ".3750"
              TRIM_FRACTION(12) = "3/8"
       TRIM_DECIMAL(13)  = ".4060"
              TRIM_FRACTION(13) = "13/32"
       TRIM_DECIMAL(14)  = ".4380"
              TRIM_FRACTION(14) = "7/16"
       TRIM_DECIMAL(15)  = ".4690"
              TRIM_FRACTION(15) = "15/32"
       TRIM_DECIMAL(16)  = ".5000"
              TRIM_FRACTION(16) = "1/2"
       TRIM_DECIMAL(17)  = ".5310"
              TRIM_FRACTION(17) = "17/32"
       TRIM_DECIMAL(18)  = ".5630"
              TRIM_FRACTION(18) = "9/16"
       TRIM_DECIMAL(19)  = ".5940"
              TRIM_FRACTION(19) = "19/32"
       TRIM_DECIMAL(20)  = ".6250"
              TRIM_FRACTION(20) = "5/8"
       TRIM_DECIMAL(21)  = ".6560"
              TRIM_FRACTION(21) = "21/32"
       TRIM_DECIMAL(22)  = ".6880"
              TRIM_FRACTION(22) = "11/16"
       TRIM_DECIMAL(23)  = ".7190"
              TRIM_FRACTION(23) = "23/32"
       TRIM_DECIMAL(24)  = ".7500"
              TRIM_FRACTION(24) = "3/4"
       TRIM_DECIMAL(25)  = ".7810"
              TRIM_FRACTION(25) = "25/32"
       TRIM_DECIMAL(26)  = ".8130"
              TRIM_FRACTION(26) = "13/16"
       TRIM_DECIMAL(27)  = ".8440"
              TRIM_FRACTION(27) = "27/32"
       TRIM_DECIMAL(28)  = ".8750"
              TRIM_FRACTION(28) = "7/8"
       TRIM_DECIMAL(29)  = ".9060"
              TRIM_FRACTION(29) = "29/32"
       TRIM_DECIMAL(30)  = ".9380"
              TRIM_FRACTION(30) = "15/16"
       TRIM_DECIMAL(31)  = ".9690"
              TRIM_FRACTION(31) = "31/32"
*
*    in case of problems set up return value w/ just input arg's in "?"'s
*
       SHOW_TRIM = ""
*       
       NG_DIM = 0
       FOR J = 1 TO 2 STEP 1  
*
*          get NBR_TO_CVT as text string with 4 decimal places
*     
         IF J = 1 THEN
           TRIM_TO_CVT = OCONV(RAW_WID,"MD4")
           TRIM_DIM  = "WIDTH"
         END ELSE
           TRIM_TO_CVT = OCONV(RAW_LEN,"MD4")
           TRIM_DIM = "LENGTH"
         END
         
         GOSUB 4000                    ;* do conversion
*
         IF J = 1   THEN
           SHOW_TRIM = WORK_TRIM:" x "
         END ELSE
           SHOW_TRIM = SHOW_TRIM:WORK_TRIM 
         END
*
       NEXT
       GOTO 99999
*
*  4000 is routine to do the actual conversion
*
4000*
*
*  break off TRIM_TO_CVT into integer & decimal portions
*
       FIND_DEC_PT = INDEX(TRIM_TO_CVT,".",1)
       IF FIND_DEC_PT = 0 THEN
         ERRMSG = "NO DECIMAL POINT IN TRIM ":TRIM_DIM:" [":TRIM_TO_CVT:"]"
         WORK_TRIM = "?":TRIM_TO_CVT
         NG_DIM = 1
         RETURN
       END
       IF FIND_DEC_PT > 3 THEN
         ERRMSG = "WHOLE NUMBER GREATER THAN 99 - INVALID TRIM ":TRIM_DIM
         WORK_TRIM = "?":TRIM_TO_CVT
         NG_DIM = 1
         RETURN
       END
*
      BEGIN CASE
          CASE FIND_DEC_PT = 1 
            TRIM_INT = "0"
            TRIM_DEC = OCONV(TRIM_TO_CVT,"T1,5")
          CASE FIND_DEC_PT = 2
            TRIM_INT = OCONV(TRIM_TO_CVT,"T1,1")
            TRIM_DEC = OCONV(TRIM_TO_CVT,"T2,5")
          CASE FIND_DEC_PT = 3
            TRIM_INT = OCONV(TRIM_TO_CVT,"T1,2")
            TRIM_DEC = OCONV(TRIM_TO_CVT,"T3,5")
      END CASE
*
*
*    if decimal value is .0000 - nothing to convert - just return integer portion
*
      IF TRIM_DEC = ".0000" THEN
        WORK_TRIM = TRIM_INT
      END ELSE
*
*   else try to locate decimal portion in TRIM_DECIMAL array
*        
        DEC_SUB = 0
        FOR N = 1 TO 31 WHILE DEC_SUB = 0
          IF TRIM_DECIMAL(N) = TRIM_DEC THEN
           DEC_SUB = N
          END
        NEXT 
        IF DEC_SUB = 0 THEN
          TRIM_FRAC = "**/**"
        END ELSE
          TRIM_FRAC = TRIM_FRACTION(DEC_SUB)
        END
        WORK_TRIM = TRIM_INT : " " : TRIM_FRAC
      END
*
      RETURN   
*
*
99999*
      RETURN
      END
