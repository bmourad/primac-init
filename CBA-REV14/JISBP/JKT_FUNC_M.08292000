*COPY>CPYLIB>COM_FORMCTL
*********************************
* Revision    -[10.0]
* Copyright   - 1982 by Computer Business Associates (Vercom Software, Inc)
* Program     - JKT_FUNC_M
* System      - JISBP
* BY          - BILAL MOURAD
* DATE        - 1/15/95
* DESCRIPTION
*T21177 diane 01/06/1997 * REV11 UPG
*T22268 bilal 10/06/1997 * ALLOW USER TO PRINT BARCODE ON ANY DEFINED
*                          PRINT FORM.
**********************************
* Enddoc
*
*---- Data Structure Libraries
*
*COPY>JIS.CPYLIB>SYS_SCN_DEF
*COPY>JIS.CPYLIB>SYS_FIELDS
*COPY>JIS.CPYLIB>PFX_FILES
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>JIS.CPYLIB>SYS_TKT_DEF
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- Open files
*
      OPEN "","JIS.SCREENS" TO M.SCREENS ELSE
        ERRMSG = "Cannot locate the JIS.SCREENS file"
        GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
        ERRMSG = "Cannot locate the CONTROL file"
        GOTO 93000
      END
      OPEN "","PREFIX" TO PREFIX ELSE
        ERRMSG = "Cannot locate the PREFIX file"
        GOTO 93000
      END
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
        ERRMSG = "Cannot locate the XREF.DATA file"
        GOTO 93000
      END
      OPEN "","SYS_TKT_DEF" TO SYS_TKT_DEF ELSE
        ERRMSG = "Cannot locate the SYS_TKT_DEF file"
        GOTO 93000
      END
      OPEN "","SYS_SCN_DEF" TO SYS_SCN_DEF ELSE
        ERRMSG = "Cannot locate the SYS_SCN_DEF file"
        GOTO 93000
      END
      OPEN "", "SYS_FIELDS" TO SYS_FIELDS ELSE
        ERRMSG = "Cannot locate the SYS_FIELDS file"
        GOTO 93000
      END
      OPEN "", "PFX_FILES" TO PFX_FILES ELSE
        ERRMSG = "Cannot locate the PFX_FILES file"
        GOTO 93000
      END
      OPEN "", "SYS_FILES" TO SYS_FILES ELSE
        ERRMSG = "Cannot locate the SYS_FILES file"
        GOTO 93000
      END
      OPEN "", "SYS_FLD_HMSG" TO SYS_FLD_HMSG ELSE
        ERRMSG = "Cannot locate the SYS_FLD_HMSG file"
        GOTO 93000
      END
*
*---- Initialization
*
      MAT EDIT.COM.DRIVER = ""
      MAT EDIT.COM = ""
*
*
      ECD.SCRN.CNT = 1
      ECD.SCRN.NAME = "JKT_FUNC_M"
      ECD.ACTION = 1; CALL SCRN.EDIT
*
*---- Paint the screen
*
10*
      MAT SCV.REC = ""
      MAT SSD.REC = ""
      MAT STKD.REC = ""
      ECD.SCRN.NO = 1; ECD.ACTION = 2; CALL SCRN.EDIT
      STKD_VAR = ""; MODE = ""
      OLD.LINES = 0; OLD.SLN = 0; OLD.PLN = 0
      S.LN = 1; P.LN = 1; LINE.SPACE = 1
      SSLN = 0; PSLN = 0
      S.LINES = 0; P.LINES = 0
      PAGE.SIZE = 3; OLD.START.SLINE = 0; OLD.START.PLINE = 0
      BEGIN.SPAGE = 11; BEGIN.PPAGE = 17
*
*---- Get Function Name
*
      ECD.NUM = 1; ECD.ACTION = 4
      CALL SCRN.EDIT
      STKD_ID = ECD.RET.VALUE
      BEGIN CASE
        CASE STKD_ID = "END"
          GOTO 99999
        CASE STKD_ID = "???" OR STKD_ID = ""
          MAT GEN.XREF.REC = ""
          GXR.NAME = "SYS_TKT_DEF"
          GXR.SORT.FILE = "SYS_TKT_DEF"
          GXR.FILE = SYS_TKT_DEF
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
          ECD.ACTION = 2; CALL SCRN.EDIT
          IF GXR.ID = "" THEN GOTO 10
          STKD_ID = GXR.ID
          SCV.REC(1)<ECD.SCRN.NO> = GXR.ID
          ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
      END CASE
*
*---- Validate Functions record
*
      MATREADU STKD.REC FROM SYS_TKT_DEF, STKD_ID THEN
        S.LINES = DCOUNT(STKD_SCN,VM)
        P.LINES = DCOUNT(STKD_PRT,VM)
        GOSUB 8100; GOSUB 1500; GOSUB 1700
        GOSUB 2500; GOSUB 2700
      END ELSE
        ECD.NUM = 44; ECD.ACTION = 4; CALL SCRN.EDIT
        IF ECD.RET.VALUE = "N" THEN GOTO 10
        MAT STKD.REC = ""
        FOR I = 1 TO 6 WHILE ECD.RET.VALUE # "END"
          ON I GOSUB 100,110,120,130,140,150
        NEXT I
        IF ECD.RET.VALUE = "END" THEN GOTO 10
        GOSUB 1100
        GOSUB 2100
      END
*
*---- Main Program
*
      MORE1 = 1
      LOOP
        ECD.NUM = 45; ECD.ACTION = 4; CALL SCRN.EDIT
        BEGIN CASE
          CASE ECD.RET.VALUE = "O"
            GOSUB 1000
          CASE ECD.RET.VALUE = "P"
            GOSUB 2000
          CASE ECD.RET.VALUE = "T"
            CALL JKT_TRN_S(STKD_ID)
            ECD.SCRN.NO = 1; ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.ACTION = 3; CALL SCRN.EDIT
            OLD.START.SLINE = 0; GOSUB 1500
            OLD.START.PLINE = 0; GOSUB 2500
          CASE ECD.RET.VALUE = "F"
            BEGIN CASE
            CASE STKD_BC_ROW = ""
***
* BEGINING LINE AND ENDING LINE BECOME MULTIVALUED WHEN THERE IS MORE
* THAN ONE PRINT FORM.
*            CASE STKD_BC_ROW >= STKD_PRT_BLN AND STKD_BC_ROW <= STKD_PRT_ELN
            CASE STKD_BC_ROW >= STKD_PRT_BLN<1,1> AND STKD_BC_ROW <= STKD_PRT_ELN<1,1>
***
*----T22268
            CASE STKD_PRT = "" AND (STKD_BC_ROW # "" OR STKD_BC_COL # "")
               STKD_PRT_BLN<1,1> = 1
               STKD_PRT_ELN<1,1> = 22
*-----^
            CASE 1
              ERRMSG = "Bar code row is outside the Print form."
              GOSUB 91000; GOTO 19
            END CASE
            MATWRITE STKD.REC ON SYS_TKT_DEF, STKD_ID
            MORE1 = 0
19*
          CASE ECD.RET.VALUE = "E" OR ECD.RET.VALUE = "END"
            RELEASE SYS_TKT_DEF, STKD_ID
            MORE1= 0
          CASE NOT(NUM(ECD.RET.VALUE))
          CASE ECD.RET.VALUE > 0 OR ECD.RET.VALUE < 7
            I = ECD.RET.VALUE
            ON I GOSUB 100,110,120,130,140,150
          CASE 1
            ERRMSG = "*** INVALID ENTRY!! Please re-ENTER. ***"
            GOSUB 91000
        END CASE
      WHILE MORE1 DO REPEAT
      GOTO 10
*
*---- Revision control
*
100*
      ECD.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        IF ECD.RET.VALUE = "Y" THEN
          STKD_REV_CTL = 1
        END ELSE
          STKD_REV_CTL = 0
        END
      END
      RETURN
*
*---- Genaerate new ID
*
110*
      ECD.NUM = 13
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        IF ECD.RET.VALUE = "Y" THEN
          STKD_GEN_N_ID = 1
        END ELSE 
          STKD_GEN_N_ID = 0
        END
      END
      RETURN
*
*---- Lines per page
*
120*
      ECD.NUM = 12; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        STKD_LNPERPG = ECD.RET.VALUE
      END
      RETURN
*
*---- B C Printer
*
130*
      ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        STKD_BC_LPTR = ECD.RET.VALUE
      END
      RETURN
*
*---- Bar Code row
*
140*
      ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        STKD_BC_ROW = ECD.RET.VALUE
      END
      RETURN
*
*---- Bar Code column
*
150*
      ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        STKD_BC_COL = ECD.RET.VALUE
      END
      RETURN
*
*---- Prompt line
*
1000*
      IF S.LINES < 1 THEN
        GOSUB 1100
      END
      MORE = 1
      LOOP
        SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
        ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
        OPTION = ECD.RET.VALUE
        BEGIN CASE
          CASE OPTION = "E" OR OPTION = "END"
            MORE = 0
          CASE OPTION[1,1] = "S" OR OPTION = ""
            GOSUB 1400
          CASE OPTION = "A"
            GOSUB 1100
          CASE OPTION = "D" AND S.LINES > 0
            GOSUB 1300
            IF LNO # 0 THEN
              S.LN = LNO
              STKD_SCN = DELETE(STKD_SCN,1,S.LN,0)
              STKD_SCN_CMP = DELETE(STKD_SCN_CMP,1,S.LN,0)
              S.LINES = S.LINES - 1; S.LN = OLD.START.SLINE
              IF S.LN > S.LINES THEN S.LN = S.LINES
              OLD.START.SLINE = 0; GOSUB 1500; GOSUB 1750
            END
          CASE OPTION = "C" AND S.LINES > 0 
            MODE = "C"; GOSUB 1300
            BEGIN CASE
              CASE LNO = "0"
              CASE NUM(LNO)
                S.LN = LNO; GOSUB 1200
            END CASE
          CASE OPTION = "I" AND S.LINES > 0
            MODE = "B"; GOSUB 1300
            IF LNO > 0 THEN
              STKD_SCN = INSERT(STKD_SCN,1,LNO,0,"")
              STKD_SCN_CMP = INSERT(STKD_SCN_CMP,1,LNO,0,"")
              OLD.START.SLINE = 0; S.LINES = S.LINES + 1; GOSUB 1500
              GOSUB 1750; S.LN = LNO; GOSUB 1200
            END
            OLD.START.SLINE = 0; GOSUB 1500
          CASE 1
            ERRMSG = "** INVALID ENTRY !! Please re-ENTER **"
            GOSUB 91000
        END CASE
      WHILE MORE DO REPEAT
      RETURN
*
*---- Add mode
*
1100*
      MODE = "A"
      LOOP
        S.LN = S.LINES + 1
        OLD.LINES = S.LINES
        GOSUB 1500
        GOSUB 1200
      WHILE S.LINES > OLD.LINES DO 
        GOSUB 1700
      REPEAT
      S.LN = S.LINES
      OLD.START.SLINE = 0
      GOSUB 1500; GOSUB 1750
      RETURN
*
*---- Line entries
*
1200*
      SSLN = BEGIN.SPAGE + LINE.SPACE * MOD(S.LN - 1,PAGE.SIZE)
P_X  = 1 ; P_Y = SSLN ; P_VALUE = S.LN "R%3" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      ECD.NUM = 22
      IF MODE # "C" THEN
        SCV.REC(ECD.NUM)<ECD.SCRN.NO,S.LN> = ""
      END ELSE
        SCV.REC(ECD.NUM)<ECD.SCRN.NO,S.LN> = STKD_SCN<1,S.LN>
      END
      ECD.SUB.NUM = S.LN; ECD.Y = SSLN; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "???"
        MAT GEN.XREF.REC = ""
        GXR.NAME = "GEN.CODE"
        GXR.SORT.FILE = "SYS_SCN_DEF"
        GXR.FILE = SYS_SCN_DEF
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
        OLD.START.SLINE = 0; GOSUB 1500; GOSUB 1700
        OLD.START.PLINE = 0; GOSUB 2500; GOSUB 2700
        IF GXR.ID = "" THEN GOTO 1200 
        SSLN = BEGIN.SPAGE + LINE.SPACE * MOD(S.LN - 1,PAGE.SIZE)
        ECD.RET.VALUE = GXR.ID; ECD.NUM = 22
P_X  = 1 ; P_Y = SSLN ; P_VALUE = S.LN "R%3" ; P_OPT = "CL"
P_X  := AM:5 ; P_Y := AM:SSLN ; P_VALUE := AM:ECD.RET.VALUE "L#30"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE ECD.RET.VALUE = "END"
        BEGIN CASE
        CASE MODE = "A"
P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CASE MODE = "B"
          DEL STKD_SCN<1,S.LN>
          DEL STKD_SCN_CMP<1,S.LN>
          S.LINES = DCOUNT(STKD_SCN,VM)
        CASE 1
          N = S.LN; GOSUB 1600
        END CASE
        GOTO 1299
      END CASE
      MATREAD SSD.REC FROM SYS_SCN_DEF,ECD.RET.VALUE THEN
        LOCATE ECD.RET.VALUE IN STKD_SCN<1>, 1 SETTING QNUM THEN
          IF QNUM # S.LN THEN
            ERRMSG = "** This Entry has been used !! Please re- ENTER **"
            GOSUB 91000; GOTO 1200
          END ELSE
            STKD_SCN<1,S.LN> = ECD.RET.VALUE
          END
        END ELSE
          STKD_SCN<1,S.LN> = ECD.RET.VALUE
        END
      END ELSE
        ERRMSG = "Cannot Locate Screen Name : ": ECD.RET.VALUE
        GOSUB 91000; GOTO 1200
      END
1220*
      ECD.NUM = 23
      ECD.SUB.NUM = S.LN; ECD.Y = SSLN; ECD.ACTION = 4
      IF MODE = "C" THEN
        SCV.REC(ECD.NUM)<ECD.SCRN.NO,S.LN> = STKD_SCN_CMP<1,S.LN>
      END ELSE
        SCV.REC(ECD.NUM)<ECD.SCRN.NO,S.LN> = ""
      END
      CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
        GOTO 1200
      END ELSE
        IF ECD.RET.VALUE # "N" THEN
          STKD_SCN_CMP<1,S.LN> = ECD.RET.VALUE
        END
      END
      S.LINES = DCOUNT(STKD_SCN,VM)
1299*
      RETURN
*
*---- Check Line Number
*
1300*
      OLD.START.SLINE = 0; GOSUB 1500
      ECD.NUM = 42; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
        CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
          LNO = 0
        CASE NOT(NUM(ECD.RET.VALUE))
          ERRMSG = "** Invalid Entry !! **"
          GOSUB 91000; GOTO 1300
        CASE ECD.RET.VALUE >= START.SLINE AND ECD.RET.VALUE <= LAST.SLINE
          LNO = ECD.RET.VALUE
        CASE 1
          ERRMSG = "** OUT OF RANGE **"
          GOSUB 91000; GOTO 1300
      END CASE
      RETURN
*
*---- Find page of scroll
*
1400*
      OPT2 = OPTION[2,1]
      BEGIN CASE
        CASE OPT2 = "" OR OPT2 = "F"
          S.LN = S.LN + PAGE.SIZE
          IF S.LN > S.LINES THEN S.LN = 1
        CASE OPT2 = "R"
          S.LN = S.LN - PAGE.SIZE
          IF S.LN < 1 THEN S.LN = 1
        CASE OPT2 = "T"
          S.LN = 1
        CASE OPT2 = "B"
          S.LN = S.LINES
          IF S.LN < 1 THEN S.LN = 1
        CASE NUM(OPT2)
          LN.NO = OPTION[2,99]
          IF LN.NO < 1 OR LN.NO > S.LINES THEN
            ERRMSG = "*** INVALID SELECTION ***"
            GOSUB 91000
          END ELSE
            S.LN = LN.NO
          END
      END CASE
*
*---- Printing the page 
*
1500*
      START.SLINE = 1 + INT((S.LN - 1)/PAGE.SIZE) * PAGE.SIZE
      LAST.SLINE = START.SLINE + PAGE.SIZE - 1
      IF LAST.SLINE > S.LINES THEN LAST.SLINE = S.LINES
      IF START.SLINE = OLD.START.SLINE THEN GOTO 1599 
      OLD.START.SLINE = START.SLINE; CNT = 1
      ECD.NUM = 9
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LAST.SLINE/PAGE.SIZE+.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      FOR N = START.SLINE TO LAST.SLINE
        SSLN = BEGIN.SPAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
        GOSUB 1600
        CNT = CNT + 1
      NEXT N
      GOSUB 1800
1599*
      RETURN
*
*---- Print lines in page
*
1600*
P_X  = 1 ; P_Y = SSLN ; P_VALUE = N "R%3" ; P_OPT = ""
P_X  := AM:5 ; P_Y := AM:SSLN ; P_VALUE := AM:STKD_SCN<1,N> "L#30"
P_X  := AM:37 ; P_Y := AM:SSLN ; P_VALUE := AM:STKD_SCN_CMP<1,N> "L#1"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       RETURN
*
*---- Print page.no & page cnt
*
1700*
      ECD.NUM = 9
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(S.LN / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
1750*
      ECD.NUM = 10
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(S.LINES/PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*---- Fill rest of page area
*
1800*
      FOR N = CNT TO PAGE.SIZE
        SSLN = BEGIN.SPAGE + LINE.SPACE * MOD(N - 1, PAGE.SIZE)
P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- Lower page control
*
2000*
      IF P.LINES < 1 THEN
        GOSUB 2100
      END
      MORE = 1
      LOOP
        SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
        ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
        OPTION = ECD.RET.VALUE
        BEGIN CASE
        CASE OPTION = "E" OR OPTION = "END"
          MORE = 0
        CASE OPTION[1,1] = "S" OR OPTION = ""
          GOSUB 2400
        CASE OPTION = "A"
          GOSUB 2100
        CASE OPTION = "D" AND P.LINES > 0
          GOSUB 2300
          IF LNO # 0 THEN
            P.LN = LNO
            STKD_PRT = DELETE(STKD_PRT,1,P.LN,0)
            STKD_PRT_BLN = DELETE(STKD_PRT_BLN,1,P.LN,0)
            STKD_PRT_ELN = DELETE(STKD_PRT_ELN,1,P.LN,0)
            STKD_PRT_CMP = DELETE(STKD_PRT_CMP,1,P.LN,0)
            P.LINES = P.LINES - 1; P.LN = OLD.START.PLINE
            IF P.LN > P.LINES THEN P.LN = P.LINES
            OLD.START.PLINE = 0; GOSUB 2500; GOSUB 2750
          END
        CASE OPTION = "C" AND P.LINES > 0
          MODE = "C"; GOSUB 2300
          BEGIN CASE
          CASE LNO = "0"
            OVER.D = 1
          CASE NUM(LNO)
            P.LN = LNO; GOSUB 2200
          END CASE
        CASE OPTION = "I" AND P.LINES > 0
          MODE = "B"; GOSUB 2300
          IF LNO > 0 THEN
            STKD_PRT = INSERT(STKD_PRT,1,LNO,0,"")
            STKD_PRT_BLN = INSERT(STKD_PRT_BLN,1,LNO,0,"")
            STKD_PRT_ELN = INSERT(STKD_PRT_ELN,1,LNO,0,"")
            STKD_PRT_CMP = INSERT(STKD_PRT_CMP,1,LNO,0,"")
            OLD.START.PLINE = 0; P.LINES = P.LINES + 1; GOSUB 2500
            GOSUB 2750; P.LN = LNO; GOSUB 2200
          END
          OLD.START.PLINE = 0; GOSUB 2500
        END CASE
      WHILE MORE DO REPEAT
      RETURN
*
*---- Add mode
*
2100*
      MODE = "A"
      LOOP
        P.LN = P.LINES + 1
        OLD.LINES = P.LINES
        GOSUB 2500
        GOSUB 2200
      WHILE P.LINES > OLD.LINES DO 
        GOSUB 2750
      REPEAT
      P.LN = P.LINES
      OLD.START.PLINE = 0
      GOSUB 2500; GOSUB 2750
      RETURN
*
*---- Line entries
*
2200*
       PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(P.LN - 1, PAGE.SIZE)
P_X  = 1 ; P_Y = PSLN ; P_VALUE = P.LN "R%3" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       ECD.NUM = 32
       IF MODE # "C" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = ""
       END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = STKD_PRT<1,P.LN>
       END
       ECD.SUB.NUM = P.LN; ECD.Y = PSLN; ECD.ACTION = 4; CALL SCRN.EDIT
       STKD_VAR = ""
       BEGIN CASE
       CASE ECD.RET.VALUE = "???"
         MAT GEN.XREF.REC = ""
         GXR.NAME = "GEN.CODE"
         GXR.SORT.FILE = "SYS_SCN_DEF"
         GXR.FILE = SYS_SCN_DEF
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.START.SLINE = 0; GOSUB 1500; GOSUB 1700
         OLD.START.PLINE = 0; GOSUB 2500; GOSUB 2700
         IF GXR.ID = "" THEN GOTO 2200
         PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(P.LN - 1, PAGE.SIZE)
         ECD.RET.VALUE = GXR.ID; ECD.NUM = 32
P_X  = 1 ; P_Y = PSLN ; P_VALUE = P.LN "R%3" ; P_OPT = ""
P_X  := AM:5 ; P_Y := AM:PSLN ; P_VALUE := AM:ECD.RET.VALUE "L#30"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       CASE ECD.RET.VALUE = "END"
         BEGIN CASE
         CASE MODE = "A"
P_X  = 0 ; P_Y = PSLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE MODE = "B"
           DEL STKD_PRT<1,P.LN>
           DEL STKD_PRT_BLN<1,P.LN>
           DEL STKD_PRT_ELN<1,P.LN>
           DEL STKD_PRT_CMP<1,P.LN>
           P.LINES = DCOUNT(STKD_PRT,VM)
         CASE 1
           N = P.LN; GOSUB 2600
         END CASE
         GOTO 2299
       END CASE
       MATREAD SSD.REC FROM SYS_SCN_DEF, ECD.RET.VALUE THEN
         LOCATE ECD.RET.VALUE IN STKD_PRT<1>,1 SETTING QNUM THEN
           IF QNUM # P.LN THEN
             ERRMSG = "** This entry has been used !! re-ENTER **"
             GOSUB 91000; GOTO 2200
           END ELSE
             STKD_VAR<1> = ECD.RET.VALUE
           END
         END ELSE
           STKD_VAR<1> = ECD.RET.VALUE
         END
       END ELSE
         ERRMSG = "Cannot locate Screen Name : ":ECD.RET.VALUE
         GOSUB 91000; GOTO 2200
       END
*
*
       ECD.NUM = 33; ECD.SUB.NUM = P.LN; ECD.Y = PSLN; ECD.ACTION = 4
       IF MODE = "C" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = STKD_PRT_BLN<1,P.LN>
       END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = ""
       END
       CALL SCRN.EDIT
       IF ECD.RET.VALUE # "END" THEN
         STKD_VAR<2> = ECD.RET.VALUE
       END ELSE
         GOTO 2200
       END
*
*
       ECD.NUM = 34; ECD.MINV = STKD_VAR<2>; ECD.SUB.NUM = P.LN
       ECD.Y = PSLN; ECD.ACTION = 4
       IF MODE = "C" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = STKD_PRT_ELN<1,P.LN>
       END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = ""
       END
       CALL SCRN.EDIT
       IF ECD.RET.VALUE # "END" THEN
         STKD_VAR<3> = ECD.RET.VALUE
       END ELSE
         GOTO 2200
       END
*
*
       ECD.NUM = 35; ECD.SUB.NUM = P.LN; ECD.Y = PSLN; ECD.ACTION = 4
       IF MODE = "C" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = STKD_PRT_CMP
       END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = ""
       END
       CALL SCRN.EDIT
       IF ECD.RET.VALUE # "END" THEN
         IF ECD.RET.VALUE = "Y" THEN
           STKD_VAR<4> = ECD.RET.VALUE
         END
       END ELSE
         GOTO 2200
       END
*----T22268
*
*
2250*
       ECD.NUM = 36; ECD.SUB.NUM = P.LN; ECD.Y = PSLN; ECD.ACTION = 4
       IF MODE = "C" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = STKD_BC_FLG<1,P.LN>
       END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,P.LN> = ""
       END
       CALL SCRN.EDIT
       IF ECD.RET.VALUE # "END" THEN
         STKD_VAR<5> = ECD.RET.VALUE
         IF ECD.RET.VALUE = "Y" THEN
           IF STKD_BC_LPTR = "" THEN
             ERRMSG = "Warning : Bar Code Printer Must be defined"
             GOSUB 91000; GOSUB 130
           END
           IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 2250
         END
       END ELSE
         GOTO 2200
       END
*----^
*
*
       STKD_PRT<1,P.LN> = STKD_VAR<1>
       STKD_PRT_BLN<1,P.LN> = STKD_VAR<2>
       STKD_PRT_ELN<1,P.LN> = STKD_VAR<3>
       STKD_PRT_CMP<1,P.LN> = STKD_VAR<4>
*----T22268
       STKD_BC_FLG<1,P.LN> = STKD_VAR<5>
*----^
       P.LINES = DCOUNT(STKD_PRT,VM)
2299*
       RETURN
*
*---- Check line number
*
2300*
      OLD.START.PLINE = 0; GOSUB 2500
      ECD.NUM = 42; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
        LNO = 0
      CASE NOT(NUM(ECD.RET.VALUE))
        ERRMSG = "** INVALID ENTRY **"
        GOSUB 91000; GOTO 2300
      CASE ECD.RET.VALUE >= START.PLINE AND ECD.RET.VALUE <= LAST.PLINE
        LNO = ECD.RET.VALUE
      CASE 1
        ERRMSG = "** OUT OF RANGE **"
        GOSUB 91000; GOTO 2300
      END CASE
      RETURN
*
*---- Find Page of Scroll
*
2400*
      OPT2 = OPTION[2,1]
      BEGIN CASE
      CASE OPT2 = "" OR OPT2 = "F"
        P.LN = P.LN + PAGE.SIZE
        IF P.LN > P.LINES THEN P.LN = 1
      CASE OPT2 = "R"
        P.LN = P.LN - PAGE.SIZE
        IF P.LN < 1 THEN P.LN = 1
      CASE OPT2 = "T"
        P.LN = 1
      CASE OPT2 = "B"
        P.LN = P.LINES
        IF P.LN > P.LINES THEN P.LN = 1
      CASE NUM(OPT2)
        LN.NO = OPTION[2,99]
        IF LN.NO < 1 OR LN.NO > P.LINES THEN
          ERRMSG = "*** INVALID SELECTION ***"
          GOSUB 91000
        END ELSE
          P.LN = LN.NO
        END
      END CASE
*
*---- Print page routine
*
2500*
      START.PLINE = 1 +INT((P.LN - 1) / PAGE.SIZE) * PAGE.SIZE
      LAST.PLINE = START.PLINE + PAGE.SIZE - 1
      IF LAST.PLINE > P.LINES THEN LAST.PLINE = P.LINES
      IF START.PLINE = OLD.START.PLINE THEN GOTO 2599
      OLD.START.PLINE = START.PLINE
      ECD.NUM = 15
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LAST.PLINE/PAGE.SIZE+.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.PLINE TO LAST.PLINE
        PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
        GOSUB 2600
        CNT = CNT + 1
     NEXT N
     GOSUB 2800
2599*
     RETURN
*
*---- Print line
*
2600*
P_X  = 1 ; P_Y = PSLN ; P_VALUE = N "R%3" ; P_OPT = ""
P_X  := AM:5 ; P_Y := AM:PSLN ; P_VALUE := AM:STKD_PRT<1,N> "L#30"
P_X  := AM:36 ; P_Y := AM:PSLN ; P_VALUE := AM:STKD_PRT_BLN<1,N> "R#5"
P_X  := AM:42 ; P_Y := AM:PSLN ; P_VALUE := AM:STKD_PRT_ELN<1,N> "R#5"
P_X  := AM:49 ; P_Y := AM:PSLN ; P_VALUE := AM:STKD_PRT_CMP<1,N> "R#1"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*----T22268
     ECD.NUM = 36; ECD.SUB.NUM = N; ECD.Y = PSLN
     SCV.REC(ECD.NUM)<ECD.SCRN.NO,N> =STKD_BC_FLG<1,N>;ECD.ACTION=5;CALL SCRN.EDIT
*----^
     RETURN
*
*---- Print page no. & page cnt
*
2700*
      ECD.NUM = 15
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(P.LN / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
2750*
      ECD.NUM = 16
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(P.LINES / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*---- Fill rest of page area
*
2800*
      FOR N = CNT TO PAGE.SIZE
        PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(N - 1, PAGE.SIZE)
P_X  = 0 ; P_Y = PSLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- Print Data
*
8100*
      SCV.REC(12)<ECD.SCRN.NO> = STKD_LNPERPG
      IF STKD_REV_CTL = 1 THEN
        SCV.REC(11)<ECD.SCRN.NO> = "Y"
      END ELSE
        SCV.REC(11)<ECD.SCRN.NO> = "N"
      END
      IF STKD_GEN_N_ID = 1 THEN
        SCV.REC(13)<ECD.SCRN.NO> = "Y"
      END ELSE
        SCV.REC(13)<ECD.SCRN.NO> = "N"
      END
      SCV.REC(18)<ECD.SCRN.NO> = STKD_BC_LPTR
      SCV.REC(14)<ECD.SCRN.NO> = STKD_BC_ROW
      SCV.REC(17)<ECD.SCRN.NO> = STKD_BC_COL
      ECD.ACTION = 3; CALL SCRN.EDIT
      RETURN
*
*---- Print Error messages
*
*
*--- CALLS FOR SYSCOM
*
91000 *
      ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
      ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
      ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
* 91000*
*       PRINT @(0,23): ERRMSG: CL:
*       INPUT JK,1_:
*       PRINT @(0,23): CL:
*       RETURN
*
* 93000*
*       PRINT @(0,23): ERRMSG: CL:
*       INPUT JK,1_:
*
99999*
END
