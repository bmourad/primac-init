      SUBROUTINE CNV_SYS_FIELDS_SB(INT.REF)
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.SCREEN.BUILD
*COPY>JIS.CPYLIB>PFX_FILES
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>JIS.CPYLIB>SYS_FIELDS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
      OPEN "","PFX_FILES" TO PFX_FILES ELSE
         ERRMSG = "Cannot locate the PFX_FILES file"
         GOTO 93000
      END
      OPEN "","SYS_FILES" TO SYS_FILES ELSE
         ERRMSG = "Cannot locate the SYS_FILES file"
         GOTO 93000
      END
      OPEN "","SYS_FIELDS" TO SYS_FIELDS ELSE
         ERRMSG = "Cannot locate the SYS_FIELDS file"
         GOTO 93000
      END
      OPEN "","SYS_FLD_HMSG" TO SYS_FLD_HMSG ELSE
         ERRMSG = "Cannot locate the SYS_FLD_HMSG file"
         GOTO 93000
      END
*
      TYPE_INI = "T"; TYPE_DSC = "Text"; OTYP_INI = 1
      TYPE_INI<2> = "N"; TYPE_DSC<2> = "Numeric"; OTYP_INI<2> = 3
      TYPE_INI<3> = "C"; TYPE_DSC<3> = "deCimal"; OTYP_INI<3> = 4
      TYPE_INI<4> = "A"; TYPE_DSC<4> = "Alpha"; OTYP_INI<4> = 2
      TYPE_INI<5> = "D"; TYPE_DSC<5> = "Date"; OTYP_INI<5> = 6
      TYPE_INI<6> = "L"; TYPE_DSC<6> = "Logical"; OTYP_INI<6> = 8
      TYPE_INI<7> = "P"; TYPE_DSC<7> = "Pattern"; OTYP_INI<7> = 7
      TYPE_INI<8> = "U"; TYPE_DSC<8> = "coUnter"; OTYP_INI<8> = 3
*
CRT @(0,23):@(-4):"Field Name : ":; INPUT FLDNAME,35:
         IF FLDNAME = "" OR FLDNAME = "END" THEN
            GOTO 99999
         END
         FLDNAME = CONVERT(".","_",FLDNAME)
         FLDPFX = FIELD(FLDNAME,"_",1)
         MATREADU DFD.REC FROM SYS_FIELDS, FLDNAME THEN
            ERRMSG = "Field (":FLDNAME:") has already been setup"
            GOTO 90000
         END ELSE
            MAT DFD.REC = ""
         END
         MATREAD PFR.REC FROM PFX_FILES, FLDPFX ELSE
            ERRMSG = "Cannot locate file prefix - ":FLDPFX
            GOTO 90000
         END
         MATREAD SFR.REC FROM SYS_FILES, PFR_FILE ELSE
            ERRMSG = "Cannot locate file (":PFR_FILE:") definition"
            GOTO 90000
         END
         IF SFR.CPYLIB = "" THEN
            ERRMSG = "Cannot determine the Data Structure Name"
            GOTO 90000
         END
         IF FLDPFX = FLDNAME THEN
            ATTNO = 0
         END ELSE
            OPEN "",SFR.CPYLIB TO CPYLIBFILE ELSE
               ERRMSG = "Cannot locate the (":SFR.CPYLIB:") file"
               GOTO 93000
            END
            READ CPYLIB_REC FROM CPYLIBFILE, SFR.CPLB.NAME ELSE
               ERRMSG = "Cannot locate the (":SFR.CPYLIB:",":SFR.CPLB.NAME:") record"
               GOTO 93000
            END
            PFX = ""; FLD_REC = CPYLIB_REC
            CALL CPYLIB_SUB(FLD_REC,PFX,ARRAY_NAME,ARRAY_SIZE,ERRMSG)
            IF ERRMSG # "" THEN GOTO 93000
            IF PFX # FLDPFX THEN
               ERRMSG = "Prefix mismatch, ":PFX:" & ":FLDNAME
               GOTO 93000
            END
            FLDID = FLDNAME[INDEX(FLDNAME,"_",1)+1,99]
            LOCATE FLDID IN FLD_REC,1 SETTING ATTNO ELSE
               ERRMSG = "Could not locate ":FLDNAME
               GOTO 93000
            END
         END
*
*******************************
      TYP = ABLD.SCRN(INT.REF)<1,B.TYP>
      X = ABLD.SCRN(INT.REF)<1,B.X>
      Y = ABLD.SCRN(INT.REF)<1,B.Y>
      MAXL = ABLD.SCRN(INT.REF)<1,B.MAXL>
      JUSTIFY = ABLD.SCRN(INT.REF)<1,B.JUSTIFY>
      SCALER = ABLD.SCRN(INT.REF)<1,B.SCALER>
      BMSK = ABLD.SCRN(INT.REF)<1,B.MASK>
      IF BMSK = "" THEN BMSK = "#"
      MSKETX = " "
      MULTI.LN = ABLD.SCRN(INT.REF)<1,B.MULTI.LN>
      O.R = ABLD.SCRN(INT.REF)<1,B.O.R>
      DEFAULT = ABLD.SCRN(INT.REF)<1,B.DEFAULT>
      MINL = ABLD.SCRN(INT.REF)<1,B.MINL>
      MINV = ABLD.SCRN(INT.REF)<1,B.MINV>
      MAXV = ABLD.SCRN(INT.REF)<1,B.MAXV>
      VALDAT = ABLD.SCRN(INT.REF)<1,B.VALDAT>
      PATRN = ABLD.SCRN(INT.REF)<1,B.PATRN>
      BLINK = ABLD.SCRN(INT.REF)<1,B.BLINK>
*        SCNNAME = ECD.SCRN.NAME<ECD.SCRN.NO>
      BLANK = ABLD.SCRN(INT.REF)<1,B.BLANK>
      REVERSE = ABLD.SCRN(INT.REF)<1,B.REVERSE>
      EMODE = ABLD.SCRN(INT.REF)<1,B.EMODE>
      EX = ABLD.SCRN(INT.REF)<1,B.EX>
      EY = ABLD.SCRN(INT.REF)<1,B.EY>
      PMSG = ABLD.SCRN(INT.REF)<1,B.PMSG>
      AUTO.RTN = ABLD.SCRN(INT.REF)<1,B.AUTO.RTN>
      FILL.CHR = ABLD.SCRN(INT.REF)<1,B.FILL.CHR>
      MULTI.SP = ABLD.SCRN(INT.REF)<1,B.MULTI.SP>
      ORVALDAT = ABLD.SCRN(INT.REF)<1,B.ORVALDAT>
      INVALCHR = ABLD.SCRN(INT.REF)<1,B.INVALCHR>
      EXT.REF = BLD.EXT.REF<1,INT.REF>
      HMSG = BLD.HMSG<1,EXT.REF>
*     BEGIN CASE
*     CASE ECD.SCRN.FLAG<ECD.SCRN.NO> = 3
*        SCREENFILE = THIRD.SCREENS
*     CASE ECD.SCRN.FLAG<ECD.SCRN.NO> = 2
*        SCREENFILE = SECOND.SCREENS
*     CASE 1
*        SCREENFILE = M.SCREENS
*     END CASE
*     READ HMSG FROM SCREENFILE, SCNNAME:"*HMSG":ECD.NUM ELSE
*        HMSG = ""
*     END
*
         DFD_ATTNO = ATTNO
         DFD_TABLE = PFR_FILE
         LOCATE TYP IN OTYP_INI,1 SETTING FND ELSE FND = 1
         DFD_TYPE = TYPE_INI<FND>
         DFD_DEC = SCALER
         DFD_LEN = MAXL
         DFD_MINL = MINL
         DFD_MAXV = MAXV
         DFD_MINV = MINV
         DFD_JUSTIFY = JUSTIFY
         DFD_FILL = FILL.CHR
         DFD_PIC = ""
         DFD_O_R = O.R
         DFD_DEFAULT = DEFAULT
         DFD_PATRN = PATRN
         DFD_ORVALDAT = ORVALDAT
         DFD_VALDAT = VALDAT
         DFD_VALD_DSC = ""
         DFD_INVALCHR = INVALCHR<1,1>
         CNT = DCOUNT(INVALCHR,VM)
         FOR I = 2 TO CNT
            DFD_INVALCHR = DFD_INVALCHR:",":INVALCHR<1,I>
         NEXT I
         DFD_LVL = "S"
         DFD_M_LNK = ""
         DFD_M_ASOC = ""
         DFD_V_LNK = ""
         DFD_V_ASOC = ""
         DFD_LNK = ""
         DFD_LNK_FILE = ""
         HMSG_REC = HMSG<1,1,1>
         CNT = DCOUNT(HMSG<1,1>,SVM)
         FOR I = 2 TO CNT
            HMSG_REC<I> = HMSG<1,1,I>
         NEXT I
         CRT @(0,23):@(-4):"Update File (":PFR_FILE:"), Att (":ATTNO:"), with Field (":FLDNAME:") (Y/N) : " :
         INPUT XOXO:
         IF XOXO # "Y" AND XOXO # "y" THEN
            RELEASE SYS_FIELDS, FLDNAME
            GOTO 99999
         END
         MATWRITE DFD.REC ON SYS_FIELDS, FLDNAME
         READU DUMMY FROM SYS_FLD_HMSG, FLDNAME ELSE NULL
         IF HMSG_REC = "" THEN
            DELETE SYS_FLD_HMSG, FLDNAME
         END ELSE
            WRITE HMSG_REC ON SYS_FLD_HMSG, FLDNAME
         END
         GOTO 99999
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
      RELEASE SYS_FIELDS, FLDNAME
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000*
*       CRT @(0,23):ERRMSG:@(-4):
*       INPUT XOXO:
*
99999*
      RETURN
END
