SUBROUTINE ICS_WF_RECEIPTPOSTINFO_WBP_POCANCELINFO1(PROCESSID,PO.ID,SCHEMAFLAG,ERRMSG,XMLSTR)
*********************************************************************
* REVISION - [12.00]
* PROGRAM  - ICS_WF_PoInfo_WBP_PoCancelInfo
* AUTHOR   - MAGAFOOR
* DATE     - 02/26/09
* DESCRIPTION
*********************************************************************
$INCLUDE PMC.CPYLIB PO
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB DAILY_STOCK
$INCLUDE ICS.CPYLIB INVENTORY
DEFFUN IS.PROCESS.REGISTERED(CONO,PROCESS.NAME)
DEFFUN IS.KEY.REGISTERED(CONO,PROCESS.ID,KEY.ID)
*DEBUG
ERRMSG=''
SCHEMAFLAG = 1
*---------------------- OPEN ALL FILES --------------------------
OPEN "","COMPANY" TO COMPANY ELSE
   ERRMSG = "CANNOT OPEN COMPANY FILE";GOTO 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
   ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 93000
END
OPEN "","PO" TO PO ELSE
   ERRMSG = "CANNOT OPEN PO FILE"; GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE 
   ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
PROCESS.URL = ""
CONO = PO.ID[1,3]
*WFINSTANCEID = ISREGISTERED(CONO,PROCESSID)
PROCESS.URL = IS.PROCESS.REGISTERED(CONO,PROCESSID)
IF PROCESS.URL # "" THEN
   WFINSTANCEID = IS.KEY.REGISTERED(CONO,PROCESSID,PO.ID)
   IF WFINSTANCEID = "" THEN ERRMSG = "INSTANCE ID IS MISSING FOR THIS PROCESS ":PROCESSID ; GOTO 93000
END ELSE
   RETURN
END
*DEBUG
START:
XMLSTR = "<PO_DATA>"
XMLSTR := "<WFINSTANCEID>":WFINSTANCEID:"</WFINSTANCEID>"
XMLSTR := "<PO_ID>":PO.ID[4,99]:"</PO_ID>"
MATREAD PO.REC FROM PO,PO.ID  THEN 
   SCHEMAFLAG = 0
   FOR I = 1 TO DCOUNT(PO.PROD.NUM,VM)
      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,I> ELSE
        MAT INV.REC = ""; INV.FULL.DESC = ""
      END
      XMLSTR := "<PRODUCT ID ='":PO.PROD.NUM<1,I>:"'>"
      XMLSTR := "<PRODUCT_DESC>":INV.FULL.DESC "L#45":"</PRODUCT_DESC>"
      XMLSTR := "<WAREHOUSE>":PO.WHSE<1,I>:"</WAREHOUSE>"
      XMLSTR := "<PRODUCT_TYPE>":PO.PROD.TYPE<1,I>:"</PRODUCT_TYPE>"
      XMLSTR := "<UNIT_PRICE>":OCONV(PO.GROS.PRICE<1,I>,"MD4"):"</UNIT_PRICE>"
      XMLSTR := "<DISCOUNT>":OCONV(PO.DISCOUNT<1,I>,"MD2") "R#5":"</DISCOUNT>"
      XMLSTR := "<UOM>":PO.UNIT.FLG<1,I>:"</UOM>"
      GOSUB 4000
      GOSUB 10000
      XMLSTR := "<DELIVERY_DATE>":OCONV(PO.DEL.DATE<1,I>, "D2/") "L#8":"</DELIVERY_DATE>"
*      XMLSTR := "<ORDERED_PO_QTY>":PO.TOT.ONORD<1,I>:"</ORDERED_PO_QTY>"
*      XMLSTR := "<RECEVD_PO_QTY>":PO.TOT.RECEVED<1,I>:"</RECEVD_PO_QTY>"
*      XMLSTR := "<CANCEL_PO_QTY>":PO.TOT.CANCEL<1,I>:"</CANCEL_PO_QTY>"
      XMLSTR := "<ORDERED_PO_QTY>":TEMP.ONORD:"</ORDERED_PO_QTY>"
      XMLSTR := "<RECEVD_PO_QTY>":TEMP.RCVD:"</RECEVD_PO_QTY>"
      XMLSTR := "<CANCEL_PO_QTY>":TEMP.CANCEL:"</CANCEL_PO_QTY>"
      XMLSTR := "<OPEN_PO_QTY>":TEMP.OPEN:"</OPEN_PO_QTY>"
      XMLSTR := "<URL>":PROCESS.URL:"</URL>"
      XMLSTR := "</PRODUCT>"
   NEXT I
END ELSE
   MAT PO.REC = ""
END	
XMLSTR := "</PO_DATA>"
*CHANGE THE DELIMITERS ELSE OTHER UNWANTED ASCII CHARACTERS WILL PRINT IN THE OUTPUT
XMLSTR = CHANGE(XMLSTR,AM,"D251R")
XMLSTR = CHANGE(XMLSTR,VM,"D252R")
XMLSTR = CHANGE(XMLSTR,SVM,"D253R")
RETURN
*
10000*
*
    N = I
    IF DIFF.UM<N> = "Y" THEN
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
	TEMP.RCVD = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11"
        TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
        TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
	TEMP.RCVD = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2") "R#11"
      END
      IF ICR.CNV<N,2> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
	TEMP.RCVD = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
      END ELSE
        IF ICR.CNV<N,1> = "MD0" THEN
          TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11"
          TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
          TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
	  TEMP.RCVD = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2") "R#11"
        END ELSE
          TEMP.ONORD = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
          TEMP.CANCEL = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2")"R#11"
          TEMP.OPEN = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
	  TEMP.RCVD = OCONV(INT((PO.TOT.RECEVED<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
        END
      END
    END ELSE
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
	TEMP.RCVD = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" ; P_OPT = ""
        TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
        TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
	TEMP.RCVD = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2") "R#11"
      END
    END
RETURN
**** GET CONVERSIONS
4000*
  LN = I
  BEGIN CASE
    CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
RETURN
93000*
RETURN
