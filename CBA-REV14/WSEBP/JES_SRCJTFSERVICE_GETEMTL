SUBROUTINE JES_GETEMTL(CONO, JOB.ID, SCHEMA.ONLY, ERRMSG, STRXML)
STRXML := '<Estimate><MaterialNomenclature></MaterialNomenclature><MaterialDescription></MaterialDescription><MasterLogWidth></MasterLogWidth><WebQuoted></WebQuoted><DateOrdered_JT_USR></DateOrdered_JT_USR><DateDue_JT_USR></DateDue_JT_USR><RequiredWidth_JT_USR></RequiredWidth_JT_USR><NWide_JT_USR>0</NWide_JT_USR><FtRequiredWWaste_JT_USR>0.0</FtRequiredWWaste_JT_USR><MinFootage_JT_USR>0</MinFootage_JT_USR><Location_JT_USR></Location_JT_USR><Comments_JT_USR></Comments_JT_USR><PONumber_JT_USR></PONumber_JT_USR></Estimate>'
SCHEMA.ONLY="1"
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB COMPANY
OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE" ;GOTO 99999
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE" ;GOTO 99999
* READ THE COMPANY CODE
MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
      GOTO 99999      
END
MATREAD EST.REC FROM ESTIMATE, CONO:JOB.ID THEN
  ECNT=DCOUNT(EST.PROD.OS.PROD,@VM)
  IF ECNT # "0" THEN
     STRXML=''
     SCHEMA.ONLY="0"
  END
  FOR J=1 TO ECNT     
        DCNT=DCOUNT(EST.PROD.OS.PROD<1,J>,@SVM)
	IF DCNT="0" THEN GOSUB 10000
	  FOR K=1 TO DCNT
                STRXML := '<Estimate>'
		STRXML := '<MaterialNomenclature>': EST.PROD.OS.PROD<1,J,K> : '</MaterialNomenclature>'
		STRXML := '<MaterialDescription>': EST.PROD.OS.DESC<1,J,K> : '</MaterialDescription>'
		STRXML := '<MasterLogWidth>' :EST.PROD.OS.RLWIDTH<1,J,K> : '</MasterLogWidth>'
		STRXML := '<WebQuoted>' : OCONV(EST.PROD.OS.WIDTH<1,J,K>,"MD4") :'</WebQuoted>'
		STRXML := '<DateOrdered_JT_USR></DateOrdered_JT_USR>'
		STRXML := '<DateDue_JT_USR></DateDue_JT_USR>'
		STRXML := '<RequiredWidth_JT_USR>' : ' ' : '</RequiredWidth_JT_USR>'
		STRXML := '<NWide_JT_USR>': '0' : '</NWide_JT_USR>'
		STRXML := '<FtRequiredWWaste_JT_USR>' : '0.0' : '</FtRequiredWWaste_JT_USR>'
		STRXML := '<MinFootage_JT_USR>' : '0' : '</MinFootage_JT_USR>'
		STRXML := '<Location_JT_USR>' : ' ' : '</Location_JT_USR>'
		STRXML := '<Comments_JT_USR>' : ' ' : '</Comments_JT_USR>'
		STRXML := '<PONumber_JT_USR>' : ' ' : '</PONumber_JT_USR>'
		STRXML := '</Estimate>'
	  NEXT K       
  NEXT J
END  
RETURN
*
10000
	STRXML := '<Estimate>'
	STRXML := '<MaterialNomenclature>': EST.PROD.OS.PROD<1,J> : '</MaterialNomenclature>'
	STRXML := '<MaterialDescription>': EST.PROD.OS.DESC<1,J> : '</MaterialDescription>'
	STRXML := '<MasterLogWidth>' :EST.PROD.OS.RLWIDTH<1,J> : '</MasterLogWidth>'
	STRXML := '<WebQuoted>' : OCONV(EST.PROD.OS.WIDTH<1,J>,"MD4") :'</WebQuoted>'
	STRXML := '<DateOrdered_JT_USR></DateOrdered_JT_USR>'
	STRXML := '<DateDue_JT_USR></DateDue_JT_USR>'
	STRXML := '<RequiredWidth_JT_USR>' : ' ' : '</RequiredWidth_JT_USR>'
	STRXML := '<NWide_JT_USR>': '0' : '</NWide_JT_USR>'
	STRXML := '<FtRequiredWWaste_JT_USR>' : '0.0' : '</FtRequiredWWaste_JT_USR>'
	STRXML := '<MinFootage_JT_USR>' : '0' : '</MinFootage_JT_USR>'
	STRXML := '<Location_JT_USR>' : ' ' : '</Location_JT_USR>'
	STRXML := '<Comments_JT_USR>' : ' ' : '</Comments_JT_USR>'
	STRXML := '<PONumber_JT_USR>' : ' ' : '</PONumber_JT_USR>'
	STRXML := '</Estimate>'  
RETURN
*
99999*
 IF ERRMSG <> "" THEN
 ERRMSG = "ERROR FROM  JES_GETEMTL  ---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 END
