SUBROUTINE JCS_CUSTOMERSERVICE_CREATESALESREP(PAYLOAD,ERRMSG,STRXML)
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB VEND
$INCLUDE CPYLIB CHAR
*
*---- OPEN FILES
*
ERRMESG = ""
ERRFLAG = 1
ERRMSG = "<Payload><Rejects>"
STRXML="<Payload><SalesRepData>"
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN SALESMAN FILE";GOTO 93000
OPEN "","VEND" TO VEND ELSE ERRMSG = "CANNOT OPEN VEND FILE";GOTO 93000
OPEN "SECURITY" TO SECURITY ELSE ERRMSG="SECURITY FILE MISSING" ; GOTO 93000
MODE = PAYLOAD<1>
CONO = PAYLOAD<2>
SALS_ID = PAYLOAD<3>
SALS_NAME = PAYLOAD<4>
SALS_ADDR1 = PAYLOAD<5>
SALS_ADDR2 = PAYLOAD<6>
SALS_ADDR3 = PAYLOAD<7>
SALS_STATE = PAYLOAD<8>
SALS_ADDR4 = PAYLOAD<9>
SALS_MANAGER = PAYLOAD<10>
SALS_BASE_FWD = PAYLOAD<11>
SALS_COMM_PCT = PAYLOAD<12>
SALS_REGION = PAYLOAD<13>
SALS_VEND = PAYLOAD<14>
SALS_USER = PAYLOAD<15>
*************
SALS.ID =   SALS_ID
READ COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG="Cono ":CONO:" does not exist"
  GOTO 91000
END
IF SALS_ID # "" AND LEN(SALS_ID) GT 3 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ001</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP # SHOULD NOT EXCEED 3 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_NAME # "" AND LEN(SALS_NAME) GT 30 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ002</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP NAME SHOULD NOT EXCEED 30 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_ADDR1 # "" AND LEN(SALS_ADDR1) GT 30 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ003</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP ADDRESS1 SHOULD NOT EXCEED 30 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_ADDR2 # "" AND LEN(SALS_ADDR2) GT 30 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ004</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP ADDRESS2 SHOULD NOT EXCEED 30 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_ADDR3 # "" AND LEN(SALS_ADDR3) GT 27 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ005</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP CITY SHOULD NOT EXCEED 27 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_STATE # "" AND LEN(SALS_STATE) GT 2 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ006</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP STATE SHOULD NOT EXCEED 2 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_ADDR4 # "" AND LEN(SALS_ADDR4) GT 10 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ007</RejectCode>' 
  ERRMSG := '<RejectDescription>SALESREP ZIP SHOULD NOT EXCEED 10 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_MANAGER # "" AND LEN(SALS_MANAGER) GT 3 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ008</RejectCode>' 
  ERRMSG := '<RejectDescription>SALES MANAGER SHOULD NOT EXCEED 3 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_BASE_FWD # "" THEN
  CALL CHECK.DECIMAL(SALS_BASE_FWD,STR("9",8),9,2,"BASED FWD",ERRMESG)
  IF ERRMESG # "" THEN
    ERRFLAG = 0
    ERRMSG := '<Reject>'
    ERRMSG := '<RejectCode>JCSRJ009</RejectCode>' 
    ERRMSG := '<RejectDescription>':ERRMESG:'</RejectDescription>'
    ERRMSG := '</Reject>'
    ERRMESG = ""
  END
END
IF SALS_COMM_PCT # "" THEN
  CALL CHECK.DECIMAL(SALS_COMM_PCT,STR("9",5),1,4,"COMMON PCT",ERRMESG)
  IF ERRMESG # "" THEN
    ERRFLAG = 0
    ERRMSG := '<Reject>'
    ERRMSG := '<RejectCode>JCSRJ0010</RejectCode>' 
    ERRMSG := '<RejectDescription>':ERRMESG:'</RejectDescription>'
    ERRMSG := '</Reject>'
    ERRMESG = ""
  END
END
IF SALS_REGION # "" AND LEN(SALS_REGION) GT 6 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ0017</RejectCode>' 
  ERRMSG := '<RejectDescription>REGION SHOULD NOT EXCEED 6 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_VEND # "" AND LEN(SALS_VEND) GT 5 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ018</RejectCode>' 
  ERRMSG := '<RejectDescription>VENDOR SHOULD NOT EXCEED 5 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
IF SALS_USER # "" AND LEN(SALS_USER) GT 8 THEN
  ERRFLAG = 0
  ERRMSG := '<Reject>'
  ERRMSG := '<RejectCode>JCSRJ019</RejectCode>' 
  ERRMSG := '<RejectDescription>USER NAME SHOULD NOT EXCEED 8 CHARACTERS</RejectDescription>'
  ERRMSG := '</Reject>'
END 
BEGIN CASE
  CASE MODE = "U"
    READ SALESREC FROM SALESMAN,CONO:SALS_ID ELSE
      ERRFLAG = 0
      ERRMSG := '<Reject>'
      ERRMSG := '<RejectCode>JCSRJ030</RejectCode>' 
      ERRMSG := '<RejectDescription>SALESREP # ':SALS_ID:' DOES NOT EXIST,YOU CANNOT UPDATE</RejectDescription>'
      ERRMSG := '</Reject>'  
    END 
  CASE MODE = "C" 
    READ SALESREC FROM SALESMAN,CONO:SALS_ID THEN
      ERRFLAG = 0
      ERRMSG := '<Reject>'
      ERRMSG := '<RejectCode>JCSRJ0031</RejectCode>' 
      ERRMSG := '<RejectDescription>SALESREP # ':SALS_ID:' ALREADY EXIST,YOU CANNOT CREATE</RejectDescription>'
      ERRMSG := '</Reject>'
    END 
  CASE 1
    ERRFLAG = 0
    ERRMSG := '<Reject>'
    ERRMSG := '<RejectCode>JCSRJ0050</RejectCode>' 
    ERRMSG := '<RejectDescription>ERROR LOADING SUBROUTINE WFBP_WFBPSERVICE_CREATESALESREP</RejectDescription>'
    ERRMSG := '</Reject>'
END CASE
IF SALS_USER # '' THEN
  READ XX FROM SECURITY, CONO:SALS_USER ELSE
    ERRFLAG = 0
    ERRMSG := '<Reject>'
    ERRMSG := '<RejectCode>JCSRJ032</RejectCode>' 
    ERRMSG := '<RejectDescription>':SALS_USER:' IS NOT A VALID USER</RejectDescription>'
    ERRMSG := '</Reject>'
  END
END
IF SALS_VEND # "" THEN
  MATREAD VEND.REC FROM VEND , CONO:SALS_VEND ELSE
    ERRFLAG = 0
    ERRMSG := '<Reject>'
    ERRMSG := '<RejectCode>JCSRJ0033</RejectCode>' 
    ERRMSG := '<RejectDescription>VENDOR # (':SALS_VEND:') DOES NOT EXIST</RejectDescription>'
    ERRMSG := '</Reject>'
  END
END
IF ERRFLAG THEN
  STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
  MATREAD SALESMAN.REC FROM SALESMAN,CONO:SALS_ID THEN
     *STRXML:="<Payload><WFBP><SalesRep>Updated Successfully</ServiceRep></WFBP></Payload>"
     *STRXML:="<SalesRepId>":SALS.ID:" Updated Successfully</SalesRepId>"
    STRXML:="<SalesRepId>":SALS.ID:"</SalesRepId>"
  END ELSE
     *STRXML:="<Payload><WFBP><ServiceRep>Created Successfully</ServiceRep></WFBP></Payload>"
     *STRXML:="<SalesRepId>":SALS.ID:" Created Successfully</SalesRepId>"
    STRXML:="<SalesRepId>":SALS.ID:"</SalesRepId>"
  END
  SALS.NAME = SALS_NAME
  SALS.ADDR1 = SALS_ADDR1
  SALS.ADDR2 = SALS_ADDR2
  SALS.ADDR3 = SALS_ADDR3:",":SALS_STATE
  SALS.ADDR4 = SALS_ADDR4
  SALS.MANAGER = SALS_MANAGER
  SALS.BASE.FWD = SALS_BASE_FWD
  SALS.COMM.PCT = SALS_COMM_PCT
  SALS.REGION = SALS_REGION
  SALS.VEND = SALS_VEND
  SALS.USER = SALS_USER
  *STRXML:="<SalesRepId>":SALS.ID:"</SalesRepId>"
  STRXML:="<SalesRepName>":SALS.NAME:"</SalesRepName>"
  STRXML:="<Address1>":SALS.ADDR1:"</Address1>"
  STRXML:="<Address2>":SALS.ADDR2:"</Address2>"
  STRXML:="<City>":SALS_ADDR3:"</City>"
  STRXML:="<State>":SALS_STATE:"</State>"
  STRXML:="<ZipCode>":SALS.ADDR4:"</ZipCode>"
  STRXML:="<SalesManager>":SALS.MANAGER:"</SalesManager>"
  STRXML:="<SalesBaseFwd>":SALS.BASE.FWD:"</SalesBaseFwd>"
  STRXML:="<SalesCommonPCT>":SALS.COMM.PCT:"</SalesCommonPCT>"
  STRXML:="<SalesRegion>":SALS.REGION:"</SalesRegion>"
  STRXML:="<Verdor>":SALS.VEND:"</Verdor>"
  STRXML:="<UserName>":SALS.USER:"</UserName>"
  SWAP "." WITH "" IN SALS.BASE.FWD
  SWAP "." WITH "" IN SALS.COMM.PCT
  MATWRITE SALESMAN.REC ON SALESMAN,CONO:SALS_ID
  STRXML:="</SalesRepData></Payload>"
END ELSE
  ERRMSG := "</Rejects></Payload>"
  STRXML = ERRMSG
END
RETURN
********
91000*
93000*
********
STRXML = '<Payload><Rejects><Reject><RejectCode>JCSRJ000</RejectCode>'
STRXML :='<RejectDescription>':ERRMSG:'</RejectDescription>'
STRXML :='</<Reject></Rejects></Payload>'
CALL WRITELOG(ERRMSG)
RETURN
