SUBROUTINE WBP_WFGETOPOINFORMATION(CONO,OPO.CODE)
*************************
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>VEND
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*************************
   *
   DEFFUN IS.PROCESS.REGISTERED(CONO,PROCESS.NAME)
   DEFFUN IS.KEY.REGISTERED(CONO,PROCESS.ID,KEY.ID)
   PATH = "/usr/ud/primac/rev14/base/CBA-REV14/WBPBP"
   *
   **** OPEN FILES
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING'; GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OSP FILE IS MISSING'; GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   *
   **** SETUP FOR SYSTEM ERRMSGS
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   ***Main Processing
        PROCESS.URL = ""
	XMLSTR = ""
        PROCESSID = "POSOPOM"
        OPO.ID = CONO:OPO.CODE
        PROCESS.URL = IS.PROCESS.REGISTERED(CONO,PROCESSID)
        IF PROCESS.URL # "" THEN
*                  WFINSTANCEID = IS.KEY.REGISTERED(CONO,PROCESSID,OPO.ID)
           RESULTSTR = IS.KEY.REGISTERED(CONO,PROCESSID,OPO.ID)
           WFNAME = RESULTSTR<1>
           WFINSTANCEID = RESULTSTR<2>
           IF WFNAME = "" THEN ERRMSG = "WORKFLOW NAME IS MISSING FOR THIS PROCESS ":PROCESSID ;GOTO 7300
           IF WFINSTANCEID = "" THEN ERRMSG = "INSTANCE ID IS MISSING FOR THIS PROCESS ":PROCESSID ;GOTO 7300
        END ELSE
           GOTO 7300
        END
        XMLSTR := "<Payload>"
        XMLSTR := "<OutsidePo>"
        XMLSTR := "<OutsidePoNo>":OPO.ID[4,99]:"</OutsidePoNo>"
	MATREADU OPO.REC FROM OUTSIDE.PO, CONO:OPO.ID THEN
	    XMLSTR := "<VendorNO>" :OPO.VEND.NO :"</VendorNO>"
            MATREAD VEND.REC FROM VEND,CONO:OPO.VEND.NO THEN
                XMLSTR := "<VendorName>" :VEND.PO.DESC: "</VendorName>"
                XMLSTR := "<VendorAddress1>" :VEND.PO.ADDR1: "</VendorAddress1>"
                XMLSTR := "<VendorAddress2>" :VEND.PO.ADDR2: "</VendorAddress2>"
                XMLSTR := "<VendorCity>" :FIELD(VEND.PO.CT.ST, ",",1): "</VendorCity>"
                XMLSTR := "<VendorState>" :FIELD(VEND.PO.CT.ST, ",",2): "</VendorState>"
                XMLSTR := "<VendorZip>" :VEND.PO.ZIP: "</VendorZip>"
                XMLSTR := "<VendorPhone>" :VEND.PHONE: "</VendorPhone>"
                XMLSTR := "<VendorFax>" :VEND.FAX: "</VendorFax>"
                XMLSTR := "<VendorEmailAddress>" :VEND.EMAIL.ADDR: "</VendorEmailAddress>"                
            END
           * XMLSTR := "<DueDate>" :OCONV(OPO.DATE,"D2/"): "</DueDate>"
	    XMLSTR := "<VendorOrderNo>" :OPO.VDR.ORD : "</VendorOrderNo>"
            XMLSTR := "<ContactName>" :OPO.CONTACT : "</ContactName>"
            XMLSTR := "<ShipViaCode>" :OPO.SHIP.VIA: "</ShipViaCode>"
            XMLSTR := "<ShipViaName>" :OCONV(CONO:OPO.SHIP.VIA,"SHIP.VIA;X;1;1") : "</ShipViaName>"
            XMLSTR := "<FreeOnBoard>" :OPO.FOB: "</FreeOnBoard>"
            XMLSTR := "<Comments>" :OPO.INTRAL.INT: "</Comments>"
            XMLSTR := "<TermsDate>" :OPO.TERMS.DATE: "</TermsDate>"
            XMLSTR := "<TermsDescription>" :OPO.TERMS.DESC: "</TermsDescription>"
            XMLSTR := "<TermsPercentage>" :OCONV(OPO.TERMS.DISC,"MD2"): "</TermsPercentage>"
            XMLSTR := "<ShipToNo>" :OPO.WHSE: "</ShipToNo>"
            XMLSTR := "<ShipToName>" :OPO.SHIP.NAME: "</ShipToName>"
            XMLSTR := "<ShipToAddress1>" :OPO.SHIP.ADDR1: "</ShipToAddress1>"
            XMLSTR := "<ShipToAddress2>" :OPO.SHIP.ADDR2: "</ShipToAddress2>"
            XMLSTR := "<ShipToCity>" :FIELD(OPO.SHIP.ADDR3,",",1): "</ShipToCity>"
            XMLSTR := "<ShipToState>" :FIELD(OPO.SHIP.ADDR3,",",2): "</ShipToState>"
            XMLSTR := "<ShipToZip>" :OPO.SHIP.ADD4: "</ShipToZip>"
            XMLSTR := "<Accrue>" :OPO.ACCRUE: "</Accrue>" 
	    GOSUB 2000
            XMLSTR := "<PrintFlag>" :PRT.FLAG: "</PrintFlag>"
            XMLSTR := "<MailFlag>" :MAIL.FLAG: "</MailFlag>"
            XMLSTR := "<OPoDate>" :OCONV(OPO.DATE,"D2/"): "</OPoDate>"
            XMLSTR := "<Division>" :OPO.DIV.OWNER: "</Division>"
            XMLSTR := "<WrittenBy>" :OPO.ORD.BY: "</WrittenBy>"
            XMLSTR := "<Status>" :OPO.STAT: "</Status>"
            XMLSTR := "<Approver>" :OPO.APPROVER: "</Approver>"
            XMLSTR := "<StatusDate>" :OCONV(OPO.ST.DATE,"D2/"): "</StatusDate>"
            XMLSTR := "<Requestor>" :OPO.REQUESTOR: "</Requestor>"
            *
	    XMLSTR := "<Jobs>"
               JOB.CNT = DCOUNT(OPO.JOB.NO,VM)
               FOR I = 1 TO JOB.CNT
                  MATREADU JSTAT.REC FROM JOB.STATS,CONO:OPO.JOB.NO<1,J> ELSE
                     MAT JSTAT.REC = ""
                  END
                  XMLSTR := "<Job>"
                  XMLSTR := "<JobNo>" :OPO.JOB.NO<1,I>: "</JobNo>"
                  READV JOB.DESCR FROM JOB,CONO:OPO.JOB.NO<1,I>,16 ELSE JOB.DESCR = ''
		  XMLSTR := "<JobDescreption>" :JOB.DESCR: "</JobDescreption>" 
                  XMLSTR := "<OSPCategory >" :OPO.PROD.LINE<1,I> : "<OSPCategory >"
                  MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:OPO.PROD.LINE<1,I> ELSE
                     MAT CAOS.REC = ''
                  END
                  CAT.DESC = CAOS.DESC
                  XMLSTR := "<CategoryDescription>" :CAT.DESC :"<CategoryDescription>"
                  XMLSTR := "<DeliveryDate>":OCONV(OPO.EXP.DATE<1,I>,"D2/"):"</DeliveryDate>"
                  XMLSTR := "<UnitPrice>":OCONV(OPO.U.PRICE<1,I>,"MD4"):"</UnitPrice>"
                  XMLSTR := "<Discount>":OCONV(OPO.DISCOUNT<1,I>,"MD2"):"</Discount>"
                  XMLSTR := "<Uom>":OPO.UOM<1,I>:"</Uom>"
                  XMLSTR := "<OrderQty>" : OCONV(OPO.QTY<1,I>,"MD2"):"</OrderQty>"
                  XMLSTR := "<ReceivedQty>": OCONV(OPO.QTY.RECVD<1,I>,"MD2"):"</ReceivedQty>"
                  XMLSTR := "<CancelQty>":OCONV(OPO.CANCEL.QTY<1,I>,"MD2"):"</CancelQty>"
		 * GOSUB 1019
                  XMLSTR := "<OrderQtyValue>" :OCONV<OPO.EST.COST<1,I>,"MD2"):"<OrderQtyValue>" 
		  XMLSTR := "<OpenedQty>": OCONV(OPO.TOT.OPEN<1,I>,"MD2"):"</OpenedQty>"
		  *
		  XMLSTR := "<Division>":OPO.DVDPCC<1,1,I> :"</Division>"
                  READV DIVSN.DESC FROM DIVISION,CONO:OPO.DVDPCC<1,1,I>,1 ELSE DIVSN.DESC = ''
                  XMLSTR := "<DivisionDesc>":DIVSN.DESC :"</DivisionDesc>"
                  XMLSTR := "<Department>":OPO.DVDPCC<1,2,I> :"</Department>"
                  READV DEPMT.DESC FROM DEPARTMENT,CONO:OPO.DVDPCC<1,2,I>,2 ELSE DEPMT.DESC = ''
                  XMLSTR := "<DepartmentDesc>":DEPMT.DESC:"</DepartmentDesc>"
                  XMLSTR := "<Cctr>":OPO.DVDPCC<1,3,I>:"</Cctr>"		 
                  READV COSTCTR.DESC FROM COST.CNTR,CONO:OPO.DVDPCC<1,3,I>,1 ELSE COSTCTR.DESC = ''
                  XMLSTR := "<CctrDesc>":COSTCTR.DESC:"</CctrDesc>"
                  XMLSTR := "<Operation>":OPO.OPER.CODE<1,1,I>:"</Operation>"		
                  READV OPERT.DESC FROM OPERATION,CONO:OPO.OPER.CODE<1,1,I>,1 ELSE OPERT.DESC = ''
                  XMLSTR := "<OperationDesc>":OPERT.DESC:"</OperationDesc>"
                  XMLSTR := "<JobComments>":OPO.ITEM.COMM<1,I>:"</JobComments>"
                  XMLSTR := "</Job>"
	    	NEXT I 
            XMLSTR := "<TotalQtyOrdered>" :OCONV(TOT.AMT,"MD2"):"</TotalQtyOrdered>" 
            XMLSTR := "<TotalAmount>" :OCONV(TOT.AMT,"MD2"):"</TotalAmount>" 
            XMLSTR := "</Jobs>"
        END ELSE 
            MAT OPO.REC = ""
        END
        XMLSTR := "<Url>":PROCESS.URL:"</Url>"
        XMLSTR := "</OutsidePo>"
        XMLSTR := "</Payload>"
                *NOW CALL THE WEB SERVICE V
                WEB.HANDLE="";RESP.HEADERS="";RESP.DATA="";HTTP.STATUS=""
*               URL="http://192.168.1.14/PrimacSystems.Webservices.Rev14.Dev/ICS/WF_ReceiptPostInfo.asmx/?"
                URL = PROCESS.URL
                REQUEST.STATUS=createRequest(URL,"GET",WEB.HANDLE)
                DEFAULT.STR = ""
                IF REQUEST.STATUS THEN
                   ERR.LOG = "ERROR = createRequest Failed, code is ":REQUEST.STATUS
                   GOTO 7300
                END
                KEY.STR = "WFName":AM:"ProcessId":AM:"WFInstanceId":AM:"PayLoad"
                VAL.STR = WFNAME:AM:PROCESSID:AM:WFINSTANCEID:AM:XMLSTR
                FOR I = 1 TO DCOUNT(KEY.STR,AM)
                  PARAM.STATUS = addRequestParameter(WEB.HANDLE,KEY.STR<I>,VAL.STR<I>,"")
                  IF PARAM.STATUS THEN
                    ERR.LOG = "ERROR = ADD PARAMETER FAILED ":PARAM.STATUS
                    GOTO 7300
                  END
                NEXT I
                SUBMIT.STATUS=submitRequest(WEB.HANDLE,"","",RESP.HEADERS,RESP.DATA,HTTP.STATUS)
                IF SUBMIT.STATUS THEN
                   ERR.LOG = "ERROR = SUBMIT REQUEST FAILED ":HTTP.STATUS :"-":SUBMIT.STATUS
                   GOTO 7300
                END
7300*
                IF ERR.LOG # "" THEN OSWRITE ERR.LOG ON PATH:"/LogFile.txt"
RETURN
         
            
*****SHOW.PRINT.MAIL.FLAGS 
2000*
   PRT.FLAG = "";MAIL.FLAG=""
   BEGIN CASE
      CASE OPO.PRT.FLG<1,1> = 'Y'
         PRT.FLAG = "Yes"
      CASE OPO.PRT.FLG<1,1> = 'P'
         PRT.FLAG = "Print"
      CASE OPO.PRT.FLG<1,1> = 'C'
         PRT.FLAG = "Copy"
      CASE 1
         PRT.FLAG = "No"
   END CASE
   BEGIN CASE
      CASE OPO.PRT.FLG<1,2> = 'Y'
         MAIL.FLAG = "Yes"
      CASE OPO.PRT.FLG<1,2> = 'M'
         MAIL.FLAG = "Sent"
      CASE OPO.PRT.FLG<1,2> = 'C'
         MAIL.FLAG = "Copy"
      CASE 1
         MAIL.FLAG = "No"
   END CASE
RETURN
**** CALCULATE ORDERD VALUE
1019 *
   DESC.PRICE = INT(OPO.U.PRICE<1,I>*((OPO.DISCOUNT<1,I>/10000)))
   DESC.PRICE = INT(OPO.U.PRICE<1,I> - DESC.PRICE)
   BEGIN CASE
      CASE OPO.UOM<1,I> = "M" 
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,I>/100000)+.5)
      CASE OPO.UOM<1,I> = "C"
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,I>/10000)+.5)
      CASE 1
         IF DESC.PRICE LT 0 THEN
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,I>/100) - .5)
         END ELSE
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,I>/100) + .5)
         END
   END CASE
      OPO.EST.COST<1,I> = ONORD.AMT
RETURN
*** CALCULATE TotalS
*
1021 *
   P.CNT = DCOUNT(OPO.JOB.NO,VM)
   TOT.QTY = 0 ; TOT.AMT = 0
   FOR A = 1 TO P.CNT
      TOT.QTY = TOT.QTY + OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>
      DESC.PRICE = INT(OPO.U.PRICE<1,A>*((OPO.DISCOUNT<1,A>/10000)))
      DESC.PRICE = INT(OPO.U.PRICE<1,A> - DESC.PRICE)
      BEGIN CASE
         CASE OPO.UOM<1,A> = "M" 
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100000)+.5))
         CASE OPO.UOM<1,A> = "C"
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/10000)+.5))
         CASE 1
            ONORD.AMT.TOT = INT((DESC.PRICE/100) * ((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100)+.5)
      END CASE
      TOT.AMT = TOT.AMT + ONORD.AMT.TOT
   NEXT A
RETURN
*
99999 *
RETURN
