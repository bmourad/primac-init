SUBROUTINE JCS_GETJOB(CONO, JOBID, SCHEMA.ONLY,ERRMSG, OUT_PARAM_JOB)
SCHEMA.ONLY="1"
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE JES.CPYLIB ESTIMATE
 $INCLUDE JES.CPYLIB ESTIMATOR
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB SHIP.VIA
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'CANNOT OPEN JOB FILE'   
  GOTO 99999
END
OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE
  ERRMSG = 'CANNOT OPEN JOB.FNGD.STATS FILE'   
  GOTO 99999
  RETURN
END
OPEN '','CSR.CODE' TO CSR.CODE ELSE
  ERRMSG = 'CANNOT OPEN CSR.CODE FILE'   
  GOTO 99999
  RETURN
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE
  ERRMSG = 'CANNOT OPEN CUSTOMER FILE'   
  GOTO 99999
  RETURN
END
OPEN '','ESTIMATE' TO ESTIMATE ELSE
  ERRMSG = 'CANNOT OPEN ESTIMATE FILE'   
  GOTO 99999
  RETURN
END
OPEN '','ESTIMATOR' TO ESTIMATOR ELSE
ERRMSG = 'CANNOT OPEN ESTIMATOR FILE'
GOTO 99999
RETURN
END
OPEN '','SALESMAN' TO SALESMAN ELSE
  ERRMSG = 'CANNOT OPEN SALESMAN FILE'   
  GOTO 99999
  RETURN
END
OPEN '','DIVISION' TO DIVISION ELSE
  ERRMSG = 'CANNOT OPEN DIVISION FILE'   
  GOTO 99999
  RETURN
END
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE
  ERRMSG = 'CANNOT OPEN SHIP VIA FILE'   
  GOTO 99999
  RETURN
END
OPEN '','CONTROL' TO CONTROL ELSE STOP
MATREAD JOB.REC FROM JOB, CONO:JOBID THEN
  SCHEMA.ONLY="0"
  OUT_PARAM_JOB = '<Job>'
  JOB_FNGD_FLAG = ""
  JOB_CUR_STATUS = ""
  MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBID THEN
    IF JFS.PROD # "" THEN
      JOB_FNGD_FLAG = 1
    END ELSE
      JOB_FNGD_FLAG = 0
    END
  END ELSE
    JOB_FNGD_FLAG = 0
  END
  JOB_CUR_STATUS = FIELD(JOB.STATUS,@VM,1)
  IF JOB_FNGD_FLAG = 1 THEN JOB_BOOKINGS = 0 ELSE IF JOB_CUR_STATUS = 4 THEN JOB_BOOKINGS = 0 ELSE IF JOB_CUR_STATUS > 5 THEN JOB_BOOKINGS = 0 ELSE JOB_BOOKINGS = JOB.EST.SALE - JOB.TOT.INV
  MATREAD CSR.REC FROM CSR.CODE, CONO:JOB.CSR ELSE MAT CSR.REC = ""
  STATUS = ''
  BEGIN CASE
    CASE JOB.STATUS<1,1>=""
      STATUS="BOOKED"
    CASE JOB.STATUS<1,1>="7"
      STATUS="READY TO PURGE"
    CASE JOB.STATUS<1.1>="8"
      STATUS="WAS PURGED"
    CASE JOB.STATUS<1,1>="9"
      STATUS="CANCELLED"
    CASE JOB.TRACK.DATE<1,10># ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          STATUS="IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          STATUS="REOPENED"
        CASE JOB.STATUS<1,1> = "3"
          STATUS="INVOICED"
        CASE 1
          STATUS="COMPLETED"
      END CASE
    CASE JOB.TRACK.DATE<1,9> #""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          STATUS="IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          STATUS="REOPENED"
        CASE 1
          STATUS="INVOICED"
      END CASE
    CASE JOB.TRACK.DATE<1,8> # ""
      STATUS = "COSTED"
    CASE JOB.TRACK.DATE<1,7> # ""
      STATUS = "READY TO BILL"
    CASE JOB.TRACK.DATE<1,6> # ""
      STATUS = "DELIVERED"
    CASE JOB.TRACK.DATE<1,5> # ""
      STATUS = "IN PROCESS"
    CASE JOB.TRACK.DATE<1,3> # ""
      STATUS = "IN PROCESS"
    CASE JOB.TRACK.DATE<1,1>="1"
      STATUS = "IN PROCESS"
    CASE 1
      STATUS = JOB.STATUS<1,1>
  END CASE
  OUT_PARAM_JOB := '<CustomerId>' : JOB.CUST : '</CustomerId>'
  OUT_PARAM_JOB := '<CustomerName>' : OCONV(CONO:JOB.CUST,"TCUSTOMER;X;1;1") : '</CustomerName>'
OUT_PARAM_JOB := '<QuotedAmount>' : OCONV(JOB.CONF.AMT<1,1>, "MD2") : '</QuotedAmount>'
  OUT_PARAM_JOB := '<JobNo>' : JOBID : '</JobNo>'
  TYPE = ''
  BEGIN CASE
    CASE JOB.TYPE<1,1> = "C"
      TYPE = "Customer Change Order"
    CASE JOB.TYPE<1,1> = "S"
      TYPE = "Spoilage"
    CASE JOB.TYPE<1,1> = "R"
      TYPE = "Regular"
    CASE JOB.TYPE<1,1> = "N"
      TYPE = "Non Chargable"
  END CASE
  CHK.MASTER = ""
  GOSUB GET.JOB.MASTER
  OUT_PARAM_JOB := '<QuotedAmount>' : OCONV(JOB.CONF.AMT<1,1>, "MD2") : '</QuotedAmount>'
  OUT_PARAM_JOB := '<QuotedDate>' :OCONV(JOB.TRACK.DATE<1,2>, "D2/"):'</QuotedDate>'
  ACTIVE = 0
  GOSUB SIS_ACTIVE
MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
     GOTO 99999
   END
1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
*
3100 QUOTED.AMT = 0
   LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
      IF JOB.TOT.INV > 0 THEN
         QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
      END ELSE
         QUOTED.AMT = JOB.CONF.AMT
      END
      IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
   END
*
TOT.SALE = 0; AVAIL = 0
TOT.SALE = CUST.AR.BAL + CUR.JOB.BAL + CUR.ORD.BAL + QUOTED.AMT
AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - CUR.ORD.BAL - QUOTED.AMT
  OUT_PARAM_JOB := '<CreditCode>' : CUST.CREDIT : '</CreditCode>'
  OUT_PARAM_JOB := '<CreditLimit>' : CUST.CR.LIMIT : '</CreditLimit>'
  OUT_PARAM_JOB := '<TotalBalance>' : OCONV(TOT.SALE<1,1>, "MD2") : '</TotalBalance>'
OUT_PARAM_JOB := '<OpenReceivables>' : OCONV(CUST.AR.BAL,"MD2") : '</OpenReceivables>'
OUT_PARAM_JOB := '<OpenOrders>' : OCONV(CUR.JOB.BAL,"MD2") : '</OpenOrders>'
OUT_PARAM_JOB := '<OpenJobs>' : OCONV(CUR.ORD.BAL,"MD2") : '</OpenJobs>'
OUT_PARAM_JOB := '<TotalAvail>' : OCONV(AVAIL,"MD2") : '</TotalAvail>'
*OUT_PARAM_JOB := '<QuotedAmount>' : OCONV(QUOTED.AMT,"MD2") : '</QuotedAmount>'
OUT_PARAM_JOB := '<PaymentTerms>' :  CUST.TERMS : '</PaymentTerms>'
 OUT_PARAM_JOB := '<HighBalance>' :   CUST.HIGH.BAL : '</HighBalance>'
OUT_PARAM_JOB := '<StartDate>' :   CUST.START.DATE : '</StartDate>'
  OUT_PARAM_JOB := '<TotalCost>' : OCONV(JOB.TOT.COST<1,1>, "MD2") : '</TotalCost>'
  OUT_PARAM_JOB := '<TotalSale>' : OCONV(JOB.TOT.SALE<1,1>, "MD2") : '</TotalSale>'
  OUT_PARAM_JOB := '</Job>'
OUT_PARAM_JOB := '<TotalDirectCost>' : OCONV(JOB.TOT.DCOST<1,1>, "MD2") :'</TotalDirectCost>'
OUT_PARAM_JOB := '<TotalInvoiced>' : OCONV(JOB.TOT.INV<1,1>, "MD2") : '</TotalInvoiced>'
END
RETURN
* 
GET.JOB.MASTER: 
  IF JOBID = JOB.MASTER<1,1> AND JOB.SUBS = "" THEN
    CHK.MASTER = 0
  END ELSE
    CHK.MASTER = 1
  END
  RETURN 
*
99999*
IF ERRMSG <> "" THEN
      ERRMSG = "ERROR FROM JCS_GETJOB --> " : ERRMSG
     CALL WRITELOG(ERRMSG)
END
RETURN
SIS_ACTIVE: 
  STATUS = ""
  BEGIN CASE
    CASE JOB.STATUS<1,1> = ""
      STATUS = "BOOKED"
    CASE JOB.TRACK.DATE<1,10> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          STATUS = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          STATUS="REOPENED"
        CASE JOB.STATUS<1,1> = "3"
          STATUS="INVOICED"
        CASE 1
          STATUS = "COMPLETED"
      END CASE
    CASE JOB.TRACK.DATE<1,9> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          STATUS = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          STATUS="REOPENED"
        CASE 1
          STATUS = "INVOICED"
      END CASE
    CASE JOB.TRACK.DATE<1,8> # ""
      STATUS = "COSTED"
    CASE JOB.TRACK.DATE<1,7> # ""
      STATUS = "RDY-TO-BILL"
    CASE JOB.TRACK.DATE<1,6> # ""
      STATUS = "DELIVERED"
    CASE JOB.TRACK.DATE<1,5> # ""
      STATUS = "IN PROCESS"
    CASE JOB.TRACK.DATE<1,3> # ""
      STATUS = "IN PROCESS"
    CASE JOB.STATUS<1,1> = "1"
      STATUS = "IN PROCESS"
    CASE 1
      STATUS = JOB.STATUS<1,1>
  END CASE
  BEGIN CASE
    CASE STATUS = "BOOKED"
      ACTIVE = 1
    CASE STATUS = "IN PROCESS"
      ACTIVE = 1
    CASE STATUS = "REOPENED"
      ACTIVE = 1
  END CASE
  RETURN
