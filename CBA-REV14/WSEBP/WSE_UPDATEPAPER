SUBROUTINE WSE_UPDATEPAPER(CONO, JOBID, PAPERID, WHSEID, QTYRESERVED, ORIGINAL.JOB.REC, CURRDATE, ERRMSG)
PAPERXML = ''
CALL WSE_MRW_GETJOBDATA(CONO, JOBID, ERRMSG, PAPERXML)
IF ERRMSG # '' THEN RETURN
IF ORIGINAL.JOB.REC # PAPERXML THEN ERRMSG = "DATA MISMATCH FOR JOB ":JOBID:", TRANSACTION ABORTED"; RETURN
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB INV.CNV
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'INVENTORY FILE IS MISSING'
  RETURN
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'JOB FILE IS MISSING'
  RETURN
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG = 'INV.WHSE FILE IS MISSING'
  RETURN
END
 
NCNT = DCOUNT(PAPERID,@VM)
MATREAD JOB.REC FROM JOB, CONO : JOBID THEN
FOR I = 1 TO NCNT
  NEW.REC = DCOUNT(JOB.RESV.MATL,@VM) + 1
  BFND = 0
  CNT = DCOUNT(JOB.RESV.MATL,@VM)
  FOR J = 1 TO CNT
    IF JOB.RESV.MATL<1,J> = PAPERID<1,I> AND JOB.RESV.WHSE<1,J> = WHSEID<1,I> THEN BFND = J
  NEXT J
 
PREV.AMT.RESV = 0
  IF BFND # 0 THEN
   *FOUND THE RECORD, UPDATE IT
     JOB.RESV.MATL<1,BFND> = PAPERID<1,I>
     JOB.RESV.WHSE<1,BFND> = WHSEID<1,I>
     JOB.RESV.DATE<1,BFND> = ICONV(CURRDATE,'D2/')
     PREV.AMT.RESV = JOB.RESV.QTY<1,BFND>
     JOB.ALOC.QTY<1,BFND> = JOB.ALOC.QTY<1,BFND>
     JOB.RESV.QTY<1,BFND> = ICONV(QTYRESERVED<1,I>,'MD2') * 10
     JOB.USED.QTY<1,BFND> = JOB.USED.QTY<1,BFND>
  END ELSE
   *GET THE REMAINING INFO., FROM THE INVENTORY FILE
   *INSERT THE NEW RECORD
   MATREAD INV.REC FROM INVENTORY, CONO:PAPERID<1,I> THEN
     JOB.RESV.MATL<1,NEW.REC> = PAPERID<1,I>
     JOB.RESV.WHSE<1,NEW.REC> = WHSEID<1,I>
     JOB.RESV.DATE<1,NEW.REC> = ICONV(CURRDATE,'D2/')
     JOB.ALOC.QTY<1,NEW.REC> = 0
     JOB.RESV.QTY<1,NEW.REC> = ICONV(QTYRESERVED<1,I>,'MD2') * 10
     JOB.USED.QTY<1,NEW.REC> = 0
   END
 END
IWH.ID = CONO:PAPERID<1,I>:'!':WHSEID<1,I>
READVU IWH.RESV FROM INV.WHSE, IWH.ID, 8 THEN
  IWH.RESV -= PREV.AMT.RESV
  IWH.RESV += ICONV(QTYRESERVED<1,I>,'MD2') * 10
  WRITEV IWH.RESV ON INV.WHSE, IWH.ID, 8
END
RELEASE INV.WHSE, IWH.ID
NEXT I
 WRITEV JOB.RESV.MATL ON JOB, CONO:JOBID, 31
 WRITEV JOB.RESV.WHSE ON JOB, CONO:JOBID, 32
 WRITEV JOB.RESV.DATE ON JOB, CONO:JOBID, 33
 WRITEV JOB.ALOC.QTY ON JOB, CONO:JOBID, 34
 WRITEV JOB.RESV.QTY ON JOB, CONO:JOBID, 35
 WRITEV JOB.USED.QTY ON JOB, CONO:JOBID, 36
END ELSE
  ERRMSG = 'CANNOT FIND JOB ':CONO:JOBID
  RETURN
END
RETURN
