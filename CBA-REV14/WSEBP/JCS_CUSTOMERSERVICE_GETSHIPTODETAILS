SUBROUTINE JCS_CUSTOMERSERVICE_GETSHIPTODETAILS(CONO,CUSTOMERNO,SHIPTONO,ERRMSG,OUT_PARAM_CUST,SCHEMA.ONLY)
*Created by - magafoor on 05/20/2009
***********************************************************************************************************
*OUT_PARAM_CUST = '<Customer><cono></cono><CustomerNo></CustomerNo><CustomerName></CustomerName><Address1></Address1><Address2></Address2><Address3></Address3><CityState></CityState><Zip></Zip><SortName></SortName><Attention></Attention><Phone></Phone><SalesRepCode></SalesRepCode><EmailId></EmailId><Instructions></Instructions><CsrCode></CsrCode><CsrName></CsrName><ShipViaCode></ShipViaCode><ShipViaName></ShipViaName><ShippingTerms></ShippingTerms><FOB></FOB><MasterAccount></MasterAccount><StartDate></StartDate><CreditCode></CreditCode><PaymentTerms></PaymentTerms><CustomerType></CustomerType><StatementCode></StatementCode><InvoiceType></InvoiceType><PriceCode></PriceCode><NormalPercentageOver></NormalPercentageOver><MiscCode></MiscCode><CreditReason></CreditReason><CustomerComments></CustomerComments><Contact><Lineno></Lineno><Type></Type><Name></Name></Contact><ShipToNumber></ShipToNumber><ShipToName></ShipToName><ShipToAddress1></ShipToAddress1><ShipToAddress2></ShipToAddress2><SoldToCityState></SoldToCityState><SoldToZipCode></SoldToZipCode></Customer><CustomerCreditData><CCICreditLimit></CCICreditLimit><CCICreditAvailable></CCICreditAvailable><CCIHighBalance></CCIHighBalance><CCIAverageInvoice></CCIAverageInvoice><CCIAverageDaysToPay></CCIAverageDaysToPay><CCILastPaymentDate></CCILastPaymentDate><CCILastPaymentAmount></CCILastPaymentAmount><CCILastSaleDate></CCILastSaleDate><CCICurrPeriod></CCICurrPeriod><CCICurrPeriodSales></CCICurrPeriodSales><CCILYCurrPeriod></CCILYCurrPeriod><CCILYCurrPeriodSales></CCILYCurrPeriodSales><CCICurrYear></CCICurrYear><CCICurrYearSales></CCICurrYearSales><CCILastYear></CCILastYear><CCILastYearSales></CCILastYearSales><CCIOpenReceivable></CCIOpenReceivable><CCIOpenOrders></CCIOpenOrders><CCIOpenJobs></CCIOpenJobs><CCITotalBalance></CCITotalBalance><CCICredits0_30></CCICredits0_30><CCICredits31_60></CCICredits31_60><CCICredits61_90></CCICredits61_90><CCICredits91AndOver></CCICredits91AndOver><CCITotalCredits></CCITotalCredits></CustomerCreditData>'
SCHEMA.ONLY = 0
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CSR.CODE   
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE PMC.CPYLIB TAX
*
OPEN '','CSR.CODE' TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN CSR.CODE FILE" ;GOTO 99999
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE" ;GOTO 99999
OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = "CANNOT OPEN SALESMAN FILE" ;GOTO 99999
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE" ;GOTO 99999
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN SHIP.VIA FILE" ;GOTO 99999
OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE" ;GOTO 99999
OPEN '','TAX' TO TAX ELSE ERRMSG = "CANNOT OPEN TAX FILE" ;GOTO 99999
* READ THE COMPANY CODE
ERRSTR = "<Rejects>"
ERRFLAG = 0
*
  MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG = "COMPANY NUMBER ":CONO:" DOES NOT EXIST!"
      ERRFLAG = 1
      ERRSTR := "<Reject>"
      ERRSTR := "<RejectCode>CSSTD001</RejectCode>"
      ERRSTR := "<RejectDescription>COMPANYNO ":CONO:" DOES NOT EXIST!</RejectDescription>"
      ERRSTR := "</Reject>"
      GOTO 98000
  END
 MATREADU CUST.REC FROM CUSTOMER, CONO:CUSTOMERNO LOCKED
   SCHEMA.ONLY = 0
   ERRFLAG = 1
   ERRSTR := "<Reject>"
   ERRSTR := "<RejectCode>CSSTD003</RejectCode>"
   ERRSTR := "<RejectDescription>CUSTOMER # ":CUSTOMERNO:" IS LOCKED BY USER ":GETUSERNAME(STATUS()):"</RejectDescription>"
   ERRSTR := "</Reject>"
   GOTO 98000
 END ELSE
   ERRFLAG = 1
   ERRSTR := "<Reject>"
   ERRSTR := "<RejectCode>CSSTD002</RejectCode>"
   ERRSTR := "<RejectDescription>CUSTOMER # ":CUSTOMERNO:" DOES NOT EXIST!</RejectDescription>"
   ERRSTR := "</Reject>"
    GOTO 98000
 END
  IF LEN(SHIPTONO)=2 THEN SHIPTONO="0":SHIPTONO
  IF LEN(SHIPTONO)=1 THEN SHIPTONO="00":SHIPTONO
  MATREADU SPT.REC FROM SHIP.TO, CONO:CUSTOMERNO:"!":SHIPTONO LOCKED
      ERRFLAG = 1
      ERRSTR := "<Reject>"
      ERRSTR := "<RejectCode>CSSTD005</RejectCode>"
      ERRSTR := "<RejectDescription>SHIPTO # ":SHIPTONO:" IS LOCKED BY USER ":GETUSERNAME(STATUS()):"</RejectDescription>"
      ERRSTR := "</Reject>"
  END ELSE
      MAT SPT.REC=""
      ERRFLAG = 1
      ERRSTR := "<Reject>"
      ERRSTR := "<RejectCode>CSSTD004</RejectCode>"
      ERRSTR := "<RejectDescription>SHIPTO # ":SHIPTONO:" DOES NOT EXIST!</RejectDescription>"
      ERRSTR := "</Reject>"
  END
  OUT_PARAM_CUST = '<Customer>'
  *
  OUT_PARAM_CUST := '<Cono>' : CONO : '</Cono>'
  OUT_PARAM_CUST := '<CustomerNo>' : CUSTOMERNO : '</CustomerNo>'
  OUT_PARAM_CUST := '<CustomerAddress>'
  *OUT_PARAM_CUST := '<CompanyNo>' : CONO : '</CompanyNo>'
  *OUT_PARAM_CUST := '<CustomerNo>' : CUSTOMERNO : '</CustomerNo>'
  OUT_PARAM_CUST := '<City>': FIELD(CUST.ADDR4,",",1) :'</City>'
  OUT_PARAM_CUST := '<CodeInst>' :CUST.INT.INST: '</CodeInst>'
  OUT_PARAM_CUST := '<CustAddrName>' :CUST.NAME:'</CustAddrName>'
  OUT_PARAM_CUST := '<StateCode>': FIELD(CUST.ADDR4,",",2):'</StateCode>'
  OUT_PARAM_CUST := '<StreetAddrLine1>' :CUST.ADDR1: '</StreetAddrLine1>'
  OUT_PARAM_CUST := '<StreetAddrLine2>' :CUST.ADDR2 : '</StreetAddrLine2>'
  IF  INDEX(CUST.ZIP,"-",1) THEN
     ZIP = FIELD(CUST.ZIP,"-",1)
     ZIPFOUR = FIELD(CUST.ZIP,"-",2)
  END ELSE
     ZIP = CUST.ZIP
     ZIPFOUR = ""
  END
  OUT_PARAM_CUST := '<Zip>' : ZIP : '</Zip>'
  OUT_PARAM_CUST := '<ZipFour>' :ZIPFOUR: '</ZipFour>' 
  OUT_PARAM_CUST :='</CustomerAddress>'
  *
  OUT_PARAM_CUST := '<ShipTo>'
*  OUT_PARAM_CUST := '<CompanyNo>' : CONO : '</CompanyNo>'
*  OUT_PARAM_CUST := '<Cono>' : CONO : '</Cono>'
*  OUT_PARAM_CUST := '<CustomerNo>' : CUSTOMERNO : '</CustomerNo>'
  OUT_PARAM_CUST := '<ShipToNo>' : SHIPTONO : '</ShipToNo>'
  OUT_PARAM_CUST := '<ShipToName>' : SPT.NAME : '</ShipToName>'
  OUT_PARAM_CUST := '<Address1>' : SPT.ADDR1  : '</Address1>'
  OUT_PARAM_CUST := '<Address2>' : SPT.ADDR2  : '</Address2>'
*  OUT_PARAM_CUST := '<City>' : SPT.CITY : '</City>'
*  OUT_PARAM_CUST := '<State>' : SPT.STATE : '</State>'
  OUT_PARAM_CUST := '<CityState>' :SPT.CITY:",":SPT.STATE:'</CityState>'
  OUT_PARAM_CUST := '<ZipCode>' : SPT.ZIP : '</ZipCode>'
  OUT_PARAM_CUST := '<Attention>' : SPT.ATTN : '</Attention>'
  OUT_PARAM_CUST := '<SalesRepCode>' : SPT.SLSMN : '</SalesRepCode>'
  OUT_PARAM_CUST := '<SalesRepName>' : OCONV(CONO:SPT.SLSMN,"TSALESMAN;X;1;1") : '</SalesRepName>'
  OUT_PARAM_CUST := '<ShipViaCode>' : SPT.SHIP.VIA : '</ShipViaCode>'
  OUT_PARAM_CUST := '<ShipViaName>' : OCONV(CONO:SPT.SHIP.VIA,"TSHIP.VIA;X;1;1") : '</ShipViaName>'
  OUT_PARAM_CUST := '<ShipTerms>' : SPT.SHP.TERMS : '</ShipTerms>'
  OUT_PARAM_CUST := '<FOB>' : SPT.FOB : '</FOB>'
  OUT_PARAM_CUST := '<FOBName>' : OCONV(CONO:SPT.FOB,"TFOB;X;1;1") : '</FOBName>'
  OUT_PARAM_CUST := '<Phone>' : SPT.PHONE : '</Phone>'
  OUT_PARAM_CUST := '<Fax>' : SPT.FAX : '</Fax>'
  OUT_PARAM_CUST := '<Status>' : SPT.STATUS : '</Status>'
   OUT_PARAM_CUST := '<Date>' :OCONV(SPT.STAT.DATE,"D2/") : '</Date>'
*
  OUT_PARAM_CUST := '<SoldToDetails>'
  OUT_PARAM_CUST := '<SoldToNo>' : CUSTOMERNO : '</SoldToNo>'
  OUT_PARAM_CUST := '<SoldToName>' : CUST.NAME : '</SoldToName>'
  OUT_PARAM_CUST := '<SoldToAddress1>' : CUST.ADDR1  : '</SoldToAddress1>'
  OUT_PARAM_CUST := '<SoldToAddress2>' : CUST.ADDR2  : '</SoldToAddress2>'
*  OUT_PARAM_CUST := '<SoldToCity>' : FIELD(CUST.ADDR4,",",1) : '</SoldToCity>' 
*  OUT_PARAM_CUST := '<SoldToState>' : FIELD(CUST.ADDR4,",",2) : '</SoldToState>' 
  OUT_PARAM_CUST := '<SoldToCityState>' : CUST.ADDR4 : '</SoldToCityState>'
  OUT_PARAM_CUST := '<SoldToZipCode>' : CUST.ZIP : '</SoldToZipCode>'
  OUT_PARAM_CUST := '</SoldToDetails>'
*
  OUT_PARAM_CUST := '<TaxJurisdictions>'
     FOR I = 1 TO DCOUNT(SPT.TAX.JUR,@VM)
      OUT_PARAM_CUST := '<TaxJurisdiction>'
      MATREAD TAX.REC FROM TAX,CONO:SPT.TAX.JUR<1,I> THEN
        OUT_PARAM_CUST := '<Jurisdiction>':SPT.TAX.JUR<1,I>:'</Jurisdiction>'
        OUT_PARAM_CUST := '<JurisdictionName>':TAX.JUR:'</JurisdictionName>'
        OUT_PARAM_CUST := '<Taxable>':SPT.TAXABLE<1,I>:'</Taxable>'
        OUT_PARAM_CUST := '<TaxExemptNo>':SPT.EXEMPT<1,I>:'</TaxExemptNo>'
        OUT_PARAM_CUST := '<ExpiryDate>':OCONV(SPT.EXMT.DATE<1,I>,"D2/"):'</ExpiryDate>'
      END 
      OUT_PARAM_CUST := '</TaxJurisdiction>'
     NEXT I
  OUT_PARAM_CUST := '</TaxJurisdictions>'  
  OUT_PARAM_CUST := '</ShipTo>'
  OUT_PARAM_CUST := '</Customer>'
*
98000*
*
IF ERRFLAG = 1 THEN
   SCHEMA.ONLY = 0   
   ERRSTR := "</Rejects>"
   OUT_PARAM_CUST = ERRSTR
END
RETURN
*
99999*
 IF ERRMSG <> "" THEN
 ERRMSG = "GetCustomerDetails ---> PMC_CUSTOMERSERVICE_GETCUSTOMERDETAILS ---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 END
