SUBROUTINE WSE_GETMATERIALUSED(INPUTSTR, ERRMSG, PAPERXML)
*T29315 MAGFOOR ON 06/12/2009
**************************************************************************
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE JCS.CPYLIB JOB.MATL
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE CPYLIB CHAR
$INCLUDE CPYLIB FILE.VARS
$INCLUDE ICS.CPYLIB INV.CNV
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'JOB FILE IS MISSING'
  RETURN
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE
  ERRMSG = 'CUSTOMER FILE IS MISSING'
  RETURN
END
OPEN '','JOB.MATL' TO JOB.MATL ELSE
  ERRMSG = 'JOB.MATL FILE IS MISSING'
  RETURN
END
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'INVENTORY FILE IS MISSING'
  RETURN
END
OPEN '','DEPARTMENT' TO DEPARTMENT ELSE
  ERRMSG = 'DEPARTMENT FILE IS MISSING'
  RETURN
END
OPEN '','COST.CNTR' TO COST.CNTR ELSE
  ERRMSG = 'COST.CNTR FILE IS MISSING'
  RETURN
END
OPEN "","CONTROL" TO CONTROL ELSE RETURN
************************************
*PAPERXML = "<Materials>"
PAPERXML = ""
JCS.DATA = ''
MAT INV.CNV.REC = ""
*INPUTSTR = "001":AM:"01/01/2001":AM:"05/05/2005":AM:"12":AM:"":AM:"":AM:"":AM:"CUS":AM:""
CONO = INPUTSTR<1>
*PRESSDEPT = INPUTSTR<2>
STARTDATE = INPUTSTR<2>
ENDDATE = INPUTSTR<3>
CUST.ID.1 = INPUTSTR<4>
CUST.ID.2 = INPUTSTR<5>
CUST.ID.3 = INPUTSTR<6>
CUST.NAME.1 = UPCASE(INPUTSTR<7>)
CUST.NAME.2 = UPCASE(INPUTSTR<8>)
CUST.NAME.3 = UPCASE(INPUTSTR<9>)
*DEBUG
*RUNNING QUERY v
*SELLIST = "SSELECT JOB WITH COMPLETED.DATE BETWEEN '":STARTDATE:"' '":ENDDATE:"'"
*RUNNING QUERY ^
SEL.QRY = "";OPT.QRY="";BASE.QRY=""
SEL.QRY = "SSELECT JOB "
IF CUST.ID.1 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = " JOB_CUST LIKE '...":CUST.ID.1:"...'"
   END
END
IF CUST.ID.2 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = "JOB_CUST LIKE '...":CUST.ID.2:"...'"
   END ELSE
      OPT.QRY := " OR JOB_CUST LIKE '...":CUST.ID.2:"...'"
   END
END
IF CUST.ID.3 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = "JOB_CUST LIKE '...":CUST.ID.3:"...'"
   END ELSE
      OPT.QRY := " OR JOB_CUST LIKE '...":CUST.ID.3:"...'"
   END
END
IF CUST.NAME.1 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = " EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.1:"...'"
   END ELSE
      OPT.QRY := " OR EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.1:"...'"
   END
END
IF CUST.NAME.2 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = "EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.2:"...'"
   END ELSE
      OPT.QRY := " OR EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.2:"...'"
   END
END
IF CUST.NAME.3 # "" THEN
   IF OPT.QRY EQ "" THEN
      OPT.QRY = "EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.3:"...'"
   END ELSE
      OPT.QRY := " OR EVAL 'UPCASE(CUST.NAME1)' LIKE '...":CUST.NAME.3:"...'"
   END
END
IF OPT.QRY NE "" THEN
   SEL.QRY := "WITH (":OPT.QRY:")"
END
*BASE.QRY = "WITH (JOB_STATUS EQ '4' AND COMPLETED.DATE BETWEEN '":STARTDATE:"' '":ENDDATE:"')"
BASE.QRY = "WITH (@ID LIKE '":CONO:"...' AND JOB_STATUS EQ '4' AND COMPLETED.DATE BETWEEN '":STARTDATE:"' '":ENDDATE:"')"
IF OPT.QRY EQ "" THEN
   SEL.QRY := BASE.QRY
END ELSE
   SEL.QRY = SEL.QRY :" AND ": BASE.QRY
END
WRITE SEL.QRY ON CONTROL,"1906"
28000*
UDTEXECUTE SEL.QRY CAPTURING JUNK
PROD.QTY = ""
FINISH = 0
LOOP
  READNEXT JOBNO ELSE FINISH = 1
WHILE FINISH = 0 DO     
  MATREAD JOB.REC FROM JOB, JOBNO THEN
*THIS PART IS FROM JOB.SUMMARY.SUB WHICH IS CALLED IN JOB.INQUIRY v
   JPTR = 0
   CNT = DCOUNT(JOB.MT.DEPT,VM)
   FOR I = 1 TO CNT
      TEMP = JOB.MT.DEPT<1,I>
      LOCATE TEMP IN MT.DEPT.NO<1>,1 SETTING JCNT ELSE
         JPTR = JPTR + 1; JCNT = JPTR
         MT.DEPT.NO<1,JCNT> = TEMP
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:TEMP ELSE DEPT.DESC = UNKNOWN
      END
      MT.DEPT.PTR<1,JCNT,-1> = I
   NEXT I  
*TILL HERE ^
   LINES = DCOUNT(JOB.MT.PROD,VM)
   FOR I = 1 TO LINES
      *IF JOB.MT.DEPT<1,I>  = PRESSDEPT THEN
        JCS.DATA :=  "<MaterialUsedRow>"
	JCS.DATA := "<Proj>": JOBNO[4,99] :"</Proj>"
        JCS.DATA := "<CustNumber>": JOB.CUST :"</CustNumber>"
        JCS.DATA := "<CustName>": OCONV(CONO:JOB.CUST,"TCUSTOMER;X;1;1") :"</CustName>"
        JCS.DATA := "<ProductId>": JOB.MT.PROD<1,I> :"</ProductId>"
        MATREAD INV.REC FROM INVENTORY,CONO:JOB.MT.PROD<1,I> ELSE
           MAT INV.REC = ""
           INV.FULL.DESC = "UNKNOWN"
        END
	LN = I
	N = 1
	J = 1
	GOSUB 8000
        IF JOB.MT.QTY<1,LN,N> < 0 THEN
           TEMP.QTY = OCONV(INT((((JOB.MT.QTY<1,LN,N> / ICR.DV1<1,LN,N>) * ICR.MT1<1,LN,N>) / ICR.DV2<1,LN,N>) - .5),ICR.CNV<1,LN,N>)
        END ELSE
           TEMP.QTY = OCONV(INT((((JOB.MT.QTY<1,LN,N> / ICR.DV1<1,LN,N>) * ICR.MT1<1,LN,N>) / ICR.DV2<1,LN,N>) + .5),ICR.CNV<1,LN,N>)
        END
        JCS.DATA := "<UsedQty>": TEMP.QTY :"</UsedQty>"
	MT.ID = JOBNO:"!":JOB.MT.DEPT<1,I>:"!":JOB.MT.CCTR<1,I>
	MT.ID = MT.ID:"!":JOB.MT.PROD<1,I>:"!":JOB.MT.WHSE<1,I>:"!"
	OLN = 1 
	GOSUB 100
       JCS.DATA := "<Completed>": OCONV(JOB.TRACK.DATE<1,10>,'D2/') :"</Completed>"
       JCS.DATA := "</MaterialUsedRow>"
     *END
   NEXT I
  END
REPEAT
27000*
PAPERXML := "<Materials>": JCS.DATA :"</Materials>"
*PAPERXML := "</Materials>"
SWAP "&" WITH "&amp;" IN PAPERXML
RETURN
*
100 *
  FIRSTUSED = ""
  LASTUSED = ""
  FOR K = OLN TO LINES
    MATREAD JMT.REC FROM JOB.MATL, MT.ID:(K-OLN+1) ELSE MAT JMT.REC = ''
    IF K = 1 THEN FIRSTUSED = OCONV(JMT.DATE,'D2/')
    IF JMT.DATE <> "" AND JMT.DATE <> 0 THEN LASTUSED = OCONV(JMT.DATE,'D2/')
  NEXT I
  JCS.DATA := "<FirstUsed>": FIRSTUSED :"</FirstUsed>"
  JCS.DATA := "<LastUsed>": LASTUSED :"</LastUsed>"	
  RETURN
8000*
   BEGIN CASE
      CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         ICR.DV1<1,I,J> = INV.M.WT
         ICR.MT1<1,I,J> = 1
         ICR.DV2<1,I,J> = 1
         ICR.CNV<1,I,J> = "MD0"
      CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<1,I,J> = INV.PAP.WIDTH/100
         ICR.MT1<1,I,J> = 10
         ICR.DV2<1,I,J> = 1
         ICR.CNV<1,I,J> = "MD0"
      CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<1,I,J> = INV.PAP.WIDTH/100
         ICR.MT1<1,I,J> = 100
         ICR.DV2<1,I,J> = 12
         ICR.CNV<1,I,J> = "MD0"
      CASE 1
         ICR.DV1<1,I,J> = 10
         ICR.MT1<1,I,J> = 1
         ICR.DV2<1,I,J> = 1
         ICR.CNV<1,I,J> = "MD2"
   END CASE
   RETURN
