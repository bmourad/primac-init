SUBROUTINE JCS_GETJOBHEADER(CONO, JOB.ID, ERRMSG, STRXML, SCHEMA.ONLY)
SCHEMA.ONLY = '1'
STRXML = '<JobHeader><cono></cono><JobNo></JobNo><JobStatus></JobStatus>'
STRXML := '<JobDivisionId></JobDivisionId><JobDivision></JobDivision>'
STRXML := '<JobSalesrepId></JobSalesrepId><JobSalesrep></JobSalesrep>'
STRXML := '<JobCategoryId></JobCategoryId>'
STRXML := '<JobCategory></JobCategory><JobComments></JobComments>'
STRXML := '<JobDescription></JobDescription><JobMaster></JobMaster><JobTaxJurisdiction></JobTaxJurisdiction>'
STRXML := '<JobColors></JobColors><JobCompany></JobCompany><JobType></JobType><JobTypeDescription>'
STRXML := '</JobTypeDescription><JobSalesCode></JobSalesCode><JobOrdered></JobOrdered><JobShipped></JobShipped>'
STRXML := '<JobInStock></JobInStock><PriorJob></PriorJob><PricePerM></PricePerM><DueDate></DueDate>'
STRXML := '<MarkupPercentage></MarkupPercentage><EstimateAmount></EstimateAmount><CustomerPO></CustomerPO>'
STRXML := '<CustomerId></CustomerId><CustomerSvcRep></CustomerSvcRep><EstimateId></EstimateId>'
STRXML := '<ShipVia></ShipVia><QuotedAmount></QuotedAmount><CustomerName></CustomerName>'
STRXML := '<ImpressionWidth></ImpressionWidth>'
STRXML := '<ImpressionLength></ImpressionLength>'
STRXML := '<GangAllocationTableId></GangAllocationTableId><GangAllocationTableDescription></GangAllocationTableDescription>'
STRXML := '<GridDetails><LineItem><GangJobId></GangJobId><GangProductId></GangProductId>'
STRXML := '<GangProductDescription></GangProductDescription><GangProductWidth></GangProductWidth>'
STRXML := '<GangProductLength></GangProductLength><GangNumberOfSpots></GangNumberOfSpots>'
STRXML := '<GangDistributionPercent></GangDistributionPercent><GangS></GangS>'
STRXML := '</LineItem></GridDetails>'
STRXML := '<FinishedGoods><LineItem2>'
STRXML := '<FngdItem></FngdItem>'
STRXML := '<FngdItemDescription></FngdItemDescription><FngdWarehouse></FngdWarehouse>'
STRXML := '<FngdUnitOfMeasure></FngdUnitOfMeasure><FngdUnitPrice></FngdUnitPrice>'
STRXML := '<FngdSellingPrice></FngdSellingPrice><FngdManufactureQuantity></FngdManufactureQuantity>'
STRXML := '<FngdDueDate></FngdDueDate><FngdAllocatedQuantity></FngdAllocatedQuantity>'
STRXML := '<FngdOrderedQuantity></FngdOrderedQuantity><FngdFinishedQuantity></FngdFinishedQuantity>'
STRXML := '<FngdBalanceQuantity></FngdBalanceQuantity>'
STRXML := '</LineItem2></FinishedGoods>'
STRXML := '<EstimatedDate></EstimatedDate><OrderedDate></OrderedDate><ProofDate></ProofDate>'
STRXML := '<ProductionStartDate></ProductionStartDate><FinalDeliveryDate></FinalDeliveryDate>'
STRXML := '<PassedToBillDate></PassedToBillDate><CostedDate></CostedDate>'
STRXML := '<LastInvoiceDate></LastInvoiceDate><CompletedDate></CompletedDate>'
STRXML := '</JobHeader>'
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING"; RETURN
OPEN "","GANG.JOB" TO GANG.JOB ELSE ERRMSG="GANG.JOB FILE IS MISSING"; RETURN
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING"; RETURN
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG="JOB.FNGD.STATS FILE IS MISSING"; RETURN
MATREAD JOB.REC FROM JOB, CONO:JOB.ID THEN
  SCHEMA.ONLY = '0'
  STRXML = '<JobHeader>'
  STRXML := '<cono>' : CONO : '</cono>'
  STRXML := '<JobNo>' : JOB.ID : '</JobNo>'
  STATUS = ''
  BEGIN CASE
   CASE JOB.STATUS<1,1>=""
    STATUS="BOOKED"
   CASE JOB.STATUS<1,1>="7"
    STATUS="READY TO PURGE"
   CASE JOB.STATUS<1.1>="8"
    STATUS="WAS PURGED"
   CASE JOB.STATUS<1,1>="9"
    STATUS="CANCELLED"
   CASE JOB.TRACK.DATE<1,10># ""
    BEGIN CASE
     CASE JOB.STATUS<1,1> = "1"
       STATUS="IN PROCESS"
     CASE JOB.STATUS<1,1> = "5"
       STATUS="REOPENED"
     CASE JOB.STATUS<1,1> = "3"
       STATUS="INVOICED"
     CASE 1
       STATUS="COMPLETED"
     END CASE
   CASE JOB.TRACK.DATE<1,9> #""
     BEGIN CASE
      CASE JOB.STATUS<1,1> = "1"
        STATUS="IN PROCESS"
      CASE JOB.STATUS<1,1> = "5"
        STATUS="REOPENED"
      CASE 1
        STATUS="INVOICED"
     END CASE
   CASE JOB.TRACK.DATE<1,8> # ""
     STATUS = "COSTED"
   CASE JOB.TRACK.DATE<1,7> # ""
     STATUS = "READY TO BILL"
   CASE JOB.TRACK.DATE<1,6> # ""
     STATUS = "DELIVERED"
   CASE JOB.TRACK.DATE<1,5> # ""
     STATUS = "IN PROCESS"
   CASE JOB.TRACK.DATE<1,3> # ""
     STATUS = "IN PROCESS"
   CASE JOB.TRACK.DATE<1,1>="1"
     STATUS = "IN PROCESS"
   CASE 1
     STATUS = JOB.STATUS<1,1>
  END CASE
  STRXML := '<JobStatus>' : STATUS : '</JobStatus>'
  STRXML := '<JobDivisionId>' : JOB.DIV : '</JobDivisionId>'
  STRXML := '<JobDivision>' : JOB.DIV : ' - ' : OCONV(CONO:JOB.DIV,"TDIVISION;X;1;1") : '</JobDivision>'
  STRXML := '<JobSalesrepId>' : JOB.SLSMN : '</JobSalesrepId>'
  STRXML := '<JobSalesrep>' : JOB.SLSMN : ' - ' : OCONV(CONO:JOB.SLSMN,"TSALESMAN;X;1;1") : '</JobSalesrep>'
  STRXML := '<JobCategoryId>' : JOB.CATG : '</JobCategoryId>'
  STRXML := '<JobCategory>' : JOB.CATG : ' - ' : OCONV(CONO:JOB.CATG,"TJOB.CATEGORY;X;1;1") : '</JobCategory>'
  STRXML := '<JobComments>' : CHANGE(JOB.COMMENTS,@VM,'\n') : '</JobComments>'
  STRXML := '<JobDescription>' : CHANGE(JOB.DESC,@VM,'\n') : '</JobDescription>'
  STRXML := '<JobMaster>' : JOB.MASTER : '</JobMaster>'
  STRXML := '<JobTaxJurisdiction>COULD NOT FIND THIS IN JOB</JobTaxJurisdiction>'
  STRXML := '<JobColors>' : JOB.COLORS : '</JobColors>'
  STRXML := '<JobCompany>' : OCONV(CONO,"TCOMPANY;X;1;1") : '</JobCompany>'
  JOB.TYPE.DESC = ''
  BEGIN CASE
    CASE JOB.TYPE = 'R'
      JOB.TYPE.DESC = 'Regular'
    CASE JOB.TYPE = 'S'
      JOB.TYPE.DESC = 'Spoilage'
    CASE JOB.TYPE = 'N'
      JOB.TYPE.DESC = 'Non Chargeable'
    CASE JOB.TYPE = 'C'
      JOB.TYPE.DESC = 'Change Order'
  END CASE
  STRXML := '<JobType>' : JOB.TYPE : '</JobType>'
  STRXML := '<JobTypeDescription>' : JOB.TYPE : ' - ' : JOB.TYPE.DESC : '</JobTypeDescription>'
  STRXML := '<JobSalesCode>' : JOB.SALES.CODE : '</JobSalesCode>'
  STRXML := '<JobOrdered>' : JOB.QTY<1,1> : '</JobOrdered>'
  STRXML := '<JobShipped>' : JOB.QTY<1,3> : '</JobShipped>'
  STRXML := '<JobInStock>' : JOB.QTY<1,2> : '</JobInStock>'
  STRXML := '<PriorJob>' : JOB.PRIOR.JOB : '</PriorJob>'
  STRXML := '<PricePerM>' : OCONV(JOB.PRICE.PER.THOU,'MD2') : '</PricePerM>'
  STRXML := '<DueDate>' : OCONV(JOB.TRACK.DATE<1,4>,'D4/') : '</DueDate>'
  STRXML := '<MarkupPercentage>' : OCONV(JOB.MARKUP,'MD2') : '</MarkupPercentage>'
  STRXML := '<EstimateAmount>' : OCONV(JOB.EST.COST,'MD2') : '</EstimateAmount>'
  STRXML := '<CustomerPO>' : JOB.CUST.PO : '</CustomerPO>'
  STRXML := '<CustomerId>' : JOB.CUST : '</CustomerId>'
  STRXML := '<CustomerSvcRep>' : JOB.CSR : '</CustomerSvcRep>'
  STRXML := '<EstimateId>' : JOB.EST : '</EstimateId>'
  STRXML := '<ShipVia>' : JOB.SHIP.VIA : '</ShipVia>'
  STRXML := '<QuotedAmount>' : OCONV(JOB.CONF.AMT,'MD2') : '</QuotedAmount>'
  STRXML := '<CustomerName>' : OCONV(CONO:JOB.CUST,"TCUSTOMER;X;1;1") : '</CustomerName>'
  MATREAD GJOB.REC FROM GANG.JOB, CONO:JOB.ID THEN
    STRXML := '<ImpressionWidth>' : OCONV(GJOB.IW,"MD2") : '</ImpressionWidth>'
    STRXML := '<ImpressionLength>' : OCONV(GJOB.IL,"MD2") : '</ImpressionLength>'
    STRXML := '<GangAllocationTableId>' : GJOB.ALLOC : '</GangAllocationTableId>'
    STRXML := '<GangAllocationTableDescription>' : GJOB.DESC : '</GangAllocationTableDescription>'
    STRXML := '<GridDetails>'
    NCNT = DCOUNT(GJOB.JOB,@VM)
     FOR K = 1 TO NCNT
	STRXML := '<LineItem>'
	STRXML := '<GangJobId>' : GJOB.JOB<1,K> : '</GangJobId>'
	STRXML := '<GangProductId>' : GJOB.PROD<1,K> : '</GangProductId>'
	STRXML := '<GangProductDescription>' : GJOB.PDESC<1,K> : '</GangProductDescription>'
	STRXML := '<GangProductWidth>' : OCONV(GJOB.WIDTH<1,K>,'MD4') : '</GangProductWidth>'
	STRXML := '<GangProductLength>' : OCONV(GJOB.LENGTH<1,K>,'MD4') : '</GangProductLength>'
	STRXML := '<GangNumberOfSpots>' : GJOB.SPOTS<1,K> : '</GangNumberOfSpots>'
	STRXML := '<GangDistributionPercent>' : GJOB.PCT<1,K> : '</GangDistributionPercent>'
	STRXML := '<GangS>I</GangS>'
	STRXML := '</LineItem>'
     NEXT K
    STRXML := '</GridDetails>'
  END ELSE
    STRXML := '<ImpressionWidth></ImpressionWidth>'
    STRXML := '<ImpressionLength></ImpressionLength>'
    STRXML := '<GangAllocationTableId></GangAllocationTableId><GangAllocationTableDescription></GangAllocationTableDescription>'
    STRXML := '<GridDetails><LineItem><GangJobId></GangJobId><GangProductId></GangProductId>'
    STRXML := '<GangProductDescription></GangProductDescription><GangProductWidth></GangProductWidth>'
    STRXML := '<GangProductLength></GangProductLength><GangNumberOfSpots></GangNumberOfSpots>'
    STRXML := '<GangDistributionPercent></GangDistributionPercent>'
    STRXML := '<GangS></GangS>'
    STRXML := '</LineItem></GridDetails>'
  END
  MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.ID THEN
    STRXML := '<FinishedGoods>'
    NCNT = DCOUNT(JFS.PROD,@VM)
    FOR K = 1 TO NCNT
      STRXML := '<LineItem2>'
      STRXML := '<FngdItem>' : JFS.PROD<1,K> : '</FngdItem>'
      STRXML := '<FngdItemDescription>' : OCONV(CONO:JFS.PROD<1,K>,"TINVENTORY;X;1;1") : '</FngdItemDescription>'
      STRXML := '<FngdWarehouse>' : JFS.WHSE<1,K> : '</FngdWarehouse>'
      *INV.UNIT = ''
      *READV INV.UNIT FROM INVENTORY, CONO:JFS.PROD<1,K>, 21 ELSE INV.UNIT=''
      MATREAD INV.REC FROM INVENTORY, CONO:JFS.PROD<1,K> ELSE
        MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
      END
      GOSUB 8000
      STRXML := '<FngdUnitOfMeasure>' : INV.UNIT<1,2> : '</FngdUnitOfMeasure>'
      STRXML := '<FngdUnitPrice>' : OCONV(JFS.U.PRICE<1,K>,'MD4') : '</FngdUnitPrice>'
      STRXML := '<FngdSellingPrice>' : OCONV(JFS.U.SELL<1,K>,'MD4') : '</FngdSellingPrice>'
      STRXML := '<FngdManufactureQuantity>' : OCONV(INT(((JFS.M.QTY<1,K>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</FngdManufactureQuantity>'
      STRXML := '<FngdDueDate>' : OCONV(JFS.DATE<1,K>,'D4/') : '</FngdDueDate>'
      STRXML := '<FngdAllocatedQuantity>' : OCONV(INT(((JFS.A.QTY<1,K>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</FngdAllocatedQuantity>'
      IF JFS.ORDER<1,K,2> # "" THEN
        STRXML := '<FngdOrderedQuantity>MULTI</FngdOrderedQuantity>'
      END ELSE
        STRXML := '<FngdOrderedQuantity>' : JFS.ORDER<1,K> : '</FngdOrderedQuantity>'
      END
      STRXML := '<FngdFinishedQuantity>' : OCONV(INT(((JFS.F.QTY<1,K>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</FngdFinishedQuantity>'
      *T26527 v
      IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN
        BAL = 0
      END ELSE
        BAL = JFS.M.QTY<1,K> - JFS.F.QTY<1,K> - JFS.S.QTY<1,K>
      END
      *T26527 ^
      IF BAL < 0 THEN BAL = 0
      STRXML := '<FngdBalanceQuantity>' : OCONV(INT(((BAL/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</FngdBalanceQuantity>'
      STRXML := '</LineItem2>'
    NEXT K
    STRXML := '</FinishedGoods>'
  END ELSE
    STRXML := '<FinishedGoods><LineItem2>'
    STRXML := '<FngdItem></FngdItem>'
    STRXML := '<FngdItemDescription></FngdItemDescription>'
    STRXML := '<FngdWarehouse></FngdWarehouse>'
    STRXML := '<FngdUnitOfMeasure></FngdUnitOfMeasure>'
    STRXML := '<FngdUnitPrice></FngdUnitPrice>'
    STRXML := '<FngdSellingPrice></FngdSellingPrice>'
    STRXML := '<FngdManufactureQuantity></FngdManufactureQuantity>'
    STRXML := '<FngdDueDate></FngdDueDate><FngdAllocatedQuantity></FngdAllocatedQuantity>'
    STRXML := '<FngdOrderedQuantity></FngdOrderedQuantity><FngdFinishedQuantity></FngdFinishedQuantity>'
    STRXML := '<FngdBalanceQuantity></FngdBalanceQuantity>'
    STRXML := '</LineItem2></FinishedGoods>'
  END
  STRXML := '<EstimatedDate>' : OCONV(JOB.TRACK.DATE<1,1>,'D4/') : '</EstimatedDate>'
  STRXML := '<OrderedDate>' : OCONV(JOB.TRACK.DATE<1,2>,'D4/') : '</OrderedDate>'
  STRXML := '<ProofDate>' : OCONV(JOB.TRACK.DATE<1,3>,'D4/') : '</ProofDate>'
  STRXML := '<ProductionStartDate>' : OCONV(JOB.TRACK.DATE<1,5>,'D4/') : '</ProductionStartDate>'
  STRXML := '<FinalDeliveryDate>' : OCONV(JOB.TRACK.DATE<1,6>,'D4/') : '</FinalDeliveryDate>'
  STRXML := '<PassedToBillDate>' : OCONV(JOB.TRACK.DATE<1,7>,'D4/') : '</PassedToBillDate>'
  STRXML := '<CostedDate>' : OCONV(JOB.TRACK.DATE<1,8>,'D4/') : '</CostedDate>'
  STRXML := '<LastInvoiceDate>' : OCONV(JOB.TRACK.DATE<1,9>,'D4/') : '</LastInvoiceDate>'
  STRXML := '<CompletedDate>' : OCONV(JOB.TRACK.DATE<1,10>,'D4/') : '</CompletedDate>'
  STRXML := '</JobHeader>'
END
RETURN
 
8000*
$INCLUDE ICSBP INV.UM.CNV
   RETURN
