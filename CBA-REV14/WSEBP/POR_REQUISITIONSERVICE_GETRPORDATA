SUBROUTINE POR_REQUISITIONSERVICE_GETRPORDATA(CONO,PVALUE,STRXML,ERRMSG,SCHEMA.ONLY) 
******************************
*By Yakub on 10/23/09
*****************************
SCHEMA.ONLY = 0
$INCLUDE PMC.CPYLIB PO 
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
*COPY>CPYLIB>FILE.VARS
$INCLUDE CPYLIB CHAR
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
MAT PO.REC = ""
XYZ = ""
LML = ""
UNKNOWN = "??????????"
PO_INV_CUST = ""
PO_ROLL_FLAG = ""
PO_PROD_NUM = ""
PO_PROD_DESC = ""
PO_UOM_FLAG = ""
PO_JB_UNITS = ""
PO_UNIT_FLG = ""
PO_UNIT_FLG = ""
INV_WARE_CODES = ""
JOBNO =   PVALUE<1>
PROD_NUM = PVALUE<2>
*PO.DIV.OWNER = PVALUE<3>
*
*JOBNO = "10110"
*PROD_NUM = "DROLL1":VM:"OTHER-RSDO-PKG":VM:"RL1-RLTRL-MSI"
*PO.DIV.OWNER = "01"
*
DATAFILE = "DEPARTMENT"
LN = 0
*DEFFUN PRIDGET_UOM_CONVERSION_CALC(QTY,FROM.UOM,TO.UOM,WGT,WIDTH,ROND,LN)
STRXML = "<RPORDATA>"
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
********JOB
 MATREAD JOB.REC FROM JOB, CONO:JOBNO ELSE
    MAT JOB.REC = ""
    ERRMSG="Job number ":JOBNO : " does not exist"
    GOTO 93000
 END
 PO.DIV.OWNER = JOB.DIV
 IF PO.DIV.OWNER = "0" OR PO.DIV.OWNER = "" THEN PO.DIV.OWNER = JOB.DIV
 MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE MAT DIV.REC = ""
 *MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE<1,LNP> ELSE MAT WHSE.REC = ''
       MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
         CUST.NAME = UNKNOWN
      END
 *STRXML = "<JobNo>" : JOBNO  : "</JobNo>"
 *STRXML := "<JobDesc>" : JOB.DESC<1,1> : "</JobDesc>"
  *JobInfo = JOBNO:VM:JOB.DESC<1,1>:AM:JOB.DIV:VM:DIV.DESC:AM:JOB.CUST:VM:CUST.NAME
 *JobInfo = JOBNO:SVM:JOB.DESC<1,1>:VM:JOB.CUST:SVM:CUST.NAME:VM:JOB.DIV:SVM:DIV.DESC
JobInfo = JOBNO:" - ":JOB.DESC<1,1>[1,20]:VM:JOB.CUST:" - ":CUST.NAME:VM:JOB.DIV:" - ":DIV.DESC
  STRXML := "<JobInfo>": JobInfo :"</JobInfo>"
  STRXML := "<JobDueDate>" : OCONV(JOB.TRACK.DATE<1,4>,"D2/")  : "</JobDueDate>"
*******
FOR I = 1 TO DCOUNT(PROD_NUM,VM)
UOM_FLAG = "N"
	**** ENTER PRODUCT
	MATREAD INV.REC FROM INVENTORY, CONO:PROD_NUM<1,I> ELSE
	  *ERRMSG = "INVENTORY (":PROD_NUM<1,I>:") IS NOT ON FILE."
	  *GOTO 93000
	  CONTINUE
	END
	IF INV.M.LINE = 'FNGD' THEN
	  IF CO.OPS = 'Y' THEN
	    *ERRMSG = "FINISHED GOODS PRODUCTS ARE INVALID FOR REGULAR PO'S"
	    *GOTO 93000
	    CONTINUE
	  END
	END
	*
	MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
	  *ERRMSG = "CATEGORY (":INV.LINE:") IS NOT ON FILE."
	  *GOTO 93000
	  CONTINUE
	END
	********
      IF INV.CUST # "" THEN
         IF "X":JOB.CUST # "X":INV.CUST THEN
            *ERRMSG = "THIS INVENTORY IS OWNED BY CUSTOMER ":INV.CUST
	    CONTINUE
         END
      END
	*********
	LN += 1
	 IF INV.PAP.TYPE = "REGULAR" OR INV.PAP.TYPE = "REG" OR INV.PAP.TYPE = "" THEN
	    PO.PROD.TYPE<1,LN> = "REG"
	  END ELSE
	    PO.PROD.TYPE<1,LN> = INV.PAP.TYPE
	  END
	  PO.JB.UNITS<1,LN> = INV.UNIT<1,2>
	  IF INV.UNIT<1,2> = INV.UNIT<1,1> THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    GOTO 1070
	  END
	  IF PO.PROD.TYPE<1,LN> = "REG" THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	  END ELSE
	*    IF INPUT_UOM # "" THEN
	*       PO.UNIT.FLG<1,LN> = INPUT_UOM
	*    END ELSE
	*       PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	*    END
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    UOM_FLAG = "Y"
	  END
	1070
	  ROLL_FLAG = "Y"
	  BEGIN CASE
	    CASE INV.PAP.TYPE = "ROLL"
	    CASE INV.PAP.TYPE = "LROLL"
	    CASE INV.PAP.TYPE = "PCOAT"
	    CASE INV.PAP.TYPE = "SHEET"
	    CASE 1
	     ROLL_FLAG = "N"
	      *GOTO 1290
	  END CASE
	  IF CATG.TRK.LVL = 'S' OR CATG.BARCODE = 'Y' THEN 
	    ROLL_FLAG = "Y"
	  END
	PO_ROLL_FLAG<1,LN> = ROLL_FLAG
	PO_PROD_NUM<1,LN> = PROD_NUM<1,I>
	PO_PROD_DESC<1,LN> = INV.FULL.DESC
	PO_INV_CUST<1,LN> = INV.CUST
	PO_UOM_FLAG<1,LN> = UOM_FLAG
       *IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> AND UOM_FLAG = "Y" THEN
       IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN
        *PO.UNIT.FLG<1,LN> = PO.JB.UNITS<1,LN>:SVM:PO.UNIT.FLG<1,LN>
	PO.UNIT.FLG<1,LN> = PO.UNIT.FLG<1,LN>:SVM:PO.JB.UNITS<1,LN>
       END
	**********
*	GOSUB 4000
	**********
*	IF DIFF.UM<LN> = "Y" THEN
*	  PO_JB_UNITS<1,LN>= PO.JB.UNITS<1,LN>
*	  PO_UNIT_FLG = PO.UNIT.FLG<1,LN>
*	END ELSE
*	  PO_UNIT_FLG = PO.UNIT.FLG<1,LN>
*	END
NEXT I
STRXML := "<ProdNum>" : PO_PROD_NUM  : "</ProdNum>"
STRXML := "<ProdDesc>" : PO_PROD_DESC  : "</ProdDesc>"
STRXML := "<UomFlag>" : PO_UOM_FLAG  : "</UomFlag>"
STRXML := "<RollFlag>" : PO_ROLL_FLAG  : "</RollFlag>"
STRXML := "<Uom>" : PO.UNIT.FLG  : "</Uom>"
STRXML := "<InvCust>" : PO_INV_CUST  : "</InvCust>"
*******************
TEMPCONVFORMAT = ""
FOR H = 1 TO DCOUNT(PO.UNIT.FLG,VM)
CONVFLG = 1
  	MATREAD INV.REC FROM INVENTORY, CONO:PO_PROD_NUM<1,H> ELSE
	  CONTINUE
	END
	LN = H
 IF INDEX(PO.UNIT.FLG<1,H>,SVM,1) > 0 THEN
    	 CONVFLG = 0
  FOR G = 1 TO DCOUNT(PO.UNIT.FLG<1,H>,SVM)
         PO_UNIT_FLAG<1,LN> = PO.UNIT.FLG<1,H,G>
         *LN = G
         GOSUB 4000
	 TEMPCONVFORMAT<1,H,G> = CONVFORMAT
  NEXT G
 END
 IF CONVFLG THEN 
    PO_UNIT_FLAG<1,LN> = PO.UNIT.FLG<1,H>
    *LN = H
    GOSUB 4000
    TEMPCONVFORMAT<1,H> = CONVFORMAT
 END
NEXT H
STRXML := "<ConvFormat>":TEMPCONVFORMAT:"</ConvFormat>"
******************WAREHOUSE
K = 1
	XMLLIST = ""
	CNT = 0
	  CMD= "SSELECT WAREHOUSE WITH @ID LIKE '":CONO:"...'"
	UDTEXECUTE CMD CAPTURING JUNG
	DATA=1
	LOOP
	  READNEXT ID ELSE DATA=0
	  WHILE DATA DO
           FOR J = 1 TO DCOUNT(PO_PROD_NUM,VM)
	      PO.WHSE = ID[4,99]
	      INV.WHSE.KEY = CONO:PO_PROD_NUM<1,J>:"!":PO.WHSE
		IF CO.INTR.WHSE # '' AND PO.WHSE = CO.INTR.WHSE THEN
		    *ERRMSG = 'CAN NOT APPLY, USING AN INTER-DIVISIONAL WHSE IS RESTRICTED'
		    GOTO 222
		 END
		  MATREAD IWH.REC FROM INV.WHSE , INV.WHSE.KEY ELSE
		    *ERRMSG = "INV.WHSE RECORD NOT ON FILE" ; GOSUB 91000;GOTO 1021
		    GOTO 333
		  END
		  MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE ELSE
		    *ERRMSG = "WAREHOUSE RECORD NOT ON FILE"; GOSUB 91000; GOTO 1021
		    GOTO 222
		  END
		  IF WHS.DIV # PO.DIV.OWNER AND PO.DIV.OWNER # "00" THEN
		    *ERRMSG = "Warehouse Division does not match the Owning Division"
		    GOTO 222
		  END
		  **********VALIDATION FOR SINGLE JOB ID
	      IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN 
		 *ERRMSG = "JOB ":VALUE:" HAS A DIFFERENT DIVISION THAN THE PRODUCT"
		 GOTO 333
	      END
             INV_WARE_CODES<1,J,-1> = PO.WHSE
	333*
	  NEXT J
	K += 1
	222*
	REPEAT
	*UDTEXECUTE "CLEARSELECT"
STRXML := "<InvWhseCodes>" : INV_WARE_CODES  : "</InvWhseCodes>"
*STRXML := "</RPORDATA>"
*WRITE "STRXML  ":STRXML ON CONTROL,"01RPORD"
*RETURN
**********************************
1700*
XMLLIST = ""
*CNT = 0
 CNT = 1
  CMD= "SSELECT ":DATAFILE:" WITH @ID LIKE '":CONO:"...'"
UDTEXECUTE CMD CAPTURING JUNG
DATA=1
LOOP
  READNEXT ID ELSE
   DATA=0
    BEGIN CASE
     CASE DATAFILE = "DEPARTMENT"
       XMLTAG = "Department"
     CASE DATAFILE = "COST.CNTR"
        XMLTAG = "Cctr"
     END CASE
  END
  WHILE DATA DO
    SCHEMA.ONLY = 0
    *IF CNT < 0 THEN CNT = 0
    *CNT = CNT + 1
     GOSUB 1800
     CNT = CNT + 1
111
REPEAT
UDTEXECUTE "CLEARSELECT"
 BEGIN CASE
   CASE XMLTAG = "Department"
     STRXML := "<":XMLTAG:"Id>":DEPT:"</":XMLTAG:"Id>"
     STRXML := "<":XMLTAG:"Desc>":DEPT_DESC:"</":XMLTAG:"Desc>"
   CASE XMLTAG = "Cctr"
      GOSUB 1900
     STRXML := "<":XMLTAG:"Id>":VCCTR:"</":XMLTAG:"Id>"
     STRXML := "<":XMLTAG:"Desc>":VCCTR_DESC:"</":XMLTAG:"Desc>"
END CASE
BEGIN CASE
CASE DATAFILE = "DEPARTMENT"
  *CATG = XMLLIST
  DATAFILE = "COST.CNTR"
  GOTO 1700
CASE DATAFILE = "COST.CNTR"
STRXML := "</RPORDATA>"
WRITE "STRXML  ":STRXML ON CONTROL,"01RPORD"
      GOTO 93000
END CASE 
*STRXML := "</RPORDATA>"
*WRITE "STRXML  ":STRXML ON CONTROL,"01RPORD"
RETURN
**************
1900*
VCCTR = ""
VCCTR_DESC = ""
FOR P = 1 TO DCOUNT(DEPT,VM)
            MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT<1,P> ELSE
              *ERRMSG='DEPARTMENT ':VALUE:' IS INVALID'
               CONTINUE
            END
    FOR Q = 1 TO DCOUNT(CCTR,VM)
	    MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR<1,Q> ELSE
	       *ERRMSG='COST.CNTR ':VALUE:' IS INVALID'
		CONTINUE
	    END
 	    IF CCTR.DEPT[1,2] # DEPT<1,P> THEN
               *ERRMSG='INCORRECT DEPARTMENT FOR COST CENTER ':VALUE
                CONTINUE
            END
	    VCCTR<1,P,-1> = CCTR<1,Q>
	    VCCTR_DESC<1,P,-1> = CCTR.DESC
    NEXT Q
NEXT P
RETURN
********
1800
BEGIN CASE
 CASE DATAFILE = "DEPARTMENT"
          MATREAD DEPT.REC FROM DEPARTMENT, ID ELSE
            *ERRMSG='DEPARTMENT ':VALUE:' IS INVALID'
	     *CNT = CNT - 1
             GOTO 111
         END
         LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING FDDV ELSE FDDV = 0
         IF FDDV = 0 THEN
            *ERRMSG='DEPARTMENT NOT VALID FOR JOB DIVISION'
	     *CNT = CNT - 1
             GOTO 111
         END
         DEPT<1,CNT> = ID[4,99]
	 XMLLIST<1,CNT> = ID[4,99]
	 DEPT_DESC<1,CNT> = DEPT.DESC
	 XMLTAG = "Department"
  CASE DATAFILE = "COST.CNTR"
            MATREAD CCTR.REC FROM COST.CNTR, ID ELSE
               *ERRMSG='COST.CNTR ':VALUE:' IS INVALID'
	     *CNT = CNT - 1
             GOTO 111
            END
            *IF CCTR.DEPT[1,2] # PO.JB.DEPT<1,LNP,LNJ> THEN
*	    IF CCTR.DEPT[1,2] # DEPT<1,CNT> THEN
*               *ERRMSG='INCORRECT DEPARTMENT FOR COST CENTER ':VALUE
*               	     CNT = CNT - 1
*                      GOTO 111
*            END
         CCTR<1,CNT> = ID[4,99]
	 XMLLIST<1,CNT> = ID[4,99]
	 CCTR_DESC<1,CNT> = CCTR.DESC
	 XMLTAG = "Cctr"
END CASE
RETURN
**** GET CONVERSIONS
4000*
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
  CASE 1
    ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
END CASE
BEGIN CASE
  CASE PO_UNIT_FLAG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
  CASE PO_UNIT_FLAG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
  CASE PO_UNIT_FLAG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
  CASE 1
    ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
END CASE
*IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
IF PO_UNIT_FLAG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
*******
CONVFORMAT = ""
  IF DIFF.UM<LN> = "Y" THEN
    IF ICR.CNV<LN,2> = "MD0" THEN
        *CONVFORMAT<1,2> = "MD0"
	CONVFORMAT = "MD0"
    END ELSE
        IF ICR.CNV<LN,1> = "MD0" THEN
	  IF ICR.CNV<LN,2> # "MD0" THEN
           *CONVFORMAT<1,2> = "MD2"
	   CONVFORMAT = "MD2"
	  END ELSE
           *CONVFORMAT<1,1> = "MD0"
	   CONVFORMAT = "MD0"
	  END
        END ELSE
           *CONVFORMAT<1,1> = "MD2"
	   CONVFORMAT = "MD2"
        END
    END
  END ELSE
    IF ICR.CNV<LN,1> = "MD0" THEN
            *CONVFORMAT<1,1> = "MD0"
	    CONVFORMAT = "MD0"
    END ELSE
            *CONVFORMAT<1,1> = "MD2"
	    CONVFORMAT = "MD2"
    END
  END
 *STRXML := "<PO.CONVERSION>":CONVFORMAT:"</PO.CONVERSION>"
RETURN
*
93000*
IF ERRMSG <> "" THEN
SCHEMA.ONLY = 0
STRXML = "<RPORDATA><ErrMsg>": ERRMSG:"</ErrMsg></RPORDATA>"
CALL WRITELOG(ERRMSG)
END
END
