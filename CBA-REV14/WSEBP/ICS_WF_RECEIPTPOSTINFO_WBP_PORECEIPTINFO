SUBROUTINE ICS_WF_RECEIPTPOSTINFO_WBP_PORECEIPTINFO(PROCESSID,DSR.STR,SCHEMAFLAG,ERRMSG,XMLSTR)
*********************************************************************
* REVISION - [12.00]
* PROGRAM  - ICS_SerialReceiptPostting_PoRecptCancelInfo
* AUTHOR   - MAGAFOOR
* DATE     - 02/13/09
* DESCRIPTION
*********************************************************************
$INCLUDE PMC.CPYLIB PO
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB DAILY_STOCK
$INCLUDE ICS.CPYLIB INVENTORY
DEFFUN ISREGISTERED(CONO,PROCESS.NAME)
ERRMSG=''
SCHEMAFLAG = 1
*PROCESSID = "ICSRSRE"
*DSR.STR = "0011000013!12ý0011000013!1ý0011000011!1ý0011000038!1"
*---------------------- OPEN ALL FILES --------------------------
OPEN "","COMPANY" TO COMPANY ELSE
   ERRMSG = "CANNOT OPEN COMPANY FILE";GOTO 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
   ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 93000
END
OPEN "","PO" TO PO ELSE
   ERRMSG = "CANNOT OPEN PO FILE"; GOTO 93000
END
OPEN 'TEMP_DAILY_STOCK' TO DAILY_STOCK ELSE
    ERRMSG = 'CANNOT OPEN TEMP_DAILY_STOCK'
    GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE 
   ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
DSR.STR = CHANGE(DSR.STR,"$",VM)
CONO = DSR.STR[1,3]
TEMP.ONORD = "" ; TEMP.CANCEL = ""; TEMP.OPEN = ""; TEMP.RCVD = ""
WFINSTANCEID = ISREGISTERED(CONO,PROCESSID)
*DEBUG
START:
XMLSTR = "<PoData>"
XMLSTR := "<WFINSTANCEID>":WFINSTANCEID:"</WFINSTANCEID>"
FOR I = 1 TO DCOUNT(DSR.STR,VM)
   PO.ID = FIELD(DSR.STR<1,I>,"!",1)
   MATREAD PO.REC FROM PO,PO.ID ELSE MAT PO.REC = ""
*
*XMLSTR := "<Po ID ='":PO.ID[4,99]:"'>"
XMLSTR := "<Po>"
   T.DSR.ID = DSR.STR<1,I>
   MAN.NO = T.DSR.ID[INDEX(T.DSR.ID,"!",1)+1,99]
   MATREAD DSR.REC FROM DAILY_STOCK,T.DSR.ID THEN
      SCHEMAFLAG = 0
      MATREAD INV.REC FROM INVENTORY, CONO:DSR.PROD ELSE
        MAT INV.REC = ""; INV.FULL.DESC = ""
      END
      XMLSTR := "<DAILY_STOCK_ID>":T.DSR.ID:"</DAILY_STOCK_ID>"
      XMLSTR := "<PO_ID>":PO.ID[4,99]:"</PO_ID>"
      XMLSTR := "<MANIFEST>":MAN.NO:"</MANIFEST>"
      XMLSTR := "<PO_LINE>":DSR.PO.LINE:"</PO_LINE>"
      XMLSTR := "<PRODUCT>":DSR.PROD:"</PRODUCT>"
      XMLSTR := "<WAREHOUSE>":DSR.WHSE:"</WAREHOUSE>"
      XMLSTR := "<LOCATION>":DSR.LOC:"</LOCATION>"
      XMLSTR := "<SERIAL>":DSR.SERIAL:"</SERIAL>"
      XMLSTR := "<DSR_QUANTITY>":OCONVS(DSR.QTY,"MD2"):"</DSR_QUANTITY>"
      GOSUB 4000
      GOSUB 10000
      XMLSTR := "<ORDERED_PO_QTY>":TEMP.ONORD:"</ORDERED_PO_QTY>"
      XMLSTR := "<RECEVD_PO_QTY>":TEMP.RCVD:"</RECEVD_PO_QTY>"
      XMLSTR := "<OPEN_PO_QTY>":TEMP.OPEN:"</OPEN_PO_QTY>"
      XMLSTR := "<CANCEL_PO_QTY>":TEMP.CANCEL:"</CANCEL_PO_QTY>"
   END
XMLSTR := "</Po>"
NEXT
XMLSTR := "</PoData>"
*CHANGE THE DELIMITERS ELSE OTHER UNWANTED ASCII CHARACTERS WILL PRINT IN THE OUTPUT
XMLSTR = CHANGE(XMLSTR,AM,"D251R")
XMLSTR = CHANGE(XMLSTR,VM,"D252R")
XMLSTR = CHANGE(XMLSTR,SVM,"D253R")
RETURN
*
10000*
*
    N = I
    T.PO.TOT.ONORD = PO.TOT.ONORD<1,N>
    T.PO.TOT.CANCEL = PO.TOT.CANCEL<1,N>
    T.PO.QTY.OPEN = PO.QTY.OPEN<1,N>
    T.PO.TOT.RECEVED = PO.TOT.RECEVED<1,N>
    FOR J = 1 TO DCOUNT(T.PO.TOT.ONORD,VM)
    IF DIFF.UM<N> = "Y" THEN
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD<1,J> = ICONV(((T.PO.TOT.ONORD<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.CANCEL<1,J> = ICONV(((T.PO.TOT.CANCEL<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN<1,J> = ICONV(((T.PO.QTY.OPEN<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
	TEMP.RCVD<1,J> = ICONV(((T.PO.TOT.RECEVED<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD<1,J> = OCONV(INT(T.PO.TOT.ONORD<1,J>/10), "MD2") "R#11"
        TEMP.CANCEL<1,J> = OCONV(INT(T.PO.TOT.CANCEL<1,J>/10), "MD2") "R#11"
        TEMP.OPEN<1,J> = OCONV(INT(T.PO.QTY.OPEN<1,J>/10), "MD2") "R#11"
	TEMP.RCVD<1,J> = OCONV(INT(T.PO.TOT.RECEVED<1,J>/10), "MD2") "R#11"
      END
      IF ICR.CNV<N,2> = "MD0" THEN
        TEMP.ONORD<1,J> = ICONV(((T.PO.TOT.ONORD<1,J>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.CANCEL<1,J> = ICONV(((T.PO.TOT.CANCEL<1,J>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.OPEN<1,J> = ICONV(((T.PO.QTY.OPEN<1,J>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
	TEMP.RCVD<1,J> = ICONV(((T.PO.TOT.RECEVED<1,J>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
      END ELSE
        IF ICR.CNV<N,1> = "MD0" THEN
          TEMP.ONORD<1,J> = OCONV(INT(T.PO.TOT.ONORD<1,J>/10), "MD2") "R#11"
          TEMP.CANCEL<1,J> = OCONV(INT(T.PO.TOT.CANCEL<1,J>/10), "MD2") "R#11"
          TEMP.OPEN<1,J> = OCONV(INT(T.PO.QTY.OPEN<1,J>/10), "MD2") "R#11"
   	  TEMP.RCVD<1,J> = OCONV(INT(T.PO.TOT.RECEVED<1,J>/10), "MD2") "R#11"
        END ELSE
          TEMP.ONORD<1,J> = OCONV(INT((T.PO.TOT.ONORD<1,J>/10)/ICR.MT1<N,1>), "MD2") "R#11"
          TEMP.CANCEL<1,J> = OCONV(INT((T.PO.TOT.CANCEL<1,J>/10)/ICR.MT1<N,1>), "MD2")"R#11"
          TEMP.OPEN<1,J> = OCONV(INT((T.PO.QTY.OPEN<1,J>/10)/ICR.MT1<N,1>), "MD2") "R#11"
	  TEMP.RCVD<1,J> = OCONV(INT((T.PO.TOT.RECEVED<1,J>/10)/ICR.MT1<N,1>), "MD2") "R#11"
        END
      END
    END ELSE
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD<1,J> = ICONV(((T.PO.TOT.ONORD<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.CANCEL<1,J> = ICONV(((T.PO.TOT.CANCEL<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN<1,J> = ICONV(((T.PO.QTY.OPEN<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.RCVD<1,J> = ICONV(((T.PO.TOT.RECEVED<1,J>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD<1,J> = OCONV(INT(T.PO.TOT.ONORD<1,J>/10), "MD2") "R#11" ; P_OPT = ""
        TEMP.CANCEL<1,J> = OCONV(INT(T.PO.TOT.CANCEL<1,J>/10), "MD2") "R#11"
        TEMP.OPEN<1,J> = OCONV(INT(T.PO.QTY.OPEN<1,J>/10), "MD2") "R#11"
        TEMP.RCVD<1,J> = OCONV(INT(T.PO.TOT.RECEVED<1,J>/10), "MD2") "R#11"
      END
    END
    NEXT J
RETURN
**** GET CONVERSIONS
4000*
  LN = I
  BEGIN CASE
    CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
RETURN
93000*
RETURN
