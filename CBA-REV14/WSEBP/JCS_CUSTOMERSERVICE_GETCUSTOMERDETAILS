SUBROUTINE JCS_CUSTOMERSERVICE_GETCUSTOMERDETAILS(CONO,CUSTOMERNO,MODULE,ERRMSG,OUT_PARAM_CUST,SCHEMA.ONLY)
*Modified by - magafoor on 05/19/2009 *Added the validations and reject codes
				      *And commented the ShipTo data and Credit Information
***********************************************************************************************************
OUT_PARAM_CUST = '<Customer><cono></cono><CustomerNo></CustomerNo><CustomerName></CustomerName><Address1></Address1><Address2></Address2><Address3></Address3><CityState></CityState><Zip></Zip><SortName></SortName><Attention></Attention><Phone></Phone><SalesRepCode></SalesRepCode><EmailId></EmailId><Instructions></Instructions><CsrCode></CsrCode><CsrName></CsrName><ShipViaCode></ShipViaCode><ShipViaName></ShipViaName><ShippingTerms></ShippingTerms><FOB></FOB><MasterAccount></MasterAccount><StartDate></StartDate><CreditCode></CreditCode><PaymentTerms></PaymentTerms><CustomerType></CustomerType><StatementCode></StatementCode><InvoiceType></InvoiceType><PriceCode></PriceCode><NormalPercentageOver></NormalPercentageOver><MiscCode></MiscCode><CreditReason></CreditReason><CustomerComments></CustomerComments><Contact><Lineno></Lineno><Type></Type><Name></Name></Contact><ShipToNumber></ShipToNumber><ShipToName></ShipToName><ShipToAddress1></ShipToAddress1><ShipToAddress2></ShipToAddress2><SoldToCityState></SoldToCityState><SoldToZipCode></SoldToZipCode></Customer><CustomerCreditData><CCICreditLimit></CCICreditLimit><CCICreditAvailable></CCICreditAvailable><CCIHighBalance></CCIHighBalance><CCIAverageInvoice></CCIAverageInvoice><CCIAverageDaysToPay></CCIAverageDaysToPay><CCILastPaymentDate></CCILastPaymentDate><CCILastPaymentAmount></CCILastPaymentAmount><CCILastSaleDate></CCILastSaleDate><CCICurrPeriod></CCICurrPeriod><CCICurrPeriodSales></CCICurrPeriodSales><CCILYCurrPeriod></CCILYCurrPeriod><CCILYCurrPeriodSales></CCILYCurrPeriodSales><CCICurrYear></CCICurrYear><CCICurrYearSales></CCICurrYearSales><CCILastYear></CCILastYear><CCILastYearSales></CCILastYearSales><CCIOpenReceivable></CCIOpenReceivable><CCIOpenOrders></CCIOpenOrders><CCIOpenJobs></CCIOpenJobs><CCITotalBalance></CCITotalBalance><CCICredits0_30></CCICredits0_30><CCICredits31_60></CCICredits31_60><CCICredits61_90></CCICredits61_90><CCICredits91AndOver></CCICredits91AndOver><CCITotalCredits></CCITotalCredits></CustomerCreditData>'
SCHEMA.ONLY = 1
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CSR.CODE   
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE PMC.CPYLIB TAX
$INCLUDE CPYLIB CHAR
*
OPEN '','CSR.CODE' TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN CSR.CODE FILE" ;GOTO 99999
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE" ;GOTO 99999
OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = "CANNOT OPEN SALESMAN FILE" ;GOTO 99999
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE" ;GOTO 99999
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN SHIP.VIA FILE" ;GOTO 99999
OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE" ;GOTO 99999
OPEN '','TAX' TO TAX ELSE ERRMSG = "CANNOT OPEN TAX FILE" ;GOTO 99999
* READ THE COMPANY CODE
ERRSTR = "<Rejects>"
ERRFLAG = 0
*
  MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG = "COMPANY NUMBER ":CONO:" DOES NOT EXIST!"
      ERRFLAG = 1
      ERRSTR := "<Reject>"
      ERRSTR := "<RejectCode>CSGCD001</RejectCode>"
      ERRSTR := "<RejectDescription>COMPANYNO ":CONO:" DOES NOT EXIST!</RejectDescription>"
      ERRSTR := "</Reject>"
      GOTO 98000
  END
 MATREADU CUST.REC FROM CUSTOMER, CONO:CUSTOMERNO LOCKED
   SCHEMA.ONLY = 0
   ERRFLAG = 1
   ERRSTR := "<Reject>"
   ERRSTR := "<RejectCode>CSGCD003</RejectCode>"
   ERRSTR := "<RejectDescription>CUSTOMER # ":CUSTOMERNO:" IS LOCKED BY USER ":GETUSERNAME(STATUS()):"</RejectDescription>"
   ERRSTR := "</Reject>"
 END THEN
  SCHEMA.ONLY = 0
  OUT_PARAM_CUST = '<Customer>'
  OUT_PARAM_CUST := '<Cono>' : CONO : '</Cono>'
  OUT_PARAM_CUST := '<CustomerNo>' : CUSTOMERNO : '</CustomerNo>'
  OUT_PARAM_CUST := '<CustomerName>' : CUST.NAME : '</CustomerName>'
  OUT_PARAM_CUST := '<Address1>' : CUST.ADDR1  : '</Address1>'
  OUT_PARAM_CUST := '<Address2>' : CUST.ADDR2  : '</Address2>'
  OUT_PARAM_CUST := '<Address3>' : CUST.ADDR3 : '</Address3>'
  OUT_PARAM_CUST := '<CityState>' : CUST.ADDR4 : '</CityState>'
*  OUT_PARAM_CUST := '<City>':FIELD(CUST.ADDR4,",",1): '</City>'
*  OUT_PARAM_CUST := '<State>' :FIELD(CUST.ADDR4,",",2): '</State>'
  OUT_PARAM_CUST := '<Zip>' : CUST.ZIP : '</Zip>'
  OUT_PARAM_CUST := '<Country>':CUST.COUNTRY:'</Country>'
  OUT_PARAM_CUST := '<SortName>' : CUST.SORT.NAME:'</SortName>'
  OUT_PARAM_CUST := '<Attention>' : CUST.ATTENTION : '</Attention>'
  OUT_PARAM_CUST := '<Phone>' : CUST.PHONE : '</Phone>'
  OUT_PARAM_CUST := '<SalesRepCode>' : CUST.SALESMAN : '</SalesRepCode>'
  OUT_PARAM_CUST := '<SalesRepName>' : OCONV(CONO:CUST.SALESMAN,"TSALESMAN;X;1;1") : '</SalesRepName>'
  **** READING SALESMAN DESCRIPTION
  MATREAD SALESMAN.REC FROM SALESMAN,CONO:CUST.SALESMAN ELSE MAT SALESMAN.REC=""
  OUT_PARAM_CUST := '<EmailId>' : CUST.EMAIL : '</EmailId>'
  OUT_PARAM_CUST := '<Instructions>' : CUST.INT.INST : '</Instructions>'
  OUT_PARAM_CUST := '<CsrCode>' : CUST.CSR.CODE : '</CsrCode>'
  MATREAD CSR.REC FROM CSR.CODE, CONO:CUST.CSR.CODE ELSE MAT CSR.REC = ""
  OUT_PARAM_CUST := '<CsrName>' : CSR.DESC : '</CsrName>'
  OUT_PARAM_CUST := '<ShipViaCode>' : CUST.SHIP.VIA : '</ShipViaCode>'
  MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:CUST.SHIP.VIA ELSE MAT SHIP.VIA.REC=""
  OUT_PARAM_CUST := '<ShipViaName>' : SHPV.DESC : '</ShipViaName>'
  OUT_PARAM_CUST := '<ShippingTerms>' : CUST.ADDL.OPS<1,3> : '</ShippingTerms>'
  OUT_PARAM_CUST := '<FOB>' : CUST.ADDL.OPS<1,2> : '</FOB>'
  OUT_PARAM_CUST := '<FOBName>' : OCONV(CONO:CUST.ADDL.OPS<1,2>,"TFOB;X;1;1") : '</FOBName>'
  OUT_PARAM_CUST := '<MasterAccount>' : CUST.ACCT : '</MasterAccount>'
  OUT_PARAM_CUST := '<StartDate>' : OCONV(CUST.START.DATE,'D2/') : '</StartDate>'
  OUT_PARAM_CUST := '<CreditCode>' : CUST.CREDIT : '</CreditCode>'
  OUT_PARAM_CUST := '<CreditReason>' : CUST.CREDIT.DESC : '</CreditReason>' 
  OUT_PARAM_CUST := '<CreditLimit>' : CUST.CR.LIMIT : '</CreditLimit>'
  OUT_PARAM_CUST := '<PaymentTerms>' : CUST.TERMS : '</PaymentTerms>'
  OUT_PARAM_CUST := '<CustomerType>' : CUST.TYPE : '</CustomerType>'
  OUT_PARAM_CUST := '<StatementCode>' : CUST.STMT.CODE : '</StatementCode>'
  OUT_PARAM_CUST := '<StatementSendFlag>' : CUST.STMT.SEND.FLAG : '</StatementSendFlag>'
  OUT_PARAM_CUST := '<InvoiceType>' : CUST.IVC.CODE :'</InvoiceType>'
  OUT_PARAM_CUST := '<PriceCode>' :CUST.PRICE.CODE : '</PriceCode>'
  OUT_PARAM_CUST := '<NormalPercentageOver>' : OCONV(CUST.ADDL.OPS<1,1>,'MD2') : '</NormalPercentageOver>'
  OUT_PARAM_CUST := '<MiscCode>' : CUST.COMMISSION : '</MiscCode>'
  *OUT_PARAM_CUST := '<CustomerComments>' : CHANGE(CUST.COMMENT,@VM,"\n")  : '</CustomerComments>'
  OUT_PARAM_CUST := '<CustomerComments>'
  OUT_PARAM_CUST := '<Comments>'
  FOR I = 1 TO DCOUNT(CUST.COMMENT,@VM)
     OUT_PARAM_CUST := '<Comment>':CUST.COMMENT<1,I>:'</Comment>'
  NEXT I
  OUT_PARAM_CUST := '</Comments>'
  OUT_PARAM_CUST := '</CustomerComments>'
  *** GET THE CONTACT DETAILS
*  OUT_PARAM_CUST := '<ContactDetails>'
  OUT_PARAM_CUST := '<Contacts>'
  CNT=DCOUNT(CUST.CONTACT.CD,@VM)
  FOR I=1 TO CNT
      OUT_PARAM_CUST := '<Contact>'
      *OUT_PARAM_CUST := '<Lineno>' :I : '</Lineno>'
      OUT_PARAM_CUST := '<ContactCode>' : CUST.CONTACT.CD<1,I> : '</ContactCode>'
      OUT_PARAM_CUST := '<ContactName>' : CUST.CONTACT<1,I> : '</ContactName>'
      OUT_PARAM_CUST := '</Contact>'
  NEXT I
  OUT_PARAM_CUST := '</Contacts>'
*  OUT_PARAM_CUST := '</ContactDetails>'
  OUT_PARAM_CUST := '<TaxJurisdictions>'
     *OUT_PARAM_CUST := '<TaxJurisdiction>'
     FOR I = 1 TO DCOUNT(CUST.TAX.JUR,@VM)
        MATREAD TAX.REC FROM TAX,CONO:CUST.TAX.JUR<1,I> THEN
	  OUT_PARAM_CUST := '<TaxJurisdiction>'
           OUT_PARAM_CUST := '<Jurisdiction>':CUST.TAX.JUR<1,I>:'</Jurisdiction>'
           OUT_PARAM_CUST := '<JurisdictionName>':TAX.JUR:'</JurisdictionName>'
           OUT_PARAM_CUST := '<Taxable>':CUST.TAXABLE<1,I>:'</Taxable>'
           OUT_PARAM_CUST := '<TaxExemptNo>':CUST.EXEMPT<1,I>:'</TaxExemptNo>'
           OUT_PARAM_CUST := '<ExpiryDate>':OCONV(CUST.EXMT.DATE<1,I>,"D2/"):'</ExpiryDate>'
	  OUT_PARAM_CUST := '</TaxJurisdiction>'
	END 
     NEXT I
     *OUT_PARAM_CUST := '</TaxJurisdiction>'
  OUT_PARAM_CUST := '</TaxJurisdictions>'  
  OUT_PARAM_CUST := '</Customer>'
*  SHPTO=CUST.SHIP.TO
*  IF LEN(SHPTO)=2 THEN SHPTO="0":SHPTO
*  IF LEN(SHPTO)=1 THEN SHPTO="00":SHPTO
*  MATREAD SPT.REC FROM SHIP.TO, CONO:CUSTOMERNO:"!":SHPTO ELSE
*      MAT SPT.REC=""
*  END
*  *OUT_PARAM_CUST := '<ShippingAddresses>'
*  OUT_PARAM_CUST := '<ShipToNumber>' : SHPTO : '</ShipToNumber>'
*  OUT_PARAM_CUST := '<ShipToName>' : SPT.NAME : '</ShipToName>'
*  OUT_PARAM_CUST := '<ShipToAddress1>' : SPT.ADDR1  : '</ShipToAddress1>'
*  OUT_PARAM_CUST := '<ShipToAddress2>' : SPT.ADDR2  : '</ShipToAddress2>'
*  OUT_PARAM_CUST := '<ShipToCityState>' : SPT.CITY:",":SPT.STATE : '</ShipToCityState>'
*  OUT_PARAM_CUST := '<ShipToZipCode>' : SPT.ZIP : '</ShipToZipCode>'
*  OUT_PARAM_CUST := '<SoldToNumber>' : CUSTOMERNO : '</SoldToNumber>'
*  OUT_PARAM_CUST := '<SoldToName>' : CUST.NAME : '</SoldToName>'
*  OUT_PARAM_CUST := '<SoldToAddress1>'mC CUST.ADDR1  : '</SoldToAddress1>'
*  OUT_PARAM_CUST := '<SoldToAddress2>' : CUST.ADDR2  : '</SoldToAddress2>'
*  OUT_PARAM_CUST := '<SoldToCityState>' : CUST.ADDR4 : '</SoldToCityState>' 
*  OUT_PARAM_CUST := '<SoldToZipCode>' : CUST.ZIP : '</SoldToZipCode>'
*   OUT_PARAM_CUST := '</Customer>'
*  *OUT_PARAM_CUST := '</ShippingAddresses>'  
*  ERRMSG1=""
*  OUT_PARAM=""
* CALL JCS_GETCUSTOMERCREDITINFORMATION(CONO,CUSTOMERNO,MODULE,OUT_PARAM,ERRMSG1)
*  IF ERRMSG1="" THEN
*    OUT_PARAM_CUST := '<CustomerCreditData>'
*       OUT_PARAM_CUST := OUT_PARAM
*    OUT_PARAM_CUST := '</CustomerCreditData>'
*  END ELSE
*    ERRMSG="GetCustomerDetails ---->JCS_GETCUSTOMERDETAILS---> ": ERRMSG1
*    CALL WRITELOG(ERRMSG)
*    RETURN
* END
 END ELSE
   ERRFLAG = 1
   ERRSTR := "<Reject>"
   ERRSTR := "<RejectCode>CSGCD002</RejectCode>"
   ERRSTR := "<RejectDescription>CUSTOMER # ":CUSTOMERNO:" DOES NOT EXIST!</RejectDescription>"
   ERRSTR := "</Reject>"
 END
*
98000*
*
IF ERRFLAG = 1 THEN
   SCHEMA.ONLY = 0   
   ERRSTR := "</Rejects>"
   OUT_PARAM_CUST = ERRSTR
END
RETURN
*
*
99999*
 IF ERRMSG <> "" THEN
 ERRMSG = "GetCustomerDetails ---> PMC_CUSTOMERSERVICE_GETCUSTOMERDETAILS ---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 END
