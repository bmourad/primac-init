SUBROUTINE RSMATERIAL_RSMATERIALSERVICE_SAVERSVMATERIAL(CONO,MAINTABDATA,SERIALDATA,ERRMSG,STRXML)    
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER
*********************************************************************
*********************************************************************
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVSTATS
$INCLUDE ICS.CPYLIB INV.STATS
$DEFINE INVJOBSTATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE SERIALRESV
$INCLUDE JCS.CPYLIB SERIAL.RESV
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB DIVISION
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
OPEN.FLAG=1
DEFFUN CALC_COST_QTY_PRIDGET(STK.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_STK_QTY_PRIDGET(COST.QTY,MAT INV.CNV.REC,ROND,LN)
*****
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = 'ESTIMATE FILE IS MISSING'; GOTO 93000
*
LN = 0
YAK = ""
YAK<1> = "IM IN RSMATERIAL_RSMATERIALSERVICE_SAVERSVMATERIAL ";WRITE YAK ON CONTROL,'01RSV'
WARNINGMSG = ""
MAT INV.CNV.REC = ""
MAT COMP.REC = ""
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  MAT COMP.REC = ""
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
DPTR = 0
ACTION = "A"
JOB.NUM=MAINTABDATA<1>
 MATREAD JOB.REC FROM JOB, CONO:JOB.NUM ELSE
    MAT JOB.REC = ""
    ERRMSG="Job number ":JOB.NUM : " does not exist"
    GOTO 93000
 END
 TEMP.JOB.RESV.QTY = JOB.RESV.QTY
 MATWRITE JOB.REC ON CONTROL,CONO:JOB.NUM
JOB.RESV.MATL = MAINTABDATA<2>
JOB.RESV.WHSE = MAINTABDATA<3>
JOB.RESV.DATE = MAINTABDATA<4>
JOB.RESV.QTY =  MAINTABDATA<5>
IJS_REQ_QTY = MAINTABDATA<6>
*JOB.ALOC.QTY = MAINTABDATA<7>
*JOB.USED.QTY = MAINTABDATA<8>
*SRESV.PRWHSE = SERIALDATA<9>;*Product!whse
*
TEMP_IJS_REQ_QTY = IJS_REQ_QTY
SWAP "." WITH "" IN IJS_REQ_QTY
SWAP "." WITH "" IN JOB.RESV.QTY
YAK<-1> = "MAINTABDATA ":MAINTABDATA;WRITE YAK ON CONTROL,'01RSV'
SRESV.PRWHSE = SERIALDATA<1>;*Product!whse
SRESV.RECP = SERIALDATA<2>;*Receipts
SRESV.SERIAL = SERIALDATA<3>;*Serials
SRESV.QTY = SERIALDATA<4>;*Serial reserved qty
*SWAP "." WITH "" IN SRESV.QTY
*******
YAK<-1> = "B4 SERIALDATA ":SERIALDATA;WRITE YAK ON CONTROL,'01RSV'
 FOR N = 1 TO DCOUNT(SRESV.RECP,VM)
	  RSVPROD = FIELD(SRESV.PRWHSE<1,N>,"!",1)
	  MATREAD INV.REC FROM INVENTORY, CONO : RSVPROD ELSE
	    ERRMSG = 'CANNOT LOCATE INVENTORY ':RSVPROD:' FOR JOB ':JOB.NUM
	    GOTO 1888
	  END
	 *$INCLUDE ICSBP INV.UM.CNV ;
	 LN = N
	 GOSUB 9000
	 IF(INDEX(SRESV.SERIAL<1,N>,SVM,1) > 0) THEN
	   FOR M = 1 TO DCOUNT(SRESV.SERIAL<1,N>,SVM)
	     * IF SRESV.QTY<1,N,M> # "" THEN
		TMP = ""
		 IF ICR.CNV<LN> = "MD2" THEN
		   TMP = SRESV.QTY<1,N,M> * 100
		 END ELSE
		   TMP = SRESV.QTY<1,N,M>
		 END
		   TMP=CALC_COST_QTY_PRIDGET(TMP,MAT INV.CNV.REC,'',LN)
		   SRESV.QTY<1,N,M> = TMP 
	    *  END
	   NEXT M
	 END ELSE
YAK<-1> = "LOOP  SRESV.QTY<1,N> ":SRESV.QTY<1,N>;WRITE YAK ON CONTROL,'01RSV'
		TMP = ""
		 IF ICR.CNV<LN> = "MD2" THEN
		   TMP = SRESV.QTY<1,N> * 100
		 END ELSE
		   TMP = SRESV.QTY<1,N>
		 END
		   TMP=CALC_COST_QTY_PRIDGET(TMP,MAT INV.CNV.REC,'',LN)
		   SRESV.QTY<1,N> = TMP 
	 END
1888 NEXT N
YAK<-1> = "AFTER SRESV.QTY ":SRESV.QTY;WRITE YAK ON CONTROL,'01RSV'
*GOTO 93000
*****
STRXML = "<RSDATA><JobNo>":JOB.NUM:"</JobNo>"
GOSUB BUILDXML
IF DPTR = 0 THEN
  DPTR = 1
  RCNT=DCOUNT(JOB.RESV.MATL,VM)
END ELSE
  RCNT = DPTR
END
FOR RSV = RCNT TO DPTR STEP -1
  RESV.PROD = JOB.RESV.MATL<1,RSV>
  RESV.WHSE=JOB.RESV.WHSE<1,RSV>
YAK<-1> = "pppppppppppppp RESV.PROD ":RESV.PROD:"~ RESV.WHSE "RESV.WHSE;WRITE YAK ON CONTROL,'01RSV'
  MATREAD INV.REC FROM INVENTORY, CONO : RESV.PROD ELSE
    ERRMSG = 'CANNOT LOCATE INVENTORY ':RESV.PROD:' FOR JOB ':JOB.NUM
    GOTO 1999
  END
*$INCLUDE ICSBP INV.UM.CNV ;
**********
  LN = RSV
 GOSUB 9000
********
  IF INDEX(JOB.RESV.DATE<1,LN>,"/",1) # 0 THEN
	IF JOB.RESV.DATE<1,LN> # "" THEN JOB.RESV.DATE<1,LN> = ICONV(JOB.RESV.DATE<1,LN>,"D2/")
  END
YAK<-1> = "B4 JOB.ALOC.QTY<1,LN> ":JOB.ALOC.QTY<1,LN>:"~":JOB.RESV.QTY<1,LN>:"~":JOB.USED.QTY<1,LN>;WRITE YAK ON CONTROL,'01RSV'
  TEMP = ""
  TEMP = JOB.RESV.QTY<1,LN>
  *JOB.ALOC.QTY<1,LN>=CALC_COST_QTY_PRIDGET(JOB.ALOC.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
  JOB.RESV.QTY<1,LN>=CALC_COST_QTY_PRIDGET(TEMP,MAT INV.CNV.REC,'.5',LN)
  *JOB.USED.QTY<1,LN>=CALC_COST_QTY_PRIDGET(JOB.USED.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
YAK<-1> = "AFTER JOB.ALOC.QTY<1,LN> ":JOB.ALOC.QTY<1,LN>:"~":JOB.RESV.QTY<1,LN>:"~":JOB.USED.QTY<1,LN>;WRITE YAK ON CONTROL,'01RSV'
****
  MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
    ERRMSG = 'CANNOT LOCATE PROD LINE ':INV.LINE
    GOTO 1999
  END
  IWH.ID = CONO : JOB.RESV.MATL<1,RSV> : '!' : JOB.RESV.WHSE<1,RSV>
  MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
    MAT ORG.IWH.REC = MAT IWH.REC
    JOB.ID='' ; PERIOD='' ; SER.ARR=''
    CALL JCS_IWH_SUB_PRIDGET(IWH.ID,JOB.ID,PERIOD,SER.ARR,"1",OPEN.FLAG)
  END ELSE
    ERRMSG = 'CANNOT LOCATE INV.WHSE ':IWH.ID
    GOTO 1999
  END
  IJS.ID = IWH.ID : "!" : JOB.NUM
  YAK<-1> = "READ INV.JOB.STATS IJS.ID ":IJS.ID;WRITE YAK ON CONTROL,'01RSV'
  MATREADU INV.JS.REC FROM INV.JOB.STATS, IJS.ID ELSE
    MAT INV.JS.REC = ""
    IJS.JOB.CUST = JOB.CUST
    IJS.JOB.DATE = JOB.RESV.DATE<1,RSV>
  END
  IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
  MATREADU INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STAT.REC = ''
  LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JLOC ELSE
    ISTAT.JOB<1,JLOC> = JOB.NUM
  END
  IF ACTION = "D" THEN
    JOB.RESV.QTY<1,RSV> = 0
    JOB.RESV.AMT<1,RSV> = 0
    IJS.REQ.QTY = ""
    IJS.REQ.AMT = ""
    IJS.REQ.DATE = ""
  END
  RESV.ARR=''
  IF SRESV.SERIAL#'' THEN
    ;* this would be true only if product was serially tracked
    ;* and CATG.RSV.SERIAL='Y'
    ;* if CATG.RSV.SERIAL='N' then reserve is
    ;* kept only at the warehouse level
    ;*SRESV.REC is set in SERIAL.RESERVE.SEL program only
    PRWHSE=RESV.PROD:"!":RESV.WHSE
YAK<-1> = "PRWHSE  ":PRWHSE:" IN SRESV.PRWHSE ":SRESV.PRWHSE;WRITE YAK ON CONTROL,'01RSV'
    LCNT=DCOUNT(SRESV.SERIAL,VM)
    LOCATE PRWHSE IN SRESV.PRWHSE<1> SETTING PRWHSE.POS THEN
      OLD.PRWHSE=PRWHSE ; EOL=0
      FOR L=PRWHSE.POS TO LCNT UNTIL EOL
        IF OLD.PRWHSE=PRWHSE THEN
          RESV.ARR<1,-1>=SRESV.RECP<1,L>
          RESV.ARR<2,-1>=SRESV.SERIAL<1,L>
          RESV.ARR<3,-1>=SRESV.QTY<1,L>
        END ELSE
          EOL=1
        END
        OLD.PRWHSE=PRWHSE
      NEXT L
    END
  END
YAK<-1> = "FINAL RESV.ARR  ":RESV.ARR;WRITE YAK ON CONTROL,'01RSV'
  RESV.QTY = JOB.RESV.QTY<1,RSV> - IJS.JOB.QTY
YAK<-1> = "RESV.QTY  ":RESV.QTY:" = ":JOB.RESV.QTY<1,RSV>:" - ":IJS.JOB.QTY;WRITE YAK ON CONTROL,'01RSV'
*$INCLUDE JCSBP FIFO.RESV.SUB
$INCLUDE WSEBP FIFO_RESV_SUB_PRIDGET
YAK<-1> = "ERRMSG  ":ERRMSG;WRITE YAK ON CONTROL,'01RSV'
  IF ERRMSG # '' THEN
    JOB.RESV.QTY<1,RSV> = TEMP.JOB.RESV.QTY<1,RSV>
    *JOB.RESV.QTY<1,RSV> = IJS.JOB.QTY
    RELEASE INV.STATS, IWH.ID
    RELEASE INV.WHSE, IWH.ID
    RELEASE INV.JOB.STATS, IJS.ID
    STRXML := "<Warning>":ERRMSG:" for Product ":RESV.PROD:"</Warning>"
    ACTION = ERRMSG
    *RSV = DPTR 
    CALL JCS_IWH_SUB_PRIDGET('','','','',"9",'') ;*T27915
    ERRMSG = ""
    GOTO 1999
  END
  IF IJS.JOB.ALOC + IJS.JOB.QTY = 0 AND IJS.JMT.SEQ = "" AND IJS.REQ.QTY + 0 = 0 THEN
    DELETE INV.JOB.STATS, IJS.ID
    ISTAT.JOB = DELETE(ISTAT.JOB,1,JLOC,0)
  END ELSE
  ********************************************
  YAK<-1> = "B4 IJS_REQ_QTY<1,RSV> ":IJS_REQ_QTY<1,RSV>;WRITE YAK ON CONTROL,'01RSV'
    IJS.REQ.DATE = DATE()
    IJS.REQ.QTY = INT(((IJS_REQ_QTY<1,RSV>/ICR.MT1<LN>)*ICR.DV1<LN>)*ICR.DV2<LN> + .5)
    YAK<-1> = "AFTER IJS.REQ.QTY<1,RSV> ":IJS.REQ.QTY<1,RSV>;WRITE YAK ON CONTROL,'01RSV'
  ********************************************
    MATWRITE INV.JS.REC ON INV.JOB.STATS, IJS.ID
  END
  IF ISTAT.JOB = '' AND ISTAT.PO = '' THEN
    DELETE INV.STATS, IWH.ID
  END ELSE
    MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
  END
  IF CATG.TRACK.QOH = "Y" THEN
    JOB.ID=CONO:JOB.NUM
YAK<-1> = "RESV.ARR<2> ":RESV.ARR<2>;WRITE YAK ON CONTROL,'01RSV'
    IF RESV.ARR<2>#'' THEN
      ;* this would only be true for CATG.TRK.LVL='S'
      ;* & CATG.COST.TYPE='AC' & CATG.RESV.SERIAL='Y'
      LCNT=DCOUNT(RESV.ARR<2>,VM)
      SER.ARR=''; CNT=''
      FOR L=1 TO LCNT
        SCNT=DCOUNT(RESV.ARR<2,L>,SVM)
        FOR S=1 TO SCNT
          CNT+=1
          SER.ARR<1,CNT,1>=RESV.ARR<2,L,S> ;*serial
          SER.ARR<1,CNT,2>=RESV.ARR<3,L,S>;*qty to be reserved
        NEXT S
      NEXT L
    END
YAK<-1> = "IWH.ID  ":IWH.ID:" SER.ARR ":SER.ARR;WRITE YAK ON CONTROL,'01RSV'
    CALL JCS_IWH_SUB_PRIDGET(IWH.ID,JOB.ID,PERIOD,SER.ARR,"5",OPEN.FLAG)
    CALL JCS_IWH_SUB_PRIDGET(IWH.ID,'','','',"3",OPEN.FLAG)
*           MATWRITE IWH.REC ON INV.WHSE, IWH.ID
  END ELSE
    RELEASE INV.WHSE, IWH.ID
  END
1999 NEXT RSV
***************
MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
   FOR M = MCNT TO 1 STEP -1
      IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
         JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
         MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
            JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
            JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
            JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
            JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
            JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
            JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
            JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
            JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
            JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
         END
      END
   NEXT M
YAK<-1> = "B4 WRTING TO JOB JOB.ALOC.QTY ":JOB.ALOC.QTY:"~":JOB.RESV.QTY:"~":JOB.USED.QTY;WRITE YAK ON CONTROL,'01RSV'
MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
*   MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
*   FOR M = MCNT TO 1 STEP -1
*	MATREAD INV.REC FROM INVENTORY, CONO : JOB.RESV.MATL<1,M> ELSE
*	ERRMSG = 'CANNOT LOCATE INVENTORY ':JOB.RESV.MATL<1,M>:' FOR JOB ':JOB.NUM
*	GOTO 1666
*	END
*	$INCLUDE ICSBP INV.UM.CNV ;
*	**********
*	LN = M
*	********
*	IF INDEX(JOB.RESV.DATE<1,LN>,"/",1) # 0 THEN
*	IF JOB.RESV.DATE<1,LN> # "" THEN JOB.RESV.DATE<1,LN> = ICONV(JOB.RESV.DATE<1,LN>,"D2/")
*	END
*	JOB.ALOC.QTY<1,LN>=CALC_COST_QTY_PRIDGET(JOB.ALOC.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
*	JOB.RESV.QTY<1,LN>=CALC_COST_QTY_PRIDGET(JOB.RESV.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
*	JOB.USED.QTY<1,LN>=CALC_COST_QTY_PRIDGET(JOB.USED.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
*      IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
*         JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
*         MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
*            JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
*            JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
*            JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
*            JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
*            JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
*            JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
*            JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
*            JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
*            JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
*         END
*      END
*  1666 NEXT M
*STRXML = "<RSDATA><Result>Updated Successfully</Result></RSDATA>"
*STRXML := "<Result>Updated Successfully</Result></RSDATA>"
STRXML := "</RSDATA>"
RETURN
9000 *
MAT INV.CNV.REC = ""
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN> = "MD0"; ICR.CNV1<LN> = "MD0,"
    ICR.DV1<LN> = INV.M.WT; ICR.MT1<LN> = 1; ICR.DV2<LN> = 1
    ICR.TYPE<LN> = 3; ICR.SCAL<LN> = 0
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN> = "MD0"; ICR.CNV1<LN> = "MD0,"
    ICR.DV1<LN> = INV.PAP.WIDTH/100; ICR.MT1<LN> = 10; ICR.DV2<LN> = 1
    ICR.TYPE<LN> = 3; ICR.SCAL<LN> = 0
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN> = "MD0"; ICR.CNV1<LN> = "MD0,"
    ICR.DV1<LN> = INV.PAP.WIDTH/100; ICR.MT1<LN> = 100; ICR.DV2<LN> = 12
    ICR.TYPE<LN> = 3; ICR.SCAL<LN> = 0
  CASE INV.M.LINE = "FNGD"
    ICR.CNV<LN> = "MD0"; ICR.CNV1<LN> = "MD0,"
    ICR.DV1<LN> = 1; ICR.MT1<LN> = 1; ICR.DV2<LN> = 1000
    ICR.TYPE<LN> = 3; ICR.SCAL<LN> = 0
  CASE 1
    ICR.CNV<LN> = "MD2"; ICR.CNV1<LN> = "MD2,"
    ICR.DV1<LN> = 10; ICR.MT1<LN> = 1; ICR.DV2<LN> = 1
    ICR.TYPE<LN> = 4; ICR.SCAL<LN> = 2
END CASE
*
IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
RETURN
BUILDXML:
STRXML := "<Products>"
	FOR RSM = 1 TO DCOUNT(JOB.RESV.MATL,VM)
	        STRXML := "<Product Line = '":RSM:"'>"
		STRXML := "<ProductNo>":MAINTABDATA<2><1,RSM>:"</ProductNo>"
		STRXML := "<Warehouse>":MAINTABDATA<3><1,RSM>:"</Warehouse>"
		STRXML := "<ReserveDate>":MAINTABDATA<4><1,RSM>:"</ReserveDate>"
		STRXML := "<ReserveQty>":MAINTABDATA<5><1,RSM>:"</ReserveQty>"
		STRXML := "<RequiredDate>":OCONV(DATE(),"D2/"):"</RequiredDate>"
		STRXML := "<RequiredQty>":TEMP_IJS_REQ_QTY<1,RSM>:"</RequiredQty>"
		STRXML := "</Product>"
	NEXT RSM
STRXML := "</Products>"
RETURN
93000*
IF ERRMSG <> "" THEN
STRXML = "<RSDATA><ErrMsg>": ERRMSG:"</ErrMsg></RSDATA>"
CALL WRITELOG(ERRMSG)
END
END
