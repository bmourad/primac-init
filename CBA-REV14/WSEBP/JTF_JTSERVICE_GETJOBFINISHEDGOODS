SUBROUTINE JTF_JTSERVICE_GETJOBFINISHEDGOODS(CONO, JOBID,SCHEMA.FLAG,ERRMSG, STRXML)
STRXML = '<Job><FinishedGoodsProduct></FinishedGoodsProduct><FullDescription></FullDescription><Warehouse></Warehouse><ProductUnits></ProductUnits><UnitPrice></UnitPrice><Sell></Sell><ManufacturedQuantity></ManufacturedQuantity><ManufacturedDate></ManufacturedDate><AllocatedQuantity></AllocatedQuantity><OrderNumbers></OrderNumbers><FinishedQuantity></FinishedQuantity><Balance></Balance></Job>'
SCHEMA.FLAG = 1
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE CPYLIB CHAR
IF CONO = "" THEN
  ERRMSG = "COMPANY NUMBER CANNOT BE BLANK"; GOTO 9999
  RETURN
END
IF JOBID = "" THEN
  ERRMSG = "JOBID CANNOT BE BLANK"; GOTO 9999
  RETURN
END
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'CANNOT OPEN INVENTORY FILE'; GOTO 9999
  RETURN
END
OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE
  ERRMSG = 'CANNOT OPEN JOB.FNGD.STATS FILE'; GOTO 9999
  RETURN
END
*
* INITIALIZE VARIABLES
*
BAL = ''
*
* MAIN PROCESSING
*
MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBID THEN
  CNT = DCOUNT(JFS.PROD,VM)
  IF CNT > 0 THEN
   FOR N = 1 TO CNT
    MATREAD INV.REC FROM INVENTORY, CONO:JFS.PROD<1,N> ELSE MAT INV.REC = ''
    IF N = 1 THEN STRXML = '<Job>' ELSE STRXML := '<Job>'
    STRXML := '<FinishedGoodsProduct>' : JFS.PROD<1,N> : '</FinishedGoodsProduct>'
    STRXML := '<FullDescription>' : INV.FULL.DESC : '</FullDescription>'
    STRXML := '<Warehouse>' : JFS.WHSE<1,N> : '</Warehouse>'
    STRXML := '<ProductUnits>' : INV.UNIT<1,2> : '</ProductUnits>'
    STRXML := '<UnitPrice>' : OCONV(JFS.U.PRICE<1,N>,"MD4") : '</UnitPrice>'
    STRXML := '<Sell>' : OCONV(JFS.U.SELL<1,N>,"MD4") :'</Sell>'
    GOSUB 8000
    STRXML := '<ManufacturedQuantity>' : OCONV(INT(((JFS.M.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</ManufacturedQuantity>'
    STRXML := '<ManufacturedDate>' : OCONV(JFS.DATE<1,N>,"D2/") : '</ManufacturedDate>'
    STRXML := '<AllocatedQuantity>' : OCONV(INT(((JFS.A.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</AllocatedQuantity>'
    IF JFS.ORDER<1,N,2> # "" THEN
      STRXML := '<OrderNumbers>': "MULTI" :'</OrderNumbers>'
    END ELSE
      STRXML := '<OrderNumbers>': JFS.ORDER<1,N> :'</OrderNumbers>'
   END
   STRXML := '<FinishedQuantity>' : OCONV(INT(((JFS.F.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</FinishedQuantity>'
   IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN
      BAL = 0
   END ELSE
      BAL = JFS.M.QTY<1,N> - JFS.F.QTY<1,N> - JFS.S.QTY<1,N>
   END
   IF BAL < 0 THEN BAL = 0
   STRXML := '<Balance>' : OCONV(INT(((BAL/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) : '</Balance>'
   STRXML := '</Job>'
   NEXT N
   SCHEMA.FLAG = 0   
  END 
 END
RETURN
*
*
8000*
 $INCLUDE ICSBP INV.UM.CNV
RETURN
*
* WRITE ERROR MESSAGE
*
9999 *
      IF ERRMSG <> "" THEN
      ERRMSG = "ERROR FROM JTF_JTSERVICE_GETJOBFINISHEDGOODS --> " : ERRMSG
      CALL WRITELOG(ERRMSG)
      END
   RETURN
