SUBROUTINE JCS_UPDATEJOBMATERIAL(INPUT_VALUE,FLAG,ERRMSG)
 *********************************************************************
 *
 * PROGRAM  - JCS_UPDATEJOBMATERIAL
 *
 * DATE     - 07/13/07
 *
 *
 *********************************************************************
 *
 *---- COPY STATEMENTS
 $INCLUDE JCS.CPYLIB JOB
 $INCLUDE PMC.CPYLIB COMPANY
 $INCLUDE ICS.CPYLIB INVENTORY
 $INCLUDE ICS.CPYLIB INV.CNV
 $INCLUDE ICS.CPYLIB INV.JOB.STATS
 $INCLUDE ICS.CPYLIB WAREHOUSE
 ERRMSG=""
 OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOTO 99999
 OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOTO 99999 
 OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE"; GOTO 99999
 OPEN "INV.JOB.STATS" TO INV.JOB.STATS ELSE ERRMSG="CANNOT OPEN INV.JOB.STATS FILE";GOTO 99999
 OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="CANNOT OPEN WAREHOUSE FILE";GOTO 99999
 CONO=""
 JOBID=""
 INVSTATSFLAG="0"
 CONO=INPUT_VALUE<1>
 MATREAD COMP.REC FROM COMPANY,CONO ELSE
   ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
   GOTO 99999
 END
 JOBID=INPUT_VALUE<2>
 MATREAD JOB.REC FROM JOB,CONO:JOBID ELSE
    ERRMSG=JOBID:"- THIS JOB NUMBER IS NOT ON THE FILE"
    GOTO 99999
 END 
IF INPUT_VALUE<3> NE '<$$NULL$$>' THEN 
   ERRMSG=""
   CNT=INPUT_VALUE<3>
   MCNT=DCOUNT(JOB.RESV.MATL<1>,@VM)
   FOR I=1 TO CNT
      GOSUB 6000
      $INCLUDE ICSBP INV.UM.CNV
       ECD.SCALER = "MD0"
       ECD.SCALER = ICR.CNV1
       MATERIAL=""
       WHSE=""
       RESERVEDDATE=""
       UNITOFMEASUREMENT=""
       ALLOCATED=""
       INVSTATSFLAG="1"
       IF FLAG="TRUE" THEN         
         IF INPUT_VALUE<4,I> NE '<$$NULL$$>' THEN MATERIAL=INPUT_VALUE<4,I> 
         IF INPUT_VALUE<5,I> NE '<$$NULL$$>' THEN WHSE=INPUT_VALUE<5,I>        
         IF MATERIAL # "" AND WHSE # "" THEN
            MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE THEN
               IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN 
                    ERRMSG = "JOB DIVISION DOES NOT MATCH PRODUCT'S WAREHOUSE DIVISION"
                    GOSUB 99999 
               END ELSE 	         
                    JSTAT.ID = MATERIAL :"!" : WHSE :"!" :JOBID                       
                    MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
                         MAT INV.JS.REC = ''	  
                    END
		    VALUE=ICONV(INPUT_VALUE<6,I>,'D2/')
                    STAT=STATUS()
                    IF STAT=1 THEN
                        IF INPUT_VALUE<6,I> NE '<$$NULL$$>' THEN RESERVEDDATE=INPUT_VALUE<6,I>
                    END ELSE
                        IF INPUT_VALUE<6,I> NE '<$$NULL$$>' THEN RESERVEDDATE=ICONV(INPUT_VALUE<6,I>,'D2/') 
                    END 
                    LOCATE MATERIAL IN JOB.RESV.MATL<1> SETTING POS THEN
                       IF WHSE = JOB.RESV.WHSE<1,POS> THEN 
		           IF POS # I THEN
                               ERRMSG = "INVENTORY (": MATERIAL :") FOR WAREHOUSE (":WHSE:") ALREADY RESERVED"
	                       GOSUB 99999
                           END ELSE
                               IF INPUT_VALUE<7,I> NE '<$$NULL$$>' THEN ALLOCATED=ICONV(INPUT_VALUE<7,I>, ECD.SCALER)
                               IF MATERIAL # "" THEN JOB.RESV.MATL<1,POS> = MATERIAL
                               IF WHSE # "" THEN  JOB.RESV.WHSE<1,POS> = WHSE
                               IF RESERVEDDATE # "" THEN  JOB.RESV.DATE<1,POS> = RESERVEDDATE
                               IF ALLOCATED # "" THEN  JOB.ALOC.QTY<1,POS> = ALLOCATED  
			       IF INPUT_VALUE<8,I> NE '<$$NULL$$>' THEN JOB.RESV.QTY<1,POS>=ICONV(INPUT_VALUE<8,I>, ECD.SCALER) 
                               IF INPUT_VALUE<9,I> NE '<$$NULL$$>' THEN JOB.USED.QTY<1,POS> = ICONV(INPUT_VALUE<9,I>, ECD.SCALER) 
		           END
		       END ELSE
                           GOSUB 70000
		       END
                    END ELSE
	               GOSUB 70000	     			    
		    END		        
		    REQDATEVALUE=ICONV(INPUT_VALUE<10,I>,'D2/')
                    STATREQ=STATUS()
                    IF STATREQ=1 THEN
                          IF INPUT_VALUE<10,I> NE '<$$NULL$$>' THEN IJS.REQ.DATE=INPUT_VALUE<10,I>
                    END ELSE
                          IF INPUT_VALUE<10,I> NE '<$$NULL$$>' THEN IJS.REQ.DATE=ICONV(INPUT_VALUE<10,I>,'D2/') 
                    END 
                    IF INPUT_VALUE<11,I> NE '<$$NULL$$>' THEN IJS.REQ.AMT = ICONV(INPUT_VALUE<11,I>, "MD4") 
                    IF INPUT_VALUE<12,I> NE '<$$NULL$$>' THEN IJS.REQ.QTY = ICONV(INPUT_VALUE<12,I>, ECD.SCALER) 
                    JSTAT.ID = MATERIAL :"!" : WHSE :"!" :JOBID
                    MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID ON ERROR ERRMSG="CANNOT WRITE TO INV.JOB.STATS FILE":CONO:JOBID ; GOSUB 99999
               END           
            END ELSE
	        ERRMSG="INVALID WAREHOUSE--":WHSE
	        GOSUB 99999
            END
         END ;* END OF MATERIAL
       END ELSE
             IF INPUT_VALUE<4,I> NE '<$$NULL$$>' THEN MATERIAL=INPUT_VALUE<4,I>
             IF INPUT_VALUE<5,I> NE '<$$NULL$$>' THEN WHSE=INPUT_VALUE<5,I> 
	     IF MATERIAL # "" AND WHSE # "" THEN
		     IF INPUT_VALUE<4,I> NE '<$$NULL$$>' THEN JOB.RESV.MATL<1,I>=INPUT_VALUE<4,I> 
		     IF INPUT_VALUE<5,I> NE '<$$NULL$$>' THEN JOB.RESV.WHSE<1,I>=INPUT_VALUE<5,I> 
		     VALUE=ICONV(INPUT_VALUE<6,I>,'D2/')
		     STAT=STATUS()
		     IF STAT=1 THEN
			IF INPUT_VALUE<6,I> NE '<$$NULL$$>' THEN JOB.RESV.DATE<1,I>=INPUT_VALUE<6,I>
		     END ELSE
			IF INPUT_VALUE<6,I> NE '<$$NULL$$>' THEN JOB.RESV.DATE<1,I>=ICONV(INPUT_VALUE<6,I>,'D2/') 
		     END             
		     JSTAT.ID = MATERIAL :"!" : WHSE :"!" :JOBID
		     MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
			 MAT INV.JS.REC = ''
		     END
		     IF INPUT_VALUE<7,I> NE '<$$NULL$$>' THEN JOB_ALOC_AMT<1,I>=ICONV(INPUT_VALUE<7,I>, ECD.SCALER)
		     IF INPUT_VALUE<8,I> NE '<$$NULL$$>' THEN JOB.RESV.QTY<1,I>=ICONV(INPUT_VALUE<8,I>, ECD.SCALER) 
		     IF INPUT_VALUE<9,I> NE '<$$NULL$$>' THEN JOB.USED.QTY<1,I> = ICONV(INPUT_VALUE<9,I>, ECD.SCALER)
		     REQDATEVALUE=ICONV(INPUT_VALUE<10,I>,'D2/')
		     STATREQ=STATUS()
		     IF STATREQ=1 THEN
			   IF INPUT_VALUE<10,I> NE '<$$NULL$$>' THEN IJS.REQ.DATE=INPUT_VALUE<10,I>
		     END ELSE
			   IF INPUT_VALUE<10,I> NE '<$$NULL$$>' THEN IJS.REQ.DATE=ICONV(INPUT_VALUE<10,I>,'D2/') 
		     END 
		     IF INPUT_VALUE<11,I> NE '<$$NULL$$>' THEN IJS.REQ.AMT = ICONV(INPUT_VALUE<11,I>, "MD4") 
		     IF INPUT_VALUE<12,I> NE '<$$NULL$$>' THEN IJS.REQ.QTY = ICONV(INPUT_VALUE<12,I>, ECD.SCALER) 
		     MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID ON ERROR ERRMSG="CANNOT WRITE TO INV.JOB.STATS FILE":CONO:JOBID ; GOSUB 99999
             END                      
       END
   NEXT I
   MATWRITE JOB.REC ON JOB, CONO:JOBID ON ERROR ERRMSG="CANNOT WRITE TO JOB FILE":CONO:JOBID ; GOSUB 99999
END ;*END OF FIRST IF
RETURN
 *
 70000*
   MCNT=MCNT + 1
   IF MATERIAL # "" THEN JOB.RESV.MATL<1,MCNT> = MATERIAL
   IF WHSE # "" THEN  JOB.RESV.WHSE<1,MCNT> = WHSE
   IF RESERVEDDATE # "" THEN  JOB.RESV.DATE<1,MCNT> = RESERVEDDATE
   IF ALLOCATED # "" THEN  JOB.ALOC.QTY<1,MCNT> = ALLOCATED  
   IF INPUT_VALUE<8,I> NE '<$$NULL$$>' THEN JOB.RESV.QTY<1,MCNT>=ICONV(INPUT_VALUE<8,I>, ECD.SCALER) 
   IF INPUT_VALUE<9,I> NE '<$$NULL$$>' THEN JOB.USED.QTY<1,MCNT> = ICONV(INPUT_VALUE<9,I>, ECD.SCALER) 
RETURN
*
 * WRITING ERROR TO WSE_LOG FILE
 99999*
 IF ERRMSG <> "" THEN
 ERRMSG = "UpdateMaterialReservation---> JCS_UPDATEJOBMATERIAL ---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 6000 *
      MAT INV.REC=""
      MATREAD INV.REC FROM INVENTORY, CONO:INPUT_VALUE<4,I> ELSE
            ERRMSG = 'PRODUCT NUMBER ':INPUT_VALUE<4,I>:' IS MISSING'; GOSUB 99999
      END
      RETURN
 *
 *
 90000*
 RETURN
 END
