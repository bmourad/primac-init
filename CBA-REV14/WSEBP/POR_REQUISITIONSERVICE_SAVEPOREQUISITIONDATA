SUBROUTINE POR_REQUISITIONSERVICE_SAVEPOREQUISITIONDATA(CONO,MAINTABDATA,ITEMALLOCDATA,JOBALLOCDATA,ERRMSG,STRXML)
*T060209 - Code changed by magafoor on 06/02/2009
*T101209 - By yakub on 10/12/09 WORING ON UPDATE PAYLOAD
*T111809 - BY YAKUB ON 11/18/09 Add ApproveStatus and ApproveStatusData for RPOR Mode 2
*T113009 - BY YAKUB 0N 11/30/09 working on output payload
*T120409 - BY YAKUB ON 12/04/09 Change payload on approve requisition
*T012810 - BY YAKUB ON 01/28/2010 Add isRequisitionOnHold tag for Mode = 1 on 01/28/2010
*****************************************************************************************************************
$INCLUDE CPYLIB COMMON1
$INCLUDE POS.CPYLIB COM.PO
$INCLUDE POS.CPYLIB COM.PO.INTRF
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE VEND
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE PMC.CPYLIB SHIP.VIA
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE WSE.CPYLIB TEMP.PO
*
DEFFUN PRIDGET_UOM_CONVERSION_CALC(QTY,FROM.UOM,TO.UOM,WGT,WIDTH,ROND,LN)
OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
**T060209 v
*CONO = "001"
*MAINTABDATA = "2458":AM:"01":AM:"06/25/09":AM:"00001":AM:"030":AM:"1":AM:"5":AM:"01":AM:"":AM:"":AM:"":AM:"":AM:"New York":AM:"":AM:"N":AM:"2"
*ITEMALLOCDATA = "ROLL":VM:"01":VM:"01/01/85":VM:"100.0000":VM:"":VM:"LBS":VM:"100.00":VM:"0.00":VM:"100.00":VM:"2":VM:""
*JOBALLOCDATA = "10110":SVM:"01":SVM:"100":SVM:"LBS":SVM:"100.00":SVM:"0.00":SVM:"1"
*DEBUG
*T060209 ^
YAK = ""
DIM PROD.DEL(5)
MAT PROD.DEL = ""
EQU PD.PROD TO PROD.DEL(1)
EQU PD.WHSE TO PROD.DEL(2)
MAT COMP.REC = ''
MAT PO.REC = ''
MAT TEMP.PO.REC = ''
REQ = 0
BCFLAG = 0
*T060209 v
TEMP.ITEMALLOCDATA = ""  
UPDATE.POR = 0 
TEMP.JOBALLOCDATA = ""
TEMP.RECEVED = ""
MAT INV.CNV.REC = ""
DIFF.UM = ""
READ.FLAG = 1;*T101209
MENU.FLAG = MAINTABDATA<17>
POR.MODE = MAINTABDATA<16>;*T120409
STRXML="<Payload>"
  IF MENU.FLAG = "P" THEN
     STRXML:="<RPO>"
  END ELSE
      MENU.FLAG = "R"
    *T113009 v
      *STRXML:="<Requisition>"
        *T120409 v
          *STRXML:="<RPOR>"
	  IF POR.MODE = 2 THEN
            STRXML:="<RPO>"
	  END ELSE
	   STRXML:="<RPOR>"
	  END
	*T120409 ^
    *T113009 ^
  END
*T060209 ^
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
IF CO.APS.R.INTRF > 2 THEN
      OPEN '','VEND.STATS' TO VEND.STATS ELSE
         ERRMSG = "VEND.STATS FILE IS MISSING"; GOTO 93000
      END
      OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
         ERRMSG = "VEND.PO.STATS FILE IS MISSING"; GOTO 93000
      END
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = "VEND.PROD.STATS FILE IS MISSING"; GOTO 93000
      END
END
*IF CO.PO.REQ.FLAG = "Y" THEN
   OPEN '','REG.REQ' TO REG.REQ ELSE ERRMSG = 'REG.REQ FILE IS MISSING'; GOTO 93000
   OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
   OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
   USER.ID = UPCASE(@LOGNAME)
*END
PO.CODE = MAINTABDATA<1>
IF MENU.FLAG = "P" THEN
*T101209 v
  *MATREAD PO.REC FROM PO, CONO:PO.CODE ELSE MAT PO.REC = ""
  MATREAD PO.REC FROM PO, CONO:PO.CODE ELSE
     MAT PO.REC = ""
     READ.FLAG = 0
  END
*T101209 ^
END ELSE
  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
     REQ = 1 ; * this is still requisition 
     UPDATE.POR = 1
     
  END ELSE
     READ.FLAG = 0;*T101209
  END
END
*MAT TEMP.PO.REC = MAT PO.REC
MAT TEMP.PO.REC = ""
*T101209 v
MAT PO.REC = ""
DELITEMALLOC = MAINTABDATA<18>
DELJOBALLOC = MAINTABDATA<19>
*T101209 ^
*POR.MODE = MAINTABDATA<16>;*T120409
PO.WRIT.BY = USER.ID
PO.APPROVER = USER.ID
IF REQ = 0 AND POR.MODE = 1 AND MENU.FLAG = "R" THEN
  PO.STATUS<1,-1> = 'Entered'
  PO.PREV.APP<1,-1> = USER.ID
  PO.ST.DATE<1,-1> = DATE()
END
IF MENU.FLAG = "R" THEN
PO.STATUS<1,-1> = 'Released'
PO.LEVEL.STATUS = "R"
PO.PREV.APP<1,-1> = USER.ID
PO.ST.DATE<1,-1> = DATE()
END
OPO.ORD.BY = USER.ID
PO.DIV.OWNER = MAINTABDATA<2>
PO.DATE = ICONV(MAINTABDATA<3>,"D2/")
PO.VEND.NO = MAINTABDATA<4>
PO.TERMS.DESC = MAINTABDATA<5>
PO.TERMS.DIS = ICONV(MAINTABDATA<6>,"MD2")
PO.TERMS.DATE = MAINTABDATA<7>
PO.SHIP.WHSE = MAINTABDATA<8>
MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.SHIP.WHSE ELSE MAT WHSE.REC = ""
PO.SHIP.NAME = WHS.DESC
PO.SHIP.ADD1 = WHS.ADDR1
PO.SHIP.ADD2 = WHS.ADDR2
PO.SHIP.ADD3 = WHS.CITY:',':WHS.STATE
PO.SHIP.ADD4 = WHS.ZIP
**
PO.VDR.ORD = MAINTABDATA<9>
PO.REQUESTOR = MAINTABDATA<10>
PO.CONTACT = MAINTABDATA<11>
PO.SHIP.VIA = MAINTABDATA<12>
MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:PO.SHIP.VIA ELSE MAT SHIP.VIA.REC = ""
PO.VIA.DESC = SHPV.DESC
PO.FOB = MAINTABDATA<13>
PO.INTRAL.INT = MAINTABDATA<14>
PO.PRT.FLG<1,1> = MAINTABDATA<15>
*POR.MODE = MAINTABDATA<16>
*PO.PRT.FLG<1,2> = MAINTABDATA<17>
*PO.WRIT.BY = MAINTABDATA<18>
IF MENU.FLAG = "R" THEN
	IF PO.CODE = "N" AND POR.MODE = 1 THEN
	  READ PO.SEQNO FROM CONTROL, CONO:"POCODE" ELSE PO.SEQNO = 10000
	    *PO.SEQNO += 1
	END ELSE
	  PO.SEQNO = PO.CODE 
	END
END ELSE
	IF PO.CODE = "N" THEN
	  READ PO.SEQNO FROM CONTROL, CONO:"POCODE" ELSE PO.SEQNO = 10000
	    *PO.SEQNO += 1
	END ELSE
	  PO.SEQNO = PO.CODE 
	END
END
*STRXML:="<CompanyNo>":CONO:"</CompanyNo>";*T113009
IF MENU.FLAG = "P" THEN
*T113009 v
  *STRXML:="<PONo>":PO.SEQNO:"</PONo>"
   STRXML:="<PO><PONo>":PO.SEQNO:"</PONo></PO>" 
   STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
*T113009 ^
  *T012810 v
     HOLD_REQFLG = "False"
     IF MAINTABDATA<21> # "" THEN HOLD_REQFLG = "True"
     STRXML:="<isPoOnHold>":HOLD_REQFLG:"</isPoOnHold>"
  *T012810 ^
END ELSE
*T113009 v
  *STRXML:="<RequisitionNo>":PO.SEQNO:"</RequisitionNo>"
  *T120409 v
    *STRXML:="<Requisition><RequisitionNo>":PO.SEQNO:"</RequisitionNo></Requisition>"
    IF POR.MODE = 2 THEN
      STRXML:="<PO><PONo>":PO.SEQNO:"</PONo></PO>"
    END ELSE
      STRXML:="<Requisition><RequisitionNo>":PO.SEQNO:"</RequisitionNo></Requisition>"
    END
  *T120409 v
  STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
*T113009 ^
  *T111809 v
  IF POR.MODE = 2 THEN
     STRXML:="<ApproveStatus>Approved</ApproveStatus>"
     STRXML:="<ApproveStatusDate>":OCONV(DATE(),'D2/'):"</ApproveStatusDate>"
  END ELSE
  *T012810 v
     HOLD_REQFLG = "False"
     IF MAINTABDATA<21> # "" THEN HOLD_REQFLG = "True"
     STRXML:="<isRequisitionOnHold>":HOLD_REQFLG:"</isRequisitionOnHold>"
  *T012810 ^
     STRXML:="<ApproveStatus> </ApproveStatus>"
     STRXML:="<ApproveStatusDate> </ApproveStatusDate>"
  END
  STRXML:="<PriorRequisition>":MAINTABDATA<20>:"</PriorRequisition>"
  *T111809 ^
END
IF MENU.FLAG = "R" THEN
*T101209 v
	STAT.CNT =  DCOUNT(PO.STATUS,VM)
	 IF PO.STATUS<1,STAT.CNT> # TEMP.PO.STATUS<1,STAT.CNT-1> THEN
	  STRXML:="<Status>":'Released':"</Status>"
	END
	IF PO.ST.DATE<1,STAT.CNT> # TEMP.PO.ST.DATE<1,STAT.CNT-1> THEN
	   STRXML:="<StatusDate>":OCONV(DATE(),'D2/'):"</StatusDate>"
	END
*T101209 ^
END
IF PO.APPROVER # TEMP.PO.APPROVER THEN
   STRXML:="<Approver>":PO.APPROVER:"</Approver>"
END
IF PO.DIV.OWNER # TEMP.PO.DIV.OWNER THEN
   STRXML:="<Division>":PO.DIV.OWNER:"</Division>"
END
IF PO.DATE # TEMP.PO.DATE THEN
  STRXML:="<PoDate>":OCONV(PO.DATE,'D2/'):"</PoDate>"
END
IF PO.VEND.NO # TEMP.PO.VEND.NO THEN
  STRXML:="<VendorNo>":PO.VEND.NO:"</VendorNo>"
END
IF PO.SHIP.WHSE # TEMP.PO.SHIP.WHSE THEN
  STRXML:="<ShipToNo>":PO.SHIP.WHSE:"</ShipToNo>"
  STRXML:="<ShipToName>":PO.SHIP.NAME:"</ShipToName>"
  STRXML:="<ShipToAddress1>":PO.SHIP.ADD1:"</ShipToAddress1>"
  STRXML:="<ShipToAddress2>":PO.SHIP.ADD2:"</ShipToAddress2>"
*T060209 v
  *STRXML:="<ShipToCityState>":PO.SHIP.ADD3:"</ShipToCityState>"
  STRXML:="<ShipToCity>":FIELD(PO.SHIP.ADD3,",",1):"</ShipToCity>"
  STRXML:="<ShipToState>":FIELD(PO.SHIP.ADD3,",",2):"</ShipToState>"
  STRXML:="<ShipToZip>":PO.SHIP.ADD4:"</ShipToZip>"
*T060209 ^
END
*T060209 v
IF PO.TERMS.DESC # TEMP.PO.TERMS.DESC THEN
     STRXML:="<TermsDescription>":MAINTABDATA<5>:"</TermsDescription>"
END
IF PO.TERMS.DIS # TEMP.PO.TERMS.DIS THEN
     TEMP.MAINTABDATA = MAINTABDATA<6>
     IF INDEX(TEMP.MAINTABDATA,".",1) = 0  THEN
        TEMP.MAINTABDATA = TEMP.MAINTABDATA * 100
	TEMP.MAINTABDATA = OCONV(TEMP.MAINTABDATA,"MD2")
     END
     STRXML:="<TermsPercentage>":TEMP.MAINTABDATA:"</TermsPercentage>"
END
IF PO.TERMS.DATE # TEMP.PO.TERMS.DATE THEN
     STRXML:="<TermsDate>":MAINTABDATA<7>:"</TermsDate>"
END
*T060209 ^
IF PO.VDR.ORD # TEMP.PO.VDR.ORD THEN
  STRXML:="<VendorOrderNo>":PO.VDR.ORD:"</VendorOrderNo>"
END
IF PO.REQUESTOR # TEMP.PO.REQUESTOR THEN
 STRXML:="<Requestor>":PO.REQUESTOR:"</Requestor>"
END
IF PO.CONTACT # TEMP.PO.CONTACT THEN
  STRXML:="<ContactName>":PO.CONTACT:"</ContactName>"
END
IF PO.SHIP.VIA # TEMP.PO.SHIP.VIA THEN
  STRXML:="<ShipViaCode>":PO.SHIP.VIA:"</ShipViaCode>"
  STRXML:="<ShipViaName>":PO.VIA.DESC:"</ShipViaName>"
END
IF PO.FOB # TEMP.PO.FOB THEN
  STRXML:="<FreeOnBoard>":PO.FOB:"</FreeOnBoard>"
END
IF PO.INTRAL.INT # TEMP.PO.INTRAL.INT THEN
   STRXML:="<Comments>":PO.INTRAL.INT:"</Comments>"
END
IF PO.PRT.FLG<1,1> # TEMP.PO.PRT.FLG<1,1> THEN
   STRXML:="<PrintFlag>":PO.PRT.FLG<1,1>:"</PrintFlag>"
END
IF PO.WRIT.BY # TEMP.PO.WRIT.BY THEN
STRXML:="<WrittenBy>":PO.WRIT.BY:"</WrittenBy>"
END
PROD.XML.STR = ""
JOB.XML.STR = ""
TEMP.JOB.XML.STR = ""
TEMP.PROD.XML.STR = ""
TEMP.PROD.XML.STR1 = ""
******************************
26000*
*Deletion of a Product Line v
NEW.PO.PROD.NUM = "" ; NEW.PO.JOB.NO = ""
NEW.PO.WHSE = "" ; NEW.PO.JB.DEPT = ""
NEW.PO.DEL.DATE = "" ; NEW.PO.JB.CCTR = ""
NEW.PO.GROS.PRICE = "" ; NEW.PO.JB.ONORD = ""
NEW.PO.DISCOUNT = "" ; NEW.PO.JB.RECEVED = ""
NEW.PO.UNIT.FLG = "" ; NEW.PO.JB.UNITS = ""
NEW.PO.TOT.ONORD = ""
NEW.PO.TOT.CANCEL = ""
NEW.PO.QTY.OPEN = ""
NEW.PO.TOT.RECEVED = ""
NEW.PO.NO.OF.ROLLS = ""
NEW.PO.ITEM.COMM = ""
NEW.PO.JOB.NO = ""
*T101209 v
*DEL.LN = ""
ORIG.ITEMCNT = DCOUNT(TEMP.PO.PROD.NUM,VM)
ORIG.JOBCNT = DCOUNT(TEMP.PO.JOB.NO,VM)
IF READ.FLAG THEN
	 IF DELITEMALLOC THEN
		  TEMP.PO.PROD.NUM = ""
		  TEMP.PO.WHSE = ""
		  TEMP.PO.GROS.PRICE = ""
		  TEMP.PO.DISCOUNT = ""
		  TEMP.PO.TOT.ONORD = ""
		  TEMP.PO.NO.OF.ROLLS = ""
		  TEMP.PO.QTY.OPEN = ""
		  TEMP.PO.TOT.RECEVED = ""
		  *TEMP.PO.PREV.RECEVED = ""
		  TEMP.PO.TOT.CANCEL = ""
		  TEMP.PO.PROD.TYPE = ""
		  TEMP.PO.UNIT.FLG = ""
		  TEMP.PO.DEL.DATE = ""
		  TEMP.PO.ITEM.COMM = ""
		  TEMP.PO.JOB.NO = ""
		  TEMP.PO.JB.UNITS = ""
		  TEMP.PO.JB.ONORD = ""
		  TEMP.PO.JB.RECEVED = ""
		  TEMP.PO.JB.OPEN = ""
		  TEMP.PO.JB.DEPT = ""
                  TEMP.PO.JB.CCTR = ""
       END
	IF DELJOBALLOC THEN
		  TEMP.PO.JOB.NO = ""
		  TEMP.PO.JB.UNITS = ""
		  TEMP.PO.JB.ONORD = ""
		  TEMP.PO.JB.RECEVED = ""
		  TEMP.PO.JB.OPEN = ""
		  TEMP.PO.JB.DEPT = ""
                  TEMP.PO.JB.CCTR = ""
	END
*T101209 ^
*********---------------------------------------------------------------------------------------------------------------------
	FOR LN = 1 TO DCOUNT(ITEMALLOCDATA,AM)
	*T101209 v COMMENTED BY YAKUB
*	 J = 0;K =0;L =0;M =0
	   *LOCATE ITEMALLOCDATA<LN,1> IN TEMP.PO.PROD.NUM<1>,1 SETTING J ELSE J = 0
*	   LOCATE ITEMALLOCDATA<LN,1> IN TEMP.PO.PROD.NUM<1>,1 SETTING J THEN
*	      LOCATE ITEMALLOCDATA<LN,2> IN TEMP.PO.WHSE<1>,1 SETTING K THEN
*		LOCATE ICONV(ITEMALLOCDATA<LN,3>,"D2/") IN TEMP.PO.DEL.DATE<1>,1 SETTING L THEN
*		  LOCATE ICONV(ITEMALLOCDATA<LN,4>,"MD4") IN TEMP.PO.GROS.PRICE<1>,1 SETTING M THEN
*	      
*		  END            
*		END      
*	      END
	  * ELSE J = 0
*	   END
*           J = M
*********************
* TEM.ITEMALLOCDATA<LN,3>=ICONV(ITEMALLOCDATA<LN,3>,"D2/")
* TEM.ITEMALLOCDATA<LN,4>=CHANGE(ITEMALLOCDATA<LN,4>,".","")
* TEM.ITEMALLOCDATA<LN,5>=CHANGE(ITEMALLOCDATA<LN,5>,".","")
* TEM.ITEMALLOCDATA<LN,7>=CHANGE(ITEMALLOCDATA<LN,7>,".","")
* TEM.ITEMALLOCDATA<LN,8>=CHANGE(ITEMALLOCDATA<LN,8>,".","")
* TEM.ITEMALLOCDATA<LN,9>=CHANGE(ITEMALLOCDATA<LN,9>,".","")
*            IF ITEMALLOCDATA<LN,1> = TEMP.PO.PROD.NUM<1,LN> AND ITEMALLOCDATA<LN,2> = TEMP.PO.WHSE<1,LN> AND TEM.ITEMALLOCDATA<LN,3> = TEMP.PO.DEL.DATE<1,LN> AND ICONV(ITEMALLOCDATA<LN,4>,"MD4") = TEMP.PO.GROS.PRICE<1,LN> AND TEM.ITEMALLOCDATA<LN,5> = TEMP.PO.DISCOUNT<1,LN> AND ITEMALLOCDATA<LN,6> = TEMP.PO.UNIT.FLG<1,LN> AND TEM.ITEMALLOCDATA<LN,7> = TEMP.PO.TOT.ONORD<1,LN> AND TEM.ITEMALLOCDATA<LN,8> = TEMP.PO.TOT.CANCEL<1,LN> AND TEM.ITEMALLOCDATA<LN,9> =  TEMP.PO.QTY.OPEN<1,LN> AND ITEMALLOCDATA<LN,10> = TEMP.PO.NO.OF.ROLLS<1,LN> THEN
*                  J = LN
*	    END
*	*T101209 ^
*	    IF J # 0 THEN
*		NEW.PO.PROD.NUM<1,LN> = TEMP.PO.PROD.NUM<1,J>
*		*TEMP.PO.PROD.NUM<1,J> = "";*T101209
*		NEW.PO.WHSE<1,LN> = TEMP.PO.WHSE<1,J>
*		NEW.PO.DEL.DATE<1,LN> = TEMP.PO.DEL.DATE<1,J>
*		NEW.PO.GROS.PRICE<1,LN> = TEMP.PO.GROS.PRICE<1,J>
*		NEW.PO.DISCOUNT<1,LN> = TEMP.PO.DISCOUNT<1,J>
*		NEW.PO.UNIT.FLG<1,LN> = TEMP.PO.UNIT.FLG<1,J>
*		NEW.PO.TOT.ONORD<1,LN> = TEMP.PO.TOT.ONORD<1,J>
*		NEW.PO.TOT.CANCEL<1,LN> = TEMP.PO.TOT.CANCEL<1,J>
*		NEW.PO.QTY.OPEN<1,LN> = TEMP.PO.QTY.OPEN<1,J>
*		NEW.PO.TOT.RECEVED<1,LN> = TEMP.PO.TOT.RECEVED<1,J>
*		NEW.PO.NO.OF.ROLLS<1,LN> = TEMP.PO.NO.OF.ROLLS<1,J>
*		NEW.PO.ITEM.COMM<1,LN> = TEMP.PO.ITEM.COMM<1,J>
*	    END
	    *Job deletion Functionality v
*T101209 v COMMENTED BY YAKUB
*	    FOR LNJ = 1 TO DCOUNT(JOBALLOCDATA<LN>,VM)
*		JOB.FOUND = 1
*		*LOCATE JOBALLOCDATA<LN,LNJ,1> IN TEMP.PO.JOB.NO<1,LN>,1 SETTING K ELSE K = 0
*		FINDSTR JOBALLOCDATA<LN,LNJ,1> IN TEMP.PO.JOB.NO<1> SETTING F,V,S ELSE JOB.FOUND = 0
*		IF JOB.FOUND # 0 THEN
*		   NEW.PO.JOB.NO<1,LN,LNJ> = TEMP.PO.JOB.NO<F,V,S>
*		   NEW.PO.JB.DEPT<1,LN,LNJ> = TEMP.PO.JB.DEPT<F,V,S>
*		   NEW.PO.JB.CCTR<1,LN,LNJ> = TEMP.PO.JB.CCTR<F,V,S>
*		   NEW.PO.JB.ONORD<1,LN,LNJ> = TEMP.PO.JB.ONORD<F,V,S>
*		   NEW.PO.JB.RECEVED<1,LN,LNJ> = TEMP.PO.JB.RECEVED<F,V,S>
*		  *NEW.PO.JB.UNITS<1,LN,LNJ> = TEMP.PO.JB.UNITS<F,V,S>
*		END
*		LOCATE JOBALLOCDATA<LN,LNJ,4> IN TEMP.PO.JB.UNITS<1>,1 SETTING S ELSE S = 0
*		IF S # 0 THEN
*		   NEW.PO.JB.UNITS<1,LN> = TEMP.PO.JB.UNITS<1,S>
*		   TEMP.PO.JB.UNITS<1,S> = ""
*		END ELSE
*		   NEW.PO.JB.UNITS<1,LN> = JOBALLOCDATA<LN,LNJ,4>
*		END
*	    NEXT LNJ
*T101209 ^
	    *Job deletion Functionality ^
	NEXT LN
END;*T101209
*CLEAR ALL THE EXISTING TEMP.DATA
*T101209 v
*************************
* IF READ.FLAG AND DCOUNT(NEW.PO.PROD.NUM,VM) > 0 THEN
**T101209 ^
*	TEMP.PO.PROD.NUM = ""; TEMP.PO.WHSE = ""
*	TEMP.PO.DEL.DATE = ""; TEMP.PO.GROS.PRICE = ""
*	TEMP.PO.DISCOUNT = ""; TEMP.PO.UNIT.FLG = ""
*	TEMP.PO.TOT.ONORD = ""; TEMP.PO.TOT.CANCEL = ""
*	TEMP.PO.QTY.OPEN = ""; TEMP.PO.TOT.RECEVED = ""
*	TEMP.PO.NO.OF.ROLLS = ""; TEMP.PO.ITEM.COMM = ""
**T101209 v
**	TEMP.PO.JOB.NO = "" ; TEMP.PO.JB.DEPT = ""
**	TEMP.PO.JB.CCTR = "" ; TEMP.PO.JB.ONORD = ""
**	TEMP.PO.JB.RECEVED = "" ; TEMP.PO.JB.UNITS = ""
**T101209 ^
**CLEAR ALL THE DATA FROM DATA FILE TO REFORM IT
*	PO.PROD.NUM = "";  PO.WHSE = ""
*	PO.DEL.DATE = "";  PO.GROS.PRICE = ""
*	PO.DISCOUNT = "";  PO.UNIT.FLG = ""
*	PO.TOT.ONORD = ""; PO.TOT.CANCEL = ""
*	PO.QTY.OPEN = "";  PO.TOT.RECEVED = ""
*	PO.NO.OF.ROLLS = ""; PO.ITEM.COMM = ""
**T101209 v
**	PO.JOB.NO = "" ; PO.JB.DEPT = ""
**	PO.JB.CCTR = "" ; PO.JB.ONORD = ""
**	PO.JB.RECEVED = "" ; PO.JB.UNITS = ""
**	PO.PROD.TYPE = "" ; PO.JB.OPEN = ""
**T101209 ^
**
*	TEMP.PO.PROD.NUM = TRIMS(NEW.PO.PROD.NUM) 
*	TEMP.PO.WHSE = TRIMS(NEW.PO.WHSE)
*	TEMP.PO.DEL.DATE = TRIMS(NEW.PO.DEL.DATE)
*	TEMP.PO.GROS.PRICE = TRIMS(NEW.PO.GROS.PRICE)
*	TEMP.PO.DISCOUNT = TRIMS(NEW.PO.DISCOUNT)
*	TEMP.PO.UNIT.FLG = TRIMS(NEW.PO.UNIT.FLG)
*	TEMP.PO.TOT.ONORD = TRIMS(NEW.PO.TOT.ONORD)
*	TEMP.PO.TOT.CANCEL = TRIMS(NEW.PO.TOT.CANCEL)
*	TEMP.PO.QTY.OPEN = TRIMS(NEW.PO.QTY.OPEN)
*	TEMP.PO.TOT.RECEVED = TRIMS(NEW.PO.TOT.RECEVED)
*	TEMP.PO.NO.OF.ROLLS = TRIMS(NEW.PO.NO.OF.ROLLS)
*	TEMP.PO.ITEM.COMM = TRIMS(NEW.PO.ITEM.COMM)
**
* END;*T101209
 *********************************
*T101209 v
**********
*     IF DCOUNT(NEW.PO.JOB.NO,VM) > 0 THEN
*	TEMP.PO.JOB.NO = "" ; TEMP.PO.JB.DEPT = ""
*	TEMP.PO.JB.CCTR = "" ; TEMP.PO.JB.ONORD = ""
*	TEMP.PO.JB.RECEVED = "" ; TEMP.PO.JB.UNITS = ""
**
*	PO.JOB.NO = "" ; PO.JB.DEPT = ""
*	PO.JB.CCTR = "" ; PO.JB.ONORD = ""
*	PO.JB.RECEVED = "" ; PO.JB.UNITS = ""
*	PO.PROD.TYPE = "" ; PO.JB.OPEN = ""
**T101209 ^
**
*	TEMP.PO.JOB.NO = TRIMS(NEW.PO.JOB.NO) ; TEMP.PO.JB.DEPT = TRIMS(NEW.PO.JB.DEPT)
*	TEMP.PO.JB.CCTR = TRIMS(NEW.PO.JB.CCTR) ; TEMP.PO.JB.ONORD = TRIMS(NEW.PO.JB.ONORD)
*	TEMP.PO.JB.RECEVED = TRIMS(NEW.PO.JB.RECEVED) ; TEMP.PO.JB.UNITS = TRIMS(NEW.PO.JB.UNITS)
*     END;*T101209
**********
27000*
*Deletion of a Product Line ^
FOR LN = 1 TO DCOUNT(ITEMALLOCDATA,AM)
   INPUT_UOM = ITEMALLOCDATA<LN,6>
   PO.PROD.NUM<1,LN> = ITEMALLOCDATA<LN,1>
   PROD.XML.STR = "" ; *REMOVE PREVIOUS PRODUCTS DATA
   TEMP.JOB.XML.STR = ""
   JOBS.ADDED = 0
	**** ENTER PRODUCT
	MATREAD INV.REC FROM INVENTORY, CONO:ITEMALLOCDATA<LN,1> ELSE
	  ERRMSG = "INVENTORY (":ITEMALLOCDATA<LN,1>:") IS NOT ON FILE."
	  GOTO 93000
	END
	IF INV.M.LINE = 'FNGD' THEN
	  IF CO.OPS = 'Y' THEN
	    ERRMSG = "FINISHED GOODS PRODUCTS ARE INVALID FOR REGULAR PO'S"
	    GOTO 93000
	  END
	END
	*
	MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
	  ERRMSG = "CATEGORY (":INV.LINE:") IS NOT ON FILE."
	  GOTO 93000
	END
        IF CATG.TRK.LVL='S' AND CATG.BARCODE='Y' THEN
           BCFLAG=1
        END
	 IF INV.PAP.TYPE = "REGULAR" OR INV.PAP.TYPE = "REG" OR INV.PAP.TYPE = "" THEN
	    PO.PROD.TYPE<1,LN> = "REG"
	  END ELSE
	    PO.PROD.TYPE<1,LN> = INV.PAP.TYPE
	  END
	 *PO.JB.UNITS<1,LN> = INV.UNIT<1,2>
	  IF INV.UNIT<1,2> = INV.UNIT<1,1> THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    GOTO 1070
	  END
	  IF PO.PROD.TYPE<1,LN> = "REG" THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	  END ELSE
	    IF INPUT_UOM # "" THEN
	       PO.UNIT.FLG<1,LN> = INPUT_UOM
	    END ELSE
	       PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    END
	  END
	1070
******
*T060209 v
 TEMP.ITEMALLOCDATA<LN,2>=ITEMALLOCDATA<LN,2>
 TEMP.ITEMALLOCDATA<LN,3>=ICONV(ITEMALLOCDATA<LN,3>,"D2/")
 TEMP.ITEMALLOCDATA<LN,4>=CHANGE(ITEMALLOCDATA<LN,4>,".","")
 TEMP.ITEMALLOCDATA<LN,5>=CHANGE(ITEMALLOCDATA<LN,5>,".","")
 TEMP.ITEMALLOCDATA<LN,7>=CHANGE(ITEMALLOCDATA<LN,7>,".","")
 TEMP.ITEMALLOCDATA<LN,8>=CHANGE(ITEMALLOCDATA<LN,8>,".","")
 TEMP.ITEMALLOCDATA<LN,9>=CHANGE(ITEMALLOCDATA<LN,9>,".","")
 PROD.ADDED = 0
*T060209 ^
  IF ITEMALLOCDATA<LN,1> # TEMP.PO.PROD.NUM<1,LN> THEN
     PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
     PROD.ADDED = 1
  END
  IF TEMP.ITEMALLOCDATA<LN,2> # TEMP.PO.WHSE<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<Warehouse>":ITEMALLOCDATA<LN,2>:"</Warehouse>"
  END
  IF TEMP.ITEMALLOCDATA<LN,3> # TEMP.PO.DEL.DATE<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<DeliverDate>":ITEMALLOCDATA<LN,3>:"</DeliverDate>"
  END
  IF TEMP.ITEMALLOCDATA<LN,4> # TEMP.PO.GROS.PRICE<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<UnitPrice>":ITEMALLOCDATA<LN,4>:"</UnitPrice>"
  END
  IF TEMP.ITEMALLOCDATA<LN,5> # TEMP.PO.DISCOUNT<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<Discount>":ITEMALLOCDATA<LN,5>:"</Discount>"
  END
  IF ITEMALLOCDATA<LN,6> # TEMP.PO.UNIT.FLG<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<UnitFlag>":PO.UNIT.FLG<1,LN>:"</UnitFlag>"
  END
  GOSUB 4000
  VALUE = TEMP.ITEMALLOCDATA<LN,7>
  GOSUB 45000 
  TEMP.ITEMALLOCDATA<LN,7> = VALUE
  IF TEMP.ITEMALLOCDATA<LN,7> # TEMP.PO.TOT.ONORD<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<OrderedQuantity>":ITEMALLOCDATA<LN,7>:"</OrderedQuantity>"
  END
  VALUE = TEMP.ITEMALLOCDATA<LN,8>
  GOSUB 46000
  TEMP.ITEMALLOCDATA<LN,8> = VALUE
  IF TEMP.ITEMALLOCDATA<LN,8> # TEMP.PO.TOT.CANCEL<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<CancelledQuantity>":ITEMALLOCDATA<LN,8>:"</CancelledQuantity>"
  END
  VALUE = TEMP.ITEMALLOCDATA<LN,9>
  GOSUB 47000
  TEMP.ITEMALLOCDATA<LN,9> = VALUE
  TEMP.RECEVED<1,LN> = TEMP.ITEMALLOCDATA<LN,7> - (VALUE + TEMP.ITEMALLOCDATA<LN,8>)
  IF TEMP.ITEMALLOCDATA<LN,9> # TEMP.PO.QTY.OPEN<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<OpenedQuantity>":ITEMALLOCDATA<LN,9>:"</OpenedQuantity>"
  END
  IF TEMP.RECEVED<1,LN> # TEMP.PO.TOT.RECEVED<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<ReceivedQuantity>":PO.TOT.RECEVED<1,LN>:"</ReceivedQuantity>"
  END
  *STRXML:="<PreviousReceivedQuantity>":OCONV(PO.PREV.RECEVED<1,LN>,'MD2'):"</PreviousReceivedQuantity>"
  IF ITEMALLOCDATA<LN,10> # TEMP.PO.NO.OF.ROLLS<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<Rolls>":ITEMALLOCDATA<LN,10>:"</Rolls>"
  END
  TEMP.PO.ITEM.COMM<1,LN> = CHANGE(TEMP.PO.ITEM.COMM<1,LN>,SVM,"")
  IF ITEMALLOCDATA<LN,11> # TEMP.PO.ITEM.COMM<1,LN> THEN
     IF PROD.ADDED = 0 THEN
        PROD.XML.STR:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
	PROD.ADDED = 1
     END
     PROD.XML.STR:="<ProductComments>":ITEMALLOCDATA<LN,11>:"</ProductComments>"
  END
ITEMALLOCDATA<LN,4>=CHANGE(ITEMALLOCDATA<LN,4>,".","")
ITEMALLOCDATA<LN,5>=CHANGE(ITEMALLOCDATA<LN,5>,".","")
ITEMALLOCDATA<LN,7>=CHANGE(ITEMALLOCDATA<LN,7>,".","")
ITEMALLOCDATA<LN,8>=CHANGE(ITEMALLOCDATA<LN,8>,".","")
ITEMALLOCDATA<LN,9>=CHANGE(ITEMALLOCDATA<LN,9>,".","")
********
	PO.WHSE<1,LN> = ITEMALLOCDATA<LN,2>
	PO.DEL.DATE<1,LN> = ICONV(ITEMALLOCDATA<LN,3>,"D2/")
	PO.GROS.PRICE<1,LN> = ITEMALLOCDATA<LN,4>
	PO.DISCOUNT<1,LN> = ITEMALLOCDATA<LN,5>
	*PO.UNIT.FLG<1,LN> = VALUE
********
	GOSUB 4000
	**** INPUT QTY ORDERED
	VALUE = ITEMALLOCDATA<LN,7>
	GOSUB 45000 
	PO.TOT.ONORD<1,LN> = VALUE
	*
	**** INPUT QTY CANCEL
	*
	  VALUE = ITEMALLOCDATA<LN,8>
	  GOSUB 46000
	  PO.TOT.CANCEL<1,LN> = VALUE
	  *
	  **** PRINT OPEN QTYS
	  *
	    VALUE = ITEMALLOCDATA<LN,9>
	    GOSUB 47000
	    PO.PREV.RECEVED<1,LN> = PO.TOT.ONORD<1,LN> - (VALUE + PO.TOT.CANCEL<1,LN>)
	    PO.TOT.RECEVED<1,LN> = PO.PREV.RECEVED<1,LN>
	    PO.QTY.OPEN<1,LN> = VALUE
	*
	*ROLLS/SHEETS/LABLES
	PO.NO.OF.ROLLS<1,LN> = ITEMALLOCDATA<LN,10>
*T060209 v
25000*
	*PO.ITEM.COMM<1,LN> = ITEMALLOCDATA<LN,11>
	REM.COMMENTS = ""
	IF.VISITED = 0
	IF ITEMALLOCDATA<LN,11> # "" THEN
	  LOOP
	   IF PO.ITEM.COMM<1,LN> = "" THEN
	      PO.ITEM.COMM<1,LN> = ITEMALLOCDATA<LN,11>[1,64]
	      REM.COMMENTS = ITEMALLOCDATA<LN,11>[65,LEN(ITEMALLOCDATA<LN,11>)]	
	      IF.VISITED = 1
	   END ELSE
	      IF IF.VISITED = 0 THEN
		 PO.ITEM.COMM<1,LN> = ITEMALLOCDATA<LN,11>[1,64]
	         REM.COMMENTS = ITEMALLOCDATA<LN,11>[65,LEN(ITEMALLOCDATA<LN,11>)]	
		 IF.VISITED = 1
	      END ELSE
	         PO.ITEM.COMM<1,LN> := SVM : REM.COMMENTS[1,64]
	         REM.COMMENTS = REM.COMMENTS[65,LEN(REM.COMMENTS)]	
	      END
	   END
	   IF REM.COMMENTS = "" OR LEN(REM.COMMENTS) = 0 THEN GOTO 1001
 	  REPEAT
	END ELSE
	   PO.ITEM.COMM<1,LN> = ""
	END
1001*
*T060209 ^
IF JOBALLOCDATA<LN> = "" THEN GOTO 1234
****************
*JOB ALLOCATIONS
****************
GOSUB 5000
*T101209 v
    *PO.JB.UNITS<1,LN> = TEMP.PO.JB.UNITS<1,LN>
*T101209 ^
    FOR LNJ = 1 TO DCOUNT(JOBALLOCDATA<LN>,VM)
*****
*T060209 V
      JOB.LINE.CHANGED = 0 ; JOB.ADDED = 0
      JOB.XML.STR = "" ;*REMOVE THE PREVIOUS JOBS DATA
      IF JOBALLOCDATA<LN,LNJ,1> # TEMP.PO.JOB.NO<1,LN,LNJ> THEN
	JOB.XML.STR:="<JobNo>":JOBALLOCDATA<LN,LNJ,1>:"</JobNo>"
	JOB.ADDED = 1
      END
      IF JOBALLOCDATA<LN,LNJ,2> # TEMP.PO.JB.DEPT<1,LN,LNJ> THEN
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":JOBALLOCDATA<LN,LNJ,1>:"</JobNo>"
	   JOB.ADDED = 1
	END
	JOB.XML.STR:="<JobDepartment>":JOBALLOCDATA<LN,LNJ,2>:"</JobDepartment>"
      END
      IF JOBALLOCDATA<LN,LNJ,3> # TEMP.PO.JB.CCTR<1,LN,LNJ> THEN
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":JOBALLOCDATA<LN,LNJ,1>:"</JobNo>"
	   JOB.ADDED = 1
	END
	JOB.XML.STR:="<JobCostCenter>":JOBALLOCDATA<LN,LNJ,3>:"</JobCostCenter>"
      END
      PO.JOB.NO<1,LN,LNJ> =   JOBALLOCDATA<LN,LNJ,1>
      PO.JB.DEPT<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,2>
      PO.JB.CCTR<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,3>
      *PO.JB.UNITS<1,LN> = INV.UNIT<1,2>
      *PO.JB.UNITS<1,LN> = JOBALLOCDATA<LN,LNJ,4>
      TEMP.JOBALLOCDATA<LN,LNJ,5>=CHANGE(JOBALLOCDATA<LN,LNJ,5>,".","")
      TEMP.JOBALLOCDATA<LN,LNJ,6>=CHANGE(JOBALLOCDATA<LN,LNJ,6>,".","")
     JOB.ORD = "" ; JOB.RECEIVED = ""
     VALUE = TEMP.JOBALLOCDATA<LN,LNJ,5>
     IF ICR.CNV = "MD0" THEN
        VALUE = INT(((VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
     END ELSE
        VALUE = VALUE * 10
     END
     TEMP.JOBALLOCDATA<LN,LNJ,5> = VALUE
     IF TEMP.JOBALLOCDATA<LN,LNJ,5> # TEMP.PO.JB.ONORD<1,LN,LNJ> THEN 
        JOB.ORD = 1
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":PO.JOB.NO<1,LN,LNJ>:"</JobNo>"
	   JOB.ADDED = 1	
	END
	JOB.XML.STR:="<JobOrderedQuantity>":JOBALLOCDATA<LN,LNJ,5>:"</JobOrderedQuantity>"
     END
     IF TEMP.JOBALLOCDATA<LN,LNJ,6> # TEMP.PO.JB.RECEVED<1,LN,LNJ> THEN
        JOB.RECEIVED = 1
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":PO.JOB.NO<1,LN,LNJ>:"</JobNo>"
	   JOB.ADDED = 1
	END
	JOB.XML.STR:="<JobReceivedQuantity>":JOBALLOCDATA<LN,LNJ,6>:"</JobReceivedQuantity>"
     END
      PO.JB.UNITS<1,LN> = JOBALLOCDATA<LN,LNJ,4>;*T101209
*     IF TEMP.PO.JB.UNITS<1,LN> # INV.UNIT<1,2> THEN
     IF TEMP.PO.JB.UNITS<1,LN> # JOBALLOCDATA<LN,LNJ,4> THEN
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":JOBALLOCDATA<LN,LNJ,1>:"</JobNo>"
	   JOB.ADDED = 1
	END
	*JOB.XML.STR:="<JobUnitFlag>":INV.UNIT<1,2>:"</JobUnitFlag>"
	JOB.XML.STR:="<JobUnitFlag>":JOBALLOCDATA<LN,LNJ,4>:"</JobUnitFlag>"
     END 
*T060209 ^
     JOBALLOCDATA<LN,LNJ,5>=CHANGE(JOBALLOCDATA<LN,LNJ,5>,".","")
     JOBALLOCDATA<LN,LNJ,6>=CHANGE(JOBALLOCDATA<LN,LNJ,6>,".","")
*T060209 v
     *STRXML:="<JobOpenedQuantity>":OCONV(JOBALLOCDATA<LN,LNJ,5> - JOBALLOCDATA<LN,LNJ,6>,ICR.CNV):"</JobOpenedQuantity>"
     IF JOB.ORD # "" OR JOB.RECEIVED # "" THEN
	IF JOB.ADDED # 1 THEN
  	   JOB.XML.STR:="<JobNo>":JOBALLOCDATA<LN,LNJ,1>:"</JobNo>"
	   JOB.ADDED = 1
	END
        JOB.XML.STR:="<JobOpenedQuantity>":OCONV(JOBALLOCDATA<LN,LNJ,5> - JOBALLOCDATA<LN,LNJ,6>,ICR.CNV):"</JobOpenedQuantity>"
     END
*T060209 ^
*****
	VALUE = JOBALLOCDATA<LN,LNJ,5>
	IF ICR.CNV = "MD0" THEN
	   VALUE = INT(((VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
	END ELSE
	   VALUE = VALUE * 10
	END
	DIFF.QTY = ABS(VALUE-PO.JB.RECEVED<1,LN,LNJ>)
	IF (INV.UNIT<1,3> = 'MSI' AND DIFF.QTY <= 50) OR DIFF.QTY <= 9 THEN
	   VALUE = PO.JB.RECEVED<1,LN,LNJ>
	END
        PO.JB.ONORD<1,LN,LNJ> = VALUE
        PO.JB.RECEVED<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,6>
        PO.JB.OPEN<1,LN,LNJ> = PO.JB.ONORD<1,LN,LNJ> - PO.JB.RECEVED<1,LN,LNJ>
	IF JOB.XML.STR # "" THEN
	   JOB.XML.STR = "<Job>": JOB.XML.STR :"</Job>"
	   TEMP.JOB.XML.STR := JOB.XML.STR
	   JOBS.ADDED = 1
	END
    NEXT LNJ
1234*
    IF TEMP.JOB.XML.STR # "" AND JOBS.ADDED = 1 THEN
	*TEMP.JOB.XML.STR = "<Jobs>": TEMP.JOB.XML.STR :"</Jobs>"
	TEMP.JOB.XML.STR = "<JobAllocations>": TEMP.JOB.XML.STR :"</JobAllocations>"
    END
     IF PROD.XML.STR # "" THEN
       *T101209 v
         *TEMP.PROD.XML.STR1 := "<Product>": PROD.XML.STR:TEMP.JOB.XML.STR :"</Product>"
         TEMP.PROD.XML.STR1 := "<Product Line = '":LN:"'>": PROD.XML.STR:TEMP.JOB.XML.STR :"</Product>"
       *T101209 ^
     END ELSE
        IF JOBS.ADDED = 1 THEN
	*T101209 v
	   *TEMP.PROD.XML.STR1 := "<Product><ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>":TEMP.JOB.XML.STR :"</Product>"
           TEMP.PROD.XML.STR1 := "<Product Line = '":LN:"'><ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>":TEMP.JOB.XML.STR :"</Product>"
	*T101209 ^
	END
     END
NEXT LN
IF TEMP.PROD.XML.STR1 # "" THEN
   STRXML := "<Products>": TEMP.PROD.XML.STR1 :"</Products>"    
END
*T101209 v
*STRXML:="<BarCodeFlag>":BCFLAG:"</BarCodeFlag>"
*IF POR.MODE # 1 THEN STRXML:="<BarCodeFlag>":BCFLAG:"</BarCodeFlag>"
IF POR.MODE = 2 OR MENU.FLAG = "P" THEN STRXML:="<BarCodeFlag>":BCFLAG:"</BarCodeFlag>"
*T101209 ^
GOSUB 2000
*STRXML:="<Result> UPDATED SUCCESSFULLY</Result>"
IF MENU.FLAG = "P" THEN
   STRXML:="</RPO>"
END ELSE
*T113009 v
   *STRXML:="</Requisition>"
   *T120409 v
    *STRXML:="</RPOR>"
    IF POR.MODE = 2 THEN
       STRXML:="</RPO>"
    END ELSE
       STRXML:="</RPOR>"
    END
   *T120409 ^
*T113009 ^
END
STRXML:="</Payload>"
WRITE "MENU.FLAG PRIDGET  ":MENU.FLAG:"~~~  ":STRXML ON CONTROL,'01PGET'
RETURN
*************
*QTY ORDER CONVERSION
45000*
  IF DIFF.UM<LN> = "Y" THEN
    FROM.UOM = PO.UNIT.FLG<1,LN>
    TO.UOM = INV.UNIT<1,2>
    STK.QTY = PRIDGET_UOM_CONVERSION_CALC(VALUE,FROM.UOM,TO.UOM,INV.M.WT,INV.PAP.WIDTH,'','')
    VALUE = PRIDGET_UOM_CONVERSION_CALC(STK.QTY,TO.UOM,FROM.UOM,INV.M.WT,INV.PAP.WIDTH,'','')
    IF ICR.CNV<LN,2> = "MD0" THEN
      VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
    END
    IF ICR.CNV<LN,1> = "MD0" THEN
      IF ICR.CNV<LN,2> # "MD0" THEN
	VALUE = VALUE * 10
      END
    END ELSE
      VALUE = VALUE * ICR.MT1<LN,1> * 10
    END
  END ELSE
    IF ICR.CNV<LN,1> = "MD0" THEN
      VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
    END ELSE
      VALUE = VALUE * 10
    END
  END
RETURN
*QTY CANCEL CONVERSION
46000*
*
  IF DIFF.UM<LN> = "Y" THEN
    IF ICR.CNV<LN,2> = "MD0" THEN
      VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
    END
    IF ICR.CNV<LN,1> = "MD0" THEN
      IF ICR.CNV<LN,2> # "MD0" THEN
	VALUE = VALUE * 10
      END
      IF (INV.UNIT<1,2> = 'PC' OR INV.UNIT<1,2> = 'FT') AND INV.UNIT<1,3> = 'MSI' THEN
	TEST.OPEN = PO.TOT.ONORD<1,LN> - PO.TOT.RECEVED<1,LN>
	IF ABS(TEST.OPEN-VALUE) < 50 THEN VALUE = TEST.OPEN
      END
    END ELSE
      VALUE = VALUE * ICR.MT1<LN,1> * 10
    END
  END ELSE
    IF ICR.CNV<LN,1> = "MD0" THEN
      VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
    END ELSE
      VALUE = VALUE * 10
    END
  END
RETURN
*QTY OPEN CONVERSION
*
47000*
*
    IF DIFF.UM<LN> = "Y" THEN
      IF ICR.CNV<LN,2> = "MD0" THEN
	VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
      END
      IF ICR.CNV<LN,1> = "MD0" THEN
	IF ICR.CNV<LN,2> # "MD0" THEN
	  VALUE = VALUE * 10
	END
      END ELSE
	VALUE = VALUE * ICR.MT1<LN,1> * 10
      END
    END ELSE
      IF ICR.CNV<LN,1> = "MD0" THEN
	VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
      END ELSE
	VALUE = VALUE * 10
      END
    END
RETURN
**** GET CONVERSIONS
4000*
  BEGIN CASE
    CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
  RETURN
******** GET JOB ALLOC CONVERSIONS
5000*
   BEGIN CASE
      CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
         ICR.CNV = "MD0"; ICR.DV2 = 1
         ICR.DV1 = INV.M.WT; ICR.MT1 = 1
      CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
         ICR.CNV = "MD0"; ICR.DV2 = 1
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10
      CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
         ICR.CNV = "MD0"; ICR.DV2 = 12
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100
      CASE 1
         ICR.CNV = "MD2"; ICR.DV2 = 1
         ICR.DV1 = 10; ICR.MT1 = 1
   END CASE
RETURN
*******
2000*
NEWREC = 0
IF MENU.FLAG = "R" AND PO.CODE = "N" AND POR.MODE = 1 THEN 
  NEWREC = 1
END ELSE
   IF MENU.FLAG = "P" AND PO.CODE = "N" THEN
    NEWREC = 1
   END
END
*IF PO.CODE = "N" AND POR.MODE = 1 THEN
  IF NEWREC THEN
  FND = 1
  READU PO.SEQ FROM CONTROL, CONO:"POCODE" ELSE PO.SEQ = 10000
  LOOP
  WHILE FND DO
     PO.CODE = PO.SEQ
     PO.SEQ = PO.CODE + 1
*     IF CO.PO.REQ.FLAG = "Y" THEN 
	READU REC FROM REG.REQ, CONO:PO.CODE ELSE
	   READU REC FROM PO, CONO:PO.CODE ELSE 
	      READU REC FROM PO, CONO:PO.CODE ELSE FND = 0 
	   END
	END
*     END ELSE 
*	READU REC FROM PO, CONO:PO.CODE ELSE 
*	   READU REC FROM PO, CONO:PO.CODE ELSE FND = 0 
*	END
*     END
     REC = ""
     IF FND THEN 
	RELEASE PO, CONO:PO.CODE 
*	IF CO.PO.REQ.FLAG = "Y" THEN
	   RELEASE REG.REQ, CONO:PO.CODE 
*	END
     END 
  REPEAT
  WRITE PO.SEQ ON CONTROL, CONO:"POCODE"
 * STRXML:="<NewRequisitionNo>":PO.CODE:"</NewRequisitionNo>"
*  IF MENU.FLAG = "R" THEN
*     IF REQ THEN
*	ERRMSG = "Note new requisition number"
*	GOSUB 91000 ; * T27552
*     END
*  END ELSE
*     ERRMSG = "Note new PO number" 
*     GOSUB 91000 ; * T27552
*  END 
*END ELSE
*  IF OPTION = "F" AND MENU.FLAG = "R" THEN
*     IF APP.PO.LEVEL # "1" THEN
*	ERRMSG = "Requisition forwarded to ":PO.APPROVER
*	GOSUB 91000
*     END
*  END
END
*IF MENU.FLAG = "R" THEN
*  STATUS.CNT = DCOUNT(PO.STATUS,VM) 
*  IF PO.STATUS<1,STATUS.CNT> = "On-Hold" THEN 
*     ERRMSG = "Requsition has been placed on On-Hold status."
*     GOSUB 91000 
*  END 
*END
PD.CNT = 0;LAST.DATE = ""
PD.CNT = COUNT(PO.DEL.DATE,VM) + (PO.DEL.DATE # "")
FOR PD = 1 TO PD.CNT
  IF PO.DEL.DATE<1,PD> > LAST.DATE THEN LAST.DATE = PO.DEL.DATE<1,PD>
NEXT PD
PO.DUE.DATE = LAST.DATE
IF PO.DUE.DATE # TEMP.PO.DUE.DATE THEN
   STRXML:="<DueDate>":OCONV(PO.DUE.DATE,'D2/'):"</DueDate>"
END
IF MENU.FLAG = "R" THEN
   IF POR.MODE = 2 THEN
	CMD = 'DELETE REG.REQ ':'"':CONO:PO.CODE:'"'
	UDTEXECUTE CMD CAPTURING MSG
	*ERRMSG = "New PO number " :PO.CODE:" has been created." 
	PO.APP.LEVEL = 1
        UPDATE = "PO"
   END ELSE
        UPDATE = "REQ"
   END
END ELSE
    UPDATE = "PO"
END
*SAVE PO.TOT.AMOUNT
CALL PRIDGET_CALC_REG_PO_TOT(CONO,"1",ZZZ,TOT.ORD.AMT)
*CALL PO.UPDATE(PO.CODE,CONO,MAT PROD.DEL)
CALL PRIDGET_PO_UPDATE(PO.CODE,CONO,MAT PROD.DEL,UPDATE)
*IF OPTION = "F" AND MENU.FLAG = "R" THEN
*  GOSUB SEND.MAIL ; * notify approver 
*END
*
*IF NOT(REQ) THEN
  IF (CO.APS.R.INTRF > 2 AND POR.MODE = 2 AND MENU.FLAG = "R") OR (CO.APS.R.INTRF > 2 AND MENU.FLAG = "P") THEN
     *CALL VEND.STAT.UPDATE(CONO,PO.CODE,"R")
     CALL PRIDGET_VEND_STAT_UPDATE(CONO,PO.CODE,"R")
  END
 * GOSUB 20000 ;* GENERATE BAR CODE LABEL INFO
*END
*MORE = 0
*RELEASE
RETURN
*
91000*
93000*
IF MENU.FLAG = "PO" THEN
  STRXML = "<Payload><RPO><Errmsg>": ERRMSG:"</Errmsg></RPO></Payload>"
END ELSE
*T113009 v
  *STRXML = "<Payload><Requisition><Errmsg>": ERRMSG:"</Errmsg></Requisition></Payload>"
  STRXML = "<Payload><RPOR><Errmsg>": ERRMSG:"</Errmsg></RPOR></Payload>"
*T113009 ^
END
   RETURN
