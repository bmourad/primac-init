SUBROUTINE POR_REQUISITIONSERVICE_GETALLVALUES(CONO,REQ.NO,ERRMSG,STRXML)
************************************************************************
$INCLUDE PMC.CPYLIB PO 
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
*
   OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
*   
   MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = '' ; GOTO 93000  	
   IF CO.PO.REQ.FLAG = "Y" THEN
      OPEN '','REG.REQ' TO REG.REQ ELSE ERRMSG = 'REG.REQ FILE IS MISSING'; GOTO 93000
     * OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
     * OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
      USER.ID = UPCASE(@LOGNAME)
   END
*
   STRXML="<RequisitionValues>"
   MAT INV.CNV.REC = ""
   MENU.FLAG = "R"
   PO.CODE = REQ.NO
   MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
   VEND.KEY = CONO:PO.VEND.NO
   MATREAD VEND.REC FROM VEND , VEND.KEY ELSE
      MAT VEND.REC = "????????????????"
   END
   STRXML := "<PO.CODE>": PO.CODE :"</PO.CODE>"
   STRXML := "<PO.VEND.NO>": PO.VEND.NO :"</PO.VEND.NO>"
   STRXML := "<VEND.PO.DESC>": VEND.PO.DESC :"</VEND.PO.DESC>"
   STRXML := "<VEND.PO.ADDR1>": VEND.PO.ADDR1 :"</VEND.PO.ADDR1>"
   STRXML := "<VEND.PO.ADDR2>": VEND.PO.ADDR2 :"</VEND.PO.ADDR2>"
   STRXML := "<VEND.PO_CITY>": FIELD(VEND.PO.CT.ST, ",",1) :"</VEND.PO_CITY>"
   STRXML := "<VEND.PO_STATE>": FIELD(VEND.PO.CT.ST, ",",2) :"</VEND.PO_STATE>"
   STRXML := "<VEND.PO.ZIP>": VEND.PO.ZIP :"</VEND.PO.ZIP>"
   STRXML := "<VEND.PHONE>": VEND.PHONE :"</VEND.PHONE>"
   STRXML := "<VEND.FAX>": VEND.FAX :"</VEND.FAX>"
   STRXML := "<PO.ACCRUE>": PO.ACCRUE :"</PO.ACCRUE>"
   STRXML := "<PO.DUE.DATE>": PO.DUE.DATE :"</PO.DUE.DATE>"
   STRXML := "<PO.VDR.ORD>": PO.VDR.ORD :"</PO.VDR.ORD>"
   STRXML := "<PO.CONTACT>": PO.CONTACT :"</PO.CONTACT>"
   STRXML := "<PO.SHIP.VIA>": PO.SHIP.VIA :"</PO.SHIP.VIA>"
   STRXML := "<PO.VIA.DESC>": PO.VIA.DESC :"</PO.VIA.DESC>"
   STRXML := "<PO.FOB>": PO.FOB :"</PO.FOB>"
   STRXML := "<PO.TERMS.DATE>": PO.TERMS.DATE :"</PO.TERMS.DATE>"
   STRXML := "<PO.TERMS.DESC>": PO.TERMS.DESC :"</PO.TERMS.DESC>"
   STRXML := "<PO.TERMS.DIS>": PO.TERMS.DIS :"</PO.TERMS.DIS>"
   STRXML := "<PO.SHIP.WHSE>": PO.SHIP.WHSE :"</PO.SHIP.WHSE>"
   STRXML := "<PO.SHIP.NAME>": PO.SHIP.NAME :"</PO.SHIP.NAME>"
   STRXML := "<PO.SHIP.ADD1>": PO.SHIP.ADD1 :"</PO.SHIP.ADD1>"
   STRXML := "<PO.SHIP.ADD2>": PO.SHIP.ADD2 :"</PO.SHIP.ADD2>"
   STRXML := "<PO.SHIP.ADD3_CITY>": FIELD(PO.SHIP.ADD3, ",",1) :"</PO.SHIP.ADD3_CITY>"
   STRXML := "<PO.SHIP.ADD3_STATE>": FIELD(PO.SHIP.ADD3, ",",2) :"</PO.SHIP.ADD3_STATE>"
   STRXML := "<PO.SHIP.ADD4_ZIP>": PO.SHIP.ADD4 :"</PO.SHIP.ADD4_ZIP>"
*
   ;* T25941 v
   ;* SCV.REC(39)<ECD.SCRN.NO,1> = PO.PRT.FLG
   GOSUB SHOW.PRINT.MAIL.FLAGS
   ;* T25941 ^
   STRXML := "<PO.DATE>": PO.DATE :"</PO.DATE>"
   STRXML := "<PO.DIV.OWNER>": PO.DIV.OWNER :"</PO.DIV.OWNER>"
   STRXML := "<PO.WRIT.BY>": PO.WRIT.BY :"</PO.WRIT.BY>"
*
*   CALL CALC.REG.PO.TOT(CONO,TOT.ORD.AMT,XXX,YYY,ZZZ)
*   IF MENU.FLAG # "R" THEN
*      SCV.REC(45)<ECD.SCRN.NO,1> = OCONV(TOT.ORD.AMT,"MD2")
*   END
   IF MENU.FLAG = "R" THEN
      LAST.POS = DCOUNT(PO.STATUS<1>,@VM)
      STRXML := "<PO.STATUS>": PO.STATUS<1,LAST.POS> :"</PO.STATUS>"
      STRXML := "<PO.APPROVER>": PO.APPROVER :"</PO.APPROVER>"
      STRXML := "<PO.ST.DATE>": PO.ST.DATE<1,LAST.POS> :"</PO.ST.DATE>"
      STRXML := "<PO.REQUESTOR>": PO.REQUESTOR :"</PO.REQUESTOR>"
   END
*   IF MENU.FLAG # 'R' THEN
*      IF POS.INQ THEN
*         SCV.REC(49)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END ELSE
*         SCV.REC(48)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END
*   END
    GOSUB NEXT.SCRN.DATA
    STRXML := "</RequisitionValues>"
   RETURN
*
SHOW.PRINT.MAIL.FLAGS: 
   ;* Show print flag
*   ECD.NUM = 39
   PRT.FLAG = "";MAIL.FLAG=""
   BEGIN CASE
      CASE PO.PRT.FLG<1,1> = 'Y'
         PRT.FLAG = "Yes"
      CASE PO.PRT.FLG<1,1> = 'P'
         PRT.FLAG = "Print"
      CASE PO.PRT.FLG<1,1> = 'C'
         PRT.FLAG = "Copy"
      CASE 1
         PRT.FLAG = "No"
   END CASE
   STRXML := "<PRINT.FLAG>": PRT.FLAG :"</PRINT.FLAG>"
   ;* Show mail flag
*   ECD.NUM = 6
   BEGIN CASE
      CASE PO.PRT.FLG<1,2> = 'Y'
         MAIL.FLAG = "Yes"
      CASE PO.PRT.FLG<1,2> = 'M'
         MAIL.FLAG = "Sent"
      CASE PO.PRT.FLG<1,2> = 'C'
         MAIL.FLAG = "Copy"
      CASE 1
         MAIL.FLAG = "No"
   END CASE
   STRXML := "<MAIL.FLAG>": MAIL.FLAG :"</MAIL.FLAG>"
   RETURN
*
NEXT.SCRN.DATA:
*
  LINES = COUNT(PO.PROD.NUM,@VM) + (PO.PROD.NUM # "")                     
  FOR LN = 1 TO LINES                                                    
    STRXML := "<PRODUCT-DETAILS>"
    MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,LN> ELSE          
      MAT INV.REC = ""; INV.FULL.DESC = "??????"                          
    END                                                                  
    MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = "" 
     STRXML := "<PRODUCT>": PO.PROD.NUM<1,LN> :"</PRODUCT>"
    STRXML := "<DESCRIPTION>": INV.FULL.DESC "L#45" :"</DESCRIPTION>"
    IF INV.SBR + 0 = 0 THEN INV.SBR = 1                                  
    DESC.INV<1,LN> = INV.FULL.DESC                                       
    PO.JB.UNITS<1,LN> = INV.UNIT<1,2>                                    
    GOSUB 4000
    GOSUB 10000
    STRXML := "</PRODUCT-DETAILS>"
  NEXT LN                                                                
RETURN
*
10000*
*
    N = LN
    STRXML := "<PO.DEL.DATE>": OCONV(PO.DEL.DATE<1,N>, "D2/") "L#8" :"</PO.DEL.DATE>"
    IF DIFF.UM<N> = "Y" THEN
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
	TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" 
        TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
        TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
      END
      IF ICR.CNV<N,2> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
      END ELSE
        IF ICR.CNV<N,1> = "MD0" THEN
          TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" 
          TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
          TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
	END ELSE
          TEMP.ONORD = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11" 
          TEMP.CANCEL = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
          TEMP.OPEN = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
        END
      END
      STRXML := "<PO.TOT.ONORD>": TEMP.ONORD :"</PO.TOT.ONORD>"
      STRXML := "<PO.TOT.CANCEL>": TEMP.CANCEL :"</PO.TOT.CANCEL>"
      STRXML := "<PO.QTY.OPEN>": TEMP.OPEN :"</PO.QTY.OPEN>"
      STRXML := "<PO.WHSE>": PO.WHSE<1,N> "L#4" :"</PO.WHSE>"
      STRXML := "<PO.DISCOUNT>": OCONV(PO.DISCOUNT<1,N> , "MD2") "R#5" :"</PO.DISCOUNT>"
      STRXML := "<PO.UNIT.FLG>": PO.UNIT.FLG<1,N> "L#3" :"</PO.UNIT.FLG>"
    END ELSE
      IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
        TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
      END ELSE
        TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" ; P_OPT = ""
        TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
        TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
      END
      STRXML := "<PO.TOT.ONORD>": TEMP.ONORD :"</PO.TOT.ONORD>"
      STRXML := "<PO.TOT.CANCEL>": TEMP.CANCEL :"</PO.TOT.CANCEL>"
      STRXML := "<PO.QTY.OPEN>": TEMP.OPEN :"</PO.QTY.OPEN>"
      STRXML := "<PO.WHSE>": PO.WHSE<1,N> "L#4" :"</PO.WHSE>"
      STRXML := "<PO.DISCOUNT>": OCONV(PO.DISCOUNT<1,N> , "MD2") "R#5" :"</PO.DISCOUNT>"
      STRXML := "<PO.UNIT.FLG>": PO.UNIT.FLG<1,N> "L#3" :"</PO.UNIT.FLG>"
    END
*    IF PO.NO.OF.ROLLS<1,N> # "" THEN
*      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,N> ELSE
*        MAT INV.REC = ""; INV.FULL.DESC = UNKNOWN
*      END
*      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
*      BEGIN CASE
*        CASE INV.PAP.TYPE = "ROLL"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE 1
**T27919 v
*          IF INV.PAP.TYPE = 'SHEET' THEN
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Skids" ; P_OPT = ""
*          END ELSE
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Labels" ; P_OPT = ""
*          END
**T27919 ^
*      END CASE
*      P_X  = 74 ; P_Y = SLN+2 ; P_VALUE = PO.NO.OF.ROLLS<1,N> ; P_OPT = ""
*    END
*    CNT = CNT + 1
*    FOR I = 1 TO C.PAGE.SIZE
*      IF PO.ITEM.COMM<1,N,I> # '' THEN
*        P_X  = 0 ; P_Y = SLN+2+I ; P_VALUE = "" ; P_OPT = "CL"
*        P_X  := AM:4 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:I "R#3"
*        P_X  := AM:8 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:PO.ITEM.COMM<1,N,I>
*      END
*    NEXT I
RETURN
**** GET CONVERSIONS
4000*
  BEGIN CASE
    CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
  RETURN
*
93000*
   RETURN
