SUBROUTINE JCS_JOB_WRITEDATA(JobData,ERRMSG)
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE JCS.CPYLIB GANG.ALLOC
$INCLUDE JCS.CPYLIB JOB.CREDIT.STATS
$INCLUDE PSS.CPYLIB JOB.SCHED
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.CNV
MAT JOB.REC = ""
MAT JFS.REC = ""
XYZ = ''
JOB_RESV_DATE= ''
*ERRMSG=''
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG = 'JOB.FNGD.STATS FILE IS MISSING'; GOTO 93000
OPEN '','GANG.JOB' TO GANG.JOB ELSE ERRMSG = 'GANG.JOB FILE IS MISSING'; GOTO 93000
OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE ERRMSG = 'GANG.ALLOC FILE IS MISSING'; GOTO 93000
OPEN '','JOB.CREDIT.STATS' TO JOB.CREDIT.STATS ELSE ERRMSG = 'JOB.CREDIT.STATS FILE IS MISSING'; GOTO 93000
OPEN '','FNGD.STATS' TO FNGD.STATS ELSE ERRMSG = 'FNGD.STATS FILE IS MISSING'; GOTO 93000
OPEN '','FNGD.JOB.STATS' TO FNGD.JOB.STATS ELSE ERRMSG = 'FNGD.JOB.STATS FILE IS MISSING'; GOTO 93000
*OPEN '','ORDER.DETAIL.INQ' TO ORDER.DETAIL.INQ ELSE ERRMSG = 'ORDER.DETAIL.INQ FILE IS MISSING'; GOTO 93000
OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = 'ESTIMATE FILE IS MISSING'; GOTO 93000
OPEN '','ORDER' TO ORDER ELSE ERRMSG = 'ORDER FILE IS MISSING'; GOTO 93000
*
CONO=FIELD(JobData,VM,1)[1,3]
MATREAD COMP.REC FROM COMPANY,CONO ELSE
    ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
    GOTO 93000
END
JOBNO=FIELD(JobData,VM,1)[4,99]
MATREAD JOB.REC FROM JOB, CONO:JOBNO ELSE MAT JOB.REC = ""
JOB.STATUS=FIELD(JobData,VM,2)
*MATREAD JOB.REC FROM JOB, CONO:JOBNO ELSE MAT JOB.REC = ""
JOB.EST=FIELD(JobData,VM,3)
WRITE "EST:":JOBNO ON CONTROL,"EST"
JOB.CUST=FIELD(JobData,VM,4)
MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE MAT CUST.REC = ""
JOB.DIV=FIELD(JobData,VM,5)
JOB.SLSMN=FIELD(JobData,VM,6)
JOB.CSR=FIELD(JobData,VM,7)
JOB.TYPE=FIELD(JobData,VM,8)
JOB.MASTER=FIELD(JobData,VM,9)
JOB.SALES.CODE=FIELD(JobData,VM,10)
JOB.CATG=FIELD(JobData,VM,11)
JOB.SHIP.VIA=FIELD(JobData,VM,12)
JOB.CUST.PO=FIELD(JobData,VM,13)
*
JOB.EST.COST=ICONV(FIELD(JobData,VM,14),"MD2")
JOB.CONF.AMT=ICONV(FIELD(JobData,VM,15),"MD2")
JOB.MARKUP=ICONV(FIELD(JobData,VM,16),"MD2")
JOB.COLORS=FIELD(JobData,VM,17)
JOB.QTY<1,1>=FIELD(JobData,VM,18)
JOB.QTY<1,2>=FIELD(JobData,VM,19)
JOB.QTY<1,3>=FIELD(JobData,VM,20)
XYZ<-1>="JOB.QTY  ":JOB.QTY;WRITE XYZ ON CONTROL,'01WST'
JOB.TRACK.DATE<1,4>=ICONV(FIELD(JobData,VM,21),"D2/")
JOB.PRIOR.JOB=FIELD(JobData,VM,22)
JOB.PRICE.PER.THOU=ICONV(FIELD(JobData,VM,23),"MD2")
JOB.CREDIT=FIELD(JobData,VM,24)
JOB.COMMENTS=CHANGE(FIELD(JobData,VM,25),"#",VM)
WRITE "JOB.COMMENTS ":JOB.COMMENTS ON CONTROL,'01CCT'
JOB.DESC=CHANGE(FIELD(JobData,VM,26),"#",VM)
JOB.RESV.MATL = CHANGE(FIELD(JobData,VM,27),"#",VM)
JOB.RESV.WHSE = CHANGE(FIELD(JobData,VM,29),"#",VM)
JOB.RESV.DATE = CHANGE(FIELD(JobData,VM,30),"#",VM)
FOR I = 1 TO DCOUNT(JOB.RESV.MATL,VM)
XYZ<-1>=INDEX(JOB.RESV.DATE<1,I>,"/",1);WRITE XYZ ON CONTROL,'01WST'
  IF INDEX(JOB.RESV.DATE<1,I>,"/",1) # 0 THEN
	IF JOB.RESV.DATE<1,I> # "" THEN JOB_RESV_DATE<1,I> = ICONV(JOB.RESV.DATE<1,I>,"D2/")
  END ELSE
	JOB_RESV_DATE<1,I>=JOB.RESV.DATE<1,I> 
  END
NEXT I
JOB.RESV.DATE =JOB_RESV_DATE 
JOB.ALOC.QTY=CHANGE(FIELD(JobData,VM,31),"#",VM)
JOB.RESV.QTY = CHANGE(FIELD(JobData,VM,32),"#",VM)
JOB.USED.QTY = CHANGE(FIELD(JobData,VM,33),"#",VM)
*INCR = 34
FOR N = 1 TO 10
    JOB.TRACK.DATE<1,N>= ICONV(CHANGE(FIELD(JobData,VM,34),"#",VM)<1,N>,"D2/")
    *INCR = INCR + 1
NEXT N
WRITE "TRAK.DATES ":JOB.TRACK.DATE ON CONTROL,'01JTD'
****************************RD
REQ_DATE= '';UN_PRICE='';REQ_QTY=''
*REQ_DATE = CHANGE(FIELD(JobData,VM,35),"#",VM)
SAVE.INV.JS.REC = CHANGE(FIELD(JobData,VM,35),"#",VM)
XYZ<-1>="SAVE.INV.JS.REC  ":SAVE.INV.JS.REC;WRITE XYZ ON CONTROL,'01WST'
FOR J = 1 TO DCOUNT(JOB.RESV.MATL,VM)
  IF REQ_DATE # "" THEN REQ_DATE = ICONV(REQ_DATE<1,J>,"D2/")
NEXT J
UN_PRICE = CHANGE(FIELD(JobData,VM,36),"#",VM)
REQ_QTY = CHANGE(FIELD(JobData,VM,37),"#",VM)
*
*************************END RD
*******************FG
JFS_U_PRICE= '';JFS_M_QTY = '';JFS_A_QTY = '';JFS_F_QTY='';JFS_DATE=''
MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE MAT JFS.REC = ""
JFS.PROD = CHANGE(FIELD(JobData,VM,38),"#",VM)
JFS.WHSE =  CHANGE(FIELD(JobData,VM,39),"#",VM)
JFS.U.PRICE =  CHANGE(FIELD(JobData,VM,40),"#",VM)
JFS.M.QTY = CHANGE(FIELD(JobData,VM,41),"#",VM)
JFS.A.QTY = CHANGE(FIELD(JobData,VM,42),"#",VM)
JFS.F.QTY = CHANGE(FIELD(JobData,VM,43),"#",VM)
JFS.DATE = CHANGE(FIELD(JobData,VM,44),"#",VM)
JFS.ORDER= CHANGE(FIELD(JobData,VM,45),"#",VM)
*
 FOR F = 1 TO DCOUNT(JFS.PROD,VM)
	JFS_U_PRICE<1,F> =  ICONV(JFS.U.PRICE<1,F>,"MD4")
	MATREAD INV.REC FROM INVENTORY, CONO:JFS.PROD<1,F> ELSE MAT INV.REC = ""
	$INCLUDE ICSBP INV.UM.CNV
	JFS_M_QTY<1,F>= ICONV(JFS.M.QTY<1,F>,ICR.CNV1)
	JFS_A_QTY<1,F>= ICONV(JFS.A.QTY<1,F>,ICR.CNV1)
	JFS_F_QTY<1,F>= ICONV(JFS.F.QTY<1,F>,ICR.CNV1) 
	JFS_DATE<1,F>=ICONV(JFS.DATE<1,F>,"D2/")
*
	* JFS_M_QTY= ICONV(INT(((JFS.M.QTY<1,F>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) 
	* JFS_A_QTY= ICONV(INT(((JFS.A.QTY<1,F>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) 
	* JFS_F_QTY= ICONV(INT(((JFS.F.QTY<1,F>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) 
 *
 NEXT F
JFS.U.PRICE = JFS_U_PRICE
JFS.M.QTY = JFS_M_QTY
JFS.A.QTY = JFS_A_QTY
JFS.F.QTY = JFS_F_QTY
JFS.DATE =  JFS_DATE
MATWRITE JFS.REC ON CONTROL,'01JFS'
*************END FG
*
*********G
 GJOB_ALLOC= '';GJOB_WIDTH='';GJOB_LENGTH = ''
 MATREAD GJOB.REC FROM GANG.JOB,CONO:JOBNO ELSE MAT GJOB.REC = ''
GJOB.IW= CHANGE(FIELD(JobData,VM,46),"#",VM)
GJOB.IL= CHANGE(FIELD(JobData,VM,47),"#",VM)
GJOB_ALLOC= CHANGE(FIELD(JobData,VM,48),"#",VM)
MATREAD GAT.REC FROM GANG.ALLOC, CONO:GJOB_ALLOC ELSE MAT GAT.REC = ''
 GJOB.ALLOC = GJOB_ALLOC
 GJOB.DESC = GAT.DESC
*
GJOB.DEPT= CHANGE(FIELD(JobData,VM,49),"#",VM)
GJOB.CCTR= CHANGE(FIELD(JobData,VM,50),"#",VM)
GJOB.TYPE= CHANGE(FIELD(JobData,VM,51),"#",VM)
*
 GJOB.DEPT = GAT.DEPT
 GJOB.CCTR = GAT.CCTR
 GJOB.TYPE = GAT.TYPE
*
GJOB.JOB= CHANGE(FIELD(JobData,VM,52),"#",VM)
GJOB.PROD= CHANGE(FIELD(JobData,VM,53),"#",VM)
GJOB.PDESC= CHANGE(FIELD(JobData,VM,54),"#",VM)
GJOB.WIDTH= CHANGE(FIELD(JobData,VM,55),"#",VM)
GJOB.LENGTH= CHANGE(FIELD(JobData,VM,56),"#",VM)
GJOB.SPOTS= CHANGE(FIELD(JobData,VM,57),"#",VM)
GJOB.PCT= CHANGE(FIELD(JobData,VM,58),"#",VM)
USERID=CHANGE(FIELD(JobData,VM,59),"#",VM)
WRITE "USER:":USERID ON CONTROL,"USERID"
FOR G =1 TO DCOUNT(GJOB.JOB,VM)
	GJOB_WIDTH<1,G> = ICONV(GJOB.WIDTH<1,G>,"MD4")
	GJOB_LENGTH<1,G> = ICONV(GJOB.LENGTH<1,G>,"MD4")
NEXT G
GJOB.WIDTH= GJOB_WIDTH
GJOB.LENGTH = GJOB_LENGTH
********** END G
*
 IF JOBNO = "N" THEN
            READU JOBNO FROM CONTROL, CONO:"JOBNO" ELSE
               JOBNO = 10000
            END
            LOOP
               FND = 1
               JOBNO = JOBNO + 1
               IF JOBNO > 99999 THEN JOBNO = 1
               READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0
            WHILE FND DO
               RELEASE JOB, CONO : JOBNO
            REPEAT
          *  WRITE JOBNO ON CONTROL, CONO:"JOBNO"
            ERRMSG = "Please Note Assigned Job Number : ":JOBNO
           * GOSUB 90500
     FOR LN = 1 TO DCOUNT(JOB.RESV.MATL,VM)
	JOB.ALOC.AMT<1,LN> = JOB.ALOC.AMT<1,LN> + 0
	JOB.RESV.AMT<1,LN> = JOB.RESV.AMT<1,LN> + 0
        JOB.USED.AMT<1,LN> = JOB.USED.AMT<1,LN> + 0
     NEXT LN
 END ELSE
   *    	ERRMSG = "Record ":JOBNO:" updated successfully"
 END
 ********************************UPDATE ALL JOB MAINTENANCE FILE
 XYZ<-1>="IM HERE";WRITE XYZ ON CONTROL,'01WST'
   OLD.CUST = JOB.CUST; OLD.MASTER = JOB.MASTER
   OLD.EST = JOB.EST; PREV.CRED.AUTH = JOB.CREDIT
   PRIOR.EST = JOB.EST
   MAT EST.PAR = ""
   CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
    DIM SAVE.JOB(JOB.REC.SIZE)
   DIM EST.PAR(10)
   MAT EST.PAR = ""
   EQU EST.PAR.MATL TO EST.PAR(5)
   MATREAD EST.REC FROM ESTIMATE, CONO:JOB.EST ELSE MAT EST.REC= ""
**********
  QUOTED.AMT = 0
WRITE "ST:":JOB.STATUS:"%%":JOB.STATUS<1,1> ON CONTROL,"STATUS"
        IF JOB.STATUS<1,1> < 4 AND JFS.PROD = "" THEN
            LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
               IF JOB.TOT.INV > 0 THEN
                  QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
               END ELSE
                  QUOTED.AMT = JOB.CONF.AMT
               END
               IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
            END
         END
         IF JOB.MASTER = "" OR JOB.MASTER = "N" THEN
            JOB.MASTER = JOBNO
         END
         IF OLD.MASTER = "" OR OLD.MASTER = "N" THEN
            OLD.MASTER = JOB.MASTER
         END
         IF OLD.CUST = "" THEN OLD.CUST = JOB.CUST
         CUR.CUST = JOB.CUST
         CUR.MASTER = JOB.MASTER
         MAT SAVE.JOB = MAT JOB.REC
         IF OLD.MASTER = CUR.MASTER THEN GOTO 502
         MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE
            ERRMSG<1,-1> = "Cannot locate master Job # " : OLD.MASTER
           *GOSUB 91000
            GOTO 502
         END
         LOCATE JOBNO IN JOB.SUBS<1>,1 SETTING JFND ELSE
            RELEASE JOB, CONO : OLD.MASTER
            GOTO 502
         END
         JOB.SUBS = DELETE(JOB.SUBS,1,JFND,0)
         MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
502      IF OLD.CUST = CUR.CUST THEN GOTO 503
         MATREADU CUST.REC FROM CUSTOMER, CONO : OLD.CUST ELSE
            ERRMSG<1,-1> = "Cannot locate customer # " : OLD.CUST
            *GOSUB 91000
            GOTO 503
         END
         LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE
            RELEASE CUSTOMER, CONO : OLD.CUST
            GOTO 503
         END
         CUST.JOB = DELETE(CUST.JOB,1,JFND,0)
         CUST.JOB.BAL = DELETE(CUST.JOB.BAL,1,JFND,0)
         MATWRITE CUST.REC ON CUSTOMER , CONO:OLD.CUST
503      IF CUR.MASTER = JOBNO THEN GOTO 504
         MATREADU JOB.REC FROM JOB, CONO : CUR.MASTER ELSE
            ERRMSG<1,-1> = "Cannot locate master Job # " : CUR.MASTER
           * GOSUB 91000
            GOTO 505
         END
         IF JOB.CUST # CUR.CUST THEN
            ERRMSG<1,-1> = "Customer mismatch, master Job customer # " : JOB.CUST
            *GOSUB 91000
            RELEASE JOB, CONO : CUR.MASTER
            GOTO 505
         END
         IF JOB.MASTER = "" OR JOB.MASTER = "N" THEN
            JOB.MASTER = CUR.MASTER
         END
         IF JOB.MASTER # CUR.MASTER THEN
            ERRMSG<1,-1> = "Master Job cannot be a sub Job"
            *GOSUB 91000
            RELEASE JOB, CONO : CUR.MASTER
            GOTO 505
         END
         LOCATE JOBNO IN JOB.SUBS<1>,1 SETTING SFND ELSE
            JOB.SUBS<1,SFND> = JOBNO
         END
504      MATREADU CUST.REC FROM CUSTOMER, CONO : CUR.CUST ELSE
            ERRMSG<1,-1> = "Cannot locate customer # " : CUR.CUST
            *GOSUB 91000
            IF CUR.MASTER = JOBNO THEN GOTO 505
            RELEASE JOB, CONO : CUR.MASTER
505         IF OLD.MASTER = CUR.MASTER THEN GOTO 506
            MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE GOTO 506
            LOCATE JOBNO IN JOB.SUBS<1>,1 SETTING JFND ELSE NULL
            JOB.SUBS<1,JFND> = JOBNO
            MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
506         MAT JOB.REC = MAT SAVE.JOB
            IF OLD.CUST = CUR.CUST THEN GOTO 519
            MATREADU CUST.REC FROM CUSTOMER, OLD.CUST ELSE GOTO 519
            LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
            CUST.JOB<1,JFND> = JOBNO
            CUST.JOB.BAL<1,JFND> = QUOTED.AMT
            MATWRITE CUST.REC ON CUSTOMER, CONO : OLD.CUST
            GOTO 519
         END
         IF CUR.MASTER # JOBNO THEN
            MATWRITE JOB.REC ON JOB, CONO : CUR.MASTER
         END
         MAT JOB.REC = MAT SAVE.JOB
         LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
         CUST.JOB<1,JFND> = JOBNO
         CUST.JOB.BAL<1,JFND> = QUOTED.AMT
         MATWRITE CUST.REC ON CUSTOMER , CONO : CUR.CUST
         MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
         IF SAVE.INV.JS.REC = "" THEN GOTO 507
         FOR M = 1 TO MCNT
            JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO
            MATREADU INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
               MAT INV.JS.REC = ""
            END
            IJS.JOB.CUST = JOB.CUST
            IJS.REQ.DATE = SAVE.INV.JS.REC<M,1>
            IJS.REQ.AMT = SAVE.INV.JS.REC<M,2>
            IJS.REQ.QTY = SAVE.INV.JS.REC<M,3>
            MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID
         NEXT M
XYZ<-1>="NEXT 1";WRITE XYZ ON CONTROL,'01WST'
* IF REQ_DATE = "" AND UN_PRICE = "" AND REQ_QTY  THEN GOTO 507
* FOR M = 1 TO MCNT
*    JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO
*    MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
*       MAT INV.JS.REC = ""
*    END
*    IJS.JOB.CUST = JOB.CUST
    *IJS.REQ.DATE = SAVE.INV.JS.REC<M,1>
    *IJS.REQ.AMT = SAVE.INV.JS.REC<M,2>
    *IJS.REQ.QTY = SAVE.INV.JS.REC<M,3>
*IJS.REQ.DATE = REQ_DATE<1,M>
*    IJS.REQ.AMT = UN_PRICE<1,M>
*    IJS.REQ.QTY = REQ_QTY<1,M>
*     MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID
* NEXT M
507*
         RESV.ACTION = "A"
         GOSUB 600
         MATREADU JOCS.REC FROM JOB.CREDIT.STATS,CONO:JOBNO ELSE MAT JOCS.REC=""
         IF PREV.CRED.AUTH = JOB.CREDIT THEN
            RELEASE JOB.CREDIT.STATS,CONO:JOBNO
            GOTO 509
         END
         AVAIL = ""
         BEGIN CASE
            CASE CUST.CREDIT = "E"
               AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - QUOTED.AMT
            CASE CUST.CREDIT = "CASH"
               AVAIL = CUST.AR.BAL + CUR.JOB.BAL + QUOTED.AMT
         END CASE
         JOCS.CRED.CODE = INSERT(JOCS.CRED.CODE,1,1,0,CUST.CREDIT)
         JOCS.CRED.AUTH = INSERT(JOCS.CRED.AUTH,1,1,0,JOB.CREDIT)
         JOCS.CUST.NO = INSERT(JOCS.CUST.NO,1,1,0,JOB.CUST)
         JOCS.CRED.AVAIL = INSERT(JOCS.CRED.AVAIL,1,1,0,AVAIL)
         JOCS.CRED.LIMIT = INSERT(JOCS.CRED.LIMIT,1,1,0,CUST.CR.LIMIT)
         JOCS.CHG.DATE = INSERT(JOCS.CHG.DATE,1,1,0,DATE())
         MATWRITE JOCS.REC ON JOB.CREDIT.STATS, CONO:JOBNO
509*
XYZ<-1>="PREV 1";WRITE XYZ ON CONTROL,'01WST'
XYZ<-1>="B4 JKT_NOTIFY_JOB_SUB WRITE JOB.QTY  ":JOB.QTY;WRITE XYZ ON CONTROL,'01WST'
*         CALL JKT_NOTIFY_SUB ("1",CONO,"JOB",JOBNO,"",JOB.REC.SIZE,MAT JOB.REC,JOB,JSTATUS)
          CALL JKT_NOTIFY_JOB_SUB ("1",CONO,"JOB",JOBNO,"",JOB.REC.SIZE,MAT JOB.REC,JOB,JSTATUS,USERID)
XYZ<-1>="B4 WRITE JOB.QTY  ":JOB.QTY;WRITE XYZ ON CONTROL,'01WST'
         MATWRITE JOB.REC ON JOB , CONO : JOBNO
XYZ<-1>="PREVious 1";WRITE XYZ ON CONTROL,'01WST'
         READ SISQUEUE FROM CONTROL, CONO:"SISQUEUE" THEN
            CALL JCS_SISQUEUE (CONO, JOBNO, "JOB", SIS_CONTROL, SIS_OUTPUT, SISERRMSG)
         END ELSE
            CALL JCS_HNP_UPDATE(CONO, CONO:JOBNO, "JOB", JOB, "")
         END
XYZ<-1>="PREV 2";WRITE XYZ ON CONTROL,'01WST'
         IF GJOB.JOB<1,1> = "" THEN
            DELETE GANG.JOB, CONO : JOBNO
         END ELSE
            MATWRITE GJOB.REC ON GANG.JOB, CONO : JOBNO
         END
         IF JFS.PROD # "" OR OJFS.PROD # "" THEN
            GOSUB 670
         END
**T26421 v
         IF CO.PSS = "Y" THEN
            OPEN '','JOB.SCHED' TO JOB.SCHED THEN
               IF JOB.EST = "" THEN
                  MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN
                     IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN
                        JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
                     END
                     IF JBS.CUST.NAME # CUST.NAME THEN
                        JBS.CUST.NAME = CUST.NAME
                     END
                     IF JBS.DIV # JOB.DIV THEN
                        JBS.DIV = JOB.DIV
                     END
                     IF JBS.CUST.ID # JOB.CUST THEN
                        JBS.CUST.ID = JOB.CUST
                     END
                     IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN
                        JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
                     END
                     IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"
                     CALL JCS_GET_JBS_USER_FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
                     MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
                  END ELSE
*                     VALDAT = 'Y':VM:'N'
*                     TYP=8; X=0; Y=21; MAXL=1
*                     PMSG="Extract this job for scheduling (Y/N):"
*                     CALL EDIT.SUB
*                     P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
*                     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
XYZ<-1>="NEXT 2";WRITE XYZ ON CONTROL,'01WST'
                     VALUE = "Y"
                     IF VALUE = "Y" THEN
                        MAT JBS.REC = ""
                        JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
                        JBS.CUST.NAME = CUST.NAME
                        JBS.DIV = JOB.DIV
                        JBS.SCH.FLAG = "P"
                        JBS.CUST.ID = JOB.CUST
                        JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
                        IF CO.PSS.BACKWARD.FLAG = "Y" THEN
                           JBS.SCHED.MODE = "D"
                           JBS.SCHED.DATE = JBS.DUE.DATE
                        END ELSE
                           JBS.SCHED.MODE = "S"
                           JOBS.SCHED.DATE = DATE() + 1
                        END
                        MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
*T26551
                        CALL JCS_GET_JBS_USER_FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
                        MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
                     END
                   END
               END ELSE
	XYZ<-1>="NEXT 3";WRITE XYZ ON CONTROL,'01WST'
                  MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN
                     IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN
                        JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
                     END
                     IF JBS.CUST.NAME # CUST.NAME THEN
                        JBS.CUST.NAME = CUST.NAME
                     END
                     IF JBS.DIV # JOB.DIV THEN
                        JBS.DIV = JOB.DIV
                     END
                     IF JBS.CUST.ID # JOB.CUST THEN
                        JBS.CUST.ID = JOB.CUST
                     END
                     IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN
                        JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
                     END
                     IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"
                     CALL JCS_GET_JBS_USER_FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
                     MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
                  END
               END
            END
         END
*T26421 ^
XYZ<-1>="NEXT 4";WRITE XYZ ON CONTROL,'01WST'
         IF CO.JES = "Y" THEN
            ESTAT = 0     ;*T22154
             CALL JCS_JOB_BOOK_SUB (CONO,"3",JOBNO,OLD.EST,JOB.EST,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
         END
XYZ<-1>="end of the file";WRITE XYZ ON CONTROL,'01WST'
519*
 ***************************************
*SCHEMA.ONLY =0
*MATWRITE JOB.REC ON CONTROL,JOBNO 
*WRITE JobData ON CONTROL,'01XM' 
IF ERRMSG = "" THEN ERRMSG = 'Record ':JOBNO:' updated successfully'
RETURN
****************************8
600*
XYZ<-1>="YAKUB 1";WRITE XYZ ON CONTROL,'01WST'
   RESV.LOC = 0
**********************8
      CALL JCS_JOB_RESV_SUB(CONO,RESV.ACTION,RESV.LOC,JOBNO,MAT JOB.REC,MAT INV.REC)
  * CALL JCS_JOB_RESV_SUB(CONO,RESV.ACTION,RESV.LOC,JOBNO,ERRMSG)
  * IF ERRMSG # "" THEN GOTO 93000
   *********************88
   XYZ<-1>="YAKUB 2";WRITE XYZ ON CONTROL,'01WST'
   MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
   FOR M = MCNT TO 1 STEP -1
      IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
         JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO
         MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
            JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
            JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
            JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
            JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
            JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
            JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
            JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
            JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
            JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
         END
      END
   NEXT M
   RETURN
*
*---- ORD, JFS, FJS, FOS, & FGS update
650*
*
*---- Clear all allocated quantity
*
   MCNT = DCOUNT(JFS.PROD,VM)
   FOR M = 1 TO MCNT
      JFS.M.QTY<1,M> = JFS.F.QTY<1,M>
      OCNT = DCOUNT(JFS.ORDER<1,M>,SVM)
      FOR O = 1 TO OCNT
         JFS.ORD.QTY<1,M,O> = 0
      NEXT O
      JFS.A.QTY<1,M> = 0
   NEXT M
*
*---- Load old allocated quantities
670*
   NJFS.PROD = JFS.PROD
   NJFS.WHSE = JFS.WHSE
   NJFS.ORDER = JFS.ORDER
   NJFS.ORD.QTY = JFS.ORD.QTY
   MCNT = DCOUNT(JFS.PROD,VM)
   FOR M = 1 TO MCNT
      JFS.ORDER<1,M> = ""
      JFS.ORD.QTY<1,M> = ""
   NEXT M
   FOR M = 1 TO MCNT
      PDNO = JFS.PROD<1,M>; WHNO = JFS.WHSE<1,M>
      PTR = 1
      LOOP
         LOCATE PDNO IN OJFS.PROD<1>,PTR SETTING PLOC THEN
            IF WHNO = OJFS.WHSE<1,PLOC> THEN
               JFS.ORDER<1,M> = OJFS.ORDER<1,PLOC>
               JFS.ORD.QTY<1,M> = OJFS.ORD.QTY<1,PLOC>
               OJFS.PROD = DELETE(OJFS.PROD,1,PLOC,0)
               OJFS.WHSE = DELETE(OJFS.WHSE,1,PLOC,0)
               OJFS.ORDER = DELETE(OJFS.ORDER,1,PLOC,0)
               OJFS.ORD.QTY = DELETE(OJFS.ORD.QTY,1,PLOC,0)
               PTR = 0
            END
         END ELSE
            PTR = 0
         END
      WHILE PTR DO
         PTR = PLOC + 1
      REPEAT
      JFS.A.QTY<1,M> = SUM(JFS.ORD.QTY<1,M>)
   NEXT M
   MATWRITE JFS.REC ON JOB.FNGD.STATS, CONO:JOBNO
*
*---- Update FJS &  FGS with the manufacture quantity
*
   FOR M = 1 TO MCNT
      PDNO = JFS.PROD<1,M>; WHNO = JFS.WHSE<1,M>
      FGS.ID = CONO:PDNO:"!":WHNO
      MATREADU FGS.REC FROM FNGD.STATS, FGS.ID ELSE
         MAT FGS.REC = ""
      END
      LOCATE JOBNO IN FGS.JOB<1>,1 SETTING L ELSE
         FGS.JOB<1,L> = JOBNO
         FGS.A.QTY<1,L> = 0
      END
      FGS.M.QTY<1,L> = JFS.M.QTY<1,M> - JFS.F.QTY<1,M>
      IF FGS.M.QTY<1,L> < 0 THEN FGS.M.QTY<1,L> = 0
      MATWRITE FGS.REC ON FNGD.STATS, FGS.ID
      FJS.ID = FGS.ID:"!":JOBNO
      MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
         MAT FJS.REC = ""
         FJS.CUST = JOB.CUST
      END
      FJS.DATE = JFS.DATE<1,M>
      FJS.M.QTY = JFS.M.QTY<1,M>
      FJS.F.QTY = JFS.F.QTY<1,M>
      FJS.S.QTY = JFS.S.QTY<1,M>
      MATWRITE FJS.REC ON FNGD.JOB.STATS, FJS.ID
   NEXT M
*
*---- Load all the orders for all the products
*
   ORDNOS = ""; PRDPTR = ""; ORDPTR = ""
   GEN.SHPNO = "000"
   FOR M = 1 TO MCNT
      OCNT = DCOUNT(NJFS.ORDER<1,M>,SVM)
      FOR O = 1 TO OCNT
         LOCATE NJFS.ORDER<1,M,O> IN ORDNOS,1 SETTING OLOC THEN
            OPTR = DCOUNT(PRDPTR<OLOC>,VM) + 1
            PRDPTR<OLOC,OPTR> = M
            ORDPTR<OLOC,OPTR> = O
         END ELSE
            ORDNOS<OLOC> = NJFS.ORDER<1,M,O>
            PRDPTR<OLOC> = M
            ORDPTR<OLOC> = O
         END
      NEXT O
   NEXT M
*
*---- Update orders with the new allocated quantity
*
   OCNT = DCOUNT(ORDNOS,AM)
   FOR OP = 1 TO OCNT
      ORDNUM = ORDNOS<OP>
      PCNT = DCOUNT(ORDPTR<OP>,VM)
      MATREADU ORD.REC FROM ORDER, CONO:ORDNUM ELSE
         RELEASE ORDER, CONO:ORDNUM
         FOR PP = 1 TO PCNT
            M = PRDPTR<OP,PP>; O = ORDPTR<OP,PP>
            PDNO = NJFS.PROD<1,M>; WHNO = NJFS.WHSE<1,M>
            NJFS.ORD.QTY<1,M,O> = 0
            GOSUB 680
         NEXT PP
         GOTO 674
      END
      STATUS = "L"; SHPNO = "ALL"
      CALL JCS_ORDER_LINE_UPD(CONO,ORDNUM,SHPNO,STATUS)
      SHPNO = GEN.SHPNO
      PCNT = DCOUNT(ORDPTR<OP>,VM)
      FOR PP = 1 TO PCNT
         M = PRDPTR<OP,PP>; O = ORDPTR<OP,PP>
         PDNO = NJFS.PROD<1,M>; WHNO = NJFS.WHSE<1,M>
         PTR = 1
         LOOP
            LOCATE PDNO IN ODQ.PROD<1>,PTR SETTING PLOC THEN
               IF WHNO = ODQ.WHSE<1,PLOC> AND ODQ.KIT<1,PLOC> = "N" THEN
                  PTR = 0
               END
            END ELSE
               PLOC = 0; PTR = 0
            END
         WHILE PTR DO
            PTR = PLOC + 1
         REPEAT
         IF PLOC = 0 THEN
            RELEASE ORDER, CONO:ORDNUM
            NJFS.ORD.QTY<1,M,O> = 0
            GOSUB 680; GOTO 672
         END
         TOT.A.QTY = NJFS.ORD.QTY<1,M,O>; JPTR = 1
         LOOP
            LOCATE JOBNO IN ODQ.JOB<1,PLOC>,JPTR SETTING JL THEN
               BEGIN CASE
                  CASE TOT.A.QTY >= ODQ.JOB.QTY<1,PLOC,JL>
                     TOT.A.QTY = TOT.A.QTY - ODQ.JOB.QTY<1,PLOC,JL>
                     JPTR = JL + 1
                  CASE TOT.A.QTY > 0
                     ODQ.JOB.QTY<1,PLOC,JL> = TOT.A.QTY
                     TOT.A.QTY = 0
                     JPTR = JL + 1
                  CASE 1
                     ODQ.JOB.QTY<1,PLOC,JL> = 0
               END CASE
            END ELSE
               JL = 0
            END
         WHILE JL DO REPEAT
         IF TOT.A.QTY < 1 THEN GOTO 672
         JPTR = 1
         LOOP
            LOCATE JOBNO IN ODQ.JOB<1,PLOC>,JPTR SETTING JL THEN
               IF ODQ.JOB.SHPNO<1,PLOC,JL> = SHPNO THEN
                  ODQ.JOB.QTY<1,PLOC,JL> = ODQ.JOB.QTY<1,PLOC,JL> + TOT.A.QTY
                  JL = 0
               END
            END ELSE
               INS JOBNO BEFORE ODQ.JOB<1,PLOC,1>
               INS TOT.A.QTY BEFORE ODQ.JOB.QTY<1,PLOC,1>
               INS GEN.SHPNO BEFORE ODQ.JOB.SHPNO<1,PLOC,1>
               JL = 0
            END
         WHILE JL DO
            JPTR = JL + 1
         REPEAT
         ODQ.A.QTY<1,PLOC> = SUM(ODQ.JOB.QTY<1,PLOC>)
672*
      NEXT PP
      STATUS = "U"; SHPNO = ""
      CALL JCS_ORDER_LINE_UPD(CONO,ORDNUM,SHPNO,STATUS)
674*
   NEXT OP
*
*---- Update orders with zero out allocated quantity
*
   ORDNOS = ""; PRDPTR = ""; ORDPTR = ""
   MCNT = DCOUNT(OJFS.PROD,VM)
   FOR M = 1 TO MCNT
      OCNT = DCOUNT(OJFS.ORDER<1,M>,SVM)
      FOR O = 1 TO OCNT
         LOCATE OJFS.ORDER<1,M,O> IN ORDNOS,1 SETTING OLOC THEN
            OPTR = DCOUNT(PRDPTR<OLOC>,VM) + 1
            PRDPTR<OLOC,OPTR> = M
            ORDPTR<OLOC,OPTR> = O
         END ELSE
            ORDNOS<OLOC> = OJFS.ORDER<1,M,O>
            PRDPTR<OLOC> = M
            ORDPTR<OLOC> = O
         END
      NEXT O
   NEXT M
   OCNT = DCOUNT(ORDNOS,AM)
   FOR OP = 1 TO OCNT
      ORDNUM = ORDNOS<OP>
      PCNT = DCOUNT(ORDPTR<OP>,VM)
      MATREADU ORD.REC FROM ORDER, CONO:ORDNUM ELSE
         RELEASE ORDER, CONO:ORDNUM
         FOR PP = 1 TO PCNT
            M = PRDPTR<OP,PP>; O = ORDPTR<OP,PP>
            PDNO = OJFS.PROD<1,M>; WHNO = OJFS.WHSE<1,M>
            GOSUB 680
         NEXT PP
         GOTO 678
      END
      STATUS = "L"; SHPNO = "ALL"
      CALL JCS_ORDER_LINE_UPD(CONO,ORDNUM,SHPNO,STATUS)
      SHPNO = GEN.SHPNO
      PCNT = DCOUNT(ORDPTR<OP>,VM)
      FOR PP = 1 TO PCNT
         M = PRDPTR<OP,PP>; O = ORDPTR<OP,PP>
         PDNO = OJFS.PROD<1,M>; WHNO = OJFS.WHSE<1,M>
         PTR = 1
         LOOP
            LOCATE PDNO IN ODQ.PROD<1>,PTR SETTING PLOC THEN
               IF WHNO = ODQ.WHSE<1,PLOC> THEN
                  PTR = 0
               END
            END ELSE
               PLOC = 0; PTR = 0
            END
         WHILE PTR DO
            PTR = PLOC + 1
         REPEAT
         IF PLOC = 0 THEN
            RELEASE ORDER, CONO:ORDNUM
            GOSUB 680; GOTO 676
         END
         TOT.A.QTY = 0; JPTR = 1
         LOOP
            LOCATE JOBNO IN ODQ.JOB<1,PLOC>,JPTR SETTING JL THEN
               ODQ.JOB.QTY<1,PLOC,JL> = 0
               JPTR = JL + 1
            END ELSE
               JL = 0
            END
         WHILE JL DO REPEAT
676*
      NEXT PP
      STATUS = "U"; SHPNO = ""
      CALL JCS_ORDER_LINE_UPD(CONO,ORDNUM,SHPNO,STATUS)
678*
   NEXT OP
   MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE MAT JFS.REC = ""
   MCNT = DCOUNT(OJFS.PROD,VM)
   FOR M = 1 TO MCNT
      PDNO = OJFS.PROD<1,M>; WHNO = OJFS.WHSE<1,M>
      FGS.ID = CONO:PDNO:"!":WHNO
      FJS.ID = FGS.ID:"!":JOBNO
      MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID THEN
         DELETE FNGD.JOB.STATS, FJS.ID
      END ELSE
         RELEASE FNGD.JOB.STATS, FJS.ID
      END
      MATREADU FGS.REC FROM FNGD.STATS, FGS.ID THEN
         LOCATE JOBNO IN FGS.JOB<1>,1 SETTING L THEN
            FGS.JOB = DELETE(FGS.JOB,1,L,0)
            FGS.M.QTY = DELETE(FGS.M.QTY,1,L,0)
            FGS.A.QTY = DELETE(FGS.A.QTY,1,L,0)
         END
         IF FGS.JOB = "" AND FGS.ORDER = "" THEN
            DELETE FNGD.STATS, FGS.ID
         END ELSE
            MATWRITE FGS.REC ON FNGD.STATS, FGS.ID
         END
      END ELSE
         RELEASE FNGD.STATS, FGS.ID
      END
      PTR = 1
      LOOP
         LOCATE PDNO IN JFS.PROD<1>,PTR SETTING PLOC THEN
            IF WHNO = JFS.WHSE<1,PLOC> THEN
               JFS.PROD = DELETE(JFS.PROD,1,PLOC,0)
               JFS.WHSE = DELETE(JFS.WHSE,1,PLOC,0)
               JFS.DATE = DELETE(JFS.DATE,1,PLOC,0)
               JFS.M.QTY = DELETE(JFS.M.QTY,1,PLOC,0)
               JFS.A.QTY = DELETE(JFS.A.QTY,1,PLOC,0)
               JFS.F.QTY = DELETE(JFS.F.QTY,1,PLOC,0)
               JFS.S.QTY = DELETE(JFS.S.QTY,1,PLOC,0)
               JFS.ORDER = DELETE(JFS.ORDER,1,PLOC,0)
               JFS.ORD.QTY = DELETE(JFS.ORD.QTY,1,PLOC,0)
               PTR = 0
            END
         END ELSE
            PTR = 0
         END
      WHILE PTR DO
         PTR = PLOC + 1
      REPEAT
   NEXT M
   IF JFS.PROD # "" THEN
      MATWRITE JFS.REC ON JOB.FNGD.STATS, CONO:JOBNO
   END ELSE
      DELETE JOB.FNGD.STATS, CONO:JOBNO
   END
   RETURN
*
*---- Zero out allocated for the FJS
680*
   FJS.ID = CONO:PDNO:"!":WHNO:"!":JOBNO
   MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID THEN
      LOCATE ORDNUM IN FJS.ORD<1>,1 SETTING FND THEN
         FJS.ORD = DELETE(FJS.ORD,1,FND,0)
         FJS.ORD.QTY = DELETE(FJS.ORD.QTY,1,FND,0)
         FJS.A.QTY = SUM(FJS.ORD.QTY)
         MATWRITE FJS.REC ON FNGD.JOB.STATS, FJS.ID
      END ELSE
         RELEASE FNGD.JOB.STATS, FJS.ID
      END
   END ELSE
      RELEASE FNGD.JOB.STATS, FJS.ID
   END
   RETURN
************************
93000*
IF ERRMSG <> "" THEN
*ERRMSG = "JobListService ---> JCS_WRITEJOB ---> " : ERRMSG
    * CALL WRITELOG(ERRMSG)
END
RETURN
END
