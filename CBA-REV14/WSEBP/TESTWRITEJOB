SUBROUTINE JCS_JOBSERVICE_WRITEJOB(INPUTSTR,ERRSTR,XMLSTR)
**************************************************
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB SALES.CODE        ; * T26973
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE JCS.CPYLIB CREDIT.AUTH.CODE
$INCLUDE JCS.CPYLIB JOB.CATEGORY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE CPYLIB SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*******************************************
OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN THE JOB FILE"
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN THE COMPANY FILE"
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN THE CUSTOMER FILE"
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN THE SALESMAN FILE"
OPEN "","CSR.CODE" TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN THE CSR.CODE FILE"
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN THE SHIP.VIA FILE"
OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG = "CANNOT OPEN THE SALES.CODE FILE"
OPEN "","GANG.JOB" TO GANG.JOB ELSE ERRMSG = "CANNOT OPEN THE GANG.JOB FILE"
OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN THE ESTIMATE FILE"
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "CANNOT OPEN THE DIVISION FILE"
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG = "CANNOT OPEN THE JOB.FNGD.STATS FILE"
OPEN "","SECURITY" TO SECURITY ELSE ERRMSG = "CANNOT OPEN THE SECURITY FILE"
OPEN "","CREDIT.AUTH.CODE" TO CREDIT.AUTH.CODE ELSE ERRMSG = "CANNOT OPEN THE CREDIT.AUTH.CODE FILE"
OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG = "CANNOT OPEN THE JOB.CATEGORY FILE"
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN THE CONTROL FILE"
********************************************
ERRMSG = ""
ERRMSG1 = ""
PRIOR.EST = ""
JFS.PROD = ""; JFS.M.QTY = ""; JFS.F.QTY = ""; JFS.S.QTY = ""
ORDNO = ""; WEBSERVICE = "";ECD.RET.VALUE = ""; ECD.VALDAT.ITEM = ""
MAT DIV.REC ="";MAT JFS.REC =""
DIM SAVE.JOB(JOB.REC.SIZE)
DIM EST.PAR(10)
******INPUTS v
CONO = INPUTSTR<1>
JOBNO = INPUTSTR<2>
JOB.ESTIMATE = INPUTSTR<3>
JOB.CUSTOMER = INPUTSTR<4>
JOB.DIVISION = INPUTSTR<5>
JOB.SALESMAN = INPUTSTR<6>
JOB.CSRCODE = INPUTSTR<7>
JOB.TYP = INPUTSTR<8>
JOB.MASTER = INPUTSTR<9>
JOB.SALESCODE = INPUTSTR<10>
JOB.CTGRY = INPUTSTR<11>
JOB.SHIPVIA = INPUTSTR<12>
JOB.CUSTPO = INPUTSTR<13>
JOB.ESTCOST = INPUTSTR<14>
JOB.QUOTEDAMT = INPUTSTR<15>
JOB.MRKUP = INPUTSTR<16>
JOB.CLRS = INPUTSTR<17>
JOB.ORDERED = INPUTSTR<18>
*JOB.FINISHED ;*JOB.SHIPPED 
JOB.DUEDATE = INPUTSTR<19>
JOB.PRIORJOB = INPUTSTR<20>
JOB.PRICEADDLM = INPUTSTR<21>
AUTH.CODE = INPUTSTR<22>
JOB.COMNT1 = INPUTSTR<23>
*JOB.COMNT1 = FIELD(INPUTSTR<23>,VM,1)
*JOB.COMNT2 = FIELD(INPUTSTR<23>,VM,2)
JOB.DESCRIPTION = INPUTSTR<24>
******INPUTS ^
******Converting to ICONV format v
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
SWAP "." WITH "" IN JOB.QUOTEDAMT
SWAP "." WITH "" IN JOB.ORDERED
*SWAP "." WITH "" IN JOB.FINISHED
*SWAP "." WITH "" IN JOB.SHIPPED
SWAP "." WITH "" IN JOB.ESTCOST
SWAP "." WITH "" IN JOB.MRKUP
SWAP "." WITH "" IN JOB.PRICEADDLM
IF JOB.QUOTEDAMT + 0 = 0 THEN JOB.QUOTEDAMT = 0 
IF JOB.ORDERED + 0 = 0 THEN JOB.ORDERED = 0
IF JOB.ESTCOST + 0 = 0 THEN JOB.ESTCOST = 0
IF JOB.MRKUP + 0 = 0 THEN JOB.MRKUP = 0
IF JOB.PRICEADDLM + 0 = 0 THEN JOB.PRICEADDLM = 0
JOB.DUEDATE = ICONV(JOB.DUEDATE,"D2/")
******Converting to ICONV format ^
*    USER.ID = "WEBSERVICE"
*   PORT.NO = 'TTY'
*   CALL SYSVARS.SUB(PORT.NO)
*   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = USER.ID
*   OPER.ID = OCONV(PORT.NO,'MCN'):"!":OPER.ID
    OPER.ID = "WebService!WebService"
   TODAY = DATE()
*
*Job Number
*
110*
   IF JOBNO = "N" THEN
      NEWJOB = 1 
      MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
      GOSUB 710
      IF ERR.FLG THEN GOTO 100
   END ELSE
      MATREADU JOB.REC FROM JOB, CONO:JOBNO LOCKED
         ERRSTR<-1> = 'JOB ': JOBNO :' record is locked by user - ':GETUSERNAME(STATUS())
	 GOTO 100
      END THEN
         ERRSTR<-1> = 'Job number':JOBNO:' already exists!'
	 GOTO 100
   END
   GOTO 710
100*
RETURN
710*
   FLG = "N"; ERR.FLG = 0
   MAT JOB.REC = ""
   JOB.TRACK.DATE<1,2> = TODAY
     IF JOB.STATUS<1,1> = "" THEN
         STATUS = "BOOKED"
     END
   NEW.EST = 1
*
*Estimate
*
1100*
   BEGIN CASE
      CASE (JOB.ESTIMATE # "" AND CO.JES = "Y") OR (JOB.ESTIMATE = '' AND PRIOR.EST # '' AND CO.JES = 'Y')
         IF JOB.ESTIMATE # '' THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:JOB.ESTIMATE ELSE
               ERRSTR<-1> = "Invalid Estimate ID. Try again! "
            END
*T20699 v
            IF JOB.DIV # "" THEN
               CHK.EST.DIV = FIELD(EST.DIV,"-",1)
               IF JOB.DIV # CHK.EST.DIV THEN
                  ERRSTR<-1>="Est Div of ":CHK.EST.DIV:" does not match Job Div. Enter <RETURN>"
               END
            END
*T20699 ^         
            IF EST.JOB # "" THEN
               IF JOB.MASTER # "" AND EST.JOB # JOB.MASTER THEN
                  ERRSTR<-1> = "Estimate belongs to another Master Job"
               END
            END
            IF EST.STATUS<1,1> = "LOST" THEN
               ERRSTR<-1> = "Estimate was defined as lost on ":OCONV(EST.STAT.DATE<1,1>,"D2/"):". Try again! "
            END
***** T24035 v
         END ELSE
            JOB.EST.COST = ''; JOB.CONF.AMT = ''
            JOB.EST.SALE = ''; JOB.PRICE.PER.THOU = ''
***** T24035 ^
         END
*         ESTAT = 0      ;*T22154 <
*         BEGIN CASE
*            CASE NEW.EST
*               CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*               IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100;* T21079
*               NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0
*               CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST # '' AND JOB.ESTIMATE = ''
*               JOB.EST = ''
*               CALL JOB.BOOK.SUB(CONO,"4",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST = JOB.ESTIMATE
*               CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST # JOB.ESTIMATE
*               CALL JOB.BOOK.SUB(CONO,"6",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*         END CASE
         JOB.EST = JOB.ESTIMATE
         PRIOR.EST = JOB.ESTIMATE
      CASE JOB.ESTIMATE # "" AND CO.JES # "Y"
         JOB.EST = JOB.ESTIMATE
         PRIOR.EST = JOB.ESTIMATE
   END CASE
1199 
*
*Customer
*
1200*
  MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUSTOMER ELSE
       ERRSTR<-1> = "CUSTOMER ":JOB.CUSTOMER:" IS MISSING"
  END
  IF JOB.CUSTOMER # "END" THEN
    IF CUST.TYPE = "F" THEN
       ERRSTR<-1> = "Customer Type is Frozen - Cannot Enter Job"
       GOTO 1299
    END
    IF CUST.CREDIT = "DEL" THEN
       ERRSTR<-1> = 'This customer has credit code "DEL", cannot enter a Job for this customer.'
       GOTO 1299
    END
  END
   IF JOB.MASTER # JOBNO AND JOB.MASTER # "" THEN
      MAT SAVE.JOB = MAT JOB.REC
      MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER ELSE
         ERRSTR<-1> = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER
      END
      MASTER.CUST = JOB.CUST
      MAT JOB.REC = MAT SAVE.JOB
      IF JOB.CUSTOMER # MASTER.CUST THEN
         ERRSTR<-1> = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CUST
      END
   END
   IF CUST.CREDIT = "N" THEN
      ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
   END
   JOB.CUST = JOB.CUSTOMER
1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
1299 
*
*Division
*
1300 *
      IF JOB.DIVISION # "END" THEN
         MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIVISION ELSE
            ERRSTR<-1> = "INVALID DIVISION"
         END
*T23278 v
*         DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
*         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
*         IF ERRMSG # '' THEN
*            ERRSTR<-1> = ERRMSG
*         END
*T23278 ^
         JOB.DIV = JOB.DIVISION
      END
*
* Sales man
*
1400 *
   IF JOB.SALESMAN # "END" THEN
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SALESMAN ELSE
         ERRSTR<-1> = "Cannot locate salesman # ":JOB.SALESMAN
      END
      JOB.SLSMN = JOB.SALESMAN
   END
*
* CSR Code
*
1450 * 
   *IF JOB.CSR = "" THEN ECD.DEFAULT = CUST.CSR.CODE
   MATREAD CSR.REC FROM CSR.CODE, CONO:JOB.CSRCODE ELSE
      ERRSTR<-1> = "Cannot locate Service Rep # ":JOB.CSRCODE
   END
   JOB.CSR = JOB.CSRCODE
*
1500 
   IF JOB.TYP # "END" THEN
      JOB.TYPE = JOB.TYP
   END
*
1600 
   IF JOB.SUBS # "" THEN
      JOB.MASTER = JOBNO
   END
   IF JOB.MASTER = "" THEN JOB.MASTER = JOBNO
   BEGIN CASE
      CASE JOB.MASTER = JOBNO
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            EJ.CNT = DCOUNT(EST.BOOK.JOB,VM)
            OTHER.JOBS = 0
            FOR J = 1 TO EJ.CNT UNTIL OTHER.JOBS
               IF JOBNO # EST.BOOK.JOB<1,J> THEN OTHER.JOBS = 1
            NEXT J
            IF OTHER.JOBS THEN
               IF JOB.MASTER # EST.JOB AND EST.JOB # "" THEN
                  ERRSTR<-1> = "Estimate belongs to Master Job ":EST.JOB:"."
               END
            END
         END
         JOB.MASTER = JOBNO
         GOTO 1699
      CASE 1
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            IF JOB.MASTER # EST.JOB AND EST.JOB # "" THEN
               IF EST.JOB # JOBNO THEN
                  ERRSTR<-1> = "Estimate has a different Master Job number."
               END
            END
         END
         MAT SAVE.JOB = MAT JOB.REC
         FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
         MASTER.CUST = JOB.CUST
         MASTER.JOB = JOB.MASTER
         MAT JOB.REC = MAT SAVE.JOB
         IF JOB.CUST # MASTER.CUST THEN
            ERRSTR<-1> = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.CUST
         END
   END CASE
1699 
*
*Sales Code
*
1700 
*   IF LEN(JOB.SALESCODE) < 1 OR LEN(JOB.SALESCODE) > 5 THEN GOTO 1700
   IF LEN(JOB.SALESCODE) = 1 THEN
      IF SALS.COMM.PCT + 0 = 0 THEN JOB.SALESCODE = JOB.SALESCODE:"H" ELSE JOB.SALESCODE = JOB.SALESCODE:"C"
   END
   IF LEN(JOB.SALESCODE) = 2 THEN JOB.SALESCODE = JOB.SALESCODE:CUST.TYPE
   MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALESCODE ELSE    ;* T26973
      ERRSTR<-1> = "SALES CODE ":JOB.SALESCODE:" IS NOT ON FILE"
   END
   JOB.SALES.CODE = JOB.SALESCODE
1799* 
*
*Category Code
*
1800*
   IF JOB.CTGRY # "END" THEN
      REC = ""
      READ REC FROM JOB.CATEGORY, CONO:JOB.CTGRY ELSE
         ERRSTR<-1> = "JOB CATEGORY CODE ":JOB.CTGRY:" IS NOT ON FILE"
      END
      JOB.CATG = JOB.CTGRY
   END
*
*ShipVia Code
*
1900* 
   IF JOB.SHIPVIA # "END" THEN
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIPVIA ELSE
         ERRSTR<-1> = "Cannot locate ship via # ":JOB.SHIPVIA
      END
      JOB.SHIP.VIA = JOB.SHIPVIA
   END
*
*Customer PO #
*
2000* 
   IF JOB.CUSTPO # "END" THEN JOB.CUST.PO = JOB.CUSTPO
*
*Estimate Cost
*
2100*
   IF JOB.EST = "" OR CO.JES = "N" THEN
      IF JOB.ESTCOST # "END" THEN JOB.EST.COST = JOB.ESTCOST
   END
*
*Quoted Amount
*
2200* 
   IF JOB.QUOTEDAMT # "END" THEN
      JOB.CONF.AMT = JOB.QUOTEDAMT
      JOB.EST.SALE = JOB.QUOTEDAMT
      *IF FLG = 'O' THEN GOSUB 3100
   END
*
*Markup Percent
*
2300* 
   JOB.MARKUP = JOB.MRKUP
*
*Color
*
2400* 
   JOB.COLORS = JOB.CLRS
*
* Ordered Qty
*
2500* 
   IF JFS.PROD = "" THEN
      JOB.QTY<1,1> = JOB.ORDERED
   END ELSE
      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
   END
*
* Finished Qty
*
*2600* 
*   IF JFS.PROD = "" THEN
*      JOB.QTY<1,2> = JOB.FINISHED
*   END ELSE
*      JOB.QTY<1,2> = SUM(JFS.F.QTY) / 1000
*   END
**
** Shipped Qty
**
*2700* 
*   IF JFS.PROD = "" THEN
*      JOB.QTY<1,3> = JOB.SHIPPED
*   END ELSE
*      JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
*   END
**
* Due Date
*
2800* 
   ECD.MINV = JOB.TRACK.DATE<1,2>
   ECD.MAXV = ECD.MINV + 700
      JOB.TRACK.DATE<1,4> = JOB.DUEDATE
*
* Prior Job
*
2900* 
   JOB.PRIOR.JOB = JOB.PRIORJOB
*
* Price Per Thousand
*
3000* 
   JOB.PRICE.PER.THOU = JOB.PRICEADDLM
*
*Authorization code
*
   IF AUTH.CODE # "END" THEN
      READ TREC FROM CREDIT.AUTH.CODE, CONO:AUTH.CODE THEN
         JOB.CREDIT = AUTH.CODE:"!":OPER.ID
      END ELSE
         ERRSTR<-1> = 'Invalid credit authorization code'
      END
   END  
3149 
3200* 
   JOB.COMMENTS = JOB.COMNT1
*   JOB.COMMENTS<1,2> = JOB.COMNT2
4000*
*   FOR N = 1 TO DCOUNT(JOB.DESCRIPTION,VM)
*	JOB.DESC<1,N> = JOB.DESCRIPTION<1,N>
*   NEXT N
   JOB.DESC = JOB.DESCRIPTION
*
*  Write Job Data
*
   IF JOBNO = "" OR JOBNO = "N" THEN
      GOSUB GET.JOB.NO
   END
   IF JOB.MASTER = "" OR JOB.MASTER = "N" THEN
      JOB.MASTER = JOBNO
   END
   MATWRITE JOB.REC ON JOB,CONO:JOBNO
*   XMLSTR = "JOB# ":JOBNO:" IS CREATED SUCCESSFULLY"
    XMLSTR = "<Payload><Job><CompanyNo>":CONO:"</CompanyNo><JobNo>":JOBNO:"</JobNo></Job></Payload>"
RETURN  
********************************
*
*Job Status
*
*
* Quoted Amount
*
3100*
   QUOTED.AMT = 0
   IF ORDNO # "" OR JFS.PROD # "" THEN
      GOTO 3149
   END
   LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
      IF JOB.TOT.INV > 0 THEN
         QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
      END ELSE
         QUOTED.AMT = JOB.CONF.AMT
      END
      IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
   END
  * IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN
  *    GOSUB 1250
  * END
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - CUR.ORD.BAL - QUOTED.AMT
         IF AVAIL < 0 THEN
            ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG1 = ERRMSG1:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
            ERRMSG1 = ERRMSG1:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")
	    ERRSTR<-1> = ERRMSG1
         END ELSE
            GOTO 3149
         END
      CASE 1
         ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG1 = ERRMSG1:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
         ERRMSG1 = ERRMSG1:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
	 ERRSTR<-1> = ERRMSG1
   END CASE
RETURN
*
30100 ERRMSG = ""
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRSTR<-1> = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
   END
   CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
RETURN
*
* GET NEW JOBNO
*
GET.JOB.NO: 
  JOBNO="N"
  READU JOBNO FROM CONTROL, CONO:"JOBNO" ELSE
    JOBNO = 10000
  END
  LOOP
    FND = 1
    JOBNO = JOBNO + 1
    IF JOBNO > 99999 THEN JOBNO = 1
      READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0
    WHILE FND DO
      RELEASE JOB, CONO : JOBNO
  REPEAT
  WRITE JOBNO ON CONTROL, CONO:"JOBNO"
*  ERRMSG = "Please Note Assigned Job Number : ":JOBNO
*  XMLSTR = ERRMSG
  JOBID=JOBNO
RETURN
*
* WRITING ERROR TO WSE_LOG FILE
*
99999*
IF ERRSTR <> "" THEN
  ERRMSG = WEBSERVICE:"---> JCS_WRITEJOB---> " : ERRMSG
  CALL WRITELOG(ERRMSG)
END
RETURN
END
