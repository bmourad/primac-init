SUBROUTINE JCS_JOB_READDATA(CONO, JOBID, ERRMSG, OUT_PARAM_JOBLIST,SCHEMA.ONLY)
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE PMC.CPYLIB SHIP.VIA  
$INCLUDE PMC.CPYLIB SALES.CODE
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE POS.CPYLIB OUTSIDE.PO
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
*    
OUT_PARAM_JOBLIST ='<JobData><Job><JobStatus></JobStatus><EstimateID></EstimateID><Customer></Customer><CustomerName></CustomerName><Division></Division><DivisionDesc></DivisionDesc><SalesRep></SalesRep><SalesRepDesc></SalesRepDesc><CustScv></CustScv><CustScvDesc></CustScvDesc><JobType></JobType><JobTypeDesc></JobTypeDesc><MasterJob></MasterJob><SalesCode></SalesCode><SalesCodeDesc></SalesCodeDesc><JobCatg></JobCatg><JobCatgDesc></JobCatgDesc><ShipVia></ShipVia><ShipViaDesc></ShipViaDesc><CustPO></CustPO><SubJobs></SubJobs><Estimate></Estimate><Quoted></Quoted><MarkUp></MarkUp><Colors></Colors><Ordered></Ordered><Finished></Finished><Shipped></Shipped><DueDate></DueDate><PriorJob></PriorJob><AddlM></AddlM><CredAuth></CredAuth><Comments></Comments><JobDesc></JobDesc><Product></Product><ProductDesc></ProductDesc><Warehouse></Warehouse><TYPE></TYPE><RsvDate></RsvDate><UM></UM><Allocated></Allocated><Reserved></Reserved><UsedQty></UsedQty><Estimated></Estimated><OrderedDate></OrderedDate><Proof></Proof><Due></Due><ProdStarted></ProdStarted><FinalDelivery></FinalDelivery><PassedtoBill></PassedtoBill><Costed></Costed><LastInvoice></LastInvoice><Completed></Completed><WTYPE></WTYPE><WstPr></WstPr><WLstPr></WLstPr><WDirect></WDirect><WVarOH></WVarOH><WFixOH></WFixOH><WSA></WSA><WTotal></WTotal><RTYPE></RTYPE><RstPr></RstPr><RLstPr></RLstPr><RDirect></RDirect><RVarOH></RVarOH><RFixOH></RFixOH><RSA></RSA><RTotal></RTotal><JobStat></JobStat><JStatusDate></JStatusDate><PoNumber></PoNumber><VendNo></VendNo><Categ></Categ><ExpDate></ExpDate><LastRec></LastRec><OpenQty></OpenQty><OpenAmt></OpenAmt><ReqDate></ReqDate><UNPrice></UNPrice><ReqQty></ReqQty><Bal></Bal><Item></Item><ItemDesc></ItemDesc><FGWhse></FGWhse><FGUM></FGUM><FGUnitPrice></FGUnitPrice><FGManf></FGManf><FGDueDate></FGDueDate><FGAloc></FGAloc><FGOrd></FGOrd><FGFin></FGFin><FGBal></FGBal><GJOBIW></GJOBIW><GJOBIL></GJOBIL><GJOBALLOC></GJOBALLOC><GJOBDESC></GJOBDESC><GJAllocSqIn></GJAllocSqIn><GJAllocSpots></GJAllocSpots><GJAllocWaste></GJAllocWaste><GJOBJOB></GJOBJOB></Job></JobData>'
SCHEMA.ONLY = 1
STRXML=''
ERRMSG=''
JOB_STATUS = ''
JOB_CAT_DESC = ''
JOB_TYPE_DESC = ''
XYZ = ''
WIP.LINE=""
JOB_STAT_DATE =''
STAT =''
PCNT = 0
RQD.DATE.MV = 1
RQD.AMT.MV = 2
RQD.QTY.MV = 3
IJS_REQ_DATE=''
IJS_REQ_AMT=''
IJS_REQ_QTY=''
REQDQ = ''
BALANCE =''
JFS_U_PRICE = ''
JFS_M_QTY = ''
JFS_A_QTY = ''
JFS_F_QTY=''
VAR=''
JFS_DATE=''
JFS_ORDER=''
FBAL =''
BAL=''
INV_UNT = ''
FGUM=''
INV_F_DESC=''
FGINV_DESC =''
INV.REC.VALS =''
GJOB_WIDTH=''
GJOB_LENGTH = ''
SqIn=''
Spots = ''
Waste = ''
JSTAT=''
AUTHORIZATION.REQUIRED = ''
CAPromptMsg = ''
JOB_RESV_DATE = ''
UNKNOWN = '????????????????????'
*   FIELDS.ACC = ""
*   FIELDS.ACC1 = ""
*   FIELDS.ACC2 = ""
**CSF 25227 v SHIFT FIELDS DOWN 1 DUE TO CUST.SVC REP NOW #5.
*   FIELDS.ACC1<1,1> = 9
*   FIELDS.ACC1<1,2> = 10
*   FIELDS.ACC1<1,3> = 11
*   FIELDS.ACC1<1,4> = 15
*   FIELDS.ACC1<1,5> = 17
*   FIELDS.ACC1<1,6> = 18
*   FIELDS.ACC1<1,7> = 20
*   FIELDS.ACC1<1,8> = 21
*   FIELDS.ACC1<1,9> = 23
*   FIELDS.ACC2<1,1> = 11
*   FIELDS.ACC2<1,2> = 17
*   FIELDS.ACC2<1,3> = 18
*   FIELDS.ACC2<1,4> = 23
**CSF 25227 ^
*   FIELDS.ACC2<1,5> = 1
FIELDS.ACC = ""
FIELDS.ACC1 = ""
FIELDS.ACC2 = ""
*
FIELDS.ACC1<1,1> = "JOB_CATG"
FIELDS.ACC1<1,2> = "JOB_SHIP_VIA"
FIELDS.ACC1<1,3> = "JOB_CUST_PO"
FIELDS.ACC1<1,4> = "JOB_COLORS"
FIELDS.ACC1<1,5> = "JOB_FIN_QTY"
FIELDS.ACC1<1,6> = "JOB_SHP_QTY"
FIELDS.ACC1<1,7> = "JOB_PRIOR_JOB"
FIELDS.ACC1<1,8> = "JOB_PRICE_PER_THOU"
*FIELDS.ACC1<1,9> = "Comment"
*
FIELDS.ACC2<1,1> = "JOB_CUST_PO"
FIELDS.ACC2<1,2> = "JOB_FIN_QTY"
FIELDS.ACC2<1,3> = "JOB_SHP_QTY"
*FIELDS.ACC2<1,4> = "Comment"
FIELDS.ACC2<1,4> = "JOB_EST"
  DEFFUN JCS_CALC_STK_QTY_WS (COST.QTY,MAT INV.CNV.REC,ROND,LN)
  DEFFUN JCS_CALC_COST_QTY_WS (STK.QTY,MAT INV.CNV.REC,ROND,LN)
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 99999
OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = 'SALESMAN FILE IS MISSING';GOTO 99999
OPEN '','JOB' TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE" ;GOTO 99999
OPEN '','ORDER' TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE" ;GOTO 99999
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE" ;GOTO 99999
OPEN '', 'CSR.CODE' TO CSR.CODE ELSE ERRMSG = 'CSR.CODE FILE IS MISSING'; GOTO 99999
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 99999
OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG = 'SALES.CODE FILE IS MISSING'; GOTO 99999    
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 99999
OPEN '', 'JOB.CATEGORY' TO JOB.CATEGORY ELSE ERRMSG = 'JOB.CATEGORY FILE IS MISSING'; GOTO 99999
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 99999
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 99999
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 99999
OPEN '', 'JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 99999
OPEN '', 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING'; GOTO 99999
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 99999
OPEN '', 'JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG = 'JOB.FNGD.STATS FILE IS MISSING'; GOTO 99999
OPEN '','GANG.JOB' TO GANG.JOB ELSE ERRMSG = 'GANG.JOB FILE IS MISSING'; GOTO 99999
XYZ<1> = "JCS_GETJOBLIST ";WRITE XYZ ON CONTROL,'01TST'
* READ THE COMPANY CODE
MATREAD COMP.REC FROM COMPANY,CONO ELSE
    ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
    GOTO 99999
END
MATREAD JOB.REC FROM JOB, CONO:JOBID THEN
XYZ<-1> = "STAGE 1 ":JOB.SLSMN;WRITE XYZ ON CONTROL,'01TST'
	MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE
		MAT SALESMAN.REC = ''
		 SALS.NAME = UNKNOWN
	END
XYZ<-1> = "STAGE 2 ":JOB.RESV.MATL;WRITE XYZ ON CONTROL,'01TST'
	 LINES=DCOUNT(JOB.RESV.MATL,VM)
	  FOR LN = 1 TO LINES
		 MATREAD INV.REC FROM INVENTORY, CONO:JOB.RESV.MATL<1,LN> ELSE
		    MAT INV.REC = ''
		    INV.FULL.DESC = UNKNOWN
		 END
		 MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
		    MAT CATG.REC = ""
		 END
XYZ<-1> = "STAGE 3 B4 GOSUB 8000 ":JOB.RESV.MATL;WRITE XYZ ON CONTROL,'01TST'
 		 GOSUB 8000
XYZ<-1> = "STAGE 4 AFTER GOSUB 8000 ":JOB.RESV.MATL;WRITE XYZ ON CONTROL,'01TST'
		 *IF SAVE.INV.JS.REC<LN> = '' THEN
			    JSTAT.ID = JOB.RESV.MATL<1,LN>:"!":JOB.RESV.WHSE<1,LN>:"!":JOBID
			    MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
			       MAT INV.JS.REC = ''
			    END
			    IJS_REQ_DATE<1,LN>=OCONV(IJS.REQ.DATE,"D2/")
			    IJS_REQ_AMT<1,LN> =  OCONV(IJS.REQ.AMT,"MD4")
			    REQDQ = INT(((IJS.REQ.QTY/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> + .5)
			    IJS_REQ_QTY<1,LN>=OCONV(REQDQ,ICR.CNV<LN>)
			 *END
		BALANCE = IJS.REQ.QTY - JOB.ALOC.QTY<1,LN>-JOB.RESV.QTY<1,LN>-JOB.USED.QTY<1,LN>
	      IF BALANCE >= 0 THEN
		 BALANCE_VAL = INT(((BALANCE/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> + .5)
		 FBALANCE<1,LN>= OCONV(BALANCE_VAL,ICR.CNV<LN>)
	      END ELSE
		 BALANCE = 0
		FBALANCE<1,LN> = OCONV(BALANCE,ICR.CNV<LN>)
	      END
		IF JOB.RESV.DATE<1,LN> # "" THEN JOB_RESV_DATE<1,LN> = OCONV(JOB.RESV.DATE<1,LN>,"D2/")
	 NEXT LN
     XYZ<-1>="JOB_RESV_DATE ":JOB_RESV_DATE;WRITE XYZ ON CONTROL,'01TST'
	 MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIP.VIA ELSE SHPV.DESC = UNKNOWN
	 MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBID ELSE MAT JFS.REC = ""
	 MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE DIV.DESC = UNKNOWN
	  MATREAD CSR.REC FROM CSR.CODE,CONO:JOB.CSR ELSE MAT CSR.REC = ''
	  MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE MAT SLC.REC = ''
	  IF JOB.CATG # "" THEN
		REC = ""
		READ REC FROM JOB.CATEGORY, CONO:JOB.CATG ELSE REC = UNKNOWN
		JOB_CAT_DESC = REC<1>
	 END
* XYZ<2> = "JOB.WIP   ":JOB.WIP;WRITE XYZ ON CONTROL,'01TST'
	 IF JOB.SHIP.VIA = "" THEN JOB.SHIP.VIA = CUST.SHIP.VIA
	 READV CUST.NAME FROM CUSTOMER,CONO:JOB.CUST, 1 ELSE CUST.NAME=''
	* WIP.HEAD = "Job Total":VM:"Labor":VM:"Material":VM:"O. Purchases":VM:"Shipping":VM:"Misc / Other"
	 WIP.HEAD = "Job Total ~ Labor ~ Material ~ O. Purchases ~ Shipping ~ Misc / Other"
         WIP.LINE =JOB.WIP:"~":JOB.LB.WIP:"~":JOB.MT.WIP:"~":JOB.OS.WIP:"~":JOB.SP.WIP:"~":JOB.MS.WIP
         REV.HEAD ="Job Total ~ Labor ~ Material ~ O. Purchases ~ Shipping ~ Misc / Other"
         REV.LINE =JOB.WIP:"~":JOB.LB.WIP:"~":JOB.MT.WIP:"~":JOB.OS.WIP:"~":JOB.SP.WIP:"~":JOB.MS.WIP
	 *TOT.WIP = WIP.LINE<1,2,1> + WIP.LINE<1,2,2> + WIP.LINE<1,2,3> + WIP.LINE<1,2,4>
	 *TOT.REV = REV.LINE<1,3,1> + REV.LINE<1,3,2> + REV.LINE<1,3,3> + REV.LINE<1,3,4>
 * XYZ<3> = "WIP.LINE   ":WIP.LINE ; WRITE XYZ ON CONTROL,'01TST'
	 FOR J = 1 TO DCOUNT(WIP.LINE,"~")
	      TEMP.WJOB = FIELD(WIP.LINE,"~",J) 
	      TEMP.RJOB =FIELD(REV.LINE,"~",J) 
    *XYZ<-1> = "TEMP.WJOB  ":TEMP.WJOB:"TEMP.RJOB  ":TEMP.RJOB;WRITE XYZ ON CONTROL,'01TST'
              W.stPr<1,J>  = TEMP.WJOB<1,4>
	      W.LstPr<1,J> =  TEMP.WJOB<1,5>
*  XYZ<-1> = "W.stPr<1,J>  ":W.stPr<1,J>:"W.LstPr<1,J>  ":W.LstPr<1,J>;WRITE XYZ ON CONTROL,'01TST'
	      W.Direct<1,J>= OCONV(TEMP.WJOB<1,2,1>,"MD2,")
	      W.VarOH<1,J>= OCONV(TEMP.WJOB<1,2,3>,"MD2,") 
	      W.FixOH<1,J> = OCONV(TEMP.WJOB<1,2,2>,"MD2,")
	      W.SA<1,J>	   =OCONV(TEMP.WJOB<1,2,4>,"MD2,") 
	      TOT.WIP = TEMP.WJOB<1,2,1> + TEMP.WJOB<1,2,2> + TEMP.WJOB<1,2,3> + TEMP.WJOB<1,2,4>
	      TOT.REV = TEMP.RJOB<1,3,1> + TEMP.RJOB<1,3,2> + TEMP.RJOB<1,3,3> + TEMP.RJOB<1,3,4>
*	XYZ<-1> = "TOT.REV = ":TEMP.RJOB<1,3,1>:" + ":TEMP.RJOB<1,3,2>:" + ":TEMP.RJOB<1,3,3>:" + ":TEMP.RJOB<1,3,4>;WRITE XYZ ON CONTROL,'01TST'
*	XYZ<-1> = "TOT.REV VAL = ":TOT.REV;WRITE XYZ ON CONTROL,'01TST'
	      W.Total<1,J> = OCONV(TOT.WIP,"MD2,") 
	      R.stPr<1,J>  = TEMP.RJOB<1,4>
	      R.LstPr<1,J> = TEMP.RJOB<1,5>
	      R.Direct<1,J>= OCONV(TEMP.RJOB<1,3,1>,"MD2,")
	      R.VarOH<1,J>= OCONV(TEMP.RJOB<1,3,3>,"MD2,") 
	      R.FixOH<1,J> = OCONV(TEMP.RJOB<1,3,2>,"MD2,")
	      R.SA<1,J>	   =OCONV(TEMP.RJOB<1,3,4>,"MD2,") 
	      R.Total<1,J> = OCONV(TOT.REV,"MD2,") 
	NEXT J
	*****CA MSG
        GOSUB 6000
	*****OP TAB
         GOSUB 9000
	*****FG TAB
	 GOSUB 10000
	 IF JFS.PROD # "" THEN
	      ORD_JOB_QTY = SUM(JFS.M.QTY) / 1000
	 END ELSE
              ORD_JOB_QTY = JOB.QTY<1,1>
	 END
	 IF JFS.PROD # "" THEN
		 FIN_JOB_QTY = SUM(JFS.F.QTY) / 1000
	 END ELSE
		FIN_JOB_QTY = JOB.QTY<1,2>
	 END
	 IF JFS.PROD # "" THEN
		SHP_JOB_QTY = SUM(JFS.S.QTY) / 1000
	 END ELSE
		SHP_JOB_QTY = JOB.QTY<1,3>
	 END
	 *****G
	 GOSUB 11000
	 *****
	 OUT_PARAM_JOBLIST = '<JobData>'
		  GOSUB 20000
		  GOSUB 1400;GOSUB 1500;GOSUB 1600;GOSUB 1700;GOSUB 1800;GOSUB 1900;GOSUB 2000;GOSUB 2100;GOSUB 2200
		  SCHEMA.ONLY = 0
		  STRXML := '<Job>'
		  STRXML := '<JobStatus>' : JOB_STATUS : '</JobStatus>'
		  STRXML := '<EstimateID>' : JOB.EST : '</EstimateID>'
		  STRXML := '<Customer>' : JOB.CUST : '</Customer>'
		  STRXML := '<CustomerName>' : CUST.NAME : '</CustomerName>'
		  STRXML := '<Division>' : JOB.DIV : '</Division>'
		  STRXML := '<DivisionDesc>' : DIV.DESC : '</DivisionDesc>'
		  STRXML := '<SalesRep>' : JOB.SLSMN : '</SalesRep>'
		  STRXML := '<SalesRepDesc>' : SALS.NAME : '</SalesRepDesc>'
		  STRXML := '<CustScv>' : JOB.CSR : '</CustScv>'
		  STRXML := '<CustScvDesc>' : CSR.DESC : '</CustScvDesc>'
		  STRXML := '<JobType>' : JOB.TYPE : '</JobType>'
		  STRXML := '<JobTypeDesc>' : JOB_TYPE_DESC : '</JobTypeDesc>'
		  STRXML := '<MasterJob>' : JOB.MASTER : '</MasterJob>'
		  STRXML := '<SalesCode>' : JOB.SALES.CODE : '</SalesCode>'
		  STRXML := '<SalesCodeDesc>' : SLC.DESC : '</SalesCodeDesc>'
		  STRXML := '<JobCatg>' : JOB.CATG : '</JobCatg>'
		  STRXML := '<JobCatgDesc>' : JOB_CAT_DESC : '</JobCatgDesc>'
		  STRXML := '<ShipVia>' : JOB.SHIP.VIA : '</ShipVia>'
		  STRXML := '<ShipViaDesc>' : SHPV.DESC : '</ShipViaDesc>'
		  STRXML := '<CustPO>' : JOB.CUST.PO : '</CustPO>'
		  STRXML := '<SubJobs>' : JOB.SUBS : '</SubJobs>'
		  STRXML := '<Estimate>' : OCONV(JOB.EST.COST,"MD2") : '</Estimate>'
		  STRXML := '<Quoted>' : OCONV(JOB.CONF.AMT,"MD2") : '</Quoted>'
		  STRXML := '<MarkUp>' : OCONV(JOB.MARKUP,"MD2") : '</MarkUp>'
		  STRXML := '<Colors>' : JOB.COLORS : '</Colors>'
		  STRXML := '<Ordered>' : ORD_JOB_QTY : '</Ordered>'
		  STRXML := '<Finished>' : FIN_JOB_QTY : '</Finished>'
		  STRXML := '<Shipped>' : SHP_JOB_QTY : '</Shipped>'
		  STRXML := '<DueDate>' : OCONV(JOB.TRACK.DATE<1,4>,"D2/") : '</DueDate>'
		  STRXML := '<PriorJob>' : JOB.PRIOR.JOB : '</PriorJob>'
		  STRXML := '<AddlM>' : OCONV(JOB.PRICE.PER.THOU,"MD2") : '</AddlM>'
		  STRXML := '<CredAuth>' : JOB.CREDIT : '</CredAuth>'
		  STRXML := '<Comments>' : JOB.COMMENTS<1,1>:VM:JOB.COMMENTS<1,2> : '</Comments>'
		  STRXML := '<JobDesc>' : JOB.DESC : '</JobDesc>'
		  STRXML := '<Product>' : JOB.RESV.MATL : '</Product>'
		  STRXML := '<ProductDesc>' : MATL.DESC : '</ProductDesc>'
		  STRXML := '<Warehouse>' : JOB.RESV.WHSE : '</Warehouse>'
		  STRXML := '<TYPE>' : MATL.TYPE : '</TYPE>'
STRXML := '<RsvDate>' : JOB_RESV_DATE : '</RsvDate>'
		  STRXML := '<UM>' : MATL.UM : '</UM>'
		  STRXML := '<Allocated>' : TMP.JOB.ALOC.QTY : '</Allocated>'
		  STRXML := '<Reserved>' : TMP.JOB.RESV.QTY : '</Reserved>'
		  STRXML := '<UsedQty>' : TMP.JOB.USED.QTY : '</UsedQty>'
		  STRXML := '<Estimated>' : OCONV(JOB.TRACK.DATE<1,1>,"D2/") : '</Estimated>'
		  STRXML := '<OrderedDate>' : OCONV(JOB.TRACK.DATE<1,2>,"D2/") : '</OrderedDate>'
		  STRXML := '<Proof>' : OCONV(JOB.TRACK.DATE<1,3>,"D2/") : '</Proof>'
		  STRXML := '<Due>' : OCONV(JOB.TRACK.DATE<1,4>,"D2/") : '</Due>'
		  STRXML := '<ProdStarted>' : OCONV(JOB.TRACK.DATE<1,5>,"D2/") : '</ProdStarted>'
		  STRXML := '<FinalDelivery>' : OCONV(JOB.TRACK.DATE<1,6>,"D2/") : '</FinalDelivery>'
		  STRXML := '<PassedtoBill>' : OCONV(JOB.TRACK.DATE<1,7>,"D2/") : '</PassedtoBill>'
		  STRXML := '<Costed>' : OCONV(JOB.TRACK.DATE<1,8>,"D2/") : '</Costed>'
		  STRXML := '<LastInvoice>' : OCONV(JOB.TRACK.DATE<1,9>,"D2/") : '</LastInvoice>'
		  STRXML := '<Completed>' : OCONV(JOB.TRACK.DATE<1,10>,"D2/") : '</Completed>'
		  STRXML := '<WTYPE>' : WIP.HEAD : '</WTYPE>'
		  STRXML := '<WstPr>' : W.stPr : '</WstPr>'
		  STRXML := '<WLstPr>' : W.LstPr : '</WLstPr>'
		  STRXML := '<WDirect>' : W.Direct : '</WDirect>'
		  STRXML := '<WVarOH>' : W.VarOH : '</WVarOH>'
		  STRXML := '<WFixOH>' : W.FixOH : '</WFixOH>'
		  STRXML := '<WSA>' : W.SA : '</WSA>'
		  STRXML := '<WTotal>' : W.Total : '</WTotal>'
		  STRXML := '<RTYPE>' : REV.HEAD : '</RTYPE>'
		  STRXML := '<RstPr>' : R.stPr : '</RstPr>'
		  STRXML := '<RLstPr>' : R.LstPr : '</RLstPr>'
		  STRXML := '<RDirect>' : R.Direct : '</RDirect>'
		  STRXML := '<RVarOH>' : R.VarOH : '</RVarOH>'
		  STRXML := '<RFixOH>' : R.FixOH : '</RFixOH>'
		  STRXML := '<RSA>' : R.SA : '</RSA>'
		  STRXML := '<RTotal>' : R.Total : '</RTotal>'
		  STRXML := '<JobStat>' : STAT : '</JobStat>'
		  STRXML := '<JStatusDate>' : JOB_STAT_DATE : '</JStatusDate>'
		  STRXML := '<PoNumber>' : VAR : '</PoNumber>'
		  STRXML := '<VendNo>' : VEND.NO : '</VendNo>'
		  STRXML := '<Categ>' : PLINE : '</Categ>'
		  STRXML := '<ExpDate>' : EXP.DATE : '</ExpDate>'
		  STRXML := '<LastRec>' : DATE.RECVD : '</LastRec>'
		  STRXML := '<OpenQty>' : OPEN.QTY : '</OpenQty>'
		  STRXML := '<OpenAmt>' : OPEN.AMT : '</OpenAmt>'
		  STRXML := '<ReqDate>' : IJS_REQ_DATE : '</ReqDate>'
		  STRXML := '<UNPrice>' : IJS_REQ_AMT : '</UNPrice>'
		  STRXML := '<ReqQty>' : IJS_REQ_QTY : '</ReqQty>'
		  STRXML := '<Bal>' : FBALANCE : '</Bal>'
		  STRXML := '<Item>' : JFS.PROD : '</Item>'
		  STRXML := '<ItemDesc>' : FGINV_DESC : '</ItemDesc>'
		  STRXML := '<FGWhse>' : JFS.WHSE : '</FGWhse>'
		  STRXML := '<FGUM>' : FGUM : '</FGUM>'
		  STRXML := '<FGUnitPrice>' : JFS_U_PRICE : '</FGUnitPrice>'
		  STRXML := '<FGManf>' : JFS_M_QTY : '</FGManf>'
		  STRXML := '<FGDueDate>' : JFS_DATE : '</FGDueDate>'
		  STRXML := '<FGAloc>' : JFS_A_QTY : '</FGAloc>'
		  STRXML := '<FGOrd>' : JFS_ORDER : '</FGOrd>'
		  STRXML := '<FGFin>' : JFS_F_QTY : '</FGFin>'
		  STRXML := '<FGBal>' : FBAL : '</FGBal>'
		  STRXML := '<GJOBIW>' : OCONV(GJOB.IW,"MD2") : '</GJOBIW>'
		  STRXML := '<GJOBIL>' : OCONV(GJOB.IL,"MD2") : '</GJOBIL>'
		  STRXML := '<GJOBALLOC>' : GJOB.ALLOC : '</GJOBALLOC>'
		  STRXML := '<GJOBDESC>' : GJOB.DESC : '</GJOBDESC>'
		  STRXML := '<GJAllocSqIn>' : SqIn : '</GJAllocSqIn>'
		  STRXML := '<GJAllocSpots>' : Spots : '</GJAllocSpots>'
		  STRXML := '<GJAllocWaste>' : OCONV(Waste,"MD2")"R#7" : '</GJAllocWaste>'
		  STRXML := '<GJOBJOB>' : GJOB.JOB : '</GJOBJOB>'
		  STRXML := '<GJOBPROD>' : GJOB.PROD : '</GJOBPROD>'
		  STRXML := '<GJOBPDESC>' : GJOB.PDESC : '</GJOBPDESC>'
		  STRXML := '<GJOBWIDTH>' : GJOB_WIDTH : '</GJOBWIDTH>'
		  STRXML := '<GJOBLENGTH>' : GJOB_LENGTH : '</GJOBLENGTH>'
		  STRXML := '<GJOBSPOTS>' : GJOB.SPOTS : '</GJOBSPOTS>'
		  STRXML := '<GJOBPCT>' : GJOB.PCT : '</GJOBPCT>'
		  GOSUB 70000
		  STRXML := '<GJOBJSTAT>' : JSTAT : '</GJOBJSTAT>'
		  STRXML := '<CAPROMTMSG>' : CAPromptMsg : '</CAPROMTMSG>'
		   GOSUB 1200
		  STRXML := '<CustErrmsg>' : ERRMSG : '</CustErrmsg>'
		   GOSUB 1300
		  STRXML := '<DivErrmsg>' : ERRMSG : '</DivErrmsg>'
		  STRXML := '<EstimateList>' :EstValues : '</EstimateList>'
		  STRXML := '<CustomerList>' :CustValues : '</CustomerList>'
		  STRXML := '<DivisionList>' :DivValues : '</DivisionList>'
		  STRXML := '<SalesManList>' :SlsManValues : '</SalesManList>'
		  STRXML := '<CsrCodeList>' :CSRValues : '</CsrCodeList>'
		  STRXML := '<SalesCodeList>' :SalesValues : '</SalesCodeList>'
		  STRXML := '<JobCatgList>' :JobCatgValues : '</JobCatgList>'
		  STRXML := '<ShipViaList>' :ShiViaValues : '</ShipViaList>'
		  STRXML := '<CredAuthList>' :CredAuthValues : '</CredAuthList>'
		  STRXML := '</Job>'
		  OUT_PARAM_JOBLIST := STRXML
	OUT_PARAM_JOBLIST := '</JobData>'
 END ELSE
		SCHEMA.ONLY = 0
		ERRMSG = "JOB ":JOBID:" DOES NOT EXIST"
		OUT_PARAM_JOBLIST = '<JobData><Job><ErrMsg>':ERRMSG:'</ErrMsg></Job></JobData>'
*
 END
RETURN
20000 *
   BEGIN CASE
      CASE JOB.STATUS<1,1>=""
         JOB_STATUS="BOOKED"
      CASE JOB.STATUS<1,1>="9"
         JOB_STATUS="CANCELLED"
      CASE JOB.STATUS<1,1>="7"
         JOB_STATUS="READY TO PURGE"
      CASE JOB.STATUS<1,1>="8"
         JOB_STATUS="WAS PURGED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
               JOB_STATUS = "IN PROCESS"
            CASE JOB.STATUS<1,1> = "3"
               JOB_STATUS = "INVOICED"
            CASE JOB.STATUS<1,1> = "5" 
               JOB_STATUS="REOPENED"
            CASE 1
               JOB_STATUS = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
               JOB_STATUS = "IN PROCESS"
            CASE JOB.STATUS<1,1> = "5"
               JOB_STATUS="REOPENED"
            CASE 1
              JOB_STATUS = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         JOB_STATUS="COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         JOB_STATUS="RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         JOB_STATUS="DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         JOB_STATUS="IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         JOB_STATUS="IN PROCESS"
      CASE JOB.STATUS<1,1>="1"
         JOB_STATUS="IN PROCESS"
      CASE JOB.STATUS<1,1>="3"
         JOB_STATUS="INVOICED"
      CASE 1
         JOB_STATUS="UNKNOWN"
   END CASE
*   
   BEGIN CASE
      CASE JOB.TYPE = "R"
         JOB_TYPE_DESC = "REGULAR"
      CASE JOB.TYPE = "S"
         JOB_TYPE_DESC = "SPOILAGE"
      CASE JOB.TYPE = "C"
         JOB_TYPE_DESC = "CUSTOMER CHANGE"
      CASE JOB.TYPE = "N"
         JOB_TYPE_DESC = "NON CHARGABLE"
      CASE 1
         JOB_TYPE_DESC = UNKNOWN
   END CASE
   SLINES = COUNT(JOB.STATUS,VM) + (JOB.STATUS # "")
   STAT = ""
   FOR I = 1 TO SLINES
      BEGIN CASE
         CASE JOB.STATUS<1,I> = ""
            STAT<1,I> = "BOOKED"
         CASE JOB.STATUS<1,I> = "1"
            STAT<1,I> = "IN PROCESS"
         CASE JOB.STATUS<1,I> = "2"
            STAT<1,I> = "SHIPPED"
         CASE JOB.STATUS<1,I> = "3"
            STAT<1,I> = "INVOICED"
         CASE JOB.STATUS<1,I> = "4"
            STAT<1,I> = "COMPLETED"
         CASE JOB.STATUS<1,I> = "5"
            STAT<1,I> = "REOPENED"
         CASE JOB.STATUS<1,I> = "9"
            STAT<1,I> = "CANCELLED"
         CASE JOB.STATUS<1,I> = "7"
            STAT<1,I> = "READY TO PURGE"
         CASE JOB.STATUS<1,I> = "8"
            STAT<1,I> = "WAS PURGED"
         CASE 1
            STAT<1,I> = "UNKNOWN"
      END CASE
      JOB_STAT_DATE<1,I> = OCONV(JOB.STAT.DATE<1,I>,"D2/")
   NEXT I
*                 
   RETURN
*********OP
9000*
********
 MATREAD  JSTAT.REC FROM JOB.STATS, CONO:JOBID ELSE
    MAT JSTAT.REC=''
  END
 IF JSTAT.OPO.NO # "" THEN
    JJCNT = DCOUNT(JSTAT.OPO.NO,VM)
    FOR JJ = 1 TO JJCNT
      MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JSTAT.OPO.NO<1,JJ> ELSE
        MAT OPO.REC = ""
      END
      OJCNT = DCOUNT(OPO.JOB.NO,VM)
      FOR OJ = 1 TO OJCNT
        IF JOBID = OPO.JOB.NO<1,OJ> AND JSTAT.PROD.LINE<1,JJ> = OPO.PROD.LINE<1,OJ>:"@":OPO.PROD.SEQ<1,OJ> THEN
          PCNT = PCNT + 1
          VAR<1,PCNT> = JSTAT.OPO.NO<1,JJ>
          PLINE<1,PCNT> = FIELD(JSTAT.PROD.LINE<1,JJ>,'@',1)
          EXP.DATE<1,PCNT> = OPO.EXP.DATE<1,OJ>
          OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.CANCEL.QTY<1,OJ>
          IF OPEN.QTY<1,PCNT> < 0 THEN OPEN.QTY<1,PCNT> = 0
          IF OPEN.QTY<1,PCNT> # 0 THEN
            OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.CANCEL.QTY<1,OJ>
            DESC.PRICE = INT(OPO.U.PRICE<1,OJ>*((OPO.DISCOUNT<1,OJ>/10000)))
            DESC.PRICE = INT(OPO.U.PRICE<1,OJ> - DESC.PRICE)
            BEGIN CASE                         
              CASE OPO.UOM<1,OJ> = "M"         
                OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/100000)+.5)
              CASE OPO.UOM<1,OJ> = "C"         
                OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/10000)+.5) 
              CASE 1                           
                OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT>/100)+ .5)
            END CASE                           
         END ELSE
            OPEN.AMT<1,PCNT> = 0
          END
          IF OPEN.AMT<1,PCNT> < 0 THEN OPEN.AMT<1,PCNT> = 0
          VEND.NO<1,PCNT> = OPO.VEND.NO
          DATE.RECVD<1,PCNT> = OPO.DATE.RECVD<1,OJ>
        END
	********
	 EXP.DATE<1,PCNT> = OCONV(EXP.DATE<1,PCNT>,"D2/") 
	 DATE.RECVD<1,PCNT>= OCONV(DATE.RECVD<1,PCNT>,"D2/")
	 OPEN.QTY<1,PCNT>= OCONV(OPEN.QTY<1,PCNT>,"MD2") 
	 OPEN.AMT<1,PCNT>= OCONV(OPEN.AMT<1,PCNT>,"MD2") 
	****
      NEXT OJ
    NEXT JJ
END
RETURN
****FG
10000*
****
*$INCLUDE ICSBP INV.UM.CNV
FOR KK = 1 TO DCOUNT(JFS.PROD,VM)
  READ INV.REC.VALS FROM INVENTORY,CONO:JFS.PROD<1,KK> ELSE INV.REC.VALS = ""
  INV_UNT = INV.REC.VALS<21>
  INV_F_DESC = INV.REC.VALS<2>
  FGUM<1,KK> = INV_UNT<1,2>
  FGINV_DESC<1,KK> = INV_F_DESC
  BEGIN CASE
  CASE INV_UNT<1,2> = "SHT" AND INV_UNT<1,3> = "LBS"
    ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
    ICR.DV1 = INV.REC.VALS<23>; ICR.MT1 = 1; ICR.DV2 = 1
    ICR.TYPE = 3; ICR.SCAL = 0
  CASE INV_UNT<1,2> = "PC" AND INV_UNT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
    ICR.DV1 = INV.REC.VALS<33>/100; ICR.MT1 = 10; ICR.DV2 = 1
    ICR.TYPE = 3; ICR.SCAL = 0
  CASE INV_UNT<1,2> = "FT" AND INV_UNT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
    ICR.DV1 = INV.REC.VALS<33>/100; ICR.MT1 = 100; ICR.DV2 = 12
    ICR.TYPE = 3; ICR.SCAL = 0
  CASE INV.REC.VALS<4> = "FNGD"
    ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
    ICR.DV1 = 1; ICR.MT1 = 1; ICR.DV2 = 1000
    ICR.TYPE = 3; ICR.SCAL = 0
  CASE 1
    ICR.CNV = "MD2"; ICR.CNV1 = "MD2,"
    ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1
    ICR.TYPE = 4; ICR.SCAL = 2
END CASE
  JFS_U_PRICE<1,KK> = OCONV(JFS.U.PRICE<1,KK>,"MD4")
*  XYZ<-1> = ICR.DV1:"!!!":ICR.MT1:"!!!":ICR.DV2:"!!!!":ICR.CNV1:"  INV_UNT  ":INV_UNT;WRITE XYZ ON CONTROL,'01TST'
  JFS_M_QTY<1,KK>=OCONV(INT(((JFS.M.QTY<1,KK>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JFS_A_QTY<1,KK>=OCONV(INT(((JFS.A.QTY<1,KK>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JFS_F_QTY<1,KK>=OCONV(INT(((JFS.F.QTY<1,KK>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JFS_DATE<1,KK>=OCONV(JFS.DATE<1,KK>,"D2/")
  JFS_ORDER<1,KK>=JFS.ORDER<1,KK>
  IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN
      BAL = 0
   END ELSE
      BAL = JFS.M.QTY<1,KK> - JFS.F.QTY<1,KK> - JFS.S.QTY<1,KK>
   END
   IF BAL < 0 THEN BAL = 0
   FBAL<1,KK>=OCONV(INT(((BAL/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
*
NEXT KK
RETURN
********
1200*
********
LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED.FLAG ELSE INVOICED.FLAG = 0
  IF INVOICED.FLAG THEN
*
        BEGIN CASE
	  CASE JOB.STATUS<1,1> <= 2
	     FIELDS.ACC = FIELDS.ACC1
	  CASE 1
	     FIELDS.ACC = FIELDS.ACC2
	END CASE
	*LOCATE REQUEST IN FIELDS.ACC<1>,1 SETTING FF ELSE
	 * ERRMSG="Cannot change this field because of Job status"
	*END
MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE MAT CUST.REC = ""
	DIV.FIELD = ""
	IF JOB.DIV # "" AND JOB.EST # "" THEN
		DIV.FIELD = "JOB_DIV"
	END ELSE IF JOB.DIV # "" AND JOB.RESV.MATL # "" THEN
		DIV.FIELD = "JOB_DIV"
	END ELSE IF JOB.DIV # "" AND JOB.ALOC.QTY # "" THEN
		DIV.FIELD = "JOB_DIV"
	END ELSE IF JOB.DIV # "" AND JOB.OS.QTY # "" THEN
		DIV.FIELD = "JOB_DIV"
	END ELSE IF JOB.DIV # "" AND JOB.INV.NO # "" THEN
		DIV.FIELD = "JOB_DIV"
	END ELSE IF JOB.DIV # "" AND JOB.ORDER # "" THEN
		READV ORD.DIV FROM ORDER, CONO:JOB.ORDER,56 THEN
			MATREAD DIV.REC FROM DIVISION, CONO:ORD.DIV ELSE
			DIV.FIELD = "JOB_DIV"
			END
		END
	END
	IF DIV.FIELD # "" THEN
		FIELDS.ACC = FIELDS.ACC : "#" : DIV.FIELD
	END
	IF JFS.PROD # "" THEN
		FIELDS.ACC = FIELDS.ACC : "#" : "JOB_ORD_QTY" : "#" : "JOB_FIN_QTY" : "#" : "JOB_SHP_QTY" : "#" : "JOB_CREDIT"
	END
	ERRMSG=FIELDS.ACC
	
 END ELSE
*
	   BEGIN CASE
	      CASE JOB.STATUS # ""
		 ERRMSG = "CAN NOT CHANGE CUSTOMER FOR ACTIVE JOBS"
		 RETURN
	      CASE SUM(JFS_F_QTY) > 0
		 ERRMSG = "Finished Goods quantity already received from this JOB"
		 RETURN
	      CASE SUM(JFS_A_QTY) > 0
		 ERRMSG = "There are orders linked to this job"
		 RETURN
	*      CASE ORDNO # "" AND OPCO.JOB.BLD # "N"
	*         ERRMSG = "Customer Must Match Customer On Order"
	*         RETURN
	*T25174
	      CASE JOB.SUBS # "" AND JOBID # ""
		 ERRMSG = "There are Sub Jobs use Change Job Cust to change Cust"
		 RETURN
	*T25174
	   END CASE
  END
RETURN
********
1300 *
********
IF INVOICED.FLAG THEN
	IF JOB.STATUS # "" THEN
	     ERRMSG = "Cannot change Division when Job is INVOICED or COMPLETE"
	END
END ELSE
	   IF JOB.DIV # "" AND JOB.EST # "" THEN
	      ERRMSG = "Cannot Change the Division for this Job has an estimate"
	      RETURN
	   END
	   IF JOB.DIV # "" AND JOB.RESV.MATL # "" THEN
	      ERRMSG = "Cannot change the Division for the Job Material reserved to Job"
	      RETURN
	   END
	   IF JOB.DIV # "" AND JOB.ALOC.QTY # "" THEN
	      ERRMSG = "Cannot change the Division for the Job Purchase Order Quanity allocated"
	      RETURN
	   END
	   IF JOB.DIV # "" AND JOB.OS.QTY # "" THEN
	      ERRMSG = "Cannot change the Division for the Job Outside P/O attached to Job"
	      RETURN
	   END
	  IF JOB.DIV # "" AND JOB.INV.NO # "" THEN
	      IF JOB.INV.DATE = "" THEN
		 ERRMSG = "Cannot change the Division for the Job Invoice Pending"
	      END ELSE
		 ERRMSG = "Cannot change the Division for the Job Invoice Posted"
	      END
	  END
END
RETURN
******************
1400*
******************
EstValues = ''
 CMD="SSELECT ESTIMATE WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	*READV EST.NAME FROM ESTIMATE,VAL, 1 ELSE CUST.NAME=''
	   EstValues<1,-1> = VAL[4,99]
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
1500*
******************
CustValues = ''
 CMD="SSELECT CUSTOMER WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV CUST_NAME FROM CUSTOMER,VAL, 1 ELSE CUST_NAME=''
	   CustValues<1,-1> = VAL[4,99]:"~":CUST_NAME
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
1600*
******************
DivValues = ''
 CMD="SSELECT DIVISION WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV DIV_DESC FROM DIVISION,VAL, 1 ELSE DIV_DESC = ''
	   DivValues<1,-1> = VAL[4,99]:"~":DIV_DESC
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
1700*
******************
SlsManValues = ''
 CMD="SSELECT SALESMAN WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV SALS_NAME FROM SALESMAN,VAL, 1 ELSE SALS_NAME = ''
	   SlsManValues<1,-1> = VAL[4,99]:"~":SALS_NAME
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
1800*
******************
CSRValues = ''
 CMD="SSELECT CSR.CODE WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV CSR_DESC FROM CSR.CODE,VAL, 1 ELSE CSR_DESC = ''
	   CSRValues<1,-1> = VAL[4,99]:"~":CSR_DESC
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
1900*
******************
SalesValues = ''
 CMD="SSELECT SALES.CODE WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV SLC_DESC FROM SALES.CODE,VAL, 6 ELSE SLC_DESC = ''
	   SalesValues<1,-1> = VAL[4,99]:"~":SLC_DESC
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
2000*
******************
JobCatgValues = ''
 CMD="SSELECT JOB.CATEGORY WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV CATG_DESC FROM JOB.CATEGORY,VAL, 1 ELSE CATG_DESC = ''
	   JobCatgValues<1,-1> = VAL[4,99]:"~":CATG_DESC
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
2100*
******************
ShiViaValues = ''
 CMD="SSELECT SHIP.VIA WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	READV SHIPVIA_DESC FROM SHIP.VIA,VAL, 1 ELSE SHIPVIA_DESC = ''
	   ShiViaValues<1,-1> = VAL[4,99]:"~":SHIPVIA_DESC
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
******************
2200*
******************
CredAuthValues = ''
 CMD="SSELECT CREDIT.AUTH.CODE WITH CONO = '":CONO:"'"
  UDTEXECUTE CMD CAPTURING RMESG
DATA = 1
LOOP
	READNEXT VAL THEN
	   CredAuthValues<1,-1> = VAL[4,99]
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT
RETURN
*******GANG JOB ALLOCATION
11000 *
*******
  MATREAD GJOB.REC FROM GANG.JOB, CONO:JOBID ELSE MAT GJOB.REC = ""
	
      LINES = DCOUNT(GJOB.WIDTH,VM)
        XYZ<-1> ="GJOB.WIDTH  ":GJOB.WIDTH:"~~~  ":DCOUNT(GJOB.WIDTH,VM);WRITE XYZ ON CONTROL,'01TST'
      TOT.AREA = INT(GJOB.IW / 10 * GJOB.IL / 10 + 0.5)
	CALC.AREA = 0
      FOR CREF = 1 TO LINES
         CALC.AREA = CALC.AREA + INT(GJOB.WIDTH<1,CREF> / 1000 * GJOB.LENGTH<1,CREF> / 1000 * GJOB.SPOTS<1,CREF> + 0.5)
         GJOB_WIDTH<1,CREF> = OCONV(GJOB.WIDTH<1,CREF>,"MD4")
	 GJOB_LENGTH<1,CREF> = OCONV(GJOB.LENGTH<1,CREF>,"MD4")
      NEXT CREF
      SqIn = INT(CALC.AREA/100+0.5)
      Spots = SUM(GJOB.SPOTS)
      IF TOT.AREA = 0 THEN
         Waste = ""
      END ELSE
         Waste = INT((1-(CALC.AREA/TOT.AREA))*10000+0.5)
      END
RETURN
*
*********GET CA Prompt Msg
6000*
 IF JOB.STATUS<1,1> # 9 THEN
    AUTHORIZATION.REQUIRED = INDEX('1,2,3,5',JOB.STATUS<1,1>,1)
	IF AUTHORIZATION.REQUIRED THEN
	       CAPromptMsg = "Enter Authorization for Cancellation"
        END ELSE
	      CAPromptMsg ="Do You Want to Reverse WIP, Release Inventory and Cancel Job (Y/N)" 
	END
 END
RETURN
*
*
*---- DERIVE JOB STATUS
*
70000 *
  FOR NN = 1 TO DCOUNT(GJOB.JOB,VM)
 * WRITE "hi":GJOB.JOB ON CONTROL,"GJ"
    MATREAD JOB.REC FROM JOB, CONO:GJOB.JOB<1,NN> THEN
      BEGIN CASE
      CASE JOB.STATUS<1,1> = ""
         JSTAT<1,NN> = "BOOKED"
      CASE JOB.STATUS<1,1> = 9
         JSTAT<1,NN> = "CANCELLED"
      CASE JOB.STATUS<1,1> = "7"
         JSTAT<1,NN> = "READY TO PURGE"
      CASE JOB.STATUS<1,1> = "8"
         JSTAT<1,NN> = "PURGED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            JSTAT<1,NN> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "3"
            JSTAT<1,NN> = "INVOICED"
         CASE JOB.STATUS<1,1> = "5" 
            JSTAT<1,NN> = "REOPENED"
         CASE 1
            JSTAT<1,NN> = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            JSTAT<1,NN> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            JSTAT<1,NN> = "REOPENED"
         CASE 1
            JSTAT<1,NN> = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         JSTAT<1,NN> = "COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         JSTAT<1,NN> = "RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         JSTAT<1,NN> = "DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         JSTAT<1,NN> = "IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         JSTAT<1,NN> = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "1"
         JSTAT<1,NN> = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "3"
         JSTAT<1,NN> = "INVOICED"
      CASE 1
         JSTAT<1,NN> = "UNKNOWN"
      END CASE
*ABBREVIATE
      BEGIN CASE
      CASE JSTAT<1,NN> = "UNKNOWN"
         JSTAT<1,NN> = "?"
      CASE JSTAT = "BOOKED"
*        JSTAT = "B"
         JSTAT<1,NN> = ""
      CASE JSTAT<1,NN> = "COMPLETED"
         JSTAT<1,NN> = "C"
      CASE JSTAT<1,NN> = "CANCELLED"
         JSTAT<1,NN> = "X"
      CASE INDEX(JSTAT<1,NN>,"PURGE",1) > 0
         JSTAT<1,NN> = "C"
      CASE JSTAT<1,NN> = "IN PROCESS"
         JSTAT<1,NN> = "I"
      CASE 1
         JSTAT<1,NN> = ""
      END CASE
 END
 NEXT NN
      RETURN
*
********
8000 *
********
*
   MATL.DESC<1,LN> = INV.FULL.DESC
   MATL.TYPE<1,LN> = INV.PAP.TYPE
   MATL.UM<1,LN> = INV.UNIT<1,2>
   MATL.TRACK.QOH<1,LN> = CATG.TRACK.QOH
   RSV.SERIAL<1,LN>=CATG.RSV.SERIAL
   BEGIN CASE
      CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         ICR.DV1<LN> = INV.M.WT
         ICR.MT1<LN> = 1
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD0"
      CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<LN> = INV.PAP.WIDTH/100
         ICR.MT1<LN> = 10
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD0"
      CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<LN> = INV.PAP.WIDTH/100
         ICR.MT1<LN> = 100
         ICR.DV2<LN> = 12
         ICR.CNV<LN> = "MD0"
      CASE 1
         ICR.DV1<LN> = 10
         ICR.MT1<LN> = 1
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD2"
   END CASE
XYZ<-1> = "STAGE 5 IN GOSUB 8000 ";WRITE XYZ ON CONTROL,'01TST'
	TMP.JOB.ALOC.QTY<1,LN>=JCS_CALC_STK_QTY_WS(JOB.ALOC.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
	TMP.JOB.ALOC.QTY<1,LN>=OCONV(TMP.JOB.ALOC.QTY<1,LN>,ICR.CNV<LN>)
	TMP.JOB.RESV.QTY<1,LN>=JCS_CALC_STK_QTY_WS(JOB.RESV.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
	TMP.JOB.RESV.QTY<1,LN>=OCONV(TMP.JOB.RESV.QTY<1,LN>,ICR.CNV<LN>)
	TMP.JOB.USED.QTY<1,LN>=JCS_CALC_STK_QTY_WS(JOB.USED.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
	TMP.JOB.USED.QTY<1,LN>=OCONV(TMP.JOB.USED.QTY<1,LN>,ICR.CNV<LN>)
XYZ<-1> = "STAGE 6 END OF GOSUB 8000 ";WRITE XYZ ON CONTROL,'01TST'
   RETURN
  *
 *
99999*
IF ERRMSG <> "" THEN
ERRMSG = "JobListService ---> JCS_GETJOBLIST ---> " : ERRMSG
     CALL WRITELOG(ERRMSG)
END
RETURN
END
