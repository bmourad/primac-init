*T040609 By yakub on 03/06/09
SUBROUTINE POR_REQUISITIONSERVICE_GETREQUISITIONDATA(CONO,REQ.NO,ERRMSG,STRXML)
************************************************************************
$INCLUDE PMC.CPYLIB PO 
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
*T040609 v
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE CPYLIB CHAR
*T040609 ^
*
OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
*T040609 v
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
*T040609 ^
*   
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = '' ; GOTO 93000    
IF CO.PO.REQ.FLAG = "Y" THEN
  OPEN '','REG.REQ' TO REG.REQ ELSE ERRMSG = 'REG.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
  USER.ID = UPCASE(@LOGNAME)
END
*
STRXML="<RequisitionValues>"
MAT INV.CNV.REC = ""
MENU.FLAG = "R"
*T040609 v
XYZ = ""
XYZ<1> = "IM IN POR_REQUISITIONSERVICE_GETREQUISITIONDATA  ";WRITE XYZ ON CONTROL,'01POR'
BAL.ORD = 0 ; BAL.REC = 0 ; BAL.OPEN = 0
TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0
PSS.FLAG = "Y"
UNKNOWN = "??????????"
DESC.LINE = ""
LINE.CUST = ""
VALUE = ""
DIM HOLD.APP.REQ.REC(20)
MAT APP.REQ.REC = ""
MAT HOLD.APP.REQ.REC = ""
DIM PROD.DEL(5)
   *PO.CODE = REQ.NO
   *********
ECD.RET.VALUE = REQ.NO
DUPLICATED.PO = 0 ; *T25938
NEW = 0
FIRST.TIME = 0      ;* T26152
PORDER = 0
REQ = 0
MAT PO.REC = ''
MAT PROD.DEL = ""
PREV.PO.VEND=""
POS.INQ = 0
ECD.RET.VALUE = REQ.NO
BEGIN CASE
  CASE MENU.FLAG="R" AND ECD.RET.VALUE="D" AND NOT(POS.INQ) ;*25855
         *GOTO DUPE.SUB
  CASE ECD.RET.VALUE = "N" AND NOT(POS.INQ) ; * 25855
    NEW = 1
    PO.CODE = ECD.RET.VALUE
    IF MENU.FLAG = "R" THEN
      STRXML := "<PO.CODE> N </PO.CODE>"
      STRXML := "<PO.STATUS> Entered </PO.STATUS>"
      STRXML := "<PO.ST.DATE>": OCONV(DATE(),"D2/"):"</PO.ST.DATE>"
*            STRXML := "<PO.APPROVER>": USER.ID :"</PO.APPROVER>"
      GOTO 555
    END
  CASE ECD.RET.VALUE # "" AND NOT(POS.INQ) ; * 25855
    PO.CODE = ECD.RET.VALUE
      * T26126 v
    MATREADU PO.REC FROM PO, CONO:PO.CODE LOCKED
      ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
      GOTO 93000 
    END THEN
      * T26126 ^
      IF MENU.FLAG = "R" THEN
        ERRMSG = "PO with number ":PO.CODE: " already exists"
        RELEASE PO,CONO:PO.CODE
        GOTO 93000
      END
      PORDER = 1; * this is a purchase order since found in PO file
    END ELSE
      READ REC FROM SLIT.TRANS, CONO:PO.CODE THEN
        ERRMSG='Slit transaction already exists with this number'
        RELEASE SLIT.TRANS, CONO:PO.CODE
        GOTO 93000
      END ELSE
        RELEASE SLIT.TRANS, CONO:PO.CODE
        IF CO.PO.REQ.FLAG = "Y" THEN
          MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
            IF MENU.FLAG = "P" THEN
              ERRMSG = "Requisition with number ":PO.CODE:" already exists"
              RELEASE REG.REQ,CONO:PO.CODE ; GOTO 93000
            END
            REQ = 1 ; * this is still requisition 
          END 
        END
      END
      IF INDEX(PO.CODE,"S",1) THEN
        LENPO = LEN(PO.CODE)
        NPOCODE = PO.CODE[1,LENPO-1]
        IF NPOCODE # "" AND NUM(NPOCODE) THEN
          ERRMSG=PO.CODE:" is not allowed.Could be a Slit Trans Key."
          GOTO 93000
        END
      END
      IF REQ THEN
*               IF BUFFER<3> = 'INQ' THEN
*                  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
*               END ELSE
            * T26126 v
        MATREADU PO.REC FROM REG.REQ, CONO:PO.CODE LOCKED
          ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
          GOTO 93000 
        END ELSE
          MAT PO.REC = ''
        END
            * T26126 ^
  *             END
      END ELSE
          * T26126 v
        MATREADU PO.REC FROM PO, CONO:PO.CODE LOCKED
          ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
          GOTO 93000 
        END ELSE
          MAT PO.REC = ''
        END
          * T26126 ^
      END
      IF PO.APP.LEVEL = "C" THEN
        WRITE "REQ  ":REQ ON CONTROL,'01YAAA'
        IF (REQ) THEN
*                  ERRMSG = "Requisition: ":PO.CODE:" was cancelled. Cannot make any changes."
          STRXML := "<PO.WARNINGMSG> Requisition: ":PO.CODE:" was cancelled. Cannot make any changes. </PO.WARNINGMSG>"
*                  GOTO 93000
        END ELSE
*                  ERRMSG = "PO ":PO:" was cancelled. You cannot make any changes."
          STRXML := "<PO.WARNINGMSG> PO ":PO:" was cancelled. You cannot make any changes. </PO.WARNINGMSG>"
*                  GOTO 93000
        END
      END
      IF NOT(PORDER) AND NOT(REQ) THEN 
        ERRMSG = PO.CODE:" IS NOT ON FILE. DO YOU WANT TO ADD (Y/N)"
        GOTO 93000
        IF VALUE = "Y" THEN
          NEW = 1
          IF MENU.FLAG = "R" THEN
            REQ = 1
          END ELSE
            PORDER = 1
          END
        END ELSE
          IF CO.PO.REQ.FLAG = "Y" THEN
            RELEASE REG.REQ, CONO:PO.CODE
          END
          RELEASE PO, CONO:PO.CODE
          GOTO 93000
        END
      END
    END
    IF NOT (NEW) THEN
      DIV.CODE = PO.DIV.OWNER; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK_DIV_SEC_SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOTO 93000
      END
      IF MENU.FLAG = "R" THEN
        USER= USER.ID; DIV.OWNER = PO.DIV.OWNER; APP.REQ.ID = ""
        WRITE "USER  ":USER ON CONTROL,'01YAA'
        CALL CHECK_ACTIVE_STATUS (CONO,USER,DIV.OWNER,RET.FLAG,MAT APP.REQ.REC,APP.REQ.ID,YYY)
        VALID = RET.FLAG 
        IF NOT(VALID) THEN
          ERRMSG = "Profile for user ":USER.ID:" is either missing or is inactive" 
          GOTO 93000
        END
      END
    END
END CASE
   ***************************
 *  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
IF PO.CODE = "N" THEN GOTO 555
*T040609 ^
MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
VEND.KEY = CONO:PO.VEND.NO
MATREAD VEND.REC FROM VEND , VEND.KEY ELSE
  MAT VEND.REC = "????????????????"
END
STRXML := "<PO.CODE>": PO.CODE :"</PO.CODE>"
STRXML := "<PO.VEND.NO>": PO.VEND.NO :"</PO.VEND.NO>"
STRXML := "<VEND.PO.DESC>": VEND.PO.DESC :"</VEND.PO.DESC>"
STRXML := "<VEND.PO.ADDR1>": VEND.PO.ADDR1 :"</VEND.PO.ADDR1>"
STRXML := "<VEND.PO.ADDR2>": VEND.PO.ADDR2 :"</VEND.PO.ADDR2>"
STRXML := "<VEND.PO_CITY>": FIELD(VEND.PO.CT.ST, ",",1) :"</VEND.PO_CITY>"
STRXML := "<VEND.PO_STATE>": FIELD(VEND.PO.CT.ST, ",",2) :"</VEND.PO_STATE>"
STRXML := "<VEND.PO.ZIP>": VEND.PO.ZIP :"</VEND.PO.ZIP>"
STRXML := "<VEND.PHONE>": VEND.PHONE :"</VEND.PHONE>"
STRXML := "<VEND.FAX>": VEND.FAX :"</VEND.FAX>"
STRXML := "<VEND.EMAIL.ADDR>": VEND.EMAIL.ADDR :"</VEND.EMAIL.ADDR>"
STRXML := "<PO.ACCRUE>": PO.ACCRUE :"</PO.ACCRUE>"
STRXML := "<PO.DUE.DATE>":OCONV(PO.DUE.DATE,'D2/'):"</PO.DUE.DATE>"
STRXML := "<PO.VDR.ORD>": PO.VDR.ORD :"</PO.VDR.ORD>"
STRXML := "<PO.CONTACT>": PO.CONTACT :"</PO.CONTACT>"
STRXML := "<PO.SHIP.VIA>": PO.SHIP.VIA :"</PO.SHIP.VIA>"
STRXML := "<PO.VIA.DESC>": PO.VIA.DESC :"</PO.VIA.DESC>"
STRXML := "<PO.FOB>": PO.FOB :"</PO.FOB>"
STRXML := "<PO.TERMS.DATE>": PO.TERMS.DATE :"</PO.TERMS.DATE>"
STRXML := "<PO.TERMS.DESC>": PO.TERMS.DESC :"</PO.TERMS.DESC>"
STRXML := "<PO.TERMS.DIS>":OCONV(PO.TERMS.DIS,'MD2') :"</PO.TERMS.DIS>"
STRXML := "<PO.SHIP.WHSE>": PO.SHIP.WHSE :"</PO.SHIP.WHSE>"
STRXML := "<PO.SHIP.NAME>": PO.SHIP.NAME :"</PO.SHIP.NAME>"
STRXML := "<PO.SHIP.ADD1>": PO.SHIP.ADD1 :"</PO.SHIP.ADD1>"
STRXML := "<PO.SHIP.ADD2>": PO.SHIP.ADD2 :"</PO.SHIP.ADD2>"
STRXML := "<PO.SHIP.ADD3_CITY>": FIELD(PO.SHIP.ADD3, ",",1) :"</PO.SHIP.ADD3_CITY>"
STRXML := "<PO.SHIP.ADD3_STATE>": FIELD(PO.SHIP.ADD3, ",",2) :"</PO.SHIP.ADD3_STATE>"
STRXML := "<PO.SHIP.ADD4_ZIP>": PO.SHIP.ADD4 :"</PO.SHIP.ADD4_ZIP>"
*
;* T25941 v
;* SCV.REC(39)<ECD.SCRN.NO,1> = PO.PRT.FLG
GOSUB SHOW.PRINT.MAIL.FLAGS
;* T25941 ^
STRXML := "<PO.DATE>":OCONV(PO.DATE,'D2/'):"</PO.DATE>"
STRXML := "<PO.DIV.OWNER>": PO.DIV.OWNER :"</PO.DIV.OWNER>"
STRXML := "<PO.WRIT.BY>": PO.WRIT.BY :"</PO.WRIT.BY>"
*
*   CALL CALC.REG.PO.TOT(CONO,TOT.ORD.AMT,XXX,YYY,ZZZ)
*   IF MENU.FLAG # "R" THEN
*      SCV.REC(45)<ECD.SCRN.NO,1> = OCONV(TOT.ORD.AMT,"MD2")
*   END
*T040609 v
  * IF MENU.FLAG = "R" THEN
IF MENU.FLAG = "R" AND PO.CODE # "N" THEN
*T040609 ^   
  LAST.POS = DCOUNT(PO.STATUS<1>,@VM)
  STRXML := "<PO.STATUS>": PO.STATUS<1,LAST.POS> :"</PO.STATUS>"
  STRXML := "<PO.APPROVER>": PO.APPROVER :"</PO.APPROVER>"
  STRXML := "<PO.ST.DATE>": OCONV(PO.ST.DATE<1,LAST.POS>,'D2/'):"</PO.ST.DATE>"
  STRXML := "<PO.REQUESTOR>": PO.REQUESTOR :"</PO.REQUESTOR>"
END
*   IF MENU.FLAG # 'R' THEN
*      IF POS.INQ THEN
*         SCV.REC(49)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END ELSE
*         SCV.REC(48)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END
*   END
GOSUB NEXT.SCRN.DATA
  *T030609 v
555*
  *T030609 ^
STRXML := "</RequisitionValues>"
RETURN
*
SHOW.PRINT.MAIL.FLAGS: 
;* Show print flag
*   ECD.NUM = 39
PRT.FLAG = "";MAIL.FLAG=""
BEGIN CASE
  CASE PO.PRT.FLG<1,1> = 'Y'
*         PRT.FLAG = "Yes"
    PRT.FLAG = "Y"
  CASE PO.PRT.FLG<1,1> = 'P'
*         PRT.FLAG = "Print"
    PRT.FLAG = "P"
  CASE PO.PRT.FLG<1,1> = 'C'
*         PRT.FLAG = "Copy"
    PRT.FLAG = "C"
  CASE 1
*         PRT.FLAG = "No"
    PRT.FLAG = "N"
END CASE
STRXML := "<PRINT.FLAG>": PRT.FLAG :"</PRINT.FLAG>"
;* Show mail flag
*   ECD.NUM = 6
BEGIN CASE
  CASE PO.PRT.FLG<1,2> = 'Y'
    MAIL.FLAG = "Yes"
  CASE PO.PRT.FLG<1,2> = 'M'
    MAIL.FLAG = "Sent"
  CASE PO.PRT.FLG<1,2> = 'C'
    MAIL.FLAG = "Copy"
  CASE 1
    MAIL.FLAG = "No"
END CASE
STRXML := "<MAIL.FLAG>": MAIL.FLAG :"</MAIL.FLAG>"
RETURN
*
NEXT.SCRN.DATA: 
*
LINES = COUNT(PO.PROD.NUM,@VM) + (PO.PROD.NUM # "")                     
FOR LN = 1 TO LINES                                                    
  STRXML := "<PRODUCT-DETAILS>"
  MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,LN> ELSE          
    MAT INV.REC = ""; INV.FULL.DESC = "??????"                          
  END                                                                  
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = "" 
  STRXML := "<PRODUCT>": PO.PROD.NUM<1,LN> :"</PRODUCT>"
  STRXML := "<DESCRIPTION>": INV.FULL.DESC "L#45" :"</DESCRIPTION>"
  IF INV.SBR + 0 = 0 THEN INV.SBR = 1                                  
  DESC.INV<1,LN> = INV.FULL.DESC                                       
  PO.JB.UNITS<1,LN> = INV.UNIT<1,2>                                    
  GOSUB 4000
  GOSUB 10000
  STRXML := "</PRODUCT-DETAILS>"
*T040609 v
*GET JOB INFORMATION
  XYZ<-1> = "CATG.TRACK.QOH  ":CATG.TRACK.QOH;WRITE XYZ ON CONTROL,'01POR'
  IF CATG.TRACK.QOH = "Y" THEN
      STRXML := "<JOB-DETAILS>"
    LNP = LN
    IF PO.JOB.NO<1,LNP> = "" THEN
      MATREAD APP.REQ.REC FROM APP.REQ,CONO:USER.ID:"!":PO.DIV.OWNER ELSE 
        MAT APP.REQ.REC = "" 
      END 
      BEGIN CASE 
        CASE PO.APP.LEVEL = ""  
          GO.BACK = 0
        CASE PO.APP.LEVEL < APP.PO.LEVEL 
          GO.BACK = 1
        CASE PO.APP.LEVEL = "C" 
          GO.BACK = 1           
        CASE 1
          GO.BACK = 0
      END CASE
      IF (GO.BACK) THEN 
        STRXML := "<PO.JOB.ERRMSG> There are no jobs to be displayed.</PO.JOB.ERRMSG>"
      END
    END ELSE
      LINESS = COUNT(PO.JOB.NO<1,LNP>,SVM) + (PO.JOB.NO<1,LNP> # "")
*      IF LINESS < 1 THEN CONTINUE
      FOR LNJ = 1 TO LINESS
        MATREAD JOB.REC FROM JOB, CONO:PO.JOB.NO<1,LNP,LNJ> ELSE MAT JOB.REC = ""
        MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
          MAT CUST.REC = ""
          CUST.NAME = UNKNOWN
        END
        LINE.CUST<1,LNJ> = JOB.CUST
        DESC.LINE<1,LNJ> = CUST.NAME
      NEXT LNJ
      LNJ = 1
      GOSUB 10002
XYZ<-1> = "AFTER GOSUB 10002  ";WRITE XYZ ON CONTROL,'01POR'
    END
      GOSUB 1020
      STRXML := "</JOB-DETAILS>"
  END
*T040609 ^
NEXT LN                                                                
RETURN
*
10000*
*
N = LN
STRXML := "<PO.DEL.DATE>": OCONV(PO.DEL.DATE<1,N>, "D2/") "L#8" :"</PO.DEL.DATE>"
WRITE "DIFF.UM  ":DIFF.UM<N>:" ICR.CNV<N,1>  ":ICR.CNV<N,1>:"  ICR.CNV<N,2>  ":ICR.CNV<N,2> ON CONTROL,"01ICR"
IF DIFF.UM<N> = "Y" THEN
  IF ICR.CNV<N,1> = "MD0" THEN
    TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
    TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
    TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
  END ELSE
    TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" 
    TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
    TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
  END
  IF ICR.CNV<N,2> = "MD0" THEN
    TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
    TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
    TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')"R#11"
  END ELSE
    IF ICR.CNV<N,1> = "MD0" THEN
      TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" 
      TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
      TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
    END ELSE
      TEMP.ONORD = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11" 
      TEMP.CANCEL = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
      TEMP.OPEN = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2") "R#11"
    END
  END
  STRXML := "<PO.TOT.ONORD>": TEMP.ONORD :"</PO.TOT.ONORD>"
  STRXML := "<PO.TOT.CANCEL>": TEMP.CANCEL :"</PO.TOT.CANCEL>"
  STRXML := "<PO.QTY.OPEN>": TEMP.OPEN :"</PO.QTY.OPEN>"
  STRXML := "<PO.WHSE>": PO.WHSE<1,N> "L#4" :"</PO.WHSE>"
  STRXML := "<PO.DISCOUNT>": OCONV(PO.DISCOUNT<1,N> , "MD2") "R#5" :"</PO.DISCOUNT>"
  STRXML := "<PO.UNIT.FLG>": PO.UNIT.FLG<1,N> "L#3" :"</PO.UNIT.FLG>"
END ELSE
  IF ICR.CNV<N,1> = "MD0" THEN
    TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD2')"R#11"
    TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
    TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')"R#11"
  END ELSE
    TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2") "R#11" ; P_OPT = ""
    TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") "R#11"
    TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") "R#11"
  END
  STRXML := "<PO.TOT.ONORD>": TEMP.ONORD :"</PO.TOT.ONORD>"
  STRXML := "<PO.TOT.CANCEL>": TEMP.CANCEL :"</PO.TOT.CANCEL>"
  STRXML := "<PO.QTY.OPEN>": TEMP.OPEN :"</PO.QTY.OPEN>"
  STRXML := "<PO.WHSE>": PO.WHSE<1,N> "L#4" :"</PO.WHSE>"
  STRXML := "<PO.DISCOUNT>": OCONV(PO.DISCOUNT<1,N> , "MD2") "R#5" :"</PO.DISCOUNT>"
  STRXML := "<PO.UNIT.FLG>": PO.UNIT.FLG<1,N> "L#3" :"</PO.UNIT.FLG>"
END
STRXML := "<PO.GROS.PRICE>": OCONV(PO.GROS.PRICE<1,N> , "MD4") :"</PO.GROS.PRICE>"
STRXML := "<PO.NO.OF.ROLLS>": PO.NO.OF.ROLLS<1,N> :"</PO.NO.OF.ROLLS>"
STRXML := "<PO.ITEM.COMM>": PO.ITEM.COMM<1,N> :"</PO.ITEM.COMM>"
*    IF PO.NO.OF.ROLLS<1,N> # "" THEN
*      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,N> ELSE
*        MAT INV.REC = ""; INV.FULL.DESC = UNKNOWN
*      END
*      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
*      BEGIN CASE
*        CASE INV.PAP.TYPE = "ROLL"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE 1
**T27919 v
*          IF INV.PAP.TYPE = 'SHEET' THEN
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Skids" ; P_OPT = ""
*          END ELSE
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Labels" ; P_OPT = ""
*          END
**T27919 ^
*      END CASE
*      P_X  = 74 ; P_Y = SLN+2 ; P_VALUE = PO.NO.OF.ROLLS<1,N> ; P_OPT = ""
*    END
*    CNT = CNT + 1
*    FOR I = 1 TO C.PAGE.SIZE
*      IF PO.ITEM.COMM<1,N,I> # '' THEN
*        P_X  = 0 ; P_Y = SLN+2+I ; P_VALUE = "" ; P_OPT = "CL"
*        P_X  := AM:4 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:I "R#3"
*        P_X  := AM:8 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:PO.ITEM.COMM<1,N,I>
*      END
*    NEXT I
RETURN
**** GET CONVERSIONS
4000*
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
  CASE 1
    ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
END CASE
BEGIN CASE
  CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
  CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
  CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
  CASE 1
    ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
END CASE
IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
RETURN
*
*T040609 v
**** SCROLL ROUTINE FOR JOBS
10002*
*****************
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV = "MD0"; ICR.DV2 = 1
    ICR.DV1 = INV.M.WT; ICR.MT1 = 1
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.DV2 = 1
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.DV2 = 12
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100
  CASE 1
    ICR.CNV = "MD2"; ICR.DV2 = 1
    ICR.DV1 = 10; ICR.MT1 = 1
END CASE
******************
XYZ<-1> = "COUNT(PO.JO.NO) LINESS  ":LINESS;WRITE XYZ ON CONTROL,'01POR'
FOR M = 1 TO LINESS
      STRXML :="<JOB.LINES>":LNP:"</JOB.LINES>"
      STRXML := "<PO.JOB.NO>":PO.JOB.NO<1,LNP,M> "L#8":"</PO.JOB.NO>"
  STRXML := "<PO.JOB.CUST>":LINE.CUST<1,M> "L#6":"</PO.JOB.CUST>"
  IF PSS.FLAG = "Y" THEN ; * pss
    STRXML := "<PO.JB.DEPT>":PO.JB.DEPT<1,LNP,M> "L#2":"</PO.JB.DEPT>"
    STRXML := "<PO.JB.CCTR>":PO.JB.CCTR<1,LNP,M> "L#3":"</PO.JB.CCTR>"
  END ; * pss
  STRXML := "<PO.JB.UNITS>":PO.JB.UNITS<1,LNP> "L#3":"</PO.JB.UNITS>"
  TEMP.JB.ONORD = "";TEMP.JB.RECEVED = "";TEMP.JB.OPEN = ""
  IF ICR.CNV = "MD0" THEN
    TEMP.JB.ONORD = INT(((PO.JB.ONORD<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#11"
    TEMP.JB.RECEVED = INT(((PO.JB.RECEVED<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#11"
    TEMP.JB.OPEN = INT(((PO.JB.OPEN<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#11"
  END ELSE
    TEMP.JB.ONORD = OCONV(INT(PO.JB.ONORD<1,LNP,M>/10), "MD2") "R#11"
    TEMP.JB.RECEVED = OCONV(INT(PO.JB.RECEVED<1,LNP,M>/10), "MD2") "R#11"
    TEMP.JB.OPEN = OCONV(INT(PO.JB.OPEN<1,LNP,M>/10), "MD2") "R#11"
  END
  STRXML := "<PO.JB.ONORD>":TEMP.JB.ONORD:"</PO.JB.ONORD>"
  STRXML := "<PO.JB.RECEVED>":TEMP.JB.RECEVED:"</PO.JB.RECEVED>"
  STRXML := "<PO.JB.OPEN>":TEMP.JB.OPEN:"</PO.JB.OPEN>"
  STRXML := "<PO.CUST.NAME>":DESC.LINE<1,M> "L#24":"</PO.CUST.NAME>"
NEXT M
XYZ<-1> = "AFTER NEXT M  ";WRITE XYZ ON CONTROL,'01POR'
10001*
RETURN
**** PRINT TOTALS
1020*
TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0
TEMP.TOT.ORD = "";TEMP.TOT.REC = "";TEMP.TOT.OPEN = ""
TEMP.BAL.ORD = "";TEMP.BAL.REC = "";TEMP.BAL.OPEN = ""
FOR AD = 1 TO LINESS
  TOT.ORD = TOT.ORD + PO.JB.ONORD<1,LNP,AD>
  TOT.REC = TOT.REC + PO.JB.RECEVED<1,LNP,AD>
  TOT.OPEN = TOT.OPEN + PO.JB.OPEN<1,LNP,AD>
NEXT AD
1030*
BAL.ORD = PO.TOT.ONORD<1,LNP> - PO.TOT.CANCEL<1,LNP> - TOT.ORD
BAL.REC = (PO.TOT.RECEVED<1,LNP> + PO.PREV.RECEVED<1,LNP>) - TOT.REC
BAL.OPEN = PO.QTY.OPEN<1,LNP> - TOT.OPEN
IF ICR.CNV = "MD0" THEN
  TEMP.TOT.ORD = INT(((TOT.ORD/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12" ; P_OPT = ""
  TEMP.TOT.REC = INT(((TOT.REC/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12"
  TEMP.TOT.OPEN = INT(((TOT.OPEN/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12"
  TEMP.BAL.ORD = INT(((BAL.ORD/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12"
  TEMP.BAL.REC = INT(((BAL.REC/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12"
  TEMP.BAL.OPEN = INT(((BAL.OPEN/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) "R#12"
END ELSE
  TEMP.TOT.ORD = OCONV(INT(TOT.ORD/10), "MD2") "R#12"
  TEMP.TOT.REC = OCONV(INT(TOT.REC/10), "MD2") "R#12"
  TEMP.TOT.OPEN = OCONV(INT(TOT.OPEN/10), "MD2") "R#12"
  TEMP.BAL.ORD = OCONV(INT(BAL.ORD/10), "MD2") "R#12"
  TEMP.BAL.REC = OCONV(INT(BAL.REC/10), "MD2") "R#12"
  TEMP.BAL.OPEN = OCONV(INT(BAL.OPEN/10), "MD2") "R#12"
END
STRXML := "<PO.TOT.ORD>":TEMP.TOT.ORD:"</PO.TOT.ORD>"
STRXML := "<PO.TOT.REC>":TEMP.TOT.REC:"</PO.TOT.REC>"
STRXML := "<PO.TOT.OPEN>":TEMP.TOT.OPEN:"</PO.TOT.OPEN>"
STRXML := "<PO.BAL.ORD>":TEMP.BAL.ORD:"</PO.BAL.ORD>"
STRXML := "<PO.BAL.REC>":TEMP.BAL.REC:"</PO.BAL.REC>"
STRXML := "<PO.BAL.OPEN>":TEMP.BAL.OPEN:"</PO.BAL.OPEN>"
XYZ<-1> = "TEMP.TOT.ORD  ":TEMP.TOT.ORD:"~~~ ":"TEMP.TOT.REC ":TEMP.TOT.REC;WRITE XYZ ON CONTROL,'01POR'
RETURN
*T040609 ^
93000*
WRITE "ERRMSG  ":ERRMSG ON CONTROL,'01YAA'
STRXML = "<RequisitionValues><ErrMsg>": ERRMSG:"</ErrMsg></RequisitionValues>"
RETURN
