SUBROUTINE WIP_PALLETREQUEST(CONO,EMPID,OPTVALPN,STRXML,ERRMSG)
*
* PROGRAM  - WIPT.RF.TERM
*
* AUTHOR   - PRASHANT KUMAR
*
* DATE     - 03/10/08
*
* DESCRIPTION
*
* This program is used to process transaction from the hand-held 
* R-F units used in the warehouse.
*
*T22322 ct6 01/07/1998 * Install WIP IN-PROCESS with changes for Bawden
*T23359 rik 01/14/1999 * REMOVE ISBN CODING.
*T26030 ajibaly 02/01/2002 * REMOVE PROMPT "CHANGE QTY?" WHEN ADJUSTING
*                            QTY
*T26725 lross 07/02/2002 * Do not allow qty change on ZERO qty
*                          locations.
*T27646 thompson 08/18/2003 * ALL FOR MULTI PLATFORM USE
*********************************************************************
ERRMSG = ''
*
*---- INCLUDES COPYLIBS
*
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE WTR.CPYLIB WIP.TRACK.JOB
$INCLUDE WTR.CPYLIB WIP.TRACK.FORM
$INCLUDE WTR.CPYLIB WIP.TRACK.PALLET
$INCLUDE WTR.CPYLIB WIP.TRACK.CONTROL
$INCLUDE WTR.CPYLIB WIP.FILE.VARS
$INCLUDE WTR.CPYLIB WIP.TRACK.TO.JOB
$INCLUDE WTR.CPYLIB WIPT.STORAGE.LOC
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE PMC.CPYLIB VEND
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- PRE-INITIALIZATION
*
   STRXML = ''
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 93000
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG = "CANNOT OPEN JOB FILE"
      GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER FILE"
      GOTO 93000
   END
   OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
      ERRMSG = "CANNOT OPEN EMPLOYEE FILE"
      GOTO 93000
   END
   OPEN "","VEND" TO VEND ELSE
      ERRMSG = "CANNOT OPEN VEND FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.JOB" TO WIP.TRACK.JOB ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.JOB FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.CONTROL" TO WIP.TRACK.CONTROL ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.CONTROL FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.TO.JOB" TO WIP.TRACK.TO.JOB ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.TO.JOB FILE"
      GOTO 93000
   END
   OPEN "","WIPT.STORAGE.LOC" TO WIPT.STORAGE.LOC ELSE
      ERRMSG = "CANNOT OPEN WIPT.STORAGE.LOC FILE"
      GOTO 93000
   END
*
*---- INITIALIZATION
*
   CONO = ""
   MAT COMP.REC = ""
   CALL RFT_GET_CONO (CONO, MAT COMP.REC,ERRMSG)
   IF ERRMSG # "" THEN GOTO 99999
   IF CONO = "END" THEN GOTO 100
   READV WTR.CNTL FROM CONTROL, CONO:'WIP.TRACKING',1 ELSE WTR.CNTL = 'N'
   IF WTR.CNTL # 'Y' THEN GOTO 99999
   LOGNAME = 'LOGNAME'; CALL RFT_SYSVARS_SUB(LOGNAME); *T27646
   USER.ID = LOGNAME; *T27646
   EMPID = "XXXX"
   EMPNAME = ""
   MATREAD WIPTE.REC FROM WIP.TRACK.CONTROL, CONO:"EMP" THEN
      LOCATE USER.ID IN WIPTE.USER<1>,1 SETTING EPTR THEN 
         EMPID = WIPTE.EMP<1,EPTR>
         MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
            EMPNAME = EMP.FRST.NAME:" ":EMP.LAST.NAME
         END
      END
   END
STRXML :="<EmpName>":EMPNAME:"</EmpName>"
10 *
   MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" THEN
      POS = 1
      LOOP
         LOCATE USER.ID IN WIPTR.USER<1>,POS SETTING PTR ELSE PTR = 0
      WHILE PTR > 0 DO
         WIPTR.USER<1,PTR> = ""
         WIPTR.PALLET<1,PTR> = ""
         POS = PTR + 1
      REPEAT
      MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
   END LOCKED
        ERRMSG="Locked by ":GETUSERNAME(STATUS() )
        GOTO 99999
   END ELSE
      RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
   END
   PREV.DEFINE.JOB = ""
   PREV.DEFINE.FORM = ""
   PREV.DEFINE.SKID = ""
   PREV.DEFINE.TYPE = ""
   PREV.DEFINE.QTY = ""
   PREV.DEFINE.LOC = ""
   PREV.DEFINE.DESC = ""
*
*---- MAIN PROCESSING
*
1030 *
*T22322v
**   IF EMPNAME # "" THEN PRINT @(1,2):EMPNAME "L#20"
*T22322^
   RTYPE = "D"
   REQCCTR = ""
   REQFND = 0
   MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
   RCNT = DCOUNT(WIPTR.DATE,VM)
1031 *
   LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
      WIPTR.USER<1,RPTR> = ""
   END
   REQFND = 0
   STRXML :="<PalletRequest>"
   FOR RPTR = 1 TO RCNT STEP 1 
*T22322^
      BEGIN CASE
**         CASE RTYPE # WIPTR.TYPE<1,RPTR>
**         CASE WIPTR.USER<1,RPTR> # ""
         CASE 1
*T22322v
**            PRINT @(7,4):OCONV(WIPTR.DATE<1,RPTR>,"D2/"):@(-4):
**            PRINT @(7,5):OCONV(WIPTR.TIME<1,RPTR>,"MT"):@(-4):
**            PRINT @(07,6):WIPTR.CCTR<1,RPTR>[4,99]:@(-4):
**            PRINT @(07,7):WIPTR.JOB<1,RPTR>:@(-4):
**            PRINT @(07,8):WIPTR.FORM<1,RPTR>:@(-4):
            STRXML :="<RequestData>"
	    STRXML :="<RequestDate>":OCONV(WIPTR.DATE<1,RPTR>,"D2/"):"</RequestDate>"
	    STRXML :="<RequestTime>":OCONV(WIPTR.TIME<1,RPTR>,"MT"):"</RequestTime>"
	    STRXML :="<CostCenter>":WIPTR.CCTR<1,RPTR>[4,99]:"</CostCenter>"
	    STRXML :="<JobNumber>":WIPTR.JOB<1,RPTR>:"</JobNumber>"
	    STRXML :="<FormNumber>":WIPTR.FORM<1,RPTR>:"</FormNumber>"
            WIPTR.USER<1,RPTR> = USER.ID
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
	    STRXML :="</RequestData>"
            REQFND = 1
      END CASE
   NEXT RPTR
STRXML :="</PalletRequest>"
*
1032 *
   VALUE = OPTVALPN
   BEGIN CASE
      CASE VALUE = "END"
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
            WIPTR.USER<1,RPTR> = ''
         END
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         RETURN
      CASE VALUE = "DEL"
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
            FOR N = 1 TO WIPTR.REC.SIZE
               WIPTR.REC(N) = DELETE(WIPTR.REC(N),1,RPTR,0)
            NEXT N
         END
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         RETURN
      CASE VALUE = "N" OR VALUE = "P" 
1033     REQFND = 0
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC=""
         RCNT = DCOUNT(WIPTR.DATE<1>,VM)
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPOS THEN
            RPTR = RPOS
            WIPTR.USER<1,RPTR> = ""
         END 
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
**         GOTO 1031
           GOTO 100
      CASE VALUE = "" AND REQFND # 0
         PAL.ACTION = 0
	 STRXML :="<BlankCase>":"HANDLE PALLET SCROLLING":"</BlankCase>"
         GOSUB 1035 ;* HANDLE PALLET SCROLLING
**         PRINT @(0,15):@(-4):
         BEGIN CASE
            CASE PAL.ACTION = 1 
         * REQUEST WAS ACCEPTED
               MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
               LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
                  FOR N = 1 TO WIPTR.REC.SIZE
                     WIPTR.REC(N) = DELETE(WIPTR.REC(N),1,RPTR,0)
                  NEXT N
               END
               MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
               RETURN ;* TO MAIN MENU
            CASE 1    ;* 'END' was entered at N/P Pallet prompt
**               GOTO 1033 ;* Prompt for Next or Prior Request
                 GOTO 100
         END CASE
   END CASE
**   GOTO 1032
     GOTO 100
*
1035 * Pallet Display for Request
   LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR ELSE RETURN
   WIPTF.ID = WIPTR.JOB<1,RPTR>:"!":WIPTR.FORM<1,RPTR>
   MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE
      MAT WIPTF.REC = ""
   END
   PCNT = DCOUNT(WIPTF.PALLET,VM)
   PAL.IDS = ""
   FOR PPTR = PCNT TO 1 STEP -1
      PAL.ID = WIPTF.PALLET<1,PPTR>
      MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
*T22322v  *Determine the Location's Definition (Zero Bal flag)
         SL.LOC = WIPTP.MLOC<1,1>
         GOSUB 3000 ;* GET THE WIPSL.REC FOR THIS PALLET'S LOCATION
*T22322^
         BEGIN CASE
            CASE WIPTP.CQTY = 0
*T22322>            CASE WIPTP.MLOC<1,1> = "VENDOR"
*T22322>            CASE WIPTP.MLOC<1,1> = "SHREDDER"
*T22322v  *This case will cover all Zero Qty Flaged locations (as above)
            CASE WIPSL.RANGE.ZERO<1> = "Y"
*T22322^
            CASE WIPTP.STATUS<1,1> = "D"
            CASE 1
               SELPTR = PPTR
               PAL.IDS = INSERT(PAL.IDS,1,1,0;PAL.ID) ;*Build list
         END CASE
      END
   NEXT PPTR
   PALCNT = DCOUNT(PAL.IDS,VM)
1036 * Display the next/prior pallet
   PAL.ID = PAL.IDS<1,PPTR>
   MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE MAT WIPTP.REC = ""
   STRXML :="<PalID>":PAL.ID:"</PalID>"
   STRXML :="<PalletLocation>":WIPTP.MLOC<1,1>:"</PalletLocation>"
**   PRINT @(11,12):PAL.ID "L#8":
**   PRINT @(11,13):WIPTP.MLOC<1,1> "L#8":
1037 * Prompt for Next or Prior (or Acceptance of Request!)
**   PRINT @(0,15):"Enter=Accept Request"
   STRXML :="<AcceptRequestMsg>":"Enter=Accept Request":"</AcceptRequestMsg>"
     GOTO 99999
   RETURN
*
*T22322v
*---- Get the WIPT.STORAGE.LOC definition for a specific location
*
3000 *
   ERRMSG = ""
   STMT = 'SSELECT WIPT.STORAGE.LOC WITH RANGE.START <= "':SL.LOC:'"'
   STMT = STMT:' AND WITH RANGE.END >= "':SL.LOC:'"'
   STMT = STMT:' AND WITH CONO = "':CONO:'"'
   PERFORM STMT CAPTURING GARBAGE
   MAT WIPSL.REC = ""
   READNEXT SL.ID THEN
      MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, SL.ID ELSE MAT WIPSL.REC = ""
      CLEARSELECT
   END ELSE
      ERRMSG = "*Undefined Location*"
   END
   RETURN
*T22322^
*
*---- ERROR ROUTINE
*
91000 *
     GOTO 100
93000 *
   GOTO 100
100 *
   RELEASE
*
*---- END OF PROGRAM
*
99999 *
   RETURN
END
