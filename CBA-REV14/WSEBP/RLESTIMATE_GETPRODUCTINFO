SUBROUTINE RLESTIMATE_GETPRODUCTINFO(CONO,EST.ID, SCHEMA.ONLY, ERRMSG, STRXML)
******************************************************
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE JES.CPYLIB ESTIMATE.RES.SHAPE
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE";GOTO 93000
OPEN '','ESTIMATE.RES' TO ESTIMATE.RES ELSE ERRMSG = "CANNOT OPEN ESTIMATE.RES";GOTO 93000
OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = "CANNOT OPEN COST.CNTR";GOTO 93000
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="DIVISION FILE IS MISSING";GOTO 93000
OPEN "ESTIMATE.RES.SHAPE" TO ESTIMATE.RES.SHAPE ELSE ERRMSG = "CANNOT OPEN ESTIMATE.RES.SHAPE" ;GOSUB 93000
EST.RL.JOB.TYPE.DESCRIPTION = ''
*INPUT v
*- CONO = "001"
*- EST.ID = "2570-01"
*- DEBUG
*INPUT ^
MATREAD EST.REC FROM ESTIMATE, CONO:EST.ID ELSE MAT EST.REC = ""
MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:EST.ID THEN
    SCHEMA.ONLY = 0
  STRXML = '<Estimate>'
  STRXML := '<AddressLine1>' : EST.CUST.ADDR1 : '</AddressLine1>'
  STRXML := '<AddressLine2>' : EST.CUST.ADDR2 : '</AddressLine2>'
  STRXML := '<AddressLine3>' : EST.CUST.ADDR3 : '</AddressLine3>'
  STRXML := '<AttentionName>' : EST.CUST.ATTN : '</AttentionName>'
  STRXML := '<BaseQuantity>' : EST.BASE.QTY : '</BaseQuantity>'
  STRXML := '<Quantity>' : EST.QTY : '</Quantity>'
  STRXML := '<CategoryDesc>' : OCONV(CONO:EST.CATG,"TJOB.CATEGORY;X;1;1") : '</CategoryDesc>'
  STRXML := '<CityStateZip>' : EST.CUST.ADDR4 : '</CityStateZip>'
  STRXML := '<CommentLine1>' : EST.COMMENTS<1,1> : '</CommentLine1>'
  STRXML := '<CommentType>' : CHANGE(EST.COMMENT.TYPE,@VM,' ') : '</CommentType>'
  STRXML := '<ComponentCount>' : EST.COMPONENT.CNT : '</ComponentCount>'
  STRXML := '<CustomerId>' : EST.CUST : '</CustomerId>'
  STRXML := '<CustomerName>' : EST.CUST.NAME : '</CustomerName>'
  STRXML := '<CustomerServiceRep>' : EST.CSR : '</CustomerServiceRep>'
  STRXML := '<Division>' : EST.DIV : '</Division>'
  READV DIV.DESC FROM DIVISION, CONO:EST.DIV,1 THEN
     DIV.DESC = ""
  END
  STRXML := '<DivisionDesc>' : DIV.DESC : '</DivisionDesc>'
  STRXML := '<EdgeType>' : EST.BIND.EDGE.TYPE : '</EdgeType>'
  STRXML := '<EntryDate>' : OCONV(EST.DATE.ENTERED,'D2/') : '</EntryDate>'
  STRXML := '<EstimateId>' : CONO:EST.ID : '</EstimateId>' ;*DOUBTFUL
  STRXML := '<EstimateNo>' : EST.ID : '</EstimateNo>' ;*DOUBTFUL
  STRXML := '<EstimateCategory>' : EST.CATG : '</EstimateCategory>'
  STRXML := '<EstimateType>' : EST.TYPE : '</EstimateType>'
  EST.TYPE.DESC = ''
  BEGIN CASE
    CASE EST.TYPE = 'R'
      EST.TYPE.DESC = 'Regular'
    CASE EST.TYPE = 'C'
      EST.TYPE.DESC = 'Customer Change Order'
    CASE EST.TYPE = 'S'
      EST.TYPE.DESC = 'Spoilage'
  END CASE
  STRXML := '<EstimateTypeDescription>' : EST.TYPE.DESC : '</EstimateTypeDescription>'
  STRXML := '<Estimator>' : EST.ESTIMATOR : '</Estimator>'
  STRXML := '<EstimatorName>' : OCONV(CONO:EST.ESTIMATOR,"TESTIMATOR;X;1;1") : '</EstimatorName>'
  STRXML := '<JobNo>' :EST.JOB : '</JobNo>'
  STRXML := '<JobPurgeDate>' : OCONV(EST.JOB.PURGE.DATE ,'mm dd yy') : '</JobPurgeDate>'
  STRXML := '<Master>' : EST.MASTER : '</Master>'
  STRXML := '<OrderNo>' : EST.ORDER : '</OrderNo>'
  STRXML := '<ReqOrderNo>' : EST.CUST.PO : '</ReqOrderNo>'
  STRXML := '<ProductDefinitionType>' : EST.PDEF.TYPE : '</ProductDefinitionType>'
  STRXML := '<PurgeType>' : EST.PURGE.TYPE : '</PurgeType>'
  STRXML := '<RequiredDate>' : OCONV(EST.DATE.REQUIRED,'D2/') : '</RequiredDate>'
  STRXML := '<SalesCode>' : EST.SALES.CODE  : '</SalesCode>'
  STRXML := '<SalesRepCode>' : EST.SALESMAN  : '</SalesRepCode>'
  STRXML := '<SalesRepName>' : OCONV(CONO:EST.SALESMAN,"TSALESMAN;X;1;1")  : '</SalesRepName>'
  STRXML := '<Status>' : EST.STATUS  : '</Status>'
  STRXML := '<Comments>' : CHANGE(EST.COMMENTS,@VM,'\n')  : '</Comments>'
*
    STRXML := '<ProductDefinition>'
    STRXML := '<JobType>': EST.RL.JOB.TYPE :'</JobType>'
    STRXML := '<PreviousEstimate>': EST.RL.PREV.EST :'</PreviousEstimate>'
    STRXML := '<JobChangeType>': EST.RL.TYPE.CHG :'</JobChangeType>'
    BEGIN CASE
      CASE EST.RL.JOB.TYPE = 'N'
        EST.RL.JOB.TYPE.DESCRIPTION = 'New'
      CASE EST.RL.JOB.TYPE = 'RR'
        EST.RL.JOB.TYPE.DESCRIPTION = 'ReRun'
      CASE EST.RL.JOB.TYPE = 'RC'
        EST.RL.JOB.TYPE.DESCRIPTION = 'Rerun With Change'
    END CASE
    EST.RL.LBL.REPEAT = EST.RL.GAP<1,1,1> + EST.RL.DIM.AR<1,1,1>
    STRXML := '<JobTypeDescription>' : EST.RL.JOB.TYPE.DESCRIPTION : '</JobTypeDescription>'
    STRXML := '<SizeAcross>': OCONV(EST.RL.DIM.AC,"MD4") :'</SizeAcross>'
    STRXML := '<SizeAround>': OCONV(EST.RL.DIM.AR,"MD4") :'</SizeAround>'
    STRXML := '<Set1>' : EST.RL.SETS<1,1,1> : '</Set1>'
    STRXML := '<Set2>' : EST.RL.SETS<1,1,2> : '</Set2>'
    STRXML := '<MGap>' : OCONV(EST.RL.GAP.CALC,'MD4') : '</MGap>'
    STRXML := '<LblRepeat>' : OCONV(EST.RL.LBL.REPEAT,'MD4') : '</LblRepeat>'
    STRXML := '<CopyDirectionFront>': EST.RL.CPY.DIR<1,1,1> : '</CopyDirectionFront>'
    STRXML := '<CopyDirectionBack>' : EST.RL.CPY.DIR<1,1,2> : '</CopyDirectionBack>'
    STRXML := '<AGap>' : OCONV(EST.RL.GAP,'MD4') : '</AGap>'
    STRXML := '<DieShape>' : EST.RL.DIE.SHAPE : '</DieShape>'
    READ DESC FROM ESTIMATE.RES.SHAPE, CONO:EST.RL.DIE.SHAPE ELSE
      DESC = ""
    END
    STRXML := '<DieShapeDesc>' : DESC : '</DieShapeDesc>'
*
*   Cost Center Description
*
    STRXML := '<PressDetails>' 
    FOR I = 1 TO DCOUNT(EST.RL.PRESS.CCTR,SVM)  
       MATREAD CCTR.REC FROM COST.CNTR,CONO:EST.RL.PRESS.CCTR<1,1,I> ELSE
         ERRMSG = "INVALID COST CENTER"
         GOTO 93000
       END
       STRXML := '<PressCostCenter>'
       STRXML := '<CostCenter>': EST.RL.PRESS.CCTR<1,1,I> :'</CostCenter>'
       STRXML := '<CostCenterDesc>': CCTR.DESC :'</CostCenterDesc>'
       STRXML := '<FrontColor>': EST.PROD.COLORS.1<1,1,I> :'</FrontColor>'
       STRXML := '<BackPrint>': EST.PROD.COLORS.2<1,1,I> :'</BackPrint>'
       STRXML := '<Adhesive>':EST.RL.ADHESIVE<1,1,I> :'</Adhesive>'
       STRXML := '<Varnish>':EST.RL.FULL.SPOT<1,1,I> :'</Varnish>'
       STRXML := '<Foil>': EST.RL.FOIL<1,1,I> :'</Foil>'
       STRXML := '<PressSpeed>': EST.RL.FOIL.SPEED<1,1,I> :'</PressSpeed>'
       STRXML := '<SilkScreen>': EST.RL.SSCREEN<1,1,I> :'</SilkScreen>'
       STRXML := '<Gravure>': EST.RL.GRAVURE<1,1,I> :'</Gravure>'
       STRXML := '<Emboss>': EST.RL.EMBOSS<1,1,I> :'</Emboss>'
       STRXML := '<Laminate>': EST.RL.OVERLAM<1,1,I> :'</Laminate>'
       STRXML := '<Varieties>': EST.RL.KINDS<1,1,I> :'</Varieties>'
       STRXML := '<PlateChange>': EST.RL.PLATE.CHANGES<1,1,I> :'</PlateChange>'
       STRXML := '<ColorChange>': EST.RL.COLOR.CHANGES<1,1,I> :'</ColorChange>'
       STRXML := '<ColorMixes>': EST.RL.COL.MIX<1,1,I> :'</ColorMixes>'
       STRXML := '<Sprocket>': EST.RL.SPROCKET<1,1,I> :'</Sprocket>'    
       STRXML := '</PressCostCenter>'
    NEXT I
    STRXML := '</PressDetails>'
*
*   Die Description
*
    STRXML := '<DieDetails>'
    FOR I = 1 TO DCOUNT(EST.RL.DIE.PRESS.NO,SVM)
       STRXML := '<DieCostCenter>' 
       STRXML := '<CostCenter>': EST.RL.DIE.PRESS.NO<1,1,I> :'</CostCenter>'
       STRXML := '<DieNumber>': EST.RL.DIE<1,1,I> :'</DieNumber>'
       STRXML := '<DieType>': EST.RL.DIETYPE<1,1,I> :'</DieType>'
       STRXML := '<DieAcross>': EST.RL.DIE.NO.ACR<1,1,I> :'</DieAcross>'
       STRXML := '<DieAround>': EST.RL.DIE.NO.ARD<1,1,I> :'</DieAround>'
       STRXML := '<DieRepeat>': OCONV(EST.RL.DIE.REPEAT<1,1,I>,"MD4") :'</DieRepeat>'
       STRXML := '<DieCylinder>': EST.RL.DIE.CYL.ID<1,1,I> :'</DieCylinder>'
       STRXML := '<PrintGear>': EST.RL.PRINTGEARS<1,1,I> :'</PrintGear>'
       STRXML := '<PrintAround>': EST.RL.PRINTAR<1,1,I> :'</PrintAround>'
       STRXML := '</DieCostCenter>'
    NEXT I
    STRXML := '</DieDetails>'
*
*   Stock Details
*
    TOT.MSI = "";UNIT.PR = ""
    STRXML := '<StockDetails>'
    FOR I = 1 TO DCOUNT(EST.PROD.OS.USAGE,SVM)
       STRXML := '<PapersGroup>'
       STRXML := '<PaperGroup>': EST.PROD.OS.USAGE<1,1,I> :'</PaperGroup>'
       STRXML := '<Product>': EST.PROD.OS.PROD<1,1,I> :'</Product>'
       STRXML := '<ProductDescription>':EST.PROD.OS.DESC<1,1,I>:'</ProductDescription>'
       STRXML := '<InventoryId>': EST.PROD.INV.ID<1,1,I> :'</InventoryId>'
       STRXML := '<EstimateWidth>':OCONV(EST.PROD.OS.WIDTH<1,1,I>,"MD4"):'</EstimateWidth>'
       STRXML := '<ActualWidth>': OCONV(EST.RL.ACT.WIDTH<1,1,I>,"MD4") :'</ActualWidth>'
       STRXML := '<Caliper>':OCONV(EST.RL.PAP.CAL<1,1,I>,"MD4"):'</Caliper>'
       STRXML := '<BasisWeight>': OCONV(EST.RL.PAP.GSM<1,1,I>,"MD4") :'</BasisWeight>'
       FOR J =1 TO DCOUNT(EST.RL.PAP.MSI<1,1,I>,"!")
	  TOT.MSI = FIELD(EST.RL.PAP.MSI<1,1,I>,"!",J)
	  UNIT.PR = FIELD(EST.RL.PAP.PRICE<1,1,I>,"!",J)
      TEMP.PAPER = INT((TOT.MSI * (UNIT.PR/100))+.5)
	  TEMP.PAPER = OCONV(TEMP.PAPER,"MD2")
	  STRXML := '<Quantity>'
	  STRXML := '<Msi>':TOT.MSI:'</Msi>'
       STRXML := '<Price>':OCONV(UNIT.PR,"MD4"):'</Price>'
	  STRXML := '<Paper>': TEMP.PAPER :'</Paper>'
	  STRXML := '</Quantity>'
       NEXT J
       STRXML := '</PapersGroup>'
    NEXT I
    STRXML := '</StockDetails>'
*
* Make Reay Details
*
    STRXML := '<MakeReadyDetails>'
    PCNT=DCOUNT(EST.RL.PRESS.CCTR<1,1>,SVM)
    FOR I = 1 TO PCNT
       STRXML := '<PressId>'
       STRXML := '<MRCostCenter>':EST.RL.PRESS.CCTR<1,1,I>:'</MRCostCenter>'
       STRXML := '<StandardSetup>'
       STRXML := '<RotaryDie>': OCONV(EST.RL.MR.DIE<1,1,I>,"MD2") :'</RotaryDie>'
       STRXML := '<FlatbedDie>': OCONV(EST.RL.MR.FDIE<1,1,I>,"MD2") :'</FlatbedDie>'
       STRXML := '<Color>': OCONV(EST.RL.MR.COLORS<1,1,I>,"MD2") :'</Color>'
       STRXML := '<PlateChange>': OCONV(EST.RL.MR.PLATE<1,1,I>,"MD2") :'</PlateChange>'
       STRXML := '<ColorChange>': OCONV(EST.RL.MR.COL.CHANGE<1,1,I>,"MD2") :'</ColorChange>'
       STRXML := '<SprocketPnch>': OCONV(EST.RL.MR.SPROCKET<1,1,I>,"MD2") :'</SprocketPnch>'
       STRXML := '<ColorMix>': OCONV(EST.RL.MR.COL.MIX<1,1,I>,"MD2") :'</ColorMix>'
       STRXML := '<FoilStamper>': OCONV(EST.RL.MR.FOIL<1,1,I>,"MD2") :'</FoilStamper>'
       STRXML := '<LinealSlit>': OCONV(EST.RL.MR.LIN.SLITS<1,1,I>,"MD2") :'</LinealSlit>'
       STRXML := '<SilkScreen>': OCONV(EST.RL.MR.SSCREEN<1,1,I>,"MD2") :'</SilkScreen>'
       STRXML := '<Gravure>': OCONV(EST.RL.MR.GRAVURE<1,1,I>,"MD2") :'</Gravure>'
       STRXML := '<Embossing>': OCONV(EST.RL.MR.EMBOSS<1,1,I>,"MD2") :'</Embossing>'
       STRXML := '<OverLaminate>': OCONV(EST.RL.MR.OVERLAM<1,1,I>,"MD2") :'</OverLaminate>'
       STRXML := '</StandardSetup>'
       STRXML := '<StandardSetdown>'
       STRXML := '<Color>': OCONV(EST.RL.MR.CSETDOWN<1,1,I>,"MD2") :'</Color>'
       STRXML := '<RotaryDie>': OCONV(EST.RL.MR.DSETDOWN<1,1,I>,"MD2") :'</RotaryDie>'
       STRXML := '<FoilStamp>': OCONV(EST.RL.MR.FSETDOWN<1,1,I>,"MD2") :'</FoilStamp>'
       STRXML := '<SilkScreen>': OCONV(EST.RL.MR.SSETDOWN<1,1,I>,"MD2") :'</SilkScreen>'
       STRXML := '<Gravure>': OCONV(EST.RL.MR.GSETDOWN<1,1,I>,"MD2") :'</Gravure>'
       STRXML := '<Embossing>': OCONV(EST.RL.MR.ESETDOWN<1,1,I>,"MD2") :'</Embossing>'
       STRXML := '<OverLaminate>': OCONV(EST.RL.MR.OSETDOWN<1,1,I>,"MD2") :'</OverLaminate>'
       STRXML := '</StandardSetdown>'
       STRXML := '</PressId>'
    NEXT I
    STRXML := '</MakeReadyDetails>'
    STRXML := '<InkDetails>'
    FOR I = 1 TO DCOUNT(EST.PROD.INK.ID,"!")
       STRXML := '<InkId>'
       STRXML := '<InkProduct>': FIELD(EST.PROD.INK.ID<1,1,1>,"!",I) :'</InkProduct>'
       STRXML := '<NoOfSides>': FIELD(EST.PROD.INK.SIDES<1,1,1>,"!",I) :'</NoOfSides>'
       STRXML := '<CoveragePercent>': FIELD(EST.PROD.INK.COVER<1,1,1>,"!",I):'</CoveragePercent>'
       STRXML := '</InkId>'
    NEXT I
    STRXML := '</InkDetails>'
    STRXML := '<LinealSlits>': EST.RL.LINEAL.SLIT<1,1,1> :'</LinealSlits>'
    STRXML := '<NoSlits>': EST.RL.NO.SLITS<1,1,1> :'</NoSlits>'
    STRXML := '<Rolls>': EST.RL.ROLLS<1,1,1> :'</Rolls>'
    STRXML := '<QtyPerRoll>': EST.RL.NO.PER.ROLL<1,1,1> :'</QtyPerRoll>'
    STRXML := '<Core>': EST.RL.CORE<1,1,1> :'</Core>'
    STRXML := '<LabelAcrossRoll>': EST.RL.LAB.ACR<1,1,1> :'</LabelAcrossRoll>'
    STRXML := '<OutsideRollDiameter>': OCONV(EST.RL.MAX.OD<1,1,1>,"MD4") :'</OutsideRollDiameter>'
    STRXML := '<CoreSize>': OCONV(EST.RL.CORE.SIZE<1,1,1>,"MD4") :'</CoreSize>'
    STRXML := '<CoreThickness>': OCONV(EST.RL.CORE.THICK<1,1,1>,"MD3") :'</CoreThickness>'
    STRXML := '<DisplayPack>': EST.RL.DISP.PACK<1,1,1> :'</DisplayPack>'
     STRXML := '<ApplyMHP>': EST.RL.APPLY<1,1,1> :'</ApplyMHP>'
    STRXML := '<Sheets>': EST.RL.SHEETS<1,1,1> :'</Sheets>'
    STRXML := '<QtyPerPack>': EST.RL.NO.PER.PKG<1,1,1> :'</QtyPerPack>'
    STRXML := '<FanFold>': EST.RL.FANFOLD<1,1,1> :'</FanFold>'
    STRXML := '<QtyPerBatch>': EST.RL.NO.PER.BATCH<1,1,1> :'</QtyPerBatch>'
    STRXML := '<QtyPerFold>':EST.RL.NO.PER.FOLD<1,1,1>:'</QtyPerFold>'
    STRXML := '<Shrink>': EST.RL.SHRK.WRP<1,1,1> :'</Shrink>'
    STRXML := '<Labels>': EST.RL.PKG.LABELS<1,1,1> :'</Labels>'
    STRXML := '</ProductDefinition>'
  STRXML := '</Estimate>'
END
RETURN
*
93000*
  RETURN
