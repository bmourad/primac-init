SUBROUTINE JES_GETESTIMATE(CONO, EST.ID, SCHEMA.ONLY, ERRMSG, STRXML)
$INCLUDE JES.CPYLIB ESTIMATE
*SQL SELECT EST.EST_CUST_ADDR1  AddressLine1, EST.EST_CUST_ADDR2 AddressLine2, EST.EST_CUST_ADDR3 AddressLine3, EST.EST_CUST_ATTN AttentionName, EST.EST_BASE_QTY BaseQuantity, EST.EST_BIND_BIND_UP BinderyNUp, EST.EST_BIND_TP_LENGTH BindPageSizeLength, EST.EST_BIND_TP_WIDTH BindPageSizeWidth, EST.EST_BIND_STYLE BinderyStyle, DECODE( EST.EST_BIND_STYLE, 'P', 'Perfect Bound', 'S', 'Sewn', 'N', 'Notch', 'SAD', 'Saddlewire', 'FO', 'Fold Only', 'T3S', 'Trim 3 Side', 'T4S', 'Trim 4 Side', 'SP', 'Spiral', 'PC', 'Plastic Comb', EST.EST_BIND_STYLE) BinderyStyleDesc, EST.EST_BIND_US_LENGTH BindUntrimLength, EST.EST_BIND_US_WIDTH BindUntrimWidth, EST.EST_BINDER_CCTR BinderyWorkCenter, EST.EST_BOOK_QTY BookedQuantity, EST.EST_CASE_BACK_STYLE CaseBackStyle, EST.EST_CASE_ENDLF CaseEndLeaf, EST.EST_CASE_ENDLF_PRICE CaseEndLeafPrice, EST.EST_CASE_ENDLF_SIZE CaseEndleafSize, EST.EST_CASE_ENDLF_SPEC CaseEndLeafSpec, EST.EST_CASEMAKER_CCTR CaseMakerCostCenter, EST.EST_CASEIN_CCTR CaseinCostCenter, EST.EST_CASE_PIECES CasePieces, EST.EST_CASE_SHOW_SIZE CaseShowSize, EST.EST_CASE_SPOIL CaseSpoilage, EST.EST_CATG_DESC CategoryDesc, EST.EST_CUST_ADDR4 CityStateZip,  EST.EST_CASESTAMP_CCTR CaseStampCostCenter, EST.EST_CASESTAMP_HITS CaseStampNumHits, EST.EST_COMMENTS_1 CommentLine1, EST.EST_COMMENT_TYPE CommentType, EST.EST_COMPONENT_CNT ComponentCount, EST.EST_BIND_COVER_STYLE CoverStyle, EST.EST_CUST CustomerId, EST.EST_CUST_NAME CustomerName, EST.EST_CSR CustomerServiceRep, EST.EST_DIV Division, EST.EST_BIND_EDGE_TYPE EdgeType, SUBSTRING(OCONV(EST.EST_DATE_ENTERED ,'mm dd yy'),1,10) EntryDate, EST.EST_ID EstimateId, EST.EST_NUMBER EstimateNo, EST.EST_CATG EstimateCategory, EST.EST_TYPE EstimateType, DECODE(EST.EST_TYPE, 'R', 'Regular', 'C', 'Customer Change Order', 'S', 'Spoilage', EST.EST_TYPE) EstimateTypeDescription, EST.EST_ESTIMATOR Estimator, EST.EST_ESTIMATOR_NAME EstimatorName, EST.EST_BIND_GATHER_UP GathererNUp, EST.EST_GATHERER_CCTR GathererWorkCenter, EST.EST_JOB JobNo, SUBSTRING(OCONV(EST.EST_JOB_PURGE_DATE ,'mm dd yy'),1,10) JobPurgeDate, EST.EST_MARKUP_LABOR MarkupLabor, EST.EST_MARKUP_OP MarkupOutsidePurchases, EST.EST_MARKUP_REG MarkupRegular, EST.EST_MARKUP_SHIPPING MarkupShipping, EST.EST_MARKUP_STOCK MarkupStock, EST.EST_MASTER Master, EST.EST_MARKUP_MISC MarkupMiscellaneous, EST.EST_ORDER OrderNo, EST.EST_BIND_LBS_PER_BOX PoundsPerBox, EST.EST_PDEF_TYPE ProductDefinitionType, EST.EST_PURGE_TYPE PurgeType, SUBSTRING(OCONV(EST.EST_DATE_REQUIRED ,'mm dd yy'),1,10) RequiredDate, EST.EST_SALES_CODE SalesCode, EST.EST_SALESMAN SalesRepCode, EST.EST_SLSREP_NAME SalesRepName, EST_STATUS Status, EST.EST_BIND_STITCH_UP StitcherNUp, EST.EST_STITCHER_CCTR StitcherWorkCenter, EST.EST_TRIMMER_CCTR TrimmerWorkCenter FROM EST EST where  EST.EST_ID = '0011165-01'
OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG="ESTIMATE FILE IS MISSING"; RETURN
*INITIALIZE THE DATASET VALUES, AND ADD A NEW VARIABLE <Comments> FOR CLUBBING TWO DATASETS INTO ONE
STRXML = '<Estimate><AddressLine1></AddressLine1><AddressLine2></AddressLine2><AddressLine3>'
STRXML := '</AddressLine3><AttentionName></AttentionName><BaseQuantity></BaseQuantity><BinderyNUp></BinderyNUp>'
STRXML := '<BindPageSizeLength></BindPageSizeLength><BindPageSizeWidth></BindPageSizeWidth><BinderyStyle>'
STRXML := '</BinderyStyle><BinderyStyleDesc></BinderyStyleDesc><BindUntrimLength></BindUntrimLength>'
STRXML := '<BindUntrimWidth></BindUntrimWidth><BinderyWorkCenter></BinderyWorkCenter><BookedQuantity>'
STRXML := '</BookedQuantity><CaseBackStyle></CaseBackStyle><CaseEndLeaf></CaseEndLeaf><CaseEndLeafPrice>'
STRXML := '</CaseEndLeafPrice><CaseEndleafSize></CaseEndleafSize><CaseEndLeafSpec></CaseEndLeafSpec>'
STRXML := '<CaseMakerCostCenter></CaseMakerCostCenter><CaseinCostCenter></CaseinCostCenter><CasePieces>'
STRXML := '</CasePieces><CaseShowSize></CaseShowSize><CaseSpoilage></CaseSpoilage><CategoryDesc></CategoryDesc>'
STRXML := '<CityStateZip></CityStateZip><CaseStampCostCenter></CaseStampCostCenter><CaseStampNumHits>'
STRXML := '</CaseStampNumHits><CommentLine1></CommentLine1><CommentType></CommentType><ComponentCount>'
STRXML := '</ComponentCount><CoverStyle></CoverStyle><CustomerId></CustomerId><CustomerName></CustomerName>'
STRXML := '<CustomerServiceRep></CustomerServiceRep><Division></Division><EdgeType></EdgeType><EntryDate>'
STRXML := '</EntryDate><EstimateId></EstimateId><EstimateNo></EstimateNo><EstimateCategory></EstimateCategory>'
STRXML := '<EstimateType></EstimateType><EstimateTypeDescription></EstimateTypeDescription><Estimator></Estimator>'
STRXML := '<EstimatorName></EstimatorName><GathererNUp></GathererNUp><GathererWorkCenter></GathererWorkCenter><JobNo>'
STRXML := '</JobNo><JobPurgeDate></JobPurgeDate><MarkupLabor></MarkupLabor><MarkupOutsidePurchases>'
STRXML := '</MarkupOutsidePurchases><MarkupRegular></MarkupRegular><MarkupShipping></MarkupShipping><MarkupStock>'
STRXML := '</MarkupStock><Master></Master><MarkupMiscellaneous></MarkupMiscellaneous><OrderNo></OrderNo><PoundsPerBox>'
STRXML := '</PoundsPerBox><ProductDefinitionType></ProductDefinitionType><PurgeType></PurgeType><RequiredDate>'
STRXML := '</RequiredDate><SalesCode></SalesCode><SalesRepCode></SalesRepCode><SalesRepName></SalesRepName><Status>'
STRXML := '</Status><StitcherNUp></StitcherNUp><StitcherWorkCenter></StitcherWorkCenter><TrimmerWorkCenter>'
STRXML := '</TrimmerWorkCenter><Comments></Comments></Estimate>'
 
MATREAD EST.REC FROM ESTIMATE, CONO:EST.ID THEN
  SCHEMA.ONLY = 0
  STRXML = '<Estimate>'
  STRXML := '<AddressLine1>' : EST.CUST.ADDR1 : '</AddressLine1>'
  STRXML := '<AddressLine2>' : EST.CUST.ADDR2 : '</AddressLine2>'
  STRXML := '<AddressLine3>' : EST.CUST.ADDR3 : '</AddressLine3>'
  STRXML := '<AttentionName>' : EST.CUST.ATTN : '</AttentionName>'
  STRXML := '<BaseQuantity>' : EST.BASE.QTY : '</BaseQuantity>'
  STRXML := '<BinderyNUp>' : EST.BIND.BIND.UP : '</BinderyNUp>'
  STRXML := '<BindPageSizeLength>' : EST.BIND.TP.LENGTH : '</BindPageSizeLength>'
  STRXML := '<BindPageSizeWidth>' : EST.BIND.TP.WIDTH : '</BindPageSizeWidth>'
  STRXML := '<BinderyStyle>' : EST.BIND.STYLE : '</BinderyStyle>'
  *DECODE( EST.EST_BIND_STYLE, 'P', 'Perfect Bound', 'S', 'Sewn', 'N', 'Notch', 'SAD', 'Saddlewire', 'FO', 'Fold Only', 'T3S', 'Trim 3 Side', 'T4S', 'Trim 4 Side', 'SP', 'Spiral', 'PC', 'Plastic Comb', EST.EST_BIND_STYLE)
  EST.BIND.STYLE.DESC = ''
  BEGIN CASE
    CASE EST.BIND.STYLE = 'P'
      EST.BIND.STYLE.DESC = 'Perfect Bound'
    CASE EST.BIND.STYLE = 'S'
      EST.BIND.STYLE.DESC = 'Sewn'
    CASE EST.BIND.STYLE = 'N'
      EST.BIND.STYLE.DESC = 'Notch'
    CASE EST.BIND.STYLE = 'SAD'
      EST.BIND.STYLE.DESC = 'Saddlewire'
    CASE EST.BIND.STYLE = 'FO'
      EST.BIND.STYLE.DESC = 'Fold Only'
    CASE EST.BIND.STYLE = 'T3S'
      EST.BIND.STYLE.DESC = 'Trim 3 Side'
    CASE EST.BIND.STYLE = 'T4S'
      EST.BIND.STYLE.DESC = 'Trim 4 Side'
    CASE EST.BIND.STYLE = 'SP'
      EST.BIND.STYLE.DESC = 'Spiral'
    CASE EST.BIND.STYLE = 'PC'
      EST.BIND.STYLE.DESC = 'Plastic Comb'
  END CASE
  STRXML := '<BinderyStyleDesc>' : EST.BIND.STYLE.DESC : '</BinderyStyleDesc>'
  STRXML := '<BindUntrimLength>' : EST.BIND.US.LENGTH : '</BindUntrimLength>'
  STRXML := '<BindUntrimWidth>' : EST.BIND.US.WIDTH : '</BindUntrimWidth>'
  STRXML := '<BinderyWorkCenter>' : EST.BINDER.CCTR : '</BinderyWorkCenter>'
  STRXML := '<BookedQuantity>' : EST.BOOK.QTY : '</BookedQuantity>'
  STRXML := '<CaseBackStyle>' : EST.CASE.BACK.STYLE : '</CaseBackStyle>'
  STRXML := '<CaseEndLeaf>' : EST.CASE.ENDLF : '</CaseEndLeaf>'
  STRXML := '<CaseEndLeafPrice>' : EST.CASE.ENDLF.PRICE : '</CaseEndLeafPrice>'
  STRXML := '<CaseEndleafSize>' : EST.CASE.ENDLF.SIZE : '</CaseEndleafSize>'
  STRXML := '<CaseEndLeafSpec>' : EST.CASE.ENDLF.SPEC : '</CaseEndLeafSpec>'
  STRXML := '<CaseMakerCostCenter>' : EST.CASEMAKER.CCTR : '</CaseMakerCostCenter>'
  STRXML := '<CaseinCostCenter>' : EST.CASEIN.CCTR : '</CaseinCostCenter>'
  STRXML := '<CasePieces>' : EST.CASE.PIECES : '</CasePieces>'
  STRXML := '<CaseShowSize>' : EST.CASE.SHOW.SIZE : '</CaseShowSize>'
  STRXML := '<CaseSpoilage>' : EST.CASE.SPOIL: '</CaseSpoilage>'
STRXML := '<Quantity>' : EST.QTY : '</Quantity>'
*STRXML := '<Quantity><QTY>' :EST.QTY:'</Quantity><QTY>'
  *TRANS("JOB_CATEGORY",EST_CONO:EST_CATG,JCATG_DESC,"X")
  *OCONV(CONO:EST.CATG,"TJOB.CATEGORY;X;1;1")
  STRXML := '<CategoryDesc>' : OCONV(CONO:EST.CATG,"TJOB.CATEGORY;X;1;1") : '</CategoryDesc>'
  STRXML := '<CityStateZip>' : EST.CUST.ADDR4 : '</CityStateZip>'
  STRXML := '<CaseStampCostCenter>' : EST.CASESTAMP.CCTR : '</CaseStampCostCenter>'
  STRXML := '<CaseStampNumHits>' : EST.CASESTAMP.HITS : '</CaseStampNumHits>'
  STRXML := '<CommentLine1>' : EST.COMMENTS<1,1> : '</CommentLine1>'
  STRXML := '<CommentType>' : CHANGE(EST.COMMENT.TYPE,@VM,' ') : '</CommentType>'
  STRXML := '<ComponentCount>' : EST.COMPONENT.CNT : '</ComponentCount>'
  STRXML := '<CoverStyle>' : EST.BIND.COVER.STYLE : '</CoverStyle>'
  STRXML := '<CustomerId>' : EST.CUST : '</CustomerId>'
  STRXML := '<CustomerName>' : EST.CUST.NAME : '</CustomerName>'
  STRXML := '<CustomerServiceRep>' : EST.CSR : '</CustomerServiceRep>'
  STRXML := '<Division>' : EST.DIV : '</Division>'
  STRXML := '<EdgeType>' : EST.BIND.EDGE.TYPE : '</EdgeType>'
  *SUBSTRING(OCONV(EST.EST_DATE_ENTERED ,'mm dd yy'),1,10) EntryDate
  STRXML := '<EntryDate>' : OCONV(EST.DATE.ENTERED,'D2/') : '</EntryDate>'
  STRXML := '<EstimateId>' : CONO:EST.ID : '</EstimateId>' ;*DOUBTFUL
  STRXML := '<EstimateNo>' : EST.ID : '</EstimateNo>' ;*DOUBTFUL
  STRXML := '<EstimateCategory>' : EST.CATG : '</EstimateCategory>'
  STRXML := '<EstimateType>' : EST.TYPE : '</EstimateType>'
  *DECODE(EST.EST_TYPE, 'R', 'Regular', 'C', 'Customer Change Order', 'S', 'Spoilage', EST.EST_TYPE)
  EST.TYPE.DESC = ''
  BEGIN CASE
    CASE EST.TYPE = 'R'
      EST.TYPE.DESC = 'Regular'
    CASE EST.TYPE = 'C'
      EST.TYPE.DESC = 'Customer Change Order'
    CASE EST.TYPE = 'S'
      EST.TYPE.DESC = 'Spoilage'
  END CASE
  STRXML := '<EstimateTypeDescription>' : EST.TYPE.DESC : '</EstimateTypeDescription>'
  STRXML := '<Estimator>' : EST.ESTIMATOR : '</Estimator>'
  *TRANS("ESTIMATOR",EST_CONO:EST_ESTIMATOR,ESTMTR_NAME,"X")
  *OCONV(CONO:EST.ESTIMATOR,"TESTIMATOR;X;1;1")
  STRXML := '<EstimatorName>' : OCONV(CONO:EST.ESTIMATOR,"TESTIMATOR;X;1;1") : '</EstimatorName>'
  STRXML := '<GathererNUp>' : EST.BIND.GATHER.UP : '</GathererNUp>'
  STRXML := '<GathererWorkCenter>' :EST.GATHERER.CCTR : '</GathererWorkCenter>'
  STRXML := '<JobNo>' :EST.JOB : '</JobNo>'
  *SUBSTRING(OCONV(EST.EST_JOB_PURGE_DATE ,'mm dd yy'),1,10)
  STRXML := '<JobPurgeDate>' : OCONV(EST.JOB.PURGE.DATE ,'mm dd yy') : '</JobPurgeDate>'
  STRXML := '<MarkupLabor>' : OCONV(EST.MARKUP<1,1>,'MD2') : '</MarkupLabor>'
  STRXML := '<MarkupOutsidePurchases>' : OCONV(EST.MARKUP<1,4>,'MD2') : '</MarkupOutsidePurchases>'
  STRXML := '<MarkupRegular>' : OCONV(EST.MARKUP<1,3>,'MD2') : '</MarkupRegular>'
  STRXML := '<MarkupShipping>' : OCONV(EST.MARKUP<1,5>,'MD2') : '</MarkupShipping>'
  STRXML := '<MarkupStock>' : OCONV(EST.MARKUP<1,2>,'MD2') : '</MarkupStock>'
  STRXML := '<Master>' : EST.MASTER : '</Master>'
  STRXML := '<MarkupMiscellaneous>' : OCONV(EST.MARKUP<1,6>,'MD2') : '</MarkupMiscellaneous>'
  STRXML := '<OrderNo>' : EST.ORDER : '</OrderNo>'
  STRXML := '<PoundsPerBox>' : EST.BIND.LBS.PER.BOX : '</PoundsPerBox>'
  STRXML := '<ProductDefinitionType>' : EST.PDEF.TYPE : '</ProductDefinitionType>'
  STRXML := '<PurgeType>' : EST.PURGE.TYPE : '</PurgeType>'
  *SUBSTRING(OCONV(EST.EST_DATE_REQUIRED ,'mm dd yy'),1,10)
  STRXML := '<RequiredDate>' : OCONV(EST.DATE.REQUIRED,'D2/') : '</RequiredDate>'
  STRXML := '<SalesCode>' : EST.SALES.CODE  : '</SalesCode>'
  STRXML := '<SalesRepCode>' : EST.SALESMAN  : '</SalesRepCode>'
  *TRANS("SALESMAN",EST_CONO:EST_SALESMAN,SALS_NAME,"X")
  *OCONV(CONO:EST.SALESMAN,"TSALESMAN;X;1;1")
  STRXML := '<SalesRepName>' : OCONV(CONO:EST.SALESMAN,"TSALESMAN;X;1;1")  : '</SalesRepName>'
  STRXML := '<Status>' : EST.STATUS  : '</Status>'
  STRXML := '<StitcherNUp>' : EST.BIND.STITCH.UP  : '</StitcherNUp>'
  STRXML := '<StitcherWorkCenter>' : EST.STITCHER.CCTR  : '</StitcherWorkCenter>'
  STRXML := '<TrimmerWorkCenter>' : EST.TRIMMER.CCTR  : '</TrimmerWorkCenter>'
  STRXML := '<Comments>' : CHANGE(EST.COMMENTS,@VM,'\n')  : '</Comments>'
  STRXML := '</Estimate>'
END
RETURN
