  SUBROUTINE RFT_WRITE.RCV.RF.ADJUST(CONO,SERIALNO, EMPID,MILL.NO,QUANTITY,LOCATION,STRXML,ERRMSG)
*********************************************************************
*
* PROGRAM  - RCV.RF.ADJUST
*
* AUTHOR   - PRASHANT KUMAR
*
* DATE     - 10/01/2007
*
* DESCRIPTION
*
* This program is used to process the Roll Adjustment transaction
* from the hand-held R-F units used in the warehouse.
*
*T25697 edvard 03/20/2001 * FIX UNINITIALIZED VARIBLE ERROR. (CSF# 38021)
*T26132 cm 09/06/2001 * Change screen size from 21x16 to 20x15.
*T26350 lhelms 12/17/2001 * CORRECT QTY TO DEFAULT TO STOCK QTY AND NOT
*                           ALLWAYS DEFAULT TO LBS
*T26496 lhelms 04/10/2002 * UPGRADE REV 12; COM COMMONS; REMOVE
*                           ROLL.SKID.INFO INV_SERIAL
*C40525 adelgado 08/07/2002 * Not updating PHYSICAL.INV rec. correctly.
*T27369 adelgado 04/09/2003 * Fix unindentify variable.
*T27705 lross 11/14/2003 * Expand Serial to 15 chars.
*********************************************************************
*
*---- INCLUDE COPYLIB
*
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB RS.XFER
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE CPYLIB CHAR
*
*
  DEFFUN RFT_CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)
*
*---- STORAGE AREA
*
  DIM SAVE.ADJ.REC(10)
  EQU SAJ.TOT.QTY      TO SAVE.ADJ.REC(1)
  EQU SAJ.QTY          TO SAVE.ADJ.REC(2)
  EQU SAJ.SHT          TO SAVE.ADJ.REC(3)
  EQU SAJ.DIAM         TO SAVE.ADJ.REC(4)
  ERY = 15
*
*---- OPEN ALL FILES
*
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG = "INV_SERIAL FILE MISSING"; RETURN
  OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CATEGORY FILE MISSING"; RETURN
  OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "INVENTORY FILE MISSING"; RETURN
  OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "INV.WHSE FILE MISSING"; RETURN
  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG = "INV.WHSE.LOC FILE MISSING"; RETURN
  OPEN "","PHYSICAL.INV" TO PHYSICAL.INV ELSE ERRMSG = "PHYSICAL.INV FILE MISSING"; RETURN
  OPEN "","EMPLOYEE" TO EMPLOYEE ELSE ERRMSG = "EMPLOYEE FILE MISSING"; RETURN
*
*---- INITIALIZATION
*
  DIAM = 0
  MAN.NO = ""
  PO.NO = ""
  PROD.ID = ""
  JOB.NO = ""
  TOT.WGT = ""
  WHSE = ""
  WLOC = ""  
  SPX = ""
  EMPNAME = "???????????????"
  MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
    EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
  END
  IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
  TEMP.NAME = EMPNAME
  EMPNAME = SPX:EMPNAME
*
*---- MAIN PROCESSING
*
* enter roll number
*
    IF SERIALNO = "" THEN RETURN
*T27705 v Should really look at CATG.BARCODE for below check.
    VALID=1
    IF LEN(SERIALNO) = 8 THEN
      CALL RFT_CHECK.DIGIT("T", SERIALNO, "10RL", CKDIG, VALID)
    END
*T27705 ^
    IF NOT(VALID) THEN
      ERRMSG = "INVALID SERIAL"; RETURN
    END
    MATREADU ISTK.REC FROM INV_SERIAL, CONO:SERIALNO LOCKED
      ERRMSG = "SERIAL LOCKED"; RETURN
    END ELSE
      RELEASE INV_SERIAL, CONO:SERIALNO
      ERRMSG = "INVALID SERIAL"; RETURN
    END
    IF ISTK.POST.DATE = "" THEN
      CURR.QTY.ON.HAND = ISTK.CUR.QTY         
      ERRMSG = "SERIAL NOT RCVD"; RETURN
    END ELSE
      MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE
        RELEASE INV_SERIAL, CONO:SERIALNO
        ERRMSG = "INVALID PRODUCT"; RETURN
      END
      MATREAD IWH.REC FROM INV.WHSE, CONO:ISTK.PROD:"!":ISTK.WHSE ELSE
        ERRMSG = "NO INV.WHSE"         ;* "From Whse does not exist"
        RETURN
      END
      MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
        RELEASE INV_SERIAL, CONO:SERIALNO
        ERRMSG = "NO INV.WHSE.LOC"; RETURN
      END
      LOCATE SERIALNO IN IWLO.SERIAL<1>,1 SETTING RSPTR ELSE
        RELEASE INV_SERIAL, CONO:SERIALNO
        ERRMSG = "NO SER # IN LOC"; RETURN
      END
      IF ISTK.CUR.QTY = 0 THEN
        RELEASE INV_SERIAL, CONO:SERIALNO
        ERRMSG = "NO QTY"; RETURN
      END
      MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
        RELEASE INV_SERIAL, CONO:SERIALNO
        ERRMSG = "INVALID PROD LINE"; RETURN
      END
$INCLUDE ICSBP INV.UM.CNV      
      BEGIN CASE              
        CASE CATG.TYPE="L"  
          U.M="LBS"       
        CASE CATG.TYPE="S"  
          U.M="SHT"       
        CASE CATG.TYPE="RL" 
          U.M="PC "       
        CASE CATG.TYPE="PC" 
          U.M="FT "       
        CASE 1              
          NULL
      END CASE
*38405 ^
* T 26350
      CURR.QTY.ON.HAND = ISTK.CUR.QTY
      IF CURR.QTY.ON.HAND < 0 THEN ROND="-.5" ELSE ROND=".5"
    END
    ROLL.ID = SERIALNO
    PMILL.ID = ISTK.MILL.ID
1020 *
*
* enter mill roll number
*
    DEFAULT = ISTK.MILL.ID
    IF MILL.NO = '' THEN MILL.ID = DEFAULT ELSE MILL.ID = MILL.NO
1030 *
*
* enter new qty
*
    MAT PHS.INV.REC = ""
    IF ISTK.POST.DATE # "" THEN
      IF CURR.QTY.ON.HAND < 0 THEN ROND="-.5" ELSE ROND=".5"
      DEFAULT = INT(((CURR.QTY.ON.HAND/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND)
      IF QUANTITY = "" THEN
      QUANTITY = DEFAULT
      END
      RWEIGHT = QUANTITY
      INPUT.QTY = QUANTITY
      RAW.INPUT.QTY = INPUT.QTY
      IF INPUT.QTY < 0 THEN ROND="-.5" ELSE ROND=".5"
      INPUT.QTY = INT(((INPUT.QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+ROND)
*38405 v
      IF CURR.QTY.ON.HAND - RAW.INPUT.QTY < 0 THEN ROND="-.5" ELSE  ROND=".5"
      NEW.SHEET = INT(((INPUT.QTY/ICR.DV1)*ICR.MT1/ICR.DV2+ROND))
    END
1040 *
*
* enter location
*
    RWHSE = ISTK.WHSE
    DEFAULT = ISTK.LOC
    IF LOCATION = "" THEN
**      ERRMSG = "** REQUIRED **"; RETURN
    LOC = DEFAULT
    END
    RWLOC = LOCATION
    TODAY = DATE()
    RDATE = TODAY
    ERRMSG = ""
    IF ISTK.POST.DATE # "" THEN
      IF RWLOC = ISTK.LOC AND RAW.INPUT.QTY = CURR.QTY.ON.HAND THEN
        ISTK.MILL.ID = MILL.ID
        ISTK.WHSE = RWHSE
        ISTK.LOC = RWLOC
        MATWRITE ISTK.REC ON INV_SERIAL, CONO:ROLL.ID
      END
      IF RWLOC # ISTK.LOC THEN
        MAT RS.XFER.REC = ""
        RS.XFER.DESC = "Barcode data - ":OCONV(RDATE,"D2/")
        RS.XFER.ENTRY.DATE = RDATE
        RS.XFER.ID = ROLL.ID
        RS.XFER.TO.WHSE = RWHSE
        RS.XFER.TO.LOC  = RWLOC
        IF ERRMSG = "" THEN
          ISTK.MILL.ID = MILL.ID
          ISTK.WHSE = RWHSE
          ISTK.LOC = RWLOC
          MATWRITEU ISTK.REC ON INV_SERIAL, CONO:ROLL.ID
        END ELSE
          RETURN
        END
      END
      IF RAW.INPUT.QTY # CURR.QTY.ON.HAND THEN
        GOSUB PROCESS.ADJ
        IF ERRMSG = "" THEN
          ISTK.MILL.ID = MILL.ID
          ISTK.WHSE = RWHSE
          ISTK.LOC = RWLOC
          MATWRITEU ISTK.REC ON INV_SERIAL, CONO:ROLL.ID
        END ELSE
          RETURN
        END
      END
    END
      STRXML := "<RollId>":ROLL.ID:"</RollId>"
*T26132 v
      STRXML := "<MillId>":MILL.ID:"</MillId>"
*T26132 ^
* T 26350
    IF RAW.INPUT.QTY < 0 THEN ROND="-.5" ELSE ROND=".5"
      STRXML := "<Quantity>":OCONV(INT(((INPUT.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV):"</Quantity>"
      STRXML := "<Location>":RWHSE:"-":RWLOC:"</Location>"
  RETURN
*
**************************************************************************
********* S U B R O U T I N E S ******************************************
**************************************************************************
*
*
************
GET.DIAM: 
***********
*
  DIAM=RFT_CALC.DIAM(WGHT,PHS.NEW.QTY<1,PPTR,RPTR>,MAT INV.REC)
  RETURN
*
*
*
*---- PROCESS ROLL STOCK ADJUSTMENT
*
*************
PROCESS.ADJ: 
*************
*
  MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
    RELEASE INV_SERIAL, CONO:SERIALNO
    ERRMSG = "NO INV.WHSE.LOC";  RETURN
  END
  LOCATE ROLL.ID IN IWLO.SERIAL<1>,1 SETTING RSPTR ELSE
    RELEASE INV_SERIAL, CONO:SERIALNO
    ERRMSG = "NO SER # IN LOC"; RETURN
  END
  PHS.ID = CATG.TYPE:"!":INV.LINE:"!":RWHSE:"!":RWLOC
  MATREADU PHS.INV.REC FROM PHYSICAL.INV, CONO:PHS.ID ELSE MAT PHS.INV.REC = ""
  LOCATE ISTK.PROD IN PHS.INV.PROD<1>,1 SETTING PPTR ELSE NULL
  LOCATE ROLL.ID IN PHS.R.S.ID<1,PPTR>,1 SETTING RPTR ELSE NULL
*
  PHS.INV.PROD<1,PPTR>       = ISTK.PROD
  PHS.INV.DESC<1,PPTR>       = INV.DESC
  PHS.R.S.ID<1,PPTR,RPTR>    = ROLL.ID
  PHS.CUR.QTY<1,PPTR>        = IWLO.LOC.ON.HAND           ;* C40525
  PHS.CUR.WGHT<1,PPTR,RPTR>  = ISTK.CUR.QTY
  PHS.CUR.DIAM<1,PPTR,RPTR> = ISTK.CUR.DIAM
  PHS.CUR.SHEET<1,PPTR,RPTR> = ISTK.CUR.STK.QTY
  PHS.NEW.WGHT<1,PPTR,RPTR>  = INPUT.QTY
  IF PHS.NEW.WGHT<1,PPTR> < 0 THEN ROND="-.5" ELSE ROND=".5"
  PHS.NEW.SHEET<1,PPTR,RPTR> = NEW.SHEET
  PHS.NEW.QTY<1,PPTR>        = PHS.CUR.QTY<1,PPTR> - (SUM(PHS.CUR.WGHT<1,PPTR>) - SUM(PHS.NEW.WGHT<1,PPTR>))        ;* C40525
  WGHT = PHS.NEW.WGHT<1,PPTR,RPTR>
  GOSUB GET.DIAM; NEW.DIAM = DIAM
  PHS.NEW.DIAM<1,PPTR,RPTR>  = NEW.DIAM
  PHS.M.WGHT<1,PPTR>         = INV.M.WT
  PHS.NO.POST<1,PPTR>        = ""
  PHS.ADJ.CODE<1,PPTR,RPTR>  = "PHS"
  PHS.ADJ.TYPE<1,PPTR,RPTR>  = "R"
*  PHS.OPER.ID<1,PPTR,RPTR>   = EMPID
  PHS.OPER.ID<1,PPTR,RPTR>   = TEMP.NAME
  PHS.DATE.ENT<1,PPTR,RPTR>  = TODAY
  IF RAW.INPUT.QTY > CURR.QTY.ON.HAND THEN
    PHS.UN.PRICE<1,PPTR>    = IWH.COST.FI<1,DCOUNT(IWH.COST.FI,VM)>
  END
  PHS.UN.MAG<1,PPTR>         = ""
  PHS.PRT.DATE               = ""
  MATWRITE PHS.INV.REC ON PHYSICAL.INV, CONO:PHS.ID
  RETURN
