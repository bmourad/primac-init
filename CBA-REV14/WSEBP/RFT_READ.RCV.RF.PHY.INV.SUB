SUBROUTINE RFT_READ.RCV.RF.PHY.INV.SUB(CONO, EMPID,SEQ.NO,ROLLID,QTY1,DIAM1,PRICE1,TRANSFERFLAG,ERRMSG)
*********************************************************************
*
* PROGRAM  - RCV.RF.PHY.INV
*
* AUTHOR   - Alejandro Delgado
*
* DATE     - 06/21/2002
*
* DESCRIPTION
*
* This program is used to process physical inventory transactionss
* from the hand-held R-F units used in the warehouse.
*
*T26674 adelgado 06/21/2002 * Original Code
*********************************************************************
*
*---- COPY STATEMENTS
*
$INCLUDE RCV.CPYLIB RCV.FILE.VARS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB PHY.INV
$INCLUDE ICS.CPYLIB DAILY_TRANSFER
$INCLUDE ICS.CPYLIB TRANSFER
$INCLUDE CPYLIB FILE.VARS
*
*************
*OPEN FILES
**************
  OPEN "","PHY.INV" TO PHY.INV ELSE
    ERRMSG = 'PHY.INV FILE MISSING'
    RETURN
  END
  OPEN "","PHY.XREF" TO PHY.XREF ELSE
    ERRMSG = 'PHY.XREF FILE MISSING'
    RETURN
  END
  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = 'CATEGORY FILE MISSING'
    RETURN
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = 'PO FILE MISSING'
    RETURN
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = 'INVENTORY FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = 'INV.WHSE FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
    ERRMSG = 'INV.WHSE.LOC FILE MISSING'
    RETURN
  END
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
    ERRMSG = 'INV_SERIAL FILE MISSING'
    RETURN
  END
  OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
    ERRMSG = 'INV_RECEIPTS FILE MISSING'
    RETURN
  END
  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
    ERRMSG = 'WAREHOUSE FILE MISSING'
    RETURN
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    ERRMSG = 'DIVISION FILE MISSING'
    RETURN
  END
  OPEN "","DAILY_TRANSFER" TO DAILY_TRANSFER ELSE
    ERRMSG = 'DAILY_TRANSFER FILE MISSING'
    RETURN
  END
  OPEN "","TRANSFER" TO TRANSFER ELSE
    ERRMSG = 'TRANSFER FILE MISSING'
    RETURN
  END
  OPEN "","INV_SERIAL_TEMP" TO INV_SERIAL_TEMP ELSE
    ERRMSG = 'INV_SERIAL_TEMP FILE MISSING'
    RETURN                                     
  END                                              
  OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE 
    ERRMSG = 'INV_AUDIT_HIST FILE MISSING'
    RETURN                                              
  END                                                       
  OPEN "","INV_AUDIT_HIST_TEMP" TO INV_AUDIT_HIST_TEMP ELSE 
    ERRMSG = 'INV_AUDIT_HIST_TEMP FILE MISSING'
    RETURN                                              
  END                                                       
  OPEN "","INV_AUDIT_TAG" TO INV_AUDIT_TAG ELSE 
    ERRMSG = 'INV_AUDIT_TAG FILE MISSING'
    RETURN                                
  END                                                       
  OPEN "","INV.WHSE.LOC.TEMP" TO INV.WHSE.LOC.TEMP ELSE 
    ERRMSG = 'INV.WHSE.LOC.TEMP FILE MISSING'
    RETURN                        
  END                                                   
  OPEN "","INV_RECEIPTS_TEMP" TO INV_RECEIPTS_TEMP ELSE
    ERRMSG = 'INV_RECEIPTS_TEMP FILE MISSING'
    RETURN                       
  END                                                  
  OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE 
    ERRMSG = 'INV_RECP_WHSE FILE MISSING'
    RETURN                              
  END                                                     
  OPEN "","INV_RECP_WHSE_TEMP" TO INV_RECP_WHSE_TEMP ELSE 
    ERRMSG = 'INV_RECP_WHSE_TEMP FILE MISSING'
    RETURN                         
  END  
  OPEN "","EMPLOYEE" TO EMPLOYEE ELSE 
    ERRMSG = 'EMPLOYEE FILE MISSING'
    RETURN                                   
  END 
  DEFFUN RFT_CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,POS)
  DEFFUN RFT_CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,ROND,POS)
  DEFFUN RFT_CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)
*
 * DIM SAVE.PHYSI.REC(PHYSI.REC.SIZE)
  SPX = "" 
  MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
    EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
  END
  IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
  EMPNAME = SPX:EMPNAME
  MATREAD PHYSI.REC FROM PHY.INV, CONO:SEQ.NO ELSE
      MAT PHYSI.REC = ''
  END  
*
*---- MAIN PROCESSING
*
    GOSUB INIT.VARS
    GOSUB GET.PROD.SERIAL.RECEIPT   
        BEGIN CASE
          CASE RECEIPT.ID # ''
            LOCATE RECEIPT.ID IN PHYSI.RECP.NO<1>,1 SETTING POS ELSE POS = 0
          CASE PROD.ID # ''
            LOCATE PROD.ID IN PHYSI.PRODUCT<1>,1 SETTING POS ELSE POS = 0
          CASE SERIAL.ID # ''
            LOCATE SERIAL.ID IN PHYSI.SERIAL<1>,1 SETTING POS ELSE POS = 0
          CASE 1
            POS = 0
        END CASE
        IF POS = 0 THEN
          POS = DCOUNT(PHYSI.PRODUCT,@VM)+1
          MODE = 'A'
        END ELSE
          MODE = 'C'
        END
        GOSUB GET.MULTI.INPUT  
  *
  RETURN
*
INIT.VARS: 
* 
  SERIAL.ID = '' ; PROD.ID = ''
  RECEIPT.ID = ''
  QTY = '' ; PRICE = '' ; DIAM = ''
  TEMP.PROD = '' ; TEMP.SERIAL = '' ; TEMP.RECP.NO = '' ; GEN.DIV = ''
  RETURN
*
GET.PROD.SERIAL.RECEIPT: 
*
        FOUND = 0
        ;*   FIRST CHECK RECEIPT
        MATREAD INVR.REC FROM INV_RECEIPTS, CONO:ROLLID THEN
          MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD THEN
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
              BEGIN CASE
                CASE CATG.TRK.LVL = 'R'
                  RECEIPT.ID = ROLLID
                  TEMP.PROD = INVR.PROD
                  FOUND = 1
                CASE CATG.TRK.LVL = 'G'
                  PROD.ID = INVR.PROD
                  TEMP.PROD = INVR.PROD
                  FOUND = 1                  
                CASE CATG.TRK.LVL = 'S'
                  ERRMSG = 'SERIAL LEVEL ONLY'
                  RETURN 
              END CASE
            END
          END
        END
        ;*   CHECK PRODUCT
        IF FOUND = 0 THEN
          MATREAD INV.REC FROM INVENTORY, CONO:ROLLID THEN
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
              BEGIN CASE
                CASE CATG.TRK.LVL = 'R'
                  ERRMSG = 'RECEIPT LVL ONLY'
                  RETURN 
                CASE CATG.TRK.LVL = 'S'
                  ERRMSG = 'SERIAL LEVEL ONLY'
                  RETURN 
                CASE CATG.TRK.LVL = 'G'
                  PROD.ID = ROLLID
                  FOUND = 1
                  TEMP.PROD = PROD.ID
              END CASE
            END ELSE
              ERRMSG = 'INVALID PRODUCT'
              RETURN 
            END
          END
        END
        ;*   NEXT CHECK SERIAL
        IF FOUND = 0 THEN
          MATREAD ISTK.REC FROM INV_SERIAL, CONO:ROLLID THEN
            IF ISTK.POST.DATE = "" THEN
              ERRMSG = "SERIAL NOT RCVD"; RETURN
            END ELSE
              MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD THEN
                MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
                  BEGIN CASE
                    CASE CATG.TRK.LVL = 'R'
                      ERRMSG = 'RECEIPT LVL ONLY'
                      RETURN 
                    CASE CATG.TRK.LVL = 'G'
                      PROD.ID = ISTK.PROD
                      TEMP.PROD = ISTK.PROD
                      FOUND = 1                    
                    CASE CATG.TRK.LVL = 'S'
                      SERIAL.ID = ROLLID
                      FOUND = 1
                      TEMP.PROD = ISTK.PROD
                  END CASE
                END
              END
            END
          END
        END
        IF FOUND = 0 THEN
          ERRMSG = 'INVALID KEY'
          RETURN 
        END  
  RETURN
*
GET.MULTI.INPUT: 
*
$INCLUDE ICSBP INV.UM.CNV
TMP.QTY = 0
  BEGIN CASE
    CASE CATG.TRK.LVL = 'S'
      IF  PHYSI.WHSE # ISTK.WHSE OR PHYSI.LOC # ISTK.LOC THEN
        IF PHYSI.TRAN.TO # '' THEN
          ERRMSG = 'SERIAL NOT FOUND' ; RETURN
        END
        MATREAD WHSE.REC FROM WAREHOUSE,CONO:PHYSI.WHSE THEN
          IF WHS.DIV='' THEN
            FROM.DIV=GEN.DIV
          END ELSE
            FROM.DIV=WHS.DIV
          END
        END
        MATREAD WHSE.REC FROM WAREHOUSE,CONO:ISTK.WHSE THEN
          IF WHS.DIV='' THEN
            TO.DIV=GEN.DIV
          END ELSE
            TO.DIV=WHS.DIV
          END
        END
         IF TRANSFERFLAG="Y" THEN
          IF FROM.DIV # TO.DIV THEN
            ERRMSG = 'DIV MISMATCH'
            RETURN
          END 
        END ELSE
          RETURN
        END
      END
      TMP.QTY = ISTK.CUR.QTY+0
      TEMP.SERIAL = SERIAL.ID
      TEMP.RECP.NO = ISTK.RECP
    CASE CATG.TRK.LVL = 'R'
      TMP.QTY = PHYSI.PREV.QTY<1,POS> + 0
      TEMP.RECP.NO = RECEIPT.ID
    CASE 1
      TMP.QTY = PHYSI.PREV.QTY<1,POS> + 0
  END CASE  
  RETURN
*
*---- END OF PROGRAM
*
END
