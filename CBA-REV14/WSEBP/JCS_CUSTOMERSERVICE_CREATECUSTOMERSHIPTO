SUBROUTINE JCS_CUSTOMERSERVICE_CREATECUSTOMERSHIPTO(PAYLOAD,ERRMSG,STRXML)
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB TAX
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB FOB
$INCLUDE PMC.CPYLIB COUNTRY.CODE         ;*T25159
$INCLUDE CPYLIB CHAR
*
*---- OPEN FILES
*
*"<Payload><CustomerShipToData><CompanyNo>001</CompanyNo><ShipToCustomerNo></ShipToCustomerNo><ShipToNo></ShipToNo><ShipToName></ShipToName><ShipToAddress1></ShipToAddress1><ShipToAddress2></ShipToAddress2><ShipToCity></ShipToCity><ShipToState></ShipToState><ShipToZipCode></ShipToZipCode><ShipToCountryCode></ShipToCountryCode><ShipToAttention></ShipToAttention><ShipToSalesManCode></ShipToSalesManCode><ShipToShipViaCode></ShipToShipViaCode><ShipToShipTerms></ShipToShipTerms><ShipToFOBCode></ShipToFOBCode><ShipToPhoneNo></ShipToPhoneNo><ShipToFaxNo><ShipToFaxNo><ShipToStatus></ShipToStatus><ShipToStatusDate></ShipToStatusDate></CustomerShipToData></Payload>"
ERRMESG = ""
ERRFLAG = 1
ERRMSG = "<Payload><Rejects>"
STRXML="<Payload><CustomerShipToData>"
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG="CUSTOMER";GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG="SHIP.VIA";GOTO 93000
OPEN '','FOB' TO FOB ELSE ERRMSG="FOB";GOTO 93000
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN SALESMAN FILE";GOTO 93000
OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG="SHIP.TO";GOTO 93000
OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE  ERRMSG='COUNTRY.CODE';GOTO 93000
MODE = PAYLOAD<1>
CONO = PAYLOAD<2>
CUSTNO = PAYLOAD<3>
SHPNO = PAYLOAD<4>
SPT_NAME = PAYLOAD<5>
SPT_ADDR1 = PAYLOAD<6>
SPT_ADDR2 = PAYLOAD<7>
SPT_CITY = PAYLOAD<8>
SPT_STATE = PAYLOAD<9>
SPT_ZIP = PAYLOAD<10>
SPT_CNTY = PAYLOAD<11>
SPT_ATTN = PAYLOAD<12>
SPT_SLSMN = PAYLOAD<13>
SPT_SHIP_VIA = PAYLOAD<14>
SPT_SHP_TERMS = PAYLOAD<15>
SPT_FOB = PAYLOAD<16>
SPT_PHONE = PAYLOAD<17>
SPT_FAX = PAYLOAD<18>
SPT_STATUS = PAYLOAD<19>
SPT_STAT_DATE = PAYLOAD<20>
*PROMPT.DATA = SPT_NAME:VM:SPT_ADDR1:VM:SPT_ADDR2:VM:SPT_CITY:VM:SPT_STATE:VM:SPT_ZIP:VM:SPT_CNTY:VM:SPT_ATTN:VM:SPT_SLSMN:VM:SPT_SHIP_VIA :VM:SPT_SHP_TERMS:VM:SPT_FOB:VM:SPT_PHONE:VM:SPT_FAX:VM:SPT_STATUS:VM:SPT_STAT_DATE
*PROMPT.NAMES = "Name":VM:"Address1":VM:"Address2":VM:"City":VM:"State":VM:"Zip code":VM:"Country Code":VM:"Attention":VM:"Salesman Code":VM
*PROMPT.NAMES := "Ship Via Code":VM:"Ship Terms":VM:"FOB Code":VM:"Phone No":VM:"Fax No":VM:"Status":VM:"Status Date"
*PROMPT.LENGTH = "30":VM:"30":VM:"30":VM:"20":VM:"3":VM:"10":VM:"19":VM:"20":VM:"3":VM:"2":VM:"3":VM:"3":VM:"12":VM:"12":VM:"1":VM:"8"
PROMPT.DATA = SPT_NAME:VM:SPT_ADDR1:VM:SPT_ADDR2:VM:SPT_CITY:VM:SPT_STATE:VM:SPT_ZIP:VM:SPT_CNTY:VM:SPT_ATTN:VM:SPT_SHIP_VIA :VM:SPT_SHP_TERMS:VM:SPT_FOB:VM:SPT_PHONE:VM:SPT_FAX:VM:SPT_STATUS:VM:SPT_STAT_DATE
PROMPT.NAMES = "Name":VM:"Address1":VM:"Address2":VM:"City":VM:"State":VM:"Zip code":VM:"Country Code":VM:"Attention":VM
PROMPT.NAMES := "Ship Via Code":VM:"Ship Terms":VM:"FOB Code":VM:"Phone No":VM:"Fax No":VM:"Status":VM:"Status Date"
PROMPT.LENGTH = "30":VM:"30":VM:"30":VM:"20":VM:"3":VM:"10":VM:"19":VM:"20":VM:"2":VM:"3":VM:"3":VM:"12":VM:"12":VM:"1":VM:"8"
*************
READ COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG="Cono ":CONO:" does not exist"
  GOTO 91000
END
MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE
  MAT OPCO.REC = ""
END
MATREAD CUST.REC FROM CUSTOMER, CONO:CUSTNO ELSE
*	 ERRFLAG = 0
*	 ERRMSG := '<Reject>'
*	 ERRMSG := '<RejectCode>JCSRJ001</RejectCode>' 
*	 ERRMSG := '<RejectDescription>CUSTOMER ':CUSTNO:' DOES NOT EXIST</RejectDescription>'
*	 ERRMSG := '</Reject>'
    ERRMSG = 'CUSTOMER ':CUSTNO:' DOES NOT EXIST'
    GOTO 91000
END
FOR I = 1 TO DCOUNT(PROMPT.DATA,VM)
    K = I + 1
    IF PROMPT.DATA<1,I> # "" AND LEN(PROMPT.DATA<1,I>) GT PROMPT.LENGTH<1,I> THEN
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ00':K:'</RejectCode>' 
	 ERRMSG := '<RejectDescription>SHIPTO ':UPCASE(PROMPT.NAMES<1,I>):' SHOULD NOT EXCEED ':PROMPT.LENGTH<1,I>:' CHARACTERS</RejectDescription>'
	 ERRMSG := '</Reject>'
      END 
NEXT I
BEGIN CASE
 CASE SHPNO = "N" AND MODE = "C"
         CUST.SHIP.TO = CUST.SHIP.TO + 1
          SHPNO = CUST.SHIP.TO "R%3"
 CASE SHPNO # "N" AND MODE = "U"
  SHPNO = SHPNO "R%3"
  MATREAD SPT.REC FROM SHIP.TO, CONO:CUSTNO:"!":SHPNO ELSE
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ001</RejectCode>' 
	 ERRMSG := '<RejectDescription>CUSTOMER SHIP TO # ':SHPNO:' DOES NOT EXIST</RejectDescription>'
	 ERRMSG := '</Reject>'
  END
 CASE 1
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ0050</RejectCode>' 
	 ERRMSG := '<RejectDescription>INVALID SHIP TO ':SHPNO:' SUPPLIED TO THE WEBMETHOD</RejectDescription>'
	 ERRMSG := '</Reject>'
END CASE
  IF SPT_CNTY = "" THEN
    IF CUST.ADDL.OPS<1,4> = "" THEN
      SPT_CNTY = OPCO.CNTY
    END ELSE
      SPT_CNTY = CUST.ADDL.OPS<1,4>
    END
  END
MATREAD CTY.REC FROM COUNTRY.CODE,CONO:SPT_CNTY ELSE
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ0030</RejectCode>' 
	 ERRMSG := '<RejectDescription>COUNTRY CODE ':SPT_CNTY:' DOES NOT EXIST</RejectDescription>'
	 ERRMSG := '</Reject>'
END
  IF SPT_SLSMN = "" AND CUST.SALESMAN # "" THEN
    SPT_SLSMN = CUST.SALESMAN
  END
IF SPT_SLSMN # "" THEN
  MATREAD SALESMAN.REC FROM SALESMAN, CONO:SPT_SLSMN ELSE
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ0031</RejectCode>' 
	 ERRMSG := '<RejectDescription>SALES REP ':SPT_SLSMN:' DOES NOT EXIST</RejectDescription>'
	 ERRMSG := '</Reject>'
  END
END
  IF SPT_SHIP_VIA = "" AND CUST.SHIP.VIA # "" THEN
    SPT_SHIP_VIA = CUST.SHIP.VIA
  END
  IF SPT_SHIP_VIA # "" THEN
	  MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:SPT_SHIP_VIA ELSE
		 ERRFLAG = 0
		 ERRMSG := '<Reject>'
		 ERRMSG := '<RejectCode>JCSRJ0032</RejectCode>' 
		 ERRMSG := '<RejectDescription>SHIP VIA ':SPT_SHIP_VIA:' DOES NOT EXIST</RejectDescription>'
		 ERRMSG := '</Reject>'
	  END
  END
  IF SPT_SHP_TERMS # "" THEN
     IF SPT_SHP_TERMS # "PPD" AND SPT_SHP_TERMS # "PPA" AND SPT_SHP_TERMS # "COL" THEN
		 ERRFLAG = 0
		 ERRMSG := '<Reject>'
		 ERRMSG := '<RejectCode>JCSRJ0033</RejectCode>' 
		 ERRMSG := '<RejectDescription>INVALID SHIP TERMS ':SPT_SHP_TERMS:'</RejectDescription>'
		 ERRMSG := '</Reject>'          
     END  
  END ELSE IF SPT_SHP_TERMS = "" AND CUST.ADDL.OPS<1,3> # "" THEN
    SPT_SHP_TERMS = CUST.ADDL.OPS<1,3>
  END
  IF SPT_FOB = "" AND CUST.ADDL.OPS<1,2> # "" THEN
    SPT_FOB = CUST.ADDL.OPS<1,2>
  END
IF SPT_FOB # "" THEN
    MATREAD FOB.REC FROM FOB, CONO:SPT_FOB ELSE
	 ERRFLAG = 0
	 ERRMSG := '<Reject>'
	 ERRMSG := '<RejectCode>JCSRJ0034</RejectCode>' 
	 ERRMSG := '<RejectDescription>F.O.B # ':SPT_FOB:' DOES NOT EXIST</RejectDescription>'
	 ERRMSG := '</Reject>'
    END
END
IF LEN(SPT_PHONE) = 10 THEN
  SPT_PHONE = SPT_PHONE[1,3]:"-":SPT_PHONE[4,3]:"-":SPT_PHONE[7,4]
END
IF SPT_STAT_DATE # "" THEN
    IVALUE = ICONV(SPT_STAT_DATE,"D")
    OVALUE = OCONV(IVALUE,"D2/")
    IF SPT_STAT_DATE # OVALUE THEN
		 ERRFLAG = 0
		 ERRMSG := '<Reject>'
		 ERRMSG := '<RejectCode>CSCRC035</RejectCode>' 
		 ERRMSG := '<RejectDescription>SHIP TO DATE ':SPT_STAT_DATE:' IS NOT A VALID DATE</RejectDescription>'
		 ERRMSG := '</Reject>' 
    END
END
IF ERRFLAG THEN
   SPT.NAME        = SPT_NAME 
   SPT.ADDR1       = SPT_ADDR1
   SPT.ADDR2       = SPT_ADDR2
   SPT.CITY        = SPT_CITY
   SPT.STATE       = SPT_STATE
   SPT.ZIP         = SPT_ZIP
   SPT.CNTY        = SPT_CNTY
   COUNTRY         = CTY.DESC
   SPT.ATTN        = SPT_ATTN
   SPT.SLSMN       = SPT_SLSMN
   * SALS.NAME
   SALS_NAME       = SALS.NAME
   SPT.SHIP.VIA    = SPT_SHIP_VIA
   *SHPV.DESC
   SHPV_DESC       = SHPV.DESC
   SPT.SHP.TERMS   = SPT_SHP_TERMS
   SPT_FOB         = SPT.FOB
   *FOB.DESC
   FOB_DESC        = FOB.DESC
   SPT.PHONE       = SPT_PHONE
   SPT.FAX         = SPT_FAX
   IF LEN(SPT.FAX) = 10 THEN
      TEMP.SPT.FAX = SPT.FAX[1,3]:"-":SPT.FAX[4,3]:"-":SPT.FAX[7,4]
   END
   SPT.STATUS      = SPT_STATUS
   SPT.STAT.DATE   = SPT_STAT_DATE
   SPT.STAT.DATE = ICONV(SPT.STAT.DATE,"D2/")
   MATWRITE SPT.REC ON SHIP.TO, CONO:CUSTNO:"!":SHPNO
  MATWRITE CUST.REC ON CUSTOMER, CONO:CUSTNO
PROMPT.DATA = CUSTNO:VM:SHPNO:VM:SPT.NAME:VM:SPT.ADDR1:VM:SPT.ADDR2:VM:SPT.CITY:VM:SPT.STATE:VM:SPT.ZIP:VM:SPT.CNTY:VM:COUNTRY:VM:SPT.ATTN:VM:SPT.SLSMN:VM:SALS_NAME:VM:SPT.SHIP.VIA:VM:SHPV_DESC:VM:SPT.SHP.TERMS:VM:SPT_FOB:VM:FOB_DESC:VM:SPT.PHONE:VM:TEMP.SPT.FAX:VM:SPT.STATUS:VM:SPT_STAT_DATE
PROMPT.NAMES = "Customer No":VM:"No":VM:"Name":VM:"Address1":VM:"Address2":VM:"City":VM:"State":VM:"Zip Code":VM:"Country Code":VM:"Country Desc":VM:"Attention":VM:"SalesMan Code":VM:"SalesMan Name":VM
PROMPT.NAMES := "Ship Via Code":VM:"ShipVia Desc":VM:"Ship Terms":VM:"FOB Code":VM:"FOB Desc":VM:"Phone No":VM:"Fax No":VM:"Status":VM:"Status Date"
FOR J = 1 TO DCOUNT(PROMPT.NAMES,VM)
  STRXML:="<ShipTo":TRIM(PROMPT.NAMES<1,J>,' ','A'):">":PROMPT.DATA<1,J>:"</ShipTo":TRIM(PROMPT.NAMES<1,J>,' ','A'):">"
NEXT J
STRXML:="</CustomerShipToData></Payload>"
END ELSE
   ERRMSG := "</Rejects></Payload>"
   STRXML = ERRMSG
END
RETURN
********
91000*
93000*
********
  STRXML = '<Payload><Rejects><Reject><RejectCode>JCSRJ000</RejectCode>'
  STRXML :='<RejectDescription>':ERRMSG:'</RejectDescription>'
  STRXML :='</<Reject></Rejects></Payload>'
  CALL WRITELOG(ERRMSG)
RETURN
