SUBROUTINE JCS_GETJOBRESERVEMATERIALS(CONO, JOBID,SCHEMA.ONLY,ERRMSG,STRXML)
STRXML = '<JobMaterial><JOB_RESV_MATL_MC></JOB_RESV_MATL_MC><AllocatedAmount></AllocatedAmount><AllocatedQuantity></AllocatedQuantity><PaperType></PaperType><ProductId></ProductId><ProductDescription></ProductDescription><ReservedAmount></ReservedAmount><ReservedDate></ReservedDate><ReservedQuantity></ReservedQuantity><UOM></UOM><UsedAmount></UsedAmount><UsedQuantity></UsedQuantity><Warehouse></Warehouse></JobMaterial>'
SCHEMA.ONLY="1"
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB INVENTORY
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'CANNOT OPEN JOB FILE'  
  GOTO 99999 
END
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'CANNOT OPEN INVENTORY FILE' 
  GOTO 99999 
END
* MAIN PROCESSING
*
MATREAD JOB.REC FROM JOB, CONO:JOBID THEN
          SCHEMA.ONLY="0"           
           CNT=DCOUNT(JOB.RESV.MATL,@VM)	    
	   IF CNT > 0 THEN
           FOR C = 1 TO CNT
	        STRXML = '<JobMaterial>'
               	MAT INV.REC=""
                MATREAD INV.REC FROM INVENTORY, CONO:JOB.RESV.MATL<1,C> ELSE
                           ERRMSG = 'PRODUCT NUMBER ':JOB.RESV.MATL<1,C>:' IS MISSING'; GOSUB 99999
                END 			
		STRXML := '<JOB_RESV_MATL_MC>' : C : '</JOB_RESV_MATL_MC>'
		STRXML := '<AllocatedAmount>' : OCONV(JOB.ALOC.AMT<1,C>,"MD2")  : '</AllocatedAmount>'
		STRXML := '<AllocatedQuantity>' : OCONV(JOB.ALOC.QTY<1,C>,"MD2")  : '</AllocatedQuantity>'
		STRXML := '<PaperType>' : INV.PAP.TYPE  :'</PaperType>'
                STRXML := '<ProductId>' : JOB.RESV.MATL<1,C> : '</ProductId>'
                STRXML := '<ProductDescription>' : INV.FULL.DESC : '</ProductDescription>'
                STRXML := '<ReservedAmount>' : OCONV(JOB.RESV.AMT<1,C>,"MD2")  : '</ReservedAmount>'
		STRXML := '<ReservedDate>' : OCONV(JOB.RESV.DATE<1,C>,"D2/") : '</ReservedDate>'
                STRXML := '<ReservedQuantity>' : OCONV(JOB.RESV.QTY<1,C>,"MD2")  : '</ReservedQuantity>'
                STRXML := '<UOM>' : INV.UNIT<1,2> : '</UOM>' 
		STRXML := '<UsedAmount>' : OCONV(JOB.USED.AMT<1,C>,"MD2")  : '</UsedAmount>'
                STRXML := '<UsedQuantity>' : OCONV(JOB.USED.QTY<1,C>,"MD2")  : '</UsedQuantity>'
                STRXML := '<Warehouse>' : JOB.RESV.WHSE<1,C>  : '</Warehouse>'           			       		
		STRXML := '</JobMaterial>' 
            NEXT C
	    END
	    
END
RETURN
*
* WRITE ERROR MESSAGE
*
99999*
      IF ERRMSG <> "" THEN
      ERRMSG = "ERROR FROM JCS_GETJOBRESERVEMATERIALS --> " : ERRMSG
      CALL WRITELOG(ERRMSG)
      END
RETURN
