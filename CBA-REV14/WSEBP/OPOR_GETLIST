SUBROUTINE OPOR_GETLIST(CONO,DATAFILE,STRXML,ERRMSG,SCHEMA.ONLY,VALUE)
SCHEMA.ONLY = 1
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE CPYLIB CHAR
* OPEN FILES
*
OPEN "","COMPANY" TO COMPANY ELSE
           ERRMSG = "CANNOT OPEN COMPANY FILE"
           GOTO 99999
END
OPEN "","CONTROL" TO CONTROL ELSE
           ERRMSG = "CANNOT OPEN CONTROL FILE"
           GOTO 99999
END
OPEN "","JOB" TO JOB ELSE
           ERRMSG = "CANNOT OPEN JOB FILE"
           GOTO 99999
END
OPEN "","DIVISION" TO DIVISION ELSE
           ERRMSG = "CANNOT OPEN DIVISION FILE"
           GOTO 99999
END
OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
           ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
           GOTO 99999
END
OPEN "","COST.CNTR" TO COST.CNTR ELSE
           ERRMSG = "CANNOT OPEN COST.CNTR FILE"
           GOTO 99999
END
OPEN "","CATEGORY.OSP" TO CATEGORY.OSP ELSE
           ERRMSG = "CANNOT OPEN CATEGORY.OSP FILE"
           GOTO 99999
END
OPEN "","OPERATION" TO OPERATION ELSE
           ERRMSG = "CANNOT OPEN OPERATION FILE"
           GOTO 99999
END
*OPEN "",DATAFILE TO DATAF ELSE
*	   ERRMSG = "CANNOT OPEN ":DATAFILE:" FILE"
*	   GOTO 99999
*END
YAK = ""
YAK<1> = CONO:"~~~":DATAFILE:"VALUE ":VALUE;WRITE YAK ON CONTROL,'01INPUT'
*
* INITIALIZE  VARIABLES
*
GEN.DIV = "00";GEN.DEPT = "00"; GEN.CCTR = "000"
ERRMSG=""
CONO_ID = ""
LISTXML = ""
XMLTAG = ""
*
* MAIN PROCESSING
*
****XML LIST
MATREAD COMP.REC FROM COMPANY,CONO ELSE
SCHEMA.ONLY = 0
ERRMSG="Company number ":CONO : " does not exist"
GOTO 99999
END
CNT = 0
IF DATAFILE = 'JOB' THEN
   *CMD= "SSELECT ":DATAFILE:" WITH @ID LIKE '":CONO:"...' AND WITH JOB_DIV = '":VALUE:"' AND WITH JOB_DIV # 00"
   CMD= "SSELECT ":DATAFILE:" WITH @ID LIKE '":CONO:"...' AND WITH JOB_DIV = '":VALUE:"'"
END ELSE
  CMD= "SSELECT ":DATAFILE:" WITH @ID LIKE '":CONO:"...'"
END
UDTEXECUTE CMD CAPTURING JUNG
YAK<-1> = "CMD  ":CMD:"JUNG ":JUNG;WRITE YAK ON CONTROL,'01INPUT'
DATA=1
LOOP
  READNEXT ID ELSE DATA=0
  WHILE DATA DO
    SCHEMA.ONLY = 0
BEGIN CASE
      CASE DATAFILE = 'JOB'    
         MATREAD JOB.REC FROM JOB, ID ELSE CONTINUE
	 OPO.DIV.OWNER = VALUE
         IF OPO.DIV.OWNER # "00" THEN
            IF JOB.DIV # OPO.DIV.OWNER AND OPO.DIV.OWNER # GEN.DIV THEN
               *ERRMSG = "Job division does not match PO division"
               CONTINUE
            END
         END
	 MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE CONTINUE
	 DIV_DESC<1,-1> = DIV.DESC
	 *MATREAD DEPT.REC FROM DEPARTMENT, CONO:DIV.DEPT ELSE MAT DEPT.REC="";DEPT.DESC="UNKNOWN"
         XMLTAG = "Job"
      CASE DATAFILE = "CATEGORY.OSP"
          MATREAD CAOS.REC FROM CATEGORY.OSP, ID ELSE CONTINUE
	  XMLTAG = "Category"
      CASE DATAFILE = "COST.CNTR"
         MATREAD CCTR.REC FROM COST.CNTR,ID ELSE CONTINUE
	 YAK<-1> = "JOB NO ":CONO:VALUE;WRITE YAK ON CONTROL,'01INPUT'
         MATREAD JOB.REC FROM JOB,CONO:VALUE ELSE CONTINUE
         OPO.DVDPCC = JOB.DIV
	 YAK<-1> = "OPO.DVDPCC  ":OPO.DVDPCC;WRITE YAK ON CONTROL,'01INPUT'
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE CONTINUE
	 YAK<-1> = " OPO.DVDPCC  ": OPO.DVDPCC :"DEPT.DIV  ":DEPT.DIV;WRITE YAK ON CONTROL,'01INPUT'
         FDDV = 0
         LOCATE OPO.DVDPCC IN DEPT.DIV<1>,1 SETTING FDDV ELSE FDDV = 0
         IF FDDV = 0 THEN
            *ERRMSG='DEPT-COST CNTR MISMATCH FOR SELECTED DIVISION'
            CONTINUE
         END
	 XMLTAG = "CCTR"
      CASE DATAFILE = "OPERATION"
	   MATREAD OPER.REC FROM OPERATION,ID ELSE CONTINUE
	   OPER.CODE = ID[4,99]
	   MATREAD CCTR.REC FROM COST.CNTR,CONO:VALUE THEN
	      LOCATE OPER.CODE IN CCTR.OPER<1>,1 SETTING OP.POS THEN
			*   found oper in cost cntr can proceed
		 *OPO.OPER.CODE<1,1,LN1> = OPER.CODE
	      END ELSE
		 *ERRMSG='Operation is not related to CCTR ':OPO.DVDPCC<1,3,LN1>
		 CONTINUE
	      END
	   END ELSE
	      *ERRMSG="Cost Center ":OPO.DVDPCC<1,3,LN1>:" is not valid"
	      CONTINUE
	   END
	   XMLTAG = "Operation"
      CASE 1
        XMLTAG = DATAFILE
END CASE
    CNT = CNT + 1
        LISTXML<1,CNT> = ID[4,99]
REPEAT
YAK<-1> = "LISTXML  ":LISTXML;WRITE YAK ON CONTROL,'01INPUT'
*STRXML='<':XMLTAG:'Id>'  : LISTXML  : '</':XMLTAG:'Id>'
STRXML='<':DATAFILE:'Id>'  : LISTXML  : '</':DATAFILE:'Id>'
UDTEXECUTE "CLEARSELECT"
RETURN
*
* WRITE ERROR MESSAGE
*
99999*
IF ERRMSG <> "" THEN
YAK<-1> = "ERRMSG  ":ERRMSG;WRITE YAK ON CONTROL,'01INPUT'
        STRXML:='<ErrorStack>'  : ERRMSG : '</ErrorStack>'
      ERRMSG = "OPORGetList ----> OPOR_GETLIST --->": ERRMSG
      CALL WRITELOG(ERRMSG)
END
RETURN
