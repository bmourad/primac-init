SUBROUTINE OPOR_OPORSERVICE_GETITEMALLOCATIONINFO(CONO,VALUE,ERRMSG,STRXML,SCHEMA.ONLY)
************************************************************************
$INCLUDE CPYLIB COMMON1      
$INCLUDE POS.CPYLIB COM.OPO
$INCLUDE PMC.CPYLIB COM.VEND
*
$DEFINE OUTSIDE.PO
$INCLUDE POS.CPYLIB OUTSIDE.PO
$DEFINE VEND
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE PMC.CPYLIB COA
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB DIVISION
*T040609 v
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE CPYLIB CHAR
*T040609 ^
*
OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
*T040609 ^
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE
      ERRMSG = 'CATEGORY.OSP FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'COA' TO COA ELSE
      ERRMSG = 'COA FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'DIVISION' TO DIVISION ELSE
      ERRMSG = "CANNOT OPEN DIVISION FILE"
      GOTO 93000
   END
   OPEN 'DEPARTMENT' TO DEPARTMENT ELSE
      ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
      GOTO 93000
   END
   OPEN 'COST.CNTR' TO COST.CNTR ELSE
      ERRMSG = "CANNOT OPEN COST.CNTR FILE"
      GOTO 93000
   END
*T25755 v
   OPEN '','OPERATION' TO OPERATION ELSE
      ERRMSG = 'OPERATION FILE IS MISSING'
      GOTO 93000
   END
SCHEMA.ONLY = 1
STRXML = "<AllocationItem>"
GEN.DIV = "00";GEN.DEPT = "00"; GEN.CCTR = "000"
MAT OPO.REC = ""
OPO.NO = ""
EXT.FLAG = 0
YAK = ""
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
*IF CO.PO.REQ.FLAG = "Y" THEN
  OPEN '','OUT.REQ' TO OUT.REQ ELSE ERRMSG = 'OUT.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
  USER.ID = UPCASE(@LOGNAME)
*END
   IF CO.APS.O.INTRF > 2 THEN
      OPEN '','VEND.STATS' TO VEND.STATS ELSE
         ERRMSG = 'VEND.STATS FILE IS MISSING'
         GOSUB 93000
      END
      OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
         ERRMSG = 'VEND.PO.STATS FILE IS MISSING'
         GOSUB 93000
      END
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = 'VEND.PROD.STATS FILE IS MISSING'
         GOSUB 93000
      END
   END
LN = VALUE<2> ;*ITEM ALLOCATION LINE NO.
IF INDEX(VALUE<1>,"!",1) > 0 THEN
 INPUT_UOM = FIELD(VALUE<1>,"!",2)
 VALUE<1> = FIELD(VALUE<1>,"!",1)
END
BEGIN CASE
 CASE VALUE<1> = "JOB"
****** ENTER JOB INFORMATION
ECD.RET.VALUE=VALUE<3>
OPO.DIV.OWNER = VALUE<4>
         MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
            ERRMSG = "Not a Valid Job Number"
            GOTO 93000
         END
         IF OPO.DIV.OWNER # "00" THEN
            IF JOB.DIV # OPO.DIV.OWNER AND OPO.DIV.OWNER # GEN.DIV THEN
               ERRMSG = "Job division does not match PO division"
               GOTO 93000
            END
         END
	  MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE
	      ERRMSG = "DIVISION NOT ON FILE"
	      GOTO 93000
	  END
         OPO.JOB.NO<1,LN> = ECD.RET.VALUE
         OPO.DVDPCC<1,1,LN> = JOB.DIV
	  STRXML := "<JobDesc>":JOB.DESC<1,1>:"</JobDesc>"
	  STRXML := "<Div>":JOB.DIV:"</Div>"
	  STRXML := "<DivDesc>":DIV.DESC:"</DivDesc>"
  CASE VALUE<1> = "CATEGORY"
         ECD.RET.VALUE=VALUE<3>
         OPO.DATE<1> = ICONV(VALUE<4>,"D2/")
         MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:ECD.RET.VALUE ELSE
            ERRMSG = "OSP Category Not on File"
            GOTO 93000
         END 
         STRXML := "<CategoryDesc>":CAOS.DESC:"</CategoryDesc>"
	 ECD.DEFAULT = OPO.DATE<1> + CAOS.LEAD.TIME
         STRXML := "<DefaultDelDate>":OCONV(ECD.DEFAULT,"D2/"):"</DefaultDelDate>"
  CASE VALUE<1> = "DELDATE"
        OPO.JOB.NO<1,LN> = VALUE<3>
         ECD.RET.VALUE = ICONV(VALUE<4>,"D2/")
        MATREAD JOB.REC FROM JOB,CONO:OPO.JOB.NO<1,LN> ELSE MAT JOB.REC = "" 
         IF ABS(DATE() - ECD.RET.VALUE) > 365*10 THEN
            ERRMSG = "DATE OUTSIDE 10 YEAR RANGE, CONTINUE (Y/N)? "
	    GOTO 93000
	 END
       IF ECD.RET.VALUE GT JOB.TRACK.DATE<1,4> THEN
          ERRMSG = "Date entered is past the job due date of ":OCONV(JOB.TRACK.DATE<1,4>,"D2/"):"."
          GOTO 93000
       END
      STRXML := "<IconvDelDate>":ECD.RET.VALUE:"</IconvDelDate>"
      OPO.EXP.DATE<1,LN> = ECD.RET.VALUE
 CASE VALUE<1> = "Uprice"
   OLD.U.PRICE = VALUE<3>
   OPO.JOB.NO = VALUE<4>
   OPO.U.PRICE = VALUE<5>
   OPO.DISCOUNT = VALUE<6>
   OPO.UOM = VALUE<7>
   OPO.QTY = VALUE<8>
   OPO.CANCEL.QTY = VALUE<9>
   IF OPO.QTY<1,LN> AND OLD.U.PRICE # OPO.U.PRICE<1,LN> THEN
      AA = LN
      GOSUB 1019
   END ELSE
     GOSUB 1021
   END
 CASE VALUE<1> = "Disc"
   OLD.DISC = VALUE<3>
   OPO.JOB.NO = VALUE<4>
   OPO.U.PRICE = VALUE<5>
   OPO.DISCOUNT = VALUE<6>
   OPO.UOM = VALUE<7>
   OPO.QTY = VALUE<8>
   OPO.CANCEL.QTY = VALUE<9>
   IF OPO.QTY<1,LN> AND OLD.DISC # OPO.DISCOUNT<1,LN> THEN
      GOSUB 1021
   END
 CASE VALUE<1> = "UOM"
   OLD.UOM = VALUE<3>
   OPO.JOB.NO = VALUE<4>
   OPO.U.PRICE = VALUE<5>
   OPO.DISCOUNT = VALUE<6>
   OPO.UOM = VALUE<7>
   OPO.QTY = VALUE<8>
   OPO.CANCEL.QTY = VALUE<9>
   IF OPO.QTY<1,LN> AND OLD.UOM # OPO.UOM<1,LN> THEN
   *Added by yakub on 11/06/09 v
      AA = LN
      GOSUB 1019
   *Added by yakub on 11/06/09 ^
      GOSUB 1021
   END
 CASE VALUE<1> = "Qty Order"
   OLD.QTY = VALUE<3>
   OPO.JOB.NO = VALUE<4>
   OPO.U.PRICE = VALUE<5>
   OPO.DISCOUNT = VALUE<6>
   OPO.UOM = VALUE<7>
   OPO.QTY = VALUE<8>
   OPO.CANCEL.QTY = VALUE<9>
   IF OPO.QTY<1,LN> AND OLD.QTY # OPO.QTY<1,LN> THEN
      AA = LN
      GOSUB 1019
   END ELSE
     GOSUB 1021
   END
 CASE VALUE<1> = "Qty Cancelled"
   OPO.PROD.SEQ<1,LN> = VALUE<2>
   OLD.CANCEL.QTY = VALUE<3>
   OPO.JOB.NO = VALUE<4>
   OPO.U.PRICE = VALUE<5>
   OPO.DISCOUNT = VALUE<6>
   OPO.UOM = VALUE<7>
   OPO.QTY = VALUE<8>
   OPO.CANCEL.QTY = VALUE<9>
   OPO.PROD.LINE = VALUE<10>
   OPO.NO = VALUE<11>
   OPO.VEND.NO = VALUE<12>
   ECD.RET.VALUE = OPO.CANCEL.QTY<1,LN>
   GOSUB 1003
   TEMP.XCL = OPO.QTY<1,LN> - OPO.QTY.RECVD<1,LN> - OLD.CANCEL.QTY
   IF TEMP.XCL < 0 THEN TEMP.XCL = 0
   IF ECD.RET.VALUE > TEMP.XCL THEN
      ERRMSG="CANCELLED QUANTITY IS GREATER THAN THE OPEN QUANTITY"
      GOTO 93000
   END
   IF OPO.QTY<1,LN> > 0 AND ECD.RET.VALUE < 0 THEN
      ERRMSG="CANCELLED QUANTITY IS LESS THAN THE OPEN QUANTITY"
      GOTO 93000
   END
   IF ECD.RET.VALUE = '' THEN ECD.RET.VALUE = 0
   IF ECD.RET.VALUE # 0 AND ECD.RET.VALUE # OLD.CANCEL.QTY THEN OPO.CANCEL.DATE<1,LN> = DATE()
   OPO.CANCEL.QTY<1,LN> = ECD.RET.VALUE
   DESC.PRICE = INT(OPO.U.PRICE<1,LN>*((OPO.DISCOUNT<1,LN>/10000)))
   DESC.PRICE = INT(OPO.U.PRICE<1,LN> - DESC.PRICE)
   BEGIN CASE
      CASE OPO.UOM<1,LN> = "M" 
         CANCEL.AMT = INT(((DESC.PRICE/100)*(OPO.CANCEL.QTY<1,LN>/100000)+.5))
      CASE OPO.UOM<1,LN> = "C" 
         CANCEL.AMT = INT(((DESC.PRICE/100)*(OPO.CANCEL.QTY<1,LN>/10000)+.5))
      CASE 1
         CANCEL.AMT = INT((DESC.PRICE/100) * (OPO.CANCEL.QTY<1,LN>/100)+.5)
   END CASE
   OPO.CANCEL.COST<1,LN> = CANCEL.AMT
   AA=LN
   GOSUB 1020
   GOSUB 1021
 CASE VALUE<1> = "Cctr"
    OPO.DVDPCC<1,1,LN> = VALUE<3>
    ECD.RET.VALUE = VALUE<4>
         MATREAD CCTR.REC FROM COST.CNTR,CONO:ECD.RET.VALUE ELSE
            ERRMSG = "COST CENTER NOT ON FILE"
            GOTO 93000
         END
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
            MAT DEPT.REC=""
            ERRMSG="COST CNTR DEPARTMENT (":CCTR.DEPT:") IS MISSING"
            GOTO 93000
         END
         FDDV = 0
         LOCATE OPO.DVDPCC<1,1,LN> IN DEPT.DIV<1>,1 SETTING FDDV ELSE FDDV = 0
         IF FDDV = 0 THEN
            ERRMSG='DEPT-COST CNTR MISMATCH FOR SELECTED DIVISION'
            GOTO 93000
         END
         FDDV = 0
         OPO.DVDPCC<1,3,LN>=ECD.RET.VALUE
         OPO.DVDPCC<1,2,LN>=CCTR.DEPT
   STRXML := "<Dept>":CCTR.DEPT:"</Dept>"
   STRXML := "<DeptDesc>":DEPT.DESC:"</DeptDesc>"
   STRXML := "<CctrDesc>":CCTR.DESC:"</CctrDesc>"
CASE VALUE<1> = "Oper"
   OPER.CODE = VALUE<3>
   OPO.DVDPCC<1,3,LN> = VALUE<4>
   MATREAD OPER.REC FROM OPERATION,CONO:OPER.CODE ELSE
      ERRMSG=OPER.CODE:" is not a valid operation code"
      GOTO 93000
   END
   MATREAD CCTR.REC FROM COST.CNTR,CONO:OPO.DVDPCC<1,3,LN> THEN
      LOCATE OPER.CODE IN CCTR.OPER<1>,1 SETTING OP.POS THEN
                *   found oper in cost cntr can proceed
         OPO.OPER.CODE<1,1,LN> = OPER.CODE
      END ELSE
         ERRMSG='Operation is not related to CCTR ':OPO.DVDPCC<1,3,LN>
         GOTO 93000
      END
   END ELSE
      ERRMSG="Cost Center ":OPO.DVDPCC<1,3,LN>:" is not valid"
      GOTO 93000
   END
   STRXML := "<Opereration>":OPER.DESC:"</Opereration>"
CASE VALUE<1> = "Delete"
  *OPO.PROD.SEQ<1,LN> = VALUE<2>
  OPO.NO = VALUE<3>
  OPO.VEND.NO<1> = VALUE<4>
  OPO.JOB.NO = VALUE<5>
  OPO.PROD.LINE = VALUE<6>
   ERMSG = ""
    FOR I = DCOUNT(OPO.JOB.NO,VM) TO 1 STEP -1
      MAT VPDS.REC = 0
      OPO.PROD.SEQ<1,I> = I
               IF CO.APS.O.INTRF > 2 THEN
                  VPDS.KEY = CONO:OPO.VEND.NO<1>:"!O!":OPO.NO:"!":OPO.JOB.NO<1,I>:"!":OPO.PROD.LINE<1,I>:"@":OPO.PROD.SEQ<1,I>
                  ERR = 1
                  MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE MAT VPDS.REC = 0
               END
               IF VPDS.REC.QTY OR VPDS.VOU.NO THEN
                 * ERRMSG="ITEMS THAT HAVE BEEN UPDATED CAN NOT BE DELETED"
                 * GOTO 93000
		 ERMSG<1,I> = I
	       END ELSE
                 ERMSG<1,I> = ""
	       END
    NEXT I
    *IF ERMSG # "" THEN 
        ERRMSG = ERMSG
        GOTO 93000
   * END
CASE VALUE<1> = "Terms"
   ECD.RET.VALUE=VALUE<3>
   IF NOT(ECD.RET.VALUE MATCH "3N") AND NOT(ECD.RET.VALUE MATCH "1X2N") THEN
      ERRMSG = 'Invalid pattern match for terms'
      GOTO 93000
   END
   OPO.TERMS.DESC = ECD.RET.VALUE
END CASE
STRXML := "</AllocationItem>"
SCHEMA.ONLY = 0
RETURN
*******
**** CALCULATE OPEN QTY
1020 *
   OPO.TOT.OPEN<1,AA> = OPO.QTY<1,AA> - OPO.QTY.RECVD<1,AA> - OPO.CANCEL.QTY<1,AA>
   IF OPO.TOT.OPEN<1,AA> < 0 THEN OPO.TOT.OPEN<1,AA> = 0
   STRXML := "<OpenedQuantity>": OCONV(OPO.TOT.OPEN<1,AA> , "MD2"):"</OpenedQuantity>"
   RETURN
**** CALCULATE ORDERD VALUE
1019 *
   DESC.PRICE = INT(OPO.U.PRICE<1,AA>*((OPO.DISCOUNT<1,AA>/10000)))
   DESC.PRICE = INT(OPO.U.PRICE<1,AA> - DESC.PRICE)
*T23319 v
   BEGIN CASE
      CASE OPO.UOM<1,AA> = "M" 
*        ONORD.AMT = INT(((DESC.PRICE/1000)*(OPO.QTY<1,AA>/100)+.5)/100)
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,AA>/100000)+.5)
      CASE OPO.UOM<1,AA> = "C"
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,AA>/10000)+.5)
      CASE 1
*        ONORD.AMT = INT(((DESC.PRICE) * (OPO.QTY<1,AA>/100)+.5)/100)
*T27938 v
*        ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100)+ .5)

         IF DESC.PRICE LT 0 THEN
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100) - .5)
         END ELSE
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100) + .5)
         END
*T27938 ^
   END CASE
*T23319 ^
   IF ONORD.AMT > 999999999 THEN
      ERRMSG="Extended amount cannot exceed 9,999,999.99"
      EXT.FLAG = 1
      GOTO 93000
   END ELSE
      OPO.EST.COST<1,AA> = ONORD.AMT
      STRXML := "<ExOrderedQuantity>": OCONV(ONORD.AMT, "MD2"):"</ExOrderedQuantity>"
      GOSUB 1021
   END
   RETURN
**********
*** CALCULATE TotalS
*
1021 *
   P.CNT = DCOUNT(OPO.JOB.NO,VM)
   TOT.QTY = 0 ; TOT.AMT = 0
   FOR A = 1 TO P.CNT
      TOT.QTY = TOT.QTY + OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>
      DESC.PRICE = INT(OPO.U.PRICE<1,A>*((OPO.DISCOUNT<1,A>/10000)))
      DESC.PRICE = INT(OPO.U.PRICE<1,A> - DESC.PRICE)
*T23319 v
      BEGIN CASE
         CASE OPO.UOM<1,A> = "M" 
*              ONORD.AMT.TOT = INT(((DESC.PRICE) * (OPO.QTY<1,A>*10)+.5)/100)
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100000)+.5))
*                 ONORD.AMT.TOT = INT(((DESC.PRICE/1000)*(OPO.QTY<1,A>))+.5)
         CASE OPO.UOM<1,A> = "C"
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/10000)+.5))
         CASE 1
            ONORD.AMT.TOT = INT((DESC.PRICE/100) * ((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100)+.5)
*              ONORD.AMT.TOT = INT(((DESC.PRICE) * (OPO.QTY<1,A>/100)+.5)/100)
      END CASE
*T23319 ^
      TOT.AMT = TOT.AMT + ONORD.AMT.TOT
   NEXT A
   IF OCONV(TOT.AMT, "MD2") GT "99999999.9999" THEN
      ERRMSG="Total Extended amount cannot exceed 99,999,999.99"
      EXT.FLAG = 1
      GOTO 93000
   END
     STRXML := "<TotalQuantityOrdered>":OCONV(TOT.QTY,"MD2"):"</TotalQuantityOrdered>"
     STRXML := "<TotalDollarAmount>":OCONV(TOT.AMT,"MD2"):"</TotalDollarAmount>"
   RETURN
*****
****GET RECEIVED INFO
1003 *
   IF CO.APS.O.INTRF < 3 THEN RETURN
   IF OPO.PROD.LINE<1,LN> # '' AND OPO.JOB.NO<1,LN> # '' THEN
      VPDS.KEY=CONO:OPO.VEND.NO:"!O!":OPO.NO:"!":OPO.JOB.NO<1,LN>:"!":OPO.PROD.LINE<1,LN>:"@":OPO.PROD.SEQ<1,LN>
      MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE MAT VPDS.REC = ''
      DATE.RECVD = VPDS.REC.DATE
      IF VPDS.REC.QTY = '' THEN 
         QTY.RECVD = 0
      END ELSE
         QTY.RECVD = SUM(VPDS.REC.QTY)
      END
   END
   OPO.QTY.RECVD<1,LN> = QTY.RECVD
STRXML := "<QuantityReceived>":OPO.QTY.RECVD<1,LN>:"</QuantityReceived>"
   RETURN
93000*
SCHEMA.ONLY = 0
STRXML = "<AllocationItem><ErrMsg>": ERRMSG:"</ErrMsg></AllocationItem>"
END
