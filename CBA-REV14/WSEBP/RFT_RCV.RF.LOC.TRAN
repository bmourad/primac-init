SUBROUTINE RFT_RCV.RF.LOC.TRAN(CONO,EMPID,WARE_HOUSE,FROM_LOC,TO_LOC,CORRECT,ERRMSG1)
*********************************************************************
*
* PROGRAM  - RCV.RF.LOC.TRAN
*
* AUTHOR   - JULIANNE MATHESON, NASTech, Inc.
*
* DATE     - 05/11/00
*
* DESCRIPTION
*
* This program is used to process location transfers
* from the hand-held R-F units used in the warehouse.
* All rolls in a location will be transferred to another location.
*T26132 cm 09/10/2001 * Change screen size from 21x16 to 20x15.
*T26496 lhelms 04/10/2002 * UPGRADE REV12; COM COMMONS; RSKI.INFO
*                           INV_SERIAL
*C40541 adelgado 08/13/2002 * Fix error messages.
*T28414 thompson 01/24/2005 * Catch location with No data
*********************************************************************
*
*---- COPY STATEMENTS
*
$INCLUDE RCV.CPYLIB RCV.FILE.VARS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.HIST
$INCLUDE ICS.CPYLIB RS.XFER
$INCLUDE ICS.CPYLIB TRANSFER
$INCLUDE ICS.CPYLIB DAILY_TRANSFER
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- OPEN ALL FILES
*
   OPEN "","PO" TO PO ELSE
     ERRMSG1 = 'PO FILE MISSING'
     RETURN
   END
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
     ERRMSG1 = 'INV_SERIAL FILE MISSING'
     RETURN
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
     ERRMSG1 = 'CATEGORY FILE MISSING'
     RETURN
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
     ERRMSG1 = 'INVENTORY FILE MISSING'
     RETURN
   END
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
     ERRMSG1 = 'INV.WHSE FILE MISSING'
     RETURN
   END
   OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
     ERRMSG1 = 'INV.WHSE.LOC FILE MISSING'
     RETURN
   END
   OPEN "","INV.HIST" TO INV.HIST ELSE
     ERRMSG1 = 'INV.HIST FILE MISSING'
     RETURN
   END
   OPEN "","INV.TRAN.HIST" TO INV.TRAN.HIST ELSE
     ERRMSG1 = 'INV.TRAN.HIST FILE MISSING'
     RETURN
   END
   OPEN "","RS.XFER" TO RS.XFER ELSE
     ERRMSG1 = 'RS.XFER FILE MISSING'
     RETURN
   END
   OPEN "","TRANSFER" TO TRANSFER ELSE
     ERRMSG1 = 'TRANSFER FILE MISSING'
     RETURN
   END
   OPEN "","DAILY_TRANSFER" TO DAILY_TRANSFER ELSE
     ERRMSG1 = 'DAILY_TRANSFER FILE MISSING'
     RETURN
   END
   OPEN "","JOB" TO JOB ELSE
     ERRMSG1 = 'JOB FILE MISSING'
     RETURN
   END
   OPEN "","JOB.STATS" TO JOB.STATS ELSE
     ERRMSG1 = 'JOB.STATS FILE MISSING'
     RETURN
   END
   OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
     ERRMSG1 = 'INV.WHSE.LOC.TEMP FILE MISSING'
     RETURN
   END
   OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
     ERRMSG1 = 'INV_SERIAL_TEMP FILE MISSING'
     RETURN
   END
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
     ERRMSG1 = 'INV_AUDIT_HIST FILE MISSING'
     RETURN
   END
   OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE
     ERRMSG1 = 'INV_AUDIT_HIST_TEMP FILE MISSING'
     RETURN
   END
   OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
     ERRMSG1 = 'INV_AUDIT_TAG FILE MISSING'
     RETURN
   END
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
     ERRMSG1 = 'INV_RECEIPTS FILE MISSING'
     RETURN
   END
   OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
     ERRMSG1 = 'INV_RECEIPTS_TEMP FILE MISSING'
     RETURN
   END
   OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
     ERRMSG1 = 'INV_RECP_WHSE FILE MISSING'
     RETURN
   END
   OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE
     ERRMSG1 = 'INV_RECP_WHSE_TEMP FILE MISSING'
     RETURN
   END
   OPEN '','COMPANY' TO COMPANY ELSE
     ERRMSG1 = 'COMPANY FILE MISSING'
     RETURN
   END
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
     ERRMSG1 = 'WAREHOUSE FILE MISSING'
     RETURN
   END
   OPEN '','EMPLOYEE' TO EMPLOYEE ELSE
     ERRMSG1 = 'EMPLOYEE FILE MISSING'
     RETURN
   END
   OPEN '','CONTROL' TO CONTROL ELSE
     ERRMSG1 = 'CONTROL FILE MISSING'
     RETURN
   END
*
*---- INITIALIZATION
*
   MATREAD COMP.REC FROM COMPANY,CONO ELSE
     MAT COMP.REC = ""
   END
   IF CO.INTR.WHSE = '' THEN CO.INTR.WHSE = 'INTR'    ;* C40541
   SPX = ""
   FLIST = "" ; * T26132
   EMPNAME = "???????????????"
   MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
     EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
   END
   IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
   EMPNAME = SPX:EMPNAME
*
   TODAY = DATE()
*     OTODAY = "01/31/2002"
   OTODAY = ICONV(TODAY,"D4-")
1030 *
   WHSE = ""; FROM.LOC = ""; TO.LOC = ""
   ROLL.IDS = ""
   IF WARE_HOUSE = "" THEN RETURN
   IF WARE_HOUSE = CO.INTR.WHSE THEN                  ;* C40541
     ERRMSG1 = "NO TRANSIT WHSE"; RETURN
   END
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:WARE_HOUSE ELSE
     ERRMSG1 = "INVALID WHSE"; RETURN
   END
   WHSE = WARE_HOUSE
   FROM.WHSE.DIV = WHS.DIV
*
1040*
   IF FROM_LOC = "" THEN RETURN
   FROM.LOC = FROM_LOC
1050 *
   IF TO_LOC = "" THEN RETURN
   TO.LOC = TO_LOC
1070 *
   FLIST = ""
   IF CORRECT = "" THEN RETURN
   IF CORRECT = "Y" THEN
     CMD = 'SELECT INV_SERIAL WITH CONO = "':CONO:'"'
     CMD = CMD:' AND WITH ISTK_WHSE = "':WHSE:'"'
     CMD = CMD:' AND WITH ISTK_LOC = "':FROM.LOC:'"'
     CMD = CMD:' AND WITH TRACK_LVL = "S"'
     CMD = CMD:' AND WITH ISTK_POST_DATE # ""'
     PERFORM CMD RTNLIST FLIST CAPTURING SELMSG
     NUM.REC.STR = SELMSG<2>
     IF NUM.REC.STR[1,2] = 'No' THEN NUM.REC.STR = 0 ; *T28414
     NUM.RECORDS = FIELD(NUM.REC.STR," ",1)
     NUM.RECORDS = TRIM(NUM.RECORDS)
     IF (NUM.RECORDS + 0) < 1 THEN
       ERRMSG1 = "EMPTY LOCATION"; RETURN
     END ELSE
       DATA = 1
       LOOP
         READNEXT ID FROM FLIST ELSE DATA = 0
       WHILE DATA DO
         IF ID[4,1] = "R" THEN GOTO 999
*
	 MATREAD ISTK.REC FROM INV_SERIAL, ID ELSE
           MAT ISTK.REC = ""
         END
*
         DEF.PERIOD = "";ERR.FLG = "";ERRMSG = ""
         CALL RFT_CHECK.PERIOD.DATE(CONO,TODAY,DEF.PERIOD,FROM.WHSE.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL)
         BEGIN CASE
           CASE ERR.FLG = 1
             ERRMSG = 'DTE-PER MISMATCH'
             RETURN
           CASE ERR.FLG = 2
             ERRMSG = 'FISCAL MISSING'
             RETURN
           CASE ISTK.POST.DATE = ""
             ERRMSG = 'SERIAL NOT RCVD'
             RETURN
           CASE "X":ISTK.WHSE # "X":WHSE
           CASE "X":ISTK.LOC # "X":FROM.LOC
           CASE 1
             IF CO.INTR.WHSE # "" THEN
               IF CO.INTR.WHSE = ISTK.WHSE THEN
                 NULL ;* No Inter divisional
               END ELSE
                 ROLL.ID = TRIM(ID[4,99])
                 GOSUB 5000
                 IF ERRMSG # "" THEN
		   IF ERRMSG1 # "" THEN
ERRMSG1 := ", ":ROLL.ID:" - ":ERRMSG
		   END ELSE
ERRMSG1 := ROLL.ID:" - ":ERRMSG
                   END                   
                 END
               END
             END
         END CASE
*
999:*
*
       REPEAT
 END
*
*---- PROCESS TRANSFER
*
5000 *
   ERRMSG = ""
   MAT RS.XFER.REC = ""
   RS.XFER.TO.WHSE = WHSE
   RS.XFER.TO.LOC = TO.LOC
*     RS.XFER.ID = ROLL.IDS<1,RPTR>
   RS.XFER.ID = ROLL.ID
   RS.XFER.ENTRY.DATE = DATE()
*     ROLL.ID = ROLL.IDS<1,RPTR>
   IF ISTK.JOB = "" THEN
     MAT JOB.REC = ""
   END ELSE
   END
   MATREAD IWH.REC FROM INV.WHSE, CONO:ISTK.PROD:"!":ISTK.WHSE ELSE
     ERRMSG = "NO INV.WHSE"         ;* "From Whse does not exist"
     RETURN
   END
   MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
     ERRMSG = "NO INV.WHSE.LOC"         ;* "From Loc does not exist"
     RETURN
   END
   LOCATE ROLL.ID IN IWLO.SERIAL<1>,1 SETTING RSPTR ELSE
     ERRMSG = "NO SER # IN LOC"         ;* "Serial not in location"
     RETURN
   END
*
*---- LOAD TRANSFER RECORD
   MAT D.TRAN.REC = ""
   D.TRAN.CODE = "N"
   D.TRAN.PROD.NO         = ISTK.PROD
   D.TRAN.SERIAL          = ROLL.ID
   D.TRAN.RECP            = ISTK.RECP
   D.TRAN.TOT.WHT         = ISTK.CUR.QTY
   D.TRAN.FROM.WHSE       = ISTK.WHSE        
   D.TRAN.FROM.LOC        = ISTK.LOC         
   D.TRAN.TO.WHSE         = ISTK.WHSE      
   D.TRAN.TO.LOC          = TO.LOC        
   D.TRAN.QTY             = ISTK.CUR.QTY        
   D.TRAN.TOT.QTY         = ISTK.CUR.QTY        
   D.TRAN.REASON.DESC     = "RF GUN TRANSFER"
   D.TRAN.DATE.ENTER      = TODAY
   D.TRAN.PRT.DATE        = TODAY
   D.TRAN.PERIOD          = DEF.PERIOD
   D.TRAN.JOB             = ISTK.JOB
   D.TRAN.EMP             = EMPID
   MAT TRAN.REC = ""
   NEW.ERRMSG = ""
*   PROCESS.FLAG = CO.ICS.REAL.TRAN
   PROCESS.FLAG = "Y"
   CALL RFT_TRAN.UPDATE(CONO,D.TRAN.CODE,MAT TRAN.REC,PROCESS.FLAG,CO.ICS.LOC.TRAN,NEW.ERRMSG)
   END
RETURN
