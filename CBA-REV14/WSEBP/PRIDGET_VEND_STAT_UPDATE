   SUBROUTINE PRIDGET_VEND_STAT_UPDATE(CONO,PO.CODE,PO.TYPE)
$INCLUDE CPYLIB COMMON1
$INCLUDE POS.CPYLIB COM.PO
$INCLUDE POS.CPYLIB COM.PO.INTRF
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - VEND.STAT.UPDATE
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 01/29/86
* DESCRIPTION -
* This program is used to update (VEND.STATS) & (VEND.PO.STATS) &
* (VEND.PROD.STATS) , If company flag set to (R) or (B).
*ENDDOC
*********************************************************************
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$DEFINE APSFILEVARS
$INCLUDE APS.CPYLIB APS.FILE.VARS
$INCLUDE CPYLIB CHAR
OPEN '','VEND.STATS' TO VEND.STATS ELSE
   ERRMSG = "VEND.STATS FILE IS MISSING"; GOTO 99999
END
OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
   ERRMSG = "VEND.PO.STATS FILE IS MISSING"; GOTO 99999
END
OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
   ERRMSG = "VEND.PROD.STATS FILE IS MISSING"; GOTO 99999
END
OPEN '',"CONTROL" TO CONTROL ELSE
   ERRMSG = "CONTROL FILE IS MISSING"; GOTO 99999
END
   DIM SPO.VALUES(15)
   EQU SPO.GTOT.ORD.AMT TO SPO.VALUES(1)   ;* Grand total for po cost
   EQU SPO.P            TO SPO.VALUES(2)   ;* (MV1) All product numbers for this po
   EQU SPO.P.DESC       TO SPO.VALUES(3)   ;* (MV1) All product description in a po
   EQU SPO.P.UM         TO SPO.VALUES(4)   ;* (MV1) All unit of measure for all products in po
   EQU SPO.P.WHSE       TO SPO.VALUES(5)   ;* (MV1) All warehouse for all products in a po
   EQU SPO.P.ORD.QTY    TO SPO.VALUES(6)   ;* (MV1) All ordered quantity for all products in a po
   EQU SPO.P.ORD.AMT    TO SPO.VALUES(7)   ;* (MV1) All total cost for all products in a po
   EQU SPO.P.ORD.DATE   TO SPO.VALUES(8)   ;* (MV1,SMV1) Ordered dates for all products in a po
   EQU SPO.P.ORD.BY.CST TO SPO.VALUES(9)   ;* (MV1,SMV1) Ordered quantity by date by unit prics
   EQU SPO.P.ORD.U.COST TO SPO.VALUES(10)   ;* (MV1,SMV1) Ordered units cost by date
   MAT SPO.VALUES = ""
*
**** UPDATE ROUTINE
1000*
   PO.CNT = COUNT(PO.PROD.NUM,VM) + (PO.PROD.NUM # "")
   FOR P = 1 TO PO.CNT
      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,P> ELSE
         ERRMSG = "INVENTORY ":PO.PROD.NUM<1,P>:" IS NOT ON FILE"
         GOSUB 91000; GOTO 1999
      END
      IF INV.SBR + 0 = 0 THEN INV.SBR = 1
      IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
      UNIT.COST = INT(PO.GROS.PRICE<1,P>*(1 - (PO.DISCOUNT<1,P>/10000)))
      ORD.QTY = PO.TOT.ONORD<1,P> - (PO.TOT.CANCEL<1,P> + PO.PREV.RECEVED<1,P>)
      UNIT.COST = INT(UNIT.COST / INV.SBR +.5)
      PTR = 1
      ORD.AMT = INT(((UNIT.COST/100) * (INT(ORD.QTY/10)/(INV.COST.WT/100)))/100 + .5)
      SPO.GTOT.ORD.AMT = SPO.GTOT.ORD.AMT + ORD.AMT
      LOOP
         LOCATE PO.PROD.NUM<1,P> IN SPO.P<1>,PTR SETTING PFND ELSE
            SPO.P<1,PFND> = PO.PROD.NUM<1,P>
            SPO.P.DESC<1,PFND> = INV.FULL.DESC
            SPO.P.UM<1,PFND> = INV.UNIT<1,2>
            SPO.P.WHSE<1,PFND> = PO.WHSE<1,P>
         END
         IF PO.WHSE<1,P> # SPO.P.WHSE<1,PFND> THEN
            PTR = PFND + 1
         END ELSE
            PTR = 0
         END
      WHILE PTR DO
      REPEAT
      SPO.P.ORD.QTY<1,PFND> = SPO.P.ORD.QTY<1,PFND> + INT(ORD.QTY/10)
      SPO.P.ORD.AMT<1,PFND> = SPO.P.ORD.AMT<1,PFND> + ORD.AMT
      PTR = 1
      LOOP
         LOCATE UNIT.COST IN SPO.P.ORD.U.COST<1,PFND>,PTR SETTING CFND ELSE
            SPO.P.ORD.U.COST<1,PFND,CFND> = UNIT.COST
            SPO.P.ORD.DATE<1,PFND,CFND> = PO.DEL.DATE<1,P>
         END
         IF PO.DEL.DATE<1,P> # SPO.P.ORD.DATE<1,PFND,CFND> THEN
            PTR = CFND + 1
         END ELSE
            PTR = 0
         END
      WHILE PTR DO
      REPEAT
      SPO.P.ORD.BY.CST<1,PFND,CFND> = SPO.P.ORD.BY.CST<1,PFND,CFND> + INT(ORD.QTY/10)
1999*
   NEXT P
   VSTAT.KEY = CONO:PO.VEND.NO:"!":PO.TYPE
   MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE
      MAT VSTAT.REC = ""
   END
   LOCATE PO.CODE IN VSTAT.PO<1>,1 SETTING POFND ELSE NULL
   VSTAT.PO<1,POFND> = PO.CODE
   VSTAT.PO.ORDERD<1,POFND> = SPO.GTOT.ORD.AMT
   MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
   VPS.KEY = VSTAT.KEY:"!":PO.CODE
   MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE
      MAT VPS.REC = ""
   END
   OPROD.CNT = COUNT(VPS.PROD,VM) + (VPS.PROD # "")
   FOR DP = OPROD.CNT TO 1 STEP - 1
      PTR = 1
      LOOP
         LOCATE VPS.PROD<1,DP> IN SPO.P<1>,PTR SETTING PDFND ELSE PDFND = 0
         BEGIN CASE
            CASE PDFND = 0
               PTR = 0
            CASE (SPO.P.WHSE<1,PDFND> # VPS.WHSE<1,DP>) OR (SPO.P.UM<1,PDFND> # VPS.U.M<1,PDFND>)
               PTR = 0 ; PDFND = 0
            CASE 1
               PTR = PDFND + 1
         END CASE
      WHILE PTR DO
      REPEAT
      IF PDFND = 0 AND VPS.REC.QTY<1,DP> + 0 = 0 AND VPS.VOU.QTY<1,DP> + 0 = 0 THEN
         VPDS.KEY = CONO:PO.VEND.NO:"!":PO.TYPE:"!":PO.CODE:"!":VPS.PROD<1,DP>:"!":VPS.WHSE<1,DP>
         DELETE VEND.PROD.STATS, VPDS.KEY
         VPS.PROD = DELETE(VPS.PROD,1,DP,0)
         VPS.PROD.DESC = DELETE(VPS.PROD.DESC,1,DP,0)
         VPS.U.M = DELETE(VPS.U.M,1,DP,0)
         VPS.WHSE = DELETE(VPS.WHSE,1,DP,0)
         VPS.ORD.QTY = DELETE(VPS.ORD.QTY,1,DP,0)
         VPS.ORD.AMT = DELETE(VPS.ORD.AMT,1,DP,0)
         VPS.REC.QTY = DELETE(VPS.REC.QTY,1,DP,0)
         VPS.REC.AMT = DELETE(VPS.REC.AMT,1,DP,0)
         VPS.VOU.QTY = DELETE(VPS.VOU.QTY,1,DP,0)
         VPS.VOU.AMT = DELETE(VPS.VOU.AMT,1,DP,0)
         VPS.VOU.NO = DELETE(VPS.VOU.NO,1,DP,0)
      END
   NEXT DP
   APROD.CNT = COUNT(SPO.P,VM) + (SPO.P # "")
   FOR UAP = 1 TO APROD.CNT
      PTR = 1
      LOOP
         LOCATE SPO.P<1,UAP> IN VPS.PROD<1>,PTR SETTING PDFND ELSE
            VPS.PROD<1,PDFND> = SPO.P<1,UAP>
            VPS.PROD.DESC<1,PDFND> = SPO.P.DESC<1,UAP>
            VPS.U.M<1,PDFND> = SPO.P.UM<1,UAP>
            VPS.WHSE<1,PDFND> = SPO.P.WHSE<1,UAP>
         END
         IF VPS.WHSE<1,PDFND> = SPO.P.WHSE<1,UAP> AND VPS.U.M<1,PDFND> = SPO.P.UM<1,UAP> THEN
            PTR = 0
         END ELSE
            PTR = PDFND + 1
         END
      WHILE PTR DO
      REPEAT
      VPS.ORD.QTY<1,PDFND> = SPO.P.ORD.QTY<1,UAP>
      VPS.ORD.AMT<1,PDFND> = SPO.P.ORD.AMT<1,UAP>
      VPDS.KEY = CONO:PO.VEND.NO:"!":PO.TYPE:"!":PO.CODE:"!":SPO.P<1,UAP>:"!":SPO.P.WHSE<1,UAP>
      MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE
         MAT VPDS.REC = ""
      END
      VPDS.ORD.DATE = "" ; VPDS.ORD.QTY = "" ; VPDS.ORD.UN.COST = ""
      D.CNT = DCOUNT(SPO.P.ORD.DATE<1,UAP>,SVM)
      FOR UPD = 1 TO D.CNT
         VPDS.ORD.DATE<1,UPD> = SPO.P.ORD.DATE<1,UAP,UPD>
         VPDS.ORD.QTY<1,UPD> = SPO.P.ORD.BY.CST<1,UAP,UPD>
         VPDS.ORD.UN.COST<1,UPD> = SPO.P.ORD.U.COST<1,UAP,UPD>
      NEXT UPD
      MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
   NEXT UAP
   MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
   GOTO 99999
**** ERROR ROUTINE
91000
RETURN
99999 RETURN
END
