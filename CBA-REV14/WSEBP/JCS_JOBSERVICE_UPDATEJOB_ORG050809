SUBROUTINE JCS_UPDATEJOB(INPUTSTR,ERRSTR,XMLSTR)
*DEBUG
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE JCS.CPYLIB CREDIT.AUTH.CODE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JCS.CPYLIB JOB.CATEGORY
$INCLUDE PMC.CPYLIB SALES.CODE
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE CPYLIB SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*************************************************
OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN THE JOB FILE"
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN THE COMPANY FILE"
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN THE CUSTOMER FILE"
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN THE SALESMAN FILE"
OPEN "","CSR.CODE" TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN THE CSR.CODE FILE"
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN THE SHIP.VIA FILE"
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "CANNOT OPEN THE DIVISION FILE"
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG = "CANNOT OPEN THE JOB.FNGD.STATS FILE"
OPEN "","GANG.JOB" TO GANG.JOB ELSE ERRMSG = "CANNOT OPEN THE GANG.JOB FILE"
OPEN "","CREDIT.AUTH.CODE" TO CREDIT.AUTH.CODE ELSE ERRMSG = "CANNOT OPEN THE CREDIT.AUTH.CODE FILE"
OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN THE ESTIMATE FILE"
OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG = "CANNOT OPEN THE JOB.CATEGORY FILE"
OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG = "CANNOT OPEN THE SALES.CODE FILE"
OPEN "","SECURITY" TO SECURITY ELSE ERRMSG = "CANNOT OPEN THE SECURITY FILE"
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN THE CONTROL FILE"
*************************************************
*MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
 WEBSERVICE = ""; ORDNO = "";PRIOR.EST = ""
 ORIG.CUST = ""
 JFS.PROD = ""; JFS.M.QTY = ""; JFS.F.QTY = ""; JFS.S.QTY = ""
 MAT DIV.REC ="";MAT JFS.REC =""
DIM SAVE.JOB(JOB.REC.SIZE)
DIM EST.PAR(10)
CONO = INPUTSTR<1>
JOBNO = INPUTSTR<2>
JOB.ESTIMATE1 = INPUTSTR<3>
JOB.CUSTOMER = INPUTSTR<4>
JOB.DIVISION = INPUTSTR<5>
JOB.SALESMAN = INPUTSTR<6>
JOB.CSRCODE = INPUTSTR<7>
JOB.TYP = INPUTSTR<8>
JOB.MASTER1 = INPUTSTR<9>
JOB.SALESCODE = INPUTSTR<10>
JOB.CATEG = INPUTSTR<11>
JOB.SHIPVIA = INPUTSTR<12>
JOB.CUSTPO = INPUTSTR<13>
JOB.ESTCOST = INPUTSTR<14>
JOB.QUOTEDAMT = INPUTSTR<15>
JOB.MAKUP = INPUTSTR<16>
JOB.COLR = INPUTSTR<17>
JOB.ORDERQTY = INPUTSTR<18>
JOB.FINISHED = INPUTSTR<19>
JOB.SHIPPED = INPUTSTR<20>
JOB.DUEDATE = INPUTSTR<21>
JOB.PRIORJOB = INPUTSTR<22>
JOB.PRICEADDLM = INPUTSTR<23>
JOB.AUTH.CODE = INPUTSTR<24>
JOB.CMNTS = INPUTSTR<25>
JOB.DESCRIPTION = INPUTSTR<26>
ESTIMATEDATE = INPUTSTR<27>
ORDEREDDATE = INPUTSTR<28>
PROOFDATE = INPUTSTR<29>
FINALDELIVERYDATE = INPUTSTR<30>
COSTEDDATE = INPUTSTR<31>
COMPLETEDDATE = INPUTSTR<32>
*************************************************
*CONO = 001
*JOBNO = 12039
*JOB.ESTIMATE1 = ""
*JOB.CUSTOMER = 1001
*JOB.DIVISION = 01
*JOB.SALESMAN = 001
*JOB.CSRCODE = 002
*JOB.TYP = "S"
*JOB.MASTER1 = 12039
*JOB.SALESCODE = 001
*JOB.CATEG = "ANN"
*JOB.SHIPVIA = "AB"
*JOB.CUSTPO = ""
*JOB.ESTCOST = "1500.00"
*JOB.QUOTEDAMT = "3500.00"
*JOB.MAKUP = 15.00
*JOB.COLR = 3
*JOB.ORDERQTY = 15000
*JOB.FINISHED = 500
*JOB.SHIPPED = 400
*JOB.DUEDATE = "04/25/09"
*JOB.PRIORJOB = 10
*JOB.PRICEADDLM = 100.00
*JOB.AUTH.CODE = "CBA"
*JOB.CMNTS = "THIS IS UPDATED BY NARESH"
*JOB.DESCRIPTION = "THIS IS DESC "
*ESTIMATEDATE = "04/23/09"
*ORDEREDDATE = "04/24/09"
*PROOFDATE = "04/20/09"
*FINALDELIVERYDATE = "04/22/09"
*COSTEDDATE ="04/20/09"
*COMPLETEDDATE = "04/25/09"
**************
   ERRMSG1 = "" ; ECD.VALDAT.ITEM = ""
   OPER.ID = "WebService!WebService"
   TODAY = DATE()
   MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
   MATREAD JOB.REC FROM JOB,CONO:JOBNO ELSE
      ERRSTR<-1> = "Job # ":JOBNO:" does not exists!"
   END
   MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE
      MAT JFS.REC = ""
   END
   MATREAD GJOB.REC FROM GANG.JOB, CONO:JOBNO ELSE
      MAT GJOB.REC = ""
   END
   GOSUB 20000
*
*Estimate
*
BEGIN CASE
      CASE (JOB.ESTIMATE1 # "" AND CO.JES = "Y") OR (JOB.ESTIMATE1 = '' AND PRIOR.EST # '' AND CO.JES = 'Y')
         IF JOB.ESTIMATE1 # '' THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:JOB.ESTIMATE1 ELSE
               ERRSTR<-1> = "Invalid Estimate ID. Try again! "
            END
            IF JOB.DIV # "" THEN
               CHK.EST.DIV = FIELD(EST.DIV,"-",1)
               IF JOB.DIV # CHK.EST.DIV THEN
                  ERRSTR<-1>="Est Div of ":CHK.EST.DIV:" does not match Job Div. Enter"
               END
            END
            IF EST.JOB # "" THEN
               IF JOB.MASTER1 # "" AND EST.JOB # JOB.MASTER1 THEN
                  ERRSTR<-1> = "Estimate belongs to another Master Job"
               END
            END
            IF EST.STATUS<1,1> = "LOST" THEN
               ERRSTR<-1> = "Estimate was defined as lost on ":OCONV(EST.STAT.DATE<1,1>,"D2/"):". Try again! "
            END
         END ELSE
*            JOB.EST.COST = ''; JOB.CONF.AMT = ''
*            JOB.EST.SALE = ''; JOB.PRICE.PER.THOU = ''
         END
         JOB.EST = JOB.ESTIMATE1
         PRIOR.EST = JOB.ESTIMATE1
      CASE JOB.ESTIMATE1 # "" AND CO.JES # "Y"
         JOB.EST = JOB.ESTIMATE1
         PRIOR.EST = JOB.ESTIMATE1
   END CASE
*
*customer
*
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUSTOMER ELSE
      ERRSTR<-1> = "CUSTOMER ":JOB.CUSTOMER:" IS MISSING"
   END
   IF JOB.CUSTOMER # "END" THEN
     IF CUST.TYPE = "F" THEN
        ERRSTR<-1> = "Customer Type is Frozen - Cannot Enter Job"
     END
     IF CUST.CREDIT = "DEL" THEN
        ERRSTR<-1> = 'This customer has credit code "DEL", cannot enter a Job forthis customer.'
     END
   END
   IF JOB.MASTER1 # JOBNO AND JOB.MASTER1 # "" THEN
      MAT SAVE.JOB = MAT JOB.REC
      MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER1 ELSE
         ERRSTR<-1> = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER1
      END
      MASTER.CUST = JOB.CUST
      MAT JOB.REC = MAT SAVE.JOB
      IF JOB.CUSTOMER # MASTER.CUST THEN
         ERRSTR<-1> = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CUST
      END
   END
   IF CUST.CREDIT = "N" THEN
      ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
   END
   JOB.CUST = JOB.CUSTOMER
   GOSUB 1250
*
*Division
*
   IF JOB.DIVISION # "END" THEN
       MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIVISION ELSE
          ERRSTR<-1> = "INVALID DIVISION"
       END
       JOB.DIV = JOB.DIVISION
   END
*
*Salesman
*
   IF JOB.SALESMAN # "END" THEN
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SALESMAN ELSE
         ERRSTR<-1> = "Cannot locate salesman # ":JOB.SALESMAN
      END
      JOB.SLSMN = JOB.SALESMAN
   END
*
* CSR Code
*
   MATREAD CSR.REC FROM CSR.CODE, CONO:JOB.CSRCODE ELSE
      ERRSTR<-1> = "Cannot locate Service Rep # ":JOB.CSRCODE
   END
   JOB.CSR = JOB.CSRCODE
*
*Job type
*
   IF JOB.TYP # "END" THEN
      JOB.TYPE = JOB.TYP
   END
*
*Job master
*
   IF JOB.SUBS # "" THEN
      JOB.MASTER1 = JOBNO
   END
   IF JOB.MASTER1 = "" THEN JOB.MASTER1 = JOBNO
   BEGIN CASE
      CASE JOB.MASTER1 = JOBNO
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            EJ.CNT = DCOUNT(EST.BOOK.JOB,VM)
            OTHER.JOBS = 0
            FOR J = 1 TO EJ.CNT UNTIL OTHER.JOBS
               IF JOBNO # EST.BOOK.JOB<1,J> THEN OTHER.JOBS = 1
            NEXT J
            IF OTHER.JOBS THEN
               IF JOB.MASTER1 # EST.JOB AND EST.JOB # "" THEN
                  ERRSTR<-1> = "Estimate belongs to Master Job ":EST.JOB:"."
               END
            END
         END
         JOB.MASTER1 = JOBNO
      CASE 1
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            IF JOB.MASTER1 # EST.JOB AND EST.JOB # "" THEN
               IF EST.JOB # JOBNO THEN
                  ERRSTR<-1> = "Estimate has a different Master Job number."
               END
            END
         END
         MAT SAVE.JOB = MAT JOB.REC
         FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
         MASTER.CUST = JOB.CUST
         MASTER.JOB = JOB.MASTER1
         MAT JOB.REC = MAT SAVE.JOB
         IF JOB.CUST # MASTER.CUST THEN
            ERRSTR<-1> = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.CUST
         END
         IF MASTER.JOB # JOB.MASTER1 THEN
            ERRSTR<-1> = "MASTER JOB CANNOT BE A SUB JOB"
         END
         JOB.MASTER = JOB.MASTER1
   END CASE
*
*Sales Code
*
   IF LEN(JOB.SALESCODE) < 1 OR LEN(JOB.SALESCODE) > 5 THEN GOTO 99999
   IF LEN(JOB.SALESCODE) = 1 THEN
      IF SALS.COMM.PCT + 0 = 0 THEN JOB.SALESCODE = JOB.SALESCODE:"H" ELSE JOB.SALESCODE = JOB.SALESCODE:"C"
   END
   IF LEN(JOB.SALESCODE) = 2 THEN JOB.SALESCODE = JOB.SALESCODE:CUST.TYPE
   MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALESCODE ELSE    ;* T26973
      ERRSTR<-1> = "SALES CODE ":JOB.SALESCODE:" IS NOT ON FILE"
   END
   JOB.SALES.CODE = JOB.SALESCODE
*
* Job catEGORY CODE
*
   IF JOB.CATEG # "END" THEN
      REC = ""
      READ REC FROM JOB.CATEGORY, CONO:JOB.CATEG ELSE
         ERRSTR<-1> = "JOB CATEGORY CODE ":JOB.CATEG:" IS NOT ON FILE"
      END
      JOB.CATG = JOB.CATEG
   END
*
*ShipVia Code
*
1900* 
   IF JOB.SHIPVIA # "END" THEN
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIPVIA ELSE
         ERRSTR<-1> = "Cannot locate ship via # ":JOB.SHIPVIA
      END
      JOB.SHIP.VIA = JOB.SHIPVIA
   END
*
*Customer PO #
*
   IF JOB.CUSTPO # "END" THEN JOB.CUST.PO = JOB.CUSTPO
11111*
*
* Estimate cost
*
   IF JOB.EST = "" OR CO.JES = "N" THEN
      IF JOB.ESTCOST # "END" THEN JOB.EST.COST = ICONV(JOB.ESTCOST,"MD2")
   END
*
* Quoted amount
*
   IF JOB.QUOTEDAMT # "END" THEN
      JOB.CONF.AMT = ICONV(JOB.QUOTEDAMT,"MD2")
      JOB.EST.SALE = ICONV(JOB.QUOTEDAMT,"MD2")
   END
*
* Markup Per
*
   IF JOB.MAKUP # "END" THEN JOB.MARKUP = ICONV(JOB.MAKUP,"MD2")
*
* Colors
*
   IF JOB.COLR # "END" THEN JOB.COLORS = JOB.COLR
*
* Order Qty
*
   IF JFS.PROD = "" THEN
      IF JOB.ORDERQTY # "END" THEN
         JOB.QTY<1,1> = JOB.ORDERQTY
      END
   END ELSE
      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
   END
*
* Finished Qty
*
   IF JFS.PROD = "" THEN
      IF JOB.FINISHED # "END" THEN
         JOB.QTY<1,2> = JOB.FINISHED
      END
   END ELSE
      JOB.QTY<1,2> = SUM(JFS.F.QTY) / 1000
   END
*
* Shipped Qty
*
   IF JFS.PROD = "" THEN
      IF JOB.SHIPPED # "END" THEN
         JOB.QTY<1,3> = JOB.SHIPPED
      END
   END ELSE
      JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
   END
*
* Due date
*
   ECD.MINV = JOB.TRACK.DATE<1,2>
   ECD.MAXV = ECD.MINV + 700
   IF JOB.DUEDATE # "END" THEN
      JOB.TRACK.DATE<1,4> = ICONV(JOB.DUEDATE,"D2/")
   END
*
* Prior Job
*
   IF JOB.PRIORJOB # "END" THEN JOB.PRIOR.JOB = JOB.PRIORJOB
*
*Price Per Thousand
*
   IF JOB.PRICEADDLM # "END" THEN JOB.PRICE.PER.THOU =ICONV(JOB.PRICEADDLM,"MD2")
*
* Authorization code
*
   IF JOB.AUTH.CODE # "END" THEN
      READ TREC FROM CREDIT.AUTH.CODE, CONO:JOB.AUTH.CODE THEN
         JOB.CREDIT = JOB.AUTH.CODE:"!":OPER.ID
      END ELSE
         ERRSTR<-1> = 'Invalid credit authorization code'
      END
   END
*
* Comments
*
   JOB.COMMENTS<1,1> = JOB.CMNTS
   JOB.COMMENTS<1,2> = JOB.CMNTS
*
*Job Descreption
*
   FOR N = 1 TO DCOUNT(JOB.DESCRIPTION,VM)
       JOB.DESC<1,N> = JOB.DESCRIPTION<1,N>
   NEXT N
   JOB.DESC = JOB.DESCRIPTION
*
* Updating Tracking Dates
*
   JOB.TRACK.DATE<1,1> = ICONV(ESTIMATEDATE,"D2/")
   JOB.TRACK.DATE<1,2> = ICONV(ORDEREDDATE,"D2/")
   JOB.TRACK.DATE<1,3> = ICONV(PROOFDATE,"D2/")
   JOB.TRACK.DATE<1,4> = ICONV(JOB.DUEDATE,"D2/")
  * JOB.TRACK.DATE<1,5> = 
   JOB.TRACK.DATE<1,6> = ICONV(FINALDELIVERYDATE,"D2/")
  * JOB.TRACK.DATE<1,7> =
   JOB.TRACK.DATE<1,8> = ICONV(COSTEDDATE,"D2/")
  * JOB.TRACK.DATE<1,9> =
   JOB.TRACK.DATE<1,10> = ICONV(COMPLETEDDATE,"D2/")
*
*updating the JOB
*
   MATWRITE JOB.REC ON JOB,CONO:JOBNO
   XMLSTR = "JOB# ":JOBNO:" IS UPDATED SUCCESSFULLY"
RETURN
*
*Status
*
20000*
*   CALL JOB.STATUS.SUB(JOB.STATUS,JOB.TRACK.DATE,STATUS)
*   JOB.STATUS = STATUS
      STATUS = ""
      BEGIN CASE
      CASE JOB.STATUS<1,1> = ""
         STATUS = "BOOKED"
      CASE JOB.STATUS<1,1> = "7"
         STATUS = "READY TO PURGE"
      CASE JOB.STATUS<1,1> = "8"
         STATUS = "WAS PURGED"
      CASE JOB.STATUS<1,1> = "9"
         STATUS = "CANCELLED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            STATUS = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            STATUS="REOPENED"
         CASE JOB.STATUS<1,1> = "3"
            STATUS="INVOICED"
         CASE 1
            STATUS = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            STATUS = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            STATUS="REOPENED"
         CASE 1
            STATUS = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         STATUS = "COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         STATUS = "RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         STATUS = "DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         STATUS = "IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         STATUS = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "1"
         STATUS = "IN PROCESS"
      CASE 1
         STATUS = JOB.STATUS<1,1>
      END CASE
      JOB.STATUS = STATUS
   RETURN
1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
RETURN
*
* Quoted amount
*
3100 *
    QUOTED.AMT = 0
   IF ORDNO # "" OR JFS.PROD # "" THEN
      GOTO 99999
   END
   LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
      IF JOB.TOT.INV > 0 THEN
         QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
      END ELSE
         QUOTED.AMT = JOB.CONF.AMT
      END
      IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
   END
 *  IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN
 *     GOSUB 1250
 *  END
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - CUR.ORD.BAL - QUOTED.AMT
         IF AVAIL < 0 THEN
            ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG1 = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
            ERRMSG1 = ERRMSG:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")
         END ELSE
            GOTO 99999
         END
      CASE 1
         ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG1 = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
         ERRMSG1 = ERRMSG:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
   END CASE
RETURN
99999*
IF ERRSTR <> "" THEN
  ERRMSG = WEBSERVICE:"---> JCS_WRITEJOB---> " : ERRMSG
  CALL WRITELOG(ERRMSG)
END
RETURN
