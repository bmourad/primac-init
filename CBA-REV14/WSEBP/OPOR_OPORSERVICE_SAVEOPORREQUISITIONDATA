SUBROUTINE OPOR_OPORSERVICE_SAVEOPORREQUISITIONDATA(CONO,MAINTABDATA,ITEMALLOCDATA,ERRMSG,STRXML)
*T102109 - By yakub on 10/21/09 WORING ON UPDATE PAYLOAD
*T111809 - BY YAKUB ON 11/18/09 Add ApproveStatus and ApproveStatusData for OPOR Mode 2
*T113009 - BY YAKUB 0N 11/30/09 working on output payload
*T120409 - BY YAKUB ON 12/04/09 Change payload on approve requisition
*T012810 - BY YAKUB ON 01/28/2010 Add isRequisitionOnHold tag for Mode = 1 on 01/28/2010
************************************************************************
$INCLUDE CPYLIB COMMON1      
$INCLUDE POS.CPYLIB COM.OPO
$INCLUDE PMC.CPYLIB COM.VEND
*
$DEFINE OUTSIDE.PO
$INCLUDE POS.CPYLIB OUTSIDE.PO
$DEFINE VEND
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE PMC.CPYLIB COA
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB DIVISION
*T040609 v
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$INCLUDE CPYLIB CHAR
$INCLUDE WSE.CPYLIB TEMP.OUTSIDE.PO
*T040609 ^
*
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING'; GOTO 93000
YAK = ""
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
*T040609 ^
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE
      ERRMSG = 'CATEGORY.OSP FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'COA' TO COA ELSE
      ERRMSG = 'COA FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'DIVISION' TO DIVISION ELSE
      ERRMSG = "CANNOT OPEN DIVISION FILE"
      GOTO 93000
   END
   OPEN 'DEPARTMENT' TO DEPARTMENT ELSE
      ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
      GOTO 93000
   END
   OPEN 'COST.CNTR' TO COST.CNTR ELSE
      ERRMSG = "CANNOT OPEN COST.CNTR FILE"
      GOTO 93000
   END
*T25755 v
   OPEN '','OPERATION' TO OPERATION ELSE
      ERRMSG = 'OPERATION FILE IS MISSING'
      GOTO 93000
   END
*   
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ''
*
   IF CO.APS.O.INTRF > 2 THEN
      OPEN '','VEND.STATS' TO VEND.STATS ELSE
         ERRMSG = 'VEND.STATS FILE IS MISSING'
         GOSUB 93000
      END
      OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
         ERRMSG = 'VEND.PO.STATS FILE IS MISSING'
         GOSUB 93000
      END
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = 'VEND.PROD.STATS FILE IS MISSING'
         GOSUB 93000
      END
   END
*IF CO.PO.REQ.FLAG = "Y" THEN
  OPEN '','OUT.REQ' TO OUT.REQ ELSE ERRMSG = 'OUT.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
  USER.ID = UPCASE(@LOGNAME)
*END
MAT COMP.REC = ''
MAT OPO.REC = ''
INC = 0
OLD.JOB.NO = ""
FIRST.TIME = 0
*T102109 v
JOB.XML.STR = ""
TEMP.JOB.XML.STR = ""
READ.FLAG = 1
DELJOBALLOC = MAINTABDATA<18>
*T102109 ^
MENU.FLAG = MAINTABDATA<17>
POR.MODE = MAINTABDATA<16>;*T120409
STRXML="<Payload>"
  IF MENU.FLAG = "P" THEN
     STRXML:="<OPO>"
  END ELSE
      MENU.FLAG = "R"
*T113009 v
      *STRXML:="<Requisition>"
        *T120409 v
           *STRXML:="<OPOR>"
	  IF POR.MODE = 2 THEN
            STRXML:="<OPO>"
	  END ELSE
	    STRXML:="<OPOR>"
	  END
	*T120409 ^
*T113009 ^
  END
*T060209 ^
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
OPO.CODE = MAINTABDATA<1>
IF MENU.FLAG = "P" THEN
  MATREAD OPO.REC FROM OUTSIDE.PO, CONO:OPO.CODE ELSE
    READ.FLAG = 0;*T102109
    MAT OPO.REC = ""
   IF OPO.CODE # "N" THEN
    ERRMSG = 'Outside PO # ':OPO.CODE:' does not exist'
    GOTO 93000
   END
  END
END ELSE
  MATREAD OPO.REC FROM OUT.REQ, CONO:OPO.CODE THEN
     REQ = 1 ; * this is still requisition 
     UPDATE.POR = 1
  END ELSE
     READ.FLAG = 0;*T102109
     MAT OPO.REC = ""
     IF OPO.CODE # "N" THEN
       ERRMSG = "Requisition with number ":OPO.CODE:" does not exist"
       GOTO 93000
     END
  END
END
*MAT TEMP.OPO.REC = MAT OPO.REC
MAT TEMP.OPO.REC = ""
OLD.JOB.NO = OPO.JOB.NO
OLD.CANCEL.QTY = OPO.CANCEL.QTY
*MAT TEMP.PO.REC = MAT PO.REC
*POR.MODE = MAINTABDATA<16>;*T120409
OPO.ORD.BY = USER.ID
IF REQ = 0 AND POR.MODE = 1 AND MENU.FLAG = "R" THEN
  OPO.STAT<1,-1> = 'Entered'
  OPO.PREV.APP<1,-1> = USER.ID
  OPO.ST.DATE<1,-1> = DATE()
END
IF MENU.FLAG = "R" THEN
OPO.APPROVER = USER.ID
OPO.STAT<1,-1> = 'Released'
OPO.LEVEL.STATUS = "R"
OPO.PREV.APP<1,-1> = USER.ID
OPO.ST.DATE<1,-1> = DATE()
END
OPO.DIV.OWNER = MAINTABDATA<2>
OPO.DATE = ICONV(MAINTABDATA<3>,"D2/")
OPO.VEND.NO = MAINTABDATA<4>
OPO.TERMS.DESC = MAINTABDATA<5>
OPO.TERMS.DISC = ICONV(MAINTABDATA<6>,"MD2")
OPO.TERMS.DATE = MAINTABDATA<7>
OPO.WHSE = MAINTABDATA<8>
MATREAD WHSE.REC FROM WAREHOUSE, CONO:OPO.WHSE ELSE MAT WHSE.REC = ""
OPO.SHIP.NAME = WHS.DESC
OPO.SHIP.ADDR1 = WHS.ADDR1
OPO.SHIP.ADDR2 = WHS.ADDR2
OPO.SHIP.ADDR3 = WHS.CITY:',':WHS.STATE
OPO.SHIP.ADDR4 = WHS.ZIP
**
OPO.VDR.ORD = MAINTABDATA<9>
OPO.REQUESTOR = MAINTABDATA<10>
OPO.CONTACT = MAINTABDATA<11>
OPO.SHIP.VIA = MAINTABDATA<12>
MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:OPO.SHIP.VIA ELSE MAT SHIP.VIA.REC = ""
OPO.VIA.DESC = SHPV.DESC
OPO.FOB = MAINTABDATA<13>
OPO.INTRAL.INT = MAINTABDATA<14>
OPO.PRT.FLG<1,1> = MAINTABDATA<15>
*POR.MODE = MAINTABDATA<16>
*OPO.PRT.FLG<1,2> = MAINTABDATA<17>
*OPO.ORD.BY = MAINTABDATA<18>
IF MENU.FLAG = "R" THEN
	IF OPO.CODE = "N" AND POR.MODE = 1 THEN
	  READ PO.SEQNO FROM CONTROL, CONO:"OPOCODE" ELSE PO.SEQNO = 10000
	   PO.SEQNO += 1
	END ELSE
	  PO.SEQNO = OPO.CODE 
	END
END ELSE
	IF OPO.CODE = "N" THEN
	  READ PO.SEQNO FROM CONTROL, CONO:"OPOCODE" ELSE PO.SEQNO = 10000
	   PO.SEQNO += 1
	END ELSE
	  PO.SEQNO = OPO.CODE 
	END
END
*STRXML:="<CompanyNo>":CONO:"</CompanyNo>";*T113009
IF MENU.FLAG = "P" THEN
*T113009 v
  *STRXML:="<PONo>":PO.SEQNO:"</PONo>"
  STRXML:="<PO><PONo>":PO.SEQNO:"</PONo></PO>"
  STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
*T113009 ^
  *T012810 v
     HOLD_REQFLG = "False"
     IF MAINTABDATA<20> # "" THEN HOLD_REQFLG = "True"
     STRXML:="<isPoOnHold>":HOLD_REQFLG:"</isPoOnHold>"
  *T012810 ^
END ELSE
*T113009 v
  *STRXML:="<RequisitionNo>":PO.SEQNO:"</RequisitionNo>"
  *T120409 v
    *STRXML:="<Requisition><RequisitionNo>":PO.SEQNO:"</RequisitionNo></Requisition>"
    IF POR.MODE = 2 THEN
      STRXML:="<PO><PONo>":PO.SEQNO:"</PONo></PO>"
    END ELSE
      STRXML:="<Requisition><RequisitionNo>":PO.SEQNO:"</RequisitionNo></Requisition>"
    END
  *T120409 v
  STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
*T113009 ^
  *T111809 v
  IF POR.MODE = 2 THEN
     STRXML:="<ApproveStatus>Approved</ApproveStatus>"
     STRXML:="<ApproveStatusDate>":OCONV(DATE(),'D2/'):"</ApproveStatusDate>"
  END ELSE
  *T012810 v
     HOLD_REQFLG = "False"
     IF MAINTABDATA<20> # "" THEN HOLD_REQFLG = "True"
     STRXML:="<isRequisitionOnHold>":HOLD_REQFLG:"</isRequisitionOnHold>"
  *T012810 ^
     STRXML:="<ApproveStatus> </ApproveStatus>"
     STRXML:="<ApproveStatusDate> </ApproveStatusDate>"
  END
   STRXML:="<PriorRequisition>":MAINTABDATA<19>:"</PriorRequisition>"
  *T111809 ^
END
IF MENU.FLAG = "R" THEN
  STATUS.CNT = DCOUNT(OPO.STAT,VM)
  IF TEMP.OPO.STAT<1,STATUS.CNT-1> # OPO.STAT<1,STATUS.CNT> THEN
     STRXML:="<Status>":OPO.STAT<1,STATUS.CNT>:"</Status>"
  END
  IF TEMP.OPO.ST.DATE<1,STATUS.CNT-1> # OPO.ST.DATE<1,STATUS.CNT> THEN
  STRXML:="<StatusDate>":OCONV(OPO.ST.DATE<1,STATUS.CNT>,'D2/'):"</StatusDate>"
  END
  IF TEMP.OPO.APPROVER # OPO.APPROVER THEN
     STRXML:="<Approver>":OPO.APPROVER:"</Approver>"
  END
END
IF TEMP.OPO.DIV.OWNER # OPO.DIV.OWNER THEN
  STRXML:="<Division>":OPO.DIV.OWNER:"</Division>"
END
IF TEMP.OPO.DATE # OPO.DATE THEN
STRXML:="<PoDate>":OCONV(OPO.DATE,'D2/'):"</PoDate>"
END
IF TEMP.OPO.VEND.NO # OPO.VEND.NO THEN
STRXML:="<VendorNo>":OPO.VEND.NO:"</VendorNo>"
END
*
IF TEMP.OPO.WHSE # OPO.WHSE THEN
  STRXML:="<ShipToNo>":OPO.WHSE:"</ShipToNo>"
  STRXML:="<ShipToName>":OPO.SHIP.NAME:"</ShipToName>"
  STRXML:="<ShipToAddress1>":OPO.SHIP.ADDR1:"</ShipToAddress1>"
  STRXML:="<ShipToAddress2>":OPO.SHIP.ADDR2:"</ShipToAddress2>"
 *STRXML:="<ShipToCityState>":OPO.SHIP.ADDR3:"</ShipToCityState>"
  STRXML:="<ShipToCity>":FIELD(OPO.SHIP.ADDR3,",",1):"</ShipToCity>"
  STRXML:="<ShipToState>":FIELD(OPO.SHIP.ADDR3,",",2):"</ShipToState>"
  STRXML:="<ShipToZip>":OPO.SHIP.ADDR4:"</ShipToZip>"
END
*
IF TEMP.OPO.TERMS.DESC # OPO.TERMS.DESC THEN
  STRXML:="<TermsDescription>":OPO.TERMS.DESC:"</TermsDescription>"
END
IF TEMP.OPO.TERMS.DISC # OPO.TERMS.DISC THEN
  STRXML:="<TermsPercentage>":OCONV(OPO.TERMS.DISC,"MD2"):"</TermsPercentage>"
END
IF TEMP.OPO.TERMS.DATE # OPO.TERMS.DATE THEN
  STRXML:="<TermsDate>":OPO.TERMS.DATE:"</TermsDate>"
END
*
IF TEMP.OPO.VDR.ORD # OPO.VDR.ORD THEN
STRXML:="<VendorOrderNo>":OPO.VDR.ORD:"</VendorOrderNo>"
END
IF TEMP.OPO.REQUESTOR # OPO.REQUESTOR THEN
STRXML:="<Requestor>":OPO.REQUESTOR:"</Requestor>"
END
IF TEMP.OPO.CONTACT # OPO.CONTACT THEN
STRXML:="<ContactName>":OPO.CONTACT:"</ContactName>"
END
IF TEMP.OPO.SHIP.VIA # OPO.SHIP.VIA THEN
  STRXML:="<ShipViaCode>":OPO.SHIP.VIA:"</ShipViaCode>"
  STRXML:="<ShipViaName>":OPO.VIA.DESC:"</ShipViaName>"
END
IF TEMP.OPO.FOB # OPO.FOB THEN
  STRXML:="<FreightOnBoard>":OPO.FOB:"</FreightOnBoard>"
END
IF TEMP.OPO.INTRAL.INT # OPO.INTRAL.INT THEN
  STRXML:="<Comments>":OPO.INTRAL.INT:"</Comments>"
END
IF TEMP.OPO.PRT.FLG<1,1> # OPO.PRT.FLG<1,1> THEN
  STRXML:="<PrintFlag>":OPO.PRT.FLG<1,1>:"</PrintFlag>"
END
IF TEMP.OPO.ORD.BY # OPO.ORD.BY THEN
  STRXML:="<WrittenBy>":OPO.ORD.BY:"</WrittenBy>"
END
 GOSUB INITIALIZE_GRIDVAR
STRXML:="<Jobs>"
FOR LN = 1 TO DCOUNT(ITEMALLOCDATA,AM)
*T102109 v
*STRXML:="<Job>"
*TEMP.JOB.XML.STR:="<Job Line = '":LN:"'>"
TEMP.JOB.XML.STR = ""
*T102109 ^
   JOB.ADDED = 1
   OPO.JOB.NO<1,LN> = ITEMALLOCDATA<LN,1>
   OPO.PROD.LINE<1,LN> = ITEMALLOCDATA<LN,2>
   OPO.LAST.SEQ<1,LN> = LN
   OPO.PROD.SEQ<1,LN> = LN
   GOSUB 1003
   OPO.EXP.DATE<1,LN> = ICONV(ITEMALLOCDATA<LN,3>,"D2/")
   OPO.U.PRICE<1,LN> =ITEMALLOCDATA<LN,4>
   OPO.DISCOUNT<1,LN> = ITEMALLOCDATA<LN,5>
   OPO.UOM<1,LN> = ITEMALLOCDATA<LN,6>
   OPO.QTY<1,LN> =ITEMALLOCDATA<LN,7>
   AA = LN
   GOSUB 1019
   *OPO.CANCEL.QTY<1,LN> = ITEMALLOCDATA<LN,8>
   ECD.RET.VALUE = ITEMALLOCDATA<LN,8>
*******
   *IF ECD.RET.VALUE # 0 AND ECD.RET.VALUE # OPO.CANCEL.QTY<1,LN> THEN OPO.CANCEL.DATE<1,LN> = DATE() ;*T25662
   IF ECD.RET.VALUE # 0 AND ECD.RET.VALUE # OLD.CANCEL.QTY<1,LN> THEN OPO.CANCEL.DATE<1,LN> = DATE() ;*T25662
   OPO.CANCEL.QTY<1,LN> = ECD.RET.VALUE
   DESC.PRICE = INT(OPO.U.PRICE<1,LN>*((OPO.DISCOUNT<1,LN>/10000)))
   DESC.PRICE = INT(OPO.U.PRICE<1,LN> - DESC.PRICE)
*T23319 v
   BEGIN CASE
      CASE OPO.UOM<1,LN> = "M" 
         CANCEL.AMT = INT(((DESC.PRICE/100)*(OPO.CANCEL.QTY<1,LN>/100000)+.5))
      CASE OPO.UOM<1,LN> = "C" 
         CANCEL.AMT = INT(((DESC.PRICE/100)*(OPO.CANCEL.QTY<1,LN>/10000)+.5))
      CASE 1
         CANCEL.AMT = INT((DESC.PRICE/100) * (OPO.CANCEL.QTY<1,LN>/100)+.5)
   END CASE
*T23319 ^
   OPO.CANCEL.COST<1,LN> = CANCEL.AMT
   *AA=LN
   GOSUB 1020
********
   OPO.DVDPCC<1,1,LN> = ITEMALLOCDATA<LN,9>
   OPO.DVDPCC<1,2,LN> = ITEMALLOCDATA<LN,10>
   OPO.DVDPCC<1,3,LN> = ITEMALLOCDATA<LN,11>
   OPO.OPER.CODE<1,1,LN> = ITEMALLOCDATA<LN,12>
   *INC += 1
   OPO.ITEM.COMM<1,LN,1> = ITEMALLOCDATA<LN,13>
IF OPO.CODE = "N" THEN
	GOSUB OUTPAYLOADXML
END ELSE
*T102109 v
*	LOCATE ITEMALLOCDATA<LN,1> IN TEMP.OPO.JOB.NO<1>,1 SETTING J THEN
*	   GOSUB OUTPAYLOADXML
*	   TEMP.OPO.JOB.NO<1,J> = ""
*	END ELSE
*            GOSUB OUTPAYLOADXML
*	END
	IF READ.FLAG AND DELJOBALLOC THEN
	  TEMP.OPO.JOB.NO = ""
	  TEMP.OPO.DATE.RECVD = ""
	  TEMP.OPO.U.PRICE = ""
	  TEMP.OPO.DISCOUNT = ""
	  TEMP.OPO.UOM = ""
	  TEMP.OPO.QTY = ""
	  TEMP.OPO.TOT.OPEN = ""
	  TEMP.OPO.QTY.RECVD = ""
	  TEMP.OPO.CANCEL.QTY = ""
	  TEMP.OPO.ITEM.COMM = ""
	  TEMP.OPO.INTRAL.INT = ""
	  *
	  TEMP.OPO.DVDPCC = ""
	  TEMP.OPO.OPER.CODE = ""
	  TEMP.OPO.PROD.LINE = ""
	  *
	*                  DEL OPO.TAXABLE<1,LN1>
	*                  DEL OPO.DVDPCC<1,1,LN1>
	*                  DEL OPO.DVDPCC<1,2,LN1>
	*                  DEL OPO.DVDPCC<1,3,LN1>
	*                  DEL OPO.PROD.LINE<1,LN1>
	*                  DEL OPO.EST.COST<1,LN1>
	*                  DEL OPO.ACCTNO<1,LN1>
	*                  DEL OPO.CANCEL.COST<1,LN1>
	*                  DEL OPO.EXP.DATE<1,LN1>
	*                  DEL OPO.PROD.SEQ<1,LN1> ; * T25755
	END
	GOSUB OUTPAYLOADXML
*T102109 ^
END
*T102109 v
*TEMP.JOB.XML.STR:="</Job>"
IF TEMP.JOB.XML.STR # "" AND JOB.ADDED = 0 THEN
  STRXML := "<Job Line = '":LN:"'>":TEMP.JOB.XML.STR:"</Job>"
END
*T102109 ^
NEXT LN
STRXML:="</Jobs>"
GOSUB 1021
MATWRITE OPO.REC ON CONTROL,"01OPOR"
GOSUB 2000
*STRXML:="<Result> UPDATED SUCCESSFULLY</Result>"
IF MENU.FLAG = "P" THEN
   STRXML:="</OPO>"
END ELSE
*T113009 v
   *STRXML:="</Requisition>"
   *T120409 v
    *STRXML:="</OPOR>"
    IF POR.MODE = 2 THEN
       STRXML:="</OPO>"
    END ELSE
       STRXML:="</OPOR>"
    END
   *T120409 ^
*T113009 ^
END
STRXML:="</Payload>"
RETURN
********
ADDJOBCATGXML:
IF JOB.ADDED THEN
  TEMP.JOB.XML.STR:="<JobNo>":OPO.JOB.NO<1,LN>:"</JobNo>"
  IF INDEX(TEMP.JOB.XML.STR,"<Catagory>",1) = 0 THEN TEMP.JOB.XML.STR:="<Catagory>":OPO.PROD.LINE<1,LN>:"</Catagory>"
  JOB.ADDED = 0
END
RETURN
**********
OUTPAYLOADXML:
 IF TEMP.OPO.JOB.NO<1,LN> # OPO.JOB.NO<1,LN> THEN
   TEMP.JOB.XML.STR:="<JobNo>":OPO.JOB.NO<1,LN>:"</JobNo>"
   JOB.ADDED = 0
 END
 IF TEMP.OPO.PROD.LINE<1,LN> # OPO.PROD.LINE<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<Catagory>":OPO.PROD.LINE<1,LN>:"</Catagory>"
END
 IF TEMP.OPO.EXP.DATE<1,LN> # OPO.EXP.DATE<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<DeliverDate>":ITEMALLOCDATA<LN,3>:"</DeliverDate>"
 END
 IF TEMP.OPO.U.PRICE<1,LN> # OPO.U.PRICE<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<UnitPrice>":OCONV(OPO.U.PRICE<1,LN>,"MD4"):"</UnitPrice>"
 END
  IF TEMP.OPO.DISCOUNT<1,LN> # OPO.DISCOUNT<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<Discount>":OCONV(OPO.DISCOUNT<1,LN>,"MD2"):"</Discount>"
  END
  IF TEMP.OPO.UOM<1,LN> # OPO.UOM<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<UnitFlag>":OPO.UOM<1,LN>:"</UnitFlag>"
  END
  IF TEMP.OPO.UOM<1,LN> # OPO.UOM<1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<OrderedQuantity>":OCONV(OPO.QTY<1,LN>,"MD2"):"</OrderedQuantity>"
  END
  IF TEMP.OPO.CANCEL.QTY<1,LN> # OPO.CANCEL.QTY<1,LN> THEN
   TEMP.JOB.XML.STR:="<CancelQuantity>":OCONV(OPO.CANCEL.QTY<1,LN>,"MD2"):"</CancelQuantity>"
  END
  IF TEMP.OPO.TOT.OPEN<1,LN> # OPO.TOT.OPEN<1,LN> THEN
    TEMP.JOB.XML.STR:="<OpenQuantity>":OCONV(OPO.TOT.OPEN<1,LN>,"MD2"):"</OpenQuantity>"
  END
  IF TEMP.OPO.DVDPCC<1,1,LN> # OPO.DVDPCC<1,1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<CategoryDivision>":OPO.DVDPCC<1,1,LN>:"</CategoryDivision>"
  END
  IF TEMP.OPO.DVDPCC<1,2,LN> # OPO.DVDPCC<1,2,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<Department>":OPO.DVDPCC<1,2,LN>:"</Department>"
  END
  IF TEMP.OPO.DVDPCC<1,3,LN> # OPO.DVDPCC<1,3,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR:="<CostCenter>":OPO.DVDPCC<1,3,LN>:"</CostCenter>"
  END
  IF TEMP.OPO.OPER.CODE<1,1,LN> # OPO.OPER.CODE<1,1,LN> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR := "<Operation>":OPO.OPER.CODE<1,1,LN>:"</Operation>"
  END
  IF TEMP.OPO.ITEM.COMM<1,LN,1> # OPO.ITEM.COMM<1,LN,1> THEN
   GOSUB ADDJOBCATGXML
   TEMP.JOB.XML.STR := "<JobComments>":OPO.ITEM.COMM<1,LN,1>:"</JobComments>"
  END
RETURN
********
*
*** INPUT ACCRUE FLAG
1200*
*
   IF MENU.FLAG = "P" OR POR.MODE = 2 THEN ; * 24953 
      IF SUM(OPO.QTY.RECVD) = 0 THEN
         IF CO.PO.ACCRUE.FLAG<1,2> = '' OR CO.PO.ACCRUE.MAINT<1,2> = 'Y' THEN
            IF CO.PO.ACCRUE.FLAG<1,2> # '' AND FIRST.TIME = 1 THEN
               OPO.ACCRUE = CO.PO.ACCRUE.FLAG<1,2> 
            END ELSE
                  OPO.ACCRUE = CO.PO.ACCRUE.FLAG<1,2>
            END 
         END ELSE
            IF OPO.ACCRUE = '' THEN 
               OPO.ACCRUE = CO.PO.ACCRUE.FLAG<1,2> 
            END 
         END 
      END
   END ELSE
      OPO.ACCRUE = "N"
   END
   RETURN
*
****GET RECEIVED INFO
1003 *
   IF CO.APS.O.INTRF < 3 THEN RETURN
*TASK 18416 CLS
   IF OPO.PROD.LINE<1,LN> # '' AND OPO.JOB.NO<1,LN> # '' THEN
*T25755 v
      OPO.NO=OPO.CODE
*     VPDS.KEY=CONO:OPO.VEND.NO:"!O!":OPO.NO:"!":OPO.JOB.NO<1,LN>:"!":OPO.PROD.LINE<1,LN1>
      VPDS.KEY=CONO:OPO.VEND.NO:"!O!":OPO.NO:"!":OPO.JOB.NO<1,LN>:"!":OPO.PROD.LINE<1,LN>:"@":OPO.PROD.SEQ<1,LN>
*T25755 ^
      MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE MAT VPDS.REC = ''
      DATE.RECVD = VPDS.REC.DATE
      IF VPDS.REC.QTY = '' THEN 
         QTY.RECVD = 0
      END ELSE
         QTY.RECVD = SUM(VPDS.REC.QTY)
      END
   END
   OPO.QTY.RECVD<1,LN> = QTY.RECVD
 RETURN
 *********
**** CALCULATE ORDERD VALUE
1019 *
   DESC.PRICE = INT(OPO.U.PRICE<1,AA>*((OPO.DISCOUNT<1,AA>/10000)))
   DESC.PRICE = INT(OPO.U.PRICE<1,AA> - DESC.PRICE)
*T23319 v
   BEGIN CASE
      CASE OPO.UOM<1,AA> = "M" 
*        ONORD.AMT = INT(((DESC.PRICE/1000)*(OPO.QTY<1,AA>/100)+.5)/100)
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,AA>/100000)+.5)
      CASE OPO.UOM<1,AA> = "C"
         ONORD.AMT = INT((DESC.PRICE/100)*(OPO.QTY<1,AA>/10000)+.5)
      CASE 1
*        ONORD.AMT = INT(((DESC.PRICE) * (OPO.QTY<1,AA>/100)+.5)/100)
*T27938 v
*        ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100)+ .5)

         IF DESC.PRICE LT 0 THEN
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100) - .5)
         END ELSE
            ONORD.AMT = INT((DESC.PRICE/100) * (OPO.QTY<1,AA>/100) + .5)
         END
*T27938 ^
   END CASE
*T23319 ^
   IF ONORD.AMT > 999999999 THEN
      ERRMSG="Extended amount cannot exceed 9,999,999.99"
      GOTO 91000
      EXT.FLAG = 1
   END ELSE
      OPO.EST.COST<1,AA> = ONORD.AMT
   END
   RETURN
**** CALCULATE OPEN QTY
1020 *
   OPO.TOT.OPEN<1,AA> = OPO.QTY<1,AA> - OPO.QTY.RECVD<1,AA> - OPO.CANCEL.QTY<1,AA>
   IF OPO.TOT.OPEN<1,AA> < 0 THEN OPO.TOT.OPEN<1,AA> = 0
   RETURN
*******
*** CALCULATE TotalS
*
1021 *
   P.CNT = DCOUNT(OPO.JOB.NO,VM)
   TOT.QTY = 0 ; TOT.AMT = 0
   FOR A = 1 TO P.CNT
      TOT.QTY = TOT.QTY + OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>
      DESC.PRICE = INT(OPO.U.PRICE<1,A>*((OPO.DISCOUNT<1,A>/10000)))
      DESC.PRICE = INT(OPO.U.PRICE<1,A> - DESC.PRICE)
*T23319 v
      BEGIN CASE
         CASE OPO.UOM<1,A> = "M" 
*              ONORD.AMT.TOT = INT(((DESC.PRICE) * (OPO.QTY<1,A>*10)+.5)/100)
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100000)+.5))
*                 ONORD.AMT.TOT = INT(((DESC.PRICE/1000)*(OPO.QTY<1,A>))+.5)
         CASE OPO.UOM<1,A> = "C"
            ONORD.AMT.TOT = INT(((DESC.PRICE/100)*((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/10000)+.5))
         CASE 1
            ONORD.AMT.TOT = INT((DESC.PRICE/100) * ((OPO.QTY<1,A> - OPO.CANCEL.QTY<1,A>)/100)+.5)
*              ONORD.AMT.TOT = INT(((DESC.PRICE) * (OPO.QTY<1,A>/100)+.5)/100)
      END CASE
*T23319 ^
      TOT.AMT = TOT.AMT + ONORD.AMT.TOT
   NEXT A
   IF OCONV(TOT.AMT, "MD2") GT "99999999.9999" THEN
*      ERRMSG="Total Extended amount cannot exceed 99,999,999.99"
*      EXT.FLAG = 1
*      GOTO 93000
*      RETURN
     STRXML := "<TotalQuantityOrdered>":OCONV(0,"MD2"):"</TotalQuantityOrdered>"
     STRXML := "<TotalDollarAmount>":OCONV(0,"MD2"):"</TotalDollarAmount>"
   END ELSE
     STRXML := "<TotalQuantityOrdered>":OCONV(TOT.QTY,"MD2"):"</TotalQuantityOrdered>"
     STRXML := "<TotalDollarAmount>":OCONV(TOT.AMT,"MD2"):"</TotalDollarAmount>"
   END
   RETURN
*******
2000*

NEWREC = 0
IF MENU.FLAG = "R" AND OPO.CODE = "N" AND POR.MODE = 1 THEN 
  NEWREC = 1
END ELSE
   IF MENU.FLAG = "P" AND OPO.CODE = "N" THEN
    NEWREC = 1
   END
END
 *IF OPO.CODE = "N" AND POR.MODE = 1 THEN
  IF NEWREC THEN
	READU OPO.NUMBER FROM CONTROL, CONO:"OPOCODE" ELSE OPO.NUMBER = 10000
	FND = 1
     LOOP
	WHILE FND DO
	OPO.NUMBER = OPO.NUMBER + 1
	;*24231 v
      IF CO.PO.REQ.FLAG = "Y" THEN
	READU REC FROM OUTSIDE.PO, CONO:OPO.NUMBER ELSE
	   READU REC FROM OUT.REQ, CONO:OPO.NUMBER ELSE
	      FND = 0
	   END
        END
      END ELSE
	READU REC FROM OUTSIDE.PO, CONO:OPO.NUMBER ELSE 
	   FND= 0
	END
      END
	REC = ""
	IF FND THEN
	 RELEASE OUTSIDE.PO, CONO:OPO.CODE
	 IF CO.PO.REQ.FLAG = "Y" THEN  
	   RELEASE OUT.REQ, CONO:OPO.CODE  
	  END
	END
    REPEAT
	WRITE OPO.NUMBER ON CONTROL, CONO:"OPOCODE"
*	IF MENU.FLAG = "R"  THEN            
*	IF (REQ) THEN
*	ERRMSG = "Note new requisition number"
*	GOTO 91000 
*	END
*	END ELSE                                
*	ERRMSG = "Note new PO number"         
*	GOTO 91000 
*	END                                     
	OPO.CODE = OPO.NUMBER
END
IF MENU.FLAG = "R" THEN
   IF POR.MODE = 2 THEN
	CMD = 'DELETE OUT.REQ ':'"':CONO:OPO.CODE:'"'
	UDTEXECUTE CMD CAPTURING MSG
	WORK.FILE = "OUTSIDE.PO"
	*ERRMSG = "New PO number " :OPO.CODE:" has been created."  
	UPDATE  = "PO"
   END ELSE
	WORK.FILE = "OUT.REQ"
	UPDATE = "REQ"
   END
END ELSE
	WORK.FILE = "OUTSIDE.PO"
	UPDATE = "PO"
END
              * LOOP WHILE NOT(REQ) AND OPO.ACCRUE = '' DO
                  GOSUB 1200
              * REPEAT               
               OLD.JOB.CNT = DCOUNT(OLD.JOB.NO<1>,VM)
               FOR J = 1 TO OLD.JOB.CNT
                  THIS.JOB=OLD.JOB.NO<1,J>
                  LOCATE THIS.JOB IN OPO.JOB.NO<1>,1 SETTING VAL ELSE
                     MATREADU JSTAT.REC FROM JOB.STATS,CONO:THIS.JOB ELSE MAT JSTAT.REC = ""
                     PTR = 1
50                   
                     LOCATE OPO.CODE IN JSTAT.OPO.NO<1>,PTR SETTING SS ELSE SS = 0
                     IF SS THEN
                        IF JSTAT.PROD.LINE<1,SS> # OPO.PROD.LINE<1,J> THEN
                           PTR = PTR + 1
                           GOTO 50
                        END
                        JSTAT.OPO.NO = DELETE(JSTAT.OPO.NO,1,SS,0)
                        JSTAT.OPO.DATE = DELETE(JSTAT.OPO.DATE,1,SS,0)
                        JSTAT.OPO.AMT = DELETE(JSTAT.OPO.AMT,1,SS,0)
                        JSTAT.OPO.QTY = DELETE(JSTAT.OPO.QTY,1,SS,0)
                        JSTAT.PROD.LINE = DELETE(JSTAT.PROD.LINE,1,SS,0)
                        IF JSTAT.OPO.NO = "" AND JSTAT.SHP.TRANS = "" THEN
                           DELETE JOB.STATS, CONO : THIS.JOB
                        END ELSE
                           ;*24231 v
                           IF UPDATE = "PO" THEN
                              MATWRITE JSTAT.REC ON JOB.STATS,CONO:THIS.JOB
                           END
                        END
                     END ELSE
                        RELEASE JOB.STATS, CONO : THIS.JOB
                     END
                  END
               NEXT J
               JOB.CNT = DCOUNT(OPO.JOB.NO<1>,VM)
               FOR J = 1 TO JOB.CNT
                  MATREADU JSTAT.REC FROM JOB.STATS,CONO:OPO.JOB.NO<1,J> ELSE
                     MAT JSTAT.REC = ""
                  END
                  PTR = 1
55                
                  LOCATE OPO.CODE IN JSTAT.OPO.NO<1>,PTR SETTING SS THEN
*T25755 v
*                    IF JSTAT.PROD.LINE<1,SS> # OPO.PROD.LINE<1,J> THEN
                     IF JSTAT.PROD.LINE<1,SS> # OPO.PROD.LINE<1,J>:"@":OPO.PROD.SEQ<1,J> THEN
*T25755 ^
                        PTR = SS + 1
                        GOTO 55
                     END
                  END
                  JSTAT.OPO.NO<1,SS> = OPO.CODE
                  JSTAT.OPO.DATE<1,SS> = OPO.DATE
                  JSTAT.OPO.AMT<1,SS> = OPO.EST.COST<1,J>
                  JSTAT.OPO.QTY<1,SS> = OPO.QTY<1,J>
*T25755 v
*                 JSTAT.PROD.LINE<1,SS> = OPO.PROD.LINE<1,J>
                  JSTAT.PROD.LINE<1,SS> = OPO.PROD.LINE<1,J>:"@":OPO.PROD.SEQ<1,J>
*T25755 ^
                  ;*24231 v
                  IF UPDATE = "PO" THEN
                     MATWRITE JSTAT.REC ON JOB.STATS,CONO:OPO.JOB.NO<1,J>
                  END
                  ;*24231 ^
               NEXT J
6 *
*
*--- APS STATISTICS
*
               IF CO.APS.O.INTRF > 2 THEN GOSUB 5001
               *MATWRITE OPO.REC ON WORK.FILE , CONO:OPO.CODE
	       IF WORK.FILE = "OUTSIDE.PO" THEN
	           MATWRITE OPO.REC ON OUTSIDE.PO , CONO:OPO.CODE
	       END ELSE
	           MATWRITE OPO.REC ON OUT.REQ , CONO:OPO.CODE
	       END
RETURN
********
5001 *
*
   GTOT.ORD.AMT = 0
   GTOT.REC.AMT = 0
   PO.CNT = DCOUNT(OPO.JOB.NO,VM) 
   FOR P = 1 TO PO.CNT
      ORD.QTY = OPO.QTY<1,P> - OPO.CANCEL.QTY<1,P>
      IF OPO.UOM<1,P> = 'M' THEN
         ORD.QTY = ORD.QTY / 1000
      END
      IF OPO.DISCOUNT<1,P> > 0 THEN
         DISC.AMT = INT(OPO.U.PRICE<1,P>*(OPO.DISCOUNT<1,P>/10000))
         COST = INT(OPO.U.PRICE<1,P> - DISC.AMT)
      END ELSE
         COST = OPO.U.PRICE<1,P>
      END
*T23319 v
      GTOT.ORD.AMT = GTOT.ORD.AMT + (OPO.EST.COST<1,P> - OPO.CANCEL.COST<1,P>)
*T23319 ^
   NEXT P
   VSTAT.KEY = CONO:OPO.VEND.NO:"!":"O"
   MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE
      MAT VSTAT.REC = ""
   END
   VSTAT.CNT = DCOUNT(VSTAT.PO,VM)
   LOCATE OPO.CODE IN VSTAT.PO<1>,1 SETTING POFND ELSE POFND = VSTAT.CNT + 1
   VSTAT.PO<1,POFND> = OPO.CODE
   VSTAT.PO.ORDERD<1,POFND> = GTOT.ORD.AMT
   ;*24231 v
   IF UPDATE = "PO" THEN 
      MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
   END
   ;*24231 ^
   VPS.KEY = VSTAT.KEY:"!":OPO.CODE
   MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE
      MAT VPS.REC = ""
   END
   OPROD.CNT = DCOUNT(VPS.PROD,VM)
   FOR DP = OPROD.CNT TO 1 STEP -1
      JBCNT = DCOUNT(OPO.JOB.NO,VM)
      PTR = 1
      PDFND = 0
      DONE = 0
      LOOP
      UNTIL PTR > JBCNT OR DONE DO
         LOCATE VPS.PROD<1,DP> IN OPO.JOB.NO<1>,PTR SETTING PDFND ELSE DONE = 0
         IF PDFND THEN 
*T25755 v
*           IF VPS.WHSE<1,DP> = OPO.PROD.LINE<1,PDFND> THEN
            IF VPS.WHSE<1,DP> = OPO.PROD.LINE<1,PDFND>:'@':OPO.PROD.SEQ<1,PDFND> THEN
*T25755 ^
               DONE = 1
            END ELSE
               DONE = 0
            END
         END
         PTR = PDFND + 1
      REPEAT
      IF DONE = 0 THEN
         VPDS.KEY = VPS.KEY:"!":VPS.PROD<1,DP>:"!":VPS.WHSE<1,DP>
         DELETE VEND.PROD.STATS, VPDS.KEY
         VPS.PROD = DELETE(VPS.PROD,1,DP,0)
         VPS.SEQ.NO = DELETE(VPS.SEQ.NO,1,DP,0)
         VPS.PROD.DESC = DELETE(VPS.PROD.DESC,1,DP,0)
         VPS.U.M = DELETE(VPS.U.M,1,DP,0)
         VPS.WHSE = DELETE(VPS.WHSE,1,DP,0)
         VPS.ORD.QTY = DELETE(VPS.ORD.QTY,1,DP,0)
         VPS.ORD.AMT = DELETE(VPS.ORD.AMT,1,DP,0)
         VPS.REC.QTY = DELETE(VPS.REC.QTY,1,DP,0)
         VPS.REC.AMT = DELETE(VPS.REC.AMT,1,DP,0)
         VPS.VOU.QTY = DELETE(VPS.VOU.QTY,1,DP,0)
         VPS.VOU.AMT = DELETE(VPS.VOU.AMT,1,DP,0)
         VPS.VOU.NO = DELETE(VPS.VOU.NO,1,DP,0)
      END
   NEXT DP
   APROD.CNT = DCOUNT(OPO.JOB.NO,VM) 
   FOR UAP = 1 TO APROD.CNT
      PTR = 1
      PDFND = 0
      DONE = 0
      LOOP
         VPS.CNT = DCOUNT(VPS.PROD<1>,VM)
      UNTIL PTR > VPS.CNT OR DONE = 1 DO
         LOCATE OPO.JOB.NO<1,UAP> IN VPS.PROD<1>,PTR SETTING PDFND ELSE DONE = 0
         IF PDFND THEN
*T25755 v
*           IF OPO.PROD.LINE<1,UAP> = VPS.WHSE<1,PDFND> THEN DONE = 1 ELSE DONE = 0
            IF OPO.PROD.LINE<1,UAP>:'@':OPO.PROD.SEQ<1,UAP> = VPS.WHSE<1,PDFND> THEN DONE = 1 ELSE DONE = 0
*T25755 ^
         END
         PTR = PDFND + 1
      REPEAT
      IF DONE THEN
         LOC = PDFND
      END ELSE
         LOC = VPS.CNT+1
      END
      ;*CSF 25279 v
      ORD.QTY = OPO.QTY<1,UAP> - OPO.CANCEL.QTY<1,UAP>
      IF OPO.UOM<1,UAP> = 'M' THEN
         ORD.QTY = ORD.QTY / 1000
      END
      IF OPO.DISCOUNT<1,UAP> > 0 THEN
         DISC.AMT = INT(OPO.U.PRICE<1,UAP>*(OPO.DISCOUNT<1,UAP>/10000))
         COST = INT(OPO.U.PRICE<1,UAP> - DISC.AMT)
      END ELSE
         COST = OPO.U.PRICE<1,UAP>
      END
      ; *T23319 v                                              
      BEGIN CASE                                             
         CASE OPO.UOM<1,UAP> = "M"                            
            ORD.COST = INT(((COST/100) * (ORD.QTY/100)) + .5)  
         CASE OPO.UOM<1,UAP> = "C"                            
            ORD.COST = INT(((COST/100) * (ORD.QTY/10000)) + .5)
         CASE 1                                               
            ORD.COST = INT(((COST/100) * (ORD.QTY/100)) + .5)  
      END CASE                                               
      ;*T23319 ^
      IF ORD.COST < 0 THEN ORD.COST = 0
      IF OPO.UOM<1,UAP> = 'M' THEN
         ORD.QTY = ORD.QTY * 1000
      END
      VPS.PROD<1,LOC> = OPO.JOB.NO<1,UAP>
      READV JOB.DESCR FROM JOB,CONO:OPO.JOB.NO<1,UAP>,16 ELSE JOB.DESCR = ''
      VPS.PROD.DESC<1,LOC> = JOB.DESCR<1,1>
      VPS.U.M<1,LOC> = OPO.UOM<1,UAP>
*     VPS.WHSE<1,LOC> = OPO.PROD.LINE<1,UAP>
      VPS.WHSE<1,LOC> = OPO.PROD.LINE<1,UAP>:'@':OPO.PROD.SEQ<1,UAP>
      VPS.ORD.QTY<1,LOC> = ORD.QTY
      VPS.ORD.AMT<1,LOC> = ORD.COST
*     VPDS.KEY = VPS.KEY:"!":OPO.JOB.NO<1,UAP>:"!":OPO.PROD.LINE<1,UAP>
      VPDS.KEY = VPS.KEY:"!":OPO.JOB.NO<1,UAP>:"!":OPO.PROD.LINE<1,UAP>:'@':OPO.PROD.SEQ<1,UAP>
      MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE
         MAT VPDS.REC = ""
      END
      VPDS.ORD.DATE = "" ; VPDS.ORD.QTY = "" ; VPDS.ORD.UN.COST = ""
      VPDS.ORD.DATE<1> = OPO.DATE<1>
      VPDS.ORD.QTY<1> = ORD.QTY
      IF OPO.DISCOUNT<1,UAP> > 0 THEN
         DISC.AMT = INT(OPO.U.PRICE<1,UAP>*(OPO.DISCOUNT<1,UAP>/10000))
         VPDS.ORD.UN.COST<1> = INT(OPO.U.PRICE<1,UAP> - DISC.AMT)
      END ELSE
         VPDS.ORD.UN.COST<1> = OPO.U.PRICE<1,UAP>
      END
      VPDS.TAX.FLG<1> = OPO.TAXABLE<1,UAP>
      VPDS.PO.ACCT<1> = OPO.ACCTNO<1,UAP>
      VPDS.PO.DIV<1> = OPO.DVDPCC<1,1,UAP>
      VPDS.PO.DEPT<1> = OPO.DVDPCC<1,2,UAP>
      VPDS.PO.CCTR<1> = OPO.DVDPCC<1,3,UAP>
      VPDS.OPER.PERF<1> = OPO.OPER.CODE<1,1,UAP>
      IF UPDATE = "PO" THEN
         MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
      END
   NEXT UAP
   ;*24231 v
   IF UPDATE = "PO" THEN
      MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
   END
   ;*24231 ^
   RETURN
INITIALIZE_GRIDVAR:
  OPO.JOB.NO = ""
  OPO.DATE.RECVD = ""
  OPO.U.PRICE = ""
  OPO.DISCOUNT = ""
  OPO.UOM = ""
  OPO.QTY = ""
  OPO.TOT.OPEN = ""
  OPO.QTY.RECVD = ""
  OPO.CANCEL.QTY = ""
  OPO.ITEM.COMM = ""
  *OPO.INTRAL.INT = ""
  OPO.TAXABLE = ""
  OPO.DVDPCC = ""
  OPO.DVDPCC = ""
  OPO.DVDPCC = ""
  OPO.PROD.LINE = ""
  OPO.EST.COST = ""
  OPO.ACCTNO = ""
  OPO.CANCEL.COST = ""
  OPO.EXP.DATE = ""
  OPO.PROD.SEQ = ""
RETURN
*****************
91000*
93000*
IF MENU.FLAG = "PO" THEN
  STRXML = "<Payload><OPO><Errmsg>": ERRMSG:"</Errmsg></OPO></Payload>"
END ELSE
*T113009 v
  *STRXML = "<Payload><Requisition><Errmsg>": ERRMSG:"</Errmsg></Requisition></Payload>"
  STRXML = "<Payload><OPOR><Errmsg>": ERRMSG:"</Errmsg></OPOR></Payload>"
*T113009 ^
END
   RETURN
