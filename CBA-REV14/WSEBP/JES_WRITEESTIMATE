 SUBROUTINE JCS_WRITEJOB(INPUT_VALUE,CHK,JOB_ID)
 *********************************************************************
 *
 * PROGRAM  - WRITEJOB
 *
 *
 * DATE     - 07/13/07
 *
 *
 *********************************************************************
 *
 *---- COPY STATEMENTS
 $INCLUDE JCS.CPYLIB JOB
 $INCLUDE PMC.CPYLIB COMPANY
 ERRMSG=""
 WEBSERVICE=""
 OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOTO 99999
 OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOTO 99999
 OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOTO 99999
 JOB_ID=""
 RCNT = DCOUNT(INPUT_VALUE,@RM)
 FOR RPTR = 1 TO RCNT
  RECORDVALUE=FIELD(INPUT_VALUE,@RM,RPTR)
    RFCNT=DCOUNT(RECORDVALUE,@AM)
    WEBSERVICE=RECORDVALUE<RFCNT>
    CONO=""
    JOBID=""
    CONO=RECORDVALUE<1>
    MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
      GOTO 99999
    END
    JOBID=RECORDVALUE<2>
    IF CHK="C" THEN
    IF RECORDVALUE<2>="N" THEN
      GOSUB GET.JOB.NO
    END ELSE
      MATREAD JOB.REC FROM JOB,CONO:JOBID THEN
          ERRMSG=CONO:JOBID:"- ALREADY EXIST"
          GOTO 99999
      END
    END
    MAT JOB.REC=""
    END ELSE
    MATREAD JOB.REC FROM JOB,CONO:JOBID ELSE
      ERRMSG=CONO:JOBID:"- THIS JOB NUMBER IS NOT ON THE FILE"
      GOTO 99999
    END
    END
  IF RECORDVALUE<3> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<3>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,1>=RECORDVALUE<3>
     END ELSE
       JOB.TRACK.DATE<1,1>=DATEVALUE
     END
  END
  IF RECORDVALUE<5> NE '<$$NULL$$>' THEN JOB.CATG=RECORDVALUE<5>
  IF RECORDVALUE<6> NE '<$$NULL$$>' THEN JOB.COLORS<1,1>=RECORDVALUE<6>
  IF RECORDVALUE<7> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<7>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,10>=RECORDVALUE<7>
     END ELSE
       JOB.TRACK.DATE<1,10>=DATEVALUE
     END
  END
  *IF RECORDVALUE<7> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,10>=ICONV(RECORDVALUE<7>,'D')
 IF RECORDVALUE<8> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<8>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,8>=RECORDVALUE<8>
     END ELSE
       JOB.TRACK.DATE<1,8>=DATEVALUE
     END
  END
 * IF RECORDVALUE<8> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,8>=ICONV(RECORDVALUE<8>,'D')
  IF RECORDVALUE<13> NE '<$$NULL$$>' THEN JOB.CREDIT = RECORDVALUE<13>
  IF RECORDVALUE<14> NE '<$$NULL$$>' THEN JOB.CSR=RECORDVALUE<14>
   *  JOB.STATUS<1,1>=RECORDVALUE<15>
  IF RECORDVALUE<16> NE '<$$NULL$$>' THEN JOB.CUST=RECORDVALUE<16>
  IF RECORDVALUE<17> NE '<$$NULL$$>' THEN JOB.CUST.PO=RECORDVALUE<17>
  IF RECORDVALUE<18> NE '<$$NULL$$>' THEN JOB.DEPT=RECORDVALUE<18>
  IF RECORDVALUE<19> NE '<$$NULL$$>' THEN JOB.DIV=RECORDVALUE<19>
  IF RECORDVALUE<20> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<20>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,4>=RECORDVALUE<20>
     END ELSE
       JOB.TRACK.DATE<1,4>=DATEVALUE
     END
  END
 * IF RECORDVALUE<20> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,4>=ICONV(RECORDVALUE<20>,'D')
   IF RECORDVALUE<21> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<21>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,2>=RECORDVALUE<21>
     END ELSE
       JOB.TRACK.DATE<1,2>=DATEVALUE
     END
  END
  *IF RECORDVALUE<21> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,2>=ICONV(RECORDVALUE<21>,'D')
  IF RECORDVALUE<22> NE '<$$NULL$$>' THEN JOB.EST.COST=RECORDVALUE<22>
  IF RECORDVALUE<24> NE '<$$NULL$$>' THEN JOB.EST=RECORDVALUE<24>
  IF RECORDVALUE<25> NE '<$$NULL$$>' THEN JOB.EST.SALE=ICONV(RECORDVALUE<25>,'MD2')
  IF RECORDVALUE<26> NE '<$$NULL$$>' THEN JOB.EST.TYPE=RECORDVALUE<26>
  IF RECORDVALUE<27> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<27>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,6>=RECORDVALUE<27>
     END ELSE
       JOB.TRACK.DATE<1,6>=DATEVALUE
     END
  END
  *IF RECORDVALUE<27> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,6>=ICONV(RECORDVALUE<27>,'D')
  IF RECORDVALUE<28> NE '<$$NULL$$>' THEN JOB.DESC<1,1>=RECORDVALUE<28>
  IF RECORDVALUE<29> NE '<$$NULL$$>' THEN JOB.MARKUP=ICONV(RECORDVALUE<29>,'MD2')
  IF RECORDVALUE<30> NE '<$$NULL$$>' THEN JOB.TYPE<1,1>=RECORDVALUE<30>
  IF RECORDVALUE<31> NE '<$$NULL$$>' THEN JOB.MASTER<1,1>=RECORDVALUE<31>
  IF RECORDVALUE<32> NE '<$$NULL$$>' THEN JOB.QTY<1,1>=ICONV(RECORDVALUE<32>,'MD0')
  IF RECORDVALUE<33> NE '<$$NULL$$>' THEN JOB.PRIOR.JOB<1,1>=RECORDVALUE<33>
  IF RECORDVALUE<35> NE '<$$NULL$$>' THEN JOB.CONF.AMT<1,1>=ICONV(RECORDVALUE<35>,'MD2')
  IF RECORDVALUE<36> NE '<$$NULL$$>' THEN JOB.SALES.CODE=RECORDVALUE<36>
  IF RECORDVALUE<37> NE '<$$NULL$$>' THEN JOB.SLSMN=RECORDVALUE<37>
  IF RECORDVALUE<38> NE '<$$NULL$$>' THEN JOB.SHIP.VIA=RECORDVALUE<38>
  IF RECORDVALUE<39> NE '<$$NULL$$>' THEN JOB.COMMENTS<1,1>=RECORDVALUE<39>
  IF RECORDVALUE<40> NE '<$$NULL$$>' THEN JOB.SPOILAGE<1,1>=ICONV(RECORDVALUE<40>,'MD2')
  IF RECORDVALUE<41> NE '<$$NULL$$>' THEN JOB.TOT.BAL<1,1>=ICONV(RECORDVALUE<41>,'MD2')
  IF RECORDVALUE<42> NE '<$$NULL$$>' THEN JOB.TOT.COST<1,1>=ICONV(RECORDVALUE<42>,'MD2')
  IF RECORDVALUE<43> NE '<$$NULL$$>' THEN JOB.TOT.DCOST<1,1>=ICONV(RECORDVALUE<43>,'MD2')
  IF RECORDVALUE<44> NE '<$$NULL$$>' THEN JOB.TOT.INV<1,1>=ICONV(RECORDVALUE<44>,'MD2')
  IF RECORDVALUE<45> NE '<$$NULL$$>' THEN JOB.TOT.SALE<1,1>=ICONV(RECORDVALUE<45>,'MD2')
  IF RECORDVALUE<46> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<46>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,9>=RECORDVALUE<46>
     END ELSE
       JOB.TRACK.DATE<1,9>=DATEVALUE
     END
  END
 * IF RECORDVALUE<46> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,9>=ICONV(RECORDVALUE<46>,'D')
  IF RECORDVALUE<47> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<47>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,5>=RECORDVALUE<47>
     END ELSE
       JOB.TRACK.DATE<1,5>=DATEVALUE
     END
  END
 * IF RECORDVALUE<47> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,5>=ICONV(RECORDVALUE<47>,'D')
  IF RECORDVALUE<48> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<48>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,3>=RECORDVALUE<48>
     END ELSE
       JOB.TRACK.DATE<1,3>=DATEVALUE
     END
  END
  *IF RECORDVALUE<48> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,3>=ICONV(RECORDVALUE<48>,'D')
 IF RECORDVALUE<49> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<49>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,2>=RECORDVALUE<49>
     END ELSE
       JOB.TRACK.DATE<1,2>=DATEVALUE
     END
  END
 *IF RECORDVALUE<49> NE '<$$NULL$$>' THEN JOB.TRACK.DATE<1,2>=ICONV(RECORDVALUE<49>,'D')
  IF RECORDVALUE<50> NE '<$$NULL$$>' THEN JOB.JCS.FLAG<1,1>=RECORDVALUE<50>
  IF RECORDVALUE<51> NE '<$$NULL$$>' THEN 
     DATEVALUE=ICONV(RECORDVALUE<51>,'D2/')
     STAT=STATUS()
     IF STAT=1 THEN 
       JOB.TRACK.DATE<1,7>=RECORDVALUE<51>
     END ELSE
       JOB.TRACK.DATE<1,7>=DATEVALUE
     END
  END
IF RECORDVALUE<52> NE '<$$NULL$$>' THEN 
 DESCCOUNT=DCOUNT(RECORDVALUE<52>,@VM)
    FOR K = 1 TO DESCCOUNT
      IF RECORDVALUE<52,K> NE '<$$NULL$$>' THEN JOB.DESC<1,K>=RECORDVALUE<52,K>
    NEXT K
END
IF RECORDVALUE<53> NE '<$$NULL$$>' THEN
 COMCOUNT=DCOUNT(RECORDVALUE<53>,@VM)
  FOR L= 1 TO COMCOUNT
    IF RECORDVALUE<53,L> NE '<$$NULL$$>' THEN JOB.COMMENTS<1,L>=RECORDVALUE<53,L>
  NEXT L
END
MATWRITE JOB.REC ON JOB, CONO:JOBID ON ERROR ERRMSG="CANNOT WRITE TO JOB FILE" ; GOTO 99999
   IF RPTR NE RCNT THEN
     JOB_ID:=JOBID:@VM
   END ELSE
     JOB_ID:=JOBID    
   END
NEXT RPTR
RETURN
 *
 * GET NEW JOBNO
 GET.JOB.NO:
 JOBNO="N"
 READU JOBNO FROM CONTROL, CONO:"JOBNO" ELSE
 JOBNO = 10000
 END
 LOOP
 FND = 1
  JOBNO = JOBNO + 1
  IF JOBNO > 99999 THEN JOBNO = 1
     READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0
     WHILE FND DO
     RELEASE JOB, CONO : JOBNO
     REPEAT
     WRITE JOBNO ON CONTROL, CONO:"JOBNO"
     ERRMSG = "Please Note Assigned Job Number : ":JOBNO
  JOBID=JOBNO
 RETURN
 *
 *
 * WRITING ERROR TO WSE_LOG FILE
 99999*
 IF ERRMSG <> "" THEN
 ERRMSG = WEBSERVICE:"---> JCS_WRITEJOB---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 *
 *
 90000*
 RETURN
 END
