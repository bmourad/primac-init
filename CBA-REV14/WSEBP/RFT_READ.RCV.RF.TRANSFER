 SUBROUTINE RFT_READ.RCV.RF.TRANSFER(CONO,SERIALNO,STRXML,ERRMSG)
*********************************************************************
*
* PROGRAM  - RCV.RF.TRANSFER
*
* AUTHOR   - PRASHANT KUMAR
*
* DATE     - 09/27/2007
*
* DESCRIPTION
*
* This program is used to process the Roll Transfer transaction
* from the hand-held R-F units used in the warehouse.
*
*T26132 cm 09/06/2001 * Change screen size from 21x16 to 20x15.
*T26436 cm 02/13/2002 * The location entry field should be required.
*T26496 lhelms 03/21/2002 * UPGRADE TO REV12 REMOVE ROLL.SKID.INFO FOR
*                           REPLACE WITH INV_SERIAL
*C40541 adelgado 08/09/2002 * Don't check reservations if it's within whse
*                             & JOB.STATS file.
*T26831 adelgado 09/03/2002 * Force to transfer Real Time.
*T27750 lross 10/13/2003 * Error in WHS.DIV.
*T27705 lross 11/14/2003 * Expand Serial to 15 chars.
*********************************************************************
*
*---- COPY STATEMENTS
*
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","DAILY_TRANSFER" TO DAILY_TRANSFER ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.HIST" TO INV.HIST ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.TRAN.HIST" TO INV.TRAN.HIST ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","RS.XFER" TO RS.XFER ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","TRANSFER" TO TRANSFER ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","JOB" TO JOB ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","JOB.STATS" TO JOB.STATS ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
*
*---- INITIALIZATION
*
  MATREAD COMP.REC FROM COMPANY,CONO ELSE
    MAT COMP.REC = ""
  END
*
  TODAY = DATE()
  OTODAY = OCONV(TODAY,"D4/")
  STRXML = ''
*
*---- MAIN PROCESSING
*
    S$VALUE = SERIALNO
    IF S$VALUE = "" THEN RETURN
*T27705 v Should really look at CATG.BARCODE for below check.
    VALID=1
    IF LEN(S$VALUE) = 8 THEN
      CALL RFT_CHECK.DIGIT("T", S$VALUE, "10RL", CKDIG, VALID)
    END
*T27705 ^
    IF NOT(VALID) THEN
      ERRMSG = "INVALID SERIAL"; RETURN
    END
    MATREAD ISTK.REC FROM INV_SERIAL, CONO:S$VALUE ELSE
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "INVALID SERIAL"; RETURN
    END
*
*
    IF CO.INTR.WHSE # "" THEN
      IF CO.INTR.WHSE = ISTK.WHSE THEN
        RELEASE INV_SERIAL, CONO:S$VALUE
        ERRMSG = "NO INTER-DIV"; RETURN
      END
*T27750 v Move read below out of above 'IF'
*     MATREAD WHSE.REC FROM WAREHOUSE, CONO:ISTK.WHSE ELSE
*       RELEASE INV_SERIAL, CONO:S$VALUE
*       ERRMSG = "NO WHSE DIV"; RETURN
*     END
    END
    MATREAD WHSE.REC FROM WAREHOUSE, CONO:ISTK.WHSE ELSE
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "NO WHSE DIV"; RETURN
    END
*T27750 ^
    FROM.WHSE.DIV = WHS.DIV
*
    DEF.PERIOD = "";ERR.FLG = "";ERRMSG = ""
    CALL RFT_CHECK.PERIOD.DATE(CONO,TODAY,DEF.PERIOD,FROM.WHSE.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL)
    BEGIN CASE
      CASE ERRMSG = ""
      CASE ERR.FLG = 0
        ERRMSG = "DATE WARNING"
        STRXML := "<Warning>":ERRMSG:"</Warning>"
      CASE ERR.FLG = 1
        RELEASE INV_SERIAL, CONO:S$VALUE
        ERRMSG = "DTE-PER MISMATCH" ;RETURN 
      CASE ERR.FLG = 2
        RELEASE INV_SERIAL, CONO:S$VALUE
        ERRMSG = "FISCAL MISSING" ;RETURN
    END CASE
*
*
1000*
    ERRMSG = ""
    ERR.FLG = ""
*
    IF ISTK.RECP.PERIOD > DEF.PERIOD THEN
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "RECP PER GREATER" ; RETURN
    END
    IF ISTK.POST.DATE = "" THEN
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "SERIAL NOT RCVD"; RETURN
    END
    IF (ISTK.CUR.QTY + 0) = 0 THEN
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "NO QTY"; RETURN
    END
    * C40541 v
    * IF ISTK.CUR.QTY # ISTK.RSVB.QTY THEN
    *   RELEASE INV_SERIAL, CONO:S$VALUE
    *   ERRMSG = "QTY RESERVED"; RETURN; GOTO 1090
    * END
    * C40541 ^
*
    MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "INVALID PRODUCT"; RETURN
    END
*
$INCLUDE ICSBP INV.UM.CNV
*
*    PRINT @(05,05):ISTK.MILL.ID[1,15]:
STRXML := "<MillRollId>":ISTK.MILL.ID[1,15]:"</MillRollId>"
*
    MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "CANT FIND SERIAL"; RETURN
    END
    LOCATE S$VALUE IN IWLO.SERIAL<1>,1 SETTING P ELSE
      RELEASE INV_SERIAL, CONO:S$VALUE
      ERRMSG = "CANT FIND SERIAL"; RETURN
    END
    TEMP.DISPLAY=INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
*    PRINT @(05,06):OCONV(TEMP.DISPLAY,ICR.CNV):
    STRXML := "<RollWeight>":OCONV(TEMP.DISPLAY,ICR.CNV):"</RollWeight>"
*
    IF ISTK.LOC = "" THEN
*      PRINT @(10,07):ISTK.WHSE"L#4":
       STRXML := "<Location>":ISTK.WHSE:"</Location>"
    END ELSE
*      PRINT @(10,07):(ISTK.WHSE:"-":ISTK.LOC)"L#9":
      STRXML := "<Location>":ISTK.WHSE:"-":ISTK.LOC:"</Location>"
    END
  RELEASE INV_SERIAL, CONO:S$VALUE
RETURN
