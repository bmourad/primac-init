SUBROUTINE RSMATERIAL_RSMATERIALSERVICE_RSLOADDATA(CONO,PVALUE,STRXML,ERRMSG,SCHEMA.ONLY) 
*********************************************************************************************
*Created by : Yakub Ali Khan on 01/24/2010
*********************************************************************************************
SCHEMA.ONLY = 0
$INCLUDE PMC.CPYLIB PO 
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
DEFFUN CALC_STK_QTY_PRIDGET (COST.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_COST_QTY_PRIDGET (STK.QTY,MAT INV.CNV.REC,ROND,LN)
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = 'ESTIMATE FILE IS MISSING'; GOTO 93000
MAT PO.REC = ""
XYZ = ""
TMP = ""
REQ_QTY = ""
INV_AVL_QTY = ""
JOB_RESV_MATL = ""
JOB_RESV_WHSE = ""
JOB_RESV_DATE = ""
JOB_ALOC_QTY = ""
JOB_RESV_QTY = ""
JOB_USED_QTY = ""
AVL_QTY = ""
AVL.QTY = 0
MATL.DESC = ''
MATL.TYPE = ''
MATL.UM = ''
MATL.TRACK.QOH = ''
RSV.SERIAL=''
CONVF = ""
INV_WHSE_CODE = ""
UNKNOWN = "??????????"
PO_INV_CUST = ""
PO_ROLL_FLAG = ""
PO_PROD_NUM = ""
PO_PROD_DESC = ""
PO_UOM_FLAG = ""
PO_JB_UNITS = ""
PO_UNIT_FLG = ""
PO_UNIT_FLG = ""
INV_WARE_CODES = ""
JOBNO =   PVALUE<1>
PROD_NUM = PVALUE<2>
PRODREQ_QTY = PVALUE<3>
*PO.DIV.OWNER = PVALUE<3>
*
*CONO = "001"
*JOBNO = "10110"
*PROD_NUM = "DROLL1":VM:"OTHER-RSDO-PKG":VM:"RL1-RLTRL-MSI"
*PROD_NUM = "DROLL1":VM:"DDD":VM:"DDROLL"
*PO.DIV.OWNER = "01"
*
DATAFILE = "DEPARTMENT"
LN = 0
LML = ""
LML<1> ="IM IN RSMATERIAL_RSMATERIALSERVICE_RSLOADDATA ":PVALUE;WRITE LML ON CONTROL,'01RS'
*DEFFUN PRIDGET_UOM_CONVERSION_CALC(QTY,FROM.UOM,TO.UOM,WGT,WIDTH,ROND,LN)
STRXML = "<RSDATA>"
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
********JOB
 MATREAD JOB.REC FROM JOB, CONO:JOBNO ELSE
    MAT JOB.REC = ""
    ERRMSG="Job number ":JOBNO : " does not exist"
    GOTO 93000
 END
    IF JOB.DIV # "" THEN
      MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE
         ERRMSG = "CANNOT LOCATE DIVISION - ":JOB.DIV
         GOTO 93000
      END
   END
   IF JOB.EST # "" AND CO.JES = "Y" THEN
      MATREAD EST.REC FROM ESTIMATE,CONO:JOB.EST ELSE
        * ERRMSG = "CANNOT LOCATE ESTIMATE - ":JOB.EST
	 STRXML := "<Warning>CANNOT LOCATE ESTIMATE - ":JOB.EST:"</Warning>"
      END
   END
 CALL JOB_STATUS_SUB_PRIDGET(JOB.STATUS,JOB.TRACK.DATE,STATUS)
 PO.DIV.OWNER = JOB.DIV
 IF PO.DIV.OWNER = "0" OR PO.DIV.OWNER = "" THEN PO.DIV.OWNER = JOB.DIV
 MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE MAT DIV.REC = ""
 *MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE<1,LNP> ELSE MAT WHSE.REC = ''
       MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
         ERRMSG = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
         CUST.NAME = UNKNOWN
	 GOTO 93000
      END
 *STRXML = "<JobNo>" : JOBNO  : "</JobNo>"
 *STRXML := "<JobDesc>" : JOB.DESC<1,1> : "</JobDesc>"
  *JobInfo = JOBNO:VM:JOB.DESC<1,1>:AM:JOB.DIV:VM:DIV.DESC:AM:JOB.CUST:VM:CUST.NAME
 *JobInfo = JOBNO:SVM:JOB.DESC<1,1>:VM:JOB.CUST:SVM:CUST.NAME:VM:JOB.DIV:SVM:DIV.DESC
 JobInfo = JOBNO:"-":JOB.DESC<1,1>[1,20]:VM:JOB.CUST:"-":CUST.NAME:VM:JOB.DIV:"-":DIV.DESC
  STRXML := "<JobInfo>": JobInfo :"</JobInfo>"
  STRXML := "<JobDueDate>" : OCONV(JOB.TRACK.DATE<1,4>,"D2/")  : "</JobDueDate>"
  STRXML := "<JobStatus>": STATUS :"</JobStatus>"
  STRXML := "<CustSvc>": JOB.CSR :"</CustSvc>"
  STRXML := "<JobType>": JOB.TYPE :"</JobType>"
  STRXML := "<JobCatg>": JOB.CATG :"</JobCatg>"
  STRXML := "<MasterJobNo>": JOB.MASTER :"</MasterJobNo>"
 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN
    DISPLAY=1
 END ELSE
    DISPLAY=0
 END
 STRXML := "<DisplayFlag>" : DISPLAY  : "</DisplayFlag>"
*******
      LINES=DCOUNT(JOB.RESV.MATL,VM)
      FOR LN = 1 TO LINES
         MATREAD INV.REC FROM INVENTORY, CONO:JOB.RESV.MATL<1,LN> ELSE
            MAT INV.REC = ''
            INV.FULL.DESC = UNKNOWN
         END
         MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
            MAT CATG.REC = ""
         END
	 *JOB_RESV_MATL<1,-1> = JOB.RESV.MATL<1,LN>
         GOSUB 8000
            JSTAT.ID = JOB.RESV.MATL<1,LN>:"!":JOB.RESV.WHSE<1,LN>:"!":JOBNO
            MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
               MAT INV.JS.REC = ''
            END
	 GOSUB 9000
         GOSUB 9001
      NEXT LN
STRXML := "<RProdNum>" : JOB_RESV_MATL  : "</RProdNum>"
STRXML := "<RProdDesc>" : MATL.DESC  : "</RProdDesc>"
*STRXML := "<RConvFormat>":CONVF:"</RConvFormat>"
STRXML := "<RMaterialType>" : MATL.TYPE  : "</RMaterialType>"
STRXML := "<RUom>":MATL.UM:"</RUom>"
STRXML := "<RWhse>":JOB_RESV_WHSE:"</RWhse>"
STRXML := "<RDate>":JOB_RESV_DATE:"</RDate>"
STRXML := "<RAlocQty>":JOB_ALOC_QTY:"</RAlocQty>"
STRXML := "<RRsvQty>":JOB_RESV_QTY:"</RRsvQty>"
STRXML := "<RUsedQty>":JOB_USED_QTY:"</RUsedQty>"
STRXML := "<RCatgTrackQohFlg>":MATL.TRACK.QOH:"</RCatgTrackQohFlg>"
STRXML := "<RAvaiableQty>":INV_AVL_QTY:"</RAvaiableQty>"
STRXML := "<RRequiredQty>" : REQ_QTY  : "</RRequiredQty>"
   LN = 0
   CONVF = ""
   MATL.DESC = ""
   MATL.TYPE = ""
   MATL.UM = ""
   MATL.TRACK.QOH = ""
   RSV.SERIAL =""
   ****
   JOB_ALOC_QTY = ""
   JOB_RESV_QTY = ""
   JOB_USED_QTY = ""
   INV_AVL_QTY = ""
   JOB_RESV_WHSE = ""
   JOB_RESV_MATL = ""
   JOB.RESV.MATL = ""
*******
REQ_QTY = ""
FOR I = 1 TO DCOUNT(PROD_NUM,VM)
UOM_FLAG = "N"
	**** ENTER PRODUCT
	MATREAD INV.REC FROM INVENTORY, CONO:PROD_NUM<1,I> ELSE
	  *ERRMSG = "INVENTORY (":PROD_NUM<1,I>:") IS NOT ON FILE."
	  *GOTO 93000
	  CONTINUE
	END
	IF INV.M.LINE = 'FNGD' THEN
	  IF CO.OPS = 'Y' THEN
	    *ERRMSG = "FINISHED GOODS PRODUCTS ARE INVALID FOR REGULAR PO'S"
	    *GOTO 93000
	    CONTINUE
	  END
	END
	*
	MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
	  *ERRMSG = "CATEGORY (":INV.LINE:") IS NOT ON FILE."
	  *GOTO 93000
	  CONTINUE
	END
	IF CATG.TRACK.QOH # "Y" THEN
	      *ERRMSG = 'CANNOT UPDATE QUANTITY FOR THIS PRODUCT'
	      *GOSUB 91000
	      CONTINUE
	END
	********
      IF INV.CUST # "" THEN
         IF "X":JOB.CUST # "X":INV.CUST THEN
            *ERRMSG = "THIS INVENTORY IS OWNED BY CUSTOMER ":INV.CUST
	    CONTINUE
         END
      END
*
	   IF INV.WHSE.CODE = '' THEN
	      *ERRMSG = 'INVENTORY (':JOB.RESV.MATL<1,LN>:') HAS NO WAREHOUSES'
	      *GOSUB 91000; GOTO 1100
	      CONTINUE
	   END
*
      LN += 1
	PO_PROD_NUM<1,LN> = PROD_NUM<1,I>
	JOB.RESV.MATL<1,LN> = PROD_NUM<1,I>
	*PO_PROD_DESC<1,LN> = INV.FULL.DESC
	INV_WHSE_CODE<1,LN> = INV.WHSE.CODE
	MAT INV.JS.REC = ''
	GOSUB 8000
	GOSUB 9000
NEXT I
STRXML := "<ProdNum>" : PO_PROD_NUM  : "</ProdNum>"
STRXML := "<ProdDesc>" : MATL.DESC  : "</ProdDesc>"
STRXML := "<ConvFormat>":CONVF:"</ConvFormat>"
STRXML := "<MaterialType>" : MATL.TYPE  : "</MaterialType>"
STRXML := "<Uom>":MATL.UM:"</Uom>"
STRXML := "<CatgTrackQohFlg>":MATL.TRACK.QOH:"</CatgTrackQohFlg>"
STRXML := "<AlocQty>":JOB_ALOC_QTY:"</AlocQty>"
STRXML := "<RsvQty>":JOB_RESV_QTY:"</RsvQty>"
STRXML := "<UsedQty>":JOB_USED_QTY:"</UsedQty>"
STRXML := "<RsvSerialFlag>":RSV.SERIAL:"</RsvSerialFlag>"
STRXML := "<RequiredQty>" : REQ_QTY  : "</RequiredQty>"
*
******************WAREHOUSE
*

K = 1
	XMLLIST = ""
	CNT = 0
	  CMD= "SSELECT WAREHOUSE WITH @ID LIKE '":CONO:"...'"
	UDTEXECUTE CMD CAPTURING JUNG
	DATA=1
	LOOP
	  READNEXT ID ELSE DATA=0
	  WHILE DATA DO
	  S = 1
           FOR J = 1 TO DCOUNT(PO_PROD_NUM,VM)
	      PO.WHSE = ID[4,99]
	      INV.WHSE.KEY = CONO:PO_PROD_NUM<1,J>:"!":PO.WHSE
		IF CO.INTR.WHSE # '' AND PO.WHSE = CO.INTR.WHSE THEN
		    *ERRMSG = 'CAN NOT APPLY, USING AN INTER-DIVISIONAL WHSE IS RESTRICTED'
*		    GOTO 222
		 END
		  MATREAD IWH.REC FROM INV.WHSE , INV.WHSE.KEY ELSE
		    *ERRMSG = "INV.WHSE RECORD NOT ON FILE" ; GOSUB 91000;GOTO 1021
		    GOTO 333
		  END
		  MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE ELSE
		    *ERRMSG = "WAREHOUSE RECORD NOT ON FILE"; GOSUB 91000; GOTO 1021
		    GOTO 222
		  END
		  IF WHS.DIV # PO.DIV.OWNER AND PO.DIV.OWNER # "00" THEN
		    *ERRMSG = "Warehouse Division does not match the Owning Division"
*		    GOTO 222
		  END
		  **********VALIDATION FOR SINGLE JOB ID
	      IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN 
		 *ERRMSG = "JOB ":VALUE:" HAS A DIFFERENT DIVISION THAN THE PRODUCT"
		 GOTO 333
	      END
*********
  * GOSUB 8000
        AVL.QTY = 0
       * AVL.QTY=IWH.ON.HAND-IWH.RESV+JOB.RESV.QTY<1,J>
        AVL.QTY=IWH.ON.HAND-IWH.RESV + 0
         AVL.QTY=CALC_STK_QTY_PRIDGET(AVL.QTY,MAT INV.CNV.REC,'.5',J)
	AVL_QTY<1,J,-1> = OCONV(AVL.QTY,ICR.CNV<J>)
*         IF VALUE > AVL.QTY THEN
*            ERRMSG = 'MAXIMUM QTY AVAILABLE = '
*            ERRMSG :=OCONV(AVL.QTY,ICR.CNV<LN>):' ':MATL.UM<LN>
*            GOSUB 91000; GOTO ENT.RESERVE.QTY
*         END
********
             INV_WARE_CODES<1,J,-1> = PO.WHSE
	     S += 1
	333*
	  NEXT J
	K += 1
	222*
	REPEAT
	*UDTEXECUTE "CLEARSELECT"
STRXML := "<InvWhseCodes>" : INV_WARE_CODES  : "</InvWhseCodes>"
STRXML := "<AvailableQty>":AVL_QTY:"</AvailableQty>"
STRXML := "</RSDATA>"
RETURN
********
8000 *
********
*
   MATL.DESC<1,LN> = INV.FULL.DESC
   MATL.TYPE<1,LN> = INV.PAP.TYPE
   MATL.UM<1,LN> = INV.UNIT<1,2>
   MATL.TRACK.QOH<1,LN> = CATG.TRACK.QOH
   RSV.SERIAL<1,LN>=CATG.RSV.SERIAL
   BEGIN CASE
      CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         ICR.DV1<LN> = INV.M.WT
         ICR.MT1<LN> = 1
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD0"
	 CONVF<1,-1> = "MD0"
      CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<LN> = INV.PAP.WIDTH/100
         ICR.MT1<LN> = 10
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD0"
	 CONVF<1,-1> = "MD0"
      CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         ICR.DV1<LN> = INV.PAP.WIDTH/100
         ICR.MT1<LN> = 100
         ICR.DV2<LN> = 12
         ICR.CNV<LN> = "MD0"
	 CONVF<1,-1> = "MD0"
      CASE 1
         ICR.DV1<LN> = 10
         ICR.MT1<LN> = 1
         ICR.DV2<LN> = 1
         ICR.CNV<LN> = "MD2"
	 CONVF<1,-1> = "MD2"
   END CASE
RETURN
*
*******
9000 *
******
   JOB_RESV_MATL<1,LN> = JOB.RESV.MATL<1,LN>
   JOB_RESV_WHSE<1,LN> =  JOB.RESV.WHSE<1,LN>
      *IF MATL.TYPE<N> = 'REGULAR' THEN MATL.TYPE<LN> = 'REGULR'
   JOB_RESV_DATE<1,LN>= OCONV(JOB.RESV.DATE<1,LN>,"D2/")
      TMP=CALC_STK_QTY_PRIDGET(JOB.ALOC.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
   JOB_ALOC_QTY<1,LN>=OCONV(TMP,ICR.CNV<LN>)
      TMP=CALC_STK_QTY_PRIDGET(JOB.RESV.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
   JOB_RESV_QTY<1,LN>=OCONV(TMP,ICR.CNV<LN>)
      TMP=CALC_STK_QTY_PRIDGET(JOB.USED.QTY<1,LN>,MAT INV.CNV.REC,'.5',LN)
      JOB_USED_QTY<1,LN>=OCONV(TMP,ICR.CNV<LN>)
     IF IJS.REQ.QTY > 0 THEN
       REQ_QTY<1,LN> = OCONV(INT(((IJS.REQ.QTY/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> + .5),ICR.CNV<LN>)
     END ELSE
	 LOCATE JOB.RESV.MATL<1,LN> IN PROD_NUM<1>,1 SETTING LLOC THEN
	   IF ICR.CNV<LN> = "MD2" THEN
	      IF INDEX(PRODREQ_QTY<1,LLOC>,".",1) > 0 THEN
	        IF LEN(FIELD(PRODREQ_QTY<1,LLOC>,".",2)) > 2 THEN
                   REQ_QTY<1,LN> = FIELD(PRODREQ_QTY<1,LLOC>,".",1):FIELD(PRODREQ_QTY<1,LLOC>,".",2)[1,2]
		END ELSE
                   REQ_QTY<1,LN> = PRODREQ_QTY<1,LLOC>
		END
	      END ELSE
	        REQ_QTY<1,LN> = OCONV(PRODREQ_QTY<1,LLOC>:00,ICR.CNV<LN>)
              END
	   END ELSE
              IF INDEX(PRODREQ_QTY<1,LLOC>,".",1) > 0 THEN
                 REQ_QTY<1,LN> = FIELD(PRODREQ_QTY<1,LLOC>,".",1)
	      END ELSE
                 REQ_QTY<1,LN> = PRODREQ_QTY<1,LLOC>
	      END
	   END
	 END ELSE
	   REQ_QTY<1,LN> = 0
	 END
      END
RETURN
*******
9001 *
*******
 INV.WHSE.KEY = CONO:JOB.RESV.MATL<1,LN>:"!":JOB.RESV.WHSE<1,LN>
  MATREAD IWH.REC FROM INV.WHSE , INV.WHSE.KEY ELSE MAT IWH.REC = ""
AVL.QTY = 0
 AVL.QTY=IWH.ON.HAND-IWH.RESV+JOB.RESV.QTY<1,LN>
AVL.QTY=CALC_STK_QTY_PRIDGET(AVL.QTY,MAT INV.CNV.REC,'.5',LN)
INV_AVL_QTY<1,LN> = OCONV(AVL.QTY,ICR.CNV<LN>)
RETURN
******
93000*
******
IF ERRMSG <> "" THEN
SCHEMA.ONLY = 0
STRXML = "<RSDATA><ErrMsg>": ERRMSG:"</ErrMsg></RSDATA>"
CALL WRITELOG(ERRMSG)
END
END
