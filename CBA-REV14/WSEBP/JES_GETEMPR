SUBROUTINE JES_GETEMPR(CONO, JOB.ID, SCHEMA.ONLY, ERRMSG, STRXML)
STRXML := '<Estimate><MatlQty></MatlQty><MatlCost></MatlCost><ExcessMatl></ExcessMatl><EST_RL_PAP_MSI></EST_RL_PAP_MSI><MatlTotalCost></MatlTotalCost></Estimate>'
SCHEMA.ONLY="1"
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE PMC.CPYLIB COMPANY
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE" ;GOTO 99999
OPEN '','ESTIMATE.RES' TO ESTIMATE.RES ELSE ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE" ;GOTO 99999
* READ THE COMPANY CODE
MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG=CONO:"- THIS COMPANY NUMBER DOES NOT EXIST"
      GOTO 99999      
END
MTLCNT=1
MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:JOB.ID THEN
  ECNT=DCOUNT(EST.RL.PAP.MSI,@VM)
  IF ECNT # "0" THEN
     STRXML=''
     SCHEMA.ONLY="0"
  END
  FOR J=1 TO ECNT     
        DCNT=DCOUNT(EST.RL.PAP.MSI<1,J>,@SVM)
	IF DCNT="0" THEN GOSUB 10000
	  FOR K=1 TO DCNT
                STRXML := '<Estimate>'
		STRXML := '<MatlQty>': EST.RL.PAP.MSI<1,J,K> : '</MatlQty>'
		STRXML := '<MatlCost>': OCONV(EST.RL.PAP.PRICE<1,J,K>,"MD4") : '</MatlCost>'
		STRXML := '<ExcessMatl></ExcessMatl>'
		STRXML := '<EST_RL_PAP_MSI>' : MTLCNT :'</EST_RL_PAP_MSI>'
		STRXML := '<MatlTotalCost>' : OCONV(EST.RL.PAP.PRICE<1,J,K>,"MD4") : '</MatlTotalCost>'		
		STRXML := '</Estimate>'
		MTLCNT = MTLCNT +1
	  NEXT K       
  NEXT J
END  
RETURN
*
10000
	 STRXML := '<Estimate>'
		STRXML := '<MatlQty>': EST.RL.PAP.MSI<1,J> : '</MatlQty>'
		STRXML := '<MatlCost>': OCONV(EST.RL.PAP.PRICE<1,J>,"MD4") : '</MatlCost>'
		STRXML := '<ExcessMatl></ExcessMatl>'
		STRXML := '<EST_RL_PAP_MSI>' : MTLCNT :'</EST_RL_PAP_MSI>'
		STRXML := '<MatlTotalCost>' : OCONV(EST.RL.PAP.PRICE<1,J>,"MD4") : '</MatlTotalCost>'		
		STRXML := '</Estimate>'
		MTLCNT = MTLCNT +1
RETURN
*
99999*
 IF ERRMSG <> "" THEN
 ERRMSG = "ERROR FROM  JES_GETEMPR  ---> " : ERRMSG
      CALL WRITELOG(ERRMSG)
 END
 RETURN
 END
