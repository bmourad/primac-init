SUBROUTINE JCS_JOBSERVICE_WRITEJOB(INPUTSTR,ERRSTR,XMLSTR)
*T290609 - ADDED SISQUEUE FUNCTIONALITY BY NARESH
**************************************************
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB SALES.CODE        ; * T26973
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE JCS.CPYLIB CREDIT.AUTH.CODE
$INCLUDE JCS.CPYLIB JOB.CATEGORY
$INCLUDE PSS.CPYLIB JOB.SCHED
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE CPYLIB SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*******************************************
OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN THE JOB FILE"
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN THE COMPANY FILE"
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN THE CUSTOMER FILE"
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN THE SALESMAN FILE"
OPEN "","CSR.CODE" TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN THE CSR.CODE FILE"
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN THE SHIP.VIA FILE"
OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG = "CANNOT OPEN THE SALES.CODE FILE"
OPEN "","GANG.JOB" TO GANG.JOB ELSE ERRMSG = "CANNOT OPEN THE GANG.JOB FILE"
OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN THE ESTIMATE FILE"
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "CANNOT OPEN THE DIVISION FILE"
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG = "CANNOT OPEN THE JOB.FNGD.STATS FILE"
OPEN "","SECURITY" TO SECURITY ELSE ERRMSG = "CANNOT OPEN THE SECURITY FILE"
OPEN "","CREDIT.AUTH.CODE" TO CREDIT.AUTH.CODE ELSE ERRMSG = "CANNOT OPEN THE CREDIT.AUTH.CODE FILE"
OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG = "CANNOT OPEN THE JOB.CATEGORY FILE"
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN THE CONTROL FILE"
********************************************
ERRMSG = ""
ERRMSG1 = ""
QTY.VALUE = ""
FIELDNAME = ""
PRIOR.EST = ""
JFS.PROD = ""; JFS.M.QTY = ""; JFS.F.QTY = ""; JFS.S.QTY = ""
ORDNO = ""; WEBSERVICE = "";ECD.RET.VALUE = ""; ECD.VALDAT.ITEM = ""
MAT DIV.REC ="";MAT JFS.REC ="" ; ERRFLAG = 1
*ERRSTR = "<PayLoad><Rejects>"
ERRSTR = "<Rejects>"
DIM SAVE.JOB(JOB.REC.SIZE)
DIM EST.PAR(10)
******INPUTS v
*DEBUG
*INPUTSTR = "001":AM:"N":AM:"":AM:"1001":AM:"01":AM:"001":AM:"MLB":AM:"R":AM:"N":AM:"":AM:"01":AM:"05":AM:"":AM:"1500.00":AM:"1500.00":AM:"10.00":AM:"01":AM:"20000":AM:"05/25/09":AM:"":AM:"1000.00":AM:"CBA":AM:"COMMENT LINE1":AM:"TEST JOB LINE 1":AM:"Y"
CONO = INPUTSTR<1>
JOBNO = INPUTSTR<2>
JOB.ESTIMATE = INPUTSTR<3>
JOB.CUSTOMER = INPUTSTR<4>
JOB.DIVISION = INPUTSTR<5>
JOB.SALESMAN = INPUTSTR<6>
JOB.CSRCODE = INPUTSTR<7>
JOB.TYP = INPUTSTR<8>
JOB.MASTER = INPUTSTR<9>
JOB.SALESCODE = INPUTSTR<10>
JOB.CTGRY = INPUTSTR<11>
JOB.SHIPVIA = INPUTSTR<12>
JOB.CUSTPO = INPUTSTR<13>
JOB.ESTCOST = INPUTSTR<14>
JOB.QUOTEDAMT = INPUTSTR<15>
JOB.MRKUP = INPUTSTR<16>
JOB.CLRS = INPUTSTR<17>
JOB.ORDERED = INPUTSTR<18>
*JOB.FINISHED ;*JOB.SHIPPED 
JOB.DUEDATE = INPUTSTR<19>
JOB.PRIORJOB = INPUTSTR<20>
JOB.PRICEADDLM = INPUTSTR<21>
AUTH.CODE = INPUTSTR<22>
JOB.COMNT1 = INPUTSTR<23>
*JOB.COMNT1 = FIELD(INPUTSTR<23>,VM,1)
*JOB.COMNT2 = FIELD(INPUTSTR<23>,VM,2)
JOB.DESCRIPTION = INPUTSTR<24>
EXTRACT.TO.PSS = INPUTSTR<25>
******INPUTS ^
******Converting to ICONV format v
*MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
*SWAP "." WITH "" IN JOB.QUOTEDAMT
*SWAP "." WITH "" IN JOB.ORDERED
**SWAP "." WITH "" IN JOB.FINISHED
**SWAP "." WITH "" IN JOB.SHIPPED
*SWAP "." WITH "" IN JOB.ESTCOST
*SWAP "." WITH "" IN JOB.MRKUP
*SWAP "." WITH "" IN JOB.PRICEADDLM
*IF JOB.QUOTEDAMT + 0 = 0 THEN JOB.QUOTEDAMT = 0 
*IF JOB.ORDERED + 0 = 0 THEN JOB.ORDERED = 0
*IF JOB.ESTCOST + 0 = 0 THEN JOB.ESTCOST = 0
*IF JOB.MRKUP + 0 = 0 THEN JOB.MRKUP = 0
*IF JOB.PRICEADDLM + 0 = 0 THEN JOB.PRICEADDLM = 0
JOB.DUEDATE = ICONV(JOB.DUEDATE,"D2/")
******Converting to ICONV format ^
*    USER.ID = "WEBSERVICE"
*   PORT.NO = 'TTY'
*   CALL SYSVARS.SUB(PORT.NO)
*   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = USER.ID
*   OPER.ID = OCONV(PORT.NO,'MCN'):"!":OPER.ID
    OPER.ID = "WebService!WebService"
   TODAY = DATE()
*
*Compnay Code
*
   IF CONO = "" THEN
      FIELDNAME = "COMPANYCODE"
      GOSUB 6000
   END ELSE
        MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
   END
*
*Job Number
*
110*
   IF JOBNO = "N" THEN
      NEWJOB = 1 
      MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
      GOSUB 710
      IF ERR.FLG THEN GOTO 100
   END ELSE
      IF LEN(JOBNO) GT 8 THEN
	 ERRFLAG = 0
	 ERRSTR := '<Reject>'
	 ERRSTR := '<RejectCode>JSCRJ002</RejectCode>' 
	 ERRSTR := '<RejectDescription>JOB# SHOULD NOT EXCEED 8 CHARACTERS</RejectDescription>'
	 ERRSTR := '</Reject>'
*	 ERRSTR := '</Rejects>'
    GOTO 710
      END
      MATREADU JOB.REC FROM JOB, CONO:JOBNO THEN
         *ERRSTR<-1> = 'JOB NUMBER':JOBNO:' ALREADY EXISTS!'
	 ERRFLAG = 0
	 ERRSTR := '<Reject>'
	 ERRSTR := '<RejectCode>JSCRJ001</RejectCode>' 
	 ERRSTR := '<RejectDescription>JOB NUMBER ':JOBNO:' ALREADY EXISTS!</RejectDescription>'
	 ERRSTR := '</Reject>'
*	 ERRSTR := '</Rejects>'
    GOTO 710
      END
   GOTO 710
100*
RETURN
*
* New Job Creation
*
710*
   FLG = "N"; ERR.FLG = 0
   MAT JOB.REC = ""
   JOB.TRACK.DATE<1,2> = TODAY
     IF JOB.STATUS<1,1> = "" THEN
         STATUS = "BOOKED"
     END
   NEW.EST = 1
*
*Estimate
*
1100*
   BEGIN CASE
      CASE (JOB.ESTIMATE # "" AND CO.JES = "Y") OR (JOB.ESTIMATE = '' AND PRIOR.EST # '' AND CO.JES = 'Y')
         IF JOB.ESTIMATE # '' THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:JOB.ESTIMATE ELSE
               *ERRSTR<-1> = "Invalid Estimate ID. Try again! "
		 ERRFLAG = 0
		 ERRSTR := '<Reject>'
		 ERRSTR := '<RejectCode>JSCRJ003</RejectCode>' 
		 ERRSTR := '<RejectDescription>INVALID ESTIMATE ID. TRY AGAIN!</RejectDescription>'
		 ERRSTR := '</Reject>'
            END
*T20699 v
            IF JOB.DIV # "" THEN
               CHK.EST.DIV = FIELD(EST.DIV,"-",1)
               IF JOB.DIV # CHK.EST.DIV THEN
                  *ERRSTR<-1>="Est Div of ":CHK.EST.DIV:" does not match Job Div. Enter <RETURN>"
		 ERRFLAG = 0
		 ERRSTR := '<Reject>'
		 ERRSTR := '<RejectCode>JSCRJ004</RejectCode>' 
		 ERRSTR := '<RejectDescription>EST DIV OF ':CHK.EST.DIV:' DOES NOT MATCH JOB DIV.</RejectDescription>'
		 ERRSTR := '</Reject>'
               END
            END
*T20699 ^         
            IF EST.JOB # "" THEN
               IF JOB.MASTER # "" AND EST.JOB # JOB.MASTER THEN
                  *ERRSTR<-1> = "Estimate belongs to another Master Job"
		 ERRFLAG = 0
		 ERRSTR := '<Reject>'
		 ERRSTR := '<RejectCode>JSCRJ005</RejectCode>' 
		 ERRSTR := '<RejectDescription>ESTIMATE BELONGS TO ANOTHER MASTER JOB!</RejectDescription>'
		 ERRSTR := '</Reject>'
               END
            END
            IF EST.STATUS<1,1> = "LOST" THEN
               *ERRSTR<-1> = "Estimate was defined as lost on ":OCONV(EST.STAT.DATE<1,1>,"D2/"):". Try again! "
		 ERRFLAG = 0
		 ERRSTR := '<Reject>'
		 ERRSTR := '<RejectCode>JSCRJ006</RejectCode>' 
		 ERRSTR := '<RejectDescription>ESTIMATE WAS DEFINED AS LOST ON ':OCONV(EST.STAT.DATE<1,1>,'D2/'):'. TRY AGAIN!</RejectDescription>'
		 ERRSTR := '</Reject>'
            END
***** T24035 v
         END ELSE
            JOB.EST.COST = ''; JOB.CONF.AMT = ''
            JOB.EST.SALE = ''; JOB.PRICE.PER.THOU = ''
***** T24035 ^
         END
*         ESTAT = 0      ;*T22154 <
*         BEGIN CASE
*            CASE NEW.EST
*               CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*               IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100;* T21079
*               NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0
*               CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST # '' AND JOB.ESTIMATE = ''
*               JOB.EST = ''
*               CALL JOB.BOOK.SUB(CONO,"4",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST = JOB.ESTIMATE
*               CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*            CASE PRIOR.EST # JOB.ESTIMATE
*               CALL JOB.BOOK.SUB(CONO,"6",JOBNO,PRIOR.EST,JOB.ESTIMATE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*         END CASE
         JOB.EST = JOB.ESTIMATE
         PRIOR.EST = JOB.ESTIMATE
      CASE JOB.ESTIMATE # "" AND CO.JES # "Y"
         JOB.EST = JOB.ESTIMATE
         PRIOR.EST = JOB.ESTIMATE
   END CASE
1199 
*
*Customer
*
1200*
  IF JOB.CUSTOMER # "" THEN
  MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUSTOMER ELSE
       *ERRSTR<-1> = "CUSTOMER ":JOB.CUSTOMER:" IS MISSING"
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ007</RejectCode>' 
	ERRSTR := '<RejectDescription>CUSTOMER ':JOB.CUSTOMER:' IS MISSING</RejectDescription>'
	ERRSTR := '</Reject>'
  END
  IF JOB.CUSTOMER # "END" THEN
    IF CUST.TYPE = "F" THEN
       *ERRSTR<-1> = "Customer Type is Frozen - Cannot Enter Job"
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ008</RejectCode>' 
	ERRSTR := '<RejectDescription>CUSTOMER TYPE IS FROZEN - CANNOT ENTER JOB!</RejectDescription>'
	ERRSTR := '</Reject>'
       GOTO 1299
    END
    IF CUST.CREDIT = "DEL" THEN
       *ERRSTR<-1> = 'This customer has credit code "DEL", cannot enter a Job for this customer.'
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ009</RejectCode>' 
	ERRSTR := '<RejectDescription>THIS CUSTOMER HAS CREDIT CODE "DEL", CANNOT ENTER A JOB FOR THIS CUSTOMER.</RejectDescription>'
	ERRSTR := '</Reject>'
       GOTO 1299
    END
  END
   IF JOB.MASTER # JOBNO AND JOB.MASTER # "" THEN
      MAT SAVE.JOB = MAT JOB.REC
      MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER ELSE
         *ERRSTR<-1> = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER
	ERRFLAG = 0	
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ009</RejectCode>' 
	ERRSTR := '<RejectDescription>THIS CUSTOMER HAS CREDIT CODE "DEL", CANNOT ENTER A JOB FOR THIS CUSTOMER.</RejectDescription>'
	ERRSTR := '</Reject>'
      END
      MASTER.CUST = JOB.CUST
      MAT JOB.REC = MAT SAVE.JOB
      IF JOB.CUSTOMER # MASTER.CUST THEN
         *ERRSTR<-1> = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CUST
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ010</RejectCode>' 
	ERRSTR := '<RejectDescription>MASTER JOB HAVE A DIFFERENT CUSTOMER - ':MASTER.CUST:'</RejectDescription>'
	ERRSTR := '</Reject>'
      END
   END
   IF CUST.CREDIT = "N" THEN
      *ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
	 ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ011</RejectCode>' 
	ERRSTR := '<RejectDescription>THERE IS NO CREDIT FOR THIS CUSTOMER</RejectDescription>'
	ERRSTR := '</Reject>'
   END
   JOB.CUST = JOB.CUSTOMER
1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
 END ELSE
     FIELDNAME = "CUSTOMERNO"
     GOSUB 6000
 END
1299 
*
*Division
*
1300 *
      IF JOB.DIVISION # "" THEN
         MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIVISION ELSE
            *ERRSTR<-1> = "INVALID DIVISION"
	    ERRFLAG = 0
	    ERRSTR := '<Reject>'
	    ERRSTR := '<RejectCode>JSCRJ012</RejectCode>' 
	    ERRSTR := '<RejectDescription>INVALID DIVISION -':JOB.DIVISION:' </RejectDescription>'
	    ERRSTR := '</Reject>'
         END
         JOB.DIV = JOB.DIVISION
      END ELSE
         FIELDNAME = "DIVISION"
         GOSUB 6000
      END
*
* Sales man
*
1400 *
   IF JOB.SALESMAN # "" THEN
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SALESMAN ELSE
         *ERRSTR<-1> = "Cannot locate salesman # ":JOB.SALESMAN
	    ERRFLAG = 0
	    ERRSTR := '<Reject>'
	    ERRSTR := '<RejectCode>JSCRJ013</RejectCode>' 
	    ERRSTR := '<RejectDescription>CANNOT LOCATE SALESMAN # ':JOB.SALESMAN:'</RejectDescription>'
	    ERRSTR := '</Reject>'
      END
      JOB.SLSMN = JOB.SALESMAN
   END ELSE
      FIELDNAME = "SALESREPCODE"
      GOSUB 6000
   END
*
* CSR Code
*
1450 * 
   IF JOB.CSRCODE # "" THEN
   MATREAD CSR.REC FROM CSR.CODE, CONO:JOB.CSRCODE ELSE
      *ERRSTR<-1> = "Cannot locate Service Rep # ":JOB.CSRCODE
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ014</RejectCode>' 
	ERRSTR := '<RejectDescription>CANNOT LOCATE SERVICE REP #  ':JOB.CSRCODE:'</RejectDescription>'
	ERRSTR := '</Reject>'
   END
   JOB.CSR = JOB.CSRCODE
   END ELSE
      FIELDNAME = "CSRCODE"
      GOSUB 6000
   END
*
1500 
   IF JOB.TYP # "" THEN
      IF JOB.TYP # "C" AND JOB.TYP # "N" AND JOB.TYP # "R" AND JOB.TYP # "S" THEN
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ023</RejectCode>' 
	ERRSTR := '<RejectDescription>JOBTYPE ':JOB.TYP:' IS INVALID!VALID JOB TYPES ARE C,N,R,S.</RejectDescription>'
	ERRSTR := '</Reject>'
      END ELSE
         JOB.TYPE = JOB.TYP
      END
   END ELSE
      FIELDNAME = "JOBTYPE"
      GOSUB 6000
   END
*
1600 
   IF JOB.SUBS # "" THEN
      JOB.MASTER = JOBNO
   END
   IF JOB.MASTER = "" THEN JOB.MASTER = JOBNO
   BEGIN CASE
      CASE JOB.MASTER = JOBNO
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            EJ.CNT = DCOUNT(EST.BOOK.JOB,VM)
            OTHER.JOBS = 0
            FOR J = 1 TO EJ.CNT UNTIL OTHER.JOBS
               IF JOBNO # EST.BOOK.JOB<1,J> THEN OTHER.JOBS = 1
            NEXT J
            IF OTHER.JOBS THEN
               IF JOB.MASTER # EST.JOB AND EST.JOB # "" THEN
                  *ERRSTR<-1> = "Estimate belongs to Master Job ":EST.JOB:"."
		ERRFLAG = 0
		ERRSTR := '<Reject>'
		ERRSTR := '<RejectCode>JSCRJ015</RejectCode>' 
		ERRSTR := '<RejectDescription>ESTIMATE BELONGS TO MASTER JOB ':EST.JOB:'</RejectDescription>'
		ERRSTR := '</Reject>'
               END
            END
         END
         JOB.MASTER = JOBNO
         GOTO 1699
      CASE 1
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            IF JOB.MASTER # EST.JOB AND EST.JOB # "" THEN
               IF EST.JOB # JOBNO THEN
                  *ERRSTR<-1> = "Estimate has a different Master Job number."
		ERRFLAG = 0
		ERRSTR := '<Reject>'
		ERRSTR := '<RejectCode>JSCRJ005</RejectCode>' 
		ERRSTR := '<RejectDescription>ESTIMATE BELONGS TO ANOTHER MASTER JOB!</RejectDescription>'
		ERRSTR := '</Reject>'
               END
            END
         END
         MAT SAVE.JOB = MAT JOB.REC
         FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
         MASTER.CUST = JOB.CUST
         MASTER.JOB = JOB.MASTER
         MAT JOB.REC = MAT SAVE.JOB
         IF JOB.CUST # MASTER.CUST THEN
            *ERRSTR<-1> = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.CUST
		ERRFLAG = 0
		ERRSTR := '<Reject>'
		ERRSTR := '<RejectCode>JSCRJ010</RejectCode>' 
		ERRSTR := '<RejectDescription>MASTER JOB HAVE A DIFFERENT CUSTOMER - ':MASTER.CUST:'</RejectDescription>'
		ERRSTR := '</Reject>'
	 END
   END CASE
1699 
*
*Sales Code
*
1700 
*   IF LEN(JOB.SALESCODE) < 1 OR LEN(JOB.SALESCODE) > 5 THEN GOTO 1700
   IF LEN(JOB.SALESCODE) = 1 THEN
      IF SALS.COMM.PCT + 0 = 0 THEN JOB.SALESCODE = JOB.SALESCODE:"H" ELSE JOB.SALESCODE = JOB.SALESCODE:"C"
   END
   IF LEN(JOB.SALESCODE) = 2 THEN JOB.SALESCODE = JOB.SALESCODE:CUST.TYPE
   IF JOB.SALESCODE # "" THEN
   MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALESCODE ELSE    ;* T26973
      *ERRSTR<-1> = "SALES CODE ":JOB.SALESCODE:" IS NOT ON FILE"
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ016</RejectCode>' 
	ERRSTR := '<RejectDescription>SALES CODE ':JOB.SALESCODE:' IS NOT ON FILE</RejectDescription>'
	ERRSTR := '</Reject>'
   END
   JOB.SALES.CODE = JOB.SALESCODE
END
1799* 
*
*Category Code
*
1800*
   IF JOB.CTGRY # "" THEN
      REC = ""
      READ REC FROM JOB.CATEGORY, CONO:JOB.CTGRY ELSE
         *ERRSTR<-1> = "JOB CATEGORY CODE ":JOB.CTGRY:" IS NOT ON FILE"
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ017</RejectCode>' 
	ERRSTR := '<RejectDescription>JOB CATEGORY CODE ':JOB.CTGRY:' IS NOT ON FILE</RejectDescription>'
	ERRSTR := '</Reject>'
      END
      JOB.CATG = JOB.CTGRY
   END ELSE
      FIELDNAME = "JOBCATEGORY"
      GOSUB 6000
   END
*
*ShipVia Code
*
1900* 
   IF JOB.SHIPVIA # "" THEN
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIPVIA ELSE
         *ERRSTR<-1> = "Cannot locate ship via # ":JOB.SHIPVIA
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ018</RejectCode>' 
	ERRSTR := '<RejectDescription>CANNOT LOCATE SHIP VIA # ':JOB.SHIPVIA:'</RejectDescription>'
	ERRSTR := '</Reject>'
      END
      JOB.SHIP.VIA = JOB.SHIPVIA
   END
*
*Customer PO #
*
2000* 
   IF JOB.CUSTPO # "END" THEN JOB.CUST.PO = JOB.CUSTPO
*
*Estimate Cost
*
2100*
*   IF JOB.EST = "" OR CO.JES = "N" THEN
*      IF JOB.ESTCOST # "END" THEN JOB.EST.COST = JOB.ESTCOST
*   END
   IF JOB.ESTCOST # "" THEN
      QTY.VALUE = JOB.ESTCOST
      TOT.VAL = 10; MAX.INT = 7; MAX.DEC = 2
      FIELDNAME = "ESTIMATECOST"
      GOSUB 5000
      IF ERRMSG = "" THEN
         JOB.ESTCOST = QTY.VALUE
         IF JOB.EST = "" OR CO.JES = "N" THEN
            IF JOB.ESTCOST # "END" THEN JOB.EST.COST = JOB.ESTCOST
         END
      END
   END
*
*Quoted Amount
*
2200* 
*   IF JOB.QUOTEDAMT # "END" THEN
*      JOB.CONF.AMT = JOB.QUOTEDAMT
*      JOB.EST.SALE = JOB.QUOTEDAMT
*      *IF FLG = 'O' THEN GOSUB 3100
*   END
   IF JOB.QUOTEDAMT # "" THEN
      QTY.VALUE = JOB.QUOTEDAMT
      TOT.VAL = 10; MAX.INT = 7; MAX.DEC = 2
       FIELDNAME = "QUOTEDAMOUNT"
      GOSUB 5000
      IF ERRMSG = "" THEN
         JOB.QUOTEDAMT = QTY.VALUE
         JOB.CONF.AMT = JOB.QUOTEDAMT
         JOB.EST.SALE = JOB.QUOTEDAMT
         *IF FLG = 'O' THEN GOSUB 3100
      END
   END
*
*Markup Percent
*
2300* 
*   JOB.MARKUP = JOB.MRKUP
   IF JOB.MRKUP # "" THEN
      QTY.VALUE = JOB.MRKUP
      TOT.VAL = 6; MAX.INT = 3; MAX.DEC = 2
        FIELDNAME = "MARKUPPERCENT"
      GOSUB 5000
      IF ERRMSG = "" THEN
         JOB.MRKUP = QTY.VALUE
         JOB.MARKUP = JOB.MRKUP
      END
   END
*
*Color
*
2400* 
*   JOB.COLORS = JOB.CLRS
   IF JOB.CLRS # "" THEN
      JOB.COLORS = JOB.CLRS
   END ELSE
     FIELDNAME = "COLORS"
     GOSUB 6000
   END
*
* Ordered Qty
*
2500* 
*   IF JFS.PROD = "" THEN
*      JOB.QTY<1,1> = JOB.ORDERED
*   END ELSE
*      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
*   END
   IF JOB.ORDERED # "" THEN
     IF JFS.PROD = "" THEN
       QTY.VALUE = JOB.ORDERED
       IF NUM(JOB.ORDERED) = 0 THEN
          ERRFLAG = 0
          ERRSTR := '<Reject>'
          ERRSTR := '<RejectCode>JSCRJ024</RejectCode>' 
          ERRSTR := '<RejectDescription>NUMERIC INPUT REQUIRED FOR ORDERQUANTITY!</RejectDescription>'
          ERRSTR := '</Reject>'
       END
       TOT.VAL = 8; MAX.INT = 8; MAX.DEC = 0
       FIELDNAME = "ORDERQUANTITY"
       GOSUB 5000
       IF ERRMSG = "" THEN
          JOB.ORDERED = QTY.VALUE
          JOB.QTY<1,1> = JOB.ORDERED
       END
     END ELSE
      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
     END
   END
*
* Finished Qty
*
*2600* 
*   IF JFS.PROD = "" THEN
*      JOB.QTY<1,2> = JOB.FINISHED
*   END ELSE
*      JOB.QTY<1,2> = SUM(JFS.F.QTY) / 1000
*   END
**
** Shipped Qty
**
*2700* 
*   IF JFS.PROD = "" THEN
*      JOB.QTY<1,3> = JOB.SHIPPED
*   END ELSE
*      JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
*   END
**
* Due Date
*
2800* 
   ECD.MINV = JOB.TRACK.DATE<1,2>
   ECD.MAXV = ECD.MINV + 700
   IF JOB.DUEDATE # "" THEN
      JOB.TRACK.DATE<1,4> = JOB.DUEDATE
   END ELSE
      FIELDNAME = "DUEDATE"
      GOSUB 6000
   END
*
* Prior Job
*
2900* 
*   JOB.PRIOR.JOB = JOB.PRIORJOB
   IF JOB.PRIORJOB # "" THEN
      JOB.PRIOR.JOB = JOB.PRIORJOB
   END
*
* Price Per Thousand
*
3000* 
*   JOB.PRICE.PER.THOU = JOB.PRICEADDLM
   IF JOB.PRICEADDLM # "" THEN
      QTY.VALUE = JOB.PRICEADDLM
      TOT.VAL = 8; MAX.INT = 5; MAX.DEC = 2
         FIELDNAME = "PRICEPERADDM"
      GOSUB 5000
      IF ERRMSG = "" THEN
         JOB.PRICEADDLM = QTY.VALUE
         JOB.PRICE.PER.THOU = JOB.PRICEADDLM
      END
   END
*
*Authorization code
*
   IF AUTH.CODE # "" THEN
      READ TREC FROM CREDIT.AUTH.CODE, CONO:AUTH.CODE THEN
         JOB.CREDIT = AUTH.CODE:"!":OPER.ID
      END ELSE
         *ERRSTR<-1> = 'Invalid credit authorization code'
	 ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ019</RejectCode>' 
	ERRSTR := '<RejectDescription>INVALID CREDIT AUTHORIZATION CODE!</RejectDescription>'
	ERRSTR := '</Reject>'
      END
   END ELSE
      FIELDNAME = "CREDITAUTHORIZATION"
      GOSUB 6000
   END
3149 
3200* 
*   JOB.COMMENTS = JOB.COMNT1
   JOB.COMMENTS<1,1> = JOB.COMNT1[1,63]
   IF LEN(JOB.COMNT1) > 63 THEN
      JOB.COMMENTS<1,2> = JOB.COMNT1[64,LEN(JOB.COMNT1)]
   END
4000*
   LOOP
	IF JOB.DESC = "" THEN
	   JOB.DESC<1,1> = JOB.DESCRIPTION[1,70]
	   REM.DESCRIPTION = JOB.DESCRIPTION[71,LEN(JOB.DESCRIPTION)]
	END ELSE
	   JOB.DESC<1,-1> = REM.DESCRIPTION[1,70]
   	   REM.DESCRIPTION = REM.DESCRIPTION[71,LEN(REM.DESCRIPTION)]
	END
	IF REM.DESCRIPTION = "" OR LEN(REM.DESCRIPTION) = 0 THEN GOTO 4001
   REPEAT
4001*
*
*Check the PSS flag
*
   IF EXTRACT.TO.PSS = "" THEN
      FIELDNAME = "ExtractToPSS"
      GOSUB 6000
   END ELSE
      IF EXTRACT.TO.PSS # "Y" AND EXTRACT.TO.PSS # "N" THEN
	ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ025</RejectCode>' 
   ERRSTR := '<RejectDescription>PLEASE ENTER Y OR N FOR ExtractToPSS </RejectDescription>'
	ERRSTR := '</Reject>'
      END
   END
*
*  Write Job Data
*
 IF ERRFLAG = 1 THEN
   IF JOBNO = "" OR JOBNO = "N" THEN
      GOSUB GET.JOB.NO
   END
   IF JOB.MASTER = "" OR JOB.MASTER = "N" THEN
      JOB.MASTER = JOBNO
   END
   MATWRITE JOB.REC ON JOB,CONO:JOBNO
*T290609 v - BY NARESH
*
***CALL THE SISQUEUE SUBROUTINE
*
NAR = ""
NAR<1> = "BEFORE JKT_NOTIFY_SUB";WRITE NAR ON CONTROL ,"30NAR"
         CALL JCS_JOBSERVICE_JKT_NOTIFY_SUB ("1",CONO,"JOB",JOBNO,"",JOB.REC.SIZE,MAT JOB.REC,JOB,JSTATUS)
NAR<-1> = "AFTER JKT_NOTIFY_SUB";WRITE NAR ON CONTROL ,"30NAR"
         MATWRITE JOB.REC ON JOB , CONO : JOBNO
         READ SISQUEUE FROM CONTROL, CONO:"SISQUEUE" THEN
NAR<-1> = " AFTER READ";WRITE NAR ON CONTROL ,"30NAR"
            CALL JCS_JOBSERVICE_SISQUEUE (CONO, JOBNO, "JOB", SIS_CONTROL, SIS_OUTPUT, SISERRMSG)
NAR<-1> = "AFTER CALL ";WRITE NAR ON CONTROL ,"30NAR"
         END ELSE
NAR<-1> = "IN ELSE "; WRITE NAR ON CONTROL ,"30NAR"
            CALL JCS_JOBSERVICE_HNP.UPDATE(CONO, CONO:JOBNO, "JOB", JOB, "")
NAR<-1> = "AFTER ELSE" ;WRITE NAR ON CONTROL ,"30NAR"
         END
*T290609 ^
*
*Extract the JOB to Scheduling
*
 IF CO.PSS = "Y" THEN
    OPEN '','JOB.SCHED' TO JOB.SCHED THEN
       IF JOB.EST = "" THEN
	     IF EXTRACT.TO.PSS = "Y" THEN
		MAT JBS.REC = ""
		JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
		JBS.CUST.NAME = CUST.NAME
		JBS.DIV = JOB.DIV
		JBS.SCH.FLAG = "P"
		JBS.CUST.ID = JOB.CUST
		JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
		IF CO.PSS.BACKWARD.FLAG = "Y" THEN
		   JBS.SCHED.MODE = "D"
		   JBS.SCHED.DATE = JBS.DUE.DATE
		END ELSE
		   JBS.SCHED.MODE = "S"
		   JOBS.SCHED.DATE = DATE() + 1
		END
		MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
*T26551
		CALL GET.JBS.USER.FIELDS1(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
		MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
	     END
       END ELSE
	  MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN
	     IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN
		JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
	     END
	     IF JBS.CUST.NAME # CUST.NAME THEN
		JBS.CUST.NAME = CUST.NAME
	     END
	     IF JBS.DIV # JOB.DIV THEN
		JBS.DIV = JOB.DIV
	     END
	     IF JBS.CUST.ID # JOB.CUST THEN
		JBS.CUST.ID = JOB.CUST
	     END
	     IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN
		JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
	     END
	     IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"
	     CALL GET.JBS.USER.FIELDS1(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
	     MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
	  END
       END
    END
 END
*   XMLSTR = "JOB# ":JOBNO:" IS CREATED SUCCESSFULLY"
*   XMLSTR = "<Payload><Job><CompanyNo>":CONO:"</CompanyNo><JobNo>":JOBNO:"</JobNo></Job></Payload>"
     XMLSTR = "<Job><CompanyNo>":CONO:"</CompanyNo><JobNo>":JOBNO:"</JobNo><EstimateNo>":JOB.EST:"</EstimateNo><CustomerNo>":JOB.CUST:"</CustomerNo><Division>":JOB.DIV:"</Division><SalesRepCode>":JOB.SLSMN:"</SalesRepCode><CsrCode>":JOB.CSR:"</CsrCode><JobType>":JOB.TYPE:"</JobType><MasterJobNo>":JOB.MASTER:"</MasterJobNo><SalesCode>":JOB.SALES.CODE:"</SalesCode><JobCategory>":JOB.CATG:"</JobCategory><ShipViaCode>":JOB.SHIP.VIA:"</ShipViaCode><CustomerPoNo>":JOB.CUST.PO:"</CustomerPoNo><EstimateCost>":OCONV(JOB.EST.COST,'MD2'):"</EstimateCost><QuotedAmount>":OCONV(JOB.EST.SALE,'MD2'):"</QuotedAmount><MarkupPercent>":OCONV(JOB.MARKUP,'MD2'):"</MarkupPercent><Colors>":JOB.COLORS:"</Colors><OrderQuantity>":JOB.QTY<1,1>:"</OrderQuantity><DueDate>":OCONV(JOB.TRACK.DATE<1,4>,'D2/'):"</DueDate><PriorJobNo>":JOB.PRIOR.JOB:"</PriorJobNo><PricePerAddM>":OCONV(JOB.PRICE.PER.THOU,'MD2'):"</PricePerAddM><JobComments>":JOB.COMMENTS:"</JobComments><JobDescription>":JOB.DESC:"</JobDescription><CurrentStatus>":STATUS:"</CurrentStatus><CurrentStatusDate>":OCONV(JOB.STAT.DATE,'D2/'):"</CurrentStatusDate><QuotedDate>":OCONV(JOB.TRACK.DATE<1,2>,'D2/'):"</QuotedDate><ExtractToPSS>":EXTRACT.TO.PSS:"</ExtractToPSS></Job>"
    ERRSTR = ""
 END ELSE
*    ERRSTR := "</Rejects></PayLoad>"
     ERRSTR := "</Rejects>"
 END
**
**Extract the JOB to Scheduling
**
* IF CO.PSS = "Y" THEN
*    OPEN '','JOB.SCHED' TO JOB.SCHED THEN
*       IF JOB.EST = "" THEN
*	     IF EXTRACT.TO.PSS = "Y" THEN
*		MAT JBS.REC = ""
*		JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
*		JBS.CUST.NAME = CUST.NAME
*		JBS.DIV = JOB.DIV
*		JBS.SCH.FLAG = "P"
*		JBS.CUST.ID = JOB.CUST
*		JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
*		IF CO.PSS.BACKWARD.FLAG = "Y" THEN
*		   JBS.SCHED.MODE = "D"
*		   JBS.SCHED.DATE = JBS.DUE.DATE
*		END ELSE
*		   JBS.SCHED.MODE = "S"
*		   JOBS.SCHED.DATE = DATE() + 1
*		END
*		MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
**T26551
*		CALL GET.JBS.USER.FIELDS1(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
*		MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
*	     END
*       END ELSE
*	  MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN
*	     IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN
*		JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
*	     END
*	     IF JBS.CUST.NAME # CUST.NAME THEN
*		JBS.CUST.NAME = CUST.NAME
*	     END
*	     IF JBS.DIV # JOB.DIV THEN
*		JBS.DIV = JOB.DIV
*	     END
*	     IF JBS.CUST.ID # JOB.CUST THEN
*		JBS.CUST.ID = JOB.CUST
*	     END
*	     IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN
*		JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
*	     END
*	     IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"
*	     CALL GET.JBS.USER.FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XXX,YYY,ZZZ)
*	     MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
*	  END
*       END
*    END
* END
*T26421 ^
* IF CO.JES = "Y" THEN
*    ESTAT = 0     ;*T22154
*    CALL JOB.BOOK.SUB (CONO,"3",JOBNO,OLD.EST,JOB.EST,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
* END
RETURN  
********************************
*
*Job Status
*
*
* Quoted Amount
*
3100*
   QUOTED.AMT = 0
   IF ORDNO # "" OR JFS.PROD # "" THEN
      GOTO 3149
   END
   LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
      IF JOB.TOT.INV > 0 THEN
         QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
      END ELSE
         QUOTED.AMT = JOB.CONF.AMT
      END
      IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
   END
  * IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN
  *    GOSUB 1250
  * END
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         *ERRSTR<-1> = "THERE IS NO CREDIT FOR THIS CUSTOMER"
	 ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ011</RejectCode>' 
	ERRSTR := '<RejectDescription>THERE IS NO CREDIT FOR THIS CUSTOMER</RejectDescription>'
	ERRSTR := '</Reject>'
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - CUR.ORD.BAL - QUOTED.AMT
         IF AVAIL < 0 THEN
            ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG1 = ERRMSG1:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
            ERRMSG1 = ERRMSG1:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")
	    *ERRSTR<-1> = ERRMSG1
           * REJECTCODE<1,-1> = 'JSCRJ025'
           * RejectDescription<1,-1> = ERRMSG1
         END ELSE
            GOTO 3149
         END
      CASE 1
         ERRMSG1 = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG1 = ERRMSG1:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
         ERRMSG1 = ERRMSG1:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
	 *ERRSTR<-1> = ERRMSG1
         *REJECTCODE<1,-1> = 'JSCRJ026'
         *RejectDescription<1,-1> = ERRMSG1
   END CASE
RETURN
*
30100 ERRMSG = ""
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRSTR<-1> = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
	 ERRFLAG = 0
	ERRSTR := '<Reject>'
	ERRSTR := '<RejectCode>JSCRJ007</RejectCode>' 
	ERRSTR := '<RejectDescription>CUSTOMER ':JOB.CUSTOMER:' IS MISSING!</RejectDescription>'
	ERRSTR := '</Reject>'
   END
   CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
RETURN
*
* GET NEW JOBNO
*
GET.JOB.NO: 
  JOBNO="N"
  READU JOBNO FROM CONTROL, CONO:"JOBNO" ELSE
    JOBNO = 10000
  END
  LOOP
    FND = 1
    JOBNO = JOBNO + 1
    IF JOBNO > 99999 THEN JOBNO = 1
      READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0
    WHILE FND DO
      RELEASE JOB, CONO : JOBNO
  REPEAT
  WRITE JOBNO ON CONTROL, CONO:"JOBNO"
*  ERRMSG = "Please Note Assigned Job Number : ":JOBNO
*  XMLSTR = ERRMSG
  JOBID=JOBNO
RETURN
*
*QTY VALIDATION
*
5000*
ERRMSG = ""
IF NUM(QTY.VALUE) = 0 THEN
   ERRFLAG = 0
   ERRSTR := '<Reject>'
   ERRSTR := '<RejectCode>JSCRJ021</RejectCode>' 
   ERRSTR := '<RejectDescription>DECIMAL INPUT REQUIRED FOR ':FIELDNAME:'!</RejectDescription>'
   ERRSTR := '</Reject>'
END
IF LEN(QTY.VALUE) GT TOT.VAL THEN
   ERRMSG = "QTY CANNOT BE MORE THAN ':TOT.VAL:' DIGITS!" 
   ERRFLAG = 0
   ERRSTR := '<Reject>'
   ERRSTR := '<RejectCode>JSCRJ020</RejectCode>' 
   ERRSTR := '<RejectDescription>':FIELDNAME:' CANNOT BE MORE THAN ':TOT.VAL:' DIGITS!</RejectDescription>'
   ERRSTR := '</Reject>'
   GOTO 5001
END
IF INDEX(QTY.VALUE,".",1) = 0 THEN
   IF LEN(QTY.VALUE) GT MAX.INT THEN
      ERRMSG = "DECIMAL INPUT REQUIRED!"
      ERRFLAG = 0
      ERRSTR := '<Reject>'
      ERRSTR := '<RejectCode>JSCRJ021</RejectCode>' 
      ERRSTR := '<RejectDescription>DECIMAL INPUT REQUIRED FOR ':FIELDNAME:'!</RejectDescription>'
      ERRSTR := '</Reject>'
   END ELSE
      IF FIELDNAME # "ORDERQUANTITY" THEN
         QTY.VALUE = QTY.VALUE * 100
      END
   END
END ELSE
   IF FIELDNAME = "ORDERQUANTITY" THEN
      ERRMSG = "NUMERIC INPUT REQUIRED FOR ":FIELDNAME:"!"
      ERRFLAG = 0
      ERRSTR := '<Reject>'
      ERRSTR := '<RejectCode>JSCRJ024</RejectCode>' 
      ERRSTR := '<RejectDescription>NUMERIC INPUT REQUIRED FOR ':FIELDNAME:'!</RejectDescription>'
      ERRSTR := '</Reject>'       
      GOTO 5001
   END
   IF LEN(FIELD(QTY.VALUE,".",1)) GT MAX.INT OR LEN(FIELD(QTY.VALUE,".",2)) GT MAX.DEC THEN 
      ERRMSG = "DECIMAL INPUT REQUIRED!"
      ERRFLAG = 0
      ERRSTR := '<Reject>'
      ERRSTR := '<RejectCode>JSCRJ021</RejectCode>' 
      ERRSTR := '<RejectDescription>DECIMAL INPUT REQUIRED FOR ':FIELDNAME:'!</RejectDescription>'
      ERRSTR := '</Reject>'
   END 
END
SWAP "." WITH "" IN QTY.VALUE
IF QTY.VALUE + 0 = 0 THEN QTY.VALUE = 0
5001*
RETURN
*
*REQUIRED FIELD VALIDATION
*
6000*
      ERRFLAG = 0
      ERRSTR := '<Reject>'
      ERRSTR := '<RejectCode>JSCRJ022</RejectCode>' 
      ERRSTR := '<RejectDescription>':FIELDNAME:' IS REQUIRED!</RejectDescription>'
      ERRSTR := '</Reject>'
RETURN
*
* WRITING ERROR TO WSE_LOG FILE
*
99999*
IF ERRSTR <> "" THEN
  ERRMSG = WEBSERVICE:"---> JCS_WRITEJOB---> " : ERRMSG
  CALL WRITELOG(ERRMSG)
END
RETURN
END
