SUBROUTINE OPOR_OPORSERVICE_GETOPORLIST(CONO,VALUE,STRXML,ERRMSG,SCHEMA.ONLY)
SCHEMA.ONLY = 0
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE CPYLIB CHAR
* OPEN FILES
*
OPEN "","COMPANY" TO COMPANY ELSE
           ERRMSG = "CANNOT OPEN COMPANY FILE"
           GOTO 99999
END
	OPEN "","OPERATION" TO OPERATION ELSE
		   ERRMSG = "CANNOT OPEN OPERATION FILE"
		   GOTO 99999
	END
	OPEN "","JOB" TO JOB ELSE
		   ERRMSG = "CANNOT OPEN JOB FILE"
		   GOTO 99999
	END
	OPEN "","COST.CNTR" TO COST.CNTR ELSE
		   ERRMSG = "CANNOT OPEN COST.CNTR FILE"
		   GOTO 99999
	END
	OPEN "","DIVISION" TO DIVISION ELSE
		   ERRMSG = "CANNOT OPEN DIVISION FILE"
		   GOTO 99999
	END
	OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
		   ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
		   GOTO 99999
	END
OPEN "","CATEGORY.OSP" TO CATEGORY.OSP ELSE
           ERRMSG = "CANNOT OPEN CATEGORY.OSP FILE"
           GOTO 99999
END
OPEN "","CONTROL" TO CONTROL ELSE
           ERRMSG = "CANNOT OPEN CONTROL FILE"
           GOTO 99999
END
*
* INITIALIZE  VARIABLES
*
ERRMSG=""
CONO_ID = ""
DATAFILE = "CATEGORY.OSP"
XMLTAG = ""
XMLLIST = ""
LML = ""
OPER_CODE = ""
OPER_DESC = ""
*
* MAIN PROCESSING
*
****REQUISITION LIST
MATREAD COMP.REC FROM COMPANY,CONO ELSE
SCHEMA.ONLY = 0
ERRMSG="Company number ":CONO : " does not exist"
GOTO 99999
END
IF DATAFILE = "CATEGORY.OSP" THEN
 JOBNO =   VALUE
 MATREAD JOB.REC FROM JOB, CONO:JOBNO ELSE
    MAT JOB.REC = ""
    ERRMSG="Job number ":JOBNO : " does not exist"
    GOTO 99999
 END
 MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE MAT DIV.REC = ""
 *STRXML = "<JobNo>" : JOBNO  : "</JobNo>"
 *STRXML := "<JobDesc>" : JOB.DESC<1,1> : "</JobDesc>"
  JobInfo = JOBNO:VM:JOB.DESC<1,1>[1,20]:VM:JOB.DIV:VM:DIV.DESC
  STRXML = "<JobInfo>": JobInfo :"</JobInfo>"
  STRXML := "<JobDueDate>" : OCONV(JOB.TRACK.DATE<1,4>,"D2/")  : "</JobDueDate>"
END
1700*
XMLLIST = ""
CNT = 0
  CMD= "SSELECT ":DATAFILE:" WITH @ID LIKE '":CONO:"...'"
UDTEXECUTE CMD CAPTURING JUNG
DATA=1
LOOP
  READNEXT ID ELSE
   DATA=0
    BEGIN CASE
     CASE DATAFILE = "CATEGORY.OSP"
       XMLTAG = "Category"
     CASE DATAFILE = "COST.CNTR"
        XMLTAG = "Cctr"
     CASE DATAFILE = "OPERATION"
       XMLTAG = "Operation"
     END CASE
  END
  WHILE DATA DO
    SCHEMA.ONLY = 0
    IF CNT < 0 THEN CNT = 0
    CNT = CNT + 1
     GOSUB 1800
111
REPEAT
UDTEXECUTE "CLEARSELECT"
 GOSUB 2100
BEGIN CASE
   CASE XMLTAG = "Category"
     STRXML := "<":XMLTAG:"Id>":CATG:"</":XMLTAG:"Id>"
     STRXML := "<":XMLTAG:"Desc>":CAOS_DESC:"</":XMLTAG:"Desc>"
   CASE XMLTAG = "Cctr"
     STRXML := "<":XMLTAG:"Id>":CCTR:"</":XMLTAG:"Id>"
     STRXML := "<":XMLTAG:"Desc>":CCTR_DESC:"</":XMLTAG:"Desc>"
     STRXML:='<':XMLTAG:'Dept>'  : CCTR_DEPT  : '</':XMLTAG:'Dept>'
     STRXML:='<':XMLTAG:'DeptDesc>'  : DEPT_DESC  : '</':XMLTAG:'DeptDesc>'
   CASE XMLTAG = "Operation"
     STRXML := "<":XMLTAG:"Id>":OPER_CODE:"</":XMLTAG:"Id>"
     STRXML := "<":XMLTAG:"Desc>":OPER_DESC:"</":XMLTAG:"Desc>"
END CASE
BEGIN CASE
CASE DATAFILE = "CATEGORY.OSP"
  *CATG = XMLLIST
  DATAFILE = "COST.CNTR"
  GOTO 1700
CASE DATAFILE = "COST.CNTR"
 *CCTR = XMLLIST
  DATAFILE = "OPERATION"
  GOTO 1700
 CASE DATAFILE = "OPERATION"
    *OPER = XMLLIST
     GOTO 99999
END CASE 
RETURN
*
1800
BEGIN CASE
 CASE DATAFILE = "CATEGORY.OSP"
         MATREAD CAOS.REC FROM CATEGORY.OSP,ID ELSE
	     CNT = CNT - 1
             GOTO 111
         END
         CATG<1,CNT> = ID[4,99]
	 XMLLIST<1,CNT> = ID[4,99]
	 CAOS_DESC<1,CNT> = CAOS.DESC
	 XMLTAG = "Category"
  XMLTAG = "Category"
  CASE DATAFILE = "COST.CNTR"
         MATREAD CCTR.REC FROM COST.CNTR,ID ELSE
	    CNT = CNT - 1
            GOTO 111
         END
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
            MAT DEPT.REC=""
	    CNT = CNT - 1
            GOTO 111
         END
	 MATREAD JOB.REC FROM JOB,CONO:VALUE ELSE CNT = CNT - 1;GOTO 111
	 OPO.DVDPCC = JOB.DIV
         FDDV = 0
         LOCATE OPO.DVDPCC IN DEPT.DIV<1>,1 SETTING FDDV ELSE FDDV = 0
         IF FDDV = 0 THEN
	   CNT = CNT - 1
           GOTO 111
         END
         CCTR<1,CNT> = ID[4,99]
	 XMLLIST<1,CNT> = ID[4,99]
	 CCTR_DESC<1,CNT> = CCTR.DESC
*
	 CCTR_DEPT<1,CNT> = CCTR.DEPT
	 DEPT_DESC<1,CNT> = DEPT.DESC
	 XMLTAG = "Cctr"
  CASE DATAFILE = "OPERATION"
   OPER.CODE=ID[4,99]
   MATREAD OPER.REC FROM OPERATION,ID ELSE
    CNT = CNT - 1
    GOTO 111
   END
    OPER<1,CNT> = ID[4,99]
   XMLTAG = "Operation"
END CASE
RETURN

2100*
OPER_CODE = ""
OPER_DESC = ""
FOR M = 1 TO DCOUNT(CCTR,VM)
  K = 1
  OPER.FLAG = 1
  TEMP.OPER_CODE= ""
  TEMP.OPER_DESC = ""
  FOR N = 1 TO DCOUNT(OPER,VM)
   MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR<1,M> THEN
      LOCATE OPER<1,N> IN CCTR.OPER<1>,1 SETTING OP.POS THEN
         MATREAD OPER.REC FROM OPERATION,CONO:OPER<1,N> ELSE MAT OPER.REC = ""
                *   found oper in cost cntr can proceed
         *OPO.OPER.CODE<1,1,LN1> = OPER.CODE
	 TEMP.OPER_CODE<1,K> = OPER<1,N> 
	 TEMP.OPER_DESC<1,K> = OPER.DESC
	 K = K + 1
	 OPER.FLAG = 0
      END
   END
   NEXT N
      IF OPER.FLAG THEN 
   	 OPER_CODE := "!"
	 OPER_DESC := "!"
      END ELSE
          OPER_CODE := TEMP.OPER_CODE :"!"
	  OPER_DESC := TEMP.OPER_DESC :"!"
      END
NEXT M
RETURN
*
* WRITE ERROR MESSAGE
*
99999*
IF ERRMSG <> "" THEN
        STRXML:='<ErrorStack>'  : ERRMSG : '</ErrorStack>'
      ERRMSG = "GetOPORList ----> OPOR_OPORSERVICE_GETOPORLIST --->": ERRMSG
      CALL WRITELOG(ERRMSG)
END
END
