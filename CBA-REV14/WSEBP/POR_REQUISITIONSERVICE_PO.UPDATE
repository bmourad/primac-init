SUBROUTINE POR_REQUISITIONSERVICE_PO.UPDATE(PO.CODE,CONO,MAT PROD.DEL)
$INCLUDE CPYLIB COMMON1
$INCLUDE POS.CPYLIB COM.PO
$INCLUDE POS.CPYLIB COM.PO.INTRF
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - PO.UPDATE
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 01/16/85
* DESCRIPTION -
* This program is used to update (INV.STATS) & (INV.JOB.STATS)
* & (PO) file.
* MOD         -
* CSF 23327 GAT 07.06.95 FIX PO DATE PROBLEM IN ICS REVIEW.
* TASK 20129 JR FIX JOB DELETE
*T22154 stefanie 08/18/1997 * Fix Rev10B - Rev11 match problems.
*T24231 edvard 08/17/1999 * New logic for requisitions. FI
*T24765 alex 01/28/2000 * Missing an 'END' to an IF Statement.
*T26768 lross 07/23/2002 * Do not update INV.STATS for zero on-order.
*T28531 lross 04/21/2005 * When a PO is Re-Filed it recreates INV.STAT
*                          data even if PO Product is completely
*                          received and/or cancelled.
*ENDDOC
*********************************************************************
**** INSERT FILES EQUETES
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE WAREHOUSE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB SYSCOM
*
*
START:
   VM = "y"
   SVM = "Å"
   MAT SYSCOM.REC = "" ; SYS.TYPE = 2
   MAT CATG.REC = "" ; MAT WHSE.REC = ""
   DIM PROD.DEL(5)
   EQU PD.PROD TO PROD.DEL(1)
   EQU PD.WHSE TO PROD.DEL(2)
   ERRMSG = ""
   MENU.FLAG = "R"
   UPDATE = "REQ"
**** DELETE
   PO.CNT = COUNT(PD.PROD,VM) + (PD.PROD # "")
   FOR P = 1 TO PO.CNT
      MATREADU INV.STAT.REC FROM INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
      MATREADU IWH.REC FROM INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
      LOCATE PO.CODE IN ISTAT.PO<1>,1 SETTING PFND ELSE GOTO 150
      J.CNT = COUNT(ISTAT.PO.JOB<1,PFND>,SVM) + (ISTAT.PO.JOB<1,PFND> # "")
      FOR J = 1 TO J.CNT
         JOB.NUM = ISTAT.PO.JOB<1,PFND,J>
         LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE GOTO 120
         MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
            RELEASE JOB, CONO:JOB.NUM
            ERRMSG = "JOB ":JOB.NUM:" IS ON INV.STATS FILE AND NOT ON JOB FILE"
            GOSUB 91000; GOTO 120
         END
         MATREADU INV.JS.REC FROM INV.JOB.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM ELSE
            RELEASE INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM
            GOTO 120
         END
         PTR = 1
         LOOP
            LOCATE PD.PROD<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
            IF MFND THEN
               IF PD.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
            END
         WHILE PTR AND MFND DO REPEAT
         IF MFND = 0 THEN
            ERRMSG = "PRODUCT ":PD.PROD<1,P>:", WHSE ":PD.WHSE<1,P>:" IS NOT ON JOB ":JOB.NUM
            GOSUB 91000 ; GOTO 120
         END
         LOCATE PO.CODE IN IJS.PO<1>,1 SETTING POF ELSE POF = 0
         IF POF THEN
            IJS.JOB.ALOC = IJS.JOB.ALOC - IJS.PO.JOB.QTY<1,POF,0>
            IWH.ALLOC = IWH.ALLOC - IJS.PO.JOB.QTY<1,POF,0>
* T22154 v
            IF IWH.ALLOC < 0 THEN IWH.ALLOC = 0
* T22154 ^
            IJS.PO = DELETE(IJS.PO,1,POF,0)
            IJS.PO.JOB.QTY = DELETE(IJS.PO.JOB.QTY,1,POF,0)
            IJS.PO.JOB.AMT = DELETE(IJS.PO.JOB.AMT,1,POF,0)
         END
         IF IJS.JOB.ALOC=0 AND IJS.JOB.QTY+0=0 AND IJS.JOB.USED+0=0 AND IJS.JMT.SEQ="" AND IJS.PO="" AND IJS.REQ.QTY+0=0 THEN
            PROD = PD.PROD<1,P> ; WHSE = PD.WHSE<1,P> ; GOSUB 6000
         END ELSE
            IF MFND THEN
               JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> - ISTAT.PO.JOB.QTY<1,PFND,J>
               JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> - ISTAT.PO.JOB.AMT<1,PFND,J>
            END
*24231 v
            IF UPDATE # "REQ" THEN
               MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM
            END
*24231 ^
         END
*24231 v
         IF UPDATE # "REQ" THEN
            MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
         END
*24231 ^
120*
      NEXT J
      IWH.ON.ORDER = IWH.ON.ORDER - ISTAT.PO.QTY<1,PFND>
      ISTAT.PO = DELETE(ISTAT.PO,1,PFND,0)
      ISTAT.PO.VEND = DELETE(ISTAT.PO.VEND,1,PFND,0)
      ISTAT.PO.DATE = DELETE(ISTAT.PO.DATE,1,PFND,0)
      ISTAT.PO.QTY = DELETE(ISTAT.PO.QTY,1,PFND,0)
      ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,0)
      ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,0)
      ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,0)
      IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
         DELETE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      END ELSE
*24231 v
         IF UPDATE # "REQ" THEN
            MATWRITE INV.STAT.REC ON INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
         END
*24231 ^
      END
*24231 v
      IF UPDATE # "REQ" THEN
         MATWRITE IWH.REC ON INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      END
*24231 ^
150*
      RELEASE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      RELEASE INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
   NEXT P
**** UPDATE ROUTINE
1000*
   PO.CNT = COUNT(PO.PROD.NUM,VM) + (PO.PROD.NUM # "")
   FOR P = 1 TO PO.CNT
      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,P> ELSE
         ERRMSG = "INVENTORY ":PO.PROD.NUM<1,P>:" IS NOT ON FILE"
         GOSUB 91000; GOTO 1999
      END
      IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
      IF INV.SBR + 0 = 0 THEN INV.SBR = 1
      MATREADU INV.STAT.REC FROM INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P> ELSE MAT INV.STAT.REC = ""
      MATREADU IWH.REC FROM INV.WHSE , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P> ELSE MAT IWH.REC = ""
      LOCATE PO.CODE IN ISTAT.PO<1>,1 SETTING PFND ELSE
         ISTAT.PO<1,PFND> = PO.CODE
         ISTAT.PO.VEND<1,PFND> = PO.VEND.NO
*CSF 23327 v
         IF PO.DEL.DATE<1,P> # "" THEN
            ISTAT.PO.DATE<1,PFND> = PO.DEL.DATE<1,P> 
         END ELSE
            ISTAT.PO.DATE<1,PFND> = PO.DUE.DATE
         END
*CSF 23327 ^
         ISTAT.PO.QTY<1,PFND> = 0
         ISTAT.PO.JOB<1,PFND> = ""
         ISTAT.PO.JOB.QTY<1,PFND> = ""
         ISTAT.PO.JOB.AMT<1,PFND> = ""
      END
      NEW.PRICE = INT(PO.GROS.PRICE<1,P>*(1 - (PO.DISCOUNT<1,P>/10000))/INV.SBR)
*CSF 16008 06/11/96
*        LOCATE PO.PROD.NUM<1,P> IN PO.PROD.NUM<1>,1 SETTING FND ELSE FND = P
      PWP = 1
      LOOP
         LOCATE PO.PROD.NUM<1,P> IN PO.PROD.NUM<1>,PWP SETTING FND THEN
            IF PO.WHSE<1,P> = PO.WHSE<1,FND> THEN
               PWP = 0
            END
         END ELSE
            PWP = 0; FND = P
         END
      WHILE PWP DO
         PWP = FND + 1
      REPEAT
*
      IF FND < P THEN ADDP = 1 ELSE ADDP = 0
      IF ADDP THEN
         IWH.ON.ORDER = IWH.ON.ORDER + PO.QTY.OPEN<1,P>
         ISTAT.PO.QTY<1,PFND> = ISTAT.PO.QTY<1,PFND> + PO.QTY.OPEN<1,P>
         SAVE.JOB = PO.JOB.NO<1,P>
         SAVE.QTY = PO.JB.OPEN<1,P>
      END ELSE
         IWH.ON.ORDER = IWH.ON.ORDER - ISTAT.PO.QTY<1,PFND>
         IWH.ON.ORDER = IWH.ON.ORDER + PO.QTY.OPEN<1,P>
* CSF 23327 v
         IF PO.DEL.DATE<1,P> # "" THEN
            ISTAT.PO.DATE<1,PFND> = PO.DEL.DATE<1,P> 
         END ELSE
            ISTAT.PO.DATE<1,PFND> = PO.DUE.DATE
         END
*CSF 23327 ^
         ISTAT.PO.QTY<1,PFND> = PO.QTY.OPEN<1,P>
         J.CNT = COUNT(ISTAT.PO.JOB<1,PFND>,SVM) + (ISTAT.PO.JOB<1,PFND> # "")
         SAVE.JOB = PO.JOB.NO<1,P>
         SAVE.QTY = PO.JB.OPEN<1,P>
* TASK 20129
*           FOR J = 1 TO J.CNT
         FOR J = J.CNT TO 1 STEP -1
* TASK 20129
            JOB.NUM = ISTAT.PO.JOB<1,PFND,J>
            MATREADU INV.JS.REC FROM INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM ELSE MAT INV.JS.REC = ""
            MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
               RELEASE JOB, CONO:JOB.NUM
               ERRMSG = "JOB ":JOB.NUM:" IS ON INV.STATS FILE AND NOT ON JOB FILE"
               GOSUB 91000; GOTO 1200
            END
            LOCATE PO.CODE IN IJS.PO<1>,1 SETTING PPFND ELSE
               IJS.PO<1,PPFND> = PO.CODE
               IJS.PO.JOB.QTY<1,PPFND> = ""
               IJS.PO.JOB.AMT<1,PPFND> = ""
            END
            IJS.JOB.ALOC = IJS.JOB.ALOC - IJS.PO.JOB.QTY<1,PPFND>
            IWH.ALLOC = IWH.ALLOC - IJS.PO.JOB.QTY<1,PPFND>
* T22154 v
            IF IWH.ALLOC < 0 THEN IWH.ALLOC = 0
* T22154 ^
            LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE JFND = 0
            LOCATE JOB.NUM IN SAVE.JOB<1,1>,1 SETTING DFND ELSE DFND = 0
            PTR = 1
            LOOP
               LOCATE PO.PROD.NUM<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
               IF MFND THEN
                  IF PO.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
               END
            WHILE PTR AND MFND DO REPEAT
            IF MFND THEN
               JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> - ISTAT.PO.JOB.QTY<1,PFND,J>
               JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> - ISTAT.PO.JOB.AMT<1,PFND,J>
            END
            IF DFND THEN
               NEW.QTY = SAVE.QTY<1,1,DFND>
               NEW.COST = INT((NEW.PRICE/10000)*((NEW.QTY/10)/(INV.COST.WT/100)) + .5)
               ISTAT.PO.JOB.QTY<1,PFND,J> = NEW.QTY
               IWH.ALLOC = IWH.ALLOC + NEW.QTY
               ISTAT.PO.JOB.AMT<1,PFND,J> = NEW.COST
               IJS.PO.JOB.QTY<1,PPFND> = NEW.QTY
               IJS.JOB.ALOC = IJS.JOB.ALOC + NEW.QTY
               IJS.PO.JOB.AMT<1,PPFND> = NEW.COST
               IF JFND = 0 THEN
                  JFND = COUNT(ISTAT.JOB,VM) + (ISTAT.JOB # "") + 1
                  ISTAT.JOB<1,JFND> = JOB.NUM
                  IJS.JOB.CUST = JOB.CUST
                  IJS.JOB.DATE = "ALLOCATE"
               END
               IF MFND THEN
                  JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> + NEW.QTY
                  JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> + NEW.COST
               END ELSE
                  MFND = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "") + 1
                  JOB.RESV.MATL<1,MFND> = PO.PROD.NUM<1,P>
                  JOB.RESV.WHSE<1,MFND> = PO.WHSE<1,P>
                  JOB.RESV.DATE<1,MFND> = "ALLOCATE"
                  JOB.ALOC.QTY<1,MFND> = NEW.QTY
                  JOB.ALOC.AMT<1,MFND> = NEW.COST
               END
               SAVE.JOB = DELETE(SAVE.JOB,1,1,DFND)
               SAVE.QTY = DELETE(SAVE.QTY,1,1,DFND)
*24231 v
               IF UPDATE # "REQ" THEN
                  MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
               END
*24231 ^
            END ELSE
               ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,J)
               ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,J)
               ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,J)
               IJS.PO = DELETE(IJS.PO,1,PPFND,0)
               IJS.PO.JOB.QTY = DELETE(IJS.PO.JOB.QTY,1,PPFND,0)
               IJS.PO.JOB.AMT = DELETE(IJS.PO.JOB.AMT,1,PPFND,0)
               IF IJS.JOB.ALOC+IJS.JOB.QTY+IJS.JOB.USED+IJS.REQ.QTY=0 AND IJS.JMT.SEQ="" AND IJS.PO="" THEN
                  PROD = PO.PROD.NUM<1,P> ; WHSE = PO.WHSE<1,P> ; GOSUB 6000
               END ELSE
*24231 v
                  IF UPDATE # "REQ" THEN
                     MATWRITE INV.JS.REC ON INV.JOB.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
                  END
*24231 ^
               END
            END
*24231 v
            IF UPDATE # "REQ" THEN
               MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
            END
*24231 ^
1200*
         NEXT J
      END
      GOSUB 5000
*CSF12074
      IWH.ON.ORDER = SUM(ISTAT.PO.QTY)
*
      IF ISTAT.PO.QTY<1,PFND> + 0 = 0 AND ISTAT.PO.JOB<1,PFND> = "" THEN
         ISTAT.PO = DELETE(ISTAT.PO,1,PFND,0)
         ISTAT.PO.VEND = DELETE(ISTAT.PO.VEND,1,PFND,0)
         ISTAT.PO.DATE = DELETE(ISTAT.PO.DATE,1,PFND,0)
         ISTAT.PO.QTY = DELETE(ISTAT.PO.QTY,1,PFND,0)
         ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,0)
         ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,0)
         ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,0)
      END
      IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
         DELETE INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
      END ELSE
*24231 v
         IF UPDATE # "REQ" THEN
            MATWRITE INV.STAT.REC ON INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
         END
*24231 ^
      END
*24231 v              
      IF UPDATE # "REQ" THEN
         MATWRITE IWH.REC ON INV.WHSE , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
      END
*24231 ^
1999*
   NEXT P
*T28531 v Cleanup INV.STATS & INV.JOB.STATS
   IF UPDATE # 'REQ' THEN
     SPO.PROD=''
     SPO.WHSE=''
     SPO.OPEN=''
     FOR P = 1 TO PO.CNT
       LOCATE PO.PROD.NUM<1,P> IN SPO.PROD<1>,1 SETTING FND THEN
         IF PO.WHSE<1,P> = SPO.WHSE<1,FND> THEN
           SPO.OPEN<1,FND> += PO.QTY.OPEN<1,P>
         END ELSE
           INS PO.PROD.NUM<1,P> BEFORE SPO.PROD<1,FND>
           INS PO.WHSE<1,P> BEFORE SPO.WHSE<1,FND>
           INS PO.QTY.OPEN<1,P> BEFORE SPO.OPEN<1,FND>
         END
       END ELSE
         INS PO.PROD.NUM<1,P> BEFORE SPO.PROD<1,FND>
         INS PO.WHSE<1,P> BEFORE SPO.WHSE<1,FND>
         INS PO.QTY.OPEN<1,P> BEFORE SPO.OPEN<1,FND>
       END
     NEXT P
     SPO.CNT = DCOUNT(SPO.PROD,VM)
     FOR P = 1 TO SPO.CNT
       IF SPO.OPEN<1,P> = 0 THEN
         ISTAT.ID=CONO:SPO.PROD<1,P>:"!":SPO.WHSE<1,P>
         MATREADU INV.STAT.REC FROM INV.STATS,ISTAT.ID THEN
           LOCATE PO.CODE IN ISTAT.PO<1> SETTING PFND THEN
             FOR J = DCOUNT(ISTAT.PO.JOB<1,PFND>,SVM) TO 1 STEP -1
               IJS.ID = ISTAT.ID:"!":ISTAT.PO.JOB<1,PFND,J>
               MATREADU INV.JS.REC FROM INV.JOB.STATS,IJS.ID THEN
                 LOCATE PO.CODE IN IJS.PO<1> SETTING PJFND THEN
                   DEL IJS.PO<1,PJFND>
                   DEL IJS.PO.JOB.QTY<1,PJFND>
                   DEL IJS.PO.JOB.AMT<1,PJFND>
                 END
                 MATWRITE INV.JS.REC ON INV.JOB.STATS,IJS.ID
               END ELSE RELEASE INV.JOB.STATS,IJS.ID
             NEXT J
             DEL ISTAT.PO<1,PFND>
             DEL ISTAT.PO.VEND<1,PFND>
             DEL ISTAT.PO.DATE<1,PFND>
             DEL ISTAT.PO.QTY<1,PFND>
             DEL ISTAT.PO.JOB<1,PFND>
             DEL ISTAT.PO.JOB.QTY<1,PFND>
             DEL ISTAT.PO.JOB.AMT<1,PFND>
             IF ISTAT.PO = '' AND ISTAT.JOB = '' THEN
               DELETE INV.STATS,ISTAT.ID
             END ELSE
               MATWRITE INV.STAT.REC ON INV.STATS,ISTAT.ID
             END
           END
         END
         RELEASE INV.STATS,ISTAT.ID
       END
     NEXT P
   END
*T28531 ^
*24231 v
   IF UPDATE = "REQ" THEN 
      PO.DUE.DATE = ICONV(PO.DUE.DATE,"D2/")
      PO.DEL.DATE = ICONVS(PO.DUE.DATE,"D2/")
      PO.DATE = ICONV(PO.DATE,"D2/")
      PO.ST.DATE = ICONV(PO.ST.DATE,"D2/")
      PO.DISCOUNT = ICONV(PO.DISCOUNT,"MD2")
      PO.TOT.ONORD = ICONV(PO.TOT.ONORD,"MD2")
      PO.TOT.CANCEL = ICONV(PO.TOT.CANCEL,"MD2")
      PO.QTY.OPEN = ICONV(PO.QTY.OPEN,"MD2")
      MATWRITE PO.REC ON REG.REQ,CONO:PO.CODE
   END ELSE
      MATWRITE PO.REC ON PO, CONO:PO.CODE
*24231 ^
   END        ;*T24765
   GOTO 99999
**** ADD ROUTINE
5000*
   J.CNT = COUNT(SAVE.JOB<1,1>,SVM) + (SAVE.JOB<1,1> # "")
   FOR J = 1 TO J.CNT
      IF SAVE.QTY<1,1,J>+0 = 0 THEN GOTO 5200 ; * T26768
      JOB.NUM = SAVE.JOB<1,1,J>
      MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
         RELEASE JOB, CONO:JOB.NUM
         ERRMSG = "JOB ":JOB.NUM:" IS NOT ON JOB FILE"; GOSUB 91000; GOTO 5200
      END
      MATREADU INV.JS.REC FROM INV.JOB.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM ELSE MAT INV.JS.REC = ""
      LOCATE JOB.NUM IN ISTAT.PO.JOB<1,PFND>,1 SETTING JJ ELSE
         ISTAT.PO.JOB<1,PFND,JJ> = JOB.NUM
         ISTAT.PO.JOB.QTY<1,PFND,JJ> = 0
         ISTAT.PO.JOB.AMT<1,PFND,JJ> = 0
      END
      LOCATE PO.CODE IN IJS.PO<1>,1 SETTING PPFND ELSE
         IJS.PO<1,PPFND> = PO.CODE
         IJS.PO.JOB.QTY<1,PPFND> = 0
         IJS.PO.JOB.AMT<1,PPFND> = 0
      END
      LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE
         ISTAT.JOB<1,JFND> = JOB.NUM
      END
      IJS.JOB.CUST = JOB.CUST
      IJS.JOB.DATE = DATE()
      PTR = 1
      LOOP
         LOCATE PO.PROD.NUM<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
         IF MFND THEN
            IF PO.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
         END
      WHILE PTR AND MFND DO REPEAT
      NEW.QTY = SAVE.QTY<1,1,J>
      NEW.COST = INT((NEW.PRICE/10000)*((NEW.QTY/10)/(INV.COST.WT/100)) + .5)
      ISTAT.PO.JOB.QTY<1,PFND,JJ> = ISTAT.PO.JOB.QTY<1,PFND,JJ> + NEW.QTY
      ISTAT.PO.JOB.AMT<1,PFND,JJ> = ISTAT.PO.JOB.AMT<1,PFND,JJ> + NEW.COST
      IJS.JOB.ALOC = IJS.JOB.ALOC + NEW.QTY
      IWH.ALLOC = IWH.ALLOC + NEW.QTY
      IJS.PO.JOB.QTY<1,PPFND> = IJS.PO.JOB.QTY<1,PPFND> + NEW.QTY
      IJS.PO.JOB.AMT<1,PPFND> = IJS.PO.JOB.AMT<1,PPFND> + NEW.COST
      IF MFND THEN
         JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> + NEW.QTY
         JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> + NEW.COST
      END ELSE
         MFND = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "") + 1
         JOB.RESV.MATL<1,MFND> = PO.PROD.NUM<1,P>
         JOB.RESV.WHSE<1,MFND> = PO.WHSE<1,P>
         JOB.RESV.DATE<1,MFND> = "ALLOCATE"
         JOB.ALOC.QTY<1,MFND> = NEW.QTY
         JOB.ALOC.AMT<1,MFND> = NEW.COST
      END
*24231 v              
      IF UPDATE # "REQ" THEN
         MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
         MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
      END
*24231 ^
5200*
   NEXT J
   RETURN
**** DELETE ROUTINE
6000*
   DELETE INV.JOB.STATS , CONO:PROD:"!":WHSE:"!":JOB.NUM
   IF JFND THEN
      ISTAT.JOB = DELETE(ISTAT.JOB,1,JFND,0)
   END
   IF MFND THEN
      JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,MFND,0)
      JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,MFND,0)
      JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,MFND,0)
      JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,MFND,0)
      JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,MFND,0)
      JOB.USED.QTY = DELETE(JOB.USED.QTY,1,MFND,0)
      JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,MFND,0)
      JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,MFND,0)
      JOB.USED.AMT = DELETE(JOB.USED.AMT,1,MFND,0)
   END
   RETURN
**** ERROR ROUTINE
91000*
   ERR.TYPE = 1 
   RETURN
99999 RETURN
93000 RETURN
END
