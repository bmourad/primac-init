      SUBROUTINE PRIDGET_CHECK_DIGIT (ACTION, CKNUM, MODULUS, CKDIG, VALID)
*********************************************************************
*
* PROGRAM - CHECK_DIGIT
*
* AUTHOR  - YAKUB, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 06/16/2009
*
* DESCRIPTION
*
* ACTION = "C" - Calculate Mod 10 check digit of BASENO and
*                return in CKDIG. If check digit calculation
*                is successful, VALID is returned as TRUE.
*
*          "T" - Test last digit of BASENO for valid check digit
*                If good VALID is returned as TRUE.
*
*********************************************************************
*
*---- INITIALIZATION
*
      CKDIG = "X"
      VALID = 0
      DIRECTION = MODULUS[3,2]
      MODULUS = MODULUS[1,2]
*
*---- MAIN PROCESSING
*
      BEGIN CASE
      CASE ACTION = "C"
         BASENO = CKNUM
         GOSUB 1000
         IF NUM(CKDIG) THEN VALID = 1
      CASE ACTION = "T"
         BASENO = CKNUM[1,LEN(CKNUM)-1]
         BASECD = CKNUM[LEN(CKNUM),1]
         GOSUB 1000
         IF CKDIG = BASECD THEN VALID = 1
      END CASE
      GOTO 99999
*
*---- DERIVE CHECK DIGIT
*
1000 *
      IF DIRECTION = "LR" THEN
         GOSUB 2000
      END ELSE
         GOSUB 3000
      END
      RETURN
*
*---- PROCESS LEFT TO RIGHT
*
2000 *
      DSUM = 0
      MLT = 2
      FOR BPTR = 1 TO LEN(BASENO)
         BDIGIT = BASENO[BPTR,1]
         IF NOT(NUM(BDIGIT)) THEN RETURN
         MDIG = MLT * BDIGIT
         DSUM = DSUM + MDIG[1,1] + MDIG[2,1]
         IF MLT = 1 THEN MLT = 2 ELSE MLT = 1
      NEXT BPTR
      CKDIG = MOD(DSUM,MODULUS)
      IF CKDIG > 0 THEN CKDIG = MODULUS - CKDIG
      RETURN
*
*---- PROCESS RIGHT TO LEFT
*
3000 *
      DSUM = 0
      MLT = 2
      FOR BPTR = LEN(BASENO) TO 1 STEP -1
         BDIGIT = BASENO[BPTR,1]
         IF NOT(NUM(BDIGIT)) THEN RETURN
         MDIG = MLT * BDIGIT
         DSUM = DSUM + MDIG[1,1] + MDIG[2,1]
         IF MLT = 1 THEN MLT = 2 ELSE MLT = 1
      NEXT BPTR
      CKDIG = MOD(DSUM,MODULUS)
      IF CKDIG > 0 THEN CKDIG = MODULUS - CKDIG
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      RETURN
      END
