SUBROUTINE RFT_WIP_TRACKING_LOCATEPALLET(CONO,EMPID,JOBID,FORMID,TO_JOB,STRXML,ERRMSG)
*
* PROGRAM  - WIPT.RF.TERM
*
* AUTHOR   - PRASHANT KUMAR
*
* DATE     - 03/05/2008
*
* DESCRIPTION
*
* This program is used to process transaction from the hand-held 
* R-F units used in the warehouse.
*
*T22322 ct6 01/07/1998 * Install WIP IN-PROCESS with changes for Bawden
*T23359 rik 01/14/1999 * REMOVE ISBN CODING.
*T26030 ajibaly 02/01/2002 * REMOVE PROMPT "CHANGE QTY?" WHEN ADJUSTING
*                            QTY
*T26725 lross 07/02/2002 * Do not allow qty change on ZERO qty
*                          locations.
*T27646 thompson 08/18/2003 * ALL FOR MULTI PLATFORM USE
*********************************************************************
*
*---- INCLUDES COPYLIBS
*
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE WTR.CPYLIB WIP.TRACK.JOB
$INCLUDE WTR.CPYLIB WIP.TRACK.FORM
$INCLUDE WTR.CPYLIB WIP.TRACK.PALLET
$INCLUDE WTR.CPYLIB WIP.TRACK.CONTROL
$INCLUDE WTR.CPYLIB WIP.FILE.VARS
$INCLUDE WTR.CPYLIB WIP.TRACK.TO.JOB
$INCLUDE WTR.CPYLIB WIPT.STORAGE.LOC
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE PMC.CPYLIB VEND
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- PRE-INITIALIZATION
*
   ERRMSG = ''
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 93000 
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG = "CANNOT OPEN JOB FILE"
      GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER FILE"
      GOTO 93000
   END
   OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
      ERRMSG = "CANNOT OPEN EMPLOYEE FILE"
      GOTO 93000
   END
   OPEN "","VEND" TO VEND ELSE
      ERRMSG = "CANNOT OPEN VEND FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.JOB" TO WIP.TRACK.JOB ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.JOB FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.CONTROL" TO WIP.TRACK.CONTROL ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.CONTROL FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.TO.JOB" TO WIP.TRACK.TO.JOB ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.TO.JOB FILE"
      GOTO 93000
   END
   OPEN "","WIPT.STORAGE.LOC" TO WIPT.STORAGE.LOC ELSE
      ERRMSG = "CANNOT OPEN WIPT.STORAGE.LOC FILE"
      GOTO 93000
   END
*
*---- INITIALIZATION
*
   STRXML = ""
   ERRMSG = ""
   CONO = ""
   MAT COMP.REC = ""
   CALL RFT_GET_CONO (CONO, MAT COMP.REC,ERRMSG)
   IF ERRMSG # "" THEN GOTO 99999
   IF CONO = "END" THEN GOTO 100
   READV WTR.CNTL FROM CONTROL, CONO:'WIP.TRACKING',1 ELSE WTR.CNTL = 'N'
   IF WTR.CNTL # 'Y' THEN GOTO 99999
   LOGNAME = 'LOGNAME'; CALL RFT_SYSVARS_SUB(LOGNAME); *T27646
   USER.ID = LOGNAME; *T27646
   EMPID = "XXXX"
   EMPNAME = ""
   MATREAD WIPTE.REC FROM WIP.TRACK.CONTROL, CONO:"EMP" THEN
      LOCATE USER.ID IN WIPTE.USER<1>,1 SETTING EPTR THEN 
         EMPID = WIPTE.EMP<1,EPTR>
         MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
            EMPNAME = EMP.FRST.NAME:" ":EMP.LAST.NAME
         END
      END
   END
STRXML :="<EmpName>":EMPNAME:"</EmpName>"
10 *
   MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" THEN
      POS = 1
      LOOP
         LOCATE USER.ID IN WIPTR.USER<1>,POS SETTING PTR ELSE PTR = 0
      WHILE PTR > 0 DO
         WIPTR.USER<1,PTR> = ""
         WIPTR.PALLET<1,PTR> = ""
         POS = PTR + 1
      REPEAT
      MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
   END LOCKED
        ERRMSG="Locked by ":GETUSERNAME(STATUS() )
        GOTO 99999
   END ELSE
      RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
   END
   PREV.DEFINE.JOB = ""
   PREV.DEFINE.FORM = ""
   PREV.DEFINE.SKID = ""
   PREV.DEFINE.TYPE = ""
   PREV.DEFINE.QTY = ""
   PREV.DEFINE.LOC = ""
   PREV.DEFINE.DESC = ""
*
*---- MAIN PROCESSING
*
*
*---- LOCATE PALLET
*
1040 *
1041 *
STRXML:="<LocatePallet>"
******************* ENTER JOBID *************** 
   VALUE = JOBID
   IF VALUE = "END" THEN GOTO 1049
   REQJOB = '' ;* T22322
   IF VALUE = "" THEN GOTO 1043  ;* T22322
   MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
      ERRMSG = "INVALID JOB NUMBER"
      GOTO 93000
   END
   REQJOB = VALUE
************* FORMID VALUE **************
1042 
   IF FORMID = "END" THEN GOTO 1049
   FORMNO = FORMID
   GOSUB 85100
   IF ERRMSG # "" THEN
      GOTO 93000
   END
   REQFORM = FORMNO
******* TO-JOB VALUES ***********
1043 * To-Job entry in Locate Pallet
   IF TO_JOB = "END" THEN GOTO 1049
   IF TO_JOB = '' THEN GOTO 1046
   REQTOJOB = ""
   MATREAD WIPTTJ.REC FROM WIP.TRACK.TO.JOB, CONO:TO_JOB ELSE
      ERRMSG = "INVALID TO-JOB NUM."
      GOTO 99999
   END
   REQTOJOB = TO_JOB
* CROSS REFERENCE TO GET JOB IDS USING TO-JOB
   IF REQJOB # "" THEN GOTO 1046
   JPTRCNT = DCOUNT(WIPTTJ.JOB<1>,VM)
STRXML :="<JPTRCNTVal>":JPTRCNT :"</JPTRCNTVal>"
   IF JPTRCNT = 0 THEN
      ERRMSG = "INVALID TO-JOB NUMBER"
      GOTO 99999
   END
   IF JPTRCNT = 1 THEN
      MATREAD JOB.REC FROM JOB, CONO:WIPTTJ.JOB<1,JPTRCNT> ELSE
         ERRMSG = "INVALID TO-JOB NUMBER"
         GOTO 99999
      END
      REQJOB = WIPTTJ.JOB<1,JPTRCNT>
**      PRINT @(9,4):REQJOB "L#8"
        STRXML :="<ReqJob>":REQJOB:"</ReqJob>"
STRXML:="</LocatePallet>"
**      GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
        GOTO 100
   END
* You will only pass here if there are multiple JOB#'s in TO-JOB Xref
   JPTR = 1
**   PRINT @(1,15):"ENTER = ACCEPT JOB"
   STRXML:="<PromptMessage>":"ENTER = ACCEPT JOB":"</PromptMessage>"
10431 * CROSS REF DISPLAY
**   PRINT @(9,7):@(-4):JPTR "R#3":" of ":JPTRCNT "R#3"
**   PRINT @(9,4):TEMPJOB "L#8":
FOR I = JPTR TO JPTRCNT STEP 1
        TEMPJOB = WIPTTJ.JOB<1,I>
        STRXML :="<TempJob>"
        STRXML :="<ReqJob>":TEMPJOB:"</ReqJob>"
        STRXML :="</TempJob>"
   NEXT I
   ******** CASE STATEMENTS ******
   MATREAD JOB.REC FROM JOB, CONO:TEMPJOB ELSE
        ERRMSG = "INVALID JOB NUMBER"
        GOTO 99999
   END
   REQJOB = TEMPJOB
**         PRINT @(9,4):REQJOB "L#8"
   *STRXML :="<ReqJob>":REQJOB:"</ReqJob>"
** GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
   ******** END CASE **********
 STRXML:="</LocatePallet>"
   GOTO 100
**
1046 *
   PALIDS = ""
   WIPTF.ID = REQJOB:"!":REQFORM
   MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE
      MAT WIPTF.REC = ""
   END
   PCNT = DCOUNT(WIPTF.PALLET,VM)
   STRXML:="<DisplayRecords>"
   FOR PPTR = PCNT TO 1 STEP -1
      PAL.ID = WIPTF.PALLET<1,PPTR>
      MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
      STRXML:="<Record>"
      STRXML:="<PalletID>":PAL.ID:"</PalletID>"
      STRXML:="<PalletLocation>":WIPTP.MLOC<1,1>:"</PalletLocation>"
      STRXML:="<CurrentQuantity>":OCONV(WIPTP.CQTY,"MD0,"):"</CurrentQuantity>"
         BEGIN CASE
            CASE WIPTP.CQTY = 0
*           CASE WIPTP.MLOC<1,1> = "VENDOR"
*           CASE WIPTP.MLOC<1,1> = "SHREDDER"
*           CASE WIPTP.STATUS<1,1> = "D"
            CASE 1
               PALIDS<1,-1> = PAL.ID
         END CASE
      END
      STRXML:="</Record>"
   NEXT PPTR
   STRXML:="</DisplayRecords>"
   IF PALIDS = "" THEN
      ERRMSG = "NO MATCHING PALLETS"
      GOTO 99999
   END
   PCNT = DCOUNT(PALIDS,VM)
   IF PCNT > 1 THEN
       1047 *  PROMPT FOR FIFO OR LIFO VIEWING OF PALLETS
   END
**   PRINT @(16,10):PCNT"L#3":
STRXML :="<PCNTValue>":PCNT :"</PCNTValue>"
*            PMSG = "(P)rior, (N)ext:"
 STRXML:="</LocatePallet>"
GOTO 100
1049 RETURN
*
*---- FORMAT FORM NUMBER
*
85100 *
   ERRMSG = ""
   FNUM = FIELD(FORMNO,".",1)
   VNUM = FIELD(FORMNO,".",2)
   SNUM = FIELD(FORMNO,".",3)
   BEGIN CASE
      CASE FNUM = ""
         ERRMSG = 1
      CASE FNUM = 0
         ERRMSG = 1
      CASE 1
         BEGIN CASE
            CASE VNUM = ""
               FORMNO = FNUM
            CASE VNUM = 0
               ERRMSG = 2
            CASE LEN(VNUM) > 3
               ERRMSG = 2
            CASE 1
               VNUM = (1000+VNUM)[2,3]
               FORMNO = FNUM:".":VNUM
         END CASE
   END CASE
   BEGIN CASE
      CASE ERRMSG = 1
         ERRMSG = "Invalid form #, Try again! "
      CASE ERRMSG = 2
         ERRMSG = "Invalid run #, Try again! "
      CASE ERRMSG = 3
         ERRMSG = "Invalid sig #, Try again! "
   END CASE
   RETURN
*
* END OF PROGRAM
*
93000 *
   GOTO 99999
100 *
   RELEASE
99999 *
   RETURN
END
