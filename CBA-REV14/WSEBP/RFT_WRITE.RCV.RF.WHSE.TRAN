SUBROUTINE RFT_WRITE.RCV.RF.WHSE.TRAN(CONO,SERIAL.IDS,WARE_HOUSE,TO_DIV,CORRECT,STRXML,ERRMSG)
*********************************************************************
*
* PROGRAM  - RCV.RF.WHSE.TRAN
*
* AUTHOR   - PRASHANT KUMAR
*
* DATE     - 10/03/2007
*
* DESCRIPTION
*
* This program is used to process interdivisional warehouse transfers
* from the hand-held R-F units used in the warehouse.
*
*T26132 cm 09/06/2001 * Change screen size from 16x21 to 15x20.
*T26497 adelgado 03/29/2002 * Modify to incorporate the new
*                             Inter-Divisional transfer.   
*T27705 lross 11/14/2003 * Expand Serial to 15 chars.
*********************************************************************
*
*---- COPY STATEMENTS
*
$INCLUDE RCV.CPYLIB RCV.FILE.VARS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB EMPLOYEE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE RCV.CPYLIB INTR_DIV_TRANSFER
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- OPEN ALL FILES
*
  OPEN "","INTR_DIV_TRANSFER" TO INTR_DIV_TRANSFER ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
   OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","INTR_SERIAL_XREF" TO INTR_SERIAL_XREF ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    ERRMSG = 'FILE MISSING'
    RETURN
  END
*
*---- INITIALIZATION
*
  MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ''
  IF CO.INTR.WHSE = '' THEN CO.INTR.WHSE = 'INTR'
 STRXML = ''
*
*
*---- MAIN PROCESSING
*
1030 *
    DIV = ''  
    WHSE = ""
    IF WARE_HOUSE = "" THEN RETURN
    IF WARE_HOUSE = CO.INTR.WHSE THEN
      ERRMSG = "NO TRANSIT WHSE"; RETURN
    END
    MATREAD WHSE.REC FROM WAREHOUSE, CONO:WARE_HOUSE ELSE
      ERRMSG = "INVALID WHSE"; RETURN
    END
    WHSE = WARE_HOUSE
1035 *
    DIV = WHS.DIV   
    IF TO_DIV = "" THEN RETURN
    IF TO_DIV = DIV THEN
      ERRMSG = "SAME DIVISION"; RETURN
    END
    MATREAD DIV.REC FROM DIVISION, CONO:TO_DIV  ELSE
      ERRMSG = 'INVALID DIVISION'; RETURN
    END
1050 *
    IF SERIAL.IDS = "" THEN 
       ERRMSG="SERIAL.IDS CANNOT BE BLANK" ; RETURN
    END
1070 *
    IF CORRECT = "Y" THEN
      MAT IDM.REC = ''
      IDM.TO.DIV = TO_DIV
      IDM.FROM.DIV = DIV
      IDM.FROM.WHSE = WHSE
      GOSUB GET.TRANS.ID
      RCNT = DCOUNT(SERIAL.IDS,VM)
      FOR RPTR = 1 TO RCNT
        GOSUB 5000
        IF ERRMSG # "" THEN
       ERRMSG = SERIAL.IDS<1,RPTR>:ERRMSG; RETURN
        END
      NEXT RPTR
      IDM.STATUS = 1
      MATWRITE IDM.REC ON INTR_DIV_TRANSFER, CONO:TRANS.ID
*   ERRMSG = 'TRANSIT #':TRANS.ID
STRXML = "<TransitId>":'TRANSIT #':TRANS.ID:"</TransitId>"
      RETURN
    END
RETURN
*
*---- PROCESS TRANSFER
*
5000 *
  ERRMSG = ""
  SERIAL.ID = SERIAL.IDS<1,RPTR>
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL.ID ELSE MAT ISTK.REC = ''
  MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE
    ERRMSG = "INVALID PRODUCT"         ;* "INV.REC does not exist"
    RETURN
  END
  MATREAD IWH.REC FROM INV.WHSE, CONO:ISTK.PROD:"!":ISTK.WHSE ELSE
    ERRMSG = "NO INV.WHSE"         ;* "From Whse does not exist"
    RETURN
  END
  MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
    ERRMSG = "NO INV.WHSE.LOC"         ;* "From Loc does not exist"
    RETURN
  END
  LOCATE SERIAL.ID IN IWLO.SERIAL<1>,1 SETTING RSPTR ELSE
    ERRMSG = "NO SER # IN LOC"         ;* "Roll/skid not in location"
    RETURN
  END
  IF ISTK.RSVB.QTY LE 1 THEN
    ERRMSG = "NO QTY"         ;* "Roll/skid weight = zero"
    RETURN
  END
  * BUILD IDM.REC AND INTR.RS.XREF
  LOCATE ISTK.PROD IN IDM.PROD.NO<1>,1 SETTING POS THEN
    LOCATE SERIAL.ID IN IDM.SERIAL<1,POS>,1 SETTING QOS ELSE
      IDM.SERIAL<1,POS,QOS> = SERIAL.ID
      IDM.FROM.LOC<1,POS,QOS> = ISTK.LOC
      IDM.SERIAL.MILL<1,POS,QOS> = ISTK.MILL.ID
      WRITE TRANS.ID ON INTR_SERIAL_XREF, CONO:SERIAL.ID
    END
  END ELSE
    IDM.PROD.NO<1,POS> = ISTK.PROD
    IDM.SERIAL<1,POS> = SERIAL.ID
    IDM.FROM.LOC<1,POS> = ISTK.LOC
    IDM.SERIAL.MILL<1,POS> = ISTK.MILL.ID
    WRITE TRANS.ID ON INTR_SERIAL_XREF, CONO:SERIAL.ID
  END
  RETURN
*
GET.TRANS.ID: 
*
  FND = 1
  READU TRANS.SEQ FROM CONTROL, CONO:"INTR.DIV.SEQ" ELSE TRANS.SEQ = "1"
  LOOP
  WHILE FND DO
    TRANS.CODE = STR("0",6-LEN(TRANS.SEQ)):TRANS.SEQ
    TRANS.SEQ = TRANS.CODE + 1
    IF TRANS.SEQ > 999999 THEN TRANS.SEQ = 1
    TRANS.ID = TRANS.CODE:"T"
    READ REC FROM INTR_DIV_TRANSFER, CONO:TRANS.ID ELSE FND = 0
  REPEAT
  WRITE TRANS.SEQ ON CONTROL, CONO:"INTR.DIV.SEQ"
  *
  RETURN
