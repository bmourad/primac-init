SUBROUTINE POR_REQUISITIONSERVICE_SAVEPOREQUISITIONDATA_BK(CONO,MAINTABDATA,ITEMALLOCDATA,JOBALLOCDATA,ERRMSG,STRXML)
*T060209 - Code changed by magafoor on 06/02/2009
*****************************************************************************************************************
$INCLUDE CPYLIB COMMON1
$INCLUDE POS.CPYLIB COM.PO
$INCLUDE POS.CPYLIB COM.PO.INTRF
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE VEND
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE PMC.CPYLIB SHIP.VIA
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE WSEBP TEMP.PO
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
*
DEFFUN UOM_CONVERSION_CALC(QTY,FROM.UOM,TO.UOM,WGT,WIDTH,ROND,LN)
OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
*CONO = "001"
*MAINTABDATA = "2458":AM:"01":AM:"06/25/09":AM:"00001":AM:"030":AM:"1":AM:"5":AM:"01":AM:"":AM:"":AM:"":AM:"":AM:"New York":AM:"":AM:"N":AM:"2"
*ITEMALLOCDATA = "ROLL":VM:"01":VM:"01/01/85":VM:"100.0000":VM:"":VM:"LBS":VM:"100.00":VM:"0.00":VM:"100.00":VM:"2":VM:""
*JOBALLOCDATA = "10110":SVM:"01":SVM:"100":SVM:"LBS":SVM:"100.00":SVM:"0.00":SVM:"1"
*DEBUG
STRXML="<Payload>"
STRXML:="<Requisition>"
YAK = ""
YAK<1> = "IM IN POR_REQUISITIONSERVICE_SAVEPOREQUISITIONDATA ";WRITE YAK ON CONTROL,'01WPOR'
DIM PROD.DEL(5)
MAT PROD.DEL = ""
EQU PD.PROD TO PROD.DEL(1)
EQU PD.WHSE TO PROD.DEL(2)
MAT COMP.REC = ''
MAT PO.REC = ''
MAT TEMP.PO.REC = ''
REQ = 0
BCFLAG = 0
MENU.FLAG = "R"
*T060209 v
TEMP.ITEMALLOCDATA = ""  
UPDATE.POR = 0 
TEMP.JOBALLOCDATA = ""
*T060209 ^
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = "COMPANY (":CONO:") DOES NOT EXIST"
  GOTO 93000
END
IF CO.APS.R.INTRF > 2 THEN
      OPEN '','VEND.STATS' TO VEND.STATS ELSE
         ERRMSG = "VEND.STATS FILE IS MISSING"; GOTO 93000
      END
      OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
         ERRMSG = "VEND.PO.STATS FILE IS MISSING"; GOTO 93000
      END
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = "VEND.PROD.STATS FILE IS MISSING"; GOTO 93000
      END
END
*IF CO.PO.REQ.FLAG = "Y" THEN
   OPEN '','REG.REQ' TO REG.REQ ELSE ERRMSG = 'REG.REQ FILE IS MISSING'; GOTO 93000
   OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
   OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
   USER.ID = UPCASE(@LOGNAME)
*END
PO.CODE = MAINTABDATA<1>
  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
     REQ = 1 ; * this is still requisition 
     UPDATE.POR = 1
  END 
MAT TEMP.PO.REC = MAT PO.REC
POR.MODE = MAINTABDATA<16>
PO.WRIT.BY = USER.ID
PO.APPROVER = USER.ID
IF REQ = 0 AND POR.MODE = 1 THEN
  PO.STATUS<1,-1> = 'Entered'
  PO.PREV.APP<1,-1> = USER.ID
  PO.ST.DATE<1,-1> = DATE()
END
PO.STATUS<1,-1> = 'Released'
PO.LEVEL.STATUS = "R"
PO.PREV.APP<1,-1> = USER.ID
PO.ST.DATE<1,-1> = DATE()
PO.DIV.OWNER = MAINTABDATA<2>
PO.DATE = ICONV(MAINTABDATA<3>,"D2/")
PO.VEND.NO = MAINTABDATA<4>
PO.TERMS.DESC = MAINTABDATA<5>
PO.TERMS.DIS = ICONV(MAINTABDATA<6>,"MD2")
PO.TERMS.DATE = MAINTABDATA<7>
PO.SHIP.WHSE = MAINTABDATA<8>
MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.SHIP.WHSE ELSE MAT WHSE.REC = ""
PO.SHIP.NAME = WHS.DESC
PO.SHIP.ADD1 = WHS.ADDR1
PO.SHIP.ADD2 = WHS.ADDR2
PO.SHIP.ADD3 = WHS.CITY:',':WHS.STATE
PO.SHIP.ADD4 = WHS.ZIP
**
PO.VDR.ORD = MAINTABDATA<9>
PO.REQUESTOR = MAINTABDATA<10>
PO.CONTACT = MAINTABDATA<11>
PO.SHIP.VIA = MAINTABDATA<12>
MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:PO.SHIP.VIA ELSE MAT SHIP.VIA.REC = ""
PO.VIA.DESC = SHPV.DESC
PO.FOB = MAINTABDATA<13>
PO.INTRAL.INT = MAINTABDATA<14>
PO.PRT.FLG<1,1> = MAINTABDATA<15>
*POR.MODE = MAINTABDATA<16>
*PO.PRT.FLG<1,2> = MAINTABDATA<17>
*PO.WRIT.BY = MAINTABDATA<18>
YAK<-1> = "MAINTABDATA  ":MAINTABDATA;WRITE YAK ON CONTROL,'01WPOR'
YAK<-1> = "MAINTABDATA  ":ITEMALLOCDATA;WRITE YAK ON CONTROL,'01WPOR'
YAK<-1> = "JOBALLOCDATA  ":JOBALLOCDATA;WRITE YAK ON CONTROL,'01WPOR'
IF PO.CODE = "N" AND POR.MODE = 1 THEN
  READ PO.SEQNO FROM CONTROL, CONO:"POCODE" ELSE PO.SEQNO = 10000
END ELSE
  PO.SEQNO = PO.CODE 
END
STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
STRXML:="<RequisitionNo>":PO.SEQNO:"</RequisitionNo>"
STRXML:="<Status>":'Entered':"</Status>"
IF PO.APPROVER # TEMP.PO.APPROVER THEN
   STRXML:="<Approver>":PO.APPROVER:"</Approver>"
END
STRXML:="<StatusDate>":OCONV(DATE(),'D2/'):"</StatusDate>"
IF PO.DIV.OWNER # TEMP.PO.DIV.OWNER THEN
   STRXML:="<Division>":PO.DIV.OWNER:"</Division>"
END
IF PO.DATE # TEMP.PO.DATE THEN
  STRXML:="<PoDate>":OCONV(PO.DATE,'D2/'):"</PoDate>"
END
IF PO.VEND.NO # TEMP.PO.VEND.NO THEN
  STRXML:="<VendorNo>":PO.VEND.NO:"</VendorNo>"
END
IF PO.SHIP.WHSE # TEMP.PO.SHIP.WHSE THEN
  STRXML:="<ShipToNo>":PO.SHIP.WHSE:"</ShipToNo>"
  STRXML:="<ShipToName>":PO.SHIP.NAME:"</ShipToName>"
  STRXML:="<ShipToAddress1>":PO.SHIP.ADD1:"</ShipToAddress1>"
  STRXML:="<ShipToAddress2>":PO.SHIP.ADD2:"</ShipToAddress2>"
*T060209 v
  *STRXML:="<ShipToCityState>":PO.SHIP.ADD3:"</ShipToCityState>"
  STRXML:="<ShipToCity>":FIELD(PO.SHIP.ADD3,",",1):"</ShipToCity>"
  STRXML:="<ShipToState>":FIELD(PO.SHIP.ADD3,",",2):"</ShipToState>"
  STRXML:="<ShipToZip>":PO.SHIP.ADD4:"</ShipToZip>"
*T060209 ^
END
*T060209 v
IF PO.TERMS.DATE # TEMP.PO.TERMS.DATE THEN
     STRXML:="<TermsDate>":MAINTABDATA<5>:"</TermsDate>"
END
IF PO.TERMS.DIS # TEMP.PO.TERMS.DIS THEN
     STRXML:="<TermsPercentage>":MAINTABDATA<6>:"</TermsPercentage>"
END
IF PO.TERMS.DESC # TEMP.PO.TERMS.DESC THEN
     STRXML:="<TermsDescription>":MAINTABDATA<7>:"</TermsDescription>"
END
*T060209 ^
IF PO.VDR.ORD # TEMP.PO.VDR.ORD THEN
  STRXML:="<VendorOrderNo>":PO.VDR.ORD:"</VendorOrderNo>"
END
IF PO.REQUESTOR # TEMP.PO.REQUESTOR THEN
 STRXML:="<Requestor>":PO.REQUESTOR:"</Requestor>"
END
IF PO.CONTACT # TEMP.PO.CONTACT THEN
  STRXML:="<ContactName>":PO.CONTACT:"</ContactName>"
END
IF PO.SHIP.VIA # TEMP.PO.SHIP.VIA THEN
  STRXML:="<ShipViaCode>":PO.SHIP.VIA:"</ShipViaCode>"
  STRXML:="<ShipViaName>":PO.VIA.DESC:"</ShipViaName>"
END
IF PO.FOB # TEMP.PO.FOB THEN
  STRXML:="<FreeOnBoard>":PO.FOB:"</FreeOnBoard>"
END
IF PO.INTRAL.INT # TEMP.PO.INTRAL.INT THEN
   STRXML:="<Comments>":PO.INTRAL.INT:"</Comments>"
END
IF PO.PRT.FLG<1,1> # TEMP.PO.PRT.FLG<1,1> THEN
   STRXML:="<PrintFlag>":PO.PRT.FLG<1,1>:"</PrintFlag>"
END
IF PO.WRIT.BY # TEMP.PO.WRIT.BY THEN
STRXML:="<WrittenBy>":PO.WRIT.BY:"</WrittenBy>"
END
STRXML:="<Products>"
*****************
FOR LN = 1 TO DCOUNT(ITEMALLOCDATA,AM)
STRXML:="<Product>"
INPUT_UOM = ITEMALLOCDATA<LN,6>
PO.PROD.NUM<1,LN> = ITEMALLOCDATA<LN,1>
	**** ENTER PRODUCT
	MATREAD INV.REC FROM INVENTORY, CONO:ITEMALLOCDATA<LN,1> ELSE
	  ERRMSG = "INVENTORY (":ITEMALLOCDATA<LN,1>:") IS NOT ON FILE."
	  GOTO 93000
	END
	IF INV.M.LINE = 'FNGD' THEN
	  IF CO.OPS = 'Y' THEN
	    ERRMSG = "FINISHED GOODS PRODUCTS ARE INVALID FOR REGULAR PO'S"
	    GOTO 93000
	  END
	END
	*
	MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
	  ERRMSG = "CATEGORY (":INV.LINE:") IS NOT ON FILE."
	  GOTO 93000
	END
        IF CATG.TRK.LVL='S' AND CATG.BARCODE='Y' THEN
           BCFLAG=1
        END
	 IF INV.PAP.TYPE = "REGULAR" OR INV.PAP.TYPE = "REG" OR INV.PAP.TYPE = "" THEN
	    PO.PROD.TYPE<1,LN> = "REG"
	  END ELSE
	    PO.PROD.TYPE<1,LN> = INV.PAP.TYPE
	  END
	  PO.JB.UNITS<1,LN> = INV.UNIT<1,2>
	  IF INV.UNIT<1,2> = INV.UNIT<1,1> THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    GOTO 1070
	  END
	  IF PO.PROD.TYPE<1,LN> = "REG" THEN
	    PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	  END ELSE
	    IF INPUT_UOM # "" THEN
	       PO.UNIT.FLG<1,LN> = INPUT_UOM
	    END ELSE
	       PO.UNIT.FLG<1,LN> = INV.UNIT<1,1>
	    END
	  END
	1070
******
*T060209 v
 TEMP.ITEMALLOCDATA<LN,2>=ITEMALLOCDATA<LN,2>
 TEMP.ITEMALLOCDATA<LN,3>=ICONV(ITEMALLOCDATA<LN,3>,"D2/")
 TEMP.ITEMALLOCDATA<LN,4>=CHANGE(ITEMALLOCDATA<LN,4>,".","")
 TEMP.ITEMALLOCDATA<LN,5>=CHANGE(ITEMALLOCDATA<LN,5>,".","")
 TEMP.ITEMALLOCDATA<LN,7>=CHANGE(ITEMALLOCDATA<LN,7>,".","")
 TEMP.ITEMALLOCDATA<LN,8>=CHANGE(ITEMALLOCDATA<LN,8>,".","")
 TEMP.ITEMALLOCDATA<LN,9>=CHANGE(ITEMALLOCDATA<LN,9>,".","")
*  STRXML:="<Warehouse>":PO.WHSE<1,LN>:"</Warehouse>"
*  STRXML:="<DeliverDate>":ITEMALLOCDATA<LN,3>:"</DeliverDate>"
*  STRXML:="<UnitPrice>":ITEMALLOCDATA<LN,4>:"</UnitPrice>"
*  STRXML:="<Discount>":ITEMALLOCDATA<LN,5>:"</Discount>"
*  STRXML:="<UnitFlag>":PO.UNIT.FLG<1,LN>:"</UnitFlag>"
*  STRXML:="<OrderedQuantity>":ITEMALLOCDATA<LN,7>:"</OrderedQuantity>"
*  STRXML:="<CancelledQuantity>":ITEMALLOCDATA<LN,8>:"</CancelledQuantity>"
*  STRXML:="<OpenedQuantity>":ITEMALLOCDATA<LN,9>:"</OpenedQuantity>"
**STRXML:="<ReceivedQuantity>":PO.TOT.RECEVED<1,LN>:"</ReceivedQuantity>"
**STRXML:="<PreviousReceivedQuantity>":PO.PREV.RECEVED<1,LN>:"</PreviousReceivedQuantity>"
*  STRXML:="<Rolls>":ITEMALLOCDATA<LN,10>:"</Rolls>"
*  STRXML:="<ProductComments>":ITEMALLOCDATA<LN,11>:"</ProductComments>"
*T060209 ^
*
  STRXML:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
  IF TEMP.ITEMALLOCDATA<LN,2> # TEMP.PO.WHSE<1,LN> THEN
     STRXML:="<Warehouse>":ITEMALLOCDATA<LN,2>:"</Warehouse>"
  END
  IF TEMP.ITEMALLOCDATA<LN,3> # TEMP.PO.DEL.DATE<1,LN> THEN
     STRXML:="<DeliverDate>":ITEMALLOCDATA<LN,3>:"</DeliverDate>"
  END
  IF TEMP.ITEMALLOCDATA<LN,4> # TEMP.PO.GROS.PRICE<1,LN> THEN
     STRXML:="<UnitPrice>":ITEMALLOCDATA<LN,4>:"</UnitPrice>"
  END
  IF TEMP.ITEMALLOCDATA<LN,5> # TEMP.PO.DISCOUNT<1,LN> THEN
     STRXML:="<Discount>":ITEMALLOCDATA<LN,5>:"</Discount>"
  END
  IF ITEMALLOCDATA<LN,6> # TEMP.PO.UNIT.FLG<1,LN> THEN
     STRXML:="<UnitFlag>":PO.UNIT.FLG<1,LN>:"</UnitFlag>"
  END
YAK<-1> = "ORDERED QUANTITY TEMP ":TEMP.ITEMALLOCDATA<LN,7> :" ON ORDER ":TEMP.PO.TOT.ONORD<1,LN> ;WRITE YAK ON CONTROL,'01WPOR'
  IF TEMP.ITEMALLOCDATA<LN,7> # TEMP.PO.TOT.ONORD<1,LN> THEN
     STRXML:="<OrderedQuantity>":ITEMALLOCDATA<LN,7>:"</OrderedQuantity>"
  END
YAK<-1> = "CANCELLED QUANTITY TEMP ":TEMP.ITEMALLOCDATA<LN,8> :" CANCEL ":TEMP.PO.TOT.CANCEL<1,LN> ;WRITE YAK ON CONTROL,'01WPOR'
  IF TEMP.ITEMALLOCDATA<LN,8> # TEMP.PO.TOT.CANCEL<1,LN> THEN
     STRXML:="<CancelledQuantity>":ITEMALLOCDATA<LN,8>:"</CancelledQuantity>"
  END
YAK<-1> = "OPEN QUANTITY TEMP ":TEMP.ITEMALLOCDATA<LN,9> :" CANCEL ":TEMP.PO.QTY.OPEN<1,LN> ;WRITE YAK ON CONTROL,'01WPOR'
  IF TEMP.ITEMALLOCDATA<LN,9> # TEMP.PO.QTY.OPEN<1,LN> THEN
     STRXML:="<OpenedQuantity>":ITEMALLOCDATA<LN,9>:"</OpenedQuantity>"
  END
  STRXML:="<ReceivedQuantity>":PO.TOT.RECEVED<1,LN>:"</ReceivedQuantity>"
  *STRXML:="<PreviousReceivedQuantity>":OCONV(PO.PREV.RECEVED<1,LN>,'MD2'):"</PreviousReceivedQuantity>"
  IF ITEMALLOCDATA<LN,10> # TEMP.PO.NO.OF.ROLLS<1,LN> THEN
     STRXML:="<Rolls>":ITEMALLOCDATA<LN,10>:"</Rolls>"
  END
  IF ITEMALLOCDATA<LN,11> # TEMP.PO.COMMTS<1,LN> THEN
     STRXML:="<ProductComments>":ITEMALLOCDATA<LN,11>:"</ProductComments>"
  END
ITEMALLOCDATA<LN,4>=CHANGE(ITEMALLOCDATA<LN,4>,".","")
ITEMALLOCDATA<LN,5>=CHANGE(ITEMALLOCDATA<LN,5>,".","")
ITEMALLOCDATA<LN,7>=CHANGE(ITEMALLOCDATA<LN,7>,".","")
ITEMALLOCDATA<LN,8>=CHANGE(ITEMALLOCDATA<LN,8>,".","")
ITEMALLOCDATA<LN,9>=CHANGE(ITEMALLOCDATA<LN,9>,".","")
********
	PO.WHSE<1,LN> = ITEMALLOCDATA<LN,2>
	PO.DEL.DATE<1,LN> = ICONV(ITEMALLOCDATA<LN,3>,"D2/")
	PO.GROS.PRICE<1,LN> = ITEMALLOCDATA<LN,4>
	PO.DISCOUNT<1,LN> = ITEMALLOCDATA<LN,5>
	*PO.UNIT.FLG<1,LN> = VALUE
********
	GOSUB 4000
	**** INPUT QTY ORDERED
	VALUE = ITEMALLOCDATA<LN,7>
	  IF DIFF.UM<LN> = "Y" THEN
	    FROM.UOM = PO.UNIT.FLG<1,LN>
	    TO.UOM = INV.UNIT<1,2>
	    STK.QTY = UOM_CONVERSION_CALC(VALUE,FROM.UOM,TO.UOM,INV.M.WT,INV.PAP.WIDTH,'','')
	    VALUE = UOM_CONVERSION_CALC(STK.QTY,TO.UOM,FROM.UOM,INV.M.WT,INV.PAP.WIDTH,'','')
	     IF ICR.CNV<LN,2> = "MD0" THEN
	      VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
	    END
	    IF ICR.CNV<LN,1> = "MD0" THEN
	      IF ICR.CNV<LN,2> # "MD0" THEN
		VALUE = VALUE * 10
	      END
	    END ELSE
	      VALUE = VALUE * ICR.MT1<LN,1> * 10
	    END
	  END ELSE
	    IF ICR.CNV<LN,1> = "MD0" THEN
	      VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
	    END ELSE
	      VALUE = VALUE * 10
	    END
	  END
	  PO.TOT.ONORD<1,LN> = VALUE
	*
	**** INPUT QTY CANCEL
	*
	VALUE = ITEMALLOCDATA<LN,8>
	  IF DIFF.UM<LN> = "Y" THEN
	    IF ICR.CNV<LN,2> = "MD0" THEN
	      VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
	    END
	    IF ICR.CNV<LN,1> = "MD0" THEN
	      IF ICR.CNV<LN,2> # "MD0" THEN
		VALUE = VALUE * 10
	      END
	      IF (INV.UNIT<1,2> = 'PC' OR INV.UNIT<1,2> = 'FT') AND INV.UNIT<1,3> = 'MSI' THEN
		TEST.OPEN = PO.TOT.ONORD<1,LN> - PO.TOT.RECEVED<1,LN>
		IF ABS(TEST.OPEN-VALUE) < 50 THEN VALUE = TEST.OPEN
	      END
	    END ELSE
	      VALUE = VALUE * ICR.MT1<LN,1> * 10
	    END
	  END ELSE
	    IF ICR.CNV<LN,1> = "MD0" THEN
	      VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
	    END ELSE
	      VALUE = VALUE * 10
	    END
	  END
	  PO.TOT.CANCEL<1,LN> = VALUE
	  *
	  **** PRINT OPEN QTYS
	  *
	  VALUE = ITEMALLOCDATA<LN,9>
	      IF DIFF.UM<LN> = "Y" THEN
	      IF ICR.CNV<LN,2> = "MD0" THEN
		VALUE = ICONV(((VALUE/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
	      END
	      IF ICR.CNV<LN,1> = "MD0" THEN
		IF ICR.CNV<LN,2> # "MD0" THEN
		  VALUE = VALUE * 10
		END
	      END ELSE
		VALUE = VALUE * ICR.MT1<LN,1> * 10
	      END
	    END ELSE
	      IF ICR.CNV<LN,1> = "MD0" THEN
		VALUE = ICONV(((VALUE/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
	      END ELSE
		VALUE = VALUE * 10
	      END
	    END
	    PO.PREV.RECEVED<1,LN> = PO.TOT.ONORD<1,LN> - (VALUE + PO.TOT.CANCEL<1,LN>)
	    PO.TOT.RECEVED<1,LN> = PO.PREV.RECEVED<1,LN>
	    PO.QTY.OPEN<1,LN> = VALUE
	*
	*ROLLS/SHEETS/LABLES
	PO.NO.OF.ROLLS<1,LN> = ITEMALLOCDATA<LN,10>
	PO.ITEM.COMM<1,LN> = ITEMALLOCDATA<LN,11>
*STRXML:="<ProductNo>":PO.PROD.NUM<1,LN>:"</ProductNo>"
*STRXML:="<Warehouse>":PO.WHSE<1,LN>:"</Warehouse>"
*STRXML:="<DeliverDate>":OCONV(PO.DEL.DATE<1,LN>,'D2/'):"</DeliverDate>"
*STRXML:="<UnitPrice>":PO.GROS.PRICE<1,LN>:"</UnitPrice>"
*STRXML:="<Discount>":PO.DISCOUNT<1,LN>:"</Discount>"
*STRXML:="<UnitFlag>":PO.UNIT.FLG<1,LN>:"</UnitFlag>"
*STRXML:="<OrderedQuantity>":PO.TOT.ONORD<1,LN>:"</OrderedQuantity>"
*STRXML:="<CancelledQuantity>":PO.TOT.CANCEL<1,LN>:"</CancelledQuantity>"
*STRXML:="<OpenedQuantity>":PO.QTY.OPEN<1,LN>:"</OpenedQuantity>"
*STRXML:="<ReceivedQuantity>":PO.TOT.RECEVED<1,LN>:"</ReceivedQuantity>"
*STRXML:="<PreviousReceivedQuantity>":PO.PREV.RECEVED<1,LN>:"</PreviousReceivedQuantity>"
IF JOBALLOCDATA<LN> = "" THEN GOTO 1234
STRXML:="<Jobs>"
****************
*JOB ALLOCATIONS
****************
GOSUB 5000
    FOR LNJ = 1 TO DCOUNT(JOBALLOCDATA<LN>,VM)
YAK<-1> = "JOBALLOCDATA<LN>  ":JOBALLOCDATA<LN>;WRITE YAK ON CONTROL,'01WPOR'
    *IF JOBALLOCDATA<LN,LNJ,7> # LN THEN CONTINUE
STRXML:="<Job>"
       PO.JOB.NO<1,LN,LNJ> =   JOBALLOCDATA<LN,LNJ,1>
       PO.JB.DEPT<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,2>
       PO.JB.CCTR<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,3>
       *PO.JB.UNITS<1,LN> = INV.UNIT<1,2>
       PO.JB.UNITS<1,LN> = JOBALLOCDATA<LN,LNJ,4>
*****
*T060209 V
*	STRXML:="<JobNo>":PO.JOB.NO<1,LN,LNJ>:"</JobNo>"
*	STRXML:="<JobDepartment>":PO.JB.DEPT<1,LN,LNJ>:"</JobDepartment>"
*	STRXML:="<JobCostCenter>":PO.JB.CCTR<1,LN,LNJ>:"</JobCostCenter>"
      IF PO.JOB.NO<1,LN,LNJ> # TEMP.PO.JOB.NO<1,LN,LNJ> THEN
	STRXML:="<JobNo>":PO.JOB.NO<1,LN,LNJ>:"</JobNo>"
      END
      IF PO.JB.DEPT<1,LN,LNJ> # TEMP.PO.JB.DEPT<1,LN,LNJ> THEN
	STRXML:="<JobDepartment>":PO.JB.DEPT<1,LN,LNJ>:"</JobDepartment>"
      END
      IF PO.JB.CCTR<1,LN,LNJ> # TEMP.PO.JB.CCTR<1,LN,LNJ> THEN
	STRXML:="<JobCostCenter>":PO.JB.CCTR<1,LN,LNJ>:"</JobCostCenter>"
      END
      TEMP.JOBALLOCDATA<LN,LNJ,5>=CHANGE(JOBALLOCDATA<LN,LNJ,5>,".","")
      TEMP.JOBALLOCDATA<LN,LNJ,6>=CHANGE(JOBALLOCDATA<LN,LNJ,6>,".","")
     JOB.ORD = "" ; JOB.RECEIVED = ""
     IF TEMP.JOBALLOCDATA<LN,LNJ,5> # TEMP.PO.JB.ONORD<1,LN,LNJ> THEN 
        JOB.ORD = 1
	STRXML:="<JobOrderedQuantity>":JOBALLOCDATA<LN,LNJ,5>:"</JobOrderedQuantity>"
     END
     IF TEMP.JOBALLOCDATA<LN,LNJ,6> # TEMP.PO.JB.RECEVED<1,LN,LNJ> THEN
        JOB.RECEIVED = 1
	STRXML:="<JobReceivedQuantity>":JOBALLOCDATA<LN,LNJ,6>:"</JobReceivedQuantity>"
     END
*T060209 ^
	STRXML:="<JobUnitFlag>":INV.UNIT<1,2>:"</JobUnitFlag>"
*	STRXML:="<JobOrderedQuantity>":JOBALLOCDATA<LN,LNJ,5>:"</JobOrderedQuantity>"
*	STRXML:="<JobReceivedQuantity>":JOBALLOCDATA<LN,LNJ,6>:"</JobReceivedQuantity>"
JOBALLOCDATA<LN,LNJ,5>=CHANGE(JOBALLOCDATA<LN,LNJ,5>,".","")
JOBALLOCDATA<LN,LNJ,6>=CHANGE(JOBALLOCDATA<LN,LNJ,6>,".","")
*T060209 v
*STRXML:="<JobOpenedQuantity>":OCONV(JOBALLOCDATA<LN,LNJ,5> - JOBALLOCDATA<LN,LNJ,6>,ICR.CNV):"</JobOpenedQuantity>"
     IF JOB.ORD # "" OR JOB.RECEIVED # "" THEN
        STRXML:="<JobOpenedQuantity>":OCONV(JOBALLOCDATA<LN,LNJ,5> - JOBALLOCDATA<LN,LNJ,6>,ICR.CNV):"</JobOpenedQuantity>"
     END
*T060209 ^
*****
YAK<-1> = " B4 JOBALLOCDATA<LN>  ":JOBALLOCDATA<LN,LNJ,4>;WRITE YAK ON CONTROL,'01WPOR'
	VALUE = JOBALLOCDATA<LN,LNJ,5>
	IF ICR.CNV = "MD0" THEN
	   VALUE = INT(((VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
	END ELSE
	   VALUE = VALUE * 10
	END
	DIFF.QTY = ABS(VALUE-PO.JB.RECEVED<1,LN,LNJ>)
	IF (INV.UNIT<1,3> = 'MSI' AND DIFF.QTY <= 50) OR DIFF.QTY <= 9 THEN
	   VALUE = PO.JB.RECEVED<1,LN,LNJ>
	END
YAK<-1> = " AFTER JOBALLOCDATA<LN>  ":VALUE;WRITE YAK ON CONTROL,'01WPOR'
        PO.JB.ONORD<1,LN,LNJ> = VALUE
        PO.JB.RECEVED<1,LN,LNJ> = JOBALLOCDATA<LN,LNJ,6>
        PO.JB.OPEN<1,LN,LNJ> = PO.JB.ONORD<1,LN,LNJ> - PO.JB.RECEVED<1,LN,LNJ>
*	STRXML:="<JobNo>":PO.JOB.NO<1,LN,LNJ>:"</JobNo>"
*	STRXML:="<Department>":PO.JB.DEPT<1,LN,LNJ>:"</Department>"
*	STRXML:="<CostCenter>":PO.JB.CCTR<1,LN,LNJ>:"</CostCenter>"
*	STRXML:="<JobUnitQuantity>":INV.UNIT<1,2>:"</JobUnitQuantity>"
*	STRXML:="<JobOrderedQuantity>":PO.JB.ONORD<1,LN,LNJ>:"</JobOrderedQuantity>"
*	STRXML:="<JobReceivedQuantity>":PO.JB.RECEVED<1,LN,LNJ>:"</JobReceivedQuantity>"
*	STRXML:="<JobOpenedQuantity>":PO.JB.OPEN<1,LN,LNJ>:"</JobOpenedQuantity>"
STRXML:="</Job>"
    NEXT LNJ
  STRXML:="</Jobs>"
  1234*
  STRXML:="</Product>"
NEXT LN
STRXML:="</Products>"
STRXML:="<BarCodeFlag>":BCFLAG:"</BarCodeFlag>"
YAK<-1> = "END FORLOOP  ";WRITE YAK ON CONTROL,'01WPOR'
GOSUB 2000
*STRXML:="<Result> UPDATED SUCCESSFULLY</Result>"
STRXML:="</Requisition>"
STRXML:="</Payload>"
RETURN
*************
**** GET CONVERSIONS
4000*
  BEGIN CASE
    CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
  RETURN
******** GET JOB ALLOC CONVERSIONS
5000*
   BEGIN CASE
      CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
         ICR.CNV = "MD0"; ICR.DV2 = 1
         ICR.DV1 = INV.M.WT; ICR.MT1 = 1
      CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
         ICR.CNV = "MD0"; ICR.DV2 = 1
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10
      CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
         ICR.CNV = "MD0"; ICR.DV2 = 12
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100
      CASE 1
         ICR.CNV = "MD2"; ICR.DV2 = 1
         ICR.DV1 = 10; ICR.MT1 = 1
   END CASE
RETURN
*******
2000*
IF PO.CODE = "N" AND POR.MODE = 1 THEN
  FND = 1
  READU PO.SEQ FROM CONTROL, CONO:"POCODE" ELSE PO.SEQ = 10000
  LOOP
  WHILE FND DO
     PO.CODE = PO.SEQ
     PO.SEQ = PO.CODE + 1
*     IF CO.PO.REQ.FLAG = "Y" THEN 
	READU REC FROM REG.REQ, CONO:PO.CODE ELSE
	   READU REC FROM PO, CONO:PO.CODE ELSE 
	      READU REC FROM PO, CONO:PO.CODE ELSE FND = 0 
	   END
	END
*     END ELSE 
*	READU REC FROM PO, CONO:PO.CODE ELSE 
*	   READU REC FROM PO, CONO:PO.CODE ELSE FND = 0 
*	END
*     END
     REC = ""
     IF FND THEN 
	RELEASE PO, CONO:PO.CODE 
*	IF CO.PO.REQ.FLAG = "Y" THEN
	   RELEASE REG.REQ, CONO:PO.CODE 
*	END
     END 
  REPEAT
  WRITE PO.SEQ ON CONTROL, CONO:"POCODE"
 * STRXML:="<NewRequisitionNo>":PO.CODE:"</NewRequisitionNo>"
*  IF MENU.FLAG = "R" THEN
*     IF REQ THEN
*	ERRMSG = "Note new requisition number"
*	GOSUB 91000 ; * T27552
*     END
*  END ELSE
*     ERRMSG = "Note new PO number" 
*     GOSUB 91000 ; * T27552
*  END 
*END ELSE
*  IF OPTION = "F" AND MENU.FLAG = "R" THEN
*     IF APP.PO.LEVEL # "1" THEN
*	ERRMSG = "Requisition forwarded to ":PO.APPROVER
*	GOSUB 91000
*     END
*  END
END
*IF MENU.FLAG = "R" THEN
*  STATUS.CNT = DCOUNT(PO.STATUS,VM) 
*  IF PO.STATUS<1,STATUS.CNT> = "On-Hold" THEN 
*     ERRMSG = "Requsition has been placed on On-Hold status."
*     GOSUB 91000 
*  END 
*END
PD.CNT = 0;LAST.DATE = ""
PD.CNT = COUNT(PO.DEL.DATE,VM) + (PO.DEL.DATE # "")
FOR PD = 1 TO PD.CNT
  IF PO.DEL.DATE<1,PD> > LAST.DATE THEN LAST.DATE = PO.DEL.DATE<1,PD>
NEXT PD
PO.DUE.DATE = LAST.DATE
STRXML:="<DueDate>":OCONV(PO.DUE.DATE,'D2/'):"</DueDate>"
IF MENU.FLAG = "R" THEN
   IF POR.MODE = 2 THEN
	CMD = 'DELETE REG.REQ ':'"':CONO:PO.CODE:'"'
	UDTEXECUTE CMD CAPTURING MSG
	*ERRMSG = "New PO number " :PO.CODE:" has been created." 
	PO.APP.LEVEL = 1
     UPDATE = "PO"
   END ELSE
     UPDATE = "REQ"
   END
END
YAK<-1> = "B4 PO_UPDATE  UPDATE ":UPDATE;WRITE YAK ON CONTROL,'01WPOR'
*CALL PO.UPDATE(PO.CODE,CONO,MAT PROD.DEL)
CALL PO_UPDATE(PO.CODE,CONO,MAT PROD.DEL,UPDATE)
YAK<-1> = "AFTER PO_UPDATE  UPDATE ":UPDATE;WRITE YAK ON CONTROL,'01WPOR'
*IF OPTION = "F" AND MENU.FLAG = "R" THEN
*  GOSUB SEND.MAIL ; * notify approver 
*END
*
*IF NOT(REQ) THEN
  IF CO.APS.R.INTRF > 2 AND POR.MODE = 2 THEN
     *CALL VEND.STAT.UPDATE(CONO,PO.CODE,"R")
     CALL VEND_STAT_UPDATE(CONO,PO.CODE,"R")
  END
 * GOSUB 20000 ;* GENERATE BAR CODE LABEL INFO
*END
*MORE = 0
*RELEASE
RETURN
*
91000*
93000*
  STRXML = "<Payload><Requisition><Errmsg>": ERRMSG:"</Errmsg></Requisition></Payload>"
RETURN
