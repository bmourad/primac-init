*T040609 By yakub on 03/06/09
SUBROUTINE POR_REQUISITIONSERVICE_GETREQUISITIONDATA(CONO,REQ.NO,ERRMSG,STRXML)
*121409
************************************************************************
$INCLUDE CPYLIB COMMON1      
$INCLUDE POS.CPYLIB COM.PO      
$INCLUDE POS.CPYLIB COM.PO.INTRF
*
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE VEND
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
*T040609 v
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE POS.CPYLIB APP.REQ 
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE CPYLIB CHAR
*T040609 ^
*
OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING' ; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
*T040609 v
OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
*T040609 ^
*   
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = '' ; GOTO 93000    
*IF CO.PO.REQ.FLAG = "Y" THEN
  OPEN '','REG.REQ' TO REG.REQ ELSE ERRMSG = 'REG.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','APP.REQ' TO APP.REQ ELSE ERRMSG = 'APP.REQ FILE IS MISSING'; GOTO 93000
  OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
  USER.ID = UPCASE(@LOGNAME)
*END
*
*T040609 v
BAL.ORD = 0 ; BAL.REC = 0 ; BAL.OPEN = 0
TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0
PSS.FLAG = "Y"
UNKNOWN = "??????????"
DESC.LINE = ""
LINE.CUST = ""
VALUE = ""
DIM HOLD.APP.REQ.REC(20)
MAT APP.REQ.REC = ""
MAT HOLD.APP.REQ.REC = ""
DIM PROD.DEL(5)
   *PO.CODE = REQ.NO
   *********
ECD.RET.VALUE = REQ.NO
DUPLICATED.PO = 0 ; *T25938
NEW = 0
FIRST.TIME = 0      ;* T26152
PORDER = 0
REQ = 0
MAT PO.REC = ''
MAT PROD.DEL = ""
PREV.PO.VEND=""
TOT.ORD.AMT = ""
POS.INQ = 0
   IF INDEX(REQ.NO<1,1>,"!",1) > 0 THEN
      ECD.RET.VALUE = FIELD(REQ.NO<1,1>,"!",1)
   END ELSE
      ECD.RET.VALUE = REQ.NO<1,1>
   END
POR.MODE = REQ.NO<1,2>
MENU.FLAG = REQ.NO<1,3>
IF MENU.FLAG # "P" THEN MENU.FLAG = "R"
****
STRXML="<Payload>"
IF MENU.FLAG = "R" THEN
STRXML:="<Requisition>"
END ELSE
 IF MENU.FLAG = "P" THEN
  STRXML:="<RPO>"
 END
END
STRXML:="<CompanyNo>":CONO:"</CompanyNo>"
MAT INV.CNV.REC = ""
*MENU.FLAG = "R"
***
BEGIN CASE
  CASE MENU.FLAG="R" AND ECD.RET.VALUE="D" AND NOT(POS.INQ) AND POR.MODE = 1 ;*25855
         GOSUB DUPE.SUB
	 GOTO 666
  CASE MENU.FLAG = "P" AND ECD.RET.VALUE = "D" AND NOT(POS.INQ) AND POR.MODE = 1 ;*25855
         ECD.RET.VALUE = FIELD(REQ.NO<1,1>,"!",2)
         DUP.PONO = ECD.RET.VALUE
         MATREAD PO.REC FROM PO, CONO:DUP.PONO ELSE
            ERRMSG = "Regular PO # entered not on file"
	    GOTO 93000
         END
	 PO.CODE = "N"
*         ECD.RET.VALUE = FIELD(REQ.NO<1,1>,"!",3)
*         PO.CODE = ECD.RET.VALUE
*         BEGIN CASE
*            CASE PO.CODE = "N"
*            CASE PO.CODE # ""
*               READ REC FROM PO, CONO:PO.CODE THEN
*                  ERRMSG = "Regular PO # already exists on file"
*		  GOTO 93000
*               END
*               MATBUILD SAVE.REC FROM PO.REC
*         END CASE
         ECD.RET.VALUE = FIELD(REQ.NO<1,1>,"!",3)
         JOB.CLEAR = ECD.RET.VALUE
         DUPLICATED.PO = 1
         PO.DATE = DATE()
         PO.ST.DATE = DATE()
         PO.DEL.DATE = ""
         PO.DUE.DATE = ""
         PO.TOT.RECEVED = ""
         PO.PRT.FLG = "Y"
         IF JOB.CLEAR = "Y" THEN
            PO.JOB.NO = ""
            PO.JB.UNITS = ""
            PO.JB.ONORD = ""
            PO.JB.RECEVED = ""
            PO.JB.OPEN = ""
         END ELSE
            PO.JB.OPEN=PO.JB.ONORD
            PO.JB.RECEVED=''
         END
	 GOTO 666
  CASE ECD.RET.VALUE = "N" AND NOT(POS.INQ) AND POR.MODE = 1 ; * 25855
    NEW = 1
    PO.CODE = ECD.RET.VALUE
    IF MENU.FLAG = "R" THEN
      STRXML := "<RequisitionNo> N </RequisitionNo>"
      STRXML := "<Status> Entered </Status>"
      STRXML := "<StatusDate>": OCONV(DATE(),"D2/"):"</StatusDate>"
*            STRXML := "<Approver>": USER.ID :"</Approver>"
      GOTO 555
    END ELSE
        IF MENU.FLAG = "P" THEN
           STRXML:="<PONo>"
	END
    END
  CASE ECD.RET.VALUE # "" AND NOT(POS.INQ) ; * 25855
    PO.CODE = ECD.RET.VALUE
      * T26126 v
    IF MENU.FLAG = "R" THEN
       READ PO.RR FROM PO,CONO:PO.CODE THEN
            ERRMSG = "PO with number ":PO.CODE: " already exists"
            RELEASE PO,CONO:PO.CODE
            GOTO 93000
       END
          MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE
          *  IF MENU.FLAG = "R" THEN
              ERRMSG = "Requisition ":PO.CODE:" does not exist"
              RELEASE REG.REQ,CONO:PO.CODE ; GOTO 93000
          *  END
          END 
    END
    MATREADU PO.REC FROM PO, CONO:PO.CODE LOCKED
      ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
      GOTO 93000 
    END THEN
      * T26126 ^
      IF MENU.FLAG = "R" THEN
        ERRMSG = "PO with number ":PO.CODE: " already exists"
        RELEASE PO,CONO:PO.CODE
        GOTO 93000
      END
      PORDER = 1; * this is a purchase order since found in PO file
    END ELSE
      READ REC FROM SLIT.TRANS, CONO:PO.CODE THEN
        ERRMSG='Slit transaction already exists with this number'
        RELEASE SLIT.TRANS, CONO:PO.CODE
        GOTO 93000
      END ELSE
        RELEASE SLIT.TRANS, CONO:PO.CODE
        *IF CO.PO.REQ.FLAG = "Y" THEN
          MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
            IF MENU.FLAG = "P" THEN
              ERRMSG = "Requisition with number ":PO.CODE:" already exists"
              RELEASE REG.REQ,CONO:PO.CODE ; GOTO 93000
            END
            REQ = 1 ; * this is still requisition 
          END 
        *END
      END
      IF INDEX(PO.CODE,"S",1) THEN
        LENPO = LEN(PO.CODE)
        NPOCODE = PO.CODE[1,LENPO-1]
        IF NPOCODE # "" AND NUM(NPOCODE) THEN
          ERRMSG=PO.CODE:" is not allowed.Could be a Slit Trans Key."
          GOTO 93000
        END
      END
      IF REQ THEN
*               IF BUFFER<3> = 'INQ' THEN
*                  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
*               END ELSE
            * T26126 v
        MATREADU PO.REC FROM REG.REQ, CONO:PO.CODE LOCKED
          ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
          GOTO 93000 
        END ELSE
          MAT PO.REC = ''
        END
            * T26126 ^
  *             END
      END ELSE
          * T26126 v
        MATREADU PO.REC FROM PO, CONO:PO.CODE LOCKED
          ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
          GOTO 93000 
        END ELSE
          MAT PO.REC = ''
        END
          * T26126 ^
      END
      IF PO.APP.LEVEL = "C" THEN
        WRITE "REQ  ":REQ ON CONTROL,'01YAAA'
        IF (REQ) THEN
*                  ERRMSG = "Requisition: ":PO.CODE:" was cancelled. Cannot make any changes."
          *STRXML := "<WarningMessage> Requisition: ":PO.CODE:" was cancelled. Cannot make any changes. </WarningMessage>"
	  STRXML := "<WarningMessage> Requisition: ":PO.CODE:" was rejected. Cannot make any changes. </WarningMessage>"
*                  GOTO 93000
        END ELSE
*                  ERRMSG = "PO ":PO:" was cancelled. You cannot make any changes."
          *STRXML := "<WarningMessage> PO ":PO:" was cancelled. You cannot make any changes. </WarningMessage>"
	  STRXML := "<WarningMessage> PO ":PO:" was rejected. You cannot make any changes. </WarningMessage>"
*                  GOTO 93000
        END
      END
      IF NOT(PORDER) AND NOT(REQ) THEN 
        ERRMSG = PO.CODE:" IS NOT ON FILE. DO YOU WANT TO ADD (Y/N)"
	VALUE = "N"
        *IF POR.MODE = 1 THEN VALUE = "Y"
        IF VALUE = "Y" THEN
          NEW = 1
          IF MENU.FLAG = "R" THEN
            REQ = 1
          END ELSE
            PORDER = 1
          END
		  GOTO 93000
        END ELSE
         * IF CO.PO.REQ.FLAG = "Y" THEN
            RELEASE REG.REQ, CONO:PO.CODE
         * END
          RELEASE PO, CONO:PO.CODE
	  IF MENU.FLAG = "R" THEN ERRMSG = "Requisition No. ":PO.CODE:" does not exist"
	  IF MENU.FLAG = "P" THEN ERRMSG = "PO No. ":PO.CODE:" does not exist"
	  *ERRMSG = "Requisition No. ":PO.CODE:" does not exists"
          GOTO 93000
        END
      END
    END
    IF NOT (NEW) THEN
      DIV.CODE = PO.DIV.OWNER; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL PRIDGET_CK_DIV_SEC_SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOTO 93000
      END
*      IF MENU.FLAG = "R" THEN
*        USER= USER.ID; DIV.OWNER = PO.DIV.OWNER; APP.REQ.ID = ""
*        WRITE "USER  ":USER ON CONTROL,'01YAA'
*        CALL CHECK_ACTIVE_STATUS (CONO,USER,DIV.OWNER,RET.FLAG,MAT APP.REQ.REC,APP.REQ.ID,YYY)
*        VALID = RET.FLAG 
*        IF NOT(VALID) THEN
*          ERRMSG = "Profile for user ":USER.ID:" is either missing or is inactive" 
*          GOTO 93000
*        END
*      END
    END
END CASE
   ***************************
 *  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
IF PO.CODE = "N" THEN GOTO 555
*T040609 ^
IF POR.MODE = 2 AND MENU.FLAG = "R" THEN
  MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE ELSE MAT PO.REC = ''
END
*T040609 v
 666 *
*T040609 ^
VEND.KEY = CONO:PO.VEND.NO
MATREAD VEND.REC FROM VEND , VEND.KEY ELSE
  MAT VEND.REC = "????????????????"
END
IF MENU.FLAG = "R" THEN
STRXML := "<RequisitionNo>": PO.CODE :"</RequisitionNo>"
END ELSE
 IF MENU.FLAG = "P" THEN
  STRXML := "<PONo>": PO.CODE :"</PONo>"
 END
END
STRXML := "<VendorNo>": PO.VEND.NO :"</VendorNo>"
STRXML := "<VendorName>": VEND.PO.DESC :"</VendorName>"
STRXML := "<VendorAddress1>": VEND.PO.ADDR1 :"</VendorAddress1>"
STRXML := "<VendorAddress2>": VEND.PO.ADDR2 :"</VendorAddress2>"
STRXML := "<VendorCity>": FIELD(VEND.PO.CT.ST, ",",1) :"</VendorCity>"
STRXML := "<VendorState>": FIELD(VEND.PO.CT.ST, ",",2) :"</VendorState>"
STRXML := "<VendorZip>": VEND.PO.ZIP :"</VendorZip>"
STRXML := "<VendorPhone>": VEND.PHONE :"</VendorPhone>"
STRXML := "<VendorFax>": VEND.FAX :"</VendorFax>"
STRXML := "<VendorEmailAddress>": VEND.EMAIL.ADDR :"</VendorEmailAddress>"
*STRXML := "<Accrue>": PO.ACCRUE :"</Accrue>"
STRXML := "<DueDate>":OCONV(PO.DUE.DATE,'D2/'):"</DueDate>"
STRXML := "<VendorOrderNo>": PO.VDR.ORD :"</VendorOrderNo>"
STRXML := "<ContactName>": PO.CONTACT :"</ContactName>"
STRXML := "<ShipViaCode>": PO.SHIP.VIA :"</ShipViaCode>"
STRXML := "<ShipViaName>": PO.VIA.DESC :"</ShipViaName>"
STRXML := "<FreeOnBoard>": PO.FOB :"</FreeOnBoard>"
STRXML := "<Comments>": PO.INTRAL.INT :"</Comments>"
STRXML := "<TermsDate>": PO.TERMS.DATE :"</TermsDate>"
STRXML := "<TermsDescription>": PO.TERMS.DESC :"</TermsDescription>"
STRXML := "<TermsPercentage>":OCONV(PO.TERMS.DIS,'MD2') :"</TermsPercentage>"
STRXML := "<ShipToNo>": PO.SHIP.WHSE :"</ShipToNo>"
STRXML := "<ShipToName>": PO.SHIP.NAME :"</ShipToName>"
STRXML := "<ShipToAddress1>": PO.SHIP.ADD1 :"</ShipToAddress1>"
STRXML := "<ShipToAddress2>": PO.SHIP.ADD2 :"</ShipToAddress2>"
STRXML := "<ShipToCity>": FIELD(PO.SHIP.ADD3, ",",1) :"</ShipToCity>"
STRXML := "<ShipToState>": FIELD(PO.SHIP.ADD3, ",",2) :"</ShipToState>"
STRXML := "<ShipToZip>": PO.SHIP.ADD4 :"</ShipToZip>"
*
;* T25941 v
;* SCV.REC(39)<ECD.SCRN.NO,1> = PO.PRT.FLG
GOSUB SHOW.PRINT.MAIL.FLAGS
;* T25941 ^
STRXML := "<PoDate>":OCONV(PO.DATE,'D2/'):"</PoDate>"
STRXML := "<Division>": PO.DIV.OWNER :"</Division>"
STRXML := "<WrittenBy>": PO.WRIT.BY :"</WrittenBy>"
   IF MENU.FLAG # "R" THEN
      *CALL PRIDGET_CALC_REG_PO_TOT(CONO,TOT.ORD.AMT,MAT PO.REC,"1",ZZZ)
      CALL PRIDGET_CALC_REG_PO_TOT(CONO,"1",ZZZ,TOT.ORD.AMT)
      STRXML := "<TotalOrderedAmount>": OCONV(TOT.ORD.AMT,"MD2") :"</TotalOrderedAmount>"
   END
   IF MENU.FLAG = "R" THEN
  LAST.POS = DCOUNT(PO.STATUS<1>,@VM)
  LAST.ST.POS = DCOUNT(PO.ST.DATE<1>,@VM)
  STRXML := "<Status>": PO.STATUS<1,LAST.POS> :"</Status>"
  STRXML := "<Approver>": PO.APPROVER :"</Approver>"
  STRXML := "<StatusDate>": OCONV(PO.ST.DATE<1,LAST.ST.POS>,'D2/'):"</StatusDate>"
END
STRXML := "<Requestor>": PO.REQUESTOR :"</Requestor>"
*   IF MENU.FLAG # 'R' THEN
*      IF POS.INQ THEN
*         SCV.REC(49)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END ELSE
*         SCV.REC(48)<ECD.SCRN.NO,1> = PO.REQUESTOR
*      END
*   END
GOSUB NEXT.SCRN.DATA
  *T030609 v
555*
***** ENTER OPTIONS
*
PROMPT.NBR = 49
90 * ; * T25854
   IF NOT(NEW) AND MENU.FLAG = "R" THEN
      INQ.MODE = 0
      IF USER.ID # PO.APPROVER THEN
         BEGIN CASE
            CASE APP.PO.LEVEL > 1 
               LOCATE USER.ID IN PO.PREV.APP<1> SETTING POS ELSE
                  INQ.MODE = 1
                  PROMPT.NBR =52
               END
         END CASE 
      END
      IF NOT(INQ.MODE) THEN
         IF PO.APP.LEVEL < APP.PO.LEVEL OR PO.APP.LEVEL = "C" THEN
            IF APP.PO.LEVEL = 1 AND PO.APP.LEVEL # "C" THEN
               PROMPT.NBR = 50; * #,N,L,F,C,R,E
            END ELSE
               PROMPT.NBR = 52 ; * only inquiry N,L,F,C,E
            END
         END ELSE
            BEGIN CASE
               CASE USER.ID=PO.APPROVER OR APP.PO.LEVEL=1 OR PO.APPROVER=''
                  PROMPT.NBR = 50 ;* #,N,L,F,C,R,P,E
               CASE 1
                  PROMPT.NBR = 49 
            END CASE
         END
      END
   END
*STRXML := "<PromptNo>":PROMPT.NBR:"</PromptNo>"
GOSUB 500
  *T030609 ^
IF MENU.FLAG = "R" THEN
  STRXML:="</Requisition>"
END ELSE
  IF MENU.FLAG = "P" THEN
    STRXML:="</RPO>"
  END
END
STRXML := "</Payload>"
RETURN
500*
  NEWW = 0
  READ TESTX FROM PO.RSKI.XREF, CONO:PO.CODE ELSE NEWW = 1
  IF NOT(NEWW) THEN
    BCFLAG=0
    FOR PO.LINE.PTR=1 TO LINES WHILE BCFLAG=0
      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,PO.LINE.PTR> ELSE  MAT INV.REC = ""
      MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=''
      IF CATG.TRK.LVL='S' AND CATG.BARCODE='Y' THEN
        BCFLAG=1
      END
    NEXT PO.LINE.PTR
    IF BCFLAG=1 THEN
       STRXML:="<BarCodeFlag>":BCFLAG:"</BarCodeFlag>"
    END
  END
RETURN
*
SHOW.PRINT.MAIL.FLAGS: 
;* Show print flag
*   ECD.NUM = 39
PRT.FLAG = "";MAIL.FLAG=""
BEGIN CASE
  CASE PO.PRT.FLG<1,1> = 'Y'
*         PRT.FLAG = "Yes"
    PRT.FLAG = "Y"
  CASE PO.PRT.FLG<1,1> = 'P'
*         PRT.FLAG = "Print"
    PRT.FLAG = "P"
  CASE PO.PRT.FLG<1,1> = 'C'
*         PRT.FLAG = "Copy"
    PRT.FLAG = "C"
  CASE 1
*         PRT.FLAG = "No"
    PRT.FLAG = "N"
END CASE
STRXML := "<PrintFlag>": PRT.FLAG :"</PrintFlag>"
;* Show mail flag
*   ECD.NUM = 6
BEGIN CASE
  CASE PO.PRT.FLG<1,2> = 'Y'
    MAIL.FLAG = "Yes"
  CASE PO.PRT.FLG<1,2> = 'M'
    MAIL.FLAG = "Sent"
  CASE PO.PRT.FLG<1,2> = 'C'
    MAIL.FLAG = "Copy"
  CASE 1
    MAIL.FLAG = "No"
END CASE
*STRXML := "<MailFlag>": MAIL.FLAG :"</MailFlag>"
RETURN
*
NEXT.SCRN.DATA: 
*
STRXML := "<Products>"
LINES = COUNT(PO.PROD.NUM,@VM) + (PO.PROD.NUM # "")                     
FOR LN = 1 TO LINES                                                    
  STRXML := "<Product>"
  MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,LN> ELSE          
    MAT INV.REC = ""; INV.FULL.DESC = "??????"                          
  END                                                                  
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = "" 
  STRXML := "<ProductNo>": PO.PROD.NUM<1,LN> :"</ProductNo>"
  STRXML := "<ProductDescription>": INV.FULL.DESC "L#45" :"</ProductDescription>"
  IF INV.SBR + 0 = 0 THEN INV.SBR = 1                                  
  DESC.INV<1,LN> = INV.FULL.DESC                                       
  PO.JB.UNITS<1,LN> = INV.UNIT<1,2>                                    
  GOSUB 4000
  GOSUB 10000
*T040609 v
*GET JOB INFORMATION
  IF CATG.TRACK.QOH = "Y" THEN
      STRXML := "<Jobs>"
    LNP = LN
*    IF PO.JOB.NO<1,LNP> = "" THEN
*      MATREAD APP.REQ.REC FROM APP.REQ,CONO:USER.ID:"!":PO.DIV.OWNER ELSE 
*        MAT APP.REQ.REC = "" 
*      END 
*      BEGIN CASE 
*        CASE PO.APP.LEVEL = ""  
*          GO.BACK = 0
*        CASE PO.APP.LEVEL < APP.PO.LEVEL 
*          GO.BACK = 1
*        CASE PO.APP.LEVEL = "C" 
*          GO.BACK = 1           
*        CASE 1
*          GO.BACK = 0
*      END CASE
*      IF (GO.BACK) THEN 
*        STRXML := "<JobErrmsg> There are no jobs to be displayed.</JobErrmsg>"
*      END
*    END ELSE
      LINESS = COUNT(PO.JOB.NO<1,LNP>,SVM) + (PO.JOB.NO<1,LNP> # "")
*      IF LINESS < 1 THEN CONTINUE
      FOR LNJ = 1 TO LINESS
        MATREAD JOB.REC FROM JOB, CONO:PO.JOB.NO<1,LNP,LNJ> ELSE MAT JOB.REC = ""
        MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
          MAT CUST.REC = ""
          CUST.NAME = UNKNOWN
        END
        LINE.CUST<1,LNJ> = JOB.CUST
        DESC.LINE<1,LNJ> = CUST.NAME
      NEXT LNJ
      LNJ = 1
      GOSUB 10002
*    END
  *    GOSUB 1020
 STRXML := "</Jobs>"
  END
  GOSUB 1020
  STRXML := "</Product>"
*T040609 ^
NEXT LN      
  STRXML := "</Products>"
RETURN
*
10000*
*
N = LN
STRXML := "<DeliverDate>": OCONV(PO.DEL.DATE<1,N>, "D2/"):"</DeliverDate>"
*T040609 v
STRXML := "<UomFlag>": DIFF.UM<N> :"</UomFlag>"
*T040609 ^
IF DIFF.UM<N> = "Y" THEN
  IF ICR.CNV<N,1> = "MD0" THEN
    EX.TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
    EX.TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
    EX.TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
   * EX.TEMP.TOT.RECEV = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0');*T040609
  END ELSE
    EX.TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")  
    EX.TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") 
    EX.TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") 
    *EX.TEMP.TOT.RECEV = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2");*T040609
  END
 *T040609 v
   * STRXML := "<EX.PO.TOT.RECEIVED>": TEMP.TOT.RECEV :"</EX.PO.TOT.RECEIVED>"
 *T040609 ^
****
  IF ICR.CNV<N,2> = "MD0" THEN
    TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
    TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
    TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
    *TEMP.TOT.RECEV = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0');*T040609
    TEMP.TOT.RECEV = PO.TOT.RECEVED<1,N>
  END ELSE
    IF ICR.CNV<N,1> = "MD0" THEN
      TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")  
      TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") 
      TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") 
      *TEMP.TOT.RECEV = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2");*T040609
      TEMP.TOT.RECEV = PO.TOT.RECEVED<1,N>
    END ELSE
      TEMP.ONORD = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2")  
      TEMP.CANCEL = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2") 
      TEMP.OPEN = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2") 
      *TEMP.TOT.RECEV = OCONV(INT((PO.TOT.RECEVED<1,N>/10)/ICR.MT1<N,1>), "MD2");*T040609
      TEMP.TOT.RECEV = PO.TOT.RECEVED<1,N>
    END
  END
 *T040609 v
    STRXML := "<ReceivedQuantity>": TEMP.TOT.RECEV :"</ReceivedQuantity>"
 *T040609 ^
  STRXML := "<PreReceivedQuantity>": PO.PREV.RECEVED<1,N> :"</PreReceivedQuantity>";*121409
  STRXML := "<OrderedQuantity>": TEMP.ONORD :"</OrderedQuantity>"
  STRXML := "<CancelledQuantity>": TEMP.CANCEL :"</CancelledQuantity>"
  STRXML := "<OpenedQuantity>": TEMP.OPEN :"</OpenedQuantity>"
  STRXML := "<Warehouse>": PO.WHSE<1,N>:"</Warehouse>"
  STRXML := "<Discount>": OCONV(PO.DISCOUNT<1,N> , "MD2"):"</Discount>"
  STRXML := "<UnitFlag>": PO.UNIT.FLG<1,N> :"</UnitFlag>"
END ELSE
  IF ICR.CNV<N,1> = "MD0" THEN
        TEMP.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
    TEMP.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
    TEMP.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
    *TEMP.TOT.RECEV = ICONV(((PO.TOT.RECEVED<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0');*T040609
    TEMP.TOT.RECEV = PO.TOT.RECEVED<1,N>
  END ELSE
    TEMP.ONORD = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")
    TEMP.CANCEL = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") 
    TEMP.OPEN = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2") 
     *TEMP.TOT.RECEV = OCONV(INT(PO.TOT.RECEVED<1,N>/10), "MD2");*T040609
    TEMP.TOT.RECEV = PO.TOT.RECEVED<1,LN>
  END
 *T040609 v
      STRXML := "<ReceivedQuantity>": TEMP.TOT.RECEV :"</ReceivedQuantity>"
 *T040609 ^
 STRXML := "<PreReceivedQuantity>": PO.PREV.RECEVED<1,N> :"</PreReceivedQuantity>";*121409
  STRXML := "<OrderedQuantity>": TEMP.ONORD :"</OrderedQuantity>"
  STRXML := "<CancelledQuantity>": TEMP.CANCEL :"</CancelledQuantity>"
  STRXML := "<OpenedQuantity>": TEMP.OPEN :"</OpenedQuantity>"
  STRXML := "<Warehouse>": PO.WHSE<1,N> "L#4" :"</Warehouse>"
  STRXML := "<Discount>": OCONV(PO.DISCOUNT<1,N> , "MD2") "R#5" :"</Discount>"
  STRXML := "<UnitFlag>": PO.UNIT.FLG<1,N> "L#3" :"</UnitFlag>"
END
  STRXML := "<ExOrderedQuantity>": EX.TEMP.ONORD :"</ExOrderedQuantity>"
  STRXML := "<ExCancelledQuantity>": EX.TEMP.CANCEL :"</ExCancelledQuantity>"
  STRXML := "<ExOpenedQuantity>": EX.TEMP.OPEN :"</ExOpenedQuantity>"
  STRXML := "<ExUnitFlag>": PO.JB.UNITS<1,N> :"</ExUnitFlag>"
STRXML := "<UnitPrice>": OCONV(PO.GROS.PRICE<1,N> , "MD4") :"</UnitPrice>"
STRXML := "<Rolls>": PO.NO.OF.ROLLS<1,N> :"</Rolls>"
PO.ITEM.COMM<1,N> = CHANGE(PO.ITEM.COMM<1,N>,SVM,"")
STRXML := "<ProductComments>": PO.ITEM.COMM<1,N> :"</ProductComments>"
*    IF PO.NO.OF.ROLLS<1,N> # "" THEN
*      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,N> ELSE
*        MAT INV.REC = ""; INV.FULL.DESC = UNKNOWN
*      END
*      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
*      BEGIN CASE
*        CASE INV.PAP.TYPE = "ROLL"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
*          P_X  = X ; P_Y = Y ; P_VALUE = "# Rolls" ; P_OPT = ""
*        CASE 1
**T27919 v
*          IF INV.PAP.TYPE = 'SHEET' THEN
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Skids" ; P_OPT = ""
*          END ELSE
*           P_X  = X ; P_Y = Y ; P_VALUE = "# Labels" ; P_OPT = ""
*          END
**T27919 ^
*      END CASE
*      P_X  = 74 ; P_Y = SLN+2 ; P_VALUE = PO.NO.OF.ROLLS<1,N> ; P_OPT = ""
*    END
*    CNT = CNT + 1
*    FOR I = 1 TO C.PAGE.SIZE
*      IF PO.ITEM.COMM<1,N,I> # '' THEN
*        P_X  = 0 ; P_Y = SLN+2+I ; P_VALUE = "" ; P_OPT = "CL"
*        P_X  := AM:4 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:I "R#3"
*        P_X  := AM:8 ; P_Y := AM:SLN+2+I ; P_VALUE := AM:PO.ITEM.COMM<1,N,I>
*      END
*    NEXT I
RETURN
**** GET CONVERSIONS
4000*
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
    ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
  CASE 1
    ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
    ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
END CASE
BEGIN CASE
  CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
  CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
  CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
    ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
  CASE 1
    ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
    ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
END CASE
IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
RETURN
*
*T040609 v
**** SCROLL ROUTINE FOR JOBS
10002*
*****************
BEGIN CASE
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
    ICR.CNV = "MD0"; ICR.DV2 = 1
    ICR.DV1 = INV.M.WT; ICR.MT1 = 1
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.DV2 = 1
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
    ICR.CNV = "MD0"; ICR.DV2 = 12
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100
  CASE 1
    ICR.CNV = "MD2"; ICR.DV2 = 1
    ICR.DV1 = 10; ICR.MT1 = 1
END CASE
******************
FOR M = 1 TO LINESS
 STRXML := "<Job>"
      STRXML :="<JobProductLine>":LNP:"</JobProductLine>"
      STRXML := "<JobNo>":PO.JOB.NO<1,LNP,M> "L#8":"</JobNo>"
  STRXML := "<JobCustomerNo>":LINE.CUST<1,M> "L#6":"</JobCustomerNo>"
  IF PSS.FLAG = "Y" THEN ; * pss
    STRXML := "<JobDepartment>":PO.JB.DEPT<1,LNP,M> "L#2":"</JobDepartment>"
    STRXML := "<JobCostCenter>":PO.JB.CCTR<1,LNP,M> "L#3":"</JobCostCenter>"
  END ; * pss
  STRXML := "<JobUnitFlag>":PO.JB.UNITS<1,LNP> "L#3":"</JobUnitFlag>"
  TEMP.JB.ONORD = "";TEMP.JB.RECEVED = "";TEMP.JB.OPEN = ""
  IF ICR.CNV = "MD0" THEN
    TEMP.JB.ONORD = INT(((PO.JB.ONORD<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
    TEMP.JB.RECEVED = INT(((PO.JB.RECEVED<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
    TEMP.JB.OPEN = INT(((PO.JB.OPEN<1,LNP,M>/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
  END ELSE
    TEMP.JB.ONORD = OCONV(INT(PO.JB.ONORD<1,LNP,M>/10), "MD2") 
    TEMP.JB.RECEVED = OCONV(INT(PO.JB.RECEVED<1,LNP,M>/10), "MD2") 
    TEMP.JB.OPEN = OCONV(INT(PO.JB.OPEN<1,LNP,M>/10), "MD2") 
  END
  STRXML := "<IconvJobReceivedQuantity>":PO.JB.RECEVED<1,LNP,M>:"</IconvJobReceivedQuantity>";*121409
  STRXML := "<JobOrderedQuantity>":TEMP.JB.ONORD:"</JobOrderedQuantity>"
  STRXML := "<JobReceivedQuantity>":TEMP.JB.RECEVED:"</JobReceivedQuantity>"
  STRXML := "<JobOpenedQuantity>":TEMP.JB.OPEN:"</JobOpenedQuantity>"
  STRXML := "<JobCustomerName>":DESC.LINE<1,M> "L#24":"</JobCustomerName>"
   STRXML := "</Job>"
NEXT M
10001*
RETURN
**** PRINT TOTALS
1020*
TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0
TEMP.TOT.ORD = "";TEMP.TOT.REC = "";TEMP.TOT.OPEN = ""
TEMP.BAL.ORD = "";TEMP.BAL.REC = "";TEMP.BAL.OPEN = ""
FOR AD = 1 TO LINESS
  TOT.ORD = TOT.ORD + PO.JB.ONORD<1,LNP,AD>
  TOT.REC = TOT.REC + PO.JB.RECEVED<1,LNP,AD>
  TOT.OPEN = TOT.OPEN + PO.JB.OPEN<1,LNP,AD>
NEXT AD
1030*
BAL.ORD = PO.TOT.ONORD<1,LNP> - PO.TOT.CANCEL<1,LNP> - TOT.ORD
BAL.REC = (PO.TOT.RECEVED<1,LNP> + PO.PREV.RECEVED<1,LNP>) - TOT.REC
BAL.OPEN = PO.QTY.OPEN<1,LNP> - TOT.OPEN
IF ICR.CNV = "MD0" THEN
  TEMP.TOT.ORD = INT(((TOT.ORD/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5)
  TEMP.TOT.REC = INT(((TOT.REC/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
  TEMP.TOT.OPEN = INT(((TOT.OPEN/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
  TEMP.BAL.ORD = INT(((BAL.ORD/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
  TEMP.BAL.REC = INT(((BAL.REC/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
  TEMP.BAL.OPEN = INT(((BAL.OPEN/ICR.DV1)*ICR.MT1)/ICR.DV2 + .5) 
END ELSE
  TEMP.TOT.ORD = OCONV(INT(TOT.ORD/10), "MD2") 
  TEMP.TOT.REC = OCONV(INT(TOT.REC/10), "MD2") 
  TEMP.TOT.OPEN = OCONV(INT(TOT.OPEN/10), "MD2") 
  TEMP.BAL.ORD = OCONV(INT(BAL.ORD/10), "MD2") 
  TEMP.BAL.REC = OCONV(INT(BAL.REC/10), "MD2") 
  TEMP.BAL.OPEN = OCONV(INT(BAL.OPEN/10), "MD2") 
END
STRXML := "<JobTotalOrderedQuantity>":TEMP.TOT.ORD:"</JobTotalOrderedQuantity>"
STRXML := "<JobTotalReceivedQuantity>":TEMP.TOT.REC:"</JobTotalReceivedQuantity>"
STRXML := "<JobTotalOpenedQuantity>":TEMP.TOT.OPEN:"</JobTotalOpenedQuantity>"
STRXML := "<JobTotalBalanceQuantity>":TEMP.BAL.ORD:"</JobTotalBalanceQuantity>"
STRXML := "<JobBalanceReceivedQuantity>":TEMP.BAL.REC:"</JobBalanceReceivedQuantity>"
STRXML := "<JobBalanceOpenedQuantity>":TEMP.BAL.OPEN:"</JobBalanceOpenedQuantity>"
RETURN
DUPE.SUB: 
*
*   ECD.NUM = 54
*   ECD.ACTION = 4 ; CALL SCRN.EDIT
*   IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1
ECD.RET.VALUE = FIELD(REQ.NO,"!",2)
   MATREAD PO.REC FROM REG.REQ, CONO:ECD.RET.VALUE ELSE
      ERRMSG = 'Requisition # entered not on file'
      GOTO 93000
   END
*   USER= USER.ID; DIV.OWNER = PO.DIV.OWNER; APP.REQ.ID = ""
*   CALL CHECK.ACTIVE.STATUS (CONO,USER,DIV.OWNER,RET.FLAG,MAT APP.REQ.REC,APP.REQ.ID,YYY)
*   ECD.NUM = 55
*   ECD.ACTION = 4 ; CALL SCRN.EDIT
ECD.RET.VALUE = FIELD(REQ.NO<1,1>,"!",3)
   PO.CODE = ECD.RET.VALUE
   MATREAD PO.REC FROM PO, CONO:PO.CODE THEN
      IF MENU.FLAG = "R" THEN
         ERRMSG = "PO with number ":PO.CODE: " already exists"
         RELEASE PO,CONO:PO.CODE
         GOTO 93000
      END
      PORDER = 1; * this is a purchase order since found in PO file
   END ELSE
      READ REC FROM SLIT.TRANS, CONO:PO.CODE THEN
         ERRMSG='Slit transaction already exists with this number'
         RELEASE SLIT.TRANS, CONO:PO.CODE
	 GOTO 93000
      END ELSE
         RELEASE SLIT.TRANS, CONO:PO.CODE
         IF CO.PO.REQ.FLAG = "Y" THEN
            MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
               IF MENU.FLAG = "P" THEN
                  ERRMSG = "Requisition with number ":PO.CODE:" already exists"
                  RELEASE REG.REQ,CONO:PO.CODE
                  GOTO 93000
               END
               REQ = 1 ; * this is still requisition 
            END 
         END
      END
      IF INDEX(PO.CODE,"S",1) THEN
         LENPO = LEN(PO.CODE)
         NPOCODE = PO.CODE[1,LENPO-1]
         IF NPOCODE # "" AND NUM(NPOCODE) THEN
            ERRMSG=PO.CODE:" is not allowed. Could be a Slit Trans Key."
            GOTO 93000
         END
      END
      IF REQ THEN
         MATREAD PO.REC FROM REG.REQ, CONO:PO.CODE THEN
            ERRMSG='Requisition with number ':PO.CODE:' already exists'
            GOTO 93000
         END
      END
   END
   IF PO.CODE = 'N' THEN
      PO.STATUS = 'Entered'
   END ELSE
      PO.STATUS = ''
   END
*T25854 ^
MATREAD APP.REQ.REC FROM APP.REQ,CONO:USER.ID:"!":PO.DIV.OWNER ELSE MAT APP.REQ.REC = ""
   PO.ST.DATE = DATE()
   PO.PREV.APP = USER.ID
   PO.WRIT.BY = APP.NAME<1>
   PO.DATE = DATE()
   PO.APPROVER = ''
   PO.APP.LEVEL = ''
   PO.PREV.APP = ''
   PO.LEVEL.STATUS = ''
   IF PO.CODE = 'N' THEN NEW = 1
   REQ = 1
   *GOSUB 1000
   *ECD.ACTION = 3 ; CALL SCRN.EDIT
   *GOTO 90
   RETURN
*T040609 ^
93000*
*T040609 v
WRITE "ERRMSG  ":ERRMSG ON CONTROL,'01YAA'
IF MENU.FLAG = "R" THEN
STRXML = "<Payload><Requisition><ErrMsg>": ERRMSG:"</ErrMsg></Requisition></Payload>"
END ELSE
STRXML = "<Payload><RPO><ErrMsg>": ERRMSG:"</ErrMsg></RPO></Payload>"
END
END
*T040609 ^
