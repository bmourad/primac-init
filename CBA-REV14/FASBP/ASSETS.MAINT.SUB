  SUBROUTINE ASSETS.MAINT.SUB
*COPY>CPYLIB>COM1
*COPY>FAS.CPYLIB>COM.ASSETS
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - FASBP
* PROGRAM     - ASSETS.MAINT.SUB
* BY          - Ziad Yamout, Vercom Software, Inc.
* DATE        - 09/25/88
* DESCRIPTION - Fixed Assets Maintenance Program
* TASK
*     18573 6/95 LLH 1-52 WEEK ACCOUNTING
*
*T23278 markt 10/29/1998 * Add check for divisional security
*C35977 cm 03/21/2000 * Correct unitialized variable error message.
*T26126 adelgado 02/25/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*--- Data structure libraries
*
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>SALESDATES ; ** T23278
*COPY>FAS.CPYLIB>FAS.FILE.VARS
*COPY>FAS.CPYLIB>ASSETS
*COPY>FAS.CPYLIB>ASSETS.DEPR
*COPY>FAS.CPYLIB>DEP.MAST
*COPY>FAS.CPYLIB>CLASS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
***** T23278 v
*
  MATREAD FISCAL.REC FROM CONTROL, CONO:"FAFISCAL" ELSE
    ERRMSG = "Cannot locate Fixed Assets period"
    GOSUB 91000; GOTO 99999
  END
*
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    ERRMSG = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"
    GOTO 93000
  END
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
    GOTO 93000
  END
*
  MATREAD SALESDATES.REC FROM CONTROL, CONO:"SALESDATES" ELSE
    ERRMSG = "Need to setup sales dates table"
    GOSUB 91000; GOTO 99999
  END
*
***** T23278 ^
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
    PERIOD.REC = ""; PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
  DIM M.AST.REC(50)
  DIM BT.REC(30,2)
  DIM O.YRS(3,2)
*--- Setup GEN.XREF subroutine
*
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GXR.ATT<1,1> = 0
  GXR.LEN<1,2> = 30
*
*--- Initialization
  ESN = ECD.SCRN.NO
  MAT D.REC = ''
  B.T = "B"; B.T<2> = "T"
  G.DV = "00"; G.DP = "00"; G.CC = "000"
*
*--- Enter ASSET number
100*
  MAT ERR.FLG = 0; MAT SCV.REC = ""
  ECD.ACTION = 6; CALL SCRN.EDIT
  ECD.NUM = 1
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 99999
  MAT DSP.YRS = 0; CUR.YR = ""; CUR.MN = ""
  AST.NUM = ECD.RET.VALUE; AST.ID = CONO : AST.NUM
  * T26126 v
  MATREADU AST.REC FROM ASSETS, AST.ID LOCKED
    ERRMSG = 'ASSET record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 100 
  END THEN
  * T26126 ^
*T23278 v
    DIV.CODE = AST.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
    CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 100
    END
    GOSUB 5500
*T23278 ^
    SCV.REC(1) = AST.NUM
    MATREAD CLS.REC FROM CLASS,CONO:AST.CLASS ELSE
      CLS.DESC = "UNKNOWN"
    END
    SCV.REC(2) = AST.DESC
    SCV.REC(3) = AST.CLASS
    SCV.REC(4) = CLS.DESC
    SCV.REC(54) = NUM.PERIODS
    SCV.REC(55) = NUM.PERIODS
    IF AST.DIV = G.DV THEN
      MAT DIV.REC = ""; DIV.DESC = "General Division"
      MAT DEPT.REC = ""
      MAT CCTR.REC = ""; CCTR.DESC = "General Cost Center"
    END ELSE
      MATREAD DIV.REC FROM DIVISION,CONO:AST.DIV ELSE
        MAT DIV.REC = ""; DIV.DESC = "UNKNOWN"
      END
      IF AST.DEPT = G.DP THEN
        MAT DEPT.REC = ""
        MAT CCTR.REC = ""; CCTR.DESC = "General Cost Center"
      END ELSE
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:AST.DEPT ELSE
          MAT DEPT.REC = ""
        END
        IF AST.CCTR = G.CC THEN
          MAT CCTR.REC = ""; CCTR.DESC = "General Cost Center"
        END ELSE
          MATREAD CCTR.REC FROM COST.CNTR,CONO:AST.CCTR ELSE
            MAT CCTR.REC = ""; CCTR.DESC = "UNKNOWN"
          END
        END
      END
    END
    SCV.REC(5) = AST.DIV
    SCV.REC(6) = DIV.DESC
    SCV.REC(7) = AST.DEPT
    SCV.REC(8) = AST.CCTR
    SCV.REC(9) = CCTR.DESC
    SCV.REC(10) = AST.VEND<1,1>
    SCV.REC(11) = AST.VEND<1,2>
    SCV.REC(12) = AST.SERIAL
    SCV.REC(13) = AST.ACQUIRE.DATE
    SCV.REC(14) = AST.MASTER
    SCV.REC(15) = AST.INSTALL.COST
    SCV.REC(16) = AST.LOC
    SCV.REC(17) = AST.AUTO.POST
    SCV.REC(18) = AST.OLD.NEW
    IF AST.OLD.NEW = "N" THEN
      SCV.REC(19) = "NEW"
    END ELSE
      SCV.REC(19) = "USED"
    END
    SCV.REC(20) = AST.EQP.REC
    ERRMSG = ""
    FOR BT = 1 TO 2 WHILE ERRMSG = ""
      SCV.REC(24+BT) = AST.DEPR.METHOD<1,BT>
      MATREAD DEPR.REC FROM DEP.MAST,CONO:AST.DEPR.METHOD<1,BT> THEN
        FOR I = 1 TO 30
          BT.REC(I,BT) = DEPR.REC(I)
        NEXT I
        SCV.REC(26+BT) = DEPR.DESC
        ADJ = 2 * BT - 1
        SCV.REC(28+ADJ) = AST.YEARS<1,BT>[1,2] + 0
        SCV.REC(29+ADJ) = AST.YEARS<1,BT>[3,2] + 0
        SCV.REC(32+BT) = AST.UNITS<1,BT>
        SCV.REC(34+BT) = AST.DEPR.DATE<1,BT>
        SCV.REC(39+ADJ) = AST.FST.PER<1,BT>
        SCV.REC(40+ADJ) = AST.LST.PER<1,BT>
        GOSUB 5200; GOSUB 5300
        SCV.REC(43+ADJ) = CUR.YR<BT>
        SCV.REC(44+ADJ) = CUR.MN<BT>
        FST.YR = AST.FST.PER<1,BT>[1,4] - 1
        BEGIN CASE
          CASE AST.LST.PER<1,BT> > 0
            DSP.YRS(BT) = AST.LST.PER<1,BT>[1,4] - FST.YR
          CASE AST.FISCAL.MON[1,4] > FST.YR
            DSP.YRS(BT) = AST.FISCAL.MON[1,4] - FST.YR
        END CASE
        FOR I = 1 TO DSP.YRS(BT)
          ADR.ID = AST.ID : B.T<BT> : FST.YR + I
          READ D.REC(I,BT) FROM ASSETS.DEPR, ADR.ID ELSE
            D.REC(I,BT) = ""
          END
        NEXT I
        O.YRS(1,BT) = AST.FST.PER<1,BT>[1,4]
        O.YRS(2,BT) = AST.LST.PER<1,BT>[1,4]
      END ELSE
        RELEASE ASSETS, AST.ID
        ERRMSG = "Cannot locate depreciation method - ":AST.DEPR.METHOD<1,BT>
      END
    NEXT BT
    IF ERRMSG # "" THEN GOSUB 91000; GOTO 100
    ECD.ACTION = 3; CALL SCRN.EDIT
    ONFILE = 1
    GOSUB 9100; GOSUB 9200
    FOR BT = 1 TO 2
      ADJ = BT * 2 - 1; GOSUB 9300
    NEXT BT
  END ELSE
*C35977       GOSUB 9100
    MAT AST.REC = ""; MAT O.YRS = ""; ONFILE = 0
    FOR OPTION = 1 TO 11 WHILE ECD.RET.VALUE # "END"
      ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100
    NEXT OPTION
    IF ECD.RET.VALUE = "END" THEN GOTO 100
    FOR BT = 1 TO 2 WHILE ECD.RET.VALUE # "END"
      ADJ = BT * 2 - 1; GOSUB 3100
      IF ECD.RET.VALUE # "END" THEN
        IF ECD.RET.VALUE[1,1] = "U" THEN GOSUB 3300 ELSE GOSUB 3200
        IF ECD.RET.VALUE # "END" THEN GOSUB 3400
      END
    NEXT BT
    IF ECD.RET.VALUE = "END" THEN GOTO 100
    ECD.SCRN.NO = ECD.SCRN.NO + 1
    ECD.ACTION = 2; CALL SCRN.EDIT
    CALL ASSETS.YTD.SUB
    IF ONFILE = "END" THEN
      ECD.SCRN.NO = ECD.SCRN.NO - 1
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOTO 100
    END
    ECD.SCRN.NO = ECD.SCRN.NO + 1
    ECD.ACTION = 2; CALL SCRN.EDIT
    CALL ASSETS.HIST.SUB
    ECD.SCRN.NO = ECD.SCRN.NO - 2
    ECD.ACTION = 2; CALL SCRN.EDIT
    IF ONFILE = "END" THEN GOTO 100
    ECD.ACTION = 3; CALL SCRN.EDIT
  END
  ONFILE = ONFILE + 1
  O.MASTER = AST.MASTER
*--- Prompt line
*
  LOOP
    ECD.NUM = 50; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E" OR OPTION = ""
        OPTION = "END"
        RELEASE ASSETS, AST.ID
      CASE OPTION = "B"
        BT = 1; ADJ = 1
        GOSUB 3000
      CASE OPTION = "T"
        BT = 2; ADJ = 3
        GOSUB 3000
      CASE OPTION = "Y"
        ECD.SCRN.NO = ESN + 1
        ECD.ACTION = 2; CALL SCRN.EDIT
        CALL ASSETS.YTD.SUB
        ECD.SCRN.NO = ESN
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
      CASE OPTION = "H"
        ECD.SCRN.NO = ESN + 2
        ECD.ACTION = 2; CALL SCRN.EDIT
        CALL ASSETS.HIST.SUB
        ECD.SCRN.NO = ESN
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
      CASE OPTION = "I"
        IF DSP.YRS(1) + DSP.YRS(2) < 1 THEN
          ERRMSG = "There is no available Book & Tax depreciation"
          GOSUB 91000
        END ELSE
          ECD.SCRN.NO = ESN + 3
          ECD.ACTION = 2; CALL SCRN.EDIT
          CALL ASSETS.INQ.SUB
          ECD.SCRN.NO = ESN
          ECD.ACTION = 2; CALL SCRN.EDIT
          ECD.ACTION = 3; CALL SCRN.EDIT
        END
      CASE OPTION = "F"
        ERRMSG = ""
        FOR BT = 1 TO 2 WHILE ERRMSG = ""
          BEGIN CASE
            CASE ERR.FLG(BT)
              ERRMSG = "Please double check the (":B.T<BT>:") depreciation method & calculation"
            CASE AST.FST.PER<1,BT> < 1
              ERRMSG = "The (":B.T<BT>:") depreciation first period is not setup"
            CASE AST.DEPR.METHOD<1,BT>[1,1] = "U"
              IF AST.UNITS<1,BT> < 1 THEN
                ERRMSG = "The (":B.T<BT>:") depreciation units are not setup"
              END
            CASE AST.LST.PER<1,BT> < 1
              ERRMSG = "The (":B.T<BT>:") depreciation last period is not setup"
          END CASE
        NEXT BT
        IF ERRMSG # "" THEN
          GOSUB 91000; GOTO 510
        END
        O.B.PER = ""
        FOR BT = 1 TO 2 WHILE O.B.PER # "END"
          IF AST.BONUS.FLG<1,BT> = "Y" THEN
            O.B.PER = AST.BONUS.PER<1,BT>; CALL ASSETS.BONUS.SUB
          END
        NEXT BT
        IF O.B.PER = "END" THEN GOTO 510
        IF AST.DEPT # G.DP THEN
          LOCATE AST.DIV IN DEPT.DIV<1> SETTING FND ELSE
            ERRMSG = "Invalid Department for division - ":AST.DIV
            GOSUB 91000; GOTO 510
          END
          IF AST.CCTR # G.CC AND CCTR.DEPT # AST.DEPT THEN
            ERRMSG = "Invalid Cost Center for department - ":AST.DEPT
            GOSUB 91000; GOTO 510
          END
        END
        IF ONFILE > 1 AND O.MASTER # AST.MASTER THEN GOSUB 600
        IF AST.MASTER # AST.NUM THEN
          O.MASTER = AST.MASTER; MAT M.AST.REC = MAT AST.REC
          MATREADU AST.REC FROM ASSETS, CONO:O.MASTER ELSE
            RELEASE ASSETS, CONO:O.MASTER
            ERRMSG = "Cannot locate master asset # ":O.MASTER
            MAT AST.REC = MAT M.AST.REC; GOSUB 91000; GOTO 510
          END
          IF AST.MASTER # O.MASTER THEN
            RELEASE ASSETS, CONO:O.MASTER
            ERRMSG = "Asset # ":O.MASTER:" is a sub asset for master # ":AST.MASTER
            MAT AST.REC = MAT M.AST.REC; GOSUB 91000; GOTO 510
          END
          LOCATE AST.NUM IN AST.SUBS,1 SETTING FND ELSE
            AST.SUBS<1,FND> = AST.NUM
          END
          MATWRITE AST.REC ON ASSETS, CONO:O.MASTER
          MAT AST.REC = MAT M.AST.REC
        END
        MATWRITE AST.REC ON ASSETS, AST.ID
        FOR BT = 1 TO 2
          FST.YR = AST.FST.PER<1,BT>[1,4]
          LST.YR = AST.LST.PER<1,BT>[1,4]
          FOR YR = FST.YR TO LST.YR
            I = YR - FST.YR + 1
            FOR J = 1 TO 104
              ADR.REC(J) = D.REC(I,BT)<J>
            NEXT J
            ADR.ID = AST.ID : B.T<BT> : YR
            MATWRITE ADR.REC ON ASSETS.DEPR, ADR.ID
          NEXT YR
          IF O.YRS(1,BT) THEN
            LIMIT = FST.YR - 1
            FOR YR = O.YRS(1,BT) TO LIMIT
              ADR.ID = AST.ID : B.T<BT> : YR
              MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID THEN
                DELETE ASSETS.DEPR, ADR.ID
              END ELSE
                RELEASE ASSETS.DEPR, ADR.ID
              END
            NEXT YR
          END
          IF O.YRS(2,BT) THEN
            IF LST.YR THEN
              LIMIT = LST.YR + 1
            END ELSE
              IF AST.FISCAL.MON THEN
                LIMIT = AST.FISCAL.MON[1,4] + 1
              END ELSE
                LIMIT = O.YRS(2,BT) + 1
              END
            END
            FOR YR = LIMIT TO O.YRS(2,BT)
              ADR.ID = AST.ID : B.T<BT> : YR
              MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID THEN
                DELETE ASSETS.DEPR, ADR.ID
              END ELSE
                RELEASE ASSETS.DEPR, ADR.ID
              END
            NEXT YR
          END
        NEXT BT
        OPTION = "END"
510*
      CASE OPTION = "D"
        BEGIN CASE
          CASE AST.FISCAL.MON AND (AST.FISCAL.MON >= AST.FST.PER<1,1> OR AST.FISCAL.MON >= AST.FST.PER<1,2>)
            ERRMSG = "Asset has already been updated by End Of Month"
            GOSUB 91000; GOTO 520
          CASE ONFILE < 2
            ERRMSG = "Asset has not been filed yet"
            GOSUB 91000; GOTO 520
        END CASE
        ECD.NUM = 52; SCV.REC(ECD.NUM)<ESN> = ""
        ECD.ACTION = 4; CALL SCRN.EDIT
        IF ECD.RET.VALUE # "Y" THEN GOTO 520
        IF O.MASTER # AST.MASTER THEN GOSUB 600
        DELETE ASSETS, AST.ID
        FOR BT = 1 TO 2
          IF O.YRS(2,BT) < 1 THEN
            IF AST.FISCAL.MON THEN
              O.YRS(2,BT) = AST.FISCAL.MON[1,4]
            END ELSE
              O.YRS(2,BT) = O.YRS(1,BT) - 1
            END
          END
          FOR YR = O.YRS(1,BT) TO O.YRS(2,BT)
            ADR.ID = AST.ID : B.T<BT> : YR
            MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID THEN
              DELETE ASSETS.DEPR, ADR.ID
            END ELSE
              RELEASE ASSETS.DEPR, ADR.ID
            END
          NEXT YR
        NEXT BT
        READU DUMMY FROM EQUIP.FILE, AST.ID THEN
          DELETE EQUIP.FILE, AST.ID
        END ELSE
          RELEASE EQUIP.FILE, AST.ID
        END
        OPTION = "END"
520*
      CASE NOT(NUM(OPTION))
        ERRMSG = "*** Invalid selection ***"; GOSUB 91000
      CASE OPTION = 2 AND ONFILE > 1
        ERRMSG = "Cannot change the class code"; GOSUB 91000
      CASE OPTION > 0 AND OPTION < 14
        ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300
      CASE 1
        ERRMSG = "*** Out of range ***"; GOSUB 91000
    END CASE
  WHILE OPTION # "END" DO REPEAT
  GOTO 100
*--- Delink sub asset from master
600*
  MAT M.AST.REC = MAT AST.REC
  MATREADU AST.REC FROM ASSETS, CONO:O.MASTER THEN
    LOCATE AST.NUM IN AST.SUBS,1 SETTING FND THEN
      AST.SUBS = DELETE(AST.SUBS,1,FND,0)
    END
    MATWRITE AST.REC ON ASSETS, CONO:O.MASTER
  END ELSE
    RELEASE ASSETS, CONO:O.MASTER
  END
  MAT AST.REC = MAT M.AST.REC
  RETURN
*--- Asset description
1100*
  ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    AST.DESC = ECD.RET.VALUE
    GOSUB 9200
  END
  RETURN
*--- Class
1200*
  ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1209
    CASE ECD.RET.VALUE = ""
      ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "" THEN GOTO 1200
      GXR.XREF = CLASS.XREF; GXR.FILE = CLASS
      GXR.TOP.LINE = "Class cross reference search"
      GXR.HEADING<1,1> = "Class"
      GXR.HEADING<1,2> = "Class Description"
      GXR.ATT<1,2> = 1; GXR.LEN<1,1> = 6; GXR.LOC = 1
      GXR.ID = ""; GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        ECD.ACTION = 3; CALL SCRN.EDIT
        GOTO 1200
      END
      ECD.NUM = 3; SCV.REC(ECD.NUM)<1> = GXR.ID
      ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD CLS.REC FROM CLASS, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate class code - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1200
  END
  TEMP = AST.CLASS; AST.CLASS = ECD.RET.VALUE
  ECD.NUM = 4; SCV.REC(ECD.NUM)<1> = CLS.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
  IF ONFILE AND TEMP # AST.CLASS THEN
    ECD.NUM = 53; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "Y" THEN GOTO 1209
  END
  AST.AUTO.POST = CLS.GL.POST
  ECD.NUM = 17; SCV.REC(ECD.NUM)<ESN> = AST.AUTO.POST
  ECD.ACTION = 5; CALL SCRN.EDIT
  AST.EQP.REC = CLS.EQUIP
  ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = AST.EQP.REC
  ECD.ACTION = 5; CALL SCRN.EDIT
  AST.DEPR.ALLOW = CLS.ALW.ACCT
  AST.DEPR.EXP = CLS.EXP.ACCT
1209*
  RETURN
*--- Division
1300*
  ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1309
    CASE ECD.RET.VALUE = G.DV
*T23278 v
      DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 1300
      END
      GOSUB 5500
*T23278 ^
      AST.DIV = G.DV; AST.DEPT = G.DP; AST.CCTR = G.CC
      MAT DIV.REC = ""; DIV.DESC = "General Division"
      MAT DEPT.REC = ""
      MAT CCTR.REC = ""; CCTR.DESC = "General Cost Center"
      ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = DIV.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = AST.DEPT
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 8; SCV.REC(ECD.NUM)<1> = AST.CCTR
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = CCTR.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1309
    CASE ECD.RET.VALUE = ""
      GXR.XREF = CONTROL; GXR.FILE = DIVISION
      GXR.TOP.LINE = "Division cross reference search"
      GXR.HEADING<1,1> = "Dv"
      GXR.HEADING<1,2> = "Division Description"
      GXR.ATT<1,2> = 1; GXR.LEN<1,1> = 2; GXR.LOC = 1
      GXR.ID = ""; GXR.SRCH.ID = "DIVISIONS"
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(5)<1> = ""; SCV.REC(6)<1> = ""
        ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 1300
      END
      SCV.REC(5)<1> = GXR.ID; ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate Division - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1300
  END
*T23278 v
  DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    GOSUB 91000; GOTO 1300
  END
  GOSUB 5500
*T23278 ^
  AST.DIV = ECD.RET.VALUE
  ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = DIV.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
1305*
  ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1300
    CASE ECD.RET.VALUE = G.DP
      AST.DEPT = G.DP; AST.CCTR = G.CC
      MAT DEPT.REC = ""
      MAT CCTR.REC = ""; CCTR.DESC = "General Cost Center"
      ECD.NUM = 8; SCV.REC(ECD.NUM)<1> = AST.CCTR
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = CCTR.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1309
    CASE ECD.RET.VALUE = ""
      GXR.XREF = DIVISION; GXR.FILE = DEPARTMENT
      GXR.TOP.LINE = "Department cross reference search"
      GXR.HEADING<1,1> = "Dept"
      GXR.HEADING<1,2> = "Department Description"
      GXR.ATT<1,2> = 2; GXR.LEN<1,1> = 5; GXR.LOC = 2
      GXR.ID = ""; GXR.SRCH.ID = AST.DIV
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(7)<1> = ""
        ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 1305
      END
      ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = GXR.ID
      ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate Department - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1305
  END
  LOCATE AST.DIV IN DEPT.DIV<1> SETTING FND ELSE
    ERRMSG = "Invalid Department for division - ":AST.DIV
    GOSUB 91000; GOTO 1305
  END
  AST.DEPT = ECD.RET.VALUE
1309*
  RETURN
*--- Cost Center
1400*
  ECD.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1409
    CASE ECD.RET.VALUE = G.CC
      AST.CCTR = G.CC; MAT CCTR.REC = ""
      CCTR.DESC = "General Cost Center"
      ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = CCTR.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1409
    CASE ECD.RET.VALUE = ""
      GXR.XREF = DEPARTMENT; GXR.FILE = COST.CNTR
      GXR.TOP.LINE = "Cost Center cross reference search"
      GXR.HEADING<1,1> = "Ctr"
      GXR.HEADING<1,2> = "Cost Center Description"
      GXR.ATT<1,2> = 1; GXR.LEN<1,1> = 3; GXR.LOC = 5
      GXR.ID = ""; GXR.SRCH.ID = AST.DEPT
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(8)<1> = ""; SCV.REC(9)<1> = ""
        ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 1400
      END
      ECD.NUM = 8; SCV.REC(ECD.NUM)<1> = GXR.ID
      ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate Cost Center - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1400
  END
  IF CCTR.DEPT # AST.DEPT THEN
    ERRMSG = "Invalid Cost Center for department - ":AST.DEPT
    GOSUB 91000; GOTO 1400
  END
  IF CCTR.TYPE = "F" THEN
    ERRMSG = "Cost Center ":GXR.ID:" is frozen"
    GOSUB 91000; GOTO 1400
  END
  AST.CCTR = ECD.RET.VALUE
  ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = CCTR.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
1409*
  RETURN
*--- Vendor
1500*
  ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1509
    CASE ECD.RET.VALUE = "*V"
      TEMP = AST.VEND
      AST.VEND = ECD.RET.VALUE
      ECD.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
        AST.VEND = TEMP; GOTO 1500
      END
      AST.VEND<1,2> = ECD.RET.VALUE
      GOTO 1509
    CASE ECD.RET.VALUE = ""
      AST.VEND = ""
      ECD.NUM = 11; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1509
    CASE ECD.RET.VALUE = "???"
      ECD.NUM = 11
      ECD.HMSG = "Enter a keyword from the Vendor's name to initiate Cross Reference Search."
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1500
      GXR.XREF = VENDOR.XREF; GXR.FILE = VEND
      GXR.TOP.LINE<1,1> = "Vendor cross reference search"
      GXR.TOP.LINE<1,2> = "For string : ":ECD.RET.VALUE
      GXR.HEADING<1,1> = "Vendor #"
      GXR.HEADING<1,2> = "Vendor Name"
      GXR.ATT<1,2> = 1; GXR.LEN<1,1> = 8; GXR.LOC = 1
      GXR.ID = ""; GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(10)<ESN> = ""; SCV.REC(11)<ESN> = ""
        ECD.ACTION = 3; CALL SCRN.EDIT
        GOTO 1500
      END
      SCV.REC(10)<ESN> = GXR.ID
      ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD VEND.REC FROM VEND,CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate Vendor - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1500
  END
  AST.VEND = ECD.RET.VALUE
  ECD.NUM = 11; SCV.REC(ECD.NUM)<ESN> = VEND.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
  AST.VEND<1,2> = VEND.DESC
1509*
  RETURN
*--- Serial number
1600*
  ECD.NUM = 12; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN AST.SERIAL = ECD.RET.VALUE
  RETURN
*--- Master asset
1700*
  IF AST.MASTER = "" THEN ECD.DEFAULT = AST.NUM
  ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1709
    CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = AST.NUM
      AST.MASTER = AST.NUM
    CASE 1
      MAT M.AST.REC = MAT AST.REC
      MATREAD AST.REC FROM ASSETS, CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Cannot locate master asset # ":ECD.RET.VALUE
        MAT AST.REC = MAT M.AST.REC; GOSUB 91000; GOTO 1700
      END
      IF AST.MASTER # ECD.RET.VALUE THEN
        ERRMSG = "Asset # ":ECD.RET.VALUE:" is a sub asset for master # ":AST.MASTER
        MAT AST.REC = MAT M.AST.REC; GOSUB 91000; GOTO 1700
      END
      MAT AST.REC = MAT M.AST.REC
      AST.MASTER = ECD.RET.VALUE
  END CASE
1709*
  RETURN
*--- Location
1800*
  ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN AST.LOC = ECD.RET.VALUE
  RETURN
*--- New or Used
1900*
  ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 1909
  AST.OLD.NEW = ECD.RET.VALUE
  ECD.NUM = 19
  IF AST.OLD.NEW = "N" THEN
    SCV.REC(ECD.NUM)<ESN> = "NEW"
  END ELSE
    SCV.REC(ECD.NUM)<ESN> = "USED"
  END
  ECD.ACTION = 5; CALL SCRN.EDIT
1909*
  RETURN
*--- Acquire date
2000*
  ECD.NUM = 13; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2009
  FOR BT = 1 TO 2 WHILE ECD.RET.VALUE # "END"
    IF ONFILE AND ECD.RET.VALUE > AST.DEPR.DATE<1,BT> THEN
      ERRMSG = "Acquire date should be greater than depreciation date"
      GOSUB 91000; ECD.RET.VALUE = "END"
    END
  NEXT BT
  IF ECD.RET.VALUE = "END" THEN GOTO 2000
  AST.ACQUIRE.DATE = ECD.RET.VALUE
2009*
  RETURN
*--- Asset cost
2100*
  ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN AST.INSTALL.COST = ECD.RET.VALUE
  RETURN
*--- Auto post
2200*
  ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN AST.AUTO.POST = ECD.RET.VALUE
  RETURN
*--- Equipment record
2300*
  ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN AST.EQP.REC = ECD.RET.VALUE
  RETURN
*
*--- Depreciation methods prompt
3000*
  FOR I = 1 TO 30
    DEPR.REC(I) = BT.REC(I,BT)
  NEXT I
  LOOP
    ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    RESPOND = ECD.RET.VALUE
    BEGIN CASE
      CASE RESPOND = "END" OR RESPOND = "" OR RESPOND = "E"
        RESPOND = "END"
      CASE NOT(NUM(RESPOND))
        ERRMSG = "*** Invalid selection ***"; GOSUB 91000
      CASE RESPOND > 0 AND RESPOND < 24
        RESPOND = RESPOND - 19
        ON RESPOND GOSUB 3100,3200,3300,3400
      CASE RESPOND > 119 AND RESPOND < 124
        RESPOND = RESPOND - 119
        ON RESPOND GOSUB 3100,3200,3300,3400
      CASE 1
        ERRMSG = "*** Out of range ***"; GOSUB 91000
    END CASE
  WHILE RESPOND # "END" DO REPEAT
  RETURN
*--- Depreciation method (BOOK & TAX)
3100*
  IF AST.FISCAL.MON # "" THEN
    TEMP.MN = AST.FISCAL.MON[5,2] + 1
    IF TEMP.MN > NUM.PERIODS THEN TEMP.MN = 1
    TEMP.MN = STR("0",2-LEN(TEMP.MN)):TEMP.MN
  END ELSE
    TEMP.MN = ""
  END
  IF AST.FST.PER<1,BT>[5,2] # TEMP.MN AND TEMP.MN # "" THEN
    ERRMSG = "CURRENT MONTH IS NOT THE SAME AS FIRST MONTH OF DEPRECIATION"
    GOSUB 91000
    GOTO 3199
  END
  IF AST.DEPR.METHOD<1,BT> = "" AND AST.DEPR.METHOD<1,1> # "" THEN
    ECD.DEFAULT = AST.DEPR.METHOD<1,1>
  END
  ECD.NUM = 24 + BT; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 3199
    CASE ECD.RET.VALUE = ""
      GOTO 3100
  END CASE
  MATREAD DEPR.REC FROM DEP.MAST,CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate depreciation method - ":ECD.RET.VALUE
    GOSUB 91000; GOTO 3100
  END
  TEMP = AST.DEPR.METHOD<1,BT>
  TEMP1 = AST.YEARS<1,BT>; TEMP2 = AST.UNITS<1,BT>
  TEMP3 = AST.FST.PER<1,BT>; TEMP4 = AST.LST.PER<1,BT>
  AST.DEPR.METHOD<1,BT> = ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE[1,1] = "U"
      AST.YEARS<1,BT> = ""; AST.LST.PER<1,BT> = ""
    CASE DEPR.MAX.YRS + DEPR.MAX.PER > 0
      AST.UNITS<1,BT> = ""
      AST.YEARS<1,BT> = (DEPR.MAX.YRS "R%2") : (DEPR.MAX.PER "R%2")
    CASE 1
      AST.UNITS<1,BT> = ""
  END CASE
  BEGIN CASE
    CASE NOT(ONFILE)
      GOTO 3150
    CASE NOT(AST.FISCAL.MON) OR AST.FISCAL.MON < AST.FST.PER<1,BT>
      GOSUB 5000
      IF ERRMSG # "" THEN GOTO 3140
    CASE 1
      FST.PER = AST.FST.PER<1,BT>
  END CASE
  GOSUB 5100
  IF ERRMSG # "" THEN GOTO 3140
  CALL ASSETS.DEPR.SUB
  IF ERR.FLG(BT) THEN GOTO 3140
  GOSUB 5300; GOSUB 5400; GOTO 3150
3140*
  AST.DEPR.METHOD<1,BT> = TEMP
  AST.YEARS<1,BT> = TEMP1; AST.UNITS<1,BT> = TEMP2
  FST.PER = TEMP3; LST.PER = TEMP4
  GOSUB 5200; GOSUB 5005; GOSUB 5105; GOTO 3100
3150*
  FOR I = 1 TO 30
    BT.REC(I,BT) = DEPR.REC(I)
  NEXT I
  ECD.NUM = 26 + BT; SCV.REC(ECD.NUM)<ESN> = DEPR.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
  GOSUB 9300
  ECD.NUM = 28 + ADJ; SCV.REC(ECD.NUM)<1> = AST.YEARS<1,BT>[1,2] + 0
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 29 + ADJ; SCV.REC(ECD.NUM)<1> = AST.YEARS<1,BT>[3,2] + 0
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 32 + BT; SCV.REC(ECD.NUM)<1> = AST.UNITS<1,BT>
  ECD.ACTION = 5; CALL SCRN.EDIT
3199*
  RETURN
*--- Life years (BOOK & TAX)
3200*
  BEGIN CASE
    CASE AST.DEPR.METHOD<1,BT>[1,1] = "U"
      GOTO 3299
    CASE DEPR.MAX.YRS + DEPR.MAX.PER > 0
      GOTO 3299
  END CASE
  IF AST.YEARS<1,BT> = "" AND AST.YEARS<1,1> # "" THEN
    ECD.DEFAULT = AST.YEARS<1,1>[1,2] + 0
  END
3210*
  ECD.NUM = 28 + ADJ
  IF AST.YEARS<1,BT> = "" THEN SCV.REC(ECD.NUM)<1> = ""
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 3299
  YR = ECD.RET.VALUE "R%2"
  IF AST.YEARS<1,BT> = "" AND AST.YEARS<1,1> # "" THEN
    ECD.DEFAULT = AST.YEARS<1,1>[3,2] + 0; SCV.REC(29+ADJ)<1> = ""
  END
  ECD.NUM = 29 + ADJ
  IF AST.YEARS<1,BT> = "" THEN SCV.REC(ECD.NUM)<1> = ""
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 3210
  IF YR + ECD.RET.VALUE < 1 THEN
    ERRMSG = "Life years cannot be zero"; GOSUB 91000; GOTO 3210
  END
  TEMP = AST.YEARS<1,BT>; TEMP1 = AST.LST.PER<1,BT>
  AST.YEARS<1,BT> = YR : (ECD.RET.VALUE "R%2")
  IF NOT(ONFILE) THEN GOTO 3299
  FST.PER = AST.FST.PER<1,BT>
  GOSUB 5100
  IF ERRMSG # "" THEN GOTO 3290
  CALL ASSETS.DEPR.SUB
  IF ERR.FLG(BT) THEN GOTO 3290
  AST.UNITS<1,BT> = ""; GOTO 3299
3290*
  AST.YEARS<1,BT> = TEMP; LST.PER = TEMP1; GOSUB 5105; GOTO 3210
3299*
  RETURN
*--- Life units (BOOK & TAX)
3300*
  IF AST.DEPR.METHOD<1,BT>[1,1] # "U" THEN GOTO 3399
  ECD.MINV = AST.CUM.UNITS<1,BT>; ECD.MAXV = 999999999
  IF AST.UNITS<1,BT> = "" AND AST.UNITS<1,1> # "" THEN
    ECD.DEFAULT = AST.UNITS<1,1>
  END
  ECD.NUM = 32 + BT; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 3399
  IF ONFILE THEN
    CALL ASSETS.DEPR.SUB
    IF ERR.FLG(BT) THEN GOTO 3300
  END
  AST.UNITS<1,BT> = ECD.RET.VALUE
  AST.YEARS<1,BT> = ""; AST.LST.PER<1,BT> = ""
3399*
  RETURN
*--- Beginning depreciation date (BOOK & TAX)
3400*
  BEGIN CASE
    CASE AST.FISCAL.MON AND AST.FISCAL.MON >= AST.FST.PER<1,BT>
      GOTO 3409
    CASE AST.DEPR.DATE<1,BT> # ""
    CASE AST.DEPR.DATE<1,1> # ""
      ECD.DEFAULT = AST.DEPR.DATE<1,1>
    CASE AST.ACQUIRE.DATE # ""
      ECD.DEFAULT = AST.ACQUIRE.DATE
  END CASE
  ECD.NUM = 34 + BT; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 3409
  TEMP = AST.DEPR.DATE<1,BT>
  TEMP1 = AST.FST.PER<1,BT>; TEMP2 = AST.LST.PER<1,BT>
  AST.DEPR.DATE<1,BT> = ECD.RET.VALUE
  GOSUB 5000; IF ERRMSG # "" THEN GOTO 3405
  GOSUB 5100; IF ERRMSG # "" THEN GOTO 3405
  IF NOT(ONFILE) THEN GOTO 3409
  CALL ASSETS.DEPR.SUB
  IF ERR.FLG(BT) THEN GOTO 3405
  GOSUB 5300; GOSUB 5400; GOTO 3409
3405*
  AST.DEPR.DATE<1,BT> = TEMP
  FST.PER = TEMP1; LST.PER = TEMP2
  GOSUB 5005; GOSUB 5105
  IF ONFILE THEN GOSUB 5200; GOTO 3400
3409*
  RETURN
*--- Get first period
5000*
  ERRMSG = ""
  GOSUB 5200
  FST.MON = 0; PTR = NUM.PERIODS
  FOR I = 1 TO NUM.PERIODS WHILE FST.MON = 0
    IF M.D.Y<PTR,1> > M.D.Y<I,1> THEN
      PRIORXX = M.D.Y<I,1> - 1
    END ELSE
      PRIORXX = M.D.Y<PTR,1>
    END
    IF FST.MN > PRIORXX AND FST.MN <= M.D.Y<I,1> THEN
      FST.MON = I
    END
    PTR = I
  NEXT I
  IF FST.MON = 0 THEN
    ERRMSG = "Cannot locate the depreciation month in sales dates"
    GOSUB 91000; GOTO 5009
  END
  DIF.YRS = FST.YR - M.D.Y<FST.MON,3>
  FST.MON = 0; FYR.DATES = ""
*--- NOTE : Dates in the salesdates should be in ascending order
  FOR I = 1 TO NUM.PERIODS WHILE FST.MON = 0
    IF E.O.M<I> > M.D.Y<I,1> THEN
      FYR.DATES<I> = ICONV((M.D.Y<I,1>+1):"/1/":(M.D.Y<I,3> + DIF.YRS),"D/") - 1
    END ELSE
      FYR.DATES<I> = ICONV(M.D.Y<I,1>:"/":M.D.Y<I,2>:"/":(M.D.Y<I,3> + DIF.YRS),"D/")
    END
    IF AST.DEPR.DATE<1,BT> <= FYR.DATES<I> THEN
      FST.MON = I
    END
  NEXT I
  IF FST.MON = 0 THEN
    ERRMSG = "Cannot determine the period of the depreciation month"
    GOSUB 91000; GOTO 5009
  END
  BEGIN CASE
    CASE NOT(NUM(DEPR.ACQ.MON))
    CASE DEPR.ACQ.MON >= 0 AND FST.DATE(2,BT) >= DEPR.ACQ.MON
    CASE DEPR.ACQ.MON < 0 AND FST.DATE(2,BT) < ABS(DEPR.ACQ.MON)
    CASE 1
      FST.MON = FST.MON + 1
      IF FST.MON > NUM.PERIODS THEN
        FST.MON = 1
        DIF.YRS = DIF.YRS + 1
      END
  END CASE
  BEGIN CASE
    CASE DEPR.ACQ.FYR = "Y" AND DEPR.ACQ.YR < 1
      FST.MON = 1
      DIF.YRS = DIF.YRS + 1
    CASE DEPR.ACQ.FYR = "Y"
      FST.MON = 1
    CASE DEPR.ACQ.YR < 1
      DIF.YRS = DIF.YRS + 1
    CASE DEPR.ACQ.YR < NUM.PERIODS
      FST.MON = NUM.PERIODS+1 - DEPR.ACQ.YR
  END CASE
***** T23278 v
*  FST.PER = (FR.CURR.PER[1,4]+DIF.YRS):STR("0",2-LEN(FST.MON)):FST.MON
  FST.PER = (FR.CURR.PER<1,POS>[1,4]+DIF.YRS):STR("0",2-LEN(FST.MON)):FST.MON
***** T23278 ^
5005*
  AST.FST.PER<1,BT> = FST.PER
  ECD.NUM = 39 + ADJ; SCV.REC(ECD.NUM) = FST.PER
  ECD.ACTION = 5; CALL SCRN.EDIT
5009*
  RETURN
*--- Get last period
5100*
  ERRMSG = ""
  IF AST.YEARS<1,BT> < 1 THEN
    LST.PER = ""; GOTO 5105
  END
  LST.YR = FST.PER[1,4] + AST.YEARS<1,BT>[1,2] + 0
  LST.MON = FST.PER[5,2] - 1
  IF LST.MON < 1 THEN
    LST.MON = NUM.PERIODS
    LST.YR = LST.YR - 1
  END
  LST.MON = LST.MON + AST.YEARS<1,BT>[3,4] + 0
  IF LST.MON > NUM.PERIODS THEN
    LST.YR = LST.YR + 1
    LST.MON = LST.MON - NUM.PERIODS
  END
  LST.PER = LST.YR:STR("0",2-LEN(LST.MON)):LST.MON
  IF LST.PER <= AST.FISCAL.MON THEN
    ERRMSG = "Last period cannot be less than or equal to the last posted period"
    GOSUB 91000; GOTO 5109
  END
5105*
  AST.LST.PER<1,BT> = LST.PER
  ECD.NUM = 40 + ADJ; SCV.REC(ECD.NUM) = LST.PER
  ECD.ACTION = 5; CALL SCRN.EDIT
5109*
  RETURN
*
*--- Break out depr. date
5200*
  ODATE = OCONV(AST.DEPR.DATE<1,BT>,"D/")
  FST.MN = ODATE[1,2]
  FST.DATE(1,BT) = ODATE[4,2]
  FST.YR = ODATE[7,4]
  FST.DATE(2,BT) = 31
  LOOP WHILE FST.MN # OCONV(ICONV(FST.MN:"/":FST.DATE(2,BT):"/":FST.YR,"D/"),"D/")[1,2] DO
    FST.DATE(2,BT) = FST.DATE(2,BT) - 1
  REPEAT
  RETURN
*
*--- Get current year and month
5300*
  BEGIN CASE
    CASE AST.FST.PER<1,BT> < 1
      CUR.YR<BT> = 0; CUR.MN<BT> = 0
***** T23278 v
*      CASE FR.CURR.PER < AST.FST.PER<1,BT>
    CASE FR.CURR.PER<1,POS> < AST.FST.PER<1,BT>
***** T23278 ^
      CUR.YR<BT> = 0; CUR.MN<BT> = 0
    CASE 1
***** T23278 v
*          CUR.YR<BT> = FR.CURR.PER[1,4] - AST.FST.PER<1,BT>[1,4]
*          IF FR.CURR.PER[5,2] < AST.FST.PER<1,BT>[5,2] THEN
*              CUR.MN<BT> = 13 - AST.FST.PER<1,BT>[5,2] + FR.CURR.PER[5,2]
      CUR.YR<BT> = FR.CURR.PER<1,POS>[1,4] - AST.FST.PER<1,BT>[1,4]
      IF FR.CURR.PER<1,POS>[5,2] < AST.FST.PER<1,BT>[5,2] THEN
        CUR.MN<BT> = NUM.PERIODS+1 - AST.FST.PER<1,BT>[5,2] + FR.CURR.PER<1,POS>[5,2]
***** T23278 ^
      END ELSE
        CUR.YR<BT> = CUR.YR<BT> + 1
***** T23278 v
*              CUR.MN<BT> = FR.CURR.PER[5,2] - AST.FST.PER<1,BT>[5,2] + 1
        CUR.MN<BT> = FR.CURR.PER<1,POS>[5,2] - AST.FST.PER<1,BT>[5,2] + 1
***** T23278 ^
      END
  END CASE
  RETURN
5400*
  ECD.NUM = 43 + ADJ; SCV.REC(ECD.NUM) = CUR.YR<BT>
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 44 + ADJ; SCV.REC(ECD.NUM) = CUR.MN<BT>
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
***** T23278 v
*
*--- Get fiscal data for division
*
5500*
*
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
    LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
      ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record"
      GOTO 93000
    END
  END ELSE
    POS = 1
  END
*
  FR.CURR.DATE<1,POS> = SALESDATES.REC(FR.CURR.PER<1,POS>[5,2]+1)<1,1>
  IF OCONV(FR.CURR.DATE<1,POS>,'D/')[7,4] > FR.CURR.PER<1,POS>[1,4] THEN
    FR.DIFF = OCONV(FR.CURR.DATE<1,POS>,'D/')[7,4] - FR.CURR.PER<1,POS>[1,4]
    FOR I = 2 TO NUM.PERIODS+1
      SALESDATES.REC(I)<1,1> = ICONV(OCONV(SALESDATES.REC(I)<1,1>,'D/')[1,6]:OCONV(SALESDATES.REC(I)<1,1>,'D/')[7,4] - FR.DIFF,'D/')
    NEXT I
  END
  M.D.Y = ""; E.O.M = ""
  FOR I = 1 TO NUM.PERIODS
    CALC.DATE = OCONV(SALESDATES.REC(I+1)<1,1>,"D/")
    M.D.Y<I,1> = CALC.DATE[1,2]
    M.D.Y<I,2> = CALC.DATE[4,2]
    M.D.Y<I,3> = CALC.DATE[7,4]
    E.O.M<I> =  OCONV(SALESDATES.REC(I+1)<1,1>+1,"D/")[1,2]
  NEXT I
  M.D.Y = ""; E.O.M = ""
  FOR I = 1 TO NUM.PERIODS
    CALC.DATE = OCONV(SALESDATES.REC(I+1)<1,1>,"D/")
    M.D.Y<I,1> = CALC.DATE[1,2]
    M.D.Y<I,2> = CALC.DATE[4,2]
    M.D.Y<I,3> = CALC.DATE[7,4]
    E.O.M<I> =  OCONV(SALESDATES.REC(I+1)<1,1>+1,"D/")[1,2]
  NEXT I
*
***** T23278 ^
*
*--- Load screen variables
9100*
  SCV.REC(1)<2> = AST.NUM
  SCV.REC(1)<3> = AST.NUM
***** T23278 v
*  SCV.REC(5)<3> = FR.CURR.PER
*  SCV.REC(6)<3> = FR.CURR.DATE
  SCV.REC(5)<3> = FR.CURR.PER<1,POS>
  SCV.REC(6)<3> = FR.CURR.DATE<1,POS>
***** T23278 ^
  SCV.REC(1)<4> = AST.NUM
  RETURN
9200*
  SCV.REC(2)<2> = AST.DESC
  SCV.REC(2)<3> = AST.DESC
  SCV.REC(2)<4> = AST.DESC
  RETURN
9300*
  SCV.REC(2+ADJ)<2> = AST.DEPR.METHOD<1,BT>
  SCV.REC(3+ADJ)<2> = SCV.REC(26+BT)<1>
  SCV.REC(2+BT)<4> = AST.DEPR.METHOD<1,BT>
  RETURN
*--- Error message routine
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
* PRINT @(0,23) : ERRMSG : CL :
* INPUT REPLY :
* PRINT @(0,23) : CL :
* RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC);* T23278
99999*
END
