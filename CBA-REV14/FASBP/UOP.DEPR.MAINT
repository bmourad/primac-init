************************************************************
* REVISION    - [08.1]
* SOURCE      - FASBP
* PROGRAM     - UOP.DEPR.MAINT
* BY          - JIM PAROSKI C.B.A
* DATE        - 04/23/89
* DESCRIPTION - Maintains Manual Depreciation Records
*T23278 markt 01/15/1999 * Make fiscal data multi-value by division.
*T23559 markt 01/18/1999 * Use correct error routine for no data.
*T25978 adelgado 02/13/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
************************************************************
*
*--- COPY LIBRARY
*
*COPY>CPYLIB>COM1
*COPY>FAS.CPYLIB>ASSETS
*COPY>FAS.CPYLIB>ASSETS.DEPR
*COPY>FAS.CPYLIB>DEP.MAST
*COPY>FAS.CPYLIB>UOP.DEPR.CTL
*COPY>PMC.CPYLIB>FISCAL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
  DIM UPD.FLG(2)
  DIM DEPR.AMT(2)
*
*---- Get buffer
*
  PROCREAD BUFFER ELSE
    ERRMSG = "Must be executed from a PROC"
    GOTO 93000
  END
  CONO = BUFFER<1>
  DIV.CODE = BUFFER<3>;* T23278
*
*---- OPEN FILES
*
  MAT FILE.VARS = ""
  OPEN "","FAS.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "FAS.SCREENS FILE MISSING"; GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CONTROL FILE MISSING"; GOTO 93000
  END
  OPEN "","ASSETS" TO ASSETS ELSE
    ERRMSG = "ASSETS FILE MISSING"; GOTO 93000
  END
  OPEN "","ASSETS.DEPR" TO ASSETS.DEPR ELSE
    ERRMSG = "ASSETS.DEPR FILE MISSING"; GOTO 93000
  END
  OPEN "","DEP.MAST" TO DEP.MAST ELSE
    ERRMSG = "DEP.MAST FILE MISSING"; GOTO 93000
  END
*
*------ GET FISCAL PERIOD
*
  MATREAD FISCAL.REC FROM CONTROL, CONO : "FAFISCAL" ELSE
    ERRMSG = "Cannot locate CONTROL, FAFISCAL"
    GOTO 93000
  END
***** T23278 v
*
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    ERRMSG = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"
    GOTO 93000
  END
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
    GOTO 93000
  END
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
    LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
      ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record"
      GOTO 93000
    END
  END ELSE
    POS = 1
  END
*
*      YR = FR.CURR.PER[1,4]
*      MN = FR.CURR.PER[5,2]
  YR = FR.CURR.PER<1,POS>[1,4]
  MN = FR.CURR.PER<1,POS>[5,2]
***** T23278 ^
  CTL.ID = CONO : "UOP.DEPR"
  MATREADU UOP.DEPR.CTL FROM CONTROL, CTL.ID ELSE
    MAT UOP.DEPR.CTL = ""
  END
*
*---- INITIALIZATION
*
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME = "UOP.DEPR.MAINT"
  ECD.SCRN.NO = 1
  ECD.ACTION = 1; CALL SCRN.EDIT
*     MAT EDIT.COM = ""
*     TYP = 0
*     CALL EDIT.SUB
  FILL = "#"
  LINE.SPACE = 1
  PAGE.SIZE = 14
  BEGIN.PAGE = 6
  MAT SCV.REC = ""
***** T23278 v
*      SCV.REC(1) = FR.CURR.PER
*      SCV.REC(2) = UDC.CUR.PER
*      SCV.REC(3) = UDC.CUR.DATE
  SCV.REC(1) = FR.CURR.PER<1,POS>
  SCV.REC(2) = UDC.CUR.PER<1,POS>
  SCV.REC(3) = UDC.CUR.DATE<1,POS>
***** T23278 ^
  ECD.ACTION = 3; CALL SCRN.EDIT
  AST.NO = ""; UNITS = ""
  BOOK.AMT = ""; BOOK.FLG = ""
  TAX.AMT = ""; TAX.FLG = ""
  DATA = 1; LINES = 0
  LOOP
    READNEXT AST.ID ELSE DATA = 0
  WHILE DATA DO
    GOSUB 1000
    IF UPD.OK THEN
      LINES = LINES + 1
      AST.NO<LINES> = AST.ID[4,99]
      IF AST.CUR.UNITS<1,2> > AST.CUR.UNITS<1,1> THEN
        UNITS<LINES> = AST.CUR.UNITS<1,2>
      END ELSE
        UNITS<LINES> = AST.CUR.UNITS<1,1> + 0
      END
      GOSUB 1200
      IF UPD.FLG(1) THEN
        BOOK.FLG<LINES> = 1
        BOOK.AMT<LINES> = DEPR.AMT(1)
      END
      IF UPD.FLG(2) THEN
        TAX.FLG<LINES> = 1
        TAX.AMT<LINES> = DEPR.AMT(2)
      END
    END
  REPEAT
  IF LINES = 0 THEN
    RELEASE CONTROL, CTL.ID
    ERRMSG = "No Units Of Production depreciation items selected"
***** T23559 v
*         GOTO 93000
    GOSUB 91000; GOTO 99999
***** T23559 ^
  END
  LN = 1; OLD.START.LINE = 0
  GOSUB 2900
*
*---- MAIN PROCESSING
*
  MORE = 1
  LOOP
    ECD.NUM = 31; SCV.REC(ECD.NUM) = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = "END" OR ACTION = "E" OR ACTION = ""
        RELEASE CONTROL, CTL.ID
        MORE = 0
      CASE ACTION = "F"
        FOR I = 1 TO LINES
          AST.ID = CONO:AST.NO<I>
          MATREADU AST.REC FROM ASSETS, AST.ID THEN
            CUR.UNITS = UNITS<I>
            ADR.ID = AST.ID:"U":YR
            MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID ELSE
              MAT ADR.REC = ""
            END
            ADR.REC(MN) = CUR.UNITS
            MATWRITE ADR.REC ON ASSETS.DEPR, ADR.ID
            IF BOOK.FLG<I> THEN
              ADR.ID = AST.ID:"B":YR
              MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID ELSE
                MAT ADR.REC = ""
              END
              ADR.REC(MN) = BOOK.AMT<I>
              MATWRITE ADR.REC ON ASSETS.DEPR, ADR.ID
              IF CUR.UNITS + AST.CUM.UNITS<1,1> > AST.UNITS<1,1> THEN
                AST.CUR.UNITS<1,1> = AST.UNITS<1,1> - AST.CUM.UNITS<1,1>
              END ELSE
                AST.CUR.UNITS<1,1> = CUR.UNITS
              END
              AST.CUR.DEPR.AMT<1,1> = BOOK.AMT<I>
            END
            IF TAX.FLG<I> THEN
              ADR.ID = AST.ID:"T":YR
              MATREADU ADR.REC FROM ASSETS.DEPR, ADR.ID ELSE
                MAT ADR.REC = ""
              END
              ADR.REC(MN) = TAX.AMT<I>
              MATWRITE ADR.REC ON ASSETS.DEPR, ADR.ID
              IF CUR.UNITS + AST.CUM.UNITS<1,2> > AST.UNITS<1,2> THEN
                AST.CUR.UNITS<1,2> = AST.UNITS<1,2> - AST.CUM.UNITS<1,2>
              END ELSE
                AST.CUR.UNITS<1,2> = CUR.UNITS
              END
              AST.CUR.DEPR.AMT<1,2> = TAX.AMT<I>
            END
            MATWRITE AST.REC ON ASSETS, AST.ID
          END ELSE
            RELEASE ASSETS, AST.ID
          END
        NEXT I
        MAT UOP.DEPR.CTL = ""
***** T23278 v
*            UDC.CUR.PER = FR.CURR.PER
*            UDC.CUR.DATE = DATE()
        UDC.CUR.PER<1,POS> = FR.CURR.PER<1,POS>
        UDC.CUR.DATE<1,POS> = DATE()
***** T23278 ^
        MATWRITE UOP.DEPR.CTL ON CONTROL, CTL.ID
        MORE = 0
      CASE ACTION = "S"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 2900
      * T25978 v
      CASE ACTION = 'SR'
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 2900
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 2900
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 2900
      * T25978 ^
      CASE NOT(NUM(ACTION))
        ERRMSG = "Invalid entry, please re-enter"
        GOSUB 91000
      CASE ACTION < 1 OR ACTION > LINES
        ERRMSG = "Out of range, please re-enter"
        GOSUB 91000
      CASE 1
        LN = ACTION
        GOSUB 2000
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99999
1000*
  MAT UPD.FLG = 0
  MATREAD AST.REC FROM ASSETS, AST.ID ELSE
    ERRMSG = "Cannot locate Asset # ":AST.ID[4,99]
    GOSUB 91000; GOTO 1099
  END
  FOR BT = 1 TO 2
    BEGIN CASE
      CASE AST.DEPR.METHOD<1,BT>[1,1] # "U"
***** T23278 v
*         CASE AST.FST.PER<1,BT> > FR.CURR.PER
      CASE AST.FST.PER<1,BT> > FR.CURR.PER<1,POS>
***** T23278 ^
      CASE AST.CUM.UNITS<1,BT> >= AST.UNITS<1,BT>
      CASE 1
        UPD.FLG(BT) = 1
        IF AST.CUR.UNITS<1,BT> + AST.CUM.UNITS<1,BT> > AST.UNITS<1,BT> THEN
          AST.CUR.UNITS<1,BT> = AST.UNITS<1,BT> - AST.CUM.UNITS<1,BT>
        END
    END CASE
  NEXT BT
  UPD.OK = UPD.FLG(1) + UPD.FLG(2)
1099 RETURN
1200*
  MAT DEPR.AMT = 0
  FOR BT = 1 TO 2
    IF UPD.FLG(BT) AND AST.CUR.UNITS<1,BT> THEN
      GOSUB 1500
    END
  NEXT BT
  RETURN
1500*
  DEPR.NO = AST.DEPR.METHOD<1,BT>
  DEPR.ID = CONO:DEPR.NO
  MATREAD DEPR.REC FROM DEP.MAST, DEPR.ID ELSE
    ERRMSG = "Cannot locate Depreciation method - ":DEPR.NO
    GOSUB 91000; GOTO 1509
  END
  MAX.DEPR = 0
  IF DEPR.TOT > 0 THEN
    READ STACK FROM DEP.MAST, DEPR.ID:"!STACK.T" ELSE
      ERRMSG = "Cannot locate the total STACK for method - ":DEPR.NO
      GOSUB 91000; GOTO 1505
    END
    READ VALID.VARS FROM DEP.MAST, DEPR.ID:"!VARS.T" ELSE
      ERRMSG = "Cannot locate the total VARIABLES for method - ":DEPR.NO
      GOSUB 91000; GOTO 1505
    END
    LOCATE "TABLE" IN VALID.VARS SETTING FND THEN
      ERRMSG = "Cannot use TABLE for a total equation - ":DEPR.NO
      GOSUB 91000; GOTO 1505
    END
    AM.CNT = DCOUNT(VALID.VARS,AM)
    FOR I = 1 TO AM.CNT
      IF VALID.VARS<I,1> THEN
        VALUE = AST.REC(VALID.VARS<I,1>)<1,BT> + 0
      END ELSE
        VALUE = 0
      END
      VM.CNT = DCOUNT(VALID.VARS<I>,VM)
      FOR J = 2 TO VM.CNT
        STACK<VALID.VARS<I,J>> = VALUE
      NEXT J
    NEXT I
    ERRMSG = ""
    CALL STACK.CALC(STACK,ERRMSG)
    IF ERRMSG # "" THEN
      GOSUB 91000
    END
    IF STACK > 0 THEN
      MAX.DEPR = INT(STACK/100 * (DEPR.TOT/100) + .5)
    END ELSE
      MAX.DEPR = INT(STACK/100 * (DEPR.TOT/100) - .5)
    END
  END
1505 READ STACK FROM DEP.MAST, DEPR.ID:"!STACK" ELSE
    ERRMSG = "Cannot locate STACK for method - ":DEPR.NO
    GOSUB 91000; GOTO 1509
  END
  READ VALID.VARS FROM DEP.MAST, DEPR.ID:"!VARS" ELSE
    ERRMSG = "Cannot locate the VARIABLES for method - ":DEPR.NO
    GOSUB 91000; GOTO 1509
  END
  LOCATE "TABLE" IN VALID.VARS SETTING FND THEN
    ERRMSG = "Cannot use TABLE for Unit Of Production method - ":DEPR.NO
    GOSUB 91000; GOTO 1509
  END
  CUR.UNITS = AST.CUR.UNITS<1,BT>
  AST.CUR.UNITS<1,BT> = AST.CUM.UNITS<1,BT> + CUR.UNITS
  AM.CNT = DCOUNT(VALID.VARS,AM)
  FOR I = 1 TO AM.CNT
    IF VALID.VARS<I,1> THEN
      VALUE = AST.REC(VALID.VARS<I,1>)<1,BT> + 0
    END ELSE
      VALUE = 0
    END
    VM.CNT = DCOUNT(VALID.VARS<I>,VM)
    FOR J = 2 TO VM.CNT
      STACK<VALID.VARS<I,J>> = VALUE
    NEXT J
  NEXT I
  ERRMSG = ""
  CALL STACK.CALC(STACK,ERRMSG)
  IF ERRMSG # "" THEN
    GOSUB 91000
  END
  AST.CUR.UNITS<1,BT> = CUR.UNITS
  IF STACK > 0 THEN
    DEPR.AMT(BT) = INT(STACK+.5)
  END ELSE
    DEPR.AMT(BT) = INT(STACK-.5)
  END
  DEPR.AMT(BT) = DEPR.AMT(BT) - AST.CUM.DEPR<1,BT>
  IF MAX.DEPR THEN
    IF AST.CUR.UNITS<1,BT> + AST.CUM.UNITS<1,BT> >= AST.UNITS<1,BT> THEN
      IF DEPR.AMT(BT) + AST.CUM.DEPR<1,BT> < MAX.DEPR THEN
        DEPR.AMT(BT) = MAX.DEPR - AST.CUM.DEPR<1,BT>
      END
    END
    IF DEPR.AMT(BT) + AST.CUM.DEPR<1,BT> > MAX.DEPR THEN
      DEPR.AMT(BT) = AST.CUM.DEPR<1,BT> - MAX.DEPR
    END
  END
1509 RETURN
*
*---- ENTER LINE NUMBER
*
2000*
  GOSUB 2900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  AST.ID = CONO:AST.NO<LN>
  GOSUB 1000
  BOOK.FLG<LN> = UPD.FLG(1)
  TAX.FLG<LN> = UPD.FLG(2)
  IF NOT(UPD.OK) THEN GOTO 2099
*
*---- ENTER UNITS
*
  X = 43; Y = SLN; TYP = 3; MAXL = 9
  MINV = 0; MAXV = AST.UNITS<1,1> - AST.CUM.UNITS<1,1>
  IF MAXV < AST.UNITS<1,2> - AST.CUM.UNITS<1,2> THEN
    MAXV = AST.UNITS<1,2> - AST.CUM.UNITS<1,2>
  END
  IF UNITS<LN> # "" THEN
    O.R = "O"
    DEFAULT = UNITS<LN>
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    P_X  = 43 ; P_Y = SLN ; P_VALUE = UNITS<LN> "R#9" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF UPD.FLG(1) THEN
      P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(BOOK.AMT<LN>,"MD2") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    IF UPD.FLG(2) THEN
      P_X  = 64 ; P_Y = SLN ; P_VALUE = OCONV(TAX.AMT<LN>,"MD2") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    GOTO 2099
  END
  IF VALUE + AST.CUM.UNITS<1,1> > AST.UNITS<1,1> THEN
    AST.CUR.UNITS<1,1> = AST.UNITS<1,1> - AST.CUM.UNITS<1,1>
  END ELSE
    AST.CUR.UNITS<1,1> = VALUE
  END
  IF VALUE + AST.CUM.UNITS<1,2> > AST.UNITS<1,2> THEN
    AST.CUR.UNITS<1,2> = AST.UNITS<1,2> - AST.CUM.UNITS<1,2>
  END ELSE
    AST.CUR.UNITS<1,2> = VALUE
  END
  UNITS<LN> = VALUE
  GOSUB 1200
  IF UPD.FLG(1) THEN
    BOOK.AMT<LN> = DEPR.AMT(1)
    P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(DEPR.AMT(1),"MD2") "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF UPD.FLG(2) THEN
    TAX.AMT<LN> = DEPR.AMT(2)
    P_X  = 64 ; P_Y = SLN ; P_VALUE = OCONV(DEPR.AMT(2),"MD2") "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
2099 RETURN
*
*---- SCROLLING ROUTINE
*
2900*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 2990
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    MATREAD AST.REC FROM ASSETS, CONO:AST.NO<N> ELSE
      MAT AST.REC = ""
      AST.DESC = "UNKNOWN"
    END
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:AST.NO<N> "L#7"
    P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:AST.DESC "L#30"
    P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:UNITS<N> "R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF BOOK.FLG<N> THEN
      P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(BOOK.AMT<N>,"MD2") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    IF TAX.FLG<N> THEN
      P_X  = 64 ; P_Y = SLN ; P_VALUE = OCONV(TAX.AMT<N>,"MD2") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
2990 RETURN
*
*---- ERROR MESSAGE ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*
*---- END OF JOB
*
99999*
  ECD.ACTION = 99 ; CALL SCRN.EDIT
END
