*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE      - FASBP
* PROGRAM     - DEPR.RPT
* AUTHOR      - Ziad Yamout, VERCOM Software, Inc.
* DATE        - 10/21/88
* DESCRIPTION - This program is used
* TASK 18573 LLH 7/95 1-52 WEEK ACCOUNTING
* TASK 19408 TCN 11/07/95 DIVISIONALIZATION
*T20988 09/16/1996 lanny _ see below.
* ADDED CHECK FOR LINE.CNT AND GOSUB FOR HEADINGS
* ARLENA CAMP  9/12/96
*T26493 cmykleb 04/04/2002 * Change pgm/proc to use REPORT.SCRN.
*********************************************************************
*COPY>PMC.CPYLIB>COMPANY
*COPY>FAS.CPYLIB>ASSETS
*COPY>FAS.CPYLIB>ASSETS.DEPR
*COPY>FAS.CPYLIB>DEP.MAST
*COPY>FAS.CPYLIB>CLASS
*COPY>CPYLIB>CHAR
   DIM A.TOT(2,2)
   DIM C.TOT(2,2)
   DIM G.TOT(2,2)
   DIM S.REC(2,2)
   PROMPT ""
   PROCREAD BUFFER ELSE
      ERRMSG = "Must be executed from a PROC"; GOTO 93000
   END
   CONO = BUFFER<1>
*T26493 v
*  R.TYPE = BUFFER<3>
*  FST.PER = BUFFER<4>
*  FST.YR = FST.PER[1,4]
*  FST.MN = FST.PER[5,2]
*  N.O.YR = BUFFER<5>
*  N.O.MN = BUFFER<6>
*  R.DATE = BUFFER<7>
*  DIV.OWNER = BUFFER<8> ; *---- TASK 19408
   R.TYPE = BUFFER<4>
   FST.PER = BUFFER<5>
   FST.YR = FST.PER[1,4]
   FST.MN = FST.PER[5,2]
   N.O.YR = BUFFER<6>
   N.O.MN = BUFFER<7>
   R.DATE = OCONV(DATE(),'D2/')
*T26493 ^
*
* --- OPEN
* 
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate CONTROL file"; GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "Cannot locate COMPANY file"; GOTO 93000
   END
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "Cannot locate company, ":CONO; GOTO 93000
   END
   OPEN "","ASSETS" TO ASSETS ELSE
      ERRMSG = "Cannot locate ASSETS file"; GOTO 93000
   END
   OPEN "","ASSETS.DEPR" TO ASSETS.DEPR ELSE
      ERRMSG = "Cannot locate ASSETS.DEPR file"; GOTO 93000
   END
   OPEN "","DEP.MAST" TO DEP.MAST ELSE
      ERRMSG = "Cannot locate DEP.MAST file"; GOTO 93000
   END
   OPEN "","CLASS" TO CLASS ELSE
      ERRMSG = "Cannot locate CLASS file"; GOTO 93000
   END
   READNEXT AST.ID ELSE
      ERRMSG = "No items selected"; GOTO 93000
   END
   MATREAD AST.REC FROM ASSETS, AST.ID ELSE
      ERRMSG = "Cannot locate asset # ":AST.ID[4,99]; GOTO 93000
   END
*
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""; PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
*
   BEGIN CASE
      CASE NOT(NUM(FST.PER))
         ERRMSG = "Invalid period - ":FST.PER; GOTO 93000
      CASE FST.YR < 1800
         ERRMSG = "Invalid year - ":FST.YR; GOTO 93000
      CASE FST.MN < 1 OR FST.MN > NUM.PERIODS
         ERRMSG = "Invalid month - ":FST.MN; GOTO 93000
      CASE NOT(NUM(N.O.YR))
         ERRMSG = "Invalid # of years - ":N.O.YR; GOTO 93000
      CASE NOT(NUM(N.O.MN))
         ERRMSG = "Invalid # of periods - ":N.O.MN; GOTO 93000
      CASE N.O.YR > 0 AND N.O.MN > 0
         ERRMSG = "Invalid combination of # of years and period"
         GOTO 93000
      CASE N.O.MN > (NUM.PERIODS - 1) - FST.MN
         ERRMSG = "There is only ":((NUM.PERIODS-1)-FST.MN):" periods left in year ":FST.YR
   END CASE
*
*--- Initialization
   B.T = "B"; B.T<2> = "T"
   P.Y = "X"
   FOR I = 2 TO NUM.PERIODS
      P.Y<1,I> = "X"
   NEXT I
   OLD.CLASS = AST.CLASS
   MAT C.TOT = 0
   MAT G.TOT = 0
   S.REC(1,1) = 43; S.REC(2,1) = 4
   S.REC(1,2) = 0; S.REC(2,2) = 0
   IF N.O.MN THEN
      LST.MN = FST.MN + N.O.MN - 1
      LST.YR = FST.YR
      YRS.CNT = 0
   END ELSE
      LST.MN = NUM.PERIODS
      LST.YR = FST.YR + N.O.YR - 1
      YRS.CNT = N.O.YR - 1
   END
*
*T26493 v
*  REPORT.NAME = "FIXED.ASSETS.DEPRECIATION.LISTING"
*  REPORT.NUMBER = "XXXX DIVISION: ":DIV.OWNER ; *---- TASK 19408
   CO.NAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = BUFFER<2>
*T26493 ^
   REPORT.DATE = DATE()
   HD1 = ""; HD2 = ""; PAGE.NO = 0
   CALL GET.PROG.HEAD(CONO,CO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
   HD3 = "SELECTION: "
   BEGIN CASE
      CASE R.TYPE = "ALL"
         HD3 = HD3 : "ALL" : SPACE(33)
      CASE R.TYPE = "R"
         HD3 = HD3 : "REGULAR" : SPACE(29)
      CASE R.TYPE = "M"
         HD3 = HD3 : "MANUAL" : SPACE(30)
      CASE R.TYPE = "U"
         HD3 = HD3 : "U.O.P" : SPACE(31)
      CASE 1
         HD3 = HD3 : "UNKNOWN" : SPACE(29)
   END CASE
   BEGIN CASE
      CASE N.O.MN = 1
         HD3 = HD3:SPACE(12):"FOR 1 PERIOD ":FST.PER:", AS OF ":R.DATE "L#8"
      CASE N.O.YR = 1
         HD3 = HD3:SPACE(1):"FOR 1 YEAR, PERIODS ":FST.PER:" THROUGH ":LST.YR:(LST.MN "R%2"):", AS OF ":R.DATE "L#8"
      CASE N.O.MN > 0
         HD3 = HD3:SPACE(4):"FOR ":(N.O.MN "R%2"):" PERIODS ":FST.PER:" THROUGH ":LST.YR:(LST.MN "R%2"):", AS OF ":R.DATE "L#8"
      CASE 1
         HD3 = HD3:"FOR ":N.O.YR:" YEARS, PERIODS ":FST.PER:" THROUGH ":LST.YR:(LST.MN "R%2"):", AS OF ":R.DATE "L#8"
   END CASE
   SLINE = SPACE(48) : "------------ ------------  ------------    ------------ ------------  ------------"
*
*--- Main processing
   PRINTER ON
   GOSUB 900
   GOSUB 1000
   DATA = 1
*      LOOP WHILE READNEXT AST.ID DO
   LOOP
      READNEXT AST.ID ELSE DATA = 0
   WHILE DATA DO
      MATREAD AST.REC FROM ASSETS, AST.ID ELSE GOTO 999
      IF OLD.CLASS # AST.CLASS THEN
         GOSUB 5000
         OLD.CLASS = AST.CLASS
      END
      GOSUB 1000
999 REPEAT
   GOSUB 5000
*
*--- Grand totals
   IF LINE.CNT GE 55 THEN GOSUB 900
   PRINT SLINE
   PLINE = "GRAND TOTALS" : SPACE(36)
   PLINE = PLINE : OCONV(G.TOT(1,1),"MD2,") "R#12" : SPACE(1)
   PLINE = PLINE : OCONV(G.TOT(2,1),"MD2,") "R#12" : SPACE(2)
   PLINE = PLINE : OCONV((G.TOT(1,1)+G.TOT(2,1)),"MD2,") "R#12"
   PLINE = PLINE : SPACE(4)
   PLINE = PLINE : OCONV(G.TOT(1,2),"MD2,") "R#12" : SPACE(1)
   PLINE = PLINE : OCONV(G.TOT(2,2),"MD2,") "R#12" : SPACE(2)
   PLINE = PLINE : OCONV((G.TOT(1,2)+G.TOT(2,2)),"MD2,") "R#12"
   PRINT PLINE
   PRINTER CLOSE
   PRINTER OFF
   GOTO 99999
*--- Heading routine
900 PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT HD3
   PRINT
   PRINT "                                               <------------- ( B O O K ) ------------->  <-------------- ( T A X ) -------------->"
   PRINT "ASSET #          DESCRIPTION           CLASS    CURRENT DEPR BONUS  DEPR.  TOTAL  DEPR.    CURRENT DEPR BONUS  DEPR.  TOTAL  DEPR."
   PRINT "------- ------------------------------ ------   ------------ ------------  ------------    ------------ ------------  ------------"
   LINE.CNT = 7
   RETURN
*
*--- Print asset line
1000 PLINE = ""; PRT.FLG = 2; MAT A.TOT = 0
   FOR BT = 1 TO 2
      MATREAD DEPR.REC FROM DEP.MAST, CONO:AST.DEPR.METHOD<1,BT> ELSE
         MAT DEPR.REC = ""
         DEPR.ACQ.PER = P.Y
         DEPR.SVC.PER = P.Y
         DEPR.DSP.PER = P.Y
      END
      ADR.ID = AST.ID : B.T<BT> : FST.YR
      MATREAD ADR.REC FROM ASSETS.DEPR, ADR.ID THEN
         BEGIN CASE
            CASE AST.FST.PER<1,BT>[1,4] = FST.YR
               V.P = DEPR.ACQ.PER
            CASE AST.LST.PER<1,BT>[1,4] = FST.YR
               V.P = DEPR.DSP.PER
            CASE 1
               V.P = DEPR.SVC.PER
         END CASE
         FIRST = FST.MN; LAST = LST.MN
         BEGIN CASE
            CASE FIRST = 1
            CASE V.P<1,FIRST> = "" OR V.P<1,FIRST - 1> = ""
               LOOP WHILE FIRST > 1 AND V.P<1,FIRST - 1> = "" DO
                  FIRST = FIRST - 1
               REPEAT
         END CASE
         IF V.P<1,LAST> = "" THEN
            LAST = LAST - 1
            LOOP WHILE LAST > FIRST AND V.P<1,LAST> = "" DO
               LAST = LAST - 1
            REPEAT
            IF V.P<1,LAST> = "" THEN LAST = FIRST - 1
         END
         FOR P = FIRST TO LAST
            A.TOT(1,BT) = A.TOT(1,BT) + ADR.REC(P)
            A.TOT(2,BT) = A.TOT(2,BT) + ADR.REC(P+12)
         NEXT P
      END
      FOR Y = 1 TO YRS.CNT
         ADR.ID = AST.ID : B.T<BT> : (FST.YR + Y)
         MATREAD ADR.REC FROM ASSETS.DEPR, ADR.ID THEN
            FOR P = 1 TO 12
               A.TOT(1,BT) = A.TOT(1,BT) + ADR.REC(P)
               A.TOT(2,BT) = A.TOT(2,BT) + ADR.REC(P+12)
            NEXT P
         END
      NEXT Y
      IF A.TOT(1,BT) + A.TOT(2,BT) = 0 THEN
         PLINE = PLINE : SPACE(S.REC(1,BT))
         PRT.FLG = PRT.FLG - 1
         GOTO 1009
      END
      GOSUB 1900
      PLINE = PLINE : SPACE(S.REC(2,BT))
1009 NEXT BT
   IF PRT.FLG THEN
      IF LINE.CNT > 57 THEN GOSUB 900
      HLINE = AST.ID[4,7] "L#7" : SPACE(1)
      HLINE = HLINE : AST.DESC "L#30" : SPACE(1)
      HLINE = HLINE : AST.CLASS "L#6" : SPACE(3)
      PRINT HLINE : PLINE
      LINE.CNT = LINE.CNT + 1
   END
   RETURN
1900 PLINE = PLINE : OCONV(A.TOT(1,BT),"MD2,") "R#12" : SPACE(1)
   PLINE = PLINE : OCONV(A.TOT(2,BT),"MD2,") "R#12" : SPACE(2)
   PLINE = PLINE : OCONV((A.TOT(1,BT)+A.TOT(2,BT)),"MD2,") "R#12"
   C.TOT(1,BT) = C.TOT(1,BT) + A.TOT(1,BT)
   C.TOT(2,BT) = C.TOT(2,BT) + A.TOT(2,BT)
   RETURN
*
*--- Class totals
5000*
   IF C.TOT(1,1) + C.TOT(1,2) + C.TOT(2,1) + C.TOT(2,2) = 0 THEN
      GOTO 5099
   END
   MATREAD CLS.REC FROM CLASS, CONO : OLD.CLASS ELSE
      CLS.DESC = OLD.CLASS
   END
   IF LINE.CNT GE 55 THEN GOSUB 900
   PRINT SLINE
   PLINE = "CLASS - " : CLS.DESC "L#30" : " - TOTALS "
   PLINE = PLINE : OCONV(C.TOT(1,1),"MD2,") "R#12" : SPACE(1)
   PLINE = PLINE : OCONV(C.TOT(2,1),"MD2,") "R#12" : SPACE(2)
   PLINE = PLINE : OCONV((C.TOT(1,1)+C.TOT(2,1)),"MD2,") "R#12"
   PLINE = PLINE : SPACE(4)
   PLINE = PLINE : OCONV(C.TOT(1,2),"MD2,") "R#12" : SPACE(1)
   PLINE = PLINE : OCONV(C.TOT(2,2),"MD2,") "R#12" : SPACE(2)
   PLINE = PLINE : OCONV((C.TOT(1,2)+C.TOT(2,2)),"MD2,") "R#12"
   PRINT PLINE
   PRINT
   LINE.CNT = LINE.CNT + 3
   FOR BT = 1 TO 2
      G.TOT(1,BT) = G.TOT(1,BT) + C.TOT(1,BT)
      G.TOT(2,BT) = G.TOT(2,BT) + C.TOT(2,BT)
   NEXT BT
   MAT C.TOT = 0
5099 RETURN
93000 PRINT @(0,23) : ERRMSG : CL :
   INPUT REPLY,1 :
   PRINT @(0,23) : CL :
99999 END
