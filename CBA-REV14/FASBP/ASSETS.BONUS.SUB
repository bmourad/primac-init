      SUBROUTINE ASSETS.BONUS.SUB
*COPY>CPYLIB>COM1
*COPY>FAS.CPYLIB>COM.ASSETS
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - FASBP
* PROGRAM     - ASSETS.BONUS.SUB
* BY          - Ziad Yamout, Vercom Software, Inc.
* DATE        - 09/25/88
* DESCRIPTION - Fixed Assets Maintenance Program
* TASK
*     18573 6/95 LLH 1-52 WEEK ACCOUNTING
*
*********************************************************************
*
*COPY>FAS.CPYLIB>ASSETS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>FILE.VARS
*
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
    PERIOD.REC = ""
    PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
      DIM B.REC(52)
      FST.PER = AST.BONUS.PER<1,BT>; LST.PER = FST.PER[1,4]:NUM.PERIODS
      BEGIN CASE
      CASE AST.BONUS.FLG<1,BT> # "Y"
         GOTO 99000
      CASE AST.FST.PER<1,BT> = ""
         ERRMSG = "The depreciation start up period is not established"
         GOSUB 91000; GOTO 99000
      CASE FST.PER < AST.FST.PER<1,BT>
         ERRMSG = "Bonus period should not be less than the depreciation start up period"
         GOSUB 91000; GOTO 99000
      CASE AST.FISCAL.MON # "" AND LST.PER <= AST.FISCAL.MON
         ERRMSG = "The bonus last period is already posted"
         GOSUB 91000; GOTO 99000
      CASE AST.DEPR.METHOD<1,BT>[1,1] = "U"
      CASE AST.LST.PER<1,BT> = ""
         ERRMSG = "The depreciation last period is not established"
         GOSUB 91000; GOTO 99000
      CASE FST.PER[1,4] > AST.LST.PER<1,BT>[1,4]
         ERRMSG = "Bonus period should not be greater than the depreciation last period"
         GOSUB 91000; GOTO 99000
      END CASE
      IF FST.PER < AST.FISCAL.MON THEN
         ST.MON = AST.FISCAL.MON[5,2]
      END ELSE
         ST.MON = FST.PER[5,2]
      END
      IF FST.PER[1,4] = AST.LST.PER<1,BT>[1,4] THEN
         EN.MON = AST.LST.PER<1,BT>[5,2]
      END ELSE
         EN.MON = NUM.PERIODS
      END
      BEGIN CASE
      CASE AST.BONUS.MON<1,BT> = "M"
         IF ST.MON <> 1 OR EN.MON <> NUM.PERIODS THEN
            ERRMSG = "Only bonus periods ":ST.MON:" through ":EN.MON:" will be depreciated"
            GOSUB 91000
         END
         BONUS = INT(((AST.BONUS.AMT<1,BT>/10)/LAST.FISCAL)*10+.5)
         MAT B.REC = BONUS
         DIF = AST.BONUS.AMT<1,BT> - (BONUS * LAST.FISCAL)
         BEGIN CASE
         CASE DIF > 0
            LIMIT = LAST.FISCAL - DIF + 1
            FOR P = LIMIT TO LAST.FISCAL
               B.REC(P) = B.REC(P) + 1
            NEXT P
         CASE DIF < 0
            LIMIT = 0 - DIF
            FOR P = 1 TO LIMIT
               B.REC(P) = B.REC(P) - 1
            NEXT P
         END CASE
      CASE AST.BONUS.MON<1,BT> < ST.MON OR AST.BONUS.MON<1,BT> > EN.MON
         ERRMSG = "Bonus period ":AST.BONUS.MON<1,BT>:" is out of range"
         GOSUB 91000; GOTO 99000
      CASE 1
         ST.MON = AST.BONUS.MON<1,BT>; EN.MON = ST.MON
         B.REC(ST.MON) = AST.BONUS.AMT<1,BT>
      END CASE
      BEGIN CASE
      CASE O.B.PER = ""
      CASE O.B.PER[1,4]:NUM.PERIODS <= AST.FISCAL.MON
      CASE 1
         IF O.B.PER > AST.FISCAL.MON THEN
            LIMIT = O.B.PER[5,2]
         END ELSE
            LIMIT = AST.FISCAL.MON[5,2] + 1
         END
         YR = O.B.PER[1,4] - AST.FST.PER<1,BT>[1,4] + 1
         FOR P = NUM.PERIODS TO LIMIT STEP -1
            D.REC(YR,BT) = DELETE(D.REC(YR,BT),P+NUM.PERIODS,0,0)
         NEXT P
      END CASE
      YR = FST.PER[1,4] - AST.FST.PER<1,BT>[1,4] + 1
      FOR P = ST.MON TO EN.MON
         D.REC(YR,BT)<P+NUM.PERIODS> = B.REC(P)
      NEXT P
      GOTO 99999
*
*--- Error message routine
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT REPLY :
*       PRINT @(0,23) : CL :
*       RETURN
99000 AST.BONUS.PER<1,BT> = O.B.PER
      O.B.PER = "END"
99999 RETURN
   END
