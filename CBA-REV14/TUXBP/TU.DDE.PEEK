SUBROUTINE TU.DDE.PEEK(HANDLE, ITEMNAME, TIMEOUT, DDE.DATA, OPTIONS, STATUS)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
***************************************************************************
*-* TU.DDE.PEEK(Handle, Itemname, Timeout, Data, Options, Status)
*-*
*-*  This function will initiate a read from a DDE server. The conversation
*-* must first be initiated with a call to DDE.CONNECT.
*-*
*-* [P] Handle      This a value is used to identify the conversation.
*-*                 It is the value returned from the DDE.CONNECT function.
*-*
*-* [P] Itemname    This is the name of the data item to be returned from
*-*                 the DDE conversation and is defined by the application.
*-*
*-* [P] Timeout     This is the amout of time SBClient will wait for a
*-*                 response from the application before returing an error
*-*                 status.
*-*
*-* [R] Data        On successful execution of the subroutine, this
*-*                 variable contains the value returned from the windows
*-*                 application.
*-*
*-* [P] Options     This is an array of characters to indicate minor
*-*                 details of the DDE read. Possible values:-
*-*
*-*                     X, Don't perform an ANSI to OEM conversion on
*-*                        the data.
*-*
*-* [R] Status      This is an indication of the success or failure of the
*-*                 subroutine. A successful call will return with zero
*-*                 Status and failure will return with a non-zero value.
*-*                 A programmer should call TU.DDE.GET.ERROR to get the
*-*                 details of the failure.
***************************************************************************
*
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP ROC.MAIN.H
 INCLUDE TUBP OS.DELAY.H
 INCLUDE TUBP TU.ERRORCODES.H
 INCLUDE TUBP USER.INCLUDE.H
*
EQU TAB.TOKEN TO "\009"
*
IF TU.TRACE THEN
OPEN '','TUSTATE' TO TUSTATE THEN
WRITEV 'DDE.READ':VM:HANDLE:VM:ITEMNAME:VM:TIMEOUT ON TUSTATE,'TRACE.':PORTNO,-1
END
END
*
PROMPT NUL
ECHO OFF
CRT DDE.HEAD:DDE.PEEK:HANDLE:SEMI:TIMEOUT:SEMI:OPTIONS:SEMI:ITEMNAME:TU.TAIL:
INPUT STATUS:
*-* Mods to handle input buffer size for really really big, packets
FT.MODE = INDEX(STATUS, "7005", 1)
IF STATUS AND NOT(FT.MODE) THEN
*
*-* DDE error code
*
INPUT DDE.DATA:; !*-GA*!
!@!GET DDE.DATA FROM PORTNO UNTIL CR ; !*GA*!
END ELSE
IF FT.MODE THEN
*
*-* upload DDE data from file
*
DDE.DATA = ""
INPUT FNAME:; !*-GA*!
!@!GET FNAME FROM PORTNO UNTIL CR ; !*GA*!
OPEN '','TUSTATE' TO F.TUSTATE ELSE STATUS = FTE.TUSTATE.OPEN.ERROR; RETURN
STATUS = 0
CALL TU.UPLOAD(FNAME, F.TUSTATE, DDE.DATA, "HBZ", "", STATUS)
IF STATUS THEN DDE.DATA = ''
END ELSE
*
*-* DDE read data
*
DDE.DATA = ''; STATUS = 0
INPUT DDE.DATA:; !*-GA*!
!@!GET DDE.DATA FROM PORTNO UNTIL CR ; !*GA*!
END
END
*
* Clear Input Buffer, Even If Error
*
LOOP
 INCLUDE TUBP INPUT.MORE
*
WHILE MORE DO
INPUT TEMP:; !*-GA*!
!@!GET TEMP FROM PORTNO UNTIL CR ; !*GA*!
DDE.DATA = DDE.DATA:TEMP
REPEAT
IF STATUS THEN
OPEN '','TUSTATE' TO TUSTATE ELSE STATUS = FTE.TUSTATE.OPEN.ERROR; RETURN
WRITE DDE.DATA ON TUSTATE,'ERROR.':PORTNO
DDE.DATA = NUL
END ELSE
IF INDEX(DDE.DATA,TOKENS<1,1>:4,1) THEN CALL TU.CHANGE(TOKENS<1,1>:4,AM,DDE.DATA)
IF INDEX(DDE.DATA,TOKENS<1,1>:3,1) THEN CALL TU.CHANGE(TOKENS<1,1>:3,VM,DDE.DATA)
IF INDEX(DDE.DATA,TOKENS<1,1>:2,1) THEN CALL TU.CHANGE(TOKENS<1,1>:2,SVM,DDE.DATA)
IF INDEX(DDE.DATA,TAB.TOKEN, 1) THEN CALL TU.CHANGE(TAB.TOKEN, CHAR(9), DDE.DATA)
END
ECHO ON
RETURN
END
