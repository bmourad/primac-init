SUBROUTINE TU.SBZ_454(TXDATA, DOS.FILE.NAME, F.RXFILE, MAX.ITEM.SIZE, RXITEM, OPTIONS, RTN.STR, DESCRIPTION, STATUS)
 INCLUDE TUBP USER.INCLUDE.H
 INCLUDE TUBP TU.SBZ.H
!@! INCLUDE UNIVERSE.INCLUDE MACHINE.NAME ; !*UV,UP*!
!@! INCLUDE UNIVERSE.INCLUDE FILENAMES.H ; !*UV,UP*!
!@!EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252); !*-UV,-UP,-UDT*!
EQU AM TO @AM, VM TO @VM, SVM TO @SVM ; !*UV,UP,UDT*!
EQU SEMI TO ';', CLOSEBRACE TO '}', OPENBRACE TO '{', SPCE TO ' ', DOT TO '.'
EQU DBGMOD TO 10000, ZTIME.OUT TO 60
DIM CACHE(30)
DIM KS(4, 3)
IF TXDATA # "" THEN TXFD = 1 ELSE TXFD = -1
GOSUB 9900
 INCLUDE TUBP ECHO.OFF.H
!@!ECHO ON ;!*PI/O,PR1ME*!
LOOP
BEGIN CASE
CASE TXSTATE = ZTX.START
IF TXRETRIES = 10 THEN STATUS = XFER.RETRY; GOTO 900
ZPKT.TYPE = ZPKT.START
IF TXFD = 1 THEN
RXSTATE = ZRX.WAIT; GOSUB 1200
END ELSE
GOSUB 1210
END
TXTIMER = TIME() + ZSTART; TXSTATE = ZTX.SWAIT
CASE TXSTATE = ZTX.INIT
ZPKT.TYPE = ZPKT.INIT
ZTXBUF = XFEROPTS
POS = TXBLKLEN; GOSUB 3000; ZTXBUF = ZTXBUF:HEXPOS
POS = RXBLKLEN; GOSUB 3000; ZTXBUF = ZTXBUF:HEXPOS
IF TXFD = 1 THEN
IF FTP.MODE OR MNC.MODE THEN
PFNAME = FTPDIR:"SBZ.DL.":PORTNO
IF RUNNING.NT THEN
!@!EXECUTE OS.EXEC:' ':RM.CMD:' ':PFNAME ; !*UV,UP*!
!@!EXECUTE OS.EXEC:' ':TOUCH.CMD:' ':PFNAME ; !*UV,UP*!
END ELSE
!@!EXECUTE "sh -c 'rm ":PFNAME:"'" ;!*UV,UP*!
!@!EXECUTE "sh -c 'touch ":PFNAME:"'" ;!*UV,UP*!
END
!@!OPENSEQ PFNAME TO F.TMP ELSE STATUS = FTE.HOSTFILE.OPEN.ERROR; RETURN; !*UV,UP*!
OSDELETE PFNAME ON ERROR NULL ; !*UDT*!
OSWRITE "" ON PFNAME ON ERROR NULL ; !*UDT*!
OSOPEN PFNAME TO F.TMP ELSE STATUS = FTE.HOSTFILE.OPEN.ERROR; RETURN; !*UDT*!
!@!F.TMP = %OPEN(PFNAME, 770, 511); !*AP*!
IF TU.TRACE THEN TRACE = "Opened OS file ":PFNAME; GOSUB 6000
NOCONVERT ON ; BYTE.PTR = 0 ; !*UDT*!
IF NO.BLK.DOWN THEN
FOR BLK.CNT = 1 TO NO.BLK.DOWN
READ TXDATA FROM F.SOURCE, 'XFER.DATA.':BLK.CNT ELSE NULL
IF BLK.CNT > 1 THEN TXDATA = AM:TXDATA ELSE
IF TXHEADER # "" THEN TXDATA = TXHEADER:AM:TXDATA
END
OSBWRITE TXDATA ON F.TMP AT BYTE.PTR ON ERROR STATUS = FTE.FILE.WRITE.ERROR; !*UDT*!
BYTE.PTR = BYTE.PTR + LEN(TXDATA);!*UDT*!
!@!WRITEBLK TXDATA ON F.TMP THEN NULL ;!*UV,UP*!
!@!%WRITE(F.TMP, TXDATA, LEN(TXDATA)); !*AP*!
IF TU.TRACE THEN TRACE = "Writing blocked data to OS file."; GOSUB 6000
NEXT BLK.CNT
END ELSE
OSBWRITE TXDATA ON F.TMP AT 0 ON ERROR STATUS = FTE.FILE.WRITE.ERROR; !*UDT*!
!@!WRITEBLK TXDATA ON F.TMP THEN NULL ;!*UV,UP*!
!@!L = LEN(TXDATA); WLEN = 10000; !*AP*!
!@!IF L > WLEN THEN; !*AP*!
!@!LIM = INT(L / WLEN) + 1; !*AP*!
!@!FOR I = 1 TO LIM; !*AP*!
!@!O = 1 + ((I-1) * WLEN); S = WLEN; !*AP*!
!@!IF (I * WLEN) > L THEN S = L - ((I-1) * WLEN); !*AP*!
!@!BUFFER = TXDATA[O, S]; !*AP*!
!@!%WRITE(F.TMP, BUFFER, S); !*AP*!
!@!NEXT I; !*AP*!
!@!END ELSE %WRITE(F.TMP, TXDATA, L); !*AP*!
IF TU.TRACE THEN TRACE = "Writing data to OS file."; GOSUB 6000
END
OSCLOSE F.TMP; !*UDT*!
NOCONVERT OFF; !*UDT*!
EXECUTE '!chmod 777 ':PFNAME CAPTURING CAPT ;!*UDT*!
!@!CLOSESEQ F.TMP ;!*UV,UP*!
!@!IF NOT(RUNNING.NT) THEN EXECUTE "sh -c 'chmod 777 ":PFNAME:"'" ;!*UV,UP*!
!@!%CLOSE(F.TMP); !*AP*!
!@!%CHMOD(PFNAME, 511); !*AP*!
IF TU.TRACE THEN TRACE = "Closing OS file and cleaning up."; GOSUB 6000
IF MNC.MODE THEN PFNAME = UNC:"SBZ.DL.":PORTNO
ZTXBUF = ZTXBUF:SEMI:PFNAME:SEMI:TXDATA.LEN; !*AP,UDT,UP,UV*!
END ELSE
POS = TXDATA.LEN; IF HEX.OUTPUT THEN POS = INT(POS / 2)
IF NOT(BINARY) THEN POS = POS + COUNT(TXDATA, AM)
ZTXBUF = ZTXBUF:SEMI:POS
END
END ELSE
IF FTP.MODE OR MNC.MODE THEN
PFNAME = FTPDIR:"SBZ.UL.":PORTNO
NOCONVERT ON; OSWRITE 'dummy' ON PFNAME; NOCONVERT OFF ;!*UDT*!
EXECUTE '!chmod 777 ':PFNAME CAPTURING CAPT ;!*UDT*!
IF RUNNING.NT THEN
!@!EXECUTE OS.EXEC:' ':RM.CMD:' ':PFNAME ; !*UV,UP*!
!@!EXECUTE OS.EXEC:' ':TOUCH.CMD:' ':PFNAME ; !*UV,UP*!
END ELSE
!@!EXECUTE "sh -c 'rm ":PFNAME:"'" ;!*UV,UP*!
!@!EXECUTE "sh -c 'touch ":PFNAME:"'" ;!*UV,UP*!
END
!@!OPENSEQ PFNAME TO F.TMP ELSE STATUS = FTE.HOSTFILE.OPEN.ERROR; RETURN;!*UV,UP*!
!@!WRITEBLK TXDATA ON F.TMP THEN NULL ;!*UV,UP*!
!@!CLOSESEQ F.TMP ;!*UV,UP*!
!@!IF NOT(RUNNING.NT) THEN EXECUTE "sh -c 'chmod 777 ":PFNAME:"'" ;!*UV,UP*!
!@!F.TMP = %OPEN(PFNAME, 770, 511); !*AP*!
!@!IF F.TMP THEN; !*AP*!
!@!%CLOSE(F.TMP); !*AP*!
!@!%CHMOD(PFNAME, 511); !*AP*!
!@!END; !*AP*!
IF MNC.MODE THEN PFNAME = UNC:"SBZ.UL.":PORTNO
ZTXBUF = ZTXBUF:SEMI:PFNAME
END ELSE
ZTXBUF = ZTXBUF:SEMI:ACKAFTER + 1
END
END
ZLEN = LEN(ZTXBUF); GOSUB 1000
TXTIMER = TIME() + INT(TIME.OUT / 2); TXSTATE = ZTX.INITACK
IF FTP.MODE OR MNC.MODE THEN TXTIMER = 0; TXSTATE = ZTX.EOFACK
CASE TXSTATE = ZTX.XDATA
ZPKT.TYPE = ZPKT.DATA; ZLEN = 0
POS = TXPOS; IF HEX.OUTPUT THEN POS = INT(POS / 2)
GOSUB 3000; ZTXBUF = HEXPOS
IF TXPOS < 0 THEN
I = -1
END ELSE
IF NO.BLK.DOWN THEN
BLK.POS = TXPOS - OLD.POS
NEWTXBUF = TXDATA[BLK.POS + 1, TXBLKLEN]
IF TU.TRACE THEN TRACE = "Processing Data Block: ":BLK.CNT:" of ":NO.BLK.DOWN; GOSUB 6000
IF LEN(NEWTXBUF) < TXBLKLEN THEN
IF TU.TRACE THEN TRACE = "Reading new Data Block..."; GOSUB 6000
BLK.CNT = BLK.CNT + 1
IF BLK.CNT <= NO.BLK.DOWN THEN
OLD.POS = TXPOS; BLK.POS = 0
READ TXDATA FROM F.SOURCE, 'XFER.DATA.':BLK.CNT THEN
IF BLK.CNT < 2 THEN
IF TXHEADER # "" THEN TXDATA = TXHEADER:AM:TXDATA
END ELSE
TXDATA = NEWTXBUF:AM:TXDATA
END
ZTXBUF = ZTXBUF:TXDATA[BLK.POS+1, TXBLKLEN]
I = LEN(ZTXBUF) - 8
END ELSE
ZTXBUF = ZTXBUF:NEWTXBUF
I = LEN(ZTXBUF) - 8
END
END ELSE
ZTXBUF = ZTXBUF:NEWTXBUF
I = LEN(ZTXBUF) - 8
END
END ELSE
ZTXBUF = ZTXBUF:NEWTXBUF
I = LEN(ZTXBUF) - 8
END
END ELSE
ZTXBUF = ZTXBUF:TXDATA[TXPOS + 1, TXBLKLEN]
I = LEN(ZTXBUF) - 8
END
END
IF I > 0 THEN
TXPOS = TXPOS + I; ZLEN = I + 8
GOSUB 1000
TXGOODBYTES = TXGOODBYTES + I
IF TXBLKLEN < TXMAXBLKLEN AND TXGOODBYTES >= TXGOODNEEDED THEN
TXBLKLEN = TXBLKLEN * 2
IF TXBLKLEN >= TXMAXBLKLEN THEN
TXBLKLEN = TXMAXBLKLEN; TXGOODNEEDED = 0
END
END
IF TXWINDOW AND (TXPOS >= TXLASTACK + TXWINDOW) THEN
TXTIMER = TIME() + INT(TIME.OUT / 2)
TXSTATE = ZTX.DATAACK
END
IF NOT(TXSTART) THEN TXSTART = TIME()
END ELSE
ZPKT.TYPE = ZPKT.EOF; ZLEN = 8
GOSUB 1000
TXTIMER = TIME() + TIME.OUT; TXSTATE = ZTX.EOFACK
END
CASE TXSTATE = ZTX.EOF
ZPKT.TYPE = ZPKT.EOF; ZLEN = 8
POS = TXPOS; IF HEX.OUTPUT THEN POS = INT(POS / 2)
GOSUB 3000; ZTXBUF = HEXPOS
GOSUB 1000
TXTIMER = TIME() + INT(TIME.OUT / 2); TXSTATE = ZTX.EOFACK
CASE TXSTATE = ZTX.END
ZPKT.TYPE = ZPKT.END; ZLEN = 0; ZTXBUF = ""
GOSUB 1000
ZPKT.TYPE = ZPKT.END; ZLEN = 0; ZTXBUF = ""
GOSUB 1000
TXTIMER = TIME() + INT(TIME.OUT / 2); TXSTATE = ZTX.ENDACK
END CASE
 INCLUDE TUBP TU.SBZ.INC1
WHILE TXSTATE DO
REPEAT
900 * ABORT or normal END
IF SPOOLER.OUTPUT THEN PRINTER CLOSE
 INCLUDE TUBP ECHO.ON.H
!@!IF PTERM THEN EXECUTE "PTERM CASE INVERT" CAPTURING RUBBISH ; !*UV,UP*!
!@!IF TXFD = -1 THEN F.RXFILE = OLD.F.RXFILE ; !*UV,UP*!
RETURN
 INCLUDE TUBP TU.SBZ.INC
 INCLUDE TUBP TU.SBZ.INC2
 INCLUDE TUBP TU.SBZ.INIT
END
