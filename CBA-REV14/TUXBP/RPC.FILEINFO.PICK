SUBROUTINE RPC.FILEINFO.PICK(ARRAY, VALUE, ERROR)
 INCLUDE TUBP USER.INCLUDE.H
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
*
* Description : Stored Procedure
*
 INCLUDE TUBP SPECIAL.H
*
VALUE = ""
ERROR = 0
FILE1 = ARRAY<1>
OPEN FILE1 TO FN1 ELSE
VALUE = "Illegal File ":FILE1
ERROR = 1
RETURN
END
*
MD.FILE = 'VOC'; !*PI/O,PR1ME,UDT,UDTVMS,UP,UV*!
!@!MD.FILE = 'MD'; !*ADDS,ALTOS,AP,GA,MRX,PICK,SEQ,ULT*!
OPEN MD.FILE TO MD ELSE
MD.FILE = 'MD'
OPEN MD.FILE TO MD ELSE
VALUE = 'Cannot locate MD or VOC'
ERROR = 1
RETURN
END
END
ACCESS = 'ISTAT ':FILE1
IF FILE1[1, 5] = 'DICT ' THEN
OPEN '','MD' TO DICT.FILE ELSE
VALUE = 'Cannot locate MD or VOC'
ERROR = 1
RETURN
END
FILE1 = FIELD(FILE1, ' ', 2)
END ELSE
IF FILE1 = 'MD' THEN
OPEN '','MD' TO MD ELSE
VALUE = 'Cannot locate MD or VOC'
ERROR = 1
RETURN
END
READ DLID FROM MD,'SYSTEM' ELSE
WRITE 'Q':AM:'SYSTEM' ON MD,'SYSTEM'
END
OPEN '','SYSTEM' TO DICT.FILE ELSE
VALUE = 'Cannot locate SYSTEM'
ERROR = 1
RETURN
END
END ELSE
OPEN 'DICT',FILE1 TO DICT.FILE ELSE
VALUE = "Illegal File ":FILE1
ERROR = 1
RETURN
END
END
END
READ DLID FROM DICT.FILE,FILE1 ELSE DLID = ''
MODULO = ''; SEPARATION = ''; 
IF DLID<1> = 'Q' THEN
END ELSE
MODULO = DLID<3>
SEPARATION = DLID<4>
IF SEPARATION < 1 THEN SEPARATION = 1
END
*
VALUE<-1> = "File Definition - ":DLID<1>
IF DLID<1> = 'Q' THEN
IF DLID<2> = '' THEN
DLID<2> = FIELD(OCONV('','U50BB'),' ', 2)
END
IF DLID<3> = '' THEN
DLID<3> = 'MD'
END
VALUE<-1> = 'Account - ':DLID<2>
VALUE<-1> = 'File Name - ':DLID<3>
END ELSE
VALUE<-1> = "Base - ":DLID<2>
VALUE<-1> = "Modulo - ":DLID<3>
IF DLID<4> THEN
VALUE<-1> = "Seperation - ":DLID<4>
END
END
IF DLID<5> # "" THEN
VALUE<-1> = "File has retrieval locks"
END
IF DLID<6> # "" THEN
VALUE<-1> = "File has update locks"
END
IF MODULO < 202 THEN
EXECUTE ACCESS CAPTURING OUTPUT
AMC = DCOUNT(OUTPUT, AM)
COUNTERS = ''
TOTAL.FRAMES = ''
STATS = ''
IC = 0
FOR I = 1 TO AMC
LINE = TRIM(OUTPUT<I>)
IF FIELD(LINE, ' ', 1) MATCHES '1N0N' THEN
IF FIELD(LINE, ' ', 2) MATCHES '1N0N' THEN
IC = IC + 1
FOR J = 1 TO 3
COUNTERS<IC, J> = FIELD(LINE, ' ', J)
NEXT J
END ELSE
TOTAL.FRAMES = LINE
END
END ELSE
WORD = OCONV(FIELD(LINE, ' ', 1), 'MCU')
BEGIN CASE
CASE WORD = 'TOTAL'
STATS<1> = LINE
CASE WORD = 'AVG.'
STATS<2> = LINE
CASE WORD = 'STD.'
STATS<3> = LINE
END CASE
END
NEXT I
EMPTY = 0
OVERFLOWED = 0
AMC = DCOUNT(COUNTERS, AM)
FOR I = 1 TO AMC
IF COUNTERS<I, 2> = 0 THEN
EMPTY = EMPTY + 1
END
IF COUNTERS<I, 1> > SEPARATION THEN
OVERFLOWED = OVERFLOWED + 1
END
NEXT I
FOR I = 1 TO 3
VALUE<-1> = STATS<I>
NEXT I
VALUE<-1> = 'modulo = ':MODULO:' separation = ':SEPARATION:' primary file space = ':MODULO * SEPARATION:' total file space = ':TOTAL.FRAMES
VALUE<-1> = 'overflowed groups = ':OVERFLOWED:' empty groups = ':EMPTY
END ELSE
VALUE<-1> = 'no statistics on large files'
END
*
RETURN
END
