SUBROUTINE TU.TO.123(HOSTFILENAME, FIELDLIST, SELECTION, OPTIONS, SHEETNAME, STATUS)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
***************************************************************************
*-* TU.TO.123(Pickfilename, Fieldlist, Selection, Options, Sheetname,
*-* Status)
*-*
*-*       This function will download formatted pick data into a LOTUS-123 spreadsheet
*-* using a combination of file transfer and DDE.
*-*
*-* [P] Pickfilename   The name of the pick file to be downloaded.
*-*                    Can be AM delimited with seperate dictionary
*-*                    specified. eg Data:AM:Dict .
*-*
*-* [P] Fieldlist      List of dictionary definitions of fields to be
*-*                    downloaded.
*-*
*-* [P] Selection      Selection criteria to locate items to be downloaded.
*-*
*-* [P] Options        This is an array of characters to indicate minor details
*-*                    of the transfer. Possible values INCLUDE :-
*-*
*-*                       C, Clear the destination before downloading
*-*                       F, Use file transfer protocol to send data
*-*                       M, Transfer field MASKS (spreadsheets only)
*-*                       H, Transfer Heading
*-*
*-* [P] Sheetname      This the name of the PC file to store the data.
*-*
*-* [R] Status         This is an indication of the success or failure of the
*-*                    subroutine. A successful call will return with zero
*-*                    Status and failure will return with a non-zero value.
***************************************************************************
*
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP HEADER.H
 INCLUDE TUBP TU.ERRORCODES.H
 INCLUDE TUBP USER.INCLUDE.H
*
DATAFILE = HOSTFILENAME<1>
DICTFILE = HOSTFILENAME<2>
IF DICTFILE = "" THEN DICTFILE = HOSTFILE
IF TU.TRACE THEN
OPEN '','TUSTATE' TO TUSTATE THEN
TRACE.O = 'TO.123':VM:HOSTFILENAME:VM:FIELDLIST:VM:SELECTION:VM:OPTIONS:VM:SHEETNAME
WRITEV TRACE.O ON TUSTATE,('TRACE.':PORTNO),-1
END
END
*
SIMPLENAME = SHEETNAME
P = INDEX(SIMPLENAME, '.', 1)
IF P THEN
SIMPLENAME = SIMPLENAME[1, P - 1]
END
IF INDEX(SIMPLENAME, '\', 1) THEN
SIMPLENAME = FIELD(SIMPLENAME, '\', COUNT(SIMPLENAME, '\'))
END
SIMPLENAME = OCONV(SIMPLENAME, 'MCU')
TIMEOUT = 60
HANDLE = ''
BUILD.ALL = INDEX(OPTIONS, "0", 1)
COLUMN.HEADER = INDEX(OPTIONS, "1", 1)
INSERT.BLANK = INDEX(OPTIONS, "2", 1)
*
*-* if download via file, send the file on ahead
*-* otherwise, build the data to be sent in preparation for DDE transfer
*
IF INDEX(OPTIONS, 'F',1 ) THEN
PCFILENAME = SHEETNAME; HEADER = ''
IF INDEX(PCFILENAME, '.', 1) THEN
PCFILENAME = FIELD(PCFILENAME, '.', 1)
END
PCFILENAME = PCFILENAME:'.TXT'
SEPARATORS = SEP.QUOTES
DOWNLOADOPTIONS = 'HOM'; * host init, overwrite, no STATUS window
IF BUILD.ALL THEN DOWNLOADOPTIONS = DOWNLOADOPTIONS:"0"
IF COLUMN.HEADER THEN DOWNLOADOPTIONS = DOWNLOADOPTIONS:"1"
IF INSERT.BLANK THEN DOWNLOADOPTIONS = DOWNLOADOPTIONS:"2"
DESCRIPTION = '123W'
CALL TU.PC.DOWNLOAD(DATAFILE:AM:DICTFILE, FIELDLIST, SELECTION, PCFILENAME, SEPARATORS, DOWNLOADOPTIONS, DESCRIPTION, STATUS)
IF STATUS THEN RETURN
CALL TU.BUILD.HEADER(DICTFILE, FIELDLIST, HEADER, '123W', STATUS)
IF STATUS THEN RETURN
END ELSE
FLAG = "123W"; BUILD.OPT = ""
IF BUILD.ALL THEN BUILD.OPT = BUILD.OPT:"F"
IF COLUMN.HEADER THEN BUILD.OPT = BUILD.OPT:"H"
IF INSERT.BLANK THEN BUILD.OPT = BUILD.OPT:"I"
IF BUILD.OPT # "" THEN FLAG = FLAG:VM:BUILD.OPT
CALL TU.BUILD.XFER.DATA(DATAFILE:AM:DICTFILE, FIELDLIST, SELECTION, FLAG, STATUS)
IF STATUS THEN RETURN
OPEN '','TUXFER.DATA.':PORTNO TO TUXFER.DATA ELSE
OPEN '','TUSTATE' TO TUSTATE ELSE STATUS = FTE.TUSTATE.OPEN.ERROR; RETURN
WRITE (FTE.TUXFER.DATA.FILE.OPEN.ERROR:AM:'TUXFER.DATA.':PORTNO) ON TUSTATE,'ERROR.':PORTNO
STATUS = FTE.TUXFER.DATA.FILE.OPEN.ERROR
RETURN
END
READ HEADER FROM TUXFER.DATA,'XFER.HEADER' ELSE
OPEN '','TUSTATE' TO TUSTATE ELSE STATUS = FTE.TUSTATE.OPEN.ERROR; RETURN
WRITE (FTE.ITEM.READ.ERROR:AM:'123':AM:'TUXFER.DATA.':PORTNO:' XFER.HEADER') ON TUSTATE,'ERROR.':PORTNO
STATUS = FTE.ITEM.READ.ERROR
RETURN
END
END
IF STATUS THEN RETURN
*
HDR.SUPP = INDEX(FIELDLIST, "HDR-SUPP", 1) + INDEX(FIELDLIST, "HDR.SUP", 1)
*
FIELDCOUNT = COUNT(HEADER<HED.DICTNAME>, VM) + (HEADER<HED.DICTNAME> # '')
CALL TU.DDE.CONNECT('123W', 'SYSTEM', HANDLE, STATUS)
W123 = "123W.EXE"
IF STATUS THEN
CALL TU.LAUNCH.APP(W123, APP.SHOWMINNOACTIVE, STATUS)
IF STATUS THEN RETURN
!  CALL TU.CHECK.APP(W123, STATUS)
!  IF STATUS THEN RETURN
CALL TU.DDE.CONNECT('123W', 'SYSTEM', HANDLE, STATUS)
IF STATUS THEN RETURN
END
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Indicate "Transfer from ':DATAFILE:'"})]', STATUS)
IF STATUS THEN GOTO 999
IF INDEX(OPTIONS, 'F', 1) THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({File-Import Comma;"':PCFILENAME:'"})]', STATUS)
IF STATUS THEN GOTO 999
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Select A1..IV1;A1})][run({Insert-Rows})]', STATUS)
IF STATUS THEN GOTO 999
END ELSE
IF INDEX(OPTIONS, 'C', 1) THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Select A1..IV8192;A1})][run({Edit-Clear "BOTH"})]', STATUS)
IF STATUS THEN GOTO 999
END
END
ROW = 1; COL = 1
FOR I = 1 TO FIELDCOUNT
IF INDEX(OPTIONS, 'M', 1) THEN
MACRO = '[run({Select ':CHAR(64 + I):'1..':CHAR(64 + I):'8192;':CHAR(64 + I)
MACRO = MACRO:'1})][run({Column-Width ':HEADER<HED.LENGTH, I>:'})]'
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, MACRO, STATUS)
IF STATUS THEN GOTO 999
IF HEADER<HED.JUST, I> = 'R' THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Style-Align-Horizontal "RIGHT"})]', STATUS)
END ELSE
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Style-Align-Horizontal "LEFT"})]', STATUS)
END
IF STATUS THEN GOTO 999
MASK = HEADER<HED.MASK, I>
IF MASK # '' THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Style-Number-Format ':MASK:'})]', STATUS)
IF STATUS THEN GOTO 999
END
IF NOT(HDR.SUPP) THEN
!            CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Cell-Enter ':HEADER<HED.HEADING, I>:SEMI:CHAR(64 + I):'1})]', STATUS)
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Let ':CHAR(64 + I):'1;':HEADER<HED.HEADING, I>:'})]', STATUS)
IF STATUS THEN GOTO 999
END
END
NEXT I
IF NOT(HDR.SUPP) THEN
ROW = ROW + 1
END
IF NOT(INDEX(OPTIONS, 'F', 1)) THEN
*
*-* send data down cell at a time
*
FOR ID = 1 TO HEADER<HED.IDCOUNT>
READ ITEM FROM TUXFER.DATA,'XFER.DATA.':ID ELSE
OPEN '','TUSTATE' TO TUSTATE ELSE STATUS = FTE.TUSTATE.OPEN.ERROR; RETURN
WRITE (FTE.ITEM.READ.ERROR:AM:'123':AM:'TUXFER.DATA.':PORTNO:' ':ID) ON TUSTATE,'ERROR.':PORTNO
STATUS = FTE.ITEM.READ.ERROR
RETURN
END
AMC = COUNT(ITEM, AM) + (ITEM # '')
FOR AC = 1 TO AMC
VMC = COUNT(ITEM<AC>, VM) + (ITEM<AC> # '')
FOR COL = 1 TO VMC
FIELD = ITEM<AC, COL>
!               CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Cell-Enter ':FIELD:SEMI:CHAR(64 + COL):ROW:'})]', STATUS)
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Let ':CHAR(64 + COL):ROW:SEMI:FIELD:'})]', STATUS)
IF STATUS THEN GOTO 999
NEXT COL
ROW = ROW + 1
NEXT AC
NEXT ID
END
!      IF SIMPLENAME # '' THEN
!         CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({File-Save "':SHEETNAME:'"})]', STATUS)
!      END
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Select A1})]', STATUS)
IF STATUS THEN GOTO 999
IF INDEX(OPTIONS, 'P', 1) THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Print "CURRENT";1;9999;1;1})]', STATUS)
IF STATUS THEN GOTO 999
END
IF INDEX(OPTIONS, 'R', 1) THEN
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, '[run({Window-State "RESTORE"})]', STATUS)
IF STATUS THEN GOTO 999
END
CALL TU.DDE.DISCONNECT(HANDLE, STATUS)
RETURN
*
*-* error exit
*
999 *
DUMMY = ''
CALL TU.DDE.DISCONNECT(HANDLE, DUMMY)
RETURN
END
