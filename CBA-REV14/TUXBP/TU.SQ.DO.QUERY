SUBROUTINE TU.SQ.DO.QUERY(DEFN, QBH)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
 INCLUDE TUBP USER.INCLUDE.H
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP DOS.PATH.H
 INCLUDE TUBP TU.ERRORCODES.H
*
EQU TRUE TO 1, FALSE TO 0
*
OUTPUT = OCONV(DEFN<10>, 'MCU')[1, 1]; DEBUGMODE = FALSE
*
OPEN '','TUDEFN' TO F.TUDEFN ELSE
STATUS = FTE.TUDEFN.OPEN.ERROR
GOTO 999
END
READ RPC.CONFIG FROM F.TUDEFN, "SMART.QUERY" ELSE
STATUS = FTE.ITEM.READ.ERROR
GOTO 999
END
RPC.FILE = RPC.CONFIG<1>
IF RPC.FILE = "RPC.FILELIST.STD" THEN BSEC = FALSE ELSE BSEC = TRUE
*
EXCEL.GRAPH.TYPES = "AREA":AM:"BAR":AM:"COLUMN":AM:"LINE":AM:"PIE":AM:"SCATTER"
EXCEL.GRAPH.TYPES<-1> = "3D-AREA":AM:"3D-COLUMN":AM:"3D-LINE":AM:"3D-PIE"
EXCEL.GRAPH.TYPES<-1> = "RADAR":AM:"3D-BAR":AM:"3D-SURFACE"
*
SELECTION = TRIM(DEFN<5>:' ':DEFN<4>)
HOSTFILENAME = DEFN<3>
DICTFILENAME = DEFN<2>
IF DEBUGMODE THEN
CRT "SELECTION:- ":SELECTION
CRT "HOSTFILE:- ":HOSTFILENAME
CRT "DICTFILE:- ":DICTFILENAME
END
*
SQLATOR.FILE = FALSE; MSG = ""
OPEN '','VOC' TO F.VOC ELSE MSG = "Unable to open VOC file"; !*UDT*!
IF MSG # "" THEN
CALL TU.FORM.DIALOG('', 1, MSG, '', '', 'Smart Query Error', ERR)
STATUS = 0
RETURN
END
READ DFILE FROM F.VOC, HOSTFILENAME ELSE DFILE = ""; !*UDT*!
IF DFILE<1> = "FX" THEN SQLATOR.FILE = TRUE; !*UDT*!
*
IF SQLATOR.FILE THEN
IF HOSTFILENAME # DICTFILENAME THEN
MSG = "SQLator file used. Cannot use a different dictionary."
CALL TU.FORM.DIALOG('', 1, MSG, '', '', 'Smart Query Error', ERR)
STATUS = 0
RETURN
END
END
*
STATUS = 0 - QBH; * Currently the only way to pass stuff to Build.Data
*
IF HOSTFILENAME = '' THEN
CALL TU.FORM.DIALOG('', 1, "Host File Name ?", '', '', 'Smart Query Error', ERR)
STATUS = 0
END ELSE
*
IF BSEC THEN
STATUS = 0; FILE.LIST = ""
CALL @RPC.FILE("", FILE.LIST, STATUS)
IF STATUS THEN GOTO 999
IF NOT(INDEX(FILE.LIST, HOSTFILENAME, 1)) THEN
MSG = "Access to file ":HOSTFILENAME:" is restricted."
CALL TU.FORM.DIALOG('', 1, MSG, '', '', 'Smart Query Error', ERR)
STATUS = 1
RETURN
END
END
*
FIELDLIST = DEFN<6>
IF DEFN<9, 1> THEN
FIELDLIST = FIELDLIST:' ID-SUPP'
END
IF DEFN<9, 2> THEN
FIELDLIST = FIELDLIST:' DET-SUPP'
END
IF DEFN<9, 3> THEN
FIELDLIST = FIELDLIST:' HDR-SUPP'
END
IF DEFN<9, 4> THEN
FIELDLIST = FIELDLIST:' COL-HDR-SUPP'
END
IF DEBUGMODE THEN CRT "FIELDLIST:- ":FIELDLIST
*
*-* Check for OEM to ANSI
*
IF DEFN<9, 5> THEN
OPTIONS = 'FHOMIR'
END ELSE
OPTIONS = 'FHOMR'
END
*
*-* Check for Strip Dupliacte and Insert Blank Line
*
IF DEFN<9,6> THEN NULL ELSE OPTIONS = OPTIONS:'0'
IF DEFN<9,7> THEN OPTIONS = OPTIONS:'2'
*
NAME = DEFT.DOS.PATH:"\TU"
*
*-* Setup terminal to aux print ok
*
IF OUTPUT = 'A' THEN
*-* Find default values
STATUS = 0; ROWS = 0; PRN.OPTION = ""
EXECUTE "TERM" CAPTURING RUBBISH; !*-MRX*!
!@!PERFORM "TERM" CAPTURING RUBBISH; !*MRX*!
ORIG.TERM.DEPTH = SYSTEM(3)
IF DEBUGMODE THEN CRT "Getting Printer Options."
CALL TU.QUERY.PRINT.OPTIONS(PRN.OPTION, STATUS)
IF STATUS THEN GOTO 999
*-* Setup trun Windows Printer Drivers on to get the number or rows that
*-* we can print to.
IF NOT(INDEX(PRN.OPTION, "P", 1)) THEN
IF DEBUGMODE THEN CRT "Setting Windows Print Drivers on."
CALL TU.SET.PRINT.OPTIONS("P", 1, STATUS)
IF STATUS THEN GOTO 999
END
IF DEBUGMODE THEN CRT "Getting the number of rows we can print to."
CALL TU.GET.PRINTER.ROWS("", ROWS, STATUS)
IF STATUS THEN GOTO 999
EXECUTE "TERM ,":ROWS CAPTURING RUBBISH; !*-MRX*!
!@!PERFORM "TERM ,":ROWS CAPTURING RUBBISH; !*MRX*!
END
*
10 *
BEGIN CASE
CASE OUTPUT = 'H' OR OUTPUT = 'T' OR OUTPUT = 'A'; * printer or terminal or auxilary
IF DEBUGMODE THEN CRT "Sending Query to terminal or printer."
IF DEFN<4> = '' THEN
SENTENCE = 'LIST '
END ELSE
SENTENCE = 'SORT '
END
IF NOT(SQLATOR.FILE) THEN
IF DICTFILENAME NE "" THEN SELECTION = "USING DICT ":DICTFILENAME:" ":SELECTION
END
SENTENCE = SENTENCE:HOSTFILENAME:' ':SELECTION:' ':FIELDLIST
IF DEFN<7> # '' THEN
SENTENCE = SENTENCE:' HEADING "':DEFN<7>:'"'
END
IF DEFN<8> # '' THEN
SENTENCE = SENTENCE:' FOOTING "':DEFN<8>:'"'
END
IF OUTPUT = 'H' THEN
OPEN '','MD' TO F.MD THEN
READ TEST FROM F.MD, 'LPTR' THEN
SENTENCE = SENTENCE:' LPTR'
END ELSE
SENTENCE = SENTENCE:' (P'
END
END ELSE
OPEN '','VOC' TO F.MD THEN
READ TEST FROM F.MD, 'LPTR' THEN
SENTENCE = SENTENCE:' LPTR'
END ELSE
SENTENCE = SENTENCE:' (P'
END
END ELSE
SENTENCE = SENTENCE:' (P'
END
END
*
END
IF DEBUGMODE THEN CRT "Sentence to be executed:- ":SENTENCE
IF OUTPUT = 'H' THEN
!@!PERFORM SENTENCE RTNLIST CAPTURING JUNK; !*MRX*!
IF SQLATOR.FILE THEN
UDTEXECUTE SENTENCE CAPTURING JUNK; !*UDT,UDTVMS*!
END ELSE
EXECUTE SENTENCE CAPTURING JUNK; !*-MRX*!
END
END ELSE
IF OUTPUT = 'A' THEN
CRT TU.AUX.ON:
!@!NPAGE = " (N"; !*-UDT,-UDTVMS,-PI/O,-PR1ME*!
!@!NPAGE = " NO.PAGE" ; !*PI/O, PR1ME*!
NPAGE = " NOPAGE" ; !*UDT,UDTVMS*!
SENTENCE = SENTENCE:NPAGE
END
!@!PERFORM SENTENCE RTNLIST; !*MRX*!
IF SQLATOR.FILE THEN
UDTEXECUTE SENTENCE; !*UDT,UDTVMS*!
END ELSE
EXECUTE SENTENCE; !*-MRX*!
END
IF OUTPUT = 'A' THEN
*-* Reset terminal characteristics, and Print Driver config.
CRT TU.AUX.OFF:
EXECUTE "TERM ,":ORIG.TERM.DEPTH; !*-MRX*!
!@!PERFORM "TERM ,":ORIG.TERM.DEPTH; !*MRX*!
IF INDEX(PRN.OPTION, "P", 1) THEN
IF DEBUGMODE THEN CRT "Turning Windows Printer Drivers on."
CALL TU.SET.PRINT.OPTIONS("P", 1, STATUS)
IF STATUS THEN GOTO 999
END
END
END
STATUS = 0
CASE OUTPUT = 'G'; * gui window
IF DEBUGMODE THEN CRT "Sending query to gui window."
DATA.OPT = ""; FLAG = "GUI"
IF INDEX(OPTIONS, '0', 1) THEN DATA.OPT = DATA.OPT:"F"
IF INDEX(OPTIONS, '1', 1) THEN DATA.OPT = DATA.OPT:"H"
IF DATA.OPT # "" THEN FLAG = FLAG:VM:DATA.OPT
CALL TU.BUILD.XFER.DATA(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST, SELECTION, FLAG, STATUS)
IF STATUS = 20 THEN
*
** output limit exceeded, just output in character mode
*
CRT "Smart Query Message"
CRT
CRT 'Your request would exceed the limits of the GUI display'
CRT 'Do you wish to show the report in character mode ? ':
INPUT CANCEL,1
IF OCONV(CANCEL, 'MCU') = 'N' THEN RETURN
SELECTION = ''
IF SQLATOR.FILE THEN
UDTEXECUTE 'GET-LIST TUXFER.DATA.':PORTNO CAPTURING OUTPUT; !*UDT,UDTVMS*!
END ELSE
EXECUTE 'GET-LIST TUXFER.DATA.':PORTNO CAPTURING OUTPUT; !*-MRX*!
!@!PERFORM 'GET-LIST TUXFER.DATA.':PORTNO CAPTURING OUTPUT; !*MRX*!
END
OUTPUT = 'T'
STATUS = 0
GOTO 10
* more than 5000 lines
END
IF NOT(STATUS) THEN
EXECUTE 'SMART.LIST'; !*-MRX*!
!@!PERFORM 'SMART.LIST' ; !*MRX*!
END
CASE OUTPUT = 'E'; * excel spreadsheet
IF OCONV(FIELD(DEFN<10>, " ", 3), "MCU") = "GRAPH" THEN
IF DEBUGMODE THEN CRT "Sending query to Excel Graph."
GTYPE = FIELD(DEFN<10>, " ", 2)
LOCATE(GTYPE, EXCEL.GRAPH.TYPES; TYPE) ELSE TYPE = 10
CALL TU.TO.EXCEL.GRAPH(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST:" TOTAL-SUPP", SELECTION, OPTIONS, "", TYPE, STATUS)
END ELSE
IF DEBUGMODE THEN CRT "Sending query to Excel."
CALL TU.TO.EXCEL(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST, SELECTION, OPTIONS, "", STATUS)
END
CASE OUTPUT = 'W'; * word6.0 document
IF DEBUGMODE THEN CRT "Sending query to Word 6."
CALL TU.TO.WORD(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST, SELECTION, OPTIONS, NAME, STATUS)
CASE OUTPUT = '1'; * lotus 123 spreadsheet
IF OCONV(FIELD(DEFN<10>, " ", 3), "MCU") = "GRAPH" THEN
TYPE = FIELD(DEFN<10>, " ", 2)
IF DEBUGMODE THEN CRT "Sending query to Lotus 123 Graph."
CALL TU.TO.123.GRAPH(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST:" TOTAL-SUPP", SELECTION, OPTIONS, NAME, TYPE, STATUS)
END ELSE
IF DEBUGMODE THEN CRT "Sending query to Lotus 123."
CALL TU.TO.123(HOSTFILENAME:AM:DICTFILENAME, FIELDLIST, SELECTION, OPTIONS, NAME, STATUS)
END
CASE TRUE; STATUS = 7; * Invalid Mode
END CASE
END
999 *
IF STATUS THEN
CALL TU.RESOLVE.STATUS(STATUS, MSG)
IF STATUS = 12 THEN
NAME = ''
IF OUTPUT[1, 1] = "E" THEN NAME = "EXCEL"; DESC = "Excel"
IF OUTPUT[1, 1] = "W" THEN NAME = "WINWORD"; DESC = "Word"
IF OUTPUT[1, 1] = "1" THEN NAME = "L123"; DESC = "Lotus 123"
IF NAME NE "" THEN
MSG = "Unable to run ":NAME:", please consult your system administrator."
CALL TU.FORM.DIALOG('', 1, MSG, '', '', 'Smart Query Error', ERR)
END
END ELSE
CALL TU.FORM.DIALOG('', 1, MSG, '', '', 'Smart Query Error', ERR)
END
END
RETURN
END
