SUBROUTINE TU.MENU.LOAD(DEFNFILE, MENUNAME, PARENT, OPTIONS, MENUHANDLE, ERROR)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
*************************************************************************
* DESCRIPTION : Load (Download) a menu definition
* PASSED      : DEFNFILE - file name containing menu defn record
*                          or menu definition itself
*               MENUNAME - name of menu defn
*               OPTIONS  - H: hide
*                          L: local stored defn (do not look on host)
*               PARENT   - Handle of parent form
*                          If menu type = 2 then must be specified else
*                          may be left NUL
* RETURNED    : MENUHANDLE - handle of menu
*               ERROR      - 0:no error  else error
*************************************************************************
*
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP ROC.H
 INCLUDE TUBP USER.INCLUDE.H
*
MENUHANDLE = 0
LOCAL = INDEX(OPTIONS, 'L', 1)
BEGIN CASE
CASE LOCAL OR INDEX(DEFNFILE, AM, 1)
DETAILS = MENUNAME:VM:PARENT:AM:AM:OPTIONS:AM:DEFNFILE
CALL ROC.SET("roc", LOAD.MENU, DETAILS, ERROR)
IF DETAILS<1> = "0" THEN
ERROR = TRUE
MENUHANDLE = DETAILS<2>
END ELSE IF NOT(ERROR) THEN MENUHANDLE = DETAILS
CASE 1
OPEN DEFNFILE TO FFILE THEN
READV TD FROM FFILE, MENUNAME, 1 THEN
DETAILS = MENUNAME:VM:PARENT:AM:OPTIONS:AM:TD
CALL ROC.SET("roc", LOAD.MENU, DETAILS, ERROR)
VALS = DETAILS
IF VALS<1> = "0" THEN
ERROR = TRUE
MENUHANDLE = VALS<2>
END ELSE
IF VALS<1> = -1 AND NOT(ERROR) THEN
READ ITEM FROM FFILE, MENUNAME THEN
DETAILS = MENUNAME:VM:PARENT:AM:OPTIONS:AM:ITEM
CALL ROC.SET("roc", DOWNLOAD.MENU, DETAILS, ERROR)
VALS = DETAILS
IF VALS<1> = "-1" THEN
ERROR = TRUE
MENUHANDLE = VALS<2>
END
END ELSE ERROR = TRUE
END
END
END ELSE ERROR = TRUE
END ELSE ERROR = TRUE
IF NOT(ERROR) THEN MENUHANDLE = VALS
END CASE
RETURN
END
