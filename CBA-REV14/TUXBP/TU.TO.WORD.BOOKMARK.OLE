SUBROUTINE TU.TO.WORD.BOOKMARK.OLE(BOOKMARKS, BOOKDATA, OPTIONS, DOCUMENTNAME, STATUS)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
***************************************************************************
*-* TU.TO.WORD.BOOKMARK.OLE(Bookmarks, Bookdata, Options, Documentname,
*-*                         Status)
*-*
*-* This function will take the data passed to it in Bookdata and write
*-* the data into the specified book mark fields.
*-*
*-* [P] Bookmarks           A VM delimited list of bookmark names.
*-*
*-* [P] Bookdata            A VM delimited list of data to be sent to the
*-*                         corresponding bookmarks.
*-*
*-* [P] Options             This is an array of characters to indicate
*-*                         minor details of the transfer. Possible values
*-*                         INCLUDE :-
*-*
*-*                           I, Do OEM to ANSI conversion
*-*                           P, Print Document
*-*                           R, Restore Application
*-*                           S, Save Document
*-*                           X, Close Word
*-*
*-* [P] Documentname        This the name of Word document to send the
*-*                         bookmark data to.
*-*
*-* [R] Status              This is an indication of the success or failure
*-*                         of the subroutine. A successful call will
*-*                         return with zero Status and failure will return
*-*                         with a non-zero value.
***************************************************************************
*
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP HEADER.H
 INCLUDE TUBP TU.ERRORCODES.H
 INCLUDE TUBP USER.INCLUDE.H
 INCLUDE TUBP ROC.H
*
DEBUGFLAG = FALSE
OFFICE95 = FALSE; * boolean Office95 on client
HROC = 0; * handle to ROC object
HWA = 0; * handle to Word.Application object
PCFILENAME = DOCUMENTNAME
*
GOSUB 100; * OLE Init
IF STATUS THEN RETURN
IF OFFICE95 THEN GOSUB 200 ELSE GOSUB 300
GOSUB 900
RETURN
*
*-* OLE Init
*
100 *
*
IF INDEX(OPTIONS, "I", 1) THEN OEMTOANSI = TRUE ELSE OEMTOANSI = FALSE
CALL TU.INIT(STATUS)
IF STATUS THEN RETURN
 INCLUDE TUBP INIT.WORD.OLE.METHODS.H
RETURN
*
*-* Office 95, use DDE and macros
*
200 *
TIMEOUT = 10; HANDLE = 0; SYSTEMHANDLE = 0; MACRO = ""
 INCLUDE TUBP INIT.WORD.DDE.FUNCTIONS.H
*
NO.BOOK = COUNT(BOOKMARKS, VM) + (BOOKMARKS # '')
IF OEMTOANSI THEN OPT = "" ELSE OPT = "X"
IF DEBUGFLAG THEN CRT "DDE Poking Data ... "
FOR I = 1 TO NO.BOOK
CALL TU.DDE.POKE(HANDLE, BOOKMARKS<1, I>, TIMEOUT, BOOKDATA<1, I>, OPT, STATUS)
IF STATUS THEN RETURN
NEXT I
*
 INCLUDE TUBP COMMON.WORD.DDE.FUNCTIONS.H
MACRO.COUNT = COUNT(MACRO, AM) + (MACRO # '')
*
*-* now do the macro business
*
FOR I = 1 TO MACRO.COUNT
IF DEBUGFLAG THEN CRT "Executing Macro => ":MACRO<I>
CALL TU.DDE.EXEC.MACRO(HANDLE, TIMEOUT, MACRO<I>, STATUS)
IF STATUS THEN RETURN
NEXT I
RETURN
*
*-* Office 97 Use OLE Automation Objects
*
300 *
*
*-* OEM to ANSI?
*
IF OEMTOANSI THEN
ATTR = "oemtoansiconv"; VALS = TRUE
CALL ROC.SET(HROC, ATTR, VALS, STATUS)
IF STATUS THEN RETURN
END
*
*-* Create SBClientScriptControl.VBScript
*
CALL TU.SCRIPT.CREATE(HVB, 10000, TRUE, NUL, NUL, STATUS)
IF STATUS THEN RETURN
*
*-* Call Word Bookmark function
*
ARGS = DOCUMENTNAME; RESULTS = NUL; MSG = NUL
STRING = BOOKMARKS; OLD = VM; NEW = ";"
 INCLUDE TUBP SWAP.STRINGS.H
ARGS<1, 1, -1> = STRING
STRING = BOOKDATA
 INCLUDE TUBP SWAP.STRINGS.H
ARGS<1, 1, -1> = STRING
ARGS<1, 1, -1> = OPTIONS
CALL TU.SCRIPT.RUN(HVB, "SBClient", "TuToWordBookMark", ARGS, RESULTS, NUL, NUL, STATUS)
CALL TU.SCRIPT.LAST.ERROR(HVB, MSG, NUL, NUL, STATUS)
IF MSG # "" THEN
STATUS = OLE.INVALID.MERGE.DOC
END
IF STATUS THEN RETURN
*
*-* OEM to ANSI?
*
IF OEMTOANSI THEN
ATTR = "oemtoansiconv"; VALS = FALSE
CALL ROC.SET(HROC, ATTR, VALS, STATUS)
IF STATUS THEN RETURN
END
*
RETURN
*
*-* Shutdown
*
900 *
IF OFFICE95 THEN
CALL TU.DDE.DISCONNECT(HANDLE, STATUS)
CALL TU.DDE.DISCONNECT(SYSTEMHANDLE, STATUS)
END
RETURN
*
***************************************************************************
*  the End
***************************************************************************
END
