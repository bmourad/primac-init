SUBROUTINE RPC.HOSTDEBUG.INFO(ARRAY, VALUE, ERROR)
*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
*
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP SPECIAL.H
 INCLUDE TUBP ROC.H
 INCLUDE TUBP USER.INCLUDE.H
*
RUNNING.NT = 0; VALUE = ""; ERROR = 0; CAPT = ""
RUNNING.NT = OCONV(SYSTEM(33), 'MCU') ; !*UDT*!
!@!RUNNING.NT = SYSTEM(91) ; !*UV,UP*!
IF INDEX(RUNNING.NT, "NT", 1) THEN RUNNING.NT = 1 ELSE RUNNING.NT = 0; !*UDT*!
*
*-* Get OS details
*
VALUE = "     Operating System"
VALUE<-1> = "     ================"
VALUE<-1> = "     "
IF RUNNING.NT THEN
VALUE<-1> = "Using Windows NT"
VALUE<-1> = "----------------"
COMPUTERNAME = GETENV("COMPUTERNAME"); !*UDT*!
COMSPEC = GETENV("COMSPEC"); !*UDT*!
OS = GETENV("OS"); !*UDT*!
PROCESSOR.IDENTIFIER = GETENV("PROCESSOR_IDENTIFIER"); !*UDT*!
SYSTEMROOT = GETENV("SYSTEMROOT"); !*UDT*!
TEMP = GETENV("TEMP"); !*UDT*!
TMP = GETENV("TMP"); !*UDT*!
*
!@!CALL UV.GETENV("COMPUTERNAME", COMPUTERNAME); !*UV,UP*!
!@!CALL UV.GETENV("COMSPEC", COMSPEC); !*UV,UP*!
!@!CALL UV.GETENV("OS", OS); !*UV,UP*!
!@!CALL UV.GETENV("PROCESSOR_IDENTIFIER", PROCESSOR.IDENTIFIER); !*UV,UP*!
!@!CALL UV.GETENV("SYSTEMROOT", SYSTEMROOT); !*UV,UP*!
!@!CALL UV.GETENV("TEMP", TEMP); !*UV,UP*!
!@!CALL UV.GETENV("TMP", TMP); !*UV,UP*!
VALUE<-1> = "Computername:         ":COMPUTERNAME
VALUE<-1> = "Comspec:              ":COMSPEC
VALUE<-1> = "OS:                   ":OS
VALUE<-1> = "Processor_Identifier: ":PROCESSOR.IDENTIFIER
VALUE<-1> = "SystemRoot:           ":SYSTEMROOT
VALUE<-1> = "Temp:                 ":TEMP
VALUE<-1> = "Tmp:                  ":TMP
END ELSE
VALUE<-1> = "Using UNIX"
VALUE<-1> = "----------"
EXECUTE "!uname -a" CAPTURING CAPT; !*UDT*!
!@!EXECUTE 'sh -c "uname -a"' CAPTURING CAPT; !*UV,UP*!
VALUE<-1> = "uname:"
VALUE<-1> = CAPT
VALUE<-1> = "stty settings:"; !*UDT*!
EXECUTE "!stty -a" CAPTURING CAPT; !*UDT*!
VALUE<-1> = CAPT; !*UDT*!
END
*
*-* Get Database Details
*
VALUE<-1> = "     "
VALUE<-1> = "     Database"
VALUE<-1> = "     ========"
VALUE<-1> = "     "
VALUE<-1> = "UniData"; !*UDT*!
VALUE<-1> = "-------"; !*UDT*!
!@!VALUE<-1> = "uniVerse"; !*UV,UP*!
!@!VALUE<-1> = "--------"; !*UV,UP*!
EXECUTE "VERSION" CAPTURING CAPT; !*UDT*!
!@!OPEN '','VOC' TO F.FILE ELSE STATUS = 1; RETURN; !*UV,UP*!
!@!READ CAPT FROM F.FILE, "RELLEVEL" ELSE CAPT = ""; !*UV,UP*!
VALUE<-1> = CAPT
VALUE<-1> = "     "
EXECUTE "ECLTYPE" CAPTURING CAPT; !*UDT*!
VALUE<-1> = CAPT; !*UDT*!
EXECUTE "BASICTYPE" CAPTURING CAPT; !*UDT*!
VALUE<-1> = CAPT; !*UDT*!
!@!EXECUTE "PTERM DISPLAY" CAPTURING CAPT; !*UV,UP*!
!@!VALUE<-1> = CAPT; !*UV*!
*
*-* Get SB+ Details
*
OK = TRUE
OPEN '','DMCONT' TO F.DMCONT ELSE OK = FALSE
OPEN '','DMSECURITY' TO F.DMSEC ELSE OK = FALSE
OPEN '','VOC' TO F.MD ELSE
OPEN '','MD' TO F.MD ELSE OK = FALSE
END
IF OK THEN
READ SB.CONTROL FROM F.DMCONT, "SB.CONTROL" ELSE SB.CONTROL = NUL
READ PASS FROM F.DMSEC, "$PASS":PORTNO ELSE PASS = NUL
READ USERKEY FROM F.DMSEC, "$USERKEY":PORTNO ELSE USERKEY = NUL
READ SYSID FROM F.MD, "SYSID":PORTNO ELSE SYSID = NUL
READ SBSYSMENU FROM F.MD, "SBSYSMENU" ELSE SBSYSMENU = NUL
*
VALUE<-1> = "     "
VALUE<-1> = "     SB Server Information"
VALUE<-1> = "     ====================="
VALUE<-1> = "     "
VALUE<-1> = "SB.CONTROL"
VALUE<-1> = "----------"
VALUE<-1> = SB.CONTROL
VALUE<-1> = "     "
VALUE<-1> = "$PASS":PORTNO
VALUE<-1> = "-------"
VALUE<-1> = PASS
VALUE<-1> = "     "
VALUE<-1> = "$USERKEY":PORTNO
VALUE<-1> = "----------"
VALUE<-1> = USERKEY
VALUE<-1> = "     "
VALUE<-1> = "SYSID":PORTNO
VALUE<-1> = "-------"
VALUE<-1> = SYSID
VALUE<-1> = "     "
VALUE<-1> = "SBSYSMENU"
VALUE<-1> = "---------"
VALUE<-1> = SBSYSMENU
*
*-* Process xxCONTROL records
*
NO.VMS = COUNT(SBSYSMENU<7>, VM) + (SBSYSMENU # "")
FOR I = 1 TO NO.VMS
XX = SBSYSMENU<7, I>
OPEN '',XX:"CONTROL" TO F.FILE THEN
READ PARAMS FROM F.FILE, "PARAMS" ELSE PARAMS = NUL
VALUE<-1> = "     "
VALUE<-1> = "PARAMS FROM ":XX:"CONTROL"
VALUE<-1> = "-----------------------"
VALUE<-1> = PARAMS
END
NEXT I
END
RETURN
END
