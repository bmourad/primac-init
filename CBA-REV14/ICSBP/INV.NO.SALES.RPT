*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - INV.NO.SALES.RPT
* DATE        - 01/09/84
* BY          - WALID YAMOUT, CBA
* DESCRIPTION - This program lists inventory with no sales.
*T21638 doug 02/26/1997 * Add quantity conversion for FNGD
*T26190 ajibaly 03/08/2002 * CONVERT TO REV12 USING BUILD.IWH.FI SUB
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*********************************************************************
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
PRT.FLG=1;PRT.DESC=0
PREV.PRO="";PREV.M.P.LINE=""
TOT.ON.HAND=0;TOT.ON.ORDER=0;TOT.ALLOC=0;TOT.RESV=0;TOT.COST=0
*
*---- OPEN FILES
*
OPEN 'INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING';GOTO 91000
OPEN 'INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 91000
*
*---- READ PROC
*
PROCREAD ID ELSE ERRMSG=' CANNOT PERFORM PROCREAD';GOTO 91000
CONO=ID<1>
LA.SALE=ID<8>
*T26493 v
*     CONO.NAME=ID<2>
*     REPORT.NAME="INVENTORY.NO.SALES.REPORT"
*     REPORT.NUMBER="XXXX"
REPORT.NUMBER = ID<2>
REPORT.NAME = ""
CONO.NAME = ""
*T26493 ^
REPORT.DATE=DATE()
HD1="";HD2=""
CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*T26190 v
OPEN.FLAG=1
ERR.FLAG = ''
PERIOD = ID<9>
SEL.PERIOD=ID<9>
IF PERIOD = 'ALL' THEN PERIOD = ''
*T26190 ^
HH.LINE="PRODUCT NUMBER/PRODUCT DESCRIPTION            U/M WHSE   ON-HAND   RESERVED   ON-ORDER  ALLOCATED  QOH $VALUE  LAST SAL"
DH.LINE="--------------------------------------------- --- ---- ---------- ---------- ---------- ---------- ----------- --------"
DT.LINE="                                                       ---------- ---------- ---------- ---------- -----------"
PRINTER ON
*
*---- READ AND PROCESS FIRST RECORD
100 *
READNEXT KEY ELSE GOTO 999999
GOSUB 200
MATREAD IWH.REC FROM INV.WHSE,KEY ELSE MAT IWH.REC='';GOTO 100
MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE MAT INV.REC=''
CALL BUILD.IWH.FI(KEY,MAT IWH.REC,PERIOD,ERR.FLAG,ERRMSG,OPEN.FLAG) ;*T26190
*
*---- SET THE PRODUCT NUMBER
*
PREV.PRO=PROD
PREV.DESC=INV.FULL.DESC
PREV.M.P.LINE=INV.M.LINE:" / ":INV.LINE
HEADING HD1:"'PL'":HD2:SPACE(60):"ENDING DATE : ":OCONV(LA.SALE, "D2/"):"'LL'":"MLINE / PLINE : ":PREV.M.P.LINE:"'LL'":HH.LINE:"'L'":DH.LINE
*
*---- PROCESS THE FILE
*
GOSUB 1000
*
*---- READ AND PROCESS ALL THE FILES
*
DATA = 1
LOOP 
  READNEXT KEY ELSE DATA = 0
WHILE DATA DO 
  GOSUB 200
  MATREAD IWH.REC FROM INV.WHSE,KEY ELSE MAT IWH.REC='';GOTO 111
  MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE MAT INV.REC=''
  CALL BUILD.IWH.FI(KEY,MAT IWH.REC,PERIOD,ERR.FLAG,ERRMSG,OPEN.FLAG) ; *T26190
  GOSUB 1000
111 *
REPEAT
GOSUB 25000
GOTO 999999
*
*---- SEPARATE THE KEY TO PRODUCT, WHSE
200 *
PROD.KEY=FIELD(KEY,"!",1)
PROD=PROD.KEY[4,99]
WHSE=FIELD(KEY,"!",2)
RETURN
*
*---- PROCESS THE RECORD
1000 *
IF PROD # PREV.PRO THEN
  GOSUB 25000
  PREV.PRO=PROD
  PREV.DESC=INV.FULL.DESC
  PRT.FLG=1
  PRT.DESC= 0
  IF INV.M.LINE:" / ":INV.LINE # PREV.M.P.LINE THEN
    PREV.M.P.LINE=INV.M.LINE:" / ":INV.LINE
    HEADING HD1:"'PL'":HD2:SPACE(60):"ENDING DATE : ":OCONV(LA.SALE, "D2/"):"'LL'":"MLINE / PLINE : ":PREV.M.P.LINE:"'LL'":HH.LINE:"'L'":DH.LINE
  END
END
GOSUB 60000
IF INV.COST.WT*1=0 THEN INV.COST.WT=100
STAND=0
FI.CNT=DCOUNT(IWH.QTY.FI,VM)
FOR FI=1 TO FI.CNT
  STAND=STAND + INT((IWH.COST.FI<1,FI>/10000) * ((IWH.QTY.FI<1,FI>/10)/(INV.COST.WT/100)))
NEXT FI
IF IWH.ON.HAND > 0 THEN
  IWH.ON.HAND=INT((((IWH.ON.HAND/ICR.DV1) * ICR.MT1)/ICR.DV2) + .5)
END ELSE
  IWH.ON.HAND=INT((((IWH.ON.HAND/ICR.DV1) * ICR.MT1)/ICR.DV2) - .5)
END
IF IWH.RESV > 0 THEN
  IWH.RESV=INT((((IWH.RESV/ICR.DV1) * ICR.MT1)/ICR.DV2) + .5)
END ELSE
  IWH.RESV=INT((((IWH.RESV/ICR.DV1) * ICR.MT1)/ICR.DV2) - .5)
END
IF IWH.ON.ORDER > 0 THEN
  IWH.ON.ORDER=INT((((IWH.ON.ORDER/ICR.DV1) * ICR.MT1)/ICR.DV2) + .5)
END ELSE
  IWH.ON.ORDER=INT((((IWH.ON.ORDER/ICR.DV1) * ICR.MT1)/ICR.DV2) - .5)
END
IF IWH.ALLOC > 0 THEN
  IWH.ALLOC=INT((((IWH.ALLOC/ICR.DV1) * ICR.MT1)/ICR.DV2) + .5)
END ELSE
  IWH.ALLOC=INT((((IWH.ALLOC/ICR.DV1) * ICR.MT1)/ICR.DV2) - .5)
END
TOT.ON.HAND=TOT.ON.HAND + IWH.ON.HAND
TOT.COST=TOT.COST + STAND
TOT.ON.ORDER=TOT.ON.ORDER + IWH.ON.ORDER
TOT.ALLOC=TOT.ALLOC + IWH.ALLOC
TOT.RESV=TOT.RESV + IWH.RESV
IF IWH.LA.SALE="" THEN
  MON.NO="NEVER"
END ELSE
  MON.NO=IWH.LA.SALE
END
GOSUB 20000
RETURN
*
*---- ROUTINE TO PRINT THE RECORD
20000 *
IF PRT.FLG=1 THEN
  PRT.FLG=0
  PRINT PREV.PRO "L#45 ":INV.UNIT<1,2> "L#3 ":
END ELSE
  IF PRT.DESC=0 THEN
    PRT.DESC=1
    PRINT PREV.DESC "L#45":SPACE(5):
  END ELSE
    PRINT SPACE(50):
  END
END
PRINT WHSE "L#4 ":
PRINT OCONV((IWH.ON.HAND*1), ICR.CNV) "R#10 ":
PRINT OCONV((IWH.RESV*1) , ICR.CNV) "R#10 ":
PRINT OCONV((IWH.ON.ORDER*1), ICR.CNV) "R#10 ":
PRINT OCONV((IWH.ALLOC*1), ICR.CNV) "R#10 ":
PRINT OCONV(STAND, 'MD2') "R#11 ":
PRINT OCONV(MON.NO, "D2/") "L#8"
RETURN
*
*---- ROUTINE TO PRINT THE TOTAL VALUES
25000 *
PRINT DT.LINE
IF PRT.DESC=0 THEN
  PRINT PREV.DESC "L#45 ":'PROD TOT ':
END ELSE
  PRINT SPACE(36) : 'PRODUCT TOTALS     ':
END
PRINT OCONV(TOT.ON.HAND, ICR.CNV) "R#10 ":
PRINT OCONV(TOT.RESV, ICR.CNV) "R#10 ":
PRINT OCONV(TOT.ON.ORDER, ICR.CNV) "R#10 ":
PRINT OCONV(TOT.ALLOC, ICR.CNV) "R#10 ":
PRINT OCONV(TOT.COST, 'MD2') "R#11"
PRINT DT.LINE
TOT.ON.HAND=0;TOT.RESV=0;TOT.ON.ORDER=0;TOT.ALLOC=0;TOT.COST=0
RETURN
*
*---- CONVERT SHEET/WGHT/QTY
60000 *
*COPY>ICSBP>INV.UM.CNV
*     MAT INV.CNV.REC=''
*     BEGIN CASE
*     CASE INV.UNIT<1,2>='SHT' AND INV.UNIT<1,3>='LBS'
*        ICR.CNV="MD0"
*        ICR.DV1=INV.M.WT;ICR.MT1=1;ICR.DV2=1
*     CASE INV.UNIT<1,2>='PC' AND INV.UNIT<1,3>='MSI'
*        ICR.CNV="MD0"
*        ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=10;ICR.DV2=1
*     CASE INV.UNIT<1,2>='FT' AND INV.UNIT<1,3>='MSI'
*        ICR.CNV="MD0"
*        ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=100;ICR.DV2=12
*     CASE 1
*        ICR.CNV="MD2"
*        ICR.DV1=10;ICR.MT1=1;ICR.DV2=1
*     END CASE
RETURN
*
*---- ERRMSG ROUTINE
91000 *
CRT @(0,23):CL:ERRMSG:
INPUT REPLY:
CRT @(0,23):CL:
RETURN
999999 *
PRINTER OFF
END
