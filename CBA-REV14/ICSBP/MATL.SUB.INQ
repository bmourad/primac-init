*COPY>CPYLIB>COM1
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM       - MATL.SUB.INQ
* BY            - Julianne Rivera, VERCOM Software, Inc.
* DATE          - 12/23/93
* DESCRIPTION   -
*
* TASK
*     CSF25491 04/17/96 LLH DIVISIONALIZATION
*
*T23207 renee 08/27/1998 * Allow division 00 to be entered.
********************************************************************
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>CATEGORY
*COPY>PMC.CPYLIB>DIVISION
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*
*
**** SETUP FOR SYSTEM ERRMSGS
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   OPEN '','ICS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
   OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE ERRMSG = 'INVENTORY.XREF FILE IS MISSING'; GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','COLOR' TO COLOR ELSE ERRMSG = 'COLOR FILE IS MISSING'; GOTO 93000
   OPEN '','FINISH' TO FINISH ELSE ERRMSG = 'FINISH FILE IS MISSING'; GOTO 93000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
*
***** GET COMPANY NAME
*
   MAT COMP.REC = ''
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
*
**** SET UP GEN.XREF.REC
*
   MAT EDIT.COM.DRIVER = ''
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   GXR.HEADING<1,1> = 'PRODUCT NUMBER'
   GXR.HEADING<1,2> = 'FULL DESCRIPTION'
   GXR.ATT<1,1> = 0
   GXR.ATT<1,2> = 2
   GXR.LEN<1,1> = 15
   GXR.LEN<1,2> = 45
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'MATL.SUB.INQ'
   ECD.ACTION=1;CALL SCRN.EDIT
100 ECD.SCRN.NO = 1
   MAT SCV.REC = ''
   ECD.ACTION=6;CALL SCRN.EDIT
*---- Display screen
*
   LINE.SPACE = 2
   PAGE.SIZE = 4
   BEGIN.PAGE = 12
   OLD.START.LINE = 0
   LINES = 0
   LN = 1
   CNV = "MD0,"
*
   ESN = ECD.SCRN.NO
*
101 *
   PROD.SEL = ""; PROD.DESC.SEL = ""
   CATG.SEL = ""; BAS.SEL = ""
   WID.SEL = ""; LEN.SEL = ""
   WID.PLUS = ""; LEN.PLUS = ""
   COL.SEL = ""; FIN.SEL = ""
   GOSUB 400
   IF ECD.RET.VALUE = "END" THEN GOTO 99999
   SEL.DIV = ECD.RET.VALUE
   GOSUB 500
   IF ECD.RET.VALUE = "END" THEN GOTO 99999
   SEL.WHSE = ECD.RET.VALUE
   GOSUB 1100
   IF ECD.RET.VALUE = "END" THEN GOTO 99999
   IF PROD.SEL # "" THEN
      LIMIT = 2
      FOR REQUEST = 1 TO LIMIT
         ON REQUEST GOSUB 1600,1700
         IF ECD.RET.VALUE = "END" THEN LIMIT = 0
      NEXT REQUEST
   END ELSE
      LIMIT = 6
      FOR REQUEST = 1 TO LIMIT
         ON REQUEST GOSUB 1200,1300,1400,1500,1600,1700
         IF ECD.RET.VALUE = "END" THEN LIMIT = 0
      NEXT REQUEST
   END
   IF NOT(LIMIT) THEN GOTO 100
*
*---- Prompt line
*
   MORE = 1
   LOOP
      ECD.NUM = 21; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF @LOGNAME = 'cmykleb' THEN DEBUG
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E"
            MORE = 0
         CASE OPTION = "P"
            GOSUB 5000
         CASE OPTION = "S" OR OPTION = "SF"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 7000
         CASE OPTION = "SR"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 7000
         CASE OPTION = "ST"
            LN = 1
            GOSUB 7000
         CASE OPTION = "SB"
            LN = LINES
            GOSUB 7000
         CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
            LN.NO = OPTION[2,99] + 0
            IF LN.NO < 1 OR LN.NO > LINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               LN = LN.NO
               GOSUB 7000
            END
         CASE NOT(NUM(OPTION))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE 1
            ON OPTION GOSUB 1200,1300,1400,1500,1600,1700
      END CASE
   WHILE MORE DO REPEAT
   GOTO 100
*
*---- Division Number
*
400*
   ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN RETURN
   IF ECD.RET.VALUE = 'E'   THEN RETURN
   IF ECD.RET.VALUE = 'ALL' THEN RETURN
   IF ECD.RET.VALUE NE "00" THEN            ; * T23207
      MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
         ERRMSG = 'Invalid Division Number'
         GOSUB 91000; GOTO 400
      END
   END       ; * T23207
   RETURN
*
*---- Warehouse Number
*
500*
   ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN RETURN
   IF ECD.RET.VALUE = 'E'   THEN RETURN
   IF ECD.RET.VALUE = 'ALL' THEN RETURN
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:ECD.RET.VALUE ELSE
      ERRMSG = 'Invalid Warehouse'
      GOSUB 91000; GOTO 500
   END
   RETURN
*
*---- Product Number
1100*
   ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1199
      CASE ECD.RET.VALUE = ""
         ECD.NUM = 10
         ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE = "END"
               GOTO 1100
            CASE ECD.RET.VALUE = ""
               PROD.SEL = ""; PROD.DESC.SEL = ""
               MAT INV.REC = ""
               GOTO 1199
            CASE 1
               GXR.XREF = INVENTORY.XREF
               GXR.FILE = INVENTORY
               GXR.LOC = 1
               GXR.TOP.LINE = 'INVENTORY XREF SEARCH'
               GXR.ID = ''
               GXR.SRCH.ID = ECD.RET.VALUE
               CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
               ECD.ACTION=2;CALL SCRN.EDIT
               IF GXR.ID = '' THEN
                  ECD.NUM = 10; SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION=5;CALL SCRN.EDIT
                  GOTO 1100
               END ELSE
                  MATREAD INV.REC FROM INVENTORY, CONO:GXR.ID ELSE
                     ERRMSG = 'PRODUCT NUMBER ':GXR.ID:' IS MISSING'
                     ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION=5;CALL SCRN.EDIT
                     GOTO 1100
                  END
                  PROD.NUM = GXR.ID
                  SCV.REC(9)<1> = PROD.NUM
                  ECD.NUM = 9; ECD.ACTION = 5; CALL SCRN.EDIT
                  PROD.SEL = PROD.NUM; PROD.DESC.SEL = INV.FULL.DESC
               END
         END CASE
      CASE 1
         MATREAD INV.REC FROM INVENTORY, CONO:ECD.RET.VALUE ELSE
            ERRMSG = 'PRODUCT NUMBER ':GXR.ID:' IS MISSING'
            ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION=5;CALL SCRN.EDIT
            GOTO 1100
         END
         PROD.SEL = ECD.RET.VALUE; PROD.DESC.SEL = INV.FULL.DESC
   END CASE
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      MAT CATG.REC = ""
   END
   CATG.SEL = INV.LINE; BAS.SEL = INV.BAS.WT
   COL.SEL = INV.COLOR; FIN.SEL = INV.PAP.FINSH
   WID.SEL = INV.PAP.WIDTH; LEN.SEL = INV.PAP.LEN
   ECD.NUM = 10; SCV.REC(ECD.NUM)<ESN> = PROD.DESC.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = CATG.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = BAS.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = COL.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = FIN.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = WID.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = LEN.SEL
   ECD.ACTION = 5; CALL SCRN.EDIT
1199*
   RETURN
*
*---- Category
1200*
   ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   MAT CATG.REC = ""
   IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
      MATREAD CATG.REC FROM CATEGORY, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Cannot locate Category # ":ECD.RET.VALUE
         GOSUB 91000; GOTO 1200
      END
      CATG.SEL = ECD.RET.VALUE
   END
   RETURN
*
*---- Basis Wt
1300*
   ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      BAS.SEL = ECD.RET.VALUE
   END
   RETURN
*
*---- Color
1400*
   ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" AND ECD.RET.VALUE # "" THEN
      READ C.REC FROM COLOR, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "COLOR ":ECD.RET.VALUE:" NOT ON FILE"
         GOSUB 91000
         GOTO 1400
      END
      COL.SEL = ECD.RET.VALUE
   END
   RETURN
*
*---- Finish
1500*
   ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" AND ECD.RET.VALUE # "" THEN
      READ F.REC FROM FINISH, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "FINISH ":ECD.RET.VALUE:" NOT ON FILE"
         GOSUB 91000
         GOTO 1500
      END
      FIN.SEL = ECD.RET.VALUE
   END
   RETURN
*
*---- Width
1600*
   BEGIN CASE
      CASE INV.PAP.TYPE = "REGULAR"
      CASE CATG.TYPE = "P" OR CATG.TYPE = "F" OR CATG.TYPE = "I"
      CASE 1
         IF PROD.SEL = "" THEN
            ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "END" THEN
               WID.SEL = ECD.RET.VALUE
            END
         END
         IF LEN.PLUS + 0 # 0 THEN
            ECD.NUM = 6; SCV.REC(6)<ESN> = 0
            ECD.RET.VALUE = 0
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            ECD.NUM = 6
            IF WID.PLUS = "" THEN
               SCV.REC(6)<ESN> = 2500
            END
            ECD.ACTION = 4; CALL SCRN.EDIT
         END
         IF ECD.RET.VALUE # "END" THEN
            WID.PLUS = ECD.RET.VALUE
         END
   END CASE
   RETURN
*
*---- Length
1700*
   BEGIN CASE
      CASE INV.PAP.TYPE # "SHEET" AND INV.PAP.TYPE # ""
      CASE CATG.TYPE # "S"
      CASE 1
         IF PROD.SEL = "" THEN
            ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "END" THEN
               LEN.SEL = ECD.RET.VALUE
            END
         END
         IF WID.PLUS + 0 # 0 THEN
            ECD.NUM = 8; SCV.REC(8)<ESN> = 0
            ECD.RET.VALUE = 0
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            ECD.NUM = 8
            IF LEN.PLUS = "" THEN
               SCV.REC(8)<ESN> = 2500
            END
            ECD.ACTION = 4; CALL SCRN.EDIT
         END
         IF ECD.RET.VALUE # "END" THEN
            LEN.PLUS = ECD.RET.VALUE
         END
   END CASE
   RETURN
*
*---- Get selected items
5000*
*      SEL.PROD = ""; SEL.WHSE = ""
   SEL.PROD = ""
   SEL.BAS = ""; SEL.COL = ""; SEL.FIN = ""
   SEL.WID = ""; SEL.LEN = ""
   BY.STMT = ""
   STMT = 'SSELECT INVENTORY WITH CONO = "':CONO:'"'
   IF BAS.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY BAS.WT'
   END ELSE
      STMT = STMT : ' AND WITH BAS.WT = "':OCONV(BAS.SEL,"MD2"):'"'
   END
   IF COL.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY F27'
   END ELSE
      STMT = STMT : ' AND WITH F27 = "':COL.SEL:'"'
   END
   IF FIN.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY F34'
   END ELSE
      STMT = STMT : ' AND WITH F34 = "':FIN.SEL:'"'
   END
   IF CATG.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY F5'
   END ELSE
      STMT = STMT : ' AND WITH F5 = "':CATG.SEL:'"'
   END
   IF WID.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY WIDTH'
   END ELSE
      IF WID.PLUS + 0 # 0 THEN
         BY.STMT = BY.STMT : ' BY WIDTH'
         STMT = STMT : ' AND WITH WIDTH >= "':OCONV(WID.SEL-WID.PLUS,"MD4"):'"'
         STMT = STMT : ' AND WITH WIDTH <= "':OCONV(WID.SEL+WID.PLUS,"MD4"):'"'
      END ELSE
         STMT = STMT : ' AND WITH WIDTH = "':OCONV(WID.SEL,"MD4"):'"'
      END
   END
   IF LEN.SEL = "" THEN
      BY.STMT = BY.STMT : ' BY LENGTH'
   END ELSE
      IF LEN.PLUS + 0 # 0 THEN
         BY.STMT = BY.STMT : ' BY LENGTH'
         STMT = STMT : ' AND WITH LENGTH >= "':OCONV(LEN.SEL-LEN.PLUS,"MD4"):'"'
         STMT = STMT : ' AND WITH LENGTH <= "':OCONV(LEN.SEL+LEN.PLUS,"MD4"):'"'
      END ELSE
         STMT = STMT : ' AND WITH LENGTH = "':OCONV(LEN.SEL,"MD4"):'"'
      END
   END
   STMT = STMT : BY.STMT
   PERFORM STMT RTNLIST SYSLIST CAPTURING RESPONSE
   RESPONSE = ""; DATA = 1; LINES = 0
   INV.ON.PO = ''; INV.ALLOC = ''; INV.ON.HAND = ''; INV.RESV = ''; INV.INPRCS = ''
   LOOP
      READNEXT SEL.ID FROM SYSLIST ELSE DATA = 0
   WHILE DATA DO
      MATREAD INV.REC FROM INVENTORY, SEL.ID ELSE
         MAT INV.REC = ""
         GOTO 5999
      END
*COPY>ICSBP>INV.UM.CNV
      WHSE.CNT = DCOUNT(INV.WHSE.CODE,VM)
      FOR I = WHSE.CNT TO 1 STEP -1
         IF SEL.WHSE # "ALL" THEN
            IF INV.WHSE.CODE<1,I> # SEL.WHSE THEN
               GOTO 5995
            END
         END
         IF SEL.DIV # "ALL" THEN
            MATREAD WHSE.REC FROM WAREHOUSE, CONO:INV.WHSE.CODE<1,I> ELSE
               MAT WHSE.REC = ""
            END
* T23207       IF WHS.DIV # SEL.DIV THEN
            IF WHS.DIV # SEL.DIV AND SEL.DIV # "00" THEN   ; * T23207
               GOTO 5995
            END
         END
         LOCATE SEL.ID[4,15] IN SEL.PROD,1 SETTING LINES ELSE
*               LINES = LINES + 1
*               SEL.PROD<LINES> = SEL.ID[4,15]
*               SEL.BAS<LINES> = INV.BAS.WT
*               SEL.COL<LINES> = INV.COLOR
*               SEL.FIN<LINES> = INV.PAP.FINSH
*               SEL.WID<LINES> = INV.PAP.WIDTH
*               SEL.LEN<LINES> = INV.PAP.LEN
*               PROD.NUM = SEL.PROD<LINES>
            INS SEL.ID[4,15]  BEFORE SEL.PROD<LINES>
            INS INV.BAS.WT    BEFORE SEL.BAS<LINES>
            INS INV.COLOR     BEFORE SEL.COL<LINES>
            INS INV.PAP.FINSH BEFORE SEL.FIN<LINES>
            INS INV.PAP.WIDTH BEFORE SEL.WID<LINES>
            INS INV.PAP.LEN   BEFORE SEL.LEN<LINES>
         END
         PROD.NUM = SEL.PROD<LINES>
         FOUND = 1
         MATREAD IWH.REC FROM INV.WHSE, SEL.ID:'!':INV.WHSE.CODE<1,I> ELSE
            ERRMSG = 'WAREHOUSE (':INV.WHSE.CODE<1,I>:') IS NOT SETUP FOR PRODUCT ':SEL.ID[4,15]
            GOSUB 91000
            INV.WHSE.CODE = DELETE(INV.WHSE.CODE,1,I,0)
            INV.ON.PO = DELETE(INV.ON.PO,LINES,I,0)
            INV.ALLOC = DELETE(INV.ALLOC,LINES,I,0)
            INV.ON.HAND = DELETE(INV.ON.HAND,LINES,I,0)
            INV.RESV = DELETE(INV.RESV,LINES,I,0)
            FOUND = 0
         END
         IF FOUND THEN
            INV.ON.PO<LINES,I> = 0
            MATREAD INV.STAT.REC FROM INV.STATS, CONO:SEL.ID[4,15]:'!':INV.WHSE.CODE<1,I> ELSE FOUND = 0
            IF FOUND THEN
               PO.CNT = COUNT(ISTAT.PO,VM) + (ISTAT.PO # '')
               FOR J = 1 TO PO.CNT
                  INV.ON.PO<LINES,I> = INV.ON.PO<LINES,I> + ISTAT.PO.QTY<1,J>
                  ALC.CNT = COUNT(ISTAT.PO.JOB.QTY<1,J>,SVM) + (ISTAT.PO.JOB.QTY<1,J> # '')
                  FOR K = 1 TO ALC.CNT
                     INV.ALLOC<LINES,I> = INV.ALLOC<LINES,I> + ISTAT.PO.JOB.QTY<1,J,K>
                  NEXT K
               NEXT J
            END
            IF IWH.ON.HAND < 0 THEN
               INV.ON.HAND<LINES,I> = INT(((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
            END ELSE
               INV.ON.HAND<LINES,I> = INT(((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
            END
            IF IWH.RESV < 0 THEN
               INV.RESV<LINES,I> = INT(((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
            END ELSE
               INV.RESV<LINES,I> = INT(((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
            END
            IF INV.ON.PO<LINES,I> < 0 THEN
               INV.ON.PO<LINES,I> = INT(((INV.ON.PO<LINES,I> / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
            END ELSE
               INV.ON.PO<LINES,I> = INT(((INV.ON.PO<LINES,I> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
            END
            IF INV.ALLOC<LINES,I> < 0 THEN
               INV.ALLOC<LINES,I> = INT(((INV.ALLOC<LINES,I> / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
            END ELSE
               INV.ALLOC<LINES,I> = INT(((INV.ALLOC<LINES,I> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
            END
         END
*
5995 *
*
      NEXT I
5999 *
   REPEAT
   LN = 1; OLD.START.LINE = 0
   GOSUB 7000
   RETURN
*
*---- Display scrolling lines
7000*
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 7090
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      SEL.ID = CONO : SEL.PROD<N>
      MATREAD INV.REC FROM INVENTORY, SEL.ID ELSE
         MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
      END
*COPY>ICSBP>INV.UM.CNV
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R%3" ; P_OPT = "CL"
      P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:SEL.PROD<N> "L#15"
      P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SEL.BAS<N>,"MD2") "R#8"
      P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:SEL.COL<N> "L#8"
      P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:SEL.FIN<N> "L#8"
      P_X  := AM:52 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SEL.WID<N>,"MD4") "R#7"
      P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SUM(INV.ON.HAND<N>),ICR.CNV) "R#9"
      P_X  := AM:71 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SUM(INV.RESV<N>),ICR.CNV) "R#9"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      P_X  := AM:5 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INV.FULL.DESC "L#45"
      P_X  := AM:52 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(SEL.LEN<N>,"MD4") "R#7"
      P_X  := AM:61 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(SUM(INV.ON.PO<N>),ICR.CNV) "R#9"
      P_X  := AM:71 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(SUM(INV.ALLOC<N>),ICR.CNV) "R#9"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
7090*
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99999 END
