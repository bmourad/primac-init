      SUBROUTINE INV.FNGD.SUB1(CONO,PDNO,NEWREC,STATUS)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INVENTORY
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - INV.FNGD.SUB1
* BY          - JULIANNE RIVERA, C.B.A
* DATE        - 08/09/91
* DESCRIPTION
* This program is use to maintain bill of materials for a
* given product.
*T25740 edvard 07/23/2001 * REV12
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>FNGD.BOM
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SYSCOM
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>CHAR
*
      DIM S.INV.REC(75)
*
*---- Setup SYSCOM and GEN.XREF
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
      MAT GEN.XREF.REC = ""
      GXR.CO = CONO
      GXR.NAME = "FNGD.BOM"
      GXR.FILE = FNGD.BOM
      GXR.XREF = FNGD.BOM.XREF
*
*---- Initialization
*
      LINE.SPACE = 2
      BEGIN.PAGE = 9
      PAGE.SIZE = 5
*
      BOM.NUM = IOF.BOM
      LN.FULL.DESC = ""
*
      ESN = ECD.SCRN.NO
*
*---- Display Data
100*
      ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
*
*---- Bill Of Material
*
      IF BOM.NUM # "" THEN
         ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = BOM.NUM
         ECD.ACTION = 5; CALL SCRN.EDIT
         BOMNO = BOM.NUM
         BOM.NUM = ""
         GOTO 550
      END
500*
      ECD.NUM = 1
      ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
            IF NEWREC THEN
               ECD.NUM = 56; SCV.REC(ECD.NUM)<ESN> = ""
               ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE # "Y" THEN GOTO 500
               STATUS = "END"
            END
            GOTO 99999
         CASE ECD.RET.VALUE = "N"
            BOMNO = ECD.RET.VALUE
            ECD.SCRN.NO = ESN + 6
            CALL BOM.SUB(CONO,BOMNO,PDNO)
            ECD.SCRN.NO = ESN
            ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = BOMNO
            ECD.ACTION = 3; CALL SCRN.EDIT
            GOTO 500
         CASE ECD.RET.VALUE = ""
            ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
            SCV.REC(ECD.NUM)<ESN> = ""
            IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 500
            GXR.SRCH.ID = ECD.RET.VALUE
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            IF GXR.ID = "" THEN
               ECD.ACTION = 3; CALL SCRN.EDIT
               GOTO 500
            END
            BOMNO = GXR.ID
            SCV.REC(1)<ESN> = BOMNO
            ECD.ACTION = 3; CALL SCRN.EDIT
         CASE 1
            BOMNO = ECD.RET.VALUE
      END CASE
550*
      MATREAD BOM.REC FROM FNGD.BOM, CONO:BOMNO ELSE
         ERRMSG = "Cannot locate Bill Of Material # ":BOMNO
         GOSUB 91000; GOTO 500
      END
*
* CHECK TYPE AND PALLET
*
      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
         MAT CATG.REC = ""
      END
      IF BOM.TYPE = "K" THEN
*25892         IF CATG.R.S.ID = "N" THEN
IF CATG.TRK.LVL="S" THEN
            ERRMSG = 'A Kit BOM by not be used for a Serialized item'
            GOSUB 91000; GOTO 500
         END
      END
      LOCATE PDNO IN BOM.PROD<1>,1 SETTING FND THEN
         ERRMSG = "Finished Goods product (":PDNO:") is part of Bill Of Material # ":BOMNO
         GOSUB 91000; GOTO 500
      END
      IOF.BOM = BOMNO
      ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = BOM.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = BOM.TYPE
      ECD.ACTION = 5; CALL SCRN.EDIT
      LN = 1; OLD.START = 0
      LINES = DCOUNT(BOM.PROD,VM)
      ECD.NUM = 29
      SCV.REC(ECD.NUM)<ESN> = INT(LINES / PAGE.SIZE + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      MAT S.INV.REC = MAT INV.REC
      LN.FULL.DESC = ""
      FOR I = 1 TO LINES
         MATREAD INV.REC FROM INVENTORY, CONO:BOM.PROD<1,I> ELSE
            INV.FULL.DESC = STR("?",30)
         END
         LN.FULL.DESC<I> = INV.FULL.DESC
      NEXT I
      MAT INV.REC = MAT S.INV.REC
      GOSUB 1900
*
*---- Prompt Line
*
      MORE = 1
      LOOP
         IF NEWREC THEN ECD.NUM = 33 ELSE ECD.NUM = 31
         SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
            CASE OPTION = "E" OR OPTION = "END"
               IF NEWREC THEN
                  ECD.NUM = 56; SCV.REC(ECD.NUM)<ESN> = ""
                  ECD.ACTION = 4; CALL SCRN.EDIT
                  IF ECD.RET.VALUE = "Y" THEN
                     STATUS = "END"
                     MORE = 0
                  END
               END ELSE
                  MORE = 0
               END
            CASE OPTION = "N" OR OPTION = "P" 
               STATUS = OPTION
               MORE = 0
            CASE OPTION = "S" OR OPTION = "SF"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 1900
            CASE OPTION = "SR"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 1900
            CASE OPTION = "ST"
               LN = 1
               GOSUB 1900
            CASE OPTION = "SB"
               LN = LINES
               GOSUB 1900
            CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
               LN.NO = OPTION[2,99] + 0
               IF LN.NO < 1 OR LN.NO > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  LN = LN.NO
                  GOSUB 1900
               END
            CASE NOT(NUM(OPTION))
               ERRMSG = "Invalid Entry, try again !!"
               GOSUB 91000
            CASE OPTION < 1 OR OPTION > 1
               ERRMSG = "Out Of Range !!"
               GOSUB 91000
            CASE 1
               MORE = 0
         END CASE
      WHILE MORE DO REPEAT
      IF OPTION = 1 THEN
         ECD.ACTION = 6; CALL SCRN.EDIT
         GOTO 100
      END
      GOTO 99999
*
*---- Display Scrolling Area
1900*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE -1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START THEN RETURN
      OLD.START = START.LINE
      ECD.NUM = 28
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE / PAGE.SIZE + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
         P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:BOM.PROD<1,N> "L#15"
         P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:BOM.WHSE<1,N> "L#4"
         P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:BOM.Q.TYPE<1,N> "L#1"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         MAT S.INV.REC = MAT INV.REC
         MATREAD INV.REC FROM INVENTORY, CONO:BOM.PROD<1,N> ELSE
            MAT INV.REC = ""
            INV.FULL.DESC = STR("?",40)
         END
         GOSUB 9000
         LN.FULL.DESC<N> = INV.FULL.DESC
         MAT INV.REC = MAT S.INV.REC
         IF BOM.Q.TYPE<1,N> = "P" THEN
            P_X  = 59 ; P_Y = SLN ; P_VALUE = OCONV(BOM.Q.RATIO<1,N>,"MD4") "R#8" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
            P_X  = 59 ; P_Y = SLN ; P_VALUE = OCONV(INT(((BOM.Q.RATIO<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#8" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
         P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = LN.FULL.DESC<N> "L#45" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- INVENTORY CONVERSION
9000 *
*COPY>ICSBP>INV.UM.CNV
      RETURN
*
*---- Error Message Routines
*
91000 ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
99999 *
      ECD.ACTION=99;CALL SCRN.EDIT
      RETURN
   END
