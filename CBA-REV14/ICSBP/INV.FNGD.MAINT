*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INVENTORY
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* DESCRIPTION - This program provides the maintenance facility for
* the finished goods inventory.
*
* TASK 18680
*T20167 RICKB 02/23/96 * Modify estimate fld to be a scrolling region
*T20167 rick 08/07/1996 * Modify the dimension on the S.INV.REC
*T25978 adelgado 02/18/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>COLOR
*COPY>ICS.CPYLIB>FINISH
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>FNGD.BOM
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>JES.CPYLIB>ESTIMATE
*
  DIM S.INV.REC(90)
  DIM RQD.DATA(5)
  EQU RQD.B TO RQD.DATA(1)
  EQU RQD.D TO RQD.DATA(2)
  EQU RQD.S TO RQD.DATA(3)
  EQU RQD.P TO RQD.DATA(4)
*
*---- Initialize SYSCOM
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Open Files
*
  CALL INV.FNGD.OPEN
*
*
* initialization area
*T20167 v
  PAGE.SIZE = 3
  BEGIN.PAGE = 17
  LINE.SPACE = 1
  LINES = 0
  OLD.START.LINE = 0
  EST.DIV.ARRAY = ''
*T20167 ^
*
*---- Get Company
*
  CONO = ""; MAT COMP.REC = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
  IF CO.JES = "Y" THEN
    OPEN '','ESTIMATE' TO ESTIMATE ELSE
      ERRMSG = 'ESTIMATE'
      GOTO 93000
    END
  END
*
*---- Setup GEN.XREF, EDIT.SUB, and SCRN.EDIT
*
*      MAT EDIT.COM = ""
*      TYP = 0; CALL EDIT.SUB
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 11
  ECD.SCRN.NAME = "INV.FNGD.MAINT"
  ECD.SCRN.NAME<2> = "PROD.VEND.MAINT"
  ECD.SCRN.NAME<3> = "FNGD.WHSE.SUB"
  ECD.SCRN.NAME<4> = "INV.FNGD.SUB1"
  ECD.SCRN.NAME<5> = "INV.FNGD.SUB2"
  ECD.SCRN.NAME<6> = "INV.FNGD.SUB3"
  ECD.SCRN.NAME<7> = "INV.FNGD.SUB4"
  ECD.SCRN.NAME<10> = "BOM.SUB"
*ECD.SCRN.FLAG<10> = 2
  ECD.SCRN.NAME<11> = "DIE.MAINT"
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1; ESN = ECD.SCRN.NO
*
*---- Initialization
*
  INI.SSNO = "B":AM:"D":AM:"S":AM:"P"
  ECD.ACTION = 2; CALL SCRN.EDIT
  READ SIZE.TAB FROM CONTROL, "SIZE.TABLE" THEN
    SIZE.CNT = DCOUNT(SIZE.TAB,AM)
  END ELSE
    SIZE.TAB = ""
    SIZE.CNT = 0
  END
*
*---- Product Number
5*
  MAT SCV.REC = ""
  LN= 1
  LINES = 0
  OLD.START.LINE = 0
  ECD.ACTION = 6; CALL SCRN.EDIT
  ECD.NUM = 1
  ECD.ACTION = 4; CALL SCRN.EDIT
  PDNO = ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99999
    CASE ECD.RET.VALUE = ""
      ECD.NUM = 2; ECD.O.R = "O"
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 5
      GXR.NAME = "INV.FNGD"
      GXR.XREF = INVENTORY.XREF
      GXR.FILE = INVENTORY
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      SCV.REC(2)<ESN> = ""
      IF GXR.ID = "" THEN
        ECD.ACTION = 3
        CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE = 0
          GOSUB 11000
        END 
        GOTO 5
      END ELSE
        MATREADU INV.REC FROM INVENTORY, CONO:GXR.ID ELSE
          RELEASE INVENTORY, CONO:GXR.ID
          ERRMSG = "Cannot locate Product # ":GXR.ID
          GOSUB 91000
          ECD.ACTION = 3
          CALL SCRN.EDIT
          IF CO.JES = "Y" THEN
            OLD.START.LINE = 0
            GOSUB 11000
          END
          GOTO 5
        END
        MATREADU IOF.REC FROM INV.FNGD, CONO:GXR.ID ELSE
          MAT IOF.REC = ""
        END
        NEWREC = 0
        PDNO = GXR.ID
        SCV.REC(1)<ESN> = PDNO
      END
    CASE 1
      PDNO = ECD.RET.VALUE
      MATREADU IOF.REC FROM INV.FNGD, CONO:PDNO ELSE
        MAT IOF.REC = ""
      END
      MATREADU INV.REC FROM INVENTORY, CONO:PDNO THEN
        NEWREC = 0
      END ELSE
        ECD.NUM = 53; SCV.REC(ECD.NUM)<ESN> = ""
        ECD.ACTION = 4; CALL SCRN.EDIT
        BEGIN CASE
          CASE ECD.RET.VALUE = "D"
            ECD.NUM = 54; SCV.REC(ECD.NUM)<ESN> = ""
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "END" THEN
              MATREAD INV.REC FROM INVENTORY, CONO:ECD.RET.VALUE THEN
                INV.SUBS = ""; INV.WHSE.CODE = ""
                INV.LA.SALE = ""; INV.LA.PUR = ""
                NEWREC = 2
                MATREAD IOF.REC FROM INV.FNGD, CONO:ECD.RET.VALUE ELSE
                  MAT IOF.REC = ""
                END
                GOSUB 8000
              END ELSE
                ERRMSG = "Cannot locate product # ":ECD.RET.VALUE
                GOSUB 91000; ECD.RET.VALUE = "END"
              END
            END
          CASE ECD.RET.VALUE = "A"
            NEWREC = 1
            MAT INV.REC = ""; MAT IOF.REC = ""
          CASE 1
            ECD.RET.VALUE = "END"
        END CASE
        IF ECD.RET.VALUE = "END" THEN
          RELEASE INVENTORY, CONO:PDNO
          RELEASE INV.FNGD, CONO:PDNO
          GOTO 5
        END
      END
  END CASE
  QTY.OH = 0
  IF NEWREC THEN
    OLD.NAME = ""
    GOSUB 1200
    BEGIN CASE
      CASE ECD.RET.VALUE = "END"
        LIMIT = 0
      CASE NEWREC = 2 AND INV.BASE.SKU = ""
        LIMIT = 20
        FOR OPTION = 1 TO LIMIT
          ON OPTION GOSUB 1100,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100
          IF ECD.RET.VALUE = "END" THEN LIMIT = 0
        NEXT OPTION
      CASE INV.BASE.SKU = ""
        WID.WHOLE = ""; WID.NUM = ""; WID.DEN = ""
        LEN.WHOLE = ""; LEN.NUM = ""; LEN.DEN = ""
        LIMIT = 20
        FOR OPTION = 1 TO LIMIT
          ON OPTION GOSUB 1100,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100
          IF ECD.RET.VALUE = "END" THEN LIMIT = 0
        NEXT OPTION
      CASE 1
        GOSUB 8000
        LIMIT = 10
        FOR OPTION = 1 TO LIMIT
          ON OPTION GOSUB 1100,2100,2200,2300,2400,2500,2600,2900,3000,3100
          IF ECD.RET.VALUE = "END" THEN LIMIT = 0
        NEXT OPTION
    END CASE
    IF NOT(LIMIT) THEN
      RELEASE INVENTORY, CONO:PDNO
      GOTO 5
    END
  END ELSE
    IF INV.M.LINE # "FNGD" THEN
      RELEASE INVENTORY, CONO:PDNO
      ERRMSG = "This is not a Finished Goods Product. Try again !!"
      GOSUB 91000; GOTO 5
    END
    OLD.NAME = INV.FULL.DESC
    GOSUB 8500
    IF QTY.OH = 0 AND INV.SUBS # "" THEN
      MAT S.INV.REC = MAT INV.REC
      OPDNO = PDNO; S.INV.SUBS = INV.SUBS
      PCNT = DCOUNT(S.INV.SUBS,VM)
      FOR P = 1 TO PCNT
        PDNO = S.INV.SUBS<1,P>
        MATREAD INV.REC FROM INVENTORY, CONO:PDNO THEN
          GOSUB 8500
          IF QTY.OH THEN
            QTY.OH = 2; PCNT = 0
          END
        END
      NEXT P
      MAT INV.REC = MAT S.INV.REC
      PDNO = OPDNO; S.INV.SUBS = ""
    END
    GOSUB 8000
  END
*
*---- Prompt Line
*
  S.BASE.SKU = INV.BASE.SKU
  P.MSG = "Enter # to change, (W), (V)"
  P.VALDAT = "21,W,V"
  MAX.SSNO = 0; SSNO.CNTL = ""; MAT RQD.DATA = 0
  PTR = 1
  LOOP
    VAL = FIELD(CATG.ADDL.SCRNS,",",PTR)
  WHILE VAL # "" DO
    LOCATE VAL IN INI.SSNO,1 SETTING SSNO THEN
      MAX.SSNO = MAX.SSNO + 1
      RQD.DATA(SSNO) = MAX.SSNO
      SSNO.CNTL<MAX.SSNO> = SSNO
      P.MSG = P.MSG:", (":VAL:")"
      P.VALDAT = P.VALDAT :",":VAL
    END
    PTR = PTR + 1
  REPEAT
  OLD.SSNO = ""
  IF IOF.BOM # "" AND NOT(RQD.B) THEN OLD.SSNO<-1> = "B"
  IF IOF.DIE # "" AND NOT(RQD.D) THEN OLD.SSNO<-1> = "D"
  IF IOF.UPC # "" AND NOT(RQD.S) THEN OLD.SSNO<-1> = "S"
  IF (IOF.PLATE # "" OR IOF.SI.NO # "") AND NOT(RQD.P) THEN
    OLD.SSNO<-1> = "P"
  END
  CNT = DCOUNT(OLD.SSNO,AM)
  FOR P = 1 TO CNT
    VAL = OLD.SSNO<P>
    LOCATE VAL IN INI.SSNO,1 SETTING SSNO THEN
      LOCATE SSNO IN SSNO.CNTL,1 SETTING FND ELSE
        MAX.SSNO = MAX.SSNO + 1
        RQD.DATA(SSNO) = MAX.SSNO
        SSNO.CNTL<MAX.SSNO> = SSNO
        P.MSG = P.MSG:", (":VAL:")"
        P.VALDAT = P.VALDAT :",":VAL
      END
    END
  NEXT P
*MAX.SSNO = MAX.SSNO + 1
*RQD.V = MAX.SSNO
*SSNO.CNTL<MAX.SSNO> = 4
  IF INV.SUBS # "" THEN
    P.MSG = P.MSG:", (U)"
    P.VALDAT = P.VALDAT :",U"
  END
  P.VALDAT = P.VALDAT : ",F,E"
  IF LEN(P.MSG) < 58 THEN
    P.MSG = P.MSG:", (F)ile, (E)xit :"
  END ELSE
    P.MSG = P.MSG:", (F), (E) :"
  END
  MORE = 1
  LOOP
    IF NEWREC AND MAX.SSNO > 0 THEN
      ECD.NUM = 52
    END ELSE
      ECD.PMSG = P.MSG
      ECD.VALDAT = P.VALDAT
      ECD.TOOLBAR.EFF = 1
      ECD.NUM = 51
    END
    SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
        RELEASE INV.FNGD, CONO:PDNO
        RELEASE INVENTORY, CONO:PDNO
        MORE = 0
      CASE NEWREC AND OPTION = "N"
        SSNO = 1; GOSUB 7000
        IF STATUS = "END" THEN
          RELEASE INV.FNGD, CONO:PDNO
          RELEASE INVENTORY, CONO:PDNO
          MORE = 0
        END ELSE
          NEWREC = 0
        END
      CASE OPTION = "B" AND RQD.B
        SSNO = RQD.B; GOSUB 7000
      CASE OPTION = "D" AND RQD.D
        SSNO = RQD.D; GOSUB 7000
      CASE OPTION = "S" AND RQD.S
        SSNO = RQD.S; GOSUB 7000
      CASE OPTION = "P" AND RQD.P
        SSNO = RQD.P; GOSUB 7000
      CASE OPTION = "V"
        ECD.SCRN.NO = 2
        ECD.ACTION = 2; CALL SCRN.EDIT
        CALL VEND.PRD.MAINT(NEWREC,CONO,PDNO)
        ECD.SCRN.NO = ESN
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE=0
          GOSUB 11000
        END
      CASE OPTION = "W"
        ECD.SCRN.NO = 3
        ECD.ACTION = 2; CALL SCRN.EDIT
        CALL FNGD.WHSE.SUB(CONO,PDNO,GXR.CO,OLD.NAME)
        ECD.SCRN.NO = ESN
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE = 0
          GOSUB 11000
        END
      CASE OPTION = "U" AND INV.SUBS # ""
        GXR.NAME = "INV.SUBS"
        GXR.FILE = INVENTORY
        GXR.SRCH.ID = INV.SUBS
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE=0
          GOSUB 11000
        END
      CASE OPTION = "F"
        ERRMSG = "Information has not been completed on "
        BEGIN CASE
          CASE IOF.BOM = "" AND RQD.B
            ERRMSG = ERRMSG:"Bill of Materials"
          CASE IOF.DIE = "" AND RQD.D
            ERRMSG = ERRMSG:"Die"
          CASE IOF.UPC = "" AND RQD.S
            ERRMSG = ERRMSG:"Specifications"
          CASE IOF.PLATE = "" AND IOF.SI.NO = "" AND RQD.P
            ERRMSG = ERRMSG:"Plates"
          CASE 1
            ERRMSG = ""
        END CASE
        IF ERRMSG = "" THEN
          IF S.BASE.SKU # "" AND S.BASE.SKU # INV.BASE.SKU THEN
            MAT S.INV.REC = MAT INV.REC
            MATREADU INV.REC FROM INVENTORY, CONO:S.BASE.SKU THEN
              LOCATE PDNO IN INV.SUBS<1>,1 SETTING SLOC THEN
                INV.SUBS = DELETE(INV.SUBS,1,SLOC,0)
                MATWRITE INV.REC ON INVENTORY, CONO:S.BASE.SKU
              END ELSE
                RELEASE INVENTORY, CONO:S.BASE.SKU
              END
            END ELSE
              RELEASE INVENTORY, CONO:S.BASE.SKU
            END
            MAT INV.REC = MAT S.INV.REC
          END
          IF INV.BASE.SKU # "" THEN
            MAT S.INV.REC = MAT INV.REC
            BASE.SKU = INV.BASE.SKU
            MATREADU INV.REC FROM INVENTORY, CONO:BASE.SKU THEN
              LOCATE PDNO IN INV.SUBS<1>,1 SETTING FND ELSE
                INV.SUBS<1,FND> = PDNO
              END
              MATWRITE INV.REC ON INVENTORY, CONO:BASE.SKU
              MAT INV.REC = MAT S.INV.REC
            END ELSE
              RELEASE INVENTORY, CONO:BASE.SKU
              ERRMSG = "Cannot locate Base Product # ":BASE.SKU
              GOSUB 91000
              MAT INV.REC = MAT S.INV.REC
              INV.BASE.SKU = ""
            END
          END
          IF INV.SUBS # "" THEN
            MAT S.INV.REC = MAT INV.REC
            S.INV.SUBS = INV.SUBS
            S.CUST = INV.CUST; S.LINE = INV.LINE
            S.SBR = INV.SBR; S.BAS.WT = INV.BAS.WT
            S.COST.WT = INV.COST.WT; S.M.WT = INV.M.WT
            PCNT = DCOUNT(S.INV.SUBS,VM)
            FOR P = 1 TO PCNT
              SUB.SKU = S.INV.SUBS<1,P>
              MATREADU INV.REC FROM INVENTORY, CONO:SUB.SKU THEN
                IF INV.BASE.SKU = PDNO THEN
                  INV.CUST = S.CUST; INV.LINE = S.LINE
                  INV.SBR = S.SBR; INV.BAS.WT = S.BAS.WT
                  INV.COST.WT = S.COST.WT; INV.M.WT = S.M.WT
                  MATWRITE INV.REC ON INVENTORY, CONO:SUB.SKU
                END ELSE
                  RELEASE INVENTORY, CONO:SUB.SKU
                END
              END ELSE
                RELEASE INVENTORY, CONO:SUB.SKU
              END
            NEXT P
            MAT INV.REC = MAT S.INV.REC
            S.INV.SUBS = ""
          END
          CALL INV.FULL.DESC.SUB(CONO,CONTROL)
          MATWRITE INV.REC ON INVENTORY, CONO:PDNO
          MATWRITE IOF.REC ON INV.FNGD, CONO:PDNO
          MATREADU IH.REC FROM INV.HIST, CONO:PDNO THEN
            RELEASE INV.HIST, CONO:PDNO
          END ELSE
            MAT IH.REC = ""
            MATWRITE IH.REC ON INV.HIST, CONO:PDNO
          END
          CALL GEN.XREF.MAINT(GXR.CO,PDNO,OLD.NAME,INV.FULL.DESC,INVENTORY.XREF,PREFIX)
          MORE = 0
        END ELSE
          ERRMSG = ERRMSG:" screen"
          GOSUB 91000
        END
      CASE NOT(NUM(OPTION))
        ERRMSG = "Invalid Entry, try again !!"
        GOSUB 91000
      CASE OPTION < 1 OR OPTION > 21
        ERRMSG = "Out Of Range !!"
        GOSUB 91000
      CASE 1
        ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100
    END CASE
  WHILE MORE DO REPEAT
  GOTO 5
*
*---- Description
1100*
  ECD.NUM = 2
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.DESC = ECD.RET.VALUE
    IF INV.FULL.DESC = "" THEN INV.FULL.DESC = INV.DESC
  END
  RETURN
*
*---- Base SKU
1200*
  IF INV.SUBS # "" THEN
    INV.BASE.SKU = ""
    ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 5; CALL SCRN.EDIT
    GOTO 1209
  END
1201*
  ECD.NUM = 3
  ECD.ACTION = 4; CALL SCRN.EDIT
1205*
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1209
    CASE ECD.RET.VALUE = PDNO
      ERRMSG = "A product cannot be a base of itself."
      GOSUB 91000; GOTO 1201
    CASE ECD.RET.VALUE = ""
      IF INV.SUBS = "" THEN
        INV.BASE.SKU = ECD.RET.VALUE
        GOTO 1209
      END ELSE
        ERRMSG = "This Product is still associated with other products."
        GOSUB 91000; GOTO 1201
      END
    CASE ECD.RET.VALUE = "???"
      GXR.NAME = "INV.FNGD.BASE"
      GXR.FILE = INVENTORY
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(3)<ESN> = INV.BASE.SKU
        ECD.ACTION = 3; CALL SCRN.EDIT
        GOTO 1201
      END ELSE
        ECD.RET.VALUE = GXR.ID
        SCV.REC(3)<ESN> = GXR.ID
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE = 0
          GOSUB 11000
        END
        GOTO 1205
      END
  END CASE
  MAT S.INV.REC = MAT INV.REC
  S.CUST = INV.CUST; S.LINE = INV.LINE
  S.SBR = INV.SBR; S.BAS.WT = INV.BAS.WT
  S.COST.WT = INV.COST.WT; S.M.WT = INV.M.WT
  MATREAD INV.REC FROM INVENTORY, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate product # ":ECD.RET.VALUE
    MAT INV.REC = MAT S.INV.REC
    GOSUB 91000; GOTO 1201
  END
  MATREAD IOF.REC FROM INV.FNGD, CONO:ECD.RET.VALUE THEN
    MATREAD BOM.REC FROM FNGD.BOM, CONO:IOF.BOM THEN
      IF BOM.TYPE = "K" THEN
        ERRMSG = "Base Product Cannot be a Kit"
        MAT INV.REC = MAT S.INV.REC
        GOSUB 91000; GOTO 1201
      END
    END
  END
  ERRMSG = ""
  BEGIN CASE
    CASE INV.M.LINE # "FNGD"
      ERRMSG = "This is not a Finished Goods Product. Try again !!"
    CASE INV.BASE.SKU # ""
      ERRMSG = "Product (":ECD.RET.VALUE:") already has a base product # ":INV.BASE.SKU
    CASE NEWREC = 1
    CASE S.CUST # INV.CUST
      ERRMSG = "Base Product belongs to a different customer # ":INV.CUST
    CASE S.LINE # INV.LINE
      ERRMSG = "Base Product has a different product line # ":INV.LINE
    CASE S.SBR # INV.SBR
      ERRMSG = "Base Product has a different Stock-Buy Ratio ":OCONV(INV.SBR,"MD0")
    CASE S.COST.WT # INV.COST.WT
      ERRMSG = "Base Product has a different Costing Weight ":OCONV(INV.COST.WT,"MD2")
    CASE S.M.WT # INV.M.WT
      ERRMSG = "Base Product has a different M Weight ":INV.M.WT
    CASE S.BAS.WT # INV.BAS.WT
      ERRMSG = "Base Product has a different Basis Weight "
      IF NUM(INV.BAS.WT) THEN
        ERRMSG = ERRMSG:OCONV(INV.BAS.WT,"MD2")
      END ELSE
        ERRMSG = ERRMSG:INV.BAS.WT
      END
  END CASE
  BEGIN CASE
    CASE ERRMSG # ""
      MAT INV.REC = MAT S.INV.REC
      GOSUB 91000; GOTO 1201
    CASE NEWREC = 1
      INV.SUBS = ""; INV.WHSE.CODE = ""
      INV.LA.SALE = ""; INV.LA.PUR = ""
      MATREAD IOF.REC FROM INV.FNGD, CONO:ECD.RET.VALUE ELSE
        MAT IOF.REC = ""
      END
    CASE 1
      MAT INV.REC = MAT S.INV.REC
  END CASE
  INV.BASE.SKU = ECD.RET.VALUE
1209*
  RETURN
*
*---- Customer
1300*
  BEGIN CASE
    CASE QTY.OH
      ON QTY.OH GOSUB 88000,89000
      GOTO 1309
    CASE INV.BASE.SKU # ""
      GOSUB 87000; GOTO 1309
  END CASE
1301*
  ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1309
    CASE ECD.RET.VALUE = ""
      ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN
        INV.CUST = ""; GOTO 1309
      END
      GXR.NAME = "CUSTOMER"
      GXR.XREF = CUSTOMER.XREF
      GXR.FILE = CUSTOMER
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(5)<ESN> = ""
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE = 0
          GOSUB 11000
        END
        GOTO 1301
      END ELSE
        MATREAD CUST.REC FROM CUSTOMER,CONO:GXR.ID ELSE
          ERRMSG = "Cannot locate customer # ":GXR.ID
          GOSUB 91000; GOTO 1301
        END
        SCV.REC(4)<ESN> = GXR.ID
        SCV.REC(5)<ESN> = CUST.NAME
        ECD.ACTION = 3; CALL SCRN.EDIT
        IF CO.JES = "Y" THEN
          OLD.START.LINE=0
          GOSUB 11000
        END
        INV.CUST = GXR.ID
      END
    CASE 1
      MATREAD CUST.REC FROM CUSTOMER,CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Cannot locate customer # ":ECD.RET.VALUE
        GOSUB 91000; GOTO 1301
      END
      SCV.REC(4)<ESN> = ECD.RET.VALUE
      SCV.REC(5)<ESN> = CUST.NAME
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF CO.JES = "Y" THEN
        OLD.START.LINE=0
        GOSUB 11000
      END
      INV.CUST = ECD.RET.VALUE
  END CASE
1309*
  RETURN
*
*---- Special Code
1400*
  ECD.NUM = 6
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.SPEC = ECD.RET.VALUE
  END
  RETURN
*
*---- Product Line
1500*
  BEGIN CASE
    CASE QTY.OH
      ON QTY.OH GOSUB 88000,89000
      GOTO 1559
    CASE INV.BASE.SKU # ""
      GOSUB 87000; GOTO 1559
  END CASE
1501*
  ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 1559
    CASE ECD.RET.VALUE = "???"
      GXR.NAME = "FNGD.CATEGORY"
      GXR.FILE = CATEGORY
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      SCV.REC(7)<ESN> = GXR.ID
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF CO.JES = "Y" THEN
        OLD.START.LINE=0
        GOSUB 11000
      END
      IF GXR.ID = "" THEN GOTO 1501
      ECD.RET.VALUE = GXR.ID
  END CASE
  MATREAD CATG.REC FROM CATEGORY, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate Product Line # ":ECD.RET.VALUE
    GOSUB 91000; GOTO 1501
  END
  IF CATG.MAJ.LINE # "FNGD" THEN
    ERRMSG = "This is not a Finished Goods Product Line. Try again !!"
    GOSUB 91000; GOTO 1501
  END
  INV.M.LINE = CATG.MAJ.LINE
  INV.LINE = ECD.RET.VALUE
*
*---- Paper Type
1550*
  BEGIN CASE
    CASE CATG.TYPE = "S"
      INV.PAP.TYPE = "SHEET"
    CASE CATG.TYPE = "L"
      INV.PAP.TYPE = "ROLL"
    CASE CATG.TYPE = "RL"
      INV.PAP.TYPE = "LROLL"
    CASE CATG.TYPE = "PC"
      INV.PAP.TYPE = "PCOAT"
    CASE 1
      INV.PAP.TYPE = "REGULAR"
  END CASE
  ECD.NUM = 9
  SCV.REC(9)<ESN> = INV.PAP.TYPE
  ECD.ACTION = 5; CALL SCRN.EDIT
1559*
  RETURN
*
*---- Buy Unit
1600*
  ECD.NUM = 11
  BEGIN CASE
    CASE CATG.TYPE = "S"
      ECD.VALDAT = "SHT,LBS"; ECD.HMSG = "SHT , LBS"; ECD.DEFAULT = "SHT"
      INV.UNIT<1,2> = "SHT"; INV.UNIT<1,3> = "LBS"
    CASE CATG.TYPE = "L"
      ECD.VALDAT = "LBS"; ECD.HMSG = "LBS"; ECD.DEFAULT = "LBS"
      INV.UNIT<1,2> = "LBS"; INV.UNIT<1,3> = "LBS"
    CASE CATG.TYPE = "RL"
      ECD.VALDAT = "FT,MSI,PC"; ECD.HMSG = "FT , MSI , PC"; ECD.DEFAULT = "PC"
      INV.UNIT<1,2> = "PC"; INV.UNIT<1,3> = "MSI"
    CASE CATG.TYPE = "PC"
      ECD.VALDAT = "FT,MSI"; ECD.HMSG = "FT , MSI"; ECD.DEFAULT = "FT"
      INV.UNIT<1,2> = "FT"; INV.UNIT<1,3> = "MSI"
    CASE CATG.TYPE = "P"
      ECD.DEFAULT = "EA"; INV.UNIT<1,2> = "EA"; INV.UNIT<1,3> = "EA"
    CASE CATG.TYPE = "I"
      ECD.DEFAULT = "LBS"; INV.UNIT<1,2> = "LBS"; INV.UNIT<1,3> = "LBS"
  END CASE
  IF INV.UNIT<1,1> # "" THEN
    ECD.DEFAULT = INV.UNIT<1,1>
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.UNIT<1,1> = ECD.RET.VALUE
  END
*
*---- Stock Unit
*
  ECD.NUM = 13
  IF CATG.TYPE = "P" THEN
    INV.UNIT<1,2> = INV.UNIT<1,1>
    INV.UNIT<1,3> = INV.UNIT<1,1>
  END
  IF INV.PAP.TYPE = "REGULAR" AND CATG.TYPE # "P" THEN
    IF INV.UNIT<1,2> # "" THEN
      ECD.DEFAULT = INV.UNIT<1,2>
    END
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN
      INV.UNIT<1,2> = ECD.RET.VALUE
    END
  END ELSE
    SCV.REC(ECD.NUM)<ESN> = INV.UNIT<1,2>
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
*
*---- Price Unit
*
  ECD.NUM = 15
  IF CATG.TYPE = "F" OR CATG.TYPE = "O" OR CATG.TYPE = "I" THEN
    INV.UNIT<1,3> = INV.UNIT<1,2>
  END
  IF INV.PAP.TYPE = "REGULAR" AND CATG.TYPE # "P" AND CATG.TYPE # "F" AND CATG.TYPE # "O" AND CATG.TYPE # "I" THEN
    IF INV.UNIT<1,3> # "" THEN
      ECD.DEFAULT = INV.UNIT<1,3>
    END
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN
      INV.UNIT<1,3> = ECD.RET.VALUE
    END
  END ELSE
    SCV.REC(ECD.NUM)<ESN> = INV.UNIT<1,3>
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
*
*---- Sell Unit
*
  IF QTY.OH THEN GOTO 1699
  ECD.NUM = 17
  IF INV.UNIT<1,5> # "" THEN
    ECD.DEFAULT = INV.UNIT<1,5>
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
    CASE ECD.RET.VALUE = "M"
      INV.UNIT<1,5> = ECD.RET.VALUE
      INV.SELL.UNIT = 1000
      ECD.NUM = 23
      INV.COST.WT = 100000; SCV.REC(ECD.NUM)<ESN> = INV.COST.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE ECD.RET.VALUE = "C"
      INV.UNIT<1,5> = ECD.RET.VALUE
      INV.SELL.UNIT = 100
      ECD.NUM = 23
      INV.COST.WT = 10000; SCV.REC(ECD.NUM)<ESN> = INV.COST.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      INV.UNIT<1,5> = ECD.RET.VALUE
      INV.SELL.UNIT = 1
  END CASE
1699*
  RETURN
*
*---- Stock/Buy Ratio
1700*
  IF INV.BASE.SKU # "" THEN
    GOSUB 87000; GOTO 1709
  END
  ECD.NUM = 19
  IF INV.PAP.TYPE = "REGULAR" AND INV.M.LINE # "FNGD" THEN
    ECD.DEFAULT = 1
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 1709
    INV.SBR = ECD.RET.VALUE
  END ELSE
    INV.SBR = 1; SCV.REC(ECD.NUM)<ESN> = INV.SBR
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
1709*
  RETURN
*
*---- Basis Weight
1800*
  ECD.NUM = 21
  BEGIN CASE
    CASE INV.BASE.SKU # ""
      GOSUB 87000
    CASE INV.PAP.TYPE = "REGULAR"
      INV.BAS.WT = 0; SCV.REC(ECD.NUM)<ESN> = INV.BAS.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE QTY.OH
      ON QTY.OH GOSUB 88000,89000
    CASE 1
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        IF NUM(ECD.RET.VALUE) THEN
          INV.BAS.WT = ICONV(ECD.RET.VALUE,"MD2")
        END ELSE
          INV.BAS.WT = ECD.RET.VALUE
        END
      END
  END CASE
  RETURN
*
*---- Costing Weight
1900*
  ECD.NUM = 23
  BEGIN CASE
    CASE INV.BASE.SKU # ""
      GOSUB 87000
    CASE INV.PAP.TYPE = "REGULAR" AND INV.M.LINE # "FNGD"
      INV.COST.WT = 100; SCV.REC(ECD.NUM)<ESN> = INV.COST.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE QTY.OH
      ON QTY.OH GOSUB 88000,89000
    CASE INV.UNIT<1,5> = "M"
      INV.COST.WT = 100000; SCV.REC(ECD.NUM)<ESN> = INV.COST.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE INV.UNIT<1,5> = "C"
      INV.COST.WT = 10000; SCV.REC(ECD.NUM)<ESN> = INV.COST.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        INV.COST.WT = ECD.RET.VALUE
      END
  END CASE
  RETURN
*
*---- M Weight
2000*
  ECD.NUM = 25
  BEGIN CASE
    CASE INV.BASE.SKU # ""
      GOSUB 87000
    CASE CATG.TYPE # "S"
      INV.M.WT = 0; SCV.REC(ECD.NUM)<ESN> = INV.M.WT
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE QTY.OH
      ON QTY.OH GOSUB 88000,89000
    CASE 1
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        INV.M.WT = ECD.RET.VALUE
      END
  END CASE
  RETURN
*
*---- Width
2100*
  IF CATG.TYPE = "I" THEN
    INV.PAP.WIDTH = 0; INV.PAP.LEN = 0
    S.WID = INV.PAP.WIDTH; S.LEN = INV.PAP.LEN
    ECD.RET.VALUE = INV.PAP.WIDTH; GOSUB 6000
    WID.WHOLE = WHOLE.VAL; WID.NUM = NUM.VAL; WID.DEN = DEN.VAL
    ECD.RET.VALUE = INV.PAP.LEN; GOSUB 6000
    LEN.WHOLE = WHOLE.VAL; LEN.NUM = NUM.VAL; LEN.DEN = DEN.VAL
    GOSUB 2190; GOTO 2195
  END
  S.WID = INV.PAP.WIDTH
  IF MOD(INV.PAP.WIDTH,625) THEN GOTO 2102
2101*
  ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOSUB 2190; GOTO 2149
    CASE ECD.RET.VALUE = ""
2102*
      GOSUB 2150
      BEGIN CASE
        CASE ECD.RET.VALUE = "END"
          GOSUB 2190; GOTO 2149
        CASE ECD.RET.VALUE = ""
          GOTO 2101
      END CASE
      GOTO 2120
  END CASE
  WID.WHOLE = ECD.RET.VALUE
2110*
  ECD.NUM = 32
  IF WID.NUM # "" THEN
    ECD.DEFAULT = WID.NUM
  END ELSE
    ECD.DEFAULT = 0
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 2101
    CASE ECD.RET.VALUE + 0 = 0
      WID.NUM = 0; WID.DEN = 0
      GOSUB 2192
    CASE 1
      WID.NUM = ECD.RET.VALUE
      ECD.MINV = WID.NUM + 1
      ECD.NUM = 33; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2101
      TEMP = ECD.RET.VALUE
      ECD.RET.VALUE = INT(WID.WHOLE + WID.NUM / ECD.RET.VALUE) * 10000
      GOSUB 6000
      ECD.RET.VALUE = TEMP
      IF NO.FRACT THEN
        ERRMSG = "Fraction should be a multiple of 1/16th. Try Decimal !"
        GOSUB 91000; GOTO 2110
      END
      WID.DEN = ECD.RET.VALUE
  END CASE
  IF WID.DEN THEN
    LOOP UNTIL MOD(WID.NUM,3) OR MOD(WID.DEN,3) DO
      WID.NUM = WID.NUM / 3
      WID.DEN = WID.DEN / 3
      GOSUB 2192
    REPEAT
    LOOP UNTIL MOD(WID.NUM,2) OR MOD(WID.DEN,2) DO
      WID.NUM = WID.NUM / 2
      WID.DEN = WID.DEN / 2
      GOSUB 2192
    REPEAT
    INV.PAP.WIDTH = WID.WHOLE + WID.NUM / WID.DEN
    INV.PAP.WIDTH = INT((INV.PAP.WIDTH + .00005) * 10000) / 10000
  END ELSE
    INV.PAP.WIDTH = WID.WHOLE
  END
  INV.PAP.WIDTH = INV.PAP.WIDTH * 10000
  ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = INV.PAP.WIDTH
  ECD.ACTION = 5; CALL SCRN.EDIT
2120*
  S.LEN = INV.PAP.LEN
  IF MOD(INV.PAP.LEN,625) THEN GOTO 2122
2121*
  IF INV.PAP.TYPE # "REGULAR" AND CATG.TYPE # "S" THEN
    INV.PAP.LEN = 0
    S.LEN = INV.PAP.LEN
    ECD.RET.VALUE = INV.PAP.LEN; GOSUB 6000
    LEN.WHOLE = WHOLE.VAL; LEN.NUM = NUM.VAL; LEN.DEN = DEN.VAL
    GOSUB 2195; GOTO 2149
  END
  ECD.NUM = 34; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOSUB 2195; GOTO 2101
    CASE ECD.RET.VALUE = ""
2122*
      GOSUB 2170
      BEGIN CASE
        CASE ECD.RET.VALUE = "END"
          GOSUB 2195; GOTO 2101
        CASE ECD.RET.VALUE = ""
          GOTO 2121
      END CASE
      GOTO 2149
  END CASE
  LEN.WHOLE = ECD.RET.VALUE
2130*
  ECD.NUM = 35
  IF LEN.NUM # "" THEN
    ECD.DEFAULT = LEN.NUM
  END ELSE
    ECD.DEFAULT = 0
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 2121
    CASE ECD.RET.VALUE + 0 = 0
      LEN.NUM = 0; LEN.DEN = 0
      GOSUB 2197
    CASE 1
      LEN.NUM = ECD.RET.VALUE
      ECD.MINV = LEN.NUM + 1
      ECD.NUM = 36; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2121
      TEMP = ECD.RET.VALUE
      ECD.RET.VALUE = INT(LEN.WHOLE + LEN.NUM / ECD.RET.VALUE) * 10000
      GOSUB 6000
      ECD.RET.VALUE = TEMP
      IF NO.FRACT THEN
        ERRMSG = "Fraction should be a multiple of 1/16th. Try Decimal !"
        GOSUB 91000; GOTO 2130
      END
      LEN.DEN = ECD.RET.VALUE
  END CASE
  IF LEN.DEN THEN
    LOOP UNTIL MOD(LEN.NUM,3) OR MOD(LEN.DEN,3) DO
      LEN.NUM = LEN.NUM / 3
      LEN.DEN = LEN.DEN / 3
      GOSUB 2197
    REPEAT
    LOOP UNTIL MOD(LEN.NUM,2) OR MOD(LEN.DEN,2) DO
      LEN.NUM = LEN.NUM / 2
      LEN.DEN = LEN.DEN / 2
      GOSUB 2197
    REPEAT
    INV.PAP.LEN = LEN.WHOLE + LEN.NUM / LEN.DEN
    INV.PAP.LEN = INT((INV.PAP.LEN + .00005) * 10000) / 10000
  END ELSE
    INV.PAP.LEN = LEN.WHOLE
  END
  INV.PAP.LEN = INV.PAP.LEN * 10000
  ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = INV.PAP.LEN
  ECD.ACTION = 5; CALL SCRN.EDIT
2149*
  RETURN
*
*---- Width in decimal
2150*
  ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 2159
    CASE ECD.RET.VALUE = ""
      GOTO 2159
  END CASE
  GOSUB 6000
  IF NO.FRACT THEN
    ERRMSG = "Decimal is not multiple of 1/16th, cannot compute Fraction !"
    GOSUB 91000
  END
  INV.PAP.WIDTH = ECD.RET.VALUE
  WID.WHOLE = WHOLE.VAL; WID.NUM = NUM.VAL; WID.DEN = DEN.VAL
  GOSUB 2191
2159*
  RETURN
*
*---- Length in decimal
2170*
  ECD.NUM = 42; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 2179
    CASE ECD.RET.VALUE = ""
      GOTO 2179
  END CASE
  GOSUB 6000
  IF NO.FRACT THEN
    ERRMSG = "Decimal is not multiple of 1/16th, cannot compute Fraction !"
    GOSUB 91000
  END
  LEN.WHOLE = WHOLE.VAL; LEN.NUM = NUM.VAL; LEN.DEN = DEN.VAL
  INV.PAP.LEN = ECD.RET.VALUE
  GOSUB 2196
2179*
  RETURN
2190*
  INV.PAP.WIDTH = S.WID; ECD.RET.VALUE = S.WID; GOSUB 6000
  WID.WHOLE = WHOLE.VAL; WID.NUM = NUM.VAL; WID.DEN = DEN.VAL
  ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = INV.PAP.WIDTH
  ECD.ACTION = 5; CALL SCRN.EDIT
2191*
  ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = WID.WHOLE
  ECD.ACTION = 5; CALL SCRN.EDIT
2192*
  ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = WID.NUM
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 33; SCV.REC(ECD.NUM)<ESN> = WID.DEN
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
2195*
  INV.PAP.LEN = S.LEN; ECD.RET.VALUE = S.LEN; GOSUB 6000
  LEN.WHOLE = WHOLE.VAL; LEN.NUM = NUM.VAL; LEN.DEN = DEN.VAL
  ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = INV.PAP.LEN
  ECD.ACTION = 5; CALL SCRN.EDIT
2196*
  ECD.NUM = 34; SCV.REC(ECD.NUM)<ESN> = LEN.WHOLE
  ECD.ACTION = 5; CALL SCRN.EDIT
2197*
  ECD.NUM = 35; SCV.REC(ECD.NUM)<ESN> = LEN.NUM
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 36; SCV.REC(ECD.NUM)<ESN> = LEN.DEN
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Color
2200*
  ECD.NUM = 12
  IF CATG.TYPE = "P" OR CATG.TYPE = "O" OR CATG.TYPE = "F" THEN
    ECD.O.R = "O"
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
    CASE ECD.RET.VALUE = ""
    CASE ECD.RET.VALUE = "???"
      GXR.SORT.FILE = "COLOR"; GXR.FILE = COLOR
      FLD = 12; GOSUB 5000
      IF ECD.RET.VALUE # "" THEN
        MATREAD COLOR.REC FROM COLOR, CONO:ECD.RET.VALUE ELSE
          ERRMSG = "Cannot locate color # ":ECD.RET.VALUE
          GOSUB 91000; GOTO 2200
        END
      END ELSE
        GOTO 2200
      END
      INV.COLOR = ECD.RET.VALUE
    CASE 1
      MATREAD COLOR.REC FROM COLOR, CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Cannot locate color # ":ECD.RET.VALUE
        GOSUB 91000; GOTO 2200
      END
      INV.COLOR = ECD.RET.VALUE
  END CASE
  RETURN
*
*---- Finish
2300*
  IF INV.PAP.TYPE = "REGULAR" THEN GOTO 2390
  ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
    CASE ECD.RET.VALUE = "???"
      GXR.SORT.FILE = "FINISH"; GXR.FILE = FINISH
      FLD = 14; GOSUB 5000
      IF ECD.RET.VALUE # "" THEN
        MATREAD FINISH.REC FROM FINISH, CONO:ECD.RET.VALUE ELSE
          ERRMSG = "Cannot locate finish # ":ECD.RET.VALUE
          GOSUB 91000; GOTO 2300
        END
      END ELSE
        GOTO 2300
      END
      INV.PAP.FINSH = ECD.RET.VALUE
    CASE 1
      MATREAD FINISH.REC FROM FINISH, CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Cannot locate finish # ":ECD.RET.VALUE
        GOSUB 91000; GOTO 2300
      END
      INV.PAP.FINSH = ECD.RET.VALUE
  END CASE
2390*
  RETURN
*
*---- Brightness
2400*
  IF INV.PAP.TYPE = "REGULAR" THEN GOTO 2490
  ECD.NUM = 16
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2490
  INV.BRIGHT = ECD.RET.VALUE
2490*
  RETURN
*
*---- Shade
2500*
  IF INV.PAP.TYPE = "REGULAR" THEN GOTO 2590
  ECD.NUM = 18
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2590
  INV.SHADE = ECD.RET.VALUE
2590*
  RETURN
*
*---- Pages Per Inch
2600*
  IF INV.PAP.TYPE = "REGULAR" THEN GOTO 2690
  ECD.NUM = 20
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2690
  INV.PPI = ECD.RET.VALUE
2690*
  RETURN
*
*---- Grain Direction
2700*
  IF INV.PAP.TYPE = "REGULAR" THEN GOTO 2790
  ECD.NUM = 22
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2790
  INV.GRAIN = ECD.RET.VALUE
2790*
  RETURN
*
*---- Taxable
2800*
  ECD.NUM = 24
  ECD.DEFAULT = "N"
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.TAXABLE = ECD.RET.VALUE
  END
  RETURN
*
*---- Suggested Order Quantity
2900*
  ECD.NUM = 26
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.SOQ = ECD.RET.VALUE
  END
  RETURN
*
*---- Yield
3000*
  ECD.NUM = 55
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    INV.YIELD = ECD.RET.VALUE
  END
  RETURN
*
*---- Estimate
3100*
  IF CO.JES = "Y" THEN
*T20167 v  
    MORE2 = 1
    LOOP
*  ECD.NUM = 56
      ECD.NUM = 50
      ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
        CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = ""
          MORE2 = 0
        CASE ECD.RET.VALUE = "D"
          GOSUB 10900
          IF LN.NO THEN
            LN = LN.NO
            IOF.ESTIMATE = DELETE(IOF.ESTIMATE,1,LN,0)
            EST.DIV.ARRAY = DELETE(EST.DIV.ARRAY,1,LN,0)
            LINES = DCOUNT(IOF.ESTIMATE,@VM)
            IF LN > 1 AND LN > LINES THEN LN = LN - 1
            IF LN < 1 THEN LN = 1
            OLD.START.LINE = 0
          END
          IF CO.JES = "Y" THEN
            GOSUB 11000
          END
        CASE ECD.RET.VALUE = "A"
          LOOP
            LINES=DCOUNT(IOF.ESTIMATE,@VM)
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 10010
          WHILE LINES > OLD.LINES DO
          REPEAT
          LN = LINES
          IF CO.JES = "Y" THEN
            GOSUB 11000
          END
        CASE ECD.RET.VALUE = "S"
          LN = LN + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          IF CO.JES = "Y" THEN
            GOSUB 11000
          END
        * T25978 v
        CASE ECD.RET.VALUE = 'SR'
          LN -= PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 11000
        CASE ECD.RET.VALUE = 'ST'
          LN = 1
          GOSUB 11000
        CASE ECD.RET.VALUE = 'SB'
          LN = LINES
          GOSUB 11000
          * T25978 ^
        CASE ECD.RET.VALUE = "C"
          GOSUB 10900
          IF LN.NO THEN
            LN = LN.NO
            GOSUB 10010
          END
      END CASE
    WHILE MORE2 DO REPEAT
  END ELSE
    ERRMSG = "System not Configured for Estimating"
    GOSUB 91000
  END
*T20167 ^
  RETURN
*
*---- Code Selection
5000*
  GXR.NAME = "GEN.CODE"
  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
  ECD.RET.VALUE = GXR.ID
  SCV.REC(FLD)<ESN> = GXR.ID
  ECD.ACTION = 2; CALL SCRN.EDIT
  ECD.ACTION = 3; CALL SCRN.EDIT
  IF CO.JES = "Y" THEN
    OLD.START.LINE=0
    GOSUB 11000
  END
  RETURN
*
*---- Calculate Size in Fractions
6000*
  NO.FRACT = 0
  WHOLE.VAL = ECD.RET.VALUE / 10000
  FRACT = FIELD(WHOLE.VAL,".",2)
  FRACT = FRACT:STR(0,4-LEN(FRACT))
  IF MOD(FRACT,625) = 0 THEN
    NUM.VAL = (WHOLE.VAL - INT(WHOLE.VAL)) * 16
    IF NUM.VAL THEN
      DEN.VAL = 16
      LOOP WHILE MOD(NUM.VAL,2) = 0 DO
        NUM.VAL = NUM.VAL / 2
        DEN.VAL = DEN.VAL / 2
      REPEAT
    END ELSE
      DEN.VAL = 0
    END
  END ELSE
    NO.FRACT = 1; SLIMIT = SIZE.CNT
    NUM.VAL = 0; DEN.VAL = 0
    FOR S = 1 TO SLIMIT
      IF FRACT > SIZE.TAB<S,1> AND FRACT < SIZE.TAB<S,2> THEN
        SLIMIT = 0; NO.FRACT = 0
        NUM.VAL = SIZE.TAB<S,3>; DEN.VAL = SIZE.TAB<S,4>
      END
    NEXT S
  END
  WHOLE.VAL = INT(WHOLE.VAL)
  RETURN
*
*---- Sub Screens
7000*
  STATUS = ""
  ON SSNO.CNTL<SSNO> GOSUB 7100,7200,7300,7400
  BEGIN CASE
    CASE STATUS = "N"
      SSNO = SSNO + 1
      IF SSNO <= MAX.SSNO THEN GOTO 7000
    CASE STATUS = "P"
      SSNO = SSNO - 1
      IF SSNO > 0 THEN GOTO 7000
    CASE NEWREC AND STATUS = "END"
      ECD.SCRN.NO = ESN
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOTO 7099
  END CASE
  ECD.SCRN.NO = ESN
  ECD.ACTION = 2; CALL SCRN.EDIT
  ECD.ACTION = 3; CALL SCRN.EDIT
  IF CO.JES = "Y" THEN
    OLD.START.LINE=0
    GOSUB 11000
  END
7099*
  RETURN
*
*---- Bill Of Material
7100*
  ECD.SCRN.NO = 4
  ECD.ACTION = 2; CALL SCRN.EDIT
  CALL INV.FNGD.SUB1(CONO,PDNO,NEWREC,STATUS)
  RETURN
*
*---- Die
7200*
  ECD.SCRN.NO = 5
  ECD.ACTION = 2; CALL SCRN.EDIT
  CALL INV.FNGD.SUB2(CONO,PDNO,NEWREC,STATUS)
  RETURN
*
*---- Specification
7300*
  ECD.SCRN.NO = 6
  ECD.ACTION = 2; CALL SCRN.EDIT
  CALL INV.FNGD.SUB3(CONO,PDNO,NEWREC,STATUS)
  RETURN
*
*---- Other
7400*
  ECD.SCRN.NO = 7
  ECD.ACTION = 2; CALL SCRN.EDIT
  CALL INV.FNGD.SUB4(CONO,PDNO,NEWREC,STATUS)
  RETURN
*
*---- Load SCV.REC
8000*
  SCV.REC(2)<ESN> = INV.DESC
  SCV.REC(3)<ESN> = INV.BASE.SKU
  SCV.REC(4)<ESN> = INV.CUST
  IF INV.CUST # "" THEN
    MATREAD CUST.REC FROM CUSTOMER,CONO:INV.CUST ELSE
      CUST.NAME = STR("?",30)
    END
    SCV.REC(5)<ESN> = CUST.NAME
  END ELSE
    SCV.REC(5)<ESN> = ""
  END
  SCV.REC(6)<ESN> = INV.SPEC
  SCV.REC(7)<ESN> = INV.LINE
  MATREAD CATG.REC FROM CATEGORY , CONO:INV.LINE ELSE
    MAT CATG.REC = ""
  END
  SCV.REC(9)<ESN> = INV.PAP.TYPE
  SCV.REC(11)<ESN> = INV.UNIT<1>
  SCV.REC(12)<ESN> = INV.COLOR
  SCV.REC(13)<ESN> = INV.UNIT<1,2>
  SCV.REC(14)<ESN> = INV.PAP.FINSH
  SCV.REC(15)<ESN> = INV.UNIT<1,3>
  SCV.REC(16)<ESN> = INV.BRIGHT
  SCV.REC(17)<ESN> = INV.UNIT<1,5>
  SCV.REC(18)<ESN> = INV.SHADE
  SCV.REC(19)<ESN> = INV.SBR
  SCV.REC(20)<ESN> = INV.PPI
  SCV.REC(21)<ESN> = OCONV(INV.BAS.WT,"MD2")
  SCV.REC(22)<ESN> = INV.GRAIN
  SCV.REC(23)<ESN> = INV.COST.WT
  SCV.REC(24)<ESN> = INV.TAXABLE
  SCV.REC(25)<ESN> = INV.M.WT
  SCV.REC(26)<ESN> = INV.SOQ
  SCV.REC(55)<ESN> = INV.YIELD
*T20167 v
  IF CO.JES = "Y" THEN
    LINES = DCOUNT(IOF.ESTIMATE,@VM)
    EST.DIV.ARRAY=''
    FOR II = 1 TO LINES
      MATREAD EST.REC FROM ESTIMATE,CONO:IOF.ESTIMATE<1,II> THEN
        EST.DIV.ARRAY<1,II> = EST.DIV[1,2]
      END ELSE
        EST.DIV.ARRAY<1,II> = ""
      END
    NEXT II
    LN = 1
    OLD.START.LINE=0
  *SCV.REC(56)<ESN> = IOF.ESTIMATE
  END
*T20167 ^
  ECD.RET.VALUE = INV.PAP.WIDTH; GOSUB 6000
  WID.WHOLE = WHOLE.VAL; WID.NUM = NUM.VAL; WID.DEN = DEN.VAL
  SCV.REC(31)<ESN> = WID.WHOLE
  SCV.REC(32)<ESN> = WID.NUM
  SCV.REC(33)<ESN> = WID.DEN
  ECD.RET.VALUE = INV.PAP.LEN; GOSUB 6000
  LEN.WHOLE = WHOLE.VAL; LEN.NUM = NUM.VAL; LEN.DEN = DEN.VAL
  SCV.REC(34)<ESN> = LEN.WHOLE
  SCV.REC(35)<ESN> = LEN.NUM
  SCV.REC(36)<ESN> = LEN.DEN
  SCV.REC(41)<ESN> = INV.PAP.WIDTH
  SCV.REC(42)<ESN> = INV.PAP.LEN
  ECD.ACTION = 3; CALL SCRN.EDIT
  IF CO.JES="Y" THEN
    OLD.START.LINE=0
    GOSUB 11000
  END
  RETURN
*
*---- Get QTY.OH
8500*
  WCNT = DCOUNT(INV.WHSE.CODE,VM)
  FOR W = 1 TO WCNT
    IWH.ID = CONO:PDNO:"!":INV.WHSE.CODE<1,W>
    MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
      IF IWH.ON.HAND > 0 THEN
        QTY.OH = 1; WCNT = 0
      END ELSE
        MATREAD INV.STAT.REC FROM INV.STATS, IWH.ID THEN
          IF SUM(ISTAT.PO.QTY) > 0 OR ISTAT.JOB # "" THEN
            QTY.OH = 1; WCNT = 0
          END
        END
      END
    END
  NEXT W
  RETURN
*
*T20167 v
*
10010 *
*
  GOSUB 11000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 63 ; P_Y = SLN ; P_VALUE = LN"R#2" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
10100 *
*
  X = 66
  Y = SLN
  TYP = 1
  MAXL = 11
  IF IOF.ESTIMATE<1,LN> # "" THEN
    O.R = 'O'
    DEFAULT = IOF.ESTIMATE<1,LN>
  END ELSE
    O.R = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = "" OR VALUE = "END" THEN
    IF IOF.ESTIMATE<1,LN> = "" THEN
      EST.DIV.ARRAY = DELETE(EST.DIV.ARRAY,1,LN,0)
      IOF.ESTIMATE = DELETE(IOF.ESTIMATE,1,LN,0)
    END
    P_X  = 63 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    IF IOF.ESTIMATE<1,LN> # VALUE THEN
      LOCATE VALUE IN IOF.ESTIMATE<1>,1 SETTING FND THEN
        ERRMSG = VALUE:" ALREADY USED"
        GOSUB 91000
        GOTO 10100
      END ELSE
        MATREAD EST.REC FROM ESTIMATE,CONO:VALUE THEN
          DIV.VAL = EST.DIV[1,2]
          LOCATE DIV.VAL IN EST.DIV.ARRAY<1>,1 SETTING FND THEN
            ERRMSG = "Estimate with this div ":DIV.VAL:" already used with Estimate ":IOF.ESTIMATE<1,FND>
            GOSUB 91000
            GOTO 10100
          END ELSE
            IOF.ESTIMATE<1,LN> = VALUE
            EST.DIV.ARRAY<1,LN> = EST.DIV[1,2]
          END
        END ELSE
          ERRMSG = VALUE:" IS NOT A VALID ESTIMATE"
          GOSUB 91000
          GOTO 10100
        END
      END
    END
    P_X  = 66 ; P_Y = SLN ; P_VALUE = IOF.ESTIMATE<1,LN>"L#11" ; P_OPT = ""
    P_X  := AM:78 ; P_Y := AM:SLN ; P_VALUE := AM:EST.DIV.ARRAY<1,LN>"R#2"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    LINES = DCOUNT(IOF.ESTIMATE,@VM)
  END
*
  RETURN
*
10900 *
*
  GOSUB 11000
  ECD.NUM = 49
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
*
  RETURN
*
11000 * scroll estimate
*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LINES = DCOUNT(IOF.ESTIMATE,@VM)
  IF NOT(START.LINE = OLD.START.LINE) THEN
    OLD.START.LINE = START.LINE
    LAST.LINE = START.LINE + PAGE.SIZE - 1
    CNT = 1
    FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 63 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.ESTIMATE<1,N> "L#11"
      P_X  := AM:78 ; P_Y := AM:SLN ; P_VALUE := AM:EST.DIV.ARRAY<1,N>[1,2] "L#2"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT+1
    NEXT N
    IF CNT <= PAGE.SIZE THEN
      FOR M = CNT TO PAGE.SIZE
        SLN = BEGIN.PAGE + M - 1
        P_X  = 63 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
    END
  END
  RETURN
*
*T20167 ^
*
*---- Error Message Routines
87000*
  ERRMSG = "Product is linked to a base product, may not modify this field!!"
  GOTO 91000
88000*
  ERRMSG = "Available On hand/In process quantity, may not modify this field!!"
  GOTO 91000
89000*
  ERRMSG = "On hand/In process qty for sub products, may not modify this field!!"
91000*
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERRMSG = "Cannot locate the ":ERRMSG:" file"
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 END

