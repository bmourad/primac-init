*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - ICF.EOM.CLOSE
* DATE        - 02/28/87
* DESCRIPTION - This program runs end of month closing for FNGD inventory.
* TASK
*     19256 10/11/95 LLH - EOD PROCESSING
*
*T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
*T23278 markt 12/01/1998 * Make fiscal data multi-value by division.
*T25975 cmykleb 02/04/2002 * Save EOM transaction data so history
*                            reports can be run.
*T25740 epitka 03/04/2002 * REV12
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>PMC.CPYLIB>GLTABLE
*COPY>GLS.CPYLIB>GLA
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>EOM.TRANS.HIST             ; * T25975
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>WAREHOUSE ;*T23278
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
***** SETUP ERRMSG ROUTINE
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
   PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
   END
   CONO = INBUFF<1>
   D.M.FLG = INBUFF<6>
*
   DIV.CODE = INBUFF<8>;* T23278
*
**** INTITIALIZATION
*
   MAT FILE.VARS = ""
   MAT EDIT.COM.DRIVER = ""
   TODAY = DATE()
   UNKNOWN = "NOT ON FILE"
   SYS.FISCAL = "ICFISCAL"
   PROG.ID = @TTY:"!":CONO:"!ICF.EOM"
*
***** OPEN FILES
*
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CONTROL FILE MISSING"
      GOSUB 91000; GOTO 99000
   END
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
      ERRMSG = "WAREHOUSE FILE MISSING"
      GOSUB 91000; GOTO 99000
   END
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
      ERRMSG='INV_AUDIT_HIST FILE IS MISSING'
      GOSUB 91000; GOTO 99000
   END
   OPEN '','FNGD_AUDIT_TAG' TO FNGD_AUDIT_TAG ELSE
      ERRMSG='FNGD_AUDIT_TAG FILE IS MISSING'
      GOSUB 91000; GOTO 99000
   END
   OPEN "",INBUFF<3> TO EOM.TRANS ELSE
      ERRMSG = "YOU NEED TO RUN END OF ":D.M.FLG:" POSTING BEFORE YOU CLOSE THE ":D.M.FLG
      GOSUB 91000; GOTO 99000
   END
   OPEN "",INBUFF<4> TO POST.REJECTS ELSE
      ERRMSG = "YOU NEED TO RUN END OF ":D.M.FLG:" POSTING BEFORE YOU CLOSE THE ":D.M.FLG
      GOSUB 91000; GOTO 99000
   END
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
   OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="PMC.SCREENS FILE IS MISSING";GOTO 93000
   OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS MISSING";GOTO 93000
   OPEN "","ICF.EOM.TRANS.HIST" TO ICF.EOM.TRANS.HIST ELSE ERRMSG="ICF.EOM.TRANS.HIST FILE IS MISSING";GOTO 93000
   SYS.FISCAL = "ICFISCAL"
   MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000
   END
   MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
      MAT FISCAL.REC = ""
   END
   MATREAD SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, SALESDATES'
      GOTO 93000
   END
   READ FISCALMON FROM CONTROL, CONO:'FISCAL' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, FISCAL'
      GOTO 93000
   END
   READ OPENDATES FROM CONTROL, CONO:'OPENDATES' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, OPENDATES'
      GOTO 93000
   END
   READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL - DIVISONS"; GOTO 93000
   END
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL - DIV.SECURITY"; GOTO 93000
   END
   IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
         ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record."
         GOTO 93000
      END
   END ELSE
      POS = 1
   END
* T26685
EOD.HID = ""
IF SECURITY.REC<2> = "Y" THEN EOD.HID = '!':DIV.CODE
*  READU EOD.HIST.REC FROM EOD.HIST, CONO:'FNGD.EOM':FR.CURR.PER<1,POS> ELSE 
   READU EOD.HIST.REC FROM EOD.HIST, CONO:'FNGD.EOM':FR.CURR.PER<1,POS>:EOD.HID ELSE 
      EOD.HIST.REC = ""
   END
* T26685 ^
   IF CO.GLS # "N" THEN
      IF CO.GL.LINK<1,5> = "Y" THEN
         OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93000
      END
      OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING"; GOTO 93000
      EQV.FLG = 1
      OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
   END
   STMT.HEAD = "FINISHED GOODS"
   IN.ACCT.LEN = LEN(CO.ACCT.PIC)
   ACCT.LEN = 10 + IN.ACCT.LEN
   ECD.ACTION = 1
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'EOD.POST'
   CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION = 2
   CALL SCRN.EDIT
   IF D.M.FLG = "PERIOD" THEN
      STMT = STMT.HEAD : " END OF PERIOD CLOSING"
   END ELSE
      STMT = STMT.HEAD : " END OF DAY CLOSING"
   END
   STMT = SPACE(INT((40-LEN(STMT))/2)) : STMT
   SCV.REC(1)<1> = STMT
   SCV.REC(2)<1> = SALD.CURR<1,1>
   SCV.REC(3)<1> = SALD.CURR<1,3>
   SCV.REC(4)<1> = SALD.CURR<1,2>
   SCV.REC(5)<1> = FISCALMON[5,2]
   IF SCV.REC(5)<1> > 0 THEN
      SCV.REC(6)<1> = SALESDATES.REC(SCV.REC(5)<1>+1)<1,2>
      SCV.REC(7)<1> = OPENDATES<SCV.REC(5)<1>>
   END
   STMT = STMT.HEAD
   STMT = SPACE(INT((25-LEN(STMT))/2)) : STMT
   SCV.REC(8)<1> = STMT
   SCV.REC(9)<1> = FR.CURR.PER<1,POS>[5,2]
   SCV.REC(11)<1> = FR.CURR.DATE<1,POS>
   SCV.REC(10)<1> = SALESDATES.REC(SCV.REC(9)<1>+1)<1,2>
   SCV.REC(16)<1> = "******* C A U T I O N *******"
   BEGIN CASE
      CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
      CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> = "Y"
         SCV.REC(17)<1> = "General Ledger is LINKED     "
      CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> # "Y"
         SCV.REC(17)<1> = "General Ledger is NOT LINKED "
   END CASE
   ECD.ACTION = 3
   CALL SCRN.EDIT
   IF GUIFORM THEN
      P_TITLE = SCV.REC(1)<1>
      CALL VSI_PTITLE(P_TITLE,ERROR)
   END
   PAGE.SIZE = 4
   BEGIN.PAGE = 13
   LINE.SPACE = 1
   OLD.START.LINE = 1
   LINES = DCOUNT(EOD.HIST.REC, AM)
   LN = LINES
   IF LN < 1 THEN LN = 1
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN
      GOTO 50
   END
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 9 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(EOD.HIST.REC<N>, "D2/") "R#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 9 ; P_Y = SLN ; P_VALUE = SPACE(3) ; P_OPT = ""
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(8)
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
*
50 *
*
   IF D.M.FLG = "DAY" THEN
      ECD.NUM = 15 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = 'E' THEN
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99000
      END
   END
   READ FNGD.EOM FROM CONTROL, CONO:"FNGD.EOM" ELSE FNGD.EOM = ""
*T26486 v
   IF FNGD.EOM<8,POS> # "" THEN
      ERRMSG = "E R R O R !!! END OF ":D.M.FLG:" REPORT IS OUT OF BALANCE.  UNABLE TO CLOSE."
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
   END
*T26486 ^
* T26685 v
   IF FNGD.EOM<2,POS> = "" THEN
ERRMSG = 'YOU NEED TO RUN THE END OF ':D.M.FLG:' REPORT FOR ':DIV.CODE:' DIVISION'
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
   END
* T26685 ^
   IF FNGD.EOM<3> = "" THEN FNGD.EOM<3> = FR.CURR.DATE<1,POS>
   IF FNGD.EOM<4> = "" THEN FNGD.EOM<4> = FR.CURR.PER<1,POS>
   FR.CURR.DATE<1,POS> = FNGD.EOM<3>
   FR.CURR.PER<1,POS> = FNGD.EOM<4>
   CLEARFILE POST.REJECTS
   PRR.SEQ = 10000
*
***** MAIN PROCESSING
*
**** INV_AUDIT_HIST ****
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING RECEIPTS TRANSACTIONS"
   ECD.ACTION = 5; CALL SCRN.EDIT
   CMD='SELECT FNGD_AUDIT_TAG WITH TYPE="R"'
   UDTEXECUTE CMD CAPTURING MSG
   WRITE "INV_AUDIT_HIST" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT INAH.ID ELSE DATA=0
   WHILE DATA DO
      IF INAH.ID[1,3]#CONO THEN GOTO 3999
      MATREADU INAH.REC FROM INV_AUDIT_HIST,INAH.ID THEN
         IF INAH.GLA.DATE = '' OR (INAH.PERIOD <> FR.CURR.PER<1,POS>) THEN
            RELEASE INV_AUDIT_HIST,INAH.ID
            GOTO 3999
         END
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE THEN
            IF WHS.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
               RELEASE INV_AUDIT_HIST, INAH.ID
               GOTO 3999
            END
         END
         INAH.GLA.DATE = TODAY
         MATWRITE INAH.REC ON INV_AUDIT_HIST, INAH.ID
         DELETE FNGD_AUDIT_TAG,INAH.ID
      END ELSE
         RELEASE INV_AUDIT_HIST, INAH.ID
      END
3999 *
   REPEAT
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING ADJUSTMENT TRANSACTIONS"
   ECD.ACTION = 5; CALL SCRN.EDIT
   WRITE "INV_AUDIT_HIST" ON CONTROL, PROG.ID
   CMD='SELECT FNGD_AUDIT_TAG WITH TYPE="A"'
   UDTEXECUTE CMD CAPTURING MSG
   DATA = 1
   LOOP
      READNEXT INAH.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # INAH.ID[1,3] THEN GOTO 4999
      MATREADU INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
         IF INAH.GLA.DATE = '' OR (INAH.PERIOD <> FR.CURR.PER<1,POS>) THEN
            RELEASE INV_AUDIT_HIST, INAH.ID
            GOTO 4999
         END
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE THEN
            IF WHS.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
               RELEASE INV_AUDIT_HIST, INAH.ID
               GOTO 4999
            END
         END
         INAH.GLA.DATE = TODAY
         MATWRITE INAH.REC ON INV_AUDIT_HIST, INAH.ID
         DELETE FNGD_AUDIT_TAG,INAH.ID
      END ELSE
         RELEASE INV_AUDIT_HIST, INAH.ID
      END
4999 *
   REPEAT
7000 *
   IF CO.GLS = "N" THEN GOTO 8000
   IF CO.GL.LINK<1,5> # "Y" THEN GOTO 8000
**** EOM.TRANS (1) ****
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (1) FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   ACCOUNTS = ""; AMOUNTS = ""
   SELECT EOM.TRANS
   WRITE "EOM.TRANS (1)" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT ETR.ID ELSE DATA = 0
   WHILE DATA DO
      IF ETR.ID[1,3] # CONO THEN GOTO 7500
      MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7400
      ACCT = ETR.ID[1,ACCT.LEN]
      TYPE = FIELD(FIELD(ETR.ID,"!",3),"*",1)
      LOCATE ACCT IN ACCOUNTS,1 SETTING FND ELSE
         ACCOUNTS<FND> = ACCT
         AMOUNTS<FND> = ""
      END
      IF TYPE = "D" THEN
         AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
      END ELSE
         AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
      END
7400 *
      RELEASE EOM.TRANS, ETR.ID
7500 *
   REPEAT
   MAT GLA.REC = ""
   GLA.DATE = TODAY
   GLA.SRC = "IA"
   GLA.MON = FR.CURR.PER<1,POS>
   ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/")
   ACNT = COUNT(ACCOUNTS,AM) + (ACCOUNTS # "")
   READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 0
   WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
   FOR I = 1 TO ACNT
      IF EQV.FLG = 1 THEN
         READ ACCT FROM COA.EQUIV, ACCOUNTS<I> ELSE ACCT = ACCOUNTS<I>
      END ELSE
         ACCT = ACCOUNTS<I>
      END
      COA.ID = CONO : ACCT[11,IN.ACCT.LEN]
      MATREAD COA.REC FROM COA, COA.ID ELSE COA.DESC = UNKNOWN
      GLA.DESC = COA.DESC "L#25" : ODATE
      FOR J = 1 TO 2
         IF AMOUNTS<I,J> = "" THEN GOTO 7900
         LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
         WHILE DUMMY # "" DO REPEAT
         GLA.AMT = AMOUNTS<I,J>
         MATWRITE GLA.REC ON GLA, GLA.ID
7900 *
      NEXT J
   NEXT I
   WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
**** EOM.TRANS (2) ****
8000 *
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (2) FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   SELECT EOM.TRANS
   WRITE "EOM.TRANS (2)" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT ETR.ID ELSE DATA = 0
   WHILE DATA DO
      IF ETR.ID[1,3] # CONO THEN GOTO 8999
      MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
         RELEASE EOM.TRANS, ETR.ID; GOTO 8999
      END
      CURR.PER = FR.CURR.PER<1,POS>
      MAT ETH.REC = MAT ETR.REC
      DONE = 0
      SEQ = 0
      ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER
      LOOP UNTIL DONE = 1 DO
         SEQ = SEQ + 1
         ETH.KEY = ETH.ID:"*":SEQ
         READ CHECKIT FROM ICF.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1
      REPEAT
      MATWRITE ETH.REC ON ICF.EOM.TRANS.HIST, ETH.KEY
      DELETE EOM.TRANS, ETR.ID
8999 *
   REPEAT
   WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
   EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
* T26685 v
*  WRITE EOD.HIST.REC ON EOD.HIST,CONO:'FNGD.EOM':FR.CURR.PER<1,POS>
   WRITE EOD.HIST.REC ON EOD.HIST,CONO:'FNGD.EOM':FR.CURR.PER<1,POS>:EOD.HID
   SELECT EOM.TRANS
   READNEXT ETR.ID ELSE
      IF D.M.FLG = "PERIOD" THEN
         FNGD.EOM = ""
      END
      WRITE FNGD.EOM ON CONTROL, CONO:"FNGD.EOM"
      DELETE CONTROL, PROG.ID
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   FNGD.EOM<5> = "X"
   WRITE FNGD.EOM ON CONTROL, CONO:"FNGD.EOM"
   ERRMSG = "E R R O R !!! CANNOT LOCATE ALL TRANSACTIONS"
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   GOTO 93000
91000 *
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 *
   WRITEV ERRMSG ON CONTROL, PROG.ID,2
   ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
99000 *
   INBUFF<5> = "END"
   PROCWRITE INBUFF
99999 *
END
