*COPY>CPYLIB>COM1              
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - ICS
* SOURCE      - ICSBP
* PROGRAM     - TRANSFER.EDIT.LIST
* DATE        - 04/14/97
* BY          - EDVARD PITKA
* DESCRIPTION - This report is used for transfer edit listing
*T25740 edvard 08/14/2001 * REV12
*T26497 adelgado 04/04/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26090 cmykleb 04/11/2002 * If report is (V)iewed and not printed do not
*                            update records as printed.
*T26556 adelgado 05/22/2002 * If 'Reject', do not clear error msgs.
*C40475 cmykleb 08/01/2002 * Change pgm to get the report name from the
*                            proc and fix spacing problem.
*C40581 cmykleb 08/16/2002 * Change line count check from 59 to 57 lines.
*C40580 adelgado 08/16/2002 * Don't process those transaction that have
*                             been processed.
*T28471 lross 03/08/2005 * If for some reason TO.LOC is null only ERROR
*                          for the Product prints - No prod ID, etc.
*********************************************************************
*
*-----   INSERT EQUATES FROM CPYLIB
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>DAILY_TRANSFER
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>PMC.CPYLIB>COMPANY          ;* T26497
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*
  PAGE.NO           = 0
  EQU INV.UOM.STK TO INV.UNIT<1,2>
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*-----   OPEN THE FILES
*
  * T26497 v
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "COMPANY FILE IS MISSING"
    GOTO 93000
  END
  * T26497 ^
  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = "CATEGORY FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "INVENTORY FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","DAILY_TRANSFER" TO DAILY_TRANSFER ELSE
    ERRMSG = "DAILY_TRANSFER FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CONTROL FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = "INV.WHSE FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
    ERRMSG = "INV_RECEIPTS FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_RECEIPTS_TEMP" TO INV_RECEIPTS_TEMP ELSE
    ERRMSG = "INV_RECEIPTS_TEMP FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
    ERRMSG = "INV_RECP_WHSE FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_RECP_WHSE_TEMP" TO INV_RECP_WHSE_TEMP ELSE
    ERRMSG = "INV_RECP_WHSE_TEMP FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
    ERRMSG = "INV_SERIAL FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_SERIAL_TEMP" TO INV_SERIAL_TEMP ELSE
    ERRMSG = "INV_SERIAL_TEMP FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
    ERRMSG = "WAREHOUSE FILE IS MISSING"
    GOTO 93000
  END
  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
    ERRMSG='INV.WHSE.LOC FILE IS MISSING.'
  END
  OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
    ERRMSG='INV.WHSE.LOC.TEMP FILE IS MISSING.'
  END
  OPEN "","INV_AUDIT_HIST_TEMP" TO INV_AUDIT_HIST_TEMP ELSE
    ERRMSG = "INV_AUDIT_HIST_TEMP FILE IS MISSING"
    GOTO 93000
  END
  OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE
    ERRMSG = "INV_AUDIT_HIST FILE IS MISSING"
    GOTO 93000
  END
*
*-----   READ COMPANY NAME
*
  PROCREAD ID ELSE
    ERRMSG = " CANNOT PERFORM PROCREAD"
    GOTO 93000
  END
  CONO = ID<1>
  CONO.NAME = ""
  TRANS = ID<3>
  PERIOD = ID<4>
  DIV = ID<5>
  RPT.TYPE = ID<7>        ;* T26556
*C40475 v
*  IF RPT.TYPE = "R" THEN
*     REPORT.NAME = "TRANSFER REJECT LISTING"
*  END ELSE
*     REPORT.NAME = "TRANSFER EDIT LISTING"
*  END
  REPORT.NAME = ""
*C40475 ^
  REPORT.NUM = ID<2>
  PRINT.FLAG = ID<6> ; * T26090
  REPORT.DATE = DATE()
  HD1 = ";HD2 = "
  CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUM,REPORT.DATE,HD1,HD2)
  MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ''     ;* T26497
*
  PRINTER ON
*
*-----MAIN PROCESS
*
  LINE.CNT = 99;FIRST = 1
100 *
  DONE = 0
  LOOP
    READNEXT ID ELSE
      IF FIRST THEN
        GOSUB 10000; PRINT "No items selected"
      END
      DONE = 1
      GOTO 999999
    END
    MATREAD D.TRAN.REC FROM DAILY_TRANSFER,ID THEN
      MAT IID.REC=''
      IF RPT.TYPE # 'R' THEN D.TRAN.ERRMSG = ""         ;* T26556
      CTR = DCOUNT(D.TRAN.PROD.NO,VM)
      ERRMSG = ""
      DLINE = ID[4,99]"L#6 "
      FOR PTR = 1 TO CTR
        ERRMSG=''
        IF D.TRAN.DATE.PROSS<1,PTR> # '' THEN CONTINUE      ;* C40580
        MATREAD INV.REC FROM INVENTORY, CONO:D.TRAN.PROD.NO<1,PTR> THEN
          MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
            MAT CATG.REC = ""
          END
*COPY>ICSBP>INV.UM.CNV
          PROD = D.TRAN.PROD.NO<1,PTR>
          RECP.ID = D.TRAN.RECP<1,PTR>
          SERIAL.ID = D.TRAN.SERIAL<1,PTR>
*
* Validate warehouses
*
          FROM.WHSE = D.TRAN.FROM.WHSE
          TO.WHSE = D.TRAN.TO.WHSE<1,PTR>
  * T26497 v
          IF CO.INTR.WHSE # '' AND FROM.WHSE = CO.INTR.WHSE THEN
            D.TRAN.ERRMSG<1,PTR> = 'USING AN INTER-DIVISIONAL WHSE (':FROM.WHSE:') IS RESTRICTED'
            CONTINUE
          END
          IF CO.INTR.WHSE # '' AND TO.WHSE = CO.INTR.WHSE THEN
            D.TRAN.ERRMSG<1,PTR> = 'USING AN INTER-DIVISIONAL WHSE (':TO.WHSE:') IS RESTRICTED'
            CONTINUE
          END
  * T26497 ^
          MATREAD WHSE.REC FROM WAREHOUSE,CONO:FROM.WHSE THEN 
            MATREAD WHSE.REC FROM WAREHOUSE,CONO:TO.WHSE THEN 
              IWH.FROM.ID = CONO:PROD:"!":FROM.WHSE
              IWH.TO.ID   = CONO:PROD:"!":TO.WHSE
              ;* make sure that the second read of the INV.WHSE with
              ;* IWH.TO.ID does not override IWH.REC read with IWH.FROM.ID
              MATREADU IWH.REC FROM INV.WHSE, IWH.FROM.ID THEN
                READU CHECK.REC FROM INV.WHSE,IWH.TO.ID THEN
                  POSTING=0
                  CALL CHECK.TRANSFER.SUB (CONO,POSTING,PTR,ERRMSG)
                  IF ERRMSG # '' THEN           ;* T26556
                    D.TRAN.ERRMSG<1,PTR> = ERRMSG
                  END                           ;* T26556
                END ELSE
                  D.TRAN.ERRMSG<1,PTR> = 'CANNOT LOCATE "TO" INV.WHSE RECORD '
                  D.TRAN.ERRMSG<1,PTR> = D.TRAN.ERRMSG<1,PTR>:IWH.TO.ID
                  RELEASE INV.WHSE,IWH.TO.ID
                END
              END ELSE
                D.TRAN.ERRMSG<1,PTR> = 'CANNOT LOCATE "FROM" INV.WHSE RECORD '
                D.TRAN.ERRMSG<1,PTR> = D.TRAN.ERRMSG<1,PTR>:IWH.FROM.ID
                RELEASE INV.WHSE,IWH.FROM.ID
              END
            END ELSE
              D.TRAN.ERRMSG<1,PTR> = 'CANNOT LOCATE "TO" WHSE ':TO.WHSE
            END
          END ELSE
            D.TRAN.ERRMSG<1,PTR> = 'CANNOT LOCATE "FROM" WHSE ':FROM.WHSE
          END
          IF PTR = 1 THEN
*C40581 v
*                 IF LINE.CNT > 59 THEN GOSUB 10000
            IF LINE.CNT > 57 THEN GOSUB 10000
*C40581 ^
            DLINE = ID[4,99]"L#15 ":D.TRAN.REASON.DESC"L#30 ":OCONV(D.TRAN.DATE.ENTER,"D2/")"R#8"
            PRINT DLINE; LINE.CNT = LINE.CNT + 1
          END
          GOSUB 1000
        END ELSE
          D.TRAN.ERRMSG<1,PTR> = "CANNOT LOCATE INVENTORY # ":D.TRAN.PROD.NO<1,PTR>   
          MAT INV.REC = ""
        END
      NEXT PTR
*T26090 v
*        IF D.TRAN.PRT.DATE = "" THEN
      IF D.TRAN.PRT.DATE = "" AND PRINT.FLAG # "V" THEN
*T26090 ^
        MATREADU D.TRAN.REC FROM DAILY_TRANSFER, ID ELSE
          RELEASE DAILY_TRANSFER, ID
          GOTO 100
        END
        D.TRAN.PRT.DATE = DATE()
      END
      MATWRITE D.TRAN.REC ON DAILY_TRANSFER, ID
    END
  UNTIL (DONE) DO REPEAT
*
*----- PRINT LINE
*
1000 *
*C40581 v
*  IF LINE.CNT > 59 THEN GOSUB 10000
  IF LINE.CNT > 57 THEN GOSUB 10000
*C40581 ^
  DLINE = D.TRAN.PROD.NO<1,PTR>"L#15 ":INV.FULL.DESC"L#30":SPACE(10)
  DLINE = DLINE:D.TRAN.FROM.WHSE"L#4 ":D.TRAN.TO.WHSE<1,PTR>"L#4 "
  CALL DESC.REFORMAT(D.TRAN.ERRMSG<1,PTR>,24,NEW.ERRMSG)
  ECTR = DCOUNT(NEW.ERRMSG,VM)
  LCTR = DCOUNT(D.TRAN.FROM.LOC<1,PTR>,SVM)
  IF LCTR < 1 THEN LCTR = 1 ;*T28471
  FOR LL = 1 TO LCTR
    IF LL = 1 THEN
      DLINE = DLINE:D.TRAN.FROM.LOC<1,PTR,LL>"L#4 "
    END ELSE
      DLINE = SPACE(66):D.TRAN.FROM.LOC<1,PTR,LL>"L#4 "
    END
    DLINE = DLINE:D.TRAN.TO.LOC<1,PTR,LL>"L#4 "
    IF D.TRAN.SERIAL<1,PTR,LL> # "" THEN
      DLINE = DLINE:D.TRAN.SERIAL<1,PTR,LL>"L#15 "
    END ELSE
      DLINE = DLINE:D.TRAN.RECP<1,PTR,LL>"L#15 "
    END
    QTY = INT(((D.TRAN.QTY<1,PTR,LL>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
    DLINE = DLINE:OCONV(QTY,ICR.CNV)"R#11 "
    DLINE = DLINE:INV.UOM.STK"L#3 "
*C40475 v
*     DLINE = DLINE:NEW.ERRMSG<1,LL>"L#24 "
    DLINE = DLINE:NEW.ERRMSG<1,LL>"L#24"
*C40475 ^
*C40581 v
*     IF LINE.CNT > 59 THEN GOSUB 10000
    IF LINE.CNT > 57 THEN GOSUB 10000
*C40581 ^
    PRINT DLINE
    LINE.CNT = LINE.CNT + 1
  NEXT LL
  IF ECTR > LCTR THEN
    FOR EE = LL TO ECTR
*C40475 v
*        DLINE = SPACE(108):NEW.ERRMSG<1,EE>"L#24 "
      DLINE = SPACE(108):NEW.ERRMSG<1,EE>"L#24"
*C40475 ^
*C40581 v
*        IF LINE.CNT > 59 THEN GOSUB 10000
      IF LINE.CNT > 57 THEN GOSUB 10000
*C40581 ^ 
      PRINT DLINE
      LINE.CNT = LINE.CNT + 1
    NEXT EE
  END
  PRINT
  LINE.CNT = LINE.CNT + 1
  FIRST = 0
  RETURN
*
*----HEADINGS
*
10000 *
  HD3 = "DIVISION : ":DIV:SPACE(50):"FOR PERIOD : ":PERIOD
  HD4A = "TRANSFER #      TRANSFER DESCRIPTION           TRANSFER FROM  TO  FROM  TO"
  HD4 = "PRODUCT NUMBER  PRODUCT DESCRIPTION              DATE   WHSE WHSE LOC  LOC  SERIAL NUMBER     QUANTITY "
  HD4 = HD4:" UOM      NO POST STATUS"
  HD5 = "--------------- ------------------------------ -------- ---- ---- ---- ---- --------------- -----------"
  HD5 = HD5:" --- ------------------------"
  PRINT CHAR(12)
  PAGE.NO = PAGE.NO + 1
  PRINT HD1:PAGE.NO
  PRINT HD2
  PRINT HD3
  PRINT
  PRINT HD4A
  PRINT HD4
  PRINT HD5
  LINE.CNT = 7
  RETURN
*
*-----   CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 *
  ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
999999 *
  PRINTER OFF
END
