      SUBROUTINE FNGD.PALLET.INQ(CONO,CURR.LOC,MIN.QTY,JOB.NO,R.DATE,FIFO.NO)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.INQ
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - FNGD.PALLET.INQ
* DATE        - 01/31/84
* DESCRIPTION - This program is used to display all Roll or Skid for
*              a given location.
* T19600   - MOD TO LOAD ONLY R.S.ID DATA FROM LOCS HAVING R.S.IDS
*               LMR 8/30/95.
* CSF 24013   - MOD TO DISPLAY ROLL/SKID DATA BASED ON IWLO.ORIG.WT
*               VALUES INSTEAD OF ROLL.SKID I.D'S (LMR 10/16/95).
*T21257 rick 11/22/1996 * DISPLAY PROB WHERE LOC FOR A ROLL/SKID DO NOT
*                         CORRECTLY DISPLAY SHOWS LAST RS FROM PREV LOC
*                         AND ALL BUT LAST RS FROM CURRENT LOC .. 1 OFF
*                         FOR INDEX FOR DISPLAY
*T21177 diane 11/06/1996 * REV11 UPG
*ENDDOC
*********************************************************************
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
      DIM S.IWLO.REC(20)
      MAT S.IWLO.REC = MAT IWLO.REC
      S.IWH.LOC = IWH.LOC
*
      PAGE.SIZE = 10
      BEGIN.PAGE = 8
      LINE.SPACE = 1
      ESN = ECD.SCRN.NO
*
      IWH.ID = CONO:SCV.REC(1)<ESN>:"!":SCV.REC(3)<ESN>:"!"
      BEGIN CASE
         CASE INV.M.LINE = "FNGD"
            HD = "P A L L E T"
            LHD = "Pallet"
            OCNV = "MD0"; ODVD = 1000
            PNUM = 31
            PJHD = "Job"
         CASE INV.PAP.TYPE = "SHEET"
            HD = "S K I D"
            LHD = "Skid"
            OCNV = "MD2"; ODVD = 10
            PNUM = 32
            PJHD = "Po"
         CASE  1
            HD = "R O L L"
            LHD = "Roll"
            OCNV = "MD2"; ODVD = 10
            PNUM = 32
            PJHD = "Po"
      END CASE
      HD = HD:"   I N Q U I R Y"
      LHD = LHD:" Number"
      SCV.REC(5)<ESN> = SPACE(INT((50-LEN(HD))/2)):HD
      SCV.REC(8)<ESN> = PJHD
      SCV.REC(11)<ESN> = LHD
      SCV.REC(12)<ESN> = "Org Qty ":INV.UNIT<1,3>
      SCV.REC(13)<ESN> = "Cur Qty ":INV.UNIT<1,3>
      IF INV.UNIT<1,2> = INV.UNIT<1,3> THEN
         SCV.REC(14)<ESN> = "Org Diam"
         SCV.REC(15)<ESN> = "Cur Diam"
         QPTR = 1
      END ELSE
         SCV.REC(14)<ESN> = "Org Qty ":INV.UNIT<1,2>
         SCV.REC(15)<ESN> = "Cur Qty ":INV.UNIT<1,2>
         QPTR = 2
      END
*
      MIN.QTY = MIN.QTY + 0
*T19600 v
      FOR I = DCOUNT(IWH.LOC,VM) TO 1 STEP -1
         MATREAD IWLO.REC FROM INV.WHSE.LOC, IWH.ID:IWH.LOC<1,I> ELSE MAT IWLO.REC = ''
         IF IWLO.R.S.ID = '' AND INV.M.LINE # 'FNGD' THEN DEL IWH.LOC<1,I>
      NEXT I
      MATREAD IWLO.REC FROM INV.WHSE.LOC, IWH.ID:IWH.LOC<1,1> ELSE MAT IWLO.REC = ''
*T19600 ^
      IF CURR.LOC = "" THEN
         LOCNO = "ALL"; LPOS = 0
      END ELSE
*T19600 v
         PTR = 1
         LOOP
            LOCATE CURR.LOC IN IWH.LOC<1>,PTR SETTING LPOS THEN
               IF LEN(CURR.LOC) # LEN(IWH.LOC<1,LPOS>) THEN
                  PTR = LPOS+1
               END ELSE
                  PTR = 0
                  LOCNO = CURR.LOC
               END
            END ELSE
               LOCNO = "ALL"; LPOS = 0; PTR = 0
            END
         WHILE PTR DO REPEAT
*T19600 ^
      END
      IF JOB.NO = "" THEN
         JOBNO = "ALL"
      END ELSE
         JOBNO = JOB.NO
      END
      IF R.DATE = "" THEN
         RDATE = "ALL"
      END ELSE
         RDATE = R.DATE
      END
      SCV.REC(4)<ESN> = LOCNO
      SCV.REC(6)<ESN> = MIN.QTY
      SCV.REC(7)<ESN> = RDATE
      SCV.REC(9)<ESN> = JOBNO
      LVALDAT = "ALL"
      LHMSG = "Location - ALL"
      LCNT = DCOUNT(IWH.LOC,VM)
      L = 1
      FOR I = 1 TO LCNT
         LVALDAT = LVALDAT : "," : IWH.LOC<1,I>
         IF LEN(LHMSG<1,1,L>) > 50 THEN
            L = L + 1
            LHMSG<1,1,L> = "Location - ": IWH.LOC<1,I>
         END ELSE
            LHMSG<1,1,L> = LHMSG<1,1,L> :", ":IWH.LOC<1,I>
         END
      NEXT I
      L = 1
      IF LPOS # L THEN
         MATREAD IWLO.REC FROM INV.WHSE.LOC, IWH.ID:IWH.LOC<1,L> ELSE
            MAT IWLO.REC = ""
         END
      END
*CSF 24013 v
*     RCNT = DCOUNT(IWLO.R.S.ID,VM)
      RCNT = DCOUNT(IWLO.ORIG.WT,VM)
*CSF 24013 ^
      LOC.IDX = 0; LOC.IDX<2> = RCNT
      LOC.NOS = L
      R.S.NO = IWLO.R.S.ID<1,1>
      ORIG.WT = IWLO.ORIG.WT<1,1> / ODVD
      CURR.WT = IWLO.CURR.WT<1,1> / ODVD
      LA.USED = IWLO.LA.USED<1,1>
      FI.NO = IWLO.FI.NO<1,1> + 0
      IF QPTR = 1 THEN
         ORIG.QTY = IWLO.ORIG.DIAM<1,1>
         CURR.QTY = IWLO.CURR.DIAM<1,1>
         FOR R = 2 TO RCNT
            P = R
            GOSUB 1100
         NEXT R
      END ELSE
         ORIG.QTY = IWLO.ORIG.SHEET<1,1>
         CURR.QTY = IWLO.CURR.SHEET<1,1>
         FOR R = 2 TO RCNT
            P = R
            GOSUB 1200
         NEXT R
      END
      FOR L = 2 TO LCNT
         MATREAD IWLO.REC FROM INV.WHSE.LOC, IWH.ID:IWH.LOC<1,L> THEN
            PCNT = DCOUNT(LOC.NOS,AM)
*CSF 24013v
*           RCNT = DCOUNT(IWLO.R.S.ID,VM)
            RCNT = DCOUNT(IWLO.ORIG.WT,VM)
*CSF 24013 ^
            LOC.IDX<L+1> = LOC.IDX<L> + RCNT
            IF QPTR = 1 THEN
               FOR R = 1 TO RCNT
                  P = PCNT + R
                  GOSUB 1100
               NEXT R
            END ELSE
               FOR R = 1 TO RCNT
                  P = PCNT + R
                  GOSUB 1200
               NEXT R
            END
         END
      NEXT L
      ECD.ACTION = 3; CALL SCRN.EDIT
IF GUIFORM THEN
      P_TITLE = SCV.REC(5)<ESN>
CALL VSI_PTITLE(P_TITLE,ERROR)
END
      OLINES = DCOUNT(LOC.NOS,AM)
*
      LLOC = LPOS; GOSUB 1800
      LOOP
         ECD.NUM = PNUM; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         ACTION = ECD.RET.VALUE
         BEGIN CASE
            CASE ACTION = "END" OR ACTION = "E" OR ACTION = ""
               ACTION = ""
            CASE ACTION = "A"
               CHANGED = 0
               IF LCNT > 1 THEN GOSUB 1010
               GOSUB 1020
               IF IWLO.FI.NO # "" AND FIFO.NO = "ALL" THEN
                  GOSUB 1030
                  GOSUB 1040
               END
               IF CHANGED THEN GOSUB 1800
            CASE ACTION = "L" AND LCNT < 2
               ERRMSG = "There is only one location for this warehouse"
               GOSUB 91000
            CASE ACTION = "L"
               CHANGED = 0
               GOSUB 1010
               IF CHANGED THEN GOSUB 1800
            CASE ACTION = "Q"
               CHANGED = 0
               GOSUB 1020
               IF CHANGED THEN GOSUB 1800
            CASE ACTION = "D"
               BEGIN CASE
                  CASE FIFO.NO # "ALL"
                     ERRMSG = "The criteria for this selection is already set"
                     GOSUB 91000
                  CASE IWLO.FI.NO = ""
                     ERRMSG = "Actual Costing is not utilized for this product"
                     GOSUB 91000
                  CASE 1
                     CHANGED = 0
                     GOSUB 1030
                     IF CHANGED THEN GOSUB 1800
               END CASE
            CASE ACTION = "J" OR ACTION = "P"
               BEGIN CASE
                  CASE FIFO.NO # "ALL"
                     ERRMSG = "The criteria for this selection is already set"
                     GOSUB 91000
                  CASE IWLO.FI.NO = ""
                     ERRMSG = "Actual Costing is not utilized for this product"
                     GOSUB 91000
                  CASE 1
                     CHANGED = 0
                     GOSUB 1040
                     IF CHANGED THEN GOSUB 1800
               END CASE
            CASE ACTION = "S" OR ACTION = "SF"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 1900
            CASE ACTION = "SR"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 1900
            CASE ACTION = "ST"
               LN = 1
               GOSUB 1900
            CASE ACTION = "SB"
               LN = LINES
               GOSUB 1900
            CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
               LN.NO = ACTION[2,99] + 0
               IF LN.NO < 1 OR LN.NO > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  LN = LN.NO
                  GOSUB 1900
               END
            CASE 1
               ERRMSG = "Invalid entry, please re-enter"
               GOSUB 91000
         END CASE
      WHILE ACTION # "" DO REPEAT
      GOTO 99999
*
*---- Location
1010*
      ECD.VALDAT = LVALDAT; ECD.HMSG = LHMSG
      ECD.NUM = 4;  ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE ECD.RET.VALUE = "ALL"
            LLOC = 0
            IF ECD.RET.VALUE # LOCNO THEN
               CHANGED = 1
               LOCNO = "ALL"
            END
         CASE ECD.RET.VALUE = "N" AND LCNT > 1
            CHANGED = 1
            LLOC = LLOC + 1
            IF LLOC > LCNT THEN
               LLOC = 1
            END
            LOCNO = IWH.LOC<1,LLOC>
            SCV.REC(ECD.NUM)<ESN> = LOCNO
            ECD.ACTION = 5; CALL SCRN.EDIT
         CASE 1
*T19600 v
            PTR = 1
            LOOP
              LOCATE ECD.RET.VALUE IN IWH.LOC<1>,PTR SETTING LLOC THEN
                IF LEN(ECD.RET.VALUE) # LEN(IWH.LOC<1,LLOC>) THEN
                  PTR = LLOC + 1
                END ELSE
                  IF ECD.RET.VALUE # LOCNO OR LEN(ECD.RET.VALUE) # LEN(LOCNO) THEN
                     CHANGED = 1
                     LOCNO = ECD.RET.VALUE
                  END
                  PTR = 0
                END
              END ELSE
                 ERRMSG = "There are no rolls in location # ":ECD.RET.VALUE
                 GOSUB 91000
                 PTR = 0
              END
            WHILE PTR DO REPEAT
*T19600 ^
      END CASE
      RETURN
*
*---- Quantity
1020*
      ECD.SCALER = ICR.SCAL
      ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE ECD.RET.VALUE < 1
            IF MIN.QTY # 0 THEN
               CHANGED = 1
               MIN.QTY = 0
            END
         CASE MIN.QTY # ECD.RET.VALUE
            CHANGED = 1
            MIN.QTY = ECD.RET.VALUE
      END CASE
      RETURN
*
*---- Receipt date
1030*
      ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE RDATE # ECD.RET.VALUE
            CHANGED = 3
            RDATE = ECD.RET.VALUE
      END CASE
      RETURN
*
*---- Job / Po
1040*
      ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE JOBNO # ECD.RET.VALUE
            CHANGED = 4
            JOBNO = ECD.RET.VALUE
      END CASE
      RETURN
1100*
      LOC.NOS<P> = L
      R.S.NO<P> = IWLO.R.S.ID<1,R>
      ORIG.WT<P> = IWLO.ORIG.WT<1,R> / ODVD
      CURR.WT<P> = IWLO.CURR.WT<1,R> / ODVD
      ORIG.QTY<P> = IWLO.ORIG.DIAM<1,R>
      CURR.QTY<P> = IWLO.CURR.DIAM<1,R>
      LA.USED<P> = IWLO.LA.USED<1,R>
      FI.NO<P> = IWLO.FI.NO<1,R> + 0
      RETURN
1200*
      LOC.NOS<P> = L
      R.S.NO<P> = IWLO.R.S.ID<1,R>
      ORIG.WT<P> = IWLO.ORIG.WT<1,R> / ODVD
      CURR.WT<P> = IWLO.CURR.WT<1,R> / ODVD
      ORIG.QTY<P> = IWLO.ORIG.SHEET<1,R>
      CURR.QTY<P> = IWLO.CURR.SHEET<1,R>
      LA.USED<P> = IWLO.LA.USED<1,R>
      FI.NO<P> = IWLO.FI.NO<1,R> + 0
      RETURN
*
*---- Selection
1800*
      IF LLOC THEN
         GOSUB 1820
         IF MIN.QTY > 0 THEN
            ON QPTR GOSUB 1835,1845
         END
         BEGIN CASE
            CASE FIFO.NO # "ALL"
               GOSUB 1855
            CASE RDATE # "ALL" OR JOBNO # "ALL"
               GOSUB 1865
         END CASE
      END ELSE
         GOSUB 1810
         BEGIN CASE
            CASE MIN.QTY > 0
               ON QPTR GOSUB 1830,1840
               BEGIN CASE
                  CASE FIFO.NO # "ALL"
                     GOSUB 1855
                  CASE RDATE # "ALL" OR JOBNO # "ALL"
                     GOSUB 1865
               END CASE
            CASE FIFO.NO # "ALL"
               GOSUB 1850
            CASE RDATE # "ALL" OR JOBNO # "ALL"
               GOSUB 1860
         END CASE
      END
      IF LINES = OLINES THEN
         SCV.REC(21)<ESN>=OCONV(INT(SUM(ORIG.WT)+.5),OCNV)
         SCV.REC(22)<ESN>=OCONV(INT(SUM(CURR.WT)+.5),OCNV)
         SCV.REC(23)<ESN>=OCONV(INT(SUM(ORIG.QTY)+.5),ICR.CNV1)
         SCV.REC(24)<ESN>=OCONV(INT(SUM(CURR.QTY)+.5),ICR.CNV1)
         FOR ECD.NUM = 21 TO 24
            ECD.ACTION = 5; CALL SCRN.EDIT
         NEXT ECD.NUM
      END ELSE
         SCV.REC(21)<ESN> = 0
         SCV.REC(22)<ESN> = 0
         SCV.REC(23)<ESN> = 0
         SCV.REC(24)<ESN> = 0
         FOR I = 1 TO LINES
            LP = INDX<I>
            SCV.REC(21)<ESN>=SCV.REC(21)<ESN>+ORIG.WT<LP>
            SCV.REC(22)<ESN>=SCV.REC(22)<ESN>+CURR.WT<LP>
            SCV.REC(23)<ESN>=SCV.REC(23)<ESN>+ORIG.QTY<LP>
            SCV.REC(24)<ESN>=SCV.REC(24)<ESN>+CURR.QTY<LP>
         NEXT I
         FOR ECD.NUM = 21 TO 22
            SCV.REC(ECD.NUM)<ESN>=OCONV(INT(SCV.REC(ECD.NUM)<ESN>+.5),OCNV)
            ECD.ACTION = 5; CALL SCRN.EDIT
         NEXT ECD.NUM
         FOR ECD.NUM = 23 TO 24
            SCV.REC(ECD.NUM)<ESN>=OCONV(INT(SCV.REC(ECD.NUM)<ESN>+.5),ICR.CNV1)
            ECD.ACTION = 5; CALL SCRN.EDIT
         NEXT ECD.NUM
      END
      ECD.NUM = 30
      SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.99) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      OLD.START.LINE = 0; LN = 1; GOSUB 1900
      RETURN
*
*---- All Pallets
1810*
      INDX = ""; LINES = OLINES
      FOR I = 1 TO LINES
         INDX<I> = I
      NEXT I
      RETURN
*
*---- Pallets for a location
1820*
*     INDX = ""; LP = LOC.IDX<LLOC> + 1 ;*T21257
      INDX = ""; LP = LOC.IDX<LLOC> ;*T21257
      LINES = LOC.IDX<LLOC+1> - LOC.IDX<LLOC>
      FOR I = 1 TO LINES
         LP = LP + 1
         INDX<I> = LP
      NEXT LL
      RETURN
*
*---- Pallets with minimum quantity
1830*
      INDX = ""; LINES = 0
      FOR LP = 1 TO OLINES
         IF CURR.WT<LP> >= MIN.QTY THEN
            LINES = LINES + 1
            INDX<LINES> = LP
         END
      NEXT LP
      RETURN
1835*
      FOR I = LINES TO 1 STEP -1
         IF CURR.WT<INDX<I>> < MIN.QTY THEN
            INDX = DELETE(INDX,I,0,0)
         END
      NEXT I
      LINES = DCOUNT(INDX,AM)
      RETURN
1840*
      INDX = ""; LINES = 0
      FOR LP = 1 TO OLINES
         IF CURR.QTY<LP> >= MIN.QTY THEN
            LINES = LINES + 1
            INDX<LINES> = LP
         END
      NEXT LP
      RETURN
1845*
      FOR I = LINES TO 1 STEP -1
         IF CURR.QTY<INDX<I>> < MIN.QTY THEN
            INDX = DELETE(INDX,I,0,0)
         END
      NEXT I
      LINES = DCOUNT(INDX,AM)
      RETURN
1850*
      INDX = ""; LINES = 0
      FOR LP = 1 TO OLINES
         IF FI.NO<LP> = FIFO.NO THEN
            LINES = LINES + 1
            INDX<LINES> = LP
         END
      NEXT LP
      RETURN
1855*
      FOR I = LINES TO 1 STEP -1
         IF FI.NO<INDX<I>> # FIFO.NO THEN
            INDX = DELETE(INDX,I,0,0)
         END
      NEXT I
      LINES = DCOUNT(INDX,AM)
      RETURN
1860*
      INDX = ""; LINES = 0
      BEGIN CASE
         CASE RDATE # "ALL" AND JOBNO # "ALL"
            FOR LP = 1 TO OLINES
               BEGIN CASE
                  CASE IWH.RECV.FI<1,FI.NO<LP>> < RDATE
                  CASE IWH.PO.NO.FI<1,FI.NO<LP>> # JOBNO
                  CASE 1
                     LINES = LINES + 1
                     INDX<LINES> = LP
               END CASE
            NEXT LP
         CASE RDATE # "ALL"
            FOR LP = 1 TO OLINES
               IF IWH.RECV.FI<1,FI.NO<LP>> >= RDATE THEN
                  LINES = LINES + 1
                  INDX<LINES> = LP
               END
            NEXT LP
         CASE JOBNO # "ALL"
            FOR LP = 1 TO OLINES
               IF IWH.PO.NO.FI<1,FI.NO<LP>> = JOBNO THEN
                  LINES = LINES + 1
                  INDX<LINES> = LP
               END
            NEXT LP
      END CASE
      RETURN
1865*
      BEGIN CASE
         CASE RDATE # "ALL" AND JOBNO # "ALL"
            FOR I = LINES TO 1 STEP -1
               LP = INDX<I>
               BEGIN CASE
                  CASE IWH.RECV.FI<1,FI.NO<LP>> < RDATE
                     INDX = DELETE(INDX,I,0,0)
                  CASE IWH.PO.NO.FI<1,FI.NO<LP>> # JOBNO
                     INDX = DELETE(INDX,I,0,0)
               END CASE
            NEXT I
         CASE RDATE # "ALL"
            FOR I = LINES TO 1 STEP -1
               IF IWH.RECV.FI<1,FI.NO<INDX<I>>> < RDATE THEN
                  INDX = DELETE(INDX,I,0,0)
               END
            NEXT I
         CASE JOBNO # "ALL"
            FOR I = LINES TO 1 STEP -1
               IF IWH.PO.NO.FI<1,FI.NO<INDX<I>>> # JOBNO THEN
                  INDX = DELETE(INDX,I,0,0)
               END
            NEXT I
      END CASE
      LINES = DCOUNT(INDX,AM)
      RETURN
1900*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      IF START.LINE = OLD.START.LINE THEN GOTO 1909
      OLD.START.LINE = START.LINE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      ECD.NUM = 29
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.99) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
         P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:IWH.LOC<1,LOC.NOS<INDX<N>>> "L#4"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*        PRINT @(9,SLN) : R.S.NO<INDX<N>>:"x":FI.NO<INDX<N>> "L#14" :
         P_X  = 9 ; P_Y = SLN ; P_VALUE = R.S.NO<INDX<N>> "L#14" ; P_OPT = ""
         P_X  := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(ORIG.WT<INDX<N>>),OCNV) "R#11"
         P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(CURR.WT<INDX<N>>),OCNV) "R#11"
         P_X  := AM:48 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(ORIG.QTY<INDX<N>>,ICR.CNV1) "R#11"
         P_X  := AM:60 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CURR.QTY<INDX<N>>,ICR.CNV1) "R#11"
         P_X  := AM:72 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LA.USED<INDX<N>>,"D2/") "L#8"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
1909*
      RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*       PRINT @(0,23) : ERRMSG : CL :
*       INPUT REPLY,1 :
*       PRINT @(0,23) : CL :
*       RETURN
99999*
      ECD.ACTION=99;CALL SCRN.EDIT
      MAT IWLO.REC = MAT S.IWLO.REC
      RETURN
   END
