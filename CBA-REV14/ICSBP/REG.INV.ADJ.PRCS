*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - REG.INV.ADJ.PRCS
* DATE        - 11/28/83
* DESCRIPTION - This program process all regular inventory
* adjustments
*T25740 edvard 07/19/2001 *  REV12
*
*T26767 epitka 07/24/2002 * CHANGE OF ARGUMENTS FOR INV.AVG.COST.MAINT
*T27380 lross 04/21/2003 * Clear PHS.NO.POST prior to posting.
*T27990 lross 03/11/2004 * Mods for ICS.IWH.SUB (ERRMSG)
*T28096 lross 04/28/2004 * INV.COST.WT default left out of REV12.
*ENDDOC
*********************************************************************
*
*                                
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>ICS.CPYLIB>PHYSICAL.INV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>ICS.ID
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*                                                           
DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)        
DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
*                                                           
MAT SYSCOM.REC=""
SYS.TYPE = 2                  
*
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG='INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG='INV.WHSE FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.HIST' TO INV.HIST ELSE
  ERRMSG='INV.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERRMSG='INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
END
OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE
  ERRMSG='PHYSICAL.INV FILE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
END
OPEN '','JOB.STATS' TO JOB.STATS ELSE
  ERRMSG='JOB.STATS FILE IS MISSING';GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG='JOB FILE IS MISSING';GOTO 93000
END
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
  ERRMSG='INV_AUDIT_HIST FILE IS MISSING';GOTO 93000
END
OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
  ERRMSG='INV_AUDIT_TAG FILE IS MISSING';GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
END
*
MAT EDIT.COM="" ; TYP=0 ; CALL EDIT.SUB
MAT ORG.IWH.REC=''
OPEN.FLAG=1
*
PROCREAD LINE ELSE ERRMSG='MUST RUN FROM A PROC'; GOTO 93000
CONO=LINE<1>
*CO.NAME=LINE<2>
IF CONO='END' THEN GOTO 99999
*
GEN.DIV = '00';GEN.DEPT = '00';GEN.CCTR = '000' 
MAT INV.CNV.REC=""
ICR.DV1=10
ICR.MT1=1
ICR.DV2=1
ICR.MT2=100
GOSUB GET.PERIOD
IF VALUE="END" THEN
  ERRMSG="No receipts posted."
  GOSUB 91000
  GOTO 99999
END
DATA=1
LOOP
  READNEXT PHS.ID ELSE DATA=0
WHILE DATA DO
  MATREADU PHS.INV.REC FROM PHYSICAL.INV,PHS.ID THEN
    PHS.NO.POST = '' ;*T27380
    WHSE=FIELD(PHS.ID,'!',3)
    MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE ELSE 
      MAT WHSE.REC = ""                                 
    END                                                 
    IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV              
    DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)           
    BEGIN CASE                                                
      CASE DIV.POS<1,1>=''                                    
        DIV.POS=DIV.POS<1,2>                                  
        CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")  
        IF CUR.PERIOD<1,1>='' THEN                            
          CUR.PERIOD=CUR.PERIOD<1,2>                          
        END ELSE                                              
          IF CUR.PERIOD<1,1>='-2' OR CUR.PERIOD<1,1>='-1' THEN

            PHS.NO.POST=CUR.PERIOD<1,2>                       
          END                                                 
        END                                                   
      CASE DIV.POS<1,1>='-1'                                  
        PHS.NO.POST=DIV.POS<1,2>                              
      CASE DIV.POS<1,1>='-2'                                  
        PHS.NO.POST=DIV.POS<1,2>                              
    END CASE                                                  
    IF PHS.NO.POST='' THEN                                    
      DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR           
      LOC=FIELD(PHS.ID,'!',4)
      CNT=DCOUNT(PHS.INV.PROD,VM)
      FOR P=CNT TO 1 STEP -1
        MAT INAH.REC=''
        INAH.PROD=PHS.INV.PROD<1,P>
        INAH.WHSE=WHSE
        INAH.LOC=LOC
        INAH.DATE=PHS.DATE.ENT<1,P>
        INAH.DV.DP.CC=DV.DP.CC
        INAH.TYPE='A'
        INAH.SRC='IA'
        INAH.CUR.QTY=PHS.CUR.QTY<1,P>
        INAH.NEW.QTY=PHS.NEW.QTY<1,P>
        INAH.QTY=INAH.NEW.QTY-INAH.CUR.QTY
        INAH.PERIOD=PERIOD
        PO.VEND.NO=PHS.OPER.ID<1,P>
        PO.CODE=PHS.ADJ.CODE<1,P>
        INAH.ADJ.CODE=PO.CODE
        INAH.JOB=PO.VEND.NO
        PRICE=PHS.UN.COST<1,P>
        PHS.NO.POST<1,P>=''
        IF PHS.JOB # '' THEN
          MATREADU JSTAT.REC FROM JOB.STATS,CONO:PHS.JOB ELSE MAT JSTAT.REC=''
          MATREADU JOB.REC FROM JOB, CONO : PHS.JOB ELSE              
            MAT JOB.REC = ""                                          
            PHS.NO.POST<1,P> = "JOB ":PHS.JOB:" RECORD IS NOT ON FILE"
            GOSUB RELEASE.SUB
            CONTINUE
          END                                                         
          FNGD.CNT=DCOUNT(JSTAT.SHP.PROD,VM)
          FNGD=0
          FOR FG=1 TO FNGD.CNT UNTIL FNGD
            BEGIN CASE
              CASE PHS.INV.PROD<1,P> # JSTAT.SHP.PROD<1,FG>
              CASE WHSE # JSTAT.SHP.WHSE<1,FG>
              CASE LOC # JSTAT.SHP.LOC<1,FG>
              CASE 1
                FNGD=FG
                TR.CNT=DCOUNT(JSTAT.SHP.TRANS<1,FG>,SVM)
                JSTAT.SHP.TRANS<1,FG,TR.CNT+1>="ADJ"
                REC.QTY=INAH.CUR.QTY-INAH.NEW.QTY
                IF (JSTAT.SHP.QTY<1,FNGD>-REC.QTY)<0 THEN
                  PHS.NO.POST<1,P>='CAN NOT ADJUST QUANTITY ON JOB STATS'
                  GOSUB RELEASE.SUB
                  CONTINUE
                END ELSE
                  JSTAT.SHP.QTY<1,FNGD>=JSTAT.SHP.QTY<1,FNGD>-REC.QTY
                  JOB.QTY<1,2>=JOB.QTY<1,2>-INT((((REC.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2)/ICR.MT2)
                END
            END CASE
          NEXT FG
          IF FNGD # 0 THEN
            IF JSTAT.SHP.QTY<1,FNGD>=0 THEN
              JSTAT.SHP.PROD=DELETE(JSTAT.SHP.PROD,1,FNGD,0)
              JSTAT.SHP.WHSE=DELETE(JSTAT.SHP.WHSE,1,FNGD,0)
              JSTAT.SHP.LOC=DELETE(JSTAT.SHP.LOC,1,FNGD,0)
              JSTAT.SHP.R.S.ID=DELETE(JSTAT.SHP.R.S.ID,1,FNGD,0)
              JSTAT.SHP.QTY=DELETE(JSTAT.SHP.QTY,1,FNGD,0)
              JSTAT.SHP.MLTP=DELETE(JSTAT.SHP.MLTP,1,FNGD,0)
              JSTAT.SHP.PCS=DELETE(JSTAT.SHP.PCS,1,FNGD,0)
              JSTAT.SHP.LOC.DESC=DELETE(JSTAT.SHP.LOC.DESC,1,FNGD,0)
              JSTAT.SHP.TRANS=DELETE(JSTAT.SHP.TRANS,1,FNGD,0)
            END
          END ELSE
            PHS.NO.POST<1,P>='CAN NOT ADJUST QUANTITY ON JOB STATS'
            GOSUB RELEASE.SUB
            CONTINUE
          END
        END
        MATREAD INV.REC FROM INVENTORY,CONO:INAH.PROD THEN
          CATG.ID=CONO:INV.LINE
          MATREAD CATG.REC FROM CATEGORY,CATG.ID THEN           
            IF CATG.COST.TYPE='AC' THEN                         
              DEPL.METHOD='AC'                                  
            END ELSE                                            
              DEPL.METHOD='FI'                                  
            END                                                 
          END ELSE                                              
            PHS.NO.POST<1,P>='CATEGORY ':INV.LINE:' IS MISSING.'
            CONTINUE                                            
          END                                                   
        END ELSE
          PHS.NO.POST<1,P>='INVENTORY # ':INAH.PROD:' IS NOT ON LINE'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        IF INV.COST.WT+0 = 0 THEN INV.COST.WT = 100 ;*T28096
        IWH.ID=CONO:INAH.PROD:'!':INAH.WHSE
        IH.ID=CONO:INAH.PROD
        MATREADU IWH.REC FROM INV.WHSE,IWH.ID THEN
          MAT ORG.IWH.REC = MAT IWH.REC
          ACTION=1; * build INV.WHSE fifo buckets
          TMP.CNT='' ; LAST='' ; TMP.ARR=''
*T27990   CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
          CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
          INAH.ACCT=CATG.INV
          INAH.ADJ.ACCT=CATG.ADJ
        END ELSE
          RELEASE INV.WHSE,IWH.ID
          PHS.NO.POST<1,P>='INV.WHSE # ':IWH.ID:' IS NOT ON LINE'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        MATREADU IH.REC FROM INV.HIST,IH.ID ELSE
          MAT IH.REC=""
        END
        LOCATE INAH.LOC IN IWH.LOC<1>,1 SETTING LFND ELSE
          IF PHS.ADJ.TYPE<1,P> # 'R' THEN
            PHS.NO.POST<1,P>='CANNOT ADJUST A NON EXISTING LOCATION'
            GOSUB RELEASE.SUB
            CONTINUE
          END
          IWH.LOC<1,LFND>=INAH.LOC
        END
        IWLO.ID=IWH.ID:"!":IWH.LOC<1,LFND>
        IF RECORDLOCKED (INV.WHSE.LOC.TEMP,IWLO.ID)=0 THEN
          DELETE INV.WHSE.LOC.TEMP,IWLO.ID
        END
        READ CHECK.REC FROM INV.WHSE.LOC.TEMP,IWLO.ID ELSE
          MATREADU IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE
            IF PHS.ADJ.TYPE<1,P> # "R" THEN
              PHS.NO.POST<1,P>='CANNOT ADJUST A NON EXISTING LOCATION'
              GOSUB RELEASE.SUB
              CONTINUE
            END
            MAT IWLO.REC=''
            IWLO.LOC.ON.HAND=0
          END
        END
        IF IWLO.LOC.ON.HAND+0 # INAH.CUR.QTY+0 THEN
          RELEASE INV.WHSE,IWH.ID
          RELEASE INV.WHSE.LOC,IWH.ID:"!":IWH.LOC<1,LFND>
          PHS.NO.POST<1,P>='ON HAND DOES NOT MATCH PHYSICAL'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        DIFF.QTY=INAH.NEW.QTY-IWLO.LOC.ON.HAND
        IF DIFF.QTY>0 THEN
          TYPE='R'
        END ELSE
          TYPE=''
        END
        CALL QTY.CHANGE.SUB(CONO,PO.CODE,MAT IWH.REC,MAT INV.REC,MAT PO.REC,DEPL.METHOD,RECP.NO,PHS.DATE.ENT<1,P>,PERIOD,DIFF.QTY,PRICE,TYPE,ERRMSG,RET.ARR)
        IF ERRMSG # '' THEN
          RELEASE INV.WHSE,IWH.ID
          RELEASE INV.WHSE.LOC,IWH.ID:"!":IWH.LOC<1,LFND>
          PHS.NO.POST<1,P>=ERRMSG
          GOSUB RELEASE.SUB
          CONTINUE
        END
        TOT.PRICE=RET.ARR<1>       
        TRANS.PRICE=RET.ARR<2>     
        TRANS.UN.PRICE=RET.ARR<3>  
        TRANS.QTY=RET.ARR<4>       
        IWH.ON.HAND=IWH.ON.HAND+DIFF.QTY
        IH.CNT=DCOUNT(IH.DATE,VM)
        IDATE=PHS.DATE.ENT<1,P>
        LOCATE IDATE IN IH.DATE<1> SETTING PP ELSE NULL
        BEGIN CASE
          CASE PP=IH.CNT
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
          CASE PP > IH.CNT
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
            IH.DATE<1,PP>=IDATE
          CASE 1
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
        END CASE
        ADJ.QTY=TRANS.QTY
        ADJ.COST=TRANS.PRICE
        ADJ.UN.COST=TRANS.UN.PRICE
        IF CUR.PERIOD=INAH.PERIOD THEN
          CALL INV.AVG.COST.MAINT(MAT IWH.REC,INV.COST.WT,CUR.PERIOD)
        END
        ACTION=4
        TMP.CNT=1                  
        TMP.ARR=INAH.LOC           
        LAST="Y"
*T27990 v CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
        CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
        IF ERRMSG # '' THEN
          ACTION=9
          PHS.NO.POST<1,P>=ERRMSG
          CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
          GOSUB RELEASE.SUB
          CONTINUE
        END
*T27990 ^
        MATWRITE IH.REC ON INV.HIST,IH.ID
        IF PHS.JOB # '' THEN
          MATWRITE JSTAT.REC ON JOB.STATS,CONO:PHS.JOB
          MATWRITE JOB.REC ON JOB,CONO:PHS.JOB
        END
        FOR R=1 TO PHS.INV.REC.SIZE
          PHS.INV.REC(R)=DELETE(PHS.INV.REC(R),1,P,0)
        NEXT R
        GOSUB RELEASE.SUB
      NEXT P
    END
    IF PHS.INV.PROD='' THEN
      DELETE PHYSICAL.INV,PHS.ID
    END ELSE
      MATWRITE PHS.INV.REC ON PHYSICAL.INV,PHS.ID
    END
  END
9999 REPEAT
GOTO 99999
*
*
***************
RELEASE.SUB: 
***************
*
IF PHS.JOB # '' AND PHS.NO.POST<1,P> # '' THEN
  RELEASE JOB.STATS,CONO:PHS.JOB
  RELEASE JOB,CONO:PHS.JOB
END
*T27990 v
RELEASE INV.HIST, IH.ID
RELEASE INV.WHSE.LOC, IWLO.ID
*T27990 ^
RETURN
*
***********
GET.PERIOD: 
***********
*
XX=0 ; YY=23                                                
PROMPT.MSG = "Please enter period to post adjustments to : "   
FISCAL.FLAG="IC"                                            
PERIOD=""                                                   
CALL PERIOD.PROMPT(CONO,DIV.CODE,FISCAL.FLAG,PROMPT.MSG,XX,YY,PERIOD)
IF PERIOD#"END" THEN                                        
  RECP.PERIOD = PERIOD                                      
END                                                         
RETURN                                                      
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN 
RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 
END
