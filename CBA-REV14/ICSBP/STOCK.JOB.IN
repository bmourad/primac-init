  SUBROUTINE STOCK.JOB.IN(CONO,PLN,MAT INV.CNV.REC,FIND.PO)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>POS.CPYLIB>COM.PO.INTRF
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - STOCK.JOB.IN
* DATE        - 03/20/85
* MODIFIED    - NLB
* DATE MOD    - 10/20/88
* COMMENTS    - ADDED CUSTOMER INVENTORY CHECK
* DESCRIPTION -
*T21177 diane 11/06/1996 * REV11 UPG
*T23177 cindy 08/13/1998 * not displaying detail data correctly in GUI
 *T25740 edvard 07/19/2001 * Replaced COM.STOCK.REC,COM.TRN or 
 *                           COM.TRN.FNGD with R12ICS.COM      
*T25978 adelgado 02/18/2002 * Add the use of prompts (S,SR,SB,ST).
*T25740 lhelms 04/17/2002 * FIX PROBLEM 106; DISPLAY FOR REV12
*ENDDOC
*********************************************************************
*
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>SAVE.STOCK.REC
*COPY>ICS.CPYLIB>INV.CNV
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  BEGIN.PAGE = 14
  LINE.SPACE = 1
  PAGE.SIZE = 5
  LINES = 0
  OLD.START.LINE = 0
*
**** MAIN PROCESS
  P_X  = 24 ; P_Y = 12 ; P_VALUE = 'Ln' ; P_OPT = "CL"
  P_X  := AM:27 ; P_Y := AM:12 ; P_VALUE := AM:'Job Num'
  P_X  := AM:36 ; P_Y := AM:12 ; P_VALUE := AM:'Allocated'
  P_X  := AM:48 ; P_Y := AM:12 ; P_VALUE := AM:'Reserve'
  P_X  := AM:60 ; P_Y := AM:12 ; P_VALUE := AM:'Balance'
  P_X  := AM:72 ; P_Y := AM:12 ; P_VALUE := AM:'Customer'
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  PROD.OPEN = SSTK.TOT.REC<1,PLN>
  TEMP1 = 0
  OPEN.ALOC = PO.TOT.ONORD<1,PLN>
  IF PO.JOB.NO<1,PLN> = '' THEN
    LOOP
      ACTION = 'A'
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END ELSE
    LINES = COUNT(PO.JOB.NO<1,PLN>, SVM) + 1
    LN = 1
  END
  GOSUB 11000
  TEMP1 = 0
  IF FIND.PO THEN
    FOR XX = 1 TO LINES
      TEMP1 = TEMP1 + (PO.JB.RECEVED<1,PLN,XX> + SSTK.JOB.QTY<1,PLN,XX>)
    NEXT XX
  END
  OPEN.ALOC = PO.TOT.ONORD<1,PLN> - TEMP1
  CHANGE.FLG = 1
*    BEGIN CASE
*       CASE FIND.PO AND TEMP0 >= PO.TOT.ONORD<1,PLN>
*         CHANGE.FLG = 0
*       CASE FIND.PO AND PO.TOT.ONORD<1,PLN> - TEMP0 < TEMP1
*         CHANGE.FLG = 0
*    END CASE
  MORE = 1
  LOOP
*        IF CHANGE.FLG = 0 THEN
*           X = 0 ; Y = 21
*           PMSG = "ENTER OPTION (S)CROLL , (E)ND : "
*           TYP = 1 ; MAXL = 2
*           VALDAT = 'S':VM:'E'
*        END ELSE
*           X = 0 ; Y = 21
*           PMSG = 'ENTER OPTION (A)DD ,(C)HANGE ,(D)ELETE ,(S)CROLL ,(E)ND : '
*           TYP = 1; MAXL = 2
*           VALDAT = 'A':VM:'C':VM:'D':VM:'E':VM:'S'
*        END
*        CALL EDIT.SUB
*        ACTION = VALUE
    IF CHANGE.FLG = 0 THEN
      ECD.NUM = 41
    END ELSE
      ECD.NUM = 40
    END
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.ACTION = 4
    CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = 'E' OR ACTION = 'END'
        MORE = 0
      CASE ACTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 11000
      CASE ACTION = 'C'
        GOSUB 9000
        IF LN.NO THEN
          LN = LN.NO
          GOSUB 11000
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 1200
        END
      CASE ACTION = 'D'
        GOSUB 9000
        IF LN.NO THEN
          LN = LN.NO
          IF PO.JB.ONORD<1,PLN,LN>+0 = 0 AND PO.JB.RECEVED<1,PLN,LN>+0 = 0 THEN
            SSTK.JOB.REC<1,PLN> = SSTK.JOB.REC<1,PLN> - SSTK.JOB.QTY<1,PLN,LN>
            PO.JOB.NO = DELETE(PO.JOB.NO,1,PLN,LN)
            SSTK.CUST = DELETE(SSTK.CUST,1,PLN,LN)
            PO.JB.ONORD = DELETE(PO.JB.ONORD,1,PLN,LN)
            SSTK.JOB.QTY = DELETE(SSTK.JOB.QTY,1,PLN,LN)
            LINES = COUNT(PO.JOB.NO<1,PLN>,SVM) + (PO.JOB.NO<1,PLN> # '')
            IF LN > 1 AND LN > LINES THEN LN = LN - 1
            IF LN < 1 THEN LN = 1
            OLD.START.LINE = 0
          END
        END
        GOSUB 11000
        GOSUB 2000
      CASE ACTION = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 11000
      * T25978 v
      CASE ACTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 11000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 11000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 11000
      * T25978 ^
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99999
**** ENTER LINE INFORMATION
1000 GOSUB 11000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
1100 *
  P_X  = 24 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  X = 27; Y = SLN ; TYP = 1; MAXL = 8; O.R = 'O'
  IF PO.JOB.NO<1,PLN,LN> <> '' THEN
    O.R = 'O'
    DEFAULT = PO.JOB.NO<1,PLN,LN>
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF ACTION = 'A' THEN
      PO.JOB.NO = DELETE(PO.JOB.NO,1,PLN,LN)
      SSTK.CUST = DELETE(SSTK.CUST,1,PLN,LN)
      PO.JB.ONORD = DELETE(PO.JB.ONORD,1,PLN,LN)
      SSTK.JOB.QTY = DELETE(SSTK.JOB.QTY,1,PLN,LN)
      P_X  = 24 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    GOTO 1999
  END
  LOCATE VALUE IN PO.JOB.NO<1,PLN>,1 SETTING JLOC ELSE JLOC = LN
  IF JLOC <> LN THEN
    ERRMSG = 'Cannot Enter Same Job Twice'
    GOSUB 91000; GOTO 1100
  END
  MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
    ERRMSG = 'Cannot Locate Job Number - ':VALUE
    GOSUB 91000; GOTO 1100
  END
  IF JOB.STATUS<1,1> > 3 THEN
    ERRMSG = 'Job can not be used due to Job status.'
    GOSUB 91000; GOTO 1100
  END
  IF INV.CUST # "" THEN
    IF "X":INV.CUST # "X":JOB.CUST THEN
      ERRMSG = "THIS INVENTORY IS OWNED BY CUSTOMER ":INV.CUST
      GOSUB 91000
      GOTO 1100
    END
  END
*TASK 18828 ; *CLS 3/95
  MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE<1,PLN> ELSE MAT WHSE.REC = ''
  IF JOB.DIV # WHS.DIV THEN
    ERRMSG = "THE JOB DIVISION DOES NOT MATCH THE PRODUCT'S WAREHOUSE DIVISION"
    GOSUB 91000
    GOTO 1100
  END
*
  PO.JOB.NO<1,PLN,LN> = VALUE
  SSTK.CUST<1,PLN,LN> = JOB.CUST
  PO.JB.ONORD<1,PLN,LN> = PO.JB.ONORD<1,PLN,LN> + 0
  P_X  = 72 ; P_Y = SLN ; P_VALUE = JOB.CUST "L#8" ; P_OPT = ""
  P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((PO.JB.ONORD<1,PLN,LN> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1200 X = 48; Y = SLN; MAXL = 11; O.R = 'R'
*
  GOSUB 3000
  SAVE.JOB.QTY = SSTK.JOB.QTY<1,PLN,LN>
  AVAL.ALOC = AVAL.ALOC + SAVE.JOB.QTY
  IF FIND.PO AND AVAL.ALOC < "0" THEN
    SSTK.JOB.QTY<1,PLN,LN> = SAVE.JOB.QTY
    ERRMSG = "TOTAL OPEN ALLOCATED MUST NOT EXCEED TOTAL OPEN"
    GOSUB 91000 ; GOTO 1200
  END
*
  IF SSTK.JOB.QTY<1,PLN,LN> > 0 THEN
    O.R = 'O'
    DEFAULT = OCONV(INT(((SSTK.JOB.QTY<1,PLN,LN> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV)
  END
  BEGIN CASE
    CASE ICR.CNV = "MD0"
      TYP = 3
    CASE 1
      TYP = 4; SCALER = 2
  END CASE
  CALL EDIT.SUB
  IF VALUE = "END" AND ACTION = "A" THEN GOTO 1000
  IF VALUE = "END" THEN GOTO 1999
  IF INT(((VALUE / ICR.MT1<1>) * ICR.DV1<1>) * ICR.DV2<1> +.5) < SSTK.JOB.QTY<1,PLN,LN> AND PROD.OPEN = 0 AND PO.JB.OPEN<1,PLN,LN> > 0 THEN
    ERRMSG = "CANNOT CHANGE WHEN OPEN QUANTITY EQUAL ZERO"
    GOSUB 91000 ; GOTO 1200
  END
  I.VALUE = INT(((VALUE / ICR.MT1<1>) * ICR.DV1<1>) * ICR.DV2<1> + .5)
  IF SSTK.JOB.REC<1,PLN> - SAVE.JOB.QTY + I.VALUE > SSTK.TOT.REC<1,PLN> THEN
    ERRMSG = "TOTAL RESERVED EXCEEDED TOTAL RECIEVED"
    GOSUB 91000 ; GOTO 1200
  END
  IF FIND.PO AND (SSTK.JOB.REC<1,PLN> - SAVE.JOB.QTY + I.VALUE) > AVAL.ALOC  THEN
    ERRMSG = "TOTAL ALLOCATED MUST NOT EXCEED TOTAL OPEN"
    GOSUB 91000 ; GOTO 1200
  END
  SSTK.JOB.QTY<1,PLN,LN> = INT(((VALUE / ICR.MT1<1>) * ICR.DV1<1>) * ICR.DV2<1> + .5)
  SSTK.JOB.REC<1,PLN> = SSTK.JOB.REC<1,PLN> - SAVE.JOB.QTY + SSTK.JOB.QTY<1,PLN,LN>
  P_X  = 48 ; P_Y = SLN ; P_VALUE = OCONV(INT(((SSTK.JOB.QTY<1,PLN,LN> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  TEMP = PO.JB.OPEN<1,PLN,LN> - SSTK.JOB.QTY<1,PLN,LN>
  IF TEMP < 0 THEN TEMP = 0
  P_X  = 60 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TEMP / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOSUB 2000
  LINES = COUNT(PO.JOB.NO<1,PLN>,SVM) + (PO.JOB.NO<1,PLN> # '')
1999 RETURN
*
2000 TEMP = SSTK.JOB.ALC<1,PLN> - SSTK.JOB.REC<1,PLN>
  IF TEMP < 0 THEN TEMP = 0
  ECD.NUM = 6
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = OCONV(INT(((TEMP / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV)
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
**** CALCULATE ALLOC QTY
*
3000*
  ALOC.BAL = 0
  FOR AA = 1 TO LINES
    ALOC.BAL = ALOC.BAL + PO.JB.OPEN<1,PLN,AA> - SSTK.JOB.QTY<1,PLN,AA>
  NEXT AA
  AVAL.ALOC = PROD.OPEN - ALOC.BAL
  RETURN
**** ENTER LINE NUMBER
9000* GOSUB 11000
*     X = 0 ; Y = 23 ;PMSG = 'ENTER LINE NUMBER :';TYP = 3
*     MINV = OLD.START.LINE; MAXV = LAST.LINE
*     O.R = 'O'; MAXL = 2 
*     CALL EDIT.SUB
*     P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
*     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*     LN.NO = VALUE
  GOSUB 11000
  ECD.NUM = 38
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  ECD.ACTION = 4
  CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
11000 START.LINE = 1 + INT((LN-1) / PAGE.SIZE) * PAGE.SIZE
*T21177      LAST.LINE = START.LINE + PAGE.SIZE + 1
  LAST.LINE = START.LINE + PAGE.SIZE - 1 ;*T21177
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 24 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
    P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JOB.NO<1,PLN,N> "L#8"
    P_X  := AM:72 ; P_Y := AM:SLN ; P_VALUE := AM:SSTK.CUST<1,PLN,N> "L#8"
    P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((PO.JB.ONORD<1,PLN,N> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11"
    P_X  := AM:57 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((SSTK.JOB.QTY<1,PLN,N> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    TEMP = PO.JB.OPEN<1,PLN,N> - SSTK.JOB.QTY<1,PLN,N>
    IF TEMP < 0 THEN TEMP = 0
    P_X  = 60 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TEMP / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV) "R#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 24 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999 RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 *
*      ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
