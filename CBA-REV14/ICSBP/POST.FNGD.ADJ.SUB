  SUBROUTINE POST.FNGD.ADJ.SUB(INVRID,ERRMSG,MAT O.INVR.REC,ADJ.CODE,ADJ.PERIOD,CUR.PERIOD)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*********************************************************************
* REVISION    - [08.0X]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPSBP
* PROGRAM     - POST.FNGD.ADJ.SUB
* BY          - JULIANNE RIVERA, C.B.A
* DATE        - 08/91
* DESCRIPTION
*
* MODIFIED BY NA ON 08/09/93
* TASK 19996 - ONLY ALLOW ADJUSTMENT OF AVAILABLE QUANTITY
* TASK 20468 JR IWH.RSV.FI NOT CALCULATED CORRECTLY
*T24815 alex 02/15/2000*ADJUSTMENTS ARE UPDATING THE JOB.FNGD.STATS
*                         AND FNGD.JOB.STATS RECORDS WRONG.
*T25212 alex 08/25/2000*Fix to skip order line if quantity difference
*                         is equal to zero.
*T25740 epitka 02/08/2002*REV12
*T26767 epitka 07/24/2002 * CHANGE OF ARGUMENTS FOR INV.AVG.COST.MAINT
*T27343 adelgado 03/21/2003 * Fix to update INV_AUDIT_HIST records
*                             correctly.
* T27347 lhelms 03/25/2003 * NOT ADJUSTING CORRECT INV_RECP_WHSE RECORD
*
*********************************************************************
*
*---- Data structure libraries
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.ADJ.CODES           ;*T24815
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>CPYLIB>PORT.CONTROL
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*
  DEFFUN GET.INAH.SEQ (CONO,CONTROL.FILE,INV_AUDIT_HIST.FILE)
  DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
  DEFFUN CALC.DIAM(COST.QTY,STK.QTY,MAT INV.CNV.REC)
*
*---- Initialization
*
  DIM O.INVR.REC(45)
  DIM S.INVR.REC(45)
  DIM HOLD.INVR.REC(INVR.REC.SIZE)
  DIM HOLD.IRW.REC(IRW.REC.SIZE)   ;* T27347
  OPEN.FLAG=1
*
*---- Get all the related records
*
  IF INVR.ADJ.PRT.DATE='' THEN
    ERRMSG="Must print the Adjustment before posting"
    GOTO 99999
  END
*
  ERRMSG=""
  CONO=INVRID[1,3]
  RECPNO=INVRID[4,99]
  TODAY=DATE()
  LIMIT=INVR.REC.SIZE
  FOR I=1 TO LIMIT
    IF INVR.REC(I) # O.INVR.REC(I) THEN LIMIT=0
  NEXT I
  IF LIMIT THEN
    ERRMSG="No logged adjustments, Receipt will remain un-adjusted"
    GOTO 99999
  END
  MATREAD IADJ.REC FROM INV.ADJ.CODES, CONO:ADJ.CODE ELSE
    MAT IADJ.REC=''
  END
  INV.ID=CONO:INVR.PROD
  MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
    ERRMSG="Cannot locate Product # ":INVR.PROD
    GOTO 99900
  END
  IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
    ERRMSG=INVR.PROD:" is not setup as a Finished Goods Product"
    GOTO 99900
  END
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
    ERRMSG="Cannot locate Product Line # ":INV.LINE
    GOTO 99900
  END
  MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:INVR.JOB ELSE
    ERRMSG="NO Finished Goods for Job # ":INVR.JOB
    GOTO 99800
  END
*COPY>ICSBP>INV.UM.CNV
  PTR=1
  LOOP
    LOCATE INVR.PROD IN JFS.PROD<1>,PTR SETTING JFSL THEN
      IF JFS.WHSE<1,JFSL>=INVR.ORG.WHSE THEN PTR=0
    END ELSE
      PTR=0; JFSL=0
    END
  WHILE PTR DO
    PTR=JFSL+1
  REPEAT
  IF NOT(JFSL) THEN
    ERRMSG="No ":INVR.PROD:" product for Job # ":INVR.JOB
    GOTO 99800
  END
  TOT.QTY=SUM(INVR.ORD.QTY)
  TOT.SQTY=SUM(INVR.ORD.SQTY)
  INVR.TOT.COST=0
  INVR.TOT.AMT=0
  OCNT=DCOUNT(INVR.ORDER,VM)
  FOR OPTR=1 TO OCNT
    RECV.QTY=INVR.ORD.QTY<1,OPTR>+0
    UNIT.COST=INVR.UNIT.COST
    UNIT.SALE=INVR.UN.SALE<1,OPTR>
    TOT.COST=INT(UNIT.COST/100*(RECV.QTY/1000)/(INV.COST.WT/100)+0.5)
    TOT.AMT=INT(UNIT.SALE/100*(RECV.QTY/1000)/(INV.COST.WT/100)+0.5)
    INVR.TOT.COST+=TOT.COST
    INVR.TOT.AMT+=TOT.AMT
  NEXT OPTR
  TEMP.QTY=INVR.ORD.QTY
  TEMP.UN.SALE=INVR.UN.SALE
  TEMP.UN.COST=INVR.UNIT.COST
*
  MAT S.INVR.REC=MAT INVR.REC
  MAT INVR.REC=MAT O.INVR.REC
  TEMP.OLD.QTY=INVR.ORD.QTY
  TEMP.OLD.UN.SALE=INVR.UN.SALE
  TEMP.OLD.UN.COST=INVR.UNIT.COST
*
  BEGIN CASE
    CASE TEMP.QTY # TEMP.OLD.QTY
    CASE 1
      MAT INVR.REC=MAT S.INVR.REC
      GOTO 99800
  END CASE
*
  IWH.ID=INV.ID:"!":INVR.ORG.WHSE
*
* T27347
  IRW.ID=CONO:RECPNO:"!":INVR.ORG.WHSE
  MATREADU IRW.REC FROM INV_RECP_WHSE,IRW.ID ELSE
    ERRMSG = "Cannot locate INV_RECEP_WHSE Record"
    GOTO 99700
  END
  MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
    ACTION=1 ; LOC.SEQ='' ; LAST='' ; PERIOD=''           
    INAH.PROD=INVR.PROD ; INAH.WHSE=INVR.ORG.WHSE
    MAT ORG.IWH.REC = MAT IWH.REC                         
    MAT HOLD.INVR.REC=MAT INVR.REC
    MAT HOLD.IRW.REC=MAT IRW.REC ;* T27347
    CALL OPS.IWH.SUB(CONO,PERIOD,LOC.SEQ,LAST,ACTION,OPEN.FLAG)
    MAT INVR.REC=MAT HOLD.INVR.REC
    MAT IRW.REC= MAT HOLD.IRW.REC ;*T27347
  END ELSE
    ERRMSG="Cannot locate INV.WHSE # ":INVR.PROD:", ":INVR.ORG.WHSE
    GOTO 99700
  END
*
  TEMP.NEW.QTY=""
  FCNT=DCOUNT(INVR.ORDER,VM)
  LOCATE RECPNO IN IWH.RECP.NO<1>,1 SETTING RPOS ELSE
    ERRMSG="Cannot locate Receipt ":RECPNO:" in the INV.WHSE record"
    GOTO 99700                                                             
  END
  FOR FPTR=1 TO FCNT
    ORD.ID=INVR.ORDER<1,FPTR>
    TEMP.NEW.QTY+=TEMP.QTY<1,FPTR>
    BEGIN CASE
      CASE INVR.CUST#IWH.VDR.FI<1,RPOS>
        ERRMSG="Warehouse / Receipt Customer No. mismatch ":IWH.VDR.FI<1,RPOS>:" / ":INVR.CUST
        GOTO 99700
      CASE INVR.JOB # IWH.PO.NO.FI<1,RPOS>
        ERRMSG="Warehouse / Receipt Job No. mismatch ":IWH.PO.NO.FI<1,RPOS>:" / ":INVR.JOB
        GOTO 99700
    END CASE
  NEXT FPTR
*
  LOCATE ISTK.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE
    ERRMSG="Cannot locate location ":ISTK.LOC:" for INV.WHSE # ":INVR.PROD:", ":INVR.ORG.WHSE
    GOTO 99700
  END
  IWLO.ID=IWH.ID:"!":ISTK.LOC
  MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
    ERRMSG="Cannot locate INV / WHSE / LOC # ":INVR.PROD:"/":INVR.ORG.WHSE:"/":ISTK.LOC
    GOTO 99600
  END
*
  FJS.ID=IWH.ID:"!":INVR.JOB
  MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
    ERRMSG="Cannot locate FNGD.JOB.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE:", ":INVR.JOB
    GOTO 99400
  END
  MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
    ERRMSG="Cannot locate FNGD.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE
    GOTO 99300
  END
  LOCATE INVR.JOB IN FGS.JOB<1>,1 SETTING JFGL ELSE
    ERRMSG="Cannot locate JOB # ":INVR.JOB:" in FNGD.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE
    GOTO 99300
  END
*
  GOSUB PROCESS.DISTRIBUTION
  IF LOCK.FLAG THEN
    GOTO 99300
  END ELSE
    GOTO 99999
  END
*
**************************************************************************
***** S U B R O U T I N E S **********************************************
**************************************************************************
*
**********************
PROCESS.DISTRIBUTION: 
**********************
*
  LOCATE RECPNO IN IWH.RECP.NO<1>,1 SETTING RPOS THEN
    DIFF.QTY.FI=TEMP.NEW.QTY-IWH.ORG.FI<1,RPOS>
    INAH.NEW.QTY=TEMP.NEW.QTY
    INAH.CUR.QTY=IWH.QTY.FI<1,RPOS>
  END ELSE
    DIFF.QTY.FI=0
  END
  UNIT.COST=TEMP.UN.COST
  ROND=".5"
  IF DIFF.QTY.FI < 0 THEN
    ROND='-.5'
  END
  DIFF.COST=INT(UNIT.COST/100*(DIFF.QTY.FI/1000)/(INV.COST.WT/100)+ROND)
  IF DIFF.QTY.FI # 0 THEN
    GOSUB SET.INAH
    GOSUB ADJUST.IRW
    GOSUB ADJUST.SERIAL
    INVR.DEPL.QTY+=DIFF.QTY.FI
    INVR.AUDIT.NO<1,-1>=INAH.SEQ
    LOCATE "*FNGD*" IN INVR.ORDER<1> SETTING OPOS THEN
      INVR.ORD.QTY<1,OPOS>+=DIFF.QTY.FI
      INVR.ORD.SQTY<1,OPOS>=CALC.STK.QTY(INVR.ORD.QTY<1,OPOS>,MAT INV.CNV.REC,".5",'')
    END
    INAH.ID=CONO:INAH.SEQ
    MATWRITEU INAH.REC ON INV_AUDIT_HIST,INAH.ID
    WRITE '' ON FNGD_AUDIT_TAG,INAH.ID
    MATWRITEU INVR.REC ON INV_RECEIPTS,INVRID
    IRW.ID=CONO:RECPNO:"!":INVR.ORG.WHSE
    MATWRITEU IRW.REC ON INV_RECP_WHSE,IRW.ID
    ISTK.ID=CONO:IRW.SERIAL.NO
    MATWRITEU ISTK.REC ON INV_SERIAL,ISTK.ID
    IWLO.LOC.ON.HAND+=DIFF.QTY.FI
    MATWRITEU IWLO.REC ON INV.WHSE.LOC,IWLO.ID
    IWH.QTY.FI<1,RPOS>=IWH.QTY.FI<1,RPOS>+DIFF.QTY.FI
    IWH.ORG.FI<1,RPOS>=IWH.ORG.FI<1,RPOS>+DIFF.QTY.FI
    IWH.RSV.FI<1,RPOS>=IWH.RSV.FI<1,RPOS>+DIFF.QTY.FI
    IF IWH.QTY.FI<1,RPOS> < IWH.RSV.FI<1,RPOS> THEN
      IWH.RSV.FI<1,RPOS>=IWH.QTY.FI<1,RPOS>
    END
    IF IWH.RSV.FI<1,RPOS> < 0 THEN
      IWH.RSV.FI<1,RPOS>=0
    END
    IWH.ON.HAND=IWH.ON.HAND+DIFF.QTY.FI
    IF CUR.PERIOD=ADJ.PERIOD THEN
      CALL INV.AVG.COST.MAINT(MAT IWH.REC, INV.COST.WT,CUR.PERIOD)
    END
    MAT ORG.IWH.REC=MAT IWH.REC         
    IWH.VDR.FI = ""                     
    IWH.PO.NO.FI = ""                   
    IWH.PO.LN.FI = ""                   
    IWH.ORG.FI = ""                     
    IWH.RSV.FI = ""                     
    IWH.QTY.FI = ""                     
    IWH.COST.FI = ""                    
    IWH.ACT.COST = ""                   
    MATWRITE IWH.REC ON INV.WHSE, IWH.ID
    MAT IWH.REC = MAT ORG.IWH.REC       
    LOCK.FLAG=1
    OCNT=DCOUNT(INVR.ORDER,VM)
    FOR OPTR=1 TO OCNT
      DIFF.QTY = TEMP.QTY<1,OPTR> - TEMP.OLD.QTY<1,OPTR> 
      IF DIFF.QTY = 0 THEN CONTINUE                      
      ORD.ID=INVR.ORDER<1,OPTR>
      SHPNO=INVR.SHIP.TO<1,OPTR>
      GOSUB CHECK.ORDER
      IF ERRMSG # "" THEN GOTO 99200
      IF NOT(LOCK.FLAG) THEN GOSUB 8000
      GOSUB ADJUST.ALLOCATION
      GOSUB 4000
      GOSUB WRITE.RECORDS
      IF ORD.ID#"*FNGD*" THEN
        GOSUB RESERVE.FNGD
      END
    NEXT OPTR
  END
  RETURN
*
**************
CHECK.ORDER: 
**************
*
  PLOC=0; PDLOC=0; JLOC=0; PLLOC=0
  IF ORD.ID="*FNGD*" OR IADJ.TYPE#'P' THEN
    MAT ORD.REC=''
    CUSTID=INVR.CUST
  END ELSE
    MATREADU ORD.REC FROM ORDER, CONO:ORD.ID ELSE
      ERRMSG="Cannot locate ORDER # ":ORD.ID
      RETURN
    END
    CUSTID=ORD.CUST
    STATUS="L"; SHPTO="ALL"
    CALL ORDER.LINE.UPD(CONO,ORD.ID,SHPTO,STATUS)
    PTR=1
    LOOP
      LOCATE INVR.PROD IN ODQ.PROD<1>,PTR SETTING PLOC THEN
        IF INVR.ORG.WHSE=ODQ.WHSE<1,PLOC> THEN PTR=0
      END ELSE
        PLOC=0; PTR=0
      END
    WHILE PTR DO
      PTR=PLOC+1
    REPEAT
    IF PLOC=0 THEN
      ERRMSG="Cannot locate Product, Whse # ":INVR.PROD:", ":INVR.ORG.WHSE:" for ORDER # ":ORD.ID
      RETURN
    END
    PTR=1
    LOOP
      LOCATE SHPNO IN ODQ.FI.SHPNO<1,PLOC>,PTR SETTING PLLOC THEN
        IF ODQ.RECP.NO<1,PLOC,PLLOC>=RECPNO THEN PTR=0
      END ELSE
        PLLOC=0; PTR=0
      END
    WHILE PTR DO
      PTR=PLLOC+1
    REPEAT
    IF PLLOC=0 THEN
      ERRMSG="Cannot locate receipt reference ":RECPNO:" for Order # ":ORD.ID
      GOTO 99200
    END
    PDLOC=0; JLOC=0
    PTR=1
    LOOP
      LOCATE INVR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC THEN
        IF SHPNO="" OR ODQ.JOB.SHPNO<1,PLOC,JLOC>=SHPNO THEN PTR=0
      END ELSE
        JLOC=0; PTR=0
      END
    WHILE PTR DO
      PTR=JLOC+1
    REPEAT
    IF JLOC > 0 THEN
      SHPNO=ODQ.JOB.SHPNO<1,PLOC,JLOC>
      LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING S THEN
        FOR P=1 TO ORD.DET.REC.SIZE
          ORD.DET.REC(P)=ORD.DET.SUM(P,S)
        NEXT P
        PTR=1
        LOOP
          LOCATE INVR.PROD IN OSD.PROD<1>,PTR SETTING PDLOC THEN
            IF INVR.ORG.WHSE=ODQ.WHSE<1,PDLOC> THEN PTR=0
          END ELSE
            PDLOC=0; PTR=0
          END
        WHILE PTR DO
          PTR=PDLOC+1
        REPEAT
      END
    END
  END
  RETURN
*
*********
4000*
*********
*
  MAT INVR.REC=MAT S.INVR.REC
*
  JFS.F.QTY<1,JFSL>+=DIFF.QTY
  FJS.F.QTY+=DIFF.QTY
*C42066  FGS.M.QTY<1,JFSL>-=JFS.F.QTY<1,JFSL>
*C42193  FGS.M.QTY<1,JFGL>-=JFS.F.QTY<1,JFSL>
  FGS.M.QTY<1,JFGL> = JFS.M.QTY<1,JFSL> - JFS.F.QTY<1,JFSL>
  IF FGS.M.QTY<1,JFGL> < 0 THEN FGS.M.QTY<1,JFGL>=0
*
*---- Receipt Bucket (Fifo)
*
  RETURN
*
******************
ADJUST.ALLOCATION: 
******************
*
  MAT INVR.REC=MAT O.INVR.REC
  IF PDLOC THEN
    LOCATE ORD.ID IN JFS.ORDER<1,JFSL>,1 SETTING OLOC THEN
      JFS.ORD.QTY<1,JFSL,OLOC>=JFS.ORD.QTY<1,JFSL,OLOC> - DIFF.QTY
      IF JFS.ORD.QTY<1,JFSL,OLOC> < 1 THEN
        JFS.ORDER=DELETE(JFS.ORDER,1,JFSL,OLOC)
        JFS.ORD.QTY=DELETE(JFS.ORD.QTY,1,JFSL,OLOC)
      END
      JFS.A.QTY<1,JFSL>=SUM(JFS.ORD.QTY<1,JFSL>)
      FGS.A.QTY<1,JFGL>=JFS.A.QTY<1,JFSL>
    END
    LOCATE ORD.ID IN FJS.ORD<1>,1 SETTING OLOC THEN
      FJS.ORD.QTY<1,OLOC>=FJS.ORD.QTY<1,OLOC> - DIFF.QTY
      IF FJS.ORD.QTY<1,OLOC> < 1 THEN
        FJS.ORD=DELETE(FJS.ORD,1,OLOC,0)
        FJS.ORD.QTY=DELETE(FJS.ORD.QTY,1,OLOC,0)
      END
      FJS.A.QTY=SUM(FJS.ORD.QTY<1,JFSL>)
    END
  END
  RETURN
*
***************
WRITE.RECORDS: 
***************
*
  MATWRITE INV.REC ON INVENTORY, INV.ID
  ;*                           
  MATWRITE JFS.REC ON JOB.FNGD.STATS, CONO:INVR.JOB
  MATWRITE FJS.REC ON FNGD.JOB.STATS, FJS.ID
  MATWRITE FGS.REC ON FNGD.STATS, IWH.ID
  LOCK.FLAG=0
  RETURN
*
****************
RESERVE.FNGD: 
****************
*
  IF ORD.ID#"*FNGD*" AND IADJ.TYPE="P" THEN
    ODQ.FI.QTY<1,PLOC,PLLOC>=ODQ.FI.QTY<1,PLOC,PLLOC>+DIFF.QTY
    ODQ.R.QTY<1,PLOC>=SUM(ODQ.FI.QTY<1,PLOC>)
    ODQ.F.QTY<1,PLOC>=ODQ.F.QTY<1,PLOC>+DIFF.QTY.FI
    ODQ.JOB.QTY<1,PLOC,JLOC>=ODQ.JOB.QTY<1,PLOC,JLOC> - DIFF.QTY
    IF ODQ.JOB.QTY<1,PLOC,JLOC> < 1 THEN
      ODQ.JOB=DELETE(ODQ.JOB,1,PLOC,JLOC)
      ODQ.JOB.SHPNO=DELETE(ODQ.JOB.SHPNO,1,PLOC,JLOC)
      ODQ.JOB.QTY=DELETE(ODQ.JOB.QTY,1,PLOC,JLOC)
    END
    ODQ.A.QTY<1,PLOC>=SUM(ODQ.JOB.QTY<1,PLOC>)
    PTR=JLOC+1
    LOCATE INVR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC ELSE
      JLOC=0
    END
*
    LOCATE INVR.JOB IN ORD.JOB<1>,1 SETTING JLOC ELSE
      ORD.JOB<1,JLOC>=INVR.JOB
    END
    PCNT=DCOUNT(ODQ.JOB,VM)
    FOR P=1 TO PCNT
      LOCATE INVR.JOB IN ODQ.JOB<1,P>,1 SETTING JFND THEN
        PCNT=0
      END
    NEXT P
    IF PCNT THEN
      ORD.JOB=DELETE(ORD.JOB,1,JLOC,0)
    END
*
    STATUS="U"; SHPTO=""
    CALL ORDER.LINE.UPD(CONO,ORD.ID,SHPTO,STATUS)
  END
  RETURN
*
*---- Re-Read records written by this program and ORDER.LINE.UPD
*
8000*
  MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="INVENTORY file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:INVR.JOB ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="JOB.FNGD.STATS file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  MATREADU IWH.REC FROM INV.WHSE, IWH.ID ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="INV.WHSE file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="INV.WHSE.LOC file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="FNGD.JOB.STATS file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
    P_X =0 ; P_Y=23 ; P_VALUE="FNGD.STATS file has been corrupted???" ; P_OPT="CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  LOCK.FLAG=1
  RETURN
*
**************
SET.INAH: 
**************
*
  INAH.SEQ=GET.INAH.SEQ(CONO,CONTROL,INV_AUDIT_HIST)
  INAH.PROD=INVR.PROD
  INAH.WHSE=INVR.ORG.WHSE
  INAH.LOC= ISTK.LOC
  INAH.DATE=TODAY
  INAH.TYPE="A"
  INAH.SRC="IQ"
  INAH.ACCT=CATG.INV
  INAH.ADJ.ACCT=CATG.ADJ
  INAH.JOB=INVR.JOB
  INAH.QTY=DIFF.QTY.FI
  INAH.EXT.COST= DIFF.COST
  INAH.UNIT.COST=INVR.UNIT.COST
  INAH.PERIOD=ADJ.PERIOD
  INAH.RECP.NO=RECPNO
  INAH.SYS.DATE = TODAY               ;* T27343
  INAH.SYS.TIME = TIME()              ;* T27343
  INAH.OPER.ID = @LOGNAME             ;* T27343
  INAH.ADJ.CODE = ADJ.CODE            ;* T27343
  INAH.SERIAL = IRW.SERIAL.NO         ;* T27343 AND T27347
  INAH.TRAN = RECPNO                  ;* T27343
  RETURN
*
*********************
ADJUST.SERIAL: 
*********************
*
  INAH.CUR.STK.QTY = ISTK.CUR.STK.QTY      ;* T27343
  ISTK.ID=CONO:IRW.SERIAL.NO
  ISTK.ORG.QTY +=DIFF.QTY.FI
  ISTK.ORG.STK.QTY=CALC.STK.QTY(ISTK.ORG.QTY,MAT INV.CNV.REC,'.5','')
  IF CATG.TYPE='L' OR CATG.TYPE='LR' OR CATG.TYPE='PC' THEN
    DIAM=CALC.DIAM(ISTK.ORG.QTY,ISTK.ORG.STK.QTY,MAT INV.REC)
    ISTK.ORG.DIAM= DIAM
  END
  ISTK.CUR.QTY+=DIFF.QTY.FI
  ISTK.RSVB.QTY+=DIFF.QTY.FI
  ISTK.CUR.STK.QTY=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'.5','')
  INAH.NEW.STK.QTY=ISTK.CUR.STK.QTY
  DIAM=CALC.DIAM(ISTK.CUR.QTY,ISTK.CUR.STK.QTY,MAT INV.REC)
  ISTK.CUR.DIAM=DIAM ; INAH.NEW.DIAM=DIAM
  ISTK.AUDIT.NO<1,-1> = INAH.SEQ
  RETURN
*
*************
ADJUST.IRW: 
*************
*
  IRW.ID=CONO:RECPNO:"!":INVR.ORG.WHSE
  IRW.ON.HAND+=DIFF.QTY.FI
  IRW.ORG.QTY+=DIFF.QTY.FI
  IRW.CUR.QTY+=DIFF.QTY.FI
  IRW.RSVB.QTY+=DIFF.QTY.FI
  RETURN
*
99200*
  RELEASE ORDER, CONO:ORD.ID
99300*
  RELEASE FNGD.STATS, IWH.ID
99400*
  RELEASE FNGD.JOB.STATS, FJS.ID
99500*
99600*
  RELEASE INV.WHSE.LOC, IWLO.ID
99700*
  RELEASE INV.WHSE, IWH.ID
99800*
  RELEASE JOB.FNGD.STATS, CONO:INVR.JOB
99900*
  RELEASE INVENTORY, INV.ID
99999 RETURN
END
