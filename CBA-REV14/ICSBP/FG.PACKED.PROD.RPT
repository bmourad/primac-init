*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [00.0]
* COPYRIGHT   - 1993 Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - LMFPBP
* PROGRAM     - FG.PACKED.PROD.RPT
* AUTHOR      - S.L.Fritz
* DATE        - 04/22/93
* DESCRIPTION - Print the Finished Goods Packed Production Report.
*               This program is both the DETAIL and SUMMARY report
*               generator.  A 'switch' is passed to this routine via a
*               PROC buffer.  This switch controls if the detail or the
*               summary prints.
*
*               There are two major diferences between the summary and
*               detail reports format.  All the inforation after the SALES
*               column is different, and the PRICE column only appears on
*               the detail report.
*
*               There are two minor diferences.  The subtotal printing and
*               line counting is not the same because the PRODUCT lines
*               in the SUMMARY report ARE subtotals, and additional column
*               information needs to be subtotaled on the summary report.
*
*
*T21652 bill 04/07/1997 * BUG IN PACKED PRODUCTION REPORT
*T26484 cmykleb 03/11/2002 * Change report to work with new rev12
*                            changes.
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*T25740 epitka 10/08/2002 * REV12
*T28014 thompson 03/17/2004 * BASE BUG WITH CONVERSION PROBLEM
**************************************************************************
*
*---- DATA Structure Libraries
*
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV.WHSE
*
*---- File open
*
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
  FILEMSG = 'INV_RECEIPTS';GOTO 999000
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE FILEMSG = 'CUSTOMER';GOTO 999000
OPEN '','INVENTORY' TO INVENTORY ELSE FILEMSG = 'INVENTORY';GOTO 999000
OPEN '','INV.FNGD' TO INV.FNGD ELSE FILEMSG = 'INV.FNGD';GOTO 999000
OPEN '','INV.WHSE' TO INV.WHSE ELSE FILEMSG ='INV.WHSE';GOTO 999000
*
*---- Initialize variables
*
TRUE = 1
OTHERS = 1
VOID = ''
NULL = ''
FALSE = 0
PAGE.NO = 0
FILEMSG = ''
ERRMSG = ''
LINES.THIS.PAGE = 0
PAGE.HEADING.SIZE = 8
PAGE.SIZE = 55
FIRST.TIME.FLAG = 'Y'
LAST.TIME.FLAG = 'N'
FIRST.PROD.LINE.FLAG = "Y"
PRODUCT.QUANT.BUCKET = 0
PRODUCT.SALES.BUCKET = 0
CUSTOMER.QUANT.BUCKET = 0
CUSTOMER.SALES.BUCKET = 0
GRAND.QUANT.BUCKET = 0
GRAND.SALES.BUCKET = 0
EQU CONO         TO BUFFER<1>
EQU COMPANY.NAME TO BUFFER<2>
EQU WAREHOUSES   TO BUFFER<3>
EQU CUSTOMERS    TO BUFFER<4>
EQU START.PERIOD TO BUFFER<5>
EQU END.PERIOD   TO BUFFER<6>
EQU FROM.DATE    TO BUFFER<7>
EQU TO.DATE      TO BUFFER<8>
EQU REPORT.CODE  TO BUFFER<9>
*
*---- MAIN Function ------------------------------------------------------
*
PRINTER ON
PROCREAD BUFFER ELSE
  ERRMSG = 'Must run this program from a REPORT.SCRN PROC'
  GOTO 999000
END
BEGIN CASE
  CASE REPORT.CODE = 'D'
    REPORT.TYPE = "DETAIL"
  CASE REPORT.CODE = 'S'
    REPORT.TYPE = "SUMMARY"
  CASE OTHERS
    REPORT.TYPE = 'SUMMARY'
END CASE
*T26493 v
*  RPT.NAME = 'FINISHED GOODS PACKED PRODUCTION ':REPORT.TYPE:' REPORT'
*  RPT.NUM = 'XXXX'
RPT.NAME = ""
RPT.NUM = BUFFER<2>
*T26493 ^
RPT.DATE = DATE()
HD1 = ''
HD2 = ''
HD3 = SPACE(45):"PERIOD ":START.PERIOD:" THROUGH ":END.PERIOD
HD3 = HD3:" - DATE ":OCONV(FROM.DATE, "D2/") "L#8":" THROUGH ":OCONV(TO.DATE, "D2/")
HD4 = ''
CALL GET.PROG.HEAD(CONO,VOID,RPT.NAME,RPT.NUM,RPT.DATE,HD1,HD2)
SHD1 = 'PRODUCT          '
SHD1 = SHD1:'DESCRIPTION                     '
SHD1 = SHD1:'QUANTITY     '
SHD1 = SHD1:'UOM  '
BEGIN CASE
  CASE REPORT.CODE = 'D'
    SHD1 = SHD1:'     PRICE  '
    SHD1 = SHD1:'       SALES  '
    SHD1 = SHD1:'RECEIPT #  '
    SHD1 = SHD1:'JOB NUM   '
    SHD1 = SHD1:'S/O.NO'
  CASE REPORT.CODE = "S"
    SHD1 = SHD1:'       SALES  '
    SHD1 = SHD1:'AV PRICE'
  CASE OTHERS
    SHD1 = SHD1:'       SALES  '
    SHD1 = SHD1:'AV PRICE'
END CASE
SHD2 = STR('-',15):SPACE(2)
SHD2 = SHD2:STR('-',30):SPACE(2)
SHD2 = SHD2:STR('-',11):SPACE(2)
SHD2 = SHD2:STR('-',3):SPACE(2)
BEGIN CASE
  CASE REPORT.CODE = 'D'
    SHD2 = SHD2:STR('-',10):SPACE(2)
    SHD2 = SHD2:STR('-',12):SPACE(2)
    SHD2 = SHD2:STR('-',9):SPACE(2)
    SHD2 = SHD2:STR('-',8):SPACE(2)
    SHD2 = SHD2:STR('-',6)
  CASE REPORT.CODE = "S"
    SHD2 = SHD2:STR('-',12):SPACE(2)
    SHD2 = SHD2:STR('-',8)
  CASE OTHERS
    SHD2 = SHD2:STR('-',12):SPACE(2)
    SHD2 = SHD2:STR('-',8)
END CASE
SHD3 = ''
GOSUB 60000
GOTO 10000
*
10000 *
*
READNEXT IR.KEY ELSE
  LAST.TIME.FLAG = 'Y'
  GOSUB 40000;* Print product, customer, and grand totals.
  GOTO 99999;* Exit the program.
END
MATREAD INVR.REC FROM INV_RECEIPTS, IR.KEY ELSE
  ERRMSG = 'Can not find the ':IR.KEY:' record in the receipt file!'
  GOTO 10000;* Record must have disappeared, skip to next record.
END
MATREAD IWH.REC FROM INV.WHSE,CONO:INVR.PROD:"!":INVR.ORG.WHSE ELSE
  MAT IWH.REC=''
END
AVR.PRICE=IWH.AVG.COST
*
* Routine to check if this is the first time through this program
*
IF FIRST.TIME.FLAG = 'Y' THEN
  LAST.CUSTOMER = INVR.CUST
  LAST.PRODUCT = INVR.PROD
  GOSUB 50000;* Print the customer NUMBER & NAME row
  FIRST.TIME.FLAG = 'N'
END
*
* If there is a break in the customer, print and reset customer subtotals
* This will force a break in the product totals as well
*
BEGIN CASE
  CASE LAST.CUSTOMER # INVR.CUST
    GOSUB 20000
    GOSUB 30000
*
* If there is a break in the product, print and reset product subtotals
*
  CASE LAST.PRODUCT # INVR.PROD
    GOSUB 20000
END CASE
LAST.CUSTOMER = INVR.CUST
LAST.PRODUCT = INVR.PROD
MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE
  MAT INV.REC = ""
  INV.FULL.DESC = 'CAN NOT FIND INVENTORY RECORD'
END
*COPY>ICSBP>INV.UM.CNV
PQTY = INT(((INVR.ORG.QTY / ICR.DV1 ) * ICR.MT1 ) / ICR.DV2 +.5)
VAR.PCT = 0
IF INV.BASE.SKU # '' THEN
  READV DESCRIPTION.ONE FROM INVENTORY, CONO:INV.BASE.SKU, 2 ELSE
    DESCRIPTION.ONE = "Inventory description miissing from file!"
  END
  DESCRIPTION.TWO = INV.FULL.DESC
END ELSE
  DESCRIPTION.ONE = INV.FULL.DESC
  DESCRIPTION.TWO = ''
END
*
* If there are more then one product lines to print, do not print any
* more desciption lines other then thr first one.  The report looks
* very clutered if there are several lines for the same product, and the
* product has a MASTER.
*
* If this is a summary report, the descriptions need to stick around.
*
BEGIN CASE
  CASE REPORT.CODE = "D"
    IF FIRST.PROD.LINE.FLAG # 'Y' THEN
      DESCRIPTION.ONE = ''
      DESCRIPTION.TWO = ''
    END
    PRINT.LINE = INVR.PROD'L#15'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:DESCRIPTION.ONE'L#30'
    PRINT.LINE = PRINT.LINE:SPACE(2)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(INVR.ORG.QTY,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(INVR.ORG.QTY,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:INV.UNIT<1,3>'L#3'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(INVR.UNIT.COST,'MD4,')'R#10'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(INVR.TOT.AMT,'MD2,')'R#12'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:IR.KEY[4,9]'L#9'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:INVR.JOB'R#8'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:INVR.ORDER<1,1>'R#6'
    PRINT PRINT.LINE
    IF DESCRIPTION.TWO # '' THEN
      PRINT SPACE(17):DESCRIPTION.TWO'L#30'
      LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      IF LINES.THIS.PAGE > PAGE.SIZE THEN
        GOSUB 60000
      END
    END
  CASE REPORT.CODE = "S"
    LAST.PROD.DESCRIPTION.ONE = DESCRIPTION.ONE
    LAST.PROD.DESCRIPTION.TWO = DESCRIPTION.TWO
    LAST.PROD.UNIT = INV.UNIT
  CASE OTHERS
    LAST.PROD.DESCRIPTION.ONE = DESCRIPTION.ONE
    LAST.PROD.DESCRIPTION.TWO = DESCRIPTION.TWO
    LAST.PROD.UNIT = INV.UNIT
END CASE
PRODUCT.QUANT.BUCKET = PRODUCT.QUANT.BUCKET + INVR.ORG.QTY
PRODUCT.SALES.BUCKET = PRODUCT.SALES.BUCKET + INVR.TOT.AMT
FIRST.PROD.LINE.FLAG = "N"
IF REPORT.CODE = 'D' THEN
  LINES.THIS.PAGE = LINES.THIS.PAGE + 1
  IF LINES.THIS.PAGE > PAGE.SIZE THEN
    GOSUB 60000
  END
END
*
GOTO 10000;* GET THE NEXT RECORD
*
*---- PRODUCT BREAK Function ---------------------------------------------
*
*                   This function manages the printing of product subtotal
*                   figures.  The subtotal buckets are zeroed out.
*
20000 *-------------------------------------------------------------------
*
BEGIN CASE
  CASE REPORT.CODE = "D"
    LINES.THIS.PAGE = LINES.THIS.PAGE + 3
    IF LINES.THIS.PAGE > PAGE.SIZE THEN
      GOSUB 60000
    END
    PRINT.LINE = SPACE(49)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.QUANT.BUCKET,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(PRODUCT.QUANT.BUCKET,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(19)
    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.SALES.BUCKET,'MD2,')'R#12'
    PRINT SPACE(49):STR('-',11):SPACE(19):STR('-',12)
    PRINT PRINT.LINE
    PRINT
  CASE REPORT.CODE = "S"
    LINES.THIS.PAGE = LINES.THIS.PAGE + 1
    IF LINES.THIS.PAGE > PAGE.SIZE THEN
      GOSUB 60000
    END
    PRINT.LINE = LAST.PRODUCT'L#15'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:LAST.PROD.DESCRIPTION.ONE'L#30'
    PRINT.LINE = PRINT.LINE:SPACE(2)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.QUANT.BUCKET,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(PRODUCT.QUANT.BUCKET,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:LAST.PROD.UNIT<1,3>'L#3'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.SALES.BUCKET,'MD2,')'R#12'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(AVR.PRICE,'MD2,')'R#8'
    PRINT PRINT.LINE
    IF LAST.PROD.DESCRIPTION.TWO # '' THEN
      LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      IF LINES.THIS.PAGE > PAGE.SIZE THEN
        GOSUB 60000
      END
      PRINT SPACE(17):LAST.PROD.DESCRIPTION.TWO'L#30'
    END
  CASE OTHERS
    LINES.THIS.PAGE = LINES.THIS.PAGE + 1
    IF LINES.THIS.PAGE > PAGE.SIZE THEN
      GOSUB 60000
    END
    PRINT.LINE = LAST.PRODUCT'L#15'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:LAST.PROD.DESCRIPTION.ONE'L#30'
    PRINT.LINE = PRINT.LINE:SPACE(2)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.QUANT.BUCKET,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(PRODUCT.QUANT.BUCKET,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:LAST.PROD.UNIT<1,3>'L#3'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(PRODUCT.SALES.BUCKET,'MD2,')'R#12'
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(AVR.PRICE,'MD2,')'R#8'
    PRINT PRINT.LINE
    IF LAST.PROD.DESCRIPTION.TWO # '' THEN
      LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      IF LINES.THIS.PAGE > PAGE.SIZE THEN
        GOSUB 60000
      END
      PRINT SPACE(17):LAST.PROD.DESCRIPTION.TWO'L#30'
    END
END CASE
*
CUSTOMER.QUANT.BUCKET = CUSTOMER.QUANT.BUCKET + PRODUCT.QUANT.BUCKET
CUSTOMER.SALES.BUCKET = CUSTOMER.SALES.BUCKET + PRODUCT.SALES.BUCKET
*
PRODUCT.QUANT.BUCKET = 0
PRODUCT.SALES.BUCKET = 0
*
FIRST.PROD.LINE.FLAG = "Y"
*
RETURN
*
*
*---- CUSTOMER BREAK Function --------------------------------------------
*
*                  This function manages the printing of customer subtotal
*                  figures.  The subtotal buckets are zeroed out.
*
30000 *-------------------------------------------------------------------
*
* If the customer had a break, the product must be forced to break also.
*
LINES.THIS.PAGE = LINES.THIS.PAGE + 2
IF LINES.THIS.PAGE > PAGE.SIZE THEN
  GOSUB 60000
END
*
BEGIN CASE
  CASE REPORT.CODE = "D"
    PRINT.LINE = 'CUSTOMER TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(35)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(CUSTOMER.QUANT.BUCKET,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(CUSTOMER.QUANT.BUCKET,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(19)
    PRINT.LINE = PRINT.LINE:OCONV(CUSTOMER.SALES.BUCKET,'MD2,')'R#12'
  CASE REPORT.CODE = "S"
    PRINT SPACE(67):STR('-',12)
    PRINT.LINE = 'CUSTOMER TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(48)
    PRINT.LINE = PRINT.LINE:SPACE(3);* The UOM
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(CUSTOMER.SALES.BUCKET,'MD2,')'R#12'
  CASE OTHERS
    PRINT SPACE(67):STR('-',12)
    PRINT.LINE = 'CUSTOMER TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(48)
    PRINT.LINE = PRINT.LINE:SPACE(3);* The UOM
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(CUSTOMER.SALES.BUCKET,'MD2,')'R#12'
END CASE
PRINT PRINT.LINE
PRINT
GRAND.QUANT.BUCKET = GRAND.QUANT.BUCKET + CUSTOMER.QUANT.BUCKET
GRAND.SALES.BUCKET = GRAND.SALES.BUCKET + CUSTOMER.SALES.BUCKET
CUSTOMER.QUANT.BUCKET = 0
CUSTOMER.SALES.BUCKET = 0
IF LAST.TIME.FLAG # 'Y' THEN
  GOSUB 50000;* Go and print the customers number and name
END
RETURN
40000 *
GOSUB 20000
GOSUB 30000
LINES.THIS.PAGE = LINES.THIS.PAGE + 1
IF LINES.THIS.PAGE > PAGE.SIZE THEN
  GOSUB 60000
END
BEGIN CASE
  CASE REPORT.CODE = "D"
    PRINT.LINE = 'GRAND TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(38)
*T28014    PRINT.LINE = PRINT.LINE:OCONV(GRAND.QUANT.BUCKET,'MD0,')'R#11'
    PRINT.LINE = PRINT.LINE:OCONV(OCONV(GRAND.QUANT.BUCKET,'MD3'),'MD0,')'R#11'; *T28014
    PRINT.LINE = PRINT.LINE:SPACE(19)
    PRINT.LINE = PRINT.LINE:OCONV(GRAND.SALES.BUCKET,'MD2,')'R#12'
  CASE REPORT.CODE = "S"
    PRINT SPACE(67):STR('-',12)
    PRINT.LINE = 'GRAND TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(51)
    PRINT.LINE = PRINT.LINE:SPACE(3);* The UOM
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(GRAND.SALES.BUCKET,'MD2,')'R#12'
  CASE OTHERS
    PRINT SPACE(67):STR('-',12)
    PRINT.LINE = 'GRAND TOTAL'
    PRINT.LINE = PRINT.LINE:SPACE(51)
    PRINT.LINE = PRINT.LINE:SPACE(3);* The UOM
    PRINT.LINE = PRINT.LINE:SPACE(2)
    PRINT.LINE = PRINT.LINE:OCONV(GRAND.SALES.BUCKET,'MD2,')'R#12'
    PRINT.LINE = PRINT.LINE:SPACE(2)
END CASE
PRINT PRINT.LINE
RETURN
*
50000 *
*
READV CUST.NAME FROM CUSTOMER, CONO:INVR.CUST, 1 ELSE
  CUST.NAME = 'Can not find this customer record.'
END
LINES.THIS.PAGE = LINES.THIS.PAGE + 2
IF LINES.THIS.PAGE > PAGE.SIZE THEN
  GOSUB 60000
END
PRINT 'CUSTOMER  ':INVR.CUST'R#6':'  ':CUST.NAME'L#30'
PRINT
RETURN
*
60000 * Print heading
*
PRINT CHAR(12)
PAGE.NO = PAGE.NO + 1
PRINT HD1:PAGE.NO
PRINT HD2
PRINT HD3
PRINT HD4
PRINT
PRINT SHD1
PRINT SHD2
PRINT SHD3
LINES.THIS.PAGE = PAGE.HEADING.SIZE
RETURN
999000 *------------------------------------------------------------------
IF FILEMSG # '' THEN
  ERRMSG = 'Can not open the ':FILEMSG:' file.  Process aborted!'
END
CRT @(0,23):ERRMSG:
INPUT ERROR.ANS
99999 *
PRINTER CLOSE
PRINTER OFF
END
