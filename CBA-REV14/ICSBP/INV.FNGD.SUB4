      SUBROUTINE INV.FNGD.SUB4(CONO,PDNO,NEWREC,STATUS)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INVENTORY
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - INV.FNGD.SUB4
* BY          - JULIANNE RIVERA, C.B.A
* DATE        - 08/09/91
* DESCRIPTION
* This program is use to maintain bill of materials for a
* given product.
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- Setup SYSCOM
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Initialization
*
      LINE.SPACE = 1
      BEGIN.PAGE = 6
      PAGE.SIZE = 5
      BEGIN.PAGE2 = 14
      PAGE.SIZE2 = 6
*
      LN = 1; OLD.START = 0
      LINES = DCOUNT(IOF.PLATE,VM)
      LN2 = 1; OLD.START2 = 0
      LINES2 = DCOUNT(IOF.SI.DEPT,VM)
*
      ESN = ECD.SCRN.NO
*
*---- Display Data
*
      IF NEWREC THEN
         ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = PDNO
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOSUB 2975
         IF LINES THEN
            GOSUB 2900
         END ELSE
            GOSUB 2000
         END
         GOSUB 3975
         IF LINES2 THEN
            GOSUB 3900
         END ELSE
            GOSUB 3000
         END
      END ELSE
         SCV.REC(1)<ESN> = PDNO
         SCV.REC(2)<ESN> = INV.FULL.DESC
         SCV.REC(19)<ESN> = INT(LINES/PAGE.SIZE + 0.9) "R%2"
         SCV.REC(29)<ESN> = INT(LINES2/PAGE.SIZE2 + 0.9) "R%2"
         ECD.ACTION = 3; CALL SCRN.EDIT
         GOSUB 2900
         GOSUB 3900
      END
*
*---- Prompt Line
*
      MORE = 1
      LOOP
         IF NEWREC THEN ECD.NUM = 44 ELSE ECD.NUM = 41
         SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
            CASE OPTION = "E" OR OPTION = "END"
               IF NEWREC THEN
                  ECD.NUM = 45; SCV.REC(ECD.NUM)<ESN> = ""
                  ECD.ACTION = 4; CALL SCRN.EDIT
                  IF ECD.RET.VALUE = "Y" THEN
                     STATUS = "END"
                     MORE = 0
                  END
               END ELSE
                  MORE = 0
               END
            CASE OPTION = "N" OR OPTION = "P" 
               STATUS = OPTION
               MORE = 0
            CASE NOT(NUM(OPTION))
               ERRMSG = "Invalid Entry, try again !!"
               GOSUB 91000
            CASE OPTION < 1 OR OPTION > 2
               ERRMSG = "Out Of Range !!"
               GOSUB 91000
            CASE 1
               ON OPTION GOSUB 2000,3000
         END CASE
      WHILE MORE DO REPEAT
      GOTO 99999
*
*---- Plate Prompt Line
2000*
      IF NOT(LINES) THEN
         REQUEST = "A"
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 2100
         WHILE LINES > OLD.LINES DO
            GOSUB 2900; GOSUB 2950
         REPEAT
         LN = LINES
      END
      ANCORE = 1
      LOOP
         ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         REQUEST = ECD.RET.VALUE
         BEGIN CASE
            CASE REQUEST = "" OR REQUEST = "END" OR REQUEST = "E"
               ANCORE = 0
            CASE REQUEST = "A"
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 2100
               WHILE LINES > OLD.LINES DO
                  GOSUB 2900; GOSUB 2950
               REPEAT
               LN = LINES
            CASE REQUEST = "C"
               GOSUB 2800
               IF LNO THEN
                  LN = LNO
                  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
                  GOSUB 2110
               END
            CASE REQUEST = "D"
               GOSUB 2800
               IF LNO THEN
                  LN = LNO
                  IOF.PLATE = DELETE(IOF.PLATE,1,LN,0)
                  IOF.PLATE.DESC = DELETE(IOF.PLATE.DESC,1,LN,0)
                  LINES = DCOUNT(IOF.PLATE,VM)
                  IF LN > LINES THEN LN = LN - 1
                  IF LN < 1 THEN LN = 1
                  OLD.START = 0; GOSUB 2900; GOSUB 2975
               END
            CASE REQUEST = "S" OR REQUEST = "SF"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 2900
            CASE REQUEST = "SR"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 2900
            CASE REQUEST = "ST"
               LN = 1; GOSUB 2900
            CASE REQUEST = "SB"
               LN = LINES; GOSUB 2900
            CASE REQUEST[1,1] = "S" AND NUM(REQUEST[2,99])
               LNO = REQUEST[2,99] + 0
               IF LNO < 1 OR LNO > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  LN = LNO
                  GOSUB 2900
               END
         END CASE
      WHILE ANCORE DO REPEAT
      RETURN
*
*---- Plates
2100*
      GOSUB 2900
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2110*
      X = 3; Y = SLN; TYP = 1; MAXL = 10
      HMSG = "Enter Plate Reference Number."
      IF IOF.PLATE<1,LN> # "" THEN
         O.R = "O"; DEFAULT = IOF.PLATE<1,LN>
      END
      CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE = "END" AND REQUEST = "A"
            P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IOF.PLATE = DELETE(IOF.PLATE,1,LN,0)
            IOF.PLATE.DESC = DELETE(IOF.PLATE.DESC,1,LN,0)
            GOTO 2199
         CASE VALUE = "END"
            P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
            P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.PLATE<1,LN> "L#10"
            P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.PLATE.DESC<1,LN> "L#50"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            GOTO 2199
      END CASE
      LOCATE VALUE IN IOF.PLATE<1>,1 SETTING OLN ELSE OLN = LN
      IF OLN # LN THEN
         ERRMSG = "Plate (":VALUE:") already exists on line # ":OLN
         GOSUB 91000; GOTO 2110
      END
      IOF.PLATE<1,LN> = VALUE
2120*
      X = 14; Y = SLN; TYP = 1; MAXL = 50
      HMSG = "Enter Plate Description."
      IF IOF.PLATE.DESC<1,LN> # "" THEN
         O.R = "O"; DEFAULT = IOF.PLATE.DESC<1,LN>
      END
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 2110
      IOF.PLATE.DESC<1,LN> = VALUE
      LINES = DCOUNT(IOF.PLATE,VM)
2199*
      RETURN
*
*---- Plate Line Number
2800*
      GOSUB 2900
      ECD.MINV = START.LINE; ECD.MAXV = LAST.LINE
      ECD.NUM = 43; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
         LNO = 0
      END ELSE
         LNO = ECD.RET.VALUE + 0
      END
      RETURN
*
*---- Display Plate Scrolling Area
2900*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE -1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START THEN RETURN
      OLD.START = START.LINE
      ECD.NUM = 18
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
         P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.PLATE<1,N> "L#10"
         P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.PLATE.DESC<1,N> "L#50"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- Plate Page Numbers
2950*
      ECD.NUM = 18
      SCV.REC(ECD.NUM)<ESN> = INT(LN/PAGE.SIZE + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
2975*
      ECD.NUM = 19
      SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*---- Special Instructions Prompt Line
3000*
      IF NOT(LINES2) THEN
         REQUEST = "A"
         LOOP
            LN2 = LINES2 + 1
            OLD.LINES = LINES2
            GOSUB 3100
         WHILE LINES2 > OLD.LINES DO
            GOSUB 3900; GOSUB 3950
         REPEAT
         LN2 = LINES2
      END
      ANCORE = 1
      LOOP
         ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         REQUEST = ECD.RET.VALUE
         BEGIN CASE
            CASE REQUEST = "" OR REQUEST = "END" OR REQUEST = "E"
               ANCORE = 0
            CASE REQUEST = "A"
               LOOP
                  LN2 = LINES2 + 1
                  OLD.LINES = LINES2
                  GOSUB 3100
               WHILE LINES2 > OLD.LINES DO
                  GOSUB 3900; GOSUB 3950
               REPEAT
               LN2 = LINES2
            CASE REQUEST = "C"
               GOSUB 3800
               IF LNO THEN
                  LN2 = LNO
                  SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(LN2-1,PAGE.SIZE2)
                  GOSUB 3110
               END
            CASE REQUEST = "D"
               GOSUB 3800
               IF LNO THEN
                  LN2 = LNO
                  IOF.SI.DEPT = DELETE(IOF.SI.DEPT,1,LN2,0)
                  IOF.SI.NO = DELETE(IOF.SI.NO,1,LN2,0)
                  IOF.SI.DESC = DELETE(IOF.SI.DESC,1,LN2,0)
                  LINES2 = DCOUNT(IOF.SI.DEPT,VM)
                  IF LN2 > LINES2 THEN LN2 = LINES2 
                  IF LN2 < 1 THEN LN2 = 1
                  OLD.START2 = 0; GOSUB 3900; GOSUB 3975
               END
            CASE REQUEST = "S" OR REQUEST = "SF"
               LN2 = 1 + INT((LN2-1)/PAGE.SIZE2) * PAGE.SIZE2 + PAGE.SIZE2
               IF LN2 > LINES2 THEN LN2 = 1
               GOSUB 3900
            CASE REQUEST = "SR"
               LN2 = 1 + INT((LN2-1)/PAGE.SIZE2) * PAGE.SIZE2 - PAGE.SIZE2
               IF LN2 < 1 THEN LN2 = 1
               GOSUB 3900
            CASE REQUEST = "ST"
               LN2 = 1; GOSUB 3900
            CASE REQUEST = "SB"
               LN2 = LINES2; GOSUB 3900
            CASE REQUEST[1,1] = "S" AND NUM(REQUEST[2,99])
               LNO = REQUEST[2,99] + 0
               IF LNO < 1 OR LNO > LINES2 THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  LN2 = LNO
                  GOSUB 3900
               END
         END CASE
      WHILE ANCORE DO REPEAT
      RETURN
*
*---- Special Instructions
3100*
      GOSUB 3900
      SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(LN2-1,PAGE.SIZE2)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = LN2 "R#2" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
3110*
      X = 3; Y = SLN; TYP = 1; MAXL = 5; O.R = "O"
      HMSG = "Enter Department Number."
      BEGIN CASE
         CASE IOF.SI.DEPT<1,LN2> # ""
            DEFAULT = IOF.SI.DEPT<1,LN2>
         CASE LN2 > 1
            DEFAULT = IOF.SI.DEPT<1,LN2-1>
         CASE 1
            O.R = "R"
      END CASE
      CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE = "END" AND REQUEST = "A"
            P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IOF.SI.DEPT = DELETE(IOF.SI.DEPT,1,LN2,0)
            IOF.SI.NO = DELETE(IOF.SI.NO,1,LN2,0)
            IOF.SI.DESC = DELETE(IOF.SI.DESC,1,LN2,0)
            GOTO 3199
         CASE VALUE = "END"
            P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
            P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.DEPT<1,LN> "L#5"
            P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.NO<1,LN> "L#10"
            P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.DESC<1,LN> "L#55"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            GOTO 3199
      END CASE
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE
         ERRMSG = "Cannot locate Department # ":VALUE
         GOSUB 91000; GOTO 3110
      END
      IOF.SI.DEPT<1,LN2> = VALUE
3120*
      X = 9; Y = SLN; TYP = 1; MAXL = 10; O.R = "O"
      HMSG = "Enter Special Instructions Reference Number."
      BEGIN CASE
         CASE IOF.SI.NO<1,LN2> # ""
            DEFAULT = IOF.SI.NO<1,LN2>
         CASE LN2 > 1 AND IOF.SI.DEPT<1,LN2> = IOF.SI.DEPT<1,LN2-1>
            DEFAULT = IOF.SI.NO<1,LN2-1>
         CASE 1
            O.R = "R"
      END CASE
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 3110
      IOF.SI.NO<1,LN2> = VALUE
3130*
      X = 20; Y = SLN; TYP = 1; MAXL = 55
      HMSG = "Enter Special Instructions"
      IF IOF.SI.DESC<1,LN2> # "" THEN
         O.R = "O"; DEFAULT = IOF.SI.DESC<1,LN2>
      END
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 3110
      IOF.SI.DESC<1,LN2> = VALUE
      LINES2 = DCOUNT(IOF.SI.DEPT,VM)
3199*
      RETURN
*
*---- Plate Line Number
3800*
      GOSUB 3900
      ECD.MINV = START.LINE2; ECD.MAXV = LAST.LINE2
      ECD.NUM = 43; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
         LNO = 0
      END ELSE
         LNO = ECD.RET.VALUE + 0
      END
      RETURN
*
*---- Display Special Instructions Scrolling Area
3900*
      START.LINE2 = 1 + INT((LN2-1)/PAGE.SIZE2) * PAGE.SIZE2
      LAST.LINE2 = START.LINE2 + PAGE.SIZE2 -1
      IF LAST.LINE2 > LINES2 THEN LAST.LINE2 = LINES2
      IF START.LINE2 = OLD.START2 THEN RETURN
      OLD.START2 = START.LINE2
      ECD.NUM = 28
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE2/PAGE.SIZE2 + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE2 TO LAST.LINE2
         SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
         P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.DEPT<1,N> "L#5"
         P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.NO<1,N> "L#10"
         P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:IOF.SI.DESC<1,N> "L#55"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE2
         SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- Plate Page Numbers
3950*
      ECD.NUM = 28
      SCV.REC(ECD.NUM)<ESN> = INT(LN2/PAGE.SIZE2 + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
3975*
      ECD.NUM = 29
      SCV.REC(ECD.NUM)<ESN> = INT(LINES2/PAGE.SIZE2 + 0.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*---- Error Message Routines
*
91000 ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
99999 *
      ECD.ACTION=99;CALL SCRN.EDIT
      RETURN
   END
