*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.EOM.POST
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - ICF.EOM.POST
* BY          - WALID YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION - This program is used to run inventory system end of
*             month post for FNGDs.
*T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
*T23278 markt 11/23/1998 * Make fiscal data multi-value by division.
*T25740 epitka 03/04/2002 * REV12
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*T27394 lross 04/24/2003 * Get cost from INV_AUDIT_HIST for receipts.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
*COPY>JCS.CPYLIB>EOM.ACCT
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
   MAT FILE.VARS=''
   MAT EDIT.COM.DRIVER=''
*
***** SETUP ERRMSG ROUTINE
*
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
   PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
   END
   CONO = INBUFF<1>
   FR.NEXT.PER = ""
   DIV.CODE = INBUFF<7>;* T23278
*
***** OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FILE IS MISSING';GOTO 93000
   OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE MISSING';GOTO 93000
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE ERRMSG='INV_RECEIPTS FILE MISSING';GOTO 93000
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG='INV_AUDIT_HIST FILE MISSING';GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE MISSING';GOTO 93000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE MISSING';GOTO 93000
   OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE MISSING';GOTO 93000
   OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MISSING';GOTO 93000
   OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE IS MISSING';GOTO 93000
*
***** GET CONO
*
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
   END
   MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE
      ERRMSG = "OPS COMPANY RECORD IS MISSING"
      GOTO 93000
   END
   SYS.FISCAL = "ICFISCAL"
   STMT.HEAD = "FINISHED GOODS"
*COPY>ICSBP>FNGD.EOM.POST
   IF ECD.RET.VALUE = "END" THEN
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
   END
   READ FNGD.EOM FROM CONTROL, CONO:"FNGD.EOM" ELSE FNGD.EOM = ""
   FNGD.EOM<1,POS> = DATE()
   WRITE FNGD.EOM ON CONTROL, CONO:"FNGD.EOM"
   CLEARFILE EOM.TRANS
   CLEARFILE POST.REJECTS
   PRR.SEQ = 10000
   OLD.PROD.WHSE = "!@#$%^&*"; OLD.PROD = "!@#$%^&*"; OLD.CATG = "!@#$%^&*"
   MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0
   PD.INV.ACCT = GLTB.INV
   PD.INV.LEVEL = COA.LEVEL
   MATREAD COA.REC FROM COA, CONO : GLTB.INV.ADJ ELSE COA.LEVEL = 0
   PD.ADJ.ACCT = GLTB.INV.ADJ
   PD.ADJ.LEVEL = COA.LEVEL
   MATREAD COA.REC FROM COA, CONO : GLTB.WIP.CLR ELSE COA.LEVEL = 0
   WIP.CLR.ACCT = GLTB.WIP.CLR
   WIP.CLR.LEVEL = COA.LEVEL
   MATREAD COA.REC FROM COA, CONO : GLTB.FNGD.VAR ELSE COA.LEVEL = 0
   FNGD.VAR.ACCT = GLTB.FNGD.VAR
   FNGD.VAR.LEVEL = COA.LEVEL
   DATA = 1
   LOOP
      READNEXT INAH.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # INAH.ID[1,3] THEN GOTO 999
      INAH.SEQ=INAH.ID[4,99]
      MATREADU INAH.REC FROM INV_AUDIT_HIST, INAH.ID ELSE      
         RELEASE INV_AUDIT_HIST, INAH.ID                      
         MAT PRR.REC = ''                                   
         PRR.JOB=INAH.SEQ
         PRR.FILE = 'INV_AUDIT_HIST'                         
         PRR.ERR = 'CANNOT LOCATE'                          
         PRR.SEQ = PRR.SEQ + 1                              
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
         GOTO 999                                           
      END                                                   
      IF INAH.GLA.DATE # "" AND INAH.GLA.DATE # "P" THEN      
         RELEASE INV_AUDIT_HIST, INAH.ID                      
         GOTO 999                                           
      END                                                   
      IF INAH.PERIOD = '' THEN INAH.PERIOD = PERIOD           
      IF INAH.PERIOD # PERIOD THEN                           
         RELEASE INV_AUDIT_HIST, INAH.ID                      
         GOTO 999                                           
      END                                                   
      MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE THEN   
         IF WHS.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN   
            RELEASE INV_AUDIT_HIST, INAH.ID                 
            GOTO 999                                      
         END                                               
      END                                                   
      BEGIN CASE
         CASE INAH.TYPE='R'
            MATREAD INV.REC FROM INVENTORY, CONO:INAH.PROD ELSE  
               MAT PRR.REC = ""                                   
               PRR.JOB = INAH.SEQ                                   
               PRR.FILE = "INVENTORY"                             
               PRR.ID = INAH.PROD                                 
               PRR.ERR = "CANNOT LOCATE"                          
               PRR.SEQ = PRR.SEQ + 1                              
               MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
               GOTO 999                                           
            END                                                  
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE   
               MAT PRR.REC = ""                                   
               PRR.JOB=INAH.SEQ
               PRR.FILE = "CATEGORY"                              
               PRR.ID = INV.LINE                                  
               PRR.ERR = "CANNOT LOCATE"                          
               PRR.SEQ = PRR.SEQ + 1                              
               MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
               GOTO 999                                           
            END                                                  
            GOSUB PROCESS.RECEIPTS
         CASE INAH.TYPE='A'
            IF OLD.PROD # INAH.PROD THEN                           
               MATREAD INV.REC FROM INVENTORY, CONO:INAH.PROD ELSE 
                  RELEASE INV_AUDIT_HIST, INAH.ID                   
                  MAT PRR.REC = ""                                
                  PRR.JOB=INAH.SEQ
                  PRR.FILE = "INVENTORY"                          
                  PRR.ID = INAH.PROD                               
                  PRR.ERR = "CANNOT LOCATE"                       
                  PRR.SEQ = PRR.SEQ + 1                           
                  MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ       
                  GOTO 999                                        
               END                                                
               OLD.PROD = INAH.PROD                                
            END                                                   
            IF OLD.CATG # INV.LINE THEN                           
               MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE 
                  RELEASE INV_AUDIT_HIST, INAH.ID                   
                  MAT PRR.REC = ""                           
                  PRR.JOB=INAH.SEQ
                  PRR.FILE = "CATEGORY"                      
                  PRR.ID = INV.LINE                          
                  PRR.ERR = "CANNOT LOCATE"                  
                  PRR.SEQ = PRR.SEQ + 1                      
                  MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ  
                  GOTO 999                                   
               END                                           
               OLD.CATG = INV.LINE                           
            END                                              
            GOSUB PROCESS.ADJUSTMENTS
      END CASE
999 *
   REPEAT
   GOTO 99999
*
**************************************************************************
****** S U B R O U T I N E S *********************************************
**************************************************************************
*
*********************
PROCESS.ADJUSTMENTS: 
*********************
*
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING FINISHED GOODS ADJUSTMENT - ':INAH.SEQ "L#10" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
   AMT=INAH.EXT.COST
   BEGIN CASE
      CASE AMT + 0 GE 0
         TRAN.COST = AMT
         DB.CR = 2
      CASE AMT + 0 < 0
         TRAN.COST = 0 - AMT
         DB.CR = 1
      CASE 1
         RELEASE INV_AUDIT_HIST,INAH.ID 
         GOTO 999
   END CASE
   PROD.WHSE = INAH.PROD : "!" : INAH.WHSE
   IF OLD.PROD.WHSE # PROD.WHSE THEN
      OLD.PROD.WHSE = PROD.WHSE
      NEW.REC = 0; NEW.PTR = 0
   END
   BEGIN CASE
      CASE INAH.ACCT = PD.INV.ACCT
      CASE INAH.ACCT # ""
         INAH.ACCT = INAH.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ACCT))
         INAH.ACCT = INAH.ACCT[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : INAH.ACCT ELSE COA.LEVEL = 0
         PD.INV.ACCT = INAH.ACCT
         PD.INV.LEVEL = COA.LEVEL
      CASE GLTB.INV = PD.INV.ACCT
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0
         PD.INV.ACCT = GLTB.INV
         PD.INV.LEVEL = COA.LEVEL
   END CASE
   BEGIN CASE
      CASE INAH.ADJ.ACCT = PD.ADJ.ACCT
      CASE INAH.ADJ.ACCT # ""
         INAH.ADJ.ACCT = INAH.ADJ.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ADJ.ACCT))
         INAH.ADJ.ACCT = INAH.ADJ.ACCT[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : INAH.ADJ.ACCT ELSE COA.LEVEL = 0
         PD.ADJ.ACCT = INAH.ADJ.ACCT
         PD.ADJ.LEVEL = COA.LEVEL
      CASE GLTB.INV.ADJ = PD.ADJ.ACCT
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.INV.ADJ ELSE COA.LEVEL = 0
         PD.ADJ.ACCT = GLTB.INV.ADJ
         PD.ADJ.LEVEL = COA.LEVEL
   END CASE
   BEGIN CASE
      CASE PD.ADJ.LEVEL < 1
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
      CASE 1
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
         IF WHS.DIV # '' THEN
            T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
         END ELSE
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
         END
   END CASE
   ON DB.CR GOSUB ADJ.DEBIT,ADJ.CREDIT
   BEGIN CASE
      CASE PD.INV.LEVEL < 1
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
      CASE 1
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
         IF WHS.DIV # '' THEN
            T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
         END ELSE
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
         END
   END CASE
   ON DB.CR GOSUB ADJ.CREDIT,ADJ.DEBIT
   INAH.GLA.DATE = "P"
   MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
   RETURN
*
*
**************
ADJ.DEBIT: 
**************
*
   ETR.ID = CONO : T.ACCT : OLD.PROD.WHSE : "!D*" : NEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
   END
   ETR.AMT = ETR.AMT + TRAN.COST
   LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>
   INS INAH.DATE BEFORE ETR.DATE<1,PTR>
   INS TRAN.COST BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN NEW.PTR = 1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*************
ADJ.CREDIT: 
*************
*
   ETR.ID = CONO : T.ACCT : OLD.PROD.WHSE : "!C*" : NEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
   END
   ETR.AMT = ETR.AMT - TRAN.COST
   LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>
   INS INAH.DATE BEFORE ETR.DATE<1,PTR>
   INS (0 - TRAN.COST) BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN NEW.PTR = 1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*****************
PROCESS.RECEIPTS: 
*****************
*
   NEW.REC=0
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING FINISHED GOODS RECEIPT - ':INAH.SEQ "L#10" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF PERIOD=INAH.PERIOD THEN
      BEGIN CASE 
         CASE INAH.ACCT = INV.ACCT 
         CASE INAH.ACCT # "" 
            INAH.ACCT = INAH.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ACCT)) 
            INAH.ACCT = INAH.ACCT[1,IN.ACCT.LEN] 
            MATREAD COA.REC FROM COA, CONO : INAH.ACCT ELSE COA.LEVEL = 0 
            INV.ACCT = INAH.ACCT
            INV.LEVEL = COA.LEVEL
         CASE GLTB.INV = INV.ACCT 
         CASE 1 
            MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0 
            INV.ACCT = GLTB.INV
            INV.LEVEL = COA.LEVEL
      END CASE 
      BEGIN CASE 
         CASE INV.LEVEL < 1 
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
         CASE 1 
            MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
            IF WHS.DIV # '' THEN 
               T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
            END ELSE 
               T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
            END
      END CASE 
*T27394 v
*     INVR.ID=CONO:INAH.RECP.NO
*     MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
*        AMT = INVR.TOT.COST
         AMT = INAH.EXT.COST
         BEGIN CASE 
            CASE AMT + 0 > 0 
               TRAN.AMT = AMT 
               GOSUB RECP.DEBIT 
            CASE AMT + 0 < 0 
               TRAN.AMT = 0 - AMT 
               GOSUB RECP.CREDIT 
         END CASE 
         BEGIN CASE 
            CASE WIP.CLR.LEVEL < 1 
               T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
            CASE 1 
               MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC=''
               IF WHS.DIV # '' THEN 
                  T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
               END ELSE 
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
               END
         END CASE 
         BEGIN CASE 
            CASE AMT + 0 > 0 
               TRAN.AMT = AMT 
               GOSUB RECP.CREDIT 
            CASE AMT + 0 < 0 
               TRAN.AMT = 0 - AMT 
               GOSUB RECP.DEBIT 
         END CASE 
*T27394 END
   END
*T27394 RELEASE INV_RECEIPTS, INVR.ID
   INAH.GLA.DATE = "P"
   MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
   RETURN
*
************
RECP.DEBIT: 
************
*
   ETR.ID = CONO : T.ACCT : INAH.PROD:"!":INAH.WHSE : "!D*" : NEW.REC 
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE                        
      MAT ETR.REC = ""                                                 
   END                                                                
   ETR.AMT = ETR.AMT + TRAN.AMT                                       
   LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL       
   INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>                                  
   INS INAH.DATE BEFORE ETR.DATE<1,PTR>                           
   INS TRAN.AMT BEFORE ETR.TAMT<1,PTR>                                
   IF PTR > 99 THEN NEW.REC = NEW.REC+1                               
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID                              
   RETURN                                                             
*                                                                  
****************
RECP.CREDIT: 
****************
*
   ETR.ID = CONO : T.ACCT : INAH.PROD:"!":INAH.WHSE : "!C*" : NEW.REC 
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE                        
      MAT ETR.REC = ""                                                 
   END                                                                
   ETR.AMT = ETR.AMT - TRAN.AMT                                       
   LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL       
   INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>         
   INS INAH.DATE BEFORE ETR.DATE<1,PTR>  
   INS (0 - TRAN.AMT) BEFORE ETR.TAMT<1,PTR> 
   IF PTR > 99 THEN NEW.REC = NEW.REC+1      
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID     
   RETURN                                    
*
91000 *
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 *
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99000 *
   IF FR.NEXT.PER = "" THEN
      INBUFF<5> = "END"
      PROCWRITE INBUFF
   END
99999 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
END
