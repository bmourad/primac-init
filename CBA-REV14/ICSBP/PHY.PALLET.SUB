      SUBROUTINE PHY.PALLET.SUB(CONO,WHSE,LOC,MAT TEMP.REC)
*COPY>CPYLIB>SCOMMON1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*********************************************************************
* REVISION - [08.1]
* PROGRAM  - PHY.PALLET.SUB
* AUTHOR   -
* DATE     - 04/03/94
* DESCRIPTION
* This program is used to maintain the PHY.INV file.
 *T25740 edvard 07/19/2001 * Replaced COM.STOCK.REC,COM.TRN or 
 *                           COM.TRN.FNGD with R12ICS.COM      
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*
*--- SETUP SYSTEM ERROR MESSAGES
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
*
      DIM TEMP.REC(16)
      EQU TEMP.PROD   TO TEMP.REC(1)
      EQU TEMP.SKRL   TO TEMP.REC(2)
      EQU TEMP.ONHAND TO TEMP.REC(3)
      EQU TEMP.DIA    TO TEMP.REC(4)
      EQU TEMP.COST   TO TEMP.REC(5)
      EQU TEMP.DESC   TO TEMP.REC(6)
      EQU TEMP.PO     TO TEMP.REC(7)
      EQU TEMP.YIELD  TO TEMP.REC(8)
      EQU TEMP.GRS.WT TO TEMP.REC(9)
      EQU TEMP.TARE   TO TEMP.REC(10)
      EQU TEMP.NET.WT TO TEMP.REC(11)
      EQU TEMP.RS.CNT TO TEMP.REC(12)
      EQU TEMP.QTY    TO TEMP.REC(13)
      EQU TEMP.SQTY   TO TEMP.REC(14)
      EQU TEMP.LEN    TO TEMP.REC(15)
      EQU TEMP.VENDOR TO TEMP.REC(15)
*
      SCREEN DEFINE;PHY.PALLET.SUB
      SCREEN FORMAT
      SCREEN COUNT;;41
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      CURR.REF.NO = ""
      GOSUB 8900
*
      S$DATA(1)<S$SCR>  = TEMP.SKRL
      S$DATA(2)<S$SCR>  = TEMP.PO 
      S$DATA(3)<S$SCR>  = TEMP.PROD
      S$DATA(6)<S$SCR>  = TEMP.DESC
      S$DATA(8)<S$SCR>  = WHSE
      S$DATA(9)<S$SCR>  = LOC
      S$DATA(11)<S$SCR> = TEMP.GRS.WT
      S$DATA(12)<S$SCR> = TEMP.TARE
      S$DATA(13)<S$SCR> = TEMP.NET.WT
      S$DATA(31)<S$SCR> = TEMP.YIELD
      S$DATA(40)<S$SCR> = INV.UNIT<1,2>
      SCREEN DISPLAY;;ALL
      LINES = DCOUNT(TEMP.RS.CNT<1,1>,SVM)
      GOSUB 7600
      IF LINES THEN
         FOR REF.NO = 1 TO LINES
            S$DATA(42)<S$SCR,REF.NO> = TEMP.RS.CNT<1,1,REF.NO>
            S$DATA(43)<S$SCR,REF.NO> = TEMP.SQTY<1,1,REF.NO>
            S$DATA(44)<S$SCR,REF.NO> = TEMP.LEN<1,1,REF.NO>
         NEXT REF.NO
         REF.NO = 1
         GOSUB 7900
      END ELSE
         IF TEMP.GRS.WT = "" THEN
            FOR I = 1 TO 3
               ON I GOSUB 1500,1600,1650
               IF S$VALUE = "END" THEN GOTO 99999
            NEXT I
         END
         GOSUB 7000
      END
*
*---- Prompt line
*
      MORE = 1
      LOOP
         SCREEN FIELD;;51
         SCREEN INPUT;;51
         OPTION = S$VALUE
         BEGIN CASE
            CASE OPTION = "END" OR OPTION = "E"
               MORE = 0
            CASE OPTION = "Q"
               GOSUB 7000
            CASE NOT(NUM(OPTION))
               ERRMSG = "Invalid entry, please re-enter"
               GOSUB 91000
            CASE OPTION < 1 OR OPTION > 3
               ERRMSG = "Out of range, please re-enter"
               GOSUB 91000
            CASE 1
               ON OPTION GOSUB 1500,1600,1650
         END CASE
      WHILE MORE > 0 DO REPEAT
      GOTO 99999
*
*---- Get Gross weight
1500*
      SCREEN FIELD;;11
      S$MINV = TEMP.TARE
      S$MAXV = 99999999
      SCREEN INPUT;;11;RETURN
      TEMP.GRS.WT = S$VALUE
      TEMP.NET.WT = TEMP.GRS.WT - TEMP.TARE
      S$DATA(13)<S$SCR> = TEMP.NET.WT
      SCREEN DISPLAY;;13
      IF LINES THEN GOSUB 7600
      RETURN
*
*---- Get Tare
1600*
      SCREEN FIELD;;12
      S$MINV = 0
      S$MAXV = TEMP.GRS.WT
      SCREEN INPUT;;12;RETURN
      TEMP.TARE = S$VALUE
      TEMP.NET.WT = TEMP.GRS.WT - TEMP.TARE
      S$DATA(13)<S$SCR> = TEMP.NET.WT
      SCREEN DISPLAY;;13
      IF LINES THEN GOSUB 7600
      RETURN
*
*---- Get Net weight
1650*
      SCREEN FIELD;;13
      SCREEN INPUT;;13;RETURN
      TEMP.NET.WT = S$VALUE
      TEMP.GRS.WT = TEMP.NET.WT + TEMP.TARE
      S$DATA(11)<S$SCR> = TEMP.GRS.WT
      SCREEN DISPLAY;;11
      IF LINES THEN GOSUB 7600
      RETURN
*
*---- Pallet Info
7000*
      ANCORE = 1
      IF LINES = 0 THEN
         ACTION = "A"
         GOTO 7010
      END
      LOOP
         SCREEN FIELD;;52
         SCREEN INPUT;;52
         ACTION = S$VALUE
7010 *
         BEGIN CASE
            CASE ACTION = "" OR ACTION = "E" OR ACTION = "END"
               ANCORE = 0
            CASE ACTION = "A"
               REF.NO = LINES
               LOOP
                  REF.NO = REF.NO + 1
                  GOSUB 7900
                  GOSUB 7100
               WHILE LINES = REF.NO DO
               REPEAT
               REF.NO = LINES
               CURR.REF.NO = ""
               GOSUB 7900
            CASE ACTION = "C"
               GOSUB 7800
               IF LN.NO THEN
                  REF.NO = LN.NO
                  GOSUB 7110
               END
            CASE ACTION = "D"
               GOSUB 7800
               IF LN.NO THEN
                  REF.NO = LN.NO
                  GOSUB 7700
                  LINES = DCOUNT(TEMP.RS.CNT<1,1>,SVM)
                  IF REF.NO > 1 AND REF.NO > LINES THEN REF.NO = REF.NO - 1
                  CURR.REF.NO = ""
                  GOSUB 7900
               END
            CASE ACTION = "S" OR ACTION = "SF"
               REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT) * LINE.COUNT + LINE.COUNT
               IF REF.NO > LINES THEN REF.NO = 1
               GOSUB 7900
            CASE ACTION = "SR"
               REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT) * LINE.COUNT - LINE.COUNT
               IF REF.NO < 1 THEN REF.NO = 1
               GOSUB 7900
            CASE ACTION = "ST"
               REF.NO = 1
               GOSUB 7900
            CASE ACTION = "SB"
               REF.NO = LINES
               GOSUB 7900
            CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
               LN.NO = ACTION[2,99] + 0
               IF LN.NO < 1 OR LN.NO > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  REF.NO = LN.NO
                  GOSUB 7900
               END
         END CASE
      WHILE ANCORE DO REPEAT
      RETURN
*
*---- Get Pallet Info
7100*
      GOSUB 7900
      S$VAL = REF.NO
      SCREEN DISPLAY;;41
*
*---- # of rolls / cartons
7110*
      S$VAL = REF.NO
      SCREEN FIELD;;42
      SCREEN INPUT;;42;GOTO 7199
      RS.CNT = S$VALUE
*
*---- Get receipt qty
7120*
      S$VAL = REF.NO
      SCREEN FIELD;;43
      S$TYP = ICR.TYPE
      S$SCALER = ICR.SCAL
      SCREEN INPUT;;43;GOTO 7110
      QTY = INT(((S$VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
      SQTY = INT(((QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
*
*---- Get roll/skid/carton length
7130*
      S$VAL = REF.NO
      SCREEN FIELD;;44
      SCREEN INPUT;;44;GOTO 7120
      LEN = S$VALUE
*
      TEMP.RS.CNT<1,1,REF.NO> = RS.CNT
      TEMP.QTY<1,1,REF.NO> = QTY
      TEMP.SQTY<1,1,REF.NO> = SQTY
      TEMP.LEN<1,1,REF.NO> = LEN
      LINES = DCOUNT(TEMP.RS.CNT<1,1>,SVM)
      GOSUB 7600
      RETURN
7199*
      RETURN
*
*---- Calculate totals
7600*
      TEMP.ONHAND = TEMP.RS.CNT<1,1,1> * TEMP.QTY<1,1,1>
      TOT.LEN = TEMP.RS.CNT<1,1,1> * TEMP.LEN<1,1,1>
      FOR T = 2 TO LINES
         TEMP.ONHAND = TEMP.ONHAND + TEMP.RS.CNT<1,1,T> * TEMP.QTY<1,1,T>
         TOT.LEN = TOT.LEN + TEMP.RS.CNT<1,1,T> * TEMP.LEN<1,1,T>
      NEXT T
* Get weight quantity conversion by Kilogram (gram * 1000)
      TEMP.ONHAND = INT(((TEMP.ONHAND / ICR.DV1 ) * ICR.MT1 ) / ICR.DV2 + .5)
      CHK.WT = INT(TEMP.YIELD / 10000 * TEMP.ONHAND / 1000 + .5)
      VAR.WT = TEMP.NET.WT - CHK.WT
      BEGIN CASE
         CASE CHK.WT = 0
            VAR.PCT = 0
         CASE VAR.WT < 0
            VAR.PCT = INT(VAR.WT * 100 / CHK.WT * 100 - .5)
         CASE 1
            VAR.PCT = INT(VAR.WT * 100 / CHK.WT * 100 + .5)
      END CASE
      S$DATA(32)<S$SCR> = TOT.LEN
      SCREEN DISPLAY;;32
      S$DATA(33)<S$SCR> = OCONV(TEMP.ONHAND,ICR.CNV1)
      SCREEN DISPLAY;;33
      S$DATA(34)<S$SCR> = CHK.WT
      SCREEN DISPLAY;;34
      S$DATA(35)<S$SCR> = VAR.WT
      SCREEN DISPLAY;;35
      S$DATA(36)<S$SCR> = VAR.PCT
      SCREEN DISPLAY;;36
      RETURN
*
*---- Delete a Pallet line
7700*
      TEMP.RS.CNT = DELETE(TEMP.RS.CNT,1,1,REF.NO)
      TEMP.QTY = DELETE(TEMP.QTY,1,1,REF.NO)
      TEMP.SQTY = DELETE(TEMP.SQTY,1,1,REF.NO)
      TEMP.LEN = DELETE(TEMP.LEN,1,1,REF.NO)
      S$DATA(42)<S$SCR> = DELETE(S$DATA(42),S$SCR,REF.NO,0)
      S$DATA(43)<S$SCR> = DELETE(S$DATA(43),S$SCR,REF.NO,0)
      S$DATA(44)<S$SCR> = DELETE(S$DATA(44),S$SCR,REF.NO,0)
      RETURN
*
*---- Get Line Number
7800*
      GOSUB 7900
      S$DATA(53)<S$SCR> = ""
      SCREEN FIELD;;53
      S$MINV = CURR.REF.NO
      S$MAXV = S$MINV + LINE.COUNT - 1
      IF S$MAXV > LINES THEN S$MAXV = LINES
      SCREEN INPUT;;53
      LN.NO = S$VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      RETURN
*
*---- Scroll Whse / Loc
7900*
      START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = LINES
      SCREEN MULTI;;C;41;42;43;44
      PGNO = INT(REF.NO/LINE.COUNT+.9)
      IF PGNO = 0 THEN PGNO = 1
      S$DATA(49)<S$SCR> = PGNO
      SCREEN DISPLAY;;49
      PGS = INT(LINES/LINE.COUNT+.9)
      IF PGS = 0 THEN PGS = 1
      S$DATA(50)<S$SCR> = PGS
      SCREEN DISPLAY;;50
      RETURN
*
*---- Inventory Conversions
8900*
*COPY>ICSBP>INV.UM.CNV
      RETURN
*
*---- SYSCOM Calls
* 91000 *
* PRINT @(23,0):CL:ERRMSG:
* INPUT XXX:
* PRINT @(23,0):CL:
91000 *
      ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
      ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
      ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999 RETURN
      END
