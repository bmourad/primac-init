SUBROUTINE RECP.TRAN.HIST.INQ(CONO,RECP.NUM)
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.INQ
*
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - RECP.TRAN.HIST.INQ
* BY          - EDVARD PITKA
* DATE        - 05/07/2001
* DESCRIPTION -
*
*T25740 edvard 07/19/2001 *  REV12
*ENDDOC
**********************************************
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.CNV
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
OPEN '','INV_AUDIT_BAL' TO INV_AUDIT_BAL ELSE ERRMSG = 'INV_AUDIT_BAL FILE IS MISSING'; GOTO 93000
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG = 'INV_AUDIT_HIST FILE IS MISSING'; GOTO 93000
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE ERRMSG = 'INV_RECEIPTS FILE IS MISSING'; GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','ICS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
*
ESN=ECD.SCRN.NO
*
PAGE.SIZE = 6
LN.CNT = 0
CNV = "MD0,"
LN.CNT=0
START=1
*
101 *
*
GOSUB GET.DATA
GOSUB BUILD.SCREEN
ECD.ACTION=3 ; CALL SCRN.EDIT
;*
;* Main Prompt
;*
DONE=0
LOOP
UNTIL (DONE) DO
  ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
  BEGIN CASE
    CASE ACTION = "E" OR ACTION='END' OR ACTION=''
      DONE=1
    CASE ACTION[1,1] = "S"
      GOSUB SCROLL
    CASE 1
      ERRMSG = "Invalid input - please re-enter."
      GOSUB 91000
  END CASE
REPEAT
*
ECD.ACTION = 99 ; CALL SCRN.EDIT     ;*T21177
GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
**********
GET.DATA: 
**********
*
MATREAD INVR.REC FROM INV_RECEIPTS, CONO:RECP.NUM ELSE
  ERRMSG = RECP.NUM:" is not a valid receipt tracking ID."
  GOTO 93000
END
MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE MAT INV.REC=""
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
*COPY>ICSBP>INV.UM.CNV
*
SEL.WHSE = '';  SEL.LOC = ''
SEL.SERIAL = '';SEL.MILL = ''
SEL.QTY = '';    SEL.AMOUNT = ''
SEL.DATE = '';  SEL.PERIOD = ''
SEL.RECNO = ''; SEL.OPER.ID = ''
SEL.DIV = '';   SEL.SOURCE = ''
SEQ.ARR = INVR.AUDIT.NO
ID.CNT = DCOUNT(SEQ.ARR,VM)
IF ID.CNT >=1 THEN
  FOR I = 1 TO ID.CNT
    SEQ.ARR<1,I> = CONO:SEQ.ARR<1,I>
  NEXT I
  CONVERT VM TO AM IN SEQ.ARR
  FORMLIST SEQ.ARR TO 0
  CMD = 'SSELECT INV_AUDIT_HIST BY @ID BY DIV BY INAH_WHSE BY INAH_LOC'
  PERFORM CMD RTNLIST SYSLIST CAPTURING RESPONSE
  DONE = 0 ; LN.CNT=0
  LOOP
    READNEXT SEL.ID FROM SYSLIST ELSE DONE=1
  UNTIL (DONE) DO
    MATREAD INAH.REC FROM INV_AUDIT_HIST, SEL.ID THEN
      LN.CNT += 1
      SEL.SOURCE<1,LN.CNT> = INAH.SRC
      SEL.DATE<1,LN.CNT> = INAH.DATE
      IF CATG.TRK.LVL='S' THEN
        SEL.SERIAL<1,LN.CNT> = INAH.SERIAL
      END
      SEL.RECNO<1,LN.CNT> = INAH.TRAN
      SEL.DIV<1,LN.CNT> = INAH.DV.DP.CC[1,2]
      SEL.WHSE<1,LN.CNT> = INAH.WHSE
      SEL.LOC<1,LN.CNT> = INAH.LOC
      SEL.QTY<1,LN.CNT> = INAH.QTY
      SEL.AMOUNT<1,LN.CNT> = INAH.EXT.COST
      SEL.PERIOD<1,LN.CNT> = INAH.PERIOD
      MATREAD ISTK.REC FROM INV_SERIAL, CONO:INAH.SERIAL ELSE MAT ISTK.REC = ""
      SEL.MILL<1,LN.CNT> = ISTK.MILL.ID
      SEL.OPER.ID<1,LN.CNT> = INAH.OPER.ID
    END ELSE
      MAT INAH.REC = ""
    END
  REPEAT
END
RETURN
*
*************
BUILD.SCREEN: 
*************
*
SCV.REC(2)<ESN> = RECP.NUM
SCV.REC(9)<ESN> = INVR.PROD
SCV.REC(10)<ESN> = INV.FULL.DESC
SCV.REC(11)<ESN> = SEL.SOURCE
IF CATG.TRK.LVL='S' THEN
  SCV.REC(13)<ESN> = SEL.SERIAL
END
SCV.REC(17)<ESN> = SEL.RECNO
SCV.REC(14)<ESN> = SEL.DIV
SCV.REC(15)<ESN> = SEL.WHSE
SCV.REC(16)<ESN> = SEL.LOC
SCV.REC(19)<ESN> = SEL.AMOUNT
SCV.REC(22)<ESN> = SEL.PERIOD
SCV.REC(28)<ESN> = SEL.MILL
SCV.REC(24)<ESN> = SEL.OPER.ID
SCV.REC(12)<ESN>='' ; SCV.REC(18)<ESN>=''
FOR L = 1 TO LN.CNT
  SCV.REC(12)<ESN,L> = OCONV(SEL.DATE<1,L>,"D2/")
  ROND = 0.5
  IF SEL.QTY<1,L> < 0 THEN ROND = -0.5
  SCV.REC(18)<ESN,L> = OCONV(INT(((SEL.QTY<1,L>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
  SCV.REC(29)<ESN>=INV.UNIT<1,2>
NEXT L
RETURN
*
************
SCROLL: 
************
*
BEGIN CASE                                      
  CASE ACTION = "S" OR ACTION = "SF"            
    IF LN.CNT > PAGE.SIZE THEN                  
      START +=PAGE.SIZE                         
      IF START > LN.CNT THEN START = 1          
    END                                         
  CASE ACTION = "SR"                            
    IF LN.CNT > PAGE.SIZE THEN                  
      START -=PAGE.SIZE                         
      IF START<=0 THEN START = 1            
    END                                         
  CASE ACTION = "ST"                            
    START = 1                                   
  CASE ACTION = "SB"                            
START=LN.CNT
  CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])  
    START = ACTION[2,99]+0                      
    IF START < 1 OR START > LN.CNT THEN         
      ERRMSG = "** Invalid selection **"        
      GOSUB 91000                               
    END                                         
END CASE                                        
*
START=1+INT((START-1)/PAGE.SIZE)*PAGE.SIZE 
ECD.NUM=11;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=12;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=13;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=17;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=14;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=15;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=16;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=18;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=19;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=22;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=28;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=24;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
*
RETURN
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 RETURN
END
