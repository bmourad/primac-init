*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - ICS
* SOURCE      - ICSBP
* PROGRAM     - PHY.INV.LOAD
* DATE        - 02/26/97
* BY          - EDVARD PITKA, VERCOM SOFTWARE, INC
* DESCRIPTION - This report is used for physical inventory data
*               collection.
*T25740 edvard 11/13/2001 * REV12
*T26497 adelgado 04/04/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26556 adelgado 05/10/2002 * Not break up Seq correctly by whse and by
*                             loc.
*T27801 lross 12/04/2003 * Missing data for FNGD items.
*********************************************************************
*
*-----   INSERT EQUATES FROM CPYLIB
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>PHY.INV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)
*
EQU INV.UOM.STK TO INV.UNIT<1,2>
*
*-----   INITIALIZATION
*
*
*-----   SET UP THE ERRMSG ROUTINE FOR SYSCOM
*
GEN.DIV='00'
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
*-----   OPEN THE FILES
*
OPEN "","COMPANY" TO COMPANY ELSE
  ERRMSG = "COMPANY FILE IS MISSING"
  GOTO 93000
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
  ERRMSG = "INV.WHSE FILE IS MISSING"
  GOTO 93000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
  ERRMSG = "CATEGORY FILE IS MISSING"
  GOTO 93000
END
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
  ERRMSG = "WAREHOUSE FILE IS MISSING"
  GOTO 93000
END
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
  ERRMSG = "INV_SERIAL FILE IS MISSING"
  GOTO 93000
END
OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
  ERRMSG = "INV_RECEIPTS FILE IS MISSING"
  GOTO 93000
END
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
  ERRMSG = "INV_RECP_WHSE FILE IS MISSING"
  GOTO 93000
END
OPEN "","INVENTORY" TO INVENTORY ELSE
  ERRMSG = "INVENTORY FILE IS MISSING"
  GOTO 93000
END
OPEN "","PHY.INV" TO PHY.INV ELSE
  ERRMSG = "PHY.INV FILE IS MISSING"
  GOTO 93000
END
OPEN "","PHY.XREF" TO PHY.XREF ELSE
  ERRMSG = "PHY.XREF FILE IS MISSING"
  GOTO 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
  ERRMSG = "CONTROL FILE IS MISSING"
  GOTO 93000
END
*
*-----   READ COMPANY NAME
*
PROCREAD BUFFER ELSE
  ERRMSG = " CANNOT PERFORM PROCREAD"
  GOTO 93000
END
CONO = BUFFER<1>
BUF.DIV = BUFFER<6>
BUF.WHSE = BUFFER<7>
START.LOC=BUFFER<8>
END.LOC=BUFFER<9>
SUPP.ZERO = BUFFER<11>
PRINT.FLAG = BUFFER<13>
BUF.PROD=BUFFER<10>
ERR.FLG = ""; ERR = ""
;*
;* Main Loop
;*
DONE=0
FIRST = 1
TODAY = DATE()
MAT PHYSI.REC = ""
SAVE.COMBO = "";COMBO.ID = ""
PHY.ID=''
REC.CNT = 0
LOOP
  READNEXT ISTK.ID ELSE
    IF PHY.ID#'' THEN
      GOSUB WRITE.PHY.INV
    END
    DONE=1
  END
UNTIL (DONE) DO 
  MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
    WHSE.ID=CONO:ISTK.WHSE
    MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID THEN
      IF WHS.DIV='' THEN WHS.DIV=GEN.DIV
      DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
      IF DIV.POS<1,1>='' THEN DIV.POS=DIV.POS<1,2>
      PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
      IF PERIOD<1,1>='' THEN PERIOD=PERIOD<1,2>
      IF ISTK.RECP.PERIOD<= PERIOD THEN
        IWH.ID = CONO:ISTK.PROD:"!":ISTK.WHSE
        MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN
          INV.ID=CONO:ISTK.PROD
          MATREAD INV.REC FROM INVENTORY,INV.ID THEN
            MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
              IF (FIRST) THEN
                FIRST = 0
                OWHSE = ISTK.WHSE
                OLOC = ISTK.LOC
                OPROD = ISTK.PROD
                PXREF.ID=CONO:OWHSE:"!":OLOC
                GOSUB GET.PHYSI.REC
                REC.CNT = DCOUNT(PHYSI.PRODUCT,VM)
                GOSUB LOAD.SAVE.COMBO
              END
              BEGIN CASE
                CASE 'X':ISTK.WHSE # 'X':OWHSE
                  GOSUB WRITE.PHY.INV
                  PXREF.ID=CONO:ISTK.WHSE:"!":ISTK.LOC
                  GOSUB GET.PHYSI.REC
                  REC.CNT = DCOUNT(PHYSI.PRODUCT,VM)
                  GOSUB LOAD.SAVE.COMBO             
                  GOSUB 1000
                CASE ('X':ISTK.LOC#'X':OLOC OR ISTK.LOC='') AND NOT(FIRST)
                  GOSUB WRITE.PHY.INV
                  PXREF.ID=CONO:ISTK.WHSE:"!":ISTK.LOC 
                  GOSUB GET.PHYSI.REC                  
                  REC.CNT = DCOUNT(PHYSI.PRODUCT,VM)
                  GOSUB LOAD.SAVE.COMBO
                  GOSUB 1000
                CASE 1
                  GOSUB 1000
              END CASE
              OWHSE = ISTK.WHSE
              OLOC = ISTK.LOC
              OPROD = ISTK.PROD
            END
          END
        END
      END
    END
  END
REPEAT
*IF FIRST = 0 THEN
GOSUB 70000
*END
GOTO 999999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
****************
1000 *
****************
*
BEGIN CASE
  CASE CATG.TRK.LVL = "S"
    COMBO.ID = ISTK.PROD:ISTK.ID[4,99]
    LOCATE COMBO.ID IN SAVE.COMBO<1>,1 BY "AL" SETTING REC.CNT ELSE
      GOSUB SET.PHY.INV
      PHYSI.SERIAL<1,REC.CNT> = ISTK.ID[4,99]
      PHYSI.RECP.NO<1,REC.CNT> = ISTK.RECP
    END
  CASE CATG.TRK.LVL="R"
    ;* this is for FNGD only for now
    COMBO.ID=ISTK.PROD:ISTK.RECP:ISTK.WHSE:ISTK.LOC
    LOCATE COMBO.ID IN SAVE.COMBO<1>,1 BY "AL" SETTING REC.CNT ELSE
      GOSUB SET.PHY.INV                                            
      PHYSI.RECP.NO<1,REC.CNT> = ISTK.RECP  
*T27801 v
      MATREAD INVR.REC FROM INV_RECEIPTS,CONO:ISTK.RECP THEN
        PHYSI.PO<1,REC.CNT> = INVR.JOB
        PHYSI.VENDOR<1,REC.CNT> = INVR.CUST
        PHYSI.UNIT.COST<1,REC.CNT> = INVR.UNIT.COST
      END
*T27801 ^
    END                                                            
  CASE CATG.TRK.LVL='G'
    COMBO.ID = ISTK.PROD:ISTK.WHSE:ISTK.LOC
    LOCATE COMBO.ID IN SAVE.COMBO<1>,1 BY "AL" SETTING REC.CNT ELSE
      GOSUB SET.PHY.INV
    END
END CASE
IF REC.CNT THEN
  IF INV.PAP.TYPE='ROLL' OR INV.PAP.TYPE='LROLL' OR INV.PAP.TYPE='PCOAT' THEN
    IF ISTK.CUR.DIAM + 0 > 0 AND ISTK.CUR.QTY > 0 THEN ; * C35487
      PHYSI.PREV.DIA<1,REC.CNT> = PHYSI.PREV.DIA<1,REC.CNT> + ISTK.CUR.DIAM
      PHYSI.CURR.DIA<1,REC.CNT> = PHYSI.CURR.DIA<1,REC.CNT> + ISTK.CUR.DIAM
    END ELSE                                             ; * C35487
      PHYSI.PREV.DIA<1,REC.CNT> = 0                      ; * C35487
      PHYSI.CURR.DIA<1,REC.CNT> = 0                      ; * C35487
    END
  END
  IF INV.M.LINE='FNGD' THEN
    PHYSI.PREV.QTY<1,REC.CNT>+=ISTK.RSVB.QTY
    PHYSI.CURR.QTY<1,REC.CNT>+=ISTK.RSVB.QTY
  END ELSE
    PHYSI.PREV.QTY<1,REC.CNT>+=ISTK.CUR.QTY
    PHYSI.CURR.QTY<1,REC.CNT>+=ISTK.CUR.QTY
    PHYSI.PREV.SQTY<1,REC.CNT> += ISTK.CUR.STK.QTY
    PHYSI.CURR.SQTY<1,REC.CNT> += ISTK.CUR.STK.QTY
  END
END
RETURN
*
***************
SET.PHY.INV: 
***************
*
PHYSI.PERIOD = PERIOD
PHYSI.WHSE = ISTK.WHSE
PHYSI.LOC = ISTK.LOC
SAVE.COMBO = INSERT(SAVE.COMBO,1,REC.CNT,0,COMBO.ID)
PHYSI.PRODUCT = INSERT(PHYSI.PRODUCT,1,REC.CNT,0,ISTK.PROD)
MATREAD INV.REC FROM INVENTORY,CONO:PHYSI.PRODUCT<1,REC.CNT> ELSE MAT INV.REC = ""
PHYSI.COLOR = INSERT(PHYSI.COLOR,1,REC.CNT,0,INV.COLOR)
PHYSI.BSWT = INSERT(PHYSI.BSWT,1,REC.CNT,0,INV.BAS.WT)
PHYSI.MWT = INSERT(PHYSI.MWT,1,REC.CNT,0,INV.M.WT)
IF PRINT.FLAG = "N" THEN
  PHYSI.STATUS = INSERT(PHYSI.STATUS,1,REC.CNT,0,"PRINT")
  PHYSI.PRINT.DATE = TODAY
END ELSE
  PHYSI.STATUS = INSERT(PHYSI.STATUS,1,REC.CNT,0,"")
  PHYSI.PRINT.DATE = TODAY
END
PHYSI.UNIT = INSERT(PHYSI.UNIT,1,REC.CNT,0,INV.UOM.STK)
PHYSI.DESC = INSERT(PHYSI.DESC,1,REC.CNT,0,INV.DESC)
PHYSI.SERIAL = INSERT(PHYSI.SERIAL,1,REC.CNT,0,"")
PHYSI.RECP.NO = INSERT(PHYSI.RECP.NO,1,REC.CNT,0,"")
PHYSI.PREV.DIA = INSERT(PHYSI.PREV.DIA,1,REC.CNT,0,"")
PHYSI.CURR.DIA = INSERT(PHYSI.CURR.DIA,1,REC.CNT,0,"")
PHYSI.PREV.QTY = INSERT(PHYSI.PREV.QTY,1,REC.CNT,0,"")
PHYSI.CURR.QTY = INSERT(PHYSI.CURR.QTY,1,REC.CNT,0,"")
PHYSI.PREV.SQTY = INSERT(PHYSI.PREV.SQTY,1,REC.CNT,0,"")
PHYSI.CURR.SQTY = INSERT(PHYSI.CURR.SQTY,1,REC.CNT,0,"")
RETURN
*
****************
WRITE.PHY.INV: 
****************
*
FND = 1
LINE.CNT = 0
MATWRITE PHYSI.REC ON PHY.INV,PHY.ID  
WRITE PHY.SEQ ON PHY.XREF,PXREF.ID
WRITEU PHY.SEQ ON CONTROL,'PHY.INV'
RETURN
*
******************
LOAD.SAVE.COMBO: 
******************
*
SAVE.COMBO = ""
FOR DD = 1 TO REC.CNT
  BEGIN CASE
    CASE CATG.TRK.LVL='S' 
      SAVE.COMBO<1,DD> = PHYSI.PRODUCT<1,DD>:PHYSI.SERIAL<1,DD>
    CASE CATG.TRK.LVL='R'
      SAVE.COMBO<1,DD>=PHYSI.PRODUCT<1,DD>:PHYSI.RECP.NO<1,DD>:PHYSI.WHSE<1,DD>:PHYSI.LOC<1,DD>
    CASE CATG.TRK.LVL='G'
      SAVE.COMBO<1,DD> = PHYSI.PRODUCT<1,DD>PHYSI.WHSE<1,DD>:PHYSI.LOC<1,DD>
  END CASE
NEXT DD
RETURN
*
***************
70000 *
***************
*
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  MAT COMP.REC = ""
END
;*
;* get list of all valid warehouses for this company
;*
WHSE.CODE = ""
IF BUF.WHSE = "ALL" THEN
  IF BUF.DIV # "ALL" THEN
    SELECTINDEX "DIV_IDX",CONO:BUF.DIV FROM WAREHOUSE TO WHSE.LIST
  END ELSE
*    SELECTINDEX "DIV_IDX" FROM WAREHOUSE TO WHSE.LIST
SELECT WAREHOUSE TO WHSE.LIST
  END
70001 
  READNEXT WHSE.ID FROM WHSE.LIST THEN
    IF WHSE.ID[1,3] = CONO THEN
      WHSE.CODE<1,-1> = WHSE.ID
    END
    GOTO 70001
  END
END ELSE
  WHSE.CODE = CONO:BUF.WHSE
END
*
WCNT = DCOUNT(WHSE.CODE,VM)
FOR WPTR = 1 TO WCNT
  * T26497 v
  IF CO.INTR.WHSE # '' THEN
    IF CO.INTR.WHSE = WHSE.CODE<1,WPTR> THEN CONTINUE
  END
  * T26497 ^
  WHSE.ID=WHSE.CODE<1,WPTR>
  WHSE=WHSE.ID[4,99]
  MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID ELSE
    MAT WHSE.REC = ""
  END
  IF WHS.DIV='' THEN WHS.DIV=GEN.DIV
  DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
  IF DIV.POS<1,1>='' THEN DIV.POS=DIV.POS<1,2>
  PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
  IF PERIOD<1,1>='' THEN PERIOD=PERIOD<1,2>
  BEGIN CASE
    CASE BUF.PROD='ALL'
      SELECT INVENTORY TO INV.LIST
      EOI=0
      LOOP
        READNEXT INV.ID FROM INV.LIST ELSE EOI=1
      UNTIL EOI DO
        IF INV.ID[1,3]=CONO THEN
          PROD=INV.ID[4,99]
          GOSUB 7200
        END
      REPEAT
    CASE BUF.PROD#'ALL'
        PROD=BUF.PROD
        GOSUB 7200
  END CASE
NEXT WPTR
RETURN
*
*************
7200: 
*************
*
IWH.OK=1
IWH.ID=CONO:PROD:"!":WHSE
MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE
  IWH.OK=0
END
IF (IWH.OK) THEN
  ;*
  ;* if this product has never been received then
  ;* print only one data coll sheet without location
  ;*
  IF IWH.RECV.FI#"" THEN
*    LCNT = DCOUNT(WHS.LOC,VM)
*    FOR LPTR = 1 TO LCNT
*    PROCESS.LOC=0
*    BEGIN CASE
*      CASE START.LOC='ALL' AND END.LOC#'ALL'
*        IF WHS.LOC<1,LPTR> <= END.LOC THEN PROCESS.LOC=1
*      CASE START.LOC='ALL' AND END.LOC='ALL'
*        PROCESS.LOC=1
*      CASE START.LOC#'ALL' AND END.LOC='ALL'
*        IF WHS.LOC<1,LPTR> >= START.LOC THEN PROCESS.LOC=1
*      CASE START.LOC#'ALL' AND END.LOC#'ALL'
*        IF WHS.LOC<1,LPTR> >=START.LOC AND WHS.LOC<1,LPTR> <=END.LOC THEN
*          PROCESS.LOC=1
*        END
*    END CASE
*    IF (PROCESS.LOC) THEN
*      PXREF.ID=WHSE.ID:"!":WHS.LOC<1,LPTR>
*      READ PHY.SEQ FROM PHY.XREF,PXREF.ID ELSE
*        READU PHY.SEQ FROM CONTROL,"PHY.INV" ELSE PHY.SEQ = 100 
*        PHY.SEQ +=1                                             
*      END
*      PHYSI.ID=CONO:PHY.SEQ
*      MATREADU PHYSI.REC FROM PHY.INV, PHYSI.ID THEN
*        RELEASE PHY.INV, PHYSI.ID
*      END ELSE
*        MAT PHYSI.REC = ""
*        IF SUPP.ZERO='N' THEN
*          PHYSI.PERIOD = PERIOD
*          PHYSI.WHSE = WHSE.CODE<1,WPTR>[4,99]
*          PHYSI.LOC=''
*          PHYSI.PRODUCT=PROD
*          MATWRITE PHYSI.REC ON PHY.INV, PHYSI.ID
*          WRITE PHY.SEQ ON PHY.XREF,PXREF.ID
*          WRITE PHY.SEQ ON CONTROL,"PHY.INV"
*        END
*      END
*    END
*NEXT LPTR
  END ELSE
    IF SUPP.ZERO='N' THEN
      PXREF.ID=WHSE.ID
      READ PHY.SEQ FROM PHY.XREF,PXREF.ID ELSE                  
        READU PHY.SEQ FROM CONTROL,"PHY.INV" ELSE PHY.SEQ = 100 
        PHY.SEQ +=1                                             
      END                                                       
      PHYSI.ID=CONO:PHY.SEQ                                     
      MATREADU PHYSI.REC FROM PHY.INV, PHYSI.ID ELSE            
        MAT PHYSI.REC=''
        PHYSI.PERIOD = PERIOD                
        PHYSI.WHSE = WHSE.CODE<1,WPTR>[4,99] 
        PHYSI.PRODUCT=PROD
      END
      MATWRITE PHYSI.REC ON PHY.INV,PHYSI.ID
      WRITE PHY.SEQ ON PHY.XREF,PXREF.ID
      WRITE PHY.SEQ ON CONTROL,"PHY.INV"
    END
  END
END
RETURN
*
****************
GET.PHYSI.REC: 
****************
*
READU PHY.SEQ FROM PHY.XREF,PXREF.ID THEN
  PHY.ID=CONO:PHY.SEQ
  MATREADU PHYSI.REC FROM PHY.INV,PHY.ID ELSE
    MAT PHYSI.REC = ""
  END
END ELSE
  READU PHY.SEQ FROM CONTROL,"PHY.INV" ELSE PHY.SEQ = 100
  PHY.SEQ +=1
  PHY.ID=CONO:PHY.SEQ
  MAT PHYSI.REC=''
END
RETURN
*
*-----   CALLS FOR SYSCOM
*
91000 *
ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 *
ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 *
ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
999999 *
END
