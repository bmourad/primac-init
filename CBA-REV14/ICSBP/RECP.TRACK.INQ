SUBROUTINE RECP.TRACK.INQ(CONO,RECP.NUM,XSTAT)
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.INQ
*
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - RECP.TRACK.INQ
* BY          - EDVARD PITKA
*DATE         - 05/04/2001
* DESCRIPTION -
*T25740 edvard 07/19/2001 * 
*
*T25740 epitka 06/20/2002 * REDIPLAY THE SCREEN AS IT WAS BEFORE
*                           CHOOSING SI OPTION
*T27902 lross 01/27/2004 * For non-PRIMAC PO get Vendor from INV_RECEIPTS.
*ENDDOC
**********************************************
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.CNV
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>PO
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
OPEN '','INV_AUDIT_BAL' TO INV_AUDIT_BAL ELSE
  ERRMSG = 'INV_AUDIT_BAL FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
  ERRMSG = 'INV_AUDIT_HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
  ERRMSG = 'INV_RECEIPTS FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
  ERRMSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
END
OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
  ERRMSG = 'M.SCREENS FILE IS MISSING'; GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
END
OPEN '','DIVISION' TO DIVISION ELSE
  ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
END
OPEN '','PO' TO PO ELSE
  ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
END
*
SAVE.RECP.NUM = RECP.NUM
START = 1
ESN=ECD.SCRN.NO
PAGE.SIZE = 9
CNV = "MD0,"
GOSUB GET.DATA
GOSUB BUILD.SCREEN
ECD.ACTION=3 ; CALL SCRN.EDIT
;*
;* Main Prompt
;*
IF CATG.TRK.LVL='S' THEN
  PROMPT.NO = 16
END ELSE
  PROMPT.NO = 18
END
DONE = 0
LOOP
UNTIL (DONE) DO
  ECD.NUM=PROMPT.NO; ECD.ACTION=4; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
  BEGIN CASE
    CASE ACTION = "E" OR ACTION = "END"
      DONE = 1
    CASE ACTION = "H"
      ECD.SCRN.NO = ESN + 1;  HOLD.ESN=ESN
      CALL RECP.TRAN.HIST.INQ(CONO, SAVE.RECP.NUM)
      ECD.SCRN.NO = HOLD.ESN; ECD.ACTION = 3; CALL SCRN.EDIT
    CASE ACTION='SI' AND CATG.TRK.LVL='S'
      ECD.NUM = 19; ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
        CASE ACTION = "END"
*            GO 100
        CASE ACTION = ""
          NULL
        CASE ACTION < 1 OR ACTION > LN.CNT
          ERRMSG = "** Invalid selection **"
          GOSUB 91000
        CASE SEL.SERIAL<1,ACTION> = ""
          ERRMSG = "** Line ":ACTION:" has no serial number **"
          GOSUB 91000
        CASE 1
          READV TEST FROM INV_SERIAL, CONO:SEL.SERIAL<1,ACTION>, 1 THEN
            ECD.SCRN.NO = ESN + 2
            XSTAT=1
            SERIAL.NO = SEL.SERIAL<1,ACTION>
            CALL SER.TRACK.INQ(CONO,SERIAL.NO,XSTAT)
            IF XSTAT THEN ECD.ACTION = 99; CALL SCRN.EDIT
            ECD.SCRN.NO = ESN
            GOSUB BUILD.SCREEN
            ECD.ACTION=2; CALL SCRN.EDIT
            ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=2;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=5;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=20;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=21;ECD.ACTION=5;CALL SCRN.EDIT
            GOSUB DISP.DETAIL
          END ELSE
            ERRMSG = "Invalid serial number ":SEL.SERIAL<1,ACTION>:" on line ":ACTION
            GOSUB 91000
          END
      END CASE
    CASE ACTION [1,1] = "S"
      GOSUB SCROLL
    CASE 1
      ERRMSG = "Invalid input - please re-enter."
      GOSUB 91000
  END CASE
REPEAT
GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
**********
GET.DATA: 
**********
*
MATREAD INVR.REC FROM INV_RECEIPTS, CONO:RECP.NUM ELSE
  ERRMSG = RECP.NUM:" is not a valid receipt tracking ID."
  GOTO 93000
END
MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE MAT INV.REC=""
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
*COPY>ICSBP>INV.UM.CNV
MATREAD PO.REC FROM PO, CONO:INVR.PO ELSE MAT PO.REC = ""
LOCATE INVR.PROD IN PO.PROD.NUM<1> SETTING POS ELSE POS = ""
IF POS THEN
  VENDOR = PO.VEND.NO
END ELSE
*T27902 v
* VENDOR = ""
  VENDOR = INVR.VEND
END
SEL.WHSE = '';  SEL.LOC = ''
SEL.SERIAL = '';SEL.MILL = ''
SEL.QTY = 0;    SEL.DIAM = 0
SEL.SHEETS = 0
SER.ARR = INVR.SERIAL.NO<1>
ID.CNT = DCOUNT (SER.ARR,VM)
FOR I = 1 TO ID.CNT
  SER.ARR<1,I> = CONO:SER.ARR<1,I> 
NEXT I
CONVERT VM TO AM IN SER.ARR
FORMLIST SER.ARR TO 0
CMD = "SSELECT INV_SERIAL BY ISTK_WHSE BY ISTK_LOC"
PERFORM CMD RTNLIST SYSLIST CAPTURING RESPONSE
RESPONSE="" ; LN.CNT=0
DONE = 0
LOOP
  READNEXT SEL.ID FROM SYSLIST ELSE DONE = 1
UNTIL DONE DO
  MATREAD ISTK.REC FROM INV_SERIAL, SEL.ID THEN
    LN.CNT += 1
    SEL.WHSE<1,LN.CNT> = ISTK.WHSE
    SEL.LOC<1,LN.CNT> = ISTK.LOC
    SEL.SERIAL<1,LN.CNT> = SEL.ID[4,99]
    SEL.MILL<1,LN.CNT> = ISTK.MILL.ID
    SEL.QTY<1,LN.CNT> = ISTK.CUR.QTY
    SEL.DIAM<1,LN.CNT> = ISTK.CUR.DIAM
    SEL.SHEETS<1,LN.CNT> = ISTK.CUR.STK.QTY
  END ELSE
    MAT ISTK.REC = ""
  END
REPEAT
IF CATG.TRK.LVL='G' THEN
  SEL.SERIAL = ""
END
RETURN
*
*************
BUILD.SCREEN: 
*************
*
SCV.REC(1)<ESN>=RECP.NUM
SCV.REC(2)<ESN>=INVR.PROD
SCV.REC(3)<ESN>=INV.FULL.DESC
SCV.REC(5)<ESN>=INVR.PO
SCV.REC(7)<ESN>=VENDOR
SCV.REC(11)<ESN>=INVR.ENT.DATE
SCV.REC(13)<ESN>=INVR.PERIOD
SCV.REC(15)<ESN>=INVR.UNIT.COST
SCV.REC(20)<ESN>=INV.UNIT<1,3> 
SCV.REC(21)<ESN>=INV.UNIT<1,2>
SCV.REC(6)<ESN> = SEL.WHSE
SCV.REC(8)<ESN> = SEL.LOC
IF CATG.TRK.LVL='S' THEN
  SCV.REC(9)<ESN> = SEL.SERIAL
END
SCV.REC(4)<ESN> = SEL.MILL
SCV.REC(17)<ESN>='';SCV.REC(10)<ESN>='';SCV.REC(12)<ESN>=''
SCV.REC(14)<ESN>=''
FOR L = 1 TO LN.CNT
  SCV.REC(17)<ESN,L> = L
  ROND = 0.5
  IF SEL.QTY<1,L> < 0 THEN ROND = -0.5
*  SCV.REC(10)<ESN,L>=OCONV(INT(((SEL.QTY<1,L>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
  SCV.REC(10)<ESN,L>=OCONV(ICONV(SEL.QTY<1,L>/1000,ICR.CNV),ICR.CNV)
  SCV.REC(12)<ESN,L> = OCONV(SEL.DIAM<1,L>,"MD2")
  ;* take a qty. in costing uom and then convert it in stockin uom
  ;* instead of getting stocking qty. directly from the file.
*  SCV.REC(14)<ESN,L> = OCONV(SEL.SHEETS<1,L>,ICR.CNV)
  SCV.REC(14)<ESN,L>=OCONV(INT(((SEL.QTY<1,L>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
NEXT L
RETURN
*
************
SCROLL: 
************
*
BEGIN CASE
  CASE ACTION = "S" OR ACTION = "SF"
    IF LN.CNT > PAGE.SIZE THEN
      START +=PAGE.SIZE
      IF START > LN.CNT THEN START = 1
    END
  CASE ACTION = "SR"
    IF LN.CNT > PAGE.SIZE THEN
      START -=PAGE.SIZE
      IF START<=0 THEN START = 1
    END
  CASE ACTION = "ST"
    START = 1
  CASE ACTION = "SB"
    START=LN.CNT
  CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
    START = ACTION[2,99]+0
    IF START < 1 OR START > LN.CNT THEN
      ERRMSG = "** Invalid selection **"
      GOSUB 91000
    END
END CASE
GOSUB DISP.DETAIL
RETURN
*
*****************
DISP.DETAIL: 
*****************
*
START=1+INT((START-1)/PAGE.SIZE)*PAGE.SIZE 
ECD.NUM=17;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=6;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=8;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=9;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=4;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=10;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=12;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=14;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
RETURN
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC); XSTAT=0
99999 RETURN
END
