*
*   > COMMON STATEMENTS
*
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - ROLL.SKID.REPORT
* BY          - rick; CBA
* DATE        - 08/19/1996
* DESCRIPTION -
*
*T20877 rick 08/19/1996 * New pgm for stives to show inv whse loc data
*                         and roll skid info data
*ENDDOC
**********************************************
*   CPYLIBS
*COPY>ICS.CPYLIB>ROLL.SKID.INFO
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>PMC.CPYLIB>COMPANY

*
*   FILE OPENS
*
OPEN "ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE
  ERRMSG = "UNABLE TO OPEN ROLL.SKID.INFO FILE.  ENTER RETURN."
  GOSUB 91000
  STOP
END
OPEN "INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
  ERRMSG = "UNABLE TO OPEN WHSE.INV.LOC FILE.  ENTER RETURN."
  GOSUB 91000
  STOP
END
OPEN "COMPANY" TO COMPANY ELSE
  ERRMSG = "UNABLE TO COMPANY FILE.  ENTER RETURN."
  GOSUB 91000
  STOP
END
OPEN "CONTROL" TO CONTROL ELSE
  ERRMSG = "UNABLE TO CONTROL FILE.  ENTER RETURN."
  GOSUB 91000
  STOP
END
*
*   INIT
S3 = "   "
*
****CALL GET.CONO1( CONO,MAT COMP.REC, COMPANY, CONTROL )
PROCREAD INVAR  ELSE 
  PRINT "PROGRAM MUST BE RUN FROM A PROC"
  STOP
END
*
CONO=INVAR<1>
INWHSE = INVAR<3>
*
HDG="REV10B COMPANY ":CONO:"'CL'"
HDG1="R O L L   S K I D   I N F O   R E P O R T'CL'"
HDG2=SPACE(125):"PAGE 'PL'"
HDG3="WAREHOUSE   PRODUCT NUMBER.   PO NUMBER..   ROLL SKID   QUANTITY....'L'"
*
*   BODY OF PROGRAM SECTION
PRINT @(0,15):"Selecting Roll Skid Info File..."
VERB = 'SSELECT ROLL.SKID.INFO BY RSKI_WHSE BY RSKI_INV_NO BY RSKI_PO_NO BY @ID WITH CONO = "':CONO:'"'
IF INWHSE # "ALL" THEN
  VERB = VERB:" AND WITH RSKI_WHSE = ":INWHSE
END
UDTEXECUTE VERB CAPTURING JUNK
DONE = 0
PRINTER ON
HEADING HDG : HDG1 : HDG2 : HDG3
BREAK.PO = 'AAAABBBB'
BREAK.PROD = 'AAAABBBB'
BREAK.WHSE = 'AAAABBBB'
PO.TOTAL = 0
PROD.TOTAL = 0
WHSE.TOTAL = 0
GTOTAL     = 0
LOOP
  READNEXT ID ELSE DONE =1 
UNTIL DONE DO
  MATREAD RSKI.REC FROM ROLL.SKID.INFO, ID THEN
    CONO = ID[1,3]
    ROLLNO = ID[4,99]
    WHSE = RSKI.WHSE
    LOC  = RSKI.LOC
    PROD = RSKI.INV.NO
    LOC.ID = CONO:PROD:"!":WHSE:"!":LOC
    CURR.QTY = 0
    MATREAD IWLO.REC FROM INV.WHSE.LOC,LOC.ID THEN
      LOCATE ROLLNO IN IWLO.R.S.ID<1>,1 SETTING POS THEN
        CURR.QTY = IWLO.CURR.WT<1,POS>
      END
    END
    GOSUB 250 ;* TEST FOR BREAK
    GOSUB 500 ;* PROCESS A LINE
    GTOTAL = GTOTAL + CURR.QTY
    PO.TOTAL = PO.TOTAL + CURR.QTY
    PROD.TOTAL = PROD.TOTAL + CURR.QTY
    WHSE.TOTAL = WHSE.TOTAL + CURR.QTY
    *
  END ;* MATREAD RSKI.REC
REPEAT
GOSUB 1000
GOSUB 2000
GOSUB 3000
*
IF INWHSE = "ALL" THEN
  PRINT SPACE(53):"==============="
  PRINT (SPACE(10):"Grand Total ")"L#53":INT(OCONV(GTOTAL,"MR3"))"R#15"
END
*
PRINTER OFF
STOP
*
250 *  TEST FOR BREAK
*
IF RSKI.PO.NO # BREAK.PO THEN
  * DO PO SUBTOTAL
  GOSUB 1000
  BREAK.PO = RSKI.PO.NO
  PO.TOTAL = 0
END
IF RSKI.INV.NO # BREAK.PROD THEN
  * DO PRODUCT SUBTOTAL
  GOSUB 2000
  BREAK.PROD = RSKI.INV.NO
  PROD.TOTAL = 0
END
IF RSKI.WHSE # BREAK.WHSE THEN
  * DO WHSE SUBTOTAL
  GOSUB 3000
  BREAK.WHSE = RSKI.WHSE
  WHSE.TOTAL = 0
END
*
RETURN
*
500 * PROCESS A DETAIL LINE
*
XX=WHSE"L#9":S3:PROD"L#15":S3:RSKI.PO.NO"L#11":S3:ROLLNO"L#9":S3
XX=XX:INT(OCONV(CURR.QTY,"MR3"))"R#12"
PRINT XX
*
RETURN
*
1000 *   PROCESS PO BREAK
IF BREAK.PO = "AAAABBBB" THEN
  BREAK.PO = RSKI.PO.NO
  BREAK.PROD = PROD
  BREAK.WHSE = WHSE
  RETURN
END ELSE
  PRINT SPACE(53):"---------------"
  PRINT (SPACE(15):"SubTotal for PO # ":BREAK.PO)"L#53":INT(OCONV(PO.TOTAL,"MR3"))"R#15"
  PRINT
END
*
RETURN
*
2000 * PROCESS PRODUCT BREAK
  PRINT SPACE(53):"---------------"
  PRINT (SPACE(10):"SubTotal for Product # ":BREAK.PROD)"L#53":INT(OCONV(PROD.TOTAL,"MR3"))"R#15"
  PRINT
*
RETURN
*
3000 * PROCESS WHSE BREAK
*
  PRINT SPACE(53):"---------------"
  PRINT (SPACE(5):"SubTotal for Warehouse ":BREAK.WHSE)"L#53":INT(OCONV(WHSE.TOTAL,"MR3"))"R#15"
  PRINT
RETURN  
*
*   STANDARD SUBROUTINES
*
91000 PRINT @(0,23):ERRMSG:CL:
      INPUT XX:
      PRINT @(0,23):CL:
      RETURN
99999 RETURN
   END
