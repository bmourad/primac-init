*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - STK.DETAIL.JOB.RPT
* DATE        - 03/03/86
* BY          - JIHAD YAMOUT , C.B.A
* DESCRIPTION -
*           This program list detail inventory stock status for jobs.
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*********************************************************************
*** INSERT EQUATE FROM CPYLIB
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*** INITIALIZATION
     LINE.COUNT = 99 ; PAGE.NO = 0 ; PREV.WHSE = '' ; PREV.M.P.LINE = ""
     TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.INPRS = 0
     ON.HAND = 0 ; RESERVE = 0 ; ON.ORDER = 0 ; ALLOC = 0
     SP1 = SPACE(1)
     D.LINE = ''
     D.LINE = SPACE(95):"---------- ---------- ----------"
     T.LINE = ""
     T.LINE = "--------------- --------------------------------------------- --- ---------- -------- --------":D.LINE[95,33]
     HD.LINE = ""
     HD.LINE = "PRODUCT NUMBER               FULL DESCRIPTION                 U/M "
     HD.LINE = HD.LINE:" ON-HAND     JOB#     DATE    RESERVED  ALLOCATED  AVAILABLE"
*** SET UP FOR SYSCOM
     SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
*** OPEN FILES
    OPEN '','INV.WHSE' TO INV.WHSE ELSE
       ERRMSG = 'INV.WHSE FILE IS MISSING'
       GOTO 93000
    END
    OPEN '', 'INVENTORY' TO INVENTORY ELSE
       ERRMSG = 'INVENTORY FILE IS MISSING'
       GOTO 93000
    END
    OPEN '','INV.STATS' TO INV.STATS ELSE
       ERRMSG = 'INV.STATS FILE IS MISSING'
       GOTO 93000
    END
    OPEN '', 'INV.JOB.STATS' TO INV.JOB.STATS ELSE
       ERRMSG = 'INV.JOB.STATS FILE IS MISSING'
       GOTO 93000
    END
*** GET PROC VALUES
    PROCREAD ID ELSE
       ERRMSG = ' CANNOT PERFORM PROCREAD'
       GOTO 93000
    END
    CONO = ID<1>
*T26493 v
*   CONO.NAME = ID<2>
*   REPORT.NAME = "DETAIL.STOCK.STATUS.JOB.REPORT"
*   REPORT.NUMBER = "XXXX"
    REPORT.NUMBER = ID<2>
    REPORT.NAME = ""
    CONO.NAME = ""
*T26493 ^
    REPORT.DATE = DATE()
    HD1 = "" ; HD2 = ""
*** GET HEADING
    CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*** PRINTER ON
    PRINTER ON
*** READ AND PROCESS FIRST RECORD
100*
   READNEXT KEY ELSE GOTO 999999
   GOSUB 200
    MATREAD IWH.REC FROM INV.WHSE,KEY ELSE
       MAT IWH.REC = ''
       GOTO 100
    END
    MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
       MAT INV.REC = ''
    END
    MATREAD INV.STAT.REC FROM INV.STATS , KEY ELSE
         MAT INV.STAT.REC = ""
    END
*** SET THE WHSE PRODUCT
    PREV.WHSE = WHSE
    PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
*** PROCESS THE FILE
    GOSUB 2000
*** PRINT THE RECORD
    GOSUB 3000
*** READ AND PROCESS ALL THE FILES
    DATA = 0
LOOP
    READNEXT KEY ELSE DATA = 1
    WHILE DATA = 0 DO
    GOSUB 200
    MATREAD IWH.REC FROM INV.WHSE,KEY ELSE
       MAT IWH.REC = ''
       GOTO 111
    END
    MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
       MAT INV.REC = ''
    END
    MATREAD INV.STAT.REC FROM INV.STATS , KEY ELSE
         MAT INV.STAT.REC = ""
    END
*** PROCESS THEN FILE
    GOSUB 2000
*** PRINT THE RECORD
    GOSUB 3000
111*
REPEAT
*** END OF JOB
    PRINTER OFF
    GOTO 999999
*** SEPERATE THE KEY TO PRPDUCT , WHSE
200*
    PROD.KEY = FIELD(KEY,"!",1)
    PROD = PROD.KEY[4,99]
    WHSE    = FIELD(KEY,"!",2)
RETURN
*** PRINT HEADINGS
1000*
    PRINT CHAR(12)
    PAGE.NO = PAGE.NO + 1
    PRINT HD1:PAGE.NO
    PRINT HD2
    PRINT
    PRINT "WAREHOUSE : ":PREV.WHSE "L#8"
    PRINT "MLINE / PLINE : ":PREV.M.P.LINE
    PRINT
    PRINT HD.LINE
    PRINT T.LINE
    LINE.COUNT = 8
RETURN
*** PROCESS THE RECORD
2000*
  ON.HAND = 0
  BEGIN CASE
    CASE WHSE # PREV.WHSE
      PREV.WHSE = WHSE
      LINE.COUNT = 99
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
    CASE INV.M.LINE:" / ":INV.LINE # PREV.M.P.LINE
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
      LINE.COUNT = 99
  END CASE
  GOSUB 6000
  IF ICR.DV1 + 0 # 0 AND ICR.DV2 + 0 # 0 THEN
    IF IWH.ON.HAND >= 0 THEN
       ON.HAND=INT((((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ON.HAND=INT((((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.RESV >= 0 THEN
       RESERVE=INT((((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       RESERVE=INT((((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.ON.ORDER >= 0 THEN
       ON.ORDER = INT((((IWH.ON.ORDER / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ON.ORDER = INT((((IWH.ON.ORDER / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.ALLOC >= 0 THEN
       ALLOC = INT((((IWH.ALLOC / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ALLOC = INT((((IWH.ALLOC / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
  END ELSE
    ON.HAND = 0 ; RESERVE = 0 ; ON.ORDER = 0 ; ALLOC = 0
  END
* AVLB = (ON.HAND + ON.ORDER) - (RESERVE + ALLOC)
  AVLB = ON.HAND - RESERVE
RETURN
***   PRINT THE RECORD
3000*
     J.CNT = COUNT(ISTAT.JOB,VM) + (ISTAT.JOB # "")
     IF J.CNT = 0 THEN GOTO 3099
     PRT.FLG = 1
     FOR JP = 1 TO J.CNT
       IF LINE.COUNT > 53 THEN
          GOSUB 1000
          PRT.FLG = 1
       END
       RESERVED = 0 ; ALLOCATED = 0 ; INPROCESS = 0
       LINE.COUNT = LINE.COUNT + 1
       H.LINE = ''
       IF PRT.FLG = 1 THEN
         H.LINE = H.LINE :PROD "L#15"
         H.LINE = H.LINE :SP1: INV.FULL.DESC "L#45"
*        H.LINE = H.LINE :SP1: INV.M.WT "R#6"
         H.LINE = H.LINE :SP1: INV.UNIT<1,2> "L#3"
         H.LINE = H.LINE :SP1: OCONV(ON.HAND,ICR.CNV) "R#10"
       END ELSE
         H.LINE = H.LINE :SPACE(76)
       END
       MATREAD INV.JS.REC FROM INV.JOB.STATS , KEY:"!":ISTAT.JOB<1,JP> ELSE
         MAT INV.JS.REC = 0
       END
       H.LINE = H.LINE :SP1:ISTAT.JOB<1,JP> "L#8"
       H.LINE = H.LINE :SP1:OCONV(IJS.JOB.DATE, "D2/") "L#8"
       IF ICR.DV1 + 0 # 0 AND ICR.DV2 + 0 # 0 THEN
         IF IJS.JOB.QTY >= 0 THEN
            RESERVED=INT((((IJS.JOB.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
         END ELSE
            RESERVED=INT((((IJS.JOB.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
         END
         IF IJS.JOB.ALOC >= 0 THEN
            ALLOCATED=INT((((IJS.JOB.ALOC / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
         END ELSE
            ALLOCATED=INT((((IJS.JOB.ALOC / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
         END
       END
       H.LINE = H.LINE:SP1:OCONV(RESERVED, ICR.CNV) "R#10"
       H.LINE = H.LINE:SP1:OCONV(ALLOCATED, ICR.CNV) "R#10"
       IF PRT.FLG = 1 THEN
          PRT.FLG = 0
          H.LINE = H.LINE:SP1:OCONV(AVLB, ICR.CNV) "R#10"
       END
       PRINT H.LINE
       TOT.RESRV = TOT.RESRV + RESERVED
       TOT.ALLOC = TOT.ALLOC + ALLOCATED
       TOT.INPRS = TOT.INPRS + INPROCESS
    NEXT JP
    GOSUB 4000
3099RETURN
*** CHECK FOR END OF PAGE
4000*
   IF LINE.COUNT + 3 > 53 THEN GOSUB 1000
   LINE.COUNT = LINE.COUNT + 3
   H.LINE = ""
   H.LINE = SPACE(94)
   H.LINE = H.LINE :SP1: OCONV(TOT.RESRV, ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.ALLOC, ICR.CNV) "R#10"
   PRINT D.LINE[1,116]
   PRINT H.LINE 
   PRINT
   TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.INPRS = 0
RETURN
***        CONVERT SHEET/WGHT/QTY
6000*
      MAT INV.CNV.REC = ''
      BEGIN CASE
      CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         ICR.CNV = "MD0"
         ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
      CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         ICR.CNV = "MD0"
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10; ICR.DV2 = 1
      CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         ICR.CNV = "MD0"
         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
      CASE 1
         ICR.CNV = "MD2"
         ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1
      END CASE
      RETURN
***   CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
       PRINTER OFF
      ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
999999*
          END
