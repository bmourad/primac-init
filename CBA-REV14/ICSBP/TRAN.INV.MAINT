*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
**********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - TRAN.INV.MAINT
* BY          - EDVARD PITKA
* DATE        - 08/01/01
*T25740 epitka 04/03/2002 * REV12
*T25978 adelgado 02/18/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/01/2002 * Implement the LOCKED clause for READU.
*T26497 adelgado 04/04/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26556 cmykleb 06/17/2002 * Rev12 changes.
*T27328 lross 03/04/2003 * Allows transfer of future receipt in a prior
*                          (current) period.
*T27384 adelgado 04/15/2003 * Fix default of Period when
*                             CO.ICS.PERIOD.FLG = 'Y'.
*T27645 lross 08/15/2003 * Do not allow transfer of serial with zero
*                          qty.
*T28066 lross 04/15/2004 * MAXV needs to be reset for each serial entry.
*T28471 lross 03/08/2005 * In "C"hange mode TEMP.PROD id null. Causes
*                          UNINITIALIZED VARIABLE error.
*T28603 thompson 06/29/2005 * Fix period when flag is set to "Y" for
*                             system generated.
*ENDDOC
*********************************************************************
*COPY>ICS.CPYLIB>CATEGORY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>PMC.CPYLIB>SALESDATES
*COPY>ICS.CPYLIB>TRANSFER
*COPY>ICS.CPYLIB>DAILY_TRANSFER
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>CPYLIB>TCC
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>ICS.CPYLIB>ICS.ID
*COPY>CPYLIB>CHAR
*
  EQU INV.UOM.STK TO INV.UNIT<1,2>
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
****** PROCREAD (INQUIRY OR MAINTENANCE)
*
  PROCREAD BUFFER ELSE
    BUFFER = ""
  END
  IF BUFFER = "" THEN
    PGM.MODE = "I"
  END ELSE
    PGM.MODE = BUFFER<1>
  END

  ITEM.TYPE=BUFFER<2> ;*FNGD OR ""
*
**** OPEN FILES
*
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CANNOT LOCATE CONTROL FILE'
    GOTO 93000
  END
  OPEN '','CATEGORY' TO CATEGORY ELSE
    ERRMSG = 'CANNOT LOCATE CATEGORY FILE'
    GOTO 93000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'CANNOT LOCATE COMPANY FILE'
    GOTO 93000
  END
  OPEN '','DIVISION' TO DIVISION ELSE
    ERRMSG = 'CANNOT LOCATE DIVISION FILE'
    GOTO 93000
  END
  OPEN '','JOB' TO JOB ELSE
    ERRMSG = 'CANNOT LOCATE JOB FILE'
    GOTO 93000
  END
  OPEN '','JOB.STATS' TO JOB.STATS ELSE
    ERRMSG = 'CANNOT LOCATE JOB.STATS FILE'
    GOTO 93000
  END
  OPEN '','INVENTORY' TO INVENTORY ELSE
    ERRMSG = 'CANNOT LOCATE INVENTORY FILE'
    GOTO 93000
  END
  OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
    ERRMSG = 'CANNOT LOCATE INVENTORY.XREF FILE'
    GOTO 93000
  END
  OPEN '','INV.WHSE' TO INV.WHSE ELSE
    ERRMSG = 'CANNOT LOCATE INV.WHSE FILE'
    GOTO 93000
  END
  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
    ERRMSG = 'CANNOT LOCATE INV.WHSE.LOC FILE'
    GOTO 93000
  END
  OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
    ERRMSG = 'CANNOT LOC.TEMPATE INV.WHSE.LOC.TEMP FILE'
    GOTO 93000
  END
  OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
    ERRMSG = 'CANNOT LOCATE INV_SERIAL FILE'
    GOTO 93000
  END
  OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
    ERRMSG = 'CANNOT LOCATE INV_SERIAL_TEMP FILE'
    GOTO 93000
  END
  OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
    ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST FILE'
    GOTO 93000
  END
  OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE
    ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST_TEMP FILE'
    GOTO 93000
  END
  OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
    ERRMSG = 'CANNOT LOCATE INV_AUDIT_TAG FILE'
    GOTO 93000
  END
  OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
    ERRMSG = 'CANNOT LOCATE INV_RECEIPTS FILE'
    GOTO 93000
  END
  OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
    ERRMSG = 'CANNOT LOCATE INV_RECEIPTS_TEMP FILE'
    GOTO 93000
  END
  OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
    ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE FILE'
    GOTO 93000
  END
  OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE
    ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE_TEMP FILE'
    GOTO 93000
  END
  OPEN '','TRANSFER' TO TRANSFER ELSE
    ERRMSG = 'CANNOT LOCATE TRANSFER FILE'
    GOTO 93000
  END
  OPEN '','DAILY_TRANSFER' TO DAILY_TRANSFER ELSE
    ERRMSG = 'CANNOT LOCATE DAILY_TRANSFER FILE'
    GOTO 93000
  END
  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
    ERRMSG = 'CANNOT LOCATE WAREHOUSE FILE'
    GOTO 93000
  END
  OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'CANNOT LOCATE M.SCREENS FILE'
    GOTO 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'CANNOT LOCATE PREFIX FILE'
    GOTO 93000
  END
  OPEN '','SECURITY' TO SECURITY ELSE
    ERRMSG = 'CANNOT LOCATE SECURITY FILE'
    GOTO 93000
  END
  OPEN '','XREF.DATA' TO XREF.DATA ELSE
    ERRMSG = 'CANNOT LOCATE XREF.DATA FILE'
    GOTO 93000
  END
*
*
  DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)        
  DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
  GEN.DIV='00'
*
***** GET COMPANY NAME
*
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  IF ITEM.TYPE='FNGD' THEN
    PROCESS.FLAG='Y'
  END ELSE
    PROCESS.FLAG=CO.ICS.REAL.TRAN 
  END
*
  TODAY = DATE()
  EXISTS.IN.WHSE = 1
  BEGIN.PAGE = 7
  PAGE.SIZE = 2
  LINE.SPACE = 2
  FROM.WHSE.DIV = ''
*
  MAT EDIT.COM.DRIVER = ''
  MAT GEN.XREF.REC = ''
  OLD.NAME = ''
  GXR.CO = CONO
  ECD.SCRN.CNT = 2
  ECD.SCRN.NAME<1> = 'TRAN.INV.MAINT'
  ECD.SCRN.NAME<2> = "SERIAL.SEL"
  ECD.SCRN.NO = 1     
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.ACTION=2;CALL SCRN.EDIT     
*
***** MAIN PROCESSING
*
  LOOP
    PROCEED = 1
    LOOP
      RELEASE      ;* T26126
      MORE = 0
      LINES = 0
      OLD.START.LINE = 0
      ECD.SCRN.NO = 1
      MAT D.TRAN.REC = ''
      MAT SCV.REC = ""
      ECD.ACTION=6;CALL SCRN.EDIT
      ;*
      ;** ENTER TRANSFER NUMBER
      ;*
      EOT=0
      LOOP
        ERR=0
        ECD.NUM = 1
        ECD.ACTION=4;CALL SCRN.EDIT
        BEGIN CASE
          CASE ECD.RET.VALUE = 'END'
            PROCEED = 0
            EOT=1
          CASE NUM(ECD.RET.VALUE)
            D.TRAN.CODE = ECD.RET.VALUE
            IF PGM.MODE = "I" THEN
              MATREAD D.TRAN.REC FROM TRANSFER, CONO:D.TRAN.CODE ELSE
                RELEASE TRANSFER, CONO:D.TRAN.CODE
                ERRMSG = 'Trans Number ':D.TRAN.CODE:' does not exist'
                GOSUB 91000;ERR=1
              END
            END
            IF PGM.MODE = "M" THEN
              * T26126 v
              MATREADU D.TRAN.REC FROM DAILY_TRANSFER,CONO:D.TRAN.CODE LOCKED
                ERRMSG = 'TRANSFER record is locked by user - ':GETUSERNAME(STATUS())
                GOSUB 91000;ERR=1 
              END ELSE
              * T26126 ^
                RELEASE DAILY_TRANSFER, CONO:D.TRAN.CODE
                ERRMSG = 'Trans Number ':D.TRAN.CODE:' does not exist'
                GOSUB 91000;ERR=1
              END
            END
            IF NOT(ERR) THEN
              WHSE.ID=CONO:D.TRAN.FROM.WHSE
              MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID THEN
                FROM.WHSE.DIV=WHS.DIV
              END
              EOT=1
              SCV.REC(2)<ECD.SCRN.NO> = D.TRAN.REASON.DESC
              SCV.REC(11)<ECD.SCRN.NO> = D.TRAN.DATE.ENTER
              SCV.REC(12)<ECD.SCRN.NO> = D.TRAN.PERIOD
              SCV.REC(24)<ECD.SCRN.NO> = D.TRAN.FROM.WHSE
              ECD.ACTION=3;CALL SCRN.EDIT
              LINES = DCOUNT(D.TRAN.PROD.NO,VM)
              LN = 1
              GOSUB 15000
            END
          CASE ECD.RET.VALUE = 'N'
            IF PGM.MODE = "I" THEN
              ERRMSG = "Invalid option. This is for review only."
              GOSUB 91000;ERR=1
            END ELSE
              IF (PROCEED) THEN
                D.TRAN.CODE = ECD.RET.VALUE
                FOR FLDNBR = 1 TO 4 UNTIL ECD.RET.VALUE = "END"
                  ON FLDNBR GOSUB ENT.FROM.WHSE,ENT.DESC,ENT.DATE,ENT.PERIOD
                NEXT FLDNBR
                IF ECD.RET.VALUE = "END" THEN
                  MORE = 1;EOT=1
                END ELSE
                  EOT=1
                  GOSUB ENT.DETAIL
                  GOSUB 15000
                END
              END
            END
          CASE 1
            MORE = 1;EOT=1
        END CASE
      UNTIL (EOT) DO REPEAT
    WHILE MORE DO REPEAT
  WHILE (PROCEED) DO
    LOOP
      MORE = 1
      ECD.NUM = 41
      ECD.ACTION = 4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
        CASE OPTION = "E" OR OPTION = "END"
          OPTION = "E"
          RELEASE JOB.STATS, CONO : D.TRAN.JOB
          MORE = 0
        CASE OPTION = 'A'
          GOSUB ENT.DETAIL
        CASE OPTION = 'C'
          GOSUB 9000
          IF LNO THEN
            LN = LNO
            IF D.TRAN.DATE.PROSS<1,LN> = '' THEN
              SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
              INV.ID=CONO:D.TRAN.PROD.NO<1,LN>
              TEMP.PROD=INV.ID[4,99] ;*T28471
              MATREAD INV.REC FROM INVENTORY,INV.ID THEN
                CATG.ID = CONO:INV.LINE
                MATREAD CATG.REC FROM CATEGORY,CATG.ID THEN
                  GOSUB ENT.TO.WHSE
                END ELSE
                  ERRMSG='CATEGORY RECORD ':CATG.ID:' IS MISSING.'
                  GOSUB 93000
                END
              END ELSE
                ERRMSG='INVENTORY RECORD ':INV.ID:' IS MISSING.'
                GOSUB 93000
              END
            END ELSE
              ERRMSG = "THIS ITEM HAS BEEN UPDATED AND CAN'T BE CHANGED."
              GOSUB 91000
            END
          END
        CASE OPTION = 'R'
          GOSUB 9000
          IF LNO THEN
            LN = LNO
            ERRMSG = ""
            MATREAD INV.REC FROM INVENTORY, CONO:D.TRAN.PROD.NO<1,LN> ELSE
              MAT INV.REC = ""
              ERRMSG = "PRODUCT # (":D.TRAN.PROD.NO<1,LN>:") IS MISSING"
              GOSUB 91000
            END
            MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
              MAT CATG.REC = ''
              ERRMSG = "PRODUCT ":D.TRAN.PROD.NO<1,LN>:" HAS INVALID PRODUCT LINE"
              GOSUB 91000
            END
            IF ERRMSG = "" THEN
              CALL TRAN.DETAIL.MAINT(LN,CONO,CATG.TRK.LVL,PGM.MODE)
            END
          END
        CASE OPTION = 'D'
          GOSUB 9000
          IF LNO THEN
            LN = LNO
            IF D.TRAN.DATE.PROSS<1,LN> = '' THEN
              GOSUB DEL.LINE.DATA 
              D.TRAN.FROM.LOC = DELETE(D.TRAN.FROM.LOC,1,LN,0)
              D.TRAN.TO.LOC = DELETE(D.TRAN.TO.LOC,1,LN,0)
*T26556              D.TRAN.PROD.TYPE = DELETE(D.TRAN.PROD.TYPE,1,LN,0)
              D.TRAN.TOT.QTY = DELETE(D.TRAN.TOT.QTY,1,LN,0)
              D.TRAN.QTY = DELETE(D.TRAN.QTY,1,LN,0)
*            D.TRAN.SHEET = DELETE(D.TRAN.SHEET,1,LN,0)
*            D.TRAN.DIAM = DELETE(D.TRAN.DIAM,1,LN,0)
              D.TRAN.DATE.PROSS = DELETE(D.TRAN.DATE.PROSS,1,LN,0)
              D.TRAN.RECP=DELETE(D.TRAN.RECP,1,LN,0)
              LINES = COUNT(D.TRAN.PROD.NO,VM) + (D.TRAN.PROD.NO # '')
              IF LN > 1 AND LN > LINES THEN LN = LN - 1
              IF LN < 1 THEN LN = 1
              OLD.START.LINE = 0
            END ELSE
              ERRMSG = "THIS ITEM HAS BEEN UPDATED CAN'T BE DELETED"
              GOSUB 91000
            END
          END
          GOSUB 15000
        CASE OPTION = 'S'
          LN = LN + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          GOSUB 15000
        CASE OPTION = 'SR'
          LN -= PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 15000
        CASE OPTION = 'ST'
          LN = 1
          GOSUB 15000
        CASE OPTION = 'SB'
          LN = LINES
          GOSUB 15000
        CASE OPTION = 'F'
          IF DCOUNT(D.TRAN.PROD.NO,VM) < 1 THEN
            DELETE DAILY_TRANSFER,CONO:D.TRAN.CODE
          END ELSE
            IF D.TRAN.CODE = "N" THEN
              IF PROCESS.FLAG='Y' THEN
                D.TRAN.PRT.DATE = TODAY
              END ELSE
                D.TRAN.PRT.DATE=''
              END
              D.TRAN.EMP=@LOGNAME
              MAT TRAN.REC=''
              NEW.ERRMSG = ""
              CALL TRAN.UPDATE(CONO,D.TRAN.CODE,MAT TRAN.REC,PROCESS.FLAG,CO.ICS.LOC.TRAN,NEW.ERRMSG)
              IF PROCESS.FLAG='Y' AND NEW.ERRMSG#"" THEN
                ERRMSG=NEW.ERRMSG
                GOSUB 91000
              END ELSE
                IF D.TRAN.CODE # "N" THEN
                  ECD.NUM = 1;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = D.TRAN.CODE
                  ECD.ACTION = 5;CALL SCRN.EDIT
                  ERRMSG = "Note new Daily transfer number."
                  GOSUB 91000
                END
              END
            END ELSE
              IF PROCESS.FLAG='Y' THEN
                D.TRAN.PRT.DATE = TODAY
              END ELSE
                D.TRAN.PRT.DATE=""
              END
              MAT TRAN.REC=""
              D.TRAN.ERRMSG=''
              NEW.ERRMSG=''
              CALL TRAN.UPDATE(CONO,D.TRAN.CODE,MAT TRAN.REC,PROCESS.FLAG,COICS.LOC.TRAN,NEW.ERRMSG)
              IF NEW.ERRMSG#'' THEN
                ERRMSG=NEW.ERRMSG ; GOSUB 91000
              END
            END
          END
          MORE = 0
        CASE NUM(OPTION)
          IF OPTION > 0 AND OPTION < 4 THEN
            ON OPTION GOSUB ENT.DESC,ENT.DATE,ENT.PERIOD
          END ELSE
            ERRMSG = "INVALID OPTION"
            GOSUB 91000
          END
      END CASE
    WHILE MORE = 1 DO REPEAT
  REPEAT
  GOTO 99999
*
*************************************************************************
** S U B R O U T I N E S ********************
*********************************************
*
1000* 
*
  WHSE.CODE = ""
  GOSUB 15000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
  P_X  = 0;P_Y = SLN;P_VALUE = LN "R#3";P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
******************
ENT.DETAIL: 
******************
*
  EOJ = 0
  LOOP
    OPTION = 'A'
    LINES = DCOUNT(D.TRAN.PROD.NO<1>,VM)
    LN = LINES + 1
    GOSUB 1000
    BEGIN CASE
      CASE ITEM.TYPE='FNGD' 
        GOSUB ENT.RECP
        IF D.TRAN.RECP<1,LN>#'' THEN
          GOSUB ENT.TO.WHSE
        END ELSE
          IF TEMP.RECP='' THEN
            GOSUB ENT.PRODUCT
            IF D.TRAN.PROD.NO<1,LN>#"" THEN
              IF EXISTS.IN.WHSE THEN
                GOSUB ENT.TO.WHSE
              END
            END
          END
        END
      CASE 1
        GOSUB ENT.SERIAL ; * GET SERIAL ID
        IF D.TRAN.PROD.NO<1,LN>#"" THEN
          GOSUB ENT.TO.WHSE ; *TO WAREHOUSE
        END ELSE
          IF TEMP.SERIAL = "" THEN
            GOSUB ENT.PRODUCT
            IF D.TRAN.PROD.NO<1,LN>#"" THEN
              IF EXISTS.IN.WHSE THEN
                GOSUB ENT.TO.WHSE
              END
            END
          END
        END
    END CASE
  UNTIL (EOJ) DO REPEAT
  LN = LINES                       
  RETURN
*
***************
ENT.SERIAL: 
***************
*
  DONE = 0
  LOOP
    TEMP.SERIAL = ""
    X = 4;Y = SLN;TYP = 1;MAXL = 15;O.R = 'O';VALDAT = '';HMSG = ''
    MAXV='' ;*T28066
    DEFAULT = D.TRAN.SERIAL<1,LN>
    CALL EDIT.SUB
    TEMP.SERIAL = VALUE 
    BEGIN CASE 
      CASE TEMP.SERIAL = "" AND D.TRAN.PROD.NO<1,LN>=""
        DONE = 1
      CASE TEMP.SERIAL = "" AND D.TRAN.PROD.NO<1,LN> # ""
        ERRMSG = 'You must enter serial number'
        GOSUB 91000
      CASE TEMP.SERIAL = 'END'
        IF D.TRAN.TO.LOC<1,LN> = '' THEN
          GOSUB DEL.LINE.DATA
          GOSUB 10000
        END
        EOJ = 1
        DONE = 1
      CASE TEMP.SERIAL = "???"
        D.TRAN.SERIAL<1,LN> = ""
        ECD.SCRN.NO = 2
        IF D.TRAN.PROD.NO<1,LN> # "" THEN
          TRK.LVL = CATG.TRK.LVL;SEL.PROD = D.TRAN.PROD.NO<1,LN>
          SEL.WHSE = "";JOB.DIV = "";SEL.LOC = ""
          NEW.VALUE = ""    ; * T22398
        END ELSE
          NEW.VALUE = ""    ; * T22398
          TRK.LVL = "";SEL.PROD = "";SEL.WHSE = ""
          JOB.DIV = "";SEL.LOC = ""
        END
        SEL.WHSE = D.TRAN.FROM.WHSE
        CALL SERIAL.SEL(CONO,JOB.DIV,SEL.PROD,SEL.WHSE,SEL.LOC,NEW.VALUE,TRK.LVL)
        IF NEW.VALUE = "" THEN NEW.VALUE = "END"
        TEMP.SERIAL = NEW.VALUE
        ECD.SCRN.NO = 1 ; ECD.ACTION = 3;CALL SCRN.EDIT
        OLD.START.LINE = 0;GOSUB 15000
        IF TEMP.SERIAL = "END" THEN
          IF D.TRAN.TO.LOC<1,LN> = '' THEN
            GOSUB DEL.LINE.DATA           
            GOSUB 10000                   
          END                             
          DONE = 1
        END ELSE
          GOSUB VALIDATE.SERIAL
          IF SERIAL.OK THEN
            D.TRAN.SERIAL<1,LN> = TEMP.SERIAL
            D.TRAN.RECP<1,LN> = ISTK.RECP
            D.TRAN.PROD.NO<1,LN>    = ISTK.PROD
            GOSUB 10000
            GOSUB CHECK.WHSE                                    
            IF (EXISTS.IN.WHSE) THEN
              DONE = 1
            END
          END ELSE
            GOSUB DEL.LINE.DATA
            GOSUB 10000        
          END
        END
      CASE TEMP.SERIAL # ""
        GOSUB VALIDATE.SERIAL
        IF SERIAL.OK THEN
          D.TRAN.SERIAL<1,LN> = TEMP.SERIAL
          D.TRAN.RECP<1,LN> = ISTK.RECP
          D.TRAN.PROD.NO<1,LN>    = ISTK.PROD
          GOSUB 10000
          GOSUB CHECK.WHSE                                    
          IF (EXISTS.IN.WHSE) THEN
            DONE = 1
          END
        END
    END CASE 
  UNTIL DONE DO REPEAT
  RETURN
*
****************
ENT.RECP: 
****************
*
  DONE = 0
  LOOP
    TEMP.RECP = ""
    X = 20;Y = SLN;TYP = 1;MAXL = 9;O.R = 'O';VALDAT = '';HMSG = ''
    DEFAULT=D.TRAN.RECP<1,LN>
    CALL EDIT.SUB
    TEMP.RECP = VALUE 
    BEGIN CASE 
      CASE TEMP.RECP = "" AND D.TRAN.PROD.NO<1,LN>=""
        DONE = 1
      CASE TEMP.RECP = "" AND D.TRAN.PROD.NO<1,LN> # ""
        ERRMSG = 'You must enter receipt number'
        GOSUB 91000
      CASE TEMP.RECP = 'END'
        IF D.TRAN.TO.LOC<1,LN> = '' THEN
          GOSUB DEL.LINE.DATA
          GOSUB 10000
        END
        EOJ = 1
        DONE = 1
*    CASE TEMP.RECP = "???"
*      D.TRAN.SERIAL<1,LN> = ""
*      ECD.SCRN.NO = 2
*      IF D.TRAN.PROD.NO<1,LN> # "" THEN
*        TRK.LVL = CATG.TRK.LVL;SEL.PROD = D.TRAN.PROD.NO<1,LN>
*        SEL.WHSE = "";JOB.DIV = "";SEL.LOC = ""
*        NEW.VALUE = ""    ; * T22398
*      END ELSE
*        NEW.VALUE = ""    ; * T22398
*        TRK.LVL = "";SEL.PROD = "";SEL.WHSE = ""
*        JOB.DIV = "";SEL.LOC = ""
*      END
*      SEL.WHSE = D.TRAN.FROM.WHSE
*      CALL SERIAL.SEL(CONO,JOB.DIV,SEL.PROD,SEL.WHSE,SEL.LOC,NEW.VALUE,TRK.LVL)
*      IF NEW.VALUE = "" THEN NEW.VALUE = "END"
*      TEMP.RECP = NEW.VALUE
*      ECD.SCRN.NO = 1 ; ECD.ACTION = 3;CALL SCRN.EDIT
*      OLD.START.LINE = 0;GOSUB 15000
*      IF TEMP.RECP = "END" THEN
*        DONE = 1
*      END ELSE
*        GOSUB VALIDATE.SERIAL
*        IF SERIAL.OK THEN
*          D.TRAN.SERIAL<1,LN> = TEMP.RECP
*          D.TRAN.RECP<1,LN> = ISTK.RECP
*          D.TRAN.PROD.NO<1,LN>    = ISTK.PROD
*          GOSUB 10000
*          GOSUB CHECK.WHSE                                    
*          IF (EXISTS.IN.WHSE) THEN
*            DONE = 1
*          END
*        END
*      END
      CASE TEMP.RECP # ""
        GOSUB VALIDATE.RECEIPT
        IF RECEIPT.OK THEN
          D.TRAN.RECP<1,LN>=TEMP.RECP
          D.TRAN.PROD.NO<1,LN>=INVR.PROD
          GOSUB 10000
          GOSUB CHECK.WHSE                                    
          IF (EXISTS.IN.WHSE) THEN
            DONE = 1
          END
        END
    END CASE 
  UNTIL DONE DO REPEAT
  RETURN
*
***************
ENT.PRODUCT: 
***************
*
  DONE = 0
  LOOP
    EXISTS.IN.WHSE = 1
    X=31;Y=SLN;TYP = 1;MAXL = 15;O.R = "O";VALDAT = "";HMSG = ""
    DEFAULT = D.TRAN.PROD.NO<1,LN>
    CALL EDIT.SUB
    TEMP.PROD = VALUE
    BEGIN CASE
      CASE TEMP.PROD = "END"
        IF D.TRAN.TO.LOC<1,LN> = '' THEN
          GOSUB DEL.LINE.DATA
          GOSUB 10000;* PRINT ONE LINE
        END
        DONE = 1
      CASE TEMP.PROD = ""
        X=4;Y=SLN+1;TYP = 1;MAXL = 45;O.R = "O";VALDAT = "";HMSG = ""
        CALL EDIT.SUB
        SRCH.ID = VALUE
        BEGIN CASE
          CASE SRCH.ID = "END"
            DONE = 1
          CASE SRCH.ID # ""
            GXR.NAME = "INVENTORY"
            GXR.XREF = INVENTORY.XREF
            GXR.FILE = INVENTORY
            GXR.SRCH.ID = SRCH.ID
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.ACTION = 3; CALL SCRN.EDIT
*C40416 v
            OLD.START.LINE = 0
            PREV.SLN = SLN
            GOSUB 15000
            SLN = PREV.SLN
*C40416 ^
            IF GXR.ID = "" THEN
              TEMP.PROD = ""
              P_X  = 4;P_Y = SLN+1;P_VALUE = "" "L#22";P_OPT = ""
              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END ELSE
              TEMP.PROD = GXR.ID
              GOSUB VALIDATE.PROD
              IF PROD.OK THEN
                P_X  = 31;P_Y = SLN;P_VALUE = TEMP.PROD "L#15";P_OPT = ""
                CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                P_X  = 4;P_Y = SLN+1;P_VALUE = INV.DESC "L#22";P_OPT = ""
                CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                D.TRAN.PROD.NO<1,LN> = TEMP.PROD
                DONE = 1
              END ELSE
                P_X  = 4;P_Y = SLN+1;P_VALUE = "" "L#22";P_OPT = ""
                CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
              END
            END
          CASE 1
            NULL
        END CASE
      CASE 1
        GOSUB VALIDATE.PROD
        IF PROD.OK THEN
          P_X  = 4;P_Y = SLN+1;P_VALUE = INV.DESC "L#22";P_OPT = ""
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          D.TRAN.PROD.NO<1,LN> = TEMP.PROD
          DONE = 1
        END
    END CASE
  UNTIL DONE DO REPEAT
  IF D.TRAN.PROD.NO<1,LN>#'' THEN
    IF CATG.TRK.LVL='S' THEN
      GOSUB ENT.SERIAL
    END
    IF CATG.TRK.LVL='R' THEN
      GOSUB ENT.RECP
    END
  END
  RETURN
*
*************
ENT.TO.WHSE: 
*************
*
  WHSE.CODE = INV.WHSE.CODE
  WCNT = DCOUNT(WHSE.CODE,VM)
  TEMP.WHSE = ""
  EOI = 0
  LOOP
    ERRMSG = ""
    BEGIN CASE
      CASE WCNT < 1
        ERRMSG = 'NO WAREHOUSES SETUP FOR THIS PRODUCT'
        GOSUB 91000
        EOI = 1
      CASE WCNT = 1
        TEMP.WHSE = WHSE.CODE<1,1>
        D.TRAN.TO.WHSE<1,LN> = TEMP.WHSE
        P_X  = 55;P_Y = SLN;P_VALUE = TEMP.WHSE "L#4";P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        VALUE = TEMP.WHSE
        EOI = 1
      CASE 1
        HMSG = 'WAREHOUSE - ':WHSE.CODE<1,1>
        VALDAT = WHSE.CODE<1,1>
        FOR W = 2 TO WCNT
          HMSG = HMSG :',':WHSE.CODE<1,W>
          VALDAT = VALDAT :VM:WHSE.CODE<1,W>
        NEXT W
        X = 55;Y = SLN;TYP = 1;MAXL = 4
        IF D.TRAN.TO.WHSE<1,LN> # '' THEN
          DEFAULT = D.TRAN.TO.WHSE<1,LN>
          O.R = 'O'
        END ELSE
          O.R = 'R'
        END
        CALL EDIT.SUB
        IF VALUE='END' THEN
          GOSUB DEL.LINE.DATA           
          GOSUB 10000;* PRINT ONE LINE  
        END
        TEMP.WHSE = VALUE
    END CASE
    IF TEMP.WHSE # "END" AND ERRMSG = "" THEN
      IF CATG.TRK.LVL='S' THEN
        IF ("X":D.TRAN.FROM.WHSE)#("X":TEMP.WHSE) THEN
          IF ISTK.CUR.QTY#ISTK.RSVB.QTY THEN
            ERRMSG='Serial is reserved. You can transfer it only within same warehouse.'
            GOSUB 91000
          END
        END
      END
      IF CATG.TRK.LVL='G' THEN
        EOL=0 ; PTR=1
        LOOP
          LOCATE TEMP.PROD IN D.TRAN.PROD.NO<1>,PTR SETTING XLN THEN
            IF XLN#LN THEN
              IF D.TRAN.TO.WHSE<1,XLN>=TEMP.WHSE THEN
                ERRMSG='Same Product and TO Warehouse are on the line ':XLN
                GOSUB 91000
              END
            END
          END ELSE
            EOL=1
          END
          PTR +=1
        UNTIL (EOL) DO REPEAT
      END
      * T26497 v
      IF CO.INTR.WHSE # '' AND TEMP.WHSE = CO.INTR.WHSE THEN
        ERRMSG = 'CAN NOT APPLY, USING AN INTER-DIVISIONAL WHSE IS RESTRICTED'
        GOSUB 91000
      END
      * T26497 ^
      IF ERRMSG='' THEN
        MATREAD IWH.REC FROM INV.WHSE, CONO:D.TRAN.PROD.NO<1,LN>:'!':TEMP.WHSE THEN
          MATREAD WHSE.REC FROM WAREHOUSE, CONO:VALUE THEN
            IF FROM.WHSE.DIV # WHS.DIV THEN
              ERRMSG = 'WAREHOUSE DIVISIONS DO NOT MATCH'
              GOSUB 91000
            END ELSE  
              EOI = 1
              D.TRAN.TO.WHSE<1,LN> = TEMP.WHSE
              LINES=DCOUNT(D.TRAN.PROD.NO,VM)
              P_X  = 60;P_Y = SLN;P_VALUE = INV.UOM.STK "L#3";P_OPT = ""
              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
              CALL TRAN.DETAIL.MAINT(LN,CONO,CATG.TRK.LVL,PGM.MODE)
            END
          END ELSE
            ERRMSG = "WAREHOUSE IS NOT SETUP."
            GOSUB 91000
            MAT WHSE.REC = ''
          END
        END ELSE
          ERRMSG = 'CANNOT LOCATE INV.WHSE RECORD'
          GOSUB 91000
        END
      END
    END ELSE
      EOI = 1
    END
  UNTIL (EOI) DO REPEAT
  RETURN
*
****************
VALIDATE.SERIAL: 
****************
*
  SERIAL.OK = 1
*
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:TEMP.SERIAL THEN
    IF ISTK.POST.DATE#"" THEN
      * T26497 v
      IF CO.INTR.WHSE # '' AND ISTK.WHSE = CO.INTR.WHSE THEN
        ERRMSG = 'CANNOT APPLY,SERIAL IS IN AN INTER-DIVISIONAL WHSE '
        GOSUB 91000
        SERIAL.OK=0
      END ELSE
      * T26497 ^
        IF ISTK.RECP.PERIOD<=D.TRAN.PERIOD THEN
          IF ISTK.WHSE = D.TRAN.FROM.WHSE THEN              
            PTR = 1
            LOOP
              LOCATE ISTK.PROD IN D.TRAN.PROD.NO<1>,PTR SETTING XLN ELSE PTR = 0
              BEGIN CASE
                CASE PTR = 0
                CASE XLN = LN
                CASE TEMP.SERIAL = D.TRAN.SERIAL<1,XLN>
                  ERRMSG='Same product and serial are on the line # ':XLN
                  GOSUB 91000
                  PTR = 0
                  SERIAL.OK = 0
              END CASE
            WHILE PTR DO
              PTR = XLN + 1
            REPEAT
*T27645 v
            IF ISTK.CUR.QTY < 1 THEN
              ERRMSG='Cannot transfer zero quantity.'
              GOSUB 91000
              SERIAL.OK = 0
            END
*T27645 ^
          END ELSE                                          
            ERRMSG='Serial is in the ':ISTK.WHSE:' warehouse.'
            GOSUB 91000                                     
            SERIAL.OK = 0
          END                                               
        END ELSE
          ERRMSG='Cannot transfer serials that were received in future periods.'
          GOSUB 91000
          SERIAL.OK=0
        END
      END        ;* T26497
    END ELSE
      ERRMSG='Serial has not been received yet.'
      GOSUB 91000
      SERIAL.OK=0
    END
  END ELSE
    ERRMSG='Serial ':TEMP.SERIAL:' is not on file.'
    GOSUB 91000
    SERIAL.OK = 0
  END
  RETURN
*
******************
VALIDATE.RECEIPT: 
******************
*
  RECEIPT.OK = 1
*
  MATREAD INVR.REC FROM INV_RECEIPTS, CONO:TEMP.RECP THEN
    IF INVR.PERIOD<=D.TRAN.PERIOD THEN
      MATREAD IRW.REC FROM INV_RECP_WHSE,CONO:TEMP.RECP:"!":D.TRAN.FROM.WHSE THEN
        PTR = 1
        LOOP
          LOCATE INVR.PROD IN D.TRAN.PROD.NO<1>,PTR SETTING XLN ELSE PTR = 0
          BEGIN CASE
            CASE PTR = 0
            CASE XLN = LN
            CASE TEMP.RECP=D.TRAN.RECP<1,XLN>
              ERRMSG='Same product and receipt are on the line # ':XLN
              GOSUB 91000
              PTR = 0
              RECEIPT.OK = 0
          END CASE
        WHILE PTR DO
          PTR = XLN + 1
        REPEAT
*T27645 v
        IF IRW.CUR.QTY < 1 THEN
          ERRMSG='Receipt does not have any quantity in warehouse '
          ERRMSG:=D.TRAN.FROM.WHSE
          GOSUB 91000                                     
          RECEIPT.OK=0
        END
*T27645 ^
      END ELSE
        ERRMSG='Receipt does not have any quantity in warehouse '
        ERRMSG:=D.TRAN.FROM.WHSE
        GOSUB 91000                                     
        RECEIPT.OK=0
      END                                               
    END ELSE
      ERRMSG='Cannot transfer receipts that were received in future periods.'
      GOSUB 91000
*T27328 v
*        SERIAL.OK=0
      RECEIPT.OK=0
    END
  END ELSE
    ERRMSG='Receipt ':TEMP.RECP:' is not on file.'
    GOSUB 91000
    RECEIPT.OK = 0
  END
  RETURN
*
***************
VALIDATE.PROD: 
***************
*
  PROD.OK = 1
*
  MATREAD INV.REC FROM INVENTORY, CONO:TEMP.PROD THEN
    MATREAD IWH.REC FROM INV.WHSE, CONO:TEMP.PROD:'!':D.TRAN.FROM.WHSE THEN
      IF IWH.ON.HAND < 1 THEN
        ERRMSG = 'ZERO ON HAND FOR PRODUCT & WAREHOUSE'
        GOSUB 91000
        EXISTS.IN.WHSE = 0
        PROD.OK = 0
      END ELSE
        MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE THEN
          NULL
        END ELSE
          MAT CATG.REC = ''
          ERRMSG = "PRODUCT ":TEMP.PROD:" HAS INVALID PRODUCT LINE"
          GOSUB 91000
          DONE = 1
          PROD.OK = 0
        END
      END
    END ELSE
      ERRMSG = "CANNOT LOCATE PRODUCT ":TEMP.PROD:" IN WAREHOUSE ":D.TRAN.FROM.WHSE
      GOSUB 91000
      EXISTS.IN.WHSE = 0
      PROD.OK = 0
    END
  END ELSE
    ERRMSG = "Cannot locate Product # ":TEMP.PROD
    GOSUB 91000
    PROD.OK = 0
  END
  RETURN
*
9000* 
*
  GOSUB 15000;X = 0;Y = 23;TYP = 3
  ECD.NUM=45;ECD.MINV=OLD.START.LINE;ECD.MAXV=LAST.LINE
  ECD.ACTION=4;CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = '' OR LNO = 'END' THEN LNO = 0
  RETURN
*
* PRINT ONE LINE FOR PRODUCT INFORMATION
*
10000* 
*
  MATREAD INV.REC FROM INVENTORY, CONO:D.TRAN.PROD.NO<1,LN> ELSE
    MAT INV.REC = ""
  END
  MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
    MAT CATG.REC = ''
  END
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X = 0;P_Y = SLN;P_VALUE = LN"R#3";P_OPT = "CL"
  P_X  :=AM:4;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.SERIAL<1,LN>
  P_X  :=AM:20;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.RECP<1,LN>
  P_X  :=AM:31;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.PROD.NO<1,LN>
  P_X  :=AM:60;P_Y := AM:SLN;P_VALUE := AM:INV.UOM.STK"L#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X :=AM:4;P_Y :=AM:SLN+1;P_VALUE :=AM:INV.DESC"L#22"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
************
ENT.DESC: 
************
*
  ECD.NUM =2;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    NULL
  END ELSE
    D.TRAN.REASON.DESC = ECD.RET.VALUE
  END
  RETURN
*
************
ENT.DATE: 
************
*
  ECD.NUM = 11
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    MORE = 1
  END ELSE
    DEF.PERIOD = "";ERR.FLG = "";ERRMSG = ""
    CALL CHECK.PERIOD.DATE(CONO,ECD.RET.VALUE,DEF.PERIOD,FROM.WHSE.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL)
    BEGIN CASE
      CASE ERRMSG = ""
        D.TRAN.DATE.ENTER = ECD.RET.VALUE
* T27384 v
        IF CO.ICS.PERIOD.FLG = 'Y' THEN
          D.TRAN.PERIOD = DEF.PERIOD ; ECD.NUM = 12
          SCV.REC(ECD.NUM)<ECD.SCRN.NO> = D.TRAN.PERIOD
          ECD.ACTION = 5 ; CALL SCRN.EDIT
        END
* T27384 ^
      CASE ERR.FLG = 0
        D.TRAN.DATE.ENTER = ECD.RET.VALUE
        GOSUB 91000
* T27384 v
        IF CO.ICS.PERIOD.FLG = 'Y' THEN
          D.TRAN.PERIOD = DEF.PERIOD ; ECD.NUM = 12
          SCV.REC(ECD.NUM)<ECD.SCRN.NO> = D.TRAN.PERIOD
          ECD.ACTION = 5 ; CALL SCRN.EDIT
        END
* T27384 ^
      CASE ERR.FLG = 1
        GOSUB 91000;GOTO ENT.DATE
      CASE ERR.FLG = 2
        GOSUB 91000;ECD.RET.VALUE = "END"
    END CASE
    ERRMSG = ""
    ERR.FLG = ""
  END
  RETURN
*
***********
ENT.PERIOD: 
***********
*
  ECD.NUM = 12
  IF CO.ICS.PERIOD.FLG = 'N' THEN ; * T26556
    IF D.TRAN.PERIOD = "" THEN
      ECD.DEFAULT = DEF.PERIOD
    END
    ECD.ACTION = 4;CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN
      ERR.FLG = "";ERRMSG = ""
      CALL CHECK.PERIOD.DATE(CONO,D.TRAN.DATE.ENTER,ECD.RET.VALUE,FROM.WHSE.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL)
      BEGIN CASE
        CASE ERRMSG = ""
          D.TRAN.PERIOD = ECD.RET.VALUE
        CASE ERR.FLG = 0
          D.TRAN.PERIOD = ECD.RET.VALUE
          GOSUB 91000
        CASE ERR.FLG = 1
          GOSUB 91000;GOTO ENT.PERIOD
        CASE ERR.FLG = 2
          GOSUB 91000;ECD.RET.VALUE = "END"
      END CASE
      ERRMSG = ""
      ERR.FLG = ""
    END
*T26556 v
  END ELSE
*T28603    D.TRAN.PERIOD = DEF.PERIOD
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = D.TRAN.PERIOD
    ECD.ACTION = 5 ; CALL SCRN.EDIT
  END
*T26556 ^
  RETURN
*
*******************
ENT.FROM.WHSE: 
*******************
*
1200* 
  EOI = 0
  LOOP
    ECD.NUM = 24 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN
      EOI=1
    END ELSE
    * T26497 v
      IF CO.INTR.WHSE # '' AND ECD.RET.VALUE = CO.INTR.WHSE THEN
        ERRMSG = 'CAN NOT APPLY, USING AN INTER-DIVISIONAL WHSE IS RESTRICTED'
        GOSUB 91000
      END ELSE
    * T26497 ^
        MATREAD WHSE.REC FROM WAREHOUSE, CONO:ECD.RET.VALUE THEN
          D.TRAN.FROM.WHSE = ECD.RET.VALUE
          IF WHS.DIV='' THEN WHS.DIV=GEN.DIV
          FROM.WHSE.DIV = WHS.DIV
          EOI = 1
          ;* get current period 
          DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)         
          BEGIN CASE                                              
            CASE DIV.POS<1,1>=''                                  
              DIV.POS=DIV.POS<1,2>                                
              CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
              IF CUR.PERIOD<1,1>='' THEN                          
                CUR.PERIOD=CUR.PERIOD<1,2>                        
              END ELSE                                            
                IF CUR.PERIOD<1,2>='-2' THEN                      
                  ERRMSG=CUR.PERIOD<1,2>                          
                  GOSUB 93000                                     
                END                                               
              END                                                 
            CASE DIV.POS<1,1>='-1'                                
              ERRMSG=DIV.POS<1,2>                                 
              GOSUB 91000                                         
            CASE DIV.POS<1,1>='-2'                                
              ERRMSG=DIV.POS<1,2>                                 
              GOSUB 93000                                         
          END CASE                                                
        END ELSE
          ERRMSG = "WAREHOUSE ":ECD.RET.VALUE:" IS NOT SETUP."
          GOSUB 91000
        END
      END          ;* T26497
    END
  UNTIL (EOI) DO REPEAT
  RETURN
*
*************
CHECK.WHSE: 
*************
*
  EXISTS.IN.WHSE = 1
  ERRMSG = ""
  ERR.FLG = ""
  WHSE.CODE = INV.WHSE.CODE
  WCNT = DCOUNT(WHSE.CODE,VM)
  BEGIN CASE
    CASE WCNT < 1
      ERRMSG = 'NO WAREHOUSES SETUP FOR THIS PRODUCT'
      GOSUB 91000 
      EXISTS.IN.WHSE = 0 
    CASE 1
      LOCATE D.TRAN.FROM.WHSE IN WHSE.CODE<1>,1 SETTING POS THEN
        ;* this product exist in the from whse
        EXISTS.IN.WHSE = 1
        MATREAD IWH.REC FROM INV.WHSE, CONO:D.TRAN.PROD.NO<1,LN>:'!':D.TRAN.FROM.WHSE THEN
          IF IWH.ON.HAND < 1 THEN
            ERRMSG = 'ZERO ON HAND FOR PRODUCT & WAREHOUSE'
            GOSUB 91000
            EXISTS.IN.WHSE = 0
          END
        END ELSE
          ERRMSG = 'CANNOT LOCATE INV.WHSE RECORD'
          GOSUB 91000
          EXISTS.IN.WHSE = 0
        END
      END ELSE
        ERRMSG = "This product is not setup in whse ":D.TRAN.FROM.WHSE
        GOSUB 91000
        EXISTS.IN.WHSE = 0
      END
  END CASE
  IF NOT(EXISTS.IN.WHSE) THEN
    GOSUB DEL.LINE.DATA
    GOSUB 10000                                       
  END
  RETURN
*
*****************
DEL.LINE.DATA: 
*****************
*
  D.TRAN.RECP = DELETE(D.TRAN.RECP,1,LN,0)
  D.TRAN.SERIAL = DELETE(D.TRAN.SERIAL,1,LN,0)    
  D.TRAN.PROD.NO = DELETE(D.TRAN.PROD.NO,1,LN,0)
  D.TRAN.TO.WHSE = DELETE(D.TRAN.TO.WHSE,1,LN,0)
  RETURN
*
15000* 
*
**** SCROLL ROUTINE FOR PROD
*
  BEGIN.PAGE = 7
  PAGE.SIZE = 2
  LINE.SPACE = 2
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 19999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    MATREAD INV.REC FROM INVENTORY, CONO:D.TRAN.PROD.NO<1,N> ELSE
      MAT INV.REC = ""
    END
    MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
      MAT CATG.REC = ''
    END
    P_X = 0;P_Y = SLN;P_VALUE = N"R#3";P_OPT = "CL"
    P_X  :=AM:4;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.SERIAL<1,N>
    P_X  :=AM:20;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.RECP<1,N>
    P_X  :=AM:31;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.PROD.NO<1,N>
    P_X  :=AM:55;P_Y := AM:SLN;P_VALUE := AM:D.TRAN.TO.WHSE<1,N>
    P_X  :=AM:60;P_Y := AM:SLN;P_VALUE := AM:INV.UOM.STK"L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X :=AM:4;P_Y :=AM:SLN+1;P_VALUE :=AM:INV.DESC"L#22"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0;P_Y = SLN+1;P_VALUE = "";P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
19999 RETURN
*
**** CALLS FOR SYSCOM
91000 ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
*  ERRMSG = 1
  RETURN
92000 ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
