  SUBROUTINE WHSE.REG.INV.MAINT(STATUS,PROD.NUM,CONO)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INVENTORY
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - WHSE.REG.INV.MAINT
* BY          - JIHAD YAMOUT, C.B.A
* DATE        - 10/15/83
* DESCRIPTION - THIS PROGRAM REQUEST A WAREHOUSE CODE AND UP DATE
*               WHSE PRODUCT FILE.
* MODS
* 11/02/95 CT6 TASK 19404 POS DIVISIONALIZATION, Display owning div. on
*    the product warehouse screen.
*T23169 cindy 08/13/1998 * Fields 25,26 also referenced as 22,23. 22,23
*                          are invalid.
*T23278 markt 11/06/1998 * Check for divisional security
*T23526 rik 12/17/1998 * Display of min & max wrong.
*C32776 cm 03/03/99 * Min & max qty fields changed like 11a vers
*                         per LR.
*C33000 cm 04/05/1999 * Min & max qty fields changed.
*C36183 renee 04/14/00 * Yet another CSF for MIn * MAX QTY - If the scaler
*                        is set to 2 then the display has to also be set
*                        to MD2, not ICR.CNV.
*C36220 alex 04/21/2000 * Fix display of min/max quantity to be 'MD2'
*T25366 alex 08/03/2000 * Fix display of Min & Max qty.
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
**** INSERT FILES EQUATES
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>FOH.TABLE
  WHSE.KEY = ''
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
***** PRINT SCREEN
*
  ECD.SCRN.NO = 3
  ECD.ACTION=2;CALL SCRN.EDIT
*
**** PRINT PRODUCT AND DESCRIPTION
*
100*
  FOR SCV = 1 TO SCV.REC.SIZE
    SCV.REC(SCV)<ECD.SCRN.NO> = ""
  NEXT SCV
  ECD.ACTION = 6 ; CALL SCRN.EDIT
  SCV.REC(5)<ECD.SCRN.NO,1> = PROD.NUM
  ECD.NUM = 5
  ECD.ACTION=5;CALL SCRN.EDIT
  SCV.REC(8)<ECD.SCRN.NO,1> = INV.DESC
  ECD.NUM = 8
  ECD.ACTION=5;CALL SCRN.EDIT
  SCV.REC(24)<ECD.SCRN.NO,1> = INV.PAP.TYPE
  ECD.NUM = 24
  ECD.ACTION = 5 ; CALL SCRN.EDIT
***        CONVERT SHEET/WGHT/QTY
*T25366 v
*COPY>ICSBP>INV.UM.CNV
*T25366 ^
*
***** ENTER WAREHOUSE CODE
*
200*
  WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # "")
  ECD.NUM = 6
  ECD.HMSG = 'WAREHOUSE - ' : INV.WHSE.CODE<1,1>
  FOR I = 2 TO WHSE.CNT
    ECD.HMSG = ECD.HMSG : ', ' : INV.WHSE.CODE<1,I>
  NEXT I
  ECD.VALDAT.CODE = '2'
  ECD.PREFIX.ID = CONO
  ECD.VALDAT.FILE = WAREHOUSE
  ECD.ACTION=4;CALL SCRN.EDIT
  ECD.HMSG = ''
  IF ECD.RET.VALUE = 'END' THEN GOTO 99999
  WHSE.KEY = ECD.RET.VALUE
  FOR SAVE = 1 TO WHSE.REC.SIZE
    WHSE.REC(SAVE) = ECD.VALDAT.ITEM<SAVE>
  NEXT SAVE
  * T26126 v
  READU TMP.REC FROM INV.WHSE, CONO:PROD.NUM:'!':WHSE.KEY LOCKED
    ERRMSG = 'INVENTORY WAREHOUSE record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 200 
  END ELSE NULL
  * T26126 ^
*T23278 v
  DIV.CODE = WHS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    GOSUB 91000
    SCV.REC(6)<ECD.SCRN.NO,1> = ''
    GOTO 200
  END
*T23278 ^
  SCV.REC(7)<ECD.SCRN.NO,1> = WHS.DESC
  ECD.NUM = 7
  ECD.ACTION=5;CALL SCRN.EDIT
* TASK 19404 vvv
  ECD.NUM = 28
  SCV.REC(28)<ECD.SCRN.NO,1> = WHS.DIV
  ECD.ACTION=5; CALL SCRN.EDIT
* TASK 19404 ^^
*
***** READ WHSE.PRODUCT AND GET ALL VALUES
*
  MATREADU IWH.REC FROM INV.WHSE, CONO:PROD.NUM:'!':WHSE.KEY ELSE
300*
    MAT IWH.REC = ''
*         PRINT @(1,21):CL:'ITEM NOT ON FILE. IS THIS A NEW ITEM (Y)ES OR (N)O':
*         INPUT X:
    TYP=8;X=0;Y=21;PMSG="ITEM NOT ON FILE. IS THIS A NEW ITEM (Y)ES OR (N)O"
    CALL EDIT.SUB
    IF VALUE = 'END' THEN GOTO 300
*         PRINT @(1,21):CL:
    P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    X = VALUE
    IF X[1,1] = 'Y' THEN
      FOR I = 1 TO 7
        ON I GOSUB 1200,1300,1400,1450,1500,1550,1560
        IF ECD.RET.VALUE = 'END' THEN GOTO 100
      NEXT I
      GOSUB 3000
      ECD.ACTION=3;CALL SCRN.EDIT
      GOTO 301
    END ELSE
      IF X[1,1] = 'N' THEN
        GOTO 200
      END ELSE
*               PRINT @(1,23):CL:'PLEASE ENTER (Y)ES OR (N)O':
*               INPUT Y:
*               PRINT @(1,23):CL:
        TYP=8;X=0;Y=21;PMSG="PLEASE ENTER (Y)ES OR (N)O"
        CALL EDIT.SUB
        P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOTO 300
      END
    END
  END
  GOSUB 3000
  ECD.ACTION=3;CALL SCRN.EDIT
301*
  GOSUB 2000
  IF OPTION = '' AND MORE = 1 THEN GOTO 99999
  GOTO 100
*
**** ENTER PRICE.GROUP
*
1100*
  ECD.NUM = 10
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IWH.PRICE.GRP = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER STAND.COST
*
1200*
  ECD.NUM = 11
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IWH.STD.COST = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER AVG.COST
*
1300*
  ECD.NUM = 12
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IWH.AVG.COST = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER LIST.COST
*
1400*
  ECD.NUM = 13
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IWH.LIST.COST = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER INDIRECT PERCENT
*
1450*
  ECD.NUM = 27
  ECD.ACTION = 4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
    CASE NUM(ECD.RET.VALUE)
      ECD.RET.VALUE = ICONV(ECD.RET.VALUE,"MD2")
      IF ECD.RET.VALUE > "10000" THEN
        ERRMSG = "** OUT OF RANGE **";GOSUB 91000;GOTO 1450
      END
      IWH.FOH.PCT = ECD.RET.VALUE
      SCV.REC(27)<ECD.SCRN.NO> = OCONV(IWH.FOH.PCT,"MD2")
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      MATREAD FTR.REC FROM FOH.TABLE,CONO:ECD.RET.VALUE ELSE
        ERRMSG = "INVALID INDIRECT CODE";GOSUB 91000;GOTO 1450
      END
      IWH.FOH.PCT = ECD.RET.VALUE
  END CASE
  RETURN
*
***** ENTER MARKUP %
*
1500*
  ECD.NUM = 14
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IWH.MARKUP = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER MIN.WEIGHT
*
1550*
  X = 21 ; Y = 10 ; HMSG = 'Enter minimum for re-order purposes'
  *T25366 v
  * TYP = 4 ; O.R = 'R' ; MINV = '0' ; MAXV = '999999999'
  * MAXL = 10 ; SCALER = 2
  TYP = ICR.TYPE ; O.R = 'R' ; MINV = '0' ; MAXV = '999999999'
  MAXL = 10 ; SCALER = ICR.SCAL
  *T25366 ^
  DEFAULT = SCV.REC(25)<ECD.SCRN.NO>
  VALUE = ''
  CALL EDIT.SUB
  IF VALUE # 'END' THEN
    IWH.MIN.QTY=INT((((VALUE / ICR.MT1) * ICR.DV1 ) * ICR.DV2) + .5)
  END
  *T25366 v
  * SCV.REC(25)<ECD.SCRN.NO> = OCONV(VALUE,"MD2")
  IF IWH.MIN.QTY >= 0 THEN
    SCV.REC(25)<ECD.SCRN.NO> = OCONV(INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5), ICR.CNV)
  END ELSE
    SCV.REC(25)<ECD.SCRN.NO> = OCONV(INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5), ICR.CNV)
  END
  *T25366 ^
  ECD.NUM = 25 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
***** ENTER MAX.WEIGHT
*
1560*
  *T25366 v
  IF ICR.DV1 + 0 # 0 THEN
    IF IWH.MIN.QTY + 0 >= 0 THEN
      MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
      MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
  END ELSE
    MINV = 0
  END
  X = 21 ; Y = 11 ; HMSG = 'Enter maximum for re-order purposes'
  * TYP = 4 ; O.R = 'R' ; MINV = MINV ; MAXV = '999999999'
  * MAXL = 10 ; SCALER = 2
  TYP = ICR.TYPE ; O.R = 'R' ; MINV = MINV ; MAXV = '999999999'
  MAXL = 10 ; SCALER = ICR.SCAL
  *T25366 ^
  DEFAULT = SCV.REC(26)<ECD.SCRN.NO>
  VALUE = ''
  CALL EDIT.SUB
  IF VALUE # 'END' THEN
    IWH.MAX.QTY=INT((((VALUE / ICR.MT1) * ICR.DV1 ) * ICR.DV2) + .5)
  END
  *T25366 v
  * SCV.REC(26)<ECD.SCRN.NO> = OCONV(VALUE,"MD2")
  IF IWH.MAX.QTY >= 0 THEN
    SCV.REC(26)<ECD.SCRN.NO> = OCONV(INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5), ICR.CNV)
  END ELSE
    SCV.REC(26)<ECD.SCRN.NO> = OCONV(INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5), ICR.CNV)
  END
  *T25366 ^
  ECD.NUM = 26 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
***** ENTER OPTION
*
2000*
  MORE = 0
  LOOP
    ECD.NUM = 17
    SCV.REC(17)<ECD.SCRN.NO> = ""
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'E' OR OPTION = 'END'
        MORE = 1
      CASE NUM(OPTION)
        MORE = 0
        ON OPTION GOSUB 1200,1300,1400,1450,1500,1550,1560
      CASE OPTION = 'F'
        MORE = 1
        MATWRITE IWH.REC ON INV.WHSE, CONO:PROD.NUM:'!':WHSE.KEY
        LOCATE WHSE.KEY IN INV.WHSE.CODE<1>,1 SETTING PP ELSE
          PP = 0
          INV.WHSE.CODE = INSERT(INV.WHSE.CODE,1,-1,0,WHSE.KEY)
        END
        MATWRITE INV.REC ON INVENTORY, CONO:PROD.NUM
      CASE OPTION = ''
        MORE = 1
    END CASE
  WHILE MORE = 0 DO REPEAT
  RETURN
*
***** GET VALUES FROM FILE
*
3000*
  SCV.REC(10)<ECD.SCRN.NO,1> = IWH.PRICE.GRP
  SCV.REC(11)<ECD.SCRN.NO,1> = IWH.STD.COST
  SCV.REC(12)<ECD.SCRN.NO,1> = IWH.AVG.COST
  SCV.REC(13)<ECD.SCRN.NO,1> = IWH.LIST.COST
  SCV.REC(14)<ECD.SCRN.NO,1> = IWH.MARKUP
  IF ICR.DV1 + 0 = 0 THEN ICR.DV1 = 1
  IF IWH.MIN.QTY >= 0 THEN
    MIN.QTY=INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
  END ELSE
    MIN.QTY=INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
  END
  SCV.REC(25)<ECD.SCRN.NO,1> = OCONV(MIN.QTY,ICR.CNV)
  IF IWH.MAX.QTY >= 0 THEN
    MAX.QTY=INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
  END ELSE
    MAX.QTY=INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
  END
  SCV.REC(26)<ECD.SCRN.NO,1> = OCONV(MAX.QTY,ICR.CNV)
  SCV.REC(27)<ECD.SCRN.NO,1> = OCONV(IWH.FOH.PCT,"MD2")
  RETURN
*
***** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
