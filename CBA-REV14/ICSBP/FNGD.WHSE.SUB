  SUBROUTINE FNGD.WHSE.SUB(CONO,PDNO,OCO,OLD.NAME)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INVENTORY
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - FNGD.WHSE.SUB
* BY          - JULIANNE RIVERA, C.B.A
* DATE        - 08/08/91
* DESCRIPTION - THIS PROGRAM REQUEST A WAREHOUSE CODE AND UP DATE
*               WHSE PRODUCT FILE.
*T23316 markt 10/09/1998 * Recreate the INV.FULL.DESC field if INV.DESC
*                          changes (resulting from either a 'C'hange or
*                          a 'D'uplication.)
*T23278 markt 10/21/1998 * Add check for divisional security
*********************************************************************
*
*---- data Structure Libraries
*
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>PMC.CPYLIB>DIVISION
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>PRICE.TABLE
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
  DIM S.INV.REC(75)
*
*---- Setup SYSCOM
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Initialization
*
  ESN = ECD.SCRN.NO
*
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
*
*---- Display Screen
100*
  FOR SCV = 1 TO SCV.REC.SIZE
      SCV.REC(SCV)<ESN> = ""
  NEXT SCV
  ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = PDNO
  ECD.ACTION = 5; CALL SCRN.EDIT
*      ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = INV.DESC;* T23316
  ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC;* T23316
  ECD.ACTION = 5; CALL SCRN.EDIT
*
*---- Setup Unit Conversions
*
*COPY>ICSBP>INV.UM.CNV
*
*---- Warehouse
200*
  WHSE.CNT = DCOUNT(INV.WHSE.CODE,VM)
  ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.HMSG = "Warehouse - " : INV.WHSE.CODE<1,1>
  FOR I = 2 TO WHSE.CNT
      ECD.HMSG = ECD.HMSG : ", " : INV.WHSE.CODE<1,I>
  NEXT I
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 99999
  IF ECD.RET.VALUE = "???" THEN
      GXR.NAME = "WAREHOUSE"
      GXR.FILE = WAREHOUSE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
          GOTO 100
      END ELSE
          ECD.RET.VALUE = GXR.ID
          SCV.REC(3)<ESN> = GXR.ID
          ECD.ACTION = 3; CALL SCRN.EDIT
      END
  END
  MATREAD WHSE.REC FROM WAREHOUSE, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "NOT ON FILE"
      GOSUB 91000
      GOTO 200
  END
*T23278 v
  DIV.CODE = WHS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 200
  END
*T23278 ^
  WHNO = ECD.RET.VALUE
  ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = WHS.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 29; SCV.REC(ECD.NUM)<ESN> = WHS.DIV
  ECD.ACTION = 5; CALL SCRN.EDIT
  MATREAD DIV.REC FROM DIVISION, CONO:WHS.DIV ELSE
      MAT DIV.REC = ""; DIV.DESC = "UNKNOWN"
  END
  ECD.NUM = 30; SCV.REC(ECD.NUM)<ESN> = DIV.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
*
*---- INV.WHSE Record
*
  IWH.ID = CONO:PDNO:"!":WHNO
  MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
      SCV.REC(5)<ESN> = IWH.SALES.CODE
      SCV.REC(7)<ESN> = IWH.PRICE.GRP
      IF IWH.PRICE.GRP # "" THEN
          MATREAD PGT.REC FROM PRICE.TABLE, CONO:IWH.PRICE.GRP THEN
              SCV.REC(8)<ESN> = PGT.DESC
          END
      END
      SCV.REC(9)<ESN> = IWH.EST.SALE
      SCV.REC(11)<ESN> = IWH.SELL<1,1>
      SCV.REC(13)<ESN> = IWH.SELL<1,2>
      SCV.REC(15)<ESN> = IWH.SELL<1,3>
      SCV.REC(17)<ESN> = IWH.SELL<1,4>
      SCV.REC(19)<ESN> = IWH.STD.COST
      SCV.REC(21)<ESN> = IWH.AVG.COST
      IF IWH.MIN.QTY >=  0 THEN
          MIN.QTY = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
      END ELSE
          MIN.QTY = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
      END
      SCV.REC(25)<ESN> = OCONV(MIN.QTY,ICR.CNV)
      IF IWH.MAX.QTY >=  0 THEN
          MAX.QTY = INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
      END ELSE
          MAX.QTY = INT((((IWH.MAX.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
      END
      SCV.REC(27)<ESN> = OCONV(MAX.QTY,ICR.CNV)
      ECD.ACTION = 3; CALL SCRN.EDIT
  END ELSE
      MAT IWH.REC = ""
      ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "Y" THEN
          RELEASE INV.WHSE, IWH.ID
          GOTO 200
      END
      LIMIT = 11
      FOR OPTION = 1 TO LIMIT
          ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100
          IF ECD.RET.VALUE = "END" THEN LIMIT = 0
      NEXT OPTION
      IF NOT(LIMIT) THEN
          RELEASE INV.WHSE, IWH.ID
          GOTO 200
      END
  END
*
*---- Prompt Line
*
  MORE = 1
  LOOP
      ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
          CASE OPTION = "E" OR OPTION = "END"
              RELEASE INV.WHSE, IWH.ID
              MORE = 0
          CASE OPTION = "F"
              MORE = 0
              MATWRITE IWH.REC ON INV.WHSE, IWH.ID
              LOCATE WHNO IN INV.WHSE.CODE<1>,1 SETTING PP ELSE
                  INV.WHSE.CODE<1,PP> = WHNO
                  IF INV.BASE.SKU # "" THEN
                      MAT S.INV.REC = MAT INV.REC
                      BASE.SKU = INV.BASE.SKU
                      MATREADU INV.REC FROM INVENTORY, CONO:BASE.SKU THEN
                          LOCATE PDNO IN INV.SUBS<1>,1 SETTING FND ELSE
                              INV.SUBS<1,FND> = PDNO
                          END
                          MATWRITE INV.REC ON INVENTORY, CONO:BASE.SKU
                          MAT INV.REC = MAT S.INV.REC
                      END ELSE
                          RELEASE INVENTORY, CONO:BASE.SKU
                          ERRMSG = "Cannot locate Base Product # ":BASE.SKU
                          GOSUB 91000
                          MAT INV.REC = MAT S.INV.REC
                          INV.BASE.SKU = ""
                      END
                  END
                  CALL INV.FULL.DESC.SUB(CONO,CONTROL)
                  MATWRITEU INV.REC ON INVENTORY, CONO:PDNO
                  MATWRITEU IOF.REC ON INV.FNGD, CONO:PDNO
                  MATREADU IH.REC FROM INV.HIST, CONO:PDNO THEN
                      RELEASE INV.HIST, CONO:PDNO
                  END ELSE
                      MAT IH.REC = ""
                      MATWRITE IH.REC ON INV.HIST, CONO:PDNO
                  END
                  CALL GEN.XREF.MAINT(GXR.CO,PDNO,OLD.NAME,INV.FULL.DESC,INVENTORY.XREF,PREFIX)
              END
          CASE NOT(NUM(OPTION))
              ERRMSG = "Invalid Entry, try again !!"
              GOSUB 91000
          CASE OPTION < 1 OR OPTION > 11
              ERRMSG = "Out Of Range !!"
              GOSUB 91000
          CASE 1
              ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100
      END CASE
  WHILE MORE DO REPEAT
  ECD.ACTION = 6; CALL SCRN.EDIT
  GOTO 100
*
*---- Sales Code
1100*
  ECD.NUM = 5
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "???"
          GXR.SORT.FILE = "SALES.CODE"
          GXR.FILE = SALES.CODE
          GXR.NAME = "ID.CODE"
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          ECD.ACTION = 2; CALL SCRN.EDIT
          IF GXR.ID = "" THEN
              SCV.REC(5)<ESN> = IWH.SALES.CODE
              ECD.ACTION = 3; CALL SCRN.EDIT
              GOTO 1100
          END ELSE
              ECD.RET.VALUE = GXR.ID
              SCV.REC(5)<ESN> = GXR.ID
              ECD.ACTION = 3; CALL SCRN.EDIT
          END
          IWH.SALES.CODE = ECD.RET.VALUE
      CASE 1
          MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
              ERRMSG = "Cannot locate Sales Code # ":ECD.RET.VALUE
              GOSUB 91000; GOTO 1100
          END
          IWH.SALES.CODE = ECD.RET.VALUE
  END CASE
  RETURN
*
*---- Price Table
1200*
  ECD.NUM = 7
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
      CASE ECD.RET.VALUE = "END"
          GOTO 1209
      CASE ECD.RET.VALUE = ""
          IWH.PRICE.GRP = ECD.RET.VALUE
          MAT PGT.REC = ""
      CASE ECD.RET.VALUE = "???"
          GXR.SORT.FILE = "PRICE.TABLE"
          GXR.FILE = PRICE.TABLE
          GXR.NAME = "GEN.CODE"
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          ECD.ACTION = 2; CALL SCRN.EDIT
          IF GXR.ID = "" THEN
              SCV.REC(7)<ESN> = IWH.PRICE.GRP
              ECD.ACTION = 3; CALL SCRN.EDIT
              GOTO 1200
          END ELSE
              ECD.RET.VALUE = GXR.ID
              SCV.REC(7)<ESN> = GXR.ID
              ECD.ACTION = 3; CALL SCRN.EDIT
          END
          IWH.PRICE.GRP = ECD.RET.VALUE
          MATREAD PGT.REC FROM PRICE.TABLE, CONO:ECD.RET.VALUE ELSE
              ERRMSG = "Cannot locate Price Group Table # ":ECD.RET.VALUE
              GOSUB 91000; GOTO 1200
          END
      CASE 1
          MATREAD PGT.REC FROM PRICE.TABLE, CONO:ECD.RET.VALUE ELSE
              ERRMSG = "Cannot locate Price Group Table # ":ECD.RET.VALUE
              GOSUB 91000; GOTO 1200
          END
          IWH.PRICE.GRP = ECD.RET.VALUE
  END CASE
  ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = PGT.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
1209*
  RETURN
*
*---- List Price
1300*
  ECD.NUM = 9
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.EST.SALE = ECD.RET.VALUE
  END
  RETURN
*
*---- 1st Selling Price
1400*
  ECD.NUM = 11
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.SELL<1,1> = ECD.RET.VALUE
  END
  RETURN
*
*---- 2nd Selling Price
1500*
  ECD.NUM = 13
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.SELL<1,2> = ECD.RET.VALUE
  END
  RETURN
*
*---- 3rd Selling Price
1600*
  ECD.NUM = 15
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.SELL<1,3> = ECD.RET.VALUE
  END
  RETURN
*
*---- 4th Selling Price
1700*
  ECD.NUM = 17
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.SELL<1,4> = ECD.RET.VALUE
  END
  RETURN
*
*---- Standard Cost
1800*
  ECD.NUM = 19
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.STD.COST = ECD.RET.VALUE
  END
  RETURN
*
*---- Average Cost
1900*
  ECD.NUM = 21
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
      IWH.AVG.COST = ECD.RET.VALUE
  END
  RETURN
*
*---- Minimum Quantity
2000*
  X = 20 ; Y = 18 ; HMSG = 'Enter minimum for re-order purposes'
  IF ICR.TYPE = 3 THEN
      TYP = 3 ; O.R = 'O' ; MINV = '0' ; MAXV = '99999999'
      MAXL = 8 ; SCALER = 0
  END ELSE
      TYP = 4 ; O.R = 'R' ; MINV = '0.00' ; MAXV = '999999999'
      MAXL = 10 ; SCALER = 2
  END
  DEFAULT = SCV.REC(25)<ECD.SCRN.NO>
  VALUE = ''
  CALL EDIT.SUB
  IF VALUE # "END" THEN
      IWH.MIN.QTY = INT((((VALUE / ICR.MT1) * ICR.DV1 ) * ICR.DV2) + .5)
  END
  SCV.REC(25)<ECD.SCRN.NO> = OCONV(VALUE,ICR.CNV)
  ECD.NUM = 25 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
*---- Maximum Quantity
2100*
  IF IWH.MIN.QTY + 0 >=  0 THEN
      MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
  END ELSE
      MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
  END
  IF ICR.TYPE = 3 THEN
      IF IWH.MIN.QTY + 0 >= 0 THEN
          MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
      END ELSE
          MINV = INT((((IWH.MIN.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
      END
  END ELSE
      MINV = IWH.MIN.QTY / 10
  END
  X = 20 ; Y = 19 ; HMSG = 'Enter maximum for re-order purposes'
  IF ICR.TYPE = 3 THEN
      TYP = 3 ; O.R = 'O' ; MINV = MINV ; MAXV = '99999999'
      MAXL = 8 ; SCALER = 0
  END ELSE
      TYP = 4 ; O.R = 'R' ; MINV = MINV ; MAXV = '999999999'
      MAXL = 10 ; SCALER = 2
  END
  DEFAULT = SCV.REC(26)<ECD.SCRN.NO>
  VALUE = ''
  CALL EDIT.SUB
  IF VALUE # "END" THEN
      IWH.MAX.QTY = INT((((VALUE / ICR.MT1) * ICR.DV1 ) * ICR.DV2) + .5)
  END
  SCV.REC(27)<ECD.SCRN.NO> = OCONV(VALUE,ICR.CNV)
  ECD.NUM = 27 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
*---- Error Routines
*
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
