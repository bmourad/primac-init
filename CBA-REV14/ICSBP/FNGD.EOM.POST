*REVISION    - [08.1]
*T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
*T23278 markt 11/23/1998 * Make fiscal data multi-value by division.
*T25978 adelgado 01/29/2002 * Add the use of prompts (S,SR,ST,SB).
*T25740 epitka 03/04/2002 * REV12
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
   MATREADU FISCAL.REC FROM CONTROL, CONO:'JCFISCAL' ELSE
      RELEASE CONTROL, CONO:'JCFISCAL'
      ERRMSG = 'CANNOT LOCATE CONTROL, JCFISCAL'
      GOTO 93000
   END
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"
      GOTO 93000
   END
   IF SECURITY.REC<1> = "N" THEN SCV.REC(21)<1> = "ALL"
   READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
      GOTO 93000
   END
   IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
         ERRMSG = "Division ":ECD.RET.VALUE:" not found on Control File DIVISIONS Record"
         GOTO 93000
      END
   END ELSE
      POS = 1
   END
   JC.PER = FR.CURR.PER<1,POS>
   JC.YEAR = FR.CURR.PER<1,POS>[1,4]
   JC.CURR = FR.CURR.PER<1,POS>[5,2]
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   MATREADU FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, ':SYS.FISCAL
      GOTO 93000
   END
   IF FR.PRINT<1,POS> = "X" THEN
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'E R R O R !!! FLAG IS SET TO ABORT ALL END OF MONTH PROCEDURES'
      GOTO 93000
   END
*
   MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
      GOTO 93000
   END
   MATREAD SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, SALESDATES'
      GOTO 93000
   END
   READ FISCALMON FROM CONTROL, CONO:'FISCAL' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, FISCAL'
      GOTO 93000
   END
   READ OPENDATES FROM CONTROL, CONO:'OPENDATES' ELSE
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'CANNOT LOCATE CONTROL, OPENDATES'
      GOTO 93000
   END
*
* T 26685
   EOD.HID = ""
   IF SECURITY.REC<2> = "Y" THEN EOD.HID = "!":DIV.CODE
* READ EOD.HIST.REC FROM EOD.HIST, CONO:'FNGD.EOM':FR.CURR.PER<1,POS> ELSE
   READ EOD.HIST.REC FROM EOD.HIST, CONO:'FNGD.EOM':FR.CURR.PER<1,POS>:EOD.HID ELSE
      EOD.HIST.REC = ""
   END
*
***** SETUP VALUES FROM M.SCREENS
*
   ECD.ACTION = 1
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'EOD.POST'
   CALL SCRN.EDIT
   ECD.SCRN.NO = 1
*
***** INT ECD.RT.VALUE AND PRINT SCREEN
*
100 MAT SCV.REC = ""
   ECD.ACTION = 2
   CALL SCRN.EDIT
   STMT = STMT.HEAD : ' END OF DAY/PERIOD PROCESSING'
   STMT = SPACE(INT((42-LEN(STMT))/2)) : STMT
   SCV.REC(1)<1> = STMT
   SCV.REC(2)<1> = SALD.CURR<1,1>
   SCV.REC(3)<1> = SALD.CURR<1,3>
   SCV.REC(4)<1> = SALD.CURR<1,2>
   SCV.REC(5)<1> = FISCALMON[5,2]
   IF SCV.REC(5)<1> > 0 THEN
      SCV.REC(6)<1> = SALESDATES.REC(SCV.REC(5)<1>+1)<1,2>
      SCV.REC(7)<1> = OPENDATES<SCV.REC(5)<1>>
   END
   STMT = STMT.HEAD
   STMT = SPACE(INT((25-LEN(STMT))/2)) : STMT
   SCV.REC(8)<1> = STMT
   PERIOD = FR.CURR.PER<1,POS>
   YEAR = FR.CURR.PER<1,POS>[1,4]
   CURR = FR.CURR.PER<1,POS>[5,2]
*
   YRS = YEAR - JC.YEAR
   SCV.REC(9)<1> = CURR
   SCV.REC(10)<1> = SALESDATES.REC(CURR+1)<1,2>
   IF FR.NEXT.PER<1,POS> # '' THEN;* T23278
      SCV.REC(12)<1> = 'WARNING !!! THIS PROCESS WILL OVERLAY PREVIOUS POSTING'
   END
   SCV.REC(21)<1> = DIV.CODE;* T23278
   ECD.ACTION = 3
   IF GUIFORM THEN
      P_TITLE = SCV.REC(1)<1>
      CALL VSI_PTITLE(P_TITLE,ERROR)
   END
   CALL SCRN.EDIT
   PAGE.SIZE = 4
   BEGIN.PAGE = 13
   LINE.SPACE = 1
   OLD.START.LINE = 0
   LINES = DCOUNT(EOD.HIST.REC, AM)
   LN = LINES
   IF LN < 1 THEN LN = 1
   GOSUB 180
*
   ECD.NUM = 11
   ECD.ACTION = 4
   IF FR.CURR.DATE<1,POS> = '' THEN
      CURR.DATE = OCONV(SALESDATES.REC(CURR+1)<1,1>,"D/")
      CURR.DATE = CURR.DATE[1,6] : CURR.DATE[7,4] + YRS
      ECD.DEFAULT = ICONV(CURR.DATE,"D/")
   END ELSE
      ECD.DEFAULT = FR.CURR.DATE<1,POS>;* T23278
   END
   CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN
      RELEASE CONTROL, CONO:SYS.FISCAL
      GOTO 199
   END
   FR.CURR.DATE<1,POS> = ECD.RET.VALUE
   FR.NEXT.PER<1,POS> = CURR + 1
   IF FR.NEXT.PER<1,POS> > NUM.PERIODS THEN
      FR.NEXT.DATE<1,POS> = OCONV(SALESDATES.REC(2)<1,1>,"D/")
      FR.NEXT.DATE<1,POS> = FR.NEXT.DATE<1,POS>[1,6] : FR.NEXT.DATE<1,POS>[7,4] + YRS + 1
      FR.NEXT.DATE<1,POS> = ICONV(FR.NEXT.DATE<1,POS>,"D/")
      FR.NEXT.PER<1,POS> = YEAR + 1 : '01'
   END ELSE
      FR.NEXT.DATE<1,POS> = OCONV(SALESDATES.REC(FR.NEXT.PER<1,POS> + 1)<1,1>,"D/")
      FR.NEXT.DATE<1,POS> = FR.NEXT.DATE<1,POS>[1,6] : FR.NEXT.DATE<1,POS>[7,4] + YRS 
      FR.NEXT.DATE<1,POS> = ICONV(FR.NEXT.DATE<1,POS>,"D/")
      IF LEN(FR.NEXT.PER<1,POS>) < 2 THEN
         FR.NEXT.PER<1,POS> = YEAR : '0' : FR.NEXT.PER<1,POS>
      END ELSE
         FR.NEXT.PER<1,POS> = YEAR : FR.NEXT.PER<1,POS>
      END
   END
*
*--- OPTION
*
   MORE = 1
   LOOP
      ECD.NUM = 15
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
            RELEASE CONTROL, CONO:SYS.FISCAL
            MORE = 0
         CASE ECD.RET.VALUE = "E"
            RELEASE CONTROL, CONO:SYS.FISCAL
            ECD.RET.VALUE = 'END'
            MORE = 0
         CASE ECD.RET.VALUE = "S"
            LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 180
         CASE ECD.RET.VALUE = 'SR'     
            LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 180          
         CASE ECD.RET.VALUE = 'ST'     
            LN = 1               
            GOSUB 180          
         CASE ECD.RET.VALUE = 'SB'     
            LN = LINES           
            GOSUB 180          
         CASE ECD.RET.VALUE = "C"
            IN.ACCT.LEN = LEN(CO.ACCT.PIC)
            FOR I = 1 TO GLTABLE.REC.SIZE
               GLTABLE.REC(I) = GLTABLE.REC(I):STR('0',IN.ACCT.LEN-LEN(GLTABLE.REC(I)))
               GLTABLE.REC(I) = GLTABLE.REC(I)[1,IN.ACCT.LEN]
            NEXT I
            MORE = 0
      END CASE
   WHILE MORE DO REPEAT
   GOTO 199

180 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN RETURN
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 9 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(EOD.HIST.REC<N>, "D2/") "R#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 9 ; P_Y = SLN ; P_VALUE = SPACE(3) ; P_OPT = ""
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(8)
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
199 GEN.DIV = '00'
   GEN.DEPT = '00'
   GEN.CCTR = '000'
