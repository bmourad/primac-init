*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
********************************************************************
* REVISION   -[08.0B]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     -PRIMAC
* SOURCE     -JCSBP
* PROGRAM    -POST.MATL
* AUTHOR     -ZIAD YAMOUT, C.B.A
* DESCRIPTION
* This program posts DAILY.MATL record to JOB and JOB.MATL files.
* The DAILY.MATL record is deleted.
******* renee 08/18/1997 * Putting changes Julie made in REV10b into
*                          REV11 for T21523 and C25667. (see below)
*C25667 GAT   05/09/1996 * CORRECT PC/MSI POST ON MINUTE CALC DIF.
*T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID NOT RECEIVED
*T23278 markt 11/20/1998 * Accumulate fiscal data by division.
*T26334 epitka 12/12/2001 * REV12
*T26497 adelgado 04/02/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26334 epitka 04/04/2002 * R
*T26556 adelgado 05/10/2002 * Add validation for period checking at the
*                             serial level.
*T26665 adelgado 07/05/2002 * Mods to recalculate Average cost if
*                             posting to a future period.
*T26505 epitka 08/29/2002 * Force location from serial.
*T25740 epitka 01/17/2003 * fix 41358 csf
*T27341 lross 03/17/2003 * PERIOD check will only work if DMT.WHSE #
*                          ISTK.WHSE (or LOC diff).
*T27990 lross 03/17/2004 * Include check for qty adj in future periods.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JCS.CPYLIB>WIP.LEVEL
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.MATL
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>OJOB.MATL
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV.HIST
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INTITIALIZATION
*
*DIM ORG.IWH.REC(80) ; MAT ORG.IWH.REC=''
MAT FILE.VARS=''
MAT EDIT.COM.DRIVER=''
MAT COMP.REC=''
MAT JSI.REC=""
MAT IH.REC=""
GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000"  
*
*---- SETUP ERRMSG ROUTINE
*
SYS.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
*
PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM A PROC";GOTO 93000
DIV.CODE=XX<5>
*
*---- OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93000
OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG='SPOIL.STATS FILE IS MISSING';GOTO 93000
OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG='DAILY.MATL FILE IS MISSING';GOTO 93000
OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG='JOB.MATL FILE IS MISSING';GOTO 93000
OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG='PROD.STATS FILE IS MISSING';GOTO 93000
OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG='COST.CNTR.WIP FILE IS MISSING';GOTO 93000
OPEN '','OJOB.MATL' TO OJOB.MATL ELSE ERRMSG='OJOB.MATL FILE IS MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING';GOTO 93000
OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FILE IS MISSING';GOTO 93000
OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000
OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING';GOTO 93000
OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING';GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING';GOTO 93000
OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG='INV.HIST FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.LOC FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE ERRMSG='INV.WHSE.LOC.TEMP FILE IS MISSING';GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG='INV.STATS FILE IS MISSING';GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG='INV.JOB.STATS FILE IS MISSING';GOTO 93000
OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG='FOH.TABLE FILE IS MISSING';GOTO 93000
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG='INV_AUDIT_HIST FILE IS MISSING';GOTO 93000
OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000
OPEN '', 'INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
OPEN '', 'INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV_SERIAL_TEMP FILE IS MISSING';GOTO 93000
GANG.PRESENT=1
OPEN '','GANG.JOB' TO GANG.JOB ELSE GANG.PRESENT=0
OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE GANG.PRESENT=0
*
*---- SETUP VALUES FROM JCS.SCREENS
*
ECD.ACTION=1
ECD.SCRN.CNT=1
ECD.SCRN.NAME='GET.FISCAL.MONTH'
CALL SCRN.EDIT
ECD.SCRN.NO=1
*
*---- INTITIALIZATION
*
MAT SCV.REC=""
ECD.ACTION=2
CALL SCRN.EDIT
DCNT=0
SAVE.ID=""
SAVE.QTY=""
SAVE.STATUS=""
EDIT.ERROR=0
QTY.ERROR=0
PREV.PROD="!@#$%"
PREV.WHSE="!@#$%"
PREV.LOC ="!@#$%"
PREV.SERIAL="!@#$%"
*
*---- MAIN PROCESSING
*
READNEXT DMT.ID ELSE GOTO 99999
TODAY=DATE()
CONO=DMT.ID[1,3]
JMT.ID=DMT.ID[4,99]
MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
   MAT WIP.LEVEL.REC=""
   WLR.MT.COST=2;WLR.MT.WIP=2
END
CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POSTING PROCESS","JCFISCAL",CURR.MON,DIV.CODE);* T23278
IF POSTING.MON="END" THEN GOTO 99999
MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE
   MAT JOB.CUTOFF.REC=''
   J.CUTOFF.NUM=0
END
MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
   RELEASE DAILY.MATL, DMT.ID
   GOTO 99999
END
GOSUB CHECK.DMT.REC
IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL
IF DMT.STATUS # "" THEN
   EDIT.ERROR=1
END ELSE
   GOSUB CHECK.INVENTORY
   IF DMT.STATUS # "" THEN
      EDIT.ERROR=1
   END ELSE
      GOSUB CHECK.QTY
      IF DMT.STATUS # "" THEN QTY.ERROR=1
   END
END
GOSUB SET.SAVE.DATA
PREV.PROD=DMT.PROD
PREV.WHSE=DMT.WHSE
PREV.LOC =DMT.LOC
PREV.SERIAL=DMT.SERIAL
RELEASE
*
DATA=1
LOOP
   READNEXT DMT.ID ELSE DATA=0
WHILE DATA DO
   IF DMT.ID[1,3] = CONO THEN 
      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN
         IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR DMT.LOC # PREV.LOC OR DMT.SERIAL # PREV.SERIAL THEN
            SAVE.DMT.ID=DMT.ID
            IF DCNT>0 THEN
               IF EDIT.ERROR OR QTY.ERROR THEN
                  GOSUB PROCESS.REJECTS
               END ELSE
                  GOSUB POST.SAVED.DATA
               END
               DMT.ID=SAVE.DMT.ID
               MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN
                  JMT.ID=DMT.ID[4,99]
                  DCNT=0
                  SAVE.ID=""
                  SAVE.QTY=""
                  SAVE.STATUS=""
                  QTY.ERROR=0
                  EDIT.ERROR=0
                  PREV.PROD=DMT.PROD
                  PREV.WHSE=DMT.WHSE
                  PREV.LOC =DMT.LOC
                  PREV.SERIAL=DMT.SERIAL
               END ELSE
                  RELEASE DAILY.MATL, DMT.ID
                  PREV.PROD="!@#$%"
                  PREV.WHSE="!@#$%"
                  PREV.LOC ="!@#$%"
                  PREV.SERIAL="!@#$%"
                  DMT.STATUS="Cannot re-access DAILY.MATL, ":DMT.ID
                  DCNT=0
                  SAVE.ID=""
                  SAVE.QTY=""
                  SAVE.STATUS=""
                  EDIT.ERROR=1
                  QTY.ERROR=0
                  QTY.USED=""
                  GOSUB SET.SAVE.DATA
               END
            END
         END
         IF NOT(EDIT.ERROR) THEN
            GOSUB CHECK.DMT.REC
            IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL  
            IF DMT.STATUS # "" THEN
               EDIT.ERROR=1
            END ELSE
               GOSUB CHECK.INVENTORY
               IF DMT.STATUS # "" THEN
                  EDIT.ERROR=1
               END ELSE
                  GOSUB CHECK.QTY
                  IF DMT.STATUS # "" THEN QTY.ERROR=1
               END
            END
            GOSUB SET.SAVE.DATA
            RELEASE
         END
      END ELSE
         RELEASE DAILY.MATL, DMT.ID
      END
   END
   RELEASE
REPEAT
*
BEGIN CASE
   CASE DCNT=0
      NULL
   CASE EDIT.ERROR OR QTY.ERROR
      GOSUB PROCESS.REJECTS
   CASE 1
      GOSUB POST.SAVED.DATA
END CASE
*
GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
***************
CHECK.DMT.REC: 
***************
*
ERR=0
1000 *
POST.OSJ=0;DMT.STATUS='';QTY.USED=""
MATREADU JOB.REC FROM JOB, CONO : DMT.JOB ELSE
   MAT JOB.REC=''
   FND=0
   IF NUM(DMT.JOB) THEN
      IF DMT.JOB < J.CUTOFF.NUM THEN FND=1
   END ELSE
      JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)
      FOR L=1 TO JC.CNT WHILE FND=0
         PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
         IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN
            CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
            IF NUM(CHK.VALUE) THEN
               IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
            END
         END
      NEXT L
   END
   IF FND=1 THEN
      POST.OSJ=1
      JOB.DIV=DMT.DIV
      JOB.TYPE=DMT.TYPE
   END ELSE
      DMT.STATUS='JOB #':DMT.JOB:' MISSING';ERR=1
   END
END
IF NOT(ERR) THEN
   BEGIN CASE
      CASE JOB.STATUS<1,1>=9
         DMT.STATUS="JOB #":DMT.JOB:" CANCELLED";ERR=1
      CASE JOB.STATUS<1,1>=7
         DMT.STATUS="JOB #":DMT.JOB:" READY TO PURGE";ERR=1
      CASE JOB.STATUS<1,1>=8
         DMT.STATUS="JOB #":DMT.JOB:" IS PURGED";ERR=1
      CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # ""
         IF DMT.INIT="" THEN
            DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHORIZATION IS REQUIRED'
            ERR=1
         END ELSE
            MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE
               DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHORIZATION INVALID'
               ERR=1
            END
         END
   END CASE
END
IF NOT(ERR) THEN
   IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
      DMT.STATUS="JOB/TYPE MISMATCH"
   END ELSE
      IF JOB.DIV # DMT.DIV THEN
         DMT.STATUS='JOB/DIV MISMATCH'
      END ELSE
        * T26497 v
         IF DMT.WHSE = CO.INTR.WHSE AND CO.INTR.WHSE # '' THEN
            DMT.STATUS = 'UNABLE TO USE MATERIAL FROM INTER-DIVISIONAL WAREHOUSE'
         END ELSE
        * T26497 ^
            MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.REC=''
            IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN
               DMT.STATUS='JOB/WHS DIV MISMATCH'
            END ELSE
               IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
                  DMT.STATUS='JOB/DEPT MISMATCH'
               END ELSE
                  MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV THEN
                     MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT THEN
                        LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT THEN
                           MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR THEN
                              IF CCTR.DEPT = DMT.DEPT THEN
                                 IF CCTR.TYPE#'F' THEN
                                    LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
                                       DMT.STATUS='DEPT/CCTR MISMATCH'
                                    END
                                 END ELSE
                                    DMT.STATUS='CCTR ':DMT.CCTR:' IS FROZEN'
                                 END
                              END ELSE
                                 DMT.STATUS='DEPT/CCTR MISMATCH'
                              END
                           END ELSE
                              DMT.STATUS='CCTR ':DMT.CCTR:' MISSING'
                           END
                        END ELSE
                           DMT.STATUS='DIV/DEPT MISMATCH'
                        END
                     END ELSE
                        DMT.STATUS='DEPT ':DMT.DEPT:' MISSING'
                     END
                  END ELSE
                     DMT.STATUS='DIV ':DMT.DIV:' MISSING'
                  END
               END
            END
         END     ;* T26497
      END
   END
END
RETURN
*
*****************
CHECK.INVENTORY: 
*****************
*
HOLD.QTY=DMT.QTY
HOLD.STK.QTY=DMT.STK.QTY
DMT.QTY=0
DMT.STK.QTY=0
JWPTR=''
MAT INAH.REC=''
  * T26665 v
  * CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.NON.CHG,JWPTR)
CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.NON.CHG,JWPTR,CURR.MON)
  * T26665 ^
DMT.QTY=HOLD.QTY
DMT.STK.QTY=HOLD.STK.QTY
RETURN
*
******************
CHECK.QTY: 
******************
*
GOSUB GET.INV.UM.CNV
IF DMT.SERIAL="" OR IWLO.SERIAL="" THEN
   QTY.ON.HAND=IWLO.LOC.ON.HAND
END ELSE
   LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE
      RLOC=1
   END
*  QTY.ON.HAND=IWLO.CURR.WT<1,RLOC>
   QTY.ON.HAND=ISTK.CUR.QTY
END
BEGIN CASE
   CASE DMT.RS.QTYPE=""
      IF CATG.TRACK.QOH="Y" THEN
         QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
         QTY.USED=DMT.QTY
         IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
         IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
      END ELSE
         QTY.USED=DMT.QTY
      END
   CASE DMT.RS.QTYPE="WU"
      QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
*T27341 v insert
      IF ABS(QTY.REM-DMT.QTY) <= 9 THEN
         DMT.QTY=QTY.REM
      END
*T27341 ^
      QTY.USED=DMT.QTY
      IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
      IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
   CASE DMT.RS.QTYPE="WR"
      QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
      QTY.USED=QTY.REM-DMT.QTY
      IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
   CASE DMT.RS.QTYPE="SU"
      QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
      IF ABS(QTY.REM-DMT.QTY) <= 50 THEN
         DMT.QTY=QTY.REM
      END
      QTY.USED=DMT.QTY
      BEGIN CASE
         CASE INV.UNIT<1,3>="MSI"
            IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
            IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
         CASE 1
            IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
            IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
      END CASE
      IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
      IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
   CASE DMT.RS.QTYPE="SR"
      QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
      QTY.USED=QTY.REM-DMT.QTY
      IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
   CASE DMT.RS.QTYPE="DR"
      QTY=(((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100*INV.CORE.DIA/100))*1000)
      BEGIN CASE
         CASE QTY <= 0
            QTY=0
            QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
            QTY.USED=QTY.REM
         CASE INV.PAP.TYPE="ROLL"
            QTY=INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000)/10*1000+0.5)
            QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
            QTY.USED=QTY.REM-QTY
         CASE INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"
            BEGIN CASE
               CASE INV.UNIT<1,2>="FT"
                  QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/12+0.5)
               CASE INV.UNIT<1,2>="PC"
                  QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/10+0.5)
            END CASE
            QTY=INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
            QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
            QTY.USED=QTY.REM-QTY
      END CASE
      IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"
   CASE 1
      IF CATG.TRACK.QOH="Y" THEN
         QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)
         QTY.USED=DMT.QTY
         IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"
      END ELSE
         QTY.USED=DMT.QTY
      END
END CASE
RETURN
*
**************
CHECK.SERIAL: 
**************
*
IF DMT.SERIAL # '' THEN
   MATREAD ISTK.REC FROM INV_SERIAL, CONO:DMT.SERIAL THEN
      IF ISTK.POST.DATE="" THEN
         DMT.STATUS="SERIAL NOT RECVD"
      END ELSE
         IF ISTK.WHSE # DMT.WHSE OR ISTK.LOC#DMT.LOC THEN 
            IF ISTK.WHSE # DMT.WHSE THEN
               DMT.STATUS ='Serial is in different warehouse.'
            END
            IF ISTK.LOC# DMT.LOC THEN DMT.LOC=ISTK.LOC
*T27341 ;* T26556 v
*       IF ISTK.RECP.PERIOD GT POSTING.MON THEN
*         DMT.STATUS = 'Serial was received after the posting period'
*       END
            ;* T26556 ^
         END
*T27341 v Moved outside of "IF" above.
         IF ISTK.RECP.PERIOD GT POSTING.MON THEN
            DMT.STATUS = 'Serial was received after the posting period'
         END
*T27990 v
         IF ISTK.FUTR.AUDIT.NO # '' THEN
           FOR FF = 1 TO DCOUNT(ISTK.FUTR.AUDIT.NO,VM)
             MATREAD INAH.REC FROM INV_AUDIT_HIST,CONO:ISTK.FUTR.AUDIT.NO<1,FF> THEN
               IF INAH.PERIOD > POSTING.MON THEN
                 ISTK.CUR.QTY -= INAH.QTY
                 ISTK.RSVB.QTY -= INAH.QTY
               END
             END
           NEXT FF
           IF ISTK.CUR.QTY <= 0 THEN
             DMT.STATUS='No serial quantity available in current period'
           END
         END
*T27990 ^
      END
   END
END
RETURN
*
****************
SET.SAVE.DATA: 
****************
*
DCNT=DCNT+1
SAVE.ID<DCNT>=DMT.ID
SAVE.QTY<DCNT>=QTY.USED
SAVE.STATUS<DCNT>=DMT.STATUS
RETURN
*
****************
PROCESS.REJECTS: 
****************
*
FOR DPTR=1 TO DCNT
   DMT.ID=SAVE.ID<DPTR>
   MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN
      STATUS=SAVE.STATUS<DPTR>
      BEGIN CASE
         CASE STATUS # ""
            DMT.STATUS=STATUS
         CASE EDIT.ERROR
            DMT.STATUS="PRODUCT HOLD"
         CASE QTY.ERROR
            DMT.STATUS="QUANTITY ???"
      END CASE
      MATWRITE DMT.REC ON DAILY.MATL, DMT.ID
   END ELSE
      RELEASE DAILY.MATL, DMT.ID
   END
NEXT DPTR
RETURN
*
*****************
POST.SAVED.DATA: 
*****************
*
ERRFLG=0
FOR DPTR=1 TO DCNT UNTIL ERRFLG
   DMT.ID=SAVE.ID<1>
   JMT.ID=DMT.ID[4,99]
   MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
      RELEASE DAILY.MATL, DMT.ID
      SAVE.STATUS<1>="Cannot re-access DAILY.MATL, ":DMT.ID
      EDIT.ERROR=1;ERRFLG=1;GOTO 3099
   END
   GOSUB CHECK.DMT.REC
   IF DMT.STATUS # "" THEN
      RELEASE DAILY.MATL, DMT.ID
      SAVE.STATUS<1>="Posting failure for DAILY.MATL, ":DMT.ID
      EDIT.ERROR=1;ERRFLG=1;GOTO 3099
   END
   MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE
      RELEASE DAILY.MATL, DMT.ID
      SAVE.STATUS<1>="Cannot re-access INVENTORY, ":DMT.PROD
      EDIT.ERROR=1;ERRFLG=1;GOTO 3099
   END
   DMT.QTY=SAVE.QTY<1>
   GOSUB GET.INV.UM.CNV
   DMT.STK.QTY=INT(((DMT.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2+0.5)
   JWPTR=''
   MAT INAH.REC=''
    * T26665 v
    * CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.NON.CHG,JWPTR)
   CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.NON.CHG,JWPTR,CURR.MON)
    * T26665 ^
   IF DMT.STATUS # "" THEN
      RELEASE
      SAVE.STATUS<1>=DMT.STATUS
      QTY.ERROR=1;ERRFLG=1;GOTO 3099
   END
   GOSUB POST.MATL
   SAVE.ID=DELETE(SAVE.ID,1,0,0)
   SAVE.QTY=DELETE(SAVE.QTY,1,0,0)
   SAVE.STATUS=DELETE(SAVE.STATUS,1,0,0)
3099 NEXT DPTR
IF ERRFLG THEN
   DCNT=DCOUNT(SAVE.ID,AM)
   GOSUB PROCESS.REJECTS
END
RETURN
*
***************
POST.MATL: 
***************
*
BEGIN CASE
   CASE POST.OSJ=0
      MATWRITE JOB.REC ON JOB, CONO : DMT.JOB
      MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
      IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE
      IH.ID=CONO : DMT.PROD
      IF ISTAT.JOB="" AND ISTAT.PO="" THEN
         DELETE INV.STATS, IWH.ID
      END ELSE
         MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
      END
      IF IJS.JOB.QTY+IJS.JOB.ALOC+IJS.REQ.QTY=0 AND IJS.JMT.SEQ="" THEN
         DELETE INV.JOB.STATS, IWH.ID:"!":DMT.JOB
      END ELSE
         MATWRITE INV.JS.REC ON INV.JOB.STATS, IWH.ID:"!":DMT.JOB
      END
      MATWRITE PRDS.REC ON PROD.STATS, PRDS.ID
      IF SSR.ID # "" THEN
         MATWRITE SSR.REC ON SPOIL.STATS, SSR.ID
      END
      IF CCW.ID # "" THEN
         MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
      END
      IF CATG.TRACK.QOH="Y" THEN
         GOSUB SET.INAH
         ACTION=4
         JOB.ID=CONO:DMT.JOB
         PERIOD=POSTING.MON
         BEGIN CASE                                                    
            CASE CATG.TRK.LVL='S'                                       
               TMP.ARR= DMT.SERIAL                                       
               CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG)
            CASE CATG.TRK.LVL='G'                                       
               TMP.ARR=DMT.LOC                                           
               CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG)
         END CASE                                                      
         MATWRITE IH.REC ON INV.HIST, IH.ID
      END
      MATWRITE JMT.REC ON JOB.MATL, JMT.ID
      DELETE DAILY.MATL, DMT.ID
      IF GANG.PRESENT THEN
         READV REC FROM GANG.JOB,CONO:DMT.JOB,1 THEN
            MTL.ID=JMT.ID[4,99]
            JDPTR=DCOUNT(JMT.DCOST,VM)
            STATUS=""
            CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,GANG.JOB,GANG.ALLOC,STATUS,JWPTR)
            IF STATUS # "" THEN
               P_X =0;P_Y=23;P_VALUE=@(-4):STATUS;P_OPT=""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               INPUT REPLY,1:
               P_X =0;P_Y=23;P_VALUE=@(-4);P_OPT=""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END
         END
      END
   CASE 1
      MAT OJMT.REC=''
      OJMT.JOB=DMT.JOB
      OJMT.TYPE=JMT.TYPE
      OJMT.SPOIL.CODE=JMT.SPOIL.CODE
      OJMT.DIV=JMT.DIV
      OJMT.DEPT=DMT.DEPT
      OJMT.CCTR=DMT.CCTR
      OJMT.PROD=DMT.PROD
      OJMT.WHSE=DMT.WHSE
      OJMT.LOC=JMT.LOC
      OJMT.DATE=JMT.DATE
      OJMT.MON=POSTING.MON
      OJMT.QTY=JMT.QTY
      OJMT.DIAM=JMT.DIAM
      OJMT.SHEET=JMT.SHEET
      OJMT.R.S.ID=JMT.R.S.ID
      OJMT.PTR=JMT.PTR
      OJMT.COST=JMT.COST
      OJMT.SALE=JMT.SALE
      MATWRITE OJMT.REC ON OJOB.MATL, DMT.ID
      MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
      IF CATG.TRACK.QOH="Y" THEN
         IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE
         GOSUB SET.INAH                                  
         ACTION=4                                        
         JOB.ID=CONO:DMT.JOB
         PERIOD=POSTING.MON
         BEGIN CASE                                                    
            CASE CATG.TRK.LVL='S'                                       
               TMP.ARR= DMT.SERIAL                                       
               CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG)
            CASE CATG.TRK.LVL='G'                                       
               TMP.ARR=DMT.LOC                                           
               CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG)
         END CASE                                                      
         IH.ID=CONO : DMT.PROD
         MATWRITE IH.REC ON INV.HIST, IH.ID
      END
      DELETE DAILY.MATL, DMT.ID
END CASE
RETURN
*
***************
SET.INAH: 
***************
*
IF WHS.DIV='' THEN WHS.DIV=GEN.DIV
INAH.PROD=DMT.PROD
INAH.WHSE=DMT.WHSE
INAH.TYPE='S'
INAH.SRC='U'
INAH.DATE=DMT.DATE
INAH.PERIOD=POSTING.MON
INAH.JOB=DMT.JOB
INAH.RECP.NO=ISTK.RECP
INAH.LOC=DMT.LOC
INAH.TRAN=DMT.JOB
INAH.SERIAL=DMT.SERIAL
INAH.QTY = INAH.NEW.QTY - INAH.CUR.QTY
INAH.DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR 
RETURN
*
****************
GET.INV.UM.CNV: 
****************
*
*COPY>ICSBP>INV.UM.CNV
RETURN
*
*
*---- ERROR ROUTINES
*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*---- END OF PROGRAM
*
99999 *
END
