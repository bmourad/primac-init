   SUBROUTINE INV.SEL.INQ(CONO,WORK.REC)
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.INQ
*********************************************************************
* REVISION    - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - INV.SEL.INQ
* DATE        - 04/27/01
* DESCRIPTION - This program is used to display Barcode items received and 
*              a given location.
*
* ICS REWRITE
* SD = SCREEN DATA
* WORK.REC = ORIGINAL RECORD 
* TMP.REC =  SORTED RECORD
*
* T25473 edvard 04/27/2001 
* C41801 cmykleb 05/09/2003 * Correct scrolling problem.
*ENDDOC
*********************************************************************
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
   PAGE.SIZE = 13
   START = 1
   ESN = ECD.SCRN.NO
*
   LOCNO = "ALL"
   WNO = "ALL"
   MIN.QTY = 0
   MIN.QTY.CNV = 1
   FOR MX = 1 TO ICR.SCAL
      MIN.QTY.CNV = MIN.QTY.CNV * 10
   NEXT MX
   RQTY = "R"
   SD = "" ; * SCREEN DATA
*  SD = WORK.REC
   GOSUB PROCESS.SELECTION
   GOSUB BUILD.SCREEN.DATA
   ECD.ACTION = 3 ; CALL SCRN.EDIT
*
   LOOP
      ECD.NUM = 21; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = "END" OR ACTION = "E" OR ACTION = ""
            ACTION = ""
         CASE ACTION = "1"
            GOSUB ENT.WHSE
         CASE ACTION = "2"
            GOSUB ENT.LOC
         CASE ACTION = "3"
            GOSUB ENT.QTY
         CASE ACTION = "4"
            GOSUB ENT.SORT.TYPE
         CASE ACTION = "P"
            GOSUB PROCESS.SELECTION
         CASE ACTION[1,1] = "S"
            GOSUB SCROLL
         CASE 1
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
      END CASE
   WHILE ACTION # "" DO REPEAT
   GOTO 99999
*
**************************************************************************
********* S U B R O U T I N E S ******************************************
**************************************************************************
*
*********
ENT.WHSE: 
*********
*
   ECD.NUM = 2;  ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "ALL"
         WNO = "ALL"
      CASE 1
         WNO = ECD.RET.VALUE
   END CASE
   RETURN
*
**********
ENT.LOC: 
**********
*
   ECD.NUM = 3;  ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "ALL"
         LOCNO = "ALL"
      CASE 1
         LOCNO = ECD.RET.VALUE
   END CASE
   RETURN
*
**********
ENT.QTY: 
**********
*
   ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE < 1
         MIN.QTY = 0
      CASE 1
         MIN.QTY = ECD.RET.VALUE
   END CASE
   RETURN
*
**************
ENT.SORT.TYPE: 
**************
*
   ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "R"
         RQTY = ECD.RET.VALUE
      CASE ECD.RET.VALUE = "Q" 
         RQTY = ECD.RET.VALUE
      CASE 1
         ERRMSG = "Invalid enter R for Receipt Date or Q for Quantity"
         GOSUB 91000
         GOTO ENT.SORT.TYPE
   END CASE
   RETURN
*
*******************
PROCESS.SELECTION: 
*******************
*
   TMP.REC = ""
   IF WNO = "ALL" THEN
      TMP.REC<1> = WORK.REC<1>
      TMP.REC<2> = WORK.REC<2>
      TMP.REC<3> = WORK.REC<3>
      TMP.REC<4> = WORK.REC<4>
      TMP.REC<5> = WORK.REC<5>
      TMP.REC<6> = WORK.REC<6>
      TMP.REC<7> = WORK.REC<7>
   END ELSE
      NUM.VALUE = DCOUNT(WORK.REC<1>,VM)
      TINDX = 0
      FOR I = 1 TO NUM.VALUE
         IF WORK.REC<1,I>= WNO THEN
            TINDX = TINDX + 1
            TMP.REC<1,TINDX> = WORK.REC<1,I>
            TMP.REC<2,TINDX> = WORK.REC<2,I>
            TMP.REC<3,TINDX> = WORK.REC<3,I>
            TMP.REC<4,TINDX> = WORK.REC<4,I>
            TMP.REC<5,TINDX> = WORK.REC<5,I>
            TMP.REC<6,TINDX> = WORK.REC<6,I>
            TMP.REC<7,TINDX> = WORK.REC<7,I>
         END
      NEXT I
   END
   IF LOCNO # "ALL" THEN
      NUM.VALUE = DCOUNT(TMP.REC<1>,VM)
      FOR I = NUM.VALUE TO 1 STEP -1
         IF "X":TMP.REC<2,I>#"X":LOCNO THEN
            TMP.REC = DELETE(TMP.REC,1,I,0)
            TMP.REC = DELETE(TMP.REC,2,I,0)
            TMP.REC = DELETE(TMP.REC,3,I,0)
            TMP.REC = DELETE(TMP.REC,4,I,0)
            TMP.REC = DELETE(TMP.REC,5,I,0)
            TMP.REC = DELETE(TMP.REC,6,I,0)
            TMP.REC = DELETE(TMP.REC,7,I,0)
         END
      NEXT I
   END
   IF MIN.QTY > 0 THEN
      NUM.VALUE = DCOUNT(TMP.REC<1>,VM)
      FOR I = NUM.VALUE TO 1 STEP -1
         IF TMP.REC<4,I> < (MIN.QTY * MIN.QTY.CNV) THEN
            TMP.REC = DELETE(TMP.REC,1,I,0)
            TMP.REC = DELETE(TMP.REC,2,I,0)
            TMP.REC = DELETE(TMP.REC,3,I,0)
            TMP.REC = DELETE(TMP.REC,4,I,0)
            TMP.REC = DELETE(TMP.REC,5,I,0)
            TMP.REC = DELETE(TMP.REC,6,I,0) 
            TMP.REC = DELETE(TMP.REC,7,I,0)
         END
      NEXT I
   END
   NUM.VALUE = DCOUNT(TMP.REC<1>,VM)
   SD = ""
   IF RQTY = "R" THEN
      FOR I = 1 TO NUM.VALUE
         LOCATE TMP.REC<5,I> IN SD<5>,1 BY "AR" SETTING TINDX THEN
            SD = INSERT(SD,1,TINDX,0,TMP.REC<1,I>)
            SD = INSERT(SD,2,TINDX,0,TMP.REC<2,I>)
            SD = INSERT(SD,3,TINDX,0,TMP.REC<3,I>)
            SD = INSERT(SD,4,TINDX,0,TMP.REC<4,I>)
            SD = INSERT(SD,5,TINDX,0,TMP.REC<5,I>)
            SD = INSERT(SD,6,TINDX,0,TMP.REC<6,I>)
            SD = INSERT(SD,7,TINDX,0,TMP.REC<7,I>)
         END ELSE
            SD = INSERT(SD,1,TINDX,0,TMP.REC<1,I>)
            SD = INSERT(SD,2,TINDX,0,TMP.REC<2,I>)
            SD = INSERT(SD,3,TINDX,0,TMP.REC<3,I>)
            SD = INSERT(SD,4,TINDX,0,TMP.REC<4,I>)
            SD = INSERT(SD,5,TINDX,0,TMP.REC<5,I>)
            SD = INSERT(SD,6,TINDX,0,TMP.REC<6,I>)
            SD = INSERT(SD,7,TINDX,0,TMP.REC<7,I>)
         END
      NEXT I
   END ELSE
      FOR I = 1 TO NUM.VALUE
         LOCATE TMP.REC<4,I> IN SD<4>,1 BY "AR" SETTING TINDX THEN
            SD = INSERT(SD,1,TINDX,0,TMP.REC<1,I>)
            SD = INSERT(SD,2,TINDX,0,TMP.REC<2,I>)
            SD = INSERT(SD,3,TINDX,0,TMP.REC<3,I>)
            SD = INSERT(SD,4,TINDX,0,TMP.REC<4,I>)
            SD = INSERT(SD,5,TINDX,0,TMP.REC<5,I>)
            SD = INSERT(SD,6,TINDX,0,TMP.REC<6,I>)
            SD = INSERT(SD,7,TINDX,0,TMP.REC<7,I>)
         END ELSE
            SD = INSERT(SD,1,TINDX,0,TMP.REC<1,I>)
            SD = INSERT(SD,2,TINDX,0,TMP.REC<2,I>)
            SD = INSERT(SD,3,TINDX,0,TMP.REC<3,I>)
            SD = INSERT(SD,4,TINDX,0,TMP.REC<4,I>)
            SD = INSERT(SD,5,TINDX,0,TMP.REC<5,I>)
            SD = INSERT(SD,6,TINDX,0,TMP.REC<6,I>)
            SD = INSERT(SD,7,TINDX,0,TMP.REC<7,I>)
         END
      NEXT I
   END
   GOSUB BUILD.SCREEN.DATA
   ECD.ACTION = 6 ; CALL SCRN.EDIT
   ECD.ACTION=3 ; CALL SCRN.EDIT
   RETURN
*
*********
SCROLL: 
*********
*
   LN.CNT = DCOUNT(SD<1>,VM)
   BEGIN CASE
      CASE ACTION = "S" OR ACTION = "SF"
         IF LN.CNT > PAGE.SIZE THEN
            START +=PAGE.SIZE
            IF START > LN.CNT THEN START = 1
         END
      CASE ACTION = "SR"
         IF LN.CNT > PAGE.SIZE THEN
            START -=PAGE.SIZE
*C41801 v
*           IF START<LN.CNT THEN START = 1
            IF START < 0 THEN START = 1
*C41801 ^
         END
      CASE ACTION = "ST"
         START = 1
      CASE ACTION = "SB"
         START=LN.CNT
      CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
         CHK.START = ACTION[2,99]+0
         IF CHK.START < 1 OR CHK.START > LN.CNT THEN
            ERRMSG = "** Invalid selection **"
            GOSUB 91000
            RETURN ; * C41801
         END
         START = CHK.START ; * C41801
   END CASE
   START=1+INT((START-1)/PAGE.SIZE)*PAGE.SIZE 
   ECD.NUM=10;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=11;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=12;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=13;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=14;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=15;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
*ECD.NUM=22;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
*ECD.NUM=23;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
   RETURN
*
******************
BUILD.SCREEN.DATA: 
******************
*
   LN.CNT = DCOUNT(SD<1>,VM)
   LN.NUM = ""
   SCV.REC(14)<ESN>=''
   FOR LN = 1 TO LN.CNT
      LN.NUM<1,LN> = LN
      SCV.REC(14)<ESN,LN> = OCONV(SD<4,LN>,ICR.CNV1)
      IF INV.M.LINE = "FNGD" THEN
*    SCV.REC(22)<ESN,LN> = OCONV(SD<6,LN>,ICR.CNV1)
*    SCV.REC(23)<ESN,LN> = OCONV(SD<7,LN>,ICR.CNV1)
      END
   NEXT LN
   SCV.REC(10)<ESN> = LN.NUM
   SCV.REC(11)<ESN> = SD<1>
   SCV.REC(12)<ESN> = SD<2>
   SCV.REC(13)<ESN> = SD<3>
*  SCV.REC(14)<ESN> = SD<4>
   SCV.REC(15)<ESN> = SD<5>
*  SCV.REC(22)<ESN> = SD<6>
*  SCV.REC(23)<ESN> = SD<7>
   SCV.REC(24)<ESN>=INV.UNIT<1,2> ;* STOCKIN UOM
   RETURN
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
99999*
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END
