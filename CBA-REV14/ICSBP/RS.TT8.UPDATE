*********************************************************************
*
* REVISION - [08.2]
*
* PROGRAM  - RS.TT8.UPDATE
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/21/91
*
* DESCRIPTION
*
* This program will process transactions received from the handheld
* bar code reader stored in the TT8.TRAN file by TT8.UTIL.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>TT8.TRAN
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>PO.RSKI.XREF
*COPY>ICS.CPYLIB>PO.MAN.XREF
*COPY>ICS.CPYLIB>ROLL.SKID.INFO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>RS.XFER
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","TT8.TRAN" TO TT8.TRAN ELSE
         ERRMSG = "CANNOT OPEN TT8.TRAN FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","PO" TO PO ELSE
         ERRMSG ="CANNOT OPEN PO FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","PO.RSKI.XREF" TO PO.RSKI.XREF ELSE
         ERRMSG ="CANNOT OPEN PO.RSKI.XREF FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE
         ERRMSG ="CANNOT OPEN PO.MAN.XREF FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE
         ERRMSG = "CANNOT OPEN ROLL.SKID.INFO FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","INVENTORY" TO INVENTORY ELSE
         ERRMSG = "CANNOT OPEN INVENTORY FILE"
         GOSUB 90000
         GOTO 99999 
      END
      OPEN "","RS.XFER" TO RS.XFER ELSE
         ERRMSG = "CANNOT OPEN RS.XFER FILE"
         GOSUB 90000
         GOTO 99999 
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      TRANSEQ = ""
      PREV.RDATE = "!@#$%"
*
      READU TT8.PAR FROM TT8.TRAN, CONO:"CONTROL" ELSE
         RELEASE
         GOTO 99999
      END
      FRSTREC = TT8.PAR<1>+0
      LASTREC = TT8.PAR<2>+0
      IF FRSTREC = LASTREC THEN GOTO 99999
      TT8.ID = FRSTREC+1
*
*---- MAIN PROCESSING
*
      LOOP
         MATREADU TT8.REC FROM TT8.TRAN, CONO:TT8.ID ELSE
            RELEASE TT8.TRAN, CONO:TT8.ID
            GOTO 190
         END
         IF TT8.PDATE # "" THEN
            RELEASE TT8.TRAN, CONO:TT8.ID
            GOTO 190
         END
         BEGIN CASE
         CASE TT8.TTYPE = "TS"
            TDATE = TT8.TDATE
            TTIME = TT8.TTIME
            MANIFEST.ID = ''
            MANIFEST.TOT = ''
         CASE TT8.TTYPE = "M"
            MDATE = TT8.TDATE
            MTIME = TT8.TTIME
            MANIFEST.ID  = TT8.MAN.ID
            IF TT8.MAN.TOT = "" THEN
               MANIFEST.TOT = ""
            END ELSE
               MANIFEST.TOT = INT(TT8.MAN.TOT)
            END
         CASE TT8.TTYPE = "R"
            RDATE = TT8.TDATE
            RTIME = TT8.TTIME
            MATREADU RSKI.REC FROM ROLL.SKID.INFO, CONO:TT8.RS.ID ELSE
               MAT RSKI.REC = ""
               RSKI.PO.NO   = "*BAD*"
               RSKI.PO.LINE = 1
               RSKI.INV.NO  = "??????"
               RSKI.UNIT    = "???"
               RSKI.MANIFEST.NO = '1'
            END
* CSF 22647
            IF RSKI.POST.DATE # "" THEN
               ERRMSG='ROLL-SKID ':TT8.RS.ID:' HAS ALREADY BEEN RECEIVED! '
               GOSUB 90000
               DELETE TT8.TRAN, CONO:TT8.ID
               GOTO 190
            END
*
            INV.ID = RSKI.INV.NO
            MATREAD INV.REC FROM INVENTORY, CONO:INV.ID ELSE
               MAT INV.REC = ""
               INV.PAP.TYPE = "???"
            END
*
            BEGIN CASE
            CASE INV.UNIT<1,2>="SHT" AND INV.UNIT<1,3>="LBS"
               ICR.CNV="MD0";ICR.DV1=INV.M.WT;ICR.MT1=1;ICR.DV2=1
            CASE INV.UNIT<1,2>="PC" AND INV.UNIT<1,3>="MSI"
               ICR.CNV="MD0";ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=10;ICR.DV2=1
            CASE INV.UNIT<1,2>="FT" AND INV.UNIT<1,3>="MSI"
               ICR.CNV="MD0";ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=100;ICR.DV2=12
            CASE 1
               ICR.CNV="MD2";ICR.DV1=10;ICR.MT1=1;ICR.DV2=1
            END CASE
*
            RSKI.MILL.ROLL.ID   = TT8.MILL.ID
            RSKI.WHSE           = TT8.WHSE
            RSKI.LOC            = TT8.LOC
            BEGIN CASE
            CASE INV.PAP.TYPE = "ROLL"
               RSKI.ROLL.WEIGHT = TT8.QTY*10
               RSKI.LBS.ENTERED = TT8.QTY
            CASE RSKI.UNIT = "LBS" OR RSKI.UNIT = "MSI"
               RSKI.ROLL.WEIGHT = TT8.QTY*10
               RSKI.LBS.ENTERED = TT8.QTY
               RSKI.SHEET = INT(((RSKI.ROLL.WEIGHT/ICR.DV1)*ICR.MT1)/ICR.DV2+0.5)
            CASE INV.PAP.TYPE = "???"
               RSKI.LBS.ENTERED = TT8.QTY/100
            CASE 1
               RSKI.LBS.ENTERED = INT(TT8.QTY/100+0.5)
               BEGIN CASE
               CASE RSKI.UNIT = "FT" AND INV.UNIT<1,2> = "PC"
                  RSKI.SHEET = INT(RSKI.LBS.ENTERED * 12 / 10 + 0.5)
               CASE RSKI.UNIT = "PC" AND INV.UNIT<1,2> = "FT"
                  RSKI.SHEET = INT(RSKI.LBS.ENTERED * 10 / 12 + 0.5)
               CASE 1
                  RSKI.SHEET = INT(TT8.QTY/100+0.5)
               END CASE
               RSKI.ROLL.WEIGHT = INT(((RSKI.SHEET/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
            END CASE
            RSKI.OPER.ID    = "TT8"
            RSKI.ENTRY.DATE = MDATE
            RSKI.STATUS     = ""
*
            PO.NO = RSKI.PO.NO
            PO.PRESENT = 1
            MATREAD PO.REC FROM PO, CONO:PO.NO ELSE
               MAT PO.REC = ""
               PO.PRESENT = 0
            END
            BEGIN CASE
* Bad roll skids have no update of manifest
            CASE PO.NO = "*BAD*"
* No prior manifest number used
            CASE RSKI.MANIFEST.NO = ''
               RSKI.MANIFEST.NO = MANIFEST.ID
* Prior manifest used
            CASE RSKI.MANIFEST.NO # ''
               BEGIN CASE
* Manifest is same no change to files
               CASE RSKI.MANIFEST.NO = MANIFEST.ID
* Different manifest
               CASE RSKI.MANIFEST.NO # MANIFEST.ID
                  OLD.RSMAN.ID = CONO:RSKI.PO.NO:'!':RSKI.MANIFEST.NO
* Update old manifest PO.MAN.XREF and PO
                  MATREADU RSMAN.REC FROM PO.MAN.XREF, OLD.RSMAN.ID THEN
                     LOCATE TT8.RS.ID IN RSMAN.RS.NO<1>,1 SETTING MPTR THEN
                        RSMAN.RS.NO = DELETE(RSMAN.RS.NO,1,MPTR,0)
                     END
                     IF RSMAN.RS.NO = '' THEN
                        DELETE PO.MAN.XREF, OLD.RSMAN.ID
                        LOCATE RSKI.MANIFEST.NO IN PO.MAN<1>,1 SETTING POPTR THEN
                           PO.MAN = DELETE(PO.MAN,1,POPTR,0)
                        END
                     END ELSE
                        MATWRITE RSMAN.REC ON PO.MAN.XREF, OLD.RSMAN.ID
                     END
                  END ELSE
                     RELEASE PO.MAN.XREF, OLD.RSMAN.ID
                  END
                  RSKI.MANIFEST.NO = MANIFEST.ID
               END CASE
            END CASE
*
* If no roll skid, then no po to update
            IF PO.NO = "*BAD*" THEN
               GOTO 170
            END
* If no manifest is used, determine the manifest to assign
            IF MANIFEST.ID = '' THEN
               IF PO.LAST.MAN = '' THEN
                  GOT.ONE = 0
                  MAN.NO = 0
                  LOOP UNTIL GOT.ONE DO
                     MAN.NO = MAN.NO + 1
                     READV MANID FROM PO.MAN.XREF, CONO:PO.NO:"!":MAN.NO, 0 ELSE
                        GOT.ONE = 1
                     END
                  REPEAT
                  RSKI.MANIFEST.NO = MAN.NO
                  PO.MAN = INSERT(PO.MAN,1,-1,0,RSKI.MANIFEST.NO)
                  PO.LAST.MAN = RSKI.MANIFEST.NO
               END ELSE
                  RSMAN.ID = CONO:RSKI.PO.NO:'!':PO.LAST.MAN
                  READV MANDATE FROM PO.MAN.XREF, RSMAN.ID,4 THEN
                     IF MANDATE = TDATE THEN
                        RSKI.MANIFEST.NO = PO.LAST.MAN
                     END ELSE
                        GOT.ONE = 0
                        MAN.NO = PO.LAST.MAN
                        LOOP UNTIL GOT.ONE DO
                           MAN.NO = MAN.NO + 1
                           READV MANID FROM PO.MAN.XREF, CONO:PO.NO:"!":MAN.NO, 0 ELSE
                              GOT.ONE = 1
                           END
                        REPEAT
                        RSKI.MANIFEST.NO = MAN.NO
                        PO.MAN = INSERT(PO.MAN,1,-1,0,RSKI.MANIFEST.NO)
                        PO.LAST.MAN = RSKI.MANIFEST.NO
                     END
                  END
               END
            END
*
170*
* Update PO.MAN.XREF, PO.RSKI.XREF, and PO
            RSMAN.ID = CONO:PO.NO:'!':RSKI.MANIFEST.NO
            MATREADU RSMAN.REC FROM PO.MAN.XREF, RSMAN.ID THEN
               LOCATE TT8.RS.ID IN RSMAN.RS.NO<1>,1 SETTING MPTR ELSE
                  RSMAN.RS.NO = INSERT(RSMAN.RS.NO,1,-1,0,TT8.RS.ID)
               END
            END ELSE
               MAT RSMAN.REC = ''
               RSMAN.RS.NO = TT8.RS.ID
               IF MANIFEST.ID # '' THEN
                  PO.MAN = INSERT(PO.MAN,1,-1,0,RSKI.MANIFEST.NO)
               END
            END
            RSMAN.MAN.TOT.WGT = MANIFEST.TOT
            RSMAN.MAN.NO = RSKI.MANIFEST.NO
            RSMAN.ENTRY.DATE = TDATE
            RSMAN.STATUS     = ""
            MATWRITE RSMAN.REC ON PO.MAN.XREF, RSMAN.ID
*
            PO.NO = RSKI.PO.NO
            MATREADU RSXRF.REC FROM PO.RSKI.XREF, CONO:PO.NO ELSE
               RELEASE PO.RSKI.XREF, CONO:PO.NO
               PO.NO = "*BAD*"
               MATREADU RSXRF.REC FROM PO.RSKI.XREF, CONO:PO.NO ELSE
                  MAT RSXRF.REC = ""
               END
            END
            BEGIN CASE
            CASE RSXRF.MAN.NO = ""
               RSXRF.MAN.NO      = RSKI.MANIFEST.NO
               RSXRF.MAN.TOT.WGT = MANIFEST.TOT
            CASE RSXRF.MAN.NO = RSKI.MANIFEST.NO
               RSXRF.MAN.TOT.WGT = MANIFEST.TOT
            CASE 1
               RSXRF.MAN.NO      = RSKI.MANIFEST.NO
               RSXRF.MAN.TOT.WGT = RSXRF.MAN.TOT.WGT + MANIFEST.TOT
            END CASE
            RSXRF.ENTRY.DATE = TDATE
            RSXRF.STATUS     = ""
            LOCATE TT8.RS.ID IN RSXRF.RS.NO<1>,1 SETTING RSPTR ELSE
               RSXRF.RS.NO = INSERT(RSXRF.RS.NO,1,-1,0,TT8.RS.ID)
            END
*
            MATWRITE RSKI.REC ON ROLL.SKID.INFO, CONO:TT8.RS.ID
            MATWRITE RSXRF.REC ON PO.RSKI.XREF, CONO:PO.NO
            IF PO.PRESENT THEN
               MATWRITE PO.REC ON PO, CONO:PO.NO
            END ELSE
               RELEASE PO, CONO:PO.NO
            END
         CASE TT8.TTYPE = "T"
            RDATE = TT8.TDATE
            RTIME = TT8.TTIME
            IF RDATE # PREV.RDATE THEN
               PREV.RDATE = RDATE
               READU TRANSEQ FROM CONTROL, CONO:"RS.XFER.NO" ELSE TRANSEQ = 0
               FOUND = 1
               LOOP
                  TRANSEQ = MOD(TRANSEQ,999999) + 1
                  MATREADU RS.XFER.REC FROM RS.XFER, CONO:TRANSEQ ELSE
                     MAT RS.XFER.REC = ""
                     RS.XFER.DESC = "Barcode data - ":OCONV(RDATE,"D2/")
                     RS.XFER.ENTRY.DATE = RDATE
                     FOUND = 0
                  END
               WHILE FOUND DO
                  RELEASE RS.XFER, CONO:TRANSEQ
               REPEAT
               WRITE TRANSEQ ON CONTROL, CONO:"RS.XFER.NO"
            END ELSE
               MATREADU RS.XFER.REC FROM RS.XFER, CONO:TRANSEQ ELSE
                  MAT RS.XFER.REC = ""
                  RS.XFER.DESC = "Barcode data - ":OCONV(RDATE,"D2/")
                  RS.XFER.ENTRY.DATE = RDATE
               END
            END
            XPTR = DCOUNT(RS.XFER.ID,VM) + 1
            RS.XFER.ID<1,XPTR>      = TT8.RS.ID
            RS.XFER.TO.WHSE<1,XPTR> = TT8.WHSE
            RS.XFER.TO.LOC<1,XPTR>  = TT8.LOC
            MATWRITE RS.XFER.REC ON RS.XFER, CONO:TRANSEQ
         END CASE
180      TT8.PDATE = DATE()
         TT8.PTIME = TIME()
         MATWRITE TT8.REC ON TT8.TRAN, CONO:TT8.ID
190 *
      UNTIL TT8.ID = LASTREC DO
         TT8.ID = MOD(TT8.ID,999) + 1
      REPEAT
      TT8.PAR<1> = LASTREC
      WRITE TT8.PAR ON TT8.TRAN, CONO:"CONTROL"
      GOTO 99999
*
*---- ERROR ROUTINE
*
90000 *
      PRINT @(0,23):@(-4):ERRMSG:
      INPUT REPLY:
      PRINT @(0,23):@(-4):
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      STOP
      END
