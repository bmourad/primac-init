OBSOLETE FOR REV12
* REVISION    - [08.0]
*T24809 edvard 02/07/2000 * FIX PROBLEM WITH FIFO BUCKETS. BACK RECIVED
*                           ITEMS SHOULD NOT BE INSERTED BASED ON RECIPT
*                           DATE BUT SHOULD BE APPENDED TO THE END OF
*                           FIFO BUCKETS PER SARA
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
ERRMSG = ""
TOT.COST = 0
TOT.SALE = 0
WFND = 0  ; *T24809
BEGIN CASE
  CASE RECV.QTY > 0
    WPTR = 1
    LOOP
      LOCATE TODAY IN IWH.RECV.FI<1>,WPTR SETTING WFND THEN
        BEGIN CASE
          CASE RECV.COST # IWH.COST.FI<1,WFND>
            WPTR = WFND + 1
          CASE PLRS.CUST # IWH.VDR.FI<1,WFND>
            WPTR = WFND + 1
          CASE PLRS.JOB # IWH.PO.NO.FI<1,WFND>
            WPTR = WFND + 1
          CASE POLNFI # IWH.PO.LN.FI<1,WFND>
            WPTR = WFND + 1
          CASE RECV.DATE # IWH.DATE.FI<1,WFND>
            WPTR = WFND + 1
          CASE RECV.SALE # IWH.SALE.FI<1,WFND>
            WPTR = WFND + 1
          CASE 1
            WPTR = 0
        END CASE
      END ELSE
*T24809 v
*      RECV.DATE = RECV.DATE + 1
*      LOCATE RECV.DATE IN IWH.DATE.FI<1>,1 BY "AR" SETTING WFND ELSE NULL
*      RECV.DATE = RECV.DATE - 1
*      INS RECV.DATE BEFORE IWH.DATE.FI<1,WFND>
*      INS TODAY BEFORE IWH.RECV.FI<1,WFND>
*      INS PLRS.JOB BEFORE IWH.PO.NO.FI<1,WFND>
*      INS PLRS.CUST BEFORE IWH.VDR.FI<1,WFND>
*      INS 0 BEFORE IWH.QTY.FI<1,WFND>
*      INS 0 BEFORE IWH.ORG.FI<1,WFND>
*      INS 0 BEFORE IWH.RSV.FI<1,WFND>
*      INS RECV.COST BEFORE IWH.COST.FI<1,WFND>
*      INS RECV.SALE BEFORE IWH.SALE.FI<1,WFND>
*      INS POLNFI BEFORE IWH.PO.LN.FI<1,WFND>
*      IWH.ID.FI = IWH.ID.FI + 1
*      INS IWH.ID.FI BEFORE IWH.REF.FI<1,WFND>
        IWH.DATE.FI<1,-1> = RECV.DATE
        IWH.RECV.FI<1,-1> = TODAY
        IWH.PO.NO.FI<1,-1> = PLRS.JOB
        IWH.VDR.FI<1,-1> = PLRS.CUST
        IWH.QTY.FI<1,-1> = 0
        IWH.ORG.FI<1,-1> = 0
        IWH.RSV.FI<1,-1> = 0
        IWH.COST.FI<1,-1> = RECV.COST
        IWH.SALE.FI<1,-1> = RECV.SALE
        IWH.PO.LN.FI<1,-1> = POLNFI
        IWH.ID.FI = IWH.ID.FI + 1
        IWH.REF.FI<1,-1> = IWH.ID.FI
*T24809 ^
        WPTR = 0
      END
    WHILE WPTR DO REPEAT
*T24809 v
    IF WFND # 0 THEN
*T24809 ^
*        FI.NO = IWH.ID.FI
      FI.NO = IWH.REF.FI<1,WFND>
      IWH.QTY.FI<1,WFND> = IWH.QTY.FI<1,WFND> + RECV.QTY
      IWH.ORG.FI<1,WFND> = IWH.ORG.FI<1,WFND> + RECV.QTY
      IWH.RSV.FI<1,WFND> = IWH.RSV.FI<1,WFND> + RECV.QTY
*T24809 v
    END ELSE
      FI.NO = IWH.ID.FI
      IWH.QTY.FI<1,FI.NO> = IWH.QTY.FI<1,FI.NO> + RECV.QTY
      IWH.ORG.FI<1,FI.NO> = IWH.ORG.FI<1,FI.NO> + RECV.QTY
      IWH.RSV.FI<1,FI.NO> = IWH.RSV.FI<1,FI.NO> + RECV.QTY
    END
*T24809 ^
    TOT.COST = INT((RECV.COST/100 * RECV.QTY/1000 / (INV.COST.WT/100)) + .5)
    TOT.SALE = INT((RECV.SALE/100 * RECV.QTY / (INV.COST.WT/100)) + .5)
    WPTR = 1
    LOOP
      LOCATE TODAY IN IWH.RECV.LI<1>,WPTR SETTING WFND ELSE
        IWH.RECV.LI<1,WFND> = TODAY
        IWH.PO.NO.LI<1,WFND> = PLRS.JOB
        IWH.VDR.LI<1,WFND> = PLRS.CUST
        IWH.QTY.LI<1,WFND> = 0
        IWH.COST.LI<1,WFND> = RECV.COST
      END
      BEGIN CASE
        CASE RECV.COST # IWH.COST.LI<1,WFND>
          WPTR = WFND + 1
        CASE PLRS.CUST # IWH.VDR.LI<1,WFND>
          WPTR = WFND + 1
        CASE PLRS.JOB # IWH.PO.NO.LI<1,WFND>
          WPTR = WFND + 1
        CASE 1
          WPTR = 0
      END CASE
    WHILE WPTR DO REPEAT
    IWH.QTY.LI<1,WFND> = IWH.QTY.LI<1,WFND> + RECV.QTY
  CASE RECV.QTY < 0
    BEGIN CASE
      CASE IWH.ON.HAND + RECV.QTY < IWH.RESV
        ERRMSG = "Not enough net available qty"
      CASE 1
        IF FI.NO = "" THEN
          QCNT = DCOUNT(IWH.QTY.FI,VM)
          FINOS = 1
          FOR Q = 2 TO QCNT
            FINOS<Q> = Q
          NEXT Q
        END ELSE
          QCNT = DCOUNT(IWH.QTY.FI,VM)
          LIMIT = QCNT
          FINOS = ""
*      FOR WFND = 1 TO LIMIT
          WFND = 0
          LOOP
            WFND = WFND + 1
            FNO = FI.NO<1,WFND>
            LOCATE FNO IN IWH.REF.FI<1>,1 SETTING Q THEN
              FINOS<WFND> =  Q
              LIMIT = 0
            END ELSE
              ERRMSG = "Cannot locate FIFO ref # ":FNO
              LIMIT = 0
            END
*      NEXT WFND
          UNTIL LIMIT = 0 DO REPEAT
        END
    END CASE
    IF ERRMSG = "" THEN
      SUB.QTY = 0 - RECV.QTY
      LIMIT = QCNT
      FOR WFND = 1 TO LIMIT
        Q = FINOS<WFND>
        FPTR = 0
        IF IWLO.R.S.ID # "" THEN
          IF IWH.REF.FI<1,Q> = IWLO.FI.NO<1,RLOC> THEN FPTR = RLOC
        END ELSE
          LOCATE IWH.REF.FI<1,Q> IN IWLO.FI.NO<1>,1 SETTING FPTR ELSE FPTR = 0
        END
        IF FPTR THEN
          BEGIN CASE
            CASE IWH.RSV.FI<1,Q> = 0
            CASE SUB.QTY > IWH.RSV.FI<1,Q>
              TOT.COST = TOT.COST - INT(IWH.COST.FI<1,Q>/100 * IWH.RSV.FI<1,Q> / (INV.COST.WT/100))
              TOT.SALE = TOT.SALE - INT(IWH.SALE.FI<1,Q>/100 * IWH.RSV.FI<1,Q> / (INV.COST.WT/100))
              SUB.QTY = SUB.QTY - IWH.RSV.FI<1,Q>
              IWH.QTY.FI<1,Q> = IWH.QTY.FI<1,Q> - IWH.RSV.FI<1,Q>
              IWLO.RSV.QTY<1,FPTR> = IWLO.RSV.QTY<1,FPTR> - IWH.RSV.FI<1,Q>
              IWH.RSV.FI<1,Q> = 0
            CASE 1
              TOT.COST = TOT.COST - INT(IWH.COST.FI<1,Q>/100 * SUB.QTY / (INV.COST.WT/100))
              TOT.SALE = TOT.SALE - INT(IWH.SALE.FI<1,Q>/100 * SUB.QTY / (INV.COST.WT/100))
              IWH.RSV.FI<1,Q> = IWH.RSV.FI<1,Q> - SUB.QTY
              IWLO.RSV.QTY<1,FPTR> = IWLO.RSV.QTY<1,FPTR> - SUB.QTY
              IWH.QTY.FI<1,Q> = IWH.QTY.FI<1,Q> - SUB.QTY
              SUB.QTY = 0
              LIMIT = 0
          END CASE
        END
      NEXT WFND
      IF SUB.QTY <> 0 THEN
        ERRMSG = "Not enough net available FI qty"
      END
    END
END CASE
