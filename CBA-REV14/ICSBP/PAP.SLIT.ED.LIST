********************************************************************
* REVISION    - [12.0]
* Copyright 1994 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - PAP.SLIT.ED.LIST
* DATE        - 08/30/94
* BY          - BLAIR W. DICKERSON, C.B.A.
* DESCRIPTION -
*
* TASK 19403 11/95 DIVISION
* TASK 21065 ICS REWRITE PAP SLIT 05/09/97
*T22154 rick 08/21/1997 * add task 21844 check to ensure enough qty 
*                        on roll
*T22398 renee 12/05/1997 * Unassigned variable at line 157.
*T22398 renee 12/15/1997 * The edit list sometimes prints the wrong
*                          description.
*T22398 renee 12/16/1997 * The WHSE and LOC is not printing for some
*                          line items
*T26090 ajibaly 03/28/2002 * CONVERT TO R12 REPORT.SCRN
*T26497 adelgado 04/04/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26090 cmykleb 04/11/2002 * If report is (V)iewed and not printed do
*                            not update records as printed.
*T27653 lross 08/22/2003 * Mods.
*T28798 lross 02/16/2006 * In "POST" mode do not do error checking.
*ENDDOC
*********************************************************************
*---- INSERT EQUATE FROM CPYLIB
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>SLIT.TRANS
*COPY>PMC.CPYLIB>COMPANY               ;* T26126
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   EQU INV.UOM.CST TO INV.UNIT<1,3>
   EQU INV.UOM.STK TO INV.UNIT<1,2>
*
   GOSUB INITIALIZE
*
*---- SET UP FOR SYSCOM
   SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
   OPEN '', 'COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000       ;* T26497
   OPEN '', 'INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '', 'INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000
   OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
*
*---- GET PROC VALUES
*
   PROCREAD ID ELSE
      ERRMSG = ' CANNOT PERFORM PROCREAD'
      GOTO 93000
   END
   CONO = ID<1>
*T26090 v
*CONO.NAME = ID<2>
*REPORT.NAME = ID<7>
*REPORT.NUMBER = "XXXX"
   CONO.NAME     = ""
   REPORT.NAME   = ""
   REPORT.NUMBER = ID<2>
*T28798 v
   POST.FLG=0
   IF REPORT.NUMBER = 'IC448' THEN POST.FLG = 1
*T28798 ^
   PRINT.FLAG = ID<6>
*T26090 ^
   DIV = ID<3>
   REPORT.DATE = DATE()
   HD1 = "" ; HD2 = ""
   MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ''     ;* T26497
*
*---- GET HEADING
*
   CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*
   PRINTER ON
*
*---- READ AND PROCESS FIRST RECORD
100*
   READNEXT KEY ELSE
      GOSUB 1000
      PRINT "NO ITEMS PRESENT"
      GOTO 999999
   END
   MATREADU SLT.REC FROM SLIT.TRANS, KEY ELSE GOTO 150
   OLD.PRO.CODE = SLT.PRO.CODE
   OLD.CST.UOM = SLT.LOG.CST.UOM
   MATREAD INV.REC FROM INVENTORY,CONO:SLT.LOG.PROD ELSE
      MAT INV.REC = ''
   END
*---- PRINT THE RECORD
   GOSUB 3000
*---- READ AND PROCESS ALL THE FILES
150*
   DATA = 0
   LOOP
      READNEXT KEY ELSE DATA = 1
   WHILE DATA = 0 DO
      MATREADU SLT.REC FROM SLIT.TRANS,KEY ELSE GOTO 111
*---- PRINT THE RECORD
      GOSUB 3000
111*
   REPEAT
   GOSUB 4000
*---- END OF JOB
   PRINTER OFF
   GOTO 999999
*---- PRINT HEADINGS
1000*
   PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT "DIVISION : ":DIV:SPACE(48):"PERIOD ":ID<4>
   PRINT
   PRINT HDD.LINE
   PRINT HD.LINE
   PRINT D.LINE
   LINE.COUNT = 10
   RETURN
*---- PRINT THE RECORD
3000*
   IF POST.FLG THEN SLT.STATUS = '' ;*T28798
   IF FIRST THEN
      FIRST = 0
      MATREAD INV.REC FROM INVENTORY,CONO:SLT.LOG.PROD ELSE MAT INV.REC = ''
   END ELSE
      GOSUB 4000
      MATREAD INV.REC FROM INVENTORY,CONO:SLT.LOG.PROD ELSE MAT INV.REC = ''
   END
   MATREAD ISTK.REC FROM INV_SERIAL, CONO:SLT.LOG.SERIAL ELSE MAT ISTK.REC = ""
  * T26497 v
   IF CO.INTR.WHSE # '' AND ISTK.WHSE = CO.INTR.WHSE THEN
      SLT.STATUS = 'SERIAL IS IN AN INTER-DIVISIONAL WHSE'
   END
  * T26497 ^
*T28798 v
   IF NOT(POST.FLG) THEN
     IF ISTK.CUR.QTY#ISTK.RSVB.QTY THEN
        SLT.STATUS='THIS SERIAL IS RESERVED AND CANNOT BE SLITTED.'
     END
     IF (ISTK.CUR.QTY+0) < SLT.LOG.SLIT.QTY THEN
        SLT.STATUS='NOT ENOUGH AVAILABLE QTY. ONHAND=':OCONV(ISTK.CUR.QTY,"MD3"):' AND SLIT QTY=':OCONV(SLT.LOG.SLIT.QTY,"MD3")
     END
   END
*T28798 ^
   GOSUB 6000
   IF LINE.COUNT+3 > 53 THEN
      GOSUB 1000
   END
   LINE.COUNT = LINE.COUNT + 3
   H.LINE = ''
   H.LINE = KEY[4,99]"L#7":" "
   H.LINE = H.LINE : OCONV(SLT.ENT.DATE,"D2/") "L#8"
   H.LINE = H.LINE : SP2 : SLT.LOG.PROD "L#15"
   H.LINE = H.LINE : SP2 : SLT.LOG.SERIAL "L#15"
   H.LINE = H.LINE : SP2 : SLT.LOG.WHSE "L#4"
   H.LINE = H.LINE : SP1 : SLT.LOG.LOC "L#4"
   USED.QTY = -(INT(((SLT.LOG.USED.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5))
*H.LINE = H.LINE : SP2 : OCONV(USED.QTY,"MD2") "R#10"
   H.LINE = H.LINE : SP2 : OCONV(USED.QTY,ICR.CNV) "R#10"
   H.LINE = H.LINE : SP1 : SLT.LOG.STK.UOM "L#3"
   SLIT.QTY =-(SLT.LOG.USED.QTY/10)
*T27653 v
   IF SLT.LOG.CST.UOM = 'SHT' OR SLT.LOG.CST.UOM = 'FT' OR SLT.LOG.CST.UOM = 'PC' THEN
      SLIT.QTY = INT((SLIT.QTY / 100)+.5)
   END ELSE
      ICR.CNV = 'MD2'
   END
*T27653 ^
*  H.LINE = H.LINE : SP2 : OCONV(SLIT.QTY,"MD2") "R#10"
   H.LINE = H.LINE : SP2 : OCONV(SLIT.QTY,ICR.CNV) "R#10"
   H.LINE = H.LINE : SP1 : SLT.LOG.CST.UOM "L#3"
   SLIT.AMT = 0 - SLT.LOG.USED.AMT
   H.LINE = H.LINE : SP2 : OCONV(SLIT.AMT,"MD2") "R#10"
   NEW.SLT.STATUS = ""
   CALL DESC.REFORMAT(SLT.STATUS,25,NEW.SLT.STATUS)
   CNT = DCOUNT(NEW.SLT.STATUS,VM)
   H.LINE = H.LINE : SP1 : NEW.SLT.STATUS<1,1> "L#25"
   PRINT H.LINE
   TOT.QTY = TOT.QTY + SLIT.QTY
   TOT.AMT = TOT.AMT + SLIT.AMT
   H.LINE = ""
   H.LINE = SPACE(18):SLT.LOG.DESC "L#30"
   IF CNT > 1 THEN
      H.LINE = H.LINE : SPACE(58) : NEW.SLT.STATUS<1,2> "L#25"
   END
   PRINT H.LINE
   IF CNT > 2 THEN
      PRINT SPACE(106) : NEW.SLT.STATUS<1,3> "L#25"
   END ELSE
      PRINT
   END
   SLCNT = DCOUNT(SLT.SLIT.PROD,VM)
   FOR SC = 1 TO SLCNT
      RSCNT = DCOUNT(SLT.SLIT.SERIAL<1,SC>,SVM)
*T27653 v No need to do - already stored in SLIT.TRAN
*     TOT.SLT = SUM(SLT.SLIT.AMT)
*     TOT.SLT = SUM(SLT.SLIT.CST.QTY)
*     IF TOT.SLT = 0 THEN TOT.SLT = 1
*     BAL.ALLOC = SLT.LOG.USED.AMT
*     CNT = DCOUNT(SLT.SLIT.AMT,VM)
*     IF SLT.PRO.CODE = 'Y' THEN
*       DENOM = SLT.LOG.SLIT.QTY
*     END ELSE
*       DENOM = SLT.LOG.SLIT.QTY + SLT.LOG.TRIM.QTY
*     END
*     IF SLT.PRO.CODE = "Y" THEN
*        FOR P = CNT TO 1 STEP -1
*           SLIT.PER = SLT.SLIT.AMT<1,P> / TOT.SLT
*           SLIT.PER = SLT.SLIT.CST.QTY<1,P> / DENOM
*           SLIT.PER = INT(SLIT.PER * 100 + .5)
*           IF SLT.LOG.TRIM.AMT = 0 THEN
*              RECV.ALLOC = 0
*           END ELSE
*              RECV.ALLOC = SLT.LOG.USED.AMT * SLIT.PER
*           END
*           RECV.ALLOC = INT(RECV.ALLOC/100)
*           IF P # PCNT THEN BAL.ALLOC -= RECV.ALLOC ELSE RECV.ALLOC = BAL.ALLOC
*           SLT.SLIT.AMT<1,P> = RECV.ALLOC
*        NEXT P
*     END
      HOLD.STK = SLT.SLIT.STK.QTY<1,SC>
      HOLD.CST = INT(SLT.SLIT.CST.QTY<1,SC>/10 + .5)
      HOLD.AMT = SLT.SLIT.AMT<1,SC>
      FOR RS = 1 TO RSCNT
         IF LINE.COUNT + 2 > 53 THEN
            GOSUB 1000
         END
         LINE.COUNT = LINE.COUNT + 2
         H.LINE = ''
         H.LINE = SPACE(18)
         H.LINE = H.LINE : SLT.SLIT.PROD<1,SC> "L#15"
         H.LINE = H.LINE : SP2 : SLT.SLIT.SERIAL<1,SC,RS> "L#15"
         H.LINE = H.LINE : SP2 : SLT.SLIT.WHSE<1,SC> "L#4"
         H.LINE = H.LINE : SP1 : SLT.SLIT.LOC<1,SC> "L#4"
*    SLIT.QTY = INT(SLT.SLIT.STK.QTY<1,SC>/RSCNT + .5)
*T27653 v
*        SLIT.SQTY = (SLT.SLIT.STK.QTY<1,SC>/RSCNT)
         SLIT.SQTY = INT(SLT.SLIT.STK.QTY<1,SC>/RSCNT + .5)
         IF RS = RSCNT THEN 
            SLIT.SQTY = HOLD.STK
         END ELSE
            HOLD.STK = HOLD.STK - SLIT.SQTY
         END
         IF SLT.SLIT.STK.UOM<1,SC> = 'SHT' OR SLT.SLIT.STK.UOM<1,SC> = 'FT' OR SLT.SLIT.STK.UOM<1,SC> = 'PC' THEN
*        SLIT.SQTY=INT(ICONV(SLIT.SQTY,'MD2'))
         END ELSE
            SLIT.SQTY=OCONV(SLIT.SQTY,'MD2')
         END
*        IF RS = RSCNT THEN 
*           SLIT.SQTY = HOLD.STK
*        END ELSE
*           HOLD.STK = HOLD.STK - SLIT.SQTY
*        END
         H.LINE = H.LINE : SP2 : SLIT.SQTY"R#10"
         H.LINE = H.LINE : SP1 : SLT.SLIT.STK.UOM<1,SC> "L#3"
         SLIT.CQTY = INT(SLT.SLIT.CST.QTY<1,SC> / 10 / RSCNT + .5)
         IF RS = RSCNT THEN
            SLIT.CQTY = HOLD.CST
         END ELSE
            HOLD.CST = HOLD.CST - SLIT.CQTY
         END
*        H.LINE = H.LINE : SP2 : OCONV(SLIT.CQTY,"MD2") "R#10"
         IF SLT.SLIT.CST.UOM<1,SC> # 'SHT' AND SLT.SLIT.CST.UOM<1,SC> # 'FT' AND SLT.SLIT.CST.UOM # 'PC' THEN CNV='MD2' ELSE CNV = 'MD0'
         TOT.QTY = TOT.QTY + SLIT.CQTY
         SLIT.CQTY = OCONV(SLIT.CQTY,CNV)
         H.LINE = H.LINE : SP2 : SLIT.CQTY "R#10"
         H.LINE = H.LINE : SP1 : SLT.SLIT.CST.UOM<1,SC> "L#3"
         SLIT.AMT = INT(SLT.SLIT.AMT<1,SC> / RSCNT + .5)
         IF RS = RSCNT THEN 
            SLIT.AMT = HOLD.AMT
         END ELSE
            HOLD.AMT = HOLD.AMT - SLIT.AMT
         END
         H.LINE= H.LINE:SP2:OCONV(SLIT.AMT,"MD2") "R#10"
         PRINT H.LINE
*        TOT.QTY = TOT.QTY + SLIT.CQTY
         TOT.AMT = TOT.AMT + SLIT.AMT
         H.LINE = ""
         H.LINE = SPACE(18):SLT.SLIT.DESC<1,SC> "L#30"
         PRINT H.LINE
         IF SC # SLCNT THEN PRINT
      NEXT RS
   NEXT SC
*T26090 v
*  SLT.PRT.DATE = DATE()
   IF PRINT.FLAG # "V" THEN SLT.PRT.DATE = DATE()
*T26090 ^
   MATWRITE SLT.REC ON SLIT.TRANS, KEY
3099*
   RETURN
*---- CHECK FOR END OF PAGE
4000*
   IF LINE.COUNT + 4 > 53 THEN GOSUB 1000
   LINE.COUNT = LINE.COUNT + 4
   H.LINE = ""
   IF OLD.PRO.CODE = "" THEN H.LINE = H.LINE:SPACE(65)
   IF OLD.PRO.CODE = "Y" THEN
      H.LINE = H.LINE:SPACE(38)
      H.LINE = H.LINE:"PROPORTIONALLY DISTRIBUTED "
   END
   IF OLD.PRO.CODE = "N" THEN
      H.LINE = H.LINE:SPACE(46)
      H.LINE = H.LINE:"INVENTORY ADJUSTED "
   END
   H.LINE = H.LINE:'  TRIM WASTE  '
   H.LINE = H.LINE : OCONV(TOT.QTY,"MD2") "R#10"
   H.LINE = H.LINE : SP1 : OLD.CST.UOM "L#3"
   H.LINE = H.LINE : SP2 : OCONV(TOT.AMT,"MD2") "R#10"
   PRINT SPACE(77):T.LINE
   PRINT H.LINE
   PRINT
   PRINT
   TOT.QTY = 0; TOT.AMT = 0; OLD.CST.UOM = SLT.LOG.CST.UOM
   OLD.PRO.CODE = SLT.PRO.CODE
   RETURN
6000*
*COPY>ICSBP>INV.UM.CNV
   RETURN
*
*************
INITIALIZE: 
*************
*
   LINE.COUNT = 99 ; PAGE.NO = 0
   SP1 = SPACE(1)
   SP2 = SPACE(2)
   OLD.CST.UOM = ''
   T.LINE = ''
   T.LINE = "  ==========      =========="
   D.LINE = ""
   D.LINE =  "------- --------  ---------------  ---------------  ---- ----  ---------- ---  ---------- ---  ---------- --------------------------"
   HDD.LINE = "" ; HD.LINE = ""
   HD.LINE = "SLIT #   DATE     PRODUCT NUMBER     SERIAL #       WHSE LOC    STOCK QTY U/M   COST QTY  U/M    AMOUNT          NO POST REASON"
   FIRST = 1
   TOT.QTY = ''; TOT.AMT = ''
   RETURN
*
*---- CALLS FOR SYSCOM
91000*
   ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000*
   ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
   PRINTER OFF
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
999999*
END
