*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - ICS
* SOURCE      - ICSBP
* PROGRAM     - PHY.INV.PROOF
* DATE        - 04/03/90
* BY          - W.R. MCKENZIE , C.B.A
* DESCRIPTION - This report is used for physical inventory PROOF
* T21604 JR 03/17/97 INVENTORY REWRITE
* T22237 renee 09/17/1997 * Once an error message gets set, it will print
*                           for the rest of the lines on the proof
*                           listing even thought they dont apply to the
*                           line they are printed with.
*T25740 epitka 03/06/2002 * REV12
*T26090 ajibaly 03/28/2002 * CONVERT TO R12 RPT.SCRN
*T26497 adelgado 04/04/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26090 cmykleb 04/11/2002 * Do not flag records as "PROOF" if the report
*                            is (V)iewed and not printed.
*C40566 cmykleb 08/14/2002 * Allow other listings to print even after
*                          * the (A)LL type listing has been printed.
*T28893 lross 04/27/2006 * Problems when reruning after posting.
*********************************************************************
*
*-----   INSERT EQUATES FROM CPYLIB
*
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>PHY.INV
*COPY>CPYLIB>SYSCOM
*COPY>ICS.CPYLIB>INVENTORY
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.CNV
*COPY>PMC.CPYLIB>COMPANY       ;* T26497
*
*
*-----   SET UP THE ERRMSG ROUTINE FOR SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*-----   OPEN THE FILES
*
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "INV.WHSE FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CATEGORY FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
      ERRMSG = "WAREHOUSE FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
      ERRMSG = "INV.WHSE.LOC FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "INV_SERIAL FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "INVENTORY FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","PHY.INV" TO PHY.INV ELSE
      ERRMSG = "PHY.INV FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CONTROL FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "COMPANY FILE IS MISSING"
      GOTO 93000
   END
*
*-----   READ COMPANY NAME
*
   PROCREAD ID ELSE
      ERRMSG = " CANNOT PERFORM PROCREAD"
      GOTO 93000
   END
   CONO = ID<1>
*T26090 v
*CONO.NAME = ID<2>
   CONO.NAME = ""
*T26090 ^
   DIV = ID<3>
   VAR.TYPE = ID<6>
   PRINT.FLAG = ID<7> ; * T26090
   VAR.HEAD = "ALL RECORDS"
   BEGIN CASE
      CASE VAR.TYPE = "N"
         VAR.HEAD = "NONE"
      CASE VAR.TYPE = "V"
         VAR.HEAD = "ALL VARIANCES"
      CASE VAR.TYPE = "S"
         VAR.HEAD = "SHORT"
      CASE VAR.TYPE = "L"
         VAR.HEAD = "LONG"
   END CASE
*T26090 v
*REPORT.NAME = "PHYSICAL INVENTORY DATA PROOF"
*REPORT.NUM = "XXXX"
   REPORT.NAME = ""
   REPORT.NUM  = ID<2>
*T26090 ^
   REPORT.DATE = DATE()
   HD1 = ";HD2 = "
   CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUM,REPORT.DATE,HD1,HD2)
   MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ''   ;* T26497
*
   PRINTER ON
*
*-----MAIN PROCESS
*
   PAGE.NO = 0
   LINE.CNT = 0;FIRST = 1
   DONE=0
   LOOP
      READNEXT PHY.ID ELSE DONE=1
   UNTIL (DONE) DO 
      LINE.CNT = 0
      MATREADU PHYSI.REC FROM PHY.INV,PHY.ID THEN
         PHYSI.POST.ERROR = ""
         PHYSI.ERROR.LINE = ""
         PYSCTR = DCOUNT(PHYSI.PRODUCT,VM)
         FOR PP = 1 TO PYSCTR
            ERRMSG = ""
            IF PHYSI.TRAN.TO<1,PP> # '' THEN PHYSI.STATUS<1,PP> = 'POST' ;*T28893
            IF PHYSI.STATUS<1,PP> = 'POST' THEN CONTINUE ;*T28893
*C40566     IF PHYSI.STATUS<1,PP> = "MAINT" THEN 
*T26090 v
*              IF VAR.TYPE = "A" THEN PHYSI.STATUS<1,PP> = "PROOF"
            IF VAR.TYPE = "A" AND PRINT.FLAG # "V" THEN PHYSI.STATUS<1,PP> = "PROOF"
*T26090 ^
            DIFF=PHYSI.CURR.QTY<1,PP> - PHYSI.PREV.QTY<1,PP>
            BEGIN CASE
               CASE VAR.TYPE = "A"
               CASE VAR.TYPE = "N" AND DIFF = 0
               CASE VAR.TYPE = "V" AND DIFF # "0"
               CASE VAR.TYPE = "S" AND DIFF < "0"
               CASE VAR.TYPE = "L" AND DIFF > "0"
               CASE 1
                  CONTINUE
            END CASE
            INV.ID = CONO:PHYSI.PRODUCT<1,PP>
            MATREAD INV.REC FROM INVENTORY,INV.ID THEN
               CATG.ID= CONO:INV.LINE
               MATREAD CATG.REC FROM CATEGORY,CATG.ID THEN
                  IWH.ID=CONO:PHYSI.PRODUCT<1,PP>:'!':PHYSI.WHSE
                  MATREAD IWH.REC FROM INV.WHSE , IWH.ID THEN
                     IWLO.ID = IWH.ID:"!":PHYSI.LOC
                     MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC=''
                     BEGIN CASE
                        CASE PHYSI.SERIAL<1,PP> # "" AND CATG.TRK.LVL = "S"
                           ISTK.ID=CONO:PHYSI.SERIAL<1,PP>
                           MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE
                              MAT ISTK.REC = ""
                           END
                           ON.HAND = ISTK.CUR.QTY
                        CASE CATG.TRK.LVL = "S"
                           ERRMSG = "SERIAL NUMBER IS MISSING"
                           GOSUB 20000
                           CONTINUE
                        CASE 1
                           ON.HAND=IWLO.LOC.ON.HAND
                     END CASE
*COPY>ICSBP>INV.UM.CNV
                     IF DIFF LT 0 THEN
                        IF IWH.ON.HAND - IWH.RESV > 1 THEN
                           ROND=".5"
                           IF IWH.ON.HAND-IWH.RESV<0 THEN ROND="-.5"
                           IF IWH.ON.HAND - IWH.RESV LT ABS(DIFF) THEN
                              TMP.QTY=IWH.ON.HAND-IWH.RESV
                              GOSUB GET.DISP.QTY
                              ERRMSG='Available quantity for this warehouse'
                              ERRMSG:=' for all locations is only '
                              ERRMSG:=DISP.QTY
                           END ELSE
                              IF ON.HAND LT ABS(DIFF) THEN
                                 BEGIN CASE
                                    CASE PHYSI.SERIAL<1,PP>#"" AND CATG.TRK.LVL="S"
                                       TMP.QTY=ON.HAND
                                       GOSUB GET.DISP.QTY
                                       ERRMSG='Serial quantity is only '
                                       ERRMSG:=DISP.QTY
                                    CASE 1
                                       TMP.QTY=ON.HAND
                                       GOSUB GET.DISP.QTY
                                       ERRMSG='Location quantity is only '
                                       ERRMSG:=DISP.QTY
                                 END CASE
                              END
                           END
                        END ELSE
                           ERRMSG='Available quantity is zero'
                        END
                     END
  * T26497 v
                     IF CO.INTR.WHSE # '' AND PHYSI.WHSE = CO.INTR.WHSE THEN
                        ERRMSG = 'CAN NOT APPLY, USING AN INTER-DIVISIONAL WHSE ':PHYSI.WHSE
                     END
  * T26497 ^
                     GOSUB 1000
                     IF ERRMSG # '' THEN
*T28893 v
*                       PHYSI.POST.ERROR<1,-1> = ERRMSG
                        PHYSI.POST.ERROR<1,PP> = ERRMSG
*                       PHYSI.ERROR.LINE<1,-1> = PP
                        PHYSI.ERROR.LINE<1,PP> = PP
*T28893 ^
                     END
                     ERRMSG=''
                  END ELSE
                     ERRMSG='INV.WHSE RECORD ':IWH.ID:' IS NOT ON FILE'
                     GOSUB 20000
                  END
               END ELSE
                  ERRMSG="CATEGORY (":INV.LINE:") IS NOT ON FILE"
                  GOSUB 20000
               END
            END ELSE
               ERRMSG='INVENTORY (':PHYSI.PRODUCT<1,PP>:') IS NOT ON FILE.'
               GOSUB 20000
            END
*C40566     END
         NEXT PP
         MATWRITE PHYSI.REC ON PHY.INV,PHY.ID
      END
   REPEAT
   GOTO 999999
*
**************************************************************************
***** S U B R O U T I N E S **********************************************
**************************************************************************
*
*
*----- PRINT LINE
*
**********
1000: 
**********
*
   IF LINE.CNT > 59 OR LINE.CNT = 0 THEN GOSUB 10000
   IF PHYSI.PREV.QTY<1,PP> < 0 THEN ROND="-.5" ELSE ROND=".5"
   TEMP.PREV.QTY = OCONV(INT(((PHYSI.PREV.QTY<1,PP>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND) , ICR.CNV)
   IF PHYSI.CURR.QTY<1,PP> < 0 THEN ROND="-.5" ELSE ROND=".5"
   TEMP.CURR.QTY = OCONV(INT(((PHYSI.CURR.QTY<1,PP>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND) , ICR.CNV)
   DLINE = PHYSI.PRODUCT<1,PP>"L#15 "
   DLINE = DLINE:PHYSI.DESC<1,PP>"L#30 "
   IF PHYSI.SERIAL<1,PP> # "" THEN
      DLINE = DLINE:PHYSI.SERIAL<1,PP>"L#15 "
   END ELSE
      DLINE = DLINE:PHYSI.RECP.NO<1,PP>"L#15 "
   END
   DLINE = DLINE:PHYSI.UNIT<1,PP>"L#3 "
   DLINE = DLINE:TEMP.PREV.QTY"R#11 "
   DLINE = DLINE:TEMP.CURR.QTY"R#11 "
   DLINE = DLINE:OCONV(PHYSI.PREV.DIA<1,PP>,"MD2")"R#5 "
   DLINE = DLINE:OCONV(PHYSI.CURR.DIA<1,PP>,"MD2")"R#5 "
   IF DIFF < 0 THEN ROND="-.5" ELSE ROND=".5"
   CNV.DIFF = INT(((DIFF/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND)
   DLINE = DLINE:OCONV(CNV.DIFF,ICR.CNV)"R#11 "
   DLINE = DLINE:OCONV(PHYSI.UNIT.COST<1,PP>,"MD4")"R#9 "
   PRINT DLINE
   IF ERRMSG # "" THEN
      PRINT ERRMSG
      LINE.CNT = LINE.CNT + 1
   END
   PRINT
   LINE.CNT = LINE.CNT + 2
   FIRST = 0
   RETURN
*
**********
10000: 
**********
*
   PAGE.NO = PAGE.NO + 1
   WHSE.KEY = CONO:PHYSI.WHSE
   MATREAD WHSE.REC FROM WAREHOUSE, WHSE.KEY ELSE MAT WHSE.REC = ""
*T26090 v
*HD0 = HD1[1,110]:"PAGE ":PAGE.NO"R#7"
   HD0 = HD1:PAGE.NO
*T26090 ^
   HD3 = "DIVISION : ":DIV:SPACE(50):"VARIANCE TYPE : ":VAR.HEAD
   HD4 = "SEQUENCE : ":PHY.ID[4,99]:SPACE(5)
   HD4 := "  WAREHOUSE : ":PHYSI.WHSE"L#4":" ":WHS.DESC"L#30"
   HD4 = HD4:"   LOCATION : ":PHYSI.LOC"L#4"
   HD6 = "PRODUCT NUMBER           DESCRIPTION           SERIAL/RECEIPT# UOM "
   HD6 = HD6:"  CURR QTY    REV QTY   C/DIA R/DIA   VARIANCE  UNIT COST"
   HD7 = "--------------- ------------------------------ --------------- --- "
   HD7 = HD7:"----------- ----------- ----- ----- ----------- ---------"
   PRINT CHAR(12)
   PRINT HD0
   PRINT HD2
   PRINT HD3
   PRINT
   PRINT HD4
   PRINT
   PRINT HD6
   PRINT HD7
   LINE.CNT = 8
   RETURN
*
***********
20000: 
***********
*
*T28893 v
*  PHYSI.POST.ERROR<1,-1> = ERRMSG
   PHYSI.POST.ERROR<1,PP> = ERRMSG
*  PHYSI.ERROR.LINE<1,-1> = PP
   PHYSI.ERROR.LINE<1,PP> = PP
*T28893 ^
   IF LINE.CNT > 59 THEN
      LINE.CNT = 0
      GOSUB 10000
   END
   PRINT
   PRINT ERRMSG
   LINE.CNT = LINE.CNT + 2
   PHYSI.STATUS<1,PP> = "PROOFERR"
   RETURN
*
***************
GET.DISP.QTY: 
***************
*
   DISP.QTY=INT(((TMP.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND)
   DISP.QTY=OCONV(DISP.QTY,ICR.CNV)
   RETURN
*
*-----   CALLS FOR SYSCOM
*
91000 *
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 *
   ERR.TYPE = 2
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 *
   ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
999999 *
   PRINTER OFF
   PRINTER CLOSE
END
