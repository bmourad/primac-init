*********************************************************************
*
* REVISION - [08.1B]
*
* PROGRAM  - RS.CONVERT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/11/91
*
* DESCRIPTION
*
* This program is used to assign barcode roll/skid number to stock
* previously stored with other identifiers.
*CSF 22657 change limit on lines to process from 99 to 999
*
*T23278 markt 10/19/1998 * Check for divisional security
*T26556 cmykleb 05/06/2002 * Rev12 upgrade.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 1
   CALL SYSCOM (MAT SYSCOM.REC)
   DEFFUN GET.SERIAL.SEQ(CONO,CONTROL.FILE,INV_SERIAL.FILE)
   DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
   DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)
   DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
*
*---- DIMENSIONED VARIABLES
*
   DIM RSCNV.REC(10)
*
   EQU RSCNV.ID       TO RSCNV.REC(1)    ;* (MV1) Barcode #
   EQU RSCNV.LOC      TO RSCNV.REC(2)    ;* (MV1) Serial loc
   EQU RSCNV.QTY      TO RSCNV.REC(3)    ;* (MV1) Serial qty
   EQU RSCNV.WGT      TO RSCNV.REC(4)    ;* (MV1) Serial weight
   EQU RSCNV.SHT      TO RSCNV.REC(5)    ;* (MV1) Skid sheets
   EQU RSCNV.MILL     TO RSCNV.REC(6)    ;* (MV1) Mill #
*
*---- OPEN ALL FILES
*
   OPEN "","ICS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN ICS.SCREENS FILE"; GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"; GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"; GOTO 93000
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CANNOT OPEN CATEGORY FILE"; GOTO 93000
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "CANNOT OPEN INVENTORY FILE"; GOTO 93000
   END
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
      ERRMSG = "CANNOT OPEN WAREHOUSE FILE"; GOTO 93000
   END
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "CANNOT OPEN INV.WHSE FILE"; GOTO 93000
   END
   OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
      ERRMSG = "CANNOT OPEN INV.WHSE.LOC FILE"; GOTO 93000
   END
   OPEN "","INV.WHSE.LOC.TEMP" TO INV.WHSE.LOC.TEMP ELSE
      ERRMSG = "CANNOT OPEN INV.WHSE.LOC.TEMP FILE"; GOTO 93000
   END
   OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE
      ERRMSG = "CANNOT OPEN INV_AUDIT_HIST FILE"; GOTO 93000
   END
   OPEN "","INV_AUDIT_HIST_TEMP" TO INV_AUDIT_HIST_TEMP ELSE
      ERRMSG = "CANNOT OPEN INV_AUDIT_HIST_TEMP FILE"; GOTO 93000
   END
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "CANNOT OPEN INV_SERIAL FILE"; GOTO 93000
   END
   OPEN "","INV_SERIAL_TEMP" TO INV_SERIAL_TEMP ELSE
      ERRMSG = "CANNOT OPEN INV_SERIAL_TEMP FILE"; GOTO 93000
   END
   OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
      ERRMSG = "CANNOT OPEN INV_RECEIPTS FILE";GOTO 93000
   END
   OPEN "","INV_RECEIPTS_TEMP" TO INV_RECEIPTS_TEMP ELSE
      ERRMSG = "CANNOT OPEN INV_RECEIPTS_TEMP FILE";GOTO 93000
   END
   OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
      ERRMSG = "CANNOT OPEN INV_RECP_WHSE FILE"; GOTO 93000
   END
   OPEN "","INV_RECP_WHSE_TEMP" TO INV_RECP_WHSE_TEMP ELSE
      ERRMSG = "CANNOT OPEN INV_RECP_WHSE_TEMP FILE"; GOTO 93000
   END
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;RS.CONVERT
   SCREEN FORMAT
   SCREEN COUNT;;11
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   LINE.CNT = 0
   REF.NO = ""
   CURR.REF.NO = ""
   TRAN = ""
   SERIAL = ""
   ORIG.WHSE = ""
   FROM.LOC  = ""
   FROM.RSID = ""
   SP3 = SPACE(3)
   GOTO 110
*
*---- MAIN PROCESSING
*
100 *
   RELEASE
   SCREEN CLEAR
110 *
   TODAY = DATE()
   S$DATA(1)<S$SCR> = TODAY
   SCREEN DISPLAY;;1
   SCREEN FIELD;;9
   SCREEN INPUT;;9;GOTO 99999
   TRAN = S$VALUE
120 *
   S$DATA(2)<S$SCR> = SERIAL
   SCREEN FIELD;;2
   SCREEN INPUT;;2;GOTO 100
   ISTK.ID = CONO:S$VALUE
   IF RECORDLOCKED(INV_SERIAL_TEMP,ISTK.ID)=0 THEN
      DELETE INV_SERIAL_TEMP,ISTK.ID
   END
   MATREADU ISTK.REC FROM INV_SERIAL_TEMP,ISTK.ID ELSE
      MATREADU ISTK.REC FROM INV_SERIAL, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Serial #, Try again! "
         GOSUB 90000
         GOTO 120
      END
   END
   S$DATA(3)<S$SCR> = ISTK.RECP
   S$DATA(4)<S$SCR> = ISTK.WHSE
   S$DATA(5)<S$SCR> = ISTK.LOC
   S$DATA(6)<S$SCR> = ISTK.PROD
   S$DATA(7)<S$SCR> = ISTK.CUR.QTY
   ORIG.PROD = ISTK.PROD
   ORIG.WHSE = ISTK.WHSE
   ORIG.UOM = ISTK.UOM
   GOSUB 80050
   INVR.ID = CONO:ISTK.RECP
   IF RECORDLOCKED(INV_RECEIPTS_TEMP,INVR.ID)=0 THEN
      DELETE INV_RECEIPTS_TEMP,INVR.ID
   END
   MATREADU INVR.REC FROM INV_RECEIPTS_TEMP,INVR.ID ELSE
      MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID ELSE
         ERRMSG = "Receipt # ":ISTK.RECP:" for this serial does not exist!"
         GOTO 93000
      END
   END
   IF INVR.PROD # ISTK.PROD THEN
      ERRMSG = "Serial product is not the same as the receipt product!"
      GOTO 93000
   END
   MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE
      ERRMSG = "Warning! Product is not in the inventory file!"
      GOSUB 90000
      GOTO 100
   END
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      ERRMSG = "Warning! This product has an invalid product line!"
      GOSUB 90000
      GOTO 100
   END
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:ISTK.WHSE ELSE WHSE.DIV = "00"
   DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
   CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
   GOSUB 30000
   QTY.ON.HAND=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'.5','')
   READU BARCODE FROM CONTROL, CONO:"BARCODE.SEQ" ELSE BARCODE = 0
   MAT RSCNV.REC = ""
   GOSUB 40000
   LINE.CNT = 0
   REF.NO = ""
   CURR.REF.NO = ""
   OPT = "A"
   GOTO 510
*
*---- GET OPERATOR REPLY
*
500 *
   SCREEN FIELD;;21
   SCREEN INPUT;;21
   OPT = S$VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 100
      CASE OPT = "A" AND LINE.CNT < 999 ;* CSF22657
         MODE = "A"
         DONE = 0
         FOR REF.NO = LINE.CNT+1 TO 999 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINE.CNT = LINE.CNT + 1
            END
            GOSUB 40000
         NEXT REF.NO
         REF.NO = LINE.CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPT = "C" AND LINE.CNT > 0
         MODE = "C"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
            IF S$VALUE = "END" THEN
               CURR.REF.NO = ""
               GOSUB 50000
            END
            GOSUB 40000
         END
      CASE OPT = "D" AND LINE.CNT > 0
         MODE = "D"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 700
            LINE.CNT = LINE.CNT - 1
            IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 40000
         END
      CASE OPT = "I" AND LINE.CNT > 0
         MODE = "I"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 800
            LINE.CNT = LINE.CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 700
               LINE.CNT = LINE.CNT - 1
               CURR.REF.NO = ""
               GOSUB 50000
            END
            GOSUB 40000
         END
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "F" AND QTY.ON.HAND = SUM(RSCNV.QTY)
         SCREEN FIELD;;23
         SCREEN INPUT;;23;GOTO 500
         IF S$VALUE = "Y" THEN GOSUB 85000
         OLD.WEIGHT = ISTK.CUR.QTY
         NEW.WEIGHT = SUM(RSCNV.WGT)
         IF NEW.WEIGHT # OLD.WEIGHT THEN
            REM.WEIGHT = OLD.WEIGHT - NEW.WEIGHT
            MAXPTR = 1
            FOR REF = 1 TO LINE.CNT
               SERIAL.WEIGHT = RSCNV.WGT<1,REF>
               IF SERIAL.WEIGHT > RSCNV.WGT<1,MAXPTR> THEN MAXPTR = REF
               RSCNV.WGT<1,REF> = SERIAL.WEIGHT+INT((SERIAL.WEIGHT/NEW.WEIGHT)*REM.WEIGHT+0.5)
               RSCNV.SHT<1,REF> = INT(((RSCNV.WGT<1,REF>/ICR.DV1)*ICR.MT1)/ICR.DV2+0.5)
            NEXT REF
            NEW.WEIGHT = SUM(RSCNV.WGT)
            RSCNV.WGT<1,MAXPTR> = RSCNV.WGT<1,MAXPTR>+(OLD.WEIGHT-NEW.WEIGHT)
         END
*        SAVE.LA.PO = IWLO.LA.PO<1,RSPTR>
*        SAVE.LA.USED = IWLO.LA.USED<1,RSPTR>
*        PREV.LOC = FROM.LOC
         FOR REF = 1 TO LINE.CNT
            TO.SERIAL.ID = RSCNV.ID<1,REF>
            TO.LOC = RSCNV.LOC<1,REF>
            TO.QTY = RSCNV.QTY<1,REF>
            TO.MILL = RS.CNV.MILL<1,REF>
            MATREADU ISTK.REC FROM INV_SERIAL, CONO:TO.SERIAL.ID ELSE
               MAT ISTK.REC = ""
            END
            ISTK.PO.NO = TRAN
            ISTK.PROD = ORIG.PROD
            ISTK.WHSE = ORIG.WHSE
            ISTK.LOC = TO.LOC
            ISTK.UOM = ORIG.UOM
            ISTK.CUR.QTY = RSCNV.WGT<1,REF>
            ISTK.MILL.ID = TO.MILL
            ISTK.ENTRY.DATE = TODAY
            ISTK.EDIT.DATE = TODAY
            ISTK.POST.DATE = TODAY
            ISTK.PLACE = "SC"
            MATWRITE ISTK.REC ON INV_SERIAL, CONO:TO.SERIAL.ID
*---- UPDATE NEW LOCATION
            MATREADU IWLO.REC FROM INV.WHSE.LOC, CONO:ORIG.PROD:"!":ORIG.WHSE:"!":TO.LOC ELSE
               MAT IWLO.REC = ""
               LOCATE TO.LOC IN IWH.LOC<1>,1 BY "AL" SETTING LPTR ELSE
                  IWH.LOC = INSERT(IWH.LOC,1,LPTR,0,TO.LOC)
               END
               MATWRITEU IWH.REC ON INV.WHSE, CONO:ORIG.PROD:"!":ORIG.WHSE
            END
            LOCATE TO.SERIAL.ID IN IWLO.SERIAL<1>,1 BY "AR" SETTING SLOC ELSE
               IWLO.SERIAL = INSERT(IWLO.SERIAL,1,SLOC,0,TO.SERIAL.ID)
            END
            IWLO.LOC.ON.HAND = IWLO.LOC.ON.HAND + ISTK.CUR.QTY
            MATWRITEU IWLO.REC ON INV.WHSE.LOC, CONO:ORIG.PROD:"!":ORIG.WHSE:"!":TO.LOC
*---- UPDATE ORIGINAL LOCATION
            MATREADU IWLO.REC FROM INV.WHSE.LOC, CONO:ORIG.PROD:"!":ORIG.WHSE:"!":FROM.LOC ELSE
               MAT IWLO.REC = ""
            END
            IWLO.LOC.ON.HAND = 0
            MATWRITEU IWLO.REC ON INV.WHSE.LOC, CONO:ORIG.PROD:"!":ORIG.WHSE:"!":FROM.LOC
*---- UPDATE AUDIT HISTORY
            MAT INAH.REC = ""
            INAH.TYPE = "I"
            INAH.SRC = "SC"
            INAH.PROD = ORIG.PROD
            INAH.WHSE = ORIG.WHSE
            INAH.LOC = TO.LOC
            INAH.DATE = TODAY
            INAH.PERIOD = CUR.PERIOD
            INAH.SERIAL = TO.SERIAL.ID
            INAH.QTY = TO.QTY
            INAH.NEW.QTY = TO.QTY
            INAH.SYS.DATE = TODAY
            INAH.SYS.TIME = TIME()
            INAH.OPER.ID = @LOGNAME
            INAH.TRAN = TRAN
            INAH.LOC = FROM.LOC
*           MATWRITE INAH.REC ON INV_AUDIT_HIST, CONO:XXXX
         NEXT REF
         GOTO 100
      CASE OPT = "F"
         ERRMSG = "Balance must be zero before filing."
         GOSUB 90000
   END CASE
   GOTO 500
*
*---- GET LINE NUMBER
*
600 *
   SCREEN FIELD;;22
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
   SCREEN INPUT;;22
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
   RSCNV.ID = DELETE(RSCNV.ID,1,REF.NO,0)
   RSCNV.LOC = DELETE(RSCNV.LOC,1,REF.NO,0)
   RSCNV.QTY = DELETE(RSCNV.QTY,1,REF.NO,0)
   RSCNV.WGT = DELETE(RSCNV.WGT,1,REF.NO,0)
   RSCNV.SHT = DELETE(RSCNV.SHT,1,REF.NO,0)
   RSCNV.MILL = DELETE(RSCNV.MILL,1,REF.NO,0)
   GOSUB 81000
   RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
   RSCNV.ID = INSERT(RSCNV.ID,1,REF.NO,0,"")
   RSCNV.LOC = INSERT(RSCNV.LOC,1,REF.NO,0,"")
   RSCNV.QTY = INSERT(RSCNV.QTY,1,REF.NO,0,"")
   RSCNV.WGT = INSERT(RSCNV.WGT,1,REF.NO,0,"")
   RSCNV.SHT = INSERT(RSCNV.SHT,1,REF.NO,0,"")
   RSCNV.MILL = INSERT(RSCNV.MILL,1,REF.NO,0,"")
   GOSUB 81000
   RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
   S$VAL = REF.NO
   SCREEN DISPLAY;;11
10100 *
   IF MODE = "A" OR MODE = "I" THEN
      TEMP.MF1=GET.SERIAL.SEQ(CONO,CONTROL,INV_SERIAL)
      S$DATA(12)<S$SCR,REF.NO> = TEMP.MF1
      S$VAL = REF.NO
      SCREEN DISPLAY;;12
   END ELSE
      TEMP.MF1 = RSCNV.ID<1,REF.NO>
   END
10200 *
   S$VAL = REF.NO
   SCREEN FIELD;;13
   IF REF.NO > 1 THEN
      S$O.R = "O"
      S$DEFAULT = RSCNV.LOC<1,REF.NO-1>
   END
   SCREEN INPUT;;13;GOTO 19950
   TEMP.MF2 = S$VALUE
10300 *
   BEGIN CASE
      CASE REF.NO > 1 AND RSCNV.QTY<1,REF.NO> = ""
         S$DATA(14)<S$SCR,REF.NO> = OCONV(RSCNV.QTY<1,REF.NO-1>,ICR.CNV)
      CASE RSCNV.QTY<1,REF.NO> = ""
         S$DATA(14)<S$SCR,REF.NO> = ""
      CASE 1
         S$DATA(14)<S$SCR,REF.NO> = OCONV(RSCNV.QTY<1,REF.NO>,ICR.CNV)
   END CASE
   S$VAL = REF.NO
   SCREEN FIELD;;14
   SCREEN INPUT;;14;GOTO 19950
   BEGIN CASE
      CASE S$VALUE <= 0
         ERRMSG = "Invalid quantity. Try again! "
         GOSUB 90000
         GOTO 10300
      CASE CATG.TYPE # "L" AND INDEX(S$VALUE,".",1) > 0
         ERRMSG = "Invalid entry. Try again! "
         GOSUB 90000
         GOTO 10300
      CASE 1
         TEMP.MF3 = ICONV(S$VALUE,ICR.CNV)
         S$DATA(14)<S$SCR,REF.NO> = OCONV(TEMP.MF3,ICR.CNV)
         S$VAL = REF.NO
         SCREEN DISPLAY;;14
   END CASE
10400 *
   S$VAL = REF.NO
   SCREEN FIELD;;15
   SCREEN INPUT;;15;GOTO 19950
   TEMP.MF4 = S$VALUE
19900 *
   RSCNV.ID<1,REF.NO> = TEMP.MF1
   RSCNV.LOC<1,REF.NO> = TEMP.MF2
   RSCNV.QTY<1,REF.NO> = TEMP.MF3
   RSCNV.WGT<1,REF.NO> = INT(((TEMP.MF3/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
   RSCNV.SHT<1,REF.NO> = INT(((RSCNV.WGT<1,REF.NO>/ICR.DV1)*ICR.MT1)/ICR.DV2+0.99)
   RSCNV.MILL<1,REF.NO> = TEMP.MF4
   RETURN
19950 *
   IF MODE = "A" OR MODE = "I" THEN
      BARCODE = BARCODE - 1
   END
   GOSUB 81000
   RETURN
*
*---- GET CONVERSION FACTOR
*
30000 *
*COPY>ICSBP>INV.UM.CNV
   RETURN
*
*---- COMPUTE AND DISPLAY ROLL BALANCE
*
40000 *
   S$DATA(7)<S$SCR> = OCONV(QTY.ON.HAND-SUM(RSCNV.QTY),ICR.CNV)
   SCREEN DISPLAY;;7
   RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
   SCREEN MULTI;;C;11;12;13;14;15
   RETURN
*
*---- LOAD SCREEN DATA
*
80050 *
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
   S$DATA(12)<S$SCR> = RSCNV.ID
   S$DATA(13)<S$SCR> = RSCNV.LOC
   S$DATA(14)<S$SCR> = ""
   FOR LPTR = 1 TO LINE.CNT
      S$DATA(14)<S$SCR,LPTR> = OCONV(RSCNV.QTY<1,LPTR>,ICR.CNV)
   NEXT LPTR
   S$DATA(15)<S$SCR> = RSCNV.MILL
   RETURN
*
*---- PRINT SCREEN DATA
*
85000 *
   PRINTER ON
   PAGE.NO = 0
   GOSUB 86000
   FOR LPTR = 1 TO LINE.CNT
      IF PLINE.CNT > 55 THEN GOSUB 86000
      PLINE = LPTR"R#3"
      PLINE = PLINE:SP3:RSCNV.ID<1,LPTR>"L#8"
      PLINE = PLINE:SP3:RSCNV.LOC<1,LPTR>"L#4"
      PLINE = PLINE:SP3:OCONV(RSCNV.QTY<1,LPTR>,ICR.CNV)"R#8"
      PLINE = PLINE:SP3:RSCNV.MILL<1,LPTR>"L#25"
      PRINT PLINE
   NEXT LPTR
   PRINTER OFF
   ERRMSG = "Printing completed. Press <RETURN> to continue:"
   GOSUB 90000
   RETURN
*
*---- PRINT HEADINGS
*
86000 *
   PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   HLINE1 = OCONV(TODAY,"D2/")"R#8"
   HLINE1 = HLINE1:SPACE(12):"S E R I A L   C O N V E R S I O N""L#40"
   HLINE1 = HLINE1:SPACE(8):"PAGE ":PAGE.NO
   HLINE2 = "Reference  : ":TRAN
   HLINE3 = "Serial #   : ":ISTK.ID[4,15]"L#15":SPACE(2)
   HLINE3 = HLINE3:"Receipt # : ":ISTK.RECP
   HLINE4 = "Whse / Loc : ":ISTK.WHSE"L#4":" / ":ISTK.LOC"L#4"
   HLINE5 = "Product ID : ":ISTK.PROD"L#15"
   HLINE5 = HLINE5:SPACE(3):INV.FULL.DESC"L#45"
   PRINT HLINE1
   PRINT
   PRINT HLINE2
   PRINT HLINE3
   PRINT HLINE4
   PRINT HLINE5
   PRINT
   SLINE1 = "Ln#":SP3:" R/S ID ":SP3:"Loc ":SP3:"Quantity":SP3:"   Mill Identification   "
   SLINE2 = "---":SP3:"--------":SP3:"----":SP3:"--------":SP3:"-------------------------"
   PRINT SLINE1
   PRINT SLINE2
   PLINE.CNT = 9
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999 *
   SCREEN CLEAR;;D
   SCREEN CLOSE
END
