*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - INV.ANL.RPT
* DATE        - 02/17/86
* BY          - JIHAD YAMOUT , C.B.A
* DESCRIPTION - This program list detail inventory stock status.
*T21638 doug 02/26/1997 * Add quantity conversion for FNGD
*T22592 lanny 02/11/1998 * Extend # of lines to bottom of form.
*T24869 aron 02/29/2000 * Change FNGD to use FNGD.STATS for qyt ON-ORDER
*                         and ALLOCATED.
*T26190 ajibaly 03/08/2002 * CONVERT TO REV12 USING BUILD.IWH.FI SUB
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*********************************************************************
*** INSERT EQUATE FROM CPYLIB
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>ICS.CPYLIB>FNGD.STATS
*** INITIALIZATION
     LINE.COUNT = 99 ; PAGE.NO = 0 ; PREV.WHSE = '' ; PREV.M.P.LINE = ""
     TOT.ON.ORDER = 0 ; TOT.AVALBL = 0 ; TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.ON.HAND = 0
     SP1 = SPACE(1)
     D.LINE = ''
     D.LINE = SPACE(66):"---------- ---------- ---------- ---------- ----------"
     T.LINE = ""
     T.LINE = "--------------- --------------------------------------------- ---":D.LINE[66,99]:" ---------"
     HD.LINE = ""
     HD.LINE = "PRODUCT NUMBER               FULL DESCRIPTION                 U/M "
     HD.LINE = HD.LINE:" ON-HAND    RESERVED   ON-ORDER  ALLOCATED  AVAILABLE  LAST-COST"
*** SET UP FOR SYSCOM
     SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
*** OPEN FILES
    OPEN '','INV.WHSE' TO INV.WHSE ELSE
       ERRMSG = 'INV.WHSE FILE IS MISSING'
       GOTO 93000
    END
    OPEN '', 'INVENTORY' TO INVENTORY ELSE
       ERRMSG = 'INVENTORY FILE IS MISSING'
       GOTO 93000
    END
*T24869 v
    OPEN '','FNGD.STATS' TO FNGD.STATS ELSE
       ERRMSG = 'FNGD.STATS FILE IS MISSING'
       GOTO 93000
    END
*T24869 ^
*** GET PROC VALUES
    PROCREAD ID ELSE
       ERRMSG = ' CANNOT PERFORM PROCREAD'
       GOTO 93000
    END
    CONO = ID<1>
*T26493 v
*   CONO.NAME = ID<2>
*   REPORT.NAME = "DETAIL.STOCK.STATUS.REPORT"
    REPORT.NUMBER = ID<2>
    CONO.NAME = ""
    REPORT.NAME = ""
*T26943 ^
    REPORT.DATE = DATE()
    HD1 = "" ; HD2 = ""
*T26190 v
    OPEN.FLAG=1
    ERR.FLAG = ''
    PERIOD = ID<8>
SEL.PERIOD=ID<8>
    IF PERIOD = 'ALL' THEN PERIOD = ''
*T26190 ^
*** GET HEADING
    CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*** PRINTER ON
    PRINTER ON
*** READ AND PROCESS FIRST RECORD
100*
   READNEXT KEY ELSE GOTO 999999
   GOSUB 200
    MATREAD IWH.REC FROM INV.WHSE,KEY ELSE
       MAT IWH.REC = ''
       GOTO 100
    END
    MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
       MAT INV.REC = ''
    END
    CALL BUILD.IWH.FI(KEY,MAT IWH.REC,PERIOD,ERR.FLAG,ERRMSG,OPEN.FLAG) ; *T26190
*** SET THE WHSE PRODUCT
    PREV.WHSE = WHSE
    PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
*** PROCESS THE FILE
    GOSUB 2000
*** PRINT THE RECORD
    GOSUB 3000
*** READ AND PROCESS ALL THE FILES
    DATA = 0
LOOP
    READNEXT KEY ELSE DATA = 1
    WHILE DATA = 0 DO
    GOSUB 200
    MATREAD IWH.REC FROM INV.WHSE,KEY ELSE
       MAT IWH.REC = ''
       GOTO 111
    END
    MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
       MAT INV.REC = ''
    END
    CALL BUILD.IWH.FI(KEY,MAT IWH.REC,PERIOD,ERR.FLAG,ERRMSG,OPEN.FLAG) ; *T26190
*** PROCESS THEN FILE
    GOSUB 2000
*** PRINT THE RECORD
    GOSUB 3000
111*
REPEAT
*** PRINT TOTALS FOR THE LASE WHSE
    GOSUB 4000
*** END OF JOB
    PRINTER OFF
    GOTO 999999
*** SEPERATE THE KEY TO PRPDUCT , WHSE
200*
    PROD.KEY = FIELD(KEY,"!",1)
    PROD = PROD.KEY[4,99]
    WHSE    = FIELD(KEY,"!",2)
RETURN
*** PRINT HEADINGS
1000*
    PRINT CHAR(12)
    PAGE.NO = PAGE.NO + 1
    PRINT HD1:PAGE.NO
    PRINT HD2
    PRINT
    PRINT "WAREHOUSE : ":PREV.WHSE "L#8"
    PRINT "MLINE / PLINE : ":PREV.M.P.LINE
    PRINT
    PRINT HD.LINE
    PRINT T.LINE
    LINE.COUNT = 8
RETURN
*** PROCESS THE RECORD
2000*
  ON.HAND = 0 ; ON.ORDER = 0 ; RESERVE = 0 ; ALLOC = 0
  BEGIN CASE
    CASE WHSE # PREV.WHSE
      GOSUB 4000
      PREV.WHSE = WHSE
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
      GOSUB 1000
    CASE INV.M.LINE:" / ":INV.LINE # PREV.M.P.LINE
      GOSUB 4000
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
      LINE.COUNT = 99
  END CASE
  GOSUB 6000
  FIFO.CNT = COUNT(IWH.COST.FI,VM) + (IWH.COST.FI # "")
  LA.COST = IWH.COST.FI<1,FIFO.CNT>
*T24869 v
  IF INV.M.LINE = "FNGD" THEN
    MATREAD FGS.REC FROM FNGD.STATS, KEY THEN
      IWH.ON.ORDER = SUM(FGS.M.QTY)
      IWH.ALLOC = SUM(FGS.A.QTY)
    END ELSE
      IWH.ON.ORDER = 0
      IWH.ALLOC = 0
    END
  END
*T24869 ^
  IF ICR.DV1 + 0 # 0 THEN
    IF IWH.ON.HAND >= 0 THEN
       ON.HAND=INT((((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ON.HAND=INT((((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.RESV >= 0 THEN
       RESERVE=INT((((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       RESERVE=INT((((IWH.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.ON.ORDER >= 0 THEN
       ON.ORDER = INT((((IWH.ON.ORDER / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ON.ORDER = INT((((IWH.ON.ORDER / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
    IF IWH.ALLOC >= 0 THEN
       ALLOC = INT((((IWH.ALLOC / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5)
    END ELSE
       ALLOC = INT((((IWH.ALLOC / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5)
    END
  END ELSE
    ON.HAND = 0 ; ON.ORDER = 0 ; ALLOC = 0 ; RESERVE = 0
  END
* AVLB = (ON.HAND + ON.ORDER) - (RESERVE + ALLOC)
  AVLB = ON.HAND - RESERVE
  TOT.ON.HAND = TOT.ON.HAND + ON.HAND
  TOT.ON.ORDER = TOT.ON.ORDER + ON.ORDER
  TOT.ALLOC = TOT.ALLOC + ALLOC
  TOT.RESRV = TOT.RESRV + RESERVE
  TOT.AVALBL = TOT.AVALBL + AVLB
RETURN
***   PRINT THE RECORD
3000*
*T22592   IF LINE.COUNT > 53 THEN GOSUB 1000
   IF LINE.COUNT > 57 THEN GOSUB 1000
   LINE.COUNT = LINE.COUNT + 1
   H.LINE = ''
   H.LINE = H.LINE :PROD "L#15"
   H.LINE = H.LINE :SP1: INV.FULL.DESC "L#45"
*  H.LINE = H.LINE :SP1: OCONV(INV.M.WT, "MD2") "R#6"
   H.LINE = H.LINE :SP1: INV.UNIT<1,2> "L#3"
   H.LINE = H.LINE :SP1: OCONV(ON.HAND,ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(RESERVE,ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(ON.ORDER,ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(ALLOC,ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(AVLB,ICR.CNV) "R#10"
* CSF 23185
   IF LEN(OCONV(LA.COST,'MD4')) >= 9 THEN
      H.LINE = H.LINE :SP1: OCONV(LA.COST,'MD4') "R#9"
   END ELSE
      H.LINE = H.LINE :SP1: OCONV(LA.COST, 'MD4,') "R#9"
   END
*
   PRINT H.LINE
RETURN
*** CHECK FOR END OF PAGE
4000*
*T22592   IF LINE.COUNT + 3 > 53 THEN GOSUB 1000
   IF LINE.COUNT + 3 > 57 THEN GOSUB 1000
   LINE.COUNT = LINE.COUNT + 3
   H.LINE = ""
   H.LINE = SPACE(66)
   H.LINE = H.LINE : OCONV(TOT.ON.HAND, ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.RESRV, ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.ON.ORDER, ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.ALLOC, ICR.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.AVALBL, ICR.CNV) "R#10"
   PRINT D.LINE 
   PRINT H.LINE 
   PRINT
   TOT.ON.ORDER = 0 ; TOT.AVALBL = 0 ; TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.ON.HAND = 0
RETURN
***        CONVERT SHEET/WGHT/QTY
6000*
*COPY>ICSBP>INV.UM.CNV
*     MAT INV.CNV.REC = ''
*     BEGIN CASE
*     CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
*        ICR.CNV = "MD0"
*        ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
*     CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
*        ICR.CNV = "MD0"
*        ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10; ICR.DV2 = 1
*     CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
*        ICR.CNV = "MD0"
*        ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
*     CASE 1
*        ICR.CNV = "MD2"
*        ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1
*     END CASE
      RETURN
***   CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
   PRINTER OFF
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
999999*
   PRINTER OFF
END
