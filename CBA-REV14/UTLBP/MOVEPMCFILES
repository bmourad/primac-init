*COPY>PMC.CPYLIB>MENUS.CONTROL
***************************
*T22788 diane 04/28/1998 * Add base systems
*  REVISION - [08.0]      *
***************************
MENU.REC.SIZE = 15
DIM MENU.REC(15)
EQU M.ACCOUNT     TO MENU.REC(1)
EQU ACCOUNT.NAME  TO MENU.REC(2)
EQU SYSTEM.NAME   TO MENU.REC(3)
EQU OFF.VERB      TO MENU.REC(4)
EQU EXIT.VERB     TO MENU.REC(5)
EQU VALID.SYS     TO MENU.REC(6)
EQU HARDWARE.TYPE TO MENU.REC(7)
EQU CBA.PATH      TO MENU.REC(8)
EQU PRIMAC.PATH   TO MENU.REC(9)
EQU BASE.SYS      TO MENU.REC(10)
EQU E.ACCOUNT     TO MENU.REC(11)
*COPY>JIS.CPYLIB>SYS_FILES
***************************
* REVISION - [08.1]       *
* FILE     - SYS.FILES    *
* ID       - FILE NAME    *
***************************
SFR.REC.SIZE = 35
DIM SFR.REC(35)
EQU SFR.TYPE      TO SFR.REC(1) ;* (D),(Q),(B),(P),(S),(C),(M),(O)
EQU SFR.ACCT      TO SFR.REC(2) ;* Resident account
EQU SFR.NAME      TO SFR.REC(3) ;* Resident file
EQU SFR.MOD       TO SFR.REC(4) ;* Dict module
EQU SFR.SEP       TO SFR.REC(5) ;* Dict seperation
EQU SFR.D.MOD     TO SFR.REC(6) ;* Data module
EQU SFR.D.SEP     TO SFR.REC(7) ;* Data seperation
EQU SFR.Q.ACCT    TO SFR.REC(8) ;* (MV1) Q pointer accounts
EQU SFR.Q.NAME    TO SFR.REC(9) ;* (SMV1) Q pointer names
EQU SFR.DTYPE     TO SFR.REC(10);* File data type (F,DIR) (udt)
EQU SFR.D.NAME    TO SFR.REC(11);* Dictionary file name (udt)
EQU SFR.CPYLIB    TO SFR.REC(12);* CPYLIB file name
EQU SFR.PFX       TO SFR.REC(13);* (MV1) The file prefix
EQU SFR.CPLB.SIZE TO SFR.REC(14);* The file DIM size
EQU SFR.CPLB.NAME TO SFR.REC(15);* The CPYLIB name for those # file name
EQU SFR.ID        TO SFR.REC(17);* (MV1) The Components of the Item ID
EQU SFR.ID.TYPE   TO SFR.REC(18);* (MV1) The Components data type (T,D,I)
EQU SFR.XREF.ID          TO SFR.REC(19);* Xref Table ID (T26419)
EQU SFR.XREF.FILE        TO SFR.REC(20);* Xref File Name (T26419)
EQU SFR.XREF.DATA.FILE   TO SFR.REC(21);* Xref Data File (T26419)
EQU SFR.XREF.SRCH.ID   TO SFR.REC(22);* Xref Search ID (T26419)
EQU SFR.XREF.SRCH.HD   TO SFR.REC(23);* Xref Search HD (T26419)
EQU SFR.XREF.VALUE1      TO SFR.REC(24);* Xref Value # 1 (T26419)
EQU SFR.XREF.VALUE2      TO SFR.REC(25);* Xref Value # 2 (T26419)
EQU SFR.XREF.VALUE3      TO SFR.REC(26);* Xref Value # 3 (T26419)
EQU SFR.XREF.VALUE4      TO SFR.REC(27);* Xref Value # 4 (T26419)
EQU SFR.XREF.VALUE5      TO SFR.REC(28);* Xref Value # 5 (T26419)
*COPY>CPYLIB>CHAR
EQU AM  TO CHAR(254)
EQU VM  TO CHAR(253)
EQU SM  TO CHAR(252)
EQU SVM TO CHAR(252)
EQU BEL TO CHAR(007)
CS = @(-1)
CL = @(-4)
NEW.PAGE = CHAR(012)
*COPY>CPYLIB>SYSCOM
SYSCOM.REC.SIZE = 25
DIM SYSCOM.REC(25)
EQU SYS.TYPE   TO SYSCOM.REC(1)
EQU ACCT.NAME  TO SYSCOM.REC(1)
EQU SYS.NAME   TO SYSCOM.REC(2)
EQU FILE.NAME  TO SYSCOM.REC(3)
EQU OPER.ID    TO SYSCOM.REC(4)
EQU USER.NO    TO SYSCOM.REC(5)
EQU OPER.CLASS TO SYSCOM.REC(6)
EQU PROC.DATE  TO SYSCOM.REC(7)
EQU PROC.TIME  TO SYSCOM.REC(8)
EQU PROG.NAME  TO SYSCOM.REC(9)
EQU ERRMSG     TO SYSCOM.REC(10)
EQU ERR.TYPE   TO SYSCOM.REC(11)
EQU ERR.CODE   TO SYSCOM.REC(12)
EQU ERR.RESP   TO SYSCOM.REC(13)
*
*---- SET UP SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Open required Files
*
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "Cannot locate the VOC file"
      GOTO 93000
   END
   OPEN "","PMCVOC" TO PMCVOC ELSE
      ERRMSG = "Cannot locate the PMCVOC file"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate the CONTROL file"
      GOTO 93000
   END
   OPEN "","SYS_FILES" TO SYS_FILES ELSE
      ERRMSG = "Cannot locate the SYS_FILES file"
      GOTO 93000
   END
*
*---- Get setup variables
*
   MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
      ERRMSG = "Cannot locate the CONTROL, MENUS.CONTROL record"
      GOTO 93000
   END
   IF INDEX(PRIMAC.PATH,"/",1) THEN
      S_CHR = "/"
   END ELSE
      S_CHR = "\"
   END
   CNT = COUNT(PRIMAC.PATH,S_CHR) + 1
   IF M.ACCOUNT # FIELD(PRIMAC.PATH,S_CHR,CNT) THEN
      ERRMSG = "PRIMAC Control setup error ?"
      GOSUB 91000; GOTO 99999
   END
   CNT = COUNT(CBA.PATH,S_CHR) + 1
   CBA.ACCT = FIELD(CBA.PATH,S_CHR,CNT)
   PORT_NO = "TTY"; CALL SYSVARS.SUB(PORT_NO)
   DIR_NAME = "ACCT"; CALL SYSVARS.SUB(DIR_NAME)
*
   READ IBMU2FILES FROM CONTROL, "IBMU2FILES" ELSE
      IBMU2FILES = ""
   END
*
   PMC.ACCTS = "CBA"
   PMC.ACCTS<2> = "PMC"
   SYSLINES = DCOUNT(VALID.SYS,VM)
   FOR I = 1 TO SYSLINES
      PMC.ACCTS<2+I> = VALID.SYS<1,I>
   NEXT I
   LOCATE "RES" IN PMC.ACCTS,1 SETTING RESLOC THEN
      LOCATE "JES" IN PMC.ACCTS,1 SETTING FND THEN
         PMC.ACCTS = DELETE(PMC.ACCTS,RESLOC,0,0)
         SYSLINES = SYSLINES - 1
      END
   END
   SYSLINES = SYSLINES + 2
   GLSBAKACCT = M.ACCOUNT:"-GLS-BACKUP"
   IBMU2SYS = "/usr/ud/primac/rev12/sys"
   IBMU2SYS.LEN = LEN(IBMU2SYS)
   PRIMACSQL.ACCT = "C:\Informix\ud52\Primac\primacsql"
*
*---- Validate the SYS_FILES records
*
    RPTR = 1
    SELECT SYS_FILES
    LOOP
       READNEXT TABLE_ID ELSE RPTR = 0
    WHILE RPTR DO
CRT RPTR "L#7" : TABLE_ID
      RPTR = RPTR + 1
      MATREAD SFR.REC FROM SYS_FILES, TABLE_ID ELSE
         ERRMSG = "Cannot locate SYS_FILES, ": TABLE_ID
         GOSUB 91000; GOTO 199
      END
      READ VREC FROM VOC, TABLE_ID ELSE
         ERRMSG = "Cannot locate VOC, ":TABLE_ID
         GOSUB 91000; GOTO 199
      END
      BEGIN CASE
      CASE TABLE_ID[4,99] = ".EOM.TRANS"
         GOTO 199
      CASE TABLE_ID[4,99] = ".POST.REJECTS"
         GOTO 199
      CASE VREC<2> # ""
         OPEN "",TABLE_ID TO SYSFILE ELSE
            ERRMSG = "Cannot locate the ":TABLE_ID:" DATA table"
            GOSUB 91000; GOTO 199
         END
      CASE 1
         ERRMSG = "The ":TABLE_ID:" DATA table has been deleted"
         GOSUB 91000; GOTO 199
      END CASE
      DICTPATH = "..":S_CHR:M.ACCOUNT:"DICT":S_CHR:"D_":TABLE_ID
      BEGIN CASE
      CASE SFR.TYPE = "Q"
         GOTO 199
      CASE SFR.ACCT # "PMC"
         GOTO 199
      CASE VREC<2> # TABLE_ID
         ERRMSG = "Table (":TABLE_ID:") has VOC pointer (":VREC<2>:")"
         GOSUB 91000; GOTO 199
      CASE VREC<3> # DICTPATH
         ERRMSG = "Table (":TABLE_ID:") has DICT path (":VREC<3>:")"
         GOSUB 91000; GOTO 199
      END CASE
DATAPATH = "..":S_CHR:M.ACCOUNT:"-PMC":S_CHR:TABLE_ID
STMT = "mv ":TABLE_ID:" ":"..":S_CHR:M.ACCOUNT:"-PMC":S_CHR
CRT DATAPATH
CRT DICTPATH
CRT STMT
INPUT UPDOK
IF UPDOK = "" THEN
   READU DREC FROM PMCVOC, TABLE_ID THEN
      RELEASE PMCVOC, TABLE_ID
      ERRMSG = "PMCVOC, ":TABLE_ID:" already exits"
      GOSUB 91000; GOTO 199
   END
   READU FREC FROM VOC, TABLE_ID ELSE
      RELEASE VOC, TABLE_ID
      ERRMSG = "Cannot lock VOC, ":TABLE_ID
      GOSUB 91000; GOTO 199
   END
   DREC = "F"
   DREC<2> = TABLE_ID
   DREC<3> = FREC<3>
   WRITE DREC ON PMCVOC, TABLE_ID
   FREC<2> = DATAPATH
   WRITE FREC ON VOC, TABLE_ID
   PCPERFORM STMT
END
GOTO 199
      OPEN "DICT",TABLE_ID TO DICTSYSFILE ELSE
         BEGIN CASE
         CASE SFR.TYPE # "Q"
            ERRMSG = "Cannot locate the ":TABLE_ID:" DICT table"
            GOSUB 91000; GOTO 199
         CASE SFR.NAME = TABLE_ID
            ERRMSG = "Cannot locate the ":TABLE_ID:" DICT table"
            GOSUB 91000; GOTO 199
         END CASE
         READ DREC FROM VOC, SFR.NAME ELSE
            ERRMSG = "Cannot locate the ":TABLE_ID:" DICT table"
            GOSUB 91000; GOTO 199
         END
         IF VREC<3> = DREC<3> THEN
            ERRMSG = "Cannot locate the ":TABLE_ID:" DICT table"
            GOSUB 91000; GOTO 199
         END ELSE
CRT VREC<3>
CRT DREC<3>
CRT "DICT ERROR <<<":
INPUT UPDOK
            IF UPDOK = "" THEN
               READU FREC FROM VOC, TABLE_ID ELSE
                  RELEASE VOC, TABLE_ID
                  ERRMSG = "Cannot lock VOC, ":TABLE_ID
                  GOSUB 91000; GOTO 199
               END
               FREC<3> = DREC<3>
               WRITE FREC ON VOC, TABLE_ID
            END
         END
      END
      BEGIN CASE
      CASE SFR.TYPE = "Q"
         GOTO 199
      CASE SFR.TYPE = "M"
         GOTO 199
      CASE SFR.TYPE = "B"
         GOTO 199
      CASE SFR.TYPE = "P"
         GOTO 199
      CASE SFR.TYPE = "C"
         GOTO 199
      CASE SFR.TYPE = "S"
         GOTO 199
      CASE SFR.ACCT = "PMC"
         CALCPATH = "D_":TABLE_ID
      CASE SFR.ACCT = "CBA"
         CALCPATH = CBA.PATH:S_CHR:"D_":TABLE_ID
      CASE 1
         CALCPATH = "..":S_CHR:M.ACCOUNT:"-":SFR.ACCT:S_CHR:"D_":TABLE_ID
      END CASE
      DICTPATH = "..":S_CHR:M.ACCOUNT:"DICT":S_CHR:"D_":TABLE_ID
      MOVEPATH = "..":S_CHR:M.ACCOUNT:"DICT":S_CHR
      BEGIN CASE
      CASE VREC<3> = DICTPATH
         GOTO 199
      CASE VREC<3> # CALCPATH
CRT "Curr = ": VREC<3>
CRT "Calc = " : CALCPATH
CRT "Dict = " : DICTPATH : " <<<" :
INPUT XOXO
GOTO 199
      END CASE
      STMT = "mv ":CALCPATH:" ":MOVEPATH
CRT STMT:; INPUT UPDOK
IF UPDOK = "" THEN
   READU DREC FROM DICTVOC, TABLE_ID THEN
      RELEASE DICTVOC, TABLE_ID
      ERRMSG = "DICTVOC, ":TABLE_ID:" already exits"
      GOSUB 91000; GOTO 199
   END
   READU FREC FROM VOC, TABLE_ID ELSE
      RELEASE DICTVOC, TABLE_ID
      RELEASE VOC, TABLE_ID
      ERRMSG = "Cannot lock VOC, ":TABLE_ID
      GOSUB 91000; GOTO 199
   END
   DREC = "F"
   DREC<3> = "D_":TABLE_ID
   WRITE DREC ON DICTVOC, TABLE_ID
   FREC<3> = DICTPATH
   WRITE FREC ON VOC, TABLE_ID
   PCPERFORM STMT
END
199*
    REPEAT
      GOTO 99999
*
*---- Error routines
91000*
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
   ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
*
99999*
END
