      SUBROUTINE BUILD.SYS.PROCS
********************************************************************
* REVISION    - [08.1]
********************************************************************
*COPY>CPYLIB>COM1
*COPY>UTL.CPYLIB>COM.BUILD.PMC.SYS
*COPY>UTL.CPYLIB>BUILD.PMC.SYS
*COPY>UTL.CPYLIB>SYS.PROCS
*COPY>UTL.CPYLIB>SYS.PROGRAMES
*COPY>CPYLIB>CHAR
*
      DIM S.SPC.REC(10)
*
      CLEARFILE SYS.PROCS
*
      VERBS = "LPTR"
      VERBS<2> = "<<"
      VERBS<3> = "SP-ASSIGN"
      VERBS<4> = "T-ATT"
      VERBS<5> = "T-DET"
      VERBS<6> = "T-REW"
      VERBS<7> = "T-FWD"
      VERBS<8> = "T-UNLOAD"
*
      FUNCS = "EASY.MENU"
      FUNCS<2> = "REPORT.SCRN"
      FUNCS<3> = "GET.PROC.CONO"
*
      ERRMSG = "Processing procs"; GOSUB 90000
      LN = 1; D.PRD = 1
      CALL SCL.PMC.SYS
      MAX = LINES + 1
      FOR S = MAX TO CBA.LINES
         GOSUB 1000
      NEXT S
      FOR S = 1 TO LINES
         LN = S; D.PRD = S
         CALL SCL.PMC.SYS
         GOSUB 1000
      NEXT S
      LN = 1
      CALL SCL.PMC.SYS
      GOTO 99999
*
*---- Build the procs file name reference
1000  SELECT CBA.FILES(2,S)
      DATA = 1
      LOOP
         READNEXT PROC.NAME ELSE DATA = 0
      WHILE DATA DO
         PRINT @(30,23) : DATA "L#6" : PROC.NAME : CL :
         DATA = DATA + 1
         READ PROC.ITEM FROM CBA.FILES(2,S), PROC.NAME ELSE
            ERRMSG = "Cannot locate ":CBA.FNAME(2,S):", ":PROC.NAME
            GOSUB 91000; GOTO 1099
         END
         IF PROC.ITEM<1> # "PQN" THEN
            ERRMSG = "Invalid PROC item ":CBA.FNAME(2,S):", ":PROC.NAME
            GOSUB 91000; GOTO 1099
         END
         PROC.ITEM = TRIM(PROC.ITEM)
         PROC.ID = PROC.NAME : "!" : PMC.ACCTS<S>
         MATREAD SPC.REC FROM SYS.PROCS, PROC.ID ELSE
            MAT SPC.REC = ""
         END
         GOSUB 2000
         GOSUB 3000
         GOSUB 4000
         MATWRITE SPC.REC ON SYS.PROCS, PROC.ID
1099  REPEAT
      RETURN
2000  PTR = 0
      SRCH = AM:"P"
      LOOP
         PTR = PTR + 1
         POS = INDEX(PROC.ITEM,SRCH,PTR)
      WHILE POS DO
         LCNT = COUNT(PROC.ITEM[1,POS],AM)
         IF PROC.ITEM<LCNT>[1,1] # "H" THEN
            IF PROC.ITEM<LCNT>[1,1] = "N" THEN
               ERRMSG = "Check NH PROC (":CBA.FNAME(2,S):", ":PROC.NAME:") ":STMT
               GOSUB 91000
            END
            GOTO 2090
         END
         STMT = TRIM(PROC.ITEM<LCNT>[2,999])
         BEGIN CASE
         CASE LEN(STMT) < 2
            GOTO 2090
         CASE INDEX(STMT," ",1)
            GOTO 2090
         END CASE
         MATREAD SPG.REC FROM SYS.PROGRAMES, STMT THEN
            LOCATE STMT IN SPC.BP<1> SETTING LOC ELSE
               SPC.BP<1,LOC> = STMT
            END
            LOCATE STMT IN FUNCS SETTING FND THEN GOTO 2090
            LOCATE PMC.ACCTS<S> IN SPG.C.PROC.F<1> BY "AL" SETTING FLOC ELSE
               INS PMC.ACCTS<S> BEFORE SPG.C.PROC.F<1,FLOC>
               INS "" BEFORE SPG.C.PROC<1,FLOC>
            END
            LOCATE PROC.NAME IN SPG.C.PROC<1,FLOC> SETTING PLOC ELSE
               SPG.C.PROC<1,FLOC,PLOC> = PROC.NAME
            END
            MATWRITE SPG.REC ON SYS.PROGRAMES, STMT
         END ELSE
            BEGIN CASE
            CASE STMT[LEN(STMT),1] = "<"
            CASE STMT[LEN(STMT),1] = '"'
            CASE STMT[LEN(STMT),1] = ")"
            CASE PROC.ITEM<LCNT-1> = "S" AND PROC.ITEM<LCNT-2> = "U31AD"
            CASE 1
               LOCATE STMT IN VERBS SETTING LOC ELSE
                  ERRMSG = "Check PROC (":CBA.FNAME(2,S):", ":PROC.NAME:") ":STMT
                  GOSUB 91500; GOTO 2090
               END
            END CASE
         END
2090  REPEAT
      RETURN
3000  PTR = 0
      LOOP
         PTR = PTR + 1
         POS = INDEX(PROC.ITEM,"[",PTR)
      WHILE POS DO
         LCNT = COUNT(PROC.ITEM[1,POS],AM) + 1
         STMT = PROC.ITEM<LCNT>
         BEGIN CASE
         CASE STMT[LEN(STMT),1] # "]"
         CASE STMT[LEN(STMT),1] = "["
            STMT = TRIM(STMT[2,999])
            GOSUB 8000
         CASE NUM(TRIM(FIELD(STMT,"[",1)))
            STMT = TRIM(STMT[INDEX(STMT,"[",1),999])
            GOSUB 8000
         END CASE
3090  REPEAT
      RETURN
4000  PTR = 0
      SRCH = AM:"("
      LOOP
         PTR = PTR + 1
         POS = INDEX(PROC.ITEM,SRCH,PTR)
      WHILE POS DO
         LCNT = COUNT(PROC.ITEM[1,POS],AM) + 1
         STMT = PROC.ITEM<LCNT>
         BEGIN CASE
         CASE STMT[LEN(STMT),1] # ")"
         CASE STMT[1,1] = "("
            STMT = TRIM(STMT[2,999])
            GOSUB 8000
         CASE NUM(TRIM(FIELD(STMT,"(",1)))
            STMT = TRIM(STMT[INDEX(STMT,"(",1),999])
            GOSUB 8000
         END CASE
4090  REPEAT
      RETURN
8000  PROC.SUB = TRIM(FIELD(STMT[1,LEN(STMT)-1]," ",2))
      IF PROC.SUB = "" THEN GOTO 8099
      PROC.FILE = TRIM(FIELD(STMT," ",1))
      LOCATE PROC.FILE[1,3] IN PMC.ACCTS SETTING FPTR ELSE
         ERRMSG = "Cannot locate proc file (":PROC.FILE:") for ":CBA.FNAME(2,S):", ":PROC.NAME
         GOSUB 91000; GOTO 8099
      END
      READ SUB.ITEM FROM CBA.FILES(2,FPTR), PROC.SUB ELSE
         ERRMSG = "Cannot locate proc item (":PROC.FILE:", ":PROC.SUB:") for ":CBA.FNAME(2,S):", ":PROC.NAME
         GOSUB 91000; GOTO 8099
      END
      IF SUB.ITEM<1> # "PQN" THEN
         ERRMSG = "Invalid proc item (":PROC.FILE:", ":PROC.SUB:") for ":CBA.FNAME(2,S):", ":PROC.NAME
         GOSUB 91000; GOTO 8099
      END
      LOCATE PMC.ACCTS<FPTR> IN SPC.S.PROC.F<1> BY "AL" SETTING FLOC ELSE
         INS PMC.ACCTS<FPTR> BEFORE SPC.S.PROC.F<1,FLOC>
         INS "" BEFORE SPC.S.PROC<1,FLOC>
      END
      LOCATE PROC.SUB IN SPC.S.PROC<1,FLOC> SETTING PLOC ELSE
         SPC.S.PROC<1,FLOC,PLOC> = PROC.SUB
      END
      MAT S.SPC.REC = MAT SPC.REC
      PROC.SUB.ID = PROC.SUB : "!" : PMC.ACCTS<FPTR>
      MATREAD SPC.REC FROM SYS.PROCS, PROC.SUB.ID ELSE
         MAT SPC.REC = ""
      END
      LOCATE PMC.ACCTS<S> IN SPC.C.PROC.F<1> BY "AL" SETTING FLOC ELSE
         INS PMC.ACCTS<S> BEFORE SPC.C.PROC.F<1,FLOC>
         INS "" BEFORE SPC.C.PROC<1,FLOC>
      END
      LOCATE PROC.NAME IN SPC.C.PROC<1,FLOC> SETTING PLOC ELSE
         SPC.C.PROC<1,FLOC,PLOC> = PROC.NAME
      END
      MATWRITE SPC.REC ON SYS.PROCS, PROC.SUB.ID
      MAT SPC.REC = MAT S.SPC.REC
8099  RETURN
90000 PRINT @(0,23):ERRMSG:CL:
      RETURN
91000 WRITE ERRMSG ON SYS.ERRORS, ERR.SEQ
      ERR.SEQ = ERR.SEQ + 1
      RETURN
91500 WRITE ERRMSG ON SYS.WARNINGS, WRN.SEQ
      WRN.SEQ = WRN.SEQ + 1
      RETURN
99999 RETURN
   END
