      SUBROUTINE SCN_FLD_M(FLD_ID,XLOC,YLOC)
*COPY>CPYLIB>COM_SCREENM
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* Revision      - [10.0]
* Revision Date - 04/28/94
* System        - PRIMAC
* Library       - UTLBP/DATA_SCN_M
* Author        - Ziad Yamout, VERCOM Software, Inc.
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>PMC.CPYLIB>MENUS.CONTROL
*COPY>PMC.CPYLIB>SECURITY
*COPY>UTL.CPYLIB>SYS_SCN_DEF
*COPY>UTL.CPYLIB>SYS_FILES
*COPY>UTL.CPYLIB>PFX_FILES
*COPY>UTL.CPYLIB>SYS_FIELDS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
      DIM S_SSD_REC(30)
      DIM S_DFD.REC(35)
      DIM FLD_NAME_REC(21)
      DIM SCN_FLD_REC(21)
      DIM X_LOC_REC(21)
      DIM Y_LOC_REC(21)
      DIM FMT_REC(21)
*
      EQU FLD_TABLE  TO SCN_FLD_REC(1)
      EQU FLD_PFX    TO SCN_FLD_REC(2)
      EQU FLD_ATTNO  TO SCN_FLD_REC(5)
      EQU FLD_MVNO   TO SCN_FLD_REC(6)
      EQU FLD_SMVNO  TO SCN_FLD_REC(7)
      EQU FLD_LCHR   TO SCN_FLD_REC(8)
      EQU FLD_SEQ    TO SCN_FLD_REC(9)
      EQU FLD_REF    TO SCN_FLD_REC(10)
      EQU FLD_TYPE   TO SCN_FLD_REC(11)
      EQU FLD_X      TO SCN_FLD_REC(12)
      EQU FLD_Y      TO SCN_FLD_REC(13)
      EQU FLD_CNV    TO SCN_FLD_REC(14)
      EQU FLD_FMT    TO SCN_FLD_REC(15)
      EQU FLD_LINES  TO SCN_FLD_REC(16)
      EQU FLD_LNSPC  TO SCN_FLD_REC(17)
      EQU FLD_DSTLST TO SCN_FLD_REC(18)
      EQU FLD_HIDE   TO SCN_FLD_REC(19)
      EQU FLD_JSTFY  TO SCN_FLD_REC(20)
      EQU FLD_LEN    TO SCN_FLD_REC(21)
*
      EQU ATTNO_X_L  TO X_LOC_REC(5)
      EQU MVNO_X_L   TO X_LOC_REC(6)
      EQU SMVNO_X_L  TO X_LOC_REC(7)
      EQU LCHR_X_L   TO X_LOC_REC(8)
      EQU SEQ_X_L    TO X_LOC_REC(9)
      EQU REF_X_L    TO X_LOC_REC(10)
      EQU TYPE_X_L   TO X_LOC_REC(11)
      EQU X_X_L      TO X_LOC_REC(12)
      EQU Y_X_L      TO X_LOC_REC(13)
      EQU CNV_X_L    TO X_LOC_REC(14)
      EQU FMT_X_L    TO X_LOC_REC(15)
      EQU LINES_X_L  TO X_LOC_REC(16)
      EQU LNSPC_X_L  TO X_LOC_REC(17)
      EQU DSTLST_X_L TO X_LOC_REC(18)
      EQU HIDE_X_L   TO X_LOC_REC(19)
      EQU JSTFY_X_L  TO X_LOC_REC(20)
      EQU LEN_X_L    TO X_LOC_REC(21)
*
      EQU ATTNO_Y_L  TO Y_LOC_REC(5)
      EQU MVNO_Y_L   TO Y_LOC_REC(6)
      EQU SMVNO_Y_L  TO Y_LOC_REC(7)
      EQU LCHR_Y_L   TO Y_LOC_REC(8)
      EQU SEQ_Y_L    TO Y_LOC_REC(9)
      EQU REF_Y_L    TO Y_LOC_REC(10)
      EQU TYPE_Y_L   TO Y_LOC_REC(11)
      EQU X_Y_L      TO Y_LOC_REC(12)
      EQU Y_Y_L      TO Y_LOC_REC(13)
      EQU CNV_Y_L    TO Y_LOC_REC(14)
      EQU FMT_Y_L    TO Y_LOC_REC(15)
      EQU LINES_Y_L  TO Y_LOC_REC(16)
      EQU LNSPC_Y_L  TO Y_LOC_REC(17)
      EQU DSTLST_Y_L TO Y_LOC_REC(18)
      EQU HIDE_Y_L   TO Y_LOC_REC(19)
      EQU JSTFY_Y_L  TO Y_LOC_REC(20)
      EQU LEN_Y_L    TO Y_LOC_REC(21)
*
      EQU ATTNO_FMT  TO FMT_REC(5)
      EQU MVNO_FMT   TO FMT_REC(6)
      EQU SMVNO_FMT  TO FMT_REC(7)
      EQU LCHR_FMT   TO FMT_REC(8)
      EQU SEQ_FMT    TO FMT_REC(9)
      EQU REF_FMT    TO FMT_REC(10)
      EQU TYPE_FMT   TO FMT_REC(11)
      EQU X_FMT      TO FMT_REC(12)
      EQU Y_FMT      TO FMT_REC(13)
      EQU CNV_FMT    TO FMT_REC(14)
      EQU FMT_FMT    TO FMT_REC(15)
      EQU LINES_FMT  TO FMT_REC(16)
      EQU LNSPC_FMT  TO FMT_REC(17)
      EQU DSTLST_FMT TO FMT_REC(18)
      EQU HIDE_FMT   TO FMT_REC(19)
      EQU JSTFY_FMT  TO FMT_REC(20)
      EQU LEN_FMT    TO FMT_REC(21)
*
      FLD_NAME_REC(5)  = "SSD_FLD_ATTNO"
      FLD_NAME_REC(6)  = "SSD_FLD_MVNO"
      FLD_NAME_REC(7)  = "SSD_FLD_SMVNO"
      FLD_NAME_REC(8)  = "SSD_FLD_LCHR"
      FLD_NAME_REC(9)  = "SSD_FLD_SEQ"
      FLD_NAME_REC(10) = "SSD_FLD_REF"
      FLD_NAME_REC(11) = "SSD_FLD_TYPE"
      FLD_NAME_REC(12) = "SSD_FLD_X"
      FLD_NAME_REC(13) = "SSD_FLD_Y"
      FLD_NAME_REC(14) = "SSD_FLD_CNV"
      FLD_NAME_REC(15) = "SSD_FLD_FMT"
      FLD_NAME_REC(16) = "SSD_FLD_LINES"
      FLD_NAME_REC(17) = "SSD_FLD_LNSPC"
      FLD_NAME_REC(18) = "SSD_FLD_DSTLST"
      FLD_NAME_REC(19) = "SSD_FLD_HIDE"
*
      SCN_NAME = "SCN_FLD_M"
*
      CALL SCN_CRT_BLD(SCN_NAME,SCN_HDR_CRT,SCN_CLR_CRT,ERRMSG)
      IF ERRMSG # "" THEN GOTO 93000
      MAT S_SSD_REC = MAT SSD.REC
      MATREAD SSD.REC FROM SYS_SCN_DEF, SCN_NAME ELSE
         ERRMSG = "Cannot locate Setup screen - ":SCN_NAME
         GOTO 93000
      END
*
      PMSG_X_L = 36; PMSG_Y_L = 21
      ID_X_L = 17; ID_Y_L = 2
      TABLE_X_L = 54; TABLE_Y_L = 2; TABLE_FMT = "L#25"
      PFX_X_L = 54; PFX_Y_L = 3; PFX_FMT = "L#25"
*
      FOR OPT = 5 TO 19
         LOCATE FLD_NAME_REC(OPT) IN SSD_FIELDS<1>,1 SETTING LOC ELSE LOC = 1
         X_LOC_REC(OPT) = SSD_FLD_X<1,LOC>
         Y_LOC_REC(OPT) = SSD_FLD_Y<1,LOC>
         FMT_REC(OPT) = SSD_FLD_FMT<1,LOC>
      NEXT OPT
      JSTFY_X_L = LNSPC_X_L; JSTFY_Y_L = LNSPC_Y_L+1; JSTFY_FMT = "L#1"
      LEN_X_L = LNSPC_X_L+13; LEN_Y_L = LNSPC_Y_L+1; LEN_FMT = "L#3"
      MAT SSD.REC = MAT S_SSD_REC
*
      SCN_M_ID = SSD_M_ID
      SCN_FIELDS = SSD_FIELDS
*
      DTYP_INI = "E"; DTYP_DSC = "Edit"
      DTYP_INI<2> = "D"; DTYP_DSC<2> = "Display"
*
      TYPE_INI = "T"; TYPE_DSC = "Text"; OTYP_INI = 1
      TYPE_INI<2> = "N"; TYPE_DSC<2> = "Numeric"; OTYP_INI<2> = 3
      TYPE_INI<3> = "C"; TYPE_DSC<3> = "deCimal"; OTYP_INI<3> = 4
      TYPE_INI<4> = "A"; TYPE_DSC<4> = "Alpha"; OTYP_INI<4> = 2
      TYPE_INI<5> = "D"; TYPE_DSC<5> = "Date"; OTYP_INI<5> = 6
      TYPE_INI<6> = "L"; TYPE_DSC<6> = "Logical"; OTYP_INI<6> = 8
      TYPE_INI<7> = "P"; TYPE_DSC<7> = "Pattern"; OTYP_INI<7> = 7
      TYPE_INI<8> = "U"; TYPE_DSC<8> = "coUnter"; OTYP_INI<8> = 3
*
      FLD_NAME = FLD_ID
      ID_PFX = FIELD(FLD_NAME,"_",1):"_"
      GOSUB 1000
      IF ERRMSG # "" THEN GOTO 93000
      BEGIN CASE
      CASE DFD_LVL = "M"
         FLD_LNK = FIELD(FLD_ID,"_",1):"_":DFD_M_LNK
         IF FLD_ID = DFD_M_LNK THEN
            FLD_ASOC = DFD_M_ASOC
            INS DFD_M_LNK BEFORE FLD_ASOC<1,1>
         END ELSE
            MAT S_DFD.REC = MAT DFD.REC
            M_LNK = DFD_M_LNK
            MATREAD DFD.REC FROM SYS_FIELDS, M_LNK ELSE
               MAT DFD.REC = ""
            END
            FLD_ASOC = DFD_M_ASOC
            INS M_LNK BEFORE FLD_ASOC<1,1>
            MAT DFD.REC = MAT S_DFD.REC
         END
      CASE DFD_LVL = "V"
         FLD_LNK = FIELD(FLD_ID,"_",1):"_":DFD_V_LNK
         IF FLD_ID = DFD_V_LNK THEN
            FLD_ASOC = DFD_V_ASOC
            INS DFD_V_LNK BEFORE FLD_ASOC<1,1>
         END ELSE
            MAT S_DFD.REC = MAT DFD.REC
            V_LNK = DFD_V_LNK
            MATREAD DFD.REC FROM SYS_FIELDS, V_LNK ELSE
               MAT DFD.REC = ""
            END
            FLD_ASOC = DFD_V_ASOC
            INS V_LNK BEFORE FLD_ASOC<1,1>
            MAT DFD.REC = MAT S_DFD.REC
         END
      CASE 1
         FLD_ASOC = ""
         FLD_LNK = ""
      END CASE
      LIMIT = DCOUNT(FLD_ASOC,VM)
      FOR OPT = 1 TO LIMIT
         ASOC_NAME = ID_PFX:FLD_ASOC<1,OPT>
         IF ASOC_NAME # FLD_ID THEN
            LOCATE ASOC_NAME IN SCN_FIELDS<1>,1 SETTING LOC THEN
               LIMIT = 0
            END
         END
      NEXT OPT
      IF LIMIT THEN
         DFLT_MVNO = ""
         DFLT_SMVNO = ""
         DFLT_LCHR = ""
         DFLT_LINES = ""
         DFLT_LNSPC = ""
      END ELSE
         DFLT_MVNO = SSD_FLD_MVNO<1,LOC>
         DFLT_SMVNO = SSD_FLD_SMVNO<1,LOC>
         DFLT_LCHR = SSD_FLD_LCHR<1,LOC>
         DFLT_LINES = SSD_FLD_LINES<1,LOC>
         DFLT_LNSPC = SSD_FLD_LNSPC<1,LOC>
      END
*
      CRT SCN_HDR_CRT:
*
      CRT @(ID_X_L,ID_Y_L): FLD_ID "L#25" :
      IF FIELD(FLD_ID,"_",1) = FLD_ID THEN
         FLDTYPE = "ID"
      END ELSE
         FLDTYPE = "DATA"
      END
      FLD_LVL = DFD_LVL
      MAT SCN_FLD_REC = ""
      IF FLDTYPE = "ID" THEN
         LOCATE FLD_ID IN SCN_M_ID<1>,1 SETTING FLOC THEN
            FLD_X = SSD_ID_X<1,FLOC>
            FLD_Y = SSD_ID_Y<1,FLOC>
            FLD_CNV = SSD_ID_CNV<1,FLOC>
            FLD_FMT = SSD_ID_FMT<1,FLOC>
            FLD_MVNO = 1; FLD_SMVNO = 1
            FLD_LINES = 1; FLD_LNSPC = 1
            FLD_JSTFY = FIELD(FLD_FMT,"#",1)
            FLD_LEN = FIELD(FLD_FMT,"#",2)
            GOSUB 4000
         END ELSE
            SCN_M_ID<1,FLOC> = FLD_ID
            FLD_ATTNO = 0
            FLD_X = XLOC
            FLD_Y = YLOC
            BEGIN CASE
            CASE DFD_TYPE = "C"
               FLD_CNV = "MD":(DFD_DEC+0)
            CASE DFD_TYPE = "D"
               FLD_CNV = "D2/"
            CASE 1
               FLD_CNV = ""
            END CASE
            FLD_FMT = DFD_JUSTIFY:"#":DFD_LEN
            FLD_JSTFY = DFD_JUSTIFY
            FLD_LEN = DFD_LEN
            FLD_MVNO = 1; FLD_SMVNO = 1
            FLD_LINES = 1; FLD_LNSPC = 1
            GOSUB 4000
         END
      END ELSE
         LOCATE FLD_ID IN SCN_FIELDS<1>,1 SETTING FLOC THEN
            FLD_ATTNO = SSD_FLD_ATTNO<1,FLOC>
            FLD_MVNO = SSD_FLD_MVNO<1,FLOC>
            FLD_SMVNO = SSD_FLD_SMVNO<1,FLOC>
            FLD_LCHR = SSD_FLD_LCHR<1,FLOC>
            FLD_TABLE = SSD_FLD_TABLE<1,FLOC>
            FLD_PFX = SSD_FLD_PFX<1,FLOC>
            FLD_SEQ = SSD_FLD_SEQ<1,FLOC>
            FLD_REF = SSD_FLD_REF<1,FLOC>
            FLD_TYPE = SSD_FLD_TYPE<1,FLOC>
            FLD_X = SSD_FLD_X<1,FLOC>
            FLD_Y = SSD_FLD_Y<1,FLOC>
            FLD_CNV = SSD_FLD_CNV<1,FLOC>
            FLD_FMT = SSD_FLD_FMT<1,FLOC>
            FLD_LINES = SSD_FLD_LINES<1,FLOC>
            FLD_LNSPC = SSD_FLD_LNSPC<1,FLOC>
            FLD_DSTLST = SSD_FLD_DSTLST<1,FLOC>
            FLD_HIDE = SSD_FLD_HIDE<1,FLOC>
            FLD_JSTFY = FIELD(FLD_FMT,"#",1)
            FLD_LEN = FIELD(FLD_FMT,"#",2)
            GOSUB 4500; GOSUB 4510
         END ELSE
            SCN_FIELDS<1,FLOC> = FLD_ID
            FLD_ATTNO = DFD_ATTNO
            IF DFD_TABLE # SSD_M_TABLE THEN
               FLD_TABLE = DFD_TABLE
            END
            FLD_PFX = DFD_LNK
*           FLD_TYPE = DFD_TYPE
            FLD_X = XLOC
            FLD_Y = YLOC
            BEGIN CASE
            CASE DFD_TYPE = "C"
               FLD_CNV = "MD":DFD_DEC
            CASE DFD_TYPE = "D"
               FLD_CNV = "D2/"
            CASE 1
               FLD_CNV = ""
            END CASE
            FLD_FMT = DFD_JUSTIFY:"#":DFD_LEN
            FLD_JSTFY = DFD_JUSTIFY
            FLD_LEN = DFD_LEN
*
            GOSUB 4500; GOSUB 4520
            OPTLMT = 6
            FOR OPTION = 1 TO OPTLMT
               ON OPTION GOSUB 130,140,150,160,180,190
               IF VALUE = "END" THEN OPTLMT = 0
            NEXT OPTION
            IF OPTLMT = 0 THEN
               SCN_FIELDS = DELETE(SCN_FIELDS,1,FLOC,0)
            END
         END
      END
*
*---- Prompt line
*
      MORE = 1
      LOOP
         X = PMSG_X_L; Y = PMSG_Y_L
         TYP = 1; MAXL = 3
         CALL EDIT.SUB
         OPTION = VALUE
         BEGIN CASE
         CASE OPTION = "E" OR OPTION = "e" OR OPTION = "END" OR OPTION = "end"
            MORE = 0
         CASE OPTION = "F" OR OPTION = "f"
            BEGIN CASE
            CASE FLDTYPE = "ID"
               SSD_M_ID = SCN_M_ID
               SSD_ID_X<1,FLOC> = FLD_X
               SSD_ID_Y<1,FLOC> = FLD_Y
               SSD_ID_CNV<1,FLOC> = FLD_CNV
               SSD_ID_FMT<1,FLOC> = FLD_FMT
            CASE 1
               SSD_FIELDS = SCN_FIELDS
               SSD_FLD_ATTNO<1,FLOC> = FLD_ATTNO
               SSD_FLD_LNK<1,FLOC> = FLD_LNK
               SSD_FLD_MVNO<1,FLOC> = FLD_MVNO
               SSD_FLD_SMVNO<1,FLOC> = FLD_SMVNO
               SSD_FLD_LCHR<1,FLOC> = FLD_LCHR
               SSD_FLD_TABLE<1,FLOC> = FLD_TABLE
               SSD_FLD_PFX<1,FLOC> = FLD_PFX
               SSD_FLD_SEQ<1,FLOC> = FLD_SEQ
               SSD_FLD_REF<1,FLOC> = FLD_REF
               SSD_FLD_TYPE<1,FLOC> = FLD_TYPE
               SSD_FLD_X<1,FLOC> = FLD_X
               SSD_FLD_Y<1,FLOC> = FLD_Y
               SSD_FLD_CNV<1,FLOC> = FLD_CNV
               SSD_FLD_FMT<1,FLOC> = FLD_FMT
               SSD_FLD_LINES<1,FLOC> = FLD_LINES
               SSD_FLD_LNSPC<1,FLOC> = FLD_LNSPC
               SSD_FLD_DSTLST<1,FLOC> = FLD_DSTLST
               SSD_FLD_HIDE<1,FLOC> = FLD_HIDE
            END CASE
            MORE = 0
         CASE NOT(NUM(OPTION))
         CASE OPTION < 1 OR OPTION > 12
         CASE 1
            ON OPTION GOSUB 110,120,130,140,150,160,170,180,190,200,210,220
         END CASE
      WHILE MORE DO REPEAT
      GOTO 99999
*
*---- Row
110*
      FLD_NAME = "SSD_FLD_Y"
      GOSUB 1000
      IF ERRMSG = "" THEN
         GOSUB 1100
         X = Y_X_L; Y = Y_Y_L
         JUSTIFY = FIELD(Y_FMT,"#",1); MAXL = FIELD(Y_FMT,"#",2)
         IF FLD_Y # "" THEN
            O.R = "O"
            DEFAULT = FLD_Y
         END
         CALL EDIT.SUB
         IF VALUE # "END" THEN
            FLD_Y = VALUE
         END
      END ELSE
         GOSUB 91000
      END
      RETURN
*
*---- Column
120*
      FLD_NAME = "SSD_FLD_X"
      GOSUB 1000
      IF ERRMSG = "" THEN
         GOSUB 1100
         X = X_X_L; Y = X_Y_L
         JUSTIFY = FIELD(X_FMT,"#",1); MAXL = FIELD(X_FMT,"#",2)
         IF FLD_X # "" THEN
            O.R = "O"
            DEFAULT = FLD_X
         END
         CALL EDIT.SUB
         IF VALUE # "END" THEN
            FLD_X = VALUE
         END
      END ELSE
         GOSUB 91000
      END
      RETURN
*
*---- Sequence
130*
      IF FLDTYPE = "ID" THEN GOTO 139
      FLD_NAME = "SSD_FLD_SEQ"
      GOSUB 1000
      IF ERRMSG # "" THEN
         GOSUB 91000; GOTO 139
      END
      GOSUB 1100
      X = SEQ_X_L; Y = SEQ_Y_L
      JUSTIFY = FIELD(SEQ_FMT,"#",1); MAXL = FIELD(SEQ_FMT,"#",2)
      IF FLD_SEQ = "" THEN
        DFLT_SEQ = 0; LIMIT = 100
        FOR I = 1 TO LIMIT
           LOCATE I IN SSD_FLD_SEQ<1>,1 SETTING FND ELSE
              DFLT_SEQ = I; LIMIT = 0
           END
        NEXT I
        IF DFLT_SEQ THEN
           O.R = "O"
           DEFAULT = DFLT_SEQ
        END
      END ELSE
         O.R = "O"
         DEFAULT = FLD_SEQ
      END
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 139
      IF VALUE > 0 THEN
         LOCATE VALUE IN SSD_FLD_SEQ<1>,1 SETTING FND THEN
            IF SSD_FIELDS<1,FND> # FLD_ID THEN
              ERRMSG = "Sequence # ":VALUE:", is already utilized for Field - ":SSD_FIELDS<1,FND>
              GOSUB 91000; GOTO 130
            END
         END
      END
      FLD_SEQ = VALUE
139*
      RETURN
*
*---- Reference
140*
      BEGIN CASE
      CASE FLDTYPE = "ID"
         GOTO 149
      CASE FLD_TABLE = ""
      CASE FLD_LVL = "S" OR DFLT_MVNO # "" OR DFLT_SMVNO # ""
         FLD_REF = 0
         CRT @(REF_X_L,REF_Y_L):FLD_REF REF_FMT:
         GOTO 149
      END CASE
      FLD_NAME = "SSD_FLD_REF"
      GOSUB 1000
      IF ERRMSG # "" THEN
         GOSUB 91000; GOTO 149
      END
      GOSUB 1100
      X = REF_X_L; Y = REF_Y_L
      JUSTIFY = FIELD(REF_FMT,"#",1); MAXL = FIELD(REF_FMT,"#",2)
      BEGIN CASE
      CASE FLD_REF # ""
         O.R = "O"
         DEFAULT = FLD_REF
      CASE FLD_TABLE # ""
         O.R = "O"
         DEFAULT = 0
      CASE FLD_SEQ > 0
         O.R = "O"
         DEFAULT = FLD_SEQ
      END CASE
      CALL EDIT.SUB
      BEGIN CASE
      CASE VALUE = "END"
         GOTO 149
      CASE VALUE # "0"
         LOCATE VALUE IN SSD_FLD_REF<1>,1 SETTING FND THEN
            IF SSD_FIELDS<1,FND> # FLD_ID THEN
              ERRMSG = "Reference # ":VALUE:", is already utilized for Field - ":SSD_FIELDS<1,FND>
              GOSUB 91000; GOTO 140
            END
         END
      END CASE
      FLD_REF = VALUE
      IF NUM(FLD_REF) THEN
         IF LEN(FLD_REF) > 1 AND FLD_REF < 10 AND FLD_REF > 0 THEN
            FLD_REF = FLD_REF + 0
            CRT @(REF_X_L,REF_Y_L):FLD_REF REF_FMT:
         END
      END
149*
      RETURN
*
*---- Multi Value
150*
      FLD_NAME = "SSD_FLD_MVNO"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 159
      CASE FLD_LVL = "S"
         FLD_MVNO = 1
         CRT @(MVNO_X_L,MVNO_Y_L):FLD_MVNO MVNO_FMT:
         GOTO 159
      CASE DFLT_MVNO # ""
         FLD_MVNO = DFLT_MVNO
         CRT @(MVNO_X_L,MVNO_Y_L):FLD_MVNO MVNO_FMT:
         GOTO 159
      END CASE
      GOSUB 1100
      X = MVNO_X_L; Y = MVNO_Y_L
      JUSTIFY = FIELD(MVNO_FMT,"#",1); MAXL = FIELD(MVNO_FMT,"#",2)
      O.R = "O"
      IF FLD_MVNO = "" THEN
         DEFAULT = 0
      END ELSE
         DEFAULT = FLD_MVNO
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_MVNO = VALUE
      END
159*
      RETURN
*
*---- Sub Multi Value
160*
      FLD_NAME = "SSD_FLD_SMVNO"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 169
      CASE FLD_LVL # "V"
         FLD_SMVNO = 1
         CRT @(SMVNO_X_L,SMVNO_Y_L):FLD_SMVNO SMVNO_FMT:
         GOTO 169
      CASE DFLT_SMVNO # ""
         FLD_SMVNO = DFLT_SMVNO
         CRT @(SMVNO_X_L,SMVNO_Y_L):FLD_SMVNO SMVNO_FMT:
         GOTO 169
      END CASE
      GOSUB 1100
      X = SMVNO_X_L; Y = SMVNO_Y_L
      JUSTIFY = FIELD(SMVNO_FMT,"#",1); MAXL = FIELD(SMVNO_FMT,"#",2)
      O.R = "O"
      IF FLD_SMVNO = "" THEN
         DEFAULT = 0
      END ELSE
         DEFAULT = FLD_SMVNO
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_SMVNO = VALUE
      END
169*
      RETURN
*
*---- Level Character
170*
      FLD_NAME = "SSD_FLD_LCHR"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 179
      CASE FLD_MVNO < 1 OR FLD_SMVNO < 1
         FLD_LCHR = ""
         CRT @(LCHR_X_L,LCHR_Y_L):FLD_LCHR LCHR_FMT:
         GOTO 179
      CASE DFLT_LCHR # ""
         FLD_LCHR = DFLT_LCHR
         CRT @(LCHR_X_L,LCHR_Y_L):FLD_LCHR LCHR_FMT:
         GOTO 179
      END CASE
      GOSUB 1100
      X = LCHR_X_L; Y = LCHR_Y_L
      JUSTIFY = FIELD(LCHR_FMT,"#",1); MAXL = FIELD(LCHR_FMT,"#",2)
      O.R = "O"
      IF FLD_LCHR # "" THEN
         DEFAULT = FLD_LCHR
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_LCHR = VALUE
      END
179*
      RETURN
*
*---- Lines
180*
      FLD_NAME = "SSD_FLD_LINES"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 189
      CASE (FLD_LVL = "S" AND FLD_LCHR = "") OR (FLD_LVL = "M" AND FLD_MVNO > 0 AND FLD_LCHR = "") OR (FLD_LVL = "V" AND FLD_SMVNO > 0 AND FLD_LCHR = "")
         FLD_LINES = 1
         CRT @(LINES_X_L,LINES_Y_L):FLD_LINES LINES_FMT:
         GOTO 189
      CASE DFLT_LINES # ""
         FLD_LINES = DFLT_LINES
         CRT @(LINES_X_L,LINES_Y_L):FLD_LINES LINES_FMT:
         GOTO 189
      END CASE
      GOSUB 1100
      X = LINES_X_L; Y = LINES_Y_L
      JUSTIFY = FIELD(LINES_FMT,"#",1); MAXL = FIELD(LINES_FMT,"#",2)
      O.R = "O"
      IF FLD_LINES = "" THEN
         DEFAULT = 1
      END ELSE
         DEFAULT = FLD_LINES
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_LINES = VALUE
      END
189*
      RETURN
*
*---- Line Space
190*
      FLD_NAME = "SSD_FLD_LNSPC"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 199
      CASE FLD_LINES < 2
         FLD_LNSPC = 1
         CRT @(LNSPC_X_L,LNSPC_Y_L):FLD_LNSPC LNSPC_FMT:
         GOTO 199
      CASE DFLT_LNSPC # ""
         FLD_LNSPC = DFLT_LNSPC
         CRT @(LNSPC_X_L,LNSPC_Y_L):FLD_LNSPC LNSPC_FMT:
         GOTO 199
      END CASE
      GOSUB 1100
      X = LNSPC_X_L; Y = LNSPC_Y_L
      JUSTIFY = FIELD(LNSPC_FMT,"#",1); MAXL = FIELD(LNSPC_FMT,"#",2)
      O.R = "O"
      IF FLD_LNSPC = "" THEN
         DEFAULT = 1
      END ELSE
         DEFAULT = FLD_LNSPC
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_LNSPC = VALUE
      END
199*
      RETURN
*
*---- Justify
200*
      X = JSTFY_X_L; Y = JSTFY_Y_L
      TYP = 1; JUSTIFY = "L"
      VALDAT = "L"; VALDAT<1,2> = "R"
      O.R = "O"; DEFAULT = FLD_JSTFY
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_JSTFY = VALUE
         FLD_FMT = FLD_JSTFY:"#":FLD_LEN
         CRT @(FMT_X_L,FMT_Y_L):FLD_FMT FMT_FMT:
         GOSUB 205
      END
      RETURN
*
*---- Length
205*
      X = LEN_X_L; Y = LEN_Y_L
      TYP = 3; MAXL = 3; JUSTIFY = "L"
      MINV = 1; MAXV = 132
      O.R = "O"; DEFAULT = FLD_LEN
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_LEN = VALUE
         FLD_FMT = FLD_JSTFY:"#":FLD_LEN
         CRT @(FMT_X_L,FMT_Y_L):FLD_FMT FMT_FMT:
      END
      RETURN
*
*---- Hide field
210*
      FLD_NAME = "SSD_FLD_HIDE"
      GOSUB 1000
      IF ERRMSG # "" THEN
         GOSUB 91000; GOTO 219
      END
      GOSUB 1100
      X = HIDE_X_L; Y = HIDE_Y_L
      JUSTIFY = FIELD(HIDE_FMT,"#",1); MAXL = FIELD(HIDE_FMT,"#",2)
      O.R = "O"
      IF FLD_HIDE # "" THEN
         DEFAULT = FLD_HIDE
      END
      CALL EDIT.SUB
      IF VALUE # "END" THEN
         FLD_HIDE = VALUE
      END
219*
      RETURN
*
*---- Distribution list
220*
      FLD_NAME = "SSD_FLD_DSTLST"
      GOSUB 1000
      BEGIN CASE
      CASE ERRMSG # ""
         GOSUB 91000; GOTO 229
      END CASE
      GOSUB 1100
      X = DSTLST_X_L; Y = DSTLST_Y_L
      JUSTIFY = FIELD(DSTLST_FMT,"#",1); MAXL = FIELD(DSTLST_FMT,"#",2)
      O.R = "O"
      IF FLD_DSTLST # "" THEN
         DEFAULT = FLD_DSTLST
      END
      CALL EDIT.SUB
      BEGIN CASE
      CASE VALUE = "END"
         GOTO 229
      CASE VALUE = ""
         FLD_DSTLST = VALUE
         GOTO 229
      END CASE
      LIMIT = DCOUNT(VALUE,",")
      FOR L = 1 TO LIMIT
         USRID = FIELD(VALUE,",",L)
         IF USRID[1,2] = "L!" THEN
            READ REC FROM USER.MAIL, USRID ELSE
               ERRMSG = "Cannot locate user list # ":USRID[3,99]
               LIMIT = 0; GOSUB 91000
            END
         END ELSE
            MATREAD SEC.REC FROM SECURITY, CONO:USRID ELSE
               LOCATE USRID IN SSD_FIELDS<1>,1 SETTING FND ELSE
                  ERRMSG = "Cannot locate user # ":USRID
                  LIMIT = 0; GOSUB 91000
               END
            END
         END
      NEXT L
      IF LIMIT THEN
         FLD_DSTLST = VALUE
      END ELSE
         GOTO 220
      END
229*
      RETURN
*
*---- Get field Definition
1000*
      ERRMSG = ""
      MATREAD DFD.REC FROM SYS_FIELDS, FLD_NAME ELSE
         ERRMSG = "Cannot locate field (":FLD_NAME:") Definition"
         GOTO 1099
      END
1099*
      RETURN
*
*---- Setup EDIT.SUB
1100*
      LOCATE DFD_TYPE IN TYPE_INI,1 SETTING TLOC ELSE TLOC = 1
      TYP = OTYP_INI<TLOC>; SCALER = DFD_DEC
      MAXL = DFD_LEN; MINL = DFD_MINL
      MAXV = DFD_MAXV; MINV = DFD_MINV
      JUSTIFY = DFD_JUSTIFY; FILL.CHR = DFD_FILL
      O.R = DFD_O_R; DEFAULT = DFD_DEFAULT
      PATRN = DFD_PATRN
      INVALCHR = FIELD(DFD_INVALCHR,",",1)
      CNT = DCOUNT(DFD_INVALCHR,",")
      FOR I = 2 TO CNT
         INVALCHR<1,I> = FIELD(DFD_INVALCHR,",",I)
      NEXT I
      ORVATDAT = DFD_ORVALDAT; VALDAT = DFD_VALDAT
      READ HMSG_REC FROM SYS_FLD_HMSG, FLD_NAME ELSE
         HMSG_REC = ""
      END
      HMSG = HMSG_REC<1>
      CNT = DCOUNT(HMSG_REC,AM)
      FOR I = 2 TO CNT
         HMSG<1,I> = HMSG_REC<I>
      NEXT I
      RETURN
*
*---- Display Data
4000*
      LOCATE DFD_TYPE IN DTYP_INI,1 SETTING TLOC THEN
         FLD_DSC = DTYP_DSC<TLOC>
      END ELSE
         FLD_DSC = DFD_TYPE
      END
      CRT @(TABLE_X_L,TABLE_Y_L):"Data Entry" TABLE_FMT:
      CRT @(PFX_X_L,PFX_Y_L):DFD_TABLE TABLE_FMT:
      CRT @(Y_X_L,Y_Y_L):FLD_Y Y_FMT:
      CRT @(ATTNO_X_L,ATTNO_Y_L):DFD_ATTNO ATTNO_FMT:
      CRT @(MVNO_X_L,MVNO_Y_L):FLD_MVNO MVNO_FMT:
      CRT @(SMVNO_X_L,SMVNO_Y_L):FLD_SMVNO SMVNO_FMT:
      CRT @(LCHR_X_L,LCHR_Y_L):FLD_LCHR LCHR_FMT:
      CRT @(X_X_L,X_Y_L):FLD_X X_FMT:
      CRT @(SEQ_X_L,SEQ_Y_L):FLD_SEQ SEQ_FMT:
      CRT @(REF_X_L,REF_Y_L):FLD_REF REF_FMT:
      CRT @(TYPE_X_L,TYPE_Y_L):FLD_DSC TYPE_FMT:
      CRT @(CNV_X_L,CNV_Y_L):FLD_CNV CNV_FMT:
      CRT @(FMT_X_L,FMT_Y_L):FLD_FMT FMT_FMT:
      CRT @(LINES_X_L,LINES_Y_L):FLD_LINES LINES_FMT:
      CRT @(LNSPC_X_L,LNSPC_Y_L):FLD_LNSPC LNSPC_FMT:
      CRT @(JSTFY_X_L,JSTFY_Y_L):FLD_JSTFY JSTFY_FMT:
      CRT @(LEN_X_L,LEN_Y_L):FLD_LEN LEN_FMT:
      CRT @(HIDE_X_L,HIDE_Y_L):FLD_HIDE HIDE_FMT:
      CRT @(DSTLST_X_L,DSTLST_Y_L):FLD_DSTLST DSTLST_FMT:
      RETURN
4500*
      IF FLD_TABLE = "" THEN
         CRT @(TABLE_X_L,TABLE_Y_L):DFD_TABLE TABLE_FMT:
      END ELSE
         CRT @(TABLE_X_L,TABLE_Y_L):FLD_TABLE TABLE_FMT:
      END
      IF FLD_PFX = "" THEN
         CRT @(PFX_X_L,PFX_Y_L):FLD_PFX PFX_FMT:
      END ELSE
         MATREAD PFR.REC FROM PFX_FILES, FLD_PFX ELSE
            PFR_FILE = FLD_PFX
         END
         CRT @(PFX_X_L,PFX_Y_L):PFR_FILE PFX_FMT:
      END
      CRT @(Y_X_L,Y_Y_L):FLD_Y Y_FMT:
      CRT @(ATTNO_X_L,ATTNO_Y_L):FLD_ATTNO ATTNO_FMT:
      CRT @(MVNO_X_L,MVNO_Y_L):FLD_MVNO MVNO_FMT:
      CRT @(SMVNO_X_L,SMVNO_Y_L):FLD_SMVNO SMVNO_FMT:
      CRT @(LCHR_X_L,LCHR_Y_L):FLD_LCHR LCHR_FMT:
      CRT @(X_X_L,X_Y_L):FLD_X X_FMT:
      RETURN
4510*
      CRT @(SEQ_X_L,SEQ_Y_L):FLD_SEQ SEQ_FMT:
      CRT @(REF_X_L,REF_Y_L):FLD_REF REF_FMT:
4520*
      LOCATE DFD_TYPE IN DTYP_INI,1 SETTING TLOC THEN
         FLD_DSC = DTYP_DSC<TLOC>
      END ELSE
         FLD_DSC = DFD_TYPE
      END
      CRT @(TYPE_X_L,TYPE_Y_L):FLD_DSC TYPE_FMT:
      CRT @(CNV_X_L,CNV_Y_L):FLD_CNV CNV_FMT:
      CRT @(FMT_X_L,FMT_Y_L):FLD_FMT FMT_FMT:
      CRT @(LINES_X_L,LINES_Y_L):FLD_LINES LINES_FMT:
      CRT @(LNSPC_X_L,LNSPC_Y_L):FLD_LNSPC LNSPC_FMT:
      CRT @(JSTFY_X_L,JSTFY_Y_L):FLD_JSTFY JSTFY_FMT:
      CRT @(LEN_X_L,LEN_Y_L):FLD_LEN LEN_FMT:
      CRT @(HIDE_X_L,HIDE_Y_L):FLD_HIDE HIDE_FMT:
      CRT @(DSTLST_X_L,DSTLST_Y_L):FLD_DSTLST DSTLST_FMT:
      RETURN
*
*---- Error routines
91000*
      CRT @(0,23):ERRMSG:CL:
      INPUT REPLY,1_:
      CRT @(0,23):CL:
      RETURN
93000*
      CRT @(0,23):ERRMSG:CL:
      INPUT REPLY,1_:
99999*
      RETURN
END
