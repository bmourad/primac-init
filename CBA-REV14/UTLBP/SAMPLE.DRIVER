*********************************************************************
*
* Copyright 1982 by Vercom Software Inc.
*
* REVISION - [NN.N]
*
* PROGRAM  - SAMPLE.DRIVER
*
* AUTHOR   - YOUR NAME HERE, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - MM/DD/YY
*
* DESCRIPTION
*
* This program is used to demonstrate the code necessary to invoke
* a SCREEN.INPUT subroutine.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SAMPLE
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- PRE-INITIALIZATION
*
      PROCREAD PARAM ELSE PARAM = ""
      ACTION = PARAM<1>
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","SAMPLE.FILE" TO SAMPLE ELSE
         ERRMSG = "CANNOT OPEN SAMPLE FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","UTL.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN UTL.SCREENS FILE"
         GOSUB 90000
         STOP
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      SCREEN INIT;#
      S$SCR = 1
      SCREEN DEFINE;SAMPLE.DRIVER
      SCREEN FORMAT
      SCREEN COUNT;;12
      LINE.COUNT = S$LCNT
      SAMPLE.ID = ""
      MSG = ""
      MSG<1,1> = "This driver program demonstrates the coding"
      MSG<1,2> = "required to invoke a SCREEN.INPUT subroutine"
      MSG<1,3> = "and redisplaying the data upon return from"
      MSG<1,4> = "the subroutine."
      GOTO 110
*
*---- MAIN PROCESSING
*
100 *
      SCREEN CLEAR
110 *
      GOSUB 80000
      LINE.CNT = DCOUNT(MSG,VM)
      GOSUB 81000
      REF.NO = 1
      CURR.REF.NO = ""
      GOSUB 50000
      GOSUB 1010
      IF S$VALUE = "END" THEN GOTO 99999
      NEW.REC = 0
      READV TREC FROM SAMPLE, CONO:S$VALUE,1 ELSE NEW.REC = 1
      SAMPLE.ID = S$VALUE
*
*---- GET OPERATOR REPLY
*
500 *
      SCREEN FIELD;;21
      SCREEN INPUT;;21
      OPT = S$VALUE
510 *
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 100
      CASE OPT = "M"
         S$SCR = S$SCR + 1
         CALL SAMPLE.SUB("M", CONO, SAMPLE.ID, SAMPLE, STATUS)
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 80050
         CURR.REF.NO = ""
         GOSUB 50000
         IF NEW.REC THEN
            NEW.REC = 0
            READV TREC FROM SAMPLE, CONO:S$VALUE,1 ELSE NEW.REC = 1
         END
      CASE OPT = "I" AND NEW.REC
         ERRMSG = "Item not on file. Try again! "
         GOSUB 90000
      CASE OPT = "I"
         S$SCR = S$SCR + 1
         CALL SAMPLE.INQ("I", CONO, SAMPLE.ID, SAMPLE, STATUS)
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 80050
         CURR.REF.NO = ""
         GOSUB 50000
      END CASE
      GOTO 500
*
*---- GET SAMPLE ITEM ID
*
1010 *
      SCREEN FIELD;;2
      SCREEN INPUT;;2;RETURN
      SAMPLE.ID = S$VALUE
      RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
      START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
      SCREEN MULTI;;C;12
      RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
      S$DATA(1)<S$SCR> = DATE()
      S$DATA(2)<S$SCR> = SAMPLE.ID
80050 *
      SCREEN DISPLAY;;ALL
      RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
      S$DATA(12)<S$SCR> = MSG
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      PRINT @(0,23):@(-4):ERRMSG:
      INPUT REPLY:
      PRINT @(0,23):@(-4):
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      PRINT @(-1)
   END
