*COPY>CPYLIB>COMMON1
*********************************************************************
*
* REVISION    - [08.0]
*
* PROGRAM - SYSTEM.XFER
*
* BY      - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 07/12/84
*
* DESCRIPTION
*
* This program will move specified items from the account and file
* specified to a customer transfer file for subsequent loading and
* distribution on the customer's system.
*
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- DEFINE VARIABLES
*
      DIM QREC1(10)
*
*---- OPEN ALL FILES
*
      OPEN "","MD" TO MD ELSE
         ERRMSG = "CANNOT OPEN MASTER DICTIONARY"
         GOSUB 90000
         STOP
      END
      OPEN "","CBABP" TO CBABP ELSE
         ERRMSG = "CANNOT OPEN CBABP FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","CPYLIB" TO CPYLIB ELSE
         ERRMSG = "CANNOT OPEN CPYLIB FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","UTL.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN UTL.SCREENS FILE"
         GOSUB 90000
         STOP
      END
*
*---- INITIALIZATION
*
      MAT QREC1 = ""
      QREC1(1) = "Q"
      QREC1(9) = "L"
      QREC1(10)= 10
*      PORT.ACCT = OCONV("","U50BB")
*      PORT = FIELD(PORT.ACCT," ",1)
*      ACCT = FIELD(PORT.ACCT," ",2)
      PORT = SYSTEM(18)
      ACCT = SYSTEM(19)
      PORT.ACCT = PORT:" ":ACCT
      MAT EDIT.COM.DRIVER = ""
      ECD.SCRN.NAME = "SYSTEM.XFER"
      ECD.ACTION=1; CALL SCREEN.EDIT
      ECD.SCRN.NO = 1
      ECD.ACTION=2; CALL SCREEN.EDIT
      PREV.CUSTOMERS = ""
      CUSTOMERS = ""
*
*---- MAIN PROCESSING
*
100*
      ECD.NUM = 11
      ECD.RET.VALUES<1,11> = OCONV(DATE(),"D2/")
      ECD.ACTION=5; CALL SCREEN.EDIT
110*
      GOSUB 1000
      IF ECD.RET.VALUE = "END" THEN
         PRINT @(-1):
         STOP
      END
      N = 0
      LOOP
         N = N + 1
      UNTIL N > 6 DO
         ON N GOSUB 1100,1200,1300,1400,1500,1600
         IF ECD.RET.VALUE = "END" THEN
            IF N = 1 THEN
               GOTO 110
            END ELSE
               N = N - 2
            END
         END
      REPEAT
*
*---- GET OPERATOR REQUEST
*
500*
      GOSUB 1900
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = "E" OR ACTION = "END"
            ECD.RET.VALUES = ""
            ECD.ACTION=6; CALL SCREEN.EDIT
            GOTO 100
         CASE ACTION = "F"
            IF FROM.ACCT # "C" THEN
               GOSUB 5000
            END
            IF COMMENT # "" THEN
               FOR CX = 1 TO CUST.CNT
                  CUST = TRIM(FIELD(CUSTOMERS,",",CX))
                  OPEN "",CUST:"-TRANSFER" TO TRANSFER.FILE ELSE
                     ERRMSG = "FATAL - CANNOT OPEN ":CUST:"-TRANSFER":" FILE"
                     GOSUB 90000
                     STOP
                  END
                  DT = OCONV(DATE(),"D2-")
                  DT = DT[7,2]:"-":DT[1,5]
                  TM = OCONV(TIME(),"MTS")
                  TO.KEY = "****COMMENT****>>":DT:"....":TM
                  REC1 = COMMENT
                  WRITE REC1 ON TRANSFER.FILE, TO.KEY
               NEXT CX
               COMMENT = ""
            END
            ERRMSG = "** COMPLETED **  Press <RETURN> to continue "
            GOSUB 90000
            ECD.NUM = 5
            ECD.RET.VALUES<1,5> = ""
            ECD.ACTION=5; CALL SCREEN.EDIT
            ECD.NUM = 6
            ECD.RET.VALUES<1,6> = ""
            ECD.ACTION=5; CALL SCREEN.EDIT
            ECD.NUM = 7
            ECD.RET.VALUES<1,7> = ""
            ECD.ACTION=5; CALL SCREEN.EDIT
            ECD.NUM = 8
            ECD.RET.VALUES<1,8> = ""
            ECD.ACTION=5; CALL SCREEN.EDIT
            GOTO 100
         CASE ACTION = "1"
            GOSUB 1000
         CASE ACTION = "2"
            FOR N = 1 TO 6
               ON N GOSUB 1100,1200,1300,1400,1500,1600
            NEXT N
      END CASE
      GOTO 500
*
*---- GET CUSTOMER NAMES
*
1000*
      ECD.NUM = 10
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      CUSTOMERS = ECD.RET.VALUE
      CUST.CNT = COUNT(CUSTOMERS,",") + 1
      IF CUSTOMERS # PREV.CUSTOMERS THEN
         FOR CX = 1 TO CUST.CNT
            CUST = TRIM(FIELD(CUSTOMERS,",",CX))
            TRANSFER.FILE.NAME = CUST:"-TRANSFER"
            OPEN "",TRANSFER.FILE.NAME TO TRANSFER.FILE ELSE
               ERRMSG = "INVALID FILE NAME - ":TRANSFER.FILE.NAME
               GOSUB 90000
               ECD.RET.VALUES<1,10> = PREV.CUSTOMERS
               GOTO 1000
            END
         NEXT CX
         PREV.CUSTOMERS = CUSTOMERS
      END
      RETURN
*
*---- GET TRANSFER-FROM ACCOUNT NAME
*
1100*
      ECD.NUM = 1
      IF ECD.RET.VALUES<1,1> = "" THEN
         ECD.DEFAULT = ACCT
      END
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "C" THEN
         FROM.ACCT = "C"
         RETURN
      END
      IF ECD.RET.VALUE = "END" THEN RETURN
      QREC1(2) = ECD.RET.VALUE
      QREC1(3) = "MD"
      MATWRITE QREC1 ON MD, "QFILE1"
      OPEN "","QFILE1" TO QFILE1 ELSE
         ERRMSG = "INVALID ACCOUNT NAME"
         GOSUB 90000
         GOTO 1100
      END
      FROM.ACCT = ECD.RET.VALUE
      RETURN
*
*---- GET TRANSFER-FROM DICTIONARY FLAG
*
1200*
      IF FROM.ACCT = "C" THEN
         ECD.RET.VALUES<1,2> = ""
         ECD.NUM=2; ECD.ACTION=5; CALL SCREEN.EDIT
         RETURN
      END
      ECD.NUM = 2
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF ECD.RET.VALUE = "Y" THEN
         FROM.DICT = "DICT"
      END ELSE
         FROM.DICT = ""
      END
      TO.DICT = FROM.DICT
      RETURN
*
*---- GET TRANSFER-FROM FILE NAME
*
1300*
      IF FROM.ACCT = "C" THEN
         ECD.RET.VALUES<1,3> = ""
         ECD.NUM=3; ECD.ACTION=5; CALL SCREEN.EDIT
         RETURN
      END
      ECD.NUM = 3
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      FROM.ACCT = ECD.RET.VALUES<1,1>
      FROM.FILE = ECD.RET.VALUE
1310  QREC1(2) = FROM.ACCT
      QREC1(3) = "MD"
      MATWRITE QREC1 ON MD, "QFILE1"
      OPEN "","QFILE1" TO QFILE1 ELSE
         ERRMSG = "CANNOT OPEN MASTER DICTIONARY IN ":FROM.ACCT
         GOSUB 90000
         GOTO 1300
      END
      READ REC1 FROM QFILE1, FROM.FILE ELSE
         ERRMSG = "INVALID FILE NAME"
         GOSUB 90000
         GOTO 1300
      END
      IF REC1<1> = "Q" THEN
         FROM.ACCT = REC1<2>
         FROM.FILE = REC1<3>
         GOTO 1310
      END
      QREC1(2) = FROM.ACCT
      QREC1(3) = FROM.FILE
      MATWRITE QREC1 ON MD, "QFILE1"
      OPEN FROM.DICT,"QFILE1" TO QFILE1 ELSE
         ERRMSG = "INVALID FILE NAME"
         GOSUB 90000
         GOTO 1300
      END
      TO.FILE = FROM.FILE
      RETURN
*
*---- GET TRANSFER-FROM ITEM NAME
*
1400*
      IF FROM.ACCT = "C" THEN
         ECD.RET.VALUES<1,4> = ""
         ECD.NUM=4; ECD.ACTION=5; CALL SCREEN.EDIT
         RETURN
      END
      ECD.NUM = 4
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      BEGIN CASE
         CASE ECD.RET.VALUE = "*"
            NULL
         CASE FROM.FILE = "M.SCREENS"
            READ REC1 FROM QFILE1, ECD.RET.VALUE:"*FRM" ELSE
               ERRMSG = "INVALID SCREEN NAME"
               GOSUB 90000
               GOTO 1400
            END
         CASE 1
            READ REC1 FROM QFILE1, ECD.RET.VALUE ELSE
               ERRMSG = "INVALID ITEM NAME"
               GOSUB 90000
               GOTO 1400
            END
      END CASE
      FROM.ITEM = ECD.RET.VALUE
      TO.ITEM = FROM.ITEM
      RETURN
*
*---- GET OVERWRITE FLAG
*
1500*
      IF FROM.ACCT = "C" THEN
         ECD.RET.VALUES<1,12> = ""
         ECD.NUM=12; ECD.ACTION=5; CALL SCREEN.EDIT
         RETURN
      END
      ECD.NUM = 12
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      OVERWRITE = ECD.RET.VALUE
      RETURN
*
*---- GET COMMENTS
*
1600*
      ECD.NUM = 17
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      COMMENT = ECD.RET.VALUE
      RETURN
*
*---- GET OPERATOR REQUEST
*
1900*
      ECD.RET.VALUES<1,9> = ""
      ECD.NUM = 9
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      RETURN
*
*---- FILE TRANSFER REQUEST
*
5000*
      BEGIN CASE
         CASE FROM.ITEM = "*"
            SELECT QFILE1
5010        READNEXT ID ELSE GOTO 5099
            IF TO.DICT = "DICT" AND ID = "DL/ID" THEN GOTO 5010
            IF TO.DICT = "DICT" AND ID[1,1] = "0" AND NUM(ID[1,3]) THEN GOTO 5010
            READ REC1 FROM QFILE1, ID ELSE GOTO 5010
            IF TO.DICT = "DICT" AND REC1<1> # "A" AND REC1<1> # "S" THEN GOTO 5010
            FOR CX = 1 TO CUST.CNT
               CUST = TRIM(FIELD(CUSTOMERS,",",CX))
               GOSUB 10000
               TO.KEY = PREFIX:ID:">":OVERWRITE
               IF TO.FILE = "MD" THEN GOSUB 6000
               GOSUB 11000
            NEXT CX
            GOTO 5010
         CASE FROM.FILE = "M.SCREENS"
            SELECT QFILE1
5020        READNEXT ID ELSE GOTO 5099
            IF FIELD(ID,"*",1) # FROM.ITEM THEN GOTO 5020
            READ REC1 FROM QFILE1, ID ELSE GOTO 5020
            FOR CX = 1 TO CUST.CNT
               CUST = TRIM(FIELD(CUSTOMERS,",",CX))
               GOSUB 10000
               TO.KEY = PREFIX:ID:">":OVERWRITE
               GOSUB 11000
            NEXT CX
            GOTO 5020
         CASE 1
            IF TO.FILE = "MD" THEN
               FOR CX = 1 TO CUST.CNT
                  CUST = TRIM(FIELD(CUSTOMERS,",",CX))
                  GOSUB 10000
                  TO.KEY = PREFIX:TO.ITEM:">":OVERWRITE
                  GOSUB 6000
                  GOSUB 11000
               NEXT CX
            END ELSE
               FOR CX = 1 TO CUST.CNT
                  CUST = TRIM(FIELD(CUSTOMERS,",",CX))
                  GOSUB 10000
                  TO.KEY = PREFIX:TO.ITEM:">":OVERWRITE
                  GOSUB 11000
               NEXT CX
               READ REC1 FROM QFILE1, "$":FROM.ITEM ELSE GOTO 5090
               FOR CX = 1 TO CUST.CNT
                  CUST = TRIM(FIELD(CUSTOMERS,",",CX))
                  GOSUB 10000
                  TO.KEY = PREFIX:"$":TO.ITEM:">":OVERWRITE
                  GOSUB 11000
               NEXT CX
5090*
*              GOSUB 7000
            END
      END CASE
5099*
      RETURN
*
*---- MODIFY PROGRAM AND Q-POINTERS
*
6000*
      BEGIN CASE
         CASE REC1<1> = "P" AND REC1<2> = "10B4"
            IF CUST = "PRIMAC" THEN
               REC1<5> = "CBA"
            END ELSE
               REC1<5> = "CBA":"-":CUST
            END
         CASE REC1<1> = "Q" AND REC1<2> = "CBA"
            IF CUST = "PRIMAC" THEN
               REC1<2> = "CBA"
            END ELSE
               REC1<2> = "CBA":"-":CUST
            END
         CASE REC1<1> = "Q" AND REC1<2> = "PRIMAC"
            REC1<2> = CUST
            IF CUST = "DEMO" THEN REC1<2> = "PRIMAC-DEMO"
         CASE REC1<1> = "Q" AND FIELD(REC1<2>,"-",1) = "PRIMAC"
            REC1<2> = CUST:"-":FIELD(REC1<2>,"-",2)
         CASE REC1<1> = "Q" AND FIELD(REC1<2>,"-",2) # ""
            REC1<2> = CUST:"-":FIELD(REC1<2>,"-",2)
      END CASE
      RETURN
*
*---- TRANSFER ASSOCIATED SUBROUTINES, CPYLIB ITEMS AND SCREENS
*
7000*
      ECD.NUM = 13
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "N" THEN RETURN
      PNAMES = TO.ITEM
      CNAMES = ""
      SNAMES = ""
      PNAME = TO.ITEM
      PPTR = 1
7005*
      READ REC1 FROM QFILE1, PNAME ELSE GOTO 7010
      PFX.PROG.CALLED = ""; PFX.CPYLIB = ""; PFX.SCREEN = ""
      CALL SCAN.XFER.PROG (REC1, PFX.PROG.CALLED, PFX.CPYLIB, PFX.SCREEN)
      CNT = COUNT(PFX.PROG.CALLED,AM) + (PFX.PROG.CALLED # "")
      FOR P = 1 TO CNT
         PRG = PFX.PROG.CALLED<P>
         LOCATE PRG IN PNAMES,1 SETTING FND ELSE
            PNAMES<-1> = PRG
         END
      NEXT P
      CNT = COUNT(PFX.CPYLIB,AM) + (PFX.CPYLIB # "")
      FOR P = 1 TO CNT
         CPY = PFX.CPYLIB<P>
         LOCATE CPY IN CNAMES,1 SETTING FND ELSE
            CNAMES<-1> = CPY
         END
      NEXT P
      CNT = COUNT(PFX.SCREEN,AM) + (PFX.SCREEN # "")
      FOR P = 1 TO CNT
         SCR = PFX.SCREEN<P>
         LOCATE SCR IN SNAMES,1 SETTING FND ELSE
            SNAMES<-1> = SCR
         END
      NEXT P
7010*
      IF PPTR = 1 THEN
         ECD.NUM = 14
         ECD.ACTION=4; CALL SCREEN.EDIT
         IF ECD.RET.VALUE = "N" THEN GOTO 7020
      END
7011*
      PPTR = PPTR + 1
      PNAME = PNAMES<PPTR>
      IF PNAME = "" THEN GOTO 7020
      READ REC1 FROM QFILE1, PNAME ELSE
         READ REC1 FROM CBABP, PNAME ELSE
            ERRMSG = "Subroutine not found - ":PNAME:", Press <RETURN> "
            GOSUB 90000
            GOTO 7011
         END
         FOR CX = 1 TO CUST.CNT
            CUST = TRIM(FIELD(CUSTOMERS,",",CX))
            GOSUB 10000
            TO.KEY = TO.ACCT:">>CBABP>":PNAME:">":OVERWRITE
            GOSUB 11000
         NEXT CX
         READ REC1 FROM CBABP, "$":PNAME ELSE
            ERRMSG = "Subroutine not found - ":"$":PNAME:", Press <RETURN> "
            GOSUB 90000
            GOTO 7005
         END
         FOR CX = 1 TO CUST.CNT
            CUST = TRIM(FIELD(CUSTOMERS,",",CX))
            GOSUB 10000
            TO.KEY = TO.ACCT:">>CBABP>":"$":PNAME:">":OVERWRITE
            GOSUB 11000
         NEXT CX
         GOTO 7005
      END
      FOR CX = 1 TO CUST.CNT
         CUST = TRIM(FIELD(CUSTOMERS,",",CX))
         GOSUB 10000
         TO.KEY = PREFIX:PNAME:">":OVERWRITE
         GOSUB 11000
      NEXT CX
      READ REC1 FROM QFILE1, "$":PNAME ELSE
         ERRMSG = "Subroutine not found - ":"$":PNAME:", Press <RETURN> "
         GOSUB 90000
         GOTO 7005
      END
      FOR CX = 1 TO CUST.CNT
         CUST = TRIM(FIELD(CUSTOMERS,",",CX))
         GOSUB 10000
         TO.KEY = PREFIX:"$":PNAME:">":OVERWRITE
         GOSUB 11000
      NEXT CX
      GOTO 7005
*---- TRANSFER ASSOCIATED CPYLIB ITEMS
7020*
      ECD.NUM = 15
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "N" THEN GOTO 7050
      IF CNAMES # "" THEN
         CNT = COUNT(CNAMES,AM) + (CNAMES # "")
         FOR P = 1 TO CNT
            CPY = CNAMES<P>
            READ REC1 FROM CPYLIB, CPY ELSE GOTO 7040
            FOR CX = 1 TO CUST.CNT
               CUST = TRIM(FIELD(CUSTOMERS,",",CX))
               GOSUB 10000
               TO.KEY = TO.ACCT:">>CPYLIB>":CPY:">":OVERWRITE
               GOSUB 11000
            NEXT CX
7040     NEXT N
      END
*---- TRANSFER ASSOCIATED SCREENS
7050*
      ECD.NUM = 16
      ECD.ACTION=4; CALL SCREEN.EDIT
      IF ECD.RET.VALUE = "N" THEN GOTO 7090
      IF SNAMES # "" THEN
         SELECT M.SCREENS
7060     READNEXT SCR ELSE GOTO 7090
         SCREEN.NAME = FIELD(SCR,"*",1)
         LOCATE SCREEN.NAME IN SNAMES,1 SETTING FND ELSE GOTO 7060
         READ REC1 FROM M.SCREENS, SCR ELSE GOTO 7060
         FOR CX = 1 TO CUST.CNT
            CUST = TRIM(FIELD(CUSTOMERS,",",CX))
            GOSUB 10000
            TO.KEY = TO.ACCT:">>M.SCREENS>":SCR:">":OVERWRITE
            GOSUB 11000
         NEXT CX
         GOTO 7060
      END
7090*
      RETURN
*
*---- SET-UP FOR NEW CUSTOMER
*
10000*
      BEGIN CASE
         CASE FIELD(FROM.ACCT,"-",1) = "CBA"
            TO.ACCT = "CBA-":CUST
         CASE FIELD(FROM.ACCT,"-",2) = "FILES"
            TO.ACCT = "CBA-":CUST
         CASE INDEX(FROM.ACCT,"-",1) = 0
            TO.ACCT = CUST
         CASE 1
            TO.ACCT = CUST:"-":FIELD(FROM.ACCT,"-",2)
      END CASE
      IF TO.ACCT = "CBA-PRIMAC" THEN TO.ACCT = "CBA"
      PREFIX = TO.ACCT:">":TO.DICT:">":TO.FILE:">"
      OPEN "",CUST:"-TRANSFER" TO TRANSFER.FILE ELSE
         ERRMSG = "FATAL - CANNOT OPEN ":CUST:"-TRANSFER":" FILE"
         GOSUB 90000
         STOP
      END
      RETURN
*
*---- WRITE TRANSFER FILE
*
11000*
      ECD.RET.VALUES<1,5> = FIELD(TO.KEY,">",1)
      ECD.NUM=5; ECD.ACTION = 5; CALL SCREEN.EDIT
      IF FIELD(TO.KEY,">",2) = "" THEN
         ECD.RET.VALUES<1,6> = "N"
      END ELSE
         ECD.RET.VALUES<1,6> = "Y"
      END
      ECD.NUM=6; ECD.ACTION = 5; CALL SCREEN.EDIT
      ECD.RET.VALUES<1,7> = FIELD(TO.KEY,">",3)
      ECD.NUM=7; ECD.ACTION = 5; CALL SCREEN.EDIT
      ECD.RET.VALUES<1,8> = FIELD(TO.KEY,">",4)
      ECD.NUM=8; ECD.ACTION = 5; CALL SCREEN.EDIT
      WRITE REC1 ON TRANSFER.FILE, TO.KEY
      RETURN
*
*---- ERROR ROUTINE
*
90000*
      PRINT @(0,23):CL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,23):CL:
      RETURN
   END
