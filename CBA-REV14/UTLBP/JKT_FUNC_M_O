*COPY>CPYLIB>COM1
*********************************
* Revision    -[10.0]
* Copyright   - 1982 by Computer Business Associates (Vercom Software, Inc)
* Program     - SYS_FUNC_M
* System      - UTLBP
* BY          - BILAL MOURAD
* DATE        - 1/15/95
* DESCRIPTION
**********************************
* Enddoc
*
*---- Data Structure Libraries
*
*COPY>UTL.CPYLIB>SYS_TKT_DEF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- Open files
*
      OPEN "","UTL.SCREENS" TO M.SCREENS ELSE
         ERRMSG = 'UTL.SCREENS FILE MISSING'
         GOSUB 91000
         GOTO 99999
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CONTROL FILE MISSING"
         GOSUB 91000
         GOTO 99999
      END
      OPEN "","PREFIX" TO PREFIX ELSE
         ERRMSG = "PREFIX FILE MISSING"
         GOSUB 91000
         GOTO 99999
      END
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
         ERRMSG = "XREF.DATA FILE MISSING"
         GOSUB 91000
         GOTO 99999
      END
      OPEN "","SYS_TKT_DEF" TO SYS_TKT_F ELSE
         ERRMSG = "SYS_TKT_DEF FILE MISSING"
         GOSUB 91000
         GOTO 99999
      END
*
*---- Initialization
*
      MAT EDIT.COM.DRIVER = ''
      PAGE.SIZE = 12
      BEGIN.PAGE = 8
      LINE.SPACE = 1
      LINES = 0
      LN = 1
*
*
      ECD.SCRN.CNT = 1
      ECD.SCRN.NAME = "JKT_FUNC_S"
      ECD.ACTION = 1; CALL SCRN.EDIT
*
*---- Paint the screen
*
      ECD.SCRN.NO = 1; ECD.ACTION = 2; CALL SCRN.EDIT
      MAT SCV.REC = ""
*
*---- Get Function Name
*
10*
      ECD.NUM = 1; ECD.ACTION = 4
      CALL SCRN.EDIT
      KEY = ECD.RET.VALUE
      BEGIN CASE
        CASE KEY = "END"
          GOTO 99999
        CASE KEY = "???" OR KEY = ""
          MAT GEN.XREF.REC = ""
          GXR.NAME = "GEN.CODE"
          GXR.SORT.FILE = "SYS_TKT_DEF"
          GXR.FILE = SYS_TKT_F
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
          ECD.ACTION = 2; CALL SCRN.EDIT
          IF GXR.ID = "" THEN GOTO 10
          KEY = GXR.ID
          SCV.REC(1)<ECD.SCRN.NO> = GXR.ID
          ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
      END CASE
*
*---- Validate Functions record
*
      MATREADU SYS_TKT_REC FROM SYS_TKT_F, KEY THEN
        LINES = DCOUNT(SYS_TKT_F<1>,VM)
        OLD.START.LINE = 0
        GOSUB 8100
        FUNC.NEW = 0
      END ELSE
        MAT SYS_TKT_REC = ""
        FUNC.NEW = 1
      END
*
*---- Prompt line
*
      MORE = 1
      LOOP
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
         IF FUNC.NEW = 1 THEN
           OPTION = "A"
         END ELSE
           ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
           OPTION = ECD.RET.VALUE
         END
         BEGIN CASE
         CASE OPTION = "F"
            MATWRITE VRM_REC ON VSI_ROOMS, KEY
            MORE = 0
         CASE OPTION = "E" OR OPTION = "END"
            RELEASE VSI_ROOMS,KEY
            MORE = 0
         CASE OPTION[1,1] = "S"
           GOSUB 8000; GOSUB 8100
           IF DONE THEN GOSUB 8200
         CASE OPTION = "A"
           MODE = "A"; OLD.START.LINE = 0; OPTION[2,1] = "B"; GOSUB 8000
           GOSUB 8100
           IF DONE THEN
15*
             GOSUB 100; LINE = CNT; GOSUB 8200; LN = LINES + 1
             IF LN > PAGE.SIZE THEN
               LINE = 1; CNT = 1; GOSUB 8200
             END
             FOR N = LINE TO 9999 UNTIL OVER
               GOSUB 100; LN = LN + 1
               IF NOT(OVER) THEN LINES = LINES + 1
               IF N >= PAGE.SIZE THRN GOTO 15
             NEXT N
             OLD.START.LINE = 0; OPTION[2,1] = "B"
             GOSUB 8000; GOSUB 8100
             IF DONE GOSUB 8200
           END
         CASE OPTION = "D" AND LINES > 0
20*
           ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
           GOSUB 6000; IF NOT(DN) THEN GOTO 20
           IF LNO # 0 THEN
             LN = LNO
             DEL SYS_SCN_DEF
             LINES = LINES - 1; OLD.START.LINE = 0
             OPTION[2,1] = "B"; GOSUB 8000; GOSUB 8100
             IF DONE GOSUB 8200
           END
         CASE OPTION = "C" AND LINES > 0 
           MODE = ""
25*
           ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
           GOSUB 6000; IF NOT(DN) THEN GOTO 25
           BEGIN CASE
             CASE LNO = "0"
               OVER = 1
             CASE LNO = "A"
               OLD.START.LINE = 0; LN = 1; GOSUB 8000; OVER = 0
               FOR LN = START.LINE TO LAST.LINE UNTIL OVER
                 GOSUB 100
               NEXT LN
               LN = 1; OLD.START.LINE = 0; GOSUB 8100
               IF DONE THEN GOSUB 8200
             CASE NUM(LNO)
               LN = LNO; OVER = 0; GOSUB 100
           END CASE
           IF OVER THEN
             OLD.START.LINE = 0; GOSUB 8100
             IF DONE THEN GOSUB 8200
           END
         CASE OPTION = "I" AND LINES > 0
           MODE = "A"
30*
           ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
           GOSUB 6000; IF NOT(DN) GOTO 30
           IF LNO > 0 THEN
             SYS_TKT_F = INSERT(SYS_TKT_F,1,LNO,0,"")
             OLD.START.LINE = 0; LINES = LINES + 1; GOSUB 8100
             IF DONE THEN GOSUB 8200
             LN = LNO; OVER = 0; GOSUB 100
             IF OVER THEN
               DEL SYS_TKT_F<1,LN>
               LINES = LINES - 1
             END
             OLD.START.LINE = 0; GOSUB 8100
             IF DONE GOSUB 8200
           END
         CASE 1
           ERRMSG = "** INVALID ENTRY !! Please re-ENTER **)
           GOSUB 91000
         END CASE
         FUNC.NEW = 0
      WHILE MORE DO REPEAT
      MAT SCV.REC = ''
      ECD.ACTION = 6; CALL SCRN.EDIT
      GOTO 10
*
*---- End of Loop
*
100*
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
      OVER = 0; I = 1; TEMP = ""
      PRINT @(1,SSLN): LN "R#2":
      ECD.NUM = 3
      IF MODE = "A" THEN SCV.REC(ECD.NUM)<ECD.SCRN.NO,LN> = ""
      ECD.SUB.NUM = LN; ECD.Y = SSLN; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         SYS_SCN_DEF = ECD.RET.VALUE
      END ELSE OVER = 1
      RETURN
*
*---- Check Line Number
*
6000*
      OLD.START.LINE = 0; GOSUB 8100
      BEGIN CASE
        CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
          LNO = 0; DN = 1
        CASE ECD.RET.VALUE = "A"
          LNO = "A"; DN = 1
        CASE NOT(NUM(ECD.RET.VALUE))
          ERRMSG = "** Invalid Entry !! **"
          GOSUB 91000; LNO = 0; DN = 0
        CASE ECD.RET.VALUE >= START.LINE AND ECD.RET.VALUE <= LAST.LINE
          LNO = ECD.RET.VALUE; DN = 1
        CASE 1
          ERRMSG = "** OUT OF RANGE **"
          GOSUB 91000; LNO = 0; DN = 0
      END CASE
      RETURN
*
*---- Find Page of Scroll
*
8000
      OPT2 = OPTION[2,1]
      BEGIN CASE
        CASE OPT2 = "" OR OPT2 = "F"
          LN = LN + PAGE.SIZE
          IF LN > LINES THEN LN = 1
        CASE OPT2 = "R"
          LN = LN - PAGE.SIZE
          IF LN < 1 THEN LN = 1
        CASE OPT2 = "T"
          LN = 1
        CASE OPT2 = "B"
          LN = LINES
          IF LN < 1 THEN LN = 1
      END CASE
      RETURN
*
*---- Scrolling Routine
*
8100*
      START.LINE = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE
      PAGES = 1 + INT((LINES - 1) / PAGE.SIZE)
      PAGE.NO = 1 + INT(START.LINE / PAGE.SIZE)
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN 
        DONE = 0; GOTO 8199
      END
      OLD.START.LINE = START.LINE
      DONE = 1; CNT = 1
      ECD.NUM = 7; SCV.REC(7)<1> = PAGE.NO; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 8; SCV.REC(8)<1> = PAGES; ECD.ACTION = 5; CALL SCRN.EDIT
      FOR N = START.LINE TO LAST.LINE
        SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
        PRINT @(1,SSLN): N "R#3":
        PRINT @(5,SSLN): SYS_SCN_DEF<1,N> "L#30":
        CNT = CNT + 1
      NEXT N
8199*
      RETURN
*
*---- Write Empty Lines
*
8200*
      FOR N = CNT TO PAGE.SIZE
        SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N - 1, PAGE.SIZE)
        PRINT @(0,SSLN): CL:
      NEXT N
      RETURN
*
*---- Print Error messages
*
91000*
      PRINT @(0,23): ERRMSG: CL:
      INPUT JK,1_:
      PRINT @(0,23): CL:
      RETURN
*
*
99999*
   END
