     SUBROUTINE FILES.MAINT.SUB(ACTION,COMMAND,ACCT,SPTR,MD)
* REVISION    - [08.0]
*COPY>CPYLIB>COMMON.INSTALL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
     CREATE.FILE = COMMAND<1,1>
     IF COMMAND<1,2> THEN
        CLEAR.DICT = COMMAND<2,1>
        CLEAR.DATA = COMMAND<2,2>
     END ELSE
        CLEAR.DICT = 0; CLEAR.DATA = 0
     END
     IF COMMAND<1,3> THEN
        COPY.DICT = COMMAND<2,1>
        COPY.DATA = COMMAND<2,2>
     END ELSE
        COPY.DICT = 0; COPY.DATA = 0
     END
     READ QFILE FROM MD, 'T.ACCT.MD' ELSE
        QFILE = ''
        QFILE<1> = 'Q'
        QFILE<9> = 'L'
        QFILE<10> = '10'
     END
     QFILE<2> = SYS.ACCTS(1,SPTR)
     QFILE<3> = 'DL/ID'
     WRITE QFILE ON MD, 'F.ACCT.MD'
     WRITE QFILE ON MD, 'F.ACCT.FILE'
     QFILE<2> = SYS.ACCTS(2,SPTR)
     WRITE QFILE ON MD, 'T.ACCT.MD'
     QFILE<2> = ''; QFILE<3> = ''
     OPEN '','F.ACCT.MD' TO F.ACCT.MD ELSE
        ERRMSG = 'CAN NOT OPEN F.ACCT.MD FOR ' : SYS.ACCTS(1,SPTR) : ' ACCOUNT'
        GOTO 93000
     END
     OPEN '','T.ACCT.MD' TO T.ACCT.MD ELSE
        ERRMSG = 'CAN NOT OPEN T.ACCT.MD FOR ' : SYS.ACCTS(2,SPTR) : ' ACCOUNT'
        GOTO 93000
     END
     WRITE QFILE ON T.ACCT.MD, 'T.ACCT.FILE'
     MAT EDIT.COM = ""
     TYP = 0
     CALL EDIT.SUB
     DATA = 1
     EFILE = ''; FILES = ''
     MOD.DICT = ''; MOD.DATA = ''
     LINES = 0
     OLD.LINES = 0
     SELECT F.ACCT.MD
     LOOP
        READNEXT ID ELSE DATA = 0
     WHILE DATA DO
        BEGIN CASE
        CASE ID = 'PROC'
        CASE ID = 'MD'
        CASE ID = 'M/DICT'
        CASE ID = 'DL/ID'
        CASE 1
           READ F.ITEM FROM F.ACCT.MD, ID ELSE F.ITEM = ''
           IF F.ITEM<1> = 'D' OR F.ITEM<1> = 'DX' OR F.ITEM<1> = 'DY' THEN
              IF SYS.ACCTS(1,SPTR) = SYS.ACCTS(2,SPTR) THEN
                 T.ITEM = F.ITEM
              END ELSE
                 READ T.ITEM FROM T.ACCT.MD, ID ELSE T.ITEM = ''
                 IF T.ITEM # '' AND T.ITEM<1> # 'D' AND T.ITEM<1> # 'DX' AND T.ITEM<1> # 'DY' THEN
                    F.ITEM = ''
                 END
              END
           END ELSE
              F.ITEM = ''
           END
           IF F.ITEM # '' THEN
              WRITEV ID ON MD, 'F.ACCT.FILE', 3
              OPEN 'DICT','F.ACCT.FILE' TO TEMP.FILE ELSE
                 ERRMSG = 'CAN NOT OPEN DICT ':ID:' FILE'
                 GOTO 93000
              END
              READ ITEM FROM TEMP.FILE, 'DL/ID' ELSE
                 ITEM<3> = 7
              END
              LINES = LINES + 1
              IF T.ITEM = '' THEN
                 EFILE<LINES> = 1
              END ELSE
                 EFILE<LINES> = 0
              END
              FILES<LINES> = ID
              MOD.DICT<LINES> = F.ITEM<3>
              MOD.DATA<LINES> = ITEM<3>
           END
        END CASE
     REPEAT
     IF LINES = 0 THEN GOTO 99999
     ECD.ACTION = 3; CALL SCREEN.EDIT
     LINE.SPACE = 1
     BEGIN.PAGE = 7
     PAGE.SIZE = 13
     LN = 1; OLD.START.LINE = 0; GOSUB 10000
     LOOP
        ECD.NUM = 5; ECD.RET.VALUES<2,ECD.NUM> = ''
        ECD.ACTION = 4; CALL SCREEN.EDIT
        REQUEST = ECD.RET.VALUE
        BEGIN CASE
        CASE REQUEST = 'E' OR REQUEST = 'END'
           REQUEST = 'E'
        CASE REQUEST = 'A'
           LINES = COUNT(FILES,AM) + (FILES # "")
           LOOP
              LN = LINES + 1
              OLD.LINES = LINES
              GOSUB 9000
           WHILE LINES > OLD.LINES DO REPEAT
           LN = LINES
           GOSUB 10000
        CASE REQUEST = 'C'
           GOSUB 10100
           IF LNO THEN
              LN = LNO
              SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
              GOSUB 9001
           END
           GOSUB 10000
        CASE REQUEST = 'D'
           ECD.NUM = 6; ECD.ACTION = 4; CALL SCREEN.EDIT
           IF NUM(ECD.RET.VALUE) THEN
              IF ECD.RET.VALUE >= 1 AND ECD.RET.VALUE <= LINES THEN
                 LN = ECD.RET.VALUE
                 EFILE = DELETE(EFILE,LN,0,0)
                 FILES = DELETE(FILES,LN,0,0)
                 MOD.DICT = DELETE(MOD.DICT,LN,0,0)
                 MOD.DATA = DELETE(MOD.DATA,LN,0,0)
                 LINES = LINES - 1
                 OLD.START.LINE = 0; GOSUB 10000
              END
           END
        CASE REQUEST = 'S'
           LN = LN + PAGE.SIZE
           IF LN > LINES THEN LN = 1
           GOSUB 10000
        END CASE
     WHILE REQUEST # 'E' DO REPEAT
     READ PROC FROM MD, 'INSTALL.MAINT.PROC' ELSE
        PROC = 'PQN'
     END
     PTR = COUNT(PROC,AM) + 1
     DATA = 1
     PTR = PTR + 1; PROC<PTR> = 'HLOGTO ' : SYS.ACCTS(2,SPTR)
     PTR = PTR + 1; PROC<PTR> = 'P'
     WRITE PROC ON MD, 'INSTALL.MAINT.PROC'
     READ ITEM FROM T.ACCT.MD, SYS.ACCTS(2,SPTR) ELSE ITEM = ''
     WRITE ITEM ON T.ACCT.MD, 'X' : SYS.ACCTS(2,SPTR)
     ITEM = ''
     PTR = 1
     PTR = 1; ITEM<PTR> = 'PQN'
     IF COPY.DATA OR COPY.DICT THEN
        PTR = PTR + 1; ITEM<PTR> = 'F-C 1'
        PTR = PTR + 1; ITEM<PTR> = 'F-OPEN 1 DL/ID'
        PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT OPEN DL/ID'
     END
     FOR LN = 1 TO LINES
        IF EFILE<LN> THEN
           PTR = PTR + 1; ITEM<PTR> = 'HCREATE-FILE (':FILES<LN>:' ':MOD.DICT<LN>:',1 ':MOD.DATA<LN>:',1)'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        END
        IF CLEAR.DICT THEN
           PTR = PTR + 1; ITEM<PTR> = 'HCLEAR-FILE (DICT ' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        END
        IF CLEAR.DATA THEN
           PTR = PTR + 1; ITEM<PTR> = 'HCLEAR-FILE (DATA ' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        END
        BEGIN CASE
        CASE COPY.DICT AND COPY.DATA
           PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.2 "' : SYS.ACCTS(1,SPTR) : '"'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.3 "' : FILES<LN> : '"'
           PTR = PTR + 1; ITEM<PTR> = 'F-WRITE 1'
           PTR = PTR + 1; ITEM<PTR> = 'HCOPY DICT T.ACCT.FILE * (O)'
           PTR = PTR + 1; ITEM<PTR> = 'STON'
           PTR = PTR + 1; ITEM<PTR> = 'H(DICT ' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
           PTR = PTR + 1; ITEM<PTR> = 'HCOPY T.ACCT.FILE * (O)'
           PTR = PTR + 1; ITEM<PTR> = 'STON'
           PTR = PTR + 1; ITEM<PTR> = 'H(' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        CASE COPY.DICT
           PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.2 "' : SYS.ACCTS(1,SPTR) : '"'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.3 "' : FILES<LN> : '"'
           PTR = PTR + 1; ITEM<PTR> = 'F-WRITE 1'
           PTR = PTR + 1; ITEM<PTR> = 'HCOPY DICT T.ACCT.FILE * (O)'
           PTR = PTR + 1; ITEM<PTR> = 'STON'
           PTR = PTR + 1; ITEM<PTR> = 'H(DICT ' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        CASE COPY.DATA
           PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID T.ACCT.FILE'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.2 "' : SYS.ACCTS(1,SPTR) : '"'
           PTR = PTR + 1; ITEM<PTR> = 'MV &1.3 "' : FILES<LN> : '"'
           PTR = PTR + 1; ITEM<PTR> = 'F-WRITE 1'
           PTR = PTR + 1; ITEM<PTR> = 'HCOPY T.ACCT.FILE * (O)'
           PTR = PTR + 1; ITEM<PTR> = 'STON'
           PTR = PTR + 1; ITEM<PTR> = 'H(' : FILES<LN> : ')'
           PTR = PTR + 1; ITEM<PTR> = 'P'
        END CASE
     NEXT F
     PTR = PTR + 1; ITEM<PTR> = 'HCOPY DL/ID X' : SYS.ACCTS(2,SPTR) : ' (O)'
     PTR = PTR + 1; ITEM<PTR> = 'STON'
     PTR = PTR + 1; ITEM<PTR> = 'H(DL/ID) ' : SYS.ACCTS(2,SPTR)
     PTR = PTR + 1; ITEM<PTR> = 'P'
     PTR = PTR + 1; ITEM<PTR> = 'F-C 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-OPEN 1 DL/ID'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 X' : SYS.ACCTS(2,SPTR) 
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID X' : SYS.ACCTS(2,SPTR) 
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 T.ACCT.FILE'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID T.ACCT.FILE'
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'HLOGTO ' : ACCT
     PTR = PTR + 1; ITEM<PTR> = 'P'
     WRITE ITEM ON T.ACCT.MD, SYS.ACCTS(2,SPTR)
     READ ITEM FROM MD, ACCT ELSE ITEM = ''
     WRITE ITEM ON MD, 'X' : ACCT
     ITEM = ''
     PTR = 1
     PTR = 1; ITEM<PTR> = 'PQN'
     PTR = PTR + 1; ITEM<PTR> = 'HCOPY DL/ID X' : ACCT : ' (O)'
     PTR = PTR + 1; ITEM<PTR> = 'STON'
     PTR = PTR + 1; ITEM<PTR> = 'H(DL/ID) ' : ACCT
     PTR = PTR + 1; ITEM<PTR> = 'P'
     PTR = PTR + 1; ITEM<PTR> = 'F-C 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-OPEN 1 DL/ID'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 X':ACCT
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID X':ACCT
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 F.ACCT.MD'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID F.ACCT.MD'
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 T.ACCT.MD'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID T.ACCT.MD'
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'F-READ 1 INSTALL.MAINT.PROC'
     PTR = PTR + 1; ITEM<PTR> = 'XCAN NOT READ DL/ID INSTALL.MAINT.PROC'
     PTR = PTR + 1; ITEM<PTR> = 'F-DELETE 1'
     PTR = PTR + 1; ITEM<PTR> = 'MV %1 "RETURN"'
     PTR = PTR + 1; ITEM<PTR> = 'HEASY.MENU'
     PTR = PTR + 1; ITEM<PTR> = 'P'
     WRITE ITEM ON MD, ACCT
     GOTO 99999
9000*
     GOSUB 10000
     SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
     PRINT @(0,SLN):CL:
     PRINT @(0,SLN):LN "R#3":
9001*
     FILL = "#";X = 4;Y = SLN;TYP = 1;MAXL = 40;O.R = "O";MAXV = ""
     MINV = "";DEFAULT = FILES<LN>;HMSG = "ENTER FILE NAME"
     CALL EDIT.SUB
     BEGIN CASE
        CASE VALUE = ""
           IF REQUEST = "C" THEN GOTO 9001
           PRINT @(0,SLN):CL:
           GOTO 9005
        CASE VALUE = "END"
           IF MOD.DATA<LN> = "" THEN
              FILES = DELETE(FILES,LN,0,0)
              MOD.DICT = DELETE(MOD.DICT,LN,0,0)
              PRINT @(0,SLN):CL:
           END ELSE
              PRINT @(4,SLN):FILES<LN> "L#40":
              PRINT @(45,SLN):MOD.DICT<LN> "L#4":
              PRINT @(50,SLN):MOD.DATA<LN> "L#4":
           END
           GOTO 9005
        CASE VALUE # ""
           FILES<LN> = VALUE
     END CASE
9002*
     X = 45;Y = SLN;TYP = 1;MAXL = 4;O.R = "O";DEFAULT = MOD.DICT<LN>
     HMSG = "ENTER NUMBER OF DICTIONARY ITEMS"
     CALL EDIT.SUB
     IF VALUE = "END" THEN GOTO 9001
     IF VALUE = "" THEN GOTO 9002
     MOD.DICT<LN> = VALUE
9003*
     X = 50;Y = SLN;TYP = 1;MAXL = 4;O.R = "O";DEFAULT = MOD.DATA<LN>
     HMSG = "ENTER NUMBER OF DATA ITEMS"
     CALL EDIT.SUB
     IF VALUE = "END" THEN GOTO 9001
     IF VALUE = "" THEN GOTO 9003
     MOD.DATA<LN> = VALUE
9005*
     LINES = COUNT(FILES,AM) + (FILES # "")
     RETURN
10000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      IF START.LINE = OLD.START.LINE THEN GOTO 10099
      OLD.START.LINE = START.LINE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         PRINT @(0,SLN) : N "R#3" :
         PRINT @(4,SLN) : FILES<N> "L#40" :
         PRINT @(45,SLN): MOD.DICT<N> "L#4" :
         PRINT @(50,SLN): MOD.DATA<N> "L#4" :
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         PRINT @(0,SLN) : CL :
      NEXT M
10099 RETURN
10100*
      GOSUB 10000
      ECD.NUM = 6
      IF LAST.LINE < LINES THEN
         ECD.MAXV = LAST.LINE
      END ELSE
         ECD.MAXV = LINES
      END
      ECD.RET.VALUES<ECD.SCRN.NO,6,1> = ""
      ECD.ACTION = 4;CALL SCREEN.EDIT
      PRINT @(0,23):CL:
      LNO = ECD.RET.VALUE
      IF LNO = "" OR LNO = "END" THEN LNO = "0"
      RETURN
93000 PRINT @(0,23) : ERRMSG : CL :
      INPUT X :
      ACTION = 0
99999 RETURN
      END
