*************************************************************************
*
* REVISION    - [08.0]
*
* PROGRAM - PROG.FLOW.CHART
*
* BY      - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 08/05/83
*
* DESCRIPTION
*
*   This program produces flow charts for each program in the system.
*   NOTE: The PROG.FILE.XREF file must not be written by this program.
*
*ENDDOC
*************************************************************************
*
*COPY>CPYLIB>PROG.FILE.XREF
*COPY>CPYLIB>CHAR
*
*------------------------*
*---- Open all files ----*
*------------------------*
*
      OPEN "","PROG.FILE.XREF" TO PROG.FILE.XREF ELSE
         STOP "CANNOT OPEN PROG.FILE.XREF FILE"
      END
*
      OPEN "","CONTROL" TO CONTROL ELSE
         STOP "CANNOT OPEN CONTROL FILE"
      END
*
*-------------------------------*
*---- Dimensioned variables ----*
*-------------------------------*
*
      DIM PNAME.TABLE(1000)
      MAT PNAME.TABLE = ""
*
      DIM PRINT.LINE(66)
*
      DIM ROMAN.TABLE(20)
      MAT ROMAN.TABLE = ""
      ROMAN.TABLE(1) = "i"
      ROMAN.TABLE(2) = "ii"
      ROMAN.TABLE(3) = "iii"
      ROMAN.TABLE(4) = "iv"
      ROMAN.TABLE(5) = "v"
      ROMAN.TABLE(6) = "vi"
      ROMAN.TABLE(7) = "vii"
      ROMAN.TABLE(8) = "viii"
      ROMAN.TABLE(9) = "ix"
      ROMAN.TABLE(10) = "x"
      ROMAN.TABLE(11) = "xi"
      ROMAN.TABLE(12) = "xii"
      ROMAN.TABLE(13) = "xiii"
      ROMAN.TABLE(14) = "xiv"
      ROMAN.TABLE(15) = "xv"
      ROMAN.TABLE(16) = "xvi"
      ROMAN.TABLE(17) = "xvii"
      ROMAN.TABLE(18) = "xviii"
      ROMAN.TABLE(19) = "xix"
      ROMAN.TABLE(20) = "xx"
*
*------------------------*
*---- Initialization ----*
*------------------------*
*
      TOP.MARGIN = 3
      BOT.MARGIN = 3
      HDR.LINE = TOP.MARGIN + 1
      FIRST.LINE = 1 + TOP.MARGIN + 3
      LAST.LINE = 66 - BOT.MARGIN - 3
      TLR.LINE = 66 - BOT.MARGIN
      TODAY = DATE()
      OTODAY = OCONV(TODAY,"D2-")
      SPACE.132 = SPACE(132)
      TEST.SAMPLE = 0
      TEST.COUNT = 0
*
*---------------------*
*---- Get Program ----*
*---------------------*
*
      PROMPT ""
      PRINT @(-1)
10*
      PRINT
      PRINT "Enter Program Name or 'ALL' - ":
      INPUT IN.PROG
      IF IN.PROG = "" THEN STOP
      IF IN.PROG # "ALL" THEN
         MATREAD PNAME.TABLE FROM CONTROL, "PROGRAM.TABLE.OF.CONTENTS" ELSE
            PRINT "Invalid request, Cannot locate table-of-contents"
            GOTO 10
         END
         PROG.NO = 0
         NO.OF.PROGRAMS = 0
         FOR N = 1 TO 1000 UNTIL NO.OF.PROGRAMS > 0
            IF PNAME.TABLE(N)<1,1> = IN.PROG THEN
               PROG.NO = N
            END
            IF PNAME.TABLE(N) = "" THEN
               NO.OF.PROGRAMS = N - 1
            END
         NEXT N
         IF PROG.NO = 0 THEN
            PRINT "Cannot locate ":IN.PROG:" IN table-of-contents"
            GOTO 10
         END
         GOTO 100
      END
*
*----------------------------------*
*---- Create table of contents ----*
*----------------------------------*
*
*     EXECUTE "SSELECT PROG.FILE.XREF BY PFX.SUBR.FLAG BY @ID"
      PREV.SECTION = ""
      PAGE.NO = 0
      PROG.NO = 0
20*
      READNEXT PROG.NAME ELSE
         NO.OF.PROGRAMS = PROG.NO
         MATWRITE PNAME.TABLE ON CONTROL, "PROGRAM.TABLE.OF.CONTENTS"
         GOTO 50
      END
      FIRST.CHAR = PROG.NAME[1,1]
      IF FIRST.CHAR = "!" OR FIRST.CHAR = "*" OR FIRST.CHAR = "@" THEN
         GOTO 20
      END
      MATREAD PFX.REC FROM PROG.FILE.XREF, PROG.NAME ELSE
         GOTO 20
      END
      IF PFX.SUBR.FLAG = "" THEN
         THIS.SECTION = "A"
      END ELSE
         THIS.SECTION = "B"
      END
      IF THIS.SECTION # PREV.SECTION THEN
         PAGE.NO = 0
         PREV.SECTION = THIS.SECTION
      END
      PAGE.NO = PAGE.NO + 1
      PROG.NO = PROG.NO + 1
      PNAME.TABLE(PROG.NO) = PROG.NAME : VM : THIS.SECTION : VM : PAGE.NO
      GOTO 20
*
*-----------------------------------*
*---- Process table of contents ----*
*-----------------------------------*
*
50*
      PAGE.NO = 0
      MAT PRINT.LINE = SPACE.132
      LINE = HDR.LINE
      PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,49] : "Table of Contents" "L#20" : PRINT.LINE(LINE)[70,999]
      LINE = FIRST.LINE
      PREV.SECTION = "A"
      PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,34] : "A. MAIN PROGRAMS" "L#80" : PRINT.LINE(LINE)[115,999]
      LINE = LINE + 2
      FOR PROG.NO = 1 TO NO.OF.PROGRAMS
         THIS.SECTION = PNAME.TABLE(PROG.NO)<1,2>
         IF THIS.SECTION # PREV.SECTION THEN
            IF LINE + 5 > LAST.LINE THEN
               PAGE.NO = PAGE.NO + 1
               PRINT.LINE(TLR.LINE) = PRINT.LINE(TLR.LINE)[1,62] : ROMAN.TABLE(PAGE.NO) "L#9" : PRINT.LINE(TLR.LINE)[72,999]
               GOSUB 2000               ;* print page
               MAT PRINT.LINE = SPACE.132
               LINE = HDR.LINE
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,49] : "Table of Contents (cont'd)" "L#80" : PRINT.LINE(LINE)[130,999]
               LINE = FIRST.LINE
            END
            LINE = LINE + 1
            IF THIS.SECTION = "A" THEN
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,34] : "A. MAIN PROGRAMS" "L#80" : PRINT.LINE(LINE)[115,999]
            END ELSE
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,34] : "B. SUBROUTINES" "L#80" : PRINT.LINE(LINE)[115,999]
            END
            LINE = LINE + 2
            PREV.SECTION = THIS.SECTION
         END
         IF LINE > LAST.LINE THEN
            PAGE.NO = PAGE.NO + 1
            PRINT.LINE(TLR.LINE) = PRINT.LINE(TLR.LINE)[1,62] : ROMAN.TABLE(PAGE.NO) "L#9" : PRINT.LINE(TLR.LINE)[72,999]
            GOSUB 2000                  ;* print page
            MAT PRINT.LINE = SPACE.132
            LINE = HDR.LINE
            PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,49] : "Table of Contents (cont'd)" "L#80" : PRINT.LINE(LINE)[130,999]
            LINE = FIRST.LINE
            IF THIS.SECTION = "A" THEN
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,34] : "A. MAIN PROGRAMS (cont'd)" "L#80" : PRINT.LINE(LINE)[115,999]
            END ELSE
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,34] : "B. SUBROUTINES (cont'd)" "L#80" : PRINT.LINE(LINE)[115,999]
            END
            LINE = LINE + 2
         END
         PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,39] : PNAME.TABLE(PROG.NO)<1,1> "L#35" : PRINT.LINE(LINE)[75,999]
         PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,79] : PNAME.TABLE(PROG.NO)<1,3> "R#3" : PRINT.LINE(LINE)[83,999]
         LINE = LINE + 1
      NEXT PROG.NO
      PAGE.NO = PAGE.NO + 1
      PRINT.LINE(TLR.LINE) = PRINT.LINE(TLR.LINE)[1,62] : ROMAN.TABLE(PAGE.NO) "L#9" : PRINT.LINE(TLR.LINE)[72,999]
      GOSUB 2000                        ;* print page
      MAT PRINT.LINE = SPACE.132
*
*-------------------------*
*---- Main processing ----*
*-------------------------*
*
100*
      IF IN.PROG = "ALL" THEN
         FOR PROG.NO = 1 TO NO.OF.PROGRAMS
            PROG.NAME = PNAME.TABLE(PROG.NO)<1,1>
            MATREAD PFX.REC FROM PROG.FILE.XREF, PROG.NAME ELSE
               GOTO 199
            END
            IF TEST.SAMPLE THEN
               THIS.SECTION = PNAME.TABLE(PROG.NO)<1,2>
               BEGIN CASE
                  CASE THIS.SECTION = "A"
                     IF PFX.FILE.NAME = "" OR PFX.PROG.CALLED = "" THEN
                        GOTO 199
                     END
                     IF TEST.COUNT > TEST.SAMPLE THEN GOTO 199
                     GOSUB 1000
                     TEST.COUNT = TEST.COUNT + 1
                  CASE THIS.SECTION = "B"
                     IF PNAME.TABLE(PROG.NO)<1,4> = "" THEN GOTO 199
                     GOSUB 1000
               END CASE
            END ELSE
               GOSUB 1000
            END
199*
         NEXT PROG.NO
      END ELSE
         PROG.NAME = IN.PROG
         MATREAD PFX.REC FROM PROG.FILE.XREF, PROG.NAME ELSE
            PRINT "CANNOT LOCATE PROGRAM ":PROG.NAME
            GOTO 999
         END
         GOSUB 1000
      END
999*
      PRINTER CLOSE
      STOP
*
*--------------------------*
*---- Print flow chart ----*
*--------------------------*
*
1000*
      GOSUB 6000                        ;* calculate page format
      MAT PRINT.LINE = SPACE.132
*
*---- Process file names
*
      IF LINE.SPACE.L = 1 THEN
         LINES.REQUIRED.L = FILE.CNT
      END ELSE
         LINES.REQUIRED.L = FILE.CNT * LINE.SPACE.L - 1
      END
      FIRST.LINE.L = MID.LINE - INT(LINES.REQUIRED.L / 2)
      LAST.LINE.L = FIRST.LINE.L + LINES.REQUIRED.L - 1
      FILE.PTR = 0
      LINE.CNT = 0
      FOR LINE = FIRST.LINE.L TO LAST.LINE.L
         LINE.CNT = LINE.CNT + 1 
         IF LINE.SPACE.L = 1 OR MOD(LINE.CNT,2) THEN 
            FILE.PTR = FILE.PTR + 1
            PRINT.LINE(LINE) = PFX.FILE.NAME<1,FILE.PTR> "R#35" : PRINT.LINE(LINE)[36,999]
            BEGIN CASE
               CASE PFX.READ.FLAG<1,FILE.PTR> # "" AND (PFX.WRITE.FLAG<1,FILE.PTR> # "" OR PFX.DELETE.FLAG<1,FILE.PTR> # "")
                  PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : "<--->:" "R#6" : PRINT.LINE(LINE)[43,999]
               CASE PFX.READ.FLAG<1,FILE.PTR> # ""
                  PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : "---->:" "R#6" : PRINT.LINE(LINE)[43,999]
               CASE PFX.WRITE.FLAG<1,FILE.PTR> # "" AND PFX.DELETE.FLAG<1,FILE.PTR> # ""
                  PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : "<<---:" "R#6" : PRINT.LINE(LINE)[43,999]
               CASE PFX.WRITE.FLAG<1,FILE.PTR> # ""
                  PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : "<----:" "R#6" : PRINT.LINE(LINE)[43,999]
               CASE 1
                  PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : "-----:" "R#6" : PRINT.LINE(LINE)[43,999]
            END CASE
         END ELSE
            PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,36] : " :" "R#6" : PRINT.LINE(LINE)[43,999]
         END
      NEXT LINE
*
*---- Process called programs
*
      IF LINE.SPACE.R = 1 THEN
         LINES.REQUIRED.R = PROG.CNT
      END ELSE
         LINES.REQUIRED.R = PROG.CNT * LINE.SPACE.R - 1
      END
      FIRST.LINE.R = MID.LINE - INT(LINES.REQUIRED.R / 2)
      LAST.LINE.R = FIRST.LINE.R + LINES.REQUIRED.R - 1
      PROG.PTR = 0
      LINE.CNT = 0
      FOR LINE = FIRST.LINE.R TO LAST.LINE.R
         LINE.CNT = LINE.CNT + 1
         IF LINE.SPACE.R = 1 OR MOD(LINE.CNT,2) THEN
            PROG.PTR = PROG.PTR + 1
            CALL.NAME = PFX.PROG.CALLED<1,PROG.PTR>
            GOSUB 5000
            IF PNO THEN
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,94] : CALL.NAME : " (" : PNAME.TABLE(PNO)<1,3> : ")" "L#35" : PRINT.LINE(LINE)[130,999]
            END ELSE
               PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,94] : CALL.NAME "L#35" : PRINT.LINE(LINE)[130,999]
            END
            PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,87] : ":---->" "L#6" : PRINT.LINE(LINE)[94,999]
         END ELSE
            PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,87] : ": " "L#6" : PRINT.LINE(LINE)[94,999]
         END
      NEXT LINE
*
*---- Process Title section
*
      IF FILE.CNT > 0 THEN
         PRINT.LINE(MID.LINE) = PRINT.LINE(MID.LINE)[1,42] : STR("-",22) "L#22" : PRINT.LINE(MID.LINE)[65,999]
      END
      IF PROG.CNT > 0 THEN
         PRINT.LINE(MID.LINE) = PRINT.LINE(MID.LINE)[1,65] : STR("-",22) "L#22" : PRINT.LINE(MID.LINE)[88,999]
      END
      PL = LEN(PROG.NAME)
      PRINT.LINE(MID.LINE) = PRINT.LINE(MID.LINE)[1,65-INT(PL/2+1)-1] : " " : PROG.NAME : " " : PRINT.LINE(MID.LINE)[65-INT(PL/2+1)+PL+2,999]
*
*---- Process program narative
*
      MAX.DESC.LEN = 0
      FOR DESC.PTR = 1 TO DESC.CNT
         THIS.LEN = LEN(PFX.DESC<1,DESC.PTR>)
         IF THIS.LEN > MAX.DESC.LEN THEN
            MAX.DESC.LEN = THIS.LEN
         END
      NEXT DESC.PTR
      DCOL = INT(65-MAX.DESC.LEN/2+1)
      LINE = FIRST.LINE.D - 1
      FOR DESC.PTR = 1 TO DESC.CNT
         LINE = LINE + 1
         IF LINE > LAST.LINE THEN
            PRINT.LINE(HDR.LINE) = "Program : ":PROG.NAME "L#45" : PRINT.LINE(HDR.LINE)[46,999]
            PRINT.LINE(HDR.LINE) = PRINT.LINE(HDR.LINE)[1,50] : "Author : ":FIELD(PFX.WRITTEN.BY,",",1) "L#30" : PRINT.LINE(HDR.LINE)[81,999]
            PRINT.LINE(HDR.LINE) = PRINT.LINE(HDR.LINE)[1,100] : "Date Written : ":OCONV(PFX.DATE.WRITTEN,"D2-") "L#30" : PRINT.LINE(HDR.LINE)[131,999]
            PRINT.LINE(HDR.LINE) = PRINT.LINE(HDR.LINE)[1,62] : PNAME.TABLE(PROG.NO)<1,2> : " - " : PNAME.TABLE(PROG.NO)<1,3> "L#9" : PRINT.LINE(HDR.LINE)[72,999]
            GOSUB 2000
            MAT PRINT.LINE = SPACE.132
            LINE = FIRST.LINE
         END
         FMT = "L#" : MAX.DESC.LEN
         PRINT.LINE(LINE) = PRINT.LINE(LINE)[1,DCOL-1] : PFX.DESC<1,DESC.PTR> FMT : PRINT.LINE(LINE)[DCOL+MAX.DESC.LEN,999]
      NEXT LINE
*
      PRINT.LINE(HDR.LINE) = "Program : ":PROG.NAME "L#45" : PRINT.LINE(HDR.LINE)[46,999]
      PRINT.LINE(HDR.LINE) = PRINT.LINE(HDR.LINE)[1,50] : "Author : ":FIELD(PFX.WRITTEN.BY,",",1) "L#30" : PRINT.LINE(HDR.LINE)[81,999]
      PRINT.LINE(HDR.LINE) = PRINT.LINE(HDR.LINE)[1,90] : "Date Written : ":OCONV(PFX.DATE.WRITTEN,"D2-") "L#30" : PRINT.LINE(HDR.LINE)[121,999]
      PRINT.LINE(TLR.LINE) = OTODAY "L#8" : PRINT.LINE(TLR.LINE)[9,999]
      PRINT.LINE(TLR.LINE) = PRINT.LINE(TLR.LINE)[1,62] : PNAME.TABLE(PROG.NO)<1,2> : " - " : PNAME.TABLE(PROG.NO)<1,3> "L#9" : PRINT.LINE(TLR.LINE)[72,999]
      FMT = "L#" : LEN(PROG.NAME)
      PRINT.LINE(TLR.LINE) = PRINT.LINE(TLR.LINE)[1,131-LEN(PROG.NAME)-1] : PROG.NAME FMT : PRINT.LINE(TLR.LINE)[131-LEN(PROG.NAME)+LEN(PROG.NAME),999]
      GOSUB 2000                     ;* print page
      MAT PRINT.LINE = SPACE.132
*
      RETURN
*
*--------------------*
*---- Print page ----*
*--------------------*
*
2000*
      PRINTER ON
      PRINT CHAR(12)
      FOR N = 1 TO TLR.LINE
         PRINT PRINT.LINE(N)
      NEXT N
      PRINTER OFF
*
      RETURN
*
*----------------------------*
*---- Locate page number ----*
*----------------------------*
*
5000*
      PNO = 0
      FOR N = 1 TO NO.OF.PROGRAMS UNTIL PNO
         IF PNAME.TABLE(N)<1,1> = CALL.NAME THEN
            PNO = N
            PNAME.TABLE(PNO)<1,4> = "X"
         END
      NEXT N
*
      RETURN
*
*-------------------------------*
*---- Calculate page format ----*
*-------------------------------*
*
6000*
      FILE.CNT = COUNT(PFX.FILE.NAME,VM) + (PFX.FILE.NAME # "")
      FOR NN = FILE.CNT TO 1 STEP -1
         BEGIN CASE
            CASE PFX.READ.FLAG<1,NN> # ""
            CASE PFX.WRITE.FLAG<1,NN> # ""
            CASE PFX.DELETE.FLAG<1,NN> # ""
            CASE 1
               PFX.FILE.NAME = DELETE(PFX.FILE.NAME,1,NN,0)
               PFX.OPEN.FLAG = DELETE(PFX.OPEN.FLAG,1,NN,0)
               PFX.READ.FLAG = DELETE(PFX.READ.FLAG,1,NN,0)
               PFX.WRITE.FLAG = DELETE(PFX.WRITE.FLAG,1,NN,0)
               PFX.DELETE.FLAG = DELETE(PFX.DELETE.FLAG,1,NN,0)
         END CASE
      NEXT NN
      FILE.CNT = COUNT(PFX.FILE.NAME,VM) + (PFX.FILE.NAME # "")
      PROG.CNT = COUNT(PFX.PROG.CALLED,VM) + (PFX.PROG.CALLED # "")
      DESC.CNT = COUNT(PFX.DESC,VM) + (PFX.DESC # "")
      IF FILE.CNT = 0 THEN
         MAX.FLOW.LINES.L = 1
         MIN.FLOW.LINES.L = 1
      END ELSE
         MAX.FLOW.LINES.L = FILE.CNT * 2 - 1
         MIN.FLOW.LINES.L = FILE.CNT
      END
      IF PROG.CNT = 0 THEN
         MAX.FLOW.LINES.R = 1
         MIN.FLOW.LINES.R = 1
      END ELSE
         MAX.FLOW.LINES.R = PROG.CNT * 2 - 1
         MIN.FLOW.LINES.R = PROG.CNT
      END
      OTHER.LINES = TOP.MARGIN + 3 + 2 + DESC.CNT + 3 + BOT.MARGIN
      BEGIN CASE
         CASE (MAX.FLOW.LINES.L + OTHER.LINES) <= 66 AND (MAX.FLOW.LINES.R + OTHER.LINES) <= 66
            LINE.SPACE.L = 2
            LINE.SPACE.R = 2
            IF MAX.FLOW.LINES.L > MAX.FLOW.LINES.R THEN
               FLOW.LINES = MAX.FLOW.LINES.L
            END ELSE
               FLOW.LINES = MAX.FLOW.LINES.R
            END
            REMAIN.LINES = 66 - (FLOW.LINES + OTHER.LINES)
         CASE (MAX.FLOW.LINES.L + OTHER.LINES) <= 66 AND (MIN.FLOW.LINES.R + OTHER.LINES) <= 66
            LINE.SPACE.L = 2
            LINE.SPACE.R = 1
            IF MAX.FLOW.LINES.L > MIN.FLOW.LINES.R THEN
               FLOW.LINES = MAX.FLOW.LINES.L
            END ELSE
               FLOW.LINES = MIN.FLOW.LINES.R
            END
            REMAIN.LINES = 66 - (FLOW.LINES + OTHER.LINES)
         CASE (MIN.FLOW.LINES.L + OTHER.LINES) <= 66 AND (MAX.FLOW.LINES.R + OTHER.LINES) <= 66
            LINE.SPACE.L = 1
            LINE.SPACE.R = 2
            IF MIN.FLOW.LINES.L > MAX.FLOW.LINES.R THEN
               FLOW.LINES = MIN.FLOW.LINES.L
            END ELSE
               FLOW.LINES = MAX.FLOW.LINES.R
            END
            REMAIN.LINES = 66 - (FLOW.LINES + OTHER.LINES)
         CASE 1
            LINE.SPACE.L = 1
            LINE.SPACE.R = 1
            IF MIN.FLOW.LINES.L > MIN.FLOW.LINES.R THEN
               FLOW.LINES = MIN.FLOW.LINES.L
            END ELSE
               FLOW.LINES = MIN.FLOW.LINES.R
            END
            REMAIN.LINES = 0
      END CASE
         FIRST.LINE.D = TOP.MARGIN + 3 + INT(REMAIN.LINES / 2) + FLOW.LINES + 2
         MID.LINE = TOP.MARGIN + 3 + INT(REMAIN.LINES / 2) + INT(FLOW.LINES / 2)
*
      RETURN
*
   END
