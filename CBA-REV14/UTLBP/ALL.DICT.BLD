*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.DICT.VAL
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* PROGRAM       - ALL.DICT.BLD
* BY            - Vercom Software, Inc.
* DATE          - 09/07/90
* DESCRIPTION
*********************************************************************
*
**** INSERT FILE EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CORP.CONO
*COPY>CPYLIB>DICT.VALUES
*COPY>CPYLIB>DICT.HLD.FILE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
      MAT SFR = ''
      MAT POS = ''
      MAT SF1 = ''
      MAT SF2 = ''
      MAT SF3 = ''
*
**** SETUP FOR SYSTEM ERRMSGS
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
      OPEN '','COMPANY' TO COMPANY ELSE
         ERRMSG = 'COMPANY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CONTROL' TO CONTROL ELSE
         ERRMSG = 'CONTROL FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','UTL.SCREENS' TO M.SCREENS ELSE
         ERRMSG = 'M.SCREENS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','DICT.HLD.FLE' TO DICT.HLD.FLE ELSE
         ERRMSG = 'DICT.HLD.FLE FILE IS MISSING'
         GOTO 93000
      END
*
*--- CHECK COMPANY PARAMETER
*
      READ CCONO FROM CONTROL, "CORP.CONO" ELSE
         CCONO = '001'
      END
      MATREAD COMP.REC FROM COMPANY, CCONO ELSE
         ERRMSG = "COMPANY ":CCONO:" IS NOT ON FILE"; GOTO 99999
      END
      READV CURR.ACCT FROM CONTROL, 'MENUS.CONTROL', 1 ELSE
         READV CURR.ACCT FROM CONTROL, '001MENUS.CONTROL', 1 ELSE
            ERRMSG = 'CANNOT READ MENUS.CONTROL'; GOTO 99999
         END
      END
      MATREAD CCO.REC FROM CONTROL, "CORPORATE" ELSE
         FOR X = 1 TO CCO.MAX
            CCO.REC(X) = 'N'
         NEXT X
      END
      FOR X = 1 TO CCO.MAX
         IF CCO.REC(X) = 'Y' THEN
            CCO.REC(X) = CCONO
         END ELSE
            CCO.REC(X) = ''
         END
      NEXT X
      ACCT.LEN = LEN(CURR.ACCT)
*
      ITEM.NAME = ''
      CONO.LEN = 3
      ST.CONO = CONO.LEN + 1
      DIV.LEN = 2
      DEP.LEN = 2
      CTR.LEN = 3
      CCTR.LEN = CONO.LEN + DIV.LEN + DEP.LEN + CTR.LEN
      ST.CCTR = CONO.LEN + DIV.LEN + DEP.LEN + CTR.LEN + 1
      GL.LEN = 0
      STRUC.CNT = COUNT(CO.ACCT.STRUC,'-')
      SF.CNT = STRUC.CNT + 1
      FOR I = 1 TO SF.CNT
         SFR(I) = FIELD(CO.ACCT.STRUC,'-',I)
         IF NUM(SFR(I)) THEN
            IF SFR(I) > 0 THEN
               SFR(I) = SFR(I) + 0
               POS(I) = GL.LEN + 1
               GL.LEN = GL.LEN + SFR(I)
            END ELSE
               ERRMSG = 'SUFFIX # ':I:' IS < 1'; GOTO 99999
            END
         END ELSE
            ERRMSG = 'SUFFIX # ':I:' IS NOT NUMERIC'; GOTO 99999
         END
      NEXT I
      IF GL.LEN <> LEN(CO.ACCT.PIC) THEN
         ERRMSG = 'GL.LEN <> LEN(CO.ACCT.PIC)'; GOTO 99999
      END
      IF SF.CNT > 1 THEN
         SUFFIX.POS = POS(2)
         SUFFIX.LEN = GL.LEN - SFR(1)
      END ELSE
         SUFFIX.LEN = 0
         SUFFIX.POS = GL.LEN + 1
      END
      STRUC.LEN = STRUC.CNT + GL.LEN
      TOT.LEN = CCTR.LEN + GL.LEN
      EN.GL.LEN1 = ST.CONO + GL.LEN
      EN.GL.LEN2 = ST.CCTR + GL.LEN
*
**** MAIN PROCESSING
*
      MAT EDIT.COM.DRIVER = ''
      MAT EDIT.COM = ''
      TYP = 0 ; CALL EDIT.SUB
      ECD.SCRN.CNT = 18
      ECD.SCRN.NAME = "ALL.DICT.BUILD"
      ECD.SCRN.NAME<2> = "ALL.DICT.TYPE"
      ECD.SCRN.NAME<3> = "GLS.DICT.TYPE.SUB1"
      ECD.SCRN.NAME<4> = "GLS.DICT.TYPE.SUB2"
      ECD.SCRN.NAME<5> = "GLS.DICT.TYPE.SUB3"
      ECD.SCRN.NAME<6> = "GNR.DICT.TYPE.SUB1"
      ECD.SCRN.NAME<7> = "GNR.DICT.TYPE.SUB2"
      ECD.SCRN.NAME<8> = "INV.DICT.TYPE.SUB1"
      ECD.SCRN.NAME<9> = "ALL.DICT.NOHELP"
      ECD.SCRN.NAME<10> = "ALL.DICT.HELP50"
      ECD.SCRN.NAME<11> = "ALL.DICT.HELP51"
      ECD.SCRN.NAME<12> = "ALL.DICT.HELP52"
      ECD.SCRN.NAME<13> = "ALL.DICT.HELP53"
      ECD.SCRN.NAME<14> = "ALL.DICT.HELP54"
      ECD.SCRN.NAME<15> = "ALL.DICT.HELP60"
      ECD.SCRN.NAME<16> = "ALL.DICT.HELP55"
      ECD.SCRN.NAME<17> = "ALL.DICT.HELP56"
      ECD.SCRN.NAME<18> = "ALL.DICT.HELP57"
*
*--- DETAIL HELP SCREENS
      NOHELP.SCRN = 9
      DET.HELP.TYPE = 50
      DET.HELP.TYPE<2> = 51
      DET.HELP.TYPE<3> = 52
      DET.HELP.TYPE<4> = 53
      DET.HELP.TYPE<5> = 54
      DET.HELP.TYPE<6> = 60
      DET.HELP.TYPE<7> = 55
      DET.HELP.TYPE<8> = 56
      DET.HELP.TYPE<9> = 57
      DET.HELP.SCRN = 10
      DET.HELP.SCRN<2> = 11
      DET.HELP.SCRN<3> = 12
      DET.HELP.SCRN<4> = 13
      DET.HELP.SCRN<5> = 14
      DET.HELP.SCRN<6> = 15
      DET.HELP.SCRN<7> = 16
      DET.HELP.SCRN<8> = 17
      DET.HELP.SCRN<9> = 18
*
      ECD.ACTION=1;CALL SCRN.EDIT
      NO.TYPE = ""
      NO.FILE = ""
      NO.NAME = ""
      H.CONV = ''
      ALL.TYPE = "01"
      FOR LN = 2 TO 28
         ALL.TYPE<-1> = STR("0",2-LEN(LN)) : LN
      NEXT LN
      FOR LN = 32 TO 36
         ALL.TYPE<-1> = LN
      NEXT LN
      FOR LN = 50 TO 59
         ALL.TYPE<-1> = LN
      NEXT LN
      ALL.TYPE<-1> = 60
*
**** PRINT SCREEN
1 *
      ECD.SCRN.NO = 1
      MAT HOLD.REC = ""
      MAT DICT.REC = ""
      S.NAME = ""
      MAT SCV.REC = ''
      ECD.ACTION=6;CALL SCRN.EDIT
*
**** ENTER FILE NAME
*
5 *
      ECD.NUM = 1
      IF FILE.NAME # "" THEN ECD.DEFAULT = FILE.NAME
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 99999
      FILE.NAME = ECD.RET.VALUE
      OPEN 'DICT',FILE.NAME TO D.F.NAME ELSE
         ERRMSG = "DICT ":FILE.NAME:" IS MISSING"
         GOSUB 91000 ; GOTO 5
      END
*
**** ENTER ITEM NAME
*
7 *
      ECD.NUM = 2
      ECD.DEFAULT = ITEM.NAME
      ECD.ACTION = 4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 1
      ITEM.NAME = ECD.RET.VALUE
*--- GET TYPE
      NEW = 1
      MATREAD HOLD.REC FROM DICT.HLD.FLE, FILE.NAME:'!':ITEM.NAME THEN
         NEW = 0
         ECD.NUM = 17; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.TYPE
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOSUB 10000
      END ELSE
8 *
         ECD.DEFAULT = HOLD.TYPE
         ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 1
         IF ECD.RET.VALUE = "" THEN
            GOSUB 70000
            IF ECD.RET.VALUE = "N" OR ECD.RET.VALUE = "END" THEN GOTO 8
            ECD.RET.VALUE = STR('0',2-LEN(HELP.TYPE)):HELP.TYPE
            ECD.NUM = 17; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
            ECD.ACTION = 5; CALL SCRN.EDIT
         END
         LOCATE ECD.RET.VALUE IN ALL.TYPE,1 SETTING PTR ELSE
            ERRMSG = "INVALID TYPE"; GOSUB 91000; GOTO 8
         END
         HOLD.TYPE = ECD.RET.VALUE
         IF NEW AND HOLD.TYPE = 60 THEN
            HOLD.TFILE = "INVENTORY"
            HOLD.TFILE.ATTR = 22
            HOLD.CONV = "MD2,"
            SCV.REC(11)<ECD.SCRN.NO> = HOLD.TFILE
            SCV.REC(20)<ECD.SCRN.NO> = HOLD.TFILE.ATTR
            SCV.REC(51)<ECD.SCRN.NO> = HOLD.CONV
            ECD.ACTION = 3; CALL SCRN.EDIT
         END
         IF HOLD.TYPE > 50 THEN
            HOLD.A.AMC = 0
            ECD.NUM = 4; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.A.AMC
            ECD.ACTION = 5; CALL SCRN.EDIT
            FOR X = 1 TO 4 UNTIL ECD.RET.VALUE = "END"
               ON X GOSUB 300,600,700,400
            NEXT X
         END ELSE
            FOR X = 1 TO 5 UNTIL ECD.RET.VALUE = "END"
               ON X GOSUB 200,300,600,700,400
            NEXT X
         END 
         IF ECD.RET.VALUE = "END" THEN GOTO 1
      END
*
**** ENTER OPTIONS
*
10 *
         L.VALUE = LEN(HOLD.S.NAME)
         V.VALUE = HOLD.S.NAME
         GOSUB 40000
         HOLD.S.NAME = FV.VALUE
         L.VALUE = LEN(HOLD.CONV)
         V.VALUE = HOLD.CONV
         GOSUB 40000
         HOLD.CONV = FV.VALUE
	NEW.DICT.ID = ITEM.NAME
      CALL ALL.DICT.CR(FILE.NAME, HEAD, WIDTH, CONV, CORR, NEW.DICT.ID)
      HOLD.S.NAME = HEAD
      L.VALUE = LEN(HOLD.S.NAME)
      V.VALUE = HOLD.S.NAME
      GOSUB 30000
      HOLD.S.NAME = FV.VALUE
      SCV.REC(5)<ECD.SCRN.NO> = HOLD.S.NAME[1,59]
      SCV.REC(6)<ECD.SCRN.NO> = HOLD.S.NAME[60,59]
      SCV.REC(7)<ECD.SCRN.NO> = HOLD.S.NAME[120,59]
      HOLD.MAX.LEN = WIDTH
      SCV.REC(15)<ECD.SCRN.NO> = HOLD.MAX.LEN
      HOLD.CONV = FV.VALUE
      HOLD.CONV = CONV
      L.VALUE = LEN(HOLD.CONV)
      V.VALUE = HOLD.CONV
      GOSUB 30000
      HOLD.CONV = FV.VALUE
      SCV.REC(51)<ECD.SCRN.NO> = HOLD.CONV[1,61]
      SCV.REC(52)<ECD.SCRN.NO> = HOLD.CONV[62,61]
      L.VALUE = LEN(CORR)
      V.VALUE = CORR
      GOSUB 30000
      SCV.REC(53)<ECD.SCRN.NO> = FV.VALUE[1,61]
      SCV.REC(54)<ECD.SCRN.NO> = FV.VALUE[62,61]
      ECD.ACTION=3;CALL SCRN.EDIT
	IF ITEM.NAME # NEW.DICT.ID THEN
		PRINT @(0,23):"If updated, DICT will be written with an ID of ":NEW.DICT.ID:CL
	END
      ECD.NUM = 16
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = 'END' OR REQUEST = 'E'
         IF NEW THEN ERRMSG = "NEW RECORD WAS NOT FILED"; GOSUB 91000
         GOTO 1
      CASE REQUEST = 'T'
         GOTO 8
      CASE NUM(REQUEST)
         BEGIN CASE
         CASE REQUEST < 5
            ON REQUEST GOSUB 200,300,600,700
         CASE REQUEST = 6
            IF HOLD.TYPE # 2 AND HOLD.TYPE # 57 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 410
         CASE REQUEST = 7
            IF HOLD.TYPE # 3 AND HOLD.TYPE # 18 AND HOLD.TYPE # 28 AND HOLD.TYPE # 57 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 420
         CASE REQUEST = 11
            IF HOLD.TYPE # 33 AND HOLD.TYPE # 34 AND HOLD.TYPE < 50 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 430
         CASE REQUEST = 12
            IF HOLD.TYPE # 33 AND HOLD.TYPE # 50 AND HOLD.TYPE # 51 AND HOLD.TYPE # 52 AND HOLD.TYPE # 56 AND HOLD.TYPE # 55 AND HOLD.TYPE # 60 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 440
         CASE REQUEST = 5
            IF HOLD.TYPE # 1 AND HOLD.TYPE # 35 AND HOLD.TYPE < 50 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 450
         CASE REQUEST = 8
            IF HOLD.TYPE # 51 AND HOLD.TYPE # 52 AND HOLD.TYPE # 56 AND HOLD.TYPE # 55 AND HOLD.TYPE # 57 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1100
         CASE REQUEST = 9
            IF HOLD.TYPE # 55 AND HOLD.TYPE # 57 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1600
         CASE REQUEST = 10
            IF HOLD.TYPE < 50 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 800
         CASE REQUEST = 13
            IF HOLD.TYPE # 60 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1400
         CASE REQUEST = 14
            IF HOLD.TYPE # 60 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1500
         CASE REQUEST = 15
            IF HOLD.TYPE # 53 AND HOLD.TYPE # 54 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1200
         CASE REQUEST = 16
            IF HOLD.TYPE # 53 AND HOLD.TYPE # 54 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1300
         CASE REQUEST = 17
            IF HOLD.TYPE < 50 THEN
               ERRMSG = "Invalid Selection for Current Type"
               GOSUB 91000
               GOTO 10
            END
            GOSUB 1000
         END CASE
      CASE REQUEST = 'D'
         X=0;Y=21;O.R='R';TYP=8
         PMSG='YOU ARE ABOUT TO DELETE THIS ITEM OK (Y/N)'
         CALL EDIT.SUB
         PRINT @(0,21):CL:
         IF VALUE = "Y" THEN
            IF NEW = 0 THEN
               DELETE DICT.HLD.FLE, FILE.NAME:"!":NEW.DICT.ID
            END
            GOTO 1
         END
      CASE REQUEST = 'F' OR REQUEST = 'U'
         MATWRITE HOLD.REC ON DICT.HLD.FLE, FILE.NAME:"!":ITEM.NAME
         IF REQUEST = 'U' THEN
		MATWRITE DICT.REC ON D.F.NAME, NEW.DICT.ID
         END
         GOTO 1
      END CASE
      GOTO 10
*
**** ENTER A.AMC
*
200 *
      ECD.NUM = 4
      ECD.DEFAULT = HOLD.A.AMC
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # 'END' THEN
         HOLD.A.AMC = ECD.RET.VALUE
      END
      RETURN
*
**** ENTER FIRST HEADING LINE
*
300 *
      ECD.DEFAULT = HOLD.S.NAME[1,59]
      ECD.NUM = 5
      ECD.DEFAULT = ITEM.NAME
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 399
      IF ECD.RET.VALUE = '' THEN ECD.RET.VALUE = ' '
      S.NAME<1,1> = ECD.RET.VALUE
*
**** ENTER SECOND HEADING LINE
*
      ECD.NUM = 6
      ECD.DEFAULT = HOLD.S.NAME[60,59]
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 399
      S.NAME<1,2> = ECD.RET.VALUE
*
**** ENTER THIRD HEADING LINE
*
      ECD.NUM = 7
      ECD.DEFAULT = HOLD.S.NAME[120,59]
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 399
      S.NAME<1,3> = ECD.RET.VALUE
399 *
      HOLD.S.NAME = S.NAME<1,1>:S.NAME<1,2>:S.NAME<1,3>
      ECD.NUM=5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.S.NAME[1,59];ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=6;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.S.NAME[60,59];ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.S.NAME[120,59];ECD.ACTION=5;CALL SCRN.EDIT
      RETURN
400 *
      BEGIN CASE
      CASE HOLD.TYPE = 1 OR HOLD.TYPE = 35
         GOSUB 450
      CASE HOLD.TYPE = 2 
         GOSUB 410
      CASE HOLD.TYPE = 3 OR HOLD.TYPE = 18 OR HOLD.TYPE = 28
         GOSUB 420
      CASE HOLD.TYPE = 33
         GOSUB 430; GOSUB 440
      CASE HOLD.TYPE = 34
         GOSUB 430
      CASE HOLD.TYPE = 36
         GOSUB 410; GOSUB 420
      CASE HOLD.TYPE = 50
         GOSUB 800; GOSUB 430; GOSUB 440; GOSUB 1000
      CASE HOLD.TYPE = 51 OR HOLD.TYPE = 52 OR HOLD.TYPE = 56
         GOSUB 1100; GOSUB 800; GOSUB 430; GOSUB 440; GOSUB 1000
      CASE HOLD.TYPE = 53
         GOSUB 800; GOSUB 430; GOSUB 1200; GOSUB 1300; GOSUB 1000
      CASE HOLD.TYPE = 54
         GOSUB 1100; GOSUB 800; GOSUB 430; GOSUB 1200; GOSUB 1300; GOSUB 1000
      CASE HOLD.TYPE = 55
         GOSUB 1100; GOSUB 1600; GOSUB 800; GOSUB 430; GOSUB 440; GOSUB 1000
      CASE HOLD.TYPE = 57
         GOSUB 1100; GOSUB 1600; GOSUB 1000
      CASE HOLD.TYPE = 60
         GOSUB 1400; GOSUB 1500; GOSUB 1000
      END CASE
      RETURN
*
*---- STARTING POINT
410 *
      IF HOLD.TYPE = 57 THEN
         ECD.O.R = 'O'
      END ELSE
         ECD.O.R = 'R'
      END
      ECD.DEFAULT = HOLD.START.PT
      ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN 
         HOLD.START.PT = ECD.RET.VALUE
      END
      IF HOLD.TYPE = 57 THEN
         IF HOLD.START.PT = '' THEN
            HOLD.NO.LEN = ''
            ECD.NUM = 19; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.NO.LEN
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            IF HOLD.NO.LEN = '' THEN GOSUB 420
         END
      END
      RETURN
*
*---- LENGTH
420 *
      IF HOLD.TYPE = 57 THEN
         ECD.O.R = 'O'
      END ELSE
         ECD.O.R = 'R'
      END
      ECD.DEFAULT = HOLD.NO.LEN
      IF HOLD.TYPE = 28 THEN ECD.DEFAULT = "99"
      ECD.NUM = 19; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN 
         HOLD.NO.LEN = ECD.RET.VALUE
      END
      IF HOLD.TYPE = 57 THEN
         IF HOLD.NO.LEN = '' THEN
            HOLD.START.PT = ''
            ECD.NUM = 18; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.START.PT
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            IF HOLD.START.PT = '' THEN GOSUB 410
         END
      END
      RETURN
*
*---- ATTRIBUTE
430 *
      ECD.DEFAULT = HOLD.TFILE.ATTR
      ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN 
         HOLD.TFILE.ATTR = ECD.RET.VALUE
      END
      RETURN
*
*---- MULTI-VALUE
440 *
      ECD.DEFAULT = HOLD.TFILE.MV.NO
      ECD.NUM = 21; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN 
         HOLD.TFILE.MV.NO = ECD.RET.VALUE
      END
      RETURN
*
*---- MULTI-VALUE FLAG
450 *
      ECD.DEFAULT = HOLD.MS.FLAG
      ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.MS.FLAG = ECD.RET.VALUE
      END
      RETURN
*
**** ENTER JUSTIFY
*
600 *
      ECD.DEFAULT = HOLD.JUSTIFY
      ECD.NUM = 14
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.JUSTIFY = ECD.RET.VALUE
      END
      RETURN
*
**** ENTER MAXL LENGTH
*
700 *
      ECD.DEFAULT = HOLD.MAX.LEN
      ECD.NUM = 15
      SAVE.S.NAME = HOLD.S.NAME<1,1>:HOLD.S.NAME<1,2>:HOLD.S.NAME<1,3>
      SAVE.S.NAME = FIELD(SAVE.S.NAME,"}",1)
      ECD.DEFAULT = LEN(SAVE.S.NAME)
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # 'END' THEN
         HOLD.MAX.LEN = ECD.RET.VALUE
      END
      RETURN
*
*** ENTER TRANSFER FILE
*
800 *
      ECD.DEFAULT = HOLD.TFILE
      ECD.NUM = 11
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.TFILE = ECD.RET.VALUE
      END
      OPEN '',HOLD.TFILE TO TEST.FILE ELSE
         ERRMSG = "CANNOT OPEN ":HOLD.TFILE
         GOSUB 91000
      END
      RETURN
*
*** ENTER CONVERSION
*
1000 *
      ECD.DEFAULT = HOLD.CONV[1,61]
      ECD.NUM = 51
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = "END" THEN 
         H.CONV<1,1> = ''
         GOTO 1090
      END ELSE
         H.CONV<1,1> = ECD.RET.VALUE
      END
      ECD.NUM = 52
      ECD.DEFAULT = HOLD.CONV[62,61]
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = '' THEN
         H.CONV<1,2> = ''
      END ELSE
         H.CONV<1,2> = ECD.RET.VALUE
      END
1090 *
      IF H.CONV<1,1> = '' THEN
         HOLD.CONV = ''
      END ELSE
         HOLD.CONV = H.CONV<1,1>:H.CONV<1,2>
      END
      SCV.REC(51)<ECD.SCRN.NO> = HOLD.CONV[1,61]
      ECD.ACTION = 5; CALL SCRN.EDIT
      SCV.REC(52)<ECD.SCRN.NO> = HOLD.CONV[62,61]
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*--- ENTER KEY FIELD NUMBER
*
1100 *
      ECD.NUM = 10
      ECD.DEFAULT = HOLD.KEY.FIELD
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.KEY.FIELD = ECD.RET.VALUE
      END
      RETURN
*
*** ENTER TRANSFER FILE #2
*
1200 *
      ECD.NUM = 13
      ECD.DEFAULT = HOLD.TFILE2
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.TFILE2 = ECD.RET.VALUE
      END
      OPEN '',HOLD.TFILE2 TO TEST.FILE ELSE
         ERRMSG = "CANNOT OPEN ":HOLD.TFILE
         GOSUB 91000
      END
      RETURN
*
*** ENTER TRANSFER FILE ATTRIBUTE #2
*
1300 *
      ECD.DEFAULT = HOLD.TFILE2.ATTR
      ECD.NUM = 24
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.TFILE2.ATTR = ECD.RET.VALUE
      END
      RETURN
*
*** ENTER INV QTY ATTRIBUTE
*
1400 *
      ECD.DEFAULT = HOLD.INV.QTY
      ECD.NUM = 32
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.INV.QTY = ECD.RET.VALUE
      END
      RETURN
*
*** ENTER INV COST ATTRIBUTE
*
1500 *
      ECD.DEFAULT = HOLD.INV.QTY
      ECD.NUM = 33
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.INV.COST = ECD.RET.VALUE
      END
      RETURN
*
*** ENTER KEY FIELD SELECT M/V #
*
1600 *
      ECD.DEFAULT = HOLD.INV.QTY
      ECD.NUM = 9
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         HOLD.KEY.FLD.MV = ECD.RET.VALUE
      END
      RETURN
*
**** GET ALL VALUES FROM FILE
*
10000 *
      L.VALUE = LEN(HOLD.S.NAME)
      V.VALUE = HOLD.S.NAME
      GOSUB 30000
      HOLD.S.NAME = FV.VALUE
      SCV.REC(4)<ECD.SCRN.NO> = HOLD.A.AMC
      SCV.REC(5)<ECD.SCRN.NO> = HOLD.S.NAME[1,59]
      SCV.REC(6)<ECD.SCRN.NO> = HOLD.S.NAME[60,59]
      SCV.REC(7)<ECD.SCRN.NO> = HOLD.S.NAME[120,59]
      SCV.REC(14)<ECD.SCRN.NO> = HOLD.JUSTIFY
      SCV.REC(15)<ECD.SCRN.NO> = HOLD.MAX.LEN
      SCV.REC(17)<ECD.SCRN.NO> = HOLD.TYPE
      SCV.REC(18)<ECD.SCRN.NO> = HOLD.START.PT
      SCV.REC(19)<ECD.SCRN.NO> = HOLD.NO.LEN
      SCV.REC(20)<ECD.SCRN.NO> = HOLD.TFILE.ATTR
      SCV.REC(21)<ECD.SCRN.NO> = HOLD.TFILE.MV.NO
      SCV.REC(22)<ECD.SCRN.NO> = HOLD.MS.FLAG
      SCV.REC(10)<ECD.SCRN.NO> = HOLD.KEY.FIELD
      SCV.REC(11)<ECD.SCRN.NO> = HOLD.TFILE
      SCV.REC(13)<ECD.SCRN.NO> = HOLD.TFILE2
      SCV.REC(24)<ECD.SCRN.NO> = HOLD.TFILE2.ATTR
      SCV.REC(32)<ECD.SCRN.NO> = HOLD.INV.QTY
      SCV.REC(33)<ECD.SCRN.NO> = HOLD.INV.COST
      SCV.REC(9)<ECD.SCRN.NO> = HOLD.KEY.FLD.MV
      ECD.ACTION = 3;CALL SCRN.EDIT
      RETURN
*
**** CHANGE ALL VALUE MARK TO }
*
30000 *
      FV.VALUE = ''
      FOR LL = 1 TO L.VALUE
         IF V.VALUE[LL,1] = VM THEN
            FV.VALUE = FV.VALUE:"}"
         END ELSE
            FV.VALUE = FV.VALUE:V.VALUE[LL,1]
         END
      NEXT LL
      RETURN
*
**** CHANGE ALL } TO VALUE MARK
*
40000 *
      FV.VALUE = ''
      FOR LL = 1 TO L.VALUE
         IF V.VALUE[LL,1] = "}" THEN
            FV.VALUE = FV.VALUE:VM
         END ELSE
            FV.VALUE = FV.VALUE:V.VALUE[LL,1]
         END
      NEXT LL
      RETURN
*
*--- TYPE XREF
*
70000 *
      ECD.SCRN.NO = 2; ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 70090
      IF ECD.RET.VALUE = 1 THEN GOTO 70010
      IF ECD.RET.VALUE = 2 THEN GOTO 70020
      IF ECD.RET.VALUE = 3 THEN GOTO 70030
70010 * G/L TYPES
      ECD.SCRN.NO = 3; ECD.ACTION = 2; CALL SCRN.EDIT
      DET.HELP.SW = 0
70015 *
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "N" OR REQUEST = ''
         GOTO 70090
      CASE REQUEST = "F"
         BEGIN CASE
         CASE ECD.SCRN.NO = 3
            ECD.SCRN.NO = 4; ECD.ACTION = 2; CALL SCRN.EDIT
         CASE ECD.SCRN.NO = 4
            ECD.SCRN.NO = 5; ECD.ACTION = 2; CALL SCRN.EDIT
         CASE 1
            ERRMSG = "THIS IS THE LAST SCREEN"; GOSUB 91000
         END CASE
      CASE REQUEST = "B"
         BEGIN CASE
         CASE DET.HELP.SW
            DET.HELP.SW = 0
            ECD.SCRN.NO = PRIOR.HELP.SCRN
            ECD.ACTION = 2; CALL SCRN.EDIT
         CASE ECD.SCRN.NO = 3 
            GOTO 70000
         CASE ECD.SCRN.NO = 4
            ECD.SCRN.NO = 3; ECD.ACTION = 2; CALL SCRN.EDIT
         CASE ECD.SCRN.NO = 5
            ECD.SCRN.NO = 4; ECD.ACTION = 2; CALL SCRN.EDIT
         END CASE
      CASE 1
         GOSUB 71000
      END CASE
      GOTO 70015
70020 * GENERIC TYPES
      ECD.SCRN.NO = 6; ECD.ACTION = 2; CALL SCRN.EDIT
      DET.HELP.SW = 0
70025 *
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "N" OR REQUEST = ''
         GOTO 70090
      CASE REQUEST = "F"
         BEGIN CASE
         CASE ECD.SCRN.NO = 6
            ECD.SCRN.NO = 7; ECD.ACTION = 2; CALL SCRN.EDIT
         CASE 1
            ERRMSG = "THIS IS THE LAST SCREEN"; GOSUB 91000
         END CASE
      CASE REQUEST = "B"
         BEGIN CASE
         CASE DET.HELP.SW
            DET.HELP.SW = 0
            ECD.SCRN.NO = PRIOR.HELP.SCRN
            ECD.ACTION = 2; CALL SCRN.EDIT
         CASE ECD.SCRN.NO = 6 
            GOTO 70000
         CASE ECD.SCRN.NO = 7
            ECD.SCRN.NO = 6; ECD.ACTION = 2; CALL SCRN.EDIT
         END CASE
      CASE 1
         GOSUB 71000
      END CASE
      GOTO 70025
70030 * INVENTORY TYPES
      ECD.SCRN.NO = 8; ECD.ACTION = 2; CALL SCRN.EDIT
      DET.HELP.SW = 0
70035 *
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "N" OR REQUEST = ''
         GOTO 70090
      CASE REQUEST = "F"
         BEGIN CASE
         CASE 1
            ERRMSG = "THIS IS THE LAST SCREEN"; GOSUB 91000
         END CASE
      CASE REQUEST = "B"
         BEGIN CASE
         CASE DET.HELP.SW
            DET.HELP.SW = 0
            ECD.SCRN.NO = PRIOR.HELP.SCRN
            ECD.ACTION = 2; CALL SCRN.EDIT
         CASE ECD.SCRN.NO = 8 
            GOTO 70000
         END CASE
      CASE 1
         GOSUB 71000
      END CASE
      GOTO 70035
70090 *
      ECD.SCRN.NO = 1; ECD.ACTION = 3; CALL SCRN.EDIT
      RETURN
71000 *SHOW DETAILED HELP
      HELP.TYPE = REQUEST
      DET.HELP.SW = 1
      PRIOR.HELP.SCRN = ECD.SCRN.NO
      LOCATE HELP.TYPE IN DET.HELP.TYPE,1 SETTING PTR THEN
         ECD.SCRN.NO = DET.HELP.SCRN<PTR>
      END ELSE
         ECD.SCRN.NO = NOHELP.SCRN
      END
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF ECD.SCRN.NO = NOHELP.SCRN THEN
         ECD.NUM = 2; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HELP.TYPE
         ECD.ACTION = 5; CALL SCRN.EDIT
      END
      RETURN
*
**** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
92000 ERR.TYPE = 2
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000 ERR.TYPE = 3
      CALL SYSCOM(MAT SYSCOM.REC)
99999 PRINT @(-1):
      END
