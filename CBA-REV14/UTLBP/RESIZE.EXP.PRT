*COPY CPYLIB>SCOMMON1
*********************************************************************
* PROGRAM  - RESIZE.EXP.PRT
* AUTHOR   - JIHAD YAMOUT, C.B.A
* DATE     - 02/13/89
* DESCRIPTION
* This program is used to enter the selection criteria and produce
*  the resize exciption report.
* This program can only be run on O/S release 2.3 or later or 5.3 or
*  later.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY CPYLIB>CHAR
*COPY CPYLIB>SCREEN.COM
*COPY UTL.CPYLIB>STAT-FILE
*
*---- GET PORT NUMBER
*
    PORT.ACCT = @TTY:' ':@WHO
*   PORT.NO = FIELD(PORT.ACCT," ",1)
    PORT.NO = 'TTY'
    CALL SYSVARS.SUB(PORT.NO)
    ACCT.NM = FIELD(PORT.ACCT," ",2)
*
*---- OPEN ALL FILES
*
    OPEN "","UTL.SCREENS" TO M.SCREENS ELSE
       ERRMSG = "CANNOT OPEN UTL.SCREENS FILE"
       GOSUB 90000
       GOTO 99999
    END
    OPEN "","MD" TO MD ELSE
       ERRMSG = "CANNOT OPEN MD FILE"
       GOSUB 90000
       GOTO 99999
    END
    SYSTEM.DELETE.FLG = ""
    OPEN "","SYSTEM" TO SYSTEM ELSE
       REC = ""
       REC<1> = "Q"
       REC<2> = "SYSTEM"
       WRITE REC ON MD , "SYSTEM"
       OPEN "","SYSTEM" TO SYSTEM ELSE STOP
       SYSTEM.DELETE.FLG = "Y"
    END
*
*---- INITIALIZATION
*
    SP1 = " " ; LINE.COUNT = 99 ; PAGE.NO = 0
    SYS.TOT.FRM = 0 ; ACCT.TOT.FRM = 0
    STAT.DELETE.FLG = ""
    OPTION = ""
    HD1 = "REPORT DATE : ":OCONV(DATE(),"D2/")
    HD1 = HD1:SPACE(28):"R E S I Z E   E X C E P T I O N   R E P O R T"
    HD1 = HD1:SPACE(29):"PAGE "
    HD3 = "ACCOUNT NAME :"
    HD4 = "                                                <------------ TOTAL ------------> <- CURRENT --> <-SUGGESTED -> < NEEDED >"
    HD5 = "       FILE-NAME                       LEVEL        SIZE       ITEMS     FRAMES    MODULO   SEP   MODULO   SEP    FRAMES"
    HD6 = "----------------------------------- ----------- ------------ --------- ---------- --------- ---- --------- ---- ----------"
    HD7 = "                                                                                                                ----------"
    HD8 = "                                                                                                                =========="
    SCREEN INIT;#
    S$SCR = 1
    SCREEN DEFINE;RESIZE.EXP.PRT
    SCREEN FORMAT
*
*---- MAIN PROCESSING
*
100*
    S$DATA(1)<S$SCR> = DATE()
    SCREEN DISPLAY;;1
    FOR FLD = 1 TO 5 UNTIL S$VALUE = "END"
       ON FLD GOSUB 1000,1100,1200,1300,1400
    NEXT FLD
    IF S$VALUE = "END" THEN GOTO 99999
*
*---- ENTER OPTION
*
200*
    MORE = 0
    LOOP
       SCREEN FIELD;;5
       SCREEN INPUT;;5
       OPTION = S$VALUE
       BEGIN CASE
       CASE NUM(OPTION) AND OPTION < 6
          ON OPTION GOSUB 1000,1100,1200,1300,1400
       CASE OPTION = "C"
          MORE = 1
          GOSUB 10000
          GOSUB 800
       CASE OPTION = "E" OR OPTION = "END"
          MORE = 1
       CASE 1
          PRINT @(0,23):"Invalid selection. Try again! ":CL:
          INPUT XX:
          PRINT @(0,23):CL:
       END CASE
    WHILE MORE = 0 DO REPEAT
    GOTO 99999
*
*---- DELETE ALL QFILE AND DICT ITEMS CREATED BY THIS PROGRAM
*
800*
    IF SYSTEM.DELETE.FLG = "Y" THEN
       DELETE MD,"SYSTEM"
    END
    DELETE D.STAT.FILE, "FILE.TYPE"
    DELETE D.STAT.FILE, "ACCOUNT.F.NAME"
    DELETE D.STAT.FILE, "FILE.A.NAME"
    IF STAT.DELETE.FLG = "Y" THEN
       DELETE MD, "$STAT-FILE*":PORT.NO
    END
    RETURN
*
*---- ENTER REPORT DOCUMEMTATION OPTION
*
1000*
    SCREEN FIELD;;6
    SCREEN INPUT;;6;RETURN
    DOC.FLAG = S$VALUE
    BEGIN CASE
       CASE DOC.FLAG = "DT"
          PRINT @(0,0):CS
          GOSUB 81000
          S$SCR = 1
          SCREEN FORMAT
          SCREEN DISPLAY;;ALL
          IF OPTION # 1 THEN
             ERRMSG = "Do you want to print the report (Y/N)" ; GOSUB 91000
             IF ANSW # "Y" THEN 
                S$VALUE = "END"
             END
          END
       CASE DOC.FLAG = "DP"
          PRINTER ON
          GOSUB 81000
          PRINTER OFF
          PRINTER CLOSE
          IF OPTION # 1 THEN
             ERRMSG = "Do you want to print the report (Y/N)" ; GOSUB 91000
             IF ANSW # "Y" THEN S$VALUE = "END"
          END
       CASE DOC.FLAG = "N"
    END CASE
    RETURN
*
*---- GET FULL FILE SAVE PORT NUMBER
*
1100*
    SCREEN FIELD;;2
    SCREEN INPUT;;2;RETURN
    STAT.DELETE.FLG = ""
    OPEN "","$STAT-FILE*":S$VALUE TO STAT.FILE ELSE
       REC = ""
       REC<1> = "Q"
       REC<2> = "SYSPROG"
       REC<3> = "$STAT-FILE*":S$VALUE
       WRITE REC ON MD, "$STAT-FILE*":PORT.NO
       OPEN "","$STAT-FILE*":PORT.NO TO STAT.FILE ELSE STOP
       STAT.DELETE.FLG = "Y"
    END
    OPEN "DICT","$STAT-FILE*":PORT.NO TO D.STAT.FILE ELSE STOP
    REC = ""
    REC<1> = "A" ; REC<2> = "1" ; REC<8> = "G2*1"
    REC<9> = "L" ; REC<10> = "35"
    WRITE REC ON D.STAT.FILE,"FILE.FLG"
    REC<8> = "G*1"
    WRITE REC ON D.STAT.FILE,"ACCOUNT.F.NAME"
    REC<8> = "G1*1"
    WRITE REC ON D.STAT.FILE,"FILE.A.NAME"
    PORT.NUMBER = S$VALUE
    RETURN
*
*---- GET ACCOUNT NAME OR ALL
*
1200*
    SCREEN FIELD;;3
    SCREEN INPUT;;3;RETURN
    BEGIN CASE
    CASE S$VALUE = "ALL"
    CASE 1
       READ DUMMAY FROM SYSTEM, S$VALUE ELSE
          ERRMSG = "Invalid system please try again"
          GOSUB 90000 ; GOTO 1200
       END
    END CASE
    ACCOUNT.NAME = S$VALUE
    RETURN
*
*---- GET TYPE OF FILE OR ALL
*
1300*
    SCREEN FIELD;;4
    SCREEN INPUT;;4;RETURN
    FILE.TYPE = S$VALUE
    RETURN
*
*---- GET FARME SIZE
*
1400*
    SCREEN FIELD;;7
    SCREEN INPUT;;7;RETURN
    SUB.NUMBER = INT(S$VALUE/512) * 12
    FRAME.SIZE = S$VALUE - SUB.NUMBER
    RETURN
*
*---- SELECT ALL ITEMS FROM THE STAT-FILE
*
10000*
    STMT = 'SSELECT $STAT-FILE*':PORT.NO:' BY ACCNAME. BY FILENAME. BY LEVEL.'
    BEGIN CASE
    CASE ACCOUNT.NAME = "ALL" AND FILE.TYPE = "DA"
       STMT = STMT:' WITH FILE.FLG # ""'
       HD2 = SPACE(54):"FOR ALL ACCOUNT FOR DATA ONLY"
    CASE ACCOUNT.NAME = "ALL" AND FILE.TYPE = "DI"
       STMT = STMT:' WITH FILE.FLG = ""'
       HD2 = SPACE(54):"FOR ALL ACCOUNT FOR DICTIONARY ONLY"
    CASE ACCOUNT.NAME # "ALL" AND FILE.TYPE = "ALL"
       STMT = STMT:' WITH ACCOUNT.F.NAME = "':ACCOUNT.NAME:'"'
       HD2 = SPACE(54):"FOR THE ":ACCOUNT.NAME:" ACCOUNT FOR ALL FILE LEVELS"
    CASE FILE.TYPE = "DA"
       STMT = STMT:' WITH ACCOUNT.F.NAME = "':ACCOUNT.NAME:'" AND WITH FILE.FLG # ""'
       HD2 = SPACE(54):"FOR THE ":ACCOUNT.NAME:" ACCOUNT FOR DATA ONLY"
    CASE FILE.TYPE = "DI"
       STMT = STMT:' WITH ACCOUNT.F.NAME = "':ACCOUNT.NAME:'" AND WITH FILE.FLG = ""'
       HD2 = SPACE(54):"FOR ":ACCOUNT.NAME:" ACCOUNT FOR DICTIONARY ONLY"
    CASE 1
       HD2 = SPACE(53):"FOR ALL ACCOUNTS AND ALL FILE LEVELS"
    END CASE
*   STMT = STMT:' AND WITH FILE. # "DL/ID" AND WITH FILE. # "M/DICT" AND WITH FILE. # "PROC" AND WITH FILE. # "MD"'
*   PRINT @(0,12):STMT
*   ERRMSG = "" ; GOSUB 90000
    PERFORM STMT RTNLIST STATLIST
    PRINTER ON
10001*
    READNEXT ID FROM STATLIST ELSE
       ERRMSG = "No items persents" ; GOSUB 90000 ; GOTO 19999
    END
    MATREAD STAT.REC FROM STAT.FILE , ID ELSE GOTO 10001
    ACCT.NAME = FIELD(STA.A.F.F.NAME,"*",1)
    FILE.NAME = FIELD(STA.A.F.F.NAME,"*",2)
    PREV.ACCT = ACCT.NAME
    PREV.FILE = FILE.NAME
    GOSUB 30000
    GOSUB 20000
19999*
    RETURN
*
*---- PROCESS ALL RECORDS
*
20000*
    DATA = 1
    LOOP
       READNEXT ID FROM STATLIST ELSE DATA = 0
    WHILE DATA DO
       MATREAD STAT.REC FROM STAT.FILE, ID ELSE GOTO 29999
       ACCT.NAME = FIELD(STA.A.F.F.NAME,"*",1)
       FILE.NAME = FIELD(STA.A.F.F.NAME,"*",2)
       IF PREV.ACCT # ACCT.NAME THEN
          GOSUB 60000
          PREV.ACCT = ACCT.NAME
          LINE.COUNT = 99
       END
       GOSUB 30000
29999*
    REPEAT
    GOSUB 60000
    GOSUB 70000
    RETURN
*
*---- PRINT DETAIL LINE
*
30000*
    IF LINE.COUNT > 58 THEN
       PREV.FILE = ""
       GOSUB 80000
    END
    GOSUB 40000
    IF SUG.MOD # STA.MOD THEN
       IF PREV.FILE # FILE.NAME THEN
          PLINE = FILE.NAME "L#35":SP1
          PREV.FILE = FILE.NAME
       END ELSE
          PLINE = SPACE(36)
       END
       BEGIN CASE
       CASE STA.LEVEL = 0
          PLINE = PLINE:"SYSTEM/DICT" "L#11":SP1
       CASE STA.LEVEL = 1
          PLINE = PLINE:"MASTER/DICT" "L#11":SP1
       CASE STA.LEVEL = 2
          PLINE = PLINE:"FILE/DICT" "L#11":SP1
       CASE STA.LEVEL = 3
          PLINE = PLINE:"FILE/DATA" "L#11":SP1
       CASE 1
          PLINE = PLINE:STA.LEVEL "L#11":SP1
       END CASE
       PLINE = PLINE:STA.SIZE "R#12":SP1
       PLINE = PLINE:STA.ITEMS "R#9":SP1
       PLINE = PLINE:STA.FRAMES "R#10":SP1
       PLINE = PLINE:STA.MOD "R#9":SP1
       PLINE = PLINE:STA.SEP "R#4":SP1
       PLINE = PLINE:SUG.MOD "R#9":SP1
       PLINE = PLINE:SUG.SEP "R#4":SP1
       PLINE = PLINE:SUG.MOD - STA.MOD "R#10"
       PRINT PLINE
       LINE.COUNT = LINE.COUNT + 1
       ACCT.TOT.FRM = ACCT.TOT.FRM + (SUG.MOD - STA.MOD)
    END
    RETURN
*
*---- CALCULATE THE NEW MODULO
*
40000*
    LOW.PRIME = "" ; HI.PRIME = "" ; STATUS = ""
    NUM.OF.FRM = INT(STA.SIZE/FRAME.SIZE+.5)
    IF STA.ITEMS + 0 = 0 THEN
       NEW.SEP = 1
    END ELSE
       NEW.SEP = INT((STA.SIZE/STA.ITEMS)/FRAME.SIZE+.5)
       IF NEW.SEP < 1 THEN NEW.SEP = 1
    END
    BEGIN CASE
    CASE NUM.OF.FRM > STA.ITEMS
       CAL.MOD = STA.ITEMS
    CASE 1
       CAL.MOD = NUM.OF.FRM
    END CASE
    IF CAL.MOD # 0 THEN
       CALL GET.PRIME(CAL.MOD,LOW.PRIME,HI.PRIME,STATUS)
    END ELSE
       HI.PRIME = 1
    END
    SUG.MOD = HI.PRIME
    SUG.SEP = NEW.SEP
    RETURN
*
*---- PRINT TOTAL ACCOUNT
*
60000*
    IF LINE.COUNT + 2 > 58 THEN
       GOSUB 80000
    END
    PRINT HD7
    PRINT SPACE(112):ACCT.TOT.FRM "R#10"
    SYS.TOT.FRM = SYS.TOT.FRM + ACCT.TOT.FRM
    ACCT.TOT.FRM = 0
    RETURN
*
*---- PRINT TOTAL SYSTEM
*
70000*
    IF LINE.COUNT + 2 > 58 THEN
       GOSUB 80000
    END
    PRINT HD8
    PRINT SPACE(112):SYS.TOT.FRM "R#10"
    RETURN
*
*---- PRINT HEADINGS
*
80000*
    PRINT CHAR(12):
    PAGE.NO = PAGE.NO + 1
    PRINT HD1:PAGE.NO
    PRINT HD2
    PRINT
    PRINT HD3:PREV.ACCT
    PRINT
    PRINT HD4
    PRINT HD5
    PRINT HD6
    LINE.COUNT = 8
    RETURN
*
*---- PRINT REPORT DOCUMENATION
*
81000*
    PRINT STR("*",79)
    PRINT "*":SPACE(77):"*"
    PRINT "*  R E S I Z E   E X C E P T I O N   R E P O R T":SPACE(30):"*"
    PRINT "*":SPACE(77):"*"
    PRINT "* This report can only be run after a full file save or any other file stat   *"
    PRINT "*  producing function.                                                        *"
    PRINT "*":SPACE(77):"*"
    PRINT "* This report lists file name , level , total size , items , frames,          *"
    PRINT "*  current modulo & separation , suggested modulo & separation & frames       *"
    PRINT "*  required.                                                                  *"
    PRINT "*":SPACE(77):"*"
    PRINT "* This report page Breaks by account and totals on the frames required.       *"
    PRINT "*                                                                             *"
    IF DOC.FLAG = "DT" THEN
       PRINT STR("*",79)
       ERRMSG = "Press any key to continue" ; GOSUB 90000
       PRINT @(0,0):CS
       PRINT STR("*",79)
    END
    PRINT "*":SPACE(77):"*"
    PRINT "* SELECTION CRITERIA DEFINITION                                               *"
    PRINT "* -----------------------------                                               *"
    PRINT "*":SPACE(77):"*"
    PRINT "* 1- Documentation flag (DT) to list documentation to the terminal            *"
    PRINT "*                       (DP) to print documentation on the printer            *"
    PRINT "*                       (N) don't print documentation                         *"
    PRINT "*":SPACE(77):"*"
    PRINT "* 2- Port number : The fiscal port that the file stats, or the save was       *"
    PRINT "*    performed from.                                                          *"
    PRINT "*":SPACE(77):"*"
    PRINT "* 3- Account name or all to be selected.                                      *"
    PRINT "*":SPACE(77):"*"
    PRINT "* 4- File type (DA) for the File Data Level plus the System Master Dictionary.*"
    PRINT "*    File type (DI) for the File Dictionary Level plus the System Master      *"
    PRINT "*    Dictionary.                                                              *"
    PRINT "*    File type (ALL) all the File Level plus System Master Dictionary.        *"
    PRINT "*                                                                             *"
    PRINT "* 5- Frame size (512) for all M4700 & M6000 & M9000.                          *"
    PRINT "*    Frame size (1024) for all series 18/XXX.                                 *"
    PRINT "*                                                                             *"
    IF DOC.FLAG = "DT" THEN
       PRINT STR("*",79)
       ERRMSG = "Press any key to continue" ; GOSUB 90000
       PRINT @(0,0):CS
       PRINT STR("*",79)
    END
    PRINT "* SORTING CRITERIA                                                            *"
    PRINT "* ----------------                                                            *"
    PRINT "*                                                                             *"
    PRINT "* This report sorts by account name then file name then  file level.          *"
    PRINT "*                                                                             *"
    PRINT "* DETAIL LINE COLUMNS DEFINETION                                              *"
    PRINT "* ------------------------------                                              *"
    PRINT "*                                                                             *"
    PRINT "* 1- Detail line columns description.                                         *"
    PRINT "*                                                                             *"
    PRINT "*   Column # 1 lists the file name.                                           *"
    PRINT "*   Column # 2 defines the detail line as data or dict level or master dict.  *"
    PRINT "*   Column # 3 defines file size in bytes.                                    *"
    PRINT "*   Column # 4 defines number of items in the file.                           *"
    PRINT "*   Column # 5 defines total frames used by the file, including linked.       *"
    PRINT "*   Column # 6 defines the current modulo used.                               *"
    PRINT "*   Column # 7 defines the current separation used.                           *"
    PRINT "*   Column # 8 defines the suggested modulo calculated.                       *"
    PRINT "*   Column # 9 defines the suggested separation calculated.                   *"
    PRINT "*   Column # 10 defines the number of frames required or released by the file.*"
    PRINT "*                                                                             *"
    IF DOC.FLAG = "DT" THEN
       PRINT STR("*",79)
       ERRMSG = "Press any key to continue" ; GOSUB 90000
       PRINT @(0,0):CS
       PRINT STR("*",79)
    END
    PRINT "* TOTAL LINE COLUMN DEFINETION                                                *"
    PRINT "* ----------------------------                                                *"
    PRINT "*                                                                             *"
    PRINT "* There is one column on the total line which is the sum of all required.     *"
    PRINT "*  frames by account.                                                         *"
    PRINT "*                                                                             *"
    PRINT "* GRAND TOTAL LINE COLUMN DEFINETION                                          *"
    PRINT "* ----------------------------------                                          *"
    PRINT "*                                                                             *"
    PRINT "* There is one column on the grand total line which is the sum of all         *"
    PRINT "*  required frames by system.                                                 *"
    PRINT "*                                                                             *"
    IF DOC.FLAG = "DT" THEN
       PRINT STR("*",79)
       ERRMSG = "Press any key to continue" ; GOSUB 90000
    END ELSE
       PRINT STR("*",79)
    END
    RETURN
*
*---- ERROR ROUTINE
*
90000*
    PRINT @(0,23):CL:ERRMSG:
    INPUT REPLY:
    PRINT @(0,23):CL:
    RETURN
*
*---- (YES) OR (NO) ROUTINE
*
91000*
    PRINT @(0,23):CL:ERRMSG:
    INPUT ANSW:
    BEGIN CASE
      CASE ANSW = "END"
      CASE ANSW = "N"
      CASE ANSW = "Y"
      CASE 1
         GOTO 91000
    END CASE
    PRINT @(0,23):CL:
    RETURN
*
*---- END OF JOB
*
99999*
    PRINTER OFF
    PRINT CS:
 END
