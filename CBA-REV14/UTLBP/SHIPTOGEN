SUBROUTINE SC.SHIPTO.GEN(CONO,CUST.ID,SHIPTO.ID)
* NAME    : SC.SHIPTO.GEN
* PURPOSE : TO GENERATE ALPHA-NUMERIC SHIPTO ID
* SOURCE  : USERBP
* DATE    : 07-18-03
* AUTHOR  : JASON BALDWIN
* ORIGINATING SCN 4407
*
***************************** REVISIONS *****************************
*
*********************************************************************
*
***************
* cpylibs
***************
$INCLUDE USER.CPYLIB,CUSTOMER
$INCLUDE CPYLIB,CHAR
*
***************
* open files
***************
OP.FILE = ""
OPEN '','CUSTOMER' TO CUSTOMER ELSE OP.FILE<-1> = "CUSTOMER"
OPEN '','SECURITY' TO SECURITY ELSE OP.FILE<-1> = "SECURITY"
OPEN '','SHIP.TO'  TO SHIP.TO  ELSE OP.FILE<-1> = "SHIP.TO"
IF OP.FILE<1> # "" THEN
  FOR A = 1 TO A + 1 UNTIL OP.FILE<A> = ""
    CRT @(0,23):OP.FILE<A>:" file is not open"
  NEXT A
  ERRMSG = "Contact the MIS representative immediately."
  GOSUB ERR.MSG
  STOP
END
*
***************
* initialization
***************
GOOD.SHIPTO = 0
*
***************
* main processing
***************
VAL.CUST.READ = 0
LOOP
  MATREADU CUST.REC FROM CUSTOMER,CONO:CUST.ID THEN
    VAL.CUST.READ = 1
    BEGIN CASE
      CASE NUM(CUST.SHIP.TO) OR CUST.SHIP.TO = ""
        IF CUST.SHIP.TO < 999 THEN
          GOSUB NUM.GEN
        END ELSE
          GOSUB ALPHA.GEN
        END
      CASE 1
        GOSUB ALPHA.GEN
    END CASE
    IF GOOD.SHIPTO THEN
      CUST.SHIP.TO = SID
      MATWRITE CUST.REC TO CUSTOMER,CONO:CUST.ID
    END ELSE
      RELEASE CUSTOMER,CONO:CUST.ID
    END
  END LOCKED
    UKEY = OCONV(GETUSERNAME(STATUS()),'MCU')
    READV UNAME FROM SECURITY,CONO:UKEY,10 ELSE UNAME = "UNKNOWN"
    ERRMSG = "Customer record is locked by ":UNAME
    GOSUB ERR.MSG
  END ELSE
    VAL.CUST.READ = 1
    ERRMSG = CUST.ID:" does not exist"
    GOSUB ERR.MSG
  END
UNTIL VAL.CUST.READ DO REPEAT
*normal program termination
RETURN
*
******************************
* subroutines
******************************
*
******************************
NUM.GEN: ;*normal number id generation
******************************
SID = CUST.SHIP.TO
IF SID = "" OR SID = 0 THEN SID = 1
VAL.SHP = 0
LOOP
  SID = SID'R%3'
  READ TST.REC FROM SHIP.TO,CONO:CUST.ID:"!":SID THEN
    SID += 1
  END ELSE
*    CRT "SID = ":SID
*    INPUT ANY
*    SID += 1
    VAL.SHP = 1
    SHIPTO.ID = SID
    GOOD.SHIPTO = 1
  END
UNTIL VAL.SHP DO REPEAT
RETURN
*
******************************
ALPHA.GEN: ;*alpha-numeric id generation
******************************
SID = CUST.SHIP.TO
NUM.PART = OCONV(SID,'MCN')
ALP.PART = OCONV(SID,'MCA')
VAL.SHP = 0
LOOP
  BEGIN CASE
    CASE LEN(ALP.PART) = 3
      ALP1.NUM = SEQ(ALP.PART[1,1])
      ALP2.NUM = SEQ(ALP.PART[2,1])
      ALP3.NUM = SEQ(ALP.PART[3,1])
      BEGIN CASE
        CASE ALP1.NUM = 90 AND ALP2.NUM = 90 AND ALP3.NUM = 90
          ERRMSG = "Number of valid shiptos exceeded. Contact IS dept"
          GOSUB ERR.MSG
          VAL.SHP = 1
        CASE ALP1.NUM = 90 AND ALP2.NUM = 90 AND ALP3.NUM <= 90
          SID = ALP.PART[1,2]:CHAR(ALP3.NUM + 1)
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
        CASE ALP1.NUM = 90 AND ALP2.NUM <= 90 AND ALP3.NUM = 90
          SID = ALP.PART[1,1]:CHAR(ALP2.NUM + 1):"A"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
        CASE ALP1.NUM <= 90 AND ALP2.NUM = 90 AND ALP3.NUM = 90
          SID = CHAR(ALP1.NUM + 1):"AA"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
        CASE ALP1.NUM <= 90 AND ALP2.NUM <= 90 AND ALP3.NUM = 90
          SID = ALP.PART[1,1]:CHAR(ALP2.NUM + 1):"A"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
        CASE 1
          SID = ALP.PART[1,2]:CHAR(ALP3.NUM + 1)
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
      END CASE
    CASE LEN(ALP.PART) = 2
      ALP1.NUM = SEQ(ALP.PART[1,1])
      ALP2.NUM = SEQ(ALP.PART[2,1])
      BEGIN CASE
        CASE ALP1.NUM = 90 AND ALP2.NUM = 90 AND NUM.PART = 9
          SID = "AAA"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            ALP.PART = SID
          END
        CASE ALP1.NUM = 90 AND ALP2.NUM <= 90 AND NUM.PART = 9
          SID = ALP.PART[1,1]:CHAR(ALP2.NUM + 1):"0"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            NUM.PART = OCONV(SID,'MCN')
            ALP.PART = OCONV(SID,'MCA')
          END
        CASE ALP1.NUM < 90 AND ALP2.NUM = 90 AND NUM.PART = 9
          SID = CHAR(ALP1.NUM + 1):"A0"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            NUM.PART = OCONV(SID,'MCN')
            ALP.PART = OCONV(SID,'MCA')
          END
        CASE 1
          FOR I = NUM.PART TO 9 UNTIL VAL.SID
            TEST.NUM = I
            SID = ALP.PART:TEST.NUM
            GOSUB TEST.SID
            IF VAL.SID THEN
              VAL.SHP = 1
            END
          NEXT I
          IF NOT(VAL.SID) THEN
            BEGIN CASE
              CASE ALP2.NUM + 1 <= 90
                ALP.PART = CHAR(ALP1.NUM):CHAR(ALP2.NUM + 1)
                SID = ALP.PART:"0"    ;*start over with the next letter
                GOSUB TEST.SID
                IF VAL.SID THEN
                  VAL.SHP = 1
                END ELSE
                  NUM.PART = OCONV(SID,'MCN')
                  ALP.PART = OCONV(SID,'MCA')
                END
              CASE ALP1.NUM + 1 <= 90
                ALP.PART = CHAR(ALP1.NUM + 1):"A"
                SID = ALP.PART:"0"    ;*start over with the next letter
                GOSUB TEST.SID
                IF VAL.SID THEN
                  VAL.SHP = 1
                END ELSE
                  NUM.PART = OCONV(SID,'MCN')
                  ALP.PART = OCONV(SID,'MCA')
                END
              CASE 1
                SID = "AAA"
                GOSUB TEST.SID
                IF VAL.SID THEN
                  VAL.SHP = 1
                END ELSE
                  NUM.PART = OCONV(SID,'MCN')
                  ALP.PART = OCONV(SID,'MCA')
                END
            END CASE
          END
      END CASE
    CASE LEN(ALP.PART) = 1
      ALP.NUM = SEQ(ALP.PART)
      BEGIN CASE
        CASE ALP.NUM = 90 AND NUM.PART = 99
          SID = "AA0"
          GOSUB TEST.SID
          IF VAL.SID THEN
            VAL.SHP = 1
          END ELSE
            NUM.PART = OCONV(SID,'MCN')
            ALP.PART = OCONV(SID,'MCA')
          END
        CASE 1
          VAL.SID = 0
          FOR I = NUM.PART TO 99 UNTIL VAL.SID
            TEST.NUM = I'R%2'
            SID = ALP.PART:TEST.NUM
            GOSUB TEST.SID
            IF VAL.SID THEN
              VAL.SHP = 1
            END
          NEXT I
          IF NOT(VAL.SID) THEN
            BEGIN CASE
              CASE ALP.NUM + 1 <= 90
                ALP.PART = CHAR(ALP.NUM + 1)
                SID = ALP.PART:"00"    ;*start over with the next letter
                GOSUB TEST.SID
                IF VAL.SID THEN
                  VAL.SHP = 1
                END ELSE
                  NUM.PART = OCONV(SID,'MCN')
                  ALP.PART = OCONV(SID,'MCA')
                END
              CASE 1
                SID = "AA0"
                GOSUB TEST.SID
                IF VAL.SID THEN
                  VAL.SHP = 1
                END ELSE
                  NUM.PART = OCONV(SID,'MCN')
                  ALP.PART = OCONV(SID,'MCA')
                END
            END CASE
          END
      END CASE
    CASE 1
      SID = "A00"
      GOSUB TEST.SID
      IF VAL.SID THEN
        VAL.SHP = 1
      END ELSE
        NUM.PART = OCONV(SID,'MCN')
        ALP.PART = OCONV(SID,'MCA')
      END
  END CASE
UNTIL VAL.SHP DO REPEAT
RETURN
*
******************************
TEST.SID: ;*subroutine to test valid sid
******************************
READ TST.REC FROM SHIP.TO,CONO:CUST.ID:"!":SID THEN
  VAL.SID = 0
END ELSE
*  CRT "SID = ":SID
*  INPUT ANY
  VAL.SID = 1
  SHIPTO.ID = SID
  GOOD.SHIPTO = 1
END
RETURN
*
******************************
ERR.MSG: ;*error message subroutine
******************************
CRT @(0,23):ERRMSG:" Hit <ENTER> to continue.":
INPUT ANY:
CRT @(0,23):@(-4):
RETURN
*
******************************
ERR.MSG1: ;*error message subroutine
******************************
CRT @(0,23):ERRMSG:
INPUT ANS:
CRT @(0,23):@(-4):
RETURN
*
******************************
* end of program
******************************
END
