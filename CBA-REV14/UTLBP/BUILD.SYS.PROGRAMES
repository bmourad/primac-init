      SUBROUTINE BUILD.SYS.PROGRAMES
********************************************************************
* REVISION    - [08.1]
********************************************************************
*COPY>CPYLIB>COM1
*COPY>UTL.CPYLIB>COM.BUILD.PMC.SYS
*COPY>UTL.CPYLIB>BUILD.PMC.SYS
*COPY>UTL.CPYLIB>SYS.PROGRAMES
*COPY>UTL.CPYLIB>SYS.FILES
*COPY>UTL.CPYLIB>SYS.SCREENS
*COPY>CPYLIB>CHAR
*
      DIM S.SPG.REC(30)
*
      CLEARFILE SYS.PROGRAMES
*
      MD.FILES = "DL/ID"
      MD.FILES<2> = "M/DICT"
      MD.FILES<3> = "MD"
      MD.FILES<4> = "PROC"
      MD.FILES<5> = "SYSTEM"
      MD.FILES<6> = "ACC"
      MD.FILES<7> = "CHANNEL"
      MD.FILES<8> = "DEVICES"
      MD.FILES<9> = "POINTER-FILE"
      MD.FILES<10> = "STAT-FILE"
      QUOTES = '"'
      QUOTES<2> = "'"
      VERBS = "LO"
      VERBS<2> = "OFF"
      INDX.1 = "OPEN "
      INDX.2 = "ECD.SCRN.NAME"
      INDX.3 = "CALL "
      INDX.4 = "CHAIN "
*
      BP.CNT = 0
      IF CUST.BP.OK THEN
         ERRMSG = "Processing customer programes"; GOSUB 90000
         BP.FILE = CUST.BP
         BP.FNAME = SYS.ACCTS(2)
         GOSUB 1000
      END
      ERRMSG = "Processing programes"; GOSUB 90000
      LN = 1; D.PRD = 1
      CALL SCL.PMC.SYS
      MAX = LINES + 1
      FOR S = MAX TO CBA.LINES
         BP.FILE = CBA.FILES(1,S)
         BP.FNAME = CBA.FNAME(1,S)
         GOSUB 1000
      NEXT S
      FOR S = 1 TO LINES
         LN = S; D.PRD = S
         CALL SCL.PMC.SYS
         BP.FILE = CBA.FILES(1,S)
         BP.FNAME = CBA.FNAME(1,S)
         GOSUB 1000
      NEXT S
      ERRMSG = "Verifying all programes"; GOSUB 90000
      GOSUB 1100
      LN = 1
      CALL SCL.PMC.SYS
      GOTO 99999
*
*---- Build the programes file name reference
1000  SELECT BP.FILE
      DATA = 1
      LOOP
         READNEXT PRG.ID ELSE DATA = 0
      WHILE DATA DO
         IF PRG.ID[1,1] # "$" THEN GOTO 1099
         PRG.ID = PRG.ID[2,999]
         PRINT @(30,23) : DATA "L#6" : PRG.ID : CL :
         DATA = DATA + 1
         MATREAD SPG.REC FROM SYS.PROGRAMES, PRG.ID THEN
            BEGIN CASE
            CASE SPG.SOURCE = BP.FNAME
            CASE SPG.SOURCE = SYS.ACCTS(2) AND SPG.ORG.SRC = ""
               SPG.ORG.SRC = BP.FNAME
               MATWRITE SPG.REC ON SYS.PROGRAMES, PRG.ID
               GOTO 1099
            CASE SPG.ORG.SRC # ""
               ERRMSG = "Program (":PRG.ID:") resides in - ":SPG.ORG.SRC:" & ":BP.FNAME
               GOSUB 91000
            CASE 1
               ERRMSG = "Program (":PRG.ID:") resides in - ":SPG.SOURCE:" & ":BP.FNAME
               GOSUB 91000
            END CASE
            FOR I = 3 TO SPG.REC.SIZE
               SPG.REC(I) = ""
            NEXT I
         END ELSE
            MAT SPG.REC = ""
            SPG.SOURCE = BP.FNAME
            MATWRITE SPG.REC ON SYS.PROGRAMES, PRG.ID
         END
1099  REPEAT
      RETURN
*
*---- Build the SYS.PROGRAMES file
1100  SELECT SYS.PROGRAMES
      DATA = 1
      LOOP
         READNEXT PRG.ID ELSE DATA = 0
      WHILE DATA DO
         PRINT @(30,23) : DATA "L#6" : PRG.ID "L#25" : "(    )" :
         DATA = DATA + 1
         MATREAD SPG.REC FROM SYS.PROGRAMES, PRG.ID ELSE
            ERRMSG = "Cannot locates SYS.PROGRAMES, ":PRG.ID
            GOSUB 91000; GOTO 1199
         END
         LOCATE SPG.SOURCE[1,3] IN PMC.ACCTS SETTING BPF ELSE
            ERRMSG = "Cannot locate system initials for - ":SPG.SOURCE
            GOSUB 91000; GOTO 1199
         END
         READ PRG.ITEM FROM CBA.FILES(1,BPF), PRG.ID ELSE
            ERRMSG = "Cannot locate ":CBA.FNAME(1,BPF):", ":PRG.ID
            GOSUB 91000; GOTO 1199
         END
*******
*******  FOR I = 2 TO 30
*******     SPG.REC(I) = ""
*******  NEXT I
*******
         LST.LN = DCOUNT(PRG.ITEM,AM)
         FOR LN = 1 TO LST.LN
            PRINT @(62,23) : LN "R%4" :
            LINE = TRIM(PRG.ITEM<LN>)
            BEGIN CASE
            CASE LINE[1,5] = "*COPY"
               GOSUB 3000
            CASE LINE[1,1] = "*"
            CASE LINE[1,4] = "REM "
            CASE LINE[1,13] = "SCREEN DEFINE"
               GOSUB 5200
            CASE INDEX(LINE,INDX.1,1)
               IPTR = 1; INDX = INDX.1; GOSUB 2000
            CASE INDEX(LINE,INDX.2,1)
               IPTR = 2; INDX = INDX.2; GOSUB 2000
            CASE INDEX(LINE,INDX.3,1)
               IPTR = 3; INDX = INDX.3; GOSUB 2000
            CASE INDEX(LINE,INDX.4,1)
               IPTR = 4; INDX = INDX.4; GOSUB 2000
            END CASE
         NEXT LN
         MATWRITE SPG.REC ON SYS.PROGRAMES, PRG.ID
1199  REPEAT
      RETURN
*
2000  P = 2
      STMT = TRIM(FIELD(LINE,";",1))
      LOOP
         IF NUM(STMT[1,1]) THEN
            L = 2
            LOOP WHILE STMT[L,1] # "" AND NUM(STMT[L,1]) DO
               L = L + 1
            REPEAT
            STMT = TRIM(STMT[L,999])
         END
         IF STMT[1,1] = "*" OR STMT[1,4] = "REM " THEN
            STMT = ""; GOTO 2090
         END
         LOC = INDEX(STMT,INDX,1)
         IF NOT(LOC) THEN GOTO 2080
         ON IPTR GOSUB 4000,5100,6000,7000
2080     STMT = TRIM(FIELD(LINE,";",P))
2090  WHILE STMT # "" DO
         P = P + 1
      REPEAT
      RETURN
*
*- Check if preceeded by quotes
2100  FND = 0; SUB.STMT = STMT[1,LOC-1]
      FOR Q = 1 TO 2 WHILE FND = 0
         L = 1
         LOOP
            FND = INDEX(SUB.STMT,QUOTES<Q>,L)
         WHILE INDEX(SUB.STMT,QUOTES<Q>,L+1) DO
            L = L + 2
         REPEAT
      NEXT Q
      RETURN
*
*---- Build the copy libraries reference
3000  BEGIN CASE
      CASE LINE[6,1] = ">"
      CASE LINE[6,1] = " "
      CASE 1
         GOTO 3099
      END CASE
      LINE = TRIM(LINE[7,999])
      FNAME = FIELD(LINE,">",1)
      IF FNAME = "CPYLIB" THEN
         LBF = 1; FP = 4
      END ELSE
         LOCATE FNAME[1,3] IN PMC.ACCTS SETTING LBF ELSE
            ERRMSG = "Invalid CPYLIB file (":FNAME:") in program - ":PRG.ID
            GOSUB 91000; GOTO 3099
         END
         BEGIN CASE
         CASE FNAME = CBA.FNAME(4,LBF)
            FP = 4
         CASE FNAME = CBA.FNAME(1,LBF)
            FP = 1
         CASE 1
            ERRMSG = "Invalid CPYLIB file (":FNAME:") in program - ":PRG.ID
            GOSUB 91000; GOTO 3099
         END CASE
      END
      CNAME = FIELD(LINE,">",2)
      READ ITEM FROM CBA.FILES(FP,LBF), CNAME ELSE
         ERRMSG = "Cannot locate ":FNAME:", ":CNAME:" in program - ":PRG.ID
         GOSUB 91000; GOTO 3099
      END
      LOCATE PMC.ACCTS<LBF> IN SPG.CPY.F<1> BY "AL" SETTING FPTR ELSE
         INS PMC.ACCTS<LBF> BEFORE SPG.CPY.F<1,FPTR>
         INS "" BEFORE SPG.CPY<1,FPTR>
      END
      LOCATE CNAME IN SPG.CPY<1,FPTR> SETTING CPTR THEN
         ERRMSG = "Duplicate CPYLIB (":FNAME:", ":CNAME:") in program - ":PRG.ID
         GOSUB 91500
      END ELSE
         SPG.CPY<1,FPTR,CPTR> = CNAME
      END
3099  RETURN
*
*---- Build the files reference
4000  BEGIN CASE
      CASE LOC = 1
      CASE STMT[LOC-1,1] # " "
         GOTO 4099
      CASE 1
         GOSUB 2100
         IF FND THEN GOTO 4099
      END CASE
      STMT = TRIM(STMT[LOC+5,999])
      L = INDEX(STMT," ELSE",1)
      IF NOT(L) THEN
         L = INDEX(STMT," THEN",1)
         IF NOT(L) THEN
            IF STMT[1,1] # "=" THEN
               ERRMSG = "Invalid OPEN statement (":LN:") in program - ":PRG.ID
               GOSUB 91000
            END
            GOTO 4099
         END
      END
      STMT = TRIM(STMT[1,L-1])
      L = INDEX(STMT," TO ",1)
      IF NOT(L) THEN
         ERRMSG = "No TO file clause in statement (":LN:") in program - ":PRG.ID
         ERRMSG = "Invalid OPEN statement (":LN:") in program - ":PRG.ID
         GOSUB 91000; GOTO 4099
      END
      T.FNAME = TRIM(STMT[L+4,999])
      IF T.FNAME = "" THEN
         ERRMSG = "Null TO file name in statement (":LN:") in program - ":PRG.ID
         GOSUB 91000; GOTO 4099
      END
      STMT = TRIM(STMT[1,L-1])
      L = INDEX(STMT,",",1)
      IF L THEN
         D.FNAME = TRIM(STMT[1,L-1])
         BEGIN CASE
         CASE D.FNAME = "''" OR D.FNAME = '""'
            D.FNAME = ""
         CASE D.FNAME = "'DICT'" OR D.FNAME = '"DICT"'
            D.FNAME = "Y"
         CASE 1
            D.FNAME = "?"
         END CASE
      END ELSE
         D.FNAME = ""
      END
      F.FNAME = TRIM(STMT[L+1,999])
      BEGIN CASE
      CASE F.FNAME[1,1] = QUOTES<1>
      CASE F.FNAME[1,1] = QUOTES<2>
      CASE 1
*--- File has a variable name
*        ERRMSG = "Cannot determine the file name (":F.FNAME:") in program - ":PRG.ID
*        GOSUB 91500
         GOTO 4099
      END CASE
      F.FNAME = F.FNAME[2,LEN(F.FNAME)-2]
      MATREAD SFR.REC FROM SYS.FILES, F.FNAME ELSE
         LOCATE F.FNAME IN MD.FILES SETTING FND ELSE
            ERRMSG = "Cannot locate file (":F.FNAME:") in program - ":PRG.ID
            BEGIN CASE
            CASE INDEX(F.FNAME,":",1)
               GOSUB 91500
            CASE INDEX(F.FNAME,"!",1)
               GOSUB 91500
            CASE INDEX(F.FNAME,"QFILE",1)
               GOSUB 91500
            CASE 1
               GOSUB 91000
            END CASE
            GOTO 4099
         END
      END
      IF F.FNAME = T.FNAME THEN T.FNAME = ""
      L = 1
      LOOP
         LOCATE F.FNAME IN SPG.FILES<1>,L SETTING FPTR THEN
            BEGIN CASE
            CASE SPG.F.DICT<1,FPTR> # D.FNAME
            CASE SPG.F.NAME<1,FPTR> # T.FNAME
            CASE 1
               L = 0; FPTR = 0
            END CASE
         END ELSE
            L = 0
            SPG.FILES<1,FPTR> = F.FNAME
            SPG.F.DICT<1,FPTR> = D.FNAME
            SPG.F.NAME<1,FPTR> = T.FNAME
         END
      WHILE L DO
         L = L + 1
      REPEAT
      IF NOT(FPTR) THEN
         ERRMSG = "Duplicate opening of file (":F.FNAME:") in program - ":PRG.ID
         GOSUB 91500
      END
4099  RETURN
5100  IF NOT(INDEX(STMT[LOC+13,999],"=",1)) THEN GOTO 5199
      IF LOC > 1 THEN
         ERRMSG = "Invalid screen definition (":STMT:") in program - ":PRG.ID
         GOSUB 91000; GOTO 5199
      END
      SCRN.ID = TRIM(FIELD(STMT,"=",2))
      SCRN.ID = SCRN.ID[2,LEN(SCRN.ID)-2]
      MATREAD SSC.REC FROM SYS.SCREENS, SCRN.ID ELSE
         ERRMSG = "Cannot locate screen (":SCRN.ID:") in program - ":PRG.ID
         GOSUB 91000; GOTO 5199
      END
      SCN.F = FIELD(SSC.SOURCE,".",1)
      IF SCN.F = "M" THEN SCN.F = "CBA"
      LOCATE SCN.F IN SPG.SCN.F<1> BY "AL" SETTING FPTR ELSE
         INS SCN.F BEFORE SPG.SCN.F<1,FPTR>
         INS "" BEFORE SPG.SCN<1,FPTR>
      END
      LOCATE SCRN.ID IN SPG.SCN<1,FPTR> SETTING CPTR ELSE
         SPG.SCN<1,FPTR,CPTR> = SCRN.ID
      END
      LOCATE PRG.ID IN SSC.C.BP<1> SETTING CPTR ELSE
         SSC.C.BP<1,CPTR> = PRG.ID
      END
      MATWRITE SSC.REC ON SYS.SCREENS, SCRN.ID
5199  RETURN
*
5200  SCRN.ID = TRIM(FIELD(LINE,";",2))
      MATREAD SSC.REC FROM SYS.SCREENS, SCRN.ID ELSE
         ERRMSG = "Cannot locate screen (":SCRN.ID:") in program - ":PRG.ID
         GOSUB 91000; GOTO 5299
      END
      SCN.F = FIELD(SSC.SOURCE,".",1)
      IF SCN.F = "M" THEN SCN.F = "CBA"
      LOCATE SCN.F IN SPG.SCN.F<1> BY "AL" SETTING FPTR ELSE
         INS SCN.F BEFORE SPG.SCN.F<1,FPTR>
         INS "" BEFORE SPG.SCN<1,FPTR>
      END
      LOCATE SCRN.ID IN SPG.SCN<1,FPTR> SETTING CPTR ELSE
         SPG.SCN<1,FPTR,CPTR> = SCRN.ID
      END
      LOCATE PRG.ID IN SSC.C.BP<1> SETTING CPTR ELSE
         SSC.C.BP<1,CPTR> = PRG.ID
      END
      MATWRITE SSC.REC ON SYS.SCREENS, SCRN.ID
      SUB.ID = "SCREEN.INPUT"
      LOCATE SUB.ID IN SPG.SUBR<1> SETTING SPTR ELSE
         SPG.SUBR<1,SPTR> = SUB.ID
      END
5299  RETURN
*
*---- Build the subroutines reference
6000  IF LOC > 1 THEN
         IF STMT[LOC-1,1] # " " THEN GOTO 6099
         GOSUB 2100
         IF FND THEN GOTO 6099
      END
      SUB.ID = TRIM(FIELD(STMT[LOC+5,999],"(",1))
      IF SUB.ID[1,1] = "@" THEN GOTO 6099
      LOCATE SUB.ID IN SPG.SUBR<1> SETTING SPTR THEN GOTO 6099
      MAT S.SPG.REC = MAT SPG.REC
      MATREAD SPG.REC FROM SYS.PROGRAMES, SUB.ID ELSE
         ERRMSG = "Cannot locate subroutine (":SUB.ID:") in program - ":PRG.ID
         GOSUB 91000; GOTO 6099
      END
      BEGIN CASE
      CASE SPG.SOURCE = CBA.FNAME(1,1)
      CASE SUB.ID = "GET.CONO"
      CASE SUB.ID = "GET.PROG.HEAD"
      CASE 1
         LOCATE PRG.ID IN SPG.C.BP<1> SETTING CPTR ELSE
            SPG.C.BP<1,CPTR> = PRG.ID
         END
         MATWRITE SPG.REC ON SYS.PROGRAMES, SUB.ID
      END CASE
      MAT SPG.REC = MAT S.SPG.REC
      SPG.SUBR<1,SPTR> = SUB.ID
6099  RETURN
*
*---- Build the procs reference
7000  IF LOC > 1 THEN
         IF STMT[LOC-1,1] # " " THEN GOTO 7099
         GOSUB 2100
         IF FND THEN GOTO 7099
      END
      CHAIN.ID = TRIM(STMT[LOC+6,999])
      BEGIN CASE
      CASE CHAIN.ID[1,1] = QUOTES<1>
         CHAIN.ID = TRIM(FIELD(CHAIN.ID[2,999],QUOTES<1>,1))
      CASE CHAIN.ID[1,1] = QUOTES<2>
         CHAIN.ID = TRIM(FIELD(CHAIN.ID[2,999],QUOTES<2>,1))
      CASE 1
         ERRMSG = "Invalid CHAIN statement (":LN:") in program - ":PRG.ID
         GOSUB 91000; GOTO 7099
      END CASE
      IF INDEX(CHAIN.ID," ",1) THEN
         ERRMSG = "An expression CHAIN statement (":LN:") in program - ":PRG.ID
         GOSUB 91000; GOTO 7099
      END
      IF BPF > LINES THEN FPTR = 1 ELSE FPTR = BPF
      READ ITEM FROM SYS.MD(FPTR), CHAIN.ID ELSE
         ERRMSG = "Cannot locate VERB (":CHAIN.ID:") for CHAIN statement (":LN:") in program - ":PRG.ID
         GOSUB 91000; GOTO 7099
      END
      IF ITEM<1> # "PQN" THEN
         LOCATE CHAIN.ID IN VERBS SETTING FND ELSE
            ERRMSG = "Invalid VERB (":CHAIN.ID:") for CHAIN statement (":LN:") in program - ":PRG.ID
            GOSUB 91000; GOTO 7099
         END
      END
      LOCATE CHAIN.ID IN SPG.CHAIN<1> SETTING CPTR ELSE
         SPG.CHAIN<1,CPTR> = CHAIN.ID
      END
7099  RETURN
90000 PRINT @(0,23) : ERRMSG : CL :
      RETURN
91000 WRITE ERRMSG ON SYS.ERRORS, ERR.SEQ
      ERR.SEQ = ERR.SEQ + 1
      RETURN
91500 WRITE ERRMSG ON SYS.WARNINGS, WRN.SEQ
      WRN.SEQ = WRN.SEQ + 1
      RETURN
99999 RETURN
   END
