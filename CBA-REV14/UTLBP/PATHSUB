EQUATE FALSE TO 0
EQUATE TRUE  TO 1

OPEN '','VOC' TO VOC ELSE STOP 'VOC open failed.'
DIM VOC.REC(3)
PROMPT ''
PRINT @(0)
PRINT
PRINT 'This program allows you to globally substitute paths or sub-paths in'
PRINT 'the voc.  For example, if you move your accounts from /usr/ud to /usr2'
PRINT 'you could update all voc entries to reflect this path with this program.'
PRINT
LOOP
   PRINT 'Original sub-path : ':
   INPUT OLD
   IF OLD = '' THEN
      NEW = ''
      STOP 'No path substitution occurred.'
   END ELSE
      PRINT 'New sub-path : ':
      INPUT NEW
      PRINT 'Old path: ':OLD
      PRINT 'New path: ':NEW
   END
   PRINT 'Is this acceptable? (y/n) : ':
   INPUT RESP
UNTIL UPCASE(RESP[1,1]) = 'Y' DO REPEAT

* process local catalog entries

PRINT 'Updating local catalog entries in voc...'
UDTEXECUTE 'SELECT VOC WITH F1 = "C"'
UPDATED = 0
DONE = FALSE
LOOP
   READNEXT CATNAME ELSE DONE = 1
UNTIL DONE DO
   READV PATHLINE FROM VOC,CATNAME,2 THEN
      GOSUB CHANGE.PATH
		IF CHANGED THEN
         WRITEV PATHLINE ON VOC,CATNAME,2
         UPDATED += 1
      END
   END ELSE
      PRINT CATNAME:' not found in VOC?!?!?'
   END
REPEAT
PRINT 'Updated ':UPDATED:' local catalog entries in voc.'

* process voc file pointers

PRINT
PRINT 'Updating file pointers in voc...'
ECL.STMT = 'SELECT VOC WITH (F1 LIKE dir... OR F1 LIKE DIR...'
ECL.STMT := ' OR F1 LIKE f... OR F1 LIKE F...)'
UDTEXECUTE ECL.STMT
UPDATED = 0
DONE = FALSE
LOOP
   READNEXT DIRNAME ELSE DONE = TRUE
UNTIL DONE DO
   MATREAD VOC.REC FROM VOC,DIRNAME THEN
		PATHLINE = VOC.REC(2)
		GOSUB CHANGE.PATH
		IF CHANGED THEN
         VOC.REC(2) = PATHLINE
      	WRITE.REQD = TRUE
		END ELSE
         WRITE.REQD = FALSE
		END
		PATHLINE = VOC.REC(3)
		GOSUB CHANGE.PATH
		IF CHANGED THEN
			VOC.REC(3) = PATHLINE
		END
		IF CHANGED OR WRITE.REQD THEN
         MATWRITE VOC.REC ON VOC,DIRNAME
         UPDATED += 1
      END
   END ELSE
      PRINT DIRNAME:' not found in VOC?!?!?'
   END
REPEAT
PRINT 'Updated ':UPDATED:' file pointers in voc.'

STOP 'Voc has been updated.'

CHANGE.PATH:

PATHLINE.ORIG = PATHLINE
IF OLD <> '' THEN
   OLD.POS = INDEX(PATHLINE,OLD,1)
   IF OLD.POS > 0 THEN
      PATHLINE = PATHLINE[1,OLD.POS-1]:NEW:PATHLINE[OLD.POS+LEN(OLD),9999]
   END
END
IF PATHLINE <> PATHLINE.ORIG THEN
	CHANGED = TRUE
END ELSE
	CHANGED = FALSE
END

RETURN

* end of program
END 
