      SUBROUTINE BUILD.SYS.FILES
********************************************************************
* REVISION    - [08.1]
********************************************************************
*COPY>CPYLIB>COM1
*COPY>UTL.CPYLIB>COM.BUILD.PMC.SYS
*COPY>UTL.CPYLIB>BUILD.PMC.SYS
*COPY>PMC.CPYLIB>MENUS.CONTROL
*COPY>JIS.CPYLIB>PFX_FILES
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
      DIM S.SFR.REC(35)
*
      IF INDEX(CBA.PATH,"/",1) THEN
         SCHAR = "/"; BSCHAR = "\"
      END ELSE
         SCHAR = "\"; BSCHAR = "/"
      END
*
      UD.FILES = "VOC"
      UD.FILES<2> = "BP"
      UD.FILES<3> = "CTLG"
      UD.FILES<4> = "MENUFILE"
      UD.FILES<5> = "SAVEDLISTS"
      UD.FILES<6> = "_HOLD_"
      UD.FILES<7> = "_PH_"
      UD.FILES<8> = "_REPORT_"
      UD.FILES<9> = "_SCREEN_"
      UD.FILES<10>= "__V__VIEW"
      UD.FILES<11>= "savedlists"
*
      OTH.FILES = QF.ID
      OTH.FILES<2> = "savelist.map"
      OTH.FILES<3> = "AE_COMS"
      OTH.FILES<4> = "AE_SCRATCH"
      OTH.FILES<5> = "TCL+LIB"
      OTH.FILES<6> = "DUMP.MD"
*
      D.TYPE = "D"
      D.TYPE<2> = "B"
      D.TYPE<3> = "P"
      D.TYPE<4> = "S"
      D.TYPE<5> = "C"
      D.TYPE<6> = "M"
      D.TYPE<7> = "O"
*
      MENU.FILES = "PRIMAC.MENUS"
      MENU.FILES<2> = "EASY.MENUS"
*
      PMC.FILES = "EASY.DOC"
      PMC.FILES<2> = "MACRO"
      PMC.FILES<3> = "REPORT.PROC.FILE"
      PMC.FILES<4> = "PRIMAC.SCR"
      PMC.FILES<5> = "GLS.DICT"
      PMC.FILES<6> = "FORMULA.DOC"
      PMC.FILES<7> = "XREF.DATA"
*****
* Only for new systems
*****
***** PMC.FILES<8> = "DEP.MAST"
***** PMC.FILES<9> = "STATE"
***** PMC.FILES<10>= "TAX2"
*
*     CLEARFILE SYS_FILES
*
*
      CHK_FILES = "CUSTOMER"
      CHK_FILES<2> = "JOB_TKT"
*
      ERRMSG = "Processing DICT/DATA files"; GOSUB 90000
      LN = 1
      SYS.INIT = PMC.ACCTS<LN>
      ACCT.PATH = CBA.PATH:SCHAR
      D.PRD = LN
      CALL SCL.PMC.SYS
      GOSUB 1000
      LN = 2
      SYS.INIT = PMC.ACCTS<LN>
      ACCT.PATH = PRIMAC.PATH:SCHAR
      D.PRD = LN
      CALL SCL.PMC.SYS
      GOSUB 1000
      FOR LN = 3 TO LINES
         SYS.INIT = PMC.ACCTS<LN>
         ACCT.PATH = PRIMAC.PATH:"-":SYS.INIT:SCHAR
         D.PRD = LN
         CALL SCL.PMC.SYS
         GOSUB 1000
      NEXT LN
      ERRMSG = "Processing QPTR files"; GOSUB 90000
      FOR LN = 1 TO LINES
         SYS.INIT = PMC.ACCTS<LN>
         D.PRD = LN
         CALL SCL.PMC.SYS
         GOSUB 2000
      NEXT LN
      LN = 1
      CALL SCL.PMC.SYS
      GOTO 99999
1000  SELECT SYS.MD(LN)
      DATA = 1
      LOOP
         READNEXT FILE.ID ELSE DATA = 0
      WHILE DATA DO
         LOCATE FILE.ID IN UD.FILES,1 SETTING FND THEN GOTO 1099
         LOCATE FILE.ID IN OTH.FILES,1 SETTING FND THEN GOTO 1099
         READ ITEM FROM SYS.MD(LN), FILE.ID ELSE
            ERRMSG = "Cannot locate ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 1099
         END
         DATA.OK = 1
         BEGIN CASE
         CASE ITEM<1> # "F" AND ITEM<1> # "DIR"
            GOTO 1099
         CASE INDEX(ITEM<2>,SCHAR,1)
            GOTO 1099
         CASE ITEM<2> # FILE.ID
            BEGIN CASE
            CASE ITEM<2> # ""
               GOTO 1099
            CASE FILE.ID[LEN(FILE.ID)-9,999] = ".EOM.TRANS"
               DATA.OK = 0
            CASE FILE.ID[LEN(FILE.ID)-12,999] = ".POST.REJECTS"
               DATA.OK = 0
            CASE 1
               GOTO 1099
            END CASE
         CASE INDEX(ITEM<3>,SCHAR,1)
            GOTO 1099
         CASE ITEM<3>[1,2] # "D_"
            GOTO 1099
         END CASE
         PRINT @(35,23) : DATA "L#6" : FILE.ID : CL :
         DTYPE = ITEM<1>
         DICTFILE = ITEM<3>
         DATA = DATA + 1
         QFILE = DTYPE
         QFILE<2> = ACCT.PATH:FILE.ID
         QFILE<3> = ACCT.PATH:DICTFILE
         WRITEU QFILE ON SYS.MD(1), QF.ID
         OPEN "DICT",QF.ID TO TEMP.FILE ELSE
            ERRMSG = "Cannot open DICT - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 1099
         END
         IF DATA.OK THEN
            OPEN "",QF.ID TO TEMP.FILE ELSE
               ERRMSG = "Cannot open DATA - ":SYS.INIT:", ":FILE.ID
               GOSUB 91000; GOTO 1099
            END
         END
         MATREADU SFR.REC FROM SYS_FILES, FILE.ID THEN
            LOCATE SFR.TYPE IN D.TYPE SETTING FND ELSE
               RELEASE SYS_FILES, FILE.ID
               ERRMSG = "Invalid file type (":SFR.TYPE:") ":SFR.ACCT:", ":SFR.NAME:" for - ":SYS.INIT:", ":FILE.ID
               GOSUB 91000; GOTO 1099
            END
            BEGIN CASE
            CASE SFR.ACCT # SYS.INIT
               RELEASE SYS_FILES, FILE.ID
               ERRMSG = "Account mismatch ":SFR.ACCT:" & ":SYS.INIT:" for file - ":FILE.ID
               GOSUB 91000; GOTO 1099
            CASE SFR.NAME # FILE.ID
               RELEASE SYS_FILES, FILE.ID
               ERRMSG = "File mismatch ":SFR.NAME:" & ":FILE.ID:" in account - ":SYS.INIT
               GOSUB 91000; GOTO 1099
            CASE SFR.DTYPE # DTYPE
               RELEASE SYS_FILES, FILE.ID
               ERRMSG = "File type mismatch ":SFR.DTYPE:" & ":DTYPE:" in account - ":SYS.INIT
               GOSUB 91000; GOTO 1099
            END CASE
            BEGIN CASE
            CASE SFR.CPYLIB = "" AND SFR.TYPE = "D"
               GOSUB 1100
               IF SFR.CPYLIB # "" THEN
                  SFR.CPLB.NAME = FILE.ID
                  GOSUB 1200
                  SFR.CPLB.SIZE = R.SIZE
               END
               MATWRITE SFR.REC ON SYS_FILES, FILE.ID
            CASE SFR.TYPE = "D" AND (SFR.CPLB.NAME = "" OR SFR.CPLB.SIZE = "")
               OLD.CPYLIB = SFR.CPYLIB; OLD.PFX = SFR.PFX
               SFR.CPYLIB = ""; SFR.PFX = ""
               GOSUB 1100
               IF SFR.CPYLIB = OLD.CPYLIB THEN
                  SFR.CPLB.NAME = FILE.ID
                  GOSUB 1200
                  SFR.CPLB.SIZE = R.SIZE
                  IF SFR.PFX = OLD.PFX THEN
                     MATWRITE SFR.REC ON SYS_FILES, FILE.ID
                  END ELSE
                     RELEASE SYS_FILES, FILE.ID
                     ERRMSG = "Prefix mismatch ":OLD.PFX:" & ":SFR.PFX:" in file - ":FILE.ID
                     GOSUB 91000
                  END
               END ELSE
                  RELEASE SYS_FILES, FILE.ID
               END
            CASE 1
               RELEASE SYS_FILES, FILE.ID
            END CASE
         END ELSE
            MAT SFR.REC = ""
            BEGIN CASE
            CASE LN > 1
               SFR.TYPE = "D"
            CASE FILE.ID[LEN(FILE.ID)-1,2] = "BP"
               SFR.TYPE = "B"
            CASE FILE.ID[LEN(FILE.ID)-4,5] = "PROCS"
               SFR.TYPE = "P"
            CASE FILE.ID[LEN(FILE.ID)-7,8] = ".SCREENS"
               SFR.TYPE = "S"
            CASE FILE.ID[LEN(FILE.ID)-5,6] = "CPYLIB"
               SFR.TYPE = "C"
            CASE 1
               LOCATE FILE.ID IN MENU.FILES SETTING FND THEN
                  SFR.TYPE = "M"
               END ELSE
                  LOCATE FILE.ID IN PMC.FILES SETTING FND THEN
                     SFR.TYPE = "O"
                  END ELSE
                     SFR.TYPE = "D"
                  END
               END
            END CASE
            SFR.ACCT = SYS.INIT
            SFR.NAME = FILE.ID
            SFR.MOD = 0 ;* ??
            SFR.SEP = 0 ;* ??
            SFR.D.MOD = 0 ;* ??
            SFR.D.SEP = 0 ;* ??
            SFR.DTYPE = DTYPE
            SFR.D.NAME = DICTFILE
            IF SFR.TYPE = "D" THEN
               GOSUB 1100
            END
            IF SFR.CPYLIB # "" THEN
               SFR.CPLB.NAME = FILE.ID
               GOSUB 1200
               SFR.CPLB.SIZE = R.SIZE
            END
            MATWRITE SFR.REC ON SYS_FILES, FILE.ID
         END
         IF LN > 1 THEN
            READU ITEM FROM SYS.MD(1), FILE.ID THEN
               RELEASE SYS.MD(1), FILE.ID
            END ELSE
               WRITE QFILE ON SYS.MD(1), FILE.ID
            END
         END
1099  REPEAT
      RETURN
1100*
LOCATE FILE.ID IN CHK_FILES,1 SETTING FND THEN
CRT @(0,22):"1-":SFR.CPYLIB:; INPUT XOXO:
END
      READ CPYLIB_REC FROM CBA.FILES(4,LN), FILE.ID THEN
         SFR.CPYLIB = CBA.FNAME(4,LN)
      END ELSE
         IF LN > 1 THEN
            LIMIT = LN - 1
            FOR I = 1 TO LIMIT
               READ CPYLIB_REC FROM CBA.FILES(4,I), FILE.ID THEN
                  SFR.CPYLIB = CBA.FNAME(4,I)
                  LIMIT = 0
               END
            NEXT I
         END ELSE
            LIMIT = 1
         END
         IF LIMIT THEN
            SLIMIT = LN + 1; LIMIT = LINES
            FOR I = SLIMIT TO LIMIT
               READ CPYLIB_REC FROM CBA.FILES(4,I), FILE.ID THEN
                  SFR.CPYLIB = CBA.FNAME(4,I)
                  LIMIT = 0
               END
            NEXT I
         END
      END
LOCATE FILE.ID IN CHK_FILES,1 SETTING FND THEN
CRT @(0,22):"2-":SFR.CPYLIB:; INPUT XOXO:
END
      RETURN
1200*
LOCATE FILE.ID IN CHK_FILES,1 SETTING FND THEN
CRT @(0,22):"3-":SFR.CPYLIB:; INPUT XOXO:
END
      PFX = ""
      CALL CPYLIB_SUB(CPYLIB_REC,PFX,R.NAME,R.SIZE,ERRMSG)
      IF ERRMSG = "" THEN
         MATREADU PFR.REC FROM PFX_FILES, PFX THEN
            IF PFR_FILE = FILE.ID THEN
               SFR.PFX = PFX
            END ELSE
               ERRMSG = "Both files (":FILE.ID:") & (":PFR_FILE:") have the same prefix # ":PFX
               GOSUB 91000
            END
            RELEASE PFX_FILES, PFX
         END ELSE
            MAT PFR.REC = ""
            PFR_FILE = FILE.ID
            MATWRITE PFR.REC ON PFX_FILES, PFX
            SFR.PFX = PFX
         END
      END
LOCATE FILE.ID IN CHK_FILES,1 SETTING FND THEN
CRT @(0,22):"4-":SFR.CPYLIB:"_":SFR.PFX:"<<<<":; INPUT XOXO:
END
      RETURN
2000  SELECT SYS.MD(LN)
      DATA = 1
      LOOP
         READNEXT FILE.ID ELSE DATA = 0
      WHILE DATA DO
         LOCATE FILE.ID IN UD.FILES,1 SETTING FND THEN GOTO 2999
         READ ITEM FROM SYS.MD(LN), FILE.ID ELSE
            ERRMSG = "Cannot locate ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         END
         BEGIN CASE
         CASE ITEM<1> # "F" AND ITEM<1> # "DIR"
            GOTO 2999
         CASE NOT(INDEX(ITEM<2>,SCHAR,1))
            GOTO 2999
         CASE FILE.ID = "QFILE"
            GOTO 2999
         CASE FILE.ID[1,3] = "QF_"
            IF NUM(FIELD(FILE.ID,"_",2)) THEN GOTO 2999
         END CASE
         QDATA.PATH = ITEM<2>; QDICT.PATH = ITEM<3>
         CNT = COUNT(QDATA.PATH,SCHAR)
         QFILE.ID = FIELD(QDATA.PATH,SCHAR,CNT+1)
         LOCATE QFILE.ID IN UD.FILES,1 SETTING FND THEN GOTO 2999
         QACCT.ID = FIELD(QDATA.PATH,SCHAR,CNT)
         LOC = 0
         FOR SS = 1 TO LINES WHILE LOC = 0
            IF SYS.ACCTS(SS) = QACCT.ID THEN LOC = SS
         NEXT SS
         BEGIN CASE
         CASE LOC = 0
            GOTO 2999
         CASE LOC = 1
            QFILE.PATH = CBA.PATH:SCHAR
         CASE LOC = 2
            QFILE.PATH = PRIMAC.PATH:SCHAR
         CASE 1
            QFILE.PATH = PRIMAC.PATH:"-":PMC.ACCTS<LOC>:SCHAR
         END CASE
         BEGIN CASE
         CASE QDATA.PATH = ("..":SCHAR:QACCT.ID:SCHAR:QFILE.ID)
         CASE QDATA.PATH = QFILE.PATH:QFILE.ID
         CASE 1
            GOTO 2999
         END CASE
         PRINT @(35,23) : DATA "L#6" : FILE.ID : CL :
         DATA = DATA + 1
         QSYS.ID = PMC.ACCTS<LOC>
         MATREAD SFR.REC FROM SYS_FILES, QFILE.ID ELSE
            ERRMSG = "Cannot locate file (":QSYS.ID:", ":QFILE.ID:") for Qfile - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         END
         LOCATE SFR.TYPE IN D.TYPE SETTING FND ELSE
            ERRMSG = "Invalid QPTR (":SYS.INIT:", ":FILE.ID:") for file ":QSYS.ID:", ":QFILE.ID
            GOSUB 91000; GOTO 2999
         END
         BEGIN CASE
         CASE SFR.ACCT # QSYS.ID
            ERRMSG = "Account mismatch ":SFR.ACCT:" & ":QSYS.ID:" for Qfile - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         CASE SFR.NAME # QFILE.ID
            ERRMSG = "QPTR mismatch ":SFR.NAME:" & ":QFILE.ID:" for account - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         CASE SFR.DTYPE # ITEM<1>
            ERRMSG = "QTYPE mismatch ":SFR.DTYPE:" & ":ITEM<1>:" for account - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         CASE QDICT.PATH = ("..":SCHAR:QACCT.ID:SCHAR:SFR.D.NAME)
         CASE QDICT.PATH = QFILE.PATH:SFR.D.NAME
         CASE 1
            ERRMSG = "DICT file mismatch ":SFR.D.NAME:" & ":QDICT.PATH:" for account - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         END CASE
         LOCATE SYS.INIT IN SFR.Q.ACCT<1>,1 SETTING SF ELSE
            SFR.Q.ACCT<1,SF> = SYS.INIT
         END
         LOCATE FILE.ID IN SFR.Q.NAME<1,SF>,1 SETTING SI ELSE
            SFR.Q.NAME<1,SF,SI> = FILE.ID
         END
         IF FILE.ID = QFILE.ID THEN
            MATWRITE SFR.REC ON SYS_FILES, QFILE.ID
            GOTO 2999
         END
         MAT S.SFR.REC = MAT SFR.REC
         MATREAD SFR.REC FROM SYS_FILES, FILE.ID ELSE
            MAT SFR.REC = ""
            SFR.TYPE = "Q"
            SFR.ACCT = QSYS.ID
            SFR.NAME = QFILE.ID
            MATWRITE S.SFR.REC ON SYS_FILES, QFILE.ID
            MATWRITE SFR.REC ON SYS_FILES, FILE.ID
            GOTO 2999
         END
         LOCATE SFR.TYPE IN D.TYPE SETTING FND THEN
            IF SFR.TYPE # "M" THEN
               ERRMSG = "Mismatch QPTR (":SYS.INIT:", ":FILE.ID:") & DPTR ":SFR.ACCT:", ":SFR.NAME
               GOSUB 91000; GOTO 2999
            END
         END ELSE
            IF SFR.TYPE # "Q" THEN
               ERRMSG = "Invalid QPTR definition (":SYS.INIT:", ":FILE.ID:") for - ":QSYS.ID:", ":QFILE.ID
               GOSUB 91000; GOTO 2999
            END
         END
         BEGIN CASE
         CASE SFR.ACCT # QSYS.ID
            ERRMSG = "QPTR account mismatch ":SFR.ACCT:" & ":QSYS.ID:" for - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         CASE FILE.ID = "EASY.MENUS" AND QFILE.ID = "PRIMAC.MENUS"
         CASE SFR.NAME # QFILE.ID
            ERRMSG = "QPTR name mismatch ":SFR.NAME:" & ":QFILE.ID:" for - ":SYS.INIT:", ":FILE.ID
            GOSUB 91000; GOTO 2999
         END CASE
         MATWRITE S.SFR.REC ON SYS_FILES, QFILE.ID
2999  REPEAT
      RETURN
90000 PRINT @(0,23):ERRMSG:CL:
      RETURN
91000 WRITE ERRMSG ON SYS.ERRORS, ERR.SEQ
      ERR.SEQ = ERR.SEQ + 1
      RETURN
99999 RETURN
   END
