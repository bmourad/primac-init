*COPY>CPYLIB>SCOMMON1
*COPY>CPYLIB>COM.SCREEN.BUILD
*********************************************************************
*
* REVISION    - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - CONVERT.SCREEN.TO.FORM
*
* AUTHOR  - DIANE TOVAR, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 02/19/96
*
* DESCRIPTION
*
* This program will convert the screens files creating the gui form
* and *TUF record.
*
* A screen file select list consists of the screen names which can be
* retreived using the following type of statement:
*
* SSELECT DEV.SCREENS SAVING UNIQUE ID
*
* A form file select list can be obtained by selecting the form file.
* PMCFORMS for base forms, DEVFORMS, xxxFORMS (xxx being the user
* specific i.e. SLPFORMS)
*
*********************************************************************
*
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>PCNAME_XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>TCC
*COPY>CPYLIB>SPECIAL.H
*COPY>CPYLIB>ROC.H
* INCLUDE TUBP OBJECT.H
*
   PC.PORT.TYPE = "STD"
*COPY>CPYLIB>SYSCOM                          ;* GUI
   MAT SYSCOM.REC = "" ; SYS.TYPE = 2     ;* GUI
*
*---- DEFINE VARIABLES
*
   SFILES = 'ARS.SCREENS'
   SFILES := VM:'APS.SCREENS'
   SFILES := VM:'FAS.SCREENS'
   SFILES := VM:'GLS.SCREENS'
   SFILES := VM:'ICS.SCREENS'
   SFILES := VM:'JCS.SCREENS'
   SFILES := VM:'JES.SCREENS'
   SFILES := VM:'JIS.SCREENS'
   SFILES := VM:'M.SCREENS'
   SFILES := VM:'NDC.SCREENS'
   SFILES := VM:'OPS.SCREENS'
   SFILES := VM:'PMC.SCREENS'
   SFILES := VM:'POS.SCREENS'
   SFILES := VM:'PSS.SCREENS'
   SFILES := VM:'QPL.SCREENS'
   SFILES := VM:'UTL.SCREENS'
*   SFILES := VM:'PR4.SCREENS'  ;* NOT CONVERTED TO GUI
*   SFILES := VM:'PRS.SCREENS'  ;* NOT CONVERTED TO GUI
   SFILES := VM:'JKT.SCREENS'
*
   BASE.FORMS = "M"
   BASE.FORMS<2> = "APS"
   BASE.FORMS<3> = "ARS"
   BASE.FORMS<4> = "FAS"
   BASE.FORMS<5> = "GLS"
   BASE.FORMS<6> = "ICS"
   BASE.FORMS<7> = "JCS"
   BASE.FORMS<8> = "JES"
   BASE.FORMS<9> = "JIS"
   BASE.FORMS<10> = "JKT"
   BASE.FORMS<11> = "NDC"
   BASE.FORMS<12> = "OPS"
   BASE.FORMS<13> = "PMC"
   BASE.FORMS<14> = "POS"
   BASE.FORMS<15> = "PR4"
   BASE.FORMS<16> = "PRS"
   BASE.FORMS<17> = "PSS"
   BASE.FORMS<18> = "QPL"
   BASE.FORMS<19> = "UTL"
   BASE.FORMS<20> = "CBA"
*   BASE.FORMS<21> = "WIF"
   BNAME = ""
*
*
*---- OPEN ALL FILES
*
   MAT FILE.VARS = ""
   OPEN "","VOC" TO MD ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOTO 93000
   END
   OPEN "","PCNAME_XREF" TO PCNAME_XREF ELSE
      ERRMSG = "CANNOT OPEN PCNAME_XREF FILE"
      GOTO 93000
   END
   OPEN "","UTL.SCREENS" TO UTL.SCREENS ELSE
      ERRMSG = "CANNOT OPEN UTL.SCREENS FILE"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 93000
   END
   OPEN "","SAVEDLISTS" TO SAVEDLISTS ELSE
      ERRMSG = "CANNOT OPEN SAVEDLISTS FILE"
      GOTO 93000
   END
*
*---- INITIALIZATION
*
*      CONO = ""
*      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;CONVERT.SCREEN.TO.FORM;UTL.SCREENS
   SCREEN FORMAT
*
*---- ENTER PARAMETERS
*
100 *
   SCREEN CLEAR
110 *
   FFLAG = ""
   FFILE = ""
   SLIST = ""
   FNAME = ""
   DFLAG = ""
   GOSUB 1010
   IF FFLAG = "END" THEN GOTO 99999
   FFLAG = S$VALUE
   GOSUB 1020
   IF FFILE # "ALL" THEN
      GOSUB 1030
      IF SLIST = "" THEN
         GOSUB 1040
      END
   END
   GOSUB 1050
*
*---- GET OPERATOR REPLY
*
500 *
   SCREEN FIELD;;10
   SCREEN INPUT;;10
   OPT = S$VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE OPT = 1
         GOSUB 1010
         FFILE = ""
         SLIST = ""
         FNAME = ""
         GOSUB 1020
         IF FFILE # "ALL" THEN
            GOSUB 1030
            IF SLIST = "" THEN
               GOSUB 1040
            END
         END
      CASE OPT = 2
         GOSUB 1020
      CASE OPT = 3
         GOSUB 1030
      CASE OPT = 4
         GOSUB 1040
      CASE OPT = 5
         GOSUB 1050
      CASE OPT = "P"
         IF FFLAG = "F" THEN
            GOSUB 10000
            IF ERRMSG # "" OR TYPE = "" THEN
               GOTO 500
            END ELSE
               GOSUB 20000
            END
         END ELSE
            GOSUB 10000
            IF ERRMSG # "" OR TYPE = "" THEN
               GOTO 500
            END ELSE
               GOSUB 30000
            END
         END
         GOTO 99999
   END CASE
   GOTO 500
*
*---- Get File Flag to use Forms or Screens
*
1010 *
   SCREEN FIELD;;1
   SCREEN INPUT;;1
   FFLAG = S$VALUE
   RETURN
*
*---- Get File
*
1020 *
   SCREEN FIELD;;2
   SCREEN INPUT;;2
   IF S$VALUE # "ALL" THEN
      IF FFLAG = "S" THEN
         IF FIELD(S$VALUE,".",2) # "SCREENS" THEN
            ERRMSG = 'Invalid format, must end in ".SCREENS"'
            GOSUB 91000
            GOTO 1020
         END
      END ELSE
         IF S$VALUE[LEN(S$VALUE)-4,99] # "FORMS" THEN
            ERRMSG = 'Invalid format, must end in ".FORMS"'
            GOSUB 91000
            GOTO 1020
         END
      END
      OPEN "", S$VALUE TO SYS.FILE ELSE
         ERRMSG = "INVALID FILE NAME - ":S$VALUE
         GOSUB 91000; GOTO 1020
      END
   END
   FFILE = S$VALUE
   RETURN
*
*---- Get Select List
*
1030 *
   IF FFILE = "ALL" THEN
      ERRMSG = 'You must enter a valid file to select from, Cannot use "ALL"'
      GOSUB 91000
      RETURN
   END
   SCREEN FIELD;;3
   SCREEN INPUT;;3
   IF S$VALUE = "END" THEN RETURN
   IF S$VALUE = "ALL" THEN
      SLIST = S$VALUE
   END ELSE
      IF S$VALUE # "" THEN
         READ SREC FROM SAVEDLISTS, S$VALUE:"000" THEN
            SLIST = S$VALUE
         END ELSE
            ERRMSG = "Invalid Savedlist ID"
            GOSUB 91000
            GOTO 1030
         END
      END
   END
   IF S$DATA(4)<S$SCR> # "" THEN
      SCREEN FIELD;;4
      S$DATA(4)<S$SCR> = ""
      SCREEN DISPLAY;;4
      FNAME = ""
   END
   RETURN
*
*---- Get Item
*
1040 *
   IF FFILE = "ALL" THEN
      ERRMSG = 'You must enter a valid file to read from, Cannot use "ALL"'
      GOSUB 91000
      RETURN
   END
   SCREEN FIELD;;4
   SCREEN INPUT;;4
   IF S$VALUE = "END" THEN
      S$DATA(4)<S$SCR> = ""
      SCREEN DISPLAY;;4
      RETURN
   END
   IF FFLAG = "S" THEN
      IF S$VALUE # "" THEN
         READ SREC FROM SYS.FILE, S$VALUE:"*FLD" THEN
            FNAME = S$VALUE
         END ELSE
            ERRMSG = "Item ":S$VALUE:" not found in file ":FFILE
            GOSUB 91000
            GOTO 1040
         END
      END
   END ELSE
      IF S$VALUE # "" THEN
         READ SREC FROM SYS.FILE, S$VALUE THEN
            FNAME = S$VALUE
         END ELSE
            ERRMSG = "Item ":S$VALUE:" not found in file ":FFILE
            GOSUB 91000
            GOTO 1040
         END
      END
   END
   IF S$DATA(3)<S$SCR> # "" THEN
      SCREEN FIELD;;3
      S$DATA(3)<S$SCR> = ""
      SCREEN DISPLAY;;3
      SLIST = ""
   END
   RETURN
*
*---- Get Download Form
*
1050 *
   SCREEN FIELD;;5
   SCREEN INPUT;;5
   IF S$VALUE = "END" THEN
      S$DATA(5)<S$SCR> = ""
      SCREEN DISPLAY;;5
   END ELSE
      DFLAG = S$VALUE
   END
   RETURN
*
*---- Process Validation
10000 *
   TYPE = ""
   ERRMSG = ""
   BEGIN CASE
      CASE FFLAG = "S" AND FFILE = "ALL"
         TYPE = "ALL.BASE.SCREENS"
      CASE FFLAG = "F" AND FFILE = "ALL"
         TYPE = "ALL.BASE.FORMS"
      CASE SLIST = "" AND FNAME = ""
         ERRMSG = "You must enter a list or item to process!"
         GOSUB 91000
      CASE FFLAG = "S" AND SLIST # ""
         IF SLIST = "ALL" THEN
            TYPE = "ALL.SCREENS"
         END ELSE
            TYPE = "SCREENS.LIST"
         END
      CASE FFLAG = "F" AND SLIST # ""
         IF SLIST = "ALL" THEN
            IF FFILE = "PMCFORMS" THEN
               TYPE = "ALL.BASE.FORMS"
            END ELSE
               TYPE = "ALL.FORMS"
            END
         END ELSE
            TYPE = "FORMS.LIST"
         END
      CASE FFLAG = "S" AND FNAME # ""
         TYPE = "SCREENS.ONE"
      CASE FFLAG = "F" AND FNAME # ""
         TYPE = "FORMS.ONE"
   END CASE
   RETURN
*
*---- Process Forms
20000 *
   IF DFLAG = 'Y' THEN
      CALL TU.INIT(ERROR)
   END
   BEGIN CASE
      CASE TYPE = "ALL.BASE.FORMS"
         GOSUB 31000
      CASE TYPE = "ALL.FORMS"
         GOSUB 21000
      CASE TYPE = "FORMS.LIST"
         GETLIST SLIST THEN
            EOF = 0
            LOOP
               READNEXT FNAME ELSE EOF = 1
            UNTIL EOF DO
               PCNAME = FNAME:'.':FFILE[1,3]
               MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME THEN
                  GOSUB 21200
               END ELSE
                  ERRMSG = 'CANNOT LOCATE CROSSREFERENCE FOR ':FFILE:' ':PCNAME
                  GOSUB 91000
               END
            REPEAT
         END
      CASE TYPE = "FORMS.ONE"
         PCNAME = FNAME:'.':FFILE[1,3]
         MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME THEN
            GOSUB 21200
         END ELSE
            ERRMSG = 'CANNOT LOCATE CROSSREFERENCE FOR ':FFILE:' ':PCNAME
            GOSUB 91000
         END
   END CASE
20099 *
   RETURN
*
*---- All forms
21000 *
   RESPONSE = ''
   LISTVAR = ''
   STMT = 'SELECT PCNAME_XREF WITH @ID LIKE ...':FFILE[1,3]
   UDTEXECUTE STMT CAPTURING RESPONSE RETURNING LISTVAR
**      IF ECD.RET.VALUE = "END" THEN GOTO 110
21100 *
   EOF = 0
   LOOP
      READNEXT PCNAME ELSE EOF = 1
   UNTIL EOF DO
      MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME ELSE
         ERRMSG = 'CANNOT LOCATE CROSSREFERENCE FOR ':FFILE:' ':PCNAME
         GOSUB 91000
         GOTO 21099
      END
21200 *
      ERR = 0
      SFILE = PCNX_FILE
      SCREEN.NAME = PCNX_ID
      OPEN '',SFILE TO SYS.SCREENS ELSE
         ERRMSG = "INVALID FILE NAME - ":SFILE
         GOSUB 91000; GOTO 21099
      END
      GOSUB 40000
21099 *
      IF TYPE = "FORMS.LIST" OR TYPE = "FORMS.ONE" THEN RETURN
   REPEAT
   RETURN
*
*---- Process Screens
30000 *
   IF DFLAG = 'Y' THEN
      CALL TU.INIT(ERROR)
   END
   BEGIN CASE
      CASE TYPE = "ALL.BASE.SCREENS"
         GOSUB 31000
      CASE TYPE = "ALL.SCREENS"
         SFILE = FFILE
         GOSUB 31100
      CASE TYPE = "SCREENS.LIST"
         GETLIST SLIST THEN
            SFILE = FFILE
            OPEN '',SFILE TO SYS.SCREENS ELSE
               ERRMSG = "INVALID FILE NAME - ":SFILE
               GOSUB 91000; GOTO 30099
            END
            GOSUB 31200
         END
      CASE TYPE = "SCREENS.ONE"
         SFILE = FFILE
         SCREEN.NAME = FNAME
         OPEN '',SFILE TO SYS.SCREENS ELSE
            ERRMSG = "INVALID FILE NAME - ":SFILE
            GOSUB 91000; GOTO 30099
         END
         GOSUB 40000
   END CASE
30099 *
   RETURN
*
*
*---- All base screens
31000 *
   SCNT = DCOUNT(SFILES,VM)
   FOR SPTR = 1 TO SCNT
      SFILE = SFILES<1,SPTR>
31100 *
      ERR = 0
      OPEN '',SFILE TO SYS.SCREENS ELSE
         ERRMSG = "INVALID FILE NAME - ":SFILE
         GOSUB 91000; GOTO 31099
      END
      PRINT @(0,23):'PROCESSING SCREEN FILE : ':SFILE
      RESPONSE = ''
      LISTVAR = ''
      STMT = 'SELECT ':SFILE:' WITH @ID LIKE ...*FLD'
      UDTEXECUTE STMT CAPTURING RESPONSE RETURNING LISTVAR
31200 *
      EOF = 0
      LOOP
         READNEXT SCREEN.NAME ELSE EOF = 1
         SCREEN.NAME = FIELD(SCREEN.NAME,"*",1)
      UNTIL EOF DO
         GOSUB 40000
      REPEAT
31099 *
      IF TYPE = "ALL.SCREENS" OR TYPE = "SCREENS.LIST" THEN RETURN
   NEXT SPTR
   RETURN
*
*---- UPDATE SCREEN FORM
40000 *
   PRINT @(0,23):'PROCESSING SCREEN : ':SFILE:' ':SCREEN.NAME
   BLD.TUF.SCRN = ''
   OLD.PCNAME = ""
   NEW.PCNAME = ""
   MATREADU ABLD.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*FLD" ELSE
      ERRMSG = 'CANNOT FIND SCREEN ':SCREEN.NAME:' IN ':SFILE
      GOSUB 91000
      RETURN
   END
   READU BLD.DEF.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*DEF" ELSE
      ERRMSG = 'CANNOT FIND SCREEN ':SCREEN.NAME:' IN ':SFILE
      GOSUB 91000
      RETURN
   END
   SCRN.ID = SCREEN.NAME:"*FLD"
*   GOSUB 11000
*      GOSUB 50000
*      BLD.PCNAME = PCNAME
   GOSUB 41000    ;* Update Gui Form
   WRITE BLD.TUF.SCRN ON SYS.SCREENS, SCREEN.NAME:"*TUF"
   MATWRITE ABLD.SCRN ON SYS.SCREENS, SCREEN.NAME:"*FLD"
   RETURN
*
*
*---- Rebuild Gui Form
41000 *
   JIS.FLAG = 0
   JIS.HMSG = ""
   CALL SCREEN.BUILD.TUF(MAT ABLD.SCRN,SCREEN.NAME,BLD.DEF.SCRN,BLD.PCNAME,BLD.TUF.SCRN,SYS.SCREENS,JIS.FLAG,JIS.HMSG)
   GUI.PROCESSED = 1
   IF SFILE # "PR4.SCREENS" AND SFILE # "PRS.SCREENS" THEN
      TFILE = FIELD(BLD.PCNAME,".",2):"FORMS"
      TNAME = FIELD(BLD.PCNAME,".",1)
      OPEN "",TFILE TO TUFORMS THEN
         WRITE BLD.TUF.SCRN ON TUFORMS, TNAME
         IF DFLAG = 'Y' THEN
            GOSUB 60000
         END
      END ELSE
         ERRMSG = "CANNOT OPEN FORMS FILE ":TFILE
         GOSUB 91000
      END
   END
   RETURN
*
*---- Update PC releated fields
*
50000 *
   OLD.BLD.PCNAME = BLD.PCNAME
   SCNF_PFX = FIELD(SFILE,".",1)
   IF SCNF_PFX = "M" THEN SCNF_PFX = "CBA"
   IF LEN(SCNF_PFX) # 3 THEN
      SCNF_PFX = SCNF_PFX[1,3]
   END
   LOCATE SCNF_PFX IN BASE.FORMS SETTING FND THEN
      SCNF_PFX = "PMC"
   END
* Generate new pcname if not an old one
*TEMP   IF OLD.BLD.PCNAME = "" THEN
   PCNAME = SCREEN.NAME
   CALL GET_PCNAME(PCNAME,SCNF_PFX,BNAME)
   IF PCNAME = "" THEN
      GOSUB 50100
      IF PCNAME = "" THEN GOTO 50099
   END
*TEMP   END ELSE
*TEMP      PCNAME = FIELD(OLD.BLD.PCNAME,".",1):".":SCNF_PFX
*TEMP      IF OLD.BLD.PCNAME # PCNAME THEN
*TEMP         MATREAD PCNX.REC FROM PCNAME_XREF, OLD.BLD.PCNAME THEN
*TEMP            IF PCNX_FILE = SFILE AND PCNX_ID = SCREEN.NAME THEN
*TEMP               MATWRITE PCNX.REC ON PCNAME_XREF, PCNAME
*TEMP               DELETE PCNAME_XREF, OLD.BLD.PCNAME
*TEMP            END ELSE
*TEMP               ERRMSG = "CANNOT UPDATE PCNAME FOR ":SFILE:" , ":SCREEN.NAME:" , ":OLD.BLD.PCNAME
*TEMP               GOSUB 91000
*TEMP            END
*TEMP         END ELSE
*TEMP    PCNX_FILE = SFILE
*TEMP    PCNX_ID = SCREEN.NAME
*TEMP    MATWRITE PCNX.REC ON PCNAME_XREF, PCNAME
* TEMP END
* TEMP END ELSE
* TEMP MATREAD PCNX.REC FROM PCNAME_XREF, OLD.BLD.PCNAME THEN
* TEMP   IF PCNX_FILE # SFILE OR PCNX_ID # SCREEN.NAME THEN
* TEMP     ERRMSG = "PCNAME_XREF NOT MATCHES SCREEN FOR ":SFILE:' , ':SCREEN.NAME:' , ':OLD.BLD.PCNAME
* TEMP     GOSUB 91000
* TEMP   END
* TEMP END
* TEMP END
* TEMP END
*    PRINT @(0,23):'PCNAME = (':PCNAME:')': ; INPUT ACK:
*
*---- Validate Pcname
50010*
   MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME THEN
      BEGIN CASE
         CASE PCNX_FILE # SFILE OR PCNX_ID # SCREEN.NAME
            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
            GOSUB 91000
            BNAME = FIELD(PCNAME,".",1)
            GOSUB 50100
            IF PCNAME = "" THEN GOTO 50099
            GOTO 50010
*         CASE PCNX_ID # NEW.SCREEN.NAME
*            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
*            GOSUB 91000
*            GOSUB 50100
*            IF PCNAME = "" THEN GOTO 50099
*            GOTO 50010
      END CASE
   END ELSE
      PCNX_FILE = SFILE
      PCNX_ID = SCREEN.NAME
      MATWRITE PCNX.REC ON PCNAME_XREF, PCNAME    ;* TEMP
   END
   NEW.BLD.PCNAME = PCNAME
50099*
   RETURN
*
* Prompt for new Pcname if can't determine new one automatically
50100*
   PMSG = "Enter PC Screen Name (":SCREEN.NAME:") :"
*      X = 0; Y = 21; TYP = 1; MAXL = 8;
   DEFAULT = FIELD(BNAME,".",1) "L#8"
   DEFAULT = TRIM(DEFAULT)
*      CALL EDIT.SUB
   PRINT @(0,23):CL
   PRINT @(0,23):PMSG:" DEFAULT = ":DEFAULT:" : ":
   INPUT VALUE
   IF VALUE = "END" OR VALUE = "" THEN
      PCNAME = DEFAULT:".":SCNF_PFX
   END ELSE
      PCNAME = TRIM(VALUE) : "." : SCNF_PFX
   END
   RETURN
*
*---- Download form
60000 *
   CALL TU.FORM.LOAD(TFILE,TNAME,"","",FRMHNDL,ERROR)
   BEGIN CASE
      CASE ERROR = 0
         SLEEP 1
         CALL TU.FORM.KILL(FRMHNDL,ERROR)
      CASE 1
         PRINT 'CANNOT LOAD FORM ':FORMID
   END CASE
   RETURN
*
*---- ERROR ROUTINE
*
90000 PRINT @(0,23):CL:ERRMSG ; RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN   ;* GUI
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999 *
   END
*
