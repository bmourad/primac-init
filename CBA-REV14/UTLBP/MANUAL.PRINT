*COPY>CPYLIB>COMMON3
***********************************************************************
*
* REVISION    - [08.0]
*
* PROGRAM - MANUAL.PRINT
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 01/21/86
*
* DESCRIPTION
*
* This program produces the user manual. The format of the manual is
* defined by the user manual maintenance function. A complete table of
* contents is also produced.
*
***********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>MANUAL
*COPY>CPYLIB>USER.MANUAL
*COPY>CPYLIB>NEW.BUILD.SCREEN
*COPY>CPYLIB>CHAR
*
*---- DEFINE VARIABLES
*
      DIM FORM(24)
      DIM XREF(24,3)
      DIM UMTBL.REC(10)
      MAT UMTBL.REC = ""
      EQU UMTBL.SECTION.ID    TO UMTBL.REC(1)
      EQU UMTBL.SECTION.DESC  TO UMTBL.REC(2)
      EQU UMTBL.SECTION.NO    TO UMTBL.REC(3)
      EQU UMTBL.SECTION.REV   TO UMTBL.REC(4)
      EQU UMTBL.SCREEN.ID     TO UMTBL.REC(5)
      EQU UMTBL.SCREEN.NAME   TO UMTBL.REC(6)
      EQU UMTBL.SCREEN.REV    TO UMTBL.REC(7)
      EQU UMTBL.PAGE.NO       TO UMTBL.REC(8)
*
*---- OPEN ALL FILES
*
      OPEN "","VOC" TO MD ELSE
         PRINT "CANNOT OPEN MD FILE"
         STOP
      END
      OPEN "","MANUAL" TO MANUAL ELSE
         PRINT "CANNOT OPEN MANUAL FILE"
         STOP
      END
      OPEN "","USER.MANUAL" TO USER.MANUAL ELSE
         PRINT "CANNOT OPEN USER.MANUAL FILE"
         STOP
      END
*
*---- INITIALIZATION
*
      PROMPT ""
      FIRST.COL = 0
      LAST.COL = 79
      FIRST.ROW = 0
      LAST.ROW = 22
      WIDTH = LAST.COL - FIRST.COL + 1
      TYP = 0
      CALL EDIT.SUB
      FILL = "#"
      SPACE.WIDTH = SPACE(WIDTH)
      SPACE.LM1 = SPACE(13)
      SPACE.LM2 = SPACE(5)
      TCLM1 = SPACE(35)
      TCLM2 = SPACE(43)
      DATA.DEF.FLAG = "Y"
      TCPG.TBL = ""
      TCPG.TBL<1> = "i"
      TCPG.TBL<2> = "ii"
      TCPG.TBL<3> = "iii"
      TCPG.TBL<4> = "iv"
      TCPG.TBL<5> = "v"
      TCPG.TBL<6> = "vi"
      TCPG.TBL<7> = "vii"
      TCPG.TBL<8> = "viii"
      TCPG.TBL<9> = "ix"
      TCPG.TBL<10> = "x"
      TCPG.TBL<11> = "xi"
      TCPG.TBL<12> = "xii"
      TCPG.TBL<13> = "xiii"
      TCPG.TBL<14> = "xiv"
      TCPG.TBL<15> = "xv"
*
*---- MAIN PROCESSING
*
100*
      TCPG = 0
      MAT FORM = SPACE.WIDTH
      SCRN = CS
      SCRN = SCRN:@(00,00):"C.B.A."
      SCRN = SCRN:@(26,00):"M A N U A L   P R I N T E R"
      SCRN = SCRN:@(72,00):OCONV(DATE(),"D2/")
      SCRN = SCRN:@(00,01):STR("-",WIDTH)
      SCRN = SCRN:@(00,22):STR("-",WIDTH)
      PRINT SCRN:
110*
      X = 10; Y = 7
      PMSG = CL:'Screen File Name -'
      MINL = 1; MAXL = 25
      O.R = "O"; DEFAULT = "M.SCREENS"
      CALL EDIT.SUB
      IF VALUE = 'END' THEN GOTO 99999
      READ ITEM FROM MD, VALUE ELSE
         ERRMSG = "Invalid file name. Try again! "
         GOSUB 90000
         GOTO 110
      END
      IF ITEM<1> # "F" THEN
         ERRMSG = "Invalid file name. Try again! "
         GOSUB 90000
         GOTO 110
      END
      OPEN '', VALUE TO M.SCREENS ELSE
         GOTO 110
      END
120*
      X = 10; Y = 9
      PMSG = CL:'Manual ID -'
      MINL = 1; MAXL = 8
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 99999
      IF VALUE[1,1] = "*" THEN
         SORT.FLAG = 1
         VALUE = VALUE[2,99]
      END ELSE
         SORT.FLAG = 0
      END
      MATREAD MANUAL.REC FROM MANUAL, VALUE ELSE
         ERRMSG = "Invalid Manual ID. Try again! "
         GOSUB 90000
         GOTO 120
      END
      SEL.MANUAL = VALUE
130*
      X = 10; Y = 11
      PMSG = CL:'Section ID, "ALL" or "REVISED" -'
      MINL = 1; MAXL = 8
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 99999
      SEL.SECTION = VALUE
      REV.DATE = ""
      BEGIN CASE
         CASE SEL.SECTION = "ALL"
         CASE SEL.SECTION = "REVISED"
            SEL.SECTION = "ALL"
            X = 55; Y = 11
            PMSG = "Revision date -"
            TYP =6; MINL = 1; MAXL = 8
            CALL EDIT.SUB
            IF VALUE = "END" THEN GOTO 99999
            REV.DATE = VALUE
         CASE 1
            MATREAD USER.MANUAL.REC FROM USER.MANUAL, SEL.MANUAL:"*":SEL.SECTION ELSE
               ERRMSG = "Invalid section for selected manual. Try again! "
               GOSUB 90000
               GOTO 130
            END
      END CASE
140*
      X = 10; Y = 13
      PMSG = CL:'Page Length (8.5 or 11) -'
      MINL = 1; MAXL = 3
      VALDAT = "8.5":VM:"11"
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 99999
      IF VALUE = 11 THEN
         LINES.PER.PAGE = 55
      END ELSE
         LINES.PER.PAGE = 40
      END
      PRINT
      PRINT
*
*---- GATHER ALL DATA TO BE PRINTED
*
      SELECT USER.MANUAL
150*
      READNEXT ID ELSE GOTO 160
      MANUAL.ID = FIELD(ID,"*",1)
      SECTION.ID = FIELD(ID,"*",2)
      IF MANUAL.ID # SEL.MANUAL THEN GOTO 150
      MATREAD USER.MANUAL.REC FROM USER.MANUAL, ID ELSE GOTO 150
      LOCATE UM.SECTION.NO IN UMTBL.SECTION.NO,1 BY "AR" SETTING PP ELSE NULL
      FOR N = 1 TO 10
         UMTBL.REC(N) = INSERT(UMTBL.REC(N),PP,0,0,"")
      NEXT N
      UMTBL.SECTION.ID<PP> = SECTION.ID
      UMTBL.SECTION.DESC<PP> = UM.SECTION.DESC
      UMTBL.SECTION.NO<PP> = UM.SECTION.NO
      UMTBL.SCREEN.ID<PP> = UM.SCREEN.ID
      UMTBL.SCREEN.NAME<PP> = UM.SCREEN.NAME
      UMTBL.SECTION.REV<PP> = UM.SECTION.REV
      UMTBL.SCREEN.REV<PP> = UM.SCREEN.REV
      SCNT = COUNT(UMTBL.SCREEN.ID<PP>,VM) + (UMTBL.SCREEN.ID<PP> # "")
      TPG = 0
      FOR SP = 1 TO SCNT
         IF UMTBL.SCREEN.ID<PP,SP> # "C" THEN
            TPG = TPG + 1
            UMTBL.PAGE.NO<PP,SP> = UM.SECTION.NO:".":TPG
         END
      NEXT SP
      GOTO 150
*
*---- PRODUCE REQUESTED MANUAL
*
160*
      GOSUB 1000
      SECT.CNT = COUNT(UMTBL.SECTION.NO,AM) + (UMTBL.SECTION.NO # "")
      FOR PP = 1 TO SECT.CNT
         SECTION.ID = UMTBL.SECTION.ID<PP>
         SECTION.REV = UMTBL.SECTION.REV<PP>
         IF SEL.SECTION # "ALL" AND SECTION.ID # SEL.SECTION THEN GOTO 195
         IF REV.DATE # "" AND SECTION.REV < REV.DATE THEN GOTO 195
         SECTION.DESC = UMTBL.SECTION.DESC<PP>
         PRINT @(0,18):CL:"Processing ":SECTION.DESC
         PRINT @(0,19):CL:
         SCNT = COUNT(UMTBL.SCREEN.ID<PP>,VM) + (UMTBL.SCREEN.ID<PP> # "")
         FOR SP = 1 TO SCNT
            PRINT "*":
            SCREEN.NAME = UMTBL.SCREEN.ID<PP,SP>
            SCREEN.REV = UMTBL.SCREEN.REV<PP,SP>
            MATREAD BLD.SCRN FROM M.SCREENS, SCREEN.NAME:"*FLD" ELSE
               MAT BLD.SCRN = ""
            END
            READ BLD.COMP.SCRN FROM M.SCREENS, SCREEN.NAME:"*FRM" ELSE GOTO 190
            READ BLD.DEF.SCRN FROM M.SCREENS, SCREEN.NAME:"*DEF" THEN
               GOSUB 6100
            END ELSE
               GOSUB 6000
            END
            GOSUB 7000
            PAGE.NO = UMTBL.PAGE.NO<PP,SP>
            GOSUB 2000
190      NEXT SP
195   NEXT PP
      GOTO 99999
*
*---- PRINT TABLE OF CONTENTS
*
1000*
      PRINTER ON
      TCPG = 0
      GOSUB 9100
      SECT.CNT = COUNT(UMTBL.SECTION.ID,AM) + (UMTBL.SECTION.ID # "")
      FOR PP = 1 TO SECT.CNT
         IF LINE.CNT + 2 >= LINES.PER.PAGE THEN
            GOSUB 9150
            GOSUB 9100
         END
         PRINT
         PRINT TCLM1:UMTBL.SECTION.NO<PP> "R#3":".  ":UMTBL.SECTION.DESC<PP>
         LINE.CNT = LINE.CNT + 2
         SCNT = COUNT(UMTBL.SCREEN.ID<PP>,VM) + (UMTBL.SCREEN.ID<PP> # "")
         FOR SP = 1 TO SCNT
            IF LINE.CNT >= LINES.PER.PAGE THEN
               GOSUB 9150
               GOSUB 9100
            END
            PRINT TCLM2:UMTBL.SCREEN.NAME<PP,SP> "L#35":UMTBL.PAGE.NO<PP,SP>
            LINE.CNT = LINE.CNT + 1
         NEXT SP
      NEXT PP
      GOSUB 9150
      PRINTER OFF
      RETURN
*
*--- PRINT SCREEN IMAGE
*
2000*
      PRINTER ON
      SUB.PAGE = 0
      GOSUB 9200
      PLINE = "+":STR("-",82):"+"
      PRINT SPACE.LM1:PLINE
      FOR ROW = 0 TO 23
         PRINT SPACE.LM1:"| ":FORM(ROW+1):" |"
      NEXT ROW
      PLINE = "+":STR("-",82):"+"
      PRINT SPACE.LM1:PLINE
      PRINT
      PRINT
      LINE.CNT = LINE.CNT + 28
      IF DATA.DEF.FLAG = "Y" THEN
         GOSUB 8000
      END
      GOSUB 9250
      PRINTER OFF
      RETURN
*
*---- DECOMPRESSION ROUTINE
*
6000*
      MAT FORM = SPACE.WIDTH
      COL = 0
      ROW = 0
      SLEN = LEN(BLD.COMP.SCRN)
      P = 1
      LOOP UNTIL P > SLEN DO
      CHR = BLD.COMP.SCRN[P,1]
      BEGIN CASE
         CASE CHR = CS
            P = P + 1
         CASE CHR = CHAR(16)        ;* ADDRESS COLUMN
            ACOL = SEQ(BLD.COMP.SCRN[P+1,1])
            COL = INT(ACOL/16) * 10 + MOD(ACOL,16)
            P = P + 2
         CASE CHR = CHAR(11)        ;* ADDRESS ROW
            AROW = SEQ(BLD.COMP.SCRN[P+1,1])
            ROW = AROW - 64
            P = P + 2
         CASE COL = 0
            FORM(ROW+1) = CHR:FORM(ROW+1)[2,WIDTH-1]
            P = P + 1
            COL = COL + 1
            IF COL > LAST.COL THEN
               COL = FIRST.COL
               ROW = ROW + 1
            END
         CASE 1
            FORM(ROW+1) = FORM(ROW+1)[1,COL]:CHR:FORM(ROW+1)[COL+2,WIDTH-COL-1]
            P = P + 1
            COL = COL + 1
            IF COL > LAST.COL THEN
               COL = FIRST.COL
               ROW = ROW + 1
            END
      END CASE
      REPEAT
      RETURN
*
6100*
      MAT FORM = SPACE.WIDTH
      DPTR = DCOUNT(BLD.DEF.SCRN,AM)
      FOR DEF = 1 TO DPTR
         Y = BLD.DEF.SCRN<DEF,1> + 1
         X = BLD.DEF.SCRN<DEF,2>
         STMT = BLD.DEF.SCRN<DEF,3>
         L = LEN(STMT)
         FORM(Y) = FORM(Y)[1,X]:STMT:FORM(Y)[X+L+1,WIDTH-X-1]
      NEXT DEF
      RETURN
*
*---- DISPLAY DATA FIELDS
*
7000*
      MAT XREF = ""
      PMSG.PTR = 0
      FOR FLD = 1 TO BLD.FIELD.CNT
         FX = BLD.SCRN(FLD)<1,B.X>
         IF FX = "" THEN GOTO 7090
         FY = BLD.SCRN(FLD)<1,B.Y>
         IF FY > LAST.ROW THEN GOTO 7090
         ML = BLD.SCRN(FLD)<1,B.MULTI.LN>
         IF ML = "" THEN ML = 1
         LS = BLD.SCRN(FLD)<1,B.MULTI.SP>
         IF LS = "" THEN LS = 1
         IF BLD.SCRN(FLD)<1,B.MASK> = "" THEN
            DMASK = "#"
         END ELSE
            DMASK = BLD.SCRN(FLD)<1,B.MASK>
         END
         PTYP = BLD.SCRN(FLD)<1,B.TYP>
         MAXL = BLD.SCRN(FLD)<1,B.MAXL>
         BEGIN CASE
            CASE PTYP = 6
               PMASK = STR(DMASK,2):"/":STR(DMASK,2):"/":STR(DMASK,2)
            CASE PTYP = 4
               PSCALER = BLD.SCRN(FLD)<1,B.SCALER>
               PMASK = STR(DMASK,MAXL-PSCALER-1):".":STR(DMASK,PSCALER)
            CASE 1
               PMASK = STR(DMASK,MAXL)
         END CASE
         IF BLD.SCRN(FLD)<1,B.PMSG> # "" THEN
            IF PMSG.PTR = 0 THEN
               PMSG.PTR = 1
               PMASK = BLD.SCRN(FLD)<1,B.PMSG>:" ":PMASK
               MAXL = LEN(PMASK)
            END ELSE
               PMASK = ""
               MAXL = 0
            END
         END
         FOR L = 1 TO ML
            BEGIN CASE
               CASE FX = 0
                  FORM(FY+(L-1)*LS+1) = PMASK:FORM(FY+(L-1)*LS+1)[MAXL+1,WIDTH-MAXL]
               CASE FX + MAXL = WIDTH
                  FORM(FY+(L-1)*LS+1) = FORM(FY+(L-1)*LS+1)[1,FX]:PMASK
               CASE 1
                  FORM(FY+(L-1)*LS+1) = FORM(FY+(L-1)*LS+1)[1,FX]:PMASK:FORM(FY+(L-1)*LS+1)[FX+MAXL+1,WIDTH-FX-MAXL]
            END CASE
         NEXT L
         XREF(FY+1,1) = FY
         XREF(FY+1,2)<1,-1> = FX
         XREF(FY+1,3)<1,-1> = BLD.EXT.REF<1,FLD>
7090*
      NEXT FLD
      RETURN
*
*---- PRINT DATA FIELD DEFINITION
*
8000*
      SORT.IDS = ""
      EXT.REFS = ""
      INT.REFS = ""
      FOR FLD = BLD.FIELD.CNT TO 1 STEP -1
         SORT.ID = BLD.SORT.ID<1,FLD>
         IF SORT.ID = "" THEN SORT.ID = "0"
         EXT.REF = BLD.EXT.REF<1,FLD>
         LOCATE SORT.ID IN SORT.IDS<1>,1 BY "AL" SETTING SID ELSE NULL
         SORT.IDS = INSERT(SORT.IDS,1,SID,0,SORT.ID)
         EXT.REFS = INSERT(EXT.REFS,1,SID,0,EXT.REF)
         INT.REFS = INSERT(INT.REFS,1,SID,0,FLD)
      NEXT FLD
      FOR FLD = 1 TO BLD.FIELD.CNT
         SORT.ID = SORT.IDS<1,FLD>
         EXT.REF = EXT.REFS<1,FLD>
         INT.REF = INT.REFS<1,FLD>
         READ FIELD.NAME FROM M.SCREENS, SCREEN.NAME:"*NAME":EXT.REF ELSE
            FIELD.NAME = "???  ROW = ":BLD.SCRN(INT.REF)<1,B.Y>:",  COL = ":BLD.SCRN(INT.REF)<1,B.X>
         END
         IF FIELD.NAME = "*" OR FIELD.NAME = "X" THEN GOTO 8090
         TYPE.FLAG = 1
         IF FIELD.NAME[1,1] = "*" AND FIELD.NAME[2,1] # "*" THEN
            TYPE.FLAG = 0
            FIELD.NAME = FIELD.NAME[2,99]
         END
         IF INDEX(FIELD.NAME,"SCREEN USE",1) # 0 THEN
            TYPE.FLAG = 0
         END
         READ HELP.MSG FROM M.SCREENS, SCREEN.NAME:"*HMSG":EXT.REF ELSE
            HELP.MSG = "****** NO HELP MESSAGE ******"
         END
         HCNT = COUNT(HELP.MSG<1,1>,SM) + (HELP.MSG<1,1> # "")
         PROMPT.MSG = BLD.SCRN(INT.REF)<1,B.PMSG>
         IF PROMPT.MSG = "" THEN
            LCNT = HCNT
         END ELSE
            LCNT = HCNT
         END
         IF LINE.CNT + LCNT+2 > LINES.PER.PAGE THEN
            GOSUB 9250
            GOSUB 9200
         END
         PRINT
         LINE.CNT = LINE.CNT + 1
         IF PROMPT.MSG = "" THEN
            PLINE = FIELD.NAME "L#30"
            FOR H = 1 TO HCNT
               PLINE = PLINE:SPACE(3):HELP.MSG<1,1,H> "L#70"
               IF H =1 AND SORT.FLAG THEN PLINE = PLINE:SORT.ID
               PRINT SPACE.LM2:PLINE
               LINE.CNT = LINE.CNT + 1
               PLINE = SPACE(30)
            NEXT H
         END ELSE
            PLINE = FIELD.NAME "L#30"
            PLINE = PLINE:SPACE(3):PROMPT.MSG "L#70"
            IF SORT.FLAG THEN PLINE = PLINE:SORT.ID
            PRINT SPACE.LM2:PLINE
            LINE.CNT = LINE.CNT + 1
            PLINE = SPACE(30)
            FOR H = 1 TO HCNT
               PLINE = PLINE:SPACE(3):HELP.MSG<1,1,H>
               PRINT SPACE.LM2:PLINE
               LINE.CNT = LINE.CNT + 1
               PLINE = SPACE(30)
            NEXT H
         END
         IF TYPE.FLAG THEN
            FIELD.TYPE = BLD.SCRN(INT.REF)<1,B.TYP>
            BEGIN CASE
               CASE FIELD.TYPE = "1"
                  T1 = "Alphanumeric"
               CASE FIELD.TYPE = "2"
                  T1 = "Alphabetic"
               CASE FIELD.TYPE = "3"
                  T1 = "Numeric"
               CASE FIELD.TYPE = "4"
                  T1 = "Decimal"
               CASE FIELD.TYPE = "6"
                  T1 = "Date"
               CASE FIELD.TYPE = "7"
                  T1 = "Pattern"
               CASE FIELD.TYPE = "8"
                  T1 = "Yes/No"
               CASE FIELD.TYPE = "9"
                  T1 = "Line reference"
               CASE 1
                  T1 = "Unknown"
            END CASE
            OPT.REQ = BLD.SCRN(INT.REF)<1,B.O.R>
            BEGIN CASE
               CASE OPT.REQ = "O"
                  T2 = "Optional"
               CASE 1
                  T2 = "Required"
            END CASE
            PLINE = SPACE(30):SPACE(3):T1:", ":T2
            PRINT SPACE.LM2:PLINE
            LINE.CNT = LINE.CNT + 1
         END
8090  NEXT FLD
      RETURN
*
*---- PRINT PAGE HEADINGS FOR TABLE OF CONTENTS
*
9100*
      PRINT CHAR(12):
      TCPG = TCPG + 1
      HLINE = MA.DESC
      LM = SPACE(INT((110-LEN(HLINE))/2))
      PRINT LM:HLINE
      PRINT
      PRINT
      PRINT
      PRINT
      HLINE = "Table of Contents"
      LM = SPACE(INT((110-LEN(HLINE))/2))
      PRINT LM:HLINE
      PRINT
      PRINT
      LINE.CNT = 8
      RETURN
*
*---- PRINT TABLE OF CONTENTS PAGE NUMBER
*
9150*
      FOR N = LINE.CNT + 1 TO LINES.PER.PAGE
         PRINT
      NEXT N
      PRINT
      PRINT
      PG = TCPG.TBL<TCPG>
      LM = SPACE(INT((110-LEN(PG))/2))
      PRINT LM:PG
      LINE.CNT = 99
      RETURN
*
*---- PRINT PAGE HEADINGS
*
9200*
      PRINT CHAR(12):
      HLINE = MA.DESC
      LM = SPACE(INT((110-LEN(HLINE))/2))
      PRINT LM:HLINE
      PRINT
      HLINE = SECTION.DESC
      LM = SPACE(INT((110-LEN(HLINE))/2))
      PRINT LM:HLINE
      PRINT
      PRINT
      PRINT
      LINE.CNT = 6
      RETURN
*
*---- PRINT PAGE NUMBER
*
9250*
      FOR N = LINE.CNT + 1 TO LINES.PER.PAGE
         PRINT
      NEXT N
      PRINT
      PRINT
      IF SUB.PAGE = 0 THEN
         PG = PAGE.NO
      END ELSE
         PG = PAGE.NO:".":SUB.PAGE
      END
      SUB.PAGE = SUB.PAGE + 1
      IF SCREEN.REV = "" THEN
         LM = SPACE(INT((110-LEN(PG))/2))
         PRINT LM:PG
      END ELSE
         LM = SPACE(INT((110-LEN(PG))/2)-LEN(SPACE.LM2)-8)
         PRINT SPACE.LM2:OCONV(SCREEN.REV,"D2/"):LM:PG
      END
      LINE.CNT = 99
      RETURN
*
*---- ERROR PROCESS
*
90000*
      PRINT @(0,23):CL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,23):CL:
      RETURN
*
*---- END OF PROGRAM
*
99999*
      PRINT @(-1):
   END
