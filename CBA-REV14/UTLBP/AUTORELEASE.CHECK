*T21762 diane 03/27/1997 * REV11 UPGRADE
OPEN "AUTORELEASE" TO AUTORELEASE ELSE PRINT "NO OPEN AUTORELEASE" ; STOP
OPEN "AUTORELEASE.ERRORS" TO AUTORELEASE.ERRORS ELSE 
  VERB = "CREATE-FILE AUTORELEASE.ERRORS 3"
  UDTEXECUTE VERB
  OPEN "AUTORELEASE.ERRORS" TO AUTORELEASE.ERRORS ELSE
    PRINT "UNABLE TO OPEN AUTORELEASE.ERRORS FILE AND CANNOT CREATE"
    STOP
  END
END
*
*
DEBUG.STAGE = 1
*   get the path names
*
***   BASEHOME is the CBA-REV11 path without the "/CBA-REV11" on the end
***   BASESOURCE is the client PMC acct path w/o the client acct name 
*                  no "/ADPLEX" on the end
*
ACCTLIST = "":@VM:"APS":@VM:"ARS":@VM:"FAS":@VM:"ICS":@VM:"JCS"
ACCTLIST = ACCTLIST:@VM:"JES":@VM:"OPS":@VM:"POS":@VM:"PRS":@VM:"PSS":@VM:"SAS"
NUMACCTS = DCOUNT(ACCTLIST,@VM)
ERRNBR=0
*
MISSLIST = "QF1":@VM:"QFILE":@VM:"AED.DOC":@VM:"CTLGTB":@VM:"ENGLISH"
MISSLIST=MISSLIST:@VM:"FRENCH":@VM:"UCONVOC":@VM:"ERRMSG":@VM:"LANGUAGE"
*  get local path
CURR.LOC = @PATH
PARTS = DCOUNT(CURR.LOC,"/")
CURRREV = "CBA-REV11"
REVLEVEL = "REV11"
*
* this user is running from the current release account
BASESOURCE=''
*SOURCENAME = FIELD(CURR.LOC,"/",PARTS)
SOURCENAME = REVLEVEL
FOR II = 1 TO PARTS-1
  IF II = 1 THEN
    BASESOURCE = FIELD(CURR.LOC,"/",II)
  END ELSE
    BASESOURCE = BASESOURCE:"/":FIELD(CURR.LOC,"/",II)
  END
NEXT II
*
*
200 *
*  get path for PROD
PRINT "the path below might be /adplex/prod/ADPLEX   "
PRINT "Enter path to production PMC account"
INPUT PRODPATH
PRINT "You entered ":PRODPATH
PRINT "Is this Correct (Y/N/X)? :":
INPUT RESP
IF RESP = "N" THEN GOTO 200
IF RESP = "X" THEN STOP
IF RESP # "Y" THEN GOTO 200
*
PARTS = DCOUNT(PRODPATH,"/")
BASEPROD=''
PRODNAME=FIELD(PRODPATH,"/",PARTS)
FOR II = 1 TO PARTS-1
  IF II = 1 THEN
    BASEPROD = FIELD(PRODPATH,"/",II)
  END ELSE
    BASEPROD = BASEPROD:"/":FIELD(PRODPATH,"/",II)
  END
NEXT II
*
300 *
*  get path for TRAIN
PRINT "the path below might be /adplex/train/TRAIN   "
PRINT "Enter path to training PMC account"
INPUT TRAINPATH
PRINT "You entered ":TRAINPATH
PRINT "Is this Correct (Y/N/X)? :":
INPUT RESP
IF RESP = "N" THEN GOTO 300
IF RESP = "X" THEN STOP
IF RESP # "Y" THEN GOTO 300
*
PARTS = DCOUNT(TRAINPATH,"/")
BASETRAIN=''
TRAINNAME=FIELD(TRAINPATH,"/",PARTS)
FOR II = 1 TO PARTS-1
  IF II = 1 THEN
    BASETRAIN = FIELD(TRAINPATH,"/",II)
  END ELSE
    BASETRAIN = BASETRAIN:"/":FIELD(TRAINPATH,"/",II)
  END
NEXT II
*
*
*  clear error file
ERRCTR=0
CLEARFILE AUTORELEASE.ERRORS
ACCTPTR = 1
LOOP
UNTIL ACCTPTR > NUMACCTS DO
  IF ACCTLIST<1,ACCTPTR> = "" THEN
    CURR.MOD = "PMC"
  END ELSE
    CURR.MOD = ACCTLIST<1,ACCTPTR>
  END
  GOSUB 1000 ;* PROCESS THIS ACCOUNT
  ACCTPTR = ACCTPTR + 1
REPEAT
*
IF ERRNBR > 0 THEN
  PRINT ERRNBR:" errors encountered.  Please review AUTORELEASE.ERRORS file"
  INPUT XXX
END
*
STOP
*
1000 *  PROCESS THIS MODULE
*
* set up ptrs to the accounts
IF CURR.MOD = "PMC" THEN
  SACCTNAME = SOURCENAME
  TACCTNAME = TRAINNAME
  PACCTNAME = PRODNAME
  SPATH = BASESOURCE:"/":SACCTNAME
  TPATH = BASETRAIN:"/":TACCTNAME
  PPATH = BASEPROD:"/":PACCTNAME
END ELSE
  SACCTNAME = SOURCENAME:"-":CURR.MOD
  TACCTNAME = TRAINNAME:"-":CURR.MOD
  PACCTNAME = PRODNAME:"-":CURR.MOD
END
*
SPATH = BASESOURCE:"/":SACCTNAME
TPATH = BASETRAIN:"/":TACCTNAME
PPATH = BASEPROD:"/":PACCTNAME
*
SPATHVOC=SPATH:"/VOC"
TPATHVOC=TPATH:"/VOC"
PPATHVOC=PPATH:"/VOC"
*
VERB = "SETFILE ":SPATHVOC:" SOURCEVOC OVERWRITING"
UDTEXECUTE VERB CAPTURING JUNK
OPEN "SOURCEVOC" TO SOURCEVOC ELSE
  PRINT "NOT ABLE TO OPEN SOURCE VOC WITH PATH"
  PRINT SPATHVOC
  RETURN
END
*
TRAINPRESENT=1 ; PRODPRESENT=1 
VERB = "SETFILE ":TPATHVOC:" TRAINVOC OVERWRITING"
UDTEXECUTE VERB CAPTURING JUNK
OPEN "TRAINVOC" TO TRAINVOC ELSE
  PRINT "NOT ABLE TO OPEN TRAIN VOC WITH PATH"
  PRINT TPATHVOC
  INPUT XX
  TRAINPRESENT=0
END
*
VERB = "SETFILE ":PPATHVOC:" PRODVOC OVERWRITING"
UDTEXECUTE VERB CAPTURING JUNK
OPEN "PRODVOC" TO PRODVOC ELSE
  PRINT "NOT ABLE TO OPEN PRODUCTION VOC WITH PATH"
  PRINT PPATHVOC
  INPUT XX
  PRODPRESENT=0
END
*
*
SELECT SOURCEVOC
DONE = 0
LOOP
  READNEXT ID ELSE DONE = 1
UNTIL DONE DO
  READ REC FROM SOURCEVOC,ID THEN
    * determine what kind of item this is
    UCASENAME = OCONV(ID,"MCU")
    LOCATE ID IN MISSLIST<1>,1 SETTING POS ELSE POS = 0
    IF ID = UCASENAME AND NOT(POS) THEN
      IF REC<1> = "PQN" THEN
        * PROCESS LIST3
        GOSUB 2000
      END ELSE
        ATTR1=REC<1>
        IF ATTR1[1,1] = 'F' OR ATTR1[1,3] = "DIR" THEN
          * this could be a file pointer
          FPTR.TYPE=''
          IF INDEX(REC,"/",1) THEN
            * this is a ptr with paths
            IF REC<2>[1,1]='/' THEN
              * this is an absolute ptr fully specified.
              FPTR.TYPE = 'A'
            END ELSE
              IF REC<2>[1,3]="../" THEN
                * this is a relative ptr
                FPTR.TYPE = 'R'
              END
            END
          END ELSE
            IF REC<2> # "" AND REC<2> = ID THEN
              * this is a local file ptr
              FPTR.TYPE = 'L'
            END
          END
          IF FPTR.TYPE # "" THEN
            BEGIN CASE
              CASE FPTR.TYPE = 'L'
                * process list 4
                GOSUB 3000
              CASE FPTR.TYPE = 'R'
                * process list 2
                GOSUB 3000
              CASE FPTR.TYPE = 'A'
                * process list 1
                GOSUB 3000
            END CASE
          END
        END
      END
    END ; * IF UCASE NAME CHECK
  END ;*  READ
REPEAT
RETURN
*
2000 *
*
IF TRAINPRESENT THEN
  READ REC2 FROM TRAINVOC,ID THEN
    * this item exist in both of the accts
    IF REC2 = REC THEN
      * the records match now skip it and go to next
    END ELSE
      *  the records do not match.
      LOC = "TRAIN"
      GOSUB 2500
      IF DO.WRITE THEN
        IF DEBUG.STAGE THEN
          PRINT "1 PQN ":REC:" --ID :":ID:" TRAIN"
          INPUT XXX
        END ELSE
          WRITE REC ON TRAINVOC,ID
        END
      END
    END
  END ELSE
    * this item does not exist in the cba acct
    IF DEBUG.STAGE THEN
      PRINT "2 PQN ":REC:" --ID :":ID:" TRAIN"
      INPUT XXX
    END ELSE
      WRITE REC ON TRAINVOC,ID
    END
  END
END
IF PRODPRESENT THEN
  READ REC2 FROM PRODVOC,ID THEN
    * this item exist in both of the accts
    IF REC2 = REC THEN
      * the records match now skip it and go to next
    END ELSE
      *  the records do not match.
      LOC = "PROD"
      GOSUB 2500
      IF DO.WRITE THEN
        IF DEBUG.STAGE THEN
          PRINT "3 PQN ":REC:" --ID :":ID:" PROD"
          INPUT XXX
        END ELSE
          WRITE REC ON PRODVOC,ID
        END
      END
    END
  END ELSE
    * this item does not exist in the cba acct
    IF DEBUG.STAGE THEN
      PRINT "4 PQN ":REC:" --ID :":ID:" PROD"
      INPUT XXX
    END ELSE
      WRITE REC ON PRODVOC,ID
    END
  END
END
RETURN
*
2500 *
*
DO.WRITE=0
NUMLINES = DCOUNT(REC,@AM)
IF NUMLINES > 15 THEN NUMLINES = 15
PRINT
PRINT "CURR MOD ":CURR.MOD:"  LOC ":LOC:"  ID ":ID
FOR JJJ = 1 TO NUMLINES
  PRINT REC<JJJ>[1,38]"L#38":" ":REC2<JJJ>[1,38]
NEXT JJJ
PRINT
2510 *
PRINT "Your choice C-Copy left to right or E-Error :":
INPUT ERRRESP
BEGIN CASE
  CASE ERRRESP = 'C'
  CASE ERRRESP = 'E'
  CASE 1
    GOTO 2510
END CASE
IF RESP = 'C' THEN
  DO.WRITE=1
END ELSE
  ERRNBR=ERRNBR+1
  ERRMSG = "ITEM MISSMATCH BETWEEN SOURCE AND ":LOC:" ":ID
  WRITE ERRMSG ON AUTORELEASE.ERRORS,ERRNBR
END
*
RETURN            
*
3000 *
*
IF TRAINPRESENT THEN
  LOC='TRAIN'
  READ REC2 FROM TRAINVOC,ID THEN
    * this item exist in both of the accts
    SKIPCHECK = 1
    IF REC = REC2 THEN
      BEGIN CASE
        CASE FPTR.TYPE = 'L'
          * this is ok for it to match
        CASE FPTR.TYPE = 'R'
          * relative paths probably should not match and this will be
          *   a problem
          SKIPCHECK = 0
        CASE FPTR.TYPE = 'A'
          * absolute ptrs should probably match -- ok
      END CASE
    END ELSE
      SKIPCHECK = 0
    END
    IF SKIPCHECK THEN
      * the records match now skip it and go to next
    END ELSE
      *  the records do not match.
      MREC=REC
      MREC2=REC2
      DO.SP.WRITE=0
      BEGIN CASE
        CASE FPTR.TYPE = "R"
          GOSUB 4000 ;* ADJUST RELATIVE PTRS
        CASE FPTR.TYPE = "A"
          IF REC # REC2 THEN
            MREC = ''
          END
        CASE FPTR.TYPE = 'L'
          IF REC # REC2 THEN
            MREC=''
          END
      END CASE
      IF MREC= REC2 THEN
        * the modified records match
        IF DO.SP.WRITE THEN
          IF DEBUG.STAGE THEN
            PRINT "5  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" TRAIN ":FPTR.TYPE
          END ELSE
            WRITE MREC ON TRAINVOC,ID
          END
        END
        DO.SP.WRITE=0
      END ELSE
        GOSUB 3500
        IF DO.WRITE THEN
          IF DEBUG.STAGE THEN
            PRINT "6  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" TRAIN ":FPTR.TYPE
          END ELSE
            WRITE REC ON TRAINVOC,ID
          END
        END
      END
    END
  END ELSE
    * this item does not exist in the DEST acct
    IF FPTR.TYPE # "L" THEN
      DO.SP.WRITE = 0 
      BEGIN CASE
        CASE FPTR.TYPE = "R"
          GOSUB 4000 ;* ADJUST RELATIVE PTRS
      END CASE
      IF DO.SP.WRITE THEN
        IF DEBUG.STAGE THEN
          PRINT "7  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" TRAIN ":FPTR.TYPE
        END ELSE
          WRITE MREC ON TRAINVOC,ID
        END
      END ELSE
        IF DEBUG.STAGE THEN
          PRINT "8  ":" ORIG.REC-->":REC:" --ID :":ID:" TRAIN ":FPTR.TYPE
        END ELSE
          WRITE REC ON TRAINVOC,ID
        END
      END       
    END ELSE
      ERRNBR=ERRNBR+1
      ERRMSG = "Unable to fix local file on ":LOC:" ":ID
      WRITE ERRMSG ON AUTORELEASE.ERRORS,ERRNBR
    END
  END
END
IF PRODPRESENT THEN
  LOC='PROD'
  READ REC2 FROM PRODVOC,ID THEN
    * this item exist in both of the accts
    SKIPCHECK = 1
    IF REC = REC2 THEN
      BEGIN CASE
        CASE FPTR.TYPE = 'L'
          * this is ok for it to match
        CASE FPTR.TYPE = 'R'
          * relative paths probably should not match and this will be
          *   a problem
          SKIPCHECK = 0
        CASE FPTR.TYPE = 'A'
          * absolute ptrs should probably match -- ok
      END CASE
    END ELSE
      SKIPCHECK = 0
    END
    IF SKIPCHECK THEN
      * the records match now skip it and go to next
    END ELSE
      *  the records do not match.
      MREC=REC
      MREC2=REC2
      DO.SP.WRITE=0
      BEGIN CASE
        CASE FPTR.TYPE = "R"
          GOSUB 4000 ;* ADJUST RELATIVE PTRS
        CASE FPTR.TYPE = 'A'
          IF REC # REC2 THEN
            MREC = ''
          END
        CASE FPTR.TYPE = "L"
          IF REC # REC2 THEN
            MREC = ''
          END
      END CASE
      IF MREC = REC2 THEN
        * the modified records match
        IF DO.SP.WRITE THEN
          IF DEBUG.STAGE THEN
            PRINT "9  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" PROD ":FPTR.TYPE
          END ELSE
            WRITE MREC ON PRODVOC,ID
          END
        END
        DO.WRITE=0
      END ELSE
        GOSUB 3500
        IF DO.WRITE THEN
          IF DEBUG.STAGE THEN
            PRINT "10  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" PROD ":FPTR.TYPE
          END ELSE
            WRITE REC ON PRODVOC,ID
          END
        END
      END
    END
  END ELSE
    * this item does not exist in the cba acct
    IF FPTR.TYPE # "L" THEN
      DO.SP.WRITE = 0 
      BEGIN CASE
        CASE FPTR.TYPE = "R"
          GOSUB 4000 ;* ADJUST RELATIVE PTRS
      END CASE
      IF DO.SP.WRITE THEN
        IF DEBUG.STAGE THEN
          PRINT "11  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" PROD ":FPTR.TYPE
        END ELSE
          WRITE MREC ON PRODVOC,ID
        END
      END ELSE
        IF DEBUG.STAGE THEN
          PRINT "12  ":MREC:" ORIG.REC-->":REC:" --ID :":ID:" PROD ":FPTR.TYPE
        END ELSE
          WRITE REC ON PRODVOC,ID
        END
      END
    END ELSE
      ERRNBR=ERRNBR+1
      ERRMSG = "Unable to fix local file on ":LOC:" ":ID
      WRITE ERRMSG ON AUTORELEASE.ERRORS,ERRNBR
    END
  END
END
RETURN
*
3500 *
*
DO.WRITE=0
NUMLINES = DCOUNT(REC,@AM)
IF NUMLINES > 15 THEN NUMLINES = 15
PRINT
PRINT "CURR MOD ":CURR.MOD:"  LOC ":LOC:"  ID ":ID
FOR JJJ = 1 TO NUMLINES
  PRINT REC<JJJ>[1,38]"L#38":" ":REC2<JJJ>[1,38]
NEXT JJJ
PRINT
3510 *
PRINT "Your choice C-Copy left to right or E-Error :":
INPUT RESP
BEGIN CASE
  CASE RESP = 'C'
  CASE RESP = 'E'
  CASE 1
    GOTO 3510
END CASE
IF RESP = 'C' THEN
  IF FPTR.TYPE = 'L' THEN
    ERRNBR=ERRNBR+1
    ERRMSG = "Unable to fix local file on ":LOC:" ":ID
    WRITE ERRMSG ON AUTORELEASE.ERRORS,ERRNBR
  END ELSE
    DO.WRITE=1
  END
END ELSE
  ERRNBR=ERRNBR+1
  ERRMSG = "ITEM MISSMATCH BETWEEN SOURCE AND ":LOC:" ":ID
  WRITE ERRMSG ON AUTORELEASE.ERRORS,ERRNBR
END
*
RETURN            
*
4000 * ADJUST RELATIVE PTRS records that attr 2 starts with ../
*
*   a relative ptr would look like ../ADPLEX-JCS/JOB  
*   it should have 3 parts our job is to fix the middle
NUM.P = DCOUNT(MREC<2>,"/")
NUM.P2 = DCOUNT(MREC2<2>,"/")
NUM.3 = DCOUNT(MREC<3>,"/")
IF NUM.P = 3 AND NUM.3 = 3 THEN
  PART1 = FIELD(MREC<2>,"/",1)
  PART2 = FIELD(MREC<2>,"/",2)
  PART3 = FIELD(MREC<2>,"/",3)
*IF PART3 = "ACCT.TYPE" AND LOC = 'TRAIN' THEN DEBUG
  ATT33 = FIELD(MREC<3>,"/",3)
  PART12 = FIELD(MREC2<2>,"/",1)
  PART22 = FIELD(MREC2<2>,"/",2)
  PART32 = FIELD(MREC2<2>,"/",3)
  IF INDEX(PART2,"-",1) THEN
    * this is a sub module ptr
    * extract the module
    TEMP.MOD = FIELD(PART2,"-",2)
    IF LOC = "TRAIN" THEN
      NEW.MIDDLE = TRAINNAME:"-":TEMP.MOD
    END ELSE
      NEW.MIDDLE = PRODNAME:"-":TEMP.MOD
    END
  END ELSE
    * this is a pmc module ptr
    TEMP.MOD = ''
    IF LOC = "TRAIN" THEN
      NEW.MIDDLE = TRAINNAME
    END ELSE
      NEW.MIDDLE = PRODNAME
    END
  END
  IF MREC2 # "" THEN
    MREC<2> = PART12:"/":NEW.MIDDLE:"/":PART32
*
    AT3.12 = FIELD(MREC2<3>,"/",1)
    AT3.32 = FIELD(MREC2<3>,"/",3)
    MREC<3> = AT3.12:"/":NEW.MIDDLE:"/":AT3.32  
  END ELSE
    MREC<2> = PART1:"/":NEW.MIDDLE:"/":PART3    
    MREC<3> = PART1:"/":NEW.MIDDLE:"/":ATT33
    DO.SP.WRITE=1
  END
END
*
RETURN
