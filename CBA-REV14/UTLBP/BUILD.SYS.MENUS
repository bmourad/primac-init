      SUBROUTINE BUILD.SYS.MENUS
********************************************************************
* REVISION    - [08.1]
********************************************************************
*COPY>CPYLIB>COM1
*COPY>UTL.CPYLIB>COM.BUILD.PMC.SYS
*COPY>UTL.CPYLIB>BUILD.PMC.SYS
*COPY>UTL.CPYLIB>SYS.MENUS
*COPY>UTL.CPYLIB>SYS.PROCS
*COPY>UTL.CPYLIB>SYS.PROGRAMES
*COPY>CPYLIB>CHAR
      DIM MENU(7,15)
*
      CLEARFILE SYS.MENUS
*
      MAT SMR.REC = ""
      MFPTR = 11
      SMR.M.FILE = "PRIMAC.MENUS"
      MENU(1,1) = "M.MASTER"
      MENU(2,1) = "PMC"
      MENU(3,1) = 2
      MENU(1,2) = MENU(1,1)
      MENU(2,2) = MENU(2,1)
      MENU(3,2) = MENU(3,1)
      MPTR = 2
      GOSUB 1000
      MFPTR = 10
      SMR.M.FILE = "EASY.MENUS"
      MENU(1,1) = "M.CBA"
      MENU(2,1) = "CBA"
      MENU(3,1) = 1
      MENU(1,2) = MENU(1,1)
      MENU(2,2) = MENU(2,1)
      MENU(3,2) = MENU(3,1)
      MPTR = 2
      GOSUB 1000
      GOTO 99999
1000  READ MENU(5,MPTR) FROM SYS.REC(MFPTR), MENU(1,MPTR) ELSE
         ERRMSG = "Cannot locate menu - " : MENU(1,MPTR)
         GOSUB 91000; GOTO 1999
      END
      IF MENU(5,MPTR)<1,1> # MENU(1,MPTR-1) THEN
         ERRMSG = "Illegal backward link from menu - " : MENU(1,MPTR) : " TO MENU - " : MENU(1,MPTR-1)
         GOSUB 91000; GOTO 1999
      END
      ERRMSG = "Processing menu - " : MENU(1,MPTR); GOSUB 90000
      MENU(4,MPTR) = 0
      MENU(6,MPTR) = DCOUNT(MENU(5,MPTR),AM)
      FOR MENU(7,MPTR) = 2 TO MENU(6,MPTR)
         MVERB = MENU(5,MPTR)<MENU(7,MPTR),1>
         BEGIN CASE
         CASE MVERB = "C"
         CASE MVERB[1,1] = "*"
            MENU(4,MPTR) = MENU(4,MPTR) + 1
            ERRMSG = "NOT INSTALLED function in menu (":MENU(1,MPTR):"), ":MVERB
            GOSUB 91500
         CASE MVERB[1,2] = "M."
            MENU(4,MPTR) = MENU(4,MPTR) + 1
            MPTR = MPTR + 1
            MENU(1,MPTR) = MVERB
            MENU(2,MPTR) = MENU(2,MPTR-1)
            MENU(3,MPTR) = MENU(3,MPTR-1)
            GOSUB 1000
            MPTR = MPTR - 1
         CASE MVERB[5,5] = "LOGTO"
            MENU(4,MPTR) = MENU(4,MPTR) + 1
            READ ITEM FROM SYS.MD(MENU(3,MPTR)), MVERB ELSE
               ERRMSG = "Cannot locate menu pointer (":MENU(1,MPTR):"), ":MVERB
               GOSUB 91000; GOTO 1130
            END
            ERRMSG = "Invalid menu logto pointer (":MENU(1,MPTR):") , ":MVERB
            BEGIN CASE
            CASE ITEM<1> # "PQN"
               GOSUB 91000
            CASE ITEM<2> # "T C"
               GOSUB 91000
            CASE ITEM<3>[1,1] # "H"
               GOSUB 91000
            CASE TRIM(ITEM<3>[2,99]) # "LOGTO ":SYS.ACCTS(2):"-":MVERB[1,3]
               GOSUB 91000
            CASE ITEM<4> # "P"
               GOSUB 91000
            CASE 1
               ERRMSG = ""
               LOCATE MVERB[1,3] IN PMC.ACCTS SETTING FPTR THEN
                  IF FPTR > LINES THEN FPTR = 1
                  MPTR = MPTR + 1
                  MENU(2,MPTR) = MVERB[1,3]
                  MENU(1,MPTR) = "M." : MENU(2,MPTR)
                  MENU(3,MPTR) = FPTR
                  GOSUB 1000
                  MPTR = MPTR - 1
               END ELSE
                  ERRMSG = "Invalid menu logto system (":MENU(1,MPTR):") , ":MVERB
                  GOSUB 91000
               END
            END CASE
1130*
         CASE 1
            MENU(4,MPTR) = MENU(4,MPTR) + 1
            READ ITEM FROM SYS.MD(MENU(3,MPTR)), MVERB ELSE
               ERRMSG = "Cannot locate menu pointer (":MENU(1,MPTR):"), ":MVERB
               GOSUB 91000; GOTO 1149
            END
            IF ITEM<1> # "PQN" THEN
               ERRMSG = "Invalid menu pointer (":MENU(1,MPTR):"), ":MVERB
               GOSUB 91000; GOTO 1149
            END
            SMR.VERB = TRIM(ITEM<2>)
            CHR = SMR.VERB[1,1]
            BEGIN CASE
            CASE CHR = "["
               IF COUNT(ITEM,AM) > 1 THEN
                  ERRMSG = "Invalid menu PROC call (":MENU(1,MPTR):"), ":MVERB
                  GOSUB 91000; GOTO 1141
               END
               S = INDEX(SMR.VERB," ",1)
               SMR.FILE = SMR.VERB[2,S-2]
               SMR.VERB = TRIM(FIELD(SMR.VERB[S+1,99],"]",1))
               IF SMR.VERB = "" THEN SMR.VERB = MVERB
               LOCATE SMR.FILE[1,3] IN PMC.ACCTS SETTING FPTR THEN
                  READ ITEM FROM CBA.FILES(2,FPTR), SMR.VERB ELSE
                     ERRMSG = "Cannot locate menu PROC item (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1141
                  END
                  IF CUST.P.OK THEN
                     READ DUMMY FROM CUST.PROCS, SMR.VERB THEN
                        ERRMSG = "Should be a customer menu PROC pointer (":MENU(1,MPTR):"), ":MVERB
                        GOSUB 91000; GOTO 1141
                     END
                  END
                  PF.INIT = PMC.ACCTS<FPTR>
               END ELSE
                  IF NOT(CUST.P.OK) THEN
                     ERRMSG = "Invalid menu PROC file (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1141
                  END
                  IF SMR.FILE[1,LEN(SYS.ACCTS(2))] # SYS.ACCTS(2) THEN
                     ERRMSG = "Invalid menu PROC file (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1141
                  END
                  READ ITEM FROM CUST.PROCS, SMR.VERB ELSE
                     ERRMSG = "Cannot locate menu PROC item (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1141
                  END
                  PF.INIT = SYS.ACCTS(2)
               END
               IF ITEM<1> # "PQN" THEN
                  ERRMSG = "Invalid menu PROC item (":MENU(1,MPTR):"), ":MVERB
                  GOSUB 91000; GOTO 1141
               END
               PROC.ID = SMR.VERB : "!" : PF.INIT
               MATREAD SPC.REC FROM SYS.PROCS, PROC.ID ELSE
                  ERRMSG = "Cannot locate (":PROC.ID:") for menu PROC item (":MENU(1,MPTR):"), ":MVERB
                  GOSUB 91000; GOTO 1141
               END
               LOCATE MENU(2,MPTR) IN SPC.C.ACCT<1> BY "AL" SETTING FPTR ELSE
                  INS MENU(2,MPTR) BEFORE SPC.C.ACCT<1,FPTR>
                  INS "" BEFORE SPC.C.MD<1,FPTR>
               END
               LOCATE MVERB IN SPC.C.MD<1,FPTR> SETTING PPTR ELSE
                  SPC.C.MD<1,FPTR,PPTR> = MVERB
               END
               MATWRITE SPC.REC ON SYS.PROCS, PROC.ID
               SMR.PREV = MENU(1,MPTR-1)
               SMR.MENU = MENU(1,MPTR)
               SMR.NUM = MENU(4,MPTR)
               SMR.DESC = MENU(5,MPTR)<MENU(7,MPTR),3>
               SMR.DOC = MENU(5,MPTR)<MENU(7,MPTR),2>
               SMR.TYPE = "P"
               MATWRITE SMR.REC ON SYS.MENUS, MVERB:"!":MENU(2,MPTR)
               SMR.FILE = ""; SMR.BUFF = ""
1141*
            CASE CHR = "H"
               SMR.VERB = TRIM(SMR.VERB[2,99])
               IF SMR.VERB[1,3] = "SP-" THEN
                  SMR.TYPE = "S"
                  ERRMSG = "Invalid menu SPOOLER PROC (":MENU(1,MPTR):"), ":MVERB
                  PTR = 2; SMR.VERB = ""
                  LOOP
                     NO.ERR = 0
                     LINE = TRIM(ITEM<PTR>[2,99])
                     BEGIN CASE
                     CASE ITEM<PTR>[1,1] # "H"
                     CASE ITEM<PTR+1>[1,1] # "P"
                     CASE LINE[1,10] = "SP-SUSPEND"
                        NO.ERR = 1
                        SMR.VERB<1,-1> = "SP-SUSPEND"
                        SMR.BUFF<1,-1> = TRIM(LINE[11,99])
                     CASE LINE[1,9] = "SP-ASSIGN"
                        VAR = TRIM(LINE[10,99])
                        IF VAR[1,1] = "=" THEN
                           NO.ERR = 1
                           SMR.VERB<1,-1> = "SP-ASSIGN"
                           SMR.BUFF<1,-1> = TRIM(VAR[2,99])
                        END
                     CASE LINE[1,9] = "SP-DEVICE"
                        NO.ERR = 1
                        SMR.VERB<1,-1> = "SP-DEVICE"
                        SMR.BUFF<1,-1> = TRIM(LINE[10,99])
                     CASE LINE[1,9] = "SP-RESUME"
                        NO.ERR = 1
                        SMR.VERB<1,-1> = "SP-RESUME"
                        SMR.BUFF<1,-1> = TRIM(LINE[10,99])
                     END CASE
                  WHILE NO.ERR DO
                     PTR = PTR + 2
                  REPEAT
               END ELSE
                  ERRMSG = "Invalid menu PROGRAM call (":MENU(1,MPTR):"), ":MVERB
                  SMR.TYPE = "B"
                  PTR = 4
               END
               BEGIN CASE
               CASE COUNT(ITEM,AM) > PTR + 1
                  GOSUB 91000
               CASE ITEM<PTR-1> # "P"
                  GOSUB 91000
               CASE ITEM<PTR> # 'MV %1 "RETURN"' AND ITEM<PTR> # 'MV %1 "MASTER"'
                  GOSUB 91000
               CASE ITEM<PTR+1>[1,1] # "H"
                  GOSUB 91000
               CASE TRIM(ITEM<PTR+1>[2,99]) # "EASY.MENU"
                  GOSUB 91000
               CASE ITEM<PTR+2> # "P"
                  GOSUB 91000
               CASE 1
                  IF SMR.TYPE = "B" THEN
                     MATREAD SPG.REC FROM SYS.PROGRAMES, SMR.VERB ELSE
                        ERRMSG = "Cannot locate (":SMR.VERB:") for menu PROG item (":MENU(1,MPTR):"), ":MVERB
                        GOSUB 91000; GOTO 1142
                     END
                     LOCATE MENU(2,MPTR) IN SPG.C.ACCT<1> BY "AL" SETTING FPTR ELSE
                        INS MENU(2,MPTR) BEFORE SPG.C.ACCT<1,FPTR>
                        INS "" BEFORE SPG.C.MD<1,FPTR>
                     END
                     LOCATE MVERB IN SPG.C.MD<1,FPTR> SETTING PPTR ELSE
                        SPG.C.MD<1,FPTR,PPTR> = MVERB
                     END
                     MATWRITE SPG.REC ON SYS.PROGRAMES, SMR.VERB
                  END
                  ERRMSG = ""
                  SMR.PREV = MENU(1,MPTR-1)
                  SMR.MENU = MENU(1,MPTR)
                  SMR.NUM = MENU(4,MPTR)
                  SMR.DESC = MENU(5,MPTR)<MENU(7,MPTR),3>
                  SMR.DOC = MENU(5,MPTR)<MENU(7,MPTR),2>
                  MATWRITE SMR.REC ON SYS.MENUS, MVERB:"!":MENU(2,MPTR)
                  SMR.FILE = ""; SMR.BUFF = ""
               END CASE
1142*
            CASE CHR = "M"
               SMR.BUFF = ""
               PTR = 2; ERRMSG = ""
               LOOP WHILE ITEM<PTR>[1,4] = "MV %" DO
                  MV.NO = TRIM(FIELD(ITEM<PTR>[5,99]," ",1))
                  IF NOT(NUM(MV.NO)) THEN
                     PTR = 9999
                     ERRMSG = "Invalid menu BUFFER pointer (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1143
                  END
                  IF MV.NO < 1 OR MV.NO > 9 THEN
                     PTR = 9999
                     ERRMSG = "Invalid menu BUFFER pointer (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1143
                  END
                  SMR.BUFF<1,MV.NO> = TRIM(ITEM<PTR>[6,99])
                  BEGIN CASE
                  CASE SMR.BUFF<1,MV.NO>[1,1] = '"'
                     SMR.BUFF<1,MV.NO> = FIELD(SMR.BUFF<1,MV.NO>[2,99],'"',1)
                  CASE SMR.BUFF<1,MV.NO>[1,1] = "'"
                     SMR.BUFF<1,MV.NO> = FIELD(SMR.BUFF<1,MV.NO>[2,99],"'",1)
                  END CASE
                  PTR = PTR + 1
1143*
               REPEAT
               BEGIN CASE
               CASE ERRMSG # ""
               CASE ITEM<PTR>[1,1] # "H"
                  ERRMSG = "Invalid menu PROGRAM call (":MENU(1,MPTR):"), ":MVERB
                  GOSUB 91000
               CASE 1
                  SMR.VERB = TRIM(ITEM<PTR>[2,99])
                  MATREAD SPG.REC FROM SYS.PROGRAMES, SMR.VERB ELSE
                     ERRMSG = "Cannot locate (":SMR.VERB:") for menu PROG item (":MENU(1,MPTR):"), ":MVERB
                     GOSUB 91000; GOTO 1148
                  END
                  LOCATE MENU(2,MPTR) IN SPG.C.ACCT<1> BY "AL" SETTING FPTR ELSE
                     INS MENU(2,MPTR) BEFORE SPG.C.ACCT<1,FPTR>
                     INS "" BEFORE SPG.C.MD<1,FPTR>
                  END
                  LOCATE MVERB IN SPG.C.MD<1,FPTR> SETTING PPTR ELSE
                     SPG.C.MD<1,FPTR,PPTR> = MVERB
                  END
                  MATWRITE SPG.REC ON SYS.PROGRAMES, SMR.VERB
                  SMR.PREV = MENU(1,MPTR-1)
                  SMR.MENU = MENU(1,MPTR)
                  SMR.NUM = MENU(4,MPTR)
                  SMR.DESC = MENU(5,MPTR)<MENU(7,MPTR),3>
                  SMR.DOC = MENU(5,MPTR)<MENU(7,MPTR),2>
                  SMR.TYPE = "B"
                  MATWRITE SMR.REC ON SYS.MENUS, MVERB:"!":MENU(2,MPTR)
                  SMR.FILE = ""; SMR.BUFF = ""
1148*
               END CASE
            CASE 1
               ERRMSG = "Unable to process menu pointer (":MENU(1,MPTR):"), ":MVERB
               GOSUB 91000
            END CASE
1149*
         END CASE
      NEXT MENU(7,MPTR)
1999  RETURN
90000 PRINT @(0,23) : ERRMSG : CL :
      RETURN
91000 WRITE ERRMSG ON SYS.ERRORS, ERR.SEQ
      ERR.SEQ = ERR.SEQ + 1
      RETURN
91500 WRITE ERRMSG ON SYS.WARNINGS, WRN.SEQ
      WRN.SEQ = WRN.SEQ + 1
      RETURN
99999 RETURN
   END
