OPEN '','INV.WHSE.OLD' TO INV.WHSE.OLD ELSE STOP 201
OPEN '','INV.WHSE.LOC.OLD' TO INV.WHSE.LOC.OLD ELSE STOP 201
OPEN "","JOB" TO JOB ELSE STOP 201
OPEN "","INV.JOB.STATS.OLD" TO INV.JOB.STATS.OLD ELSE STOP 201
OPEN '','ROLL.SKID.INFO.TEMP' TO ROLL.SKID.INFO.TEMP ELSE STOP 'ROLL.SKID.INFO.TEMP'
OPEN '','CATEGORY' TO CATEGORY ELSE STOP 'CATEGORY'
OPEN '','CATEGORY.OLD' TO CATEGORY.OLD ELSE STOP 'CATEGORY.OLD'
OPEN '','RS.PO.XREF' TO RS.PO.XREF ELSE STOP 'RS.PO.XREF'
OPEN '','CONVERSION.ERRORS' TO CONVERSION.ERRORS ELSE STOP 201
*
*COPY>ICS.CPYLIB>INV.WHSE.REV11
*COPY>ICS.CPYLIB>INV.WHSE.LOC.REV11
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>CATEGORY.REV11
;*
;* verify if CATG.R.S.ID is set correctly
;*
SELECT CATEGORY
PRINT @(-1)
PRINT @(1,5):"VERIFYING CATEGORY DATA":@(-4)
ERR = ""; ERR.CNT=0
DONE=0 ; CNT=0     
LOOP
  READNEXT CATG.ID ELSE DONE=1
UNTIL DONE DO 
  MATREAD R11.CATG.REC FROM CATEGORY.OLD,CATG.ID THEN
    CNT+=1                   
    IF REM(CNT,100)=0 THEN   
      PRINT @(45,5):CNT:@(-4)
    END                      
    IF R11.CATG.R.S.ID='N' THEN
      IF R11.CATG.TYPE#'L' AND R11.CATG.TYPE#'S' AND R11.CATG.TYPE#'RL' AND R11.CATG.TYPE#'PC' THEN
        ERR<-1>='R11.CATG.R.S.ID is not set correctly.'
      END
    END
  END
REPEAT
;*
;* verify INV.WHSE on-hand and fifo qty's
;*
PRINT @(1,5):"VERIFYING INV.WHSE DATA":@(-4)
SELECT INV.WHSE.OLD
DONE=0 ; CNT=0
ERR.CNT=DCOUNT(ERR.CNT,@AM)
LOOP
  READNEXT IWH.ID ELSE DONE = 1
UNTIL (DONE) DO
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  ERRMSG=''
  MATREAD R11.IWH.REC FROM INV.WHSE.OLD,IWH.ID THEN
    TOT.ORG.FI = SUM(R11.IWH.ORG.FI<1>) 
    TOT.RSV.FI = SUM(R11.IWH.RSV.FI<1>)
    TOT.QTY.FI = SUM(R11.IWH.QTY.FI<1>)
    IF R11.IWH.ON.HAND="" THEN R11.IWH.ON.HAND=0
    IF R11.IWH.RESV="" THEN R11.IWH.RESV=0
    IF TOT.QTY.FI#R11.IWH.ON.HAND THEN
      ERRMSG<1,-1>="SUM OF CURRENT FIFO QTY'S DOES NOT MATCH IWH.ON.HAND"
    END
    IF (TOT.QTY.FI-TOT.RSV.FI)#R11.IWH.RESV THEN
      ERRMSG<1,-1>='Calculated reserved qty based on fifo buckets does not match IWH.RESV'
    END
    ORG.CNT = DCOUNT(R11.IWH.ORG.FI<1>,VM)
    CURR.CNT = DCOUNT(R11.IWH.QTY.FI<1>,VM)
    RSV.CNT = DCOUNT(R11.IWH.RSV.FI<1>,VM)
    IF ORG.CNT # CURR.CNT OR ORG.CNT # RSV.CNT OR  CURR.CNT # RSV.CNT THEN
      ERRMSG<1,-1> = "Different number of fifo buckets detected "
    END
    FINDSTR "-" IN R11.IWH.ORG.FI<1> SETTING F THEN
      ERRMSG<1,-1> = "Negative qty located in IWH.ORG.FI bucket "
    END
    FINDSTR "-" IN R11.IWH.RSV.FI<1> SETTING F THEN
      READ ERR FROM CONVERSION.ERRORS,IWH.ID ELSE ERR=""
      ERRMSG<1,-1> = "Negative qty located in IWH.RSV.FI bucket "
    END
    FINDSTR "-" IN R11.IWH.QTY.FI<1> SETTING F THEN
      ERRMSG<1,-1> = "Negative qty located in IWH.QTY.FI bucket "
    END
  END
  IF ERRMSG THEN
    ERR.CNT+=1
    ERR<ERR.CNT>=ERRMSG
    ERR=INSERT(ERR,ERR.CNT,1,0,IWH.ID)
  END
REPEAT
;*
;* INV.WHSE vs INV.WHSE.LOC (onhand and inprocess)
;*
ERR.CNT=DCOUNT(ERR,@AM)
PRINT @(1,5):'VERIFYING INV.WHSE.LOC':@(-4)
CMD = "SSELECT INV.WHSE.LOC.OLD"
UDTEXECUTE CMD CAPTURING MSG
TOT.WHSE.ONHAND=0
TOT.WHSE.INPRCS=0
FIRST.TIME=1
DONE=0 ; CNT=0
LOOP
  READNEXT IWLO.ID ELSE DONE=1
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  ERRMSG=''
  IWH.ID = OCONV(IWLO.ID,"G!2") 
  LOC=OCONV(IWLO.ID,"G2!1")
  ;* populate list of all known locations for this
  ;* INV.WHSE record. Used later in GEN.IWLO.CNV
  ;* and restored back to original state at the
  ;* end of the conversion
  MATREAD R11.IWH.REC FROM INV.WHSE.OLD,IWH.ID THEN
    IF (FIRST.TIME) THEN
      OLD.IWH.ID= IWH.ID
      FIRST.TIME=0
    END
    IF IWH.ID#OLD.IWH.ID THEN
      GOSUB CHECK.1
      IF ERRMSG THEN
        FIND OLD.IWH.ID IN ERR SETTING FLD THEN
          ERR<FLD>=ERR<FLD>:@VM:ERRMSG<1>
        END ELSE
          ERR.CNT+=1
          ERR<ERR.CNT>=ERRMSG<1>
          ERR=INSERT(ERR,ERR.CNT,1,0,OLD.IWH.ID)
        END
        ERRMSG=''
      END
      TOT.WHSE.ONHAND=0
      TOT.WHSE.INPRCS=0
      OLD.IWH.ID = IWH.ID
    END
    MATREAD R11.IWLO.REC FROM INV.WHSE.LOC.OLD,IWLO.ID THEN
      TOT.WHSE.ONHAND +=R11.IWLO.LOC.ON.HAND
      TOT.WHSE.INPRCS +=R11.IWLO.LOC.INPRCS
    END
  END
  OLD.IWH.ID=IWH.ID
UNTIL (DONE) DO REPEAT
GOSUB CHECK.1
IF ERRMSG THEN
  FIND OLD.IWH.ID IN ERR SETTING FLD THEN
    ERR<FLD>=ERR<FLD>:@VM:ERRMSG<1>
  END ELSE                               
    ERR.CNT+=1
    ERR<ERR.CNT>=ERRMSG<1>
    ERR=INSERT(ERR,ERR.CNT,1,0,IWH.ID)
  END
END
;*
;* verify INV.WHSE.LOC for roll/skid items
;*
ERR.CNT=DCOUNT(ERR,@AM)
PRINT @(1,5):'VERIFYING ROLL/SKID DATA':@(-4)
CMD = 'SSELECT INV.WHSE.LOC.OLD WITH IWLO_R_S_ID#"" AND WITH M.LINE#"FNGD"'
UDTEXECUTE CMD CAPTURING MSG
DONE=0 ; CNT=0
LOOP
  READNEXT IWLO.ID ELSE DONE=1
UNTIL (DONE) DO
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  ERRMSG=''
  MATREAD R11.IWLO.REC FROM INV.WHSE.LOC.OLD,IWLO.ID THEN
    TOT.RS.QTY = SUM(R11.IWLO.CURR.WT<1>)
    IF R11.IWLO.LOC.ON.HAND="" THEN R11.IWLO.LOC.ON.HAND=0
    IF TOT.RS.QTY # R11.IWLO.LOC.ON.HAND THEN
      ERRMSG<1,-1>="Sum of all roll/skid current quantities=":TOT.RS.QTY:" and IWLO.LOC.ON.HAND=":R11.IWLO.LOC.ON.HAND
    END
  END
  IWH.ID=OCONV(IWLO.ID,"G!2")
  IF ERRMSG THEN
    FIND IWH.ID IN ERR SETTING FLD THEN   
      ERR<FLD>=ERR<FLD>:@VM:ERRMSG<1>
    END ELSE                                  
      ERR.CNT+=1                              
      ERR<ERR.CNT>=ERRMSG<1>
      ERR=INSERT(ERR,ERR.CNT,1,0,IWH.ID)  
    END                                       
  END
REPEAT
*
WRITE ERR ON CONVERSION.ERRORS,"PRE.CNV.VERIFY"
CALL CONV.RPT("PRE.CNV.VERIFY")
*
;*
;* verify JOB vs. INV.JOB.STATS reserves
;*
PRINT @(1,5):'VERIFYING INV.JOB.STATS':@(-4)
SELECT INV.JOB.STATS.OLD
DONE=0 ; ERR.CNT=0; ERR=''
CNT=0
LOOP
  READNEXT IJS.ID ELSE DONE=1
UNTIL DONE DO
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  ERRMSG=''
  MATREAD INV.JS.REC FROM INV.JOB.STATS.OLD,IJS.ID THEN
    IF IJS.JOB.QTY+0#SUM(IJS.FI.QTY<1>)+0 THEN
      ERRMSG<1,-1>="IJS.JOB.QTY=":IJS.JOB.QTY:" and SUM(IJS.FI.QTY)=":SUM(IJS.FI.QTY<1>)
    END
    CONO=IJS.ID[1,3]
    PROD=OCONV(IJS.ID,"G!1")[4,99]
    WHSE=OCONV(IJS.ID,"G1!1")
    JOB.NO=OCONV(IJS.ID,"G2!1")
    JOB.ID=CONO:JOB.NO
    MATREAD JOB.REC FROM JOB,JOB.ID THEN
      FOUND=0;EOL=0;BEG.POS=1
      LOOP
        LOCATE PROD IN JOB.RESV.MATL<1>,BEG.POS SETTING PPOS THEN
          IF JOB.RESV.WHSE<1,PPOS>=WHSE THEN
            FOUND=1 ;EOL=1
            IF IJS.JOB.QTY+0#JOB.RESV.QTY<1,PPOS>+0 THEN
              ERRMSG<1,-1>='There is a mismatch between JOB reserves and INV.JOB.STATS reserves '
            END
          END ELSE
*lross      BEG.POS+=1
            BEG.POS=PPOS+1
          END
        END ELSE
          EOL=1
        END
      UNTIL EOL DO REPEAT
    END
    IF (ERRMSG) THEN
      ERR.CNT+=1
      ERR<ERR.CNT>=ERRMSG
      ERR=INSERT(ERR,ERR.CNT,1,0,IJS.ID)
    END
  END
REPEAT
*
ERRMSG=DCOUNT(ERR,@VM)
PRINT @(1,5):'SELECTING JOBS FOR RESERVE CHECK':@(-4)
CMD='SELECT JOB WITH JOB.RESV.MATL#""'
UDTEXECUTE CMD CAPTURING MSG
DONE=0 ; CNT=0
PRINT @(1,5):'CHECKING JOB RESERVES FOR JOB':@(-4)
LOOP
  READNEXT JOB.ID ELSE DONE=1
UNTIL DONE DO
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  ERRMSG=''
  MATREAD JOB.REC FROM JOB,JOB.ID THEN
    RCNT=DCOUNT(JOB.RESV.MATL,@VM)
    FOR RR=1 TO RCNT
      IJS.ID=CONO:JOB.RESV.MATL<1,RR>:"!":JOB.RESV.WHSE<1,RR>
      MATREAD INV.JS.REC FROM INV.JOB.STATS.OLD,IJS.ID THEN
        IF IJS.JOB.QTY+0=JOB.RESV.QTY<1,RR>+0 AND SUM(IJS.FI.QTY<1>)+0=JOB.RESV.QTY<1,RR>+0 THEN
          NULL
        END ELSE
          ERRMSG<1,-1>="Mismatch between JOB and INV.JOB.STATS reserves detected."
          FIND IJS.ID IN ERR SETTING FLD THEN
            ERR=INSERT(ERR,FLD,2,0,ERRMSG)
          END ELSE
            ERR.CNT+=1
            ERR<ERR.CNT>=ERRMSG
            ERR=INSERT(ERR,ERR.CNT,1,0,IJS.ID)
          END
        END
      END
    NEXT RR
  END
REPEAT
WRITE ERR ON CONVERSION.ERRORS,"CHECK.JOB.RESERVES"
CALL CONV.RPT("CHECK.JOB.RESERVES")
;*
;* check for missing rolls
;*
PRINT @(1,5):'COPYING ROLL.SKID.INFO TO ROLL.SKID.INFO.TEMP':@(-4)
UDTEXECUTE 'COPY FROM ROLL.SKID.INFO TO ROLL.SKID.INFO.TEMP ALL OVERWRITING'
PRINT @(1,5):"SELECTING INV.WHSE.LOC.OLD":@(-4)
SELECT INV.WHSE.LOC.OLD
PRINT @(1,5):'CHECKING FOR MISSING ROLLS INFO':@(-4)
DONE=0;ERR='';ERR.CNT=0
CNT=0
LOOP
  READNEXT IWLO.ID ELSE DONE=1
UNTIL DONE DO 
  CNT+=1                   
  IF REM(CNT,100)=0 THEN   
    PRINT @(45,5):CNT:@(-4)
  END                      
  MATREAD R11.IWLO.REC FROM INV.WHSE.LOC.OLD,IWLO.ID THEN
    ERRMSG=''
    RCNT=DCOUNT(R11.IWLO.R.S.ID,@VM)
    FOR RR=1 TO RCNT
      RID=CONO:R11.IWLO.R.S.ID<1,RR>
      READ CHECK FROM ROLL.SKID.INFO.TEMP,RID ELSE
        READ CHECK FROM RS.PO.XREF,RID ELSE
          ERRMSG<1,-1>='Cannot find information about roll/skid ':RID
        END
      END
    NEXT RR
    IF ERRMSG THEN
      ERR.CNT+=1
      ERR<ERR.CNT>=ERRMSG
      ERR=INSERT(ERR,ERR.CNT,1,0,IWLO.ID)
    END
  END
REPEAT
WRITE ERR ON CONVERSION.ERRORS,"MISSING.ROLL.INFO"
CALL CONV.RPT("MISSING.ROLL.INFO")
GOTO 99999
*
*************************************************************************
*
************
CHECK.1: 
************
*
MATREAD R11.IWH.REC FROM INV.WHSE.OLD,OLD.IWH.ID THEN 
  IF R11.IWH.ON.HAND="" THEN R11.IWH.ON.HAND=0
  IF R11.IWH.INPRCS="" THEN R11.IWH.INPRCS=0
  IF TOT.WHSE.ONHAND="" THEN TOT.WHSE.ONHAND=0
  IF TOT.WHSE.INPRCS="" THEN TOT.WHSE.INPRCS=0
  IF R11.IWH.ON.HAND # TOT.WHSE.ONHAND THEN
    ERRMSG<1,-1>="Sum of all location on hand quantities=":TOT.WHSE.ONHAND:" and IWH.ON.HAND=":R11.IWH.ON.HAND
  END
  IF R11.IWH.INPRCS # TOT.WHSE.INPRCS THEN
    ERRMSG<1,-1>="Sum of location inprcs quantites=":TOT.WHSE.INPRCS:" and IWH.INPRCS=":R11.IWH.INPRCS
  END
END
RETURN
99999 
END
