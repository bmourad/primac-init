OPEN '','INV.WHSE' TO INV.WHSE ELSE STOP 'INV.WHSE'
OPEN '','CATEGORY' TO CATEGORY ELSE STOP 'CATEGORY'
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE STOP 'INV.JOB.STATS'
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE STOP 'INV.WHSE.LOC'
OPEN '','JOB.MATL' TO JOB.MATL ELSE STOP 'JOB.MATL'
OPEN '','ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE STOP 'ROLL.SKID.INFO'
OPEN '','INV.TRAN.HIST' TO INV.TRAN.HIST ELSE STOP 'INV.TRAN.HIST'
OPEN '','TRANSFER' TO TRANSFER ELSE STOP 'TRANSFER'
*
PRINT @(-1)
PRINT @(5,5):'Please input base path':
INPUT BASE.PATH
;*                                            
;*
;* create conversion supporting files         
;*                                            
PRINT @(-1)
PRINT @(1,5): "CREATING CONVERSION SUPPORTING FILES":@(-4)
*
MODULO=FILEINFO(INV.WHSE,5)
UDTEXECUTE "CREATE.FILE INV.WHSE.OLD ":MODULO  CAPTURING MSG
UDTEXECUTE "CREATE.FILE INV.WHSE.TEMP ":MODULO CAPTURING MSG
MODULO=FILEINFO(INV.WHSE.LOC,5)
UDTEXECUTE "CREATE.FILE INV.WHSE.LOC.OLD ":MODULO  CAPTURING MSG
MODULO=FILEINFO(ROLL.SKID.INFO,5)
UDTEXECUTE "CREATE.FILE ROLL.SKID.INFO.TEMP ":MODULO CAPTURING MSG
MODULO=FILEINFO(CATEGORY,5)
UDTEXECUTE "CREATE-FILE CATEGORY.OLD ":MODULO  CAPTURING MSG
MODULO=FILEINFO(INV.JOB.STATS,5)
UDTEXECUTE "CREATE-FILE INV.JOB.STATS.OLD ":MODULO CAPTURING MSG
MODULO=FILEINFO(JOB.MATL,5)
UDTEXECUTE "CREATE-FILE JOB.MATL.OLD ":MODULO CAPTURING MSG
MODULO=FILEINFO(INV.TRAN.HIST,5)
MODULO=FILEINFO(TRANSFER,5)                                 
UDTEXECUTE "CREATE.FILE TRANSFER.OLD ":MODULO  CAPTURING MSG
UDTEXECUTE "CREATE-FILE INV.TRAN.HIST.OLD ":MODULO CAPTURING MSG
UDTEXECUTE "CREATE-FILE IWH.IWLO.XREF 3" CAPTURING MSG
UDTEXECUTE "CREATE.FILE CONVERSION.ERRORS 11" CAPTURING MSG
UDTEXECUTE "CREATE.FILE RS.PO.XREF 11"  CAPTURING MSG
UDTEXECUTE "CREATE.FILE ITH.INAH.XREF 11" CAPTURING MSG
UDTEXECUTE 'CREATE.FILE ICA.XREF 11' CAPTURING MSG
UDTEXECUTE 'CREATE.FILE IRA.XREF 11' CAPTURING MSG
;*                                            
;* create new R12 files                       
;*                                            
PRINT @(1,5):"CREATING NEW REV12 FILES":@(-4)
;*
FILES=''
FILES<1>="INV.WHSE.LOC.TEMP"
FILES<2>="INV_RECEIPTS"
FILES<3>="INV_RECEIPTS_TEMP"
FILES<4>="INV_RECP_WHSE"
FILES<5>="INV_RECP_WHSE_TEMP"
FILES<6>="INV_SERIAL"
FILES<7>="INV_SERIAL_TEMP"
FILES<8>="INV_AUDIT_HIST"
FILES<9>="INV_AUDIT_HIST_TEMP"
FILES<10>="INV_AUDIT_BAL"
FILES<11>="DAILY_STOCK"
FILES<12>="DAILY_TRANSFER"
FILES<13>="INV_AUDIT_TAG"
FILES<14>="INV_SERIAL_DELETED"
FILES<15>="PO.RSKI.XREF.DELETED"
FILES<16>="PO.MAN.XREF.DELETED"
FILES<17>="PHY.XREF"
FILES<18>="MILL_TO_SERIAL"
FILES<19>='MILL_TO_SERIAL_TEMP'
FILES<20>='FNGD_AUDIT_TAG'
*
*
*CMD='LOGTO /custdata/slpc/SLPC-ICS'
CMD ='LOGTO ':BASE.PATH:"-ICS"
UDTEXECUTE CMD
*
FCNT=DCOUNT(FILES,@AM)
FOR F=1 TO FCNT
  IF FILES<F>='INV_AUDIT_HIST' THEN
    MODULO=FILEINFO(INV.TRAN.HIST,5)
  END ELSE
    MODULO=79
  END
  CMD = "CREATE.FILE ":FILES<F>:" ":MODULO
  UDTEXECUTE CMD
NEXT F
*
*CMD='LOGTO /custdata/slpc/SLPC'
CMD='LOGTO ':BASE.PATH
DATA '1','X'
UDTEXECUTE CMD CAPTURING MSG
OPEN '','VOC' TO VOC ELSE STOP 201 'VOC'
*
PRINT @(1,5):"CREATING REV12 FILE POINTERS":@(-4)
;*
CNT=DCOUNT(BASE.PATH,"/")
CUST=FIELD(BASE.PATH,"/",CNT,1)
FOR F=1 TO FCNT
  REC=''
  REC<1>="F"
*  REC<2>="../SLPC-ICS/":FILES<F>
*  REC<3>="../SLPC-ICS/D_":FILES<F>
  REC<2>='../':CUST:"-ICS/":FILES<F>
  REC<3>='../':CUST:"-ICS/D_":FILES<F>
  WRITE REC ON VOC,FILES<F>  
NEXT F
*
;* move dictionaries needed for conversion
;*
PRINT @(1,5):"COPYING DICITIONARIES":@(-4)
;*
CMD='COPY FROM DICT INV.WHSE.LOC TO DICT INV.WHSE.LOC.OLD ALL OVERWRITING'
UDTEXECUTE CMD CAPTURING MSG
CMD='COPY FROM DICT JOB.MATL TO DICT JOB.MATL.OLD ALL OVERWRITING'
UDTEXECUTE CMD CAPTURING MSG
CMD='COPY FROM DICT INV.WHSE TO DICT INV.WHSE.OLD ALL OVERWRITING '
UDTEXECUTE CMD CAPTURING MSG
;*
;* create conversion CPYLIBs
;*
PRINT @(1,5):"COPYING CPYLIBs":@(-4)
;*
CMD='COPY FROM ICS.CPYLIB INV.WHSE TO ICS.CPYLIB INV.WHSE.REV11'
UDTEXECUTE CMD
CMD='COPY FROM ICS.CPYLIB INV.WHSE.LOC TO ICS.CPYLIB INV.WHSE.LOC.REV11'
UDTEXECUTE CMD
END
