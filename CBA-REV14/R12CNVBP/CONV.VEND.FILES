*
*   > COMMON STATEMENTS
*
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - R12CNVBP
* PROGRAM     - CONV.VEND.FILES
* BY          - CHRIS MYKLEBUST - PRIMAC SYSTEMS
* DATE        - 05/06/2002
* DESCRIPTION -
*
*T25755 cmykleb 05/06/2002 * Pgm to convert the VEND.PO.STATS and
*                            VEND.PROD.STATS to match them to the new
*                            format for the seq number associated with each
*                            line. The new field should be separated with
*                            the whse field or the OPO.PROD.LINE field by
*                            an at sign "@" and the seq number.
*ENDDOC
**********************************************
*   CPYLIBS
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>CPYLIB>CHAR
*
*   FILE OPENS
   OPEN "VEND.PO.STATS" TO VEND.PO.STATS ELSE
      ERRMSG = "NO VEND.PO.STATS FILE"
      GOSUB 91000
      STOP
   END
   OPEN "VEND.PROD.STATS" TO VEND.PROD.STATS ELSE
      ERRMSG = "NO VEND.PROD.STATS FILE"
      GOSUB 91000
      STOP
   END
   OPEN "OUTSIDE.PO" TO OUTSIDE.PO ELSE
      ERRMSG = "NO OUTSIDE.PO FILE"
      GOSUB 91000
      STOP
   END
*
*   INITIALIZATION SECTION
*
   DONE=0
   CTR=0
   VERB = "COUNT VEND.PROD.STATS"
   UDTEXECUTE VERB CAPTURING JUNK
   NUMITEMS = FIELD(JUNK<3>," ",1)
   NEWMOD = NUMITEMS / 10
   VERB = "CREATE.FILE HOLD_VEND.PROD.STATS ":NEWMOD
   UDTEXECUTE VERB
   OPEN "HOLD_VEND.PROD.STATS" TO HOLD_VEND.PROD.STATS ELSE
      ERRMSG="UNABLE TO OPEN HOLD_VEND.PROD.STATS FILE"
      GOSUB 91000
      STOP
   END
   VERB = "COUNT VEND.PO.STATS"
   UDTEXECUTE VERB CAPTURING JUNK
   NUMITEMS = FIELD(JUNK<3>," ",1)
   NEWMOD = NUMITEMS / 10
   VERB = "CREATE.FILE HOLD_VEND.PO.STATS ":NEWMOD
   UDTEXECUTE VERB
   OPEN "HOLD_VEND.PO.STATS" TO HOLD_VEND.PO.STATS ELSE
      ERRMSG="UNABLE TO OPEN HOLD_VEND.PO.STATS FILE"
      GOSUB 91000
      STOP
   END
*
*   BODY OF PROGRAM SECTION
*
   DONE=0
   SELECT OUTSIDE.PO
   ERRMSG=""
   LOOP
      READNEXT ID ELSE DONE=1
   UNTIL DONE DO
      MATREAD OPO.REC FROM OUTSIDE.PO,ID THEN
         NUM.JOB=DCOUNT(OPO.JOB.NO,@VM)
         IS.BLANK=0
         FOR II = 1 TO NUM.JOB WHILE NOT(IS.BLANK)
            IF OPO.PROD.SEQ<1,II> = "" THEN
               IS.BLANK=1
            END
         NEXT II
         IF IS.BLANK THEN
            MSG1 = "PO # ":ID[4,99]:" has seq # missing unable to process"
            IF ERRMSG = "" THEN
               ERRMSG = MSG1
            END ELSE
               ERRMSG := CHAR(10):MSG1
            END
         END
      END
   REPEAT
   IF ERRMSG # "" THEN
      ERRMSG := CHAR(10):"NO RECORDS PROCESSED"
      PRINT ERRMSG
      STOP
   END
   DONE=0
   SELECT OUTSIDE.PO
   ERRMSG=""
   ID.LIST=""
   LOOP
      READNEXT ID ELSE DONE=1
   UNTIL DONE DO
      MATREAD OPO.REC FROM OUTSIDE.PO,ID THEN
         NUM.JOB=DCOUNT(OPO.JOB.NO,@VM)
         KEY = ID[1,3]:OPO.VEND.NO:"!O!":ID[4,99]
         READ XX FROM HOLD_VEND.PO.STATS,KEY ELSE
            MATREAD VPS.REC FROM VEND.PO.STATS,KEY THEN
               GOSUB PROCESS.VPS.REC
            END
         END
      END
   REPEAT
   IF ID.LIST # "" THEN
      ID.LIST = "LIST OF POS THAT HAVE A VEND.PO.STATS PROBLEM":CHAR(10):ID.LIST
      PRINT ID.LIST
   END
   STOP
*
PROCESS.VPS.REC: 
*
   PTR=1
   FND.ATTR=""
   FOR II = 1 TO NUM.JOB
      JOBNO = OPO.JOB.NO<1,II>
      OLD.PROD = OPO.PROD.LINE<1,II>
      CURR.PROD = OPO.PROD.LINE<1,II>:"@":OPO.PROD.SEQ<1,II>
      IF OPO.PROD.SEQ<1,II> # "" THEN
         LOCATE JOBNO IN VPS.PROD<1>,PTR SETTING POS THEN
            CONTINUE.SEARCH=1
            FOR KK = POS TO NUM.JOB WHILE CONTINUE.SEARCH
               IF VPS.WHSE<1,II> = OLD.PROD THEN
                  CONTINUE.SEARCH=0
                  VPS.WHSE<1,II>=CURR.PROD
                  FND.ATTR<1,II>=1
               END
            NEXT KK
         END
         PTR = PTR+1
         GOSUB PROCESS.VPDS.REC
      END
   NEXT II
*
   ERROR.FND=0

   FOR II = 1 TO NUM.JOB
      IF FND.ATTR<1,II> # 1 THEN
         ERROR.FND=1
      END
   NEXT II
*
   IF ERROR.FND THEN
      ERRMSG="THIS PO HAS PROBLEMS ":ID:" --->":FND.ATTR:" NUM.JOB=":NUM.JOB
      GOSUB 91000

      IF ID.LIST = "" THEN
         ID.LIST=ID
      END ELSE
         ID.LIST:=CHAR(10):ID
      END
   END ELSE
      MATWRITE VPS.REC ON HOLD_VEND.PO.STATS,KEY
      MATWRITE VPS.REC ON VEND.PO.STATS,KEY
   END
*
   RETURN
*
*
PROCESS.VPDS.REC: 
*
   VP.KEY = KEY:"!":JOBNO:"!":OLD.PROD
   NEW.KEY = KEY:"!":JOBNO:"!":CURR.PROD
   READ XX FROM HOLD_VEND.PROD.STATS,VP.KEY ELSE
      MATREAD VPDS.REC FROM VEND.PROD.STATS,VP.KEY THEN
         MATWRITE VPDS.REC ON VEND.PROD.STATS,NEW.KEY
         MATWRITE VPDS.REC ON HOLD_VEND.PROD.STATS,VP.KEY
         DELETE VEND.PROD.STATS,VP.KEY
      END
   END
*
   RETURN
*
*
*   STANDARD SUBROUTINES
*
91000 PRINT @(0,23):ERRMSG:CL:
   INPUT XX:
   PRINT @(0,23):CL:
   RETURN
99999 RETURN
END
