*COPY>CPYLIB>COM1
**************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* SOURCE         - PMCBP
*
* PROGRAM        - PRINTER.MAINT
*
* BY             - NIZAM SAYEED, COMPUTER BUSINESS ASSOCIATES
*
* DATE           - 08/26/03
*
* DESCRIPTION    -
* This program will maintain and update WIN.PRINTERS file.
*
*T27851 thompson 03/18/2004 * Change way printers are defined and for
*                             all systems
*T29032 cmyklebu 01/03/2007 * Move pgm from rev12 to rev14.
*ENDDOC
**************************************************************
*
*---- FILE EQUATES
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>PMC_PRINTERS
*COPY>CPYLIB>CHAR
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*T27851
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
   OS = "OS"; CALL SYSVARS.SUB(OS)
   IF OS[1,7] = 'Windows' THEN WIN = 1 ELSE WIN = 0
   IF WIN THEN
      READ PQS FROM CONTROL, "PRINT.QUEUES" THEN
         PQS = ""
         WRITE PQS ON CONTROL, "PRINT.QUEUES"
      END ELSE
         NULL
      END
   END ELSE
      PQS = ""
      OSREAD BB.QUEUES FROM '/etc/qconfig' ELSE
         PRINT "NO QUEUES ARE ASSIGNED FOR THE SYSTEM"
      END
      SWAP LF WITH VM IN BB.QUEUES
      DCNT = COUNT(BB.QUEUES,VM)
      CNT = 1
      FOR I = 1 TO DCNT
         BEGIN CASE
         CASE BB.QUEUES<1,I>[1,1] = "*"
         CASE NOT(INDEX(BB.QUEUES<1,I>,CHAR(058),1))
         CASE 1
            POS = INDEX(BB.QUEUES<1,I>,CHAR(058),1)
            IF TRIM(BB.QUEUES<1,I>[1,POS-1]) # PQS<1,CNT-1> THEN
               FOR B = 1 TO 4
                  POS2 = INDEX(BB.QUEUES<1,I+B>,"device",1)
                  IF POS2 > 0 THEN
                     PQS<1,CNT> = TRIM(BB.QUEUES<1,I>[1,POS-1])
                     POS3 = INDEX(BB.QUEUES<1,I+B>,"=",1)
                     PQS<2,CNT> = TRIM(BB.QUEUES<1,I+B>[POS3+1,99])
                  END
               NEXT B
               CNT = CNT + 1
            END
         END CASE
      NEXT I
      IF PQS # "" THEN WRITE PQS ON CONTROL, "PRINT.QUEUES"
   END
*T27851
*
*---- OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
*T29032 v
*  OPEN '','REV12A.SCREENS' TO M.SCREENS ELSE ERRMSG = 'REV12A.SCREENS FILE MISSING';GOTO 93000
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE MISSING';GOTO 93000
*T29032 ^
   OPEN '','PMC_PRINTERS' TO PMC_PRINTERS ELSE ERRMSG = 'PMC_PRINTERS FILE MISSING';GOTO 93000
*
*---- INITIALIZATION
*
   ERRMSG = ""
   UNKNOWN = STR("?",30)
*
*---- GET COMPANY NUMBER
*
   CONO = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99999
   MAT EDIT.COM.DRIVER = ""
*
*---- PRINT SCREEN
*
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'PMC.PRINTER.MAINT'
   ECD.ACTION = 1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION = 2; CALL SCRN.EDIT
*
*---- MAIN PROCESSING
*
5*
   SCV.REC(11)<ECD.SCRN.NO,1>=DATE()
   ECD.NUM=11
   ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM = 2
   ECD.ACTION = 4; CALL SCRN.EDIT
   PRTRS_KEY = ECD.RET.VALUE
   BEGIN CASE
   CASE ECD.RET.VALUE = 'END'
      GOTO 99999
   CASE ECD.RET.VALUE # ''
      NEW.RECORD = "NO"
* T26126 v
      MATREADU PRTRS.REC FROM PMC_PRINTERS,PRTRS_KEY LOCKED
      ERRMSG = 'PMC_PRINTERS record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 5
   END ELSE
* T26126 ^
      MAT PRTRS.REC=''
      NEW.RECORD = 'YES'
   END
END CASE
IF NEW.RECORD = 'YES' THEN
   FOR S = 1 TO 9
      ON S GOSUB 10,20,30,40,50,60,70,80,90
      IF ECD.RET.VALUE = 'END' THEN
         RELEASE PMC_PRINTERS,PRTRS_KEY
         GOSUB 300;GOTO 5
      END
   NEXT S
END ELSE
   GOSUB 100
END
GOSUB 200
GOSUB 300
GOTO 5
*
*---- ENTER PMC_PRINTERS DESCRIPTION
*
10*
ECD.NUM = 3
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
   PRTRS_DESC = ECD.RET.VALUE
   TESTCHK = 0
END
RETURN
*
* --- SET NUMBER OF COLUMNS
*
20*
ECD.NUM = 4
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
   PRTRS_COLUMN = ECD.RET.VALUE
   TESTCHK = 0
END
ECD.NUM = 18
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
   PRTRS_LINES = ECD.RET.VALUE
   TESTCHK = 0
END
RETURN
*
*---- ENTER PMC_PRINTERS PATH
*
30*
ECD.NUM = 5
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
   IF NUM(ECD.RET.VALUE) THEN
      ECD.RET.VALUE = PQS<1,ECD.RET.VALUE>
      SCV.REC(ECD.NUM)<ECD.SCRN.NO,1> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF WIN THEN
      PRTRS_PATH = ECD.RET.VALUE
   END ELSE
      DCNT = DCOUNT(PQS<1>,VM)
      FND = 0
      FOR I = 1 TO DCNT WHILE FND = 0
         IF PQS<1,I> = ECD.RET.VALUE THEN
            PRTRS_PATH = ECD.RET.VALUE
            PRTRS_DEVICE = PQS<2,I>
            FND = 1
         END
      NEXT I
      IF FND = 0 THEN
         ERRMSG = "PRINT QUEUE IS NOT DEFINED IN UNIX"
         GOSUB 91000
         GOTO 30
      END ELSE
         SCV.REC(13)<ECD.SCRN.NO,1> = PRTRS_DEVICE
         ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
      END
   END
   TESTCHK = 0
END
RETURN
*
*---- ENTER PMC_PRINTERS LASER (Y/N)
*
40*
ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # PRTRS_LASER THEN TESTCHK = 0
PRTRS_LASER = ECD.RET.VALUE
IF PRTRS_LASER = "Y" THEN
   ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # PRTRS_PS THEN TESTCHK = 0
   PRTRS_PS = ECD.RET.VALUE
*
   ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # PRTRS_DPX THEN TESTCHK = 0
   PRTRS_DPX = ECD.RET.VALUE
END ELSE
   ECD.NUM = 14; ECD.RET.VALUE = "N"; PRTRS_PS = "N"; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 17; ECD.RET.VALUE = "N"; PRTRS_DPX = "N"; ECD.ACTION = 5; CALL SCRN.EDIT
END
RETURN
*
*---- ENTER PMC_PRINTERS ORIENT
*
50*
IF WIN THEN
   ECD.NUM = 7
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      PRTRS_ORIENT = ECD.RET.VALUE
      TESTCHK = 0
   END
END
RETURN
*
*---- ENTER PMC_PRINTERS FONT
*
60*
IF WIN THEN
   ECD.NUM = 8
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      PRTRS_FONT = ECD.RET.VALUE
      TESTCHK = 0
   END
END
RETURN
*
*---- ENTER PMC_PRINTERS FONT SIZE
*
70*
IF WIN THEN
   ECD.NUM = 9
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      PRTRS_FONTSIZE = ECD.RET.VALUE
      TESTCHK = 0
   END
END
RETURN
*
*---- ENTER PMC_PRINTERS TOP MARGIN
*
80*
IF WIN THEN
   ECD.NUM = 10
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      PRTRS_TOP = ECD.RET.VALUE
      TESTCHK = 0
   END
END
RETURN
*
*---- ENTER PMC_PRINTERS BOTTOM MARGIN
*
90*
IF WIN THEN
   ECD.NUM = 12
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      PRTRS_BOTTOM = ECD.RET.VALUE
      TESTCHK = 0
   END
END
RETURN
*
*---- GET VALUES FROM FILE
*
100*
SCV.REC(3)<ECD.SCRN.NO,1> = PRTRS_DESC
SCV.REC(4)<ECD.SCRN.NO,1> = PRTRS_COLUMN
SCV.REC(5)<ECD.SCRN.NO,1> = PRTRS_PATH
SCV.REC(6)<ECD.SCRN.NO,1> = PRTRS_LASER
SCV.REC(7)<ECD.SCRN.NO,1> = PRTRS_ORIENT
SCV.REC(8)<ECD.SCRN.NO,1> = PRTRS_FONT
SCV.REC(9)<ECD.SCRN.NO,1> = PRTRS_FONTSIZE
SCV.REC(10)<ECD.SCRN.NO,1> = PRTRS_TOP
SCV.REC(12)<ECD.SCRN.NO,1> = PRTRS_BOTTOM
SCV.REC(13)<ECD.SCRN.NO,1> = PRTRS_DEVICE
SCV.REC(14)<ECD.SCRN.NO,1> = PRTRS_PS
SCV.REC(17)<ECD.SCRN.NO,1> = PRTRS_DPX
SCV.REC(18)<ECD.SCRN.NO,1> = PRTRS_LINES
ECD.ACTION = 3; CALL SCRN.EDIT
TESTCHK = 0
RETURN
*
*---- ENTER OPTIONS
*
200*
MORE = 0
LOOP
   ECD.NUM = 15
   ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
   CASE OPTION = 'END' OR OPTION = 'E'
      RELEASE PMC_PRINTERS,PRTRS_KEY
      MORE = 1
   CASE NUM(OPTION)
      ON OPTION GOSUB 10,20,30,40,50,60,70,80,90
   CASE OPTION = 'FT'
      GOSUB 400
      ERRMSG = ""
      CALL PMC_SETPTR(PRTRS_KEY,'','',ERRMSG)
      IF ERRMSG # "" THEN
         GOSUB 91000
      END ELSE
         LINE = STR("-",80)
         LINE<2> = "   Printer Alias  : ":PRTRS_KEY
         LINE<3> = STR("-",80)
         LINE<4> = "   Description    : ":PRTRS_DESC
         LINE<5> = "   Characters Wide: ":PRTRS_COLUMN
         LINE<6> = "   Printer Path   : ":PRTRS_PATH
         LINE<7> = "   Device (Unix)  : ":PRTRS_DEVICE
         LINE<8> = "   Laser (Y/N)    : ":PRTRS_LASER
         LINE<9> = "   Orientation    : ":PRTRS_ORIENT
         LINE<10> = "   Font           : ":PRTRS_FONT
         LINE<11> = "   Font Size      : ":PRTRS_FONTSIZE
         LINE<12> = "   Top Margin     : ":PRTRS_TOP
         LINE<13> = "   Bottom Margin  : ":PRTRS_BOTTOM
         LINE<14> = STR("-",80)
         PRINTER ON
         FOR I = 1 TO 14
            PRINT LINE<I>
         NEXT I
         PRINTER OFF
         PRINTER CLOSE
         MORE = 1
      END
   CASE OPTION = 'F'
      GOSUB 400
      MORE = 1
   CASE OPTION = 'D'
      ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "Y" THEN
         DELETE PMC_PRINTERS, PRTRS_KEY
         MORE = 1
      END
   END CASE
WHILE MORE = 0 DO REPEAT
RETURN
*
*---- CLEAR SCREEN AND RE-INITIALIZE
*
300*
ECD.ACTION = 6; CALL SCRN.EDIT
MAT SCV.REC = ""
RETURN
*
*---- UPDATE PMC_PRINTERS FILE
*
400*
MATWRITE PRTRS.REC ON PMC_PRINTERS,PRTRS_KEY
RETURN
*
500*  SYSTEM ERROR MESSAGE
ERRMSG = "FIELD NOT USED IN UNIX"
GOSUB 91000
RETURN
*
*---- CALLS FOR SYSCOM
*
91000*
ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000*
ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
99999*
*      PRINT @(-1):
END
