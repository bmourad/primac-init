* EXTRACT FISCAL MONTH FROM FISCAL RECORD FOR DIVISION
* MARK THOMASY, VERCOM SOFTWARE
* 03/12/1999
* C36950 cm 08/28/2000 If no division passed use the first value
*T24495 lross 03/06/2002 * Addition mods for DIV SECURITY.
*T26556 adelgado 05/08/2002 * Migrate Lanny changes to Rev12.
*T28688 lross 10/13/2005 * Send back POS in PROC BUFFER 97.
*
*---- COPY LIBRARY
*
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*---- GET CONO AND KEY
*
  PROCREAD X ELSE
*     PRINT @(0,22):"MUST BE RUN FROM PROC"
    ERRMSG='MUST BE RUN FROM PROC'
    GOTO 99
*     STOP
  END
  ERRMSG = ''
  CONO = X<1>
  FISCAL.REC = X<98>
  DIV.CODE = X<99>
*
*---- OPEN FILES
*
  OPEN "","CONTROL" TO CONTROL ELSE RETURN
*
*---- MAIN PROCESSING
*
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    ERRMSG = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"
    GOTO 99
  END
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
    GOTO 99
  END
*T24495 v
  IF SECURITY.REC<1> = "Y" THEN
    IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      IF DIV.CODE = "" THEN POS = 1 ; GOTO 80 ; * C36950
*        IF DIV.CODE = "ALL" THEN POS = 1 ; GOTO 80
      IF DIV.CODE = 'ALL' OR DIV.CODE = '00' THEN
        ERRMSG='DIV "ALL" OR "00" INVALID WHEN DIVISION-LEVEL CLOSING ENABLED'
        GOTO 99
      END
      LOCATE DIV.CODE IN DIVISION.REC<1> SETTING POS ELSE
        ERRMSG = "MISSING DIV CODE ":DIV.CODE:" IN DIVISION.REC"
        GOTO 99
      END
    END ELSE
*         IF DIV.CODE = "" THEN POS = 1 ; GOTO 80 ; * C36950
*         IF DIV.CODE = "ALL" THEN POS = 1 ; GOTO 80
      POS = 1
    END
*     LOCATE DIV.CODE IN DIVISION.REC<1> SETTING POS ELSE
*        ERRMSG = "MISSING DIV CODE ":DIV.CODE:" IN DIVISION.REC"
*        GOTO 99
*     END
*T24495 ^
  END ELSE
    POS = 1
  END
80 *
  READ FISCAL.PERIODS FROM CONTROL, CONO:FISCAL.REC ELSE ERRMSG = "MISSING FISCAL.REC ":FISCAL.REC; GOTO 99
  X<98> = FISCAL.PERIODS<1,POS>
  X<97> = POS ;*T28688
99 *
  IF ERRMSG # '' THEN
*     PRINT @(0,22):ERRMSG
    ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC)
    STOP
  END
  PROCWRITE X
END
