*COPY>CPYLIB>COM1
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - PMC_REPORTS_M
* BY          - ABDULLAH JIBALY; CBA
* DATE        - 03/14/2002
* DESCRIPTION -
*
*T26090 ajibaly 02/05/2002 * THIS PROGRAM MAINTAINS PMC_REPORTS
*ENDDOC
**********************************************
*
*---CPYLIBS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>PMC_REPORTS
*COPY>PMC.CPYLIB>REPORT.PROC.FILE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*
*---ERROR MESSAGES
*
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---OPEN FILES
*
   OPEN '', 'PMC.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'PMC.SCREENS FILE IS MISSING'
      GOSUB 91000; RETURN
   END
   OPEN '', 'PMC_REPORTS' TO PMC_REPORTS ELSE
      ERRMSG = 'PMC_REPORTS FILE IS MISSING'
      GOSUB 91000; RETURN
   END
   OPEN '', 'REPORT.PROC.FILE' TO REPORT.PROC.FILE ELSE
      ERRMSG = 'REPORT.PROC.FILE FILE IS MISSING'
      GOSUB 91000; RETURN
   END
   OPEN '', 'COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'
      GOSUB 91000; RETURN
   END
   OPEN '', 'DIVISION' TO DIVISION ELSE
      ERRMSG = 'DIVISION FILE IS MISSING'
      GOSUB 91000; RETURN
   END
*
*---INITIALIZATION SECTION
*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'PMC_REPORTS_M'
   ECD.ACTION=1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   ESN = ECD.SCRN.NO
   LINE.COUNT = 6:@AM:4    ;* 2 SCROLLING AREAS
   SCR.AREA = ''           ;* IS SET TO EITHER 1 OR 2
   PROCREAD IN_BUFFER ELSE IN_BUFFER = ""
   MORE = 1
   LOOP
      GOSUB MAIN
   WHILE MORE REPEAT
   RETURN
*
*---BODY OF PROGRAM SECTION
*
MAIN: 
   REF.NO = '':@AM:''
   LN.NO = 0:@AM:0
   FIELD.COUNT = 0:@AM:0
   MAT SCV.REC = ''
   ECD.ACTION=2;CALL SCRN.EDIT
*---RETRIEVE PMC_REPORTS ID
   LOOP
      ECD.NUM = 1
      IF IN_BUFFER<1> = "" THEN
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = 'END' THEN
            MORE=0; RETURN
         END
         PRPT.ID = ECD.RET.VALUE
      END ELSE
         PRPT.ID = IN_BUFFER<1>
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PRPT.ID
         ECD.ACTION = 5
         CALL SCRN.EDIT
      END
      MATREAD PRPT.REC FROM PMC_REPORTS,PRPT.ID ELSE
         MAT PRPT.REC = ''
         FOR SUB.OPTION = 1 TO 4
            ON SUB.OPTION GOSUB SET.HEADING, SET.PROMPTS, SET.FLAGS, SET.FORMS
         UNTIL ECD.RET.VALUE = 'END'
         NEXT SUB.OPTION
         IF SUB.OPTION = 1 THEN CONTINUE ELSE EXIT
      END
      SCV.REC(2)<ESN> = PRPT.HEADING
      SCV.REC(3)<ESN> = PRPT.PROMPTS
      SCR.AREA = 1
      FIELD.COUNT<SCR.AREA> = DCOUNT(PRPT.PROMPTS,@VM)
      FOR IDX = 1 TO FIELD.COUNT<SCR.AREA>
         MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, PRPT.PROMPTS<1,IDX> THEN
            SCV.REC(4)<ESN,IDX> = RPR.DESC
         END ELSE
            SCV.REC(4)<ESN,IDX> = '**INVALID REPORT PROMPT NUMBER**'
         END
      NEXT IDX
      GOSUB SCROLL
      SCV.REC(5)<ESN> = PRPT.VIEW.FLAG
      SCV.REC(6)<ESN> = PRPT.TERMINAL.FLAG
      SCV.REC(7)<ESN> = PRPT.PDF.FLAG
      SCV.REC(8)<ESN> = PRPT.RTF.FLAG
      SCV.REC(11)<ESN> = PRPT.FORM.CONO
      SCV.REC(12)<ESN> = PRPT.FORM.DIV
      SCV.REC(13)<ESN> = PRPT.FORM.PATH
      SCV.REC(20)<ESN> = PRPT.RPT.SCRN.FLAG
      SCR.AREA = 2
      FIELD.COUNT<SCR.AREA> = DCOUNT(PRPT.FORM.PATH,@VM)
      GOSUB SCROLL
      ECD.ACTION = 3; CALL SCRN.EDIT
   WHILE PRPT.ID = '' REPEAT
*---GET OPTION
   LOOP
      ECD.NUM = 14
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = UPCASE(ECD.RET.VALUE)
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E"
            IF IN_BUFFER<1> # "" THEN MORE = 0
            RETURN
         CASE OPTION = "F"
            IF IN_BUFFER<1> # "" THEN MORE = 0
            MATWRITE PRPT.REC ON PMC_REPORTS, PRPT.ID
            RETURN
         CASE OPTION = "C" AND IN_BUFFER<1> = ""
            COPY.RECORD.CONFIRM = 'Copy report ':PRPT.ID:' to *ID* (y/n):'
            GOSUB COPY.RECORD
         CASE OPTION = "M" AND IN_BUFFER<1> = ""
            OLD.PRPT.ID = PRPT.ID
            COPY.RECORD.CONFIRM = 'Move report ':PRPT.ID:' to *ID* (y/n):'
            GOSUB COPY.RECORD
            IF PRPT.ID # OLD.PRPT.ID THEN
               DELETE PMC_REPORTS, OLD.PRPT.ID
            END
         CASE OPTION = "D" AND IN_BUFFER<1> = ""
            READ REC FROM PMC_REPORTS, PRPT.ID ELSE
               ERRMSG = 'This report has not been filed yet!'; GOSUB 91000
               CONTINUE
            END
            ECD.NUM = 22
            ECD.PMSG = 'Delete report ':PRPT.ID:' (y/n):'
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'Y' THEN
               DELETE PMC_REPORTS, PRPT.ID
               RETURN
            END
         CASE NUM(OPTION)
            ON OPTION GOSUB SET.HEADING, SET.PROMPTS, SET.FLAGS, SET.FORMS
         CASE 1
            ERRMSG = "INVALID OPTION, PLEASE TRY AGAIN"; GOSUB 91000
      END CASE
   REPEAT
   RETURN
*
REFRESH.SCREEN: 
   ECD.ACTION = 2; CALL SCRN.EDIT
   ECD.ACTION = 3; CALL SCRN.EDIT
   REF.NO = '':@AM:''
   SCR.AREA = 1; GOSUB SCROLL
   SCR.AREA = 2; GOSUB SCROLL
*
SCROLL: 
   START.REF.NO = 1 + INT((LN.NO<SCR.AREA>-1)/LINE.COUNT<SCR.AREA>)*LINE.COUNT<SCR.AREA>
   IF START.REF.NO = REF.NO<SCR.AREA> THEN RETURN
   REF.NO<SCR.AREA> = START.REF.NO
   CUR.PAGE = LN.NO<SCR.AREA>/LINE.COUNT<SCR.AREA>
   IF INT(CUR.PAGE) # CUR.PAGE OR CUR.PAGE = 0 THEN CUR.PAGE = INT(CUR.PAGE)+1
   LAST.PAGE = FIELD.COUNT<SCR.AREA>/LINE.COUNT<SCR.AREA>
   IF INT(LAST.PAGE) # LAST.PAGE OR LAST.PAGE = 0 THEN LAST.PAGE = INT(LAST.PAGE)+1
   IF CUR.PAGE > LAST.PAGE THEN LAST.PAGE = CUR.PAGE
*---Get around scrolling bug in ECD.ACTION=7 by using ECD.ACTION=5
   BEGIN CASE
      CASE SCR.AREA = 1
         FOR IDX = REF.NO<SCR.AREA> TO REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1
            SCV.REC(23)<ESN,IDX> = IDX
            ECD.SUB.NUM=IDX;ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.SUB.NUM=IDX;ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.SUB.NUM=IDX;ECD.NUM=4;ECD.ACTION=5;CALL SCRN.EDIT
         NEXT IDX
         ECD.NUM = 9
         SCV.REC(ECD.NUM)<ESN> = CUR.PAGE
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 10
         SCV.REC(ECD.NUM)<ESN> = LAST.PAGE
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE SCR.AREA = 2
         FOR IDX = REF.NO<SCR.AREA> TO REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1
            SCV.REC(19)<ESN,IDX> = IDX
            ECD.SUB.NUM=IDX;ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.SUB.NUM=IDX;ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.SUB.NUM=IDX;ECD.NUM=12;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.SUB.NUM=IDX;ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
         NEXT IDX
         ECD.NUM = 16
         SCV.REC(ECD.NUM)<ESN> = CUR.PAGE
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 17
         SCV.REC(ECD.NUM)<ESN> = LAST.PAGE
         ECD.ACTION = 5; CALL SCRN.EDIT
   END CASE
   RETURN
*
SCROLL.OPTIONS: 
   BEGIN CASE
      CASE SCROLL.OPTION = "S"
         LN.NO<SCR.AREA> = REF.NO<SCR.AREA> + LINE.COUNT<SCR.AREA>
         IF LN.NO<SCR.AREA> > FIELD.COUNT<SCR.AREA> THEN LN.NO<SCR.AREA> = 1
         GOSUB SCROLL
      CASE SCROLL.OPTION = "SR"
         LN.NO<SCR.AREA> = REF.NO<SCR.AREA> - LINE.COUNT<SCR.AREA>
         IF LN.NO<SCR.AREA> < 1 THEN LN.NO<SCR.AREA> = FIELD.COUNT<SCR.AREA>
         GOSUB SCROLL
      CASE SCROLL.OPTION = "SB"
         LN.NO<SCR.AREA> = FIELD.COUNT<SCR.AREA>
         GOSUB SCROLL
      CASE SCROLL.OPTION = "ST"
         LN.NO<SCR.AREA> = 1
         GOSUB SCROLL
   END CASE
   RETURN
*
COPY.RECORD: 
   LOOP
      ECD.NUM = 21
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN RETURN
      READ REC FROM PMC_REPORTS,ECD.RET.VALUE THEN
         ERRMSG = 'Report ':ECD.RET.VALUE:' already exists!'; GOSUB 91000
         ECD.RET.VALUE = ''
         CONTINUE
      END
   WHILE ECD.RET.VALUE = '' REPEAT
   NEW.PRPT.ID = ECD.RET.VALUE
   ECD.NUM = 22
   ECD.PMSG = CHANGE(COPY.RECORD.CONFIRM,'*ID*',NEW.PRPT.ID)
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'Y' THEN
      PRPT.ID = NEW.PRPT.ID
      MATWRITE PRPT.REC ON PMC_REPORTS, PRPT.ID
      SCV.REC(1)<ESN> = PRPT.ID
      ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
*
SET.HEADING: 
   ECD.NUM = 2
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.HEADING = ECD.RET.VALUE
   RETURN
*
SET.PROMPTS: 
   ECD.RET.VALUE = ''
   LOOP
      SCR.AREA = 1
      IF FIELD.COUNT<SCR.AREA> > 0 THEN
         ECD.NUM = 15
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = UPCASE(ECD.RET.VALUE)
      END ELSE
         IF ECD.RET.VALUE # "END" THEN OPTION = "A" ELSE OPTION = "END"
      END
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E" OR OPTION = ""
            ECD.RET.VALUE = "END"
            EXIT
         CASE OPTION[1,1] = "S"
            SCROLL.OPTION = OPTION; GOSUB SCROLL.OPTIONS
         CASE OPTION = "A"
            LN.NO<SCR.AREA> = FIELD.COUNT<SCR.AREA>
            LOOP
               LN.NO<SCR.AREA> += 1
               GOSUB SCROLL
               ECD.NUM = 3; ECD.SUB.NUM = LN.NO<SCR.AREA>
               ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE = 'END' THEN EXIT
               LOCATE ECD.RET.VALUE IN PRPT.PROMPTS<1> SETTING DUP.LN THEN
                  ERRMSG = 'THAT PROMPT IS ALREADY AT LINE ':DUP.LN; GOSUB 91000
                  SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
                  LN.NO<SCR.AREA> -= 1; CONTINUE
               END
               MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, ECD.RET.VALUE THEN
                  PRPT.PROMPTS<1,LN.NO<SCR.AREA>> = ECD.RET.VALUE
                  FIELD.COUNT<SCR.AREA> += 1
                  ECD.NUM = 4; ECD.SUB.NUM = LN.NO<SCR.AREA>
                  SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = RPR.DESC
                  ECD.ACTION = 5; CALL SCRN.EDIT
               END ELSE
                  ERRMSG = 'THAT PROMPT NUMBER DOES NOT EXIST'; GOSUB 91000
                  SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
                  LN.NO<SCR.AREA> -= 1; CONTINUE
               END
            REPEAT
            SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
            LN.NO<SCR.AREA> -= 1
            GOSUB SCROLL
         CASE OPTION = "D"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE
            SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN)
            SCV.REC(4)<ESN> = DELETE(SCV.REC(4),ESN,LN)
            LN.NO<SCR.AREA> = LN-1
            PRPT.PROMPTS = SCV.REC(3)<ESN>
            FIELD.COUNT<SCR.AREA> = DCOUNT(PRPT.PROMPTS,@VM)
            REF.NO<SCR.AREA> = ''
            GOSUB SCROLL
         CASE OPTION = "C"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE
            ECD.NUM = 3; ECD.SUB.NUM = LN
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN
               ECD.NUM = 3; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.PROMPTS<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
               CONTINUE
            END
            LOCATE ECD.RET.VALUE IN PRPT.PROMPTS<1> SETTING DUP.LN THEN
               ERRMSG = 'THAT PROMPT IS ALREADY AT LINE':DUP.LN; GOSUB 91000
               ECD.NUM = 3; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.PROMPTS<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
               CONTINUE
            END
            MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, ECD.RET.VALUE THEN
               PRPT.PROMPTS<1,LN> = ECD.RET.VALUE
               ECD.NUM = 4; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = RPR.DESC
               ECD.ACTION = 5; CALL SCRN.EDIT
            END ELSE
               ERRMSG = 'THAT PROMPT NUMBER DOES NOT EXIST'; GOSUB 91000
               ECD.NUM = 3; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.PROMPTS<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
            END
         CASE OPTION = "I"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE-1
            LN.NO<SCR.AREA> = LN
            LOOP
               LN.NO<SCR.AREA> += 1
               SCV.REC(3)<ESN> = INSERT(SCV.REC(3),ESN,LN.NO<SCR.AREA>,0,"")
               SCV.REC(4)<ESN> = INSERT(SCV.REC(4),ESN,LN.NO<SCR.AREA>,0,"")
               REF.NO<SCR.AREA> = ''; GOSUB SCROLL
               ECD.NUM = 3; ECD.SUB.NUM = LN.NO<SCR.AREA>
               ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE = 'END' THEN EXIT
               LOCATE ECD.RET.VALUE IN PRPT.PROMPTS<1> SETTING DUP.LN THEN
                  ERRMSG = 'THAT PROMPT IS ALREADY AT LINE':DUP.LN; GOSUB 91000
                  SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
                  SCV.REC(4)<ESN> = DELETE(SCV.REC(4),ESN,LN.NO<SCR.AREA>)
                  LN.NO<SCR.AREA> -= 1; CONTINUE
               END
               MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, ECD.RET.VALUE THEN
                  PRPT.PROMPTS<1,LN.NO<SCR.AREA>> = ECD.RET.VALUE
                  FIELD.COUNT<SCR.AREA> += 1
                  ECD.NUM = 4; ECD.SUB.NUM = LN.NO<SCR.AREA>
                  SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = RPR.DESC
                  REF.NO<SCR.AREA> = ''; GOSUB SCROLL
               END ELSE
                  ERRMSG = 'THAT PROMPT NUMBER DOES NOT EXIST'; GOSUB 91000
                  SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
                  SCV.REC(4)<ESN> = DELETE(SCV.REC(4),ESN,LN.NO<SCR.AREA>)
                  LN.NO<SCR.AREA> -= 1; CONTINUE
               END
            REPEAT
            SCV.REC(3)<ESN> = DELETE(SCV.REC(3),ESN,LN.NO<SCR.AREA>)
            SCV.REC(4)<ESN> = DELETE(SCV.REC(4),ESN,LN.NO<SCR.AREA>)
            LN.NO<SCR.AREA> -= 1
            REF.NO<SCR.AREA> = ''; GOSUB SCROLL
      END CASE
   REPEAT
   RETURN
*
SET.FLAGS: 
   ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.VIEW.FLAG = ECD.RET.VALUE ELSE RETURN
   ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.TERMINAL.FLAG = ECD.RET.VALUE ELSE RETURN
   ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.PDF.FLAG = ECD.RET.VALUE ELSE RETURN
   ECD.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.RTF.FLAG = ECD.RET.VALUE ELSE RETURN
   ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN PRPT.RPT.SCRN.FLAG = ECD.RET.VALUE
   RETURN
*
SET.FORMS: 
   ECD.RET.VALUE = ''
   LOOP
      SCR.AREA = 2
      IF FIELD.COUNT<SCR.AREA> > 0 THEN
         ECD.NUM = 15
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = UPCASE(ECD.RET.VALUE)
      END ELSE
         IF ECD.RET.VALUE # "END" THEN OPTION = "A" ELSE OPTION = "END"
      END
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E" OR OPTION = ""
            ECD.RET.VALUE = "END"
            EXIT
         CASE OPTION[1,1] = "S"
            SCROLL.OPTION = OPTION; GOSUB SCROLL.OPTIONS
         CASE OPTION = "A"
            LN.NO<SCR.AREA> = FIELD.COUNT<SCR.AREA>
            LOOP
               LN.NO<SCR.AREA> += 1
               GOSUB SCROLL
               FORM.VALUE = ''
               FOR FORM.IDX = 1 TO 3
                  ON FORM.IDX GOSUB FORM.CONO.SUB, FORM.DIV.SUB, FORM.PATH.SUB
               UNTIL ECD.RET.VALUE = 'END'
               NEXT FORM.IDX
               IF ECD.RET.VALUE = 'END' THEN EXIT
               PRPT.FORM.CONO<1,LN.NO<SCR.AREA>> = FORM.VALUE<1>
               PRPT.FORM.DIV<1,LN.NO<SCR.AREA>> = FORM.VALUE<2>
               PRPT.FORM.PATH<1,LN.NO<SCR.AREA>> = FORM.VALUE<3>
               FIELD.COUNT<SCR.AREA> += 1
            REPEAT
            SCV.REC(11)<ESN> = DELETE(SCV.REC(11),ESN,LN.NO<SCR.AREA>)
            SCV.REC(12)<ESN> = DELETE(SCV.REC(12),ESN,LN.NO<SCR.AREA>)
            SCV.REC(13)<ESN> = DELETE(SCV.REC(13),ESN,LN.NO<SCR.AREA>)
            LN.NO<SCR.AREA> -= 1
            REF.NO<SCR.AREA> = ''; GOSUB SCROLL
         CASE OPTION = "D"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE
            SCV.REC(11)<ESN> = DELETE(SCV.REC(11),ESN,LN)
            SCV.REC(12)<ESN> = DELETE(SCV.REC(12),ESN,LN)
            SCV.REC(13)<ESN> = DELETE(SCV.REC(13),ESN,LN)
            LN.NO<SCR.AREA> = LN-1
            PRPT.FORM.CONO = SCV.REC(11)<ESN>
            PRPT.FORM.DIV  = SCV.REC(12)<ESN>
            PRPT.FORM.PATH = SCV.REC(13)<ESN>
            FIELD.COUNT<SCR.AREA> -= 1
            REF.NO<SCR.AREA> = ''
            GOSUB SCROLL
         CASE OPTION = "C"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE
            LN.NO<SCR.AREA> = LN
            FORM.VALUE = ''
            FOR FORM.IDX = 1 TO 3
               ON FORM.IDX GOSUB FORM.CONO.SUB, FORM.DIV.SUB, FORM.PATH.SUB
            UNTIL ECD.RET.VALUE = 'END'
            NEXT FORM.IDX
            IF ECD.RET.VALUE = 'END' THEN
               ECD.NUM = 11; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.FORM.CONO<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
               ECD.NUM = 12; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.FORM.DIV<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
               ECD.NUM = 13; ECD.SUB.NUM = LN
               SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = PRPT.FORM.PATH<1,LN>
               ECD.ACTION = 5; CALL SCRN.EDIT
               CONTINUE
            END
            PRPT.FORM.CONO<1,LN.NO<SCR.AREA>> = FORM.VALUE<1>
            PRPT.FORM.DIV<1,LN.NO<SCR.AREA>> = FORM.VALUE<2>
            PRPT.FORM.PATH<1,LN.NO<SCR.AREA>> = FORM.VALUE<3>
         CASE OPTION = "I"
            ECD.NUM = 18
            ECD.MINV = REF.NO<SCR.AREA>
            ECD.MAXV = MINIMUM((REF.NO<SCR.AREA>+LINE.COUNT<SCR.AREA>-1):@AM:FIELD.COUNT<SCR.AREA>)
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = 'END' THEN CONTINUE
            LN = ECD.RET.VALUE-1
            LN.NO<SCR.AREA> = LN
            LOOP
               LN.NO<SCR.AREA> += 1
               SCV.REC(11)<ESN> = INSERT(SCV.REC(11),ESN,LN.NO<SCR.AREA>,0,"")
               SCV.REC(12)<ESN> = INSERT(SCV.REC(12),ESN,LN.NO<SCR.AREA>,0,"")
               SCV.REC(13)<ESN> = INSERT(SCV.REC(13),ESN,LN.NO<SCR.AREA>,0,"")
               REF.NO<SCR.AREA> = ''; GOSUB SCROLL
               FORM.VALUE = ''
               FOR FORM.IDX = 1 TO 3
                  ON FORM.IDX GOSUB FORM.CONO.SUB, FORM.DIV.SUB, FORM.PATH.SUB
               UNTIL ECD.RET.VALUE = 'END'
               NEXT FORM.IDX
               IF ECD.RET.VALUE = 'END' THEN EXIT
               PRPT.FORM.CONO<1,LN.NO<SCR.AREA>> = FORM.VALUE<1>
               PRPT.FORM.DIV<1,LN.NO<SCR.AREA>> = FORM.VALUE<2>
               PRPT.FORM.PATH<1,LN.NO<SCR.AREA>> = FORM.VALUE<3>
               FIELD.COUNT<SCR.AREA> += 1
            REPEAT
            SCV.REC(11)<ESN> = DELETE(SCV.REC(11),ESN,LN.NO<SCR.AREA>)
            SCV.REC(12)<ESN> = DELETE(SCV.REC(12),ESN,LN.NO<SCR.AREA>)
            SCV.REC(13)<ESN> = DELETE(SCV.REC(13),ESN,LN.NO<SCR.AREA>)
            LN.NO<SCR.AREA> -= 1
            REF.NO<SCR.AREA> = ''; GOSUB SCROLL
      END CASE
   REPEAT
   RETURN
*
FORM.CONO.SUB: 
   LOOP
      ECD.NUM = 11; ECD.SUB.NUM = LN.NO<SCR.AREA>
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN EXIT
      MATREAD COMP.REC FROM COMPANY, ECD.RET.VALUE ELSE
         ERRMSG = 'INVALID COMPANY NUMBER'; GOSUB 91000
         ECD.RET.VALUE = ''
         CONTINUE
      END
      FORM.VALUE<1> = ECD.RET.VALUE
   WHILE ECD.RET.VALUE = '' REPEAT
   RETURN
*
FORM.DIV.SUB: 
   LOOP
      ECD.NUM = 12; ECD.SUB.NUM = LN.NO<SCR.AREA>
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN EXIT
      FOR IDX = 1 TO DCOUNT(PRPT.FORM.DIV,@VM)
         IF PRPT.FORM.CONO<1,IDX>:PRPT.FORM.DIV<1,IDX> = FORM.VALUE<1>:ECD.RET.VALUE AND IDX # LN.NO<SCR.AREA> THEN
            ERRMSG = 'DUPLICATE COMPANY/DIVISION COMBINATION ON LINE ':IDX
            GOSUB 91000
            SCV.REC(12)<ESN,LN.NO<SCR.AREA>> = ''; ECD.RET.VALUE = ''
         END
      UNTIL ECD.RET.VALUE = ''
      NEXT IDX
      IF ECD.RET.VALUE = '' THEN CONTINUE
      MATREAD DIV.REC FROM DIVISION, FORM.VALUE<1>:ECD.RET.VALUE ELSE
         ERRMSG = 'INVALID DIVISION FOR COMPANY ':FORM.VALUE<1>; GOSUB 91000
         ECD.RET.VALUE = ''
         CONTINUE
      END
      FORM.VALUE<2> = ECD.RET.VALUE
   WHILE ECD.RET.VALUE = '' REPEAT
   RETURN
*
FORM.PATH.SUB: 
   LOOP
      ECD.NUM = 13; ECD.SUB.NUM = LN.NO<SCR.AREA>
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN RETURN
      OPENSEQ ECD.RET.VALUE READONLY TO FORM.FILE.HANDLE THEN
         FORM.FILE.PATH = FILEINFO(FORM.FILE.HANDLE,2)
         CLOSESEQ FORM.FILE.HANDLE
*---FIX THE PATH FOR CASES WHEN A PARENT DIRECTORY IS INCLUDED: "../" OR "..\"
*---OR WHEN A CURRENT DIRECTORY IS INCLUDED: "./" OR ".\"
         IF COUNT(FORM.FILE.PATH,'/') > 0 THEN
            FORM.FILE.DELIM = '/'
         END ELSE
            FORM.FILE.DELIM = '\'
         END
         TEMP.DIR = FORM.FILE.DELIM:'.':FORM.FILE.DELIM
         LOOP WHILE INDEX(FORM.FILE.PATH,TEMP.DIR,1) > 0
            FORM.FILE.PATH = CHANGE(FORM.FILE.PATH,TEMP.DIR,FORM.FILE.DELIM)
         REPEAT
         LOOP
            END.LOC = INDEX(FORM.FILE.PATH,"..",1)
            IF END.LOC > 0 THEN
               END.LOC = END.LOC + 2
*---COUNT THE # OF DELIMETERS, MINUS THE TWO THAT SURROUND ".."
               DELIM.CNT = COUNT(FORM.FILE.PATH[1,END.LOC],FORM.FILE.DELIM) - 2
               START.LOC = INDEX(FORM.FILE.PATH[1,END.LOC],FORM.FILE.DELIM,DELIM.CNT)
               TEMP.PATH = FORM.FILE.PATH
               FORM.FILE.PATH = TEMP.PATH[1,START.LOC]:TEMP.PATH[END.LOC+1,99]
            END
         WHILE END.LOC > 0 REPEAT
         FORM.VALUE<3> = FORM.FILE.PATH
         ECD.NUM = 13; ECD.SUB.NUM = LN.NO<SCR.AREA>
         SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = FORM.VALUE<3>
         ECD.ACTION = 5; CALL SCRN.EDIT
         RETURN
      END ELSE
         ERRMSG = 'That file does not exist!'; GOSUB 91000
      END
   REPEAT
   RETURN
*
*
*---STANDARD SUBROUTINES
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 RETURN
END
