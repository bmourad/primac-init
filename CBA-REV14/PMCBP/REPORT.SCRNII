*COPY>CPYLIB>COM1
***********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* SOURCE        - PMCBP
* PROGRAM       - REPORT.SCRN
* BY            - JIHAD YAMOUT, C.B.A
* DATE          - 01/28/86
* DESCRIPTION   - This is used to enter all select options for (ICS)
*                 report , and this program must run from a proc .
*
*-----------------------Input / Output  Information -----------------------
* Input
* -----
* 1 = CONO
* 2 = Heading or Company name
* 3 = Screen heading
* 4 = Sequence of event.
*
* Output
* ------
* It passes all values entered to the proc called from in the same 
* sequence entered .
***************************************************************************
*
***** FILE INSERTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>PMC.CPYLIB>REPORT.PROC.FILE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
**** SAVE REC
*
    DIM S.REC(10)
    EQU S.SA.OP      TO S.REC(1)
    EQU S.SA.OP.P    TO S.REC(2)
    MAT S.REC = ""
*
**** SETUP SYSTEM ERRMSGES
*
    SYS.TYPE = 1
    CALL SYSCOM(MAT SYSCOM.REC)
*    TYP = 0 ; CALL EDIT.SUB ; FILL = "#"
*
**** GET PROC INFORMATION
*
    PROCREAD XX ELSE
       ERRMSG = "This program must run from a proc"
       PROC.VALUES = "END"
       GOTO 93000
    END
    CONO = XX<1>
    PROC.VALUES = ""
    PROC.VALUES<1> = XX<1>
    PROC.VALUES<2> = XX<2>
    SC.HEAD = XX<3>
    INP.SEQ = XX<4>
*
**** SET SCREEN TOP HEADING
*
    IF SC.HEAD = "" THEN
       SC.HEAD = "HEADING WAS NOT DEFINED"
    END
    H.LEN = LEN(SC.HEAD)
    IF H.LEN * 2 > 56 THEN
       SCRN.HEAD = SC.HEAD
    END ELSE
       SCRN.HEAD = SC.HEAD[1,1]
       FOR S = 2 TO H.LEN
          SCRN.HEAD = SCRN.HEAD:" ":SC.HEAD[S,1]
       NEXT S
    END
    POS = 56 - LEN(SCRN.HEAD)
    POS1 = INT(POS/2)
    SC.HEAD = SPACE(POS1):SCRN.HEAD
*
***** OPEN FILES
*
    OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
       ERRMSG = 'M.SCREENS FILES IS MISSING'
       GOTO 93000
    END
    OPEN '','REPORT.PROC.FILE' TO REPORT.PROC.FILE ELSE
       ERRMSG = 'REPORT.PROC.FILE IS MISSING'
       GOTO 93000
    END
*
***** MAIN PROCESSING
*
    MAT SCV.REC = ""
    MAT EDIT.COM.DRIVER = ''
*    MAT EDIT.COM = ""
*    TYP = 0 ; CALL EDIT.SUB
    FILL = "#"
    BEGIN.PAGE = 2
    LINES = 0 ; LN = 1
    ECD.SCRN.CNT = 1
    ECD.SCRN.NAME = 'REPORT.SCRN'
    ECD.ACTION=1 ; CALL SCRN.EDIT
    ECD.SCRN.NO = 1
*
**** LOAD AND PRINT SCREEN
*
    MAT SCV.REC = ""
    ECD.NUM = 1 ; SCV.REC(ECD.NUM) = SC.HEAD ; ECD.ACTION = 5 ; CALL SCRN.EDIT
    ECD.NUM = 2 ; SCV.REC(ECD.NUM) = DATE() ; ECD.ACTION = 5 ; CALL SCRN.EDIT
    ECD.ACTION = 3 ; CALL SCRN.EDIT
    SEQ.NUM = ""
    VALID = ""
    LINES = COUNT(INP.SEQ, ",") + (INP.SEQ # "")
    IF LINES * 2 > 18 THEN
       PAGE.SIZE = 18 ; LINE.SPACE = 1
    END ELSE
       PAGE.SIZE = 9 ; LINE.SPACE = 2
    END
    IF INP.SEQ # "" THEN
       IF LINES > 18 THEN LINES = 18
       OLD.START.LINE = 0 ; GOSUB 2900
    END
    LINES = COUNT(S.SA.OP, VM) + (S.SA.OP # "")
*
**** ENTER ALL ANSWER
*
100*
    FOR LN = 1 TO LINES
       IF S.SA.OP.P<1,LN> = "" THEN
          GOSUB 1000
          IF VALUE = "END" THEN
             PROC.VALUES = "END"
             GOTO 99999
          END
       END
    NEXT LN
*
**** ENTER OPTION
*
90000*
    MORE = 1
    LOOP
       IF VALID # "" THEN
          ECD.NUM = 50
          ECD.O.R = "R"
          ECD.VALDAT = "E,F":VALID
       END ELSE
          ECD.NUM = 51
          ECD.VALDAT = "E"
          ECD.O.R. = "O"
       END
       ECD.ACTION = 4 ; CALL SCRN.EDIT
       OPTION = ECD.RET.VALUE
       BEGIN CASE
       CASE OPTION = ""
          MORE = 0
       CASE OPTION = "END" OR OPTION = "E"
          MORE = 0
          PROC.VALUES = "END"
       CASE NUM(OPTION)
          LN = OPTION
          IF S.SA.OP.P<1,LN> # "" THEN
             ERRMSG = "This field is associated with a prior entry and cannot be modified.";GOSUB 91000
          END ELSE
             GOSUB 1000
          END
       CASE OPTION = "F"
          FOR X = 1 TO LINES
             IF PROC.VALUES<X+2> = "" THEN PROC.VALUES<X+2> = "ALL"
          NEXT X
          MORE = 0
       END CASE
    WHILE MORE = 1 DO REPEAT
       GOTO 99999
*
**** ENTER ANSWER
*
1000*
       SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
       MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, S.SA.OP<1,LN> ELSE
          ERRMSG = "Please set option before using it" ; GOSUB 91000 ; GOTO 1999
       END
       X = 50 ; Y = SLN ; TYP = RPR.TYPE ; MAXL = RPR.MAXL ; HMSG = RPR.HMSG
       CNV = "MD0"
       IF RPR.SCLR # "" THEN
          SCALER = RPR.SCLR
          CNV = "MD":RPR.SCLR
       END
       IF RPR.VALID # "" THEN
          V.CNT = COUNT(RPR.VALID, ",") + (RPR.VALID # "")
          VALDAT = FIELD(RPR.VALID,",",1)
          FOR SV = 2 TO V.CNT
             VALDAT = VALDAT :VM:FIELD(RPR.VALID,",",SV)
          NEXT SV
       END
       IF PROC.VALUES<LN+2> # "" THEN
          DEFAULT = OCONV(PROC.VALUES<LN+2>, CNV)
          O.R = "O"
       END ELSE
          IF RPR.DEFAULT = "" THEN
             DEFAULT = "" ; O.R = "R"
          END ELSE
             DEFAULT = RPR.DEFAULT ; O.R = "O"
          END
       END
       CALL EDIT.SUB
       IF VALUE # "END" THEN
          BEGIN CASE
          CASE RPR.FILE # "" AND VALUE # "ALL"
             OPEN '',RPR.FILE TO V.FILE ELSE
                ERRMSG = RPR.FILE:" IS MISSING" ; GOSUB 91000
                VALUE = "END" ; GOTO 1999
             END
             READ SFV.REC FROM V.FILE , CONO:VALUE ELSE
                ERRMSG = VALUE:" RECORD ID MISSING FROM ":RPR.FILE ; GOSUB 91000 ; GOTO 1000
             END
             IF RPR.F.A.NO # "" THEN
                A.CNT = COUNT(RPR.F.A.NO, VM) + (RPR.F.A.NO # "")
                FOR APR = 1 TO A.CNT
                   LOCATE RPR.C.OP<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
                   IF FND THEN
                      RPR.F.A.NA<1,APR> = SFV.REC<RPR.F.A.NO<1,APR>>
                      GOSUB 2000
                      S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
                   END
                NEXT APR
             END
          CASE RPR.FILE # "" AND VALUE = "ALL" AND RPR.F.A.NO # ""
             A.CNT = COUNT(RPR.F.A.NO, VM) + (RPR.F.A.NO # "")
             FOR APR = 1 TO A.CNT
                LOCATE RPR.C.OP<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
                IF FND AND S.SA.OP<1,LN> = S.SA.OP.P<1,FND> THEN
                   S.SA.OP.P<1,FND> = ""
                END
             NEXT APR
          CASE RPR.R.FLG = "Y" AND RPR.R.OPT # ""
             A.CNT = COUNT(RPR.R.OPT,VM) + (RPR.R.OPT # "")
             FOR APR = 1 TO A.CNT
                LOCATE RPR.R.OPT<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
                BEGIN CASE
                CASE FND AND VALUE # RPR.R.VAL<1,APR>
                   GOSUB 2200
                   S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
                CASE FND AND VALUE = RPR.R.VAL<1,APR> AND S.SA.OP<1,LN> = S.SA.OP.P<1,FND> 
                   S.SA.OP.P<1,FND> = ""
                END CASE
             NEXT APR
          CASE 1
             S.SA.OP.P<1,LN> = ""
          END CASE
          PROC.VALUES<LN+2> = DVALUE
       END
1999   RETURN
*
**** PRINT ASSOCIATED VALUE
*
2000*
       SLN1 = BEGIN.PAGE + LINE.SPACE * MOD(FND-1,PAGE.SIZE)
       IF RPR.F.A.CNV<1,APR> # "" THEN 
P_X  = 50 ; P_Y = SLN1 ; P_VALUE = OCONV(RPR.F.A.NA<1,APR> , RPR.F.A.CNV<1,APR>) "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          PROC.VALUES<FND+2> = OCONV(RPR.F.A.NA<1,APR> , RPR.F.A.CNV<1,APR>)
       END ELSE
P_X  = 50 ; P_Y = SLN1 ; P_VALUE = RPR.F.A.NA<1,APR> "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          PROC.VALUES<FND+2> = RPR.F.A.NA<1,APR>
       END
       RETURN
*
**** PRINT (ALL) FOR NON ASSOCIATED OPTION
*
2200*
       SLN1 = BEGIN.PAGE + LINE.SPACE * MOD(FND-1,PAGE.SIZE)
P_X  = 50 ; P_Y = SLN1 ; P_VALUE = "ALL" "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       PROC.VALUES<FND+2> = "ALL"
       RETURN
*
**** SCROLL SUB
*
2900   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
       LAST.LINE = START.LINE + PAGE.SIZE - 1
       IF LAST.LINE > LINES THEN LAST.LINE = LINES
       IF START.LINE = OLD.START.LINE THEN GOTO 2990
       OLD.START.LINE = START.LINE
       CNT = 1
       N1 = 0
       FOR N = START.LINE TO LAST.LINE
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
          SEQ.NUM = FIELD(INP.SEQ,",",N)
          MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE , SEQ.NUM ELSE
             MAT RPT.PROC.REC = "" ; GOTO 2911
          END
          RPR.DESC = TRIM(RPR.DESC)
          SP = 41 - LEN(RPR.DESC)
          N1 = N1 + 1
          VALID = VALID:",":N1
          DESC = N1:" - ":RPR.DESC:SPACE(SP):":"
          S.SA.OP<1,N1> = SEQ.NUM
P_X  = 0 ; P_Y = SLN ; P_VALUE = DESC "L#48" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          CNT = CNT + 1
2911   NEXT N
       FOR M = CNT TO PAGE.SIZE
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       NEXT M
2990   RETURN
***** CALLS FOR SYSCOM
*
91000  ERR.TYPE = 1
       CALL SYSCOM(MAT SYSCOM.REC)
       RETURN
92000  ERR.TYPE = 2
       CALL SYSCOM(MAT SYSCOM.REC)
       RETURN
93000  ERR.TYPE = 3
       CALL SYSCOM(MAT SYSCOM.REC)
99999  * PRINT @(-1):
       PROC.VALUES = PROC.VALUES : AM
       PROCWRITE PROC.VALUES
    END
