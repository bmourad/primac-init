  SUBROUTINE PMC_PROC_S(PPS.ID,PACTION)
*COPY>CPYLIB>COM1
**********************************************
* REVISION    - [12.0]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - PMC_PROC_S
* BY          - BILAL MOURAD
* DATE        - 12/21/95
* DESCRIPTION - Maintains PMC_PROCESS file. Allows for detail
*             - input/modification of new/existing record.
* Called by PMC_PROC_M
* SYS_FILES valid types are:
* B = BP
* P = PROC
* SYS_FILES types not allowed as processes are:
* C = CPYLIB
* D = DATA
* M = MENU
* O = OTHER (MACRO, EASY.DOC)
* Q = Q POINTER
* S = SCREEN
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21177 diane 12/19/1996 * Allow REVIEW function
*T26090 adelgado 03/12/2002 * Add two new field to screen 
*T26090 wyamout 03/13/2002 * Print/View/Email. Add New fields
*T26090 wyamout 03/14/2002 * Error in Reports line number display
*T26090 wyamout 03/14/2002 * Add validation to PMC_REPORTS
*T26090 wyamout 03/21/2002 * Add call to PMC_REPORTS_M only in ASCII
*ENDDOC
**********************************************
*
*---- Data Structure Libraries
*
*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>PMC.CPYLIB>PMC_PROCESS_XREF
* T26090 v
*COPY>PMC.CPYLIB>PMC_REPORTS
*COPY>CPYLIB>TCC
* T26090 ^
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
  SYS.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC)
*
  OPEN "","PMC_PROCESS" TO PMC_PROCESS ELSE
    ERRMSG = "PMC_PROCESS file is missing"; GOTO 93000
  END
  OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE
    ERRMSG = "PMC_PROCESS_XREF file is missing"; GOTO 93000
  END
* T26090 v
  OPEN "","PMC_REPORTS" TO PMC_REPORTS ELSE
    ERRMSG = "PMC_REPORTS file is missing"; GOTO 93000
  END
* T26090 ^
*
*---- Paint the screen
*
  MAT PPS.REC = ""
*IF ACTION = "M" THEN
*ECD.SCRN.NO = 2
*END ELSE
*ECD.SCRN.NO = 1
*END
  ECD.ACTION = 2; CALL SCRN.EDIT
  SCV.REC(20)<ECD.SCRN.NO> = PPS.ID
  SCV.REC(1)<ECD.SCRN.NO> = ""
  SCV.REC(2)<ECD.SCRN.NO> = ""
  SCV.REC(3)<ECD.SCRN.NO> = ""
  FOR I = 1 TO DCOUNT(SCV.REC(4)<ECD.SCRN.NO>,VM)
    SCV.REC(4)<ECD.SCRN.NO,I> = ""
    SCV.REC(5)<ECD.SCRN.NO,I> = ""
  NEXT I
  SCV.REC(6)<ECD.SCRN.NO> = ""
  SCV.REC(7)<ECD.SCRN.NO> = ""
  SCV.REC(8)<ECD.SCRN.NO> = ""
  SCV.REC(9)<ECD.SCRN.NO> = ""
* T26090 v
  SCV.REC(22)<ECD.SCRN.NO> = ""
  SCV.REC(23)<ECD.SCRN.NO> = ""
  SCV.REC(24)<ECD.SCRN.NO> = ""
  FOR I = 1 TO DCOUNT(SCV.REC(25)<ECD.SCRN.NO>,VM)
    SCV.REC(25)<ECD.SCRN.NO,I> = ""
    SCV.REC(26)<ECD.SCRN.NO,I> = ""
  NEXT I
  SCV.REC(27)<ECD.SCRN.NO> = ""
  SCV.REC(28)<ECD.SCRN.NO> = ""
* T26090 ^
  MODE = ""; O.PPS.DIR = ""; O.PPS.PROC = ""
  O.PPS.ARG = ""; O.PPS.SEC = ""; O.PPS.DESC = ""
  O.PPS.VOC = "" ; O.PPS.CEO = ""
* T26090 v
  O.PPS.PREPROCESS = ""
  O.PPS.USERINTERFACE = ""
  O.PPS.RESTRICT = ""
  O.PPS.REPORTS = ""
  OLD.RLINES = 0
  RLN = 1
  RSLN = 0
  RLINES = 0
  PAGE.RSIZE = 5
  OLD.START.RLINE = 0
  BEGIN.RPAGE = 14
  CL3 = SPACE(3)
  CL30 = SPACE(30)
* T26090 ^
  OLD.PLINES = 0
  PLN = 1; LINE.SPACE = 1
  PSLN = 0; PLINES = 0
* PAGE.PSIZE = 11; OLD.START.PLINE = 0;* T26090
  PAGE.PSIZE = 9; OLD.START.PLINE = 0
  BEGIN.PPAGE = 10
*
*---- Validate Functions record
*
  MATREADU PPS.REC FROM PMC_PROCESS, PPS.ID THEN
    OPEN "",PPS.DIR TO P.FILE ELSE
      ERRMSG = PPS.DIR:" file is missing"; GOTO 93000
    END
    O.PPS.DIR = PPS.DIR
    O.PPS.PROC = PPS.PROCESS
    O.PPS.SEC = PPS.SEC
    O.PPS.DESC = PPS.DESC
    O.PPS.VOC = PPS.VOC
* T26090 v
    O.PPS.PREPROCESS = PPS.PREPROCESS
    O.PPS.USERINTERFACE = PPS.USERINTERFACE
    O.PPS.RESTRICT = PPS.RESTRICT
    RLINES = DCOUNT(PPS.REPORTS,VM)
    FOR I = 1 TO RLINES
      O.PPS.REPORTS<I> = PPS.REPORTS<1,I>
    NEXT I
* T26090 ^
    PLINES = DCOUNT(PPS.ARG,VM)
    FOR I = 1 TO PLINES
      O.PPS.ARG<I> = PPS.ARG<1,I>
    NEXT I
    GOSUB 8100; GOSUB 1700
    GOSUB 2700 ;*T26090
  END ELSE
    ECD.NUM = 20; ECD.ACTION = 5; CALL SCRN.EDIT
    * T26090 v
    * FOR I = 1 TO 5 WHILE ECD.RET.VALUE # "END"
    *   ON I GOSUB 100,140,150,160,170
    FOR I = 1 TO 8 WHILE ECD.RET.VALUE # "END"
      ON I GOSUB 100,140,150,160,170,180,190,200
    * T26090 ^
    NEXT I
    IF ECD.RET.VALUE = "END" THEN
      RELEASE PMC_PROCESS, PPS.ID
      MAT PPS.REC = ""; GOTO 99999
    END
* T26090 v
    MODE = "A"; GOSUB 2000
* T26090 ^
    IF PPS.TYPE = "B" THEN
      MODE = "A"; GOSUB 1000
    END
  END
*
*---- Main Program
*
  MORE = 1
  LOOP
    IF PACTION = "M" THEN
      ECD.NUM = 15
    END ELSE
      ECD.NUM = 21
    END
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END" OR OPTION = ""
        RELEASE PMC_PROCESS, PPS.ID
        MORE = 0
      CASE PACTION # "M"
        ERRMSG = "*** INVALID ENTRY!! Please re-ENTER. ***"
        GOSUB 91000
      CASE OPTION = "R" AND PPS.TYPE[1,1] = "P"
        CRT CS
        STMT = "AE ":PPS.DIR:" ":PPS.PROCESS
        UDTEXECUTE STMT
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
      CASE OPTION = "R" AND PPS.TYPE[1,1] = "B"
        CRT CS
        CRT "This AE session is view-only."
        PROCESS.TEMPFILE = PPS.PROCESS : "_TEMP_" : DATE() : "_" : TIME()
        STMT = "COPY FROM " : PPS.DIR : " TO _HOLD_ " : PPS.PROCESS
        STMT:= "," : PROCESS.TEMPFILE : " OVERWRITING"
        UDTEXECUTE STMT CAPTURING JUNK RETURNING JUNK
        STMT = "AE _HOLD_ " : PROCESS.TEMPFILE
        UDTEXECUTE STMT
        STMT = "DELETE _HOLD_ " : PROCESS.TEMPFILE
        UDTEXECUTE STMT CAPTURING JUNK RETURNING JUNK
        ECD.ACTION = 2; CALL SCRN.EDIT
        ECD.ACTION = 3; CALL SCRN.EDIT
      CASE OPTION = "F"
        BEGIN CASE
          CASE O.PPS.VOC = ''
            MATREADU PPSX.REC FROM PMC_PROCESS_XREF, PPS.VOC THEN
              RELEASE PMC_PROCESS_XREF, PPS.VOC
              ERRMSG = 'VOC ALREADY IN USE, PLEASE CHANGE'
              GOSUB 91000
            END ELSE
              MAT PPSX.REC = ''
              PPSX.PROCESS.ID = PPS.ID
              PPSX.MENU = ''
              MATWRITE PPSX.REC ON PMC_PROCESS_XREF, PPS.VOC
              PPS.MENU = ""
              MATWRITE PPS.REC ON PMC_PROCESS, PPS.ID
              MORE = 0
            END
          CASE O.PPS.VOC # PPS.VOC
            MATREADU PPSX.REC FROM PMC_PROCESS_XREF, PPS.VOC THEN
              RELEASE PMC_PROCESS_XREF, PPS.VOC
              ERRMSG = 'VOC ALREADY IN USE, PLEASE CHANGE'
              GOSUB 91000
            END ELSE
              MAT PPSX.REC = ''
              PPSX.PROCESS.ID = PPS.ID
              PPSX.MENU = ''
              MATWRITE PPSX.REC ON PMC_PROCESS_XREF, PPS.VOC
              MATREADU PPSX.REC FROM PMC_PROCESS_XREF, O.PPS.VOC THEN
                DELETE PMC_PROCESS_XREF, O.PPS.VOC
                ERRMSG = 'NOTE: UPDATE MENUS ':CHANGE(PPSX.MENU,VM,", ")
                GOSUB 91000
              END ELSE
                RELEASE PMC_PROCESS_XREF, PPS.VOC
              END
              PPS.MENU = ""
              MATWRITE PPS.REC ON PMC_PROCESS, PPS.ID
              MORE = 0
            END
          CASE 1
            MATWRITE PPS.REC ON PMC_PROCESS, PPS.ID
            MORE = 0
        END CASE
      CASE OPTION = "A" AND DCOUNT(PPS.ARG,VM) = 0 AND PPS.TYPE = "B"
        MODE = "A"; GOSUB 1000
      CASE OPTION = "A" AND PPS.TYPE = "B"
        MODE = ""; GOSUB 1000
      CASE OPTION = "A"
        ERRMSG = "Cannot have arguments with process type ":PPS.TYPE
        GOSUB 91000
* T26090 v
      CASE OPTION = "P" AND DCOUNT(PPS.REPORTS,VM) = 0
        MODE = "A"; GOSUB 2000
      CASE OPTION = "P"
        MODE = ""; GOSUB 2000
* T26090 ^
      CASE NOT(NUM(OPTION))
      * T26090 v
      * CASE OPTION > 0 OR OPTION < 6
      *   ON OPTION GOSUB 100,120,140,150,160,170
      CASE OPTION > 0 OR OPTION < 10
        ON OPTION GOSUB 100,120,140,150,160,170,180,190,200
      * T26090 ^
        GOSUB 130
      CASE 1
        ERRMSG = "*** INVALID ENTRY!! Please re-ENTER. ***"
        GOSUB 91000
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99999
*
*---- Get Program Name
*
100*
  ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      IF O.PPS.DIR # "" THEN SCV.REC(ECD.NUM)<ECD.SCRN.NO> = O.PPS.DIR
      GOTO 129
    CASE ECD.RET.VALUE = "???"
      MAT GEN.XREF.REC = ""
      GXR.NAME = "SYS_FILES_R"
      GXR.FILE = SYS_FILES
      GXR.VALUE1 = "B"
      GXR.VALUE2 = "P"
      GXR.VALUE3 = "S"
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(2)<ECD.SCRN.NO> = O.PPS.DIR
        GOTO 100
      END ELSE
        ECD.RET.VALUE = GXR.ID
        SCV.REC(2)<ECD.SCRN.NO> = GXR.ID
        ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT
      END
  END CASE
  OPEN "", ECD.RET.VALUE TO P.FILE ELSE
    ERRMSG = "Cannot find file (":ECD.RET.VALUE:")"
    GOSUB 91000; GOTO 100
  END
  PPS.DIR = ECD.RET.VALUE
  IF O.PPS.DIR # "" AND PPS.DIR = O.PPS.DIR THEN
    GOTO 129
  END
*
*---- Get Type
*
110*
  MATREAD SFR.REC FROM SYS_FILES, PPS.DIR THEN
    FNDIT = 1
    ECD.RET.VALUE = SFR.TYPE
  END ELSE
    FNDIT = 0
    ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN
      GOTO 129
    END
  END
  IF ECD.RET.VALUE  # 'B' AND ECD.RET.VALUE # 'P' THEN
    ERRMSG = "INVALID PROCESS TYPE ":ECD.RET.VALUE
    GOSUB 91000
    IF FNDIT THEN
      GOTO 100
    END ELSE
      GOTO 110
    END
  END
  PPS.TYPE = ECD.RET.VALUE
  IF FNDIT THEN
    ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PPS.TYPE
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
*
*---- Get Program Name
*
120*
  ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      IF O.PPS.PROC # "" THEN SCV.REC(ECD.NUM)<ECD.SCRN.NO> = O.PPS.PROC
      GOTO 129
    CASE ECD.RET.VALUE = "???"
      MAT GEN.XREF.REC = ""
      GXR.NAME = "GEN.CODE"
      GXR.FILE = P.FILE
      GXR.SORT.FILE = PPS.DIR
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(3)<ECD.SCRN.NO> = O.PPS.PROC
        GOTO 120
      END ELSE
        ECD.RET.VALUE = GXR.ID
        SCV.REC(3)<ECD.SCRN.NO> = GXR.ID
        ECD.NUM = 3; ECD.ACTION = 5; CALL SCRN.EDIT
      END
  END CASE
  READ XX FROM P.FILE, ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate ":PPS.DIR:" , ":ECD.RET.VALUE
    GOSUB 91000; GOTO 120
  END
  PPS.PROCESS = ECD.RET.VALUE
129*
  RETURN
*
*---- Check for changes
*
130*
  IF PPS.TYPE # "B" THEN
    FOR I = 1 TO DCOUNT(SCV.REC(4)<ECD.SCRN.NO>,VM)
      SCV.REC(4)<ECD.SCRN.NO,I> = ""
      SCV.REC(5)<ECD.SCRN.NO,I> = ""
      PPS.ARG<1,I> = ""
    NEXT I
    PLINES = 0; OLD.START.PLINE = 0; GOSUB 1500; GOSUB 1700
  END ELSE
    IF PPS.DIR # O.PPS.DIR OR PPS.PROCESS # O.PPS.PROC THEN
      IF PPS.ARG = "" THEN 
        GOSUB 1100
      END ELSE
        MODE = "C"
        FOR PLN = 1 TO DCOUNT(PPS.ARG,VM)
          GOSUB 1200
        NEXT PLN
      END
    END
    O.PPS.DIR = PPS.DIR; O.PPS.PROC = PPS.PROCESS
  END
  RETURN
*
*---- Get Display Flag
*
140*
  ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.SEC = ECD.RET.VALUE
  END ELSE
    SCV.REC(6)<ECD.SCRN.NO> = O.PPS.SEC
  END
  RETURN
*
*---- Get Ceo Flag
*
150*
  ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.CEO = ECD.RET.VALUE
  END ELSE
    SCV.REC(9)<ECD.SCRN.NO> = O.PPS.CEO
  END
  RETURN
*
*---- Process Description
*
160*
  ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.DESC = ECD.RET.VALUE
  END ELSE
    SCV.REC(7)<ECD.SCRN.NO> = O.PPS.DESC
  END
  RETURN
*
*---- Menu Procedure
*
170*
  ECD.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.VOC = ECD.RET.VALUE
  END ELSE
    SCV.REC(8)<ECD.SCRN.NO> = O.PPS.VOC
  END
  RETURN
* T26090 v
*
*---- Process Report Flag
*
180*
  ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.PREPROCESS = ECD.RET.VALUE
  END ELSE
    SCV.REC(22)<ECD.SCRN.NO> = O.PPS.PREPROCESS
  END
  RETURN
*
*---- Process User Interface
*
190*
  ECD.NUM = 23; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.USERINTERFACE = ECD.RET.VALUE
  END ELSE
    SCV.REC(23)<ECD.SCRN.NO> = O.PPS.USERINTERFACE
  END
  RETURN
*
*---- Restrict
*
200*
  ECD.NUM = 24; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    PPS.RESTRICT = ECD.RET.VALUE
  END ELSE
    SCV.REC(24)<ECD.SCRN.NO> = O.PPS.RESTRICT
  END
  RETURN
* T26090 ^
*
*
*---- Get Arguments
*
1000*
  IF MODE = "A" THEN
    GOSUB 1100
  END
  MORE1 = 1
  LOOP
    ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
    OPT = ECD.RET.VALUE
    BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
        MORE1 = 0
      CASE OPT[1,1] = "S" OR OPT = ""
        GOSUB 1400
      CASE OPT = "A"
        GOSUB 1100
      CASE OPT = "D" AND PLINES > 0
        GOSUB 1300
        IF LNO # 0 THEN
          PLN = LNO
          PPS.ARG = DELETE(PPS.ARG,1,PLN,0)
          SCV.REC(4) = DELETE(SCV.REC(4),ECD.SCRN.NO,PLN,0)
          SCV.REC(5) = DELETE(SCV.REC(5),ECD.SCRN.NO,PLINES,0)
          PLINES = PLINES - 1; PLN = OLD.START.PLINE
          IF PLN > PLINES THEN PLN = PLINES
          OLD.START.PLINE = 0; GOSUB 1500; GOSUB 1750
        END
      CASE OPT = "C" AND PLINES > 0 
        MODE = "C"; GOSUB 1300
        BEGIN CASE
          CASE LNO = "0"
          CASE NUM(LNO)
            PLN = LNO; GOSUB 1200
        END CASE
      CASE OPT = "I" AND PLINES > 0
        MODE = "B"; GOSUB 1300
        IF LNO > 0 THEN
          PPS.ARG = INSERT(PPS.ARG,1,LNO,0,"")
          PLINES = PLINES + 1
          SCV.REC(4) = INSERT(SCV.REC(4),ECD.SCRN.NO,LNO,0,"")
          SCV.REC(5) = INSERT(SCV.REC(5),ECD.SCRN.NO,PLINES,0,PLINES "R%3")
          OLD.START.PLINE = 0; GOSUB 1500
          GOSUB 1750; PLN = LNO; GOSUB 1200
        END
        OLD.START.PLINE = 0; GOSUB 1500
      CASE 1
        ERRMSG = "** INVALID ENTRY **"
        GOSUB 91000
    END CASE
  WHILE MORE1 DO REPEAT
  RETURN
*
*---- Add mode
*
1100*
  MODE = "A"
  LOOP
    PLN = PLINES + 1
    OLD.PLINES = PLINES
    GOSUB 1500
    GOSUB 1200
  WHILE PLINES > OLD.PLINES DO 
    GOSUB 1700
  REPEAT
  PLN = PLINES
* OLD.START.SLINE = 0;* T26090
  OLD.START.PLINE = 0
  GOSUB 1500; GOSUB 1750
  RETURN
*
*---- Line entries
*
1200*
  PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(PLN - 1,PAGE.PSIZE)
  ECD.NUM = 5; ECD.SUB.NUM = PLN; ECD.Y = PSLN
  SCV.REC(ECD.NUM)<ECD.SCRN.NO,PLN> = PLN "R%3"
  ECD.ACTION = 5; CALL SCRN.EDIT
*
*
1210*
  ECD.NUM = 4
  ECD.SUB.NUM = PLN; ECD.Y = PSLN; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      BEGIN CASE
        CASE MODE = "A"
*         CRT @(0,PSLN):CL:
          P_X  = 45 ; P_Y = PSLN ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          SCV.REC(5) = DELETE(SCV.REC(5),ECD.SCRN.NO,PLN,0)
        CASE MODE = "B"
          DEL PPS.ARG<1,PLN>
          SCV.REC(4) = DELETE(SCV.REC(4),ECD.SCRN.NO,PLN,0)
          SCV.REC(5) = DELETE(SCV.REC(5),ECD.SCRN.NO,PLINES,0)
          PLINES = DCOUNT(PPS.ARG,VM)
        CASE 1
          SCV.REC(4)<ECD.SCRN.NO,PLN> = O.PPS.ARG<PLN>
          N = PLN; GOSUB 1600
      END CASE
      GOTO 1299
  END CASE
* Check for duplicate arguments
  DONE = 0
  PTR = 1
  LINE.CNT = DCOUNT(PPS.ARG,VM)
  ERRMSG = ''
  LOOP
    IF PTR > LINE.CNT THEN
      DONE = 'Y'
    END ELSE
      LOCATE ECD.RET.VALUE IN PPS.ARG<1>,PTR SETTING FND THEN
        IF FND # PLN THEN
* LOCATE ECD.RET.VALUE IN PPS.ARG<1>,1 SETTING FND THEN
          ERRMSG = "Argument ":ECD.RET.VALUE:" exists."
          SCV.REC(4)<ECD.SCRN.NO,PLN> = PPS.ARG<1,PLN>
*     GOSUB 91000; GOTO 1210
          GOSUB 91000
          DONE = 'Y'
        END
        PTR += 1
      END ELSE
        PTR += 1
        DONE = 'Y'
      END
    END
  UNTIL DONE
  REPEAT
  IF ERRMSG THEN GOTO 1210
  PPS.ARG<1,PLN> = ECD.RET.VALUE
  PLINES = DCOUNT(PPS.ARG,VM)
1299*
  RETURN
*
*---- Check Line Number
*
1300*
  OLD.START.PLINE = 0; GOSUB 1500
  ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
      LNO = 0
    CASE NOT(NUM(ECD.RET.VALUE))
      ERRMSG = "** Invalid Entry !! **"
      GOSUB 91000; GOTO 1300
    CASE ECD.RET.VALUE >= START.LINE AND ECD.RET.VALUE <= LAST.LINE
      LNO = ECD.RET.VALUE
    CASE 1
      ERRMSG = "** OUT OF RANGE **"
      GOSUB 91000; GOTO 1300
  END CASE
  RETURN
*
*---- Find page of scroll
*
1400*
  OLD.START.PLINE = 0
  OPT2 = OPTION[2,1]
  BEGIN CASE
    CASE OPT2 = "" OR OPT2 = "F"
      PLN = PLN + PAGE.PSIZE
      IF PLN > PLINES THEN PLN = 1
    CASE OPT2 = "R"
      PLN = PLN - PAGE.PSIZE
      IF PLN < 1 THEN PLN = 1
    CASE OPT2 = "T"
      PLN = 1
    CASE OPT2 = "B"
      PLN = PLINES
      IF PLN < 1 THEN PLN = 1
    CASE NUM(OPT2)
      LN.NO = OPTION[2,99]
      IF LN.NO < 1 OR LN.NO > PLINES THEN
        ERRMSG = "*** INVALID SELECTION ***"
        GOSUB 91000
      END ELSE
        PLN = LN.NO
      END
  END CASE
*
*---- Printing the page 
*
1500*
  START.LINE = 1 + INT((PLN - 1)/PAGE.PSIZE) * PAGE.PSIZE
  LAST.LINE = START.LINE + PAGE.PSIZE - 1
  IF LAST.LINE > PLINES THEN LAST.LINE = PLINES
  IF START.LINE = OLD.START.PLINE THEN GOTO 1599 
  OLD.START.PLINE = START.LINE; CNT = 1
  ECD.NUM = 10
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LAST.LINE/PAGE.PSIZE+.99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  FOR N = START.LINE TO LAST.LINE
    PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(N-1,PAGE.PSIZE)
    GOSUB 1600
    CNT = CNT + 1
  NEXT N
  GOSUB 1800
1599*
  RETURN
*
*---- Print lines in page
*
1600*
  ECD.NUM = 5; ECD.SUB.NUM = N; ECD.Y = PSLN
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 4; ECD.SUB.NUM = N; ECD.Y = PSLN
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Print page.no & page cnt
*
1700*
  ECD.NUM = 10
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(PLN / PAGE.PSIZE + .99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
1750*
  ECD.NUM = 11
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(PLINES/PAGE.PSIZE + .99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Fill rest of page area
*
1800*
  FOR N = CNT TO PAGE.PSIZE
    PSLN = BEGIN.PPAGE + LINE.SPACE * MOD(N - 1, PAGE.PSIZE)
*   CRT @(0,PSLN):CL:
    P_X  = 45 ; P_Y = PSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
* T26090 v
*
*---- Get Report Numbers
*
2000*
  IF MODE = "A" THEN
    GOSUB 2100
  END
  MORE1 = 1
  LOOP
    IF PC.PORT.TYPE = "termulator" AND ECD.SCRN.PC<ECD.SCRN.NO> THEN
       ECD.NUM = 17
    END ELSE
       ECD.NUM = 29
    END
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPT = ECD.RET.VALUE
    BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
        MORE1 = 0
      CASE OPT[1,1] = "S" OR OPT = ""
        GOSUB 2400
      CASE OPT = "A"
        GOSUB 2100
      CASE OPT = "D" AND RLINES > 0
        GOSUB 2300
        IF LNO # 0 THEN
          RLN = LNO
          PPS.REPORTS = DELETE(PPS.REPORTS,1,RLN,0)
          SCV.REC(25) = DELETE(SCV.REC(25),ECD.SCRN.NO,RLINES,0)
          SCV.REC(26) = DELETE(SCV.REC(26),ECD.SCRN.NO,RLN,0)
          RLINES = RLINES - 1; RLN = OLD.START.RLINE
          IF RLN > RLINES THEN RLN = RLINES
          OLD.START.RLINE = 0; GOSUB 2500; GOSUB 2750
        END
      CASE OPT = "C" AND RLINES > 0 
        MODE = "C"; GOSUB 2300
        BEGIN CASE
          CASE LNO = "0"
          CASE NUM(LNO)
            RLN = LNO; GOSUB 2200
        END CASE
      CASE OPT = "I" AND RLINES > 0
        MODE = "B"; GOSUB 2300
        IF LNO > 0 THEN
          PPS.REPORTS = INSERT(PPS.REPORTS,1,LNO,0,"")
          RLINES = RLINES + 1
          SCV.REC(25) = INSERT(SCV.REC(25),ECD.SCRN.NO,RLINES,0,RLINES "R%3")
          SCV.REC(26) = INSERT(SCV.REC(26),ECD.SCRN.NO,LNO,0,"")
          OLD.START.RLINE = 0; GOSUB 2500
          GOSUB 2750; RLN = LNO; GOSUB 2200
        END
        OLD.START.RLINE = 0; GOSUB 2500
      CASE OPT = "M" AND RLINES > 0
        GOSUB 2300
        IF LNO # 0 THEN
          RLN = LNO
          PARAM = "AUTO" :VM: PPS.REPORTS<1,RLN>
          CALL PERFORM.PROG('PMC_REPORTS_M', PARAM)
          ECD.ACTION = 2; CALL SCRN.EDIT
          ECD.ACTION = 3; CALL SCRN.EDIT
          OLD.START.RLINE = 0; GOSUB 2500; GOSUB 2750
          OLD.START.PLINE = 0; GOSUB 1500; GOSUB 1750
        END
      CASE 1
        ERRMSG = "** INVALID ENTRY **"
        GOSUB 91000
    END CASE
  WHILE MORE1 DO REPEAT
  RETURN
*
*---- Add mode
*
2100*
  MODE = "A"
  LOOP
    RLN = RLINES + 1
    OLD.RLINES = RLINES
    GOSUB 2500
    GOSUB 2200
  WHILE RLINES > OLD.RLINES DO 
    GOSUB 2700
  REPEAT
  RLN = RLINES
  OLD.START.RLINE = 0
  GOSUB 2500; GOSUB 2750
  RETURN
*
*---- Line entries
*
2200*
  RSLN = BEGIN.RPAGE + LINE.SPACE * MOD(RLN - 1,PAGE.RSIZE)
  ECD.NUM = 25; ECD.SUB.NUM = RLN; ECD.Y = RSLN
  SCV.REC(ECD.NUM)<ECD.SCRN.NO,RLN> = RLN "R%3"
  ECD.ACTION = 5; CALL SCRN.EDIT
*
*
2210*
  ECD.NUM = 26
  ECD.SUB.NUM = RLN; ECD.Y = RSLN; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      BEGIN CASE
        CASE MODE = "A"
*         CRT @(0,PSLN):CL:
          P_X  = 1 ; P_Y = RSLN ; P_VALUE = CL3 ; P_OPT = ""
          P_X<2> = 5; P_Y<2> = RSLN; P_VALUE<2> = CL30
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          SCV.REC(25) = DELETE(SCV.REC(25),ECD.SCRN.NO,RLN,0)
        CASE MODE = "B"
          DEL PPS.REPORTS<1,RLN>
          SCV.REC(25) = DELETE(SCV.REC(25),ECD.SCRN.NO,RLINES,0)
          SCV.REC(26) = DELETE(SCV.REC(26),ECD.SCRN.NO,RLN,0)
          RLINES = DCOUNT(PPS.REPORTS,VM)
        CASE 1
          SCV.REC(26)<ECD.SCRN.NO,RLN> = O.PPS.REPORTS<RLN>
          N = RLN; GOSUB 2600
      END CASE
      GOTO 2299
    CASE 1
      MATREAD PRPT.REC FROM PMC_REPORTS, ECD.RET.VALUE ELSE
         ERRMSG = "Report is not setup in PMC_REPORTS"
         GOSUB 91000
      END
  END CASE
* Check for duplicate arguments
  DONE = 0
  PTR = 1
  LINE.CNT = DCOUNT(PPS.REPORTS,VM)
  ERRMSG = ''
  LOOP
    IF PTR > LINE.CNT THEN
      DONE = 'Y'
    END ELSE
      LOCATE ECD.RET.VALUE IN PPS.REPORTS<1>,PTR SETTING FND THEN
        IF FND # RLN THEN
          ERRMSG = "Report ":ECD.RET.VALUE:" exists."
          SCV.REC(26)<ECD.SCRN.NO,RLN> = PPS.REPORTS<1,RLN>
          GOSUB 91000
          DONE = 'Y'
        END
        PTR += 1
      END ELSE
        PTR += 1
        DONE = 'Y'
      END
    END
  UNTIL DONE
  REPEAT
  IF ERRMSG THEN GOTO 2210
  PPS.REPORTS<1,RLN> = ECD.RET.VALUE
  RLINES = DCOUNT(PPS.REPORTS,VM)
2299*
  RETURN
*
*---- Check Line Number
*
2300*
  OLD.START.RLINE = 0; GOSUB 2500
  ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
      LNO = 0
    CASE NOT(NUM(ECD.RET.VALUE))
      ERRMSG = "** Invalid Entry !! **"
      GOSUB 91000; GOTO 2300
    CASE ECD.RET.VALUE >= START.RLINE AND ECD.RET.VALUE <= LAST.RLINE
      LNO = ECD.RET.VALUE
    CASE 1
      ERRMSG = "** OUT OF RANGE **"
      GOSUB 91000; GOTO 2300
  END CASE
  RETURN
*
*---- Find page of scroll
*
2400*
  OLD.START.RLINE = 0
  OPT2 = OPTION[2,1]
  BEGIN CASE
    CASE OPT2 = "" OR OPT2 = "F"
      RLN = RLN + PAGE.RSIZE
      IF RLN > RLINES THEN RLN = 1
    CASE OPT2 = "R"
      RLN = RLN - PAGE.RSIZE
      IF RLN < 1 THEN RLN = 1
    CASE OPT2 = "T"
      RLN = 1
    CASE OPT2 = "B"
      RLN = RLINES
      IF RLN < 1 THEN RLN = 1
    CASE NUM(OPT2)
      LN.NO = OPTION[2,99]
      IF LN.NO < 1 OR LN.NO > RLINES THEN
        ERRMSG = "*** INVALID SELECTION ***"
        GOSUB 91000
      END ELSE
        RLN = LN.NO
      END
  END CASE
*
*---- Printing the page 
*
2500*
  START.RLINE = 1 + INT((RLN - 1)/PAGE.RSIZE) * PAGE.RSIZE
  LAST.RLINE = START.RLINE + PAGE.RSIZE - 1
  IF LAST.RLINE > RLINES THEN LAST.RLINE = RLINES
  IF START.RLINE = OLD.START.RLINE THEN GOTO 2599 
  OLD.START.RLINE = START.RLINE
  CNT = 1
  ECD.NUM = 27
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LAST.RLINE/PAGE.RSIZE+.99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  FOR N = START.RLINE TO LAST.RLINE
    RSLN = BEGIN.RPAGE + LINE.SPACE * MOD(N-1,PAGE.RSIZE)
    GOSUB 2600
    CNT = CNT + 1
  NEXT N
  GOSUB 2800
2599*
  RETURN
*
*---- Print lines in page
*
2600*
  ECD.NUM = 25; ECD.SUB.NUM = N; ECD.Y = RSLN
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 26; ECD.SUB.NUM = N; ECD.Y = RSLN
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Print page.no & page cnt
*
2700*
  ECD.NUM = 27
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(RLN / PAGE.RSIZE + .99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
2750*
  ECD.NUM = 28
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(RLINES/PAGE.RSIZE + .99) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Fill rest of page area
*
2800*
  FOR N = CNT TO PAGE.RSIZE
    RSLN = BEGIN.RPAGE + LINE.SPACE * MOD(N - 1, PAGE.RSIZE)
    P_X  = 1 ; P_Y = RSLN ; P_VALUE = CL3 ; P_OPT = ""
    P_X<2> = 5; P_Y<2> = RSLN; P_VALUE<2> = CL30
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
* T26090 ^
*
*---- Print Data
*
8100*
  SCV.REC(1)<ECD.SCRN.NO> = PPS.TYPE
  SCV.REC(2)<ECD.SCRN.NO> = PPS.DIR
  SCV.REC(3)<ECD.SCRN.NO> = PPS.PROCESS
  FOR I = 1 TO PLINES
    SCV.REC(4)<ECD.SCRN.NO,I> = PPS.ARG<1,I>
    SCV.REC(5)<ECD.SCRN.NO,I> = I "R%3"
  NEXT I
  SCV.REC(6)<ECD.SCRN.NO> = PPS.SEC
  SCV.REC(7)<ECD.SCRN.NO> = PPS.DESC
  SCV.REC(8)<ECD.SCRN.NO> = PPS.VOC
  SCV.REC(9)<ECD.SCRN.NO> = PPS.CEO
* T26090 v
  SCV.REC(22)<ECD.SCRN.NO> = PPS.PREPROCESS
  SCV.REC(23)<ECD.SCRN.NO> = PPS.USERINTERFACE
  SCV.REC(24)<ECD.SCRN.NO> = PPS.RESTRICT
  FOR I = 1 TO RLINES
    SCV.REC(25)<ECD.SCRN.NO,I> = I "R%3"
    SCV.REC(26)<ECD.SCRN.NO,I> = PPS.REPORTS<1,I>
  NEXT I
* T26090 ^
  ECD.ACTION = 3; CALL SCRN.EDIT
  RETURN
*
*---- Print Error messages
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*
99999*
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  RETURN
END
