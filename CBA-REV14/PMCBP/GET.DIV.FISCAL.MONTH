  SUBROUTINE GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,HEADING,CTL.KEY,CURR,DIV.CODE);* T23278
*      SUBROUTINE GET.FISCAL.MONTH(CONO,POSTING.MON,HEADING,CTL.KEY,CURR);* T23278
*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - GET.DIV.FISCAL.MONTH
* BY          - WALID YAMOUT, C.B.A
* DATE        - 10/11/84
* DESCRIPTION -
*          This Subroutine display a screen to input the Posting Month,
*     and also display the current period and ending date of that period.
*     Company number, the Heading of the screen and the Key for the Control
*     file need to be passed to this Subroutine and it return value as the
*     variable POSTING.MON, a check for END is needed in the main program.
*     Example for the calling statment :
*     CALL GET.FISCAL.MONTH(COMPANY.NUMBER,POSTING.MON,"POSTING PROCESS","JCFISCAL",CURRENT.MONTH)
*     NOTE the heading is POSTING PROCESS, and the key for the control file
*     is the nnnJCFISCAL. Where nnn is the company number.
*          Also, this program allowes to input the current period and the
*     next two periods. It do not allow to input a period that been closed.
*T21177 diane 01/16/1997 * REV11 UPG
*T23278 markt 11/04/1998 * Enable division-level EOP processing.
*                          Correlate fiscal month to division.
*ENDDOC
**************************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
**** INTITIALIZATION
*
  TODAY = DATE()
  CURR = ""
  REC = ""
  REC.DATES = ""
  ERRMSG = ""
  READ REC FROM CONTROL,CONO:CTL.KEY ELSE
      POSTING.MON = "END"
      ERRMSG = "CANNOT LOCATE CONTROL ":CTL.KEY
      GOTO 91000
  END
***** T23278 v
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL DIVISIONS RECORD"
      GOTO 91000
  END
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL DIV.SECURITY RECORD"
      GOTO 91000
  END
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
          ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
          GOTO 91000
      END
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
          ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record"
          GOTO 91000
      END
  END ELSE
      POS = 1
  END
***** T23278 ^
  READ REC.DATES FROM CONTROL,CONO:"SALESDATES" ELSE
      POSTING.MON = "END"
      ERRMSG = "CANNOT LOCATE CONTROL SALESDATES"
      GOTO 91000
  END
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
  NEXT.TO.LAST.PERIOD = NUM.PERIODS - 1
* 
***** INT ECD.RT.VALUE AND PRINT SCREEN 
* 
  LE.SP = INT((40-LEN(HEADING))/2)
  IF LE.SP < 0 THEN LE.SP = 0
  SCV.REC(1)<ECD.SCRN.NO> = STR(" ",LE.SP):HEADING
***** T23278 v
*  YEAR = REC<1>[1,4]
*  CURR = REC<1>[5,2]
  YEAR = REC<1,POS>[1,4]
  CURR = REC<1,POS>[5,2]
***** T23278 ^
  IF CURR < 1 OR CURR > NUM.PERIODS THEN
      POSTING.MON = "END"
      ERRMSG = "INVALID CURRENT PERIOD"; GOTO 91000
  END
  END.DATE = REC.DATES<CURR+1,1>
  SCV.REC(2)<ECD.SCRN.NO>=CURR
  SCV.REC(4)<ECD.SCRN.NO>=END.DATE
  ECD.ACTION=3;CALL SCRN.EDIT
  IF GUIFORM THEN
      P_TITLE = SCV.REC(1)<ECD.SCRN.NO>
      CALL VSI_PTITLE(P_TITLE,ERROR)
  END
  ECD.NUM = 5
  IF CURR < NEXT.TO.LAST.PERIOD THEN
      ECD.VALDAT = STR("0",(2-LEN(CURR))):CURR:","
      ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+1))):(CURR+1):","
      ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+2))):(CURR+2)
      TEMP = STR("0",(2-LEN(CURR+1))):(CURR+1):" or "
      TEMP = TEMP:STR("0",(2-LEN(CURR+2))):(CURR+2)
  END ELSE
      IF CURR = NEXT.TO.LAST.PERIOD THEN
          ECD.VALDAT = NEXT.TO.LAST.PERIOD:",":NUM.PERIODS:",01"
          TEMP = NUM.PERIODS:" or 01"
      END ELSE
          ECD.VALDAT = NUM.PERIODS:",01,02"
          TEMP = "01 or 02"
      END
  END
  IF TODAY > END.DATE THEN
      P_X  = 20 ; P_Y = 13 ; P_VALUE = "YOU EXCEEDED CURRENT PERIOD ENDING DATE" ; P_OPT = ""
      P_X  := AM:27 ; P_Y := AM:15 ; P_VALUE := AM:"Suggested Period ":TEMP
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
      ECD.DEFAULT = CURR
  END
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
      CASE ECD.RET.VALUE = "END" OR NOT(NUM(ECD.RET.VALUE))
          POSTING.MON = "END"
      CASE ECD.RET.VALUE > 0 AND ECD.RET.VALUE < NUM.PERIODS + 1
          IF CURR > (NUM.PERIODS -2) AND ECD.RET.VALUE < 3 THEN YEAR = YEAR + 1
          POSTING.MON = YEAR:ECD.RET.VALUE
***** T23278 v
*          CURR = REC<1>
          CURR = REC<1,POS>
***** T23278 ^
      CASE 1
          POSTING.MON = "END"
  END CASE
  GOTO 999999
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
* 91000* 
*    PRINT @(0,23) : CL : ERRMSG : 
*    INPUT XX,1 : 
*    PRINT @(0,23) : CL : 
999999* 
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
