*COPY>CPYLIB>COM1
**********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM      - DEPT.MAINT
*
* BY           - JIHAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE         - 09/19/83
*
* DESCRIPTION  -
*
*T23651 cindy 02/24/1999 * scrolling not working after a change
*T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*T26919 cmykleb 10/17/2002 * Correct display problem when deleting a
*                            line from the division columns.
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
  DIM SAVE.DEPT.REC(10)
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
  MAT FILE.VARS = ''
  OPEN '', 'PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = "PMC.SCREENS FILE IS MISSING"; GOTO 93000
  OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE IS MISSING"; GOTO 93000
  OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE IS MISSING"; GOTO 93000
  OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG = "DIVISION FILE IS MISSING"; GOTO 93000
  OPEN '', 'PREFIX' TO PREFIX ELSE ERRMSG = "PREFIX FILE IS MISSING"; GOTO 93000
  OPEN '', 'CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000
  OPEN '', 'COMPANY' TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000
  OPEN '', 'COA' TO COA ELSE ERRMSG = "COA FILE IS MISSING"; GOTO 93000
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  IN.ACCT.LEN = LEN(CO.ACCT.PIC)
******************
* INITIALIZATION *
******************
  MAT EDIT.COM.DRIVER = ""
  DASHES = STR('-',80)
  OLD.NAME = ''
  UNKNOWN = "????????"
  PAGE.SIZE = 12
  BEGIN.PAGE = 8
  LINE.SPACE = 1
  CL39 = SPACE(39)
*******************
* MAIN PROCESSING *
*******************
100*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'DEPT.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
200*  
  MAT DEPT.REC = ''
  DESC.DIV = "" ; SAVE.DEPT.DIV = ""
  DESC.CCTR = '' ; SAVE.DEPT.CCTRS = ''
  LINES = 0;OLD.START.LINE = 0;LN = 1
  DLINES = 0; OLD.START.DLINE = 0; DLN = 1
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
*    FOR I = 8 TO 19
* P_X  = 0 ; P_Y = I ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*    NEXT I
* TESTING DISPLAY OF LOGO MANY TIMES
  P_X  = 0 ; P_Y = 8 ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:9 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:10 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:11 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:12 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:13 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:14 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:15 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:16 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:17 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:18 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:19 ; P_VALUE := AM:""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
210*  
  ECD.NUM = 1
  ECD.VALDAT.CODE = '4'
  ECD.VALDAT.FILE = DEPARTMENT
  ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      GOTO 99999
    CASE ECD.RET.VALUE[1,2] = "00"
      ERRMSG = "CANNOT USE GENERAL DEPARTMENT - 00"
      GOSUB 91000; GOTO 210
    CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''
      * T26126 v
      READU DUMMY FROM DEPARTMENT, CONO:ECD.RET.VALUE LOCKED
        ERRMSG = 'DEPARTMENT record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 210 
      END ELSE NULL
      * T26126 ^
      IF INDEX(ECD.RET.VALUE,"-",1) THEN
        MAIN.DEPT = FIELD(ECD.RET.VALUE,"-",1)
        * T26126 v
        READU DUMMY FROM DEPARTMENT, CONO : MAIN.DEPT LOCKED
          ERRMSG = 'DEPARTMENT record is locked by user - ':GETUSERNAME(STATUS())
          GOSUB 91000;GOTO 210 
        END ELSE
        * T26126 ^
          ERRMSG = "Cannot locate main department - " : MAIN.DEPT
          GOSUB 91000; GOTO 210
        END
      END
      FOR I = 1 TO DEPT.REC.SIZE
        DEPT.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
      SAVE.DEPT.CCTRS = DEPT.CCTRS
      SAVE.DEPT.DIV = DEPT.DIV
      DEPT.ID = ECD.RET.VALUE
      GOSUB 80000
      OLD.NAME = DEPT.DESC
    CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
      BEGIN CASE
        CASE LEN(ECD.RET.VALUE) = 2
        CASE LEN(ECD.RET.VALUE) # 5
          ERRMSG = 'If sub-department used, length must be 5 (XX-XX)'
          GOSUB 91000; GOTO 210
        CASE ECD.RET.VALUE[3,1] # '-'
          ERRMSG = 'Third character must be a "-" in sub-departments'
          GOSUB 91000; GOTO 210
        CASE 1
          MAIN.DEPT = FIELD(ECD.RET.VALUE,"-",1)
          * T26126 v
          READU DUMMY FROM DEPARTMENT, CONO : MAIN.DEPT LOCKED
            ERRMSG = 'DEPARTMENT record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 210 
          END ELSE
          * T26126 ^
            ERRMSG = "Cannot locate main department - " : MAIN.DEPT
            GOSUB 91000; GOTO 210
          END
      END CASE
      DEPT.ID = ECD.RET.VALUE
      FOR REQUEST = 1 TO 3
        ON REQUEST GOSUB 1000,1100,1200
        IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = '' THEN GOTO 200
      NEXT REQUEST
      ACTION = 'A'
      LOOP
        DLN = DLINES + 1
        OLD.DLINES = DLINES
        GOSUB 20010
      WHILE DLINES > OLD.DLINES DO REPEAT
      DLN = 1; GOSUB 21000
      ACTION = 'A'
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 10010
      WHILE LINES > OLD.LINES DO REPEAT
      LN = 1; GOSUB 11000
    CASE 1
      GOTO 200
  END CASE
300*
  ECD.NUM = 9
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.ACTION=4;CALL SCRN.EDIT
  REQUEST = ECD.RET.VALUE
  BEGIN CASE
    CASE REQUEST = 'END' OR REQUEST = 'E'
      GOTO 200
    CASE NUM(REQUEST)
      IF REQUEST > 0 THEN
        ON REQUEST GOSUB 1000,1100,1200
      END
    CASE REQUEST = "D"
      GOSUB 20000
    CASE REQUEST = "C"
      GOSUB 10000
    CASE REQUEST = "F"
      CNT = DCOUNT(SAVE.DEPT.CCTRS,VM)
      NEW.CCTRS = ''
      PTR = 0
      FOR I = 1 TO CNT
        TEMP = SAVE.DEPT.CCTRS<1,I>
        LOCATE TEMP IN DEPT.CCTRS<1>,1 SETTING DEPT.FND ELSE
          DEPT.FND = 0
          CCTR.FND = 1
          MATREADU CCTR.REC FROM COST.CNTR, CONO:TEMP ELSE
            CCTR.FND = 0
            ERRMSG = 'CANNOT LOCATE COST CENTER # ':TEMP
            GOSUB 91000
          END
          BEGIN CASE
            CASE CCTR.FND = 0
            CASE CCTR.DEPT = DEPT.ID
              RELEASE COST.CNTR, CONO : TEMP
              PTR = PTR + 1
              NEW.CCTRS<1,PTR> = TEMP
            CASE CCTR.DEPT = ''
              CCTR.DEPT = DEPT.ID
              MATWRITE CCTR.REC ON COST.CNTR, CONO : TEMP
              PTR = PTR + 1
              NEW.CCTRS<1,PTR> = TEMP
            CASE CCTR.DEPT[1,2] = DEPT.ID
              RELEASE COST.CNTR, CONO : TEMP
              PTR = PTR + 1
              NEW.CCTRS<1,PTR> = TEMP
            CASE CCTR.DEPT = DEPT.ID[1,2]
              RELEASE COST.CNTR, CONO : TEMP
              PTR = PTR + 1
              NEW.CCTRS<1,PTR> = TEMP
            CASE 1
              RELEASE COST.CNTR, CONO : TEMP
              ERRMSG = 'COST CENTER (':TEMP:') IS FOR DEPARTMENT # ':CCTR.DEPT
              GOSUB 91000
          END CASE
        END
        IF DEPT.FND THEN
          PTR = PTR + 1
          NEW.CCTRS<1,PTR> = TEMP
          DEPT.CCTRS = DELETE(DEPT.CCTRS,1,DEPT.FND,0)
        END
      NEXT I
      OLD.CNT = DCOUNT(DEPT.CCTRS,VM)
      NEW.CNT = DCOUNT(NEW.CCTRS,VM)
      FOR I = 1 TO OLD.CNT
        CCTR.FND = 1
        MATREADU CCTR.REC FROM COST.CNTR, CONO : DEPT.CCTRS<1,I> ELSE
          CCTR.FND = 0
        END
        IF CCTR.FND THEN
          IF CCTR.DEPT = DEPT.ID THEN
            CCTR.DEPT = ''
            MATWRITE CCTR.REC ON COST.CNTR, CONO : DEPT.CCTRS<1,I>
          END ELSE
            RELEASE COST.CNTR, CONO : DEPT.CCTRS<1,I>
          END
        END
      NEXT I
      IF INDEX(DEPT.ID,"-",1) THEN
        MAIN.DEPT = FIELD(DEPT.ID,"-",1)
        OLD.CCTRS = DEPT.CCTRS
        MAT SAVE.DEPT.REC = MAT DEPT.REC
        DEPT.FND = 1
        MATREADU DEPT.REC FROM DEPARTMENT, CONO : MAIN.DEPT ELSE
          ERRMSG = "CANNOT LOCATE MAIN DEPARTMENT - " : MAIN.DEPT
          GOSUB 91000
          DEPT.FND = 0
        END
        IF DEPT.FND THEN
          FOR I = 1 TO OLD.CNT
            LOCATE OLD.CCTRS<1,I> IN DEPT.CCTRS<1>,1 SETTING CCTR.FND ELSE
              CCTR.FND = 0
            END
            IF CCTR.FND THEN
              DEPT.CCTRS = DELETE(DEPT.CCTRS,1,CCTR.FND,0)
            END
          NEXT I
          FOR I = 1 TO NEW.CNT
            LOCATE NEW.CCTRS<1,I> IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
              INS NEW.CCTRS<1,I> BEFORE DEPT.CCTRS<1,CCTR.FND>
            END
          NEXT I
          MATWRITE DEPT.REC ON DEPARTMENT, CONO : MAIN.DEPT
        END
        MAT DEPT.REC = MAT SAVE.DEPT.REC
      END
      DEPT.CCTRS = ""
      FOR I = 1 TO NEW.CNT
        LOCATE NEW.CCTRS<1,I> IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
          INS NEW.CCTRS<1,I> BEFORE DEPT.CCTRS<1,CCTR.FND>
        END
      NEXT I
      CNT = DCOUNT(SAVE.DEPT.DIV,VM)
      NEW.DIV = ""
      PTR = 0
      FOR I = 1 TO CNT
        TEMP = SAVE.DEPT.DIV<1,I>
        LOCATE TEMP IN DEPT.DIV<1>,1 SETTING DEPT.FND ELSE
          DIV.FND = 1
          MATREADU DIV.REC FROM DIVISION, CONO : TEMP ELSE
            DIV.FND = 0
            ERRMSG = "CANNOT LOCATE DIVISION # ":TEMP; GOSUB 91000
          END
          IF DIV.FND THEN
            LOCATE DEPT.ID IN DIV.DEPT<1>,1 BY "AL" SETTING DEPT.FND ELSE
              INS DEPT.ID BEFORE DIV.DEPT<1,DEPT.FND>
            END
            MATWRITE DIV.REC ON DIVISION, CONO : TEMP
            PTR = PTR + 1
            NEW.DIV<1,PTR> = TEMP
          END
          DEPT.FND = 0
        END
        IF DEPT.FND THEN
          PTR = PTR + 1
          NEW.DIV<1,PTR> = TEMP
          DEPT.DIV = DELETE(DEPT.DIV,1,DEPT.FND,0)
        END
      NEXT I
      OLD.CNT = DCOUNT(DEPT.DIV,VM)
      NEW.CNT = DCOUNT(NEW.DIV,VM)
      FOR I = 1 TO OLD.CNT
        DIV.FND = 1
        MATREADU DIV.REC FROM DIVISION, CONO : DEPT.DIV<1,I> ELSE DIV.FND = 0
        IF DIV.FND THEN
          LOCATE DEPT.ID IN DIV.DEPT<1>,1 SETTING DEPT.FND ELSE
            DEPT.FND = 0
          END
          IF DEPT.FND THEN
            DIV.DEPT = DELETE(DIV.DEPT,1,DEPT.FND,0)
            MATWRITE DIV.REC ON DIVISION, CONO : DEPT.DIV<1,I>
          END ELSE
            RELEASE DIVISION, CONO : DEPT.DIV<1,I>
          END
        END
      NEXT I
      DEPT.DIV = ""
      FOR I = 1 TO NEW.CNT
        LOCATE NEW.DIV<1,I> IN DEPT.DIV<1>,1 BY "AR" SETTING DEPT.FND ELSE
          INS NEW.DIV<1,I> BEFORE DEPT.DIV<1,DEPT.FND>
        END
      NEXT I
      READU JOB.REPORT.CONTROL FROM CONTROL, CONO:"JOB.REPORT.CONTROL" ELSE JOB.REPORT.CONTROL = ""
      LOCATE DEPT.ID IN JOB.REPORT.CONTROL,1 BY "AL" SETTING XX ELSE
        INS DEPT.ID BEFORE JOB.REPORT.CONTROL<XX>
      END
      WRITE JOB.REPORT.CONTROL ON CONTROL, CONO:"JOB.REPORT.CONTROL"
      MATWRITE DEPT.REC ON DEPARTMENT, CONO : DEPT.ID
      GOTO 200
  END CASE
  GOTO 300
*-----------------*
*   SUBROUTINES   *
*-----------------*
1000*  
  ECD.NUM = 2
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN DEPT.DESC = ECD.RET.VALUE
1009 RETURN  
1100*  
  ECD.NUM = 5
  SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION=5;CALL SCRN.EDIT
  ECD.MAXL = IN.ACCT.LEN
  ECD.VALDAT.CODE = '2'; ECD.VALDAT.FILE = COA; ECD.PREFIX.ID = CONO
  SCV.REC(ECD.NUM)<1> = DEPT.ACCT
  ECD.PATRN = CO.ACCT.MATCH
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    DEPT.ACCT = ECD.RET.VALUE
    FOR L = 1 TO COA.REC.SIZE; COA.REC(L) = ECD.VALDAT.ITEM<L>; NEXT L
    SCV.REC(ECD.NUM)<1> = DEPT.ACCT CO.ACCT.MASK; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = COA.DESC; ECD.ACTION=5;CALL SCRN.EDIT
  END
  RETURN
1200*  
  ECD.NUM = 7
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    DEPT.TYPE = ECD.RET.VALUE
    GOSUB 1250
    SCV.REC(8)<ECD.SCRN.NO> = TYPE.DESC
    ECD.NUM = 8;ECD.ACTION = 5;CALL SCRN.EDIT
  END
  RETURN
1250*  
  TYPE.DESC = ''
  BEGIN CASE
    CASE DEPT.TYPE = ''
      TYPE.DESC = ''
    CASE DEPT.TYPE = 'A'
      TYPE.DESC = 'ART'
    CASE DEPT.TYPE = 'B'
      TYPE.DESC = 'BINDERY'
    CASE DEPT.TYPE = 'M'
      TYPE.DESC = 'MISC'
    CASE DEPT.TYPE = 'P'
      TYPE.DESC = 'PRESS'
    CASE DEPT.TYPE = 'R'
      TYPE.DESC = 'PREP'
    CASE DEPT.TYPE = 'S'
      TYPE.DESC = 'SHIPPING'
  END CASE
  RETURN
10000*
  ECD.NUM = 10; SCV.REC(10)<1> = ""
  ECD.ACTION = 4; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
  BEGIN CASE
    CASE ACTION = "" OR ACTION = "END"
      GOTO 10009
    CASE ACTION = 'A'
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 10010
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
      GOSUB 11000
    CASE ACTION = 'C'
      GOSUB 11000
      ECD.NUM = 11
      ECD.MINV = OLD.START.LINE
      IF LAST.LINE < LINES THEN ECD.MAXV = LAST.LINE ELSE ECD.MAXV = LINES
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      IF LN.NO THEN
        LN = LN.NO
        GOSUB 10010
      END
    CASE ACTION = 'D'
      GOSUB 11000
      ECD.NUM = 11
      ECD.MINV = OLD.START.LINE
      IF LAST.LINE < LINES THEN ECD.MAXV = LAST.LINE ELSE ECD.MAXV = LINES
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      IF LN.NO THEN
        LN = LN.NO
        SAVE.DEPT.CCTRS = DELETE(SAVE.DEPT.CCTRS,1,LN,0)
        DESC.CCTR = DELETE(DESC.CCTR,1,LN,0)
        LINES = DCOUNT(SAVE.DEPT.CCTRS,VM)
        IF LN > 1 AND LN > LINES THEN LN = LN - 1
        IF LN < 1 THEN LN = 1
        OLD.START.LINE = 0
      END
      GOSUB 11000
    CASE ACTION = 'S'
*T23651 V
*      LN = LN + PAGE.SIZE
      LN = START.LINE + PAGE.SIZE
*T23651 ^
      IF LN > LINES THEN LN = 1
      GOSUB 11000
    * T25978 v
    CASE ACTION = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 11000
    CASE ACTION = 'ST'
      LN = 1
      GOSUB 11000
    CASE ACTION = 'SB'
      LN = LINES
      GOSUB 11000
    * T25978 ^
  END CASE
  GOTO 10000
10009*
  RETURN
10010*  
  GOSUB 11000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 40 ; P_Y = SLN ; P_VALUE = CL39 ; P_OPT = ""
  P_X  := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100*  
  X = 44
  Y = SLN
  TYP = 1
  MINL = 2
  MAXL = 4
  O.R = 'O'
  DEFAULT = SAVE.DEPT.CCTRS<1,LN>
  CALL EDIT.SUB
  IF VALUE = 'END' OR VALUE = '' THEN
    IF DESC.CCTR<1,LN> = '' THEN
      SAVE.DEPT.CCTRS = DELETE(SAVE.DEPT.CCTRS,1,LN,0)
      DESC.CCTR = DELETE(DESC.CCTR,1,LN,0)
    END
    P_X  = 40 ; P_Y = SLN ; P_VALUE = CL39 ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 10999
  END
  LOCATE VALUE IN SAVE.DEPT.CCTRS<1>,1 SETTING FND ELSE FND = 0
  IF FND AND VALUE # DEPT.CCTRS<1,LN> THEN
    ERRMSG = 'COST-CNTR (':VALUE:') ALREADY USED'
    GOSUB 91000; GOTO 10100
  END
  MATREAD CCTR.REC FROM COST.CNTR, CONO:VALUE ELSE
    ERRMSG = 'COST.CNTR (':VALUE:') IS NOT ON FILE.'
    GOSUB 91000; GOTO 10100
  END
  IF CCTR.DEPT # '' AND CCTR.DEPT # DEPT.ID THEN
    ERRMSG = "THIS COST.CNTR DOESN'T BELONG TO THIS DEPT."
    GOSUB 91000; GOTO 10100
  END
  SAVE.DEPT.CCTRS<1,LN> = VALUE
  DESC.CCTR<1,LN> = CCTR.DESC
  P_X  = 49 ; P_Y = SLN ; P_VALUE = CCTR.DESC "L#30" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LINES = DCOUNT(SAVE.DEPT.CCTRS,VM)
10999 RETURN  
11000*  
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 40 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:44 ; P_Y := AM:SLN ; P_VALUE := AM:SAVE.DEPT.CCTRS<1,N> "L#4"
    P_X  := AM:49 ; P_Y := AM:SLN ; P_VALUE := AM:DESC.CCTR<1,N> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 40 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999 RETURN  
20000*
  ECD.NUM = 10; SCV.REC(10)<1> = ""
  ECD.ACTION = 4; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
  BEGIN CASE
    CASE ACTION = "" OR ACTION = "END"
      GOTO 20009
    CASE ACTION = 'A'
      LOOP
        DLN = DLINES + 1
        OLD.DLINES = DLINES
        GOSUB 20010
      WHILE DLINES > OLD.DLINES DO REPEAT
      DLN = DLINES
      GOSUB 21000
    CASE ACTION = 'C'
      GOSUB 21000
      ECD.NUM = 11
      ECD.MINV = OLD.START.DLINE
      IF LAST.DLINE < DLINES THEN ECD.MAXV = LAST.DLINE ELSE ECD.MAXV = DLINES
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      IF LN.NO THEN
        DLN = LN.NO
        GOSUB 20010
      END
    CASE ACTION = 'D'
      GOSUB 21000
      ECD.NUM = 11
      ECD.MINV = OLD.START.DLINE
      IF LAST.DLINE < DLINES THEN ECD.MAXV = LAST.DLINE ELSE ECD.MAXV = DLINES
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      IF LN.NO THEN
        DLN = LN.NO
        SAVE.DEPT.DIV = DELETE(SAVE.DEPT.DIV,1,DLN,0)
        DESC.DIV = DELETE(DESC.DIV,1,DLN,0)
        DLINES = DCOUNT(SAVE.DEPT.DIV,VM)
        IF DLN > 1 AND DLN > DLINES THEN DLN = DLN - 1
        IF DLN < 1 THEN DLN = 1
        OLD.START.DLINE = 0
      END
      GOSUB 21000
    CASE ACTION = 'S'
      DLN = DLN + PAGE.SIZE
      IF DLN > DLINES THEN DLN = 1
      GOSUB 21000
      OLD.START.LINE = 0; GOSUB 11000
    * T25978 v
    CASE ACTION = 'SR'
      DLN -= PAGE.SIZE
      IF DLN < 1 THEN DLN = 1
      GOSUB 21000
      OLD.START.LINE = 0; GOSUB 11000
    CASE ACTION = 'ST'
      DLN = 1
      GOSUB 21000
      OLD.START.LINE = 0; GOSUB 11000
    CASE ACTION = 'SB'
      DLN = DLINES
      GOSUB 21000
      OLD.START.LINE = 0; GOSUB 11000
    * T25978 ^
  END CASE
  GOTO 20000
20009*
  RETURN
20010*  
  GOSUB 21000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(DLN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = CL39 ; P_OPT = ""
  P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:DLN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
20100*  
  X = 4
  Y = SLN
  TYP = 1
  MINL = 2
  MAXL = 2
  O.R = 'O'
  DEFAULT = SAVE.DEPT.DIV<1,DLN>
  CALL EDIT.SUB
  IF VALUE = 'END' OR VALUE = '' THEN
    IF DESC.DIV<1,DLN> = '' THEN
      SAVE.DEPT.DIV = DELETE(SAVE.DEPT.DIV,1,DLN,0)
      DESC.DIV = DELETE(DESC.DIV,1,DLN,0)
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = CL39 ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 20999
  END
*
  LOCATE VALUE IN SAVE.DEPT.DIV<1>,1 SETTING FND ELSE FND = 0
  IF FND THEN
    LOCATE VALUE IN DEPT.DIV<1>,1 SETTING FND.IN.OLD ELSE FND.IN.OLD = 0
    IF FND.IN.OLD=0 THEN
      SAVE.DEPT.DIV = DELETE(SAVE.DEPT.DIV,1,FND,0)
      DESC.DIV = DELETE(DESC.DIV,1,FND,0)
    END
  END
*
  LOCATE VALUE IN SAVE.DEPT.DIV<1>,1 SETTING FND ELSE FND = 0
  IF FND AND VALUE # DEPT.DIV<1,DLN> THEN
    ERRMSG = 'DIVISION (':VALUE:') ALREADY USED'
    GOSUB 91000; GOTO 20100
  END
  REM  LOCATE VALUE IN DEPT.DIV<1>,1 SETTING FND ELSE FND = 0
  REM  IF FND THEN
  REM     ERRMSG = 'DIVISION (':VALUE:') ALREADY USED'
  REM     GOSUB 91000; GOTO 20100
  REM  END
  MATREAD DIV.REC FROM DIVISION, CONO : VALUE ELSE
    ERRMSG = 'DIVISION (':VALUE:') IS NOT ON FILE.'
    GOSUB 91000; GOTO 20100
  END
  SAVE.DEPT.DIV<1,DLN> = VALUE
  DESC.DIV<1,DLN> = DIV.DESC
  P_X  = 7 ; P_Y = SLN ; P_VALUE = DIV.DESC "L#30" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DLINES = DCOUNT(SAVE.DEPT.DIV,VM)
20999 RETURN  
21000*  
  START.DLINE = 1 + INT((DLN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.DLINE = OLD.START.DLINE THEN GOTO 21999
  OLD.START.DLINE = START.DLINE
  LAST.DLINE = START.DLINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.DLINE TO LAST.DLINE UNTIL N > DLINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:SAVE.DEPT.DIV<1,N> "L#2"
    P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:DESC.DIV<1,N> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
*T26919 v
*   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    P_X  = 0 ; P_Y = SLN ; P_VALUE = SPACE(3) ; P_OPT = ""
    P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(2)
    P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(30)
*T26919 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
21999 RETURN  
80000*  
  SCV.REC(1)<ECD.SCRN.NO> = DEPT.ID
  SCV.REC(2)<ECD.SCRN.NO> = DEPT.DESC
  SCV.REC(5)<ECD.SCRN.NO> = DEPT.ACCT CO.ACCT.MASK
  MATREAD COA.REC FROM COA, CONO : DEPT.ACCT ELSE COA.DESC = UNKNOWN
  SCV.REC(6)<ECD.SCRN.NO> = COA.DESC
  SCV.REC(7)<ECD.SCRN.NO> = DEPT.TYPE
  GOSUB 1250
  SCV.REC(8)<ECD.SCRN.NO> = TYPE.DESC
  ECD.ACTION = 3; CALL SCRN.EDIT
81000*  
  DLINES = DCOUNT(SAVE.DEPT.DIV,VM)
  FOR I = 1 TO DLINES
    MATREAD DIV.REC FROM DIVISION, CONO:SAVE.DEPT.DIV<1,I> ELSE DIV.DESC = UNKNOWN
    DESC.DIV<1,I> = DIV.DESC
  NEXT I
  DLN = 1; OLD.START.DLINES = 0; GOSUB 21000
  LINES = DCOUNT(SAVE.DEPT.CCTRS,VM)
  FOR I = 1 TO LINES
    MATREAD CCTR.REC FROM COST.CNTR, CONO : SAVE.DEPT.CCTRS<1,I> ELSE
      CCTR.DESC = '????????????????????'
    END
    DESC.CCTR<1,I> = CCTR.DESC
  NEXT I
  LN = 1; OLD.START.LINE = 0; GOSUB 11000
  RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*  
*    PRINT @(0,23) : CL : ERRMSG : ; INPUT XX,1 :
*    PRINT @(0,23) : CL :
*    RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 92000*  
*    ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
*    RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000*  
*    ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*  
*    PRINT @(-1) :
END
