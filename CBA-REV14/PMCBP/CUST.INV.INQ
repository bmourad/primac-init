  SUBROUTINE CUST.INV.INQ(CONO)
***************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* SOURCE        - BP
* PROGRAM       - CUST.INV.INQ
* BY            - JIHAD YAMOUT, C.B.A
* DATE          - 09/28/84
* DESCRIPTION   - THIS SUBROUTINE DISPLAYS ALL INVOICES AND JOBS FOR ONE
*                 CUSTOMER.
*
* LAST COMPILE - 355
* TASK 20532 JR EXPAND INVOICE AMOUNT TO 8.2
*T25762 renee 05/21/01 * Sort invoices by date - prompt for oldest to
*                        newest or newest to oldest. Also, add first line 
*                        of the invoice.
*
*T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
***************************************************************************
*
**** INSERT FILE EQUATES
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.CUST
*COPY>CPYLIB>EDIT.COM
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>INVOICE  ; * T25762
*COPY>ARS.CPYLIB>MANUAL.INVOICE  ; * T25762
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*** INT
* T25762 v Open MANUAL.INVOICE file
  OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE
    ERRMSG = "Unable to open MANUAL.INVOICE file" ; GOSUB 93000 ; RETURN
  END
* T2567767 ^
*
  INVOICE.LIST = ""    ; * T25762
  BEGIN.PAGE = 7
* T20532 v
  PAGE.SIZE = 7
  LINE.SPACE = 2
* T20532 ^
  LINES = 0
  OLD.START.LINE=0
*
**** SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  OPEN '','OPEN.RECV' TO OPEN.RECV ELSE 
    ERRMSG = "CAN'T OPEN OPEN.RECV FILE "
    GOSUB 91000
  END
  SCV.REC(2)<ECD.SCRN.NO> = CUST.NAME
  ECD.ACTION = 3; CALL SCRN.EDIT
  LINES = COUNT(CUST.INVOICE ,VM) + (CUST.INVOICE # "")
* T25762 v First prompt for sort option. Then build an array that has
*          invoices in selected order. 
  TEMP.LINE = "" 
  FOR I = 1 TO LINES
    MATREAD OR.REC FROM OPEN.RECV, CONO:CUST.INVOICE<1,I> THEN
      TEMP.LINE<1,-1> = CUST.INVOICE<1,I>
    END
  NEXT I
  SORT.OLD.TO.NEW = 1
  ECD.NUM = 19
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 1 THEN
    SORT.OLD.TO.NEW = 1
  END ELSE
    SORT.OLD.TO.NEW = 0
  END
  LINES = DCOUNT(TEMP.LINE,VM)
  FOR I = 1 TO LINES
    MATREAD OR.REC FROM OPEN.RECV, CONO:TEMP.LINE<1,I> ELSE
      MAT OR.REC = ""
    END
    IF SORT.OLD.TO.NEW THEN
      LOCATE OR.INV.DATE IN INVOICE.LIST<2>,1 BY "AR" SETTING POS ELSE NULL
    END ELSE
      LOCATE OR.INV.DATE IN INVOICE.LIST<2>,1 BY "DR" SETTING POS ELSE NULL
    END
    LOOP
      IF OR.INV.DATE # INVOICE.LIST<2,POS> THEN EXIT
      IF TEMP.LINE<1,I> > INVOICE.LIST<1,POS> THEN 
        POS += 1
      END ELSE
        EXIT
      END
    REPEAT
    INS TEMP.LINE<1,I> BEFORE INVOICE.LIST<1,POS>
    INS OR.INV.DATE BEFORE INVOICE.LIST<2,POS>
  NEXT I
* T25762 ^
  LN = 1
  IF LINES > 0 THEN
    GOSUB 10000
  END
  MORE = 1
  LOOP
    ECD.NUM = 3 ; SCV.REC(3)<ECD.SCRN.NO> = '' ; ECD.ACTION = 4 ; CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END'
        MORE = 0
      CASE ECD.RET.VALUE = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE ECD.RET.VALUE = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE ECD.RET.VALUE = 'SB'
        LN = LINES
        GOSUB 10000
      CASE ECD.RET.VALUE = 'ST'
        LN = 1
        GOSUB 10000
      * T25978 ^
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99999
*
***** SCROLL ROUTINE
*
10000*
  START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE=OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE=START.LINE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  CNT=1
  FOR N=START.LINE TO LAST.LINE UNTIL N > LINES
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* T25762 v Use INVOICE.LIST (invoices by date order), not CUST.INVOICE list
*        MATREAD OR.REC FROM OPEN.RECV, CONO:CUST.INVOICE<1,N> ELSE
    MATREAD OR.REC FROM OPEN.RECV, CONO:INVOICE.LIST<1,N> ELSE
      MAT OR.REC = ""
    END
    CHECK.MI.FILE = 0
    MATREAD IVC.REC FROM INVOICE, CONO:INVOICE.LIST<1,N> ELSE
      MAT IVC.REC = ""
      CHECK.MI.FILE = 1
    END
    INVOICE.DESC = IVC.DESC<1,1>
    IF CHECK.MI.FILE THEN 
      MATREAD MIV.REC FROM MANUAL.INVOICE, CONO:INVOICE.LIST<1,N> ELSE
        MAT MIV.REC = ""
      END
      INVOICE.DESC = MIV.DESC<1,1>
    END
*        P_X  = 4 ; P_Y = SLN ; P_VALUE = CUST.INVOICE<1,N> "L#8" ; P_OPT = ""
    P_X  = 4 ; P_Y = SLN ; P_VALUE = INVOICE.LIST<1,N> "L#8" ; P_OPT = ""
* T25762 ^
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:OR.JOB "L#8"
    P_X  := AM:13 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OR.PO "L#12"
    P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.INV.DATE , "D2/") "R#8"
* T25762 v Add first line of invoice
    P_X  := AM:26 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INVOICE.DESC<1,1> "L#52"
* T25762 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    AMT = OR.INV.AMT<1,1>
    FOR I = 2 TO 6
      IF OR.TYPE<1,I> = "T" OR OR.TYPE<1,I> = "S" OR OR.TYPE<1,I> = "G" OR OR.TYPE<1,I> = "U" OR OR.TYPE<1,I> = "M" THEN
        AMT = AMT + OR.INV.AMT<1,I>
      END
    NEXT I
    P_X  = 35 ; P_Y = SLN ; P_VALUE = OCONV(AMT, "MD2") "R#12" ; P_OPT = ""
    P_X  := AM:48 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(AMT - OR.BAL, "MD2") "R#12"
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.BAL , "MD2") "R#12"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR M=CNT TO PAGE.SIZE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001 RETURN
***** CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
