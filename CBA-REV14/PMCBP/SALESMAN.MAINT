   SUBROUTINE SALESMAN.MAINT(MAT SALESMAN.REC,SLSM.KEY,CONO)
*COPY CPYLIB>SCOMMON1
***************************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - SALESMAN.MAINT
* AUTHOR   - JIHAD YAMOUT , C.B.A
* DATE     - 01/21/85
* REVISION - A.1.0
* DESCRIPTION
* This program Maintain old salesman and create new salesman.
*T21900 gat 05/08/1997 * FIX PROBLEM ON ADDRESS ENTRY IN CITY/STATE
*T22664 rick 04/16/1998 * Add new field to allow entry of login name for
*                         salesman. This is to facilitate the Mail
*                         system that is part of JIS so that mail can be
*                         sent to the salesman on a job.
*T24078 bilal 07/15/1999 * Seperate city, state fields' labels on screen
*T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB,ST).
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*T26585 cmykleb 05/08/2002 * Screen allows a blank record to be created.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY CPYLIB>CHAR
*COPY CPYLIB>SCREEN.COM
*COPY CPYLIB>FILE.VARS
*COPY CPYLIB>GEN.XREF
*COPY PMC.CPYLIB>SALESMAN
*COPY PMC.CPYLIB>SALESDATES
*COPY PMC.CPYLIB>VEND
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*T22664 v
   OPEN "SECURITY" TO SECURITY ELSE 
      ERRMSG = "UNABLE TO FIND SECURITY FILE"
      GOSUB 91000
      RETURN
   END
*T22664 ^
*
*
*---- SET UP GEN.XREF.REC
*
   MAT GEN.XREF.REC = ''
   OLD.NAME = ''
   GXR.CO = CONO
   GXR.HEADING<1,2> = "SALESREP NAME"
   GXR.HEADING<1,3> = "ADDRESS"
   GXR.ATT<1,1> = 0
   GXR.ATT<1,2> = 1
   GXR.ATT<1,3> = 2
   GXR.LEN<1,1> = 3
   GXR.LEN<1,2> = 30
   GXR.LEN<1,3> = 30
*
*---- INITIALIZATION
*
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   MATREAD SALESDATES.REC FROM CONTROL,CONO:"SALESDATES" ELSE
      MAT SALESDATES.REC = ""
      ERRMSG = "Need to Setup Sales dates and periods"
      GOSUB  90000
      RETURN
   END
   SAVE.MON = ""
*      SAVE.MON = "JAN":VM:"FEB":VM:"MAR":VM:"APR":VM:"MAY":VM:"JUN":VM:"JUL":VM:"AUG":VM:"SEP":VM:"OCT":VM:"NOV":VM:"DEC"
   FOR I = 1 TO NUM.PERIODS
      SAVE.MON<1,I> = SALESDATES.REC(I+1)<1,2>
   NEXT I
   SAVE.LN = 1
   FOR XLN = 2 TO NUM.PERIODS
      SAVE.LN<1,XLN> = XLN
   NEXT XLN
   SCREEN DEFINE;SALESMAN.MAINT
   SCREEN FORMAT;SALESMAN.MAINT
   SCREEN COUNT;SALESMAN.MAINT;14
   L.CNT = S$LCNT
*
*---- MAIN PROCESSING
*
100*
   OLD.LINE = ""
   LINES = NUM.PERIODS
   LINES1 = 0
   NEW.ITEM = 0
   PROMPT ""
   S$DATA(13)<S$SCR> = SAVE.LN
   S$DATA(14)<S$SCR> = SAVE.MON
   S$DATA(16)<S$SCR> = SAVE.LN
   S$DATA(17)<S$SCR> = SAVE.MON
   S$DATA(19)<S$SCR> = SAVE.LN
   S$DATA(20)<S$SCR> = SAVE.MON
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;SALESMAN.MAINT;1
   IF SLSM.KEY = "" THEN
      GOSUB 900
   END ELSE
      S$DATA(2)<S$SCR> = SLSM.KEY
      SCREEN DISPLAY;SALESMAN.MAINT;2
      GOSUB 41000
      SCREEN DISPLAY;SALESMAN.MAINT;ALL
   END
   IF SLSM.KEY # "" AND SLSM.KEY # "END" AND SLSM.KEY # "N" THEN
      SLSM.KEY = STR("0",3-LEN(SLSM.KEY)):SLSM.KEY
      S$DATA(2)<S$SCR> = SLSM.KEY
      SCREEN DISPLAY;SALESMAN.MAINT;2
   END
   BEGIN CASE
      CASE SLSM.KEY = "END"
         SLSM.KEY = "" ; MAT SALESMAN.REC = ""
         GOTO 99999
      CASE SLSM.KEY = ''
         S$O.R = "O" ; * T26585
         SCREEN FIELD;SALESMAN.MAINT;3
         SCREEN INPUT;SALESMAN.MAINT;3
*T26585 v
*        IF S$VALUE # "END" THEN
*          GXR.SRCH.ID = S$VALUE
*          GOSUB 600
*          IF SLSM.KEY = "" OR SLSM.KEY = "END" THEN
*            GOTO 100
*          END
*        END
         BEGIN CASE
            CASE S$VALUE = "END"
               S$DATA(3)<S$SCR> = ""
               SCREEN DISPLAY;SALESMAN.MAINT;3
               GOTO 100
            CASE S$VALUE = ""
               GOTO 100
            CASE 1
               GXR.SRCH.ID = S$VALUE
               GOSUB 600
         END CASE
*T26585 ^
      CASE SLSM.KEY = "N"
         NEW.ITEM = 1
      CASE 1
      * T26126 v
         MATREADU SALESMAN.REC FROM SALESMAN , CONO:SLSM.KEY LOCKED
            ERRMSG = 'SALESMAN record is locked by user - ':GETUSERNAME(STATUS())
            SLSM.KEY = ''
            GOSUB 91000;GOTO 100 
         END ELSE
      * T26126 ^
*               PRINT @(0,23):SLSM.KEY:" IS NOT ON FILE.  DO YOU WANT TO ADD (Y/N) : ":
*               INPUT ANS:
*               PRINT @(0,23):CL:
            SCREEN FIELD;;25
            SCREEN INPUT;;25
            IF S$VALUE = "N" THEN
               SLSM.KEY = "" ; MAT SALESMAN.REC = ""
               SCREEN CLEAR;SALESMAN.MAINT
               GOTO 100
            END
            MAT SALESMAN.REC = ""
            NEW.ITEM = 1
         END
   END CASE
   IF NEW.ITEM THEN
      OPTION = "" ; LN = 1 ; OLD.LINE = 0 ; GOSUB 42000
*T22664 v
*********         FOR N = 1 TO 11
*********            ON N GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000
      FOR N = 1 TO 12
         ON N GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,13000,11000
*T22664 ^
         IF S$VALUE = "END" THEN
            SLSM.KEY = "" ; MAT SALESMAN.REC = ""
            SCREEN CLEAR;SALESMAN.MAINT
            GOTO 100
         END
      NEXT N
   END ELSE
      OLD.NAME = SALS.NAME
   END
   GOSUB 41000
   SCREEN DISPLAY;SALESMAN.MAINT;ALL
   OPTION = "" ; LN = 1 ; OLD.LINE = 0 ; GOSUB 42000
*
*---- CHECK ACTION AND CALL OPTION SUB
*
   MORE = 0
   LOOP
      SCREEN FIELD;SALESMAN.MAINT;22
      SCREEN INPUT;SALESMAN.MAINT;22
      OPTION = S$VALUE
      BEGIN CASE
         CASE OPTION = "B" OR OPTION = "EX" OR OPTION = "P"
            GOSUB 550
*T22664 v
********         CASE NUM(OPTION) AND OPTION > 0 AND OPTION < 11
********            ON OPTION GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000
         CASE NUM(OPTION) AND OPTION > 0 AND OPTION < 12
            ON OPTION GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,13000
*T22664 ^
         CASE OPTION = "S"
            LN = LN + L.CNT
            IF LN > LINES THEN LN = 1
            OPTION = "" ; GOSUB 42000
      * T25978 v
         CASE OPTION = 'SR'
            LN -= L.CNT
            IF LN < 1 THEN LN = 1
            OPTION = "" ; GOSUB 42000
         CASE OPTION = 'ST'
            LN = 1
            OPTION = "" ; GOSUB 42000
         CASE OPTION = 'SB'
            LN = LINES
            OPTION = "" ; GOSUB 42000
      * T25978 ^
         CASE OPTION = "D"
*            QUESTION = "You are about to delete this salesrep ok (Y/N)"
*            GOSUB 70000
            SCREEN FIELD;;27
            SCREEN INPUT;;27
            IF S$VALUE = "Y" THEN
               DELETE SALESMAN, CONO:SLSM.KEY
               X.NAME = ""
               CALL GEN.XREF.MAINT(GXR.CO,SLSM.KEY,OLD.NAME,X.NAME,SALESMAN.XREF,PREFIX)
               MORE = 1
            END
         CASE OPTION = "F"
            IF NEW.ITEM = 1 AND SLSM.KEY = "N" THEN
               NEW.KEY = ''
               LOOP
               WHILE NEW.KEY = "" DO
                  READVU NEW.KEY FROM CONTROL,CONO:"SLSM.KEY",1 ELSE
                     NEW.KEY = 1
                  END
                  SLSM.KEY = STR("0",3-LEN(NEW.KEY)):NEW.KEY
                  NEW.KEY = SLSM.KEY + 1
                  WRITEV NEW.KEY ON CONTROL,CONO:"SLSM.KEY",1
                  READ CCK FROM SALESMAN , CONO:SLSM.KEY ELSE CCK = ""
                  IF CCK # "" THEN NEW.KEY = ""
               REPEAT
               S$DATA(2)<S$SCR> = SLSM.KEY
               SCREEN DISPLAY;SALESMAN.MAINT;2
               ERRMSG = "Salesrep # (":SLSM.KEY:") created. Please note salesman number. " ; GOSUB 90000
            END
            MATWRITE SALESMAN.REC ON SALESMAN , CONO:SLSM.KEY
            X.NAME = SALS.NAME
            CALL GEN.XREF.MAINT(GXR.CO,SLSM.KEY,OLD.NAME,X.NAME,SALESMAN.XREF,PREFIX)
            MORE = 1
         CASE OPTION = "E" OR OPTION = "END"
            MORE = 1
         CASE 1
            ERRMSG = "** Invalid option **" ; GOSUB 90000
      END CASE
   WHILE MORE = 0 DO REPEAT
   SCREEN CLEAR;SALESMAN.MAINT
   SLSM.KEY = "" ; MAT SALESMAN.REC = ""
   GOTO 100
*
*---- ENTER SCROLL REQUEST
*
550*
   MORE1 = 0
   LOOP
      SCREEN FIELD;SALESMAN.MAINT;23
      SCREEN INPUT;SALESMAN.MAINT;23
      REQUEST = S$VALUE
      BEGIN CASE
         CASE REQUEST = "C"
            GOSUB 80000
            IF LNO THEN
               LN = LNO
               GOSUB 12000
            END
         CASE REQUEST = "S"
            LN = LN + L.CNT
            IF LN > LINES THEN LN = 1
            GOSUB 42000
      * T25978 v
         CASE REQUEST = 'SR'
            LN -= L.CNT
            IF LN < 1 THEN LN = 1
            GOSUB 42000
         CASE REQUEST = 'ST'
            LN = 1
            GOSUB 42000
         CASE REQUEST = 'SB'
            LN = LINES
            GOSUB 42000
      * T25978 ^
         CASE REQUEST = "E" OR REQUEST = "END" OR REQUEST = ""
            MORE1 = 1
      END CASE
   WHILE MORE1 = 0 DO REPEAT
   OPTION = "" ;LN = 1 ; OLD.LINE = 0 ; GOSUB 42000
   RETURN
*
*---- CALL GEN.XREF
*
600*
   GXR.XREF = SALESMAN.XREF
   GXR.FILE = SALESMAN
   GXR.LOC = 1
   GXR.TOP.LINE<1,1> = "SALESREP XREF SEARCH"
   GXR.TOP.LINE<1,2> = "SEARCH BY NAME : ":SALS.NAME
   GXR.HEADING<1,2> = "SALESREP NAME"
   GXR.HEADING<1,3> = "SALESREP ADDRESS"
   GXR.ATT<1,2> = 1
   GXR.HEADING<1,1> = "CUST #"
   GXR.ID = ""
   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
*     IF GXR.ACTION # "X" THEN
   SCREEN FORMAT;SALESMAN.MAINT
*     END
   IF GXR.ID = '' THEN
      SCREEN CLEAR;SALESMAN.MAINT
   END ELSE
    * T26126 v
      MATREADU SALESMAN.REC FROM SALESMAN , CONO:GXR.ID LOCKED
         ERRMSG = 'SALESMAN record is locked by user - ':GETUSERNAME(STATUS())
         NEW.ITEM = 1 ; GXR.ID = ''
         GOSUB 91000;GOTO 699 
      END ELSE
    * T26126 ^
         ERRMSG = "Salesrep (":GXR.ID:") not on file" ;GOSUB 90000
         NEW.ITEM = 1
         GXR.ID = "" ; GOTO 699
      END
      S$DATA(2)<S$SCR> = GXR.ID
      SLSM.KEY = GXR.ID
   END
699 RETURN
*
*--- ENTRY SALESMAN ID
*
900*
   SCREEN FIELD;SALESMAN.MAINT;2
   SCREEN INPUT;SALESMAN.MAINT;2
   SLSM.KEY = S$VALUE
   RETURN
*
*---- GET SALESMAN NAME
*
1000*
   SCREEN FIELD;SALESMAN.MAINT;3
   SCREEN INPUT;SALESMAN.MAINT;3
   IF S$VALUE # "END" THEN
      SALS.NAME = S$VALUE
   END
   RETURN
*
*---- GET ADDRESS 1
*
2000*
   SCREEN FIELD;SALESMAN.MAINT;4
   SCREEN INPUT;SALESMAN.MAINT;4
   IF S$VALUE # "END" THEN
      SALS.ADDR1 = S$VALUE
   END
   RETURN
*
*---- GET ADDRESS 2
*
3000*
   SCREEN FIELD;SALESMAN.MAINT;5
   SCREEN INPUT;SALESMAN.MAINT;5
   IF S$VALUE # "END" THEN
      SALS.ADDR2 = S$VALUE
   END
   RETURN
*
*---- GET CITY & STATE
*
4000*
   SCREEN FIELD;SALESMAN.MAINT;6
   SCREEN INPUT;SALESMAN.MAINT;6;RETURN
* T21900W
   YY=LEN(S$VALUE)
   XX=LEN(FIELD(S$VALUE,",",1))
   IF XX # YY THEN
      ERRMSG = "DO NOT ENTER A COMMA IN ADDRESS "
      GOSUB 90000
      GO 4000
   END
* T21900
   CITY = S$VALUE
   SCREEN FIELD;SALESMAN.MAINT;24
   SCREEN INPUT;SALESMAN.MAINT;24;RETURN
   SALS.ADDR3 = CITY:",":S$VALUE
   RETURN
*
*---- GET ZIP
*
5000*
   SCREEN FIELD;SALESMAN.MAINT;7
   SCREEN INPUT;SALESMAN.MAINT;7;RETURN
   SALS.ADDR4 = S$VALUE
   RETURN
*
*---- SALES MANAGER
*
6000*
   SCREEN FIELD;SALESMAN.MAINT;8
   SCREEN INPUT;SALESMAN.MAINT;8
   IF S$VALUE # "END" THEN
      SALS.MANAGER = S$VALUE
   END
   RETURN
*
*---- GET BASE FWD
*
7000*
   SCREEN FIELD;SALESMAN.MAINT;9
   SCREEN INPUT;SALESMAN.MAINT;9
   IF S$VALUE # "END" THEN
      SALS.BASE.FWD = S$VALUE
   END
   RETURN
*
*---- GET COMM (%)
*
8000*
   SCREEN FIELD;SALESMAN.MAINT;10
   SCREEN INPUT;SALESMAN.MAINT;10
   IF S$VALUE # "END" THEN
      SALS.COMM.PCT = S$VALUE
   END
   RETURN
*
*---- GET REGION
*
9000*
   SCREEN FIELD;SALESMAN.MAINT;11
   SCREEN INPUT;SALESMAN.MAINT;11
   IF S$VALUE # "END" THEN
      SALS.REGION = S$VALUE
   END
   RETURN
*
*---- GET VENDOR
*
10000*
   SCREEN FIELD;SALESMAN.MAINT;12
   SCREEN INPUT;SALESMAN.MAINT;12
   IF S$VALUE # "END" THEN
      IF S$VALUE = "" THEN
         MAT VEND.REC = ""
      END ELSE
         MATREAD VEND.REC FROM VEND , CONO:S$VALUE ELSE
            ERRMSG = "Vendor # (":S$VALUE:") not on file try again";GOSUB 90000 ; GOTO 10000
         END
      END
      SALS.VEND = S$VALUE
   END
   RETURN
*
*---- CONTROL MULTI LINE
*
11000*
   FOR TT = 1 TO 3
      BEGIN CASE
         CASE TT = 1
            OPTION = "B"
         CASE TT = 2
            OPTION = "EX"
         CASE TT = 3
            OPTION = "P"
      END CASE
      OLD.LINE = 0
      LOOP
         REQUEST = "A"
         LN = LINES1 + 1
         OLD.LINES = LINES1
         GOSUB 12000
      WHILE LINES1 > OLD.LINES AND LINES1 # NUM.PERIODS DO REPEAT
      LN = LINES1
      GOSUB 42000
      GOSUB 550
      LINES1 = 0
   NEXT TT
   OPTION = "" ; LN = 1 ; OLD.LINE = 0 ; GOSUB 42000
   RETURN
*
*---- ENTER MULTI LINES
*
12000*
   GOSUB 42000
   BEGIN CASE
      CASE OPTION = "B"
         SCREEN FIELD;SALESMAN.MAINT;15
         S$VAL = LN
         SCREEN INPUT;SALESMAN.MAINT;15
      CASE OPTION = "EX"
         SCREEN FIELD;SALESMAN.MAINT;18
         S$VAL = LN
         SCREEN INPUT;SALESMAN.MAINT;18
      CASE OPTION = "P"
         SCREEN FIELD;SALESMAN.MAINT;21
         S$VAL = LN
         SCREEN INPUT;SALESMAN.MAINT;21
   END CASE
   IF S$VALUE = "END" AND REQUEST = "A" THEN
      GOTO 12999
   END
   BEGIN CASE
      CASE OPTION = "B"
         SALS.BASE<1,LN> = S$VALUE
         IF REQUEST = "A" THEN
            LINES1 = COUNT(SALS.BASE,VM) + (SALS.BASE # "")
         END
      CASE OPTION = "EX"
         SALS.EXPENSES<1,LN> = S$VALUE
         IF REQUEST = "A" THEN
            LINES1 = COUNT(SALS.EXPENSES,VM) + (SALS.EXPENSES # "")
         END
      CASE OPTION = "P"
         SALS.PROJECT<1,LN> = S$VALUE
         IF REQUEST = "A" THEN
            LINES1 = COUNT(SALS.PROJECT,VM) + (SALS.PROJECT # "")
         END
   END CASE
12999 RETURN
*
*T22664 v
*
*---- GET SALESMAN'S USER NAME
*
13000 *
   SCREEN FIELD;SALESMAN.MAINT;28
   SCREEN INPUT;SALESMAN.MAINT;28
   IF S$VALUE # "END" THEN
      IF S$VALUE # "" THEN
         READ XX FROM SECURITY, CONO:S$VALUE THEN
            SALS.USER = S$VALUE
         END ELSE
            ERRMSG = "Invalid User Name"
            GOSUB 91000
            GO 13000
         END
      END ELSE
         SALS.USER = S$VALUE
      END
   END
   RETURN
*
*T22664 ^
*
*---- LOAD S$DATA MATRIX
*
41000*
   S$DATA(3)<S$SCR> = SALS.NAME
   S$DATA(4)<S$SCR> = SALS.ADDR1
   S$DATA(5)<S$SCR> = SALS.ADDR2
   S$DATA(6)<S$SCR> = FIELD(SALS.ADDR3,",",1)
   TMP.ST = FIELD(SALS.ADDR3,",",2)
   TMP.ST = TRIM(TMP.ST)
   S$DATA(24)<S$SCR> = TMP.ST
   S$DATA(7)<S$SCR> = SALS.ADDR4
   S$DATA(8)<S$SCR> = SALS.MANAGER
   S$DATA(9)<S$SCR> = SALS.BASE.FWD
   S$DATA(10)<S$SCR> = SALS.COMM.PCT
   S$DATA(11)<S$SCR> = SALS.REGION
   S$DATA(12)<S$SCR> = SALS.VEND
   S$DATA(15)<S$SCR> = SALS.BASE
   S$DATA(18)<S$SCR> = SALS.EXPENSES
   S$DATA(21)<S$SCR> = SALS.PROJECT
   S$DATA(13)<S$SCR> = SAVE.LN
   S$DATA(14)<S$SCR> = SAVE.MON
   S$DATA(16)<S$SCR> = SAVE.LN
   S$DATA(17)<S$SCR> = SAVE.MON
   S$DATA(19)<S$SCR> = SAVE.LN
   S$DATA(20)<S$SCR> = SAVE.MON
   LINES = NUM.PERIODS
*T22664 v
   S$DATA(28)<S$SCR> = SALS.USER
*T22664 ^
   RETURN
*
*---- SCROLL MULTI LINES
*
42000*
   START.LINE = 1 + INT((LN-1)/L.CNT)*L.CNT
   IF START.LINE = OLD.LINE THEN GOTO 42999
   OLD.LINE = START.LINE
   S$VAL = START.LINE
   S$LCNT = L.CNT
   S$CNT = LINES
   BEGIN CASE
      CASE OPTION = "B"
         SCREEN MULTI;SALESMAN.MAINT;S;13;14;15
      CASE OPTION = "EX"
         SCREEN MULTI;SALESMAN.MAINT;S;16;17;18
      CASE OPTION = "P"
         SCREEN MULTI;SALESMAN.MAINT;S;19;20;21
      CASE 1
         SCREEN MULTI;SALESMAN.MAINT;C;13;14;15;16;17;18;19;20;21
   END CASE
42999 RETURN
*---- ENTER YES OR NO
70000*
*      PRINT @(0,21):CL:QUESTION:
*      INPUT REPL:
*      PRINT @(0,21):CL:
*      IF REPL # "Y" AND REPL # "N" THEN
*         ERRMSG = "Please enter (Y) or (N)";GOSUB 90000; GOTO 70000
*      END
*      RETURN
*
*---- ENTER LINE #
*
80000*
*      PRINT @(0,21):CL:"Enter Period # ":
*      INPUT LNO:
*      PRINT @(0,21):CL:
   SCREEN FIELD;;26
   SCREEN INPUT;;26
   LNO = S$VALUE
   MIV = OLD.LINE
   IF (OLD.LINE + L.CNT) - 1 < LINES THEN
      MAV = (OLD.LINE + L.CNT) - 1
   END ELSE
      MAV = LINES
   END
   BEGIN CASE
      CASE LNO = "END" OR LNO = ""
         LNO = 0
      CASE NOT(NUM(LNO))
         ERRMSG = "** Numeric input required **" ; GOSUB 90000 ; GOTO 80000
      CASE LNO < MIV
         ERRMSG = "** Out of range **" ; GOSUB 90000
         GOTO 80000
      CASE LNO > MAV
         ERRMSG = "** Out of range **" ; GOSUB 90000
         GOTO 80000
   END CASE
   RETURN
*
*--- CALLS FOR SYSCOM
*
90000 *
91000 *
   ERR.TYPE = 1;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SI_SYSCOM(MAT SYSCOM.REC)
99999*
*      PRINT @(-1):
   RETURN
END
