*
*T25978 adelgado 01/29/2002 * Add the use of prompts (S,SR,SB,ST).
*T26486 cmykleb 05/17/2002 * If out of balance do not allow close.
*T26685 lhelms 07/02/2002 * REV12 DIVISIONAL SECURITY
*
FNGD.EOM = ""
READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
  ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
  GOTO 93000
END
READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
  SECURITY.REC = 'N'
  SECURITY.REC<2> = 'N'
END
*
IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
  IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
    ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
    GOSUB 91000; GOTO 99999
  END
  LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
    ERRMSG = "Division ":DIV.CODE:" not found in DIVISIONS Control Record"
    GOTO 93000
  END
  ALL.DIVS.COUNT = DCOUNT(DIVISION.REC<1>,VM)
END ELSE
  POS = 1; ALL.DIVS.COUNT = 1
END
*
IC.PER=''; OP.PER=''
IF CO.ICS = "Y" THEN
  MATREAD FISCAL.REC FROM CONTROL, CONO:'ICFISCAL' ELSE
    ERRMSG = 'CANNOT LOCATE CONTROL, ICFISCAL'
    GOTO 93000
  END
  IC.PER = FR.CURR.PER<1,POS>;* T23278
END
IF CO.OPS = "Y" THEN
  MATREAD FISCAL.REC FROM CONTROL, CONO:'OPFISCAL' ELSE
    ERRMSG = 'CANNOT LOCATE CONTROL, OPFISCAL'
    GOTO 93000
  END
  OP.PER = FR.CURR.PER<1,POS>;* T23278
  READ FNGD.EOM FROM CONTROL, CONO:"FNGD.EOM" ELSE FNGD.EOM = ""
END
MATREADU FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
  RELEASE CONTROL, CONO:SYS.FISCAL
  ERRMSG = 'CANNOT LOCATE CONTROL, ':SYS.FISCAL
  GOTO 93000
END
BEGIN CASE
  CASE FR.PRINT<1,POS> = "X";* T23278
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'E R R O R !!! FLAG IS SET TO ABORT ALL END OF PERIOD PROCEDURES'
    GOTO 93000
  CASE FR.PRINT<1,POS> = "O" ; * T26486
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = "E R R O R !!! THE END OF ":D.M.FLG:" REPORT IS OUT OF BALANCE.  UNABLE TO CLOSE."
    GOSUB 91000
    GOTO 99000
  CASE FR.NEXT.PER<1,POS> + 0 = 0;* T23278
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'YOU NEED TO RUN END OF PERIOD POSTING BEFORE YOU CLOSE THE PERIOD'
    GOSUB 91000
    GOTO 99000
  CASE FR.PRINT<1,POS> = '';* T23278
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'YOU NEED TO PRINT THE END OF ':D.M.FLG:' SUMMARY REPORT BEFORE YOU CLOSE'
    GOSUB 91000
    GOTO 99000
  CASE FR.D.M.FLG<1,POS> # D.M.FLG;* T23278
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'WARNING !!! YOU MUST RUN END OF ':D.M.FLG:' SUMMARY REPORT BEFORE CLOSING'
    GOSUB 91000
    GOTO 99000
END CASE
* T26685
*
IF SYS.FISCAL = "ICFISCAL" AND CO.OPS = "Y" AND D.M.FLG = "PERIOD" THEN
  IF FNGD.EOM<8,POS> # "" THEN
    ERRMSG = "E R R O R !!! END OF ":D.M.FLG:" ICF REPORT IS OUT OF BALANCE.  UNABLE TO CLOSE."
    GOSUB 91000
    GOTO 99000
  END
* T26685 v
  IF FNGD.EOM<2,POS> = "" THEN
    ERRMSG = 'YOU NEED TO RUN THE END OF ':D.M.FLG:' ICF REPORT FOR ':DIV.CODE:' DIVISION'
    GOSUB 91000
    GOTO 99000
  END
END
*
* T26685
IF SYS.FISCAL = "JCFISCAL" AND CO.OPS = "Y" AND D.M.FLG = "PERIOD" THEN
  BEGIN CASE
    CASE FR.CURR.PER<1,POS> >= IC.PER AND CO.ICS = "Y";* T23278
      ERRMSG = 'The ICS module must be closed before you may continue'
      RELEASE CONTROL, CONO:SYS.FISCAL
      GOSUB 91000
      GOTO 99000
    CASE FR.CURR.PER<1,POS> >= OP.PER;* T23278
      ERRMSG = 'The OPS module must be closed before you may continue'
      RELEASE CONTROL, CONO:SYS.FISCAL
      GOSUB 91000
      GOTO 99000
  END CASE
END
MATREAD SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' ELSE
  RELEASE CONTROL, CONO:SYS.FISCAL
  ERRMSG = 'CANNOT LOCATE CONTROL, SALESDATES'
  GOTO 93000
END
READ FISCALMON FROM CONTROL, CONO:'FISCAL' ELSE
  RELEASE CONTROL, CONO:SYS.FISCAL
  ERRMSG = 'CANNOT LOCATE CONTROL, FISCAL'
  GOTO 93000
END
READ OPENDATES FROM CONTROL, CONO:'OPENDATES' ELSE
  RELEASE CONTROL, CONO:SYS.FISCAL
  ERRMSG = 'CANNOT LOCATE CONTROL, OPENDATES'
  GOTO 93000
END
* T 26685 v
EOD.HID=''
IF SECURITY.REC<2> = 'Y' THEN EOD.HID = '!':DIV.CODE
*  READU EOD.HIST.REC FROM EOD.HIST, CONO:SYS.FISCAL:FR.CURR.PER<1,POS> ELSE;* T23278
READU EOD.HIST.REC FROM EOD.HIST, CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID ELSE;* T23278
* T26685 ^
  EOD.HIST.REC = ""
END
*
***** SETUP VALUES FROM M.SCREENS
*
ECD.ACTION = 1
ECD.SCRN.CNT = 1
ECD.SCRN.NAME = 'EOD.POST'
CALL SCRN.EDIT
ECD.SCRN.NO = 1
*
***** INT ECD.RT.VALUE AND PRINT SCREEN
*
100 MAT SCV.REC = ""
ECD.ACTION = 2
CALL SCRN.EDIT
IF D.M.FLG = "PERIOD" THEN
  STMT = STMT.HEAD : " END OF PERIOD CLOSING"
END ELSE
  STMT = STMT.HEAD : " END OF DAY CLOSING"
END
STMT = SPACE(INT((40-LEN(STMT))/2)) : STMT
SCV.REC(1)<1> = STMT
SCV.REC(2)<1> = SALD.CURR<1,1>
SCV.REC(3)<1> = SALD.CURR<1,3>
SCV.REC(4)<1> = SALD.CURR<1,2>
SCV.REC(5)<1> = FISCALMON[5,2]
IF SCV.REC(5)<1> > 0 THEN
  SCV.REC(6)<1> = SALESDATES.REC(SCV.REC(5)<1>+1)<1,2>
  SCV.REC(7)<1> = OPENDATES<SCV.REC(5)<1>>
END
STMT = STMT.HEAD
STMT = SPACE(INT((25-LEN(STMT))/2)) : STMT
SCV.REC(8)<1> = STMT
SCV.REC(9)<1> = FR.CURR.PER<1,POS>[5,2];* T23278
SCV.REC(10)<1> = SALESDATES.REC(SCV.REC(9)<1>+1)<1,2>
SCV.REC(11)<1> = FR.CURR.DATE<1,POS>;* T23278
SCV.REC(21)<1> = DIV.CODE;* T23278
SCV.REC(16)<1> = "******* C A U T I O N *******"
BEGIN CASE
  CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
  CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> = "Y"
    SCV.REC(17)<1> = "General Ledger is LINKED     "
  CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> # "Y"
    SCV.REC(17)<1> = "General Ledger is NOT LINKED "
END CASE
ECD.ACTION = 3
CALL SCRN.EDIT
IF GUIFORM THEN
  P_TITLE = SCV.REC(1)<1>
  CALL VSI_PTITLE(P_TITLE,ERROR)
END
PAGE.SIZE = 4
BEGIN.PAGE = 13
LINE.SPACE = 1
OLD.START.LINE = 0
LINES = DCOUNT(EOD.HIST.REC,AM)
LN = LINES
IF LN < 1 THEN LN = 1
GOSUB 180
*
MORE = 1
LOOP
  ECD.NUM = 15
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      RELEASE CONTROL, CONO:SYS.FISCAL
      MORE = 0
    CASE ECD.RET.VALUE = "E"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ECD.RET.VALUE = 'END'
      MORE = 0
    CASE ECD.RET.VALUE = "S"
      LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 180
      * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
      IF LN < 1 THEN LN = 1 
      GOSUB 180
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 180
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 180
      * T25978 ^
    CASE ECD.RET.VALUE = "C"
      IN.ACCT.LEN = LEN(CO.ACCT.PIC)
      ACCT.LEN = 10 + IN.ACCT.LEN
      IF D.M.FLG = "PERIOD" THEN
        EOY = 1
        FOR I = 1 TO ALL.DIVS.COUNT UNTIL NOT(EOY)
          IF I # POS THEN
            IF FR.CURR.PER<1,I>[5,2] # '01' THEN EOY = 0
          END ELSE
            IF FR.NEXT.PER<1,I>[5,2] # '01' THEN EOY = 0
          END
        NEXT I
        DIV.EOY = 0
        IF FR.NEXT.PER<1,POS>[5,2] = 01 THEN DIV.EOY = 1
      END ELSE
        EOY = 0
        DIV.EOY = 0 ;* T23278
      END
      MAX.DATE = FR.CURR.DATE<1,POS> + 30;* T23278
      MORE = 0
  END CASE
WHILE MORE DO REPEAT
GOTO 199
180 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN RETURN
OLD.START.LINE = START.LINE
CNT = 1
FOR N = START.LINE TO LAST.LINE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
  P_X  = 9 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(EOD.HIST.REC<N>,"D2/") "R#8"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CNT = CNT + 1
NEXT N
FOR N = CNT TO PAGE.SIZE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
  P_X  = 9 ; P_Y = SLN ; P_VALUE = SPACE(3) ; P_OPT = ""
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(8)
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT N
RETURN
199 *
* ECD.ACTION = 99; CALL SCRN.EDIT
