*COPY>CPYLIB>COM1
*********************************************************************
*
* Copyright 1995 by Vercom Software Inc.
*
* REVISION - [01.0]
*
* PROGRAM  - CSR.MEMO.TRACK.MAINT
*
* AUTHOR   - GEORGE KUZMIAK
*
* DATE     - 03/27/95
*
* DESCRIPTION
*
* This program is used to maintaing the  CSR memo tracking file
* (CSR.MEMO.TRACK). Program uses SCREEN.INPUT functionality.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T25596 cm 02/22/2001 * Change from screen input to screen edit.
*                       and change how screen works.
*T25967 ajibaly 07/25/2001 * Allow entering of job number in memo key
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*T26556 adelgado 04/26/2002 * Standarize fields and functionality.
*T26731 adelgado 07/05/2002 * Change how job is associated to be the
*                             'JOB' field.
*T27688 wyamout 09/08/2003 * CHANGE CHECK FOR LIST NAME
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SECURITY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>OPS.CPYLIB>ORDER
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>INVOICE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>PMC.CPYLIB>CSR.MEMO.TRACK
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>PORT.CONTROL
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- PRE-INITIALIZATION
*
  PROCREAD PARAM ELSE PARAM = ""
  KEY=PARAM<22>
  ACTION.1=''
  ACTION = "M"                         ;**** R E M O V E ****
  LINE.SPACE = 1
  PAGE.SIZE = 5; BEGIN.PAGE = 11; OLD.START.LINE = 0
  PAGE.SIZE2 = 3 ; BEGIN.PAGE2 = 17; OLD.START.LINE2 = 0
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","CSR.MEMO.TRACK" TO CSR.MEMO.TRACK ELSE
    ERRMSG = "CANNOT OPEN CSR.MEMO.TRACK FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","PMC.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN PMC.SCREENS FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","SECURITY" TO SECURITY ELSE
    ERRMSG = "CANNOT OPEN SECURITY FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "CANNOT OPEN CUSTOMER FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","ORDER" TO ORDER ELSE
    ERRMSG = "CANNOT OPEN ORDER FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","JOB" TO JOB ELSE
    ERRMSG = "CANNOT OPEN JOB FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","ESTIMATE" TO ESTIMATE ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = "CANNOT OPEN PO FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","OUTSIDE.PO" TO OUTSIDE.PO ELSE
    ERRMSG = "CANNOT OPEN OUTSIDE.PO FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "CANNOT OPEN INVENTORY FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","ORDER.INVOICE" TO ORDER.INVOICE ELSE
    ERRMSG = "CANNOT OPEN ORDER.INVOICE FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","INVOICE" TO INVOICE ELSE
    ERRMSG = "CANNOT OPEN INVOICE FILE"
    GOSUB 93000
    GOTO 99999
  END
  OPEN "","SAVEDLISTS" TO SAVEDLISTS ELSE
    ERRMSG = "CANNOT OPEN SAVEDLISTS FILE"
    GOSUB 93000
    GOTO 99999
  END
*
*---- INITIALIZATION
*
  TODAY=DATE()
  MAT USER.REC=""
  MAT SEC.REC=""
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  MAT EDIT.COM.DRIVER = ''
  GOSUB 85000 ;* GET USER ID
  CNTL.ID=USER.C.CO:USER.ID
  GOSUB 85100 ;* GET USER NAME
  LOGON.USERID=USER.ID
  LOGON.USERNAME=SEC.NAME
  OLD.JOB.KEY = ''      ;* T26731
*
*---- PRINT SCREEN
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'CSR.MEMO.TRACK.MAINT'
  ECD.ACTION = 1; CALL SCRN.EDIT
  ESN = 1
  MAT SCV.REC = ''
  ECD.ACTION = 2; CALL SCRN.EDIT
  CURR.REF.NO = ""
  CSR.MEMO.TRACK.ID = ""
  SAVE.ACTION=""
* IF FIELD(KEY,"*",1) = @LOGNAME THEN   ;* T27688
  IF FIELD(KEY,"_",1) = @LOGNAME THEN   ;* T27688
    LIST.NAME="CSR.MEMO.":KEY:"000"
    READ CSR.LIST FROM SAVEDLISTS, LIST.NAME ELSE
      ERRMSG = 'List not found: ':LIST.NAME
      GOSUB 91000
      GOTO 99999
    END
    M.COUNT=DCOUNT(CSR.LIST,AM)
    LIST.COUNT=0
    ACTION.1="R"
    GOTO 86000
  END
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  MAT SCV.REC = ''
  ECD.ACTION = 6; CALL SCRN.EDIT
*  RELEASE
  IF ACTION.1="R" THEN GOTO 86000
110 *
  SCV.REC(1)<ESN> = DATE()
  ECD.NUM = 5
  ECD.ACTION=5;CALL SCRN.EDIT
  IF ACTION.1="R" THEN
    ECD.RET.VALUE=CSR.MEMO.TRACK.ID
    NEW.REC=0
  END ELSE
    ECD.NUM = 2
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = 'END' THEN GOTO 99999
    NEW.REC = 0
* T26731 v       Redo the validation rules
    IF ECD.RET.VALUE = 'N' THEN NEW.REC = 1
    IF ECD.RET.VALUE = 'J' THEN NEW.REC = 2
  END
  BEGIN CASE
    CASE NEW.REC = 1
      MAT CSR.MEMO.TRACK.REC = ""
    CASE NEW.REC = 2
      MAT CSR.MEMO.TRACK.REC = ""
      GOSUB 1040
      IF ECD.RET.VALUE = 'END' THEN GOTO 100
      CSR.CUST.NUM = JOB.CUST
      CSR.EST.NUM = JOB.EST
      MATREAD CUST.REC FROM CUSTOMER, CONO:CSR.CUST.NUM ELSE
        CUST.NAME="UNKNOWN CUSTOMER"
      END
      SCV.REC(13)<ESN> = CSR.EST.NUM
      SCV.REC(7)<ESN> = CSR.CUST.NUM
      SCV.REC(8)<ESN> = CUST.NAME
      SCV.REC(11)<ESN> = CSR.JOB.NUM
      ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 7; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 8; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 11; ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      ECD.RET.VALUE = ECD.RET.VALUE'R%8'
      MATREADU CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK,CONO:ECD.RET.VALUE LOCKED
        ERRMSG = 'CSR MEMO TRACK record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 100 
      END ELSE
        ERRMSG = "Invalid Item. Try again!"
        GOSUB 91000
        GOTO 100
      END
  END CASE
  OLD.JOB.KEY = CSR.JOB.NUM
* T26731 ^
  MAT CUST.REC=""
  IF CSR.CUST.NUM # "" THEN
    MATREAD CUST.REC FROM CUSTOMER, CONO:CSR.CUST.NUM ELSE 
      CUST.NAME="UNKNOWN CUSTOMER"
    END
  END
  CSR.MEMO.TRACK.ID = ECD.RET.VALUE
  LINES = DCOUNT(CSR.MEMO,VM)
  LINES2 = DCOUNT(CSR.RESP<1,1>,SM)
  REF.NO = 1
  REF.NO2 = 1
  RESP.FLAG = ''
  SCV.REC(2)<ESN> = CSR.MEMO.TRACK.ID
120 *
  IF NEW.REC THEN
    ACTION="A"
    FOR REF = 1 TO 9
      ON REF GOSUB 1010,1020,1030,1040,1050,1060,1070,1080,1100
      IF ECD.RET.VALUE = "END" THEN GOTO 100
    NEXT REF
    MODE = "A"
    DONE.MULTI = 0                                   ;* T26556
    FOR REF.NO = 1 TO 999 UNTIL DONE.MULTI           ;* T26556
      GOSUB 10000
    NEXT REF.NO
    LINES = DCOUNT(CSR.MEMO,VM)
*        GOSUB 81000
*        GOSUB 1100
    GOTO 500
  END ELSE
    ACTION="M"
    GOSUB 80000
    GOSUB 81000
    GOSUB 82000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  ECD.NUM = 50
  ECD.ACTION = 4; CALL SCRN.EDIT
  OPT = ECD.RET.VALUE
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      MISMATCH = 0
      READ VREC FROM CSR.MEMO.TRACK, CONO:CSR.MEMO.TRACK.ID ELSE VREC = ""
      FOR VPTR = 1 TO CSR.MEMO.TRACK.SIZE UNTIL MISMATCH
        IF CSR.MEMO.TRACK.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
      NEXT VPTR
      IF MISMATCH THEN
        ECD.NUM = 53
        ECD.ACTION = 4; CALL SCRN.EDIT
        IF ECD.RET.VALUE # "Y" THEN GOTO 500
      END
      GOTO 100
    CASE NUM(OPT) AND OPT # "" 
      ON OPT GOSUB 1010,1020,1030,1040,1050,1060,1070,1080,1090,1100
    CASE OPT = "P"
      CSR.STATUS="P"
      SCV.REC(3)<ESN> = CSR.STATUS
      SCV.REC(4)<ESN> = "PURGE"
      ECD.ACTION = 3; CALL SCRN.EDIT
    CASE OPT = "NP"
      CSR.STATUS=""
      SCV.REC(3)<ESN> = " "
      SCV.REC(4)<ESN> = "     "
      ECD.ACTION = 3; CALL SCRN.EDIT
    CASE OPT = "R"
      GOSUB 600
      IF ECD.RET.VALUE # 'END' THEN
        RESP.FLAG = ''
        REF.NO = ECD.RET.VALUE
        LINES2 = DCOUNT(CSR.RESP<1,REF.NO>,SM)
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
        P_X = 1 ; P_Y = SLN ; P_VALUE = ("*":REF.NO)"R#4"
        P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO<1,REF.NO>'L#60'
        P_X := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CSR.MEMO.DATE<1,REF.NO>,'D2/')'L#8'
        P_X := AM:77 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO.CODE<1,REF.NO>'L#3'
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOSUB 82000
        GOSUB 501
        IF RESP.FLAG THEN GOSUB 1100 ; * FOLLOW-UP DATE
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
        P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = ""
        P_X  := AM:1 ; P_Y := AM:SLN ; P_VALUE := AM:" "
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        LINES2 = DCOUNT(CSR.RESP<1,1>,SM)
        REF.NO = 1
        REF.NO2 = 1
        GOSUB 81000
        GOSUB 82000
      END
    CASE OPT = "A"
        * T26556 v
      DONE.MULTI = 0  ; OLD.START.LINE = 0
      LOOP UNTIL DONE.MULTI DO
        REF.NO = LINES + 1
        GOSUB 10000
        LINES = DCOUNT(CSR.MEMO<1>,VM)
      REPEAT
        * T26556 ^
    CASE OPT = "C"
      GOSUB 600
      IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN
        REF.NO = ECD.RET.VALUE
        GOSUB 10000
      END
    CASE OPT = "D"
      GOSUB 600
      IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN
        REF.NO = ECD.RET.VALUE
        GOSUB 700
      END
      GOSUB 81000
    CASE OPT[1,1] = 'S'
      OPT4 = OPT[2,1]
      BEGIN CASE
        CASE OPT4 = '' OR OPT4 = 'F'
          REF.NO = REF.NO + PAGE.SIZE
          IF REF.NO GT LINES THEN REF.NO = 1
        CASE OPT4 = 'R'
          REF.NO = REF.NO - PAGE.SIZE
          IF REF.NO LT 1 THEN REF.NO = 1
        CASE OPT4 = 'T'
          REF.NO = 1
        CASE OPT4 = 'B'
          REF.NO = LINES
          IF REF.NO LT 1 THEN REF.NO = 1
      END CASE
      GOSUB 81000
    CASE OPT = "F"
      IF NEW.REC THEN
        READVU SEQ.NUM FROM CONTROL, CONO:'CSR.MEMO.SEQ', 1 THEN
          ECD.RET.VALUE=SEQ.NUM<1> "R%8"
        END ELSE
          ECD.RET.VALUE=1 "R%8"
        END
        WRITEV ECD.RET.VALUE+1 ON CONTROL, CONO:'CSR.MEMO.SEQ', 1
        MATWRITE CSR.MEMO.TRACK.REC ON CSR.MEMO.TRACK, CONO:ECD.RET.VALUE
        ERRMSG="New memo sequence number is ":ECD.RET.VALUE
        GOSUB 91000
        CSR.MEMO.TRACK.ID = ECD.RET.VALUE
      END ELSE
        MATWRITE CSR.MEMO.TRACK.REC ON CSR.MEMO.TRACK, CONO:CSR.MEMO.TRACK.ID
* T26731 v
        IF OLD.JOB.KEY # '' AND OLD.JOB.KEY # CSR.JOB.NUM THEN
          MATREADU JOB.REC FROM JOB, CONO:OLD.JOB.KEY THEN
            LOCATE CSR.MEMO.TRACK.ID IN JOB.CSR.MEMO<1>,1 SETTING POS THEN
              JOB.CSR.MEMO = DELETE(JOB.CSR.MEMO,1,POS,0)
              MATWRITE JOB.REC ON JOB, CONO:OLD.JOB.KEY
            END
            RELEASE JOB, CONO:OLD.JOB.KEY
          END ELSE
            RELEASE JOB, CONO:OLD.JOB.KEY
          END
        END
      END
      IF CSR.JOB.NUM # '' THEN
        MATREADU JOB.REC FROM JOB, CONO:CSR.JOB.NUM THEN
          LOCATE CSR.MEMO.TRACK.ID IN JOB.CSR.MEMO<1>, 1 SETTING POS ELSE
            JOB.CSR.MEMO<1,POS> = CSR.MEMO.TRACK.ID
          END
          MATWRITE JOB.REC ON JOB, CONO:CSR.JOB.NUM
        END ELSE
          RELEASE JOB, CONO:CSR.JOB.NUM
        END
      END
* T26731 ^
      GOTO 100
  END CASE
  GOTO 500
*
*---- MEMO RESPONSE LINE
*
501 *
  ECD.NUM = 56
  ECD.ACTION = 4;CALL SCRN.EDIT
  OPT2 = ECD.RET.VALUE
  BEGIN CASE
    CASE OPT2 = "A"
      DONE.MULTI.2 = 0                        ;* T26556
      REF.NO2 = LINES2 + 1
      FOR LN = 1 TO 999 UNTIL DONE.MULTI.2    ;* T26556
        GOSUB 82000
        GOSUB 20000
        IF DONE.MULTI.2 = 0 THEN              ;* T26556
          REF.NO2 = REF.NO2 + 1
          LINES2 = LINES2 + 1
        END
      NEXT LN
    CASE OPT2 = "C"
      GOSUB 610
      IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN
        REF.NO2 = ECD.RET.VALUE
        GOSUB 20000
      END
    CASE OPT2 = "D"
      GOSUB 610
      IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN
        REF.NO2 = ECD.RET.VALUE
        GOSUB 710
      END
      GOSUB 82000
    CASE OPT2[1,1] = "E"
      RETURN
    CASE OPT2 = "I" AND LINES2 GT 0
      GOSUB 610
      IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN
        REF.NO2 = ECD.RET.VALUE
        GOSUB 810
        LINES2 = LINES2 + 1
        CURR.REF.NO = ""
        GOSUB 82000
        GOSUB 20000
        LINES2 = DCOUNT(CSR.RESP<1,REF.NO>,SM)
      END
    CASE OPT2[1,1] = 'S'
      OPT3 = OPT2[2,1]
      BEGIN CASE
        CASE OPT3 = '' OR OPT3 = 'F'
          REF.NO2 = REF.NO2 + PAGE.SIZE2
          IF REF.NO2 GT LINES2 THEN REF.NO2 = 1
        CASE OPT3 = 'R'
          REF.NO2 = REF.NO2 - PAGE.SIZE2
          IF REF.NO2 LT 1 THEN REF.NO2 = 1
        CASE OPT3 = 'T'
          REF.NO2 = 1
        CASE OPT3 = 'B'
          REF.NO2 = LINES2
          IF REF.NO2 LT 1 THEN REF.NO2 = 1
      END CASE
      GOSUB 82000
  END CASE
  GOTO 501
*
*---- GET LINE NUMBER FOR MEMO
*
600 *
  GOSUB 81000
  ECD.NUM = 52
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      RETURN
    CASE ECD.RET.VALUE GE MINV AND ECD.RET.VALUE LE MAXV 
      MINV = '' ; MAXV = ''
      RETURN
    CASE 1
      ERRMSG = '** OUT OF RANGE **'; GOSUB 91000; GOTO 600
  END CASE
  RETURN
*
*---- GET LINE NUMBER FOR RESPONSE
*
610 *
  GOSUB 82000
  ECD.NUM = 52
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      RETURN
    CASE ECD.RET.VALUE GE MINV2 AND ECD.RET.VALUE LE MAXV2
      MINV2 = '' ; MAXV2 = ''
      RETURN
    CASE 1
      ERRMSG = '** OUT OF RANGE **'; GOSUB 91000; GOTO 610
  END CASE
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  CSR.MEMO = DELETE(CSR.MEMO,1,REF.NO,0)
  CSR.MEMO.DATE = DELETE(CSR.MEMO.DATE,1,REF.NO,0)
  CSR.MEMO.CODE = DELETE(CSR.MEMO.CODE,1,REF.NO,0)
  CSR.RESP = DELETE(CSR.RESP,1,REF.NO,0)
  CSR.RESP.DATE = DELETE(CSR.RESP.DATE,1,REF.NO,0)
  CSR.RESP.CODE = DELETE(CSR.RESP.CODE,1,REF.NO,0)
  GOSUB 81000
  RETURN
710 *
  CSR.RESP = DELETE(CSR.RESP,1,REF.NO,REF.NO2)
  CSR.RESP.DATE = DELETE(CSR.RESP.DATE,1,REF.NO,REF.NO2)
  CSR.RESP.CODE = DELETE(CSR.RESP.CODE,1,REF.NO,REF.NO2)
  GOSUB 82000
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  CSR.MEMO = INSERT(CSR.MEMO,1,REF.NO,0,"")
  CSR.MEMO.DATE = INSERT(CSR.MEMO.DATE,1,REF.NO,0,"")
  CSR.MEMO.CODE = INSERT(CSR.MEMO.CODE,1,REF.NO,0,"")
  CSR.RESP = INSERT(CSR.RESP,1,REF.NO,0,"")
  CSR.RESP.DATE = INSERT(CSR.RESP.DATE,1,REF.NO,0,"")
  CSR.RESP.CODE = INSERT(CSR.RESP.CODE,1,REF.NO,0,"")
  GOSUB 81000
  RETURN
810 *
  CSR.RESP = INSERT(CSR.RESP,1,REF.NO,REF.NO2,"")
  CSR.RESP.DATE = INSERT(CSR.RESP.DATE,1,REF.NO,REF.NO2,"")
  CSR.RESP.CODE = INSERT(CSR.RESP.CODE,1,REF.NO,REF.NO2,"")
  GOSUB 82000
  RETURN
*
*---- GET FIELD 1 (Security Code)
*
1010 *
  ECD.NUM = 5
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    CSR.SEC.CODE = ECD.RET.VALUE
    * END     ;* T26556
    IF CSR.SEC.CODE=LOGON.USERID THEN
      SCV.REC(6)<ESN>=LOGON.USERNAME
    END ELSE
      CNTL.ID=CONO:CSR.SEC.CODE
      MATREAD SEC.REC FROM SECURITY,CNTL.ID THEN
        USERNAME=SEC.NAME
      END ELSE
        ERRMSG = "Invalid Security code ID"
        GOSUB 91000
        GOTO 1010
      END
      SCV.REC(6)<ESN>=USERNAME
    END
  END      ;* T26556
  ECD.NUM = 6
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- GET FIELD 2 (Customer Number)
*
1020 *
  ECD.NUM = 7
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  CSR.CUST.NUM = ECD.RET.VALUE
  IF ECD.RET.VALUE # 'END' THEN
    IF ECD.RET.VALUE = '' THEN
      CUST.NAME=""
    END ELSE
      MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE 
        ERRMSG="Invalid CUSTOMER number <":CSR.CUST.NUM:">"
        GOSUB 91000
        GOTO 1020
      END
      CSR.CUST.NUM = ECD.RET.VALUE
    END
  END
  SCV.REC(8)<ESN> = CUST.NAME
  ECD.NUM = 8
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
*---- GET FIELD 3 (Sales Order Number)
*
1030 *
  ECD.NUM = 9
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' AND ECD.RET.VALUE # '' THEN
    MATREAD ORD.REC FROM ORDER, CONO:ECD.RET.VALUE ELSE 
      ERRMSG="Invalid Sales ORDER number <":ECD.RET.VALUE:">"
      GOSUB 91000
      GOTO 1030
    END
    IF CSR.CUST.NUM # "" THEN
      IF CSR.CUST.NUM # ORD.CUST THEN
        ERRMSG = "Order does not belong to Customer"
        GOSUB 91000
        GOTO 1030
      END
    END
    CSR.SALES.ORD.NUM = ECD.RET.VALUE
  END
  RETURN
*
*---- GET FIELD 4 (Job Number)
*
1040 *
  ECD.NUM = 11
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IF ECD.RET.VALUE # '' THEN
      MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE 
        ERRMSG="Invalid JOB number <":ECD.RET.VALUE:">"
        GOSUB 91000
        GOTO 1040
      END
      IF CSR.CUST.NUM # "" THEN
        IF CSR.CUST.NUM # JOB.CUST THEN
          ERRMSG="Job does not belong to Customer"
          GOSUB 91000
          GOTO 1040
        END
      END
      CSR.JOB.NUM = ECD.RET.VALUE
    END
  END
  RETURN
*
*---- GET FIELD 5 (Estimate Number)
*
1050 *
  ECD.NUM = 13
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IF ECD.RET.VALUE # "" THEN
      MATREAD EST.REC FROM ESTIMATE, CONO:ECD.RET.VALUE ELSE 
        ERRMSG="Invalid ESTIMATE number <":ECD.RET.VALUE:">"
        GOSUB 91000
        GOTO 1050
      END
      IF CSR.CUST.NUM # "" THEN
        IF CSR.CUST.NUM # EST.CUST THEN
          ERRMSG="Estimate does not belong to Customer"
          GOSUB 91000
          GOTO 1050
        END
      END
    END
  END
  RETURN
*
*---- GET FIELD 6 (Purchase Order Number)
*
1060 *
  ECD.NUM = 15
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    CSR.PO.TYPE = ECD.RET.VALUE
    * END      ;* T26556
    ECD.NUM = 10
    ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN      ;* T26556
      IF CSR.PO.TYPE = 'R' THEN
        MATREAD PO.REC FROM PO, CONO:ECD.RET.VALUE ELSE 
          ERRMSG="Invalid PO number <":ECD.RET.VALUE:">"
          GOSUB 91000
          GOTO 1060
        END
      END ELSE
        MATREAD OPO.REC FROM OUTSIDE.PO, CONO:ECD.RET.VALUE ELSE 
          ERRMSG="Invalid OUTSIDE PO number <":ECD.RET.VALUE:">"
          GOSUB 91000
          GOTO 1060
        END
      END
      CSR.PO.NUM = ECD.RET.VALUE
    END
  END      ;* T26556
  RETURN
*
*---- GET FIELD 7 (Inventory Number)
*
1070 *
  ECD.NUM = 12
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN      ;* T26556
    MATREAD INV.REC FROM INVENTORY, CONO:ECD.RET.VALUE ELSE 
      ERRMSG="Invalid INVENTORY number <":ECD.RET.VALUE:">"
      GOSUB 91000
      GOTO 1070
    END
    CSR.INVENTORY.NUM = ECD.RET.VALUE
  END
  RETURN
*
*---- GET FIELD 8 (Invoice Number)
*
1080 *
  ECD.NUM = 14
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN      ;* T26556
    MATREAD IVC.REC FROM ORDER.INVOICE, CONO:ECD.RET.VALUE ELSE 
      MATREAD IVC.REC FROM INVOICE, CONO:ECD.RET.VALUE ELSE 
        ERRMSG="Invalid INVOICE number <":ECD.RET.VALUE:">"
        GOSUB 91000
        GOTO 1080
      END
    END
    CSR.INVOICE.NUM = ECD.RET.VALUE
  END
  RETURN
*
*---- GET FIELD 9 (Status Code)
*
1090 *
  ECD.NUM = 3
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    CSR.STATUS = ECD.RET.VALUE
  END
  RETURN
*
*---- GET FIELD 11 (Follow-up date)
*
1100 *
  ECD.NUM = 29
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IF ECD.RET.VALUE < TODAY THEN
      ERRMSG="Follow-up date is earlier than today's date"
      GOSUB 91000
      GOTO 1100
    END
    CSR.FU.DATE = ECD.RET.VALUE
  END
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
  GOSUB 81000       ;* T26556
  MINV = '' ; MAXV = ''
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
  P_X  = 1 ; P_Y = SLN ; P_VALUE = REF.NO "R#4" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10001 *
  X = 7; Y = SLN; TYP = 1; MAXL = 60; O.R = "O" ; JUSTIFY = "L"
  DEFAULT = CSR.MEMO<1,REF.NO>; HMSG = "ENTER MEMO COMMENT"
  CALL EDIT.SUB
    * T26556 v
  IF VALUE = 'END' OR VALUE = '' THEN
    P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    DONE.MULTI = 1
    RETURN
  END
    * T26556 ^
  P_X = 7 ; P_Y = SLN ; P_VALUE = VALUE ; P_OPT = ""  
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CSR.MEMO<1,REF.NO> = VALUE
*     CSR.MEMO.DATE<1,REF.NO> = DATE()
*     CSR.MEMO.CODE<1,REF.NO> = LOGON.USERID
  RETURN
20000 *
  SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(REF.NO2-1,PAGE.SIZE2)
  P_X = 1 ; P_Y = SLN ; P_VALUE = REF.NO2 "R#4" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
20001 *
  X = 7; Y = SLN; TYP = 1; MAXL = 60; O.R = "O"
  DEFAULT = CSR.RESP<1,REF.NO,REF.NO2>; HMSG = "ENTER RESPONSE COMMENT"
  CALL EDIT.SUB
    * T26556 v
  IF VALUE = "END" OR VALUE = "" THEN
    P_X = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    DONE.MULTI.2 = 1
    RETURN
  END
    * T26556 ^
  P_X = 7 ; P_Y = SLN ; P_VALUE = VALUE ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CSR.RESP<1,REF.NO,REF.NO2> = VALUE
  CSR.RESP.DATE<1,REF.NO,REF.NO2> = DATE()
  CSR.RESP.CODE<1,REF.NO,REF.NO2> = LOGON.USERID
  IF CSR.MEMO.DATE<1,REF.NO> = '' THEN
    CSR.MEMO.DATE<1,REF.NO> = DATE()
    CSR.MEMO.CODE<1,REF.NO> = LOGON.USERID
    RESP.FLAG = 1
  END
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  SCV.REC(3)<ESN> = CSR.STATUS
  IF CSR.STATUS="P" THEN
    SCV.REC(4)<ESN> = "PURGE"
  END ELSE
    SCV.REC(4)<ESN> = "     "
  END
  SCV.REC(5)<ESN> = CSR.SEC.CODE
  SCV.REC(6)<ESN> = ""
  IF CSR.SEC.CODE # "" THEN
    CNTL.ID=CONO:CSR.SEC.CODE
    GOSUB 85100
    SCV.REC(6)<ESN> = USERNAME
  END
  SCV.REC(7)<ESN> = CSR.CUST.NUM
  SCV.REC(8)<ESN> = CUST.NAME
  SCV.REC(9)<ESN> = CSR.SALES.ORD.NUM
  SCV.REC(10)<ESN> = CSR.PO.NUM
  SCV.REC(11)<ESN> = CSR.JOB.NUM
  SCV.REC(12)<ESN> = CSR.INVENTORY.NUM
  SCV.REC(13)<ESN> = CSR.EST.NUM
  SCV.REC(14)<ESN> = CSR.INVOICE.NUM
  SCV.REC(29)<ESN> = CSR.FU.DATE
  IF CSR.PO.NUM # '' AND CSR.PO.TYPE = '' THEN
    READ REC FROM PO, CONO:CSR.PO.NUM THEN
      CSR.PO.TYPE = 'R'
    END ELSE
      READ REC FROM OUTSIDE.PO, CONO:CSR.PO.NUM THEN
        CSR.PO.TYPE = 'O'
      END
    END
  END
  SCV.REC(15)<ESN> = CSR.PO.TYPE
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  RETURN
*
*---- LOAD MEMO DATA (MULTI-LINE)
*
81000 *
  LINES = DCOUNT(CSR.MEMO<1>,VM)
  START.LINE = 1 + INT((REF.NO-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 81001
  CNT = 1
  MINV = START.LINE ; MAXV = LAST.LINE
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X = 1 ; P_Y = SLN ; P_VALUE = N'R#4'; P_OPT = ''
    P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO<1,N>'L#60'
    P_X := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CSR.MEMO.DATE<1,N>,'D2/')'L#8'
    P_X := AM:77 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO.CODE<1,N>'L#3'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X = 1 ; P_Y = SLN ; P_VALUE = '' ; P_OPT = 'CL'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
81001 *
  RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE) - RESPONSE LINES
*
82000 *
  START.LINE = 1 + INT((REF.NO2-1)/PAGE.SIZE2)*PAGE.SIZE2
  LAST.LINE = START.LINE + PAGE.SIZE2 - 1
  IF LAST.LINE > LINES2 THEN LAST.LINE = LINES2
  IF START.LINE = OLD.START.LINE THEN GOTO 82001
  CNT = 1
  MINV2 = START.LINE ; MAXV2 = LAST.LINE
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
    P_X = 1 ; P_Y = SLN ; P_VALUE = N'R#4'; P_OPT = ''
    P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.RESP<1,REF.NO,N>'L#60'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE2
    SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
    P_X = 1 ; P_Y = SLN ; P_VALUE = '' ; P_OPT = 'CL'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
82001 *
  LINES2=DCOUNT(CSR.RESP<1,REF.NO>,SM)
  RETURN
*
*---- GET USER ID
*
85000 *
  PORT.NO="TTY"; CALL SYSVARS.SUB(PORT.NO)
  SEC.ID="R.":PORT.NO
  MATREAD USER.REC FROM SECURITY, SEC.ID ELSE
    ERRMSG="USER RECORD MISSING"
    GOSUB 91000
  END
  RETURN
*
*---- GET USER NAME
*
85100 *
  MATREAD SEC.REC FROM SECURITY, CNTL.ID THEN
    USERNAME=SEC.NAME
  END ELSE
    USERNAME="UNKNOWN"
  END
  RETURN
*
*---- PROCESS CSR.LIST
*
86000 *
  MINV = '' ; MAXV = '' ; MAXL = ''
  LIST.COUNT=LIST.COUNT+1
  IF LIST.COUNT>M.COUNT THEN GOTO 99999
  X=0;Y=21;TYP=11
  PMSG = 'Item ':LIST.COUNT:'/':M.COUNT:'; Enter (Y) to review ':CSR.LIST<LIST.COUNT>:' (N)ext, (P)rev, (E)xit '
*     CALL EDIT.SUB1(MAT EDIT.COM)
  CALL EDIT.SUB
  ANS = VALUE
  BEGIN CASE
    CASE ANS='E'
      GOTO 99999
    CASE ANS='N'
      GOTO 86000
    CASE ANS='P'
      LIST.COUNT=LIST.COUNT-2
      IF LIST.COUNT<0 THEN LIST.COUNT=0
      GOTO 86000
    CASE ANS='Y'
      CSR.MEMO.TRACK.ID=CSR.LIST<LIST.COUNT>[4,8]
      GOTO 110
    CASE 1
      LIST.COUNT=LIST.COUNT-1
      GOTO 86000
  END CASE
*
*--- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC); RETURN
*
*---- END OF PROGRAM
*
*
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
END
