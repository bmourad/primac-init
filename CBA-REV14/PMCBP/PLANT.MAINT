*COPY>CPYLIB>COM1
**********************************************************************
* REVISION    - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM      - PLANT.MAINT
*
* BY           - ALEJANDRO DELGADO, COMPUTER BUSINESS ASSOCIATES
*
* DATE         - 05/11/2000
*
* DESCRIPTION
*
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>PLANT.CODE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
  MAT FILE.VARS = ''
  OPEN '', 'PMC.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'PMC.SCREENS FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE
    ERRMSG = 'DEPARTMENT FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'PLANT.CODE' TO PLANT.CODE ELSE
    ERRMSG = 'PLANT.CODE FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'PLANT.CODE.XREF' TO PLANT.CODE.XREF ELSE
    ERRMSG = 'PLANT.CODE.XREF FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'PREFIX' TO PREFIX ELSE
    ERRMSG = 'PREFIX FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING'
    GOTO 93000
  END
  OPEN '', 'COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GOTO 93000
  END
  OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE ERRMSG='COUNTRY.CODE';GOTO 93000 
  OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG="XREF.DATA";GOTO 93000
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
******************
* INITIALIZATION *
******************
*
  MAT EDIT.COM.DRIVER = ""
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  PAGE.SIZE = 9
  DEPT.CNT = 0
  FIELD.POS = 6:VM:7:VM:8
*******************
* MAIN PROCESSING *
*******************
*        PRINT THE SCREEN
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'PLANT.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*
*        MAIN LOOP
*
  ALL.DONE = 0
  LOOP
    GOSUB INIT.VAR
    GOSUB GET.PLANT.ID
  UNTIL (ALL.DONE) DO
    IF NEW.PLANT THEN
      GOSUB 3000
    END ELSE
      GOSUB PRINT.DATA
    END
    IF ECD.RET.VALUE # 'END' THEN GOSUB 5000
  REPEAT
  GOTO 99999
*
INIT.VAR: 
*
  MAT PLTC.REC = ''; DESC.DEPT = ''
  MAT SCV.REC = "" ; NEW.PLANT = 0
  CHANGE.DEPT = 0 ; START.LINE = 1
  DEPT.LINE = '' ; OLD.START.LINE = 1
  OLD.DESC = ''
  ECD.ACTION=6;CALL SCRN.EDIT
  RETURN
*
GET.PLANT.ID: 
*
  LOOP
    LOOP.DONE = 1
    ECD.NUM = 1
    ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE = "END"
        ALL.DONE = 1
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"                   
        GXR.NAME = "GEN.CODE"                                 
        GXR.SORT.FILE = "PLANT.CODE"                         
        GXR.FILE = PLANT.CODE                                
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        ECD.ACTION = 2;CALL SCRN.EDIT                         
        SCV.REC(ECD.NUM)<ECD.SCRN.NO> = GXR.ID                
        ECD.ACTION=3; CALL SCRN.EDIT                          
        IF GXR.ID = "" THEN LOOP.DONE = 0 ; CONTINUE
        * T26126 v
        MATREADU PLTC.REC FROM PLANT.CODE, CONO:GXR.ID LOCKED
          ERRMSG = 'PLANT CODE record is locked by user - ':GETUSERNAME(STATUS())
          GOSUB 91000 ; LOOP.DONE = 0 
        END THEN
        * T26126 ^
          PLANT.ID = GXR.ID
          OLD.DESC = PLTC.DESC
        END ELSE
          ERRMSG = 'Plant Code ':GXR.ID:' does not exist.'
          GOSUB 91000
          LOOP.DONE = 0
        END
      CASE NOT(NUM(ECD.RET.VALUE))
        ERRMSG = 'Invalid ID.'
        GOSUB 91000
        LOOP.DONE = 0
      CASE 1
        * T26126 v
        MATREADU PLTC.REC FROM PLANT.CODE, CONO:ECD.RET.VALUE LOCKED
          ERRMSG = 'PLANT CODE record is locked by user - ':GETUSERNAME(STATUS())
          GOSUB 91000 ; LOOP.DONE = 0  ; CONTINUE
        END ELSE
        * T26126 ^
          OLD.DESC = PLTC.DESC
          NEW.PLANT = 1
          MAT PLTC.REC = ''
        END
        PLANT.ID = ECD.RET.VALUE
    END CASE
  UNTIL (LOOP.DONE) DO REPEAT
  RETURN
*
3000*
*
  FOR POSX = 1 TO 8 UNTIL ECD.RET.VALUE = 'END'
    ON POSX GOSUB GET.PLTC.DESC, GET.PLTC.ADDR1, GET.PLTC.ADDR2, GET.PLTC.CITY, GET.PLTC.STATE, GET.PLTC.ZIP, GET.PLTC.CNTY, GET.PLTC.DEPT
  NEXT POSX
  RETURN
*
5000*
*
  MORE = 1
  LOOP
    CHANGE.DEPT = 0
    DEPT.CNT = COUNT(PLTC.DEPT,VM) + (PLTC.DEPT # '')
    ECD.NUM = 5
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
    ECD.ACTION=4;CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = 'END' OR REQUEST = 'E'
        MORE = 0
      CASE NUM(REQUEST)
        IF REQUEST > 0 THEN
          ON REQUEST GOSUB GET.PLTC.DESC,  GET.PLTC.ADDR1, GET.PLTC.ADDR2, GET.PLTC.CITY, GET.PLTC.STATE, GET.PLTC.ZIP, GET.PLTC.CNTY, GET.PLTC.DEPT
        END
      CASE REQUEST = 'S'                            
        IF DEPT.CNT > PAGE.SIZE THEN                  
          START.LINE = START.LINE + PAGE.SIZE    
          IF START.LINE > DEPT.CNT THEN START.LINE = 1
          ECD.ACTION = 7
          GOSUB DISPLAY.DEPT                       
          OLD.START.LINE = START.LINE
        END                                      
      CASE REQUEST = 'A'
        START.LINE = DEPT.CNT + 1
        GOSUB GET.PLTC.DEPT
      CASE REQUEST = 'C'
        CHANGE.DEPT = 1
        ECD.NUM = 11
        ECD.MINV = OLD.START.LINE
        ECD.MAXV = OLD.START.LINE + PAGE.SIZE - 1
        IF ECD.MAXV GT DEPT.CNT THEN ECD.MAXV = DEPT.CNT
        ECD.ACTION = 4 ; CALL SCRN.EDIT
        IF ECD.RET.VALUE = 'END' ELSE
          START.LINE = ECD.RET.VALUE
          GOSUB GET.PLTC.DEPT
        END
      CASE REQUEST = 'D'
        ECD.NUM = 11
        ECD.MINV = OLD.START.LINE
        ECD.MAXV = OLD.START.LINE + PAGE.SIZE - 1
        IF ECD.MAXV GT DEPT.CNT THEN ECD.MAXV = DEPT.CNT
        ECD.ACTION = 4 ; CALL SCRN.EDIT
        IF ECD.RET.VALUE = 'END' ELSE
          PLTC.DEPT = DELETE(PLTC.DEPT,1,ECD.RET.VALUE,0)
          DESC.DEPT = DELETE(DESC.DEPT,1,ECD.RET.VALUE,0)
          START.LINE = OLD.START.LINE
          GOSUB PRINT.DATA
        END
      CASE REQUEST = 'F'
        MATWRITE PLTC.REC ON PLANT.CODE, CONO : PLANT.ID
        IF OLD.DESC # PLTC.DESC THEN                                
          CALL GEN.XREF.MAINT(CONO,PLANT.ID,OLD.DESC,PLTC.DESC,PLANT.CODE.XREF,PREFIX)
        END                                                                     
        MORE = 0
    END CASE
  WHILE MORE DO REPEAT
  RELEASE PLANT.CODE, CONO:PLANT.ID
  RETURN
*
GET.PLTC.DESC: 
*
  ECD.NUM = 2
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.DESC = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.DESC
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.ADDR1: 
*
  ECD.NUM = 13
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.ADDR1 = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.ADDR1
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.ADDR2: 
*
  ECD.NUM = 14
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.ADDR2 = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.ADDR2
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.CITY: 
*
  ECD.NUM = 15
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.CITY = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.CITY
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.STATE: 
*
  ECD.NUM = 17
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.STATE = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.STATE
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.ZIP: 
*
  ECD.NUM = 16
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    PLTC.ZIP = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PLTC.ZIP
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  RETURN
*
GET.PLTC.CNTY: 
*
  VALID.COUNTRY = 0
  LOOP
  UNTIL VALID.COUNTRY DO
    ECD.NUM = 18
    ECD.ACTION = 4 ; CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE="END"
        VALID.COUNTRY = 1
      CASE TRIM(ECD.RET.VALUE) = ""
        PLTC.CNTY = ""
        VALID.COUNTRY = 1
      CASE ECD.RET.VALUE = "???"
            * CREATE CROSS REFERENCE PARAMETERS AND CALL FOR DISPLAY
        GXR.NAME = "GEN.CODE1"
        GXR.SORT.FILE = "COUNTRY.CODE"
        GXR.FILE = COUNTRY.CODE
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            * RESTORE SCREEN
        ECD.ACTION=2;CALL SCRN.EDIT
            * PROCESS RESPONSE FROM CROSS REFERENCE
        IF GXR.ID = "" THEN
          VALID.COUNTRY = 0
        END ELSE
          ECD.RET.VALUE = GXR.ID
          PLTC.CNTY = ECD.RET.VALUE
          VALID.COUNTRY = 1
        END
        START.LINE = OLD.START.LINE
        GOSUB PRINT.DATA
      CASE 1
        READ COUNTRY FROM COUNTRY.CODE,CONO:ECD.RET.VALUE THEN
          PLTC.CNTY = ECD.RET.VALUE
          VALID.COUNTRY = 1
        END ELSE
          ERRMSG="Cannot locate country code # ":ECD.RET.VALUE
          GOSUB 91000
        END
    END CASE
  REPEAT
  RETURN
*
GET.PLTC.DEPT: 
*
  DEPT.DONE = 0
  LOOP
    TMP.LINE = 1 +INT((START.LINE - 1)/PAGE.SIZE)*PAGE.SIZE
    IF TMP.LINE = OLD.START.LINE ELSE
      OLD.START.LINE = TMP.LINE
      TMP.LINE = START.LINE
      START.LINE = OLD.START.LINE
      ECD.ACTION = 7 
      GOSUB DISPLAY.DEPT
      START.LINE = TMP.LINE
    END
    VALID.DEPT = 0        
    * FIRST PRINT LINE NUMBER
    ECD.NUM = 6 ; ECD.SUB.NUM = START.LINE
    SCV.REC(ECD.NUM)<ECD.SCRN.NO,START.LINE> = START.LINE
    ECD.ACTION = 5 ; CALL SCRN.EDIT
    *
    ECD.NUM = 7 ; ECD.SUB.NUM = START.LINE
    ECD.ACTION = 4                          
    CALL SCRN.EDIT                          
    BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
        DEPT.DONE = 1 ; ECD.RET.VALUE = ''
      CASE ECD.RET.VALUE = '???'
            * CREATE CROSS REFERENCE PARAMETERS AND CALL FOR DISPLAY
        GXR.NAME = "DEPARTMENT"
        GXR.SORT.FILE = "DEPARTMENT"
        GXR.FILE = DEPARTMENT
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            * RESTORE SCREEN
        ECD.ACTION=2;CALL SCRN.EDIT
        SCV.REC(ECD.NUM)<ECD.SCRN.NO,START.LINE> = GXR.ID
        TMP.LINE = START.LINE
        START.LINE = OLD.START.LINE
*        ECD.ACTION = 3 ; CALL SCRN.EDIT
*        ECD.ACTION = 7 ; GOSUB DISPLAY.DEPT
        GOSUB PRINT.DATA
        START.LINE = TMP.LINE
            * PROCESS RESPONSE FROM CROSS REFERENCE
        IF GXR.ID = "" THEN
        END ELSE
          ECD.RET.VALUE = GXR.ID
          MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE THEN
            LOCATE ECD.RET.VALUE IN PLTC.DEPT<1> SETTING XPOS THEN
              IF CHANGE.DEPT AND PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE THEN
                PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE              
                DESC.DEPT<1,START.LINE> = DEPT.DESC
                VALID.DEPT = 1
              END ELSE
                ERRMSG = 'Department ':ECD.RET.VALUE:' already exist for the plant.'
                GOSUB 91000
              END
            END ELSE
              PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE              
              DESC.DEPT<1,START.LINE> = DEPT.DESC
              VALID.DEPT = 1
            END
          END ELSE
            ERRMSG = 'Invalid Department.'
            GOSUB 91000
          END
        END
      CASE 1
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE THEN
          LOCATE ECD.RET.VALUE IN PLTC.DEPT<1> SETTING XPOS THEN
            IF CHANGE.DEPT AND PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE THEN
              PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE              
              DESC.DEPT<1,START.LINE> = DEPT.DESC
              VALID.DEPT = 1
            END ELSE
              ERRMSG = 'Department ':ECD.RET.VALUE:' already exist for the plant.'
              GOSUB 91000
            END
          END ELSE
            PLTC.DEPT<1,START.LINE> = ECD.RET.VALUE              
            DESC.DEPT<1,START.LINE> = DEPT.DESC
            VALID.DEPT = 1
          END
        END ELSE
          ERRMSG = 'Invalid Department.'
          GOSUB 91000
        END
    END CASE
    SCV.REC(6)<ECD.SCRN.NO,START.LINE> = START.LINE
    SCV.REC(7)<ECD.SCRN.NO,START.LINE> = PLTC.DEPT<1,START.LINE>
    SCV.REC(8)<ECD.SCRN.NO,START.LINE> = DESC.DEPT<1,START.LINE>
    ECD.ACTION = 5 ; GOSUB DISPLAY.DEPT
    IF CHANGE.DEPT = 0 AND VALID.DEPT = 1 THEN START.LINE += 1
  UNTIL (DEPT.DONE) OR (CHANGE.DEPT) DO REPEAT
  RETURN
*
PRINT.DATA: 
*
  SCV.REC(1)<ECD.SCRN.NO> = PLANT.ID
  SCV.REC(2)<ECD.SCRN.NO> = PLTC.DESC
  SCV.REC(13)<ECD.SCRN.NO> = PLTC.ADDR1
  SCV.REC(14)<ECD.SCRN.NO> = PLTC.ADDR2
  SCV.REC(15)<ECD.SCRN.NO> = PLTC.CITY
  SCV.REC(16)<ECD.SCRN.NO> = PLTC.ZIP
  SCV.REC(17)<ECD.SCRN.NO> = PLTC.STATE
  SCV.REC(18)<ECD.SCRN.NO> = PLTC.CNTY
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  DEPT.CNT = DCOUNT(PLTC.DEPT<1>,VM)
  FOR X = 1 TO DEPT.CNT
    DEPT.LINE<1,X> = X
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:PLTC.DEPT<1,X> ELSE MAT DEPT.REC = ''
    DESC.DEPT<1,X> = DEPT.DESC
  NEXT X
  SCV.REC(6)<ECD.SCRN.NO> = DEPT.LINE
  SCV.REC(7)<ECD.SCRN.NO> = PLTC.DEPT
  SCV.REC(8)<ECD.SCRN.NO> = DESC.DEPT
  ECD.ACTION = 7
  GOSUB DISPLAY.DEPT
  RETURN
*
DISPLAY.DEPT: 
*
  FOR FLD.NUM = 1 TO 3                             
    ECD.SUB.NUM = START.LINE                       
    ECD.NUM = FIELD.POS<1,FLD.NUM> 
    CALL SCRN.EDIT
  NEXT FLD.NUM                                     
  RETURN                                           
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 * 
  ECD.ACTION = 99
  CALL SCRN.EDIT
END
