**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - SHIP.VIA.LIST
*
* SOURCE  - PMCBP
*
* BY      - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 02/25/86
*
* DESCRIPTION
*
* This program prints the SHIP.VIA listing.
*
* TASK 20190 JR 2/26/96 READ JCFISCAL OR OPSFISCAL DEPENDING ON CO.OPS
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
**************************************************************************
*
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- DIMENSIONED VARIABLES
*
   DIM BHEAD(5); DIM SHEAD(5); DIM THEAD(6)
   DIM SUB(20); DIM DEF(20); DIM SPC(20); DIM CDATA(20); DIM PDATA(20); DIM PRDATA(20)
   DIM CJ(20); DIM CW(20); DIM CV(20); DIM TF(20); DIM FFMT(20); DIM BRK(5); DIM SKP(5)
   DIM TOT1(20); DIM TOT2(20); DIM TOT3(20); DIM TOT4(20); DIM TOT5(20); DIM TOT6(20); DIM TOTX(20)
   MAT BHEAD=""; MAT SHEAD=""; MAT THEAD=""
   MAT SUB=""; MAT DEF=""; MAT SPC=""; MAT CDATA=""; MAT PDATA=""; MAT PRDATA=""
   MAT CJ=""; MAT CW=""; MAT CV=""; MAT TF=""; MAT FFMT=""; MAT BRK=""; MAT SKP=""
   MAT TOT1=""; MAT TOT2=""; MAT TOT3=""; MAT TOT4=""; MAT TOT5=""; MAT TOT6=""; MAT TOTX=""
*
*---- PRE-INITIALIZATION
*
   PROCREAD PARAM ELSE
      PRINT "MUST RUN FROM PROC"
      STOP
   END
   CONO = PARAM<1>
*T26493 v
*  CONAME = PARAM<2>
*  REPORT.NAME = "SHIP-VIA LISTING"
*  REPORT.NUMBER = "XXXX"
   CONAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = PARAM<2>
*T26493 ^
   REPORT.DATE = DATE()
   HD1 = "" ; HD2 = ""
*
*---- GET HEADING
*
   CALL GET.PROG.HEAD(CONO,CONAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
   SP = INT((40-LEN(CONAME))/2)
   GHEAD = "*** GRAND TOTALS ***"
   MTD.SHPMT = "";MTD.COST = "";MTD.SALE = ""
   YTD.SHPMT = "";YTD.COST = "";YTD.SALE = ""
*
*---- COLUMN HEADINGS
*
   SUB(1) = "CD"
   SUB(2) = "DESCRIPTION"
   SUB(3) = "T"
   SUB(4) = "ACCOUNT"
   SUB(5) = "ACCOUNT DESCRIPTION"
   SUB(6) = "SPTD"
   SUB(7) = "COST PTD"
   SUB(8) = "SALE PTD"
   SUB(9) = "SYTD"
   SUB(10) = "COST YTD"
   SUB(11) = "SALE YTD"
*
*---- DATA ATTRIBUTES
*
   DEF(1) = "L2"
   DEF(2) = "L25"
   DEF(3) = "L1"
   DEF(4) = "L14"
   DEF(5) = "L25"
   DEF(6) = "R4;;T"
   DEF(7) = "R12;MD2,Z;T"
   DEF(8) = "R11;MD2,Z;T"
   DEF(9) = "R4;;T"
   DEF(10) = "R12;MD2,Z;T"
   DEF(11) = "R12;MD2,Z;T"
*
*---- OPEN FILES
*
   OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
      ERRMSG = "CANNOT OPEN SHIP.VIA FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","COA" TO COA ELSE
      ERRMSG = "CANNOT OPEN COA FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
*
   MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""
* TASK 20190
   IF CO.OPS = "Y" THEN
* TASK 20190
      MATREAD FISCAL.REC FROM CONTROL,CONO:"OPFISCAL" ELSE
         ERRMSG = "OPSFISCAL IS MISSING"
         GOSUB 90000
         STOP
      END
* TASK 20190
   END ELSE
      MATREAD FISCAL.REC FROM CONTROL,CONO:"JCFISCAL" ELSE
         ERRMSG = "JCSFISCAL IS MISSING"
         GOSUB 90000
         STOP
      END
   END
* TASK 20190
   PERIOD = FR.CURR.PER
   PERIOD.YY = FR.CURR.PER[1,4]
   GOSUB 20000
*
*---- MAIN PROCESSING ----*
*
100*
   READNEXT ID ELSE
      BRK.LVL = 1
      XXBREAK = BRK.CNT + 1
      GOSUB 1000
      PRINTER OFF
      PRINTER CLOSE
      STOP
   END
*
*---- READ FILE(S) AND LOAD ARRAY
*
   MATREAD SHIP.VIA.REC FROM SHIP.VIA, ID ELSE GOTO 100
   MATREAD COA.REC FROM COA,CONO:SHPV.GL.NO ELSE COA.DESC = STR("?",25)
   SHIP.NUM = ID[4,99]
   LOCATE PERIOD IN SHPV.PERIOD<1>,1 SETTING PP ELSE PP = 0
   IF PP > 0 THEN
      MTD.SHPMT = SHPV.SHPMT<1,PP>
      MTD.COST = SHPV.COST<1,PP>
      MTD.SALE = SHPV.SALE<1,PP>
   END
   P.CNT = COUNT(SHPV.PERIOD,VM) + (SHPV.PERIOD # "")
   FOR PP = 1 TO P.CNT
      IF PERIOD.YY = SHPV.PERIOD<1,PP>[1,4] THEN
         YTD.SHPMT = YTD.SHPMT + SHPV.SHPMT<1,PP>
         YTD.COST = YTD.COST + SHPV.COST<1,PP>
         YTD.SALE = YTD.SALE + SHPV.SALE<1,PP>
      END
   NEXT PP
   ACCT.NO = SHPV.GL.NO CO.ACCT.MASK
   IF MTD.SHPMT = 0 THEN MTD.SHPMT = ""
   IF MTD.COST = 0 THEN MTD.COST = ""
   IF MTD.SALE = 0 THEN MTD.SALE = ""
   IF YTD.SHPMT = 0 THEN YTD.SHPMT = ""
   IF YTD.COST = 0 THEN YTD.COST = ""
   IF YTD.SALE = 0 THEN YTD.SALE = ""
   MAT CDATA = ""
   CDATA(1) = SHIP.NUM
   CDATA(2) = SHPV.DESC
   CDATA(3) = SHPV.TRUCK.FLG
   CDATA(4) = ACCT.NO
   CDATA(5) = COA.DESC
   CDATA(6) = MTD.SHPMT
   CDATA(7) = MTD.COST
   CDATA(8) = MTD.SALE
   CDATA(9) = YTD.SHPMT
   CDATA(10) = YTD.COST
   CDATA(11) = YTD.SALE
*
*---- CHECK BREAKS
*
200*
   DONE = 0
   FOR B = 1 TO BRK.CNT UNTIL DONE
      IF CDATA(BRK(B)) # PDATA(BRK(B)) THEN
         BRK.LVL = B
         XXBREAK = BRK.CNT - B + 1
         GOSUB 1000
         DONE = 1
      END
   NEXT B
   GOSUB 500
   MAT PDATA = MAT CDATA
   MTD.SHPMT = "";MTD.COST = "";MTD.SALE = ""
   YTD.SHPMT = "";YTD.COST = "";YTD.SALE = ""
   GOTO 100
*
*---- PRINT DETAIL LINE ----*
*
500*
   MAT PRDATA = MAT CDATA
   IF LINE.COUNT >= PAGE.LENGTH THEN
      GOSUB 10000
   END ELSE
      MAT PRDATA = MAT CDATA
   END
   PLINE = ""
   FOR C = BEG.COL TO END.COL
      IF CV(C) = "" THEN
         PLINE = PLINE : SPC(C) : PRDATA(C) FFMT(C)
      END ELSE
         PLINE = PLINE : SPC(C) : OCONV(PRDATA(C),CV(C)) FFMT(C)
      END
   NEXT C
   PRINT PLINE
   LINE.COUNT = LINE.COUNT + 1
*
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT1(C) = TOT1(C) + PRDATA(C)
      END
   NEXT C
*     IF TOT1(6) + 0 # 0 THEN
*        TOT1(8) = INT(TOT1(7) / TOT1(6))
*     END
*     IF TOT1(9) + 0 # 0 THEN
*        TOT1(11) = INT(TOT1(10) / TOT1(9))
*     END
   RETURN
*
*---- PROCESS BREAKS ----*
*
*---- PROCESS BREAKS (LOWEST LEVEL TO HIGHEST)
*
1000*
   IF FIRST.TIME THEN
      FIRST.TIME = 0
      RETURN
   END
   IF TOT.CNT = 0 THEN GOTO 8000
   MAT TOTX = MAT TOT1
   BRK.NO = BRK.CNT
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT2(C) = TOT2(C) + TOT1(C)
      END
   NEXT C
   MAT TOT1 = ""
   IF XXBREAK = 1 THEN GOTO 8000
*
*---- PROCESS LEVEL 2 BREAK
*
2000*
   MAT TOTX = MAT TOT2
   BRK.NO = BRK.CNT - 1
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT3(C) = TOT3(C) + TOT2(C)
      END
   NEXT C
   MAT TOT2 = ""
   IF XXBREAK = 2 THEN GOTO 8000
*
*---- PROCESS LEVEL 3 BREAK
*
3000*
   MAT TOTX = MAT TOT3
   BRK.NO = BRK.CNT - 2
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT4(C) = TOT4(C) + TOT3(C)
      END
   NEXT C
   MAT TOT3 = ""
   IF XXBREAK = 3 THEN GOTO 8000
*
*---- PROCESS LEVEL 4 BREAK
*
4000*
   MAT TOTX = MAT TOT4
   BRK.NO = BRK.CNT - 3
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT5(C) = TOT5(C) + TOT4(C)
      END
   NEXT C
   MAT TOT4 = ""
   IF XXBREAK = 4 THEN GOTO 8000
*
*---- PROCESS LEVEL 5 BREAK
*
5000*
   MAT TOTX = MAT TOT5
   BRK.NO = BRK.CNT - 4
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT6(C) = TOT6(C) + TOT5(C)
      END
   NEXT C
   MAT TOT5 = ""
   IF XXBREAK = 5 THEN GOTO 8000
*
*---- PROCESS LEVEL 6 BREAK
*
6000*
   MAT TOTX = MAT TOT6
   BRK.NO = BRK.CNT - 5
   GOSUB 9000
   MAT TOT6 = ""
   GOTO 8000
*
*---- BREAK COMPLETED
*
8000*
   LINE.COUNT = LINE.COUNT + SKP(BRK.LVL)
   IF LINE.COUNT < PAGE.LENGTH THEN
      FOR LC = 1 TO SKP(BRK.LVL)
         PRINT
      NEXT LC
   END
   RETURN
*
*---- PRINT TOTAL LINE ----*
*
9000*
   TLINE = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         TLINE = TLINE : SPC(C) : SPACE(CW(C))
      END ELSE
         TLINE = TLINE : SPC(C) : OCONV(TOTX(C),CV(C)) FFMT(C)
      END
   NEXT C
   BEGIN CASE
      CASE BRK.NO = 0
         TFMT = "R#":TOT.PTR
         TLINE = GHEAD TFMT : TLINE[TOT.PTR+1,999]
         IF LINE.COUNT + 1 > PAGE.LENGTH THEN GOSUB 10000
         PRINT ULINE2
         LINE.COUNT = LINE.COUNT + 1
         IF LINE.COUNT > PAGE.LENGTH THEN GOSUB 10000
         PRINT TLINE
         LINE.COUNT = LINE.COUNT + 1
         IF LINE.COUNT > PAGE.LENGTH THEN GOSUB 10000
      CASE BRK.NO = 1
         TFMT = "R#":TOT.PTR
         IF LINE.COUNT > PAGE.LENGTH THEN GOSUB 10000
   END CASE
   RETURN
*
*---- PRINT PAGE HEADINGS ----*
*
10000*
   PRINT CHAR(12)
   LINE.COUNT = 0
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   LINE.COUNT = LINE.COUNT + 3
   FOR BH = 1 TO BRK.CNT
      IF BHEAD(BH) # "" THEN
         PRINT BHEAD(BH)
         LINE.COUNT = LINE.COUNT + 1
      END
   NEXT BH
   PRINT
   LINE.COUNT = LINE.COUNT + 1
   FOR SH = 1 TO SH.CNT
      PRINT SHEAD(SH)
   NEXT SH
   LINE.COUNT = LINE.COUNT + SH.CNT
   RETURN
*
*---- INITIALIZATION ----*
*
20000*
*---- GENERAL PARAMETERS
   LINE.COUNT = 99
   PAGE.NO = 0
   FIRST.TIME = 0
*---- COMPUTE PAGE HEADING COUNT
*---- COMPUTE ENDING COLUMN NUMBER
   END.COL = ""
   FOR C = 1 TO 20
      IF DEF(C) # "" THEN END.COL = C
   NEXT C
*---- SEGREGATE COLUMN DEFINITION ATTRIBUTES
   BEG.COL = ""
   CW.TOT = 0
   BHEAD.CNT = 0
   TOT.CNT = 0
   FOR C = 1 TO END.COL
      DEF1 = FIELD(DEF(C),";",1)
      DEF2 = FIELD(DEF(C),";",2)
      DEF3 = FIELD(DEF(C),";",3)
      DEF4 = FIELD(DEF(C),";",4)
      CJ(C) = DEF1[1,1]
      CW(C) = DEF1[2,3]
      CV(C) = DEF2
      FFMT(C) = CJ(C):"#":CW(C)
      BEGIN CASE
         CASE DEF3[1,1] = "T"
            IF CV(C) = "" THEN CV(C) = "MD0"
            TF(C) = DEF3
            TOT.CNT = TOT.CNT + 1
         CASE DEF3[1,1] = "B"
            B = DEF3[2,1]
            BRK(B) = C
            BEGIN CASE
               CASE DEF4 = "N"
                  SKP(B) = 99
                  BHEAD.CNT = BHEAD.CNT + 1
               CASE NUM(DEF4) AND DEF4 # ""
                  SKP(B) = DEF4
               CASE 1
                  SKP(B) = 1
            END CASE
      END CASE
      IF CW(C) > 0 THEN
         CW.TOT = CW.TOT + CW(C) + SPC(C)
         IF BEG.COL = "" THEN BEG.COL = C
      END
   NEXT C
*---- DETERMINE COLUMN SPACING
   COL.CNT = END.COL - BEG.COL + 1
   SEP = INT((132-CW.TOT)/(COL.CNT-1))
   IF SEP > 3 THEN SEP = 3
   SPC(BEG.COL) = ""
   FOR C = BEG.COL+1 TO END.COL
      SP = SPC(C) + SEP
      SPC(C) = SPACE(SP)
   NEXT C
*---- COMPUTE BREAK COUNT
   BRK.CNT = ""
   FOR B = 1 TO 5 WHILE BRK.CNT = ""
      IF BRK(B) = "" THEN BRK.CNT = B - 1
   NEXT B
*---- COMPUTE COLUMN HEADING LINE COUNT
   SH.CNT = 0
   FOR C = BEG.COL TO END.COL
      N = COUNT(SUB(C),VM) + (SUB(C) # "")
      IF N > SH.CNT THEN SH.CNT = N
   NEXT C
*---- SHIFT COLUMN HEADINGS TO PROPER LINE
   IF SH.CNT > 1 THEN
      FOR C = BEG.COL TO END.COL
         N = COUNT(SUB(C),VM) + (SUB(C) # "")
         FOR SH = N+1 TO SH.CNT
            SUB(C) = VM:SUB(C)
         NEXT SH
      NEXT C
   END
*---- CENTER COLUMN HEADINGS AND UNDERLINE
   FOR C = BEG.COL TO END.COL
      FOR SH = 1 TO SH.CNT
         X = SUB(C)<1,SH>
         X = TRIM(X)
         XL = LEN(X)
         SP = INT((CW(C)-XL)/2)
         IF CJ(C) = "R" THEN
            X = X:SPACE(SP)
         END ELSE
            X = SPACE(SP):X
         END
         SUB(C)<1,SH> = X FFMT(C)
      NEXT SH
      SUB(C) = SUB(C):VM:STR("-",CW(C))
   NEXT C
*---- BUILD COLUMN HEADING PRINT LINES
   SH.CNT = SH.CNT + 1
   FOR SH = 1 TO SH.CNT
      SHEAD(SH) = SUB(BEG.COL)<1,SH>
   NEXT SH
   FOR SH = 1 TO SH.CNT
      FOR C = BEG.COL+1 TO END.COL
         SHEAD(SH) = SHEAD(SH) : SPC(C) : SUB(C)<1,SH>
      NEXT C
   NEXT SH
*---- BUILD TOTAL COLUMN UNDERLINE
   ULINE1 = ""
   ULINE2 = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         ULINE1 = ULINE1 : SPC(C) : SPACE(CW(C))
         ULINE2 = ULINE2 : SPC(C) : SPACE(CW(C))
      END ELSE
         ULINE1 = ULINE1 : SPC(C) : STR("-",CW(C))
         ULINE2 = ULINE2 : SPC(C) : STR("=",CW(C))
      END
   NEXT C
*---- COMPUTE SPACE FOR TOTAL HEADINGS
   TOT.PTR = 0
   ULEN = LEN(ULINE1)
   FOR TP = 1 TO ULEN WHILE TOT.PTR = 0
      IF ULINE1[TP,1] # " " THEN
         TOT.PTR = TP - 2
      END
   NEXT TP
   IF TOT.PTR < 0 THEN TOT.PTR = 0
*---- COMPUTE PAGE LENGTH
   PAGE.LENGTH = 56
*
   PRINTER ON
   RETURN
* 90000*
*       PRINT ERRMSG:
*       INPUT REPLY:
*       RETURN
*
*--- CALLS FOR SYSCOM
*
90000 *
91000 *
   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
END
