*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - PERIOD.DATES
* BY          - WALID YAMOUT, C.B.A
* DATE        - 10/11/84
* DESCRIPTION -
* TASK
*     18573 04/17/95 LLH ACCOUTING PERIODS
*
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
***********************************************************************
*ENDDOC
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  DIM OPEN.DATES(55)
*
*--- SET UP ERROR ROUTINE
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN FILES
*
  MAT FILE.VARS = ""
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = "PMC.SCREENS FILE IS MISSING"; GOTO 93000
*
*--- INITIALIZE
*
  REF.CNT = 0
  REF.NO  = ""
  CURR.REF.NO = ""
  LINE.COUNT  = 13
*
*--- GET COMPANY
*
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 999999
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
    PERIOD.REC = ""
    PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
  IF CO.LAST.FISCAL <> PERIOD.REC<1> THEN
    ERRMSG = "ERROR IN SETTING THE LAST FISCAL ON COMPANY"
    GOSUB 91000; GOTO 999999
  END
  MATREAD FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
    ERRMSG = "CANNOT LOCATE GLS FISCAL PERIOD"
    GOSUB 91000; GOTO 999999
  END
  YEAR = FR.CURR.PER[1,4]
  CURR = FR.CURR.PER[5,2]
  IF CURR < 1 OR CURR > NUM.PERIODS THEN
    ERRMSG = 'ERROR IN GLS FISCAL PERIOD'
    GOSUB 91000; GOTO 999999
  END
*
*--- SCREEN SETUP
*
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 1
  ESN = 1

  ECD.SCRN.NAME = "PERIOD.DATES"
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*
*--- MAIN PROCESSING
*
100*
  CHANGE.MADE = 0
  ACTION = ""
  MAT SCV.REC = ""
  ECD.ACTION = 6; CALL SCRN.EDIT
  * T26126 v
  MATREADU OPEN.DATES FROM CONTROL, CONO:"OPENDATES" LOCKED
    ERRMSG = 'GL PERIOD DATES record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 99990 
  END ELSE
  * T26126 ^
    MAT OPEN.DATES = ""
    ACTION = "A"
  END
  GOSUB 9000
  ECD.ACTION = 3; CALL SCRN.EDIT
  REF.NO = 1
  CURR.REF.NO = 1
  IF ACTION = "A" THEN
    GOTO 501
  END ELSE
    GOTO 500
  END
*
*--- GET OPERATOR REQUEST
*
500*
  ECD.NUM = 1; ECD.ACTION = 4 ; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
*
501 *
  BEGIN CASE
    CASE ACTION = "A"
      MODE = "A"
      DONE = 0
      FOR REF.NO = REF.CNT + 1 TO PERIOD.REC<1>  UNTIL DONE
        IF REF.CNT > 0 THEN GOSUB 10000
        GOSUB 2000
        IF ECD.RET.VALUE="END" THEN 
          REF.CNT=REF.NO-1
          DONE = 1
        END ELSE
          REF.CNT = REF.NO
        END
      NEXT REF.NO
      REF.NO = REF.CNT
      CURR.REF.NO = ""
      GOSUB 10000
    CASE ACTION = "C"
      GOSUB 3000
      IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
        REF.NO = ECD.RET.VALUE
        LN.NO  = ECD.RET.VALUE
        FOR REF.CHANGE = LN.NO TO PERIOD.REC<1>
          REF.NO = REF.CHANGE
          IF REF.NO > 0 THEN GOSUB 10000
          GOSUB 2000
          IF ECD.RET.VALUE = "END" THEN
            RELEASE CONTROL, CONO:"OPENDATES"
            GOTO 100
          END
        NEXT REF.CHANGE
      END
      GOSUB 10000
    CASE ACTION = "E" OR ACTION = "END"
      RELEASE CONTROL, CONO:"OPENDATES"
      GOTO 99990
    CASE ACTION = "F"
      FOR I = 1 TO PERIOD.REC<1>- 1
        IF OPEN.DATES(I) > OPEN.DATES(I+1) THEN
** CRT 'CHECK DATES'
** INPUT LL
          ERRMSG = "Dates not in Ascending Date Sequence"
          GOSUB 91000; GOTO 500
        END
      NEXT I
      MATWRITE OPEN.DATES ON CONTROL, CONO:"OPENDATES"
      GOTO 99990
*     CASE ACTION = "S" AND REF.CNT > 0
*        REF.NO = CURR.REF.NO + LINE.COUNT
*        IF REF.NO > REF.CNT THEN REF.NO =1
*        GOSUB 10000
    CASE ACTION="S" AND REF.CNT > 0
      REF.NO=CURR.REF.NO + LINE.COUNT
      IF REF.NO > REF.CNT THEN REF.NO=1
      GOSUB 10000
    CASE ACTION="SF" AND REF.CNT > 0
      REF.NO=CURR.REF.NO + LINE.COUNT
      IF REF.NO > REF.CNT THEN REF.NO=1
      GOSUB 10000
    CASE ACTION="ST" AND REF.CNT > 0
      REF.NO=1
      GOSUB 10000
    CASE ACTION="SR" AND REF.CNT > 0
      REF.NO=CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO=1
      GOSUB 10000
    CASE ACTION="SB" AND REF.CNT > 0
      REF.NO=REF.CNT
      GOSUB 10000
  END CASE
  GOTO 500
*
*--- GET DEFAULT FOR DATE
*
1000*
  MON = FIELD(OCONV(OPEN.DATES(REF.NO-1),"D2-"),"-",1) + 0
  TEST.MON = 0
  IF MON = NUM.PERIODS THEN NEXT.MON = 1 ELSE NEXT.MON = MON + 1
  FOR I = 28 TO 31 WHILE NEXT.MON # TEST.MON
    TEST.DATE = OPEN.DATES(REF.NO-1) + I
    TEST.MON = FIELD(OCONV(TEST.DATE,"D2-"),"-",1) + 0
  NEXT I
  IF NEXT.MON = TEST.MON THEN
    ECD.DEFAULT = TEST.DATE
  END
  RETURN
*
*--- CHANGE OPEN.DATES
*
2000*
  IF REF.NO > 1 THEN GOSUB 1000
*
  ECD.NUM =4; ECD.SUB.NUM=REF.NO; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF REF.NO > 1 THEN
    IF ECD.RET.VALUE < OPEN.DATES(REF.NO-1) THEN
      ERRMSG = "DATE IS LESS THAN LAST PERIOD DATE"
      GOSUB 91000; GOTO 2000
    END
    IF ECD.RET.VALUE > SCV.REC(4)<ESN,REF.NO+1> AND SCV.REC(4)<ESN,REF.NO+1> # "" THEN
      ERRMSG = "DATE IS GREATER THAN NEXT PERIOD DATE"
      GOSUB 91000; GOTO 2000
    END
  END ELSE
    IF ECD.RET.VALUE > SCV.REC(4)<ESN,REF.NO+1> AND SCV.REC(4)<ESN,REF.NO+1> # "" THEN
      ERRMSG = "PERIOD 1 DATE IS GREATER THAN NEXT PERIOD DATE"
      GOSUB 91000; GOTO 2000
    END
  END
  CHK.YR = OCONV(ECD.RET.VALUE,"D")[8,4]
  IF YEAR <= CHK.YR + 1 AND YEAR >= CHK.YR - 1 THEN
    OPEN.DATES(REF.NO) = ECD.RET.VALUE
  END ELSE
    ERRMSG = "INVALID YEAR"; GOSUB 91000; GOTO 2000
  END
  CHANGE.MADE = 1
2099*
  RETURN
*
*--- LINE/PERIOD TO CHANGE
*
3000*
  ECD.MINV=CURR.REF.NO; ECD.MAXV=CURR.REF.NO + LINE.COUNT -1
  IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
  ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN RETURN
  RETURN
*
*
*--- SET SCREEN VALUES
*
9000*
  REF.CNT = PERIOD.REC<1>
  FOR REF = 1 TO REF.CNT
    SCV.REC(3)<ESN,REF> = "Period # ":REF"R%2"
    SCV.REC(4)<ESN,REF> = OPEN.DATES(REF)
  NEXT REF
  RETURN
*
*--- DISPLAY MULTI-LINES FIELDS
*
10000*
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  ECD.NUM = 2;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM = 3;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM = 4;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  RETURN
*
*---   ERROR ROUTINE
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
  GOTO 999999
*
99990 *
  ECD.ACTION = 99 ; CALL SCRN.EDIT
999999*
*    PRINT @(-1):
END
