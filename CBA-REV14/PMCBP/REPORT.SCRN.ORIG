*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* SOURCE        - PMCBP
* PROGRAM       - REPORT.SCRN
* BY            - JIHAD YAMOUT, C.B.A
* DATE          - 01/28/86
* MODIFIED      - 09/09/91 by BERN to allow optional input via
*                  REPORT.PROC.FILE<17>="O"
* MODIFIED      - 03/20/92 by NICK AMENDOLA to provide Overnight
*                  processor queueing.
* DESCRIPTION
*
* This is used to enter all select options for reporting.
* This program must run from a proc .
*
*------------------- Input / Output  Information --------------------
* Input(Before REV12)
* -----
* 1 = CONO
* 2 = Heading or Company name
* 3 = Screen heading
* 4 = Sequence of event.
*
* Input (REV12)
* -----
* 1 = REPORT NUMBER (e.g. PC101)
*
* Output
* ------
* It passes all values entered to the proc called from in the same
* sequence entered .
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21177 diane 01/23/1997 * REV11 UPG FIX CLOSE
*T23901 edvard 04/26/1999 * DO NOT DISPALY (OP) OPTION ON THE REPORTS IF
*                           REPORT IS DISABLED FOR OVERNIGHT
*                           PROCESSING.
*T25740 edvard 11/13/2001 * REV12
*T26090 adelgado 03/11/2002 * Add prompt from PJOB.CONTROL at the end of
*                             all other prompts.
*T26090 wyamout 03/18/2002 * Add logic for PMC_REPORTS file
*T26090 wyamout 04/19/2002 * Update USER.RPT.SUBID
*T26090 wyamout 04/29/2002 * ADD PREPROCESS NOTICE
*T26090 cmykleb 05/09/2002 * Add PRS.SCREENS for non gui rpt screen.
*T26090 cmykleb 05/20/2002 * Add a screen for multi line prompts.
*T26090 cmykleb 05/30/2002 * Change <RETURN> to <Enter>.
*T26090 cmykleb 06/11/2002 * Only display notice once.
*T26090 cmykleb 06/25/2002 * Load "N/A" into for display only.
*T26685 lhelms 07/02/2002 * REV12 DIVISION SECURITY
*                           B = CHECK FOR DIVISION AND 00 ALL IF 
*                               DIV.SECURITY<2> = "Y"
*                           G = CHECK FOR DIVISION ONLY TO PRINT
*       WALID  07/22/2002 * DIVISION SECURITY BEHAVIOR
*                           N = stricly a DS Prompt
*                           P = EOP Process/close
*                           L = EOP Listing
*                           D = Daily listing
*                           U = Update
*
*T27410 cmykleb 05/28/2003 * Add a locate feature.
*T27410 bmourad 06/05/2003 * Allow option file to be authenticated from
*                            multiple files
*T27689 wyamout 09/09/2003 * CHANGES FOR EPRIMAC
*T27734 thompson 09/29/2003 * Change to read cnv from Report Proc Entry
*                             and make them correct when setup.
*T27784 cmykleb 12/02/2003 * Overnight processing reports headings are
*                            not correct.
*********************************************************************
*
OPEN '','CONTROL' TO CONTROL ELSE STOP
*---- FILE INSERTS
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>TCC
*COPY>CPYLIB>EDIT.COM
*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>CPYLIB>PORT.CONTROL
*COPY>PMC.CPYLIB>REPORT.PROC.FILE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
* T26090 v
*COPY>PMC.CPYLIB>PMC_PROCESS_XREF
*COPY>PMC.CPYLIB>PMC_REPORTS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SECURITY
* T26090 ^
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>OVERNIGHT.REQUESTS
*COPY>CPYLIB>ROC.H
*COPY>CPYLIB>SPECIAL.H
*
*---- SAVE REC
*
   DIM S.REC(10)
   EQU S.SA.OP      TO S.REC(1)
   EQU S.SA.OP.P    TO S.REC(2)
   EQU S.SA.OP.M    TO S.REC(3) ; * T26090
   EQU S.SA.OP.DS   TO S.REC(4) ; * T26685
   EQU S.SA.OP.GDS  TO S.REC(5) ; * T26685
   MAT S.REC = ""
*
   PORT = 'TTY'
   CALL SYSVARS.SUB(PORT)
* T26090 v
OPEN "CONTROL" TO CONTROL ELSE STOP
*  ACCT = @WHO
   ACCT = "ACCT"
   CALL SYSVARS.SUB(ACCT)
* T26090 ^
* T27689 v
*  CALL TCC.SUB(PORT)
   RB.FLAG = "redback"; CALL SYSVARS.SUB(RB.FLAG)
   IF RB.FLAG = "" THEN
      CALL TCC.SUB(PORT)
   END
* T27689 ^
*--- TU_VERNO already set
*
*---- SETUP SYSTEM ERRMSGS
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
* T26090 v
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CONTROL FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "COMPANY FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","SECURITY" TO SECURITY ELSE
      ERRMSG = "SECURITY FILE IS MISSING"
      GOTO 93000
   END
   OPEN "","PMC_PROCESS" TO PMC_PROCESS ELSE
      ERRMSG = 'CANNOT OPEN PMC_PROCESS'
      GOTO 93000
   END
   OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE
      ERRMSG = 'CANNOT OPEN PMC_PROCESS_XREF'
      GOTO 93000
   END
   OPEN "","PMC_REPORTS" TO PMC_REPORTS ELSE
      ERRMSG = 'CANNOT OPEN PMC_REPORTS'
      GOTO 93000
   END
   OPEN "","PMC_REPORT_VALUES" TO PMC_REPORT_VALUES ELSE
      ERRMSG = 'CANNOT OPEN PMC_REPORT_VALUES'
      GOTO 93000
   END
   OPEN "","ONP.SCREENS" TO M.SCREENS ELSE
      OPEN "","PMC.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "PMC.SCREENS FILES IS MISSING"
         GOTO 93000
      END
   END
* T26090 v
   OPEN "","PRS.SCREENS" TO SECOND.SCREENS ELSE
      ERRMSG = "PRS.SCREENS FILES IS MISSING"
      GOTO 93000
   END
* T26090 ^
   OPEN "","REPORT.PROC.FILE" TO REPORT.PROC.FILE ELSE
      ERRMSG = "REPORT.PROC.FILE IS MISSING"
      GOTO 93000
   END
   OVERNIGHT.OK = 1
   OPEN "","OVERNIGHT.PROCS" TO OVERNIGHT.PROCS ELSE
      OVERNIGHT.OK = 0
   END
   OPEN "","_HOLD_" TO HOLD.FILE ELSE
      ERRMSG = 'CANNOT OPEN _HOLD_'
      GOSUB 93000
   END
   REPORT_ID = ""
   EOD_SECURITY = "" ;* T26685
*T27689 v
*  USER_ID = UPCASE(@LOGNAME)
   USER_ID = "PMCLOGNAME"
   CALL SYSVARS.SUB (USER_ID)
   USER_ID = UPCASE (USER_ID)
*T27689 ^
   HF_NAME = PORT :"_": USER_ID    ;* T26090
*  HF_NAME = CHANGE(PORT,"*","_") :"_": REPORT_ID    ;* T26090
* T26090 ^
*
*---- GET PROC INFORMATION
*
   PROCREAD XX ELSE
      ERRMSG = "This program must run from a proc"
      PROC.VALUES = "END"
      GOTO 93000
   END
* T26090 v
*  CONO = XX<1>
*  PROC.VALUES = ""
*  PROC.VALUES<1> = XX<1>
*  PROC.VALUES<2> = XX<2>
*  SC.HEAD = XX<3>
*  INP.SEQ = XX<4>
*  REPORT.NAME = SC.HEAD
*
*---- CHECK IF REV12 AND PMC_REPORTS
*
   SUB_REPORT = ""
   REPORT_ID = ""
   FOUND_VALUES = 0
   PROC.VALUES = ""
   NA.VALUES = "" ; * T26090
   MULTI.VALUES = ""
   IH_PROMPTS = ""
   IH_HEADINGS = ""
   OVERNIGHT.RUNNING = 0
   IF NUM(XX<1>) AND LEN(XX<1>) = 3 AND DCOUNT(XX,AM) > 2 THEN
      REV12_FLAG = 0
      MAT PRPT.REC = ""
      CONO = XX<1>
      PROC.VALUES<1> = XX<1>
      PROC.VALUES<2> = XX<2>
      SC.HEAD = XX<3>
      INP.SEQ = XX<4>
   END ELSE
      IF INDEX(XX<1>,",",1) > 0 THEN
         SUB_REPORT = CHANGE(XX<1>,",",AM)
         SUB_REPORT = DELETE(SUB_REPORT,1,0,0)
         SCOUNT = DCOUNT(SUB_REPORT,AM)
         FOR SS = 1 TO SCOUNT
            MATREAD PRPT.REC FROM PMC_REPORTS, SUB_REPORT<SS> ELSE
               MAT PRPT.REC = ""
               SUB_REPORT = ""
               ERRMSG = "Invalid SUB REPORT - (" :SUB_REPORT<SS>:")"
               GOSUB 91000
               ERRMSG = ""
            END
         NEXT SS
         REPORT_ID = FIELD(XX<1>,",",1)
      END ELSE
         REPORT_ID = XX<1>
      END
      MATREAD PRPT.REC FROM PMC_REPORTS, REPORT_ID THEN
         REV12_FLAG = 1
         CONO = ""
         MAT COMP.REC = ""
         CALL GET.CONO (CONO, MAT COMP.REC)
         IF CONO = "END" THEN
            PROC.VALUES = CONO
            GOTO 999999
         END
         GOSUB CHECK.FOR.DISPLAY
         GOSUB GET_PMC_REPORT_VALUES
         IF FOUND_VALUES = 0 THEN
            PROC.VALUES<1> = CONO
            PROC.VALUES<2> = CO.NAME
            GOSUB GET_SC_HEAD
            INP.SEQ = CHANGE(PRPT.PROMPTS,VM,",")
         END ELSE
            LINES = DCOUNT(PROC.VALUES,AM)
            OPTION = PROC.VALUES<LINES>
            IF OPTION # "V" AND OPTION # "M" THEN GOTO 999999
            WRITEV OPTION ON CONTROL, HF_NAME, 1
            CMD = 'SETPTR ,,,,,3,BRIEF,BANNER ':HF_NAME:',NOMESSAGE,NHEAD'
            EXECUTE CMD CAPTURING JUNK
            GOSUB ADD_INC_HEADINGS
            GOSUB SAVE_PMC_REPORT_VALUES
            GOTO 999999
         END
      END ELSE
         ERRMSG = "Invalid PROC values"
         GOSUB 91000
         PROC.VALUES = "END"
         GOTO 999999
      END
   END
*
* T26685 v
   READ COMPANY.SECURITY FROM CONTROL, CONO:"DIV.SECURITY" ELSE 
      COMPANY.SECURITY = "N"
      COMPANY.SECURITY<2> = "N"
   END
   MATREAD SEC.REC FROM SECURITY,CONO:USER_ID ELSE
      MAT SEC.REC = ""
   END
   REPORT.NAME = SC.HEAD
*  IF REV12_FLAG = 1 THEN
*    GOSUB CHECK.FOR.DISPLAY
*  END
* T26090 ^
*
*
*---- SET SCREEN TOP HEADING
*
   IF SC.HEAD = "" THEN
      SC.HEAD = "HEADING WAS NOT DEFINED"
   END
   H.LEN = LEN(SC.HEAD)
   IF H.LEN * 2 > 56 THEN
      SCRN.HEAD = SC.HEAD
   END ELSE
      SCRN.HEAD = SC.HEAD[1,1]
      FOR S = 2 TO H.LEN
         SCRN.HEAD = SCRN.HEAD:" ":SC.HEAD[S,1]
      NEXT S
   END
   POS = 56 - LEN(SCRN.HEAD)
   POS1 = INT(POS/2)
   SC.HEAD = SPACE(POS1):SCRN.HEAD
*
*  Determine if overnight report processor is running and, if so,
*  Set up report parameters from pre-stored details on CONTROL file
*
   READU OVERNIGHT.RPT FROM CONTROL,"OVERNIGHT.":PORT THEN
      DELETE CONTROL,"OVERNIGHT.":PORT
      IF OVERNIGHT.RPT > 0 THEN
         MATREAD OR.REC FROM CONTROL,"OVERNIGHT.REQUESTS" THEN
            IF CONO = "" THEN
               CONO = OR.COMPANY.NO<1,OVERNIGHT.RPT>
               PROC.VALUES<1> = CONO
               READV CO.DESC FROM COMPANY,CONO,1 ELSE CO.DESC="UNKNOWN COMPANY"
               PROC.VALUES<2> = CO.DESC
            END
            PCT = DCOUNT(OR.FIELDS<1,OVERNIGHT.RPT>,SM)
*T27784 v
            BEGIN CASE
               CASE PRPT.RPT.SCRN.FLAG="R" AND DCOUNT(IH_HEADINGS,AM) > 0
                  PROC.VALUES<2>=REPORT_ID:",":CHANGE(IH_HEADINGS,AM,",")
               CASE PRPT.RPT.SCRN.FLAG="R"
                  PROC.VALUES<2>=REPORT_ID
               CASE PRPT.RPT.SCRN.FLAG="H"
                  GOSUB BUILD_REPORT_HEAD
            END CASE
*T27784 ^
            FOR I = 1 TO PCT
               PROC.VALUES<I+2> = OR.PARAMETERS<1,OVERNIGHT.RPT,I>
            NEXT I
            OVERNIGHT.RUNNING = 1
            GOTO 999999
         END
      END
   END ELSE
      RELEASE CONTROL,"OVERNIGHT.":PORT
      OVERNIGHT.RUNNING = 0
   END
* T26090 v
   READV PRTV.FLAG FROM CONTROL, HF_NAME,1 ELSE PRTV.FLAG = 0
   READ EMAIL_FORMAT FROM CONTROL, CONO : "EMAIL_FORMAT" ELSE
      EMAIL_FORMAT = ""
   END
   IF EMAIL_FORMAT<1> # "PDF" AND EMAIL_FORMAT<1> # "RTF" AND EMAIL_FORMAT<1> # "BOTH" THEN
      EMAIL_FORMAT<1> = ""
   END
* T26090 ^
*
*---- Build Gui Form
   VALID = ""
   BEGIN.PAGE = 4
   LINES = 0; LN = 1
   LINES = DCOUNT(INP.SEQ,",")
   IF LINES * 2 > 16 THEN
      PAGE.SIZE = 18; LINE.SPACE = 1
   END ELSE
      PAGE.SIZE = 8; LINE.SPACE = 2
   END
   IF INP.SEQ # "" THEN
      IF LINES > 18 THEN LINES = 18
      OLD.START.LINE = 0
   END
   LINES = DCOUNT(S.SA.OP,VM)
*
*---- MAIN PROCESSING
*
   MAT SCV.REC = ""
   MAT EDIT.COM.DRIVER = ""
   BEGIN.PAGE = 4
   LINES = 0; LN = 1
   ECD.SCRN.CNT = 3
   BEGIN CASE
* T26090 v
      CASE REPORT_ID[1,2] = "PR" OR REPORT_ID[1,2] = "EP"
         ECD.SCRN.NAME = "PRS.REPORT.SCRN"
         ECD.SCRN.FLAG<1> = 2
* T26090 ^
      CASE PC.PORT.TYPE = 'termulator'
         ECD.SCRN.NAME = "REPORT.SCRN.":DCOUNT(INP.SEQ,",")
      CASE 1
         ECD.SCRN.NAME = "REPORT.SCRN"
   END CASE
   ECD.SCRN.NAME<2> = "REPORT.SCRN.NOTICE" ; * T26090
   ECD.SCRN.NAME<3> = "REPORT.SCRN.MULTI" ; * T26090
   ECD.ACTION=1; CALL SCRN.EDIT
   MAT SCV.REC = ""
* T26090 v
*   CHECK FOR PRE NOTICE
   MATREAD USER.REC FROM SECURITY,"R.":PORT ELSE MAT USER.REC = ""
   IF USER.VERB # "" THEN
      MATREAD PPSX.REC FROM PMC_PROCESS_XREF, USER.VERB ELSE
         MAT PPSX.REC = ""
         PPSX.PROCESS.ID = USER.VERB
      END
      MATREAD PPS.REC FROM PMC_PROCESS, PPSX.PROCESS.ID ELSE MAT PPS.REC = ""
*     IF PPS.PREPROCESS.NOTICE # "" THEN
      IF PPS.PREPROCESS.NOTICE # "" AND REPORT_ID = PPS.REPORTS<1,1> THEN
         RET_VALUE = ""
         ECD.SCRN.NO = 2
         CALL REPORT.SCRN.NOTICE (RET_VALUE, USER.V.DSP, PPS.PREPROCESS.NOTICE)
         IF RET_VALUE # "Y" THEN
            PROC.VALUES = "END"
            GOTO 999999
         END
      END
   END
* T26090 ^
   ECD.SCRN.NO = 1
   ECD.ACTION = 2 ; CALL SCRN.EDIT
* T26090 v
   ECD.NUM = 53
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = REPORT_ID
   IF REV12_FLAG = 0 THEN
      ERRMSG = "PROC is not converted to REV12"
      GOSUB 91000
      ERRMSG = ""
   END
* T26090 ^
*
*---- LOAD AND PRINT SCREEN
*
   ECD.NUM = 1; SCV.REC(ECD.NUM) = SC.HEAD
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 2; SCV.REC(ECD.NUM) = DATE()
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.ACTION = 3; CALL SCRN.EDIT
   SEQ.NUM = ""
   VALID = ""
   LINES = DCOUNT(INP.SEQ,",")
   IF LINES * 2 > 16 THEN
      PAGE.SIZE = 18; LINE.SPACE = 1
   END ELSE
      PAGE.SIZE = 8; LINE.SPACE = 2
   END
   IF INP.SEQ # "" THEN
      IF LINES > 18 THEN LINES = 18
      OLD.START.LINE = 0; GOSUB 2900
   END
   LINES = DCOUNT(S.SA.OP,VM)
*
*--- DISPLAY MAIN TOOLBAR BECAUSE THE PROGRAM IS USING EDIT.SUB FOR INPUT
*
   IF LINES > 0 THEN
      IF PC.PORT.TYPE = 'termulator' AND ECD.SCRN.PC<ECD.SCRN.NO> # "" THEN
         FRMHNDL = ECD.SCRN.PC<ECD.SCRN.NO>
         BARFILE = "PMCBARS"
         BARNAME = "MAIN"
         TU_FUNC = "TU.TOOLBAR.LOAD":TU_VERNO
         CALL @TU_FUNC(BARFILE,BARNAME,FRMHNDL,"",BARHNDL,ERROR)
         IF ERROR = 0 THEN
            SIV_BAR_ACTIVE<ECD.SCRN.NO> = BARNAME
            SIV_BAR_ACTIVE<ECD.SCRN.NO,2> = BARFILE
            SIV_BAR_HNDL<ECD.SCRN.NO> = BARHNDL
         END ELSE
            SIV_BAR_ACTIVE<ECD.SCRN.NO> = ""
            SIV_BAR_HNDL<ECD.SCRN.NO> = ""
         END
      END
   END
*
*---- ENTER ALL ANSWER
*
100 *
   FOR LN = 1 TO LINES UNTIL VALUE = "END"
      IF S.SA.OP.P<1,LN> = "" THEN
         GOSUB 1000
      END
   NEXT LN
   IF VALUE = "END" THEN
      PROC.VALUES = "END"
      GOTO 99999
   END
*
*---- ENTER OPTION
*
900 *
* T26685
*PROC.VALUES<LINES+3> = COMPANY.SECURITY<2>
*T23901 v
   MATREAD USER.REC FROM SECURITY,"R.":PORT ELSE                  
      MAT USER.REC = ""                                           
      USER.VERB = "X"                                             
   END                                                            
   SAVE.USER.VERB = USER.VERB                                     
*T23901^
* T26090 v
   IF OVERNIGHT.OK = 1 THEN
      READ OPREC FROM OVERNIGHT.PROCS,USER.VERB THEN OP.FLAG = 1 ELSE OP.FLAG = 0
   END ELSE
      OP.FLAG = 0
   END
   IF VALID = "" THEN
      P.MSG = "Enter"
      P.VALDAT = ""
      IF OP.FLAG THEN
         P.MSG := " (OP)"
         P.VALDAT := "OP"
      END
      IF PRPT.VIEW.FLAG = "Y" THEN
         IF P.MSG # "Enter" THEN P.MSG := ","
         P.MSG := " (V)iew"
         IF P.VALDAT # "" THEN P.VALDAT := ","
         P.VALDAT := "V"
      END
      IF PRPT.EMAIL.FLAG = "Y" AND EMAIL_FORMAT<1> # "" THEN
         IF P.MSG # "Enter" THEN P.MSG := ","
         P.MSG := " e(M)ail"
         IF P.VALDAT # "" THEN P.VALDAT := ","
         P.VALDAT := "M"
      END
      IF P.MSG # "Enter" THEN P.MSG := ","
*T26090 v
*     P.MSG := " (E)xit or <RETURN> to continue"
      P.MSG := " (E)xit or <Enter> to continue"
*T26090 ^
      IF P.VALDAT # "" THEN P.VALDAT := ","
      P.VALDAT := "E"
   END ELSE
      P.MSG = "Enter Line #"
      P.VALDAT = VALID
      IF OP.FLAG THEN
         P.MSG := ", (OP)"
         P.VALDAT := ",OP"
      END
      IF PRPT.VIEW.FLAG = "Y" THEN
         P.MSG := ", (V)iew"
         P.VALDAT := ",V"
      END
      IF PRPT.EMAIL.FLAG = "Y" AND EMAIL_FORMAT<1> # "" THEN
         P.MSG := ", e(M)ail"
         P.VALDAT := ",M"
      END
      P.MSG := ", (F)ile or (E)xit"
      P.VALDAT := ",F,E"
   END
   MORE = 1
   LOOP
* T26090 v
      BEGIN CASE
         CASE VALID = ""
            ECD.NUM = 51
            ECD.O.R. = "O"
         CASE 1
            ECD.NUM = 50
            ECD.O.R = "R"
      END CASE
      ECD.PMSG = P.MSG
      ECD.VALDAT = P.VALDAT
      ECD.TOOLBAR.EFF = 1
* T26090 ^
      IF LINES = 18 THEN ECD.Y = 22
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = ""
            MORE = 0
* T26090 v
            DELETE CONTROL,HF_NAME
            GOSUB ADD_INC_HEADINGS
            GOSUB SAVE_PMC_REPORT_VALUES
* T26090 ^
         CASE OPTION = "END" OR OPTION = "E"
            MORE = 0
            PROC.VALUES = "END"
* T26090 v
            DELETE CONTROL,HF_NAME
* T26090 ^
         CASE NUM(OPTION)
            LN = OPTION
            IF S.SA.OP.P<1,LN> # "" THEN
*T26090 v
*              ERRMSG = "You can change this entry if (ALL) was entered in the associated option"
               ERRMSG = "Field not valid for the selection criteria chosen."
*T26090 ^
               GOSUB 91000
            END ELSE
               GOSUB 1000
            END
* T26090 v
         CASE OPTION = 'V'
            WRITEV OPTION ON CONTROL, HF_NAME, 1
            CMD = 'SETPTR ,,,,,3,BRIEF,BANNER ':HF_NAME:',NOMESSAGE,NHEAD'
            EXECUTE CMD CAPTURING JUNK
            MORE = 0
            FOR X = 1 TO LINES
               IF PROC.VALUES<X+2> = "" THEN PROC.VALUES<X+2> = "ALL"
            NEXT X
            IF EOD_SECURITY = "" THEN
               PROC.VALUES<LINES+3> = OPTION
            END ELSE
               PROC.VALUES<LINES+3> = COMPANY.SECURITY<2>
               PROC.VALUES<LINES+4> = OPTION
            END
            GOSUB ADD_INC_HEADINGS
            GOSUB SAVE_PMC_REPORT_VALUES
         CASE OPTION = 'M'
            WRITEV OPTION ON CONTROL, HF_NAME, 1
            CMD = 'SETPTR ,,,,,3,BRIEF,BANNER ':HF_NAME:',NOMESSAGE,NHEAD'
            EXECUTE CMD CAPTURING JUNK
            MORE = 0
            FOR X = 1 TO LINES
               IF PROC.VALUES<X+2> = "" THEN PROC.VALUES<X+2> = "ALL"
            NEXT X
            IF EOD_SECURITY = "" THEN
               PROC.VALUES<LINES+3> = OPTION
            END ELSE
               PROC.VALUES<LINES+3> = COMPANY.SECURITY<2>
               PROC.VALUES<LINES+4> = OPTION
            END
            GOSUB ADD_INC_HEADINGS
            GOSUB SAVE_PMC_REPORT_VALUES
* T26090 ^
         CASE OPTION = "F"
            FOR X = 1 TO LINES
               IF PROC.VALUES<X+2> = "" THEN PROC.VALUES<X+2> = "ALL"
            NEXT X
            MORE = 0
* T26090 v
            DELETE CONTROL,HF_NAME
            IF EOD_SECURITY = "" THEN
               PROC.VALUES<LINES+3> = OPTION
            END ELSE
               PROC.VALUES<LINES+3> = COMPANY.SECURITY<2>
               PROC.VALUES<LINES+4> = OPTION
            END
            GOSUB ADD_INC_HEADINGS
            GOSUB SAVE_PMC_REPORT_VALUES
* T26090 ^
         CASE OPTION = "OP"
            IF NOT(OVERNIGHT.OK) THEN
               ERRMSG = "Overnight processor not installed! "
               GOSUB 91000
               GOTO 991
            END
* T26090 v
            DELETE CONTROL,HF_NAME
* T26090 ^
            MATREAD USER.REC FROM SECURITY,"R.":PORT ELSE
               MAT USER.REC = ""
               USER.VERB = "X"
            END
            SAVE.USER.VERB = USER.VERB
            IF PC.PORT.TYPE = 'termulator' THEN
               MATREAD PPS.REC FROM PMC_PROCESS, USER.VERB THEN
                  USER.VERB = PPS.VOC
               END
            END
            READ OPREC FROM OVERNIGHT.PROCS, USER.VERB ELSE
               ERRMSG = "Not validated for Overnight processing! "
               GOSUB 91000
               GOTO 990
            END
            ECD.NUM=3; ECD.ACTION=4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "END" THEN GOTO 990
            IF ECD.RET.VALUE # "" AND (ECD.RET.VALUE < DATE()+1 OR ECD.RET.VALUE > DATE()+90) THEN
               ERRMSG = "Date out of range. Try again! "
               GOSUB 91000
               GOTO 990
            END
            SCHEDULE.DATE = ECD.RET.VALUE
            MATREADU OR.REC FROM CONTROL,"OVERNIGHT.REQUESTS" ELSE MAT OR.REC=""
            OCNT = DCOUNT(OR.COMPANY.NO,VM)+1
            OR.REPORT.NAME<1,OCNT> = REPORT.NAME
            OR.MD.PROC<1,OCNT> = USER.VERB
            OR.COMPANY.NO<1,OCNT> = USER.CONO
            OR.USER.ID<1,OCNT> = USER.ID
            OR.ACCOUNT.NAME<1,OCNT> = ACCT
            FIELD.CT = DCOUNT(INP.SEQ,",")
            FIELDS = ""
            PARAMETERS = ""
            FOR I = 1 TO FIELD.CT
               INP.FIELD = FIELD(INP.SEQ,",",I)
*
*  No terminal reports can be requested as overnight reports
*
               IF INP.FIELD = "37" AND PROC.VALUES<I+2> = "T" THEN
                  RELEASE CONTROL,"OVERNIGHT.REQUESTS"
                  ERRMSG = "Cannot use Overnight processor for a terminal report! "
                  GOSUB 91000
                  GOTO 990
               END
               FIELDS<1,1,I> = INP.FIELD
               IF PROC.VALUES<I+2> = "" THEN PROC.VALUES<I+2> = "ALL"
               PARAMETERS<1,1,I> = PROC.VALUES<I+2>
            NEXT I
            OR.PARAMETERS<1,OCNT> = PARAMETERS
            OR.FIELDS<1,OCNT> = FIELDS
            OR.SCHED.DATE<1,OCNT> = SCHEDULE.DATE
            IF SCHEDULE.DATE = "" THEN
               OR.STATUS<1,OCNT> = "S"
            END ELSE
               OR.STATUS<1,OCNT> = "H"
            END
            MATWRITE OR.REC ON CONTROL,"OVERNIGHT.REQUESTS"
*T26090 v
*           ERRMSG = "Overnight processor will run the process... Press <RETURN> to continue "
            ERRMSG = "Overnight processor will run the process... Press <Enter> to continue "
*T26090 ^
            GOSUB 91000
            PROC.VALUES = "END"
            MORE = 0
990 *
            USER.VERB = SAVE.USER.VERB
991 *
      END CASE
   WHILE MORE = 1 DO REPEAT
   GOTO 99999
*
*---- ENTER ANSWER
*
1000 *
   SLN = BEGIN.PAGE + LINE.SPACE * REM(LN-1,PAGE.SIZE)
   MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, S.SA.OP<1,LN> ELSE
      ERRMSG = "Please set up option before using it"
      GOSUB 91000
      GOTO 1999
   END
* T26090 v
   IF RPR.TYPE > 10 THEN
      IF PROC.VALUES<2+LN> # "" THEN GOTO 1999
      IF RPR.TYPE = 16 AND RPR.FILE = "DATE()" THEN
         VALUE = DATE()
      END ELSE
         OPEN "",RPR.FILE TO V.FILE ELSE
            ERRMSG = RPR.FILE:" FILE IS MISSING"
            GOSUB 91000
            VALUE = "END"
            GOTO 1999
         END
         READ SFV.REC FROM V.FILE, CONO:RPR.I.ID ELSE
            ERRMSG = RPR.I.ID:" item ID missing from ":RPR.FILE
            GOSUB 91000
            VALUE = "END"
            GOTO 1999
         END
         IF NUM(RPR.I.ATT) AND RPR.I.ATT > 0 THEN
            IF NOT(NUM(RPR.I.MV)) OR RPR.I.MV < 1 THEN RPR.I.MV = 1
            VALUE = SFV.REC<RPR.I.ATT,RPR.I.MV>
         END ELSE
            ERRMSG = "Invalid Attribute - " : RPR.I.ATT
            GOSUB 91000
            VALUE = "END"
            GOTO 1999
         END
      END
      PROC.VALUES<LN+2> = VALUE
      P_X = 50
      P_Y = SLN
      BEGIN CASE
         CASE RPR.TYPE = 13
            P_VALUE = OCONV(VALUE, "MD0") "L#30"
         CASE RPR.TYPE = 14
            P_VALUE = OCONV(VALUE, "MD":RPR.SCLR) "L#30"
         CASE RPR.TYPE = 16
            P_VALUE = OCONV(VALUE, "D2/") "L#30"
         CASE 1
            P_VALUE = VALUE
      END CASE
      P_OPT = ""
      CALL VSI_PLINE (P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1999
   END
   IF S.SA.OP.M<1,LN> = "Y" THEN
      RET_VALUE = ""
      IF MULTI.VALUES<2+LN> # '' THEN
         RET_VALUE = CHANGE(MULTI.VALUES<2+LN>,'""',CHAR(253))
      END
      ECD.SCRN.NO = 3
      CALL REPORT.SCRN.MULTI (CONO,MAT RPT.PROC.REC,RET_VALUE)
      PROC.VALUES<2+LN> = "MULTI"
      VALUE = "MULTI"
      MULTI.VALUES<2+LN> = CHANGE(RET_VALUE,CHAR(253),'""')
      ECD.SCRN.NO = 1
      ECD.ACTION = 2 ; CALL SCRN.EDIT
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      OLD.START.LINE = 0
      GOSUB 2900
      GOTO 1999
   END
*T26090 ^
*
* T26685; WALID
*
   IF S.SA.OP.GDS<1,LN> = "L" THEN EOD_SECURITY = "Y"
   IF S.SA.OP.GDS<1,LN> = "N" THEN
      IF COMPANY.SECURITY<1> = "N" THEN
         FND = LN
         GOSUB 2200
         S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
         GOTO 1999
      END
   END
*
* T26685
*
   IF S.SA.OP.GDS<1,LN> = "P" THEN
      IF COMPANY.SECURITY<2> = "N" THEN
         FND = LN
         GOSUB 2200
         S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
         GOTO 1999
      END
   END
   X = 50
   Y = SLN; TYP = RPR.TYPE; MAXL = RPR.MAXL; HMSG = RPR.HMSG
   CNV = "MR0"
   IF RPR.SCLR # "" THEN
      SCALER = RPR.SCLR
      CNV = "MD":RPR.SCLR
   END
   IF RPR.VALID # "" THEN
      V.CNT = DCOUNT(RPR.VALID,",")
      VALDAT = FIELD(RPR.VALID,",",1)
      FOR SV = 2 TO V.CNT
         VALDAT = VALDAT :VM:FIELD(RPR.VALID,",",SV)
      NEXT SV
   END
   IF PROC.VALUES<LN+2> # "" THEN
      DEFAULT = OCONV(PROC.VALUES<LN+2>, CNV)
      O.R = "O"
   END ELSE
      IF RPR.DEFAULT = "" THEN
         DEFAULT = ""; O.R = "R"
      END ELSE
         DEFAULT = RPR.DEFAULT; O.R = "O"
      END
   END
   IF RPR.O.R = "O" THEN O.R = "O"
*
   CALL EDIT.SUB
   ERROR = ''
   IF VALUE # "END" THEN
* T26090 v
      LOCATE S.SA.OP<1,LN> IN IH_PROMPTS,1 SETTING II THEN
         V.CNT = DCOUNT(RPR.VALID,",")
         FOR SV = 1 TO V.CNT
            IF VALUE = FIELD(RPR.VALID,",",SV) THEN
               IH_HEADINGS<II> = FIELD(RPR.VAL.HEAD,",",SV)
               EXIT
            END
         NEXT SV
      END
* T26090 ^
      BEGIN CASE
         CASE RPR.FILE # "" AND VALUE # "ALL"
            FILE.NUM = DCOUNT(RPR.FILE,',')
            ERRMSG = ""
            FOR FNUM = 1 TO FILE.NUM
               FILE.TMP = FIELD(RPR.FILE,',',FNUM)
*            OPEN "",RPR.FILE TO V.FILE ELSE
               OPEN "",FILE.TMP TO V.FILE ELSE
*               ERRMSG = RPR.FILE:" FILE IS MISSING"
                  ERRMSG = FILE.TMP:" FILE IS MISSING"
*               GOSUB 91000
                  FNUM = FILE.NUM + 1
                  VALUE = "END"
*               GOTO 1999
                  GOTO 1001
               END
*T27410 v
               IF RPR.I.ID # '' AND NUM(RPR.I.ATT) AND RPR.I.MV = "LOC" THEN
                  READ SFV.REC FROM V.FILE, CONO:RPR.I.ID ELSE
*                  ERRMSG = RPR.I.ID:" item ID missing from ":RPR.FILE
                     ERRMSG = RPR.I.ID:" item ID missing from ":FILE.TMP
*                  GOSUB 91000
                     FNUM = FILE.NUM + 1
                     VALUE = "END"
*                  GOTO 1999
                     GOTO 1001
                  END
                  LOCATE VALUE IN SFV.REC<RPR.I.ATT>,1 SETTING JUNK ELSE
                     ERRMSG = VALUE:" item ID missing"
*                  GOSUB 91000
                     FNUM = FILE.NUM + 1
*                  GOTO 1000
                     GOTO 1001
                  END
               END ELSE
*T27410 ^
*               READ SFV.REC FROM V.FILE, CONO:VALUE ELSE
                  READ SFV.REC FROM V.FILE, CONO:VALUE THEN
                     ERRMSG = ""
                     FNUM = FILE.NUM + 1
                  END ELSE
               *** DIVISION 00 ROUTINE ***
*                  IF RPR.FILE = "DIVISION" AND VALUE = "00" THEN
                     IF FILE.TMP = "DIVISION" AND VALUE = "00" THEN
                        SFV.REC = "GENERAL DIVISION"
                     END ELSE
*                     ERRMSG = VALUE:" item ID missing from ":RPR.FILE
                        IF ERRMSG # "" THEN
                           ERRMSG = ERRMSG:" and ":FILE.TMP
                        END ELSE
                           ERRMSG = VALUE:" item ID missing from ":FILE.TMP
                        END
*                     GOSUB 91000
*                     GOTO 1000
                        GOTO 1001
                     END
               *** END OF DIVISION 00 ROUTINE ***
                  END
               END ; * T27410
               IF RPR.F.A.NO # "" THEN
                  A.CNT = DCOUNT(RPR.F.A.NO,VM)
                  FOR APR = 1 TO A.CNT
                     LOCATE RPR.C.OP<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
                     IF FND THEN
                        RPR.F.A.NA<1,APR> = SFV.REC<RPR.F.A.NO<1,APR>>
                        GOSUB 2000
                        S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
*T26090 v
                        S.SA.OP.M<1,FND> = PRPT.PROMPTS.MULTI<1,LN>
*T26090 ^
                     END
                  NEXT APR
               END
1001 *
            NEXT FNUM
            IF ERRMSG # "" THEN
               GOSUB 91000
               IF VALUE = "END" THEN
                  GOTO 1999
               END ELSE
                  GOTO 1000
               END
            END
         CASE RPR.FILE # "" AND VALUE = "ALL" AND RPR.F.A.NO # ""
            A.CNT = DCOUNT(RPR.F.A.NO,VM)
            FOR APR = 1 TO A.CNT
               LOCATE RPR.C.OP<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
               IF FND AND S.SA.OP<1,LN> = S.SA.OP.P<1,FND> THEN
                  S.SA.OP.P<1,FND> = ""
               END
            NEXT APR
         CASE RPR.R.FLG = "Y" AND RPR.R.OPT # ""
            A.CNT = DCOUNT(RPR.R.OPT,VM)
            FOR APR = 1 TO A.CNT
               LOCATE RPR.R.OPT<1,APR> IN S.SA.OP<1>,1 SETTING FND ELSE FND = 0
               BEGIN CASE
                  CASE FND AND VALUE # RPR.R.VAL<1,APR>
                     GOSUB 2200
                     S.SA.OP.P<1,FND> = S.SA.OP<1,LN>
                  CASE FND AND VALUE = RPR.R.VAL<1,APR> AND S.SA.OP<1,LN> = S.SA.OP.P<1,FND> 
                     S.SA.OP.P<1,FND> = ""
               END CASE
            NEXT APR
         CASE 1
            S.SA.OP.P<1,LN> = ""
      END CASE
* T26685 v
* IF S.SA.OP.DS<1,LN> = "G" THEN  ; * CHECK FOR VALID DIVISION
*   IF SEC.DIVISION = "" THEN
*     PROC.VALUES<LN+2> = DVALUE 
*   END ELSE
*     LOCATE DVALUE IN SEC.DIVISION<1>,1 SETTING FOUND THEN
*       PROC.VALUES<LN+2> = DVALUE
*     END ELSE
*       ERRMSG = "User ":USER_ID:" Not Authorized for that Division ":DVALUE
*       GOSUB 91000
*       GOTO 1000
*     END
*   END
*   IF S.SA.OP.DS<1,LN> = "B" THEN ; * CHECK FOR 00 OR ALL INVALID
*     IF SEC.DIVISION = "" THEN
*       PROC.VALUES<LN+2> = DVALUE 
*     END ELSE
*       LOCATE DVALUE IN SEC.DIVISION<1>,1 SETTING FOUND THEN
*         PROC.VALUES<LN+2> = DVALUE
*       END ELSE
*         ERRMSG = "User ":USER_ID:" Not Authorized for that Division ":DVALUE
*         GOSUB 91000
*         GOTO 100
*       END
*     END
*     IF COMPANY.SECURITY<2> = "Y" THEN ;* POST/CLOSE BY DIV
*       IF PROC.VALUES<LN+2> = "00" OR PROC.VALUES<LN+2> = "ALL" THEN
*         ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
*         GOSUB 91000
*         GOTO 1000
*       END
*     END
*   END
* END
      BEGIN CASE
         CASE COMPANY.SECURITY<1> = "N"
         CASE S.SA.OP.DS<1,LN> = "G"  ; * CHECK FOR VALID DIVISION
            IF SEC.DIVISION # "" THEN   ;* ALL is null
               LOCATE DVALUE IN SEC.DIVISION<1>,1 SETTING FOUND ELSE
                  ERRMSG = "User ":USER_ID:" Not Authorized for that Division ":DVALUE
                  GOSUB 91000
                  GOTO 1000
               END
            END
         CASE S.SA.OP.DS<1,LN> = "B"  ; * CHECK FOR 00 OR ALL INVALID
            IF SEC.DIVISION # "" THEN   ;* ALL is null
               LOCATE DVALUE IN SEC.DIVISION<1>,1 SETTING FOUND ELSE
                  ERRMSG = "User ":USER_ID:" Not Authorized for that Division ":DVALUE
                  GOSUB 91000
                  GOTO 1000
               END
            END
            IF COMPANY.SECURITY<2> = "Y" THEN ;* POST/CLOSE BY DIV
               IF DVALUE = "00" OR DVALUE = "ALL" THEN
                  ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
                  GOSUB 91000
                  GOTO 1000
               END
            END
      END CASE
* T26685 ^
      PROC.VALUES<LN+2> = DVALUE
   END
1999 RETURN
*
*---- PRINT ASSOCIATED VALUE
*
2000 *
   SLN1 = BEGIN.PAGE + LINE.SPACE * REM(FND-1,PAGE.SIZE)
* T27734   IF RPR.F.A.CNV<1,APR> = "" THEN RPR.F.A.CNV<1,APR> = "MD0"
   IF RPR.F.A.CNV<1,APR> #  "" THEN
      P_X = 50 ; P_Y = SLN1 ; P_VALUE = OCONV(RPR.F.A.NA<1,APR>, RPR.F.A.CNV<1,APR>) "L#30" ; P_OPT = ""
      PROC.VALUES<FND+2> = OCONV(RPR.F.A.NA<1,APR>, RPR.F.A.CNV<1,APR>)
   END ELSE
      P_X = 50 ; P_Y = SLN1 ; P_VALUE = RPR.F.A.NA<1,APR> "L#30" ; P_OPT = ""
      PROC.VALUES<FND+2> = RPR.F.A.NA<1,APR>
   END
   CALL VSI_PLINE (P_X,P_Y,P_VALUE,P_OPT)
*T27734   PROC.VALUES<FND+2> = OCONV(RPR.F.A.NA<1,APR>, RPR.F.A.CNV<1,APR>)
   RETURN
*
*---- PRINT (ALL) FOR NON ASSOCIATED OPTION
*
2200 *
   SLN1 = BEGIN.PAGE + LINE.SPACE * REM(FND-1,PAGE.SIZE)
*T26090 v
*  P_X = 50 ; P_Y = SLN1 ; P_VALUE = "ALL" "L#30" ; P_OPT = ""
   P_X = 50 ; P_Y = SLN1 ; P_VALUE = "N/A" "L#30" ; P_OPT = ""
*T26090 ^
   CALL VSI_PLINE (P_X,P_Y,P_VALUE,P_OPT)
   PROC.VALUES<FND+2> = "ALL"
   NA.VALUES<FND+2> = 'N/A' ; * T26090
   RETURN
*
*---- SCROLL SUB
*
2900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 2990
   OLD.START.LINE = START.LINE
   CNT = 1
   N1 = 0
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * REM(N-1,PAGE.SIZE)
      SEQ.NUM = FIELD(INP.SEQ,",",N)
      MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, SEQ.NUM ELSE
         MAT RPT.PROC.REC = ""; GOTO 2911
      END
      RPR.DESC = TRIM(RPR.DESC)
      SP = 41 - LEN(RPR.DESC)
      N1 = N1 + 1
      VALID = VALID:",":N1
      S.SA.OP<1,N1> = SEQ.NUM
      S.SA.OP.M<1,N1> = PRPT.PROMPTS.MULTI<1,N> ; * T26090
      S.SA.OP.DS<1,N1> = PRPT.PROMPTS.DS<1,N> ; * T26685
      S.SA.OP.GDS<1,N1> = PRPT.PROMPTS.GDS<1,N> ; * T26685
*
*     IF TRIM(S.SA.OP.DS<1,N1>) = "B" THEN
*        IF COMPANY.SECURITY<1> = "N" THEN
*           IF S.SA.OP.GDS<1,N1> = "P" THEN   ;* POSTING DO NOT PROMPT
*              S.SA.OP.P<1,N1> = "ALL"
*              GOTO 2911
*           END
*        END
*     END
* T26685 ^
      IF PC.PORT.TYPE = 'termulator' THEN
         DESC = RPR.DESC
         P_X = 1 ; P_Y = SLN ; P_VALUE = N1 "R#2" ; P_OPT = 'CL'
         P_X := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:DESC "L#43"
*T26090 v
         IF NA.VALUES<N+2> # '' THEN
            P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:NA.VALUES<N+2>
         END ELSE
            P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:PROC.VALUES<N+2>
         END
*T26090 ^
      END ELSE
         DESC = N1"R#2":" - ":RPR.DESC:SPACE(SP):":"
         P_X = 0 ; P_Y = SLN ; P_VALUE = DESC "L#48" ; P_OPT = 'CL'
*T26090 v
         IF NA.VALUES<N+2> # '' THEN
            P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := NA.VALUES<N+2>
         END ELSE
            P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := PROC.VALUES<N+2>
         END
*T26090 ^
      END
      CALL VSI_PLINE (P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
2911 NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * REM(M-1,PAGE.SIZE)
      P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = 'CL'
      CALL VSI_PLINE (P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
2990 RETURN
* T26090 v
*
*---- GET_SC_HEAD
*
GET_SC_HEAD: 
*
   SC.HEAD = PRPT.HEADING
   IF INDEX(SC.HEAD,"^",1) < 1 THEN RETURN
   SC.HEAD = CHANGE(SC.HEAD,"^",AM)
   IH_PROMPTS = SC.HEAD
   IH_COUNT = DCOUNT(SC.HEAD,AM)
   FOR II = IH_COUNT TO 1 STEP - 1
      IF REM(II,2) = 0 THEN
         IF NUM(IH_PROMPTS<II>) = 1 THEN
            SC.HEAD = DELETE(SC.HEAD,II,0,0)
         END
      END ELSE
         IH_PROMPTS = DELETE(IH_PROMPTS,II,0,0)
      END
   NEXT II
   SC.HEAD = CHANGE(SC.HEAD,AM,"")
   RETURN
*
*---- CHECK IF SCREEN.DISPLAY SHOULD BE CALLED
*
CHECK.FOR.DISPLAY: 
*
   MATREAD SEC.REC FROM SECURITY,CONO:USER_ID ELSE RETURN
   MATREAD USER.REC FROM SECURITY, "R.":PORT ELSE MAT USER.REC = ""
   READV POPT FROM CONTROL,HF_NAME,1 ELSE POPT = 'P'
   READ HOLD.REC FROM HOLD.FILE, HF_NAME ELSE HOLD.REC = ''
   IF (POPT = 'V' OR POPT = 'M') AND HOLD.REC # '' THEN
      DR = ''
      DR<1> = HF_NAME
      DR<2> = SEC.DFLT.QUEUE
      DR<3> = POPT
      WRITE DR ON CONTROL,HF_NAME
      CMD = 'SCREEN.DISPLAY'
      IF PC.PORT.TYPE = "termulator" THEN
         P_TITLE = CMD
         PROGID = USER.VERB
         PPS.CEO = ""
         CALL EXE_CEOSCRN(CMD,GUIFORM,P_TITLE,PPS.CEO,PROGID,ERROR)
      END ELSE
         UDTEXECUTE CMD
      END
      DELETE CONTROL,HF_NAME
   END
   IF POPT = 'P' THEN DELETE CONTROL,HF_NAME
   RETURN
*
*---- SAVE PMC_REPORT_VALUES
*
SAVE_PMC_REPORT_VALUES: 
*
   IF SUB_REPORT = "" THEN RETURN
   MATREADU USER.REC FROM SECURITY, "R.":PORT ELSE MAT USER.REC = ""
   FOR SS = 1 TO SCOUNT
      SR_NAME = CHANGE(PORT,"*","_") :"_": SUB_REPORT<SS>
      READU DUMMY FROM PMC_REPORT_VALUES, SR_NAME ELSE DUMMY = ""
      DUMMY = PROC.VALUES
      DUMMY<2> = CO.NAME
      WRITE DUMMY ON PMC_REPORT_VALUES, SR_NAME
      DUMMY = ""
      USER.RPT.SUBID<1,-1> = SR_NAME
      MATWRITEU USER.REC ON SECURITY, "R.":PORT
   NEXT SS
   RELEASE SECURITY, "R.":PORT
   RETURN
*
*---- GET PMC_REPORT_VALUES
*
GET_PMC_REPORT_VALUES: 
*
   IF REPORT_ID = "" THEN RETURN
   SR_NAME = CHANGE(PORT,"*","_") :"_": REPORT_ID
   READU PROC.VALUES FROM PMC_REPORT_VALUES, SR_NAME ELSE PROC.VALUES = ""
   IF DCOUNT(PROC.VALUES,AM) < 2 THEN
      FOUND_VALUES = 0
   END ELSE
      FOUND_VALUES = 1
      GOSUB GET_SC_HEAD
      IF DCOUNT(IH_PROMPTS,AM) > 0 THEN
         IH_COUNT = DCOUNT(PRPT.PROMPTS<1>,VM)
         FOR II = 1 TO IH_COUNT
            LOCATE PRPT.PROMPTS<1,II> IN IH_PROMPTS,1 SETTING IFND ELSE CONTINUE
            MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE, PRPT.PROMPTS<1,II> ELSE MAT RPT.PROC.REC = ""
            V.CNT = DCOUNT(RPR.VALID,",")
            FOR SV = 1 TO V.CNT
               IF PROC.VALUES<2+II> = FIELD(RPR.VALID,",",SV) THEN
                  IH_HEADINGS<IFND> = FIELD(RPR.VAL.HEAD,",",SV)
                  EXIT
               END
            NEXT SV
         NEXT II
      END
      GOSUB ADD_INC_HEADINGS
   END
   DELETE PMC_REPORT_VALUES, SR_NAME
   RETURN
*
*---- ADD INC_HEADINGS
*
ADD_INC_HEADINGS: 
*
   BEGIN CASE
      CASE PRPT.RPT.SCRN.FLAG = "R" AND DCOUNT(IH_HEADINGS,AM) > 0
         PROC.VALUES<2> = REPORT_ID :",": CHANGE(IH_HEADINGS,AM,",")
      CASE PRPT.RPT.SCRN.FLAG = "R"
         PROC.VALUES<2> = REPORT_ID
      CASE PRPT.RPT.SCRN.FLAG = "H"
         GOSUB BUILD_REPORT_HEAD
   END CASE
   RETURN
*
*---- BUILD REPORT HEADING
*
BUILD_REPORT_HEAD: 
*
   TEMP_HEAD = PRPT.HEADING
   IF INDEX(TEMP_HEAD,"^",1) > 0 THEN
      TEMP_HEAD = CHANGE(TEMP_HEAD,"^",AM)
      IH_COUNT = DCOUNT(TEMP_HEAD,AM)
      FOR II = IH_COUNT TO 1 STEP - 1
         IF REM(II,2) = 0 THEN
            TEMP_HEAD<II> = IH_HEADINGS<INT(II/2)>
         END
         IF TEMP_HEAD<II> = "" THEN
            TEMP_HEAD = DELETE(TEMP_HEAD,II,0,0)
         END
      NEXT II
      TEMP_HEAD = CHANGE(TEMP_HEAD,AM,"")
   END
   PTR = INDEX(TEMP_HEAD,"(",1)
   IF PTR = 0 THEN
      TEMP_HEAD = TRIM(TEMP_HEAD)
      REPORT.SUFFIX = ""
   END ELSE
      REPORT.SUFFIX = TRIM(TEMP_HEAD[PTR,99])
      TEMP_HEAD = TRIM(TEMP_HEAD[1,PTR-1])
   END
   IHL = LEN(TEMP_HEAD)
   SAVE_TEMP_HEAD = ""
   FOR P = 1 TO IHL
      SAVE_TEMP_HEAD = SAVE_TEMP_HEAD:" ":TEMP_HEAD[P,1]
   NEXT P
   IF LEN(SAVE_TEMP_HEAD) < 81 THEN
      TEMP_HEAD = SAVE_TEMP_HEAD[2,80]
   END
   HLINE1 = "RUN D - T: ":OCONV(DATE(), "D2/"):" - ":OCONV(TIME(), "MTS")
   HLINE1 = HLINE1 "L#33"
   HLINE2 = SPACE(INT((85-LEN(CO.NAME))/2)):CO.NAME
   HLINE2 = HLINE2 "L#85"
   HLINE3 = SPACE(3):"PAGE 'PL'"
   HLINE = HLINE1:HLINE2:HLINE3
   HLINE4 = "RPT #-BY : ":REPORT_ID:"-":USER_ID
   HLINE4 = HLINE4 "L#33"
   HLINE5 = SPACE(INT((85-LEN(TEMP_HEAD))/2)):TEMP_HEAD
   HLINE5 = HLINE5:"   ":REPORT.SUFFIX
   HLINEA = HLINE4:HLINE5
   PROC.VALUES<2> = HLINE:HLINEA
   RETURN
* T26090 ^
*
*
*---- CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
   GOTO 999999
99999 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
* PRINT CS:
999999 *
*T26090 v
   MCNT = DCOUNT(MULTI.VALUES,AM)
   IF MCNT GT 0 THEN
      FOR M = 1 TO MCNT
         IF MULTI.VALUES<M> # "" THEN
            PROC.VALUES<M> = MULTI.VALUES<M>
         END
      NEXT M
   END
   IF PRPT.HOLD.BUFFER = "Y" THEN
      MCNT = DCOUNT(XX,AM)
      FOR M = 3 TO MCNT UNTIL XX<M> = ""
         PROC.VALUES = INSERT(PROC.VALUES,M,0,0,XX<M>)
      NEXT M
   END
*T26090 ^
   PROC.VALUES = PROC.VALUES : AM
   PROCWRITE PROC.VALUES
   IF PC.PORT.TYPE = 'termulator' THEN
      IF PROC.VALUES<1> # "END" THEN
         SEC.ID = "R.":PORT
         MATREAD USER.REC FROM SECURITY, SEC.ID THEN
            MATREAD PPS.REC FROM PMC_PROCESS, USER.VERB THEN
               IF PPS.CEO = "R" AND NOT(OVERNIGHT.RUNNING) THEN
                  HFORM = USER.CEO.FORM
                  TU_FUNC = "TU.FORM.FOCUS":TU_VERNO
                  CALL @TU_FUNC(HFORM,"",ERROR)
               END
            END
         END
      END
   END
END
