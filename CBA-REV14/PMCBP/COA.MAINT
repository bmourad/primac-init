*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION     - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - PMCBP
* PROGRAM      - COA.MAINT
* BY           - JIHAD YAMOUT , C.B.A
* DATE         - 08/13/85
* DESCRIPTION  - ACCOUNT GENERAL INFORMATION MAINTENANCE.
*T25757 cm 04/18/2001 Correct problem that when a valid category and
*                     sub is entered an error message comes up if the
*                     record does not exist in the CATG.AND.SUB file.
*T26150 lanny 09/14/2001 * Length of Account No. not being checked in
*                          GUI.
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*T26685 cmykleb 08/27/2002 * Rev12 Division Security
*T28574 lross 06/02/2005 * Correct field pointers in COA.AUDIT.TRAIL.
*********************************************************************
*
*** INSERT FILES EQUETES   
*COPY>PMC.CPYLIB>COMPANY   
*COPY>PMC.CPYLIB>COA   
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>GLS.CPYLIB>COA.AUDIT.TRAIL
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>GLS.CPYLIB>COA.BAL   
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER   
*COPY>CPYLIB>FILE.VARS   
*COPY>CPYLIB>SYSCOM   
*COPY>CPYLIB>CHAR   
*
*** SETUP FOR SYSTEM ERRMSGS   
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*** OPEN FILES   
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING' ; GOTO 93000   
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE MISSING' ; GOTO 93000   
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING' ; GOTO 93000   
   OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GOTO 93000
   OPEN '','COA.XREF' TO COA.XREF ELSE  ERRMSG = 'COA.XREF FILE IS MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE  ERRMSG = 'CONTROL FILE IS MISSING';GOTO 93000
   OPEN '','SECURITY' TO SECURITY ELSE  ERRMSG = 'SECURITY FILE IS MISSING';GOTO 93000
   EQV.FLG = 1
   OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
*** GET COMPANY NAME   
   MAT COMP.REC = ''
   CONO = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IN.ACCT.LEN = LEN(CO.ACCT.PIC)
   BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
   IF NOT(NUM(BASE.LEN)) OR BASE.LEN > IN.ACCT.LEN THEN
      ERRMSG = "ERROR IN THE ACCOUNT STRUCTURE"; GOSUB 91000; GOTO 99999
   END
   TAPE.FLG = "N"
   IF CO.GLS = "Y" THEN
      OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE ERRMSG = 'ACCT.TYPE FILE MISSING' ; GOTO 93000   
      OPEN '','ACCT.CATG' TO ACCT.CATG ELSE ERRMSG = 'ACCT.CATG FILE MISSING' ; GOTO 93000   
      OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE ERRMSG = 'ACCT.SUB.CATG FILE MISSING' ; GOTO 93000   
      OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE ERRMSG = 'CATG.AND.SUB FILE MISSING' ; GOTO 93000   
      OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING' ; GOTO 93000
      OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING' ; GOTO 93000
      OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST CNTR FILE IS MISSING' ; GOTO 93000
      OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE ERRMSG = 'CO.COA.BAL FILE IS MISSING' ; GOTO 93000
      OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE ERRMSG = 'DV.COA.BAL FILE IS MISSING' ; GOTO 93000
      OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE ERRMSG = 'DP.COA.BAL FILE IS MISSING' ; GOTO 93000
      OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE ERRMSG = 'CC.COA.BAL FILE IS MISSING' ; GOTO 93000
      OPEN '','COA.AUDIT.TRAIL' TO COA.AUDIT.TRAIL ELSE ERRMSG = 'COA.AUDIT.TRAIL FILE IS MISSING' ; GOTO 93000
      READ REC FROM CONTROL, CONO:"FISCAL" ELSE ERRMSG = "CONTROL FISCAL IS NOT ON FILE"; GOTO 93000
      YEAR = REC<1>[1,4]
      CURR = REC<1>[5,2]
      TAPE.FLG = "Y"
      READ REC FROM CONTROL, CONO : (YEAR-1) : "GLS.TAPE" ELSE TAPE.FLG = "N"
   END
*T26685 v
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL - DIV.SECURITY"; GOTO 93000
   END
*T26685 ^
   MAT GEN.XREF.REC = ''; GXR.CO = CONO; GXR.LOC = 0
   UNKNOWN = 'UNKNOWN'
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "???"
   OPER.ID = PORT.NO:"!":OPER.ID
*** MAIN PROCESSING   
   MAT EDIT.COM.DRIVER = ""   
   ECD.SCRN.CNT = 1   
   ECD.SCRN.NAME = "COA.MAINT"
   IF CO.GLS = "Y" THEN
      ECD.SCRN.CNT = 2
      ECD.SCRN.NAME<2> = "COA.BAL"
   END
   ECD.ACTION=1;CALL SCRN.EDIT   
*** PRINT SCREEN   
1  MAT COA.REC = ""
   MAT CAT.REC = ""
   MAT AT.REC = ""
   ECD.SCRN.NO = 1   
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT   
*** ENTER G/L ACCOUNT NUMBER
5  ECD.NUM = 1
   SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION=5;CALL SCRN.EDIT
   ECD.MAXL = IN.ACCT.LEN
   ECD.ACTION=4;CALL SCRN.EDIT
   ACCT.NO = ECD.RET.VALUE
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE NOT(NUM(ECD.RET.VALUE))
         BEGIN CASE
            CASE ECD.RET.VALUE = "D"
               GXR.ACTION = "D"
               GOSUB 200; COA.L.DESC = ''
            CASE CO.GLS # "Y"
               ERRMSG = '** NUMERIC INPUT REQUIRED **'
               GOSUB 91000; ECD.RET.VALUE = "END"
            CASE ECD.RET.VALUE = "T"
               GXR.ACTION = "C"
               GOSUB 300; COA.TYPE = ''
            CASE 1
               ERRMSG = '** NUMERIC INPUT REQUIRED **'
               GOSUB 91000; ECD.RET.VALUE = "END"
         END CASE
         IF ECD.RET.VALUE = "END" THEN GOTO 5
         GXR.ID = ''; GXR.SRCH.ID = ECD.RET.VALUE
         GXR.LOC = 1; GXR.FILE = COA
         CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         IF GXR.ACTION = 'X' THEN GOTO 1
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            SCV.REC(ECD.NUM)<1> = ''; GOTO 5
         END
      * T26126 v
         MATREADU COA.REC FROM COA, CONO : GXR.ID LOCKED
            ERRMSG = 'CHART OF ACCOUNTS record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 5 
         END ELSE
      * T26126 ^
            ERRMSG = 'CANNOT LOCATE ACCOUNT NUMBER - ' : GXR.ID CO.ACCT.MASK
            GOSUB 91000; SCV.REC(ECD.NUM)<1> = ''; GOTO 5
         END
         ACCT.NO = GXR.ID
         GOSUB 1000
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.CATG.AND.SUB = COA.CATG : COA.SUB.CATG
         OLD.L.DESC = COA.L.DESC
         GXR.LOC = 0
         IF CO.GLS = "Y" THEN GOSUB 900
      CASE LEN(ECD.RET.VALUE) < BASE.LEN
         ERRMSG = "MINIMUM LENGTH = ":BASE.LEN; GOSUB 91000; GOTO 5
*T26150 v
      CASE LEN(ECD.RET.VALUE) > IN.ACCT.LEN
         ERRMSG = "MAXIMUM LENGTH = ":IN.ACCT.LEN; GOSUB 91000; GOTO 5
*T26150 ^
      CASE ECD.RET.VALUE # ""
         ACCT.NO = ECD.RET.VALUE:STR("0",IN.ACCT.LEN-LEN(ECD.RET.VALUE))
         SCV.REC(ECD.NUM)<1> = ACCT.NO CO.ACCT.MASK
         FOUND = 1
      * T26126 v
         MATREADU COA.REC FROM COA, CONO : ACCT.NO LOCKED
            ERRMSG = 'CHART OF ACCOUNTS record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 5 
         END ELSE
      * T26126 ^
            ECD.ACTION = 5; CALL SCRN.EDIT
            FOUND = 0
         END
         IF CO.GLS = "Y" THEN GOSUB 900
         IF FOUND THEN
            OLD.CATG.AND.SUB = COA.CATG : COA.SUB.CATG
            OLD.L.DESC = COA.L.DESC
            GOSUB 1000
            ECD.ACTION = 3 ; CALL SCRN.EDIT
         END ELSE
            OLD.CATG.AND.SUB = ''; OLD.L.DESC = ''
            FOR OPTION = 1 TO 7 WHILE ECD.RET.VALUE # "END"
               ON OPTION GOSUB 100,200,300,400,600,700,800
            NEXT OPTION
            IF ECD.RET.VALUE = "END" THEN GOTO 1
         END
   END CASE
*** ENTER OPTIONS   
7  IF CO.GLS = "Y" THEN ECD.NUM = 19 ELSE ECD.NUM = 18
   SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
         RELEASE COA, CONO:ACCT.NO    ;* T26126
         GOTO 1
      CASE NUM(OPTION)
         ON OPTION GOSUB 100,200,300,400,500,600,700,800
      CASE OPTION = "N"
         CALL COA.BAL.MAINT
         MATWRITE COA.REC ON COA , CONO:ACCT.NO
         IF CO.GLS = "Y" THEN GOSUB 950
         ECD.SCRN.NO = 1; ECD.ACTION = 3 ; CALL SCRN.EDIT
      CASE OPTION = "D"
         IF CO.GLS = 'Y' THEN
            DEL.FLAG = 0
            READ DUMMY FROM CO.COA.BAL, CONO : ACCT.NO ELSE DEL.FLAG = 1
         END ELSE
            DEL.FLAG = 1
         END
         IF DEL.FLAG = 0 THEN
            ERRMSG = 'CANNOT DELETE AN ACCOUNT WITH BALANCES'
            GOSUB 91000; GOTO 7
         END
         X=0;Y=21;TYP=18;O.R="R";MAXL=1
         PMSG = "YOU ARE ABOUT TO DELETE THIS ACCOUNT OK (Y/N)"
         CALL EDIT.SUB
         P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF VALUE # "Y" THEN GOTO 7
         DELETE COA, CONO : ACCT.NO
         CALL GEN.XREF.MAINT(CONO,ACCT.NO,OLD.CATG.AND.SUB,"",CATG.AND.SUB,PREFIX)
         CALL GEN.XREF.MAINT(CONO,ACCT.NO,OLD.L.DESC,"",COA.XREF,PREFIX)
         IF CO.GLS = "Y" THEN
            MAT COA.REC = ""
            GOSUB 950
         END
         GOTO 1
      CASE OPTION = 'F'
         MATWRITE COA.REC ON COA , CONO:ACCT.NO
         NEW.NAME = COA.CATG : COA.SUB.CATG
         IF CO.GLS = "Y" THEN
            CALL GEN.XREF.MAINT(CONO,ACCT.NO,OLD.CATG.AND.SUB,NEW.NAME,CATG.AND.SUB,PREFIX)
            GOSUB 950
         END
         NEW.NAME = COA.L.DESC
         CALL GEN.XREF.MAINT(CONO,ACCT.NO,OLD.L.DESC,NEW.NAME,COA.XREF,PREFIX)
         GOTO 1
   END CASE
   GOTO 7   
*** ENTER ACCOUNT SHORT DESCRIPTION
100 ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN   
      COA.DESC = ECD.RET.VALUE
   END
   RETURN   
*** ENTER ACCOUNT LONG DESCRIPTION
200 ECD.NUM = 3
   IF COA.L.DESC = "" THEN ECD.DEFAULT = COA.DESC
   ECD.ACTION=4;CALL SCRN.EDIT   
   IF ECD.RET.VALUE # "END" THEN
      COA.L.DESC = ECD.RET.VALUE
   END
   RETURN   
*** ENTER ACCOUNT TYPE AND PRINT DESCRIPTION
300*
   OLD.ATYPE = COA.TYPE
   OLD.ADESC = AT.DESC
   ECD.NUM = 4; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      IF CO.GLS = 'Y' THEN
         MATREAD AT.REC FROM ACCT.TYPE, ECD.RET.VALUE ELSE
            ERRMSG = 'CANNOT LOCATE ACCOUNT TYPE - ' : ECD.RET.VALUE
            GOSUB 91000; GOTO 300
         END
      END ELSE
         AT.DESC = ''
      END
      SAVE.COA.TYPE = ECD.RET.VALUE
      ECD.NUM = 5; SCV.REC(ECD.NUM)<1> = AT.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      IF OLD.ATYPE # "" AND OLD.ATYPE # ECD.RET.VALUE THEN
         GOSUB 400
         IF ECD.RET.VALUE = 'END' THEN
            COA.TYPE = OLD.ATYPE
            SAVE.COA.TYPE = OLD.ATYPE
            MATREAD AT.REC FROM ACCT.TYPE, OLD.ATYPE ELSE MAT AT.REC = ""
            ECD.NUM = 4;SCV.REC(4)<1> = COA.TYPE
            ECD.ACTION = 5;CALL SCRN.EDIT
            AT.DESC = OLD.ADESC
            ECD.NUM = 5;SCV.REC(5)<1> = AT.DESC
            ECD.ACTION = 5;CALL SCRN.EDIT
            COA.CATG = OLD.CATG
            ECD.NUM = 6;SCV.REC(6)<1> = COA.CATG
            ECD.ACTION = 5;CALL SCRN.EDIT
            ECD.NUM = 7;SCV.REC(7)<1> = OLD.DESC
            ECD.ACTION = 5;CALL SCRN.EDIT
            GOTO 300
         END
      END
      COA.TYPE = SAVE.COA.TYPE
   END
   RETURN
*** ENTER ACCOUNT CATEGORY AND PRINT DESCRIPTION
400 IF CO.GLS # "Y" THEN GOTO 499
   OLD.CATG = COA.CATG; OLD.SUB.CATG = COA.SUB.CATG
   OLD.DESC = SCV.REC(7)<1>
   ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 499
      CASE ECD.RET.VALUE = ''
         COA.CATG = ''; COA.SUB.CATG = ''
         COA.CURR = ''; COA.FIX = ''; COA.PROD = ''
         MAT AC.REC = ''; MAT ASC.REC = ''
         GOSUB 1200
         ECD.NUM = 6; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 7; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 8; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 9; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 10; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 11; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 12; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 499
      CASE ECD.RET.VALUE = "???"
         GXR.ACTION = 'C'; GXR.ID = ''; GXR.SRCH.ID = SAVE.COA.TYPE
         CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         IF GXR.ACTION = 'X' THEN
            SCV.REC(ECD.NUM)<1> = COA.CATG; ECD.ACTION = 5; CALL SCRN.EDIT
            GOTO 400
         END
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         ECD.NUM = 6
         IF GXR.ID = '' THEN
            SCV.REC(ECD.NUM)<1> = COA.CATG; ECD.ACTION = 3; CALL SCRN.EDIT
            GOTO 400
         END
         ECD.RET.VALUE = GXR.SRCH.ID; OLD.SUB.CATG = GXR.ID
         SCV.REC(ECD.NUM)<1> = ECD.RET.VALUE; ECD.ACTION = 5; CALL SCRN.EDIT
      CASE NOT(NUM(ECD.RET.VALUE))
         ERRMSG = '** NUMERIC INPUT REQUIRED **'
         GOSUB 91000; GOTO 400
   END CASE
   LOCATE ECD.RET.VALUE IN AT.CATG<1>,1 SETTING FND ELSE
      ERRMSG = 'CANNOT LOCATE CATEGORY (':ECD.RET.VALUE:') FOR TYPE - ' : SAVE.COA.TYPE
      GOSUB 91000; GOTO 400
   END
   MATREAD AC.REC FROM ACCT.CATG, ECD.RET.VALUE ELSE
      ERRMSG = 'CANNOT LOCATE CATEGORY - ' :ECD.RET.VALUE
      GOSUB 91000; GOTO 400
   END
   COA.CATG = ECD.RET.VALUE
   ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = AC.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
   IF OLD.SUB.CATG = '' THEN
      GOSUB 500
      IF ECD.RET.VALUE = 'END' THEN
         COA.CATG = OLD.CATG
         ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = COA.CATG
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = OLD.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 400
      END
   END ELSE
      LOCATE OLD.SUB.CATG IN AC.SUB<1>,1 SETTING FND ELSE
*          COA.CATG = OLD.CATG
         ERRMSG = 'CANNOT LOCATE SUB CATEGORY (':OLD.SUB.CATG:') IN CATEGORY - ' : COA.CATG
         GOSUB 91000; GOSUB 500
         IF ECD.RET.VALUE = 'END' THEN
            COA.CATG = OLD.CATG
            ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = COA.CATG
            ECD.ACTION = 5; CALL SCRN.EDIT
            ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = OLD.DESC
            ECD.ACTION = 5; CALL SCRN.EDIT
            GOTO 400
         END
         GOTO 499
      END
      MATREAD ASC.REC FROM ACCT.SUB.CATG, OLD.SUB.CATG ELSE
         COA.CATG = OLD.CATG
         ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = COA.CATG
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = OLD.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
         ERRMSG = 'CANNOT LOCATE SUB CATEGORY - ' : OLD.SUB.CATG
         GOSUB 91000; GOTO 400
      END
      MATREAD CAS.REC FROM CATG.AND.SUB, CONO:COA.CATG:OLD.SUB.CATG ELSE
*T25757 v
*        COA.CATG = OLD.CATG
*        ECD.NUM = 6; SCV.REC(ECD.NUM)<1> = COA.CATG
*        ECD.ACTION = 5; CALL SCRN.EDIT
*        ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = OLD.DESC
*        ECD.ACTION = 5; CALL SCRN.EDIT
*        ERRMSG = 'CANNOT LOCATE CATEGORY AND SUB - ':COA.CATG:OLD.SUB.CATG
*        GOSUB 91000; GOTO 400
         MAT CAS.REC = ''
*T25757 ^
      END
      COA.SUB.CATG = OLD.SUB.CATG
      ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = COA.SUB.CATG
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOSUB 510
   END
499 RETURN
*** ENTER ACCOUNT SUB CATEGORY AND PRINT DESCRIPTION
500 IF COA.CATG = '' THEN GOTO 599
   ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 599
      CASE ECD.RET.VALUE = '???'
         GXR.ACTION = 'S'; GXR.ID = ''; GXR.SRCH.ID = COA.CATG
         CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         IF GXR.ACTION = 'X' THEN
            SCV.REC(ECD.NUM)<1> = ''; ECD.ACTION = 5; CALL SCRN.EDIT
            GOTO 500
         END
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         ECD.NUM = 14
         IF GXR.ID = '' THEN
            SCV.REC(ECD.NUM)<1> = COA.SUB.CATG; ECD.ACTION = 3; CALL SCRN.EDIT
            GOTO 500
         END
         ECD.RET.VALUE = GXR.ID
         SCV.REC(ECD.NUM)<1> = ECD.RET.VALUE; ECD.ACTION = 5; CALL SCRN.EDIT
      CASE NOT(NUM(ECD.RET.VALUE))
         ERRMSG = '** NUMERIC INPUT REQUIRED **'
         GOSUB 91000; GOTO 500
   END CASE
   LOCATE ECD.RET.VALUE IN AC.SUB<1>,1 SETTING FND ELSE
      ERRMSG = 'CANNOT LOCATE SUB CATEGORY (':ECD.RET.VALUE:') IN CATEGORY - ' : COA.CATG
      GOSUB 91000; GOTO 500
   END
   MATREAD ASC.REC FROM ACCT.SUB.CATG, ECD.RET.VALUE ELSE
      ERRMSG = 'CANNOT LOCATE SUB CATEGORY - ' : ECD.RET.VALUE
      GOSUB 91000; GOTO 500
   END
   MATREAD CAS.REC FROM CATG.AND.SUB, CONO:COA.CATG:ECD.RET.VALUE ELSE
      ERRMSG = 'CANNOT LOCATE CATEGORY AND SUB - ' : COA.CATG : ECD.RET.VALUE
      GOSUB 91000; GOTO 500
   END
   COA.SUB.CATG = ECD.RET.VALUE
510 ECD.NUM = 15; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ASC.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
   COA.CURR = CAS.CURR
   COA.FIX = CAS.FIX
   COA.PROD = CAS.PROD
   GOSUB 1500
   ECD.NUM = 8; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 9; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 10; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 11; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 12; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
599 RETURN
*** PRINT BALANCE TYPE (DB , CR)
600 IF COA.NORM = "" THEN
      IF COA.TYPE = "A" OR COA.TYPE = "E" THEN
         ECD.DEFAULT = "DB"
      END ELSE
         ECD.DEFAULT = "CR"
      END
   END
   ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      COA.NORM = ECD.RET.VALUE
   END
   RETURN
*** ENTER BREAK DOWN LEVEL
700 ECD.NUM = 17   
   ECD.ACTION=4;CALL SCRN.EDIT   
   IF ECD.RET.VALUE # 'END' THEN   
*T26685 v
      IF ECD.RET.VALUE = "0" AND SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
         ERRMSG = "0 IS INVALID WITH DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
         GOSUB 91000
         GOTO 700
      END
*26685 ^
      COA.LEVEL = ECD.RET.VALUE
   END   
   RETURN   
*** ACCOUNT DETAIL LEVEL
800 ECD.NUM = 20
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      COA.DETAIL = ECD.RET.VALUE
   END
   RETURN
*** MATCH CHANGES
900 CAT.ACCOUNT = ACCT.NO
   CAT.DATE = DATE()
   CAT.OPER = OPER.ID
   FOR I = 1 TO 20
      CAT.REC(I+10) = COA.REC(I)
   NEXT I
   MATREAD CB.REC FROM CO.COA.BAL, CONO : ACCT.NO ELSE GOTO 909
*T28574 v
*  FOR I = 3 TO 41
   FOR I = 3 TO 161
      CAT.REC(I+48) = CB.REC(I)
   NEXT I
909 RETURN
950 CAT.CHANGE = 0
   FOR I = 1 TO 20
      CAT.REC(I+30) = COA.REC(I)
      IF CAT.REC(I+10) # COA.REC(I) THEN CAT.CHANGE = 1
   NEXT I
975 MATREAD CB.REC FROM CO.COA.BAL, CONO:ACCT.NO ELSE MAT CB.REC = ""
*  FOR I = 3 TO 41
   FOR I = 3 TO 161
*     CAT.REC(I+88) = CB.REC(I)
      CAT.REC(I+207) = CB.REC(I)
      IF CAT.REC(I+48) # CB.REC(I) THEN CAT.CHANGE = 2
   NEXT I
   IF CAT.CHANGE THEN
      IF CAT.CHANGE < 2 THEN
*        FOR I = 51 TO 130
         FOR I = 51 TO 368
*T28574 ^
            CAT.REC(I) = ""
         NEXT I
      END
      READU SEQ.NO FROM CONTROL, CONO:"COA.AUDIT.SEQ" ELSE
         SEQ.NO = "10000"
      END
      MATWRITE CAT.REC ON COA.AUDIT.TRAIL, CONO:SEQ.NO
      SEQ.NO = SEQ.NO + 1
      WRITE SEQ.NO ON CONTROL, CONO:"COA.AUDIT.SEQ"
   END
   RETURN
*** LOAD ALL SCV.REC
1000 SCV.REC(1)<1> = ACCT.NO CO.ACCT.MASK
1100 IF CO.GLS = 'Y' THEN
      MATREAD AT.REC FROM ACCT.TYPE, COA.TYPE ELSE
         AT.DESC = UNKNOWN
      END
      IF COA.CATG # "" THEN
         MATREAD AC.REC FROM ACCT.CATG, COA.CATG ELSE
            AC.DESC = UNKNOWN
         END
      END ELSE
         AC.DESC = ""
      END
      IF COA.SUB.CATG # "" THEN
         MATREAD ASC.REC FROM ACCT.SUB.CATG, COA.SUB.CATG ELSE
            ASC.DESC = UNKNOWN
         END
      END ELSE
         ASC.DESC = ''
      END
   END ELSE
      AT.DESC = ''
      AC.DESC = ''
      ASC.DESC = ''
   END
   SCV.REC(2)<1> = COA.DESC
   SCV.REC(3)<1> = COA.L.DESC
   SCV.REC(4)<1> = COA.TYPE
   SAVE.COA.TYPE = COA.TYPE
   SCV.REC(5)<1> = AT.DESC
   SCV.REC(16)<1> = COA.NORM
   SCV.REC(17)<1> = COA.LEVEL
   SCV.REC(20)<1> = COA.DETAIL
1200 SCV.REC(6)<1> = COA.CATG
   SCV.REC(7)<1> = AC.DESC
   SCV.REC(14)<1> = COA.SUB.CATG
   SCV.REC(15)<1> = ASC.DESC
1500 SCV.REC(8)<1> = COA.CURR
   BEGIN CASE
      CASE COA.CURR = "C"
         SCV.REC(9)<1> = "CURRENT"
      CASE COA.CURR = "L"
         SCV.REC(9)<1> = "LONG TERM"
      CASE 1
         SCV.REC(9)<1> = ""
   END CASE
   SCV.REC(10)<1> = COA.FIX
   BEGIN CASE
      CASE COA.FIX = "F"
         SCV.REC(11)<1> = "FIXED"
      CASE COA.FIX = "S"
         SCV.REC(11)<1> = "SEMI VARIABLE"
      CASE COA.FIX = "V"
         SCV.REC(11)<1> = "VARIABLE"
      CASE 1
         SCV.REC(11)<1> = ""
   END CASE
   SCV.REC(12)<1> = COA.PROD
   BEGIN CASE
      CASE COA.PROD = "P"
         SCV.REC(13)<1> = "PRODUCT"
      CASE COA.PROD = "S"
         SCV.REC(13)<1> = "SELLING"
      CASE COA.PROD = "A"
         SCV.REC(13)<1> = "ADMINSTRATIVE"
      CASE 1
         SCV.REC(13)<1> = ""
   END CASE
   RETURN
*** CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)   
   RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)   
   RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)   
99999 * PRINT * @(-1) * : *  *  * 
END
