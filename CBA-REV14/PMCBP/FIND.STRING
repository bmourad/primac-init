VOC.FILE.EXISTS = 1
CONTROL.FILE.EXISTS = 1
OPEN '','VOC' TO VOC ELSE VOC.FILE.EXISTS = 0
OPEN '','CONTROL' TO CONTROL ELSE CONTROL.FILE.EXISTS = 0
IF NOT(CONTROL.FILE.EXISTS) OR NOT(VOC.FILE.EXISTS) THEN GOTO 99999
*
* STEP 1:  CREATE A LIST CONTAINING ALL VOC ITEMS ENDING WITH 'BP'
*
DONE = 0
FSLASH = "/"
ID.LISTING = ''
IF VOC.FILE.EXISTS THEN
   SELECT VOC TO VOC.IDS
   LOOP
     READNEXT VOC.ID FROM VOC.IDS ELSE DONE = 1
   UNTIL DONE DO
     ID.LEN = LEN(VOC.ID)
     IF ID.LEN > 2 THEN
       LAST.TWO = VOC.ID[LEN(VOC.ID)-1,2]
       IF LAST.TWO = "BP" THEN
         READ VOC.REC FROM VOC,VOC.ID THEN
           TEST.STRING = VOC.REC<2>
           ID.LISTING<-1> = VOC.ID
         END
       END
     END
   REPEAT
END
WRITE ID.LISTING ON CONTROL,"ID.LIST"
*
* STEP 2:  PROCESS EACH BP FILE
*
COMPILE.MSGS.FILE.EXISTS = 1
CTLGTB.FILE.EXISTS = 1
OPEN "","COMPILE.MSGS" TO COMPILE.MSGS ELSE COMPILE.MSGS.FILE.EXISTS = 0
OPEN "","CTLGTB" TO CTLGTB ELSE CTGLTB.FILE.EXISTS = 0
*
* READ THE RECORD AND PROCESS EACH LINE
*
READ ID.LISTING FROM CONTROL,"ID.LIST" ELSE ID.LISTING = ""
IF ID.LISTING = "" THEN GOTO 99999
LAST.FILE = DCOUNT(ID.LISTING,@AM)
*
* CLEAR OUT CURRENT RESULTS RECORD TO PREVENT LONGER PREVIOUS RECORDS
* FROM BEING SAVED.
*
RESULTS.RECORD = ""
WRITE RESULTS.RECORD ON CONTROL,"FIND.STRING.MASTER.LIST"
FOR FILE.COUNT = 1 TO LAST.FILE
   FILE.NAME = ID.LISTING<FILE.COUNT,1>
   EXECUTE.COMMAND = "SSELECT ":FILE.NAME:" WITH NOT @ID LIKE _..."
   UDTEXECUTE EXECUTE.COMMAND CAPTURING RESULT
   *
   * WRITE OUT A STATUS RECORD IN CASE OF PROGRAM FAILURE
   *
   OUTPUT.RESULT = ""
   * GET RID OF ANY OLD RECORD THAT MIGHT EXISTS SINCE THERE CAN BE
   * VARIABLE OUTPUT LINES.
   WRITE OUTPUT.RESULT ON CONTROL,"FIND.STRING.STATUS"
   OUTPUT.RESULT<1> = "RESULT OF EXECUTING COMMAND:"
   OUTPUT.RESULT<2> = EXECUTE.COMMAND
   OUTPUT.RESULT<3> = RESULT
   WRITE OUTPUT.RESULT ON CONTROL,"FIND.STRING.STATUS"
   *
   * BEGIN THE FILE PROCESSING
   *
   FILE.PROCESSED = 0
   LOOP
      READNEXT RECORD.ID ELSE FILE.PROCESSED = 1
   UNTIL FILE.PROCESSED DO
      *
      * TO ACCURATELY DECIDE IF A PROGRAM SHOULD BE INCLUDED, FIRST
      * IT SHOULD BE TESTED TO SEE IF IT IS THE PROGRAM BEING USED BY
      * THE SYSTEM.  IF IT ISN'T, THEN IT SHOULD NOT BE PROCESSED.  IF
      * IT IS, OR IF IT CANNOT BE DETERMINED IF IT IS (BECAUSE THERE IS
      * NO CATALOG OR COMPILE FILE CONTAINING THAT INFO), THEN IT WILL
      * BE INCLUDED.
      *
      * THE FIRST PLACE TO CHECK IS THE VOC FILE, SINCE THIS IS THE FIRST
      * PLACE CHECKED BY THE SYSTEM TO ATTEMPT TO LOCATE THE PROGRAM.
      *
      RECORD.LOCATION = "NOT FOUND"
      RECORD.SOURCE = "FILE"
      READ VOC.REC FROM VOC,RECORD.ID THEN
         RECORD.LOCATION = FIELD(VOC.REC<3,1>," ",1)
         IF RECORD.LOCATION # FILE.NAME THEN RECORD.LOCATION = ""
         IF RECORD.LOCATION # "" THEN RECORD.SOURCE = "VOC"
      END
      IF RECORD.LOCATION = "NOT FOUND" AND CTLGTB.FILE.EXISTS THEN
         *
         * THE NEXT PLACE TO CHECK WOULD BE THE GLOBAL CATALOG TABLE
         * FILE, CALLED CTLGTB.
         *
         READ CTLGTB.REC FROM CTLGTB,RECORD.ID THEN
            SLASH.COUNT = COUNT(CTLGTB.REC<3,1>,FSLASH) + 1
            RECORD.LOCATION = FIELD(FIELD(CTLGTB.REC<3,1>,FSLASH,SLASH.COUNT)," ",1)
            IF RECORD.LOCATION # FILE.NAME THEN RECORD.LOCATION = ""
            IF RECORD.LOCATION # "" THEN RECORD.SOURCE = "CTLGTB"
         END
      END
      IF RECORD.LOCATION = "NOT FOUND" AND COMPILE.MSGS.FILE.EXISTS THEN
         *
         * CHECK THE COMPILE.MSGS FILE NEXT
         *
         READ COMPILE.MSGS.REC FROM COMPILE.MSGS,RECORD.ID THEN
            RECORD.LOCATION = COMPILE.MSGS.REC<3,1>
            IF RECORD.LOCATION # FILE.NAME THEN RECORD.LOCATION = ""
            IF RECORD.LOCATION # "" THEN RECORD.SOURCE = "COMPILE.MSGS"
         END
      END
      IF RECORD.LOCATION = "NOT FOUND" THEN
         *
         * IF THE RECORD HASN'T BEEN FOUND, THEN THE ORIGINAL FILE
         * WILL BE USED
         *
         RECORD.LOCATION = FILE.NAME
      END
      *
      * IF THE LOCATION IS NOT BLANK, THEN WRITE OUT THE LOCATION AND
      * RECORD NAME TO THE RESULTS RECORD.  THIS IS THE RECORD USED IN
      * THE NEXT STEP TO DO THE ACTUAL SEARCHING.
      *
      IF RECORD.LOCATION # "" THEN
         RESULTS.RECORD<-1> = RECORD.LOCATION:" ":RECORD.ID:" ":RECORD.SOURCE
      END
   REPEAT
NEXT FILE.COUNT
WRITE RESULTS.RECORD ON CONTROL,"FIND.STRING.MASTER.LIST"
*
* STEP 3: NOW THAT THE MASTER LIST HAS BEEN CREATED, GO THROUGH AND
*         FIND EVERY OCCURENCE OF THE STRING.
*
FINAL.RECORD = ""
WRITE FINAL.RECORD ON CONTROL,"FIND.STRING.RESULTS"
READ RESULTS.RECORD FROM CONTROL,"FIND.STRING.MASTER.LIST" ELSE GOTO 99999
LAST.RECORD = DCOUNT(RESULTS.RECORD,@AM)
FOR CURRENT.RECORD = 1 TO LAST.RECORD
   RECORD.INFO = RESULTS.RECORD<CURRENT.RECORD,1>
   RECORD.FILE = FIELD(RECORD.INFO," ",1)
   RECORD.ID = FIELD(RECORD.INFO," ",2)
   RECORD.SOURCE = FIELD(RECORD.INFO," ",3)
   OPEN "",RECORD.FILE TO MASTER.FILE THEN
      READ PROG.REC FROM MASTER.FILE, RECORD.ID THEN
         PR.LINE = RECORD.INFO:" ":DCOUNT(PROG.REC,@AM)
         PRINT PR.LINE
         LAST.ATT = DCOUNT(PROG.REC,@AM)
         FINDSTR "OR.CUST" IN PROG.REC SETTING STRFND THEN
            FINAL.RECORD<-1> = RECORD.INFO
         END ELSE
            STRFND = 0
            RELEASE MASTER.FILE,RECORD.ID
            READ PROG.REC FROM MASTER.FILE,RECORD.ID THEN STRFND = 0
         END
         IF STRFND = 0 THEN
            FINDSTR "CUST.INVOICE" IN PROG.REC SETTING STRFND THEN
               FINAL.RECORD<-1> = RECORD.INFO
            END ELSE
               STRFND = 0
               RELEASE MASTER.FILE,RECORD.ID
               READ PROG.REC FROM MASTER.FILE,RECORD.ID THEN STRFND = 0
            END
         END
         IF STRFND = 0 THEN
            FINDSTR "OPEN.RECV(1)" IN PROG.REC SETTING STRFND THEN
               FINAL.RECORD<-1> = RECORD.INFO
            END ELSE
               STRFND = 0
               RELEASE MASTER.FILE,RECORD.ID
               READ PROG.REC FROM MASTER.FILE,RECORD.ID THEN STRFND = 0
            END
         END
         IF STRFND = 0 THEN
            FINDSTR "CUST.REC(33)" IN PROG.REC SETTING STRNFD THEN
               FINAL.RECORD<-1> = RECORD.INFO
            END ELSE
               STRFND = 0
            END
         END
      END
   END
   CLOSE RECORD.FILE
NEXT CURRENT.RECORD
WRITE FINAL.RECORD ON CONTROL,"FIND.STRING.RESULTS"
99999 STOP
END
