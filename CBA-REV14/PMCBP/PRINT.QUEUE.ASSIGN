  SUBROUTINE PRINT.QUEUE.ASSIGN(CONO,MAT SEC.REC,USERID)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [08.0]
* Copyright 1993 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - CBABP
* PROGRAM      - PRINT.QUEUE.ASSIGN
* BY           - DUANE GREEN, COMPUTER BUSINESS ASSOCIATES
* DATE         - 04/26/93
* DESCRIPTION  - 
*                This program sets the default printer queue assignment
*                for a specific user id until it is reset using this same
*                program.  It also allows the assignment of print
*                queues for forms and reports per user.
*T21177 diane 11/06/1996 * REV11 UPG
*T21361 diane 01/09/1997 * Disallow menu selection as valid option
*T22081 stefanie 09/23/1997 * Add Laser column to use laser form logic.
*T25448 gat 12/07/2000 * FIX PROBLEM WITH INTERFACE OF FORMSCAPE
*T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB,ST).
*T28080 thompson 04/21/2004 * Fix numbering on scroll
*T28448 thompson 02/17/2005 * Correct problem when user hits return on
*                             menu field
*ENDDOC
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SECURITY
*COPY>CPYLIB>PORT.CONTROL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
**************
* OPEN FILES *
**************
  OPEN '','EASY.MENUS' TO PRIMAC.MENUS ELSE
    ERRMSG = 'EASY.MENUS FILE IS MISSING'
    GOTO 93000
  END
**************
* GET SCREEN *
**************
1 *
******************
  ERRMSG = ""
  QUEUE = ""
  PQUEUE = ""
  CHKQUE = ''
  QCNT=1
  PQCNT = 1
  LINE.SPACE = 1
  PAGE.SIZE = 12
  MENU.DEFAULT = ''
  BEGIN.PAGE = 8
  REQUEST = ''
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
  ECD.SCRN.NO = 2
*******************
* MAIN PROCESSING *
*******************
100 *
  SCV.REC(8)<ECD.SCRN.NO> = CONO
  SCV.REC(9)<ECD.SCRN.NO> = USERID
  SCV.REC(10)<ECD.SCRN.NO> = SEC.NAME:' (':SEC.DFLT.QUEUE:')'
  ECD.ACTION = 3 ; CALL SCRN.EDIT
*
110 *
  EXECUTE 'GET.QUEUES' CAPTURING MSG
*CSF 26753 v
  MCNT=DCOUNT(MSG,AM)
*    FOR X=3 TO X+1  UNTIL MSG<X>[15,1]=""
  FOR X=3 TO X+1  UNTIL X = MCNT
*       QUEUE<QCNT> = MSG<X>[1,23]
*       QCNT=QCNT+1
    IF MSG<X>[15,1] = "" OR MSG<X>[15,1] = "-" THEN GOTO 115
    IF MSG<X>[15,1] = " " THEN GOTO 115
    IF MSG<X>[1,1] # " " AND MSG<X> # "" THEN
      QUEUE<QCNT> = MSG<X>[1,23]
      QCNT=QCNT+1
*CSF 26753 ^
      PQUEUE<PQCNT> = MSG<X>[1,23]
      CHKQUE<PQCNT> = FIELD(PQUEUE<PQCNT>," ",1)
      PQCNT = PQCNT + 1
    END
115 *
  NEXT X
  LINES = DCOUNT(QUEUE,AM)
  LN = 1
  GOSUB 11000
  N = N - 1
200 *
  ECD.NUM = 5
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      GOTO 99999
    CASE ECD.RET.VALUE = "S"
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN = START.LINE - PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 11000
      N = N - 1
      GOTO 200
    * T25978 ^
    CASE ECD.RET.VALUE = 'F'
      GOTO 12000
    CASE ECD.RET.VALUE = ""
      GOTO 200
    CASE NOT(NUM(ECD.RET.VALUE))
      GOTO 200
    CASE ECD.RET.VALUE > N
      GOTO 200
    CASE 1
      QUE = FIELD(PQUEUE<ECD.RET.VALUE>," ",1)
      SEC.DFLT.QUEUE = QUE
  END CASE
  SCV.REC(10)<ECD.SCRN.NO> = SEC.NAME:' (':SEC.DFLT.QUEUE:')'
  ECD.ACTION = 3
  CALL SCRN.EDIT
  GOTO 200
*
11000 *
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF QUEUE<N>[1,1] # " " THEN
*T25978 v
*T28080     P_X  = 15 ; P_Y = SLN ; P_VALUE = LCT "R#3" ; P_OPT = ""
      P_X  = 15 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
*T25978 ^
      P_X  := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N>
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LCT = LCT + 1
    END ELSE
      P_X  = 15 ; P_Y = SLN ; P_VALUE = SPACE(3) ; P_OPT = ""
      P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N>
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999 *
  RETURN
*
12000 *
  LINE.SPACE = 1
  PAGE.SIZE = 12
  BEGIN.PAGE = 8
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
  ECD.SCRN.NO = 3
  ECD.ACTION=2;CALL SCRN.EDIT
  SCV.REC(1)<ECD.SCRN.NO> = CONO
  SCV.REC(2)<ECD.SCRN.NO> = USERID
  SCV.REC(10)<ECD.SCRN.NO> = SEC.NAME
  ECD.ACTION = 3
  CALL SCRN.EDIT
12001 *
  REQUEST = ''
  LINE.SPACE = 1
  PAGE.SIZE = 12
  BEGIN.PAGE = 8
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
*
12010 *
  LN = 1
  GOSUB 12020
  N = N - 1
  GOTO 12100
*
12020 *
  LINES = DCOUNT(SEC.MENUS.LIST,VM)
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN RETURN
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF SEC.MENUS.LIST<1,N> # " " THEN
*T28080      P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""
      P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENUS.LIST<1,N>'L#20'
      P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.OPTIONS<1,N>'R#3'
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      READ MENU.REC FROM PRIMAC.MENUS,SEC.MENUS.LIST<1,N> ELSE
        MENU.DESC = 'Invalid'
        GOTO 12025
      END
      MCT = 0
      FOR ZZ = 2 TO DCOUNT(MENU.REC,AM)
        IF MENU.REC<ZZ,1> # 'C' THEN
          MCT += 1
          IF MCT = SEC.MENU.OPTIONS<1,N> THEN
            MENU.DESC = MENU.REC<ZZ,3>
            GOTO 12025
          END
        END
      NEXT ZZ
      MENU.DESC = 'Invalid'
*
12025 *
      P_X  = 33 ; P_Y = SLN ; P_VALUE = MENU.DESC'L#30' ; P_OPT = ""
      P_X  := AM:65 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.QUEUES<1,N>'L#7'
*T22081 v
      P_X  := AM:76 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.QUEUE.LSR<1,N>
*T22081 ^
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LCT = LCT + 1
    END 
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
  RETURN
*
12100 *
  ECD.NUM = 8
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      ECD.SCRN.NO = 2
      ECD.ACTION = 2
      CALL SCRN.EDIT
      GOTO 1
    CASE ECD.RET.VALUE = 'A'
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 14000
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
    CASE ECD.RET.VALUE = 'C'
      GOSUB 15000
      IF LNO THEN
        LN = LNO
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
        P_X  = 40 ; P_Y = 22 ; P_VALUE = STR('-',39) ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        MENU.DEFAULT = SEC.MENUS.LIST<1,LN>
        GOSUB 14100
      END
    CASE ECD.RET.VALUE = 'D'
      GOSUB 15000
      IF LNO THEN
        LN = LNO
        SEC.MENUS.LIST = DELETE(SEC.MENUS.LIST,1,LN,0)
        SEC.MENU.OPTIONS = DELETE(SEC.MENU.OPTIONS,1,LN,0)
        SEC.MENU.QUEUES = DELETE(SEC.MENU.QUEUES,1,LN,0)
*T22081 v
        SEC.MENU.QUEUE.LSR = DELETE(SEC.MENU.QUEUE.LSR,1,LN,0)
*T22081 ^
        LINES = COUNT(SEC.MENUS.LIST,VM) + (SEC.MENUS.LIST # "")
        IF LN > LINES THEN LN = LINES
        IF LN < 1 THEN LN = 1
        OLD.START = 0
*               GO 12000
        GOTO 12001
      END
    CASE ECD.RET.VALUE = 'S'
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 13000
      N = N - 1
      GOTO 12100
    * T25978 ^
    CASE ECD.RET.VALUE = 'F'
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      ECD.SCRN.NO = 2
      ECD.ACTION = 2
      CALL SCRN.EDIT
      GOTO 1
    CASE 1
      GOTO 12100
  END CASE
  GOTO 12100
*
13000 *
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 13999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF SEC.MENUS.LIST<1,N> # " " THEN
*T28080      P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""
      P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENUS.LIST<1,N>'L#20'
      P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.OPTIONS<1,N>'R#3'
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      READ MENU.REC FROM PRIMAC.MENUS,SEC.MENUS.LIST<1,N> ELSE
        MENU.DESC = 'Invalid'
        GOTO 13025
      END
      MCT = 0
      FOR ZZ = 2 TO DCOUNT(MENU.REC,AM)
        IF MENU.REC<ZZ,1> # 'C' THEN
          MCT += 1
          IF MCT = SEC.MENU.OPTIONS<1,N> THEN
            MENU.DESC = MENU.REC<ZZ,3>
            GOTO 13025
          END
        END
      NEXT ZZ
      MENU.DESC = 'Invalid'
13025 *
      P_X  = 33 ; P_Y = SLN ; P_VALUE = MENU.DESC'L#30' ; P_OPT = ""
      P_X  := AM:65 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.QUEUES<1,N>'L#7'
*T22081 v
      P_X  := AM:76 ; P_Y := AM:SLN ; P_VALUE := AM:SEC.MENU.QUEUE.LSR<1,N>
*T22081 ^
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LCT = LCT + 1
    END 
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
13999 *
  RETURN
*
14000 *
  GOSUB 13000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
14100*
  X = 6; Y = SLN; TYP = 1; MAXL = 20; HMSG = "Menu Name"; O.R = 'O'
*  IF SEC.MENUS.LIST<1,LN> # "" THEN
*    DEFAULT = SEC.MENUS.LIST<1,LN>
*  END ELSE
  DEFAULT = MENU.DEFAULT
*  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF ECD.RET.VALUE = "A" THEN
      SEC.MENUS.LIST = DELETE(SEC.MENUS.LIST,1,LN,0)
      SEC.MENU.OPTIONS = DELETE(SEC.MENU.OPTIONS,1,LN,0)
      SEC.MENU.QUEUES = DELETE(SEC.MENU.QUEUES,1,LN,0)
*T22081 v
      SEC.MENU.QUEUE.LSR = DELETE(SEC.MENU.QUEUE.LSR,1,LN,0)
*T22081 ^
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    OLD.START = 0
    GOTO 14999
  END
*T28448
  IF VALUE = "" THEN 
     ERRMSG = "THERE IS NO BLANK MENU ON FILE TRY AGAIN !";GOSUB 91000; GOTO 14100
  END
*T28448
  READ MENU.REC FROM PRIMAC.MENUS,VALUE ELSE
    ERRMSG = VALUE:" IS NOT ON FILE TRY AGAIN !"; GOSUB 92000; GOTO 14100
  END
  SEC.MENUS.LIST<1,LN> = VALUE
  MENU.DEFAULT = VALUE
*
14200*
  X = 28; Y = SLN; TYP = 3; MAXL = 3; O.R = "O"; HMSG = "Menu Option"
  IF SEC.MENU.OPTIONS<1,LN> # "" THEN
    DEFAULT = SEC.MENU.OPTIONS<1,LN>
  END ELSE
    DEFAULT = ''
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 14100
  MCT = 0
  MPTR = 1    ;* T21361
  FOR ZZ = 2 TO DCOUNT(MENU.REC,AM)
    IF MENU.REC<ZZ,1> # 'C' THEN
      MCT += 1
      IF MCT = VALUE THEN
        MENU.DESC = MENU.REC<ZZ,3>
        MPTR = ZZ      ;* 21361
        GOTO 14225
      END
    END
  NEXT ZZ
  ERRMSG = 'Menu Option Not Found, Try Again!!'
  GOSUB 92000 ; GOTO 14200
14225 *
  FOR XYZ = 1 TO DCOUNT(SEC.MENUS.LIST,VM)
    IF (VALUE = SEC.MENU.OPTIONS<1,XYZ>) AND (SEC.MENUS.LIST<1,XYZ> = SEC.MENUS.LIST<1,LN>) AND (XYZ # LN) THEN
      ERRMSG = 'MENU OPTION ALREADY DEFINED'
      GOSUB 92000 ; GOTO 14200
    END
  NEXT XYZ
*T21361 v
  IF MENU.REC<MPTR,1>[1,2] = "M." THEN
    ERRMSG = 'THIS IS A MENU ITEM, CANNOT ASSIGN PRINTER'
    GOSUB 92000 ; GOTO 14200
  END
*T21361 ^
  P_X  = 33 ; P_Y = SLN ; P_VALUE = MENU.DESC'L#30' ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  SEC.MENU.OPTIONS<1,LN> = VALUE
*
14300*
  X = 65; Y = SLN; TYP = 1; MAXL = 7; O.R = "O"; HMSG = "Print Queue"
  IF SEC.MENU.QUEUES<1,LN> # "" THEN
    DEFAULT = SEC.MENU.QUEUES<1,LN>
  END ELSE
    DEFAULT = 'lp0'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    P_X  = 33 ; P_Y = SLN ; P_VALUE = SPACE(30) ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 14100
  END
  LOCATE VALUE IN CHKQUE,1 SETTING P ELSE
    ERRMSG = 'Invalid Print Queue, Try Again'
    GOSUB 92000
    GOTO 14300
  END
  SEC.MENU.QUEUES<1,LN> = VALUE
  LINES = COUNT(SEC.MENUS.LIST,VM) + (SEC.MENUS.LIST # '')
*T22081 v
*
**  This code will allow them to choose if it is laser forms
**  so the printing programs will use laser forms logic.
*
14400*
  X = 76; Y = SLN; TYP = 8; MAXL = 1; O.R = "O"; HMSG = "A 'Y' will make programs using Forms use laser printer settings."
      *
  IF SEC.MENU.QUEUE.LSR<1,LN> # '' THEN
    DEFAULT = SEC.MENU.QUEUE.LSR<1,LN>
  END ELSE
    DEFAULT = 'N'
  END
      *
  CALL EDIT.SUB
      *
  SEC.MENU.QUEUE.LSR<1,LN> = VALUE
  LINES = COUNT(SEC.MENUS.LIST,VM) + (SEC.MENUS.LIST # '')
*T22081 ^
*
14999*
  RETURN
*
*--- GET LINE NUMBER
*
15000*
  GOSUB 13000
  ECD.MINV = START.LINE
  ECD.MAXV = LAST.LINE
  ECD.NUM = 30
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
  RETURN
*
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
