      SUBROUTINE GET.FISCAL.MONTH(CONO,POSTING.MON,HEADING,CTL.KEY,FISCAL)
*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - GET.FISCAL.MONTH
* BY          - WALID YAMOUT, C.B.A
* DATE        - 10/11/84
* DESCRIPTION -
*          This Subroutine display a screen to input the Posting Month,
*     and also display the current period and endig date of that period.
*     Company number, the Heading of the screen and the Key for the Control
*     file need to be passed to this Subroutine and it return value as the
*     variable POSTING.MON, a check for END is needed in the main program.
*     Example for the calling statment :
*     CALL GET.FISCAL.MONTH(COMPANY.NUMBER,POSTING.MON,"POSTING PROCESS","JCFISCAL",CO.LAST.FISCAL)
*     NOTE the heading is POSTING PROCESS, and the key for the control file
*     is the nnnJCFISCAL. Where nnn is the company number.
*          Also, this program allowes to input the current period and the
*     next two periods. It do not allow to input a period that been closed.
*          The arguement FISCAL is from COMPANY file CO.LAST.FISCAL
*ENDDOC
**************************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
**** INTITIALIZATION
*
      CURR = ""
      REC = ""
      REC.DATES = ""
      ERRMSG = ""
      IF FISCAL < 12 OR FISCAL > 13 THEN
         ERRMSG = "INVALID LAST FISCAL PERIOD ":FISCAL:" IN COMPANY FILE"
         GOTO 91000
      END
      READ REC FROM CONTROL,CONO:CTL.KEY ELSE
         ERRMSG = "CANNOT LOCATE CONTROL ":CTL.KEY
         GOTO 91000
      END
      READ REC.DATES FROM CONTROL,CONO:"SALESDATES" ELSE
         ERRMSG = "CANNOT LOCATE CONTROL SALESDATES"
         GOTO 91000
      END
* 
***** INT ECD.RT.VALUE AND PRINT SCREEN 
* 
      LE.SP = INT((40-LEN(HEADING))/2)
      IF LE.SP < 0 THEN LE.SP = 0
      SCV.REC(1)<1> = STR(" ",LE.SP):HEADING
      CURR = REC<1>
      IF CURR < 1 OR CURR > FISCAL THEN
         ERRMSG = "INVALID CURRENT PERIOD"; GOTO 91000
      END
      SCV.REC(2)<1>=CURR
      SCV.REC(4)<1>=REC<2>
      ECD.ACTION=3;CALL SCRN.EDIT
      ECD.NUM = 5
      ECD.DEFAULT = CURR
      BEGIN CASE
         CASE CURR < FISCAL - 1
            ECD.VALDAT = STR("0",(2-LEN(CURR))):CURR:","
            ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+1))):(CURR+1):","
            ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+2))):(CURR+2)
         CASE CURR = FISCAL - 1
            ECD.VALDAT = (FISCAL - 1):",":FISCAL:",01"
         CASE CURR = FISCAL
            ECD.VALDAT = FISCAL:",01,02"
      END CASE
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END" OR NOT(NUM(ECD.RET.VALUE))
            TEMP = "END"
         CASE ECD.RET.VALUE > 0 AND ECD.RET.VALUE < FISCAL + 1
            TEMP.DATE = OCONV(REC.DATES<ECD.RET.VALUE+1,1>, "D/")
            TEMP = TEMP.DATE[7,4]
            IF CURR > (FISCAL - 2) AND ECD.RET.VALUE < 3 THEN TEMP = TEMP + 1
            TEMP = TEMP:ECD.RET.VALUE
         CASE 1
            TEMP = "END"
      END CASE
      POSTING.MON = TEMP
      GOTO 999999
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000* 
*    PRINT @(0,23) : CL : ERRMSG : 
*    INPUT XX,1 : 
*    PRINT @(0,23) : CL : 
      POSTING.MON = "END"
999999* 
      ECD.ACTION=99;CALL SCRN.EDIT
      RETURN
   END
