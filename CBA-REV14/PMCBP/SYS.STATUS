*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* PROGRAM      - SYS.STATUS
* BY           - WALID YAMOUT, C.B.A
* DATE         - 08/13/85
* DESCRIPTION   -
*T21177 diane 01/23/1997 * REV11 UPG ADD CLOSE
*T23170 rik 08/12/1998 * (GUI) ERROR BOX WHEN ENDING OUT OF ENDING DATE
*                        PROMPT.
*T23278 markt 01/12/1999 * Make fiscal data multi-value by division.
*T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB,ST).
*********************************************************************
*
*---- Data structure file libraries
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
   PROMPT ""
*
   PROCREAD BUFFER ELSE
      ERRMSG = "Must be executed from a PROC"
      GOSUB 91000; GOTO 99999
   END
   ERRMSG = ""
   LINE = "END"
*
*---- Open files
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "Cannot open the COMPANY file"; GOTO 93000
   END
   OPEN "","PMC.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "Cannot open the PMC.SCREENS file"; GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot open the CONTROL file"; GOTO 93000
   END
*
*---- Get company
*
   CONO = ""; MAT COMP.REC = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99990
*
*---- Get fiscal period information
*
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   MATREAD FISCAL.REC FROM CONTROL, CONO:"FISCAL" ELSE
      ERRMSG = "Cannot locate CONTROL, ":CONO:"FISCAL"; GOTO 93000
   END
   READ SALESDATES FROM CONTROL, CONO:"SALESDATES" ELSE
      ERRMSG = "Cannot locate CONTROL, ":CONO:"SALESDATES"; GOTO 93000
   END
   READ OPENDATES FROM CONTROL, CONO:"OPENDATES" ELSE
      ERRMSG = "Cannot locate CONTROL, ":CONO:"OPENDATES"; GOTO 93000
   END
   IF NOT(NUM(FR.CURR.PER)) OR LEN(FR.CURR.PER) # 6 THEN
      ERRMSG = "Invalid period (":FR.CURR.PER:") in CONTROL, ":CONO:"FISCAL"; GOTO 93000
   END
   GLS.MN = FR.CURR.PER[5,2]
   IF GLS.MN < 1 OR GLS.MN > NUM.PERIODS THEN
      ERRMSG = "Invalid period (":FR.CURR.PER:") in CONTROL, ":CONO:"FISCAL"; GOTO 93000
   END
***** T23278 v
   READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
      GOTO 93000
   END
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"
      GOTO 93000
   END
***** T23278 ^
*
*---- Setup the screen and SCRN.EDIT subroutine
*
5 *
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = "SYS.STATUS"
   ECD.ACTION = 1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION = 2; CALL SCRN.EDIT
*
   BEGIN.PAGE = 10
   PAGE.SIZE = 10
   LINE.SPACE = 1
   LN = 1
   OLD.START.LINE = 0
*
*---- Setup GLS status
*
   GLS.PR = FR.CURR.PER
   GLS.YR = FR.CURR.PER[1,4]
   GLS.MN = STR("0",2-LEN(GLS.MN)):GLS.MN
   MON = SALESDATES<GLS.MN+1,2>
   IF GLS.MN = NUM.PERIODS THEN
      END.DATE = OCONV(OPENDATES<1>-1,"D/")
      END.DATE = END.DATE[1,6]:END.DATE[7,4] + 1
      END.DATE = ICONV(END.DATE,"D/")
   END ELSE
      END.DATE = OPENDATES<GLS.MN+1> - 1
   END
   SCV.REC(1)<1> = GLS.MN
   SCV.REC(2)<1> = MON
   SCV.REC(3)<1> = END.DATE
***** T23278 v
   ECD.ACTION = 3; CALL SCRN.EDIT
*
*----- Get Division Code for sub system fiscal data display
*
10 *
   IF SECURITY.REC<2> = "N" THEN
      SCV.REC(32)<1> = "ALL"; ECD.ACTION = 5; CALL SCRN.EDIT
      DIV.CODE = "ALL"; *T23278
      POS = 1
      GOTO 110
   END
100 *
   ECD.NUM = 32; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN
      GOTO 99990
   END
   DIV.CODE = ECD.RET.VALUE
   LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
      ERRMSG = "INVALID DIVISION CODE"
      GOSUB 91000; GOTO 100
   END
110 *
***** T23278 ^
*
*---- Setup GLS sub systems status
*
   READ REC FROM CONTROL, CONO:"JE":GLS.PR ELSE
***** T23278 v
*      REC = "CLOSED"
*      REC<2> = END.DATE
      REC = ''
      REC<1,POS> = "CLOSED"
      REC<2,POS> = END.DATE
***** T23278 ^
   END
   P.SYS = "GLS"
   P.SRC = "JE"
   P.DESC = "Journal Entries"
   P.USE = "Y"
   P.LNK = "Y"
***** T23278 v
*  P.STATUS = REC<1>
*  P.DATE = REC<2>
   IF REC<1,POS> = "" THEN 
      P.STATUS = "CLOSED"
      P.DATE = END.DATE
   END ELSE
      P.STATUS = REC<1,POS>
      P.DATE = REC<2,POS>
   END
***** T23278 ^
   P.YR = GLS.YR
   P.MON.NO = GLS.MN
   P.MON = MON
*
   READ REC FROM CONTROL, CONO:"JE.REVERSE":GLS.PR ELSE
***** T23278 v
*      REC = "CLOSED"
*      REC<2> = END.DATE
      REC<1,POS> = "CLOSED"
      REC<2,POS> = END.DATE
***** T23278 ^
   END
   P.SYS<2> = "GLS"
   P.SRC<2> = "VJ"
   P.DESC<2> = "Reversing Journal Entries"
   P.USE<2> = "Y"
   P.LNK<2> = "Y"
***** T23278 v
*  P.STATUS<2> = REC<1>
*  P.DATE<2> = REC<2>
   IF REC<1,POS> = "" THEN 
      P.STATUS<2> = "CLOSED"
      P.DATE<2> = END.DATE
   END ELSE
      P.STATUS<2> = REC<1,POS>
      P.DATE<2> = REC<2,POS>
   END
***** T23278 ^
   P.YR<2> = GLS.YR
   P.MON.NO<2> = GLS.MN
   P.MON<2> = MON
*
   READ REC FROM CONTROL, CONO:"JE.RECUR":GLS.PR ELSE
***** T23278 v
*      REC = "CLOSED"
*      REC<2> = END.DATE
      REC<1,POS> = "CLOSED"
      REC<2,POS> = END.DATE
***** T23278 ^
   END
   P.SYS<3> = "GLS"
   P.SRC<3> = "RJ"
   P.DESC<3> = "Recurring Journal Entries"
   P.USE<3> = "Y"
   P.LNK<3> = "Y"
***** T23278 v
*  P.STATUS<3> = REC<1>
*  P.DATE<3> = REC<2>
   IF REC<1,POS> = "" THEN 
      P.STATUS<3> = "CLOSED"
      P.DATE<3> = END.DATE
   END ELSE
      P.STATUS<3> = REC<1,POS>
      P.DATE<3> = REC<2,POS>
   END
***** T23278 ^
   P.YR<3> = GLS.YR
   P.MON.NO<3> = GLS.MN
   P.MON<3> = MON
   READ REC FROM CONTROL, CONO:"COA.DIST" THEN
      IF REC<3> < GLS.PR THEN
         REC<1> = "ENTERED"
         REC<2> = END.DATE
         REC<3> = GLS.PR
      END
   END ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
      REC<3> = GLS.PR
   END
*
   P.SYS<4> = "GLS"
   P.SRC<4> = "DJ"
   P.DESC<4> = "Re-Distribution Journal Entries"
   P.USE<4> = "Y"
   P.LNK<4> = "Y"
   P.YR<4> = GLS.YR
   P.STATUS<4> = REC<1>
   P.MON.NO<4> = REC<3>[5,2]
   P.MON<4> = SALESDATES<(REC<3>[5,2]+1),2>
   P.DATE<4> = REC<2>
*
   P.SYS<5> = "GLS"
   P.DESC<5> = "End Of Month File Backup"
   P.USE<5> = "Y"
   P.LNK<5> = "Y"
   P.YR<5> = GLS.YR
   TAPE.PER.ID = CONO:GLS.YR:"GLS.TAPE"
   READ TAPE.PERIOD FROM CONTROL, TAPE.PER.ID ELSE TAPE.PERIOD = ""
   IF TAPE.PERIOD<GLS.MN> = "" THEN
      P.STATUS<5> = "ENTERED"
      FND = 0
      FOR I = GLS.MN TO 1 STEP -1 WHILE FND = 0
         IF TAPE.PERIOD<I> # "" THEN FND = I
      NEXT I
      IF FND = 0 THEN
         FND = "01"
         TAPE.PERIOD<1> = OPENDATES<1>
      END
      P.MON.NO<5> = FND
      P.MON<5> = SALESDATES<FND+1,2>
      P.DATE<5> = TAPE.PERIOD<FND>
      NO.CLOSE = 1
   END ELSE
      P.STATUS<5> = "CLOSED"
      P.MON.NO<5> = GLS.MN
      P.MON<5> = MON
      P.DATE<5> = TAPE.PERIOD<GLS.MN>
   END
*
*---- Setup the modules status
*
   SYS = "JCS"; SRC = "SJ"
   LINES = 5; SYS.FSC = "JCFISCAL"; LNK = CO.GL.LINK<1,6>
   IF CO.JCS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Job Sales Entries"
   GOSUB 1000
*
   LINES = LINES + 1
   P.SYS<LINES> = "JCS"
   P.SRC<LINES> = "WP"
   P.DESC<LINES> = "Work In Process Entries"
   P.USE<LINES> = P.USE<LINES-1>
   P.LNK<LINES> = P.LNK<LINES-1>
   P.STATUS<LINES> = P.STATUS<LINES-1>
   P.YR<LINES> = P.YR<LINES-1>
   P.MON.NO<LINES> = P.MON.NO<LINES-1>
   P.MON<LINES> = P.MON<LINES-1>
   P.DATE<LINES> = P.DATE<LINES-1>
*
   SYS = "OPS"; SRC = "FJ"
   SYS.FSC = "OPFISCAL"; LNK = CO.GL.LINK<1,7>
   IF CO.OPS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Finished Goods Sales Entries"
   GOSUB 1000
*
   SYS = "ICS"; SRC = "IA"
   SYS.FSC = "ICFISCAL"; LNK = CO.GL.LINK<1,5>
   IF CO.ICS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Inventory Adjustment Entries"
   GOSUB 1000
*
   SYS = "ARS"; SRC = "MJ"
   SYS.FSC = "ARSFISCAL"; LNK = CO.GL.LINK<1,1>
   IF CO.ARS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Manual Sales Entries"
   GOSUB 1000
*
   SRC = "CR"; SYS.FSC = "ARCFISCAL"
   HDR = "Cash Receipts Entries"
   GOSUB 1000
*
   SYS = "APS"; SRC = "VR"
   SYS.FSC = "APVFISCAL"; LNK = CO.GL.LINK<1,2>
   IF CO.APS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Voucher Register Entries"
   GOSUB 1000
*
   SRC = "CD"; SYS.FSC = "APDFISCAL"
   HDR = "Cash Disbursment Entries"
   GOSUB 1000
*
   SYS = "PRS"; SRC = "PR"; LNK = CO.GL.LINK<1,3>
   SYS.FSC = "PRFISCAL"
   IF CO.PRS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Distribution Summary Entries"
   GOSUB 1000
*
   SYS = "FAS"; SRC = "FA"; LNK = CO.GL.LINK<1,4>
   SYS.FSC = "FAFISCAL"
   IF CO.FAS = "Y" THEN USED = "Y" ELSE USED = "N"
   HDR = "Fixed Assets Entries"
   GOSUB 1000
*
   ECD.ACTION = 3; CALL SCRN.EDIT; GOSUB 1900
*
*---- Prompt for ending date
*
   ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
*T23170 v
*  IF ECD.RET.VALUE # "END" THEN END.DATE = ECD.RET.VALUE
   IF ECD.RET.VALUE = "END" THEN GOTO 99990
*T23170 ^
*
*---- Prompt line routine
*
   LOOP
***** T23278 v
      IF SECURITY.REC<2> = "N" THEN
         ECD.NUM = 31
      END ELSE
         ECD.NUM = 33
      END
***** T23278 ^
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E"
            OPTION = "END"
         CASE OPTION = "S"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 1900
      * T25978 v
         CASE OPTION = 'SR'
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 1900
         CASE OPTION = 'ST'
            LN = 1
            GOSUB 1900
         CASE OPTION = 'SB'
            LN = LINES
            GOSUB 1900
      * T25978 ^
         CASE OPTION = "C"
            OPTION = "END"
            LINE<1> = CONO
            LINE<2> = CO.NAME
            LINE<3> = GLS.PR
            LINE<4> = OCONV(END.DATE,"D2/")
            LINE<8> = DIV.CODE;* T23278
***** T23278 v
         CASE OPTION = "D" AND ECD.NUM = 33
            MATREAD FISCAL.REC FROM CONTROL, CONO:"FISCAL" ELSE
               ERRMSG = "Cannot locate CONTROL, ":CONO:"FISCAL"; GOTO 93000
            END
            GOTO 5
***** T23278 ^
      END CASE
   WHILE OPTION # "END" DO REPEAT
   GOTO 99990
*
*---- Generate module status subroutine
*
1000 MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FSC THEN
      BEGIN CASE
***** T23278 v
*          CASE NOT(NUM(FR.CURR.PER)) OR LEN(FR.CURR.PER) # 6
         CASE NOT(NUM(FR.CURR.PER<1,POS>)) OR LEN(FR.CURR.PER<1,POS>) # 6
***** T23278 ^
            YR = ""; PER = ""; DESC = ""; PDATE = ""
            STATUS = "INVALID"
***** T23278 v
*          CASE FR.NEXT.PER # ""
         CASE FR.NEXT.PER<1,POS> # ""
***** T23278 ^
            BEGIN CASE
***** T23278 v
*                  CASE FR.PRINT = "P"
               CASE FR.PRINT<1,POS> = "P"
***** T23278 ^
                  STATUS = "PRINTED"
***** T23278 v
*                  CASE FR.PRINT = "X"
               CASE FR.PRINT<1,POS> = "X"
***** T23278 ^
                  STATUS = "ABORTED"
               CASE 1
                  STATUS = "ENTERED"
            END CASE
***** T23278 v
*              YR = FR.CURR.PER[1,4]
*              PER = FR.CURR.PER[5,2]
            YR = FR.CURR.PER<1,POS>[1,4]
            PER = FR.CURR.PER<1,POS>[5,2]
***** T23278 ^
            DESC = SALESDATES<PER+1,2>
            PDATE = SALESDATES<PER+1,1>
            IF YR # GLS.YR THEN
               PYR = OCONV(PDATE,"D/")
               PMN = PYR[1,2]; PDY = PYR[4,2]
               PYR = PYR[7,4]; DYR = PYR - (GLS.YR - YR)
               PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
               IF PMN = OCONV(ICONV(PMN:"/":PDY+1:"/":PYR,"D/"),"D/")[1,2] THEN
                  PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
               END ELSE
                  PDY = 31
                  LOOP
                     PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
                  WHILE PMN # OCONV(PDATE,"D/")[1,2] DO
                     PDY = PDY -1
                  REPEAT
               END
            END
         CASE 1
            STATUS = "CLOSED"
***** T23278 v
*              YR = FR.CURR.PER[1,4]
*              PER = FR.CURR.PER[5,2] - 1
            YR = FR.CURR.PER<1,POS>[1,4]
            PER = FR.CURR.PER<1,POS>[5,2] - 1
***** T23278 ^
            IF PER < 1 THEN
               YR = YR - 1
               PER = 12
               DESC = SALESDATES<13,2>
               PDATE = SALESDATES<13,1>
            END ELSE
               DESC = SALESDATES<PER+1,2>
               PDATE = SALESDATES<PER+1,1>
            END
            IF YR # GLS.YR THEN
               PYR = OCONV(PDATE,"D/")
               PMN = PYR[1,2]; PDY = PYR[4,2]
               PYR = PYR[7,4]; DYR = PYR - (GLS.YR - YR)
               PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
               IF PMN = OCONV(ICONV(PMN:"/":PDY+1:"/":PYR,"D/"),"D/")[1,2] THEN
                  PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
               END ELSE
                  PDY = 31
                  LOOP
                     PDATE = ICONV(PMN:"/":PDY:"/":DYR,"D/")
                  WHILE PMN # OCONV(PDATE,"D/")[1,2] DO
                     PDY = PDY -1
                  REPEAT
               END
            END
      END CASE
   END ELSE
      YR = ""; PER = ""; DESC = ""; PDATE = ""
      BEGIN CASE
         CASE USED # "Y"
            STATUS = "UNAVAIL"
         CASE LNK # "Y"
            STATUS = "NO LINK"
         CASE 1
            STATUS = "UNKNOWN"
      END CASE
   END
   LINES = LINES + 1
   P.SYS<LINES> = SYS
   P.SRC<LINES> = SRC
   P.DESC<LINES> = HDR
   P.USE<LINES> = USED
   IF LNK = "Y" THEN
      P.LNK<LINES> = "Y"
   END ELSE
      P.LNK<LINES> = "N"
   END
   P.STATUS<LINES> = STATUS
   P.YR<LINES> = YR
   P.MON.NO<LINES> = PER
   P.MON<LINES> = DESC
   P.DATE<LINES> = PDATE
   RETURN
*
*---- Scrolling subroutine
*
1900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 1990
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R%2" ; P_OPT = "CL"
      P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:P.SYS<N> "L#3"
      P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:P.SRC<N> "L#3"
      P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:P.DESC<N> "L#35"
      P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:P.USE<N> "L#1"
      P_X  := AM:49 ; P_Y := AM:SLN ; P_VALUE := AM:P.LNK<N> "L#1"
      P_X  := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM:P.STATUS<N> "L#7"
      P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:P.YR<N> "R#4"
      P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:P.MON.NO<N> "R%2"
      P_X  := AM:67 ; P_Y := AM:SLN ; P_VALUE := AM:P.MON<N> "L#3"
      P_X  := AM:71 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(P.DATE<N>,"D2/") "L#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
1990 RETURN
*
*---- Error message routine
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23):CL:ERRMSG:
*       INPUT ERRMSG,1:
*       PRINT @(0,23):CL:
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23):CL:ERRMSG:
*       INPUT ERRMSG,1:
*       PRINT @(0,23):CL:
99990 PROCWRITE LINE
   ECD.ACTION = 99; CALL SCRN.EDIT
99999 END
