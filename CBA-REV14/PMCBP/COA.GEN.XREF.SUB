   SUBROUTINE COA.GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX)
*REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* T28098 cmykleb 05/05/2004 * Change pgm to use GEN.XREF.SUB
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
   IF PC.PORT.TYPE = "termulator" THEN
      CALL COA_GNXRF_SUB_TU(MAT GEN.XREF.REC,PREFIX)
      GOTO 99990
   END
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
   DIM KSL.DATA(25)
*
   PROMPT ""
*
   BEGIN CASE
      CASE GXR.SRCH.ID = ''
         GXR.ACTION = 'X'
         GOTO 99990
      CASE GXR.ACTION = 'D'
         ALL.NAMES = ''
         CALL GET.NAME(GXR.SRCH.ID,ALL.NAMES,PREFIX)
         NAME.CNT = COUNT(ALL.NAMES,VM) + (ALL.NAMES # '')
         IF NAME.CNT < 1 THEN
            GXR.ACTION = 'X'
            GOTO 99990
         END
         READ ITEM FROM COA.XREF, GXR.CO : ALL.NAMES<1,1> ELSE
            GXR.ACTION = 'X'
            GOTO 99990
         END
*        REC.IDS = ITEM<GXR.LOC>
         REC.IDS = ITEM<1>
         FOR MLP = 1 TO NAME.CNT WHILE REC.IDS # ""
            READ ITEM FROM COA.XREF, GXR.CO : ALL.NAMES<1,MLP> ELSE
               REC.IDS = ''; GOTO 199
            END
            CNT = COUNT(REC.IDS<1>,VM) + (REC.IDS<1> # "")
            FOR SLP = CNT TO 1 STEP -1
*              LOCATE REC.IDS<1,SLP> IN ITEM<GXR.LOC>,1 SETTING FND ELSE
               LOCATE REC.IDS<1,SLP> IN ITEM<1>,1 SETTING FND ELSE
                  REC.IDS = DELETE(REC.IDS,1,SLP,0)
               END
            NEXT SLP
199      NEXT MLP
      CASE GXR.ACTION = "C"
         MATREAD AT.REC FROM ACCT.TYPE, GXR.SRCH.ID ELSE
            GXR.ACTION = 'X'
            GOTO 99990
         END
         REC.IDS = AT.CATG
      CASE GXR.ACTION = "S"
         MATREAD AC.REC FROM ACCT.CATG, GXR.SRCH.ID ELSE
            GXR.ACTION = 'X'
            GOTO 99990
         END
         REC.IDS = AC.SUB
      CASE GXR.ACTION = 'A'
         MATREAD CAS.REC FROM CATG.AND.SUB, GXR.CO : GXR.SRCH.ID ELSE
            GXR.ACTION = 'X'
            GOTO 99990
         END
         GXR.ACTION = "D"
      CASE 1
         GXR.ACTION = 'X'
         GOTO 99990
   END CASE
   IF REC.IDS = '' THEN
      GXR.ACTION = 'X'
      GOTO 99990
   END
   PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
   CALL TCC.SUB1(PORT.NO,MAT TCC.PORT.REC,MAT TCC.REC,MAT GRAPH.REC,MAT VIDEO.REC,MAT KSEL.REC,MAT HBOX.REC)
*
   MAT KSL.REC = ""
   KSL.ESC = KSEL.ESC
   KSL.SCROLL = 1
   KSL.ETX.SEL = ETX.DSL
   KSL.ETX.OFF = ETX.OFF
   KSL.HROW = "B"
   UNKNOWN = 'Unknown'
   TOP.LINE = "PRIMAC" : SPACE(17) : "Account Cross Reference Search" : SPACE(17) : "[08.1]"
   DESC.LEN = 43
   F.M = "L#":DESC.LEN
500*
   REC.CNT = COUNT(REC.IDS,VM) + 1
   BOX.ROWS = 19
   IF REC.CNT + 3 < BOX.ROWS THEN
      BOX.ROWS = REC.CNT + 3
   END
   BOX.COLS = 78; BOX.CLEAR = 1
   PAGE.SIZE = BOX.ROWS - 3
   KSL.PAGES = INT(REC.CNT / PAGE.SIZE + .99)
   IF KSL.PAGES > 1 THEN
      BOX.HROW = 1
   END ELSE
      BOX.HROW = 0
   END
   BOX.X = "C"; BOX.Y = "C"
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
   BEGIN.PAGE = BOX.Y + 3
   P_X  = DX-1 ; P_Y = DY ; P_VALUE = ETX.TOP.OFF:TOP.LINE:ETX.TOP.OFF ; P_OPT = ""
   P_X  := AM:DX-1 ; P_Y := AM:DY ; P_VALUE := AM:ETX.TOP
   P_X  := AM:DX ; P_Y := AM:DY+1 ; P_VALUE := AM:"Sel":ETX.OFF
   P_X  := AM:DX-1 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+4 ; P_Y := AM:DY+1 ; P_VALUE := AM:"T":ETX.OFF
   P_X  := AM:DX+3 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+6 ; P_Y := AM:DY+1 ; P_VALUE := AM:"Cat":ETX.OFF
   P_X  := AM:DX+5 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+10 ; P_Y := AM:DY+1 ; P_VALUE := AM:"Sub":ETX.OFF
   P_X  := AM:DX+9 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+14 ; P_Y := AM:DY+1 ; P_VALUE := AM:"CFP":ETX.OFF
   P_X  := AM:DX+13 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+18 ; P_Y := AM:DY+1 ; P_VALUE := AM:"Account Number":ETX.OFF
   P_X  := AM:DX+17 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+33 ; P_Y := AM:DY+1 ; P_VALUE := AM:SPACE(16):"Description":SPACE(16):ETX.OFF
   P_X  := AM:DX+32 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
   KSL.ROW = BEGIN.PAGE
   KSL.COL = 1
   KSL.COLS = 1
   KSL.PGNO = 1
   MAT KSL.YX = ""
   GOSUB 1900
700*
   MORE = 1; MORE.XREF = 0
   LOOP
      CALL @KSEL.SUB(MAT TCC.REC, MAT GRAPH.REC, MAT VIDEO.REC, MAT KSEL.REC, MAT KSL.REC, MAT KSL.YX)
      BEGIN CASE
         CASE KSL.SEL = KSL.ESC
            GXR.ACTION = ""
            MORE = 0
         CASE KSL.SEL = KSEL.SEL
            MORE = 0
            BEGIN CASE
               CASE GXR.ACTION = "C"
                  MORE.XREF = 1
                  GXR.SRCH.ID = KSL.DATA(KSL.ROW)<KSL.COL>
                  GXR.ACTION = "S"
                  MATREAD AC.REC FROM ACCT.CATG, GXR.SRCH.ID THEN
                     REC.IDS = AC.SUB
                  END ELSE
                     REC.IDS = ""
                  END
*           CASE GXR.ACTION = "S" AND GXR.LOC > 0
               CASE GXR.ACTION = "S"
                  MORE.XREF = 1
                  GXR.ACTION = "D"
                  MATREAD CAS.REC FROM CATG.AND.SUB, GXR.CO:GXR.SRCH.ID:KSL.DATA(KSL.ROW)<KSL.COL> THEN
                     REC.IDS = CAS.ACCT
                  END ELSE
                     REC.IDS = ""
                  END
               CASE GXR.ACTION = "S"
                  GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>
               CASE 1
                  GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>
            END CASE
         CASE KSL.SEL = "SF"
            GOSUB 1900
         CASE KSL.SEL = "SR"
            GOSUB 1900
         CASE KSL.SEL = "ST"
            GOSUB 1900
         CASE KSL.SEL = "SB"
            GOSUB 1900
         CASE NOT(NUM(KSL.SEL))
            ERRMSG = '* * INVALID SELECTION * *'
            GOSUB 91000
         CASE KSL.SEL < 1 OR KSL.SEL > REC.CNT
            ERRMSG = '* * INVALID SELECTION * *'
            GOSUB 91000
         CASE GXR.ACTION = "C"
            GXR.SRCH.ID = REC.IDS<1,KSL.SEL>
            MORE = 0; MORE.XREF = 1
            GXR.ACTION = "S"
            MATREAD AC.REC FROM ACCT.CATG, GXR.SRCH.ID THEN
               REC.IDS = AC.SUB
            END ELSE
               REC.IDS = ""
            END
*        CASE GXR.ACTION = "S" AND GXR.LOC > 0
         CASE GXR.ACTION = "S"
            MORE = 0; MORE.XREF = 1
            GXR.ACTION = "D"
            MATREAD CAS.REC FROM CATG.AND.SUB, GXR.CO:GXR.SRCH.ID:REC.IDS<1,KSL.SEL> THEN
               REC.IDS = CAS.ACCT
            END ELSE
               REC.IDS = ""
            END
         CASE GXR.ACTION = "S"
            MORE = 0
            GXR.ID = REC.IDS<1,KSL.SEL>
         CASE 1
            MORE = 0
            GXR.ID = REC.IDS<1,KSL.SEL>
      END CASE
   WHILE MORE DO REPEAT
   BOX.CLEAR = 9
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   IF MORE.XREF THEN
      IF REC.IDS = "" THEN
         IF GXR.ACTION = "S" THEN
            ERRMSG = "* * Cannot locate any Sub Categories for this selection * *"
         END ELSE
            ERRMSG = "* * Cannot locate any Accounts for this selection * *"
         END
         GOSUB 91000
         GXR.ACTION = ""; GXR.ID = ""
         GOTO 99990
      END ELSE
         GOTO 500
      END
   END
   GOTO 99990
1900*
   START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > REC.CNT THEN LAST.LINE = REC.CNT
   SLN = BEGIN.PAGE - 1
   BEGIN CASE
      CASE GXR.ACTION = "D"
         FOR V = START.LINE TO LAST.LINE
            SLN = SLN + 1
            IDNO = REC.IDS<1,V>
            MATREAD COA.REC FROM GXR.FILE, GXR.CO:IDNO THEN
               KSL.YX(SLN) = DX + 3
               KSL.DATA(SLN) = IDNO
            END ELSE
               MAT COA.REC = ""; COA.L.DESC = UNKNOWN
            END
            P_X  = DX ; P_Y = SLN ; P_VALUE = V "R#3":ETX.OFF ; P_OPT = ""
            P_X  := AM:DX-1 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.NUM
            P_X  := AM:DX+4 ; P_Y := AM:SLN ; P_VALUE := AM:COA.TYPE "L#1":" ":COA.CATG "L#3":" ":COA.SUB.CATG "L#3":" ":COA.CURR "L#1":COA.FIX "L#1":COA.PROD "L#1":" ":IDNO CO.ACCT.MASK:" ":COA.L.DESC F.M:ETX.OFF
            P_X  := AM:DX+3 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.DHD
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         NEXT V
      CASE GXR.ACTION = "C"
         FOR V = START.LINE TO LAST.LINE
            SLN = SLN + 1
            IDNO = REC.IDS<1,V>
            MATREAD AC.REC FROM ACCT.CATG, IDNO THEN
               KSL.YX(SLN) = DX + 3
               KSL.DATA(SLN) = IDNO
            END ELSE
               MAT AC.REC = ""; AC.DESC = UNKNOWN
            END
            P_X  = DX ; P_Y = SLN ; P_VALUE = V "R#3":ETX.OFF ; P_OPT = ""
            P_X  := AM:DX-1 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.NUM
            P_X  := AM:DX+4 ; P_Y := AM:SLN ; P_VALUE := AM:AC.TYPE "L#1":" ":IDNO "L#3":SPACE(24):AC.DESC F.M:ETX.OFF
            P_X  := AM:DX+3 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.DHD
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         NEXT V
      CASE 1
         FOR V = START.LINE TO LAST.LINE
            SLN = SLN + 1
            IDNO = REC.IDS<1,V>
            MATREAD ASC.REC FROM ACCT.SUB.CATG, IDNO THEN
               KSL.YX(SLN) = DX + 3
               KSL.DATA(SLN) = IDNO
            END ELSE
               MAT ASC.REC = ""; ASC.DESC = UNKNOWN
            END
            P_X  = DX ; P_Y = SLN ; P_VALUE = V "R#3":ETX.OFF ; P_OPT = ""
            P_X  := AM:DX-1 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.NUM
            P_X  := AM:DX+4 ; P_Y := AM:SLN ; P_VALUE := AM:AC.TYPE "L#1":" ":GXR.SRCH.ID "L#3":" ":IDNO "L#3":SPACE(20):ASC.DESC F.M:ETX.OFF
            P_X  := AM:DX+3 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.DHD
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         NEXT V
   END CASE
   LST.V = LAST.LINE - START.LINE + 2
   FOR V = LST.V TO PAGE.SIZE
      SLN = SLN + 1
      KSL.YX(SLN) = ""
      P_X  = DX-1 ; P_Y = SLN ; P_VALUE = ETX.OFF:SPACE(MAX.COLS) ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT V
*
*---- Display lines & pages
*
   BEGIN CASE
      CASE BOX.HROW < 1
      CASE BOX.COLS < 10
      CASE BOX.COLS < 15
         PX = BOX.X + BOX.COLS - 9
         P_X  = PX ; P_Y = BOX.HROW ; P_VALUE = ETX.HHD.OFF:KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF ; P_OPT = ""
         P_X  := AM:PX ; P_Y := AM:BOX.HROW ; P_VALUE := AM:ETX.HHD
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE 1
         PX = BOX.X + BOX.COLS - 14
         P_X  = PX ; P_Y = BOX.HROW ; P_VALUE = ETX.HHD.OFF:"Page ":KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF ; P_OPT = ""
         P_X  := AM:PX ; P_Y := AM:BOX.HROW ; P_VALUE := AM:ETX.HHD
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END CASE
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23):ETX.EHD.OFF:" ":ERRMSG:ETX.EHD.OFF:CL:
*       PRINT @(0,23):ETX.EHD:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
99990*
   CALL TCC.SUB(PORT.NO)
99999*
   RETURN
END
