*COPY>CPYLIB>COM1
**********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM      - DIV.MAINT
*
* BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE         - 09/26/83
*
* DESCRIPTION
*
*T23278 markt 01/12/1999 * Make fiscal data multi-value by division.
*T25978 adelgado 01/29/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*T27209 thompson 01/10/2003 * FIX LOCK PROBLEM ON EXIT FROM MAINT AND
*                             STILL IN SCREEN
*T27690 lross 09/09/2003 * Need to check DIV.SECURITY before update
*                          FISCAL CONTROL RECORDS.
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
***** T23278 v
*COPY>PMC.CPYLIB>FISCAL
DIM FISCAL.LIST(9)
FISCAL.LIST(1) = "APDFISCAL"
FISCAL.LIST(2) = "APVFISCAL"
FISCAL.LIST(3) = "ARCFISCAL"
FISCAL.LIST(4) = "ARSFISCAL"
FISCAL.LIST(5) = "FAFISCAL"
FISCAL.LIST(6) = "ICFISCAL"
FISCAL.LIST(7) = "JCFISCAL"
FISCAL.LIST(8) = "OPFISCAL"
FISCAL.LIST(9) = "PRFISCAL"
***** T23278 ^
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
MAT FILE.VARS = ''
OPEN '', 'PMC.SCREENS' TO M.SCREENS ELSE
   ERRMSG = 'PMC.SCREENS FILE IS MISSING'
   GOTO 93000
END
OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE
   ERRMSG = 'DEPARTMENT FILE IS MISSING'
   GOTO 93000
END
OPEN '', 'DIVISION' TO DIVISION ELSE
   ERRMSG = 'DIVISION FILE IS MISSING'
   GOTO 93000
END
OPEN '', 'PREFIX' TO PREFIX ELSE
   ERRMSG = 'PREFIX FILE IS MISSING'
   GOTO 93000
END
OPEN '', 'CONTROL' TO CONTROL ELSE
   ERRMSG = 'CONTROL FILE IS MISSING'
   GOTO 93000
END
OPEN '', 'COMPANY' TO COMPANY ELSE
   ERRMSG = 'COMPANY FILE IS MISSING'
   GOTO 93000
END
MAT COMP.REC = ''
CONO = ''
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO = 'END' THEN GOTO 99999
******************
* INITIALIZATION *
******************
*
***** T23278 v
MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY FILE RECORD IS MISSING FOR COMPANY ":CONO
   GOTO 93000
END 
*
MATREAD FISCAL.REC FROM CONTROL, CONO:"FISCAL" ELSE
   ERRMSG = "CONTROL FISCAL.REC IS MISSING FOR COMPANY ":CONO
   GOTO 93000
END
*
CURRENT.PERIOD = FR.CURR.PER
CURRENT.DATE = FR.CURR.DATE
***** T23278 ^
*
*T27690 v
READ SEC.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
   SEC.REC = 'N'
   SEC.REC<2> = 'N'
END
*T27690 ^
MAT EDIT.COM.DRIVER = ""
DASHES = STR('-',80)
UNKNOWN = STR('?',30)
OLD.NAME = ''
PAGE.SIZE = 12
BEGIN.PAGE = 8
LINE.SPACE = 1
LINES = 0
OLD.START.LINE = 0
DESC.DEPT = ''
SAVE.DIV.DEPT = ''
*******************
* MAIN PROCESSING *
*******************
100*
ECD.SCRN.CNT = 1
ECD.SCRN.NAME<1> = 'DIV.MAINT'
ECD.ACTION=1;CALL SCRN.EDIT
ECD.SCRN.NO = 1
200*
MAT DIV.REC = ''; SAVE.DIV.DEPT = '' ;DESC.DEPT = ''
MAT SCV.REC = ""
ECD.ACTION=6;CALL SCRN.EDIT
ECD.NUM = 1
ECD.VALDAT.CODE = '4'
ECD.VALDAT.FILE = DIVISION
ECD.PREFIX.ID = CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
   CASE ECD.RET.VALUE = "END"
      GOTO 99999
   CASE ECD.RET.VALUE = ""
      ECD.ACTION = 99
      CALL SCRN.EDIT
      GOTO 99999
   CASE ECD.RET.VALUE = "00"
      ERRMSG = "CANNOT USE GENERAL DIVISION - 00"
*           GOSUB 91000; ERRMSG = "ERR.RESP = (":ERR.RESP ; GOSUB 91000; GOTO 200
      GOSUB 91000; GOTO 200
   CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''
      * T26126 v
      READU DUMMY FROM DIVISION, CONO:ECD.RET.VALUE LOCKED
         ERRMSG = 'DIVISION record is locked by user - ':GETUSERNAME(STATUS())
         GOSUB 91000;GOTO 200 
      END ELSE NULL
      * T26126 ^
      FOR I = 1 TO DIV.REC.SIZE
         DIV.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
      DIV.ID = ECD.RET.VALUE
      SAVE.DIV.DEPT = DIV.DEPT
      GOSUB 20000
      OLD.NAME = DIV.DESC
   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
      IF LEN(ECD.RET.VALUE) > 2 THEN
         ERRMSG = "* * Max length is two digits * *"
         GOSUB 91000; GOTO 200
      END
      * T26126 v
      READU DUMMY FROM DIVISION, CONO:ECD.RET.VALUE LOCKED
         ERRMSG = 'DIVISION record is locked by user - ':GETUSERNAME(STATUS())
         GOSUB 91000;GOTO 200 
      END ELSE NULL
      * T26126 ^
      DIV.ID = ECD.RET.VALUE
      GOSUB 1000
      IF ECD.RET.VALUE = 'END' THEN GOTO 200
      GOSUB 21000
      GOSUB 63000
   CASE 1
      GOTO 200
END CASE
MORE = 1
LOOP
   ECD.NUM = 5
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.ACTION=4;CALL SCRN.EDIT
   REQUEST = ECD.RET.VALUE
   BEGIN CASE
      CASE REQUEST = 'END' OR REQUEST = 'E'
         MORE = 0
      CASE NUM(REQUEST)
         IF REQUEST=1 THEN
            GOSUB 1000
         END
      CASE REQUEST = 'A'
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 10010
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
         GOSUB 11000
      CASE REQUEST = 'C'
         GOSUB 10900
         IF LN.NO THEN
            LN = LN.NO
            GOSUB 10010
         END
      CASE REQUEST = 'D'
         GOSUB 10900
         IF LN.NO THEN
            LN = LN.NO
            SAVE.DIV.DEPT = DELETE(SAVE.DIV.DEPT,1,LN,0)
            DESC.DEPT = DELETE(DESC.DEPT,1,LN,0)
            LINES = DCOUNT(SAVE.DIV.DEPT,VM)
            IF LN > 1 AND LN > LINES THEN LN = LN - 1
            IF LN < 1 THEN LN = 1
            OLD.START.LINE = 0
         END
         GOSUB 11000
      CASE REQUEST = 'S'
         LN = LN + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 11000
      * T25978 v             
      CASE REQUEST = 'SR'     
         LN -= PAGE.SIZE      
         IF LN < 1 THEN LN = 1
         GOSUB 11000          
      CASE REQUEST = 'ST'     
         LN = 1               
         GOSUB 11000          
      CASE REQUEST = 'SB'     
         LN = LINES           
         GOSUB 11000          
      * T25978 ^             
      CASE REQUEST = 'F'
         CNT = DCOUNT(SAVE.DIV.DEPT,VM)
         NEW.DEPT = ''
         PTR = 0
         FOR I = 1 TO CNT
            TEMP = SAVE.DIV.DEPT<1,I>
            LOCATE TEMP IN DIV.DEPT<1>,1 SETTING DIV.FND ELSE
               DEPT.FND = 1
               MATREADU DEPT.REC FROM DEPARTMENT, CONO : TEMP ELSE
                  DEPT.FND = 0
                  ERRMSG = 'CANNOT LOCATE DEPARTMENT # ' : TEMP
                  GOSUB 91000
               END
               IF DEPT.FND THEN
                  LOCATE DIV.ID IN DEPT.DIV<1>,1 BY "AR" SETTING DIV.FND ELSE
                     INS DIV.ID BEFORE DEPT.DIV<1,DIV.FND>
                  END
                  MATWRITE DEPT.REC ON DEPARTMENT, CONO : TEMP
                  PTR = PTR + 1
                  NEW.DEPT<1,PTR> = TEMP
               END
               DIV.FND = 0
            END
            IF DIV.FND THEN
               PTR = PTR + 1
               NEW.DEPT<1,PTR> = TEMP
               DIV.DEPT = DELETE(DIV.DEPT,1,DIV.FND,0)
            END
         NEXT I
         OLD.CNT = DCOUNT(DIV.DEPT,VM)
         NEW.CNT = DCOUNT(NEW.DEPT,VM)
         FOR I = 1 TO OLD.CNT
            DEPT.FND = 1
            MATREADU DEPT.REC FROM DEPARTMENT, CONO : DIV.DEPT<1,I> ELSE DEPT.FND = 0
            IF DEPT.FND THEN
               LOCATE DIV.ID IN DEPT.DIV<1>,1 SETTING DIV.FND ELSE DIV.FND = 0
               IF DIV.FND THEN
                  DEPT.DIV = DELETE(DEPT.DIV,1,DIV.FND,0)
                  MATWRITE DEPT.REC ON DEPARTMENT, CONO : DIV.DEPT<1,I>
               END ELSE
                  RELEASE DEPARTMENT, CONO : DIV.DEPT<1,I>
               END
            END
         NEXT I
         DIV.DEPT = ""
         FOR I = 1 TO NEW.CNT
            LOCATE NEW.DEPT<1,I> IN DIV.DEPT<1>,1 BY "AL" SETTING DEPT.FND ELSE
               INS NEW.DEPT<1,I> BEFORE DIV.DEPT<1,DEPT.FND>
            END
         NEXT I
         MATWRITE DIV.REC ON DIVISION, CONO : DIV.ID
         READU ALL.DIV FROM CONTROL, CONO : "DIVISIONS" ELSE ALL.DIV = ""
         LOCATE DIV.ID IN ALL.DIV<1>,1 BY "AR" SETTING DIV.FND ELSE
            INS DIV.ID BEFORE ALL.DIV<1,DIV.FND>
*T27690 v
            IF SEC.REC<1>='Y' AND SEC.REC<2>='Y' THEN
***** T23278 v
               FOR I = 1 TO 9
                  SYS.FISCAL = FISCAL.LIST(I)
                  BEGIN CASE
                     CASE (SYS.FISCAL = "APDFISCAL" OR SYS.FISCAL = "APVFISCAL") AND CO.APS # "Y"
                     CASE (SYS.FISCAL = "ARCFISCAL" OR SYS.FISCAL = "ARSFISCAL") AND CO.ARS # "Y"
                     CASE SYS.FISCAL = "FAFISCAL" AND CO.FAS # "Y"
                     CASE SYS.FISCAL = "ICFISCAL" AND CO.ICS # "Y"
                     CASE SYS.FISCAL = "JCFISCAL" AND CO.JCS # "Y"
                     CASE SYS.FISCAL = "OPFISCAL" AND CO.OPS # "Y"
                     CASE SYS.FISCAL = "PRFISCAL" AND CO.PRS # "Y"
                     CASE 1
                        MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
                           ERRMSG = SYS.FISCAL:" CONTROL RECORD IS MISSING"
                           GOTO 93000
                        END
*T27690 v
*                       INS CURRENT.PERIOD BEFORE FR.CURR.PER<1,DIV.FND>
                        INS FR.CURR.PER<1,1> BEFORE FR.CURR.PER<1,DIV.FND>
*                       INS CURRENT.DATE BEFORE FR.CURR.DATE<1,DIV.FND>
                        INS FR.CURR.DATE<1,1> BEFORE FR.CURR.DATE<1,DIV.FND>
                        INS "" BEFORE FR.NEXT.PER<1,DIV.FND>
                        INS "" BEFORE FR.NEXT.DATE<1,DIV.FND>
                        INS "" BEFORE FR.PRINT<1,DIV.FND>
                        INS "" BEFORE FR.CLOSE.DATE<1,DIV.FND>
                        INS "" BEFORE FR.D.M.FLG<1,DIV.FND>
                        MATWRITE FISCAL.REC ON CONTROL, CONO : SYS.FISCAL
                  END CASE
               NEXT I
***** T23278 ^
            END
*T27690 ^
         END
         WRITE ALL.DIV ON CONTROL, CONO : "DIVISIONS"
         MORE = 0
   END CASE
   RELEASE DIVISION, CONO:DIV.ID;*T27209
WHILE MORE DO REPEAT
GOTO 200
1000*
ECD.NUM = 2
ECD.ACTION = 4
CALL SCRN.EDIT
DIV.DESC = ECD.RET.VALUE
RETURN
10000*
IF DESC.DEPT = '' THEN
   ACTION = 'A'
   LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 10010
   WHILE LINES > OLD.LINES DO REPEAT
END
LN = 1
GOSUB 11000
RETURN
10010 GOSUB 11000
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100 X = 5
Y = SLN
TYP = 1
MINL = 2
MAXL = 5
O.R = 'O'
DEFAULT = SAVE.DIV.DEPT<1,LN>
CALL EDIT.SUB
IF VALUE = 'END' OR VALUE = '' THEN
   IF DESC.DEPT<1,LN> = '' THEN
      SAVE.DIV.DEPT = DELETE(SAVE.DIV.DEPT,1,LN,0)
      DESC.DEPT = DELETE(DESC.DEPT,1,LN,0)
   END
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   GOTO 10999
END
LOCATE VALUE IN SAVE.DIV.DEPT<1>,1 SETTING FND ELSE FND = 0
IF FND AND VALUE # DIV.DEPT<1,LN> THEN
   ERRMSG = 'DEPARTMENT (':VALUE:') ALREADY USED'
   GOSUB 91000; GOTO 10100
END
MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE
   ERRMSG = 'DEPARTMENT (':VALUE:') IS NOT ON FILE.'
   GOSUB 91000; GOTO 10100
END
SAVE.DIV.DEPT<1,LN> = VALUE
DESC.DEPT<1,LN> = DEPT.DESC
P_X  = 12 ; P_Y = SLN ; P_VALUE = DEPT.DESC "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
LINES = DCOUNT(SAVE.DIV.DEPT,VM)
10999 RETURN
10900 GOSUB 11000
ECD.NUM = 11
ECD.MINV = OLD.START.LINE
IF LAST.LINE < LINES THEN
   ECD.MAXV = LAST.LINE
END ELSE
   ECD.MAXV = LINES
END
ECD.ACTION = 4; CALL SCRN.EDIT
LN.NO = ECD.RET.VALUE
IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
RETURN
11000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
IF START.LINE = OLD.START.LINE THEN GOTO 11999
OLD.START.LINE = START.LINE
LAST.LINE = START.LINE + PAGE.SIZE - 1
CNT = 1
FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
   P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:SAVE.DIV.DEPT<1,N> "L#5"
   P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:DESC.DEPT<1,N> "L#30"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   CNT = CNT + 1
NEXT N
FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
11999 RETURN
20000*
SCV.REC(1)<ECD.SCRN.NO> = DIV.ID
SCV.REC(2)<ECD.SCRN.NO> = DIV.DESC
GOSUB 63000
21000*
LINES = DCOUNT(SAVE.DIV.DEPT,VM)
FOR I = 1 TO LINES
   MATREAD DEPT.REC FROM DEPARTMENT, CONO : SAVE.DIV.DEPT<1,I> ELSE
      DEPT.DESC = "UNKNOWN"
   END
   DESC.DEPT<1,I> = DEPT.DESC
NEXT I
LN = 1
OLD.START.LINE = 0
GOSUB 11000
RETURN
63000 ECD.ACTION=3;CALL SCRN.EDIT
RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : CL : ERRMSG :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 92000 ERR.TYPE = 2
*       CALL SYSCOM(MAT SYSCOM.REC)
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 ERR.TYPE = 3
*       CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1) * :
END
