*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - CHANGE.DICT
* BY          - WALID YAMOUT, C.B.A
* DATE        - 04/24/85
* DESCRIPTION -    This program get the dictionaries from GLS.DICT file
*               then adjust and write the dictionaries to the files.
*       KEY = TYPE:FILE NAME!DICT NAME
*       TYPE = 00 ; NO CHANGE
*       TYPE = 01 ; CHANGE XXLENGTH
*       TYPE = 02 ; T#,X ; X = LEN(GL)
*       TYPE = 03 ; TX,# ; X = 4 + LEN(GL) ; FROM KEY = CONO:GL#:NUMBER
*       TYPE = 04 ; REC<8,1> = "F;0(T1,":3+LEN(GL):");(TCOA;X;1;1)"
*       TYPE = 05 ; STRUC. FROM KEY ; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 06 ; REC<8,1> = "F;0(T11,":LEN(GL):");0(T1,3);:;(TCOA;X;1;1)"
*       TYPE = 07 ; SF1 FROM KEY; KEY = CONO:DV:DP:CCTR:CL#
*       TYPE = 08 ; SF2 FROM KEY; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 09 ; SF3 FROM KEY; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 10 ; SF4 FROM KEY; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 11 ; SF5 FROM KEY; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 12 ; STRUC. FROM ATT (ONLY GL#)
*       TYPE = 13 ; SF1 FROM ATT (ONLY GL#)
*       TYPE = 14 ; SF2 FROM ATT (ONLY GL#)
*       TYPE = 15 ; SF3 FROM ATT (ONLY GL#)
*       TYPE = 16 ; SF4 FROM ATT (ONLY GL#)
*       TYPE = 17 ; SF5 FROM ATT (ONLY GL#)
*       TYPE = 18 ; TX,# ; X = 11 + LEN(GL) ; FROM KEY = CONO:DV:DP:CCTR:GL#:(COUNT OR CHECK)
*       TYPE = 19 ; SUFFIX FROM ATT
*       TYPE = 20 ; SUFFIX FROM KEY; KEY = CONO:DV:DP:CCTR:GL#
*       TYPE = 21 ; REC<8,1> = "F;0(T11,":LEN(GL):");0(T1,3);:;(TCOA;X;1;1);C ;0(T11,":LEN(GL):");:;:"
*       TYPE = 22 ; STRUC. FROM KEY ; KEY = CONO:GL#
*       TYPE = 23 ; SF1 FROM KEY ; KEY = CONO:GL#
*       TYPE = 24 ; SF2 FROM KEY ; KEY = CONO:GL#
*       TYPE = 25 ; SF3 FROM KEY ; KEY = CONO:GL#
*       TYPE = 26 ; SF4 FROM KEY ; KEY = CONO:GL#
*       TYPE = 27 ; SF5 FROM KEY ; KEY = CONO:GL#
*       TYPE = 28 ; SAME AS TYPE = 18 ; BUT CHANGE SECOND MV
*                 EXAMPLE : EOM.TRANS FILES JOB, VEND, CUST ETC....
*       TYPE = 32 ; STRUC. FROM ATT (ONLY GL#) USING "[]"
*       TYPE = 33 ; MULTI-VALUE FIELD ; PRINT STRUC. GL# AND DESC ; DICT NAME SHOULD BE ATT-MV-.....
*                 EXAMPLE GL# FOR HOURS CATEGORIES IN DEPARTMENT FILE
*       TYPE = 34 ; SAME AS TYPE = 33 BUT ONE VALUE ; DICT NAME SHOULD BE ATT-...
*                 EXAMPLE DICT FOR DEPARTMENT FILE 1-1
*********************************************************************
*ENDDOC
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>CHAR
   DIM DICT.REC(20)
   EQU DTYPE   TO DICT.REC(1)
   EQU ATT     TO DICT.REC(2)
   EQU HEAD    TO DICT.REC(3)
   EQU CONV    TO DICT.REC(7)
   EQU FUN     TO DICT.REC(8)
   EQU JUSTIFY TO DICT.REC(9)
   EQU WIDTH   TO DICT.REC(10)
   DIM SFR(5)
   DIM POS(5)
   DIM SF1(5)
   DIM SF2(5)
   DIM SF3(5)
   MAT SFR = ''
   MAT POS = ''
   MAT SF1 = ''
   MAT SF2 = ''
   MAT SF3 = ''
*
*--- INITIAL
*
   ERRMSG = ""
   DASHES = STR("-",80)
   PROMPT ""
   OPEN.FLAG = 0
*
*--- OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"; GOSUB 91000; GOTO 999999
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOSUB 91000; GOTO 999999
   OPEN '','MD' TO MD ELSE ERRMSG = "MD FILE IS MISSING"; GOSUB 91000; GOTO 999999
   OPEN '','GLS.DICT' TO GLS.DICT ELSE ERRMSG = "GLS.DICT FILE IS MISSING"; GOSUB 91000; GOTO 999999
   MATREAD COMP.REC FROM COMPANY, "001" ELSE
      ERRMSG = "COMPANY 001 IS NOT ON FILE"; GOSUB 91000; GOTO 999999
   END
   READV CURR.ACCT FROM CONTROL, 'MENUS.CONTROL', 1 ELSE
      READV CURR.ACCT FROM CONTROL, '001MENUS.CONTROL', 1 ELSE
         ERRMSG = 'CANNOT READ MENUS.CONTROL'; GOSUB 91000; GOTO 999999
      END
   END
   ACCT.LEN = LEN(CURR.ACCT)
*
*--- PRINT SCREEN
*
   SCRN = CS
   SCRN = SCRN : @(0,0):"C.B.A."
   SCRN = SCRN : @(28,0):"DICTIONARIES ADJUSTMENT"
   SCRN = SCRN : @(0,1):DASHES
   SCRN = SCRN : @(25,3):CO.NAME
   SCRN = SCRN : @(25,5):'CURRENT ACCOUNT : ' : CURR.ACCT
   SCRN = SCRN : @(25,7):'ADJUST  ACCOUNT : '
   SCRN = SCRN : @(25,11): "NOW PROCESSING"
   SCRN = SCRN : @(25,13): "FILE :"
   SCRN = SCRN : @(25,15): "DICT :"
   SCRN = SCRN : @(0,22):DASHES
   PRINT SCRN :
   PRINT @(43,7) : CL :
   INPUT NEW.ACCT :
   IF NEW.ACCT = 'END' THEN GOTO 999999
   IF NEW.ACCT = '' THEN NEW.ACCT = CURR.ACCT
   PRINT @(43,7) : NEW.ACCT :
   PREV.FILE = ""
   BASE.ITEM = "Q"
   BASE.ITEM<9> = "L"
   BASE.ITEM<10> = "10"
*
*--- CHECK COMPANY PARAMETER
*
   CONO.LEN = 3
   ST.CONO = CONO.LEN + 1
   DIV.LEN = 2
   DEP.LEN = 2
   CTR.LEN = 3
   CCTR.LEN = CONO.LEN + DIV.LEN + DEP.LEN + CTR.LEN
   ST.CCTR = CONO.LEN + DIV.LEN + DEP.LEN + CTR.LEN + 1
   GL.LEN = 0
   STRUC.CNT = COUNT(CO.ACCT.STRUC,'-')
   SF.CNT = STRUC.CNT + 1
   FOR I = 1 TO SF.CNT
      SFR(I) = FIELD(CO.ACCT.STRUC,'-',I)
      IF NUM(SFR(I)) THEN
         IF SFR(I) > 0 THEN
            SFR(I) = SFR(I) + 0
            POS(I) = GL.LEN + 1
            GL.LEN = GL.LEN + SFR(I)
         END ELSE
            ERRMSG = 'SUFFIX # ':I:' IS < 1'; GOSUB 91000; GOTO 999999
         END
      END ELSE
         ERRMSG = 'SUFFIX # ':I:' IS NOT NUMERIC'; GOSUB 91000; GOTO 999999
      END
   NEXT I
   IF GL.LEN <> LEN(CO.ACCT.PIC) THEN
      ERRMSG = 'GL.LEN <> LEN(CO.ACCT.PIC)'; GOSUB 91000; GOTO 999999
   END
   IF SF.CNT > 1 THEN
      SUFFIX.POS = POS(2)
      SUFFIX.LEN = GL.LEN - SFR(1)
   END ELSE
      SUFFIX.LEN = 0
      SUFFIX.POS = GL.LEN + 1
   END
   STRUC.LEN = STRUC.CNT + GL.LEN
   TOT.LEN = CCTR.LEN + GL.LEN
   EN.GL.LEN1 = ST.CONO + GL.LEN
   EN.GL.LEN2 = ST.CCTR + GL.LEN
   FMT1 = 'F;0(T1,':(CONO.LEN+GL.LEN):');(TCOA;X;1;1)'
   FMT2 = 'F'
   FMT6 = 'F'
   TEMP = ';'
   FOR I = SF.CNT TO 1 STEP -1
      FMT2 = FMT2 : TEMP : '0(T' : POS(I) + CCTR.LEN : ',' : SFR(I) : ')'
      FMT6 = FMT6 : TEMP : '0(T' : POS(I) + CONO.LEN : ',' : SFR(I) : ')'
      TEMP = ';C-;:;'
   NEXT I
   FMT2 = FMT2 : STR(';:',STRUC.CNT)
   FMT6 = FMT6 : STR(';:',STRUC.CNT)
   FMT3 = 'F;0(T':ST.CCTR:',':GL.LEN:');0(T1,':CONO.LEN:');:;(TCOA;X;1;1)'
   FMT5 = FMT3 : ';C ;0(T' : ST.CCTR : ',' : GL.LEN : ');:;:'
   FOR I = 1 TO SF.CNT
      SF1(I) = 'T' : POS(I) + CCTR.LEN : ',' : SFR(I)
      SF2(I) = 'T' : POS(I) : ',' : SFR(I)
      SF3(I) = 'T' : POS(I) + CONO.LEN : ',' : SFR(I)
   NEXT I
*
*--- PROCESS ALL DICT
*
   DATA = 1
   LOOP
      READNEXT ID ELSE DATA = 0
   WHILE DATA DO
      IF ID = "DL/ID" THEN GOTO 9999
      MATREAD DICT.REC FROM GLS.DICT, ID ELSE GOTO 9999
      IF DTYPE # "A" AND DTYPE # "S" THEN GOTO 9999
      TYPE = ID[1,2]
      IF NOT(NUM(TYPE)) THEN
         ERRMSG = "NOT A VALID TYPE ":TYPE
         GOSUB 91000; GOTO 9999
      END
      FILE.NAME = FIELD(ID,"!",1)
      FILE.NAME = FILE.NAME[3,99]
      IF FILE.NAME # PREV.FILE THEN
         OPEN.FLAG = 1
         PREV.FILE = FILE.NAME
         READ ITEM FROM MD, FILE.NAME ELSE
            ERRMSG = 'FILE ': FILE.NAME : ' IS MISSING'
            GOSUB 91000
            OPEN.FLAG = 0
            GOTO 199
         END
         IF ITEM<1> = "Q" THEN
            IF CURR.ACCT # NEW.ACCT AND CURR.ACCT = ITEM<2>[1,ACCT.LEN] THEN
               BASE.ITEM<2> = NEW.ACCT : ITEM<2>[ACCT.LEN+1,99]
               BASE.ITEM<3> = ITEM<3>
            END ELSE
               BASE.ITEM<2> = ITEM<2>
               BASE.ITEM<3> = ITEM<3>
            END
         END ELSE
            BASE.ITEM<2> = NEW.ACCT
            BASE.ITEM<3> = FILE.NAME
         END
         WRITE BASE.ITEM ON MD, "CHANGE-DICT-QFILE"
         OPEN 'DICT','CHANGE-DICT-QFILE' TO D.FILE ELSE
            ERRMSG = "FILE ":FILE.NAME:" IS MISSING"
            OPEN.FLAG = 0
            GOSUB 91000
            GOTO 199
         END
         PRINT @(32,13):FILE.NAME:CL:
199*
      END
      IF OPEN.FLAG = 0 THEN GOTO 9999
      DICT.NAME = FIELD(ID,"!",2)
      IF DICT.NAME = "DL/ID" THEN GOTO 9999
      PRINT @(32,15):DICT.NAME:CL:
      BEGIN CASE
      CASE TYPE = "00"
      CASE TYPE = "01"
         WIDTH = GL.LEN
         GOSUB 1000
      CASE TYPE = "02"
         FUN = FIELD(FUN,',',1) : ',' : GL.LEN
         WIDTH = GL.LEN
         GOSUB 1000
      CASE TYPE = "03"
         FUN = 'T' : EN.GL.LEN1 : ',' : FIELD(FUN,',',2)
         GOSUB 1000
      CASE TYPE = "04"
         FUN<1,1> = FMT1
         GOSUB 1000
      CASE TYPE = "05"
         IF CONV # "" THEN CONV = FMT2
         IF FUN # "" THEN FUN = FMT2
         WIDTH = STRUC.LEN
         GOSUB 1000
      CASE TYPE = "06"
         FUN<1,1> = FMT3
         GOSUB 1000
      CASE TYPE > 6 AND TYPE < 12
         FUN = SF1(TYPE-6)
         WIDTH = SFR(TYPE-6)
         GOSUB 1000
      CASE TYPE = "12"
         FMT4 = 'F'
         TEMP = ';'
         FOR I = SF.CNT TO 1 STEP -1
            FMT4 = FMT4 : TEMP : ATT : '(T' : POS(I) : ',' : SFR(I) : ')'
            TEMP = ';C-;:;'
         NEXT I
         FMT4 = FMT4 : STR(';:',STRUC.CNT)
         IF CONV # "" THEN CONV = FMT4
         IF FUN # "" THEN FUN = FMT4
         WIDTH = STRUC.LEN
         GOSUB 1000
      CASE TYPE > 12 AND TYPE < 18
         FUN = SF2(TYPE-12)
         WIDTH = SFR(TYPE-12)
         GOSUB 1000
      CASE TYPE = "18"
         FUN = 'T' : EN.GL.LEN2 : ',' : FIELD(FUN,',',2)
         GOSUB 1000
      CASE TYPE = "19"
         FUN = 'T' : SUFFIX.POS : ',' : SUFFIX.LEN
         IF SUFFIX.LEN > 0 THEN WIDTH = SUFFIX.LEN ELSE WIDTH = 1
         GOSUB 1000
      CASE TYPE = "20"
         FUN = 'T' : (SUFFIX.POS + CCTR.LEN) : ',' : SUFFIX.LEN
         IF SUFFIX.LEN > 0 THEN WIDTH = SUFFIX.LEN ELSE WIDTH = 1
         GOSUB 1000
      CASE TYPE = "21"
         FUN = FMT5
         GOSUB 1000
      CASE TYPE = "22"
         IF CONV # "" THEN CONV = FMT6
         IF FUN # "" THEN FUN = FMT6
         WIDTH = STRUC.LEN
         GOSUB 1000
      CASE TYPE > 22 AND TYPE < 28
         FUN = SF3(TYPE-22)
         WIDTH = SFR(TYPE-22)
         GOSUB 1000
      CASE TYPE = "28"
         FUN<1,2> = 'T' : EN.GL.LEN2 : ',' : FIELD(FUN<1,2>,',',2)
         GOSUB 1000
      CASE TYPE = "32"
         FMT32 = 'F'
         TEMP = ';'
         FOR I = SF.CNT TO 1 STEP -1
            FMT32 = FMT32 : TEMP : ATT : ';C' : POS(I) : ';C' : SFR(I) : ';[]'
            TEMP = ';C-;:;'
         NEXT I
         FMT32 = FMT32 : STR(';:',STRUC.CNT)
         IF CONV # "" THEN CONV = FMT32
         IF FUN # "" THEN FUN = FMT32
         WIDTH = STRUC.LEN
         GOSUB 1000
      CASE TYPE = "33"
         ATT.NO = FIELD(DICT.NAME,"-",1)
         IF NOT(NUM(ATT.NO)) THEN GOTO 9999
         MV.NO = FIELD(DICT.NAME,"-",2)
         IF NOT(NUM(MV.NO)) THEN GOTO 9999
         TEMP = ";"
         TEMP1 = "0(T" : FILE.NAME : ";X;" : ATT.NO : TEMP : ATT.NO : ")"
         IF MV.NO > 1 THEN MV.NO = MV.NO - 1 ELSE MV.NO = ""
         TEMP1 = TEMP1 : TEMP : "(G" : MV.NO : " 1)"
         FMT33 = "F" : TEMP : TEMP1
         FMT33 = FMT33 : TEMP : "0(T1,3);:;(TCOA;X;1;1);C ;:"
         FOR I = SF.CNT TO 1 STEP -1
            FMT33 = FMT33 : TEMP : TEMP1 : ';C' : POS(I) : ';C' : SFR(I) : ';[]'
            TEMP = ';C-;:;'
         NEXT I
         FMT33 = FMT33 : STR(';:',STRUC.CNT+1)
         IF CONV # "" THEN CONV = FMT33
         IF FUN # "" THEN FUN = FMT33
      CASE TYPE = "34"
         ATT.NO = FIELD(DICT.NAME,"-",1)
         IF NOT(NUM(ATT.NO)) THEN GOTO 9999
         TEMP = ";"
         FMT33 = "F" : TEMP : ATT.NO
         FMT33 = FMT33 : TEMP : "0(T1,3);:;(TCOA;X;1;1);C ;:"
         FOR I = SF.CNT TO 1 STEP -1
            FMT33 = FMT33 : TEMP : ATT.NO : ';C' : POS(I) : ';C' : SFR(I) : ';[]'
            TEMP = ';C-;:;'
         NEXT I
         FMT33 = FMT33 : STR(';:',STRUC.CNT+1)
         IF CONV # "" THEN CONV = FMT33
         IF FUN # "" THEN FUN = FMT33
      CASE 1
         ERRMSG = "INVALID TYPE"; GOSUB 91000; GOTO 9999
      END CASE
      MATWRITE DICT.REC ON GLS.DICT, ID
      MATWRITE DICT.REC ON D.FILE, DICT.NAME
9999*
   REPEAT
   GOTO 999999
1000*
   IF WIDTH < 1 THEN
      HEAD = "."
      GOTO 1999
   END
   IF HEAD = "" THEN GOTO 1999
   IF NUM(HEAD) THEN GOTO 1999
   IF INDEX(HEAD,":",1) > 0 THEN GOTO 1999
   IF HEAD = STR(".",LEN(HEAD)) THEN GOTO 1999
   IF HEAD = STR(" ",LEN(HEAD)) THEN GOTO 1999
   IF TYPE = "05" OR TYPE = "12" OR TYPE = "22" OR TYPE = "32" THEN
      MAXWIDTH = 14
   END ELSE
      MAXWIDTH = WIDTH
   END
   HCNT = COUNT(HEAD,VM) + (HEAD # "")
   FOR N = 1 TO HCNT
      HEAD<1,N> = TRIM(HEAD<1,N>)
   NEXT N
   IF HEAD<1,HCNT>[1,1] = "-" THEN
      FOR N = 1 TO HCNT-1
         IF LEN(HEAD<1,N>) > MAXWIDTH THEN MAXWIDTH = LEN(HEAD<1,N>)
      NEXT N
      HEAD<1,HCNT> = STR("-",MAXWIDTH)
      FOR N = 1 TO HCNT-1
         LEN.HEAD = LEN(HEAD<1,N>)
         SPC = INT((MAXWIDTH - LEN.HEAD)/2)
         HEAD<1,N> = SPACE(SPC) : HEAD<1,N> : SPACE(MAXWIDTH - SPC - LEN.HEAD)
      NEXT N
   END
1999*
   RETURN
91000*
   PRINT @(0,23):ERRMSG:CL:
   INPUT REPLY,1:
   PRINT @(0,23):CL:
   RETURN
999999*
   PRINT @(-1):
END
