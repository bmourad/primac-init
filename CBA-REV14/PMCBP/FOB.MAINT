*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - FOB.MAINT
* BY          - JULIANNE RIVERA, VERCOM SOFTWARE, INC.
* DATE        - 11/25/91
* DESCRIPTION
*T21987 cls 07/30/1997 * allow a quantity of 9999999
*T26126 adelgado 02/22/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*--- INSERT FILES EQUATES
*
*COPY>PMC.CPYLIB>FOB
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
*     OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE MISSING';GOTO 93000
  OPEN '','OPS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'OPS.SCREENS FILE MISSING';GOTO 93000
  OPEN '','FOB' TO FOB ELSE ERRMSG = 'FOB FILE MISSING';GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING';GOTO 93000
  OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG = 'XREF.DATA FILE MISSING';GOTO 93000
*
*---- INITIALIZATION
*
  MAT SCV.REC = ""
  MAT EDIT.COM.DRIVER = ""
  ERRMSG = ''
  LINE.SPACE = 1
  BEGIN.PAGE = 10
  PAGE.SIZE = 10
  LINES = 0
  LN = 1
  OLD.START = 0
*---- GET COMPANY NUMBER
*
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
*
*---- PRINT SCREEN
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'FOB.MAINT'
  ECD.ACTION = 1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION = 2;CALL SCRN.EDIT
10*
  MAT SCV.REC = ""
  ECD.ACTION = 6; CALL SCRN.EDIT
  LINES = 0; LN = 1; OLD.START = 0
*
*---- MAIN PROCESSING
*
  MAT FOB.REC = ""
15*
  ECD.NUM = 1;ECD.ACTION = 4;CALL SCRN.EDIT
  FOB.KEY = ECD.RET.VALUE
  BEGIN CASE
    CASE FOB.KEY = 'END'
      GOTO 99999
    CASE FOB.KEY = "???" OR FOB.KEY = ""
      MAT GEN.XREF.REC = ""
      GXR.CO = CONO
      GXR.NAME = "GEN.CODE"
      GXR.FILE = FOB
      GXR.SORT.FILE = "FOB"
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      SCV.REC(1)<ECD.SCRN.NO> = GXR.ID
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        FOB.KEY = ""
        GOTO 15
      END
      FOB.KEY = GXR.ID
    CASE NOT(NUM(FOB.KEY))
      FOB.KEY = ""
      SCV.REC(1)<ECD.SCRN.NO> = ""
      ERRMSG = "*** NUMERIC INPUT REQUIRED ***"
      GOSUB 91000
      GOTO 15
  END CASE
  NEW.FOB = 0
  * T26126 v
  MATREADU FOB.REC FROM FOB, CONO:FOB.KEY LOCKED
    ERRMSG = 'F.O.B. record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 15 
  END ELSE
  * T26126 ^
    NEW.FOB = 1;MAT FOB.REC = ''
  END
  IF NEW.FOB = 1 THEN
    FOR W = 1 TO 3 UNTIL ECD.RET.VALUE = "END"
      ON W GOSUB 20,30,40
    NEXT W
    IF ECD.RET.VALUE = 'END' THEN
      GOTO 10
    END
    FOB.START = ""
  END ELSE
    SCV.REC(2)<ECD.SCRN.NO,1> = FOB.DESC
    SCV.REC(4)<ECD.SCRN.NO,1> = FOB.SURCHARGE
    SCV.REC(5)<ECD.SCRN.NO,1> = FOB.DISCOUNT
    ECD.ACTION = 3;CALL SCRN.EDIT
    LINES = DCOUNT(FOB.WEIGHT,VM)
    GOSUB 70000
    GOSUB 80000
  END
  GOTO 500
*
*---- ENTER FOB CODE DESCRIPTION
*
20*
  ECD.NUM = 2;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    FOB.DESC = ECD.RET.VALUE
  END
  RETURN
*
*---- ENTER FOB SURCHARGE
*
30*
  ECD.NUM = 4;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    FOB.SURCHARGE = ECD.RET.VALUE
  END
  RETURN
*
*---- ENTER FOB DISCOUNT
*
40*
  ECD.NUM = 5;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    FOB.DISCOUNT = ECD.RET.VALUE
  END
  RETURN
*
*--- ENTER OPTION
*
500*
  MORE = 1
  LOOP
  WHILE MORE DO
    IF NEW.FOB THEN
      NEW.FOB = 0
      OPTION = "A"
    END ELSE
      ECD.NUM = 21; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
    END
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE FOB, CONO:FOB.KEY   ;* T26126
        MORE = 0
      CASE OPTION = "F"
        MATWRITE FOB.REC ON FOB, CONO:FOB.KEY
        MORE = 0
*21987
*    CASE OPTION = "A" AND LINES < 14
      CASE OPTION = "A" AND LINES < 14 AND FOB.WEIGHT<1,LINES> # 9999999
        MODE = "A"
        DONE = 0
        FOR LN = LINES+1 TO 14 UNTIL DONE
          GOSUB 80000
          GOSUB 10000
          IF VALUE = "END" THEN
            DONE = 1
            FOB.WEIGHT = DELETE(FOB.WEIGHT,1,LN,0)
            FOB.RATE = DELETE(FOB.RATE,1,LN,0)
          END ELSE
*21987
            IF FOB.WEIGHT<1,LN> = 9999999 THEN DONE = 1
            LINES = LINES + 1
          END
        NEXT LN
        LN = LINES
        OLD.START = 0
        GOSUB 80000
      CASE OPTION = "C" AND LINES > 0
        MODE = "C"
        GOSUB 30000
        BEGIN CASE
          CASE LNO = "0"
          CASE LNO = "A"
            VALUE = ""
            FOR LN = 1 TO LINES UNTIL VALUE = "END"
              GOSUB 80000
              GOSUB 10000
            NEXT LN
          CASE NUM(LNO)
            LN = LNO
            GOSUB 10000
        END CASE
        IF VALUE = "END" THEN
          OLD.START = 0
          GOSUB 80000
        END
      CASE OPTION = "D" AND LINES > 0
        MODE = "D"
        GOSUB 30000
        IF LNO # 0 THEN
          LN = LNO
          FOB.START = DELETE(FOB.START,1,LN+1,0)
          FOB.WEIGHT = DELETE(FOB.WEIGHT,1,LN,0)
          FOB.RATE = DELETE(FOB.RATE,1,LN,0)
          LINES = LINES - 1
          IF LN > LINES THEN LN = LN - 1
          OLD.START = 0
          OLD.START = 0
          GOSUB 80000
        END
      CASE OPTION = "I" AND LINES > 0 AND LINES < 14
        MODE = "I"
        GOSUB 30000
        IF LNO > 0 THEN
          LN = LNO
          FOB.START = INSERT(FOB.START,1,LN,0,"")
          FOB.WEIGHT = INSERT(FOB.WEIGHT,1,LN,0,"")
          FOB.RATE = INSERT(FOB.RATE,1,LN,0,"")
          LINES = LINES + 1
          OLD.START = 0
          GOSUB 80000
          GOSUB 10000
          IF VALUE = "END" THEN
            FOB.START = DELETE(FOB.START,1,LN,0)
            FOB.WEIGHT = DELETE(FOB.WEIGHT,1,LN,0)
            FOB.RATE = DELETE(FOB.RATE,1,LN,0)
            LINES = LINES - 1
          END
          OLD.START = 0
          GOSUB 70000
          GOSUB 80000
        END
      CASE NUM(OPTION)
        ON OPTION GOSUB 20,30,40
      CASE OPTION[1,1] = "S"
        OPT2 = OPTION[2,1]
        BEGIN CASE
          CASE OPT2 = "" OR OPT2 = "F"
            LN = LN + PAGE.SIZE
            IF LN > LINES THEN LN = 1
          CASE OPT2 = "R"
            LN = LN - PAGE.SIZE
            IF LN < 1 THEN LN = 1
          CASE OPT2 = "T"
            LN = 1
          CASE OPT2 = "B"
            LN = LINES
            IF LN < 1 THEN LN = 1
        END CASE
        GOSUB 80000
    END CASE
  REPEAT
  GOTO 10
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- LINE ENTRY
*
10000*
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 1 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100*
*21987
*TYP=3; X=21; Y=SLN; MAXL=6
  TYP=3; X=21; Y=SLN; MAXL=7
  BEGIN CASE
    CASE MODE = "A"
      IF LN = 1 THEN
        MINV = 1
      END ELSE
        MINV = FOB.WEIGHT<1,LN-1>+1
      END
*T21987
*  MAXV = 999999
      MAXV = 9999999
      TEMP.START = MINV
    CASE MODE = "C"
      BEGIN CASE
        CASE LINES = 1
          MINV = 1
*T21987
*    MAXV = 999999
          MAXV = 9999999
        CASE LN = 1
          MINV = 1
          MAXV = FOB.START<1,LN+1>-1
        CASE LN = LINES
          MINV = FOB.WEIGHT<1,LN-1>+1
*T21987
*    MAXV = 999999
          MAXV = 9999999
        CASE 1
          MINV = FOB.WEIGHT<1,LN-1>+1
          MAXV = FOB.START<1,LN+1>-1
      END CASE
      TEMP.START = FOB.START<1,LN>
      O.R = "O"
      DEFAULT = FOB.WEIGHT<1,LN>
    CASE MODE = "I"
      BEGIN CASE
        CASE LN = 1
          MINV = 1
          MAXV = FOB.WEIGHT<1,LN+1>-1
        CASE 1
          MINV = FOB.WEIGHT<1,LN-1>+1
          MAXV = FOB.WEIGHT<1,LN+1>-1
      END CASE
      TEMP.START = MINV
  END CASE
  P_X  = 7 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.START,"MD0,") "R#9" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*21987
*TYP=3; X=21; Y=SLN; MAXL=6
  TYP=3; X=21; Y=SLN; MAXL=7
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 10990
  TEMP.WEIGHT = VALUE
  P_X  = 21 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.WEIGHT,"MD0,")"R#9" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10200*
  TYP=4; X=38; Y=SLN; SCALER=2; MAXL=6
  HMSG = "RATE"
  IF FOB.RATE<1,LN> # "" THEN
    DEFAULT = OCONV(FOB.RATE<1,LN>, "MD2")
    O.R = "O"
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 10990
  TEMP.RATE = VALUE
  P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.RATE,"MD2")"R#6" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10900*
  FOB.START<1,LN> = TEMP.START
  FOB.WEIGHT<1,LN> = TEMP.WEIGHT
  FOB.RATE<1,LN> = TEMP.RATE
  RETURN
10990*
  RETURN
*
*--- GET LINE NUMBER
*
30000*
  GOSUB 80000
  IF MODE = "C" THEN
    ECD.NUM = 22
    ECD.ACTION = 4; CALL SCRN.EDIT
  END ELSE
    ECD.NUM = 23
    ECD.ACTION = 4; CALL SCRN.EDIT
  END
  BEGIN CASE
    CASE ECD.RET.VALUE = ""
      LNO = 0
    CASE ECD.RET.VALUE = "END"
      LNO = 0
    CASE ECD.RET.VALUE = "A"
      LNO = "A"
    CASE NOT(NUM(ECD.RET.VALUE))
      ERRMSG = "** INVALID RESPONSE **"; GOSUB 91000; GOTO 30000
    CASE ECD.RET.VALUE >= ST.LINE AND ECD.RET.VALUE <= LST.LINE
      LNO = ECD.RET.VALUE
    CASE 1
      ERRMSG = "** OUT OF RANGE **"; GOSUB 91000; GOTO 30000
  END CASE
  RETURN
*
*---- DERIVE START WEIGHT
*
70000*
  FOB.START = 1
  FOR N = 2 TO LINES
    FOB.START<1,N> = FOB.WEIGHT<1,N-1>+1
  NEXT N
  OLD.START = 0
  RETURN
*
*--- SCROLL
*
80000*
  ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE -1
  IF LST.LINE > LINES THEN LST.LINE = LINES
  IF ST.LINE = OLD.START THEN RETURN
  OLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 1 ; P_Y = SSLN ; P_VALUE = N "R%2" ; P_OPT = ""
    P_X  := AM:7 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(FOB.START<1,N>,"MD0,")"R#9"
    P_X  := AM:21 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(FOB.WEIGHT<1,N>,"MD0,")"R#9"
    P_X  := AM:38 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(FOB.RATE<1,N>,"MD2")"R#6"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 1 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- ERROR ROUTINE
*
91000*
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999*
* PRINT @(-1)
END
