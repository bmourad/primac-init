*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PMCBP
* PROGRAM     - WHSE.MAINT
* BY          - JIHAD YAMOUT, C.B.A
* DATE        - 10/25/83
* DESCRIPTION - THIS PROGRAM REQUEST A WAREHOUSE CODE AND ALLOW THE
*               OPERATER TO INPUT A NEW WAREHOUSE OR MAKE CHANGES TO
*               OLD WAREHOUSE .
* MODS        - TASK 19404 CT6 11/03/95 - Do not allow change of division
*    if there is Quantity on Hand or any Outstanding POs.  Changes would
*    cause problems with divisionalization.
*T23178 rik 08/13/1998 * DON'T CLEAR LOCATION # AFTER ENTERING 'END'.
*T23278 markt 09/18/1998  * Add user security at the division level
*T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*ENDDOC
*********************************************************************
*
***** FILE INSERTS
*
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
**** SETUP SYSTEM ERRMSGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
***** OPEN FILES
*
  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
    ERRMSG = 'WAREHOUSE FILE IS MISSING'
    GOSUB 93000
  END
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'PMC.SCREENS FILES IS MISSING'
    GOSUB 93000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GOSUB 93000
  END
  OPEN '','DIVISION' TO DIVISION ELSE
    ERRMSG = 'DIVISION FILE IS MISSING'
    GOSUB 93000
  END
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING'
    GOSUB 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'PREFIX FILE IS MISSING'
    GOSUB 93000
  END
*
***** GET COMPANY NAME
*
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  BEGIN.PAGE = 13; PAGE.SIZE = 7; LINE.SPACE = 1
*
***** MAIN PROCESSING
*
  MAT EDIT.COM.DRIVER = ''
*    MAT EDIT.COM = ""
*    TYP = 0; CALL EDIT.SUB
  FILL = "#"
  MAT WHSE.REC = ''
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME = 'WAREHOUSE.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*
**** PRINT SCREEN
*
  ECD.ACTION=2;CALL SCRN.EDIT
*
**** CLEAR SCREEN CONTENT
*
100*
  RELEASE          ;* T26126
  MAT SCV.REC = ""
  ECD.ACTION = 6 ; CALL SCRN.EDIT
*
**** ENTER WHSE.CODE
*
200*
  MAT WHSE.REC = ""
  LINES = 0; LN = 1
  ECD.NUM = 5
  ECD.VALDAT.CODE = 4
  ECD.VALDAT.FILE = WAREHOUSE
  ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  WHSE.CODE = ECD.RET.VALUE
  NEW.FLAG = 0 ;* TASK 19404
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      GOTO 99999
    CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
      * T26126 v
      READU DUMMY FROM WAREHOUSE, CONO:ECD.RET.VALUE LOCKED
        ERRMSG = 'WAREHOUSE record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 200 
      END ELSE NULL
      * T26126 ^
      FOR SAVE = 1 TO WHSE.REC.SIZE
        WHSE.REC(SAVE) = ECD.VALDAT.ITEM<SAVE>
      NEXT SAVE
*T23278 v
      DIV.CODE = WHS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 200
      END
*T23278 ^
      SCV.REC(6)<ECD.SCRN.NO,1> = WHS.DESC
      SCV.REC(7)<ECD.SCRN.NO,1> = WHS.ADDR1
      SCV.REC(8)<ECD.SCRN.NO,1> = WHS.ADDR2
      SCV.REC(9)<ECD.SCRN.NO,1> = WHS.CITY
      SCV.REC(10)<ECD.SCRN.NO,1> = WHS.STATE
      SCV.REC(11)<ECD.SCRN.NO,1> = WHS.ZIP
      SCV.REC(24)<ECD.SCRN.NO,1> = WHS.DIV
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      LINES = COUNT(WHS.LOC,VM) + (WHS.LOC # "")
      OLD.START.LINE = 0; GOSUB 2900
    CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
      NEW.FLAG = 1  ;* TASK 19404
      FOR I = 1 TO 7
        ON I GOSUB 1000,1100,1200,1300,1400,1500,1600
        IF ECD.RET.VALUE = 'END' THEN GOTO 100
      NEXT I
      OLD.START.LINE = 0; GOSUB 2000
    CASE 1
      GOTO 100
  END CASE
  MORE = 0
  LOOP
    ECD.NUM = 21
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'END'
        MORE = 1
        RELEASE WAREHOUSE, CONO:WHSE.CODE         ;* T26126
      CASE OPTION = 'LO'
        GOSUB 2000
      CASE NUM(OPTION)
        ON OPTION GOSUB 1000,1100,1200,1300,1400,1500,1600
        MORE = 0
      CASE OPTION = 'F'
        MATWRITE WHSE.REC ON WAREHOUSE,CONO:WHSE.CODE
        MORE = 1
      CASE OPTION = 'E'
        MORE = 1
    END CASE
  WHILE MORE = 0 DO REPEAT
  GOTO 100
*
***** ENTER WHSE DESC
*
1000*
  ECD.NUM = 6
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.DESC = ECD.RET.VALUE
  END
  RETURN
*
**** ENTER WHSE.ADDR1
*
1100*
  ECD.NUM = 7
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.ADDR1 = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER WHSE.ADDR2
*
1200*
  ECD.NUM = 8
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.ADDR2 = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER CITY
*
1300*
  ECD.NUM = 9
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.CITY = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER STATE
*
1400*
  ECD.NUM = 10
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.STATE = ECD.RET.VALUE
  END
  RETURN
*
**** ENTER ZIP
*
1500*
  ECD.NUM = 11
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    WHS.ZIP = ECD.RET.VALUE
  END
  RETURN
*
***** ENTER DIVISION
*
1600*
*TASK 19404 vvv
  IF NOT(NEW.FLAG) AND WHS.DIV # "" THEN
    EXE.LINE = 'SELECT INV.WHSE WITH WHSE = "':WHSE.CODE:'" AND WITH (ON.HAND > "0" OR IWH_ON_ORDER > "0")'
    UDTEXECUTE EXE.LINE CAPTURING EXE.MSGS RETURNING EXE.ERRS
    IF EXE.ERRS<1> # "20646" THEN
      ERRMSG = "Cannot change a division with Quantity on hand or Outstanding POs"; GOSUB 91000; RETURN
    END
  END
*TASK 19404 ^^
  ECD.NUM=24
* ECD.VALDAT.FILE = DIVISION;ECD.VALDAT.CODE = 2;ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IF ECD.RET.VALUE # "00" THEN
      MATREAD DIV.REC FROM DIVISION,CONO:ECD.RET.VALUE ELSE
        ERRMSG = "INVALID DIVISION"
        GOSUB 91000
        GOTO 1600
      END
    END
*T23278 v
    DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
    CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 1600
    END
*T23278 ^
    WHS.DIV = ECD.RET.VALUE
  END
  RETURN
2000*
  IF WHS.LOC = '' THEN
    LINES = 0
    ACTION = 'A'
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 2100
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END
  GOSUB 2900
  ANCORE = 1
  LOOP
    ECD.NUM = 22
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
        ANCORE = 0
      CASE ACTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 2100
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 2900
      CASE ACTION = 'C'
        GOSUB 2800
        IF LN.NO THEN
          LN = LN.NO
          GOSUB 2100
        END
      CASE ACTION = 'D'
        GOSUB 2800
        IF LN.NO THEN
          LN = LN.NO
          WHS.LOC = DELETE(WHS.LOC,1,LN,0)
          WHS.LOC.DESC = DELETE(WHS.LOC.DESC,1,LN,0)
          LINES = COUNT(WHS.LOC,VM) + (WHS.LOC # "")
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 2900
      CASE ACTION = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 2900
      * T25978 v
      CASE ACTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 2900
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 2900
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 2900
      * T25978 ^
    END CASE
  WHILE ANCORE DO REPEAT
  GOTO 2999
2100 GOSUB 2900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#4" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2200 X = 8
  Y = SLN
  TYP = 1
  MAXL = 4
  IF WHS.LOC<1,LN> # '' THEN
    O.R = 'O'
    DEFAULT = WHS.LOC<1,LN>
  END ELSE
    O.R = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF ACTION = 'A' THEN
      WHS.LOC = DELETE(WHS.LOC,1,LN,0)
      WHS.LOC.DESC = DELETE(WHS.LOC.DESC,1,LN,0)
    END
*T23178 v
*           P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
*           CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    OLD.START.LINE = 0
    GOSUB 2900
*T23178 ^
    GOTO 2299
  END
  LOCATE VALUE IN WHS.LOC<1>,1 SETTING FND ELSE FND = LN
  IF FND <> LN THEN
    ERRMSG = "LOCATION ALREADY EXIST ON LINE # - " : FND
    GOSUB 91000; GOTO 2200
  END
  WHS.LOC<1,LN> = VALUE
2300 X = 16
  Y = SLN
  TYP = 1
  MAXL = 35
  IF WHS.LOC.DESC<1,LN> # '' THEN
    O.R = 'O'
    DEFAULT = WHS.LOC.DESC<1,LN>
  END ELSE
    O.R = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 2200
  WHS.LOC.DESC<1,LN> = VALUE
  LINES = COUNT(WHS.LOC,VM) + (WHS.LOC # '')
2299 RETURN
2800 GOSUB 2900
  ECD.NUM = 23; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
2900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 2990
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#4" ; P_OPT = ""
    P_X  := AM:8 ; P_Y := AM:SLN ; P_VALUE := AM:WHS.LOC<1,N> "L#4"
    P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:WHS.LOC.DESC<1,N> "L#35"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
2990 RETURN
2999 RETURN
*
***** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1):
END
