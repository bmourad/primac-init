*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - PMCBP
* PROGRAM      - CCTR.MAINT
* BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE         - 09/19/83
* DESCRIPTION
* CSF 25627    - 05/06/96 Insert record locking on all files updated (LMR).
*T21870 diane 05/02/1997 * FIX UNINIT VAR AT LINE 646
*T22100 lanny 07/23/1997 * 'C'hg line & ESC causes line to clear and not
*                          re-paint.
*T23651 cindy 02/24/1999 * not scrolling properly after change
*T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/21/2002 * Implement the LOCKED clause.
*T28243 cmykleb 09/08/2004 * Allow for update of BHR file.
*T222007 shussain 02/07/2007 * prompt for efficiency factor and auth.code
*ENDDOC
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>FAS.CPYLIB>ASSETS
*COPY>FAS.CPYLIB>EQUIP.FILE
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   DCTR.REC.SIZE = 25
   DIM DCTR.REC(25)
   EQU DCTR.OPER         TO DCTR.REC(4)
   EQU DCTR.OPER.TYPE    TO DCTR.REC(5)
   EQU DCTR.OPER.HR.RATE TO DCTR.REC(6)
   EQU DCTR.OPER.STD.HRS TO DCTR.REC(7)
   EQU DCTR.OPER.MARKUP  TO DCTR.REC(8)
   EQU DCTR.OPER.STD.IMP TO DCTR.REC(9)
   DIM SAV.CCTR(25)
*
**************
* OPEN FILES *
**************
   MAT FILE.VARS = ''
   OPEN '', 'PMC.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'PMC.SCREENS FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE
      ERRMSG = 'DEPARTMENT FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'OPERATION' TO OPERATION ELSE
      ERRMSG = 'OPERATION FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'COST.CNTR' TO COST.CNTR ELSE
      ERRMSG = 'COST.CNTR FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'PREFIX' TO PREFIX ELSE
      ERRMSG = 'PREFIX FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'
      GOTO 93000
   END
   MAT COMP.REC = ''
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IF CO.FAS = "Y" THEN
      OPEN '', 'ASSETS' TO ASSETS ELSE
         ERRMSG = 'ASSETS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '', 'EQUIP.FILE' TO EQUIP.FILE ELSE
         ERRMSG = 'EQUIP.FILE FILE IS MISSING'
         GOTO 93000
      END
   END
* T222007 v
   OPEN '','CREDIT.AUTH.CODE' TO CREDIT.AUTH.CODE ELSE
      ERRMSG = 'CREDIT.AUTH.CODE FILE IS MISSING'
      GOTO 93000
   END
* T222007 ^
******************
* INITIALIZATION *
******************
* T222007 v
*   PAGE.SIZE = 10
*   BEGIN.PAGE = 10
  PAGE.SIZE = 9
  BEGIN.PAGE = 11
* T222007 ^
   LINE.SPACE = 1
   LINES = 0
   OLD.START.LINE = 0
   OLD.NAME = ''
   UNKNOWN = "UNKNOWN"
   SAVE.CCTR.OPER = ''
   SAVE.DESC.OPER = ''
   SAVE.CCTR.OPER.TYPE = ''
   SAVE.CCTR.OPER.STD.HRS = ''
   SAVE.CCTR.OPER.MARKUP =''
   SAVE.CCTR.OPER.STD.IMP = ''
   SAVE.CCTR.OPER.HR.RATE = ''
   PREV.MASTER = ''
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'CCTR.MAINT'
   ECD.ACTION=1;CALL SCRN.EDIT
*******************
* MAIN PROCESSING *
*******************
100 ECD.SCRN.NO = 1
200 REQUEST = ''
   RELEASE
   REC.LOCK=0
   MAT CCTR.REC = ''
   MAT DCTR.REC = ''
   MAT DEPT.REC = ''
   MAT SAV.CCTR = ''
   DESC.OPER = ''
   MAT SCV.REC = ""
   LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
   ECD.ACTION=6;CALL SCRN.EDIT
   ECD.NUM = 3
   ECD.VALDAT.CODE = '4'
   ECD.VALDAT.FILE = COST.CNTR
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 99999
      CASE ECD.RET.VALUE = "000"
         ERRMSG = "CANNOT USE GENERAL COST CENTER - 000"
         GOSUB 91000; GOTO 200
      CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''
         FOR I = 1 TO CCTR.REC.SIZE
            CCTR.REC(I) = ECD.VALDAT.ITEM<I>
         NEXT I
         CCTR.ID = ECD.RET.VALUE
      * T26126 v
         READU DUMMY FROM COST.CNTR, CONO:CCTR.ID LOCKED
            ERRMSG = 'COST CENTER record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000 ; GOTO 200
         END ELSE NULL
      * T26126 ^
         IF CCTR.DEPT = "" THEN
            GOSUB 500
            IF ECD.RET.VALUE = "END" THEN GOTO 200
         END ELSE
            MATREAD DEPT.REC FROM DEPARTMENT, CONO : CCTR.DEPT ELSE
               ERRMSG = "CANNOT LOCATE DEPARTMENT - " : CCTR.DEPT
               GOSUB 91000; GOSUB 500
               IF ECD.RET.VALUE = "END" THEN GOTO 200
            END
         END
         GOSUB 20000
         OLD.NAME = CCTR.DESC
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
         CCTR.ID = ECD.RET.VALUE
         READU DUMMY FROM COST.CNTR, CONO : CCTR.ID LOCKED REC.LOCK = 1 ELSE NULL
         IF REC.LOCK THEN
        * T26126 v
        * ERRMSG='This Cost Center is being updated - Try again.'
            ERRMSG = 'COST CENTER record is locked by user - ':GETUSERNAME(STATUS())
        * T26126 ^
            GOSUB 91000
            GOTO 200
         END
         FOR REQUEST = 1 TO 8
            ON REQUEST GOSUB 500,1000,1500,2000,2500,3000,3100,3200,3300
            IF ECD.RET.VALUE = 'END' THEN GOTO 200
         NEXT REQUEST
* T222007 v
      GOSUB 3400
      IF CCTR.EFF.FCTR = "" THEN GOTO 200
* T222007 ^
201 *
*         X=3;Y=23;TYP=11;MAXL=4;MINL=2;O.R = 'O'
*         PMSG = "ENTER A VALID COST.CNTR TO DUPLICATE OR RETURN TO CONTINUE: "
*         CALL EDIT.SUB
         ECD.NUM = 31
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = 'END' THEN GOTO 200
         IF ECD.RET.VALUE # '' THEN
            MATREAD DCTR.REC FROM COST.CNTR , CONO:ECD.RET.VALUE ELSE
               ERRMSG = 'COST.CNTR (':ECD.RET.VALUE:') NOT ON FILE'
               GOSUB 91000 ; GOTO 201
            END
            CCTR.OPER = DCTR.OPER
            CCTR.OPER.TYPE = DCTR.OPER.TYPE
            CCTR.OPER.HR.RATE = DCTR.OPER.HR.RATE
            CCTR.OPER.STD.HRS = DCTR.OPER.STD.HRS
            CCTR.OPER.MARKUP = DCTR.OPER.MARKUP
            CCTR.OPER.STD.IMP = DCTR.OPER.STD.IMP
            GOSUB 21000
         END ELSE
            GOSUB 10000
         END
      CASE 1
         GOTO 200
   END CASE
   MORE = 1
   LOOP
      ECD.NUM = 6
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST = 'END' OR REQUEST = 'E'
            MORE = 0
         CASE NUM(REQUEST)
            IF REQUEST > 0 THEN
* T222007 v
*               ON REQUEST GOSUB 1000,1500,2000,2500,3000,3100,3200,3300
               ON REQUEST GOSUB 1000,1500,2000,2500,3000,3100,3200,3300,3400
* T222007 ^
            END
         CASE REQUEST = 'A'
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 10010
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 11000
         CASE REQUEST = 'I'
            GOSUB 10900
            IF LN.NO THEN
               LN = LN.NO
               BLN = LN 
               ELN = LINES
               YLN = 0
               FOR I = ELN TO BLN STEP -1
                  YLN = YLN + 1
                  SAVE.CCTR.OPER<1,YLN> = CCTR.OPER<1,I>
                  SAVE.DESC.OPER<1,YLN> = DESC.OPER<1,I>
                  SAVE.CCTR.OPER.TYPE<1,YLN> = CCTR.OPER.TYPE<1,I>
                  SAVE.CCTR.OPER.HR.RATE<1,YLN> = CCTR.OPER.HR.RATE<1,I>
                  SAVE.CCTR.OPER.STD.HRS<1,YLN> = CCTR.OPER.STD.HRS<1,I>
                  SAVE.CCTR.OPER.MARKUP<1,YLN> = CCTR.OPER.MARKUP<1,I>
                  SAVE.CCTR.OPER.STD.IMP<1,YLN> = CCTR.OPER.STD.IMP<1,I>
                  CCTR.OPER = DELETE(CCTR.OPER,1,I,0)
                  DESC.OPER = DELETE(DESC.OPER,1,I,0)
                  CCTR.OPER.TYPE = DELETE(CCTR.OPER.TYPE,1,I,0)
                  CCTR.OPER.HR.RATE = DELETE(CCTR.OPER.HR.RATE,1,I,0)
                  CCTR.OPER.STD.HRS = DELETE(CCTR.OPER.STD.HRS,1,I,0)
                  CCTR.OPER.MARKUP = DELETE(CCTR.OPER.MARKUP,1,I,0)
                  CCTR.OPER.STD.IMP = DELETE(CCTR.OPER.STD.IMP,1,I,0)
               NEXT I
               REQUEST = 'A'
               LN = LN -1
               LINES = LN ; OLD.START.LINE=0
               LOOP
                  LN = LN + 1
                  OLD.LINES = LINES
                  GOSUB 10010
               WHILE LINES > OLD.LINES DO REPEAT
               ACNT = COUNT(SAVE.CCTR.OPER,VM) + (SAVE.CCTR.OPER #'')
               REQUEST = 'I'
               LN = LINES
               FOR I = ACNT TO 1 STEP -1
                  LINES = LINES + 1
                  CCTR.OPER<1,LINES> = SAVE.CCTR.OPER<1,I>
                  DESC.OPER<1,LINES> = SAVE.DESC.OPER<1,I>
                  CCTR.OPER.TYPE<1,LINES> = SAVE.CCTR.OPER.TYPE<1,I>
                  CCTR.OPER.STD.HRS<1,LINES> = SAVE.CCTR.OPER.STD.HRS<1,I>
                  CCTR.OPER.HR.RATE<1,LINES> = SAVE.CCTR.OPER.HR.RATE<1,I>
                  CCTR.OPER.MARKUP<1,LINES> = SAVE.CCTR.OPER.MARKUP<1,I>
                  CCTR.OPER.STD.IMP<1,LINES> = SAVE.CCTR.OPER.STD.IMP<1,I>
               NEXT I
               SAVE.CCTR.OPER = ''; SAVE.DESC.OPER = ''
               SAVE.CCTR.OPER.TYPE = ''; SAVE.CCTR.OPER.STD.HRS = ''
               SAVE.CCTR.OPER.MARKUP=''; SAVE.CCTR.OPER.STD.IMP = ''
            END
            OLD.START.LINE = 0
            GOSUB 11000
         CASE REQUEST = 'C'
            GOSUB 10900
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 10010
            END
         CASE REQUEST = 'D'
            GOSUB 10900
            IF LN.NO THEN
               LN = LN.NO
               CCTR.OPER = DELETE(CCTR.OPER,1,LN,0)
               DESC.OPER = DELETE(DESC.OPER,1,LN,0)
               CCTR.OPER.TYPE = DELETE(CCTR.OPER.TYPE,1,LN,0)
               CCTR.OPER.HR.RATE = DELETE(CCTR.OPER.HR.RATE,1,LN,0)
               CCTR.OPER.STD.HRS = DELETE(CCTR.OPER.STD.HRS,1,LN,0)
               CCTR.OPER.MARKUP = DELETE(CCTR.OPER.MARKUP,1,LN,0)
               CCTR.OPER.STD.IMP = DELETE(CCTR.OPER.STD.IMP,1,LN,0)
               LINES = COUNT(CCTR.OPER,VM) + (CCTR.OPER # '')
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 11000
         CASE REQUEST = 'S'
*T23651 v
*             LN = LN + PAGE.SIZE
            LN = START.LINE + PAGE.SIZE
*T23651 ^
            IF LN > LINES THEN LN = 1
            GOSUB 11000
      * T25978 v
         CASE REQUEST = "SR"                                       
            LN = START.LINE - PAGE.SIZE
            IF LN < 1 THEN LN = 1 
            GOSUB 11000
         CASE REQUEST = "ST" 
            LN = 1
            GOSUB 11000
         CASE REQUEST = "SB" 
            LN = LINES
            GOSUB 11000
      * T25978 ^
         CASE REQUEST = 'F'
            MASTER.CC = CCTR.MASTER
            MATWRITE CCTR.REC ON COST.CNTR, CONO : CCTR.ID
            IF CCTR.ID # MASTER.CC  THEN
               IF MASTER.CC # '' THEN
                  MATREADU CCTR.REC FROM COST.CNTR, CONO : MASTER.CC ELSE
                     ERRMSG =  "CANNOT LOCATE MAST COST CENTER  - ": CCTR.MASTER
                     GOSUB 91000
                     RELEASE COST.CNTR, CONO : MASTER.CC
                     GOTO 300
                  END
                  LOCATE CCTR.ID IN CCTR.SUBS<1>,1 SETTING CCFND ELSE
                     CCTR.SUBS<1,CCFND> = CCTR.ID
                  END
*T28243 v
                  IF CO.GLS.HIST<1,3> = 'Y' THEN
                     CCTR.BHR.FLAG = DATE()
                  END
*T28243 ^
                  MATWRITE CCTR.REC ON COST.CNTR, CONO : MASTER.CC
               END
            END
            IF PREV.MASTER # '' THEN
               MATREADU CCTR.REC FROM COST.CNTR, CONO : PREV.MASTER ELSE
                  ERRMSG = "CANNOT LOCATE COST CENTER - ": PREV.MASTER
                  GOSUB 91000
                  RELEASE COST.CNTR, CONO : PREV.MASTER
                  GOTO 300
               END
               LOCATE CCTR.ID IN CCTR.SUBS<1>,1 SETTING FND ELSE
                  GOTO 300
               END
               CCTR.SUBS = DELETE(CCTR.SUBS,1,FND,0)
*T28243 v
               IF CO.GLS.HIST<1,3> = 'Y' THEN
                  CCTR.BHR.FLAG = DATE()
               END
*T28243 ^
               MATWRITE CCTR.REC ON COST.CNTR, CONO : PREV.MASTER
            END
300         DEPT.FND = 1
            MATREADU DEPT.REC FROM DEPARTMENT, CONO : CCTR.DEPT ELSE
               ERRMSG = "CANNOT LOCATE DEPARTMENT " : CCTR.DEPT
               DEPT.FND = 0; GOSUB 91000
               RELEASE DEPARTMENT, CONO : CCTR.DEPT
            END
            IF DEPT.FND THEN
               LOCATE CCTR.ID IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
                  INS CCTR.ID BEFORE DEPT.CCTRS<1,CCTR.FND>
               END
               MATWRITE DEPT.REC ON DEPARTMENT, CONO : CCTR.DEPT
            END
            IF INDEX(CCTR.DEPT,"-",1) THEN
               MAIN.DEPT = FIELD(CCTR.DEPT,"-",1)
               MATREADU DEPT.REC FROM DEPARTMENT, CONO : MAIN.DEPT ELSE
                  ERRMSG = "CANNOT LOCATE MAIN DEPARTMENT " : MAIN.DEPT
                  DEPT.FND = 0; GOSUB 91000
                  RELEASE DEPARTMENT, CONO : MAIN.DEPT
               END
               IF DEPT.FND THEN
                  LOCATE CCTR.ID IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
                     INS CCTR.ID BEFORE DEPT.CCTRS<1,CCTR.FND>
                  END
                  MATWRITE DEPT.REC ON DEPARTMENT, CONO : MAIN.DEPT
               END
            END
            MORE = 0
      END CASE
   WHILE MORE DO REPEAT
   GOTO 200
500 ECD.NUM = 1
   ECD.VALDAT.CODE = '2'
   ECD.VALDAT.FILE = DEPARTMENT
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      CCTR.DEPT = ECD.RET.VALUE
      FOR I = 1 TO DEPT.REC.SIZE
         DEPT.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
      ECD.NUM = 2
      SCV.REC(ECD.NUM)<1> = DEPT.DESC
      ECD.ACTION=5;CALL SCRN.EDIT
   END
   RETURN
1000 ECD.NUM = 4
   ECD.ACTION=4;CALL SCRN.EDIT
   CCTR.DESC = ECD.RET.VALUE
   RETURN
1500 ECD.NUM = 13
   IF CCTR.SUBS # '' THEN
      CCTR.MASTER = CCTR.ID; SCV.REC(ECD.NUM)<1> = CCTR.MASTER
      ECD.ACTION = 5; CALL SCRN.EDIT
      ERRMSG = "CCTR HAS SUB CCTRS"
      GOSUB 91000; GOTO 1599
   END
   IF CCTR.MASTER = '' THEN
      CCTR.MASTER = CCTR.ID
   END ELSE
      PREV.MASTER = CCTR.MASTER
   END
   ECD.VALDAT = CCTR.ID; ECD.DEFAULT = CCTR.MASTER
   ECD.PREFIX.ID=CONO;ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=COST.CNTR
   EDC.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1599
      CASE ECD.RET.VALUE = CCTR.ID
         CCTR.MASTER = CCTR.ID
      CASE 1
         MAT SAV.CCTR = MAT CCTR.REC
         FOR I=1 TO CCTR.REC.SIZE; CCTR.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
         IF CCTR.MASTER = '' THEN
            MASTER.CCTR = ECD.RET.VALUE
         END ELSE
            MASTER.CCTR = CCTR.MASTER
         END
         MAT CCTR.REC = MAT SAV.CCTR
         IF MASTER.CCTR # ECD.RET.VALUE THEN
            ERRMSG = "SUB CCTR CANNOT BE A MASTER CCTR"
            GOSUB 91000; GOTO 1500
         END
         CCTR.MASTER = ECD.RET.VALUE
   END CASE
1599 RETURN
2000 IF REQUEST  = '' AND DEPT.TYPE # 'P' THEN GOTO 2099
   ECD.NUM = 5
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 2099
   IF DEPT.TYPE = 'P' THEN
      IF ECD.RET.VALUE = '' THEN
         ERRMSG='MUST ENTER (S)HEET, (W)EB OR (B)OTH FOR PRESS DEPARTMENT';GOSUB 91000;GOTO 2000
      END
   END ELSE
      IF ECD.RET.VALUE='S' OR ECD.RET.VALUE='W' OR ECD.RET.VALUE='B' THEN
         ERRMSG='MUST ENTER RETURN OR (F)ROZEN ONLY FOR DEPARTMENT OTHER THAN PRESS';GOSUB 91000;GOTO 2000
      END
   END
   CCTR.TYPE = ECD.RET.VALUE
2099 RETURN
2500 ECD.NUM = 16
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 2599
   CCTR.SCHED.FLAG = ECD.RET.VALUE
2599 RETURN
3000 ECD.NUM = 8
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3099
   CCTR.FOH.TYPE<1,1> = ECD.RET.VALUE
   ECD.NUM = 7
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3099
   CCTR.FOH.PCT<1,1> = ECD.RET.VALUE
3099 RETURN
3100 ECD.NUM = 9
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3199
   CCTR.FOH.TYPE<1,2> = ECD.RET.VALUE
   ECD.NUM = 10
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3199
   CCTR.FOH.PCT<1,2> = ECD.RET.VALUE
3199 RETURN
3200 ECD.NUM = 11
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3299
   CCTR.FOH.TYPE<1,3> = ECD.RET.VALUE
   ECD.NUM = 12
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3299
   CCTR.FOH.PCT<1,3> = ECD.RET.VALUE
3299 RETURN
3300 ECD.NUM=14
   IF CO.FAS = "Y" THEN
3310  ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE ECD.RET.VALUE = ""
            CCTR.EQP=''
            ECD.NUM=15; SCV.REC(ECD.NUM)=''
            ECD.ACTION = 5; CALL SCRN.EDIT
         CASE 1
            MATREAD  EQP.REC FROM EQUIP.FILE, CONO:ECD.RET.VALUE ELSE
               ERRMSG =  "Cannot locate Equipment # ":ECD.RET.VALUE
               GOSUB 91000; GOTO 3310
            END
            MATREAD AST.REC FROM ASSETS, CONO:ECD.RET.VALUE ELSE
               ERRMSG = "Cannot locate Asset # ":ECD.RET.VALUE
               GOSUB 91000; GOTO 3310
            END
            CCTR.EQP = ECD.RET.VALUE
            ECD.NUM = 15; SCV.REC(ECD.NUM)= AST.DESC
            ECD.ACTION = 5 ;CALL SCRN.EDIT
      END CASE
   END ELSE
      CCTR.EQP =  ""; SCV.REC(ECD.NUM)=""
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 15; SCV.REC(ECD.NUM)=''
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
10000 IF DESC.OPER = '' THEN
      ACTION = 'A'
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 10010
      WHILE LINES > OLD.LINES DO REPEAT
   END
   LN = 1
   GOSUB 11000
   RETURN
10010 GOSUB 11000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100 X = 5; Y = SLN; TYP = 1; MINL = 2; MAXL = 4
   O.R = 'O'; DEFAULT = CCTR.OPER<1,LN>
   CALL EDIT.SUB
   IF VALUE = 'END' OR VALUE = '' THEN
      IF CCTR.OPER.STD.IMP<1,LN> = '' THEN
         CCTR.OPER = DELETE(CCTR.OPER,1,LN,0)
         DESC.OPER = DELETE(DESC.OPER,1,LN,0)
         CCTR.OPER.TYPE = DELETE(CCTR.OPER.TYPE,1,LN,0)
         CCTR.OPER.HR.RATE = DELETE(CCTR.OPER.HR.RATE,1,LN,0)
         CCTR.OPER.STD.HRS = DELETE(CCTR.OPER.STD.HRS,1,LN,0)
         CCTR.OPER.MARKUP = DELETE(CCTR.OPER.MARKUP,1,LN,0)
         CCTR.OPER.STD.IMP = DELETE(CCTR.OPER.STD.IMP,1,LN,0)
      END
*T22100 v
      OLD.START.LINE = 0
      GOSUB 11000
*T22100 ^
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10999
   END
   LOCATE VALUE IN CCTR.OPER<1>,1 SETTING FND ELSE
      LOCATE VALUE IN SAVE.CCTR.OPER<1>,1 SETTING FND ELSE FND = 0
   END
   IF FND AND VALUE # CCTR.OPER<1,LN> THEN
      ERRMSG = 'OPERATION (':VALUE:') ALREADY USED'
      GOSUB 91000
      GOTO 10100
   END
   MATREAD OPER.REC FROM OPERATION, CONO:VALUE ELSE
      ERRMSG = 'OPERATION (':VALUE:') IS NOT ON FILE.'
      GOSUB 91000
      GOTO 10100
   END
   CCTR.OPER<1,LN> = VALUE
   DESC.OPER<1,LN> = OPER.DESC
   P_X  = 10 ; P_Y = SLN ; P_VALUE = OPER.DESC "L#30" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10200 X = 44
   Y = SLN
   TYP = 1
   MAXL = 1
   HMSG = '(F)IXED, (V)ARIABLE, (U)NITS'
   VALDAT = 'F':VM:'V':VM:'U'
   IF CCTR.OPER.TYPE<1,LN> # '' THEN
      DEFAULT = CCTR.OPER.TYPE<1,LN>
      O.R = 'O'
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 10100
   CCTR.OPER.TYPE<1,LN> = VALUE
10300 X = 47
   Y = SLN
   TYP = 4
   SCALER = 2
   MAXL = 7
   IF CCTR.OPER.HR.RATE<1,LN> # '' THEN
      DEFAULT = OCONV(CCTR.OPER.HR.RATE<1,LN>,"MD2")
      O.R = 'O'
   END ELSE
      IF LN > 1 THEN
         DEFAULT = OCONV(CCTR.OPER.HR.RATE<1,LN-1>,"MD2")
         O.R = 'O'
      END
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 10100
   CCTR.OPER.HR.RATE<1,LN> = VALUE
10400 IF CCTR.OPER.TYPE<1,LN> = 'V' THEN
      CCTR.OPER.STD.HRS<1,LN> = 0
      P_X  = 55 ; P_Y = SLN ; P_VALUE = OCONV(CCTR.OPER.STD.HRS<1,LN>,"MD2") "R#7" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10500
   END
   X = 55
   Y = SLN
   TYP = 4
   SCALER = 2
   MAXL = 7
   IF CCTR.OPER.STD.HRS<1,LN> # '' THEN
      DEFAULT = OCONV(CCTR.OPER.STD.HRS<1,LN>,"MD2")
      O.R = 'O'
   END ELSE
      IF LN > 1 THEN
         IF CCTR.OPER.TYPE<1,LN> = CCTR.OPER.TYPE<1,LN-1> THEN
            DEFAULT = OCONV(CCTR.OPER.STD.HRS<1,LN-1>,"MD2")
            O.R = 'O'
         END
      END
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 10100
   CCTR.OPER.STD.HRS<1,LN> = VALUE
10500 X = 63
   Y = SLN
   TYP = 4
   SCALER = 2
   MAXL = 6
   IF CCTR.OPER.MARKUP<1,LN> # '' THEN
      DEFAULT = OCONV(CCTR.OPER.MARKUP<1,LN>,"MD2")
      O.R = 'O'
   END ELSE
      IF LN > 1 THEN
         DEFAULT = OCONV(CCTR.OPER.MARKUP<1,LN-1>,"MD2")
         O.R = 'O'
      END
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 10100
   CCTR.OPER.MARKUP<1,LN> = VALUE
10600 IF CCTR.OPER.TYPE<1,LN> = 'V' OR (CCTR.OPER.TYPE<1,LN> = 'U' AND CCTR.OPER.STD.HRS<1,LN> + 0 = 0) THEN
      X = 72
      Y = SLN
      TYP = 3
      MAXL = 6
      IF CCTR.OPER.STD.IMP<1,LN> # '' THEN
         DEFAULT = CCTR.OPER.STD.IMP<1,LN>
         O.R = 'O'
      END
      CALL EDIT.SUB
      IF VALUE = 'END' THEN GOTO 10100
      CCTR.OPER.STD.IMP<1,LN> = VALUE
   END ELSE
      CCTR.OPER.STD.IMP<1,LN> = 0
      P_X  = 72 ; P_Y = SLN ; P_VALUE = CCTR.OPER.STD.IMP<1,LN> "R#6" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   LINES = COUNT(CCTR.OPER,VM) + (CCTR.OPER # '')
10999 RETURN
10900 GOSUB 11000
*     X = 3 ; Y = 23 ; PMSG = 'ENTER LINE NUMBER :' ; TYP = 3 ; MINV = OLD.START.LINE
*     IF LAST.LINE < LINES THEN
*        MAXV = LAST.LINE
*     END ELSE
*        MAXV = LINES
*     END
*     O.R = 'O' ; MAXL = 3 ; CALL EDIT.SUB
* P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ECD.NUM = 30
   IF LAST.LINE < LINES THEN
*T21870           ECD.MAXV = LAST.LINES
      ECD.MAXV = LAST.LINE
   END ELSE
      ECD.MAXV = LINES
   END
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.ACTION=4;CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
   RETURN
11000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   IF START.LINE = OLD.START.LINE THEN GOTO 11999
   OLD.START.LINE = START.LINE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   CNT = 1
   FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:CCTR.OPER<1,N> "L#4"
      P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:DESC.OPER<1,N> "L#30"
      P_X  := AM:44 ; P_Y := AM:SLN ; P_VALUE := AM:CCTR.OPER.TYPE<1,N> "L#1"
      P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CCTR.OPER.HR.RATE<1,N>,"MD2") "R#7"
      P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CCTR.OPER.STD.HRS<1,N>,"MD2") "R#7"
      P_X  := AM:63 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CCTR.OPER.MARKUP<1,N>,"MD2") "R#6"
      P_X  := AM:72 ; P_Y := AM:SLN ; P_VALUE := AM:CCTR.OPER.STD.IMP<1,N> "R#6"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
11999 RETURN
20000 SCV.REC(1)<ECD.SCRN.NO> = CCTR.DEPT
   SCV.REC(2)<ECD.SCRN.NO> = DEPT.DESC
   SCV.REC(3)<ECD.SCRN.NO> = CCTR.ID
   SCV.REC(4)<ECD.SCRN.NO> = CCTR.DESC
   SCV.REC(5)<ECD.SCRN.NO> = CCTR.TYPE
   SCV.REC(16)<ECD.SCRN.NO> = CCTR.SCHED.FLAG
   SCV.REC(7)<ECD.SCRN.NO> = CCTR.FOH.PCT<1,1>
   SCV.REC(8)<ECD.SCRN.NO> = CCTR.FOH.TYPE<1,1>
   SCV.REC(9)<ECD.SCRN.NO> = CCTR.FOH.TYPE<1,2>
   SCV.REC(10)<ECD.SCRN.NO> = CCTR.FOH.PCT<1,2>
   SCV.REC(11)<ECD.SCRN.NO> = CCTR.FOH.TYPE<1,3>
   SCV.REC(12)<ECD.SCRN.NO> = CCTR.FOH.PCT<1,3>
   SCV.REC(13)<ECD.SCRN.NO> = CCTR.MASTER
   SCV.REC(14)<ECD.SCRN.NO> = CCTR.EQP
* T222007 v
   SCV.REC(36)<ECD.SCRN.NO> = CCTR.EFF.FCTR
* T222007 ^
   IF CCTR.EQP # "" THEN
      IF CO.FAS = "Y" THEN
         MATREAD AST.REC FROM ASSETS, CONO:CCTR.EQP ELSE
            AST.DESC = UNKNOWN
         END
         SCV.REC(15)=AST.DESC
      END ELSE
         SCV.REC(15) =  "Delinked"
      END
   END
   ECD.ACTION=3;CALL SCRN.EDIT
21000 DESC.OPER = ''
   LINES = COUNT(CCTR.OPER,VM) + (CCTR.OPER # '')
   FOR I = 1 TO LINES
      MATREAD OPER.REC FROM OPERATION, CONO:CCTR.OPER<1,I> ELSE OPER.DESC = UNKNOWN
      DESC.OPER<1,I> = OPER.DESC
   NEXT I
   LN = 1
   OLD.START.LINE = 0
   GOSUB 11000
   RETURN
* T222007 v
3400
  ECHO OFF
  X=0;Y=21;MAXL=3;TYP=1
  PMSG = "Enter Authorization Code : "
  CALL EDIT.SUB
  P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECHO ON
  IF VALUE="END" THEN GOTO 3409
  READ TREC FROM CREDIT.AUTH.CODE, CONO:VALUE ELSE
    ERRMSG="Invalid Authorization Code. Try again"
    GOSUB 91000;GOTO 3400
  END
  ECD.NUM = 36
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 3409
  CCTR.EFF.FCTR = ECD.RET.VALUE
3409
  RETURN
* T222007 ^
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : CL : ERRMSG :; INPUT XX :
*      PRINT @(0,23) : CL :
*      RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
*      RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1) * :
END
