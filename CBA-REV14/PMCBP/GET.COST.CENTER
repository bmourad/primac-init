  SUBROUTINE GET.COST.CENTER (CONO,DX,DY,DDX,CCTR,PCCTR,FIRST.LINE,LINE.COUNT,MAT DEPT.REC,MAT CCTR.REC,COST.CNTR,STATUS)
*COPY>CPYLIB>COM3
***************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - GET.COST.CENTER
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/08/85
*
* REVISION - A.1.0
*
* DESCRIPTION
*
* This subroutine will prompt for division at the coordinates specified.
* Full cross-referencing capability is provided.
*
* STATUS is returned as follows:
*
*     00 = valid division, screen undisturbed
*     01 = valid division, re-display screen
*     10 = invalid division, screen undisturbed
*     11 = invalid division, re-display screen
*
*T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,ST).
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- INITIALIZATION
*
  STATUS = "00"
  UNKNOWN = STR("?",10)
*
*---- MAIN PROCESSING
*
100*
*     IF PCCTR # "" THEN PRINT @(0,23):CL:"DEFAULT- ":PCCTR:
*     PRINT @(DX,DY):"###":@(DX,DY):
*     INPUT VALUE,3  _:
*     IF PCCTR # "" THEN PRINT @(0,23):CL:
*     IF VALUE = "^" THEN VALUE = "END"
*     IF VALUE = CHAR(27) OR VALUE = "^" OR VALUE = "E" THEN VALUE = "END"
  TYP = 1; X = DX; Y = DY; MAXL = 3
  O.R = "O"; DEFAULT = PCCTR
  CALL EDIT.SUB
  IF VALUE = "E" THEN VALUE = "END"
  IF NUM(VALUE) AND VALUE = 0 THEN
    CCTR = "000"
  END ELSE
    CCTR = VALUE
  END
  BEGIN CASE
    CASE CCTR = "" AND PCCTR # ""
      CCTR = PCCTR
    CASE CCTR = "" OR CCTR = SPACE(LEN(CCTR))
      IF DEPT.CCTRS = '' THEN GOTO 100
      S.LINES = COUNT(DEPT.CCTRS,VM) + 1
      S.NO = ''
      S.DESC = ''
      FOR I = 1 TO S.LINES
        S.NO<I> = DEPT.CCTRS<1,I>
        MATREAD CCTR.REC FROM COST.CNTR, CONO:S.NO<I> ELSE CCTR.DESC = UNKNOWN
        S.DESC<I> = CCTR.DESC
      NEXT I
      SLN = 1
      CURR.LINE = ""
      GOSUB 55000
      GOSUB 50000
  END CASE
  IF CCTR # "" AND CCTR # "END" AND CCTR # "000" THEN
    LOCATE CCTR IN DEPT.CCTRS<1>,1 SETTING FND ELSE
      STATUS = "1":STATUS[2,1]
      ERRMSG = "INVALID COST CENTER FOR SPECIFIED DEPARTMENT"
      GOSUB 90000
      GOTO 199
    END
    MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
      STATUS = "1":STATUS[2,1]
      ERRMSG = "INVALID COST.CNTR - ":CCTR
      GOSUB 90000
      GOTO 199
    END
  END
  IF CCTR = "" THEN STATUS = "1":STATUS[2,1]
199 RETURN
*
*---- GET OPERATOR REPLY
*
50000*
  * T25978 v
  * PMSG = "Enter selection or (S)croll"
  PMSG = "Enter selection or (S,SR,SB,ST) to Scroll"
  * T25978 ^
  TYP = 1; X = 0; Y = 23; MAXL = 3
  O.R = "O"
  CALL EDIT.SUB
*     PRINT @(0,23):CL:PMSG:" ###":@(LEN(PMSG)+1,23):
*     INPUT VALUE,3  _:
  OPTION = VALUE
  BEGIN CASE
    CASE OPTION = "END" OR OPTION = ""
      CCTR = ''
      S.DESC = ''
    CASE NUM(OPTION)
      IF OPTION < START.LINE OR OPTION > LAST.LINE THEN
        ERRMSG = "** OUT OF RANGE **"
        GOSUB 90000
        GOTO 50000
      END ELSE
        CCTR = S.NO<OPTION>
        S.DESC = ''
      END
    CASE OPTION = "S"
      SLN = SLN + LINE.COUNT
      IF SLN > S.LINES THEN SLN = 1
      GOSUB 55000
      GOTO 50000
    * T25978 v
    CASE OPTION = 'SR'
      SLN -= LINE.COUNT
      IF SLN < 1 THEN SLN = 1
      GOSUB 55000
      GOSUB 50000
    CASE OPTION = 'ST'
      SLN = 1
      GOSUB 55000
      GOSUB 50000
    CASE OPTION = 'SB'
      SLN = S.LINES
      GOSUB 55000
      GOSUB 50000
    * T25978 ^
  END CASE
*      PRINT @(0,23):CL:
  RETURN
*
*---- DISPLAY MULTI-LINE AREA
*
55000*
  STATUS = STATUS[1,1]:"1"
  START.LINE = 1 + INT((SLN-1)/LINE.COUNT) * LINE.COUNT
  IF START.LINE = CURR.LINE THEN RETURN
  CURR.LINE = START.LINE
  LAST.LINE = START.LINE + LINE.COUNT - 1
  IF LAST.LINE > S.LINES THEN LAST.LINE = S.LINES
  FOR N = START.LINE TO START.LINE+LINE.COUNT-1
    YY = FIRST.LINE + MOD(N-1,LINE.COUNT)
    IF N > LAST.LINE THEN
      P_X  = 0 ; P_Y = YY ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
      P_X  = 0 ; P_Y = YY ; P_VALUE = N "R#3" ; P_OPT = "CL"
      P_X  := AM:DX ; P_Y := AM:YY ; P_VALUE := AM:S.NO<N> "L#3"
      P_X  := AM:DDX ; P_Y := AM:YY ; P_VALUE := AM:S.DESC<N> "L#30"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
  NEXT N
  RETURN
*
*
*--- CALLS FOR SYSCOM
*
90000*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
END
