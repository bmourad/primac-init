   SUBROUTINE REPORT.SCRN.MULTI (CONO,MAT RPT.PROC.REC, RET_VALUE)
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* SOURCE        - PMCBP
* PROGRAM       - REPORT.SCRN.MULTI
* BY            - CHRIS MYKLEBUST, PRIMAC SYSTEMS
* DATE          - 05/21/2002
* DESCRIPTION
*
* This program allows multiple inputs for a single prompt.
*T27481 bmourad 06/05/2003 * Fis problem with multi entry.
*T28990 bmourad 10/03/2006 * IF USER ENTERS all AS A CHOICE THE SYSTEM
*                            HANGS.
*ENDDOC
*********************************************************************
*
*---- FILE INSERTS
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>TCC
*COPY>CPYLIB>EDIT.COM
*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>PMC.CPYLIB>REPORT.PROC.FILE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SETUP SYSTEM ERRMSGS
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- SET SCREEN TOP HEADING
*
*
*---- MAIN PROCESSING
*
   ECD.ACTION = 2 ; CALL SCRN.EDIT
   ECD.NUM = 1 ; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = RPR.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
*
   PAGE.SIZE = 16
   BEGIN.PAGE = 4
   LINE.SPACE = 1
   OLD.START.LINE = 0
*
   IF RET_VALUE = "" THEN
      LINES = 0
      ACTION = 'A'
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 1000
      WHILE LINES > OLD.LINES DO
      REPEAT
      LN = LINES
   END ELSE
      LINES=DCOUNT(RET_VALUE,VM)
      LN = 1
   END
   GOSUB 11000
   MORE = 1
   TYP = RPR.TYPE ; MAXL = RPR.MAXL ; HMSG = RPR.HMSG
   LOOP
      ECD.NUM = 5
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            MORE = 0
         CASE ACTION = 'A'
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 1000
            WHILE LINES > OLD.LINES DO
            REPEAT
            LN = LINES
            GOSUB 11000
         CASE ACTION = 'C'
            GOSUB 9000
            IF LN THEN
               SLN = BEGIN.PAGE+LINE.SPACE*MOD(LN-1,PAGE.SIZE)
               GOSUB 1000
            END
         CASE ACTION = 'D'
            GOSUB 9000
            IF LN THEN
               RET_VALUE = DELETE(RET_VALUE,1,LN,0)
               LINES = LINES - 1
               IF LN > 1 AND LN > LINES THEN LN = LINES
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 11000
         CASE ACTION = 'I' AND LINES > 0
            MODE = "I"
            GOSUB 9000
            IF LN > 0 THEN
               RET_VALUE = INSERT(RET_VALUE,1,LN,0,"")
               LINES = LINES + 1
               OLD.START.LINE = 0
               GOSUB 1000
               IF VALUE = "END" THEN
                  RET_VALUE = DELETE(RET_VALUE,1,LN,0)
                  LINES = LINES - 1
               END
               OLD.START.LINE = 0
               GOSUB 11000
            END
         CASE ACTION = 'S'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 11000
      * T25978 v
         CASE ACTION = 'SR'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 11000
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 11000
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 11000
      * T25978 ^
         CASE 1
            ERRMSG = "That is not a Valid Option  Please Try Again"
            GOSUB 91000
      END CASE
   WHILE MORE DO
   REPEAT
   GOTO 99999
**************************************************************************
**************************************************************************
*
********
1000 *
********
*
   GOSUB 11000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
********
1100 *
********
*
   X = 4
   Y = SLN
   TYP = RPR.TYPE
   MAXL = RPR.MAXL
   HMSG = RPR.HMSG
   IF RPR.VALID # "" THEN GOSUB 2000
   O.R = 'R'
   DEFAULT = RET_VALUE<1,LN>
   CALL EDIT.SUB
   IF VALUE = 'END' THEN
      IF ACTION = "A" THEN
         RET_VALUE = DELETE(RET_VALUE,1,LN,0)
      END
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1999
   END
   LOCATE VALUE IN RET_VALUE<1>,1 SETTING II THEN
      ERRMSG = "This item is already chosen."
      GOSUB 91000
      GOTO 1100
   END
* T28990 v
   VALUE = UPCASE(VALUE)
* T28990 ^
   GOSUB 20000
   IF ERRMSG # "" THEN
      GOSUB 91000
      IF VALUE = "END" THEN
         GOTO 1999
      END ELSE
         GOTO 1000
      END
   END
   RET_VALUE<1,LN> = VALUE
   LINES=DCOUNT(RET_VALUE,VM)
1999 *
   RETURN
*
*
*******
2000 *
*******
   IF RPR.VALID # "" THEN
      V.CNT = DCOUNT(RPR.VALID,",")
      VALDAT = FIELD(RPR.VALID,",",1)
      FOR SV = 2 TO V.CNT
         VALDAT = VALDAT :VM:FIELD(RPR.VALID,",",SV)
      NEXT SV
   END
   RETURN
*********
9000 *
*********
*
   GOSUB 11000
   ECD.NUM = 7; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN = ECD.RET.VALUE
   BEGIN CASE
      CASE LN = '' OR LN = 'END'
         LN = 0
      CASE LN > LINES
         ERRMSG = "** OUT OF RANGE **"
         GOSUB 91000
         GOTO 9000
   END CASE
   RETURN
*
**********
11000 *
**********
*
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 11999
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:RET_VALUE<1,N> "L#15"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
11999 *
   RETURN
*
* -- VERIFICATION ROUTINE
*
20000*
   IF RPR.FILE # "" AND VALUE # "ALL" THEN
      FILE.NUM = DCOUNT(RPR.FILE,',')
      ERRMSG = ""
      FOR FNUM = 1 TO FILE.NUM
         FILE.TMP = FIELD(RPR.FILE,',',FNUM)
         OPEN "",FILE.TMP TO V.FILE ELSE
            ERRMSG = FILE.TMP:" FILE IS MISSING"
            FNUM = FILE.NUM + 1
            VALUE = "END"
            GOTO 20001
         END
         IF RPR.I.ID # '' AND NUM(RPR.I.ATT) AND RPR.I.MV = "LOC" THEN
            READ SFV.REC FROM V.FILE, CONO:RPR.I.ID ELSE
               ERRMSG = RPR.I.ID:" item ID missing from ":FILE.TMP
               FNUM = FILE.NUM + 1
               VALUE = "END"
               GOTO 20001
            END
            LOCATE VALUE IN SFV.REC<RPR.I.ATT>,1 SETTING JUNK ELSE
               ERRMSG = VALUE:" item ID missing"
               FNUM = FILE.NUM + 1
               GOTO 20001
            END
         END ELSE
            READ SFV.REC FROM V.FILE, CONO:VALUE THEN
               ERRMSG = ""
               FNUM = FILE.NUM + 1
            END ELSE
               *** DIVISION 00 ROUTINE ***
               IF FILE.TMP = "DIVISION" AND VALUE = "00" THEN
                  SFV.REC = "GENERAL DIVISION"
               END ELSE
                  IF ERRMSG # "" THEN
                     ERRMSG = ERRMSG:" and ":FILE.TMP
                  END ELSE
                     ERRMSG = VALUE:" item ID missing from ":FILE.TMP
                  END
                  GOTO 20001
               END
               *** END OF DIVISION 00 ROUTINE ***
            END
         END ; * T27410
20001 *
      NEXT FNUM
   END
   RETURN
*
91000 *
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 *
   ERR.TYPE = 2
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 *
   ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
99999 *
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END
