*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ARSBP
* PROGRAM     - ARC.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
* MODS FOR CSF 18282 LMR 10/16/92
* TASK 19405 Bob Sherer 10/16/95 - ARS DIVISIONALIZATION
*T21177 diane 01/23/1997 * REV11 UPG ADD CLOSE
*T23278 markt 01/06/1999 * Make fiscal data multi-value by division.
*T25608 cm 01/31/2001 * When the cash applied amounts are blank instead
*                       of "0" there is a problem with the JCNT var.
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>ARS.CPYLIB>DAILY.CASH
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
  MAT FILE.VARS=''
  MAT EDIT.COM.DRIVER=''
*
***** SETUP ERRMSG ROUTINE
*
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
  PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
  END
  CONO = INBUFF<1>
  DIV.CODE = INBUFF<7>;* T23278
  FR.NEXT.PER = ""
*
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='M.SCREENS FILE IS MISSING';GOTO 93000
  OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
  OPEN '','DAILY.CASH' TO DAILY.CASH ELSE ERRMSG='DAILY.CASH FILE IS MISSING';GOTO 93000
  OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MISSING';GOTO 93000
  OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE IS MISSING';GOTO 93000
  OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE IS MISSING';GOTO 93000
*
***** GET CONO
*
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
  END
  SYS.FISCAL = 'ARCFISCAL'
  STMT.HEAD = 'CASH RECEIPTS'
*COPY>PMCBP>EOD.POST
  IF ECD.RET.VALUE = 'END' THEN
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
  END
IF @LOGNAME = "wyamout" THEN
   PRINT "WALID"
   INPUT WALID:
END
  CLEARFILE EOM.TRANS
  CLEARFILE POST.REJECTS
  PRR.SEQ = 10000
  OLD.CUST = "!@#$%^&*"
  MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
  SA.CSH.ACCT = GLTB.CASH
  SA.CSH.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.AR ELSE COA.LEVEL = 0
  SA.INV.ACCT = GLTB.AR
  SA.DSC.ACCT = STR("0",IN.ACCT.LEN)
  SA.DSC.LEVEL = 0
  SA.INV.LEVEL = COA.LEVEL
  DATA = 1
  LOOP
      READNEXT DC.ID ELSE DATA = 0
  WHILE DATA DO
      IF CONO # DC.ID[1,3] THEN GOTO 999
      MATREADU DC.REC FROM DAILY.CASH, DC.ID ELSE
          MAT PRR.REC = ''
          PRR.FILE = 'DAILY.CASH'
          PRR.ERR = 'CANNOT LOCATE'
          PRR.ID = DC.ID[4,99]
          PRR.SEQ = PRR.SEQ + 1
          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
          RELEASE DAILY.CASH, DC.ID
          GOTO 999
      END
***** T23278 v
*      IF DC.GLA.DATE # "" AND DC.GLA.DATE # "P" THEN
*          RELEASE DAILY.CASH, DC.ID
*          GOTO 999
*      END
***** T23278 ^
      DC.CUST = FIELD(DC.ID,"!",1)[4,20]
      DC.DATE = FIELD(DC.ID,"!",2)
      IF OLD.CUST # DC.CUST THEN
          OLD.CUST = DC.CUST
          NEW.REC = 0; NEW.PTR = 0
      END
      P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING CHECK NUMBER - ':DC.CHECK "L#10" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BEGIN CASE
          CASE DC.BANK.ACCT = SA.CSH.ACCT
          CASE DC.BANK.ACCT # ""
              DC.BANK.ACCT = DC.BANK.ACCT : STR("0",IN.ACCT.LEN-LEN(DC.BANK.ACCT))
              DC.BANK.ACCT = DC.BANK.ACCT[1,IN.ACCT.LEN]
              MATREAD COA.REC FROM COA, CONO : DC.BANK.ACCT ELSE COA.LEVEL = 0
              SA.CSH.ACCT = DC.BANK.ACCT
              SA.CSH.LEVEL = COA.LEVEL
          CASE GLTB.CASH = SA.CSH.ACCT
          CASE 1
              MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
              SA.CSH.ACCT = GLTB.CASH
              SA.CSH.LEVEL = COA.LEVEL
      END CASE
      CNT = COUNT(DC.CASH.APPL,VM) + 1
      MCNT = DCOUNT(DC.AMT,VM)
      IF MCNT > CNT THEN CNT = MCNT
      FOR I = 1 TO CNT
* CSF 18282
*T25608 v
*         IF DC.CASH.APPL # '' THEN
          IF DC.CASH.APPL<1,I> # '' THEN
*T25608 ^
              JCNT = DCOUNT(DC.CASH.APPL<1,I>,SM)
          END ELSE
              JCNT = DCOUNT(DC.AMT<1,I>,SM)
          END
          FOR J = 1 TO JCNT
***** T23278 v
              IF DIV.CODE # 'ALL' AND DC.DIV<1,I,J> # DIV.CODE THEN GOTO 990
              IF DC.GLA.DATE<1,I,J> # "" AND DC.GLA.DATE<1,I,J> # "P" THEN GOTO 990
***** T23278 ^
              BEGIN CASE
                  CASE DC.DIV<1,I,J> = ""
                      CASH.DIV = GEN.DIV
                      CASH.DEPT = GEN.DEPT
                      CASH.CCTR = GEN.CCTR
                  CASE DC.DEPT<1,I,J> = ""
                      CASH.DIV = DC.DIV<1,I,J>
                      CASH.DEPT = GEN.DEPT
                      CASH.CCTR = GEN.CCTR
                  CASE DC.CCTR<1,I,J> = ""
                      CASH.DIV = DC.DIV<1,I,J>
                      CASH.DEPT = DC.DEPT<1,I,J>
                      CASH.CCTR = GEN.CCTR
                  CASE 1
                      CASH.DIV = DC.DIV<1,I,J>
                      CASH.DEPT = DC.DEPT<1,I,J>
                      CASH.CCTR = DC.CCTR<1,I,J>
              END CASE
              CASH.AMT = DC.AMT<1,I,J> + 0
              IF CASH.AMT <> 0 THEN
                  IF DC.ACCT<1,I,J> # SA.DSC.ACCT THEN
                      DC.ACCT<1,I,J> = DC.ACCT<1,I,J> : STR("0",IN.ACCT.LEN-LEN(DC.ACCT<1,I,J>))
                      DC.ACCT<1,I,J> = DC.ACCT<1,I,J>[1,IN.ACCT.LEN]
                      MATREAD COA.REC FROM COA, CONO : DC.ACCT<1,I,J> ELSE COA.LEVEL = 0
                      SA.DSC.ACCT = DC.ACCT<1,I,J>
                      SA.DSC.LEVEL = COA.LEVEL
                  END
                  BEGIN CASE
                      CASE SA.DSC.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
                      CASE SA.DSC.LEVEL < 2
                          T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
                      CASE SA.DSC.LEVEL < 3
                          T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : SA.DSC.ACCT
                      CASE 1
                          T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : SA.DSC.ACCT
                  END CASE
                  IF OLD.CUST = "MISC" THEN
                      CASH.AMT = 0 - CASH.AMT
                      GOSUB 2000
                  END ELSE
                      GOSUB 1000
                  END
              END
              CASH.AMT = DC.CASH.APPL<1,I,J> + 0
              IF CASH.AMT <> 0 THEN
                  BEGIN CASE
                      CASE SA.CSH.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.CSH.ACCT
                      CASE 1
                          T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.CSH.ACCT
                  END CASE
                  GOSUB 1000
              END
              CASH.AMT = DC.CASH.APPL<1,I,J> + DC.AMT<1,I,J>
              IF CASH.AMT <> 0 THEN
                  BEGIN CASE
                      CASE SA.INV.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
                      CASE 1
                          T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
                  END CASE
                  GOSUB 2000
              END
              IF NEW.PTR THEN
                  NEW.REC = NEW.REC + 1
                  NEW.PTR = 0
              END
              DC.GLA.DATE<1,I,J> = "P" ;* T23278
990*
          NEXT J
*
      NEXT I
*      DC.GLA.DATE = 'P' ;* T23278
      MATWRITE DC.REC ON DAILY.CASH, DC.ID
999 REPEAT
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
1000 BEGIN CASE
      CASE CASH.AMT > 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
      CASE CASH.AMT + 0 < 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
      CASE 1
          GOTO 1999
  END CASE
  MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
  END
  ETR.AMT = ETR.AMT + CASH.AMT
  LOCATE DC.DATE IN ETR.DATE<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS DC.CHECK BEFORE ETR.TRAN<1,PTR>
  INS DC.DATE BEFORE ETR.DATE<1,PTR>
  INS CASH.AMT BEFORE ETR.TAMT<1,PTR>
  INS DC.INVOICE<1,I> BEFORE ETR.REF<1,PTR>
  IF PTR > 99 THEN NEW.PTR = 1
* TASK 19405
  ETR.DIV.OWNER = DC.DIV.OWNER
*
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
2000 BEGIN CASE
      CASE CASH.AMT > 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
      CASE CASH.AMT + 0 < 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
      CASE 1
          GOTO 2999
  END CASE
  MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
  END
  ETR.AMT = ETR.AMT - CASH.AMT
  LOCATE DC.DATE IN ETR.DATE<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS DC.CHECK BEFORE ETR.TRAN<1,PTR>
  INS DC.DATE BEFORE ETR.DATE<1,PTR>
  INS (0 - CASH.AMT) BEFORE ETR.TAMT<1,PTR>
  INS DC.INVOICE<1,I> BEFORE ETR.REF<1,PTR>
  IF PTR > 99 THEN NEW.PTR = 1
* TASK 19405
  ETR.DIV.OWNER = DC.DIV.OWNER
*
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99000 IF FR.NEXT.PER = "" THEN
      INBUFF<5> = "END"
      PROCWRITE INBUFF
  END
*** END OF JOB ***
99999 END
