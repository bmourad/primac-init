*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ARSBP
* PROGRAM     - ARS.EOM.CLOSE
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*T21067 lanny 10/04/1996 * Error in determining number of period for
*                          invoice purging.
*T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
*T23278 markt 01/06/1999 * Make fiscal data multi-value by division.
*T25292 cm 06/29/2000 * Change logic so OPEN.RECV records will delete
*                       even if G/L is not linked.
*                       LINKED TO ARS.
*T25763 renee 06/06/2001 * INSTEAD OF JUST DELETING OPEN.RECV RECORDS,
*                          THEY ARE BEING MOVED TO A NEW FILE,
*                          PURGED.OPEN.RECV. AT THE SAME TIME, AN ENTRY
*                          IS BEING MADE IN ANOTHER FILE,
*                          PURGED.OR.XREF, WHOSE ID IS CUST.ID
*T25975 cmykleb 01/30/2002 * Save EOM transaction data so history
*                            reports can be run.
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*T26921 cmykleb 10/26/2002 * OR.DIV is multivalued so if an OPEN.RECV is
*                            from a multi-division invoice it will never
*                            purge.
*T26916 lross 11/30/2004 * T26842 was never completed in REV11. Add to
*                          REV12 base.
*T28449 lross 02/17/2005 * T22094 Not complete - remove deletion of
*                          CUST.SALES and CUST.SALES.PER info.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>EOM.TRANS.HIST        ; * T25975
*COPY>ARS.CPYLIB>OPEN.RECV
*T25763 v
*COPY>ARS.CPYLIB>PURGED.OPEN.RECV
*T25763 ^
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>TAX
*COPY>GLS.CPYLIB>GLA
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>COA.SYS
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
***** SETUP ERRMSG ROUTINE
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
   PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
   END
   CONO = INBUFF<1>
   D.M.FLG = INBUFF<6>
   IF D.M.FLG = "PERIOD" THEN
      RPT.PER = "PERIOD"
   END ELSE
      RPT.PER = "DAY"
   END
   DIV.CODE = INBUFF<8>;* T23278
*
**** INTITIALIZATION
*
   MAT FILE.VARS = ""
   MAT EDIT.COM.DRIVER = ""
   TODAY = DATE()
   UNKNOWN = "NOT ON FILE"
   SYS.FISCAL = "ARSFISCAL"
   PROG.ID = @TTY:"!":CONO:"!ARS.CONO"
*
***** OPEN FILES
*
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG="CONTROL FILE MISSING"
      GOSUB 91000; GOTO 99000
   END
   OPEN "",INBUFF<3> TO EOM.TRANS ELSE
      ERRMSG = "YOU NEED TO RUN END OF ":RPT.PER:" PROCESSING BEFORE YOU CLOSE THE ":RPT.PER
*        GOSUB 91000; GOTO 99000
   END
   OPEN "",INBUFF<4> TO POST.REJECTS ELSE
      ERRMSG = "YOU NEED TO RUN END OF ":RPT.PER:" REPORTS BEFORE YOU CLOSE THE ":RPT.PER
      GOSUB 91000; GOTO 99000
   END
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
   OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="M.SCREENS FILE IS MISSING";GOTO 93000
   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS MISSING";GOTO 93000
   OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE IS MISSING";GOTO 93000
*T25763 v
   OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG = "PURGED.OPEN.RECV FILE IS MISSING";GOTO 93000
   OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG = "PURGED.OR.XREF FILE IS MISSING";GOTO 93000
   OPEN "","INVOICE" TO INVOICE ELSE ERRMSG = "INVOICE FILE IS MISSING";GOTO 93000
*T25763 ^
   OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE ERRMSG="MANUAL.INVOICE FILE IS MISSING";GOTO 93000
   OPEN "","MANUAL.INVOICE.TAG" TO MANUAL.INVOICE.TAG ELSE ERRMSG="MANUAL.INVOICE.TAG FILE IS MISSING";GOTO 93000
   OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS MISSING";GOTO 93000
   OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING";GOTO 93000
   OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS MISSING";GOTO 93000
*T25975 v
   OPEN "","ARS.EOM.TRANS.HIST" TO ARS.EOM.TRANS.HIST ELSE ERRMSG="ARS.EOM.TRANS.HIST FILE IS MISSING";GOTO 93000
*T25975 ^
   MATREAD COMP.REC FROM COMPANY,CONO ELSE
      ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
*T26842 v T26916
   READ OR.PURGE.DATES FROM CONTROL, CONO:'OPEN.REC.PURGE.DATES' ELSE
     ERRMSG='OPEN.REC.PURGE.DATES record is missing from CONTROL file!'
     GOTO 93000
   END
*T26842 ^ T26916
   IF CO.GLS # "N" THEN
      IF CO.GL.LINK<1,1> = "Y" THEN
         OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93000
      END
      OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 93000
      EQV.FLG = 1
      OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
   END
   STMT.HEAD = "MANUAL SALES"
*COPY>PMCBP>EOD.CLOSE
   IF ECD.RET.VALUE = "END" THEN
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
   END
   CLEARFILE POST.REJECTS
   PRR.SEQ = 10000
   READ CUTOFF.PER FROM CONTROL, CONO:"MANUAL.INVOICE.PURGE" ELSE CUTOFF.PER = 3
   IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3
   IF CUTOFF.PER > NUM.PERIODS THEN
      YY = INT(CUTOFF.PER / NUM.PERIODS)
      MM = MOD(CUTOFF.PER,NUM.PERIODS)
   END ELSE
      YY = 0
      MM = CUTOFF.PER
   END
   IF FR.CURR.PER<1,POS>[5,2] > MM THEN
      CUTOFF.PER = FR.CURR.PER<1,POS> - MM
      CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER[5,2]
   END ELSE
      YY = YY + 1
      CUTOFF.PER = (FR.CURR.PER<1,POS>[5,2] + NUM.PERIODS) - MM
      CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER
      CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER
   END
*
**** MANUAL.INVOICE ****
*
1000 ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING MANUAL.INVOICE FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   WRITE "MANUAL.INVOICE" ON CONTROL , PROG.ID
   IF D.M.FLG = "PERIOD" THEN GOTO 1800
   SELECT MANUAL.INVOICE.TAG
   DATA = 1
   LOOP
      READNEXT MIV.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # MIV.ID[1,3] THEN GOTO 1500
      MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1500
      END
      IF MIV.GLA.DATE = "" THEN
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1500
      END
      IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1500
      END
      IF MIV.PROC.MON <> FR.CURR.PER<1,POS> THEN
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1500
      END
      MIV.GLA.DATE = TODAY
      MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID
      DELETE MANUAL.INVOICE.TAG, MIV.ID
1500 REPEAT
   GOTO 7000
1800 SELECT MANUAL.INVOICE
   DATA = 1
   LOOP
      READNEXT MIV.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # MIV.ID[1,3] THEN GOTO 1999
      MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1999
      END
      IF MIV.GLA.DATE = "" THEN
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1999
      END
      IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
         RELEASE MANUAL.INVOICE, MIV.ID
         GOTO 1999
      END
      IF MIV.PROC.MON <= FR.CURR.PER<1,POS> THEN
         DELETE MANUAL.INVOICE.TAG, MIV.ID
      END
      READ DUMMY FROM OPEN.RECV, MIV.ID ELSE GOTO 1900
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1999
1900  IF MIV.PROC.MON < CUTOFF.PER THEN
         DELETE MANUAL.INVOICE, MIV.ID
      END ELSE
         RELEASE MANUAL.INVOICE, MIV.ID
      END
1999 REPEAT
**** OPEN.RECV ****
   WRITE "OPEN.RECV" ON CONTROL , PROG.ID
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING OPEN.RECV FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   READ ARCFISCAL FROM CONTROL, CONO : "ARSFISCAL" ELSE ARCFISCAL = ""
*T26842 T26916 v
*T25292 v
*   *T23278 v
*   *  MM = ARCFISCAL<1>[5,2]
*   *  ARCFISCAL<6> = OPENDATES<MM> - 1
*      MM = ARCFISCAL<1,POS>[5,2]
*      ARCFISCAL<6,POS> = OPENDATES<MM> - 1
*   *T23278 ^
*  CUR.DATE=OCONV(ARCFISCAL<2,POS>,'D4/')
*  MM = CUR.DATE[1,2]
*  DD = CUR.DATE[4,2]
*  YY = CUR.DATE[7,4]
*  IF DD LE 4 THEN
*     MM = MM - 1
*     IF MM = 0 THEN MM = 12;YY = YY - 1
*  END
*  ARCFISCAL<6,POS>=ICONV(MM'R%2':'/01/':YY,'D4/') - 1
   ARCFISCAL<6,POS> = OR.PURGE.DATES<ARCFISCAL<1,POS>[5,2]>
*T26842 T26916 ^
*T25292 ^
*
   SELECT OPEN.RECV
   DATA = 1
   LOOP
      READNEXT OR.ID ELSE DATA = 0
   WHILE DATA DO
      IF OR.ID[1,3] # CONO THEN GOTO 2999
      MATREADU OR.REC FROM OPEN.RECV, OR.ID ELSE
         RELEASE OPEN.RECV, OR.ID
         GOTO 2999
      END
*T26921 v
*     IF OR.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN
      IF DIV.CODE # "ALL" THEN
         LOCATE DIV.CODE IN OR.DIV<1>,1 SETTING DFND ELSE
*T26921 ^
            RELEASE OPEN.RECV, OR.ID
            GOTO 2999
         END ; * T26921
      END
      IF OR.BAL + 0 <> 0 THEN
         RELEASE OPEN.RECV, OR.ID
         GOTO 2999
      END
      BLK = 0
      TR.CNT = COUNT(OR.TYPE,VM) + (OR.TYPE # "")
      FOR TR = TR.CNT TO 1 STEP - 1 UNTIL BLK
*        IF OR.TR.DATE<1,TR> > ARCFISCAL<6> THEN BLK = 1 ;* T23278
         IF OR.TR.DATE<1,TR> > ARCFISCAL<6,POS> THEN BLK = 1 ;* T23278
      NEXT TR
      IF BLK THEN
         RELEASE OPEN.RECV, OR.ID
         GOTO 2999
      END
*T25763 v ADDED CODE TO CREATE PURGED FILE ENTRIES
      MAT POR.REC = ""
      FOR INDEX.COUNT = 1 TO OR.REC.SIZE
         POR.REC(INDEX.COUNT) = OR.REC(INDEX.COUNT)
      NEXT INDEX.COUNT
      READV INVOICE.DESC FROM INVOICE,OR.ID,12 THEN
         POR.INV.DESC = INVOICE.DESC<1,1>
      END ELSE
         READV INVOICE.DESC FROM MANUAL.INVOICE,OR.ID,12 THEN
            POR.INV.DESC = INVOICE.DESC<1.1>
         END ELSE
            POR.INV.DESC = ""
         END
      END
      MATWRITE POR.REC ON PURGED.OPEN.RECV, OR.ID
      READ PURGED.XREF.REC FROM PURGED.OR.XREF, CONO:OR.CUST ELSE PURGED.XREF.REC = ""
      PURGED.XREF.REC<-1,0,0> = OR.ID
      WRITE PURGED.XREF.REC ON PURGED.OR.XREF, CONO:OR.CUST
*T25763 ^
      DELETE OPEN.RECV, OR.ID
      FND = 1
      MATREADU CUST.REC FROM CUSTOMER, CONO:OR.CUST ELSE FND = 0
      IF FND THEN
         LOCATE OR.ID[4,99] IN CUST.INVOICE<1>,1 SETTING FND ELSE FND = 0
         IF FND THEN
            CUST.INVOICE = DELETE(CUST.INVOICE,1,FND,0)
            MATWRITE CUST.REC ON CUSTOMER, CONO:OR.CUST
         END ELSE
            RELEASE CUSTOMER, CONO:OR.CUST
         END
      END ELSE
         RELEASE CUSTOMER, CONO:OR.CUST
      END
2999 *
   REPEAT
   IF EOY = 0 THEN GOTO 7000
   READ JCFISCAL FROM CONTROL, CONO : "JCFISCAL" ELSE
      JCFISCAL = FR.CURR.PER<1,POS>
   END
   YEAR = FR.CURR.PER<1,POS>[1,4]
   IF YEAR > JCFISCAL<1>[1,4] THEN
      YEAR = JCFISCAL<1>[1,4]
   END
   YEAR = YEAR - 2
**** CUSTOMER ****
   GOTO 4000 ;*T28449
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING CUSTOMER FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   SELECT CUSTOMER
   WRITE "CUSTOMER" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT CUST.ID ELSE DATA = 0
   WHILE DATA DO
      IF CUST.ID[1,3] # CONO THEN GOTO 3999
      MATREADU CUST.REC FROM CUSTOMER,CUST.ID ELSE
         RELEASE CUSTOMER, CUST.ID
         GOTO 3999
      END
      FND = 0
      FOR I = 1 TO NUM.PERIODS WHILE FND = 0
         PERIOD = YEAR : STR("0",2-LEN(I)) : I
         LOCATE PERIOD IN CUST.SALES.PER<1>,1 SETTING FND ELSE
            FND = 0
         END
      NEXT I
      IF FND THEN
         CNT = COUNT(CUST.SALES.PER,VM) + 1
         FOR I = CNT TO FND STEP -1
            IF YEAR = CUST.SALES.PER<1,I>[1,4] THEN
               CUST.SALES.PER = DELETE(CUST.SALES.PER,1,I,0)
               CUST.SALES = DELETE(CUST.SALES,1,I,0)
            END
         NEXT I
      END
      MATWRITE CUST.REC ON CUSTOMER,CUST.ID
3999 REPEAT
4000 *
**** SHIP.VIA ****
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING SHIP.VIA FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   SELECT SHIP.VIA
   WRITE "SHIP.VIA" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT SHPV.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # SHPV.ID[1,3] THEN GOTO 4999
      MATREADU SHIP.VIA.REC FROM SHIP.VIA, SHPV.ID ELSE
         RELEASE SHIP.VIA, SHPV.ID
         GOTO 4999
      END
      FND = 0
      FOR I = 1 TO NUM.PERIODS WHILE FND = 0
         PERIOD = YEAR : STR("0",2-LEN(I)) : I
         LOCATE PERIOD IN SHPV.PERIOD<1>,1 SETTING FND ELSE
            FND = 0
         END
      NEXT I
      IF FND THEN
         CNT = COUNT(SHPV.PERIOD,VM) + 1
         FOR I = CNT TO FND STEP -1
            IF YEAR = SHPV.PERIOD<1,I>[1,4] THEN
               SHPV.PERIOD = DELETE(SHPV.PERIOD,1,I,0)
               SHPV.SHPMT = DELETE(SHPV.SHPMT,1,I,0)
               SHPV.COST = DELETE(SHPV.COST,1,I,0)
               SHPV.SALE = DELETE(SHPV.SALE,1,I,0)
            END
         NEXT I
      END
      MATWRITE SHIP.VIA.REC ON SHIP.VIA, SHPV.ID
4999 REPEAT
**** TAX ****
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING TAX FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   SELECT TAX
   WRITE "TAX" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT TAX.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # TAX.ID[1,3] THEN GOTO 5999
      MATREADU TAX.REC FROM TAX, TAX.ID ELSE
         RELEASE TAX, TAX.ID
         GOTO 5999
      END
      FND = 0
      FOR I = 1 TO NUM.PERIODS WHILE FND = 0
         PERIOD = YEAR : STR("0",2-LEN(I)) : I
         LOCATE PERIOD IN TAX.PERIOD<1>,1 SETTING FND ELSE
            FND = 0
         END
      NEXT I
      IF FND THEN
         CNT = COUNT(TAX.PERIOD,VM) + 1
         FOR I = CNT TO FND STEP -1
            IF YEAR = TAX.PERIOD<1,I>[1,4] THEN
               TAX.PERIOD = DELETE(TAX.PERIOD,1,I,0)
               TAX.TAXABLE = DELETE(TAX.TAXABLE,1,I,0)
               TAX.CHARGED = DELETE(TAX.CHARGED,1,I,0)
            END
         NEXT I
      END
      MATWRITE TAX.REC ON TAX, TAX.ID
5999 REPEAT
*T26842 v
PRFND=0
READ OPRODUCTION.REC FROM CONTROL,CONO:FR.CURR.PER<1,POS>[1,4]:"PRODUCTION.WEEKS" THEN
  READ PRODUCTION.REC FROM CONTROL,CONO:FR.NEXT.PER<1,POS>[1,4]:"PRODUCTION.WEEKS" THEN
    PRFND=1
    NO.WKS=DCOUNT(OPRODUCTION.REC<1>,VM)
    FOR I = 1 TO NUM.PERIODS
      LOCATE I IN PRODUCTION.REC<2>,1 SETTING FND THEN
        IF I = 1 THEN
          OR.PURGE.DATES<1> = OPRODUCTION.REC<1,NO.WKS>
        END ELSE
          OR.PURGE.DATES<I> = PRODUCTION.REC<1,FND-1>
        END
      END
    NEXT I
  END
END
IF NOT(PRFND) THEN
  LYTEST='02/29/':FR.NEXT.PER<1,POS>
  LYTEST=ICONV(LYTEST,'D4/')
  FOR I = 1 TO NUM.PERIODS
    IF LYTEST THEN OR.PURGE.DATES<I>+=366 ELSE OR.PURGE.DATES<I>+=365
  NEXT I
END
WRITE OR.PURGE.DATES ON CONTROL,CONO:"OPEN.REC.PURGE.DATES"
*T26842 ^
7000 IF CO.GLS = "N" THEN GOTO 8000
   IF CO.GL.LINK<1,1> # "Y" THEN GOTO 8000
**** EOM.TRANS (1) ****
   ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (1) FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   ACCOUNTS = ""; AMOUNTS = ""
   SELECT EOM.TRANS
   WRITE "EOM.TRANS (1)" ON CONTROL , PROG.ID
   MATREAD CSY.REC FROM CONTROL, CONO : "COA.SYS" ELSE MAT CSY.REC = ""
   LOCATE "MJ" IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL
   L.GLA = CSY.LEVEL<1,FND>
   MAT GLA.REC = ""
   GLA.DATE = TODAY
   GLA.SRC = "MJ"
   GLA.MON = FR.CURR.PER<1,POS>
   ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/")
   READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 1
   WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
   DATA = 1
   BEGIN CASE
      CASE L.GLA = "R"
         LOOP
            READNEXT ETR.ID ELSE DATA = 0
         WHILE DATA DO
            IF ETR.ID[1,3] # CONO THEN GOTO 7200
            MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7100
            TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
            ACCT = ETR.ID[1,ACCT.LEN]
            CUST.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
            IF EQV.FLG = 1 THEN
               READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
               ACCT = N.ACCT
            END
            COA.ID = ACCT[11,IN.ACCT.LEN]
            MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
               MAT COA.REC = ""
               COA.DESC = UNKNOWN
            END
            BEGIN CASE
               CASE COA.DETAIL = "R" OR COA.DETAIL = "D"
                  LOOP
                     COUNTER = COUNTER + 1
                     IF COUNTER > 999998 THEN COUNTER = 1
                     GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                     READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
                  WHILE DUMMY # "" DO REPEAT
                  GLA.DESC = COA.DESC "L#25" : ODATE
                  GLA.AMT = ETR.AMT
                  GLA.REF = CUST.NO
                  MATWRITE GLA.REC ON GLA, GLA.ID
               CASE 1
                  LOCATE ACCT IN ACCOUNTS,1 SETTING AFND ELSE
                     ACCOUNTS<AFND> = ACCT
                     AMOUNTS<AFND> = ""
                  END
                  IF TYPE = "D" THEN
                     AMOUNTS<AFND,1> = AMOUNTS<AFND,1> + ETR.AMT
                  END ELSE
                     AMOUNTS<AFND,2> = AMOUNTS<AFND,2> + ETR.AMT
                  END
            END CASE
7100        RELEASE EOM.TRANS, ETR.ID
7200     REPEAT
      CASE L.GLA = "D"
         LOOP
            READNEXT ETR.ID ELSE DATA = 0
         WHILE DATA DO
            IF ETR.ID[1,3] # CONO THEN GOTO 7400
            MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7300
            ACCT = ETR.ID[1,ACCT.LEN]
            CUST.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
            TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
            IF EQV.FLG = 1 THEN
               READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
               ACCT = N.ACCT
            END
            COA.ID = ACCT[11,IN.ACCT.LEN]
            MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
               MAT COA.REC = ""
               COA.DESC = UNKNOWN
            END
            BEGIN CASE
               CASE COA.DETAIL = "D"
                  TCNT = COUNT(ETR.TRAN,VM) + (ETR.TRAN # "")
                  FOR I = 1 TO TCNT
                     LOOP
                        COUNTER = COUNTER + 1
                        IF COUNTER > 999998 THEN COUNTER = 1
                        GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                        READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
                     WHILE DUMMY # "" DO REPEAT
                     GLA.DESC = ETR.RDATE<1,I> "L#8" : ETR.TRAN<1,I> : "-" : ETR.REF<1,I>
                     GLA.DESC = GLA.DESC "L#25" : " " : OCONV(ETR.DATE<1,I>,"D2/")
                     GLA.AMT = ETR.TAMT<1,I>
                     GLA.REF = CUST.NO
                     MATWRITE GLA.REC ON GLA, GLA.ID
                  NEXT I
               CASE COA.DETAIL = "R"
                  LOOP
                     COUNTER = COUNTER + 1
                     IF COUNTER > 999998 THEN COUNTER = 1
                     GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                     READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
                  WHILE DUMMY # "" DO REPEAT
                  GLA.DESC = COA.DESC "L#25" : ODATE
                  GLA.AMT = ETR.AMT
                  GLA.REF = CUST.NO
                  MATWRITE GLA.REC ON GLA, GLA.ID
               CASE 1
                  LOCATE ACCT IN ACCOUNTS,1 SETTING AFND ELSE
                     ACCOUNTS<AFND> = ACCT
                     AMOUNTS<AFND> = ""
                  END
                  IF TYPE = "D" THEN
                     AMOUNTS<AFND,1> = AMOUNTS<AFND,1> + ETR.AMT
                  END ELSE
                     AMOUNTS<AFND,2> = AMOUNTS<AFND,2> + ETR.AMT
                  END
            END CASE
7300        RELEASE EOM.TRANS, ETR.ID
7400     REPEAT
      CASE 1
         LOOP
            READNEXT ETR.ID ELSE DATA = 0
         WHILE DATA DO
            IF ETR.ID[1,3] # CONO THEN GOTO 7600
            MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7500
            ACCT = ETR.ID[1,ACCT.LEN]
            TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
            IF EQV.FLG = 1 THEN
               READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
               ACCT = N.ACCT
            END
            LOCATE ACCT IN ACCOUNTS,1 SETTING FND ELSE
               ACCOUNTS<FND> = ACCT
               AMOUNTS<FND> = ""
            END
            IF TYPE = "D" THEN
               AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
            END ELSE
               AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
            END
7500        RELEASE EOM.TRANS, ETR.ID
7600     REPEAT
   END CASE
   GLA.REF = ""
   ACNT = COUNT(ACCOUNTS,AM)+(ACCOUNTS # "")
   FOR I = 1 TO ACNT
      ACCT = ACCOUNTS<I>
      COA.ID = CONO : ACCT[11,IN.ACCT.LEN]
      MATREAD COA.REC FROM COA, COA.ID ELSE COA.DESC = UNKNOWN
      GLA.DESC = COA.DESC "L#25" : ODATE
      FOR J = 1 TO 2
         IF AMOUNTS<I,J> = "" THEN GOTO 7900
         LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
         WHILE DUMMY # "" DO REPEAT
         GLA.AMT = AMOUNTS<I,J>
         MATWRITE GLA.REC ON GLA, GLA.ID
7900  NEXT J
   NEXT I
   WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
   ACCOUNTS = ""
   AMOUNTS = ""
**** EOM.TRANS (2) ****
8000 ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (2) FILE"
   ECD.ACTION = 5; CALL SCRN.EDIT
   SELECT EOM.TRANS
   WRITE "EOM.TRANS (2)" ON CONTROL , PROG.ID
   DATA = 1
   LOOP
      READNEXT ETR.ID ELSE DATA = 0
   WHILE DATA DO
      IF ETR.ID[1,3] # CONO THEN GOTO 8999
      MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
         RELEASE EOM.TRANS, ETR.ID
         GOTO 8999
      END
*T25975 v
      CURR.PER = FR.CURR.PER<1,POS>
      MAT ETH.REC = MAT ETR.REC
      DONE = 0
      SEQ = 0
      ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER
      LOOP UNTIL DONE = 1 DO
         SEQ = SEQ + 1
         ETH.KEY = ETH.ID:"*":SEQ
         READ CHECKIT FROM ARS.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1
      REPEAT
      MATWRITE ETH.REC ON ARS.EOM.TRANS.HIST, ETH.KEY
*T25975 ^
      DELETE EOM.TRANS, ETR.ID
8999 REPEAT
   WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
   EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
* T26685
*  WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>
   WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID
* T26685 ^
   SELECT EOM.TRANS
   READNEXT ETR.ID ELSE
      IF D.M.FLG = "PERIOD" THEN
         FR.CURR.PER<1,POS> = FR.NEXT.PER<1,POS>
         FR.CURR.DATE<1,POS> = FR.NEXT.DATE<1,POS>
         FR.CLOSE.DATE<1,POS> = TODAY
      END
      FR.NEXT.PER<1,POS> = ""; FR.NEXT.DATE<1,POS> = ""
      FR.PRINT<1,POS> = "";FR.D.M.FLG<1,POS> = ""
      MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
      DELETE CONTROL, PROG.ID
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   FR.PRINT<1,POS> = "X"
   MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
   ERRMSG = "E R R O R !!! CANNOT LOCATE ALL TRANSACTIONS"
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   GOTO 93000
91000 ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 WRITEV ERRMSG ON CONTROL, PROG.ID,2
   ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
99000 INBUFF<5> = "END"
   PROCWRITE INBUFF
*** END OF JOB ***
99999 END
