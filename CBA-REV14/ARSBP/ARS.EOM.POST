*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ARSBP
* PROGRAM     - ARS.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*
*TASK 17927 GAT 10/31/94 ADD REVENUE ALLOCATION 
*T21177 diane 01/23/1997 * REV11 UPG ADD CLOSE
*T23278 markt 12/04/1998 * Make fiscal data multi-value by division.
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
  MAT FILE.VARS=''
  MAT EDIT.COM.DRIVER=''
*
***** SETUP ERRMSG ROUTINE
*
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
  PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
  END
  CONO = INBUFF<1>
  DIV.CODE = INBUFF<7>;* T23278
  FR.NEXT.PER = ""
*
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FILE IS MISSING';GOTO 93000
  OPEN '','MANUAL.INVOICE' TO MANUAL.INVOICE ELSE ERRMSG='MANUAL.INVOICE FILE IS MISSING';GOTO 93000
  OPEN '','TAX' TO TAX ELSE ERRMSG='TAX FILE IS MISSING';GOTO 93000
  OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE IS MISSING';GOTO 93000
  OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG='SALES.CODE FILE IS MISSING';GOTO 93000
  OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
  OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MISSING';GOTO 93000
  OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE IS MISSING';GOTO 93000
  OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE IS MISSING';GOTO 93000
*
***** GET CONO
*
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
  END
  SYS.FISCAL = 'ARSFISCAL'
  STMT.HEAD = 'MANUAL SALES'
*COPY>PMCBP>EOD.POST
  IF ECD.RET.VALUE = 'END' THEN
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
  END
  CLEARFILE EOM.TRANS
  CLEARFILE POST.REJECTS
  PRR.SEQ = 10000
  OLD.CUST = "!@#$%^&*"
  MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0
  SA.SAL.ACCT = GLTB.SALES
  SA.SAL.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.MSC.SALE ELSE COA.LEVEL = 0
  SA.MSC.ACCT = GLTB.MSC.SALE
  SA.MSC.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.AR ELSE COA.LEVEL = 0
  SA.INV.ACCT = GLTB.AR
  SA.INV.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.SALES.TAX ELSE COA.LEVEL = 0
  SA.TAX.ACCT = GLTB.SALES.TAX
  SA.TAX.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.FRT ELSE COA.LEVEL = 0
  SA.FRT.ACCT = GLTB.FRT
  SA.FRT.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.TRADE.DISC ELSE COA.LEVEL = 0
  SA.DSC.ACCT = GLTB.TRADE.DISC
  SA.DSC.LEVEL = COA.LEVEL
  DATA = 1
  LOOP
      READNEXT MIV.ID ELSE DATA = 0
  WHILE DATA DO
      IF CONO # MIV.ID[1,3] THEN GOTO 999
      MIV.NO = MIV.ID[4,99]
      MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
          MAT PRR.REC = ''
          PRR.FILE = 'MANUAL.INVOICE'
          PRR.ERR = 'CANNOT LOCATE'
          PRR.ID = MIV.NO
          PRR.SEQ = PRR.SEQ + 1
          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
          RELEASE MANUAL.INVOICE, MIV.ID
          GOTO 999
      END
      IF MIV.GLA.DATE # "" AND MIV.GLA.DATE # "P" THEN
          RELEASE MANUAL.INVOICE, MIV.ID
          GOTO 999
      END
***** T23278 v
      IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
          RELEASE MANUAL.INVOICE, MIV.ID
          GOTO 999
      END
*         IF MIV.PROC.MON <> FR.CURR.PER THEN
      IF MIV.PROC.MON <> FR.CURR.PER<1,POS> THEN
***** T23278 ^
          RELEASE MANUAL.INVOICE, MIV.ID
          GOTO 999
      END
      IF OLD.CUST # MIV.CUST.NO THEN
          OLD.CUST = MIV.CUST.NO
          NEW.REC = 0; NEW.PTR = 0
      END
      P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING INVOICE NUMBER - ':MIV.NO "L#10" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = COUNT(MIV.AMOUNT,VM) + (MIV.AMOUNT # '')
      TOT.AMT = 0
      FOR I = 1 TO CNT
          BEGIN CASE
              CASE MIV.CHG.CODE<1,I> = "SUB"
              CASE MIV.CHG.CODE<1,I> = "SUBT"
              CASE MIV.CHG.CODE<1,I> = "TOT"
              CASE MIV.CHG.CAT<1,I> = "CMT"
              CASE MIV.CHG.CAT<1,I> = "TAX"
                  MATREAD TAX.REC FROM TAX, CONO :MIV.TAX.JURS<1,I> ELSE
                      MAT TAX.REC = ''
                  END
                  BEGIN CASE
                      CASE TAX.ACCT = SA.TAX.ACCT
                      CASE TAX.ACCT # ""
                          TAX.ACCT = TAX.ACCT : STR("0",IN.ACCT.LEN-LEN(TAX.ACCT))
                          TAX.ACCT = TAX.ACCT[1,IN.ACCT.LEN]
                          MATREAD COA.REC FROM COA, CONO : TAX.ACCT ELSE COA.LEVEL = 0
                          SA.TAX.ACCT = TAX.ACCT
                          SA.TAX.LEVEL = COA.LEVEL
                      CASE GLTB.SALES.TAX = SA.TAX.ACCT
                      CASE 1
                          MATREAD COA.REC FROM COA, CONO : GLTB.SALES.TAX ELSE COA.LEVEL = 0
                          SA.TAX.ACCT = GLTB.SALES.TAX
                          SA.TAX.LEVEL = COA.LEVEL
                  END CASE
                  BEGIN CASE
                      CASE SA.TAX.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.TAX.ACCT
                      CASE SA.TAX.LEVEL < 2
                          T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.TAX.ACCT
                      CASE MIV.DEPT<1,I> = ""
                          T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.TAX.ACCT
                      CASE 1
                          T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.TAX.ACCT
                  END CASE
                  INV.AMT = MIV.AMOUNT<1,I>
                  TOT.AMT = TOT.AMT + INV.AMT
                  GOSUB 2000
              CASE MIV.CHG.CAT<1,I> = "SHP"
                  MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO :MIV.TAX.JURS<1,I> ELSE
                      MAT SHIP.VIA.REC = ''
                  END
                  BEGIN CASE
                      CASE SHPV.GL.NO = SA.FRT.ACCT
                      CASE SHPV.GL.NO # ""
                          SHPV.GL.NO = SHPV.GL.NO : STR("0",IN.ACCT.LEN-LEN(SHPV.GL.NO))
                          SHPV.GL.NO = SHPV.GL.NO[1,IN.ACCT.LEN]
                          MATREAD COA.REC FROM COA, CONO : SHPV.GL.NO ELSE COA.LEVEL = 0
                          SA.FRT.ACCT = SHPV.GL.NO
                          SA.FRT.LEVEL = COA.LEVEL
                      CASE GLTB.FRT = SA.FRT.ACCT
                      CASE 1
                          MATREAD COA.REC FROM COA, CONO : GLTB.FRT ELSE COA.LEVEL = 0
                          SA.FRT.ACCT = GLTB.FRT
                          SA.FRT.LEVEL = COA.LEVEL
                  END CASE
                  BEGIN CASE
                      CASE SA.FRT.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.FRT.ACCT
                      CASE SA.FRT.LEVEL < 2
                          T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.FRT.ACCT
                      CASE MIV.DEPT<1,I> = ""
                          T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.FRT.ACCT
                      CASE 1
                          T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.FRT.ACCT
                  END CASE
                  INV.AMT = MIV.AMOUNT<1,I>
                  TOT.AMT = TOT.AMT + INV.AMT
                  GOSUB 2000
              CASE MIV.CHG.CAT<1,I> = "MSC"
                  MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.TAX.JURS<1,I> ELSE
                      MAT SLC.REC = ""
                  END
                  BEGIN CASE
                      CASE SLC.GL.ACCT = SA.MSC.ACCT
                      CASE SLC.GL.ACCT # ""
                          SLC.GL.ACCT = SLC.GL.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.GL.ACCT))
                          SLC.GL.ACCT = SLC.GL.ACCT[1,IN.ACCT.LEN]
                          MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
                          SA.MSC.ACCT = SLC.GL.ACCT
                          SA.MSC.LEVEL = COA.LEVEL
                      CASE GLTB.MSC.SALE = SA.MSC.ACCT
                      CASE 1
                          MATREAD COA.REC FROM COA, CONO : GLTB.MSC.SALE ELSE COA.LEVEL = 0
                          SA.MSC.ACCT = GLTB.MSC.SALE
                          SA.MSC.LEVEL = COA.LEVEL
                  END CASE
                  IF CO.ALLOC.FLG = "Y" AND MIV.ALLOC.DIV<1,I> # "" THEN
                      HOLD.ACCT = SA.MSC.ACCT
                      GOSUB 7000
                      GOTO 520
                  END
                  BEGIN CASE
                      CASE SA.MSC.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.MSC.ACCT
                      CASE SA.MSC.LEVEL < 2
                          T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.MSC.ACCT
                      CASE MIV.DEPT<1,I> = ""
                          T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.MSC.ACCT
                      CASE 1
                          T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.MSC.ACCT
                  END CASE
                  INV.AMT = MIV.AMOUNT<1,I>
                  TOT.AMT = TOT.AMT + INV.AMT
                  GOSUB 2000
520 *
              CASE MIV.CHG.CAT<1,I> = "DSC"
                  MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.TAX.JURS<1,I> ELSE
                      MAT SLC.REC = ""
                  END
                  BEGIN CASE
                      CASE SLC.DS.ACCT = SA.DSC.ACCT
                      CASE SLC.DS.ACCT # ""
                          SLC.DS.ACCT = SLC.DS.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.DS.ACCT))
                          SLC.DS.ACCT = SLC.DS.ACCT[1,IN.ACCT.LEN]
                          MATREAD COA.REC FROM COA, CONO : SLC.DS.ACCT ELSE COA.LEVEL = 0
                          SA.DSC.ACCT = SLC.DS.ACCT
                          SA.DSC.LEVEL = COA.LEVEL
                      CASE GLTB.TRADE.DISC = SA.DSC.ACCT
                      CASE 1
                          MATREAD COA.REC FROM COA, CONO : GLTB.TRADE.DISC ELSE COA.LEVEL = 0
                          SA.DSC.ACCT = GLTB.TRADE.DISC
                          SA.DSC.LEVEL = COA.LEVEL
                  END CASE
                  BEGIN CASE
                      CASE SA.DSC.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
                      CASE SA.DSC.LEVEL < 2
                          T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
                      CASE MIV.DEPT<1,I> = ""
                          T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.DSC.ACCT
                      CASE 1
                          T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.DSC.ACCT
                  END CASE
                  INV.AMT = MIV.AMOUNT<1,I>
                  TOT.AMT = TOT.AMT + INV.AMT
                  GOSUB 2000
              CASE 1
                  IF MIV.SALES.CODE<1,I> = "" THEN
                      MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.SALES.CODE<1,1> ELSE
                          MAT SLC.REC = ""
                      END
                  END ELSE
                      MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.SALES.CODE<1,I> ELSE
                          MAT SLC.REC = ""
                      END
                  END
                  BEGIN CASE
                      CASE SLC.GL.ACCT = SA.SAL.ACCT
                      CASE SLC.GL.ACCT # ""
                          SLC.GL.ACCT = SLC.GL.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.GL.ACCT))
                          SLC.GL.ACCT = SLC.GL.ACCT[1,IN.ACCT.LEN]
                          MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
                          SA.SAL.ACCT = SLC.GL.ACCT
                          SA.SAL.LEVEL = COA.LEVEL
                      CASE GLTB.SALES = SA.SAL.ACCT
                      CASE 1
                          MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0
                          SA.SAL.ACCT = GLTB.SALES
                          SA.SAL.LEVEL = COA.LEVEL
                  END CASE
                  IF CO.ALLOC.FLG = "Y" AND MIV.ALLOC.DIV<1,I> # "" THEN
                      HOLD.ACCT = SA.SAL.ACCT
                      GOSUB 7000
                      GOTO 540
                  END
                  BEGIN CASE
                      CASE SA.SAL.LEVEL < 1
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.SAL.ACCT
                      CASE SA.SAL.LEVEL < 2
                          T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.SAL.ACCT
                      CASE MIV.DEPT<1,I> = ""
                          T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.SAL.ACCT
                      CASE 1
                          T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.SAL.ACCT
                  END CASE
                  INV.AMT = MIV.AMOUNT<1,I>
                  TOT.AMT = TOT.AMT + INV.AMT
                  GOSUB 2000
540 *
          END CASE
      NEXT I
      BEGIN CASE
          CASE SA.INV.LEVEL < 1
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
          CASE 1
              T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
      END CASE
      INV.AMT = TOT.AMT
      GOSUB 1000
      IF NEW.PTR THEN
          NEW.REC = NEW.REC + 1
          NEW.PTR = 0
      END
      MIV.GLA.DATE = 'P'
      MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID
999 REPEAT
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
1000 BEGIN CASE
      CASE INV.AMT > 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
      CASE INV.AMT + 0 < 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
      CASE 1
          GOTO 1999
  END CASE
  MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
  END
  ETR.AMT = ETR.AMT + INV.AMT
  LOCATE MIV.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS MIV.NO BEFORE ETR.TRAN<1,PTR>
  INS MIV.DATE BEFORE ETR.DATE<1,PTR>
  INS INV.AMT BEFORE ETR.TAMT<1,PTR>
  INS MIV.PO BEFORE ETR.REF<1,PTR>
  IF PTR > 99 THEN NEW.PTR = 1
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
2000 BEGIN CASE
      CASE INV.AMT > 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
      CASE INV.AMT + 0 < 0
          ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
      CASE 1
          GOTO 2999
  END CASE
  MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
  END
  ETR.AMT = ETR.AMT - INV.AMT
  LOCATE MIV.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS MIV.NO BEFORE ETR.TRAN<1,PTR>
  INS MIV.DATE BEFORE ETR.DATE<1,PTR>
  INS (0 - INV.AMT) BEFORE ETR.TAMT<1,PTR>
  INS MIV.PO BEFORE ETR.REF<1,PTR>
  IF PTR > 99 THEN NEW.PTR = 1
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN
*
7000 * PROCESS REVENUE ALLOCATION 
  PCNT = DCOUNT(MIV.ALLOC.DIV<1,I>,SVM)
  FOR P = 1 TO PCNT
      T.ACCT = MIV.ALLOC.DIV<1,I,P>:HOLD.ACCT
      INV.AMT = MIV.ALLOC.AMT<1,I,P>
      TOT.AMT = TOT.AMT + INV.AMT
      GOSUB 2000
  NEXT P
  RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99000 *
*  IF FR.NEXT.PER = "" THEN
  IF FR.NEXT.PER<1,POS> = "" THEN
***** T23278 ^
      INBUFF<5> = "END"
      PROCWRITE INBUFF
  END
*** END OF JOB ***
99999 END
