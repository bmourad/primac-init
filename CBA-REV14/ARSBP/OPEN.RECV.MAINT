*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - ARSBP
* PROGRAM      - OPEN.RECV.MAINT
* BY           - JIHAD YAMOUT ,C.B.A
* DATE         - 09/26/84
* DESCRIPTION  -
*
* LAST COMPILE - 574
*
*T22154 renee 08/18/1997 * Transferring changes made to this program in
*                          Rev10b to Rev11.
*T23278 markt 12/15/1998 * Add check for divisional security. 
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T26126 adelgado 03/01/2002 * Implement the LOCKED clause for READU.
*T25764 cmykleb 05/02/2002 * Add invoice due date to screen and also
*                            re-calc due date when the invoice date is
*                            changed.
*T27210 lross 01/10/2003 * Error in determining source of INVOICE data
*                          and whether INVOICE has been purged before
*                          writing back to file.
*                          Also, TERMS not looking at ORDER.INVOICE if
*                          OPS INVOICE.
*T27646 thompson 08/18/2003 * ALL FOR MULTI PLATFORM USE
*ENDDOC
*********************************************************************
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>JOB
*COPY>OPS.CPYLIB>ORDER
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>JCS.CPYLIB>INVOICE
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>TERMS           ; * T25764
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
    DIM OVC.REC(60)
    EQU OVC.DATE    TO OVC.REC(1)
    EQU OVC.PO.NO   TO OVC.REC(33)
    EQU OVC.TERMS   TO OVC.REC(38) ;*T27210
    EQU OVC.DUE.DATE   TO OVC.REC(39) ;*T27210
*** SAVE AR RECORDS
***** SETUP ERRMSG ROUTINE
    SYS.TYPE = 1
    CALL SYSCOM(MAT SYSCOM.REC)
**** OPEN FILES
    OPEN '','OPEN.RECV' TO OPEN.RECV ELSE ERRMSG = 'OPEN.RECV FILE IS MISSING';GOTO 93000
    O.R.H = 1
    OPEN "","OPEN.RECV.HIST" TO OPEN.RECV.HIST ELSE O.R.H = 0
    OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE IS MISSING" ; GOTO 93000
    OPEN '','ARS.SCREENS' TO M.SCREENS ELSE ERRMSG = "M.SCREENS FILE IS MISSING" ; GOTO 93000
    OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING" ; GOTO 93000
    OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING" ; GOTO 93000
    OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING' ; GOTO 93000
    OPEN '','INVOICE' TO INVOICE ELSE ERRMSG = 'INVOICE FILE IS MISSING' ; GOTO 93000
    OPEN '','MANUAL.INVOICE' TO MANUAL.INVOICE ELSE ERRMSG = 'MANUAL.INVOICE FILE IS MISSING' ; GOTO 93000
*T25764 v
    OPEN '','TERMS' TO TERMS ELSE ERRMSG = 'TERMS FILE IS MISSING' ; GOTO 93000
*T25764 ^
**** GET CONO
    MAT COMP.REC = ''
    CONO = ''
    CALL GET.CONO(CONO,MAT COMP.REC)
    IF CONO = "END" THEN GOTO 99999
    IF CO.JCS = "Y" THEN
      OPEN '','JOB' TO JOB ELSE ERRMSG = "JOB FILE IS MISSING" ; GOTO 93000
    END
    IF CO.OPS = "Y" THEN
      OPEN '','ORDER' TO ORDER ELSE ERRMSG = "ORDER FILE IS MISSING" ; GOTO 93000
      OPEN '','ORDER.INVOICE' TO ORDER.INVOICE ELSE ERRMSG = "ORDER.INVOICE FILE IS MISSING" ; GOTO 93000
    END
**** SET UP GEN.XREF.REC
    MAT EDIT.COM = '' ; MAT EDIT.COM.DRIVER = ''
**** MAIN PROCESSING
    LOGNAME = 'LOGNAME'; CALL SYSVARS.SUB(LOGNAME); *T27646
    INVOICE.TYPE=""
    ECD.SCRN.CNT = 1
    ECD.SCRN.NAME<1> = "OPEN.RECV.MAINT"
    ECD.ACTION=1;CALL SCRN.EDIT
**** PRINT SCREEN
    ECD.SCRN.NO = 1
    ECD.ACTION=2 ; CALL SCRN.EDIT
    BEGIN.PAGE = 15
    PAGE.SIZE = 5
    LINE.SPACE = 1
**** CONTROL SUB
80*
    RELEASE         ;* T26126
    MAT OR.REC = '' ; MAT CUST.REC = ''; MAT JOB.REC = ''; MAT ORD.REC = ''
    MAT MIV.REC = ''; MAT IVC.REC = ''; MAT OVC.REC = ''
    MAT SCV.REC = ""; ECD.ACTION = 6; CALL SCRN.EDIT
**** ENTER INVOICE NUMBER
200*
    IF O.R.H > 0 THEN O.R.H = 1
    ECD.NUM = 1; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 99999
  * T26126 v
    MATREADU OR.REC FROM OPEN.RECV, CONO : ECD.RET.VALUE LOCKED
      ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 200 
    END ELSE
  * T26126 ^
      IF O.R.H THEN
      * T26126 V
        MATREADU OR.REC FROM OPEN.RECV.HIST, CONO : ECD.RET.VALUE LOCKED
          ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STATUS())
          GOSUB 91000;GOTO 200 
        END ELSE
      * T26126 ^
          ERRMSG = "CANNOT LOCATE INVOICE - " : ECD.RET.VALUE
          GOSUB 91000; GOTO 200
        END
        O.R.H = 2
      END ELSE
        ERRMSG = "CANNOT LOCATE INVOICE - " : ECD.RET.VALUE
        GOSUB 91000; GOTO 200
      END
    END
*T23278 v
    DIV.CODE = OR.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = ''; *T27646
    CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 200
    END
*T23278 ^
    INV.NO = ECD.RET.VALUE
    INVOICE.TYPE = INV.NO[LEN(INV.NO)-1,2]
    IF INVOICE.TYPE # "MI" THEN
*T27210 v
*     MATREAD IVC.REC FROM INVOICE,CONO:INV.NO ELSE INVOICE.TYPE="O"
      MATREAD IVC.REC FROM INVOICE,CONO:INV.NO THEN
        INVOICE.TYPE = 'I'
      END ELSE
        IF CO.OPS = 'Y' THEN
*         MATREAD OVC.REC FROM ORDER.INVOICE,CONO:INV.NO ELSE INVOICE.TYPE="I"
          MATREAD OVC.REC FROM ORDER.INVOICE,CONO:INV.NO THEN
            INVOICE.TYPE = 'O'
          END
        END
      END
    END ELSE
*     MATREAD MIV.REC FROM MANUAL.INVOICE,CONO:INV.NO ELSE INVOICE.TYPE="I"
      MATREAD MIV.REC FROM MANUAL.INVOICE,CONO:INV.NO ELSE INVOICE.TYPE = ''
    END
*T27210 ^
    GOSUB 10000
    LN = 1;OLD.START.LINE = 0
    GOSUB 11000
**** ENTER OPTION
    MORE = 1
    LOOP
      ECD.NUM = 10;ECD.ACTION = 4;SCV.REC(ECD.NUM)<1> = '';CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
        CASE OPTION = 'E' OR OPTION = 'END'
          MORE = 0
        CASE NUM(OPTION)
          ON OPTION GOSUB 1000,2000
        CASE OPTION = "S"
          LN = LN + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          GOSUB 11000
      * T25978 v
        CASE OPTION = 'SR'
          LN -= PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 11000
        CASE OPTION = 'ST'
          LN = 1
          GOSUB 11000
        CASE OPTION = 'SB'
          LN = LINES
          GOSUB 11000
      * T25978 ^
        CASE OPTION = 'F'
          IF O.R.H < 2 THEN
            MATWRITE OR.REC ON OPEN.RECV, CONO:INV.NO
          END ELSE
            MATWRITE OR.REC ON OPEN.RECV.HIST, CONO:INV.NO
          END
          IF OR.ORDER.FLG = "Y" THEN
            IF CO.OPS = 'Y' AND OR.PO # "" AND ORD.PO # "" AND OR.PO # ORD.PO THEN
              FND = 1
              MATREADU ORD.REC FROM ORDER, CONO:OR.JOB ELSE
                RELEASE ORDER, CONO:OR.JOB
                FND = 0
              END
              IF FND THEN
                ORD.PO = OR.PO
                MATWRITE ORD.REC ON ORDER, CONO:OR.JOB
              END
            END
          END ELSE
            IF CO.JCS = 'Y' AND OR.PO # "" AND JOB.CUST.PO # "" AND OR.PO # JOB.CUST.PO THEN
              FND = 1
              MATREADU JOB.REC FROM JOB, CONO:OR.JOB ELSE
                RELEASE JOB, CONO:OR.JOB
                FND = 0
              END
              IF FND THEN
                JOB.CUST.PO = OR.PO
                MATWRITE JOB.REC ON JOB, CONO:OR.JOB
              END
            END
          END
          IF INVOICE.TYPE="MI" THEN MATWRITE MIV.REC ON MANUAL.INVOICE,CONO:INV.NO
          IF INVOICE.TYPE="I" THEN MATWRITE IVC.REC ON INVOICE,CONO:INV.NO
          IF INVOICE.TYPE="O" AND CO.OPS = 'Y' THEN
            MATWRITE OVC.REC ON ORDER.INVOICE,CONO:INV.NO
          END
          MORE = 0
      END CASE
    WHILE MORE = 1 DO REPEAT
    GOTO 80
**** ENTER CUST PO #
1000*
*     ECD.NUM = 6; ECD.ACTION = 4; ECD.DEFAULT = JOB.CUST.PO; CALL SCRN.EDIT
    ECD.NUM = 6; ECD.ACTION = 4
    IF OR.ORDER.FLG = "Y" THEN
      ECD.DEFAULT = ORD.PO
    END ELSE
      ECD.DEFAULT = JOB.CUST.PO
    END
    CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN OR.PO = ECD.RET.VALUE
    MIV.PO = OR.PO; IVC.PO.NO = OR.PO; OVC.PO.NO = OR.PO
    RETURN
**** ENTER INVOICE DATE
2000*
    ECD.NUM = 7 ;ECD.ACTION = 4 ; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN OR.INV.DATE = ECD.RET.VALUE
    IVC.DATE = OR.INV.DATE; MIV.DATE = OR.INV.DATE; OVC.DATE = OR.INV.DATE
    TERMS.CODE = '' ;*T27210
*T25764 v
    BEGIN CASE
      CASE INVOICE.TYPE = "MI"
        TERMS.CODE = MIV.TERMS
*T27210 v
*     CASE 1
*        TERMS.CODE = IVC.TERMS
      CASE INVOICE.TYPE = "I"
        TERMS.CODE = IVC.TERMS
      CASE INVOICE.TYPE = 'O'
        TERMS.CODE = OVC.TERMS
*T27210 ^
    END CASE
    IF TERMS.CODE # "" THEN
      MATREAD TERMS.REC FROM TERMS, CONO : TERMS.CODE ELSE
        MAT TERMS.REC = ""
      END
      OR.DUE.DATE = ECD.RET.VALUE + TERMS.DUE.DAYS
      BEGIN CASE
        CASE INVOICE.TYPE = "MI"
          MIV.DUE.DATE = OR.DUE.DATE
*T27210 v
*        CASE 1
*           IVC.DUE.DATE = OR.DUE.DATE
        CASE INVOICE.TYPE = 'I'
          IVC.DUE.DATE = OR.DUE.DATE
        CASE INVOICE.TYPE = 'O'
          OVC.DUE.DATE = OR.DUE.DATE
*T27210 ^
      END CASE
    END
    SCV.REC(19)<ECD.SCRN.NO> = OR.DUE.DATE
    ECD.NUM = 19 ; ECD.ACTION = 5; CALL SCRN.EDIT
*T25764 ^
    RETURN
**** GET ALL VALUES TO BE PRINTED
10000*
    MATREAD CUST.REC FROM CUSTOMER  ,CONO:OR.CUST ELSE
      MAT CUST.REC = "?????????????"
    END
    IF OR.ORDER.FLG = "Y" THEN
      IF CO.OPS = 'Y' AND OR.JOB # '' THEN
        MATREAD ORD.REC FROM ORDER, CONO:OR.JOB ELSE MAT ORD.REC = ''
      END
    END ELSE
      IF CO.JCS = 'Y' AND OR.JOB # '' THEN
        MATREAD JOB.REC FROM JOB, CONO:OR.JOB ELSE MAT JOB.REC = ''
      END
    END
    SCV.REC(2)<ECD.SCRN.NO> = OR.CUST
    SCV.REC(3)<ECD.SCRN.NO> = CUST.NAME
    SCV.REC(4)<ECD.SCRN.NO> = OR.JOB
    SCV.REC(5)<ECD.SCRN.NO> = OR.AS.DATE
    SCV.REC(6)<ECD.SCRN.NO> = OR.PO
    SCV.REC(7)<ECD.SCRN.NO> = OR.INV.DATE
    SCV.REC(11)<ECD.SCRN.NO> = OR.BAL
    SCV.REC(14)<ECD.SCRN.NO> = OR.AS.DATE
    SCV.REC(19)<ECD.SCRN.NO> = OR.DUE.DATE ; * T25764
    SCV.REC(8)<ECD.SCRN.NO> = OR.DIV
    ECD.ACTION = 3 ; CALL SCRN.EDIT
    LINES = COUNT(OR.TYPE,VM) + (OR.TYPE # "")
    RETURN
**** SCROLL TRANSACTION DETAIL
11000*
    START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
    LAST.LINE = START.LINE + PAGE.SIZE - 1
    IF LAST.LINE > LINES THEN LAST.LINE = LINES
    IF START.LINE = OLD.START.LINE THEN GOTO 11999
    OLD.START.LINE = START.LINE
    CNT = 1
    FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 1 ; P_Y = SLN ; P_VALUE = OR.TYPE<1,N> "L#2" ; P_OPT = ""
      P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.TR.DATE<1,N>,"D2/") "L#8"
* T22154 v (change from 19 to 18)
*P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.INV.AMT<1,N>,"MD2") "R#12"
      P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.INV.AMT<1,N>,"MD2") "R#12"
* T22154 ^
      P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OR.CHECK<1,N> "L#6"
      P_X  := AM:41 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.CHK.DATE<1,N>,"D2/") "L#8"
* T22154 v (change from 53 to 52)
*P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.CHK.AMT<1,N>,"MD2") "R#12"
      P_X  := AM:52 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OR.CHK.AMT<1,N>,"MD2") "R#12"
* T22154 ^
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
    NEXT N
    FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    NEXT M
11999 RETURN
*****CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
    RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
    RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
  END
