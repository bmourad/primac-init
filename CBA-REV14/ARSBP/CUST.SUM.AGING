***************************************************************************
*
* REVISION- [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - ARS.AGE.SUMMARY
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 11/27/84
*
* DESCRIPTION
*
* This program prints the aged receivables summary listing in customer
* sequence.
* MODIFIED 3.23.89 TASK 13921 TO USE INVOICE DATE FOR AGING INVOICES 
* TASK 15568 DLG 11/06/90 CORRECTED AGING REPORT
* TASK 20532 JR EXPAND INVOICE AMOUNT TO 8.2
*T26493 cmykleb 03/25/2002 * Change report to use rpt # from proc and
*                            call GET.PROG.HEAD for the heading.
*T28822 wvaughan 04/19/2006 * Include the credits in with the open
*                             receivables
***************************************************************************
*
***************************************************************************
*
*******************  INSERT COPY STATEMENTS HERE  *************************
*
***************************************************************************
*
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>PMC.CPYLIB>CUSTOMER
*
***************************************************************************
*
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- DIMENSIONED VARIABLES
*
   DIM HEAD(5); DIM BHEAD(5); DIM SHEAD(5); DIM THEAD(6)
   DIM SUB(20); DIM DEF(20); DIM SPC(20); DIM CDATA(20); DIM PDATA(20); DIM PRDATA(20)
   DIM CJ(20); DIM CW(20); DIM CV(20); DIM TF(20); DIM FFMT(20); DIM BRK(5); DIM SKP(5)
   DIM TOT1(20); DIM TOT2(20); DIM TOT3(20); DIM TOT4(20); DIM TOT5(20); DIM TOT6(20); DIM TOTX(20)
   MAT HEAD=""; MAT BHEAD=""; MAT SHEAD=""; MAT THEAD=""
   MAT SUB=""; MAT DEF=""; MAT SPC=""; MAT CDATA=""; MAT PDATA=""; MAT PRDATA=""
   MAT CJ=""; MAT CW=""; MAT CV=""; MAT TF=""; MAT FFMT=""; MAT BRK=""; MAT SKP=""
   MAT TOT1=""; MAT TOT2=""; MAT TOT3=""; MAT TOT4=""; MAT TOT5=""; MAT TOT6=""; MAT TOTX=""
*
*---- PRE-INITIALIZATION
*
   PROCREAD PARAM ELSE
      PRINT "MUST RUN FROM PROC"
      STOP
   END
   CONO = PARAM<1>
   CONAME = PARAM<2>
   CUTOFF.DATE = PARAM<3>
   IF NOT(NUM(CUTOFF.DATE)) THEN
      CUTOFF.DATE = ICONV(CUTOFF.DATE,"D")
   END
*T26493 v
*  RUN.DATE = DATE()
*  RUN.TIME = TIME()
*  HEAD(1) = "RUN DATE: ":OCONV(RUN.DATE,"D2/"):"    TIME: ":OCONV(RUN.TIME,"MTS")[1,5]
*  HEAD(1) = HEAD(1) "L#40"
*  SP = INT((40-LEN(CONAME))/2)
*  CNAME = SPACE(SP):CONAME
*  CNAME = CNAME "L#40"
*  HEAD(1) = HEAD(1):CNAME
*  HEAD(1) = HEAD(1):SPACE(40):"PAGE: "
   CONAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = PARAM<2>
   HEAD(1) = ""
   HEAD(2) = ""
   CALL GET.PROG.HEAD(CONO,CONAME,REPORT.NAME,REPORT.NUMBER,"",HEAD(1),HEAD(2))
*T26493 ^
   GHEAD = "*** GRAND TOTALS *** "
   PREV.CUST.NAME = ""
   MAT OR.REC = ""
*
***************************************************************************
*
*********************  DEFINE PAGE HEADINGS HERE  *************************
*
***************************************************************************
*
*T26493 *   HEAD(2) = SPACE(44):"SUMMARY AGED ACCOUNTS RECEIVABLE"
   HEAD(3) = SPACE(62):"PERIOD ENDING ":OCONV(CUTOFF.DATE,"D2/")
*
***************************************************************************
*
*********************  DEFINE BREAK HEADINGS HERE  ************************
*
***************************************************************************
*
*
***************************************************************************
*
*********************  DEFINE TOTAL HEADINGS HERE  ************************
*
***************************************************************************
*
   THEAD(1) = "A/R BALANCE "
*
***************************************************************************
*
*********************  DEFINE COLUMN HEADINGS HERE  ***********************
*
***************************************************************************
*
   SUB(1) = "CUST #"
   SUB(2) = "CUSTOMER NAME"
* TASK 20532
*     SUB(3) = "SLSR"
   SUB(3) = "SLS"
* T20532
   SUB(4) = "CURRENT"
   SUB(5) = "31 DAYS"
   SUB(6) = "61 DAYS"
   SUB(7) = "91 DAYS"
   SUB(8) = "121 DAYS"
   SUB(9) = "CREDITS"
   SUB(10) = "BALANCE"
*
***************************************************************************
*
*********************  DEFINE DATA ATTRIBUTES HERE  ***********************
*
***************************************************************************
*
   DEF(1) = "L6;;B1;1"
* T20532
*     DEF(2) = "L30"
*     DEF(3) = "L4"
*     DEF(4) = "R11;MD2Z;T"
*     DEF(5) = "R11;MD2Z;T"
*     DEF(6) = "R11;MD2Z;T"
*     DEF(7) = "R11;MD2Z;T"
*     DEF(8) = "R11;MD2Z;T"
   DEF(2) = "L26"
   DEF(3) = "L4"
   DEF(4) = "R12;MD2Z;T"
   DEF(5) = "R12;MD2Z;T"
   DEF(6) = "R12;MD2Z;T"
   DEF(7) = "R12;MD2Z;T"
   DEF(8) = "R12;MD2Z;T"
* TASK 20532
   DEF(9) = "R12;MD2Z-;T"
   DEF(10) = "R12;MD2-;T"
*
***************************************************************************
*
*********************  DEFINE ADDITIONAL SPACES TO INSERT  ****************
*********************  PRIOR TO EACH COLUMN                ****************
*
***************************************************************************
*
   SPC(2) = 1
*
***************************************************************************
*
*********************  OPEN REQUIRED FILES HERE  **************************
*
***************************************************************************
*
   OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
      ERRMSG = "CANNOT OPEN OPEN.RECV FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER FILE"
      GOSUB 90000
      STOP
   END
*
***************************************************************************
*
   GOSUB 20000
*
*-------------------------*
*---- MAIN PROCESSING ----*
*-------------------------*
*
100 *
   READNEXT ID ELSE
      XXBREAK = BRK.CNT + 1
      GOSUB 1000
      PRINTER OFF
      PRINTER CLOSE
      STOP
   END
*
***************************************************************************
*
*********************  READ FILE(S) AND LOAD ARRAY HERE  ******************
*
***************************************************************************
*
   MATREAD OR.REC FROM OPEN.RECV, ID ELSE GOTO 100
*     IF OR.BAL = 0 THEN GOTO 100
   O.BAL = 0
   DAYS = CUTOFF.DATE - OR.INV.DATE
   IF DAYS < 0 THEN GOTO 100
   T.CNT = COUNT(OR.TR.DATE,VM) + (OR.TR.DATE # "")
   FOR RR = 1 TO T.CNT
      REM      IF OR.TYPE<1,RR> # "C" THEN OR.TR.DATE<1,RR> = OR.INV.DATE
      IF OR.TR.DATE<1,RR> <= CUTOFF.DATE THEN
         O.BAL = O.BAL + OR.INV.AMT<1,RR>
      END
   NEXT RR
   IF O.BAL = 0 THEN GOTO 100
   MATREAD CUST.REC FROM CUSTOMER, CONO:OR.CUST ELSE
      MAT CUST.REC = ""
   END
   MAT CDATA = ""
   CDATA(1) = OR.CUST
   CDATA(2) = CUST.NAME
   CDATA(3) = CUST.SALESMAN
   DAYS = CUTOFF.DATE - OR.INV.DATE
   BEGIN CASE
      CASE OR.TYPE<1,1>[1,1] = "C"
         CDATA(9) = O.BAL
      CASE DAYS > 120
         CDATA(8) = O.BAL
      CASE DAYS > 90
         CDATA(7) = O.BAL
      CASE DAYS > 60
         CDATA(6) = O.BAL
      CASE DAYS > 30
         CDATA(5) = O.BAL
      CASE 1
         CDATA(4) = O.BAL
   END CASE
   CDATA(10) = O.BAL
*
***************************************************************************
*
*---- CHECK BREAKS
*
200 *
   DONE = 0
   FOR B = 1 TO BRK.CNT UNTIL DONE
      IF CDATA(BRK(B)) # PDATA(BRK(B)) THEN
         BRK.LVL = B
         XXBREAK = BRK.CNT - B + 1
         GOSUB 1000
         DONE = 1
      END
   NEXT B
   GOSUB 500
   MAT PDATA = MAT CDATA
   PREV.CUST.NAME = CUST.NAME
   GOTO 100
*
*-----------------------------*
*---- PROCESS DETAIL LINE ----*
*-----------------------------*
*
500 *
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT1(C) = TOT1(C) + CDATA(C)
      END
   NEXT C
   RETURN
*
*------------------------*
*---- PROCESS BREAKS ----*
*------------------------*
*
*---- PROCESS BREAKS (LOWEST LEVEL TO HIGHEST)
*
1000 *
   IF FIRST.TIME THEN
      FIRST.TIME = 0
      RETURN
   END
   IF TOT.CNT = 0 THEN GOTO 8000
   MAT TOTX = MAT TOT1
   BRK.NO = BRK.CNT
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT2(C) = TOT2(C) + TOT1(C)
      END
   NEXT C
   MAT TOT1 = ""
   IF XXBREAK = 1 THEN GOTO 8000
*
*---- PROCESS LEVEL 2 BREAK
*
2000 *
   MAT TOTX = MAT TOT2
   BRK.NO = BRK.CNT - 1
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT3(C) = TOT3(C) + TOT2(C)
      END
   NEXT C
   MAT TOT2 = ""
   IF XXBREAK = 2 THEN GOTO 8000
*
*---- PROCESS LEVEL 3 BREAK
*
3000 *
   MAT TOTX = MAT TOT3
   BRK.NO = BRK.CNT - 2
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT4(C) = TOT4(C) + TOT3(C)
      END
   NEXT C
   MAT TOT3 = ""
   IF XXBREAK = 3 THEN GOTO 8000
*
*---- PROCESS LEVEL 4 BREAK
*
4000 *
   MAT TOTX = MAT TOT4
   BRK.NO = BRK.CNT - 3
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT5(C) = TOT5(C) + TOT4(C)
      END
   NEXT C
   MAT TOT4 = ""
   IF XXBREAK = 4 THEN GOTO 8000
*
*---- PROCESS LEVEL 5 BREAK
*
5000 *
   MAT TOTX = MAT TOT5
   BRK.NO = BRK.CNT - 4
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT6(C) = TOT6(C) + TOT5(C)
      END
   NEXT C
   MAT TOT5 = ""
   IF XXBREAK = 5 THEN GOTO 8000
*
*---- PROCESS LEVEL 6 BREAK
*
6000 *
   MAT TOTX = MAT TOT6
   BRK.NO = BRK.CNT - 5
   GOSUB 9000
   MAT TOT6 = ""
   GOTO 8000
*
*---- BREAK COMPLETED
*
8000 *
   LINE.COUNT = LINE.COUNT + SKP(BRK.LVL)
   IF LINE.COUNT < PAGE.LENGTH THEN
      FOR LC = 1 TO SKP(BRK.LVL)
         PRINT
      NEXT LC
   END
   RETURN
*
*--------------------------*
*---- PRINT TOTAL LINE ----*
*--------------------------*
*
9000 *
   TLINE = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         TLINE = TLINE : SPC(C) : SPACE(CW(C))
      END ELSE
         TLINE = TLINE : SPC(C) : OCONV(TOTX(C),CV(C)) FFMT(C)
      END
   NEXT C
   TFMT = "R#":TOT.PTR
   IF BRK.NO = 0 THEN
      TLINE = GHEAD TFMT : TLINE[TOT.PTR+1,999]
      PRINT; PRINT
      LINE.COUNT = LINE.COUNT + 2
      PRINT TLINE
      LINE.COUNT = LINE.COUNT + 1
      PRINT ULINE2
      LINE.COUNT = LINE.COUNT + 1
   END ELSE
      IF LINE.COUNT >= PAGE.LENGTH THEN
         GOSUB 10000
      END
      TFMT = "L#":TOT.PTR
      PLINE = ""
      FOR C = BEG.COL TO END.COL
         IF TF(C) = "" THEN
            IF CV(C) = "" THEN
               PLINE = PLINE : SPC(C) : PDATA(C) FFMT(C)
            END ELSE
               PLINE = PLINE : SPC(C) : OCONV(PDATA(C),CV(C)) FFMT(C)
            END
         END
      NEXT C
      TLINE = PLINE TFMT : TLINE[TOT.PTR+1,999]
      PRINT TLINE
      LINE.COUNT = LINE.COUNT + 1
   END
   RETURN
*
*-----------------------------*
*---- PRINT PAGE HEADINGS ----*
*-----------------------------*
*
10000 *
   PRINT CHAR(12):
   LINE.COUNT = 0
   PAGE.NO = PAGE.NO + 1
   PRINT HEAD(1):PAGE.NO
   FOR HD = 2 TO HEAD.CNT
      PRINT HEAD(HD)
   NEXT HD
   LINE.COUNT = LINE.COUNT + HEAD.CNT
   FOR BH = 1 TO BRK.CNT
      IF BHEAD(BH) # "" THEN
         PRINT BHEAD(BH)
         LINE.COUNT = LINE.COUNT + 1
      END
   NEXT BH
   PRINT
   LINE.COUNT = LINE.COUNT + 1
   FOR SH = 1 TO SH.CNT
      PRINT SHEAD(SH)
   NEXT SH
   LINE.COUNT = LINE.COUNT + 1
   RETURN
*
*------------------------*
*---- INITIALIZATION ----*
*------------------------*
*
20000 *
*---- GENERAL PARAMETERS
   LINE.COUNT = 99
   PAGE.NO = 0
   FIRST.TIME = 1
*---- COMPUTE PAGE HEADING COUNT
   HEAD.CNT = ""
   FOR HD = 1 TO 5 WHILE HEAD.CNT = ""
      IF HEAD(HD) = "" THEN HEAD.CNT = HD - 1
   NEXT HD
*---- COMPUTE ENDING COLUMN NUMBER
   END.COL = ""
   FOR C = 1 TO 20
      IF DEF(C) # "" THEN END.COL = C
   NEXT C
*---- SEGREGATE COLUMN DEFINITION ATTRIBUTES
   BEG.COL = ""
   CW.TOT = 0
   BHEAD.CNT = 0
   TOT.CNT = 0
   FOR C = 1 TO END.COL
      DEF1 = FIELD(DEF(C),";",1)
      DEF2 = FIELD(DEF(C),";",2)
      DEF3 = FIELD(DEF(C),";",3)
      DEF4 = FIELD(DEF(C),";",4)
      CJ(C) = DEF1[1,1]
      CW(C) = DEF1[2,3]
      CV(C) = DEF2
      FFMT(C) = CJ(C):"#":CW(C)
      BEGIN CASE
         CASE DEF3[1,1] = "T"
            IF CV(C) = "" THEN CV(C) = "MD0"
            TF(C) = DEF3
            TOT.CNT = TOT.CNT + 1
         CASE DEF3[1,1] = "B"
            B = DEF3[2,1]
            BRK(B) = C
            BEGIN CASE
               CASE DEF4 = "N"
                  SKP(B) = 99
                  BHEAD.CNT = BHEAD.CNT + 1
               CASE NUM(DEF4) AND DEF4 # ""
                  SKP(B) = DEF4
               CASE 1
                  SKP(B) = 1
            END CASE
      END CASE
      IF CW(C) > 0 THEN
         CW.TOT = CW.TOT + CW(C) + SPC(C)
         IF BEG.COL = "" THEN BEG.COL = C
      END
   NEXT C
*---- DETERMINE COLUMN SPACING
   COL.CNT = END.COL - BEG.COL + 1
   SEP = INT((132-CW.TOT)/(COL.CNT-1))
   IF SEP > 3 THEN SEP = 3
   SPC(BEG.COL) = ""
   FOR C = BEG.COL+1 TO END.COL
      SP = SPC(C) + SEP
      SPC(C) = SPACE(SP)
   NEXT C
*---- COMPUTE BREAK COUNT
   BRK.CNT = ""
   FOR B = 1 TO 5 WHILE BRK.CNT = ""
      IF BRK(B) = "" THEN BRK.CNT = B - 1
   NEXT B
*---- COMPUTE COLUMN HEADING LINE COUNT
   SH.CNT = 0
   FOR C = BEG.COL TO END.COL
      N = COUNT(SUB(C),VM) + (SUB(C) # "")
      IF N > SH.CNT THEN SH.CNT = N
   NEXT C
*---- SHIFT COLUMN HEADINGS TO PROPER LINE
   IF SH.CNT > 1 THEN
      FOR C = BEG.COL TO END.COL
         N = COUNT(SUB(C),VM) + (SUB(C) # "")
         FOR SH = N+1 TO SH.CNT
            SUB(C) = VM:SUB(C)
         NEXT SH
      NEXT C
   END
*---- CENTER COLUMN HEADINGS AND UNDERLINE
   FOR C = BEG.COL TO END.COL
      FOR SH = 1 TO SH.CNT
         X = SUB(C)<1,SH>
         X = TRIM(X)
         XL = LEN(X)
         SP = INT((CW(C)-XL)/2)
         IF CJ(C) = "R" THEN
            X = X:SPACE(SP)
         END ELSE
            X = SPACE(SP):X
         END
         SUB(C)<1,SH> = X FFMT(C)
      NEXT SH
      SUB(C) = SUB(C):VM:STR("-",CW(C))
   NEXT C
*---- BUILD COLUMN HEADING PRINT LINES
   SH.CNT = SH.CNT + 1
   FOR SH = 1 TO SH.CNT
      SHEAD(SH) = SUB(BEG.COL)<1,SH>
   NEXT SH
   FOR SH = 1 TO SH.CNT
      FOR C = BEG.COL+1 TO END.COL
         SHEAD(SH) = SHEAD(SH) : SPC(C) : SUB(C)<1,SH>
      NEXT C
   NEXT SH
*---- BUILD TOTAL COLUMN UNDERLINE
   ULINE1 = ""
   ULINE2 = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         ULINE1 = ULINE1 : SPC(C) : SPACE(CW(C))
         ULINE2 = ULINE2 : SPC(C) : SPACE(CW(C))
      END ELSE
         ULINE1 = ULINE1 : SPC(C) : STR("-",CW(C))
         ULINE2 = ULINE2 : SPC(C) : STR("=",CW(C))
      END
   NEXT C
*---- COMPUTE SPACE FOR TOTAL HEADINGS
   TOT.PTR = 0
   ULEN = LEN(ULINE1)
   FOR TP = 1 TO ULEN WHILE TOT.PTR = 0
      IF ULINE1[TP,1] # " " THEN
         TOT.PTR = TP - 3
      END
   NEXT TP
   IF TOT.PTR < 0 THEN TOT.PTR = 0
*---- COMPUTE PAGE LENGTH
   PAGE.LENGTH = 66 - HEAD.CNT - BHEAD.CNT - 1 - SH.CNT - ((BRK.CNT+1)*2)- 6
*
   PRINTER ON
   RETURN
*
*-----------------------*
*---- ERROR ROUTINE ----*
*-----------------------*
*
90000 *
   PRINT ERRMSG:
   INPUT REPLY:
   RETURN
END
