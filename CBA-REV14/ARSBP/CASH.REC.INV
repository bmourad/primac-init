*  SUBROUTINE CASH.REC.INV (MAT SAVE.OR.REC,ON.ACCT.BAL,FRSTDAY) ;* T23278
  SUBROUTINE CASH.REC.INV (MAT SAVE.OR.REC,ON.ACCT.BAL) ;* T23278
*********************************************************************
*
* REVISION - [08.0]
*
* PROGRAM  - CASH.REC.INV
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 05/11/88
*
* DESCRIPTION
*
* This program is used to define customer invoices to be paid from a
* check received from customer.
*
*T21084 lanny 10/09/1996 * Mods for access to lines > 999.
*T21177 diane 11/06/1996 * REV11 UPG
*T22662 rik 03/06/1998 * REQUIRING DECIMAL INPUT ON INVOICE #.
*T23278 markt 01/05/1999 * Add check for divisional security.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>ARS.CPYLIB>COM.CASH.REC
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- DEFINE DIMENSIONED VARIABLES
*
  DIM SAVE.OR.REC(25)
  EQU SOR.INV.NO    TO SAVE.OR.REC(1)
  EQU SOR.JOB.NO    TO SAVE.OR.REC(2)
  EQU SOR.INV.AMT   TO SAVE.OR.REC(3)
  EQU SOR.CASH.REC  TO SAVE.OR.REC(4)
  EQU SOR.MISC.AMT  TO SAVE.OR.REC(5)
  EQU SOR.GL.ACCT   TO SAVE.OR.REC(6)
  EQU SOR.OPEN.AMT  TO SAVE.OR.REC(7)
  EQU SOR.PAY.FLG   TO SAVE.OR.REC(8)
  EQU SOR.MON       TO SAVE.OR.REC(9)
  EQU SOR.ONACCT    TO SAVE.OR.REC(10)
  EQU SOR.DIV       TO SAVE.OR.REC(11)
  EQU SOR.DEPT      TO SAVE.OR.REC(12)
  EQU SOR.CCTR      TO SAVE.OR.REC(13)
  EQU SOR.CHG.JOB   TO SAVE.OR.REC(14)
  EQU SOR.PO.NO     TO SAVE.OR.REC(15)
  EQU SOR.REV.FLG   TO SAVE.OR.REC(16)
  EQU SOR.ORDER.FLG TO SAVE.OR.REC(17)
*
*---- INITIALIZATION
*
  BEGIN.PAGE = 9
  PAGE.SIZE = 5
  LINE.SPACE = 2
  LINE.CNT = 0
  REF.NO = ""
  CURR.REF.NO = ""
*
*---- MAIN PROCESSING
*
100*
  GOSUB 80000
  OPT = "A"
  GOTO 510
*
*---- GET OPERATOR REPLY
*
500*
  ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
  OPT = ECD.RET.VALUE
510*
  BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
          GOSUB 900
          GOTO 99999
      CASE OPT = "A" AND LINE.CNT < 9999
          MODE = "A"
          DONE = 0
          FOR REF.NO = LINE.CNT+1 TO 9999 UNTIL DONE
              GOSUB 50000
              GOSUB 10000
              IF VALUE = "END" THEN
                  DONE = 1
                  GOSUB 700
              END ELSE
                  LINE.CNT = LINE.CNT + 1
              END
          NEXT REF.NO
          REF.NO = LINE.CNT
          CURR.REF.NO = ""
          GOSUB 50000
      CASE OPT = "C" AND LINE.CNT > 0
          MODE = "C"
          GOSUB 600
          IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
              REF.NO = ECD.RET.VALUE
              GOSUB 10000
              IF VALUE = "END" THEN
                  CURR.REF.NO = ""
                  GOSUB 50000
              END
          END
      CASE OPT = "D" AND LINE.CNT > 0
          MODE = "D"
          GOSUB 600
          IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
              REF.NO = ECD.RET.VALUE
              GOSUB 700
              LINE.CNT = LINE.CNT - 1
              IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
              CURR.REF.NO = ""
              GOSUB 50000
          END
      CASE OPT = "I" AND LINE.CNT > 0
          MODE = "I"
          GOSUB 600
          IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
              REF.NO = ECD.RET.VALUE
              GOSUB 800
              LINE.CNT = LINE.CNT + 1
              CURR.REF.NO = ""
              GOSUB 50000
              GOSUB 10000
              IF VALUE = "END" THEN
                  GOSUB 700
                  LINE.CNT = LINE.CNT - 1
                  CURR.REF.NO = ""
                  GOSUB 50000
              END
          END
      CASE OPT = "S" OR OPT = "SF"
          REF.NO = CURR.REF.NO + PAGE.SIZE
          IF REF.NO > LINE.CNT THEN REF.NO = 1
          GOSUB 50000
      CASE OPT = "SR"
          REF.NO = CURR.REF.NO - PAGE.SIZE
          IF REF.NO < 1 THEN REF.NO = 1
          GOSUB 50000
      CASE OPT = "ST"
          REF.NO = 1
          GOSUB 50000
      CASE OPT = "SB"
          REF.NO = LINE.CNT
          IF REF.NO < 1 THEN REF.NO = 1
          GOSUB 50000
  END CASE
  GOTO 500
*
*---- GET LINE NUMBER
*
600*
  ECD.NUM=22
  ECD.MINV = CURR.REF.NO
  ECD.MAXV = ECD.MINV + PAGE.SIZE - 1
  IF ECD.MAXV > LINE.CNT THEN ECD.MAXV = LINE.CNT
  ECD.ACTION=4;CALL SCRN.EDIT
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
  FOR N = 1 TO 25
      SAVE.OR.REC(N) = DELETE(SAVE.OR.REC(N),REF.NO,0,0)
  NEXT N
  GOSUB 81000
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800*
  FOR N = 1 TO 25
      SAVE.OR.REC(N) = INSERT(SAVE.OR.REC(N),REF.NO,0,0,"")
  NEXT N
  GOSUB 81000
  RETURN
*
*---- LOAD ALL ON ACCOUNT
*
900*
  ON.ACCT.BAL = 0
  S.LINE = DCOUNT(CUST.INVOICE,VM)
  FOR SA=S.LINE TO 1 STEP -1
      IF CUST.INVOICE<1,SA>[7,2] = "AC" OR CUST.INVOICE<1,SA>[7,2] = "BC" OR CUST.INVOICE<1,SA>[7,2] = "PP" THEN
*           SOR.INV.NO=INSERT(SOR.INV.NO,1,0,0,CUST.INVOICE<1,SA>)
          MATREAD OR.REC FROM OPEN.RECV,CONO:CUST.INVOICE<1,SA> ELSE
              MAT OR.REC=""
          END
*CSF 24339 v
          IF OR.BAL+0 = 0 THEN
              OKAY=0
              FOR K = 1 TO DCOUNT(OR.TYPE,VM) UNTIL OKAY
***** T23278 v
*                  IF OR.TYPE<1,K> = 'C' OR OR.TYPE<1,K> = 'A' THEN
*                      IF OR.TR.DATE<1,K> >= FRSTDAY THEN OKAY = 1
*                  END
                  IF OR.TYPE<1,K> = 'C' OR OR.TYPE<1,K> = 'A' THEN OKAY = 1
***** T23278 ^
              NEXT K
              IF NOT(OKAY) THEN GOTO 910
          END
*CSF 24339 ^
          SOR.INV.NO=INSERT(SOR.INV.NO,1,0,0,CUST.INVOICE<1,SA>)
          SOR.JOB.NO=INSERT(SOR.JOB.NO,1,0,0,OR.JOB)
          SOR.ORDER.FLG=INSERT(SOR.ORDER.FLG,1,0,0,OR.ORDER.FLG)
          SOR.PO.NO=INSERT(SOR.PO.NO,1,0,0,OR.PO)
          SOR.DIV=INSERT(SOR.DIV,1,0,0,OR.DIV)
          SOR.DEPT=INSERT(SOR.DEPT,1,0,0,OR.DEPT)
          SOR.CCTR=INSERT(SOR.CCTR,1,0,0,OR.CCTR)
          SOR.CHG.JOB=INSERT(SOR.CHG.JOB,1,0,0,OR.CHG.JOB)
          SOR.INV.AMT=INSERT(SOR.INV.AMT,1,0,0,OR.INV.AMT<1,1>)
          SOR.CASH.REC=INSERT(SOR.CASH.REC,1,0,0,"0")
          IF OR.TYPE<1,2>="T" OR OR.TYPE<1,2>="S" OR OR.TYPE<1,2>="G" OR OR.TYPE<1,2>="U" OR OR.TYPE<1,2>="M" THEN
              SOR.INV.AMT<1>=SOR.INV.AMT<1> + OR.INV.AMT<1,2>
          END
          IF OR.TYPE<1,3>="T" OR OR.TYPE<1,3>="S" OR OR.TYPE<1,3>="G" OR OR.TYPE<1,3>="U" OR OR.TYPE<1,3>="M" THEN
              SOR.INV.AMT<1>=SOR.INV.AMT<1> + OR.INV.AMT<1,3>
          END
          IF OR.TYPE<1,4>="T" OR OR.TYPE<1,4>="S" OR OR.TYPE<1,4>="G" OR OR.TYPE<1,4>="U" OR OR.TYPE<1,4>="M" THEN
              SOR.INV.AMT<1>=SOR.INV.AMT<1> + OR.INV.AMT<1,4>
          END
          IF OR.TYPE<1,5>="T" OR OR.TYPE<1,5>="S" OR OR.TYPE<1,5>="G" OR OR.TYPE<1,5>="U" OR OR.TYPE<1,5>="M" THEN
              SOR.INV.AMT<1>=SOR.INV.AMT<1> + OR.INV.AMT<1,5>
          END
          IF OR.TYPE<1,6>="T" OR OR.TYPE<1,6>="S" OR OR.TYPE<1,6>="G" OR OR.TYPE<1,6>="U" OR OR.TYPE<1,6>="M" THEN
              SOR.INV.AMT<1>=SOR.INV.AMT<1> + OR.INV.AMT<1,6>
          END
          SOR.OPEN.AMT=INSERT(SOR.OPEN.AMT,1,0,0,OR.BAL)
          IF OR.BAL < 0 THEN ON.ACCT.BAL=ON.ACCT.BAL + OR.BAL
      END
*        IF OR.BAL < 0 THEN ON.ACCT.BAL=ON.ACCT.BAL + OR.BAL
910 NEXT SA
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = REF.NO"R#4" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  SAVE.INV = SOR.INV.NO<REF.NO>
10100*
  X=5;Y=SLN
  MAXL=8
  TYP = 1;*T22662
  IF SAVE.INV # "" THEN
      O.R="O"
      DEFAULT=SAVE.INV
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 19950
  LOCATE VALUE IN CUST.INVOICE<1>,1 SETTING FND ELSE
      ERRMSG = "Invalid invoice for this customer. Try again! "
      GOSUB 90000
      GOTO 10100
  END
*
  MATREAD OR.REC FROM OPEN.RECV, CONO:VALUE ELSE
      ERRMSG = "Invoice not on file. Try again! "
      GOSUB 90000
      GOTO 10100
  END
*
*T23278 v
  LOGNAME = 'LOGNAME'; CALL SYSVARS.SUB(LOGNAME)
  DIV.CODE = OR.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = ''
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
      GOSUB 90000
      GOTO 10100
  END
*T23278 ^
*
  LOCATE VALUE IN SOR.INV.NO,1 SETTING FND ELSE FND = 0
  IF FND AND FND # REF.NO THEN
      ERRMSG = "Duplicate invoice. Try again! "
      GOSUB 90000
      GOTO 10100
  END
*
  SOR.INV.NO<REF.NO> = VALUE
  SOR.JOB.NO<REF.NO> = OR.JOB
  SOR.ORDER.FLG<REF.NO> = OR.ORDER.FLG
  SOR.INV.AMT<REF.NO> = OR.INV.AMT<1,1>
  SOR.CASH.REC<REF.NO> = "0"
  IF OR.TYPE<1,2>="T" OR OR.TYPE<1,2>="S" OR OR.TYPE<1,2>="G" OR OR.TYPE<1,2>="U" OR OR.TYPE<1,2>="M" THEN
      SOR.INV.AMT<REF.NO>=SOR.INV.AMT<REF.NO> + OR.INV.AMT<1,2>
  END
  IF OR.TYPE<1,3>="T" OR OR.TYPE<1,3>="S" OR OR.TYPE<1,3>="G" OR OR.TYPE<1,3>="U" OR OR.TYPE<1,3>="M" THEN
      SOR.INV.AMT<REF.NO>=SOR.INV.AMT<REF.NO> + OR.INV.AMT<1,3>
  END
  IF OR.TYPE<1,4>="T" OR OR.TYPE<1,4>="S" OR OR.TYPE<1,4>="G" OR OR.TYPE<1,4>="U" OR OR.TYPE<1,4>="M" THEN
      SOR.INV.AMT<REF.NO>=SOR.INV.AMT<REF.NO> + OR.INV.AMT<1,4>
  END
  IF OR.TYPE<1,5>="T" OR OR.TYPE<1,5>="S" OR OR.TYPE<1,5>="G" OR OR.TYPE<1,5>="U" OR OR.TYPE<1,5>="M" THEN
      SOR.INV.AMT<REF.NO>=SOR.INV.AMT<REF.NO> + OR.INV.AMT<1,5>
  END
  IF OR.TYPE<1,6>="T" OR OR.TYPE<1,6>="S" OR OR.TYPE<1,6>="G" OR OR.TYPE<1,6>="U" OR OR.TYPE<1,6>="M" THEN
      SOR.INV.AMT<REF.NO>=SOR.INV.AMT<REF.NO> + OR.INV.AMT<1,6>
  END
  SOR.OPEN.AMT<REF.NO> = OR.BAL
  SOR.DIV<REF.NO> = OR.DIV
  SOR.DEPT<REF.NO> = OR.DEPT
  SOR.CCTR<REF.NO> = OR.CCTR
  SOR.CHG.JOB<REF.NO> = OR.CHG.JOB
  SOR.PO.NO<REF.NO> = OR.PO
*
  P_X  = 14 ; P_Y = SLN ; P_VALUE = SOR.JOB.NO<REF.NO>"L#8" ; P_OPT = ""
  P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SOR.INV.AMT<REF.NO>,"MD2")"R#12"
  P_X  := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SOR.OPEN.AMT<REF.NO>,"MD2")"R#12"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
19900*
  SCV.REC(7)<ECD.SCRN.NO> = CUST.AR.BAL
  ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
  RETURN
19950*
  SOR.INV.NO<REF.NO> = SAVE.INV
  GOSUB 81000
  RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000*
  ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
  START.REF.NO = 1 + INT((REF.NO-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  LAST.REF.NO = START.REF.NO + PAGE.SIZE - 1
  IF LAST.REF.NO > LINE.CNT THEN LAST.REF.NO = LINE.CNT
  CNT=1
  FOR N=START.REF.NO TO LAST.REF.NO
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#4"
      P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:SOR.INV.NO<N>
      P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:SOR.JOB.NO<N>
      P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SOR.INV.AMT<N>,"MD2")"R#12"
      P_X  := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SOR.OPEN.AMT<N>,"MD2")"R#12"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT=CNT + 1
  NEXT N
  FOR M=CNT TO PAGE.SIZE
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
  RETURN
*
*---- LOAD SCREEN DATA
*
80000*
  RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000*
  SCV.REC(7)<ECD.SCRN.NO> = CUST.AR.BAL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
  RETURN
END
