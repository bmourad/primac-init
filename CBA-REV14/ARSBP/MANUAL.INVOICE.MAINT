*COPY>CPYLIB>COM1
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - MANUAL.INVOICE.MAINT
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE     - 05/08/85
* DESCRIPTION
* This program is used to create and maintain manual invoices.
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*********************************************************************
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>VOID.INVOICES
*COPY>CPYLIB>GEN.XREF
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ARS.SCREENS" TO M.SCREENS ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN M.SCREENS FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN OPEN.RECV FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","TAX" TO TAX ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN TAX FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DAILY.MANUAL.INVOICE" TO DAILY.MANUAL.INVOICE ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DAILY.MANUAL.INVOICE FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN MANUAL.INVOICE FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CUSTOMER FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CUSTOMER.XREF FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","SALESMAN" TO SALESMAN ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN SALESMAN FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN INVOICE.CODE FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN VOID.INVOICES FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","SALES.CODE" TO SALES.CODE ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN SALES.CODE FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN SHIP.VIA FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PREFIX FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DIVISION FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*---- INITIALIZATION
*
  MAT COMP.REC = ""
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
  MAT EDIT.COM.DRIVER = ""
  MAT SCV.REC = ""
*   MAT EDIT.COM = ""
*   TYP = 0
*   CALL EDIT.SUB
  FILL = "#"
  MAT GEN.XREF.REC = ""
  OLD.NAME = ""; GXR.CO = CONO; GXR.HEADING<1,2> = "DESCRIPTION"
  GXR.ATT<1,1> = 0; GXR.ATT<1,2> = 1; GXR.LEN<1,1> = 10; GXR.LEN<1,2> = 30
*
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "MANUAL.INVOICE.MAINT"
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO=1
  ECD.ACTION=2;CALL SCRN.EDIT
  REF.CNT = 0
  REF.NO = ""
  CURR.REF.NO = ""
  LINE.COUNT = 5
  BEGIN.PAGE = 15
  PAGE.SIZE = 5
  LINE.SPACE = 1
  GOTO 110
*
*---- MAIN PROCESSING
*
100*
  RELEASE
  MAT MIV.REC = ""
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
110*
  SCV.REC(1)<ECD.SCRN.NO> = DATE()
  ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
*
  GOSUB 1000
  IF ECD.RET.VALUE = "END" THEN
*        PRINT @(-1)
    STOP
  END
  NEW.REC = 0
  MATREADU MIV.REC FROM DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI" ELSE
    MAT MIV.REC = ""
    NEW.REC = 1
  END
  MODE = ""
  TMP.TAX.RATE = ""
  TMP.TAX.CALC = ""
*
  IF NEW.REC THEN
    REF.CNT=0;REF.NO=1;CURR.REF.NO=1
    FOR N = 1 TO 8 UNTIL ECD.RET.VALUE = "END"
      ON N GOSUB 1100,1200,1300,1400,1450,1500,1600,1800
    NEXT N
    IF ECD.RET.VALUE = "END" THEN GOTO 100
    ACTION = "A"
    GOTO 502
  END ELSE
    GOSUB 9000
    ECD.ACTION=3;CALL SCRN.EDIT
    REF.NO = 1
    CURR.REF.NO = 1
  END
*
*---- GET OPERATOR REQUEST
*
500*
  GOSUB 5000
  ACTION = ECD.RET.VALUE
502*
  BEGIN CASE
    CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 9
      N = ACTION
      ON N GOSUB 1100,1200,1300,1400,1450,1500,1600,1700,1800
    CASE ACTION = "A"
      MODE = "A"
      DONE = 0
      FOR REF.NO = REF.CNT + 1 TO 99 UNTIL DONE
        GOSUB 10000
        GOSUB 6000
        IF ECD.RET.VALUE = "END" THEN
          GOSUB 600
          REF.CNT = REF.NO - 1
          DONE = 1
        END ELSE
          REF.CNT = REF.NO
        END
        GOSUB 6200
      NEXT REF.NO
      REF.NO = REF.CNT
      CURR.REF.NO = ""
      GOSUB 10000
    CASE ACTION = "C" AND REF.CNT > 0
      MODE = "C"
      GOSUB 5100
      IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
        REF.NO = ECD.RET.VALUE
        GOSUB 6000
        GOSUB 6200
      END
      GOSUB 10000
    CASE ACTION = "D" AND REF.CNT > 0
      MODE = "D"
      GOSUB 5100
      IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
        REF.NO = ECD.RET.VALUE
        GOSUB 600
        GOSUB 6200
        REF.CNT = REF.CNT - 1
        IF REF.NO > 1 THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 10000
      END
    CASE ACTION = "I" AND REF.CNT > 0
      MODE = "I"
      GOSUB 5100
      IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
        REF.NO = ECD.RET.VALUE
        MIV.CHG.CODE = INSERT(MIV.CHG.CODE,1,REF.NO,0,"")
        MIV.CHG.CAT = INSERT(MIV.CHG.CAT,1,REF.NO,0,"")
        MIV.TAX.JURS = INSERT(MIV.TAX.JURS,1,REF.NO,0,"")
        MIV.QUANTITY = INSERT(MIV.QUANTITY,1,REF.NO,0,"")
        MIV.DESC = INSERT(MIV.DESC,1,REF.NO,0,"")
        MIV.AMOUNT = INSERT(MIV.AMOUNT,1,REF.NO,0,"")
        MIV.HIDDEN = INSERT(MIV.HIDDEN,1,REF.NO,0,"")
        MIV.TAXABLE = INSERT(MIV.TAXABLE,1,REF.NO,0,"")
        TMP.TAX.RATE = INSERT(TMP.TAX.RATE,1,REF.NO,0,"")
        TMP.TAX.CALC = INSERT(TMP.TAX.CALC,1,REF.NO,0,"")
        SCV.REC(15) = INSERT(SCV.REC(15),ECD.SCRN.NO,REF.NO,0,"")
        SCV.REC(16) = INSERT(SCV.REC(16),ECD.SCRN.NO,REF.NO,0,"")
        SCV.REC(17) = INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")
        SCV.REC(18) = INSERT(SCV.REC(18),ECD.SCRN.NO,REF.NO,0,"")
        REF.CNT = REF.CNT + 1
        CURR.REF.NO = ""
        GOSUB 10000
        GOSUB 6000
        IF ECD.RET.VALUE = "END" THEN
          GOSUB 600
          REF.CNT = REF.CNT - 1
          CURR.REF.NO = ""
          GOSUB 10000
        END ELSE
          GOSUB 6200
          GOSUB 10000
        END
      END
    CASE ACTION = "S" AND REF.CNT > 0
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > REF.CNT THEN REF.NO = 1
      GOSUB 10000
    * T25978 v
    CASE ACTION = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 10000
    CASE ACTION = 'ST'
      REF.NO = 1
      GOSUB 10000
    CASE ACTION = 'SB'
      REF.NO = REF.CNT
      GOSUB 10000
    * T25978 ^
    CASE ACTION = "P"
      ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "Y" THEN
        MAT VOI.REC = ''
        VOI.DATE =  MIV.DATE
        VOI.JOB.NO = MIV.JOB.NO
        VOI.CUST.NO = MIV.CUST.NO
        VOI.CUST.NAME = MIV.CUST.NAME
        VOI.ADDR1 = MIV.ADDR1
        VOI.ADDR2 = MIV.ADDR2
        VOI.ADDR3 = MIV.ADDR3
        VOI.ADDR4 = MIV.ADDR4
        VOI.PO = MIV.PO
        VOI.SLSMAN = MIV.SLSMAN
        VOI.DEL.DATE = DATE()
        MATWRITE VOI.REC ON VOID.INVOICES, CONO:INVOICE.NO:"MI"
        DELETE DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"
        GOTO 100
      END
    CASE ACTION = "E" OR ACTION = "END"
      GOTO 100
    CASE ACTION = "F"
      MIV.CCTR<1,1> = "000"
      MATWRITE MIV.REC ON DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"
      GOTO 100
  END CASE
  GOTO 500
*
*---- DELETE SPECIFIC LINE
*
600*
  MIV.CHG.CODE = DELETE(MIV.CHG.CODE,1,REF.NO,0)
  MIV.CHG.CAT = DELETE(MIV.CHG.CAT,1,REF.NO,0)
  MIV.TAX.JURS = DELETE(MIV.TAX.JURS,1,REF.NO,0)
  MIV.QUANTITY = DELETE(MIV.QUANTITY,1,REF.NO,0)
  MIV.DESC = DELETE(MIV.DESC,1,REF.NO,0)
  MIV.AMOUNT = DELETE(MIV.AMOUNT,1,REF.NO,0)
  MIV.HIDDEN = DELETE(MIV.HIDDEN,1,REF.NO,0)
  MIV.TAXABLE = DELETE(MIV.TAXABLE,1,REF.NO,0)
  TMP.TAX.RATE = DELETE(TMP.TAX.RATE,1,REF.NO,0)
  TMP.TAX.CALC = DELETE(TMP.TAX.CALC,1,REF.NO,0)
  SCV.REC(15) = DELETE(SCV.REC(15),ECD.SCRN.NO,REF.NO,0)
  SCV.REC(16) = DELETE(SCV.REC(16),ECD.SCRN.NO,REF.NO,0)
  SCV.REC(17) = DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)
  SCV.REC(18) = DELETE(SCV.REC(18),ECD.SCRN.NO,REF.NO,0)
  RETURN
*
*---- GET INVOICE NUMBER
*
1000*
  ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
  P_X  = 21 ; P_Y = 2 ; P_VALUE = "MI" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF ECD.RET.VALUE = "END" THEN RETURN
  FND = 1
  MATREAD OR.REC FROM OPEN.RECV, CONO:ECD.RET.VALUE:"MI" ELSE FND = 0
  IF FND THEN
    ERRMSG = "Duplicate Invoice Number"
    GOSUB 90000
    GOTO 1000
  END
  FND = 1
  READ REC FROM MANUAL.INVOICE, CONO:ECD.RET.VALUE:"MI" ELSE FND = 0
  IF FND THEN
    ERRMSG = "Duplicate Invoice Number"
    GOSUB 90000
    GOTO 1000
  END
  VOID = 1
  READ REC FROM VOID.INVOICES, CONO:ECD.RET.VALUE:"MI" ELSE VOID = 0
  IF VOID THEN
    ERRMSG = 'Duplicate Invoice Number, exists on the Voided Invoices File.'
    GOSUB 90000
    GOTO 1000
  END
  INVOICE.NO = ECD.RET.VALUE
  RETURN
*
*---- GET CUSTOMER ID
*
1100*
  SCV.REC(3)<ECD.SCRN.NO> = MIV.CUST.NO
  ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF ECD.RET.VALUE = "" THEN
    ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 1100
    IF ECD.RET.VALUE = "" THEN GOTO 1100
    GXR.XREF = CUSTOMER.XREF
    GXR.FILE = CUSTOMER; GXR.LOC = 1; GXR.TOP.LINE = "CUSTOMER XREF SEARCH"
    GXR.HEADING<1,1> = "CUSTOMER"; GXR.ID = ""; GXR.SRCH.ID = ECD.RET.VALUE
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    ECD.ACTION=2;CALL SCRN.EDIT
    SCV.REC(5)<ECD.SCRN.NO> = ""
    ECD.ACTION=3;CALL SCRN.EDIT
    IF GXR.ID = "" THEN GOTO 1100
    ECD.RET.VALUE = GXR.ID
  END
  MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Invalid Customer ID"
    GOSUB 90000
    GOTO 1100
  END
  MIV.CUST.NO = ECD.RET.VALUE
  MIV.CUST.NAME = CUST.NAME
  MIV.ADDR1 = CUST.ADDR1
  MIV.ADDR2 = CUST.ADDR2
  MIV.ADDR3 = CUST.ADDR3
  MIV.ADDR4 = CUST.ADDR4:" ":CUST.ZIP
  MIV.ATTENTION = CUST.ATTENTION
  SCV.REC(3)<ECD.SCRN.NO> = MIV.CUST.NO
  SCV.REC(5)<ECD.SCRN.NO> = MIV.CUST.NAME
  SCV.REC(7)<ECD.SCRN.NO> = MIV.ADDR1
  SCV.REC(9)<ECD.SCRN.NO> = MIV.ADDR2
  SCV.REC(10)<ECD.SCRN.NO> = MIV.ADDR3
  SCV.REC(11)<ECD.SCRN.NO> = MIV.ADDR4
  ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=5;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=9;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=10;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
  RETURN
*
*---- GET ATTENTION
*
1200*
  SCV.REC(29)<ECD.SCRN.NO> = MIV.ATTENTION
  ECD.NUM = 29;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.ATTENTION = ECD.RET.VALUE
  RETURN
*
*---- GET SALESMAN
*
1300*
  SCV.REC(12)<ECD.SCRN.NO> = MIV.SLSMAN
  ECD.DEFAULT = CUST.SALESMAN
  ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MATREAD SALESMAN.REC FROM SALESMAN, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Invalid Salesman ID"
    GOSUB 90000
    GOTO 1300
  END
  MIV.SLSMAN = ECD.RET.VALUE
  SCV.REC(13)<ECD.SCRN.NO> = SALS.NAME
  ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
  RETURN
*
*---- GET CUSTOMER P/O NUMBER
*
1400*
  ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.PO = ECD.RET.VALUE
  RETURN
*
*---- GET JOB NUMBER
*
1450*
  ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.JOB.NO = ECD.RET.VALUE
  RETURN
*
*---- GET INVOICE DATE
*
1500*
*     ECD.MINV=DATE()-365
  ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.DATE = ECD.RET.VALUE
  RETURN
*
*---- GET DIVISION
*
1600*
  ECD.NUM = 26; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 1799
  IF ECD.RET.VALUE = "" THEN
    READ ALL.DIV FROM CONTROL, CONO:"DIVISIONS" ELSE ALL.DIV = "00"
    LINES = COUNT(ALL.DIV<1>,VM) + (ALL.DIV<1> # "")
    IF LINES < 1 THEN GOTO 1600
    SNO = ""
    DESC = ""
    FOR LN = 1 TO LINES
      FND = 1
      MATREAD DIV.REC FROM DIVISION, CONO:ALL.DIV<1,LN> ELSE FND = 0
      IF FND THEN
        SNO<-1> = ALL.DIV<1,LN>
        DESC<-1> = DIV.DESC
      END
    NEXT LN
    LINES = COUNT(SNO,AM) + (SNO # "")
    IF LINES < 1 THEN GOTO 1600
    LN = 1
    OLD.START = 0
    GOSUB 21000
    GOSUB 20000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1600
    ECD.RET.VALUE = SNO<ECD.RET.VALUE>
    ECD.NUM = 26; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
  IF ECD.RET.VALUE = "00" THEN
    MIV.DIV = "00"
    ECD.NUM = 26; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DIV
    ECD.ACTION = 5; CALL SCRN.EDIT
    GOTO 1700
  END
  MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Division ":ECD.RET.VALUE:" is not on file";GOSUB 90000; GOTO 1600
  END
  MIV.DIV = ECD.RET.VALUE
*
*---- GET DEPARTMENT
*
1700*
  IF MIV.DIV = "00" THEN
    MIV.DEPT<1,1> = "00"
    ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DEPT<1,1>
    ECD.ACTION = 5; CALL SCRN.EDIT
    GOTO 1799
  END
  ECD.NUM = 27; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 1799
  IF ECD.RET.VALUE = "" THEN
    LINES = COUNT(DIV.DEPT,VM) + (DIV.DEPT # "")
    IF LINES < 1 THEN GOTO 1700
    SNO = ""
    DESC = ""
    FOR LN = 1 TO LINES
      IF LEN(DIV.DEPT<1,LN>) = 2 THEN
        FND = 1
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:DIV.DEPT<1,LN> ELSE FND = 0
        IF FND THEN
          SNO<-1> = DIV.DEPT<1,LN>
          DESC<-1> = DEPT.DESC
        END
      END
    NEXT LN
    LINES = COUNT(SNO,AM) + (SNO # "")
    IF LINES < 1 THEN GOTO 1700
    LN = 1
    OLD.START = 0
    GOSUB 21000
    GOSUB 20000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1700
    ECD.RET.VALUE = SNO<ECD.RET.VALUE>
    ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
  IF ECD.RET.VALUE = "00" THEN
    MIV.DEPT<1,1> = "00"
    ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DEPT<1,1>
    ECD.ACTION = 5; CALL SCRN.EDIT
    GOTO 1799
  END
  LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE
    ERRMSG = "Department ":ECD.RET.VALUE:" is not valid for this division"
    GOSUB 90000; GOTO 1700
  END
  MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Department ":ECD.RET.VALUE:" is not on file";GOSUB 90000; GOTO 1700
  END
  MIV.DEPT<1,1> = ECD.RET.VALUE
1799*
  RETURN
*
*---- GET SALES CODE
*
1800*
  SCV.REC(30)<ECD.SCRN.NO> = MIV.SALES.CODE
  ECD.DEFAULT = MIV.SALES.CODE
  ECD.NUM=30;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF ECD.RET.VALUE # "" THEN
    MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Invalid Sales Code"
      GOSUB 90000
      GOTO 1800
    END
  END
  MIV.SALES.CODE = ECD.RET.VALUE
  RETURN
*
*---- GET OPERATOR REQUEST
*
5000*
  ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  RETURN
*
*---- GET LINE NUMBER
*
5100*
  SCV.REC(21)<ECD.SCRN.NO> = ""
  ECD.MINV = CURR.REF.NO; ECD.MAXV = CURR.REF.NO + LINE.COUNT - 1
  IF ECD.MAXV > REF.CNT THEN ECD.MAXV = REF.CNT
  ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  RETURN
*
*---- GET MULTI-LINE DATA
*
6000*
  ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
6010*
  SCV.REC(15)<ECD.SCRN.NO,REF.NO> = MIV.CHG.CODE<1,REF.NO>
  ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  DESC.FLAG = 0
  BEGIN CASE
    CASE ECD.RET.VALUE = "SUB" OR ECD.RET.VALUE = "SUBT"
      MAT INC.REC = ""
      INC.DESC = SPACE(39):"SUB TOTAL"
    CASE ECD.RET.VALUE = "TOT"
      MAT INC.REC = ""
      INC.DESC = SPACE(43):"TOTAL"
    CASE 1
      MATREAD INC.REC FROM INVOICE.CODE, CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Invalid Invoice Code"
        GOSUB 90000
        GOTO 6010
      END
      IF INC.HIDDEN = "Y" AND REF.NO = 1 THEN
        ERRMSG = "Hidden line cannot be first line entered"
        GOSUB 90000;GOTO 6010
      END
  END CASE
  IF MIV.CHG.CODE<1,REF.NO> # ECD.RET.VALUE THEN DESC.FLAG = 1
  MIV.CHG.CODE<1,REF.NO> = ECD.RET.VALUE
  MIV.CHG.CAT<1,REF.NO> = INC.CATEGORY
  MIV.HIDDEN<1,REF.NO> = INC.HIDDEN
6012*
  BEGIN CASE
    CASE MIV.CHG.CAT<1,REF.NO> = "TAX"
      SCV.REC(23)<ECD.SCRN.NO> = "Tax Jur :"
      ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
      SCV.REC(24)<ECD.SCRN.NO> = MIV.TAX.JURS<1,REF.NO>
      SCV.REC(25)<ECD.SCRN.NO> = ""
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
        ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
        GOSUB 90000
        GOTO 6012
      END
      MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE
      TMP.TAX.RATE<1,REF.NO> = TAX.RATE
      TMP.TAX.CALC<1,REF.NO> = ""
      SCV.REC(25)<ECD.SCRN.NO> = TAX.JUR
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    CASE MIV.CHG.CAT<1,REF.NO> = "SHP"
      SCV.REC(23)<ECD.SCRN.NO> = "Ship Via :"
      ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
      SCV.REC(24)<ECD.SCRN.NO> = MIV.TAX.JURS<1,REF.NO>
      SCV.REC(25)<ECD.SCRN.NO> = ""
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
        ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"
        GOSUB 90000
        GOTO 6012
      END
      MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE
      MIV.TAXABLE<1,REF.NO> = ""
      TMP.TAX.RATE<1,REF.NO> = ""
      TMP.TAX.CALC<1,REF.NO> = ""
      SCV.REC(25)<ECD.SCRN.NO> = SHPV.DESC
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    CASE MIV.CHG.CAT<1,REF.NO> = "DSC" OR  MIV.CHG.CAT<1,REF.NO> = "MSC"
      SCV.REC(23)<ECD.SCRN.NO> = "Sales code :"
      ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
      SCV.REC(24)<ECD.SCRN.NO> = MIV.TAX.JURS<1,REF.NO>
      SCV.REC(25)<ECD.SCRN.NO> = ""
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
        ERRMSG="Sales code ":ECD.RET.VALUE:" is not on file"
        GOSUB 90000
        GOTO 6012
      END
      MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE
      MIV.TAXABLE<1,REF.NO> = ""
      TMP.TAX.RATE<1,REF.NO> = ""
      TMP.TAX.CALC<1,REF.NO> = ""
      SCV.REC(25)<ECD.SCRN.NO> = ""
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    CASE 1
      MIV.TAX.JURS<1,REF.NO> = ""
      MIV.TAXABLE<1,REF.NO> = ""
      TMP.TAX.RATE<1,REF.NO> = ""
      TMP.TAX.CALC<1,REF.NO> = ""
  END CASE
  IF INC.DESC # "" AND DESC.FLAG = 1 THEN
    SCV.REC(17)<ECD.SCRN.NO,REF.NO>=INC.DESC
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  END
*
*---- GET QUANTITY
*
6020*
  BEGIN CASE
    CASE INC.CATEGORY = "OTH" OR INC.CATEGORY = "MSC"
      ECD.NUM=16;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
    CASE 1
      ECD.RET.VALUE = ""
      SCV.REC(16)<ECD.SCRN.NO,REF.NO> = ""
      ECD.NUM=16;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  END CASE
  MIV.QUANTITY<1,REF.NO> = ECD.RET.VALUE
*
*---- GET DESCRIPTION
*
6030*
  ECD.DEFAULT = INC.DESC
  ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.DESC<1,REF.NO> = ECD.RET.VALUE
*
*---- GET AMOUNT
*
6040*
  BEGIN CASE
    CASE INC.CATEGORY = "TAX"
      TAX.REF = REF.NO
      GOSUB 6400
      ECD.O.R="O";ECD.DEFAULT=TAMT
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        IF ECD.RET.VALUE = "" THEN
          ECD.RET.VALUE = TAMT
          SCV.REC(18)<ECD.SCRN.NO,REF.NO> = TAMT
          ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
        END
        IF ECD.RET.VALUE = TAMT THEN
          TMP.TAX.CALC<1,REF.NO> = "C"
          MIV.TAXABLE<1,REF.NO> = AMT.TAX
        END ELSE
          TMP.TAX.CALC<1,REF.NO> = "E"
          BEGIN CASE
            CASE TMP.TAX.RATE<1,REF.NO> + 0 = 0
            CASE ECD.RET.VALUE < 0
              AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)-.5)
            CASE 1
              AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)+.5)
          END CASE
6045*
          DEFAULT = OCONV(AMT.TAX, "MD2")
          O.R = "O"
          X = 0
          Y = 22
          TYP = 4
          SCALER = 2
          IF ECD.RET.VALUE < 0 THEN
            MINV = -999999999
            MAXV = 0
          END ELSE
            MINV = 0
            MAXV = 999999999
          END
          MAXL = 10
          PMSG ="Enter Taxable amount : "
          CALL EDIT.SUB
          P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          IF VALUE = "END" THEN GOTO 6040
          IF VALUE = "" THEN GOTO 6045
          MIV.TAXABLE<1,REF.NO> = VALUE
        END
      END ELSE
        GOTO 6010
      END
    CASE INC.CATEGORY = "CMT"
      ECD.RET.VALUE = ""
      SCV.REC(18)<ECD.SCRN.NO,REF.NO> = ""
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    CASE MIV.CHG.CODE<1,REF.NO> = "SUB"
      GOSUB 6200
      ECD.RET.VALUE = AMT.SUB
      SCV.REC(18)<ECD.SCRN.NO,REF.NO> = AMT.SUB
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    CASE MIV.CHG.CODE<1,REF.NO> = "SUBT"
      GOSUB 6200
      ECD.RET.VALUE = MIV.AMOUNT<1,REF.NO>
      SCV.REC(18)<ECD.SCRN.NO,REF.NO> = MIV.AMOUNT<1,REF.NO>
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    CASE MIV.CHG.CODE<1,REF.NO> = "TOT"
      GOSUB 6200
      ECD.RET.VALUE = AMT.TOT
      SCV.REC(18)<ECD.SCRN.NO,REF.NO> = AMT.TOT
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    CASE 1
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
        GOTO 6010
      END
  END CASE
  IF ECD.RET.VALUE = "END" THEN RETURN
  MIV.AMOUNT<1,REF.NO> = ECD.RET.VALUE
*
  IF SCV.REC(23)<ECD.SCRN.NO> # "" THEN
    SCV.REC(23)<ECD.SCRN.NO> = ""
    SCV.REC(24)<ECD.SCRN.NO> = ""
    SCV.REC(25)<ECD.SCRN.NO> = ""
    ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
  END
  RETURN
*
*---- CALCULATE AND DISPLAY TOTAL
*
6200*
  AMT.SUB = 0
  AMT.TOT = 0
  AMT.SUBT = 0
  FOR REF = 1 TO REF.CNT + 1
    CODE = MIV.CHG.CODE<1,REF>
    CATG = MIV.CHG.CAT<1,REF>
    AMT = MIV.AMOUNT<1,REF>
    BEGIN CASE
      CASE CODE = "SUB"
        IF AMT.SUB # AMT THEN
          MIV.AMOUNT<1,REF> = AMT.SUB
          SCV.REC(18)<ECD.SCRN.NO,REF> = AMT.SUB
          IF AMT # "" THEN CURR.REF.NO = ""
        END
      CASE CODE = "SUBT"
        IF AMT.SUBT # AMT THEN
          MIV.AMOUNT<1,REF> = AMT.SUBT
          SCV.REC(18)<ECD.SCRN.NO,REF> = AMT.SUBT
          IF AMT # "" THEN CURR.REF.NO = ""
        END
        AMT.SUBT = 0
      CASE CODE = "TOT"
        IF AMT.TOT # AMT THEN
          MIV.AMOUNT<1,REF> = AMT.TOT
          SCV.REC(18)<ECD.SCRN.NO,REF> = AMT.TOT
          IF AMT # "" THEN CURR.REF.NO = ""
        END
      CASE CATG = "TAX"
        TAX.REF = REF
        GOSUB 6400
        IF TAMT # AMT OR TMP.TAX.RATE<1,REF> + 0 = 0 THEN
          IF TMP.TAX.CALC<1,REF> = "E" THEN
            BEGIN CASE
              CASE MODE = ""
              CASE MODE = "A"
              CASE MODE = "C" AND REF.NO >= REF
              CASE MODE = "D" AND REF.NO > REF
              CASE MODE = "I" AND REF.NO > REF
              CASE 1
                ERRMSG = "Tax entry on line ":REF:" may be affected"
                GOSUB 90000
            END CASE
          END ELSE
            AMT = TAMT
            MIV.AMOUNT<1,REF> = AMT
            MIV.TAXABLE<1,REF> = AMT.TAX
            SCV.REC(18)<ECD.SCRN.NO,REF> = AMT
            IF AMT # "" THEN CURR.REF.NO = ""
          END
        END
        AMT.SUB = AMT.SUB + AMT
        AMT.TOT = AMT.TOT + AMT
        AMT.SUBT = AMT.SUBT + AMT
      CASE 1
        AMT.SUB = AMT.SUB + AMT
        AMT.TOT = AMT.TOT + AMT
        AMT.SUBT = AMT.SUBT + AMT
    END CASE
  NEXT REF
  MIV.INV.AMT = AMT.TOT
  SCV.REC(19)<ECD.SCRN.NO> = MIV.INV.AMT
  ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
  RETURN
*
*---- CALCULATE SALES TAX
*
6400*
  AMT.TAX = 0
  TDONE = 0
  FOR TREF = TAX.REF-1 TO 1 STEP -1 UNTIL TDONE
    IF MIV.CHG.CAT<1,TREF> = "TAX" THEN
      IF AMT.TAX # 0 THEN TDONE = 1
    END ELSE
      IF MIV.CHG.CODE<1,TREF> # "SUBT" THEN
        AMT.TAX = AMT.TAX + MIV.AMOUNT<1,TREF>
        IF MIV.CHG.CODE<1,TREF> = "SUB" THEN
          TDONE = 1
        END
      END
    END
  NEXT TREF
  IF AMT.TAX < 0 THEN
    TAMT = INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100-0.5)
  END ELSE
    TAMT = INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)
  END
  RETURN
*
*---- SET SCREEN VALUES
*
9000*
  MATREAD CUST.REC FROM CUSTOMER, CONO:MIV.CUST.NO ELSE
    MAT CUST.REC = ""
    CUST.NAME = "????????????????????"
  END
  MATREAD SALESMAN.REC FROM SALESMAN, CONO:MIV.SLSMAN ELSE
    MAT SALESMAN.REC = ""
    SALS.NAME = "????????????????????"
  END
  IF MIV.DIV # "00" THEN
    MATREAD DIV.REC FROM DIVISION, CONO : MIV.DIV ELSE MAT DIV.REC = ""
  END ELSE
    MAT DIV.REC = ""
  END
  SCV.REC(3)<ECD.SCRN.NO> = MIV.CUST.NO
  SCV.REC(5)<ECD.SCRN.NO> = MIV.CUST.NAME
  SCV.REC(7)<ECD.SCRN.NO> = MIV.ADDR1
  SCV.REC(9)<ECD.SCRN.NO> = MIV.ADDR2
  SCV.REC(10)<ECD.SCRN.NO> = MIV.ADDR3
  SCV.REC(11)<ECD.SCRN.NO> = MIV.ADDR4
  SCV.REC(12)<ECD.SCRN.NO> = MIV.SLSMAN
  SCV.REC(13)<ECD.SCRN.NO> = SALS.NAME
  SCV.REC(6)<ECD.SCRN.NO> = MIV.PO
  SCV.REC(4)<ECD.SCRN.NO> = MIV.JOB.NO
  SCV.REC(8)<ECD.SCRN.NO> = MIV.DATE
  SCV.REC(26)<ECD.SCRN.NO> = MIV.DIV
  SCV.REC(27)<ECD.SCRN.NO> = MIV.DEPT<1,1>
  SCV.REC(29)<ECD.SCRN.NO> = MIV.ATTENTION
  SCV.REC(30)<ECD.SCRN.NO> = MIV.SALES.CODE
  REF.CNT = COUNT(MIV.CHG.CODE,VM) + (MIV.CHG.CODE # "")
  FOR REF = 1 TO REF.CNT
    SCV.REC(15)<ECD.SCRN.NO,REF> = MIV.CHG.CODE<1,REF>
    SCV.REC(16)<ECD.SCRN.NO,REF> = MIV.QUANTITY<1,REF>
    SCV.REC(17)<ECD.SCRN.NO,REF> = MIV.DESC<1,REF>
    SCV.REC(18)<ECD.SCRN.NO,REF> = MIV.AMOUNT<1,REF>
    IF MIV.CHG.CAT<1,REF> = "TAX" THEN
      MATREAD TAX.REC FROM TAX, CONO:MIV.TAX.JURS<1,REF> ELSE
        MAT TAX.REC = ""
        ERRMSG = "Invalid Tax Jurisdiction - ":MIV.TAX.JURS
        GOSUB 90000
      END
      TMP.TAX.RATE<1,REF> = TAX.RATE
      TAX.REF = REF
      GOSUB 6400
      IF MIV.AMOUNT<1,REF> = TAMT THEN
        TMP.TAX.CALC<1,REF> = "C"
      END ELSE
        TMP.TAX.CALC<1,REF> = "E"
      END
    END
  NEXT REF
  SCV.REC(19)<ECD.SCRN.NO> = MIV.INV.AMT
  RETURN
*
*---- DISPLAY MULTI-LINE FIELDS
*
10000*
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM=16;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM=17;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  ECD.NUM=18;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
  RETURN
*
*---- GET XREF SELECTION
*
20000*
  ECD.NUM = 28
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N"
      GOTO 20999
    CASE NUM(ECD.RET.VALUE)
      IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN
        ERRMSG = "** OUT OF RANGE **"
        GOSUB 90000
      END ELSE
        GOTO 20999
      END
    CASE ECD.RET.VALUE = "S"
      LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 21000
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 21000
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 21000
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 21000
    * T25978 ^
  END CASE
  GOTO 20000
20999*
  CURR.REF.NO = ""
  GOSUB 10000
  RETURN
*
*---- SCROLL XREF
*
21000*
  ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF ST.LINE = OLD.START THEN RETURN
  OLD.START = ST.LINE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > LINES THEN LST.LINE = LINES
  CNT = 1
  FOR NN = ST.LINE TO LST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(NN-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = NN "R#2" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:SNO<NN> "L#2"
    P_X  := AM:17 ; P_Y := AM:SLN ; P_VALUE := AM:DESC<NN> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT NN
  FOR NN = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(NN-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT NN
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*     PRINT @(0,23):CL:ERRMSG:
*     INPUT REPLY,1:
*     PRINT @(0,23):CL:
*     RETURN
*
*---- END OF PROGRAM
*
99999*
  STOP
END
