*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*************************************************************
* REVISION  - [10.0]
* COPYRIGHT - 1982 by C.B.A. (Vercom Software, Inc.)
* PROGRAM   - MANUAL.INVOICE.MAINT.F4
* SOURCE    - ARSBP
* AUTHOR    - NICK AMENDOLA, C.B.A.
* DATE      - 10/07/86
* DESCRIPTION
*           04/19/89 TASK # 14058 (GG)
* This program is used to create and maintain manual invoices
* for PRIMAC.
* TASK 17927 GAT 10/31/94 ADD INVOICE ALLOC MAINT
* T21876 diane 05/13/1997 * Display Xref description
* T21984 rick 06/16/1997 * Modify distribution to occur even if amt < 0
* T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match problem.
*T22168 bilal 11/18/1997 * Allow 4 Decimal places in unit price.
*T22747 lanny 04/14/1998 * Hidden lines lockup problem.
*T22759 lANNY 04/16/1998 * Fix prob caused by Hidden Line mod.
*T23324 cindy 10/13/1998 * descr not changing when change invoice code
*T23278 markt 10/13/1998 * Add division security check
*T23460 rik 11/24/1998 * bug relating to task 23324.  Was not putting
*                        descr in as a MV.
*T23606 edvard 05/14/1999 * Added sales rep. xref and modified to use 
*                           GEN.XREF.SUB instead of GEN.XREF          
*T23932 randy 05/25/1999 * CHANGE ATTENTION FIELD TO BILL TO
*                          ATTENTION AND ADD SHIP TO ATTENTION
*T24082 cm 06/23/1999 * Correct Line item detail clear problem
*T23278 markt 12/08/1999 * Add Division code to Void Invoices record.
*T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since the
*                         COUNTRY.CODE file can hold multiple attributes
*                         of data.
*T25764 renee 07/25/2001 * Add "Terms code" field that defaults from
*                          customer record but allows edit. Add the
*                          number of days stored in the terms record to
*                          the invoice date to come up with the invoice
*                          due date.
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T26126 adelgado 02/25/2002 * Implement the LOCKED clause for READU.
*T26805 epitka 08/27/2002 * ADD EMAIL
*T27524 thompson 06/26/2003 * FIX PROBLEM OF SCROLLING WITH REVENUE
*                             DISTRIBUTION
*T27646 thompson 08/18/2003 * ALL FOR MULTI PLATFORM USE
*************************************************************
*
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>TERMS
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>VOID.INVOICES
*COPY>PMC.CPYLIB>COUNTRY.CODE
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>GLTABLE
MAT SYSCOM.REC =  "";SYS.TYPE = 2
*
*-- OPEN ALL FILES
*
OPEN "","COMPANY" TO COMPANY ELSE
  ERRMSG = "CANNOT OPEN COMPANY FILE" ; GOSUB 93000
END
OPEN "","ARS.SCREENS" TO M.SCREENS ELSE
  ERRMSG = "CANNOT OPEN ARS.SCREENS FILE" ; GOSUB 93000
END
OPEN "","JCS.SCREENS" TO SECOND.SCREENS ELSE
  ERRMSG = "CANNOT OPEN JCS.SCREENS FILE" ; GOSUB 93000
END
OPEN "","TERMS" TO TERMS ELSE
  ERRMSG = "CANNOT OPEN TERMS FILE" ; GOSUB 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
  ERRMSG = "CANNOT OPEN CONTROL FILE" ; GOSUB 93000
END
OPEN "","COA" TO COA ELSE
  ERRMSG = "CANNOT OPEN COA FILE" ; GOSUB 93000
END
OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
  ERRMSG = "CANNOT OPEN OPEN.RECV FILE" ; GOSUB 93000
END
OPEN "","TAX" TO TAX ELSE
  ERRMSG = "CANNOT OPEN TAX FILE" ; GOSUB 93000
END
OPEN "","DAILY.MANUAL.INVOICE" TO DAILY.MANUAL.INVOICE ELSE
  ERRMSG = "CANNOT OPEN DAILY.MANUAL.INVOICE FILE" ; GOSUB 93000
END
OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE
  ERRMSG = "CANNOT OPEN MANUAL.INVOICE FILE" ; GOSUB 93000
END
OPEN "","CUSTOMER" TO CUSTOMER ELSE
  ERRMSG = "CANNOT OPEN CUSTOMER FILE" ; GOSUB 93000
END
OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
  ERRMSG = "CANNOT OPEN CUSTOMER.XREF FILE" ; GOSUB 93000
END
OPEN "","SALESMAN" TO SALESMAN ELSE
  ERRMSG = "CANNOT OPEN SALESMAN FILE" ; GOSUB 93000
END
OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
  ERRMSG = "CANNOT OPEN INVOICE.CODE FILE" ; GOSUB 93000
END
OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE
  ERRMSG = "CANNOT OPEN VOID.INVOICES FILE" ; GOSUB 93000
END
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
  ERRMSG = "CANNOT OPEN SHIP.VIA FILE" ; GOSUB 93000
END
OPEN "","PREFIX" TO PREFIX ELSE
  ERRMSG = "CANNOT OPEN PREFIX FILE" ; GOSUB 93000
END
OPEN "","DIVISION" TO DIVISION ELSE
  ERRMSG = "CANNOT OPEN DIVISION FILE" ; GOSUB 93000
END
OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
  ERRMSG = "CANNOT OPEN DEPARTMENT FILE" ; GOSUB 93000
END
OPEN "","COST.CNTR" TO COST.CNTR ELSE
  ERRMSG = "CANNOT OPEN COST.CNTR FILE" ; GOSUB 93000
END
OPEN "","SALES.CODE" TO SALES.CODE ELSE
  ERRMSG = "CANNOT OPEN SALES.CODE FILE" ; GOSUB 93000
END
OPEN "","COUNTRY.CODE" TO COUNTRY.CODE ELSE
  ERRMSG = "CANNOT OPEN COUNTRY.CODE FILE" ; GOSUB 93000
END
OPEN "","XREF.DATA" TO XREF.DATA ELSE                                  
  ERRMSG = "CANNOT OPEN XREF.DATA FILE" ; GOSUB 93000
END                                                                    
*
*-- INITIALIZATION
*
MAT COMP.REC=""
CONO=""
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO="END" THEN GOTO 99999
LOGNAME = 'LOGNAME' ; CALL SYSVARS.SUB(LOGNAME); *T27646
MAT EDIT.COM.DRIVER=""
MAT SCV.REC=""
FILL = "#"
MAT GEN.XREF.REC=""
OLD.NAME="";GXR.CO=CONO                                        
*GXR.ATT<1,1>=0;GXR.ATT<1,2>=1;GXR.LEN<1,1>=10;GXR.LEN<1,2>=30 
MAT EDIT.COM.DRIVER=""
ECD.SCRN.CNT=5
ECD.SCRN.NAME<1>="MANUAL.INVOICE.MAINT.F4"
ECD.SCRN.NAME<5>="MANUAL.INV.ALLOC.MAINT"
ECD.ACTION=1;CALL SCRN.EDIT
ECD.SCRN.NO=1
ECD.ACTION=2;CALL SCRN.EDIT
REF.CNT=0
REF.NO=""
CURR.REF.NO=""
LINE.COUNT=5
BEGIN.PAGE=15
PAGE.SIZE=5
LINE.SPACE=1
MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
  RELEASE CONTROL, CONO:'GLTABLE'
  ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
  GOSUB 93000
END
BAL.PTR = 0
MENU = "MANUAL"
PROG.FLAG = ""
BAL.FLG = ""
GOTO 110
*
*-- MAIN PROCESSING
*
100* 
RELEASE
MAT MIV.REC=""
MAT SCV.REC=""
ECD.ACTION=6;CALL SCRN.EDIT
110* 
SCV.REC(1)<ECD.SCRN.NO>=DATE()
ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
GOSUB 1000
IF ECD.RET.VALUE="END" THEN
  STOP
END
NEW.REC=0
MATREADU MIV.REC FROM DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI" LOCKED
  ERRMSG = 'MANUAL INVOICE record is locked by user - ':GETUSERNAME(STATUS())
  GOSUB 91000;GOTO 100 
END ELSE
  MAT MIV.REC=""
  NEW.REC=1
END
MODE=""
TMP.TAX.RATE=""
TMP.TAX.CALC=""
IF NEW.REC THEN
  REF.CNT=0;REF.NO=1;CURR.REF.NO=1
  FOR N=1 TO 11
    ON N GOSUB 1100,1200,1250,1300,1350,1400,1450,1500,1600,1800,1900
    IF ECD.RET.VALUE="END" THEN GOTO 100
  NEXT N
  ACTION="A"
  GOTO 502
END ELSE
  DIV.CODE = MIV.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = ''; *T27646
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    GOSUB 91000; GOTO 100
  END
  GOSUB 9000
  ECD.ACTION=3;CALL SCRN.EDIT
  REF.NO=1
  CURR.REF.NO=1
END
*
*-- GET OPERATOR REQUEST
*
500* 
GOSUB 5000
ACTION=ECD.RET.VALUE
502* 
BEGIN CASE
  CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 12; * T23932
    N=ACTION
    ON N GOSUB 1100,1200,1250,1300,1350,1400,1450,1500,1600,1700,1800,1900
  CASE ACTION="A"
    MODE="A"
    DONE=0
    FOR REF.NO=REF.CNT + 1 TO 99 UNTIL DONE
      GOSUB 10000
      GOSUB 6000
      IF ECD.RET.VALUE="END" THEN
        GOSUB 600
        REF.CNT=REF.NO - 1
        DONE=1
      END ELSE
        REF.CNT=REF.NO
      END
      GOSUB 6200
    NEXT REF.NO
    REF.NO=REF.CNT
    CURR.REF.NO=""
    GOSUB 10000
  CASE ACTION="C" AND REF.CNT > 0
    MODE="C"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      GOSUB 6000
      GOSUB 6200
    END
    GOSUB 10000
  CASE ACTION="D" AND REF.CNT > 0
    MODE="D"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      GOSUB 600
      GOSUB 6200
      REF.CNT=REF.CNT - 1
      IF REF.NO > 1 THEN REF.NO=REF.NO - 1
      CURR.REF.NO=""
      GOSUB 10000
    END
  CASE ACTION="I" AND REF.CNT > 0
    MODE="I"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      MIV.CHG.CODE=INSERT(MIV.CHG.CODE,1,REF.NO,0,"")
      MIV.CHG.CAT=INSERT(MIV.CHG.CAT,1,REF.NO,0,"")
      MIV.TAX.JURS=INSERT(MIV.TAX.JURS,1,REF.NO,0,"")
      MIV.TAXABLE=INSERT(MIV.TAXABLE,1,REF.NO,0,"")
      MIV.QUANTITY=INSERT(MIV.QUANTITY,1,REF.NO,0,"")
      MIV.UM=INSERT(MIV.UM,1,REF.NO,0,"")
      MIV.DESC=INSERT(MIV.DESC,1,REF.NO,0,"")
      MIV.UNIT.PRICE=INSERT(MIV.UNIT.PRICE,1,REF.NO,0,"")
      MIV.AMOUNT=INSERT(MIV.AMOUNT,1,REF.NO,0,"")
      MIV.HIDDEN=INSERT(MIV.HIDDEN,1,REF.NO,0,"")
      TMP.TAX.RATE=INSERT(TMP.TAX.RATE,1,REF.NO,0,"")
      TMP.TAX.CALC=INSERT(TMP.TAX.CALC,1,REF.NO,0,"")
      SCV.REC(15)=INSERT(SCV.REC(15),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(16)=INSERT(SCV.REC(16),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(17)=INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(18)=INSERT(SCV.REC(18),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(30)=INSERT(SCV.REC(30),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(31)=INSERT(SCV.REC(31),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(34)=INSERT(SCV.REC(34),ECD.SCRN.NO,REF.NO,0,"")
      MIV.ALLOC.DIV=INSERT(MIV.ALLOC.DIV,1,REF.NO,0,"")
      MIV.ALLOC.AMT=INSERT(MIV.ALLOC.AMT,1,REF.NO,0,"")
      REF.CNT=REF.CNT + 1
      CURR.REF.NO=""
      GOSUB 10000
      GOSUB 6000
      IF ECD.RET.VALUE="END" THEN
        GOSUB 600
        REF.CNT=REF.CNT - 1
        CURR.REF.NO=""
        GOSUB 10000
      END ELSE
        GOSUB 6200
        GOSUB 10000
      END
    END
  CASE ACTION="S" AND REF.CNT > 0
    REF.NO=CURR.REF.NO + LINE.COUNT
    IF REF.NO > REF.CNT THEN REF.NO=1
    GOSUB 10000
  CASE ACTION = 'SR'
    REF.NO = CURR.REF.NO - LINE.COUNT
    IF REF.NO < 1 THEN REF.NO = 1
    GOSUB 10000
  CASE ACTION = 'ST'
    REF.NO = 1
    GOSUB 10000
  CASE ACTION = 'SB'
    REF.NO = REF.CNT
    GOSUB 10000
  CASE ACTION="P"
    ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="Y" THEN
      MAT VOI.REC = ''
      VOI.DATE =  MIV.DATE
      VOI.JOB.NO = MIV.JOB.NO
      VOI.CUST.NO = MIV.CUST.NO
      VOI.CUST.NAME = MIV.CUST.NAME
      VOI.ADDR1 = MIV.ADDR1
      VOI.ADDR2 = MIV.ADDR2
      VOI.ADDR3 = MIV.ADDR3
      VOI.ADDR4 = MIV.ADDR4
      VOI.PO = MIV.PO
      VOI.SLSMAN = MIV.SLSMAN
      VOI.DEL.DATE = DATE()
      VOI.DIV = MIV.DIV ;* T23278
      MATWRITE VOI.REC ON VOID.INVOICES, CONO:INVOICE.NO:"MI"
      DELETE DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"
    END
    GOTO 100
  CASE ACTION="E" OR ACTION="END"
    GOTO 100
  CASE ACTION="R"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      IF MIV.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN
        ERRMSG = "No revenue allocation for this line ":REF.NO
        GOSUB 91000
        ECD.RET.VALUE = ""
      END ELSE
        REF.NO = ECD.RET.VALUE
        GOSUB 7000
      END
    END
    GOSUB 10000
  CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0
    ERRMSG = "Allocation of line item on invoice does not balance"
    GOSUB 91000
    GOTO 500
  CASE ACTION="F"
    FOR X = 1 TO DCOUNT(MIV.UM,VM)
      IF MIV.HIDDEN<1,X> # "Y" THEN
        DONE = 0
        FOR Z = X+1 TO DCOUNT(MIV.UM,VM) UNTIL DONE
          IF MIV.HIDDEN<1,Z> = "Y" THEN
            IF MIV.UM<1,Z> # MIV.UM<1,X> THEN
              ERRMSG = "UM for hidden line ":Z:" does not match detail line ":X
              GOSUB 91000
              GOTO 500
            END
          END ELSE
            DONE = 1
          END
        NEXT Z
      END
    NEXT X
    MIV.CCTR<1,1>="000"
    MATWRITE MIV.REC ON DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"
    GOTO 100
END CASE
GOTO 500
*-- DELETE SPECIFIC LINE
*
600* 
MIV.CHG.CODE=DELETE(MIV.CHG.CODE,1,REF.NO,0)
MIV.CHG.CAT=DELETE(MIV.CHG.CAT,1,REF.NO,0)
MIV.TAX.JURS=DELETE(MIV.TAX.JURS,1,REF.NO,0)
MIV.QUANTITY=DELETE(MIV.QUANTITY,1,REF.NO,0)
MIV.TAXABLE=DELETE(MIV.TAXABLE,1,REF.NO,0)
MIV.UM=DELETE(MIV.UM,1,REF.NO,0)
MIV.DESC=DELETE(MIV.DESC,1,REF.NO,0)
MIV.UNIT.PRICE=DELETE(MIV.UNIT.PRICE,1,REF.NO,0)
MIV.AMOUNT=DELETE(MIV.AMOUNT,1,REF.NO,0)
MIV.HIDDEN=DELETE(MIV.HIDDEN,1,REF.NO,0)
TMP.TAX.RATE=DELETE(TMP.TAX.RATE,1,REF.NO,0)
TMP.TAX.CALC=DELETE(TMP.TAX.CALC,1,REF.NO,0)
SCV.REC(15)=DELETE(SCV.REC(15),ECD.SCRN.NO,REF.NO,0)
SCV.REC(16)=DELETE(SCV.REC(16),ECD.SCRN.NO,REF.NO,0)
SCV.REC(17)=DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)
SCV.REC(18)=DELETE(SCV.REC(18),ECD.SCRN.NO,REF.NO,0)
SCV.REC(30)=DELETE(SCV.REC(30),ECD.SCRN.NO,REF.NO,0)
SCV.REC(31)=DELETE(SCV.REC(31),ECD.SCRN.NO,REF.NO,0)
SCV.REC(34) = DELETE(SCV.REC(34),ECD.SCRN.NO,REF.NO,0)
MIV.ALLOC.DIV=DELETE(MIV.ALLOC.DIV,1,REF.NO,0)
MIV.ALLOC.AMT=DELETE(MIV.ALLOC.AMT,1,REF.NO,0)
RETURN
*
*-- GET INVOICE NUMBER
*
1000* 
ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
FND=1
MATREAD OR.REC FROM OPEN.RECV, CONO:ECD.RET.VALUE:"MI" ELSE FND=0
IF FND THEN
  ERRMSG="Duplicate Invoice Number"
  GOSUB 91000
  GOTO 1000
END
FND=1
READ REC FROM MANUAL.INVOICE, CONO:ECD.RET.VALUE:"MI" ELSE FND=0
IF FND THEN
  ERRMSG="Duplicate Invoice Number"
  GOSUB 91000
  GOTO 1000
END
VOID = 1
READ REC FROM VOID.INVOICES, CONO:ECD.RET.VALUE:"MI" ELSE VOID = 0
IF VOID THEN
  ERRMSG = 'Duplicate Invoice Number, exists on the Voided Invoices File.'
  GOSUB 91000
  GOTO 1000
END
INVOICE.NO=ECD.RET.VALUE
RETURN
*
*-- GET CUSTOMER ID
*
1100* 
SCV.REC(3)<ECD.SCRN.NO>=MIV.CUST.NO
ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IF ECD.RET.VALUE="" THEN
  ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE="END" THEN GOTO 1100
  IF ECD.RET.VALUE="" THEN GOTO 1100
  GXR.NAME = "CUSTOMER"                                                
  GXR.XREF = CUSTOMER.XREF                                             
  GXR.FILE = CUSTOMER                                                  
  GXR.SRCH.ID = ECD.RET.VALUE                                          
  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)               
  ECD.ACTION=2;CALL SCRN.EDIT
  SCV.REC(5)<ECD.SCRN.NO>=""
  ECD.ACTION=3;CALL SCRN.EDIT
  IF GXR.ID="" THEN GOTO 1100
  ECD.RET.VALUE=GXR.ID
END
MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
  ERRMSG="Invalid Customer ID"
  GOSUB 91000
  GOTO 1100
END
MIV.CUST.NO=ECD.RET.VALUE
ECD.NUM = 3;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.CUST.NO
ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME
ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1
ECD.NUM = 9;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR2
ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3
SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT CTY.REC = ''
SHIP.TO.CNTY = CTY.DESC
ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  ":CUST.ZIP:"  ":SHIP.TO.CNTY
ECD.ACTION = 3;CALL SCRN.EDIT
ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME
ECD.ACTION = 4;CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1199
MIV.CUST.NAME = ECD.RET.VALUE
ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1
ECD.ACTION = 4;CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1199
MIV.ADDR1 = ECD.RET.VALUE
ECD.NUM = 9;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR2
ECD.ACTION = 4;CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1199
MIV.ADDR2 = ECD.RET.VALUE
ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3
ECD.ACTION = 4;CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1199
MIV.ADDR3=ECD.RET.VALUE
ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  ":CUST.ZIP:"  ":SHIP.TO.CNTY
ECD.ACTION = 4;CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1199
MIV.ADDR4 = ECD.RET.VALUE
MIV.ATTENTION=CUST.ATTENTION
MIV.TERMS = CUST.TERMS     ; * T25764
1199* 
RETURN
*
*-- GET ATTENTION
*
1200* 
SCV.REC(29)<ECD.SCRN.NO>=MIV.ATTENTION
ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
MIV.ATTENTION=ECD.RET.VALUE
RETURN
*
*-- GET SHIP TO ATTENTION
*
1250* 
SCV.REC(36)<ECD.SCRN.NO>=MIV.SHIPTO.ATTN
ECD.NUM=36;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
MIV.SHIPTO.ATTN=ECD.RET.VALUE
RETURN
*T23932 ^
*
*-- GET SALESMAN
*
1300* 
SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN
ECD.DEFAULT=CUST.SALESMAN
ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE                                                   
  CASE ECD.RET.VALUE = "END"                                 
    RETURN                                                   
  CASE ECD.RET.VALUE = "???"                                 
    GXR.NAME = "SALESMAN2"                                   
    GXR.SORT.FILE = "SALESMAN"; GXR.FILE = SALESMAN          
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)   
    ECD.ACTION = 2; CALL SCRN.EDIT                           
    SCV.REC(ECD.NUM)<ECD.SCRN.NO>=""                         
    ECD.ACTION=3;CALL SCRN.EDIT                              
    IF GXR.ID = "" THEN GOTO 1300                            
    ECD.RET.VALUE = GXR.ID                                   
END CASE                                                     
MATREAD SALESMAN.REC FROM SALESMAN, CONO:ECD.RET.VALUE ELSE
  ERRMSG="Invalid Salesman ID"
  GOSUB 91000
  GOTO 1300
END
MIV.SLSMAN=ECD.RET.VALUE
SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN        
SCV.REC(13)<ECD.SCRN.NO>=SALS.NAME
ECD.ACTION=3;CALL SCRN.EDIT               
RETURN
*
*-- GET EMAIL FLAG
*
1350 
ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE#'END' THEN 
  MIV.PRT.FLG<1>='Y' ; MIV.PRT.FLG<1,2>=ECD.RET.VALUE
END
RETURN
*
*-- GET CUSTOMER P/O NUMBER
*
1400* 
ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN  RETURN
MIV.PO=ECD.RET.VALUE
RETURN
*
*-- GET JOB NUMBER
*
1450* 
ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
MIV.JOB.NO=ECD.RET.VALUE
RETURN
*
*-- GET INVOICE DATE
*
1500* 
* ECD.MINV=DATE()-365
ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
MIV.DATE=ECD.RET.VALUE
IF MIV.TERMS # "" THEN
  MATREAD TERMS.REC FROM TERMS, CONO : MIV.TERMS THEN
    MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS
    ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DUE.DATE
    ECD.ACTION = 5 ; CALL SCRN.EDIT
  END
END
RETURN
*
*-- GET DIVISION
*
1600* 
ECD.NUM=26;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN GOTO 1799
IF ECD.RET.VALUE="" THEN
  READ ALL.DIV FROM CONTROL, CONO:"DIVISIONS" ELSE ALL.DIV="00"
  LINES=COUNT(ALL.DIV<1>,VM) + (ALL.DIV<1> # "")
  IF LINES < 1 THEN GOTO 1600
  SNO=""
  DESC=""
  FOR LN=1 TO LINES
    FND=1
    MATREAD DIV.REC FROM DIVISION, CONO:ALL.DIV<1,LN> ELSE FND=0
    IF FND THEN
      SNO<-1>=ALL.DIV<1,LN>
      DESC<-1>=DIV.DESC
    END
  NEXT LN
  LINES=COUNT(SNO,AM) + (SNO # "")
  IF LINES < 1 THEN GOTO 1600
  LN=1
  OLD.START=0
  GOSUB 21000
  GOSUB 20000
  IF ECD.RET.VALUE="END" OR ECD.RET.VALUE="N" THEN GOTO 1600
  ECD.RET.VALUE=SNO<ECD.RET.VALUE>
  ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE
  ECD.ACTION=5;CALL SCRN.EDIT
END
IF ECD.RET.VALUE="00" THEN
  DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(LOGNAME); ERRMSG = ''; *T27646
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    GOSUB 91000; GOTO 1600
  END
  MIV.DIV="00"
  ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=MIV.DIV
  ECD.ACTION=5;CALL SCRN.EDIT
  GOTO 1700
END
MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
  ERRMSG="Division ":ECD.RET.VALUE:" is not on file";GOSUB 91000;GOTO 1600
END
DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(LOGNAME); ERRMSG = ''; *T27646
CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
IF ERRMSG # '' THEN
  GOSUB 91000; GOTO 1600
END
MIV.DIV=ECD.RET.VALUE
*
*-- GET DEPARTMENT
*
1700* 
IF MIV.DIV="00" THEN
  MIV.DEPT<1,1>="00"
  ECD.NUM=27;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=MIV.DEPT<1,1>
  ECD.ACTION=5;CALL SCRN.EDIT
  GOTO 1799
END
ECD.NUM=27;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN GOTO 1799
IF ECD.RET.VALUE="" THEN
  LINES=COUNT(DIV.DEPT,VM) + (DIV.DEPT # "")
  IF LINES < 1 THEN GOTO 1700
  SNO=""
  DESC=""
  FOR LN=1 TO LINES
    IF LEN(DIV.DEPT<1,LN>)=2 THEN
      FND=1
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:DIV.DEPT<1,LN> ELSE FND=0
      IF FND THEN
        SNO<-1>=DIV.DEPT<1,LN>
        DESC<-1>=DEPT.DESC
      END
    END
  NEXT LN
  LINES=COUNT(SNO,AM) + (SNO # "")
  IF LINES < 1 THEN GOTO 1700
  LN=1
  OLD.START=0
  GOSUB 21000
  GOSUB 20000
  IF ECD.RET.VALUE="END" OR ECD.RET.VALUE="N" THEN GOTO 1700
  ECD.RET.VALUE=SNO<ECD.RET.VALUE>
  ECD.NUM=27;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE
  ECD.ACTION=5;CALL SCRN.EDIT
END
IF ECD.RET.VALUE="00" THEN
  MIV.DEPT<1,1>="00"
  ECD.NUM=27;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=MIV.DEPT<1,1>
  ECD.ACTION=5;CALL SCRN.EDIT
  GOTO 1799
END
LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE
  ERRMSG="Department ":ECD.RET.VALUE:" is not valid for this division"
  GOSUB 91000;GOTO 1700
END
MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
  ERRMSG="Department ":ECD.RET.VALUE:" is not on file";GOSUB 91000;GOTO 1700
END
MIV.DEPT<1,1>=ECD.RET.VALUE
1799* 
RETURN
*
*-- GET SALES CODE
*
1800* 
ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IF ECD.RET.VALUE # "" THEN
  MATREAD SLC.REC FROM SALES.CODE, CONO : ECD.RET.VALUE ELSE
    ERRMSG="Invalid Sales Code";GOSUB 91000;GOTO 1800
  END
END
MIV.SALES.CODE=ECD.RET.VALUE
RETURN
*
*-- GET TERMS CODE
*
1900* 
ECD.DEFAULT = MIV.TERMS
ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IF ECD.RET.VALUE = "???" THEN
  GXR.CO = CONO
  GXR.NAME = "TERMS"
  GXR.FILE = TERMS
  GXR.SORT.FILE = TERMS
  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
  ECD.ACTION = 2 ; CALL SCRN.EDIT
  IF GXR.ID = "" THEN GOTO 1900
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  ECD.NUM = 40 ; SCV.REC(40)<ECD.SCRN.NO> = GXR.ID
  ECD.ACTION = 5 ; CALL SCRN.EDIT
  ECD.RET.VALUE = GXR.ID
END
IF ECD.RET.VALUE # "" THEN
  MATREAD TERMS.REC FROM TERMS, CONO : ECD.RET.VALUE ELSE
    ERRMSG="Invalid Terms Code";GOSUB 91000;GOTO 1900
  END
END
MIV.TERMS=ECD.RET.VALUE
MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS
ECD.NUM = 41;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TERMS.DESC
ECD.ACTION = 5 ; CALL SCRN.EDIT
ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DUE.DATE
ECD.ACTION = 5 ; CALL SCRN.EDIT
RETURN
*
*-- GET OPERATOR REQUEST
*
5000* 
IF CO.ALLOC.FLG = "Y" THEN
  ECD.NUM=35
END ELSE
  ECD.NUM=20
END
ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
RETURN
*
*-- GET LINE NUMBER
*
5100* 
SCV.REC(21)<ECD.SCRN.NO>=""
ECD.MINV=CURR.REF.NO;ECD.MAXV=CURR.REF.NO + LINE.COUNT - 1
IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
RETURN
*
*-- GET MULTI-LINE DATA
*
6000* 
ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
6010* 
SCV.REC(15)<ECD.SCRN.NO,REF.NO>=MIV.CHG.CODE<1,REF.NO>
ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
BEGIN CASE
  CASE ECD.RET.VALUE="SUB" OR ECD.RET.VALUE="SUBT"
    MAT INC.REC=""
    INC.DESC=SPACE(27):"SUB TOTAL"
  CASE ECD.RET.VALUE="TOT"
    MAT INC.REC=""
    INC.DESC=SPACE(31):"TOTAL"
  CASE 1
    MATREAD INC.REC FROM INVOICE.CODE, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Invalid Invoice Code"
      GOSUB 91000
      GOTO 6010
    END
    IF INC.HIDDEN="Y" AND REF.NO=1 THEN
      ERRMSG="Hidden line cannot be first line entered"
      GOSUB 91000;GOTO 6010
    END
END CASE
MIV.CHG.CODE<1,REF.NO>=ECD.RET.VALUE
MIV.CHG.CAT<1,REF.NO>=INC.CATEGORY
MIV.HIDDEN<1,REF.NO>=INC.HIDDEN
6012* 
BEGIN CASE
  CASE MIV.CHG.CAT<1,REF.NO>="TAX"
    SCV.REC(23)<ECD.SCRN.NO>="Tax Jur :"
    ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(24)<ECD.SCRN.NO>=MIV.TAX.JURS<1,REF.NO>
    SCV.REC(25)<ECD.SCRN.NO>=""
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
      GOSUB 91000
      GOTO 6012
    END
    MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
    TMP.TAX.RATE<1,REF.NO>=TAX.RATE
    TMP.TAX.CALC<1,REF.NO>=""
    SCV.REC(25)<ECD.SCRN.NO>=TAX.JUR
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
  CASE MIV.CHG.CAT<1,REF.NO>="SHP"
    SCV.REC(23)<ECD.SCRN.NO>="Ship Via :"
    ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(24)<ECD.SCRN.NO>=MIV.TAX.JURS<1,REF.NO>
    SCV.REC(25)<ECD.SCRN.NO>=""
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"
      GOSUB 91000
      GOTO 6012
    END
    MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
    TMP.TAX.RATE<1,REF.NO>=""
    TMP.TAX.CALC<1,REF.NO>=""
    SCV.REC(25)<ECD.SCRN.NO>=SHPV.DESC
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
  CASE MIV.CHG.CAT<1,REF.NO> = "DSC" OR  MIV.CHG.CAT<1,REF.NO> = "MSC"
    SCV.REC(23)<ECD.SCRN.NO> = "Sales code :"
    ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(24)<ECD.SCRN.NO> = MIV.TAX.JURS<1,REF.NO>
    SCV.REC(25)<ECD.SCRN.NO> = ""
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Sales code ":ECD.RET.VALUE:" is not on file"
      GOSUB 91000
      GOTO 6012
    END
    MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE
    MIV.TAXABLE<1,REF.NO> = ""
    TMP.TAX.RATE<1,REF.NO> = ""
    TMP.TAX.CALC<1,REF.NO> = ""
    SCV.REC(25)<ECD.SCRN.NO> = ""
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
  CASE 1
    MIV.TAX.JURS<1,REF.NO>=""
    MIV.TAXABLE<1,REF.NO> = ""
    TMP.TAX.RATE<1,REF.NO>=""
    TMP.TAX.CALC<1,REF.NO>=""
END CASE
*
*-- GET QUANTITY
*
6020* 
BEGIN CASE
  CASE INC.CATEGORY="OTH" OR INC.CATEGORY="MSC"
    ECD.NUM=16;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
  CASE 1
    ECD.RET.VALUE=""
    SCV.REC(16)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=16;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
END CASE
MIV.QUANTITY<1,REF.NO>=ECD.RET.VALUE
*
*-- GET U/M
*
6025* 
BEGIN CASE
  CASE MIV.QUANTITY<1,REF.NO> # ""
    ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
  CASE 1
    ECD.RET.VALUE=""
    SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
END CASE
IF MIV.HIDDEN<1,REF.NO> = "Y" THEN
  XDONE = 0
  FOR X = REF.NO-1 TO 1 STEP -1 UNTIL XDONE
    IF MIV.HIDDEN<1,X> # "Y" THEN
      IF MIV.UM<1,X> # ECD.RET.VALUE THEN
        ERRMSG = "UM must match the associated detail line ":X
        GOSUB 91000
        GOTO 6000
      END
      XDONE = 1
    END
  NEXT X
END ELSE
  IF MIV.HIDDEN<1,REF.NO +1> = "Y" THEN
    IF MIV.UM<1,REF.NO+1> # ECD.RET.VALUE THEN
      ERRMSG = "Please change UM for assciated hidden lines "
      GOSUB 91000
    END
  END
END
MIV.UM<1,REF.NO>=ECD.RET.VALUE
*
*-- GET DESCRIPTION
*
6030* 
IF SCV.REC(17)<ECD.SCRN.NO,REF.NO> # '' THEN INC.DESC=SCV.REC(17)<ECD.SCRN.NO,REF.NO>
SCV.REC(17)<ECD.SCRN.NO,REF.NO> = INC.DESC ; *T23324  ;*T23460
ECD.DEFAULT=INC.DESC
ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
MIV.DESC<1,REF.NO>=ECD.RET.VALUE
*
*-- GET AMOUNT
*
6040* 
IF MIV.QUANTITY<1,REF.NO>="" OR MIV.UM<1,REF.NO>="" THEN
  SCV.REC(31)<ECD.SCRN.NO,REF.NO>=""
  ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  MIV.UNIT.PRICE<1,REF.NO>=""
END
BEGIN CASE
  CASE MIV.QUANTITY<1,REF.NO> # ""
    IF MIV.UM<1,REF.NO>="" THEN
      ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
      ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
        GOTO 6010
      END
      MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
    END ELSE
      ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
        MIV.UNIT.PRICE<1,REF.NO>=ECD.RET.VALUE
        BEGIN CASE
          CASE MIV.UNIT.PRICE<1,REF.NO>=""
            ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
            ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
            IF ECD.RET.VALUE = "END" THEN GOTO 6010
            MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
          CASE MIV.UM<1,REF.NO>="M"
            FACTOR=10000
          CASE MIV.UM<1,REF.NO>="C"
            FACTOR=1000
          CASE 1
            FACTOR=10
        END CASE
        IF MIV.UNIT.PRICE<1,REF.NO> # "" THEN
          MIV.AMOUNT<1,REF.NO>=(MIV.QUANTITY<1,REF.NO>/FACTOR)*MIV.UNIT.PRICE<1,REF.NO>
          IF MIV.AMOUNT<1,REF.NO> > 0 THEN
            MIV.AMOUNT<1,REF.NO>=INT(MIV.AMOUNT<1,REF.NO>/10+0.5)
          END ELSE
            MIV.AMOUNT<1,REF.NO>=INT(MIV.AMOUNT<1,REF.NO>/10-0.5)
          END
          SCV.REC(18)<ECD.SCRN.NO,REF.NO>=MIV.AMOUNT<1,REF.NO>
          ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
        END
      END
    END
  CASE INC.CATEGORY="TAX"
    TAX.REF=REF.NO
    GOSUB 6400
    ECD.O.R="O";ECD.DEFAULT=TAMT
    ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 6010
    IF ECD.RET.VALUE # "END" THEN
      IF ECD.RET.VALUE="" THEN
        ECD.RET.VALUE=TAMT
        SCV.REC(18)<ECD.SCRN.NO,REF.NO>=TAMT
        ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      END
      IF ECD.RET.VALUE=TAMT THEN
        TMP.TAX.CALC<1,REF.NO>="C"
        MIV.TAXABLE<1,REF.NO>=AMT.TAX
      END ELSE
        TMP.TAX.CALC<1,REF.NO>="E"
        BEGIN CASE
          CASE TMP.TAX.RATE<1,REF.NO> + 0 = 0
          CASE ECD.RET.VALUE < 0
            AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)-.5)
          CASE 1
            AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)+.5)
        END CASE
6045* 
        DEFAULT = OCONV(AMT.TAX, "MD2")
        O.R = "O"
        X = 0
        Y = 22
        TYP = 14
        SCALER = 2
        IF ECD.RET.VALUE < 0 THEN
          MINV = "-99999999.99"
          MAXV = 0
        END ELSE
          MINV = 0
          MAXV = "99999999.99"
        END
        MAXL = 12
        PMSG ="Enter Taxable amount : "
        CALL EDIT.SUB
        P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X, P_Y, P_VALUE, P_OPT)
        IF VALUE = "END" THEN GOTO 6040
        IF VALUE = "" THEN GOTO 6045
        MIV.TAXABLE<1,REF.NO> = VALUE
      END
      MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
    END
  CASE INC.CATEGORY="CMT"
    ECD.RET.VALUE=""
    SCV.REC(18)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
  CASE MIV.CHG.CODE<1,REF.NO>="SUB"
    GOSUB 6200
    ECD.RET.VALUE=AMT.SUB
    SCV.REC(18)<ECD.SCRN.NO,REF.NO>=AMT.SUB
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
  CASE MIV.CHG.CODE<1,REF.NO>="SUBT"
    GOSUB 6200
    ECD.RET.VALUE=MIV.AMOUNT<1,REF.NO>
    SCV.REC(18)<ECD.SCRN.NO,REF.NO>=MIV.AMOUNT<1,REF.NO>
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
  CASE MIV.CHG.CODE<1,REF.NO>="TOT"
    GOSUB 6200
    ECD.RET.VALUE=AMT.TOT
    SCV.REC(18)<ECD.SCRN.NO,REF.NO>=AMT.TOT
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
    MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
  CASE 1
    ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
    ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 6010
    MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
END CASE
IF CO.ALLOC.FLG = "Y" THEN
  IF MIV.CHG.CAT<1,REF.NO> = "MSC" OR MIV.CHG.CAT<1,REF.NO> = "OTH" THEN
    GOSUB 7000
  END
END
6099* 
IF SCV.REC(23)<ECD.SCRN.NO> # "" THEN
  SCV.REC(23)<ECD.SCRN.NO>=""
  SCV.REC(24)<ECD.SCRN.NO>=""
  SCV.REC(25)<ECD.SCRN.NO>=""
  ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
END
RETURN
*
*-- CALCULATE AND DISPLAY TOTAL
*
6200* 
AMT.SUB=0
AMT.TOT=0
AMT.SUBT=0
FOR REF=1 TO REF.CNT + 1
  CODE=MIV.CHG.CODE<1,REF>
  CATG=MIV.CHG.CAT<1,REF>
  AMT=MIV.AMOUNT<1,REF>
  BEGIN CASE
    CASE CODE="SUB"
      IF AMT.SUB # AMT THEN
        MIV.AMOUNT<1,REF>=AMT.SUB
        SCV.REC(18)<ECD.SCRN.NO,REF>=AMT.SUB
        IF AMT # "" THEN CURR.REF.NO=""
      END
    CASE CODE="SUBT"
      IF AMT.SUBT # AMT THEN
        MIV.AMOUNT<1,REF>=AMT.SUBT
        SCV.REC(18)<ECD.SCRN.NO,REF>=AMT.SUBT
        IF AMT # "" THEN CURR.REF.NO=""
      END
      AMT.SUBT=0
    CASE CODE="TOT"
      IF AMT.TOT # AMT THEN
        MIV.AMOUNT<1,REF>=AMT.TOT
        SCV.REC(18)<ECD.SCRN.NO,REF>=AMT.TOT
        IF AMT # "" THEN CURR.REF.NO=""
      END
    CASE CATG="TAX"
      TAX.REF=REF
      GOSUB 6400
      IF TAMT # AMT THEN
        IF TMP.TAX.CALC<1,REF>="E" THEN
          BEGIN CASE
            CASE MODE=""
            CASE MODE="A"
            CASE MODE="C" AND REF.NO >= REF
            CASE MODE="D" AND REF.NO > REF
            CASE MODE="I" AND REF.NO > REF
            CASE 1
              ERRMSG="Tax entry on line ":REF:" may be affected"
              GOSUB 91000
          END CASE
        END ELSE
          AMT=TAMT
          MIV.AMOUNT<1,REF>=AMT
          SCV.REC(18)<ECD.SCRN.NO,REF>=AMT
          IF AMT # "" THEN CURR.REF.NO=""
        END
      END
      AMT.SUB=AMT.SUB + AMT
      AMT.TOT=AMT.TOT + AMT
      AMT.SUBT=AMT.SUBT + AMT
    CASE 1
      AMT.SUB=AMT.SUB + AMT
      AMT.TOT=AMT.TOT + AMT
      AMT.SUBT=AMT.SUBT + AMT
  END CASE
NEXT REF
MIV.INV.AMT=AMT.TOT
SCV.REC(19)<ECD.SCRN.NO>=MIV.INV.AMT
ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
RETURN
*
*-- CALCULATE SALES TAX
*
6400* 
AMT.TAX=0
TDONE=0
FOR TREF=TAX.REF-1 TO 1 STEP -1 UNTIL TDONE
  IF MIV.CHG.CAT<1,TREF>="TAX" THEN
    IF AMT.TAX # 0 THEN TDONE=1
  END ELSE
    IF MIV.CHG.CODE<1,TREF> # "SUBT" THEN
      AMT.TAX=AMT.TAX + MIV.AMOUNT<1,TREF>
      IF MIV.CHG.CODE<1,TREF>="SUB" THEN
        TDONE=1
      END
    END
  END
NEXT TREF
IF AMT.TAX < 0 THEN
  TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100-0.5)
END ELSE
  TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)
END
RETURN
7000* INV ALLOC
* 17927
IF CO.ALLOC.FLG = "Y" THEN
  BAL.FLG = ""
  IF MIV.SALES.CODE = "" THEN
    MAT SLC.REC = ""
  END ELSE
    MATREAD SLC.REC FROM SALES.CODE, CONO:MIV.SALES.CODE ELSE
      MAT SLC.REC = ""
    END
  END
  BEGIN CASE
    CASE MIV.CHG.CAT<1,REF.NO> = "MSC"
      MATREAD SLC.REC FROM SALES.CODE, CONO:MIV.TAX.JURS<1,REF.NO> ELSE
        MAT SLC.REC = ""
      END
      BEGIN CASE
        CASE SLC.GL.ACCT # ""
          MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
        CASE 1
          MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
      END CASE
    CASE 1
      BEGIN CASE
        CASE SLC.GL.ACCT # ""
          MATREAD COA.REC FROM COA, CONO:SLC.GL.ACCT ELSE COA.LEVEL = 0
        CASE 1
          MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
      END CASE
  END CASE
  IVC.NO = INVOICE.NO:"MI"
  IF COA.LEVEL < 1 THEN RETURN
  CALL INV.ALLOC.MAINT(CONO, BAL.FLG, IVC.NO, MIV.JOB.NO, MENU, PROG.FLAG, REF.NO, COA.LEVEL)
  ECD.SCRN.NO = 1
  ECD.ACTION = 2;CALL SCRN.EDIT
  GOSUB 9000
  IF BAL.FLG = "P" OR BAL.FLG = "N" THEN
    SCV.REC(34)<ECD.SCRN.NO,REF.NO> = "*"
  END
  IF BAL.FLG = "Y" THEN
    SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""
  END
  LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE BAL.PTR = 0
  ECD.ACTION = 3;CALL SCRN.EDIT
*T27524  CURR.REF.NO = REF.NO - 1
*T27524  GOSUB 10000
START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
GOSUB 10001
  IF BAL.FLG = "P" THEN
    ERRMSG = "Revenue Distribution Could be Wrong check Line"
    GOSUB 91000
    ACTION = "C"
    GOTO 500
  END
END
RETURN
*
*-- SET SCREEN VALUES
*
9000* 
MATREAD CUST.REC FROM CUSTOMER, CONO:MIV.CUST.NO ELSE
  MAT CUST.REC=""
  CUST.NAME="????????????????????"
END
MATREAD SALESMAN.REC FROM SALESMAN, CONO:MIV.SLSMAN ELSE
  MAT SALESMAN.REC=""
  SALS.NAME="????????????????????"
END
MATREAD TERMS.REC FROM TERMS, CONO:MIV.TERMS ELSE
  MAT TERMS.REC=""
  TERMS.DESC="????????????????????"
END
IF MIV.DIV # "00" THEN
  MATREAD DIV.REC FROM DIVISION, CONO : MIV.DIV ELSE MAT DIV.REC=""
END ELSE
  MAT DIV.REC=""
END
SCV.REC(3)<ECD.SCRN.NO>=MIV.CUST.NO
SCV.REC(5)<ECD.SCRN.NO>=MIV.CUST.NAME
SCV.REC(7)<ECD.SCRN.NO>=MIV.ADDR1
SCV.REC(9)<ECD.SCRN.NO>=MIV.ADDR2
SCV.REC(10)<ECD.SCRN.NO>=MIV.ADDR3
SCV.REC(11)<ECD.SCRN.NO>=MIV.ADDR4
SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN
SCV.REC(13)<ECD.SCRN.NO>=SALS.NAME
SCV.REC(6)<ECD.SCRN.NO>=MIV.PO
SCV.REC(4)<ECD.SCRN.NO>=MIV.JOB.NO
SCV.REC(8)<ECD.SCRN.NO>=MIV.DATE
SCV.REC(26)<ECD.SCRN.NO>=MIV.DIV
SCV.REC(27)<ECD.SCRN.NO>=MIV.DEPT<1,1>
SCV.REC(29)<ECD.SCRN.NO>=MIV.ATTENTION
SCV.REC(36)<ECD.SCRN.NO>=MIV.SHIPTO.ATTN
SCV.REC(32)<ECD.SCRN.NO>=MIV.SALES.CODE
SCV.REC(33)<ECD.SCRN.NO>=MIV.SHP.DATE
SCV.REC(40)<ECD.SCRN.NO>=MIV.TERMS
SCV.REC(41)<ECD.SCRN.NO>=TERMS.DESC
MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS
SCV.REC(42)<ECD.SCRN.NO>=MIV.DUE.DATE
SCV.REC(43)<ECD.SCRN.NO>=MIV.PRT.FLG<1,2>
REF.CNT=COUNT(MIV.CHG.CODE,VM) + (MIV.CHG.CODE # "")
FOR REF=1 TO REF.CNT
  SCV.REC(15)<ECD.SCRN.NO,REF>=MIV.CHG.CODE<1,REF>
  SCV.REC(16)<ECD.SCRN.NO,REF>=MIV.QUANTITY<1,REF>
  SCV.REC(17)<ECD.SCRN.NO,REF>=MIV.DESC<1,REF>
  SCV.REC(18)<ECD.SCRN.NO,REF>=MIV.AMOUNT<1,REF>
  SCV.REC(30)<ECD.SCRN.NO,REF>=MIV.UM<1,REF>
  SCV.REC(31)<ECD.SCRN.NO,REF>=MIV.UNIT.PRICE<1,REF>
  IF MIV.CHG.CAT<1,REF>="TAX" THEN
    MATREAD TAX.REC FROM TAX, CONO:MIV.TAX.JURS<1,REF> ELSE
      MAT TAX.REC=""
      ERRMSG="Invalid Tax Jurisdiction - ":MIV.TAX.JURS
      GOSUB 91000
    END
    TMP.TAX.RATE<1,REF>=TAX.RATE
    TAX.REF=REF
    GOSUB 6400
    IF MIV.AMOUNT<1,REF>=TAMT THEN
      TMP.TAX.CALC<1,REF>="C"
    END ELSE
      TMP.TAX.CALC<1,REF>="E"
    END
  END
NEXT REF
SCV.REC(19)<ECD.SCRN.NO>=MIV.INV.AMT
RETURN
*
*-- DISPLAY MULTI-LINE FIELDS
*
10000* 
START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
IF START.REF.NO=CURR.REF.NO THEN RETURN
10001*
CURR.REF.NO=START.REF.NO
ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=32;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=16;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=30;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=17;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=31;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=18;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=34;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
RETURN
*
*-- GET XREF SELECTION
*
20000* 
ECD.NUM=28
SCV.REC(ECD.NUM)<ECD.SCRN.NO>=""
ECD.ACTION=4
CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE="END" OR ECD.RET.VALUE="N"
    GOTO 20999
  CASE NUM(ECD.RET.VALUE)
    IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN
      ERRMSG="** OUT OF RANGE **"
      GOSUB 91000
    END ELSE
      GOTO 20999
    END
  CASE ECD.RET.VALUE="S"
    LN=LN + PAGE.SIZE
    IF LN > LINES THEN LN=1
    GOSUB 21000
  CASE ECD.RET.VALUE = 'SR'
    LN -= PAGE.SIZE
    IF LN < 1 THEN LN = 1
    GOSUB 21000
  CASE ECD.RET.VALUE = 'ST'
    LN = 1
    GOSUB 21000
  CASE ECD.RET.VALUE = 'SB'
    LN = LINES
    GOSUB 21000
END CASE
GOTO 20000
20999* 
CURR.REF.NO=""
GOSUB 10000
RETURN
*
*-- SCROLL XREF
*
21000* 
ST.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
IF ST.LINE=OLD.START THEN RETURN
OLD.START=ST.LINE
LST.LINE=ST.LINE + PAGE.SIZE - 1
IF LST.LINE > LINES THEN LST.LINE=LINES
CNT=1
FOR NN=ST.LINE TO LST.LINE
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(NN-1,PAGE.SIZE)
  P_X  = 0;P_Y = SLN;P_VALUE = NN "R#2";P_OPT = "CL"
  P_X  := AM:3;P_Y := AM:SLN;P_VALUE := AM:SNO<NN> "L#2"
  P_X  := AM:21;P_Y := AM:SLN;P_VALUE := AM:DESC<NN> "L#30"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CNT=CNT + 1
NEXT NN
FOR NN=CNT TO PAGE.SIZE
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(NN-1,PAGE.SIZE)
  P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT NN
RETURN
*
*-- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*-- END OF PROGRAM
*
99999* 
STOP
END
