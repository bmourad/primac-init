      SUBROUTINE TCC.SUB(PORT.NO)
*COPY>CPYLIB>COM0
************************************************************************
* ADDED 'SBLIENT' CONTROL ITEM.  IF THIS IS SET TO 'Y' SYSTEM WILL
* AUTOMATICALLY PROMPT FOR 'STD, WINTEGRATE OR TERMULATOR' IRRESPECTIVE
* OF ANY EXISTING TCC RECORD.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T11111 duane 02/11/1998 * PROBLEM WITH DYNAMICALLY ASSIGNED IP
*                          ADDRESSES
*T21177 diane 03/05/1998 * FIX GUI FOR SCREEN INPUT
*T21177 diane 05/07/1998 * WRITE TCC RECORD TO CORRECT PROBLEMS WITH
*                          NETWORK ADDRESSING
*
*T21177 diane 05/11/1998 * FIX WRITE PC.PORT.TYPE AND PC.PORT.TSEL
*                          type" (GUI,ASCII,BOTH)
*T24899 edvard 03/02/2000 * ASSIGN SCREEN TYPE ACCORDING TO TYPE SET UP
*                           IN USER VALIDATION MAINTENANCE. THIS TYPE IS
*                           THEN VALID FOR EVERY COMPANY. SCREEN TYPE
*                           COULD NOT BE STORED IN SECURITY RECORD
*                           BECAUSE OF THE SEQUENCE OF THE PROMPTS 
*                           IN THE LOGIN PROCESS.
*                           FIRST COMES SCREEN TYPE AND THEN
*                           COMPANY NUMBER.
*T24999 edvard 04/24/2000 *WRITE A TCC.PORT.REC SO XREF AND MESSAGE BOXES
*                         WOULD DISPLAY IN CORRRECT MODE TOO.
*T25024 diane 05/03/2000 * Update for new version 4.5.4
*C36488 diane 06/02/2000 * Install T24899 and T24999. Allow for no
*                          USER.MODE
*ENDDOC
************************************************************************
*COPY>CPYLIB>TCC
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>PORT.MENU
*COPY>PMC.CPYLIB>SECURITY
*COPY>CPYLIB>PORT.CONTROL
**COPY>CPYLIB>CHAR
*COPY>CPYLIB>ROC.H
*COPY>CPYLIB>SPECIAL.H
      DIM SAVE.TCC.PORT.REC(10)
      MAT SAVE.TCC.PORT.REC = ""
*
      PORT.NO = "TTY"
      CALL SYSVARS.SUB(PORT.NO)
      LOGIN_NAME = @LOGNAME
      TU_VERNO_ID = "T_":LOGIN_NAME
*T25024      TU_VERNO_OLD = "_2428"
      TU_VERNO_OLD = ""      ;*T25024
      TU_VERNO_CUR = ""
*
      IF NOT(FILEINFO(TCC,0)) THEN
         OPEN "","TCC" TO TCC ELSE
            MAT TCC.PORT.REC = "STD"
            TERMTYPES = ""
            GOTO 110
         END
      END
      LOGIN_PORT = 1
      LOGGED_IN = 0
      MATREAD TCC.PORT.REC FROM TCC, PORT.NO ELSE
         MATREAD TCC.PORT.REC FROM TCC, LOGIN_NAME ELSE
            MAT TCC.PORT.REC = "STD"
            TERMTYPES = ""
*T24899            GOTO 110
*GOTO moved into the else part of the read below.
         END
         LOGIN_PORT = 0
      END
**T24899 v
      OPEN "","USER.MODE" TO USER.MODE ELSE
         UDTEXECUTE "CREATE.FILE USER.MODE 13" CAPTURING DUMMY
         OPEN "","USER.MODE" TO USER.MODE ELSE
            PRINT "Unable to open USER.MODE file " ; STOP
         END
      END
      USER.LOGON = UPCASE(@LOGNAME)
      SCREEN.TYPE = ""
      READV SCREEN.TYPE FROM USER.MODE,USER.LOGON,1 THEN
         BEGIN CASE 
            CASE SCREEN.TYPE = "G" ;*  GUI 
               CRT.PORT.TYPE = "BLD"; PC.PORT.TSEL = "termulator" 
               PC.PORT.TYPE = "termulator"
            CASE SCREEN.TYPE = "A" ; * ASCII 
               CRT.PORT.TYPE = "STD" ; PC.PORT.TSEL = "STD" 
               PC.PORT.TYPE = "STD"
            CASE  SCREEN.TYPE = "B" 
               CRT.PORT.TYPE = "BLD"; PC.PORT.TSEL = "STD"
               PC.PORT.TYPE = "AUTO"
*CSF 36488 v
            CASE 1
               CRT.PORT.TYPE = "BLD"; PC.PORT.TSEL = "STD"
               PC.PORT.TYPE = "AUTO"
               SCREEN.TYPE = "B"
*CSF 36488 ^
         END CASE
         MATWRITE TCC.PORT.REC ON TCC,PORT.NO
      END ELSE
*CSF 36488 v
         CRT.PORT.TYPE = "BLD"; PC.PORT.TSEL = "STD"
         PC.PORT.TYPE = "AUTO"
         MATWRITE TCC.PORT.REC ON TCC,PORT.NO
*         GOTO 110
*CSF 36488 ^
      END
*T24899 ^
      READ SBCLIENT.CONTROL FROM TCC, "SBCLIENT" THEN
         PMCVERSION = SBCLIENT.CONTROL<2>
         ALLVERSIONS = SBCLIENT.CONTROL<3>
         OLDVERSIONS = SBCLIENT.CONTROL<4>      ;*T25024
         SBCLIENT.CONTROL = SBCLIENT.CONTROL<1>
         IF SBCLIENT.CONTROL = "Y" THEN
            READU TU_VERNO_CUR FROM TCC, TU_VERNO_ID THEN
               DELETE TCC, TU_VERNO_ID
            END ELSE
               RELEASE TCC, TU_VERNO_ID
            END
         END
      END ELSE
         SBCLIENT.CONTROL = "N"
         PMCVERSION = ""
         ALLVERSIONS = ""
      END
      READ TERMTYPES FROM TCC, "TERMTYPES" THEN
         TERMTYPE = SYSTEM(7)
         LOCATE TERMTYPE IN TERMTYPES<1>,1 SETTING FND THEN
            IF GRAPH.PORT.TYPE = "AUTO" THEN
               GRAPH.PORT.TYPE = TERMTYPES<2,FND>
            END
            IF VIDEO.PORT.TYPE = "AUTO" THEN
               VIDEO.PORT.TYPE = TERMTYPES<3,FND>
            END
         END
      END ELSE
         TERMTYPES = ""
      END
      IF NOT(FILEINFO(SECURITY,0)) THEN
         OPEN "","SECURITY" TO SECURITY ELSE
            PC.PORT.TYPE = "STD"
            GOTO 110
         END
      END
      MATREAD UPM.REC FROM SECURITY, "U.":PORT.NO THEN
         LOGGED_IN = 1
      END
      IF PC.PORT.TYPE = "AUTO" THEN
         IF LOGGED_IN THEN
            IF UPM.PC.TYPE # "" THEN
               PC.PORT.TYPE = UPM.PC.TYPE
               IF PC.PORT.TYPE = "termulator" THEN
                  GOTO 100
               END ELSE
                  GOTO 110
               END
            END
         END
      END ELSE
         GOTO 100
      END
      IF LOGIN_PORT THEN
         MAT SAVE.TCC.PORT.REC = MAT TCC.PORT.REC
         MATREAD TCC.PORT.REC FROM TCC, LOGIN_NAME THEN
*T24889 v
            BEGIN CASE 
               CASE SCREEN.TYPE = "G" ;*  GUI 
                  CRT.PORT.TYPE = "BLD"; PC.PORT.TSEL = "termulator" 
                  PC.PORT.TYPE = "termulator"
               CASE SCREEN.TYPE = "A" ; * ASCII 
                  CRT.PORT.TYPE = "STD" ; PC.PORT.TSEL = "STD" 
                  PC.PORT.TYPE = "STD"
               CASE  SCREEN.TYPE = "B" 
                  CRT.PORT.TYPE = "AUTO"; PC.PORT.TSEL = "STD"
                  PC.PORT.TYPE = "AUTO"
            END CASE
*T24899 ^
            M.PC.PORT.TYPE = PC.PORT.TYPE
         END ELSE
            M.PC.PORT.TYPE = "AUTO"
         END
         MAT TCC.PORT.REC = MAT SAVE.TCC.PORT.REC
      END ELSE
         M.PC.PORT.TYPE = "AUTO"
      END
      LOCATE "termulator" IN TERMTYPES<4>,1 SETTING SBLOC THEN
         IF SBCLIENT.CONTROL # "Y" THEN
            TERMTYPES = DELETE(TERMTYPES,4,SBLOC,0)
         END
      END ELSE
         IF SBCLIENT.CONTROL = "Y" THEN
            TERMTYPES = INSERT(TERMTYPES,4,-1,0,"termulator")
         END
      END
      TTYPE_CNT = DCOUNT(TERMTYPES<4>,@VM)
      BEGIN CASE
         CASE M.PC.PORT.TYPE # "AUTO"
            PC.PORT.TSEL = M.PC.PORT.TYPE
         CASE TTYPE_CNT < 1
            PC.PORT.TSEL = "STD"
         CASE TTYPE_CNT = 1
            PC.PORT.TSEL = TERMTYPES<4>
         CASE 1
            IF NOT(FILEINFO(XREF.DATA,0)) THEN
               OPEN "","XREF.DATA" TO XREF.DATA ELSE
                  PC.PORT.TYPE = "STD"
                  GOTO 110
               END
            END
            IF NOT(FILEINFO(PREFIX,0)) THEN
               OPEN "","PREFIX" TO PREFIX ELSE
                  PC.PORT.TYPE = "STD"
                  GOTO 110
               END
            END
            GOSUB 2100; GOSUB 2010
            MAT GEN.XREF.REC = ""
            GXR.NAME = "PC.PORT"
            GXR.IDLIST = TERMTYPES<4>
            LOCATE "termulator" IN GXR.IDLIST<1>,1 SETTING SBLOC THEN
               GXR.IDLIST<1,SBLOC> = "SBClient"
            END
            MAT SAVE.TCC.PORT.REC = MAT TCC.PORT.REC
            GRAPH.PORT.TYPE = "STD"
            VIDEO.PORT.TYPE = "STD"
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            MAT TCC.PORT.REC = MAT SAVE.TCC.PORT.REC
            BEGIN CASE
               CASE GXR.ID = ""
                  PC.PORT.TSEL = "STD"     ;*T21177 5-11-98
               CASE GXR.ID = "SBClient"
                  PC.PORT.TSEL = "termulator"
               CASE 1
                  PC.PORT.TSEL = GXR.ID     ;*T21177 5-11-98
            END CASE
      END CASE
      MATWRITE TCC.PORT.REC ON TCC, PORT.NO    ;*T21177 5-7-98
      PC.PORT.TYPE = PC.PORT.TSEL     ;*T21177 5-11-98
*
100*
      IF PC.PORT.TYPE = "termulator" THEN
         BEGIN CASE
            CASE LOGGED_IN
               TU_VERNO = TU_VERNO_CUR
            CASE ALLVERSIONS<1,2> = ""
               TU_VERNO = "";* Newest version
            CASE 1
               TU_VERNO = TU_VERNO_OLD
         END CASE
         SBVERSION = ""; STATUS = 0
         TU_FUNC = "TU.GET.VERSION":TU_VERNO
         CALL @TU_FUNC(SBVERSION,STATUS)
         CLIENTSTRING = SBVERSION<1,1,1>
         CLIENTCRT = FIELD(CLIENTSTRING,"/",2)
         CLIENTVERSION = FIELD(FIELD(FIELD(CLIENTSTRING,"/",1),"-",3),".",1,3)
         HOSTVERSION = FIELD(SBVERSION<2,1,1>,".",1,3)
*BRM         CLIENTVERSION = FIELD(FIELD(FIELD(CLIENTSTRING,"/",1),"-",3),".",1,2)
*BRM         HOSTVERSION = FIELD(SBVERSION<2,1,1>,".",1,2)
         BEGIN CASE
            CASE CLIENTVERSION = HOSTVERSION
               WRITE TU_VERNO ON TCC, TU_VERNO_ID
            CASE PMCVERSION = "" OR ALLVERSIONS = ""
               IF TU_VERNO = "" THEN
                  TU_VERNO = TU_VERNO_OLD
               END ELSE
                  TU_VERNO = "";* (newest version)
               END
               GOSUB 500
            CASE CLIENTVERSION = PMCVERSION
*---- Switch to the standard SBCLIENT version
               IF TU_VERNO = "" THEN
                  PC.PORT.TYPE = "STD"
               END ELSE
                  TU_VERNO = ""
                  GOSUB 500
               END
            CASE 1
               LOCATE CLIENTVERSION IN ALLVERSIONS<1>,1 SETTING FND THEN
*---- Switch to the required SBCLIENT version
                  IF TU_VERNO = "" THEN
*T24025                     TU_VERNO = TU_VERNO_OLD
                     TU_VERNO = OLDVERSIONS<1,FND>      ;*T25024
                  END ELSE
                     TU_VERNO = "";* (newest version)
                  END
                  GOSUB 500
               END ELSE
                  PC.PORT.TYPE = "STD"
               END
         END CASE
      END
*
110*
*     STX = CHAR(2)
*     ETX = CHAR(3)
*     ESC = CHAR(27)
      ARROWS.MSG = " ARROWS "
*
      MAT HBOX.REC = ""
      HBOX.ROW = 23
*
      BEGIN CASE
         CASE GRAPH.PORT.TYPE = "PRISM9"
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1200
         CASE GRAPH.PORT.TYPE = "ADDS"
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1300
         CASE GRAPH.PORT.TYPE = "PC"
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1400
         CASE GRAPH.PORT.TYPE = "RL"
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1500
         CASE GRAPH.PORT.TYPE = "VIA"
            GRAPH.SUB = "BOX.VIA"
            GOSUB 1000; GOSUB 1600
         CASE GRAPH.PORT.TYPE = "ANSI"
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1700
         CASE 1
            BEGIN CASE
               CASE GRAPH.PORT.TYPE = "PRISM8"
               CASE 1
                  GRAPH.PORT.TYPE = "STD"
            END CASE
            GRAPH.SUB = "BOX.ASCII"
            GOSUB 1000; GOSUB 1100
      END CASE
      SWITCH.ETX = 1
      BEGIN CASE
         CASE VIDEO.PORT.TYPE = "MDCSC"
            GOSUB 2200; GOSUB 2000
         CASE VIDEO.PORT.TYPE = "PRISM"
            GOSUB 2300; GOSUB 2000
         CASE VIDEO.PORT.TYPE = "ADDS"
            GOSUB 2400; GOSUB 2000
         CASE VIDEO.PORT.TYPE = "MENTOR"
            GOSUB 2500; GOSUB 2050
         CASE VIDEO.PORT.TYPE = "VIA"
            GOSUB 2600; GOSUB 2010
         CASE VIDEO.PORT.TYPE = "ANSI"
            GOSUB 2700; GOSUB 2070
         CASE VIDEO.PORT.TYPE = "UNIDATA"
            GOSUB 2800; GOSUB 2050
         CASE 1
            VIDEO.PORT.TYPE = "STD"
            GOSUB 2100; GOSUB 2010
      END CASE
      BEGIN CASE
         CASE KSEL.PORT.TYPE = "PRISM"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3200
         CASE KSEL.PORT.TYPE = "PRISMA"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3300
         CASE KSEL.PORT.TYPE = "ADDS"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3400
         CASE KSEL.PORT.TYPE = "WYSE"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3410
         CASE KSEL.PORT.TYPE = "UNIDATA"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3450
         CASE KSEL.PORT.TYPE = "PC"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3500
         CASE KSEL.PORT.TYPE = "VIA"
            KSEL.SUB = "KSEL.VIA"
            GRAPH.SUB = "BOX.VIA"
            TCC.HLP.SUB = "HELP.VIA"
            SCL.HLP.SUB = "SCLM.VIA"
            GOSUB 3000; GOSUB 3600
         CASE 1
            KSEL.PORT.TYPE = "STD"
            KSEL.SUB = "KSEL.ASCII"
            TCC.HLP.SUB = "HELP.ASCII"
            SCL.HLP.SUB = "SCLM.ASCII"
            GOSUB 3000; GOSUB 3100
      END CASE
      BEGIN CASE
         CASE CRT.PORT.TYPE = "BLD"
            CRT.DSPLY.MODE = "BLD"
         CASE 1
            CRT.DSPLY.MODE = "STD"
      END CASE
      BEGIN CASE
         CASE PC.PORT.TYPE = "wIntegrate"
            CALL WIN.APP("WINTEG.EXE",ONFILE)
            IF ONFILE THEN
               TCC.HLP.SUB = "HELP_WTG"
               DIRNAME = "ACCT"
               CALL SYSVARS.SUB(DIRNAME)
               IF FIELD(DIRNAME,"-",1) = "CBA" THEN
                  DIRNAME = FIELD(DIRNAME,"-",2)
               END ELSE
                  DIRNAME = FIELD(DIRNAME,"-",1)
               END
               IF LEN(DIRNAME) > 8 THEN DIRNAME = DIRNAME[1,8]
               CALL WIN.APPDIR(PMC.PCDIR)
               PMC.PCDIR = PMC.PCDIR:DIRNAME
               CALL WIN.PCDIR(PMC.PCDIR,ONFILE)
               IF NOT(ONFILE) THEN
                  CALL WIN.PCMKDIR(PMC.PCDIR)
               END
               PMC.PCDIR = PMC.PCDIR:"\"
            END ELSE
               PC.PORT.TYPE = "STD"
            END
         CASE PC.PORT.TYPE = "termulator"
            TU_FUNC = "TU.INIT":TU_VERNO
            CALL @TU_FUNC(INITERR)
            IF INITERR THEN
               PC.PORT.TYPE = "STD"
            END
      END CASE
      BEGIN CASE
         CASE KSEL.PORT.TYPE # "VIA"
            MOUSE.BUTTONS = 0
         CASE MOUSE.PORT.TYPE # ""
            PRINT CHAR(27):CHAR(8):"MOUSE /I64 TEST ":CHAR(0): ; ***** Unidata may not support CHAR(0) *****
            ECHO OFF
            INPUT MOUSE.BUTTONS:
            ECHO ON
            IF MOUSE.BUTTONS[1,2] = '@0' THEN
               MOUSE.BUTTONS = FIELD(MOUSE.BUTTONS,' ',2)
            END ELSE
               MOUSE.BUTTONS = 0
            END
         CASE 1
            MOUSE.BUTTONS = 0
      END CASE
      GOTO 99999
*
*----
500*
      TU_FUNC = "TU.GET.VERSION":TU_VERNO
      CALL @TU_FUNC(SBVERSION,STATUS)
      CLIENTSTRING = SBVERSION<1,1,1>
      CLIENTCRT = FIELD(CLIENTSTRING,"/",2)
      CLIENTVERSION = FIELD(FIELD(FIELD(CLIENTSTRING,"/",1),"-",3),".",1,3)
      HOSTVERSION = FIELD(SBVERSION<2,1,1>,".",1,3)
      IF HOSTVERSION = CLIENTVERSION THEN
         WRITE TU_VERNO ON TCC, TU_VERNO_ID
      END ELSE
         PC.PORT.TYPE = "STD"
      END
      RETURN
*
*---- Internal Use Default
1000*
      BOX.X = "C"
      BOX.Y = "C"
      BOX.COLS = 80
      BOX.ROWS = 24
      BOX.CNT = 0
      BOX.SAVE = 0
      BOX.HROW = 0
      BOX.CLEAR = 0
      BOX.FRAME = 1
      BOX.COLOR = ""
      BOX.WCOLOR = ""
      BOX.HCOLOR = ""
      BOX.TCOLOR = ""
      BOX.BCOLOR = ""
*
      GRAPH.CHAR.1 = " "
      GRAPH.CHAR.2 = " "
      GRAPH.CHAR.3 = " "
      GRAPH.CHAR.4 = " "
      RETURN
*
*---- Standard Graph Setup
1100*
      BOX.ON = ""
      BOX.OFF = ""
      HORZ.CHAR = "-"
      VERT.CHAR = "|"
      TOP.LEFT = "+"
      TOP.RIGHT = "+"
      BOT.LEFT = "+"
      BOT.RIGHT = "+"
      BLOCK.CHAR = "*"
      RETURN
*
*---- Prism 9 Graph Setup
1200*
      BOX.ON = ESC:"(0"
      BOX.OFF = ESC:"(B"
      HORZ.CHAR = "q"
      VERT.CHAR = "x"
      TOP.LEFT = "l"
      TOP.RIGHT = "k"
      BOT.LEFT = "m"
      BOT.RIGHT = "j"
      BLOCK.CHAR = "a"
      ARROWS.MSG = BOX.ON:"d c e b":BOX.OFF
      RETURN
*
*---- Adds Graph Setup
1300*
      BOX.ON = ESC:"H":STX
      BOX.OFF = ESC:"H":ETX
*---- Bouble line
*     HORZ.CHAR = "<"
*     VERT.CHAR = ">"
*     TOP.LEFT = "#"
*     TOP.RIGHT = "$"
*     BOT.LEFT = '"'
*     BOT.RIGHT = "&"
*---- Single line
      HORZ.CHAR = ":"
      VERT.CHAR = "6"
      TOP.LEFT = "2"
      TOP.RIGHT = "3"
      BOT.LEFT = '1'
      BOT.RIGHT = "5"
*
      BLOCK.CHAR = "7"
      RETURN
*
*---- PC Graph Setup
1400*
      BOX.ON = ""
      BOX.OFF = ""
*---- Bouble line
*     HORZ.CHAR = CHAR(205)
*     VERT.CHAR = CHAR(186)
*     TOP.LEFT = CHAR(201)
*     TOP.RIGHT = CHAR(187)
*     BOT.LEFT = CHAR(200)
*     BOT.RIGHT = CHAR(188)
*---- Single line
      HORZ.CHAR = CHAR(196)
      VERT.CHAR = CHAR(179)
      TOP.LEFT = CHAR(218)
      TOP.RIGHT = CHAR(191)
      BOT.LEFT = CHAR(192)
      BOT.RIGHT = CHAR(217)
*
      BLOCK.CHAR = CHAR(219)
      ARROWS.MSG = " ":CHAR(27):" ":CHAR(24):" ":CHAR(25):" ":CHAR(26):" "
      RETURN
*
*---- Real Link Graph Setup
1500*
      BOX.ON = ""
      BOX.OFF = ""
      HORZ.CHAR = CHAR(196)
      VERT.CHAR = CHAR(194)
      TOP.LEFT = CHAR(218)
      TOP.RIGHT = CHAR(193)
      BOT.LEFT = CHAR(192)
      BOT.RIGHT = CHAR(217)
*
      BLOCK.CHAR = CHAR(219)
      ARROWS.MSG = " ":CHAR(200):" ":CHAR(203):" ":CHAR(202):" ":CHAR(216):" "
      RETURN
*
*---- Via Duct Graph Setup
1600*
      BOX.ON = ESC:CHAR(8)
      BOX.OFF = CHAR(0) ; ***** Unidata may not support CHAR(0) *****
*---- Bouble line
*     HORZ.CHAR = CHAR(205)
*     VERT.CHAR = CHAR(186)
*     TOP.LEFT = CHAR(201)
*     TOP.RIGHT = CHAR(187)
*     BOT.LEFT = CHAR(200)
*     BOT.RIGHT = CHAR(188)
*---- Single line
      HORZ.CHAR = BOX.ON:"CHAR ":196:BOX.OFF
      VERT.CHAR = BOX.ON:"CHAR ":179:BOX.OFF
      TOP.LEFT = BOX.ON:"CHAR ":218:BOX.OFF
      TOP.RIGHT = BOX.ON:"CHAR ":191:BOX.OFF
      BOT.LEFT = BOX.ON:"CHAR ":192:BOX.OFF
      BOT.RIGHT = BOX.ON:"CHAR ":217:BOX.OFF
*
      BLOCK.CHAR = BOX.ON:"CHAR ":219:BOX.OFF
      ARROWS.MSG = BOX.ON:"CHAR":BOX.OFF:" ":CHAR(27):" ":CHAR(24):" ":CHAR(25):" ":CHAR(26):" ":BOX.OFF
      RETURN
*
*---- ANSI / VT100
1700*
      BOX.ON = ESC:"(0"
      BOX.OFF = ESC:"(A"
*---- Bouble line
*     HORZ.CHAR = "<"
*     VERT.CHAR = ">"
*     TOP.LEFT = "#"
*     TOP.RIGHT = "$"
*     BOT.LEFT = '"'
*     BOT.RIGHT = "&"
*---- Single line
      HORZ.CHAR = "q"
      VERT.CHAR = "x"
      TOP.LEFT = "l"
      TOP.RIGHT = "k"
      BOT.LEFT = "m"
      BOT.RIGHT = "j"
*
      BLOCK.CHAR = CHAR(219)
      RETURN
*
*---- Internal Use Default
2000*
      ETX.TOP = ETX.DR
      ETX.MHD = ETX.DU
      ETX.CMT = ETX.DU
      ETX.NUM = ETX.DRU
      ETX.LHD = ETX.D
      ETX.DHD = ETX.R
      ETX.DSL = ETX.D
      ETX.DIN = ETX.R
      ETX.HSL = ETX.DU
      ETX.HHD = ETX.DRU
      ETX.PHD = ETX.D
      ETX.EHD = ETX.R
      ETX.BOT = ETX.DR
      ETX.WRN = ETX.RB
2010*
      ETX.EMBED = 1
      ETX.TOP.OFF = ETX.OFF
      ETX.DIN.OFF = ETX.OFF
      ETX.EHD.OFF = ETX.OFF
      ETX.HHD.OFF = ETX.OFF
2050*
      ETX.PLUS.1 = " "
      ETX.PLUS.2 = " "
      ETX.PLUS.3 = " "
      ETX.PLUS.4 = " "
      RETURN
2070*
      ETX.TOP = ETX.D
      ETX.MHD = ETX.D
      ETX.CMT = ETX.D
      ETX.NUM = ETX.D
      ETX.LHD = ETX.U
      ETX.DHD = ETX.R
      ETX.DSL = ETX.U
      ETX.DIN = ETX.R
      ETX.HSL = ETX.D
      ETX.HHD = ETX.U
      ETX.PHD = ETX.D
      ETX.EHD = ETX.U
      ETX.BOT = ETX.OFF
      ETX.WRN = ETX.B
******************************
*     ETX.TOP = ETX.D
*     ETX.MHD = ETX.OFF
*     ETX.CMT = ETX.OFF
*     ETX.NUM = ETX.OFF
*     ETX.LHD = ETX.OFF
*     ETX.DHD = ETX.OFF
*     ETX.DSL = ETX.OFF
*     ETX.DIN = ETX.R
*     ETX.HSL = ETX.OFF
*     ETX.HHD = ETX.U
*     ETX.PHD = ETX.OFF
*     ETX.EHD = ETX.R
*     ETX.BOT = ETX.OFF
*     ETX.WRN = ETX.OFF
*******************************
*
      ETX.EMBED = 0
      ETX.TOP.OFF = ETX.OFF
      ETX.DIN.OFF = ETX.OFF
      ETX.EHD.OFF = ETX.OFF
      ETX.HHD.OFF = ETX.OFF
      GOSUB 2050
      RETURN
*
*---- No Video Setup
2100*
      ETX.OFF = " "
      ETX.TOP = " "
      ETX.MHD = " "
      ETX.CMT = " "
      ETX.NUM = " "
      ETX.LHD = " "
      ETX.DHD = " "
      ETX.DSL = ">"
      ETX.DIN = " "
      ETX.HSL = " "
      ETX.HHD = " "
      ETX.PHD = " "
      ETX.EHD = " "
      ETX.BOT = " "
      ETX.WRN = " "
      SWITCH.ETX = 0
      RETURN
*
*---- MDCSC Video Setup
2200*
      ETX.OFF = @(-128)  ;* Video Off
      ETX.D = @(-129)    ;* Dim
      ETX.R = @(-132)    ;* Reverse
      ETX.U = @(-144)    ;* Underline
      ETX.B = @(-130)    ;* Blink
      ETX.N = @(-136)    ;* Blank
      ETX.DR = @(-133)   ;* Dim & Reverse
      ETX.DU = @(-145)   ;* Dim & Underline
      ETX.DB = @(-131)   ;* Dim & Blink
      ETX.DN = @(-137)   ;* Dim & Blank
      ETX.RU = @(-148)   ;* Reverse & Underline
      ETX.RB = @(-134)   ;* Reverse & Blink
      ETX.RN = @(-140)   ;* Reverse & Blank
      ETX.UB = @(-146)   ;* Underline & Blink
      ETX.UN = @(-152)   ;* Underline & Blank
      ETX.BN = @(-138)   ;* Blink & Blank
      ETX.DRU = @(-149)  ;* Dim, Reverse & Underline
      ETX.DRB = @(-135)  ;* Dim, Reverse & Blink
      ETX.DRN = @(-141)  ;* Dim, Reverse & Blank
      ETX.DUB = @(-147)  ;* Dim, Underline & Blink
      ETX.DUN = @(-153)  ;* Dim, Underline & Blank
      ETX.DBN = @(-139)  ;* Dim, Blink & Blank
      ETX.RUB = @(-150)  ;* Reverse, Underline & Blink
      ETX.RUN = @(-156)  ;* Reverse, Underline & Blank
      ETX.RBN = @(-142)  ;* Reverse, Blink & Blank
      ETX.UBN = @(-154)  ;* Underline, Blink & Blank
      ETX.DRUB = @(-151) ;* Dim, Reverse, Underline & Blink
      ETX.DRUN = @(-157) ;* Dim, Reverse, Underline & Blank
      ETX.DRBN = @(-143) ;* Dim, Reverse, Blink & Blank
      ETX.DUBN = @(-155) ;* Dim, Underline, Blink & Blank
      ETX.RUBN = @(-158) ;* Reverse, Underline, Blink & Blank
      ETX.DRUBN = @(-159);* Dim, Reverse, Underline, Blink & Blank
      RETURN
*
*---- Prism Video Setup
2300*
      ETX.OFF = ETX:" "  ;* Video Off
      ETX.D = ETX:"A"    ;* Dim
      ETX.R = ETX:"D"    ;* Reverse
      ETX.U = ETX:"0"    ;* Underline
      ETX.B = ETX:"B"    ;* Blink
      ETX.N = ETX:"H"    ;* Blank
      ETX.DR = ETX:"E"   ;* Dim & Reverse
      ETX.DU = ETX:"1"   ;* Dim & Underline
      ETX.DB = ETX:"C"   ;* Dim & Blink
      ETX.DN = ETX.OFF   ;* Dim & Blank
      ETX.RU = ETX:"4"   ;* Reverse & Underline
      ETX.RB = ETX:"F"   ;* Reverse & Blink
      ETX.RN = ETX:"L"   ;* Reverse & Blank
      ETX.UB = ETX:"2"   ;* Underline & Blink
      ETX.UN = ETX:"8"   ;* Underline & Blank
      ETX.BN = ETX.OFF   ;* Blink & Blank
      ETX.DRU = ETX:"5"  ;* Dim, Reverse & Underline
      ETX.DRB = ETX:"G"  ;* Dim, Reverse & Blink
      ETX.DRN = ETX.OFF  ;* Dim, Reverse & Blank
      ETX.DUB = ETX:"3"  ;* Dim, Underline & Blink
      ETX.DUN = ETX.OFF  ;* Dim, Underline & Blank
      ETX.DBN = ETX.OFF  ;* Dim, Blink & Blank
      ETX.RUB = ETX:"6"  ;* Reverse, Underline & Blink
      ETX.RUN = ETX:"/"  ;* Reverse, Underline & Blank
      ETX.RBN = ETX.OFF  ;* Reverse, Blink & Blank
      ETX.UBN = ETX.OFF  ;* Underline, Blink & Blank
      ETX.DRUB = ETX:"7" ;* Dim, Reverse, Underline & Blink
      ETX.DRUN = ETX.OFF ;* Dim, Reverse, Underline & Blank
      ETX.DUBN = ETX.OFF ;* Dim, Underline, Blink & Blank
      ETX.DRBN = ETX.OFF ;* Dim, Reverse, Blink & Blank
      ETX.RUBN = ETX.OFF ;* Reverse, Underline, Blink & Blank
      ETX.DRUBN = ETX.OFF;* Dim, Reverse, Underline, Blink & Blank
      RETURN
*
*---- Adds Video Setup
2400*
      E.T.X = ESC:"G"
      ETX.OFF = E.T.X:"0"  ;* Video Off
      ETX.D = E.T.X:"p"    ;* Dim
      ETX.R = E.T.X:"4"    ;* Reverse
      ETX.U = E.T.X:"8"    ;* Underline
      ETX.B = E.T.X:"2"    ;* Blink
      ETX.N = E.T.X:"1"    ;* Blank
      ETX.DR = E.T.X:"t"   ;* Dim & Reverse
      ETX.DU = E.T.X:"x"   ;* Dim & Underline
      ETX.DB = E.T.X:"r"   ;* Dim & Blink
      ETX.DN = E.T.X:"q"   ;* Dim & Blank
      ETX.RU = E.T.X:"<"   ;* Reverse & Underline
      ETX.RB = E.T.X:"6"   ;* Reverse & Blink
      ETX.RN = E.T.X:"5"   ;* Reverse & Blank
      ETX.UB = E.T.X:":"   ;* Underline & Blink
      ETX.UN = E.T.X:"9"   ;* Underline & Blank
      ETX.BN = E.T.X:"3"   ;* Blink & Blank
      ETX.DRU = E.T.X:"|"  ;* Dim, Reverse & Underline
      ETX.DRB = E.T.X:"v"  ;* Dim, Reverse & Blink
      ETX.DRN = E.T.X:"u"  ;* Dim, Reverse & Blank
      ETX.DUB = E.T.X:"z"  ;* Dim, Underline & Blink
      ETX.DUN = E.T.X:"y"  ;* Dim, Underline & Blank
      ETX.DBN = E.T.X:"s"  ;* Dim, Blink & Blank
      ETX.RUB = E.T.X:">"  ;* Reverse, Underline & Blink
      ETX.RUN = E.T.X:"="  ;* Reverse, Underline & Blank
      ETX.RBN = E.T.X:"7"  ;* Reverse, Blink & Blank
      ETX.UBN = E.T.X:";"  ;* Underline, Blink & Blank
      ETX.DRUB = E.T.X:"~" ;* Dim, Reverse, Underline & Blink
      ETX.DRUN = E.T.X:"}" ;* Dim, Reverse, Underline & Blank
      ETX.DUBN = E.T.X:"{" ;* Dim, Underline, Blink & Blank
      ETX.DRBN = E.T.X:"w" ;* Dim, Reverse, Blink & Blank
      ETX.RUBN = E.T.X:"?" ;* Reverse, Underline, Blink & Blank
      ETX.DRUBN = ETX.OFF  ;* Dim, Reverse, Underline, Blink & Blank
      RETURN
*
*---- Mentor Video Setup
2500*
      ETX.OFF = " "
      ETX.TOP = @(-13)
      ETX.MHD = " "
      ETX.CMT = " "
      ETX.NUM = " "
      ETX.LHD = " "
      ETX.DHD = @(-13)
      ETX.DSL = " "
      ETX.DIN = @(-13)
      ETX.HSL = " "
      ETX.HHD = @(-13)
      ETX.PHD = " "
      ETX.EHD = @(-13)
      ETX.BOT = " "
      ETX.WRN = " "
      ETX.TOP.OFF = @(-14)
      ETX.DIN.OFF = @(-14)
      ETX.EHD.OFF = @(-14)
      ETX.HHD.OFF = @(-14)
      ETX.EMBED = 1
      SWITCH.ETX = 0
      RETURN
*
*---- Via Duct (Color) Video Setup
2600*
      GOSUB 2100
      RETURN
*
*---- ANSI / vt100 Video Setup
2700*
      E.T.X = ESC:"["
      ETX.OFF = E.T.X:"0m"  ;* Video Off
      ETX.D = E.T.X:"1m"    ;* Dim
      ETX.R = E.T.X:"7m"    ;* Reverse
      ETX.U = E.T.X:"4m"    ;* Underline
      ETX.B = E.T.X:"5m"    ;* Blink
      ETX.N = E.T.X:""    ;* Blank
      ETX.DR = E.T.X:""   ;* Dim & Reverse
      ETX.DU = E.T.X:""   ;* Dim & Underline
      ETX.DB = E.T.X:""   ;* Dim & Blink
      ETX.DN = E.T.X:""   ;* Dim & Blank
      ETX.RU = E.T.X:""   ;* Reverse & Underline
      ETX.RB = E.T.X:""   ;* Reverse & Blink
      ETX.RN = E.T.X:""   ;* Reverse & Blank
      ETX.UB = E.T.X:""   ;* Underline & Blink
      ETX.UN = E.T.X:""   ;* Underline & Blank
      ETX.BN = E.T.X:""   ;* Blink & Blank
      ETX.DRU = E.T.X:""  ;* Dim, Reverse & Underline
      ETX.DRB = E.T.X:""  ;* Dim, Reverse & Blink
      ETX.DRN = E.T.X:""  ;* Dim, Reverse & Blank
      ETX.DUB = E.T.X:""  ;* Dim, Underline & Blink
      ETX.DUN = E.T.X:""  ;* Dim, Underline & Blank
      ETX.DBN = E.T.X:""  ;* Dim, Blink & Blank
      ETX.RUB = E.T.X:""  ;* Reverse, Underline & Blink
      ETX.RUN = E.T.X:""  ;* Reverse, Underline & Blank
      ETX.RBN = E.T.X:""  ;* Reverse, Blink & Blank
      ETX.UBN = E.T.X:""  ;* Underline, Blink & Blank
      ETX.DRUB = E.T.X:"" ;* Dim, Reverse, Underline & Blink
      ETX.DRUN = E.T.X:"" ;* Dim, Reverse, Underline & Blank
      ETX.DUBN = E.T.X:"" ;* Dim, Underline, Blink & Blank
      ETX.DRBN = E.T.X:"" ;* Dim, Reverse, Blink & Blank
      ETX.RUBN = E.T.X:"" ;* Reverse, Underline, Blink & Blank
      ETX.DRUBN = ETX.OFF  ;* Dim, Reverse, Underline, Blink & Blank
*************************
*** wIntegrate colors ***
*************************
* XXX.F.B0 = E.T.X:"30m";* COLOR_0 on COLOR_0
* XXX.F.B1 = E.T.X:"31m";* COLOR_0 on COLOR_4
* XXX.F.B2 = E.T.X:"32m";* COLOR_0 on COLOR_2
* XXX.F.B3 = E.T.X:"33m";* COLOR_0 on COLOR_6
* XXX.F.B4 = E.T.X:"34m";* COLOR_0 on COLOR_1
* XXX.F.B5 = E.T.X:"35m";* COLOR_0 on COLOR_5
* XXX.F.B6 = E.T.X:"36m";* COLOR_0 on COLOR_3
* XXX.F.B7 = E.T.X:"37m";* COLOR_0 on COLOR_7
* XXX.F0.B = E.T.X:"40m";* COLOR_0 on COLOR_0
* XXX.F1.B = E.T.X:"41m";* COLOR_4 on COLOR_0
* XXX.F2.B = E.T.X:"42m";* COLOR_2 on COLOR_0
* XXX.F3.B = E.T.X:"43m";* COLOR_6 on COLOR_0
* XXX.F4.B = E.T.X:"44m";* COLOR_1 on COLOR_0
* XXX.F5.B = E.T.X:"45m";* COLOR_5 on COLOR_0
* XXX.F6.B = E.T.X:"46m";* COLOR_3 on COLOR_0
* XXX.F7.B = E.T.X:"47m";* COLOR_7 on COLOR_0
      RETURN
*
*---- Unidata Video Setup
2800*
      ETX.OFF = " "
      ETX.TOP = @(-11)
      ETX.MHD = " "
      ETX.CMT = " "
      ETX.NUM = " "
      ETX.LHD = " "
      ETX.DHD = @(-13)
      ETX.DSL = " "
      ETX.DIN = @(-13)
      ETX.HSL = " "
      ETX.HHD = @(-15)
      ETX.PHD = " "
      ETX.EHD = @(-13)
      ETX.BOT = " "
      ETX.WRN = " "
      ETX.EMBED = 0
      ETX.TOP.OFF = @(-12)
      ETX.DIN.OFF = @(-14)
      ETX.EHD.OFF = @(-14)
      ETX.HHD.OFF = @(-16)
      SWITCH.ETX = 0
      RETURN
*
*---- Internal Use Default
3000*
      KSEL.SEL = " "
      KSEL.ESC = CHAR(27)
      KSEL.HLP = "/"
      KSEL.PLUS.1 = "?"
      KSEL.PLUS.2 = "?"
      KSEL.PLUS.3 = "?"
      KSEL.PLUS.4 = "?"
      RETURN
*
*---- General Cursor Movment Setup
3050*
      KSEL.SOH = CHAR(1)  ;* Cursor home
      KSEL.ETX = CHAR(3)  ;* End Of Text
      KSEL.ACK = CHAR(6)  ;* Cursor forward
      KSEL.BS  = CHAR(8)  ;* Backspace
      KSEL.HT  = CHAR(9)  ;* Tab
      KSEL.LF  = CHAR(10) ;* Cursor down
      KSEL.LF  = ""       ;* Cursor down
      KSEL.CR  = CHAR(13) ;* Carriage return
      KSEL.NAK = CHAR(21) ;* Cursor Back
      KSEL.UPK = CHAR(26) ;* Cursor up
      KSEL.PUP = "-"      ;* Page up
      KSEL.PDN = "="      ;* Page down
      KSEL.PFW = ">"      ;* Page forward
      KSEL.PBK = "<"      ;* Page Backward
      RETURN
*
*---- Unidata Cursor Movment Setup
3055*
      KSEL.SOH = CHAR(1)  ;* Cursor home
      KSEL.ETX = CHAR(3)  ;* End Of Text
      KSEL.ACK = CHAR(12) ;* Cursor forward
      KSEL.BS  = CHAR(8)  ;* Backspace
      KSEL.HT  = CHAR(9)  ;* Tab
      KSEL.LF  = CHAR(10) ;* Cursor down
      KSEL.LF  = ""       ;* Cursor down
      KSEL.CR  = CHAR(13) ;* Carriage return
      KSEL.NAK = CHAR(16) ;* Cursor Back
      KSEL.UPK = CHAR(11) ;* Cursor up
      KSEL.PUP = "-"      ;* Page up
      KSEL.PDN = "="      ;* Page down
      KSEL.PFW = ">"      ;* Page forward
      KSEL.PBK = "<"      ;* Page Backward
      RETURN
3060*
      KSEL.SLO = "" ;* Status line on
      KSEL.SLF = "" ;* Status line off
      KSEL.SPO = "" ;* Slave port on
      KSEL.SPF = "" ;* Slave Port off
      KSEL.SDP = "" ;* Screen dump
      RETURN
*
*---- Not currently setup
3070*
      KSEL.KHM = CHAR(1) ;* Cursor home
      KSEL.KBK = CHAR(21);* Cursor back
      KSEL.KUP = CHAR(26);* Cursor up
      KSEL.KFW = CHAR(6) ;* Cursor forward
      KSEL.KDN = CHAR(10);* Cursor down
      RETURN
*
*---- Standard Cursor movments Setup
3100*
      KSEL.SOH = "7";* Cursor home
      KSEL.ETX = "1";* End Of Text
      KSEL.ACK = "6";* Cursor forward
      KSEL.BS  = "4";* Backspace
      KSEL.HT  = "q";* Tab
      KSEL.LF  = "2";* Cursor down
      KSEL.CR  = "" ;* Carriage return
      KSEL.NAK = "4";* Cursor Back
      KSEL.UPK = "8";* Cursor up
      KSEL.PUP = "-";* Page up
      KSEL.PDN = "=";* Page down
      KSEL.PFW = ">";* Page forward
      KSEL.PBK = "<";* Page Backward
      KSEL.KON = "" ;* Cursor on
      KSEL.KOF = "" ;* Cursor off
      GOSUB 3060
      ARROWS.MSG = " 4 8 2 6 "
*
*---- Not currently used
*
      KSEL.KHM = "" ;* Cursor home
      KSEL.KBK = "" ;* Cursor back
      KSEL.KUP = "" ;* Cursor up
      KSEL.KFW = "" ;* Cursor forward
      KSEL.KDN = "" ;* Cursor down
      RETURN
*
*---- Prism Cursor movments Setup
3200*
      GOSUB 3050
      KSEL.KON = @(-11)   ;* Cursor on
      KSEL.KOF = @(-12)   ;* Cursor off
      IF GRAPH.PORT.TYPE = "STD" THEN
         GOSUB 3060
      END ELSE
         KSEL.SLO = @(-13)   ;* Status line on
         KSEL.SLF = @(-14)   ;* Status line off
         KSEL.SPO = @(-17)   ;* Slave port on
         KSEL.SPF = @(-18)   ;* Slave Port off
         KSEL.SDP = @(-19)   ;* Screen dump
      END
*
*---- Not currently setup
*
      KSEL.KHM = @(-2)  ;* Cursor home
      KSEL.KBK = @(-9)  ;* Cursor back
      KSEL.KUP = @(-10) ;* Cursor up
      KSEL.KFW = @(-15) ;* Cursor forward
      KSEL.KDN = @(-16) ;* Cursor down
      RETURN
*
*---- Prism not on MDSCS Cursor movments Setup
3300*
      GOSUB 3050
      KSEL.KON = CHAR(226) ;* Cursor on
      KSEL.KOF = CHAR(228) ;* Cursor off
      IF GRAPH.PORT.TYPE = "STD" THEN
         GOSUB 3060
      END ELSE
         KSEL.SLO = CHAR(227) ;* Status line on
         KSEL.SLF = CHAR(229);* Status line off
         KSEL.SPO = ESC:CHAR(82);* Slave port on
         KSEL.SPF = ESC:CHAR(84);* Slave Port off
         KSEL.SDP = CHAR(19) ;* Screen dump
      END
      GOSUB 3070
      RETURN
*
*---- ADDS Cursor movments Setup
3400*
      GOSUB 3050
      KSEL.KON = ESC:"`1" ;* Cursor on
      KSEL.KOF = ESC:"`0" ;* Cursor off
      GOSUB 3060
      GOSUB 3070
      RETURN
*
*---- WYSE Cursor movments Setup
3410*
      GOSUB 3050
      KSEL.SOH = CHAR(30)  ;* Cursor home
      KSEL.ETX = CHAR(3)  ;* End Of Text
      KSEL.ACK = CHAR(12)  ;* Cursor forward
      KSEL.NAK = CHAR(21) ;* Cursor Back
      KSEL.NAK = CHAR(9) ;* Cursor Back
      KSEL.UPK = CHAR(11) ;* Cursor up
      KSEL.KON = ESC:"`1" ;* Cursor on
      KSEL.KOF = ESC:"`0" ;* Cursor off
      GOSUB 3060
      GOSUB 3070
      RETURN
*
*---- UNIDATA Cursor movments Setup
3450*
      GOSUB 3055
      KSEL.KON = ESC:"`1" ;* Cursor on
      KSEL.KOF = ESC:"`0" ;* Cursor off
      GOSUB 3060
      GOSUB 3070
      RETURN
*
*---- PC Cursor movments Setup
3500*
      GOSUB 3050
      KSEL.KON = ""       ;* Cursor on
      KSEL.KOF = ""       ;* Cursor off
      GOSUB 3060
      GOSUB 3070
      RETURN
*
*---- Via Duct Cursor movments Setup
3600*
      GOSUB 3050
      IF GRAPH.PORT.TYPE = "ADDS" THEN
         KSEL.KON = ESC:"`1" ;* Cursor on
         KSEL.KOF = ESC:"`0" ;* Cursor off
      END ELSE
         KSEL.KON = ""       ;* Cursor on
         KSEL.KOF = ""       ;* Cursor off
      END
      GOSUB 3060
      GOSUB 3070
*
      IF SWITCH.ETX THEN
         ETX.U = ETX.OFF
         ETX.DU = ETX.D
         ETX.RU = ETX.R
         ETX.UB = ETX.B
         ETX.UN = ETX.N
         ETX.DRU = ETX.DR
         ETX.DUB = ETX.DB
         ETX.DUN = ETX.DN
         ETX.RUB = ETX.RB
         ETX.RUN = ETX.RN
         ETX.UBN = ETX.BN
         ETX.DRUB = ETX.DRB
         ETX.DRUN = ETX.DRN
         ETX.DUBN = ETX.DBN
         ETX.RUBN = ETX.RBN
         ETX.DRUBN = ETX.DRBN
         GOSUB 2000
      END
      ARROWS.MSG = CHAR(27):CHAR(8):"CHAR":CHAR(0):" ":CHAR(27):" ":CHAR(24):" ":CHAR(25):" ":CHAR(26):" ":CHAR(0) ; ***** Unidata may not support CHAR(0) *****
*
      BOX.COLOR = "7,1"; BOX.WCOLOR = "0,3"; BOX.HCOLOR = "2,0"
      BOX.TCOLOR = "6,4"; BOX.BCOLOR = "0,7"
      BOX.CLEAR = 9; CALL @GRAPH.SUB
      RETURN
99999*
      RETURN
   END
