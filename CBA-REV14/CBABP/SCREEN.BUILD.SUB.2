      SUBROUTINE SCREEN.BUILD.SUB.2 (FUNCT, COL, ROW, ERROR.STATUS)
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.SCREEN.BUILD
*
***************************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - SCREEN.BUILD.SUB.2
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/27/83
*
* REVISION - A.1.1
*
* DESCRIPTION
*
* This subroutine provides entry and maintenance of data field definitions
* for the screen builder system. All position information, editing
* criteria, video attributes, error handling and help messages are defined
* using this program.
*
***************************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>CHAR
*
*---- DEFINE VARIABLES
*
      DIM TEMP.VALDAT(5)
      DIM TEMP.PATRN(5)
*     DIM TEMP.HMSG(5)
      DIM SCREEN(75)
      EQU SCRN.TYP         TO SCREEN(1)
      EQU SCRN.X           TO SCREEN(2)
      EQU SCRN.Y           TO SCREEN(3)
      EQU SCRN.MAXL        TO SCREEN(4)
      EQU SCRN.JUSTIFY     TO SCREEN(5)
      EQU SCRN.SCALER      TO SCREEN(6)
      EQU SCRN.MASK        TO SCREEN(7)
      EQU SCRN.MULTI.LN    TO SCREEN(8)
      EQU SCRN.O.R         TO SCREEN(9)
      EQU SCRN.DEFAULT     TO SCREEN(10)
      EQU SCRN.MINL        TO SCREEN(11)
      EQU SCRN.MINV        TO SCREEN(12)
      EQU SCRN.MAXV        TO SCREEN(13)
      EQU SCRN.VALDAT      TO SCREEN(14)
      EQU SCRN.PATRN       TO SCREEN(15)
      EQU SCRN.BLINK       TO SCREEN(16)
      EQU SCRN.BLANK       TO SCREEN(17)
      EQU SCRN.REVERSE     TO SCREEN(18)
      EQU SCRN.EMODE       TO SCREEN(19)
      EQU SCRN.EX          TO SCREEN(20)
      EQU SCRN.EY          TO SCREEN(21)
      EQU SCRN.PMSG        TO SCREEN(22)
      EQU SCRN.AUTO.RTN    TO SCREEN(23)
      EQU SCRN.FILL.CHR    TO SCREEN(24)
      EQU SCRN.MULTI.SP    TO SCREEN(25)
      EQU SCRN.FIELD.NAME  TO SCREEN(26)
      EQU SCRN.HMSG        TO SCREEN(27)
      EQU SCRN.SORT.ID     TO SCREEN(28)
*
*---- INITIALIZATION
*
10*
      MAT SCREEN = ""
      MAT TEMP.VALDAT = ""
      MAT TEMP.PATRN = ""
*     MAT TEMP.HMSG = ""
      IF FUNCT = "A" THEN
         MAINT.MODE = 0
      END ELSE
         MAINT.MODE = 1
      END
      FC = ''
      ERROR.STATUS = 0
      CHANGED = 0
      SORTED = 1
      ORIG.EXT.REF = ""
      PREV.EXT.REF = ""
      ECD.ACTION=2;CALL SCRN.EDIT
      BEGIN.PAGE = 17 ; PAGE.SIZE = 3 ; LINE.SPACE = 1
      OLD.START.LINE = 0
*
*---- MAIN PROCESSING
*
      IF MAINT.MODE THEN
         START.REF = 1
         GOSUB 10100
         FC = INT.REF
         GOSUB 10200
         GOSUB 10600
         GOSUB 10300
         GOSUB 12000
         GOSUB 12020
         LINES = DCOUNT(SCRN.HMSG<1,1>, SVM)
         LN = 1
         GOSUB 12040
         GOTO 300
      END
*
*---- PROCESS NEW FIELD
*
200*
      INT.REF = DCOUNT(BLD.EXT.REF,VM) + 1
      SCRN.X = COL
      SCRN.Y = ROW
      SCV.REC(3)<ECD.SCRN.NO> = SCRN.X
      ECD.NUM = 3
      ECD.ACTION=5;CALL SCRN.EDIT
      SCV.REC(4)<ECD.SCRN.NO> = SCRN.Y
      ECD.NUM = 4
      ECD.ACTION=5;CALL SCRN.EDIT
      FOR FN = 1 TO 13
         ON FN GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300
         IF ECD.RET.VALUE = "END" THEN GOTO 99999
      NEXT FN
      CHANGED = 1
      MAINT.MODE = 1
      SORTED = 0
      BLD.FIELD.CNT = BLD.FIELD.CNT + 1
*
*---- GET OPERATOR REQUEST
*
300*
      SAVE.INT.REF = INT.REF
      START.REF = INT.REF + 1
      GOSUB 10100
      NEXT.INT.REF = INT.REF
      INT.REF = SAVE.INT.REF
      IF NEXT.INT.REF THEN
         ECD.NUM = 30
      END ELSE
         ECD.NUM = 29
      END
      ECD.ACTION=4;CALL SCRN.EDIT
      REPLY = ECD.RET.VALUE
      BEGIN CASE
      CASE (REPLY = "N" OR REPLY = "n") AND NEXT.INT.REF
         OLD.START.LINE = 0
         GOSUB 10700
         FC = INT.REF
         GOSUB 10400
         IF NOT(SORTED) THEN GOSUB 11000
         ECD.ACTION = 6
         CALL SCRN.EDIT
         INT.REF = NEXT.INT.REF
         FC = INT.REF
         GOSUB 10200
         GOSUB 10600
         GOSUB 10300
         GOSUB 12000
         GOSUB 12020
         LINES = DCOUNT(SCRN.HMSG<1,1>, SVM)
         LN = 1
         GOSUB 12040
         GOTO 300
      CASE REPLY = "E" OR REPLY = "e" OR REPLY = "END" OR REPLY = "end"
         BLD.FIELD.CNT = DCOUNT(BLD.EXT.REF,VM)
         GOTO 99999
      CASE REPLY = "F" OR REPLY = "f"
         GOSUB 10700
         FC = INT.REF
         GOSUB 10400
         IF NOT(SORTED) THEN GOSUB 11000
         GOTO 99999
      CASE NUM(REPLY) AND REPLY >=  1 AND REPLY <=  5
         FN = REPLY
         ON FN GOSUB 1100,1200,1300,1400,1500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  6 AND REPLY <=  10
         FN = REPLY - 5
         ON FN GOSUB 1600,1700,1800,1900,2000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  11 AND REPLY <=  15
         FN = REPLY - 10
         ON FN GOSUB 2100,2200,2300,2400,2500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  16 AND REPLY <=  20
         FN = REPLY - 15
         ON FN GOSUB 2600,2700,2800,2900,3000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  21 AND REPLY <=  25
         FN = REPLY - 20
         ON FN GOSUB 3100,3200,3300,3400,3500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  26 AND REPLY <=  30
         FN = REPLY - 25
         ON FN GOSUB 3600,3700,3800,3900,4000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  31 AND REPLY <=  32
         FN = REPLY - 30
         ON FN GOSUB 4100,4200
         CHANGED = 1
      CASE 1
         ERRMSG = "Invalid reply.... Retry"
         GOSUB 95000
      END CASE
      GOTO 300
*
*---- GET FIELD REFERENCE NUMBER
*
1100*
      ECD.NUM = 1
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      BEGIN CASE
      CASE ECD.RET.VALUE = "N"
         GOSUB 10500
         SCRN.EXT.REF = EXT.REF
         SCV.REC(1)<ECD.SCRN.NO> = SCRN.EXT.REF
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE ECD.RET.VALUE = ORIG.EXT.REF
         SCRN.EXT.REF = ECD.RET.VALUE
      CASE NUM(ECD.RET.VALUE)
         LOCATE ECD.RET.VALUE IN BLD.EXT.REF<1>,1 SETTING P ELSE P = 0
         IF P = 0 THEN
            SCRN.EXT.REF = ECD.RET.VALUE
         END ELSE
            ERRMSG = "Duplicate field number..."
            GOSUB 95000
            GOTO 1100
         END
         IF SCRN.EXT.REF > 60 THEN
            ERRMSG = "Reference cannot exceed 60 if SCREEN.INPUT is used"
            GOSUB 95000
         END
      END CASE
      RETURN
*
*---- GET FIELD NAME
*
1200*
      ECD.NUM = 2
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.FIELD.NAME = ECD.RET.VALUE
      ECD.NUM = 33
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.SORT.ID = ECD.RET.VALUE
      RETURN
*
*---- GET COLUMN NUMBER
*
1300*
      IF NOT(MAINT.MODE) THEN RETURN
      ECD.NUM = 3
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.X = ECD.RET.VALUE
      SORTED = 0
      RETURN
*
*---- GET ROW NUMBER
*
1400*
      IF NOT(MAINT.MODE) THEN RETURN
      ECD.NUM = 4
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.Y = ECD.RET.VALUE
      SORTED = 0
      RETURN
*
*---- GET FIELD TYPE
*
1500*
      ECD.NUM = 5
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF ECD.RET.VALUE # SCRN.TYP THEN
         IF ECD.RET.VALUE = 6 THEN SCRN.MAXL = ""
         SCRN.TYP = ECD.RET.VALUE
         GOSUB 10600
         GOSUB 10300
      END
      SCRN.TYP = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD LENGTH
*
1600*
      IF SCRN.TYP = 6 AND NOT(MAINT.MODE) THEN RETURN
      IF SCRN.TYP = 8 THEN RETURN
      ECD.NUM = 6
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MAXL = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD JUSTIFICATION
*
1700*
      IF SCRN.TYP = 6 THEN RETURN
      IF SCRN.TYP = 8 THEN RETURN
      ECD.NUM = 7
      IF SCRN.JUSTIFY = "" THEN
         IF SCRN.TYP = 3 OR SCRN.TYP = 4 OR SCRN.TYP = 9 THEN
            ECD.DEFAULT = "R"
         END ELSE
            ECD.DEFAULT = "L"
         END
      END
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.JUSTIFY = ECD.RET.VALUE
      RETURN
*
*---- GET FILL CHARACTER
*
1800*
      ECD.NUM = 28
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.FILL.CHR = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD MASK CHARACTER
*
1900*
      ECD.NUM = 8
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MASK = ECD.RET.VALUE
      RETURN
*
*---- GET SCALING FACTOR
*
2000*
      IF SCRN.TYP # 4 THEN RETURN
      ECD.NUM = 9
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.SCALER = ECD.RET.VALUE
      RETURN
*
*---- GET OPTION/REQUIRED INDICATOR
*
2100*
      ECD.NUM = 11
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.O.R = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD DEFAULT
*
2200*
      IF SCRN.O.R = "R" THEN RETURN
      ECD.NUM = 12
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.DEFAULT = ECD.RET.VALUE
      RETURN
*
*---- GET NUMBER OF LINES AND SPACING FOR MULTI-LINE FIELD
*
2300*
      ECD.NUM = 10
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MULTI.LN = ECD.RET.VALUE
      ECD.NUM = 31
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MULTI.SP = ECD.RET.VALUE
      RETURN
*
*---- NOT USED
*
2400*
      RETURN
*
*---- NOT USED
*
2500*
      RETURN
*
*---- GET MINIMUM FIELD LENGTH
*
2600*
      ECD.NUM = 13
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MINL = ECD.RET.VALUE
      RETURN
*
*---- GET MINIMUM VALUE
*
2700*
      ECD.NUM = 14
      ECD.MAXL = SCRN.MAXL
      IF ECD.MAXL > 20 THEN ECD.MAXL = 20
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF SCRN.TYP = 6 THEN
         IF ECD.RET.VALUE[1,4] # "DATE" THEN
            IVALUE = ICONV(ECD.RET.VALUE,"D")
            OVALUE = OCONV(IVALUE,"D2/")
            IF ECD.RET.VALUE # OVALUE THEN
               ERRMSG = "** INVALID DATE **"
               GOSUB 95000
               GOTO 2500
            END
            ECD.RET.VALUE = IVALUE
         END
      END
      SCRN.MINV = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD MAXIMUM VALUE
*
2800*
      ECD.NUM = 15
      ECD.MAXL = SCRN.MAXL
      IF ECD.MAXL > 20 THEN ECD.MAXL = 20
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF SCRN.TYP = 6 THEN
         IF ECD.RET.VALUE[1,4] # "DATE" THEN
            IVALUE = ICONV(ECD.RET.VALUE,"D")
            OVALUE = OCONV(IVALUE,"D2/")
            IF ECD.RET.VALUE # OVALUE THEN
               ERRMSG = "** INVALID DATE **"
               GOSUB 95000
               GOTO 2600
            END
            ECD.RET.VALUE = IVALUE
         END
      END
      SCRN.MAXV = ECD.RET.VALUE
      RETURN
*
*---- GET VALID ENTRIES
*
2900*
      ECD.NUM = 16
      DONE = 0
      FOR N = 1 TO 3 UNTIL DONE
         ECD.SUB.NUM = N
         ECD.DEFAULT = TEMP.VALDAT(N)
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN ECD.RET.VALUE = ""
         IF ECD.RET.VALUE = "" AND TEMP.VALDAT(N) = "" THEN
            DONE = 1
         END ELSE
            TEMP.VALDAT(N) = ECD.RET.VALUE
         END
      NEXT N
      SCRN.VALDAT = ""
      FOR N = 1 TO 3
         BEGIN CASE
         CASE TEMP.VALDAT(N) = ""
         CASE SCRN.VALDAT = ""
            SCRN.VALDAT = TEMP.VALDAT(N)
         CASE 1
            SCRN.VALDAT = SCRN.VALDAT : "," : TEMP.VALDAT(N)
         END CASE
         LV = LEN(SCRN.VALDAT)
         IF SCRN.VALDAT[LV,1] = "," THEN
            LV = LV - 1
            SCRN.VALDAT = SCRN.VALDAT[1,LV]
         END
      NEXT N
      GOSUB 12000
      RETURN
*
*---- GET FIELD PATTERN MATCH
*
3000*
      ECD.NUM = 17
      DONE = 0
      FOR N = 1 TO 3 UNTIL DONE
         ECD.SUB.NUM = N
         ECD.DEFAULT = TEMP.PATRN(N)
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN ECD.RET.VALUE = ""
         IF ECD.RET.VALUE = "" AND TEMP.PATRN(N) = "" THEN
            DONE = 1
         END ELSE
            TEMP.PATRN(N) = ECD.RET.VALUE
         END
      NEXT N
      SCRN.PATRN = ""
      FOR N = 1 TO 3
         BEGIN CASE
         CASE TEMP.PATRN(N) = ""
         CASE SCRN.PATRN = ""
            SCRN.PATRN = TEMP.PATRN(N)
         CASE 1
            SCRN.PATRN = SCRN.PATRN : "," : TEMP.PATRN(N)
         END CASE
         LV = LEN(SCRN.PATRN)
         IF SCRN.PATRN[LV,1] = "," THEN
            LV = LV - 1
            SCRN.PATRN = SCRN.PATRN[1,LV]
         END
      NEXT N
      GOSUB 12020
      RETURN
*
*---- NOT USED
*
3100*
      RETURN
*
*---- NOT USED
*
3200*
      RETURN
*
*---- GET BLINK INDICATOR
*
3300*
      ECD.NUM = 18
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.BLINK = ECD.RET.VALUE
      RETURN
*
*---- GET BLANK INDICATOR
*
3400*
      ECD.NUM = 19
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.BLANK = ECD.RET.VALUE
      RETURN
*
*---- GET REVERSE VIDEO INDICATOR
*
3500*
      ECD.NUM = 20
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.REVERSE = ECD.RET.VALUE
      RETURN
*
*---- GET AUTO RETURN INDICATOR
*
3600*
      ECD.NUM = 21
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.AUTO.RTN = ECD.RET.VALUE
      RETURN
*
*---- GET ERROR MODE INDICATOR
*
3700*
      ECD.NUM = 22
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.EMODE = ECD.RET.VALUE
      RETURN
*
*---- GET ERROR COLUMN
*
3800*
      ECD.NUM = 23
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.EX = ECD.RET.VALUE
      RETURN
*
*---- GET ERROR ROW
*
3900*
      ECD.NUM = 24
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.EY = ECD.RET.VALUE
      RETURN
*
*---- NOT USED
*
4000*
      RETURN
*
*---- GET PROMPT MESSAGE
*
4100*
      ECD.NUM = 25
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.PMSG = ECD.RET.VALUE
      RETURN
*
*---- GET HELP MESSAGE
*
4200*
      LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
      IF LINES = 0 THEN
         LOOP
            OPTION = "A"
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 4210
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
      END ELSE
         LN = 1
      END
      GOSUB 12040
4205*
      MORE = 1
      LOOP
         ECD.NUM = 34
         ECD.RET.VALUES<2,34> = ""
         ECD.ACTION = 4 ;CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
         CASE OPTION = "E" OR OPTION = "" OR OPTION = "e"
            MORE = 0
         CASE OPTION = "A"  OR OPTION = "a"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 4210
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 12040
         CASE OPTION = "C" OR OPTION = "c"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               GOSUB 4210
            END
         CASE OPTION = "D" OR OPTION = "d"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               SCRN.HMSG = DELETE(SCRN.HMSG,1,1,LN)
               LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 12040
         CASE OPTION = "I" OR OPTION = "i"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               INS "" BEFORE SCRN.HMSG<1,1,LN>
               LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
               GOSUB 12040
               GOSUB 4210
            END
         CASE OPTION = "S" OR OPTION = "s"
            LN = START.LINE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 12040
         CASE 1
            ERRMSG = "*** Invalid option ***" ; GOSUB 95000
         END CASE
      WHILE MORE = 1 DO REPEAT
      RETURN
4210*
      GOSUB 12040
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
      PRINT @(11,SLN):CL: LN "R#2"
      X = 14 ; Y = SLN ; TYP = 1 ; MAXL = 66 ; O.R = "O" ; HMSG = "Enter help message" ;  DEFAULT = SCRN.HMSG<1,1,LN>
      CALL EDIT.SUB
      IF VALUE = "END" AND (OPTION = "A" OR OPTION = "I") THEN
         SCRN.HMSG = DELETE(SCRN.HMSG,1,1,LN)
         LINES = DCOUNT(SCRN.HMSG<1,1>, SVM)
         IF LN > 1 AND LN > LINES THEN LN = LN - 1
         IF LN < 1 THEN LN = 1
         OLD.START.LINE = 0
         GOSUB 12040
         GOTO 4299
      END
      SCRN.HMSG<1,1,LN> = VALUE
      LINES = DCOUNT(SCRN.HMSG<1,1>, SVM)
4299  RETURN
*
*---- DETERMINE INTERNAL AND EXTERNAL REFERENCE NUMBERS
*
10100*
      INT.REF = 0
      FOR FLD.PTR = START.REF TO BLD.FIELD.CNT WHILE INT.REF = 0
         IF COL = ABLD.SCRN(FLD.PTR)<1,B.X> AND ROW = ABLD.SCRN(FLD.PTR)<1,B.Y> THEN
            INT.REF = FLD.PTR
         END
      NEXT FLD.PTR
      RETURN
*
*---- EXTRACT FIELD ATTRIBUTES
*
10200*
      SCRN.TYP = ABLD.SCRN(FC)<1,B.TYP>
      SCRN.X = ABLD.SCRN(FC)<1,B.X>
      SCRN.Y = ABLD.SCRN(FC)<1,B.Y>
      SCRN.MAXL = ABLD.SCRN(FC)<1,B.MAXL>
      SCRN.JUSTIFY = ABLD.SCRN(FC)<1,B.JUSTIFY>
      SCRN.SCALER = ABLD.SCRN(FC)<1,B.SCALER>
      SCRN.MASK = ABLD.SCRN(FC)<1,B.MASK>
      SCRN.MULTI.LN = ABLD.SCRN(FC)<1,B.MULTI.LN>
      SCRN.O.R = ABLD.SCRN(FC)<1,B.O.R>
      SCRN.DEFAULT = ABLD.SCRN(FC)<1,B.DEFAULT>
      SCRN.MINL = ABLD.SCRN(FC)<1,B.MINL>
      SCRN.MINV = ABLD.SCRN(FC)<1,B.MINV>
      SCRN.MAXV = ABLD.SCRN(FC)<1,B.MAXV>
      SCRN.VALDAT = ABLD.SCRN(FC)<1,B.VALDAT>
      SCRN.PATRN = ABLD.SCRN(FC)<1,B.PATRN>
      SCRN.BLINK = ABLD.SCRN(FC)<1,B.BLINK>
      SCRN.BLANK = ABLD.SCRN(FC)<1,B.BLANK>
      SCRN.REVERSE = ABLD.SCRN(FC)<1,B.REVERSE>
      SCRN.EMODE = ABLD.SCRN(FC)<1,B.EMODE>
      SCRN.EX = ABLD.SCRN(FC)<1,B.EX>
      SCRN.EY = ABLD.SCRN(FC)<1,B.EY>
      SCRN.PMSG = ABLD.SCRN(FC)<1,B.PMSG>
      SCRN.AUTO.RTN = ABLD.SCRN(FC)<1,B.AUTO.RTN>
      SCRN.FILL.CHR = ABLD.SCRN(FC)<1,B.FILL.CHR>
      SCRN.MULTI.SP = ABLD.SCRN(FC)<1,B.MULTI.SP>
      SCRN.EXT.REF = BLD.EXT.REF<1,FC>
      SCRN.FIELD.NAME = BLD.FIELD.NAME<1,SCRN.EXT.REF>
      SCRN.HMSG = BLD.HMSG<1,SCRN.EXT.REF>
      SCRN.SORT.ID = BLD.SORT.ID<1,FC>
      PREV.EXT.REF = SCRN.EXT.REF
      IF ORIG.EXT.REF = "" THEN ORIG.EXT.REF = SCRN.EXT.REF
      RETURN
*
*---- DISPLAY FIELD ATTRIBUTES
*
10300*
      FOR I = 1 TO 59
         SCV.REC(I)<ECD.SCRN.NO> = ""
      NEXT I
      SCV.REC(1)<ECD.SCRN.NO> = SCRN.EXT.REF
      SCV.REC(2)<ECD.SCRN.NO> = SCRN.FIELD.NAME
      SCV.REC(33)<ECD.SCRN.NO> = SCRN.SORT.ID
      SCV.REC(3)<ECD.SCRN.NO> = SCRN.X
      SCV.REC(4)<ECD.SCRN.NO> = SCRN.Y
*
      SCV.REC(5)<ECD.SCRN.NO> = SCRN.TYP
      SCV.REC(6)<ECD.SCRN.NO> = SCRN.MAXL
      SCV.REC(7)<ECD.SCRN.NO> = SCRN.JUSTIFY
      SCV.REC(28)<ECD.SCRN.NO> = SCRN.FILL.CHR
      SCV.REC(8)<ECD.SCRN.NO> = SCRN.MASK
      SCV.REC(9)<ECD.SCRN.NO> = SCRN.SCALER
      SCV.REC(11)<ECD.SCRN.NO> = SCRN.O.R
      SCV.REC(12)<ECD.SCRN.NO> = SCRN.DEFAULT
      SCV.REC(10)<ECD.SCRN.NO> = SCRN.MULTI.LN
      SCV.REC(31)<ECD.SCRN.NO> = SCRN.MULTI.SP
*
      SCV.REC(13)<ECD.SCRN.NO> = SCRN.MINL
      BEGIN CASE
      CASE SCRN.TYP = 6 AND SCRN.MINV # "" AND SCRN.MINV # "DATE"
         SCV.REC(14)<ECD.SCRN.NO> = OCONV(SCRN.MINV,"D2/")
      CASE SCRN.TYP = 4 AND NUM(SCRN.MINV) AND NUM(SCRN.SCALER)
         CONV = 'MD':SCRN.SCALER+0
         SCV.REC(14)<ECD.SCRN.NO> = OCONV(SCRN.MINV,CONV)
      CASE SCRN.TYP = 10 AND SCRN.MINV # "" AND SCRN.MINV # "TIME"
         SCV.REC(14)<ECD.SCRN.NO> = OCONV(SCRN.MINV, "MTH")
      CASE 1
         SCV.REC(14)<ECD.SCRN.NO> = SCRN.MINV
      END CASE
      BEGIN CASE
      CASE SCRN.TYP = 6 AND SCRN.MAXV # "" AND SCRN.MAXV # "DATE"
         SCV.REC(15)<ECD.SCRN.NO> = OCONV(SCRN.MAXV,"D2/")
      CASE SCRN.TYP = 4 AND NUM(SCRN.MAXV) AND NUM(SCRN.SCALER)
         CONV = 'MD':SCRN.SCALER+0
         SCV.REC(15)<ECD.SCRN.NO> = OCONV(SCRN.MAXV,CONV)
      CASE SCRN.TYP = 10 AND SCRN.MAXV # "" AND SCRN.MAXV # "TIME"
         SCV.REC(15)<ECD.SCRN.NO> = OCONV(SCRN.MINV, "MTH")
      CASE 1
         SCV.REC(15)<ECD.SCRN.NO> = SCRN.MAXV
      END CASE
*
      SCV.REC(18)<ECD.SCRN.NO> = SCRN.BLINK
      SCV.REC(19)<ECD.SCRN.NO> = SCRN.BLANK
      SCV.REC(20)<ECD.SCRN.NO> = SCRN.REVERSE
      SCV.REC(21)<ECD.SCRN.NO> = SCRN.AUTO.RTN
*
      SCV.REC(22)<ECD.SCRN.NO> = SCRN.EMODE
      SCV.REC(23)<ECD.SCRN.NO> = SCRN.EX
      SCV.REC(24)<ECD.SCRN.NO> = SCRN.EY
*
      SCV.REC(25)<ECD.SCRN.NO> = SCRN.PMSG
*
      ECD.ACTION=3;CALL SCRN.EDIT
*
      RETURN
*
*----- RESTORE FIELD ATTRIBUTES
*
10400*
      ABLD.SCRN(FC) = ""
      ABLD.SCRN(FC)<1,B.TYP> = SCRN.TYP
      ABLD.SCRN(FC)<1,B.X> = SCRN.X
      ABLD.SCRN(FC)<1,B.Y> = SCRN.Y
      ABLD.SCRN(FC)<1,B.MAXL> = SCRN.MAXL
      ABLD.SCRN(FC)<1,B.JUSTIFY> = SCRN.JUSTIFY
      ABLD.SCRN(FC)<1,B.SCALER> = SCRN.SCALER
      ABLD.SCRN(FC)<1,B.MASK> = SCRN.MASK
      ABLD.SCRN(FC)<1,B.MULTI.LN> = SCRN.MULTI.LN
      ABLD.SCRN(FC)<1,B.O.R> = SCRN.O.R
      ABLD.SCRN(FC)<1,B.DEFAULT> = SCRN.DEFAULT
      ABLD.SCRN(FC)<1,B.MINL> = SCRN.MINL
      ABLD.SCRN(FC)<1,B.MINV> = SCRN.MINV
      ABLD.SCRN(FC)<1,B.MAXV> = SCRN.MAXV
      ABLD.SCRN(FC)<1,B.VALDAT> = SCRN.VALDAT
      ABLD.SCRN(FC)<1,B.PATRN> = SCRN.PATRN
      ABLD.SCRN(FC)<1,B.BLINK> = SCRN.BLINK
      ABLD.SCRN(FC)<1,B.BLANK> = SCRN.BLANK
      ABLD.SCRN(FC)<1,B.REVERSE> = SCRN.REVERSE
      ABLD.SCRN(FC)<1,B.EMODE> = SCRN.EMODE
      ABLD.SCRN(FC)<1,B.EX> = SCRN.EX
      ABLD.SCRN(FC)<1,B.EY> = SCRN.EY
      ABLD.SCRN(FC)<1,B.PMSG> = SCRN.PMSG
      ABLD.SCRN(FC)<1,B.AUTO.RTN> = SCRN.AUTO.RTN
      ABLD.SCRN(FC)<1,B.FILL.CHR> = SCRN.FILL.CHR
      ABLD.SCRN(FC)<1,B.MULTI.SP> = SCRN.MULTI.SP
*---- REMOVE TRAILING VALUE MARKS
      DONE = 0
      N2 = COUNT(ABLD.SCRN(FC),VM) + 1
      FOR N = N2 TO 1 STEP -1 UNTIL DONE
         IF ABLD.SCRN(FC)<1,N> = "" THEN
            ABLD.SCRN(FC) = DELETE(ABLD.SCRN(FC),1,N,0)
         END ELSE
            DONE = 1
         END
      NEXT N
      BLD.EXT.REF<1,FC> = SCRN.EXT.REF
      BLD.SORT.ID<1,FC> = SCRN.SORT.ID
      IF SCRN.FIELD.NAME = "" AND BLD.FIELD.NAME<1,SCRN.EXT.REF> # "" THEN
         BLD.FIELD.NAME<1,SCRN.EXT.REF> = "*DELETE*"
      END ELSE
         BLD.FIELD.NAME<1,SCRN.EXT.REF> = SCRN.FIELD.NAME
      END
      IF SCRN.HMSG = "" AND BLD.HMSG<1,SCRN.EXT.REF> # "" THEN
         BLD.HMSG<1,SCRN.EXT.REF> = "*DELETE*"
      END ELSE
         BLD.HMSG<1,SCRN.EXT.REF> = SCRN.HMSG
      END
      IF PREV.EXT.REF # "" AND SCRN.EXT.REF # PREV.EXT.REF THEN
         BLD.FIELD.NAME<1,PREV.EXT.REF> = "*DELETE*"
         BLD.HMSG<1,PREV.EXT.REF> = "*DELETE*"
      END
*---- REMOVE TRAILING VALUE MARKS
      DONE = 0
      FOR N = 30 TO 1 STEP -1 UNTIL DONE
         IF ABLD.SCRN(FC)<1,N> = "" THEN
            ABLD.SCRN(FC) = DELETE(ABLD.SCRN(FC),1,N,0)
         END ELSE
            DONE = 1
         END
      NEXT N
      ORIG.EXT.REF = ""
      PREV.EXT.REF = ""
      RETURN
*
*---- GET NEXT AVAILABLE EXTERNAL REFERENCE NUMBER
*
10500*
      EXT.REF = 0
      FOR FLD.PTR = 1 TO BLD.FIELD.CNT
         IF BLD.EXT.REF<1,FLD.PTR> > EXT.REF THEN
            EXT.REF = BLD.EXT.REF<1,FLD.PTR>
         END
      NEXT FLD.PTR
      EXT.REF = EXT.REF + 1
      RETURN
*
*---- FORCE PARAMETERS BASED ON TYPE
*
10600*
      IF SCRN.MASK = "" THEN SCRN.MASK = "#"
      IF SCRN.MULTI.LN = "" THEN SCRN.MULTI.LN = 1
      IF SCRN.MULTI.SP = "" THEN SCRN.MULTI.SP = 1
      IF SCRN.O.R = "" THEN SCRN.O.R = "R"
      IF SCRN.MINL = "" THEN SCRN.MINL = 1
      IF SCRN.BLINK = "" THEN SCRN.BLINK = "N"
      IF SCRN.BLANK = "" THEN SCRN.BLANK = "N"
      IF SCRN.REVERSE = "" THEN SCRN.REVERSE = "N"
      IF SCRN.AUTO.RTN = "" THEN SCRN.AUTO.RTN = "N"
      IF SCRN.EMODE = "" THEN SCRN.EMODE = 1
      IF SCRN.EX = "" THEN SCRN.EX = "0"
      IF SCRN.EY = "" THEN SCRN.EY = "23"
      BEGIN CASE
      CASE SCRN.TYP = 6
         IF SCRN.MAXL = "" THEN SCRN.MAXL = 8
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE SCRN.TYP = 8
         SCRN.MAXL = 1
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE SCRN.TYP = 10
         IF SCRN.MAXL = "" THEN SCRN.MAXL = 7
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE 1
      END CASE
      RETURN
*
*---- REMOVE DEFAULT PARAMETERS
*
10700*
      IF SCRN.MASK = "#" THEN SCRN.MASK = ""
      IF SCRN.MULTI.LN = 1 THEN SCRN.MULTI.LN = ""
      IF SCRN.MULTI.SP = 1 THEN SCRN.MULTI.SP = ""
      IF SCRN.BLINK = "N" THEN SCRN.BLINK = ""
      IF SCRN.BLANK = "N" THEN SCRN.BLANK = ""
      IF SCRN.REVERSE = "N" THEN SCRN.REVERSE = ""
      IF SCRN.AUTO.RTN = "N" THEN SCRN.AUTO.RTN = ""
      IF SCRN.EMODE = 1 THEN SCRN.EMODE = ""
      IF SCRN.EX = "0" THEN SCRN.EX = ""
      IF SCRN.EY = "23" THEN SCRN.EY = ""
      RETURN
*
*---- CHECK FIELD SORT SEQUENCE
*
11000*
      PREV.Y = 0
      PREV.X = 0
      SORT.ITEM = ""
      SORT.FLD = 0
      SORT.EXT.REF = 0
      SORTED = 1
      FOR FLD = 1 TO BLD.FIELD.CNT UNTIL NOT(SORTED)
         CURR.Y = ABLD.SCRN(FLD)<1,B.Y>
         CURR.X = ABLD.SCRN(FLD)<1,B.X>
         BEGIN CASE
         CASE CURR.Y > PREV.Y
            PREV.Y = CURR.Y
            PREV.X = CURR.X
         CASE CURR.Y = PREV.Y AND CURR.X > PREV.X
            PREV.X = CURR.X
         CASE CURR.Y = PREV.Y AND CURR.X = PREV.X
            NULL
         CASE 1
            SORT.ITEM = ABLD.SCRN(FLD)
            SORT.Y = CURR.Y
            SORT.X = CURR.X
            SORT.FLD = FLD
            SORT.EXT.REF = BLD.EXT.REF<1,SORT.FLD>
            SORT.SORT.ID = BLD.SORT.ID<1,SORT.FLD>
            SORTED = 0
         END CASE
      NEXT FLD
      IF NOT(SORTED) THEN
         GOSUB 11500
         IF SORT.FLD # BLD.FIELD.CNT THEN GOTO 11000
      END
      RETURN
*
*---- SORT FIELD DEFINITION
*
11500*
      FOR FLD = SORT.FLD-1 TO 1 STEP -1 UNTIL SORTED
         CURR.Y = ABLD.SCRN(FLD)<1,B.Y>
         CURR.X = ABLD.SCRN(FLD)<1,B.X>
         BEGIN CASE
         CASE SORT.Y > CURR.Y
            SORTED = 1
         CASE SORT.Y = CURR.Y AND SORT.X > CURR.X
            SORTED = 1
         CASE 1
            ABLD.SCRN(FLD+1) = ABLD.SCRN(FLD)
            BLD.EXT.REF<1,FLD+1> = BLD.EXT.REF<1,FLD>
            BLD.SORT.ID<1,FLD+1> = BLD.SORT.ID<1,FLD>
            ABLD.SCRN(FLD) = SORT.ITEM
            BLD.EXT.REF<1,FLD> = SORT.EXT.REF
            BLD.SORT.ID<1,FLD> = SORT.SORT.ID
         END CASE
      NEXT FLD
      RETURN
*
*---- DISPLAY MULTI-LINE ATTRIBUTES
*
12000*
      MAT TEMP.VALDAT = ""
      T = 1
      ACNT = DCOUNT(SCRN.VALDAT,",")
      FOR A = 1 TO ACNT
         THIS.1 = FIELD(SCRN.VALDAT,",",A)
         IF A = 1 THEN
            TEMP.VALDAT(T) = THIS.1
         END ELSE
            IF (LEN(TEMP.VALDAT(T)) + LEN(THIS.1) + 1) > 20 THEN
               T = T + 1
               TEMP.VALDAT(T) = THIS.1
            END ELSE
               TEMP.VALDAT(T) = TEMP.VALDAT(T) : "," : THIS.1
            END
         END
      NEXT A
      ECD.NUM = 16
      FOR T = 1 TO 3
         ECD.SUB.NUM = T
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,ECD.SUB.NUM> = TEMP.VALDAT(T)
         ECD.ACTION=5;CALL SCRN.EDIT
      NEXT T
      RETURN
12020*
      MAT TEMP.PATRN = ""
      T = 1
      ACNT = DCOUNT(SCRN.PATRN,",")
      FOR A = 1 TO ACNT
         THIS.1 = FIELD(SCRN.PATRN,",",A)
         IF A = 1 THEN
            TEMP.PATRN(T) = THIS.1
         END ELSE
            IF (LEN(TEMP.PATRN(T)) + LEN(THIS.1) + 1) > 20 THEN
               T = T + 1
               TEMP.PATRN(T) = THIS.1
            END ELSE
               TEMP.PATRN(T) = TEMP.PATRN(T) : "," : THIS.1
            END
         END
      NEXT A
      ECD.NUM = 17
      FOR T = 1 TO 3
         ECD.SUB.NUM = T
         SCV.REC(ECD.NUM)<ECD.SCRN.NO,ECD.SUB.NUM> = TEMP.PATRN(T)
         ECD.ACTION=5;CALL SCRN.EDIT
      NEXT T
      RETURN
12040*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN GOTO 12049
      OLD.START.LINE = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         PRINT @(11,SLN): N "R#2"
         PRINT @(14,SLN): SCRN.HMSG<1,1,N> "L#66"
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         PRINT @(11,SLN):CL:
      NEXT M
12049 RETURN
19000*
      GOSUB 12040 ; X = 0 ; Y = 23 ; TYP = 3
      PMSG = "ENTER LINE NUMBER : "
      MINV = OLD.START.LINE ; MAXV = LAST.LINE
      O.R = "O" ; MAXL = 2
      CALL EDIT.SUB
      PRINT @(0,23):CL:
      LNO = VALUE
      IF LNO = "" OR LNO = "END" THEN LNO = 0
      RETURN
*
*---- ERROR MESSAGE
*
95000*
      PRINT @(0,23):CL:ERRMSG:
      INPUT REPLY:
      PRINT @(0,23):CL:
      RETURN
99999*
      RETURN
   END
