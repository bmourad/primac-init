************************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - SCREEN.BUILD.UPD.1
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/24/84
*
* REVISION - A.1.1
*
* DESCRIPTION
*
* This program maintains a file of screen definitions. All fixed and
* data fields are defined. The data field definitions contain all
* information necessary to display and edit the data to be processed.
*
************************************************************************
*
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>CHAR
*
*---- DEFINE VARIABLES
*
     DIM FORM(24)
*
*---- INITIALIZATION
*
    MIN.CRT.ROW = 0
    MAX.CRT.ROW = 22
    MIN.CRT.COL = 0
    MAX.CRT.COL = 79
    MAX.WIDTH = MAX.CRT.COL - MIN.CRT.COL + 1
    SPACE.WIDTH = SPACE(MAX.WIDTH)
    ADR.CNT = 4
*
*---- OPEN ALL FILES
*
    OPEN "","APS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 1
    END
    OPEN "","O.APS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 1
    END
    GOSUB 100
1*
    OPEN "","ARS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 2
    END
    OPEN "","O.ARS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 2
    END
    GOSUB 100
2*
    OPEN "","FAS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 3
    END
    OPEN "","O.FAS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 3
    END
    GOSUB 100
3*
    OPEN "","GLS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 4
    END
    OPEN "","O.GLS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 4
    END
    GOSUB 100
4*
    OPEN "","ICS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 5
    END
    OPEN "","O.ICS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 5
    END
    GOSUB 100
5*
    OPEN "","JCS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 6
    END
    OPEN "","O.JCS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 6
    END
    GOSUB 100
6*
    OPEN "","JES.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 7
    END
    OPEN "","O.JES.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 7
    END
    GOSUB 100
7*
    OPEN "","M.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 8
    END
    OPEN "","O.M.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 8
    END
    GOSUB 100
8*
    OPEN "","MLS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 9
    END
    OPEN "","O.MLS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 9
    END
    GOSUB 100
9*
    OPEN "","PMC.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 10
    END
    OPEN "","O.PMC.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 10
    END
    GOSUB 100
10*
    OPEN "","POS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 11
    END
    OPEN "","O.POS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 11
    END
    GOSUB 100
11*
    OPEN "","PRS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 12
    END
    OPEN "","O.PRS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 12
    END
    GOSUB 100
12*
    OPEN "","PSS.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 13
    END
    OPEN "","O.PSS.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 13
    END
    GOSUB 100
13*
    OPEN "","UTL.SCREENS" TO SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN M.SCREENS FILE"
       GOSUB 91000; GOTO 99999
    END
    OPEN "","O.UTL.SCREENS" TO O.SYS.SCREENS ELSE
       ERRMSG = "CANNOT OPEN O.SYS.SCREENS FILE"
       GOSUB 91000; GOTO 99999
    END
    GOSUB 100
    GOTO 99999
*
*---- Main processing
100*
    SELECT O.SYS.SCREENS
    DATA = 1
    LOOP
       READNEXT FRM.ID ELSE DATA = 0
    WHILE DATA DO
       IF FIELD(FRM.ID,"*",2) # "FRM" THEN GOTO 999
       SCREEN.NAME = FIELD(FRM.ID,"*",1)
       READ BLD.COMP.SCRN FROM O.SYS.SCREENS, FRM.ID ELSE GOTO 999
       FIRST.ROW = 0
       LAST.ROW = 22
       FIRST.COL = 0
       LAST.COL = 79
       CLR.R1 = 0
       CLR.R2 = 23
       CLR.C1 = 0
       CLR.C2 = 79
       DATA.ROW = ""
       DATA.COL1 = FIRST.COL
       DATA.COL2 = LAST.COL
       COL.REF.FLAG = 0
       ROW.REF.FLAG = 0
       MAT FORM = SPACE.WIDTH
       GOSUB 6000
       *MATREAD ABLD.SCRN FROM O.SYS.SCREENS, SCREEN.NAME:"*FLD" THEN
       *   GOSUB 7000
       *END
       GOSUB 5000
       PRINT BLD.COMP.SCRN
       WRITE BLD.COMP.SCRN ON SYS.SCREENS, FRM.ID
       WRITE BLD.DEF.SCRN ON SYS.SCREENS, SCREEN.NAME:"*DEF"
999*
       BLD.COMP.SCRN = ""
       BLD.DEF.SCRN = ""
    REPEAT
    RETURN
*
*---- COMPRESSION ROUTINE
*
5000*
    BLD.DEF.SCRN = ""; DPTR = 0
    FOR ROW = FIRST.ROW TO LAST.ROW
       BEGIN CASE
       CASE TRIM(FORM(ROW+1)) = ""
       CASE FORM(ROW+1) = STR(FORM(ROW+1)[1,1],MAX.WIDTH)
          DPTR = DPTR + 1
          BLD.DEF.SCRN<DPTR> = ROW
          BLD.DEF.SCRN<DPTR,2> = MIN.CRT.COL
          BLD.DEF.SCRN<DPTR,3> = FORM(ROW+1)
       CASE 1
          DUP.CNT = 0; SCOL = FIRST.COL; STMT = ""
          FOR COL = MIN.CRT.COL TO MAX.CRT.COL
             CHR = FORM(ROW+1)[COL+1,1]
             BEGIN CASE
             CASE TRIM(CHR) = ""
                DUP.CNT = DUP.CNT + 1
             CASE DUP.CNT < ADR.CNT
                STMT = STMT:SPACE(DUP.CNT):CHR
                DUP.CNT = 0
             CASE 1
                IF STMT # "" THEN
                   DPTR = DPTR + 1
                   BLD.DEF.SCRN<DPTR> = ROW
                   BLD.DEF.SCRN<DPTR,2> = SCOL
                   BLD.DEF.SCRN<DPTR,3> = STMT
                END
                STMT = CHR
                SCOL = COL
                DUP.CNT = 0
             END CASE
          NEXT COL
          IF STMT # "" THEN
             DPTR = DPTR + 1
             BLD.DEF.SCRN<DPTR> = ROW
             BLD.DEF.SCRN<DPTR,2> = SCOL
             BLD.DEF.SCRN<DPTR,3> = STMT
          END
       END CASE
    NEXT ROW
    BEGIN CASE
    CASE CLR.R1 <= MIN.CRT.ROW AND CLR.R2 >= MAX.CRT.ROW AND CLR.C1 <= MIN.CRT.COL AND CLR.C2 >= MAX.CRT.COL
       BLD.COMP.SCRN = CS
    CASE CLR.C2 = MAX.CRT.COL
       BLD.COMP.SCRN = ""
       FOR ROW = CLR.R1 TO CLR.R2
          BLD.COMP.SCRN = BLD.COMP.SCRN:@(CLR.C1,ROW):CL
       NEXT ROW
    CASE 1
       BLD.COMP.SCRN = ""
       FOR ROW = CLR.R1 TO CLR.R2
          BLD.COMP.SCRN = BLD.COMP.SCRN:@(CLR.C1,ROW):SPACE(CLR.C2-CLR.C1+1)
       NEXT ROW
    END CASE
    FOR DEF = 1 TO DPTR
       BLD.COMP.SCRN = BLD.COMP.SCRN:@(BLD.DEF.SCRN<DEF,2>,BLD.DEF.SCRN<DEF,1>):BLD.DEF.SCRN<DEF,3>
    NEXT DEF
    RETURN
*
*---- DECOMPRESSION ROUTINE
*
6000*
     COL = 0
     ROW = 0
     SLEN = LEN(BLD.COMP.SCRN)
     P = 1
     LOOP UNTIL P > SLEN DO
        CHR = BLD.COMP.SCRN[P,1]
        BEGIN CASE
        CASE CHR = CS OR CHR = CHAR(12) OR CHR = @(-1)
           MAT FORM = SPACE.WIDTH
           COL = FIRST.COL
           ROW = FIRST.ROW
           P = P + 1
        CASE CHR = CHAR(16)        ;* ADDRESS COLUMN
           IF BLD.COMP.SCRN[P+1,1] = CHAR(128) THEN
              ACOL = 0
           END ELSE
              ACOL = SEQ(BLD.COMP.SCRN[P+1,1])
           END
           BEGIN CASE
           CASE SEQ(BLD.COMP.SCRN[P+2,1]) = 8
              COL = INT(ACOL/16) * 10 + MOD(ACOL,16) - 1
              P = P + 3
           CASE 1
              COL = INT(ACOL/16) * 10 + MOD(ACOL,16)
              P = P + 2
           END CASE
        CASE CHR = CHAR(11)        ;* ADDRESS ROW
           AROW = SEQ(BLD.COMP.SCRN[P+1,1])
           ROW = AROW - 64
           P = P + 2
        CASE CHR = CHAR(27)        ;* ESCAPE
           P = P + 2
        CASE COL = 0
           FORM(ROW+1) = CHR:FORM(ROW+1)[2,MAX.WIDTH-1]
           P = P + 1
           COL = COL + 1
           IF COL > LAST.COL THEN
              COL = FIRST.COL
              ROW = ROW + 1
           END
        CASE 1
           FORM(ROW+1) = FORM(ROW+1)[1,COL]:CHR:FORM(ROW+1)[COL+2,MAX.WIDTH-COL-1]
           P = P + 1
           COL = COL + 1
           IF COL > LAST.COL THEN
              COL = FIRST.COL
              ROW = ROW + 1
           END
        END CASE
     REPEAT
     RETURN
*
*---- DISPLAY DATA FIELDS
*
7000*
     FOR FLD = 1 TO BLD.FIELD.CNT
        FX = ABLD.SCRN(FLD)<1,B.X>
        IF FX = "" THEN GOTO 7090
        FY = ABLD.SCRN(FLD)<1,B.Y>
        IF FY > LAST.ROW THEN GOTO 7090
        ML = ABLD.SCRN(FLD)<1,B.MULTI.LN>
        IF ML = "" THEN ML = 1
        LS = ABLD.SCRN(FLD)<1,B.MULTI.SP>
        IF LS = "" THEN LS = 1
        IF DATA.ROW = "" OR (DATA.ROW >= FY AND DATA.ROW <= (FY+(ML-1)*LS)) THEN
           IF DATA.COL1 < FX AND DATA.COL2 < FX THEN GOTO 7090
           IF DATA.COL1 >= FX+ABLD.SCRN(FLD)<1,B.MAXL> THEN GOTO 7090
           IF ABLD.SCRN(FLD)<1,B.MASK> = "" THEN
              DFILL = "#"
           END ELSE
              DFILL = ABLD.SCRN(FLD)<1,B.MASK>
           END
           PTYP = ABLD.SCRN(FLD)<1,B.TYP>
           PMAXL = ABLD.SCRN(FLD)<1,B.MAXL>
           BEGIN CASE
              CASE PTYP = 6
                 PMASK = STR(DFILL,2):"/":STR(DFILL,2):"/":STR(DFILL,2)
                 PMASK = PMASK[1,PMAXL]
              CASE PTYP = 4
                 PSCALER = ABLD.SCRN(FLD)<1,B.SCALER>
                 PMASK = STR(DFILL,PMAXL-PSCALER-1):".":STR(DFILL,PSCALER)
              CASE PTYP = 10
                 PMASK = STR(DFILL,2):":":STR(DFILL,4)
                 PMASK = PMASK[1,PMAXL]
              CASE 1
                 PMASK = STR(DFILL,PMAXL)
           END CASE
           FOR L = 1 TO ML
              PRINT @(FX,FY+(L-1)*LS):PMASK:
           NEXT L
        END
7090*
     NEXT FLD
     DATA.ROW = ""
     DATA.COL1 = FIRST.COL
     DATA.COL2 = LAST.COL
     RETURN
*
*---- ERROR PROCESS
*
91000*
     PRINT @(0,23):CL:ERRMSG:
     INPUT REPLY,1:
     PRINT @(0,23):CL:
     RETURN
*
*---- END OF PROGRAM
*
99999*
   END
