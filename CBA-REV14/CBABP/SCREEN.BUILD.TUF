      SUBROUTINE SCREEN.BUILD.TUF(MAT ABLD.SCRN,SCREEN.NAME,BLD.DEF.SCRN,PCNAME,BLD.TUF.SCRN,SYS.SCREENS,JIS.FLAG,JIS.HMSG)
* *COPY>CPYLIB>COM1
* *COPY>CPYLIB>COM.SCREEN.BUILD
*********************************************************************
*
* REVISION    - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - SCREEN.BUILD.TUF
*
* AUTHOR  - DIANE TOVAR, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 02/16/96
*
* DESCRIPTION
*
* This program will rebuild the Gui form from the screen then update it
* with the gui features that may have been added.
*
* Called by JISBP SCN_HDR_TUF or CBABP SCREEN.BUILD.HDR
*T21177 diane 12/12/1996 * Determine Form file
*T21177 diane 04/15/1997 * Read control record to create drop down boxes
*T21177 diane 05/07/1997 * Drop down box revision
*T23923 diane 04/30/1999 * Add drop down box for JIS form.
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>ALT.TUF.BUILD.SCREEN
*COPY>CPYLIB>SYSCOM
*
      MAT SYSCOM.REC = '' ; SYS.TYPE = 2
*
*---- DEFINE VARIABLES
*
*
*---- OPEN ALL FILES
*
      IF JIS.FLAG THEN
         TFILE = "JISFORMS"
         TNAME = PCNAME
      END ELSE
         TFILE = FIELD(PCNAME,".",2):"FORMS"
         TNAME = FIELD(PCNAME,".",1)
      END
      OPEN "",TFILE TO TUFORMS ELSE
         ERRMSG = "CANNOT OPEN FORM FILE ":TFILE
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN FILE CONTROL"
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      GUI.UPDATED = 0
      ERRMSG = ''
      REMOVE.FLDS = 0
      REMOVE.LBLS = 0
      REMOVE.HELP = 0
      MAX.FORM.SIZE = "55280"
*
      READ DB.FLAG FROM CONTROL, "GUI.DROP.DOWN" ELSE
         DB.FLAG = "Y"
      END
      DB.FLAG = "Y"
*
*---- MAIN PROCESSING
*
100*
      MATBUILD BLD.FLD.SCRN FROM ABLD.SCRN
      IF JIS.FLAG THEN
         READU BLD.TUF.SCRN FROM SYS.SCREENS, SCREEN.NAME:"_TUF" THEN
            READU OBLD.TUF.SCRN FROM TUFORMS, TNAME ELSE
               OBLD.TUF.SCRN = BLD.TUF.SCRN
            END
            BLD.TUF.SCRN = ''
            NEW.TUF = 0
         END ELSE
            BLD.TUF.SCRN = ''
            NEW.TUF = 1
         END
      END ELSE
         READU BLD.TUF.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*TUF" THEN
            READU OBLD.TUF.SCRN FROM TUFORMS, TNAME ELSE
               OBLD.TUF.SCRN = BLD.TUF.SCRN
            END
            BLD.TUF.SCRN = ''
            NEW.TUF = 0
         END ELSE
            BLD.TUF.SCRN = ''
            NEW.TUF = 1
         END
      END
      FORM.OK = 0
*      LOOP UNTIL FORM.OK DO
      GOSUB 300
      GOSUB 400
      IF NOT(GOT.PROMPT) THEN
         T.Y = 21
         T.Y.2 = T.Y
         T.X = 0
         STMT = SPACE(3)
         T.MAXL = 3
         T.FLDTYPE = ''
         T.TYP = 1
         T.MULTI.LN = ''
         T.MULTI.SP = ''
         T.USERDATA = ''
         T.BITMAP = ''
         HELP.MSG = ''
         FLD.NUM = 70
         GOSUB 6100
         LOCATE 'exit_keys' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'exit_keys')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END
         T.Y = 21
         T.Y.2 = T.Y
         T.X = 3
         STMT = SPACE(75)
         T.MAXL = 75
         T.FLDTYPE = ''
         T.TYP = 1
         T.MULTI.LN = ''
         T.MULTI.SP = ''
         T.USERDATA = ''
         T.BITMAP = ''
         HELP.MSG = ''
         FLD.NUM = 71
         GOSUB 6100
         LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 0
         LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 3
         LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 'raised'
         LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 1
         LOCATE 'font' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = FIX.10.FONT
         LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
         END
         LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
         END
      END
      IF NOT(NEW.TUF) THEN
         GOSUB 500
         IF GUI.UPDATED THEN
            ERRMSG = '*** PLEASE REVIEW FORM "':TFILE:' ':TNAME:'" FOR GUI UPDATES ***'
            GOSUB 91000
         END
      END
      IF LEN(BLD.TUF.SCRN) > MAX.FORM.SIZE THEN
*            BEGIN CASE
*               CASE REMOVE.HELP = 0
         IF REMOVE.HELP = 0 THEN
            REMOVE.HELP = 1
            GOSUB 700
            IF LEN(BLD.TUF.SCRN) LE MAX.FORM.SIZE THEN
               FORM.OK = 1
            END ELSE
*               CASE REMOVE.LBLS = 0
               IF REMOVE.LBLS = 0 THEN
                  REMOVE.LBLS = 1
                  GOSUB 800
                  IF LEN(BLD.TUF.SCRN) LE MAX.FORM.SIZE THEN
                     FORM.OK = 1
                  END
*            END CASE
               END
            END
         END
*         REMOVE.FLDS = REMOVE.FLDS + 1
*         REMOVE.LBLS = REMOVE.LBLS + 1
*         BLD.TUF.SCRN = ''
      END ELSE
         FORM.OK = 1
      END
*      REPEAT
      MATPARSE ABLD.SCRN FROM BLD.FLD.SCRN, AM
      RETURN
*
*---- Build from DEF Record
300*
      BLD.TUF.SCRN = ''
      TPTR = 1
      TITLE = ''
      SAVE.PMSG = ''
      DEF = 1
      T.Y = BLD.DEF.SCRN<DEF,1>
      T.X = BLD.DEF.SCRN<DEF,2>
      STMT = BLD.DEF.SCRN<DEF,3>
      GOSUB 1000
      DPTR = DCOUNT(BLD.DEF.SCRN,AM)
      FOR DEF = 1 TO DPTR
         T.Y = BLD.DEF.SCRN<DEF,1>
         T.X = BLD.DEF.SCRN<DEF,2>
         STMT = BLD.DEF.SCRN<DEF,3>
         BEGIN CASE
            CASE DEF = 1 AND NOT(JIS.FLAG)
               GOSUB 2000
            CASE T.Y = 0 AND NOT(JIS.FLAG)
               GOSUB 2000
            CASE LEN(STMT) = 80 AND CHANGE(STMT,"-","") = '' AND (T.Y = 1)
            CASE LEN(STMT) = 80 AND CHANGE(STMT,"-","") = '' AND (T.Y # 1)
               GOSUB 3000
            CASE LEN(TRIM(STMT)) = 1 AND TRIM(STMT) = ":"
            CASE T.Y = 21
               IF LEN(BLD.DEF.SCRN<DEF+1,3>) = 80 AND CHANGE(STMT,"-","") = '' THEN
                  SAVE.PMSG = STMT
               END ELSE
                  STMT = CHANGE(STMT,":"," ")
                  GOSUB 4000
               END
            CASE 1
               STMT = CHANGE(STMT,":"," ")
**             STMT = TRIMF(STMT)
**             STMT = TRIMB(STMT)
               GOSUB 4000
         END CASE
      NEXT DEF
      T.Y = 23
      T.Y.2 = T.Y
      T.X = 3
      STMT = SPACE(75)
      T.MAXL = 75
      T.FLDTYPE = ''
      T.MULTI.LN = ''
      T.MULTI.SP = ''
      T.USERDATA = ''
      T.BITMAP = ''
      T.BLANK = ''
      T.TYP = 1
      HELP.MSG = ''
      FLD.NUM = 91
      GOSUB 6100
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 3
      LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 'lowered'
      LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 1
      LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
      END
      LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
      END
      T.Y = 23
      T.Y.2 = T.Y
      T.X = 0
      STMT = SPACE(2)
      T.MAXL = 2
      T.FLDTYPE = ''
      T.TYP = 1
      T.MULTI.LN = ''
      T.MULTI.SP = ''
      T.USERDATA = ''
      T.BITMAP = ''
      HELP.MSG = ''
      FLD.NUM = 90
      GOSUB 6100
      RETURN
*
*---- Build from FLD Record
400 *
      GOT.PROMPT = ''
*---- build logo label
      IF JIS.FLAG = 0 THEN
         STMT = 'PRIMAC [11.0]  '
         T.X = 0
         T.Y = 0
         T.Y.2 = T.Y
         GOSUB 4000
         LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"")
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'string')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"")
         END
         LOCATE 'graphic' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,LOGO.BMP)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'graphic')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,LOGO.BMP)
         END
         LOCATE 'scale_bmp' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'scale_bmp')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
         END
         LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         DIMH = '32'
         DIMW = '154'
         BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
         LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"flat")
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'border_style')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"flat")
         END
         LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"0")
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'border_width')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"0")
         END
      END
*
*---- process fields
      SAVE.TPTR = ''
      SAVE.MAXL = ''
      SAVE.X = ''
      SAVE.Y = ''
      SAVE.FLD.NUM = ''
      FPTR = DCOUNT(BLD.FLD.SCRN<61>,VM)
      FOR FLD = 1 TO FPTR
         IF FLD = 61 THEN FLD = 80
         FLD.NUM = BLD.FLD.SCRN<61,FLD>
         IF JIS.FLAG = 1 THEN
            HELP.MSG = TRIM(JIS.HMSG<FLD>)
         END ELSE
            READ HELP.MSG FROM SYS.SCREENS,SCREEN.NAME:'*HMSG':FLD.NUM ELSE HELP.MSG = ''
         END
         T.TYP = BLD.FLD.SCRN<FLD,1>
         T.X = BLD.FLD.SCRN<FLD,2>
         T.Y = BLD.FLD.SCRN<FLD,3>
         T.Y.2 = T.Y
         IF T.Y = '22' THEN
            T.Y.2 = '21'
         END
         T.MAXL = BLD.FLD.SCRN<FLD,4>
         T.JUSTIFY = BLD.FLD.SCRN<FLD,5>
         T.VALDAT = BLD.FLD.SCRN<FLD,14>
*T23923         T.ORVALDAT = BLD.FLD.SCRN<FLD,26>
         T.ORVALDAT = BLD.FLD.SCRN<FLD,26> + 0     ;*T23923
         T.MULTI.LN = BLD.FLD.SCRN<FLD,8>
         T.MULTI.SP = BLD.FLD.SCRN<FLD,25>
         IF T.MULTI.SP = '' THEN
            T.MULTI.SP = 1
         END
         T.USERDATA = BLD.FLD.SCRN<FLD,29>
         T.BITMAP = BLD.FLD.SCRN<FLD,32>
         T.PMSG = BLD.FLD.SCRN<FLD,22>
         T.FLDTYPE = BLD.FLD.SCRN<FLD,28>
         T.BLANK = BLD.FLD.SCRN<FLD,17>
         T.O.R = BLD.FLD.SCRN<FLD,9>
         COMBO.FLAG = 0
         IF T.VALDAT THEN
            GOSUB 600
         END
         BEGIN CASE
            CASE T.TYP = 19
               GOSUB 4500
            CASE T.Y.2 = 21 AND T.PMSG = '' AND SAVE.PMSG # ''
               T.X = 0
               T.PMSG = SAVE.PMSG
               BLD.FLD.SCRN<FLD,22> = SAVE.PMSG
               GOSUB 6000
            CASE T.Y.2 = 21 AND SAVE.PMSG # ''
               T.X = 0
               T.PMSG = SAVE.PMSG
               BLD.FLD.SCRN<FLD,22> = SAVE.PMSG
               GOSUB 6000
*T23923            CASE T.VALDAT AND T.PMSG = '' AND T.Y.2 # '21' AND T.ORVALDAT = '' AND COMBO.FLAG AND (T.FLDTYPE # 'D')
            CASE T.VALDAT AND T.PMSG = '' AND T.Y.2 # '21' AND T.ORVALDAT = 0 AND COMBO.FLAG AND (T.FLDTYPE # 'D')     ;*T23923
               GOSUB 8000
            CASE (T.FLDTYPE = "DB" OR T.FLDTYPE = "EB") AND T.MULTI.LN > 1
               GOSUB 5500
            CASE T.TYP = 9
               GOSUB 5000
            CASE T.TYP # 6 AND T.Y.2 = 0 AND NOT(JIS.FLAG)
            CASE 1
               GOSUB 6000
         END CASE
         IF JIS.FLAG = 1 AND T.Y = 22 THEN
            LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            IF T.FLDTYPE = "D" THEN
               BLD.TUF.SCRN<TPTR+3,VAL> = 'lowered'
            END ELSE
               BLD.TUF.SCRN<TPTR+3,VAL> = 'raised'
            END
            LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            IF T.FLDTYPE = "D" THEN
               BLD.TUF.SCRN<TPTR+3,VAL> = 2
            END ELSE
               BLD.TUF.SCRN<TPTR+3,VAL> = 1
            END
            LOCATE 'font' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = FIX.10.FONT
            LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
            END
            LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
            END ELSE
               BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
            END
            IF T.FLDTYPE = "D" THEN
               LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
                  BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
               END ELSE
                  BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'foreground')
                  BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
               END
            END
         END
      NEXT FLD
      RETURN
*
*---- Update with Gui that may have been added.
*
500 *
      TPTR = DCOUNT(BLD.TUF.SCRN,AM) - 3
      CNT = DCOUNT(OBLD.TUF.SCRN,AM)
      FOR PTR = 1 TO CNT
         CLASSTYPE = FIELD(OBLD.TUF.SCRN<PTR>," ",1)
         OBJECT.NAME = FIELD(OBLD.TUF.SCRN<PTR+1>,VM,3)
         BEGIN CASE
            CASE CLASSTYPE = 'formclass'
            CASE CLASSTYPE = 'fontclass'
            CASE CLASSTYPE = 'hosteditclass'
            CASE CLASSTYPE = 'hostlabelclass'
            CASE CLASSTYPE = 'hosttextclass'
            CASE OBJECT.NAME[1,4] = '_pmc'
            CASE 1
               GOSUB 510
         END CASE
         PTR += 3
      NEXT PTR
      RETURN
*
510 *
      GUI.UPDATED = 1
      TPTR += 4
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = OBLD.TUF.SCRN<PTR>
      BLD.TUF.SCRN<TPTR+1> = OBLD.TUF.SCRN<PTR+1>
      BLD.TUF.SCRN<TPTR+2> = OBLD.TUF.SCRN<PTR+2>
      BLD.TUF.SCRN<TPTR+3> = OBLD.TUF.SCRN<PTR+3>
      RETURN
*
*---- Check if combo needed
600 *
      VITEMS = CHANGE(T.VALDAT,",",VM)
      VCNT = DCOUNT(VITEMS,VM)
      IF VCNT > 2 THEN
         FOR VI = 1 TO VCNT
            IF LEN(VITEMS<1,VI>) = T.MAXL AND VITEMS<1,VI> # 0 AND VITEMS<1,VI>[1,1] # "?" THEN
               COMBO.FLAG = 1
            END
         NEXT VI
      END
      IF T.FLDTYPE = 'NL' THEN COMBO.FLAG = 0
      IF DB.FLAG = 'N' THEN COMBO.FLAG = 0
      RETURN
*
*---- Remove Help messages
700*
      ERRMSG = "REMOVING HELP MESSAGES"
      GOSUB 91000
      LCNT = DCOUNT(BLD.TUF.SCRN,AM)
      FOR LPTR = 1 TO LCNT STEP 4
         LOCATE 'help_string' IN BLD.TUF.SCRN<LPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<LPTR+2> = DELETE(BLD.TUF.SCRN<LPTR+2>,1,VAL,0)
            BLD.TUF.SCRN<LPTR+3> = DELETE(BLD.TUF.SCRN<LPTR+3>,1,VAL,0)
         END
      NEXT LPTR
      RETURN
*
*---- Remove Labels
800*
      ERRMSG = "REMOVING LABELS"
      GOSUB 91000
      DELETED.LABELS = ""
      LCNT = DCOUNT(BLD.TUF.SCRN,AM)
      FOR LPTR = 1 TO LCNT STEP 4
         IF BLD.TUF.SCRN<LPTR> = 'hostlabelclass' THEN
            LOCATE 'char_length' IN BLD.TUF.SCRN<LPTR+2>,1 SETTING VAL THEN
               TSLEN = BLD.TUF.SCRN<LPTR+3,VAL>
            END
            LOCATE 'string' IN BLD.TUF.SCRN<LPTR+2>,1 SETTING VAL THEN
               TSLABEL = BLD.TUF.SCRN<LPTR+3,VAL>
            END
            IF TSLEN = 1 AND TSLABEL = "|" THEN
               INS LPTR BEFORE DELETED.LABELS<1,1>
            END
         END
      NEXT LPTR
      IF DELETED.LABELS THEN
         SAVE.DELETED.LABELS = DELETED.LABELS
         NEW.BLD.TUF.SCRN = ''
         NPTR = 0
         LCNT = DCOUNT(BLD.TUF.SCRN,AM) - 3
         FOR LPTR = LCNT TO 1 STEP -4
            IF LPTR = DELETED.LABELS<1,1> THEN
               DELETED.LABELS = DELETE(DELETED.LABELS,1,1,0)
               LOCATE LPTR IN BLD.TUF.SCRN<2,2> SETTING VAL THEN
                  TSCNT = DCOUNT(BLD.TUF.SCRN<2,2>,SVM)
                  BLD.TUF.SCRN = DELETE(BLD.TUF.SCRN,2,2,TSCNT)
               END
            END ELSE
               NEW.BLD.TUF.SCRN = INSERT(NEW.BLD.TUF.SCRN,1,0,0,BLD.TUF.SCRN<LPTR+3>)
               NEW.BLD.TUF.SCRN = INSERT(NEW.BLD.TUF.SCRN,1,0,0,BLD.TUF.SCRN<LPTR+2>)
               NEW.BLD.TUF.SCRN = INSERT(NEW.BLD.TUF.SCRN,1,0,0,BLD.TUF.SCRN<LPTR+1>)
               NEW.BLD.TUF.SCRN = INSERT(NEW.BLD.TUF.SCRN,1,0,0,BLD.TUF.SCRN<LPTR>)
            END
         NEXT LPTR
         BLD.TUF.SCRN = NEW.BLD.TUF.SCRN
      END
      RETURN
*
*---- Build Formclass
1000 *
*COPY>CBABP>TUF.STANDARDS
      BLD.TUF.SCRN<TPTR> = FM.NAME:' ':OCONV(TIME(),'MTS'):'  ':OCONV(DATE(),'D')
      BLD.TUF.SCRN<TPTR+1> = FM.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FM.CHILDREN
      FM.OBJECT.NAME = TNAME
      BLD.TUF.SCRN<TPTR+1,-1> = FM.OBJECT.NAME
      BLD.TUF.SCRN<TPTR+2> = FM.ATTR
      BLD.TUF.SCRN<TPTR+3> = FM.ATTR.VAL
      TPTR += 4
      BLD.TUF.SCRN<TPTR> = FT.NAME
      BLD.TUF.SCRN<TPTR+1> = FT.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FT.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = ''
      BLD.TUF.SCRN<TPTR+2> = FT.ATTR
      BLD.TUF.SCRN<TPTR+3> = VAR.6.ATTR.VAL
      BLD.TUF.SCRN<2,2,-1> = TPTR
      TPTR += 4
      BLD.TUF.SCRN<TPTR> = FT.NAME
      BLD.TUF.SCRN<TPTR+1> = FT.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FT.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = ''
      BLD.TUF.SCRN<TPTR+2> = FT.ATTR
      BLD.TUF.SCRN<TPTR+3> = FIX.10.ATTR.VAL
      BLD.TUF.SCRN<2,2,-1> = TPTR
      RETURN
*
*---- Update Title in Formclass
2000 *
      LOCATE 'title' IN BLD.TUF.SCRN<TPTR+2-8>,1 SETTING VAL ELSE NULL
      BEGIN CASE
         CASE INDEX(STMT,'PRIMAC',1) AND DEF = 1
            STMT = ''
         CASE INDEX(STMT,'[',1) AND INDEX(STMT,']',1) AND DEF # 1
            STMT = ''
      END CASE
      IF DEF = 1 THEN
         BLD.TUF.SCRN<TPTR+3-8,VAL> = STMT
      END ELSE
         BLD.TUF.SCRN<TPTR+3-8,VAL> := " ":STMT
      END
      RETURN
*
*---- Build Separator
3000 *
      TPTR += 4
      FS.NO += 1
      BLD.TUF.SCRN<TPTR> = FS.NAME
      BLD.TUF.SCRN<TPTR+1> = FS.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FS.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = FS.OBJECT.NAME:FS.NO
      BLD.TUF.SCRN<TPTR+2> = FS.ATTR
      BLD.TUF.SCRN<TPTR+3> = FS.ATTR.VAL
      BLD.TUF.SCRN<2,2,-1> = TPTR
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '5'
      DIMW = 80*8+2
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18+7
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      RETURN
*
*---- Build Labelclass
4000 *
      TPTR += 4
      FL.NO += 1
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FL.NAME
      BLD.TUF.SCRN<TPTR+1> = FL.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FL.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = FL.OBJECT.NAME:FL.NO
      BLD.TUF.SCRN<TPTR+2> = FL.ATTR
      BLD.TUF.SCRN<TPTR+3> = FL.ATTR.VAL
      LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = STMT
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = LEN(STMT)
      LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = BACKGROUND
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      DIMW = LEN(STMT)*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
* TOOLBAR ^
      IF JIS.FLAG = 0 AND T.Y = 1 THEN
         CORR = CORR - 9
      END
* TOOLBAR v
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      RETURN
*
*---- Build Labelclass FOR IMAGE
4500*
      TPTR += 4
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FL.NAME
      BLD.TUF.SCRN<TPTR+1> = FL.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FL.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = FX.OBJECT.NAME:FLD.NUM
      BLD.TUF.SCRN<TPTR+2> = FL.ATTR
      BLD.TUF.SCRN<TPTR+3> = FL.ATTR.VAL
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = BACKGROUND
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = T.MULTI.LN*16+4
      DIMW = T.MAXL*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"")
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'string')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"")
      END
*     IF T.BITMAP = "" THEN T.BITMAP = "..\VSIPIC\SAMPLE1.BMP"
      LOCATE 'graphic' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,T.BITMAP)
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'graphic')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,T.BITMAP)
      END
      LOCATE 'scale_bmp' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'scale_bmp')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END
      LOCATE 'dynamic' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'dynamic')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END
      LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"lowered")
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'border_style')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"lowered")
      END
      LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = REPLACE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'border_width')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
      END
*     LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
*        GOSUB 5800
*     END ELSE
*        BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'user_data')
*        GOSUB 5800
*     END
      LOCATE 'callbacks' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'callbacks')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"")
      END
      SCNT = DCOUNT(BLD.TUF.SCRN<(TPTR+3),VAL>,SVM)
      FOR SS = SCNT TO 1 STEP - 1
         IF BLD.TUF.SCRN<TPTR+3,VAL,SS>[1,15] = "mouse_b1_double" THEN
            DEL BLD.TUF.SCRN<TPTR+3,VAL,SS>
         END
      NEXT SS
      IF T.USERDATA = "^IMAGE^" THEN
         SCNT = DCOUNT(BLD.TUF.SCRN<(TPTR+3),VAL>,SVM) + 1
         BLD.TUF.SCRN<TPTR+3,VAL,SCNT> = "mouse_b1_double~hCb~":T.USERDATA:FLD.NUM
      END
      RETURN
*
*---- Build Editclass
5000 *
      TPTR += 4
      FE.NO = FLD.NUM
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FE.NAME
      BLD.TUF.SCRN<TPTR+1> = FE.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FE.CHILDREN
      BLD.TUF.SCRN<TPTR+2> = FE.ATTR
      BLD.TUF.SCRN<TPTR+3> = FE.ATTR.VAL
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      DIMW = T.MAXL*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
* TOOLBAR ^
      IF JIS.FLAG = 0 AND T.Y = 1 THEN
         CORR = CORR - 9
      END
* TOOLBAR v
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      IF T.Y.2 # 21 THEN
         LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = TRIM(HELP.MSG)
      END
      IF T.FLDTYPE[1,1] = "M" THEN
         LOCATE 'exit_keys' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'exit_keys')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END
      END
      IF T.FLDTYPE = "D" THEN
         LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 'lowered'
         LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = BACKGROUND
         LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'editable')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
         END
      END
      IF T.FLDTYPE = "D" OR T.TYP = 9 THEN
         LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'foreground')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
         END
      END
      IF T.MULTI.LN + 0 > 1 THEN
         FOR LPTR = 1 TO (T.MULTI.LN * T.MULTI.SP) STEP T.MULTI.SP
            IF LPTR = 1 THEN
               PMCN = 1
               BLD.TUF.SCRN<TPTR+1,-1> = FE.OBJECT.NAME:FE.NO:'_':PMCN
            END ELSE
               TPTR += 4
               PMCN += 1
               BLD.TUF.SCRN<2,2,-1> = TPTR
               BLD.TUF.SCRN<TPTR> = BLD.TUF.SCRN<TPTR-4>
               BLD.TUF.SCRN<TPTR+1> = BLD.TUF.SCRN<TPTR-3>
               BLD.TUF.SCRN<TPTR+2> = BLD.TUF.SCRN<TPTR-2>
               BLD.TUF.SCRN<TPTR+3> = BLD.TUF.SCRN<TPTR-1>
               BLD.TUF.SCRN<TPTR+1,3> = FE.OBJECT.NAME:FE.NO:'_':PMCN
               LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               CORC = T.X*8
               CORR = (T.Y+LPTR-1)*18
               BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
               LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               BLD.TUF.SCRN<TPTR+3,VAL> = T.Y + (LPTR - T.MULTI.SP) + T.MULTI.SP - 1
               LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
                  BLD.TUF.SCRN<TPTR+2> = DELETE(BLD.TUF.SCRN<TPTR+2>,1,VAL,0)
                  BLD.TUF.SCRN<TPTR+3> = DELETE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0)
               END
            END
            LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               GOSUB 5800
            END
         NEXT LPTR
      END ELSE
         BLD.TUF.SCRN<TPTR+1,-1> = FE.OBJECT.NAME:FE.NO
         LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            GOSUB 5800
         END
      END
      RETURN
*
5500 *
      RETURN
5800*
      BEGIN CASE
         CASE T.USERDATA = ""
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE T.USERDATA = "^VALUE^"
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
         CASE T.USERDATA = "^IMAGE^"
*           BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA:FLD.NUM
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
         CASE NOT(NUM(T.USERDATA))
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE NUM(T.USERDATA) AND T.USERDATA > 0
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE 1
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
      END CASE
      RETURN
*
*---- Build Textclass
6000 *
      BEGIN CASE
         CASE T.PMSG # '' AND SAVE.FLD.NUM = ''
            SAVE.X = T.X
            SAVE.MAXL = T.MAXL
            SAVE.Y = T.Y
            SAVE.FLD.NUM = FLD.NUM
            FLD.NUM = 71
            T.X += T.MAXL+1
            T.MAXL = LEN(T.PMSG)
            GOSUB 6100
            LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = 3
            LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = 'raised'
            LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = 1
            LOCATE 'font' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = FIX.10.FONT
            LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
            END
            LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
            END ELSE
               BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
               BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
            END
            SAVE.LBL.TPTR = TPTR
            T.X = SAVE.X
            T.Y = SAVE.Y
            T.MAXL = SAVE.MAXL
            FLD.NUM = 70
            GOT.PROMPT = 'Y'
            GOSUB 6100
            LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<TPTR+3,VAL> = 0
            SAVE.TPTR = TPTR
         CASE T.PMSG # ''
            GOSUB 6200
            LOCATE 'char_col' IN BLD.TUF.SCRN<SAVE.TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<SAVE.TPTR+3,VAL> = 0
            GOSUB 6300
            LOCATE 'char_col' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
            BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = 3
            IF T.MAXL > SAVE.MAXL THEN
               SAVE.MAXL = T.MAXL
            END
            LOCATE 'coordinates' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
            CORC = (SAVE.MAXL+1)*8
            CORR = T.Y*18
            BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = CORC:SVM:CORR
         CASE 1
            GOSUB 6100
      END CASE
      RETURN
*
6100 *
      TPTR += 4
      FX.NO = FLD.NUM
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FX.NAME
      BLD.TUF.SCRN<TPTR+1> = FX.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FX.CHILDREN
      BLD.TUF.SCRN<TPTR+2> = FX.ATTR
      BLD.TUF.SCRN<TPTR+3> = FX.ATTR.VAL
      LOCATE 'max_len' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      DIMW = T.MAXL*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
* TOOLBAR ^
      IF JIS.FLAG = 0 AND T.Y = 1 THEN
         CORR = CORR - 9
      END
* TOOLBAR v
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      IF T.Y.2 # 21 THEN
         LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = TRIM(HELP.MSG)
      END
      IF T.FLDTYPE[1,1] = "M" THEN
         LOCATE 'exit_keys' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'exit_keys')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
         END
      END
      IF T.FLDTYPE = "D" THEN
         LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<TPTR+3,VAL> = 'lowered'
         LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,BACKGROUND)
         END
         LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'editable')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
         END
      END
      IF T.FLDTYPE = "D" OR T.TYP = 9 THEN
         LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'foreground')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CBLUE)
         END
      END
      IF T.BLANK = "Y" THEN
         LOCATE 'password' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'password')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,"1")
         END
      END
      IF T.MULTI.LN + 0 > 1 THEN
         FOR LPTR = 1 TO (T.MULTI.LN * T.MULTI.SP) STEP T.MULTI.SP
            IF LPTR = 1 THEN
               PMCN = 1
               BLD.TUF.SCRN<TPTR+1,-1> = FX.OBJECT.NAME:FX.NO:'_':PMCN
            END ELSE
               TPTR += 4
               PMCN += 1
               BLD.TUF.SCRN<2,2,-1> = TPTR
               BLD.TUF.SCRN<TPTR> = BLD.TUF.SCRN<TPTR-4>
               BLD.TUF.SCRN<TPTR+1> = BLD.TUF.SCRN<TPTR-3>
               BLD.TUF.SCRN<TPTR+2> = BLD.TUF.SCRN<TPTR-2>
               BLD.TUF.SCRN<TPTR+3> = BLD.TUF.SCRN<TPTR-1>
               BLD.TUF.SCRN<TPTR+1,3> = FX.OBJECT.NAME:FX.NO:'_':PMCN
               LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               CORC = T.X*8
               CORR = (T.Y+LPTR-1)*18
               BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
               LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               BLD.TUF.SCRN<TPTR+3,VAL> = T.Y + (LPTR - T.MULTI.SP) + T.MULTI.SP - 1
               LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
                  BLD.TUF.SCRN<TPTR+2> = DELETE(BLD.TUF.SCRN<TPTR+2>,1,VAL,0)
                  BLD.TUF.SCRN<TPTR+3> = DELETE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0)
               END
            END
            LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               GOSUB 5800
            END
         NEXT LPTR
      END ELSE
         BLD.TUF.SCRN<TPTR+1,-1> = FX.OBJECT.NAME:FX.NO
         LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            GOSUB 5800
         END
      END
      RETURN
*
*---- Update Prompt Message Input Area
6200 *
      LOCATE 'max_len' IN BLD.TUF.SCRN<SAVE.TPTR+2>,1 SETTING VAL ELSE NULL
      IF BLD.TUF.SCRN<SAVE.TPTR+3,VAL> < T.MAXL THEN
         BLD.TUF.SCRN<SAVE.TPTR+3,VAL> = T.MAXL
         LOCATE 'char_col' IN BLD.TUF.SCRN<SAVE.TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<SAVE.TPTR+3,VAL> = T.X+T.MAXL
         LOCATE 'char_length' IN BLD.TUF.SCRN<SAVE.TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<SAVE.TPTR+3,VAL> = T.MAXL
         LOCATE 'dimensions' IN BLD.TUF.SCRN<SAVE.TPTR+2>,1 SETTING VAL ELSE NULL
         DIMH = '17'
         DIMW = T.MAXL*8+4
         BLD.TUF.SCRN<SAVE.TPTR+3,VAL> = DIMW:SVM:DIMH
      END
      RETURN
*
*---- Update Prompt Message Label Area
6300 *
      LOCATE 'max_len' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
      IF BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> < LEN(T.PMSG)+1 THEN
         BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = LEN(T.PMSG)+1
         LOCATE 'char_col' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = T.X+T.MAXL
         LOCATE 'char_length' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
         BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = LEN(T.PMSG)+1
         LOCATE 'dimensions' IN BLD.TUF.SCRN<SAVE.LBL.TPTR+2>,1 SETTING VAL ELSE NULL
         DIMH = '17'
         DIMW = LEN(T.PMSG)*8+4
         BLD.TUF.SCRN<SAVE.LBL.TPTR+3,VAL> = DIMW:SVM:DIMH
      END
      RETURN
*
*---- Build Toggleclass
7000 *
      TPTR += 4
      FG.NO = FLD.NUM
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FG.NAME
      BLD.TUF.SCRN<TPTR+1> = FG.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FG.CHILDREN
      BLD.TUF.SCRN<TPTR+2> = FG.ATTR
      BLD.TUF.SCRN<TPTR+3> = FG.ATTR.VAL
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      IF T.MAXL = 1 THEN
         DIMW = (T.MAXL*8)+19+5
      END ELSE
         DIMW = (T.MAXL*8)+19
      END
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'drawable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      IF T.MULTI.LN + 0 > 1 THEN
         FOR LPTR = 1 TO (T.MULTI.LN * T.MULTI.SP) STEP T.MULTI.SP
            IF LPTR = 1 THEN
               PMCN = 1
               BLD.TUF.SCRN<TPTR+1,-1> = FG.OBJECT.NAME:FG.NO:'_':PMCN
            END ELSE
               TPTR += 4
               PMCN += 1
               BLD.TUF.SCRN<2,2,-1> = TPTR
               BLD.TUF.SCRN<TPTR> = BLD.TUF.SCRN<TPTR-4>
               BLD.TUF.SCRN<TPTR+1> = BLD.TUF.SCRN<TPTR-3>
               BLD.TUF.SCRN<TPTR+2> = BLD.TUF.SCRN<TPTR-2>
               BLD.TUF.SCRN<TPTR+3> = BLD.TUF.SCRN<TPTR-1>
               BLD.TUF.SCRN<TPTR+1,3> = FG.OBJECT.NAME:FG.NO:'_':PMCN
               LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               CORC = T.X*8
               CORR = (T.Y+LPTR-1)*18
               BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
               LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               BLD.TUF.SCRN<TPTR+3,VAL> = T.Y + (LPTR - T.MULTI.SP) + T.MULTI.SP - 1
            END
         NEXT LPTR
      END ELSE
         BLD.TUF.SCRN<TPTR+1,-1> = FG.OBJECT.NAME:FG.NO
      END
      RETURN
*
*---- Build Comboclass
8000 *
      TPTR += 4
      FC.NO = FLD.NUM
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FC.NAME
      BLD.TUF.SCRN<TPTR+1> = FC.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FC.CHILDREN
      BLD.TUF.SCRN<TPTR+2> = FC.ATTR
      BLD.TUF.SCRN<TPTR+3> = FC.ATTR.VAL
      LOCATE 'font' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = VAR.6.FONT
*DT      IF T.O.R = "O" THEN
*DT         LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*DT         BLD.TUF.SCRN<TPTR+3,VAL> = 1
*DT      END
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '20'
      IF T.MAXL = 1 THEN
         DIMW = (T.MAXL*8)+19+5
      END ELSE
         DIMW = (T.MAXL*8)+19+T.MAXL
      END
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      LOCATE 'item_set' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      IF T.O.R = "O" THEN
         T.VALDAT = " ,":T.VALDAT
      END
      BLD.TUF.SCRN<TPTR+3,VAL> = CHANGE(T.VALDAT,",",SVM)
      IF T.Y.2 # 21 AND T.Y.2 # 22 THEN
         LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            BLD.TUF.SCRN<TPTR+3> = TRIM(HELP.MSG)
         END ELSE
            BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'help_string')
            BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,TRIM(HELP.MSG))
         END
      END
      IF T.MULTI.LN + 0 > 1 THEN
         FOR LPTR = 1 TO (T.MULTI.LN * T.MULTI.SP) STEP T.MULTI.SP
            IF LPTR = 1 THEN
               PMCN = 1
               BLD.TUF.SCRN<TPTR+1,-1> = FC.OBJECT.NAME:FC.NO:'_':PMCN
            END ELSE
               TPTR += 4
               PMCN += 1
               BLD.TUF.SCRN<2,2,-1> = TPTR
               BLD.TUF.SCRN<TPTR> = BLD.TUF.SCRN<TPTR-4>
               BLD.TUF.SCRN<TPTR+1> = BLD.TUF.SCRN<TPTR-3>
               BLD.TUF.SCRN<TPTR+2> = BLD.TUF.SCRN<TPTR-2>
               BLD.TUF.SCRN<TPTR+3> = BLD.TUF.SCRN<TPTR-1>
               BLD.TUF.SCRN<TPTR+1,3> = FC.OBJECT.NAME:FC.NO:'_':PMCN
               LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               CORC = T.X*8
               CORR = (T.Y+LPTR-1)*18
               BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
               LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
               BLD.TUF.SCRN<TPTR+3,VAL> = T.Y + (LPTR - T.MULTI.SP) + T.MULTI.SP - 1
               LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
                  BLD.TUF.SCRN<TPTR+2> = DELETE(BLD.TUF.SCRN<TPTR+2>,1,VAL,0)
                  BLD.TUF.SCRN<TPTR+3> = DELETE(BLD.TUF.SCRN<TPTR+3>,1,VAL,0)
               END
            END
            LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
               GOSUB 5800
            END
         NEXT LPTR
      END ELSE
         BLD.TUF.SCRN<TPTR+1,-1> = FC.OBJECT.NAME:FC.NO
         LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
            GOSUB 5800
         END
      END
      RETURN
*
*--- CALLS FOR SYSCOM
*
91000 *
      ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
      ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
      ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
      RETURN
   END
