      SUBROUTINE TBAR_BLD_SUB (TMODE, TFILE, TNAME, TOOLBAR_REC, ERROR)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
*********************************************************************
*
*
*---- DIMENSIONS AND EQUATES
*
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>TCC
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INITILAIZE SYSCOM
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      ERROR = 0
*
*---- INIT SCREEN
*
      LOCATE "TBAR_BLD" IN ECD.SCRN.NAME, 1 SETTING ECD.SCRN.NO ELSE
         ERRMSG = "Cannot match program with a screen"
         GOSUB 91000
         ERROR = 99
         GOTO 99999
      END
      ECD.ACTION = 2
      CALL SCRN.EDIT
*     IF ECD.SCRN.PC<ECD.SCRN.NO> = "" THEN
*        ERRMSG = "This function is only valid with SBClient Software"
*        GOSUB 91000
*        GOTO 99999
*     END
*
*---- INIT VARS
*
      PAGE.SIZE = 12
      BEGIN.PAGE = 8
      LINE.SPACE = 1
      PREV.FILE = ""
      PREV.NAME = ""
      TBAR_TYP = 1
      TBAR_VAL = 2
      TBAR_BIT = 3
      TBAR_HLP = 4
      PMCBARS.OPEN = 1
      OPEN "","PMCBARS" TO PMCBARS ELSE
         ERRMSG = "Cannot open PMCBARS File"
         GOSUB 91000
         PMCBARS.OPEN = 0
      END
      IF PMCBARS.OPEN THEN
         READ MBAR_REC FROM PMCBARS, "MAIN" ELSE MBAR_REC = "TOOLBAR"
         IF MBAR_REC<1>[1,7] # "TOOLBAR" THEN
            ERRMSG = "Invalid 'MAIN' Toolbar Name"
            GOSUB 91000
            MBAR_REC = ""
         END
      END ELSE
         MBAR_REC = ""
      END
      GOSUB 40500
      READ TOOLBAR_TYPES FROM CONTROL, "TOOLBAR_TYPES" ELSE TOOLBAR_TYPES = ""
      GOTO 110
*
*---- MAIN PROCESS
*
100*
      ECD.ACTION = 6
      CALL SCRN.EDIT
110*
      NEW = 1
      LINES = 0
      OLD.START.LINE = 0
      FOR LN = 1 TO SCV.REC.SIZE
         SCV.REC(LN)<ECD.SCRN.NO> = ""
      NEXT LN
      TBAR_REC = ""
      ECD.NUM = 1
      IF TFILE # "" AND TNAME # "" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TFILE
         ECD.RET.VALUE = TFILE
         ECD.ACTION = 5
      END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PREV.FILE
         ECD.ACTION = 4
      END
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = ""
      CASE 1
         OPEN "",ECD.RET.VALUE TO WORK_FILE ELSE
            ERRMSG = "Invalid Toolbar File"
            GOSUB 91000
            IF TFILE # "" AND TNAME # "" THEN
               GOTO 99999
            END ELSE
               GOTO 100
            END
         END
      END CASE
      PREV.FILE = ECD.RET.VALUE
200*
      ECD.NUM = 2
      IF TFILE # "" AND TNAME # "" THEN
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TNAME
         ECD.RET.VALUE = TNAME
         ECD.ACTION = 5
      END ELSE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PREV.NAME
         ECD.ACTION = 4
      END
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         IF TFILE # "" AND TNAME # "" THEN
            GOTO 99999
         END ELSE
            GOTO 100
         END
      CASE ECD.RET.VALUE = ""
         GOTO 200
      CASE TMODE = "INQ"
         IF TOOLBAR_REC # "" THEN
            TBAR_REC = TOOLBAR_REC
         END ELSE
            READ TBAR_REC FROM WORK_FILE, ECD.RET.VALUE ELSE TBAR_REC = ""
         END
         IF TBAR_REC<1>[1,7] # "TOOLBAR" THEN
            ERRMSG = "Invalid Toolbar Name"
            GOSUB 91000
            IF TFILE # "" AND TNAME # "" THEN
               GOTO 99999
            END ELSE
               GOTO 200
            END
         END
      CASE 1
         READU TBAR_REC FROM WORK_FILE, ECD.RET.VALUE ELSE TBAR_REC = "TOOLBAR"
         IF TBAR_REC<1>[1,7] # "TOOLBAR" THEN
            RELEASE WORK_FILE, ECD.RET.VALUE
            ERRMSG = "Invalid Toolbar Name"
            GOSUB 91000
            IF TFILE # "" AND TNAME # "" THEN
               GOTO 99999
            END ELSE
               GOTO 200
            END
         END
      END CASE
      PREV.NAME = ECD.RET.VALUE
      ECD.NUM = 6
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TBAR_REC<1>[9,30]
      ECD.ACTION = 5
      CALL SCRN.EDIT
      LINES = DCOUNT(TBAR_REC<2>,VM)
      IF LINES OR TMODE = "INQ" THEN
         NEW = 0
         GOSUB 40100
      END ELSE
         GOSUB 850
         REQUEST = "A"
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 800
            GOSUB 10000
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
      END
      GOSUB 80000
      MORE = 1
      LOOP
         BEGIN CASE
         CASE TMODE = "INQ"
            ECD.NUM = 7
         CASE PREV.NAME MATCH "'MAIN_'6N"
            ECD.NUM = 8
         CASE 1
            ECD.NUM = 3
         END CASE
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
         ECD.ACTION=4
         CALL SCRN.EDIT
         REQUEST = ECD.RET.VALUE
         BEGIN CASE
         CASE REQUEST = "END" OR REQUEST = "E"
            IF TMODE # "INQ" THEN RELEASE WORK_FILE, PREV.NAME
            MORE = 0
         CASE REQUEST = "F" AND TMODE # "INQ"
            GOSUB 600
            IF NO.LINES < 1 THEN
               ECD.NUM = 5
               SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
               IF NEW THEN
                  ECD.PMSG = "Invalid ToolBar.   Start from scratch (Y/N)"
                  ECD.ACTION = 4
                  CALL SCRN.EDIT
                  IF ECD.RET.VALUE = "Y" THEN
                     RELEASE WORK_FILE, PREV.NAME
                     MORE = 0
                  END
               END ELSE
                  ECD.PMSG = "You are about to delete this ToolBar.   Continue (Y/N)"
                  ECD.ACTION = 4
                  CALL SCRN.EDIT
                  IF ECD.RET.VALUE = "Y" THEN
                     DELETE WORK_FILE, PREV.NAME
                     MORE = 0
                  END
               END
            END ELSE
               WRITE TBAR_REC ON WORK_FILE, PREV.NAME
               IF PREV.NAME = "MAIN" AND PREV.FILE = "PMCBARS" THEN
                  MBAR_REC = TBAR_REC
                  GOSUB 40500
               END
               MORE = 0
            END
         CASE REQUEST = "U"
            GOSUB 70000
            MORE = 0
         CASE REQUEST = "V" AND ECD.SCRN.PC<ECD.SCRN.NO> # ""
            GOSUB 600
            IF NO.LINES THEN
               CALL TBAR_VIEW_SUB (TBAR_REC, PREV.NAME, SIV_BAR_ACTIVE, SIV_BAR_HNDL, ECD.SCRN.PC, ECD.SCRN.NO, ERROR)
            END
         CASE (REQUEST = "MU" OR REQUEST = "JU") AND TMODE # "INQ"
            GOSUB 30000
            IF LN.NO > 1 THEN
               LN = LN.NO
               IF REQUEST = "JU" THEN
                  GOSUB 35000
               END ELSE
                  LN.NO = ""
               END
               TEMP = ""
               TEMP<1> = SCV.REC(12)<ECD.SCRN.NO,LN>
               TEMP<2> = SCV.REC(13)<ECD.SCRN.NO,LN>
               TEMP<3> = SCV.REC(14)<ECD.SCRN.NO,LN>
               TEMP<4> = SCV.REC(15)<ECD.SCRN.NO,LN>
               GOSUB 700
               IF LN.NO = "" THEN
                  LN = LN - 1
               END ELSE
                  LN = LN.NO
               END
               GOSUB 800
               SCV.REC(12)<ECD.SCRN.NO,LN> = TEMP<1>
               SCV.REC(13)<ECD.SCRN.NO,LN> = TEMP<2>
               SCV.REC(14)<ECD.SCRN.NO,LN> = TEMP<3>
               SCV.REC(15)<ECD.SCRN.NO,LN> = TEMP<4>
               OLD.START.LINE = 0
               GOSUB 80000
            END
         CASE (REQUEST = "MD" OR REQUEST = "JD") AND TMODE # "INQ"
            GOSUB 30000
            IF LN.NO < LINES THEN
               LN = LN.NO
               IF REQUEST = "JD" THEN
                  GOSUB 35000
               END ELSE
                  LN.NO = ""
               END
               TEMP = ""
               TEMP<1> = SCV.REC(12)<ECD.SCRN.NO,LN>
               TEMP<2> = SCV.REC(13)<ECD.SCRN.NO,LN>
               TEMP<3> = SCV.REC(14)<ECD.SCRN.NO,LN>
               TEMP<4> = SCV.REC(15)<ECD.SCRN.NO,LN>
               GOSUB 700
               IF LN.NO = "" THEN
                  LN = LN + 1
               END ELSE
                  LN = LN.NO
               END
               GOSUB 800
               SCV.REC(12)<ECD.SCRN.NO,LN> = TEMP<1>
               SCV.REC(13)<ECD.SCRN.NO,LN> = TEMP<2>
               SCV.REC(14)<ECD.SCRN.NO,LN> = TEMP<3>
               SCV.REC(15)<ECD.SCRN.NO,LN> = TEMP<4>
               OLD.START.LINE = 0
               GOSUB 80000
            END
         CASE REQUEST = "A" AND TMODE # "INQ"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 800
               GOSUB 10000
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 80000
         CASE REQUEST = "I" AND TMODE # "INQ"
            GOSUB 30000
            IF LN.NO THEN
               LN = LN.NO
               LOOP
                  GOSUB 800
                  OLD.START.LINE = 0
                  GOSUB 80000
                  GOSUB 10000
               UNTIL ECD.RET.VALUE = "END" DO
                  LN = LN + 1
               REPEAT
               GOSUB 80000
            END
         CASE REQUEST = "C" AND LINES AND TMODE # "INQ"
            GOSUB 30000
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 10000
            END
         CASE REQUEST = "D" AND LINES AND TMODE # "INQ"
            GOSUB 30000
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 700
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 80000
         CASE REQUEST = "S" OR REQUEST = "SF"
            LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 80000
         CASE REQUEST = "SR"
            LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = LINES
            IF LN < 1 THEN LN = 1
            GOSUB 80000
         CASE REQUEST = "ST"
            LN = 1
            GOSUB 80000
         CASE REQUEST = "SB"
            LN = LINES
            IF LN < 1 THEN LN = 1
            GOSUB 80000
         END CASE
      WHILE MORE DO REPEAT
      IF TFILE # "" AND TNAME # "" THEN
         ECD.ACTION=99
         CALL SCRN.EDIT
         GOTO 99999
      END ELSE
         GOTO 100
      END
*
*---------------------*
*---- SUBROUTINES ----*
*---------------------*
*
*---- LOAD TBAR_REC For File or View
*
600*
      NO.LINES = 0
      TBAR_REC = ""
      TBAR_SEQ = ""
      TBAR_REC<1> = "TOOLBAR ":OCONV(TIMEDATE(),"D")
      FOR N = LINES TO 1 STEP - 1
         BEGIN CASE
         CASE SCV.REC(12)<ECD.SCRN.NO,N> = ""
            IFND = 0
         CASE SCV.REC(12)<ECD.SCRN.NO,N> = 1
            IFND = 1
            INS "" BEFORE TBAR_REC<2,IFND>
            INS IFND BEFORE TBAR_SEQ<IFND>
         CASE SCV.REC(12)<ECD.SCRN.NO,N> = 2
            BEGIN CASE
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "PMCVERSION"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "END"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "" OR SCV.REC(13)<ECD.SCRN.NO,N> = "{enter}"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "}"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "]"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE SCV.REC(13)<ECD.SCRN.NO,N> = "{prtsc}"
               IFND = 1
               INS "" BEFORE TBAR_REC<2,IFND>
               INS IFND BEFORE TBAR_SEQ<IFND>
            CASE 1
               LOCATE SCV.REC(14)<ECD.SCRN.NO,N> IN TOOLBAR_TYPES<2>,1 SETTING FND THEN
                  IF TOOLBAR_TYPES<4,FND> > 0 THEN
                     LOCATE TOOLBAR_TYPES<4,FND> IN TBAR_SEQ,1 BY "AR" SETTING IFND ELSE NULL
                     INS "" BEFORE TBAR_REC<2,IFND>
                     INS TOOLBAR_TYPES<4,FND> BEFORE TBAR_SEQ<IFND>
                  END ELSE
                     IFND = 0
                  END
               END ELSE
                  IF SCV.REC(14)<ECD.SCRN.NO,N> MATCH "0X'.BMP'" THEN
                     LOCATE "8888" IN TBAR_SEQ,1 BY "AR" SETTING IFND ELSE NULL
                     INS "" BEFORE TBAR_REC<2,IFND>
                     INS "8888" BEFORE TBAR_SEQ<IFND>
                  END ELSE
                     LOCATE "9999" IN TBAR_SEQ,1 BY "AR" SETTING IFND ELSE NULL
                     INS "" BEFORE TBAR_REC<2,IFND>
                     INS "9999" BEFORE TBAR_SEQ<IFND>
                  END
               END
            END CASE
         END CASE
         IF IFND THEN
            NO.LINES = NO.LINES + 1
            TBAR_REC<2,IFND,TBAR_TYP> = SCV.REC(12)<ECD.SCRN.NO,N>
            TBAR_REC<2,IFND,TBAR_VAL> = SCV.REC(13)<ECD.SCRN.NO,N>
            IF SCV.REC(14)<ECD.SCRN.NO,N> MATCH "0X'.BMP'" THEN
               TBAR_REC<2,IFND,TBAR_BIT> = "..\VSIPIC\BUTTONS\" : SCV.REC(14)<ECD.SCRN.NO,N>
            END ELSE
               TBAR_REC<2,IFND,TBAR_BIT> = SCV.REC(14)<ECD.SCRN.NO,N>
            END
            TBAR_REC<2,IFND,TBAR_HLP> = SCV.REC(15)<ECD.SCRN.NO,N>
         END
      NEXT N
      RETURN
*
*---- DELETE A LINE
*
700*
      DEL SCV.REC(11)<ECD.SCRN.NO,LN>
      DEL SCV.REC(12)<ECD.SCRN.NO,LN>
      DEL SCV.REC(13)<ECD.SCRN.NO,LN>
      DEL SCV.REC(14)<ECD.SCRN.NO,LN>
      DEL SCV.REC(15)<ECD.SCRN.NO,LN>
      LINES = LINES - 1
      RETURN
*
*---- INSERT A LINE
*
800*
      INS "" BEFORE SCV.REC(11)<ECD.SCRN.NO,LN>
      INS "" BEFORE SCV.REC(12)<ECD.SCRN.NO,LN>
      INS "" BEFORE SCV.REC(13)<ECD.SCRN.NO,LN>
      INS "" BEFORE SCV.REC(14)<ECD.SCRN.NO,LN>
      INS "" BEFORE SCV.REC(15)<ECD.SCRN.NO,LN>
      LINES = LINES + 1
      RETURN
*
*---- INSERT MBAR_REC
*
850*
      FOR LN = 1 TO MCNT
         GOSUB 800
         SCV.REC(11)<ECD.SCRN.NO,LN> = LN
         SCV.REC(12)<ECD.SCRN.NO,LN> = MBAR_REC<2,LN,TBAR_TYP>
         SCV.REC(13)<ECD.SCRN.NO,LN> = MBAR_REC<2,LN,TBAR_VAL>
         SCV.REC(14)<ECD.SCRN.NO,LN> = MBAR_REC<2,LN,TBAR_BIT>
         SCV.REC(15)<ECD.SCRN.NO,LN> = MBAR_REC<2,LN,TBAR_HLP>
      NEXT LN
      RETURN
*
*---- LINE ENTRY
*
10000*
      GOSUB 80000
      ECD.NUM = 11
      ECD.SUB.NUM = LN
      SCV.REC(ECD.NUM)<ECD.SCRN.NO,LN> = LN
      ECD.ACTION = 5
      CALL SCRN.EDIT
      IF SCV.REC(12)<ECD.SCRN.NO,LN> = "M" THEN SCV.REC(12)<ECD.SCRN.NO,LN> = ""
      TEMP = ""
      TEMP<1> = SCV.REC(12)<ECD.SCRN.NO,LN>
      TEMP<2> = SCV.REC(13)<ECD.SCRN.NO,LN>
      TEMP<3> = SCV.REC(14)<ECD.SCRN.NO,LN>
      TEMP<4> = SCV.REC(15)<ECD.SCRN.NO,LN>
11000*
      ECD.NUM = 12
      ECD.SUB.NUM = LN
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 19999
      CASE ECD.RET.VALUE = ""
         SCV.REC(12)<ECD.SCRN.NO,LN> = TEMP<1>
         GOTO 11000
      CASE ECD.RET.VALUE = 1
      CASE ECD.RET.VALUE = 2
      CASE ECD.RET.VALUE = "M" AND LN = 1 AND MBAR_REC<2> # ""
*
*--- DELETE DUPLICATE MAIN BAR
         FOR LN = 1 TO MCNT
            PTR = 1
            LOOP
               LOCATE MBAR_REC<2,LN,TBAR_BIT> IN SCV.REC(14)<ECD.SCRN.NO>,PTR SETTING FND ELSE FND = 0
               BEGIN CASE
               CASE FND = 0
                  PTR = 0
               CASE MBAR_REC<2,LN,TBAR_TYP> # SCV.REC(12)<ECD.SCRN.NO,FND>
               CASE MBAR_REC<2,LN,TBAR_VAL> # SCV.REC(13)<ECD.SCRN.NO,FND>
               CASE 1
                  PTR = 0
               END CASE
            WHILE PTR DO
               PTR = FND + 1
            REPEAT
            IF FND THEN
               LN.NO = LN
               LN = FND
               GOSUB 700
               LN = LN.NO
            END
         NEXT LN
*
*--- INSERT MAINBAR
         GOSUB 850
         OLD.START.LINE = 0
         GOSUB 700
         LN = LN - 1
         GOTO 19999
      CASE 1
         SCV.REC(12)<ECD.SCRN.NO,LN> = TEMP<1>
         GOTO 11000
      END CASE
12000*
      ECD.NUM = 13
      ECD.SUB.NUM = LN
      BEGIN CASE
      CASE SCV.REC(13)<ECD.SCRN.NO,LN> = "END"
         SCV.REC(13)<ECD.SCRN.NO,LN> = QUOTE(SCV.REC(13)<ECD.SCRN.NO,LN>)
      CASE SCV.REC(13)<ECD.SCRN.NO,LN> = "}"
         SCV.REC(13)<ECD.SCRN.NO,LN> = QUOTE(SCV.REC(13)<ECD.SCRN.NO,LN>)
      CASE SCV.REC(13)<ECD.SCRN.NO,LN> = "]"
         SCV.REC(13)<ECD.SCRN.NO,LN> = QUOTE(SCV.REC(13)<ECD.SCRN.NO,LN>)
      END CASE
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 19999
      CASE 1
         ECD.RET.VALUE = TRIM(ECD.RET.VALUE,'"',"B")
         SCV.REC(13)<ECD.SCRN.NO,LN> = ECD.RET.VALUE
         ECD.NUM = 13
         ECD.SUB.NUM = LN
         ECD.ACTION = 5
         CALL SCRN.EDIT
         PTR = 1
         LOOP
            LOCATE ECD.RET.VALUE IN SCV.REC(13)<ECD.SCRN.NO>,PTR SETTING FND ELSE FND = 0
            BEGIN CASE
            CASE FND = 0
               PTR = 0
            CASE FND = LN
               PTR = FND + 1
            CASE 1
               PTR = 0
            END CASE
         WHILE PTR DO
         REPEAT
         IF FND THEN
            SCV.REC(13)<ECD.SCRN.NO,LN> = TEMP<2>
            GOTO 12000
         END
      END CASE
13000*
      ECD.NUM = 14
      ECD.SUB.NUM = LN
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 19999
      CASE NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0
         IF TOOLBAR_TYPES<2,ECD.RET.VALUE> # "" THEN
            SCV.REC(14)<ECD.SCRN.NO,LN> = TOOLBAR_TYPES<2,ECD.RET.VALUE>
            SCV.REC(15)<ECD.SCRN.NO,LN> = TOOLBAR_TYPES<3,ECD.RET.VALUE>
            ECD.NUM = 14
            ECD.SUB.NUM = LN
            ECD.ACTION = 5
            CALL SCRN.EDIT
         END
      CASE ECD.RET.VALUE MATCH "0X'.BMP'"
         LOCATE ECD.RET.VALUE IN TOOLBAR_TYPES<2>,1 SETTING FND THEN
            SCV.REC(14)<ECD.SCRN.NO,LN> = TOOLBAR_TYPES<2,FND>
            SCV.REC(15)<ECD.SCRN.NO,LN> = TOOLBAR_TYPES<3,FND>
            ECD.NUM = 14
            ECD.SUB.NUM = LN
            ECD.ACTION = 5
            CALL SCRN.EDIT
         END
      CASE 1
      END CASE
14000*
      ECD.NUM = 15
      ECD.SUB.NUM = LN
      ECD.ACTION = 4
      CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 19999
      CASE 1
      END CASE
19999*
      IF ECD.RET.VALUE = "END" THEN
         SCV.REC(12)<ECD.SCRN.NO,LN> = TEMP<1>
         SCV.REC(13)<ECD.SCRN.NO,LN> = TEMP<2>
         SCV.REC(14)<ECD.SCRN.NO,LN> = TEMP<3>
         SCV.REC(15)<ECD.SCRN.NO,LN> = TEMP<4>
         OLD.START.LINE = 0
         IF REQUEST = "A" OR REQUEST = "I" THEN GOSUB 700
      END
      LINES = DCOUNT(SCV.REC(12)<ECD.SCRN.NO>,VM)
      RETURN
*
*---- ENTER LINE NUMBER
*
30000*
      GOSUB 80000
      ECD.NUM = 4
      ECD.MAXV = LAST.LINE
      ECD.MINV = START.LINE
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.ACTION=4
      CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
      RETURN
*
*---- ENTER TO LINE NUMBER
*
35000*
      ECD.NUM = 4
      ECD.PMSG = "Enter TO Line Number"
      IF REQUEST = "JU" THEN
         ECD.MAXV = LN - 1
         ECD.MINV = 1
      END ELSE
         ECD.MAXV = LINES
         ECD.MINV = LN + 1
      END
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.ACTION=4
      CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
      RETURN
*
*---- LOAD SCV.REC
40000*
      SCV.REC(11)<ECD.SCRN.NO> = ""
      SCV.REC(12)<ECD.SCRN.NO> = ""
      SCV.REC(13)<ECD.SCRN.NO> = ""
      SCV.REC(14)<ECD.SCRN.NO> = ""
      SCV.REC(15)<ECD.SCRN.NO> = ""
40100*
      FOR LN = 1 TO LINES
         SCV.REC(11)<ECD.SCRN.NO,LN> = LN
         SCV.REC(12)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_TYP>
         SCV.REC(13)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_VAL>
         BEGIN CASE
         CASE TBAR_REC<2,LN,TBAR_BIT>[1,19] = "$SBOPATH\..\VSIPIC\"
            SCV.REC(14)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_BIT>[20,12]
         CASE TBAR_REC<2,LN,TBAR_BIT>[1,18] = "..\VSIPIC\BUTTONS\"
            SCV.REC(14)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_BIT>[19,12]
         CASE TBAR_REC<2,LN,TBAR_BIT>[1,10] = "..\VSIPIC\"
            SCV.REC(14)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_BIT>[11,12]
         CASE 1
            SCV.REC(14)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_BIT>
         END CASE
         SCV.REC(15)<ECD.SCRN.NO,LN> = TBAR_REC<2,LN,TBAR_HLP>
      NEXT LN
      LN = 1
      RETURN
*
*---- SETUP MBAR_REC
40500*
      MCNT = DCOUNT(MBAR_REC<2>,VM)
      FOR LN = 1 TO MCNT
         BEGIN CASE
         CASE MBAR_REC<2,LN,TBAR_BIT>[1,19] = "$SBOPATH\..\VSIPIC\"
            MBAR_REC<2,LN,TBAR_BIT> = MBAR_REC<2,LN,TBAR_BIT>[20,12]
         CASE MBAR_REC<2,LN,TBAR_BIT>[1,18] = "..\VSIPIC\BUTTONS\"
            MBAR_REC<2,LN,TBAR_BIT> = MBAR_REC<2,LN,TBAR_BIT>[19,12]
         CASE MBAR_REC<2,LN,TBAR_BIT>[1,10] = "..\VSIPIC\"
            MBAR_REC<2,LN,TBAR_BIT> = MBAR_REC<2,LN,TBAR_BIT>[11,12]
         END CASE
      NEXT LN
      RETURN
*
*---- UPDATE ALL FILE
70000*
      SAVE_REC = TBAR_REC
      SCNT = DCOUNT(TBAR_REC<2>,VM)
      FOR LN = 1 TO SCNT
         BEGIN CASE
         CASE SAVE_REC<2,LN,TBAR_BIT>[1,19] = "$SBOPATH\..\VSIPIC\"
            SAVE_REC<2,LN,TBAR_BIT> = SAVE_REC<2,LN,TBAR_BIT>[20,12]
         CASE SAVE_REC<2,LN,TBAR_BIT>[1,18] = "..\VSIPIC\BUTTONS\"
            SAVE_REC<2,LN,TBAR_BIT> = SAVE_REC<2,LN,TBAR_BIT>[19,12]
         CASE SAVE_REC<2,LN,TBAR_BIT>[1,10] = "..\VSIPIC\"
            SAVE_REC<2,LN,TBAR_BIT> = SAVE_REC<2,LN,TBAR_BIT>[11,12]
         END CASE
      NEXT LN
      SELECT WORK_FILE
70010*
      READNEXT ID ELSE GOTO 70099
      IF ID = "MAIN" THEN GOTO 70010
      IF ID MATCH "'MAIN_'6N" THEN GOTO 70010
      ECD.NUM = 2
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ID
      ECD.ACTION = 5
      CALL SCRN.EDIT
      READU TBAR_REC FROM WORK_FILE, ID ELSE GOTO 70019
      IF TBAR_REC<1>[1,7] # "TOOLBAR" THEN GOTO 70019
      CHK_REC = TBAR_REC
      LINES = DCOUNT(TBAR_REC<2>,VM)
      GOSUB 40000
*
*--- DELETE DUPLICATE MAIN BAR
      FOR LN = 1 TO SCNT
         PTR = 1
         LOOP
            LOCATE SAVE_REC<2,LN,TBAR_BIT> IN SCV.REC(14)<ECD.SCRN.NO>,PTR SETTING FND ELSE FND = 0
            BEGIN CASE
            CASE FND = 0
               PTR = 0
            CASE SAVE_REC<2,LN,TBAR_TYP> # SCV.REC(12)<ECD.SCRN.NO,FND>
            CASE SAVE_REC<2,LN,TBAR_VAL> # SCV.REC(13)<ECD.SCRN.NO,FND>
            CASE 1
               PTR = 0
            END CASE
         WHILE PTR DO
            PTR = FND + 1
         REPEAT
         IF FND THEN
            LN.NO = LN
            LN = FND
            GOSUB 700
            LN = LN.NO
         END
      NEXT LN
*
*--- INSERT MAINBAR
      GOSUB 850
      GOSUB 600
      IF NO.LINES > 0 THEN
         IF CHK_REC<2> # TBAR_REC<2> THEN
            WRITE TBAR_REC ON WORK_FILE, ID
            GOTO 70010
         END
      END
70019*
      RELEASE WORK_FILE, ID
      GOTO 70010
70099*
      SAVE_REC = ""
      CHK_REC = ""
      RELEASE WORK_FILE, PREV.NAME
      RETURN
*
*---- SCROLL
*
80000*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN RETURN
      OLD.START.LINE = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SCV.REC(11)<ECD.SCRN.NO,N> = N
         ECD.NUM = 11
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 12
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 13
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 14
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 15
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
*
*---- Page numbers
      ECD.NUM = 18
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LN / PAGE.SIZE + .99) "R%2"
      ECD.ACTION = 5
      CALL SCRN.EDIT
      ECD.NUM = 19
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = INT(LINES / PAGE.SIZE + .99) "R%2"
      ECD.ACTION = 5
      CALL SCRN.EDIT
      RETURN
*
*---- ERROR ROUTINES
*
91000*
      ERR.TYPE=1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
92000*
      ERR.TYPE=2
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000*
      ERR.TYPE=3
      CALL SYSCOM(MAT SYSCOM.REC)
99999*
*     IF ERROR # 99 THEN
*        ECD.ACTION=99
*        CALL SCRN.EDIT
*     END
      RETURN
   END
