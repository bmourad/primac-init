   SUBROUTINE MENU.DOC.MAINT(LEVEL, MENU.LINE,GUI.FLAG,VOC_ID)
*COPY>CPYLIB>COM1
* *COPY>CPYLIB>COMMON3
*COPY>CPYLIB>COM.KSEL
*COPY>CPYLIB>COM.MENU
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - CBABP
* PROGRAM       - MENU.DOC.MAINT
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 08/21/90
* DESCRIPTION   -
*T21177 diane 11/06/1996 * REV11 UPG
*T11112 duane 05/11/1998 * MOD FOR SBCS PROBLEM
*T21177 diane 06/29/1998 * Fix the fix
********************************************************************
*
*---- Data structure libraries
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>PMC.CPYLIB>SECURITY
*COPY>CPYLIB>TCC
*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>CPYLIB>FILE.VARS
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   OPEN "","M.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "** Cannot locate the M.SCREENS file **"
      LEVEL = 0; GOSUB 91000; GOTO 99999
   END
*
*
*---- Validate the inquiry record
*
IN.LEVEL = LEVEL
   BEGIN CASE
      CASE LEVEL = "!" OR LEVEL = "?"
         INQ.ID = MENU.LINE<1,2>
         IF INQ.ID = "" THEN
            ERRMSG = "** Documentation Undefined **"
            LEVEL = 0; GOSUB 91000; GOTO 99999
         END
         FILE.NAME = "EASY.DOC"
         OPEN "",FILE.NAME TO INQ.FILE ELSE
            ERRMSG = "** Cannot locate the ":FILE.NAME:" file **"
            LEVEL = 0; GOSUB 91000; GOTO 99999
         END
         HD = "M E N U   L E V E L   D O C U M E N T A I O N"
         HD1 = MENU.LINE<1,3>
         BEGIN CASE
            CASE LEVEL = "?"
               LEVEL = 1
               HD2 = ""
            CASE SEC.MENU.LEVEL < 2
               LEVEL = 1
               HD2 = ""
            CASE SEC.MENU.LEVEL < 4
               LEVEL = 2
               HD2 = "Document : ":INQ.ID
            CASE 1
               LEVEL = 3
               HD2 = "Document : ":INQ.ID
         END CASE
         ERRMSG = "** Documentation Not Present **"
      CASE LEVEL = "*"
         SEL.ID = MENU.LINE<1,1>
         BEGIN CASE
            CASE SEL.ID = ""
               ERRMSG = "** Function Not Present **"
               LEVEL = 0; GOSUB 91000; GOTO 99999
            CASE SEC.MENU.LEVEL < 3
               ERRMSG = "** You are not authorized to perform this function **"
               LEVEL = 0; GOSUB 91000; GOTO 99999
            CASE SEL.ID[1,2] = "M."
               ERRMSG = "Menu : " : SEL.ID
               LEVEL = 0; GOSUB 91000; GOTO 99999
            CASE SEL.ID[1,1] = "*"
               ERRMSG = "** Function (":SEL.ID[2,99]:") Not Installed **"
               LEVEL = 0; GOSUB 91000; GOTO 99999
            CASE SEL.ID[1,3] = "$M."
               ERRMSG = "Menu : ":SEL.ID[2,99]:" (Software Disclaimer)"
               LEVEL = 0; GOSUB 91000; GOTO 99999
            CASE SEL.ID[1,1] = "$"
               SEL.ID = SEL.ID[2,99]
               ERRMSG = "** Function has a Software Disclaimer **"
               GOSUB 91000
            CASE SEC.MENU.LEVEL < 4
               LEVEL = 1
            CASE 1
               LEVEL = 3
         END CASE
         IF VOC_ID = "" THEN
            ERRMSG = "** Function (":SEL.ID:") Not Installed **"
            LEVEL = 0; GOSUB 91000; GOTO 99999
         END ELSE
           EXECUTE VOC_ID
*DT SEE DUANE CHAIN VOC_ID
            GOTO 99999
         END
**            READ PPS_XRF FROM PMC_PROCESS_XREF, MENU.LINE<1,1> THEN
**               PPS_XRF=PPS_XRF<1>
**               EXE_PROC = "PQN"
**               EXE_PROC<-1> = 'MV %1 "':PPS_XRF:'"'
**               EXE_PROC<-1> = 'MV %2 "':SEC.MENU.LEVEL:'"'
**               EXE_PROC<-1> = "HPMC_PROC_D"
**               EXE_PROC<-1> = "P"
**               WRITE EXE_PROC ON MDICT, "M_":PORT.NO:"_PMC_PROC_D"
**               EXECUTE "M_":PORT.NO:"_PMC_PROC_D"
**               DELETE MDICT, "M_":PORT.NO:"_PMC_PROC_D"
**               GOTO 99999
**            END ELSE
**               ERRMSG = "** Function (":SEL.ID:") Not Installed **"
**               LEVEL = 0; GOSUB 91000; GOTO 99999
**            END
      CASE 1
         LEVEL = 0; GOTO 99999
   END CASE
   READU REC FROM INQ.FILE, INQ.ID THEN
      GOSUB 2000
   END ELSE
      IF LEVEL < 3 THEN
         RELEASE INQ.FILE, INQ.ID
         GOSUB 91000
         LEVEL = 0; GOTO 99999
      END
      REC = ""; ERR.MODE = 0; LINES = 0
   END
*
*---- Initialization
*
100 *
   MAT SCV.REC = ""
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   SAVE.PC.PORT.TYPE = PC.PORT.TYPE
   IF GUI.FLAG THEN
      IF IN.LEVEL = "?" THEN
         ECD.SCRN.NAME<1> = "MENU.DOC.MAINT.GUI"
      END ELSE
         ECD.SCRN.NAME<1> = "MENU.DOC.MAINT"
*         PC.PORT.TYPE = "STD"
      END
   END ELSE
      ECD.SCRN.NAME<1> = "MENU.DOC.MAINT"
   END
   DISP.FLAG = 0
   IF LEVEL < 2 THEN
      ECD.NUM = 11
   END ELSE
      ECD.NUM = 10
   END
*
   BEGIN.PAGE = 4
   LINE.SPACE = 1
   PAGE.SIZE = 16
   OLD.START.LINE = 0
*
*---- Display screen
*
*
   IF NOT(DISP.FLAG) THEN
      ECD.ACTION=1; CALL SCRN.EDIT
      ECD.SCRN.NO = 1
      ESN = ECD.SCRN.NO
      ECD.ACTION=2; CALL SCRN.EDIT
   END
   SCV.REC(1)<ESN> = HD1
   SCV.REC(2)<ESN> = HD2
   ECD.ACTION = 3 ; CALL SCRN.EDIT
*
*---- Check if in add mode
*
   IF LINES < 1 AND LEVEL > 1 THEN
      ACTION = "A"
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 1000
      WHILE LINES > OLD.LINES DO
         GOSUB 1910
      REPEAT
      LN = LINES
   END ELSE
      IF ERR.MODE AND LEVEL > 1 THEN
         ERRMSG = "** This record has lines exceeding the maximum length **"
         GOSUB 91000
      END
      LN = 1
   END
   IF GUI.FLAG AND LEVEL < 2 THEN
      ECD.NUM = 3
*TEMP      SCV.REC(ECD.NUM)<ESN> = CHANGE(REC,AM,VM)
      SCV.REC(ECD.NUM)<ESN> = CHANGE(REC,AM," ")
      ECD.ACTION = 4 ; CALL SCRN.EDIT
      GOTO 99990
   END
   GOSUB 1900
*
*---- Prompt line routine
*
   IF LEVEL < 2 THEN
      ECD.NUM = 11
   END ELSE
      ECD.NUM = 10
   END
   MORE = 1
   LOOP
      ECD.ACTION = 4 ; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = "E" OR ACTION = "END"
            RELEASE INQ.FILE, INQ.ID
            MORE = 0
         CASE ACTION = "" OR ACTION = "S" OR ACTION = "SF"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 1900
         CASE ACTION = "SR"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 1900
         CASE ACTION = "ST"
            LN = 1
            GOSUB 1900
         CASE ACTION = "SB"
            LN = LINES
            GOSUB 1900
         CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
            LN.NO = ACTION[2,99] + 0
            IF LN.NO < 1 OR LN.NO > LINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               LN = LN.NO
               GOSUB 1900
            END
         CASE LEVEL < 2
            ERRMSG = "** Invalid selection **"
            GOSUB 91000
         CASE (ACTION = "ED" OR ACTION = "AE") AND LEVEL > 2
            RELEASE INQ.FILE, INQ.ID
            REC = ""
            PRINT @(-1)
            PERFORM ACTION:" ":FILE.NAME:" ":INQ.ID
            READU REC FROM INQ.FILE, INQ.ID ELSE REC = ""
            PRINT SCRN :
            GOSUB 2000
            IF LN > LINES THEN LN = LINES
            OLD.START.LINE = 0; GOSUB 1900
            IF ERR.MODE THEN
               ERRMSG = "** This record has lines exceeding the maximum length **"
               GOSUB 91000
            END
         CASE ERR.MODE
            ERRMSG = "** Invalid selection due to the ERROR mode **"
            GOSUB 91000
         CASE ACTION = "F"
            WRITE REC ON INQ.FILE, INQ.ID
            MORE = 0
         CASE ACTION = "A"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 1000
            WHILE LINES > OLD.LINES DO
               GOSUB 1910
            REPEAT
            LN = LINES
            GOSUB 1900
         CASE ACTION = "I"
            GOSUB 1800
            IF LN.NO THEN
               SREC = ""
               LIMIT = LN.NO + 1
               FOR I = LINES TO LIMIT STEP -1
                  INS REC<I> BEFORE SREC<1>
                  REC = DELETE(REC,I,0,0)
               NEXT I
               LINES = LN.NO; OLD.START.LINE = 0
               ACTION = "A"
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 1000
               WHILE LINES > OLD.LINES DO
                  GOSUB 1910
               REPEAT
               LN = LINES
               LINES = DCOUNT(SREC,AM)
               FOR I = 1 TO LINES
                  REC<-1> = SREC<I>
               NEXT I
               SREC = ""
               LINES = DCOUNT(REC,AM); OLD.START.LINE = 0
               GOSUB 1900
            END
         CASE ACTION = "C"
            GOSUB 1800
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 1000
            END
         CASE ACTION = "D"
            GOSUB 1800
            IF LN.NO THEN
               LN = LN.NO
               REC = DELETE(REC,LN,0,0)
               LINES = COUNT(REC,AM) + 1
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0; GOSUB 1900
            END
         CASE 1
            ERRMSG = "** Invalid selection **"
            GOSUB 91000
      END CASE
   WHILE MORE DO REPEAT
   GOTO 99990
*
*---- Multi line prompt routine
1000*
   GOSUB 1900
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Get line
1010*
   X = 0; Y = SLN; TYP = 1; MAXL = 79; O.R = "O"
   IF REC<LN> # "" THEN
      DEFAULT = REC<LN>
   END
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END" AND ACTION = "A"
         REC = DELETE(REC,LN,0,0)
         P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 1099
      CASE VALUE = "END"
         P_X = 0 ; P_Y = SLN ; P_VALUE = REC<LN> ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 1099
   END CASE
   REC<LN> = VALUE
   LINES = DCOUNT(REC,AM)
1099*
   RETURN
*
*---- Get line number
1800*
   GOSUB 1900
   X = 0; Y = 21; TYP = 3; MAXL = 3; O.R = "O"
   MINV = OLD.START.LINE; MAXV = LAST.LINE
   PMSG = "Enter Line Number :"
   HMSG = "Select a line number from the diplayed range"
   CALL EDIT.SUB
   LN.NO = VALUE
   IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
   RETURN
*
*---- SCROLLING ROUTINE
*
1900*
   IF GUI.FLAG AND IN.LEVEL = "?" THEN
      ECD.NUM = 3
      SCV.REC(ECD.NUM)<ESN> = CHANGE(REC,AM," ")
      SCV.ACTION = 5 ; CALL SCRN.EDIT
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
   END ELSE
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN GOTO 1990
      OLD.START.LINE = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X = 0 ; P_Y = SLN ; P_VALUE = REC<N> ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
   END
*
*---- Display lines & pages
1910*
*      PRINT @(8,20) : INT(LAST.LINE/PAGE.SIZE+.9) "R%2" :
*      PRINT @(14,20) : INT(LINES/PAGE.SIZE+.9) "R%2" :
   P_X = 8 ; P_Y = 20 ; P_VALUE = INT(LAST.LINE/PAGE.SIZE+.9) "R%2" ; P_OPT = ""
   P_X := AM:14 ; P_Y := AM:20 ; P_VALUE := AM:INT(LINES/PAGE.SIZE+.9) "R%2"
   IF LAST.LINE THEN
*         PRINT @(65,20): START.LINE "R%3" :
      P_X := AM:65 ; P_Y := AM:20 ; P_VALUE := AM:START.LINE "R%3"
   END ELSE
*         PRINT @(65,20): LAST.LINE "R%3" :
      P_X := AM:65 ; P_Y := AM:20 ; P_VALUE := AM:LAST.LINE "R%3"
   END
*      PRINT @(74,20): LAST.LINE "R%3" :
   P_X := AM:74 ; P_Y := AM:20 ; P_VALUE := AM:LAST.LINE "R%3"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1990*
   RETURN
2000*
   LINES = DCOUNT(REC,AM)
   ERR.MODE = 0
   FOR I = LINES TO 1 STEP -1
      IF LEN(REC<I>) > 79 THEN
         STMT = REC<I>
         LIMIT = 1; POS = 1
         FOR J = 79 TO LIMIT STEP -1
            IF STMT[J,1] = " " THEN
               POS = J; LIMIT = 99
            END
         NEXT J
         IF POS < 50 THEN POS = 80
         REC<I> = STMT[1,POS-1]
         IF TRIM(STMT[POS,999]) # "" THEN
            ERR.MODE = 1
            STMT = "&&&": STMT[POS,76]
            INS STMT BEFORE REC<I+1>
         END
      END
   NEXT I
   IF ERR.MODE THEN LINES = DCOUNT(REC,AM)
   RETURN
*
*---- Error message routine
91000*
*      PRINT @(0,23) : ERRMSG : CL :
*      INPUT REPLY :
*      PRINT @(0,23) : CL :
   ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
   RETURN
*
*---- End of job
99990*
   ECD.ACTION = 99 ; CALL SCRN.EDIT
99999*
   RETURN
END
