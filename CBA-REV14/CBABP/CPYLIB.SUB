      SUBROUTINE CPYLIB.SUB(ITEM,PFX,ERRMSG)
      EQU AM TO CHAR(254)
      ERRMSG = ""
      VARS = ""
      ITEM = TRIM(ITEM)
      POS = INDEX(ITEM,"DIM",1)
      *IF @LOGNAME = "ajibaly" THEN PRINT "POS OF DIM: ":POS
      IF POS = 0 THEN
         ERRMSG = "Cannot locate the DIM statement"
         GOTO 99999
      END
      LN.CNT = DCOUNT(ITEM,AM)
      DIM.LN = DCOUNT(ITEM[1,POS],AM)
      LINE = TRIM(FIELD(ITEM<DIM.LN>,")",1))
      POS = INDEX(LINE,"DIM",1)
      R.NAME = FIELD(LINE[POS+3,99],"(",1)
      R.SIZE = FIELD(LINE[POS+LEN(R.NAME)+4,99],")",1)
      *IF @LOGNAME = "ajibaly" THEN PRINT "R.SIZE: ":R.SIZE
      BEGIN CASE
      CASE NUM(R.SIZE)
      CASE R.SIZE > 0
      CASE 1
         ERRMSG = "Invalid array size"
         GOTO 99999
      END CASE
      R.NAME = TRIM(R.NAME)
      PFX = FIELD(R.NAME,".",1)
      L.PFX = LEN(PFX) + 2
      NAME = "TO ":R.NAME:"("
      L = LEN(NAME)
      POS = INDEX(ITEM,"EQU",1)
      IF POS = 0 THEN
         ERRMSG = "Cannot locate the EQU statement"
         GOTO 99999
      END
      EQU.LN = DCOUNT(ITEM[1,POS],CHAR(254))
      FOR LN = EQU.LN TO LN.CNT WHILE ERRMSG = ""
         LINE = TRIM(FIELD(ITEM<LN>,";",1))
         IF LINE[1,1] = "*" THEN GOTO 9
         IF LINE[1,4] # "EQU " THEN
            ERRMSG = "Cannot locate the EQU statement"
            GOTO 9
         END
         POS = INDEX(LINE,NAME,1)
         IF POS = 0 THEN
            ERRMSG = "Cannot locate the equated to array"
            GOTO 9
         END
         STMT = TRIM(LINE[5,POS-5])
         FLD = FIELD(LINE[POS+L,99],")",1)
         IF NOT(NUM(FLD)) THEN
            ERRMSG = "Invalid Field number (":FLD:")"
            GOTO 9
         END
         BEGIN CASE
         CASE FIELD(STMT,".",1) = PFX
         CASE NUM(FLD)
         CASE FLD > 0
         CASE 1
            ERRMSG = "Invalid field name / attribute number"
            GOTO 9
         END CASE
         VARS<FLD> = STMT[L.PFX,99]
9     NEXT LN
      IF ERRMSG = "" THEN
         ITEM = VARS
      END
      GOTO 99999
99999 RETURN
   END
