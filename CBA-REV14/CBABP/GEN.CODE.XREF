OBSOLETE USE GEN.XREF.SUB
      SUBROUTINE GEN.CODE.XREF (CONO, XTYPE, XFILE, XFLD, XCODE)
*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - GEN.CODE.XREF
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 09/20/87
*
* DESCRIPTION
*
* This program is used to display the requested codes for selection.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      DIM KSL.DATA(25)
      PROMPT ""
      XCODE = ""
*
*---- MAIN PROCESSING
*
      CODELEN = 4
      DESCLEN = 15
      PDESCLEN = 0
      PBOX.COLS = 0
      XREF.CODE = ""
      ICNT = 0
      SELECT XFILE
      XXDATA = 1
      LOOP
         READNEXT ID ELSE XXDATA = 0
      WHILE XXDATA DO
         IF CONO = "" THEN
            CODE = ID
         END ELSE
            IF ID[1,3] # CONO THEN GOTO 109
            CODE = ID[4,99]
         END
         ICNT = ICNT + 1
         IF ICNT > 999 THEN
            XXDATA = 0
            GOTO 109
         END
         IF LEN(CODE) > CODELEN THEN CODELEN = LEN(CODE)
         LOCATE CODE IN XREF.CODE,1 BY "AL" SETTING P ELSE NULL
         XREF.CODE = INSERT(XREF.CODE,P,0,0,CODE)
109*
      REPEAT
      IF XREF.CODE = "" THEN GOTO 99999
      LINE.CNT = COUNT(XREF.CODE,AM) + 1
*
      PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
      CALL TCC.SUB1(PORT.NO,MAT TCC.PORT.REC,MAT TCC.REC,MAT GRAPH.REC,MAT VIDEO.REC,MAT KSEL.REC,MAT HBOX.REC)
*
      BOX.ROWS = 19
      IF LINE.CNT + 3 < BOX.ROWS THEN
         BOX.ROWS = LINE.CNT + 3
      END
      MAT KSL.REC = ""
      KSL.ESC = KSEL.ESC
      KSL.SCROLL = 1
      KSL.ETX.SEL = ETX.DSL
      KSL.ETX.OFF = ETX.OFF
      KSL.HROW = "B"
      PAGE.SIZE = BOX.ROWS - 3
      BEGIN.PAGE = 4
      KSL.ROW = BEGIN.PAGE
      KSL.COL = 1
      KSL.COLS = 1
      KSL.PGNO = 1
      KSL.PAGES = INT(LINE.CNT / PAGE.SIZE + .99)
      IF KSL.PAGES > 1 THEN
         BOX.HROW = 1
      END ELSE
         BOX.HROW = 0
      END
      MAT KSL.YX = ""
*
      HD = XTYPE : " CODE SELECTION"
      HD1A = HD[1,1]
      FOR CP = 2 TO LEN(HD)
         HD1A = HD1A : " " : HD[CP,1]
      NEXT CP
      HD1 = HD1A
      GOSUB 1900
      IF ICNT > 999 THEN
         ERRMSG = "Maximum allowable entries exceeded. "
         GOSUB 91000
      END
*
      MORE = 1
      LOOP
         CALL @KSEL.SUB(MAT TCC.REC, MAT GRAPH.REC, MAT VIDEO.REC, MAT KSEL.REC, MAT KSL.REC, MAT KSL.YX)
         BEGIN CASE
         CASE KSL.SEL = KSL.ESC
            XCODE = ""
            MORE = 0
         CASE KSL.SEL = KSEL.SEL
            XCODE = KSL.DATA(KSL.ROW)<KSL.COL>
            MORE = 0
         CASE KSL.SEL = "SF"
            GOSUB 1900
         CASE KSL.SEL = "SR"
            GOSUB 1900
         CASE KSL.SEL = "ST"
            GOSUB 1900
         CASE KSL.SEL = "SB"
            GOSUB 1900
         CASE NUM(KSL.SEL)
            IF KSL.SEL >= 1 AND KSL.SEL <= LINE.CNT THEN
               XCODE = XREF.CODE<1,KSL.SEL>
               MORE = 0
            END ELSE
               ERRMSG = '* * INVALID SELECTION * *'
               GOSUB 91000
            END
         CASE 1
            ERRMSG = '* * INVALID SELECTION * *'
            GOSUB 91000
         END CASE
      WHILE MORE DO REPEAT
      GOTO 99999
*
*---- Get Max Description and display page
1900*
      START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINE.CNT THEN LAST.LINE = LINE.CNT
      XREF.DESC = ""
      FOR V = START.LINE TO LAST.LINE
         READV DESC FROM XFILE, CONO:XREF.CODE<V>,XFLD THEN
            IF TRIM(DESC<1,2>) = "" THEN
               XREF.DESC<V> = DESC<1,1>
            END ELSE
               XREF.DESC<V> = DESC<1,1>:" ":DESC<1,2>
            END
            IF LEN(DESC) > DESCLEN THEN DESCLEN = LEN(DESC)
         END ELSE
            DESC = ""
         END
      NEXT V
      IF DESCLEN > PDESCLEN THEN
         IF MOD(DESCLEN,5) > 0 THEN
            PDESCLEN = DESCLEN + (5 - MOD(DESCLEN,5))
            DESCLEN = PDESCLEN
         END ELSE
            PDESCLEN = DESCLEN
         END
         TLEN = 3 + CODELEN + DESCLEN
         BEGIN CASE
         CASE TLEN <= 74
            SPX = 3
         CASE TLEN <= 76
            SPX = 2
         CASE TLEN <= 78
            SPX = 1
         CASE 1
            SPX = 1
            DESCLEN = (80-3-1-CODELEN-1)
         END CASE
         CODEFMT = "L#" : CODELEN
         DESCFMT = "L#" : DESCLEN
         BOX.COLS = 4 + SPX + CODELEN + SPX + DESCLEN
         IF LEN(HD1) + 2 > BOX.COLS THEN
            BOX.COLS = LEN(HD1) + 2
         END
         IF BOX.COLS > PBOX.COLS THEN
            PBOX.COLS = BOX.COLS
            BOX.X = "C"; BOX.Y = "C"; BOX.CLEAR = 1
            CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
            DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
            BEGIN.PAGE = BOX.Y + 3
            START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
            LAST.LINE = START.LINE + PAGE.SIZE - 1
            IF LAST.LINE > LINE.CNT THEN LAST.LINE = LINE.CNT
            SP = BOX.COLS - LEN(HD1) - 2
            SP1 = INT(SP/2); SP2 = INT(SP/2+.99)
            PRINT @(DX-1,DY):ETX.TOP.OFF:SPACE(SP1):HD1:
            PRINT SPACE(SP2):ETX.TOP.OFF:
            PRINT @(DX-1,DY):ETX.TOP:
         END
         PRINT @(DX,DY+1):"Ln#":ETX.OFF:
         PRINT @(DX-1,DY+1):ETX.HSL:
         L = 4 + SPX - 1
         PRINT @(DX+L,DY+1):(SPACE((CODELEN-4)/2):"Code") CODEFMT:
         PRINT ETX.OFF:@(DX+L-1,DY+1):ETX.HSL:
         L = L + CODELEN + SPX
         PRINT @(DX+L,DY+1):(SPACE((CODELEN-11)/2):"Description") DESCFMT:
         PRINT ETX.OFF:@(DX+L-1,DY+1):ETX.HSL:
      END
*
      SLN = BEGIN.PAGE - 1
      FOR V = START.LINE TO LAST.LINE
         SLN = SLN + 1
         KSL.YX(SLN) = DX + SPX + 2
         KSL.DATA(SLN) = XREF.CODE<V>
         PRINT @(DX,SLN): V "R#3":ETX.OFF:
         PRINT @(DX-1,SLN):ETX.NUM:
         L = 3 + SPX
         PLINE = XREF.CODE<V> CODEFMT
         PLINE = PLINE:SPACE(SPX):XREF.DESC<V> DESCFMT
         PRINT @(DX+L,SLN):PLINE:ETX.OFF:
         PRINT @(DX+L-1,SLN):ETX.DHD:
      NEXT V
      LST.V = LAST.LINE - START.LINE + 2
      FOR V = LST.V TO PAGE.SIZE
         SLN = SLN + 1
         KSL.YX(SLN) = ""
         PRINT @(DX-1,SLN):ETX.OFF:SPACE(MAX.COLS):
      NEXT V
*
*---- Display lines & pages
*
      BEGIN CASE
      CASE BOX.HROW < 1
      CASE BOX.COLS < 10
      CASE BOX.COLS < 15
         PX = BOX.X + BOX.COLS - 9
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
         PRINT @(PX,BOX.HROW):ETX.HHD:
      CASE 1
         PX = BOX.X + BOX.COLS - 14
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:"Page ":KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
         PRINT @(PX,BOX.HROW):ETX.HHD:
      END CASE
      RETURN
*
*---- ERROR ROUTINE
*
91000 PRINT @(0,23):ETX.EHD.OFF:" ":ERRMSG:ETX.EHD.OFF:CL:
      PRINT @(0,23):ETX.EHD:
      INPUT REPLY,1:
      PRINT @(0,23):CL:
      RETURN
99999*
      RETURN
   END
