  SUBROUTINE SCREEN.DEF(SCREEN.NAME)
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.SCREEN.BUILD
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - SCREEN.DEF
* BY          - ajibaly; CBA
* DATE        - 02/05/2002
* DESCRIPTION -
*
*T26418 ajibaly 02/05/2002 * THIS PROGRAM MAINTAINS SYS_FILES AND LINKS
*                            SCREEN FIELD NUMBERS TO THE CPYLIB NAME
*T26418 adelgado 07/16/2002 * Fix how Cpylib is tied to the field.
*ENDDOC
**********************************************
*
*---CPYLIBS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>JIS.CPYLIB>SYS_FIELDS
*
*---ERROR MESSAGES
*
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---INITIALIZATION SECTION
*
  LOCATE "SCREEN.DEF" IN ECD.SCRN.NAME SETTING ECD.SCRN.NO ELSE
    ERRMSG = "CANNOT LOCATE SCREEN (SCREEN.DEF)"; GOSUB 91000; RETURN
  END
  ESN = ECD.SCRN.NO
  LINE.COUNT = 7
  DIM SCV.SAVE.REC(SCV.REC.SIZE)
  MAT SCV.SAVE.REC = MAT SCV.REC
  SFR.REC.ID = ''
  FOR ZZ = 1 TO BLD.FIELD.CNT
    IF ABLD.SCRN(ZZ)<1,B.FLDTYPE> = 'M' THEN
      SFR.REC.ID = ABLD.SCRN(ZZ)<1,B.DATAFILE>
    END
  NEXT ZZ
  REF.NO = ''
  MAT SCV.REC = ''
  ECD.ACTION=2;CALL SCRN.EDIT
  *
  ALL.DONE = 0
  LOOP
    IF SFR.REC.ID # '' THEN
      MATREAD SFR.REC FROM SYS_FILES,SFR.REC.ID THEN
        ECD.NUM = 10
        SCV.REC(ECD.NUM)<ESN> = SFR.REC.ID
        ECD.ACTION=5;CALL SCRN.EDIT
      END ELSE
        SFR.REC.ID = ''
        ERRMSG = "INVALID TABLE NAME SETUP FROM THE 'MAIN SCREEN EXIT' FIELD"
        GOSUB 91000
      END
    END
    IF SFR.REC.ID = '' THEN GOSUB GET.MAIN.TABLE
    IF ALL.DONE = 0 THEN
      GOSUB BUILD.SCRN
      GOSUB BOTTOM.PROMPT
    END
  UNTIL (ALL.DONE) DO REPEAT
  MAT SCV.REC = MAT SCV.SAVE.REC
  RETURN
*
*---BODY OF PROGRAM SECTION
*
GET.MAIN.TABLE: 
*
*---RETRIEVE SYS_FILES ID
  LOOP
    ECD.NUM = 10
    ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
        ALL.DONE = 1
      CASE 1
        SFR.REC.ID = ECD.RET.VALUE
        MATREAD SFR.REC FROM SYS_FILES,SFR.REC.ID ELSE
          SFR.REC.ID = ''
          ERRMSG = "INVALID TABLE NAME"; GOSUB 91000
        END
    END CASE
  UNTIL (SFR.REC.ID # '') OR (ALL.DONE) DO REPEAT
  *
  RETURN
*
BUILD.SCRN: 
*
*---RETRIEVE SCREEN FIELD NUMBERS AND DESCRIPTION
  ECD.NUM = 3
  FIELD.COUNT = 0
  FOR INDEX = 1 TO BLD.FIELD.CNT
    FIELD.COUNT += 1
    SCV.REC(ECD.NUM)<ESN,FIELD.COUNT> = BLD.EXT.REF<1,INDEX>
    FIELD.DESC = ABLD.SCRN(INDEX)<1,B.FLD.DESC>
    SCV.REC(13)<ESN,FIELD.COUNT> = FIELD.DESC
    FIELD.TYPE = ABLD.SCRN(INDEX)<1,B.FLDTYPE>
    IF FIELD.TYPE = 'P' OR FIELD.TYPE = 'MP' THEN
      SCV.REC(4)<ESN,FIELD.COUNT> = "*PROMPT*"
    END
  NEXT INDEX
  LN.NO = 1
  GOSUB SCROLL
  *
  RETURN
*
BOTTOM.PROMPT: 
*
*---GET OPTION
  LOOP
    ECD.NUM = 12
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = UPCASE(ECD.RET.VALUE)
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
        ALL.DONE = 1
        RETURN
      CASE OPTION = "F"
        RETURN
      CASE OPTION = "S"
        LN.NO = REF.NO + LINE.COUNT
        IF LN.NO > FIELD.COUNT THEN LN.NO = 1
        GOSUB SCROLL
      CASE OPTION = "SR"
        LN.NO = REF.NO - LINE.COUNT
        IF LN.NO < 1 THEN LN.NO = FIELD.COUNT
        GOSUB SCROLL
      CASE OPTION = "SB"
        LN.NO = FIELD.COUNT
        GOSUB SCROLL
      CASE OPTION = "ST"
        LN.NO = 1
        GOSUB SCROLL
      CASE NUM(OPTION)
        FLD.POS = OPTION
        LOCATE OPTION IN SCV.REC(3)<ESN> SETTING OPTION ELSE OPTION = 0
        IF OPTION < REF.NO OR OPTION > REF.NO+LINE.COUNT-1 THEN
          ERRMSG = "THAT LINE IS NOT IN RANGE"; GOSUB 91000
          CONTINUE
        END
        IF SCV.REC(4)<ESN,OPTION> = "*PROMPT*" THEN
          ERRMSG = "THAT LINE IS A PROMPT"; GOSUB 91000
          CONTINUE
        END
        LN.NO = OPTION
        FOR OPTION = 1 TO 5
          ON OPTION GOSUB SET.CPYLIB, SET.EDIT, SET.GRP, SET.TAB, SET.DESC
        UNTIL ECD.RET.VALUE = "END"
        NEXT OPTION
      CASE 1
        ERRMSG = "INVALID OPTION, PLEASE TRY AGAIN"; GOSUB 91000
    END CASE
  REPEAT
  RETURN
*
REFRESH.SCREEN: 
  ECD.ACTION = 2; CALL SCRN.EDIT
  ECD.ACTION = 3; CALL SCRN.EDIT
  REF.NO = ''; GOSUB SCROLL
*
SCROLL: 
  START.REF.NO = 1 + INT((LN.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = REF.NO THEN RETURN
  REF.NO = START.REF.NO
*---Get around scrolling bug in ECD.ACTION=7 by using ECD.ACTION=5
  FOR INDEX = REF.NO TO REF.NO+LINE.COUNT-1
    ECD.SUB.NUM=INDEX;ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=4;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=6;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=8;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=9;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.SUB.NUM=INDEX;ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
  NEXT INDEX
  RETURN
*
SET.CPYLIB: 
*
  LOOP.DONE = 0
  LOOP
*---GET CPYLIB NAME
    ECD.NUM = 4; ECD.SUB.NUM = LN.NO
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPT = ECD.RET.VALUE
    BEGIN CASE
      CASE OPT = "END"
        LOOP.DONE = 1
      CASE OPT = ''
        GXR.ID = ''
        LOCATE FLD.POS IN BLD.EXT.REF<1>,1 SETTING REF.POS THEN
          IF ABLD.SCRN(REF.POS)<1,B.DATAFILE> # '' THEN
            GXR.ID = ABLD.SCRN(REF.POS)<1,B.DATAFILE>
          END ELSE
            GXR.ID = SFR.REC.ID
          END
        END ELSE
          GXR.ID = SFR.REC.ID
        END
        GET.CPYLIB.FLAG = 0
        GOSUB GET.CPYLIB.XREF
        GOSUB REFRESH.SCREEN
        IF ECD.RET.VALUE = "" THEN
          CONTINUE
        END
        DFD.ID = ECD.RET.VALUE
      CASE 1
        DFD.ID = ECD.RET.VALUE
        DFD.ID = CHANGE(DFD.ID,".","_")
        READ TMP.REC FROM SYS_FIELDS, DFD.ID ELSE
          READ TMP.REC FROM SYS_FILES, ECD.RET.VALUE THEN
            GXR.ID = ECD.RET.VALUE
            GET.CPYLIB.FLAG = 0
            GOSUB GET.CPYLIB.XREF
            GOSUB REFRESH.SCREEN
            IF ECD.RET.VALUE = "" THEN
              CONTINUE
            END
            DFD.ID = ECD.RET.VALUE
          END
        END
    END CASE
    ECD.NUM = 4; ECD.SUB.NUM = LN.NO
    IF LOOP.DONE = 0 THEN
      DFD.ID = CHANGE(DFD.ID,".","_")
      MATREAD DFD.REC FROM SYS_FIELDS, DFD.ID THEN
        LOCATE FLD.POS IN BLD.EXT.REF<1>,1 SETTING REF.POS ELSE REF.POS = 0
        BEGIN CASE
          CASE REF.POS = 0
          CASE DFD_ATTNO = 0 AND ABLD.SCRN(REF.POS)<1,B.FLDTYPE> # 'M'
            ERRMSG = 'CANNOT USE CPYLIB ID NAME FOR THIS FIELD'; GOSUB 91000
          CASE DFD_ATTNO # 0 AND ABLD.SCRN(REF.POS)<1,B.FLDTYPE> = 'M'
            ERRMSG = 'CAN ONLY USE AN ID CPYLIB NAME'; GOSUB 91000
          CASE 1
            SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = DFD.ID
            GOSUB GET.DATA.TYPE
            SCV.REC(9)<ESN,ECD.SUB.NUM> = DTYPE.DESC
            LOOP.DONE = 1
        END CASE
      END ELSE
        ERRMSG = "CPYLIB NAME WAS NOT FOUND"; GOSUB 91000
      END
    END
    GOSUB REFRESH.SCREEN
  WHILE LOOP.DONE = 0 REPEAT
  RETURN
*
GET.CPYLIB.XREF: 
  DIM SFR.SAVE.REC(SFR.REC.SIZE)
  MAT SFR.SAVE.REC = MAT SFR.REC
  LOOP
    IF GET.CPYLIB.FLAG THEN
      GOSUB REFRESH.SCREEN
      MAT GEN.XREF.REC = ""                                 
      GXR.NAME = "SYS_FILES"                                
      GXR.FILE = SYS_FILES                                  
      GXR.VALUE1 = "^IGNORE^"                            
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      IF GXR.ID = "" THEN
        ECD.RET.VALUE = ""
        EXIT
      END
      GOSUB REFRESH.SCREEN
    END ELSE
      GET.CPYLIB.FLAG = 1
    END
    MATREAD SFR.REC FROM SYS_FILES,GXR.ID THEN
      IF SFR.CPYLIB = "" THEN
        ERRMSG = "The Data Structure Table has not been set-up "
        GOSUB 91000; ECD.RET.VALUE = '' ; EXIT
      END
      OPEN "",SFR.CPYLIB TO CPYLIB.FILE THEN
        READ CPYLIB.ITEM FROM CPYLIB.FILE,SFR.CPLB.NAME THEN
          ERRMSG = '' ; PFX = '' ; ARRAY_NAME = '' ; ARRAY_SIZE = ''
          CALL CPYLIB_SUB(CPYLIB.ITEM,PFX,ARRAY_NAME,ARRAY_SIZE,ERRMSG)
          IF ERRMSG # '' THEN
            MSG = "ERROR READING (":SFR.CPLB.NAME:") FROM ":SFR.CPYLIB:": "
            ERRMSG = MSG:ERRMSG
            GOSUB 91000
            ECD.RET.VALUE = ""
            EXIT
          END
          MAT GEN.XREF.REC = ""
          GXR.NAME = "AM.SEL"
          GXR.IDLIST = CPYLIB.ITEM
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          ECD.RET.VALUE = GXR.ID
        END ELSE
          ERRMSG = "ERROR READING (":SFR.CPLB.NAME:") FROM ":SFR.CPYLIB
          GOSUB 91000
          ECD.RET.VALUE = ""
          EXIT
        END
      END ELSE
        ERRMSG = "ERROR OPENING CPYLIB : ":SFR.CPYLIB
        GOSUB 91000
        ECD.RET.VALUE = ""
        EXIT
      END
    END ELSE
      ERRMSG = "THE TABLE ":GXR.ID:" DOES NOT EXIST IN SYS_FILES"
      GOSUB 91000
      ECD.RET.VALUE = ""
      EXIT
    END
  WHILE ECD.RET.VALUE = '' REPEAT
  IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # "END" THEN
    ECD.RET.VALUE = SFR.PFX:"_":ECD.RET.VALUE
  END
  MAT SFR.REC = MAT SFR.SAVE.REC
  RETURN
*
SET.EDIT: 
  ECD.NUM = 6; ECD.SUB.NUM = LN.NO
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
SET.GRP: 
  ECD.NUM = 7; ECD.SUB.NUM = LN.NO
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
SET.TAB: 
  ECD.NUM = 8; ECD.SUB.NUM = LN.NO
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
SET.DESC: 
*
  LOCATE FLD.POS IN BLD.EXT.REF<1>,1 SETTING REF.POS THEN
    FIELD.DESC = ABLD.SCRN(REF.POS)<1,B.FLD.DESC>
  END ELSE
    FIELD.DESC = ''
  END
  ECD.DEFAULT = DFD_DESC
  IF ECD.DEFAULT = '' THEN ECD.DEFAULT = FIELD.DESC
  ECD.NUM = 13; ECD.SUB.NUM = LN.NO
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
GET.DATA.TYPE: 
*
  DTYPE.DESC = ''
  BEGIN CASE            
    CASE DFD_TYPE = "T"
      DTYPE.DESC = "Text"   
    CASE DFD_TYPE = "C"
      DTYPE.DESC = "deCimal"
    CASE DFD_TYPE = "N"
      DTYPE.DESC = "Numeric"
    CASE DFD_TYPE = "A"
      DTYPE.DESC = "Alpha"  
    CASE DFD_TYPE = "D"
      DTYPE.DESC = "Date"   
    CASE DFD_TYPE = "L"
      DTYPE.DESC = "Logical"
    CASE DFD_TYPE = "P"
      DTYPE.DESC = "Pattern"
    CASE DFD_TYPE = "U"
      DTYPE.DESC = "Counter"
    CASE 1             
      DTYPE.DESC = DFD_TYPE 
  END CASE              
  *
  RETURN
*
*---STANDARD SUBROUTINES
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 RETURN
END
