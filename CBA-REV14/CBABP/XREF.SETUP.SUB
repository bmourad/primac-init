   SUBROUTINE XREF.SETUP.SUB(XRFSNO)
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.XREF.SETUP
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - XREF.SETUP.SUB
* DESCRIPTION
*T21177 diane 11/06/1996 * REV11 UPG
*T23968 diane 05/20/1999 * FIX DISPLAY OF SORT DETAIL P_VALUE NEEDED CAT WITH AM
*********************************************************************
*
*---- Data structure libraries
*
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SYSCOM setup
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Initialization
*
   ESN = ECD.SCRN.NO
   MAX.ECD.NUM = 43
   FOR I = 1 TO MAX.ECD.NUM
      SCV.REC(I)<ESN> = ""
   NEXT I
*
   LINE.SPACE = 1
   BEGIN.PAGE = 15
   PAGE.SIZE = 5
*
   BEGIN.WPAGE = 6
   WPAGE.SIZE = 4
*
   MD.NAMES = "MD"
   MD.NAMES<2> = "VOC"
   MD.NAMES<3> = "M/DICT"
   MD.NAMES<4> = "PROC"
   MD.NAMES<5> = "DICT"
   MD.NAMES<6> = "VOC"
   MD.DICT = "*A0"
   FOR I = 1 TO 10
      MD.DICT<1,I+1> = "*A":I
   NEXT I
*
   ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = XRFSNO
   ECD.ACTION = 5; CALL SCRN.EDIT
*
   IF XRFS.SORT.FILE = "" THEN
      OPENFLAG = 0
   END ELSE
      IF XRFS.SORT.FILE[1,5] = "DICT " THEN
         OPEN "", "VOC" TO DICTSORTFILE THEN
            OPENFLAG = 1
            ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = XRFS.SORT.FILE
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            OPENFLAG = 0
            XRFS.SORT = ""; XRFS.SORT.DICT = ""
            XRFS.S.ATT = ""; XRFS.S.MV = ""
            XRFS.S.LEN = ""; XRFS.S.JUSTIFY = ""
            XRFS.S.OCONV = ""
            ERRMSG = "Cannot locate sort file # ":XRFS.SORT.FILE
            GOSUB 91000
         END
      END ELSE
         OPEN "DICT", XRFS.SORT.FILE TO DICTSORTFILE THEN
            OPENFLAG = 1
            ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = XRFS.SORT.FILE
            ECD.ACTION = 5; CALL SCRN.EDIT
         END ELSE
            OPENFLAG = 0
            XRFS.SORT = ""; XRFS.SORT.DICT = ""
            XRFS.S.ATT = ""; XRFS.S.MV = ""
            XRFS.S.LEN = ""; XRFS.S.JUSTIFY = ""
            XRFS.S.OCONV = ""
            ERRMSG = "Cannot locate sort file # ":XRFS.SORT.FILE
            GOSUB 91000
         END
      END
   END
*
   OLD.START.WLINE = 0
   WLN = 1; WLINES = DCOUNT(XRFS.WITH.ATT,VM)
   GOSUB 2900; GOSUB 2950
   OLD.START.LINE = 0
   LN = 1; LINES = DCOUNT(XRFS.SORT,VM)
   GOSUB 3900; GOSUB 3950
*
*---- Prompt Line
*
   MORE = 1
   LOOP
      ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END" OR OPTION = "e"
            MORE = 0
         CASE OPTION = "M" OR OPTION = "m"
            GOSUB 2000
         CASE OPTION = "S" OR OPTION = "s"
            IF OPENFLAG THEN
               GOSUB 3000
            END ELSE
               GOSUB 1100
               IF OPENFLAG THEN
                  GOSUB 3000
               END
            END
         CASE NOT(NUM(OPTION))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE OPTION < 1 OR OPTION > 1
            ERRMSG = "Out of range, please re-enter"
            GOSUB 91000
         CASE 1
            GOSUB 1100
      END CASE
   WHILE MORE DO REPEAT
   GOTO 99999
*-----------------------*
*--- SUBROUTINES   ---*
*-----------------------*
*
*---- Get file name
1100*
   IF XRFS.SORT.FILE = "" THEN ECD.DEFAULT = XRFS.DATA.FILE
   ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 1199
   ECD.RET.VALUE = TRIM(ECD.RET.VALUE)
   LOCATE ECD.RET.VALUE IN MD.NAMES,1 SETTING FND THEN
      ERRMSG = "Sorry, cannot utilize an MD file"
      GOSUB 91000; GOTO 1100
   END
   IF XRFS.SORT.FILE # "" AND ECD.RET.VALUE # XRFS.SORT.FILE THEN
      X = 0; Y = 21; TYP = 8; O.R = "O"
      PMSG = "Sort criteria will be cleared when changing the file (Y/N) :"
      CALL EDIT.SUB
      IF VALUE # "Y" THEN
         SCV.REC(ECD.NUM)<ESN> = XRFS.SORT.FILE
         GOTO 1100
      END
      OPENFLAG = 0
      XRFS.SORT = ""; XRFS.SORT.DICT = ""
      XRFS.S.ATT = ""; XRFS.S.MV = ""
      XRFS.S.LEN = ""; XRFS.S.JUSTIFY = ""
      XRFS.S.OCONV = ""
      OLD.START.LINE = 0
      LN = 1; LINES = DCOUNT(XRFS.SORT,VM)
      GOSUB 3900; GOSUB 3950
      IF ECD.RET.VALUE = "" THEN
         XRFS.SORT.FILE = ""; GOTO 1199
      END
   END
   IF OPEN.DATA AND ECD.RET.VALUE # XRFS.DATA.FILE THEN
      ERRMSG = "Warning !! The SORT and DATA files are not the same ??"
      GOSUB 91000
   END
   IF ECD.RET.VALUE[1,5] = "DICT " THEN
      OPEN "", "VOC" TO DICTSORTFILE THEN
         OPENFLAG = 1
         XRFS.SORT.FILE = ECD.RET.VALUE
      END ELSE
         OPENFLAG = 0
         ERRMSG = "Cannot locate the M/DICT file"
         GOSUB 91000; GOTO 1100
      END
   END ELSE
      OPEN "DICT", ECD.RET.VALUE TO DICTSORTFILE THEN
         OPENFLAG = 1
         XRFS.SORT.FILE = ECD.RET.VALUE
      END ELSE
         OPENFLAG = 0
         ERRMSG = "Cannot locate the DICT ":ECD.RET.VALUE:" file"
         GOSUB 91000; GOTO 1100
      END
   END
1199*
   RETURN
*
*---- With values
2000*
   IF WLINES < 1 THEN
      REQUEST = "A"
      LOOP
         WLN = WLINES + 1
         OLD.LINES = WLINES
         GOSUB 2010
      WHILE WLINES > OLD.LINES DO
         GOSUB 2910
      REPEAT
      WLN = WLINES; GOSUB 2900; GOSUB 2950
   END ELSE
      GOSUB 2900
   END
   ANCORE = 1
   LOOP
      ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST = "E" OR REQUEST = "END" OR REQUEST = "" OR REQUEST = "e"
            ANCORE = 0
         CASE REQUEST = "A" OR REQUEST = "a"
            LOOP
               WLN = WLINES + 1
               OLD.LINES = WLINES
               GOSUB 2010
            WHILE WLINES > OLD.LINES DO
               GOSUB 2910
            REPEAT
            WLN = WLINES; GOSUB 2900; GOSUB 2950
         CASE REQUEST = "I" OR REQUEST = "i"
            GOSUB 2800
            IF LNO THEN
               S.XRFS.WITH = ""
               S.XRFS.WITH.ATT = ""; S.XRFS.WITH.MV = ""
               S.XRFS.WITH.EQ = ""; S.XRFS.WITH.OCONV = ""
               S.XRFS.WITH.VAL = ""
               FOR I = WLINES TO LNO STEP -1
                  INS XRFS.WITH<1,I> BEFORE S.XRFS.WITH<1>
                  INS XRFS.WITH.ATT<1,I> BEFORE S.XRFS.WITH.ATT<1>
                  INS XRFS.WITH.MV<1,I> BEFORE S.XRFS.WITH.MV<1>
                  INS XRFS.WITH.EQ<1,I> BEFORE S.XRFS.WITH.EQ<1>
                  INS XRFS.WITH.OCONV<1,I> BEFORE S.XRFS.WITH.OCONV<1>
                  INS XRFS.WITH.VAL<1,I> BEFORE S.XRFS.WITH.VAL<1>
                  XRFS.WITH = DELETE(XRFS.WITH,1,I,0)
                  XRFS.WITH.ATT = DELETE(XRFS.WITH.ATT,1,I,0)
                  XRFS.WITH.MV = DELETE(XRFS.WITH.MV,1,I,0)
                  XRFS.WITH.EQ = DELETE(XRFS.WITH.EQ,1,I,0)
                  XRFS.WITH.OCONV = DELETE(XRFS.WITH.OCONV,1,I,0)
                  XRFS.WITH.VAL = DELETE(XRFS.WITH.VAL,1,I,0)
               NEXT I
               WLINES = LNO - 1; OLD.START.WLINE = 0
               REQUEST = "A"
               LOOP
                  WLN = WLINES + 1
                  OLD.LINES = WLINES
                  GOSUB 2010
               WHILE WLINES > OLD.LINES DO
                  GOSUB 2910
               REPEAT
               WLN = WLINES; WLINES = DCOUNT(S.XRFS.WITH.ATT,AM)
               FOR I = 1 TO WLINES
                  II = WLN + I
                  XRFS.WITH<1,II> = S.XRFS.WITH<I>
                  XRFS.WITH.ATT<1,II> = S.XRFS.WITH.ATT<I>
                  XRFS.WITH.MV<1,II> = S.XRFS.WITH.MV<I>
                  XRFS.WITH.EQ<1,II> = S.XRFS.WITH.EQ<I>
                  XRFS.WITH.OCONV<1,II> = S.XRFS.WITH.OCONV<I>
                  XRFS.WITH.VAL<1,II> = S.XRFS.WITH.VAL<I>
               NEXT I
               S.XRFS.WITH = ""
               S.XRFS.WITH.ATT = ""; S.XRFS.WITH.MV = ""
               S.XRFS.WITH.EQ = ""; S.XRFS.WITH.OCONV = ""
               S.XRFS.WITH.VAL = ""
               WLINES = DCOUNT(XRFS.WITH.ATT,VM); OLD.START.WLINE = 0
               GOSUB 2900; GOSUB 2950
            END
         CASE REQUEST = "C" OR REQUEST = "c"
            GOSUB 2800
            IF LNO THEN
               WLN = LNO
               SWLN = BEGIN.WPAGE+LINE.SPACE*MOD(WLN-1,WPAGE.SIZE)
               GOSUB 2100
            END
         CASE REQUEST = "D" OR REQUEST = "d"
            GOSUB 2800
            IF LNO THEN
               XRFS.WITH = DELETE(XRFS.WITH,1,LNO,0)
               XRFS.WITH.ATT = DELETE(XRFS.WITH.ATT,1,LNO,0)
               XRFS.WITH.MV = DELETE(XRFS.WITH.MV,1,LNO,0)
               XRFS.WITH.EQ = DELETE(XRFS.WITH.EQ,1,LNO,0)
               XRFS.WITH.OCONV = DELETE(XRFS.WITH.OCONV,1,LNO,0)
               XRFS.WITH.VAL = DELETE(XRFS.WITH.VAL,1,LNO,0)
               WLINES = DCOUNT(XRFS.WITH.ATT,VM)
               IF WLN > WLINES THEN WLN = WLN - 1
               OLD.START.WLINE = 0; GOSUB 2900; GOSUB 2950
            END
         CASE REQUEST = "S" OR REQUEST = "SF" OR REQUEST = "s" OR REQUEST = "sf"
            WLN = 1+INT((WLN-1)/WPAGE.SIZE)*WPAGE.SIZE+WPAGE.SIZE
            IF WLN > WLINES THEN WLN = 1
            GOSUB 2900
         CASE REQUEST = "SR" OR REQUEST = "sr"
            WLN = 1+INT((WLN-1)/WPAGE.SIZE)*WPAGE.SIZE-WPAGE.SIZE
            IF WLN < 1 THEN WLN = 1
            GOSUB 2900
         CASE REQUEST = "ST" OR REQUEST = "st"
            WLN = 1
            GOSUB 2900
         CASE REQUEST = "SB" OR REQUEST = "sb"
            WLN = WLINES
            GOSUB 2900
         CASE (REQUEST[1,1] = "S" OR REQUEST[1,1] = "s") AND NUM(REQUEST[2,99])
            LN.NO = REQUEST[2,99] + 0
            IF LN.NO < 1 OR LN.NO > WLINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               WLN = LN.NO
               GOSUB 2900
            END
         CASE 1
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
      END CASE
   WHILE ANCORE DO REPEAT
1899*
   RETURN
*
*---- Match multi line entry
2010*
   GOSUB 2900
   SWLN = BEGIN.WPAGE + LINE.SPACE * MOD(WLN-1,WPAGE.SIZE)
* PRINT @(0,SWLN) : CL : WLN "R#3" :
   P_X = 0 ; P_Y = SWLN ; P_VALUE = WLN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2100*
   IF WLN = 1 THEN
      XRFS.WITH<1,WLN> = ""
* PRINT @(5,SWLN) : XRFS.WITH<1,WLN> "L#1" :
      P_X = 5 ; P_Y = SWLN ; P_VALUE = XRFS.WITH<1,WLN> "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2110
   END
   X = 5; Y = SWLN; TYP = 1; MAXL = 1; O.R = "R"
   IF XRFS.WITH<1,WLN> # "" THEN
      O.R = "O"; DEFAULT = XRFS.WITH<1,WLN>
   END
   VALDAT = "A":VM:"O"
   HMSG = "Enter with connective (A)nd, (O)r."
   CALL EDIT.SUB
2101*
   IF VALUE = "END" THEN
      IF REQUEST = "A" THEN
         XRFS.WITH = DELETE(XRFS.WITH,1,WLN,0)
         XRFS.WITH.ATT = DELETE(XRFS.WITH.ATT,1,WLN,0)
         XRFS.WITH.MV = DELETE(XRFS.WITH.MV,1,WLN,0)
         XRFS.WITH.EQ = DELETE(XRFS.WITH.EQ,1,WLN,0)
         XRFS.WITH.OCONV = DELETE(XRFS.WITH.OCONV,1,WLN,0)
         XRFS.WITH.VAL = DELETE(XRFS.WITH.VAL,1,WLN,0)
* PRINT @(0,SWLN):CL:
         P_X = 0 ; P_Y = SWLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
* PRINT @(0,SWLN) : CL : WLN "R#3" :
* PRINT @(5,SWLN) : XRFS.WITH<1,WLN> "L#1" :
* PRINT @(8,SWLN) : XRFS.WITH.ATT<1,WLN> "R#3" :
* PRINT @(12,SWLN): XRFS.WITH.MV<1,WLN> "R#2" :
* PRINT @(16,SWLN): XRFS.WITH.EQ<1,WLN> "L#2" :
* PRINT @(20,SWLN): XRFS.WITH.OCONV<1,WLN> "L#5" :
         P_X = 0 ; P_Y = SWLN ; P_VALUE = WLN "R#3" ; P_OPT = "CL"
         P_X := AM:5 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH<1,WLN> "L#1"
         P_X := AM:8 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.ATT<1,WLN> "R#3"
         P_X := AM:12 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.MV<1,WLN> "R#2"
         P_X := AM:16 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.EQ<1,WLN> "L#2"
         P_X := AM:20 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.OCONV<1,WLN> "L#5"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF XRFS.WITH.OCONV<1,WLN> = "" THEN
* PRINT @(26,SWLN): XRFS.WITH.VAL<1,WLN> "L#25" :
            P_X = 26 ; P_Y = SWLN ; P_VALUE = XRFS.WITH.VAL<1,WLN> "L#25" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
* PRINT @(26,SWLN): OCONV(XRFS.WITH.VAL<1,WLN>,XRFS.WITH.OCONV<1,WLN>) "L#25" :
            P_X = 26 ; P_Y = SWLN ; P_VALUE = OCONV(XRFS.WITH.VAL<1,WLN>,XRFS.WITH.OCONV<1,WLN>) "L#25" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      END
      GOTO 2199
   END
   XRFS.WITH<1,WLN> = VALUE
2110*
   X = 8; Y = SWLN; TYP = 3; MAXL = 3; O.R = "O"
   IF XRFS.WITH.ATT<1,WLN> # "" THEN
      DEFAULT = XRFS.WITH.ATT<1,WLN>
   END
   MINV = 0; MAXV = 150
   HMSG = "Enter field number, (0) for the item ID."
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END"
         IF WLN = 1 THEN
            GOTO 2101
         END ELSE
            GOTO 2100
         END
      CASE VALUE = "" AND OPEN.DATA
         MAT GEN.XREF.REC = ""
         IF CPYLIB.CNT THEN
            LIMIT = CPYLIB.CNT
            FOR I = 1 TO LIMIT
               READ DUMMY FROM CPYLIB.FILES(I), XRFS.DATA.FILE THEN
                  GXR.XREF = CPYLIB.FILES(I)
                  LIMIT = 0
               END
            NEXT I
         END ELSE
            LIMIT = 1
         END
         IF LIMIT THEN
            ERRMSG = "Cannot locate the data structure definition for file ":XRFS.DATA.FILE
            GOSUB 91000; GOTO 2110
         END
         GXR.NAME = "XREF.CPYLIB"
         GXR.FILE = GXR.XREF
         GXR.SRCH.ID = XRFS.DATA.FILE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.START.LINE = 0
         GOSUB 3900; GOSUB 3950
         OLD.START.WLINE = 0
         GOSUB 2900; GOSUB 2950
* PRINT @(0,SWLN) : CL : WLN "R#3" :
* PRINT @(5,SWLN) : XRFS.WITH<1,WLN> "L#1" :
* PRINT @(8,SWLN) : XRFS.WITH.ATT<1,WLN> "R#3" :
* PRINT @(12,SWLN): XRFS.WITH.MV<1,WLN> "R#2" :
* PRINT @(16,SWLN): XRFS.WITH.EQ<1,WLN> "L#2" :
* PRINT @(20,SWLN): XRFS.WITH.OCONV<1,WLN> "L#5" :
         P_X = 0 ; P_Y = SWLN ; P_VALUE = WLN "R#3" ; P_OPT = "CL"
         P_X := AM:5 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH<1,WLN> "L#1"
         P_X := AM:8 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.ATT<1,WLN> "R#3"
         P_X := AM:12 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.MV<1,WLN> "R#2"
         P_X := AM:16 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.EQ<1,WLN> "L#2"
         P_X := AM:20 ; P_Y := AM:SWLN ; P_VALUE := AM:XRFS.WITH.OCONV<1,WLN> "L#5"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF XRFS.WITH.OCONV<1,WLN> = "" THEN
* PRINT @(26,SWLN): XRFS.WITH.VAL<1,WLN> "L#25" :
            P_X = 26 ; P_Y = SWLN ; P_VALUE = XRFS.WITH.VAL<1,WLN> "L#25" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
* PRINT @(26,SWLN): OCONV(XRFS.WITH.VAL<1,WLN>,XRFS.WITH.OCONV<1,WLN>) "L#25" :
            P_X = 26 ; P_Y = SWLN ; P_VALUE = OCONV(XRFS.WITH.VAL<1,WLN>,XRFS.WITH.OCONV<1,WLN>) "L#25" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
         GOTO 2110
      CASE VALUE = ""
         ERRMSG = "Data file is not defined, cannot utilize cross reference."
         GOSUB 91000; GOTO 2120
      CASE NOT(NUM(VALUE))
         ERRMSG = "** Numeric input required **"
         GOSUB 91000; GOTO 2110
      CASE VALUE < 0 OR VALUE > 150
         ERRMSG = "** Out of range **"
         GOSUB 91000; GOTO 2110
   END CASE
   XRFS.WITH.ATT<1,WLN> = VALUE
2120*
   IF XRFS.WITH.ATT<1,WLN> < 1 THEN
      XRFS.WITH.MV<1,WLN> = ""
* PRINT @(12,SWLN): XRFS.WITH.MV<1,WLN> "R#2" :
      P_X = 12 ; P_Y = SWLN ; P_VALUE = XRFS.WITH.MV<1,WLN> "R#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2130
   END
   X = 12; Y = SWLN; TYP = 3; MAXL = 2; O.R = "O"
   IF XRFS.WITH.MV<1,WLN> # "" THEN
      DEFAULT = XRFS.WITH.MV<1,WLN>
   END
   MINV = 0; MAXV = 40
   HMSG = "Enter Multi-Value number, NULL or (0) for Single Value."
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 2100
   XRFS.WITH.MV<1,WLN> = VALUE
2130*
   X = 16; Y = SWLN; TYP = 1; MAXL = 2; O.R = "O"
   IF XRFS.WITH.EQ<1,WLN> # "" THEN
      DEFAULT = XRFS.WITH.EQ<1,WLN>
   END ELSE
      DEFAULT = "EQ"
   END
   VALDAT = "EQ":VM:"NE":VM:"GE":VM:"LE":VM:"GT":VM:"LT":VM:"IX":VM:"IN":VM:"LX":VM:"LN"
   HMSG = "Enter operation (EQ) Equal, (NE) Not Equal, (GT) Greater Than"
   HMSG<1,2> = "(LT) Less Than, (GE) Greater or Equal, (LE) Less or Equal,"
   HMSG<1,3> = "(IX) Index on the value anywhere in the field, (IN) No Index,"
   HMSG<1,4> = "(LX) Locate the value in the field, (LN) No Locate."
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 2100
   XRFS.WITH.EQ<1,WLN> = VALUE
2140*
   X = 20; Y = SWLN; TYP = 1; MAXL = 5; O.R = "O"
   IF XRFS.WITH.OCONV<1,WLN> # "" THEN
      DEFAULT = XRFS.WITH.OCONV<1,WLN>
   END
   VALDAT = "D2/":VM:"MD2":VM:"MD1":VM:"MD3":VM:"MD4":VM:"MTS"
   HMSG = "Enter conversion criteria (D2/) Date, (MD#) Masked Decimal"
   HMSG<1,2> = "and the (#) is the numbers after the decimal 1 through 4."
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 2100
   XRFS.WITH.OCONV<1,WLN> = VALUE
2150*
   BEGIN CASE
      CASE XRFS.WITH.OCONV<1,WLN> = "D2/"
         TYP = 6; MAXL = 8
      CASE XRFS.WITH.OCONV<1,WLN> = "MD2"
         TYP = 4; SCALER = 2; MAXL = 15
      CASE XRFS.WITH.OCONV<1,WLN> = "MD1"
         TYP = 4; SCALER = 1; MAXL = 15
      CASE XRFS.WITH.OCONV<1,WLN> = "MD3"
         TYP = 4; SCALER = 3; MAXL = 15
      CASE XRFS.WITH.OCONV<1,WLN> = "MD4"
         TYP = 4; SCALER = 4; MAXL = 15
      CASE 1
         TYP = 1; MAXL = 25
   END CASE
   X = 26; Y = SWLN; JUSTIFY = "L"; O.R = "O"
   IF XRFS.WITH.VAL<1,WLN> # "" THEN
      IF TYP = 1 THEN
         DEFAULT = XRFS.WITH.VAL<1,WLN>
      END ELSE
         DEFAULT = OCONV(XRFS.WITH.VAL<1,WLN>,XRFS.WITH.OCONV<1,WLN>)
      END
   END
   HMSG = "Enter the matching value."
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 2100
   XRFS.WITH.VAL<1,WLN> = VALUE
2199*
   WLINES = DCOUNT(XRFS.WITH.ATT,VM)
   RETURN
*
*---- Get line number to update
2800*
   GOSUB 2900
   ECD.MINV = START.WLINE; ECD.MAXV = LAST.WLINE
   ECD.NUM = 43
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
   RETURN
*
*---- Display multi lines
2900*
   START.WLINE = 1 + INT((WLN-1)/WPAGE.SIZE) * WPAGE.SIZE
   LAST.WLINE = START.WLINE + WPAGE.SIZE -1
   IF LAST.WLINE > WLINES THEN LAST.WLINE = WLINES
   IF START.WLINE = OLD.START.WLINE THEN RETURN
   OLD.START.WLINE = START.WLINE
   ECD.NUM = 18
   SCV.REC(ECD.NUM)<ESN> = INT(LAST.WLINE / WPAGE.SIZE + .9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
   CNT = 1
   FOR N = START.WLINE TO LAST.WLINE
      SSLN = BEGIN.WPAGE + LINE.SPACE * MOD(N-1,WPAGE.SIZE)
* PRINT @(0,SSLN) : CL : N "R#3" :
* PRINT @(5,SSLN) : XRFS.WITH<1,N> "L#1" :
* PRINT @(8,SSLN) : XRFS.WITH.ATT<1,N> "R#3" :
* PRINT @(12,SSLN): XRFS.WITH.MV<1,N> "R#2" :
* PRINT @(16,SSLN): XRFS.WITH.EQ<1,N> "L#2" :
* PRINT @(20,SSLN): XRFS.WITH.OCONV<1,N> "L#5" :
      P_X = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
      P_X := AM:5 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.WITH<1,N> "L#1"
      P_X := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.WITH.ATT<1,N> "R#3"
      P_X := AM:12 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.WITH.MV<1,N> "R#2"
      P_X := AM:16 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.WITH.EQ<1,N> "L#2"
      P_X := AM:20 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.WITH.OCONV<1,N> "L#5"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF XRFS.WITH.OCONV<1,N> = "" THEN
* PRINT @(26,SSLN): XRFS.WITH.VAL<1,N> "L#25" :
         P_X = 26 ; P_Y = SSLN ; P_VALUE = XRFS.WITH.VAL<1,N> "L#25" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
* PRINT @(26,SSLN): OCONV(XRFS.WITH.VAL<1,N>,XRFS.WITH.OCONV<1,N>) "L#25" :
         P_X = 26 ; P_Y = SSLN ; P_VALUE = OCONV(XRFS.WITH.VAL<1,N>,XRFS.WITH.OCONV<1,N>) "L#25" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO WPAGE.SIZE
      SSLN = BEGIN.WPAGE + LINE.SPACE * MOD(N-1,WPAGE.SIZE)
* PRINT @(0,SSLN) : CL :
      P_X = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*---- Page numbers
2910*
   ECD.NUM = 18
   SCV.REC(ECD.NUM)<ESN> = INT(WLN / WPAGE.SIZE + .9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
2950*
   ECD.NUM = 19
   SCV.REC(ECD.NUM)<ESN> = INT(WLINES / WPAGE.SIZE + .9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
   RETURN
*
*---- DICT routine
3000*
   IF LINES < 1 THEN
      REQUEST = "A"
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 3010
      WHILE LINES > OLD.LINES DO
         GOSUB 3910
      REPEAT
      LN = LINES; GOSUB 3900; GOSUB 3950
   END
   ANCORE = 1
   LOOP
      ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST = "E" OR REQUEST = "END" OR REQUEST = "" OR REQUEST = "e"
            ANCORE = 0
         CASE REQUEST = "A" OR REQUEST = "a"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 3010
            WHILE LINES > OLD.LINES DO
               GOSUB 3910
            REPEAT
            LN = LINES; GOSUB 3900; GOSUB 3950
         CASE REQUEST = "C" OR REQUEST = "c"
            GOSUB 3800
            IF LNO THEN
               LN = LNO
               SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
               GOSUB 3100
            END
         CASE REQUEST = "D" OR REQUEST = "d"
            GOSUB 3800
            IF LNO THEN
               XRFS.SORT = DELETE(XRFS.SORT,1,LNO,0)
               XRFS.SORT.DICT = DELETE(XRFS.SORT.DICT,1,LNO,0)
               XRFS.S.ATT = DELETE(XRFS.S.ATT,1,LNO,0)
               XRFS.S.MV = DELETE(XRFS.S.MV,1,LNO,0)
               XRFS.S.LEN = DELETE(XRFS.S.LEN,1,LNO,0)
               XRFS.S.JUSTIFY = DELETE(XRFS.S.JUSTIFY,1,LNO,0)
               XRFS.S.OCONV = DELETE(XRFS.S.OCONV,1,LNO,0)
               LINES = DCOUNT(XRFS.SORT,VM)
               IF LN > LINES THEN LN = LN - 1
               OLD.START.LINE = 0; GOSUB 3900; GOSUB 3950
            END
         CASE REQUEST = "I" OR REQUEST = "i"
            GOSUB 3800
            IF LNO THEN
               S.XRFS.SORT = ""; S.XRFS.SORT.DICT = ""
               S.XRFS.S.ATT = ""; S.XRFS.S.MV = ""
               S.XRFS.S.LEN = ""; S.XRFS.S.JUSTIFY = ""
               S.XRFS.S.OCONV = ""
               FOR I = LINES TO LNO STEP -1
                  INS XRFS.SORT<1,I> BEFORE S.XRFS.SORT<1>
                  INS XRFS.SORT.DICT<1,I> BEFORE S.XRFS.SORT.DICT<1>
                  INS XRFS.S.ATT<1,I> BEFORE S.XRFS.S.ATT<1>
                  INS XRFS.S.MV<1,I> BEFORE S.XRFS.S.MV<1>
                  INS XRFS.S.LEN<1,I> BEFORE S.XRFS.S.LEN<1>
                  INS XRFS.S.JUSTIFY<1,I> BEFORE S.XRFS.S.JUSTIFY<1>
                  INS XRFS.S.OCONV<1,I> BEFORE S.XRFS.S.OCONV<1>
                  XRFS.SORT = DELETE(XRFS.SORT,1,I,0)
                  XRFS.SORT.DICT = DELETE(XRFS.SORT.DICT,1,I,0)
                  XRFS.S.ATT = DELETE(XRFS.S.ATT,1,I,0)
                  XRFS.S.MV = DELETE(XRFS.S.MV,1,I,0)
                  XRFS.S.LEN = DELETE(XRFS.S.LEN,1,I,0)
                  XRFS.S.JUSTIFY = DELETE(XRFS.S.JUSTIFY,1,I,0)
                  XRFS.S.OCONV = DELETE(XRFS.S.OCONV,1,I,0)
               NEXT I
               LINES = LNO - 1; OLD.START.LINE = 0
               REQUEST = "A"
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 3010
               WHILE LINES > OLD.LINES DO
                  GOSUB 3910
               REPEAT
               LN = LINES; LINES = DCOUNT(S.XRFS.SORT,AM)
               FOR I = 1 TO LINES
                  II = LN + I
                  XRFS.SORT<1,II> = S.XRFS.SORT<I>
                  XRFS.SORT.DICT<1,II> = S.XRFS.SORT.DICT<I>
                  XRFS.S.ATT<1,II> = S.XRFS.S.ATT<I>
                  XRFS.S.MV<1,II> = S.XRFS.S.MV<I>
                  XRFS.S.LEN<1,II> = S.XRFS.S.LEN<I>
                  XRFS.S.JUSTIFY<1,II> = S.XRFS.S.JUSTIFY<I>
                  XRFS.S.OCONV<1,II> = S.XRFS.S.OCONV<I>
               NEXT I
               S.XRFS.SORT = ""; S.XRFS.SORT.DICT = ""
               S.XRFS.S.ATT = ""; S.XRFS.S.MV = ""
               S.XRFS.S.LEN = ""; S.XRFS.S.JUSTIFY = ""
               S.XRFS.S.OCONV = ""
               LINES = DCOUNT(XRFS.SORT,VM); OLD.START.LINE = 0
               GOSUB 3900; GOSUB 3950
            END
         CASE REQUEST = "S" OR REQUEST = "SF" OR REQUEST = "s" OR REQUEST = "sf"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 3900
         CASE REQUEST = "SR" OR REQUEST = "sr"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 3900
         CASE REQUEST = "ST" OR REQUEST = "st"
            LN = 1
            GOSUB 3900
         CASE REQUEST = "SB" OR REQUEST = "sb"
            LN = LINES
            GOSUB 3900
         CASE (REQUEST[1,1] = "S" OR REQUEST[1,1] = "s") AND NUM(REQUEST[2,99])
            LN.NO = REQUEST[2,99] + 0
            IF LN.NO < 1 OR LN.NO > LINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               LN = LN.NO
               GOSUB 3900
            END
         CASE NOT(NUM(REQUEST))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE REQUEST < 1 OR REQUEST > 1
            ERRMSG = "Out of range, please re-enter"
            GOSUB 91000
         CASE 1
            GOSUB 1100
      END CASE
   WHILE ANCORE DO REPEAT
   RETURN
*
*---- Multi line entry
3010*
   GOSUB 3900
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
* PRINT @(0,SLN) : CL : LN "R#3" :
   P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
3100*
   X = 5; Y = SLN; TYP = 1; MAXL = 1; O.R = "O"
   VALDAT = "A":VM:"D"
   IF XRFS.SORT<1,LN> = "" THEN
      DEFAULT = "A"
   END ELSE
      DEFAULT = XRFS.SORT<1,LN>
   END
   HMSG = "Enter sort sequence (A)scending or (D)escending"
   CALL EDIT.SUB
   IF VALUE = "END" THEN
      IF REQUEST = "A" THEN
         XRFS.SORT = DELETE(XRFS.SORT,1,LN,0)
         XRFS.SORT.DICT = DELETE(XRFS.SORT.DICT,1,LN,0)
         XRFS.S.ATT = DELETE(XRFS.S.ATT,1,LN,0)
         XRFS.S.MV = DELETE(XRFS.S.MV,1,LN,0)
         XRFS.S.LEN = DELETE(XRFS.S.LEN,1,LN,0)
         XRFS.S.JUSTIFY = DELETE(XRFS.S.JUSTIFY,1,LN,0)
         XRFS.S.OCONV = DELETE(XRFS.S.OCONV,1,LN,0)
* PRINT @(0,SLN):CL:
         P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
* PRINT @(0,SLN) : CL : LN "R#3" :
* PRINT @(5,SLN) : XRFS.SORT<1,LN> "L#1" :
* PRINT @(8,SLN) : XRFS.SORT.DICT<1,LN> "L#25" :
* PRINT @(34,SLN): XRFS.S.ATT<1,LN> "R#3" :
* PRINT @(38,SLN): XRFS.S.MV<1,LN> "R#2" :
* PRINT @(42,SLN): XRFS.S.LEN<1,LN> "R#2" :
* PRINT @(45,SLN): XRFS.S.JUSTIFY<1,LN> "L#1" :
* PRINT @(47,SLN): XRFS.S.OCONV<1,LN> "L#5" :
         P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
         P_X := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.SORT<1,LN> "L#1"
         P_X := AM:8 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.SORT.DICT<1,LN> "L#25"
         P_X := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.ATT<1,LN> "R#3"
         P_X := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.MV<1,LN> "R#2"
         P_X := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.LEN<1,LN> "R#2"
         P_X := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.JUSTIFY<1,LN> "L#1"
         P_X := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.OCONV<1,LN> "L#5"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      GOTO 3199
   END
   XRFS.SORT<1,LN> = VALUE
3110*
   X = 8; Y = SLN; TYP = 1; MAXL = 25; O.R = "O"
   IF XRFS.SORT.FILE[1,5] = "DICT " THEN
      HMSG = "Enter Master Dictionary name *A0 through *A10"
      VALDAT = MD.DICT
   END ELSE
      HMSG = "Enter Dictionary name or NULL to build a new one"
   END
   IF XRFS.SORT.DICT<1,LN> # "" THEN
      DEFAULT = XRFS.SORT.DICT<1,LN>
   END
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END"
         GOTO 3100
      CASE VALUE = ""
         IF XRFS.SORT.FILE[1,5] = "DICT " THEN
            ERRMSG = "Master Dictionary name is required"
            GOSUB 91000; GOTO 3110
         END ELSE
            XRFS.SORT.DICT<1,LN> = VALUE
            GOTO 3120
         END
      CASE VALUE = "???" AND XRFS.SORT.FILE[1,5] # "DICT "
         MAT GEN.XREF.REC = ""
         GXR.NAME = "XREF.DICT"
         GXR.SORT.FILE = XRFS.SORT.FILE
         GXR.FILE = DICTSORTFILE
         GXR.XREF = GXR.FILE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.START.WLINE = 0
         GOSUB 2900; GOSUB 2950
         OLD.START.LINE = 0
         GOSUB 3900; GOSUB 3950
* PRINT @(0,SLN) : CL : LN "R#3" :
* PRINT @(5,SLN) : XRFS.SORT<1,LN> "L#1" :
         P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
         P_X := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.SORT<1,LN> "L#1"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF GXR.ID = "" THEN GOTO 3110
         VALUE = GXR.ID
* PRINT @(8,SLN) : VALUE "L#25" :
         P_X = 8 ; P_Y = SLN ; P_VALUE = VALUE "L#25" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE VALUE = XRFS.SORT.FILE OR VALUE = "VOC"
         ERRMSG = "Invalid Dictionary name (":VALUE:")"
         GOSUB 91000; GOTO 3110
   END CASE
   READ REC FROM DICTSORTFILE, VALUE ELSE
      ERRMSG = "Cannot locate Dictionary name (":VALUE:")"
      GOSUB 91000; GOTO 3110
   END
   BEGIN CASE
      CASE REC<1> # "D" AND REC<1> # "I"
         ERRMSG = "Invalid Dictionary structure (":VALUE:")"
         GOSUB 91000; GOTO 3110
   END CASE
   XRFS.SORT.DICT<1,LN> = VALUE
   XRFS.S.ATT<1,LN> = ""; XRFS.S.MV<1,LN> = ""
   XRFS.S.LEN<1,LN> = ""; XRFS.S.JUSTIFY<1,LN> = ""
   XRFS.S.OCONV<1,LN> = ""
* PRINT @(34,SLN): XRFS.S.ATT<1,LN> "R#3" :
* PRINT @(38,SLN): XRFS.S.MV<1,LN> "R#2" :
* PRINT @(42,SLN): XRFS.S.LEN<1,LN> "R#2" :
* PRINT @(45,SLN): XRFS.S.JUSTIFY<1,LN> "L#1" :
* PRINT @(47,SLN): XRFS.S.OCONV<1,LN> "L#5" :
   P_X = 34 ; P_Y = SLN ; P_VALUE = XRFS.S.ATT<1,LN> "R#3" ; P_OPT = ""
   P_X := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.MV<1,LN> "R#2"
   P_X := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.LEN<1,LN> "R#2"
   P_X := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.JUSTIFY<1,LN> "L#1"
   P_X := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.S.OCONV<1,LN> "L#5"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   GOTO 3199
3120*
   TYP = 3; X = 34; Y = SLN; MAXL = 3; O.R = "O"
   MINV = 0; MAXV = 150
   IF XRFS.S.ATT<1,LN> # "" THEN
      O.R = "O"; DEFAULT = XRFS.S.ATT<1,LN>
   END
   HMSG = "Enter field number, (0) for the item ID."
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END"
         GOTO 3100
      CASE VALUE = ""
         MAT GEN.XREF.REC = ""
         IF CPYLIB.CNT THEN
            LIMIT = CPYLIB.CNT
            FOR I = 1 TO LIMIT
               READ DUMMY FROM CPYLIB.FILES(I), XRFS.SORT.FILE THEN
                  GXR.XREF = CPYLIB.FILES(I)
                  LIMIT = 0
               END
            NEXT I
         END ELSE
            LIMIT = 1
         END
         IF LIMIT THEN
            ERRMSG = "Cannot locate the data structure definition for file ":XRFS.SORT.FILE
            GOSUB 91000; GOTO 3120
         END
         GXR.NAME = "XREF.CPYLIB"
         GXR.FILE = GXR.XREF
         GXR.SRCH.ID = XRFS.SORT.FILE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.START.WLINE = 0
         GOSUB 2900; GOSUB 2950
         OLD.START.LINE = 0
         GOSUB 3900; GOSUB 3950
* PRINT @(0,SLN) : CL : LN "R#3" :
* PRINT @(5,SLN) : XRFS.SORT<1,LN> "L#1" :
* PRINT @(8,SLN) : XRFS.SORT.DICT<1,LN> "L#25" :
         P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
         P_X := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.SORT<1,LN> "L#1"
         P_X := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.SORT.DICT<1,LN> "L#25"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 3120
      CASE NOT(NUM(VALUE))
         ERRMSG = "** Numeric input required **"
         GOSUB 91000; GOTO 3130
      CASE VALUE < 0 OR VALUE > 150
         ERRMSG = "** Out of range **"
         GOSUB 91000; GOTO 3130
   END CASE
   XRFS.S.ATT<1,LN> = VALUE
3130*
   IF XRFS.S.ATT<1,LN> = 0 THEN
      VALUE = 0
* PRINT @(38,SLN):VALUE "R#2":
      P_X = 38 ; P_Y = SLN ; P_VALUE = VALUE "R#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END ELSE
      X = 38; Y = SLN; TYP = 3; MAXL = 2; O.R = "O"
      MINV = 0; MAXV = 1
      IF XRFS.S.MV<1,LN> # "" THEN
         DEFAULT = XRFS.S.MV<1,LN>
      END ELSE
         DEFAULT = 0
      END
      HMSG = "Enter (1) if multi-valued field, otherwise (0)"
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 3100
   END
   XRFS.S.MV<1,LN> = VALUE
3140*
   X = 42; Y = SLN; TYP = 3; MAXL = 2
   MINV = 1; MAXV = 45
   IF XRFS.S.LEN<1,LN> # "" THEN
      O.R = "O"
      DEFAULT = XRFS.S.LEN<1,LN>
   END
   HMSG = "Enter field length"
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 3100
   XRFS.S.LEN<1,LN> = VALUE
3150*
   X = 45; Y = SLN; TYP = 1; MAXL = 1; O.R = "O"
   VALDAT = "L":VM:"R"
   HMSG = "Enter field justification (Left or Right)"
   IF XRFS.S.JUSTIFY<1,LN> # "" THEN
      DEFAULT = XRFS.S.JUSTIFY<1,LN>
   END ELSE
      DEFAULT = "L"
   END
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 3100
   XRFS.S.JUSTIFY<1,LN> = VALUE
3160*
   X = 47; Y = SLN; TYP = 1; MAXL = 5; O.R = "O"
   IF XRFS.S.OCONV<1,LN> # "" THEN
      DEFAULT = XRFS.S.OCONV<1,LN>
   END
   HMSG = "Enter conversion (null, MD2, MD0 ...."
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 3100
   XRFS.S.OCONV<1,LN> = VALUE
3199*
   LINES = DCOUNT(XRFS.SORT,VM)
   RETURN
*
*---- Get line number to update
3800*
   GOSUB 3900
   ECD.MINV = START.LINE; ECD.MAXV = LAST.LINE
   ECD.NUM = 43
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
   RETURN
*
*---- Display multi lines
3900*
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE -1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN RETURN
   OLD.START.LINE = START.LINE
*DT   ECD.NUM = 38
*DT   SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE / PAGE.SIZE + .9) "R%2"
*DT   ECD.ACTION = 5; CALL SCRN.EDIT
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
* PRINT @(0,SSLN) : CL : N "R#3" :
* PRINT @(5,SSLN) : XRFS.SORT<1,N> "L#1" :
* PRINT @(8,SSLN) : XRFS.SORT.DICT<1,N> "L#25" :
* PRINT @(34,SSLN): XRFS.S.ATT<1,N> "R#3" :
* PRINT @(38,SSLN): XRFS.S.MV<1,N> "R#2" :
* PRINT @(42,SSLN): XRFS.S.LEN<1,N> "R#2" :
* PRINT @(45,SSLN): XRFS.S.JUSTIFY<1,N> "L#1" :
* PRINT @(47,SSLN): XRFS.S.OCONV<1,N> "L#5" :
      P_X = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
      P_X := AM:5 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.SORT<1,N> "L#1"
      P_X := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.SORT.DICT<1,N> "L#25"
      P_X := AM:34 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.S.ATT<1,N> "R#3"
      P_X := AM:38 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.S.MV<1,N> "R#2"
      P_X := AM:42 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.S.LEN<1,N> "R#2"
      P_X := AM:45 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.S.JUSTIFY<1,N> "L#1"
      P_X := AM:47 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.S.OCONV<1,N> "L#5"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
* PRINT @(0,SSLN) : CL :
      P_X = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*---- Page numbers
3910*
   ECD.NUM = 38
   SCV.REC(ECD.NUM)<ESN> = INT(LN / PAGE.SIZE + .9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
3950*
   ECD.NUM = 39
   SCV.REC(ECD.NUM)<ESN> = INT(LINES / PAGE.SIZE + .9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
   RETURN
*
*---- Error routine
91000*
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
99999 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   RETURN
END
