   SUBROUTINE MENU.MAINT.TUF(MENU.ID,FORM.FILE,MENU.FILE,BYPASS)
*
*COPY>CPYLIB>COM1
*
**********************************************
* REVISION    - [11.0]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - MENU.MAINT.TUF
* BY          - diane; CBA
* DATE        - 12/03/1996
* DESCRIPTION - Called by MENU.MAINT to update the MENUFORM
*
*T21177 diane 01/07/1997 * SPLIT MENUFORM FILE INTO TWO FILES
*T21177 diane 07/10/1997 * Fix bmps
*ENDDOC
**********************************************
*   CPYLIBS
*
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>PMC_PROCESS
*
*---- EQUATES
*
   EQU W.STRING    TO 1
   EQU W.PROC      TO 2
   EQU W.SIDE      TO 3
   EQU W.BOX       TO 4
   EQU W.LINE      TO 5
   EQU W.HELP      TO 6
*
   EQU C.SYS       TO 1
   EQU C.PATH      TO 2
   EQU C.BACK      TO 3
   EQU C.FORE      TO 4
*
*---- VARIABLES
*
   DIM MENU(40)
   MAT MENU = ""
   WORKREC = ""
   CREC = ""
   KEY = 0
   TM = 1.5          ;* TOP MARGIN
   BM = 3.5          ;* BOTTOM MARGIN
   SSM = 10          ;* SINGLE SIDE MARGIN
   DSM = 2           ;* DOUBLE SIDE MARGIN
   SCM = 10          ;* SINGLE CENTER MARGIN
   DCM = 4           ;* DOUBLE CENTER MARGIN
   RXM = .5          ;* RECTANGLE MARGIN
*     RXS = VARIABLE    ;* RECTANGLE SPACING 
   PBH = 1           ;* PUSH BUTTON HEIGHT
   PBW = 30          ;* PUSH BUTTON WIDTH
   MAX.PIX.ACROSS = 640      ;* SCREEN SIZE ACROSS IN PIXELS
   MAX.PIX.DOWN = 460      ;* SCREEN SIZE DOWN IN PIXELS
   MAX.COR.ACROSS = 625
   MAX.COR.DOWN = 446
   RECT.ACROSS = ""
   LBL.ACROSS = ""
*
*---- OPEN ALL FILES
*
   OPEN "",FORM.FILE TO MENUFORM ELSE
      STOP "CANNOT OPEN FORMS ":FORM.FILE:" FILE"
   END
   OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE
      STOP "CANNOT OPEN PMC_PROCESS_XREF FILE"
   END
   OPEN "","PMC_PROCESS" TO PMC_PROCESS ELSE
      STOP "CANNOT OPEN PMC_PROCESS FILE"
   END
   OPEN "",MENU.FILE TO MENUS ELSE
      STOP "CANNOT OPEN MENU ":MENU.FILE:" FILE"
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      STOP "CANNOT OPEN CONTROL FILE"
   END
*
*---- INITIALIZATION
*
   PROMPT ""
*
*---- MAIN PROCESSING
*
100*
* BYPASS = 1
   MATREAD MENU FROM MENUS, MENU.ID ELSE GOTO 99999
   READ CREC FROM CONTROL, "MENUS.GUI" ELSE
      CREC = ''
CREC<1> = "PMCLOGO":VM:"..\VSIPIC\PMCLOGOC.BMP":VM:"0":SVM:"0":SVM:"0":VM:"0":SVM:"255":SVM:"255"
CREC<2> = "SYS":VM:"..\VSIPIC\KEYS.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<3> = "APS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<4> = "ARS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<5> = "FAS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<6> = "GLS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<7> = "ICS":VM:"..\VSIPIC\PAPER.BMP":VM:"0":SVM:"64":SVM:"128":VM:"255":SVM:"255":SVM:"255"
CREC<8> = "JCS":VM:"..\VSIPIC\FACTORY.BMP":VM:"128":SVM:"0":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<9> = "JES":VM:"..\VSIPIC\FACTORY.BMP":VM:"128":SVM:"0":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<10> = "OPS":VM:"..\VSIPIC\FACTORY.BMP":VM:"128":SVM:"0":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<11> = "POS":VM:"..\VSIPIC\PAPER.BMP":VM:"0":SVM:"64":SVM:"128":VM:"255":SVM:"255":SVM:"255"
CREC<11> = "POR":VM:"..\VSIPIC\PAPER.BMP":VM:"0":SVM:"64":SVM:"128":VM:"255":SVM:"255":SVM:"255"
CREC<12> = "PRS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<13> = "EP4":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<14> = "PR4":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<15> = "EPS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<16> = "PSS":VM:"..\VSIPIC\FACTORY.BMP":VM:"128":SVM:"0":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<17> = "SAS":VM:"..\VSIPIC\MONEYPAK.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<18> = "PMC":VM:"..\VSIPIC\KEYS.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<19> = "CBA":VM:"..\VSIPIC\COMPUTER.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
CREC<20> = "UTL":VM:"..\VSIPIC\COMPUTER.BMP":VM:"0":SVM:"128":SVM:"0":VM:"255":SVM:"255":SVM:"255"
   WRITE CREC ON CONTROL, "MENUS.GUI"
   END
* PRINT "PROCESSING MENU ":MENU.ID
   GOSUB 1000
   FOR PTR = 1 TO WPTR
   NEXT PTR
   GOSUB 2000
   GOSUB 3000
   GOSUB 4000
   WRITE BLD.TUF.SCRN ON MENUFORM, MENU.ID
   GOTO 99999
*
*---- PROCESS SELECTED MENU
*
1000*
   ITEM.CNT = 1
   LIMIT=33
   FOR I=2 TO LIMIT
      IF MENU(I)="" THEN
         LIMIT=0
      END ELSE
         ITEM.CNT += 1
      END
   NEXT I
   WORKREC = ""
   IF NOT(BYPASS) THEN
      BEGIN CASE
         CASE MENU.ID = "M.MASTER"
            RETURN
*         CASE MENU.ID = "M.FS"
*            RETURN
*         CASE MENU.ID = "M.INV"
*            RETURN
*         CASE MENU.ID = "M.JC"
*            RETURN
*         CASE MENU.ID = "M.PMC"
*            RETURN
*         CASE MENU.ID = "M.UTL"
*            RETURN
         CASE 1
            PB.COLOR = ''
            PB.COLOR.FOR = ''
      END CASE
   END
   PB.COLOR = ''
   PB.COLOR.FOR = ''
   ICON.BMP = ''
*
*---- Determine screen format by no lines
*
   BREAK.POINT = 17
   BEGIN CASE
      CASE ITEM.CNT > 17
         LAYOUT = '2SIDES'
         BREAK.POINT = INT(ITEM.CNT / 2 + .5)
      CASE ITEM.CNT > 8
         LAYOUT = 'SINGLE'
      CASE 1
         LAYOUT = 'DOUBLE'
   END CASE
*
*---- Build workrec with valid labels and selections
*
   WPTR = 0
   WORKREC = ""
   BIG.LABEL = 0
   LBL.ACROSS = 240
   FOR I = 2 TO ITEM.CNT
      PREC = ""
      BEGIN CASE
         CASE MENU(I)<1,1> = "C"
            IF CHANGE(MENU(I)<1,3>,'-','') # ''  AND TRIM(MENU(I)<1,3>) # '' THEN
               WPTR += 1
               WORKREC<WPTR,W.STRING> = MENU(I)<1,3>
               WORKREC<WPTR,W.PROC> = MENU(I)<1,1>
*        IF I > 17 THEN
               IF I > BREAK.POINT THEN
                  WORKREC<WPTR,W.SIDE> = 2
               END ELSE
                  WORKREC<WPTR,W.SIDE> = 1
               END
            END
         CASE MENU(I)<1,1>[1,2] = "M." OR MENU(I)<1,1>[1,3] = "*M."
            WPTR += 1
            WORKREC<WPTR,W.STRING> = MENU(I)<1,3>
            WORKREC<WPTR,W.PROC> = 'activate~hCb~&M&':MENU(I)<1,1>
            WORKREC<WPTR,W.HELP> = 'Menu ':MENU(I)<1,1>[3,99]
*      IF I > 17 THEN
            IF I > BREAK.POINT THEN
               WORKREC<WPTR,W.SIDE> = 2
            END ELSE
               WORKREC<WPTR,W.SIDE> = 1
            END
         CASE 1
            WPTR += 1
            READ PREC FROM PMC_PROCESS_XREF, MENU(I)<1,1> THEN
               WORKREC<WPTR,W.PROC> = 'activate~hCb~&P&':PREC<1>
               WORKREC<WPTR,W.HELP> = 'Process ':PREC<1>
            END ELSE
               WORKREC<WPTR,W.PROC> = 'activate~hCb~&P&': "!&@^#%$"
               WORKREC<WPTR,W.HELP> = "!&@^#%$"
            END
            WORKREC<WPTR,W.STRING> = MENU(I)<1,3>
*      IF I > 17 THEN
            IF I > BREAK.POINT THEN
               WORKREC<WPTR,W.SIDE> = 2
            END ELSE
               WORKREC<WPTR,W.SIDE> = 1
            END
      END CASE
* TEST      IF LEN(WORKREC<WPTR,W.STRING>) > 30 THEN
* TEST         BIG.LABEL = 1
      TEMP.LBL.ACROSS =  LEN(WORKREC<WPTR,W.STRING>)*8+2
TEMP.SIDE = WORKREC<WPTR,W.SIDE>
      IF TEMP.LBL.ACROSS > LBL.ACROSS<1,TEMP.SIDE> THEN
         LBL.ACROSS<1,TEMP.SIDE> = TEMP.LBL.ACROSS
      END
* TEST      END
   NEXT I
   RETURN
*
*---- Convert workrec to form
*
2000 *
   SIDE = ''
   LINE = 0
   BOX = 0
   PRIOR.SIDE = ''
   PRIOR.BOX = ''
   FOR PTR = 1 TO WPTR
      SIDE = WORKREC<PTR,W.SIDE>
      IF WORKREC<PTR,W.PROC> = "C" OR PTR = 1 THEN
         BOX += 1
         LINE += 1
         WORKREC<PTR,W.BOX> = BOX
         WORKREC<PTR,W.LINE> = LINE
      END ELSE
         IF BOX = 0 AND LINE = 0 THEN
            BOX += 1
            LINE += 1
            WORKREC<PTR,W.BOX> = BOX
            WORKREC<PTR,W.LINE> = LINE
         END ELSE
            LINE += 1
            WORKREC<PTR,W.BOX> = BOX
            WORKREC<PTR,W.LINE> = LINE
         END
      END
   NEXT PTR
*
   SIDECNT = 0
   BOXCNT = 0
   LINECNT = 0
   SIDE = ''
   BOX = 0
   LINE = 0
   PRIOR.SIDE = 'XXXX'
   PRIOR.BOX = ''
   FOR PTR = 1 TO WPTR
      SIDE = WORKREC<PTR,W.SIDE>
      BOXIN = WORKREC<PTR,W.BOX>
      LINEIN = WORKREC<PTR,W.LINE>
      BEGIN CASE
         CASE SIDE # PRIOR.SIDE
            PRIOR.SIDE = SIDE
            SIDECNT<1,SIDE> = SIDE
            BOX = 1
            PRIOR.BOX = BOXIN
            LINE = 1
            BOXCNT<1,SIDE,BOX> = BOX
            LINECNT<1,SIDE,BOX> = LINE
            WORKREC<PTR,W.BOX> = BOX
            WORKREC<PTR,W.LINE> = LINE
         CASE BOXIN # PRIOR.BOX
            PRIOR.BOX = BOXIN
            BOX += 1
            LINE = 1
            BOXCNT<1,SIDE,BOX> = BOX
            LINECNT<1,SIDE,BOX> = LINE
            WORKREC<PTR,W.BOX> = BOX
            WORKREC<PTR,W.LINE> = LINE
         CASE 1
            LINE += 1
            LINECNT<1,SIDE,BOX> = LINE
            WORKREC<PTR,W.BOX> = BOX
            WORKREC<PTR,W.LINE> = LINE
      END CASE
   NEXT PTR
   RETURN
*
*---- Calculate space used outside of boxes
3000 *
*---- Determine form size
   MCOUNT =  DCOUNT(MENU.ID,".")
   BEGIN CASE
      CASE MCOUNT = 2          ;* M.JCS
         FORM.DOWN = 455
         FORM.ACROSS = 635
         FORM.CORD = "5":SVM:"5"
      CASE MCOUNT = 3          ;* M.JCS.FM
         FORM.DOWN = 450
         FORM.ACROSS = 630
         FORM.CORD = "10":SVM:"10"
      CASE MCOUNT GE 4          ;* M.JCS.FM.1
         FORM.DOWN = 445
         FORM.ACROSS = 625
         FORM.CORD = "15":SVM:"15"
   END CASE
   FORM.DIM = FORM.ACROSS:SVM:FORM.DOWN
*
   TOP.RESERVED.DOWN = 45
   BOTTOM.RESERVED.DOWN = 50
   MIN.SIDE.MARGIN = 10
   MAX.AVAIL.DOWN = FORM.DOWN - BOTTOM.RESERVED.DOWN - TOP.RESERVED.DOWN
   MAX.AVAIL = MAX.AVAIL.DOWN
   MAX.AVAIL.ACROSS = FORM.ACROSS - (MIN.SIDE.MARGIN * 2)
*
*---- Determine Minimum space required and adjust Line spacing
*
   MIN.LINE.SPACE = 2
   MAX.LINE.SPACE = 10
   LINE.SPACE = 1:VM:1
   LEFT.OVER.SPACE = 0:VM:0
   SIDE.CNT = DCOUNT(SIDECNT,VM)
   FOR SPTR = 1 TO SIDE.CNT
      RECT.CNT = DCOUNT(BOXCNT<1,SPTR>,SVM)
      RECT.DOWN = ""
      MAX.AVAIL.DOWN<1,SPTR> = MAX.AVAIL - (5 * RECT.CNT)
      DONE = 0
      LINE.USAGE = 0
      LINE.SPACES = 0
*  FOR LINE.SPACE = MIN.LINE.SPACE TO MAX.LINE.SPACE WHILE DONE = 0
      LOOP
         IF LINE.SPACE<1,SPTR> GE 10 THEN DONE = 1
      UNTIL DONE DO
         LINE.SPACE<1,SPTR> += 1
         FOR PTR = 1 TO RECT.CNT
            NO.LINES = LINECNT<1,SPTR,PTR>
            LINE.USAGE<1,PTR> = NO.LINES * 20
            LINE.SPACES<1,PTR> = NO.LINES + 1
            RECT.DOWN<1,PTR> = (NO.LINES * 20) + ((NO.LINES + 1) * LINE.SPACE<1,SPTR>)
         NEXT PTR
         TOTAL.LINE.USAGE = SUM(LINE.USAGE)
         TOTAL.LINE.SPACES = SUM(LINE.SPACES)
         TEST1 = TOTAL.LINE.USAGE + (TOTAL.LINE.SPACES * LINE.SPACE<1,SPTR>) + ((RECT.CNT -1) * LINE.SPACE<1,SPTR>)
         TEST2 = TOTAL.LINE.USAGE + (TOTAL.LINE.SPACES * (LINE.SPACE<1,SPTR> + 1)) + ((RECT.CNT -1) * (LINE.SPACE<1,SPTR> + 1))
         IF TEST2 GE MAX.AVAIL.DOWN<1,SPTR> THEN
            DONE = 1
         END
         LEFT.OVER.SPACE<1,SPTR> = MAX.AVAIL.DOWN<1,SPTR> - TEST1
      REPEAT
   NEXT SPTR
   IF SIDE.CNT = 2 THEN
*  IF LINE.SPACE<1,1> > LINE.SPACE<1,2> THEN
      IF LEFT.OVER.SPACE<1,1> > LEFT.OVER.SPACE<1,2> THEN
         LINE.SPACE = LINE.SPACE<1,2>
         LEFT.OVER.SPACE = LEFT.OVER.SPACE<1,2>
      END ELSE
         LINE.SPACE = LINE.SPACE<1,1>
         LEFT.OVER.SPACE = LEFT.OVER.SPACE<1,1>
      END
   END ELSE
      LINE.SPACE = LINE.SPACE<1,1>
      LEFT.OVER.SPACE = LEFT.OVER.SPACE<1,1>
   END
*
*---- Determine side margin
   SIDE.CNT = DCOUNT(SIDECNT,VM)
IF SIDE.CNT = 1 THEN
RECT.USAGE = LBL.ACROSS<1,1> + (2 * (LINE.SPACE + 1))
END ELSE
RECT.USAGE = LBL.ACROSS<1,1> + (2 * (LINE.SPACE + 1))
RECT.USAGE = RECT.USAGE + (LBL.ACROSS<1,2> + (2 * (LINE.SPACE + 1)))
END
*   RECT.USAGE = (LBL.ACROSS + (2 * (LINE.SPACE + 1))) * DCOUNT(SIDECNT,VM)
   MIN.SIDE.MARGIN = 10
   MAX.SIDE.MARGIN = 30
   MIN.FORM.ACROSS = 360
   MAX.FORM.ACROSS = FORM.ACROSS
   BEGIN CASE
      CASE SIDE.CNT = 1
         IF (RECT.USAGE + (MIN.SIDE.MARGIN * 2)) LE 360 THEN
            MARGIN.UNIT = INT((360 - RECT.USAGE) / 4)
            SIDE.MARGIN = 2 * MARGIN.UNIT
            CENTER.MARGIN = 0
            FORM.ACROSS = 360
         END ELSE
            MARGIN.UNIT = MIN.SIDE.MARGIN
            SIDE.MARGIN = 2 * MARGIN.UNIT
            CENTER.MARGIN = 0
            FORM.ACROSS = RECT.USAGE + (2 * SIDE.MARGIN)
         END
      CASE SIDE.CNT = 2
         DONE = 0
         MARGIN.UNIT = 10
         LOOP
            IF MARGIN.UNIT GE 40 THEN DONE = 1
         UNTIL DONE DO
            MARGIN.UNIT += 1
            TEST1 = RECT.USAGE + (MARGIN.UNIT * 5)
            TEST2 = RECT.USAGE + ((MARGIN.UNIT + 1) * 5)
            IF TEST2 GE MAX.FORM.ACROSS THEN
               DONE = 1
            END
         REPEAT
         SIDE.MARGIN = 2 * MARGIN.UNIT
         CENTER.MARGIN = MARGIN.UNIT
         FORM.ACROSS = RECT.USAGE + (5 * MARGIN.UNIT)
   END CASE
   RETURN
*
** NOTE:   LINE.BOTTOM CANNOT BE GREATER THAN MAX.AVAIL.DOWN
*
*---- Build form
4000 *
   GOSUB 10000
   GOSUB 20000
   CORR.DOWN = 45
   RESET.CORR = 0
   RECT.X = ""
   FOR PTR = 1 TO WPTR
      SPTR = WORKREC<PTR,W.SIDE>
      BPTR = WORKREC<PTR,W.BOX>
      IF SPTR = 2 AND NOT(RESET.CORR) THEN
         CORR.DOWN = 45
         RESET.CORR = 1
         RECT.X = ""
      END
      BEGIN CASE
         CASE WORKREC<PTR,W.PROC> = "C"
            GOSUB 30000      ;* Build Rectangle
            IF RECT.ACROSS = '' THEN
               RECT.ACROSS = LBL.ACROSS<1,SPTR>
            END
            GOSUB 40000      ;* Build Label
         CASE 1
            IF RECT.ACROSS = '' THEN
               RECT.ACROSS = LBL.ACROSS<1,SPTR>
            END
            GOSUB 50000      ;* Build Push Button
      END CASE
   NEXT PTR
   GOSUB 60000               ;* Adjust form size/coordinates
   RETURN
*
*---- Build Formclass
10000 *
   BLD.TUF.SCRN = ''
*COPY>CBABP>MENU.STANDARDS
   MSYS = FIELD(MENU.ID,".",2)
   MSYS1 = MSYS
   BEGIN CASE
      CASE MSYS = 'FS'
         MSYS1 = "ARS"
**         ICON.BMP = "NONE"
      CASE MSYS = 'INV'
         MSYS1 = "ICS"
**         ICON.BMP = "NONE"
      CASE MSYS = 'JC'
         MSYS1 = "JCS"
**         ICON.BMP = "NONE"
      CASE MSYS = 'PMC'
**         ICON.BMP = "NONE"
      CASE MSYS = 'QUIK'
         MSYS1 = "JES"
      CASE MSYS = 'ONP'
         MSYS1 = "SYS"
      CASE MSYS = 'CODE'
         MSYS1 = "SYS"
      CASE MSYS = 'CSR'
         MSYS1 = "SYS"
CASE MSYS = 'NDC'
MSYS1 = "JCS"
*      CASE 1
*         MSYS1 = "SYS"
   END CASE
   CCNT = DCOUNT(CREC,AM)
   FOR CPTR = 2 TO CCNT
      IF CREC<CPTR,C.SYS> = MSYS1 THEN
         PB.COLOR = CREC<CPTR,C.BACK>
         PB.COLOR.FOR = CREC<CPTR,C.FORE>
         IF ICON.BMP # "NONE" THEN
            ICON.BMP = CREC<CPTR,C.PATH>
         END
         CPTR = CCNT -1
      END
   NEXT CPTR
   LOGO.BMP = CREC<1,C.PATH>
   TPTR = 1
*
   READ BLD.TUF.SCRN FROM MENUFORM, "BUILD" THEN
      LOCATE 'graphic' IN BLD.TUF.SCRN<19> SETTING VAL ELSE NULL
      BLD.TUF.SCRN<20,VAL> = LOGO.BMP
      IF ICON.BMP # "NONE" THEN
         LOCATE 'graphic' IN BLD.TUF.SCRN<23> SETTING VAL ELSE NULL
         BLD.TUF.SCRN<24,VAL> = ICON.BMP
      END
      BLD.TUF.SCRN<TPTR> = FM.NAME:' ':OCONV(TIME(),"MTS"):'  ':OCONV(DATE(),"D")
      TPTR = DCOUNT(BLD.TUF.SCRN,AM) - 3
*     END ELSE
*        BLD.TUF.SCRN<TPTR> = FM.NAME:' ':OCONV(TIME(),"MTS"):'  ':OCONV(DATE(),"D")
*        BLD.TUF.SCRN<TPTR+1> = FM.PARENT
*        BLD.TUF.SCRN<TPTR+1,-1> = FM.CHILDREN
*        FM.OBJECT.NAME = MENU.ID
*        BLD.TUF.SCRN<TPTR+1,-1> = FM.OBJECT.NAME
*        BLD.TUF.SCRN<TPTR+1,-1> = ""
*        BLD.TUF.SCRN<TPTR+2> = FM.ATTR
*        BLD.TUF.SCRN<TPTR+3> = FM.ATTR.VAL
*        TPTR += 4
*        BLD.TUF.SCRN<TPTR> = FT.NAME
*        BLD.TUF.SCRN<TPTR+1> = FT.PARENT
*        BLD.TUF.SCRN<TPTR+1,-1> = FT.CHILDREN
*        BLD.TUF.SCRN<TPTR+1,-1> = FT.OBJECT.NAME
*        BLD.TUF.SCRN<TPTR+2> = FT.ATTR
*        BLD.TUF.SCRN<TPTR+3> = FT.ATTR.VAL
*        BLD.TUF.SCRN<2,2,-1> = TPTR
   END
   LOCATE 'dimensions' IN BLD.TUF.SCRN<3>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<4,VAL> = FORM.DIM
   LOCATE 'coordinates' IN BLD.TUF.SCRN<3>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<4,VAL> = FORM.CORD
   RETURN
*
*---- Update Title in Formclass
20000 *
   LOCATE 'title' IN BLD.TUF.SCRN<3>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<4,VAL> = MENU(1)<1,3>
   BLD.TUF.SCRN<2,3> = MENU.ID
   RETURN
*
*---- Build Rectclass
30000 *
*---- Determine Rectangle Size
   NO.LINES = LINECNT<1,SPTR,BPTR>
   RECT.DOWN = (NO.LINES * 20) + ((NO.LINES + 1) * LINE.SPACE)
   RECT.ACROSS = LBL.ACROSS<1,SPTR> + (2 * (LINE.SPACE + 1))
   RECT.DIM = RECT.ACROSS:SVM:RECT.DOWN
   IF SPTR = 2 THEN
   RECT1.ACROSS = LBL.ACROSS<1,1> + (2 * (LINE.SPACE + 1))
      RECT.X = SIDE.MARGIN + RECT1.ACROSS + CENTER.MARGIN
   END ELSE
      IF SIDE.CNT = 1 THEN
         RECT.X = SIDE.MARGIN
      END ELSE
         RECT.X = SIDE.MARGIN
      END
   END
   IF BPTR > 1 THEN
      CORR.DOWN += LINE.SPACE
   END
   RECT.Y = CORR.DOWN
   RECT.CORD = RECT.X:SVM:RECT.Y
   CORR.DOWN += LINE.SPACE
*
   TPTR += 4
   FR.NO += 1
   BLD.TUF.SCRN<2,2,-1> = TPTR
   BLD.TUF.SCRN<TPTR> = FR.NAME
   BLD.TUF.SCRN<TPTR+1> = FR.PARENT
   BLD.TUF.SCRN<TPTR+1,-1> = FR.CHILDREN
   BLD.TUF.SCRN<TPTR+2> = FR.ATTR
   BLD.TUF.SCRN<TPTR+3> = FR.ATTR.VAL
*  LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = 50
*  LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = SLN
*  LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = RPR.MAXL
   LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = RECT.DIM
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = RECT.CORD
*  LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = RPR.HMSG
*  LOCATE 'hide_until_inp' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = ''
   BLD.TUF.SCRN<TPTR+1,-1> = FR.OBJECT.NAME:FR.NO
   RETURN
*
*---- Build Label
40000 *
*---- Determine Line Cordinates
* TEST   RECT.ACROSS = 260 + (2 * (LINE.SPACE + 1))
* TEST   RECT.ACROSS = LBL.ACROSS + (2 * (LINE.SPACE + 1))
**   IF SPTR = 2 THEN
*  LBL.X = 15 + RECT.ACROSS + LINE.SPACE + 20 + FORM.CORD<1,1,1>
**      LBL.X = 25 + RECT.ACROSS + LINE.SPACE + 20 + FORM.CORD<1,1,1>
**   END ELSE
*  LBL.X = 25 + FORM.CORD<1,1,1>
**      IF SIDE.CNT = 1 THEN
**         LBL.X = RECT.X + LINE.SPACE
*DT         LBL.X = 25 + FORM.CORD<1,1,1>
**      END ELSE
**         LBL.X = 35 + FORM.CORD<1,1,1>
**      END
**   END
   LBL.Y = CORR.DOWN
*DT   LBL.CORD = LBL.X:SVM:LBL.Y
   IF RECT.X = "" THEN
      IF SPTR = 2 THEN
   RECT1.ACROSS = LBL.ACROSS<1,1> + (2 * (LINE.SPACE + 1))
         RECT.X = SIDE.MARGIN + RECT1.ACROSS + CENTER.MARGIN
      END ELSE
         IF SIDE.CNT = 1 THEN
            RECT.X = SIDE.MARGIN
         END ELSE
            RECT.X = SIDE.MARGIN
         END
      END
   END
   LBL.CORD = RECT.X+LINE.SPACE:SVM:LBL.Y
   CORR.DOWN += LINE.SPACE + 17
*
   TPTR += 4
   FL.NO += 1
   BLD.TUF.SCRN<2,2,-1> = TPTR
   BLD.TUF.SCRN<TPTR> = FL.NAME
   BLD.TUF.SCRN<TPTR+1> = FL.PARENT
   BLD.TUF.SCRN<TPTR+1,-1> = FL.CHILDREN
   BLD.TUF.SCRN<TPTR+1,-1> = FL.OBJECT.NAME:FL.NO
   BLD.TUF.SCRN<TPTR+2> = FL.ATTR
   BLD.TUF.SCRN<TPTR+3> = FL.ATTR.VAL
   LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = WORKREC<PTR,W.STRING>
*  LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = T.X
*  LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
*  LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*  BLD.TUF.SCRN<TPTR+3,VAL> = LEN(STMT)
   LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = PB.COLOR
   LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = PB.COLOR.FOR
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = LBL.CORD
*   IF LEN(WORKREC<PTR,W.STRING>) > 30 THEN
   LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   DIMH = '17'
*   DIMW = LEN(WORKREC<PTR,W.STRING>)*8+2
*TEMP.SIDE = WORKREC<WPTR,W.SIDE>
   DIMW = LBL.ACROSS<1,SPTR>
   BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
*   END
   RETURN
*
*---- Build Pbclass
50000 *
**   IF SPTR = 2 THEN
*  PB.X = 15 + RECT.ACROSS + LINE.SPACE + 20 + FORM.CORD<1,1,1>
**      IF RECT.ACROSS = '' THEN
*        RECT.ACROSS = 260 + (2 * (LINE.SPACE + 1))
* TEST         RECT.ACROSS = 265
**         RECT.ACROSS = LBL.ACROSS + (2 * (LINE.SPACE + 1))
**      END
**      PB.X = 25 + RECT.ACROSS + LINE.SPACE + 20 + FORM.CORD<1,1,1>
**   END ELSE
*  PB.X = 25 + FORM.CORD<1,1,1>
**      IF SIDE.CNT = 1 THEN
* TEST         PB.X = 25 + FORM.CORD<1,1,1>
**         FDIM = 5 + RECT.ACROSS + FORM.CORD<1,1,2> + 46
**         PB.X = INT((FDIM - RECT.ACROSS) / 2)
**      END ELSE
**         PB.X = 35 + FORM.CORD<1,1,1>
**      END
**   END
   PB.Y = CORR.DOWN
*DT   PB.CORD = PB.X:SVM:PB.Y
   IF RECT.X = "" THEN
      IF SPTR = 2 THEN
   RECT1.ACROSS = LBL.ACROSS<1,1> + (2 * (LINE.SPACE + 1))
         RECT.X = SIDE.MARGIN + RECT1.ACROSS + CENTER.MARGIN
      END ELSE
         IF SIDE.CNT = 1 THEN
            RECT.X = SIDE.MARGIN
         END ELSE
            RECT.X = SIDE.MARGIN
         END
      END
   END
   PB.CORD = RECT.X+LINE.SPACE:SVM:PB.Y
   CORR.DOWN += LINE.SPACE + 20
   TPTR += 4
   FP.NO += 1
   BLD.TUF.SCRN<2,2,-1> = TPTR
   BLD.TUF.SCRN<TPTR> = FP.NAME
   BLD.TUF.SCRN<TPTR+1> = FP.PARENT
   BLD.TUF.SCRN<TPTR+1,-1> = FP.CHILDREN
   BLD.TUF.SCRN<TPTR+1,-1> = FP.OBJECT.NAME:FP.NO
   BLD.TUF.SCRN<TPTR+2> = FP.ATTR
   BLD.TUF.SCRN<TPTR+3> = FP.ATTR.VAL
   LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = WORKREC<PTR,W.STRING>
   LOCATE 'down_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = UPCASE(WORKREC<PTR,W.STRING>)
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = PB.CORD
   LOCATE 'callbacks' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = WORKREC<PTR,W.PROC>
   LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = CMGRAY
   LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = CBLUE
   LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   HELP.DESC = WORKREC<PTR,W.HELP>
* IF HELP.DESC[1,2] = "M." THEN
* HELP.DESC = "Menu ":HELP.DESC[3,99]
* END ELSE
* HELP.DESC = "Program ":HELP.DESC
* END
   BLD.TUF.SCRN<TPTR+3,VAL> = HELP.DESC
*   IF LEN(WORKREC<PTR,W.STRING>) > 30 THEN
   LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   DIMH = '20'
*   DIMW = LEN(WORKREC<PTR,W.STRING>)*8+2
* TEMP.SIDE = WORKREC<WPTR,W.SIDE>
   DIMW = LBL.ACROSS<1,SPTR>
   BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
*   END
   RETURN
*
*---- Make Adjustments
60000 *
*---- Move prompt line
   SIDE.CNT = DCOUNT(SIDECNT,VM)
   TPTR = 21
   FDOWN = FORM.DOWN - LEFT.OVER.SPACE
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL,2> = FDOWN - 32
   IF SIDE.CNT = 1 THEN
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL,1> = 290
      IF RECT.ACROSS = '' THEN
         RECT.ACROSS = LBL.ACROSS<1,SPTR>
      END
   END
*
*---- Adjust form size
   TPTR = 1
   IF SIDE.CNT = 2 THEN
      RECT.A = SIDE.MARGIN + RECT.ACROSS + LINE.SPACE + CENTER.MARGIN
      RECT.B = SIDE.MARGIN + RECT.ACROSS
      FDIM = RECT.A + RECT.B
   END ELSE
      FDIM = 5 + RECT.ACROSS + FORM.CORD<1,1,2> + 46
   END
   LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL,1> = FORM.ACROSS
   BLD.TUF.SCRN<TPTR+3,VAL,2> = FDOWN
   TPTR = 25
   FORM.RT.EDGE =FORM.ACROSS
   ICON.DIM = 35
   IF SIDE.CNT = 1 THEN
      ICON.CORD = FORM.RT.EDGE - ICON.DIM - SIDE.MARGIN
   END ELSE
      ICON.CORD = FORM.RT.EDGE - ICON.DIM - SIDE.MARGIN
   END
   ICON.CORD = ICON.CORD:SVM:"2"
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = ICON.CORD
   LOCATE 'graphic' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = ICON.BMP
   LOCATE 'down_graphic' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = ICON.BMP
   LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = PB.COLOR
   LOCATE 'foreground' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = PB.COLOR.FOR
*
*---- Adjust Company
   TPTR = 29
   CONO.DIM = 180
   IF SIDE.CNT = 1 THEN
      CONO.CORD = FORM.RT.EDGE - SIDE.MARGIN - CONO.DIM
   END ELSE
      CONO.CORD = FORM.RT.EDGE - SIDE.MARGIN - CONO.DIM
   END
   CONO.CORD = CONO.CORD:SVM:"32"
   LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = CONO.CORD
   LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
   BLD.TUF.SCRN<TPTR+3,VAL> = ""
   RETURN
*
*
*---- END OF PROGRAM
*
99999*
   RETURN
   END
