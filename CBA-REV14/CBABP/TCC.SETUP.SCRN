   SUBROUTINE TCC.SETUP.SCRN(CURR.PORT)
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.KSEL
**********************************************
* REVISION    - [11.0]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - TCC.SETUP.SCRN
* BY          - diane; CBA
* DATE        - 11/19/1996
* DESCRIPTION -
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21899 diane 05/08/1997 * Accept "AUTO" as default
*ENDDOC
**********************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>PORT.MENU
*COPY>PMC.CPYLIB>SECURITY
*COPY>CPYLIB>PORT.CONTROL
* *COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
   OPEN "","M.SCREENS" TO M.SCREENS ELSE
      ERRMSG = 'CANNOT OPEN M.SCREENS'
      GOTO 93000
   END
*
   DIM KSL.DATA(25)
   DIM PORTS(1000)
   DIM S.TCC.PORT.REC(7)
   DIM S.KSL.REC(15)
   MAT S.TCC.PORT.REC = MAT TCC.PORT.REC
   MAT S.KSL.REC = MAT KSL.REC
*
   PAGE.SIZE = 6
   BEGIN.PAGE = 13
   LINE.SPACE = 1
   OLD.START.LINE = 0
*       PORT.NO = "!%@$#"
*
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
   LOGIN_NAME = @LOGNAME
   WRITE.SEC = 0
   UPD.FLAG = 0
   ORIG.PC.PORT.TYPE = PC.PORT.TYPE    ;* USE FOR SCRN.EDIT
   READ DUMMY FROM TCC, CURR.PORT THEN
      DISK.PC.PORT.TYPE = DUMMY<6>
      DISK.PC.PORT.TSEL = DUMMY<7>
   END ELSE
      READ DUMMY FROM TCC, LOGIN_NAME THEN
         DISK.PC.PORT.TYPE = DUMMY<6>
         DISK.PC.PORT.TSEL = DUMMY<7>
      END ELSE
         DISK.PC.PORT.TYPE = "STD"
         DISK.PC.PORT.TSEL = "STD"
      END
   END
*CALL TCC.SUB(PORT.NO)
*
*---- Setup SCRN.EDIT & EDIT.SUB
*
*      MAT EDIT.COM = ""
*      TYP = 0; CALL EDIT.SUB
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = "TCC.SETUP"
   ECD.ACTION = 1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION = 2; CALL SCRN.EDIT
   GOSUB 1000
   ECD.ACTION = 3; CALL SCRN.EDIT
*
   MORE = 1
   LOOP
      CURR.PC.PORT.TYPE = PC.PORT.TYPE
      PC.PORT.TYPE = ORIG.PC.PORT.TYPE
      ECD.NUM = 17
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      PC.PORT.TYPE = CURR.PC.PORT.TYPE
      BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END" OR OPTION = ""
            MORE = 0
            CALL TCC.SUB(CURR.PORT)
            MAT KSL.REC = MAT S.KSL.REC
         CASE OPTION = "I"
            MAT TCC.PORT.REC = "STD"
            MOUSE.PORT.TYPE = 0
            MAT S.TCC.PORT.REC = MAT TCC.PORT.REC
            UPD.FLAG = 1
            GOSUB 1000
         CASE OPTION = "F"
            MORE = 0
            READU DUMMY FROM TCC, PORT.NO ELSE DUMMY = ""
            FOR I = 1 TO 7
               IF S.TCC.PORT.REC(I) # "STD" AND DUMMY<I> = "AUTO" THEN
                  S.TCC.PORT.REC(I) = "AUTO"
               END
            NEXT I
            MATWRITE S.TCC.PORT.REC ON TCC, CURR.PORT
            READU CHKREC FROM TCC, LOGIN_NAME THEN
               RELEASE TCC, LOGIN_NAME
            END ELSE
               MATWRITE S.TCC.PORT.REC ON TCC, LOGIN_NAME
            END
            IF WRITE.SEC THEN
               MATWRITE UPM.REC ON SECURITY, "U.":CURR.PORT
            END
            CALL TCC.SUB(CURR.PORT)
            MAT KSL.REC = MAT S.KSL.REC
         CASE OPTION = "VF"
            READU DUMMY FROM TCC, PORT.NO ELSE DUMMY = ""
            FOR I = 1 TO 7
               IF S.TCC.PORT.REC(I) # "STD" AND DUMMY<I> = "AUTO" THEN
                  S.TCC.PORT.REC(I) = "AUTO"
               END
            NEXT I
            MATWRITE S.TCC.PORT.REC ON TCC, CURR.PORT
            READU CHKREC FROM TCC, LOGIN_NAME THEN
               RELEASE TCC, LOGIN_NAME
            END ELSE
               MATWRITE S.TCC.PORT.REC ON TCC, LOGIN_NAME
            END
            PORT.NO = CURR.PORT
            GOSUB 1000
         CASE OPTION = "U"
            MORE = 0
            READU DUMMY FROM TCC, PORT.NO ELSE DUMMY = ""
            FOR I = 1 TO 7
               IF S.TCC.PORT.REC(I) # "STD" AND DUMMY<I> = "AUTO" THEN
                  S.TCC.PORT.REC(I) = "AUTO"
               END
            NEXT I
            MATWRITE S.TCC.PORT.REC ON TCC, LOGIN_NAME
            IF WRITE.SEC THEN
               MATWRITE UPM.REC ON SECURITY, "U.":CURR.PORT
            END
            CALL TCC.SUB(CURR.PORT)
            MAT KSL.REC = MAT S.KSL.REC
         CASE OPTION = "D"
            READU DUMMY FROM TCC, CURR.PORT THEN
               DELETE TCC, CURR.PORT
            END ELSE
               RELEASE TCC, CURR.PORT
            END
            PORT.NO = CURR.PORT
            GOSUB 1000
            ECD.ACTION = 3; CALL SCRN.EDIT
         CASE OPTION = "VP"
            PORT.NO = CURR.PORT
            GOSUB 1000
         CASE OPTION = "VS"
*       PORT.NO = "!%@$#"
            PORT.NO = 'TTY'
            CALL SYSVARS.SUB(PORT.NO)
            GOSUB 1000
         CASE OPTION = "VA"
            GOSUB 2000
            GOSUB 1000
         CASE NOT(NUM(OPTION))
         CASE OPTION < 1 OR OPTION > 6
         CASE 1
            MAT TCC.PORT.REC = MAT S.TCC.PORT.REC
            ON OPTION GOSUB 1100,1200,1300,1400,1500,1600
            MAT S.TCC.PORT.REC = MAT TCC.PORT.REC
      END CASE
   WHILE MORE DO REPEAT
   GOTO 99999
*
*---- Display screen
1000*
   CALL TCC.SUB(PORT.NO)
*
1001 *
   MAT TCC.PORT.REC = MAT S.TCC.PORT.REC
   BEGIN CASE
      CASE KSEL.PORT.TYPE # "VIA"
         MOUSE.ON = "OFF"
      CASE MOUSE.PORT.TYPE
         MOUSE.ON = "ON"
      CASE 1
         MOUSE.ON = "OFF"
   END CASE
   SCV.REC(1) = PORT.NO
   SCV.REC(2) = GRAPH.PORT.TYPE "L#10"
   SCV.REC(3) = VIDEO.PORT.TYPE "L#10"
   SCV.REC(4) = KSEL.PORT.TYPE "L#10"
   SCV.REC(5) = MOUSE.ON "L#3"
*T24899   SCV.REC(6) = CRT.PORT.TYPE "L#3"
   SCV.REC(6) = CRT.PORT.TYPE "L#4"
   IF DISK.PC.PORT.TYPE = "AUTO" AND NOT(UPD.FLAG) THEN
      SCV.REC(7) = DISK.PC.PORT.TYPE "L#15"
   END ELSE
      SCV.REC(7) = PC.PORT.TYPE "L#15"
   END
* M.X = X + 1; M.Y = BOX.Y + 1
   RETURN
*
*---- Graph Type
1100*
   ECD.NUM = 2
*ECD.VALDAT = "STD":VM:"PRISM9":VM:"PRISM8":VM:"ADDS":VM:"PC":VM:"RL":VM:"VIA":VM:"ANSI"
   IF GRAPH.PORT.TYPE # "" THEN
      ECD.O.R = "O"
      ECD.DEFAULT = GRAPH.PORT.TYPE
      SCV.REC(2) = ""
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      GRAPH.PORT.TYPE = ECD.RET.VALUE
   END
   RETURN
*
*---- Video Type
1200*
   ECD.NUM = 3
*ECD.VALDAT = "STD":VM:"MDCSC":VM:"PRISM":VM:"ADDS":VM:"MENTOR":VM:"VIA":VM:"ANSI"
   IF VIDEO.PORT.TYPE # "" THEN
      ECD.O.R = "O"
      ECD.DEFAULT = VIDEO.PORT.TYPE
      SCV.REC(3) = ""
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      VIDEO.PORT.TYPE = ECD.RET.VALUE
   END
   RETURN
*
*---- Keyboard Type
1300*
   ECD.NUM = 4
*ECD.VALDAT = "STD":VM:"PRISM":VM:"PRISMA":VM:"ADDS":VM:"WYSE":VM:"PC":VM:"VIA"
   IF KSEL.PORT.TYPE # "" THEN
      ECD.O.R = "O"
      ECD.DEFAULT = KSEL.PORT.TYPE
      SCV.REC(4) = ""
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      KSEL.PORT.TYPE = ECD.RET.VALUE
   END
   RETURN
*
*---- Mouse On/OFF
1400*
   ECD.NUM = 5
   IF KSEL.PORT.TYPE # "VIA" THEN
      ECD.RET.VALUE = "OFF"
   END ELSE
*  ECD.VALDAT = "ON":VM:"OFF"
      IF MOUSE.PORT.TYPE THEN
         ECD.DEFAULT = "ON"
         SCV.REC(5) = ""
      END ELSE
         ECD.DEFAULT = "OFF"
         SCV.REC(5) = ""
      END
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
         IF MOUSE.PORT.TYPE THEN
            ECD.RET.VALUE = "ON"
         END ELSE
            ECD.RET.VALUE = "OFF"
         END
      END
   END
   IF ECD.RET.VALUE = "ON" THEN
      MOUSE.PORT.TYPE = 1
   END ELSE
      MOUSE.PORT.TYPE = 0
   END
   RETURN
*
*---- Screen Mode
1500*
   ECD.NUM = 6
*ECD.VALDAT = "STD":VM:"BLD"
   IF CRT.PORT.TYPE = "" THEN
      CRT.PORT.TYPE = "STD"
   END
   ECD.DEFAULT = CRT.PORT.TYPE
   SCV.REC(6) = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN
      ECD.RET.VALUE = CRT.PORT.TYPE
   END
   CRT.PORT.TYPE = ECD.RET.VALUE
   RETURN
*
*---- PC Emulation Mode
1600*
   SAVE.PC.PORT.TYPE = PC.PORT.TYPE
   ECD.NUM = 7
*ECD.VALDAT = "STD":VM:"wIntegrate":VM:"termulator":VM:"termIte"
   IF PC.PORT.TYPE = "" THEN
      PC.PORT.TYPE = "STD"
   END
   IF DISK.PC.PORT.TYPE = "AUTO" AND NOT(UPD.FLAG) THEN
      ECD.DEFAULT = DISK.PC.PORT.TYPE
   END ELSE
      ECD.DEFAULT = PC.PORT.TYPE
   END
   ECD.O.R = "O"
   SCV.REC(7) = ""
   ECD.NUM = 7 ;   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN
      ECD.RET.VALUE = PC.PORT.TYPE
   END
   PC.PORT.TYPE = ECD.RET.VALUE
   IF PC.PORT.TYPE = "AUTO" THEN
      GOSUB 500
* CALL TCC.SUB(CURR.PORT)
   END
   IF PC.PORT.TYPE # "STD" THEN
      CRT.PORT.TYPE = "BLD"
   END
   IF PC.PORT.TYPE # SAVE.PC.PORT.TYPE THEN
      UPD.FLAG = 1
   END
   RETURN
*
*---- Prompt for PC.PORT.TYPE
500 *
   OPEN "","SECURITY" TO SECURITY THEN
      MATREAD UPM.REC FROM SECURITY, "U.":PORT.NO THEN
         GOSUB 550
      END
   END
   RETURN
*
550 *
   OPEN "","XREF.DATA" TO XREF.DATA THEN
      OPEN "","PREFIX" TO PREFIX THEN
         MAT GEN.XREF.REC = ""
         GXR.NAME = "PC.PORT"
         READ TERMTYPES FROM TCC, "TERMTYPES" THEN
            GXR.IDLIST = TERMTYPES<4>
            O_GRAPH.PORT.TYPE = GRAPH.PORT.TYPE; GRAPH.PORT.TYPE = "STD"
            O_VIDEO.PORT.TYPE = VIDEO.PORT.TYPE; VIDEO.PORT.TYPE = "STD"
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            CURR.PC.PORT.TYPE = PC.PORT.TYPE
            PC.PORT.TYPE = ORIG.PC.PORT.TYPE
            ECD.ACTION = 2 ; CALL SCRN.EDIT
            ECD.ACTION = 3 ; CALL SCRN.EDIT
            PC.PORT.TYPE = CURR.PC.PORT.TYPE
            GRAPH.PORT.TYPE = O_GRAPH.PORT.TYPE
            VIDEO.PORT.TYPE = O_VIDEO.PORT.TYPE
            IF GXR.ID = "" THEN
               GXR.ID = "STD"
               WRITE.SEC = 1
               UPM.PC.TYPE = GXR.ID
* TEST               PC.PORT.TSEL = GXR.ID
               PC.PORT.TYPE = "AUTO"
            END ELSE
               WRITE.SEC = 1
               UPM.PC.TYPE = GXR.ID
* TEST               PC.PORT.TSEL = GXR.ID
               PC.PORT.TYPE = "AUTO"
            END
            MAT S.TCC.PORT.REC = MAT TCC.PORT.REC
            GOSUB 1001
            MAT TCC.PORT.REC = MAT S.TCC.PORT.REC
         END
      END
   END
   RETURN
*
*---- Get all ports
2000*
   STMT = "SSELECT TCC"
   PERFORM STMT RTNLIST TCCLIST CAPTURING RESPONSE
   DATA = 1; LN = 1; LINES = 0
   LOOP
      READNEXT ID FROM TCCLIST ELSE DATA = 0
   WHILE DATA DO
*      IF NUM(ID) OR ID[1,3] = "tty" OR ID[1,3] = "pts" THEN
      IF ID # "TERMTYPES" THEN
         LINES = LINES + 1
         PORTS(LINES) = ID
         IF ID = PORT.NO THEN LN = LINES
      END
   REPEAT
   IF LINES < 1 THEN
      ERRMSG = "No setup ports were found ?"
      GOSUB 91000
      GOTO 2099
   END
*
   OLD.START.LINE = 0
   GOSUB 2900
*
   ANCORE = 1
   LOOP
      ECD.NUM = 18
      ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
            ANCORE = 0
         CASE ECD.RET.VALUE = ""
         CASE ECD.RET.VALUE = "SF" OR ECD.RET.VALUE = "S"
            LN = OLD.START.LINE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 2900
         CASE ECD.RET.VALUE = "SR"
            LN = OLD.START.LINE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 2900
         CASE ECD.RET.VALUE = "ST"
            LN = 1
            GOSUB 2900
         CASE ECD.RET.VALUE = "SB"
            LN = LINES
            IF LN < 1 THEN LN = 1
            GOSUB 2900
      END CASE
   WHILE ANCORE DO REPEAT
2099*
   RETURN
*
*---- Scrolling Routine
2900*
***********
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 2990
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      PNO = PORTS(N)
      MATREAD TCC.PORT.REC FROM TCC, PNO ELSE
         MAT TCC.PORT.REC = "STD"
         MOUSE.PORT.TYPE = 0
      END
      IF PNO = PORT.NO THEN PNO = "*":PNO
      P_X = 2 ; P_Y = SLN ; P_VALUE = PNO ; P_OPT = "CL"
      P_X := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:GRAPH.PORT.TYPE "L#10"
      P_X := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:VIDEO.PORT.TYPE "L#10"
      P_X := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:KSEL.PORT.TYPE "L#10"
      BEGIN CASE
         CASE KSEL.PORT.TYPE # "VIA"
            MOUSE.ON = "OFF"
         CASE MOUSE.PORT.TYPE
            MOUSE.ON = "ON"
         CASE 1
            MOUSE.ON = "OFF"
      END CASE
      P_X := AM:41 ; P_Y := AM:SLN ; P_VALUE := AM:MOUSE.ON "L#3"
      P_X := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:CRT.PORT.TYPE "L#3"
      P_X := AM:52 ; P_Y := AM:SLN ; P_VALUE := AM:PC.PORT.TYPE "L#15"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
*     SLN = SLN + LINE.SPACE
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
*   LST.V = LAST.LINE - START.LINE + 2
*   FOR V = LST.V TO PAGE.SIZE
*     CRT @(FST.X,SLN):ETX.OFF:CLR.SPC:ETX.OFF:
*     CRT @(FST.X,SLN):ETX.DSL:
*     SLN = SLN + LINE.SPACE
*   NEXT V
*
*---- Display lines & pages
2910*
   PGNO =  INT(LN / PAGE.SIZE + .99)
   PAGES = INT(LINES / PAGE.SIZE + .99)
   P_X = 55 ; P_Y = 19 ; P_VALUE = PGNO ; P_OPT = "CL"
   P_X := AM:62 ; P_Y := AM:19 ; P_VALUE := AM:PAGES
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*    CRT @(PX,BOX.HROW):ETX.HHD.OFF:KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
*    CRT @(PX,BOX.HROW):ETX.HHD:
*  CASE 1
*    PX = BOX.X + BOX.COLS - 15
*    CRT @(PX,BOX.HROW):ETX.HHD.OFF:"Page ":KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
*    CRT @(PX,BOX.HROW):ETX.HHD:
2990*
   RETURN
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   RETURN
END
