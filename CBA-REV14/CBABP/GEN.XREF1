      SUBROUTINE GEN.XREF1(MAT GEN.XREF.REC,PREFIX)
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>CHAR
*
      DIM KSL.DATA(25)
*
***** SETUP ERRMSG ROUTINE FOR SYSCOM
*
      PROMPT ""
      REC.IDS = ''
      GXR.ACTION = ""
      IF GXR.HEADING = '' OR GXR.SRCH.ID = '' THEN
         GXR.ACTION = 'X'
         GOTO 99999
      END ELSE
         DISP.CNT = COUNT(GXR.HEADING,VM) + 1
      END
      TOP.CNT = DCOUNT(GXR.TOP.LINE,VM)
*
      ALL.NAMES = ''
      CALL GET.NAME(GXR.SRCH.ID,ALL.NAMES,PREFIX)
      NAME.CNT = DCOUNT(ALL.NAMES,VM)
      REC.IDS = ''
      IF NAME.CNT THEN
         READ ITEM FROM GXR.XREF, GXR.CO : ALL.NAMES<1,1> ELSE ITEM = ''
         REC.IDS = ITEM<GXR.LOC>
      END
      FOR MLP = 2 TO NAME.CNT UNTIL REC.IDS = ''
         READ ITEM FROM GXR.XREF, GXR.CO : ALL.NAMES<1,MLP> ELSE ITEM = ''
         IF ITEM # '' THEN
            CNT = DCOUNT(REC.IDS<1>,VM)
            IF CNT THEN
               FOR SLP = CNT TO 1 STEP - 1
                  LOCATE REC.IDS<1,SLP> IN ITEM<GXR.LOC>,1 SETTING FND ELSE
                     REC.IDS = DELETE(REC.IDS,1,SLP,0)
                  END
               NEXT SLP
            END ELSE
               REC.IDS = ''
            END
         END ELSE
            REC.IDS = ''
         END
      NEXT MLP
      IF REC.IDS = '' THEN
         GXR.ACTION = 'X'
         GOTO 99999
      END
      REC.CNT = COUNT(REC.IDS,VM) + 1
      IF GXR.CHECK # "" AND GXR.CHK.ATT > 0 THEN
         CHK.CNT = DCOUNT(GXR.CHECK,VM)
         FOR CKF = REC.CNT TO 1 STEP - 1
            READ ITEM FROM GXR.FILE , GXR.CO:REC.IDS<1,CKF> ELSE
               REC.IDS = DELETE(REC.IDS,1,CKF,0)
               GOTO 999
            END
            L.OK = 0
            CHECK.ITEM = ITEM<GXR.CHK.ATT>
            FOR CK = 1 TO CHK.CNT UNTIL L.OK
               LOCATE GXR.CHECK<1,CK> IN CHECK.ITEM<1>,1 SETTING L.OK ELSE L.OK = 0
            NEXT CK
            IF L.OK = 0 THEN
               REC.IDS = DELETE(REC.IDS,1,CKF,0)
            END
999      NEXT CKF
         IF REC.IDS = '' THEN
            GXR.ACTION = 'X'
            GOTO 99999
         END
         REC.CNT = COUNT(REC.IDS,VM) + 1
      END
*
      PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
      CALL TCC.SUB1(PORT.NO,MAT TCC.PORT.REC,MAT TCC.REC,MAT GRAPH.REC,MAT VIDEO.REC,MAT KSEL.REC,MAT HBOX.REC)
*
      BOX.ROWS = 19
      IF REC.CNT + TOP.CNT + 2 < BOX.ROWS THEN
         BOX.ROWS = REC.CNT + TOP.CNT + 2
      END
      BOX.COLS = 5
      FOR DLP = 1 TO DISP.CNT
         BOX.COLS = BOX.COLS + GXR.LEN<1,DLP> + 1
      NEXT DLP
      FOR PP = 1 TO TOP.CNT
         IF LEN(GXR.TOP.LINE<1,PP>) + 16 > BOX.COLS THEN
            BOX.COLS = LEN(GXR.TOP.LINE<1,PP>) + 16
         END
      NEXT PP
      PAGE.SIZE = BOX.ROWS - 2 - TOP.CNT
      MAT KSL.REC = ""
      KSL.PAGES = INT(REC.CNT / PAGE.SIZE + .99)
      IF KSL.PAGES > 1 THEN
         BOX.HROW = 1
      END ELSE
         BOX.HROW = 0
      END
      BOX.X = "C"; BOX.Y = "C"; BOX.CLEAR = 1
      CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
      DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
      KSL.ESC = KSEL.ESC
      KSL.SCROLL = 1
      KSL.ETX.SEL = ETX.DSL
      KSL.ETX.OFF = ETX.OFF
      KSL.HROW = "B"
      BEGIN.PAGE = BOX.Y + 2 + TOP.CNT
      IF TOP.CNT THEN
         SP = BOX.COLS - 14 - LEN(GXR.TOP.LINE<1,1>)
         SP1 = INT(SP/2); SP2 = INT(SP/2+.99)
         PRINT @(DX-1,DY):ETX.TOP.OFF:"PRIMAC":SPACE(SP1):
         PRINT GXR.TOP.LINE<1,1>:SPACE(SP2):"[08.1]":ETX.TOP.OFF:
         PRINT @(DX-1,DY):ETX.TOP:
      END
      FOR PP = 2 TO TOP.CNT
         SP = BOX.COLS - 14 - LEN(GXR.TOP.LINE<1,PP>)
         SP1 = INT(SP/2)
         PRINT @(DX+SP1+6,DY+PP-1):GXR.TOP.LINE<1,PP>:ETX.OFF:
         PRINT @(DX+SP1+5,DY+PP-1):ETX.MHD:
      NEXT PP
      PRINT @(DX,DY+TOP.CNT):"SEL":ETX.OFF:
      PRINT @(DX-1,DY+TOP.CNT):ETX.HSL:
      L = 4; READ.FLG = 0
      FOR DLP = 1 TO DISP.CNT
         IF GXR.ATT<1,DLP> > 0 THEN READ.FLG = 1
         FORMAT.MASK = "L#" : GXR.LEN<1,DLP>
         PRINT @(DX+L,DY+TOP.CNT):GXR.HEADING<1,DLP> FORMAT.MASK:ETX.OFF:
         PRINT @(DX+L-1,DY+TOP.CNT):ETX.HSL:
         L = L + GXR.LEN<1,DLP> + 1
      NEXT DLP
      KSL.ROW = BEGIN.PAGE
      KSL.COL = 1
      KSL.COLS = 1
      KSL.PGNO = 1
      MAT KSL.YX = ""
      GOSUB 1900
*
      MORE = 1
      LOOP
         CALL @KSEL.SUB(MAT TCC.REC, MAT GRAPH.REC, MAT VIDEO.REC, MAT KSEL.REC, MAT KSL.REC, MAT KSL.YX)
         BEGIN CASE
         CASE KSL.SEL = KSL.ESC
            GXR.ACTION = "N"
            MORE = 0
         CASE KSL.SEL = KSEL.SEL
            GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>
            MORE = 0
         CASE KSL.SEL = "SF"
            GOSUB 1900
         CASE KSL.SEL = "SR"
            GOSUB 1900
         CASE KSL.SEL = "ST"
            GOSUB 1900
         CASE KSL.SEL = "SB"
            GOSUB 1900
         CASE NUM(KSL.SEL)
            IF KSL.SEL >= 1 AND KSL.SEL <= REC.CNT THEN
               GXR.ID = REC.IDS<1,KSL.SEL>
               MORE = 0
            END ELSE
               ERRMSG = '* * INVALID SELECTION * *'
               GOSUB 91000
            END
         CASE 1
            ERRMSG = '* * INVALID SELECTION * *'
            GOSUB 91000
         END CASE
      WHILE MORE DO REPEAT
      BOX.CLEAR = 9
      CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
      GOTO 99999
1900*
      START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > REC.CNT THEN LAST.LINE = REC.CNT
      SLN = BEGIN.PAGE - 1
      FOR V = START.LINE TO LAST.LINE
         SLN = SLN + 1
         IF READ.FLG THEN
            READ ITEM FROM GXR.FILE, GXR.CO : REC.IDS<1,V> THEN
*              IF GXR.LEN<1,2> > 0 THEN
*                 KSL.YX(SLN) = DX + GXR.LEN<1,1> + 4
*              END ELSE
                  KSL.YX(SLN) = DX + 3
*              END
               KSL.DATA(SLN) = REC.IDS<1,V>
            END ELSE
               GXR.ITEM = ''
               FOR DLP = 1 TO DISP.CNT
                  ITEM<GXR.ATT<1,DLP>> = STR('?',GXR.LEN<1,DLP>)
               NEXT DLP
            END
         END ELSE
            GXR.ITEM = ""
            KSL.YX(SLN) = DX + 3
            KSL.DATA(SLN) = REC.IDS<1,V>
         END
         PRINT @(DX,SLN): V "R#3":ETX.OFF:
         PRINT @(DX-1,SLN):ETX.NUM:
         L = 4
         PLINE = ""; P = 0
         FOR DLP = 1 TO DISP.CNT
            IF GXR.OCONV<1,DLP> # '' THEN
               ITEM<GXR.ATT<1,DLP>> = OCONV(ITEM<GXR.ATT<1,DLP>>, GXR.OCONV<1,DLP>)
            END
            FORMAT.MASK = "L#" : GXR.LEN<1,DLP>
            IF GXR.ATT<1,DLP> = 0 THEN
*              PRINT @(DX+L,SLN):REC.IDS<1,V> FORMAT.MASK:ETX.OFF:
               PLINE = PLINE:SPACE(P):REC.IDS<1,V> FORMAT.MASK
            END ELSE
*              PRINT @(DX+L,SLN):ITEM<GXR.ATT<1,DLP>,1> FORMAT.MASK:ETX.OFF:
               PLINE = PLINE:SPACE(P):ITEM<GXR.ATT<1,DLP>,1> FORMAT.MASK
            END
            P = 1
*           PRINT @(DX+L-1,SLN):ETX.DHD:
*           L = L + GXR.LEN<1,DLP> + 1
         NEXT DLP
         PRINT @(DX+L,SLN):PLINE:ETX.OFF:
         PRINT @(DX+L-1,SLN):ETX.DHD:
      NEXT V
      LST.V = LAST.LINE - START.LINE + 2
      FOR V = LST.V TO PAGE.SIZE
         SLN = SLN + 1
         KSL.YX(SLN) = ""
         PRINT @(DX-1,SLN):ETX.OFF:SPACE(MAX.COLS):
      NEXT V
*
*---- Display lines & pages
*
      BEGIN CASE
      CASE BOX.HROW < 1
      CASE BOX.COLS < 10
      CASE BOX.COLS < 15
         PX = BOX.X + BOX.COLS - 9
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
         PRINT @(PX,BOX.HROW):ETX.HHD:
      CASE 1
         PX = BOX.X + BOX.COLS - 14
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:"Page ":KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF:
         PRINT @(PX,BOX.HROW):ETX.HHD:
      END CASE
      RETURN
91000 PRINT @(0,23):ETX.EHD.OFF:" ":ERRMSG:ETX.EHD.OFF:CL:
      PRINT @(0,23):ETX.EHD:
      INPUT REPLY,1:
      PRINT @(0,23):CL:
      RETURN
99999*
      RETURN
   END
