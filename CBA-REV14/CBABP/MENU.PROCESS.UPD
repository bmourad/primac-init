  SUBROUTINE MENU.PROCESS.UPD(PPSX.ID,ACTIONS,MENU.NAMES,MENU.SEQS,ERRMSG)
*COPY>CPYLIB>COM1
**************************************************************************
*
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - MENU.PROCESS.UPD
*
* BY      - ALEJANDRO DELGADO
*
* DATE    - 06/05/02
*
* DESCRIPTION
*
* THIS PROGRAM UPDATES THE PMC_PROCESS RECORDS WITH THE MENU POINTER.
*                 MENU.NAMES<1> = OLD PRIMAC MENU NAME
*                 MENU.NAMES<2> = EPRIMAC MENU NAME
*                 MENU.SEQS <1> = OLD PRIMAC POSITIONING
*                 MENU.SEQS <2> = EPRIMAC POSITIONING
*                 ACTIONS   <1> = REBUILD (P)RIMAC,(E)PRIMAC OR (B)OTH
*                 ACTIONS   <2> = (A)DDING OR (R)EMOVING TO/FROM PROCESS
*
*T26630 adelgado 06/03/2002 * Original Code.
**************************************************************************
*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>PMC.CPYLIB>PMC_PROCESS_XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*  MAIN PROCESS
*
  MENU.NAME = MENU.NAMES<1>
  EMENU.NAME = MENU.NAMES<2>
  MENU.SEQ = MENU.SEQS<1>
  EMENU.SEQ = MENU.SEQS<2>
  IF ACTIONS<2> = 'R' THEN
    GOSUB REMOVE.MENU
  END ELSE
    GOSUB ADD.MENU
  END
  RETURN
*
ADD.MENU: 
*
  MENU.UPDATED = 0
  MATREADU PPSX.REC FROM PMC_PROCESS_XREF, PPSX.ID THEN
    IF ACTIONS<1> = 'P' OR ACTIONS<1> = 'B' THEN
      LOCATE MENU.NAME IN PPSX.MENU<1>,1 SETTING PTR ELSE
        MENU.UPDATED = 1
        PPSX.MENU = INSERT(PPSX.MENU,1,PTR,0,MENU.NAMES<1,1>)
      END
    END
    MATREADU PPS.REC FROM PMC_PROCESS, PPSX.PROCESS.ID THEN
      BEGIN CASE
        CASE ACTIONS<1> = 'B'
          LOCATE MENU.NAME IN PPS.MENU<1>,1 SETTING PTR THEN
            PPS.MENU.SEQ<1,PTR> = MENU.SEQ
            PPS.MODULE<1,PTR> = EMENU.NAME[3,3]
            PPS.MODULE.SEQ<1,PTR> = EMENU.SEQ
            PPS.MODULE.MENUS<1,PTR> = EMENU.NAME
          END ELSE
            MENU.UPDATED = 1
            PPS.MODULE = INSERT(PPS.MODULE,1,PTR,0,EMENU.NAME[3,3])
            PPS.MODULE.MENUS = INSERT(PPS.MODULE.MENUS,1,PTR,0,EMENU.NAME)
            PPS.MODULE.SEQ = INSERT(PPS.MODULE.SEQ,1,PTR,0,EMENU.SEQ)
            PPS.MENU = INSERT(PPS.MENU,1,PTR,0,MENU.NAME)
            PPS.MENU.SEQ = INSERT(PPS.MENU.SEQ,1,PTR,0,MENU.SEQ)
          END
          IF PPS.MODULE.CATG = '' THEN
            PPS.MODULE.CATG = EMENU.NAME[7,1]
          END 
        CASE ACTIONS<1> = 'P'
          LOCATE MENU.NAME IN PPS.MENU<1>,1 SETTING PTR THEN
            PPS.MODULE<1,PTR> = EMENU.NAME[3,3]
            PPS.MENU.SEQ<1,PTR> = MENU.SEQ
          END ELSE
            MENU.UPDATED = 1
            PPS.MODULE = INSERT(PPS.MODULE,1,PTR,0,EMENU.NAME[3,3])
            PPS.MENU = INSERT(PPS.MENU,1,PTR,0,MENU.NAME)
            PPS.MENU.SEQ = INSERT(PPS.MENU.SEQ,1,PTR,0,MENU.SEQ)
          END
        CASE ACTIONS<1> = 'E'
          LOCATE MENU.NAME IN PPS.MENU<1>,1 SETTING PTR THEN
            PPS.MODULE<1,PTR> = EMENU.NAME[3,3]
            PPS.MODULE.SEQ<1,PTR> = EMENU.SEQ
            PPS.MODULE.MENUS<1,PTR> = EMENU.NAME
          END ELSE
            MENU.UPDATED = 1
            PPS.MODULE = INSERT(PPS.MODULE,1,PTR,0,EMENU.NAME[3,3])
            PPS.MODULE.MENUS = INSERT(PPS.MODULE.MENUS,1,PTR,0,EMENU.NAME)
            PPS.MODULE.SEQ = INSERT(PPS.MODULE.SEQ,1,PTR,0,EMENU.SEQ)
          END
          IF PPS.MODULE.CATG = '' THEN
            PPS.MODULE.CATG = EMENU.NAME[7,1]
          END 
      END CASE
    END ELSE
      RELEASE PMC_PROCESS, PPSX.PROCESS.ID
      ERRMSG = 'UNABLE TO LOCATE (':PPSX.PROCESS.ID:') IN THE PMC_PROCESS FILE.'
      GOSUB 91000 ; MENU.UPDATED = 0
    END
  END ELSE
    RELEASE PMC_PROCESS_XREF, PPSX.ID
    ERRMSG = 'UNABLE TO LOCATE (':PPSX.ID:') IN THE PMC_PROCESS_XREF FILE.'
    GOSUB 91000 ; MENU.UPDATED = 0
  END
  IF (MENU.UPDATED) THEN
    MATWRITE PPSX.REC ON PMC_PROCESS_XREF, PPSX.ID
    MATWRITE PPS.REC ON PMC_PROCESS, PPSX.PROCESS.ID
  END
  RETURN
*
REMOVE.MENU: 
*
* At this moment the MENU.MAINT prgm is the only one that utilizes this
* function.  Thus, both Primac & ePrimac menus must be removed.
*
  MATREADU PPSX.REC FROM PMC_PROCESS_XREF, PPSX.ID THEN
    LOCATE MENU.NAME IN PPSX.MENU<1>,1 SETTING PTR THEN
      PPSX.MENU = DELETE(PPSX.MENU,1,PTR,0)
      MATWRITE PPSX.REC ON PMC_PROCESS_XREF, PPSX.ID
    END
    MATREADU PPS.REC FROM PMC_PROCESS, PPSX.PROCESS.ID THEN
      FOUND = 0 ; PCNT = DCOUNT(PPS.MENU<1>,VM)
      FOR PTR = 1 TO PCNT UNTIL (FOUND)
        IF MENU.NAME = PPS.MENU<1,PTR> AND EMENU.NAME = PPS.MODULE.MENUS<1,PTR> THEN
          FOUND = 1
          PPS.MENU = DELETE(PPS.MENU,1,PTR,0)
          PPS.MENU.SEQ = DELETE(PPS.MENU.SEQ,1,PTR,0)
          PPS.MODULE = DELETE(PPS.MODULE,1,PTR,0)
          PPS.MODULE.MENUS = DELETE(PPS.MODULE.MENUS,1,PTR,0)
          PPS.MODULE.SEQ = DELETE(PPS.MODULE.SEQ,1,PTR,0)
          MATWRITE PPS.REC ON PMC_PROCESS, PPSX.PROCESS.ID
        END
      NEXT PTR
      IF FOUND = 0 THEN
        RELEASE PMC_PROCESS, PPSX.PROCESS.ID
        ERRMSG = 'UNABLE TO REMOVE MENU (':MENU.NAME:') FROM PMC_PROCESS.'
        GOSUB 91000
      END
    END ELSE
      RELEASE PMC_PROCESS, PPSX.PROCESS.ID
      ERRMSG = 'UNABLE TO LOCATE (':PPSX.PROCESS.ID:') IN THE PMC_PROCESS FILE.'
      GOSUB 91000
    END
  END ELSE
    RELEASE PMC_PROCESS_XREF, PPSX.ID
    ERRMSG = 'UNABLE TO LOCATE (':PPSX.ID:') IN THE PMC_PROCESS_XREF FILE.'
    GOSUB 91000
  END
  RETURN
*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
END
