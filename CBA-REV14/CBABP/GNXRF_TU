      SUBROUTINE GEN.XREF(MAT GEN.XREF.REC,PREFIX)
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* T24309 cm 08/19/1999 * when a single record is called up in SB-CLIENT
*                        GUI the user is unable to view or choose that
*                        record.
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>TCC
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>ROC.H
*COPY>CPYLIB>SPECIAL.H
***** SETUP ERRMSG ROUTINE FOR SYSCOM
*
      PROMPT ""
      REC.IDS = ''
      GXR.ACTION = ""
      IF GXR.HEADING = '' OR GXR.SRCH.ID = '' THEN
         GXR.ACTION = 'X'
         GOTO 99999
      END ELSE
         DISP.CNT = COUNT(GXR.HEADING,VM) + 1
      END
      IF GXR.CO<2> = "" THEN
         XFR.CO = GXR.CO
         DTL.CO = GXR.CO
      END ELSE
         XFR.CO = GXR.CO<1>
         DTL.CO = GXR.CO<2>
      END
      TOP.CNT = DCOUNT(GXR.TOP.LINE,VM)
*
      ALL.NAMES = ''
      CALL GET.NAME(GXR.SRCH.ID,ALL.NAMES,PREFIX)
      NAME.CNT = DCOUNT(ALL.NAMES,VM)
      REC.IDS = ''
      IF NAME.CNT THEN
         READ ITEM FROM GXR.XREF, XFR.CO : ALL.NAMES<1,1> ELSE ITEM = ''
         REC.IDS = ITEM<GXR.LOC>
      END
      FOR MLP = 2 TO NAME.CNT UNTIL REC.IDS = ''
         READ ITEM FROM GXR.XREF, XFR.CO : ALL.NAMES<1,MLP> ELSE ITEM = ''
         IF ITEM # '' THEN
            CNT = DCOUNT(REC.IDS<1>,VM)
            IF CNT THEN
               FOR SLP = CNT TO 1 STEP - 1
                  LOCATE REC.IDS<1,SLP> IN ITEM<GXR.LOC>,1 SETTING FND ELSE
                     REC.IDS = DELETE(REC.IDS,1,SLP,0)
                  END
               NEXT SLP
            END ELSE
               REC.IDS = ''
            END
         END ELSE
            REC.IDS = ''
         END
      NEXT MLP
      IF REC.IDS = '' THEN
         GXR.ACTION = 'X'
         GOTO 99999
      END
OPEN "","TCC" TO TCC THEN
   TU_VERNO_ID = "T_":@LOGNAME
   READ TU_VERNO FROM TCC, TU_VERNO_ID ELSE TU_VERNO = ""
END ELSE
   TU_VERNO = ""
END
      REC.CNT = COUNT(REC.IDS,VM) + 1
      IF GXR.CHECK # "" AND GXR.CHK.ATT > 0 THEN
         CHK.CNT = DCOUNT(GXR.CHECK,VM)
         FOR CKF = REC.CNT TO 1 STEP - 1
            READ ITEM FROM GXR.FILE , DTL.CO:REC.IDS<1,CKF> ELSE
               REC.IDS = DELETE(REC.IDS,1,CKF,0)
               GOTO 999
            END
            L.OK = 0
            CHECK.ITEM = ITEM<GXR.CHK.ATT>
            FOR CK = 1 TO CHK.CNT UNTIL L.OK
               LOCATE GXR.CHECK<1,CK> IN CHECK.ITEM<1>,1 SETTING L.OK ELSE L.OK = 0
            NEXT CK
            IF L.OK = 0 THEN
               REC.IDS = DELETE(REC.IDS,1,CKF,0)
            END
999      NEXT CKF
         IF REC.IDS = '' THEN
            GXR.ACTION = 'X'
            GOTO 99999
         END
         REC.CNT = COUNT(REC.IDS,VM) + 1
      END
*
      BOX.ROWS = 19
      IF REC.CNT + TOP.CNT + 2 < BOX.ROWS THEN
         BOX.ROWS = REC.CNT + TOP.CNT + 2
      END
      BOX.COLS = 5
      FOR DLP = 1 TO DISP.CNT
         BOX.COLS = BOX.COLS + GXR.LEN<1,DLP> + 1
      NEXT DLP
      FOR PP = 1 TO TOP.CNT
         IF LEN(GXR.TOP.LINE<1,PP>) + 16 > BOX.COLS THEN
            BOX.COLS = LEN(GXR.TOP.LINE<1,PP>) + 16
         END
      NEXT PP
      PAGE.SIZE = BOX.ROWS - 2 - TOP.CNT
      KSL.PAGES = INT(REC.CNT / PAGE.SIZE + .99)
      TITLE = ""
      WIDTH = ""
      BOX.X = INT((80 - BOX.COLS) / 2)
      BOX.Y = INT((24 - BOX.ROWS) / 2 - 0.5)
      DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
      IF TOP.CNT THEN
         FOR TLN = 1 TO TOP.CNT
            IF TLN = 1 THEN
               TITLE = GXR.TOP.LINE<1,TLN>
            END ELSE
               TITLE = TITLE:' ':GXR.TOP.LINE<1,TLN>
            END
         NEXT TLN
      END
      READ.FLG = 0
      FOR DLP = 1 TO DISP.CNT
         IF GXR.ATT<1,DLP> > 0 THEN READ.FLG = 1
         WIDTH<1,DLP> = INT(GXR.LEN<1,DLP> / 2 + .5)
      NEXT DLP
*T24309 v
*     IF REC.CNT > PAGE.SIZE THEN
*        DEPTH = PAGE.SIZE
*     END ELSE
*        DEPTH = PAGE.SIZE
*     END
      BEGIN CASE
      CASE REC.CNT GT PAGE.SIZE
         DEPTH = PAGE.SIZE
      CASE REC.CNT < 2
         DEPTH = PAGE.SIZE + 3
      CASE REC.CNT < 3
         DEPTH = REC.CNT + 2
      CASE REC.CNT < 4
         DEPTH = REC.CNT + 1
      CASE 1
         DEPTH = REC.CNT
      END CASE
*T24309 ^
      XYPOS = BOX.X + 0; XYPOS<1,2> = BOX.Y + 0
      ILIST = ""
      IF READ.FLG THEN
         FOR PL = 1 TO REC.CNT
            READ ITEM FROM GXR.FILE, DTL.CO : REC.IDS<1,PL> ELSE
               ITEM = ""
            END
            FOR DLP = 1 TO DISP.CNT
               IF GXR.ATT<1,DLP> = 0 THEN
                  ILIST<1,PL,DLP> = REC.IDS<1,PL>
               END ELSE
                  IF GXR.OCONV<1,DLP> # '' THEN
                     ITEM<GXR.ATT<1,DLP>> = OCONV(ITEM<GXR.ATT<1,DLP>>, GXR.OCONV<1,DLP>)
                  END
                  ILIST<1,PL,DLP> = ITEM<GXR.ATT<1,DLP>,1>
               END
            NEXT DLP
         NEXT PL
      END ELSE
         FOR PL = 1 TO REC.CNT
            FOR DLP = 1 TO DISP.CNT
               IF GXR.ATT<1,DLP> = 0 THEN
                  ILIST<1,PL,DLP> = REC.IDS<1,PL>
               END ELSE
                  ILIST<1,PL,DLP> = ""
               END
            NEXT DLP
         NEXT PL
      END
      BKGRND = ""; FRGRND = ""
      OPT = "M"; VALUE = ""; ERROR = ""
      TU_FUNC = "TU.FORM.SELECTLIST":TU_VERNO
      CALL @TU_FUNC(TITLE,ILIST,WIDTH,DEPTH,XYPOS,BKGRND,FRGRND,OPT,VALUE,ERROR)
      OPT = VALUE<1,1>
      IF NUM(OPT) THEN
         IF OPT > 0 AND OPT <= REC.CNT THEN
            GXR.ID = REC.IDS<1,OPT>
         END ELSE
            GXR.ID = ""
         END
      END ELSE
         GXR.ID = ""
      END
      GOTO 99999
*
91000 CRT @(0,23):ETX.EHD.OFF:" ":ERRMSG:ETX.EHD.OFF:CL:
      CRT @(0,23):ETX.EHD:
      INPUT REPLY,1:
      CRT @(0,23):CL:
      RETURN
99999*
      RETURN
   END
