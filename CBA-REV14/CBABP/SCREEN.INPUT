      SUBROUTINE SCREEN.INPUT
*
*********************************************************************
*
* REVISION    - [07.0]
*
* PROGRAM - SCREEN.INPUT
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 12/30/84
*
* DESCRIPTION
*
*   THIS ROUTINE PROVIDES A BASIC INTERFACE BETWEEN
*   ON-LINE PROCESSING PROGRAM AND A TERMINAL OPERATOR.
*   THE FOLLOWING TYPES OF EDITTING MAY BE REQUESTED.
*
*       1 - ALPHANUMERIC
*       2 - ALPHABETIC
*       3 - NUMERIC
*       4 - DECIMAL
*       5 - ALPHANUMERIC WITH NO SPACES
*       6 - DATE
*       7 - PATTERN MATCH
*       8 - (Y)ES OR (N)O
*       9 - RESERVED FOR MULTI-LINE REFERENCE NUMBER FIELDS
*
*   FIELD LENGTH CHECKING, RANGE CHECKING, LEFT OR
*   RIGHT JUSTIFICATION, AND EXTERNAL TO INTERNAL DATA
*   CONVERSION IS ALSO SUPPORTED.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21177 diane 01/29/1997 * REV11 UPG CLEAR LINE WHEN PMSG USED
*T21177 walid 04/11/1997 * PMCUTLCK
*T26682 cmykleb 06/18/2002 * Allow a date of all numeric and let the
*                            process convert that date.
*********************************************************************
*
*---- DIMENSION
*
*COPY>CPYLIB>SCOMMON1
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>TCC
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>ROC.H
*COPY>CPYLIB>SPECIAL.H
*COPY>CPYLIB>XREF_BUILD_SCREEN
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>BAR_BUILD_SCREEN
*^* TEMP FOR SBCLIENT
*COPY>CPYLIB>NEW.BUILD.SCREEN
*v*
*
*---- INITIALIZATION
*
      PROMPT ""
      IF S$TYP = 0 OR S$TYP > 9 THEN
         S$MASK   = "#"
         S$STOP   = "N"
         ERRMSG = ""
         PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
         CALL TCC.SUB(PORT.NO)
*--- TU_VERNO already set
         OPEN "", "CONTROL" TO CONTROL THEN
            READV S$EDITLEN FROM CONTROL, "EDIT.CTRL",1 ELSE
               S$EDITLEN = 80
            END
         END ELSE
            S$EDITLEN = 80
         END
         IF S$SCR < 1 THEN
            SIV_MOUSE_ON = ""
            SIV_STACK = ""
            SIV_PSTACK = ""
         END ELSE
            SIV_MOUSE_ON<S$SCR> = ""
            SIV_STACK = ""
            SIV_PSTACK<S$SCR> = ""
         END
         GOTO 17090
      END
      S$ETXMSK = " "
* TOOLBAR ^
      BARFILE = ""
      BARNAME = ""
*^* TEMP FOR SBCLIENT
      MAT EDIT.COM = ""
      TYP = 0
      CALL EDIT.SUB1 (MAT EDIT.COM)
*--- TU_VERNO already set
      S$USERDATA = ""
      S$PSTACK = ""
      S$XREF_NAME = ""
      S$BITMAP = ""
      S$DATAFILE = ""
      MATREAD BLD.SCRN FROM S$FVAR(S$SCR), S$NAME<S$SCR>:"*FLD" THEN
         LOCATE S$FLD IN BLD.EXT.REF<1>,1 SETTING FC THEN
            S$USERDATA = BLD.SCRN(FC)<1,B.USERDATA>
            S$PSTACK = BLD.SCRN(FC)<1,B.PSTACK>
            S$XREF_NAME = BLD.SCRN(FC)<1,B.XREF>
            S$BITMAP = BLD.SCRN(FC)<1,B.BITMAP>
            S$DATAFILE = BLD.SCRN(FC)<1,B.DATAFILE>
         END
      END
*v*
      IF S$GUIFORM THEN
         LOCATE S$FLD IN SIV_BAR_FLD<S$SCR>,1 SETTING BB THEN
            BARNAME = SIV_BAR_NAME<S$SCR,BB>
            BARFILE = SIV_BAR_FILE<S$SCR,BB>
         END ELSE
            IF SIV_BAR_ACTIVE<S$SCR> = "" OR S$FLDTYPE = "M" THEN
               LOCATE "MAIN" IN SIV_BAR_FLD<S$SCR>,1 SETTING BB THEN
                  BARNAME = SIV_BAR_NAME<S$SCR,BB>
                  BARFILE = SIV_BAR_FILE<S$SCR,BB>
               END ELSE
                  BARNAME = "MAIN"
                  BARFILE = "PMCBARS"
               END
            END
         END
         IF BARNAME # "" AND BARNAME # SIV_BAR_ACTIVE<S$SCR,1> THEN
            BARHNDL = SIV_BAR_HNDL<S$SCR>
            IF BARHNDL # "" THEN
               TU_FUNC = "TU.TOOLBAR.KILL":TU_VERNO
               CALL @TU_FUNC(BARHNDL,ERROR)
               SIV_BAR_HNDL<S$SCR> = ""
               SIV_BAR_ACTIVE<S$SCR> = ""
            END
            FRMHNDL = S$GUIFORM
            IF BARFILE = "" THEN BARFILE = FIELD(S$PCNAME<1>,".",2):"BARS"
            TU_FUNC = "TU.TOOLBAR.LOAD":TU_VERNO
            CALL @TU_FUNC(BARFILE,BARNAME,FRMHNDL,"",BARHNDL,ERROR)
            IF ERROR = 0 THEN
               SIV_BAR_ACTIVE<S$SCR> = BARNAME
               SIV_BAR_ACTIVE<S$SCR,2> = BARFILE
               SIV_BAR_HNDL<S$SCR> = BARHNDL
            END ELSE
               SIV_BAR_ACTIVE<S$SCR> = ""
               SIV_BAR_HNDL<S$SCR> = ""
            END
         END
      END
      REINPUT = 0
* TOOLBAR v
*
*---- MAIN PROCESSING
*
10000 IF S$MASK = "" THEN S$MASK = "#"
      IF S$LCNT > 1 THEN
         S$Y = S$Y + S$LSPC * MOD(S$VAL-1,S$LCNT)
      END
      IF S$JUSTIFY = "" THEN
         IF S$TYP = 3 OR S$TYP = 4 THEN
            S$JUSTIFY = "R"
         END ELSE
            S$JUSTIFY = "L"
         END
      END
      SAVE.O.R = S$O.R
      SAVE.DEFAULT = S$DEFAULT
      IF S$DATA(S$FLD)<S$SCR,S$VAL> # "" THEN
         S$O.R = "O"
         S$DEFAULT = S$DATA(S$FLD)<S$SCR,S$VAL>
         S$PVALUE = S$DEFAULT
      END
      BEGIN CASE
      CASE S$DEFAULT = ""
      CASE S$TYP = 4
         CONV = "MD":S$SCALER
         S$DEFAULT = OCONV(S$DEFAULT,CONV)
         IF S$PVALUE # "" THEN S$PVALUE = S$DEFAULT
         IF SAVE.DEFAULT # "" THEN
            SAVE.DEFAULT = OCONV(SAVE.DEFAULT,CONV)
         END
      CASE S$TYP = 6
         BEGIN CASE
         CASE NUM(S$DEFAULT)
            S$DEFAULT = OCONV(S$DEFAULT,"D2/")
         CASE S$DEFAULT = "DATE"
            S$DEFAULT = OCONV(DATE(),"D2/")
         CASE S$DEFAULT[1,5] = "DATE+"
            INCR = S$DEFAULT[6,3]
            S$DEFAULT = OCONV(DATE()+INCR,"D2/")
         CASE S$DEFAULT[1,5] = "DATE-"
            DECR = S$DEFAULT[6,3]
            S$DEFAULT = OCONV(DATE()-DECR,"D2/")
         END CASE
         IF S$PVALUE # "" THEN S$PVALUE = S$DEFAULT
         IF SAVE.DEFAULT # "" AND NUM(SAVE.DEFAULT) THEN
            SAVE.DEFAULT = OCONV(SAVE.DEFAULT,"D2/")
         END
      END CASE
      VCNT = DCOUNT(S$VALDAT,",")
      PCNT = DCOUNT(S$PATRN,",")
      DPX = 0
      BEGIN CASE
      CASE S$PMSG = ""
      CASE S$GUIFORM
         PX = S$X; PY = S$Y
         DPX = 3; S$X = 0
         IF SIV_PSTACK<S$SCR> = "" THEN
            BEGIN CASE
            CASE S$PSTACK
               SIV_PSTACK<S$SCR> = 1
            CASE S$TYP = 8
               GOSUB 17130; GOTO 11050
            CASE 1
            END CASE
         END ELSE
         END
      CASE 1
         PX = S$X; PY = S$Y; S$X = S$X + LEN(S$PMSG) + 1
         IF VIDEO.PORT.TYPE # "STD" AND S$X + S$MAXL < (78 - ETX.EMBED) THEN
            S$X = S$X + ETX.EMBED
            IF PX = 0 THEN
               DPX = ETX.EMBED
            END ELSE
               DPX = PX
            END
         END
      END CASE
      IF S$Y # 23 AND TRIM(S$DEFAULT) # "" AND S$O.R = "O" THEN P.DEFAULT = 1 ELSE P.DEFAULT = 0
11000 BEGIN CASE
      CASE S$PMSG = ""
      CASE S$GUIFORM
         CRT @(DPX,PY):GUI.LABEL:S$PMSG:GUI.END:
      CASE DPX
         IF ETX.EMBED THEN
            CRT @(S$X,S$Y):CL:
            CRT @(DPX,PY):CL:S$PMSG:ETX.OFF:
            CRT @(DPX-1,PY):ETX.PHD:
         END ELSE
            CRT @(S$X,S$Y):CL:
            CRT @(DPX,PY):ETX.PHD:S$PMSG:ETX.OFF:CL:
         END
      CASE 1
         CRT @(S$X,S$Y):CL:
         CRT @(PX,PY):CL:S$PMSG:SPACE(1):
      END CASE
      BEGIN CASE
      CASE P.DEFAULT
         GOSUB 17110
      CASE S$BLANK # "" AND S$GUIFORM
         GOSUB 17120
      CASE S$BLANK = ""
         GOSUB 17120
      CASE VIDEO.PORT.TYPE # "STD" AND S$X > 0 AND S$X + S$MAXL < 80
         GOSUB 17160
      CASE 1
         GOSUB 17165
      END CASE
11050*
* TOOLBAR ^
      IF REINPUT THEN
         REINPUT = 0
         GOTO 11000
      END
* TOOLBAR v
11100*
      IF S$STOP = "Y" AND S$DVALUE = "<" THEN STOP
      IF S$DVALUE # "" AND S$DVALUE = SPACE(LEN(S$DVALUE)) THEN
         DELETE.FLAG = 1
         S$DVALUE = ""
      END ELSE
         DELETE.FLAG = 0
      END
      INLEN = LEN(S$DVALUE)
      T.DVALUE = TRIM(S$DVALUE)
      BEGIN CASE
*
*---- CHECK INPUT LENGTH
*
      CASE DELETE.FLAG AND SAVE.O.R = "O"
         S$MINL = 0
         S$DVALUE = SAVE.DEFAULT
         INLEN = LEN(S$DVALUE)
         IF S$DVALUE = "" THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      CASE INLEN < 1 AND S$O.R = "O"
         S$MINL = 0
         S$DVALUE = S$DEFAULT
         INLEN = LEN(S$DVALUE)
         IF S$DVALUE = "" THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      CASE INLEN < 1
         ERRMSG = "** REQUIRED **"
         GOSUB 19000
         GOTO 11000
*
*---- CHECK END REQUEST
*
      CASE T.DVALUE = CHAR(27) OR T.DVALUE = "END" OR T.DVALUE = "^"
         S$DVALUE = S$PVALUE
         S$VALUE  = "END"
         IF S$FLDTYPE = "M" OR S$FLDTYPE = "MP" THEN
            IF S$GUIFORM THEN
               ERRMSG = 'SCREEN.INPUT KILLING FORM S$GUIFORM!S$SCR = (':S$GUIFORM:'!':S$SCR:')'
               TYPE = "DLG.ERROR"
               BUTTONS = ""; RETURNS = ""
               TITLE = "M E S S A G E   B O X"
*            CALL TU.FORM.DIALOG(VALUE, TYPE, ERRMSG, BUTTONS, RETURNS, TITLE, ERROR)
               TU_FUNC = "TU.FORM.KILL":TU_VERNO
               CALL @TU_FUNC(S$GUIFORM,ERROR)
               S$SCRN.PC<S$SCR> = ""
               S$GUIFORM = ""
               SIV_BAR_ACTIVE<S$SCR> = ""
               SIV_BAR_HNDL<S$SCR> = ""
               SIV_MOUSE_ON<S$SCR> = ""
               SIV_PSTACK<S$SCR> = ""
               SIV_EVENTS<S$SCR> = ""
               SIV_FLD_STK<S$SCR> = ""
               SIV_FLD_VAL<S$SCR> = ""
               SIV_BAR_FLD<S$SCR> = ""
               SIV_BAR_FILE<S$SCR> = ""
               SIV_BAR_NAME<S$SCR> = ""
               SIV_LST_LINE<S$SCR> = ""
               GOTO 17093
            END
         END
         GOTO 17000
*
*----  CHECK HELP REQUEST
*
      CASE T.DVALUE = "?"
         GOSUB 30000
         GOTO 11000
      CASE T.DVALUE = "!"
         GOSUB 40000
         GOTO 11000
      CASE T.DVALUE = "~"
         GOSUB 30500
         GOTO 11000
      CASE T.DVALUE = ":"
         IF @LOGNAME = "walid" THEN
            HBOX.MSG = "CALLING SCREEN.BUILD.1"
            HBOX.MSG<1,2> ="S$NAME = " : S$NAME<S$SCR>
            HBOX.MSG<1,3> ="S$PCNAME = " : S$PCNAME
            HBOX.ID = ""
            HBOX.SEP = "VM"
            SI_HLPSUB = "SI_":TCC.HLP.SUB
            CALL @SI_HLPSUB
         END
         IF S$GUIFORM THEN
            PARAM = "SCREEN.INPUT"
            PARAM<1,2> = S$NAME<S$SCR>
            PARAM<1,3> = S$PCNAME
            PARAM<1,4> = S$FLD
            CALL PERFORM.PROG ("SCREEN.BUILD.1",PARAM)
            BARFILE = ""
            BARNAME = ""
*^* TEMP FOR SBCLIENT
            S$USERDATA = ""
            S$PSTACK = ""
            S$XREF_NAME = ""
            S$BITMAP = ""
            S$DATAFILE = ""
            MATREAD BLD.SCRN FROM S$FVAR(S$SCR), S$NAME<S$SCR>:"*FLD" THEN
               LOCATE S$FLD IN BLD.EXT.REF<1>,1 SETTING FC THEN
                  S$USERDATA = BLD.SCRN(FC)<1,B.USERDATA>
                  S$PSTACK = BLD.SCRN(FC)<1,B.PSTACK>
                  S$XREF_NAME = BLD.SCRN(FC)<1,B.XREF>
                  S$BITMAP = BLD.SCRN(FC)<1,B.BITMAP>
                  S$DATAFILE = BLD.SCRN(FC)<1,B.DATAFILE>
               END
            END
*v*
* TOOLBAR ^
            MATREAD SBAR_REC FROM S$FVAR(S$SCR), S$NAME<S$SCR>:"*BAR" ELSE MAT SBAR_REC = ""
            SIV_BAR_FLD<S$SCR> = SBAR_FLD
            SIV_BAR_FILE<S$SCR> = SBAR_FILE
            SIV_BAR_NAME<S$SCR> = SBAR_NAME
            LOCATE S$FLD IN SIV_BAR_FLD<S$SCR>,1 SETTING BB THEN
               BARNAME = SIV_BAR_NAME<S$SCR,BB>
               BARFILE = SIV_BAR_FILE<S$SCR,BB>
            END ELSE
               IF SIV_BAR_ACTIVE<S$SCR> = "" OR S$FLDTYPE = "M" THEN
                  LOCATE "MAIN" IN SIV_BAR_FLD<S$SCR>,1 SETTING BB THEN
                     BARNAME = SIV_BAR_NAME<S$SCR,BB>
                     BARFILE = SIV_BAR_FILE<S$SCR,BB>
                  END ELSE
                     BARNAME = "MAIN"
                     BARFILE = "PMCBARS"
                  END
               END
            END
            IF BARNAME # "" AND BARNAME # SIV_BAR_ACTIVE<S$SCR,1> THEN
               BARHNDL = SIV_BAR_HNDL<S$SCR>
               IF BARHNDL # "" THEN
                  TU_FUNC = "TU.TOOLBAR.KILL":TU_VERNO
                  CALL @TU_FUNC(BARHNDL,ERROR)
                  SIV_BAR_HNDL<S$SCR> = ""
                  SIV_BAR_ACTIVE<S$SCR> = ""
               END
               FRMHNDL = S$GUIFORM
               IF BARFILE = "" THEN BARFILE = FIELD(S$PCNAME<1>,".",2):"BARS"
               TU_FUNC = "TU.TOOLBAR.LOAD":TU_VERNO
               CALL @TU_FUNC(BARFILE,BARNAME,FRMHNDL,"",BARHNDL,ERROR)
               IF ERROR = 0 THEN
                  SIV_BAR_ACTIVE<S$SCR> = BARNAME
                  SIV_BAR_ACTIVE<S$SCR,2> = BARFILE
                  SIV_BAR_HNDL<S$SCR> = BARHNDL
               END ELSE
                  SIV_BAR_ACTIVE<S$SCR> = ""
                  SIV_BAR_HNDL<S$SCR> = ""
               END
            END
* TOOLBAR v
         END
         GOTO 11000
      CASE S$GUIFORM AND T.DVALUE = "]"
         BEGIN CASE
         CASE UNASSIGNED(S$XREF_NAME)
            T.DVALUE = ""
            GOTO 11000
         CASE S$XREF_NAME = "NULL"
            S$DVALUE = " "
            GOTO 11100
         CASE S$XREF_NAME = "???" OR S$XREF_NAME = "??"
            S$DVALUE = S$XREF_NAME
            GOTO 11100
         CASE 1
            IF FILEINFO(XREF.DATA,0) = 0 THEN
               OPEN "","XREF.DATA" TO XREF.DATA ELSE GOTO 11000
            END
            IF FILEINFO(PREFIX,0) = 0 THEN
               OPEN "","PREFIX" TO PREFIX ELSE GOTO 11000
            END
            MATREAD XRFS.REC FROM XREF.DATA, S$XREF_NAME ELSE GOTO 11000
            XREF_ID = S$NAME<S$SCR>:"_XRF":S$FLD
            MATREAD XBR_SCN FROM S$FVAR(S$SCR), XREF_ID ELSE MAT XBR_SCN = ""
            MAT GEN.XREF.REC = ""
            BEGIN CASE
            CASE XRFS.XREF.FILE # "^VALUE^"
            CASE XBR_XREF_FILE = ""
               GOTO 11000
            CASE XBR_XREF_FILE[1,1] = "^"
               XPTR = FIELD(XBR_XREF_FILE,"^",2)
               IF NUM(XPTR) THEN
                  IF S$DATA(XPTR)<S$SCR,S$VAL> = "" THEN
                     GOTO 11000
                  END ELSE
                     XRFS.XREF.FILE = S$DATA(XPTR)<S$SCR,S$VAL>
                  END
               END ELSE
                  GOTO 11000
               END
            CASE 1
               XRFS.XREF.FILE = XBR_XREF_FILE
            END CASE
            BEGIN CASE
            CASE XRFS.DATA.FILE # "^VALUE^"
            CASE XBR_DATA_FILE = ""
               GOTO 11000
            CASE XBR_DATA_FILE[1,1] = "^"
               XPTR = FIELD(XBR_DATA_FILE,"^",2)
               IF NUM(XPTR) THEN
                  IF S$DATA(XPTR)<S$SCR,S$VAL> = "" THEN
                     GOTO 11000
                  END ELSE
                     XRFS.DATA.FILE = S$DATA(XPTR)<S$SCR,S$VAL>
                     GXR.SORT.FILE = XRFS.DATA.FILE
                  END
               END ELSE
                  GOTO 11000
               END
            CASE 1
               XRFS.DATA.FILE = XBR_DATA_FILE
               GXR.SORT.FILE = XRFS.DATA.FILE
            END CASE
            BEGIN CASE
            CASE XBR_SRCH_ID = "^INPUT^"
               XPTR = S$Y
               TYP = 11; X = 0; Y = XPTR; MAXL = 30
               PMSG = XBR_SRCH_HD
               CALL EDIT.SUB1(MAT EDIT.COM)
               XBR_SRCH_ID = VALUE
               IF XBR_SRCH_ID = "END" THEN GOTO 11000
            CASE XBR_SRCH_ID[1,1] = "^"
               GOTO 11000
*              XPTR = FIELD(XBR_SRCH_ID,"^",2)
*              IF NUM(XPTR) THEN
*                 LOCATE XPTR IN BLD.EXT.REF<1>,1 SETTING XPTR ELSE
*                    GOTO 11000
*                 END
*                 FDEF = BLD.SCRN(XPTR)
*                 MAT EDIT.COM.SAVE = MAT EDIT.COM
*                 GOSUB 8100; GOSUB 8200
*                 CALL EDIT.SUB
*                 XBR_SRCH_ID = VALUE
*                 MAT EDIT.COM = MAT EDIT.COM.SAVE
*                 FDEF = BLD.SCRN(INT.REF)
*                 IF XBR_SRCH_ID = "END" OR XBR_SRCH_ID = "" THEN GOTO 11000
*              END ELSE
*                 GOTO 11000
*              END
            END CASE
            IF XRFS.CO.REQ # "N" THEN
               PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
               IF FILEINFO(SECURITY,0) = 0 THEN
                  OPEN "","SECURITY" TO SECURITY ELSE GOTO 11000
               END
               READV ECD_CO FROM SECURITY, "R.":PORT.NO,1 ELSE GOTO 11000
               GXR.CO = ECD_CO
            END
            GXR.NAME = S$XREF_NAME
            IF XRFS.XREF.FILE = "CONTROL" THEN
               GXR.XREF = CONTROL
            END ELSE
               GXR.OPEN.XREF = XRFS.XREF.FILE
            END
            GXR.OPEN.DATA = XRFS.DATA.FILE
            XPTR_VALUE = XBR_SRCH_ID; GOSUB 17300
            GXR.SRCH.ID = XPTR_VALUE
            XPTR_VALUE = XBR_VALUE1; GOSUB 17300
            GXR.VALUE1 = XPTR_VALUE
            XPTR_VALUE = XBR_VALUE2; GOSUB 17300
            GXR.VALUE2 = XPTR_VALUE
            XPTR_VALUE = XBR_VALUE3; GOSUB 17300
            GXR.VALUE3 = XPTR_VALUE
            XPTR_VALUE = XBR_VALUE4; GOSUB 17300
            GXR.VALUE4 = XPTR_VALUE
            XPTR_VALUE = XBR_VALUE5; GOSUB 17300
            GXR.VALUE5 = XPTR_VALUE
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            IF GXR.ID = "" THEN GOTO 11000
            S$DVALUE = GXR.ID
            GOTO 11100
         END CASE
      CASE S$GUIFORM AND T.DVALUE = "}"
         PERFORM "VSI_ZOOM"
         GOTO 11000
      CASE S$GUIFORM AND T.DVALUE = "["
         TMODE = ""
         CALL SCRN_EDIT_CEO (TMODE)
         GOTO 11000
*PMCUTLCK ^
      CASE S$GUIFORM AND T.DVALUE = "|"
*        CALL PMCUTLCK_SI("")
         GOTO 11000
*PMCUTLCK v
      CASE PC.PORT.TYPE # "wIntegrate"
      CASE T.DVALUE = "["
         CALL WIN.TCL
         GOTO 11000
*     CASE T.DVALUE = "{"
*        SCN_IMG = ""
*        CALL WIN.SSTATE(SCN_IMG,"")
*        CALL WIN.SPUSH
*        PERFORM "TCC_M"
*        CALL WIN.SPULL
*        CALL WIN.SSTATE("",SCN_IMG)
*        GOTO 11000
      CASE T.DVALUE = "}"
         SCN_IMG = ""
         CALL WIN.SSTATE(SCN_IMG,"")
         CALL WIN.SPUSH
         PERFORM "VSI_ZOOM"
         CALL WIN.SPULL
         CALL WIN.SSTATE("",SCN_IMG)
         GOTO 11000
      END CASE
*
*--- CHECK (OR) VALID INPUT
*
      IF S$ORVALDAT AND VCNT THEN
         GOSUB 17200
         IF VLOC THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      END
*
*---- RANGE CHECK INPUT LENGTH
*
      BEGIN CASE
      CASE INLEN < S$MINL
         ERRMSG = "** MINIMUM LENGTH = " : S$MINL : " **"
         GOSUB 19000
         GOTO 11000
*
*---  CHECK ILLEGAL CHARACTER INPUT
*
      CASE S$INVALCHR # ""
         ICNT = DCOUNT(S$INVALCHR,",")
         FOR I = 1 TO ICNT
            IF INDEX(S$DVALUE,FIELD(S$INVALCHR,",",I),1) THEN
               ERRMSG = FIELD(S$INVALCHR,",",I)
               ICNT = 0
            END
         NEXT I
         IF NOT(ICNT) THEN
            ERRMSG = "** INVALID CHARACTER (":ERRMSG:") INPUT - PLEASE RE-KEY **"
            GOSUB 19000
            GOTO 11000
         END
      END CASE
      T.LEN = LEN(T.DVALUE)
      FOR N = 1 TO T.LEN
         DEC.EQUIV = SEQ(T.DVALUE[N,1])
         IF DEC.EQUIV < 32 OR DEC.EQUIV > 126 THEN
            ERRMSG = "** INVALID INPUT - PLEASE RE-KEY **":S$FLD:"@@@"
            GOSUB 19000
            GOTO 11000
         END
      NEXT N
*
*---- THE FOLLOWING ALLOWS DATE OR SPECIFIED INPUT
*
      IF S$TYP = 6 AND VCNT > 0 AND S$ORVALDAT = "" THEN
         GOSUB 17200
         IF VLOC THEN
            S$VALUE = S$DVALUE
            GOTO 17000
*        END ELSE
*           S$VALDAT = ""
         END
      END
      ERRMSG = ""
*
*---- ZERO OR BLANK FILL IF REQUESTED
*
      IF S$FILL # "" AND INLEN < S$MAXL THEN
         IF S$FILL = "B" THEN S$FILL = " "
         IF S$JUSTIFY = "R" THEN
            IF NUM(S$DVALUE) THEN
               S$DVALUE = STR(S$FILL,S$MAXL-INLEN):S$DVALUE
            END
         END ELSE
            S$DVALUE = S$DVALUE:STR(S$FILL,S$MAXL-INLEN)
         END
      END
*
*---- PROCESS EDIT REQUEST
*
      ON S$TYP GOSUB 18100,18200,18300,18400,18500,18600,18700,18800,18900
      IF ERRMSG # "" THEN
         GOSUB 19000
         GOTO 11000
      END
*
*---- RANGE CHECK IF REQUESTED
*
      IF S$MINV # "" OR S$MAXV # "" THEN
         IF S$VALUE < S$MINV OR S$VALUE > S$MAXV THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 19000
            GOTO 11000
         END
      END
*
*---- CHECK VALID INPUT
*
      IF S$TYP = 6 THEN GOTO 17000
      IF VCNT > 0 AND S$VALDAT.CODE = "" AND S$ORVALDAT = "" THEN
         GOSUB 17200
         IF NOT(VLOC) THEN
            ERRMSG = "** INVALID RESPONSE **"
            GOSUB 19000
            GOTO 11000
         END
      END
17000 IF S$BLANK = "" THEN
         IF S$GUIFORM THEN
            IF S$DVALUE[1,1] = "&" AND S$DVALUE[3,1] = "&" THEN
               S$PVALUE = " "
            END ELSE
               S$PVALUE = S$DVALUE
            END
            CRT @(S$X,S$Y):GUI.LABEL:S$PVALUE:GUI.END:
         END ELSE
            FORM = S$JUSTIFY:"#":S$MAXL
            S$PVALUE = S$DVALUE FORM
            IF ETX.EMBED THEN
               CRT @(S$X,S$Y) : S$PVALUE :
            END ELSE
               CRT @(S$X,S$Y):ETX.DIN:S$PVALUE:ETX.DIN.OFF:
            END
         END
      END
      IF S$VALUE = "END" THEN GOTO 17090
      IF S$VALDATION = "D" OR (S$VALDAT.CODE # "" AND S$VALUE # "") THEN
         VAL.ERR = 0
         GOSUB 20000
         IF VAL.ERR = 1 THEN GOTO 11000
      END
      IF S$PMSG = "" THEN
         S$DATA(S$FLD)<S$SCR,S$VAL> = S$VALUE
      END
*
*---- INITIALIZE ALL PARAMETERS
*
17090 IF S$PMSG # "" THEN
         IF S$GUIFORM THEN
            CRT @(S$X,S$Y):GUI.LABEL:" ":GUI.END:
         END ELSE
            CRT @(PX,PY):CL:
         END
      END
17093 S$VAL         = 1
      S$TYP         = 1
      S$PVALUE      = ""
      S$MINL        = 1
      S$MAXL        = 1
      S$MINV        = ""
      S$MAXV        = ""
      S$O.R         = "R"
      S$DEFAULT     = ""
      S$JUSTIFY     = ""
      S$SCALER      = 2
      S$PATRN       = ""
      S$EMODE       = 1
      S$EX          = 0
      S$EY          = 23
      S$PMSG        = ""
      S$BLANK       = ""
      S$BLINK       = ""
      S$REVERSE     = ""
      S$HMSG        = ""
      S$VALDAT      = ""
      S$AUTO.RTN    = ""
      S$FILL        = ""
      S$LCNT        = 1
      S$LSPC        = 1
      S$VALDAT.FILE = ""
      S$VALDAT.CODE = ""
      S$VALDAT.ITEM = ""
      S$VALDATION   = ""
      S$PREFIX      = ""
      S$ORVALDAT    = ""
      S$INVALCHR    = ""
      S$FLDTYPE     = ""
      S$EXVALDAT    = ""
      RETURN
*
*********************  S U B R O U T I N E S  *************************
*
*---- Input Routines
17110*
      BEGIN CASE
      CASE S$GUIFORM
         TU_FUNC = "TU.FORM.UPDATEFIELD":TU_VERNO
         IF S$DEFAULT = "" THEN
            S$DEFAULT = " "
            CALL @TU_FUNC(S$X,S$Y,S$DEFAULT,ERROR)
            S$DEFAULT = ""
         END ELSE
            CALL @TU_FUNC(S$X,S$Y,S$DEFAULT,ERROR)
         END
         GOSUB 17130
      CASE S$TYP = 1 AND S$MAXL >= S$EDITLEN
         BEGIN CASE
         CASE PC.PORT.TYPE = "wIntegrate"
            GOSUB 17140
         CASE 1
            GOSUB 17145
         END CASE
      CASE VIDEO.PORT.TYPE # "STD" AND S$X > 0 AND S$X + S$MAXL < 80
         IF ETX.EMBED THEN
            BEGIN CASE
            CASE LEN(S$DEFAULT) < 70
               CRT @(0,23):CL:ETX.HHD.OFF:"DEFAULT":ETX.HHD.OFF:S$DEFAULT:ETX.HHD.OFF:
               CRT @(0,23):ETX.HHD:@(8,23):ETX.HHD:
            CASE LEN(S$DEFAULT) < 78
               CRT @(0,23):CL:ETX.HHD.OFF:S$DEFAULT:ETX.HHD.OFF:
               CRT @(0,23):ETX.HHD:
            CASE 1
               CRT @(0,23):CL:S$DEFAULT "L#79":
            END CASE
         END ELSE
            BEGIN CASE
            CASE LEN(S$DEFAULT) < 72
               CRT @(0,23):ETX.HHD:"DEFAULT":ETX.HHD.OFF:" ":ETX.HHD:S$DEFAULT:ETX.HHD.OFF:CL:
            CASE LEN(S$DEFAULT) < 80
               CRT @(0,23):CL:ETX.HHD:S$DEFAULT:ETX.HHD.OFF:
            CASE 1
               CRT @(0,23):CL:ETX.HHD:S$DEFAULT "L#79":ETX.HHD.OFF:CL:
            END CASE
         END
         GOSUB 17150
         CRT @(0,23) : CL :
      CASE 1
         IF LEN(S$DEFAULT) > 70 THEN
            CRT @(0,23):S$DEFAULT "L#79":CL:
         END ELSE
            CRT @(0,23):"DEFAULT- ":S$DEFAULT:CL:
         END
         GOSUB 17155
         CRT @(0,23) : CL :
      END CASE
      RETURN
17120*
      BEGIN CASE
      CASE S$GUIFORM
         TU_FUNC = "TU.FORM.UPDATEFIELD":TU_VERNO
         IF S$DEFAULT = "" THEN
            S$DEFAULT = " "
            CALL @TU_FUNC(S$X,S$Y,S$DEFAULT,ERROR)
            S$DEFAULT = ""
         END ELSE
            CALL @TU_FUNC(S$X,S$Y,S$DEFAULT,ERROR)
         END
         GOSUB 17130
      CASE S$TYP = 1 AND S$MAXL >= S$EDITLEN
         BEGIN CASE
         CASE PC.PORT.TYPE = "wIntegrate"
            GOSUB 17140
         CASE 1
            GOSUB 17145
         END CASE
      CASE VIDEO.PORT.TYPE # "STD" AND S$X > 0 AND S$X + S$MAXL < 80
         GOSUB 17150
      CASE 1
         GOSUB 17155
      END CASE
      RETURN
17130*
* ERRMSG = 'SCREEN INPUT S$X/S$Y/S$GUIFORM/S$SCR = (':S$X:'/':S$Y:'/':S$GUIFORM:'/':S$SCR
*         TYPE = "DLG.ERROR"
*         BUTTONS = ""; RETURNS = ""
*         TITLE = "M E S S A G E   B O X"
*         CALL TU.FORM.DIALOG(VALUE, TYPE, ERRMSG, BUTTONS, RETURNS, TITLE, ERROR)
*TOOLBAR ^
      BEGIN CASE
      CASE S$FLDTYPE = "M" AND SIV_MOUSE_ON<S$SCR>
         FRMHNDL = S$GUIFORM
         TU_FUNC = "ROC.SET":TU_VERNO
         CALL @TU_FUNC(FRMHNDL, "forced_input",20,ERROR)
         SIV_MOUSE_ON<S$SCR> = 0
*        IF @LOGNAME = "walid" THEN
*           HBOX.MSG = "MOUSE WAS TURNED OFF"
*           HBOX.MSG<1,2> = "ERROR = " :ERROR: "@@@"
*           HBOX.ID = ""
*           HBOX.SEP = "VM"
*           SI_HLPSUB = "SI_":TCC.HLP.SUB
*           CALL @SI_HLPSUB
*        END
*        SIV_PSTACK<S$SCR> = ""
*     CASE S$PSTACK = 1 AND NOT(SIV_MOUSE_ON<S$SCR>)
      CASE S$PSTACK AND NOT(SIV_MOUSE_ON<S$SCR>)
         FRMHNDL = S$GUIFORM
         TU_FUNC = "ROC.SET":TU_VERNO
         CALL @TU_FUNC(FRMHNDL, "forced_input",0,ERROR)
         SIV_MOUSE_ON<S$SCR> = 1
*        IF @LOGNAME = "walid" THEN
*           HBOX.MSG = "MOUSE WAS TURNED ON"
*           HBOX.MSG<1,2> = "ERROR = " :ERROR: "@@@"
*           HBOX.ID = ""
*           HBOX.SEP = "VM"
*           SI_HLPSUB = "SI_":TCC.HLP.SUB
*           CALL @SI_HLPSUB
*        END
      END CASE
*TOOLBAR v
      IF SIV_STACK = "" THEN
         BEGIN CASE
         CASE S$TYP = 8 AND S$PMSG # ""
            ERRTYP = "DLG.INFO"
            IF S$DEFAULT = "N" THEN
               BTN_HD = "No":VM:"Yes"
               BTN_VAL = "N":VM:"Y"
               ERRHD = "N O   /   Y E S"
            END ELSE
               BTN_HD = "Yes":VM:"No"
               BTN_VAL = "Y":VM:"N"
               ERRHD = "Y E S   /   N O"
            END
            TU_FUNC = "TU.FORM.DIALOG":TU_VERNO
            CALL @TU_FUNC(S$DVALUE,ERRTYP,S$PMSG,BTN_HD,BTN_VAL,ERRHD,ERROR)
            IF S$DVALUE # "Y" AND S$DVALUE # "N" THEN S$DVALUE = "END"
            ERRTYP = ""; BTN_HD = ""; BTN_VAL = ""
            EVENT = ""; XVALUE = ""
            GOTO 17139
         CASE S$TYP = 1 AND S$PMSG # "" AND S$FLDTYPE = "VP"
            TYP = 11
            X = 0
            MAXL = S$MAXL
            O.R = S$O.R
            DEFAULT = S$DEFAULT
            PMSG = S$PMSG
            MINV = S$MINV
            MAXV = S$MAXV
            VALDAT = CHANGE(S$VALDAT,",",VM)
            CALL EDIT.SUB1 (MAT EDIT.COM)
            S$DVALUE = VALUE
            EVENT = ""; XVALUE = ""
            GOTO 17139
         CASE S$TYP = 6 AND S$PMSG # "" AND S$FLDTYPE = "VP"
            TYP = 16
            X = 0
            MAXL = S$MAXL
            O.R = S$O.R
            DEFAULT = S$DEFAULT
            PMSG = S$PMSG
            MINV = S$MINV
            MAXV = S$MAXV
            CALL EDIT.SUB1 (MAT EDIT.COM)
            IF VALUE = "END" OR VALUE = "" THEN
               S$DVALUE = VALUE
            END ELSE
               S$DVALUE = OCONV(VALUE, "D2/")
            END
            EVENT = ""; XVALUE = ""
            GOTO 17139
         CASE 1
            FLDNAME = S$X:",":S$Y
            TU_FUNC = "TU.FORM.INPUT":TU_VERNO
            CALL @TU_FUNC(FLDNAME,S$DVALUE,XVALUE,EVENT,ERROR)
****COPY>WAYBP>SI_CIV1
         END CASE
      END ELSE
         EVENT = ""; XVALUE = ""
         IF SIV_MOUSE_ON<S$SCR> THEN
            IF S$PSTACK THEN
               S$DVALUE = SIV_STACK
            END ELSE
               S$DVALUE = ""
               REINPUT = 1
            END
            SIV_STACK = ""
         END ELSE
            S$DVALUE = ""
         END
****COPY>WAYBP>SI_CIV1
         GOTO 17139
      END
      BEGIN CASE
* TOOLBAR ^
**** data field mouse click
      CASE EVENT<1> = "gain_focus"
         BEGIN CASE
         CASE S$USERDATA = "^VALUE^"
            FLDNAME = FIELD(EVENT<2>,":",2)
            TU_FUNC = "TU.FORM.GETDATA":TU_VERNO
            CALL @TU_FUNC(FLDNAME,XVALUE,ERROR)
            IF ERROR THEN
               REINPUT = 1
            END ELSE
               S$DVALUE = TRIM(XVALUE," ","B")
            END
         CASE NOT(S$PSTACK)
            S$DVALUE = ""
            IF XVALUE = "" THEN
               FLDNAME = FIELD(EVENT<2>,":",2)
               IF FLDNAME # "_pmc70" THEN
                  REINPUT = 1
               END
            END ELSE
               SIV_STACK = XVALUE
            END
         CASE NOT(XVALUE)
            FLDNAME = FIELD(EVENT<2>,":",2)[5,99]
            LOCATE FLDNAME IN BLD.EXT.REF<1>,1 SETTING FLD_LOC THEN
               XVALUE = BLD.SCRN(FLD_LOC)<1,B.USERDATA>
            END
            IF XVALUE = "" THEN
               REINPUT = 1
            END ELSE
               S$DVALUE = XVALUE
            END
         CASE NUM(XVALUE)
            S$DVALUE = XVALUE
         CASE S$DVALUE[1,7] = "^IMAGE^"
            REINPUT = 1
            FLDNAME = FIELD(S$DVALUE,"^",3)
            IF NUM(FLDNAME) AND FLDNAME > 0 THEN
               IF S$DATA(FLDNAME)<S$SCR> # "" THEN
                  CALL PMCIMAGE("PMCIMAGE",S$DATA(FLDNAME)<S$SCR>,ERROR)
               END
            END
         CASE 1
            REINPUT = 1
         END CASE
*** Toolbar mouse clicked
      CASE DCOUNT(EVENT,AM) < 7
         BEGIN CASE
         CASE S$DVALUE = "END"
         CASE EVENT<1> = "special" AND EVENT<3> = "prtsc"
            APP.MACRO = CHAR(27):'_p'
            TU_FUNC = "TU.MACRO":TU_VERNO
            CALL @TU_FUNC(APP.MACRO,"V",ERROR)
            REINPUT = 1
         CASE TRIM(S$DVALUE) = ""
            S$DVALUE = ""
         CASE S$DVALUE = "]" OR S$DVALUE = "}"
         CASE S$DVALUE = "PMCVERSION"
            CALL PMCIMAGE("PMC_VER", "..\VSIPIC\PMCLOGOC.BMP",ERROR)
            REINPUT = 1
         CASE S$DVALUE[1,7] = "^IMAGE^"
            REINPUT = 1
            FLDNAME = FIELD(S$DVALUE,"^",3)
            IF NUM(FLDNAME) AND FLDNAME > 0 THEN
               IF S$DATA(FLDNAME)<S$SCR> # "" THEN
                  CALL PMCIMAGE("PMCIMAGE",S$DATA(FLDNAME)<S$SCR>,ERROR)
               END
            END
         CASE BARNAME # SIV_BAR_ACTIVE<S$SCR,1>
            REINPUT = 1
         END CASE
* TOOLBAR v
      CASE EVENT<1> = "special" AND EVENT<3> = "27"
         S$DVALUE = "END"
      CASE S$DVALUE[1,3] = "&V&"
         CRT @(S$X,S$Y):GUI.LABEL:" ":GUI.END:
         PROC_ID = TRIM(S$DVALUE[4,999])
         S$DVALUE = ""
         OPEN "","PMC_PROCESS" TO PMC_PROCESS THEN
            OPEN "","VOC" TO VOC THEN
               VOC_ID = "TTY"; CALL SYSVARS.SUB(VOC_ID)
               VOC_ID = "E_":VOC_ID
               CALL VSI_VERB_SUB(VOC_ID,VOC,PROC_ID,PMC_PROCESS,EXE_TYPE,EXE_VERB,ERRMSG)
               IF EXE_VERB # "" THEN
*PMCUTLCK ^
*              EXECUTE EXE_VERB
                  PREV_PROC_ID = @USER1
                  @USER1 = PROC_ID
                  EXECUTE EXE_VERB
                  @USER1 = PREV_PROC_ID
*PMCUTLCK v
                  CRT @(S$X,S$Y):
                  IF EXE_TYPE = "P" OR EXE_TYPE = "PB" THEN
                     READU ITEM FROM VOC, VOC_ID THEN
                        DELETE VOC, VOC_ID
                     END ELSE
                        RELEASE VOC, VOC_ID
                     END
                  END
               END
            END
         END
      END CASE
17139*
      RETURN
17140*
      FILLER = SPACE(S$MAXL)
      GOSUB 17181
      S$DVALUE = S$DEFAULT
      CALL EDIT_WTG(S$X,S$Y,S$MAXL,S$DVALUE)
      IF ETX.EMBED THEN
         CRT @(S$X-1,S$Y):ETX.DHD:
      END ELSE
         CRT @(S$X,S$Y):ETX.OFF:
      END
      RETURN
17145*
      S$DVALUE = S$DEFAULT
      CALL FIELD.EDIT(S$X,S$Y,S$MAXL,S$DVALUE,S$DEFAULT)
      RETURN
17150*
      GOSUB 17180
      IF S$AUTO.RTN = "" THEN
         INPUT S$DVALUE,S$MAXL _:
      END ELSE
         INPUT S$DVALUE,S$MAXL :
      END
      IF ETX.EMBED THEN
         CRT @(S$X-1,S$Y):ETX.DHD:
      END ELSE
         CRT @(S$X,S$Y):ETX.OFF:
      END
      RETURN
17155*
      GOSUB 17185
      IF S$AUTO.RTN = "" THEN
         INPUT S$DVALUE,S$MAXL _:
      END ELSE
         INPUT S$DVALUE,S$MAXL :
      END
      RETURN
17160*
      GOSUB 17180
      ECHO OFF
      IF S$AUTO.RTN = "" THEN
         INPUT S$DVALUE,S$MAXL _:
      END ELSE
         INPUT S$DVALUE,S$MAXL :
      END
      ECHO ON
      IF ETX.EMBED THEN
         CRT @(S$X-1,S$Y):ETX.DHD:
      END ELSE
         CRT @(S$X,S$Y):ETX.OFF:
      END
      RETURN
17165*
      GOSUB 17185
      ECHO OFF
      IF S$AUTO.RTN = "" THEN
         INPUT S$DVALUE,S$MAXL _:
      END ELSE
         INPUT S$DVALUE,S$MAXL :
      END
      ECHO ON
      RETURN
17180*
      BEGIN CASE
      CASE S$TYP = 6 AND S$MAXL = 8
         FILLER = S$ETXMSK:S$ETXMSK:"/":S$ETXMSK:S$ETXMSK:"/":S$ETXMSK:S$ETXMSK
      CASE S$TYP = 4
         FILLER = STR(S$ETXMSK,S$MAXL-S$SCALER-1):".":STR(S$ETXMSK,S$SCALER)
      CASE 1
         FILLER = STR(S$ETXMSK,S$MAXL)
      END CASE
17181*
      IF ETX.EMBED THEN
         CRT @(S$X-1,S$Y):ETX.DIN.OFF:FILLER:ETX.DIN.OFF:
         CRT @(S$X-1,S$Y):ETX.DIN:
      END ELSE
         CRT @(S$X,S$Y):ETX.DIN:FILLER:
         CRT @(S$X,S$Y):
      END
      RETURN
17185*
      BEGIN CASE
      CASE S$TYP = 6 AND S$MAXL = 8
         FILLER = S$MASK:S$MASK:"/":S$MASK:S$MASK:"/":S$MASK:S$MASK
      CASE S$TYP = 4
         FILLER = STR(S$MASK,S$MAXL-S$SCALER-1):".":STR(S$MASK,S$SCALER)
      CASE 1
         FILLER = STR(S$MASK,S$MAXL)
      END CASE
      CRT @(S$X,S$Y):FILLER:@(S$X,S$Y):
      RETURN
*
*---- Check VALDAT
17200*
      LIMIT = VCNT; VLOC = 0
      FOR V = 1 TO VCNT
         IF S$DVALUE = FIELD(S$VALDAT,",",V) THEN
            LIMIT = 0; VLOC = V
            IF S$GUIFORM THEN
               IF S$FLDTYPE = "MP" AND S$EXVALDAT<1,1,V> = "Y" THEN
                  ERRMSG = 'SCREEN.INPUT KILLINK FORM S$GUIFORM!S$SCR = (':S$GUIFORM:'!':S$SCR:')'
                  TYPE = "DLG.ERROR"
                  BUTTONS = ""; RETURNS = ""
                  TITLE = "M E S S A G E   B O X"
*            CALL TU.FORM.DIALOG(VALUE, TYPE, ERRMSG, BUTTONS, RETURNS, TITLE, ERROR)
                  TU_FUNC = "TU.FORM.KILL":TU_VERNO
                  CALL @TU_FUNC(S$GUIFORM,ERROR)
                  S$SCRN.PC<S$SCR> = ""
                  S$GUIFORM = ""
                  SIV_BAR_ACTIVE<S$SCR> = ""
                  SIV_BAR_HNDL<S$SCR> = ""
               END
            END
         END
      NEXT V
      RETURN
17300*
      IF XPTR_VALUE[1,1] = "^" THEN
         XPTR = FIELD(XPTR_VALUE,"^",2)
         IF NUM(XPTR) THEN
            XPTR_VALUE = S$DATA(XPTR)<S$SCR>
         END ELSE
            XPTR_VALUE = ""
         END
      END
      RETURN
*
*---- EDIT ALPHANUMERIC INPUT
*
18100 S$VALUE = S$DVALUE
      RETURN
*
*---- EDIT ALPHABETIC INPUT
*
18200*ALPHA(DVALUE) WORKS ONLY WITH NEW COMPILER
      FOR I = 1 TO INLEN WHILE ERRMSG = ""
         CHR = S$DVALUE[I,1]
         IF CHR < "A" OR CHR > "Z" THEN
            ERRMSG = "** ALPHA INPUT REQUIRED **"
         END
      NEXT I
      IF ERRMSG = "" THEN
         S$VALUE = S$DVALUE
      END
18299 RETURN
*
*---- EDIT NUMERIC INPUT
*
18300 IF S$DVALUE MATCHES "0N" THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** NUMERIC INPUT REQUIRED **"
      END
18399 RETURN
*
*---- EDIT SCALED DECIMAL INPUT
*
18400 IF NOT(NUM(S$DVALUE)) THEN GOTO 18490
      IF LEN(FIELD(S$DVALUE,".",1)) > (S$MAXL - S$SCALER - 1) THEN GOTO 18490
      IF LEN(FIELD(S$DVALUE,".",2)) > S$SCALER THEN GOTO 18490
      CNV = "MD" : S$SCALER
      S$VALUE = ICONV(S$DVALUE,CNV)
      S$DVALUE= OCONV(S$VALUE,CNV)
      IF S$MINV = "" AND S$MAXV = "" THEN GOTO 18499
      IF INDEX(S$MINV,".",1) > 0 THEN S$MINV = ICONV(S$MINV,CNV)
      IF INDEX(S$MAXV,".",1) > 0 THEN S$MAXV = ICONV(S$MAXV,CNV)
      GOTO 18499
18490 ERRMSG = "** DECIMAL INPUT REQUIRED **"
18499 RETURN
*
*---- EDIT ALPHANUMERIC WITH NO SPACES INPUT
*
18500 IF INDEX(S$DVALUE," ",1) THEN
         ERRMSG = "** INVALID SPACE CHARACTER INPUT **"
      END ELSE
         S$VALUE = S$DVALUE
      END
18599 RETURN
*
*---- EDIT DATE INPUT
*
18600*
*T26682 v
*     IF S$DVALUE MATCHES "0N" THEN
*        ERRMSG = "** INVALID DATE **"
*        GOTO 18699
*     END
*T26682 ^
      IF S$DVALUE = "DATE" THEN S$DVALUE = OCONV(DATE(),"D2")
      S$VALUE = ICONV(S$DVALUE,"D")
      IF S$VALUE = S$DVALUE OR S$VALUE = "" THEN
         ERRMSG = "** INVALID DATE **"
      END ELSE
         S$DVALUE = OCONV(S$VALUE,"D2/")
         IF S$MINV = "" AND S$MAXV = "" THEN GOTO 18699
         BEGIN CASE
         CASE NUM(S$MINV)
         CASE S$MINV = "DATE"
            S$MINV = DATE()
         CASE S$MINV[1,5] = "DATE+"
            S$MINV = DATE() + S$MINV[6,3]
         CASE S$MINV[1,5] = "DATE-"
            S$MINV = DATE() - S$MINV[6,3]
         END CASE
         BEGIN CASE
         CASE NUM(S$MAXV)
         CASE S$MAXV = "DATE"
            S$MAXV = DATE()
         CASE S$MAXV[1,5] = "DATE+"
            S$MAXV = DATE() + S$MAXV[6,3]
         CASE S$MAXV[1,5] = "DATE-"
            S$MAXV = DATE() - S$MAXV[6,3]
         END CASE
      END
18699 RETURN
*
*---- EDIT PATTERN INPUT
*
18700 FND = 0
      FOR P = 1 TO PCNT UNTIL FND > 0
         IF S$DVALUE MATCHES FIELD(S$PATRN,",",P) THEN FND = P
      NEXT P
      IF FND > 0 THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** INVALID FORMAT **"
      END
18799 RETURN
*
*---- EDIT YES OR NO
*
18800 IF S$DVALUE = "Y" OR S$DVALUE = "N" THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** PLEASE RESPOND (Y) OR (N) **"
      END
18899 RETURN
*
*---- EDIT (OPEN)
*
18900 S$VALUE = S$DVALUE
18999 RETURN
*
*---- ERROR ROUTINE
*
19000 BEGIN CASE
      CASE S$GUIFORM
         TYPE = "DLG.ERROR"
         BUTTONS = ""; RETURNS = ""
         TITLE = "M E S S A G E   B O X"
         TU_FUNC = "TU.FORM.DIALOG":TU_VERNO
         CALL @TU_FUNC(VALUE, TYPE, ERRMSG, BUTTONS, RETURNS, TITLE, ERROR)
*        ERX = 3; ERY = 23
*        CRT BEL:
*        CRT @(ERX,ERY):GUI.LABEL:ERRMSG:GUI.END:
*        CALL TU.FORM.INPUT("_pmc90",S$DVALUE,S$DEFAULT,XOXO,XOXO)
*        CRT @(ERX,ERY):GUI.LABEL:" ":GUI.END:
         GOTO 19090
      CASE S$EMODE = 1 OR S$EMODE = 4
         ERX = S$EX
         ERY = S$EY
      CASE S$EMODE = 2 OR S$EMODE = 5
         ERX = 40
         ERY = S$EY
      CASE S$EMODE = 3 OR S$EMODE = 6
         ERX = S$EX
         ERY = S$EY
      CASE 1
         ERX = 0
         ERY = 23
      END CASE
      SP.LEN = 79 - ERX
      CRT @(ERX,ERY):SPACE(SP.LEN):
      IF ETX.EMBED THEN
         CRT @(ERX,ERY):ETX.EHD.OFF:BEL:ERRMSG:ETX.EHD.OFF:
         CRT @(ERX,ERY):ETX.EHD:@(ERX+LEN(ERRMSG)+2,ERY):
      END ELSE
         CRT @(ERX,ERY):BEL:ETX.EHD:ERRMSG:ETX.EHD.OFF:
      END
      IF S$EMODE < 4 THEN
         INPUT STALL,1 _:
         CRT @(ERX,ERY):SPACE(LEN(ERRMSG)+3):
      END
19090 ERRMSG = ""
      RETURN
*
*---- PROCESS VALIDATION REQUEST
*
20000 IF S$VALDATION = "D" THEN
         LOCATE S$VALUE IN S$DATA(S$FLD)<S$SCR,S$VAL>,1 SETTING VLOC ELSE VLOC = 0
         IF VLOC AND VLOC # S$VAL THEN
            ERRMSG = "* * " : S$VALUE : " ALREADY EXIST ON LINE # " : VLOC : " * *"
            GOSUB 90000
            VAL.ERR = 1
            GOTO 20099
         END
      END
      IF S$VALDAT.CODE # "" AND S$VALUE # "" THEN
         IF S$VALDAT # "" AND S$ORVALDAT = "" THEN
            GOSUB 17200
         END ELSE
            VLOC = 0
         END
         IF NOT(VLOC) THEN
            VLOC = 1
            IF S$VALDAT.CODE # "5" THEN
               READ S$VALDAT.ITEM FROM S$VALDAT.FILE, S$PREFIX.ID : S$VALUE ELSE
                  VLOC = 0
                  S$VALDAT.ITEM = ""
                  BEGIN CASE
                  CASE S$VALDAT.CODE = "1"
                     ERRMSG = S$VALUE : " IS NOT ON FILE"
                     GOSUB 90000
                  CASE S$VALDAT.CODE = "2"
                     ERRMSG = S$VALUE : " IS NOT ON FILE TRY AGAIN !"
                     GOSUB 90000
                     VAL.ERR = 1
                     GOTO 20099
                  CASE S$VALDAT.CODE = "4"
                     ERRMSG = S$VALUE : " IS NOT ON FILE. DO YOU WANT TO ADD (Y/N) :"
                     GOSUB 90000
                     IF ERRVAL # "Y" THEN
                        VAL.ERR = 1
                        GOTO 20099
                     END
                  END CASE
               END
            END ELSE
               READU S$VALDAT.ITEM FROM S$VALDAT.FILE, S$PREFIX.ID : S$VALUE ELSE
                  VLOC = 0
                  S$VALDAT.ITEM = ""
                  ERRMSG = S$VALUE : " IS NOT ON FILE TRY AGAIN !"
                  GOSUB 90000
                  VAL.ERR = 1
                  GOTO 20099
               END
            END
            IF VLOC AND S$VALDAT.CODE = "3" THEN
               ERRMSG = "** ":S$VALUE:" ALREADY EXISTS ON FILE **"
               GOSUB 90000
               VAL.ERR = 1
               GOTO 20099
            END
         END
      END
20099 RETURN
*
*---- PROCESS HELP REQUEST
30000*
      IF S$HMSG = "" THEN
         IF S$FILE(S$SCR) = "" THEN
            HBOX.FILE = M.SCREENS
         END ELSE
            HBOX.FILE = S$FVAR(S$SCR)
         END
         HBOX.ID = S$NAME<S$SCR>:"*HMSG":S$FLD
      END ELSE
         HBOX.MSG = S$HMSG
         HBOX.ID = ""
      END
      HBOX.SEP = "SM"
      SI_HLPSUB = "SI_":TCC.HLP.SUB
      CALL @SI_HLPSUB
      RETURN
*
*---- PROCESS TECHNICAL HELP REQUEST
30500*
      HBOX.MSG = "Ref No=":S$FLD
      IF S$VAL > 1 THEN
         HBOX.MSG = HBOX.MSG:", LN=":S$VAL
      END
      HBOX.MSG = HBOX.MSG : ", TYP=":S$TYP
      IF S$TYP = 4 THEN
         HBOX.MSG = HBOX.MSG:", SCALER=":S$SCALER
      END
      HBOX.MSG = HBOX.MSG:", MAXL=":S$MAXL
      IF S$MINL > 1 THEN
         HBOX.MSG = HBOX.MSG:", MINL=":S$MINL
      END
      IF S$MINV # S$MAXV OR (S$MINV # 0 AND S$MINV # "") THEN
         HBOX.MSG = HBOX.MSG:", MAXV=":S$MAXV
         HBOX.MSG = HBOX.MSG:", MINV=":S$MINV
      END
      HMV = 1
      IF S$PATRN # "" THEN
         MVP = 1
         PVAL = FIELD(S$PATRN,",",MVP)
         PVAR = ", PATRN="
         LOOP
            IF LEN(HBOX.MSG<1,HMV>) + LEN(PVAL) + LEN(PVAR) > 67 THEN
               HMV = HMV + 1
               IF MVP = 1 THEN
                  HBOX.MSG<1,HMV> = "PATRN=":PVAL
               END ELSE
                  HBOX.MSG<1,HMV> = "& PATRN=":PVAL
               END
            END ELSE
               HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV>:PVAR:PVAL
            END
            MVP = MVP + 1
            PVAL = FIELD(S$PATRN,",",MVP)
         WHILE PVAL # "" DO
            PVAR = ","
         REPEAT
      END
      IF S$ORVALDAT # "" THEN
         IF LEN(HBOX.MSG<1,HMV>) + LEN(S$ORVALDAT) + 11 > 67 THEN
            HMV = HMV + 1
            HBOX.MSG<1,HMV> = "ORVALDAT=":S$ORVALDAT
         END ELSE
            HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV>:", ORVALDAT=":S$ORVALDAT
         END
      END
      IF S$VALDAT # "" THEN
         MVP = 1
         PVAL = FIELD(S$VALDAT,",",MVP)
         PVAR = ", VALDAT="
         LOOP
            IF LEN(HBOX.MSG<1,HMV>) + LEN(PVAL) + LEN(PVAR) > 67 THEN
               HMV = HMV + 1
               IF MVP = 1 THEN
                  HBOX.MSG<1,HMV> = "VALDAT=":PVAL
               END ELSE
                  HBOX.MSG<1,HMV> = "& VALDAT=":PVAL
               END
            END ELSE
               HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV>:PVAR:PVAL
            END
            MVP = MVP + 1
            PVAL = FIELD(S$VALDAT,",",MVP)
         WHILE PVAL # "" DO
            PVAR = ","
         REPEAT
      END
      IF PC.PORT.TYPE = "termulator" THEN
         IF S$GUIFORM # "" THEN
            IF BARNAME # "" THEN
               HMV = HMV + 1
               HBOX.MSG<1,HMV> = "Toolbar=":BARNAME
               HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV> : ", BAR File=":BARFILE
            END
            IF S$PSTACK # "" THEN
               HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV> : ", Prompt Stack=":S$PSTACK
            END
            IF S$USERDATA # "" THEN
               HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV> : ", User Data=":S$USERDATA
            END
         END
      END
      BEGIN CASE
      CASE S$XREF_NAME = ""
      CASE S$XREF_NAME = "NULL"
      CASE S$XREF_NAME = "??"
      CASE S$XREF_NAME = "???"
      CASE 1
         HMV = HMV + 1
         HBOX.MSG<1,HMV> = "XREF = ":S$XREF_NAME
         IF S$DATAFILE # "" THEN
            HBOX.MSG<1,HMV> = HBOX.MSG<1,HMV> : ', Data FILE = ' : S$DATAFILE
         END
      END CASE
      HMV = HMV + 1
      HBOX.MSG<1,HMV> = "SCREEN = ":S$NAME<S$SCR> : ", S# = ":S$SCR
      HBOX.ID = ""
      HBOX.SEP = "VM"
      SI_HLPSUB = "SI_":TCC.HLP.SUB
      CALL @SI_HLPSUB
      RETURN
*
*---- ENTER HELP MESSAGE
40000*
      IF S$FILE(S$SCR) = "" THEN
         HBOX.FILE = M.SCREENS
      END ELSE
         HBOX.FILE = S$FVAR(S$SCR)
      END
      HBOX.ID = S$NAME<S$SCR>:"*HMSG":S$FLD
      HBOX.MSG = S$HMSG
      HBOX.SEP = "SM"
      SI_SCLSUB = "SI_":SCL.HLP.SUB
      CALL @SI_SCLSUB
      RETURN
*
*---- ERROR ROUTINE
*
90000 BEGIN CASE
      CASE S$GUIFORM
*        TYPE = "DLG.ERROR"
*        BUTTONS = ""; RETURNS = ""
*        TITLE = "M E S S A G E   B O X"
*        CALL TU.FORM.DIALOG(VALUE, TYPE, ERRMSG, BUTTONS, RETURNS, TITLE, ERROR)
         CRT @(3,23):GUI.LABEL:ERRMSG:GUI.END:
         TU_FUNC = "TU.FORM.INPUT":TU_VERNO
         CALL @TU_FUNC("_pmc90",ERRVAL,S$DEFAULT,XOXO,XOXO)
         CRT @(3,23):GUI.LABEL:" ":GUI.END:
      CASE ETX.EMBED
         CRT @(0,23):ETX.EHD.OFF:CL:ERRMSG:ETX.EHD.OFF:
         CRT @(0,23):ETX.EHD:@(LEN(ERRMSG)+2,23):
         INPUT ERRVAL,1 _:
         CRT @(0,23) : CL :
      CASE 1
         CRT @(0,23):ETX.EHD:ERRMSG:ETX.EHD.OFF:CL:
         INPUT ERRVAL,1 _:
         CRT @(0,23) : CL :
      END CASE
99999*
      RETURN
   END
