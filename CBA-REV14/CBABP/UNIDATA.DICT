*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.DICT.VAL
******************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* FILE        - CBABP
* PROGRAM     - UNIDATA.DICT
* BY          - Julianne Rivera, Vercom Software, Inc.
* DATE        - 09/21/90
* DESCRIPTION 
******************************************************************
*
**** INSERT FILE EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>DICT.VALUES
*COPY>CPYLIB>UNI.DICT
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>DICT.HLD.FILE
	MAT SFR = ''
	MAT POS = ''
	MAT SF1 = ''
	MAT SF2 = ''
	MAT SF3 = ''
*
**** SETUP FOR THE SYSTEM ERRMSGS
*
   	SYS.TYPE = 1
	CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
	OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = 'COMPANY FILE IS MISSING'
	GOTO 93000
	END
	OPEN '','CONTROL' TO CONTROL ELSE
	ERRMSG = 'CONTROL FILE IS MISSING' 
	GOTO 93000
	END
 	OPEN '','M.SCREENS' TO M.SCREENS ELSE
	ERRMSG = 'M.SCREENS FILE IS MISSING'
	GOTO 93000
	END
	OPEN '','HOLD.FILE' TO HOLD.FILE ELSE
	ERRMSG = 'HOLD.FILE IS MISSING'
	GOTO 93000
	END
*
**** CHECK COMPANY PARAMETER
*
	MATREAD COMP.REC FROM COMPANY, '001' ELSE
	ERRMSG = 'COMPANY 001 IS NOT ON FILE'
	GOTO 93000
	END
	READV CURR.ACCT FROM CONTROL, 'MENUS.CONTROL', 1 ELSE
	READV CURR.ACCT FROM CONTROL, '001MENUS.CONTROL', 1 ELSE
	ERRMSG = 'CANNOT READ MENUS.CONTROL'
	GOTO 93000
	END
	END
	ACCT.LEN = LEN(CURR.ACCT)
*
	CONO.LEN = 3
	ST.CONO = CONO.LEN + 1
	DIV.LEN = 2
	DEP.LEN = 2
	CTR.LEN = 3
	CCTR.LEN = CONO.LEN + DIV.LEN + DEP.LEN + CTR.LEN
	ST.CCTR = CCTR.LEN + 1
	GL.LEN = 0
	STRUC.CNT = COUNT(CO.ACCT.STRUC,'-')
	SF.CNT = STRUC.CNT + 1
	FOR I = 1 TO SF.CNT
	SFR(I) = FIELD(CO.ACCT.STRUC,'-',I)
	IF NUM(SFR(I)) THEN
	IF SFR(I) > 0 THEN
	SFR(I) = SFR(I) + 0
	POS(I) = GL.LEN + 1
	GL.LEN = GL.LEN + SFR(I)
	END ELSE
	ERRMSG = 'SUFFIX # ':I:' IS < 1'; GOTO 93000
	END
	END ELSE
	ERRMSG = 'SUFFIX # ':I:' IS NOT NUMERIC'; GOTO 93000
	END
	NEXT I
	IF GL.LEN <> LEN(CO.ACCT.PIC) THEN
	ERRMSG = 'GL.LEN <> LEN(CO.ACCT.PIC)'; GOTO 93000
	END
	IF SF.CNT > 1 THEN
	SUFFIX.POS = POS(2)
	SUFFIX.LEN = GL.LEN - SFR(1)
	END ELSE
	SUFFIX.LEN = 0
	SUFFIX.POS = GL.LEN + 1
	END
	STRUC.LEN = STRUC.CNT + GL.LEN
	TOT.LEN = CCTR.LEN + GL.LEN
	EN.GL.LEN1 = ST.CONO + GL.LEN
	EN.GL.LEN2 = ST.CCTR + GL.LEN
*
**** MAIN PROCESSING
*
	MAT EDIT.COM.DRIVER = ''
	MAT EDIT.COM = ''
	TYP = 0; CALL EDIT.SUB
	ECD.SCRN.CNT = 3
	ECD.SCRN.NAME = 'UNIDATA.DICT'
	ECD.SCRN.NAME<2> = 'GLS.DICT.TYPE.SUB1'
	ECD.SCRN.NAME<3> = 'GLS.DICT.TYPE.SUB2'
	ECD.ACTION = 1; CALL SCRN.EDIT
	ALL.TYPE = '01'
	FOR LN = 2 TO 28
	ALL.TYPE<-1> = STR('0',2-LEN(LN)):LN
	NEXT LN
	FOR LN = 32 TO 36
	ALL.TYPE<-1> = LN
	NEXT LN
ALL.TYPE<-1> = "50"
ALL.TYPE<-1> = "54"
*
**** PRINT SCREEN
1 *
	ECD.SCRN.NO = 1
	MAT HOLD.REC = ''
	MAT DICT.REC = ''
	S.NAME = ''
	MAT SCV.REC = ''
	ECD.ACTION = 6; CALL SCRN.EDIT
*
**** ENTER FILE NAME
5 * 
	ECD.NUM = 1
	IF FILE.NAME # '' THEN ECD.DEFAULT = FILE.NAME
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE = 'END' THEN GOTO 99999
	FILE.NAME = ECD.RET.VALUE
	OPEN 'DICT',FILE.NAME TO D.F.NAME ELSE
	ERRMSG = 'DICT ':FILE.NAME:' IS MISSING'
	GOSUB 91000; GOTO 5
	END
*
**** ENTER ITEM NAME
7 *
	ECD.NUM = 2
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE = 'END' THEN GOTO 1
   IF ECD.RET.VALUE = '@ID' THEN
   ERRMSG = 'INVALID ITEM'; GOSUB 91000; GOTO 7
   END
	ITEM.NAME = ECD.RET.VALUE
*
*---- GET TYPE
*
	NEW = 1
	MATREAD HOLD.REC FROM HOLD.FILE, FILE.NAME:'!':ITEM.NAME THEN
	NEW = 0
	ECD.NUM = 17; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = HOLD.TYPE
	ECD.ACTION = 5; CALL SCRN.EDIT
	GOSUB 1000
	END ELSE
8 *
	ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE = 'END' THEN GOTO 1
	IF ECD.RET.VALUE = '' THEN
	GOTO 7000
	IF ECD.RET.VALUE = 'N' OR ECD.RET.VALUE = 'END' THEN GOTO 8
	ECD.RET.VALUE = STR('0',2-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
	ECD.NUM = 17; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
	ECD.ACTION = 5; CALL SCRN.EDIT
	END
	LOCATE ECD.RET.VALUE IN ALL.TYPE,1 SETTING PTR ELSE
	ERRMSG = 'INVALID TYPE'; GOSUB 91000; GOTO 8
	END
	HOLD.TYPE = ECD.RET.VALUE
	FOR X = 1 TO 7 UNTIL ECD.RET.VALUE = 'END'
	ON X GOSUB 200,300,600,700,400,450
	NEXT X
   IF ECD.RET.VALUE = 'Y' THEN GOSUB 800
	IF ECD.RET.VALUE = 'END' THEN GOTO 1
	END
*
**** ENTER OPTIONS
10 *
	ECD.NUM = 16
	SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
	ECD.ACTION = 4; CALL SCRN.EDIT
	REQUEST = ECD.RET.VALUE 
	BEGIN CASE
	CASE REQUEST = 'END' OR REQUEST = 'E'
	IF NEW THEN ERRMSG = 'NEW RECORD WAS NOT FILED'; GOSUB 91000
	GOTO 1
	CASE NUM(REQUEST)
	BEGIN CASE
	CASE REQUEST < 5
	ON REQUEST GOSUB 200,300,600,700
   IF ECD.RET.VALUE = 'Y' THEN GOSUB 800
	CASE REQUEST = 5
   IF HOLD.TYPE # 2 AND HOLD.TYPE # 36 THEN
	ERRMSG = 'INVALID SELECTION FOR CURRENT TYPE'
	GOSUB 91000
	GOTO 10
	END
	GOSUB 410
	CASE REQUEST = 6
   IF HOLD.TYPE # 3 AND HOLD.TYPE # 18 AND HOLD.TYPE # 28 AND HOLD.TYPE # 36 THEN
	ERRMSG = 'INVALID SELECTION FOR CURRENT TYPE'
	GOSUB 91000
	GOTO 10
	END
	GOSUB 420
	CASE REQUEST = 7
	IF HOLD.TYPE < 32 OR HOLD.TYPE > 35 THEN
	ERRMSG = 'INVALID SELECTION FOR CURRENT TYPE'
	GOSUB 91000
	GOTO 10
	END
	GOSUB 430
	CASE REQUEST = 8
	IF HOLD.TYPE # 33 THEN
	ERRMSG = 'INVALID SELECTION FOR CURRENT TYPE'
	GOSUB 91000
	GOTO 10
	END
	GOSUB 440
	CASE REQUEST = 9
*	IF HOLD.TYPE # 1 AND HOLD.TYPE # 35 THEN
*	ERRMSG = 'INVALID SELECTION FOR CURRENT TYPE'
*	GOSUB 91000
*	GOTO 10
*	END
	GOSUB 450
   CASE REQUEST = 10
   GOSUB 800
   END CASE
	CASE REQUEST = 'D'
	X=0;Y=21;O.R='R';TYP=8
	PMSG= 'YOU ARE ABOUT TO DELETE THIS ITEM OK (Y/N)'
	CALL EDIT.SUB 
	PRINT @(0,21):CL:
	IF VALUE = 'Y' THEN
	IF NEW = 0 THEN
	DELETE HOLD.FILE, FILE.NAME:'!':ITEM.NAME
	END
	GOTO 1
	END
	CASE REQUEST = 'F' OR REQUEST = 'U'
	L.VALUE = LEN(HOLD.S.NAME)
	V.VALUE = HOLD.S.NAME
	GOSUB 4000
	HOLD.S.NAME = FV.VALUE
	IF REQUEST = 'U' THEN
   CALL CREATE.DICT(FILE.NAME)
	MATWRITE DICT.REC ON D.F.NAME, ITEM.NAME
	END
   HOLD.ACCT.MASK = UD.MASK
	MATWRITE HOLD.REC ON HOLD.FILE, FILE.NAME:'!':ITEM.NAME
	GOTO 1
	END CASE
	GOTO 10
*
**** ENTER D.CODE
100 *
	ECD.NUM = 3
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.D.CODE = ECD.RET.VALUE
	END
	RETURN
*
**** ENTER A.AMC
200 *
	ECD.NUM = 4
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.A.AMC = ECD.RET.VALUE
	END
	RETURN
*
**** ENTER FIRST HEADING LINE
300 *
	ECD.NUM = 5
	ECD.DEFAULT = ITEM.NAME
	ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = '' THEN
      HOLD.S.NAME = ''
      GOTO 399
   END
	HOLD.S.NAME<1,1> = ECD.RET.VALUE
*
**** ENTER SECOND HEADING LINE
*
	ECD.NUM = 6
	ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = '' THEN 
      S.NAME = HOLD.S.NAME<1,1>
      GOTO 399
   END
	HOLD.S.NAME<1,2> = ECD.RET.VALUE
   S.NAME = HOLD.S.NAME<1,1>:HOLD.S.NAME<1,2>
*
**** ENTER THIRD HEADING LINE
*
	ECD.NUM = 7
	ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = '' THEN
      S.NAME = HOLD.S.NAME<1,1>:HOLD.S.NAME<1,2>
      GOTO 399
   END
	HOLD.S.NAME<1,3> = ECD.RET.VALUE
   S.NAME = HOLD.S.NAME<1,1>:HOLD.S.NAME<1,2>:HOLD.S.NAME<1,3>
   GOTO 399
399 *
	RETURN
400 *
	BEGIN CASE
	CASE HOLD.TYPE = 2
	GOSUB 410
	CASE HOLD.TYPE = 3 OR HOLD.TYPE = 18 OR HOLD.TYPE = 28
	GOSUB 420
	CASE HOLD.TYPE = 33
	GOSUB 430; GOSUB 440
	CASE HOLD.TYPE = 34
	GOSUB 430
   CASE HOLD.TYPE = 32
   GOSUB 430
   CASE HOLD.TYPE = 35
   GOSUB 430
	CASE HOLD.TYPE = 36
	GOSUB 410; GOSUB 420
	END CASE
	RETURN
*
**** STARTING POINT
410 *
	ECD.NUM = 18
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.START.PT = ECD.RET.VALUE
	END
	RETURN
*
**** LENGTH 
420 *
	IF HOLD.TYPE = 28 THEN ECD.DEFAULT = '99'
	ECD.NUM = 19
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.NO.LEN = ECD.RET.VALUE
	END
	RETURN
*
**** ATTRIBUTE 
430 *
	ECD.NUM = 20
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.TFILE.ATTR = ECD.RET.VALUE
	END
	RETURN
*
**** MULTI-VALUE 
440 *
	ECD.NUM = 21
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.TFILE.MV.NO = ECD.RET.VALUE
	END
	RETURN
*
**** MULTI-VALUE FLAG 
450 *
	ECD.NUM = 22
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.MS.FLAG = ECD.RET.VALUE
	END
   IF HOLD.MS.FLAG = 'N'  AND HOLD.LINK # '' THEN
   HOLD.LINK = ''
   SCV.REC(23)<ECD.SCRN.NO> = HOLD.LINK
   ECD.NUM = 23
   ECD.ACTION = 5; CALL SCRN.EDIT
   END
	RETURN
*
**** ENTER JUSTIFY
600 *
	ECD.NUM = 14
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.JUSTIFY = ECD.RET.VALUE
	END
	RETURN
*
**** ENTER MAX LENGTH
700 *
	ECD.NUM = 15
   IF LEN(HOLD.S.NAME<1,1>) LE LEN(HOLD.S.NAME<1,2>) THEN
   ECD.DEFAULT = LEN(HOLD.S.NAME<1,2>)
   END ELSE
   ECD.DEFAULT = LEN(HOLD.S.NAME<1,1>)
   END
   IF ECD.DEFAULT < LEN(HOLD.S.NAME<1,3>) THEN
   ECD.DEFAULT = LEN(HOLD.S.NAME<1,3>)
   END
	ECD.ACTION = 4; CALL SCRN.EDIT
	IF ECD.RET.VALUE # 'END' THEN
	HOLD.MAX.LEN = ECD.RET.VALUE
	END
	RETURN
*
**** ENTER LINK
*
800 *
   ECD.NUM = 23
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
   HOLD.LINK = ECD.RET.VALUE
   END
   RETURN
*
**** GET ALL VALUES FROM FILE
1000 *
	L.VALUE = LEN(HOLD.S.NAME)
	V.VALUE = HOLD.S.NAME
	SCV.REC(4)<ECD.SCRN.NO> = HOLD.A.AMC
	SCV.REC(5)<ECD.SCRN.NO> = HOLD.S.NAME<1,1>
	SCV.REC(6)<ECD.SCRN.NO> = HOLD.S.NAME<1,2>
	SCV.REC(7)<ECD.SCRN.NO> = HOLD.S.NAME<1,3>
	SCV.REC(14)<ECD.SCRN.NO> = HOLD.JUSTIFY
	SCV.REC(15)<ECD.SCRN.NO> = HOLD.MAX.LEN
	SCV.REC(17)<ECD.SCRN.NO> = HOLD.TYPE
	SCV.REC(18)<ECD.SCRN.NO> = HOLD.START.PT
	SCV.REC(19)<ECD.SCRN.NO> = HOLD.NO.LEN
	SCV.REC(20)<ECD.SCRN.NO> = HOLD.TFILE.ATTR
	SCV.REC(21)<ECD.SCRN.NO> = HOLD.TFILE.MV.NO 
	SCV.REC(22)<ECD.SCRN.NO> = HOLD.MS.FLAG
	SCV.REC(23)<ECD.SCRN.NO> = HOLD.LINK
	ECD.ACTION = 3; CALL SCRN.EDIT 
	RETURN
*
**** CHANGE ALL VALUE MARK TO ]
3000 *
	FV.VALUE = ''
	FOR LL = 1 TO L.VALUE
	IF V.VALUE[LL,1] = VM THEN
	FV.VALUE = FV.VALUE:'}'
	END ELSE
	FV.VALUE = FV.VALUE:V.VALUE[LL,1]  
	END
	NEXT LL
	RETURN 
*
**** CHANGE ALL ] TO VALUE MARK
4000 *
	FV.VALUE = ''
	FOR LL = 1 TO L.VALUE
	IF V.VALUE[LL,1] = '}' THEN
	FV.VALUE = FV.VALUE:VM
	END ELSE
	FV.VALUE = FV.VALUE:V.VALUE[LL,1]
	END
	NEXT LL
	RETURN
*
**** TYPE XREF
7000 *
	ECD.SCRN.NO = 2; ECD.ACTION = 2; CALL SCRN.EDIT
7001 *
	IF ECD.SCRN.NO = 3 THEN PRINT @(0,23):CL:'* * * LAST SCREEN * * *':
	ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
	ECD.ACTION = 4; CALL SCRN.EDIT
	REQUEST = ECD.RET.VALUE
	BEGIN CASE
	CASE REQUEST = 'END' OR REQUEST = 'N'
	GOTO 7009
	CASE REQUEST = 'F'
	BEGIN CASE
	CASE ECD.SCRN.NO = 2
	ECD.SCRN.NO = 3; ECD.ACTION = 2; CALL SCRN.EDIT
	CASE 1
	ERRMSG = 'THIS IS THE LAST SCREEN'; GOSUB 91000
	END CASE
	CASE REQUEST = 'B'
	BEGIN CASE
	CASE ECD.SCRN.NO = 3
	ECD.SCRN.NO = 2; ECD.ACTION = 2; CALL SCRN.EDIT
	CASE 1 
	GOTO 7009
	END CASE
END CASE
	GOTO 7001
7009 *
	ECD.SCRN.NO = 1; ECD.ACTION = 3; CALL SCRN.EDIT
	GOTO 8
*
**** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1
	CALL SYSCOM(MAT SYSCOM.REC)
	RETURN
92000 ERR.TYPE = 2
	CALL SYSCOM(MAT SYSCOM.REC)
	RETURN
93000 *
	ERR.TYPE = 3
	CALL SYSCOM(MAT SYSCOM.REC)
99999 PRINT @(-1):
	END
