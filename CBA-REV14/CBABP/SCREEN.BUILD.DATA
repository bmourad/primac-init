      SUBROUTINE SCREEN.BUILD.DATA (FUNCT, COL, ROW, ERROR.STATUS, MAT ABLD.SCRN, MAT BMSR_REC, MAT VBSR_REC, MAT XBR_SCN)
*COPY>CPYLIB>COM1
*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - SCREEN.BUILD.DATA
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/27/83
*
* REVISION - A.1.1
*
* DESCRIPTION
*
* This subroutine provides entry and maintenance of data field
* definitions for the screen builder system. All position information
* editing criteria, video attributes, error handling and help
* messages are defined using this program.
*
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>TCC
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>SCREEN.BUILD.DATA
*COPY>CPYLIB>VALDAT_BUILD_SCREEN
*COPY>CPYLIB>BAR_MAINT_SCREEN
*COPY>CPYLIB>XREF_BUILD_SCREEN
      SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
*
*---- DEFINE VARIABLES
*
      DIM TEMP.PATRN(5)
*
*---- INITIALIZATION
10*
      ESN = ECD.SCRN.NO
      MAT SCREEN = ""
      MAT TEMP.PATRN = ""
      READ TOOLBAR_TYPES FROM CONTROL, "TOOLBAR_TYPES" ELSE TOOLBAR_TYPES = ""
      IF FUNCT = "A" THEN
         MAINT.MODE = 0
      END ELSE
         MAINT.MODE = 1
      END
      ERROR.STATUS = 0
      CHANGED = 0
      SORTED = 1
      ORIG.EXT.REF = ""
      PREV.EXT.REF = ""
      ECD.ACTION = 2; CALL SCRN.EDIT
      VBEGIN.PAGE = 12 ; VPAGE.SIZE = 3 ; VLINE.SPACE = 1
      HMSG.BEGIN.PAGE = 19 ; HMSG.PAGE.SIZE = 2 ; HMSG.LINE.SPACE = 1
      OLD.HMSG.START.LINE = 0
      OLD.VSTART.LINE = 0
*
*---- MAIN PROCESSING
*
      IF MAINT.MODE THEN
         START.REF = 1
         IF NUM(FUNCT) THEN
            LOCATE FUNCT IN BLD.EXT.REF<1>,1 SETTING INT.REF ELSE GOTO 99999
            FUNCT = "SCRN_EDIT"
         END ELSE
            GOSUB 10100
         END
         FC = INT.REF
         GOSUB 10200
         GOSUB 10600
         GOSUB 10300
         VLN = 1
         GOSUB 12010
         GOSUB 12020
         LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
         LN = 1
         GOSUB 12040
         GOTO 300
      END ELSE
         VLINES = 0
         LINES = 0
         LN = 1
         VLN = 1
         FOR I = 1 TO SCV.REC.SIZE
            SCV.REC(I)<ESN> = ""
         NEXT I
      END
*
*---- PROCESS NEW FIELD
*
200*
      INT.REF = DCOUNT(BLD.EXT.REF,VM) + 1
      SCRN.X = COL
      SCRN.Y = ROW
      SCV.REC(3)<ESN> = SCRN.X
      ECD.NUM = 3
      ECD.ACTION = 5; CALL SCRN.EDIT
      SCV.REC(4)<ESN> = SCRN.Y
      ECD.NUM = 4
      ECD.ACTION = 5; CALL SCRN.EDIT
      FOR FN = 1 TO 15 UNTIL ECD.RET.VALUE = "END"
         ON FN GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500
      NEXT FN
      IF ECD.RET.VALUE = "END" THEN GOTO 99999
      CHANGED = 1
      MAINT.MODE = 1
      SORTED = 0
      BLD.FIELD.CNT = BLD.FIELD.CNT + 1
*
*---- GET OPERATOR REQUEST
*
300*
      IF FUNCT = "SCRN_EDIT" THEN
         NEXT.INT.REF = 0
      END ELSE
         SAVE.INT.REF = INT.REF
         START.REF = INT.REF + 1
         GOSUB 10100
         NEXT.INT.REF = INT.REF
         INT.REF = SAVE.INT.REF
      END
      IF NEXT.INT.REF THEN
         ECD.NUM = 30
      END ELSE
         ECD.NUM = 29
      END
      ECD.ACTION = 4; CALL SCRN.EDIT
      REPLY = ECD.RET.VALUE
      BEGIN CASE
      CASE (REPLY = "N" OR REPLY = "n") AND NEXT.INT.REF
         OLD.HMSG.START.LINE = 0
         OLD.VSTART.LINE = 0
         GOSUB 10700
         FC = INT.REF
         GOSUB 10400
         IF NOT(SORTED) THEN GOSUB 11000
         ECD.ACTION = 6
         CALL SCRN.EDIT
         CNT = 1
         GOSUB 12015
         INT.REF = NEXT.INT.REF
         FC = INT.REF
         MAT SCREEN = ""
         GOSUB 10200
         GOSUB 10600
         GOSUB 10300
         VLN = 1
         GOSUB 12010
         GOSUB 12020
         LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
         LN = 1
         GOSUB 12040
         GOTO 300
      CASE REPLY = "E" OR REPLY = "e" OR REPLY = "END" OR REPLY = "end"
         BLD.FIELD.CNT = DCOUNT(BLD.EXT.REF,VM)
         GOTO 99999
      CASE REPLY = "F" OR REPLY = "f"
         GOSUB 10700
         FC = INT.REF
         GOSUB 10400
         IF NOT(SORTED) THEN GOSUB 11000
         IF FUNCT = "SCRN_EDIT" THEN FUNCT = "FILE"
         GOTO 99999
      CASE REPLY = "U" OR REPLY = "u"
         FC = INT.REF
         CALL CNV_SYS_FIELDS_SB(FC)
      CASE REPLY = "O" OR REPLY = "o"
         PREV.ECD.SCRN.NO = ECD.SCRN.NO
         LOCATE "SCREEN.BUILD.DATA.SUB" IN ECD.SCRN.NAME, 1 SETTING ECD.SCRN.NO THEN
            FC = INT.REF
            CALL SCREEN.BUILD.DATA.SUB(FUNCT,COL,ROW,ERROR.STATUS,FC,MAT SCREEN,CHANGED)
            ECD.SCRN.NO = PREV.ECD.SCRN.NO
         END
*         FC = INT.REF
*         GOSUB 10200
*         GOSUB 10600
*         GOSUB 10300
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.VSTART.LINE = 0
         OLD.HMSG.START.LINE = 0
         GOSUB 12010
         GOSUB 12020
         GOSUB 12040
      CASE REPLY = "V" OR REPLY = "v"
         BEGIN CASE
         CASE ECD.SCRN.PC<ECD.SCRN.NO> = ""
         CASE 1
            TFILE = SCRN.TOOLBAR.FILE
            IF TFILE = "" THEN TFILE = FIELD(SCRN.PCNAME,".",2):"BARS"
            TNAME = SCRN.TOOLBAR
            GOSUB 8000
            BEGIN CASE
            CASE TBAR_REC = "ERROR"
               ERRMSG = "Cannot create Toolbar Record"
               IF INDEX(TNAME,".",1) OR TFILE # "PMCBARS" THEN
                  GOSUB 91000
                  TNAME = ""
               END ELSE
                  ERRMSG<1,2> = "Using Standard Toolbar - ":TNAME
                  GOSUB 91000
               END
            CASE DUP_NAME # ""
               TFILE = "PMCBARS"
               TNAME = DUP_NAME
            CASE 1
               IF TNAME = "" THEN TNAME = FIELD(SCRN.PCNAME,".",1):".":SCRN.EXT.REF
               TFILE = TBAR_REC
            END CASE
            IF TNAME # "" THEN CALL TBAR_VIEW_SUB (TFILE, TNAME, SIV_BAR_ACTIVE, SIV_BAR_HNDL, ECD.SCRN.PC, ECD.SCRN.NO, ERROR)
         END CASE
      CASE REPLY = "T" OR REPLY = "t"
         TFILE = SCRN.TOOLBAR.FILE
         IF TFILE = "" THEN TFILE = FIELD(SCRN.PCNAME,".",2):"BARS"
         TNAME = SCRN.TOOLBAR
         GOSUB 8000
         BEGIN CASE
         CASE TBAR_REC = "ERROR"
            ERRMSG = "Cannot create Toolbar Record"
            GOSUB 91000
            TNAME = ""
         CASE DUP_NAME # ""
            TFILE = "PMCBARS"
            TNAME = DUP_NAME
         CASE 1
            IF TNAME = "" THEN TNAME = FIELD(SCRN.PCNAME,".",1):".":SCRN.EXT.REF
         END CASE
         IF TNAME # "" THEN
            PREV.ECD.SCRN.NO = ECD.SCRN.NO
            TBAR_MODE = "INQ"
            TBAR_ERROR = ""
            CALL TBAR_BLD_SUB (TBAR_MODE, TFILE, TNAME, TBAR_REC, TBAR_ERROR)
            ECD.SCRN.NO = PREV.ECD.SCRN.NO
            IF TBAR_ERROR # 99 THEN
               ECD.ACTION = 3
               CALL SCRN.EDIT
            END
         END
      CASE NUM(REPLY) AND REPLY >= 1 AND REPLY <= 5
         FN = REPLY
         ON FN GOSUB 1100,1200,1300,1400,1500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  6 AND REPLY <=  10
         FN = REPLY - 5
         ON FN GOSUB 1600,1700,1800,1900,2000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  11 AND REPLY <=  15
         FN = REPLY - 10
         ON FN GOSUB 2100,2200,2300,2400,2500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  16 AND REPLY <=  20
         FN = REPLY - 15
         ON FN GOSUB 2600,2700,2800,2900,3000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  21 AND REPLY <=  25
         FN = REPLY - 20
         ON FN GOSUB 3100,3200,3300,3400,3500
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  26 AND REPLY <=  30
         FN = REPLY - 25
         ON FN GOSUB 3600,3700,3800,3900,4000
         CHANGED = 1
      CASE NUM(REPLY) AND REPLY >=  31 AND REPLY <=  34
         FN = REPLY - 30
         ON FN GOSUB 4100,4200,4300,4400
         CHANGED = 1
      CASE 1
         ERRMSG = "Invalid reply.... Retry"
         GOSUB 95000
      END CASE
      GOTO 300
*
*---- GET FIELD REFERENCE NUMBER
*
1100*
      IF FUNCT = "SCRN_EDIT" THEN RETURN
      ECD.NUM = 1
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      BEGIN CASE
      CASE ECD.RET.VALUE = "N" OR ECD.RET.VALUE = "n"
         GOSUB 10500
         IF EXT.REF > 60 OR EXT.REF = 0 THEN
            ERRMSG = "Reference cannot exceed 60"
            GOSUB 95000
            GOTO 1100
         END
         SCRN.EXT.REF = EXT.REF
         SCV.REC(1)<ESN> = SCRN.EXT.REF
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOSUB 10600
      CASE ECD.RET.VALUE = ORIG.EXT.REF
         SCRN.EXT.REF = ECD.RET.VALUE
      CASE NUM(ECD.RET.VALUE)
         LOCATE ECD.RET.VALUE IN BLD.EXT.REF<1>,1 SETTING P ELSE P = 0
         IF P = 0 THEN
            SCRN.EXT.REF = ECD.RET.VALUE
            GOSUB 10600
         END ELSE
            ERRMSG = "Duplicate field number..."
            GOSUB 95000
            GOTO 1100
         END
         IF SCRN.EXT.REF > 60 THEN
*              ERRMSG = "Reference cannot exceed 60 if SCREEN.INPUT is used"
            ERRMSG = "Reference cannot exceed 60"
            GOSUB 95000
            GOTO 1100
         END
      END CASE
      RETURN
*
*---- GET FIELD NAME
*
1200*
      ECD.NUM = 2
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.FIELD.NAME = ECD.RET.VALUE
      ECD.NUM = 33
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.SORT.ID = ECD.RET.VALUE
      RETURN
*
*---- GET COLUMN NUMBER
*
1300*
      IF FUNCT = "SCRN_EDIT" THEN RETURN
      IF NOT(MAINT.MODE) THEN RETURN
      ECD.NUM = 3
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.X = ECD.RET.VALUE
      SORTED = 0
      RETURN
*
*---- GET ROW NUMBER
*
1400*
      IF FUNCT = "SCRN_EDIT" THEN RETURN
      IF NOT(MAINT.MODE) THEN RETURN
      ECD.NUM = 4
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.Y = ECD.RET.VALUE
      SORTED = 0
      RETURN
*
*---- GET FIELD TYPE
*
1500*
      IF FUNCT = "SCRN_EDIT" THEN RETURN
      ECD.NUM = 5
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF ECD.RET.VALUE # SCRN.TYP THEN
         IF ECD.RET.VALUE = 6 THEN SCRN.MAXL = ""
         SCRN.TYP = ECD.RET.VALUE
         GOSUB 10600
         GOSUB 10300
      END
      SCRN.TYP = ECD.RET.VALUE
      IF SCRN.TYP # 19 THEN SCRN.BITMAP = ""
      RETURN
*
*---- GET FIELD LENGTH
*
1600*
      IF FUNCT = "SCRN_EDIT" THEN RETURN
      IF SCRN.TYP = 6 AND NOT(MAINT.MODE) THEN RETURN
      IF SCRN.TYP = 8 THEN RETURN
      ECD.NUM = 6
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MAXL = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD JUSTIFICATION
*
1700*
      IF SCRN.TYP = 6 THEN RETURN
      IF SCRN.TYP = 8 THEN RETURN
      ECD.NUM = 7
      IF SCRN.JUSTIFY = "" THEN
         IF SCRN.TYP = 3 OR SCRN.TYP = 4 OR SCRN.TYP = 9 THEN
            ECD.DEFAULT = "R"
         END ELSE
            ECD.DEFAULT = "L"
         END
      END
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.JUSTIFY = ECD.RET.VALUE
      RETURN
*
*---- GET FILL CHARACTER
*
1800*
      ECD.NUM = 28
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.FILL.CHR = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD MASK CHARACTER
*
1900*
      ECD.NUM = 8
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MASK = ECD.RET.VALUE
      RETURN
*
*---- GET SCALING FACTOR
*
2000*
      IF SCRN.TYP # 4 THEN RETURN
      ECD.NUM = 9
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.SCALER = ECD.RET.VALUE
      RETURN
*
*---- GET OPTION/REQUIRED INDICATOR
*
2100*
      ECD.NUM = 11
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.O.R = ECD.RET.VALUE
      RETURN
*
*---- GET FIELD DEFAULT
*
2200*
      IF SCRN.O.R = "R" THEN RETURN
      ECD.NUM = 12
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.DEFAULT = ECD.RET.VALUE
      RETURN
*
*---- GET NUMBER OF LINES AND SPACING FOR MULTI-LINE FIELD
*
2300*
      ECD.NUM = 10
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MULTI.LN = ECD.RET.VALUE
      ECD.NUM = 31
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MULTI.SP = ECD.RET.VALUE
      RETURN
*
*---- GET XREF.DATA ID
*
2400*
      ECD.NUM = 39
      ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = ""
         SCRN.XREF = ECD.RET.VALUE
         GOSUB 2450
      CASE ECD.RET.VALUE = "NULL"
         SCRN.XREF = ECD.RET.VALUE
         GOSUB 2450
      CASE ECD.RET.VALUE = "??"
         SCRN.XREF = ECD.RET.VALUE
         GOSUB 2450
      CASE ECD.RET.VALUE = "???"
         SCRN.XREF = ECD.RET.VALUE
         GOSUB 2450
      CASE 1
         IF FILEINFO(XREF.DATA,0) = 0 THEN
            OPEN "","XREF.DATA" TO XREF.DATA ELSE
               ERRMSG = "CANNOT OPEN XREF.DATA FILE"
               GOSUB 95000
               GOTO 2400
            END
         END
         MATREAD XRFS.REC FROM XREF.DATA, ECD.RET.VALUE THEN
            IF ECD.RET.VALUE = SCRN.XREF THEN
               XREF_FUNCT = "XREF_MAINT"
            END ELSE
               SCRN.XREF = ECD.RET.VALUE
               XREF_FUNCT = "XREF"
            END
            XREF_STATUS = 0
            XREF_CHANGE = ""
            PREV.ECD.SCRN.NO = ECD.SCRN.NO
            LOCATE "SCREEN.BUILD.DATA.SUB" IN ECD.SCRN.NAME, 1 SETTING ECD.SCRN.NO THEN
               FC = INT.REF
               CALL SCREEN.BUILD.DATA.SUB(XREF_FUNCT,COL,ROW,XREF_STATUS,FC,MAT SCREEN,XREF_CHANGE)
               ECD.SCRN.NO = PREV.ECD.SCRN.NO
            END ELSE
               XREF_STATUS = 99
            END
            IF XREF_STATUS # 99 THEN
               ECD.ACTION = 3; CALL SCRN.EDIT
               OLD.VSTART.LINE = 0
               OLD.HMSG.START.LINE = 0
               GOSUB 12010
               GOSUB 12020
               GOSUB 12040
               IF XREF_STATUS THEN
                  GOTO 2400
               END ELSE
                  IF XREF_CHANGE # "" THEN CHANGED = XREF_CHANGE
               END
            END ELSE
               GOTO 2400
            END
         END ELSE
            ERRMSG = 'INVALID ITEM, TRY AGAIN'
            GOSUB 95000
            GOTO 2400
         END
      END CASE
      RETURN
2450*
      SCRN.XBR_XREF_FILE = ""
      SCRN.XBR_DATA_FILE = ""
      SCRN.XBR_SRCH_ID = ""
      SCRN.XBR_SRCH_HD = ""
      SCRN.XBR_VALUE1 = ""
      SCRN.XBR_VALUE2 = ""
      SCRN.XBR_VALUE3 = ""
      SCRN.XBR_VALUE4 = ""
      SCRN.XBR_VALUE5 = ""
      RETURN
*
*---- GET FIELD PROCESS TYPE
*
2500*
      ECD.NUM = 38
      IF ECD.PMSG # "" AND SCRN.FLDTYPE = "" THEN
         SCV.REC(ECD.NUM)<ESN> = "P"
      END
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF FUNCT = "SCRN_EDIT" AND ECD.RET.VALUE = "D" THEN GOTO 2500
      IF ECD.RET.VALUE = "M" THEN
         ERRMSG = ""
         FOR I = 1 TO BLD.FIELD.CNT UNTIL ERRMSG # ""
            BEGIN CASE
            CASE I = FC
            CASE ABLD.SCRN(I)<1,B.FLDTYPE> = ECD.RET.VALUE
               ERRMSG = "Duplicate FLDTYPE 'M' in field # ":BLD.EXT.REF<1,I>
            END CASE
         NEXT I
         IF ERRMSG # "" THEN
            GOSUB 95000
            GOTO 2500
         END
      END
      SCRN.FLDTYPE = ECD.RET.VALUE
      IF SCRN.FLDTYPE # "M" THEN SCRN.DATAFILE = ""
      IF SCRN.FLDTYPE = "D" THEN
         SCRN.TOOLBAR = ""
         SCRN.TOOLBAR.FILE = ""
      END
      RETURN
*
*---- GET MINIMUM FIELD LENGTH
*
2600*
      ECD.NUM = 13
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.MINL = ECD.RET.VALUE
      RETURN
*
*---- GET MINIMUM VALUE
*
2700*
      ECD.NUM = 14
      ECD.MAXL = SCRN.MAXL
      IF ECD.MAXL > 18 THEN ECD.MAXL = 18
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF SCRN.TYP = 6 THEN
         IF ECD.RET.VALUE[1,4] # "DATE" THEN
            IVALUE = ICONV(ECD.RET.VALUE,"D")
            OVALUE = OCONV(IVALUE,"D2/")
            IF ECD.RET.VALUE # OVALUE THEN
               ERRMSG = "** INVALID DATE **"
               GOSUB 95000
               GOTO 2500
            END
            ECD.RET.VALUE = IVALUE
         END
      END
      SCRN.MINV = ECD.RET.VALUE
*      RETURN
*
*---- GET FIELD MAXIMUM VALUE
*
      ECD.NUM = 15
      ECD.MAXL = SCRN.MAXL
      IF ECD.MAXL > 18 THEN ECD.MAXL = 18
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF SCRN.TYP = 6 THEN
         IF ECD.RET.VALUE[1,4] # "DATE" THEN
            IVALUE = ICONV(ECD.RET.VALUE,"D")
            OVALUE = OCONV(IVALUE,"D2/")
            IF ECD.RET.VALUE # OVALUE THEN
               ERRMSG = "** INVALID DATE **"
               GOSUB 95000
               GOTO 2600
            END
            ECD.RET.VALUE = IVALUE
         END
      END
      SCRN.MAXV = ECD.RET.VALUE
      RETURN
*
*---- GET VALID ENTRIES
*
2800*
      ECD.NUM = 37; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.ORVALDAT = ECD.RET.VALUE
      DONE = 0
      VLINES = DCOUNT(SCV.REC(16)<ESN>,VM)
      IF VLINES = 0 THEN
         LOOP
            VOPTION = "A"
            VLN = VLINES + 1
            OLD.VLINES = VLINES
            GOSUB 2810
         WHILE VLINES > OLD.VLINES DO REPEAT
         VLN = VLINES
*     END ELSE
*        VLN = 1
      END
      GOSUB 12010
*
*---- VALDAT OPTION
2805*
      MORE = 1
      LOOP
         ECD.NUM = 34
         SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4 ; CALL SCRN.EDIT
         VOPTION = ECD.RET.VALUE
         BEGIN CASE
         CASE VOPTION = "END" OR VOPTION = "E" OR VOPTION = "" OR VOPTION = "e"
            TEMP.VALDAT = ''
            SCRN.VALDAT = ""
            SCRN.EXVALDAT = ""
            SCRN.VALDAT.TYPE = ""
            SCRN.VALDAT.DESC = ""
            FOR LNO = 1 TO VLINES
               SCRN.VALDAT<1,1,LNO> = SCV.REC(16)<ESN,LNO>
               SCRN.EXVALDAT<1,1,LNO> = SCV.REC(43)<ESN,LNO>
               IF SCV.REC(42)<ESN,LNO> # "" THEN
                  SCRN.VALDAT.TYPE<1,1,LNO> = SCV.REC(42)<ESN,LNO>
               END
               SCRN.VALDAT.DESC<1,1,LNO> = SCV.REC(41)<ESN,LNO>
            NEXT LNO
            IF SCRN.FLDTYPE = "P" OR SCRN.FLDTYPE = "MP" THEN
               GOSUB 8000
               BEGIN CASE
               CASE TBAR_REC = "ERROR"
                  IF SCRN.TOOLBAR # "" THEN
                  END
               CASE DUP_NAME # ""
                  BEGIN CASE
                  CASE SCRN.TOOLBAR = ""
                     SCRN.TOOLBAR = DUP_NAME
                     IF FIELD(SCRN.PCNAME,".",2) = "PMC" THEN
                        SCRN.TOOLBAR.FILE = ""
                     END ELSE
                        SCRN.TOOLBAR.FILE = "PMCBARS"
                     END
                  CASE SCRN.TOOLBAR # DUP_NAME
                  END CASE
               CASE SCRN.TOOLBAR = ""
                  SCRN.TOOLBAR = FIELD(SCRN.PCNAME,".",1):".":SCRN.EXT.REF
               END CASE
            END
            MORE = 0
         CASE VOPTION = "A"  OR VOPTION = "a"
            LOOP
               VLN = VLINES + 1
               OLD.VLINES = VLINES
               GOSUB 2808
               GOSUB 2810
            WHILE VLINES > OLD.VLINES DO REPEAT
            VLN = VLINES
            GOSUB 12010
         CASE VOPTION = "C" OR VOPTION = "c"
            GOSUB 18000
            IF LNO THEN
               VLN = LNO
               GOSUB 2810
            END
            GOSUB 12010
         CASE VOPTION = "D" OR VOPTION = "d"
            GOSUB 18000
            IF LNO THEN
               VLN = LNO
               GOSUB 2807
               IF VLN > 1 AND VLN > VLINES THEN VLN = VLN - 1
               IF VLN < 1 THEN VLN = 1
               OLD.VSTART.LINE = 0
            END
            GOSUB 12010
         CASE VOPTION = "I" OR VOPTION = "i"
            GOSUB 18000
            IF LNO THEN
               VLN = LNO
               LOOP
                  GOSUB 2808
                  OLD.VSTART.LINE = 0
                  GOSUB 12010
                  GOSUB 2810
               UNTIL ECD.RET.VALUE = "END" DO
                  VLN = VLN + 1
               REPEAT
               GOSUB 12010
            END
         CASE VOPTION = "S" OR VOPTION = "s"
            VLN = VSTART.LINE + VPAGE.SIZE
            IF VLN > VLINES THEN VLN = 1
            GOSUB 12010
         CASE VOPTION = "B" OR VOPTION = "b"
            IF SCRN.FLDTYPE = "P" OR SCRN.FLDTYPE = "MP" THEN
            FOR LNO = 1 TO VLINES
               IF SCV.REC(42)<ESN,LNO> = "" THEN
                  BEGIN CASE
                  CASE SCV.REC(16)<ESN,LNO> = "E"
                     SCV.REC(42)<ESN,LNO> = "EXIT"
                  CASE SCV.REC(16)<ESN,LNO> = "F"
                     SCV.REC(42)<ESN,LNO> = "FILE"
                  CASE SCV.REC(16)<ESN,LNO> = "S"
                     SCV.REC(42)<ESN,LNO> = "SCROLL"
                  CASE SCV.REC(16)<ESN,LNO> = "SR"
                     SCV.REC(42)<ESN,LNO> = "SCROLL REV"
                  CASE SCV.REC(16)<ESN,LNO> = "ST"
                     SCV.REC(42)<ESN,LNO> = "SCROLL TOP"
                  CASE SCV.REC(16)<ESN,LNO> = "SB"
                     SCV.REC(42)<ESN,LNO> = "SCROLL BOT"
                  CASE SCV.REC(16)<ESN,LNO> = "A"
                     SCV.REC(42)<ESN,LNO> = "ADD"
                  CASE SCV.REC(16)<ESN,LNO> = "C"
                     SCV.REC(42)<ESN,LNO> = "CHANGE"
                  CASE SCV.REC(16)<ESN,LNO> = "D"
                     SCV.REC(42)<ESN,LNO> = "DELETE"
                  CASE SCV.REC(16)<ESN,LNO> = "I"
                     SCV.REC(42)<ESN,LNO> = "INSERT"
                  END CASE
               END
            NEXT LNO
            OLD.VSTART.LINE = 0
            GOSUB 12010
            END
         CASE 1
            ERRMSG = "*** Invalid option ***" ; GOSUB 95000
         END CASE
      WHILE MORE = 1 DO REPEAT
      RETURN
*
*---- DELETE A LINE
*
2807*
      DEL SCV.REC(40)<ESN,VLN>
      DEL SCV.REC(16)<ESN,VLN>
      DEL SCV.REC(42)<ESN,VLN>
      DEL SCV.REC(43)<ESN,VLN>
      DEL SCV.REC(41)<ESN,VLN>
      VLINES = VLINES - 1
      RETURN
*
*---- INSERT A LINE
*
2808*
      INS "" BEFORE SCV.REC(40)<ESN,VLN>
      INS "" BEFORE SCV.REC(16)<ESN,VLN>
      INS "" BEFORE SCV.REC(42)<ESN,VLN>
      INS "" BEFORE SCV.REC(43)<ESN,VLN>
      INS "" BEFORE SCV.REC(41)<ESN,VLN>
      VLINES = VLINES + 1
      RETURN
*
*---- VALDAT MULTI ENTRY
2810*
      GOSUB 12010
      ECD.NUM = 40
      ECD.SUB.NUM = VLN
      SCV.REC(ECD.NUM)<ESN,VLN> = VLN
      ECD.ACTION = 5
      CALL SCRN.EDIT
      TEMP.VALDAT = ''
      TEMP.VALDAT<1> = SCV.REC(16)<ESN,VLN>
      TEMP.VALDAT<2> = SCV.REC(42)<ESN,VLN>
      TEMP.VALDAT<3> = SCV.REC(43)<ESN,VLN>
      TEMP.VALDAT<4> = SCV.REC(41)<ESN,VLN>
2820*
      ECD.NUM = 16
      ECD.SUB.NUM = VLN
      ECD.ACTION = 4
      CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2899
*
*---- VALDAT TYPE
*
2830*
      ECD.NUM = 42
      ECD.SUB.NUM = VLN
      IF SCRN.FLDTYPE = "P" OR SCRN.FLDTYPE = "MP" THEN
         ECD.ACTION = 4
         CALL SCRN.EDIT
         ECD.RET.VALUE = TRIM(ECD.RET.VALUE)
         IF ECD.RET.VALUE = "END" THEN GOTO 2899
         IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0 THEN
            IF TOOLBAR_TYPES<2,ECD.RET.VALUE> # "" THEN
               ECD.NUM = 42
               ECD.SUB.NUM = VLN
               SCV.REC(ECD.NUM)<ESN,VLN> = TOOLBAR_TYPES<1,ECD.RET.VALUE>
               ECD.ACTION = 5
               CALL SCRN.EDIT
            END
         END
      END ELSE
         ECD.RET.VALUE = ""
         SCV.REC(ECD.NUM)<ESN,VLN> = ""
         ECD.ACTION = 5
         CALL SCRN.EDIT
      END
*
*---- VALDAT EXIT
      ECD.NUM = 43
      ECD.SUB.NUM = VLN
      IF SCRN.FLDTYPE = "P" OR SCRN.FLDTYPE = "MP" THEN
         ECD.ACTION = 4
         CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 2899
      END ELSE
         ECD.RET.VALUE = ""
         SCV.REC(ECD.NUM)<ESN,VLN> = ""
         ECD.ACTION = 5
         CALL SCRN.EDIT
      END
*
*---- VALDAT DESCRIPTION
      ECD.NUM = 41
      ECD.SUB.NUM = VLN
      ECD.ACTION = 4
      CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2899
*
2899*
      IF ECD.RET.VALUE = "END" THEN
         SCV.REC(16)<ESN,VLN> = TEMP.VALDAT<1>
         SCV.REC(42)<ESN,VLN> = TEMP.VALDAT<2>
         SCV.REC(43)<ESN,VLN> = TEMP.VALDAT<3>
         SCV.REC(41)<ESN,VLN> = TEMP.VALDAT<4>
         OLD.VSTART.LINE = 0
         IF VOPTION = "A" OR VOPTION = "I" THEN GOSUB 2807
         IF VOPTION = "a" OR VOPTION = "i" THEN GOSUB 2807
      END
      VLINES = DCOUNT(SCV.REC(16)<ESN>,VM)
      RETURN
*
      RETURN
*
*---- Field Description
*
2900*
      ECD.NUM = 47
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         SCRN.FLD.DESC = ECD.RET.VALUE
      END
      RETURN
*
*---- GET FIELD PATTERN MATCH
*
3000*
      ECD.NUM = 17
      DONE = 0
*      FOR N = 1 TO 3 UNTIL DONE
      N = 1
      ECD.SUB.NUM = N
      ECD.DEFAULT = TEMP.PATRN(N)
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN ECD.RET.VALUE = ""
      IF ECD.RET.VALUE = "" AND TEMP.PATRN(N) = "" THEN
         DONE = 1
      END ELSE
         TEMP.PATRN(N) = ECD.RET.VALUE
      END
*      NEXT N
      SCRN.PATRN = ""
*      FOR N = 1 TO 3
      N = 1
      BEGIN CASE
      CASE TEMP.PATRN(N) = ""
      CASE SCRN.PATRN = ""
         SCRN.PATRN = TEMP.PATRN(N)
      CASE 1
         SCRN.PATRN = SCRN.PATRN : "," : TEMP.PATRN(N)
      END CASE
      LV = LEN(SCRN.PATRN)
      IF SCRN.PATRN[LV,1] = "," THEN
         LV = LV - 1
         SCRN.PATRN = SCRN.PATRN[1,LV]
      END
*      NEXT N
      GOSUB 12020
      RETURN
*
*---- NOT USED
*
3100*
      RETURN
*
*---- NOT USED
*
3200*
      RETURN
*
*---- NOT USED
*
3300*
      RETURN
*
*---- NOT USED
*
3400*
      RETURN
*
*---- NOT USED
*
3500*
      RETURN
*
*---- NOT USED
*
3600*
      RETURN
*
*---- NOT USED
*
3700*
      RETURN
*
*---- NOT USED
*
3800*
      RETURN
*
*---- NOT USED
*
3900*
      RETURN
*
*---- NOT USED
*
4000*
      RETURN
*
*---- GET PROMPT MESSAGE
*
4100*
      ECD.NUM = 25
      ECD.MAXL = 79 - SCRN.MAXL
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.PMSG = ECD.RET.VALUE
      RETURN
*
*---- GET HELP MESSAGE
*
4200*
      LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
      IF LINES = 0 THEN
         LOOP
            OPTION = "A"
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 4210
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
      END ELSE
         LN = 1
      END
      GOSUB 12040
4205*
      MORE = 1
      LOOP
         ECD.NUM = 34
         SCV.REC(34)<ESN> = ""
         ECD.ACTION = 4 ; CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E" OR OPTION = "" OR OPTION = "e"
            MORE = 0
         CASE OPTION = "A"  OR OPTION = "a"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 4210
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 12040
         CASE OPTION = "C" OR OPTION = "c"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               GOSUB 4210
            END
         CASE OPTION = "D" OR OPTION = "d"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               SCRN.HMSG = DELETE(SCRN.HMSG,1,1,LN)
               LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.HMSG.START.LINE = 0
            END
            GOSUB 12040
         CASE OPTION = "I" OR OPTION = "i"
            GOSUB 19000
            IF LNO THEN
               LN = LNO
               INS "" BEFORE SCRN.HMSG<1,1,LN>
               LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.HMSG.START.LINE = 0
               GOSUB 12040
               GOSUB 4210
            END
         CASE OPTION = "S" OR OPTION = "s"
            LN = HMSG.START.LINE + HMSG.PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 12040
         CASE 1
            ERRMSG = "*** Invalid option ***" ; GOSUB 95000
         END CASE
      WHILE MORE = 1 DO REPEAT
      RETURN
4210*
      GOSUB 12040
      SLN = HMSG.BEGIN.PAGE + HMSG.LINE.SPACE * MOD(LN - 1,HMSG.PAGE.SIZE)
      P_X  = 11 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      X = 14 ; Y = SLN ; TYP = 1 ; MAXL = 66 ; O.R = "O" ; HMSG = "Enter help message" ;  DEFAULT = SCRN.HMSG<1,1,LN>
      CALL EDIT.SUB
      IF VALUE = "END" AND (OPTION = "A" OR OPTION = "I" OR OPTION = "a" OR OPTION = "i") THEN
         SCRN.HMSG = DELETE(SCRN.HMSG,1,1,LN)
         LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
         IF LN > 1 AND LN > LINES THEN LN = LN - 1
         IF LN < 1 THEN LN = 1
         OLD.HMSG.START.LINE = 0
         GOSUB 12040
         GOTO 4299
      END
      SCRN.HMSG<1,1,LN> = VALUE
      LINES = DCOUNT(SCRN.HMSG<1,1>,SVM)
4299  RETURN
*
*---- GET PSTACK
*
4300*
      ECD.NUM = 44
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      SCRN.PSTACK = ECD.RET.VALUE
      RETURN
* TOOLBAR ^
*
*---- GET USERDATA
*
4400*
      ECD.NUM = 45
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      ERRMSG = ""
      BEGIN CASE
      CASE ECD.RET.VALUE = ""
      CASE ECD.RET.VALUE = "^VALUE^"
      CASE ECD.RET.VALUE = "^IMAGE^"
         IF SCRN.TYP # 19 THEN GOTO 4400
      CASE NOT(NUM(ECD.RET.VALUE))
         FOR I = 1 TO BLD.FIELD.CNT UNTIL ERRMSG # ""
            BEGIN CASE
            CASE I = FC
            CASE ABLD.SCRN(I)<1,B.USERDATA> = ECD.RET.VALUE
               ERRMSG = "Duplicate user_data in field # ":BLD.EXT.REF<1,I>
            END CASE
         NEXT I
      CASE NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0
         FOR I = 1 TO BLD.FIELD.CNT UNTIL ERRMSG # ""
            BEGIN CASE
            CASE I = FC
            CASE ABLD.SCRN(I)<1,B.USERDATA> = ECD.RET.VALUE
               ERRMSG = "Duplicate user_data in field # ":BLD.EXT.REF<1,I>
            END CASE
         NEXT I
      CASE 1
         GOTO 4400
      END CASE
      IF ERRMSG # "" THEN
         GOSUB 95000
         GOTO 4400
      END
      SCRN.USERDATA = ECD.RET.VALUE
      RETURN
* TOOLBAR v
* TOOLBAR ^
8000*
      TBAR_REC = "ERROR"
      DUP_NAME = ""
      BEGIN CASE
      CASE SCRN.PMSG = ""
      CASE SCRN.VALDAT = ""
      CASE SCRN.VALDAT.TYPE = ""
      CASE SCRN.FLDTYPE # "P" AND SCRN.FLDTYPE # "MP"
      CASE 1
         VFND = 1
         VALDAT.VALUE = CHANGE(SCRN.VALDAT,",",SVM)
         CALL SCREEN.BUILD.BAR.SUB(VFND,VALDAT.VALUE,SCRN.VALDAT.TYPE,SCRN.VALDAT.DESC,TBAR_REC,DUP_NAME)
      END CASE
      RETURN
*
*---- DETERMINE INTERNAL AND EXTERNAL REFERENCE NUMBERS
*
10100*
      INT.REF = 0
      FOR FLD.PTR = START.REF TO BLD.FIELD.CNT WHILE INT.REF = 0
         IF COL = ABLD.SCRN(FLD.PTR)<1,B.X> AND ROW = ABLD.SCRN(FLD.PTR)<1,B.Y> THEN
            INT.REF = FLD.PTR
         END
      NEXT FLD.PTR
      RETURN
*
*---- EXTRACT FIELD ATTRIBUTES
*
10200*
      SCRN.TYP = ABLD.SCRN(FC)<1,B.TYP>
      SCRN.X = ABLD.SCRN(FC)<1,B.X>
      SCRN.Y = ABLD.SCRN(FC)<1,B.Y>
      SCRN.MAXL = ABLD.SCRN(FC)<1,B.MAXL>
      SCRN.JUSTIFY = ABLD.SCRN(FC)<1,B.JUSTIFY>
      SCRN.SCALER = ABLD.SCRN(FC)<1,B.SCALER>
      SCRN.MASK = ABLD.SCRN(FC)<1,B.MASK>
      SCRN.MULTI.LN = ABLD.SCRN(FC)<1,B.MULTI.LN>
      SCRN.O.R = ABLD.SCRN(FC)<1,B.O.R>
      SCRN.DEFAULT = ABLD.SCRN(FC)<1,B.DEFAULT>
      SCRN.MINL = ABLD.SCRN(FC)<1,B.MINL>
      SCRN.MINV = ABLD.SCRN(FC)<1,B.MINV>
      SCRN.MAXV = ABLD.SCRN(FC)<1,B.MAXV>
      SCRN.VALDAT = CHANGE(ABLD.SCRN(FC)<1,B.VALDAT>,",",SVM)
      SCRN.PATRN = ABLD.SCRN(FC)<1,B.PATRN>
      SCRN.BLINK = ABLD.SCRN(FC)<1,B.BLINK>
      SCRN.BLANK = ABLD.SCRN(FC)<1,B.BLANK>
      SCRN.REVERSE = ABLD.SCRN(FC)<1,B.REVERSE>
      SCRN.EMODE = ABLD.SCRN(FC)<1,B.EMODE>
      SCRN.EX = ABLD.SCRN(FC)<1,B.EX>
      SCRN.EY = ABLD.SCRN(FC)<1,B.EY>
      SCRN.PMSG = ABLD.SCRN(FC)<1,B.PMSG>
      SCRN.AUTO.RTN = ABLD.SCRN(FC)<1,B.AUTO.RTN>
      SCRN.FILL.CHR = ABLD.SCRN(FC)<1,B.FILL.CHR>
      SCRN.MULTI.SP = ABLD.SCRN(FC)<1,B.MULTI.SP>
      SCRN.ORVALDAT = ABLD.SCRN(FC)<1,B.ORVALDAT>
      SCRN.INVALCHR = ABLD.SCRN(FC)<1,B.INVALCHR>
      SCRN.EXT.REF = BLD.EXT.REF<1,FC>
      SCRN.FIELD.NAME = BLD.FIELD.NAME<1,SCRN.EXT.REF>
      SCRN.HMSG = BLD.HMSG<1,SCRN.EXT.REF>
      SCRN.SORT.ID = BLD.SORT.ID<1,FC>
      PREV.EXT.REF = SCRN.EXT.REF
      IF ORIG.EXT.REF = "" THEN ORIG.EXT.REF = SCRN.EXT.REF
      SCRN.FLDTYPE = ABLD.SCRN(FC)<1,B.FLDTYPE>
      SCRN.XREF = ABLD.SCRN(FC)<1,B.XREF>
      SCRN.FLD.DESC = ABLD.SCRN(FC)<1,B.FLD.DESC>
*
      VLINES = DCOUNT(SCRN.VALDAT<1,1>,SVM)
      LOCATE SCRN.EXT.REF IN VBSR_FLD<1>,1 SETTING VFND ELSE VFND = 0
      FOR VLN = 1 TO VLINES
         SCRN.EXVALDAT<1,1,VLN> = ABLD.SCRN(FC)<1,B.EXVALDAT,VLN>
         IF VFND THEN
            IF VBSR_TYPE<1,VFND,VLN> # "" THEN SCRN.VALDAT.TYPE<1,1,VLN> = VBSR_TYPE<1,VFND,VLN>
            SCRN.VALDAT.DESC<1,1,VLN> = VBSR_DESC<1,VFND,VLN>
         END
      NEXT VLN
* TOOLBAR ^
      SCRN.USERDATA = ABLD.SCRN(FC)<1,B.USERDATA>
      SCRN.PSTACK = ABLD.SCRN(FC)<1,B.PSTACK>
      SCRN.BITMAP = ABLD.SCRN(FC)<1,B.BITMAP>
      SCRN.DATAFILE = ABLD.SCRN(FC)<1,B.DATAFILE>
      SCRN.PCNAME = BLD.PCNAME
      LOCATE BLD.EXT.REF<1,FC> IN BMSR_FLD<1>,1 SETTING BFND THEN
         SCRN.TOOLBAR = BMSR_NAME<1,BFND>
         SCRN.TOOLBAR.FILE = BMSR_FILE<1,BFND>
      END ELSE
         SCRN.TOOLBAR = ""
         SCRN.TOOLBAR.FILE = ""
      END
* TOOLBAR v
      SCRN.XBR_XREF_FILE = XBR_XREF_FILE<FC>
      SCRN.XBR_DATA_FILE = XBR_DATA_FILE<FC>
      SCRN.XBR_SRCH_ID = XBR_SRCH_ID<FC>
      SCRN.XBR_SRCH_HD = XBR_SRCH_HD<FC>
      SCRN.XBR_VALUE1 = XBR_VALUE1<FC>
      SCRN.XBR_VALUE2 = XBR_VALUE2<FC>
      SCRN.XBR_VALUE3 = XBR_VALUE3<FC>
      SCRN.XBR_VALUE4 = XBR_VALUE4<FC>
      SCRN.XBR_VALUE5 = XBR_VALUE5<FC>
      BEGIN CASE
      CASE SCRN.PMSG = ""
      CASE SCRN.VALDAT.TYPE # ""
      CASE 1
         FDEF = ABLD.SCRN(FC)
         CALL SCRN_BLD_VAL (FDEF, SCRN_VTYP, SCRN_TBAR, ERRORS)
         IF FDEF<1,B.VALDAT> # "" THEN
            SCRN.VALDAT = CHANGE(FDEF<1,B.VALDAT>,",",SVM)
            VLINES = DCOUNT(SCRN.VALDAT<1,1>,SVM)
            FOR VLN = 1 TO VLINES
               SCRN.EXVALDAT<1,1,VLN> = ""
               SCRN.VALDAT.TYPE<1,1,VLN> = SCRN_VTYP<1,VLN>
               SCRN.VALDAT.DESC<1,1,VLN> = ""
            NEXT VLN
            IF SCRN.TOOLBAR = "" AND SCRN_TBAR # "" THEN
               SCRN.TOOLBAR = SCRN_TBAR
               IF FIELD(SCRN.PCNAME,".",2) = "PMC" THEN
                  SCRN.TOOLBAR.FILE = ""
               END ELSE
                  SCRN.TOOLBAR.FILE = "PMCBARS"
               END
            END
         END
      END CASE
      RETURN
*
*---- DISPLAY FIELD ATTRIBUTES
*
10300*
      FOR I = 1 TO SCV.REC.SIZE
         SCV.REC(I)<ESN> = ""
      NEXT I
      SCV.REC(1)<ESN> = SCRN.EXT.REF
      SCV.REC(2)<ESN> = SCRN.FIELD.NAME
      SCV.REC(33)<ESN> = SCRN.SORT.ID
      SCV.REC(3)<ESN> = SCRN.X
      SCV.REC(4)<ESN> = SCRN.Y
*
      SCV.REC(5)<ESN> = SCRN.TYP
      SCV.REC(6)<ESN> = SCRN.MAXL
      SCV.REC(7)<ESN> = SCRN.JUSTIFY
      SCV.REC(28)<ESN> = SCRN.FILL.CHR
      SCV.REC(8)<ESN> = SCRN.MASK
      SCV.REC(9)<ESN> = SCRN.SCALER
      SCV.REC(11)<ESN> = SCRN.O.R
      SCV.REC(12)<ESN> = SCRN.DEFAULT
      SCV.REC(10)<ESN> = SCRN.MULTI.LN
      SCV.REC(31)<ESN> = SCRN.MULTI.SP
*
      SCV.REC(13)<ESN> = SCRN.MINL
      BEGIN CASE
      CASE SCRN.TYP = 6 AND SCRN.MINV # "" AND SCRN.MINV # "DATE"
         SCV.REC(14)<ESN> = OCONV(SCRN.MINV,"D2/")
      CASE SCRN.TYP = 4 AND NUM(SCRN.MINV) AND NUM(SCRN.SCALER)
         CONV = 'MD':SCRN.SCALER+0
         SCV.REC(14)<ESN> = OCONV(SCRN.MINV,CONV)
      CASE SCRN.TYP = 10 AND SCRN.MINV # "" AND SCRN.MINV # "TIME"
         SCV.REC(14)<ESN> = OCONV(SCRN.MINV, "MTH")
      CASE 1
         SCV.REC(14)<ESN> = SCRN.MINV
      END CASE
      BEGIN CASE
      CASE SCRN.TYP = 6 AND SCRN.MAXV # "" AND SCRN.MAXV # "DATE"
         SCV.REC(15)<ESN> = OCONV(SCRN.MAXV,"D2/")
      CASE SCRN.TYP = 4 AND NUM(SCRN.MAXV) AND NUM(SCRN.SCALER)
         CONV = 'MD':SCRN.SCALER+0
         SCV.REC(15)<ESN> = OCONV(SCRN.MAXV,CONV)
      CASE SCRN.TYP = 10 AND SCRN.MAXV # "" AND SCRN.MAXV # "TIME"
         SCV.REC(15)<ESN> = OCONV(SCRN.MINV, "MTH")
      CASE 1
         SCV.REC(15)<ESN> = SCRN.MAXV
      END CASE
*
      SCV.REC(25)<ESN> = SCRN.PMSG
      SCV.REC(38)<ESN> = SCRN.FLDTYPE
      SCV.REC(39)<ESN> = SCRN.XREF
*
      SCV.REC(37)<ESN> = SCRN.ORVALDAT
*
* TOOLBAR ^
      SCV.REC(44)<ESN> = SCRN.PSTACK
      SCV.REC(45)<ESN> = SCRN.USERDATA
* TOOLBAR v
      VLINES = DCOUNT(SCRN.VALDAT<1,1>,SVM)
      FOR LNO = 1 TO VLINES
         SCV.REC(16)<ESN,LNO> = SCRN.VALDAT<1,1,LNO>
         SCV.REC(43)<ESN,LNO> = SCRN.EXVALDAT<1,1,LNO>
         SCV.REC(42)<ESN,LNO> = SCRN.VALDAT.TYPE<1,1,LNO>
         SCV.REC(41)<ESN,LNO> = SCRN.VALDAT.DESC<1,1,LNO>
      NEXT LNO
      SCV.REC(47)<ESN> = SCRN.FLD.DESC
      ECD.ACTION = 3; CALL SCRN.EDIT
*
      RETURN
*
*----- RESTORE FIELD ATTRIBUTES
10400*
      ABLD.SCRN(FC) = ""
      ABLD.SCRN(FC)<1,B.TYP> = SCRN.TYP
      ABLD.SCRN(FC)<1,B.X> = SCRN.X
      ABLD.SCRN(FC)<1,B.Y> = SCRN.Y
      ABLD.SCRN(FC)<1,B.MAXL> = SCRN.MAXL
      ABLD.SCRN(FC)<1,B.JUSTIFY> = SCRN.JUSTIFY
      ABLD.SCRN(FC)<1,B.SCALER> = SCRN.SCALER
      ABLD.SCRN(FC)<1,B.MASK> = SCRN.MASK
      ABLD.SCRN(FC)<1,B.MULTI.LN> = SCRN.MULTI.LN
      ABLD.SCRN(FC)<1,B.O.R> = SCRN.O.R
      ABLD.SCRN(FC)<1,B.DEFAULT> = SCRN.DEFAULT
      ABLD.SCRN(FC)<1,B.MINL> = SCRN.MINL
      ABLD.SCRN(FC)<1,B.MINV> = SCRN.MINV
      ABLD.SCRN(FC)<1,B.MAXV> = SCRN.MAXV
      ABLD.SCRN(FC)<1,B.VALDAT> = CHANGE(SCRN.VALDAT,SVM,",")
      ABLD.SCRN(FC)<1,B.PATRN> = SCRN.PATRN
      ABLD.SCRN(FC)<1,B.BLINK> = SCRN.BLINK
      ABLD.SCRN(FC)<1,B.BLANK> = SCRN.BLANK
      ABLD.SCRN(FC)<1,B.REVERSE> = SCRN.REVERSE
      ABLD.SCRN(FC)<1,B.EMODE> = SCRN.EMODE
      ABLD.SCRN(FC)<1,B.EX> = SCRN.EX
      ABLD.SCRN(FC)<1,B.EY> = SCRN.EY
      ABLD.SCRN(FC)<1,B.PMSG> = SCRN.PMSG
      ABLD.SCRN(FC)<1,B.AUTO.RTN> = SCRN.AUTO.RTN
      ABLD.SCRN(FC)<1,B.FILL.CHR> = SCRN.FILL.CHR
      ABLD.SCRN(FC)<1,B.MULTI.SP> = SCRN.MULTI.SP
      ABLD.SCRN(FC)<1,B.ORVALDAT> = SCRN.ORVALDAT
      ABLD.SCRN(FC)<1,B.INVALCHR> = SCRN.INVALCHR
      ABLD.SCRN(FC)<1,B.FLDTYPE> = SCRN.FLDTYPE
      ABLD.SCRN(FC)<1,B.XREF> = SCRN.XREF
      ABLD.SCRN(FC)<1,B.FLD.DESC> = SCRN.FLD.DESC
      IF SCRN.VALDAT # "" THEN
         LOCATE BLD.EXT.REF<1,FC> IN VBSR_FLD<1>,1 SETTING VFND ELSE
            VBSR_FLD<1,VFND> = BLD.EXT.REF<1,FC>
         END
         VBSR_TYPE<1,VFND> = ""
         VBSR_DESC<1,VFND> = ""
         VUPD = 0
         FOR LNO = VLINES TO 1 STEP - 1
            IF SCRN.VALDAT.DESC<1,1,LNO> # "" OR SCRN.VALDAT.TYPE<1,1,LNO> # "" OR VUPD THEN
               VBSR_TYPE<1,VFND,LNO> = SCRN.VALDAT.TYPE<1,1,LNO>
               VBSR_DESC<1,VFND,LNO> = SCRN.VALDAT.DESC<1,1,LNO>
               VUPD = 1
            END
            ABLD.SCRN(FC)<1,B.EXVALDAT,LNO> = SCRN.EXVALDAT<1,1,LNO>
         NEXT LNO
         IF NOT(VUPD) THEN
            DEL VBSR_FLD<1,VFND>
            DEL VBSR_TYPE<1,VFND>
            DEL VBSR_DESC<1,VFND>
         END
      END ELSE
         LOCATE BLD.EXT.REF<1,FC> IN VBSR_FLD<1>,1 SETTING VFND THEN
            DEL VBSR_FLD<1,VFND>
            DEL VBSR_TYPE<1,VFND>
            DEL VBSR_DESC<1,VFND>
         END
      END
* TOOLBAR ^
      ABLD.SCRN(FC)<1,B.USERDATA> = SCRN.USERDATA
      ABLD.SCRN(FC)<1,B.PSTACK> = SCRN.PSTACK
      ABLD.SCRN(FC)<1,B.BITMAP> = SCRN.BITMAP
      ABLD.SCRN(FC)<1,B.DATAFILE> = SCRN.DATAFILE
      IF SCRN.TOOLBAR # "" THEN
         LOCATE BLD.EXT.REF<1,FC> IN BMSR_FLD<1>,1 SETTING BFND ELSE
            BMSR_FLD<1,BFND> = BLD.EXT.REF<1,FC>
         END
         BMSR_NAME<1,BFND> = SCRN.TOOLBAR
         BMSR_FILE<1,BFND> = SCRN.TOOLBAR.FILE
      END ELSE
         LOCATE BLD.EXT.REF<1,FC> IN BMSR_FLD<1>,1 SETTING BFND THEN
            DEL BMSR_FLD<1,BFND>
            DEL BMSR_FILE<1,BFND>
            DEL BMSR_NAME<1,BFND>
         END
      END
* TOOLBAR v
      XBR_XREF_FILE<FC> = SCRN.XBR_XREF_FILE
      XBR_DATA_FILE<FC> = SCRN.XBR_DATA_FILE
      XBR_SRCH_ID<FC> = SCRN.XBR_SRCH_ID
      XBR_SRCH_HD<FC> = SCRN.XBR_SRCH_HD
      XBR_VALUE1<FC> = SCRN.XBR_VALUE1
      XBR_VALUE2<FC> = SCRN.XBR_VALUE2
      XBR_VALUE3<FC> = SCRN.XBR_VALUE3
      XBR_VALUE4<FC> = SCRN.XBR_VALUE4
      XBR_VALUE5<FC> = SCRN.XBR_VALUE5
*
*---- REMOVE TRAILING SUB-VALUE MARKS
      DONE = 0
      N2 = COUNT(ABLD.SCRN(FC)<1,B.EXVALDAT>,SVM) + 1
      FOR N = N2 TO 1 STEP -1 UNTIL DONE
         IF ABLD.SCRN(FC)<1,B.EXVALDAT,N> = "" THEN
            ABLD.SCRN(FC) = DELETE(ABLD.SCRN(FC),1,B.EXVALDAT,N)
         END ELSE
            DONE = 1
         END
      NEXT N
*
*---- REMOVE TRAILING VALUE MARKS
      DONE = 0
      N2 = COUNT(ABLD.SCRN(FC),VM) + 1
      FOR N = N2 TO 1 STEP -1 UNTIL DONE
         IF ABLD.SCRN(FC)<1,N> = "" THEN
            ABLD.SCRN(FC) = DELETE(ABLD.SCRN(FC),1,N,0)
         END ELSE
            DONE = 1
         END
      NEXT N
      BLD.EXT.REF<1,FC> = SCRN.EXT.REF
      BLD.SORT.ID<1,FC> = SCRN.SORT.ID
      IF SCRN.FIELD.NAME = "" AND BLD.FIELD.NAME<1,SCRN.EXT.REF> # "" THEN
         BLD.FIELD.NAME<1,SCRN.EXT.REF> = "*DELETE*"
      END ELSE
         BLD.FIELD.NAME<1,SCRN.EXT.REF> = SCRN.FIELD.NAME
      END
      IF SCRN.HMSG = "" AND BLD.HMSG<1,SCRN.EXT.REF> # "" THEN
         BLD.HMSG<1,SCRN.EXT.REF> = "*DELETE*"
      END ELSE
         BLD.HMSG<1,SCRN.EXT.REF> = SCRN.HMSG
      END
      IF PREV.EXT.REF # "" AND SCRN.EXT.REF # PREV.EXT.REF THEN
         BLD.FIELD.NAME<1,PREV.EXT.REF> = "*DELETE*"
         BLD.HMSG<1,PREV.EXT.REF> = "*DELETE*"
      END
      ORIG.EXT.REF = ""
      PREV.EXT.REF = ""
      RETURN
*
*---- GET NEXT AVAILABLE EXTERNAL REFERENCE NUMBER
*
10500*
      EXT.REF = 0
      FOR FLD.PTR = 1 TO BLD.FIELD.CNT
         IF BLD.EXT.REF<1,FLD.PTR> > EXT.REF THEN
            EXT.REF = BLD.EXT.REF<1,FLD.PTR>
         END
      NEXT FLD.PTR
      EXT.REF = EXT.REF + 1
      IF EXT.REF > 60 THEN
         FLD.PTR = 0
         FOR EXT.REF = 1 TO 60 UNTIL FLD.PTR > 0
            LOCATE EXT.REF IN BLD.EXT.REF<1>, 1 SETTING FLD.PTR THEN
               FLD.PTR = 0
            END ELSE
               FLD.PTR = EXT.REF
            END
         NEXT EXT.REF
         IF FLD.PTR > 0 THEN EXT.REF = FLD.PTR
      END
      RETURN
*
*---- FORCE PARAMETERS BASED ON TYPE
*
10600*
      IF SCRN.MASK = "" THEN SCRN.MASK = "#"
      IF SCRN.MULTI.LN = "" THEN SCRN.MULTI.LN = 1
      IF SCRN.MULTI.SP = "" THEN SCRN.MULTI.SP = 1
      IF SCRN.O.R = "" THEN SCRN.O.R = "R"
      IF SCRN.MINL = "" THEN SCRN.MINL = 1
      IF SCRN.BLINK = "" THEN SCRN.BLINK = "N"
      IF SCRN.BLANK = "" THEN SCRN.BLANK = "N"
      IF SCRN.REVERSE = "" THEN SCRN.REVERSE = "N"
      IF SCRN.AUTO.RTN = "" THEN SCRN.AUTO.RTN = "N"
      IF SCRN.EMODE = "" THEN SCRN.EMODE = 1
      IF SCRN.EX = "" THEN SCRN.EX = "0"
      IF SCRN.EY = "" THEN SCRN.EY = "23"
      BEGIN CASE
      CASE SCRN.TYP = 6
         IF SCRN.MAXL = "" THEN SCRN.MAXL = 8
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE SCRN.TYP = 8
         SCRN.MAXL = 1
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE SCRN.TYP = 10
         IF SCRN.MAXL = "" THEN SCRN.MAXL = 7
         SCRN.JUSTIFY = "L"
         SCRN.SCALER = ""
         SCRN.MINL = 1
      CASE 1
      END CASE
      RETURN
*
*---- REMOVE DEFAULT PARAMETERS
*
10700*
      IF SCRN.MASK = "#" THEN SCRN.MASK = ""
      IF SCRN.MULTI.LN = 1 THEN SCRN.MULTI.LN = ""
      IF SCRN.MULTI.SP = 1 THEN SCRN.MULTI.SP = ""
      IF SCRN.BLINK = "N" THEN SCRN.BLINK = ""
      IF SCRN.BLANK = "N" THEN SCRN.BLANK = ""
      IF SCRN.REVERSE = "N" THEN SCRN.REVERSE = ""
      IF SCRN.AUTO.RTN = "N" THEN SCRN.AUTO.RTN = ""
      IF SCRN.EMODE = 1 THEN SCRN.EMODE = ""
      IF SCRN.EX = "0" THEN SCRN.EX = ""
      IF SCRN.EY = "23" THEN SCRN.EY = ""
      RETURN
*
*---- CHECK FIELD SORT SEQUENCE
*
11000*
      PREV.Y = 0
      PREV.X = 0
      SORT.ITEM = ""
      SORT.FLD = 0
      SORT.EXT.REF = 0
      SORTED = 1
      FOR FLD = 1 TO BLD.FIELD.CNT UNTIL NOT(SORTED)
         CURR.Y = ABLD.SCRN(FLD)<1,B.Y>
         CURR.X = ABLD.SCRN(FLD)<1,B.X>
         BEGIN CASE
         CASE CURR.Y > PREV.Y
            PREV.Y = CURR.Y
            PREV.X = CURR.X
         CASE CURR.Y = PREV.Y AND CURR.X > PREV.X
            PREV.X = CURR.X
         CASE CURR.Y = PREV.Y AND CURR.X = PREV.X
            NULL
         CASE 1
            SORT.ITEM = ABLD.SCRN(FLD)
            SORT.Y = CURR.Y
            SORT.X = CURR.X
            SORT.FLD = FLD
            SORT.EXT.REF = BLD.EXT.REF<1,SORT.FLD>
            SORT.SORT.ID = BLD.SORT.ID<1,SORT.FLD>
            SORTED = 0
         END CASE
      NEXT FLD
      IF NOT(SORTED) THEN
         GOSUB 11500
         IF SORT.FLD # BLD.FIELD.CNT THEN GOTO 11000
      END
      RETURN
*
*---- SORT FIELD DEFINITION
*
11500*
      FOR FLD = SORT.FLD-1 TO 1 STEP -1 UNTIL SORTED
         CURR.Y = ABLD.SCRN(FLD)<1,B.Y>
         CURR.X = ABLD.SCRN(FLD)<1,B.X>
         BEGIN CASE
         CASE SORT.Y > CURR.Y
            SORTED = 1
         CASE SORT.Y = CURR.Y AND SORT.X > CURR.X
            SORTED = 1
         CASE 1
            ABLD.SCRN(FLD+1) = ABLD.SCRN(FLD)
            BLD.EXT.REF<1,FLD+1> = BLD.EXT.REF<1,FLD>
            BLD.SORT.ID<1,FLD+1> = BLD.SORT.ID<1,FLD>
            ABLD.SCRN(FLD) = SORT.ITEM
            BLD.EXT.REF<1,FLD> = SORT.EXT.REF
            BLD.SORT.ID<1,FLD> = SORT.SORT.ID
         END CASE
      NEXT FLD
      RETURN
*
*---- Scroll VALDAT
12010*
      VSTART.LINE = 1 + INT((VLN-1)/VPAGE.SIZE) * VPAGE.SIZE
      VLAST.LINE = VSTART.LINE + VPAGE.SIZE - 1
      IF VLAST.LINE > VLINES THEN VLAST.LINE = VLINES
      IF VSTART.LINE = OLD.VSTART.LINE THEN GOTO 12019
      OLD.VSTART.LINE = VSTART.LINE
      CNT = 1
      FOR N = VSTART.LINE TO VLAST.LINE
         ECD.NUM = 40
         SCV.REC(ECD.NUM)<ESN,N> = N
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 16
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 42
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 43
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         ECD.NUM = 41
         ECD.SUB.NUM = N
         ECD.ACTION = 5
         CALL SCRN.EDIT
         CNT = CNT + 1
      NEXT N
12015*
      FOR M = CNT TO VPAGE.SIZE
         SLN = VBEGIN.PAGE + VLINE.SPACE * MOD(M-1,VPAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
12019 RETURN
*
*---- SCROLL PATTERN MATCHING
12020*
*      MAT TEMP.PATRN = ""
*      T = 1
*      ACNT = DCOUNT(SCRN.PATRN,",")
*      FOR A = 1 TO ACNT
*      THIS.1 = FIELD(SCRN.PATRN,",",A)
*      IF A = 1 THEN
*         TEMP.PATRN(T) = THIS.1
*      END ELSE
*         IF (LEN(TEMP.PATRN(T)) + LEN(THIS.1) + 1) > 20 THEN
*            T = T + 1
*            TEMP.PATRN(T) = THIS.1
*         END ELSE
*            TEMP.PATRN(T) = TEMP.PATRN(T) : "," : THIS.1
*         END
*      END
*      NEXT A
      ECD.NUM = 17
*      FOR T = 1 TO 3
*      T = 1
*      ECD.SUB.NUM = T
*      SCV.REC(ECD.NUM)<ESN,ECD.SUB.NUM> = TEMP.PATRN(T)
      SCV.REC(ECD.NUM)<ESN> = SCRN.PATRN
      ECD.ACTION = 5; CALL SCRN.EDIT
*      NEXT T
      RETURN
12040*
      HMSG.START.LINE = 1 + INT((LN-1)/HMSG.PAGE.SIZE) * HMSG.PAGE.SIZE
      HMSG.LAST.LINE = HMSG.START.LINE + HMSG.PAGE.SIZE - 1
      IF HMSG.LAST.LINE > LINES THEN HMSG.LAST.LINE = LINES
      IF HMSG.START.LINE = OLD.HMSG.START.LINE THEN GOTO 12049
      OLD.HMSG.START.LINE = HMSG.START.LINE
      CNT = 1
      FOR N = HMSG.START.LINE TO HMSG.LAST.LINE
         SLN = HMSG.BEGIN.PAGE + HMSG.LINE.SPACE * MOD(N-1,HMSG.PAGE.SIZE)
         P_X  = 11 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
         P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:SCRN.HMSG<1,1,N> "L#66"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO HMSG.PAGE.SIZE
         SLN = HMSG.BEGIN.PAGE + HMSG.LINE.SPACE * MOD(M-1,HMSG.PAGE.SIZE)
         P_X  = 11 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
12049 RETURN
*
*---- LINE NUMBER PROMPT FOR VALDAT
18000*
      GOSUB 12010
      ECD.NUM = 46
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.MINV = OLD.VSTART.LINE
      ECD.MAXV = VLAST.LINE
      ECD.ACTION = 4
      CALL SCRN.EDIT
      LNO = ECD.RET.VALUE
      IF LNO = "" OR LNO = "END" THEN LNO = 0
      RETURN
*
*---- LINE NUMBER PROMPT FOR HMSG
19000*
      GOSUB 12040 ; X = 0 ; Y = 23 ; TYP = 3
      PMSG = "ENTER LINE NUMBER : "
      MINV = OLD.HMSG.START.LINE ; MAXV = HMSG.LAST.LINE
      O.R = "O" ; MAXL = 2
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LNO = VALUE
      IF LNO = "" OR LNO = "END" THEN LNO = 0
      RETURN
*---- Prompt for list box
20000*
      X = 0 ; Y = 23 ; TYP = 8
      PMSG = 'CREATE LIST BOX (Y/N) : '
*      "ENTER LINE NUMBER : "
      MINV = OLD.HMSG.START.LINE ; MAXV = HMSG.LAST.LINE
      O.R = "O" ; MAXL = 2
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LNO = VALUE
      IF LNO = "" OR LNO = "END" THEN LNO = 0
      RETURN
*
*--- CALLS FOR SYSCOM
*
95000*
91000*
      ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000*
      ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000*
      ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
      RETURN
   END
