   SUBROUTINE SCREEN.BUILD.HDR(SCREEN.NAME,SCREEN.DIMENSIONS,SCN_FNAME,SYS.SCREENS,ACTION)
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.SCREEN.BUILD
*COPY>CPYLIB>COM_BAR_MAINT_SCREEN
*COPY>CPYLIB>COM_VALDAT_BUILD_SCREEN
*********************************************************************
*
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - SCREEN.BUILD.HDR
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/24/84
*
* DESCRIPTION
*
* This program maintains a file of screen definitions. All fixed and
* data fields are defined. The data field definitions contain all
* information necessary to display and edit the data to be processed.
*
*T21177 diane 12/09/1996 * Enter PCNAME and FORM FILE PREFIX for GUI
*                          form.
*T21177 diane 12/02/1997 * Do not abort if cannot open form file
*T23579 rik 01/11/1998 * ADD SUBSYSTEMS 'SIS' & 'WTR'.
*T26418 ajibaly 02/06/2002 * ADD "SD" OPTION FOR SCREEN.DEF
*T26556 adelgado 05/16/2002 * Add 'RCV' into BASE.FORMS.
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>PCNAME_XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>VALDAT_BUILD_SCREEN
*COPY>CPYLIB>BAR_MAINT_SCREEN
*COPY>CPYLIB>XREF_BUILD_SCREEN
*
*
*---- DEFINE VARIABLES
*
   DIM FORM(24)
   DIM CLRS(24,2)
*
*---- INITIALIZATION
*
   MIN.CRT.ROW = 0
   MAX.CRT.ROW = 22
   MIN.CRT.COL = 0
   MAX.CRT.COL = 79
   MAX.WIDTH = MAX.CRT.COL - MIN.CRT.COL + 1
   SPACE.WIDTH = SPACE(MAX.WIDTH)
   FIRST.ROW = SCREEN.DIMENSIONS<1>
   LAST.ROW = SCREEN.DIMENSIONS<2>
   FIRST.COL = SCREEN.DIMENSIONS<3>
   LAST.COL = SCREEN.DIMENSIONS<4>
   CLR.R1 = SCREEN.DIMENSIONS<5>
   CLR.R2 = SCREEN.DIMENSIONS<6>
   CLR.C1 = SCREEN.DIMENSIONS<7>
   CLR.C2 = SCREEN.DIMENSIONS<8>
   MID.COL = INT((LAST.COL-FIRST.COL)/2) + FIRST.COL
   WIDTH = LAST.COL - FIRST.COL + 1
   ADR.CNT = 4
   COLNOS = ""
   COLNOS = COLNOS:"0....^....1....^....2....^....3....^...."
   COLNOS = COLNOS:"4....^....5....^....6....^....7....^...."
   COLNOS = COLNOS:"8....^....9....^....0....^....1....^...."
   COLNOS = COLNOS:"2....^....3....^....4....^....5....^...."
   DATA.ROW = ""
   DATA.COL1 = FIRST.COL
   DATA.COL2 = LAST.COL
   COL.REF.FLAG = 0
   ROW.REF.FLAG = 0
   MOD.ROWS = ""
   FIELD.NAME = ""
   HELP.MSG = ""
   GUI.PROCESSED = 0
   BLD.TUF.SCRN = ''
   MAX.FORM.SIZE = 55280
   BASE.FORMS = "M"
   BASE.FORMS<2> = "APS"
   BASE.FORMS<3> = "ARS"
   BASE.FORMS<4> = "FAS"
   BASE.FORMS<5> = "GLS"
   BASE.FORMS<6> = "ICS"
   BASE.FORMS<7> = "JCS"
   BASE.FORMS<8> = "JES"
   BASE.FORMS<9> = "JIS"
   BASE.FORMS<10> = "JKT"
   BASE.FORMS<11> = "NDC"
   BASE.FORMS<12> = "OPS"
   BASE.FORMS<13> = "PMC"
   BASE.FORMS<14> = "POS"
   BASE.FORMS<15> = "PR4"
   BASE.FORMS<16> = "PRS"
   BASE.FORMS<17> = "PSS"
   BASE.FORMS<18> = "QPL"
   BASE.FORMS<19> = "UTL"
   BASE.FORMS<20> = "CBA"
*T23549 v
   BASE.FORMS<21> = "SIS"
   BASE.FORMS<22> = "WTR"
*T23549 ^
   BASE.FORMS<23> = "POR"  ;*T24231
   BASE.FORMS<24> = "RCV"  ;*T26556
*
   TFILE = ""
*
*---- MAIN PROCESSING
*
100*
   PRINT CS:
   MAT FORM = SPACE.WIDTH
   OLD_XREF_NUM = ""
   MAT XBR_SCN = ""
   MATREADU ABLD.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*FLD" ELSE
      MAT ABLD.SCRN = ""
      MAT BMSR_REC = ""
      MAT VBSR_REC = ""
      PRINT CS:
      GOTO 150
   END
   MATREAD BMSR_REC FROM SYS.SCREENS, SCREEN.NAME:"*BAR" ELSE MAT BMSR_REC = ""
   MATREAD VBSR_REC FROM SYS.SCREENS, SCREEN.NAME:"_VAL" ELSE MAT VBSR_REC = ""
   FOR FLD = 1 TO BLD.FIELD.CNT
      EXT.REF = BLD.EXT.REF<1,FLD>
      READ FIELD.NAME FROM SYS.SCREENS, SCREEN.NAME:"*NAME":EXT.REF ELSE
         FIELD.NAME = ""
      END
      IF FIELD.NAME # "" THEN
         BLD.FIELD.NAME<1,EXT.REF> = FIELD.NAME
      END
      READ HELP.MSG FROM SYS.SCREENS, SCREEN.NAME:"*HMSG":EXT.REF ELSE
         HELP.MSG = ""
      END
      IF HELP.MSG # "" THEN
         BLD.HMSG<1,EXT.REF> = HELP.MSG
      END
      READ DUMMY FROM SYS.SCREENS, SCREEN.NAME:"_XRF":EXT.REF THEN
         INS EXT.REF BEFORE OLD_XREF_NUM<1>
         FOR DD = 1 TO XBR_SCN_SIZE
            XBR_SCN(DD)<FLD> = DUMMY<DD>
         NEXT DD
      END
   NEXT FLD
150*
   READU BLD.COMP.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*FRM" ELSE
      BLD.COMP.SCRN = ""
   END
   PRINT BLD.COMP.SCRN:
   READU BLD.DEF.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*DEF" THEN
      GOSUB 6100
   END ELSE
      GOSUB 6000
      BLD.DEF.SCRN = ""; DPTR = 0
      FOR ROW = FIRST.ROW TO LAST.ROW
         GOSUB 5100
      NEXT ROW
      GOSUB 5300
   END
   GOSUB 7000
   TFILE = FIELD(BLD.PCNAME,".",2):'FORMS'
   READ BLD.TUF.SCRN FROM SYS.SCREENS, SCREEN.NAME:"*TUF" THEN
      OPEN "",TFILE TO TUFORMS THEN
         TNAME = FIELD(BLD.PCNAME,".",1)
         READ DUMMY FROM TUFORMS, TNAME THEN
            DUMMY<1> = BLD.TUF.SCRN<1>
            IF DUMMY # BLD.TUF.SCRN THEN
               ERRMSG = "Modifications to form have been made outside of Screen Maintenance"
               GOSUB 95000
            END
         END
      END
   END
*
*---- GET USER REQUEST
*
1000*
   X = 0; Y = 23
   TYP = 1
   PMSG = "COMMAND ?"
   HMSG = "CR[r[,c]] DR[r] IR[r] AD[r[,c]] CD[r[,c]] DD[r[,c]] E F PC BAR"
   MINL = 1; MAXL = 8
   IF ACTION = "" THEN
      CALL EDIT.SUB
   END ELSE
      VALUE = ACTION
   END
   COMMAND = VALUE
   BEGIN CASE
      CASE COMMAND = "E" OR COMMAND = "e" OR COMMAND = "END" OR COMMAND = "end"
         RELEASE SYS.SCREENS, SCREEN.NAME:"*FLD"
         RELEASE SYS.SCREENS, SCREEN.NAME:"*FRM"
         RELEASE SYS.SCREENS, SCREEN.NAME:"*DEF"
         RELEASE SYS.SCREENS, SCREEN.NAME:"*TUF"
         GOTO 99999
*T26418v
      CASE COMMAND = "SD" OR COMMAND = "sd"
         PREV.ECD.SCRN.NO = ECD.SCRN.NO
         CALL SCREEN.DEF(SCREEN.NAME)
         ECD.SCRN.NO = PREV.ECD.SCRN.NO
         PRINT CS:
         PRINT BLD.COMP.SCRN:
         GOSUB 7000
*T26418^
      CASE COMMAND = "F" OR COMMAND = "f"
         IF MOD.ROWS # "" THEN GOSUB 5000
         SCRN.ID = SCREEN.NAME:"*FLD"
         IF BLD.EXT.REF = "" THEN
            DELETE SYS.SCREENS, SCREEN.NAME:"*FLD"
            DELETE SYS.SCREENS, SCREEN.NAME:"*BAR"
            DELETE SYS.SCREENS, SCREEN.NAME:"_VAL"
         END ELSE
            GOSUB 11000
            GOSUB 12000    ;* Update Gui Form
            MATWRITEU ABLD.SCRN ON SYS.SCREENS, SCREEN.NAME:"*FLD"
            IF BMSR_FLD = "" THEN
               DELETE SYS.SCREENS, SCREEN.NAME:"*BAR"
            END ELSE
               MATWRITE BMSR_REC ON SYS.SCREENS, SCREEN.NAME:"*BAR"
            END
            IF VBSR_FLD = "" THEN
               DELETE SYS.SCREENS, SCREEN.NAME:"_VAL"
            END ELSE
               GOSUB 13000
               MATWRITE VBSR_REC ON SYS.SCREENS, SCREEN.NAME:"_VAL"
            END
            WRITE BLD.TUF.SCRN ON SYS.SCREENS, SCREEN.NAME:"*TUF"
            IF LEN(BLD.TUF.SCRN) GT MAX.FORM.SIZE THEN
               ERRMSG = "Form has exceeded maximum size, Please revise screen"
               GOSUB 95000
            END
         END
         IF BLD.DEF.SCRN = "" THEN
            DELETE SYS.SCREENS, SCREEN.NAME:"*DEF"
            DELETE SYS.SCREENS, SCREEN.NAME:"*FRM"
            SCRN.ID = SCREEN.NAME:"*DCL"
            READU DUMMY FROM SYS.SCREENS, SCRN.ID THEN
               DELETE SYS.SCREENS, SCRN.ID
            END ELSE
               RELEASE SYS.SCREENS, SCRN.ID
            END
            SCRN.ID = SCREEN.NAME:"*CLR"
            READU DUMMY FROM SYS.SCREENS, SCRN.ID THEN
               DELETE SYS.SCREENS, SCRN.ID
            END ELSE
               RELEASE SYS.SCREENS, SCRN.ID
            END
            SCRN.ID = SCREEN.NAME:"*DIM"
            READU DUMMY FROM SYS.SCREENS, SCRN.ID THEN
               DELETE SYS.SCREENS, SCRN.ID
            END ELSE
               RELEASE SYS.SCREENS, SCRN.ID
            END
            IF NOT(GUI.PROCESSED) THEN
               DELETE SYS.SCREENS, SCREEN.NAME:"*TUF"
            END
         END ELSE
            GOSUB 5500
            WRITE BLD.DEF.SCRN ON SYS.SCREENS, SCREEN.NAME:"*DEF"
            WRITE BLD.COMP.SCRN ON SYS.SCREENS, SCREEN.NAME:"*FRM"
            WRITE BLD.DEF.CLR ON SYS.SCREENS, SCREEN.NAME:"*DCL"
            WRITE BLD.CLR.DATA ON SYS.SCREENS, SCREEN.NAME:"*CLR"
            WRITE SCREEN.DIMENSIONS ON SYS.SCREENS, SCREEN.NAME:"*DIM"
            IF NOT(GUI.PROCESSED) THEN
               GOSUB 12000
               WRITE BLD.TUF.SCRN ON SYS.SCREENS, SCREEN.NAME:"*TUF"
            END
         END
         FN.CNT = DCOUNT(BLD.FIELD.NAME,VM)
         FOR FN = 1 TO FN.CNT
            SCRN.ID = SCREEN.NAME:"*NAME":FN
            READU DUMMY FROM SYS.SCREENS, SCRN.ID ELSE NULL
            FIELD.NAME = BLD.FIELD.NAME<1,FN>
            BEGIN CASE
               CASE FIELD.NAME = ""
                  RELEASE SYS.SCREENS, SCRN.ID
               CASE FIELD.NAME = "*DELETE*"
                  DELETE SYS.SCREENS, SCRN.ID
               CASE 1
                  WRITE FIELD.NAME ON SYS.SCREENS, SCRN.ID
            END CASE
         NEXT FN
         HM.CNT = DCOUNT(BLD.HMSG,VM)
         FOR HM = 1 TO HM.CNT
            SCRN.ID = SCREEN.NAME:"*HMSG":HM
            READU DUMMY FROM SYS.SCREENS, SCRN.ID ELSE NULL
            HELP.MSG = BLD.HMSG<1,HM>
            BEGIN CASE
               CASE HELP.MSG = ""
                  RELEASE SYS.SCREENS, SCRN.ID
               CASE HELP.MSG = "*DELETE*"
                  DELETE SYS.SCREENS, SCRN.ID
               CASE 1
                  WRITE HELP.MSG ON SYS.SCREENS, SCRN.ID
            END CASE
         NEXT HM
         BLD.COMP.SCRN = ""
         BLD.CLR.DATA = ""
         BLD.HMSG = ""
         BLD.FIELD.NAME = ""
         IF BLD.EXT.REF # "" THEN
            GOSUB 11000
            MATWRITE ABLD.SCRN ON SYS.SCREENS, SCREEN.NAME:"*FLD"
         END
         XRF.CNT = DCOUNT(BLD.EXT.REF<1>,VM)
         FOR FLD = XRF.CNT TO 1 STEP - 1
            BEGIN CASE
               CASE ABLD.SCRN(FLD)<1,B.XREF> = ""
               CASE ABLD.SCRN(FLD)<1,B.XREF> = "??"
               CASE ABLD.SCRN(FLD)<1,B.XREF> = "???"
               CASE ABLD.SCRN(FLD)<1,B.XREF> = "NULL"
               CASE 1
                  EXT.REF = BLD.EXT.REF<1,FLD>
                  SCRN.ID = SCREEN.NAME:"_XRF":EXT.REF
                  DUMMY = ""
                  READU DUMMY FROM SYS.SCREENS, SCRN.ID THEN
                     DUMMY = ""
                  END
                  FOR DD = 1 TO XBR_SCN_SIZE
                     DUMMY<DD> = XBR_SCN(DD)<FLD>
                  NEXT DD
                  WRITE DUMMY ON SYS.SCREENS, SCRN.ID
                  LOCATE EXT.REF IN OLD_XREF_NUM, 1 SETTING DD THEN
                     DEL OLD_XREF_NUM<DD>
                  END
            END CASE
         NEXT FLD
         XRF.CNT = DCOUNT(OLD_XREF_NUM,AM)
         FOR DD = XRF.CNT TO 1 STEP - 1
            SCRN.ID = SCREEN.NAME:"_XRF":OLD_XREF_NUM<DD>
            READU DUMMY FROM SYS.SCREENS, SCRN.ID ELSE DUMMY = ""
            DELETE SYS.SCREENS, SCRN.ID
         NEXT DD
         GOTO 99999
      CASE COMMAND[1,2] = "IR" OR COMMAND[1,2] = "ir"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW+1
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         INSERT.ROW = ROW
         FOR XROW = ROW TO LAST.ROW
            MOD.ROWS<-1> = XROW
         NEXT XROW
         GOSUB 3000
      CASE COMMAND[1,2] = "CR" OR COMMAND[1,2] = "cr"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         GOSUB 1200
         IF COL = "" THEN GOTO 1000
         GOSUB 2000
      CASE COMMAND[1,2] = "DR" OR COMMAND[1,2] = "dr"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         DELETE.ROW = ROW
         FOR XROW = ROW TO LAST.ROW
            MOD.ROWS<-1> = XROW
         NEXT XROW
         GOSUB 4000
      CASE COMMAND[1,2] = "AD" OR COMMAND[1,2] = "ad"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         GOSUB 1200
         IF COL = "" THEN GOTO 1000
         GOSUB 8000
         IF FOUND AND ABLD.SCRN(INT.REF)<1,B.PMSG> = "" THEN
            ERRMSG = "Field overlap"
            GOSUB 95000
            GOSUB 6500
         END ELSE
            FUNCT = "A"
            ECD.SCRN.NO = ECD.SCRN.NO + 1
            CALL SCREEN.BUILD.DATA (FUNCT, COL, ROW, ERROR.STATUS, MAT ABLD.SCRN, MAT BMSR_REC, MAT VBSR_REC, MAT XBR_SCN)
            ECD.SCRN.NO = ECD.SCRN.NO - 1
            PRINT CS:
            IF MOD.ROWS # "" THEN GOSUB 5000
            PRINT BLD.COMP.SCRN:
            GOSUB 7000
         END
      CASE COMMAND[1,2] = "CD" OR COMMAND[1,2] = "cd"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         GOSUB 1200
         IF COL = "" THEN GOTO 1000
         GOSUB 8000
         IF FOUND THEN
            FUNCT = "C"
            ECD.SCRN.NO = ECD.SCRN.NO + 1
            CALL SCREEN.BUILD.DATA (FUNCT, COL, ROW, ERROR.STATUS, MAT ABLD.SCRN, MAT BMSR_REC, MAT VBSR_REC, MAT XBR_SCN)
            ECD.SCRN.NO = ECD.SCRN.NO - 1
            PRINT CS:
            IF MOD.ROWS # "" THEN GOSUB 5000
            PRINT BLD.COMP.SCRN:
            GOSUB 7000
         END ELSE
            ERRMSG = "Invalid field reference"
            GOSUB 95000
            GOSUB 6500
         END
      CASE COMMAND[1,2] = "DD" OR COMMAND[1,2] = "dd"
         MINROW = FIRST.ROW; MAXROW = LAST.ROW
         GOSUB 1100
         IF ROW = "" THEN GOTO 1000
         GOSUB 1200
         IF COL = "" THEN GOTO 1000
         GOSUB 8000
         IF FOUND2 THEN GOSUB 8500
         IF FOUND THEN
            GOSUB 9000
            DATA.ROW = ROW
            DATA.COL1 = FIRST.COL
            DATA.COL2 = LAST.COL
            GOSUB 7000
            GOSUB 6500
         END ELSE
            ERRMSG = "Invalid field reference"
            GOSUB 95000
            GOSUB 6500
         END
      CASE COMMAND = "PC"
         ERRMSG = 'PCNAME IS (':FIELD(BLD.PCNAME,".",1):')'
         GOSUB 95000
      CASE COMMAND = "BAR"
         PREV.ECD.SCRN.NO = ECD.SCRN.NO
         BMSR_ERROR = ""
         CALL SCREEN.BUILD.BAR (SCN_FNAME, SCREEN.NAME, BLD.PCNAME, BMSR_ERROR)
         IF BMSR_ERROR # 99 THEN
            ECD.SCRN.NO = PREV.ECD.SCRN.NO
            PRINT CS:
            PRINT BLD.COMP.SCRN:
            GOSUB 7000
         END
      CASE 1
         ACTION = ""
   END CASE
   GOTO 1000
*
*---- GET ROW NUMBER
*
1100*
   IN.ROW = FIELD(COMMAND[3,99],",",1)
   BEGIN CASE
      CASE IN.ROW # "" AND IN.ROW >= MINROW AND IN.ROW <= MAXROW
         ROW = IN.ROW
      CASE 1
         SAVE.COL.DATA = ""
         FOR ROW = FIRST.ROW TO LAST.ROW
            SAVE.COL.DATA<1,ROW+1> = FORM(ROW+1)[MID.COL,4]
            PRINT @(MID.COL-1,ROW):" ":ROW "R#2":" ":
         NEXT ROW
         ROW.REF.FLAG = 1
         X = 0; Y = 23
         PMSG = CL:"ROW?"
         TYP = 3
         MINL = 1; MAXL = 2
         MINV = MINROW; MAXV = MAXROW
         O.R = "O"
         CALL EDIT.SUB
         ROW = VALUE
         GOSUB 6400
         IF ROW = "END" THEN ROW = ""
   END CASE
   RETURN
*
*---- GET COLUMN NUMBER
*
1200*
   IN.COL = FIELD(COMMAND[3,99],",",2)
   BEGIN CASE
      CASE IN.COL # "" AND IN.COL >= FIRST.COL AND IN.COL <= LAST.COL
         COL = IN.COL
      CASE 1
         IF ROW = MAX.CRT.ROW THEN
            PRINT @(0,ROW-1):CL:SPACE(FIRST.COL):COLNOS[FIRST.COL+1,WIDTH]:
         END ELSE
            PRINT @(0,ROW+1):CL:SPACE(FIRST.COL):COLNOS[FIRST.COL+1,WIDTH]:
         END
         COL.REF.FLAG = 1
         X = 0; Y = 23
         PMSG = CL:"COLUMN?"
         TYP = 3
         MINL = 1; MAXL = 2
         MINV = FIRST.COL; MAXV = LAST.COL
         O.R = "O"
         CALL EDIT.SUB
         COL = VALUE
         IF COL = "" OR COL = "END" THEN
            GOSUB 6500
            COL = ""
         END
   END CASE
   RETURN
*
*---- REPLACE SCREEN LINE
*
2000*
   OLD.LINE = FORM(ROW+1)
   PRINT @(COL,ROW):
   SZ = WIDTH - COL + FIRST.COL
   INPUT IN.DATA,SZ _:
   IF LEN(IN.DATA) > 0 THEN
      LOCATE ROW IN MOD.ROWS,1 BY "AR" SETTING PTR ELSE
         INS ROW BEFORE MOD.ROWS<PTR>
      END
   END
   NEXT.COL = COL + LEN(IN.DATA)
   BEGIN CASE
      CASE COL = 0 AND OLD.LINE = STR(OLD.LINE[1,1],WIDTH) AND (IN.DATA = " " OR IN.DATA = "-" OR IN.DATA = "=")
         FORM(ROW+1) = STR(IN.DATA,WIDTH)
      CASE COL = 0
         FORM(ROW+1) = IN.DATA:OLD.LINE[NEXT.COL+1,999]
      CASE 1
         FORM(ROW+1) = OLD.LINE[1,COL]:IN.DATA:OLD.LINE[NEXT.COL+1,999]
   END CASE
   PRINT @(COL,ROW):CL:FORM(ROW+1)[COL+1,999]:
   DATA.ROW = ROW
   GOSUB 7000
   GOSUB 6500
   RETURN
*
*---- INSERT NEW LINE
*
3000*
   FOR N = LAST.ROW+1 TO ROW+1 STEP -1
      FORM(N+1) = FORM(N)
   NEXT N
   FORM(ROW+1) = SPACE.WIDTH
   GOSUB 5000
   PRINT BLD.COMP.SCRN:
   FOR FLD = 1 TO BLD.FIELD.CNT
      FY = ABLD.SCRN(FLD)<1,B.Y>
      IF FY >= INSERT.ROW THEN
         ABLD.SCRN(FLD)<1,B.Y> = FY + 1
      END
   NEXT FLD
   GOSUB 7000
   RETURN
*
*---- DELETE OLD LINE
*
4000*
   FOR FLD = 1 TO BLD.FIELD.CNT
      FY = ABLD.SCRN(FLD)<1,B.Y>
      ML = ABLD.SCRN(FLD)<1,B.MULTI.LN>
      IF ML = "" THEN ML = 1
      LS = ABLD.SCRN(FLD)<1,B.MULTI.SP>
      IF LS = "" THEN LS = 1
      IF DELETE.ROW >= FY AND DELETE.ROW <= (FY+(ML-1)*LS) THEN
         ERRMSG = "Data fields must be deleted before row deletion..."
         GOSUB 95000
         GOTO 4090
      END
   NEXT FLD
   FOR N = ROW TO LAST.ROW-1
      FORM(N+1) = FORM(N+2)
   NEXT N
   FORM(LAST.ROW+1) = SPACE.WIDTH
   GOSUB 5000
   PRINT BLD.COMP.SCRN:
   FOR FLD = 1 TO BLD.FIELD.CNT
      IF ABLD.SCRN(FLD)<1,B.Y> > DELETE.ROW THEN
         ABLD.SCRN(FLD)<1,B.Y> = ABLD.SCRN(FLD)<1,B.Y> - 1
      END
   NEXT FLD
   GOSUB 7000
4090*
   RETURN
*
*---- Build BLD.DEF.SCRN record
5000*
   OLD.DEF = BLD.DEF.SCRN; BLD.DEF.SCRN = ""; DPTR = 0
   FOR ROW = FIRST.ROW TO LAST.ROW
      LOCATE ROW IN MOD.ROWS,1 SETTING PTR THEN
         MOD.ROWS = DELETE(MOD.ROWS,PTR,0,0)
         LOOP WHILE OLD.DEF<1,1> = ROW DO
            OLD.DEF = DELETE(OLD.DEF,1,0,0)
         REPEAT
         GOSUB 5100
      END ELSE
         LOOP WHILE OLD.DEF<1,1> = ROW DO
            DPTR = DPTR + 1
            BLD.DEF.SCRN<DPTR> = OLD.DEF<1>
            OLD.DEF = DELETE(OLD.DEF,1,0,0)
         REPEAT
      END
   NEXT ROW
   MOD.ROWS = ""; OLD.DEF = ""
   GOSUB 5300
   RETURN
*
*--- Build BLD.DEF.SCRN columns
5100*
   BEGIN CASE
      CASE TRIM(FORM(ROW+1)) = ""
      CASE FORM(ROW+1) = STR(FORM(ROW+1)[1,1],MAX.WIDTH)
         DPTR = DPTR + 1
         BLD.DEF.SCRN<DPTR> = ROW
         BLD.DEF.SCRN<DPTR,2> = MIN.CRT.COL
         BLD.DEF.SCRN<DPTR,3> = FORM(ROW+1)
      CASE 1
         DUP.CNT = 0; SCOL = FIRST.COL; STMT = ""
         FOR COL = MIN.CRT.COL TO MAX.CRT.COL
            CHR = FORM(ROW+1)[COL+1,1]
            BEGIN CASE
               CASE TRIM(CHR) = ""
                  DUP.CNT = DUP.CNT + 1
               CASE DUP.CNT < ADR.CNT
                  STMT = STMT:SPACE(DUP.CNT):CHR
                  DUP.CNT = 0
               CASE 1
                  IF STMT # "" THEN
                     DPTR = DPTR + 1
                     BLD.DEF.SCRN<DPTR> = ROW
                     BLD.DEF.SCRN<DPTR,2> = SCOL
                     BLD.DEF.SCRN<DPTR,3> = STMT
                  END
                  STMT = CHR
                  SCOL = COL
                  DUP.CNT = 0
            END CASE
         NEXT COL
         IF STMT # "" THEN
            DPTR = DPTR + 1
            BLD.DEF.SCRN<DPTR> = ROW
            BLD.DEF.SCRN<DPTR,2> = SCOL
            BLD.DEF.SCRN<DPTR,3> = STMT
         END
   END CASE
   RETURN
*
*---- Build BLD.COMP.SCRN record
5300*
   BEGIN CASE
      CASE CLR.R1 <= MIN.CRT.ROW AND CLR.R2 >= MAX.CRT.ROW AND CLR.C1 <= MIN.CRT.COL AND CLR.C2 >= MAX.CRT.COL
         BLD.COMP.SCRN = CS
      CASE CLR.C2 = MAX.CRT.COL
         BLD.COMP.SCRN = ""
         FOR ROW = CLR.R1 TO CLR.R2
            BLD.COMP.SCRN = BLD.COMP.SCRN:@(CLR.C1,ROW):CL
         NEXT ROW
      CASE 1
         BLD.COMP.SCRN = ""
         FOR ROW = CLR.R1 TO CLR.R2
            BLD.COMP.SCRN = BLD.COMP.SCRN:@(CLR.C1,ROW):SPACE(CLR.C2-CLR.C1+1)
         NEXT ROW
   END CASE
   FOR DEF = 1 TO DPTR
      BLD.COMP.SCRN = BLD.COMP.SCRN:@(BLD.DEF.SCRN<DEF,2>,BLD.DEF.SCRN<DEF,1>):BLD.DEF.SCRN<DEF,3>
   NEXT DEF
   RETURN
*
*---- DERIVE STRING TO CLEAR DATA ONLY
*
5500*
   MAT CLRS = ""
   FOR ROW = FIRST.ROW TO LAST.ROW
      DONE = 0
      FOR COL = LAST.COL TO FIRST.COL STEP -1 UNTIL DONE
         IF FORM(ROW+1)[COL+1,1] # " " THEN
            CLRS(ROW+1,2) = COL + 1
            DONE = 1
         END
      NEXT COL
   NEXT ROW
   FOR FLD = 1 TO BLD.FIELD.CNT
      ROW = ABLD.SCRN(FLD)<1,B.Y>
      COL = ABLD.SCRN(FLD)<1,B.X>
      ML = ABLD.SCRN(FLD)<1,B.MULTI.LN>
      IF ML = "" THEN ML = 1
      LS = ABLD.SCRN(FLD)<1,B.MULTI.SP>
      IF LS = "" THEN LS = 1
      FOR M = 1 TO ML STEP LS
         MROW = ROW + (M-1) * LS
         IF COL < CLRS(MROW+1,2) THEN
            CLR.FLD = MROW
            CLR.FLD<1,2> = COL
            CLR.FLD<1,3> = ABLD.SCRN(FLD)<1,B.MAXL>
            CLRS(MROW+1,1)<-1> = CLR.FLD
         END
      NEXT M
   NEXT FLD
   BLD.DEF.CLR = ""; DLOC = 0
   FOR ROW = FIRST.ROW TO LAST.ROW
      MROW = ROW + 1; FLOC = 1
      LOOP WHILE CLRS(MROW,1)<FLOC> # "" DO
         DLOC = DLOC + 1
         BLD.DEF.CLR<DLOC> = CLRS(MROW,1)<FLOC>
         FLOC = FLOC + 1
      REPEAT
      COL = CLRS(MROW,2) + 0
      IF COL < 80 THEN
         DLOC = DLOC + 1
         BLD.DEF.CLR<DLOC> = ROW
         BLD.DEF.CLR<DLOC,2> = COL
         BLD.DEF.CLR<DLOC,3> = "L"
      END
   NEXT ROW
   BLD.CLR.DATA = ""
   FOR ROW = 1 TO DLOC
      Y = BLD.DEF.CLR<ROW,1>
      X = BLD.DEF.CLR<ROW,2>
      ML = BLD.DEF.CLR<ROW,3>
      IF NUM(ML) THEN
         BLD.CLR.DATA = BLD.CLR.DATA:@(X,Y):SPACE(ML)
      END ELSE
         BLD.CLR.DATA = BLD.CLR.DATA:@(X,Y):CL
      END
   NEXT ROW
   RETURN
*
*---- DECOMPRESSION ROUTINE
*
6000*
   COL = 0
   ROW = 0
   SLEN = LEN(BLD.COMP.SCRN)
   P = 1
   LOOP UNTIL P > SLEN DO
      CHR = BLD.COMP.SCRN[P,1]
      BEGIN CASE
         CASE CHR = CS
            MAT FORM = SPACE.WIDTH
            COL = FIRST.COL
            ROW = FIRST.ROW
            P = P + 1
         CASE CHR = CHAR(16)        ;* ADDRESS COLUMN
            ACOL = SEQ(BLD.COMP.SCRN[P+1,1])
            BEGIN CASE
               CASE SEQ(BLD.COMP.SCRN[P+2,1]) = 8
                  COL = INT(ACOL/16) * 10 + MOD(ACOL,16) - 1
                  P = P + 3
               CASE 1
                  COL = INT(ACOL/16) * 10 + MOD(ACOL,16)
                  P = P + 2
            END CASE
         CASE CHR = CHAR(11)        ;* ADDRESS ROW
            AROW = SEQ(BLD.COMP.SCRN[P+1,1])
            ROW = AROW - 64
            P = P + 2
         CASE CHR = CHAR(27)        ;* ESCAPE
            P = P + 2
         CASE COL = 0
            FORM(ROW+1) = CHR:FORM(ROW+1)[2,MAX.WIDTH-1]
            P = P + 1
            COL = COL + 1
            IF COL > LAST.COL THEN
               COL = FIRST.COL
               ROW = ROW + 1
            END
         CASE 1
            FORM(ROW+1) = FORM(ROW+1)[1,COL]:CHR:FORM(ROW+1)[COL+2,MAX.WIDTH-COL-1]
            P = P + 1
            COL = COL + 1
            IF COL > LAST.COL THEN
               COL = FIRST.COL
               ROW = ROW + 1
            END
      END CASE
   REPEAT
   RETURN
*
6100*
   MAT FORM = SPACE.WIDTH
   DPTR = DCOUNT(BLD.DEF.SCRN,AM)
   FOR DEF = 1 TO DPTR
      Y = BLD.DEF.SCRN<DEF,1> + 1
      X = BLD.DEF.SCRN<DEF,2>
      STMT = BLD.DEF.SCRN<DEF,3>
      L = LEN(STMT)
      FORM(Y) = FORM(Y)[1,X]:STMT:FORM(Y)[X+L+1,MAX.WIDTH-X-1]
   NEXT DEF
   RETURN
*
*---- RE-DISPLAY ROW REFERENCE COLUMNS
*
6400*
   IF ROW.REF.FLAG THEN
      ROW.REF.FLAG = 0
      FOR R = FIRST.ROW TO LAST.ROW
         PRINT @(MID.COL-1,R):SAVE.COL.DATA<1,R+1> "L#4":
      NEXT R
      DATA.COL1 = MID.COL-1
      DATA.COL2 = MID.COL+2
      GOSUB 7000
   END
   RETURN
*
*---- RE-DISPLAY COLUMN REFERENCE ROW
*
6500*
   IF COL.REF.FLAG THEN
      COL.REF.FLAG = 0
      IF ROW = MAX.CRT.ROW THEN
         PRINT @(0,ROW-1):CL:FORM(ROW):
         DATA.ROW = ROW-1
      END ELSE
         PRINT @(0,ROW+1):CL:FORM(ROW+2):
         DATA.ROW = ROW+1
      END
      GOSUB 7000
   END
   RETURN
*
*---- DISPLAY DATA FIELDS
*
7000*
   FOR FLD = 1 TO BLD.FIELD.CNT
      FX = ABLD.SCRN(FLD)<1,B.X>
      IF FX = "" THEN GOTO 7090
      FY = ABLD.SCRN(FLD)<1,B.Y>
      IF FY > LAST.ROW THEN GOTO 7090
      ML = ABLD.SCRN(FLD)<1,B.MULTI.LN>
      IF ML = "" THEN ML = 1
      LS = ABLD.SCRN(FLD)<1,B.MULTI.SP>
      IF LS = "" THEN LS = 1
      IF DATA.ROW = "" OR (DATA.ROW >= FY AND DATA.ROW <= (FY+(ML-1)*LS)) THEN
         IF DATA.COL1 < FX AND DATA.COL2 < FX THEN GOTO 7090
         IF DATA.COL1 >= FX+ABLD.SCRN(FLD)<1,B.MAXL> THEN GOTO 7090
         IF ABLD.SCRN(FLD)<1,B.MASK> = "" THEN
            DFILL = "#"
         END ELSE
            DFILL = ABLD.SCRN(FLD)<1,B.MASK>
         END
         PTYP = ABLD.SCRN(FLD)<1,B.TYP>
         PMAXL = ABLD.SCRN(FLD)<1,B.MAXL>
         BEGIN CASE
            CASE PTYP = 6
               PMASK = STR(DFILL,2):"/":STR(DFILL,2):"/":STR(DFILL,2)
               PMASK = PMASK[1,PMAXL]
            CASE PTYP = 4
               PSCALER = ABLD.SCRN(FLD)<1,B.SCALER>
               PMASK = STR(DFILL,PMAXL-PSCALER-1):".":STR(DFILL,PSCALER)
            CASE PTYP = 10
               PMASK = STR(DFILL,2):":":STR(DFILL,4)
               PMASK = PMASK[1,PMAXL]
            CASE 1
               PMASK = STR(DFILL,PMAXL)
         END CASE
         FOR L = 1 TO ML
            PRINT @(FX,FY+(L-1)*LS):PMASK:
         NEXT L
      END
7090*
   NEXT FLD
   DATA.ROW = ""
   DATA.COL1 = FIRST.COL
   DATA.COL2 = LAST.COL
   RETURN
*
*---- DETERMINE EXACT COLUMN
*
8000*
   FOUND = 0
   FOUND2 = 0
   INT.REF = 1
   FOR FLD = 1 TO BLD.FIELD.CNT UNTIL FOUND2
      FX = ABLD.SCRN(FLD)<1,B.X>
      FY = ABLD.SCRN(FLD)<1,B.Y>
      IF ROW = FY AND COL >= FX AND COL < FX + ABLD.SCRN(FLD)<1,B.MAXL> THEN
         IF FOUND THEN
            FOUND2 = 1
         END ELSE
            COL = FX
            FOUND = 1
            INT.REF = FLD
         END
      END
8009 NEXT FLD
   RETURN
*
*---- GET FIELD REFERENCE NUMBER
*
8500*
   FOUND = 0
   X = 0; Y = 23
   PMSG = CL:"FIELD REFERENCE NUMBER?"
   MINL =1; MAXL = 3
   O.R = "O"; DEFAULT = ""
   CALL EDIT.SUB
   IF VALUE # "END" AND VALUE # "" THEN
      LOCATE VALUE IN BLD.EXT.REF<1>,1 SETTING INT.REF ELSE INT.REF = 0
      IF INT.REF > 0 THEN
         COL = ABLD.SCRN(FLD)<1,B.X>
         FOUND = 1
      END
   END
   RETURN
*
*---- DELETE DATA FIELD
*
9000*
   FX = ABLD.SCRN(INT.REF)<1,B.X>
   FY = ABLD.SCRN(INT.REF)<1,B.Y>
   ML = ABLD.SCRN(INT.REF)<1,B.MULTI.LN>
   IF ML = "" THEN ML = 1
   LS = ABLD.SCRN(INT.REF)<1,B.MULTI.SP>
   IF LS = "" THEN LS = 1
   SPC = SPACE(ABLD.SCRN(INT.REF)<1,B.MAXL>)
   FOR L = 1 TO ML
      PRINT @(FX,FY+(L-1)*LS):SPC:
   NEXT L
   LIMIT = BLD.FIELD.CNT - 1
   FOR FLD = INT.REF TO LIMIT
      ABLD.SCRN(FLD) = ABLD.SCRN(FLD+1)
   NEXT FLD
   ABLD.SCRN(BLD.FIELD.CNT) = ""
   EXT.REF = BLD.EXT.REF<1,INT.REF>
   IF BLD.HMSG<1,EXT.REF> # "" THEN BLD.HMSG<1,EXT.REF> = "*DELETE*"
   IF BLD.FIELD.NAME<1,EXT.REF> # "" THEN BLD.FIELD.NAME<1,EXT.REF> = "*DELETE*"
   BLD.EXT.REF = DELETE(BLD.EXT.REF,1,INT.REF,0)
   BLD.SORT.ID = DELETE(BLD.SORT.ID,1,INT.REF,0)
   BLD.FIELD.CNT = BLD.FIELD.CNT - 1
*
* XREF
*
   FOR FLD = 1 TO XBR_SCN_SIZE
      DEL XBR_SCN(FLD)<INT.REF>
   NEXT FLD
   LOCATE EXT.REF IN BMSR_FLD<1>,1 SETTING BFND THEN
      DEL BMSR_FLD<1,BFND>
      DEL BMSR_FILE<1,BFND>
      DEL BMSR_NAME<1,BFND>
   END
   LOCATE EXT.REF IN VBSR_FLD<1>,1 SETTING VFND THEN
      DEL VBSR_FLD<1,VFND>
      DEL VBSR_TYPE<1,VFND>
      DEL VBSR_DESC<1,VFND>
   END
   RETURN
*
*---- Update PC releated fields
11000*
   BLD.UPD.DT = DATE()
   BLD.UPD.DT<1,2> = TIME()
   IF BLD.PCNAME # "" THEN GOTO 11099
   SCNF_PFX = FIELD(SCN_FNAME,".",1)
   IF SCNF_PFX = "M" THEN SCNF_PFX = "CBA"
   IF LEN(SCNF_PFX) # 3 THEN
*         GOTO 11099
      SCNF_PFX = SCNF_PFX[1,3]
   END
   LOCATE SCNF_PFX IN BASE.FORMS SETTING FND THEN
      SCNF_PFX = "PMC"
   END
   PCNAME = SCREEN.NAME
   CALL GET_PCNAME(PCNAME,SCNF_PFX,BNAME)
   IF PCNAME = "" THEN
      GOSUB 11100
      IF PCNAME = "" THEN GOTO 11099
   END
11010*
   MATREADU PCNX.REC FROM PCNAME_XREF, PCNAME THEN
      RELEASE PCNAME_XREF, PCNAME
      BEGIN CASE
         CASE PCNX_FILE # SCN_FNAME
            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
            GOSUB 95000
            GOSUB 11100
            IF PCNAME = "" THEN GOTO 11099
            GOTO 11010
         CASE PCNX_ID # SCREEN.NAME
            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
            GOSUB 95000
            BNAME = FIELD(PCNAME,".",1)
            GOSUB 11100
            IF PCNAME = "" THEN GOTO 11099
            GOTO 11010
      END CASE
   END ELSE
      PCNX_FILE = SCN_FNAME
      PCNX_ID = SCREEN.NAME
      MATWRITE PCNX.REC ON PCNAME_XREF, PCNAME
   END
   BLD.PCNAME = PCNAME
   TFILE = FIELD(BLD.PCNAME,".",2):'FORMS'
11099*
   RETURN
11100*
   PMSG = "Enter PC Screen Name (":SCREEN.NAME:") :"
*   X = 0; Y = 23; TYP = 1; MAXL = 8
   X = 0; Y = 21; TYP = 1; MAXL = 8; DEFAULT = FIELD(BNAME,".",1) "L#8"
   CALL EDIT.SUB
   IF VALUE = "END" OR VALUE = "" THEN
      PCNAME = ""
   END ELSE
      PCNAME = VALUE : "." : SCNF_PFX
   END
   RETURN
*
*---- Rebuild Gui Form
12000 *
   JIS.FLAG = 0 ; JIS.HMSG = ""
   OPEN "",TFILE TO TUFORMS THEN
      CALL SCREEN.BUILD.TUF(MAT ABLD.SCRN,SCREEN.NAME,BLD.DEF.SCRN,BLD.PCNAME,BLD.TUF.SCRN,SYS.SCREENS,JIS.FLAG,JIS.HMSG)
      GUI.PROCESSED = 1
*      TFILE = FIELD(BLD.PCNAME,".",2):'GFORM'
*      TFILE = "PMCFORMS"
      TFILE = FIELD(BLD.PCNAME,".",2):'FORMS'
      TNAME = FIELD(BLD.PCNAME,".",1)
      READU DUMMY FROM TUFORMS, TNAME ELSE DUMMY = ""
      DUMMY<1> = BLD.TUF.SCRN<1>
      IF DUMMY # BLD.TUF.SCRN THEN
         WRITE BLD.TUF.SCRN ON TUFORMS, TNAME
      END ELSE
         RELEASE TUFORMS, TNAME
      END
   END ELSE
      ERRMSG = "CANNOT OPEN FORMS FILE ":TFILE
      GOSUB 95000
   END
   RETURN
13000*
   IF BMSR_FLD = "" THEN RETURN
   OPEN.BARFILE = ""
   VALDAT.VALUE = ""
   BCNT = DCOUNT(BMSR_FLD<1>,VM)
   FOR BB = 1 TO BCNT
      LOCATE BMSR_FLD<1,BB> IN BLD.EXT.REF<1>,1 SETTING FLD ELSE FLD = 0
      LOCATE BMSR_FLD<1,BB> IN VBSR_FLD<1>,1 SETTING VFND ELSE VFND = 0
      BEGIN CASE
         CASE BMSR_NAME<1,BB> = ""
         CASE VFND = 0
         CASE FLD = 0
         CASE ABLD.SCRN(FLD)<1,B.VALDAT> = ""
         CASE VBSR_TYPE<1,VFND> = ""
         CASE FIELD(BMSR_NAME<1,BB>,".",1) # FIELD(BLD.PCNAME,".",1)
         CASE 1
            TNAME = BMSR_NAME<1,BB>
            BFILE = BMSR_FILE<1,BB>
            IF BFILE = "" THEN BFILE = FIELD(BLD.PCNAME,".",2):"BARS"
            IF BFILE # OPEN.BARFILE THEN
               OPEN.BARFILE = BFILE
               OPEN "",BFILE TO WORK_FILE ELSE OPEN.BARFILE = ""
            END
            IF OPEN.BARFILE # "" THEN
               VALDAT.VALUE<1,VFND> = CHANGE(ABLD.SCRN(FLD)<1,B.VALDAT>,",",SVM)
               CALL SCREEN.BUILD.BAR.SUB(VFND,VALDAT.VALUE,VBSR_TYPE,VBSR_DESC,TBAR_REC,DUP.NAME)
               IF TBAR_REC # "ERROR" THEN
                  READU DUMMY FROM WORK_FILE, TNAME THEN
                     IF DUMMY<2> = TBAR_REC<2> THEN
                        RELEASE WORK_FILE, TNAME
                     END ELSE
                        WRITE TBAR_REC ON WORK_FILE, TNAME
                     END
                  END ELSE
                     WRITE TBAR_REC ON WORK_FILE, TNAME
                  END
               END
            END
      END CASE
   NEXT BB
   RETURN
*
*
*---- ERROR PROCESS
*
95000*
   PRINT @(0,23):CL:ERRMSG:
   IF ACTION  = "" THEN
      INPUT REPLY,1:
      PRINT @(0,23):CL:
   END
   RETURN
*---- END OF PROGRAM
*
99999*
   RETURN
END
