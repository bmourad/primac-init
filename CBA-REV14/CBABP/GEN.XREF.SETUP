*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.XREF.SETUP
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CBABP
* PROGRAM     - GEN.XREF.SETUP
* DESCRIPTION
*T21177 diane 11/06/1996 * REV11 UPG
*********************************************************************
*
*---- Data structure libraries
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SYSCOM setup
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Open files
*
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
         ERRMSG = "Cannot locate the XREF.DATA file"
         GOTO 93000
      END
      OPEN "","M.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "Cannot locate the M.SCREENS file"
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "Cannot locate the CONTROL file"
         GOTO 93000
      END
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "Cannot locate the COMPANY file"
         GOTO 93000
      END
      OPEN "","PREFIX" TO PREFIX ELSE
         ERRMSG = "Cannot locate the PREFIX file"
         GOTO 93000
      END
*
*---- Get company
*
      MAT COMP.REC = ""
      CONO = ""
      CALL GET.CONO(CONO,MAT COMP.REC)
      IF CONO = "END" THEN GOTO 99999
*
*---- Get passing arguments if any
*
      PROCREAD BUFFER ELSE BUFFER = ""
*
*---- Look up CPYLIB files
*
      MAT CPYLIB.FILES = ""
      CPYLIB.NAMES = "PMC.CPYLIB"
      CPYLIB.NAMES<2> = "APS.CPYLIB"
      CPYLIB.NAMES<3> = "ARS.CPYLIB"
      CPYLIB.NAMES<4> = "FAS.CPYLIB"
      CPYLIB.NAMES<5> = "GLS.CPYLIB"
      CPYLIB.NAMES<6> = "ICS.CPYLIB"
      CPYLIB.NAMES<7> = "JCS.CPYLIB"
      CPYLIB.NAMES<8> = "JES.CPYLIB"
      CPYLIB.NAMES<9> = "OPS.CPYLIB"
      CPYLIB.NAMES<10>= "MLS.CPYLIB"
      CPYLIB.NAMES<11>= "POS.CPYLIB"
      CPYLIB.NAMES<12>= "PRS.CPYLIB"
      CPYLIB.NAMES<13>= "PSS.CPYLIB"
      CPYLIB.NAMES<14>= "SAS.CPYLIB"
      CNT = 14
      CPYLIB.CNT = 1
      FOR I = 1 TO CNT
         OPEN "", CPYLIB.NAMES<I> TO CPYLIB.FILES(CPYLIB.CNT) THEN
            CPYLIB.CNT = CPYLIB.CNT + 1
         END
      NEXT I
      CPYLIB.CNT = CPYLIB.CNT - 1
*
*---- Setup SCRN.EDIT & EDIT.SUB
*
      MAT EDIT.COM.DRIVER = ""
      ECD.SCRN.CNT = 2
      ECD.SCRN.NAME = "GEN.XREF.SETUP"
      ECD.SCRN.NAME<2> = "XREF.SETUP.SUB"
      ECD.ACTION = 1; CALL SCRN.EDIT
*
      ECD.SCRN.NO = 1
      MAT SCV.REC = ""
*
*---- Initialization
*
      ESN = ECD.SCRN.NO
*
      LINE.SPACE = 1
      BEGIN.PAGE = 15
      PAGE.SIZE = 5
*
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF BUFFER<2> = "" THEN
         EXIT.MODE = 0
      END ELSE
         XRFSNO = BUFFER<2>; EXIT.MODE = 1
         ECD.NUM = 1; SCV.REC(ECD.NUM) = XRFSNO
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 100
      END
      GOTO 10
5*
      MAT SCV.REC = ""
      ECD.ACTION = 6; CALL SCRN.EDIT
*
*--- Get cross reference table number
10*
      ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = ""
         MAT GEN.XREF.REC = ""
         GXR.NAME = "XREF.SETUP"
         GXR.FILE = XREF.DATA
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            GOTO 10
         END ELSE
            ECD.RET.VALUE = GXR.ID
            ECD.NUM = 1; SCV.REC(ECD.NUM) = GXR.ID
            ECD.ACTION = 5; CALL SCRN.EDIT
         END
      END CASE
      XRFSNO = ECD.RET.VALUE
100*
      OLD.START.LINE = 0
      MATREADU XRFS.REC FROM XREF.DATA, XRFSNO THEN
         IF XRFS.XREF.FILE = "" OR XRFS.XREF.FILE = "^VALUE^" OR XRFS.XREF.FILE = "DICT ^VALUE^" THEN
            OPEN.XREF = 0
         END ELSE
            IF XRFS.XREF.FILE[1,5] = "DICT " THEN
               FNAME = XRFS.XREF.FILE[6,999]
               OPEN "DICT", FNAME TO XREF.FILE THEN
                  OPEN.XREF = 1
               END ELSE
                  ERRMSG = "Cannot locate the XREF file # ":XRFS.XREF.FILE
                  GOSUB 91000; XRFS.XREF.FILE = ""
                  OPEN.XREF = 0
               END
            END ELSE
               OPEN "", XRFS.XREF.FILE TO XREF.FILE THEN
                  OPEN.XREF = 1
               END ELSE
                  ERRMSG = "Cannot locate the XREF file # ":XRFS.XREF.FILE
                  GOSUB 91000; XRFS.XREF.FILE = ""
                  OPEN.XREF = 0
               END
            END
         END
         IF XRFS.DATA.FILE = "" OR XRFS.DATA.FILE = "^VALUE^" OR XRFS.DATA.FILE = "DICT ^VALUE^" THEN
            OPEN.DATA = 0
         END ELSE
            IF XRFS.DATA.FILE[1,5] = "DICT " THEN
               FNAME = XRFS.DATA.FILE[6,999]
               OPEN "DICT", FNAME TO DATA.FILE THEN
                  OPEN.DATA = 1
               END ELSE
                  ERRMSG = "Cannot locate the DATA file # ":XRFS.DATA.FILE
                  GOSUB 91000; XRFS.DATA.FILE = ""
                  OPEN.DATA = 0
               END
            END ELSE
               OPEN "", XRFS.DATA.FILE TO DATA.FILE THEN
                  OPEN.DATA = 1
               END ELSE
                  ERRMSG = "Cannot locate the DATA file # ":XRFS.DATA.FILE
                  GOSUB 91000; XRFS.DATA.FILE = ""
                  OPEN.DATA = 0
               END
            END
         END
         SCV.REC(3) = XRFS.LOC
         SCV.REC(4) = XRFS.XREF.FILE
         SCV.REC(5) = XRFS.BEGIN.PAGE
         SCV.REC(6) = XRFS.DATA.FILE
         SCV.REC(9) = XRFS.PAGE.SIZE
         SCV.REC(10) = XRFS.CO.REQ
         SCV.REC(11) = XRFS.LINE.SPACE
         SCV.REC(13) = XRFS.FST.PAGE
         SCV.REC(15) = XRFS.CLS
         SCV.REC(17) = XRFS.TOP.LINE<1,1>
         SCV.REC(18) = XRFS.TOP.LINE<1,2>
         ECD.ACTION = 3; CALL SCRN.EDIT
         LN = 1; LINES = DCOUNT(XRFS.ROW,VM)
      END ELSE
         IF EXIT.MODE THEN
            ERRMSG = "Cannot locate cross reference table # ":XRFSNO
            GOSUB 91000; GOTO 99999
         END
         OPEN.XREF = 0; OPEN.DATA = 0
         ECD.NUM = 34; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE # "Y" THEN
            RELEASE XREF.DATA, CONO:XRFSNO
            GOTO 10
         END
         MAT XRFS.REC = ""
         LIMIT = 10
         FOR OPTION = 1 TO LIMIT
            ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000
            IF ECD.RET.VALUE = "END" THEN LIMIT = 0
         NEXT OPTION
         IF NOT(LIMIT) THEN
            RELEASE XREF.DATA, XRFSNO
            GOTO 10
         END
         LINES = 0
         OPTION = "A"
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 3000
         WHILE LINES > OLD.LINES DO
            GOSUB 3910
         REPEAT
         LN = LINES
      END
      GOSUB 3900; GOSUB 3950
*
*---- Prompt Line
*
      MORE = 1
      LOOP
         ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END" OR OPTION = "e"
            RELEASE XREF.DATA, XRFSNO
            MORE = 0
         CASE OPTION = "F" OR OPTION = "f"
            ERRMSG = ""
            BEGIN CASE
            CASE XRFS.LOC = "S" AND XRFS.SORT.FILE = ""
               ERRMSG = "This Cross Reference setup requires the SORT file name."
            CASE XRFS.LOC = "S" AND XRFS.DATA.FILE = ""
               ERRMSG = "This Cross Reference setup requires the DATA file name."
            CASE (XRFS.LOC = "A" OR XRFS.SORT = "M") AND XRFS.XREF.FILE = ""
               ERRMSG = "This Cross Reference setup requires the XREF file name."
            CASE NOT(NUM(XRFS.LOC))
            CASE XRFS.LOC = 0 AND XRFS.DATA.FILE = ""
               ERRMSG = "This Cross Reference setup requires the DATA file name."
            CASE XRFS.LOC = 0
            CASE XRFS.XREF.FILE = "" OR XRFS.DATA.FILE = ""
               ERRMSG = "This Cross Reference setup requires the DATA and XREF file names."
            END CASE
            IF ERRMSG = "" THEN
               MATWRITE XRFS.REC ON XREF.DATA, XRFSNO
               MORE = 0
            END ELSE
               GOSUB 91000
            END
         CASE NOT(EXIT.MODE) AND (OPTION = "M" OR OPTION = "m")
            ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ""
            ECD.HMSG = "Enter new cross reference table number"
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "END" THEN
               SCV.REC(ECD.NUM)<ESN> = XRFSNO
               ECD.ACTION = 5; CALL SCRN.EDIT
            END
            READU DUMMY FROM XREF.DATA, ECD.RET.VALUE THEN
               RELEASE XREF.DATA, ECD.RET.VALUE
               ERRMSG = "Cross reference table (":ECD.RET.VALUE:") is already on file"
               GOSUB 91000
               SCV.REC(ECD.NUM)<ESN> = XRFSNO
               ECD.ACTION = 5; CALL SCRN.EDIT
            END ELSE
               RELEASE XREF.DATA, XRFSNO
               XRFSNO = ECD.RET.VALUE
            END
         CASE OPTION = "N" OR OPTION = "n"
            IF XRFS.LOC = "A" OR XRFS.LOC = "M" THEN
               ERRMSG = "Cannot utilize the Next screen with the location type"
               GOSUB 91000
            END ELSE
               ECD.SCRN.NO = ESN + 1
               ECD.ACTION = 2; CALL SCRN.EDIT
               CALL XREF.SETUP.SUB(XRFSNO)
               ECD.SCRN.NO = ESN
               ECD.ACTION = 2; CALL SCRN.EDIT
               ECD.ACTION = 3; CALL SCRN.EDIT
               OLD.START.LINE = 0; GOSUB 3900; GOSUB 3950
            END
         CASE OPTION = "A" OR OPTION = "a"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 3000
            WHILE LINES > OLD.LINES DO
               GOSUB 3910
            REPEAT
            LN = LINES; GOSUB 3900; GOSUB 3950
         CASE OPTION = "C" OR OPTION = "c"
            GOSUB 3800
            IF LNO THEN
               LN = LNO
               SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
               GOSUB 3100
            END
         CASE OPTION = "D" OR OPTION = "d"
            GOSUB 3800
            IF LNO THEN
               XRFS.ROW = DELETE(XRFS.ROW,1,LNO,0)
               XRFS.COL = DELETE(XRFS.COL,1,LNO,0)
               XRFS.LEN = DELETE(XRFS.LEN,1,LNO,0)
               XRFS.ATT = DELETE(XRFS.ATT,1,LNO,0)
               XRFS.MV = DELETE(XRFS.MV,1,LNO,0)
               XRFS.JUSTIFY = DELETE(XRFS.JUSTIFY,1,LNO,0)
               XRFS.OCONV = DELETE(XRFS.OCONV,1,LNO,0)
               XRFS.HEADING = DELETE(XRFS.HEADING,1,LNO,0)
               XRFS.TFUNC = DELETE(XRFS.TFUNC,1,LNO,0)
               XRFS.SUBR = DELETE(XRFS.SUBR,1,LNO,0)
               LINES = DCOUNT(XRFS.ROW,VM)
               IF LN > LINES THEN LN = LN - 1
               OLD.START.LINE = 0; GOSUB 3900; GOSUB 3950
            END
         CASE OPTION = "I" OR OPTION = "i"
            GOSUB 3800
            IF LNO THEN
               S.XRFS.ROW = ""
               S.XRFS.COL = ""; S.XRFS.LEN = ""
               S.XRFS.ATT = ""; S.XRFS.MV = ""
               S.XRFS.JUSTIFY = ""; S.XRFS.OCONV = ""
               S.XRFS.HEADING = ""; S.XRFS.TFUNC = ""
               S.XRFS.SUBR = ""
               FOR I = LINES TO LNO STEP -1
                  INS XRFS.ROW<1,I> BEFORE S.XRFS.ROW<1>
                  INS XRFS.COL<1,I> BEFORE S.XRFS.COL<1>
                  INS XRFS.LEN<1,I> BEFORE S.XRFS.LEN<1>
                  INS XRFS.ATT<1,I> BEFORE S.XRFS.ATT<1>
                  INS XRFS.MV<1,I> BEFORE S.XRFS.MV<1>
                  INS XRFS.JUSTIFY<1,I> BEFORE S.XRFS.JUSTIFY<1>
                  INS XRFS.OCONV<1,I> BEFORE S.XRFS.OCONV<1>
                  INS XRFS.HEADING<1,I> BEFORE S.XRFS.HEADING<1>
                  INS XRFS.TFUNC<1,I> BEFORE S.XRFS.TFUNC<1>
                  INS XRFS.SUBR<1,I> BEFORE S.XRFS.SUBR<1>
                  XRFS.ROW = DELETE(XRFS.ROW,1,I,0)
                  XRFS.COL = DELETE(XRFS.COL,1,I,0)
                  XRFS.LEN = DELETE(XRFS.LEN,1,I,0)
                  XRFS.ATT = DELETE(XRFS.ATT,1,I,0)
                  XRFS.MV = DELETE(XRFS.MV,1,I,0)
                  XRFS.JUSTIFY = DELETE(XRFS.JUSTIFY,1,I,0)
                  XRFS.OCONV = DELETE(XRFS.OCONV,1,I,0)
                  XRFS.HEADING = DELETE(XRFS.HEADING,1,I,0)
                  XRFS.TFUNC = DELETE(XRFS.TFUNC,1,I,0)
                  XRFS.SUBR = DELETE(XRFS.SUBR,1,I,0)
               NEXT I
               LINES = LNO - 1; OLD.START.LINE = 0
               OPTION = "A"
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 3000
               WHILE LINES > OLD.LINES DO
                  GOSUB 3910
               REPEAT
               LN = LINES; LINES = DCOUNT(S.XRFS.ROW,AM)
               BEGIN CASE
               CASE LN = 0
                  MIN.COL = 0
               CASE S.XRFS.ROW<1> > XRFS.ROW<1,LN>
                  MIN.COL = 0
               CASE 1
                  MIN.COL = XRFS.COL<1,LN> + XRFS.LEN<1,LN> + 1
                  IF MIN.COL > 77 THEN MIN.COL = 77
               END CASE
               IF S.XRFS.COL<1> < MIN.COL THEN
                  S.XRFS.COL<1> = MIN.COL
               END
               FOR I = 1 TO LINES
                  BEGIN CASE
                  CASE I = 1
                     MIN.COL = 0
                  CASE S.XRFS.ROW<I> > S.XRFS.ROW<I-1>
                     MIN.COL = 0
                  CASE 1
                     MIN.COL = S.XRFS.COL<I-1> + S.XRFS.LEN<I-1> + 1
                     IF MIN.COL > 77 THEN MIN.COL = 77
                  END CASE
                  IF S.XRFS.COL<I> < MIN.COL THEN
                     S.XRFS.COL<I> = MIN.COL
                  END
                  II = I + LN
                  XRFS.ROW<1,II> = S.XRFS.ROW<I>
                  XRFS.COL<1,II> = S.XRFS.COL<I>
                  IF XRFS.COL<1,II> + S.XRFS.LEN<I> + 1 > 77 THEN
                     XRFS.LEN<1,II> = 1
                  END ELSE
                     XRFS.LEN<1,II> = S.XRFS.LEN<I>
                  END
                  XRFS.ATT<1,II> = S.XRFS.ATT<I>
                  XRFS.MV<1,II> = S.XRFS.MV<I>
                  XRFS.JUSTIFY<1,II> = S.XRFS.JUSTIFY<I>
                  XRFS.OCONV<1,II> = S.XRFS.OCONV<I>
                  XRFS.HEADING<1,II> = S.XRFS.HEADING<I>
                  XRFS.TFUNC<1,II> = S.XRFS.TFUNC<I>
                  XRFS.SUBR<1,II> = S.XRFS.SUBR<I>
               NEXT I
               S.XRFS.ROW = ""
               S.XRFS.COL = ""; S.XRFS.LEN = ""
               S.XRFS.ATT = ""; S.XRFS.MV = ""
               S.XRFS.JUSTIFY = ""; S.XRFS.OCONV = ""
               S.XRFS.HEADING = ""; S.XRFS.TFUNC = ""
               S.XRFS.SUBR = ""
               LINES = DCOUNT(XRFS.ROW,VM); OLD.START.LINE = 0
               GOSUB 3900; GOSUB 3950
            END
         CASE OPTION = "S" OR OPTION = "SF" OR OPTION = "s" OR OPTION = "sf"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 3900
         CASE OPTION = "SR" OR OPTION = "sr"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 3900
         CASE OPTION = "ST" OR OPTION = "st"
            LN = 1
            GOSUB 3900
         CASE OPTION = "SB" OR OPTION = "sb"
            LN = LINES
            GOSUB 3900
         CASE (OPTION[1,1] = "S" OR OPTION[1,1] = "s") AND NUM(OPTION[2,99])
            LN.NO = OPTION[2,99] + 0
            IF LN.NO < 1 OR LN.NO > LINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               LN = LN.NO
               GOSUB 3900
            END
         CASE NOT(NUM(OPTION))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE OPTION < 1 OR OPTION > 10
            ERRMSG = "Out of range, please re-enter"
            GOSUB 91000
         CASE 1
            ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000
         END CASE
      WHILE MORE DO REPEAT
      IF EXIT.MODE THEN GOTO 99999
      GOTO 5
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*---- Cross reference field location
1100*
      ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "S"
         XRFS.LOC = ECD.RET.VALUE
         OPEN.XREF = 0; XRFS.XREF.FILE = ""
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE ECD.RET.VALUE = "A"
         XRFS.LOC = ECD.RET.VALUE
         OPEN.DATA = 0; XRFS.DATA.FILE = ""
         ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOSUB 4000
      CASE ECD.RET.VALUE = "M"
         XRFS.LOC = ECD.RET.VALUE
         OPEN.DATA = 0; XRFS.DATA.FILE = ""
         ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOSUB 4000
      CASE NOT(NUM(ECD.RET.VALUE))
         ERRMSG = "Invalid entry, please re-enter"
         GOSUB 91000; GOTO 1100
      CASE ECD.RET.VALUE = 0
         XRFS.LOC = ECD.RET.VALUE
         OPEN.XREF = 0; XRFS.XREF.FILE = ""
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE ECD.RET.VALUE < 0 OR ECD.RET.VALUE > 150
         ERRMSG = "Out of range, please re-enter"
         GOSUB 91000; GOTO 1100
      CASE 1
         XRFS.LOC = ECD.RET.VALUE
      END CASE
      RETURN
*
*---- Begin Page
1200*
      ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 1209
      ROWS = ECD.RET.VALUE + (XRFS.PAGE.SIZE * XRFS.LINE.SPACE)
      ROWS = ROWS + DCOUNT(XRFS.TOP.LINE,VM) + 4
      IF ROWS > 22 THEN
         ERRMSG = "Sorry, total rows will not fit on the page."
         GOSUB 91000; GOTO 1200
      END
      XRFS.BEGIN.PAGE = ECD.RET.VALUE
1209*
      RETURN
*
*---- Page Size
1300*
      ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 1309
      ROWS = XRFS.BEGIN.PAGE + (ECD.RET.VALUE * XRFS.LINE.SPACE)
      ROWS = ROWS + DCOUNT(XRFS.TOP.LINE,VM) + 4
      IF ROWS > 22 THEN
         ERRMSG = "Sorry, total rows will not fit on the page."
         GOSUB 91000; GOTO 1300
      END
      XRFS.PAGE.SIZE = ECD.RET.VALUE
1309*
      RETURN
*
*---- Line Spacing
1400*
      ECD.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 1409
      ROWS = XRFS.BEGIN.PAGE + (XRFS.PAGE.SIZE * ECD.RET.VALUE)
      ROWS = ROWS + DCOUNT(XRFS.TOP.LINE,VM) + 4
      IF ROWS > 22 THEN
         ERRMSG = "Sorry, total rows will not fit on the page."
         GOSUB 91000; GOTO 1400
      END
      XRFS.LINE.SPACE = ECD.RET.VALUE
1409*
      RETURN
*
*---- First Page
1500*
      ECD.NUM = 13; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         XRFS.FST.PAGE = ECD.RET.VALUE
      END
      RETURN
*
*---- Clear Screen
1600*
      ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         XRFS.CLS = ECD.RET.VALUE
      END
      RETURN
*
*---- Top Heading
1700*
      ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         XRFS.TOP.LINE<1,1> = ECD.RET.VALUE
         ROWS = XRFS.BEGIN.PAGE + (XRFS.PAGE.SIZE * XRFS.LINE.SPACE)
         BEGIN CASE
         CASE ECD.RET.VALUE = ""
         CASE XRFS.BEGIN.PAGE+(XRFS.PAGE.SIZE*XRFS.LINE.SPACE) > 16
            ECD.RET.VALUE = ""
         CASE 1
            ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
         END CASE
         BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE ECD.RET.VALUE = ""
            XRFS.TOP.LINE = DELETE(XRFS.TOP.LINE,1,2,0)
         CASE 1
            XRFS.TOP.LINE<1,2> = ECD.RET.VALUE
         END CASE
      END
      RETURN
*
*---- XREF File
1800*
      IF XRFS.LOC = "S" OR XRFS.LOC = "0" THEN
         OPEN.XREF = 0; XRFS.XREF.FILE = ""
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 1809
      END
1810*
      ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "^VALUE^"
         XRFS.XREF.FILE = ECD.RET.VALUE
         OPEN.XREF = 0
      CASE ECD.RET.VALUE = "DICT ^VALUE^"
         XRFS.XREF.FILE = ECD.RET.VALUE
         OPEN.XREF = 0
      CASE ECD.RET.VALUE[1,5] = "DICT "
         FNAME = ECD.RET.VALUE[6,999]
         OPEN "DICT", FNAME TO XREF.FILE THEN
            OPEN.XREF = 1
         END ELSE
            OPEN.XREF = 0
            ERRMSG = "Cannot locate the (":ECD.RET.VALUE:") file"
            GOSUB 91000; GOTO 1810
         END
         XRFS.XREF.FILE = ECD.RET.VALUE
      CASE 1
         OPEN "", ECD.RET.VALUE TO XREF.FILE THEN
            OPEN.XREF = 1
         END ELSE
            OPEN.XREF = 0
            ERRMSG = "Cannot locate the (":ECD.RET.VALUE:") file"
            GOSUB 91000; GOTO 1810
         END
         XRFS.XREF.FILE = ECD.RET.VALUE
      END CASE
1809*
      RETURN
*
*---- DATA File
1900*
      IF XRFS.LOC = "A" OR XRFS.LOC = "M" THEN
         OPEN.DATA = 0; XRFS.DATA.FILE = ""
         ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 1909
      END
1910*
      ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = "^VALUE^"
         XRFS.DATA.FILE = ECD.RET.VALUE
         OPEN.DATA = 0
      CASE ECD.RET.VALUE = "DICT ^VALUE^"
         XRFS.DATA.FILE = ECD.RET.VALUE
         OPEN.DATA = 0
      CASE ECD.RET.VALUE[1,5] = "DICT "
         FNAME = ECD.RET.VALUE[6,999]
         OPEN "DICT", FNAME TO DATA.FILE THEN
            OPEN.DATA = 1
         END ELSE
            OPEN.DATA = 0
            ERRMSG = "Cannot locate the (":ECD.RET.VALUE:") file"
            GOSUB 91000; GOTO 1910
         END
         XRFS.DATA.FILE = ECD.RET.VALUE
      CASE 1
         OPEN "", ECD.RET.VALUE TO DATA.FILE THEN
            OPEN.DATA = 1
         END ELSE
            OPEN.DATA = 0
            ERRMSG = "Cannot locate the (":ECD.RET.VALUE:") file"
            GOSUB 91000; GOTO 1910
         END
         XRFS.DATA.FILE = ECD.RET.VALUE
      END CASE
1909*
      RETURN
*
*---- Company dependent ID
2000*
      ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2009
      XRFS.CO.REQ = ECD.RET.VALUE
2009*
      RETURN
*
*---- Multi line entry
3000*
      GOSUB 3900
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
*      PRINT @(0,SLN) : CL : LN "R#3" :
P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
3100*
      X = 4; Y = SLN; TYP = 3; MAXL = 1; O.R = "O"
      IF LN = 1 THEN
         MINV = 1; MAXV = 1
      END ELSE
         MINV = XRFS.ROW<1,LN-1>
         IF MINV = XRFS.LINE.SPACE THEN
            MAXV = MINV
         END ELSE
            MAXV = MINV + 1
         END
      END
      MAXV = XRFS.LINE.SPACE
      BEGIN CASE
      CASE XRFS.ROW<1,LN> # ""
         DEFAULT = XRFS.ROW<1,LN>
      CASE LN > 1
         DEFAULT = XRFS.ROW<1,LN-1>
      CASE 1
         DEFAULT = 1
      END CASE
      HMSG = "Enter Row number"
      CALL EDIT.SUB
      BEGIN CASE
      CASE VALUE = "END"
         IF OPTION = "A" THEN
            XRFS.ROW = DELETE(XRFS.ROW,1,LN,0)
            XRFS.COL = DELETE(XRFS.COL,1,LN,0)
            XRFS.LEN = DELETE(XRFS.LEN,1,LN,0)
            XRFS.ATT = DELETE(XRFS.ATT,1,LN,0)
            XRFS.MV = DELETE(XRFS.MV,1,LN,0)
            XRFS.JUSTIFY = DELETE(XRFS.JUSTIFY,1,LN,0)
            XRFS.OCONV = DELETE(XRFS.OCONV,1,LN,0)
            XRFS.HEADING = DELETE(XRFS.HEADING,1,LN,0)
            XRFS.TFUNC = DELETE(XRFS.TFUNC,1,LN,0)
            XRFS.SUBR = DELETE(XRFS.SUBR,1,LN,0)
*            PRINT @(0,SLN):CL:
P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
*            PRINT @(0,SLN) : CL : LN "R#3" :
*            PRINT @(4,SLN) : XRFS.ROW<1,LN> "R#1" :
*            PRINT @(7,SLN) : XRFS.COL<1,LN> "R#2" :
*            PRINT @(11,SLN): XRFS.LEN<1,LN> "R#2" :
*            PRINT @(14,SLN): XRFS.ATT<1,LN> "R#3" :
*            PRINT @(18,SLN): XRFS.MV<1,LN> "R#2" :
*            PRINT @(21,SLN): XRFS.JUSTIFY<1,LN> "L#1" :
*            PRINT @(23,SLN): XRFS.OCONV<1,LN> "L#5" :
P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.ROW<1,LN> "R#1"
P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.COL<1,LN> "R#2"
P_X := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.LEN<1,LN> "R#2"
P_X := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.ATT<1,LN> "R#3"
P_X := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.MV<1,LN> "R#2"
P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.JUSTIFY<1,LN> "R#1"
P_X := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.OCONV<1,LN> "L#5"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            BEGIN CASE
            CASE XRFS.TFUNC<1,LN> # ""
               TEMP = "*"
            CASE XRFS.SUBR<1,LN> # ""
               TEMP = "@"
            CASE 1
               TEMP = ""
            END CASE
*            PRINT @(29,SLN): TEMP "L#1" :
*            PRINT @(31,SLN): XRFS.HEADING<1,LN> "L#48" :
P_X = 29 ; P_Y = SLN ; P_VALUE = TEMP "L#1" ; P_OPT = ""
P_X := AM:31 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.HEADING<1,LN> "L#48"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
         GOTO 3199
      CASE LN = 1
         IF VALUE # 1 THEN
            ERRMSG = "Must start with the first row"
            GOSUB 91000; GOTO 3100
         END
      CASE VALUE - XRFS.ROW<1,LN-1> > 1
         ERRMSG = "Rows should be entered in an ascending sequence of 1"
         GOSUB 91000; GOTO 3100
      END CASE
      XRFS.ROW<1,LN> = VALUE
3110*
      X = 7; Y = SLN; TYP = 3; MAXL = 2; O.R = "O"
      BEGIN CASE
      CASE LN = 1
         MIN.COL = 2
      CASE XRFS.ROW<1,LN> > XRFS.ROW<1,LN-1>
         MIN.COL = 2
      CASE 1
         MIN.COL = XRFS.COL<1,LN-1> + XRFS.LEN<1,LN-1> + 1
      END CASE
      MINV = MIN.COL; MAXV = 77
      IF XRFS.COL<1,LN> # "" THEN
         DEFAULT = XRFS.COL<1,LN>
         IF DEFAULT < MIN.COL THEN DEFAULT = MIN.COL
      END ELSE
         DEFAULT = MIN.COL
      END
      HMSG = "Enter starting column"
      CALL EDIT.SUB
      BEGIN CASE
      CASE VALUE = "END"
         GOTO 3100
      CASE VALUE = ""
         ERRMSG = "Column position is required"
         GOSUB 91000; GOTO 3110
      END CASE
      XRFS.COL<1,LN> = VALUE
3120*
      X = 11; Y = SLN; TYP = 3; MAXL = 2
      MINV = 1; MAXV = 78 - XRFS.COL<1,LN>
      IF MAXV > 77 THEN MAXV = 77
      IF XRFS.LEN<1,LN> # "" THEN
         O.R = "O"
         DEFAULT = XRFS.LEN<1,LN>
      END
      HMSG = "Enter column length"
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 3100
      XRFS.LEN<1,LN> = VALUE
3130*
      TYP = 1; X = 14; Y = SLN; MAXL = 3; O.R = "O"; JUSTIFY = "R"
      BEGIN CASE
      CASE XRFS.ATT<1,LN> # ""
         DEFAULT = XRFS.ATT<1,LN>
      CASE LN = 1
         DEFAULT = "R"
      END CASE
      HMSG = "Enter field #,(R) for Reference column,(H) for Heading"
      CALL EDIT.SUB
      BEGIN CASE
      CASE VALUE = "END"
         GOTO 3100
      CASE VALUE = "R"
         IF LN > 1 THEN
            ERRMSG = "Line Reference is valid only for the first column"
            GOSUB 91000; GOTO 3130
         END
      CASE VALUE = "H"
      CASE VALUE = "" AND (OPEN.DATA OR OPEN.XREF)
         IF OPEN.DATA THEN
            FNAME = XRFS.DATA.FILE
         END ELSE
            FNAME = XRFS.XREF.FILE
         END
         MAT GEN.XREF.REC = ""
         IF CPYLIB.CNT THEN
            LIMIT = CPYLIB.CNT
            FOR I = 1 TO LIMIT
               READ DUMMY FROM CPYLIB.FILES(I), FNAME THEN
                  GXR.XREF = CPYLIB.FILES(I)
                  LIMIT = 0
               END
            NEXT I
         END ELSE
            LIMIT = 1
         END
         IF LIMIT THEN
            ERRMSG = "Cannot locate the data structure definition for file ":FNAME
            GOSUB 91000; GOTO 3130
         END
         GXR.NAME = "XREF.CPYLIB"
         GXR.FILE = GXR.XREF
         GXR.SRCH.ID = FNAME
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         OLD.START.LINE = 0
         GOSUB 3900; GOSUB 3950
*         PRINT @(0,SLN) : CL : LN "R#3" :
*         PRINT @(4,SLN) : XRFS.ROW<1,LN> "R#1" :
*         PRINT @(7,SLN) : XRFS.COL<1,LN> "R#2" :
*         PRINT @(11,SLN): XRFS.LEN<1,LN> "R#2" :
*         PRINT @(14,SLN): XRFS.ATT<1,LN> "R#3" :
*         PRINT @(18,SLN): XRFS.MV<1,LN> "R#2" :
*         PRINT @(21,SLN): XRFS.JUSTIFY<1,LN> "L#1" :
*         PRINT @(23,SLN): XRFS.OCONV<1,LN> "L#5" :
P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.ROW<1,LN> "R#1"
P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.COL<1,LN> "R#2"
P_X := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.LEN<1,LN> "R#2"
P_X := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.ATT<1,LN> "R#3"
P_X := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.MV<1,LN> "R#2"
P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.JUSTIFY<1,LN> "R#1"
P_X := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.OCONV<1,LN> "L#5"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         BEGIN CASE
         CASE XRFS.TFUNC<1,LN> # ""
            TEMP = "*"
         CASE XRFS.SUBR<1,LN> # ""
            TEMP = "@"
         CASE 1
            TEMP = ""
         END CASE
*         PRINT @(29,SLN): TEMP "L#1" :
*         PRINT @(31,SLN): XRFS.HEADING<1,LN> "L#48" :
P_X = 29 ; P_Y = SLN ; P_VALUE = TEMP "L#1" ; P_OPT = ""
P_X := AM:31 ; P_Y := AM:SLN ; P_VALUE := AM:XRFS.HEADING<1,LN> "L#48"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 3130
      CASE VALUE = ""
         ERRMSG = "Data file is not defined, cannot utilize cross reference."
         GOSUB 91000; GOTO 3130
      CASE NOT(NUM(VALUE))
         ERRMSG = "** Numeric input required **"
         GOSUB 91000; GOTO 3130
      CASE VALUE < 0 OR VALUE > 150
         ERRMSG = "** Out of range **"
         GOSUB 91000; GOTO 3130
      CASE XRFS.LOC = "A" AND VALUE > 0
         ERRMSG = "Cannot utilize Attributes with location type (A)"
         GOSUB 91000; GOTO 3130
      CASE XRFS.LOC = "M" AND VALUE = 0
         ERRMSG = "Warning !! The Item Id will be displayed on every line"
         GOSUB 91000
      END CASE
      XRFS.ATT<1,LN> = VALUE
3140*
      IF XRFS.ATT<1,LN> = "R" OR XRFS.ATT<1,LN> = "H" OR (XRFS.ATT<1,LN> = 0 AND XRFS.LOC # "A") OR XRFS.LOC = "M" THEN
         VALUE = ""
*         PRINT @(18,SLN):VALUE "R#3":
P_X = 18 ; P_Y = SLN ; P_VALUE = VALUE "R#3" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         X = 18; Y = SLN; TYP = 3; MAXL = 2; O.R = "O"
         IF XRFS.LOC = "A" THEN
            MINV = 1
         END ELSE
            MINV = 0
         END
         MAXV = 99
         BEGIN CASE
         CASE XRFS.MV<1,LN> # ""
            DEFAULT = XRFS.MV<1,LN>
         CASE XRFS.LOC = "A"
            DEFAULT = ""
         CASE 1
            DEFAULT = 1
         END CASE
         HMSG = "Enter field multi-value number."
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
      END
      XRFS.MV<1,LN> = VALUE
3150*
      IF XRFS.ATT<1,LN> = "H" THEN
         VALUE = ""
*         PRINT @(21,SLN): VALUE "L#1" :
P_X = 21 ; P_Y = SLN ; P_VALUE = VALUE "L#1" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         X = 21; Y = SLN; TYP = 1; MAXL = 1; O.R = "O"
         VALDAT = "L":VM:"R"
         HMSG = "Enter field justification (Left or Right)"
         BEGIN CASE
         CASE XRFS.JUSTIFY<1,LN> # ""
            DEFAULT = XRFS.JUSTIFY<1,LN>
         CASE XRFS.ATT<1,LN> = "R"
            DEFAULT = "R"
         CASE 1
            DEFAULT = "L"
         END CASE
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
      END
      XRFS.JUSTIFY<1,LN> = VALUE
3160*
      IF XRFS.ATT<1,LN> = "H" OR XRFS.ATT<1,LN> = "R" THEN
         VALUE = ""
*         PRINT @(23,SLN): VALUE "L#5" :
P_X = 23 ; P_Y = SLN ; P_VALUE = VALUE "L#5" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         X = 23; Y = SLN; TYP = 1; MAXL = 5; O.R = "O"
         IF XRFS.OCONV<1,LN> # "" THEN
            DEFAULT = XRFS.OCONV<1,LN>
         END
         HMSG = "Enter conversion (null, MD2, MD0 ...."
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
      END
      XRFS.OCONV<1,LN> = VALUE
3170*
      BEGIN CASE
      CASE XRFS.ATT<1,LN> = "H" OR XRFS.ATT<1,LN> = "R"
         XRFS.TFUNC<1,LN> = ""; XRFS.SUBR<1,LN> = ""
         VALUE = ""
*         PRINT @(29,SLN): VALUE "L#1" :
P_X = 29 ; P_Y = SLN ; P_VALUE = VALUE "L#1" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 3180
      CASE XRFS.TFUNC<1,LN> # ""
3173*
         X = 0; Y = 21; TYP = 1; MAXL = 45; O.R = "O"
         DEFAULT = XRFS.TFUNC<1,LN>
         PMSG = "Translate function :"
         HMSG = "Enter Translate function e.g TCUSTOMER;X;1;1"
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
         XRFS.TFUNC<1,LN> = VALUE
      CASE XRFS.SUBR<1,LN> # ""
3175*
         X = 0; Y = 21; TYP = 1; MAXL = 45; O.R = "O"
         DEFAULT = XRFS.SUBR<1,LN>
         PMSG = "Subroutine name :"
         HMSG = "Enter the Subroutine name."
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
         XRFS.SUBR<1,LN> = VALUE
      CASE 1
         X = 29; Y = SLN; TYP = 1; MAXL = 1; O.R = "O"
         HMSG = 'Enter "*" for Translate function, "@" for Subroutine, or <RETURN>'
         CALL EDIT.SUB
         BEGIN CASE
         CASE VALUE = "END"
            GOTO 3100
         CASE VALUE = "*"
            GOTO 3173
         CASE VALUE = "@"
            GOTO 3175
         CASE 1
            XRFS.TFUNC<1,LN> = ""; XRFS.SUBR<1,LN> = ""
         END CASE
      END CASE
      BEGIN CASE
      CASE XRFS.TFUNC<1,LN> # ""
*         PRINT @(29,SLN): "*" "L#1" :
P_X = 29 ; P_Y = SLN ; P_VALUE = "*" "L#1" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE XRFS.SUBR<1,LN> # ""
*         PRINT @(29,SLN): "@" "L#1" :
P_X = 29 ; P_Y = SLN ; P_VALUE = "@" "L#1" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE 1
*         PRINT @(29,SLN): " " :
P_X = 29 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END CASE
3180*
*      PRINT @(31,SLN) : CL :
P_X = 31 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF XRFS.ROW<1,LN> > 1 THEN
         VALUE = ""
*         PRINT @(31,SLN): VALUE "L#48" :
P_X = 31 ; P_Y = SLN ; P_VALUE = VALUE "L#48" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         X = 31; Y = SLN; TYP = 1; MAXL = XRFS.LEN<1,LN>
         IF MAXL > 48 THEN MAXL = 48
         IF XRFS.HEADING<1,LN> # "" THEN
            O.R = "O"; DEFAULT = XRFS.HEADING<1,LN>
         END
         HMSG = "Enter column heading"
         CALL EDIT.SUB
         IF VALUE = "END" THEN GOTO 3100
      END
      XRFS.HEADING<1,LN> = VALUE
3199*
      LINES = DCOUNT(XRFS.ROW,VM)
      RETURN
*
*---- Get line number to update
3800*
      GOSUB 3900
      ECD.MINV = START.LINE; ECD.MAXV = LAST.LINE
      ECD.NUM = 33
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
      RETURN
*
*---- Display multi lines
3900*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE -1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN RETURN
      OLD.START.LINE = START.LINE
      ECD.NUM = 29
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
*         PRINT @(0,SSLN) : CL : N "R#3" :
*         PRINT @(4,SSLN) : XRFS.ROW<1,N> "R#1" :
*         PRINT @(7,SSLN) : XRFS.COL<1,N> "R#2" :
*         PRINT @(11,SSLN): XRFS.LEN<1,N> "R#2" :
*         PRINT @(14,SSLN): XRFS.ATT<1,N> "R#3" :
*         PRINT @(18,SSLN): XRFS.MV<1,N> "R#2" :
*         PRINT @(21,SSLN): XRFS.JUSTIFY<1,N> "L#1" :
*         PRINT @(23,SSLN): XRFS.OCONV<1,N> "L#5" :
P_X = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
P_X := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.ROW<1,N> "R#1"
P_X := AM:7 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.COL<1,N> "R#2"
P_X := AM:11 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.LEN<1,N> "R#2"
P_X := AM:14 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.ATT<1,N> "R#3"
P_X := AM:18 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.MV<1,N> "R#2"
P_X := AM:21 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.JUSTIFY<1,N> "R#1"
P_X := AM:23 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.OCONV<1,N> "L#5"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         BEGIN CASE
         CASE XRFS.TFUNC<1,N> # ""
            TEMP = "*"
         CASE XRFS.SUBR<1,N> # ""
            TEMP = "@"
         CASE 1
            TEMP = ""
         END CASE
*         PRINT @(29,SSLN): TEMP "L#1" :
*         PRINT @(31,SSLN): XRFS.HEADING<1,N> "L#48" :
P_X = 29 ; P_Y = SSLN ; P_VALUE = TEMP "L#1" ; P_OPT = ""
P_X := AM:31 ; P_Y := AM:SSLN ; P_VALUE := AM:XRFS.HEADING<1,N> "L#48"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
*         PRINT @(0,SSLN) : CL :
P_X = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- Page numbers
3910*
      ECD.NUM = 29
      SCV.REC(ECD.NUM)<ESN> = INT(LN / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
3950*
      ECD.NUM = 30
      SCV.REC(ECD.NUM)<ESN> = INT(LINES / PAGE.SIZE + .9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*---- Clear Next screen values
4000*
      XRFS.WITH = ""
      XRFS.WITH.ATT = ""
      XRFS.WITH.MV = ""
      XRFS.WITH.EQ = ""
      XRFS.WITH.VAL = ""
      XRFS.WITH.OCONV = ""
      XRFS.SORT.FILE = ""
      XRFS.SORT = ""
      XRFS.SORT.DICT = ""
      XRFS.S.ATT = ""
      XRFS.S.MV = ""
  XRFS.S.LEN = ""
      XRFS.S.JUSTIFY = ""
      XRFS.S.OCONV = ""
      RETURN
*
*---- Error routine
91000*
      ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000*
      ERR.TYPE = 3
      CALL SYSCOM(MAT SYSCOM.REC)
99999END
