      SUBROUTINE MENU.MAIL.MAINT(LEVEL)
*COPY>CPYLIB>COM1
* *COPY>CPYLIB>COMMON3
*COPY>CPYLIB>COM.KSEL
*COPY>CPYLIB>COM.MENU
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE      - CBABP
* PROGRAM     - MENU.MAIL.MAINT
* AUTHOR      - Ziad Yamout, VERCOM Software Inc.
* DATE        - 08/21/90
* DESCRIPTION
* This program is used to view incoming messages and maintain
* messages for subsequent distribution.
*T21177 diane 11/06/1996 * REV11 UPG
********************************************************************
*
*---- Data structure libraries
*
*COPY>PMC.CPYLIB>SECURITY
*COPY>PMC.CPYLIB>USER.MAIL
*COPY>CPYLIB>PORT.CONTROL
*COPY>CPYLIB>TCC
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>ROC.H
*COPY>CPYLIB>SPECIAL.H
      IF PC.PORT.TYPE = "termulator" THEN
         S_PC.PORT.TYPE = PC.PORT.TYPE
         PC.PORT.TYPE = "STD"
         S_GUIFORM = GUIFORM
         GUIFORM = ""
**************8
         TU_FUNC = "TU.FORM.SMARTHOURGLASS":TU_VERNO
         CALL @TU_FUNC("0",ERROR)
*         CALL TU.INIT(ERROR)
*         IF ERROR THEN GOTO 99990
         M_HFORM = ""
         HFORM = 0
         TFILE = "PMCFORMS"
         TNAME = 'CEOSCRN'
         TU_FUNC = "TU.FORM.LOAD":TU_VERNO
         CALL @TU_FUNC(TFILE,TNAME,M_HFORM,"",HFORM,ERROR)
         IF ERROR THEN GOTO 99999
         P_TITLE = "MAIL"
         TU_FUNC = "TU.FORM.SETATTR":TU_VERNO
         CALL @TU_FUNC("","title",P_TITLE<1>,ERROR)
         CALL @TU_FUNC("CEOS1",'enabled',1,ERROR)
         CRT @(-1)
*
****************
      END ELSE
         S_PC.PORT.TYPE = ""
      END
*
      DIM S.SEC.REC(20)
*
*---- Validate the MAIL record
*
      MAIL.ID = USER.CONO : USER.ID
      MATREAD UMSR.REC FROM USER.MAIL, MAIL.ID ELSE MAT UMSR.REC=""
      USER.MSG = SUM(UMSR.TYPE)
      IF NOT(LEVEL) THEN
         GOTO 99999
      END
      IF UMSR.DET<1,1> # "0" THEN
         MATREADU UMSR.REC FROM USER.MAIL, MAIL.ID ELSE MAT UMSR.REC=""
         IF UMSR.DET<1,1> # "0" THEN
            UMSR.DET  = INSERT(UMSR.DET,1,1,0,"0")
            UMSR.SRC  = INSERT(UMSR.SRC,1,1,0,MAIL.ID)
            UMSR.TYPE = INSERT(UMSR.TYPE,1,1,0,"0")
            UMSR.DATE = INSERT(UMSR.DATE,1,1,0,DATE())
            UMSR.TIME = INSERT(UMSR.TIME,1,1,0,TIME())
            UMSR.LIST = INSERT(UMSR.LIST,1,1,0,"")
         END
         MATWRITE UMSR.REC ON USER.MAIL, MAIL.ID
      END
*
*---- Initialization
*
      CURR.NAME = SEC.NAME
      MAT S.SEC.REC = MAT SEC.REC
      MAINT.LEVEL = SEC.MENU.LEVEL
      MCNT = DCOUNT(UMSR.DET,VM)
      ERR.MODE = 0
      MOD.FLAG = 0
      PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
      EDIT.ID = MAIL.ID:PORT.NO
*
      BEGIN.PAGE = 5
      LINE.SPACE = 1
      PAGE.SIZE = 15
      START.LINE = 0
      OLD.START.LINE = 0
*
      BEGIN.UPAGE = 7
      UPAGE.SIZE = 13
*
      DASHES = STR("-",80)
*
*---- Display screen
*
      SCRN = @(-1)
      SCRN = SCRN : @(1,0) : OCONV(DATE(),"D2/")
      SCRN = SCRN : @(27,0): "M E N U   M A I L   B O X"
      SCRN = SCRN : @(71,0): OCONV(TIME(),"MTS")
      SCRN = SCRN : @(0,1) : DASHES
      SCRN = SCRN : @(0,2) : "From :"
      SCRN = SCRN : @(52,2): "Date :"
      SCRN = SCRN : @(0,3) : "To   :"
      SCRN = SCRN : @(49,3): "Message :    of    (        )"
      SCRN = SCRN : @(0,4) : DASHES
      SCRN = SCRN : @(1,20): "( Page    of    ) " : STR("-",38)
      SCRN = SCRN :@(58,20): "( Line     thru     )"
      SCRN = SCRN : @(0,22): DASHES
      PRINT SCRN :
*
      LOCATE "1" IN UMSR.TYPE<1>,1 SETTING MPTR ELSE MPTR = 1
      LN = 1
      GOSUB 9000
      GOSUB 2000
*
*---- Prompt line routine
*
      MORE = 1
      LOOP
         X = 0; Y = 21; TYP = 1; MAXL = 4
         PMSG = "Enter (M),(R),(X),(P),(HC),(H),(W),(A),(I),(C),(D),(S),(F),(E) :"
         HMSG = "Enter (H) for help"
         CALL EDIT.SUB
* INPUT ACTION_
         ACTION = VALUE
         BEGIN CASE
            CASE ACTION = "E" OR ACTION = "END"
               IF MOD.FLAG THEN
                  X = 0; Y = 21; TYP = 8; MAXL = 3
                  PMSG = "Message modified. File (Y/N)"
                  CALL EDIT.SUB
                  IF VALUE = "Y" THEN GOSUB 9200
               END
               MORE = 0
            CASE ACTION[1,1] = "M" AND MCNT > 1
               ERRMSG = ""
               IF MOD.FLAG THEN
                  X = 0; Y = 21; TYP = 8; MAXL = 3
                  PMSG = "Message modified. File (Y/N)"
                  CALL EDIT.SUB
                  IF VALUE = "Y" THEN GOSUB 9200
               END
               SFX = ACTION[2,1]
               PREV.MPTR = MPTR
               BEGIN CASE
                  CASE SFX = "" OR SFX = "F"
                     MPTR = MPTR + 1
                     IF MPTR > MCNT THEN MPTR = 1
                  CASE SFX = "R"
                     MPTR = MPTR - 1
                     IF MPTR < 1 THEN MPTR = MCNT
                  CASE SFX = "T"
                     MPTR = 1
                  CASE SFX = "B"
                     MPTR = MCNT
                  CASE NUM(SFX)
                     IF SFX >= 1 AND SFX <= MCNT THEN MPTR = SFX
               END CASE
               IF MPTR # PREV.MPTR THEN
                  GOSUB 9000
                  GOSUB 2000
               END
            CASE ACTION = "S" OR ACTION = "SF"
               LN = OLD.START.LINE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 1900
            CASE ACTION = "SR"
               LN = OLD.START.LINE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 1900
            CASE ACTION = "ST"
               LN = 1
               GOSUB 1900
            CASE ACTION = "SB"
               LN = LINES
               GOSUB 1900
            CASE ACTION[1,1] = "S" AND NUM(ACTION[2,99])
               LN = ACTION[2,99] + 0
               IF LN < 1 OR LN > LINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  GOSUB 1900
               END
            CASE (ACTION = "ED" OR ACTION = "AE") AND MAINT.LEVEL > 3
               SREC = MREC
               WRITE MREC ON USER.MAIL, EDIT.ID
               PRINT @(-1)
               PERFORM ACTION:" USER.MAIL ":EDIT.ID
               READU MREC FROM USER.MAIL, EDIT.ID THEN
                  DELETE USER.MAIL, EDIT.ID
               END ELSE
                  MREC = ""
                  RELEASE USER.MAIL, EDIT.ID
               END
               IF MREC # SREC THEN MOD.FLAG = 1
               PRINT SCRN :
               GOSUB 2000
               ERR.MODE = 0
               FOR M = 1 TO LINES
                  IF LEN(MREC<M>) > 75 THEN
                     MREC<M> = MREC<M>[1,75]
                     ERR.MODE = ERR.MODE + 1
                  END
               NEXT M
               GOSUB 80000
            CASE ACTION = "F"
               GOSUB 9200
* MORE = 0
            CASE ACTION = "A"
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 1000
               WHILE LINES > OLD.LINES DO
                  GOSUB 1910
               REPEAT
               LN = LINES; GOSUB 1900
            CASE ACTION = "I"
               GOSUB 1800
               IF LN.NO THEN
                  SREC = ""
                  LIMIT = LN.NO
                  FOR I = LINES TO LIMIT STEP -1
                     INS MREC<I> BEFORE SREC<1>
                     MREC = DELETE(MREC,I,0,0)
                  NEXT I
                  LINES = LN.NO-1; OLD.START.LINE = 0
                  ACTION = "A"
                  LOOP
                     LN = LINES + 1
                     OLD.LINES = LINES
                     GOSUB 1000
                  WHILE LINES > OLD.LINES DO
                     GOSUB 1910
                  REPEAT
                  LN = LINES
                  LINES = DCOUNT(SREC,AM)
                  FOR I = 1 TO LINES
                     MREC<-1> = SREC<I>
                  NEXT I
                  SREC = ""
                  LINES = DCOUNT(MREC,AM); OLD.START.LINE = 0
                  GOSUB 1900
               END
            CASE ACTION = "C"
               GOSUB 1800
               IF LN.NO THEN
                  LN = LN.NO
                  GOSUB 1000
               END
            CASE ACTION = "D"
               GOSUB 1800
               IF LN.NO THEN
                  LN = LN.NO
                  MREC = DELETE(MREC,LN,0,0)
                  LINES = DCOUNT(MREC,AM)
                  IF LN > 1 AND LN > LINES THEN LN = LN - 1
                  IF LN < 1 THEN LN = 1
                  OLD.START.LINE = 0; GOSUB 1900
                  MOD.FLAG = 1
               END
            CASE ACTION = "R"
               MATREADU UMSR.REC FROM USER.MAIL, MAIL.ID ELSE MAT UMSR.REC=""
               UMSR.TYPE<1,MPTR> = 0
               MATWRITE UMSR.REC ON USER.MAIL, MAIL.ID
               USER.MSG = SUM(UMSR.TYPE)
               M.STATUS = "RECEIVED"
               S.L = 8; B.L = INT((8-S.L)/2)
               PRINT @(69,3): SPACE(B.L):M.STATUS:SPACE(8-S.L-B.L)
            CASE ACTION = "W"
               UPD.LIST = 0; GOSUB 10000
               OLD.START.LINE = 0; GOSUB 1900
               GOSUB 2000
            CASE ACTION = "X" AND LINES < 1
               ERRMSG = "Cannot send an empty mail message!!"
               GOSUB 91000
            CASE ACTION = "X"
               UPD.LIST = 1; GOSUB 10000
               IF DLIST # "" THEN
                  MDATE = DATE()
                  MTIME = TIME()
                  IF MTIME < 30 THEN MDATE = DATE() + 1
                  MATREADU UMSR.REC FROM USER.MAIL, MAIL.ID ELSE
                     MAT UMSR.REC = ""
                  END
                  UMSR.SEQ = UMSR.SEQ + 1
                  IF UMSR.SEQ > 9999 THEN UMSR.SEQ = 1
                  MCNT = DCOUNT(UMSR.DET,VM) + 1
                  UMSR.DET<1,MCNT>  = UMSR.SEQ
                  UMSR.SRC<1,MCNT>  = MAIL.ID
                  UMSR.TYPE<1,MCNT> = 0
                  UMSR.LIST<1,MCNT> = UMSR.SEQ
                  UMSR.DATE<1,MCNT> = MDATE
                  UMSR.TIME<1,MCNT> = MTIME
                  IF MPTR = 1 THEN
                     LIST.ID = MAIL.ID:"!":UMSR.DET<1,1>
                     UMSR.DATE<1,1> = ""
                     UMSR.TIME<1,1> = ""
                     UMSR.LIST<1,1> = ""
                     DELETE USER.MAIL, LIST.ID
                  END ELSE
                     UMSR.TYPE<1,MPTR> = 0
                  END
                  LIST.ID = MAIL.ID:"!":UMSR.SEQ
                  WRITE MREC ON USER.MAIL, LIST.ID
                  MATWRITE UMSR.REC ON USER.MAIL, MAIL.ID
                  WRITE DLIST ON USER.MAIL, "L!":LIST.ID
*
                  LOCATE MAIL.ID IN DLIST,1 SETTING FND THEN
*                     DEL DLIST<FND>
                     DLIST = DELETE(DLIST,FND,0,0)
                  END
                  DCNT = DCOUNT(DLIST,AM)
                  FOR DPTR = 1 TO DCNT
                     MATREADU UMDR.REC FROM USER.MAIL, DLIST<DPTR> ELSE
                        MAT UMDR.REC = ""
                     END
                     UMDR.SEQ = UMDR.SEQ + 1
                     IF UMDR.SEQ > 9999 THEN UMDR.SEQ = 1
                     MP = DCOUNT(UMDR.DET,VM) + 1
                     UMDR.DET<1,MP>  = UMDR.SEQ
                     UMDR.SRC<1,MP>  = MAIL.ID
                     UMDR.TYPE<1,MP> = 1
                     UMDR.LIST<1,MP> = UMSR.SEQ
                     UMDR.DATE<1,MP> = MDATE
                     UMDR.TIME<1,MP> = MTIME
                     MATWRITE UMDR.REC ON USER.MAIL, DLIST<DPTR>
                     WRITE MREC ON USER.MAIL, DLIST<DPTR>:"!":UMDR.SEQ
                  NEXT DPTR
                  PRINT @(0,23):@(-4):"** Distribution Complete **":
                  MOD.FLAG = 0
                  USER.MSG = SUM(UMSR.TYPE)
                  MPTR = MCNT
               END
               GOSUB 2000
            CASE ACTION = "P"
               X=0;Y=21;TYP=8;MAXL=3
               PMSG="Purge Message (Y/N)"
               CALL EDIT.SUB
               IF VALUE = "Y" THEN
                  GOSUB 9500
                  IF MPTR > MCNT THEN MPTR = MCNT
                  GOSUB 9000
                  GOSUB 2000
               END
            CASE ACTION = "HC"
               GOSUB 88000
               PRINT @(0,23):@(-4):"Printing Complete":
            CASE ACTION = "H"
               GOSUB 20100
               GOSUB 20000
               OLD.START.LINE = 0; GOSUB 1900
            CASE 1
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
         END CASE
      WHILE MORE DO REPEAT
      MAT SEC.REC = MAT S.SEC.REC
      GOTO 99999
*
*---- Multi line prompt routine
1000*
      GOSUB 1900
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      PRINT @(0,SLN) : @(-4) : LN "R#3" :
*
*---- Get line
1010*
      X = 4; Y = SLN; TYP = 1; MAXL = 75; O.R = "O"
      IF MREC<LN> # "" THEN
         DEFAULT = MREC<LN>
      END
      CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE = "END" AND ACTION = "A"
            MREC = DELETE(MREC,LN,0,0)
            PRINT @(0,SLN) : @(-4) :
            GOTO 1099
         CASE VALUE = "END"
            PRINT @(0,SLN) : @(-4) :
            PRINT @(4,SLN) : MREC<LN> "L#75" :
            GOTO 1099
         CASE VALUE = "-" OR VALUE = "="
            VALUE = STR(VALUE,75)
            CRT @(4,SLN):VALUE "L#75":
      END CASE
      MREC<LN> = VALUE
      MOD.FLAG = 1
      LINES = DCOUNT(MREC,AM)
1099*
      RETURN
*
*---- Get line number
1800*
      GOSUB 1900
      X = 0; Y = 21; TYP = 3; MAXL = 3; O.R = "O"; JUSTIFY = "L"
      MINV = OLD.START.LINE; MAXV = LAST.LINE
      PMSG = "Enter Line Number :"
      HMSG = "Select a line number from the diplayed range"
      CALL EDIT.SUB
      LN.NO = VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      RETURN
*
*---- Scrolling Routine
1900*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN GOTO 1910
      OLD.START.LINE = START.LINE
      SLN = BEGIN.PAGE
      FOR N = START.LINE TO LAST.LINE
         PRINT @(0,SLN) : @(-4) : N "R#3" :
         PRINT @(4,SLN) : MREC<N> :
         SLN = SLN + LINE.SPACE
      NEXT N
      FOR SLN = SLN TO BEGIN.PAGE+PAGE.SIZE-1
         PRINT @(0,SLN) : @(-4) :
      NEXT M
*
*---- Display lines & pages
1910*
      IF LINES = 0 THEN
         F.P = 1; L.P = 1
      END ELSE
         F.P = INT(LAST.LINE/PAGE.SIZE+.99)
         L.P = INT(LINES/PAGE.SIZE+.99)
      END
      PRINT @(8,20) : F.P "R#2" :
      PRINT @(14,20) : L.P "R#2" :
      IF LAST.LINE THEN
         F.L = START.LINE
      END ELSE
         F.L = LAST.LINE
      END
      PRINT @(65,20): F.L "R#3" :
      PRINT @(74,20): LAST.LINE "R#3" :
      RETURN
*
*---- Display message first page
2000*
      BEGIN CASE
         CASE MPTR = 1
            PRINT @(7,2) : "*** S C R A T C H   P A D ***" "L#40" :
            DLIST = ""
         CASE 1
            SRC.ID = UMSR.SRC<1,MPTR>
            GOSUB 2900
            PRINT @(7,2) : PLINE "L#40" :
            READ DLIST FROM USER.MAIL, "L!":UMSR.SRC<1,MPTR>:"!":UMSR.LIST<1,MPTR> ELSE
               DLIST = ""
            END
      END CASE
      PRINT @(59,2): OCONV(UMSR.DATE<1,MPTR>,"D2/") :
      PRINT @(69,2): OCONV(UMSR.TIME<1,MPTR>,"MTS") :
      DCNT = DCOUNT(DLIST,AM)
      BEGIN CASE
         CASE DCNT < 1
            PLINE = "** In Process **"
         CASE DCNT = 1
            SRC.ID = DLIST<1>
            GOSUB 2900
         CASE 1
            PLINE = "Multiple (":DCNT:")"
      END CASE
      PRINT @(7,3) : PLINE "L#40" :
      PRINT @(59,3): MPTR "R#2" :
      PRINT @(65,3): MCNT "R#2" :
      IF UMSR.TYPE<1,MPTR> THEN
         M.STATUS = "NEW"
      END ELSE
         M.STATUS = "RECEIVED"
      END
      S.L = LEN(M.STATUS); B.L = INT((8-S.L)/2)
      PRINT @(69,3): SPACE(B.L):M.STATUS:SPACE(8-S.L-B.L)
      LN = 1; LINES = DCOUNT(MREC,AM)
      OLD.START.LINE = 0; GOSUB 1900
      RETURN
2900*
      SRC.CONO = SRC.ID[1,3]
      IF SRC.CONO = USER.CONO THEN
         PLINE = "(":SRC.ID[4,99]:")"
      END ELSE
         PLINE = "(":SRC.CONO:",":SRC.ID[4,99]:")"
      END
      IF SRC.ID = MAIL.ID THEN
         PLINE = PLINE:" ":CURR.NAME
      END ELSE
         MATREAD SEC.REC FROM SECURITY, SRC.ID THEN
            PLINE = PLINE:" ":SEC.NAME
         END ELSE
            PLINE = PLINE:" ** Not On File **"
         END
      END
      RETURN
*
*---- Get Message
9000*
      READ MREC FROM USER.MAIL, MAIL.ID:"!":UMSR.DET<1,MPTR> ELSE MREC = ""
      MOD.FLAG = 0
      RETURN
*
*---- Update Message
9200*
      MDATE = DATE()
      MTIME = TIME()
      IF MTIME < 30 THEN MDATE = DATE() + 1
      MATREADU UMSR.REC FROM USER.MAIL, MAIL.ID ELSE MAT UMSR.REC=""
      MCNT = DCOUNT(UMSR.DET,VM)
      UMSR.DATE<1,MPTR> = MDATE
      UMSR.TIME<1,MPTR> = MTIME
      MATWRITE UMSR.REC ON USER.MAIL, MAIL.ID
      WRITE MREC ON USER.MAIL, MAIL.ID:"!":UMSR.DET<1,MPTR>
      MOD.FLAG = 0
      USER.MSG = SUM(UMSR.TYPE)
      RETURN
*
*---- Delete Message
9500*
      MID = UMSR.DET<1,MPTR>
      DELETE USER.MAIL, MAIL.ID:"!":MID
      MATREADU UMSR.REC FROM USER.MAIL, MAIL.ID ELSE MAT UMSR.REC=""
      MCNT = DCOUNT(UMSR.DET,VM)
      PLIST.ID = ""
      BEGIN CASE
         CASE MPTR = 1
            UMSR.DATE<1,1> = ""
            UMSR.TIME<1,1> = ""
            UMSR.LIST<1,1> = ""
         CASE 1
            LOCATE MID IN UMSR.DET<1>,1 SETTING MP THEN
               PSRC = UMSR.SRC<1,MP>; PLST = UMSR.LIST<1,MP>
               PLIST.ID = "L!":PSRC:"!":PLST
               UMSR.DET  = DELETE(UMSR.DET,1,MP,0)
               UMSR.SRC  = DELETE(UMSR.SRC,1,MP,0)
               UMSR.TYPE = DELETE(UMSR.TYPE,1,MP,0)
               UMSR.DATE = DELETE(UMSR.DATE,1,MP,0)
               UMSR.TIME = DELETE(UMSR.TIME,1,MP,0)
               UMSR.LIST = DELETE(UMSR.LIST,1,MP,0)
               MCNT = MCNT - 1
            END
      END CASE
      MATWRITE UMSR.REC ON USER.MAIL, MAIL.ID
      MOD.FLAG = 0
      USER.MSG = SUM(UMSR.TYPE)
      IF PLIST.ID # "" THEN
         READU PLIST FROM USER.MAIL, PLIST.ID THEN
            LIMIT = DCOUNT(PLIST,AM)
            FOR PL = 1 TO LIMIT
               MATREAD UMDR.REC FROM USER.MAIL, PLIST<PL> THEN
                  P = 1
                  LOOP
                     LOCATE PSRC IN UMDR.SRC<1>,P SETTING FND THEN
                        IF PLST = UMDR.LIST<1,FND> THEN
                           LIMIT = 0; P = 0
                        END
                     END ELSE
                        P = 0
                     END
                  WHILE P DO
                     P = FND + 1
                  REPEAT
               END
            NEXT PL
            IF LIMIT THEN
               DELETE USER.MAIL, PLIST.ID
            END ELSE
               RELEASE USER.MAIL, PLIST.ID
            END
         END ELSE
            RELEASE USER.MAIL, PLIST.ID
         END
      END
      RETURN
*
*---- Users List
10000*
      HD1 = "Ln  User ID            User Name"
      HD2 = "--- -------- ------------------------------"
      IF UPD.LIST THEN
         I.PMSG = "Enter List name, (A), (C), (I), (D), (S), (U), (UL), (CL), (H), (E) :"
      END ELSE
         HD1=HD1:"             Status"
         HD2=HD2:" --------"
         I.PMSG = "Enter (S)croll, (H)elp, (E)nd :"
      END
      PRINT @(0,5) :HD1:CL:
      PRINT @(0,6) :HD2:CL:
*
      IF MPTR = 1 THEN
         DLIST = ""
      END ELSE
         READ DLIST FROM USER.MAIL, "L!":UMSR.SRC<1,MPTR>:"!":UMSR.LIST<1,MPTR> THEN
            IF UPD.LIST THEN
               LOCATE MAIL.ID IN DLIST,1 SETTING FND THEN
*                  DEL DLIST<FND>
                  DLIST = DELETE(DLIST,FND,0,0)
               END
            END
         END ELSE
            DLIST = ""
         END
      END
      START.ULINE = 0; OLD.START.ULINE = 0
      ULN = 1; ULINES = DCOUNT(DLIST,AM)
      GOSUB 10900
*
      ANCORE = 1
      LOOP
         X = 0; Y = 21; TYP = 1; MAXL = 8
         PMSG = I.PMSG
         HMSG = "Enter (H) for Help"
         CALL EDIT.SUB
         RESP = VALUE
         BEGIN CASE
            CASE RESP = "E" OR RESP = "END"
               DLIST = ""
               ANCORE = 0
            CASE RESP = "S" OR RESP = "SF"
               ULN = OLD.START.ULINE + UPAGE.SIZE
               IF ULN > ULINES THEN ULN = 1
               GOSUB 10900
            CASE RESP = "SR"
               ULN = OLD.START.ULINE - UPAGE.SIZE
               IF ULN < 1 THEN ULN = 1
               GOSUB 10900
            CASE RESP = "ST"
               ULN = 1
               GOSUB 10900
            CASE RESP = "SB"
               ULN = ULINES
               GOSUB 10900
            CASE RESP[1,1] = "S" AND NUM(RESP[2,99])
               ULN = RESP[2,99] + 0
               IF ULN < 1 OR ULN > ULINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  GOSUB 10900
               END
            CASE RESP = "H"
               IF UPD.LIST THEN
                  GOSUB 20200
               END ELSE
                  GOSUB 20300
               END
               GOSUB 20000
               PRINT @(0,5) :HD1:CL:
               PRINT @(0,6) :HD2:CL:
               OLD.START.ULINE = 0; GOSUB 10900
            CASE NOT(UPD.LIST)
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            CASE RESP = "U"
               LOCATE MAIL.ID IN DLIST,1 SETTING FND ELSE
                  DLIST<FND> = MAIL.ID
               END
               ANCORE = 0
            CASE RESP[1,1] = "."
               READ SLIST FROM USER.MAIL, "L!":RESP[2,99] THEN
                  LOCATE MAIL.ID IN SLIST,1 SETTING FND THEN
*                     DEL SLIST<FND>
                     DLIST = DELETE(SLIST,FND,0,0)
                  END
                  CNT = DCOUNT(SLIST,AM)
                  FOR I = 1 TO CNT
                     LOCATE SLIST<I> IN DLIST,1 SETTING FND ELSE
                        DLIST<FND> = SLIST<I>
                     END
                  NEXT I
                  OLD.START.ULINE = 0; ULINES = DCOUNT(DLIST,AM)
                  GOSUB 10900
               END ELSE
                  ERRMSG = "Cannot locate users list - ":RESP[2,99]
                  GOSUB 91000
               END
            CASE RESP = "CL"
               DLIST = ""; ULINES = 0
               OLD.START.ULINE = 0; ULN = 1; GOSUB 10900
            CASE RESP = "A"
               LOOP
                  ULN = ULINES + 1
                  OLD.ULINES = ULINES
                  GOSUB 10100
               WHILE ULINES > OLD.ULINES DO
                  GOSUB 10910
               REPEAT
               ULN = ULINES; GOSUB 10900
            CASE RESP = "I"
               GOSUB 10800
               IF ULN.NO THEN
                  SLIST = ""
                  LIMIT = ULN.NO
                  FOR I = ULINES TO LIMIT STEP -1
                     INS DLIST<I> BEFORE SLIST<1>
                     DLIST = DELETE(DLIST,I,0,0)
                  NEXT I
                  ULINES = ULN.NO-1; OLD.START.ULINE = 0
                  RESP = "A"
                  LOOP
                     ULN = ULINES + 1
                     OLD.ULINES = ULINES
                     GOSUB 10100
                  WHILE ULINES > OLD.ULINES DO
                     GOSUB 10910
                  REPEAT
                  ULN = ULINES
                  ULINES = DCOUNT(SLIST,AM)
                  FOR I = 1 TO ULINES
                     DLIST<-1> = SLIST<I>
                  NEXT I
                  SLIST = ""
                  ULINES = DCOUNT(DLIST,AM); OLD.START.ULINE = 0
                  GOSUB 10900
               END
            CASE RESP = "C"
               GOSUB 10800
               IF ULN.NO THEN
                  ULN = ULN.NO
                  GOSUB 10100
               END
            CASE RESP = "D"
               GOSUB 10800
               IF ULN.NO THEN
                  ULN = ULN.NO
                  DLIST = DELETE(DLIST,ULN,0,0)
                  ULINES = DCOUNT(DLIST,AM)
                  IF ULN > 1 AND ULN > ULINES THEN ULN = ULN - 1
                  IF ULN < 1 THEN ULN = 1
                  OLD.START.ULINE = 0; GOSUB 10900
               END
            CASE RESP = "UL"
               X = 0; Y = 21; TYP = 1; MAXL = 8
               PMSG = "Enter list name :"
               HMSG = "Enter users list name."
               CALL EDIT.SUB
               IF VALUE # "END" THEN
                  READU SLIST FROM USER.MAIL, "L!":VALUE ELSE NULL
                  LOCATE MAIL.ID IN DLIST,1 SETTING FND THEN
                     FND = 0
                  END ELSE
                     DLIST<FND> = MAIL.ID
                  END
                  WRITE DLIST ON USER.MAIL, "L!":VALUE
                  IF FND THEN
*                     DEL DLIST<FND>
                     DLIST = DELETE(DLIST,FND,0,0)
                  END
               END
            CASE 1
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
         END CASE
      WHILE ANCORE DO REPEAT
      RETURN
*
*---- Get User ID
10100*
      GOSUB 10900
      SULN = BEGIN.UPAGE + LINE.SPACE * MOD(ULN-1,UPAGE.SIZE)
      PRINT @(0,SULN) : @(-4) : ULN "R#3" :
10110*
      X = 4; Y = SULN; TYP = 1; MAXL = 8
      HMSG = "Enter user ID."
      IF DLIST<ULN> # "" THEN
         O.R = "O"; DEFAULT = DLIST<ULN>[4,99]
      END
      CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE = "END" AND RESP = "A"
            DLIST = DELETE(DLIST,ULN,0,0)
            PRINT @(0,SULN) : @(-4) :
            GOTO 10199
         CASE VALUE = "END"
            N = ULN; GOSUB 10950
            GOTO 10199
      END CASE
      U.ID = USER.CONO:VALUE
      IF U.ID = MAIL.ID THEN
         ERRMSG = "The sender will be included in the distribution list"
         GOSUB 91000; GOTO 10110
      END
      LOCATE U.ID IN DLIST,1 SETTING FND ELSE FND = ULN
      IF FND # ULN THEN
         ERRMSG = "User already exists on line # ":FND
         GOSUB 91000; GOTO 10110
      END
      MATREAD SEC.REC FROM SECURITY, U.ID ELSE
         ERRMSG = "Cannot locate user - ":VALUE
         GOSUB 91000; GOTO 10110
      END
      PRINT @(13,SULN):SEC.NAME "L#30":
      DLIST<ULN> = U.ID
      ULINES = DCOUNT(DLIST,AM)
10199*
      RETURN
*
*---- Get line number
10800*
      GOSUB 10900
      X = 0; Y = 21; TYP = 3; MAXL = 3; O.R = "O"; JUSTIFY = "L"
      MINV = OLD.START.ULINE; MAXV = LAST.ULINE
      PMSG = "Enter Line Number :"
      HMSG = "Select a line number from the diplayed range"
      CALL EDIT.SUB
      ULN.NO = VALUE
      IF ULN.NO = "" OR ULN.NO = "END" THEN ULN.NO = 0
      RETURN
*
*---- Scrolling Routine
10900*
      START.ULINE = 1 + INT((ULN-1)/UPAGE.SIZE)*UPAGE.SIZE
      LAST.ULINE = START.ULINE + UPAGE.SIZE - 1
      IF LAST.ULINE > ULINES THEN LAST.ULINE = ULINES
      IF START.ULINE = OLD.START.ULINE THEN GOTO 10910
      OLD.START.ULINE = START.ULINE
      SULN = BEGIN.UPAGE
      IF UPD.LIST THEN
         FOR N = START.ULINE TO LAST.ULINE
            GOSUB 10950
            SULN = SULN + LINE.SPACE
         NEXT N
      END ELSE
         FOR N = START.ULINE TO LAST.ULINE
            GOSUB 10970
            SULN = SULN + LINE.SPACE
         NEXT N
      END
      FOR SULN = SULN TO BEGIN.UPAGE+UPAGE.SIZE-1
         PRINT @(0,SULN) : @(-4) :
      NEXT M
*
*---- Display lines & pages
10910*
      IF ULINES = 0 THEN
         F.P = 1; L.P = 1
      END ELSE
         F.P = INT(LAST.ULINE/UPAGE.SIZE+.99)
         L.P = INT(ULINES/UPAGE.SIZE+.99)
      END
      PRINT @(8,20) : F.P "R#2" :
      PRINT @(14,20) : L.P "R#2" :
      IF LAST.ULINE THEN
         F.L = START.ULINE
      END ELSE
         F.L = LAST.ULINE
      END
      PRINT @(65,20): F.L "R#3" :
      PRINT @(74,20): LAST.ULINE "R#3" :
      RETURN
*
10950*
      PRINT @(0,SULN) : @(-4) : N "R#3" :
      PRINT @(4,SULN) : DLIST<N>[4,99] "L#8":
      MATREAD SEC.REC FROM SECURITY, DLIST<N> ELSE
         SEC.NAME = "Unknown"
      END
      PRINT @(13,SULN): SEC.NAME "L#30" :
      RETURN
*
10970*
      PRINT @(0,SULN) : @(-4) : N "R#3" :
      PRINT @(4,SULN) : DLIST<N>[4,99] "L#8":
      MATREAD SEC.REC FROM SECURITY, DLIST<N> ELSE
         SEC.NAME = "Unknown"
      END
      PRINT @(13,SULN): SEC.NAME "L#30" :
      IF DLIST<N> = UMSR.SRC<1,MPTR> THEN
         MSTAT = "Sender"
      END ELSE
         MATREAD UMDR.REC FROM USER.MAIL, DLIST<N> THEN
            P = 1
            LOOP
               LOCATE UMSR.SRC<1,MPTR> IN UMDR.SRC<1>,P SETTING FND THEN
                  IF UMDR.LIST<1,FND> = UMSR.LIST<1,MPTR> THEN
                     IF UMDR.TYPE<1,FND> THEN
                        MSTAT = "New"
                     END ELSE
                        MSTAT = "Received"
                     END
                     P = 0
                  END
               END ELSE
                  MSTAT = "Purged"
                  P = 0
               END
            WHILE P DO
               P = FND + 1
            REPEAT
         END ELSE
            MSTAT = "Purged"
         END
      END
      PRINT @(44,SULN): MSTAT "L#8" :
      RETURN
*
*---- Help messages
20000*
      PRINT @(0,5) :"Ln                                Description":CL:
      PRINT @(0,6) :"--- ----------------------------------------------------------------------":CL:
*
      START.HLINE = 0; OLD.START.HLINE = 0
      HLN = 1; GOSUB 20900
*
      REQUEST = 1
      LOOP
         X = 0; Y = 21; TYP = 1; MAXL = 8
         PMSG = "Enter (S)croll, or (E)nd :"
         HMSG = "Enter (S) to scroll, or (E) to end help."
         CALL EDIT.SUB
         RESP = VALUE
         BEGIN CASE
            CASE RESP = "E" OR RESP = "END"
               REQUEST = 0
            CASE RESP = "S" OR RESP = "SF"
               HLN = OLD.START.HLINE + UPAGE.SIZE
               IF HLN > HLINES THEN HLN = 1
               GOSUB 20900
            CASE RESP = "SR"
               HLN = OLD.START.HLINE - UPAGE.SIZE
               IF HLN < 1 THEN HLN = 1
               GOSUB 20900
            CASE RESP = "ST"
               HLN = 1
               GOSUB 20900
            CASE RESP = "SB"
               HLN = HLINES
               GOSUB 20900
            CASE RESP[1,1] = "S" AND NUM(RESP[2,99])
               HLN = RESP[2,99] + 0
               IF HLN < 1 OR HLN > HLINES THEN
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               END ELSE
                  GOSUB 20900
               END
            CASE 1
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
         END CASE
      WHILE REQUEST DO REPEAT
      RETURN
*
20100*
      DHMSG    = "(M)essage- View aditional messages."
      DHMSG<2> = "           (M)  - Display next message and wrap to first at end."
      DHMSG<3> = "           (MF) - Display next message."
      DHMSG<4> = "           (MR) - Display previous message."
      DHMSG<5> = "           (MT) - Display first message (Scratch Pad)."
      DHMSG<6> = "           (MB) - Display last message."
      DHMSG<7> = "           (Mn) - Display message (n)."
      HLINES = 7
      HSRC = "message"; GOSUB 21000
      DHMSG<HLINES+2> = "           A line with one character of a single (-) or (=)"
      DHMSG<HLINES+3> = "           will be filled with the character entered."
      HLINES = HLINES + 3
      GOSUB 22000
      DHMSG<HLINES+2> = "(R)eceive- Flag message as received."
      DHMSG<HLINES+4> = "(HC)     - Print a hard copy of message on printer."
      DHMSG<HLINES+6> = "(P)urge  - Purge display message."
      DHMSG<HLINES+8> = "(W)ho    - Display distribution list for displayed message."
      DHMSG<HLINES+10>= "(X)mit   - Send displayed message."
      DHMSG<HLINES+11>= "           New screen will display.  Enter initials of employee(s) to"
      DHMSG<HLINES+12>= "           receive message or enter list name for broadcasting"
      DHMSG<HLINES+13>= "           message to group of employees."
      DHMSG<HLINES+15>= "(F)ile   - Save scratch pad data and terminate session."
      DHMSG<HLINES+17>= "(E)xit   - Terminate session."
      HLINES = HLINES + 17
      RETURN
*
20200*
      DHMSG    = "List Name-  To select a group of pre-defined users.  The list"
      DHMSG<2> = "            name must be preceeded by a period."
      DHMSG<4> = "            If (ALL) was utilized as a list name, all users"
      DHMSG<5> = "            will be selected."
      HLINES = 5
      HSRC = "user ID"; GOSUB 21000
      GOSUB 22000
      DHMSG<HLINES+2> = "Clr List - Re-initialize the current users ID list."
      DHMSG<HLINES+4> = "(U)pdate - Invoke message distribution to users on list."
      DHMSG<HLINES+6> = "Upd List - Update the current users ID list."
      DHMSG<HLINES+8> = "(E)nd    - Exit without distributing the message."
      HLINES = HLINES + 8
      RETURN
*
20300*
      DHMSG = ""; HLINES = -1
      HSRC = "user ID"; GOSUB 22000
      HLINES = HLINES + 2
      DHMSG<HLINES> = "(E)nd    - Exit back to message."
      RETURN
*
*---- Scrolling Routine
20900*
      START.HLINE = 1 + INT((HLN-1)/UPAGE.SIZE)*UPAGE.SIZE
      LAST.HLINE = START.HLINE + UPAGE.SIZE - 1
      IF LAST.HLINE > HLINES THEN LAST.HLINE = HLINES
      IF START.HLINE = OLD.START.HLINE THEN GOTO 20910
      OLD.START.HLINE = START.HLINE
      SHLN = BEGIN.UPAGE
      FOR N = START.HLINE TO LAST.HLINE
         PRINT @(0,SHLN) : @(-4) : N "R#3" :
         PRINT @(5,SHLN) : DHMSG<N> "L#70":
         SHLN = SHLN + LINE.SPACE
      NEXT N
      FOR SHLN = SHLN TO BEGIN.UPAGE+UPAGE.SIZE-1
         PRINT @(0,SHLN) : @(-4) :
      NEXT M
*
*---- Display lines & pages
20910*
      IF HLINES = 0 THEN
         F.P = 1; L.P = 1
      END ELSE
         F.P = INT(LAST.HLINE/UPAGE.SIZE+.99)
         L.P = INT(HLINES/UPAGE.SIZE+.99)
      END
      PRINT @(8,20) : F.P "R#2" :
      PRINT @(14,20) : L.P "R#2" :
      IF LAST.HLINE THEN
         F.L = START.HLINE
      END ELSE
         F.L = LAST.HLINE
      END
      PRINT @(65,20): F.L "R#3" :
      PRINT @(74,20): LAST.HLINE "R#3" :
      RETURN
*
21000*
      DHMSG<HLINES+2> = "(A)dd    - Add ":HSRC:" line at end of existing lines."
      DHMSG<HLINES+4> = "(C)hange - Change ":HSRC:" line."
      DHMSG<HLINES+5> = "           Will prompt for the line to be changed.  The line entered"
      DHMSG<HLINES+6> = "           must be visible on the screen.  The line may then be"
      DHMSG<HLINES+7> = "           re-typed."
      DHMSG<HLINES+9> = "(D)elete - Delete ":HSRC:" line."
      DHMSG<HLINES+10>= "           Will prompt for the line to be deleted.  The line number"
      DHMSG<HLINES+11>= "           entered must be visible on the screen."
      DHMSG<HLINES+13>= "(I)nsert - Insert new ":HSRC:" line."
      DHMSG<HLINES+14>= "           Will prompt for the line number to be inserted.  The line"
      DHMSG<HLINES+15>= "           number entered must be visible on the screen."
      HLINES = HLINES + 15
      RETURN
*
22000*
      DHMSG<HLINES+2>= "(S)croll - Scroll current ":HSRC:" to view additional lines."
      DHMSG<HLINES+3>= "           (S)  - Scroll forward and wrap to first page at end."
      DHMSG<HLINES+4>= "           (SF) - Scroll forward with no wrap on last page."
      DHMSG<HLINES+5>= "           (SR) - Scroll reverse with no wrap on first page."
      DHMSG<HLINES+6>= "           (ST) - Scroll to top of ":HSRC:"."
      DHMSG<HLINES+7>= "           (SB) - Scroll to bottom of ":HSRC:"."
      DHMSG<HLINES+8>= "           (Sn) - Display line (n) at top of screen."
      HLINES = HLINES + 8
      RETURN
*
*---- Truncate message
80000*
      BEGIN CASE
         CASE ERR.MODE < 1
         CASE ERR.MODE = 1
            ERRMSG = "TRUNCATED !! (":ERR.MODE:") line exceeded maximum length"
            GOSUB 91000
         CASE 1
            ERRMSG = "TRUNCATED !! (":ERR.MODE:") lines exceeded maximum length"
            GOSUB 91000
      END CASE
      RETURN
*
*---- Send Message to Printer
88000*
* PRINT @(0,23):@(-4):"Spooler Queue - ":
* INPUT PQUEUE:
* IF PQUEUE # "" THEN
* PERFORM "SP-ASSIGN =":PQUEUE CAPTURING PMSG
* END
      PRINTER ON
      DLINE = STR("-",72)
      PLM = " "
      PRINT CHAR(12):
      PRINT DLINE
      PLINE=SPACE(28):"M E S S A G E"
      PRINT PLM:PLINE
      PRINT
      IF MPTR = 1 THEN
         SRC.ID = MAIL.ID
      END ELSE
         SRC.ID = UMSR.SRC<1,MPTR>
      END
      GOSUB 2900
      PLINE="From: ":PLINE
      PLINE=PLINE"L#56":"Date: ":OCONV(UMSR.DATE<1,MPTR>,"D2-")
      PRINT PLM:PLINE
      PRINT
      PLINE="To  : "
      PLINE=PLINE"L#56":"Time: ":OCONV(UMSR.TIME<1,MPTR>,"MTS")
      PRINT PLM:PLINE
      PRINT
      PRINT DLINE
      PRINT
      PLINE.CNT = 9
      FOR REF = 1 TO LINES
         IF PLINE.CNT > 58 THEN
            PRINT
            PRINT PLM:"(Continued on next page)":
            PRINT CHAR(12):
            PLINE.CNT = 0
         END
         PRINT PLM:MREC<REF>
         PLINE.CNT = PLINE.CNT + 1
      NEXT REF
      PRINT
      PRINT DLINE
      PLINE.CNT = PLINE.CNT + 2
      READ DLIST FROM USER.MAIL, "L!":UMSR.SRC<1,MPTR>:"!":UMSR.LIST<1,MPTR> ELSE
         DLIST = ""
      END
      LCNT = DCOUNT(DLIST,AM)
      IF LCNT THEN
         IF PLINE.CNT > 56 THEN
            PRINT
            PRINT PLM:"(Continued on next page)":
            PRINT CHAR(12):
            PLINE.CNT = 0
         END
         PLINE="Distribution List:"
         PRINT PLM:PLINE
         PRINT
         PLINE.CNT = PLINE.CNT + 2
         FOR LPTR = 1 TO LCNT STEP 3
            IF PLINE.CNT > 58 THEN
               PRINT
               PRINT PLM:"(Continued on next page)"
               PRINT CHAR(12):
               PLINE.CNT = 0
            END
            MATREAD SEC.REC FROM SECURITY, DLIST<LPTR> ELSE
               MAT SEC.REC = ""
            END
            PLINE=("   ":TRIM(SEC.NAME))"L#23"
            MATREAD SEC.REC FROM SECURITY, DLIST<LPTR+1> ELSE
               MAT SEC.REC = ""
            END
            PLINE=PLINE:("   ":TRIM(SEC.NAME))"L#23"
            MATREAD SEC.REC FROM SECURITY, DLIST<LPTR+2> ELSE
               MAT SEC.REC = ""
            END
            PLINE=PLINE:("   ":TRIM(SEC.NAME))"L#23"
            PRINT PLM:PLINE
            PLINE.CNT = PLINE.CNT + 1
         NEXT LPTR
      END
      PRINTER OFF
*      PRINTER CLOSE
      CALL PRINTER_CLOSE
* IF PQUEUE # "" THEN
* PERFORM "SP-ASSIGN =STANDARD" CAPTURING PMSG
* END
      RETURN
*
*---- Error message routine
91000*
      PRINT @(0,23) : ERRMSG : @(-4) :
      INPUT REPLY :
      PRINT @(0,23) : @(-4) :
      RETURN
*
*---- End of job
99999*
      IF S_PC.PORT.TYPE # "" THEN
         PC.PORT.TYPE = S_PC.PORT.TYPE
         GUIFORM =S_GUIFORM
         TU_FUNC = "TU.FORM.SETATTR":TU_VERNO
         CALL @TU_FUNC("CEOS1",'enabled',0,ERROR)
         TU_FUNC = "TU.FORM.KILL":TU_VERNO
         CALL @TU_FUNC(HFORM,ERROR)
         TU_FUNC = "TU.FORM.SMARTHOURGLASS":TU_VERNO
         CALL @TU_FUNC("1",ERROR)
      END
      RETURN
   END
