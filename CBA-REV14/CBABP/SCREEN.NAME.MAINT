*COPY>CPYLIB>COM1
*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - SCREEN.NAME.MAINT
*
* BY      - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 06/09/84
*
* DESCRIPTION
*
* Provide the capability to copy, rename or delete an existing
* screen.
*
*T21177 diane 12/10/1996 * PC.NAME update
*********************************************************************
*
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>PCNAME_XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>BAR_MAINT_SCREEN
*
*---- DEFINE VARIABLES
*
      BASE.FORMS = "M"
      BASE.FORMS<2> = "APS"
      BASE.FORMS<3> = "ARS"
      BASE.FORMS<4> = "FAS"
      BASE.FORMS<5> = "GLS"
      BASE.FORMS<6> = "ICS"
      BASE.FORMS<7> = "JCS"
      BASE.FORMS<8> = "JES"
      BASE.FORMS<9> = "JIS"
      BASE.FORMS<10> = "JKT"
      BASE.FORMS<11> = "NDC"
      BASE.FORMS<12> = "OPS"
      BASE.FORMS<13> = "PMC"
      BASE.FORMS<14> = "POS"
      BASE.FORMS<15> = "PR4"
      BASE.FORMS<16> = "PRS"
      BASE.FORMS<17> = "PSS"
      BASE.FORMS<18> = "QPL"
      BASE.FORMS<19> = "UTL"
      BASE.FORMS<20> = "CBA"
*
*---- OPEN ALL FILES
*
      OPEN "","VOC" TO MD ELSE
         STOP "CANNOT OPEN VOC FILE"
      END
      OPEN "","PCNAME_XREF" TO PCNAME_XREF ELSE
         STOP "CANNOT OPEN PCNAME_XREF FILE"
      END
      OPEN "","M.SCREENS" TO M.SCREENS ELSE
         STOP "CANNOT OPEN M.SCREENS FILE"
      END
*
*---- INITIALIZATION
*
      MAT EDIT.COM.DRIVER = ""
      ECD.SCRN.NAME = "SCREEN.NAME.MAINT"
      ECD.SCRN.FLAG<1> = 1
      ECD.ACTION=1; CALL SCRN.EDIT
      ECD.SCRN.NO = 1
      ECD.ACTION=2; CALL SCRN.EDIT
*
*---- MAIN PROCESSING
*
100*
      MAT SCV.REC = ""; ECD.ACTION = 6; CALL SCRN.EDIT
      ECD.NUM = 1; SCV.REC(ECD.NUM) = OCONV(DATE(),"D2/")
      ECD.ACTION = 5; CALL SCRN.EDIT
*
*---- Enter Old File
1100 *
      ECD.NUM = 2; ECD.VALDAT.CODE = "2"; ECD.VALDAT.FILE = MD
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN
         PRINT @(-1) :
         STOP
      END
* LATER   IF ECD.RET.VALUE = "" THEN GOSUB 1300
      IF ECD.VALDAT.ITEM<1> # "F" THEN
         GOTO 1100
      END
      OPEN "", ECD.RET.VALUE TO F.SCREENS ELSE
         GOTO 1100
      END
      F.SCRN = ECD.RET.VALUE
      F.FORM = ""
      OPEN.ERROR = ""
*
*---- Enter Old Screen
1200 *
      ECD.NUM = 3; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 100
      READ SCREEN FROM F.SCREENS, ECD.RET.VALUE:"*FRM" THEN
         MATREAD ABLD.SCRN FROM F.SCREENS, ECD.RET.VALUE:"*FLD" ELSE NULL
      END ELSE
         ERRMSG = "** SCREEN NOT ON FILE **"
         GOSUB 90000
         GOTO 1200
      END
      OLD.SCREEN.NAME = ECD.RET.VALUE
      OLD.BLD.PCNAME = BLD.PCNAME
      MATREADU PCNX.REC FROM PCNAME_XREF, OLD.BLD.PCNAME THEN
         RELEASE PCNAME_XREF, OLD.BLD.PCNAME
      END ELSE
         PCNX_FILE = F.SCRN
         PCNX_ID = OLD.SCREEN.NAME
         MATWRITE PCNX.REC ON PCNAME_XREF, OLD.BLD.PCNAME
      END
      ECD.NUM = 8; SCV.REC(ECD.NUM) = OLD.BLD.PCNAME; ECD.ACTION = 5; CALL SCRN.EDIT
      GOSUB 30000
*
*---- Enter New File
2100 *
      ECD.NUM = 4; ECD.VALDAT.CODE = "2"; ECD.VALDAT.FILE = MD
      ECD.DEFAULT = F.SCRN; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 100
      IF ECD.VALDAT.ITEM<1> # "F" THEN
         GOTO 2100
      END
      OPEN "", ECD.RET.VALUE TO T.SCREENS ELSE
         GOTO 2100
      END
      T.SCRN = ECD.RET.VALUE
      T.FORM = ""
      IF F.SCRN # T.SCRN THEN ECD.DEFAULT = OLD.SCREEN.NAME
*
*---- Enter New Screen
2200 *
      ECD.NUM = 5; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 2100
      IF F.SCRN = T.SCRN AND OLD.SCREEN.NAME = ECD.RET.VALUE THEN
         GOTO 2200
      END
      READ SCREEN FROM T.SCREENS, ECD.RET.VALUE:"*FRM" THEN
         ERRMSG = "** SCREEN ALREADY EXISTS ON FILE **"
         GOSUB 90000
         GOTO 2200
      END
      NEW.SCREEN.NAME = ECD.RET.VALUE
      IF (F.SCRN = T.SCRN AND OLD.SCREEN.NAME = NEW.SCREEN.NAME) OR NEW.SCREEN.NAME = "" THEN
         NEW.BLD.PCNAME = OLD.BLD.PCNAME
      END ELSE
         GOSUB 20000
         IF PCNAME = "" THEN GOTO 2200
         ECD.NUM = 9; SCV.REC(ECD.NUM) = PCNAME; ECD.ACTION = 5; CALL SCRN.EDIT
      END
      GOSUB 30000
*
*---- GET OPERATOR REQUEST
*
500*
      ECD.NUM = 6; SCV.REC(ECD.NUM) = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = "E" OR ACTION = "END"
         CASE ACTION = "C"
            IF (F.SCRN = T.SCRN AND NEW.SCREEN.NAME = OLD.SCREEN.NAME) OR NEW.SCREEN.NAME = "" THEN
               ERRMSG = "** INVALID REQUEST **"
               GOSUB 90000
               GOTO 500
            END
            GOSUB 10000
            ERRMSG = "** COMPLETED **"
            GOSUB 90000
         CASE ACTION = "D"
            IF NEW.SCREEN.NAME # "" THEN
               ERRMSG = "** INVALID REQUEST **"
               GOSUB 90000
               GOTO 500
            END
            ECD.NUM = 7
            ECD.ACTION=4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "N" THEN GOTO 500
            GOSUB 10000
            ERRMSG = "** COMPLETED **"
            GOSUB 90000
         CASE ACTION = "R"
            IF (F.SCRN = T.SCRN AND NEW.SCREEN.NAME = OLD.SCREEN.NAME) OR NEW.SCREEN.NAME = "" THEN
               ERRMSG = "** INVALID REQUEST **"
               GOSUB 90000
               GOTO 500
            END
            GOSUB 10000
            ERRMSG = "** COMPLETED **"
            GOSUB 90000
         CASE 1
            ERRMSG = "** INVALID REQUEST **"
            GOSUB 90000
            GOTO 500
      END CASE
      GOTO 100
*
*---- PROCESS REQUESTED ACTION
*
10000*
      SFX = "*FRM"; GOSUB 10100
      SFX = "*DEF"; GOSUB 10100
      SFX = "*DCL"; GOSUB 10100
      SFX = "*CLR"; GOSUB 10100
      SFX = "*DIM"; GOSUB 10100
      SFX = "*TUF"; GOSUB 10100
*
      SFX = "*FLD"
      SCRN.ID = OLD.SCREEN.NAME:SFX
      MATREADU ABLD.SCRN FROM F.SCREENS, SCRN.ID THEN
         BEGIN CASE
            CASE ACTION = "R"
               BLD.PCNAME = NEW.BLD.PCNAME
               BLD.UPD.DT = DATE()
               BLD.UPD.DT<1,2> = TIME()
               MATWRITE ABLD.SCRN ON T.SCREENS, NEW.SCREEN.NAME:SFX
               MATWRITE PCNX.REC ON PCNAME_XREF, NEW.BLD.PCNAME
               OLD.FORM = FIELD(OLD.BLD.PCNAME,".",1)
               NEW.FORM = FIELD(NEW.BLD.PCNAME,".",1)
               IF NOT(OPEN.ERROR) THEN
                  READ FORM.REC FROM FROM.FORMS, OLD.FORM THEN
                     FORM.REC<1> =  'formclass ':OCONV(TIME(),'MTS'):'  ':OCONV(DATE(),'D')
                     FORM.REC<2,3> = NEW.FORM
                     WRITE FORM.REC ON TO.FORMS, NEW.FORM
                     DELETE FROM.FORMS, OLD.FORM
                  END
               END
               DELETE F.SCREENS, SCRN.ID
               DELETE PCNAME_XREF, OLD.BLD.PCNAME
*            IF PCNAME # "" THEN
*               DELETE PCNAME_XREF, PCNAME
*            END
*            PREC = ''
*            PREC<1> = T.SCRN
*            PREC<2> = NEW.SCREEN.NAME
*            WRITE PREC ON PCNAME_XREF, NEW.BLD.PCNAME
            CASE ACTION = "C"
               BLD.PCNAME = NEW.BLD.PCNAME
               BLD.UPD.DT = DATE()
               BLD.UPD.DT<1,2> = TIME()
               MATWRITE ABLD.SCRN ON T.SCREENS, NEW.SCREEN.NAME:SFX
               MATWRITE PCNX.REC ON PCNAME_XREF, NEW.BLD.PCNAME
               OLD.FORM = FIELD(OLD.BLD.PCNAME,".",1)
               NEW.FORM = FIELD(NEW.BLD.PCNAME,".",1)
               IF NOT(OPEN.ERROR) THEN
                  READ FORM.REC FROM FROM.FORMS, OLD.FORM THEN
                     WRITE FORM.REC ON TO.FORMS, NEW.FORM
                  END
               END
               RELEASE F.SCREENS, SCRN.ID
            CASE ACTION = "D"
               DELETE F.SCREENS, SCRN.ID
               IF BLD.PCNAME # "" THEN
                  DELETE PCNAME_XREF, BLD.PCNAME
               END
               OLD.FORM = FIELD(OLD.BLD.PCNAME,".",1)
               IF NOT(OPEN.ERROR) THEN
                  READ FORM.REC FROM FROM.FORMS, OLD.FORM THEN
                     DELETE FROM.FORMS, OLD.FORM
                  END
               END
            CASE 1
               RELEASE F.SCREENS, SCRN.ID
         END CASE
      END ELSE
         MAT ABLD.SCRN = ""
         RELEASE F.SCREENS, SCRN.ID
      END
      EXT.REF = BLD.EXT.REF
      SCNT = DCOUNT(EXT.REF,VM)
      FOR S = 1 TO SCNT
         SFX = "*HMSG":EXT.REF<1,S>; GOSUB 10100
         SFX = "*NAME":EXT.REF<1,S>; GOSUB 10100
         SFX = "_XRF":EXT.REF<1,S>; GOSUB 10100
      NEXT S
      SFX = "*BAR"; GOSUB 10200
      SFX = "_VAL"; GOSUB 10100
      RETURN
10100*
      SCRN.ID = OLD.SCREEN.NAME:SFX
      READU REC FROM F.SCREENS, SCRN.ID THEN
         BEGIN CASE
            CASE ACTION = "R"
               WRITE REC ON T.SCREENS, NEW.SCREEN.NAME:SFX
               DELETE F.SCREENS, SCRN.ID
            CASE ACTION = "C"
               WRITE REC ON T.SCREENS, NEW.SCREEN.NAME:SFX
               RELEASE F.SCREENS, SCRN.ID
            CASE ACTION = "D"
               DELETE F.SCREENS, SCRN.ID
            CASE 1
               RELEASE F.SCREENS, SCRN.ID
         END CASE
      END ELSE
         REC = ""
         RELEASE F.SCREENS, SCRN.ID
      END
      RETURN
10200*
      SCRN.ID = OLD.SCREEN.NAME:"*BAR"
      MATREADU BMSR_REC FROM F.SCREENS, SCRN.ID THEN
         BEGIN CASE
            CASE ACTION = "R"
               OPEN.BFILE = ""
               OPEN.PMCBARS = ""
               OPEN.TFILE = ""
               BCNT = DCOUNT(BMSR_FLD<1>,VM)
               FOR BB = 1 TO BCNT
                  BEGIN CASE
                  CASE BMSR_NAME<1,BB> = ""
                  CASE FIELD(BMSR_NAME<1,BB>,".",1) # FIELD(OLD.BLD.PCNAME,".",1)
                     IF BMSR_FILE<1,BB> = "" THEN
                        BFILE = FIELD(OLD.BLD.PCNAME,".",2):"BARS"
                     END ELSE
                        BFILE = BMSR_FILE<1,BB>
                     END
                     TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS"
                     IF BFILE = TFILE THEN
                         BMSR_FILE<1,BB> = ""
                     END ELSE
                        BMSR_FILE<1,BB> = BFILE
                     END
                  CASE 1
                     IF BMSR_FILE<1,BB> = "" THEN
                        BFILE = FIELD(OLD.BLD.PCNAME,".",2):"BARS"
                     END ELSE
                        BFILE = BMSR_FILE<1,BB>
                     END
                     IF BFILE # OPEN.BFILE THEN
                        OPEN.BFILE = BFILE
                        OPEN "",BFILE TO WORK_FILE ELSE OPEN.BFILE = ""
                     END
                     IF OPEN.BFILE # "" THEN
                        TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS"
                        BEGIN CASE
                        CASE TFILE = OPEN.TFILE
                        CASE TFILE = BFILE
                           OPEN.TFILE = OPEN.BFILE
                           TO_FILE = WORK_FILE
                        CASE 1
                           OPEN.TFILE = TFILE
                           OPEN "",TFILE TO TO_FILE ELSE OPEN.TFILE = ""
                        END CASE
                        IF OPEN.TFILE # "" THEN
                           TO_NAME = FIELD(NEW.BLD.PCNAME,".",1):".":FIELD(BMSR_NAME<1,BB>,".",2)
                           READU DUMMY FROM TO_FILE, TO_NAME THEN
                              RELEASE TO_FILE, TO_NAME
                           END ELSE
                              READU DUMMY FROM WORK_FILE, BMSR_NAME<1,BB> THEN
                                 WRITE DUMMY ON TO_FILE, TO_NAME
                                 DELETE WORK_FILE, BMSR_NAME<1,BB>
                              END ELSE
                                 RELEASE WORK_FILE, BMSR_NAME<1,BB>
                                 RELEASE TO_FILE, TO_NAME
                              END
                           END
                           BMSR_NAME<1,BB> = TO_NAME
                           IF TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS" THEN
                              BMSR_FILE<1,BB> = ""
                           END ELSE
                              BMSR_FILE<1,BB> = TFILE
                           END
                        END
                     END
                  END CASE
               NEXT BB
               MATWRITE BMSR_REC ON T.SCREENS, NEW.SCREEN.NAME:SFX
               DELETE F.SCREENS, SCRN.ID
            CASE ACTION = "C"
               OPEN.BFILE = ""
               OPEN.PMCBARS = ""
               OPEN.TFILE = ""
               BCNT = DCOUNT(BMSR_FLD<1>,VM)
               FOR BB = 1 TO BCNT
                  BEGIN CASE
                  CASE BMSR_NAME<1,BB> = ""
                  CASE FIELD(BMSR_NAME<1,BB>,".",1) # FIELD(OLD.BLD.PCNAME,".",1)
                     IF BMSR_FILE<1,BB> = "" THEN
                        BFILE = FIELD(OLD.BLD.PCNAME,".",2):"BARS"
                     END ELSE
                        BFILE = BMSR_FILE<1,BB>
                     END
                     TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS"
                     IF BFILE = TFILE THEN
                         BMSR_FILE<1,BB> = ""
                     END ELSE
                        BMSR_FILE<1,BB> = BFILE
                     END
                  CASE 1
                     IF BMSR_FILE<1,BB> = "" THEN
                        BFILE = FIELD(OLD.BLD.PCNAME,".",2):"BARS"
                     END ELSE
                        BFILE = BMSR_FILE<1,BB>
                     END
                     IF BFILE # OPEN.BFILE THEN
                        OPEN.BFILE = BFILE
                        OPEN "",BFILE TO WORK_FILE ELSE OPEN.BFILE = ""
                     END
                     IF OPEN.BFILE # "" THEN
                        TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS"
                        BEGIN CASE
                        CASE TFILE = OPEN.TFILE
                        CASE TFILE = BFILE
                           OPEN.TFILE = OPEN.BFILE
                           TO_FILE = WORK_FILE
                        CASE 1
                           OPEN.TFILE = TFILE
                           OPEN "",TFILE TO TO_FILE ELSE OPEN.TFILE = ""
                        END CASE
                        IF OPEN.TFILE # "" THEN
                           TO_NAME = FIELD(NEW.BLD.PCNAME,".",1):".":FIELD(BMSR_NAME<1,BB>,".",2)
                           READU DUMMY FROM TO_FILE, TO_NAME THEN
                              RELEASE TO_FILE, TO_NAME
                           END ELSE
                              READ DUMMY FROM WORK_FILE, BMSR_NAME<1,BB> THEN
                                 WRITE DUMMY ON TO_FILE, TO_NAME
                              END ELSE
                                 RELEASE TO_FILE, TO_NAME
                              END
                           END
                           BMSR_NAME<1,BB> = TO_NAME
                           IF TFILE = FIELD(NEW.BLD.PCNAME,".",2):"BARS" THEN
                              BMSR_FILE<1,BB> = ""
                           END ELSE
                              BMSR_FILE<1,BB> = TFILE
                           END
                        END
                     END
                  END CASE
               NEXT BB
               MATWRITE BMSR_REC ON T.SCREENS, NEW.SCREEN.NAME:SFX
               RELEASE F.SCREENS, SCRN.ID
            CASE ACTION = "D"
               OPEN.BFILE = ""
               OPEN.PMCBARS = ""
               BCNT = DCOUNT(BMSR_FLD<1>,VM)
               FOR BB = 1 TO BCNT
                  BEGIN CASE
                  CASE BMSR_NAME<1,BB> = ""
                  CASE FIELD(BMSR_NAME<1,BB>,".",1) # FIELD(OLD.BLD.PCNAME,".",1)
                  CASE 1
                     IF BMSR_FILE<1,BB> = "" THEN
                        BFILE = FIELD(OLD.BLD.PCNAME,".",2):"BARS"
                     END ELSE
                        BFILE = BMSR_FILE<1,BB>
                     END
                     IF BFILE # OPEN.BFILE THEN
                        OPEN.BFILE = BFILE
                        OPEN "",BFILE TO WORK_FILE ELSE OPEN.BFILE = ""
                     END
                     IF OPEN.BFILE # "" THEN
                        READU DUMMY FROM WORK_FILE, BMSR_NAME<1,BB> THEN
                           DELETE WORK_FILE, BMSR_NAME<1,BB>
                        END ELSE
                           RELEASE WORK_FILE, BMSR_NAME<1,BB>
                        END
                     END
                  END CASE
               NEXT BB
               DELETE F.SCREENS, SCRN.ID
            CASE 1
               RELEASE F.SCREENS, SCRN.ID
         END CASE
      END ELSE
         MAT BMSR_REC = ""
         RELEASE F.SCREENS, SCRN.ID
      END
      RETURN
*
*---- Determine PCNAME
*
20000 *
      SCNF_PFX = FIELD(T.SCRN,".",1)
      IF SCNF_PFX = "M" THEN SCNF_PFX = "CBA"
      IF LEN(SCNF_PFX) # 3 THEN
*      GOTO 20099
         SCNF_PFX = SCNF_PFX[1,3]
      END
      LOCATE SCNF_PFX IN BASE.FORMS SETTING FND THEN
         SCNF_PFX = "PMC"
      END
* Use old pcname if new screen name is same as old screen name
* Generate new pcname if new screen name is different from old screen name
      IF OLD.BLD.PCNAME # "" AND OLD.SCREEN.NAME = NEW.SCREEN.NAME THEN
         PCNAME = FIELD(OLD.BLD.PCNAME,".",1):".":SCNF_PFX
      END ELSE
         PCNAME = NEW.SCREEN.NAME
         CALL GET_PCNAME(PCNAME,SCNF_PFX,BNAME)
         IF PCNAME = "" THEN
            GOSUB 20100
            IF PCNAME = "" THEN GOTO 20099
         END
      END
*    PRINT @(0,23):'PCNAME = (':PCNAME:')': ; INPUT ACK:
*
*---- Validate Pcname
20010*
      MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME THEN
         BEGIN CASE
            CASE PCNX_FILE # T.SCRN OR PCNX_ID # NEW.SCREEN.NAME
               ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
               GOSUB 90000
               BNAME = FIELD(PCNAME,".",1)
               GOSUB 20100
               IF PCNAME = "" THEN GOTO 20099
               GOTO 20010
*         CASE PCNX_ID # NEW.SCREEN.NAME
*            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
*            GOSUB 90000
*            GOSUB 20100
*            IF PCNAME = "" THEN GOTO 20099
*            GOTO 20010
         END CASE
      END ELSE
         PCNX_FILE = T.SCRN
         PCNX_ID = NEW.SCREEN.NAME
      END
      NEW.BLD.PCNAME = PCNAME
20099*
      RETURN
*
* Prompt for new Pcname if can't determine new one automatically
20100*
      PMSG = "Enter PC Screen Name (":NEW.SCREEN.NAME:") :"
      X = 0; Y = 21; TYP = 1; MAXL = 8; DEFAULT = FIELD(BNAME,".",1) "L#8"
      CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE = "END" OR VALUE = ""
            PCNAME = ""
         CASE LEN(VALUE) # LEN(TRIM(VALUE,".","A"))
            ERRMSG = 'PLEASE DO NOT ENTER "." OR "_"'
            GOSUB 90000
            VALUE = ""
            GOTO 20100
         CASE LEN(VALUE) # LEN(TRIM(VALUE,"_","A"))
            ERRMSG = 'PLEASE DO NOT ENTER "." OR "_"'
            GOSUB 90000
            VALUE = ""
            GOTO 20100
         CASE 1
            PCNAME = VALUE : "." : SCNF_PFX
      END CASE
      RETURN
*
*---- Determine Form File
30000 *
      BEGIN CASE
         CASE F.FORM = ""
            F.FORM = FIELD(F.SCRN,".",1)
            LOCATE F.FORM IN BASE.FORMS SETTING FND THEN
               F.FORM = "PMCFORMS"
            END ELSE
               F.FORM = F.FORM[1,3]:"FORMS"
            END
*         PRINT @(0,23):'FORMS = (':F.FORM:')': ; INPUT ACK:
            OPEN "",F.FORM TO FROM.FORMS ELSE
               OPEN.ERROR = 1
            END
         CASE T.FORM = ""
            T.FORM = FIELD(T.SCRN,".",1)
            LOCATE T.FORM IN BASE.FORMS SETTING FND THEN
               T.FORM = "PMCFORMS"
            END ELSE
               T.FORM = T.FORM[1,3]:"FORMS"
            END
*         PRINT @(0,23):'FORMS = (':T.FORM:')': ; INPUT ACK:
            OPEN "",T.FORM TO TO.FORMS ELSE
               OPEN.ERROR = 1
            END
      END CASE
      RETURN
*
*---- ERROR ROUTINE
*
90000*
      PRINT @(0,23):CL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,23):CL:
      RETURN
   END
