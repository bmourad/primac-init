  SUBROUTINE SCRN_FLD_M (TMODE)
*
*COPY>CPYLIB>COM1
*T26556 adelgado 07/18/2002 * Fix to not display LOCKED error msg when
*                             one user exit a screen prgm and another
*                             user has the Screen Locked.
*
********************************************************************
*********************************************************************
*
*---- DEFINE DIMENSIONED VARIABLES
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>NEW.BUILD.SCREEN
*COPY>CPYLIB>XREF_BUILD_SCREEN
*COPY>CPYLIB>BAR_MAINT_SCREEN
*COPY>CPYLIB>VALDAT_BUILD_SCREEN
*COPY>CPYLIB>TCC
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
  DIM EDIT.COM.SAVE(35)
  DIM EDIT.COM.DRIVER.SAVE(35)
  DIM SAVE.SCV.REC(75)
  DIM BLD.SCRN.SAVE(75)
  DIM ABLD.SCRN(78)
*
  IF NOT(FILEINFO(CURR.SCREENS.FILE,0)) THEN
    GOTO 99999
  END
*---- NEEDED BECAUSE SYSCOM CHANGES EDIT.COM
  MAT EDIT.COM.SAVE = MAT EDIT.COM
*
*---- INITILAIZE SYSCOM
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  ERROR = 0
*------------------------*
*---- INITIALIZATION ----*
*------------------------*
  ERRMSG = ""
  NEW_BAR = 0
  NEW_TUF = 0
  OLD_USERDATA = ""
  IF ECD.SCRN.NAME = "SCREEN.BUILD.DATA":AM:"SCREEN.BUILD.DATA.SUB":AM:"TBAR_BLD" THEN
    ERRMSG = "ONLY ONE LEVEL OF FIELD MAINTENANCE IS ALLOWED"
    GOSUB 91000
    GOTO 99990
  END
  ESN = ECD.SCRN.NO
  SCREEN.NAME = ECD.SCRN.NAME<ESN>
*
*---- READ AND LOCK THE *FLD RECORD
*
* T26556 v
  IF TMODE = "FILE" THEN
    MATREAD BLD.SCRN.SAVE FROM CURR.SCREENS.FILE, SCREEN.NAME:"*FLD" ELSE
      MAT BLD.SCRN.SAVE = ""
    END
  END ELSE
    MATREADU BLD.SCRN.SAVE FROM CURR.SCREENS.FILE, SCREEN.NAME:"*FLD" LOCKED
      ERRMSG = "Screen Record is LOCKED by another user"
      GOSUB 91000
      GOTO 99990
    END ELSE
      MAT BLD.SCRN.SAVE = ""
    END
  END
* T26556 ^
  FOR BB = 1 TO BLD.EXT.REF_ATT WHILE ERRMSG = ""
    IF BLD.SCRN(BB) # BLD.SCRN.SAVE(BB) THEN
*---- SCRN.EDIT WILL CHANGE PSTACK
      IF DCOUNT(BLD.SCRN(BB),VM) >= B.PSTACK THEN
        BLD.SCRN.SAVE(BB)<1,B.PSTACK> = BLD.SCRN(BB)<1,B.PSTACK>
      END
*---- SCRN.EDIT WILL CHANGE USERDATA
      IF DCOUNT(BLD.SCRN(BB),VM) >= B.USERDATA THEN
        BLD.SCRN.SAVE(BB)<1,B.USERDATA> = BLD.SCRN(BB)<1,B.USERDATA>
      END
*---- SCRN.EDIT WILL CHANGE DATAFILE
      IF BLD.SCRN.SAVE(BB)<1,B.DATAFILE> = "" AND BLD.SCRN(BB)<1,B.DATAFILE> # "" THEN
        BLD.SCRN.SAVE(BB)<1,B.DATAFILE> = BLD.SCRN(BB)<1,B.DATAFILE>
      END
      IF BLD.SCRN(BB) # BLD.SCRN.SAVE(BB) THEN
        ERRMSG = "Screen Record was modified by another user - FLD#":BLD.EXT.REF<1,BB>
      END ELSE
*---- SET NEW_TUF TO WRITE SCRN.EDIT CHANGES
        NEW_TUF = 1
      END
    END
  NEXT BB
  IF ERRMSG # "" THEN
    GOSUB 91000
    GOTO 599
  END
* T26556 v SCRN.EDIT has changed the screen, so lock the rec
  IF (NEW_TUF) AND TMODE = "FILE" THEN
    MATREADU BLD.SCRN.SAVE FROM CURR.SCREENS.FILE, SCREEN.NAME:"*FLD" LOCKED
      ERRMSG = "Screen Record is LOCKED by another user"
      GOSUB 91000
      GOTO 99990
    END ELSE
    END
  END
* T26556 ^
  READ BLD.DEF.SCRN FROM CURR.SCREENS.FILE, SCREEN.NAME:"*DEF" ELSE
    BLD.DEF.SCRN = ""
    ERRMSG = "Cannot Find ":SCREEN.NAME:"*DEF record"
    GOSUB 91000
    GOTO 599
  END
  READ BLD.TUF.SCRN FROM CURR.SCREENS.FILE, SCREEN.NAME:"*TUF" ELSE
    BLD.TUF.SCRN = ""
  END
  SYS.SCREENS = CURR.SCREENS.FILE
*-------------------------*
*---- MAIN PROCESSING ----*
*-------------------------*
  IF TMODE # "FILE" THEN
    LOCATE ECD.NUM IN BLD.EXT.REF<1>,1 SETTING INT.REF ELSE
      GOTO 599
    END
    PREV.M.SCREENS = M.SCREENS
    PREV.CURR.SCREENS.FILE = CURR.SCREENS.FILE
    OPEN "","M.SCREENS" TO M.SCREENS ELSE
      M.SCREENS = PREV.M.SCREENS
      GOTO 599
    END
    GOSUB 1000
  END
*
*---- UPDATINIG FILES
*
  BEGIN CASE
    CASE TMODE = "FILE" AND NEW_TUF
      MAT ABLD.SCRN = ""
      FOR BB = 1 TO BLD.SCRN.SIZE
        ABLD.SCRN(BB) = BLD.SCRN(BB)
      NEXT BB
      GOSUB 10500
      GOTO 599
    CASE TMODE = "FILE"
      GOTO 599
    CASE FUNCT # "FILE"
    CASE BLD.SCRN(BLD.EXT.REF_ATT) # ABLD.SCRN(BLD.EXT.REF_ATT)
      ERRMSG = "Screen fields were sorted.  CANNOT UPDATE."
      GOSUB 91000
    CASE 1
      GOSUB 10000
  END CASE
*
*---- RE-DISPLAY SCREEN AND DATA
*
  BEGIN CASE
    CASE PC.PORT.TYPE = "termulator" AND ECD.SCRN.PC<ESN>
      MAT SCV.REC = MAT SAVE.SCV.REC
      SIV_BAR_FLD<ESN> = BMSR_FLD
      SIV_BAR_FILE<ESN> = BMSR_FILE
      SIV_BAR_NAME<ESN> = BMSR_NAME
*
*---- RE-LOAD TOOLBAR IF NEEDED
*
      IF NEW_BAR THEN
        BARHNDL = SIV_BAR_HNDL<ESN>
        IF BARHNDL # "" THEN
          TU_FUNC = "TU.TOOLBAR.KILL":TU_VERNO
          CALL @TU_FUNC(BARHNDL,ERROR)
          SIV_BAR_HNDL<ESN> = ""
          SIV_BAR_ACTIVE<ESN> = ""
        END
        FRMHNDL = ECD.SCRN.PC<ESN>
        TU_FUNC = "TU.TOOLBAR.LOAD":TU_VERNO
        CALL @TU_FUNC(BARFILE,BARNAME,FRMHNDL,"",BARHNDL,ERROR)
        IF ERROR = 0 THEN
          SIV_BAR_ACTIVE<ESN> = BARNAME
          SIV_BAR_ACTIVE<ESN,2> = BARFILE
          SIV_BAR_HNDL<ESN> = BARHNDL
        END ELSE
          SIV_BAR_ACTIVE<ESN> = ""
          SIV_BAR_HNDL<ESN> = ""
        END
      END
    CASE 1
      ECD.ACTION = 2
      CALL SCRN.EDIT
      MAT SCV.REC = MAT SAVE.SCV.REC
      ECD.ACTION = 3
      CALL SCRN.EDIT
      MAT EDIT.COM.DRIVER = MAT EDIT.COM.DRIVER.SAVE
  END CASE
599*
  RELEASE CURR.SCREENS.FILE, SCREEN.NAME:"*FLD"
  GOTO 99990
*--------------------*
*---- SUBROUTINES ---*
*--------------------*
*
*---- CALLING SCREEN.BUILD.DATA
*
1000*
  FDEF = BLD.SCRN(INT.REF)
  EXT.REF = ECD.NUM
  OLD_USERDATA = BLD.SCRN(INT.REF)<1,B.USERDATA>
  READ DUMMY FROM CURR.SCREENS.FILE, SCREEN.NAME:"*NAME":ECD.NUM ELSE
    DUMMY = ""
  END
  IF DUMMY # "" THEN
    BLD.FIELD.NAME<1,ECD.NUM> = DUMMY
  END
  READ DUMMY FROM CURR.SCREENS.FILE, SCREEN.NAME:"*HMSG":ECD.NUM ELSE
    DUMMY = ""
  END
  IF DUMMY # "" THEN
    BLD.HMSG<1,ECD.NUM> = DUMMY
  END
  MAT ABLD.SCRN = ""
  FOR BB = 1 TO BLD.SCRN.SIZE
    ABLD.SCRN(BB) = BLD.SCRN(BB)
  NEXT BB
  MATREAD BMSR_REC FROM CURR.SCREENS.FILE, SCREEN.NAME:"*BAR" ELSE
    MAT BMSR_REC = ""
  END
  LOCATE ECD.NUM IN BMSR_FLD<1>,1 SETTING BB THEN
    OLD_BAR_FILE = BMSR_FILE<1,BB>
    OLD_BAR_NAME = BMSR_NAME<1,BB>
  END ELSE
    OLD_BAR_FILE = ""
    OLD_BAR_NAME = ""
  END
  MATREAD VBSR_REC FROM CURR.SCREENS.FILE, SCREEN.NAME:"_VAL" ELSE
    MAT VBSR_REC = ""
  END
  MAT XBR_SCN = ""
  READ DUMMY FROM CURR.SCREENS.FILE, SCREEN.NAME:"_XRF":ECD.NUM THEN
    FOR BB = 1 TO XBR_SCN_SIZE
      XBR_SCN(BB)<INT.REF> = DUMMY<BB>
    NEXT BB
  END
  MAT BLD.SCRN.SAVE = MAT BLD.SCRN
  MAT EDIT.COM.DRIVER.SAVE = MAT EDIT.COM.DRIVER
  MAT SAVE.SCV.REC = MAT SCV.REC
  PREV_EVENTS = SIV_EVENTS
  PREV_PSTACK = SIV_PSTACK
  PREV_FLD_STK = SIV_FLD_STK
  PREV_FLD_VAL = SIV_FLD_VAL
  PREV_SIV_BAR_FLD = SIV_BAR_FLD
  PREV_SIV_BAR_FILE = SIV_BAR_FILE
  PREV_SIV_BAR_NAME = SIV_BAR_NAME
  PREV_SIV_BAR_ACTIVE = SIV_BAR_ACTIVE
  PREV_SIV_BAR_HNDL = SIV_BAR_HNDL
*
*---- SET/INIT TO CALL SCREEN BUILDER
*
  ECD.SCRN.NO = 1
  ECD.SCRN.NAME = "SCREEN.BUILD.DATA"
  ECD.SCRN.NAME<2> = "SCREEN.BUILD.DATA.SUB"
  ECD.SCRN.NAME<3> = "TBAR_BLD"
  ECD.SCRN.FLAG = ""
  ECD.MAXL = ""
  ECD.VALDAT.FILE = ""
  ECD.VALDAT.CODE = ""
  ECD.VALDAT.ITEM = ""
  ECD.MINV = ""
  ECD.MAXV = ""
  ECD.O.R = ""
  ECD.DEFAULT = ""
  ECD.RET.VALUE = ""
  ECD.SUB.NUM = ""
  ECD.VALDATION = ""
  ECD.PREFIX.ID = ""
  ECD.VALDAT = ""
  ECD.HMSG = ""
  ECD.Y = ""
  ECD.PATRN = ""
  ECD.PMSG = ""
  ECD.SCALER = ""
  ECD.SCRN.PC = ""
  ECD.VALDAT.EXIT = ""
  ECD.SCRN.SEQ = ""
  SIV_BAR_ACTIVE = ""
  SIV_BAR_HNDL = ""
  SIV_STACK = ""
  SIV_MOUSE_ON = ""
  SIV_LST_LINE = ""
  SIV_EVENTS = ""
  SIV_PSTACK = ""
  SIV_FLD_STK = ""
  SIV_FLD_VAL = ""
  SIV_BAR_FLD = ""
  SIV_BAR_FILE = ""
  SIV_BAR_NAME = ""
  FUNCT = ECD.NUM
  COL = FDEF<1,B.X>
  ROW = FDEF<1,B.Y>
  ERROR.STATUS = ""
  CALL SCREEN.BUILD.DATA (FUNCT, COL, ROW, ERROR.STATUS, MAT ABLD.SCRN, MAT BMSR_REC, MAT VBSR_REC, MAT XBR_SCN)
*
*---- RESETTING ALL VALUES
*
  M.SCREENS = PREV.M.SCREENS
  CURR.SCREENS.FILE = PREV.CURR.SCREENS.FILE
  MAT EDIT.COM = MAT EDIT.COM.SAVE
  MAT EDIT.COM.DRIVER = MAT EDIT.COM.DRIVER.SAVE
  MAT BLD.SCRN = MAT BLD.SCRN.SAVE
  SIV_EVENTS = PREV_EVENTS
  SIV_PSTACK = PREV_PSTACK
  SIV_FLD_STK = PREV_FLD_STK
  SIV_FLD_VAL = PREV_FLD_VAL
  SIV_BAR_FLD = PREV_SIV_BAR_FLD
  SIV_BAR_FILE = PREV_SIV_BAR_FILE
  SIV_BAR_NAME = PREV_SIV_BAR_NAME
  SIV_BAR_ACTIVE = PREV_SIV_BAR_ACTIVE
  SIV_BAR_HNDL = PREV_SIV_BAR_HNDL
  RETURN
*
*---- UPDATE SCREEN RECORD
*
10000*
*
*---- UPDATE FIELD NAME
  SCRN_ID = SCREEN.NAME:"*NAME":EXT.REF
  READU DUMMY FROM CURR.SCREENS.FILE, SCRN_ID ELSE DUMMY = ""
  DUMMY = BLD.FIELD.NAME<1,EXT.REF>
  BEGIN CASE
    CASE DUMMY = ""
      RELEASE CURR.SCREENS.FILE, SCRN_ID
    CASE DUMMY = "*DELETE*"
      DELETE CURR.SCREENS.FILE, SCRN_ID
    CASE 1
      WRITE DUMMY ON CURR.SCREENS.FILE, SCRN_ID
  END CASE
*
*---- UPDATE FIELD HMSG
  SCRN_ID = SCREEN.NAME:"*HMSG":EXT.REF
  READU DUMMY FROM CURR.SCREENS.FILE, SCRN_ID ELSE DUMMY = ""
  DUMMY = BLD.HMSG<1,EXT.REF>
  BEGIN CASE
    CASE DUMMY = ""
      RELEASE CURR.SCREENS.FILE, SCRN_ID
    CASE DUMMY = "*DELETE*"
      DELETE CURR.SCREENS.FILE, SCRN_ID
    CASE 1
      WRITE DUMMY ON CURR.SCREENS.FILE, SCRN_ID
  END CASE
*
*---- UPDATE _XRF RECORD
  SCRN_ID = SCREEN.NAME :"_XRF": EXT.REF
  READU DUMMY FROM CURR.SCREENS.FILE, SCRN_ID THEN
    DUMMY = "*DELETE*"
  END ELSE
    DUMMY = ""
  END
  BEGIN CASE
    CASE ABLD.SCRN(INT.REF)<1,B.XREF> = ""
    CASE ABLD.SCRN(INT.REF)<1,B.XREF> = "??"
    CASE ABLD.SCRN(INT.REF)<1,B.XREF> = "???"
    CASE ABLD.SCRN(INT.REF)<1,B.XREF> = "NULL"
    CASE 1
      FOR BB = 1 TO XBR_SCN_SIZE
        DUMMY<BB> = XBR_SCN(BB)<INT.REF>
      NEXT BB
  END CASE
  BEGIN CASE
    CASE DUMMY = ""
      RELEASE CURR.SCREENS.FILE, SCRN_ID
    CASE DUMMY = "*DELETE*"
      DELETE CURR.SCREENS.FILE, SCRN_ID
    CASE 1
      WRITE DUMMY ON CURR.SCREENS.FILE, SCRN_ID
  END CASE
*
*---- UPDATE _VAL RECORD
  SCRN_ID = SCREEN.NAME :"_VAL"
  READU DUMMY FROM CURR.SCREENS.FILE, SCRN_ID THEN
    IF VBSR_FLD = "" THEN
      DELETE CURR.SCREENS.FILE, SCRN_ID
    END ELSE
      MATWRITE VBSR_REC ON CURR.SCREENS.FILE, SCRN_ID
    END
  END ELSE
    IF VBSR_FLD = "" THEN
      RELEASE CURR.SCREENS.FILE, SCRN_ID
    END ELSE
      MATWRITE VBSR_REC ON CURR.SCREENS.FILE, SCRN_ID
    END
  END
*
*---- UPDATE TOOLBAR & *BAR RECORD
  SCRN_ID = SCREEN.NAME :"*BAR"
  READU DUMMY FROM CURR.SCREENS.FILE, SCRN_ID ELSE DUMMY = "NEW"
  VALDAT.VALUE = ""
  BARFILE = ""
  BARNAME = ""
  LOCATE EXT.REF IN BMSR_FLD<1>,1 SETTING BB THEN
    BARFILE = BMSR_FILE<1,BB>
    BARNAME = BMSR_NAME<1,BB>
    IF BARFILE = "" THEN BARFILE = FIELD(BLD.PCNAME,".",2):"BARS"
    LOCATE EXT.REF IN VBSR_FLD<1>,1 SETTING VFND ELSE VFND = 0
    BEGIN CASE
      CASE BARNAME = ""
      CASE VFND = 0
      CASE ABLD.SCRN(INT.REF)<1,B.VALDAT> = ""
      CASE VBSR_TYPE<1,VFND> = ""
      CASE FIELD(BARNAME,".",1) # FIELD(BLD.PCNAME,".",1)
      CASE 1
        OPEN "",BARFILE TO WORK_FILE ELSE
          BARFILE = ""
          BARNAME = ""
        END
        IF BARFILE # "" THEN
          VALDAT.VALUE<1,VFND> = CHANGE(ABLD.SCRN(INT.REF)<1,B.VALDAT>,",",SVM)
          CALL SCREEN.BUILD.BAR.SUB(VFND,VALDAT.VALUE,VBSR_TYPE,VBSR_DESC,TBAR_REC,DUP.NAME)
          IF TBAR_REC # "ERROR" THEN
            READU DUMMY FROM WORK_FILE, BARNAME THEN
              IF DUMMY<2> = TBAR_REC<2> THEN
                RELEASE WORK_FILE, BARNAME
              END ELSE
                WRITE TBAR_REC ON WORK_FILE, BARNAME
                NEW_BAR = 1
              END
            END ELSE
              WRITE TBAR_REC ON WORK_FILE, BARNAME
              NEW_BAR = 1
            END
          END
        END
    END CASE
  END
  IF BARFILE = "" OR BARNAME = "" THEN
    BARFILE = "PMCBARS"
    BARNAME = "MAIN"
  END
  BEGIN CASE
    CASE BMSR_FLD = "" AND DUMMY = "NEW"
      RELEASE CURR.SCREENS.FILE, SCRN_ID
    CASE BMSR_FLD = ""
      DELETE CURR.SCREENS.FILE, SCRN_ID
    CASE 1
      MATWRITE BMSR_REC ON CURR.SCREENS.FILE, SCRN_ID
  END CASE
  BEGIN CASE
    CASE NEW_BAR
    CASE OLD_BAR_FILE # BARFILE
      NEW_BAR = 1
    CASE OLD_BAR_NAME # BARNAME
      NEW_BAR = 1
    CASE 1
  END CASE
*
*---- SETATTR FOR USERDATA
  T.USERDATA = ABLD.SCRN(INT.REF)<1,B.USERDATA>
  FLDNAME = "_pmc":EXT.REF
  TU_FUNC = "TU.FORM.SETATTR":TU_VERNO
  BEGIN CASE
    CASE PC.PORT.TYPE = "termulator" AND ECD.SCRN.PC<ESN>
    CASE T.USERDATA = OLD_USERDATA
    CASE T.USERDATA = ""
      CALL @TU_FUNC(FLDNAME,"user_data",T.USERDATA,ERROR)
    CASE T.USERDATA = "^VALUE^"
      CALL @TU_FUNC(FLDNAME,"user_data",T.USERDATA,ERROR)
    CASE T.USERDATA = "^IMAGE^"
      CALL @TU_FUNC(FLDNAME,"user_data","",ERROR)
    CASE NOT(NUM(T.USERDATA))
      CALL @TU_FUNC(FLDNAME,"user_data",T.USERDATA,ERROR)
    CASE NUM(T.USERDATA) AND T.USERDATA > 0
      CALL @TU_FUNC(FLDNAME,"user_data",T.USERDATA,ERROR)
    CASE 1
      CALL @TU_FUNC(FLDNAME,"user_data","",ERROR)
  END CASE
*
*---- UPDATE FLD RECORD
  BLD.SCRN(INT.REF) = ABLD.SCRN(INT.REF)
10500*
  PREV.BLD.COMP.SCRN = BLD.COMP.SCRN
  PREV.BLD.CLR.DATA = BLD.CLR.DATA
  BLD.COMP.SCRN = ""
  BLD.CLR.DATA = ""
  BLD.FIELD.NAME = ""
  BLD.HMSG = ""
  BLD.UPD.DT = DATE()
  BLD.UPD.DT<1,2> = TIME()
  MATWRITEU BLD.SCRN ON CURR.SCREENS.FILE, SCREEN.NAME:"*FLD"
  BLD.COMP.SCRN = PREV.BLD.COMP.SCRN
  BLD.CLR.DATA = PREV.BLD.CLR.DATA
*
*---- UPDATE TUF
  JIS.FLAG = 0
  JIS.HMSG = ""
  CALL SCREEN.BUILD.TUF(MAT ABLD.SCRN,SCREEN.NAME,BLD.DEF.SCRN,BLD.PCNAME,BLD.TUF.SCRN,SYS.SCREENS,JIS.FLAG,JIS.HMSG)
  TFILE = FIELD(BLD.PCNAME,".",2):'FORMS'
  TNAME = FIELD(BLD.PCNAME,".",1)
  OPEN "",TFILE TO TUFORMS THEN
    READU DUMMY FROM TUFORMS, TNAME ELSE DUMMY = ""
    DUMMY<1> = BLD.TUF.SCRN<1>
    IF DUMMY # BLD.TUF.SCRN THEN
      WRITE BLD.TUF.SCRN ON TUFORMS, TNAME
    END ELSE
      RELEASE TUFORMS, TNAME
    END
  END ELSE
    ERRMSG = "CANNOT OPEN FORMS FILE ":TFILE
    GOSUB 91000
  END
*---- Removed Enotice based on a request from Renee
*     ERRMSG = "UPDATE TO SCREEN RECORD WAS COMPLETED"
*     GOSUB 91000
  RETURN
*
*---- ERROR ROUTINES
*
91000*
  ERR.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE=2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE=3
  CALL SYSCOM(MAT SYSCOM.REC)
99990*
  MAT EDIT.COM = MAT EDIT.COM.SAVE
99999*
  RETURN
END
