SCREEN.BUILD.1
*COPY>CPYLIB>COM1
*COPY>CPYLIB>COM.SCREEN.BUILD
*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - SCREEN.BUILD.1
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 06/09/84
*
* DESCRIPTION
*
* This is the main program for the screen builder system. The name
* of the screen to be added or maintained is requested and control
* is passed to the associated subroutines for processing.
*
*T21177 diane 12/09/1996 * Enter PCNAME and FORM FILE PREFIX for GUI
*                          form.
*********************************************************************
*
*COPY>CPYLIB>TCC
*COPY>CPYLIB>ALT.BUILD.SCREEN
*COPY>CPYLIB>PCNAME_XREF
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- DEFINE VARIABLES
*
*
*---- OPEN ALL FILES
*
   MAT FILE.VARS = ""
   OPEN "","VOC" TO MD ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOTO 93000
   END
   OPEN "","PCNAME_XREF" TO PCNAME_XREF ELSE
      ERRMSG = "CANNOT OPEN PCNAME_XREF FILE"
      GOTO 93000
   END
   OPEN "","M.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN M.SCREENS FILE"
      GOTO 93000
   END
   OPEN "","XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "CANNOT OPEN XREF.DATA FILE"
      GOTO 93000
   END
*   OPEN "","DEV.SCREENS" TO SECOND.SCREENS ELSE
*      ERRMSG = "CANNOT OPEN DEV.SCREENS FILE"
*      GOTO 93000
*   END
*
*---- INITIALIZATION
*
10*
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 3
   ECD.SCRN.NAME = "SCREEN.BUILD.1"
*   ECD.SCRN.FLAG<1> = 2
   ECD.SCRN.NAME<2> = "SCREEN.BUILD.DATA"
*      ECD.SCRN.FLAG<2> = 2
   ECD.SCRN.NAME<3> = "SCREEN.BUILD.DATA.SUB"
*      ECD.SCRN.FLAG<3> = 2
   ECD.ACTION = 1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   IF PC.PORT.TYPE = "termulator" THEN PC.PORT.TYPE = "STD"
*
   SFILE = ""
   SNAME = ""
   FFILE = ""
   FNAME = ""
   PCNAME = ""
*
*---- MAIN PROCESSING
*
100 *
   ECD.ACTION = 2; CALL SCRN.EDIT
   MAT SCV.REC = ""
*
*---- Enter FILE Name
110 *
   ECD.DEFAULT = SFILE
   ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = ""
         PCNAME = ""
         GOSUB 300
         IF ECD.RET.VALUE = "END" THEN
            GOTO 110
         END
      CASE 1
         IF INDEX(ECD.RET.VALUE,".",1) = 0 THEN
            ECD.RET.VALUE = ECD.RET.VALUE:".SCREENS"
            SCV.REC(1) = ECD.RET.VALUE
            ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
         END
         IF FIELD(ECD.RET.VALUE,".",2) # "SCREENS" THEN
            ERRMSG = 'Screen file name must end with ".SCREENS"'
            GOSUB 91000; GOTO 110
         END
         ERR = 0
         READ REC FROM MD, ECD.RET.VALUE THEN
            IF REC<1> # "F" THEN
               ERR = 1
            END ELSE
               OPEN '',ECD.RET.VALUE TO SYS.SCREENS ELSE ERR = 1
            END
         END ELSE
            ERR = 1
         END
         IF ERR THEN
            ERRMSG = "INVALID FILE NAME - ":ECD.RET.VALUE
            GOSUB 91000; GOTO 110
         END
         SFILE = ECD.RET.VALUE
         GOSUB 200
   END CASE
   SCREEN.NAME = SNAME
   SCREEN.DIMENSIONS = ""
   SCREEN.DIMENSIONS<1> = 0
   SCREEN.DIMENSIONS<2> = 22
   SCREEN.DIMENSIONS<3> = 0
   SCREEN.DIMENSIONS<4> = 79
   SCREEN.DIMENSIONS<5> = 0
   SCREEN.DIMENSIONS<6> = 23
   SCREEN.DIMENSIONS<7> = 0
   SCREEN.DIMENSIONS<8> = 79
*     WRITE SCREEN.DIMENSIONS ON SYS.SCREENS, SCREEN.NAME:"*DIM"
   CALL SCREEN.BUILD.HDR(SCREEN.NAME,SCREEN.DIMENSIONS,SFILE,SYS.SCREENS)
   GOTO 100
*
*---- Enter SCREEN Name
200 *
   ECD.DEFAULT = SNAME
   ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 110
   SNAME = ECD.RET.VALUE
   RETURN
*
*---- Enter PCNAME
300 *
*   IF FFILE # "" THEN
*      ECD.DEFAULT = FFILE:".":FNAME
*   END
   ECD.NUM = 3; ECD.VALDAT.FILE = PCNAME_XREF
   ECD.VALDAT.CODE = 2; ECD.PREFIX.ID = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         RETURN
*  CASE ECD.RET.VALUE = ""
*    FFILE = ""
*    FNAME = ""
      CASE 1
         ECD.NUM = 1; SCV.REC(ECD.NUM)<1> = ECD.VALDAT.ITEM<1>
         SFILE = ECD.VALDAT.ITEM<1>
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 2; SCV.REC(ECD.NUM)<1> = ECD.VALDAT.ITEM<2>
         SNAME = ECD.VALDAT.ITEM<2>
         ECD.ACTION = 5; CALL SCRN.EDIT
         ERR = 0
         OPEN '',SFILE TO SYS.SCREENS ELSE ERR = 1
         IF ERR THEN
            ERRMSG = "INVALID FILE NAME - ":SFILE
            GOSUB 91000; GOTO 110
         END
         ERRMSG = "PRESS RETURN TO CONTINUE" ; GOSUB 91000
*         TEMP.FFILE = FIELD(ECD.RET.VALUE,".",2)
*         TEMP.FNAME = FIELD(ECD.RET.VALUE,".",1)
*         ERR = 0
*         READ REC FROM MD, TEMP.FFILE:"FORMS" THEN
*            IF REC<1> # "F" THEN
*               ERR = 1
*            END ELSE
*               OPEN '',TEMP.FFILE:"FORMS" TO FORMFILE ELSE ERR = 1
*            END
*         END ELSE
*            ERR = 1
*         END
*         IF ERR THEN
*            ERRMSG = "INVALID PC FORM FILE NAME - ":TEMP.FFILE:"FORMS"
*            GOSUB 91000; GOTO 110
*         END
*         READ REC FROM FORMFILE, FNAME THEN
*            NEW.FORM = 0
*         END ELSE
*            NEW.FORM = 1
*         END
*         FFILE = TEMP.FFILE:"FORMS"
*         FNAME = TEMP.FNAME
   END CASE
   RETURN
*
*--- CALLS FOR SYSCOM
*
91000 *
   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
*
99999*
   END
*
*---- Determine PCNAME
*
20000 *
   SCNF_PFX = FIELD(T.SCRN,".",1)
   IF SCNF_PFX = "M" THEN SCNF_PFX = "CBA"
   IF LEN(SCNF_PFX) # 3 THEN
*      GOTO 20099
      SCNF_PFX = SCNF_PFX[1,3]
   END
   LOCATE SCNF_PFX IN BASE.FORMS SETTING FND THEN
      SCNF_PFX = "PMC"
   END
* Use old pcname if new screen name is same as old screen name
* Generate new pcname if new screen name is different from old screen name
   IF OLD.BLD.PCNAME # "" AND OLD.SCREEN.NAME = NEW.SCREEN.NAME THEN
      PCNAME = FIELD(OLD.BLD.PCNAME,".",1):".":SCNF_PFX
   END ELSE
      PCNAME = NEW.SCREEN.NAME
      CALL GET_PCNAME(PCNAME,SCNF_PFX,BNAME)
      IF PCNAME = "" THEN
         GOSUB 20100
         IF PCNAME = "" THEN GOTO 20099
      END
   END
*    PRINT @(0,23):'PCNAME = (':PCNAME:')': ; INPUT ACK:
*
*---- Validate Pcname
20010*
   MATREAD PCNX.REC FROM PCNAME_XREF, PCNAME THEN
      BEGIN CASE
         CASE PCNX_FILE # T.SCRN OR PCNX_ID # NEW.SCREEN.NAME
            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
            GOSUB 90000
            BNAME = FIELD(PCNAME,".",1)
            GOSUB 20100
            IF PCNAME = "" THEN GOTO 20099
            GOTO 20010
*         CASE PCNX_ID # NEW.SCREEN.NAME
*            ERRMSG = PCNAME:" is referencing file (":PCNX_FILE:"), screen (":PCNX_ID:")"
*            GOSUB 90000
*            GOSUB 20100
*            IF PCNAME = "" THEN GOTO 20099
*            GOTO 20010
      END CASE
   END ELSE
      PCNX_FILE = T.SCRN
      PCNX_ID = NEW.SCREEN.NAME
   END
   NEW.BLD.PCNAME = PCNAME
20099*
   RETURN
*
* Prompt for new Pcname if can't determine new one automatically
20100*
   PMSG = "Enter PC Screen Name (":NEW.SCREEN.NAME:") :"
   X = 0; Y = 21; TYP = 1; MAXL = 8; DEFAULT = FIELD(BNAME,".",1) "L#8"
   CALL EDIT.SUB
   IF VALUE = "END" OR VALUE = "" THEN
      PCNAME = ""
   END ELSE
      PCNAME = VALUE : "." : SCNF_PFX
   END
   RETURN
*
*---- Determine Form File
30000 *
   BEGIN CASE
      CASE F.FORM = ""
         F.FORM = FIELD(F.SCRN,".",1)
         LOCATE F.FORM IN BASE.FORMS SETTING FND THEN
            F.FORM = "PMCFORMS"
         END ELSE
            F.FORM = F.FORM[1,3]:"FORMS"
         END
*         PRINT @(0,23):'FORMS = (':F.FORM:')': ; INPUT ACK:
         OPEN "",F.FORM TO FROM.FORMS ELSE
            OPEN.ERROR = 1
         END
      CASE T.FORM = ""
         T.FORM = FIELD(T.SCRN,".",1)
         LOCATE T.FORM IN BASE.FORMS SETTING FND THEN
            T.FORM = "PMCFORMS"
         END ELSE
            T.FORM = T.FORM[1,3]:"FORMS"
         END
*         PRINT @(0,23):'FORMS = (':T.FORM:')': ; INPUT ACK:
         OPEN "",T.FORM TO TO.FORMS ELSE
            OPEN.ERROR = 1
         END
   END CASE
   RETURN
*
*---- ERROR ROUTINE
*
90000*
   PRINT @(0,23):CL:ERRMSG:
   INPUT REPLY,1:
   PRINT @(0,23):CL:
   RETURN
