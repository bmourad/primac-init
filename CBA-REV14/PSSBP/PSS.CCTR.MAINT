*COPY>CPYLIB>SCOMMON1
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - PSS.CCTR.MAINT
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE     - 05/14/85
* DESCRIPTION
* Maintain cost center availability master file.
*T20989 lanny 09/17/1996 Look at CCTR.SCHED.FLAG to allow access.
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF
*COPY>PSS.CPYLIB>CCTR.AVAIL
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PSS.CPYLIB>HOLIDAY.SCHED
*
*---- PRE-INITIALIZATION
*
  PROC.TYPE = "M"
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PREFIX FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.AVAIL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN HOLIDAY.SCHED FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.JOURNAL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.LOCK FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  IF CONO = "END" THEN GOTO 99999
  READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
  MAT GEN.XREF.REC = ""
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;PSS.CCTR.MAINT
  SCREEN FORMAT
  TP.ERRMSG = ""
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  SCREEN CLEAR
110 *
  S$DATA(1)<S$SCR> = TODAY
  SCREEN DISPLAY;;1
120 *
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 99999
  DEPT = S$VALUE
  IF DEPT = "" THEN
    MAT DEPT.REC = ""
  END ELSE
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
      ERRMSG = "Invalid Department"
      GOSUB 90000
      GOTO 120
    END
    S$DATA(3)<S$SCR> = DEPT.DESC
    SCREEN DISPLAY;;3
  END
130 *
  SCREEN FIELD;;4
  SCREEN INPUT;;4;GOTO 100
  CCTR = S$VALUE
  BEGIN CASE
    CASE CCTR = "???" AND DEPT # ""
      GXR.CO = CONO
      GXR.XREF = DEPARTMENT
      GXR.SRCH.ID = DEPT
      GXR.FILE = COST.CNTR
      GXR.LOC = 5
      GXR.TOP.LINE = "COST CENTER XREF SEARCH"
      GXR.HEADING<1,1> = "CCTR"
      GXR.ATT<1,1> = 0
      GXR.LEN<1,1> = 4
      GXR.HEADING<1,2> = "DESCRIPTION"
      GXR.ATT<1,2> = 1
      GXR.LEN<1,2> = 30
      GXR.ID = ""
*         CALL GEN.XREF1 (MAT GEN.XREF.REC, PREFIX)
      CALL GEN.XREF (MAT GEN.XREF.REC, PREFIX)
      CCTR = GXR.ID
      IF GXR.ACTION # "X" THEN
        SCREEN FORMAT
        S$DATA(4)<S$SCR> = CCTR
        GOSUB 40090
        IF NOT(NUM(CCTR)) THEN GOTO 130
      END
      IF GXR.ID = "" THEN GOTO 130
    CASE CCTR = "" AND DEPT # ""
      NULL
    CASE CCTR # "" AND NUM(CCTR) AND DEPT = ""
      NULL
    CASE CCTR # "" AND NUM(CCTR) AND DEPT # ""
      LOCATE CCTR IN DEPT.CCTRS<1>,1 SETTING C ELSE
        ERRMSG = "Invalid cost center for specified department"
        GOSUB 90000
        GOTO 130
      END
    CASE 1
      ERRMSG = "Invalid Entry"
      GOSUB 90000
      GOTO 130
  END CASE
  IF CCTR = "" THEN
    MAT CCTR.REC = ""
  END ELSE
    MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
      ERRMSG = "Invalid Cost Center"
      GOSUB 90000
      GOTO 130
    END
    IF CCTR.MASTER # "" AND CCTR.MASTER # CCTR THEN
      ERRMSG = "This is not a master Cost Center"
      GOSUB 90000
      GOTO 130
    END
*T20989 v
    IF CCTR.SCHED.FLAG = 'N' THEN
      ERRMSG = "Cost Center may not be scheduled."
      GOSUB 90000
      GOTO 130
    END
*T20989 ^
    IF DEPT # CCTR.DEPT THEN
      DEPT = CCTR.DEPT
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
        MAT DEPT.REC = ""
        DEPT.DESC = "???????????????"
      END
      S$DATA(2)<S$SCR> = DEPT
      S$DATA(3)<S$SCR> = DEPT.DESC
      SCREEN DISPLAY;;2
      SCREEN DISPLAY;;3
    END
    S$DATA(5)<S$SCR> = CCTR.DESC
    SCREEN DISPLAY;;5
    MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO : DEPT ELSE
      MAT CCTR.AVAIL.REC = ""
      ERRMSG = "Must setup department availability first"
      GOSUB 90000
      GOTO 100
    END
    MAT CCTR.AVAIL.REC = ""
  END
  IF CCTR = "" THEN ITEM.KEY = DEPT ELSE ITEM.KEY = DEPT:"*":CCTR
  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      NEW.REC = 0
      * T26126 v
      MATREADU CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:ITEM.KEY LOCKED
        ERRMSG = 'CCTR AVAILABILITY record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 90000;GOTO 100 
      END ELSE
      * T26126 ^
        MAT CCTR.AVAIL.REC = ""
200 *
        SCREEN FIELD;;29
        SCREEN INPUT;;29;GOTO 100
        IF S$VALUE # "" THEN
          MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:S$VALUE ELSE
            MAT CCTR.AVAIL.REC = ""
            ERRMSG = "Invalid duplicating item"
            GOSUB 90000
            GOTO 200
          END
        END ELSE
          NEW.REC = 1
        END
      END
      IF NEW.REC THEN
        FOR REF = 1 TO 4
          ON REF GOSUB 1000,1050,1070,1100
          IF S$VALUE = "END" THEN GOTO 100
        NEXT REF
        FOR DAY = 1 TO 7 UNTIL S$VALUE = "END"
          GOSUB 1200
        NEXT DAY
        IF S$VALUE = "END" THEN GOTO 100
        NEW.REC = 0
      END ELSE
        GOSUB 40000
        GOSUB 50000
      END
    CASE 1
      MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:ITEM.KEY ELSE
        ERRMSG = "Invalid entry. Try again! "
        GOSUB 90000
        GOTO 100
      END
      GOSUB 40000
      GOSUB 50000
  END CASE
*
*---- GET OPERATOR REQUEST
*
500 *
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      SCREEN FIELD;;25
      SCREEN INPUT;;25
    CASE 1
      SCREEN FIELD;;33
      SCREEN INPUT;;33
  END CASE
  OPTION = S$VALUE
  BEGIN CASE
    CASE NUM(OPTION)
      BEGIN CASE
        CASE OPTION <= 4
          ON OPTION GOSUB 1000,1050,1070,1100
        CASE OPTION >= 5 AND OPTION <= 11
          DAY = OPTION - 4
          GOSUB 1200
      END CASE
    CASE OPTION = "D"
      SCREEN FIELD;;26
      SCREEN INPUT;;26
      IF S$VALUE = "Y" THEN
***         DELETE CCTR.AVAIL, CONO:ITEM.KEY
        TPFID = CONO:ITEM.KEY
        CALL TRANSACTION.DELETE(CONO,TP.DIV,"CCTR.AVAIL",TPFID,CCTR.AVAIL,PSS.JOURNAL,ERRMSG)
**********************************************************************
        GOTO 100
      END
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "F"
***      MATWRITE CCTR.AVAIL.REC ON CCTR.AVAIL, CONO:ITEM.KEY
      TPFID = CONO:ITEM.KEY
      MATBUILD TPREC FROM CCTR.AVAIL.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"CCTR.AVAIL",TPFID,TPREC,CCTR.AVAIL,PSS.JOURNAL,ERRMSG)
**********************************************************************
      GOTO 100
    CASE 1
      ERRMSG = "Invalid Selection"
      GOSUB 90000
  END CASE
  GOTO 500
*
*---- GET CONTINUOUS FLAG
*
1000 *
  S$DATA(27)<S$SCR> = CCA.CONT.SCHD
  SCREEN FIELD;;27
  SCREEN INPUT;;27;RETURN
  CCA.CONT.SCHD = S$VALUE
  RETURN
*
*---- GET RESOURCE FLAG
*
1050 *
  S$DATA(28)<S$SCR> = CCA.SAME.EQP
  SCREEN FIELD;;28
  SCREEN INPUT;;28;RETURN
  CCA.SAME.EQP = S$VALUE
  RETURN
*
*---- GET ROUND HOURS
*
1070 *
  BEGIN CASE
    CASE CCTR = ""
      SCREEN FIELD;;31
      SCREEN INPUT;;31;RETURN
      CCA.ROUND.HRS = S$VALUE
    CASE NOT(NEW.REC)
      ERRMSG = "Modify at Department level only. Try again! "
      GOSUB 90000
  END CASE
  RETURN
*
*---- GET HOLIDAY CODE
*
1100 *
  S$DATA(11)<S$SCR> = CCA.HOL.SCHED<1,1>
  SCREEN FIELD;;11
  SCREEN INPUT;;11;RETURN
  IF S$VALUE # "" THEN
    MATREAD HOL.SCHED.REC FROM HOLIDAY.SCHED, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Holiday Schedule"
      GOSUB 90000
      GOTO 1100
    END
  END
  CCA.HOL.SCHED<1,1> = S$VALUE
1110 *
  S$DATA(12)<S$SCR> = CCA.HOL.SCHED<1,2>
  SCREEN FIELD;;12
  SCREEN INPUT;;12;RETURN
  IF S$VALUE # "" THEN
    MATREAD HOL.SCHED.REC FROM HOLIDAY.SCHED, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Holiday Schedule"
      GOSUB 90000
      GOTO 1110
    END
  END
  CCA.HOL.SCHED<1,2> = S$VALUE
1120 *
  S$DATA(13)<S$SCR> = CCA.HOL.SCHED<1,3>
  SCREEN FIELD;;13
  SCREEN INPUT;;13;RETURN
  IF S$VALUE # "" THEN
    MATREAD HOL.SCHED.REC FROM HOLIDAY.SCHED, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Holiday Schedule"
      GOSUB 90000
      GOTO 1120
    END
  END
  CCA.HOL.SCHED<1,3> = S$VALUE
  RETURN
*
*---- GET DATA FOR SPECIFIED DAY
*
1200 *
  S$VAL = DAY
  SCREEN FIELD;;14
  SCREEN INPUT;;14;GOTO 1290
  CCA.AVAIL.SHR<1,DAY,1> = S$VALUE
  IF S$VALUE = "" THEN
    S$VAL = DAY
    S$DATA(15)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;15
    S$VAL = DAY
    S$DATA(16)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;16
    CCA.MULT<1,DAY,1> = ""
  END ELSE
    S$VAL = DAY
    S$DATA(15)<S$SCR,DAY> = "x"
    SCREEN DISPLAY;;15
    S$VAL = DAY
    SCREEN FIELD;;16
    SCREEN INPUT;;16;GOTO 1290
    CCA.MULT<1,DAY,1> = S$VALUE
  END
*
  S$VAL = DAY
  SCREEN FIELD;;17
  SCREEN INPUT;;17;GOTO 1290
  CCA.AVAIL.SHR<1,DAY,2> = S$VALUE
  IF S$VALUE = "" THEN
    S$VAL = DAY
    S$DATA(18)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;18
    S$VAL = DAY
    S$DATA(19)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;19
    CCA.MULT<1,DAY,2> = ""
  END ELSE
    S$VAL = DAY
    S$DATA(18)<S$SCR,DAY> = "x"
    SCREEN DISPLAY;;18
    S$VAL = DAY
    SCREEN FIELD;;19
    SCREEN INPUT;;19;GOTO 1290
    CCA.MULT<1,DAY,2> = S$VALUE
  END
*
  S$VAL = DAY
  SCREEN FIELD;;20
  SCREEN INPUT;;20;GOTO 1290
  CCA.AVAIL.SHR<1,DAY,3> = S$VALUE
  IF S$VALUE = "" THEN
    S$VAL = DAY
    S$DATA(21)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;21
    S$VAL = DAY
    S$DATA(22)<S$SCR,DAY> = ""
    SCREEN DISPLAY;;22
    CCA.MULT<1,DAY,3> = ""
  END ELSE
    S$VAL = DAY
    S$DATA(21)<S$SCR,DAY> = "x"
    SCREEN DISPLAY;;21
    S$VAL = DAY
    SCREEN FIELD;;22
    SCREEN INPUT;;22;GOTO 1290
    CCA.MULT<1,DAY,3> = S$VALUE
  END
1290 *
  CCA.AVAIL.HRS<1,DAY> = 0
  FOR SFT = 1 TO 3
    CCA.AVAIL.HRS<1,DAY> = CCA.AVAIL.HRS<1,DAY> + (CCA.AVAIL.SHR<1,DAY,SFT> * CCA.MULT<1,DAY,SFT>)
  NEXT SFT
  IF CCA.AVAIL.HRS<1,DAY> = 0 THEN CCA.AVAIL.HRS<1,DAY> = ""
  S$VAL = DAY
  S$DATA(23)<S$SCR,DAY> = CCA.AVAIL.HRS<1,DAY>
  SCREEN DISPLAY;;23
  TOTAL.HRS = 0
  FOR D = 1 TO 7
    TOTAL.HRS = TOTAL.HRS + CCA.AVAIL.HRS<1,D>
  NEXT D
  S$DATA(24)<S$SCR> = TOTAL.HRS
  SCREEN DISPLAY;;24
  RETURN
*
*---- LOAD S$DATA MATRIX
*
40000 *
  S$DATA(27)<S$SCR> = CCA.CONT.SCHD
  S$DATA(28)<S$SCR> = CCA.SAME.EQP
  S$DATA(11)<S$SCR> = CCA.HOL.SCHED<1,1>
  S$DATA(12)<S$SCR> = CCA.HOL.SCHED<1,2>
  S$DATA(13)<S$SCR> = CCA.HOL.SCHED<1,3>
  S$DATA(31)<S$SCR> = CCA.ROUND.HRS
  TOTAL.HRS = 0
  FOR DAY = 1 TO 7
    S$DATA(14)<S$SCR,DAY> = CCA.AVAIL.SHR<1,DAY,1>
    IF CCA.MULT<1,DAY,1> # "" THEN
      S$DATA(15)<S$SCR,DAY> = "x"
    END
    S$DATA(16)<S$SCR,DAY> = CCA.MULT<1,DAY,1>
    S$DATA(17)<S$SCR,DAY> = CCA.AVAIL.SHR<1,DAY,2>
    IF CCA.MULT<1,DAY,2> # "" THEN
      S$DATA(18)<S$SCR,DAY> = "x"
    END
    S$DATA(19)<S$SCR,DAY> = CCA.MULT<1,DAY,2>
    S$DATA(20)<S$SCR,DAY> = CCA.AVAIL.SHR<1,DAY,3>
    IF CCA.MULT<1,DAY,3> # "" THEN
      S$DATA(21)<S$SCR,DAY> = "x"
    END
    S$DATA(22)<S$SCR,DAY> = CCA.MULT<1,DAY,3>
    S$DATA(23)<S$SCR,DAY> = CCA.AVAIL.HRS<1,DAY>
    TOTAL.HRS = TOTAL.HRS + CCA.AVAIL.HRS<1,DAY>
  NEXT DAY
  S$DATA(24)<S$SCR> = TOTAL.HRS
40090 *
  SCREEN DISPLAY;;ALL
  RETURN
*
*--- SCROLL
*
50000 *
  S$VAL = 1
  S$CNT = 7
  SCREEN MULTI;;C;14;15;16;17;18;19;20;21;22;23
  RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
  BEGIN CASE
    CASE PROC.TYPE = "M"
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      REQDIV = DEPT.DIV
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
      BEGIN CASE
        CASE TP.DIV = "X"
          RELEASE PSS.LOCK, CONO:"TP"
          IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
        CASE TP.DIV = ""
          DCNT = DCOUNT(REQDIV,VM)
          FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
          NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      TP.ERRMSG = ERRMSG
    CASE 1
      TP.DIV = ""
      DELETE PSS.LOCK, @TTY
      TP.ERRMSG = ""
  END CASE
  RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
*       PRINT @(-1):
  STOP
END
