      SUBROUTINE WS.BOOK.JOB(CONO, DIV.ID, MAT WCOM)
*********************************************************************
*
* PROGRAM - WS.BOOK.JOB
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 04/01/91
* MODIFIED- 11/03/95 TERRY NORTHCUTT TASK 19407 DIVISIONALIZATION
*
* DESCRIPTION
*
* This subroutine is used to display jobs awaiting scheduling. Job
* may be subsequently selected for scheduling.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PSS.CPYLIB>COM.WIN
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>FILE.VARS
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSSBP>WINCOM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      XADJ = "-"
      YADJ = "-"
      READ ALL.JOBS FROM PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ELSE ; *---- TASK 19407
         ALL.JOBS = ""
      END
*     IF ALL.JOBS = "" THEN
*        WCOM.STATUS = "Sorry, job queue is empty"
*        GOSUB 90000
*        GOTO 99999
*     END
      JCNT = DCOUNT(ALL.JOBS, AM)
*
*---- OPEN WINDOW
*
      HEAD.CNT = 1
      LOCATE WCOM.WND IN WIN.ID,1 SETTING WPTR ELSE WIN.ID<WPTR>=WCOM.WND
      CCTR = WIN.CURR.CCTR
      LOCATE CCTR IN WIN.CCTR<1>,1 SETTING CPTR ELSE NULL
      WCOM.CAPTION="Jobs Waiting to be Scheduled"
      WCOM.COL="C"
      WCOM.ROW="C"
      WCOM.WIDTH=79
      BEGIN CASE
      CASE (HEAD.CNT+JCNT) > 16
         WCOM.HEIGHT = 16
      CASE JCNT = 0
         WCOM.HEIGHT = HEAD.CNT+1
      CASE 1
         WCOM.HEIGHT = HEAD.CNT+JCNT
      END CASE
      CALL OPEN.WINDOW(MAT WCOM)
*
      WCOM.COL=0
      WCOM.ROW=0
      WCOM.WIDTH=10:XADJ
      WCOM.HEIGHT=1:YADJ
      WCOM.FCOLOR="BLACK"
      WCOM.BCOLOR="GREY"
      WCOM.RCOLOR="BLACK"
      WCOM.DATA = "  Job #"
      CALL LOAD.DATA(MAT WCOM)
      WCOM.COL=10
      WCOM.ROW=0
      WCOM.WIDTH=37:XADJ
      WCOM.HEIGHT=1:YADJ
      WCOM.FCOLOR="BLACK"
      WCOM.BCOLOR="GREY"
      WCOM.RCOLOR="BLACK"
      WCOM.DATA = "  Customer"
      CALL LOAD.DATA(MAT WCOM)
      WCOM.COL=47
      WCOM.ROW=0
      WCOM.WIDTH=32:XADJ
      WCOM.HEIGHT=1:YADJ
      WCOM.FCOLOR="BLACK"
      WCOM.BCOLOR="GREY"
      WCOM.RCOLOR="BLACK"
      WCOM.DATA = "  Cost Center"
      CALL LOAD.DATA(MAT WCOM)
*
      WIN.JOB<WPTR> = ""
      FOR JPTR = 1 TO JCNT
         JOBNO = ALL.JOBS<JPTR,1>
         WIN.JOB<WPTR,JPTR> = JOBNO
         MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO ELSE
            MAT JBS.REC = ""
         END
         WCOM.COL=0
         WCOM.ROW=JPTR
         WCOM.WIDTH=10:XADJ
         WCOM.HEIGHT=1:YADJ
         WCOM.FCOLOR="BLACK"
         WCOM.BCOLOR="WHITE"
         WCOM.RCOLOR="BLACK"
         WCOM.SELECT=JPTR*1000
         WCOM.SELTYPE=1
         WCOM.DATA = " ":JOBNO
         CALL LOAD.DATA(MAT WCOM)
         WCOM.COL=10
         WCOM.ROW=JPTR
         WCOM.WIDTH=37:XADJ
         WCOM.HEIGHT=1:YADJ
         WCOM.FCOLOR="BLACK"
         WCOM.BCOLOR="WHITE"
         WCOM.RCOLOR="BLACK"
         WCOM.SELECT=JPTR*1000
         WCOM.DATA = " ":JBS.CUST.NAME[1,35]
         CALL LOAD.DATA(MAT WCOM)
         CCTR = ""
         DCNT = DCOUNT(JBS.DEPT,VM)
         FOR DPTR = 1 TO DCNT WHILE CCTR = ""
            IF JBS.SCH.DATE<1,DPTR> = "" THEN
               CCTR = JBS.CCTR<1,DPTR>
               MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
                  MAT CCTR.REC = ""
               END
               WCOM.COL=47
               WCOM.ROW=JPTR
               WCOM.WIDTH=32:XADJ
               WCOM.HEIGHT=1:YADJ
               WCOM.FCOLOR="BLACK"
               WCOM.BCOLOR="WHITE"
               WCOM.RCOLOR="BLACK"
               WCOM.DATA = " ":CCTR:" ":CCTR.DESC
               CALL LOAD.DATA(MAT WCOM)
            END
         NEXT DPTR
      NEXT JPTR
      GOTO 99999
*
*---- ERROR ROUTINE
*
90000 *
      WCOM.DATA = WCOM.STATUS
      CALL MESSAGE.BOX(MAT WCOM)
      WCOM.STATUS = ""
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      RETURN
      END
