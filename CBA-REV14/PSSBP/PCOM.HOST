OBSOLETE
*********************************************************************
* Copyright 1992 by Pacrim Software Pty Ltd
* SYSTEM    - PRIMAC
* SOURCE    - PSSBP
* PROGRAM   - PCOM.HOST
* AUTHOR    - Graham Jarvis, Pacrim Software Pty Ltd
* DATE      - 01 December 1992
* DESCRIPTION
* Provides Inquiry Information for the Visual Basic PSS Interface
*********************************************************************
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>JCS.CPYLIB>JOB.TRANS
*COPY>JCS.CPYLIB>JOB.TRACKING
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>DIVISION
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*
*---- OPEN ALL FILES
*
      OPEN "COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOTO 93000
      END
      OPEN "CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOTO 93000
      END
      OPEN "PREFIX" TO PREFIX ELSE
         ERRMSG = "CANNOT OPEN PREFIX FILE"
         GOTO 93000
      END
      OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN CCTR.SCHED FILE"
         GOTO 93000
      END
      OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.CCTR.SCHED FILE"
         GOTO 93000
      END
      OPEN "CCTR.SCHED.HIST" TO CCTR.SCHED.HIST ELSE
         ERRMSG = "CANNOT OPEN CCTR.SCHED.HIST FILE"
         GOTO 93000
      END
      OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE
         ERRMSG = "CANNOT OPEN CCTR.AVAIL FILE"
         GOTO 93000
      END
      OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
         ERRMSG = "CANNOT OPEN HOLIDAY.SCHED FILE"
         GOTO 93000
      END
      OPEN "JOB.SCHED" TO JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
         GOTO 93000
      END
      OPEN "ESTIMATE" TO ESTIMATE ELSE
         ERRMSG = "CANNOT OPEN ESTIMATE FILE"
         GOTO 93000
      END
      OPEN "JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"
         GOTO 93000
      END
      OPEN "JOB.TRANS" TO JOB.TRANS ELSE
         ERRMSG = "CANNOT OPEN JOB.TRANS FILE"
         GOTO 93000
      END
      OPEN "JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE
         ERRMSG = "CANNOT OPEN JOB.CRTL.DATE.EXC FILE"
         GOTO 93000
      END
      OPEN "JOB.TRACKING" TO JOB.TRACKING ELSE
         ERRMSG = "CANNOT OPEN JOB.TRACKING FILE"
         GOTO 93000
      END
      OPEN "DIVISION" TO DIVISION ELSE
         ERRMSG = "CANNOT OPEN DIVISION FILE"
         GOTO 93000
      END
      OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.JOB.SCHED FILE"
         GOTO 93000
      END
      OPEN "DEPARTMENT" TO DEPARTMENT ELSE
         ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
         GOTO 93000
      END
      OPEN "COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"
         GOTO 93000
      END
      OPEN "OPERATION" TO OPERATION ELSE
         ERRMSG = "CANNOT OPEN OPERATION FILE"
         GOTO 93000
      END
      OPEN 'CUSTOMER' TO CUSTOMER ELSE
         ERRMSG='Cannot Open CUSTOMER File'
      END
OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
   ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
GOTO 93000
END
OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
   ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
GOTO 93000
END
*
*---- INITIALIZATION
*
      CONO='001'    ;* Set Default CONO to 001
      REC.DATA=''
      REC.CNT=''
*
*---- MAIN PROCESSING
*
110 *
      PROMPT ""
      CRLF=CHAR(13):CHAR(10)
10 *
      ECHO OFF
      INPUT REC.DATA,140_
      REQID=REC.DATA[1,4]
      BEGIN CASE
      CASE REQID='CONO'
         GOSUB 500
         GOSUB 600;  * Set Active Company Number
         GOSUB 510
      CASE REQID='DEPT'
         GOSUB 500
         GOSUB 2000; * Department Cost Center Schedule Details
         GOSUB 510
      CASE REQID='DSUM'
         GOSUB 500
         GOSUB 2000; * Department Cost Center Summary Details
         GOSUB 510
      CASE REQID='CCTR'
         GOSUB 500
         GOSUB 3000; * Cost Center Schedule Details
         GOSUB 510
      CASE REQID='JOBS'
         GOSUB 500
         GOSUB 4000; * Scheduled and Pending Jobs
         GOSUB 510
      CASE REQID='JDET'
         GOSUB 500
         GOSUB 6000;* Job Scheduled Details
         GOSUB 510
      CASE REQID='JDTE'
         GOSUB 500
         GOSUB 7000;* Job Critical Date Screen Details
         GOSUB 510
      CASE REQID='CFND'
         GOSUB 500
         GOSUB 8000;* Customer XRef Searching
         GOSUB 510
      CASE REQID='JFND'
         GOSUB 500
         GOSUB 8600;* Customer Job XRef Searching
         GOSUB 510
      CASE REQID='ODUE'
         GOSUB 500
         GOSUB 8500;* Overdue Jobs, Scheduled or Pending
         GOSUB 510
      CASE REQID='CRTL'
         GOSUB 500
         GOSUB 9000; * Critical Dates Exception Details
         GOSUB 510
      CASE REQID='JPOS'
         GOSUB 500
         GOSUB 10000;* Job Outside PO Exception Details
         GOSUB 510
      CASE REQID='LOFF'
         GOSUB 500
P_X  = 0 ; P_Y = 23 ; P_VALUE = 'LOGOFF' ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOSUB 510
         STOP
*
*--- Master File Initial Load Requests
*
      CASE REQID='LOAD'
         BEGIN CASE
         CASE REC.DATA[5,4]='DEPT'
            GOSUB 500
            GOSUB 1000
            GOSUB 510
         CASE REC.DATA[5,4]='CCTR'
            GOSUB 500
            GOSUB 1100
            GOSUB 510
         CASE REC.DATA[5,4]='COMP'
            GOSUB 500
            GOSUB 1200
            GOSUB 510
         END CASE
      CASE 1
         GO 10
      END CASE
      GOTO 10
*
* --- Send Start Data Msg
*
500 *
P_X  = 0 ; P_Y = 23 ; P_VALUE = 'Str.Data|' ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      SEND.DATA=''
      RETURN
*
* --- Send End Data Msg
*
510 *
P_X  = 0 ; P_Y = 23 ; P_VALUE = '|':LEN(SEND.DATA):'|End.Data' ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*--- Select Company Number for Data Display
*
600 *
      CONO.ID=REC.DATA[5,3]
      READ CREC FROM COMPANY,CONO.ID ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = 'ERR' ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      SEND.DATA<1>=CONO.ID
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CONO = CONO.ID
      RETURN
*
* --- Send Department Master File Details
*
1000 *
      CNT=0
      DEPT.SCHED=''
      DEPT.DESC=''
      SELECT DEPARTMENT
1001 *
      READNEXT ID ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      READV DEPT.SCHED FROM DEPARTMENT,ID,9 ELSE DEPT.SCHED=''
      IF ID[1,3]=CONO AND DEPT.SCHED='Y' THEN
         READV DEPT.DESC FROM DEPARTMENT,ID,2 ELSE DEPT.DESC='*** Unknown ***'
         CNT=CNT+1
         SEND.DATA<CNT>=ID[4,2]:" ":DEPT.DESC
      END
      GOTO 1001
*
* --- Send Cost Center Master File Details
*
1100 *
      CNT=0
      SELECT COST.CNTR
1101 *
      READNEXT ID ELSE PRINT SEND.DATA:; RETURN
      IF ID[1,3]=CONO THEN
         READV CCTR.SCHED.FLAG FROM COST.CNTR,ID,23 ELSE GO 1101
         IF CCTR.SCHED.FLAG#'N' THEN
            READV CCTR.DESC FROM COST.CNTR,ID,1 ELSE CCTR.DESC='*** Unknown ***'
            CNT=CNT+1
            SEND.DATA<CNT>=ID[4,3] 'L#4':CCTR.DESC
         END
      END
      GOTO 1101
*
*--- Load Company Details
*
1200 *
      READ COMP.MASTER FROM CONTROL,'MASTER' ELSE COMP.MASTER=''
      IF COMP.MASTER<1>#'' THEN
         READV COMP.NAME FROM COMPANY,COMP.MASTER<1>,1 ELSE
            COMP.NAME='Error: Invalid Company Name ':COMP.MASTER<1>
         END
         SEND.DATA=COMP.MASTER:' ':COMP.NAME
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
*
      SEND.DATA=''
      CNT=0
      SELECT COMPANY
1210  READNEXT ID ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      READV COMP.NAME FROM COMPANY,ID,1 ELSE
         COMP.NAME='Error: Invalid Company Name ':ID
      END
      CNT=CNT+1
      SEND.DATA<CNT>=ID:' ':COMP.NAME
      GOTO 1210

*
* --- Load Department/Cost Schedule Details for Selected Period
*
2000 *
      TODAY=DATE()
      READ AVLCTR FROM CONTROL, CONO:"AVLCTR" ELSE AVLCTR="ALL"
2001 *
      REF.NO=0
      CC.CNT=0
      DEPT = REC.DATA[5,2]
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE
         SEND.DATA='ERRMSG:Invalid Department'
         RETURN
      END
      SDATE = FIELD(REC.DATA,',',2)
      EDATE = FIELD(REC.DATA,',',3)
      LN.CNT = DCOUNT(DEPT.CCTRS,VM)
      FOR X = 1 TO LN.CNT
         CCTR = DEPT.CCTRS<1,X>
         IF NOT(NUM(CCTR)) THEN GOTO 2020
         MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE
            MAT CCTR.REC = ""
            GOTO 2020
         END
         LOCATE CCTR IN AVLCTR,1 SETTING AVPTR ELSE GOTO 2020
         IF CCTR.DEPT = DEPT AND (CCTR.MASTER = "" OR CCTR.MASTER = CCTR) THEN
            BEGIN CASE
            CASE REQID='DEPT'
               REF.NO = REF.NO + 1
               GOSUB 2100
            CASE REQID='DSUM'
               REF.NO=0
               CC.CNT=CC.CNT+1
               SEND.DATA<1,CC.CNT>=CCTR:" ":CCTR.REC(1)
               FOR CDATE=SDATE TO EDATE
                  REF.NO = REF.NO+1
                  GOSUB 2500
               NEXT CDATE
            END CASE
         END
2020 *
      NEXT X
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*---- Load Department Data
*
2100 *
      SEND.DATA<1,REF.NO>=CCTR:" ":CCTR.REC(1)
      FOR CDATE = SDATE TO EDATE
         CFND = 1 ; PFND = 1
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MATREAD CCTR.SCHED.REC FROM CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE 
               MAT CCTR.SCHED.REC = ""
               CFND = 0
            END
         END
         MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MAT PEND.CCTR.SCHED.REC = ""
            PFND = 0
         END
         IF CFND = 0 AND PFND = 0 THEN GOTO 2101 
         SEND.DATA<2,REF.NO>=SEND.DATA<2,REF.NO>+SUM(CCS.AVL.HRS)
         SEND.DATA<3,REF.NO>=SEND.DATA<3,REF.NO>+SUM(CCS.SCH.HRS)
         SEND.DATA<4,REF.NO>=SEND.DATA<4,REF.NO>+SUM(CCS.REM.HRS)
         SEND.DATA<5,REF.NO>=SEND.DATA<5,REF.NO>+SUM(PCCS.SCH.HRS)
         SEND.DATA<6,REF.NO>=SEND.DATA<2,REF.NO>-SEND.DATA<3,REF.NO>-SEND.DATA<5,REF.NO>
2101 *
      NEXT CDATE
      FOR XX = 2 TO 6
         IF SEND.DATA<XX,REF.NO>+0=0 THEN
            SEND.DATA<XX,REF.NO>=''
         END ELSE
            SEND.DATA<XX,REF.NO>=OCONV(SEND.DATA<XX,REF.NO>,'MD2')
         END
      NEXT XX
      RETURN
*
*---- Load Summary Department Data
*
2500 *
      CFND = 1 ; PFND = 1
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE 
            MAT CCTR.SCHED.REC = ""
            CFND = 0
         END
      END
      MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
         MAT PEND.CCTR.SCHED.REC = ""
         PFND = 0
      END
      IF CFND = 0 AND PFND = 0 THEN GOTO 2501 
      SEND.DATA<2,CC.CNT,REF.NO>=SEND.DATA<2,CC.CNT,REF.NO>+SUM(CCS.AVL.HRS)
      SEND.DATA<3,CC.CNT,REF.NO>=SEND.DATA<3,CC.CNT,REF.NO>+SUM(CCS.SCH.HRS)
      SEND.DATA<4,CC.CNT,REF.NO>=SEND.DATA<4,CC.CNT,REF.NO>+SUM(CCS.REM.HRS)
      SEND.DATA<5,CC.CNT,REF.NO>=SEND.DATA<5,CC.CNT,REF.NO>+SUM(PCCS.SCH.HRS)
      SEND.DATA<6,CC.CNT,REF.NO>=SEND.DATA<2,CC.CNT,REF.NO>-SEND.DATA<3,CC.CNT,REF.NO>-SEND.DATA<5,CC.CNT,REF.NO>
2501 *
      FOR XX = 2 TO 6
         IF SEND.DATA<XX,CC.CNT,REF.NO>+0=0 THEN
            SEND.DATA<XX,CC.CNT,REF.NO>=''
         END ELSE
            SEND.DATA<XX,CC.CNT,REF.NO>=OCONV(SEND.DATA<XX,CC.CNT,REF.NO>,'MD2')
         END
      NEXT XX
      RETURN
*
* Load Cost Center Details for Selected Period
*
3000 *
      CDATE.CNT=0
      CCTR = REC.DATA[5,3]
      TODAY = DATE()
      SDATE = FIELD(REC.DATA,',',2)
      EDATE = FIELD(REC.DATA,',',3)
      FOR CDATE = SDATE TO EDATE
         CDATE.CNT=CDATE.CNT+1
         SEND.DATA<1,CDATE.CNT>=CDATE
         CFND = 1 ; PFND = 1
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MATREAD CCTR.SCHED.REC FROM CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE 
               MAT CCTR.SCHED.REC = ""
               CFND = 0
            END
         END
         MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MAT PEND.CCTR.SCHED.REC = ""
            PFND = 0
         END
         IF CFND = 0 AND PFND = 0 THEN GOTO 3101 
         SEND.DATA<2,CDATE.CNT>=SEND.DATA<2,CDATE.CNT>+SUM(CCS.AVL.HRS)
         SEND.DATA<3,CDATE.CNT>=SEND.DATA<3,CDATE.CNT>+SUM(CCS.SCH.HRS)
         SEND.DATA<4,CDATE.CNT>=SEND.DATA<4,CDATE.CNT>+SUM(CCS.REM.HRS)
         SEND.DATA<5,CDATE.CNT>=SEND.DATA<5,CDATE.CNT>+SUM(PCCS.SCH.HRS)
         SEND.DATA<6,CDATE.CNT>=SEND.DATA<2,CDATE.CNT>-SEND.DATA<3,CDATE.CNT>-SEND.DATA<5,CDATE.CNT>
3101 *
      NEXT CDATE
*
* Convert Data to Format #.##
*
      FOR XX = 2 TO 6
         FOR YY = 1 TO CDATE.CNT
            IF SEND.DATA<XX,YY>+0=0 THEN
               SEND.DATA<XX,YY>=''
            END ELSE
               SEND.DATA<XX,YY>=OCONV(SEND.DATA<XX,YY>,'MD2')
            END
         NEXT YY
      NEXT XX
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*---- Load Scheduled Job Details for Selected Date
*
4000 *
      CCTR=REC.DATA[5,3]
      SDATE=FIELD(REC.DATA,',',2)
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:"*":SDATE ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      JPCOUNT = DCOUNT(CCS.JOB,VM)
      FOR N = 1 TO JPCOUNT
         JOB.NO = CCS.JOB<1,N>
         LOCATE JOB.NO IN SEND.DATA<1>,1 SETTING JFND ELSE
            SEND.DATA<1,JFND> = JOB.NO
            MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE
               MAT JBS.REC = ""
               JBS.CUST.NAME = "???????????????"
            END
            SEND.DATA<2,JFND> = JBS.CUST.NAME
         END
         BEGIN CASE
         CASE CCS.JOB.SHIFT<1,N> = 1
            SEND.DATA<3,JFND> = SEND.DATA<3,JFND> + CCS.JOB.HRS<1,N>
         CASE CCS.JOB.SHIFT<1,N> = 2
            SEND.DATA<4,JFND> = SEND.DATA<4,JFND> + CCS.JOB.HRS<1,N>
         CASE 1
            SEND.DATA<5,JFND> = SEND.DATA<5,JFND> + CCS.JOB.HRS<1,N>
         END CASE
         SEND.DATA<6,JFND> = SEND.DATA<6,JFND> + CCS.JOB.HRS<1,N>
         BEGIN CASE
         CASE SEND.DATA<7,JFND> = ""
            BEGIN CASE
            CASE CCS.OPER.STATUS<1,N> = "C"
               SEND.DATA<7,JFND> = "CMP"
            CASE CCS.OPER.STATUS<1,N> = "I"
               SEND.DATA<7,JFND> = "INP"
            CASE 1
               SEND.DATA<7,JFND> = "SCH"
            END CASE
         CASE SEND.DATA<7,JFND> = "CMP"
            BEGIN CASE
            CASE CCS.OPER.STATUS<1,N> = "C"
            CASE 1
               SEND.DATA<7,JFND> = "INP"
            END CASE
         CASE SEND.DATA<7,JFND> = "INP"
         CASE 1
            BEGIN CASE
            CASE CCS.OPER.STATUS<1,N> # ""
               SEND.DATA<7,JFND> = "INP"
            CASE 1
               SEND.DATA<7,JFND> = "SCH"
            END CASE
         END CASE
      NEXT N
*
* Convert Data to Format #.##
*
      FOR XX = 3 TO 6
         FOR YY = 1 TO JPCOUNT
            IF SEND.DATA<XX,YY>+0=0 THEN
               SEND.DATA<XX,YY>=''
            END ELSE
               SEND.DATA<XX,YY>=OCONV(SEND.DATA<XX,YY>,'MD2')
            END
         NEXT YY
      NEXT XX
      JSEND.DATA = SEND.DATA
      SEND.DATA=''
*
*---- Load Pending Job Details for Selected Date
*
      CCTR=REC.DATA[5,3]
      SDATE=FIELD(REC.DATA,',',2)
      MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:"*":SDATE ELSE
*
*-- Build Cost Center Data for Selected Date
*
         MAT PEND.CCTR.SCHED.REC=''
      END
      PCOUNT = DCOUNT(PCCS.JOB,VM)
      FOR N = 1 TO PCOUNT
         JOB.NO = PCCS.JOB<1,N>
         LOCATE JOB.NO IN SEND.DATA<1>,1 SETTING JFND ELSE
            SEND.DATA<1,JFND> = JOB.NO
            MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE
               MAT JBS.REC = ""
               JBS.CUST.NAME = "???????????????"
            END
            SEND.DATA<2,JFND> = JBS.CUST.NAME
         END
         BEGIN CASE
         CASE PCCS.JOB.SHIFT<1,N> = 1
            SEND.DATA<3,JFND> = SEND.DATA<3,JFND> + PCCS.JOB.HRS<1,N>
         CASE PCCS.JOB.SHIFT<1,N> = 2
            SEND.DATA<4,JFND> = SEND.DATA<4,JFND> + PCCS.JOB.HRS<1,N>
         CASE 1
            SEND.DATA<5,JFND> = SEND.DATA<5,JFND> + PCCS.JOB.HRS<1,N>
         END CASE
         SEND.DATA<6,JFND> = SEND.DATA<6,JFND> + PCCS.JOB.HRS<1,N>
         SEND.DATA<7,JFND> = "PND"
      NEXT N
*
* Convert Data to Format #.##
*
      FOR XX = 3 TO 6
         FOR YY = 1 TO PCOUNT
            IF SEND.DATA<XX,YY>+0=0 THEN
               SEND.DATA<XX,YY>=''
            END ELSE
               SEND.DATA<XX,YY>=OCONV(SEND.DATA<XX,YY>,'MD2')
            END
         NEXT YY
      NEXT XX
*
*--- Combine Scheduled and Pending Job Details into Single Item
*
      IF JPCOUNT = 0 THEN
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      IF PCOUNT = 0 THEN
P_X  = 0 ; P_Y = 23 ; P_VALUE = JSEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      JCOUNT=DCOUNT(JSEND.DATA<1>,VM)
      PCOUNT=DCOUNT(SEND.DATA<1>,VM)
      FOR N=1 TO 7
         FOR I=1 TO PCOUNT
            JSEND.DATA<N,JCOUNT+I>=SEND.DATA<N,I>
         NEXT I
      NEXT N
*
P_X  = 0 ; P_Y = 23 ; P_VALUE = JSEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      JSEND.DATA=''
      SEND.DATA=''
      RETURN
*
*--- Load The Requested Job Scheduled/Pending Details
*
6000 *
      JOB.ID=REC.DATA[5,99]
      PND.SCHED.FLAG=''
      MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.ID ELSE
         MAT JBS.REC=''
      END
      MATREAD PJBS.REC FROM PEND.JOB.SCHED,CONO:JOB.ID ELSE
         MAT PJBS.REC=''
      END
      MATREAD JOB.REC FROM JOB,CONO:JOB.ID ELSE
         MAT JOB.REC=''
      END
      MATREAD JTRN.REC FROM JOB.TRANS, CONO:JOB.ID ELSE
         MAT JTRN.REC = ""
      END
      MATREAD JTRK.REC FROM JOB.TRACKING, CONO:JOB.ID ELSE
         MAT JTRK.REC = ""
      END
      MAT S$DATA=''
      S$SCR=1
      S$DATA(1)<S$SCR>=JOB.ID
      P.DEPT = ""
      P.STMV = ""
      P.EDMV = ""
      LINE.CNT = DCOUNT(JBS.DEPT,VM)
      IF LINE.CNT < 1 THEN GOTO 6999
*
*--- Sum Up Departments
*
      LCNT = 1
      P.DEPT<1,LCNT> = JBS.DEPT<1,1>
      P.STMV<1,LCNT> = 1
      P.EDMV<1,LCNT> = 1
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:P.DEPT<1,LCNT> ELSE
         MAT DEPT.REC = ""
         DEPT.DESC = "*** Invalid Dept ***"
      END
      S$DATA(13)<S$SCR,LCNT> = P.DEPT<1,LCNT>
      S$DATA(14)<S$SCR,LCNT> = DEPT.DESC
      IF JBS.EXP.DATE<1,1> = "" THEN
         S$DATA(15)<S$SCR,LCNT> = PJBS.SCH.HRS<1,1>
      END ELSE
         S$DATA(15)<S$SCR,LCNT> = JBS.SCH.HRS<1,1>
      END
      FOR REF = 2 TO LINE.CNT
         IF P.DEPT<1,LCNT> # JBS.DEPT<1,REF> THEN
            LCNT = LCNT + 1
            P.DEPT<1,LCNT> = JBS.DEPT<1,REF>
            MATREAD DEPT.REC FROM DEPARTMENT,CONO:P.DEPT<1,LCNT> ELSE
               MAT DEPT.REC = ""
               DEPT.DESC = "*** Invalid Dept ***"
            END
            S$DATA(13)<S$SCR,LCNT> = P.DEPT<1,LCNT>
            S$DATA(14)<S$SCR,LCNT> = DEPT.DESC
            S$DATA(15)<S$SCR,LCNT> = ""
            P.STMV<1,LCNT> = REF
         END
         IF JBS.EXP.DATE<1,REF>="" THEN
            S$DATA(15)<S$SCR,LCNT> = S$DATA(15)<S$SCR,LCNT> + PJBS.SCH.HRS<1,REF>
         END ELSE
            S$DATA(15)<S$SCR,LCNT> = S$DATA(15)<S$SCR,LCNT> + JBS.SCH.HRS<1,REF>
         END
         P.EDMV<1,LCNT> = REF
      NEXT REF
      LINE.CNT = LCNT
      FOR REF = 1 TO LINE.CNT
         IF S$DATA(15)<S$SCR,REF>+0 # 0 THEN
            S$DATA(15)<S$SCR,REF> = OCONV(S$DATA(15)<S$SCR,REF>,'MD2')
         END
      NEXT REF
*
*--- Load Status
*
      FOR REF = 1 TO LINE.CNT
*
*--- No Status
*
         BLK = 0
         FOR LCNT = P.STMV<1,REF> TO P.EDMV<1,REF> UNTIL BLK
            BEGIN CASE
            CASE JBS.DEPT.STATUS<1,LCNT> # ""
               BLK = 1
            CASE JBS.USD.HRS<1,LCNT> > 0
               BLK = 1
            END CASE
         NEXT LCNT
*        IF BLK = 0 THEN GOTO 6199
*
*--- SCH Status
*
         BLK = 0
         S$DATA(16)<S$SCR,REF> = ""
         IF JBS.EXP.DATE<1,P.STMV<1,REF>> = "" THEN
            S$DATA(17)<S$SCR,REF> = PJBS.SCH.DATE<1,P.STMV<1,REF>>
            S$DATA(18)<S$SCR,REF> = PJBS.EXP.DATE<1,P.STMV<1,REF>>
            S$DATA(19)<S$SCR,REF> = "PND"
            S$DATA(33)<S$SCR,REF> = "P"
         END ELSE
            S$DATA(17)<S$SCR,REF> = JBS.SCH.DATE<1,P.STMV<1,REF>>
            S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,P.STMV<1,REF>>
            S$DATA(19)<S$SCR,REF> = "SCH"
            S$DATA(33)<S$SCR,REF> = "S"
         END
         FOR LCNT = P.STMV<1,REF> TO P.EDMV<1,REF> UNTIL BLK
            BEGIN CASE
            CASE JBS.DEPT.STATUS<1,LCNT> # ""
               BLK = 1
               GOTO 6129
            CASE JBS.USD.HRS<1,LCNT> < JBS.SCH.HRS<1,LCNT> AND S$DATA(19)<S$SCR,REF>="SCH"
               S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.EXP.DATE<1,LCNT> = "" AND S$DATA(19)<S$SCR,REF>="SCH"
               S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.SCH.DATE<1,LCNT> = "" AND S$DATA(19)<S$SCR,REF>="SCH"
               S$DATA(18)<S$SCR,REF> = ""
            END CASE
            S$DATA(16)<S$SCR,REF> = S$DATA(16)<S$SCR,REF> + JBS.USD.HRS<1,LCNT>
            BEGIN CASE
            CASE JBS.SCH.DATE<1,LCNT> = ""
            CASE JBS.SCH.DATE<1,LCNT> < S$DATA(17)<S$SCR,REF>
               S$DATA(17)<S$SCR,REF> = JBS.SCH.DATE<1,LCNT>
            END CASE
            BEGIN CASE
            CASE S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.EXP.DATE<1,LCNT> > S$DATA(18)<S$SCR,REF>
               S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,LCNT>
            END CASE
6129 *
         NEXT LCNT
         IF BLK = 0 THEN GOTO 6199
*
*--- CMP Status
*
         BLK = 0
         S$DATA(16)<S$SCR,REF> = ""
         S$DATA(17)<S$SCR,REF> = JBS.ACT.DATE<1,P.STMV<1,REF>>
         S$DATA(18)<S$SCR,REF> = JBS.CMP.DATE<1,P.STMV<1,REF>>
         S$DATA(19)<S$SCR,REF> = "CMP"
         FOR LCNT = P.STMV<1,REF> TO P.EDMV<1,REF> UNTIL BLK
            IF JBS.DEPT.STATUS<1,LCNT> = "C" THEN
               S$DATA(16)<S$SCR,REF> = S$DATA(16)<S$SCR,REF> + JBS.ACT.HRS<1,LCNT>
               IF JBS.ACT.DATE<1,LCNT> < S$DATA(17)<S$SCR,REF> THEN
                  S$DATA(17)<S$SCR,REF> = JBS.ACT.DATE<1,LCNT>
               END
               IF JBS.CMP.DATE<1,LCNT> > S$DATA(18)<S$SCR,REF> THEN
                  S$DATA(18)<S$SCR,REF> = JBS.CMP.DATE<1,LCNT>
               END
            END ELSE
               BLK = 1
            END
         NEXT LCNT
         IF BLK = 0 THEN GOTO 6199
*--- INP STATUS
         LCNT = P.STMV<1,REF>
         S$DATA(16)<S$SCR,REF> = ""
         S$DATA(17)<S$SCR,REF> = JBS.ACT.DATE<1,LCNT>
*        S$DATA(18)<S$SCR,REF> = ""
         BEGIN CASE
         CASE JBS.DEPT.STATUS<1,LCNT> = "C"
            S$DATA(18)<S$SCR,REF> = JBS.CMP.DATE<1,LCNT>
         CASE JBS.DEPT.STATUS<1,LCNT> = "I"
            IF JBS.EXP.DATE<1,LCNT> > JBS.ACT.DATE<1,LCNT> THEN
               S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,LCNT>
            END
         CASE JBS.USD.HRS<1,LCNT> < JBS.SCH.HRS<1,LCNT>
         CASE JBS.SCH.DATE<1,LCNT> = ""
         CASE JBS.EXP.DATE<1,LCNT> # ""
            S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,LCNT>
         END CASE
         S$DATA(19)<S$SCR,REF> = "INP"
         FOR LCNT = P.STMV<1,REF> TO P.EDMV<1,REF>
            S$DATA(16)<S$SCR,REF> = S$DATA(16)<S$SCR,REF> + JBS.ACT.HRS<1,LCNT>
            BEGIN CASE
            CASE S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.DEPT.STATUS<1,LCNT> = "C"
               IF JBS.CMP.DATE<1,LCNT> > S$DATA(18)<S$SCR,REF> THEN
                  S$DATA(18)<S$SCR,REF> = JBS.CMP.DATE<1,LCNT>
               END
            CASE JBS.DEPT.STATUS<1,LCNT> = "I"
               BEGIN CASE
               CASE JBS.EXP.DATE<1,LCNT> > S$DATA(18)<S$SCR,REF>
                  S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,LCNT>
               CASE JBS.EXP.DATE<1,LCNT> < JBS.ACT.DATE<1,LCNT>
                  S$DATA(18)<S$SCR,REF> = ""
               END CASE
            CASE JBS.SCH.DATE<1,LCNT> = ""
*               S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.EXP.DATE<1,LCNT> = ""
*               S$DATA(18)<S$SCR,REF> = ""
            CASE JBS.USD.HRS<1,LCNT> < JBS.SCH.HRS<1,LCNT>
*               S$DATA(18)<S$SCR,REF> = ""
            CASE 1
               IF JBS.EXP.DATE<1,LCNT> > S$DATA(18)<S$SCR,REF> THEN
                  S$DATA(18)<S$SCR,REF> = JBS.EXP.DATE<1,LCNT>
               END
            END CASE
            BEGIN CASE
            CASE JBS.ACT.DATE<1,LCNT> = ""
            CASE S$DATA(17)<S$SCR,REF> = ""
               S$DATA(17)<S$SCR,REF> = JBS.ACT.DATE<1,LCNT>
            CASE JBS.ACT.DATE<1,LCNT> < S$DATA(17)<S$SCR,REF>
               S$DATA(17)<S$SCR,REF> = JBS.ACT.DATE<1,LCNT>
            END CASE
         NEXT LCNT
6199 *
         NPF = 0
         FOR LCNT = P.STMV<1,REF> TO P.EDMV<1,REF> WHILE NPF = 0
            LOCATE "N" IN JBS.POST.FLAG<1,LCNT>,1 SETTING NPF ELSE NPF=0
            IF NPF > 0 THEN S$DATA(31)<S$SCR,REF> = "*"
         NEXT LCNT
      NEXT REF
      FOR REF=1 TO LINE.CNT
         IF S$DATA(16)<S$SCR,REF>+0 # 0 THEN
            S$DATA(16)<S$SCR,REF> = OCONV(S$DATA(16)<S$SCR,REF>,'MD2')
         END
      NEXT REF
6999 *
      S$DATA(3) = JOB.MASTER
      S$DATA(4) = JBS.CUST.ID
      S$DATA(5) = JBS.CUST.NAME
      S$DATA(6) = JBS.DIV
      IF JBS.DUE.DATE = "" THEN
         S$DATA(7) = JOB.TRACK.DATE<1,4>
      END ELSE
         S$DATA(7) = JBS.DUE.DATE
      END
      S$DATA(8) = OCONV(JBS.REQ.HRS,'MD2')
      S$DATA(9) = JBS.JOB.COMMENT
      S$DATA(10) = JOB.EST
      IF JOB.EST # "" THEN
         MATREAD EST.REC FROM ESTIMATE,CONO:JOB.EST THEN
            S$DATA(11) = EST.MASTER
         END
      END
      MAT EST.REC = ""
      IF JBS.DIV = "" THEN
         MAT DIV.REC = ""
      END ELSE
         MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE
            MAT DIV.REC = ""
            DIV.DESC = "*** Unknown ***"
         END
      END
      S$DATA(22) = DIV.DESC
      IF JTRK.TIME.STAMP = "" THEN
         S$DATA(30) = ""
      END ELSE
         S$DATA(30) = "** Tracking Errors Present **"
      END
      BEGIN CASE
      CASE JOB.STATUS<1,1> = "4"
         S$DATA(32) = "** COMPLETED **"
      CASE JOB.STATUS<1,1> > "5"
         S$DATA(32) = "** COMPLETED **"
      CASE JOB.TRACK.DATE<1,6> # ""
         S$DATA(32) = "** DELIVERED **"
      END CASE
      MATBUILD SEND.DATA FROM S$DATA,AM
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*--- Load Job Critical Date Details
*
7000 *
      MAT S$DATA = ''
      JOB.ID=REC.DATA[5,99]
      MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.ID ELSE
         MAT JBS.REC=''
      END
      MATREAD PJBS.REC FROM PEND.JOB.SCHED,CONO:JOB.ID ELSE
         MAT PJBS.REC=''
      END
      S$DATA(1)<1>=JOB.ID
      DEPT.CNT = DCOUNT(JBS.DEPT,VM)
      GOSUB 7200
      CURR.SREF = ""
      CR.CNT = DCOUNT(JBS.CRTCL.REF,VM)
      GOSUB 7100
*
      MATBUILD SEND.DATA FROM S$DATA,AM
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*---- Load Multi-Line Data (Dates)
*
7100 *
      FOR STS = 1 TO CR.CNT
         S$DATA(4)<S$SCR,STS> = JBS.CRTCL.REF<1,STS>
         S$DATA(5)<S$SCR,STS> = JBS.CRTCL.DESC<1,STS>
         S$DATA(6)<S$SCR,STS> = JBS.PROMISE.OUT<1,STS>
         IF JBS.EXP.DATE<1,JBS.CRTCL.REF<1,STS>> > JBS.PROMISE.OUT<1,STS> THEN
            S$DATA(7)<S$SCR,STS> = JBS.EXP.DATE<1,JBS.CRTCL.REF<1,STS>>
         END
         S$DATA(8)<S$SCR,STS> = JBS.ACTUAL.OUT<1,STS>
         S$DATA(9)<S$SCR,STS> = JBS.PROMISE.IN<1,STS>
         S$DATA(10)<S$SCR,STS> = JBS.ACTUAL.IN<1,STS>
      NEXT STS
      RETURN
*
*---- Load Multi-Line Data (DEPT)
*
7200 *
      FOR STS = 1 TO DEPT.CNT
         S$DATA(16)<S$SCR,STS> = JBS.DEPT<1,STS>
         S$DATA(18)<S$SCR,STS> = JBS.CCTR<1,STS>
         S$DATA(19)<S$SCR,STS> = JBS.HOLD.CODE<1,STS>
         S$DATA(20)<S$SCR,STS> = OCONV(JBS.SCH.HRS<1,STS>,'MD2')
         S$DATA(21)<S$SCR,STS> = JBS.SCH.DATE<1,STS>
         S$DATA(22)<S$SCR,STS> = JBS.EXP.DATE<1,STS>
         S$DATA(24)<S$SCR,STS> = JBS.ACT.DATE<1,STS>
         S$DATA(25)<S$SCR,STS> = JBS.CMP.DATE<1,STS>
         BEGIN CASE
         CASE JBS.CCTR.STATUS<1,STS> = "I"
            S$DATA(26)<S$SCR,STS> = "INP"
            S$DATA(23)<S$SCR,STS> = OCONV(JBS.ACT.HRS<1,STS>,'MD2')
         CASE JBS.CCTR.STATUS<1,STS> = "C"
            S$DATA(26)<S$SCR,STS> = "CMP"
            S$DATA(23)<S$SCR,STS> = OCONV(JBS.ACT.HRS<1,STS>,'MD2')
         CASE JBS.SCH.DATE<1,STS> # ""
            S$DATA(26)<S$SCR,STS> = "SCH"
            S$DATA(23)<S$SCR,STS> = OCONV(JBS.USD.HRS<1,STS>,'MD2')
         CASE 1
            S$DATA(26)<S$SCR,STS> = "PND"
            S$DATA(23)<S$SCR,STS> = ""
            S$DATA(21)<S$SCR,STS> = PJBS.SCH.DATE<1,STS>
            S$DATA(22)<S$SCR,STS> = PJBS.EXP.DATE<1,STS>
            S$DATA(24)<S$SCR,STS> = PJBS.ACT.DATE<1,STS>
            S$DATA(25)<S$SCR,STS> = PJBS.CMP.DATE<1,STS>
         END CASE
      NEXT STS
      RETURN 
*
*--- Find Customer/Job Items fro Search Criteria
*
8000 *
      FIND.DATA=REC.DATA[5,99]
      FIND.CSNO=FIELD(REC.DATA,",",1)
      FIND.CSNM=FIELD(REC.DATA,",",2)
*
      BEGIN CASE
      CASE FIND.CSNO#""
*--- Read Customer Job Records
*    SEND.DATA<1>=Customers Name
*    SEND.DATA<2>=Job Numbers (MV1)
*    SEND.DATA<3>=Job Description (Line 1) (MV1)
*    SEND.DATA<4>=Status (MV1)
      CASE FIND.CSNM # ""
*--- Find XRef Matches for Given Name
*    SEND.DATA<1> = Customer Number  (MV1)
*    SEND.DATA<2> = Customer Names   (MV1)
*    SEND.DATA<3> = Job Count        (MV1)
      CASE 1
      END CASE
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*--- Load All Overdue/Late Jobs
*
8500 *
      SELECT PEND.JOB.SCHED
      REF.NO=1
*
8510  READNEXT JID ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END
      IF JID[1,3]#CONO THEN GOTO 8510
      READ PJREC FROM PEND.JOB.SCHED,JID ELSE GO 8510
      DATECNT=DCOUNT(PJREC<24>,VM)
      IF PJREC<24,DATECNT>='' THEN
         READ PJREC FROM JOB.SCHED,JID ELSE GO 8510
      END
      LASTDATE=PJREC<24,DATECNT>
      READV JDUEDATE FROM JOB,JID,10 ELSE GO 8510
      JDUEDATE=JDUEDATE<1,4>
      IF LASTDATE < DATE() OR LASTDATE < JDUEDATE THEN
         READV JDESC FROM JOB,JID,16 ELSE JDESC='***Unknown'
         READV CNAME FROM JOB,JID,5 ELSE CNAME='***'
         READV CNAME FROM CUSTOMER,CONO:CNAME,1 ELSE CNAME='***Unknown***'
         SEND.DATA<1,REF.NO>=JID[4,99]
         SEND.DATA<2,REF.NO>=CNAME
         SEND.DATA<3,REF.NO>=JDESC
         SEND.DATA<4,REF.NO>=JDUEDATE
         SEND.DATA<5,REF.NO>=LASTDATE
         SEND.DATA<6,REF.NO>=PJREC<2>
         REF.NO=REF.NO+1
      END
      GOTO 8510
*
*--- Find Jobs for Customer Number
*
8600 *
*
*--- Critical Dates Execption Report
*
9000 *
*EXECUTE 'CAP-HUSH-ON'
      SELECT JOB.CRTL.DATE.EXC
*EXECUTE 'CAP-HUSH-OFF'
      JCNT=0
9100 *
      READNEXT JOBID ELSE GOTO 9900
      IF JOBID[1,3] # CONO THEN GOTO 9100
      JOB.ID=JOBID[4,99]
      READ JCDER.REC FROM JOB.CRTL.DATE.EXC,CONO:JOB.ID ELSE
         GOTO 9100
      END
      CONVERT VM TO SM IN JCDER.REC
      JCNT=JCNT+1
      ACNT=DCOUNT(JCDER.REC,AM)
      FOR I=1 TO ACNT
         SEND.DATA<JCNT,I>=JCDER.REC<I>
      NEXT I
      SEND.DATA<JCNT,8>=JOB.ID
      READV CUST.NAME FROM JOB.SCHED,CONO:JOB.ID,5 ELSE
         CUST.NAME='*** Unknown ***'
      END
      SEND.DATA<JCNT,9>=CUST.NAME
      READV JSTATUS FROM JOB.SCHED,CONO:JOB.ID,1 ELSE
         JSTATUS='***'
      END
      SEND.DATA<JCNT,10>=JSTATUS
      READV JDDATE FROM JOB.SCHED,CONO:JOB.ID,2 ELSE
         JDDATE=''
      END
      SEND.DATA<JCNT,11>=JDDATE
      GOTO 9100
*
9900 *
P_X  = 0 ; P_Y = 23 ; P_VALUE = SEND.DATA ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*--- Jobs Outside PO's Exception Details
*
10000 *



93000 *
90000 *
      REC.DATA='END'
      RETURN
      END
