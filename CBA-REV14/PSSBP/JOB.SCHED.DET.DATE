      SUBROUTINE JOB.SCHED.DET.DATE (CONO,JOB.NUM,TODAY,LOADING.FLG,PROC.TYPE)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - JOB.SCHED.DET.DATE
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 10/31/88
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* DESCRIPTION
* This subroutine is called from JOB.SCHED.DET.MAINT program,
* JOB.SCHED.DET.SUB , JOB.SCHED.DET.INQ and JOB.SCHED.DATE.DRIVER.
* It allows the utilization of all the critical dates for the job.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*
*---- INT
*
      SCREEN DEFINE;JOB.SCHED.DET.DATE
*---- TASK # 19937 ----
      MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
      IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
         OPEN "","JOB" TO JOB ELSE
            ERRMSG = "CANNOT LOCATE JOB FILE"
            GOSUB 90000
            RETURN
         END
      END
      READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*----------------------
      BEGIN CASE
         CASE PROC.TYPE = "D"
         CASE PROC.TYPE = "ID"
         CASE 1
            SCREEN FORMAT
            S$DATA(1)<S$SCR> = TODAY
            SCREEN DISPLAY;;1
            IF PROC.TYPE = "I" OR TP.DIV = "X" THEN
               S$DATA(29)<S$SCR> = "(INQ)"
               SCREEN DISPLAY;;29
               IF S$GUIFORM THEN
                  P_TITLE = "JOB CRITICAL DATES (INQ)"
                  CALL VSI_SI_PTITLE(P_TITLE,ERROR)
               END
            END
            S$DATA(2)<S$SCR> = JOB.NUM
            SCREEN DISPLAY;;2
*---- TASK # 19937 ----
            JDESC = JBS.CUST.NAME
            IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
               MATREAD JOB.REC FROM JOB, CONO:JOB.NUM THEN
                  IF TRIM(JOB.DESC<1,1>) # "" THEN
                     IF CO.PSS.JDESC.FLAG = "J" THEN
                        JDESC = JOB.DESC<1,1>
                     END ELSE
                        JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
                     END
                  END
               END
            END
*     S$DATA(27)<S$SCR> = JBS.CUST.NAME
            S$DATA(27)<S$SCR> = JDESC
*----------------------
            SCREEN DISPLAY;;27
      END CASE
      SCREEN COUNT;;3
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      CURR.REF = ""
      SCREEN COUNT;;15
      DEPT.COUNT = S$LCNT
      CURR.SREF = ""
*
*----- MAIN PROCESSING
*
100*
      DEPT.CNT = DCOUNT(JBS.DEPT,VM)
      GOSUB 80100
      SREF = 1
      CURR.SREF = ""
      GOSUB 50100
      CR.CNT = DCOUNT(JBS.CRTCL.REF,VM)
      GOSUB 80000
      REF = 1
      CURR.REF = ""
      GOSUB 50000
*
*---- GET OPERATOR REQUEST
*
500*
      BEGIN CASE
         CASE PROC.TYPE = "I" OR PROC.TYPE = "ID" OR TP.DIV = "X"
            SCREEN FIELD;;13
            SCREEN INPUT;;13
         CASE PROC.TYPE = "D"
            SCREEN FIELD;;28
            SCREEN INPUT;;28
         CASE 1
            SCREEN FIELD;;11
            SCREEN INPUT;;11
      END CASE
      OPTION = S$VALUE
      BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END"
            IF PROC.TYPE = "D" AND TP.DIV # "X" THEN
               RELEASE JOB.SCHED, CONO : JOB.NUM
            END
            GOTO 999999
         CASE OPTION = "F" AND PROC.TYPE = "D" AND TP.DIV # "X"
            CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NUM)
***      MATWRITE JBS.REC ON JOB.SCHED, CONO:JOB.NUM
            TPFID = CONO:JOB.NUM
            MATBUILD TPREC FROM JBS.REC
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"JOB.SCHED",TPFID,TPREC,JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
            GOTO 999999
         CASE OPTION = "A" AND CR.CNT < 99
            DONE = 0
            FOR REF = CR.CNT+1 TO 99 UNTIL DONE
               GOSUB 800
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  DONE = 1
                  GOSUB 700
               END ELSE
                  CR.CNT = CR.CNT + 1
               END
            NEXT REF
            REF = CR.CNT
            IF REF < 1 THEN REF = 1
         CASE OPTION = "C" AND CR.CNT > 0
            GOSUB 600
            BEGIN CASE
               CASE S$VALUE = "" OR S$VALUE = "END"
               CASE NOT(NUM(S$VALUE))
               CASE 1
                  REF = S$VALUE
                  CRTCL.REF = JBS.CRTCL.REF<1,REF>
                  SREF = CRTCL.REF
                  S$DATA(17)<S$SCR,SREF> = "*"
                  CURR.SREF = ""
                  GOSUB 50100
                  GOSUB 10020
            END CASE
         CASE OPTION = "D" AND CR.CNT > 0
            GOSUB 600
            BEGIN CASE
               CASE S$VALUE = "" OR S$VALUE = "END"
               CASE NOT(NUM(S$VALUE))
               CASE 1
                  REF = S$VALUE
                  GOSUB 700
                  CR.CNT = CR.CNT - 1
                  IF REF > CR.CNT THEN REF = REF - 1
                  IF REF < 1 THEN REF = 1
                  CURR.REF = ""
            END CASE
         CASE OPTION = "I" AND CR.CNT > 0
            GOSUB 600
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF = S$VALUE
               GOSUB 800
               CR.CNT = CR.CNT + 1
               CURR.REF = ""
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  GOSUB 700
                  CR.CNT = CR.CNT - 1
               END
            END
         CASE OPTION = "S" OR OPTION = "SF"
            REF = CURR.REF + LINE.COUNT
            IF REF > CR.CNT THEN REF = 1
         CASE OPTION = "ST"
            REF = 1
         CASE OPTION = "SB"
            REF = CR.CNT
            IF REF < 1 THEN REF = 1
         CASE OPTION = "SR"
            REF = CURR.REF - LINE.COUNT
            IF REF < 1 THEN REF = 1
         CASE OPTION = "CC"
            GOSUB 1000
         CASE 1
            ERRMSG = "Invalid Selection"
            GOSUB 90000
      END CASE
      GOSUB 50000
      GOTO 500
*-----------------------*
*--- SUBROUTINES   ---*
*-----------------------*
*
*---- GET LINE REFERENCE NUMBER (DATES)
*
600*
      SCREEN FIELD;;12
      S$MINV = CURR.REF
      S$MAXV = S$MINV + LINE.COUNT - 1
      IF S$MAXV > CR.CNT THEN S$MAXV = CR.CNT
      SCREEN INPUT;;12
      RETURN
*
*---- GET LINE REFERENCE NUMBER (COST CENTERS)
*
650*
      SCREEN FIELD;;12
      S$MINV = CURR.SREF
      S$MAXV = S$MINV + DEPT.COUNT - 1
      IF S$MAXV > DEPT.CNT THEN S$MAXV = DEPT.CNT
      SCREEN INPUT;;12
      RETURN
*
*---- DELETE MULTI-LINE DATA (DATES)
*
700*
      AC = DCOUNT(JBS.A2,",")
      FOR AP = 1 TO AC
         AA = FIELD(JBS.A2,",",AP)
         AA1 = FIELD(AA,"-",1)
         AA2 = FIELD(AA,"-",2)
         IF AA2 = "" THEN AA2 = AA1
         FOR AAP = AA1 TO AA2
            JBS.REC(AAP) = DELETE(JBS.REC(AAP),1,REF,0)
         NEXT AAP
      NEXT AP
      S$DATA(3) = DELETE(S$DATA(3),S$SCR,REF,0)
      S$DATA(4) = DELETE(S$DATA(4),S$SCR,REF,0)
      S$DATA(5) = DELETE(S$DATA(5),S$SCR,REF,0)
      S$DATA(6) = DELETE(S$DATA(6),S$SCR,REF,0)
      S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF,0)
      S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF,0)
      S$DATA(9) = DELETE(S$DATA(9),S$SCR,REF,0)
      S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF,0)
      RETURN
*
*---- INSERT MULTI-LINE DATA (DATES)
*
800*
      AC = DCOUNT(JBS.A2,",")
      FOR AP = 1 TO AC
         AA = FIELD(JBS.A2,",",AP)
         AA1 = FIELD(AA,"-",1)
         AA2 = FIELD(AA,"-",2)
         IF AA2 = "" THEN AA2 = AA1
         FOR AAP = AA1 TO AA2
            JBS.REC(AAP) = INSERT(JBS.REC(AAP),1,REF,0,"")
         NEXT AAP
      NEXT AP
      S$DATA(3) = INSERT(S$DATA(3),S$SCR,REF,0,"")
      S$DATA(4) = INSERT(S$DATA(4),S$SCR,REF,0,"")
      S$DATA(5) = INSERT(S$DATA(5),S$SCR,REF,0,"")
      S$DATA(6) = INSERT(S$DATA(6),S$SCR,REF,0,"")
      S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF,0,"")
      S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF,0,"")
      S$DATA(9) = INSERT(S$DATA(9),S$SCR,REF,0,"")
      S$DATA(10) = INSERT(S$DATA(10),S$SCR,REF,0,"")
      RETURN
*
*---- PROCESS OPER DATA
*
1000*
      BEGIN CASE
         CASE OPTION = "CC"
            SCREEN FIELD;;14
            SCREEN INPUT;;14
         CASE 1
      END CASE
      OPT2 = S$VALUE
      LOCATE "*" IN S$DATA(17)<S$SCR>,1 SETTING P THEN
         S$DATA(17)<S$SCR,P> = ""
         S$VAL = P
         SCREEN DISPLAY;;17
      END
      S$DATA(40)<S$SCR> = ""
      SCREEN DISPLAY;;40
      BEGIN CASE
         CASE OPT2 = "" OR OPT2 = "END"
            S$VALUE = ""
            GOTO 1099
         CASE OPT2 = "R"
            GOSUB 650
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               SREF = S$VALUE
               S$DATA(17)<S$SCR,SREF> = "*"
               S$VAL = SREF
               SCREEN DISPLAY;;17
               CCTR = JBS.CCTR<1,SREF>
               MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
                  MAT CCTR.REC = ""
                  CCTR.DESC = "NOT ON FILE"
               END
               S$DATA(40)<S$SCR> = "Cost Center: ":CCTR.DESC
               SCREEN DISPLAY;;40
            END
         CASE OPT2 = "S" OR OPT2 = "SF"
            SREF = CURR.SREF + DEPT.COUNT
            IF SREF > DEPT.CNT THEN SREF = 1
            GOSUB 50100
         CASE OPT2 = "ST"
            SREF = 1
            GOSUB 50100
         CASE OPT2 = "SB"
            SREF = DEPT.CNT
            GOSUB 50100
         CASE OPT2 = "SR"
            SREF = CURR.SREF - DEPT.COUNT
            IF SREF < 1 THEN SREF = 1
            GOSUB 50100
         CASE 1
            ERRMSG = "Invalid Selection"
            GOSUB 90000
      END CASE
      IF OPTION = "CC" THEN GOTO 1000
1099*
      RETURN
*
*---- GET MULTI-LINE DATA (DATES)
*
10000*
      S$VAL = REF
      SCREEN DISPLAY;;3
*---- CCTR REFERENCE LINE NUMBER
10010*
      CRTCL.REF = ""
      S$DATA(4)<S$SCR,REF> = JBS.CRTCL.REF<1,REF>
      S$VAL = REF
      SCREEN FIELD;;4
      SCREEN INPUT;;4;GOTO 10950
      BEGIN CASE
         CASE S$VALUE = ""
         CASE S$VALUE = "D" AND JBS.CRTCL.REF<1,REF> # ""
            SREF = JBS.CRTCL.REF<1,REF>
            GOSUB 50100
         CASE NOT(NUM(S$VALUE))
            GOSUB 1000
         CASE S$VALUE > 0 AND S$VALUE <= DEPT.CNT
            CRTCL.REF = S$VALUE
            SREF = S$VALUE
            S$DATA(17)<S$SCR,SREF> = "*"
            CURR.SREF = ""
            GOSUB 50100
            GOTO 10020
         CASE 1
      END CASE
      GOTO 10010
*---- GET CRITICAL REASON
10020*
      S$DATA(5)<S$SCR,REF> = JBS.CRTCL.DESC<1,REF>
      S$VAL = REF
      SCREEN FIELD;;5
      SCREEN INPUT;;5;GOTO 10950
      CRTCL.DESC = S$VALUE
*---- GET PROMISE DATE OUT
10030*
*      IF JBS.EXP.DATE<1,CRTCL.REF> > JBS.PROMISE.OUT<1,REF> THEN
*         S$DATA(6)<S$SCR,REF> = JBS.EXP.DATE<1,CRTCL.REF>
*      END
      S$VAL = REF
      SCREEN FIELD;;6
      SCREEN INPUT;;6;GOTO 10950
      PROMISE.OUT = S$VALUE
      IF JBS.EXP.DATE<1,CRTCL.REF> > PROMISE.OUT THEN
         S$DATA(7)<S$SCR,REF> = JBS.EXP.DATE<1,CRTCL.REF>
      END ELSE
         S$DATA(7)<S$SCR,REF> = ""
      END
      S$VAL = REF
      SCREEN DISPLAY;;7
*---- GET ACTUAL DATE OUT
10040*
      S$VAL = REF
      SCREEN FIELD;;8
      SCREEN INPUT;;8;GOTO 10950
      ACTUAL.OUT = S$VALUE
*---- GET PROMISE DATE IN
10050*
      S$VAL = REF
      SCREEN FIELD;;9
      SCREEN INPUT;;9;GOTO 10950
      PROMISE.IN = S$VALUE
*---- GET ACTUAL DATE IN
10060*
      S$VAL = REF
      SCREEN FIELD;;10
      SCREEN INPUT;;10;GOTO 10950
      ACTUAL.IN = S$VALUE
*---- STORE INPUT DATA
10900*
      JBS.CRTCL.REF<1,REF> = CRTCL.REF
      JBS.CRTCL.DESC<1,REF> = CRTCL.DESC
      JBS.PROMISE.OUT<1,REF> = PROMISE.OUT
      JBS.ACTUAL.OUT<1,REF> = ACTUAL.OUT
      JBS.PROMISE.IN<1,REF> = PROMISE.IN
      JBS.ACTUAL.IN<1,REF> = ACTUAL.IN
      GOTO 10999
10950*
      S$DATA(4)<S$SCR,REF> = JBS.CRTCL.REF<1,REF>
      S$DATA(5)<S$SCR,REF> = JBS.CRTCL.DESC<1,REF>
      S$DATA(6)<S$SCR,REF> = JBS.PROMISE.OUT<1,REF>
      IF JBS.EXP.DATE<1,JBS.CRTCL.REF<1,REF>> > JBS.PROMISE.OUT<1,REF> THEN
         S$DATA(7)<S$SCR,REF> = JBS.EXP.DATE<1,JBS.CRTCL.REF<1,REF>>
      END
      S$DATA(8)<S$SCR,REF> = JBS.ACTUAL.OUT<1,REF>
      S$DATA(9)<S$SCR,REF> = JBS.PROMISE.IN<1,REF>
      S$DATA(10)<S$SCR,REF> = JBS.ACTUAL.IN<1,REF>
      CURR.REF = ""
10999*
      IF NUM(CRTCL.REF) THEN
         S$VAL = CRTCL.REF
         S$DATA(17)<S$SCR,S$VAL> = ""
         SCREEN DISPLAY;;17
      END
      CRTCL.REF = ""
      CRTCL.DESC = ""
      PROMISE.OUT = ""
      ACTUAL.OUT = ""
      PROMISE.IN = ""
      ACTUAL.IN = ""
      RETURN
*
*---- DISPLAY MULTI-VALUE DATA (DATES)
*
50000*
      START.REF = 1 + INT((REF-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF = CURR.REF THEN RETURN
      CURR.REF = START.REF
      S$VAL = START.REF
      S$CNT = CR.CNT
      SCREEN MULTI;;C;3;4;5;6;7;8;9;10
      RETURN
*
*---- DISPLAY MULTI-VALUE DATA (DEPT)
*
50100*
      START.REF = 1 + INT((SREF-1)/DEPT.COUNT)*DEPT.COUNT
      IF START.REF = CURR.SREF THEN RETURN
      CURR.SREF = START.REF
      S$VAL = START.REF
      S$CNT = DEPT.CNT
      SCREEN MULTI;;C;15;16;17;18;19;20;21;22;23;24;25;26
      RETURN
*
*---- LOAD MULTI-LINE DATA (DATES)
*
80000*
      FOR STS = 1 TO CR.CNT
         S$DATA(4)<S$SCR,STS> = JBS.CRTCL.REF<1,STS>
         S$DATA(5)<S$SCR,STS> = JBS.CRTCL.DESC<1,STS>
         S$DATA(6)<S$SCR,STS> = JBS.PROMISE.OUT<1,STS>
         IF JBS.EXP.DATE<1,JBS.CRTCL.REF<1,STS>> > JBS.PROMISE.OUT<1,STS> THEN
            S$DATA(7)<S$SCR,STS> = JBS.EXP.DATE<1,JBS.CRTCL.REF<1,STS>>
         END
         S$DATA(8)<S$SCR,STS> = JBS.ACTUAL.OUT<1,STS>
         S$DATA(9)<S$SCR,STS> = JBS.PROMISE.IN<1,STS>
         S$DATA(10)<S$SCR,STS> = JBS.ACTUAL.IN<1,STS>
      NEXT STS
      RETURN
*
*---- LOAD MULTI-LINE DATA (DEPT)
*
80100*
      FOR STS = 1 TO DEPT.CNT
         S$DATA(16)<S$SCR,STS> = JBS.DEPT<1,STS>
         S$DATA(18)<S$SCR,STS> = JBS.CCTR<1,STS>
         S$DATA(19)<S$SCR,STS> = JBS.HOLD.CODE<1,STS>
         S$DATA(20)<S$SCR,STS> = JBS.SCH.HRS<1,STS>
         S$DATA(21)<S$SCR,STS> = JBS.SCH.DATE<1,STS>
         S$DATA(22)<S$SCR,STS> = JBS.EXP.DATE<1,STS>
         S$DATA(24)<S$SCR,STS> = JBS.ACT.DATE<1,STS>
         S$DATA(25)<S$SCR,STS> = JBS.CMP.DATE<1,STS>
         BEGIN CASE
            CASE JBS.CCTR.STATUS<1,STS> = "I"
               S$DATA(26)<S$SCR,STS> = "INP"
               S$DATA(23)<S$SCR,STS> = JBS.ACT.HRS<1,STS>
            CASE JBS.CCTR.STATUS<1,STS> = "C"
               S$DATA(26)<S$SCR,STS> = "CMP"
               S$DATA(23)<S$SCR,STS> = JBS.ACT.HRS<1,STS>
            CASE JBS.SCH.DATE<1,STS> # ""
               S$DATA(26)<S$SCR,STS> = "SCH"
               S$DATA(23)<S$SCR,STS> = JBS.USD.HRS<1,STS>
            CASE 1
               S$DATA(26)<S$SCR,STS> = "PND"
               S$DATA(21)<S$SCR,STS> = PJBS.SCH.DATE<1,STS>
               S$DATA(22)<S$SCR,STS> = PJBS.EXP.DATE<1,STS>
               S$DATA(23)<S$SCR,STS> = ""
         END CASE
      NEXT STS
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
999999*
      SCREEN CLEAR;;D
      RETURN
   END
