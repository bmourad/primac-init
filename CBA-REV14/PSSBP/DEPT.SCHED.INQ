*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*********************************************************************
* REVISION  - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM    - PRIMAC
* SOURCE    - DEVBP
* PROGRAM   - DEPT.SCHED.INQ
* AUTHOR    - KERRY WILSON, COMPUTER BUSINESS ASSOCIATES
* DATE      - 07/13/88
* DESCRIPTION
* Provides inquiry information by department schedule by day
*********************************************************************
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SET UP FOR SYSCOM
*
   MAT SYSCOM.REC = ''
   SYS.TYPE = 1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- PRE-INITIALIZATION
*
   PROC.TYPE = "M"
*
*---- OPEN ALL FILES
*
   OPEN "COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 93000
   END
   OPEN "CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 93000
   END
   OPEN "PREFIX" TO PREFIX ELSE
      ERRMSG = "CANNOT OPEN PREFIX FILE"
      GOTO 93000
   END
   OPEN "PSS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN PSS.SCREENS FILE"
      GOTO 93000
   END
   OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE
      ERRMSG = "CANNOT OPEN CCTR.SCHED FILE"
      GOTO 93000
   END
   OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
      ERRMSG = "CANNOT OPEN PEND.CCTR.SCHED FILE"
      GOTO 93000
   END
   OPEN "CCTR.SCHED.HIST" TO CCTR.SCHED.HIST ELSE
      ERRMSG = "CANNOT OPEN CCTR.SCHED.HIST FILE"
      GOTO 93000
   END
   OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE
      ERRMSG = "CANNOT OPEN CCTR.AVAIL FILE"
      GOTO 93000
   END
   OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
      ERRMSG = "CANNOT OPEN HOLIDAY.SCHED FILE"
      GOTO 93000
   END
   OPEN "JOB.SCHED" TO JOB.SCHED ELSE
      ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
      GOTO 93000
   END
   OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
      ERRMSG = "CANNOT OPEN PEND.JOB.SCHED FILE"
      GOTO 93000
   END
   OPEN "DEPARTMENT" TO DEPARTMENT ELSE
      ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
      GOTO 93000
   END
   OPEN "COST.CNTR" TO COST.CNTR ELSE
      ERRMSG = "CANNOT OPEN COST.CNTR FILE"
      GOTO 93000
   END
   OPEN "OPERATION" TO OPERATION ELSE
      ERRMSG = "CANNOT OPEN OPERATION FILE"
      GOTO 93000
   END
   OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
      ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
      GOTO 93000
   END
   OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
      ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
      GOTO 93000
   END
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   IF CONO = "END" THEN GOTO 99999
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;DEPT.SCHED.INQ
   SCREEN FORMAT
   SCREEN COUNT;;6
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
   READ AVLCTR FROM CONTROL, CONO:"AVLCTR" ELSE AVLCTR="ALL"
   GOTO 110
*
*---- MAIN PROCESSING
*
100*
   RELEASE
   SCREEN CLEAR
110*
   S$DATA(1)<S$SCR> = TODAY
   SCREEN DISPLAY;;1
120*
   SCREEN FIELD;;2
   SCREEN INPUT;;2;GOTO 99999
   DEPT = S$VALUE
   MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE
      ERRMSG = 'Invalid Department'
      GOSUB 90000
      GOTO 120
   END
   S$DATA(3)<S$SCR> = DEPT.DESC
   SCREEN DISPLAY;;3
   TP.ERRMSG = ""
   GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
   SCREEN FIELD;;4
   SCREEN INPUT;;4;GOTO 100
   SDATE = S$VALUE
   EDATE = SDATE + 27
   S$DATA(5)<S$SCR> = EDATE
   LN.CNT = DCOUNT(DEPT.CCTRS,VM)
   SCREEN DISPLAY;;5
   REF.NO = 0
   P_X  = 3 ; P_Y = 23 ; P_VALUE = "Processing Department Records" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   FOR X = 1 TO LN.CNT
      CCTR = DEPT.CCTRS<1,X>
      IF NOT(NUM(CCTR)) THEN GOTO 121
      MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE
         MAT CCTR.REC = ""
         GOTO 121
      END
      LOCATE CCTR IN AVLCTR,1 SETTING AVPTR ELSE GOTO 121
      IF CCTR.DEPT = DEPT AND (CCTR.MASTER = "" OR CCTR.MASTER = CCTR) THEN
         REF.NO = REF.NO + 1
         GOSUB 10000
      END
121*
   NEXT X
   P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LN.CNT = REF.NO
   REF.NO = 1
   CURR.REF.NO = ''
   GOSUB 20000
200*
   BEGIN CASE
      CASE PROC.TYPE = "M" AND TP.DIV # "X"
         SCREEN FIELD;;14
         SCREEN INPUT;;14
      CASE 1
         SCREEN FIELD;;23
         SCREEN INPUT;;23
   END CASE
   OPTION = S$VALUE
210*
   BEGIN CASE
      CASE OPTION = 'I'
         GOSUB 300
         IF S$VALUE # '' AND S$VALUE # 'END' THEN
            REF.NO = S$VALUE
            CDATE = SDATE + REF.NO - 1
            CCTR = S$DATA(7)<S$SCR,REF.NO>
            PARAM = 'DEP.INQ'
            S$SCR = S$SCR + 1
            CALL CCTR.SCHED.MAINT(CONO,PARAM,DEPT,CCTR,SDATE)
            S$SCR = S$SCR - 1
            SCREEN FORMAT
            SCREEN DISPLAY;;ALL
            CURR.REF.NO = ''
            GOSUB 20000
         END
      CASE OPTION = 'S' OR OPTION = 'SF'
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LN.CNT THEN REF.NO = 1
         GOSUB 20000
      CASE OPTION = 'ST'
         REF.NO = 1
         GOSUB 20000
      CASE OPTION = 'SB'
         REF.NO = LN.CNT
         GOSUB 20000
      CASE OPTION = 'SR'
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 20000
      CASE OPTION = 'R' AND LN.CNT > 0
         GOSUB 300
         IF S$VALUE # '' AND S$VALUE # 'END' THEN
            REF.NO = S$VALUE
            SCREEN FIELD;;16
            SCREEN INPUT;;16
            IF S$VALUE = "Y" THEN
               CCTR = S$DATA(7)<S$SCR,REF.NO>
               READU AVLCTR FROM CONTROL,CONO:"AVLCTR" ELSE AVLCTR=""
               LOCATE CCTR IN AVLCTR,1 SETTING AVPTR ELSE AVPTR=0
               IF AVPTR > 0 THEN
                  AVLCTR = DELETE(AVLCTR,AVPTR,0,0)
***WRITE AVLCTR ON CONTROL, CONO:"AVLCTR"
                  TPFID = CONO:"AVLCTR"
                  TPREC = AVLCTR
                  CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"CONTROL",TPFID,TPREC,CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
               END ELSE
                  RELEASE CONTROL, CONO:"AVLCTR"
               END
               GOSUB 700
               LN.CNT = LN.CNT - 1
               IF REF.NO > LN.CNT THEN REF.NO = REF.NO - 1
               CURR.REF.NO = ''
               GOSUB 20000
            END
         END
      CASE OPTION = 'E' OR OPTION = 'END'
         GOTO 100
      CASE 1
         ERRMSG = 'Invalid Selection'
   END CASE
   GOTO 200
*
*---- GET LINE REFERENCE NUMBER
*
300*
   SCREEN FIELD;;15
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > LN.CNT THEN S$MAXV = LN.CNT
   SCREEN INPUT;;15
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
   S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF.NO,0)
   S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF.NO,0)
   S$DATA(9) = DELETE(S$DATA(9),S$SCR,REF.NO,0)
   S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF.NO,0)
   S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF.NO,0)
   S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
   S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF.NO,0)
   S$DATA(17) = DELETE(S$DATA(17),S$SCR,REF.NO,0)
   S$DATA(18) = DELETE(S$DATA(18),S$SCR,REF.NO,0)
   S$DATA(19) = DELETE(S$DATA(19),S$SCR,REF.NO,0)
   RETURN
*
*---- LOAD S$DATA MATRIX
*
10000*
   S$DATA(7)<S$SCR,REF.NO> = CCTR
   S$DATA(8)<S$SCR,REF.NO> = CCTR.DESC
   ALL.JOB = ""
   PEND.ALL.JOB = ""
   FOR CDATE = SDATE TO EDATE
      CFND = 1 ; PFND = 1
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE
            MAT CCTR.SCHED.REC = ""
            CFND = 0
         END
      END
      MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
* MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE
         MAT PEND.CCTR.SCHED.REC = ""
         PFND = 0
* END
      END
      IF CFND = 0 AND PFND = 0 THEN GOTO 10001
      S$DATA(9)<S$SCR,REF.NO> = S$DATA(9)<S$SCR,REF.NO> + SUM(CCS.AVL.HRS)
      S$DATA(10)<S$SCR,REF.NO> = S$DATA(10)<S$SCR,REF.NO> + SUM(CCS.SCH.HRS)
      S$DATA(11)<S$SCR,REF.NO> = S$DATA(11)<S$SCR,REF.NO> + SUM(CCS.REM.HRS)
      S$DATA(17)<S$SCR,REF.NO> = S$DATA(17)<S$SCR,REF.NO> + SUM(PCCS.SCH.HRS)
      PEND.OVER =  (SUM(CCS.AVL.HRS) - (SUM(CCS.SCH.HRS) + SUM(PCCS.SCH.HRS)))
      IF PEND.OVER < 0 THEN
         S$DATA(18)<S$SCR,REF.NO> = S$DATA(18)<S$SCR,REF.NO> + PEND.OVER * (-1)
      END
      IF SUM(CCS.REM.HRS) < 0 THEN
         S$DATA(12)<S$SCR,REF.NO> = S$DATA(12)<S$SCR,REF.NO> + SUM(CCS.REM.HRS) * (-1)
      END
      JOB.CNT = DCOUNT(CCS.JOB,VM)
      FOR I = 1 TO JOB.CNT
         LOCATE CCS.JOB<1,I> IN ALL.JOB,1 SETTING FND ELSE
            ALL.JOB<FND> = CCS.JOB<1,I>
         END
      NEXT I
      PJOB.CNT = DCOUNT(PCCS.JOB,VM)
      FOR PC = 1 TO PJOB.CNT
         LOCATE PCCS.JOB<1,PC> IN PEND.ALL.JOB,1 SETTING PFND ELSE
            PEND.ALL.JOB<PFND> = PCCS.JOB<1,PC>
         END
      NEXT PC
10001*
   NEXT CDATE
   S$DATA(13)<S$SCR,REF.NO> = DCOUNT(ALL.JOB,AM)
   S$DATA(19)<S$SCR,REF.NO> = DCOUNT(PEND.ALL.JOB,AM)
   PEND.ALL.JOB = ""
   ALL.JOB = ""
   IF S$DATA(9)<S$SCR,REF.NO> = 0 THEN S$DATA(9)<S$SCR,REF.NO> = ''
   IF S$DATA(10)<S$SCR,REF.NO> = 0 THEN S$DATA(10)<S$SCR,REF.NO> = ''
   IF S$DATA(11)<S$SCR,REF.NO> = 0 THEN S$DATA(11)<S$SCR,REF.NO> = ''
   IF S$DATA(13)<S$SCR,REF.NO> = 0 THEN S$DATA(13)<S$SCR,REF.NO> = ''
   IF S$DATA(17)<S$SCR,REF.NO> = 0 THEN S$DATA(17)<S$SCR,REF.NO> = ''
   IF S$DATA(18)<S$SCR,REF.NO> = 0 THEN S$DATA(18)<S$SCR,REF.NO> = ''
   IF S$DATA(19)<S$SCR,REF.NO> = 0 THEN S$DATA(19)<S$SCR,REF.NO> = ''
   RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
20000*
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN GOTO 20001
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = LN.CNT
   SCREEN MULTI;;C;6;7;8;9;10;11;12;13;17;18;19
20001*
   RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
   BEGIN CASE
      CASE PROC.TYPE = "M"
         READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
         REQDIV = "ALL"
         CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
         BEGIN CASE
            CASE TP.DIV = "X"
               RELEASE PSS.LOCK, CONO:"TP"
               IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
            CASE TP.DIV = ""
               DCNT = DCOUNT(REQDIV,VM)
               FOR DPTR = 1 TO DCNT
                  CDIV = REQDIV<1,DPTR>
                  LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
                  READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
               NEXT DPTR
         END CASE
         RELEASE PSS.LOCK, CONO:"TP"
         TP.ERRMSG = ERRMSG
      CASE 1
         TP.DIV = ""
         DELETE PSS.LOCK, @TTY
         TP.ERRMSG = ""
   END CASE
   RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999*
END
