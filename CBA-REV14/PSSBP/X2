********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* PROGRAM     - GEN.JOB.SCHED.DRIVER
* AUTHOR      - CAROL SAGE, C.B.A.
* DATE        - 07/21/87
* DESCRIPTION
* Maintains CONTROL CONO:"JOB.SCHED.LIST" list for job scheduling:
* Jobs are scheduled in the order listed.
********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      PROMPT ""
      MV.JOB = 1
      MV.TYPE = 2
      MV.DATE = 3
      FWD.CODES = "SC"
      FWD.CODES<2> = "SCN"
      FWD.CODES<3> = "SA"
      FWD.CODES<4> = "SAN"
      FWD.CODES<5> = "SL"
      FWD.CODES<6> = "SLN"
      FWD.CODES<7> = "SLD"
      ERRMSG = ""
*
*---- OPEN ALL FILES
*
      OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;GO 999999
      OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;GO 999999
      OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;GO 999999
      OPEN "JOB.SCHED" TO JOB.SCHED ELSE ERRMSG="CANNOT OPEN JOB.SCHED FILE";GOSUB 90000;GO 999999
      OPEN "JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE ERRMSG="CANNOT OPEN JOB.CRTL.DATE.EXC FILE";GOSUB 90000;GO 999999
      OPEN "PSS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN PSS.SCREENS FILE";GOSUB 90000;GO 999999
      OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE ERRMSG = "CCTR.SCHED FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE ERRMSG = "CCTR.AVAIL FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE ERRMSG = "HOLIDAY.SCHED FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "OPERATION" TO OPERATION ELSE ERRMSG = "OPERATION FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "PSS.CONTROL" TO PSS.CONTROL ELSE ERRMSG="CANNOT OPEN PSS.CONTROL FILE";GOSUB 90000;GO 999999
      OPEN "PSS.HIERARCHY" TO PSS.HIERARCHY ELSE ERRMSG="CANNOT OPEN PSS.HIERARCHY FILE";GOSUB 90000;GO 999999
*
*--- CHECK SYSTEM HIERARCHY
*
      MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
         ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
         GOSUB 90000
         GOTO 999999
      END
      MAT PSHR.REC = ""
*
*--- GET COMPANY
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      IF CONO = "END" THEN GOTO 999999
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
      READ LOADING.FLG FROM PSS.CONTROL, CONO : "LOADING.FLG" ELSE
         READ LOADING.FLG FROM PSS.CONTROL, "LOADING.FLG" ELSE LOADING.FLG = "N"
      END
*
*--- CHECK FOR LOCKS
*
      DUMMY = ""
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO : "UNSCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = ""
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL UNSCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      RELEASE PSS.CONTROL, CONO : "UNSCHED.FLG"
      DUMMY = ""
      ALL.JOBS = ""
      REC.LOCK = 0
      READU ALL.JOBS FROM PSS.CONTROL, CONO : "JOB.SCHED.LIST" LOCKED REC.LOCK = 1 ELSE ALL.JOBS = ""
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL MULTI SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO : "SCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = ""
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      RELEASE PSS.CONTROL, CONO : "SCHED.FLG"
      DUMMY = ""
*
*---- INITIALIZATION SCEERN
*
      SCREEN INIT;#
      S$SCR=1
      SCREEN DEFINE;GEN.JOB.SCHED.DRIVER
      SCREEN FORMAT
      SCREEN COUNT;;3
      LINE.COUNT=S$LCNT
      LINE.SPACE=S$LSPC
*
*---- MAIN PROCESSING
100*
      SCREEN CLEAR
      S$DATA(1)<S$SCR>=TODAY
      SCREEN DISPLAY;;1
      LINE.CNT= DCOUNT(ALL.JOBS,AM)
      IF LINE.CNT > 0 THEN
         GOSUB 40000
         REF.NO=1
         CURR.REF.NO=""
         GOSUB 50000
      END ELSE
         LINE.CNT=0
         CURR.REF.NO=""
         OPT="A"
         GOTO 510
      END
*
*---- OPTIONS
500*
      S$DATA(9)<S$SCR>=""
      SCREEN FIELD;;9
      SCREEN INPUT;;9
      OPT=S$VALUE
510*
      BEGIN CASE
      CASE OPT="A" AND LINE.CNT< 999
         DONE=0
         FOR REF.NO=LINE.CNT+1 TO 999 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE="END" THEN
               DONE=1
               GOSUB 700
            END ELSE
               LINE.CNT=LINE.CNT+1
            END
         NEXT REF.NO
         REF.NO=LINE.CNT
         CURR.REF.NO=""
         GOSUB 50000
      CASE OPT="I" AND LINE.CNT > 0 AND LINE.CNT < 999
         GOSUB 600
         IF S$VALUE#"" AND S$VALUE#"END" THEN
            REF.NO=S$VALUE
            GOSUB 800
            LINE.CNT=LINE.CNT+1
            CURR.REF.NO=""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE="END" THEN
               GOSUB 700
               LINE.CNT=LINE.CNT-1
            END
            CURR.REF.NO=""
            GOSUB 50000
         END
      CASE OPT="D" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE#"" AND S$VALUE#"END" THEN
            REF.NO=S$VALUE
            GOSUB 700
            LINE.CNT=LINE.CNT-1
            IF REF.NO > LINE.CNT THEN REF.NO=REF.NO-1
            CURR.REF.NO=""
            GOSUB 50000
         END
      CASE OPT="M" AND LINE.CNT > 1
         GOSUB 600
         IF S$VALUE="" OR S$VALUE="END" THEN GOTO 500
         REF1=S$VALUE
         GOSUB 680
         IF S$VALUE="" OR S$VALUE="END" THEN GOTO 500
         REF2 = REF1+S$VALUE-1
         GOSUB 650
         BEGIN CASE
         CASE S$VALUE="END"
         CASE S$VALUE=""
         CASE S$VALUE>=REF1 AND S$VALUE <= REF2+1
         CASE 1
            REF3=S$VALUE
            REF.NO=S$VALUE
            NEW.JOBS=""
            NEW.DESC=""
            NEW.MAST=""
            NEW.EST=""
            NEW.CUST=""
            FOR REF.NO = REF2 TO REF1 STEP - 1
               INS ALL.JOBS<REF.NO> BEFORE NEW.JOBS<1>
               INS S$DATA(4)<S$SCR,REF.NO> BEFORE NEW.DESC<1>
               INS S$DATA(5)<S$SCR,REF.NO> BEFORE NEW.MAST<1>
               INS S$DATA(6)<S$SCR,REF.NO> BEFORE NEW.EST<1>
               INS S$DATA(7)<S$SCR,REF.NO> BEFORE NEW.CUST<1>
               GOSUB 700
            NEXT REF.NO
            REF2 = REF2-REF1+1
            IF REF3 > REF1 THEN REF3=REF3-REF2
            REF.NO = REF3
            FOR REF1 = REF2 TO 1 STEP - 1
               GOSUB 800
               ALL.JOBS<REF.NO>=NEW.JOBS<REF1>
               S$DATA(3)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.JOB>
               S$DATA(4)<S$SCR,REF.NO>=NEW.DESC<REF1>
               S$DATA(5)<S$SCR,REF.NO>=NEW.MAST<REF1>
               S$DATA(6)<S$SCR,REF.NO>=NEW.EST<REF1>
               S$DATA(7)<S$SCR,REF.NO>=NEW.CUST<REF1>
               S$DATA(8)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.DATE>
               S$DATA(12)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.TYPE>
               DEL NEW.JOBS<REF1>
               DEL NEW.DESC<REF1>
               DEL NEW.MAST<REF1>
               DEL NEW.EST<REF1>
               DEL NEW.CUST<REF1>
            NEXT REF1
            IF REF3 > LINE.CNT THEN REF3=LINE.CNT
            REF.NO=REF3
            CURR.REF.NO=""
            GOSUB 50000
         END CASE
      CASE OPT="S" OR OPT="SF"
         REF.NO=CURR.REF.NO+LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO=1
         GOSUB 50000
      CASE OPT="ST"
         REF.NO=1
         GOSUB 50000
      CASE OPT="SB"
         REF.NO=LINE.CNT
         GOSUB 50000
      CASE OPT="SR"
         REF.NO=CURR.REF.NO-LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT="P"
         IF LINE.CNT > 0 THEN GOSUB 1000
         IF ALL.JOBS="" THEN
            DELETE PSS.CONTROL, CONO:"JOB.SCHED.LIST"
            GOTO 98888
         END ELSE
            WRITEU ALL.JOBS ON PSS.CONTROL, CONO:"JOB.SCHED.LIST"
            S$DATA(3)<S$SCR>=""
            S$DATA(4)<S$SCR>=""
            S$DATA(5)<S$SCR>=""
            S$DATA(6)<S$SCR>=""
            S$DATA(7)<S$SCR>=""
            S$DATA(8)<S$SCR>=""
            S$DATA(11)<S$SCR>=""
            S$DATA(12)<S$SCR>=""
            LINE.CNT= DCOUNT(ALL.JOBS,AM)
            GOSUB 40000
            REF.NO=1
            CURR.REF.NO=""
            GOSUB 50000
         END
      CASE OPT="F"
         IF ALL.JOBS="" THEN
            DELETE PSS.CONTROL, CONO:"JOB.SCHED.LIST"
         END ELSE
            WRITE ALL.JOBS ON PSS.CONTROL, CONO:"JOB.SCHED.LIST"
         END
         GOTO 98888
      CASE (OPT="CM" OR OPT="C") AND LINE.CNT > 0
         BEGIN CASE
**       CASE LINE.CNT = 1
**          REF1 = 1
**          REF2 = 1
         CASE OPT = "C"
            GOSUB 600
            IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
            REF1 = S$VALUE
            REF2 = 1
         CASE 1
            GOSUB 600
            IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
            REF1 = S$VALUE
            GOSUB 680
            IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
            REF2 = S$VALUE
         END CASE
         REF2 = REF1+REF2-1
         FOR REF.NO = REF1 TO REF2 UNTIL S$VALUE = "END"
            GOSUB 50000
            JOB.NO = ALL.JOBS<REF.NO,MV.JOB>
            MATREAD JBS.REC FROM JOB.SCHED, CONO : JOB.NO ELSE MAT JBS.REC = ""
            GOSUB 10500
            IF S$VALUE = "END" THEN
               S$DATA(8)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.DATE>
               S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.TYPE>
               CURR.REF.NO = ""
            END
         NEXT REF.NO
         GOSUB 50000
      CASE OPT="END" OR OPT="E"
         GOTO 98888
      END CASE
      GOTO 500
*-------------------*
*--- SUBROUTINES ---*
*-------------------*
*
*---- GET LINE REFERENCE NUMBER
600*
      SCREEN FIELD;;10
      S$MINV=CURR.REF.NO
      S$MAXV=S$MINV+LINE.COUNT-1
      IF S$MAXV > LINE.CNT THEN S$MAXV=LINE.CNT
      SCREEN INPUT;;10
      RETURN
*
*---- GET NEW LINE REFERENCE NUMBER
650*
      SCREEN FIELD;;14
      S$MINV=1
      S$MAXV=LINE.CNT+1
      SCREEN INPUT;;14
      RETURN
*
*---- GET NUMBER OF LINES TO MOVE/CHANGE
680*
      SCREEN FIELD;;15
      S$MINV=1
      BEGIN CASE
      CASE OPT="CM"
         S$MAXV=LINE.CNT-REF1+1
         S$DATA(15)<S$SCR>=CURR.REF.NO+LINE.COUNT-1
         IF S$DATA(15)<S$SCR> > LINE.CNT THEN S$DATA(15)<S$SCR>=LINE.CNT
         S$DATA(15)<S$SCR>=S$DATA(15)<S$SCR>-REF1+1
      CASE OPT="M"
         S$DATA(15)<S$SCR>=1
         S$MAXV=CURR.REF.NO+LINE.COUNT-1
         IF S$MAXV > LINE.CNT THEN S$MAXV=LINE.CNT
         S$MAXV=S$MAXV-REF1+1
      CASE 1
         S$MAXV=1
      END CASE
      SCREEN INPUT;;15
      RETURN
*
*---- DELETE MULTI-LINE DATA
700*
      DEL ALL.JOBS<REF.NO>
      DEL S$DATA(3)<S$SCR,REF.NO>
      DEL S$DATA(4)<S$SCR,REF.NO>
      DEL S$DATA(5)<S$SCR,REF.NO>
      DEL S$DATA(6)<S$SCR,REF.NO>
      DEL S$DATA(7)<S$SCR,REF.NO>
      DEL S$DATA(8)<S$SCR,REF.NO>
      DEL S$DATA(12)<S$SCR,REF.NO>
      RETURN
*
*---- INSERT MULTI-LINE DATA
800*
      INS "" BEFORE ALL.JOBS<REF.NO>
      INS "" BEFORE S$DATA(3)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(4)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(5)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(6)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(7)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(8)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(12)<S$SCR,REF.NO>
      RETURN
*
*--- PROCESS JOB SCHEDULE
*
1000*
      PRCS.BLK = 0
      FOR REF.NO = 1 TO LINE.CNT UNTIL PRCS.BLK
         GOSUB 50000
         S$VAL = REF.NO
         S$DATA(11)<S$SCR,REF.NO> = "*"
         SCREEN DISPLAY;;11
         JOB.NO = ALL.JOBS<1,MV.JOB>
         REC.LOCK = 0
         MATREADU JBS.REC FROM JOB.SCHED, CONO : JOB.NO LOCKED REC.LOCK = 1 ELSE
            ERRMSG = "Invalid JOB.SCHED "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         IF REC.LOCK THEN
            ERRMSG = "JOB.SCHED record is locked. "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         IF LOADING.FLG = "Y" AND ALL.JOBS<1,MV.TYPE> = "D" THEN
            ERRMSG = "YOU CAN ONLY SCHEDULE FORWARD FOR LOADING SYSTEM"
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
1010 *
         GOSUB 20000
         IF FND AND ALL.JOBS<1,MV.TYPE> = "D" THEN
            ERRMSG = "CANNOT SCHEDULE 'SC' BACK"
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         MATREAD JOB.REC FROM JOB, CONO : JOB.NO ELSE MAT JOB.REC = ""
         IF JOB.STATUS<1,1> = 9 THEN
            ERRMSG = "This job is cancelled "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         GOSUB 30000
         IF SBLK THEN
            PRCS.BLK = 1
            GOTO 1099
         END
P_X  = 0 ; P_Y = 21 ; P_VALUE = "NOW PROCESSING SCHEDULE ROUTINE":@(-4) ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         DUE.DATE = ""
         ACTION = ""
         REQ.DATE = ALL.JOBS<1,MV.DATE>
         BEGIN CASE
         CASE ALL.JOBS<1,MV.TYPE> = "D"
            ST.PTR = 0
            EN.PTR = 0
            CALL GEN.JOB.SCHED.BCK(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,ST.PTR,EN.PTR)
            SDATE = REQ.DATE
            BEGIN CASE
            CASE ACTION = ""
            CASE ACTION = "E" OR ACTION = "F"
               SCREEN FIELD;;13
               S$PMSG = "(R)eview, (U)n-schedule: "
               S$VALDAT = "R,U"
               SCREEN INPUT;;13
               IF S$VALUE = "R" THEN
                  MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
                  S$SCR = S$SCR + 1
                  CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
                  S$SCR = S$SCR - 1
                  SCREEN FORMAT
                  CURR.REF.NO = ""
                  GOSUB 50000
                  SCREEN FIELD;;22
                  SCREEN INPUT;;22
                  IF S$VALUE = "Y" THEN
                     ALL.FLG = 0
                     CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                     GOTO 1010
                  END
               END
               ALL.FLG = 0
               CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
               PRCS.BLK = 1
            CASE ACTION = "N"
               PRCS.BLK = 1
            CASE 1
               PRCS.BLK = 1
            END CASE
            CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NO)
         CASE ALL.JOBS<1,MV.TYPE> = "S"
            ST.PTR = 0
            EN.PTR = 0
            BCK.FLG = ""
            CALL GEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
            SDATE = REQ.DATE
            BEGIN CASE
            CASE ACTION = ""
1022           IF DUE.DATE > JBS.DUE.DATE THEN
                  SCREEN FIELD;;13
                  S$PMSG = "New calculated due date is - ": OCONV(DUE.DATE,"D2/") :". (A)ccept, (R)eview, (U)n-schedule: "
                  SCREEN INPUT;;13
                  BEGIN CASE
                  CASE S$VALUE = "A"
                  CASE S$VALUE = "R"
                     MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
                     S$SCR = S$SCR + 1
                     CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
                     S$SCR = S$SCR - 1
                     SCREEN FORMAT
                     CURR.REF.NO = ""
                     GOSUB 50000
                     SCREEN FIELD;;22
                     SCREEN INPUT;;22
                     IF S$VALUE = "Y" THEN
                        ALL.FLG = 0
                        CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                        GOTO 1010
                     END
                     GOTO 1022
                  CASE 1
                     ALL.FLG = 0
                     CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                     PRCS.BLK = 1
                  END CASE
               END
            CASE ACTION = "E"
               SCREEN FIELD;;13
               S$PMSG = "(R)eview, (U)n-schedule: "
               S$VALDAT = "R,U"
               SCREEN INPUT;;13
               IF S$VALUE = "R" THEN
                  MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
                  S$SCR = S$SCR + 1
                  CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
                  S$SCR = S$SCR - 1
                  SCREEN FORMAT
                  CURR.REF.NO = ""
                  GOSUB 50000
                  SCREEN FIELD;;22
                  SCREEN INPUT;;22
                  IF S$VALUE = "Y" THEN
                     ALL.FLG = 0
                     CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                     GOTO 1010
                  END
               END
               IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
                  ALL.FLG = 0
                  CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
               END
               PRCS.BLK = 1
            CASE 1
               PRCS.BLK = 1
            END CASE
            CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NO)
         CASE 1
            ERRMSG = "Invalid schedule type "
            GOSUB 90000
            PRCS.BLK = 1
         END CASE
P_X  = 0 ; P_Y = 21 ; P_VALUE = @(-4) ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF PRCS.BLK THEN GOTO 1099
         DEL ALL.JOBS<1>
         WRITEU ALL.JOBS ON PSS.CONTROL, CONO:"JOB.SCHED.LIST"
         S$VAL = REF.NO
         S$DATA(11)<S$SCR,REF.NO> = ""
         SCREEN DISPLAY;;11
1099*
         RELEASE JOB.SCHED, CONO : JOB.NO
      NEXT REF.NO
      RETURN
*
*---- ENTER JOB NUMBER
10000*
      S$VAL=REF.NO
      SCREEN DISPLAY;;2
10100*
      S$DATA(3)<S$SCR,REF.NO>=ALL.JOBS<REF.NO,MV.JOB>
      S$VAL=REF.NO
      SCREEN FIELD;;3
      SCREEN INPUT;;3;RETURN
      JOB.NO=S$VALUE
*      PTR = 1
*      LOOP
*      WHILE PTR DO
*         FIND JOB.NO IN ALL.JOBS,PTR SETTING AA,BB ELSE
*            AA = 0
*            BB = 0
*            PTR = 0
*         END
*         BEGIN CASE
*         CASE PTR = 0
*         CASE BB AND BB # MV.JOB
*            PTR = AA + 1
*         CASE AA = REF.NO
*            PTR = AA + 1
*         CASE 1
*            PTR = 0
*         END CASE
*      REPEAT
      XCNT = DCOUNT(ALL.JOBS,AM)
      AA = 0
      FOR XPTR = 1 TO XCNT UNTIL AA
         IF JOB.NO = ALL.JOBS<XPTR,MV.JOB> THEN AA = XPTR
      NEXT XPTR
      IF AA THEN
         ERRMSG="JOB.SCHED already exists on Line ":AA
         S$DATA(3)<S$SCR,REF.NO>=""
         GOSUB 90000;GOTO 10100
      END
10200*
      MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.NO ELSE
         ERRMSG="Invalid JOB.SCHED"
         S$DATA(3)<S$SCR,REF.NO>=""
         GOSUB 90000;GOTO 10100
      END
*
*---- IF SCHEDULED HOURS HAVE BEEN USED UP, DON'T ALLOW SCHEDULING
*
      LAST.CNT=DCOUNT(JBS.DEPT,VM)
      USED.UP = 0
      FOR XXX = 1 TO LAST.CNT UNTIL USED.UP
         IF JBS.USD.HRS<1,XXX> < JBS.SCH.HRS<1,XXX> THEN USED.UP = 1
      NEXT XXX
      IF USED.UP <= 0 THEN
         ERRMSG="All Hours have been Scheduled"
         S$DATA(3)<S$SCR,REF.NO>=""
         GOSUB 90000;GOTO 10100
      END
      GOSUB 30000
      IF SBLK THEN
         S$DATA(3)<S$SCR,REF.NO>=""
         GOTO 10100
      END
*
      MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC=""
*
      S$VAL=REF.NO
      IF JOB.DESC # "" THEN
         J.DESC=JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
      END ELSE
         J.DESC=JBS.JOB.COMMENT
      END
      S$DATA(4)<S$SCR,REF.NO>=J.DESC
      SCREEN DISPLAY;;4
*
      S$VAL=REF.NO
      IF JOB.MASTER # "" THEN
         J.MASTER=JOB.MASTER
      END ELSE
         J.MASTER=JOB.NO
      END
      S$DATA(5)<S$SCR,REF.NO>=J.MASTER
      SCREEN DISPLAY;;5
*
      S$VAL=REF.NO
      IF JOB.EST#"" THEN
         J.ESTIMATE=JOB.EST
      END ELSE
         J.ESTIMATE=""
      END
      S$DATA(6)<S$SCR,REF.NO>=J.ESTIMATE
      SCREEN DISPLAY;;6
*
      S$VAL=REF.NO
      S$DATA(7)<S$SCR,REF.NO>=JBS.CUST.NAME
      SCREEN DISPLAY;;7
*
*--- GET TYPE OF SCHEDULE
*
10500*
      PREV.TYPE=ALL.JOBS<REF.NO,MV.TYPE>
      IF LOADING.FLG = "Y" THEN
         FND = 1
      END ELSE
         GOSUB 20000
      END
      IF FND THEN S$DATA(12)<S$SCR,REF.NO> = "S"
      S$VAL=REF.NO
      SCREEN FIELD;;12
      IF LOADING.FLG = "Y" THEN
         S$VALDAT = "S,R"
         S$HMSG = "S = Start Forward or R = Review the job status screens."
      END
      SCREEN INPUT;;12;RETURN
      BEGIN CASE
      CASE S$VALUE = "D" AND LOADING.FLG = "Y"
         ERRMSG = "YOU CAN ONLY SCHEDULE FORWARD FOR LOADING SYSTEM"
         GOSUB 90000
         GOTO 10500
      CASE S$VALUE = "D" AND FND
         ERRMSG = "CANNOT SCHEDULE 'SC' BACK"
         GOSUB 90000
         GOTO 10500
      CASE S$VALUE = "D"
      CASE S$VALUE = "S"
      CASE S$VALUE = "R"
         PARAM = "I"
         PARAM<1,2> = "AUTO"
         PARAM<1,3> = JOB.NO
         CALL PERFORM.PROG ("JOB.SCHED.DET.MAINT",PARAM)
         SCREEN FORMAT
         SCREEN DISPLAY;;1
         S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.TYPE>
         CURR.REF.NO = ""
         GOSUB 50000
         IF OPT = "A" THEN
            S$VAL = REF.NO
            SCREEN DISPLAY;;2
            S$VAL = REF.NO
            SCREEN DISPLAY;;3
            S$VAL = REF.NO
            SCREEN DISPLAY;;5
            S$VAL = REF.NO
            SCREEN DISPLAY;;6
            S$VAL = REF.NO
            SCREEN DISPLAY;;7
            S$VAL = REF.NO
            SCREEN DISPLAY;;12
            S$VAL = REF.NO
            SCREEN DISPLAY;;4
         END
         GOTO 10500
      CASE 1
         GOTO 10500
      END CASE
      J.TYPE = S$VALUE
      IF J.TYPE # PREV.TYPE THEN S$DATA(8)<S$SCR,REF.NO> = ""
*
*--- GET DATE
*
10600*
      S$VAL=REF.NO
      SCREEN FIELD;;8
      BEGIN CASE
      CASE J.TYPE = "D" AND JBS.DUE.DATE+0 >= TODAY
         S$O.R = "O"; S$DEFAULT = JBS.DUE.DATE
      CASE J.TYPE = "S"
         S$O.R = "O"; S$DEFAULT = TODAY + 1
      END CASE
      S$MINV = TODAY
      S$MAXV = TODAY+999
      SCREEN INPUT;;8;RETURN
***   IF S$VALUE <= TODAY THEN
***      ERRMSG = "Must be a future date. "
***      GOSUB 90000
***      GOTO 10600
***   END
      IF S$VALUE < TODAY THEN
         ERRMSG = "Cannot schedule in the past. "
         GOSUB 90000
         GOTO 10600
      END
      J.DATE = S$VALUE
      ALL.JOBS<REF.NO,MV.JOB> = JOB.NO
      ALL.JOBS<REF.NO,MV.TYPE> = J.TYPE
      ALL.JOBS<REF.NO,MV.DATE> = J.DATE
      RETURN
*
*---- CHECK FOR FORWARD CODES
*
20000*
      FND = 0
      FOR XXX = 1 TO 7 UNTIL FND
         LOCATE FWD.CODES<XXX> IN JBS.HOLD.CODE<1>,1 SETTING FND ELSE FND = 0
      NEXT XXX
      RETURN
*
*---- CHECK FOR NULL CODES
*
30000*
      SBLK = 0
      JCNT = DCOUNT(JBS.DEPT,VM)
      FOR XXX = 1 TO JCNT UNTIL SBLK
         IF JBS.HOLD.CODE<1,XXX> = "" THEN SBLK = XXX
      NEXT XXX
      IF SBLK THEN
         ERRMSG = "INVALID SCHEDULE CODE ON LINE - " : XXX
         GOSUB 90000
      END
      RETURN
*
*---- LOAD S$DATA MATRIX
40000*
      FOR N=1 TO LINE.CNT
         S$DATA(3)<S$SCR,N>=ALL.JOBS<N,MV.JOB>
         MATREAD JOB.REC FROM JOB,CONO:ALL.JOBS<N,MV.JOB> ELSE MAT JOB.REC=""
         MATREAD JBS.REC FROM JOB.SCHED,CONO:ALL.JOBS<N,MV.JOB> ELSE MAT JBS.REC=""
         IF JOB.DESC # "" THEN
            S$DATA(4)<S$SCR,N>=JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
         END ELSE
            S$DATA(4)<S$SCR,N>=JBS.JOB.COMMENT
         END
         IF JOB.MASTER # "" THEN
            S$DATA(5)<S$SCR,N>=JOB.MASTER
         END ELSE
            S$DATA(5)<S$SCR,N>=ALL.JOBS<N>
         END
         IF JOB.EST#"" THEN
            S$DATA(6)<S$SCR,N>=JOB.EST
         END ELSE
            S$DATA(6)<S$SCR,N>=""
         END
         S$DATA(7)<S$SCR,N>=JBS.CUST.NAME
         S$DATA(8)<S$SCR,N>=ALL.JOBS<N,MV.DATE>
         S$DATA(12)<S$SCR,N>=ALL.JOBS<N,MV.TYPE>
      NEXT N
      RETURN
*
*---- SCROLL INTERNAL COMMENTS
50000*
      START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO=CURR.REF.NO THEN RETURN
      CURR.REF.NO=START.REF.NO
      S$VAL=START.REF.NO
      S$CNT=LINE.CNT
      SCREEN MULTI;;C;2;11;3;5;6;7;12;8;4
      RETURN
*
*---- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*--- RELEASE
98888*
      RELEASE
*
*---- END OF PROGRAM
999999*
*       PRINT @(-1):
   END
