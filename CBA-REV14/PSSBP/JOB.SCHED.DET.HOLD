      SUBROUTINE JOB.SCHED.DET.HOLD (CONO,JOB.NUM,TODAY,LOADING.FLG,PROC.TYPE,REF,DEPT,CCTR)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - JOB.SCHED.DET.HOLD
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 11/03/88
* MODIFIED - 02/21/96, NA, TASK 19938, DISPLAY COST CENTER DESCRIPTION
* MODIFIED - 02/21/96, NA, TASK 19939, ALLOW MODIFICATION OF COMMENTS
* DESCRIPTION
* This subroutine is called from JOB.SCHED.DET.SUB program and allow
* the utilizing of the hold parameters for the cost center line.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED.MATRIX
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>ICS.CPYLIB>INVENTORY
*
*---- HOLD.REC DIM
*
      DIM HOLD.REC(9)
      EQU CODE         TO HOLD.REC(1)
      EQU SHIFT        TO HOLD.REC(2)
      EQU EQUIP        TO HOLD.REC(3)
      EQU OVER.LOAD    TO HOLD.REC(4)
      EQU DUE.DATE     TO HOLD.REC(5)
      EQU HOLD.PO      TO HOLD.REC(6)
      EQU DP.CC        TO HOLD.REC(7)
      EQU HOLD.COMMENT TO HOLD.REC(8)
      EQU HOLD.DAYS    TO HOLD.REC(9)
      MAT HOLD.REC = ""
*
*---- INT
*
      OPEN "PSS.SCREENS" TO PSS.SCREENS ELSE
         ERRMSG = "CANNOT LOCATE PSS.SCREENS FILE"
         GOSUB 90000
         RETURN
      END
      SCREEN DEFINE;JOB.SCHED.DET.SUB
      ERRMSG = ""
      MAT JBSM.REC = ""
*
*----- MAIN PROCESSING
*
1000*
      S$VAL = REF
      XCODE = ""
      XDAYS = ""
      IF LOADING.FLG = "Y" THEN
         CODE = "L"
         S$DATA(6)<S$SCR,REF> = CODE
         SCREEN DISPLAY;;6
         GOTO 1100
      END
      BEGIN CASE
      CASE JBS.HOLD.CODE<1,REF> # ""
         XCODE = JBS.HOLD.CODE<1,REF>
         XDAYS = JBS.HOLD.PO<1,REF>
      CASE REF = 1
         XCODE = "SS"
      CASE JBS.DEPT<1,REF-1>[1,2] # DEPT[1,2]
         MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : JBS.DEPT<1,REF-1>[1,2] ELSE
            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : "HIERARCHY" ELSE
               MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
            END
         END
         LOCATE DEPT IN PSHR.TO<1>,1 SETTING POS ELSE
            LOCATE DEPT[1,2] IN PSHR.TO<1>,1 SETTING POS ELSE POS = 0
         END
         IF POS THEN
            XCODE = PSHR.CODE<1,POS>
            XDAYS = PSHR.DAYS<1,POS>
         END ELSE
            XCODE = PSHR.DEF.CODE
            XDAYS = PSHR.DEF.DAYS
         END
      CASE JBS.CCTR<1,REF-1> # CCTR
         MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : DEPT[1,2] :"*": JBS.CCTR<1,REF-1> THEN
            LOCATE CCTR IN PSHR.TO<1>,1 SETTING POS ELSE POS = 0
            IF POS THEN
               XCODE = PSHR.CODE<1,POS>
            END ELSE
               XCODE = PSHR.CCTR.CODE
            END
         END ELSE
            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : DEPT[1,2] ELSE
               MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : "HIERARCHY" ELSE
                  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
               END
            END
            XCODE = PSHR.CCTR.CODE
         END
      CASE 1
         XCODE = "SS"
      END CASE
      S$DATA(6)<S$SCR,REF> = XCODE
      SCREEN FIELD;;6
      SCREEN INPUT;;6;GOTO 1950
      CODE = S$VALUE
1100*
      BEGIN CASE
      CASE JBS.HOLD.CODE<1,REF> = "" AND CODE = XCODE
         S$DATA(28)<S$SCR,REF> = XDAYS
         S$VAL = REF
         SCREEN DISPLAY;;28
      CASE JBS.HOLD.CODE<1,REF> = ""
      CASE JBS.HOLD.CODE<1,REF> # CODE
         S$DATA(7)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;7
         S$DATA(8)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;8
         S$DATA(9)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;9
         S$DATA(10)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;10
         IF XCODE = CODE THEN
            S$DATA(28)<S$SCR,REF> = XDAYS
         END ELSE
            S$DATA(28)<S$SCR,REF> = ""
         END
         S$VAL = REF
         SCREEN DISPLAY;;28
         S$DATA(11)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;11
         S$DATA(12)<S$SCR,REF> = ""
         S$VAL = REF
         SCREEN DISPLAY;;12
      CASE 1
      END CASE
      BEGIN CASE
      CASE CODE = ""
         GOTO 1000
      CASE CODE = "L"
         OVER.LOAD = "Y"
         S$DATA(9)<S$SCR,REF> = OVER.LOAD
         S$VAL = REF
         SCREEN DISPLAY;;9
         FOR XX = 1 TO 3 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,5000
         NEXT XX
      CASE CODE = "H"
         FOR XX = 1 TO 4 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,5000
         NEXT XX
      CASE CODE = "D" AND REF = 1
         ERRMSG = "'D', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "D"
         FOR XX = 1 TO 4 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,8000
         NEXT XX
      CASE CODE = "PO" AND CO.POS = "Y"
         FOR XX = 1 TO 4 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,6000
         NEXT XX
      CASE CODE = "PO"
         FOR XX = 1 TO 5 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,6000,5000
         NEXT XX
      CASE CODE = "OPO" AND CO.POS = "Y"
         FOR XX = 1 TO 4 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,6400
         NEXT XX
      CASE CODE = "OPO"
         FOR XX = 1 TO 5 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,6400,5000
         NEXT XX
      CASE CODE = "J"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,6800
         NEXT XX
      CASE CODE = "JN"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,6800
         NEXT XX
      CASE CODE = "JD"
         FOR XX = 1 TO 5 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,8000,6800
         NEXT XX
      CASE CODE = "SC" AND REF = 1
         ERRMSG = "'SC', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SC"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,7000
         NEXT XX
      CASE CODE = "SS"
         GOSUB 4000
      CASE CODE = "SN" AND REF = 1
         ERRMSG = "'SN', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SN"
         GOSUB 4000
      CASE CODE = "SCN" AND REF = 1
         ERRMSG = "'SCN', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SCN"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,7000
         NEXT XX
      CASE CODE = "SA" AND REF = 1
         ERRMSG = "'SA', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SA"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,7000
         NEXT XX
      CASE CODE = "SAN" AND REF = 1
         ERRMSG = "'SAN', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SAN"
         FOR XX = 1 TO 2 UNTIL S$VALUE = "END"
            ON XX GOSUB 4000,7000
         NEXT XX
      CASE CODE = "SL" AND REF = 1
         ERRMSG = "'SL', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SL"
         GOSUB 4000
      CASE CODE = "SLN" AND REF = 1
         ERRMSG = "'SLN', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SLN"
         GOSUB 4000
      CASE CODE = "SLD" AND REF = 1
         ERRMSG = "'SLD', Can't be the first entry"
         GOSUB 90000
         GOTO 1000
      CASE CODE = "SLD"
         FOR XX = 1 TO 4 UNTIL S$VALUE = "END"
            ON XX GOSUB 2000,3000,4000,8000
         NEXT XX
      CASE 1
         ERRMSG = "Invalid hold code"
         GOSUB 90000
         GOTO 1000
      END CASE
      IF S$VALUE = "END" THEN GOTO 1950
*
*---- HOLD COMMENT
*
1800*
      S$DATA(14)<S$SCR> = JBS.HOLD.COMMENT<1,REF>
      SCREEN FIELD;;14
      S$HMSG = "Enter comment"
      S$PMSG = "Comment : "
      SCREEN INPUT;;14;GOTO 1950
      HOLD.COMMENT = S$VALUE
      S$DATA(14)<S$SCR> = ""
*
*---- STORE INPUT DATA
*
1900*
      JBS.HOLD.CODE<1,REF> = CODE
      JBS.SHIFT<1,REF> = SHIFT
      JBS.EQUIP<1,REF> = EQUIP
      JBS.OVER.LOAD<1,REF> = OVER.LOAD
      JBS.HOLD.DATE<1,REF> = DUE.DATE
      JBS.HOLD.PO<1,REF> = HOLD.PO
      JBS.HOLD.DP.CC<1,REF> = DP.CC
      JBS.HOLD.COMMENT<1,REF> = HOLD.COMMENT
      JBS.HOLD.DAYS<1,REF> = HOLD.DAYS
      GOTO 1999
*
*--- LOAD S$DATA WITH PREVIOUS DATA
*
1950*
      S$DATA(6)<S$SCR,REF> = JBS.HOLD.CODE<1,REF>
      S$DATA(7)<S$SCR,REF> = JBS.SHIFT<1,REF>
      S$DATA(8)<S$SCR,REF> = JBS.EQUIP<1,REF>
      S$DATA(9)<S$SCR,REF> = JBS.OVER.LOAD<1,REF>
      S$DATA(10)<S$SCR,REF> = JBS.HOLD.DATE<1,REF>
      S$DATA(11)<S$SCR,REF> = JBS.HOLD.PO<1,REF>
      S$DATA(12)<S$SCR,REF> = JBS.HOLD.DP.CC<1,REF>
      S$DATA(28)<S$SCR,REF> = JBS.HOLD.DAYS<1,REF>
*
*--- CLEAR HOLD ARRAY
*
1999*
      MAT HOLD.REC = ""
      GOTO 999999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*----SHIFT
*
2000*
      S$VAL = REF
      SCREEN FIELD;;7
      SCREEN INPUT;;7;RETURN
      SHIFT = S$VALUE
      RETURN
*
*----EQUIP
*
3000*
      S$VAL = REF
      SCREEN FIELD;;8
      SCREEN INPUT;;8;RETURN
      EQUIP = S$VALUE
      RETURN
*
*---- OVER LOAD
*
4000*
      S$VAL = REF
      SCREEN FIELD;;9
      SCREEN INPUT;;9;RETURN
      OVER.LOAD = S$VALUE
      RETURN
*
*---- HOLD DATE
*
5000*
      S$VAL = REF
      SCREEN FIELD;;10
      SCREEN INPUT;;10;RETURN
      IF S$VALUE < TODAY THEN
         ERRMSG = "Due date must be today or a future date"
         GOSUB 90000
         GOTO 5000
      END
      DUE.DATE = S$VALUE
5999*
      RETURN
*
*---- HOLD REGULAR PO
*
6000*
      BEGIN CASE
      CASE CO.POS = "Y"
         S$DATA(14)<S$SCR> = "Enter a valid Purchase Order number"
      CASE 1
         S$DATA(14)<S$SCR> = "Enter Purchase Order number"
      END CASE
      SCREEN DISPLAY;;14
6050*
      S$VAL = REF
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      IF CO.POS # "Y" THEN
         HOLD.PO = S$VALUE
         GOTO 6199
      END
      MATREAD PO.REC FROM PO,CONO:S$VALUE ELSE
         ERRMSG = "Invalid PO number"
         GOSUB 90000
         GOTO 6050
      END
      JOB.FND = 0
      JOB.CNT = DCOUNT(PO.PROD.NUM,VM)
      FOR I = 1 TO JOB.CNT UNTIL JOB.FND
         LOCATE JOB.NUM IN PO.JOB.NO<1,I>,1 SETTING JOB.FND ELSE JOB.FND = 0
      NEXT I
      IF JOB.FND = 0 THEN
         ERRMSG = "PO does not include this job number"
         GOSUB 90000
         GOTO 6050
      END
      HOLD.PO = S$VALUE
*
*---- HOLD REGULAR PO DATE
*
6100*
      S$VAL = REF
      SCREEN FIELD;;10
      EXP.DATE = TODAY
      LOW.DATE = 9999999
      JOB.CNT = DCOUNT(PO.PROD.NUM,VM)
      FOR I = 1 TO JOB.CNT
         LOCATE JOB.NUM IN PO.JOB.NO<1,I> SETTING POS ELSE GOTO 6139
         IF PO.DEL.DATE<1,I> > EXP.DATE THEN
            EXP.DATE = PO.DEL.DATE<1,I>
         END
         IF PO.DEL.DATE<1,I> < LOW.DATE THEN
            LOW.DATE = PO.DEL.DATE<1,I>
         END
6139*
      NEXT I
      IF LOW.DATE < TODAY THEN LOW.DATE = TODAY
      PROD.CNT = DCOUNT(PO.PROD.NUM,VM)
      II = 0
      FOR I = 1 TO PROD.CNT
         LOCATE JOB.NUM IN PO.JOB.NO<1,I> SETTING POS ELSE GOTO 6159
         MATREAD INV.REC FROM INVENTORY,CONO:PO.PROD.NUM<1,I> ELSE MAT INV.REC = ""
         II = II + 1
         S$HMSG<1,1,II> = OCONV(PO.DEL.DATE<1,I>,"D2/"):" ":INV.FULL.DESC
6159*
      NEXT I
      S$DATA(10)<S$SCR,REF> = OCONV(EXP.DATE,"D2/")
      SCREEN INPUT;;10;RETURN
      BEGIN CASE
      CASE S$VALUE < LOW.DATE
         ERRMSG = "Due date must be on or after ":OCONV(LOW.DATE,"D2/")
         GOSUB 90000
         GOTO 6100
      CASE S$VALUE > JBS.DUE.DATE
         DUE.DATE = S$VALUE
         SCREEN FIELD;;26
         S$PMSG = "Hold date is greater than Job Due Date. Do you want to accept? Y/N "
         SCREEN INPUT;;26
         IF S$VALUE # "Y" THEN
            DUE.DATE = ""
            GOTO 6100
         END
      CASE 1
         DUE.DATE = S$VALUE
      END CASE
6199*
      RETURN
*
*---- HOLD OUTSIDE PO
*
6400*
      BEGIN CASE
      CASE CO.POS = "Y"
         S$DATA(14)<S$SCR> = "Enter a valid Outside Purchase Order number"
      CASE 1
         S$DATA(14)<S$SCR> = "Enter Outside Purchase Order number"
      END CASE
      SCREEN DISPLAY;;14
6450*
      S$VAL = REF
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      IF CO.POS # "Y" THEN
         HOLD.PO = S$VALUE
         GOTO 6599
      END
      MATREAD OPO.REC FROM OUTSIDE.PO,CONO:S$VALUE ELSE
         ERRMSG = "Invalid Outside PO number"
         GOSUB 90000
         GOTO 6450
      END
*CSF 24030
*     IF OPO.JOB.NO # JOB.NUM THEN
      LOCATE JOB.NUM IN OPO.JOB.NO<1>,1 SETTING OFND ELSE
*CSF 24030
         ERRMSG = "PO is not for this job"
         GOSUB 90000
         GOTO 6450
      END
      HOLD.PO = S$VALUE
*
*---- HOLD OUTSIDE PO DATE
*
6500*
      EXP.DATE = TODAY
      LOW.DATE = TODAY
      IF OPO.EXP.DATE > EXP.DATE THEN EXP.DATE = OPO.EXP.DATE
      S$DATA(10)<S$SCR,REF> = OCONV(EXP.DATE,"D2/")
      S$VAL = REF
      SCREEN FIELD;;10
      SCREEN INPUT;;10;RETURN
      BEGIN CASE
      CASE S$VALUE < LOW.DATE
         ERRMSG = "Due date must be on or after ":OCONV(LOW.DATE,"D2/")
         GOSUB 90000
         GOTO 6500
      CASE S$VALUE > JBS.DUE.DATE
         DUE.DATE = S$VALUE
         SCREEN FIELD;;26
         S$PMSG = "Hold date is greater than Job Due Date. Do you want to accept? Y/N "
         SCREEN INPUT;;26
         IF S$VALUE # "Y" THEN
            DUE.DATE = ""
            GOTO 6500
         END
      CASE 1
         DUE.DATE = S$VALUE
      END CASE
6599*
      RETURN
*
*---- HOLD JOB
*
6800*
      S$DATA(14)<S$SCR> = "Enter a valid Job Number"
      SCREEN DISPLAY;;14
6850*
      S$VAL = REF
      SCREEN FIELD;;11
      SCREEN INPUT;;11;GOTO 6999
      MATREAD JBSM.REC FROM JOB.SCHED, CONO : S$VALUE ELSE
         MAT JBSM.REC = ""
         ERRMSG = "Invalid job"
         GOSUB 90000
         GOTO 6850
      END
      JOB.CNT = DCOUNT(JBSM.DEPT,VM)
      JOB.FND = 0
      FOR I = 1 TO JOB.CNT UNTIL JOB.FND
         BEGIN CASE
         CASE JBSM.HOLD.CODE<1,I> = "J" AND JBSM.HOLD.PO<1,I> = JOB.NUM
            JOB.FND = 1
         CASE JBSM.HOLD.CODE<1,I> = "JN" AND JBSM.HOLD.PO<1,I> = JOB.NUM
            JOB.FND = 1
         CASE JBSM.HOLD.CODE<1,I> = "JD" AND JBSM.HOLD.PO<1,I> = JOB.NUM
            JOB.FND = 1
         CASE 1
         END CASE
      NEXT I
      IF JOB.FND THEN
         ERRMSG = "Job entered is schedule dependent of this job"
         GOSUB 90000
         GOTO 6850
      END
      HOLD.PO = S$VALUE
6999*
      MAT JBSM.REC = ""
      RETURN
*
*----- CNCR REFERENCE LINE NUMBER
*
7000*
      S$DATA(14)<S$SCR> = "Enter reference line number"
      SCREEN DISPLAY;;14
      S$VAL = REF
      SCREEN FIELD;;12
      S$MINV = 1
      S$MAXV = REF - 1
      SCREEN INPUT;;12;RETURN
      DP.CC = S$VALUE
      RETURN
*
*---- DELAY DAYS
*
8000*
      S$DATA(14)<S$SCR> = "Enter number of full days to delay"
      SCREEN DISPLAY;;14
8050*
      S$VAL = REF
      SCREEN FIELD;;28
      SCREEN INPUT;;28;RETURN
      HOLD.DAYS = S$VALUE
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
999999*
      RETURN
   END
