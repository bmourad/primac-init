*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.JOB.SCHED
********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* PROGRAM     - JOB.SCHED.RPT
* AUTHOR      - ANN POWLEY, C.B.A.
* DATE        - 09/14/87
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* DESCRIPTION - This program create a list of jobs and then prints
* the Job Schedule report.
********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      PROMPT ""
      ACTION = "M"
*
*---- OPEN ALL FILES
*
      OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;GOTO 999999
      OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;GOTO 999999
      OPEN "PSS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN PSS.SCREENS FILE";GOSUB 90000;GOTO 999999
      OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="CANNOT OPEN DEPARTMENT FILE";GOSUB 90000;GOTO 999999
      OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG="CANNOT OPEN COST.CNTR FILE";GOSUB 90000;GOTO 999999
      OPEN "OPERATION" TO OPERATION ELSE ERRMSG="CANNOT OPEN OPERATION FILE";GOSUB 90000;GOTO 999999
      OPEN "JOB.SCHED" TO JOB.SCHED ELSE ERRMSG="CANNOT OPEN JOB.SCHED FILE";GOSUB 90000;GOTO 999999
      OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE ERRMSG="CANNOT OPEN PEND.JOB.SCHED FILE";GOSUB 90000;GOTO 999999
      OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;GOTO 999999
      OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
         ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
         GOSUB 90000
         GOTO 999999
      END
      OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
         ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
         GOSUB 90000
         GOTO 999999
      END
*
*---- GET COMPANY
*
      CONO=""
      CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
      IF CONO = "END" THEN GOTO 999999
*
      SCREEN INIT;#
      S$SCR=1
      SCREEN DEFINE;JOB.SCHED.RPT
      SCREEN FORMAT
      SCREEN COUNT;;3
      LINE.COUNT=S$LCNT
      LINE.SPACE=S$LSPC
      JOB.NOS=''
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
*---- MAIN PROCESSING
100*
      SCREEN CLEAR
      S$DATA(1)<S$SCR>=TODAY
      SCREEN DISPLAY;;1
      LINE.CNT=0
      CURR.REF.NO=""
      OPT='A'
      GOTO 510
*
*---- OPTIONS
500*
      BEGIN CASE
         CASE ACTION = "M"
            S$DATA(10)<S$SCR>=""
            SCREEN FIELD;;10
            SCREEN INPUT;;10
         CASE 1
            S$DATA(23)<S$SCR>=""
            SCREEN FIELD;;23
            SCREEN INPUT;;23
      END CASE
      OPT=S$VALUE
510*
      BEGIN CASE
         CASE OPT="A" AND LINE.CNT< 999
            DONE=0
            FOR REF.NO=LINE.CNT+1 TO 999 UNTIL DONE
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE="END" THEN
                  DONE=1
                  GOSUB 700
               END ELSE
                  LINE.CNT=LINE.CNT+1
               END
            NEXT REF.NO
            REF.NO=LINE.CNT
            CURR.REF.NO=""
            GOSUB 50000
         CASE OPT="I" AND LINE.CNT > 0
            GOSUB 600
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 800
               LINE.CNT=LINE.CNT+1
               CURR.REF.NO=""
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE="END" THEN
                  GOSUB 700
                  LINE.CNT=LINE.CNT-1
               END
               CURR.REF.NO=""
               GOSUB 50000
            END
         CASE OPT="D" AND LINE.CNT > 0
            GOSUB 600
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 700
               LINE.CNT=LINE.CNT-1
               IF REF.NO > LINE.CNT THEN REF.NO=REF.NO-1
               CURR.REF.NO=""
               GOSUB 50000
            END
         CASE OPT="S" OR OPT="SF"
            REF.NO=CURR.REF.NO+LINE.COUNT
            IF REF.NO > LINE.CNT THEN REF.NO=1
            GOSUB 50000
         CASE OPT="ST"
            REF.NO=1
            GOSUB 50000
         CASE OPT = "SB"
            REF.NO=LINE.CNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 50000
         CASE OPT = "SR"
            REF.NO=CURR.REF.NO-LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 50000
         CASE OPT="F"
            PAGE.NO = 0
            REPORT.NAME = "JOB SCHEDULE REPORT"
            REPORT.NUMBER = "XXXX"
            REPORT.DATE = TODAY
            HD1 = "";HD2 = ""
            CALL GET.PROG.HEAD(CONO,CO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
            PRINTER ON
            FOR REF.NO=1 TO LINE.CNT
               JOB.NUM=JOB.NOS<1,REF.NO>
               MATREAD JBS.REC FROM JOB.SCHED, CONO : JOB.NUM ELSE MAT JBS.REC = ""
               CALL JOB.SCHED.RPT.SUB (CONO,JOB.NUM,PAGE.NO,TODAY,HD1,HD2)
            NEXT REF.NO
            SCREEN CLOSE
            GOTO 999999
         CASE OPT="END" OR OPT="E"
            SCREEN CLOSE
            GOTO 999999
      END CASE
      GOTO 500
*
*---- GET LINE REFERENCE NUMBER
600*
      SCREEN FIELD;;11
      S$MINV=CURR.REF.NO
      S$MAXV=S$MINV+LINE.COUNT-1
      IF S$MAXV > LINE.CNT THEN S$MAXV=LINE.CNT
      SCREEN INPUT;;11
      RETURN
*
*---- DELETE MULTI-LINE DATA
700*
      DEL JOB.NOS<1,REF.NO>
      DEL S$DATA(3)<S$SCR,REF.NO>
      DEL S$DATA(4)<S$SCR,REF.NO>
      DEL S$DATA(5)<S$SCR,REF.NO>
      DEL S$DATA(6)<S$SCR,REF.NO>
      DEL S$DATA(7)<S$SCR,REF.NO>
      DEL S$DATA(8)<S$SCR,REF.NO>
      DEL S$DATA(9)<S$SCR,REF.NO>
      RETURN
*
*---- INSERT MULTI-LINE DATA
800*
      INS "" BEFORE JOB.NOS<1,REF.NO>
      INS "" BEFORE S$DATA(3)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(4)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(5)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(6)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(7)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(8)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(9)<S$SCR,REF.NO>
      RETURN
*
*---- ENTER JOB NUMBER
10000*
      S$VAL=REF.NO
      SCREEN DISPLAY;;2
10100*
      S$DATA(3)<S$SCR,REF.NO>=JOB.NOS<1,REF.NO>
      S$VAL=REF.NO
      SCREEN FIELD;;3
      SCREEN INPUT;;3;RETURN
      JOB.NO=S$VALUE
*
*---- CHECK FOR DUPLICATE ENTRY
      PTR = 1
      LOCATE JOB.NO IN JOB.NOS<1>,PTR SETTING JFND ELSE GOTO 10200
      IF JFND # REF.NO THEN GOTO 10109
      PTR = JFND + 1
      LOCATE JOB.NO IN JOB.NOS<1>,PTR SETTING JFND ELSE GOTO 10200
10109*
      ERRMSG="Duplicate Entry!  Already exists on Line ":JFND
      GOSUB 90000
      GOTO 10100
10200*
      MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.NO ELSE
         ERRMSG="Invalid JOB.SCHED"
         S$DATA(3)<S$SCR,REF.NO>=''
         GOSUB 90000;GOTO 10100
      END
      MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC = ''
*
      S$VAL=REF.NO
      IF JBS.JOB.COMMENT = '' THEN
         S$DATA(4)<S$SCR,REF.NO>= JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
      END ELSE
         S$DATA(4)<S$SCR,REF.NO>=JBS.JOB.COMMENT
      END
      SCREEN DISPLAY;;4
      S$VAL=REF.NO
      IF JOB.MASTER # '' THEN
         S$DATA(5)<S$SCR,REF.NO>=JOB.MASTER
      END ELSE
         S$DATA(5)<S$SCR,REF.NO>=JOB.NO
      END
      SCREEN DISPLAY;;5
      S$VAL=REF.NO
*---- TASK # 19937 ----
      JDESC = JBS.CUST.NAME
      IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
         MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
            IF TRIM(JOB.DESC<1,1>) # "" THEN
               IF CO.PSS.JDESC.FLAG = "J" THEN
                  JDESC = JOB.DESC<1,1>
               END ELSE
                  JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
               END
            END
         END
      END
*     S$DATA(6)<S$SCR,REF.NO> = JBS.CUST.NAME
      S$DATA(6)<S$SCR,REF.NO> = JDESC
*----------------------
      SCREEN DISPLAY;;6
      S$VAL=REF.NO
      S$DATA(7)<S$SCR,REF.NO>=JBS.DIV
      SCREEN DISPLAY;;7
      S$VAL=REF.NO
      S$DATA(8)<S$SCR,REF.NO>=JBS.REQ.HRS
      SCREEN DISPLAY;;8
      S$VAL=REF.NO
      S$DATA(9)<S$SCR,REF.NO>=JBS.DUE.DATE
      SCREEN DISPLAY;;9
      JOB.NOS<1,REF.NO>=S$DATA(3)<S$SCR,REF.NO>
      RETURN
*
*---- SCROLL INTERNAL COMMENTS
50000*
      START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO=CURR.REF.NO THEN RETURN
      CURR.REF.NO=START.REF.NO
      S$VAL=START.REF.NO
      S$CNT=LINE.CNT
      SCREEN MULTI;;C;2;3;5;6;7;8;9;4
      RETURN
*
*---- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
999999*
      PRINTER OFF
*      PRINT @(-1):
   END
