*********************************************************************
*
* PROGRAM  - JOB.CRTL.DATE.EXC.RPT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 02/08/96
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* MODIFIED - 02/21/96, NA, TASK 19938, DISPLAY COST CENTER DESCRIPTION
*
* DESCRIPTION
*
* This program produces the Critical Date exception report.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PSS.CPYLIB>JOB.CRTL.DATE.EXC
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
      PROCREAD BUFFER ELSE
         ERRMSG = "MUST RUN FROM A PROC"
         GOSUB 90000
         GOTO 99999
      END
      CONO = BUFFER<1>
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE
         ERRMSG = "CANNOT OPEN JOB.CRTL.DATE.EXC FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"
         GOSUB 90000
         GOTO 99999
      END
OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
   ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
   GOSUB 90000
   GOTO 99999
END
OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
   ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
   GOSUB 90000
   GOTO 99999
END
*
*---- INITIALIZATION
*
      PROMPT ""
      MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
*
*---- DEFINE HEADINGS
*
      REPORT.NAME = "J O B   C R I T I C A L   D A T E S   R E P O R T"
      TODAY = DATE()
      CTIME = TIME()
      IF CTIME < 10 THEN TODAY = DATE()
      HD1A = "RUN D - T: ":OCONV(TODAY,"D2/"):" - ":OCONV(CTIME,"MTS")
      HD1B = SPACE((60-LEN(CO.NAME))/2):CO.NAME
      HD1C = "PAGE "
      HD1 = HD1A"L#45":HD1B"L#60":HD1C"R#20"
      HD2A = "REPORT # : XXXX"
      HD2B = SPACE((60-LEN(REPORT.NAME))/2):REPORT.NAME
      HD2 = HD2A"L#45":HD2B"L#60"
      SH2 = "JOB NUM           DESCRIPTION           REF"
      SH3 = "-------- ------------------------------ ---"
      SH2 = SH2:"     DESCRIPTION      DEPT  CCTR PROMISED"
      SH3 = SH3:" -------------------- ----- ---- --------"
      SH2 = SH2:" EXPECTED          EXCEPTION STATUS          "
      SH3 = SH3:" -------- -----------------------------------"
*
*---- INITIALIZE VARIABLES
*
      SP1 = SPACE(1)
      SP2 = SPACE(2)
      SP3 = SPACE(3)
      LM = ""
*
*---- MAIN PROCESSING
*
100 *
      GOSUB 70000
      IF PRINT.CNT > 0 THEN
         ERRMSG = "** COMPLETED **"
      END ELSE
         ERRMSG = "** NO ITEMS PRINTED **"
      END
*     GOSUB 90000
      GOTO 99999
*
*---- PRINT REPORT
*
70000 *
      LINE.COUNT = 99
      PAGE.NO = 0
      PREV.DIV = "!@#$%"
      PRINT.CNT = 0
      PRINTER ON
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE DO
         JOB.NO = ID[4,99]
         MATREAD JCDER.REC FROM JOB.CRTL.DATE.EXC, ID THEN
            GOSUB 74000
         END
      REPEAT
      IF PRINT.CNT > 0 THEN
         PRINT
         PRINT "END OF REPORT"
         PRINT CHAR(12):
      END ELSE
         GOSUB 79000
         PRINT
         PRINT "NO ITEMS SELECTED"
      END
      PRINTER OFF
      PRINTER CLOSE
      RETURN
*
*---- PRINT DETAIL LINE(S)
*
74000 *
      MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE
         MAT JBS.REC = ""
         JBS.CUST.NAME = "??????????"
      END
      MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
         MAT JOB.REC = ""
      END
      JDESC = JBS.CUST.NAME
      IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
         IF TRIM(JOB.DESC<1,1>) # "" THEN
            IF CO.PSS.JDESC.FLAG = "J" THEN
               JDESC = JOB.DESC<1,1>
            END ELSE
               JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
            END
         END
      END
      LCNT = DCOUNT(JCDER.DEPT,VM)
      BEGIN CASE
      CASE JOB.DIV # PREV.DIV
         GOSUB 79000
      CASE (LINE.COUNT+LCNT+1) > 55
         GOSUB 79000
      END CASE
      CCTR = JCDER.CCTR<1,1>
      MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
         MAT CCTR.REC = ""
         CCTR.DESC = "??????????"
      END
      PLINE = JOB.NO"L#8"
      PLINE = PLINE:SP1:JDESC"L#30"
      PLINE = PLINE:SP1:JCDER.REF<1,1>"R#3"
      PLINE = PLINE:SP1:JCDER.DESC<1,1>"L#20"
      PLINE = PLINE:SP1:JCDER.DEPT<1,1>"L#5"
      PLINE = PLINE:SP1:JCDER.CCTR<1,1>"R#4"
      PLINE = PLINE:SP1:OCONV(JCDER.PROMISE<1,1>,"D2/")"L#8"
      PLINE = PLINE:SP1:OCONV(JCDER.EXPECTED<1,1>,"D2/")"L#8"
      PLINE = PLINE:SP1:JCDER.STATUS<1,1>"L#35"
      PRINT
      PRINT LM:PLINE
      PLINE = SPACE(70):SP1:CCTR.DESC
      PRINT LM:PLINE
      LINE.COUNT = LINE.COUNT + 3
      PRINT.CNT = PRINT.CNT + 1
      FOR LPTR = 2 TO LCNT
         CCTR = JCDER.CCTR<1,LPTR>
         MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
            MAT CCTR.REC = ""
            CCTR.DESC = "??????????"
         END
         PLINE = """L#8"
         PLINE = PLINE:SP1:"""L#30"
         PLINE = PLINE:SP1:JCDER.REF<1,LPTR>"R#3"
         PLINE = PLINE:SP1:JCDER.DESC<1,LPTR>"L#20"
         PLINE = PLINE:SP1:JCDER.DEPT<1,LPTR>"L#5"
         PLINE = PLINE:SP1:JCDER.CCTR<1,LPTR>"R#4"
         PLINE = PLINE:SP1:OCONV(JCDER.PROMISE<1,LPTR>,"D2/")"L#8"
         PLINE = PLINE:SP1:OCONV(JCDER.EXPECTED<1,LPTR>,"D2/")"L#8"
         PLINE = PLINE:SP1:JCDER.STATUS<1,LPTR>"L#35"
         PRINT LM:PLINE
         PLINE = SPACE(70):SP1:CCTR.DESC
         PRINT LM:PLINE
         LINE.COUNT = LINE.COUNT + 2
      NEXT LPTR
      PREV.DIV = JOB.DIV
      RETURN
*
*---- PRINT HEADINGS
*
79000 *
      PRINT CHAR(12):
      PAGE.NO = PAGE.NO + 1
      PRINT HD1: PAGE.NO
      PRINT HD2
      PRINT "DIVISION : ":JOB.DIV
      PRINT
      PRINT LM:SH2
      PRINT LM:SH3
      LINE.COUNT = 6
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       CRT @(0,23):@(-4):BEL:ERRMSG:
*       INPUT REPLY,1:
*       CRT @(0,23):@(-4):
*       RETURN
*
*---- END OF JOB
*
99999 *
      PRINT @(-1):
   END
