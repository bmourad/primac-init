      SUBROUTINE JOB.SCHED.DET.CMP(CONO,JOB.NUM,TODAY,LOADING.FLG,REF.NO,ACTION)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - JOB.SCHED.DET.CMP
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 10/31/88
* MODIFIED - NA - UNSCHEDULE ALL COST CENTERS FOLLOWING A COST CENTER
*                 WHICH IS SPLIT.
* DESCRIPTION
* This program is called from JOB.SCHED.DET.SUB to split or complete
* an inprocess cost center line.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*--- INITIALIZATION
*
      ERRMSG = ""
      READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*
*---- MAIN PROCESSING
*
      DEPT.CNT = DCOUNT(JBS.DEPT,VM)
      CR.CNT = DCOUNT(JBS.CRTCL.REF,VM)
      BEGIN CASE
      CASE ACTION = "CO"
         ACTION = ""
         IF REF.NO = "ALL" THEN
            EPTR = DEPT.CNT
            SPTR = 1
         END ELSE
            SPTR = REF.NO
            EPTR = REF.NO
         END
         FOR TR = SPTR TO EPTR UNTIL ACTION # ""
            IF JBS.CCTR.STATUS<1,TR> # "C" THEN GOSUB 4000
         NEXT TR
         UPD.FLG = 1
         FOR II = 1 TO DEPT.CNT UNTIL UPD.FLG = 0
            IF JBS.DEPT.STATUS<1,II> # "C" THEN UPD.FLG = 0
         NEXT II
         IF UPD.FLG THEN
            JBS.STATUS = "C"
            FOR II = 1 TO DEPT.CNT
               IF JBS.CMP.DATE<1,II> > JBS.COMPL.DATE THEN JBS.COMPL.DATE = JBS.CMP.DATE<1,II>
            NEXT II
         END ELSE
            JBS.STATUS = "I"
         END
         CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NUM)
***      MATWRITEU JBS.REC ON JOB.SCHED, CONO:JOB.NUM
         TPFID = CONO:JOB.NUM
         MATBUILD TPREC FROM JBS.REC
         CALL TRANSACTION.WRITE("WRITEU",CONO,TP.DIV,"JOB.SCHED",TPFID,TPREC,JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      CASE ACTION = "SP"
         ACTION = ""
         NREF = REF.NO + 1
         GOSUB 1000
         TR = REF.NO
         GOSUB 2000
         GOSUB 4000
         CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NUM)
***      MATWRITEU JBS.REC ON JOB.SCHED, CONO:JOB.NUM
         TPFID = CONO:JOB.NUM
         MATBUILD TPREC FROM JBS.REC
         CALL TRANSACTION.WRITE("WRITEU",CONO,TP.DIV,"JOB.SCHED",TPFID,TPREC,JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      CASE 1
         ACTION = "E"
      END CASE
      MAT CCTR.SCHED.REC = ""
      GOTO 999999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*---- INSERT MULTI-LINE DATA (DEPT)
*
1000*
      FOR TR = NREF TO DEPT.CNT
         IF JBS.HOLD.DP.CC<1,TR> >= NREF THEN
            JBS.HOLD.DP.CC<1,TR> = JBS.HOLD.DP.CC<1,TR> + 1
            S$DATA(12)<S$SCR,TR> = JBS.HOLD.DP.CC<1,TR>
         END
      NEXT TR
      FOR TR = 1 TO CR.CNT
         IF JBS.CRTCL.REF<1,TR> >= NREF THEN
            JBS.CRTCL.REF<1,TR> = JBS.CRTCL.REF<1,TR> + 1
         END
      NEXT TR
      AC = DCOUNT(JBS.A1,",")
      FOR AP = 1 TO AC
         AA = FIELD(JBS.A1,",",AP)
         AA1 = FIELD(AA,"-",1)
         AA2 = FIELD(AA,"-",2)
         IF AA2 = "" THEN AA2 = AA1
         FOR AAP = AA1 TO AA2
            JBS.REC(AAP) = INSERT(JBS.REC(AAP),1,NREF,0,"")
         NEXT AAP
      NEXT AP
      S$DATA(3) = INSERT(S$DATA(3),S$SCR,NREF,0,"")
      S$DATA(4) = INSERT(S$DATA(4),S$SCR,NREF,0,"")
      S$DATA(5) = INSERT(S$DATA(5),S$SCR,NREF,0,"")
      S$DATA(6) = INSERT(S$DATA(6),S$SCR,NREF,0,"")
      S$DATA(7) = INSERT(S$DATA(7),S$SCR,NREF,0,"")
      S$DATA(8) = INSERT(S$DATA(8),S$SCR,NREF,0,"")
      S$DATA(9) = INSERT(S$DATA(9),S$SCR,NREF,0,"")
      S$DATA(10) = INSERT(S$DATA(10),S$SCR,NREF,0,"")
      S$DATA(11) = INSERT(S$DATA(11),S$SCR,NREF,0,"")
      S$DATA(12) = INSERT(S$DATA(12),S$SCR,NREF,0,"")
      S$DATA(13) = INSERT(S$DATA(13),S$SCR,NREF,0,"")
      S$DATA(27) = INSERT(S$DATA(27),S$SCR,NREF,0,"")
      S$DATA(28) = INSERT(S$DATA(28),S$SCR,NREF,0,"")
      S$DATA(30) = INSERT(S$DATA(30),S$SCR,NREF,0,"")
      S$DATA(31) = INSERT(S$DATA(31),S$SCR,NREF,0,"")
      RETURN
*
*--- SPLIT A LINE ITEM
*
2000*
      JBS.DEPT<1,NREF> = JBS.DEPT<1,TR>
      JBS.CCTR<1,NREF> = JBS.CCTR<1,TR>
      JBS.CONT.SCH<1,NREF> = JBS.CONT.SCH<1,TR>
      JBS.SAME.EQUIP<1,NREF> = JBS.SAME.EQUIP<1,TR>
      IF LOADING.FLG = "Y" THEN
         JBS.HOLD.CODE<1,NREF> = "L"
      END ELSE
         JBS.HOLD.CODE<1,NREF> = "SS"
      END
      IF JBS.SCH.IMP<1,TR> # "" THEN
         JBS.SCH.IMP<1,NREF> = JBS.SCH.IMP<1,TR> - JBS.ACT.IMP<1,TR>
         IF JBS.SCH.IMP<1,NREF> < 0 THEN JBS.SCH.IMP<1,NREF> = 0
         JBS.SCH.IMP<1,NREF> = INT(JBS.SCH.IMP<1,NREF>/100)*100
      END
      S$DATA(3)<S$SCR,NREF> = JBS.DEPT<1,NREF>
      S$DATA(4)<S$SCR,NREF> = JBS.CCTR<1,NREF>
      S$DATA(6)<S$SCR,NREF> = JBS.HOLD.CODE<1,NREF>
      S$DATA(30)<S$SCR,NREF> = JBS.CONT.SCH<1,NREF>
      S$DATA(31)<S$SCR,NREF> = JBS.SAME.EQUIP<1,NREF>
      IF JBS.SCH.IMP<1,NREF> # "" THEN
         S$DATA(27)<S$SCR,NREF> = INT(JBS.SCH.IMP<1,NREF>/100)
      END
      OPER.CNT = DCOUNT(JBS.OPER<1,TR>,SM)
      CCTR = JBS.CCTR<1,TR>
      FOR II = OPER.CNT TO 1 STEP - 1
         BEGIN CASE
         CASE JBS.OPER.STATUS<1,TR,II> = "C"
         CASE JBS.OPER.ACT.HRS<1,TR,II> >= JBS.OPER.SCH.HRS<1,TR,II>
         CASE JBS.SCH.DATE<1,TR> = "" OR JBS.EXP.DATE<1,TR> = "" OR JBS.USD.HRS<1,TR> + 0 = 0 OR JBS.TRAN<1,TR> = ""
            OPER.HRS = JBS.OPER.SCH.HRS<1,TR,II> - JBS.OPER.ACT.HRS<1,TR,II>
            JBS.OPER = INSERT(JBS.OPER,1,NREF,1,JBS.OPER<1,TR,II>)
            JBS.OPER.SCH.HRS = INSERT(JBS.OPER.SCH.HRS,1,NREF,1,OPER.HRS)
            JBS.OPER.SCH.HRS<1,TR,II> = JBS.OPER.SCH.HRS<1,TR,II> - OPER.HRS
            JBS.USD.HRS<1,TR> = JBS.USD.HRS<1,TR> - OPER.HRS
         CASE 1
            OPER.HRS = JBS.OPER.SCH.HRS<1,TR,II> - JBS.OPER.ACT.HRS<1,TR,II>
            JBS.OPER = INSERT(JBS.OPER,1,NREF,1,JBS.OPER<1,TR,II>)
            JBS.OPER.SCH.HRS = INSERT(JBS.OPER.SCH.HRS,1,NREF,1,"")
            ADATE = JBS.SCH.DATE<1,TR>
            BDATE = JBS.EXP.DATE<1,TR>
            IF BDATE < ADATE THEN BDATE = ADATE
            GOSUB 3000
         END CASE
      NEXT II
      IF JBS.USD.HRS<1,TR> <= 0 THEN
         JBS.USD.HRS<1,TR> = ""
         JBS.TRAN<1,TR> = ""
         JBS.SCH.DATE<1,TR> = ""
         JBS.EXP.DATE<1,TR> = ""
         JBS.SCH.SHIFT<1,TR> = ""
         JBS.EXP.SHIFT<1,TR> = ""
         JBS.REV.DATE<1,TR> = ""
      END
      JBS.SCH.HRS<1,NREF> = SUM(JBS.OPER.SCH.HRS<1,NREF>)
      S$DATA(5)<S$SCR,NREF> = JBS.SCH.HRS<1,NREF>
      JBS.SCH.HRS<1,TR> = SUM(JBS.OPER.SCH.HRS<1,TR>)
      S$DATA(5)<S$SCR,TR> = JBS.SCH.HRS<1,TR>
*
*---- UNSCHEDULE REMAINING COST CENTERS   (NA - 05/30/91)
*
      SPTR = NREF + 1
      EPTR = DCOUNT(JBS.DEPT,VM)
      SDATE = JBS.SCH.DATE<1,TR>
      CALL UNSCHED.JOB.SUB(CONO,"",JOB.NUM,SDATE,SPTR,EPTR,SDATE,0)
      FOR REF = SPTR TO EPTR
         IF JBS.CCTR.STATUS<1,REF>="" THEN S$DATA(13)<S$SCR,REF>=""
      NEXT REF
      RETURN
*
*--- UNSCHEDULE THE HOURS
*
3000*
      FOR XDATE = BDATE TO ADATE STEP - 1 UNTIL OPER.HRS = 0
         MATREADU CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
            MAT CCTR.SCHED.REC = ""
            RELEASE CCTR.SCHED, CONO:CCTR:"*":XDATE
            JBS.EXP.DATE<1,TR> = XDATE - 1
            JBS.EXP.SHIFT<1,TR> = 3
            IF JBS.EXP.DATE<1,TR> < JBS.SCH.DATE<1,TR> THEN
               JBS.EXP.DATE<1,TR> = JBS.SCH.DATE<1,TR>
            END
            GOTO 3099
         END
         FOR SFT = 3 TO 1 STEP - 1 UNTIL OPER.HRS = 0
            PTR = 1
            LOOP
               LOCATE JOB.NUM IN CCS.JOB<1>,PTR SETTING TFND ELSE TFND = 0
               BEGIN CASE
               CASE TFND = 0
               CASE CCS.TRAN<1,TFND> # JBS.TRAN<1,TR>
                  PTR = TFND + 1
               CASE CCS.JOB.SHIFT<1,TFND> # SFT
                  PTR = TFND + 1
               CASE 1
                  JOB.HRS = CCS.JOB.HRS<1,TFND>
                  IF JOB.HRS > OPER.HRS THEN JOB.HRS = OPER.HRS
                  MLT = CCS.JOB.EQUIP<1,TFND>
                  CCS.SCH.HRS = CCS.SCH.HRS - JOB.HRS
                  CCS.REM.HRS = CCS.REM.HRS + JOB.HRS
                  CCS.SCH.SM.HRS<1,SFT,MLT> = CCS.SCH.SM.HRS<1,SFT,MLT> - JOB.HRS
                  IF CCS.SCH.SM.HRS<1,SFT,MLT> = 0 THEN CCS.SCH.SM.HRS<1,SFT,MLT> = ""
                  CCS.REM.SM.HRS<1,SFT,MLT> = CCS.REM.SM.HRS<1,SFT,MLT> + JOB.HRS
                  IF CCS.REM.SM.HRS<1,SFT,MLT> = 0 THEN CCS.REM.SM.HRS<1,SFT,MLT> = ""
                  CCS.OPER.HRS<1,TFND> = CCS.OPER.HRS<1,TFND> - JOB.HRS
                  CCS.JOB.HRS<1,TFND> = CCS.JOB.HRS<1,TFND> - JOB.HRS
                  IF CCS.JOB.HRS<1,TFND> = 0 THEN
                     CCS.TRAN = DELETE(CCS.TRAN,1,TFND,0)
                     CCS.JOB = DELETE(CCS.JOB,1,TFND,0)
                     CCS.OPER = DELETE(CCS.OPER,1,TFND,0)
                     CCS.OPER.STATUS = DELETE(CCS.OPER.STATUS,1,TFND,0)
                     CCS.OPER.HRS = DELETE(CCS.OPER.HRS,1,TFND,0)
                     CCS.JOB.HRS = DELETE(CCS.JOB.HRS,1,TFND,0)
                     CCS.JOB.SHIFT = DELETE(CCS.JOB.SHIFT,1,TFND,0)
                     CCS.JOB.EQUIP = DELETE(CCS.JOB.EQUIP,1,TFND,0)
                     CCS.OPER.SHIFT = DELETE(CCS.OPER.SHIFT,1,TFND,0)
                     CCS.OPER.EQUIP = DELETE(CCS.OPER.EQUIP,1,TFND,0)
                     PTR = TFND
                  END ELSE
                     PTR = TFND + 1
                  END
                  JBS.USD.HRS<1,TR> = JBS.USD.HRS<1,TR> - JOB.HRS
                  JBS.OPER.SCH.HRS<1,NREF,1> = JBS.OPER.SCH.HRS<1,NREF,1> + JOB.HRS
                  JBS.OPER.SCH.HRS<1,TR,II> = JBS.OPER.SCH.HRS<1,TR,II> - JOB.HRS
                  OPER.HRS = OPER.HRS - JOB.HRS
               END CASE
            WHILE TFND AND OPER.HRS > 0 DO
            REPEAT
         NEXT SFT
         JBS.OPER.SCH.DATE<1,TR> = ""
         JBS.OPER.EXP.DATE<1,TR> = ""
         JBS.OPER.REV.DATE<1,TR> = ""
         IF OPER.HRS = 0 THEN
            PTR = 1
            LOOP
            WHILE PTR DO
               LOCATE JOB.NUM IN CCS.JOB<1>,PTR SETTING TFND ELSE
                  PTR = 0
                  JBS.EXP.DATE<1,TR> = XDATE - 1
                  JBS.EXP.SHIFT<1,TR> = 3
               END
               BEGIN CASE
               CASE PTR = 0
               CASE JBS.TRAN<1,TR> # CCS.TRAN<1,TFND>
                  PTR = TFND + 1
               CASE 1
                  JBS.EXP.DATE<1,TR> = XDATE
                  JBS.EXP.SHIFT<1,TR> = 3
                  PTR = 0
               END CASE
            REPEAT
         END ELSE
            JBS.EXP.DATE<1,TR> = XDATE - 1
            JBS.EXP.SHIFT<1,TR> = 3
         END
         IF JBS.EXP.DATE<1,TR> < JBS.SCH.DATE<1,TR> THEN
            JBS.EXP.DATE<1,TR> = JBS.SCH.DATE<1,TR>
         END
***      MATWRITE CCTR.SCHED.REC ON CCTR.SCHED, CONO:CCTR:"*":XDATE
         TPFID = CONO:CCTR:"*":XDATE
         MATBUILD TPREC FROM CCTR.SCHED.REC
         CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"CCTR.SCHED",TPFID,TPREC,CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
3099*
      NEXT XDATE
*
*--- FIND LAST SCHEDULE DATE AND SHIFT
*
      CK = 0
      BDATE = JBS.EXP.DATE<1,TR>
      ADATE = JBS.SCH.DATE<1,TR>
      FOR XDATE = BDATE TO ADATE STEP - 1 UNTIL CK
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
            MAT CCTR.SCHED.REC = ""
         END
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE JOB.NUM IN CCS.JOB<1>,PTR SETTING TFND ELSE
               TFND = 0
               PTR = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE CCS.TRAN<1,TFND> # JBS.TRAN<1,TR>
               PTR = TFND + 1
            CASE CK = 0
               CK = CCS.JOB.SHIFT<1,TFND>
               PTR = TFND + 1
            CASE CCS.JOB.SHIFT<1,TFND> > CK
               CK = CCS.JOB.SHIFT<1,TFND>
               PTR = TFND + 1
            CASE 1
               PTR = TFND + 1
            END CASE
         REPEAT
         IF CK THEN
            JBS.EXP.DATE<1,TR> = XDATE
            JBS.EXP.SHIFT<1,TR> = CK
         END
      NEXT XDATE
      IF CK = 0 THEN
         JBS.USD.HRS<1,TR> = ""
         JBS.TRAN<1,TR> = ""
         JBS.SCH.DATE<1,TR> = ""
         JBS.EXP.DATE<1,TR> = ""
         JBS.SCH.SHIFT<1,TR> = ""
         JBS.EXP.SHIFT<1,TR> = ""
         JBS.REV.DATE<1,TR> = ""
      END
      RETURN
*
*--- COMPLETE LINE ITEM
*
4000*
      OPER.CNT = DCOUNT(JBS.OPER<1,TR>,SM)
      UPD.FLG = 0
      FOR II = 1 TO OPER.CNT
         BEGIN CASE
         CASE JBS.OPER.STATUS<1,TR,II> = "C"
         CASE JBS.OPER.STATUS<1,TR,II> = "I"
            JBS.OPER.STATUS<1,TR,II> = "C"
            IF JBS.OPER.ACT.DATE<1,TR,II> = "" THEN JBS.OPER.ACT.DATE<1,TR,II> = TODAY
            UPD.FLG = 1
         CASE 1
            JBS.OPER.STATUS<1,TR,II> = "C"
            JBS.OPER.ACT.DATE<1,TR,II> = TODAY
            UPD.FLG = 1
         END CASE
      NEXT II
      JBS.DEPT.STATUS<1,TR> = "C"
      JBS.CCTR.STATUS<1,TR> = "C"
      IF UPD.FLG THEN
         IF JBS.ACT.DATE<1,TR> = "" THEN JBS.ACT.DATE<1,TR> = TODAY
         JBS.CMP.DATE<1,TR> = TODAY
      END
      S$DATA(13)<S$SCR,TR> = "CMP"
*
*--- UPDATE CCTR.SCHED
*
      CCTR = JBS.CCTR<1,TR>
      ADATE = JBS.SCH.DATE<1,TR>
      BDATE = JBS.EXP.DATE<1,TR>
      IF ADATE = "" THEN GOTO 4999
      IF BDATE = "" THEN BDATE = ADATE
      IF BDATE < ADATE THEN BDATE = ADATE
      FOR II = ADATE TO BDATE
         MATREADU CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":II ELSE
            MAT CCTR.SCHED.REC = ""
            RELEASE CCTR.SCHED, CONO:CCTR:"*":II
            GOTO 4099
         END
         PTR = 1
         LOOP
            LOCATE JOB.NUM IN CCS.JOB<1>,PTR SETTING JJ ELSE JJ = 0
            BEGIN CASE
            CASE JJ = 0
               PTR = 0
            CASE CCS.TRAN<1,JJ> # JBS.TRAN<1,TR>
               PTR = JJ + 1
            CASE 1
               CCS.OPER.STATUS<1,JJ> = JBS.CCTR.STATUS<1,TR>
               PTR = JJ + 1
               IF JBS.CCTR.STATUS<1,TR> = "C" THEN
                  SFT = CCS.JOB.SHIFT<1,JJ>
                  EQP = CCS.JOB.EQUIP<1,JJ>
                  HRS = CCS.JOB.HRS<1,JJ>
                  CCS.SCH.HRS = CCS.SCH.HRS - HRS
                  CCS.REM.HRS = CCS.REM.HRS + HRS
                  CCS.SCH.SM.HRS<1,SFT,EQP> = CCS.SCH.SM.HRS<1,SFT,EQP> - HRS
                  CCS.REM.SM.HRS<1,SFT,EQP> = CCS.REM.SM.HRS<1,SFT,EQP> + HRS
                  CCS.JOB.HRS<1,JJ> = 0
               END
            END CASE
         WHILE PTR DO
         REPEAT
***      MATWRITE CCTR.SCHED.REC ON CCTR.SCHED, CONO:CCTR:"*":II
         TPFID = CONO:CCTR:"*":II
         MATBUILD TPREC FROM CCTR.SCHED.REC
         CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"CCTR.SCHED",TPFID,TPREC,CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
4099*
      NEXT II
4999*
      RETURN
*
*--- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23) : CL : ERRMSG :
*       INPUT REPLY,1 :
*       PRINT @(0,23) : CL :
*       RETURN
999999*
      RETURN
   END
