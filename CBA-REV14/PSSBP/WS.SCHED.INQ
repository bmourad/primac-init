*********************************************************************
*
* PROGRAM - WS.SCHED.INQ
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 04/01/91
* MODIFIED - 11/03/95 TERRY NORTHCUTT TASK 19407 DIVISIONALIZATION
* MODIFIED - 02/16/96, NA, TASK 20125, OMIT NON-SCHEDULABLE COST CENTERS
* MODIFIED - 02/17/96, NA, TASK 20126, REQUEST WHETHER OR NOT UNSCHEDULED
*                                      JOB SHOULD BE PLACED ON SCHED LIST
* MODIFIED - 02/21/96, NA, TASK 20124, LOAD PEND FORWARD
*
* DESCRIPTION
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PSS.CPYLIB>COM.WIN
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>CCTR.AVAIL
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSSBP>WINCOM
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*---- DEFINE CONSTANTS
*
      MONTHS = ""
      MONTHS<1,1>  = "Jan"
      MONTHS<1,2>  = "Feb"
      MONTHS<1,3>  = "Mar"
      MONTHS<1,4>  = "Apr"
      MONTHS<1,5>  = "May"
      MONTHS<1,6>  = "Jun"
      MONTHS<1,7>  = "Jul"
      MONTHS<1,8>  = "Aug"
      MONTHS<1,9>  = "Sep"
      MONTHS<1,10> = "Oct"
      MONTHS<1,11> = "Nov"
      MONTHS<1,12> = "Dec"
*
      DIM MBAR(6)
      MAT MBAR = ""
      MBAR(1) = "Select"
      MBAR(2) = "View"
      MBAR(3) = "Edit"
      MBAR(4) = "Options"
      MBAR(5) = "What-if"
      MBAR(6) = "Help"
*
      DIM MENU(6,20)
      DIM MSEL(6,20)
      DIM MFLG(6,20)
      DIM MREQ(6,20)
      MAT MENU = ""
      MAT MSEL = ""
      MAT MFLG = ""
      MAT MREQ = ""
*
      MENU(1,1)="Division";           MSEL(1,1)="101"; MFLG(1,1)=""; MREQ(1,1)="X"
      MENU(1,2)="Department";         MSEL(1,2)="102"; MFLG(1,2)=""; MREQ(1,2)="X"
      MENU(1,3)="-";                  MSEL(1,3)="103"; MFLG(1,3)=""; MREQ(1,3)="X"
      MENU(1,4)="Exit";               MSEL(1,4)="104"; MFLG(1,4)=""; MREQ(1,4)="X"
*
      MENU(2,1)="Job Summary";        MSEL(2,1)="201"; MFLG(2,1)=""; MREQ(2,1)="CT"
      MENU(2,2)="Job Detail";         MSEL(2,2)="202"; MFLG(2,2)=""; MREQ(2,2)=""
      MENU(2,3)="Job Specs";          MSEL(2,3)="203"; MFLG(2,3)=""; MREQ(2,3)=""
      MENU(2,4)="Job Status";         MSEL(2,4)="204"; MFLG(2,4)=""; MREQ(2,4)=""
      MENU(2,5)="Job Projection";     MSEL(2,5)="205"; MFLG(2,5)=""; MREQ(2,5)=""
      MENU(2,6)="-";                  MSEL(2,6)="206"; MFLG(2,6)=""; MREQ(2,6)="X"
      MENU(2,7)="Jobs Waiting";       MSEL(2,7)="207"; MFLG(2,7)=""; MREQ(2,7)="X"
      MENU(2,8)="Jobs Scheduled";     MSEL(2,8)="208"; MFLG(2,8)=""; MREQ(2,8)="C"
      MENU(2,9)="-";                  MSEL(2,9)="209"; MFLG(2,9)=""; MREQ(2,9)="X"
      MENU(2,10)="Calendar";          MSEL(2,10)="210"; MFLG(2,10)=""; MREQ(2,10)="C"
      MENU(2,11)="Availability";      MSEL(2,11)="211"; MFLG(2,11)=""; MREQ(2,11)="CT"
      MENU(2,12)="Capacity Chart";    MSEL(2,12)="212"; MFLG(2,12)=""; MREQ(2,12)="D"
*
      MENU(3,1)="Maintenance";        MSEL(3,1)="301"; MFLG(3,1)=""; MREQ(3,1)="CTW"
      MENU(3,2)="";                   MSEL(3,2)="302"; MFLG(3,2)=""; MREQ(3,2)="X"
      MENU(3,3)="";                   MSEL(3,3)="303"; MFLG(3,3)=""; MREQ(3,3)="X"
      MENU(3,4)="";                   MSEL(3,4)="304"; MFLG(3,4)=""; MREQ(3,4)="X"
      MENU(3,5)="";                   MSEL(3,5)="305"; MFLG(3,5)=""; MREQ(3,5)="X"
*
      MENU(4,1)="Schedule Forward";   MSEL(4,1)="401"; MFLG(4,1)=""; MREQ(4,1)="JW"
      MENU(4,2)="Schedule Backward";  MSEL(4,2)="402"; MFLG(4,2)=""; MREQ(4,2)="JW"
      MENU(4,3)="-";                  MSEL(4,3)="403"; MFLG(4,3)=""; MREQ(4,3)="X"
      MENU(4,4)="Un-schedule Job";    MSEL(4,4)="404"; MFLG(4,4)=""; MREQ(4,4)="JW"
*
      MENU(5,1)="Start Transaction";  MSEL(5,1)="501"; MFLG(5,1)=""; MREQ(5,1)="W"
      MENU(5,2)="View Transactions";  MSEL(5,2)="502"; MFLG(5,2)=""; MREQ(5,2)="W"
      MENU(5,3)="Commit Updates";     MSEL(5,3)="503"; MFLG(5,3)=""; MREQ(5,3)="W"
      MENU(5,4)="Remove Updates";     MSEL(5,4)="504"; MFLG(5,4)=""; MREQ(5,4)="W"
      MENU(5,5)="End Transaction";    MSEL(5,5)="505"; MFLG(5,5)=""; MREQ(5,5)="W"
*
      MENU(6,1)="Help";               MSEL(6,1)="601"; MFLG(6,1)=""; MREQ(6,1)="X"
      MENU(6,2)="-";                  MSEL(6,2)="602"; MFLG(6,2)=""; MREQ(6,2)="X"
      MENU(6,3)="Sample Dialog";      MSEL(6,3)="603"; MFLG(6,3)=""; MREQ(6,3)="X"
      MENU(6,4)="-";                  MSEL(6,4)="604"; MFLG(6,4)=""; MREQ(6,4)="X"
      MENU(6,5)="Sample Bar Chart";   MSEL(6,5)="605"; MFLG(6,5)=""; MREQ(6,5)="X"
      MENU(6,6)="Sample Line Chart";  MSEL(6,6)="606"; MFLG(6,6)=""; MREQ(6,6)="X"
      MENU(6,7)="Stacked Bar Chart";  MSEL(6,7)="607"; MFLG(6,7)=""; MREQ(6,7)="X"
      MENU(6,8)="-";                  MSEL(6,8)="608"; MFLG(6,8)=""; MREQ(6,8)="X"
      MENU(6,9)="Color Chart";        MSEL(6,9)="609"; MFLG(6,9)=""; MREQ(6,9)="X"
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSSBP" TO PSSBP ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSSBP FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.CONTROL FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.HIERARCHY FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","DIVISION" TO DIVISION ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DIVISION FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","OPERATION" TO OPERATION ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN OPERATION FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.AVAIL FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN HOLIDAY.SCHED FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.SCHED FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.SCHED FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PEND.CCTR.SCHED FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PEND.JOB.SCHED FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.CRTL.DATE.EXC FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","JOB" TO JOB ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CUSTOMER FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.SCREENS FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.JOURNAL FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.LOCK FILE" ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
*
*---- INITIALIZATION
*
      TREC = "*********************************************"
      GOSUB 95000
*
      PROMPT ""
      XADJ = "-"
      YADJ = "-"
      JXREF = ""
      STATUS = ""
      CCNT = 0
*     SCREEN INIT;#
      CONO = "001"
      CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
      IF CONO="END" THEN GOTO 99999
      TYP = 0
      CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
      READ DPARS FROM CONTROL, "WIN.DEMO" ELSE DPARS = ""
      IF DPARS<1> = "" THEN DPARS<1> = ""
**    IF DPARS<2> = "" THEN DPARS<2> = "001"
**    IF DPARS<3> = "" THEN DPARS<3> = "01"
      IF DPARS<4> = "" THEN DPARS<4> = "NONE"
      IF DPARS<5> = "" THEN DPARS<5> = "ALL"
**    IF DPARS<6> = "" THEN DPARS<6> = OCONV(DATE(),"D")
      IF DPARS<7> = "" THEN DPARS<7> = 28
      MODE = DPARS<1>
**    CONO = DPARS<2>
      DIV.ID = DPARS<3>
      VDEPT  = DPARS<4>
      VCCTR  = DPARS<5>
      IF DPARS<6> = "" THEN
         SDATE = ""
         EDATE = ""
      END ELSE
         SDATE = ICONV(DPARS<6>,"D")
         EDATE = SDATE+DPARS<7>-1
      END
      MAT DEPT.REC = ""
      DEPTCOUNT = 0
      DIVIDS = ""
      SELECT DIVISION
      EOF = 0
      LOOP
         READNEXT ID ELSE EOF = 1
      UNTIL EOF DO
         IF ID[1,3] = CONO THEN
            DIV = ID[4,2]
            LOCATE DIV IN DIVIDS<1>,1 BY "AL" SETTING P ELSE NULL
            DIVIDS = INSERT(DIVIDS,1,P,0,DIV)
         END
      REPEAT
*
*---- INITIALIZE WINDOW
*
      GOSUB 1000
      IF DIV.ID = "" THEN
         PREV.DIV.ID = ""
         GOSUB 80000
         IF DIV.ID = "" THEN GOTO 99999
      END
      IF SDATE = "" THEN
         TYP = 6
         X = "C"
         Y = "C"
         MAXL = 8
         PMSG = "Starting Date:"
         CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
         IF VALUE = "END" THEN GOTO 99999
         SDATE = VALUE
         EDATE = SDATE+DPARS<7>-1
      END
      GOSUB 89900
      GOSUB 2000
      VDEPT = "ALL"
      GOSUB 700
*
*---- MAIN PROCESSING
*
      DONE = 0
      LOOP
         CALL GET.INPUT(TYPE, WND, DATA, 0, MAT WCOM)
*
         TREC = "TYPE=[":TYPE:"] WND=[":WND:"] DATA=[":DATA:"]"
         GOSUB 95000
*
         LOCATE WND IN WIN.ID,1 SETTING WPTR ELSE NULL
         BEGIN CASE
         CASE TYPE = "X" AND WND = "MAIN"
            DONE = 1
         CASE TYPE = "X"
            IF WIN.ID<WPTR> # "" THEN
               AC = DCOUNT(WIN.A1A,",")
               FOR AP = 1 TO AC
                  AA = FIELD(WIN.A1A,",",AP)
                  AA1 = FIELD(AA,"-",1)
                  AA2 = FIELD(AA,"-",2)
                  IF AA2="" THEN AA2=AA1
                  FOR AAP = AA1 TO AA2
                     WINDATA(AAP) = DELETE(WINDATA(AAP),WPTR,0,0)
                  NEXT AAP
               NEXT AP
            END
            LOCATE WND IN WIN.SEL.ID,1 SETTING SPTR THEN GOSUB 600
         CASE TYPE = "M"
            BEGIN CASE
            CASE DATA = "101"
               GOSUB 10100
            CASE DATA = "102"
               GOSUB 10200
            CASE DATA = "104"
               DONE = 1
            CASE DATA = "201"
               GOSUB 20100
            CASE DATA = "202"
               GOSUB 20200
            CASE DATA = "203"
               GOSUB 20300
            CASE DATA = "204"
               GOSUB 20400
            CASE DATA = "205"
               GOSUB 20500
            CASE DATA = "207"
               GOSUB 20700
            CASE DATA = "208"
               GOSUB 20800
            CASE DATA = "210"
               GOSUB 21000
            CASE DATA = "211"
               GOSUB 21100
            CASE DATA = "212"
               GOSUB 21200
            CASE DATA = "301"
               GOSUB 30100
            CASE DATA = "401"
               JDATE = WIN.CURR.DATE
               SCHED.TYPE = "F"
               GOSUB 40100
            CASE DATA = "402"
               SCHED.TYPE = "B"
               GOSUB 40200
            CASE DATA = "404"
               GOSUB 40400
            CASE DATA = "501"
               GOSUB 50100
            CASE DATA = "502"
               GOSUB 50200
            CASE DATA = "503"
               GOSUB 50300
            CASE DATA = "504"
               GOSUB 50400
            CASE DATA = "505"
               GOSUB 50500
            CASE DATA = "601"
               GOSUB 60100
            CASE DATA = "603"
               GOSUB 60300
            CASE DATA = "605"
               GOSUB 60500
            CASE DATA = "606"
               GOSUB 60600
            CASE DATA = "607"
               GOSUB 60700
            CASE DATA = "609"
               GOSUB 60900
            CASE 1
               WCOM.STATUS = "Function not implemented"
               GOSUB 90000
            END CASE
            GOSUB 700
         CASE TYPE = "S"
            LOCATE WND IN WIN.SEL.ID,1 SETTING SPTR THEN GOSUB 600
            SPTR = DCOUNT(WIN.SEL.ID,AM)+1
            BEGIN CASE
            CASE WND = "MAIN"
               SELROW = INT(DATA/1000)
               SELCOL = MOD(DATA,1000)
               IF SELROW = 0 THEN
                  WIN.DEPT<1> = ""
                  WIN.DSEL<1> = ""
                  WIN.CSEL<1> = ""
               END ELSE
                  IF WIN.CCTR<1,SELROW>[1,1] = "D" THEN
                     WIN.DEPT<1> = WIN.CCTR<1,SELROW>[2,99]
                     WIN.CSEL<1> = ""
                  END ELSE
                     WIN.DEPT<1> = ""
                     FOR N = SELROW TO 1 STEP -1 WHILE WIN.DEPT<1> = ""
                        IF WIN.CCTR<1,N>[1,1] = "D" THEN
                           WIN.DEPT<1> = WIN.CCTR<1,N>[2,99]
                        END
                     NEXT N
                     WIN.CSEL<1> = WIN.CCTR<1,SELROW>
                  END
               END
               IF SELCOL = 0 THEN
                  WIN.DSEL<1> = ""
               END ELSE
                  WIN.DSEL<1> = SDATE+SELCOL-1
               END
            CASE WND = "CAL"
               WIN.DSEL<WPTR> = DATA
            CASE WND = "C1"
               WIN.DSEL<WPTR> = DATA
            CASE WND = "C2"
               WIN.DSEL<WPTR> = DATA
            CASE WND = "W1"
               SELROW = INT(DATA/1000)
               SELCOL = MOD(DATA,1000)
               WIN.JSEL<WPTR> = WIN.JOB<WPTR,SELROW>
               IF SELCOL = 0 THEN
                  WIN.DSEL<WPTR> = ""
               END ELSE
                  WIN.DSEL<WPTR> = SDATE+MOD(DATA,1000)-1
               END
            CASE WND = "BOOK"
               SELROW = INT(DATA/1000)
               WIN.JSEL<WPTR> = WIN.JOB<WPTR,SELROW>
            CASE WND = "W3"
               SELROW = INT(DATA/1000)
               WIN.JSEL<WPTR> = JXREF<SELROW>
            END CASE
            WIN.SEL.ID<SPTR> = WND
            WIN.SEL.DEPT<SPTR> = WIN.DEPT<WPTR>
            WIN.SEL.CCTR<SPTR> = WIN.CSEL<WPTR>
            WIN.SEL.DATE<SPTR> = WIN.DSEL<WPTR>
            WIN.SEL.JOB<SPTR>  = WIN.JSEL<WPTR>
            GOSUB 700
            TREC = "ID=[":WIN.ID<1>:"] DSEL=[":WIN.DEPT:"] CSEL=[":WIN.CSEL:"]"
            GOSUB 95000
         CASE TYPE = "SD"
            BEGIN CASE
            CASE WND = "MAIN"
               BEGIN CASE
               CASE WIN.CURR.DATE # ""
                  GOSUB 20100
               CASE WIN.CURR.CCTR # ""
                  GOSUB 21000
               CASE WIN.CURR.DEPT # ""
                  GOSUB 21200
               END CASE
            CASE WND = "CAL"
               GOSUB 20100
            CASE WND = "C1"
**             GOSUB 30100
               GOSUB 21120
            CASE WND = "C2"
               GOSUB 30100
            CASE WND = "W1"
               GOSUB 20200
            CASE WND = "W2"
               GOSUB 20300
            CASE WND = "W3"
               GOSUB 20200
            CASE WND = "W9"
               GOSUB 20200
            CASE WND = "W10"
               GOSUB 20200
            END CASE
         CASE TYPE = "U"
            LOCATE WND IN WIN.SEL.ID,1 SETTING SPTR THEN GOSUB 600
            BEGIN CASE
            CASE WND = "MAIN"
               SELROW = INT(DATA/1000)
               SELCOL = MOD(DATA,1000)
               WIN.DEPT<1> = ""
               WIN.CSEL<1> = ""
               WIN.DSEL<1> = ""
            CASE WND = "C1"
               WIN.DSEL<WPTR> = ""
            CASE WND = "C2"
**             WIN.DSEL<WPTR> = ""
            CASE WND = "W1"
               SELROW = INT(DATA/1000)
               SELCOL = MOD(DATA,1000)
               WIN.JSEL<WPTR> = ""
               WIN.DSEL<WPTR> = ""
            CASE WND = "BOOK"
               SELROW = INT(DATA/1000)
               WIN.JSEL<WPTR> = ""
            END CASE
            GOSUB 700
         CASE TYPE = "LBD"
            WIN.CURR.DRAG = WND
         CASE TYPE = "LBU"
            BEGIN CASE
            CASE WND = WIN.CURR.DRAG
            CASE WND = "MAIN"
               IF PROC.TYPE = "I" THEN
                  WCOM.STATUS = "Division locked. Try again later! "
                  GOSUB 90000
               END ELSE
                  HPOS = WIN.HPOS<WPTR>
                  COL = FIELD(DATA,",",1)
                  JSDATE = SDATE
                  SCOL = COL2
                  IF COL >= SCOL THEN
                     JDATE = INT((HPOS+COL-SCOL)/6) + JSDATE
                     JSHFT = INT(MOD((HPOS+COL-SCOL),6)/2)+1
*                    JDATE<1,2> = JSHFT
                     SCHED.TYPE = "F"
                     GOSUB 40100
                  END
               END
            CASE WND = "W1"
               IF PROC.TYPE = "I" THEN
                  WCOM.STATUS = "Division locked. Try again later! "
                  GOSUB 90000
               END ELSE
                  HPOS = WIN.HPOS<WPTR>
                  COL = FIELD(DATA,",",1)
                  JSDATE = WIN.TEMP<WPTR>
                  SCOL = 37
                  IF COL >= SCOL THEN
                     JDATE = INT((HPOS+COL-SCOL)/24) + JSDATE
                     JSHFT = INT(MOD((HPOS+COL-SCOL),24)/8)+1
*                    JDATE<1,2> = JSHFT
                     SCHED.TYPE = "F"
                     GOSUB 40100
                  END
               END
            CASE WND = "BOOK"
               IF PROC.TYPE = "I" THEN
                  WCOM.STATUS = "Division locked. Try again later! "
                  GOSUB 90000
               END ELSE
                  GOSUB 40400
               END
            END CASE
         CASE TYPE = "VS" AND NUM(DATA)
            WIN.VPOS<WPTR> = DATA
         CASE TYPE = "VS"
            BEGIN CASE
            CASE DATA = "T"
            CASE DATA = "B"
            CASE DATA = "LD"
            CASE DATA = "LU"
            CASE DATA = "PD"
            CASE DATA = "PU"
            END CASE
            WCOM.WND = WND
            WCOM.TYPE = DATA
            CALL VSCROLL.DATA(MAT WCOM)
            WCOM.WND = "MAIN"
         CASE TYPE = "HS" AND NUM(DATA)
            WIN.HPOS<WPTR> = DATA
         CASE TYPE = "HS"
            BEGIN CASE
            CASE DATA = "T"
            CASE DATA = "B"
            CASE DATA = "LD"
            CASE DATA = "LU"
            CASE DATA = "PD"
            CASE DATA = "PU"
            END CASE
            WCOM.WND = WND
            WCOM.TYPE = DATA
            CALL HSCROLL.DATA(MAT WCOM)
            WCOM.WND = "MAIN"
         CASE 1
            WCOM.CAPTION = "WS.SCHED.INQ"
            WCOM.TYPE = "Q"
            WCOM.STATUS = "Received message: ":TYPE:"-":WND:"-":DATA
            GOSUB 90000
         END CASE
      UNTIL DONE DO
      REPEAT
      GOTO 99999
*
*---- DELETE WINDOW RELATED SELECTION DATA
*
600*
      AC = DCOUNT(WIN.A2A,",")
      FOR AP = 1 TO AC
         AA = FIELD(WIN.A2A,",",AP)
         AA1 = FIELD(AA,"-",1)
         AA2 = FIELD(AA,"-",2)
         IF AA2="" THEN AA2=AA1
         FOR AAP = AA1 TO AA2
            WINDATA(AAP) = DELETE(WINDATA(AAP),SPTR,0,0)
         NEXT AAP
      NEXT AP
      GOSUB 700
      RETURN
*
*---- DERIVE CURRENT SELECTION CRITERIA
*
700*
      WIN.CURR.DEPT = ""
      WIN.CURR.CCTR = ""
      WIN.CURR.DATE = ""
      WIN.CURR.JOB  = ""
      SCNT = DCOUNT(WIN.SEL.ID,AM)
      FOR S = SCNT TO 1 STEP -1 WHILE WIN.CURR.DEPT = ""
         WIN.CURR.DEPT = WIN.SEL.DEPT<S>
      NEXT S
      FOR S = SCNT TO 1 STEP -1 WHILE WIN.CURR.CCTR = ""
         WIN.CURR.CCTR = WIN.SEL.CCTR<S>
      NEXT S
      FOR S = SCNT TO 1 STEP -1 WHILE WIN.CURR.DATE = ""
         WIN.CURR.DATE = WIN.SEL.DATE<S>
      NEXT S
      FOR S = SCNT TO 1 STEP -1 WHILE WIN.CURR.JOB = ""
         WIN.CURR.JOB = WIN.SEL.JOB<S>
      NEXT S
      GOSUB 900
      RETURN
*
*---- ENABLE/DISABLE MENU OPTIONS
*
900*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            DISABLE.OPTION = 0
            CREQ = MREQ(MPTR,OPTR)
            BEGIN CASE
            CASE INDEX(CREQ,"D",1) > 0 AND WIN.CURR.DEPT = ""
               DISABLE.OPTION = 1
            CASE INDEX(CREQ,"C",1) > 0 AND WIN.CURR.CCTR = ""
               DISABLE.OPTION = 1
            CASE INDEX(CREQ,"T",1) > 0 AND WIN.CURR.DATE = ""
               DISABLE.OPTION = 1
            CASE INDEX(CREQ,"J",1) > 0 AND WIN.CURR.JOB = ""
               DISABLE.OPTION = 1
            CASE INDEX(CREQ,"W",1) > 0 AND TP.DIV = "X"
               DISABLE.OPTION = 1
            END CASE
            IF DISABLE.OPTION THEN
               IF MFLG(MPTR,OPTR) = "E" THEN
                  WCOM.IDENT = MPTR
                  WCOM.SELECT = MSEL(MPTR,OPTR)
                  CALL MENU.DISABLE(MAT WCOM)
                  MFLG(MPTR,OPTR) = "D"
               END
            END ELSE
               IF MFLG(MPTR,OPTR) = "D" THEN
                  WCOM.IDENT = MPTR
                  WCOM.SELECT = MSEL(MPTR,OPTR)
                  CALL MENU.ENABLE(MAT WCOM)
                  MFLG(MPTR,OPTR) = "E"
               END
            END
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- INITIALIZE MENU
*
1000*
      MAT WINDATA = ""
      MAT WIN.AHOURS = ""
      MAT WIN.SHOURS = ""
      MAT WIN.PHOURS = ""
      MAT WIN.JSHOURS = ""
      MAT WIN.JAHOURS = ""
      WIN.ID = "MAIN"
*
      CALL WINCOM.INIT(MAT WCOM, MAT WCHT)
      WCOM.MODE = MODE
      WCOM.CAPTION="PRIMAC Production Scheduling"
      CALL WINDOW.INIT(MAT WCOM)
      WCOM.WND = "MAIN"
      WCOM.MENU.BAR = MBAR(1):VM:MBAR(2):VM:MBAR(3):VM:MBAR(4):VM:MBAR(5):VM:MBAR(6)
      CALL MENU.INIT(MAT WCOM)
*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            WCOM.IDENT = MPTR
            WCOM.CAPTION = MENU(MPTR,OPTR)
            WCOM.SELECT = MSEL(MPTR,OPTR)
            CALL MENU.DEFINE(MAT WCOM)
            IF MENU(MPTR,OPTR) # "-" THEN MFLG(MPTR,OPTR) = "E"
         NEXT OPTR
      NEXT MPTR
      GOSUB 1200                      ;* ENABLE ALL MENU OPTIONS
      GOSUB 700
      RETURN
*
*---- ENABLE ALL MENU OPTIONS
*
1200*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         WCOM.IDENT = MPTR
         WCOM.SELECT = "ALL"
         CALL MENU.ENABLE(MAT WCOM)
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            IF MFLG(MPTR,OPTR) = "D" THEN MFLG(MPTR,OPTR) = "E"
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- DISABLE ALL MENU OPTIONS
*
1400*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         WCOM.IDENT = MPTR
         WCOM.SELECT = "ALL"
         CALL MENU.DISABLE(MAT WCOM)
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            IF MFLG(MPTR,OPTR) = "E" THEN MFLG(MPTR,OPTR) = "D"
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- ENABLE MENU OPTION
*
1600*
      MDONE = 0
      FOR MPTR = 1 TO 6 UNTIL MDONE OR MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MDONE OR MENU(MPTR,OPTR) = ""
            IF MSEL(MPTR,OPTR) = MOPT THEN
               IF MFLG(MPTR,OPTR) = "D" THEN
                  WCOM.IDENT = MPTR
                  WCOM.SELECT = MOPT
                  CALL MENU.ENABLE(MAT WCOM)
                  MFLG(MPTR,OPTR) = "E"
               END
               MDONE = 1
            END
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- DISABLE MENU OPTION
*
1800*
      MDONE = 0
      FOR MPTR = 1 TO 6 UNTIL MDONE OR MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MDONE OR MENU(MPTR,OPTR) = ""
            IF MSEL(MPTR,OPTR) = MOPT THEN
               IF MFLG(MPTR,OPTR) = "E" THEN
                  WCOM.IDENT = MPTR
                  WCOM.SELECT = MOPT
                  CALL MENU.DISABLE(MAT WCOM)
                  MFLG(MPTR,OPTR) = "D"
               END
               MDONE = 1
            END
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- LOAD ALL DEPARTMENTS
*
2000*
      CCNT = 0
      MATREAD DIV.REC FROM DIVISION, CONO:DIV.ID ELSE MAT DIV.REC=""
      DCNT = DCOUNT(DIV.DEPT,VM)
      FOR DPTR = 1 TO DCNT
         DEPT.ID = DIV.DEPT<1,DPTR>
         IF VDEPT = "ALL" OR INDEX(VDEPT,DEPT.ID,1) > 0 THEN
            GOSUB 2500
         END
      NEXT DPTR
      UPD.MODE = 0
      GOSUB 3000
      RETURN
*
*---- EXTRACT DATA
*
2500*
      CCNT = DCOUNT(WIN.CCTR<1>,VM)
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT.ID ELSE GOTO 2590
      MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL,CONO:DEPT.ID ELSE GOTO 2590
      DFLG = 1
      DCCNT = DCOUNT(DEPT.CCTRS,VM)
      FOR DCPTR = 1 TO DCCNT
         CCTR = DEPT.CCTRS<1,DCPTR>
*MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL,CONO:DEPT.ID:"*":CCTR ELSE GOTO 2580
         IF VCCTR # "ALL" AND INDEX(VCCTR,CCTR,1) = 0 THEN GOTO 2580
         MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE GOTO 2580
         IF CCTR.SCHED.FLAG = "N" THEN GOTO 2580
         IF DFLG THEN
            DFLG = 0
            CCNT = CCNT+1
            WIN.CCTR<1,CCNT> = "D":DEPT.ID
            WIN.CDESC<1,CCNT> = DEPT.DESC
            DEPTCOUNT = DEPTCOUNT + 1
         END
         CCNT = CCNT+1
         WIN.CCTR<1,CCNT> = CCTR
         WIN.CDESC<1,CCNT> = CCTR.DESC
2580  NEXT DCPTR
2590  RETURN
*
*---- DISPLAY DATA
*
3000*
      WCOM.WND = "MAIN"
      COL1 = 0; COL2 = 38
      IF UPD.MODE THEN GOTO 3020
      MAT WIN.AHOURS = ""
      MAT WIN.SHOURS = ""
      MAT WIN.PHOURS = ""
*
      HEAD.CNT = 1
      COL1 = 0; COL2 = 38
      WCOM.COL = COL2
      CALL SET.HSCROLL.AREA(MAT WCOM)
      WCOM.ROW = 1
      CALL SET.VSCROLL.AREA(MAT WCOM)
      WCOM.WIDTH = 6
      CALL SET.HSCROLL.COUNT(MAT WCOM)
      WCOM.DATA = "     Department / Cost Center"
      WCOM.COL = COL1
      WCOM.ROW = 0
      WCOM.WIDTH = 37:XADJ
      WCOM.HEIGHT = 1:YADJ
      WCOM.FCOLOR = "BLACK"
      WCOM.BCOLOR = "WHITE"
      WCOM.RCOLOR = "BLACK"
      CALL LOAD.DATA(MAT WCOM)
      FOR CDATE = SDATE TO EDATE
         DT = CDATE-SDATE+1
         DDATA = OCONV(CDATE,"D2-")[1,5]
         WCOM.DATA = OCONV(CDATE,"D2/")[1,5]
         WCOM.TYPE = "H"
         WCOM.COL = COL2 + (CDATE-SDATE)*6
         WCOM.ROW = 0
         WCOM.WIDTH = 6:XADJ
         WCOM.HEIGHT = 1:YADJ
         WCOM.ALIGN = "C"
         WCOM.FCOLOR = "BLACK"
         WCOM.BCOLOR = "WHITE"
         WCOM.RCOLOR = "BLACK"
*        WCOM.SELECT = DT
         CALL LOAD.DATA(MAT WCOM)
      NEXT CDATE
3020*
      FOR CPTR = 1 TO CCNT
         CCTR = WIN.CCTR<1,CPTR>
         IF CCTR[1,1] = "D" THEN
            IF UPD.MODE THEN GOTO 3030
            WCOM.DATA = " ":CCTR[2,99]"R#5":" ":WIN.CDESC<1,CPTR>
            WCOM.TYPE = "V"
            WCOM.COL = COL1
            WCOM.ROW = CPTR
            WCOM.WIDTH = 37:XADJ
            WCOM.HEIGHT = 1:YADJ
            WCOM.FCOLOR = "BLACK"
            WCOM.BCOLOR = "CYAN"
            WCOM.RCOLOR = "BLACK"
            WCOM.SELECT = CPTR*1000
            CALL LOAD.DATA(MAT WCOM)
3030*
         END ELSE
            IF UPD.MODE THEN GOTO 3040
            WCOM.DATA = " ":CCTR"R#5":" ":WIN.CDESC<1,CPTR>
            WCOM.TYPE = "V"
            WCOM.COL = COL1
            WCOM.ROW = CPTR
            WCOM.WIDTH = 37:XADJ
            WCOM.HEIGHT = 1:YADJ
            WCOM.FCOLOR = "BLACK"
            WCOM.BCOLOR = "WHITE"
            WCOM.RCOLOR = "BLACK"
            WCOM.SELECT = CPTR*1000
            CALL LOAD.DATA(MAT WCOM)
3040*
            FOR CDATE = SDATE TO EDATE
               GOSUB 10000
               DT = CDATE-SDATE+1
               IF UPD.MODE THEN
                  NO.CHANGE = 1
                  FOR SFT = 1 TO 3 WHILE NO.CHANGE
                     IF AHRS<SFT> # WIN.AHOURS(DT)<1,CPTR,SFT> THEN NO.CHANGE = 0
                     IF SHRS<SFT> # WIN.SHOURS(DT)<1,CPTR,SFT> THEN NO.CHANGE = 0
                     IF PHRS<SFT> # WIN.PHOURS(DT)<1,CPTR,SFT> THEN NO.CHANGE = 0
                  NEXT SFT
                  IF NO.CHANGE THEN GOTO 3090
                  WCOM.COL = COL2+(CDATE-SDATE)*6
                  WCOM.ROW = CPTR
                  WCOM.WIDTH = 6:XADJ
                  WCOM.HEIGHT = 1:YADJ
                  CALL PSS.CLEAR.DATA(MAT WCOM)
               END
               WIN.AHOURS(DT)<1,CPTR,1> = AHRS<1>
               WIN.AHOURS(DT)<1,CPTR,2> = AHRS<2>
               WIN.AHOURS(DT)<1,CPTR,3> = AHRS<3>
               WIN.SHOURS(DT)<1,CPTR,1> = SHRS<1>
               WIN.SHOURS(DT)<1,CPTR,2> = SHRS<2>
               WIN.SHOURS(DT)<1,CPTR,3> = SHRS<3>
               WIN.PHOURS(DT)<1,CPTR,1> = PHRS<1>
               WIN.PHOURS(DT)<1,CPTR,2> = PHRS<2>
               WIN.PHOURS(DT)<1,CPTR,3> = PHRS<3>
               AHRS = SUM(WIN.AHOURS(DT)<1,CPTR>)
               SHRS = SUM(WIN.SHOURS(DT)<1,CPTR>)
               PHRS = SUM(WIN.PHOURS(DT)<1,CPTR>)
               BEGIN CASE
               CASE AHRS = 0 AND SHRS = 0
                  C1 = ""
               CASE SHRS > AHRS
                  C1 = "RED"
               CASE SHRS = AHRS
                  C1 = "YELLOW"
               CASE SHRS = 0
                  C1 = "IWHITE"
               CASE 1
                  C1 = "GREEN"
               END CASE
               BEGIN CASE
               CASE PHRS = 0
                  C2 = C1
               CASE (SHRS+PHRS) > AHRS
                  C2 = "RED"
               CASE (SHRS+PHRS) = AHRS
                  C2 = "YELLOW"
               CASE 1
                  C2 = "GREEN"
               END CASE
               BEGIN CASE
               CASE C1 = "" AND C2 = ""
                  NULL
               CASE C1 = C2
                  WCOM.TYPE = "HV"
                  WCOM.COL = COL2+(CDATE-SDATE)*6
                  WCOM.ROW = CPTR
                  WCOM.WIDTH = 6:XADJ
                  WCOM.HEIGHT = 1:YADJ
                  WCOM.FCOLOR = "BLACK"
                  WCOM.BCOLOR = C1
                  WCOM.RCOLOR = "BLACK"
                  WCOM.SELECT = CPTR*1000+DT
                  CALL LOAD.DATA(MAT WCOM)
               CASE 1
                  WCOM.TYPE = "HV"
                  WCOM.COL = COL2+(CDATE-SDATE)*6
                  WCOM.ROW = CPTR
                  WCOM.WIDTH = 6:XADJ
                  WCOM.HEIGHT = 0.7:YADJ
                  WCOM.FCOLOR = "BLACK"
                  WCOM.BCOLOR = C1
                  WCOM.RCOLOR = "BLACK"
                  WCOM.SELECT = CPTR*1000+DT
                  CALL LOAD.DATA(MAT WCOM)
                  WCOM.TYPE = "HV"
                  WCOM.COL = COL2+(CDATE-SDATE)*6
                  WCOM.ROW = CPTR+0.7
                  WCOM.WIDTH = 6:XADJ
                  WCOM.HEIGHT = 0.3:YADJ
                  WCOM.FCOLOR = "BLACK"
                  WCOM.BCOLOR = C2
                  WCOM.RCOLOR = "BLACK"
*                 WCOM.SELECT = CPTR*1000+DT
                  CALL LOAD.DATA(MAT WCOM)
               END CASE
3090        NEXT CDATE
         END
      NEXT CPTR
      CALL SET.WSCROLL(MAT WCOM)
      RETURN
*
*---- GET SCHEDULE DATA
*
10000*
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":CDATE ELSE
         MAT CCTR.SCHED.REC = ""
      END
      AHRS=""; SHRS=""; PHRS=""
      FOR SFT = 1 TO 3
         AHRS<SFT> = CCS.AVL.SHR<1,SFT> * CCS.MULT<1,SFT>
         SHRS<SFT> = SUM(CCS.SCH.SM.HRS<1,SFT>)
      NEXT SFT
      MATREAD CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":CDATE ELSE
         MAT CCTR.SCHED.REC = ""
      END
      FOR SFT = 1 TO 3
         PHRS<SFT> = SUM(CCS.SCH.SM.HRS<1,SFT>)
      NEXT SFT
      RETURN
*
*---- GET DIVISION
*
10100*
      PREV.DIV.ID = DIV.ID
      GOSUB 80000
      IF DIV.ID = "" THEN
         DIV.ID = PREV.DIV.ID
      END ELSE
         GOSUB 1000
         GOSUB 89900
         GOSUB 2000
      END
      RETURN
*
*---- GET DEPARTMENT
*
10200*
      GOSUB 80100
      IF WIN.CURR.DEPT = "" THEN RETURN
      DEPT.ID = XCODE
      GOSUB 1000
      GOSUB 2500
      UPD.MODE = 0
      GOSUB 3000
      RETURN
*
*---- DISPLAY JOB SCHEDULE SUMMARY
*
20100*
      IF WIN.CURR.CCTR = "" THEN
         GOSUB 80200
         IF WIN.CURR.CCTR = "" THEN RETURN
      END
      BEGIN CASE
      CASE WIN.CURR.DATE = ""
         JSDATE = SDATE
      CASE 1
         JSDATE = WIN.CURR.DATE
      END CASE
      JEDATE = JSDATE+14-1
      WCOM.WND = "W1"
      CALL WS.JOB.INQ.1(CONO, JSDATE, JEDATE, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOB SCHEDULE DETAIL
*
20200*
      IF WIN.CURR.JOB = "" THEN
         TYP=1; X="C"; Y="C"; MAXL=8;O.R="O";PMSG="Job Number"
         CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
         IF VALUE = "END" OR VALUE = "" THEN RETURN
         WIN.CURR.JOB = VALUE
      END
      WCOM.WND = "W2"
      CALL WS.JOB.INQ.2(CONO, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOB SPECIFICATIONS
*
20300*
      IF WIN.CURR.JOB = "" THEN
         TYP=1; X="C"; Y="C"; MAXL=8;O.R="O";PMSG="Job Number"
         CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
         IF VALUE = "END" OR VALUE = "" THEN RETURN
         WIN.CURR.JOB = VALUE
      END
      WCOM.WND = "W4"
      CALL WS.JOB.INQ.4(CONO, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOB STATUS
*
20400*
      IF WIN.CURR.JOB = "" THEN
         TYP=1; X="C"; Y="C"; MAXL=8;O.R="O";PMSG="Job Number"
         CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
         IF VALUE = "END" OR VALUE = "" THEN RETURN
         WIN.CURR.JOB = VALUE
      END
      WCOM.WND = "W9"
      CALL WS.JOB.STATUS(CONO, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOB PROJECTION
*
20500*
      IF WIN.CURR.JOB = "" THEN
         TYP=1; X="C"; Y="C"; MAXL=8;O.R="O";PMSG="Job Number"
         CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
         IF VALUE = "END" OR VALUE = "" THEN RETURN
         WIN.CURR.JOB = VALUE
      END
      WCOM.WND = "W10"
      CALL WS.JOB.PROJ(CONO, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOB WAITING
*
20700*
      WCOM.WND = "BOOK"
      CALL WS.BOOK.JOB(CONO, DIV.ID, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY JOBS SCHEDULED FOR CURRENT COST CENTER
*
20800*
      JXREF = ""
      WCOM.WND = "W3"
      CALL WS.JOB.INQ.3(CONO, SDATE, EDATE, JXREF, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY CALENDAR FOR CURRENT COST CENTER
*
21000*
      IF WIN.CURR.CCTR = "" THEN GOSUB 80200
      IF WIN.CURR.CCTR = "" THEN RETURN
      WCOM.WND = "CAL"
      CALL WS.CCTR.CALENDAR(CONO, SDATE, EDATE, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY COST CENTER AVAILABILITY
*
21100*
      IF WIN.CURR.CCTR = "" THEN GOSUB 80200
      IF WIN.CURR.CCTR = "" THEN RETURN
      WCOM.WND = "C1"
      IF WIN.CURR.DATE = "" THEN
         CALL WS.CCTR.INQ.1(CONO, SDATE, EDATE, MAT WCOM)
      END ELSE
         CALL WS.CCTR.INQ.1(CONO, WIN.CURR.DATE, EDATE, MAT WCOM)
      END
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY COST CENTER AVAILABILITY
*
21120*
      IF WIN.CURR.CCTR = "" THEN GOSUB 80200
      IF WIN.CURR.CCTR = "" THEN RETURN
      WCOM.WND = "C2"
      CALL WS.CCTR.INQ.2(CONO, SDATE, EDATE, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY DEPARTMENT CAPACITY CHART
*
21200*
      IF WIN.CURR.DEPT = "" THEN
         GOSUB 80100
         IF WIN.CURR.DEPT = "" THEN RETURN
      END
      SDEPT = "D":WIN.CURR.DEPT
      LOCATE SDEPT IN WIN.CCTR<1>,1 SETTING CP1 ELSE RETURN
*
      TYP = 6
      X = "C"
      Y = "C"
      MAXL = 8
      O.R = "O"
      DEFAULT = OCONV(SDATE,"D2/")
      PMSG = "Starting Date:"
      CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
      IF VALUE = "END" THEN RETURN
      CAP.SDATE = VALUE
*
      TYP = 6
      X = "C"
      Y = "C"
      MAXL = 8
      O.R = "O"
      DEFAULT = OCONV(CAP.SDATE+DPARS<7>-1,"D2/")
      PMSG = "Ending Date:"
      CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
      IF VALUE = "END" THEN RETURN
      CAP.EDATE = VALUE
*
      WCOM.CAPTION = " "
      WCOM.DATA = "Please standby....."
      GOSUB 89100
      WCOM.CAPTION = "Department Capacity"
      WCOM.COL     = "C"
      WCOM.ROW     = "C"
      WCOM.WIDTH   = 70
      WCOM.HEIGHT  = 16
      WCOM.BCOLOR  = "WHITE"
      WCHT.TYPE    = 1
      WCHT.BWIDTH  = 3
      WCHT.BSPACE  = -1
*     WCHT.SSPACE  = 1
      WCHT.SHADOW  = "Y"
      WCHT.HEAD    = WIN.CDESC<1,CP1>
      WCHT.SHEAD   = OCONV(CAP.SDATE,"D2/"):" through ":OCONV(CAP.EDATE,"D2/")
      WCHT.YHEAD   = "Hours"
      WCHT.XHEAD   = "Cost Centers"
      WCHT.DESC<1> = "Available Hours"
      WCHT.DESC<2> = "Scheduled Hours"
      WCHT.DESC<3> = "Scheduled + Pending"
      WCHT.COLOR<1> = "GREEN"
      WCHT.COLOR<2> = "RED"
      WCHT.COLOR<3> = "YELLOW"
      CCNT = DCOUNT(WIN.CCTR<1>,VM)
      CP = 0
      CDONE = 0
      FOR CPTR = CP1+1 TO CCNT UNTIL CDONE
         CCTR = WIN.CCTR<1,CPTR>
         IF CCTR[1,1] = "D" THEN
            CDONE = 1
         END ELSE
            CP = CP + 1
            AHRS = 0; SHRS = 0; PHRS = 0
            FOR CDATE = CAP.SDATE TO CAP.EDATE
               MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":CDATE ELSE
                  MAT CCTR.SCHED.REC = ""
               END
               WCHT.DHEAD<1,CP> = CCTR
               AHRS = AHRS + CCS.AVL.HRS
               SHRS = SHRS + CCS.SCH.HRS
               MATREAD CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":CDATE ELSE
                  MAT CCTR.SCHED.REC = ""
               END
               PHRS = PHRS + CCS.SCH.HRS
            NEXT CDATE
            WCHT.DATA<1,CP> = INT(AHRS/100+0.5)
            WCHT.DATA<2,CP> = INT(SHRS/100+0.5)
            WCHT.DATA<3,CP> = INT((SHRS+PHRS)/100+0.5)
* WCHT.SELECT<1,CP> = CPTR*1000
* WCHT.SELECT<2,CP> = CPTR*1000
         END
      NEXT CPTR
      WCOM.WND = "HELP"
      CALL CLOSE.WINDOW(MAT WCOM)
      WCOM.WND = "DCC"
      CALL DISPLAY.CHART(MAT WCOM, MAT WCHT)
      WCOM.WND = "MAIN"
      RETURN
*
*---- MAINTAIN COST CENTER AVAILABILITY
*
30100*
      IF WIN.CURR.CCTR = "" THEN GOSUB 80200
      IF WIN.CURR.CCTR = "" THEN RETURN
      CDATE = WIN.CURR.DATE
      IF CDATE = "" THEN CDATE = SDATE
      CALL WS.CCTR.AVAIL(CONO, CDATE, MAT WCOM)
      WCOM.WND = "MAIN"
      UPD.MODE = 1
      GOSUB 3000
      LOCATE "W1" IN WIN.ID,1 SETTING X THEN
         IF WIN.CSEL<X> = WIN.CURR.CCTR THEN GOSUB 20100
      END
      LOCATE "C1" IN WIN.ID,1 SETTING X THEN
         IF WIN.CSEL<X> = WIN.CURR.CCTR THEN GOSUB 21100
      END
      LOCATE "C2" IN WIN.ID,1 SETTING X THEN
         IF WIN.CSEL<X> = WIN.CURR.CCTR THEN GOSUB 21120
      END
      LOCATE "CAL" IN WIN.ID,1 SETTING X THEN
         IF WIN.CSEL<X> = WIN.CURR.CCTR THEN GOSUB 21000
      END
      LOCATE "TP" IN WIN.ID,1 SETTING X THEN GOSUB 50200
      RETURN
*
*---- SCHEDULE JOB FORWARD
*
40100*
40200*
      IF WIN.CURR.JOB = "" THEN RETURN
      REC.LOCK = 0
      MATREADU JBS.REC FROM JOB.SCHED, CONO:WIN.CURR.JOB LOCKED REC.LOCK = 1 ELSE
         RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
         WCOM.STATUS = "Cannot locate Job # ":WIN.CURR.JOB
         GOSUB 90000
         RETURN
      END
      IF REC.LOCK THEN
         WCOM.STATUS = "Job locked by another port"
         GOSUB 90000
         RETURN
      END
      IF JBS.DIV # DIV.ID THEN
         RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
         WCOM.STATUS = "Cannot schedule Division ":JBS.DIV:" jobs."
         GOSUB 90000
         RETURN
      END
      MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO:WIN.CURR.JOB ELSE
         MAT PJBS.REC = MAT JBS.REC
      END
      BCK.FLG = ""
      WCOM.CAPTION = "Job Scheduling"
      WCOM.DATA = "Scheduling Job # ":WIN.CURR.JOB
      GOSUB 89100
      BEGIN CASE
      CASE SCHED.TYPE = "B"
         ACTION = "W"
         SPTR = 0
         EPTR = 0
         DUE.DATE = JBS.DUE.DATE
         CALL GEN.JOB.SCHED.BCK(CONO,ACTION,WIN.CURR.JOB,DUE.DATE,TODAY,SPTR,EPTR)
         BEGIN CASE
         CASE ACTION = ""
            ALL.FLG = 0
            CALL PUNSCHED.JOB.SUB(CONO,ACTION,WIN.CURR.JOB,TODAY,SPTR,EPTR,JDATE,ALL.FLG)
            READU PSL.REC FROM PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ELSE PSL.REC = "" ; *---- TASK 19407
            LOCATE WIN.CURR.JOB IN PSL.REC<1>,1 SETTING P THEN
               PSL.REC = DELETE(PSL.REC,1,P,0)
               PSL.REC = DELETE(PSL.REC,2,P,0)
               PSL.REC = DELETE(PSL.REC,3,P,0)
            END
            IF PSL.REC = "" THEN
***            DELETE PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ; *---- TASK 19407
               TPFID = CONO:DIV.ID:"PEND.SCHED.LIST"
               CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
            END ELSE
***            WRITE PSL.REC ON PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ; *TASK 19407
               TPFID = CONO:DIV.ID:"PEND.SCHED.LIST"
               TPREC = PSL.REC
               CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
            END
         CASE ACTION = "E"
            WCOM.STATUS = "Invalid scheduling type"
            GOSUB 90000
            GOSUB 89200
            RETURN
         CASE ACTION = "N"
            GOSUB 89200
            RETURN
         CASE 1
            GOSUB 89200
            RETURN
         END CASE
         CALL JOB.CRTL.DATE.EXC.UPD(CONO,WIN.CURR.JOB)
      CASE SCHED.TYPE = "F"
         ACTION = "W"
         SPTR = 0
         EPTR = 0
         CALL GEN.JOB.SCHED.FWD(CONO,ACTION,WIN.CURR.JOB,JDATE,TODAY,DUE.DATE,SPTR,EPTR,BCK.FLG)
         BEGIN CASE
         CASE ACTION = ""
            ALL.FLG = 0
            CALL PUNSCHED.JOB.SUB(CONO,ACTION,WIN.CURR.JOB,TODAY,SPTR,EPTR,JDATE,ALL.FLG)
            READU PSL.REC FROM PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ELSE PSL.REC = "" ; *---- TASK 19407
            LOCATE WIN.CURR.JOB IN PSL.REC<1>,1 SETTING P THEN
               PSL.REC = DELETE(PSL.REC,1,P,0)
               PSL.REC = DELETE(PSL.REC,2,P,0)
               PSL.REC = DELETE(PSL.REC,3,P,0)
            END
            IF PSL.REC = "" THEN
***            DELETE PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ; *---- TASK 19407
               TPFID = CONO:DIV.ID:"PEND.SCHED.LIST"
               CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
            END ELSE
***            WRITE PSL.REC ON PSS.CONTROL, CONO:DIV.ID:"PEND.SCHED.LIST" ; *---- TASK 19407
               TPFID = CONO:DIV.ID:"PEND.SCHED.LIST"
               TPREC = PSL.REC
               CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
            END
            IF DUE.DATE > JBS.DUE.DATE THEN
               WCOM.STATUS = "Job is late. New completion date is ":OCONV(DUE.DATE,"D2/")
               GOSUB 90000
            END
         CASE ACTION = "E"
            WCOM.STATUS = "Invalid scheduling type"
            GOSUB 90000
            GOSUB 89200
            RETURN
         END CASE
      END CASE
      FND = 1
      READU ALL.JOBS FROM PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ELSE ; *---- TASK 19407
         FND = 0
         ALL.JOBS = ""
      END
      IF FND > 0 THEN
         FND = 0
         ACNT = DCOUNT(ALL.JOBS,AM)
         FOR APTR = ACNT TO 1 STEP -1 UNTIL FND
            IF ALL.JOBS<APTR,1> = WIN.CURR.JOB THEN
               ALL.JOBS = DELETE(ALL.JOBS,APTR,0,0)
               FND = 1
            END
         NEXT APTR
      END
      IF ALL.JOBS = "" THEN
***      DELETE PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ; *---- TASK 19407
         TPFID = CONO:DIV.ID:"JOB.SCHED.LIST"
         CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
      END ELSE
***      WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ; *---- TASK 19407
         TPFID = CONO:DIV.ID:"JOB.SCHED.LIST"
         TPREC = ALL.JOBS
         CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
      END
      RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
      RELEASE PEND.JOB.SCHED, CONO:WIN.CURR.JOB
      UPD.MODE = 1
      GOSUB 3000
      GOSUB 89200
      LOCATE "W1" IN WIN.ID,1 SETTING X THEN GOSUB 20100
      LOCATE "C1" IN WIN.ID,1 SETTING X THEN GOSUB 21100
      LOCATE "C2" IN WIN.ID,1 SETTING X THEN GOSUB 21120
      LOCATE "CAL" IN WIN.ID,1 SETTING X THEN GOSUB 21000
      LOCATE "BOOK" IN WIN.ID,1 SETTING X THEN GOSUB 20700
      LOCATE "W3" IN WIN.ID,1 SETTING X THEN GOSUB 20800
      LOCATE "TP" IN WIN.ID,1 SETTING X THEN GOSUB 50200
      RETURN
*
*---- UNSCHEDULE JOB
*
40400*
      IF WIN.CURR.JOB = "" THEN RETURN
      REC.LOCK = 0
      MATREADU JBS.REC FROM JOB.SCHED, CONO:WIN.CURR.JOB LOCKED REC.LOCK = 1 ELSE
         RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
         WCOM.STATUS = "Cannot locate Job # ":WIN.CURR.JOB
         GOSUB 90000
         RETURN
      END
      IF REC.LOCK THEN
         WCOM.STATUS = "Job locked by another port"
         GOSUB 90000
         RETURN
      END
      IF JBS.DIV # DIV.ID THEN
         RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
         WCOM.STATUS = "Cannot un-schedule Division ":JBS.DIV:" jobs."
         GOSUB 90000
         RETURN
      END
*---- TASK # 20126 - Optionally place on schedule list
      TYP = 8
      X = "C"
      Y = "C"
      MAXL = 1
      PMSG = "Place on scheduling list (Y/N)"
      CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
      IF VALUE = "END" THEN RETURN
      PLACE.ON.LIST = VALUE
*-------------------
      IF WIN.CURR.CCTR = "" THEN
         SPTR = 1
         JDATE = JBS.SCH.DATE<1,1>
      END ELSE
         LOCATE WIN.CURR.CCTR IN JBS.CCTR<1>,1 SETTING SPTR ELSE RETURN
         JDATE = JBS.SCH.DATE<1,SPTR>
      END
      EPTR = ""
      ALL.FLG = 1
      WCOM.CAPTION = "Job Scheduling"
      WCOM.DATA = "Un-scheduling Job # ":WIN.CURR.JOB
      GOSUB 89100
      ACTION = ""
      CALL UNSCHED.JOB.SUB(CONO,ACTION,WIN.CURR.JOB,JDATE,SPTR,EPTR,JDATE,ALL.FLG)
      MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO:WIN.CURR.JOB ELSE
         MAT PJBS.REC = MAT JBS.REC
      END
*
*     BORF = "D"
*     ACTION = "W"
*     DUE.DATE = ""
*     CALL PEN.JOB.SCHED.BCK(CONO,ACTION,WIN.CURR.JOB,DUE.DATE,TODAY,SPTR,EPTR)
*     IF ACTION = "N" OR ACTION = "F" THEN
         BORF = "S"
*        ALL.FLG = 0
*        ACTION = "W"
*        CALL PUNSCHED.JOB.SUB(CONO,ACTION,WIN.CURR.JOB,TODAY,SPTR,EPTR,JDATE,ALL.FLG)
         BCK.FLG = ""
         REQ.DATE = TODAY + 1                         ;* NICK 06/01/93
         ACTION = "W"
         DUE.DATE = ""
         CALL PEN.JOB.SCHED.FWD(CONO,ACTION,WIN.CURR.JOB,REQ.DATE,TODAY,DUE.DATE,SPTR,EPTR,BCK.FLG)
         IF ACTION = "" AND DUE.DATE > PJBS.DUE.DATE THEN
            WCOM.STATUS = "Job is late. New completion date is ":OCONV(DUE.DATE,"D2/")
            GOSUB 90000
         END
         IF ACTION = "E" THEN
            WCOM.STATUS = "Error updating pending file"
            GOSUB 90000
         END
*     END
*
      READU PSL.REC FROM PSS.CONTROL,CONO:DIV.ID:"PEND.SCHED.LIST" ELSE PSL.REC = "" ; *---- TASK 19407
      LOCATE WIN.CURR.JOB IN PSL.REC<1>,1 SETTING POS ELSE
         PSL.REC<1,POS> = WIN.CURR.JOB
         PSL.REC<2,POS> = BORF
         IF BORF = "S" THEN
            PSL.REC<3,POS> = TODAY+1
         END ELSE
            PSL.REC<3,POS> = PJBS.DUE.DATE
         END
      END
***   WRITE PSL.REC ON PSS.CONTROL,CONO:DIV.ID:"PEND.SCHED.LIST" ; *---- TASK 19407
      TPFID = CONO:DIV.ID:"PEND.SCHED.LIST"
      TPREC = PSL.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
*
*---- TASK # 20126 - Optionally place on schedule list
      IF PLACE.ON.LIST = "Y" THEN
         READU ALL.JOBS FROM PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ELSE ; *---- TASK 19407
            ALL.JOBS = ""
         END
         FND = 0
         AJCNT = DCOUNT(ALL.JOBS,AM)
         FOR AJPTR = 1 TO AJCNT UNTIL FND
            IF ALL.JOBS<AJPTR,1> = WIN.CURR.JOB THEN FND = 1
         NEXT AJPTR
         IF NOT(FND) THEN
            ALL.JOBS<AJCNT+1,1> = WIN.CURR.JOB
            ALL.JOBS<AJCNT+1,2> = BORF
            IF BORF = "S" THEN
               ALL.JOBS<AJCNT+1,3> = TODAY+1
            END ELSE
               ALL.JOBS<AJCNT+1,3> = JBS.DUE.DATE
            END
         END
***      WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.ID:"JOB.SCHED.LIST" ; *---- TASK 19407
         TPFID = CONO:DIV.ID:"JOB.SCHED.LIST"
         TPREC = ALL.JOBS
         CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,WCOM.STATUS)
**********************************************************************
      END
*----------------
      GOSUB 89200
      RELEASE JOB.SCHED, CONO:WIN.CURR.JOB
      RELEASE PEND.JOB.SCHED, CONO:WIN.CURR.JOB
      UPD.MODE = 1
      GOSUB 3000
      LOCATE "W1" IN WIN.ID,1 SETTING X THEN GOSUB 20100
      LOCATE "C1" IN WIN.ID,1 SETTING X THEN GOSUB 21100
      LOCATE "C2" IN WIN.ID,1 SETTING X THEN GOSUB 21120
      LOCATE "CAL" IN WIN.ID,1 SETTING X THEN GOSUB 21000
      LOCATE "BOOK" IN WIN.ID,1 SETTING X THEN GOSUB 20700
      LOCATE "W3" IN WIN.ID,1 SETTING X THEN GOSUB 20800
      LOCATE "TP" IN WIN.ID,1 SETTING X THEN GOSUB 50200
      RETURN
*
*---- START TRANSACTION PROCESSING
*
50100*
      TYP=1; X="C"; Y="C"; MAXL=40;O.R="O";PMSG="Description"
      CALL WS.EDIT.SUB(MAT EDIT.COM,MAT WCOM)
      IF VALUE = "END" OR VALUE = "" THEN RETURN
      TDESC = VALUE
      CALL TRANSACTION.START(CONO,DIV.ID,TDESC,PSS.JOURNAL,PSS.LOCK,WCOM.STATUS)
      IF WCOM.STATUS = "" THEN
         GOSUB 89900
         WCOM.STATUS = "Transaction Processing Started!"
      END
      GOSUB 90000
      RETURN
*
*---- INQUIRE TRANSACTIONS
*
50200*
      WCOM.WND = "TP"
      CALL WS.TRAN.INQ(CONO, DIV.ID, MAT WCOM)
      WCOM.WND = "MAIN"
      RETURN
*
*---- COMMIT UPDATES
*
50300*
      CALL TRANSACTION.COMMIT(CONO, DIV.ID, PSS.JOURNAL, WCOM.STATUS)
      IF WCOM.STATUS = "" THEN WCOM.STATUS = "Updates Committed"
      GOSUB 90000
      RETURN
*
*---- REMOVE UPDATES
*
50400*
      CALL TRANSACTION.RECOVER(CONO, DIV.ID, PSS.JOURNAL, WCOM.STATUS)
      IF WCOM.STATUS = "" THEN
         WCOM.STATUS = "Updates Removed"
         GOSUB 90000
         UPD.MODE = 1
         GOSUB 3000
         LOCATE "W1" IN WIN.ID,1 SETTING X THEN GOSUB 20100
         LOCATE "C1" IN WIN.ID,1 SETTING X THEN GOSUB 21100
         LOCATE "C2" IN WIN.ID,1 SETTING X THEN GOSUB 21120
         LOCATE "CAL" IN WIN.ID,1 SETTING X THEN GOSUB 21000
         LOCATE "BOOK" IN WIN.ID,1 SETTING X THEN GOSUB 20700
         LOCATE "W3" IN WIN.ID,1 SETTING X THEN GOSUB 20800
         LOCATE "TP" IN WIN.ID,1 SETTING X THEN GOSUB 50200
      END ELSE
         GOSUB 90000
      END
      RETURN
*
*---- END TRANSACTION PROCESSING
*
50500*
      CALL TRANSACTION.TERM(CONO,DIV.ID,PSS.JOURNAL,PSS.LOCK,WCOM.STATUS)
      IF WCOM.STATUS = "" THEN
         WCOM.STATUS = "Transaction Terminated"
         GOSUB 90000
         LOCATE "TP" IN WIN.ID,1 SETTING TPTR THEN
            WCOM.WND = "TP"
            CALL CLOSE.WINDOW(MAT WCOM)
            WCOM.WND = "MAIN"
            AC = DCOUNT(WIN.A1A,",")
            FOR AP = 1 TO AC
               AA = FIELD(WIN.A1A,",",AP)
               AA1 = FIELD(AA,"-",1)
               AA2 = FIELD(AA,"-",2)
               IF AA2="" THEN AA2=AA1
               FOR AAP = AA1 TO AA2
                  WINDATA(AAP) = DELETE(WINDATA(AAP),TPTR,0,0)
               NEXT AAP
            NEXT AP
         END
      END ELSE
         GOSUB 90000
      END
      RETURN
*
*---- DISPLAY HELP WINDOW
*
60100*
      MSG = ""
      MSG<1,1>="             D O C U M E N T A T I O N"
      MSG<1,3>="This function  demonstrates the use of a window"
      MSG<1,4>="to display a message to the operator. The operator"
      MSG<1,5>="may request additional lines by using the scroll bar"
      MSG<1,6>="on the right hand side of this window if present."
      MSG<1,8>="To utilize the scroll bar with the use of a mouse,"
      MSG<1,9>="position the mouse cursor over the upper or lower"
      MSG<1,10>="arrow and depress the leftmost button on the"
      MSG<1,11>="mouse."
      MSG<1,13>="If your system does not have a mouse, you may view"
      MSG<1,14>="the message in it's entirety by using the up-arrow,"
      MSG<1,15>="down-arrow, page-up and page-down keys on your"
      MSG<1,16>="keyboard."
      MSG<1,18>="If you require addition information on the use of"
      MSG<1,19>="these functions, please refer to chapter 2 of the"
      MSG<1,20>="supplied documentation."
      WCOM.CAPTION = "Sample Help Message"
      WCOM.DATA = MSG
      CALL DISPLAY.MESSAGE(MAT WCOM)
      RETURN
*
*---- DISPLAY SAMPLE DIALOG BOX
*
60300*
      READ DBOX FROM PSSBP, "DBOX" ELSE RETURN
      TYPE = TRIM(DBOX<1,1>)
      IF TYPE # "DIALOG" THEN RETURN
      DBOX = DELETE(DBOX,1,1,0)
      WCOM.WND = "DIALOG"
      WCOM.STYLE   = TRIM(DBOX<1,1>)
      WCOM.CAPTION = TRIM(DBOX<1,2>)
      WCOM.STYLE   = TRIM(DBOX<1,3>)
      WCOM.COL     = TRIM(DBOX<1,4>)
      WCOM.ROW     = TRIM(DBOX<1,5>)
      WCOM.WIDTH   = TRIM(DBOX<1,6>)
      WCOM.HEIGHT  = TRIM(DBOX<1,7>)
      WCOM.FSIZE   = TRIM(DBOX<1,8>)
      WCOM.FTYPE   = TRIM(DBOX<1,9>)
      WCOM.WND = "DIALOG"
      CALL DEFINE.DIALOG.BOX(MAT WCOM)
      WCOM.WND = "MAIN"
*
      N = 1
      LOOP
         N = N + 1
         TYPE = TRIM(DBOX<N,1>)
      UNTIL TYPE = "END" OR N > 100 DO
         DBOX = DELETE(DBOX,N,1,0)
         BEGIN CASE
         CASE TYPE  = "CONTROL"
            WCOM.CLASS   = TRIM(DBOX<N,1>)
            WCOM.DATA    = TRIM(DBOX<N,2>)
            WCOM.IDENT   = TRIM(DBOX<N,3>)
            WCOM.COL     = TRIM(DBOX<N,4>)
            WCOM.ROW     = TRIM(DBOX<N,5>)
            WCOM.WIDTH   = TRIM(DBOX<N,6>)
            WCOM.HEIGHT  = TRIM(DBOX<N,7>)
            WCOM.FCOLOR  = TRIM(DBOX<N,8>)
            WCOM.MINV    = TRIM(DBOX<N,9>)
            WCOM.MAXV    = TRIM(DBOX<N,10>)
            WCOM.CURV    = TRIM(DBOX<N,11>)
            WCOM.INCR    = TRIM(DBOX<N,12>)
            WCOM.AID     = TRIM(DBOX<N,13>)
            CALL DEFINE.DIALOG.CONTROL(MAT WCOM)
         CASE TYPE  = "DATA"
            WCOM.IDENT   = TRIM(DBOX<N,1>)
            WCOM.DATA    = TRIM(DBOX<N,2>)
            WCOM.SELECT  = TRIM(DBOX<N,3>)
            CALL LOAD.CONTROL.DATA(MAT WCOM)
         END CASE
      REPEAT
      CALL PROCESS.DIALOG(MAT WCOM)
      RETURN
*
*---- DISPLAY SAMPLE CHART
*
60500*
      WCHT.TYPE    = 1
      WCOM.CAPTION = "Sample Bar Chart"
      WCHT.HEAD    = "Sample Bar Chart"
      WCHT.BWIDTH  = 3
      WCHT.BSPACE  = -1
      WCHT.SSPACE  = 1
      WCHT.SHADOW  = "Y"
      GOTO 60750
60600*
      WCHT.TYPE    = 3
      WCOM.CAPTION = "Sample Line Chart"
      WCHT.HEAD    = "Sample Line Chart"
      WCHT.BWIDTH  = 5
      GOTO 60750
60700*
      WCHT.TYPE    = 2
      WCOM.CAPTION = "Stacked Bar Chart"
      WCHT.HEAD    = "Stacked Bar Chart"
      WCHT.BWIDTH  = 5
      GOTO 60750
60750*
      WCOM.COL     = "C"
      WCOM.ROW     = "C"
      WCOM.WIDTH   = 70
      WCOM.HEIGHT  = 16
      WCOM.BCOLOR  = "WHITE"
      WCHT.SHEAD   = "Period 10/01/89 - 09/28/91"
      WCHT.YHEAD   = "Hours"
      WCHT.XHEAD   = "Months"
      WCHT.DESC<1> = "Available Hours"
      WCHT.DESC<2> = "Scheduled Hours"
      WCHT.DESC<3> = "Remaining Hours"
      WCHT.DHEAD   = MONTHS
      READ WCOM.DATA FROM PSSBP, "CHART" ELSE
         WCOM.DATA = ""
         FOR V = 1 TO 12
            WCHT.DATA<1,V> = RND(500)
            WCHT.DATA<2,V> = RND(500)
            WCHT.DATA<3,V> = WCHT.DATA<1,V> - WCHT.DATA<2,V>
         NEXT V
      END
      WCOM.WND = "CC"
      CALL DISPLAY.CHART(MAT WCOM, MAT WCHT)
      WCOM.WND = "MAIN"
      RETURN
*
*---- DISPLAY COLOR CHART
*
60900*
      WCOM.WND="CLR"
      WCOM.CAPTION="Sample Color Chart"
      WCOM.COL="C"
      WCOM.ROW="C"
      WCOM.WIDTH=40
      WCOM.HEIGHT=16
      WCOM.BCOLOR="IWHITE"
      CALL OPEN.WINDOW(MAT WCOM)
*
      FOR N = 0 TO 15
         WCOM.COL=INT(N/8)*20
         WCOM.ROW=MOD(N,8)*2
         WCOM.WIDTH=20
         WCOM.HEIGHT=2
         WCOM.FCOLOR=N
         WCOM.BCOLOR=N
         WCOM.RCOLOR=N
         CALL LOAD.DATA(MAT WCOM)
      NEXT N
      CALL SET.WSCROLL(MAT WCOM)
      WCOM.WND="MAIN"
      RETURN
*
*---- GET DIVISION
*
80000*
      IF DCOUNT(DIVIDS,VM) <= 1 THEN
         DIV.ID = DIVIDS
         RETURN
      END
      RELEASE PSS.LOCK
      PROC.TYPE = "M"
      XCOL="C"; XROW="C"
      XTYPE="Division"; XFILE=DIVISION; XFLD=1; XCODE=""
      WCOM.WND = "XREF"
      CALL WS.GEN.CODE.XREF(CONO,XCOL,XROW,XTYPE,XFILE,XFLD,XCODE,MAT WCOM)
      WCOM.WND = "MAIN"
      DIV.ID = XCODE
      RETURN
*
*---- GET DEPARTMENT
*
80100*
      IF DEPTCOUNT = 1 THEN
         WIN.CURR.DEPT = WIN.CCTR<1,1>[2,99]
         RETURN
      END
      XCOL="C"; XROW="C"
      XTYPE="Department"; XFILE=DEPARTMENT; XFLD=2; XCODE=""
      WCOM.WND = "XREF"
      CALL WS.GEN.CODE.XREF(CONO,XCOL,XROW,XTYPE,XFILE,XFLD,XCODE,MAT WCOM)
      WCOM.WND = "MAIN"
      WIN.CURR.DEPT = XCODE
      RETURN
*
*---- GET COST CENTER
*
80200*
      IF WIN.CURR.DEPT = "" THEN
         GOSUB 80100
         IF WIN.CURR.DEPT = "" THEN RETURN
      END
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:WIN.CURR.DEPT ELSE RETURN
      XHEAD = "Cost Center Selection"
      XKEYS = DEPT.CCTRS
      XFLD  = 1
      XCOL  = "C"
      XROW  = "C"
      XSORT = "CL"
      XDISP = ""
      XCODE = ""
      CALL WS.GEN.XREF(CONO,XHEAD,XKEYS,COST.CNTR,XFLD,XCOL,XROW,XSORT,XDISP,XCODE,MAT WCOM)
      WIN.CURR.CCTR = XCODE
      RETURN
*
*---- OPEN MESSAGE WINDOW
*
89100*
      LOCATE "HELP" IN WIN.ID,1 SETTING HPTR ELSE WIN.ID<HPTR> = "HELP"
      CALL DISPLAY.MESSAGE(MAT WCOM)
      RETURN
*
*---- CLOSE MESSAGE WINDOW
*
89200*
      LOCATE "HELP" IN WIN.ID,1 SETTING HPTR THEN
         WCOM.WND = "HELP"
         CALL CLOSE.WINDOW(MAT WCOM)
         WCOM.WND = "MAIN"
         AC = DCOUNT(WIN.A1A,",")
         FOR AP = 1 TO AC
            AA = FIELD(WIN.A1A,",",AP)
            AA1 = FIELD(AA,"-",1)
            AA2 = FIELD(AA,"-",2)
            IF AA2="" THEN AA2=AA1
            FOR AAP = AA1 TO AA2
               WINDATA(AAP) = DELETE(WINDATA(AAP),HPTR,0,0)
            NEXT AAP
         NEXT AP
      END
      RETURN
*
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
      RELEASE PSS.LOCK
      PROC.TYPE = "M"
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      REQDIV = DIV.ID
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, WCOM.STATUS)
      BEGIN CASE
      CASE TP.DIV = "X"
         RELEASE PSS.LOCK, CONO:"TP"
         GOSUB 90000
         PROC.TYPE = "I"
      CASE TP.DIV = ""
         DCNT = DCOUNT(REQDIV,VM)
         FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
         NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000*
      WCOM.DATA = WCOM.STATUS
      CALL MESSAGE.BOX(MAT WCOM)
      WCOM.STATUS = ""
      RETURN
*
*---- TRACE ROUTINE
*
95000*
      READU TRACE.REC FROM CONTROL,"WINCOM.TRACE" ELSE TRACE.REC=""
      TRPTR = DCOUNT(TRACE.REC,AM)+1
      TRACE.REC<TRPTR> = TREC
      FOR XPTR = 101 TO TRPTR
         TRACE.REC = DELETE(TRACE.REC,1,0,0)
      NEXT XPTR
      WRITE TRACE.REC ON CONTROL,"WINCOM.TRACE"
      RETURN
*
*---- END OF PROGRAM
*
99999*
      CALL WINDOW.TERM(MAT WCOM)
      STOP
   END
