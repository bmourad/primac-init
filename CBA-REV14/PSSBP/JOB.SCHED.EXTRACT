*********************************************************************
*
* PROGRAM  - JOB.SCHED.EXTRACT
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
* DATE     - 02/21/96
* DESCRIPTION:
*
*   This program is used to create Job schedule data from a specified
*   estimate when a job is booked.
*
*   Executed via PERFORM.PROG from :
*     JOB.BOOK.SUB and TRANSACTION.TERM
*
* T22010 renee 07/24/1997 * CHECKING COMMONS
* T22154 stefanie 08/19/1997 * Fix Rev10B - Rev11 match problems.
*T22896 LLH  05/12/1998 * UPDATE DATE THE JBS.SCH.FLAG IF NEW JOB TO P
*T27115 epitka 12/17/2002 * REMOVE "UPDATE JOB SCHEDULE LIST"
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED.CREATE
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>JES.CPYLIB>ESTIMATE
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
   PROMPT ""
   PROCREAD PARAM ELSE PARAM = ""
   CONO = PARAM<1>
   JOB.NO = PARAM<2>
   ;*T27115   UPD.FLG = PARAM<3>      ;* T22154
   JOB.FLAG = PARAM<4>
   S$GUIFORM = PARAM<5>    ;* T21177
   PROC.TYPE = "M"
*
*---- OPEN ALL FILES
*
   OPEN "","CONTROL" TO CONTROL ELSE 
      ERRMSG = "CONTROL FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","COMPANY" TO COMPANY ELSE 
      ERRMSG = "COMPANY FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PREFIX" TO PREFIX ELSE 
      ERRMSG = "PREFIX FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","DIVISION" TO DIVISION ELSE 
      ERRMSG = "DIVISION FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","JOB.SCHED" TO JOB.SCHED ELSE 
      ERRMSG = "JOB.SCHED FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE 
      ERRMSG = "PEND.JOB.SCHED FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE 
      ERRMSG = "CCTR.AVAIL FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","ESTIMATE" TO ESTIMATE ELSE 
      ERRMSG = "ESTIMATE FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE 
      ERRMSG = "ESTIMATE.DEPT FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","JOB" TO JOB ELSE 
      ERRMSG = "JOB FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE 
      ERRMSG = "CUSTOMER FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE 
      ERRMSG = "PSS.CONTROL FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE 
      ERRMSG = "PSS.HIERARCHY FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","COST.CNTR" TO COST.CNTR ELSE 
      ERRMSG = "COST.CNTR FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE 
      ERRMSG = "PEND.CCTR.SCHED FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE 
      ERRMSG = "HOLIDAY.SCHED FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PSS.JOB.XREF" TO PSS.JOB.XREF ELSE 
      ERRMSG = "PSS.JOB.XREF FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE 
      ERRMSG = "PSS.JOURNAL FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
   OPEN "","PSS.LOCK" TO PSS.LOCK ELSE 
      ERRMSG = "PSS.LOCK FILE IS MISSING";GOSUB 90000;GOTO 99999
   END
*
*---- INITIALIZATION
*
* T20891
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY ":CONO:" IS NOT ON FILE"
      GOSUB 90000; GOTO 99999
   END
* T20891
   READ LOADING.FLG FROM PSS.CONTROL, CONO:"LOADING.FLG" ELSE
      READ LOADING.FLG FROM PSS.CONTROL,"LOADING.FLG" ELSE LOADING.FLG="N"
   END
   MATREAD PSHR.REC FROM PSS.CONTROL,"HIERARCHY" ELSE
      ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING";GOSUB 90000;GOTO 99999
   END
   READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
*---- MAIN PROCESSING
*
   MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
      ERRMSG = "Cannot locate job ":JOB.NO
      GOSUB 90000;GOTO 99999
   END
   DIV.OWNER = JOB.DIV
   GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
   IF ERRMSG # "" THEN
      READU DREC FROM PSS.LOCK, CONO:"JOB.SCHED.EXTRACT" ELSE DREC = ""
      LOCATE JOB.NO IN DREC<1>,1 SETTING JPTR ELSE
         DREC<1,-1> = JOB.NO
      END
      WRITE DREC ON PSS.LOCK, CONO:"JOB.SCHED.EXTRACT"
      GOSUB 90000
      GOTO 99999
   END
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG = "Cannot locate customer - ":JOB.CUST
      GOSUB 90000;GOTO 99999
   END
   MATREAD EST.REC FROM ESTIMATE, CONO:JOB.EST ELSE
      ERRMSG = "Cannot locate estimate ":JOB.EST:" for job ":JOB.NO
      GOSUB 90000;GOTO 99999
   END
   FND = 1
   MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO:JOB.NO ELSE MAT PJBS.REC = ""
   MATREADU JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE FND=0
*  BEGIN CASE
*     CASE NOT(FND)
*        MAT JBS.REC = ""
*     CASE SUM(JBS.USD.HRS) = 0
*     CASE 1
*        ERRMSG = "Job has already been scheduled"
*        GOSUB 90000;GOTO 99999
*  END CASE
   LOCATE JOB.NO IN EST.BOOK.JOB<1>,1 SETTING JFND THEN
      IF EST.BOOK.COMP<1,JFND> = "ALL" THEN
         COMP.NUM = "ALL"
      END ELSE
         COMP.NUM = EST.BOOK.COMP<1,JFND>+0
      END
   END ELSE
      ERRMSG = "Job / Estimate mismatch"
      GOSUB 90000;GOTO 99999
   END
   EST.KEY = JOB.EST
   IF PJBS.DEPT # "" THEN
      SPTR = 0
      EPTR = 0
      SDATE = ""; ALL.FLG = 1; ACTION = ""
      CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,SPTR,EPTR,SDATE,ALL.FLG)
   END
   DUE.DATE = JOB.TRACK.DATE<1,4>
   CALL JOB.SCHED.BUILD.UPD (CONO,"",EST.KEY,JOB.NO,COMP.NUM,CUST.NAME,LOADING.FLG,DUE.DATE,JOB.FLAG)
*
* Dummy Schedule the Job
*
*---- Check for null codes
   SBLK = 0
   JCNT = DCOUNT(PJBS.DEPT,VM)
   FOR XXX = 1 TO JCNT UNTIL SBLK
      IF PJBS.HOLD.CODE<1,XXX> = "" THEN SBLK = XXX
   NEXT XXX
   IF SBLK THEN
      ERRMSG = "Cannot Create Pending Schedule....Invalid Schedule Code on Line - " : XXX
      GOSUB 90000;GOTO 99999
   END
   DUE.DATE = ""
   ACTION = ""
530*
   P_X  = 3 ; P_Y = 21 ; P_VALUE = "Now Processing Pending Schedule Routine" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ST.PTR = 0
   EN.PTR = 0
   BCK.FLG = ""
   REQ.DATE = TODAY+1
   ACTION = ""
   CALL PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
   SDATE = REQ.DATE
   BEGIN CASE
      CASE ACTION = ""
      CASE ACTION = "E" OR ACTION = "END"
         IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
            ALL.FLG = 0
            CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
         END
   END CASE
   P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
   RELEASE ESTIMATE, CONO:JOB.EST
   RELEASE JOB.SCHED, CONO:JOB.NO
   RELEASE PEND.JOB.SCHED, CONO:JOB.NO
*
   CALL GEN.XREF.MAINT(CONO,JOB.NO,CUST.NAME,CUST.NAME,PSS.JOB.XREF,PREFIX)
*
   MATREADU JSCR.REC FROM PSS.CONTROL, CONO:JOB.DIV:"JOB.SCHED.CREATE" ELSE
      MAT JSCR.REC = ""
   END
   LOCATE JOB.NO IN JSCR.ID<1>,1 SETTING P THEN
      JSCR.ID = DELETE(JSCR.ID,1,P,0)
      JSCR.MASTER = DELETE(JSCR.MASTER,1,P,0)
      JSCR.SUB.FLAG = DELETE(JSCR.SUB.FLAG,1,P,0)
      JSCR.CUST = DELETE(JSCR.CUST,1,P,0)
      JSCR.CUST.NAME = DELETE(JSCR.CUST.NAME,1,P,0)
      JSCR.PROC.FLAG = DELETE(JSCR.PROC.FLAG,1,P,0)
      JSCR.DUE.DATE = DELETE(JSCR.DUE.DATE,1,P,0)
      JSCR.BORF = DELETE(JSCR.BORF,1,P,0)
   END
   IF JSCR.ID = "" THEN
***      DELETE PSS.CONTROL, CONO:JOB.DIV:"JOB.SCHED.CREATE"
      TPFID = CONO:JOB.DIV:"JOB.SCHED.CREATE"
      CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
   END ELSE
***      MATWRITE JSCR.REC ON PSS.CONTROL, CONO:JOB.DIV:"JOB.SCHED.CREATE"
      TPFID = CONO:JOB.DIV:"JOB.SCHED.CREATE"
      MATBUILD TPREC FROM JSCR.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
   END
*
*T20925 v
   READU PEND.LIST FROM PSS.CONTROL, CONO:JOB.DIV:"PEND.SCHED.LIST" ELSE PEND.LIST = ""
   LOCATE JOB.NO IN PEND.LIST<1>,1 SETTING P ELSE NULL
   PEND.LIST<1,P> = JOB.NO
   PEND.LIST<2,P> = "S"
   PEND.LIST<3,P> = TODAY+1
***     WRITE PEND.LIST ON PSS.CONTROL, CONO:JOB.DIV:"PEND.SCHED.LIST"
   TPFID = CONO:JOB.DIV:"PEND.SCHED.LIST"
   TPREC = PEND.LIST
   CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
*T22154 >     END
*T20925 ^
*
   ;*T27115   IF UPD.FLG = 'Y' THEN     ;*T22154 <
   ;*T27115     READU ALL.JOBS FROM PSS.CONTROL, CONO:JOB.DIV:"JOB.SCHED.LIST" ELSE ALL.JOBS = ""
   ;*T27115     AJCNT = DCOUNT(ALL.JOBS,AM)
   ;*T27115     FND = AJCNT+1
   ;*T27115     FOR AJPTR = 1 TO AJCNT WHILE FND > AJCNT
   ;*T27115      IF ALL.JOBS<AJPTR,1> = JOB.NO THEN FND = AJPTR
   ;*T27115     NEXT AJPTR
   ;*T27115     ALL.JOBS<FND,1> = JOB.NO
   ;*T27115     ALL.JOBS<FND,2> = JBS.SCHED.MODE
   ;*T27115     ALL.JOBS<FND,3> = JBS.SCHED.DATE
   ;*T27115     TPFID = CONO:JOB.DIV:"JOB.SCHED.LIST"
   ;*T27115     TPREC = ALL.JOBS
   ;*T27115     CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
   ;*T27115   END     ;*T22154 <
**********************************************************************
*
   GOTO 99999
*
*---- LOAD ALL SUB-JOBS
*
82000*
   SUBFLAG = 0
   MSTJOB = JSCR.ID<1,REF>
   INCFLAG = JSCR.PROC.FLAG<1,REF>
   JCNT = DCOUNT(JOB.SUBS,VM)
   FOR JPTR = 1 TO JCNT
      SUBJOB = JOB.SUBS<1,JPTR>
      LOCATE SUBJOB IN JSCR.ID<1>,1 SETTING FND ELSE
         SUBFLAG = 1
         REF = REF + 1
         JSCR.ID = INSERT(JSCR.ID,1,REF,0,"")
         JSCR.MASTER = INSERT(JSCR.MASTER,1,REF,0,"")
         JSCR.SUB.FLAG = INSERT(JSCR.SUB.FLAG,1,REF,0,"")
         JSCR.CUST = INSERT(JSCR.CUST,1,REF,0,"")
         JSCR.CUST.NAME = INSERT(JSCR.CUST.NAME,1,REF,0,"")
         JSCR.PROC.FLAG = INSERT(JSCR.PROC.FLAG,1,REF,0,"")
         JSCR.DUE.DATE = INSERT(JSCR.DUE.DATE,1,REF,0,"")
         JSCR.BORF = INSERT(JSCR.BORF,1,REF,0,"")
         OLD.NAMES = INSERT(OLD.NAMES,1,REF,0,"")
         JSCR.ID<1,REF> = SUBJOB
         JSCR.MASTER<1,REF> = MSTJOB
         JSCR.SUB.FLAG<1,REF> = ""
         JSCR.CUST<1,REF> = JOB.CUST
         JSCR.CUST.NAME<1,REF> = CUST.NAME
         OLD.NAMES<1,REF> = CUST.NAME
         JSCR.PROC.FLAG<1,REF> = INCFLAG
         JSCR.DUE.DATE<1,REF> = TODAY+1
      END
   NEXT JPTR
   IF SUBFLAG THEN
   END
   RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
   READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
   REQDIV = DIV.OWNER
   CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
   BEGIN CASE
      CASE TP.DIV = "X"
      CASE TP.DIV = ""
         DCNT = DCOUNT(REQDIV,VM)
         FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
         NEXT DPTR
   END CASE
   RELEASE PSS.LOCK, CONO:"TP"
   RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 *
* PRINT @(3,23):ERRMSG: ; INPUT ACK:
   ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
END
