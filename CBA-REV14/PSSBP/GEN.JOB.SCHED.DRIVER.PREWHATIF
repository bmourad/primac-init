********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* PROGRAM     - GEN.JOB.SCHED.DRIVER
* AUTHOR      - CAROL SAGE, C.B.A.
* DATE        - 07/21/87
* MODIFIED    - 11/02/95 TERRY NORTHCUTT TASK 19407 DIVIZIONALIZATION
* MODIFIED - 02/21/96, NA, TASK 19938, DISPLAY COST CENTER DESCRIPTION
* MODIFIED - 02/21/96, NA, TASK 20124, LOAD PEND FORWARD
* DESCRIPTION
* Maintains CONTROL CONO:"JOB.SCHED.LIST" list for job scheduling:
* Jobs are scheduled in the order listed.
*T20370 JR OPEN OUTSIDE.PO FOR OPO HOLD CODE
*T20925 julie 08/29/1996 * FIX LOCKING PROBLEM WITH "JOB.SCHED.LIST"
********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF
*
*---- INITIALIZATION
*
PROMPT ""
MV.JOB = 1
MV.TYPE = 2
MV.DATE = 3
MV.PRI  = 4
FWD.CODES = "SC"
FWD.CODES<2> = "SCN"
FWD.CODES<3> = "SA"
FWD.CODES<4> = "SAN"
FWD.CODES<5> = "SL"
FWD.CODES<6> = "SLN"
FWD.CODES<7> = "SLD"
ERRMSG = ""
*
*---- OPEN ALL FILES
*
OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;GO 999999
OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;GO 999999
OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;GO 999999
OPEN "JOB.SCHED" TO JOB.SCHED ELSE ERRMSG="CANNOT OPEN JOB.SCHED FILE";GOSUB 90000;GO 999999
OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE ERRMSG="CANNOT OPEN PEND.JOB.SCHED FILE";GOSUB 90000;GO 999999
OPEN "JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE ERRMSG="CANNOT OPEN JOB.CRTL.DATE.EXC FILE";GOSUB 90000;GO 999999
OPEN "PSS.SCREENS" TO PSS.SCREENS ELSE ERRMSG="CANNOT OPEN PSS.SCREENS FILE";GOSUB 90000;GO 999999
OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE ERRMSG = "CCTR.SCHED FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE ERRMSG = "PEND.CCTR.SCHED FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE ERRMSG = "CCTR.AVAIL FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE ERRMSG = "HOLIDAY.SCHED FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "OPERATION" TO OPERATION ELSE ERRMSG = "OPERATION FILE IS MISSING";GOSUB 90000;GO 999999
OPEN "PSS.CONTROL" TO PSS.CONTROL ELSE ERRMSG="CANNOT OPEN PSS.CONTROL FILE";GOSUB 90000;GO 999999
OPEN "PSS.HIERARCHY" TO PSS.HIERARCHY ELSE ERRMSG="CANNOT OPEN PSS.HIERARCHY FILE";GOSUB 90000;GO 999999
OPEN "PREFIX" TO PREFIX ELSE ERRMSG = "PREFIX FILE IS MISSING";GOSUB 90000;STOP
OPEN "PSS.JOB.XREF" TO PSS.JOB.XREF ELSE ERRMSG = "PSS.JOB.XREF FILE IS MISSING";GOSUB 90000;STOP
*T20370 v
OPEN "OUTSIDE.PO" TO OUTSIDE.PO ELSE ERRMSG = "OUTSIDE.PO FILE IS MISSING";GOSUB 90000;STOP
OPEN "PO" TO PO ELSE ERRMSG = "PO FILE IS MISSING";GOSUB 90000;STOP
*T20370 ^
*
*---- CHECK SYSTEM HIERARCHY
*
MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
  ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
  GOSUB 90000
  GOTO 999999
END
MAT PSHR.REC = ""
*
*---- GET COMPANY
*
CONO = ""
CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
IF CONO = "END" THEN GOTO 999999
READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
READ LOADING.FLG FROM PSS.CONTROL, CONO : "LOADING.FLG" ELSE
  READ LOADING.FLG FROM PSS.CONTROL, "LOADING.FLG" ELSE LOADING.FLG = "N"
END
*---- TASK 19407
*
*---- PERFORM PROCREAD
*
PROCREAD BUFFER ELSE
  ERRMSG = "MUST RUN FROM A PROC"
  GOSUB 90000
  GOTO 999999
END
DIV.OWNER = BUFFER<3>
*---- TASK 19407
*
*---- CHECK FOR LOCKS
*
DUMMY = ""
REC.LOCK = 0
READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER:"UNSCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "";*TASK 19407
IF REC.LOCK THEN
  ERRMSG = "MUST WAIT UNTIL UNSCHEDULE PROCESS IS DONE"
  GOSUB 90000
  GOTO 98888
END
RELEASE PSS.CONTROL, CONO : DIV.OWNER:"UNSCHED.FLG";*--- TASK 19407
DUMMY = ""
ALL.JOBS = ""
REC.LOCK = 0
READU ALL.JOBS FROM PSS.CONTROL, CONO : DIV.OWNER:"JOB.SCHED.LIST" LOCKED REC.LOCK = 1 ELSE ALL.JOBS = "";*--- TASK 19407
IF REC.LOCK THEN
  ERRMSG = "MUST WAIT UNTIL MULTI SCHEDULE PROCESS IS DONE"
  GOSUB 90000
  GOTO 98888
END
* T20925
SAVE.JOBS = ALL.JOBS
RELEASE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST"
* T20925
REC.LOCK = 0
READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER:"SCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "";*--- TASK 19407
IF REC.LOCK THEN
  ERRMSG = "MUST WAIT UNTIL SCHEDULE PROCESS IS DONE"
  GOSUB 90000
  GOTO 98888
END
RELEASE PSS.CONTROL, CONO : DIV.OWNER:"SCHED.FLG";*--- TASK 19407
READU PSL.REC FROM PSS.CONTROL,CONO:DIV.OWNER:"PEND.SCHED.LIST" ELSE PSL.REC = "";*--- TASK 19407
* T20925
RELEASE PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST"
* T20925
DUMMY = ""
MAT GEN.XREF.REC = ""
GXR.CO = CONO
*
*---- INITIALIZATION SCEERN
*
SCREEN INIT;#
S$SCR=1
SCREEN DEFINE;GEN.JOB.SCHED.DRIVER;PSS.SCREENS
SCREEN FORMAT
SCREEN COUNT;;3
LINE.COUNT=S$LCNT
LINE.SPACE=S$LSPC
*
*---- MAIN PROCESSING
100* 
SCREEN CLEAR
S$DATA(1)<S$SCR>=TODAY
SCREEN DISPLAY;;1
LINE.CNT= DCOUNT(ALL.JOBS,AM)
IF LINE.CNT > 0 THEN
  GOSUB 40000
  REF.NO=1
  CURR.REF.NO=""
  GOSUB 50000
END ELSE
  LINE.CNT=0
  CURR.REF.NO=""
  OPT="A"
  GOTO 510
END
*
*---- OPTIONS
500* 
S$DATA(9)<S$SCR>=""
SCREEN FIELD;;9
SCREEN INPUT;;9
OPT=S$VALUE
510* 
BEGIN CASE
  CASE OPT="A" AND LINE.CNT< 999
    DONE=0
    FOR REF.NO=LINE.CNT+1 TO 999 UNTIL DONE
      GOSUB 50000
      GOSUB 10000
      IF S$VALUE="END" THEN
        DONE=1
        GOSUB 700
      END ELSE
        LINE.CNT=LINE.CNT+1
      END
    NEXT REF.NO
    REF.NO=LINE.CNT
    CURR.REF.NO=""
    GOSUB 50000
  CASE OPT="I" AND LINE.CNT > 0 AND LINE.CNT < 999
    GOSUB 600
    IF S$VALUE#"" AND S$VALUE#"END" THEN
      REF.NO=S$VALUE
      GOSUB 800
      LINE.CNT=LINE.CNT+1
      CURR.REF.NO=""
      GOSUB 50000
      GOSUB 10000
      IF S$VALUE="END" THEN
        GOSUB 700
        LINE.CNT=LINE.CNT-1
      END
      CURR.REF.NO=""
      GOSUB 50000
    END
  CASE OPT="D" AND LINE.CNT > 0
    GOSUB 600
    IF S$VALUE#"" AND S$VALUE#"END" THEN
      REF.NO=S$VALUE
      GOSUB 700
      LINE.CNT=LINE.CNT-1
      IF REF.NO > LINE.CNT THEN REF.NO=REF.NO-1
      CURR.REF.NO=""
      GOSUB 50000
    END
  CASE OPT="SO"
    OLD.JOBS = ALL.JOBS
    GOSUB 12000
    GOSUB 50000
**    CASE OPT="M" AND LINE.CNT > 1
**       GOSUB 600
**       IF S$VALUE="" OR S$VALUE="END" THEN GOTO 500
**       REF1=S$VALUE
**       GOSUB 680
**       IF S$VALUE="" OR S$VALUE="END" THEN GOTO 500
**       REF2 = REF1+S$VALUE-1
**       GOSUB 650
**       BEGIN CASE
**       CASE S$VALUE="END"
**       CASE S$VALUE=""
**       CASE S$VALUE>=REF1 AND S$VALUE <= REF2+1
**       CASE 1
**          REF3=S$VALUE
**          REF.NO=S$VALUE
**          NEW.JOBS=""
**          NEW.DESC=""
**          NEW.MAST=""
**          NEW.EST=""
**          NEW.CUST=""
**          FOR REF.NO = REF2 TO REF1 STEP - 1
**             INS ALL.JOBS<REF.NO> BEFORE NEW.JOBS<1>
**             INS S$DATA(4)<S$SCR,REF.NO> BEFORE NEW.DESC<1>
**             INS S$DATA(5)<S$SCR,REF.NO> BEFORE NEW.MAST<1>
**             INS S$DATA(6)<S$SCR,REF.NO> BEFORE NEW.EST<1>
**             INS S$DATA(7)<S$SCR,REF.NO> BEFORE NEW.CUST<1>
**             GOSUB 700
**          NEXT REF.NO
**          REF2 = REF2-REF1+1
**          IF REF3 > REF1 THEN REF3=REF3-REF2
**          REF.NO = REF3
**          FOR REF1 = REF2 TO 1 STEP - 1
**             GOSUB 800
**             ALL.JOBS<REF.NO>=NEW.JOBS<REF1>
**             S$DATA(3)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.JOB>
**             S$DATA(4)<S$SCR,REF.NO>=NEW.DESC<REF1>
**             S$DATA(5)<S$SCR,REF.NO>=NEW.MAST<REF1>
**             S$DATA(6)<S$SCR,REF.NO>=NEW.EST<REF1>
**             S$DATA(7)<S$SCR,REF.NO>=NEW.CUST<REF1>
**             S$DATA(8)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.DATE>
**             S$DATA(12)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.TYPE>
**             S$DATA(19)<S$SCR,REF.NO>=NEW.JOBS<REF1,MV.PRI>
**             DEL NEW.JOBS<REF1>
**             DEL NEW.DESC<REF1>
**             DEL NEW.MAST<REF1>
**             DEL NEW.EST<REF1>
**             DEL NEW.CUST<REF1>
**          NEXT REF1
**          IF REF3 > LINE.CNT THEN REF3=LINE.CNT
**          REF.NO=REF3
**          CURR.REF.NO=""
**          GOSUB 50000
**       END CASE
  CASE OPT="S" OR OPT="SF"
    REF.NO=CURR.REF.NO+LINE.COUNT
    IF REF.NO > LINE.CNT THEN REF.NO=1
    GOSUB 50000
  CASE OPT="ST"
    REF.NO=1
    GOSUB 50000
  CASE OPT="SB"
    REF.NO=LINE.CNT
    GOSUB 50000
  CASE OPT="SR"
    REF.NO=CURR.REF.NO-LINE.COUNT
    IF REF.NO < 1 THEN REF.NO = 1
    GOSUB 50000
  CASE OPT="P"
    IF LINE.CNT > 0 THEN
      OLD.JOBS = ALL.JOBS
      GOSUB 12000
      GOSUB 50000
      GOSUB 1000
    END
* T20925
*         WRITE PSL.REC ON PSS.CONTROL,CONO:DIV.OWNER:"PEND.SCHED.LIST";*--- TASK 19407
*         IF ALL.JOBS="" THEN
*            DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST";*--- TASK 19407
*            GOTO 98888
*         END ELSE
*            WRITEU ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST";*--- TASK 19407
    GOSUB 80000
    IF ALL.JOBS = "" THEN
      GOTO 98888
    END ELSE
* T20925
      S$DATA(3)<S$SCR>=""
      S$DATA(4)<S$SCR>=""
      S$DATA(5)<S$SCR>=""
      S$DATA(6)<S$SCR>=""
      S$DATA(7)<S$SCR>=""
      S$DATA(8)<S$SCR>=""
      S$DATA(11)<S$SCR>=""
      S$DATA(12)<S$SCR>=""
      S$DATA(19)<S$SCR>=""
      LINE.CNT= DCOUNT(ALL.JOBS,AM)
      GOSUB 40000
      REF.NO=1
      CURR.REF.NO=""
      GOSUB 50000
    END
  CASE OPT="F"
    GOSUB 80000;*T20925
    IF ALL.JOBS="" THEN
* T20925
*            DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST";*--- TASK 19407
* T20925
    END ELSE
      LINE.CNT= DCOUNT(ALL.JOBS,AM)
      FOR REF.NO = 1 TO LINE.CNT
        JOB.NO = ALL.JOBS<REF.NO,MV.JOB>
        MATREADU JBS.REC FROM JOB.SCHED,CONO:JOB.NO THEN
          JBS.SCHED.MODE = ALL.JOBS<REF.NO,MV.TYPE>
          JBS.SCHED.DATE = ALL.JOBS<REF.NO,MV.DATE>
          MATWRITE JBS.REC ON JOB.SCHED,CONO:JOB.NO
        END LOCKED
          ERRMSG = "Job schedule ":JOB.NO:" locked by another user."
          GOSUB 90000
        END ELSE
          RELEASE JOB.SCHED,CONO:JOB.NO
          ERRMSG = "Invalid JOB.SCHED"
          GOSUB 90000
        END
      NEXT REF.NO
* T20925
*            WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST";*--- TASK 19407
* T20925
    END
    GOTO 98888
  CASE (OPT="CM" OR OPT="C") AND LINE.CNT > 0
    BEGIN CASE
** CASE LINE.CNT = 1
** REF1 = 1
** REF2 = 1
      CASE OPT = "C"
        GOSUB 600
        IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
        REF1 = S$VALUE
        REF2 = 1
      CASE 1
        GOSUB 600
        IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
        REF1 = S$VALUE
        GOSUB 680
        IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
        REF2 = S$VALUE
    END CASE
    REF2 = REF1+REF2-1
    FOR REF.NO = REF1 TO REF2 UNTIL S$VALUE = "END"
      GOSUB 50000
      JOB.NO = ALL.JOBS<REF.NO,MV.JOB>
      MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.NO ELSE
        ERRMSG="Invalid JOB.SCHED"
        GOSUB 90000
        GOTO 500
      END
      GOSUB 10500
      IF S$VALUE = "END" THEN
        S$DATA(8)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.DATE>
        S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.TYPE>
        S$DATA(19)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.PRI>
        CURR.REF.NO = ""
      END
    NEXT REF.NO
    GOSUB 50000
  CASE OPT="END" OR OPT="E"
    GOTO 98888
END CASE
GOTO 500
*-------------------*
*--- SUBROUTINES ---*
*-------------------*
*
*---- GET LINE REFERENCE NUMBER
600* 
SCREEN FIELD;;10
S$MINV=CURR.REF.NO
S$MAXV=S$MINV+LINE.COUNT-1
IF S$MAXV > LINE.CNT THEN S$MAXV=LINE.CNT
IF OPT = "CM" THEN S$DEFAULT=1
SCREEN INPUT;;10
RETURN
*
*---- GET NEW LINE REFERENCE NUMBER
650* 
SCREEN FIELD;;14
S$MINV=1
S$MAXV=LINE.CNT+1
SCREEN INPUT;;14
RETURN
*
*---- GET NUMBER OF LINES TO MOVE/CHANGE
680* 
SCREEN FIELD;;15
S$MINV=1
BEGIN CASE
  CASE OPT="CM"
    S$MAXV=LINE.CNT-REF1+1
    S$DEFAULT=S$MAXV
  CASE OPT="M"
    S$DATA(15)<S$SCR>=1
    S$MAXV=CURR.REF.NO+LINE.COUNT-1
    IF S$MAXV > LINE.CNT THEN S$MAXV=LINE.CNT
    S$MAXV=S$MAXV-REF1+1
  CASE 1
    S$MAXV=1
END CASE
SCREEN INPUT;;15
RETURN
*
*---- DELETE MULTI-LINE DATA
700* 
DEL ALL.JOBS<REF.NO>
DEL S$DATA(3)<S$SCR,REF.NO>
DEL S$DATA(4)<S$SCR,REF.NO>
DEL S$DATA(5)<S$SCR,REF.NO>
DEL S$DATA(6)<S$SCR,REF.NO>
DEL S$DATA(7)<S$SCR,REF.NO>
DEL S$DATA(8)<S$SCR,REF.NO>
DEL S$DATA(12)<S$SCR,REF.NO>
DEL S$DATA(19)<S$SCR,REF.NO>
RETURN
*
*---- INSERT MULTI-LINE DATA
800* 
INS "" BEFORE ALL.JOBS<REF.NO>
INS "" BEFORE S$DATA(3)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(4)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(5)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(6)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(7)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(8)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(12)<S$SCR,REF.NO>
INS "" BEFORE S$DATA(19)<S$SCR,REF.NO>
RETURN
*
*--- PROCESS JOB SCHEDULE
*
1000* 
PRCS.BLK = 0
FOR REF.NO = 1 TO LINE.CNT UNTIL PRCS.BLK
  IF ALL.JOBS<1,MV.PRI> = 999 THEN
    PRCS.BLK = 1
    GOTO 1099
  END
  GOSUB 50000
  S$VAL = REF.NO
  S$DATA(11)<S$SCR,REF.NO> = "*"
  SCREEN DISPLAY;;11
  JOB.NO = ALL.JOBS<1,MV.JOB>
  REC.LOCK = 0
  MATREADU JBS.REC FROM JOB.SCHED, CONO : JOB.NO LOCKED REC.LOCK = 1 ELSE
    ERRMSG = "Invalid JOB.SCHED "
    GOSUB 90000
    PRCS.BLK = 1
    GOTO 1099
  END
  MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO : JOB.NO ELSE
    MAT PJBS.REC = ""
  END
  IF REC.LOCK THEN
    ERRMSG = "JOB.SCHED record is locked. "
    GOSUB 90000
    PRCS.BLK = 1
    GOTO 1099
  END
** IF LOADING.FLG = "Y" AND ALL.JOBS<1,MV.TYPE> = "D" THEN
** ERRMSG = "YOU CAN ONLY SCHEDULE FORWARD FOR LOADING SYSTEM"
** GOSUB 90000
** PRCS.BLK = 1
** GOTO 1099
** END
1010* 
  GOSUB 20000
  IF FND AND ALL.JOBS<1,MV.TYPE> = "D" THEN
    ERRMSG = "Can't Schedule 'SC' Back"
    GOSUB 90000
    PRCS.BLK = 1
    GOTO 1099
  END
  MATREAD JOB.REC FROM JOB, CONO : JOB.NO ELSE MAT JOB.REC = ""
  IF JOB.STATUS<1,1> = 9 THEN
    ERRMSG = "This job is cancelled "
    GOSUB 90000
    PRCS.BLK = 1
    GOTO 1099
  END
  GOSUB 30000
  IF SBLK THEN
    PRCS.BLK = 1
    GOTO 1099
  END
P_X  = 0 ; P_Y = 21 ; P_VALUE = "Processing scheduling routine":@(-4) ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DUE.DATE = ""
  ACTION = ""
  REQ.DATE = ALL.JOBS<1,MV.DATE>
  BEGIN CASE
    CASE ALL.JOBS<1,MV.TYPE> = "D"
      ST.PTR = 0
      EN.PTR = 0
      UPD.PEND = 0
      CALL GEN.JOB.SCHED.BCK(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,ST.PTR,EN.PTR)
      SDATE = REQ.DATE
      BEGIN CASE
        CASE ACTION = ""
          ALL.FLG = 0
          CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,ST.PTR,EN.PTR,SDATE,ALL.FLG)
* T20925
          READU PSL.REC FROM PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST" ELSE PSL.REC = ""
* T20925
          LOCATE JOB.NO IN PSL.REC<1>,1 SETTING POS THEN
            PSL.REC = DELETE(PSL.REC,1,POS,0)
            PSL.REC = DELETE(PSL.REC,2,POS,0)
            PSL.REC = DELETE(PSL.REC,3,POS,0)
          END
* T20925
          WRITE PSL.REC ON PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST"
* T20925
        CASE ACTION = "E" OR ACTION = "F"
          SCREEN FIELD;;13
          S$PMSG = "(R)eview, (U)n-schedule: "
          S$VALDAT = "R,U"
          SCREEN INPUT;;13
          IF S$VALUE = "R" THEN
            MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
            MATBUILD ORG.JBS FROM JBS.REC,""
            S$SCR = S$SCR + 1
            CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
            S$SCR = S$SCR - 1
            SCREEN FORMAT
            CURR.REF.NO = ""
            GOSUB 50000
            MATBUILD NEW.JBS FROM JBS.REC,""
            IF ORG.JBS # NEW.JBS THEN UPD.PEND = 1 ELSE UP.PEND = 0
            IF UPD.PEND THEN
              GOSUB 60000
            END
            SCREEN FIELD;;22
            SCREEN INPUT;;22
            IF S$VALUE = "Y" THEN
              ALL.FLG = 0
              CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
              GOTO 1010
            END
          END
          ALL.FLG = 0
          CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
          IF UPD.PEND THEN GOSUB 70000
          PRCS.BLK = 1
        CASE ACTION = "N"
          PRCS.BLK = 1
        CASE 1
          PRCS.BLK = 1
      END CASE
      CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NO)
    CASE ALL.JOBS<1,MV.TYPE> = "S"
      ST.PTR = 0
      EN.PTR = 0
      BCK.FLG = ""
      CALL GEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
      SDATE = REQ.DATE
      UPD.PEND = 0
      BEGIN CASE
        CASE ACTION = ""
1022      IF DUE.DATE > JBS.DUE.DATE THEN
            SCREEN FIELD;;13
            S$PMSG = "New calculated due date is - ": OCONV(DUE.DATE,"D2/") :". (A)ccept, (R)eview, (U)n-schedule: "
            SCREEN INPUT;;13
            BEGIN CASE
              CASE S$VALUE = "A"
                ALL.FLG = 0
                CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,ST.PTR,EN.PTR,SDATE,ALL.FLG)
              CASE S$VALUE = "R"
                MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
                MATBUILD ORG.JBS FROM JBS.REC,""
                S$SCR = S$SCR + 1
                CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
                S$SCR = S$SCR - 1
                SCREEN FORMAT
                CURR.REF.NO = ""
                GOSUB 50000
                MATBUILD NEW.JBS FROM JBS.REC,""
                IF ORG.JBS # NEW.JBS THEN UPD.PEND = 1 ELSE UP.PEND = 0
                IF UPD.PEND THEN
                  GOSUB 60000
                END
                SCREEN FIELD;;22
                SCREEN INPUT;;22
                IF S$VALUE = "Y" THEN
                  ALL.FLG = 0
                  CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                  GOTO 1010
                END
                GOTO 1022
              CASE S$VALUE = "U"
                ALL.FLG = 0
                CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                IF UPD.PEND THEN GOSUB 70000
                PRCS.BLK = 1
            END CASE
          END ELSE
            ALL.FLG = 0
            CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,ST.PTR,EN.PTR,SDATE,ALL.FLG)
          END
          IF PRCS.BLK = 0 THEN
* T20925
            READU PSL.REC FROM PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST" ELSE PSL.REC = ""
* T20925
            LOCATE JOB.NO IN PSL.REC<1>,1 SETTING POS THEN
              PSL.REC = DELETE(PSL.REC,1,POS,0)
              PSL.REC = DELETE(PSL.REC,2,POS,0)
              PSL.REC = DELETE(PSL.REC,3,POS,0)
            END
* T20925
            WRITE PSL.REC ON PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST"
* T20925
          END
        CASE ACTION = "E"
          SCREEN FIELD;;13
          S$PMSG = "(R)eview, (U)n-schedule: "
          S$VALDAT = "R,U"
          SCREEN INPUT;;13
          IF S$VALUE = "R" THEN
            MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
            S$SCR = S$SCR + 1
            CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
            S$SCR = S$SCR - 1
            SCREEN FORMAT
            CURR.REF.NO = ""
            GOSUB 50000
            SCREEN FIELD;;22
            SCREEN INPUT;;22
            IF S$VALUE = "Y" THEN
              ALL.FLG = 0
              CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
              GOTO 1010
            END
          END
          IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
            ALL.FLG = 0
            CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
          END
          PRCS.BLK = 1
        CASE 1
          PRCS.BLK = 1
      END CASE
      CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NO)
    CASE 1
      ERRMSG = "Invalid schedule type "
      GOSUB 90000
      PRCS.BLK = 1
  END CASE
P_X  = 0 ; P_Y = 21 ; P_VALUE = @(-4) ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF PRCS.BLK THEN GOTO 1099
  DEL ALL.JOBS<1>
* T20925
*         WRITEU ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST";*--- TASK 19407
* T20925
  S$VAL = REF.NO
  S$DATA(11)<S$SCR,REF.NO> = ""
  SCREEN DISPLAY;;11
  MATWRITE JBS.REC ON JOB.SCHED, CONO:JOB.NO
1099* 
  RELEASE JOB.SCHED, CONO : JOB.NO
  RELEASE PEND.JOB.SCHED, CONO : JOB.NO
NEXT REF.NO
RETURN
*
*---- ENTER JOB NUMBER
10000* 
S$VAL=REF.NO
SCREEN DISPLAY;;2
10100* 
S$DATA(3)<S$SCR,REF.NO>=ALL.JOBS<REF.NO,MV.JOB>
S$VAL=REF.NO
SCREEN FIELD;;3
SCREEN INPUT;;3;RETURN
BEGIN CASE
  CASE S$VALUE = ""
    S$VAL = REF.NO
    SCREEN FIELD;;7
    SCREEN INPUT;;7
    BEGIN CASE
      CASE S$VALUE = "END" OR S$VALUE = ""
        GOTO 10100
      CASE 1
        GXR.XREF = PSS.JOB.XREF
        GXR.SRCH.ID = S$VALUE
        GXR.FILE = JOB.SCHED
        GXR.LOC = 1
        GXR.TOP.LINE = "JOB SCHEDULE SEARCH"
        GXR.TOP.LINE<1,2> = "SEARCH BY NAME : " : S$VALUE
        GXR.HEADING = "Job Num"
        GXR.ATT = 0
        GXR.LEN = 9
        GXR.HEADING<1,1> = "Cust Num"
        GXR.ATT<1,2> = 10
        GXR.LEN<1,2> = 9
        GXR.HEADING<1,3> = "Customer Name"
        GXR.ATT<1,3> = 5
        GXR.LEN<1,3> = 25
        GXR.HEADING<1,4> = "Job Comments"
        GXR.ATT<1,4> = 9
        GXR.LEN<1,4> = 25
        GXR.ID = ""
        GXR.OCONV = ""
        CALL GEN.XREF1 (MAT GEN.XREF.REC,PREFIX)
        IF GXR.ACTION # "X" THEN
          SCREEN FORMAT
          GOSUB 40000
          CURR.REF.NO = ""
          GOSUB 50000
        END
        IF GXR.ID = "" THEN GOTO 10000
        S$DATA(3)<S$SCR,REF.NO> = GXR.ID
        S$VAL = REF.NO
        SCREEN DISPLAY;;3
        MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
          ERRMSG = "Cannot locate job. Try again! "
          GOSUB 90000
          GOTO 10100
        END
        JOB.NO = GXR.ID
    END CASE
  CASE S$VALUE # ""
    JOB.NO=S$VALUE
END CASE
XCNT = DCOUNT(ALL.JOBS,AM)
AA = 0
FOR XPTR = 1 TO XCNT UNTIL AA
  IF JOB.NO = ALL.JOBS<XPTR,MV.JOB> THEN AA = XPTR
NEXT XPTR
IF AA THEN
  ERRMSG="JOB.SCHED already exists on Line ":AA
  S$DATA(3)<S$SCR,REF.NO>=""
  GOSUB 90000
  GOTO 10100
END
10200* 
MATREAD JBS.REC FROM JOB.SCHED,CONO:JOB.NO ELSE
  ERRMSG="Invalid JOB.SCHED"
  S$DATA(3)<S$SCR,REF.NO>=""
  GOSUB 90000
  GOTO 10100
END
*---- TASK 19407
*
*---- CHECK FOR DIV.OWNER
*
MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
  JDIV=JOB.DIV
END ELSE
  JDIV=JBS.DIV
END
IF JDIV # DIV.OWNER THEN
  ERRMSG = "Job not owned by selected division ":DIV.OWNER
  GOSUB 90000
  GOTO 10100
END
*---- TASK 19407
*
*---- IF SCHEDULED HOURS HAVE BEEN USED UP, DON'T ALLOW SCHEDULING
*
LAST.CNT=DCOUNT(JBS.DEPT,VM)
USED.UP = 0
FOR XXX = 1 TO LAST.CNT UNTIL USED.UP
  IF JBS.USD.HRS<1,XXX> < JBS.SCH.HRS<1,XXX> THEN USED.UP = 1
NEXT XXX
IF USED.UP <= 0 THEN
  ERRMSG="All Hours have been Scheduled"
  S$DATA(3)<S$SCR,REF.NO>=""
  GOSUB 90000
  GOTO 10100
END
GOSUB 30000
IF SBLK THEN
  S$DATA(3)<S$SCR,REF.NO>=""
  GOTO 10100
END
*
MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC=""
*
S$VAL=REF.NO
IF JOB.DESC # "" THEN
  J.DESC=JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
END ELSE
  J.DESC=JBS.JOB.COMMENT
END
S$DATA(4)<S$SCR,REF.NO>=J.DESC
SCREEN DISPLAY;;4
*
S$VAL=REF.NO
IF JOB.MASTER # "" THEN
  J.MASTER=JOB.MASTER
END ELSE
  J.MASTER=JOB.NO
END
S$DATA(5)<S$SCR,REF.NO>=J.MASTER
SCREEN DISPLAY;;5
*
S$VAL=REF.NO
IF JOB.EST#"" THEN
  J.ESTIMATE=JOB.EST
END ELSE
  J.ESTIMATE=""
END
S$DATA(6)<S$SCR,REF.NO>=J.ESTIMATE
SCREEN DISPLAY;;6
*
S$VAL=REF.NO
S$DATA(7)<S$SCR,REF.NO>=JBS.CUST.NAME
SCREEN DISPLAY;;7
*
*--- GET TYPE OF SCHEDULE
*
10500* 
PREV.TYPE=ALL.JOBS<REF.NO,MV.TYPE>
IF LOADING.FLG = "Y" THEN
  FND = 1
END ELSE
  GOSUB 20000
END
S$VAL=REF.NO
S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.TYPE>
SCREEN FIELD;;12
IF LOADING.FLG = "Y" THEN
  S$VALDAT = "S,R"
  S$HMSG = "S = Start Forward or R = Review the job status screens."
END
IF ALL.JOBS<REF.NO,MV.TYPE> = "" AND JBS.SCHED.MODE # "" THEN
  S$O.R = "O";S$DEFAULT = JBS.SCHED.MODE
END
SCREEN INPUT;;12;RETURN
BEGIN CASE
  CASE S$VALUE = "D" AND LOADING.FLG = "Y"
    ERRMSG = "You can only schedule FORWARD for loading system"
    GOSUB 90000
    GOTO 10500
  CASE S$VALUE = "D" AND FND
    ERRMSG = "Can't schedule 'SC' back"
    GOSUB 90000
    GOTO 10500
  CASE S$VALUE = "D"
  CASE S$VALUE = "S"
  CASE S$VALUE = "R"
    MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE MAT DIV.REC=""
    S$SCR = S$SCR + 1
    CALL JOB.SCHED.REV.SUB(CONO,JOB.NO,TODAY,LOADING.FLG,"M")
    S$SCR = S$SCR - 1
    SCREEN FORMAT
    CURR.REF.NO = ""
    GOSUB 50000
    GOTO 10500
  CASE S$VALUE = "I"
    PARAM = "I"
    PARAM<1,2> = "AUTO"
    PARAM<1,3> = JOB.NO
    CALL PERFORM.PROG ("JOB.SCHED.DET.MAINT",PARAM)
    SCREEN FORMAT
    SCREEN DISPLAY;;1
    S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<REF.NO,MV.TYPE>
    CURR.REF.NO = ""
    GOSUB 50000
    IF OPT = "A" THEN
      S$VAL = REF.NO
      SCREEN DISPLAY;;2
      S$VAL = REF.NO
      SCREEN DISPLAY;;3
      S$VAL = REF.NO
      SCREEN DISPLAY;;5
      S$VAL = REF.NO
      SCREEN DISPLAY;;6
      S$VAL = REF.NO
      SCREEN DISPLAY;;7
      S$VAL = REF.NO
      SCREEN DISPLAY;;12
      S$VAL = REF.NO
      SCREEN DISPLAY;;4
    END
    GOTO 10500
  CASE 1
    GOTO 10500
END CASE
J.TYPE = S$VALUE
IF J.TYPE # PREV.TYPE THEN S$DATA(8)<S$SCR,REF.NO> = ""
*
*--- GET DATE
*
10600* 
S$VAL=REF.NO
SCREEN FIELD;;8
BEGIN CASE
  CASE ALL.JOBS<REF.NO,MV.TYPE> = "" AND JBS.SCHED.MODE # ""
    S$O.R = "O";S$DEFAULT = JBS.SCHED.DATE
  CASE J.TYPE = "D" AND JBS.DUE.DATE+0 >= TODAY
    S$O.R = "O";S$DEFAULT = JBS.DUE.DATE
  CASE J.TYPE = "S"
    S$O.R = "O";S$DEFAULT = TODAY + 1
END CASE
SCREEN INPUT;;8;RETURN
IF S$VALUE < TODAY THEN
  ERRMSG = "Cannot schedule in the past. "
  GOSUB 90000
  GOTO 10600
END
J.DATE = S$VALUE
*
*--- GET PRIORITY
*
10700* 
S$VAL=REF.NO
SCREEN FIELD;;19
SCREEN INPUT;;19;RETURN
J.PRI = S$VALUE
*
*--- STORE CHANGES
10900* 
ALL.JOBS<REF.NO,MV.JOB> = JOB.NO
ALL.JOBS<REF.NO,MV.TYPE> = J.TYPE
ALL.JOBS<REF.NO,MV.DATE> = J.DATE
ALL.JOBS<REF.NO,MV.PRI> = J.PRI
RETURN
*
*--- SORT ENTRIES BY PRIORITY
*
12000* 
NEW.SID  = ""
NEW.JOBS = ""
NEW.DESC = ""
NEW.MAST = ""
NEW.EST  = ""
NEW.CUST = ""
LINE.CNT = DCOUNT(ALL.JOBS,AM)
FOR REF = 1 TO LINE.CNT
  SID = ALL.JOBS<REF,MV.PRI> * 1000 + REF
  LOCATE SID IN NEW.SID,1 BY "AR" SETTING P ELSE NULL
  NEW.SID = INSERT(NEW.SID,P,0,0,SID)
  NEW.JOBS = INSERT(NEW.JOBS,P,0,0,ALL.JOBS<REF>)
  NEW.DESC = INSERT(NEW.DESC,P,0,0,S$DATA(4)<S$SCR,REF>)
  NEW.MAST = INSERT(NEW.MAST,P,0,0,S$DATA(5)<S$SCR,REF>)
  NEW.EST = INSERT(NEW.EST,P,0,0,S$DATA(6)<S$SCR,REF>)
  NEW.CUST = INSERT(NEW.CUST,P,0,0,S$DATA(7)<S$SCR,REF>)
NEXT REF
IF NEW.JOBS # ALL.JOBS THEN
  FOR REF = 1 TO LINE.CNT
    ALL.JOBS<REF> = NEW.JOBS<REF>
    S$DATA(3)<S$SCR,REF> = NEW.JOBS<REF,MV.JOB>
    S$DATA(4)<S$SCR,REF> = NEW.DESC<REF>
    S$DATA(5)<S$SCR,REF> = NEW.MAST<REF>
    S$DATA(6)<S$SCR,REF> = NEW.EST<REF>
    S$DATA(7)<S$SCR,REF> = NEW.CUST<REF>
    S$DATA(8)<S$SCR,REF> = NEW.JOBS<REF,MV.DATE>
    S$DATA(12)<S$SCR,REF> = NEW.JOBS<REF,MV.TYPE>
    S$DATA(19)<S$SCR,REF> = NEW.JOBS<REF,MV.PRI>
  NEXT REF
  CURR.REF.NO = ""
END
RETURN
*
*---- CHECK FOR FORWARD CODES
*
20000* 
FND = 0
FOR XXX = 1 TO 7 UNTIL FND
  LOCATE FWD.CODES<XXX> IN JBS.HOLD.CODE<1>,1 SETTING FND ELSE FND = 0
NEXT XXX
RETURN
*
*---- CHECK FOR NULL CODES
*
30000* 
SBLK = 0
JCNT = DCOUNT(JBS.DEPT,VM)
FOR XXX = 1 TO JCNT UNTIL SBLK
  IF JBS.HOLD.CODE<1,XXX> = "" THEN SBLK = XXX
NEXT XXX
IF SBLK THEN
  ERRMSG = "INVALID SCHEDULE CODE ON LINE - " : XXX
  GOSUB 90000
END
RETURN
*
*---- LOAD S$DATA MATRIX
40000* 
FOR N=1 TO LINE.CNT
  S$DATA(3)<S$SCR,N>=ALL.JOBS<N,MV.JOB>
  MATREAD JOB.REC FROM JOB,CONO:ALL.JOBS<N,MV.JOB> ELSE MAT JOB.REC=""
  MATREAD JBS.REC FROM JOB.SCHED,CONO:ALL.JOBS<N,MV.JOB> ELSE MAT JBS.REC=""
  ALL.JOBS<N,MV.TYPE>=JBS.SCHED.MODE
  ALL.JOBS<N,MV.DATE>=JBS.SCHED.DATE
  IF JOB.DESC # "" THEN
    S$DATA(4)<S$SCR,N>=JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
  END ELSE
    S$DATA(4)<S$SCR,N>=JBS.JOB.COMMENT
  END
  IF JOB.MASTER # "" THEN
    S$DATA(5)<S$SCR,N>=JOB.MASTER
  END ELSE
    S$DATA(5)<S$SCR,N>=ALL.JOBS<N,MV.JOB>
  END
  IF JOB.EST#"" THEN
    S$DATA(6)<S$SCR,N>=JOB.EST
  END ELSE
    S$DATA(6)<S$SCR,N>=""
  END
  S$DATA(7)<S$SCR,N>=JBS.CUST.NAME
  S$DATA(8)<S$SCR,N>=ALL.JOBS<N,MV.DATE>
  S$DATA(12)<S$SCR,N>=ALL.JOBS<N,MV.TYPE>
  S$DATA(19)<S$SCR,N>=ALL.JOBS<N,MV.PRI>
NEXT N
RETURN
*
*---- SCROLL INTERNAL COMMENTS
50000* 
START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
IF START.REF.NO=CURR.REF.NO THEN RETURN
CURR.REF.NO=START.REF.NO
S$VAL=START.REF.NO
S$CNT=DCOUNT(S$DATA(3)<S$SCR>,VM)
SCREEN MULTI;;C;2;11;3;5;6;7;12;8;19;4
RETURN
*
*---- UPDATE PENDING JOB SCHED
*
60000* 
IF PJBS.DEPT # "" THEN
  DCNT = DCOUNT(PJBS.SCH.DATE,VM)
  S.PTR = 0;E.PTR = 0
  FOR X = DCNT TO 1 STEP -1
    IF PJBS.SCH.DATE<1,X> # "" THEN
      IF E.PTR = 0 THEN E.PTR = DCNT
      S.PTR = X
    END
  NEXT X
  SDATE = "";ALL.FLG = 1
  CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,S.PTR,E.PTR,SDATE,ALL.FLG)
  DEPT.CNT = DCOUNT(PJBS.DEPT,VM)
  FOR DC = DEPT.CNT TO 1 STEP -1
    AC = DCOUNT(JBS.A1,",")
    FOR AP = 1 TO AC
      AA = FIELD(JBS.A1,",",AP)
      AA1 = FIELD(AA,"-",1)
      AA2 = FIELD(AA,"-",2)
      IF AA2 = "" THEN AA2 = AA1
      FOR AAP = AA1 TO AA2
        PJBS.REC(AAP) = DELETE(PJBS.REC(AAP),1,DC,0)
      NEXT AAP
    NEXT AP
  NEXT DC
END
DEPT.CNT = DCOUNT(JBS.DEPT,VM)
FOR DC = 1 TO DEPT.CNT
  AC = DCOUNT(JBS.A1,",")
  FOR AP = 1 TO AC
    AA = FIELD(JBS.A1,",",AP)
    AA1 = FIELD(AA,"-",1)
    AA2 = FIELD(AA,"-",2)
    IF AA2 = "" THEN AA2 = AA1
    FOR AAP = AA1 TO AA2
      PJBS.REC(AAP) = INSERT(PJBS.REC(AAP),1,DC,0,"")
    NEXT AAP
  NEXT AP
  PJBS.DEPT<1,DC> = JBS.DEPT<1,DC>
  PJBS.CCTR<1,DC> = JBS.CCTR<1,DC>
  PJBS.SCH.HRS<1,DC> = JBS.SCH.HRS<1,DC>
  PJBS.SCH.IMP<1,DC> = JBS.SCH.IMP<1,DC>
  PJBS.OPER<1,DC> = JBS.OPER<1,DC>
  PJBS.OPER.SCH.HRS<1,DC> = JBS.OPER.SCH.HRS<1,DC>
  FOR XX = 50 TO 71
    PJBS.REC(XX)<1,DC> = JBS.REC(XX)<1,DC>
  NEXT XX
NEXT DC
PJBS.REQ.HRS = JBS.REQ.HRS
RETURN
*
*---- RESCHED PEND JOB
70000* 
LOCATE JOB.NO IN PSL.REC<1>,1 SETTING PSL.POS ELSE NULL
ACTION = ""
UPDATE.PEND = 1
DUE.DATE = PJBS.DUE.DATE
PRCS.BLK = 0
DCNT = DCOUNT(JBS.SCH.DATE,VM)
ST.PTR = 1;EN.PTR = DCNT
FOR X = DCNT TO 1 STEP -1
  IF JBS.SCH.DATE<1,X> # "" THEN
    ST.PTR = X
  END
NEXT X
ERRMSG = JBS.SCH.DATE
GOSUB 90000
ERRMSG = "ST.PTR = ":ST.PTR:"   EN.PTR = ":EN.PTR
GOSUB 90000
REQ.DATE = ""
*---- PLACE IN PENDING QUEUE
BCK.FLG = ""
REQ.DATE = TODAY + 1
CALL PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
SDATE = REQ.DATE
BEGIN CASE
  CASE ACTION = ""
  CASE ACTION = "E"
    IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
      ALL.FLG = 0
      CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
    END
    PRCS.BLK = 1
  CASE 1
    PRCS.BLK = 1
END CASE
* T20925
*      WRITE PSL.REC ON PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST";*--- TASK 19407
* T20925
MATWRITE PJBS.REC ON PEND.JOB.SCHED, CONO:JOB.NO
RETURN
*
*---- WRITE BACK JOB.SCHED.LIST
*
80000 *
READU NEW.JOBS FROM PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST" ELSE
  NEW.JOBS = ""
END
IF NEW.JOBS = SAVE.JOBS THEN
  IF ALL.JOBS = "" THEN
    DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST"
  END ELSE
    WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST"
  END
END ELSE
  DEL.JOBS = "";ADD.JOBS = ""
  SAVE.CNT = DCOUNT(ALL.JOBS,AM)
  FOR APTR = 1 TO SAVE.CNT
    LOCATE SAVE.JOBS<APTR> IN ALL.JOBS,1 SETTING FND ELSE
      DEL.JOBS<-1> = SAVE.JOBS<APTR>
    END
  NEXT APTR
  DEL.CNT = DCOUNT(DEL.JOBS,AM)
  FOR DPTR = 1 TO DEL.CNT
    LOCATE DEL.JOBS<DPTR> IN NEW.JOBS,1 SETTING FND THEN
      NEW.JOBS = DELETE(NEW.JOBS,FND,0,0)
    END
  NEXT DPTR
  ALL.CNT = DCOUNT(ALL.JOBS,AM)
  FOR APTR = 1 TO ALL.CNT
    LOCATE ALL.JOBS<APTR> IN NEW.JOBS,1 SETTING FND ELSE
      NEW.JOBS = INSERT(NEW.JOBS,FND,0,0,ALL.JOBS<APTR>)
    END
  NEXT APTR
  IF NEW.JOBS = "" THEN
    DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST"
  END ELSE
    WRITE NEW.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST"
  END
END
RETURN
*
*---- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000* 
* PRINT @(0,23):@(-4):ERRMSG:
* INPUT REPLY:
* PRINT @(0,23):@(-4):
* RETURN
*
*--- RELEASE
98888* 
RELEASE
*
*---- END OF PROGRAM
999999* 
* PRINT @(-1):
END
