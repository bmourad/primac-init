      SUBROUTINE PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NUM,LAST.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
*********************************************************************
* REVISION - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - PEN.JOB.SCHED.FWD
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 05/04/86
* DESCRIPTION
* This program will schedule all operations forward from PEND.JOB.SCHED
* record and update PEND.CCTR.SCHED file.
* The program is modified version of GEN.JOB.SCHED.FWD
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>CCTR.AVAIL
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SET UP SYSCOM
*
      SYS.TYPE = 1
      CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- LINE ITEM DIM
*
      DIM HOLD.REC(15)
      EQU DEPT         TO HOLD.REC(1)
      EQU CCTR         TO HOLD.REC(2)
      EQU H.CODE       TO HOLD.REC(3)
      EQU H.SHIFT      TO HOLD.REC(4)
      EQU H.EQUIP      TO HOLD.REC(5)
      EQU H.LOAD       TO HOLD.REC(6)
      EQU H.DATE       TO HOLD.REC(7)
      EQU H.PO         TO HOLD.REC(8)
      EQU H.DC         TO HOLD.REC(9)
      EQU H.DAYS       TO HOLD.REC(10)
      EQU H.CONT.SCH   TO HOLD.REC(11)
      EQU H.SAME.EQUIP TO HOLD.REC(12)
      EQU CCTR.HRS     TO HOLD.REC(13)
*
*---- ALL DIM
*
      DIM ALL.REC(5)
      EQU ALL.DATE TO ALL.REC(1)
      EQU ALL.EQP  TO ALL.REC(2)
      EQU ALL.SFT  TO ALL.REC(3)
      EQU ALL.HRS  TO ALL.REC(4)
*
*---- INITIALIZATION
*
      IF ACTION = "W" THEN WIN.MODE = 1 ELSE WIN.MODE = 0
      ACTION = ""
      MAT HOLD.REC = ""
      MAT ALL.REC = ""
      MAT EDIT.COM = ""
      TYP = 0
      CALL EDIT.SUB1 (MAT EDIT.COM)
      ERRMSG = ""
      REQ.DATE = LAST.DATE
      LAST.DATE = ""
      LAST.PTR = 0
      FRST.PTR = 0
      IF REQ.DATE < TODAY THEN REQ.DATE = TODAY
      READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*
*---- MAIN PROCESSING
*
      TR.CNT = DCOUNT(PJBS.DEPT,VM)
*
*---- GET CDATE
*
      IF EN.PTR + 0 = 0 THEN EN.PTR = TR.CNT
      IF ST.PTR + 0 = 0 THEN ST.PTR = 1
      SFT = 1
      XDATE = REQ.DATE
      BEGIN CASE
         CASE BCK.FLG = "Y"
         CASE BCK.FLG = "M"
         CASE 1
*        ST.PTR = 0
*        CDATE = ""
*        FOR TR = 1 TO TR.CNT UNTIL ST.PTR
*           BEGIN CASE
*           CASE PJBS.DEPT.STATUS<1,TR> # ""
*           CASE PJBS.USD.HRS<1,TR> < PJBS.SCH.HRS<1,TR>
*              ST.PTR = TR
*           END CASE
*        NEXT TR
*        BEGIN CASE
*        CASE ST.PTR = 0
*           GOTO 99999
*        CASE ST.PTR > TR.CNT
*           GOTO 99999
*        CASE ST.PTR > 1
*           ST.PTR = ST.PTR - 1
*        END CASE
      END CASE
*
*---- SCHEDULE JOB FROM TODAY FORWARD
*
1000 *
      BLK = 0
      FOR TR = ST.PTR TO EN.PTR UNTIL BLK
         DEPT = PJBS.DEPT<1,TR>
         CCTR = PJBS.CCTR<1,TR>
         H.CODE = PJBS.HOLD.CODE<1,TR>
         BEGIN CASE
            CASE PJBS.DEPT.STATUS<1,TR> = "C"
               IF PJBS.CMP.DATE<1,TR> > XDATE THEN
                  XDATE = PJBS.CMP.DATE<1,TR>
                  SFT = 3
               END
               GOTO 1899
            CASE PJBS.DEPT.STATUS<1,TR> = "I"
               BEGIN CASE
                  CASE PJBS.EXP.DATE<1,TR> > XDATE
                     XDATE = PJBS.EXP.DATE<1,TR>
                     SFT = PJBS.EXP.SHIFT<1,TR>
                  CASE PJBS.EXP.DATE<1,TR> < XDATE
                  CASE PJBS.EXP.SHIFT<1,TR> > SFT
                     SFT = PJBS.EXP.SHIFT<1,TR>
               END CASE
               GOTO 1899
            CASE PJBS.USD.HRS<1,TR> >= PJBS.SCH.HRS<1,TR>
               BEGIN CASE
                  CASE PJBS.EXP.DATE<1,TR> > XDATE
                     XDATE = PJBS.EXP.DATE<1,TR>
                     SFT = PJBS.EXP.SHIFT<1,TR>
                  CASE PJBS.EXP.DATE<1,TR> < XDATE
                  CASE PJBS.EXP.SHIFT<1,TR> > SFT
                     SFT = PJBS.EXP.SHIFT<1,TR>
               END CASE
               GOTO 1899
            CASE PJBS.USD.HRS<1,TR> > 0 AND H.CODE = "L"
               GOSUB 4000
            CASE PJBS.USD.HRS<1,TR> > 0 AND H.CODE = "SC"
               GOSUB 4000
            CASE PJBS.USD.HRS<1,TR> > 0 AND H.CODE = "SCN"
               GOSUB 4000
            CASE PJBS.USD.HRS<1,TR> > 0 AND H.CODE = "SA"
               GOSUB 4000
            CASE PJBS.USD.HRS<1,TR> > 0 AND H.CODE = "SAN"
               GOSUB 4000
            CASE PJBS.USD.HRS<1,TR> > 0
               BEGIN CASE
                  CASE PJBS.EXP.DATE<1,TR> > XDATE
                     XDATE = PJBS.EXP.DATE<1,TR>
                     SFT = PJBS.EXP.SHIFT<1,TR>
                  CASE PJBS.EXP.DATE<1,TR> < XDATE
                     XDATE = XDATE - 1
                     SFT = 3
                  CASE PJBS.EXP.SHIFT<1,TR> > SFT
                     SFT = PJBS.EXP.SHIFT<1,TR>
               END CASE
               IF SFT > 2 THEN
                  XDATE = XDATE + 1
                  SFT = 1
               END ELSE
                  SFT = SFT + 1
               END
            CASE 1
         END CASE
         CCTR.HRS = PJBS.SCH.HRS<1,TR> - PJBS.USD.HRS<1,TR>
         BGN.HRS = CCTR.HRS
*
*---- CHECK FOR HOLD
*
         H.SHIFT = PJBS.SHIFT<1,TR>
         H.EQUIP = PJBS.EQUIP<1,TR>
         H.LOAD = PJBS.OVER.LOAD<1,TR>
         H.DATE = PJBS.HOLD.DATE<1,TR>
         H.PO = PJBS.HOLD.PO<1,TR>
         H.DC = PJBS.HOLD.DP.CC<1,TR>
         H.DAYS = PJBS.HOLD.DAYS<1,TR>
         H.CONT.SCH = PJBS.CONT.SCH<1,TR>
         H.SAME.EQUIP = PJBS.SAME.EQUIP<1,TR>
         IF H.LOAD = "Y" AND H.CONT.SCH # "Y" THEN H.CONT.SCH = "Y"
         IF H.EQUIP # "" AND H.SAME.EQUIP # "Y" THEN H.SAME.EQUIP = "Y"
*
*---- CHECK THE SHIFT
*
         BEGIN CASE
            CASE H.SHIFT = ""
            CASE NOT(NUM(H.SHIFT))
               BLK = 1
               ERRMSG = "INVALID SHIFT - ":H.SHIFT:" FOR CCTR ":CCTR
               GOTO 1899
         END CASE
*
*---- CHECK THE RESOURCE
*
         BEGIN CASE
            CASE H.EQUIP = ""
            CASE NOT(NUM(H.EQUIP))
               BLK = 1
               ERRMSG = "INVALID RESOURCE NUMBER - ":H.EQUIP:" FOR CCTR ":CCTR
            CASE 1
               GOSUB 3000
         END CASE
         IF BLK THEN GOTO 1899
*
*---- ALGORITHIM TO ADJUST START DATE
*
         BEGIN CASE
            CASE PJBS.USD.HRS<1,TR> > 0
            CASE BCK.FLG = "M" AND TR = ST.PTR
            CASE 1
               IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
               CALL PEN.JOB.SCHED.FWD.DATE(CONO,ACTION,JOB.NUM,XDATE,SFT,TODAY,BLK,ERRMSG,MAT HOLD.REC,REQ.DATE,TR,ST.PTR)
         END CASE
         IF BLK THEN GOTO 1899
         IF XDATE < REQ.DATE THEN
            XDATE = REQ.DATE
            SFT = 1
         END
*
*---- SCHEDULE HOURS
*
1100 *
         GOSUB 80000
1105 *
         BEGIN CASE
            CASE BLK
               GOTO 1899
            CASE PCCS.AVL.SHR<1,SFT> < 1
               IF SFT > 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                  TPFID = CONO:CCTR:"*":XDATE
                  MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                  CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                  XDATE = XDATE + 1
                  SFT = 1
                  GOTO 1100
               END ELSE
                  SFT = SFT + 1
                  GOTO 1105
               END
            CASE PCCS.REM.HRS < 1 AND H.LOAD # "Y"
***         MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
               TPFID = CONO:CCTR:"*":XDATE
               MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
               CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
               XDATE = XDATE + 1
               SFT = 1
               GOTO 1100
         END CASE
         SDATE = XDATE
         SSFT = SFT
         GOSUB 10000
         IF BLK THEN GOTO 1899
         GOSUB 70000
1899 *
         MAT HOLD.REC = ""
      NEXT TR
      P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- CHECK IF JOB IS SCHED AND SET ACTION
*
      BEGIN CASE
         CASE BLK
            GOSUB 90000
            ACTION = "E"
         CASE 1
            DUE.DATE = XDATE
      END CASE
      EN.PTR = LAST.PTR
      ST.PTR = FRST.PTR
      GOTO 99999
*
*---------------------*
*---  SUBROUTINES  ---*
*---------------------*
*
*---- CHECK FOR RESOURCE AVAILABLITY
*
3000 *
      MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:DEPT:"*":CCTR ELSE
         MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:DEPT ELSE
            BLK = 1
            ERRMSG = "Cannot locate availability for cost center ":DEPT:"*":CCTR
         END
      END
      IF BLK THEN GOTO 3099
      SBLK = 0
      FOR MM = 1 TO 7 UNTIL SBLK
         FOR SS = 1 TO 3 UNTIL SBLK
            IF CCA.MULT<1,MM,SS> > H.EQUIP THEN SBLK = 1
         NEXT SS
      NEXT MM
      IF SBLK = 0 THEN
         X = 0
*         Y = 23
         Y = 21
         PMSG = "RESOURCE ":H.EQUIP:" IS NOT DEFINED FOR CCTR ":CCTR:". CONTINUE (Y/N)"
         TYP = 8
         IF WIN.MODE THEN
            VALUE = "N"
         END ELSE
            CALL EDIT.SUB1 (MAT EDIT.COM)
         END
         P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF VALUE # "Y" THEN
            BLK = 1
            ERRMSG = "YOU NEED TO DEFINE RESOURCE ":H.EQUIP:" ON CCTR ":CCTR
         END
      END
3099 *
      RETURN
*
*---- GET START DATE AND SHIFT FOR PARCIALLY SCHEDULE CCTR WITH
*---- OVERLAP CODES.
*
4000 *
      BEGIN CASE
         CASE PJBS.EXP.DATE<1,TR> > REQ.DATE
            XDATE = PJBS.EXP.DATE<1,TR>
            SFT = PJBS.EXP.SHIFT<1,TR>
         CASE PJBS.EXP.DATE<1,TR> < REQ.DATE
            XDATE = REQ.DATE - 1
            SFT = 3
         CASE 1
            SFT = PJBS.EXP.SHIFT<1,TR>
      END CASE
*
*---- ADVANCE TO THE NEXT SHIFT
*
      IF SFT > 2 THEN
         XDATE = XDATE + 1
         SFT = 1
      END ELSE
         SFT = SFT + 1
      END
      RETURN
*
*---- CHECK PEND.CCTR.SCHED FOR AVAIL HRS
*
10000 *
      MLT.CNT = PCCS.MULT<1,SFT>
      IF MLT.CNT < 1 THEN MLT.CNT = 1
      BEGIN CASE
         CASE H.LOAD = "Y" AND H.EQUIP # ""
10100 *
            MLT = H.EQUIP
            MPTR = MLT
            IF MPTR < 1 THEN MPTR=1 ;*C24893
         CASE H.LOAD = "Y"
10200 *
            MLT = 0
            MPTR = 1
            XPTR = 0
            FOR MM = 1 TO MLT.CNT UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            IF MLT = 0 AND XPTR > 0 THEN MLT = XPTR
         CASE H.CONT.SCH = "Y"
10300 *
            IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
            CALL PEN.JOB.SCHED.FWD.SUB(CONO,ACTION,BLK,ERRMSG,MAT ALL.REC,MAT HOLD.REC,XDATE,SFT,MLT.CNT,MAT EDIT.COM)
            IF BLK THEN GOTO 10389
            D.CNT = DCOUNT(ALL.DATE,AM)
            FOR DD = 1 TO D.CNT
               XDATE = ALL.DATE<1>
               MATREADU PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
                  MAT PEND.CCTR.SCHED.REC = ""
                  PCCS.DEPT = DEPT
                  ERRMSG = ""
                  CALL PEN.CCTR.SCHED.SUB (CONO, CCTR, XDATE, ERRMSG)
                  ERRMSG = ""
               END
               E.CNT = DCOUNT(ALL.EQP<1>,VM)
               FOR EE = 1 TO E.CNT
                  MLT = ALL.EQP<1,EE>
                  S.CNT = DCOUNT(ALL.SFT<1,EE>,SVM)
                  FOR SS = 1 TO S.CNT
                     SFT = ALL.SFT<1,EE,SS>
                     OPER.HRS = ALL.HRS<1,EE,SS>
                     GOSUB 30000
                  NEXT SS
               NEXT EE
               GOSUB 70000
               ALL.DATE = DELETE(ALL.DATE,1,0,0)
               ALL.EQP = DELETE(ALL.EQP,1,0,0)
               ALL.SFT = DELETE(ALL.SFT,1,0,0)
               ALL.HRS = DELETE(ALL.HRS,1,0,0)
            NEXT DD
10389 *
            CCTR.HRS = 0
            GOTO 19999
         CASE H.EQUIP # ""
10600 *
            MLT = H.EQUIP
            MPTR = MLT
            IF MPTR < 1 THEN MPTR=1 ;*C24893
         CASE H.SAME.EQUIP = "Y"
10700 *
            MLT = 0
            MPTR = 0
            XPTR = 0
            FOR MM = 1 TO MLT.CNT UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE MPTR = 0
                     IF PCCS.REM.SM.HRS<1,SFT,MM> > 0 THEN MPTR = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            BEGIN CASE
               CASE MLT
               CASE XPTR
                  MLT = XPTR
               CASE MPTR
                  MLT = MPTR
               CASE 1
10750 *
                  IF SFT > 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                     TPFID = CONO:CCTR:"*":XDATE
                     MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                     CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                     XDATE = XDATE + 1
                     GOSUB 80000
                     IF BLK THEN GOTO 19999
                     SFT = 1
                  END ELSE
                     SFT = SFT + 1
                  END
                  BEGIN CASE
                     CASE PCCS.AVL.SHR<1,SFT> < 1
                        GOTO 10750
                     CASE PCCS.REM.HRS < 1
                        SFT = 3
                        GOTO 10750
                     CASE 1
                        GOTO 10700
                  END CASE
            END CASE
         CASE 1
10800 *
            MLT = 0
            MPTR = 0
            XPTR = 0
            FOR MM = 1 TO MLT.CNT UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE MPTR = 0
                     IF PCCS.REM.SM.HRS<1,SFT,MM> > 0 THEN MPTR = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            BEGIN CASE
               CASE MLT
               CASE XPTR
                  MLT = XPTR
               CASE MPTR
                  MLT = MPTR
               CASE 1
10850 *
                  IF SFT > 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                     TPFID = CONO:CCTR:"*":XDATE
                     MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                     CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                     XDATE = XDATE + 1
                     GOSUB 80000
                     IF BLK THEN GOTO 19999
                     SFT = 1
                  END ELSE
                     SFT = SFT + 1
                  END
                  BEGIN CASE
                     CASE PCCS.AVL.SHR<1,SFT> < 1
                        GOTO 10850
                     CASE PCCS.REM.HRS < 1
                        SFT = 3
                        GOTO 10850
                     CASE 1
                        GOTO 10800
                  END CASE
            END CASE
      END CASE
*
*---- SCHEDULE CCTR.HRS
*
      LOOP
      UNTIL CCTR.HRS = 0 OR BLK DO
         IF PCCS.AVL.SHR<1,SFT> < 1 THEN GOTO 10999
         MLT.CNT = PCCS.MULT<1,SFT>
         IF MLT.CNT < 1 THEN MLT.CNT = 1
         BEGIN CASE
            CASE H.LOAD = "Y"
**          IF CCTR.HRS > PCCS.AVL.SHR<1,SFT> THEN    ;** NA 1-9-90 **
**             OPER.HRS = PCCS.AVL.SHR<1,SFT>         ;** NA 1-9-90 **
**          END ELSE                                 ;** NA 1-9-90 **
               OPER.HRS = CCTR.HRS
**          END                                      ;** NA 1-9-90 **
               IF MLT = 0 THEN
                  MPTR = 1                              ;** NA 1-9-90 **
                  BEGIN CASE
                     CASE PCCS.REM.SM.HRS<1,SFT,MPTR> >= OPER.HRS
                        MLT = MPTR
                     CASE PCCS.REM.SM.HRS<1,SFT,MPTR> = PCCS.AVL.SHR<1,SFT>
                        MLT = MPTR
                  END CASE
                  FOR MM = 1 TO MLT.CNT UNTIL MLT
                     BEGIN CASE
                        CASE PCCS.REM.SM.HRS<1,SFT,MM> >= OPER.HRS
                           MLT = MM
                        CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                           MPTR = MM
                     END CASE
                  NEXT MM
                  IF MLT = 0 THEN MLT = MPTR
               END
            CASE MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MLT> >= CCTR.HRS
                     OPER.HRS = CCTR.HRS
                  CASE PCCS.REM.SM.HRS<1,SFT,MLT> > 0
                     OPER.HRS = PCCS.REM.SM.HRS<1,SFT,MLT>
                  CASE 1
                     GOTO 10999
               END CASE
            CASE 1
               OPER.HRS = CCTR.HRS
         END CASE
         IF MLT = 0 THEN
            FOR MM = 1 TO MLT.CNT UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
         END
         BEGIN CASE
            CASE MLT
               GOSUB 30000
            CASE PCCS.REM.SM.HRS<1,SFT,MPTR> > 0
               MLT = MPTR
               OPER.HRS = PCCS.REM.SM.HRS<1,SFT,MLT>
               GOSUB 30000
            CASE 1
               GOSUB 70000
*CSF 24847 v
               IF PJBS.CONT.SCH<1,TR> = "Y" THEN
                  GOSUB 71000
               END
*CSF 24847 ^
               CCTR.HRS = PJBS.SCH.HRS<1,TR> - PJBS.USD.HRS<1,TR>
               BGN.HRS = CCTR.HRS
               IF SFT > 2 THEN
                  XDATE = XDATE + 1
                  SFT = 1
               END ELSE
                  SFT = SFT + 1
               END
               GOSUB 80000
               GOTO 18999
         END CASE
10999 *
         IF CCTR.HRS # 0 THEN
            IF SFT > 2 THEN
               GOSUB 70000
               XDATE = XDATE + 1
               GOSUB 80000
               IF BLK THEN GOTO 18999
               SFT = 1
               BEGIN CASE
                  CASE H.SAME.EQUIP = "Y"
                  CASE 1
                     MPTR = MLT
                     IF MPTR < 1 THEN MPTR=1 ;*C24893
                     MLT = 0
               END CASE
            END ELSE
               SFT = SFT + 1
               BEGIN CASE
                  CASE H.SAME.EQUIP = "Y"
                  CASE H.SAME.EQUIP = "S"
                     MPTR = MLT
                     IF MPTR < 1 THEN MPTR=1 ;*C24893
                     MLT = 0
                  CASE 1
               END CASE
            END
         END
18999 *
      REPEAT
19999 *
      MAT ALL.REC = ""
      RETURN
*
*---- ADD OPERATION TO PEND.CCTR.SCHED
*
30000 *
      TF = DCOUNT(PCCS.TRAN,VM) + 1
      IF PJBS.TRAN<1,TR> # "" THEN
         TRAN = PJBS.TRAN<1,TR>
      END ELSE
         TRAN = PJBS.LAST.TRAN + 1
         PJBS.LAST.TRAN = TRAN
      END
      PCCS.TRAN = INSERT(PCCS.TRAN,1,TF,0,TRAN)
      PCCS.JOB = INSERT(PCCS.JOB,1,TF,0,JOB.NUM)
      PCCS.JOB.HRS = INSERT(PCCS.JOB.HRS,1,TF,0,OPER.HRS)
      PCCS.JOB.SHIFT = INSERT(PCCS.JOB.SHIFT,1,TF,0,SFT)
      PCCS.JOB.EQUIP = INSERT(PCCS.JOB.EQUIP,1,TF,0,MLT)
      PCCS.OPER = INSERT(PCCS.OPER,1,TF,0,"ALL")
      PCCS.OPER.STATUS = INSERT(PCCS.OPER.STATUS,1,TF,0,"")
      PCCS.OPER.HRS = INSERT(PCCS.OPER.HRS,1,TF,0,OPER.HRS)
      PCCS.OPER.SHIFT = INSERT(PCCS.OPER.SHIFT,1,TF,0,SFT)
      PCCS.OPER.EQUIP = INSERT(PCCS.OPER.EQUIP,1,TF,0,MLT)
      PCCS.SCH.HRS = PCCS.SCH.HRS + OPER.HRS
**    PCCS.REM.HRS = PCCS.AVL.HRS - PCCS.SCH.HRS
      PCCS.SCH.SM.HRS<1,SFT,MLT> = PCCS.SCH.SM.HRS<1,SFT,MLT> + OPER.HRS
**    PCCS.REM.SM.HRS<1,SFT,MLT> = PCCS.REM.SM.HRS<1,SFT,MLT> - OPER.HRS
      PJBS.TRAN<1,TR> = TRAN
      IF PJBS.SCH.DATE<1,TR> = "" THEN PJBS.SCH.DATE<1,TR> = XDATE
      IF PJBS.SCH.SHIFT<1,TR> = "" THEN PJBS.SCH.SHIFT<1,TR> = SFT
      PJBS.EXP.DATE<1,TR> = XDATE
      PJBS.EXP.SHIFT<1,TR> = SFT
      PJBS.USD.HRS<1,TR> = PJBS.USD.HRS<1,TR> + OPER.HRS
      CCTR.HRS = CCTR.HRS - OPER.HRS
      OPER.HRS = 0
      IF TR > LAST.PTR THEN LAST.PTR = TR
      BEGIN CASE
         CASE FRST.PTR = 0
            LAST.DATE = XDATE
            FRST.PTR = TR
         CASE TR < FRST.PTR
            LAST.DATE = XDATE
            FRST.PTR = TR
         CASE TR = FRST.PTR AND XDATE < LAST.DATE
            LAST.DATE = XDATE
      END CASE
      RETURN
*
*---- UPDATE PEND.JOB.SCHED AND PEND.CCTR.SCHED
*
70000 *
***   MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO : CCTR :"*": XDATE
      TPFID = CONO:CCTR:"*":XDATE
      MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
***   MATWRITEU PJBS.REC ON PEND.JOB.SCHED, CONO : JOB.NUM
      TPFID = CONO:JOB.NUM
      MATBUILD TPREC FROM PJBS.REC
      CALL TRANSACTION.WRITE("WRITEU",CONO,TP.DIV,"PEND.JOB.SCHED",TPFID,TPREC,PEND.JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      RETURN
*
*---- UNSHED PEND.JOB.SCHED AND PEND.CCTR.SCHED FOR A CCTR
*
71000 *
      IF PJBS.TRAN<1,TR> = "" THEN RETURN
      ALL.FLG = 0
      IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
      CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NUM,SDATE,TR,TR,SDATE,ALL.FLG)
      RETURN
*
*---- GET PEND.CCTR.SCHED.REC
*
80000 *
      P_VALUE = "Dept - ":DEPT "R#5"
      P_VALUE := "   Cctr - ":CCTR "L#3"
      P_VALUE := "     Date - ":OCONV(XDATE, "D2/") "L#8"
      P_X = 3 ; P_Y = 23 ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* P_X = 3 ; P_Y = 23 ; P_VALUE = @(-4):"Dept - ":DEPT "R#5" ; P_OPT = "CL"
* P_X  := AM:15 ; P_Y := AM:23 ; P_VALUE := AM:"Cctr - ":CCTR "L#3"
* P_X  := AM:30 ; P_Y := AM:23 ; P_VALUE := AM:"Date - ":OCONV(XDATE, "D2/") "L#8"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      MATREADU PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
         MAT PEND.CCTR.SCHED.REC = ""
         PCCS.DEPT = DEPT
         ERRMSG = ""
         CALL PEN.CCTR.SCHED.SUB (CONO, CCTR, XDATE, ERRMSG)
         IF ERRMSG # "" THEN
            RELEASE PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
            BLK = 1
         END
      END
      IF BLK THEN GOTO 80999
      IF PCCS.AVL.HRS > 0 THEN GOTO 80999
***   MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO : CCTR :"*": XDATE
      TPFID = CONO:CCTR:"*":XDATE
      MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      XDATE = XDATE + 1
      SFT = 1
      GOTO 80000
80999 *
      RETURN
*
*---- FIND WHICH DAY OF THE WEEK
*
85000 *
      DPTR = OCONV(XDATE , "DW")
      RETURN
*
*---- ERROR ROUTINE
*
* 90000 *
* P_X = 3 ; P_Y = 23 ; P_VALUE = ERRMSG:" INPUT" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       IF NOT(WIN.MODE) THEN
*          INPUT REPLY,1 :
*       END
* P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       RETURN
90000*
      IF WIN.MODE THEN
         P_X  = 3 ; P_Y = 23 ; P_VALUE = ERRMSG:" INPUT" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END ELSE
         ERR.TYPE = 1
         CALL SI_SYSCOM(MAT SYSCOM.REC)
         RETURN
      END
99999 *
      RETURN
   END
