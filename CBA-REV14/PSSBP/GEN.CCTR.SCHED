*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - GEN.CCTR.SCHED
* AUTHOR   - NICK AMENDOLA, COMPYUTER BUSINESS ASSOCIATES
* DATE     - 05/12/85
* DESCRIPTION
* This program is used to generate the initial cost-center
* availability based upon the hours specified as normal cost center
* available hours and the specified holiday schedule.
*T20989 lanny 09/17/1996 If CCTR.SCHED.FLAG = N Clear Avail from CCTR.SCHED.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>CPYLIB>TCC
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
      PROC.TYPE = "M"
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOTO 93000
      END
      OPEN "","PREFIX" TO PREFIX ELSE
         ERRMSG = "CANNOT OPEN PREFIX FILE"
         GOTO 93000
      END
      OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN PSS.SCREENS FILE"
         GOTO 93000
      END
      OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN CCTR.SCHED FILE"
         GOTO 93000
      END
      OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE
         ERRMSG = "CANNOT OPEN CCTR.AVAIL FILE"
         GOTO 93000
      END
      OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
         ERRMSG = "CANNOT OPEN HOLIDAY.SCHED FILE"
         GOTO 93000
      END
      OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
         ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
         GOTO 93000
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"
         GOTO 93000
      END
      OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.CCTR.SCHED FILE"
         GOTO 93000
      END
      OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
         ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
         GOTO 93000
      END
      OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
         ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      IF CONO = "END" THEN GOTO 99999
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
      MAT GEN.XREF.REC = ""
      SCREEN INIT;#
      S$SCR = 1
      SCREEN DEFINE;GEN.CCTR.SCHED
      SCREEN FORMAT
      SCREEN COUNT;;4
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      SDATE = ""
      EDATE = ""
      DEPTS = ""
      DDESC = ""
      CCTRS = ""
      CDESC = ""
      GOTO 110
*
*----- MAIN PROCESSING
*
100*
      RELEASE
      SCREEN CLEAR
110*
      S$DATA(1)<S$SCR> = TODAY
      SCREEN DISPLAY;;1
120*
      GOSUB 1100
      IF S$VALUE = "END" THEN
         SCREEN CLOSE
         GOTO 99999
      END
      GOSUB 1200
      IF S$VALUE = "END" THEN GOTO 100
      LINE.CNT = 0
      CURR.REF.NO = ""
      OPTION = "A"
      GOTO 510
*
*---- GET OPERATOR REQUEST
*
500*
      BEGIN CASE
         CASE PROC.TYPE = "M"
            SCREEN FIELD;;9
            SCREEN INPUT;;9
         CASE 1
            SCREEN FIELD;;23
            SCREEN INPUT;;23
      END CASE
      OPTION = S$VALUE
510*
      BEGIN CASE
         CASE NUM(OPTION) AND OPTION > "0"
            ON OPTION GOSUB 1100,1200
         CASE OPTION = "A" AND LINE.CNT < 999
            DONE = 0
            FOR REF.NO = LINE.CNT+1 TO 999 UNTIL DONE
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  DONE = 1
                  GOSUB 700
               END ELSE
                  LINE.CNT = LINE.CNT + 1
                  IF DEPTS<1,REF.NO> = "ALL" THEN DONE = 1
               END
            NEXT REF.NO
            REF.NO = LINE.CNT
            CURR.REF.NO = ""
            GOSUB 50000
         CASE OPTION = "C" AND LINE.CNT > 0
            GOSUB 600
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF.NO = S$VALUE
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  CURR.REF.NO = ""
                  GOSUB 50000
               END
            END
         CASE OPTION = "D" AND LINE.CNT > 0
            GOSUB 600
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF.NO = S$VALUE
               GOSUB 700
               LINE.CNT = LINE.CNT - 1
               IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
               CURR.REF.NO = ""
               GOSUB 50000
            END
         CASE OPTION = "I" AND LINE.CNT > 0
            GOSUB 600
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF.NO = S$VALUE
               GOSUB 800
               LINE.CNT = LINE.CNT + 1
               CURR.REF.NO = ""
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  GOSUB 700
                  LINE.CNT = LINE.CNT - 1
               END
               CURR.REF.NO = ""
               GOSUB 50000
            END
         CASE OPTION = "S"
            REF.NO = CURR.REF.NO + LINE.COUNT
            IF REF.NO > LINE.CNT THEN REF.NO = 1
            GOSUB 50000
         CASE OPTION = "ST"
            REF.NO = 1
            GOSUB 50000
         CASE OPTION = "SB"
            REF.NO = COUNT(DEPTS,VM) + 1
            GOSUB 50000
         CASE OPTION = "SR"
            REF.NO = CURR.REF.NO - LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 50000
         CASE OPTION = "E" OR OPTION = "END"
            GOTO 100
         CASE OPTION = "F"
            TP.ERRMSG = ""
            ERRMSG = ""
            FOR SEL = 1 TO LINE.CNT WHILE ERRMSG = ""
               DEPT = DEPTS<1,SEL>
               IF DEPT = "ALL" THEN
                  DEPT.DIV = "ALL"
                  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
               END ELSE
                  MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT THEN
                     GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
                  END
               END
            NEXT SEL
            IF ERRMSG = "" THEN
               GOSUB 70000
               GOTO 100
            END
         CASE 1
            ERRMSG = "Invalid Selection"
            GOSUB 90000
      END CASE
      GOTO 500
*
*---- GET LINE REFERENCE NUMBER
*
600*
      SCREEN FIELD;;10
      S$MINV = CURR.REF.NO
      S$MAXV = S$MINV + LINE.COUNT - 1
      IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
      SCREEN INPUT;;10
      RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
      DEPTS = DELETE(DEPTS,1,REF.NO,0)
      DDESC = DELETE(DDESC,1,REF.NO,0)
      CCTRS = DELETE(CCTRS,1,REF.NO,0)
      CDESC = DELETE(CDESC,1,REF.NO,0)
      S$DATA(5) = DELETE(S$DATA(5),S$SCR,REF.NO,0)
      S$DATA(6) = DELETE(S$DATA(6),S$SCR,REF.NO,0)
      S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF.NO,0)
      S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF.NO,0)
      RETURN
*
*---- INSERT MULTI-LINE DATA
*
800*
      DEPTS = INSERT(DEPTS,1,REF.NO,0,"")
      DDESC = INSERT(DDESC,1,REF.NO,0,"")
      CCTRS = INSERT(CCTRS,1,REF.NO,0,"")
      CDESC = INSERT(CDESC,1,REF.NO,0,"")
      S$DATA(5) = INSERT(S$DATA(5),S$SCR,REF.NO,0,"")
      S$DATA(6) = INSERT(S$DATA(6),S$SCR,REF.NO,0,"")
      S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF.NO,0,"")
      S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF.NO,0,"")
      RETURN
*
*---- GET FIELD 1
*
1100*
      SCREEN FIELD;;2
      S$MINV = TODAY
      S$MAXV = TODAY+1000
      SCREEN INPUT;;2;RETURN
      SDATE = S$VALUE
      RETURN
*
*---- GET FIELD 2
*
1200*
      SCREEN FIELD;;3
      S$MINV = SDATE
      S$MAXV = SDATE+1000
      SCREEN INPUT;;3;RETURN
      EDATE = S$VALUE
      RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
      S$VAL = REF.NO
      SCREEN DISPLAY;;4
10100*
      S$DATA(5)<S$SCR,REF.NO> = DEPTS<1,REF.NO>
      S$VAL = REF.NO
      SCREEN FIELD;;5
      IF REF.NO = 1 THEN
         S$O.R = "O"
         S$DEFAULT = "ALL"
      END
      SCREEN INPUT;;5;RETURN
      BEGIN CASE
         CASE S$VALUE = "ALL"
            IF REF.NO # 1 THEN
               ERRMSG = "ALL may only be used on first entry"
               GOSUB 90000
               GOTO 10100
            END
            MAT DEPT.REC = ""
         CASE NOT(S$VALUE MATCH "2N") AND NOT(S$VALUE MATCH "2N-2N")
            ERRMSG = "Invalid Department"
            GOSUB 90000
            GOTO 10100
         CASE 1
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:S$VALUE ELSE
               ERRMSG = "Invalid Department"
               GOSUB 90000
               GOTO 10100
            END
      END CASE
      DEPT = S$VALUE
      DEPTS<1,REF.NO> = DEPT
10200*
      DDESC<1,REF.NO> = DEPT.DESC
      S$DATA(6)<S$SCR,REF.NO> = DEPT.DESC
      S$VAL = REF.NO
      SCREEN DISPLAY;;6
10300*
      IF DEPT = "ALL" THEN
         S$VALUE = "ALL"
         S$DATA(7)<S$SCR,REF.NO> = "ALL"
         S$VAL = REF.NO
         SCREEN DISPLAY;;7
      END ELSE
         S$DATA(7)<S$SCR,REF.NO> = CCTRS<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;7
         SCREEN INPUT;;7;RETURN
      END
      CCTR = S$VALUE
      CCTRS<1,REF.NO> = CCTR
      BEGIN CASE
         CASE CCTR = "ALL"
            MAT CCTR.REC = ""
         CASE NOT(NUM(CCTR))
            ERRMSG = "Invalid Cost Center"
            GOSUB 90000
            GOTO 10300
         CASE 1
            MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
               ERRMSG = "Invalid Cost Center"
               GOSUB 90000
               GOTO 10300
            END
            IF CCTR.DEPT # DEPT THEN
               ERRMSG = "This cost center does not belong to specified department"
               GOSUB 90000
               GOTO 10300
            END
            IF CCTR.SCHED.FLAG = "N" THEN
               ERRMSG = "Cost Center may not be scheduled"
               GOSUB 90000
               GOTO 10300
            END
            IF CCTR.MASTER # "" AND CCTR.MASTER # CCTR THEN
               ERRMSG = "This is not a master Cost Center"
               GOSUB 90000
               GOTO 10300
            END
      END CASE
10400*
      CDESC<1,REF.NO> = CCTR.DESC
      S$DATA(8)<S$SCR,REF.NO> = CCTR.DESC
      S$VAL = REF.NO
      SCREEN DISPLAY;;8
      RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000*
      START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = LINE.CNT
      SCREEN MULTI;;C;4;5;6;7;8
      RETURN
*
*---- PROCESS SPECIFIED DEPARTMENTS AND COST CENTERS
*
70000*
      SEL = 1
      SEL.DEPT = DEPTS<1,SEL>
      IF SEL.DEPT = "ALL" THEN
         SELECT DEPARTMENT
70100    READNEXT ID ELSE
            GOTO 70199
         END
         IF CONO # ID[1,3] THEN GOTO 70100
         DEPT = ID[4,99]
         IF NOT(DEPT MATCH "2N") AND NOT(DEPT MATCH "2N-2N") THEN GOTO 70100
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE GOTO 70100
         GOSUB 80000
         GOTO 70100
      END ELSE
         FOR SEL = 1 TO LINE.CNT
            DEPT = DEPTS<1,SEL>
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
               SCREEN CLOSE
               GOTO 99999
            END
            GOSUB 80000
         NEXT SEL
      END
70199 *
      P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*
*---- PROCESS DEPARTMENT
*
80000*
*      P_X  = 3 ; P_Y = 23 ; P_VALUE = "Processing Department ":DEPT ; P_OPT = "CL"
DPMSG = "Processing Department ":DEPT ; P_OPT = "CL"
      IF CCTRS<1,SEL> = "ALL" THEN
         CCTR.CNT = DCOUNT(DEPT.CCTRS,VM)
         FOR C = 1 TO CCTR.CNT
            CCTR = DEPT.CCTRS<1,C>
            GOSUB 80500
         NEXT C
      END ELSE
         CCTR = CCTRS<1,SEL>
         GOSUB 80500
      END
      RETURN
*
*---- PROCESS COST CENTER
*
80500*
      IF NOT(NUM(CCTR)) THEN GOTO 80599
      MATREAD CCTR.REC FROM COST.CNTR, CONO : CCTR ELSE GOTO 80599
*T20989      IF CCTR.SCHED.FLAG = "N" THEN GOTO 80599
      IF CCTR.MASTER # "" AND CCTR.MASTER # CCTR THEN GOTO 80599
      IF CCTR.DEPT # DEPT THEN GOTO 80599
      P_X  = 3 ; P_Y = 23
 P_VALUE = DPMSG: " Processing Cost Center ":CCTR ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BLK = 0
      FOR XDATE = SDATE TO EDATE UNTIL BLK
         MATREADU CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
            MAT CCTR.SCHED.REC = ""
         END
         IF CCTR.SCHED.FLAG = 'N' AND CCS.AVL.HRS+0 = 0 AND CCS.SCH.HRS+0 = 0 THEN RELEASE CCTR.SCHED,CONO:CCTR:"*":XDATE; GOTO 80499
         CCS.DEPT = CCTR.DEPT
         ERRMSG = ""
         CALL GEN.CCTR.SCHED.SUB (CONO, CCTR, XDATE, ERRMSG)
         IF ERRMSG = "" THEN
***         MATWRITE CCTR.SCHED.REC ON CCTR.SCHED, CONO:CCTR:"*":XDATE
*T20989 v
            IF CCTR.SCHED.FLAG = 'N' THEN
               CCS.AVL.HRS = 0
               CCS.REM.HRS = CCS.AVL.HRS - CCS.SCH.HRS
               FOR NSFT = 1 TO DCOUNT(CCS.AVL.SHR,VM)
                  CCS.AVL.SHR<1,NSFT> = 0
                  CCS.REM.SM.HRS<1,NSFT,1> = 0 - CCS.SCH.SM.HRS<1,NSFT>
                  FOR MEQP = 2 TO CCS.MULT<1,NSFT>; CCS.REM.SM.HRS<1,NSFT,MEQP> = 0; NEXT MEQP
               NEXT NSFT
            END
*T20989 ^
            TPFID = CONO:CCTR:"*":XDATE
            MATBUILD TPREC FROM CCTR.SCHED.REC
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"CCTR.SCHED",TPFID,TPREC,CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
         END ELSE
            RELEASE CCTR.SCHED, CONO:CCTR:"*":XDATE
            GOSUB 90000
            BLK = 1
         END
80499*
      NEXT XDATE
80599*
      RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
      BEGIN CASE
         CASE PROC.TYPE = "M"
            READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
            REQDIV = DEPT.DIV
            CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
            BEGIN CASE
               CASE TP.DIV = "X"
                  RELEASE PSS.LOCK, CONO:"TP"
                  IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
               CASE TP.DIV = ""
                  DCNT = DCOUNT(REQDIV,VM)
                  FOR DPTR = 1 TO DCNT
                     CDIV = REQDIV<1,DPTR>
                     LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
                     READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
                  NEXT DPTR
            END CASE
            RELEASE PSS.LOCK, CONO:"TP"
            TP.ERRMSG = ERRMSG
         CASE 1
            TP.DIV = ""
            DELETE PSS.LOCK, @TTY
            TP.ERRMSG = ""
      END CASE
      RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999*
*       PRINT @(-1):
      STOP
   END
