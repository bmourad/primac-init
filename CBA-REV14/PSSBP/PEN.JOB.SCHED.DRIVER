********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* PROGRAM     - PEN.JOB.SCHED.DRIVER
* AUTHOR      - CAROL SAGE, C.B.A.
* DATE        - 07/21/87
* MODIFIED    - 11/02/95 TERRY NORTHCUTT TASK 19407 DIVISIONALIZATION
* MODIFIED - 02/21/96, NA, TASK 20124, LOAD PEND FORWARD
* DESCRIPTION
* Maintains CONTROL CONO:DIV.OWNER:"PEND.SCHED.LIST" list for job scheduling:
* Jobs are scheduled in the order listed.
********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      PROC.TYPE = "M"
      PROMPT ""
      MV.JOB = 1
      MV.TYPE = 2
      MV.DATE = 3
      FWD.CODES = "SC"
      FWD.CODES<2> = "SCN"
      FWD.CODES<3> = "SA"
      FWD.CODES<4> = "SAN"
      FWD.CODES<5> = "SL"
      FWD.CODES<6> = "SLN"
      FWD.CODES<7> = "SLD"
      ERRMSG = ""
*
*---- OPEN ALL FILES
*
      OPEN "COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;GO 999999
      OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;GO 999999
      OPEN "JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;GO 999999
      OPEN "JOB.SCHED" TO JOB.SCHED ELSE ERRMSG="CANNOT OPEN JOB.SCHED FILE";GOSUB 90000;GO 999999
      OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE ERRMSG="CANNOT OPEN PEND.JOB.SCHED FILE";GOSUB 90000;GO 999999
      OPEN "JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE ERRMSG="CANNOT OPEN JOB.CRTL.DATE.EXC FILE";GOSUB 90000;GO 999999
      OPEN "PSS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN PSS.SCREENS FILE";GOSUB 90000;GO 999999
      OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE ERRMSG = "CCTR.SCHED FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE ERRMSG = "PEND.CCTR.SCHED FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE ERRMSG = "CCTR.AVAIL FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE ERRMSG = "HOLIDAY.SCHED FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "OPERATION" TO OPERATION ELSE ERRMSG = "OPERATION FILE IS MISSING"; GOSUB 90000; GO 999999
      OPEN "PSS.CONTROL" TO PSS.CONTROL ELSE ERRMSG="CANNOT OPEN PSS.CONTROL FILE";GOSUB 90000;GO 999999
      OPEN "PSS.HIERARCHY" TO PSS.HIERARCHY ELSE ERRMSG="CANNOT OPEN PSS.HIERARCHY FILE";GOSUB 90000;GO 999999
      OPEN "PSS.JOURNAL" TO PSS.JOURNAL ELSE ERRMSG="CANNOT OPEN PSS.JOURNAL FILE";GOSUB 90000;GO 999999
      OPEN "PSS.LOCK" TO PSS.LOCK ELSE ERRMSG="CANNOT OPEN PSS.LOCK FILE";GOSUB 90000;GO 999999
*
*--- CHECK SYSTEM HIERARCHY
*
      MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
         ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
         GOSUB 90000
         GOTO 999999
      END
      MAT PSHR.REC = ""
*
*--- GET COMPANY
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      IF CONO = "END" THEN GOTO 999999
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
      READ LOADING.FLG FROM PSS.CONTROL, CONO : "LOADING.FLG" ELSE
         READ LOADING.FLG FROM PSS.CONTROL, "LOADING.FLG" ELSE LOADING.FLG = "N"
      END
*---- TASK 19407
*
* PERFORM PROCREAD
*
      PROCREAD BUFFER ELSE
         ERRMSG = "MUST RUN FROM PROC"
         GOSUB 90000
         GOTO 999999
      END
      DIV.OWNER = BUFFER<1>
*---- TASK 19407
*
*--- CHECK FOR LOCKS
*
      DUMMY = ""
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "UNSCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL UNSCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      RELEASE PSS.CONTROL, CONO : DIV.OWNER : "UNSCHED.FLG"
      DUMMY = ""
      ALL.JOBS = ""
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "JOB.SCHED.LIST" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL MULTI SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      RELEASE PSS.CONTROL, CONO : DIV.OWNER : "UNSCHED.FLG" ; *---- TASK 19407
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "SCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 98888
      END
      RELEASE PSS.CONTROL, CONO : DIV.OWNER : "SCHED.FLG" ; *---- TASK 19407
      DUMMY = ""
      READU ALL.JOBS FROM PSS.CONTROL, CONO : DIV.OWNER : "PEND.SCHED.LIST" ELSE ALL.JOBS = "" ; *---- TASK 19407
*
*---- INITIALIZATION SCEERN
*
      SCREEN INIT;#
      S$SCR=1
      SCREEN DEFINE;PEN.JOB.SCHED.DRIVER
      SCREEN FORMAT
      SCREEN COUNT;;3
      LINE.COUNT=S$LCNT
      LINE.SPACE=S$LSPC
      TP.ERRMSG = ""
*
*---- MAIN PROCESSING
100 *
      SCREEN CLEAR
      GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
      S$DATA(1)<S$SCR>=TODAY
      SCREEN DISPLAY;;1
      LINE.CNT= DCOUNT(ALL.JOBS<1>,VM)
      IF LINE.CNT > 0 THEN
         GOSUB 40000
         REF.NO=1
         CURR.REF.NO=""
         GOSUB 50000
      END ELSE
         ERRMSG = "No pending jobs"
         GOSUB 90000
         GOTO 98000
      END
*
*---- OPTIONS
500 *
      BEGIN CASE
         CASE PROC.TYPE = "M" AND TP.DIV # "X"
            S$DATA(9)<S$SCR>=""
            SCREEN FIELD;;9
            SCREEN INPUT;;9
         CASE 1
            S$DATA(23)<S$SCR>=""
            SCREEN FIELD;;23
            SCREEN INPUT;;23
      END CASE
      OPT=S$VALUE
510 *
      BEGIN CASE
         CASE OPT="S" OR OPT="SF"
            REF.NO=CURR.REF.NO+LINE.COUNT
            IF REF.NO > LINE.CNT THEN REF.NO=1
            GOSUB 50000
         CASE OPT="ST"
            REF.NO=1
            GOSUB 50000
         CASE OPT="SB"
            REF.NO=LINE.CNT
            GOSUB 50000
         CASE OPT="SR"
            REF.NO=CURR.REF.NO-LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 50000
         CASE OPT="P"
            IF LINE.CNT > 0 THEN GOSUB 1000
            S$DATA(3)<S$SCR>=""
            S$DATA(4)<S$SCR>=""
            S$DATA(5)<S$SCR>=""
            S$DATA(6)<S$SCR>=""
            S$DATA(7)<S$SCR>=""
            S$DATA(8)<S$SCR>=""
            S$DATA(11)<S$SCR>=""
            S$DATA(12)<S$SCR>=""
            LINE.CNT= DCOUNT(ALL.JOBS<1>,VM)
            GOSUB 40000
            REF.NO=1
            CURR.REF.NO=""
            GOSUB 50000
***      WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"PEND.SCHED.LIST"
            TPREC = ALL.JOBS
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         CASE OPT="END" OR OPT="E"
            GOTO 98000
      END CASE
      GOTO 500
*-------------------*
*--- SUBROUTINES ---*
*-------------------*
*
*--- PROCESS JOB SCHEDULE
*
1000 *
      FOR REF.NO = 1 TO LINE.CNT
         PRCS.BLK = 0
         GOSUB 50000
         S$VAL = REF.NO
         S$DATA(11)<S$SCR,REF.NO> = "*"
         SCREEN DISPLAY;;11
         JOB.NO = ALL.JOBS<MV.JOB,REF.NO>
         REC.LOCK = 0
         MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO : JOB.NO LOCKED REC.LOCK = 1 ELSE
            ERRMSG = "Invalid PEND.JOB.SCHED "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         MATREADU JBS.REC FROM JOB.SCHED,CONO:JOB.NO ELSE MAT JBS.REC = ""
         IF REC.LOCK THEN
            ERRMSG = "PEND.JOB.SCHED record is locked. "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         ST.PTR = 0 ; EN.PTR = 0
         IF PJBS.DEPT # "" THEN
            DCNT = DCOUNT(PJBS.SCH.DATE,VM)
            FOR X = DCNT TO 1 STEP -1
               IF PJBS.SCH.DATE<1,X> # "" THEN
                  IF EN.PTR = 0 THEN EN.PTR = X
                  ST.PTR = X
               END
            NEXT X
            SDATE = ""; ALL.FLG = 1; ACTION = ""
            CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,ST.PTR,EN.PTR,SDATE,ALL.FLG)
         END
1010 *
         GOSUB 20000
         IF FND AND ALL.JOBS<MV.TYPE,REF.NO> = "D" THEN
            ERRMSG = "CANNOT SCHEDULE 'SC' BACK"
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         MATREAD JOB.REC FROM JOB, CONO : JOB.NO ELSE MAT JOB.REC = ""
         IF JOB.STATUS<1,1> = 9 THEN
            ERRMSG = "This job is cancelled "
            GOSUB 90000
            PRCS.BLK = 1
            GOTO 1099
         END
         GOSUB 30000
         IF SBLK THEN
            PRCS.BLK = 1
            GOTO 1099
         END
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "NOW PROCESSING SCHEDULE ROUTINE" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         OLD.TYPE = ""
         DUE.DATE = ""
         ACTION = ""
         UPDATE.PEND = 1
         REQ.DATE = ALL.JOBS<MV.DATE,REF.NO>
*
         ALL.JOBS<MV.TYPE,REF.NO> = "S"
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "Now Processing Pending Schedule Routine (Front to Back)" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         BCK.FLG = ""
         ACTION = ""
         REQ.DATE = TODAY + 1                         ;* NICK 06/01/93
         CALL PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
         SDATE = REQ.DATE
         BEGIN CASE
            CASE ACTION = ""
            CASE ACTION = "E"
               IF OLD.TYPE # "" THEN ALL.JOBS<MV.TYPE,REF.NO> = OLD.TYPE
               S$VAL = REF.NO
               S$DATA(12)<S$SCR,REF.NO> = ALL.JOBS<MV.TYPE,REF.NO>
               SCREEN DISPLAY;;12
               IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
                  ALL.FLG = 0
                  CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
               END
               PRCS.BLK = 1
            CASE 1
               PRCS.BLK = 1
         END CASE
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1099 *
         S$VAL = REF.NO
         S$DATA(11)<S$SCR,REF.NO> = ""
         SCREEN DISPLAY;;11
         RELEASE PEND.JOB.SCHED, CONO : JOB.NO
         RELEASE JOB.SCHED,CONO:JOB.NO
      NEXT REF.NO
      RETURN
*
*---- CHECK FOR FORWARD CODES
*
20000 *
      FND = 0
      FOR XXX = 1 TO 7 UNTIL FND
         LOCATE FWD.CODES<XXX> IN PJBS.HOLD.CODE<1>,1 SETTING FND ELSE FND = 0
      NEXT XXX
      RETURN
*
*---- CHECK FOR NULL CODES
*
30000 *
      SBLK = 0
      JCNT = DCOUNT(PJBS.DEPT,VM)
      FOR XXX = 1 TO JCNT UNTIL SBLK
         IF PJBS.HOLD.CODE<1,XXX> = "" THEN SBLK = XXX
      NEXT XXX
      IF SBLK THEN
         ERRMSG = "INVALID SCHEDULE CODE ON LINE - " : XXX
         GOSUB 90000
      END
      RETURN
*
*---- LOAD S$DATA MATRIX
40000 *
      S$DATA(3)<S$SCR>=ALL.JOBS<MV.JOB>
      S$DATA(8)<S$SCR>=ALL.JOBS<MV.DATE>
      S$DATA(12)<S$SCR>=ALL.JOBS<MV.TYPE>
      FOR N=1 TO LINE.CNT
         MATREAD JOB.REC FROM JOB,CONO:ALL.JOBS<MV.JOB,N> ELSE MAT JOB.REC=""
         MATREAD PJBS.REC FROM PEND.JOB.SCHED,CONO:ALL.JOBS<MV.JOB,N> ELSE MAT PJBS.REC=""
         IF JOB.DESC # "" THEN
            S$DATA(4)<S$SCR,N>=JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
         END ELSE
            S$DATA(4)<S$SCR,N>=PJBS.JOB.COMMENT
         END
         IF JOB.MASTER # "" THEN
            S$DATA(5)<S$SCR,N>=JOB.MASTER
         END ELSE
            S$DATA(5)<S$SCR,N>=ALL.JOBS<MV.JOB,N>
         END
         IF JOB.EST#"" THEN
            S$DATA(6)<S$SCR,N>=JOB.EST
         END ELSE
            S$DATA(6)<S$SCR,N>=""
         END
         S$DATA(7)<S$SCR,N>=PJBS.CUST.NAME
      NEXT N
      RETURN
*
*---- SCROLL INTERNAL COMMENTS
50000 *
      START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO=CURR.REF.NO THEN RETURN
      CURR.REF.NO=START.REF.NO
      S$VAL=START.REF.NO
      S$CNT=LINE.CNT
      SCREEN MULTI;;C;2;11;3;5;6;7;12;8;4
      RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
      BEGIN CASE
         CASE PROC.TYPE = "M"
            READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
            REQDIV = DIV.OWNER
            CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
            BEGIN CASE
               CASE TP.DIV = "X"
                  RELEASE PSS.LOCK, CONO:"TP"
                  IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
               CASE TP.DIV = ""
                  DCNT = DCOUNT(REQDIV,VM)
                  FOR DPTR = 1 TO DCNT
                     CDIV = REQDIV<1,DPTR>
                     LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
                     READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
                  NEXT DPTR
            END CASE
            RELEASE PSS.LOCK, CONO:"TP"
            TP.ERRMSG = ERRMSG
         CASE 1
            TP.DIV = ""
            DELETE PSS.LOCK, @TTY
            TP.ERRMSG = ""
      END CASE
      RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*--- CLOSE
98000 *
      SCREEN CLOSE
*
*--- RELEASE
98888 *
      RELEASE
*
*---- END OF PROGRAM
999999 *
*       PRINT @(-1):
   END
