********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - CCTR.BACK.LOG.RPT
* AUTHOR   - WALID YAMOUT, C.B.A.
* DATE     - 09/20/88
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* DESCRIPTION
* This program will print Cost Center Back Log Report.
*T25901 cmykleb 03/26/2002 * Change pgm to use GET.PROG.HEAD for heading.
*********************************************************************
*
*--- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*
*---- SET UP SYSCOM
*
   SYS.TYPE = 1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*--- INITIALIZATION
*
   PROMPT ""
   ERRMSG = ""
   MAT FILE.VARS = ""
   MAT COMP.REC = ""
   CHK.JOB = ""
   CHK.TRAN = ""
   CHK.HRS = ""
*
*--- PROC READ
*
   PROCREAD BUFFER ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000
      GOTO 999999
   END
   CONO = BUFFER<1>
   CO.NAME = BUFFER<2>
*
*--- OPEN FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "COMPANY FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CONTROL FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
      ERRMSG = "DEPARTMENT FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","COST.CNTR" TO COST.CNTR ELSE
      ERRMSG = "COST.CNTR FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
      ERRMSG = "CCTR.SCHED FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
      ERRMSG = "PEND.CCTR.SCHED FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
      ERRMSG = "JOB.SCHED FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
      ERRMSG = "PEND.JOB.SCHED FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG = "JOB FILE IS MISSING"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
      ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
      GOSUB 91000
      GOTO 999999
   END
   OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
      ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
      GOSUB 91000
      GOTO 999999
   END
*
*--- SETUP HEADINGS
*
*---- TASK # 19937 ----
   MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
*----------------------
   READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
   LINE.CNT = 99
   PG.NO = 0
   PREV.CCTR = ""
   PREV.DEPT = ""
   PREV.DATE = ""
   TOT.CCTR = 0
   PRINT.FLG = 0
   HD1 = ""
   HD2 = ""
   SP = SPACE(80)
   SP9 = SP[1,9]
*T25901 v
*  IF BUFFER<5> = "P" THEN
*     PAGE.SIZE = 53
*     HD1 = OCONV(TODAY, "D2/") "L#8"
*     LN = INT((71 - LEN(CO.NAME)) / 2) - 4
*     IF LN < 1 THEN LN = 3
*     HD1 = HD1 : SP[1,LN] : CO.NAME
*     LN = 65 - LEN(HD1)
*     IF LN < 1 THEN LN = 3
*     HD1 = HD1 : SP[1,LN] : "PAGE "
*     HD2 = OCONV(TIME(), "MTS") "L#8"
*     HD2 = HD2 : SP[1,12] : "C O S T   C E N T E R   B A C K   L O G"
*     PRINTER ON
*  END ELSE
*     PAGE.SIZE = 22
*     HD2 = OCONV(TODAY,"D2/") : SP[1,6]
*     HD2 = HD2 : "C O S T   C E N T E R   B A C K   L O G"
*     HD2 = HD2 : SP[1,6] : "PAGE "
*  END
   PRINTER ON
   PAGE.SIZE = 53
   CO.NAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = BUFFER<2>
   HD1 = "" ; HD2 = ""
   CALL GET.PROG.HEAD(CONO,CO.NAME,REPORT.NAME,REPORT.NUMBER,"",HD1,HD2)
*T25901 ^
   DASH = STR("-",70)
   HLINE1 = "  Job" : SP[1,14] : "Description" : SP[1,12]
   HLINE1 = HLINE1 : "Date   Day  Hours   Accum"
   HLINE2 = "--------  " : DASH[1,30] : "  -----  ---  -----  ------"
*
*--- MAIN PROCESS
*
100*
   READNEXT ID ELSE GOTO 999999
   MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, ID ELSE GOTO 100
   IF CCS.JOB = "" THEN GOTO 100
   CCTR.NO = FIELD(ID,"*",1)
   CCTR.NO = CCTR.NO[4,3]
   CC.DATE = FIELD(ID,"*",2)
   JCNT = DCOUNT(CCS.JOB,VM)
   BLK = 1
   FOR JB = 1 TO JCNT WHILE BLK
      IF CCS.OPER.STATUS<1,JB> # "C" THEN BLK = 0
   NEXT JB
   IF BLK THEN GOTO 100
   GOSUB 1000
   PREV.CCTR = CCTR.NO
   PREV.DEPT = CCS.DEPT
   PREV.DATE = CC.DATE
   MATREAD CCTR.REC FROM COST.CNTR, CONO : PREV.CCTR ELSE
      MAT CCTR.REC = ""
      CCTR.DESC = "CCTR - " : PREV.CCTR
   END
   MATREAD DEPT.REC FROM DEPARTMENT, CONO : PREV.DEPT ELSE
      MAT DEPT.REC = ""
      DEPT.DESC = "DEPT - " : PREV.DEPT
   END
   GOSUB 2000
*
*--- PROCESS ALL RECORDS
*
   DATA = 1
   LOOP
      READNEXT ID ELSE DATA = 0
   WHILE DATA DO
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, ID ELSE GOTO 199
      IF CCS.JOB = "" THEN GOTO 199
      CCTR.NO = FIELD(ID,"*",1)
      CCTR.NO = CCTR.NO[4,3]
      CC.DATE = FIELD(ID,"*",2)
      JCNT = DCOUNT(CCS.JOB,VM)
      BLK = 1
      FOR JB = 1 TO JCNT WHILE BLK
         IF CCS.OPER.STATUS<1,JB> # "C" THEN BLK = 0
      NEXT JB
      IF BLK THEN GOTO 199
      BEGIN CASE
         CASE CCS.DEPT # PREV.DEPT
            CHK.JOB = ""
            CHK.HRS = ""
            CHK.TRAN = ""
            PRINT.FLG = 0
            GOSUB 1000
            IF DCOUNT(XEQP,AM) < 1 THEN GOTO 199
            LINE.CNT = 99
            PREV.DEPT = CCS.DEPT
            PREV.CCTR = CCTR.NO
            PREV.DATE = CC.DATE
            TOT.CCTR = 0
            MATREAD CCTR.REC FROM COST.CNTR, CONO : PREV.CCTR ELSE
               MAT CCTR.REC = ""
               CCTR.DESC = "CCTR - " : PREV.CCTR
            END
            MATREAD DEPT.REC FROM DEPARTMENT, CONO : PREV.DEPT ELSE
               MAT DEPT.REC = ""
               DEPT.DESC = "DEPT - " : PREV.DEPT
            END
         CASE CCTR.NO # PREV.CCTR
            CHK.JOB = ""
            CHK.HRS = ""
            CHK.TRAN = ""
            PRINT.FLG = 0
            GOSUB 1000
            IF DCOUNT(XEQP,AM) < 1 THEN GOTO 199
            LINE.CNT = 99
            PREV.CCTR = CCTR.NO
            PREV.DATE = CC.DATE
            TOT.CCTR = 0
            MATREAD CCTR.REC FROM COST.CNTR, CONO : PREV.CCTR ELSE
               MAT CCTR.REC = ""
               CCTR.DESC = "CCTR - " : PREV.CCTR
            END
         CASE CC.DATE # PREV.DATE
            GOSUB 1000
            IF DCOUNT(XEQP,AM) < 1 THEN GOTO 199
            IF PRINT.FLG AND LINE.CNT < PAGE.SIZE THEN
               PRINT
               LINE.CNT = LINE.CNT + 1
            END
            PREV.DATE = CC.DATE
      END CASE
      GOSUB 2000
199*
   REPEAT
   PRINTER OFF
   GOTO 999999
*
*--- PRINT LINES
*
1000*
   ALL.JOB = ""
   ALL.HRS = ""
   ALL.TRAN = ""
*--- SUMMARY BY EQUIP BY SHIFT
   JCNT = DCOUNT(CCS.JOB,VM)
   FOR JB = JCNT TO 1 STEP - 1
      IF CCS.JOB<1,JB> = "" THEN GOTO 1099
      IF CCS.JOB.HRS<1,JB> + 0 = 0 THEN GOTO 1099
      IF CCS.JOB.EQUIP<1,JB> + 0 = 0 THEN GOTO 1099
      IF CCS.OPER.STATUS<1,JB> = "C" THEN GOTO 1099
      IF CCS.TRAN<1,JB> = "" THEN GOTO 1099
      EQP = CCS.JOB.EQUIP<1,JB>
      BEGIN CASE
         CASE CCS.JOB.SHIFT<1,JB> = 1
            SFT = 1
         CASE CCS.JOB.SHIFT<1,JB> = 2
            SFT = 2
         CASE 1
            SFT = 3
      END CASE
      PTR = 1
      LOOP
      WHILE PTR DO
         LOCATE CCS.JOB<1,JB> IN ALL.JOB<EQP,SFT>,PTR SETTING FND ELSE
            FND = 0
            PTR = 0
         END
         BEGIN CASE
            CASE PTR = 0
            CASE CCS.TRAN<1,JB> = ALL.TRAN<EQP,SFT,FND>
               PTR = 0
            CASE 1
               PTR = FND + 1
         END CASE
      REPEAT
      IF FND THEN
         ALL.HRS<EQP,SFT,FND> = ALL.HRS<EQP,SFT,FND> + CCS.JOB.HRS<1,JB>
      END ELSE
         ALL.JOB = INSERT(ALL.JOB,EQP,SFT,1,CCS.JOB<1,JB>)
         ALL.HRS = INSERT(ALL.HRS,EQP,SFT,1,CCS.JOB.HRS<1,JB>)
         ALL.TRAN = INSERT(ALL.TRAN,EQP,SFT,1,CCS.TRAN<1,JB>)
      END
1099*
   NEXT JB
*--- SUMMARY BY EQUIP
1100*
   XEQP = ""
   XJOB = ""
   XHRS = ""
   XTRAN = ""
   ECNT = DCOUNT(ALL.JOB,AM)
   FOR EQP = 1 TO ECNT
      SCNT = DCOUNT(ALL.JOB<EQP>,VM)
      IF SCNT > 2 THEN
         JCNT = DCOUNT(ALL.JOB<EQP,3>,SVM)
         FOR JB = JCNT TO 1 STEP - 1
            JOB.NO = ALL.JOB<EQP,3,JB>
            HRS = ALL.HRS<EQP,3,JB>
            TRAN = ALL.TRAN<EQP,3,JB>
            PTR = 1
            LOOP
            WHILE PTR DO
               LOCATE JOB.NO IN ALL.JOB<EQP,2>,PTR SETTING FND ELSE
                  FND = 0
                  PTR = 0
               END
               BEGIN CASE
                  CASE PTR = 0
                  CASE TRAN = ALL.TRAN<EQP,2,FND>
                     PTR = 0
                  CASE 1
                     PTR = FND + 1
               END CASE
            REPEAT
            IF FND THEN
               HRS = HRS + ALL.HRS<EQP,2,FND>
               ALL.JOB = DELETE(ALL.JOB,EQP,3,JB)
               ALL.HRS = DELETE(ALL.HRS,EQP,3,JB)
               ALL.TRAN = DELETE(ALL.TRAN,EQP,3,JB)
               ALL.JOB = DELETE(ALL.JOB,EQP,2,FND)
               ALL.HRS = DELETE(ALL.HRS,EQP,2,FND)
               ALL.TRAN = DELETE(ALL.TRAN,EQP,2,FND)
               TF = DCOUNT(ALL.JOB<EQP,2>,VM) + 1
               ALL.JOB = INSERT(ALL.JOB,EQP,2,TF,JOB.NO)
               ALL.HRS = INSERT(ALL.HRS,EQP,2,TF,HRS)
               ALL.TRAN = INSERT(ALL.TRAN,EQP,2,TF,TRAN)
            END
         NEXT JB
      END
      IF SCNT > 1 THEN
         JCNT = DCOUNT(ALL.JOB<EQP,1>,SVM)
         FOR JB = JCNT TO 1 STEP - 1
            JOB.NO = ALL.JOB<EQP,1,JB>
            HRS = ALL.HRS<EQP,1,JB>
            TRAN = ALL.TRAN<EQP,1,JB>
            PTR = 1
            LOOP
            WHILE PTR DO
               LOCATE JOB.NO IN ALL.JOB<EQP,2>,PTR SETTING FND ELSE
                  FND = 0
                  PTR = 0
               END
               BEGIN CASE
                  CASE PTR = 0
                  CASE TRAN = ALL.TRAN<EQP,2,FND>
                     PTR = 0
                  CASE 1
                     PTR = FND + 1
               END CASE
            REPEAT
            IF FND THEN
               HRS = HRS + ALL.HRS<EQP,2,FND>
               ALL.JOB = DELETE(ALL.JOB,EQP,1,JB)
               ALL.HRS = DELETE(ALL.HRS,EQP,1,JB)
               ALL.TRAN = DELETE(ALL.TRAN,EQP,1,JB)
               ALL.JOB = DELETE(ALL.JOB,EQP,2,FND)
               ALL.HRS = DELETE(ALL.HRS,EQP,2,FND)
               ALL.TRAN = DELETE(ALL.TRAN,EQP,2,FND)
               TF = 1
               ALL.JOB = INSERT(ALL.JOB,EQP,2,TF,JOB.NO)
               ALL.HRS = INSERT(ALL.HRS,EQP,2,TF,HRS)
               ALL.TRAN = INSERT(ALL.TRAN,EQP,2,TF,TRAN)
            END
         NEXT JB
      END
      FOR SFT = SCNT TO 1 STEP - 1
         JCNT = DCOUNT(ALL.JOB<EQP,SFT>,SVM)
         FOR JB = JCNT TO 1 STEP - 1
            PTR = 1
            LOOP
            WHILE PTR DO
               LOCATE ALL.JOB<EQP,SFT,JB> IN XJOB<EQP>,PTR SETTING FND ELSE
                  FND = 0
                  PTR = 0
               END
               BEGIN CASE
                  CASE PTR = 0
                  CASE ALL.TRAN<EQP,SFT,JB> = XTRAN<EQP,FND>
                     PTR = 0
                  CASE 1
                     PTR = FND + 1
               END CASE
            REPEAT
            IF FND THEN
               XHRS<EQP,FND> = XHRS<EQP,FND> + ALL.HRS<EQP,SFT,JB>
            END ELSE
               XEQP<EQP> = EQP
               XJOB = INSERT(XJOB,EQP,1,0,ALL.JOB<EQP,SFT,JB>)
               XHRS = INSERT(XHRS,EQP,1,0,ALL.HRS<EQP,SFT,JB>)
               XTRAN = INSERT(XTRAN,EQP,1,0,ALL.TRAN<EQP,SFT,JB>)
            END
         NEXT JB
      NEXT SFT
   NEXT EQP
   ALL.JOB = ""
   ALL.HRS = ""
   ALL.TRAN = ""
   ECNT = DCOUNT(XEQP,AM)
   FOR EQP = ECNT TO 1 STEP - 1
      IF XEQP<EQP> = "" THEN
         XEQP = DELETE(XEQP,EQP,0,0)
         XJOB = DELETE(XJOB,EQP,0,0)
         XHRS = DELETE(XHRS,EQP,0,0)
         XTRAN = DELETE(XTRAN,EQP,0,0)
      END
   NEXT EQP
*
*--- CHECK REMAINING HOURS
*
1200*
   ECNT = DCOUNT(XEQP,AM)
   FOR EQP = ECNT TO 1 STEP - 1
      JCNT = DCOUNT(XJOB<EQP>,VM)
      FOR JB = JCNT TO 1 STEP - 1
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE XJOB<EQP,JB> IN CHK.JOB,PTR SETTING FND ELSE
               FND = 0
               PTR = 0
            END
            BEGIN CASE
               CASE PTR = 0
               CASE XTRAN<EQP,JB> = CHK.TRAN<FND>
                  PTR = 0
               CASE 1
                  PTR = FND + 1
            END CASE
         REPEAT
         IF FND = 0 THEN
            FND = DCOUNT(CHK.JOB,AM) + 1
            CHK.JOB<FND> = XJOB<EQP,JB>
            CHK.TRAN<FND> = XTRAN<EQP,JB>
            CHK.HRS<FND> = 0
            MATREAD JBS.REC FROM JOB.SCHED, CONO:CHK.JOB<FND> ELSE
               MAT JBS.REC = ""
            END
            PTR = 1
            LOOP
            WHILE PTR DO
               LOCATE CCTR.NO IN JBS.CCTR<1>,PTR SETTING SFT ELSE
                  SFT = 0
                  PTR = 0
               END
               BEGIN CASE
                  CASE PTR = 0
                  CASE CHK.TRAN<FND> = JBS.TRAN<1,SFT>
                     PTR = 0
                     CHK.HRS<FND> = JBS.ACT.HRS<1,SFT>
                  CASE 1
                     PTR = SFT + 1
               END CASE
            REPEAT
         END
         BEGIN CASE
            CASE CHK.HRS<FND> < 1
            CASE CHK.HRS<FND> > XHRS<EQP,JB>
               CHK.HRS<FND> = CHK.HRS<FND> - XHRS<EQP,JB>
               XHRS<EQP,JB> = 0
            CASE CHK.HRS<FND> = XHRS<EQP,JB>
               XHRS<EQP,JB> = 0
               CHK.HRS<FND> = 0
            CASE 1
               XHRS<EQP,JB> = XHRS<EQP,JB> - CHK.HRS<FND>
               CHK.HRS<FND> = 0
         END CASE
         IF XHRS<EQP,JB> < 1 THEN
            XJOB = DELETE(XJOB,EQP,JB,0)
            XHRS = DELETE(XHRS,EQP,JB,0)
            XTRAN = DELETE(XTRAN,EQP,JB,0)
         END
      NEXT JB
      IF XJOB<EQP> = "" THEN
         XEQP = DELETE(XEQP,EQP,0,0)
         XJOB = DELETE(XJOB,EQP,0,0)
         XHRS = DELETE(XHRS,EQP,0,0)
         XTRAN = DELETE(XTRAN,EQP,0,0)
      END
   NEXT EQP
   RETURN
*
*--- PRINT THE DAY
*
2000*
   ECNT = DCOUNT(XEQP,AM)
   FOR EQP = 1 TO ECNT
      JCNT = DCOUNT(XJOB<EQP>,VM)
      FOR JB = 1 TO JCNT
         IF LINE.CNT >= PAGE.SIZE THEN
            GOSUB 80000
         END
         JOB.NO = XJOB<EQP,JB>
         TOT.CCTR = TOT.CCTR + XHRS<EQP,JB>
         MATREAD JBS.REC FROM JOB.SCHED, CONO : JOB.NO ELSE
            MAT JBS.REC = ""
            JBS.CUST.NAME = "NOT ON FILE"
         END
*---- TASK # 19937 ----
         JDESC = JBS.CUST.NAME
         IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
            MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
               IF TRIM(JOB.DESC<1,1>) # "" THEN
                  IF CO.PSS.JDESC.FLAG = "J" THEN
                     JDESC = JOB.DESC<1,1>
                  END ELSE
                     JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
                  END
               END
            END
         END
*----------------------
         V.LINE = ""
*---- TASK # 19937 ----
*           V.LINE = V.LINE : JOB.NO "L#8  " : JBS.CUST.NAME "L#30  "
         V.LINE = V.LINE : JOB.NO "L#8  " : JDESC "L#30  "
*----------------------
         V.LINE = V.LINE : OCONV(PREV.DATE, "D2/")[1,5] "L#5  "
         V.LINE = V.LINE : OCONV(PREV.DATE, "DWA")[1,3] "L#3  "
         V.LINE = V.LINE : OCONV(XHRS<EQP,JB>, "MD2") "R#5  "
         V.LINE = V.LINE : OCONV(TOT.CCTR, "MD2") "R#6  "
         IF XEQP<EQP> > 1 THEN
            V.LINE = V.LINE : XEQP<EQP> "R#1"
         END
         PRINT V.LINE
         LINE.CNT = LINE.CNT + 1
         PRINT.FLG = 1
      NEXT JB
   NEXT EQP
   XEQP = ""
   XJOB = ""
   XHRS = ""
   XTRAN = ""
   RETURN
*
*--- HEADING ROUTINE
*
80000*
   PRINT CHAR(12)
   PG.NO = PG.NO + 1
   LINE.CNT = 1
   PRINT HD1 : PG.NO
   PRINT HD2
   PRINT
   PRINT CCTR.DESC "L#30" : SP9 : DEPT.DESC "R#30"
   PRINT
   PRINT DASH
   PRINT HLINE1
   PRINT HLINE2
   LINE.CNT = LINE.CNT + 7
   RETURN
*
*--- ERROR ROUTINES
*
91000*
   ERR.TYPE = 1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
   ERR.TYPE = 3
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*
999999*
END
