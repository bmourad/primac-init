*COPY>CPYLIB>COM1
**********************************************************************
* REVISION    - [11.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM      - PSS.MULT.SCHED.MAINT
* BY           - GORDON A. (TOMMY) THOMPSON, Vercom Software
* DATE         - 04/03/02
* DESCRIPTION
*
*T26505 thompson 04/03/2002 * THIS PROGRAM ALLOWS USER TO ENTER MULTIPLE 
*                           * JOBS FOR SCHEDULING
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
   MAT FILE.VARS = ''
   OPEN '', 'PSS.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'PSS.SCREENS FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'JOB' TO JOB ELSE
      ERRMSG = 'JOB FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'CUSTOMER' TO CUSTOMER ELSE
      ERRMSG = 'CUSTOMER FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'JOB.SCHED' TO JOB.SCHED ELSE
      ERRMSG = 'JOB.SCHED FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'
      GOTO 93000
   END
   MAT COMP.REC = ''
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
******************
* INITIALIZATION *
******************
*
***** T23278 v
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY FILE RECORD IS MISSING FOR COMPANY ":CONO
      GOTO 93000
   END 
*
*
   MAT EDIT.COM.DRIVER = ""
   DASHES = STR('-',80)
   UNKNOWN = STR('?',30)
   OLD.NAME = ''
   PAGE.SIZE = 15
   BEGIN.PAGE = 4
   LINE.SPACE = 1
   LINES = 0
   LN = 0 ; * T26556
   OLD.START.LINE = 0
   COM.JOB = ''
   SAVE.SCH.JOB = ''
*******************
* MAIN PROCESSING *
*******************
100*
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'MULT.SCHED.MAINT'
   ECD.ACTION=1;CALL SCRN.EDIT
   ECD.SCRN.NO = 1
200*
   MAT JOB.REC = ''; SAVE.COM.JOB = '' ;COM.JOB = ''
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
250 *
   MORE = 1
   LOOP
      ECD.NUM = 5
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST = 'END' OR REQUEST = 'E'
            IF SAVE.SCH.JOB  # "" THEN
               ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE = "Y" THEN
                  MORE = 0
                  GO 99999
               END ELSE
                  GOSUB 11000
                  GOTO 250
               END
               GOTO 99999
            END
            MORE = 0
            GOTO 99999
         CASE REQUEST = 'A'
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 10010
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 11000
         CASE REQUEST = 'C'
            GOSUB 10900
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 10010
            END
         CASE REQUEST = 'D'
            GOSUB 10900
            IF LN.NO THEN
               LN = LN.NO
               SAVE.SCH.JOB = DELETE(SAVE.SCH.JOB,1,LN,0)
               COM.JOB = DELETE(COM.JOB,1,LN,0)
               LINES = COUNT(SAVE.SCH.JOB,VM) + (SAVE.SCH.JOB # '')
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 11000
         CASE REQUEST = 'S'
            LN = LN + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 11000
         CASE REQUEST = 'F'
            CNT = COUNT(SAVE.SCH.JOB,VM) + (SAVE.SCH.JOB # '')
            FOR I = 1 TO CNT
               MATREAD JOB.REC FROM JOB, CONO: SAVE.SCH.JOB<1,I> ELSE   MAT JOB.REC = ""
               IF JOB.STATUS<1,1> > 2 THEN GO 300
               PARAM = ''
               PARAM<1,1> = CONO
               PARAM<1,2> = SAVE.SCH.JOB<1,I>
               PARAM<1,3> = 'N'
               MATREAD JBS.REC FROM JOB.SCHED, SAVE.SCH.JOB<1,I> THEN
                  PARAM<1,4> = 'R'
               END ELSE
                  IF JOB.EST # "" THEN 
                     PARAM<1,4> = 'P'
                  END ELSE
                     GO 300
                  END
               END
               CALL PERFORM.PROG ('JOB.SCHED.EXTRACT',PARAM)
300 *
            NEXT I
            SAVE.SCH.JOB = ""
            COM.JOB = ""
            MORE = 0
            GO 99999
      END CASE
   WHILE MORE DO REPEAT
   GOTO 200
1000*
   ECD.NUM = 2
   ECD.ACTION = 4
   CALL SCRN.EDIT
   DIV.DESC = ECD.RET.VALUE
   RETURN
10000*
   IF COM.JOB = '' THEN
      ACTION = 'A'
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 10010
      WHILE LINES > OLD.LINES DO REPEAT
   END
   LN = 1
   GOSUB 11000
   RETURN
10010 GOSUB 11000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100 X = 5
   Y = SLN
   TYP = 1
   MINL = 2
   MAXL = 8
   O.R = 'O'
   DEFAULT = SAVE.SCH.JOB<1,LN>
   CALL EDIT.SUB
*T26556 v
   IF VALUE = 'END' AND REQUEST = 'C' THEN
      P_X = 5 ; P_Y = SLN ; P_VALUE = SAVE.SCH.JOB<1,LN> ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10999
   END
*T26556 ^
   IF VALUE = 'END' OR VALUE = '' THEN
      IF COM.JOB<1,LN> = '' THEN
         SAVE.SCH.JOB = DELETE(SAVE.SCH.JOB,1,LN,0)
         COM.JOB = DELETE(COM.JOB,1,LN,0)
      END
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10999
   END
   LOCATE VALUE IN SAVE.SCH.JOB<1>,1 SETTING FND ELSE FND = 0
*T26556 v
*  IF FND # 0 THEN
   IF FND # 0 AND VALUE # SAVE.SCH.JOB<1,LN> THEN
*T26556 ^
      ERRMSG = 'JOB (':VALUE:') IS ALREADY ON THE LIST.'
      GOSUB 91000; GOTO 10100
   END
   IF JOB.STATUS<1,1> > 2 THEN 
      ERRMSG = 'JOB (':VALUE:') IS PAST SCHEDULE STATUS.'
      GOSUB 91000; GOTO 10100
   END
   MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
      ERRMSG = 'JOB (':VALUE:') IS NOT ON FILE.'
      GOSUB 91000; GOTO 10100
   END
   IF JOB.STATUS<1,1> > 2 THEN 
      ERRMSG = 'JOB (':VALUE:') IS PAST SCHEDULE STATUS.'
      GOSUB 91000; GOTO 10100
   END
   SAVE.SCH.JOB<1,LN> = VALUE
   COM.JOB<1,LN> = JOB.COMMENTS
   P_X  = 15 ; P_Y = SLN ; P_VALUE = COM.JOB<1,LN> "L#63" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LINES = COUNT(SAVE.SCH.JOB,VM) + (SAVE.SCH.JOB # '')
10999 RETURN
10900 GOSUB 11000
   IF LINES = 0 THEN LN.NO = "" ; RETURN ; * T26556
   ECD.NUM = 11
   ECD.MINV = OLD.START.LINE
   IF LAST.LINE < LINES THEN
      ECD.MAXV = LAST.LINE
   END ELSE
      ECD.MAXV = LINES
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
   RETURN
11000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   IF START.LINE = OLD.START.LINE THEN GOTO 11999
   OLD.START.LINE = START.LINE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   CNT = 1
   FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:SAVE.SCH.JOB<1,N> "L#8"
      P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:COM.JOB<1,N> "L#63"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
11999 RETURN
*20000*
**  SCV.REC(2)<ECD.SCRN.NO> = JOB.ID
*  SCV.REC(3)<ECD.SCRN.NO> = JOB.COMMENTS
   GOSUB 63000
21000*
   LINES = COUNT(SAVE.SCH.JOB,VM) + (SAVE.SCH.JOB # '')
   FOR I = 1 TO LINES
      MATREAD JOB.REC FROM JOB, CONO : SAVE.SCH.JOB<1,I> ELSE
         COM.JOB = "UNKNOWN"
      END
      COM.JOB<1,1> = JOB.COMMENTS
   NEXT I
   LN = 1
   OLD.START.LINE = 0
   GOSUB 11000
   RETURN
63000 ECD.ACTION=3;CALL SCRN.EDIT
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999 *  END OF PROGRAM
   ECD.ACTION = 99; CALL SCRN.EDIT
END
