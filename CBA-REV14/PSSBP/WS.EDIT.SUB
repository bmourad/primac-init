      SUBROUTINE WS.EDIT.SUB(MAT EDIT.COM, MAT WCOM)
*********************************************************************
*
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - WS.EDIT.SUB
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/10/91
*
* DESCRIPTION
*
*   This routine provides a BASIC interface between        
*   on-line processing program and a terminal operator.  
*   The following types of editting may be requested.    
*
*       1 - ALPHANUMERIC                                     
*       2 - ALPHABETIC                                       
*       3 - NUMERIC                                          
*       4 - DECIMAL                                          
*       5 - (OPEN)                                           
*       6 - DATE                                             
*       7 - PATTERN MATCH                                    
*       8 - (Y)ES OR (N)O                                    
*       9 - (OPEN)                                           
*
*   Field length checking, range checking, left or       
*   right justification, and external to internal data   
*   conversion is also supported.                        
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>PSSBP>WINCOM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      VALUE = ""
*
*---- MAIN PROCESSING
*
      PROMPT ""
      IF TYP = 0 OR TYP > 9 THEN
         ERRMSG = ""
         GOTO 190
      END
*
*---- DISPLAY DIALOG BOX
*
100 *
      DBOX.WIDTH = MAXL + 3
      IF LEN(PMSG) > MAXL THEN DBOX.WIDTH = LEN(PMSG)
      IF DBOX.WIDTH < 19 THEN DBOX.WIDTH = 19
*
      WCOM.CAPTION = ""
      WCOM.STYLE   = "X"
      WCOM.COL     = X
      WCOM.ROW     = Y
      WCOM.WIDTH   = DBOX.WIDTH
      WCOM.HEIGHT  = 7
      WCOM.FTYPE   = "SYSTEM"
      CALL DEFINE.DIALOG.BOX(MAT WCOM)
*
      WCOM.CLASS   = "STATIC"
      WCOM.IDENT   = 100
      WCOM.COL     = 1
      WCOM.ROW     = 1
      WCOM.WIDTH   = LEN(PMSG)
      WCOM.HEIGHT  = 1
      WCOM.DATA    = PMSG
      CALL DEFINE.DIALOG.CONTROL(MAT WCOM)
*
      WCOM.CLASS   = "EDIT"
      WCOM.IDENT   = 101
      WCOM.COL     = 1
      WCOM.ROW     = 2
      WCOM.WIDTH   = MAXL + 1
      WCOM.HEIGHT  = 1.5
      WCOM.DATA    = DEFAULT
      WCOM.FCOLOR  = "BLACK"
      CALL DEFINE.DIALOG.CONTROL(MAT WCOM)
*
      WCOM.CLASS   = "BUTTON"
      WCOM.DATA    = "OK"
      WCOM.IDENT   = 1
      WCOM.COL     = INT((DBOX.WIDTH-16)/3)
      WCOM.ROW     = 5
      WCOM.WIDTH   = 8
      WCOM.HEIGHT  = 1.5
      WCOM.FCOLOR  = "BLACK"
      CALL DEFINE.DIALOG.CONTROL(MAT WCOM)
*
      WCOM.CLASS   = "BUTTON"
      WCOM.DATA    = "CANCEL"
      WCOM.IDENT   = 2
      WCOM.COL     = DBOX.WIDTH - 8 - INT((DBOX.WIDTH-16)/3)
      WCOM.ROW     = 5
      WCOM.WIDTH   = 8
      WCOM.HEIGHT  = 1.5
      WCOM.FCOLOR  = "BLACK"
      CALL DEFINE.DIALOG.CONTROL(MAT WCOM)
*
*---- GET OPERATOR REPLY
*
110 *
      CALL PROCESS.DIALOG(MAT WCOM)
      DVALUE = ""
      DONE = 0
      LOOP
      UNTIL DONE DO
         CALL GET.INPUT(TYPE,WND,DATA,0,MAT WCOM)
         BEGIN CASE
         CASE DATA = "OK"
            DONE = 1
         CASE DATA = "CANCEL"
            DONE = 1
         CASE WND = 101
            DVALUE = DATA
         CASE 1
            WCOM.CAPTION = "WS.EDIT.SUB"
            WCOM.TYPE = "Q"
            ERRMSG = "Received message: ":TYPE:"-":WND:"-":DATA
            GOSUB 90000
         END CASE
      REPEAT
*
      IF DVALUE = " " THEN
         DVALUE = ""
         DEFAULT = ""
      END
      INLEN = LEN(DVALUE)
      T.DVALUE = TRIM(DVALUE)
*
      BEGIN CASE
*
*---- CHECK INPUT LENGTH
*
      CASE INLEN < 1
         IF O.R = "O" THEN
            MINL = 0
            DVALUE = DEFAULT
            INLEN = LEN(DVALUE)
            IF DVALUE = "" THEN
               VALUE = DVALUE
               GOTO 170
            END
         END ELSE
            ERRMSG = "Input required"
            GOSUB 90000
            GOTO 110
         END
*
*---- CHECK END REQUEST
*
      CASE DVALUE = "END"
         DVALUE = PVALUE
         VALUE  = "END"
         GOTO 170
*
*---- CHECK HELP REQUEST
*
      CASE T.DVALUE = "?"
         IF HMSG = "" THEN HMSG = "Sorry, no help message available"
         WCOM.DATA = HMSG
         CALL DISPLAY.MESSAGE(MAT WCOM)
         GOTO 110
*
*---- RANGE CHECK INPUT LENGTH
*
      CASE INLEN < MINL
         ERRMSG = "A minimum of ": MINL : " characters is required"
         GOSUB 90000
         GOTO 110
      END CASE
*
*---- CHECK ILLEGAL CHARACTER INPUT
*
      T.LEN = LEN(T.DVALUE)
      FOR N = 1 TO T.LEN
         DEC.EQUIV = SEQ(T.DVALUE[N,1])
         IF DEC.EQUIV < 32 OR DEC.EQUIV > 126 THEN
            ERRMSG = "Invalid input - please re-key"
            GOSUB 90000
            GOTO 110
         END
      NEXT N
*
*---- THE FOLLOWING ALLOWS DATE OR SPECIFIED INPUT
*
      IF TYP = 6 AND VALDAT # "" THEN
         LOCATE DVALUE IN VALDAT<1>,1 SETTING Z ELSE
            VALDAT = ""
            GOTO 130
         END
         VALUE = DVALUE
         GOTO 170
      END
130   ERRMSG = ""
*
*---- ZERO OR BLANK FILL IF REQUESTED
*
      BEGIN CASE
      CASE FILL.CHR = "" OR INLEN >= MAXL
      CASE NUM(FILL.CHR) AND NOT(NUM(DVALUE))
      CASE 1
         IF FILL.CHR = "B" THEN FILL.CHR = " "
         IF JUSTIFY = "R" THEN
            DVALUE = STR(FILL.CHR,MAXL-INLEN):DVALUE
         END ELSE
            DVALUE = DVALUE:STR(FILL.CHR,MAXL-INLEN)
         END
      END CASE
*
*---- PROCESS EDIT REQUEST
*
      ON TYP GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000
      IF ERRMSG # "" THEN
         GOSUB 90000
         GOTO 110
      END
*
*---- RANGE CHECK IF REQUESTED
*
      IF MINV = MAXV AND (MINV = 0 OR MINV = "") THEN GOTO 160
      IF VALUE < MINV OR VALUE > MAXV THEN
         ERRMSG = "Out of range"
         GOSUB 90000
         GOTO 110
      END
*
*---- CHECK VALID INPUT
*
160   IF VALDAT # "" THEN
         LOCATE VALUE IN VALDAT<1>,1 SETTING Z ELSE
            ERRMSG = "Invalid response"
            GOSUB 90000
            GOTO 110
         END
      END
*
*---- INITIALIZE ALL PARAMETERS
*
170 *
190 *
      TYP       = 1
      PVALUE    = ""
      MINL      = 1
      MAXL      = 1
      MINV      = ""
      MAXV      = ""
      O.R       = "R"
      DEFAULT   = ""
      JUSTIFY   = ""
      SCALER    = 2
      PATRN     = ""
      EMODE     = 1
      EX        = 0
      EY        = 23
      PMSG      = ""
      HMSG      = ""
      ECHO.BACK = 1
      VID       = ""
      VALDAT    = ""
      AUTO.RTN  = 0
      FILL.CHR = ""
      RETURN
*
*------------------- E D I T   R O U T I N E S ---------------------*
*
*---- EDIT ALPHANUMERIC INPUT *
*
1000 *
      VALUE = DVALUE
      RETURN
*
*---- EDIT ALPHABETIC INPUT *
*
2000 *
      FOR I = 1 TO INLEN WHILE ERRMSG = ""
         CHR = DVALUE[I,1]
         IF CHR < "A" OR CHR > "Z" THEN
            ERRMSG = "Alphabetic input required"
         END
      NEXT I
      IF ERRMSG = "" THEN
         VALUE = DVALUE
      END
      RETURN
*
*---- EDIT NUMERIC INPUT *
*
3000 *
      IF DVALUE MATCHES "0N" THEN
         VALUE = DVALUE
      END ELSE
         ERRMSG = "Numeric input required"
      END
      RETURN
*
*---- EDIT SCALED DECIMAL INPUT *
*
4000 *
      IF NOT(NUM(DVALUE)) THEN GOTO 4900
      IF LEN(FIELD(DVALUE,".",1)) > (MAXL - SCALER - 1) THEN GOTO 4900
      IF LEN(FIELD(DVALUE,".",2)) > SCALER THEN GOTO 4900
      CNV = "MD" : SCALER
      VALUE = ICONV(DVALUE,CNV)
      DVALUE= OCONV(VALUE,CNV)
      RETURN
4900  ERRMSG = "Decimal input required"
      RETURN
*
*---- EDIT (OPEN) *
*
5000 *
      VALUE = DVALUE
      RETURN
*
*---- EDIT DATE INPUT *
*
6000 *
      IF DVALUE = "DATE" THEN DVALUE = OCONV(DATE(),"D2")
      VALUE = ICONV(DVALUE,"D")
      IF VALUE = DVALUE OR VALUE = "" THEN
         ERRMSG = "Invalid date"
      END ELSE
         DVALUE = OCONV(VALUE,"D2/")
         IF MINV = MAXV AND (MINV = 0 OR MINV = "") THEN GOTO 6999
         IF MINV = "DATE" THEN MINV = DATE()
         IF MAXV = "DATE" THEN MAXV = DATE()
6999  END
      RETURN
*
*---- EDIT PATTERN INPUT *
*
7000 *
      CNT = COUNT(PATRN,VM) + (PATRN # "")
      FOR I = 1 TO CNT
         IF DVALUE MATCHES PATRN<1,I> THEN
            VALUE = DVALUE
            GOTO 7999
         END
      NEXT I
      ERRMSG = "Invalid format"
7999  RETURN
*
*---- EDIT YES OR NO *
*
8000 *
      IF DVALUE # "Y" AND DVALUE # "N" THEN
         ERRMSG = "Please respond (Y)esor (N)o"
      END ELSE
         VALUE = DVALUE
      END
      RETURN
*
*---- EDIT (OPEN) *
*
9000 *
      VALUE = DVALUE
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      WCOM.DATA = ERRMSG
      CALL MESSAGE.BOX(MAT WCOM)
      ERRMSG = ""
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      RETURN
      END
