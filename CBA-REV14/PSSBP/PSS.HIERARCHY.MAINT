*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - PSS.HIERARCHY.MAINT
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 11/09/88
* DESCRIPTION
* Maintain cost center / department hierarchy master file.
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF
  DIM ALL.REC(3)
  EQU ALL.TO   TO ALL.REC(1)
  EQU ALL.CODE TO ALL.REC(2)
  EQU ALL.DAYS TO ALL.REC(3)
*
*---- PRE-INITIALIZATION
*
  PROC.TYPE = "M"
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PREFIX FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.HIERARCHY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.JOURNAL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.LOCK FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*---- INITIALIZATION
*
  ERRMSG = ""
  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
    ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
    GOSUB 90000
    GOTO 999999
  END
  MAT GEN.XREF.REC = ""
*
*--- GET COMPANY
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  IF CONO = "END" THEN GOTO 999999
  READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
*--- INIT SCREEN
*
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;PSS.HIERARCHY.MAINT
  SCREEN FORMAT
  SCREEN COUNT;;11
  DEPT.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  CURR.REF = ""
  TP.ERRMSG = ""
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  SCREEN CLEAR
110 *
  S$DATA(1)<S$SCR> = TODAY
  SCREEN DISPLAY;;1
120 *
  S$DATA(2)<S$SCR> = ""
  SCREEN DISPLAY;;2
  SCREEN FIELD;;2
*     S$TYP = 3
*     S$MAXL = 2
*     S$MINL = 2
  SCREEN INPUT;;2;GOTO 999999
  DEPT = S$VALUE
  IF DEPT = "" THEN
    MAT DEPT.REC = ""
  END ELSE
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
      ERRMSG = "Invalid Department"
      GOSUB 90000
      GOTO 120
    END
    S$DATA(3)<S$SCR> = DEPT.DESC
    SCREEN DISPLAY;;3
  END
130 *
  SCREEN FIELD;;4
  SCREEN INPUT;;4;GOTO 100
  CCTR = S$VALUE
  BEGIN CASE
    CASE CCTR = "???" AND DEPT # ""
      GXR.CO = CONO
      GXR.XREF = DEPARTMENT
      GXR.SRCH.ID = DEPT
      GXR.FILE = COST.CNTR
      GXR.LOC = 5
      GXR.TOP.LINE = "COST CENTER XREF SEARCH"
      GXR.HEADING<1,1> = "CCTR"
      GXR.ATT<1,1> = 0
      GXR.LEN<1,1> = 4
      GXR.HEADING<1,2> = "DESCRIPTION"
      GXR.ATT<1,2> = 1
      GXR.LEN<1,2> = 30
      GXR.ID = ""
*         CALL GEN.XREF1 (MAT GEN.XREF.REC, PREFIX)
      CALL GEN.XREF (MAT GEN.XREF.REC, PREFIX)
      CCTR = GXR.ID
      IF GXR.ACTION # "X" THEN
        SCREEN FORMAT
        S$DATA(4)<S$SCR> = CCTR
        GOSUB 40090
        IF NOT(NUM(CCTR)) THEN GOTO 130
      END
      IF GXR.ID = "" THEN GOTO 130
    CASE CCTR = "" AND DEPT # ""
      NULL
    CASE CCTR # "" AND NUM(CCTR) AND DEPT = ""
      NULL
    CASE CCTR # "" AND NUM(CCTR) AND DEPT # ""
      LOCATE CCTR IN DEPT.CCTRS<1>,1 SETTING C ELSE
        ERRMSG = "Invalid cost center for specified department"
        GOSUB 90000
        GOTO 130
      END
    CASE CCTR = "" AND DEPT = ""
      ITEM.KEY = "HIERARCHY"
      S$DATA(3)<S$SCR> = "COMPANY LEVEL"
      SCREEN DISPLAY;;3
      GOTO 400
    CASE 1
      ERRMSG = "Invalid Entry"
      GOSUB 90000
      GOTO 130
  END CASE
  IF CCTR = "" THEN
    MAT CCTR.REC = ""
  END ELSE
    MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
      ERRMSG = "Invalid Cost Center"
      GOSUB 90000
      GOTO 130
    END
    IF CCTR.MASTER # "" AND CCTR.MASTER # CCTR THEN
      ERRMSG = "This is not a master Cost Center"
      GOSUB 90000
      GOTO 130
    END
    DEPT = CCTR.DEPT
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
      MAT DEPT.REC = ""
      DEPT.DESC = "???????????????"
    END
    S$DATA(2)<S$SCR> = DEPT
    S$DATA(3)<S$SCR> = DEPT.DESC
    SCREEN DISPLAY;;2
    SCREEN DISPLAY;;3
  END
  S$DATA(5)<S$SCR> = CCTR.DESC
  SCREEN DISPLAY;;5
  IF CCTR = "" THEN
    MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:"HIERARCHY" ELSE
      MAT PSHR.REC = ""
      ERRMSG = "Must setup company hierarchy first"
      GOSUB 90000
      GOTO 100
    END
    MAT PSHR.REC = ""
    ITEM.KEY = DEPT[1,2]
  END ELSE
    MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:DEPT[1,2] ELSE
      MAT PSHR.REC = ""
      ERRMSG = "Must setup department hierarchy first"
      GOSUB 90000
      GOTO 100
    END
    MAT PSHR.REC = ""
    ITEM.KEY = DEPT[1,2]:"*":CCTR
  END
400 *
  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      NEW.REC = 0
      * T26126 v
      MATREADU PSHR.REC FROM PSS.HIERARCHY, CONO:ITEM.KEY LOCKED
        ERRMSG = 'HIERARCHY record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 90000;GOTO 100 
      END ELSE
      * T26126 ^
        MAT PSHR.REC = ""
        NEW.REC = 1
      END
      IF NEW.REC THEN
        DEPT.CNT = 0
        IF CCTR = "" THEN
          GOSUB 1000
          IF S$VALUE = "END" THEN GOTO 100
          GOSUB 2000
          IF S$VALUE = "END" THEN GOTO 100
        END ELSE
          GOSUB 2000
          IF S$VALUE = "END" THEN GOTO 100
        END
      END ELSE
        GOSUB 40000
        REF = 1
        CURR.REF = ""
        GOSUB 50000
      END
    CASE 1
      MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:ITEM.KEY ELSE
        ERRMSG = "Invalid entry. Try again! "
        GOSUB 90000
        GOTO 100
      END
      GOSUB 40000
      REF = 1
      CURR.REF = ""
  END CASE
*
*---- GET OPERATOR REQUEST
*
500 *
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      SCREEN FIELD;;16
      SCREEN INPUT;;16
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPTION = S$VALUE
550 *
  BEGIN CASE
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "P"
      SCREEN FIELD;;18
      SCREEN INPUT;;18
      IF S$VALUE = "Y" THEN
***         DELETE PSS.HIERARCHY, CONO:ITEM.KEY
        TPFID = CONO:ITEM.KEY
        CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.HIERARCHY",TPFID,PSS.HIERARCHY,PSS.JOURNAL,ERRMSG)
**********************************************************************
        GOTO 100
      END
    CASE OPTION = "F"
***      MATWRITE PSHR.REC ON PSS.HIERARCHY, CONO:ITEM.KEY
      TPFID = CONO:ITEM.KEY
      MATBUILD TPREC FROM PSHR.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.HIERARCHY",TPFID,TPREC,PSS.HIERARCHY,PSS.JOURNAL,ERRMSG)
**********************************************************************
      GOTO 100
    CASE OPTION = "A" AND DEPT = "" AND CCTR = ""
      ERRMSG = "NO LINE ITEMS NEEDED FOR SYSTEM HIERARCHY"
      GOSUB 90000
    CASE OPTION = "A" AND DEPT.CNT < 99
      DONE = 0
      FOR REF = DEPT.CNT+1 TO 99 UNTIL DONE
        GOSUB 800
        GOSUB 50000
        MAT ALL.REC = ""
        GOSUB 10000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          DEPT.CNT = DEPT.CNT + 1
        END
      NEXT REF
      MAT ALL.REC = ""
      REF = DEPT.CNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "C" AND DEPT.CNT > 0
      IF DEPT.CNT = 1 THEN
        S$VALUE = DEPT.CNT
      END ELSE
        GOSUB 600
      END
      BEGIN CASE
        CASE S$VALUE = "END"
        CASE S$VALUE = ""
        CASE 1
          REF = S$VALUE
          MAT ALL.REC = ""
          ALL.TO = PSHR.TO<1,REF>
          GOSUB 10200
          MAT ALL.REC = ""
          GOSUB 50000
      END CASE
    CASE OPTION = "D" AND DEPT.CNT > 0
      GOSUB 600
      BEGIN CASE
        CASE S$VALUE = "END"
        CASE S$VALUE = ""
        CASE 1
          REF = S$VALUE
          GOSUB 700
          DEPT.CNT = DEPT.CNT - 1
          IF REF > DEPT.CNT THEN REF = REF - 1
          IF REF < 1 THEN REF = 1
          CURR.REF = ""
          GOSUB 50000
      END CASE
    CASE OPTION = "I" AND DEPT.CNT > 0
      GOSUB 600
      BEGIN CASE
        CASE S$VALUE = "END"
        CASE S$VALUE = ""
        CASE 1
          REF = S$VALUE
          GOSUB 800
          DEPT.CNT = DEPT.CNT + 1
          CURR.REF = ""
          GOSUB 50000
          GOSUB 10000
          IF S$VALUE = "END" THEN
            GOSUB 700
            DEPT.CNT = DEPT.CNT - 1
          END
          GOSUB 50000
      END CASE
    CASE OPTION = "S" OR OPTION = "SF"
      REF = CURR.REF + DEPT.COUNT
      IF REF > DEPT.CNT THEN REF = 1
      GOSUB 50000
    CASE OPTION = "ST"
      REF = 1
      GOSUB 50000
    CASE OPTION = "SB"
      REF = DEPT.CNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "SR"
      REF = CURR.REF - DEPT.COUNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE NUM(OPTION) AND OPTION = 1 AND CCTR # ""
      ERRMSG = "NO DEPARTMENT DEFAULTS NEEDED AT THIS LEVEL"
      GOSUB 90000
    CASE NUM(OPTION) AND OPTION = 1
      GOSUB 1000
    CASE NUM(OPTION) AND OPTION = 2
      GOSUB 2000
    CASE 1
      ERRMSG = "Invalid Selection"
      GOSUB 90000
  END CASE
  GOTO 500
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*---- GET LINE REFERENCE NUMBER
*
600 *
  SCREEN FIELD;;17
  S$MINV = CURR.REF
  S$MAXV = S$MINV + DEPT.COUNT - 1
  IF S$MAXV > DEPT.CNT THEN S$MAXV = DEPT.CNT
  SCREEN INPUT;;17
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF,0)
  S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF,0)
  S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF,0)
  S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF,0)
  S$DATA(14) = DELETE(S$DATA(14),S$SCR,REF,0)
  S$DATA(15) = DELETE(S$DATA(15),S$SCR,REF,0)
  PSHR.TO = DELETE(PSHR.TO,1,REF,0)
  PSHR.CODE = DELETE(PSHR.CODE,1,REF,0)
  PSHR.DAYS = DELETE(PSHR.DAYS,1,REF,0)
  RETURN
*
*---- INSERT MULTI-LINE DATA (DEPT)
*
800 *
  S$DATA(10) = INSERT(S$DATA(10),S$SCR,REF,0,"")
  S$DATA(11) = INSERT(S$DATA(11),S$SCR,REF,0,"")
  S$DATA(12) = INSERT(S$DATA(12),S$SCR,REF,0,"")
  S$DATA(13) = INSERT(S$DATA(13),S$SCR,REF,0,"")
  S$DATA(14) = INSERT(S$DATA(14),S$SCR,REF,0,"")
  S$DATA(15) = INSERT(S$DATA(15),S$SCR,REF,0,"")
  PSHR.TO = INSERT(PSHR.TO,1,REF,0,"")
  PSHR.CODE = INSERT(PSHR.CODE,1,REF,0,"")
  PSHR.DAYS = INSERT(PSHR.DAYS,1,REF,0,"")
  RETURN
*
*--- DEFAULT CODES
*
1000 *
  SCREEN FIELD;;6
  SCREEN INPUT;;6;GOTO 1999
  BEGIN CASE
    CASE S$VALUE = "SS"
      PSHR.DEF.CODE = S$VALUE
      PSHR.DEF.DAYS = ""
    CASE S$VALUE = "SN"
      PSHR.DEF.CODE = S$VALUE
      PSHR.DEF.DAYS = ""
    CASE S$VALUE = "D"
      CODE = S$VALUE
      SCREEN FIELD;;7
      SCREEN INPUT;;7;GOTO 1999
      PSHR.DEF.CODE = CODE
      PSHR.DEF.DAYS = S$VALUE
    CASE 1
      GOTO 1000
  END CASE
1999 *
  S$DATA(6)<S$SCR> = PSHR.DEF.CODE
  SCREEN DISPLAY;;6
  S$DATA(7)<S$SCR> = PSHR.DEF.DAYS
  SCREEN DISPLAY;;7
  RETURN
*
*--- DEFAULT CODES FOR COST CENTERS
*
2000 *
  SCREEN FIELD;;8
  SCREEN INPUT;;8;RETURN
  BEGIN CASE
    CASE S$VALUE = "SS"
      PSHR.CCTR.CODE = S$VALUE
    CASE S$VALUE = "SN"
      PSHR.CCTR.CODE = S$VALUE
    CASE 1
      GOTO 2000
  END CASE
  RETURN
*
*--- LINE ITEM CODES
*
10000 *
  S$VAL = REF
  SCREEN DISPLAY;;11
*
*--- GET DEPT / CCTR
*
10100 *
  IF CCTR # "" THEN
10120 *
    S$VAL = REF
    S$DATA(10)<S$SCR,REF> = PSHR.TO<1,REF>
    SCREEN FIELD;;10
    SCREEN INPUT;;10;GOTO 10950
    LOCATE S$VALUE IN PSHR.TO<1>,1 SETTING FND ELSE FND = 0
    IF FND AND FND # REF THEN
      ERRMSG = "DUPLICATE COST CENTER ON LINE - ":FND
      GOSUB 90000
      GOTO 10120
    END
    MATREAD CCTR.REC FROM COST.CNTR, CONO : S$VALUE ELSE
      MAT CCTR.REC = ""
      ERRMSG = "INVALID COST CENTER"
      GOSUB 90000
      GOTO 10120
    END
    IF CCTR.MASTER # "" AND CCTR.MASTER # S$VALUE THEN
      ERRMSG = "MUST BE MASTER COST CENTER"
      GOSUB 90000
      GOTO 10120
    END
    IF CCTR.DEPT[1,2] # DEPT[1,2] THEN
      ERRMSG = "MUST NOT CROSS DEPARTMENTS AT THIS LEVEL"
      GOSUB 90000
      GOTO 10120
    END
    S$DATA(12)<S$SCR,REF> = CCTR.DEPT
    S$DATA(13)<S$SCR,REF> = CCTR.DESC
    S$VAL = REF
    SCREEN DISPLAY;;12
    S$VAL = REF
    SCREEN DISPLAY;;13
    ALL.TO = S$VALUE
  END ELSE
10140 *
    S$DATA(12)<S$SCR,REF> = PSHR.TO<1,REF>
    S$VAL = REF
    SCREEN FIELD;;12
    SCREEN INPUT;;12;GOTO 10950
    LOCATE S$VALUE IN PSHR.TO<1>,1 SETTING FND ELSE FND = 0
    IF FND AND FND # REF THEN
      ERRMSG = "DUPLICATE DEPARTMENT ON LINE - ":FND
      GOSUB 90000
      GOTO 10140
    END
    MATREAD DEPT.REC FROM DEPARTMENT, CONO : S$VALUE ELSE
      MAT DEPT.REC = ""
      ERRMSG = "INVALID DEPARTMENT"
      GOSUB 90000
      GOTO 10140
    END
    IF S$VALUE[1,2] = DEPT[1,2] THEN
      ERRMSG = "MUST USE COST CENTER LEVEL"
      GOSUB 90000
      GOTO 10140
    END
    S$DATA(13)<S$SCR,REF> = DEPT.DESC
    S$VAL = REF
    SCREEN DISPLAY;;13
    ALL.TO = S$VALUE
  END
*
*--- GET CODE
*
10200 *
  S$DATA(14)<S$SCR,REF> = PSHR.CODE<1,REF>
  S$VAL = REF
  SCREEN FIELD;;14
  SCREEN INPUT;;14;GOTO 10950
  BEGIN CASE
    CASE S$VALUE = "SS"
      ALL.CODE = S$VALUE
      ALL.DAYS = ""
    CASE S$VALUE = "SN"
      ALL.CODE = S$VALUE
      ALL.DAYS = ""
    CASE S$VALUE = "D" AND CCTR # ""
      ERRMSG = "DELAY IS NOT VALID FOR COST CENTER LEVEL"
      GOSUB 90000
      GOTO 10200
    CASE S$VALUE = "D"
      ALL.CODE = S$VALUE
      S$DATA(15)<S$SCR,REF> = PSHR.DAYS<1,REF>
      S$VAL = REF
      SCREEN FIELD;;15
      SCREEN INPUT;;15;GOTO 10950
      ALL.DAYS = S$VALUE
    CASE 1
      GOTO 10200
  END CASE
10900 *
  PSHR.TO<1,REF> = ALL.TO
  PSHR.CODE<1,REF> = ALL.CODE
  PSHR.DAYS<1,REF> = ALL.DAYS
  S$DATA(15)<S$SCR,REF> = PSHR.DAYS<1,REF>
  S$VAL = REF
  SCREEN DISPLAY;;15
  GOTO 10999
10950 *
  IF OPTION # "C" THEN GOTO 10959
  S$DATA(14)<S$SCR,REF> = PSHR.CODE<1,REF>
  S$DATA(15)<S$SCR,REF> = PSHR.DAYS<1,REF>
  IF CCTR # "" THEN
    S$DATA(10)<S$SCR,REF> = PSHR.TO<1,REF>
    MATREAD CCTR.REC FROM COST.CNTR, CONO : PSHR.TO<1,REF> ELSE
      MAT CCTR.REC = ""
      CCTR.DESC = "NOT ON FILE"
    END
    S$DATA(12)<S$SCR,REF> = CCTR.DEPT
    S$DATA(13)<S$SCR,REF> = CCTR.DESC
  END ELSE
    S$DATA(12)<S$SCR,REF> = PSHR.TO<1,REF>
    MATREAD DEPT.REC FROM DEPARTMENT, CONO : PSHR.TO<1,REF> ELSE
      MAT DEPT.REC = ""
      DEPT.DESC = "NOT ON FILE"
    END
    S$DATA(13)<S$SCR,REF> = DEPT.DESC
  END
10959 *
  CURR.REF = ""
10999 *
  RETURN
*
*---- LOAD S$DATA MATRIX
*
40000 *
  S$DATA(6)<S$SCR> = PSHR.DEF.CODE
  S$DATA(7)<S$SCR> = PSHR.DEF.DAYS
  S$DATA(8)<S$SCR> = PSHR.CCTR.CODE
  DEPT.CNT = DCOUNT(PSHR.TO,VM)
  S$DATA(14)<S$SCR> = PSHR.CODE
  S$DATA(15)<S$SCR> = PSHR.DAYS
  IF CCTR # "" THEN
    S$DATA(10)<S$SCR> = PSHR.TO
    FOR REF = 1 TO DEPT.CNT
      MATREAD CCTR.REC FROM COST.CNTR, CONO : PSHR.TO<1,REF> ELSE
        MAT CCTR.REC = ""
        CCTR.DESC = "NOT ON FILE"
      END
      S$DATA(12)<S$SCR,REF> = CCTR.DEPT
      S$DATA(13)<S$SCR,REF> = CCTR.DESC
    NEXT REF
  END ELSE
    S$DATA(12)<S$SCR> = PSHR.TO
    FOR REF = 1 TO DEPT.CNT
      MATREAD DEPT.REC FROM DEPARTMENT, CONO : PSHR.TO<1,REF> ELSE
        MAT DEPT.REC = ""
        DEPT.DESC = "NOT ON FILE"
      END
      S$DATA(13)<S$SCR,REF> = DEPT.DESC
    NEXT REF
  END
40090 *
  SCREEN DISPLAY;;ALL
  RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000 *
  START.REF = 1 + INT((REF-1)/DEPT.COUNT)*DEPT.COUNT
  IF START.REF = CURR.REF THEN RETURN
  CURR.REF = START.REF
  S$VAL = START.REF
  S$CNT = DEPT.CNT
  SCREEN MULTI;;C;11;12;10;13;14;15
  RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
  BEGIN CASE
    CASE PROC.TYPE = "M"
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      IF CCTR="" AND DEPT="" THEN
        REQDIV = "ALL"
      END ELSE
        REQDIV = DEPT.DIV
      END
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
      BEGIN CASE
        CASE TP.DIV = "X"
          RELEASE PSS.LOCK, CONO:"TP"
          IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
        CASE TP.DIV = ""
          DCNT = DCOUNT(REQDIV,VM)
          FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
          NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      TP.ERRMSG = ERRMSG
    CASE 1
      TP.DIV = ""
      DELETE PSS.LOCK, @TTY
      TP.ERRMSG = ""
  END CASE
  RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
999999 *
*       PRINT @(-1):
  STOP
END
