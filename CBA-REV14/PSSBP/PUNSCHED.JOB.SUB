      SUBROUTINE PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NUM,TODAY,SPTR,EPTR,SDATE,ALL.FLG)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - UNSCHED.JOB.SUB
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 05/04/86
* DESCRIPTION
* This program will unschedule all operations from PEND.JOB.SCHED record
* and update PEND.CCTR.SCHED file.
*C42734 cmykleb 11/11/2003 * The file PEND.JOB.SCHED needs to be opened
*                            in this pgm or it will bomb.
*ENDDOC
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SET UP SYSCOM
*
      SYS.TYPE = 1
      CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*--- INITIALIZATION
*
      IF ACTION = "W" THEN WIN.MODE = 1 ELSE WIN.MODE = 0
      ACTION = ""
      * C30093 v Add open statement for PSS.LOCK and PEND.CCTR.SCHED
      OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
        ERRMSG = "CANT OPEN FILE PSS.LOCK"
        GOTO 90000
      END
      OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
        ERRMSG = "CANT OPEN FILE PEND.CCTR.SCHED"
        GOTO 90000
      END
      * C30093 ^
*C42734 v
      OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
        ERRMSG = "CANT OPEN FILE PEND.JOB.SCHED"
        GOTO 90000
      END
*C42734 ^
      READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*
*---- MAIN PROCESSING
*
      P_X  = 3 ; P_Y = 23 ; P_VALUE = "Now Processing Pending Unschedule Routine" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      TR.CNT = DCOUNT(PJBS.DEPT,VM)
      IF SPTR + 0 = 0 THEN SPTR = 1
      IF EPTR + 0 = 0 THEN EPTR = TR.CNT
      FOR TR = EPTR TO SPTR STEP - 1
         ADATE = PJBS.SCH.DATE<1,TR>
         BDATE = PJBS.EXP.DATE<1,TR>
         BEGIN CASE
            CASE PJBS.CCTR.STATUS<1,TR> = "C"
               GOTO 1999
            CASE PJBS.CCTR.STATUS<1,TR> = "I"
               GOTO 1999
            CASE ADATE = "" OR BDATE = ""
               GOTO 1999
            CASE PJBS.TRAN<1,TR> = ""
               GOTO 1999
         END CASE
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "Dept - ":PJBS.DEPT<1,TR> "L#5":" , Cctr - ":PJBS.CCTR<1,TR> "L#5" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CCTR = PJBS.CCTR<1,TR>
         IF TR = SPTR THEN
*           IF ADATE < SDATE THEN ADATE = SDATE
         END
*        IF ADATE < TODAY THEN ADATE = TODAY
         FOR XDATE = BDATE TO ADATE STEP - 1
            MATREADU PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO : CCTR : "*" : XDATE ELSE
               MAT PEND.CCTR.SCHED.REC = ""
               RELEASE PEND.CCTR.SCHED, CONO : CCTR : "*" : XDATE
               PJBS.EXP.DATE<1,TR> = XDATE - 1
               PJBS.EXP.SHIFT<1,TR> = 3
               IF PJBS.EXP.DATE<1,TR> < PJBS.SCH.DATE<1,TR> THEN
                  PJBS.EXP.DATE<1,TR> = PJBS.SCH.DATE<1,TR>
               END
               GOTO 1099
            END
            PTR = 1
            LOOP
               LOCATE JOB.NUM IN PCCS.JOB<1>,PTR SETTING TFND ELSE TFND = 0
               BEGIN CASE
                  CASE TFND = 0
                  CASE PCCS.TRAN<1,TFND> # PJBS.TRAN<1,TR>
                     PTR = TFND + 1
                  CASE 1
                     JOB.HRS = PCCS.JOB.HRS<1,TFND>
                     SFT = PCCS.JOB.SHIFT<1,TFND>
                     MLT = PCCS.JOB.EQUIP<1,TFND>
                     PCCS.SCH.HRS = PCCS.SCH.HRS - JOB.HRS
**                PCCS.REM.HRS = PCCS.REM.HRS + JOB.HRS
                     PCCS.SCH.SM.HRS<1,SFT,MLT> = PCCS.SCH.SM.HRS<1,SFT,MLT> - JOB.HRS
                     IF PCCS.SCH.SM.HRS<1,SFT,MLT> = 0 THEN PCCS.SCH.SM.HRS<1,SFT,MLT> = ""
**                PCCS.REM.SM.HRS<1,SFT,MLT> = PCCS.REM.SM.HRS<1,SFT,MLT> + JOB.HRS
                     IF PCCS.REM.SM.HRS<1,SFT,MLT> = 0 THEN PCCS.REM.SM.HRS<1,SFT,MLT> = ""
                     PCCS.TRAN = DELETE(PCCS.TRAN,1,TFND,0)
                     PCCS.JOB = DELETE(PCCS.JOB,1,TFND,0)
                     PCCS.OPER = DELETE(PCCS.OPER,1,TFND,0)
                     PCCS.OPER.STATUS = DELETE(PCCS.OPER.STATUS,1,TFND,0)
                     PCCS.OPER.HRS = DELETE(PCCS.OPER.HRS,1,TFND,0)
                     PCCS.JOB.HRS = DELETE(PCCS.JOB.HRS,1,TFND,0)
                     PCCS.JOB.SHIFT = DELETE(PCCS.JOB.SHIFT,1,TFND,0)
                     PCCS.JOB.EQUIP = DELETE(PCCS.JOB.EQUIP,1,TFND,0)
                     PCCS.OPER.SHIFT = DELETE(PCCS.OPER.SHIFT,1,TFND,0)
                     PCCS.OPER.EQUIP = DELETE(PCCS.OPER.EQUIP,1,TFND,0)
                     PJBS.USD.HRS<1,TR> = PJBS.USD.HRS<1,TR> - JOB.HRS
                     PTR = TFND
               END CASE
            WHILE TFND DO
            REPEAT
            PJBS.OPER.SCH.DATE<1,TR> = ""
            PJBS.OPER.EXP.DATE<1,TR> = ""
            PJBS.OPER.REV.DATE<1,TR> = ""
            PJBS.EXP.DATE<1,TR> = XDATE - 1
            PJBS.EXP.SHIFT<1,TR> = 3
            IF PJBS.EXP.DATE<1,TR> < PJBS.SCH.DATE<1,TR> THEN
               PJBS.EXP.DATE<1,TR> = PJBS.SCH.DATE<1,TR>
            END
            IF PCCS.TRAN = "" THEN
***            DELETE PEND.CCTR.SCHED,CONO:CCTR:"*":XDATE
               TPFID = CONO:CCTR:"*":XDATE
               CALL TRANSACTION.DELETE(CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
            END ELSE
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO : CCTR : "*" : XDATE
               TPFID = CONO:CCTR:"*":XDATE
               MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
               CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
            END
1099*
         NEXT XDATE
         IF PJBS.USD.HRS<1,TR> <= 0 THEN
            PJBS.USD.HRS<1,TR> = ""
            PJBS.TRAN<1,TR> = ""
            PJBS.SCH.DATE<1,TR> = ""
            PJBS.EXP.DATE<1,TR> = ""
            PJBS.SCH.SHIFT<1,TR> = ""
            PJBS.EXP.SHIFT<1,TR> = ""
            PJBS.REV.DATE<1,TR> = ""
         END ELSE
*
*--- FIND LAST SCHEDULE DATE AND SHIFT
*
            CK = 0
            BDATE = PJBS.EXP.DATE<1,TR>
            ADATE = PJBS.SCH.DATE<1,TR>
            FOR XDATE = BDATE TO ADATE STEP - 1 UNTIL CK
               MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
                  MAT PEND.CCTR.SCHED.REC = ""
               END
               PTR = 1
               LOOP
               WHILE PTR DO
                  LOCATE JOB.NUM IN PCCS.JOB<1>,PTR SETTING TFND ELSE
                     TFND = 0
                     PTR = 0
                  END
                  BEGIN CASE
                     CASE PTR = 0
                     CASE PCCS.TRAN<1,TFND> # PJBS.TRAN<1,TR>
                        PTR = TFND + 1
                     CASE CK = 0
                        CK = PCCS.JOB.SHIFT<1,TFND>
                        PTR = TFND + 1
                     CASE PCCS.JOB.SHIFT<1,TFND> > CK
                        CK = PCCS.JOB.SHIFT<1,TFND>
                        PTR = TFND + 1
                     CASE 1
                        PTR = TFND + 1
                  END CASE
               REPEAT
               IF CK THEN
                  PJBS.EXP.DATE<1,TR> = XDATE
                  PJBS.EXP.SHIFT<1,TR> = CK
               END
            NEXT XDATE
            IF CK = 0 THEN
               PJBS.USD.HRS<1,TR> = ""
               PJBS.TRAN<1,TR> = ""
               PJBS.SCH.DATE<1,TR> = ""
               PJBS.EXP.DATE<1,TR> = ""
               PJBS.SCH.SHIFT<1,TR> = ""
               PJBS.EXP.SHIFT<1,TR> = ""
               PJBS.REV.DATE<1,TR> = ""
            END
         END
         P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1999*
      NEXT TR
      TEMP.TRAN = 0
      FOR TR = 1 TO TR.CNT
         IF PJBS.TRAN<1,TR> # "" AND PJBS.TRAN<1,TR> > TEMP.TRAN THEN
            TEMP.TRAN = PJBS.TRAN<1,TR>
         END
      NEXT TR
      PJBS.LAST.TRAN = TEMP.TRAN
***   MATWRITEU PJBS.REC ON PEND.JOB.SCHED, CONO : JOB.NUM
      TPFID = CONO:JOB.NUM
      MATBUILD TPREC FROM PJBS.REC
      CALL TRANSACTION.WRITE("WRITEU",CONO,TP.DIV,"PEND.JOB.SCHED",TPFID,TPREC,PEND.JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 999999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- ERROR ROUTINE
*
* 90000*
* P_X  = 0 ; P_Y = 23 ; P_VALUE = ERRMSG ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       IF NOT(WIN.MODE) THEN
*          INPUT REPLY,1 :
*       END
* P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       RETURN
90000*
      IF WIN.MODE THEN
         P_X  = 3 ; P_Y = 23 ; P_VALUE = ERRMSG ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END ELSE
         ERR.TYPE = 1
         CALL SI_SYSCOM(MAT SYSCOM.REC)
         RETURN
      END
999999*
      RETURN
   END
