*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* PROGRAM     - UNSCHED.JOB.MAINT
* AUTHOR      - CAROL SAGE, C.B.A.
* DATE        - 07/22/87
* MODIFIED    - 11/01/95 TERRY NORTHCUTT TASK 19407 DIVIZIONALIZATION
* MODIFIED - 02/21/96, NA, TASK 20124, LOAD PEND FORWARD
* DESCRIPTION -
* This program allows the unscheduling of multiple JOB.SCHED records
* to relief the schedule load. You can specify to unschedule some or
* all the cost centers for each job.
* All unscheduled jobs can be inserted at the begining of the job
* schedule job list.
********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      PROC.TYPE = "M"
      PROMPT ""
      MV.JOB = 1
      MV.TYPE = 2
      MV.DATE = 3
*
*---- OPEN ALL FILES
*
      OPEN "COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PSS.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN PSS.SCREENS FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "DEPARTMENT" TO DEPARTMENT ELSE
         ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "JOB.SCHED" TO JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.JOB.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN CCTR.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE
         ERRMSG = "CANNOT OPEN CCTR.AVAIL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.CCTR.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PSS.CONTROL" TO PSS.CONTROL ELSE
         ERRMSG = "CANNOT OPEN PSS.CONTROL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PSS.HIERARCHY" TO PSS.HIERARCHY ELSE
         ERRMSG = "CANNOT OPEN PSS.HIERARCHY FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
         ERRMSG = "CANNOT OPEN HOLIDAY.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PREFIX" TO PREFIX ELSE
         ERRMSG = "CANNOT OPEN PREFIX FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "PSS.JOB.XREF" TO PSS.JOB.XREF ELSE
         ERRMSG = "CANNOT OPEN PSS.JOB.XREF FILE"
         GOSUB 90000
         GOTO 99999
      END
OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
   ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
   GOSUB 90000
   GOTO 99999
END
OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
   ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
   GOSUB 90000
   GOTO 99999
END
*
*---- GET COMPANY
*
      CONO = ""
      CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
      IF CONO = "END" THEN GOTO 99999
      MAT GEN.XREF.REC = ""
      GXR.CO = CONO
*---- TASK 19407
*
*---- PERFORM PROCREAD
*
      PROCREAD BUFFER ELSE
         ERRMSG = "MUST RUN FROM PROC"
         GOSUB 90000
         GOTO 99999
      END
      DIV.OWNER = BUFFER<3>
*---- TASK 19407
*
*---- GET CURRENT DATE
*
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
*--- CHECK FOR LOCKS
*
      DUMMY = ""
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO:DIV.OWNER:"UNSCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *----19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL UNSCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 99999
      END
      DUMMY = ""
      ALL.JOBS = ""
      REC.LOCK = 0
      READU ALL.JOBS FROM PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST" LOCKED REC.LOCK = 1 ELSE ALL.JOBS = "" ; *---- TASK 19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL MULTI SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 99999
      END
      REC.LOCK = 0
      READU DUMMY FROM PSS.CONTROL, CONO:DIV.OWNER:"SCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
      IF REC.LOCK THEN
         ERRMSG = "MUST WAIT UNTIL SCHEDULE PROCESS IS DONE"
         GOSUB 90000
         GOTO 99999
      END
      RELEASE PSS.CONTROL, CONO:DIV.OWNER:"SCHED.FLG" ; *---- TASK 19407
      DUMMY = ""
*
      SCREEN INIT;#
      S$SCR = 1
      SCREEN DEFINE;UNSCHED.JOB.MAINT
      SCREEN FORMAT
      SCREEN COUNT;;3
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      JOB.NOS = ""
      J.DEPTS = ""
      J.CCTRS = ""
      J.CCTR.DESC = ""
      J.DATES = ""
      TP.ERRMSG = ""
*
*---- MAIN PROCESSING
100*
      SCREEN CLEAR
      GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
      S$DATA(1)<S$SCR> = TODAY
      SCREEN DISPLAY;;1
      LINE.CNT = 0
      CURR.REF.NO = ""
      IF PROC.TYPE = "M" AND TP.DIV # "X" THEN
         OPT = "A"
         GOTO 510
      END
*
*---- OPTIONS
500*
      BEGIN CASE
      CASE PROC.TYPE = "M" AND TP.DIV # "X"
         S$DATA(10)<S$SCR> = ""
         SCREEN FIELD;;10
         SCREEN INPUT;;10
      CASE 1
         S$DATA(23)<S$SCR> = ""
         SCREEN FIELD;;23
         SCREEN INPUT;;23
      END CASE
      OPT = S$VALUE
510*
      BEGIN CASE
      CASE OPT = "A" AND LINE.CNT < 99
         DONE = 0
         FOR REF.NO = LINE.CNT + 1 TO 99 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINE.CNT = LINE.CNT + 1
            END
         NEXT REF.NO
         REF.NO = LINE.CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPT = "C" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NOS<REF.NO> ELSE MAT JBS.REC = ""
            TEMP.JOB = JOB.NOS<REF.NO>
            TEMP.DEPT = J.DEPTS<REF.NO>
            TEMP.CCTR = J.CCTRS<REF.NO>
            TEMP.DATE = J.DATES<REF.NO>
            TR.CNT = DCOUNT(JBS.DEPT,VM)
            GOSUB 10300
            TEMP.JOB = ""
            TEMP.DEPT = ""
            TEMP.CCTR = ""
            TEMP.DATE = ""
            IF S$VALUE = "END" THEN
               S$DATA(7)<S$SCR,REF.NO> = J.DEPTS<REF.NO>
               S$DATA(8)<S$SCR,REF.NO> = J.CCTRS<REF.NO>
               S$DATA(9)<S$SCR,REF.NO> = J.DATES<REF.NO>
               MATREAD CCTR.REC FROM COST.CNTR, CONO:J.CCTRS<REF.NO> ELSE MAT CCTR.REC=""
               S$DATA(19)<S$SCR,REF.NO> = CCTR.DESC
               CURR.REF.NO = ""
               GOSUB 50000
            END
         END
      CASE OPT = "I" AND LINE.CNT > 0 AND LINE.CNT < 99
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 800
            LINE.CNT = LINE.CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 700
               LINE.CNT = LINE.CNT - 1
            END
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "D" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 700
            LINE.CNT = LINE.CNT - 1
            IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "F"
         SCREEN FIELD;;13
         SCREEN INPUT;;13;GOTO 500
         UPD.LIST = S$VALUE
         LN = 0
         FOR REF.NO = 1 TO LINE.CNT
            GOSUB 50000
            S$VAL = REF.NO
            S$DATA(12)<S$SCR,REF.NO> = "*"
            SCREEN DISPLAY;;12
            ACTION = ""
            TEMP.JOB = JOB.NOS<REF.NO>
            TEMP.DEPT = J.DEPTS<REF.NO>
            TEMP.CCTR = J.CCTRS<REF.NO>
            TEMP.DATE = J.DATES<REF.NO>
            MATREADU JBS.REC FROM JOB.SCHED, CONO:TEMP.JOB ELSE MAT JBS.REC = ""
            MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO:TEMP.JOB ELSE MAT PJBS.REC = ""
            TR.CNT = DCOUNT(JBS.DEPT,VM)
            EPTR = TR.CNT
            SPTR = 0
            ALL.FLG = 0
            BEGIN CASE
            CASE TEMP.DATE = ""
            CASE TEMP.CCTR # ""
               PTR = 1
               LOOP
               WHILE PTR DO
                  LOCATE TEMP.CCTR IN JBS.CCTR<1>,PTR SETTING FND ELSE
                     FND = 0
                     PTR = 0
                  END
                  BEGIN CASE
                  CASE PTR = 0
                  CASE JBS.CCTR.STATUS<1,FND> = "C"
                     PTR = FND + 1
                  CASE JBS.CCTR.STATUS<1,FND> = "I"
                     PTR = FND + 1
                  CASE JBS.SCH.DATE<1,FND> = ""
                     PTR = FND + 1
                  CASE JBS.EXP.DATE<1,FND> = ""
                     PTR = FND + 1
                  CASE JBS.SCH.DATE<1,FND> <= TEMP.DATE AND JBS.EXP.DATE<1,FND> >= TEMP.DATE
                     PTR = 0
                     SPTR = FND
                  CASE 1
                     PTR = FND + 1
                  END CASE
               REPEAT
            CASE TEMP.DEPT # ""
               PTR = 1
               LOOP
               WHILE PTR DO
                  LOCATE TEMP.DEPT IN JBS.DEPT<1>,PTR SETTING FND ELSE
                     FND = 0
                     PTR = 0
                  END
                  BEGIN CASE
                  CASE PTR = 0
                  CASE JBS.DEPT.STATUS<1,FND> = "C"
                     PTR = FND + 1
                  CASE JBS.DEPT.STATUS<1,FND> = "I"
                     PTR = FND + 1
                  CASE JBS.SCH.DATE<1,FND> = ""
                     PTR = FND + 1
                  CASE JBS.EXP.DATE<1,FND> = ""
                     PTR = FND + 1
                  CASE JBS.SCH.DATE<1,FND> <= TEMP.DATE AND JBS.EXP.DATE<1,FND> >= TEMP.DATE
                     PTR = 0
                     SPTR = FND
                  CASE 1
                     PTR = FND + 1
                  END CASE
               REPEAT
            CASE 1
               SPTR = 1
               ALL.FLG = 1
            END CASE
            IF SPTR < 1 THEN
               RELEASE JOB.SCHED, CONO:TEMP.JOB
               GOTO 550
            END
            CALL UNSCHED.JOB.SUB (CONO,ACTION,TEMP.JOB,TEMP.DATE,SPTR,EPTR,TEMP.DATE,ALL.FLG)
            LAST.DATE = TEMP.DATE
530*
P_X  = 3 ; P_Y = 23 ; P_VALUE = "Now Processing Pending Schedule Routine (Front to Back)" ; P_OPT = "CL"
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            BORF = "S"
            BCK.FLG = ""
            REQ.DATE = TODAY + 1
            ACTION = ""
            DUE.DATE = ""
            CALL PEN.JOB.SCHED.FWD(CONO,ACTION,TEMP.JOB,REQ.DATE,TODAY,DUE.DATE,SPTR,EPTR,BCK.FLG)
            SDATE = REQ.DATE
            BEGIN CASE
            CASE ACTION = ""
            CASE ACTION = "E"
               IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
                  ALL.FLG = 0
                  CALL PUNSCHED.JOB.SUB(CONO,ACTION,TEMP.JOB,TODAY,SPTR,EPTR,SDATE,ALL.FLG)
               END
            END CASE
P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            READU PSL.REC FROM PSS.CONTROL,CONO:DIV.OWNER:"PEND.SCHED.LIST" ELSE PSL.REC = "" ; *---- TASK 19407
            LOCATE TEMP.JOB IN PSL.REC<1>,1 SETTING POS ELSE
               PSL.REC<1,POS> = TEMP.JOB
               PSL.REC<2,POS> = BORF
               PSL.REC<3,POS> = TEMP.DATE
            END
***         WRITE PSL.REC ON PSS.CONTROL,CONO:DIV.OWNER:"PEND.SCHED.LIST" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"PEND.SCHED.LIST"
            TPREC = PSL.REC
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
            RELEASE JOB.SCHED, CONO:TEMP.JOB
            IF UPD.LIST = "Y" THEN
               XCNT = DCOUNT(ALL.JOBS,AM)
               AA = 0
               FOR XPTR = 1 TO XCNT UNTIL AA
                  IF TEMP.JOB = ALL.JOBS<XPTR,MV.JOB> THEN AA = XPTR
               NEXT XPTR
               IF AA = 0 THEN
                  LN = LN + 1
                  INS TEMP.JOB BEFORE ALL.JOBS<LN>
                  ALL.JOBS<LN,2> = BORF
                  ALL.JOBS<LN,3> = TEMP.DATE
               END
            END
            S$VAL = REF.NO
            S$DATA(12)<S$SCR,REF.NO> = ""
            SCREEN DISPLAY;;12
550*
         NEXT REF.NO
         IF ALL.JOBS = "" THEN
***         DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.LIST"
            CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         END ELSE
***         WRITE ALL.JOBS ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.LIST" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.LIST"
            TPREC = ALL.JOBS
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         END
SCREEN CLOSE
         GOTO 99999
      CASE OPT = "END" OR OPT = "E"
SCREEN CLOSE
         GOTO 99999
      END CASE
      GOTO 500
*
*---- GET LINE REFERENCE NUMBER
600*
      SCREEN FIELD;;11
      S$MINV = CURR.REF.NO
      S$MAXV = S$MINV + LINE.COUNT - 1
      IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
      SCREEN INPUT;;11
      RETURN
*
*---- DELETE MULTI-LINE DATA
700*
      DEL JOB.NOS<REF.NO>
      DEL J.DEPTS<REF.NO>
      DEL J.CCTRS<REF.NO>
      DEL J.DATES<REF.NO>
      DEL S$DATA(3)<S$SCR,REF.NO>
      DEL S$DATA(4)<S$SCR,REF.NO>
      DEL S$DATA(5)<S$SCR,REF.NO>
      DEL S$DATA(6)<S$SCR,REF.NO>
      DEL S$DATA(7)<S$SCR,REF.NO>
      DEL S$DATA(8)<S$SCR,REF.NO>
      DEL S$DATA(9)<S$SCR,REF.NO>
      DEL S$DATA(19)<S$SCR,REF.NO>
      RETURN
*
*---- INSERT MULTI-LINE DATA
800*
      INS "" BEFORE JOB.NOS<REF.NO>
      INS "" BEFORE J.DEPTS<REF.NO>
      INS "" BEFORE J.CCTRS<REF.NO>
      INS "" BEFORE J.DATES<REF.NO>
      INS "" BEFORE S$DATA(3)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(4)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(5)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(6)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(7)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(8)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(9)<S$SCR,REF.NO>
      INS "" BEFORE S$DATA(19)<S$SCR,REF.NO>
      RETURN
*
*---- ENTER JOB NUMBER
10000*
      S$VAL = REF.NO
      SCREEN DISPLAY;;2
10100*
      TEMP.JOB = ""
      TEMP.DEPT = ""
      TEMP.CCTR = ""
      TEMP.DATE = ""
      S$DATA(3)<S$SCR,REF.NO> = JOB.NOS<REF.NO>
      S$VAL = REF.NO
      SCREEN FIELD;;3
      SCREEN INPUT;;3;RETURN
      BEGIN CASE
      CASE S$VALUE = ""
         S$VAL = REF.NO
         SCREEN FIELD;;6
         SCREEN INPUT;;6
         BEGIN CASE
         CASE S$VALUE = "END" OR S$VALUE = ""
            GOTO 10100
         CASE 1
            GXR.XREF = PSS.JOB.XREF
            GXR.SRCH.ID = S$VALUE
            GXR.FILE = JOB.SCHED
            GXR.LOC = 1
            GXR.TOP.LINE = "JOB SCHEDULE SEARCH"
            GXR.TOP.LINE<1,2> = "SEARCH BY NAME : " : S$VALUE
            GXR.HEADING = "Job Num"
            GXR.ATT = 0
            GXR.LEN = 9
            GXR.HEADING<1,1> = "Cust Num"
            GXR.ATT<1,2> = 10
            GXR.LEN<1,2> = 9
            GXR.HEADING<1,3> = "Customer Name"
            GXR.ATT<1,3> = 5
            GXR.LEN<1,3> = 25
            GXR.HEADING<1,4> = "Job Comments"
            GXR.ATT<1,4> = 9
            GXR.LEN<1,4> = 25
            GXR.ID = ""
            GXR.OCONV = ""
*            CALL GEN.XREF1 (MAT GEN.XREF.REC,PREFIX)
            CALL GEN.XREF (MAT GEN.XREF.REC,PREFIX)
            IF GXR.ACTION # "X" THEN
               SCREEN FORMAT
               CURR.REF.NO = ""
               GOSUB 50000
            END
            IF GXR.ID = "" THEN GOTO 10000
            S$DATA(3)<S$SCR,REF.NO> = GXR.ID
            S$VAL = REF.NO
            SCREEN DISPLAY;;3
            MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
               ERRMSG = "Cannot locate job. Try again! "
               GOSUB 90000
               GOTO 10100
            END
*---- TASK 19407
            IF JOB.DIV # DIV.OWNER THEN
               ERRMSG = "Job not owned by selected division ":DIV.OWNER
               GOSUB 90000
               GOTO 10100
            END
*---- TASK 19407
            TEMP.JOB = GXR.ID
         END CASE
      CASE S$VALUE # ""
         TEMP.JOB=S$VALUE
      END CASE
*
*---- CHECK FOR DUPLICATE ENTRY
      PTR = 1
      LOCATE TEMP.JOB IN JOB.NOS,PTR SETTING JFND ELSE GOTO 10200
      IF JFND # REF.NO THEN GOTO 10109
      PTR = JFND + 1
      LOCATE TEMP.JOB IN JOB.NOS,PTR SETTING JFND ELSE GOTO 10200
10109*
      ERRMSG = "Duplicate Entry!  Already exists on Line ":JFND
      GOSUB 90000
      GOTO 10100
10200*
      MATREAD JBS.REC FROM JOB.SCHED, CONO:TEMP.JOB ELSE
         ERRMSG = "Invalid JOB.SCHED"
         S$DATA(3)<S$SCR,REF.NO> = ""
         GOSUB 90000
         GOTO 10100
      END
      TR.CNT = DCOUNT(JBS.DEPT,VM)
      PTR = 1
      FOR FND = 1 TO TR.CNT WHILE PTR
         BEGIN CASE
         CASE JBS.CCTR.STATUS<1,FND> = "C"
         CASE JBS.CCTR.STATUS<1,FND> = "I"
         CASE JBS.SCH.DATE<1,FND> = ""
         CASE JBS.EXP.DATE<1,FND> = ""
         CASE JBS.USD.HRS<1,FND> > 0
            PTR = 0
         CASE 1
         END CASE
      NEXT FND
      IF PTR THEN
         ERRMSG = "Job is not valid for unscheduling"
         GOSUB 90000
         GOTO 10100
      END
      MATREAD JOB.REC FROM JOB, CONO:TEMP.JOB THEN 
        JDIV=JOB.DIV
      END ELSE
        MAT JOB.REC=''
        JDIV=JBS.DIV
      END
*---- TASK 19407
      IF JDIV # DIV.OWNER THEN
         ERRMSG = "Job not owned by selected division ":DIV.OWNER
         GOSUB 90000
         GOTO 10100
      END
*---- TASK 19407
*
      S$VAL = REF.NO
      IF JOB.DESC # "" THEN
         S$DATA(4)<S$SCR,REF.NO> = JOB.DESC<1,1>:" ":JOB.DESC<1,2>:" ":JOB.DESC<1,3>
      END ELSE
         S$DATA(4)<S$SCR,REF.NO> = JBS.JOB.COMMENT
      END
      SCREEN DISPLAY;;4
*
      S$VAL = REF.NO
      IF JOB.MASTER # "" THEN
         S$DATA(5)<S$SCR,REF.NO> = JOB.MASTER
      END ELSE
         S$DATA(5)<S$SCR,REF.NO> = TEMP.JOB
      END
      SCREEN DISPLAY;;5
*
      S$VAL = REF.NO
      S$DATA(6)<S$SCR,REF.NO> = JBS.CUST.NAME
      SCREEN DISPLAY;;6
*
*---- ENTER DEPARTMENT NUMBER
10300*
      S$VAL = REF.NO
      SCREEN FIELD;;7
      SCREEN INPUT;;7;RETURN
      TEMP.DEPT = S$VALUE
      BEGIN CASE
      CASE TEMP.DEPT = ""
      CASE TEMP.DEPT = "???"
         PARAM = "I"
         PARAM<1,2> = "AUTO"
         PARAM<1,3> = TEMP.JOB
         CALL PERFORM.PROG ("JOB.SCHED.DET.MAINT",PARAM)
         SCREEN FORMAT
         SCREEN DISPLAY;;1
         S$DATA(7)<S$SCR,REF.NO> = J.DEPTS<REF.NO>
         CURR.REF.NO = ""
         GOSUB 50000
         IF OPT = "A" THEN
            S$VAL = REF.NO
            SCREEN DISPLAY;;2
            S$VAL = REF.NO
            SCREEN DISPLAY;;3
            S$VAL = REF.NO
            SCREEN DISPLAY;;5
            S$VAL = REF.NO
            SCREEN DISPLAY;;6
            S$VAL = REF.NO
            SCREEN DISPLAY;;7
            S$VAL = REF.NO
            SCREEN DISPLAY;;4
         END
         TEMP.DEPT = ""
         GOTO 10300
      CASE 1
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:TEMP.DEPT ELSE
            ERRMSG = "Invalid DEPARTMENT"
            S$DATA(7)<S$SCR,REF.NO> = ""
            GOSUB 90000
            GOTO 10300
         END
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.DEPT IN JBS.DEPT<1>,PTR SETTING FND ELSE
               ERRMSG = "Department ":TEMP.DEPT:" is not valid for the unschedule routine"
               S$DATA(7)<S$SCR,REF.NO> = ""
               GOSUB 90000
               PTR = 0
               FND = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.DEPT.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.DEPT.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.USD.HRS<1,FND> > 0
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
         IF FND = 0 THEN GOTO 10300
      END CASE
*
*---- ENTER COST CENTER
10400*
      S$VAL=REF.NO
      SCREEN FIELD;;8
      SCREEN INPUT;;8;RETURN
      TEMP.CCTR = S$VALUE
      BEGIN CASE
      CASE TEMP.CCTR = ""
      CASE TEMP.CCTR = "???"
         PARAM = "I"
         PARAM<1,2> = "AUTO"
         PARAM<1,3> = TEMP.JOB
         CALL PERFORM.PROG ("JOB.SCHED.DET.MAINT",PARAM)
         SCREEN FORMAT
         SCREEN DISPLAY;;1
         S$DATA(8)<S$SCR,REF.NO> = J.CCTRS<REF.NO>
         CURR.REF.NO = ""
         GOSUB 50000
         IF OPT = "A" THEN
            S$VAL = REF.NO
            SCREEN DISPLAY;;2
            S$VAL = REF.NO
            SCREEN DISPLAY;;3
            S$VAL = REF.NO
            SCREEN DISPLAY;;5
            S$VAL = REF.NO
            SCREEN DISPLAY;;6
            S$VAL = REF.NO
            SCREEN DISPLAY;;7
            S$VAL = REF.NO
            SCREEN DISPLAY;;8
            S$VAL = REF.NO
            SCREEN DISPLAY;;4
         END
         TEMP.CCTR = ""
         GOTO 10400
      CASE NOT(NUM(TEMP.CCTR))
         S$DATA(8)<S$SCR,REF.NO> = J.CCTRS<REF.NO>
         TEMP.CCTR = ""
         GOTO 10400
      CASE 1
         MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE
            ERRMSG = "Invalid COST CENTER"
            S$DATA(8)<S$SCR,REF.NO> = ""
            GOSUB 90000
            GOTO 10400
         END
         IF TEMP.DEPT # "" AND TEMP.DEPT # CCTR.DEPT THEN
            ERRMSG = "Invalid COST CENTR for DEPARTMENT"
            S$DATA(8)<S$SCR,REF.NO> = ""
            GOSUB 90000
            GOTO 10400
         END
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.CCTR IN JBS.CCTR<1>,PTR SETTING FND ELSE
               ERRMSG = "Cost Center ":TEMP.CCTR:" is not valid for the unschedule routine"
               S$DATA(8)<S$SCR,REF.NO> = ""
               GOSUB 90000
               PTR = 0
               FND = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.CCTR.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.CCTR.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.USD.HRS<1,FND> > 0
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
         IF FND = 0 THEN GOTO 10400
         IF TEMP.DEPT = "" THEN
            TEMP.DEPT = CCTR.DEPT
            S$VAL = REF.NO
            S$DATA(7)<S$SCR,REF.NO> = TEMP.DEPT
            SCREEN DISPLAY;;7
         END
      END CASE
      IF TEMP.CCTR = "" THEN
         S$DATA(19)<S$SCR,REF.NO> = ""
      END ELSE
         S$DATA(19)<S$SCR,REF.NO> = CCTR.DESC
      END
      S$VAL = REF.NO
      SCREEN DISPLAY;;19
*
*---- ENTER DUE DATE
10500*
      S$VAL = REF.NO
      SCREEN FIELD;;9
      SCREEN INPUT;;9;RETURN
      TEMP.DATE = S$VALUE
      BEGIN CASE
      CASE TEMP.DATE = "" AND TEMP.CCTR # ""
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.CCTR IN JBS.CCTR<1>,PTR SETTING FND ELSE
               FND = 0
               PTR = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.CCTR.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.CCTR.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.USD.HRS<1,FND> > 0
               TEMP.DATE = JBS.SCH.DATE<1,FND>
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
      CASE TEMP.DATE = "" AND TEMP.DEPT # ""
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.DEPT IN JBS.DEPT<1>,PTR SETTING FND ELSE
               FND = 0
               PTR = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.DEPT.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.DEPT.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.USD.HRS<1,FND> > 0
               TEMP.DATE = JBS.SCH.DATE<1,FND>
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
      CASE TEMP.DATE # "" AND TEMP.CCTR # ""
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.CCTR IN JBS.CCTR<1>,PTR SETTING FND ELSE
               ERRMSG = "Cost center is not scheduled for this date"
               GOSUB 90000
               FND = 0
               PTR = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.CCTR.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.CCTR.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> <= TEMP.DATE AND JBS.EXP.DATE<1,FND> >= TEMP.DATE
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
         IF FND = 0 THEN GOTO 10500
      CASE TEMP.DATE # "" AND TEMP.DEPT # ""
         PTR = 1
         LOOP
         WHILE PTR DO
            LOCATE TEMP.DEPT IN JBS.DEPT<1>,PTR SETTING FND ELSE
               ERRMSG = "Department is not scheduled for this date"
               GOSUB 90000
               FND = 0
               PTR = 0
            END
            BEGIN CASE
            CASE PTR = 0
            CASE JBS.DEPT.STATUS<1,FND> = "C"
               PTR = FND + 1
            CASE JBS.DEPT.STATUS<1,FND> = "I"
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.EXP.DATE<1,FND> = ""
               PTR = FND + 1
            CASE JBS.SCH.DATE<1,FND> <= TEMP.DATE AND JBS.EXP.DATE<1,FND> >= TEMP.DATE
               PTR = 0
            CASE 1
               PTR = FND + 1
            END CASE
         REPEAT
         IF FND = 0 THEN GOTO 10500
      CASE TEMP.DATE # ""
         PTR = 0
         FOR FND = 1 TO TR.CNT UNTIL PTR
            BEGIN CASE
            CASE JBS.CCTR.STATUS<1,FND> = "C"
            CASE JBS.CCTR.STATUS<1,FND> = "I"
            CASE JBS.SCH.DATE<1,FND> = ""
            CASE JBS.EXP.DATE<1,FND> = ""
            CASE JBS.SCH.DATE<1,FND> <= TEMP.DATE AND JBS.EXP.DATE<1,FND> >= TEMP.DATE
               PTR = FND
            CASE 1
            END CASE
         NEXT FND
         IF PTR THEN
            TEMP.DEPT = JBS.DEPT<1,PTR>
            TEMP.CCTR = JBS.CCTR<1,PTR>
            MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE MAT CCTR.REC=""
            S$DATA(7)<S$SCR,REF.NO> = TEMP.DEPT
            S$DATA(8)<S$SCR,REF.NO> = TEMP.CCTR
            S$DATA(19)<S$SCR,REF.NO> = CCTR.DESC
            S$VAL = REF.NO
            SCREEN DISPLAY;;7
            S$VAL = REF.NO
            SCREEN DISPLAY;;8
            S$VAL = REF.NO
            SCREEN DISPLAY;;19
         END ELSE
            ERRMSG = "Job is not scheduled on this date"
            GOSUB 90000
            GOTO 10500
         END
      CASE TEMP.DATE = ""
         FOR FND = 1 TO TR.CNT UNTIL TEMP.DATE # ""
            BEGIN CASE
            CASE JBS.CCTR.STATUS<1,FND> = "C"
            CASE JBS.CCTR.STATUS<1,FND> = "I"
            CASE JBS.SCH.DATE<1,FND> = ""
            CASE JBS.EXP.DATE<1,FND> = ""
            CASE JBS.USD.HRS<1,FND> > 0
               TEMP.DATE = JBS.SCH.DATE<1,FND>
               PTR = FND
            CASE 1
            END CASE
         NEXT FND
         IF TEMP.DATE # "" THEN
            TEMP.DEPT = JBS.DEPT<1,PTR>
            TEMP.CCTR = JBS.CCTR<1,PTR>
            MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE MAT CCTR.REC=""
            S$DATA(7)<S$SCR,REF.NO> = TEMP.DEPT
            S$DATA(8)<S$SCR,REF.NO> = TEMP.CCTR
            S$DATA(19)<S$SCR,REF.NO> = CCTR.DESC
            S$VAL = REF.NO
            SCREEN DISPLAY;;7
            S$VAL = REF.NO
            SCREEN DISPLAY;;8
            S$VAL = REF.NO
            SCREEN DISPLAY;;19
         END
      CASE 1
         GOTO 10500
      END CASE
      IF TEMP.DATE = "" THEN
         ERRMSG = "System could not determine the date"
         GOSUB 90000
         GOTO 10500
      END
      S$DATA(9)<S$SCR,REF.NO> = TEMP.DATE
      S$VAL = REF.NO
      SCREEN DISPLAY;;9
      JOB.NOS<REF.NO> = TEMP.JOB
      J.DEPTS<REF.NO> = TEMP.DEPT
      J.CCTRS<REF.NO> = TEMP.CCTR
      J.DATES<REF.NO> = TEMP.DATE
10999*
      RETURN
*
*---- SCROLL INTERNAL COMMENTS
50000*
      START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = LINE.CNT
      SCREEN MULTI;;C;2;3;5;6;7;8;9;4;19
      RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
      BEGIN CASE
      CASE PROC.TYPE = "M"
         READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
         REQDIV = DIV.OWNER
         CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
         BEGIN CASE
         CASE TP.DIV = "X"
            RELEASE PSS.LOCK, CONO:"TP"
            IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
         CASE TP.DIV = ""
            DCNT = DCOUNT(REQDIV,VM)
            FOR DPTR = 1 TO DCNT
               CDIV = REQDIV<1,DPTR>
               LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
               READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
            NEXT DPTR
         END CASE
         RELEASE PSS.LOCK, CONO:"TP"
         TP.ERRMSG = ERRMSG
      CASE 1
         TP.DIV = ""
         DELETE PSS.LOCK, @TTY
         TP.ERRMSG = ""
      END CASE
      RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
99999*
      RELEASE
*       PRINT @(-1):
   END
