SUBROUTINE JOB.TRACKING.ERRORS (CONO,JOB.NUM,TODAY,MAT JTRK.REC)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - JOB.TRACKING.ERRORS
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 07/18/88
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* DESCRIPTION
* This subroutine is called from JOB.SCHED.DET.MAINT program to view
* the unscheduled labor enteries for the job.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>JCS.CPYLIB>JOB.TRACKING
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      OPEN "PSS.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT LOCATE PSS.SCREENS FILE"
         GOSUB 90000
         RETURN
      END
      SCREEN DEFINE;JOB.TRACKING.ERRORS
      SCREEN FORMAT
      SCREEN COUNT;;11
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
*---- TASK # 19937 ----
      MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
      IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
         OPEN "","JOB" TO JOB ELSE
            ERRMSG = "CANNOT LOCATE JOB FILE"
            GOSUB 90000
            RETURN
         END
      END
*----------------------
*
*---- MAIN PROCESSING
*
100*
      S$DATA(1)<S$SCR> = TODAY
      S$DATA(2)<S$SCR> = JOB.NUM
*---- TASK # 19937 ----
      JDESC = JBS.CUST.NAME
      IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
         MATREAD JOB.REC FROM JOB, CONO:JOB.NUM THEN
            IF TRIM(JOB.DESC<1,1>) # "" THEN
               IF CO.PSS.JDESC.FLAG = "J" THEN
                  JDESC = JOB.DESC<1,1>
               END ELSE
                  JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
               END
            END
         END
      END
*     S$DATA(3)<S$SCR> = JBS.CUST.NAME
      S$DATA(3)<S$SCR> = JDESC
*----------------------
      S$DATA(11)<S$SCR> = ""
      S$DATA(12)<S$SCR> = ""
      S$DATA(13)<S$SCR> = ""
      S$DATA(14)<S$SCR> = ""
      S$DATA(15)<S$SCR> = ""
      SCREEN DISPLAY;;ALL
      LINES = DCOUNT(JTRK.TIME.STAMP,VM)
      REF = 0
      IF LINES THEN
         PREV.CCTR = JTRK.CCTR<1,1>
         PREV.OPER = JTRK.OPER<1,1>
         MATREAD CCTR.REC FROM COST.CNTR, CONO : PREV.CCTR ELSE
            MAT CCTR.REC = ""
            CCTR.DESC = "NOT ON FILE"
         END
         MATREAD OPER.REC FROM OPERATION, CONO : PREV.OPER ELSE
            MAT OPER.REC = ""
            OPER.DESC = "NOT ON FILE"
         END
         S$DATA(12)<S$SCR,1> = CCTR.DESC
         S$DATA(13)<S$SCR,1> = OPER.DESC
         S$DATA(14)<S$SCR,1> = JTRK.HRS<1,1>
         S$DATA(15)<S$SCR,1> = JTRK.IMP<1,1>
         REF = 1
      END
      FOR CC = 2 TO LINES
         BEGIN CASE
         CASE PREV.CCTR # JTRK.CCTR<1,CC>
            REF = REF + 1
            PREV.CCTR = JTRK.CCTR<1,CC>
            PREV.OPER = JTRK.OPER<1,CC>
            MATREAD CCTR.REC FROM COST.CNTR, CONO : PREV.CCTR ELSE
               MAT CCTR.REC = ""
               CCTR.DESC = "NOT ON FILE"
            END
            MATREAD OPER.REC FROM OPERATION, CONO : PREV.OPER ELSE
               MAT OPER.REC = ""
               OPER.DESC = "NOT ON FILE"
            END
            S$DATA(12)<S$SCR,REF> = CCTR.DESC
            S$DATA(13)<S$SCR,REF> = OPER.DESC
         CASE PREV.OPER # JTRK.OPER<1,CC>
            REF = REF + 1
            IF REF = (1 + INT((REF-1)/LINE.COUNT)*LINE.COUNT) THEN
               S$DATA(12)<S$SCR,REF> = CCTR.DESC
            END
            PREV.OPER = JTRK.OPER<1,CC>
            MATREAD OPER.REC FROM OPERATION, CONO : PREV.OPER ELSE
               MAT OPER.REC = ""
               OPER.DESC = "NOT ON FILE"
            END
            S$DATA(13)<S$SCR,REF> = OPER.DESC
         END CASE
         S$DATA(14)<S$SCR,REF> = S$DATA(14)<S$SCR,REF> + JTRK.HRS<1,CC>
         S$DATA(15)<S$SCR,REF> = S$DATA(15)<S$SCR,REF> + JTRK.IMP<1,CC>
      NEXT CC
      LINES = REF
      FOR CC = 1 TO LINES
         S$DATA(14)<S$SCR,CC> = INT(S$DATA(14)<S$SCR,CC> / 10 + .99)
         IF S$DATA(15)<S$SCR,CC> <> 0 THEN
            S$DATA(15)<S$SCR,CC> = S$DATA(15)<S$SCR,CC> / 100
         END ELSE
            S$DATA(15)<S$SCR,CC> = ""
         END
      NEXT CC
      CURR.REF.NO = ""
      REF = 1
      GOSUB 50000
*
*---- GET OPERATOR LEVEL REQUEST
*
500*
      SCREEN FIELD;;21
      SCREEN INPUT;;21
      OPTION = S$VALUE
510*
      BEGIN CASE
      CASE OPTION = "" OR OPTION = "E" OR OPTION = "END"
        RETURN
      CASE OPTION = "S" OR OPTION = "SF"
         REF = CURR.REF.NO + LINE.COUNT
         IF REF > LINES THEN REF = 1
         GOSUB 50000
      CASE OPTION = "ST"
         REF = 1
         GOSUB 50000
      CASE OPTION = "SB"
         REF = LINES
         GOSUB 50000
      CASE OPTION = "SR"
         REF = CURR.REF.NO - LINE.COUNT
         IF REF < 1 THEN REF = 1
         GOSUB 50000
      END CASE
      GOTO 500
*
*---- DISPLAY MULTI-LINE DATA (TOP)
*
50000*
      START.REF.NO = 1 + INT((REF-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = LINES
      SCREEN MULTI;;C;11;12;13;14;15
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
      SCREEN CLEAR;;D
      RETURN
   END
