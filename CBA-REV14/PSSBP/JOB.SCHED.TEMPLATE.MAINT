*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - JOB.SCHED.TEMPLATE.MAINT
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 01/09/89
* DESCRIPTION
* This program allows the user to maintain the JOB.SCHED.TEMPLATE
* record by adding or changing the hours, modify the sequence of
* cost centers, adding or changing the hold codes.
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*----PROCREAD
*
*---- TASK 19407
  PROCREAD PARAM ELSE
    ERRMSG = "MUST RUN FROM PROC"
    GOSUB 90000
    GOTO 999999
  END
  IF PARAM<1> = "I" THEN
    PROC.TYPE = "I"
  END ELSE
    PROC.TYPE = "M"
  END
*---- TASK 19407
  BEGIN CASE
    CASE PROC.TYPE = "I"
      PROC.CALL = PARAM<2>
      PROC.JOB = PARAM<3>
    CASE PROC.TYPE = "M"
      PROC.CALL = ""
      PROC.JOB = ""
      DIV.OWNER = PARAM<3>  ; *---- TASK 19407
    CASE 1
      P_X = 3 ; P_Y = 23 ; P_VALUE = "ERROR IN PROCREAD" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
  END CASE
*
*---- INITIALIZATION
*
  ERRMSG = ""
  MAT CCTR.SCHED.REC = ""
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CUSTOMER FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DIVISION FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JOB.SCHED.TEMPLATE" TO JOB.SCHED.TEMPLATE ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.SCHED.TEMPLATE FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.AVAIL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","OPERATION" TO OPERATION ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN OPERATION FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.HIERARCHY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.JOURNAL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.LOCK FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*        
*--- CHECK HIERARCHY
*
  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
    ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
    GOSUB 90000
    GOTO 999999
  END
  MAT PSHR.REC = ""
*
*---- GET CONO
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  IF CONO = "END" THEN GOTO 999999
  MATREAD DIV.REC FROM DIVISION, CONO:DIV.OWNER ELSE
    ERRMSG = "INVALID SELECTED DIVISION"
    GOSUB 90000
    GOTO 999999
  END
*
*---- GET CURRENT DATE
*
  READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
*
*--- GET LOADING FLAG
*
  READ LOADING.FLG FROM PSS.CONTROL, CONO : "LOADING.FLG" ELSE
    READ LOADING.FLG FROM PSS.CONTROL, "LOADING.FLG" ELSE LOADING.FLG = "N"
  END
*
*--- INIT SCREEN
*
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;JOB.SCHED.TEMPLATE.MAINT
  SCREEN FORMAT
  SCREEN COUNT;;12
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  TP.ERRMSG = ""
  GOTO 110
*
*---- MAIN PROCESSING
*
100*
  RELEASE
  SCREEN CLEAR
110*
  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
  S$DATA(1)<S$SCR> = TODAY
  SCREEN DISPLAY;;1
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 999999
  JOB.NUM = S$VALUE
  NEW.REC = 0
  * T26126 v
  MATREADU JBS.REC FROM JOB.SCHED.TEMPLATE, CONO:JOB.NUM LOCKED
    ERRMSG = 'TEMPLATE record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 110 
  END ELSE
  * T26126 ^
    NEW.REC = 1
200*
    MAT JBS.REC = ""
    SCREEN FIELD;;25
    SCREEN INPUT;;25;GOTO 100
    BEGIN CASE
      CASE S$VALUE = ""
      CASE 1
        MATREAD JBS.REC FROM JOB.SCHED.TEMPLATE, CONO:S$VALUE ELSE
          ERRMSG = "Invalid template"
          GOSUB 90000
          GOTO 200
        END
        IF JBS.DIV = "" THEN
          ERRMSG = "No division for that template"
          GOSUB 90000
          GOTO 200
        END
        IF JBS.DIV # DIV.OWNER THEN
          ERRMSG = "Template not for selected division"
          GOSUB 90000
          GOTO 200
        END
        GOSUB 60000
        GOSUB 40000
        REF = 1
        CURR.REF.NO = ""
        GOSUB 50000
    END CASE
  END
  IF NEW.REC THEN
    JBS.CUST.ID = ""
    JBS.CUST.NAME = ""
    GOSUB 60000
    FOR X = 1 TO 3 UNTIL S$VALUE = "END"
      ON X GOSUB 2000,3000,6000
    NEXT X
    IF S$VALUE = "END" THEN GOTO 100
  END ELSE
    IF JBS.DIV # DIV.OWNER THEN
      ERRMSG = "Template not for selected division"
      GOSUB 90000
      GOTO 100
    END
    GOSUB 60000
    GOSUB 40000
    REF = 1
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REQUEST
*
500*
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      SCREEN FIELD;;26
      SCREEN INPUT;;26
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPTION = S$VALUE
510*
  BEGIN CASE
    CASE OPTION = "S" OR OPTION = "SF"
      REF = CURR.REF.NO + LINE.COUNT
      IF REF > LINE.CNT THEN REF = 1
      GOSUB 50000
    CASE OPTION = "ST"
      REF = 1
      GOSUB 50000
    CASE OPTION = "SB"
      REF = LINE.CNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "SR"
      REF = CURR.REF.NO - LINE.COUNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "F"
***      MATWRITE JBS.REC ON JOB.SCHED.TEMPLATE, CONO:JOB.NUM
      TPFID = CONO:JOB.NUM
      MATBUILD TPREC FROM JBS.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"JOB.SCHED.TEMPLATE",TPFID,TPREC,JOB.SCHED.TEMPLATE,PSS.JOURNAL,ERRMSG)
**********************************************************************
      GOTO 100
    CASE OPTION = "N"
      IF JBS.DIV = "" THEN
        ERRMSG = "Must enter a Division before continuing to next screen"
        GOSUB 90000
      END ELSE
        S$SCR = S$SCR + 1
        CALL JOB.SCHED.TEMPLATE.SUB(CONO,JOB.NUM,TODAY,LOADING.FLG)
        S$SCR = S$SCR - 1
        JBS.REQ.HRS = SUM(JBS.SCH.HRS)
        S$DATA(8) = JBS.REQ.HRS
        GOSUB 700
        GOSUB 40000
        REF = 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPTION = "P"
      SCREEN FIELD;;24
      SCREEN INPUT;;24;GOTO 500
      IF S$VALUE = "Y" THEN
***         DELETE JOB.SCHED.TEMPLATE, CONO:JOB.NUM
        TPFID = CONO:JOB.NUM
        CALL TRANSACTION.DELETE(CONO,TP.DIV,"JOB.SCHED.TEMPLATE",TPFID,JOB.SCHED.TEMPLATE,PSS.JOURNAL,ERRMSG)
**********************************************************************
        GOTO 100
      END
    CASE NUM(OPTION)
      ON OPTION GOSUB 2000,3000,6000
    CASE 1
      ERRMSG = "Invalid Selection"
      GOSUB 90000
  END CASE
  GOTO 500
*
*---- FORMAT SCREEN
*
700*
  SCREEN FORMAT
  GOSUB 61000
  RETURN
*
*---- CUSTOMER
*
2000*
  SCREEN FIELD;;4
  SCREEN INPUT;;4;RETURN
  IF S$VALUE = "" THEN
    BEGIN CASE
      CASE JBS.CUST.NAME # ""
      CASE 1
        S$DATA(5)<S$SCR> = "TEMPLATE"
    END CASE
    SCREEN FIELD;;5
    SCREEN INPUT;;5;RETURN
    JBS.CUST.NAME = S$VALUE
  END ELSE
    MATREAD CUST.REC FROM CUSTOMER, CONO:S$VALUE ELSE
      ERRMSG = "Can't locate Customer (":S$VALUE:")"
      GOSUB 90000;GOTO 2000
    END
    JBS.CUST.ID = S$VALUE
    JBS.CUST.NAME = CUST.NAME
    S$DATA(5) = JBS.CUST.NAME
    SCREEN DISPLAY;;5
  END
  RETURN
*
*---- DIVISION
*
3000*
  IF DIV.OWNER = "" THEN
    SCREEN FIELD;;6
    SCREEN INPUT;;6
  END ELSE
    S$DATA(6)<S$SCR> = DIV.OWNER
    SCREEN DISPLAY;;6
    S$VALUE = DIV.OWNER
  END
  IF S$VALUE # "END" THEN
    MATREAD DIV.REC FROM DIVISION, CONO:S$VALUE ELSE
      ERRMSG = "Can't locate Division (":S$VALUE:")"
      GOSUB 90000;GOTO 3000
    END
    JBS.DIV = S$VALUE
    S$DATA(22) = DIV.DESC
    SCREEN DISPLAY;;22
  END
  RETURN
*
*---- JOB.COMMENTS
*
6000*
  SCREEN FIELD;;9
  SCREEN INPUT;;9;RETURN
  JBS.JOB.COMMENT = S$VALUE
  RETURN
*
*---- LOAD S$DATA MATRIX
*
40000*
  S$DATA(13)<S$SCR> = ""
  S$DATA(14)<S$SCR> = ""
  S$DATA(15)<S$SCR> = ""
  LINE.CNT = DCOUNT(JBS.DEPT,VM)
  IF LINE.CNT < 1 THEN GOTO 40999
*
*--- SUM UP DEPARTMENTS
*
  LCNT = 1
  MATREAD DEPT.REC FROM DEPARTMENT,CONO:JBS.DEPT<1,1> ELSE
    MAT DEPT.REC = ""
    DEPT.DESC = "NOT ON FILE"
  END
  S$DATA(13)<S$SCR,LCNT> = JBS.DEPT<1,1>
  S$DATA(14)<S$SCR,LCNT> = DEPT.DESC
  S$DATA(15)<S$SCR,LCNT> = JBS.SCH.HRS<1,1>
  FOR REF = 2 TO LINE.CNT
    IF JBS.DEPT<1,REF-1> # JBS.DEPT<1,REF> THEN
      LCNT = LCNT + 1
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:JBS.DEPT<1,REF> ELSE
        MAT DEPT.REC = ""
        DEPT.DESC = "NOT ON FILE"
      END
      S$DATA(13)<S$SCR,LCNT> = JBS.DEPT<1,REF>
      S$DATA(14)<S$SCR,LCNT> = DEPT.DESC
      S$DATA(15)<S$SCR,LCNT> = ""
    END
    S$DATA(15)<S$SCR,LCNT> = S$DATA(15)<S$SCR,LCNT> + JBS.SCH.HRS<1,REF>
  NEXT REF
  LINE.CNT = LCNT
  MAT DEPT.REC = ""
40999*
  RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000*
  START.REF.NO = 1 + INT((REF-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = LINE.CNT
  SCREEN MULTI;;C;12;13;14;15
  RETURN
60000*
  S$DATA(4) = JBS.CUST.ID
  S$DATA(5) = JBS.CUST.NAME
  S$DATA(6) = JBS.DIV
  S$DATA(8) = JBS.REQ.HRS
  S$DATA(9) = JBS.JOB.COMMENT
  IF JBS.DIV = "" THEN
    MAT DIV.REC = ""
  END ELSE
    MATREAD DIV.REC FROM DIVISION, CONO:JBS.DIV ELSE
      MAT DIV.REC = ""
      DIV.DESC = "UNKNOWN"
    END
  END
  S$DATA(22) = DIV.DESC
61000*
  SCREEN DISPLAY;;ALL
  RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
  BEGIN CASE
    CASE PROC.TYPE = "M"
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      REQDIV = DIV.OWNER
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
      BEGIN CASE
        CASE TP.DIV = "X"
          RELEASE PSS.LOCK, CONO:"TP"
          IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
        CASE TP.DIV = ""
          DCNT = DCOUNT(REQDIV,VM)
          FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
          NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      TP.ERRMSG = ERRMSG
    CASE 1
      TP.DIV = ""
      DELETE PSS.LOCK, @TTY
      TP.ERRMSG = ""
  END CASE
  RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
999999*
*       PRINT @(-1):
*      STOP
END
