*********************************************************************
*
* PROGRAM  - CCTR.SCHED.PURGE
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/31/90
*
* DESCRIPTION
*
* This program will purge all CCTR.SCHED data for records defined on
* or prior to the date specified at time of execution.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN CCTR.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.CCTR.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE
         ERRMSG = "CANNOT OPEN PEND.JOB.SCHED FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN PSS.SCREENS FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
         ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
         ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
         GOSUB 90000
         GOTO 99999
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
      IF CONO = "END" THEN GOTO 99999
      READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
      SCREEN INIT;#
      S$SCR = 1
      SCREEN DEFINE;CCTR.SCHED.PURGE
      SCREEN FORMAT
      GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
      IF ERRMSG # "" THEN
         GOSUB 90000
         GOTO 99990
      END
      S$DATA(1)<S$SCR> = TODAY
      SCREEN DISPLAY;;1
      SCREEN FIELD;;2
      S$MINV = 0; S$MAXV = TODAY-1
      SCREEN INPUT;;2;GOTO 99990
      PDATE = S$VALUE
      SCREEN FIELD;;21
      SCREEN INPUT;;21;GOTO 99990
      IF S$VALUE = "N" THEN GOTO 99990
      RCNT = 0
      DCNT = 0
*
*---- MAIN PROCESSING
*
      SELECT CCTR.SCHED
100 *
      READNEXT ID ELSE
         LOOP
            SCREEN FIELD;;22
            SCREEN INPUT;;22
         UNTIL S$VALUE = "Y" DO
         REPEAT
         GOTO 99990
      END
      IF ID[1,3] # CONO THEN GOTO 100
      CDATE = FIELD(ID,"*",2)
      IF CDATE > PDATE THEN GOTO 100
      RCNT = RCNT + 1
      S$DATA(3)<S$SCR> = RCNT
      SCREEN DISPLAY;;3
      MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, ID ELSE GOTO 100
      PURGE.FLAG = 1
      JCNT = DCOUNT(CCS.JOB,VM)
      FOR JPTR = 1 TO JCNT WHILE PURGE.FLAG
         JOBNO = CCS.JOB<1,JPTR>
         READV REC FROM JOB.SCHED, CONO:JOBNO,1 THEN PURGE.FLAG = 0
      NEXT JPTR
      IF PURGE.FLAG THEN GOSUB 1000
      GOTO 100
*
*---- PURGE CCTR.SCHED RECORD
*
1000 *
***   DELETE CCTR.SCHED, ID
      TPFID = ID
      CALL TRANSACTION.DELETE(CONO,TP.DIV,"CCTR.SCHED",TPFID,CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
***   DELETE PEND.CCTR.SCHED, ID
      TPFID = ID
      CALL TRANSACTION.DELETE(CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      DCNT = DCNT + 1
      S$DATA(4)<S$SCR> = DCNT
      SCREEN DISPLAY;;4
      RETURN
*
***(TPCHECKBEG3)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      REQDIV = "ALL"
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
      BEGIN CASE
      CASE TP.DIV = "X"
      CASE TP.DIV = ""
         DCNT = DCOUNT(REQDIV,VM)
         FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
         NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99990 *
SCREEN CLOSE
*
99999 *
*       PRINT @(-1):
      STOP
   END
