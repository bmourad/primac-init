*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - RESCHED.DATE.MAINT
* AUTHOR   - CURTIS WILLIAMS, PACRIM SOFTWARE
* DATE     - 02/18/92
* MODIFIED - 11/02/95 TERRY NORTHCUTT TASK 19407 DIVISIONALIZATION
* MODIFIED - 02/07/96, NA, TASK 19937, JOB DESC BASED ON COMPANY FLAG.
* DESCRIPTION
* This program allows the user to manualy change the schedule dates
* of jobs in a specific cost center.
*T21657 rik 04/15/1997 * LOSING SELECT LIST WHEN CALLING
*                        TRANSACTION.LOCK
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PROCREAD
*
  PROC.TYPE = "M"
  PROCREAD BUFFER ELSE
    ERRMSG = "PROGRAM MUST BE RUN FROM A PROC" ;GOSUB 90000
    GOTO 999999
  END
  CONO = BUFFER<1>
  DIV.OWNER = BUFFER<3>  ;  * TASK 19407
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PREFIX FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.SCREENS" TO M.SCREENS ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.SCHED FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CCTR.AVAIL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN HOLIDAY.SCHED FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.SCHED FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.CRTL.DATE.EXC FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*---- TASK 19407
  OPEN "","JOB" TO JOB ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*---- TASK 19407
  OPEN "","OPERATION" TO OPERATION ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN OPERATION FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.HIERARCHY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.JOURNAL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
    P_X = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PSS.LOCK FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*--- CHECK FOR HIERARCHY
*
  ERRMSG = ""
  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
    ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
    GOSUB 90000
    GOTO 999999
  END
  MAT PSHR.REC = ""
*
*--- CHECK FOR LOCKS
*
  DUMMY = ""
  REC.LOCK = 0
  READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "SCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
  IF REC.LOCK THEN
    ERRMSG = "MUST WAIT UNTIL SCHEDULE PROCESS IS DONE"
    GOSUB 90000
    GOTO 98888
  END
  DUMMY = ""
  REC.LOCK = 0
  READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "UNSCHED.FLG" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
  IF REC.LOCK THEN
    ERRMSG = "MUST WAIT UNTIL UNSCHEDULE PROCESS IS DONE"
    GOSUB 90000
    GOTO 98888
  END
  RELEASE PSS.CONTROL, CONO : DIV.OWNER : "UNSCHED.FLG" ; *---- TASK 19407
  DUMMY = ""
  REC.LOCK = 0
  READU DUMMY FROM PSS.CONTROL, CONO : DIV.OWNER : "JOB.SCHED.LIST" LOCKED REC.LOCK = 1 ELSE DUMMY = "" ; *---- TASK 19407
  IF REC.LOCK THEN
    ERRMSG = "MUST WAIT UNTIL MULTI SCHEDULE PROCESS IS DONE"
    GOSUB 90000
    GOTO 98888
  END
  RELEASE PSS.CONTROL, CONO : DIV.OWNER : "JOB.SCHED.LIST" ; *---- TASK 19407
  DUMMY = ""
*
*---- INITIALIZATION
*
  READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
  MAT GEN.XREF.REC = ""
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;RESCHED.DATE.MAINT
  SCREEN FORMAT
  SCREEN COUNT;;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
*---- TASK # 19937 ----
  MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
*----------------------
  TP.ERRMSG = ""
*T21657 v
  LISTVAR = ''
  DONE = 0
  LOOP
    READNEXT LOAD.ID ELSE DONE = 1
  UNTIL DONE DO
    LISTVAR<-1> = LOAD.ID
  REPEAT
*T21657 ^
  GOTO 110
*
*---- MAIN PROCESSING
*
100*
  SCREEN CLEAR
110*
  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
  S$DATA(1)<S$SCR> = TODAY
  SCREEN DISPLAY;;1
  UPDATE.FLAG = ""
  LINE.CNT = 0
  TEMP.TRAN = ""
*
*---- GET JOB THAT ARE BEHIND
*
  MORE = 1
  CNT = 0
  JOB.CONTROL = ""
  PTR = 0;*T21657
  LOOP
*T21657         READNEXT ID ELSE MORE = 0
    PTR += 1;*T21657
    ID = LISTVAR<PTR>;*T21657
    IF ID = '' THEN MORE = 0;*T21657
  WHILE MORE DO
    CNT = CNT +1
    JOB.CONTROL<1,CNT> = ID[4,99]
  REPEAT
  GOSUB 40000
  IF LINE.CNT = 0 THEN
    ERRMSG = "NO ITEMS BEHIND SCHEDULE..."
    GOSUB 90000
    GOTO 98000
  END
*
  REF = 1
  CURR.REF.NO = ""
  GOSUB 50000
*
*---- GET OPERATOR REQUEST
*
500*
  BEGIN CASE
    CASE PROC.TYPE = "M" AND TP.DIV # "X"
      SCREEN FIELD;;8
      SCREEN INPUT;;8
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPTION = S$VALUE
510*
  BEGIN CASE
    CASE OPTION = "S" OR OPTION = "SF"
      REF = CURR.REF.NO + LINE.COUNT
      IF REF > LINE.CNT THEN REF = 1
      GOSUB 50000
    CASE OPTION = "ST"
      REF = 1
      GOSUB 50000
    CASE OPTION = "SB"
      REF = LINE.CNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "SR"
      REF = CURR.REF.NO - LINE.COUNT
      IF REF < 1 THEN REF = 1
      GOSUB 50000
    CASE OPTION = "N"
      PROCWRITE DIV.OWNER ; *---- TASK 19407
      SCREEN CLOSE
      GOTO 999999
    CASE OPTION = "E" OR OPTION = "END"
      PROCWRITE "END"
      SCREEN CLOSE
      GOTO 999999
    CASE OPTION = "F"
      GOTO 100
    CASE NUM(OPTION) AND OPTION > 0 AND OPTION <= LINE.CNT AND LINE.CNT > 0
      IF S$DATA(17)<S$SCR,OPTION> # "" THEN
        ERRMSG = "Cannot change due to the status"
        GOSUB 90000
        GOTO 500
      END
      REF = OPTION
      GOSUB 50000
      GOSUB 10000
      S$DATA(10)<S$SCR,REF> = ""
      IF S$VALUE = "END" THEN
        S$DATA(16)<S$SCR,REF> = ""
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE 1
      ERRMSG = "Invalid Selection"
      GOSUB 90000
  END CASE
  GOTO 500
*
*---- GET LINE REFERENCE NUMBER
*
600*
  SCREEN FIELD;;9
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;;9
  RETURN
*
*---- GET REVISE DATE AND RESCHEDULE THE JOB
*
10000*
  REC.LOCK = 0
  JOB.NO = S$DATA(12)<S$SCR,REF>
  CDATE = S$DATA(14)<S$SCR,REF>
  DEPT = S$DATA(2)<S$SCR,REF>
  CCTR = S$DATA(5)<S$SCR,REF>
  MATREADU JBS.REC FROM JOB.SCHED, CONO:JOB.NO LOCKED REC.LOCK = 1 ELSE
    ERRMSG = "JOB.SCHED record is missing"
    GOSUB 90000
    GOTO 18888
  END
  IF REC.LOCK THEN
    ERRMSG = "JOB.SCHED record is locked"
    GOSUB 90000
    GOTO 19999
  END
*---- TASK 19407
*
*---- CHECK FOR DIV.OWNER
*
  MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
    ERRMSG = "JOB NUMBER ":JOB.NO:" NOT ON FILE"
    GOSUB 90000
    GOTO 19999
  END
  IF JOB.DIV # DIV.OWNER THEN
    ERRMSG = "Job not owned by selected division ":DIV.OWNER
    GOSUB 90000
    GOTO 19999
  END
*---- TASK 19407
  MATREAD CCTR.SCHED.REC FROM CCTR.SCHED, CONO:CCTR:"*":CDATE ELSE MAT CCTR.SCHED.REC = ""
  PTR = 1
  LOOP
  WHILE PTR DO
    LOCATE JOB.NO IN CCS.JOB<1>,PTR SETTING FND ELSE
      PTR = 0
      FND = 0
    END
    BEGIN CASE
      CASE PTR = 0
      CASE CCS.TRAN<1,FND> = ""
        PTR = FND + 1
      CASE CCS.TRAN<1,FND> = TEMP.TRAN<REF>
        PTR = 0
      CASE 1
        PTR = FND + 1
    END CASE
  REPEAT
  IF FND = 0 THEN
    ERRMSG = "ERROR in CCTR.SCHED record"
    GOSUB 90000
    GOTO 18888
  END
  PTR = 1
  LOOP
  WHILE PTR DO
    LOCATE TEMP.TRAN<REF> IN JBS.TRAN<1>,PTR SETTING FND ELSE
      PTR = 0
      FND = 0
    END
    BEGIN CASE
      CASE PTR = 0
      CASE CCTR # JBS.CCTR<1,FND>
        PTR = FND + 1
      CASE JBS.SCH.DATE<1,FND> = ""
        PTR = FND + 1
      CASE JBS.EXP.DATE<1,FND> = ""
        PTR = FND + 1
      CASE JBS.SCH.DATE<1,FND> > CDATE
        PTR = FND + 1
      CASE JBS.EXP.DATE<1,FND> < CDATE
        PTR = FND + 1
      CASE 1
        PTR = 0
    END CASE
  REPEAT
  IF FND = 0 THEN
    ERRMSG = "Could not match CCTR.SCHED and JOB.SCHED records"
    GOSUB 90000
    GOTO 18888
  END
  IF JBS.DEPT.STATUS<1,FND> # "" THEN
    ERRMSG = "Status was modified in JOB.SCHED record"
    GOSUB 90000
    GOTO 18888
  END
  SPTR = FND
  EPTR = DCOUNT(JBS.DEPT,VM)
  SBLK = 0
  FOR PTR = SPTR - 1 TO 1 STEP - 1 UNTIL SBLK
    BEGIN CASE
      CASE JBS.DEPT.STATUS<1,PTR> # ""
      CASE JBS.USD.HRS<1,PTR> >= JBS.SCH.HRS<1,PTR>
      CASE 1
        SBLK = 1
    END CASE
  NEXT PTR
  IF SBLK THEN
    ERRMSG = "Job is partially scheduled. Must use the schedule process"
    GOSUB 90000
    GOTO 18888
  END
11000*
  S$VAL = REF
  S$DATA(16)<S$SCR,REF> = ""
  SCREEN FIELD;;16
  SCREEN INPUT;;16;GOTO 18888
  BEGIN CASE
    CASE S$VALUE = "???"
      S$DATA(16)<S$SCR,REF> = ""
      PARAM = "I"
      PARAM<1,2> = "AUTO"
      PARAM<1,3> = JOB.NO
      CALL SI_PERFORM.PROG ("JOB.SCHED.DET.MAINT",PARAM)
      SCREEN FORMAT
      GOSUB 60000
      CURR.REF.NO = ""
      GOSUB 50000
    CASE NOT(NUM(S$VALUE))
      ERRMSG = "Invalid date."
      GOSUB 90000
    CASE S$VALUE < TODAY
      ERRMSG = "Invalid date. The date can not be less than today's date."
      GOSUB 90000
    CASE S$VALUE <= CDATE
      ERRMSG = "Must use unschedule and schedule process"
      GOSUB 90000
    CASE 1
      REV.DATE = S$VALUE
      GOTO 12000
  END CASE
  GOTO 11000
12000*
  S$DATA(10)<S$SCR> = ""
  SCREEN FIELD;;10
  SCREEN INPUT;;10;GOTO 18888
  IF S$VALUE = "N" THEN GOTO 11000
  ACTION = ""
  ALL.FLG = 0
  CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,SPTR,EPTR,CDATE,ALL.FLG)
  P_X = 3 ; P_Y = 23 ; P_VALUE = "NOW PROCESSING SCHEDULE ROUTINE" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  BCK.FLG = "Y"
  DUE.DATE = ""
  CALL GEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NO,REV.DATE,TODAY,DUE.DATE,SPTR,EPTR,BCK.FLG)
  IF ACTION = "E" THEN
    SBLK = 1
  END ELSE
    IF DUE.DATE > JBS.DUE.DATE THEN
      SCREEN FIELD;;24
      S$PMSG = "New calculated due date is - ": OCONV(DUE.DATE,"D2/") :". Accept (Y/N)"
      SCREEN INPUT;;24
      IF S$VALUE # "Y" THEN SBLK = 1 ELSE SBLK = 0
      S$VALUE = ""
    END ELSE
      SBLK = 0
    END
  END
  IF SBLK AND SPTR > 0 AND EPTR > 0 AND REV.DATE # "" THEN
    ALL.FLG = 0
    CALL UNSCHED.JOB.SUB(CONO,ACTION,JOB.NO,TODAY,SPTR,EPTR,REV.DATE,ALL.FLG)
  END
*
*--- BUILD JOB.CRTL.DATE.EXC
*
  CALL JOB.CRTL.DATE.EXC.UPD (CONO,JOB.NO)
  JOB.CONTROL = S$DATA(12)<S$SCR>
  S$DATA(11)<S$SCR> = ""
  S$DATA(12)<S$SCR> = ""
  S$DATA(13)<S$SCR> = ""
  S$DATA(14)<S$SCR> = ""
  S$DATA(15)<S$SCR> = ""
  S$DATA(16)<S$SCR> = ""
  S$DATA(17)<S$SCR> = ""
  LINE.CNT = 0
  TEMP.TRAN = ""
  GOSUB 40000
  CURR.REF.NO = ""
  IF REF > LINE.CNT THEN REF = LINE.CNT
  IF REF < 1 THEN REF = 1
  GOSUB 50000
18888*
  RELEASE JOB.SCHED, CONO:JOB.NO
19999*
  RETURN
*
*---- LOAD S$DATA MATRIX
*
40000*
  JOB.CNT = DCOUNT(JOB.CONTROL<1>,VM)
  FOR JC = 1 TO JOB.CNT
    JOB.NO = JOB.CONTROL<1,JC>
    MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE
      MAT CCTR.SCHED.REC = ""
    END
*---- TASK # 19937 ----
    JDESC = JBS.CUST.NAME
    IF CO.PSS.JDESC.FLAG = "J" OR CO.PSS.JDESC.FLAG = "X" THEN
      MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
        IF TRIM(JOB.DESC<1,1>) # "" THEN
          IF CO.PSS.JDESC.FLAG = "J" THEN
            JDESC = JOB.DESC<1,1>
          END ELSE
            JDESC = JDESC[1,10]:":":JOB.DESC<1,1>
          END
        END
      END
    END
*----------------------
41000*
    ALL.JOB = ""
    ALL.HRS = ""
    ALL.STAT = ""
    ALL.TRAN = ""
    ALL.DEPT = ""
    ALL.CCTR = ""
    ALL.SCH.DATE = ""
*--- SUMMARY BY EQUIP BY SHIFT
    JCNT = DCOUNT(JBS.DEPT<1>,VM)
    DONE = 0
    FOR JB = 1 TO JCNT UNTIL DONE
      IF JBS.CCTR.STATUS<1,JB> # "" THEN GOTO 41099
      IF JBS.SCH.DATE<1,JB> => TODAY THEN GOTO 41099
      LINE.CNT = LINE.CNT + 1
      ALL.JOB<1,LINE.CNT> = JOB.NO
      ALL.DEPT<1,LINE.CNT> = JBS.DEPT<1,JB>
      ALL.CCTR<1,LINE.CNT> = JBS.CCTR<1,JB>
      ALL.TRAN<1,LINE.CNT> = JBS.TRAN<1,JB>
      ALL.HRS<1,LINE.CNT> = JBS.SCH.HRS<1,JB>
      ALL.STAT<1,LINE.CNT> = JBS.CCTR.STATUS<1,JB>
      ALL.SCH.DATE<1,LINE.CNT> = JBS.SCH.DATE<1,JB>
      CCTR = ALL.CCTR<1,LINE.CNT>
      MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE MAT CCTR.REC=""
      S$DATA(2)<S$SCR,LINE.CNT> = ALL.DEPT<1,LINE.CNT>
      S$DATA(5)<S$SCR,LINE.CNT> = CCTR
      S$DATA(6)<S$SCR,LINE.CNT> = CCTR.DESC
      S$DATA(12)<S$SCR,LINE.CNT> = JOB.NO
*---- TASK # 19937 ----
*           S$DATA(13)<S$SCR,LINE.CNT> = JBS.CUST.NAME
      S$DATA(13)<S$SCR,LINE.CNT> = JDESC
*----------------------
      S$DATA(14)<S$SCR,LINE.CNT> = ALL.SCH.DATE<1,LINE.CNT>
      S$DATA(15)<S$SCR,LINE.CNT> = ALL.HRS<1,LINE.CNT>
      S$DATA(17)<S$SCR,LINE.CNT> = ALL.STAT<1,LINE.CNT>
      TEMP.TRAN<LINE.CNT> = ALL.TRAN<1,LINE.CNT>
      DONE = 1
41099*
    NEXT JB
  NEXT JC
  RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000*
  START.REF.NO = 1 + INT((REF-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = LINE.CNT
  SCREEN MULTI;;C;11;12;2;5;6;13;14;15;16;17
  RETURN
*
*---- DISPLAY ALL DATA
*
60000*
  SCREEN DISPLAY;;ALL
  RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
  BEGIN CASE
    CASE PROC.TYPE = "M"
      READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
      REQDIV = DIV.OWNER
      CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
      BEGIN CASE
        CASE TP.DIV = "X"
          RELEASE PSS.LOCK, CONO:"TP"
          IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
        CASE TP.DIV = ""
          DCNT = DCOUNT(REQDIV,VM)
          FOR DPTR = 1 TO DCNT
            CDIV = REQDIV<1,DPTR>
            LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
            READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
          NEXT DPTR
      END CASE
      RELEASE PSS.LOCK, CONO:"TP"
      TP.ERRMSG = ERRMSG
    CASE 1
      TP.DIV = ""
      DELETE PSS.LOCK, @TTY
      TP.ERRMSG = ""
  END CASE
  RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- CLOSE
98000 *
  SCREEN CLOSE
*
*---- GENERAL RELEASE
*
98888*
  RELEASE
*
*---- END OF PROGRAM
*
999999*
END
