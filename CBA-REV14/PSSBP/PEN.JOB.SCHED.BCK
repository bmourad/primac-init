      SUBROUTINE PEN.JOB.SCHED.BCK(CONO,ACTION,JOB.NUM,LAST.DATE,TODAY,ST.PTR,EN.PTR)
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - PSSBP
* PROGRAM  - PEN.JOB.SCHED.BCK
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE     - 05/04/86
* DESCRIPTION
* This program will schedule all operations back from PEND.JOB.SCHED
* record and update PEND.CCTR.SCHED file.
* The program has been modified from GEN.JOB.SCHED.BCK
* TASK 20406 JR WHEN PUTTING SAME DEPT AND CCTR BACK TO BACK ON SCHED,
* HOLD CODE AND DATE DO NOT GET SET
* TASK 20800 JR ERRMSG IS SO LONG IT MAKES SCREEN SCROLL UP
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED.MATRIX
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>CCTR.AVAIL
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SET UP SYSCOM
*
      SYS.TYPE = 1
      CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- LINE ITEM DIM
*
      DIM HOLD.REC(15)
      EQU DEPT         TO HOLD.REC(1)
      EQU CCTR         TO HOLD.REC(2)
      EQU H.CODE       TO HOLD.REC(3)
      EQU H.SHIFT      TO HOLD.REC(4)
      EQU H.EQUIP      TO HOLD.REC(5)
      EQU H.LOAD       TO HOLD.REC(6)
      EQU H.DATE       TO HOLD.REC(7)
      EQU H.PO         TO HOLD.REC(8)
      EQU H.DC         TO HOLD.REC(9)
      EQU H.DAYS       TO HOLD.REC(10)
      EQU H.CONT.SCH   TO HOLD.REC(11)
      EQU H.SAME.EQUIP TO HOLD.REC(12)
      EQU CCTR.HRS     TO HOLD.REC(13)
*
*---- ALL DIM
*
      DIM ALL.REC(5)
      EQU ALL.DATE TO ALL.REC(1)
      EQU ALL.EQP  TO ALL.REC(2)
      EQU ALL.SFT  TO ALL.REC(3)
      EQU ALL.HRS  TO ALL.REC(4)
*
*---- INITIALIZATION
*
      IF ACTION = "W" THEN WIN.MODE = 1 ELSE WIN.MODE = 0
      ACTION = ""
      MAT HOLD.REC = ""
      MAT ALL.REC = ""
      MAT EDIT.COM = ""
      TYP = 0
      CALL EDIT.SUB1 (MAT EDIT.COM)
      ERRMSG = ""
      MAT PJBSM.REC = ""
      REQ.DATE = LAST.DATE
      LAST.DATE = ""
      READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*
*---- MAIN PROCESSING
*
      TR.CNT = DCOUNT(PJBS.DEPT,VM)
      IF REQ.DATE = "" THEN REQ.DATE = PJBS.DUE.DATE
*ERRMSG="DATE=(":OCONV(REQ.DATE,"D2-"):") ST.PTR=(":ST.PTR:") EN.PTR=(":EN.PTR:")"; GOSUB 90000
      IF REQ.DATE < TODAY THEN
         ERRMSG = "Can't schedule job for given DUE DATE"
         GOSUB 90000
         ACTION = "N"
         GOTO 99999
      END
*
*---- FIND LAST CCTR TO SCHEDULED
*
      CK.DATE = TODAY
      CK.SFT = 1
      S.TR = 0
      FOR TR = TR.CNT TO 1 STEP - 1
         BEGIN CASE
            CASE PJBS.DEPT.STATUS<1,TR> # ""
               BEGIN CASE
                  CASE PJBS.EXP.DATE<1,TR> < CK.DATE
                  CASE PJBS.EXP.DATE<1,TR> > CK.DATE
                     CK.DATE = PJBS.EXP.DATE<1,TR>
                     CK.SFT = PJBS.EXP.SHIFT<1,TR>
                  CASE PJBS.EXP.SHIFT<1,TR> > CK.SFT
                     CK.SFT = PJBS.EXP.SHIFT<1,TR>
               END CASE
            CASE PJBS.USD.HRS<1,TR> >= PJBS.SCH.HRS<1,TR>
               BEGIN CASE
                  CASE PJBS.EXP.DATE<1,TR> < CK.DATE
                  CASE PJBS.EXP.DATE<1,TR> > CK.DATE
                     CK.DATE = PJBS.EXP.DATE<1,TR>
                     CK.SFT = PJBS.EXP.SHIFT<1,TR>
                  CASE PJBS.EXP.SHIFT<1,TR> > CK.SFT
                     CK.SFT = PJBS.EXP.SHIFT<1,TR>
               END CASE
            CASE 1
               S.TR = TR
         END CASE
      NEXT TR
*
*---- SCHEDULE JOB FROM DUE DATE BACK
*
1000 *
      SFT = 3
      XDATE = REQ.DATE
      BLK = 0
      S.TR = ST.PTR
      FOR TR = TR.CNT TO S.TR STEP - 1 UNTIL (XDATE < CK.DATE OR BLK)
         DEPT = PJBS.DEPT<1,TR>
         CCTR = PJBS.CCTR<1,TR>
*ERRMSG="DATE=(":OCONV(XDATE,"D2-"):") TR=(":TR:") CCTR=(":CCTR:")"; GOSUB 90000
         BEGIN CASE
            CASE PJBS.DEPT.STATUS<1,TR> # ""
               BEGIN CASE
                  CASE PJBS.SCH.DATE<1,TR> = "" AND PJBS.ACT.DATE<1,TR> < XDATE
                     XDATE = PJBS.ACT.DATE<1,TR>
                     SFT = 1
                  CASE PJBS.SCH.DATE<1,TR> = ""
                  CASE PJBS.SCH.DATE<1,TR> > XDATE
                  CASE PJBS.SCH.DATE<1,TR> < XDATE
                     XDATE = PJBS.SCH.DATE<1,TR>
                     SFT = PJBS.SCH.SHIFT<1,TR>
                     IF SFT < 1 OR SFT > 3 THEN SFT = 1
                  CASE PJBS.SCH.SHIFT<1,TR> < SFT
                     SFT = PJBS.SCH.SHIFT<1,TR>
                     IF SFT < 1 OR SFT > 3 THEN SFT = 1
               END CASE
            CASE PJBS.USD.HRS<1,TR> >= PJBS.SCH.HRS<1,TR>
               BEGIN CASE
                  CASE PJBS.SCH.DATE<1,TR> > XDATE
                  CASE PJBS.SCH.DATE<1,TR> < XDATE
                     XDATE = PJBS.SCH.DATE<1,TR>
                     SFT = PJBS.SCH.SHIFT<1,TR>
                     IF SFT < 1 OR SFT > 3 THEN SFT = 1
                  CASE PJBS.SCH.SHIFT<1,TR> < SFT
                     SFT = PJBS.SCH.SHIFT<1,TR>
                     IF SFT < 1 OR SFT > 3 THEN SFT = 1
               END CASE
            CASE PJBS.USD.HRS<1,TR> + 0 > 0
               IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
               SDATE = PJBS.EXP.DATE<1,TR>
               BCK.FLG = "Y"
               DUE.DATE = ""
               CALL PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NUM,SDATE,TODAY,DUE.DATE,TR,TR,BCK.FLG)
               IF ACTION = "E" THEN
                  SBLK = 1
               END ELSE
                  GOSUB 7000
               END
               IF SBLK THEN
                  UPTR = TR
                  UPTR1 = TR
                  GOSUB 71000
                  ERRMSG = "Can't schedule BACKWARD"
                  BLK = 1
               END ELSE
                  IF ST.PTR = 0 THEN
                     ST.PTR = TR
                     LAST.DATE = SDATE
                  END
                  IF TR < ST.PTR THEN
                     ST.PTR = TR
                     LAST.DATE = SDATE
                  END
                  BEGIN CASE
                     CASE PJBS.SCH.DATE<1,TR> > XDATE
                     CASE PJBS.SCH.DATE<1,TR> < XDATE
                        XDATE = PJBS.SCH.DATE<1,TR>
                        SFT = PJBS.SCH.SHIFT<1,TR>
                        IF SFT < 1 OR SFT > 3 THEN SFT = 1
                     CASE PJBS.SCH.SHIFT<1,TR> < SFT
                        SFT = PJBS.SCH.SHIFT<1,TR>
                        IF SFT < 1 OR SFT > 3 THEN SFT = 1
                  END CASE
               END
            CASE PJBS.HOLD.CODE<1,TR> = "L" AND PJBS.HOLD.DATE<1,TR> >= TODAY
               IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
               SDATE = PJBS.HOLD.DATE<1,TR>
               BCK.FLG = "Y"
               DUE.DATE = ""
               CALL PEN.JOB.SCHED.FWD(CONO,ACTION,JOB.NUM,SDATE,TODAY,DUE.DATE,TR,TR,BCK.FLG)
               IF ACTION = "E" THEN
                  SBLK = 1
               END ELSE
                  GOSUB 7000
               END
               IF SBLK THEN
                  UPTR = TR
                  UPTR1 = TR
                  GOSUB 71000
                  ERRMSG = "Can't schedule BACKWARD"
                  BLK = 1
               END ELSE
                  IF ST.PTR = 0 THEN
                     ST.PTR = TR
                     LAST.DATE = SDATE
                  END
                  IF TR < ST.PTR THEN
                     ST.PTR = TR
                     LAST.DATE = SDATE
                  END
                  BEGIN CASE
                     CASE PJBS.SCH.DATE<1,TR> > XDATE
                     CASE PJBS.SCH.DATE<1,TR> < XDATE
                        XDATE = PJBS.SCH.DATE<1,TR>
                        SFT = PJBS.SCH.SHIFT<1,TR>
                        IF SFT < 1 OR SFT > 3 THEN SFT = 1
                     CASE PJBS.SCH.SHIFT<1,TR> < SFT
                        SFT = PJBS.SCH.SHIFT<1,TR>
                        IF SFT < 1 OR SFT > 3 THEN SFT = 1
                  END CASE
               END
            CASE PJBS.HOLD.CODE<1,TR> = "L"
               ERRMSG = "Can't schedule because of HOLD code 'L'"
               BLK = 1
            CASE PJBS.HOLD.CODE<1,TR> = ""
               ERRMSG = "Invalid schedule HOLD code "
               BLK = 1
            CASE 1
               GOTO 1010
         END CASE
         GOTO 1899
*
*---- ADJUST SCHEDULE DATE AND SHIFT
*
1010 *
         BEGIN CASE
            CASE TR = TR.CNT
            CASE PJBS.HOLD.CODE<1,TR+1> = "SS"
            CASE PJBS.HOLD.CODE<1,TR+1> = "SN"
               IF SFT > 1 THEN
                  SFT = SFT - 1
               END ELSE
                  XDATE = XDATE - 1
                  SFT = 3
               END
            CASE PJBS.HOLD.CODE<1,TR+1> = "D" AND NUM(PJBS.HOLD.DAYS<1,TR+1>)
               XDATE = XDATE - PJBS.HOLD.DAYS<1,TR+1> - 1
               SFT = 3
            CASE PJBS.HOLD.CODE<1,TR+1> = "D"
               ERRMSG = "Invalid schedule parameters"
               BLK = 1
               GOTO 1899
            CASE 1
               GOSUB 5000
         END CASE
         CCTR.HRS = PJBS.SCH.HRS<1,TR> - PJBS.USD.HRS<1,TR>
         BGN.HRS = CCTR.HRS
         IF XDATE < CK.DATE THEN GOTO 1899
*
*---- CHECK HOLD PARAMETERS
*
         H.CODE = PJBS.HOLD.CODE<1,TR>
         H.SHIFT = PJBS.SHIFT<1,TR>
         H.EQUIP = PJBS.EQUIP<1,TR>
         H.LOAD = PJBS.OVER.LOAD<1,TR>
         H.DATE = PJBS.HOLD.DATE<1,TR>
         H.PO = PJBS.HOLD.PO<1,TR>
         H.DC = PJBS.HOLD.DP.CC<1,TR>
         H.DAYS = PJBS.HOLD.DAYS<1,TR>
         H.CONT.SCH = PJBS.CONT.SCH<1,TR>
         H.SAME.EQUIP = PJBS.SAME.EQUIP<1,TR>
         IF H.LOAD = "Y" AND H.CONT.SCH # "Y" THEN H.CONT.SCH = "Y"
         IF H.EQUIP # "" AND H.SAME.EQUIP # "Y" THEN H.SAME.EQUIP = "Y"
*
*---- CHECK THE SHIFT
*
         BEGIN CASE
            CASE H.SHIFT = ""
            CASE NOT(NUM(H.SHIFT))
               BLK = 1
               ERRMSG = "Invalid Shift - ":H.SHIFT:" for Cost Center":CCTR
               GOTO 1899
         END CASE
*
*---- CHECK THE RESOURCE
*
         BEGIN CASE
            CASE H.EQUIP = ""
            CASE NOT(NUM(H.EQUIP))
               BLK = 1
               ERRMSG = "Invalid Resource Number - ":H.EQUIP:" for Cost Center ":CCTR
            CASE 1
               GOSUB 3000
         END CASE
         IF BLK THEN GOTO 1899
         TEMP.DATE = ""
         TEMP.SFT = ""
         BEGIN CASE
            CASE H.CODE = "L" AND H.DATE # "" AND NUM(H.DATE) AND H.LOAD = "Y"
            CASE H.CODE = "H" AND H.DATE # "" AND NUM(H.DATE)
            CASE H.CODE = "D" AND NUM(H.DAYS)
            CASE H.CODE = "SS" AND H.SHIFT = "" AND H.EQUIP = ""
            CASE H.CODE = "SN" AND H.SHIFT = "" AND H.EQUIP = ""
            CASE H.CODE = "PO" AND H.DATE # "" AND NUM(H.DATE)
            CASE H.CODE = "OPO" AND H.DATE # "" AND NUM(H.DATE)
            CASE H.CODE = "J" AND H.PO # "" AND H.SHIFT = "" AND H.EQUIP = ""
               GOSUB 6000
               IF BLK THEN GOTO 1899
            CASE H.CODE = "JN" AND H.PO # "" AND H.SHIFT = "" AND H.EQUIP = ""
               GOSUB 6000
               IF BLK THEN GOTO 1899
            CASE H.CODE = "JD" AND H.PO # "" AND NUM(H.DAYS)
               GOSUB 6000
               IF BLK THEN GOTO 1899
               TEMP.DATE = TEMP.DATE + H.DAYS + 1
               IF H.SHIFT # "" THEN TEMP.SFT = H.SHIFT ELSE TEMP.SFT = 1
            CASE 1
               BLK = 1
               ERRMSG = "Invalid HOLD parameters"
         END CASE
         IF BLK THEN GOTO 1899
*
*---- SCHEDULE HOURS
*
1100 *
         GOSUB 80000
1105 *
         BEGIN CASE
            CASE BLK
               GOTO 1899
            CASE XDATE < CK.DATE
               GOTO 1899
            CASE PCCS.AVL.SHR<1,SFT> < 1
               IF SFT < 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                  TPFID = CONO:CCTR:"*":XDATE
                  MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                  CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                  XDATE = XDATE - 1
                  SFT = 3
                  GOTO 1100
               END ELSE
                  SFT = SFT - 1
                  GOTO 1105
               END
            CASE PCCS.REM.HRS < 1 AND H.LOAD # "Y"
***         MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
               TPFID = CONO:CCTR:"*":XDATE
               MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
               CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
               XDATE = XDATE - 1
               SFT = 3
               GOTO 1100
         END CASE
         GOSUB 10000
         IF BLK THEN GOTO 1899
         IF XDATE < CK.DATE THEN GOTO 1899
         GOSUB 70000
*
*---- CHECK FOR HOLD DATE
*
         BEGIN CASE
            CASE H.CODE = "H"
               BEGIN CASE
                  CASE XDATE > H.DATE
                  CASE XDATE = H.DATE AND SFT >= H.SHIFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "Could not fit with HOLD DATE"
               END CASE
            CASE H.CODE = "PO"
               BEGIN CASE
                  CASE XDATE > H.DATE
                  CASE XDATE = H.DATE AND SFT >= H.SHIFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "Could not fit with HOLD for PO"
               END CASE
            CASE H.CODE = "OPO"
               BEGIN CASE
                  CASE XDATE > H.DATE
                  CASE XDATE = H.DATE AND SFT >= H.SHIFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "Could not fit with HOLD for OUTSIDE PO"
               END CASE
            CASE H.CODE = "J"
               BEGIN CASE
                  CASE XDATE > TEMP.DATE
                  CASE XDATE = TEMP.DATE AND SFT >= TEMP.SFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "COULD NOT FIT WITH HOLD FOR JOB"
               END CASE
            CASE H.CODE = "JN"
               BEGIN CASE
                  CASE XDATE > TEMP.DATE
                  CASE XDATE = TEMP.DATE AND SFT > TEMP.SFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "COULD NOT FIT WITH HOLD FOR JOB"
               END CASE
            CASE H.CODE = "JD"
               BEGIN CASE
                  CASE XDATE > TEMP.DATE
                  CASE XDATE = TEMP.DATE AND SFT >= TEMP.SFT
                  CASE 1
                     BLK = 1
                     ERRMSG = "COULD NOT FIT WITH HOLD FOR JOB"
               END CASE
         END CASE
1899 *
         MAT HOLD.REC = ""
      NEXT TR
      P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- CHECK IF JOB IS SCHED AND SET ACTION
*
      BEGIN CASE
         CASE XDATE < CK.DATE
            ERRMSG = "THIS JOB DOES NOT FIT WITH THE DUE DATE GIVEN"
            GOSUB 90000
            ACTION = "F"
         CASE BLK
            GOSUB 90000
            ACTION = "E"
         CASE 1
            ACTION = ""
      END CASE
      GOTO 99999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*---- CHECK FOR RESOURCE AVAILABLITY
*
3000 *
      MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:DEPT:"*":CCTR ELSE
         MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:DEPT ELSE
            BLK = 1
            ERRMSG = "Cannot locate availability for cost center ":CCTR
         END
      END
      IF BLK THEN GOTO 3099
      SBLK = 0
      FOR MM = 1 TO 7 UNTIL SBLK
         FOR SS = 1 TO 3 UNTIL SBLK
            IF CCA.MULT<1,MM,SS> > H.EQUIP THEN SBLK = 1
         NEXT SS
      NEXT MM
      IF SBLK = 0 THEN
*         X = 0
*         Y = 23
         X = 3
         Y = 21
         PMSG = "RESOURCE ":H.EQUIP:" IS NOT DEFINED FOR CCTR ":CCTR:". CONTINUE (Y/N)"
         TYP = 8
         IF WIN.MODE THEN
            VALUE = "N"
         END ELSE
            CALL EDIT.SUB1 (MAT EDIT.COM)
         END
         P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF VALUE # "Y" THEN
            BLK = 1
            ERRMSG = "YOU NEED TO DEFINE RESOURCE ":H.EQUIP:" ON CCTR ":CCTR
         END
      END
3099 *
      RETURN
*
*---- CHECK HIERARCHY
*
5000 *
      BEGIN CASE
         CASE TR >= TR.CNT
            GOTO 5099
         CASE DEPT[1,2] # PJBS.DEPT<1,TR+1>[1,2]
            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:DEPT[1,2] ELSE
               MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:"HIERARCHY" ELSE
                  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
               END
            END
            LOCATE (PJBS.DEPT<1,TR+1>) IN PSHR.TO<1>,1 SETTING FND ELSE
               LOCATE (PJBS.DEPT<1,TR+1>[1,2]) IN PSHR.TO<1>,1 SETTING FND ELSE FND = 0
            END
            IF FND THEN
               XCODE = PSHR.CODE<1,FND>
               XDAYS = PSHR.DAYS<1,FND>
            END ELSE
               XCODE = PSHR.DEF.CODE
               XDAYS = PSHR.DEF.DAYS
            END
* T20406
*     CASE CCTR # PJBS.CCTR<1,TR+1>
         CASE 1
* T20406
            XDAYS = 0
            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO:DEPT[1,2]:"*":CCTR THEN
               LOCATE (PJBS.CCTR<1,TR+1>) IN PSHR.TO<1>,1 SETTING FND ELSE FND = 0
               IF FND THEN
                  XCODE = PSHR.CODE<1,FND>
               END ELSE
                  XCODE = PSHR.CCTR.CODE
               END
            END ELSE
               MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : DEPT[1,2] ELSE
                  MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : "HIERARCHY" ELSE
                     MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
                  END
               END
               XCODE = PSHR.CCTR.CODE
            END
      END CASE
      BEGIN CASE
         CASE XCODE = "SS"
         CASE XCODE = "SN" AND SFT > 1
            SFT = SFT - 1
         CASE XCODE = "SN"
            XDATE = XDATE - 1
            SFT = 3
         CASE 1
            XDATE = XDATE - XDAYS - 1
            SFT = 3
      END CASE
5099 *
      RETURN
*
*---- GET LAST DATE AND LAST SHIFT FROM ANOTHER JOB
*
6000 *
      MATREAD PJBSM.REC FROM PEND.JOB.SCHED, CONO : H.PO ELSE
         ERRMSG = "PEND.JOB.SCHED (":H.PO:") IS MISSING"
         BLK = 1
         GOTO 6099
      END
      CK.CNT = DCOUNT(PJBSM.DEPT,VM)
      IF CK.CNT < 1 THEN
         ERRMSG = "NEED TO SCHEDULE JOB (":H.PO:") BEFORE THIS JOB"
         BLK = 1
      END
      FOR CK.TR = 1 TO CK.CNT UNTIL BLK
         BEGIN CASE
            CASE PJBSM.DEPT.STATUS<1,CK.TR> = "C"
               IF PJBSM.CMP.DATE<1,CK.TR> > TEMP.DATE THEN
                  TEMP.DATE = PJBSM.CMP.DATE<1,CK.TR>
                  TEMP.SFT = 3
               END
            CASE PJBSM.DEPT.STATUS<1,CK.TR> = "I"
               BEGIN CASE
                  CASE PJBSM.EXP.DATE<1,CK.TR> > TEMP.DATE
                     TEMP.DATE = PJBSM.EXP.DATE<1,CK.TR>
                     TEMP.SFT = PJBSM.EXP.SHIFT<1,CK.TR>
                     IF TEMP.SFT < 1 OR TEMP.SFT > 3 THEN TEMP.SFT = 3
                  CASE PJBSM.EXP.DATE<1,CK.TR> < TEMP.DATE
                  CASE PJBSM.EXP.SHIFT<1,CK.TR> > TEMP.SFT
                     TEMP.SFT = PJBSM.EXP.SHIFT<1,CK.TR>
                     IF TEMP.SFT > 3 THEN TEMP.SFT = 3
               END CASE
            CASE PJBSM.USD.HRS<1,CK.TR> >= PJBSM.SCH.HRS<1,CK.TR>
               BEGIN CASE
                  CASE PJBSM.EXP.DATE<1,CK.TR> > TEMP.DATE
                     TEMP.DATE = PJBSM.EXP.DATE<1,CK.TR>
                     TEMP.SFT = PJBSM.EXP.SHIFT<1,CK.TR>
                     IF TEMP.SFT < 1 OR TEMP.SFT > 3 THEN TEMP.SFT = 3
                  CASE PJBSM.EXP.DATE<1,CK.TR> < TEMP.DATE
                  CASE PJBSM.EXP.SHIFT<1,CK.TR> > TEMP.SFT
                     TEMP.SFT = PJBSM.EXP.SHIFT<1,CK.TR>
                     IF TEMP.SFT > 3 THEN TEMP.SFT = 3
               END CASE
            CASE 1
               ERRMSG = "NEED TO SCHEDULE JOB (":H.PO:") BEFORE THIS JOB"
               BLK = 1
         END CASE
      NEXT CK.TR
6099 *
      MAT PJBSM.REC = ""
      RETURN
*
*---- CHECK DUE DATE AGAINST THE REST OF THE JOB
*
7000 *
      SBLK = 0
      BEGIN CASE
         CASE PJBS.EXP.DATE<1,TR> > REQ.DATE
            SBLK = 1
         CASE TR = TR.CNT
         CASE PJBS.HOLD.CODE<1,TR+1> = "L"
         CASE PJBS.EXP.DATE<1,TR> < PJBS.SCH.DATE<1,TR+1>
         CASE PJBS.EXP.DATE<1,TR> > PJBS.SCH.DATE<1,TR+1>
            SBLK = 1
         CASE PJBS.EXP.SHIFT<1,TR> > PJBS.SCH.SHIFT<1,TR+1>
            SBLK = 1
      END CASE
      RETURN
*
*---- CHECK PEND.CCTR.SCHED FOR AVAIL HRS
*
10000 *
      MLT.CNT = PCCS.MULT<1,SFT>
      IF MLT.CNT < 1 THEN MLT.CNT = 1
      BEGIN CASE
         CASE H.LOAD = "Y" AND H.EQUIP # ""
10100 *
            MLT = H.EQUIP
            MPTR = MLT
         CASE H.LOAD = "Y"
10200 *
            MLT = 0
            MPTR = MLT.CNT
            XPTR = 0
            FOR MM = MLT.CNT TO 1 STEP - 1 UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            IF MLT = 0 AND XPTR > 0 THEN MLT = XPTR
         CASE H.CONT.SCH = "Y"
10300 *
            IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
            CALL PEN.JOB.SCHED.BCK.SUB(CONO,ACTION,BLK,ERRMSG,MAT ALL.REC,MAT HOLD.REC,XDATE,SFT,MLT.CNT,MAT EDIT.COM,CK.DATE,TEMP.DATE)
            IF BLK THEN GOTO 10389
            IF XDATE < CK.DATE THEN GOTO 10389
            D.CNT = DCOUNT(ALL.DATE,AM)
            FOR DD = 1 TO D.CNT
               XDATE = ALL.DATE<1>
               MATREADU PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
                  MAT PEND.CCTR.SCHED.REC = ""
                  PCCS.DEPT = DEPT
                  ERRMSG = ""
                  CALL PEN.CCTR.SCHED.SUB (CONO, CCTR, XDATE, ERRMSG)
                  ERRMSG = ""
               END
               E.CNT = DCOUNT(ALL.EQP<1>,VM)
               FOR EE = 1 TO E.CNT
                  MLT = ALL.EQP<1,EE>
                  S.CNT = DCOUNT(ALL.SFT<1,EE>,SVM)
                  FOR SS = 1 TO S.CNT
                     SFT = ALL.SFT<1,EE,SS>
                     OPER.HRS = ALL.HRS<1,EE,SS>
                     GOSUB 30000
                  NEXT SS
               NEXT EE
               GOSUB 70000
               ALL.DATE = DELETE(ALL.DATE,1,0,0)
               ALL.EQP = DELETE(ALL.EQP,1,0,0)
               ALL.SFT = DELETE(ALL.SFT,1,0,0)
               ALL.HRS = DELETE(ALL.HRS,1,0,0)
            NEXT DD
10389 *
            CCTR.HRS = 0
            GOTO 19999
         CASE H.EQUIP # ""
10600 *
            MLT = H.EQUIP
            MPTR = MLT
         CASE H.SAME.EQUIP = "Y"
10700 *
            MLT = 0
            MPTR = 0
            XPTR = 0
            FOR MM = MLT.CNT TO 1 STEP - 1 UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE MPTR = 0
                     IF PCCS.REM.SM.HRS<1,SFT,MM> > 0 THEN MPTR = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            BEGIN CASE
               CASE MLT
               CASE XPTR
                  MLT = XPTR
               CASE MPTR
                  MLT = MPTR
               CASE 1
10750 *
                  IF SFT < 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                     TPFID = CONO:CCTR:"*":XDATE
                     MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                     CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                     XDATE = XDATE - 1
                     GOSUB 80000
                     IF BLK THEN GOTO 19999
                     IF XDATE < CK.DATE THEN GOTO 19999
                     SFT = 3
                  END ELSE
                     SFT = SFT - 1
                  END
                  BEGIN CASE
                     CASE PCCS.AVL.SHR<1,SFT> < 1
                        GOTO 10750
                     CASE PCCS.REM.HRS < 1
                        SFT = 1
                        GOTO 10750
                     CASE 1
                        GOTO 10700
                  END CASE
            END CASE
         CASE 1
10800 *
            MLT = 0
            MPTR = 0
            XPTR = 0
            FOR MM = MLT.CNT TO 1 STEP - 1 UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     IF XPTR = 0 THEN
                        XPTR = MM
                     END ELSE
                        IF PCCS.REM.SM.HRS<1,SFT,MM> < PCCS.REM.SM.HRS<1,SFT,XPTR> THEN
                           XPTR = MM
                        END
                     END
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> = PCCS.AVL.SHR<1,SFT> AND XPTR = 0
                     MLT = MM
                  CASE MPTR = 0
                     IF PCCS.REM.SM.HRS<1,SFT,MM> > 0 THEN MPTR = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
            BEGIN CASE
               CASE MLT
               CASE XPTR
                  MLT = XPTR
               CASE MPTR
                  MLT = MPTR
               CASE 1
10850 *
                  IF SFT < 2 THEN
***            MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
                     TPFID = CONO:CCTR:"*":XDATE
                     MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
                     CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
                     XDATE = XDATE - 1
                     GOSUB 80000
                     IF BLK THEN GOTO 19999
                     IF XDATE < CK.DATE THEN GOTO 19999
                     SFT = 3
                  END ELSE
                     SFT = SFT - 1
                  END
                  BEGIN CASE
                     CASE PCCS.AVL.SHR<1,SFT> < 1
                        GOTO 10850
                     CASE PCCS.REM.HRS < 1
                        SFT = 1
                        GOTO 10850
                     CASE 1
                        GOTO 10800
                  END CASE
            END CASE
      END CASE
*
*---- SCHEDULE CCTR.HRS
*
      LOOP
      UNTIL CCTR.HRS = 0 OR BLK OR XDATE < CK.DATE DO
         IF PCCS.AVL.SHR<1,SFT> < 1 THEN GOTO 10999
         MLT.CNT = PCCS.MULT<1,SFT>
         IF MLT.CNT < 1 THEN MLT.CNT = 1
         BEGIN CASE
            CASE H.LOAD = "Y"
**          IF CCTR.HRS > PCCS.AVL.SHR<1,SFT> THEN    ;** NA 1-9-90 **
**             OPER.HRS = PCCS.AVL.SHR<1,SFT>         ;** NA 1-9-90 **
**          END ELSE                                 ;** NA 1-9-90 **
               OPER.HRS = CCTR.HRS
**          END                                      ;** NA 1-9=90 **
               IF MLT = 0 THEN
                  MPTR = 1                              ;** NA 1-9-90 **
                  BEGIN CASE
                     CASE PCCS.REM.SM.HRS<1,SFT,MPTR> >= OPER.HRS
                        MLT = MPTR
                     CASE PCCS.REM.SM.HRS<1,SFT,MPTR> = PCCS.AVL.SHR<1,SFT>
                        MLT = MPTR
                  END CASE
                  FOR MM = MLT.CNT TO 1 STEP - 1 UNTIL MLT
                     BEGIN CASE
                        CASE PCCS.REM.SM.HRS<1,SFT,MM> >= OPER.HRS
                           MLT = MM
                        CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                           MPTR = MM
                     END CASE
                  NEXT MM
                  IF MLT = 0 THEN MLT = MPTR
               END
            CASE MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MLT> >= CCTR.HRS
                     OPER.HRS = CCTR.HRS
                  CASE PCCS.REM.SM.HRS<1,SFT,MLT> > 0
                     OPER.HRS = PCCS.REM.SM.HRS<1,SFT,MLT>
                  CASE 1
                     GOTO 10999
               END CASE
            CASE 1
               OPER.HRS = CCTR.HRS
         END CASE
         IF MLT = 0 THEN
            FOR MM = MLT.CNT TO 1 STEP - 1 UNTIL MLT
               BEGIN CASE
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > CCTR.HRS
                     MLT = MM
                  CASE PCCS.REM.SM.HRS<1,SFT,MM> > PCCS.REM.SM.HRS<1,SFT,MPTR>
                     MPTR = MM
               END CASE
            NEXT MM
         END
         BEGIN CASE
            CASE MLT
               GOSUB 30000
            CASE PCCS.REM.SM.HRS<1,SFT,MPTR> > 0
               MLT = MPTR
               OPER.HRS = PCCS.REM.SM.HRS<1,SFT,MLT>
               GOSUB 30000
            CASE 1
               GOSUB 70000
               UPTR = TR
               UPTR1 = TR
               GOSUB 71000
               CCTR.HRS = PJBS.SCH.HRS<1,TR> - PJBS.USD.HRS<1,TR>
               BGN.HRS = CCTR.HRS
               IF SFT < 2 THEN
                  XDATE = XDATE - 1
                  IF XDATE < CK.DATE THEN GOTO 18999
                  SFT = 3
               END ELSE
                  SFT = SFT - 1
               END
               GOSUB 80000
               GOTO 18999
         END CASE
10999 *
         IF CCTR.HRS # 0 THEN
            IF SFT < 2 THEN
               GOSUB 70000
               XDATE = XDATE - 1
               IF XDATE < CK.DATE THEN GOTO 18999
               GOSUB 80000
               IF BLK THEN GOTO 18999
               SFT = 3
               BEGIN CASE
                  CASE H.SAME.EQUIP = "Y"
*              CASE 1                               ;** NA 9-10-92 **
                  CASE MLT > 0                         ;** NA 9-10-92 **
                     MPTR = MLT
                     MLT = 0
               END CASE
            END ELSE
               SFT = SFT - 1
               BEGIN CASE
                  CASE H.SAME.EQUIP = "Y"
                  CASE H.SAME.EQUIP = "D"              ;** NA 9-10-92 **
                  CASE MLT > 0                         ;** NA 9-10-92 **
                     MPTR = MLT
                     MLT = 0
               END CASE
            END
         END
18999 *
      REPEAT
19999 *
      MAT ALL.REC = ""
      RETURN
*
*---- ADD OPERATION TO PEND.CCTR.SCHED
*
30000 *
      TF = DCOUNT(PCCS.TRAN,VM) + 1
      IF PJBS.TRAN<1,TR> # "" THEN
         TRAN = PJBS.TRAN<1,TR>
      END ELSE
         TRAN = PJBS.LAST.TRAN + 1
         PJBS.LAST.TRAN = TRAN
      END
      PCCS.TRAN = INSERT(PCCS.TRAN,1,TF,0,TRAN)
      PCCS.JOB = INSERT(PCCS.JOB,1,TF,0,JOB.NUM)
      PCCS.JOB.HRS = INSERT(PCCS.JOB.HRS,1,TF,0,OPER.HRS)
      PCCS.JOB.SHIFT = INSERT(PCCS.JOB.SHIFT,1,TF,0,SFT)
      PCCS.JOB.EQUIP = INSERT(PCCS.JOB.EQUIP,1,TF,0,MLT)
      PCCS.OPER = INSERT(PCCS.OPER,1,TF,0,"ALL")
      PCCS.OPER.STATUS = INSERT(PCCS.OPER.STATUS,1,TF,0,"")
      PCCS.OPER.HRS = INSERT(PCCS.OPER.HRS,1,TF,0,OPER.HRS)
      PCCS.OPER.SHIFT = INSERT(PCCS.OPER.SHIFT,1,TF,0,SFT)
      PCCS.OPER.EQUIP = INSERT(PCCS.OPER.EQUIP,1,TF,0,MLT)
      PCCS.SCH.HRS = PCCS.SCH.HRS + OPER.HRS
**    PCCS.REM.HRS = PCCS.AVL.HRS - PCCS.SCH.HRS
      PCCS.SCH.SM.HRS<1,SFT,MLT> = PCCS.SCH.SM.HRS<1,SFT,MLT> + OPER.HRS
**    PCCS.REM.SM.HRS<1,SFT,MLT> = PCCS.REM.SM.HRS<1,SFT,MLT> - OPER.HRS
      PJBS.TRAN<1,TR> = TRAN
      IF PJBS.EXP.DATE<1,TR> = "" THEN PJBS.EXP.DATE<1,TR> = XDATE
      IF PJBS.EXP.SHIFT<1,TR> = "" THEN PJBS.EXP.SHIFT<1,TR> = SFT
      PJBS.SCH.DATE<1,TR> = XDATE
      PJBS.SCH.SHIFT<1,TR> = SFT
      PJBS.USD.HRS<1,TR> = PJBS.USD.HRS<1,TR> + OPER.HRS
      CCTR.HRS = CCTR.HRS - OPER.HRS
      OPER.HRS = 0
      IF TR > EN.PTR THEN EN.PTR = TR
      BEGIN CASE
         CASE ST.PTR = 0
            ST.PTR = TR
            LAST.DATE = XDATE
         CASE TR < ST.PTR
            ST.PTR = TR
            LAST.DATE = XDATE
         CASE TR = ST.PTR AND XDATE < LAST.DATE
            LAST.DATE = XDATE
      END CASE
      RETURN
*
*---- UPDATE PEND.JOB.SCHED AND PEND.CCTR.SCHED
*
70000 *
***   MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO : CCTR :"*": XDATE
      TPFID = CONO:CCTR:"*":XDATE
      MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
***   MATWRITEU PJBS.REC ON PEND.JOB.SCHED, CONO : JOB.NUM
      TPFID = CONO:JOB.NUM
      MATBUILD TPREC FROM PJBS.REC
      CALL TRANSACTION.WRITE("WRITEU",CONO,TP.DIV,"PEND.JOB.SCHED",TPFID,TPREC,PEND.JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      RETURN
*
*---- UNSHED PEND.JOB.SCHED AND PEND.CCTR.SCHED FOR A CCTR
*
71000 *
      IF PJBS.TRAN<1,UPTR> = "" THEN RETURN
      IF WIN.MODE THEN ACTION = "W" ELSE ACTION = ""
      ALL.FLG = 0
      CALL PUNSCHED.JOB.SUB(CONO,ACTION,JOB.NUM,PJBS.SCH.DATE<1,UPTR>,UPTR,UPTR1,PJBS.SCH.DATE<1,UPTR>,ALL.FLG)
      RETURN
*
*---- GET PEND.CCTR.SCHED.REC
*
80000 *
      P_X = 3 ; P_Y = 23 ; P_VALUE = "Dept - ":DEPT "R#5" ; P_OPT = "CL"
  P_VALUE := "    Cctr - ":CCTR "L#3"
  P_VALUE := "    Date - ":OCONV(XDATE, "D2/") "L#8"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BEGIN CASE
         CASE XDATE < CK.DATE
            GOTO 80999
         CASE H.CODE = "PO" AND XDATE < H.DATE
         CASE H.CODE = "OPO" AND XDATE < H.DATE
         CASE H.CODE = "H" AND XDATE < H.DATE
         CASE H.CODE = "J" AND XDATE < TEMP.DATE
         CASE H.CODE = "JN" AND XDATE < TEMP.DATE
         CASE H.CODE = "JD" AND XDATE < TEMP.DATE
         CASE 1
            GOTO 80100
      END CASE
      BLK = 1
      ERRMSG = "CANNOT SCHEDULE THIS JOB BACKWARD BECAUSE OF HOLD DATE"
      GOTO 80999
80100 *
      MATREADU PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE ELSE
         MAT PEND.CCTR.SCHED.REC = ""
         PCCS.DEPT = DEPT
         ERRMSG = ""
         CALL PEN.CCTR.SCHED.SUB (CONO, CCTR, XDATE, ERRMSG)
         IF ERRMSG # "" THEN
            RELEASE PEND.CCTR.SCHED, CONO:CCTR:"*":XDATE
            BLK = 1
         END
      END
      IF BLK THEN GOTO 80999
      IF PCCS.AVL.HRS > 0 THEN GOTO 80999
***   MATWRITE PEND.CCTR.SCHED.REC ON PEND.CCTR.SCHED, CONO : CCTR :"*": XDATE
      TPFID = CONO:CCTR:"*":XDATE
      MATBUILD TPREC FROM PEND.CCTR.SCHED.REC
      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.CCTR.SCHED",TPFID,TPREC,PEND.CCTR.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
      XDATE = XDATE - 1
      SFT = 3
      GOTO 80000
80999 *
      RETURN
*
*---- FIND WHICH DAY OF THE WEEK
*
85000 *
      DPTR = OCONV(XDATE , "DW")
      RETURN
*
*---- ERROR ROUTINE
*
* 90000 *
*       P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* * T20800
*       IF LEN(ERRMSG) > 47 THEN
*          P_VALUE = JOB.NUM:" ":ERRMSG
*       END ELSE
* * T20800
*          P_VALUE = "Job Number:":JOB.NUM:" - ":ERRMSG:" <Return>"
*       END;*T20800
*       CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       IF NOT(WIN.MODE) THEN
*          INPUT REPLY,1 :
*       END
*       P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
*       CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*       RETURN
90000*
      P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* T20800
      IF LEN(ERRMSG) > 47 THEN
         P_VALUE = JOB.NUM:" ":ERRMSG
      END ELSE
* T20800
         P_VALUE = "Job Number:":JOB.NUM:" - ":ERRMSG:" <Return>"
      END;*T20800
      IF WIN.MODE THEN
         P_X  = 3 ; P_Y = 23 ; P_VALUE = ERRMSG:" INPUT" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         RETURN
      END ELSE
         ERRMSG = P_VALUE
         ERR.TYPE = 1
         CALL SI_SYSCOM(MAT SYSCOM.REC)
         RETURN
      END
99999 *
      RETURN
   END
