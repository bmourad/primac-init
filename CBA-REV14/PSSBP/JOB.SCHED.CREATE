*********************************************************************
*
* REVISION - [08.1]
*
* PROGRAM  - JOB.SCHED.CREATE
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/02/90
* MODIFIED - 11/02/95 TERRY NORTHCUTT TASK 19407 DIVISIONALIZATION
* MODIFIED - 02/21/96, NA, TASK 20124, LOAD PEND FORWARD
*
* DESCRIPTION
*
* This program is used to create Job schedule data from a specified
* estimate.  Cross-referencing is provided by Job or Customer.
*
* MODIFIED - October 1992, Graham Jarvis, Pacrim Software Pty Ltd
* - Changed to dummy schedule the Jobs when Processed
*
*T21221 - 11/15/96 L ROSS - Do not include sub-jobs with diff div
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*COPY>PSS.CPYLIB>COM.JOB.SCHED
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.DIVISION
*COPY>JES.CPYLIB>COM.ESTIMATE
*COPY>JCS.CPYLIB>COM.JOB
*COPY>PSS.CPYLIB>JOB.SCHED
*COPY>PSS.CPYLIB>JOB.SCHED.CREATE
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PSS.CPYLIB>PSS.HIERARCHY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>DIVISION
*COPY>JCS.CPYLIB>JOB
*COPY>JES.CPYLIB>ESTIMATE
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
   PROC.TYPE = "M"
*T21221 v
   DIM HOLD.JOB(JOB.REC.SIZE)
   MAT HOLD.JOB = ''
*T21221 ^      
*
*---- OPEN ALL FILES
*
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PREFIX" TO PREFIX ELSE ERRMSG = "PREFIX FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PSS.SCREENS" TO M.SCREENS ELSE ERRMSG = "PSS.SCREENS FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","JOB.SCHED" TO JOB.SCHED ELSE ERRMSG = "JOB.SCHED FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PEND.JOB.SCHED" TO PEND.JOB.SCHED ELSE ERRMSG = "PEND.JOB.SCHED FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","CCTR.AVAIL" TO CCTR.AVAIL ELSE ERRMSG = "CCTR.AVAIL FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "ESTIMATE FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE ERRMSG = "ESTIMATE.DEPT FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE ERRMSG = "ESTIMATE.JOB FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG = "CUSTOMER.XREF FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","CUST.EST.XREF" TO CUST.EST.XREF ELSE ERRMSG = "CUST.EST.XREF FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PSS.CONTROL" TO PSS.CONTROL ELSE ERRMSG = "PSS.CONTROL FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PSS.HIERARCHY" TO PSS.HIERARCHY ELSE ERRMSG = "PSS.HIERARCHY FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","JOB.CRTL.DATE.EXC" TO JOB.CRTL.DATE.EXC ELSE ERRMSG = "JOB.CRTL.DATE.EXC FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE ERRMSG = "PEND.CCTR.SCHED FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE ERRMSG = "HOLIDAY.SCHED FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PSS.JOB.XREF" TO PSS.JOB.XREF ELSE ERRMSG = "PSS.JOB.XREF FILE IS MISSING"; GOSUB 90000; STOP
   OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
      ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
      ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   IF CONO = "END" THEN GOTO 99999
   READ LOADING.FLG FROM PSS.CONTROL, CONO:"LOADING.FLG" ELSE
      READ LOADING.FLG FROM PSS.CONTROL, "LOADING.FLG" ELSE LOADING.FLG = "N"
   END
   MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE
      ERRMSG = "SYSTEM HIERARCHY RECORD IS MISSING"
      GOSUB 90000
      GOTO 99999
   END
*---- TASK 19407
*
* PERFORM PROCREAD
*
   PROCREAD BUFFER ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 90000
      GOTO 99999
   END
   DIV.OWNER = BUFFER<3>
*---- TASK 19407
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;JOB.SCHED.CREATE
   SCREEN FORMAT
   SCREEN COUNT;;11
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   LINE.CNT = 0
   REF.NO = ""
   FWD.CODES = "SC"
   FWD.CODES<2> = "SCN"
   FWD.CODES<3> = "SA"
   FWD.CODES<4> = "SAN"
   FWD.CODES<5> = "SL"
   FWD.CODES<6> = "SLN"
   FWD.CODES<7> = "SLD"
   CURR.REF.NO = ""
   READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
   TP.ERRMSG = ""
   GOTO 110
*
*---- MAIN PROCESSING
*
100*
   RELEASE
   SCREEN CLEAR
110*
   GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
   S$DATA(1)<S$SCR> = TODAY
   SCREEN DISPLAY;;1
   MAT GEN.XREF.REC = ""
   OLD.NAMES = ""
   GXR.CO = CONO
   NEW.REC = 0
   MATREADU JSCR.REC FROM PSS.CONTROL,CONO:DIV.OWNER:"JOB.SCHED.CREATE" ELSE ; *---- TASK 19407
      NEW.REC = 1
      MAT JSCR.REC = ""
   END
   IF NEW.REC THEN
      LINE.CNT = 0
      OPT = "A"
      GOTO 510
   END ELSE
      LINE.CNT = DCOUNT(JSCR.ID,VM)
      OLD.NAMES = JSCR.CUST.NAME
      GOSUB 80000
      GOSUB 81000
      REF.NO = 1
      CURR.REF.NO = ""
      GOSUB 50000
   END
*
*---- GET OPERATOR REPLY
*
500*
   BEGIN CASE
      CASE PROC.TYPE = "M" AND TP.DIV # "X"
         SCREEN FIELD;;31
         SCREEN INPUT;;31
      CASE 1
         SCREEN FIELD;;23
         SCREEN INPUT;;23
   END CASE
   OPT = S$VALUE
   GOSUB 80100
510*
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         SCREEN FIELD;;33
         SCREEN INPUT;;33
         IF S$VALUE = "Y" THEN GOTO 99990
      CASE OPT = "A" AND LINE.CNT < 99
         MODE = "A"
         DONE = 0
         REF.NO = LINE.CNT
         LOOP
            REF.NO = REF.NO+1
         UNTIL DONE OR REF.NO > 99 DO
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               GOSUB 80100
            END
            LINE.CNT = DCOUNT(JSCR.ID,VM)
         REPEAT
         REF.NO = LINE.CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPT = "C" AND LINE.CNT > 0
         MODE = "C"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
            IF S$VALUE = "END" THEN
               CURR.REF.NO = ""
               GOSUB 50000
            END
         END
      CASE OPT = "D" AND LINE.CNT > 0
         MODE = "D"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 700
            LINE.CNT = LINE.CNT - 1
            IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "I" AND LINE.CNT > 0
         MODE = "I"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 800
            LINE.CNT = DCOUNT(JSCR.ID,VM)
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 700
               LINE.CNT = DCOUNT(JSCR.ID,VM)
               CURR.REF.NO = ""
               GOSUB 50000
            END
         END
      CASE OPT = "R"
         MODE = "R"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            MATREAD JOB.REC FROM JOB, CONO:JSCR.ID<1,REF.NO> ELSE
               MAT JOB.REC = ""
            END
            GOSUB 80200
         END
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "P"
         GOSUB 80100
         FOR REF.NO = 1 TO LINE.CNT
            ID = JSCR.ID<1,REF.NO>
            IF JSCR.PROC.FLAG<1,REF.NO> # "P" THEN GOTO 580
            GOSUB 50000
            MATREAD JOB.REC FROM JOB, CONO:ID ELSE
               ERRMSG = "Cannot locate job ":ID
               GOSUB 90000
               GOTO 580
            END
            GOSUB 80200
            MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
               ERRMSG = "Cannot locate customer - ":JOB.CUST
               GOSUB 90000
               GOTO 580
            END
            MATREADU EST.REC FROM ESTIMATE, CONO:JOB.EST ELSE
               ERRMSG = "Cannot locate estimate ":JOB.EST:" for job ":ID
               GOSUB 90000
               GOTO 580
            END
            FND = 1
            MATREADU PJBS.REC FROM PEND.JOB.SCHED, CONO:ID ELSE MAT PJBS.REC = ""
            MATREADU JBS.REC FROM JOB.SCHED, CONO:ID ELSE FND=0
            BEGIN CASE
               CASE NOT(FND)
               CASE SUM(JBS.USD.HRS) = 0
               CASE 1
                  ERRMSG = "Job has already been scheduled"
                  GOSUB 90000
                  GOTO 580
            END CASE
            LOCATE ID IN EST.BOOK.JOB<1>,1 SETTING JFND ELSE JFND = 0
            IF JFND THEN
               IF EST.BOOK.COMP<1,JFND> = "ALL" THEN
                  COMP.NUM = "ALL"
               END ELSE
                  COMP.NUM = EST.BOOK.COMP<1,JFND>+0
               END
            END ELSE
               GOTO 580
            END
            EST.KEY = JOB.EST
            IF PJBS.DEPT # "" THEN
               SPTR = 0
               EPTR = 0
               SDATE = ""; ALL.FLG = 1; ACTION = ""
               CALL PUNSCHED.JOB.SUB(CONO,ACTION,ID,TODAY,SPTR,EPTR,SDATE,ALL.FLG)
            END
            DUE.DATE = JOB.TRACK.DATE<1,4>
            JOB.FLAG = ""
*            CALL JOB.SCHED.BUILD.UPD (CONO,"",EST.KEY,ID,COMP.NUM,CUST.NAME,LOADING.FLG,DUE.DATE)
            CALL JOB.SCHED.BUILD.UPD (CONO,"",EST.KEY,ID,COMP.NUM,CUST.NAME,LOADING.FLG,DUE.DATE,JOB.FLAG)
*
* Dummy Schedule the Job
*
*---- Check for null codes
            SBLK = 0
            JCNT = DCOUNT(PJBS.DEPT,VM)
            FOR XXX = 1 TO JCNT UNTIL SBLK
               IF PJBS.HOLD.CODE<1,XXX> = "" THEN SBLK = XXX
            NEXT XXX
            IF SBLK THEN
               ERRMSG = "Can not Create Pending Schedule....Invalid Schedule Code on Line - " : XXX
               GOSUB 90000
               GOTO 580
            END
            DUE.DATE = ""
            ACTION = ""
            REQ.DATE = JSCR.DUE.DATE<1,REF.NO>
530*
            P_X  = 3 ; P_Y = 23 ; P_VALUE = "Now Processing Pending Schedule Routine (Front to Back)" ; P_OPT = "CL"
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            ST.PTR = 0
            EN.PTR = 0
            BCK.FLG = ""
*NA         REQ.DATE = DATE() + 1
            REQ.DATE = TODAY+1
            ACTION = ""
            CALL PEN.JOB.SCHED.FWD(CONO,ACTION,ID,REQ.DATE,TODAY,DUE.DATE,ST.PTR,EN.PTR,BCK.FLG)
            SDATE = REQ.DATE
            BEGIN CASE
               CASE ACTION = ""
               CASE ACTION = "E" OR ACTION = "END"
                  IF ST.PTR > 0 AND EN.PTR > 0 AND SDATE # "" THEN
                     ALL.FLG = 0
                     CALL PUNSCHED.JOB.SUB(CONO,ACTION,ID,SDATE,ST.PTR,EN.PTR,SDATE,ALL.FLG)
                  END
            END CASE
            P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
            JSCR.PROC.FLAG<1,REF.NO> = "*"
580*
            GOSUB 80100
            RELEASE ESTIMATE, CONO:JOB.EST
            RELEASE JOB.SCHED, CONO:ID
            RELEASE PEND.JOB.SCHED, CONO:ID
         NEXT REF.NO
         READU PEND.LIST FROM PSS.CONTROL, CONO:DIV.OWNER:"PEND.SCHED.LIST" ELSE PEND.LIST = "" ; *---- TASK 19407
         FLG.CNT = DCOUNT(JSCR.PROC.FLAG<1>,VM)
         FOR REF.NO = FLG.CNT TO 1 STEP -1
            IF JSCR.PROC.FLAG<1,REF.NO> = "*" THEN
               LOCATE JSCR.ID<1,REF.NO> IN PEND.LIST<1>,1 SETTING POS ELSE NULL
               PEND.LIST<1,POS>= JSCR.ID<1,REF.NO>
               PEND.LIST<2,POS>= JSCR.BORF<1,REF.NO>
               PEND.LIST<3,POS>= JSCR.DUE.DATE<1,REF.NO>
               CALL GEN.XREF.MAINT(CONO,JSCR.ID<1,REF.NO>,JSCR.CUST.NAME<1,REF.NO>,JSCR.CUST.NAME<1,REF.NO>,PSS.JOB.XREF,PREFIX)
               GOSUB 700
            END
         NEXT REF.NO
***      WRITE PEND.LIST ON PSS.CONTROL,CONO:DIV.OWNER:"PEND.SCHED.LIST" ; *---- TASK 19407
         TPFID = CONO:DIV.OWNER:"PEND.SCHED.LIST"
         TPREC = PEND.LIST
         CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         IF JSCR.ID = "" THEN
***         DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.CREATE" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.CREATE"
            CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
            GOTO 99990
         END ELSE
***         MATWRITE JSCR.REC ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.CREATE" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.CREATE"
            MATBUILD TPREC FROM JSCR.REC
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
            GOTO 100
         END
      CASE OPT = "F"
         IF JSCR.ID = "" THEN
***         DELETE PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.CREATE" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.CREATE"
            CALL TRANSACTION.DELETE(CONO,TP.DIV,"PSS.CONTROL",TPFID,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         END ELSE
***         MATWRITE JSCR.REC ON PSS.CONTROL, CONO:DIV.OWNER:"JOB.SCHED.CREATE" ; *---- TASK 19407
            TPFID = CONO:DIV.OWNER:"JOB.SCHED.CREATE"
            MATBUILD TPREC FROM JSCR.REC
            CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PSS.CONTROL",TPFID,TPREC,PSS.CONTROL,PSS.JOURNAL,ERRMSG)
**********************************************************************
         END
         GOTO 99990
   END CASE
   GOTO 500
*
*---- GET LINE NUMBER
*
600*
   SCREEN FIELD;;32
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
   SCREEN INPUT;;32
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
   JSCR.ID = DELETE(JSCR.ID,1,REF.NO,0)
   JSCR.MASTER = DELETE(JSCR.MASTER,1,REF.NO,0)
   JSCR.SUB.FLAG = DELETE(JSCR.SUB.FLAG,1,REF.NO,0)
   JSCR.CUST = DELETE(JSCR.CUST,1,REF.NO,0)
   JSCR.CUST.NAME = DELETE(JSCR.CUST.NAME,1,REF.NO,0)
   JSCR.PROC.FLAG = DELETE(JSCR.PROC.FLAG,1,REF.NO,0)
   JSCR.DUE.DATE = DELETE(JSCR.DUE.DATE,1,REF.NO,0)
   JSCR.BORF = DELETE(JSCR.BORF,1,REF.NO,0)
   OLD.NAMES = DELETE(OLD.NAMES,1,REF.NO,0)
   GOSUB 81000
   RETURN
*
*---- INSERT MULTI-LINE DATA
*
800*
   JSCR.ID = INSERT(JSCR.ID,1,REF.NO,0,"")
   JSCR.MASTER = INSERT(JSCR.MASTER,1,REF.NO,0,"")
   JSCR.SUB.FLAG = INSERT(JSCR.SUB.FLAG,1,REF.NO,0,"")
   JSCR.CUST = INSERT(JSCR.CUST,1,REF.NO,0,"")
   JSCR.CUST.NAME = INSERT(JSCR.CUST.NAME,1,REF.NO,0,"")
   JSCR.PROC.FLAG = INSERT(JSCR.PROC.FLAG,1,REF.NO,0,"")
   JSCR.DUE.DATE = INSERT(JSCR.DUE.DATE,1,REF.NO,0,"")
   JSCR.BORF = INSERT(JSCR.BORF,1,REF.NO,0,"")
   OLD.NAMES = INSERT(OLD.NAMES,1,REF.NO,0,"")
   GOSUB 81000
   RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
   S$VAL = REF.NO
   SCREEN DISPLAY;;11
10100*
   S$DATA(12)<S$SCR,REF.NO> = JSCR.ID<1,REF.NO>
   S$VAL = REF.NO
   SCREEN FIELD;;12
   SCREEN INPUT;;12;GOTO 19950
   BEGIN CASE
      CASE S$VALUE = ""
         GOSUB 85000
         IF S$VALUE = "END" OR GXR.ID = "END" THEN GOTO 19950
         GXR.XREF = CUSTOMER
         GXR.SRCH.ID = GXR.ID
         GXR.FILE = JOB
         GXR.LOC = 34
         GXR.TOP.LINE = "JOB XREF SEARCH"
         GXR.TOP.LINE<1,2> = "FOR CUSTOMER : " : GXR.SRCH.ID
         GXR.HEADING = "JOB NUMBER"
         GXR.ATT = 0
         GXR.LEN = 10
         GXR.HEADING<1,2> = "ESTIMATE NUM"
         GXR.ATT<1,2> = 18
         GXR.LEN<1,2> = 12
         GXR.HEADING<1,3> = "DESCRIPTION"
         GXR.ATT<1,3> = 16
         GXR.LEN<1,3> = 48
         GXR.ID = ""
         GXR.OCONV = ""
*         CALL GEN.XREF1 (MAT GEN.XREF.REC,PREFIX)
         CALL GEN.XREF (MAT GEN.XREF.REC,PREFIX)
         S$DATA(12)<S$SCR,REF.NO> = GXR.ID
         IF GXR.ACTION # "X" THEN
            SCREEN FORMAT
            GOSUB 80050
            CURR.REF.NO = ""
            GOSUB 50000
         END ELSE
            S$VAL = REF.NO
            SCREEN DISPLAY;;12
         END
         IF GXR.ID = "" THEN GOTO 10000
         MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
            ERRMSG = "Cannot locate job. Try again! "
            GOSUB 90000
            GOTO 10100
         END
*---- TASK 19407
         IF JOB.DIV # DIV.OWNER THEN
            ERRMSG = "Job not owned by selected division ":DIV.OWNER
            GOSUB 90000
            GOTO 10100
         END
*---- TASK 19407
         TEMP.MF1 = GXR.ID
      CASE 1
         MATREAD JOB.REC FROM JOB, CONO:S$VALUE ELSE
            ERRMSG = "Cannot locate job. Try again! "
            GOSUB 90000
            GOTO 10100
         END
         TEMP.MF1 = S$VALUE
*---- TASK 19407
         MATREAD JOB.REC FROM JOB, CONO:TEMP.MF1 ELSE MAT JOB.REC = ""
         IF JOB.DIV # DIV.OWNER THEN
            ERRMSG = "Job not owned by selected division ":DIV.OWNER
            GOSUB 90000
            GOTO 10100
         END
*---- TASK 19407
   END CASE
   LOCATE S$VALUE IN JSCR.ID<1>,1 SETTING JPTR ELSE JPTR = 0
   IF JPTR > 0 AND JPTR # REF.NO THEN
      ERRMSG = "Duplicate entry. Try again! "
      GOSUB 90000
      GOTO 10100
   END
   IF JOB.EST = "" THEN
      ERRMSG = "No estimate for this job"
      GOSUB 90000
      GOTO 10100
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1> = 9
         ERRMSG = "This job is cancelled"
         GOSUB 90000
         GOTO 10100
* CASE JOB.STATUS # ""
      CASE JOB.LB.HRS # ""
* ERRMSG = "Job status must be booked"
         ERRMSG = "Labor Hours have been posted against job."
         GOSUB 90000
         GOTO 10100
   END CASE
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG = "Cannot locate customer - ":JOB.CUST
      GOSUB 90000
      GOTO 10100
   END
   MATREAD EST.REC FROM ESTIMATE, CONO:JOB.EST ELSE
      ERRMSG = "Cannot locate estimate - ":JOB.EST
      GOSUB 90000
      GOTO 10100
   END
   IF EST.STATUS<1,1> # "BOOKED" OR EST.BOOK.JOB = "" THEN
      ERRMSG = "Estimate status must be booked"
      GOSUB 90000
      GOTO 10100
   END
   LOCATE TEMP.MF1 IN EST.BOOK.JOB<1>,1 SETTING FND ELSE FND = 0
   IF FND = 0 THEN
      IF EST.JOB = TEMP.MF1 THEN
         ERRMSG = "This job is a master header"
      END ELSE
         ERRMSG = "This job is not for this estimate"
      END
      GOSUB 90000
      GOTO 10100
   END
   FND = 1
   MATREAD JBS.REC FROM JOB.SCHED, CONO:TEMP.MF1 ELSE FND = 0 ; MAT JBS.REC = ""
   BEGIN CASE
      CASE NOT(FND)
      CASE SUM(JBS.USD.HRS) = 0
         SCREEN FIELD;;34
         SCREEN INPUT;;34
         IF S$VALUE # "Y" THEN GOTO 10100
      CASE 1
         ERRMSG = "JOB has already been scheduled"
         GOSUB 90000
         GOTO 10100
   END CASE
   GOSUB 80200
10200*
   IF JOB.MASTER # "" AND JOB.MASTER # TEMP.MF1 THEN
      TEMP.MF2 = JOB.MASTER
   END ELSE
      TEMP.MF2 = ""
   END
   S$DATA(13)<S$SCR,REF.NO> = TEMP.MF2
   S$VAL = REF.NO
   SCREEN DISPLAY;;13
10300*
   TEMP.MF4 = JOB.CUST
*     S$DATA(15)<S$SCR,REF.NO> = TEMP.MF4
*     S$VAL = REF.NO
*     SCREEN DISPLAY;;15
10400*
   TEMP.MF5 = CUST.NAME
   S$DATA(16)<S$SCR,REF.NO> = TEMP.MF5
   S$VAL = REF.NO
   SCREEN DISPLAY;;16
10450*
   S$O.R = "O"
   S$DEFAULT = TODAY+1
   S$VAL = REF.NO
   SCREEN FIELD;;35
   SCREEN INPUT;;35;GOTO 19950
   TEMP.MF7 = S$VALUE
10500*
   IF JOB.SUBS = "" THEN
      TEMP.MF3 = ""
   END ELSE
      TEMP.MF3 = ""
      S$VAL = REF.NO
      SCREEN FIELD;;14
      SCREEN INPUT;;14;GOTO 19950
      TEMP.MF3 = S$VALUE
   END
10600*
   S$VAL = REF.NO
   SCREEN FIELD;;18
   SCREEN INPUT;;18;GOTO 19950
   TEMP.MF6 = S$VALUE
19900*
   JSCR.ID<1,REF.NO> = TEMP.MF1
   JSCR.MASTER<1,REF.NO> = TEMP.MF2
   JSCR.SUB.FLAG<1,REF.NO> = TEMP.MF3
   JSCR.CUST<1,REF.NO> = TEMP.MF4
   JSCR.CUST.NAME<1,REF.NO> = TEMP.MF5
   JSCR.PROC.FLAG<1,REF.NO> = TEMP.MF6
   JSCR.DUE.DATE<1,REF.NO> = TEMP.MF7
   JSCR.BORF<1,REF.NO> = "S"
   IF MODE = "A" OR MODE = "I" THEN
      IF JSCR.SUB.FLAG<1,REF.NO> = "Y" THEN GOSUB 82000
   END
   RETURN
19950*
   GOSUB 80100
   GOSUB 81000
   RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000*
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
   SCREEN MULTI;;C;11;17;12;13;14;16;35;18
   RETURN
*
*---- LOAD SCREEN DATA
*
80000*
   LINE.CNT = DCOUNT(JSCR.ID,VM)
   FOR REF = 1 TO LINE.CNT
      ID = JSCR.ID<1,REF>
      MATREAD JOB.REC FROM JOB, CONO:ID ELSE
         MAT JOB.REC = ""
      END
      IF JOB.MASTER # "" AND JOB.MASTER # ID THEN
         JSCR.MASTER<1,REF> = JOB.MASTER
      END
      JSCR.CUST<1,REF> = JOB.CUST
      MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
         MAT CUST.REC = ""
      END
      JSCR.CUST.NAME<1,REF> = CUST.NAME
   NEXT REF
80050*
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- CLEAR FLAG
*
80100*
   LOCATE "*" IN S$DATA(17)<S$SCR>,1 SETTING FPTR ELSE GOTO 80150
   S$DATA(17)<S$SCR> = ""
   IF FPTR >= CURR.REF.NO AND FPTR <= (CURR.REF.NO+LINE.COUNT-1) THEN
      S$VAL = FPTR
      SCREEN DISPLAY;;17
   END
80150*
   IF S$DATA(22)<S$SCR> # "" THEN
      S$DATA(22)<S$SCR> = ""
      S$VAL = 1
      S$CNT = 0
      SCREEN MULTI;;C;21;22
   END
   RETURN
*
*---- DISPLAY FLAG AND JOB DESCRIPTION
*
80200*
   S$DATA(17)<S$SCR,REF.NO> = "*"
   S$VAL = REF.NO
   SCREEN DISPLAY;;17
80250*
   S$DATA(22)<S$SCR> = JOB.DESC
   S$VAL = 1
   S$CNT = DCOUNT(S$DATA(22)<S$SCR>,VM)
   SCREEN MULTI;;C;21;22
   RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000*
   S$DATA(12)<S$SCR> = JSCR.ID
   S$DATA(13)<S$SCR> = JSCR.MASTER
   S$DATA(14)<S$SCR> = JSCR.SUB.FLAG
* S$DATA(15)<S$SCR> = JSCR.CUST
   S$DATA(16)<S$SCR> = JSCR.CUST.NAME
   S$DATA(17)<S$SCR> = ""
   S$DATA(18)<S$SCR> = JSCR.PROC.FLAG
   S$DATA(22)<S$SCR> = ""
   IF JSCR.DUE.DATE <= TODAY THEN
      S$DATA(35)<S$SCR> = TODAY+1
   END ELSE
      S$DATA(35)<S$SCR> = JSCR.DUE.DATE
   END
   RETURN
*
*---- LOAD ALL SUB-JOBS
*
82000*
   SUBFLAG = 0
   MSTJOB = JSCR.ID<1,REF.NO>
   INCFLAG = JSCR.PROC.FLAG<1,REF.NO>
   JCNT = DCOUNT(JOB.SUBS,VM)
*T21221 v
   MAT HOLD.JOB = MAT JOB.REC
   FOR JPTR = 1 TO JCNT
      SUBJOB = JOB.SUBS<1,JPTR>
      MATREAD JOB.REC FROM JOB,CONO:SUBJOB ELSE MAT JOB.REC = ''
      IF JOB.DIV = DIV.OWNER THEN
         LOCATE SUBJOB IN JSCR.ID<1>,1 SETTING FND ELSE
            SUBFLAG = 1
            REF.NO = REF.NO + 1
            JSCR.ID = INSERT(JSCR.ID,1,REF.NO,0,"")
            JSCR.MASTER = INSERT(JSCR.MASTER,1,REF.NO,0,"")
            JSCR.SUB.FLAG = INSERT(JSCR.SUB.FLAG,1,REF.NO,0,"")
            JSCR.CUST = INSERT(JSCR.CUST,1,REF.NO,0,"")
            JSCR.CUST.NAME = INSERT(JSCR.CUST.NAME,1,REF.NO,0,"")
            JSCR.PROC.FLAG = INSERT(JSCR.PROC.FLAG,1,REF.NO,0,"")
            JSCR.DUE.DATE = INSERT(JSCR.DUE.DATE,1,REF.NO,0,"")
            JSCR.BORF = INSERT(JSCR.BORF,1,REF.NO,0,"")
            OLD.NAMES = INSERT(OLD.NAMES,1,REF.NO,0,"")
            JSCR.ID<1,REF.NO> = SUBJOB
            JSCR.MASTER<1,REF.NO> = MSTJOB
            JSCR.SUB.FLAG<1,REF.NO> = ""
            JSCR.CUST<1,REF.NO> = JOB.CUST
            JSCR.CUST.NAME<1,REF.NO> = CUST.NAME
            OLD.NAMES<1,REF.NO> = CUST.NAME
            JSCR.PROC.FLAG<1,REF.NO> = INCFLAG
            JSCR.DUE.DATE<1,REF.NO> = TODAY+1
         END
      END ELSE
         ERRMSG = "Sub-Job not owned by selected division ":DIV.OWNER
         GOSUB 90000
      END
   NEXT JPTR
   MAT JOB.REC = MAT HOLD.JOB
*T21221 ^
   IF SUBFLAG THEN
      LINE.CNT = DCOUNT(JSCR.ID,VM)
      GOSUB 81000
      CURR.REF.NO = ""
      GOSUB 50000
   END
   RETURN
*
*--- LOCATE CUSTOMER
*
85000*
   GXR.ID = ""
* S$VAL = REF.NO
* SCREEN FIELD;;15
* SCREEN INPUT;;15;RETURN
* BEGIN CASE
* CASE S$VALUE = ""
   S$VAL = REF.NO
   SCREEN FIELD;;16
   SCREEN INPUT;;16
   BEGIN CASE
      CASE S$VALUE = "END" OR S$VALUE = ""
         GOTO 85999
      CASE 1
         GXR.XREF = CUSTOMER.XREF
         GXR.SRCH.ID = S$VALUE
         GXR.FILE = CUSTOMER
         GXR.LOC = 1
         GXR.TOP.LINE = "CUSTOMER XREF SEARCH"
         GXR.TOP.LINE<1,2> = "SEARCH BY NAME : " : S$VALUE
         GXR.HEADING = "CUSTOMER"
         GXR.ATT = 0
         GXR.LEN = 10
         GXR.HEADING<1,2> = "DESCRIPTION"
         GXR.ATT<1,2> = 1
         GXR.LEN<1,2> = 60
         GXR.ID = ""
         GXR.OCONV = ""
*         CALL GEN.XREF1 (MAT GEN.XREF.REC,PREFIX)
         CALL GEN.XREF (MAT GEN.XREF.REC,PREFIX)
* S$DATA(15)<S$SCR,REF.NO> = GXR.ID
         IF GXR.ACTION # "X" THEN
            SCREEN FORMAT
            GOSUB 80050
            CURR.REF.NO = ""
            GOSUB 50000
         END ELSE
* S$VAL = REF.NO
* SCREEN DISPLAY;;15
         END
         BEGIN CASE
            CASE GXR.ID = "END" OR GXR.ID = ""
               GOTO 85999
            CASE 1
               MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
                  ERRMSG = "Invalid customer. Try again! "
                  GOSUB 90000
                  GOTO 85000
               END
         END CASE
   END CASE
   S$VAL = REF.NO
   S$DATA(16)<S$SCR,REF.NO> = CUST.NAME
   SCREEN DISPLAY;;16
85999*
   RETURN
***(TPCHECKBEG)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
   BEGIN CASE
      CASE PROC.TYPE = "M"
         READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
         REQDIV = DIV.OWNER
         CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
         BEGIN CASE
            CASE TP.DIV = "X"
               RELEASE PSS.LOCK, CONO:"TP"
               IF ERRMSG # TP.ERRMSG THEN GOSUB 90000
            CASE TP.DIV = ""
               DCNT = DCOUNT(REQDIV,VM)
               FOR DPTR = 1 TO DCNT
                  CDIV = REQDIV<1,DPTR>
                  LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
                  READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
               NEXT DPTR
         END CASE
         RELEASE PSS.LOCK, CONO:"TP"
         TP.ERRMSG = ERRMSG
      CASE 1
         TP.DIV = ""
         DELETE PSS.LOCK, @TTY
         TP.ERRMSG = ""
   END CASE
   RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99990*
   SCREEN CLEAR;;D
   SCREEN CLOSE
99999 *
*       PRINT @(-1)
END
