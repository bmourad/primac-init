      SUBROUTINE PCOM.DEPT.SCHED(CONO,DEPT.ID)
*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM    - PRIMAC
* SOURCE    - PSSBP
* PROGRAM   - PCOM.DEPT.SCHED.INQ
* AUTHOR    - Graham Jarvis, Pacrim Software Pty Ltd
* DATE      - 01 December 1992
* DESCRIPTION
* Provides inquiry information by department schedule by day
*********************************************************************
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- INITIALIZATION
*
      SCREEN INIT;#
      S$SCR=1
*
      READ AVLCTR FROM CONTROL, CONO:"AVLCTR" ELSE AVLCTR="ALL"
*
*---- MAIN PROCESSING
*
110 *
      TODAY=DATE()
120 *
      REF.NO=0
      DEPT = DEPT.ID
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE
         ERRMSG = 'ERRMSG:Invalid Department'
         GOSUB 90000
      END
      SDATE = DATE()
      EDATE = SDATE + 6 
      LN.CNT = DCOUNT(DEPT.CCTRS,VM)
      FOR X = 1 TO LN.CNT
         CCTR = DEPT.CCTRS<1,X>
         IF NOT(NUM(CCTR)) THEN GOTO 121
         MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE
            MAT CCTR.REC = ""
            GOTO 121
         END
         LOCATE CCTR IN AVLCTR,1 SETTING AVPTR ELSE GOTO 121
         IF CCTR.DEPT = DEPT AND (CCTR.MASTER = "" OR CCTR.MASTER = CCTR) THEN
            REF.NO = 1
            GOSUB 10000
         END
121 *
      NEXT X
      RETURN
*
*---- LOAD S$DATA MATRIX
*
10000 *
      SEND.DATA=''
      SEND.DATA<1>=CCTR
      ALL.JOB = ""
      PEND.ALL.JOB = ""
      FOR CDATE = SDATE TO EDATE
         CFND = 1 ; PFND = 1
         MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MATREAD CCTR.SCHED.REC FROM CCTR.SCHED.HIST, CONO:CCTR:"*":CDATE ELSE 
               MAT CCTR.SCHED.REC = ""
               CFND = 0
            END
         END
         MATREAD PEND.CCTR.SCHED.REC FROM PEND.CCTR.SCHED,CONO:CCTR:'*':CDATE ELSE
            MAT PEND.CCTR.SCHED.REC = ""
            PFND = 0
         END
         IF CFND = 0 AND PFND = 0 THEN GOTO 10001 
         SEND.DATA<2>=SEND.DATA<2>+SUM(CCS.AVL.HRS)
         SEND.DATA<3>=SEND.DATA<3>+SUM(CCS.SCH.HRS)
         SEND.DATA<4>=SEND.DATA<4>+SUM(CCS.REM.HRS)
         SEND.DATA<5>=SEND.DATA<5>+SUM(PCCS.SCH.HRS)
         PEND.OVER =  (SUM(CCS.AVL.HRS) - (SUM(CCS.SCH.HRS) + SUM(PCCS.SCH.HRS)))
         IF PEND.OVER < 0 THEN
            SEND.DATA<6>=SEND.DATA<6>+PEND.OVER
         END

         IF SUM(CCS.REM.HRS) < 0 THEN
            SEND.DATA<7>=SEND.DATA<7>+SUM(CCS.REM.HRS)*(-1)
         END
         JOB.CNT = DCOUNT(CCS.JOB,VM)
         FOR I = 1 TO JOB.CNT
            LOCATE CCS.JOB<1,I> IN ALL.JOB,1 SETTING FND ELSE
               ALL.JOB<FND> = CCS.JOB<1,I>
            END
         NEXT I
         PJOB.CNT = DCOUNT(PCCS.JOB,VM)
         FOR PC = 1 TO PJOB.CNT
            LOCATE PCCS.JOB<1,PC> IN PEND.ALL.JOB,1 SETTING PFND ELSE
               PEND.ALL.JOB<PFND> = PCCS.JOB<1,PC>
            END
         NEXT PC
10001 *
      NEXT CDATE
      SEND.DATA<8>=DCOUNT(ALL.JOB,AM)
      SEND.DATA<9>=DCOUNT(PEND.ALL.JOB,AM)
      PEND.ALL.JOB = ""
      ALL.JOB = ""
      IF SEND.DATA<2>=0 THEN SEND.DATA<2>=''
      IF SEND.DATA<3>=0 THEN SEND.DATA<3>=''
      IF SEND.DATA<4>=0 THEN SEND.DATA<4>=''
      IF SEND.DATA<8>=0 THEN SEND.DATA<8>=''
      IF SEND.DATA<5>=0 THEN SEND.DATA<5>=''
      IF SEND.DATA<6>=0 THEN SEND.DATA<6>=''
      IF SEND.DATA<9>=0 THEN SEND.DATA<9>=''
*
* Send Data to Host
*
      PRINT SEND.DATA
*
      RETURN
20001 *
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      RETURN
*
*---- END OF PROGRAM
*
99999 *
   END
