*COPY>CPYLIB>SCOMMON1
*COPY>PSS.CPYLIB>COM.PSS.FILE.VARS
*COPY>PSS.CPYLIB>COM.CCTR.SCHED
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PSSBP
* AUTHOR      - KERRY WILSON, COMPUTER BUSINESS ASSOCIATES
* DATE        - 08/02/88
* MODIFIED - 02/21/96, NA, TASK 19938, DISPLAY COST CENTER DESCRIPTION
* DESCRIPTION
* This program prints a chart comparing equipment available hours
* with scheduled hours.
*T21657 rik 04/15/1997 * REPORTS LOSING SELECT
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*********************************************************************
*COPY>PSS.CPYLIB>CCTR.AVAIL
*COPY>PSS.CPYLIB>CCTR.SCHED
*COPY>PSS.CPYLIB>PSS.FILE.VARS
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SET UP SYSCOM
*
  SYS.TYPE = 1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN "CONTROL" TO CONTROL ELSE
    ERRMSG = 'CANNOT OPEN CONTROL FILE'
    GOTO 93000
  END
  OPEN "CCTR.AVAIL" TO CCTR.AVAIL ELSE
    ERRMSG = 'CANNOT OPEN CCTR.AVAIL FILE'
    GOTO 93000
  END
  OPEN "CCTR.SCHED" TO CCTR.SCHED ELSE
    ERRMSG = 'CANNOT OPEN CCTR.SCHED FILE'
    GOTO 93000
  END
  OPEN "PEND.CCTR.SCHED" TO PEND.CCTR.SCHED ELSE
    ERRMSG = 'CANNOT OPEN PEND.CCTR.SCHED FILE'
    GOTO 93000
  END
  OPEN "DEPARTMENT" TO DEPARTMENT ELSE
    ERRMSG = 'CANNOT OPEN DEPARTMENT FILE'
    GOTO 93000
  END
  OPEN "COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
    GOTO 93000
  END
  OPEN "COMPANY" TO COMPANY ELSE
    ERRMSG = 'CANNOT OPEN COMPANY FILE'
    GOTO 93000
  END
  OPEN "HOLIDAY.SCHED" TO HOLIDAY.SCHED ELSE
    ERRMSG = 'CANNOT OPEN HOLIDAY.SCHED FILE'
    GOTO 93000
  END
  OPEN "","PSS.JOURNAL" TO PSS.JOURNAL ELSE
    ERRMSG = "CANNOT OPEN PSS.JOURNAL FILE"
    GOTO 93000
  END
  OPEN "","PSS.LOCK" TO PSS.LOCK ELSE
    ERRMSG = "CANNOT OPEN PSS.LOCK FILE"
    GOTO 93000
  END
*
*---- PROCREAD
*
  PROCREAD ID ELSE
    ERRMSG = 'MUST BE RUN FROM MENU'
    GOSUB 91000
    GOTO 99999
  END
*
*---- HEADING INITIALIZATION
*
  CONO = ID<1>
*T26493 v
* CONO.NAME = ID<2>
* REPORT.NAME = 'DEPARTMENT SCHEDULE CHART'
* REPORT.NUM = 'XXXX'
  CONO.NAME = ""
  REPORT.NAME = ""
  REPORT.NUM = ID<2>
*T26493 ^
  HD1 = ''
  HD2 = ''
  PAGE.NO = 0
  READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
  REPORT.DATE = TODAY
  CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUM,REPORT.DATE,HD1,HD2)
*T21657 v
  LISTVAR = ''
  DONE = 0
  LOOP
    READNEXT LOAD.ID ELSE DONE = 1
  UNTIL DONE DO
    LISTVAR<-1> = LOAD.ID
  REPEAT
*T21657 ^
  GOSUB 89900;* CHECK FOR ACTIVE TRANSACTION
  IF ERRMSG # "" THEN GOTO 93000
*
*---- INITIALIZATION
*
  BLINE = SPACE(19):'+'
  FOR I = 1 TO 11
    BLINE = BLINE:'---------+'
  NEXT I
  PR.DATE = ICONV(ID<3>,"D")
  BEG.DEPT = ID<4>
  END.DEPT = ID<5>
  AVAIL.HRS = 0
  BASE.HRS = 0
  SCH.HRS = 0
  PREV.DEPT = ''
  FRST.HEAD = 0
  LINE.CNT = 0
  MLINE = SPACE(19):'|'
  SPLINE = ""
*
*---- MAIN PROCESSING
*
  RT.DATE = 0
  LOOP UNTIL RT.DATE = 6 DO
    RT.DATE = OCONV(PR.DATE,"DW")
    IF RT.DATE # 6 THEN PR.DATE = PR.DATE - 1
  REPEAT
  ST.DATE = PR.DATE
  END.DATE = PR.DATE + 6
  IF ST.DATE + 7 <= TODAY THEN
    ERRMSG = 'WEEK FOR CHART MUST BE PRESENT OR FUTURE WEEK'
    GOSUB 91000
    GOTO 99999
  END
  PRINTER ON
  DATA = 1
  PTR=1;*T21657
  LOOP
*T21657         READNEXT KEY ELSE DATA = 0
    KEY = LISTVAR<PTR>;*T21657
    PTR = PTR + 1;*T21657
    IF KEY = '' THEN DATA = 0;*T21657
  WHILE DATA DO
    DEPT = FIELD(KEY,'*',1)
    DEPT = DEPT[4,99]
    GOSUB 3000
    FOR XDATE = ST.DATE TO END.DATE
      CCTR = ''
      ERRMSG = ''
      CALL GEN.CCTR.SCHED.SUB(CONO,CCTR,XDATE,ERRMSG)
      IF ERRMSG # '' THEN
        GOTO 102
      END
*           BASE.HRS = BASE.HRS + CCS.AVL.HRS
      BASE.HRS = BASE.HRS + SUM(CCS.AVL.SHR)
    NEXT XDATE
    MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE MAT DEPT.REC = ''
    GOSUB 5000
    SPAN.HRS = INT(BASE.HRS/10000 + .9) * 10
    HR1 = 0
    HR2 = SPAN.HRS
    HR3 = HR2 + SPAN.HRS
    HR4 = HR3 + SPAN.HRS
    HR5 = HR4 + SPAN.HRS
    HR6 = HR5 + SPAN.HRS
    HR7 = HR6 + SPAN.HRS
    HR8 = HR7 + SPAN.HRS
    HR9 = HR8 + SPAN.HRS
    HR10 = HR9 + SPAN.HRS
    HR11 = HR10 + SPAN.HRS
    HR12 = HR11 + SPAN.HRS
    SPLINE = SPACE(17):HR1 "R#3":SPACE(8):HR2 "R#3":SPACE(7):HR3 "R#3":SPACE(7):HR4 "R#3":SPACE(7)
    SPLINE = SPLINE:HR5 "R#3":SPACE(7):HR6 "R#3":SPACE(7):HR7 "R#3":SPACE(7)
    SPLINE = SPLINE:HR8 "R#3":SPACE(7):HR9 "R#3":SPACE(7):HR10 "R#3":SPACE(7)
    SPLINE = SPLINE:HR11 "R#3":SPACE(7):HR12 "R#3"
    CCTR.CNT = DCOUNT(DEPT.CCTRS,VM)
    FOR I = 1 TO CCTR.CNT
      MATREAD CCTR.REC FROM COST.CNTR,CONO:DEPT.CCTRS<1,I> ELSE MAT CCTR.REC = ''
      IF CCTR.DEPT # DEPT OR (CCTR.MASTER # '' AND CCTR.MASTER # DEPT.CCTRS<1,I>) THEN 
        MAT CCTR.REC = ''
        GOTO 101
      END
      GOSUB 1000
      EQ.CNT = 0
      FOR XDATE = ST.DATE TO END.DATE
        MATREAD CCTR.SCHED.REC FROM CCTR.SCHED,CONO:CCTR:'*':XDATE ELSE
          GOSUB 3000
          ERRMSG = ''
          CALL GEN.CCTR.SCHED.SUB(CONO,CCTR,XDATE,ERRMSG)
          IF ERRMSG # '' THEN GOTO 103
        END
        FOR J = 1 TO 3
          FOR K = 1 TO CCS.MULT<1,J>
            SCH.HRS<1,K> = SCH.HRS<1,K> + CCS.SCH.SM.HRS<1,J,K>
            AVAIL.HRS<1,K> = AVAIL.HRS<1,K> + CCS.AVL.SHR<1,J>
          NEXT K
          IF CCS.MULT<1,J> > EQ.CNT THEN
            EQ.CNT = CCS.MULT<1,J>
          END
        NEXT J
103 *
      NEXT XDATE
      FOR L = 1 TO EQ.CNT
        EQUIP.NO = L
        IF SPAN.HRS = 0 THEN
          AV.CHT = 0
          SCH.CHT = 0
        END ELSE
          AV.CHT = INT((AVAIL.HRS<1,L>/SPAN.HRS + 9)/10)
          SCH.CHT = INT((SCH.HRS<1,L>/SPAN.HRS + 9)/10)
        END
        GOSUB 2000
      NEXT L
      AVAIL.HRS = ''
      SCH.HRS = ''
101 *
    NEXT I
    BASE.HRS = 0
102 *
  REPEAT
  GOSUB 6000
  GOTO 99999
*
*---- CCTR LINE
*
1000 *
  IF LINE.CNT + 3 > 47 THEN
    FRST.HEAD = 0
    GOSUB 6000
    GOSUB 5000
  END
  CCTR = DEPT.CCTRS<1,I>
  PRINT MLINE
  PRINT ("CCTR: ":CCTR)"L#18":' |'
  PRINT CCTR.DESC"L#18":' |'
  LINE.CNT = LINE.CNT + 3
  RETURN
*
*---- RESOURCE LINES
*
2000 *
  IF LINE.CNT + 3 > 50 THEN
    FRST.HEAD = 0
    GOSUB 6000
    GOSUB 5000
    GOSUB 1000
  END
  BEGIN CASE
    CASE SCH.CHT > 110
      PRINT MLINE:STR('O',110):' > ':INT(SCH.HRS<1,L>/100)
    CASE SCH.CHT > 0
      PRINT MLINE:STR('O',SCH.CHT)
    CASE 1
      PRINT MLINE
  END CASE
  BEGIN CASE
    CASE AV.CHT > 110
      PRINT ("RESOURCE ":L)"R#18":' |':STR('*',110):' > ':INT(AVAIL.HRS<1,L>/100)
    CASE AV.CHT > 0
      PRINT ("RESOURCE ":L)"R#18":' |':STR('*',AV.CHT)
    CASE 1
      PRINT ("RESOURCE ":L)"R#18":' |'
  END CASE
  PRINT MLINE
  LINE.CNT = LINE.CNT + 3
  RETURN
*
*---- GET DEPT
*
3000 *
  MAT CCTR.SCHED.REC = ''
  CCS.DEPT = DEPT
  RETURN
*
*---- HEADINGS
*
5000 *
  IF FRST.HEAD = 1 THEN GOSUB 6000
  PRINT CHAR(12)
  PAGE.NO = PAGE.NO + 1
  PRINT HD1:PAGE.NO
  PRINT HD2
  PLINE = SPACE(62):'FOR WEEK '
  PLINE = PLINE:OCONV(ST.DATE,'D2/')"L#8":' TO '
  PLINE = PLINE:OCONV(END.DATE,'D2/')"L#8"
  PRINT PLINE
  PRINT
  PLINE = '  DEPT: ':DEPT "L#5":' ':DEPT.DESC "L#20"
  PRINT PLINE
  PRINT
  LINE.CNT = 6
  FRST.HEAD = 1
  RETURN
*
*---- FOOTINGS
*
6000 *
  IF LINE.CNT < 50 THEN
    X = 50 - LINE.CNT
    FOR Z = 1 TO X
      PRINT MLINE
    NEXT Z
  END
  PRINT BLINE
  PRINT SPLINE
  PRINT SPACE(73):'HOURS'
  PRINT
  PRINT SPACE(30):'* - AVAILABLE    O - SCHEDULED'
  RETURN
*
***(TPCHECKBEG3)***************************************************
*
*---- CHECK FOR ACTIVE TRANSACTION
*
89900 *
  READU LREC FROM PSS.LOCK, CONO:"TP" ELSE NULL
  REQDIV = "ALL"
  CALL TRANSACTION.LOCK(CONO, REQDIV, TP.DIV, ERRMSG)
  BEGIN CASE
    CASE TP.DIV = "X"
    CASE TP.DIV = ""
      DCNT = DCOUNT(REQDIV,VM)
      FOR DPTR = 1 TO DCNT
        CDIV = REQDIV<1,DPTR>
        LOCK.ID = "[":CONO:",":CDIV:",":@LOGNAME:" @ ":@TTY:"]"
        READU LREC FROM PSS.LOCK, LOCK.ID ELSE NULL
      NEXT DPTR
  END CASE
  RELEASE PSS.LOCK, CONO:"TP"
  RETURN
***(TPCHECKEND)***************************************************
*
*---- ERROR ROUTINE
*
91000 *
  ERR.TYPE = 1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE = 3
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999 *
  PRINTER OFF
END
