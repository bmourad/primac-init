*
** SBClient Host 3GL API
** Copyright (C) Ardent Software Inc. 1998
** Copyright (C) UniData, Inc. 1996, 1997
** Copyright (C) System Builder Corporation. 1995
**
**      This software is the proprietary property and contains
**      trade secrets of Ardent Software, Inc. Any unauthorized use,
**      disclosure or duplication is strictly prohibited.
**      All rights reserved.
*
 INCLUDE TUBP TU.API.H
 INCLUDE TUBP SPECIAL.H
*
OPEN "TUSTATE" TO TUSTATE ELSE
CRT "Cannot Open TUSTATE For DEBUG/OUTPUT"
STOP
END
PROMPT ""
CRT "Enter Transfer Type (A, B or H) ":
INPUT ANS
IF ANS = "" THEN STOP
IF LEN(ANS) NE 1 THEN STOP
TYPE = INDEX("ABH", ANS, 1)
IF NOT(TYPE) THEN STOP
CRT "Enter Number of times to run test (default 10) ":
INPUT RESP
IF RESP = "" THEN STOP
IF NOT(NUM(RESP)) THEN STOP
*
ASCIILINE = ""
BINLINE = ""
HEXLINE = ""
OPTS = AM:"B":AM:"H"
DESC = "ASCII":AM:"Binary":AM:"Hex"
SIZES = 1:AM:5:AM:15
DESCS = "Small (1k)":AM:" Medium (5k)":AM:" Large (15k)"
*
CRT "Building ...":
FOR A = 1 TO 1024
IF TYPE = 1 THEN ASCIILINE = ASCIILINE:CHAR(RND(95)+32)
IF TYPE = 2 THEN BINLINE = BINLINE:CHAR(RND(254)+1)
IF TYPE = 3 THEN HEXLINE = HEXLINE:OCONV( OCONV(CHAR(RND(254)+1), "MCDX") ,"R%2")
NEXT A
*
TOTAL.UP.CPS.RATE = 0; TOTAL.DOWN.CPS.RATE = 0; MAX.LOOPS = 10
IF RESP > MAX.LOOPS THEN MAX.LOOPS = RESP
CRT
*
 INCLUDE TUBP DOS.PATH.H
*
FOR BENCH.LOOP = 1 TO MAX.LOOPS
FOR SIZE = 1 TO 3
CRT
CRT "Testing ":DESCS<SIZE>:" Item"
CRT
ITEM = ""
FOR A = 1 TO SIZES<SIZE>
IF TYPE = 1 THEN ITEM = ITEM:ASCIILINE
IF TYPE = 2 THEN ITEM = ITEM:BINLINE
IF TYPE = 3 THEN ITEM = ITEM:HEXLINE
NEXT A
PATH = DEFT.DOS.PATH:"\":DESC<TYPE>:".TMP"
OPTIONS = "HOM":OPTS<TYPE>
DESCRIP = DESC<TYPE>:" Download ... "
CRT DESCRIP:
START = TIME()
CALL TU.DOWNLOAD(ITEM, PATH, OPTIONS, DESCRIP, STATUS)
DURATION = TIME() - START
IF DURATION < 1 THEN DURATION = 1
TOTAL.DOWN.CPS.RATE = TOTAL.DOWN.CPS.RATE + INT(LEN(ITEM)/DURATION)
IF STATUS THEN
CRT " Failed !!"
END ELSE
CRT "OK. Transferred ":LEN(ITEM):" bytes in ":DURATION:" Seconds @":INT(LEN(ITEM)/DURATION):" bps"
ID = "TEMP"
DESCRIP = DESC<TYPE>:" Upload ..... "
CRT DESCRIP:
DELETE TUSTATE, ID
START = TIME()
CALL TU.UPLOAD(PATH, TUSTATE, ID, OPTIONS, DESCRIP, STATUS)
DURATION = TIME() - START
IF DURATION < 1 THEN DURATION = 1
READ NEWITEM FROM TUSTATE, ID ELSE STATUS = 1
TOTAL.UP.CPS.RATE = TOTAL.UP.CPS.RATE + INT(LEN(NEWITEM)/DURATION)
IF STATUS THEN
CRT " Failed !!"
END ELSE
CRT "OK. Transferred ":LEN(NEWITEM):" bytes in ":DURATION:" Seconds @":INT(LEN(NEWITEM)/DURATION):" bps"
IF NEWITEM NE ITEM THEN CRT "Item Mismatch !!"
END
END
NEXT SIZE
NEXT BENCH.LOOP
TOTAL.UP.CPS.RATE = TOTAL.UP.CPS.RATE / MAX.LOOPS
TOTAL.DOWN.CPS.RATE = TOTAL.DOWN.CPS.RATE / MAX.LOOPS
CRT "Total Upload CPS Rate: ":TOTAL.UP.CPS.RATE
CRT "Total Down CPS Rate: ":TOTAL.DOWN.CPS.RATE
STOP
END
