OPEN '','INV_SERIAL' TO INV_SERIAL ELSE STOP 201
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE STOP 201
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE STOP 201
OPEN '','PO' TO PO ELSE STOP 201
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE STOP 201
*
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>PO.RSKI.XREF
**
CMD='SELECT INV_SERIAL WITH TRACK_LVL="S"'
UDTEXECUTE CMD
*
EOL=0
LOOP
  READNEXT ISTK.ID ELSE EOL=1
  CONO=ISTK.ID[1,3]
UNTIL EOL DO
  MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
    IF ISTK.POST.DATE#'' OR ISTK.LOC#'' THEN
      SERIAL=ISTK.ID[4,99]
      PO.ID=CONO:ISTK.PO.NO
      MATREAD PO.REC FROM PO,PO.ID THEN
        EOP=0
        POLN=0; BEG.POS=1
        LOOP
          LOCATE ISTK.PROD IN PO.PROD.NUM<1>,BEG.POS SETTING POLN THEN
            IF ISTK.WHSE=PO.WHSE<1,POLN> AND ISTK.UNIT.COST=PO.GROS.PRICE<1,POLN> THEN
              EOP=1
              ISTK.PO.LINE=POLN
              MATWRITE ISTK.REC ON INV_SERIAL,ISTK.ID
              MATREAD RSXRF.REC FROM PO.RSKI.XREF,PO.ID THEN
                LOCATE SERIAL IN RSXRF.RS.NO<1> SETTING SPOS THEN
                  RSXRF.LN.NO<1,SPOS>=POLN
                  MATWRITE RSXRF.REC ON PO.RSKI.XREF,PO.ID
                END
              END
              INVR.ID=CONO:ISTK.RECP
              MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
                LOCATE SERIAL IN INVR.SERIAL.NO<1> SETTING SPOS THEN
                  INVR.PO.LN=POLN
                  MATWRITE INVR.REC ON INV_RECEIPTS,INVR.ID
                END
              END
            END ELSE
              BEG.POS+=1
              POLN=0
            END
          END ELSE
            EOP=1
          END
        UNTIL EOP DO REPEAT
      END
    END
  END
REPEAT
*
CMD ='SELECT INV_SERIAL_DELETED WITH TRACK_LVL="S"'
UDTEXECUTE CMD
EOL=0
LOOP
  READNEXT ISTK.ID ELSE EOL=1
  CONO=ISTK.ID[1,3]
UNTIL EOL DO
  MATREAD ISTK.REC FROM INV_SERIAL_DELETED,ISTK.ID THEN
    IF ISTK.POST.DATE#'' OR ISTK.LOC#'' THEN
      SERIAL=ISTK.ID[4,99]
      PO.ID=CONO:ISTK.PO.NO
      MATREAD PO.REC FROM PO,PO.ID THEN
        EOP=0
        POLN=0; BEG.POS=1
        LOOP
          LOCATE ISTK.PROD IN PO.PROD.NUM<1>,BEG.POS SETTING POLN THEN
            IF ISTK.WHSE=PO.WHSE<1,POLN> AND ISTK.UNIT.COST=PO.GROS.PRICE<1,POLN> THEN
              EOP=1
              ISTK.PO.LINE=POLN
              MATWRITE ISTK.REC ON INV_SERIAL_DELETED,ISTK.ID
              MATREAD RSXRF.REC FROM PO.RSKI.XREF,PO.ID THEN
                LOCATE SERIAL IN RSXRF.RS.NO<1> SETTING SPOS THEN
                  RSXRF.LN.NO<1,SPOS>=POLN
                  MATWRITE RSXRF.REC ON PO.RSKI.XREF,PO.ID
                END
              END
              INVR.ID=CONO:ISTK.RECP
              MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
                LOCATE SERIAL IN INVR.SERIAL.NO<1> SETTING SPOS THEN
                  INVR.PO.LN=POLN
                  MATWRITE INVR.REC ON INV_RECEIPTS,INVR.ID
                END
              END
            END ELSE
              BEG.POS+=1
              POLN=0
            END
          END ELSE
            EOP=1
          END
        UNTIL EOP DO REPEAT
      END
    END
  END
REPEAT
*
TMP='' ; TMP.ARR=''
CMD='SELECT INV_SERIAL BY ISTK_PO_NO BY ISTK_PO_LINE WITH TRACK_LVL="S"'
UDTEXECUTE CMD
*
DONE=0
LOOP
  READNEXT ISTK.ID ELSE DONE=1
UNTIL DONE DO
  MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
    TMP=ISTK.ID[1,3]:ISTK.PO.NO:"!":ISTK.PO.LINE
    LOCATE TMP IN TMP.ARR<1> SETTING TPOS THEN
      TMP.ARR<2,TPOS>+=1
    END ELSE
      TMP.ARR<1,TPOS>=TMP
      TMP.ARR<2,TPOS>=1
    END
  END
REPEAT
CMD='SELECT INV_SERIAL_DELETED BY ISTK_PO_NO BY ISTK_PO_LINE WITH TRACK_LVL="S"'
UDTEXECUTE CMD
*
DONE=0
LOOP
  READNEXT ISTK.ID ELSE DONE=1
UNTIL DONE DO
  MATREAD ISTK.REC FROM INV_SERIAL_DELETED,ISTK.ID THEN
    TMP=ISTK.ID[1,3]:ISTK.PO.NO:"!":ISTK.PO.LINE
    LOCATE TMP IN TMP.ARR<1> SETTING TPOS THEN
      TMP.ARR<2,TPOS>+=1
    END ELSE
      TMP.ARR<1,TPOS>=TMP
      TMP.ARR<2,TPOS>=1
    END
  END
REPEAT
POCNT=DCOUNT(TMP.ARR<1>,@VM)
FOR MM=1 TO POCNT
  PO.ID=OCONV(TMP.ARR<1,MM>,"G!1")
  POLN=OCONV(TMP.ARR<1,MM>,"G1!1")
  MATREAD PO.REC FROM PO,PO.ID THEN
    PO.NO.OF.ROLLS<1,POLN>=TMP.ARR<2,MM>
    MATWRITE PO.REC ON PO,PO.ID
  END
NEXT MM
100 
END
