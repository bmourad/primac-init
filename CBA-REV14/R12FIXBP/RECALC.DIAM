*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*********************************************************************
* REVISION   -[08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     -PRIMAC
* SOURCE     -ICSBP
* PROGRAM    -RECALC.DIAM
* BY         -Lanny Ross
* DATE       -04/19/2005
* DESCRIPTION-Used to recalulate diameter for serial with missing DIAM.
*             Operates on an Individual Serial basis or from a previous
*             GET.LIST.
*********************************************************************
*
*--- INSERT EQUATES
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>CATEGORY
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>PO
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>ICS.ID 
*COPY>ICS.CPYLIB>INV.JOB.STATS ;*T26216
*COPY>JCS.CPYLIB>JOB ;*T26216 
*
DEFFUN DIVISION.POSITION(COMP.NO,CONTROL.FILE,DIVISION.CODE)
DEFFUN CURRENT.PERIOD(COMP.NO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
DEFFUN CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)
DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,LN,ROND)
DEFFUN CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,LN,ROND)
DEFFUN CALC.EXT.COST(COST.QTY,UNIT.COST,COST.WT,ROND)
OPEN.FLAG=1
*
*
SYS.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN FILES
*
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG='INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERRMSG='WAREHOUSE FILE IS MISSING'; GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERRMSG='CATEGORY FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG='INV.WHSE FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.HIST' TO INV.HIST ELSE
  ERRMSG='INV.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERRMSG='INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
  ERRMSG='INV_SERIAL FILE IS MISSING'; GOTO 93000
END
*T27692 v
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE
  ERRMSG='INV_SERIAL_DELETED FILE IS MISSING'; GOTO 93000
END
*T27692 ^
OPEN '','INV.STATS' TO INV.STATS ELSE
  ERRMSG='INV.STATS FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
  ERRMSG='INV_AUDIT_HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','PREFIX' TO PREFIX ELSE
  ERRMSG='PREFIX FILE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG='COMPANY FILE IS MISSING'; GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG='CONTROL FILE IS MISSING'; GOTO 93000
END
OPEN '','SECURITY' TO SECURITY ELSE
  ERRMSG='SECURITY FILE IS MISSING'; GOTO 93000
END
OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
  ERRMSG='ICS.SCREENS FILE IS MISSING'; GOTO 93000
END
OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
  ERRMSG='INVENTORY.XREF FILE IS MISSING'; GOTO 93000
END
OPEN '','ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE
  ERRMSG='ACCRUED.LIAB.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
  ERRMSG='INV.JOB.STATS FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000 ;*T26216
END
*
*--- GET COMPANY NUMBER
*
MAT COMP.REC=''
CONO=''
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO='END' THEN GOTO 99999
IF CO.POS="Y" THEN
  OPEN '','PO' TO PO ELSE ERRMSG='PO FILE IS MISSING'; GOTO 93000
END
IF CO.APS.R.INTRF > 1 THEN
  OPEN '','VEND.STATS' TO VEND.STATS ELSE
    ERRMSG='VEND.STATS FILE IS MISSING'; GOTO 93000
  END
  OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
    ERRMSG='VEND.PO.STATS FILE IS MISSING'; GOTO 93000
  END
  OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
    ERRMSG='VEND.PROD.STATS FILE IS MISSING'; GOTO 93000
  END
END
*
GOSUB INITIALIZE
PROMPT''
CRT @(-1):'Calculate Diameter for Serial Items'
1 CRT @(5,5):CL:'(L)ist or (I)ndividual Item : ':;INPUT PTYP:
  IF PTYP = 'END' THEN GOTO 99999
  IF PTYP # 'L' AND PTYP # 'I' THEN GOTO 1
  IF PTYP = 'L' THEN GOTO 3
2 CRT @(5,7):CL:'Enter Serial # : ':;INPUT SERID:
  IF SERID = 'END' THEN GOTO 99999
  ISTK.ID = CONO:SERID
  GOSUB GET.DIAM
  GOTO 2
3 DONE=0
  LOOP
    READNEXT ISTK.ID ELSE DONE = 1
  UNTIL DONE DO
    GOSUB GET.DIAM
  REPEAT
  GOTO 99999
;*
;* Main Loop
;*
************
GET.DIAM: 
************
  MATREADU ISTK.REC FROM INV_SERIAL,ISTK.ID THEN 
    MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD THEN
*COPY>ICSBP>INV.UM.CNV
      DQTY=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'','')
      ISTK.CUR.DIAM=CALC.DIAM(ISTK.CUR.QTY,DQTY,MAT INV.REC)
      MATWRITE ISTK.REC ON INV_SERIAL,ISTK.ID
    END
  END ELSE
    CRT @(0,22):CL:'Cannot read Serial record!':;INPUT X:
    RELEASE INV_SERIAL, ISTK.ID
  END
RETURN
*
*******************
INITIALIZE: 
*******************
*
READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
  ERRMSG="DIVISIONS CONTROL FILE RECORD IS MISSING"; GOTO 93000
END
READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
  ERRMSG="DIV.SECURITY CONTROL FILE RECORD IS MISSING"; GOTO 93000
END
GEN.DIV="00";GEN.DEPT="00";GEN.CCTR="000" 
RETURN
*
*--- ERROR ROUTINE
*
91000*
ERR.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000*
ERR.TYPE=2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000*
ERR.TYPE=3
CALL SYSCOM(MAT SYSCOM.REC)
99999*
END
