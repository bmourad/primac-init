*Build INV_AUDIT_BAL records using a starting/ending PERIOD.
OPEN '','INV.WHSE' TO INV.WHSE ELSE STOP 'INV.WHSE'
OPEN '','INV_AUDIT_BAL' TO INV_AUDIT_BAL ELSE STOP 'INV_AUDIT_BAL'
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE STOP 'INV_AUDIT_HIST'
*
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*
PRINT @(-1)
PRINT @(5,3):'ENTER COMPANY ':
INPUT CONO
PRINT @(5,5):'ENTER CURRENT ICS PERIOD ':
INPUT PERIOD
PREV.PERIOD=''
LOOP
UNTIL PREV.PERIOD # '' AND PREV.PERIOD < PERIOD DO
PRINT @(5,7):'ENTER STARTING ICS PERIOD ':
INPUT PREV.PERIOD
REPEAT
NEXT.PERIOD = PREV.PERIOD
LOOP
  PRINT @(5,9):'ENTER WAREHOUSE ':
  INPUT WHSE
UNTIL WHSE='END' DO 
  LOOP
    PRINT @(5,11):'ENTER PRODUCT NUMBER ':@(-4):
    INPUT PROD
  UNTIL PROD='END' DO
    GOSUB FIX.DATA
  REPEAT
REPEAT
STOP
*
*************
FIX.DATA: 
*************
*
*EBAL=0 ; EAMT=0
IWH.ID=CONO:PROD:"!":WHSE
MATREADU IWH.REC FROM INV.WHSE,IWH.ID THEN
*
  ITB.ID=IWH.ID:"!":PREV.PERIOD
  LOOP
    EBAL=0 ; EAMT=0
    MATREADU ITB.REC FROM INV_AUDIT_BAL,ITB.ID ELSE
      PRINT 'CANNOT BUILD ITB RECORDS'
      STOP
    END
* CMD = 'SSELECT INV_AUDIT_HIST WITH INAH_PROD="':PROD:'" WITH INAH_PERIOD=':PREV.PERIOD
    CMD = 'SSELECT INV_AUDIT_HIST WITH PROD_WHSE_IDX = "':CONO:PROD:'!':WHSE:'" AND WITH INAH_PERIOD = "':NEXT.PERIOD:'"'
    UDTEXECUTE CMD CAPTURING MSG
*
    IF ITB.RECV='' AND ITB.SALE='' AND ITB.TRAN.IN='' AND ITB.TRAN.OUT='' AND ITB.SHRNK='' THEN
      DONE=0
      LOOP
        READNEXT INAH.ID ELSE DONE=1
      UNTIL DONE DO
        CONO=INAH.ID[1,3]
        MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
          BEGIN CASE
            CASE INAH.TYPE = "R"
              ITB.RECV+=INAH.QTY
              ITB.RECV.AMT+=INAH.EXT.COST
            CASE INAH.TYPE = "S"
              ITB.SALE+=INAH.QTY
              ITB.SALE.AMT+=INAH.EXT.COST
            CASE INAH.TYPE = "A"
              ITB.SHRNK+=INAH.QTY
              ITB.SHRNK.AMT+=INAH.EXT.COST
            CASE INAH.TYPE = "I"
              ITB.TRAN.IN+=INAH.QTY
              ITB.TRAN.IN.AMT+=INAH.EXT.COST
            CASE INAH.TYPE = "O"
              ITB.TRAN.OUT+=INAH.QTY
              ITB.TRAN.OUT.AMT+=INAH.EXT.COST
          END CASE
        END
      REPEAT
      EBAL=ITB.BEG+ITB.RECV+ITB.SALE+ITB.SHRNK+ITB.TRAN.IN+ITB.TRAN.OUT
      EAMT=ITB.BEG.AMT+ITB.RECV.AMT+ITB.SALE.AMT+ITB.SHRNK.AMT+ITB.TRAN.IN.AMT+ITB.TRAN.OUT.AMT
      MATWRITE ITB.REC ON INV_AUDIT_BAL,ITB.ID
      GOSUB GET.NEXT.PER
      ITB.ID=IWH.ID:"!":NEXT.PERIOD
      MAT ITB.REC=''
      ITB.BEG=EBAL ; ITB.BEG.AMT=EAMT
      MATWRITE ITB.REC ON INV_AUDIT_BAL,ITB.ID
    END ELSE
      DONE=0                                              
      LOOP                                                
        READNEXT INAH.ID ELSE DONE=1                      
      UNTIL DONE DO                                       
        CONO=INAH.ID[1,3]                                 
        MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
          EBAL+=INAH.QTY
          EAMT+=INAH.EXT.COST
        END
      REPEAT
      EBAL+=ITB.BEG
      EAMT+=ITB.BEG.AMT
      GOSUB GET.NEXT.PER
      ITB.ID=IWH.ID:"!":NEXT.PERIOD                
      MAT ITB.REC=''                          
      ITB.BEG=EBAL ; ITB.BEG.AMT=EAMT         
      MATWRITE ITB.REC ON INV_AUDIT_BAL,ITB.ID
    END
    LOCATE NEXT.PERIOD IN IWH.BAL.PERIOD<1> BY "AR" SETTING PLOC ELSE NULL
    IWH.BAL.PERIOD<1,PLOC>=NEXT.PERIOD
    IWH.BEG.QTY<1,PLOC>=ITB.BEG
    IWH.BEG.AMT<1,PLOC>=ITB.BEG.AMT
  UNTIL NEXT.PERIOD = PERIOD DO
  REPEAT
  MATWRITE IWH.REC ON INV.WHSE,IWH.ID
END
RETURN
*
GET.NEXT.PER: 
*
WPERYR=NEXT.PERIOD[1,4]
WPERMO=NEXT.PERIOD[5,2]
IF WPERMO < 12 THEN
  NEXT.PERIOD = WPERYR:WPERMO+1'R%2'
END ELSE
  NEXT.PERIOD = WPERYR+1:'01'
END
RETURN
