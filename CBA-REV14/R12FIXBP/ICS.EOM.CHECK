*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>WAREHOUSE
*
PRR.SEQ=0
*
UNKNOWN = "NOT ON FILE"
IAT.LIST1='' ; INAH.EOM.LIST='' ; IRW.LIST9='' ; IWH.LIST1=''
*
***** OPEN FILES
*
OPEN "","INVENTORY" TO INVENTORY ELSE STOP "INVENTORY "
OPEN "","INV.WHSE" TO INV.WHSE ELSE STOP "INV.WHSE "
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE STOP "INV.WHSE.LOC "
OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE STOP "INV_AUDIT_HIST "
OPEN "","INV_AUDIT_BAL" TO INV_AUDIT_BAL ELSE STOP "INV_AUDIT_BAL "
OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE STOP "INV_RECEIPTS "
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE STOP "INV_SERIAL "
OPEN "","INV_SERIAL_DELETED" TO INV_SERIAL_DELETED ELSE STOP "INV_SERIAL_DELETED "     ;*T24023
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE STOP "INV_RECP_WHSE "
OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE STOP "INV.JOB.STATS "
OPEN "","INV.STATS" TO INV.STATS ELSE STOP "INV.STATS "
OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE STOP "FNGD.ORDER.STATS "
OPEN "","FNGD.STATS" TO FNGD.STATS ELSE STOP "FNGD.STATS "
OPEN "","CATEGORY" TO CATEGORY ELSE STOP "CATEGORY "
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE STOP 'WAREHOUSE FILE IS MISSING'
OPEN '','EOM.CHECK' TO EOM.CHECK  ELSE STOP 'EOM.CHECK'
CMD='CLEAR.FILE EOM.CHECK'
UDTEXECUTE CMD
*
PRINT @(-1)
PROMPT''
PRINT @(5,3):'ENTER COMPANY ':
INPUT CONO
IF CONO='END' THEN GO 99999
PRINT @(5,5):"ENTER DIVISION ":
INPUT DIV.CODE
PRINT @(5,5):"ENTER CURRENT PERIOD ":
INPUT CURR.PERIOD
IF CURR.PERIOD='END' THEN GO 99999
*PRINT @(5,7):"ENTER PRODUCT ":
*INPUT PROD.NUM
*  IF PROD.NUM='END' THEN GO 99999
*PRINT @(5,9):"ENTER WHSE ":
*INPUT WHSE
*  IF WHSE='END' THEN GO 99999
*
***** MAIN PROCESSING
*
IWH.LIST1 = ""
IF DIV.CODE='ALL' THEN
*   SELECT INV.WHSE TO IWH.LIST1
   CMD='SELECT INV.WHSE WITH CONO = "':CONO:'"'
   UDTEXECUTE CMD CAPTURING ERROR RETURNING MSG
   IF MSG<1,1,1> = "41" THEN                 
      SELECT INV.WHSE TO IWH.LIST1
   END                                       
END ELSE
   CMD='SELECT INV.WHSE WITH CONO = "':CONO:'" AND WITH IWH_DIV="':DIV.CODE:'"'
   UDTEXECUTE CMD CAPTURING ERROR RETURNING MSG
   IF MSG<1,1,1> = "41" THEN                 
      SELECT INV.WHSE TO IWH.LIST1
   END                                       
END
*IWH.ID = CONO:PROD.NUM:"!":WHSE
DATA = 1
LOOP
   READNEXT IWH.ID FROM IWH.LIST1 ELSE DATA = 0
   ERR=0
WHILE DATA DO
   PROD.NUM = FIELD(IWH.ID,"!",1)[4,99] 
   WHSE = FIELD(IWH.ID,"!",2)
   GOSUB PROCESS.INV.WHSE
   IF NOT(ERR) THEN
      GOSUB PROCESS.INV_RECP_WHSE
      IF NOT(ERR) THEN
         GOSUB PROCESS.INV_AUDIT_BAL
      END
   END
   RELEASE
REPEAT

GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
******************
PROCESS.INV.WHSE: 
******************
*
ERR=0
IF IWH.ID[1,3] # CONO THEN ERR=1
IF NOT(ERR) THEN
   MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
      IF IWH.RECP.NO#'' THEN
         ERR.FLG=''; ERRMSG=''
         ;*include receipts one period in the future so avg.cost
         ;*can be recalculated for qty received in future period.
      END ELSE
         ERR=1
      END
   END ELSE
      MAT PRR.REC = "" ; ERR=1
      PRR.FILE = "INV.WHSE"
      PRR.ID = CONO:IWH.ID[4,99]
      PRR.ERR = "CANNOT LOCATE"
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
      RELEASE INV.WHSE, IWH.ID
   END
END
IF NOT(ERR) THEN
   MATREAD INV.REC FROM INVENTORY,  FIELD(IWH.ID,"!",1) ELSE
      MAT INV.REC = ""
   END
   IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      MAT CATG.REC = ""
   END
   IF INV.M.LINE # "FNGD" THEN
     MATREAD INV.STAT.REC FROM INV.STATS,IWH.ID ELSE MAT INV.STAT.REC = ''
   END ELSE
     MATREAD FGS.REC FROM FNGD.STATS,IWH.ID ELSE MAT FGS.REC = ''
   END
   LCNT = DCOUNT(IWH.LOC,VM)
   LQTY = 0;LWIP = 0
   SQTY=0
   RQTY=0
   FOR L = LCNT TO 1 STEP -1 UNTIL (ERR)
      IWLO.ID = IWH.ID:"!":IWH.LOC<1,L>
      MATREADU IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC=''
      SCNT=DCOUNT(IWLO.SERIAL<1>,VM)
      SQTY=0
      FOR S = SCNT TO 1 STEP -1 
         ISTK.ID=CONO:IWLO.SERIAL<1,S>
         MATREADU ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
            LQTY+=ISTK.CUR.QTY
            SQTY+=ISTK.CUR.QTY
            RQTY+=ISTK.RSVB.QTY
            IF ISTK.CUR.QTY=0 THEN
               IF ISTK.RECP # '' THEN
               END
            END
         END ELSE
            RELEASE INV_SERIAL,ISTK.ID
         END
      NEXT S
      ;* check location on hand vs. sum of all serial qty's for the loc
      IF SQTY#IWLO.LOC.ON.HAND+0 THEN
         MAT PRR.REC='' ; ERR=1
         PRR.FILE='INV.WHSE.LOC'
         PRR.ID=CONO:IWLO.ID[4,99]
         PRR.ERR='INV.WHSE.LOC ON HAND QTY=':IWLO.LOC.ON.HAND:' AND SUM = ':SQTY
         PRR.SEQ+=1
         MATWRITE PRR.REC ON EOM.CHECK,PRR.SEQ
      END
   NEXT L
   IF NOT(ERR) THEN
      IF LQTY <> IWH.ON.HAND + 0 THEN
         MAT PRR.REC = "" ; ERR=1
         PRR.FILE = "INV.WHSE"
         PRR.ID = CONO:IWH.ID[4,99]
         PRR.ERR = "INV.WHSE ON HAND= ":IWH.ON.HAND:" AND LOC SUM = ":LQTY
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
         RELEASE INV.WHSE, IWH.ID
      END
      IF CATG.TRK.LVL='G' THEN
         IF RQTY#IWH.ON.HAND+0 THEN
            MAT PRR.REC = "" ; ERR=1
            PRR.FILE = "INV.WHSE"
            PRR.ID = CONO:IWH.ID[4,99]
            PRR.ERR = "INV.WHSE RESERVABLE= ":(IWH.ON.HAND-IWH.RESV):" AND LOC SUM = ":RQTY
            PRR.SEQ = PRR.SEQ + 1
            MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
            RELEASE INV.WHSE, IWH.ID
         END
      END
   END
END
RETURN
*
**********************
PROCESS.INV_RECP_WHSE: 
**********************
*
IRW.CNT=0
ERR=0
RSVB=0
COST=0
HERR=0
RESV.IJS=0
IF ISTAT.JOB # '' THEN
   FOR J = 1 TO DCOUNT(ISTAT.JOB,VM)
      MATREAD INV.JS.REC FROM INV.JOB.STATS,IWH.ID:"!":ISTAT.JOB<1,J> THEN
         RESV.IJS += IJS.JOB.QTY
      END
   NEXT J
END
IF FGS.ORDER # '' THEN
   FOR J = 1 TO DCOUNT(FGS.ORDER,VM)
      MATREAD FOS.REC FROM FNGD.ORDER.STATS,IWH.ID:"!":FGS.ORDER<1,J>:"!":FGS.SEQ<1,J>:"!":FGS.KIT<1,J> THEN
         RESV.IJS += FOS.R.QTY
      END
   NEXT J
END
IF RESV.IJS # IWH.RESV+0 AND INV.M.LINE # "FNGD" THEN
   MAT PRR.REC = "" ; HERR=1                  
   PRR.FILE = "INV.WHSE"                     
   PRR.ID=CONO:IWH.ID[4,99]
   IF INV.M.LINE # "FNGD" THEN
     PRR.ERR='Reserve qty mismatch vs INV.JOB.STATS'
   END ELSE
     PRR.ERR='Reserve qty mismatch vs FNGD.ORDER.STATS'
   END
   PRR.SEQ = PRR.SEQ + 1                     
   MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ 
   RELEASE INV.WHSE,IWH.ID
END
BEGIN CASE
   CASE CATG.COST.TYPE = 'AC' AND CATG.RSV.SERIAL # 'Y' AND INV.M.LINE # "FNGD"
      RSVB = SUM(IWH.RSV.FI)
      CUR.QTY = SUM(IWH.QTY.FI)
      IRW.LIST9 = ''
      IRW.CNT = DCOUNT(IWH.RECP.NO,VM)
   CASE 1
      CMD='SELECT INV_RECP_WHSE WITH PROD_WHSE_IDX="':CONO:PROD.NUM:'!':WHSE:'"' 
      UDTEXECUTE CMD CAPTURING ERROR RETURNING MSG 
      IF MSG<1,1,1> = "41" THEN                  
         SELECT INV_RECP_WHSE TO IRW.LIST9
      END ELSE
         IF IWH.RECP.NO#'' THEN
            MAT PRR.REC = "" ; ERR=1                  
            PRR.FILE = "INV_RECP_WHSE"                     
            PRR.ID=CONO:'NO IDS'
            PRR.ERR='No INV_RECP_WHSE records exist for prod ':PROD.NUM:' and whse ':WHSE
            PRR.SEQ = PRR.SEQ + 1                     
            MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ 
         END
      END
      FIRST.TIME=1
      WDATA = 1
      LOOP
         READNEXT IRW.ID FROM IRW.LIST9 ELSE WDATA=0
      WHILE WDATA AND NOT(ERR) DO
         IRW.CNT += 1
         MATREAD IRW.REC FROM INV_RECP_WHSE, IRW.ID THEN
            IF SUM(IRW.JRSVD.QTY)#IRW.CUR.QTY-IRW.RSVB.QTY THEN
               MAT PRR.REC = ""   ; ERR=1
               PRR.FILE = "INV_RECP_WHSE"
               PRR.ID = CONO:IRW.ID[4,99]
               PRR.ERR='RESERVED QTY MISMATCH FOR ':IRW.ID
               PRR.SEQ = PRR.SEQ + 1
               MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
            END ELSE
               IF IRW.RSVB.QTY>IRW.CUR.QTY THEN
                  MAT PRR.REC = ""  ; ERR=1
                  PRR.FILE = "INV_RECP_WHSE"
                  PRR.ID =CONO: IRW.ID[4,99]
                  PRR.ERR='RESERVED QTY VS. CURRENT QTY MISMATCH  FOR ':IRW.ID
                  PRR.SEQ = PRR.SEQ + 1
                  MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
               END ELSE
                  IF IRW.CUR.QTY+0<0 OR IRW.RSVB.QTY+0<0 THEN
                     MAT PRR.REC = ""   ; ERR=1
                     PRR.FILE = "INV_RECP_WHSE"
                     PRR.ID =CONO: IRW.ID[4,99]
                     PRR.ERR='NEGATIVE QTY  FOR ':IRW.ID
                     PRR.SEQ = PRR.SEQ + 1
                     MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
                  END
               END
            END
            RSVB+=IRW.RSVB.QTY
            INVR.ID=OCONV(IRW.ID,"G!1")
            MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
               COST+=INT((INVR.UNIT.COST/10000)*((IRW.RSVB.QTY/10)/(INV.COST.WT/100))+.5)
            END ELSE
               MAT INVR.REC=''
            END
         END
      REPEAT
END CASE
IF NOT(ERR) THEN
   IF RSVB<>(IWH.ON.HAND-IWH.RESV)+0 THEN
      MAT PRR.REC = "" ; ERR=1
      PRR.FILE = "INV.WHSE"
      PRR.ID =CONO: IWH.ID[4,99]
      PRR.ERR = "INV.WHSE RESERVABLE QTY = ":IWH.ON.HAND-IWH.RESV:" AND RECEIPT RESERVABLE  = ":RSVB
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
      RELEASE INV.WHSE, IWH.ID
   END
END
IF NOT(ERR) THEN
   IF IRW.CNT # DCOUNT(IWH.RECP.NO,VM) THEN
      MAT PRR.REC = "" ; ERR=1
      PRR.FILE = "INV.WHSE"
      PRR.ID =CONO: IWH.ID[4,99]
      PRR.ERR = "INV.WHSE RECEIPT CNT DOES NOT EQUAL INV_RECP_WHSE CNT"
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
      RELEASE INV.WHSE, IWH.ID
   END
END
IF HERR THEN ERR = 1
RETURN
*
**********************
PROCESS.INV_AUDIT_BAL: 
**********************
*
ERR=0
CMD = 'SSELECT INV_AUDIT_HIST BY INAH_PERIOD '
CMD:=' WITH PROD_WHSE_IDX = "'
CMD:=CONO:PROD.NUM:'!':WHSE:'"'
CMD:= ' AND WITH INAH_PERIOD>=':CURR.PERIOD
UDTEXECUTE CMD CAPTURING ERROR RETURNING MSG
IF MSG<1,1,1> = "41" THEN 
   SELECT INV_AUDIT_HIST TO INAH.EOM.LIST
END
INAH.DATA = 1;PREV.PROD = "";PREV.WHSE = ""
;*
ITB.ID=CONO:PROD.NUM:'!':WHSE:'!':CURR.PERIOD
MATREAD ITB.REC FROM INV_AUDIT_BAL,ITB.ID ELSE MAT ITB.REC=''
QOH=ITB.BEG ; COH=ITB.BEG.AMT
LOOP
   READNEXT INAH.ID FROM INAH.EOM.LIST ELSE INAH.DATA = 0
WHILE INAH.DATA DO
   MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID ELSE
      MAT INAH.REC = ""
   END
   IF INAH.ID[4,1]#'C' THEN
      ;* include all periods into total
      QOH+=INAH.QTY
      COH+=INAH.EXT.COST
   END
REPEAT
;*
;* now compare total onhand and cost against IWH.ON.HAND
;*
IF QOH+0 # IWH.ON.HAND+0 THEN
   MAT PRR.REC = "" ; ERR=1
   PRR.FILE = "INV.WHSE"
   PRR.ID =CONO: IWH.ID[4,99]
   PRR.ERR = "INV.WHSE ON HAND QTY = ":IWH.ON.HAND:" AND INV_AUDIT_BAL = ":QOH      ; * this is including future periods.
   PRR.SEQ = PRR.SEQ + 1
   MATWRITE PRR.REC ON EOM.CHECK, PRR.SEQ
   RELEASE INV.WHSE, IWH.ID
END
RETURN
*
99999 END
