OPEN '','ITB' TO ITB ELSE STOP 'ITB'
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE STOP 'INV_AUDIT_HIST'
OPEN '','EOM.CHECK' TO EOM.CHECK ELSE STOP 'EOM.CHECK'
*
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*
PRINT @(-1)
PRINT 'INPUT CURRENT PERIOD :':
INPUT PERIOD
DIM TMP(13) ; MAT TMP=''
EQU TMP.PERIOD       TO TMP(1)
EQU TMP.BEG          TO TMP(2)
EQU TMP.BEG.AMT      TO TMP(3)
EQU TMP.RECV         TO TMP(4)
EQU TMP.RECV.AMT     TO TMP(5)
EQU TMP.SALE         TO TMP(6)
EQU TMP.SALE.AMT     TO TMP(7)
EQU TMP.SHRNK        TO TMP(8)
EQU TMP.SHRNK.AMT    TO TMP(9)
EQU TMP.TRAN.IN      TO TMP(10)
EQU TMP.TRAN.IN.AMT  TO TMP(11)
EQU TMP.TRAN.OUT     TO TMP(12)
EQU TMP.TRAN.OUT.AMT TO TMP(13)
*
READ REC FROM EOM.CHECK,"EP" ELSE REC=''
RCNT=DCOUNT(REC,@AM)
FOR CC=1 TO RCNT
  IWH.ID=REC<CC>
  CONO=IWH.ID[1,3]
  PROD=OCONV(IWH.ID,'G!1')[4,99]
  WHSE=OCONV(IWH.ID,'G1!1')
  GOSUB FIX.DATA
NEXT CC
STOP
*
*************
FIX.DATA: 
*************
*
MAT TMP='' ; TEBAL='' ; TEAMT=''
EBAL='' ; EAMT=''
*
CMD = 'SSELECT INV_AUDIT_HIST WITH INAH_PROD="':PROD:'" BY INAH_PERIOD'
UDTEXECUTE CMD CAPTURING MSG
*
DONE=0 ; OLD.PERIOD='@@@@@' ; CNT=0
LOOP
  READNEXT INAH.ID ELSE DONE=1
UNTIL DONE DO
  CONO=INAH.ID[1,3]
  MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
    IF OLD.PERIOD#INAH.PERIOD THEN
      CNT+=1
      TMP.PERIOD<1,CNT>=INAH.PERIOD
      OLD.PERIOD=INAH.PERIOD
    END
    BEGIN CASE
      CASE INAH.TYPE = "R"
        TMP.RECV<1,CNT>+=INAH.QTY
        TMP.RECV.AMT<1,CNT>+=INAH.EXT.COST
      CASE INAH.TYPE = "S"
        TMP.SALE<1,CNT>+=INAH.QTY
        TMP.SALE.AMT<1,CNT>+=INAH.EXT.COST
      CASE INAH.TYPE = "A"
        TMP.SHRNK<1,CNT>+=INAH.QTY
        TMP.SHRNK.AMT<1,CNT>+=INAH.EXT.COST
      CASE INAH.TYPE = "I"
        TMP.TRAN.IN<1,CNT>+=INAH.QTY
        TMP.TRAN.IN.AMT<1,CNT>+=INAH.EXT.COST
      CASE INAH.TYPE = "O"
        TMP.TRAN.OUT<1,CNT>+=INAH.QTY
        TMP.TRAN.OUT.AMT<1,CNT>+=INAH.EXT.COST
    END CASE
  END
REPEAT
LOCATE PERIOD IN TMP.PERIOD<1> SETTING PLOC ELSE
  TMP.PERIOD=INSERT(TMP.PERIOD,1,PLOC,0,PERIOD)
  TMP.BEG=INSERT(TMP.BEG,1,PLOC,0,'')
  TMP.BEG.AMT=INSERT(TMP.BEG.AMT,1,PLOC,0,'')
  TMP.RECV=INSERT(TMP.RECV,1,PLOC,0,'')
  TMP.RECV.AMT=INSERT(TMP.RECV.AMT,1,PLOC,0,'')
  TMP.SALE=INSERT(TMP.SALE,1,PLOC,0,'')
  TMP.SALE.AMT=INSERT(TMP.SALE.AMT,1,PLOC,0,'')
  TMP.SHRNK=INSERT(TMP.SHRNK,1,PLOC,0,'')
  TMP.SHRNK.AMT=INSERT(TMP.SHRNK.AMT,1,PLOC,0,'')
  TMP.TRAN.IN=INSERT(TMP.TRAN.IN,1,PLOC,0,'')
  TMP.TRAN.IN.AMT=INSERT(TMP.TRAN.IN.AMT,1,PLOC,0,'')
  TMP.TRAN.OUT=INSERT(TMP.TRAN.OUT,1,PLOC,0,'')
  TMP.TRAN.OUT.AMT=INSERT(TMP.TRAN.OUT.AMT,1,PLOC,0,'')
END
*
PER.CNT=DCOUNT(TMP.PERIOD<1>,@VM)
FIRST.TIME=1
TEBAL='' ; TEAMT=''
FOR PP=1 TO PER.CNT
  ITB.ID=CONO:PROD:'!':WHSE:'!':TMP.PERIOD<1,PP>
  MATREAD ITB.REC FROM ITB,ITB.ID ELSE MAT ITB.REC=''
  IF ITB.BEG+0>0 AND TMP.PERIOD<1,PP>[1,4]=PERIOD[1,4] AND FIRST.TIME THEN
    FIRST.TIME=0
    TEBAL=ITB.BEG ; TEAMT=ITB.BEG.AMT
  END
  TMP.BEG<1,PP>=TEBAL
  TMP.BEG.AMT<1,PP>=TEAMT
  EBAL=ITB.BEG+ITB.RECV+ITB.SALE+ITB.SHRNK+ITB.TRAN.IN+ITB.TRAN.OUT
  EAMT=ITB.BEG.AMT+ITB.RECV.AMT+ITB.SALE.AMT+ITB.SHRNK.AMT+ITB.TRAN.IN.AMT+ITB.TRAN.OUT.AMT
  TEBAL=TEBAL+TMP.RECV<1,PP>+TMP.SALE<1,PP>+TMP.SHRNK<1,PP>+TMP.TRAN.IN<1,PP>+TMP.TRAN.OUT<1,PP>
  TEAMT=TEAMT+TMP.RECV.AMT<1,PP>+TMP.SALE.AMT<1,PP>+TMP.SHRNK.AMT<1,PP>+TMP.TRAN.IN.AMT<1,PP>+TMP.TRAN.OUT.AMT<1,PP>
NEXT PP
*
FOR PP=1 TO PER.CNT
  IF TMP.PERIOD<1,PP> > PERIOD THEN
    ITB.ID=IWH.ID:"!":TMP.PERIOD<1,PP>
    DELETE ITB, ITB.ID
  END ELSE
    ITB.ID=IWH.ID:"!":TMP.PERIOD<1,PP>
    MAT ITB.REC=''
    IF TMP.PERIOD<1,PP>=PERIOD THEN
      ITB.BEG=TMP.BEG<1,PP>
      ITB.BEG.AMT=TMP.BEG.AMT<1,PP>
    END ELSE
      ITB.BEG=TMP.BEG<1,PP>
      ITB.BEG.AMT=TMP.BEG.AMT<1,PP>
      ITB.RECV=TMP.RECV<1,PP>
      ITB.RECV.AMT=TMP.RECV.AMT<1,PP>
      ITB.SALE=TMP.SALE<1,PP>
      ITB.SALE.AMT=TMP.SALE.AMT<1,PP>
      ITB.SHRNK=TMP.SHRNK<1,PP>
      ITB.SHRNK.AMT=TMP.SHRNK.AMT<1,PP>
      ITB.TRAN.IN=TMP.TRAN.IN<1,PP>
      ITB.TRAN.IN.AMT=TMP.TRAN.IN.AMT<1,PP>
      ITB.TRAN.OUT=TMP.TRAN.OUT<1,PP>
      ITB.TRAN.OUT.AMT=TMP.TRAN.OUT.AMT<1,PP>
    END
    MATWRITE ITB.REC ON ITB,ITB.ID
    LOCATE TMP.PERIOD<1,PP> IN IWH.BAL.PERIOD<1> BY "AR" SETTING PLOC ELSE NULL
  END
NEXT PP
RETURN
