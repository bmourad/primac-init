*PGM TO VERIFY INV O/H QTYS BETWEEN INV.WHSE, INV.WHSE.LOC, INV_RECP_WHSE
* AND INV_SERIAL FILES 03/22/05
CRT @(-1)
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>JCS.CPYLIB>JOB.MATL
OPEN 'INV.WHSE' TO INV.WHSE ELSE STOP
OPEN 'INV.STATS' TO INV.STATS ELSE STOP
OPEN 'INV.WHSE.LOC' TO INV.WHSE.LOC ELSE STOP
OPEN 'INV_RECP_WHSE' TO INV_RECP_WHSE ELSE STOP
OPEN 'INV_SERIAL' TO INV_SERIAL ELSE STOP
OPEN 'INV.JOB.STATS' TO INV.JOB.STATS ELSE STOP
OPEN 'EOM.CHECK' TO EOM.CHECK ELSE STOP
OPEN 'JOB.MATL' TO JOB.MATL ELSE STOP
IWH.LIST=''
IRW.LIST=''
SER.LIST=''
ERR.CNT=0
PROMPT''
MORE=1
LOOP
  READNEXT IWHID ELSE MORE = 0
WHILE MORE DO
  MATREADU IWH.REC FROM INV.WHSE, IWHID THEN
    IWH.LIST <-1> = IWHID
  END
REPEAT
IWH.CNT=DCOUNT(IWH.LIST,@AM)
IF IWH.CNT=0 THEN STOP
FOR W = 1 TO IWH.CNT
  IWH.ID = IWH.LIST<W>
  CONO=IWH.ID[1,3]
  PROD=FIELD(IWH.ID,"!",1)[4,15]
  WHSE=FIELD(IWH.ID,"!",2)
  TOT.IRW.OH=0
  TOT.IRW.RSVB=0
  TOT.IWLO.OH=0
  TOT.SER.OH=0
  TOT.IJS.RSVD=0
  SERLOC=''
  SERLOCQTY=''
  IWHLOC=''
  IWHLOCQTY=''
  IWHLOCWIP=''
  WIPLOC=''
  WIPLOCQTY=''
  ERR.LIST=''
  MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
    CMD='SSELECT INV_RECP_WHSE WITH PROD_WHSE_IDX = "':IWH.ID:'"'
    UDTEXECUTE CMD CAPTURING JUNK RETURNING MSG
    IF SYSTEM(11) > 0 THEN
      SELECT INV_RECP_WHSE TO IRW.LIST
      MORE=1
      LOOP
        READNEXT IRW.ID FROM IRW.LIST ELSE MORE = 0
      WHILE MORE DO
        MATREAD IRW.REC FROM INV_RECP_WHSE,IRW.ID THEN
          TOT.IRW.OH += IRW.CUR.QTY
          TOT.IRW.RSVB += IRW.RSVB.QTY
        END
      REPEAT
    END
    MORE=1
    CMD='SSELECT INV_SERIAL WITH CONO = "':CONO:'" AND WITH ISTK_PROD = "'
    CMD:=PROD:'" AND WITH ISTK_WHSE = "':WHSE:'"'
    CMD:= ' AND WITH ISTK_CUR_QTY > "0"'
    UDTEXECUTE CMD CAPTURING JUNK RETURNING SER.LIST
    IF SYSTEM(11) > 0 THEN
      SELECT INV_SERIAL TO SER.LIST
      MORES=1
      LOOP
        READNEXT SER.ID FROM SER.LIST ELSE MORES=0
      WHILE MORES DO
        MATREAD ISTK.REC FROM INV_SERIAL, SER.ID THEN
          TOT.SER.OH += ISTK.CUR.QTY
          LOCATE ISTK.LOC IN SERLOC<1>,1 SETTING SFND ELSE
            SERLOC<1,SFND> = ISTK.LOC
            SERLOCQTY<1,SFND> = 0
          END
          SERLOCQTY<1,SFND> += ISTK.CUR.QTY
        END
      REPEAT
    END
    MATREAD INV.STAT.REC FROM INV.STATS,IWH.ID THEN
      FOR J = 1 TO DCOUNT(ISTAT.JOB,@VM)
        MATREAD INV.JS.REC FROM INV.JOB.STATS, IWH.ID:"!":ISTAT.JOB<1,J> THEN
*DEBUG
          TOT.IJS.RSVD += IJS.JOB.QTY
          IF IJS.JMT.SEQ # '' THEN
            RCNT=DCOUNT(IJS.JMT.SEQ,@VM)
            JOBWIP=0
            FOR R = 1 TO RCNT
              SCNT=DCOUNT(IJS.JMT.SEQ<1,R>,@SVM)
              FOR S = 1 TO SCNT
                JMT.ID = CONO:ISTAT.JOB<1,J>:"!"
                JMT.ID:=OCONV(IJS.JMT.SEQ<1,R,S>,'G!2'):"!":PROD:"!":WHSE:"!"
                JMT.ID:=OCONV(IJS.JMT.SEQ<1,R,S>,'G2!1')
                MATREAD JMT.REC FROM JOB.MATL,JMT.ID THEN
                  IF SUM(JMT.WIP) > 0 THEN
                    LOCATE JMT.LOC IN WIPLOC<1>,1 SETTING JLOC ELSE
                      WIPLOC<1,-1> = JMT.LOC
                    END
                    LOCATE IJS.RECP.NO<1,R> IN JMT.PTR<1,1> SETTING PPTR THEN
                      WIPLOCQTY<1,JLOC> += JMT.PTR<1,2,PPTR>
                      JOBWIP+=JMT.PTR<1,2,PPTR>
                    END
                  END
                END
              NEXT S
            NEXT R
*           IF JOBWIP # IJS.JOB.USED THEN
*             CRT IWH.ID:"!":ISTAT.JOB<1,J>:' IJS USED = ':IJS.JOB.USED:' SUM JMT WIP = ':JOBWIP:;INPUT X
*           END
          END
        END ELSE MAT INV.JS.REC = ''
      NEXT J
    END ELSE MAT INV.JS.REC = ''
    FOR L = DCOUNT(IWH.LOC,@VM) TO 1 STEP -1
      IF IWH.LOC<1,L> # '' THEN
        MATREAD IWLO.REC FROM INV.WHSE.LOC,IWH.ID:"!":IWH.LOC<1,L> THEN
          TOT.IWLO.OH += IWLO.LOC.ON.HAND
*         IF IWLO.LOC.ON.HAND # 0 AND IWLO.LOC.ON.HAND # '' THEN
            LOCATE IWH.LOC<1,L> IN IWHLOC<1>,1 SETTING LFND ELSE
              IWHLOC<1,LFND> = IWH.LOC<1,L>
              IWHLOCQTY<1,LFND> = IWLO.LOC.ON.HAND
              IWHLOCWIP<1,LFND> = IWLO.LOC.INPRCS
            END
*         END
        END
      END ELSE
        DEL IWH.LOC<1,L>
      END
    NEXT L
*DEBUG
    IF TOT.IRW.OH # IWH.ON.HAND THEN
      ERR.LIST :='TOTAL IRW.CUR.QTY # IWH.ON.HAND':@AM
    END
    IF TOT.IRW.RSVB # (IWH.ON.HAND - IWH.RESV) THEN
      ERR.LIST := 'TOTAL IRW.RSVB.QTY # IWH.ON.HAND - IWH.RESV':@AM
    END
    IF TOT.SER.OH # IWH.ON.HAND THEN
      ERR.LIST :='TOTAL ISTK.CUR.QTY # IWH.ON.HAND':@AM
    END
    IF TOT.IWLO.OH # IWH.ON.HAND THEN
      ERR.LIST := 'TOTAL IWLO.ON.HAND # IWH.ON.HAND':@AM
    END
    IF TOT.IJS.RSVD # IWH.RESV+0 THEN
      ERR.LIST :='TOTAL IJS.JOB.QTY # IWH.RESV':@AM
    END
    FOR L = 1 TO DCOUNT(SERLOC<1>,@VM)
      LOCATE SERLOC<1,L> IN IWHLOC<1>,1 SETTING WL THEN
        IF SERLOCQTY<1,L> # IWHLOCQTY<1,WL> THEN
          ERR.LIST :='SER LOC ':SERLOC<1,L>:' QTY ':SERLOCQTY<1,L>:' NOT = IWLO QTY ':IWHLOCQTY<1,WL>:@AM
        END
      END ELSE
        ERR.LIST := 'CANNOT FIND SER LOC ':SERLOC<1,L>:' IN IWH LOC':@AM
      END
    NEXT L
    FOR L = 1 TO DCOUNT(WIPLOC<1>,@VM)
      MATREADU IWLO.REC FROM INV.WHSE.LOC,IWH.ID:"!":WIPLOC<1,L> ELSE
        MAT IWLO.REC = ''
      END
      LOCATE WIPLOC<1,L> IN IWHLOC<1>,1 SETTING WL THEN
        IF WIPLOCQTY<1,L> # IWHLOCWIP<1,WL> THEN
          ERR.LIST :='JMT LOC ':WIPLOC<1,L>:' WIP ':WIPLOCQTY<1,L>:' NOT = IWLO WIP ':IWHLOCWIP<1,WL>:@AM
        END
      END ELSE
        ERR.LIST := 'CANNOT FIND JMT LOC ':WIPLOC<1,L>:' IN IWH LOC':@AM
      END
      IF WIPLOCQTY<1,L>+0 # 0 THEN
        IWLO.LOC.INPRCS = WIPLOCQTY<1,L>
        MATWRITE IWLO.REC ON INV.WHSE.LOC,IWH.ID:"!":WIPLOC<1,L>
        LOCATE WIPLOC<1,L> IN IWH.LOC<1>,1 SETTING LLFND ELSE IWH.LOC<1,LLFND> = WIPLOC<1,L>
      END ELSE RELEASE INV.WHSE.LOC,IWH.ID:"!":WIPLOC<1,L>
    NEXT L
    MATWRITE IWH.REC ON INV.WHSE,IWH.ID
    IF ERR.LIST # '' THEN
      ERR.CNT += 1
      WRITE ERR.LIST ON EOM.CHECK, IWH.ID
    END
  END
NEXT W
IF ERR.CNT THEN
  CRT 'THERE WERE ':ERR.CNT:' ERRORS FOUND - CHECK EOM.CHECK FILE'
END ELSE
  CRT 'NO ERRORS FOUND'
END
