* CREATE A LIST OF INV.WHSE THAT NEED FIXING (SAVE.LIST AS "XID").
OPEN '','INV.WHSE' TO INV.WHSE ELSE STOP 'INV.WHSE'
OPEN '','INV_AUDIT_BAL' TO INV_AUDIT_BAL ELSE STOP 'INV_AUDIT_BAL'
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE STOP 'INV_AUDIT_HIST'
OPEN 'CONTROL' TO CONTROL ELSE STOP 'CONTROL'
*
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV_AUDIT_BAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>CPYLIB>CHAR
*
PRINT @(-1)
PRINT @(5,3):'ENTER COMPANY ':
INPUT CONO
IF CONO = 'END' THEN STOP
PRINT @(5,5):'ENTER CURRENT ICS PERIOD ':
INPUT PERIOD
IF PERIOD = 'END' THEN STOP
PRINT @(5,7):'ENTER BEGIN ICS PERIOD ':
INPUT BEG.PERIOD
IF BEG.PERIOD = 'END' THEN STOP
READ NUM.PERIODS FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
  NUM.PERIODS = 12
END
STPER = PERIOD[5,2]
YEAR = PERIOD[1,4]
IF STPER > 1 THEN
  STPER -= 1
END ELSE
  STPER = NUM.PERIODS
  YEAR -= 1
END
WHSE.LIST = ''
DIM TMP(13) ; MAT TMP=''
EQU TMP.PERIOD       TO TMP(1)
EQU TMP.BEG          TO TMP(2)
EQU TMP.BEG.AMT      TO TMP(3)
EQU TMP.RECV         TO TMP(4)
EQU TMP.RECV.AMT     TO TMP(5)
EQU TMP.SALE         TO TMP(6)
EQU TMP.SALE.AMT     TO TMP(7)
EQU TMP.SHRNK        TO TMP(8)
EQU TMP.SHRNK.AMT    TO TMP(9)
EQU TMP.TRAN.IN      TO TMP(10)
EQU TMP.TRAN.IN.AMT  TO TMP(11)
EQU TMP.TRAN.OUT     TO TMP(12)
EQU TMP.TRAN.OUT.AMT TO TMP(13)
XLIST = ''
UDTEXECUTE 'GET.LIST XID' CAPTURING JUNK
SELECT INV.WHSE TO XLIST
READSELECT IWH.LIST FROM XLIST ELSE
CRT 'LIST XID IS MISSING'
STOP
END
FOR WID = 1 TO DCOUNT(IWH.LIST,@AM)
   IWH.ID = IWH.LIST<WID>
   CRT 'PROCESSING ITEM ':WID "R#5":" INV WHSE ":IWH.LIST<WID>
   GOSUB FIX.DATA
NEXT WID
STOP
*
*************
FIX.DATA: 
*************
*
EBAL=0 ; EAMT=0; UCOST=0
RBAL=0 ; RAMT=0
MATREADU IWH.REC FROM INV.WHSE,IWH.ID THEN
   CMD = 'SSELECT INV_AUDIT_HIST WITH PROD_WHSE_IDX = "':IWH.ID:'" AND WITH INAH_PERIOD >= "':PERIOD:'"'
   UDTEXECUTE CMD CAPTURING MSG
*
   DONE=0
   LOOP
      READNEXT INAH.ID ELSE DONE=1
   UNTIL DONE DO
*     CONO=INAH.ID[1,3]
      MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
         EBAL+=INAH.QTY
         EAMT+=INAH.EXT.COST
*        IF INAH.TYPE = 'R' OR (INAH.TYPE = 'I' AND INAH.EXT.COST > '0') OR (INAH.TYPE='A' AND INAH.QTY > 0) THEN
         IF INAH.TYPE = 'R' OR (INAH.TYPE = 'I' AND INAH.EXT.COST > '0') OR INAH.TYPE = 'A' THEN
            RBAL += INAH.QTY
            RAMT += INAH.EXT.COST
         END
      END
   REPEAT
   IF RBAL # 0 THEN UCOST = RAMT / RBAL ELSE UCOST = 0
   MAT ITB.REC = ''
   ITB.BEG = IWH.ON.HAND - EBAL
   IF ITB.BEG < 0 THEN ITB.BEG = 0
   ITB.BEG.AMT = INT(ITB.BEG * UCOST)
   ITB.ID=IWH.ID:"!":PERIOD
   MATWRITE ITB.REC ON INV_AUDIT_BAL,ITB.ID
   LOCATE PERIOD IN IWH.BAL.PERIOD<1> BY "AR" SETTING PLOC ELSE NULL
   IWH.BAL.PERIOD<1,PLOC>=PERIOD
   IWH.BEG.QTY<1,PLOC>=ITB.BEG
   IWH.BEG.AMT<1,PLOC>=ITB.BEG.AMT
   CPER.QTY = ITB.BEG
   CPER.AMT = ITB.BEG.AMT
   MATWRITE IWH.REC ON INV.WHSE,IWH.ID
END ELSE RELEASE INV.WHSE, IWH.ID; GOTO 999
IF BEG.PERIOD < PERIOD THEN
   CMD = 'SSELECT INV_AUDIT_HIST BY INAH_PERIOD WITH PROD_WHSE_IDX = "':IWH.ID:'" AND WITH INAH_PERIOD >= "':BEG.PERIOD:'" AND WITH INAH_PERIOD < "':PERIOD:'"'
   UDTEXECUTE CMD CAPTURING MSG
  *
   DONE=0; OLD.PERIOD='@@@@@@'; CNT=0
   MAT TMP = ''
   LOOP
      READNEXT INAH.ID ELSE DONE=1
   UNTIL DONE DO
      MATREAD INAH.REC FROM INV_AUDIT_HIST, INAH.ID THEN
         IF OLD.PERIOD#INAH.PERIOD THEN
            CNT+=1
            TMP.PERIOD<1,CNT>=INAH.PERIOD
            OLD.PERIOD=INAH.PERIOD
         END
         BEGIN CASE
            CASE INAH.TYPE = "R"
               TMP.RECV<1,CNT>+=INAH.QTY
               TMP.RECV.AMT<1,CNT>+=INAH.EXT.COST
            CASE INAH.TYPE = "S"
               TMP.SALE<1,CNT>+=INAH.QTY
               TMP.SALE.AMT<1,CNT>+=INAH.EXT.COST
            CASE INAH.TYPE = "A"
               TMP.SHRNK<1,CNT>+=INAH.QTY
               TMP.SHRNK.AMT<1,CNT>+=INAH.EXT.COST
            CASE INAH.TYPE = "I"
               TMP.TRAN.IN<1,CNT>+=INAH.QTY
               TMP.TRAN.IN.AMT<1,CNT>+=INAH.EXT.COST
            CASE INAH.TYPE = "O"
               TMP.TRAN.OUT<1,CNT>+=INAH.QTY
               TMP.TRAN.OUT.AMT<1,CNT>+=INAH.EXT.COST
         END CASE
      END
   REPEAT
   YRS=YEAR-BEG.PERIOD[1,4] + 1
*   DEBUG
   FOR YR = 1 TO YRS
      IF YR > 1 THEN
        STPER = NUM.PERIODS
        YEAR -= 1
      END
      FOR X = STPER TO 1 STEP -1
         TEMP.PERIOD = YEAR:X'R%2'
         LOCATE TEMP.PERIOD IN TMP.PERIOD<1>,1 BY 'AR' SETTING CNT ELSE
            INS TEMP.PERIOD BEFORE TMP.PERIOD<1,CNT>
            INS '' BEFORE TMP.BEG<1,CNT>
            INS '' BEFORE TMP.BEG.AMT<1,CNT>
            INS '' BEFORE TMP.RECV<1,CNT>
            INS '' BEFORE TMP.RECV.AMT<1,CNT>
            INS '' BEFORE TMP.SALE<1,CNT>
            INS '' BEFORE TMP.SALE.AMT<1,CNT>
            INS '' BEFORE TMP.SHRNK<1,CNT>
            INS '' BEFORE TMP.SHRNK.AMT<1,CNT>
            INS '' BEFORE TMP.TRAN.IN<1,CNT>
            INS '' BEFORE TMP.TRAN.IN.AMT<1,CNT>
            INS '' BEFORE TMP.TRAN.OUT<1,CNT>
            INS '' BEFORE TMP.TRAN.OUT.AMT<1,CNT>
         END
      NEXT X
   NEXT YR
   PER.CNT=DCOUNT(TMP.PERIOD,VM)
* LST.PER=PERIOD
   FOR PP = PER.CNT TO 1 STEP -1
      MAT ITB.REC=''
      ITB.ID=IWH.ID:"!":TMP.PERIOD<1,PP>
*   IF TMP.PERIOD<1,PP> = LST.PER-1 THEN
      ITB.RECV=TMP.RECV<1,PP>
      ITB.RECV.AMT=TMP.RECV.AMT<1,PP>
      ITB.SALE=TMP.SALE<1,PP>
      ITB.SALE.AMT=TMP.SALE.AMT<1,PP>
      ITB.SHRNK=TMP.SHRNK<1,PP>
      ITB.SHRNK.AMT=TMP.SHRNK.AMT<1,PP>
      ITB.TRAN.IN=TMP.TRAN.IN<1,PP>
      ITB.TRAN.IN.AMT=TMP.TRAN.IN.AMT<1,PP>
      ITB.TRAN.OUT=TMP.TRAN.OUT<1,PP>
      ITB.TRAN.OUT.AMT=TMP.TRAN.OUT.AMT<1,PP>
*   END
      ITB.BEG=CPER.QTY-ITB.RECV-ITB.SALE-ITB.SHRNK-ITB.TRAN.IN-ITB.TRAN.OUT
      ITB.BEG.AMT=CPER.AMT-ITB.RECV.AMT-ITB.SALE.AMT-ITB.SHRNK.AMT-ITB.TRAN.IN.AMT-ITB.TRAN.OUT.AMT
      CPER.QTY=ITB.BEG
      CPER.AMT=ITB.BEG.AMT
*   LST.PER = TMP.PERIOD<1,PP>
      MATWRITE ITB.REC ON INV_AUDIT_BAL,ITB.ID
*  END
   NEXT PP
END
999 *
RETURN
