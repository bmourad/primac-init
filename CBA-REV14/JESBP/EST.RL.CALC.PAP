SUBROUTINE EST.RL.CALC.PAP (CONO, ACTION)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RL.CALC.PAP
*
* AUTHOR   - STRAKA, VERCOM SOFTWARE
*
* DATE     - 04/18/91
*
* DESCRIPTION
*
* This program is used to re-calculate roll paper pricing
*
*T25740 epitka 11/30/2001 * REV12
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.BIND.SPOIL
*COPY>JES.CPYLIB>ESTIMATE.PRESS.SPOIL
*COPY>JES.CPYLIB>ESTIMATE.RL
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
IF FILEINFO(WAREHOUSE,0)=0 THEN        
  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
    ERRMSG='WAREHOUSE FILE IS MISSING' 
    GOSUB 93000                        
  END                                  
END                                    
*
*---- MAIN PROCESSING
*
PRICE.FLAG = CO.JES.PARAM<1,11>
IF PRICE.FLAG = "" THEN PRICE.FLAG = "X"
QQTY=DCOUNT(EST.QTY,VM)
UCNT=DCOUNT(EST.PROD.OS.USAGE,VM)
FOR COMP=1 TO UCNT
  PCNT=DCOUNT(EST.PROD.OS.PROD<1,COMP>,SVM)
  FOR MPTR=1 TO PCNT
    MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"R":EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE MAT ESTM.REC=""
    LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MP ELSE MP=1
    FOR Y=1 TO QQTY
      GOSUB 1000
      TOT.MSI=INT(((EST.PROD.OS.WIDTH<1,COMP,MPTR>*TOT.PC)/1000000)+.9)
      INV.ID=EST.PROD.INV.ID<1,COMP,MPTR>
      IF PRICE.FLAG # "X" AND INV.ID # "" THEN
        GOSUB 2000
      END ELSE
        PRICE.BRK.COUNT=DCOUNT(ESTM.END.QTY<1,MP>,SVM)
        FLG=0
        FOR X=1 TO PRICE.BRK.COUNT UNTIL FLG
          TEST.QTY=ESTM.END.QTY<1,MP,X>
          IF TOT.MSI <= TEST.QTY THEN
            UNIT.PR=ESTM.QCOST<1,MP,X>
            FLG=1
          END
        NEXT X
        IF NOT(FLG) THEN
          UNIT.PR=ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
        END
      END
      MACRO REPVAL;EST.RL.TOTAL.PC<1,COMP,MPTR>;"!";Y;INT(TOT.PC)
      MACRO REPVAL;EST.RL.PAP.MSI<1,COMP,MPTR>;"!";Y;TOT.MSI
      IF UNIT.PR # "" THEN
        MACRO REPVAL;EST.RL.PAP.PRICE<1,COMP,MPTR>;"!";Y;UNIT.PR
      END
    NEXT Y
    PLC=DCOUNT(EST.RL.PAP.MSI<1,COMP,MPTR>,"!")
    FOR X=PLC TO QQTY+1 STEP -1
      MACRO DELVAL;EST.RL.TOTAL.PC<1,COMP,MPTR>;"!";X
      MACRO DELVAL;EST.RL.PAP.MSI<1,COMP,MPTR>;"!";X
      MACRO DELVAL;EST.RL.PAP.PRICE<1,COMP,MPTR>;"!";X
    NEXT X
  NEXT MPTR
  MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"R":EST.RL.LAM.USAGE<1,COMP,1> ELSE MAT ESTM.REC=""
  LOCATE EST.RL.LAM.PROD<1,COMP,1> IN ESTM.PROD<1>,1 SETTING MP ELSE MP=1
  FOR Y=1 TO QQTY
    GOSUB 1000
    TOT.MSI=INT(((EST.RL.LAM.WIDTH<1,COMP,1>*TOT.PC)/1000000)+.9)
    INV.ID=EST.RL.LAM.INV<1,COMP,MPTR>
    IF PRICE.FLAG # "X" AND INV.ID # "" THEN
      GOSUB 2000
    END ELSE
      PRICE.BRK.COUNT=DCOUNT(ESTM.END.QTY<1,MP>,SVM)
      FLG=0
      FOR X=1 TO PRICE.BRK.COUNT UNTIL FLG
        TEST.QTY=ESTM.END.QTY<1,MP,X>
        IF TOT.MSI <= TEST.QTY THEN
          UNIT.PR=ESTM.QCOST<1,MP,X>
          FLG=1
        END
      NEXT X
      IF NOT(FLG) THEN
        UNIT.PR=ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
      END
    END
    MACRO REPVAL;EST.RL.LAM.MSI<1,COMP,1>;"!";Y;TOT.MSI
    IF UNIT.PR # "" THEN
      MACRO REPVAL;EST.RL.LAM.PRICE<1,COMP,1>;"!";Y;UNIT.PR
    END
  NEXT Y
  PLC=DCOUNT(EST.RL.LAM.MSI<1,COMP,1>,"!")
  FOR X=PLC TO QQTY+1 STEP -1
    MACRO DELVAL;EST.RL.LAM.MSI<1,COMP,1>;"!";X
    MACRO DELVAL;EST.RL.LAM.PRICE<1,COMP,1>;"!";X
  NEXT X
NEXT COMP
GOTO 99999
*
*---- EQUATIONS TO CALCULATE MSI
*
1000 *
IF EST.RL.DIE.REPEAT<1,COMP,1> # "" AND EST.RL.DIE.NO.ACR<1,COMP,1> # "" AND EST.RL.DIE.NO.ARD<1,COMP,1> # "" THEN
  EQTY = EST.QTY<1,Y>
  IF NUM(EST.PROD.BIND.SPOIL<1,COMP,1>) THEN
    FIN.SPOIL = EQTY*EST.PROD.BIND.SPOIL<1,COMP,1>/100
  END ELSE
    MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL,CONO:EST.PROD.BIND.SPOIL<1,COMP,1> ELSE MAT BST.REC=""
    LOCATE EQTY IN BST.QTY<1>,1 BY "AR" SETTING BP ELSE NULL
    BEGIN CASE
      CASE BP = 1
        BSPCT = BST.PCT<1,BP>
      CASE BP > COUNT(BST.QTY,VM) + 1
        BSPCT = BST.PCT<1,BP-1>
      CASE BST.EXTR = "Y"
        BSPCT = INT(BST.PCT<1,BP>-(BST.QTY<1,BP>-EQTY)/(BST.QTY<1,BP>-BST.QTY<1,BP-1>)*(BST.PCT<1,BP>-BST.PCT<1,BP-1>)+0.5)
      CASE 1
        BSPCT = BST.PCT<1,BP>
    END CASE
    FIN.SPOIL = INT(EQTY*(BSPCT/10000)+0.99)
    IF FIN.SPOIL < BST.MIN.QTY THEN FIN.SPOIL = BST.MIN.QTY
  END
  VAR1 = EST.PROD.INIT.MR.CNT<1,COMP,1>*EST.PROD.INIT.MR.IMP<1,COMP,1>
  VAR2 = EST.PROD.SUBS.MR.CNT<1,COMP,1>*EST.PROD.SUBS.MR.IMP<1,COMP,1>
  MR.PC = VAR1 + VAR2
  VAR1 = EST.RL.DIE.REPEAT<1,COMP,1>/10000
  VAR2 = EST.RL.DIE.NO.ACR<1,COMP,1>*EST.RL.DIE.NO.ARD<1,COMP,1>
  BASE.PC = INT(EQTY/VAR2*VAR1/10+0.99)
  FIN.PC = INT(FIN.SPOIL/VAR2*VAR1/10+0.99)
  RUN.PC = BASE.PC + FIN.PC
  IF NUM(EST.PROD.PRESS.SPOIL<1,COMP,1>) THEN
    PR.SPOIL.PC = RUN.PC*EST.PROD.PRESS.SPOIL<1,COMP,1>/100
  END ELSE
    MATREAD PST.REC FROM ESTIMATE.PRESS.SPOIL,CONO:EST.PROD.PRESS.SPOIL<1,COMP,1> ELSE MAT PST.REC=""
    LOCATE RUN.PC IN PST.QTY<1>,1 BY "AR" SETTING P ELSE NULL
    BEGIN CASE
      CASE P = 1
        PSPCT = PST.PCT<1,P>
      CASE P > COUNT(PST.QTY,VM) + 1
        PSPCT = PST.PCT<1,P-1>
      CASE PST.EXTR = "Y"
        PSPCT = INT(PST.PCT<1,P>-(PST.QTY<1,P>-RUN.PC)/(PST.QTY<1,P>-PST.QTY<1,P-1>)*(PST.PCT<1,P>-PST.PCT<1,P-1>)+0.5)
      CASE 1
        PSPCT = PST.PCT<1,P>
    END CASE
    PR.SPOIL.PC = INT(RUN.PC*PSPCT/10000+0.99)
  END
  TOT.PC = MR.PC + RUN.PC + PR.SPOIL.PC
END ELSE
  TOT.PC=0
END
RETURN
*
*---- GET INVENTORY PRICE
*
2000 *
ICOST = ""
MATREAD INV.REC FROM INVENTORY, CONO:INV.ID ELSE
  MAT INV.REC = ""
END
WCNT = DCOUNT(INV.WHSE.CODE,VM)
FOR WP = 1 TO WCNT
  WHSE = INV.WHSE.CODE<1,WP>
  IWH.ID = CONO:INV.ID:"!":WHSE
  MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE
    MAT IWH.REC = ""
  END
  SCOST = ""
  BEGIN CASE
    CASE PRICE.FLAG = "L"
      IF IWH.LIST.COST # "" THEN
        SCOST = IWH.LIST.COST
      END
    CASE PRICE.FLAG = "A"
      IF IWH.AVG.COST # "" THEN
        SCOST = IWH.AVG.COST
      END
    CASE PRICE.FLAG = "S"
      IF IWH.STD.COST # "" THEN
        SCOST = IWH.STD.COST
      END
    CASE PRICE.FLAG = "R"
      DIV.POS='' ; FISCAL.FLAG='IC' ; TRAN.PERIOD=''
      CALL GET.LAST.COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
      BEGIN CASE
        CASE ERR.FLG=''
          SCOST=LAST.PRICE
        CASE ERR.FLG="-1"
          GOSUB 90000
          CONTINUE
        CASE ERR.FLG='-2'
          GOSUB 93000
      END CASE
  END CASE
  BEGIN CASE
    CASE SCOST = ""
    CASE ICOST = ""
      ICOST = SCOST
    CASE SCOST > ICOST
      ICOST = SCOST
  END CASE
NEXT WP
UNIT.PR = ICOST
RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
RETURN
END
