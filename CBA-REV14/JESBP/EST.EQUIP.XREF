   SUBROUTINE EST.EQUIP.XREF (CONO, XTYPE, XFILE1, XFILE2, XCODE)
*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.EQUIP.XREF
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 05/23/89
*
* DESCRIPTION
*
* This program is used to display the requested cost center codes
* for selection. The equipment type is specified by XTYPE. XFILE1 is
* the EQUIPMENT file and XFILE2 is the COST.CNTR file.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21177 diane 11/15/1996 * CHANGE SYSCOM_STD TO SYSCOM
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
   OPEN "","TCC" TO TCC THEN
      PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
*         READ CRTMODE FROM TCC, PORT.NO THEN
*            CRTMODE = CRTMODE<6>
      CRTMODE = ""
      CALL GET.CRTMODE(CRTMODE)
      BEGIN CASE
         CASE CRTMODE = "termulator"
            CALL EST_EQPXRF_TU(CONO, XTYPE, XFILE1, XFILE2, XCODE)
            GOTO 99999
      END CASE
*         END
   END
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- INITIALIZATION
*
   TYP = 0
   CALL EDIT.SUB1 (MAT EDIT.COM)
   DASHES = STR("-",80)
   FIRST.LINE = 4
   LINE.COUNT = 16
   LINE.SPACE = 1
   LAST.LINE = FIRST.LINE + (LINE.COUNT * LINE.SPACE) - 1
   LINE.CNT = 0
   REF.NO = ""
   CURR.REF.NO = ""
   XCODE = ""
*
*---- MAIN PROCESSING
*
100*
   CODELEN = 4
   DESCLEN = 15
   PDESCLEN = 0
   XREF.CODE = ""
   XREF.DESC = ""
   ICNT = 0
   SELECT XFILE1
120*
   READNEXT ID ELSE GOTO 140
   IF CONO = "" THEN
      CODE = ID
   END ELSE
      IF ID[1,3] # CONO THEN GOTO 120
      CODE = ID[4,99]
   END
   IF XTYPE # "" THEN
      READV ETYPE FROM XFILE1, ID,1 ELSE GOTO 120
      LOCATE ETYPE IN XTYPE<1>,1 SETTING P ELSE GOTO 120
   END
   ICNT = ICNT + 1
   IF ICNT > 999 THEN GOTO 120
   IF LEN(CODE) > CODELEN THEN CODELEN = LEN(CODE)
   LOCATE CODE IN XREF.CODE<1>,1 BY "AL" SETTING P ELSE NULL
   XREF.CODE = INSERT(XREF.CODE,1,P,0,CODE)
   GOTO 120
140*
   GOSUB 80000
   LINE.CNT = DCOUNT(XREF.CODE,VM)
   REF.NO = 1
   CURR.REF.NO = ""
   GOSUB 50000
   IF ICNT > 999 THEN
      ERRMSG = "Maximum allowable entries exceeded. "
      GOSUB 91000
   END
*
*---- GET OPERATOR REPLY
*
500*
   TYP = 1
   X = 0; Y = 21
   MAXL = 3
   PMSG = "Enter Selection, (S)croll or (E)xit"
   CALL EDIT.SUB1 (MAT EDIT.COM)
   OPT = VALUE
510*
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE NUM(OPT)
         IF OPT < CURR.REF.NO OR OPT > LINE.CNT OR OPT > CURR.REF.NO+LINE.COUNT-1 THEN
            ERRMSG = "Invalid selection. Try again! "
            GOSUB 91000
            GOTO 500
         END
         XCODE = XREF.CODE<1,OPT>
         GOTO 99999
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
   END CASE
   GOTO 500
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000*
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   REF = START.REF.NO
*
   XPTR = 1
   XREF.DESC = ""
   LOOP
   UNTIL REF > LINE.CNT OR XPTR > LINE.COUNT DO
      READV DESC FROM XFILE2, CONO:XREF.CODE<1,REF>,1 ELSE DESC = ""
      IF TRIM(DESC<1,2>) = "" THEN
         XREF.DESC<1,XPTR> = DESC<1,1>
      END ELSE
         XREF.DESC<1,XPTR> = DESC<1,1>:" ":DESC<1,2>
      END
      IF LEN(DESC) > DESCLEN THEN DESCLEN = LEN(DESC)
      XPTR = XPTR + 1
      REF = REF + 1
   REPEAT
   IF DESCLEN > PDESCLEN THEN GOSUB 80100
*
   REF = START.REF.NO
   XPTR = 1
   FOR Y = FIRST.LINE TO LAST.LINE STEP LINE.SPACE
      IF REF > LINE.CNT THEN
         FOR YY = Y TO Y + LINE.SPACE - 1
            P_X  = 0 ; P_Y = Y ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         NEXT YY
      END ELSE
         SLINE = REF "R#3"
         SLINE = SLINE : SPX : XREF.CODE<1,REF> CODEFMT
         SLINE = SLINE : SPX : XREF.DESC<1,XPTR> DESCFMT
         P_X  = 0 ; P_Y = Y ; P_VALUE = SLINE ; P_OPT = ""
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         REF = REF + 1
         XPTR = XPTR + 1
      END
   NEXT Y
   RETURN
*
*---- DISPLAY SCREEN FORMAT
*
80000*
   HD = "EQUIPMENT" : " SELECTION"
   HD1A = HD[1,1]
   FOR CP = 2 TO LEN(HD)
      HD1A = HD1A : " " : HD[CP,1]
   NEXT CP
   HD1A = (SPACE((80-LEN(HD1A))/2) : HD1A)"L#80"
   HD1 = HD1A
*
   SCRN = CS
   SCRN = SCRN : @(0,0) : HD1
   SCRN = SCRN : @(0,1) : DASHES
   SCRN = SCRN : @(0,20) : DASHES
   SCRN = SCRN : @(0,22) : DASHES
   P_X  = 0 ; P_Y = 23 ; P_VALUE = SCRN ; P_OPT = ""
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
*---- DISPLAY SUB-HEADINGS
*
80100*
   PDESCLEN = DESCLEN
   TLEN = 3 + CODELEN + DESCLEN
   BEGIN CASE
      CASE TLEN <= 74
         SPX = SPACE(3)
      CASE TLEN <= 76
         SPX = SPACE(2)
      CASE TLEN <= 78
         SPX = SPACE(1)
      CASE 1
         SPX = SPACE(1)
         DESCLEN = (80-3-1-CODELEN-1)
   END CASE
   SH1A = "Ln#"
   CODEFMT = "L#" : CODELEN
   SH1B = (SPACE((CODELEN-4)/2) : "Code")CODEFMT
   DESCFMT = "L#" : DESCLEN
   SH1C = (SPACE((DESCLEN-11)/2) : "Description")DESCFMT
   SH1 = SH1A : SPX : SH1B : SPX : SH1C
   SH2A = "---"
   SH2B = STR("-",CODELEN)
   SH2C = STR("-",DESCLEN)
   SH2 = SH2A : SPX : SH2B : SPX : SH2C
*
   SCRN = ""
   SCRN = SCRN : @(0,2) : SH1
   SCRN = SCRN : @(0,3) : SH2
   P_X  = 0 ; P_Y = 23 ; P_VALUE = SCRN ; P_OPT = ""
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
*---- ERROR ROUTINE
91000 *
*      ERR.TYPE = 1;CALL SYSCOM_STD(MAT SYSCOM.REC); RETURN
   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
*
*---- END OF PROGRAM
*
99999*
   RETURN
END
