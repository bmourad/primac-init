      SUBROUTINE EST.PROD.MULTI.QTY (CONO, ACTION, EST.KEY, COMP, STATUS)
*********************************************************************
*
* REVISION - [08.0]
*
* PROGRAM  - EST.PROD.MULTI.QTY
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/28/87
*
* DESCRIPTION
*
* Yhis program is used to maintain the different quantities to be produced
* for the various bindery operation.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      SCREEN DEFINE;EST.PROD.MULTI.QTY
      SCREEN FORMAT
      QCNT = DCOUNT(EST.QTY,VM)
      IF QCNT > 3 THEN QCNT = 3
*
*---- MAIN PROCESSING
*
100*
      GOSUB 80000
*
*---- GET OPERATOR REPLY
*
500*
      SCREEN FIELD;;21
      SCREEN INPUT;;21
      OPT = S$VALUE
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         FOR QPTR = 1 TO QCNT
            TOT.QTY = 0
            FOR BT = 1 TO 3
               TOT.QTY = TOT.QTY + FIELD(EST.BOOK.BIND.QTY<1,COMP,BT>,"!",QPTR)
            NEXT BT
            IF TOT.QTY # EST.QTY<1,QPTR> THEN
               ERRMSG = "Invalid quantity breakdown. Try again! "
               GOSUB 90000
               GOTO 500
            END
         NEXT QPTR
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010,1020,1030
      END CASE
      GOTO 500
*
*---- GET FIELD 1
*
1010*
      S$VAL = 1
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      OCCURR = 1
      MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,1>;"!";OCCURR;S$VALUE
      IF QCNT >= 2 THEN
         S$VAL = 1
         SCREEN FIELD;;12
         SCREEN INPUT;;12;RETURN
         OCCURR = 2
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,1>;"!";OCCURR;S$VALUE
      END
      IF QCNT >= 3 THEN
         S$VAL = 1
         SCREEN FIELD;;13
         SCREEN INPUT;;13;RETURN
         OCCURR = 3
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,1>;"!";OCCURR;S$VALUE
      END
1015*
      S$DATA(14)<S$SCR,1> = EST.BOOK.BIND.SPOIL<1,COMP,1>
      S$VAL = 1
      SCREEN FIELD;;14
      SCREEN INPUT;;14;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         READV REC FROM ESTIMATE.BIND.SPOIL,CONO:S$VALUE,1 ELSE
            ERRMSG = "Invalid spoilage table. Try again! "
            GOSUB 90000
            GOTO 1015
         END
      END
      EST.BOOK.BIND.SPOIL<1,COMP,1> = S$VALUE
      RETURN
*
*---- GET FIELD 2
*
1020*
      S$VAL = 2
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      OCCURR = 1
      MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,2>;"!";OCCURR;S$VALUE
      IF QCNT >= 2 THEN
         S$VAL = 2
         SCREEN FIELD;;12
         SCREEN INPUT;;12;RETURN
         OCCURR = 2
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,2>;"!";OCCURR;S$VALUE
      END
      IF QCNT >= 3 THEN
         S$VAL = 2
         SCREEN FIELD;;13
         SCREEN INPUT;;13;RETURN
         OCCURR = 3
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,2>;"!";OCCURR;S$VALUE
      END
1025*
      S$DATA(14)<S$SCR,2> = EST.BOOK.BIND.SPOIL<1,COMP,2>
      S$VAL = 2
      SCREEN FIELD;;14
      SCREEN INPUT;;14;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         READV REC FROM ESTIMATE.BIND.SPOIL,CONO:S$VALUE,1 ELSE
            ERRMSG = "Invalid spoilage table. Try again! "
            GOSUB 90000
            GOTO 1025
         END
      END
      EST.BOOK.BIND.SPOIL<1,COMP,2> = S$VALUE
      RETURN
*
*---- GET FIELD 3
*
1030*
      S$VAL = 3
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      OCCURR = 1
      MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,3>;"!";OCCURR;S$VALUE
      IF QCNT >= 2 THEN
         S$VAL = 3
         SCREEN FIELD;;12
         SCREEN INPUT;;12;RETURN
         OCCURR = 2
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,3>;"!";OCCURR;S$VALUE
      END
      IF QCNT >= 3 THEN
         S$VAL = 3
         SCREEN FIELD;;13
         SCREEN INPUT;;13;RETURN
         OCCURR = 3
         MACRO REPVAL;EST.BOOK.BIND.QTY<1,COMP,3>;"!";OCCURR;S$VALUE
      END
1035*
      S$DATA(14)<S$SCR,3> = EST.BOOK.BIND.SPOIL<1,COMP,3>
      S$VAL = 3
      SCREEN FIELD;;14
      SCREEN INPUT;;14;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         READV REC FROM ESTIMATE.BIND.SPOIL,CONO:S$VALUE,1 ELSE
            ERRMSG = "Invalid spoilage table. Try again! "
            GOSUB 90000
            GOTO 1035
         END
      END
      EST.BOOK.BIND.SPOIL<1,COMP,3> = S$VALUE
      RETURN
*
*---- LOAD SCREEN DATA
*
80000*
      FOR Q = 4 TO QCNT+1 STEP -1
         MACRO DELVAL;EST.BOOK.BIND.QTY<1,COMP,1>;"!";Q
         MACRO DELVAL;EST.BOOK.BIND.REQ<1,COMP,1>;"!";Q
         MACRO DELVAL;EST.BOOK.BIND.QTY<1,COMP,2>;"!";Q
         MACRO DELVAL;EST.BOOK.BIND.REQ<1,COMP,2>;"!";Q
         MACRO DELVAL;EST.BOOK.BIND.QTY<1,COMP,3>;"!";Q
         MACRO DELVAL;EST.BOOK.BIND.REQ<1,COMP,3>;"!";Q
      NEXT Q
      S$DATA(1)<S$SCR> = DATE()
      S$DATA(2)<S$SCR> = EST.KEY
      S$DATA(7)<S$SCR> = EST.QTY<1,1>
      S$DATA(8)<S$SCR> = EST.QTY<1,2>
      S$DATA(9)<S$SCR> = EST.QTY<1,3>
      S$DATA(11)<S$SCR,1> = FIELD(EST.BOOK.BIND.QTY<1,COMP,1>,"!",1)
      S$DATA(12)<S$SCR,1> = FIELD(EST.BOOK.BIND.QTY<1,COMP,1>,"!",2)
      S$DATA(13)<S$SCR,1> = FIELD(EST.BOOK.BIND.QTY<1,COMP,1>,"!",3)
      S$DATA(14)<S$SCR,1> = EST.BOOK.BIND.SPOIL<1,COMP,1>
      S$DATA(11)<S$SCR,2> = FIELD(EST.BOOK.BIND.QTY<1,COMP,2>,"!",1)
      S$DATA(12)<S$SCR,2> = FIELD(EST.BOOK.BIND.QTY<1,COMP,2>,"!",2)
      S$DATA(13)<S$SCR,2> = FIELD(EST.BOOK.BIND.QTY<1,COMP,2>,"!",3)
      S$DATA(14)<S$SCR,2> = EST.BOOK.BIND.SPOIL<1,COMP,2>
      S$DATA(11)<S$SCR,3> = FIELD(EST.BOOK.BIND.QTY<1,COMP,3>,"!",1)
      S$DATA(12)<S$SCR,3> = FIELD(EST.BOOK.BIND.QTY<1,COMP,3>,"!",2)
      S$DATA(13)<S$SCR,3> = FIELD(EST.BOOK.BIND.QTY<1,COMP,3>,"!",3)
      S$DATA(14)<S$SCR,3> = EST.BOOK.BIND.SPOIL<1,COMP,3>
*
      SCREEN DISPLAY;;ALL
      S$VAL = 1
      S$CNT = 3
      SCREEN MULTI;;C;11;12;13;14
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
      SCREEN CLEAR;;D
      RETURN
   END
