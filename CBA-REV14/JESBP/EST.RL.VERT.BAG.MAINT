*COPY>CPYLIB>SCOMMON1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - RES.BP
* PROGRAM     - EST.RL.VERT.BAG.MAINT
* BY          - KERRY WILSON
* DATE        - 02/05/90
* DESCRIPTION - This program maintains the Vertical Bagger.
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SET SYSCOM
*
  SYS.TYPE=1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN 'EQUIPMENT' TO EQUIPMENT ELSE
    ERRMSG = 'CANNOT OPEN EQUIPMENT FILE'
    GOTO 93000
  END
  OPEN 'COST.CNTR' TO COST.CNTR ELSE
    ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
    GOTO 93000
  END
  OPEN 'COMPANY' TO COMPANY ELSE
    ERRMSG = 'CANNOT OPEN COMPANY FILE'
    GOTO 93000
  END
  OPEN 'CONTROL' TO CONTROL ELSE
    ERRMSG = 'CANNOT OPEN CONTROL FILE'
    GOTO 93000
  END
  OPEN 'JES.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'CANNOT OPEN JES.SCREENS FILE'
    GOTO 93000
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.RL.VERT.BAG.MAINT
  SCREEN FORMAT
*
*---- MAIN PROCESSING
*
100 *
  CURR.REF.NO = ''
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  SCREEN FIELD;;2
  SCREEN INPUT;;2
  IF S$VALUE = 'END' THEN GOTO 99999
  EQKEY = CONO:S$VALUE
  NEW.REC = 0
  MATREAD CCTR.REC FROM COST.CNTR, EQKEY ELSE
    ERRMSG = "Item must be a valid cost center"
    GOSUB 91000
    GOTO 100
  END
  * T26126 v
  MATREADU EQUIPMENT.REC FROM EQUIPMENT,EQKEY LOCKED
    ERRMSG = 'VERTICAL BAGGER record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 100 
  END ELSE
  * T26126 ^
    MAT EQUIPMENT.REC = ''
    NEW.REC = 1
  END
  IF EQP.TYPE # "" AND EQP.TYPE # "44" THEN
    RELEASE
    ERRMSG = "Item has already been defined as other than vertical bagger equipment"
    GOSUB 91000
    GOTO 100
  END
  EQP.TYPE = 44
  IF NEW.REC THEN
    S$DATA(27)<S$SCR> = CCTR.DESC
    SCREEN DISPLAY;;27
    FOR FLD = 1 TO 2
      ON FLD GOSUB 10100,10200
      IF S$VALUE = 'END' THEN 
        SCREEN CLEAR
        RELEASE
        GOTO 100
      END
    NEXT FLD
  END ELSE
    GOSUB 80000
    SCREEN DISPLAY;;ALL
  END
*
*---- ENTER PROMPT
*
500 *
  SCREEN FIELD;;21
  SCREEN INPUT;;21
  OPTION = S$VALUE
  BEGIN CASE
    CASE NUM(OPTION)
      ON OPTION GOSUB 10100,10200
    CASE OPTION = 'D'
510 *
* P_X  = 0 ; P_Y = 23 ; P_VALUE = 'Are you sure you want to Delete (Y/N)? ' ; P_OPT = ""
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*          INPUT ANS:
* P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      SCREEN FIELD;;7
      SCREEN INPUT;;7
      BEGIN CASE
        CASE S$VALUE = 'Y'
          DELETE EQUIPMENT,EQKEY
          SCREEN CLEAR
          RELEASE
          GOTO 100
        CASE S$VALUE = 'N'
          GOTO 500
        CASE 1
          GOTO 510
      END CASE
    CASE OPTION = 'E' OR OPTION = 'END'
      SCREEN CLEAR
      RELEASE
      GOTO 100
    CASE OPTION = 'F'
      MATWRITE EQUIPMENT.REC ON EQUIPMENT,EQKEY
      SCREEN CLEAR
      RELEASE
      GOTO 100
  END CASE
  GOTO 500
*
*---- REPEAT
*
10100 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  EQP.BAGGER.REPEAT.MIN = S$VALUE
  S$DATA(3)<S$SCR> = EQP.BAGGER.REPEAT.MIN
  SCREEN FIELD;;25
  SCREEN INPUT;;25;RETURN
  EQP.BAGGER.REPEAT.MAX = S$VALUE
  S$DATA(25)<S$SCR> = EQP.BAGGER.REPEAT.MAX
  RETURN
*
*---- WIDTH
*
10200 *
  SCREEN FIELD;;31
  SCREEN INPUT;;31;RETURN
  EQP.BAGGER.WIDTH.MIN = S$VALUE
  S$DATA(31)<S$SCR> = EQP.BAGGER.WIDTH.MIN
  SCREEN FIELD;;35
  SCREEN INPUT;;35;RETURN
  EQP.BAGGER.WIDTH.MAX = S$VALUE
  S$DATA(35)<S$SCR> = EQP.BAGGER.WIDTH.MAX
  RETURN
*
*---- LOAD SCREEN
*
80000 *
  S$DATA(3)<S$SCR> = EQP.BAGGER.REPEAT.MIN
  S$DATA(25)<S$SCR> = EQP.BAGGER.REPEAT.MAX
  S$DATA(31)<S$SCR> = EQP.BAGGER.WIDTH.MIN
  S$DATA(35)<S$SCR> = EQP.BAGGER.WIDTH.MAX
  MATREAD CCTR.REC FROM COST.CNTR,EQKEY ELSE
    MAT CCTR.REC = ''
  END
  S$DATA(27)<S$SCR> = CCTR.DESC
  RETURN
*
*---- SYSCOM MESSAGES
*
91000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
END
