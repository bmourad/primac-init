   SUBROUTINE EST.DEPT.COMP.SUM (CONO, EST.KEY, DSEL, CSEL, QSEL)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.DEPT.COMP.SUM
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/15/86
*
* DESCRIPTION
*
* This subroutine will display estimate data summarized by department and
* component. Data may be summarized for one or all components for the
* specified order quantity.
*
* MOD TASK 17811 DMT 4/19/94 ALLOW 99 QUANTITIES
*T26138 cm 09/17/2001 Expand estimate qty from 8 to 9 digits.
*T26411 cm 01/30/2002 When (Q)ty is chosen list is not in GUI.
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T27924 cmykleb 03/12/2004 * Move estimate qty to the component level.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EST.DEPT.COMP.SUM
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
*---- DIMENSIONED VARIABLES
*
   DIM TOT.REC(10)
   EQU LABOR.HRS     TO TOT.REC(1)
   EQU LABOR.SALE    TO TOT.REC(2)
   EQU OTHER.SALE    TO TOT.REC(3)
   EQU AMOUNT.SALE   TO TOT.REC(4)
   EQU TOTAL.HRS     TO TOT.REC(6)
   EQU TOTAL.LABOR   TO TOT.REC(7)
   EQU TOTAL.OTHER   TO TOT.REC(8)
   EQU TOTAL.AMOUNT  TO TOT.REC(9)
*      OPEN '','DEV.SCREENS' TO DEV.SCREENS ELSE RETURN
      OPEN '','JES.SCREENS' TO JES.SCREENS ELSE RETURN
   OPEN '','XREF.DATA' TO XREF.DATA ELSE RETURN
   OPEN '','ESTIMATE.WORK' TO ESTIMATE.WORK ELSE NULL
*
*---- INITIALIZATION
*
   SCREEN DEFINE;EST.DEPT.COMP.SUM;JES.SCREENS
   SCREEN FORMAT
   SCREEN COUNT;EST.DEPT.COMP.SUM;4
   TOP.LINE.COUNT = S$LCNT
   TOP.LINE.SPACE = S$LSPC
   SCREEN COUNT;EST.DEPT.COMP.SUM;16
   BOT.LINE.COUNT = S$LCNT
   BOT.LINE.SPACE = S$LSPC
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   CLEARDASCREEN = ''
*
*---- MAIN PROCESSING
*
100*
   GOSUB 6000
   SCREEN DISPLAY;EST.DEPT.COMP.SUM;ALL
   TOP.CURR.REF.NO = ""
   BOT.CURR.REF.NO = ""
   TOP.REF.NO = 1
   GOSUB 60000
*
*---- GET OPERATOR REPLY
*
500*
   SCREEN FIELD;EST.DEPT.COMP.SUM;23
   SCREEN INPUT;EST.DEPT.COMP.SUM;23
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         SCREEN CLEAR;EST.DEPT.COMP.SUM;D
         GOTO 99999
      CASE OPTION = "D"
         GOTO 600
      CASE OPTION = "Q"
         GOSUB 550
         IF CLEARDASCREEN THEN
            S$SCR = 2
            SCREEN FORMAT
         END
         BEGIN CASE
            CASE S$VALUE = "" OR S$VALUE = "END" 
               IF CLEARDASCREEN THEN
                  SCREEN DISPLAY;;ALL
                  TOP.REF.NO = 1
                  TOP.CURR.REF.NO = ""
                  GOSUB 60000
                  CLEARDASCREEN = ''
               END
            CASE S$VALUE = QSEL 
               IF CLEARDASCREEN THEN
                  SCREEN DISPLAY;;ALL
                  TOP.REF.NO = 1
                  TOP.CURR.REF.NO = ""
                  GOSUB 60000
                  CLEARDASCREEN = ''
               END
            CASE 1
               QSEL = S$VALUE
               CLEARDASCREEN = ''
               GOTO 100
         END CASE
   END CASE
   GOTO 500
*
*---- GET ORDER QUANTITY
*
550*
   EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
   BEGIN CASE
      CASE EC < 2 
         S$VALUE=EST.QTY<1,1>
*T26138 v
*     CASE EC < 6
      CASE EC = 999
*T26138 ^
         SCREEN FIELD;;25
         S$MINV=1;S$MAXV=EC
         S$PMSG="Enter Quantity"
         FOR EP=1 TO EC
*T27924 v
*           S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
            CPTR=CSEL; EQTY=EST.QTY<1,EP>; GOSUB 8500
            S$PMSG=S$PMSG:"  (":EP:") ":COMPQTY
*T27924 ^
         NEXT EP
         SCREEN INPUT;;25;RETURN
         S$VALUE=EST.QTY<1,S$VALUE>
      CASE 1
         GXR.NAME = 'EST.QTY.SEL'
         GXR.XREF = ESTIMATE.WORK
         GXR.SRCH.ID = EST.KEY
         MATWRITE EST.REC TO ESTIMATE.WORK, CONO:EST.KEY
*T26411 v
*        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T26411 ^
         DELETE ESTIMATE.WORK, CONO:EST.KEY
         CLEARDASCREEN = 'Y'
         IF GXR.ID = "" THEN 
            S$VALUE = ''
         END ELSE
            S$VALUE = EST.QTY<1,GXR.ID>
         END
   END CASE
   RETURN
*
*---- GET DEPARTMENT LEVEL REQUEST
*
600*
   SCREEN FIELD;EST.DEPT.COMP.SUM;24
   SCREEN INPUT;EST.DEPT.COMP.SUM;24
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         GOTO 500
      CASE NUM(OPTION) AND OPTION # ""
         MINV = TOP.CURR.REF.NO
         MAXV = TOP.CURR.REF.NO + TOP.LINE.COUNT - 1
         IF MAXV > TOP.CNT THEN MAXV = TOP.CNT
         IF OPTION < MINV OR OPTION > MAXV THEN
            ERRMSG = "Invalid selection. Try again! "
            GOSUB 90000
            GOTO 600
         END
         DP = S$VALUE
         S$DATA(3)<S$SCR,DP> = "*"
         S$VAL = DP
         SCREEN DISPLAY;EST.DEPT.COMP.SUM;3
         GOSUB 7000
         BOT.CURR.REF.NO = ""
         BOT.REF.NO = 1
         GOSUB 70000
         GOTO 700
      CASE OPTION = "S"
         TOP.REF.NO = TOP.CURR.REF.NO + TOP.LINE.COUNT
         IF TOP.REF.NO > TOP.CNT THEN TOP.REF.NO = 1
         GOSUB 60000
    * T25978 v
      CASE OPTION = 'SR'
         TOP.REF.NO = TOP.CURR.REF.NO - TOP.LINE.COUNT
         IF TOP.REF.NO < 1 THEN TOP.REF.NO = 1
         GOSUB 60000
      CASE OPTION = 'ST'
         TOP.REF.NO = 1
         GOSUB 60000
      CASE OPTION = 'SB'
         TOP.REF.NO = TOP.CNT
         GOSUB 60000
    * T25978 ^
   END CASE
   GOTO 600
*
*---- GET COMPONENT LEVEL REQUEST
*
700*
   SCREEN FIELD;EST.DEPT.COMP.SUM;26
   SCREEN INPUT;EST.DEPT.COMP.SUM;26
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         S$DATA(3)<S$SCR> = ""
         S$VAL = DP
         SCREEN DISPLAY;EST.DEPT.COMP.SUM;3
         BOT.CNT = 0
         BOT.CURR.REF.NO = ""
         BOT.REF.NO = 1
         GOSUB 70000
         GOTO 600
      CASE OPTION = "S"
         BOT.REF.NO = BOT.REF.NO + BOT.LINE.COUNT
         IF BOT.REF.NO > BOT.CNT THEN BOT.REF.NO = 1
         GOSUB 70000
    * T25978 v
      CASE OPTION = 'SR'
         BOT.REF.NO = BOT.CURR.REF.NO - BOT.LINE.COUNT
         IF BOT.REF.NO < 1 THEN BOT.REF.NO = 1
         GOSUB 70000
      CASE OPTION = 'ST'
         BOT.REF.NO = 1
         GOSUB 70000
      CASE OPTION = 'SB'
         BOT.REF.NO = BOT.CNT
         GOSUB 70000
    * T25978 ^
   END CASE
   GOTO 700
*
*---- LOAD SCREEN DATA (TOP)
*
6000*
   MAT DSUM.REC2 = ""
   CALL EST.DEPT.COMP.SUB (CONO, EST.KEY, DSEL, CSEL, QSEL, MAT DSUM.REC2)
   TOP.CNT = COUNT(DSUM.DEPT,VM) + (DSUM.DEPT # "")
   MAT TOT.REC = ""
   FOR DP = 1 TO TOP.CNT
      LABOR.HRS<1,DP> = DSUM.DEPT.LABOR.HRS<1,DP>
      LABOR.SALE<1,DP> = DSUM.DEPT.LABOR.SALE<1,DP>
      OTHER.SALE<1,DP> = DSUM.DEPT.MATL.SALE<1,DP>+DSUM.DEPT.OSP.SALE<1,DP>+DSUM.DEPT.SHIP.SALE<1,DP>+DSUM.DEPT.MISC.SALE<1,DP>
      AMOUNT.SALE<1,DP> = LABOR.SALE<1,DP> + OTHER.SALE<1,DP>
      TOTAL.HRS = TOTAL.HRS + LABOR.HRS<1,DP>
      TOTAL.LABOR = TOTAL.LABOR + LABOR.SALE<1,DP>
      TOTAL.OTHER = TOTAL.OTHER + OTHER.SALE<1,DP>
      TOTAL.AMOUNT = TOTAL.AMOUNT + AMOUNT.SALE<1,DP>
      IF LABOR.HRS<1,DP> = 0 THEN LABOR.HRS<1,DP> = ""
      IF LABOR.SALE<1,DP> = 0 THEN LABOR.SALE<1,DP> = ""
      IF OTHER.SALE<1,DP> = 0 THEN OTHER.SALE<1,DP> = ""
   NEXT DP
*T26138 v
*  S$DATA(1)<S$SCR> = QSEL
   FOR DP = 1 TO TOP.CNT
      LABOR.SALE<1,DP> = OCONV(LABOR.SALE<1,DP>,'MD2,')
      OTHER.SALE<1,DP> = OCONV(OTHER.SALE<1,DP>,'MD2,')
      AMOUNT.SALE<1,DP> = OCONV(AMOUNT.SALE<1,DP>,'MD2,')
   NEXT DP
*T27924 v
*  S$DATA(1)<S$SCR> = OCONV(QSEL,'MD0,')
   CPTR=CSEL; EQTY=QSEL; GOSUB 8500
   S$DATA(1)<S$SCR> = OCONV(COMPQTY,'MD0,')
*T27924 ^
*T26138 ^
   S$DATA(4)<S$SCR> = DSUM.DEPT
   S$DATA(5)<S$SCR> = DSUM.DEPT.DESC
   S$DATA(6)<S$SCR> = LABOR.HRS
   S$DATA(7)<S$SCR> = LABOR.SALE
   S$DATA(8)<S$SCR> = OTHER.SALE
   S$DATA(9)<S$SCR> = AMOUNT.SALE
   S$DATA(10)<S$SCR> = TOTAL.HRS
*T26138 v
*  S$DATA(11)<S$SCR> = TOTAL.LABOR
*  S$DATA(12)<S$SCR> = TOTAL.OTHER
*  S$DATA(13)<S$SCR> = TOTAL.AMOUNT
   S$DATA(11)<S$SCR> = OCONV(TOTAL.LABOR,'MD2,')
   S$DATA(12)<S$SCR> = OCONV(TOTAL.OTHER,'MD2,')
   S$DATA(13)<S$SCR> = OCONV(TOTAL.AMOUNT,'MD2,')
*T26138 ^
   RETURN
*
*---- LOAD SCREEN DATA (BOTTOM)
*
7000*
   BOT.CNT = COUNT(DSUM.COMP<1,DP>,SM) + (DSUM.COMP<1,DP> # "")
   MAT TOT.REC = ""
   COMP = ""; COMP.DESC = ""
   FOR CP = 1 TO BOT.CNT
*T26556 v
*   COMP<1,CP> = DSUM.COMP<1,DP,CP>
      COMP<1,CP> = CP
*T26556 ^
      COMP.DESC<1,CP> = DSUM.COMP.DESC<1,DP,CP>
      LABOR.HRS<1,CP> = DSUM.COMP.LABOR.HRS<1,DP,CP>
      LABOR.SALE<1,CP> = DSUM.COMP.LABOR.SALE<1,DP,CP>
      OTHER.SALE<1,CP> = DSUM.COMP.MATL.SALE<1,DP,CP>+DSUM.COMP.OSP.SALE<1,DP,CP>+DSUM.COMP.SHIP.SALE<1,DP,CP>+DSUM.COMP.MISC.SALE<1,DP,CP>
      AMOUNT.SALE<1,CP> = LABOR.SALE<1,CP> + OTHER.SALE<1,CP>
      TOTAL.HRS = TOTAL.HRS + LABOR.HRS<1,CP>
      TOTAL.LABOR = TOTAL.LABOR + LABOR.SALE<1,CP>
      TOTAL.OTHER = TOTAL.OTHER + OTHER.SALE<1,CP>
      TOTAL.AMOUNT = TOTAL.AMOUNT + AMOUNT.SALE<1,CP>
      IF LABOR.HRS<1,CP> = 0 THEN LABOR.HRS<1,CP> = ""
      IF LABOR.SALE<1,CP> = 0 THEN LABOR.SALE<1,CP> = ""
      IF OTHER.SALE<1,CP> = 0 THEN OTHER.SALE<1,CP> = ""
   NEXT CP
*T26138 v
   FOR CP = 1 TO BOT.CNT
      LABOR.SALE<1,CP> = OCONV(LABOR.SALE<1,CP>,'MD2,')
      OTHER.SALE<1,CP> = OCONV(OTHER.SALE<1,CP>,'MD2,')
      AMOUNT.SALE<1,CP> = OCONV(AMOUNT.SALE<1,CP>,'MD2,')
   NEXT CP
*T26138 ^
   S$DATA(16)<S$SCR> = COMP
   S$DATA(17)<S$SCR> = COMP.DESC
   S$DATA(18)<S$SCR> = LABOR.HRS
   S$DATA(19)<S$SCR> = LABOR.SALE
   S$DATA(20)<S$SCR> = OTHER.SALE
   S$DATA(21)<S$SCR> = AMOUNT.SALE
   RETURN
*
*---- DISPLAY MULTI-LINE DATA (TOP)
*
60000*
   START.REF.NO = 1 + INT((TOP.REF.NO-1)/TOP.LINE.COUNT)*TOP.LINE.COUNT
   IF START.REF.NO = TOP.CURR.REF.NO THEN RETURN
   TOP.CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = TOP.CNT
   SCREEN MULTI;EST.DEPT.COMP.SUM;C;2;3;4;5;6;7;8;9
   RETURN
*
*---- DISPLAY MULTI-LINE DATA (BOTTOM)
*
70000*
   START.REF.NO = 1 + INT((BOT.REF.NO-1)/BOT.LINE.COUNT)*BOT.LINE.COUNT
   IF START.REF.NO = BOT.CURR.REF.NO THEN RETURN
   BOT.CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = BOT.CNT
   SCREEN MULTI;EST.DEPT.COMP.SUM;C;15;16;17;18;19;20;21
   RETURN
*T27924 v
*
*---- DERIVE COMPONENT QUANTITY
*
8500*
   IF NUM(CPTR) THEN
      LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE QPTR = 1
      CQTY = EST.COMP.QTY<1,CPTR,QPTR>
      BEGIN CASE
         CASE CQTY=""
            COMPQTY = EQTY
         CASE (CQTY[1,1]="+" OR CQTY[1,1]="-") AND CQTY[LEN(CQTY),1]="%"
            COMPQTY = INT(EQTY * (1 + (CQTY[1,LEN(CQTY)-1]/100)) + 0.5)
         CASE CQTY[1,1]="+" OR CQTY[1,1]="-"
            COMPQTY = EQTY + CQTY
         CASE 1
            COMPQTY = CQTY
      END CASE
      IF COMPQTY < 0 THEN COMPQTY = 0
   END ELSE
      COMPQTY = EQTY
   END
   RETURN
*T27924 ^
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   SCREEN CLEAR;EST.DEPT.COMP.SUM;D
   RETURN
END
