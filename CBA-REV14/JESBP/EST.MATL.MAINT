***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.MATL.MAINT
*
* AUTHOR   - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/10/85
*
* DESCRIPTION
* This program maintains the ESTIMATE.MATL file for regular materials.
* The key to this file will be CONO:MATL.TYPE
* MATL.TYPE :
*  I = ink ; P = plate ; F = film ; X = stripping ; B = blanket ;
*  L = long run plate ; O = other
*
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
*T26760 cmykleb 07/22/2002 * Remove limit of 175 items.
*T27250 epitka 01/29/2003 * Check the platform.
*T27684 cmykleb 09/08/2003 * Change echo $UDTHOME to call SYSVARS.SUB
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JES.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
      ERRMSG = "CANNOT OPEN FOH.TABLE FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MARKUP FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MATL FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
*T27684 v
*  PLATFORM=SYSTEM(33)                          
*  IF PLATFORM='UNIX' THEN                      
*     PERFORM "!echo $UDTHOME" CAPTURING UDTDIR  
*  END ELSE                                     
*     PERFORM "!echo %UDTHOME%" CAPTURING UDTDIR 
*  END                                          
   UDTDIR = "UDTHOME"
   CALL SYSVARS.SUB (UDTDIR)
*T27684 ^
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
   CONO = ""
   CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;EST.MATL.MAINT
   SCREEN FORMAT
   SCREEN COUNT;EST.MATL.MAINT;4
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   ERRMSG = ""
*
*---- MAIN PROCESSING
*
100*
   CURR.REF.NO = ""
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;EST.MATL.MAINT;1
   SCREEN FIELD;EST.MATL.MAINT;2
   SCREEN INPUT;EST.MATL.MAINT;2
   IF S$VALUE = "END" THEN GOTO 99999
   PROD.KEY = S$VALUE
   BEGIN CASE
      CASE PROD.KEY = "P"
         MATL.DESC = "PLATE"
      CASE PROD.KEY = "F"
         MATL.DESC = "FILM"
      CASE PROD.KEY = "X"
         MATL.DESC = "STRIPPING"
      CASE PROD.KEY = "B"
         MATL.DESC = "BLANKET"
      CASE PROD.KEY = "L"
         MATL.DESC = "LONG RUN PLATE"
      CASE PROD.KEY = "C"
         MATL.DESC = "CASEMAKING"
      CASE PROD.KEY = "O"
         MATL.DESC = "OTHER"
      CASE 1
         GOTO 100
   END CASE
   S$DATA(3)<S$SCR> = MATL.DESC
   SCREEN DISPLAY;EST.MATL.MAINT;3
   NEW.REC = 0
  * T26126 v
   MATREADU ESTM.REC FROM ESTIMATE.MATL, CONO:PROD.KEY LOCKED
      ERRMSG = 'MATERIAL record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 90000;GOTO 100 
   END ELSE
  * T26126 ^
      MAT ESTM.REC = ""
      NEW.REC = 1
   END
   ESTM.FOH.PCT = ESTM.FOH.PCT<1,1>
   ESTM.MARKUP = ESTM.MARKUP<1,1>
   CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
   IF NEW.REC THEN
      FOR N = 1 TO 2
         ON N GOSUB 1100, 1200
         IF S$VALUE = "END" THEN
            SCREEN CLEAR
            RELEASE
            GOTO 100
         END
      NEXT N
      MODE = "A"
      DONE = 0
*T26760 v
*   FOR REF.NO = CNT + 1 TO 175 UNTIL DONE
      FOR REF.NO = CNT + 1 TO 999 UNTIL DONE
*T26760 ^
         GOSUB 50000
         GOSUB 10000
         IF S$VALUE = "END" THEN
            DONE = 1
            GOSUB 60000
         END ELSE
            CNT = CNT + 1
         END
      NEXT REF.NO
      REF.NO = CNT
      CURR.REF.NO = ""
      GOSUB 50000
   END ELSE
      GOSUB 80000
      SCREEN DISPLAY;EST.MATL.MAINT;ALL
      IF ESTM.PROD # "" THEN
         REF.NO = 1
         GOSUB 50000
      END
   END
*
*---- GET OPERATOR REPLY
*
500*
   S$DATA(15)<S$SCR> = ""
   SCREEN FIELD;EST.MATL.MAINT;15
   SCREEN INPUT;EST.MATL.MAINT;15
   OPT = S$VALUE
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         SCREEN CLEAR
         RELEASE
         GOTO 100
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1100, 1200
*T26760 v
*   CASE OPT = "A" AND CNT < 175
      CASE OPT = "A" AND CNT < 999
*T26760 ^
         MODE = "A"
         DONE = 0
*T26760 v
*     FOR REF.NO = CNT + 1 TO 175 UNTIL DONE
         FOR REF.NO = CNT + 1 TO 999 UNTIL DONE
*T26760 ^
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 60000
            END ELSE
               CNT = CNT + 1
            END
         NEXT REF.NO
         REF.NO = CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPT = "C" AND CNT > 0
         MODE = "C"
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
         END
      CASE OPT = "I" AND CNT > 0
         MODE = "I"
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            S$DATA(5) = INSERT(S$DATA(5),S$SCR,REF.NO,0,"")
            S$DATA(6) = INSERT(S$DATA(6),S$SCR,REF.NO,0,"")
            S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF.NO,0,"")
            S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF.NO,0,"")
            S$DATA(12) = INSERT(S$DATA(12),S$SCR,REF.NO,0,"")
            S$DATA(9) = INSERT(S$DATA(9),S$SCR,REF.NO,0,"")
            S$DATA(10) = INSERT(S$DATA(10),S$SCR,REF.NO,0,"")
            S$DATA(11) = INSERT(S$DATA(11),S$SCR,REF.NO,0,"")
            S$DATA(17) = INSERT(S$DATA(17),S$SCR,REF.NO,0,"")
            S$DATA(18) = INSERT(S$DATA(18),S$SCR,REF.NO,0,"")
            ESTM.PROD = INSERT(ESTM.PROD,1,REF.NO,0,"")
            ESTM.DESC = INSERT(ESTM.DESC,1,REF.NO,0,"")
            ESTM.FULL.DESC = INSERT(ESTM.FULL.DESC,1,REF.NO,0,"")
            ESTM.WIDTH = INSERT(ESTM.WIDTH,1,REF.NO,0,"")
            ESTM.LENGTH = INSERT(ESTM.LENGTH,1,REF.NO,0,"")
            ESTM.UM = INSERT(ESTM.UM,1,REF.NO,0,"")
            ESTM.COST.UNIT = INSERT(ESTM.COST.UNIT,1,REF.NO,0,"")
            ESTM.COST = INSERT(ESTM.COST,1,REF.NO,0,"")
            ESTM.QCALC = INSERT(ESTM.QCALC,1,REF.NO,0,"")
            ESTM.QPARAM = INSERT(ESTM.QPARAM,1,REF.NO,0,"")
            ESTM.QOR = INSERT(ESTM.QOR,1,REF.NO,0,"")
            ESTM.FCALC = INSERT(ESTM.FCALC,1,REF.NO,0,"")
            ESTM.FPARAM = INSERT(ESTM.FPARAM,1,REF.NO,0,"")
            ESTM.FOR = INSERT(ESTM.FOR,1,REF.NO,0,"")
            CNT = CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 60000
               CNT = CNT - 1
            END
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "D" AND CNT > 0
         MODE = "D"
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 60000
            CNT = CNT - 1
            IF REF.NO > CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "S"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = COUNT(ESTM.PROD,VM) + 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "F"
         CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
         FOR C = 2 TO CNT
            ESTM.FOH.PCT<1,C> = ESTM.FOH.PCT<1,1>
            ESTM.MARKUP<1,C> = ESTM.MARKUP<1,1>
         NEXT C
         MATWRITE ESTM.REC ON ESTIMATE.MATL,CONO:PROD.KEY
         SCREEN CLEAR
         GOTO 100
   END CASE
   GOTO 500
*
*---- GET INDIRECT % OR TABLE ID
*
1100*
   SAVE.FOH.PCT = S$DATA(19)<S$SCR>
1102*
   S$DATA(19)<S$SCR> = SAVE.FOH.PCT
   SCREEN FIELD;EST.MATL.MAINT;19
   SCREEN INPUT;EST.MATL.MAINT;19;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 1102
         END
         ESTM.FOH.PCT = IVAL
         S$DATA(19)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;EST.MATL.MAINT;19
      CASE 1
         READ REC FROM FOH.TABLE, CONO:S$VALUE ELSE
            ERRMSG = "Invalid table ID. Try again! "
            GOSUB 90000
            GOTO 1102
         END
         ESTM.FOH.PCT = S$VALUE
   END CASE
   RETURN
*
*---- GET MARK-UP % OR TABLE ID
*
1200*
   SAVE.MARKUP = S$DATA(20)<S$SCR>
1202*
   S$DATA(20)<S$SCR> = SAVE.MARKUP
   SCREEN FIELD;EST.MATL.MAINT;20
   SCREEN INPUT;EST.MATL.MAINT;20;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 1202
         END
         ESTM.MARKUP = IVAL
         S$DATA(20)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;EST.MATL.MAINT;20
      CASE 1
         READ REC FROM ESTIMATE.MARKUP, CONO:S$VALUE ELSE
            ERRMSG = "Invalid table ID. Try again! "
            GOSUB 90000
            GOTO 1202
         END
         ESTM.MARKUP = S$VALUE
   END CASE
   RETURN
*
*---- GET VALID PRODUCT
*
10000*
   S$VAL = REF.NO
   SCREEN DISPLAY;EST.MATL.MAINT;4
10100*
   S$DATA(5)<S$SCR,REF.NO> = ESTM.PROD<1,REF.NO>
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;5
   SCREEN INPUT;EST.MATL.MAINT;5;GOTO 10995
   TEMP.PROD = S$VALUE
   LOCATE TEMP.PROD IN ESTM.PROD<1>,1 SETTING FND ELSE FND = 0
   IF FND AND FND # REF.NO THEN
      ERRMSG = "Duplicate product specified. Try again! "
      GOSUB 90000
      GOTO 10100
   END
10110*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;6
   SCREEN INPUT;EST.MATL.MAINT;6;GOTO 10995
   TEMP.DESC = S$VALUE
10120*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;17
   SCREEN INPUT;EST.MATL.MAINT;17;GOTO 10995
   TEMP.WIDTH = S$VALUE
10125*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;18
   SCREEN INPUT;EST.MATL.MAINT;18;GOTO 10995
   TEMP.LENGTH = S$VALUE
10130*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;8
   SCREEN INPUT;EST.MATL.MAINT;8;GOTO 10995
   TEMP.COST = S$VALUE
10140*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;7
   SCREEN INPUT;EST.MATL.MAINT;7;GOTO 10995
   TEMP.UM = S$VALUE
10145*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;12
   SCREEN INPUT;EST.MATL.MAINT;12;GOTO 10995
   TEMP.COST.UNIT = S$VALUE
*---- GET QTY CALC TYPE
10150*
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;9
   SCREEN INPUT;EST.MATL.MAINT;9;GOTO 10995
   TEMP.QCALC = S$VALUE
   QCALC.TYPE = S$VALUE
*---- GET QTY CALC PARAM
10160*
   IF QCALC.TYPE = "" THEN
      TEMP.QPARAM = ""
      S$DATA(10)<S$SCR,REF.NO> = TEMP.QPARAM
      S$VAL = REF.NO
      SCREEN DISPLAY;EST.MATL.MAINT;10
      GOTO 10170
   END
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;10
   SCREEN INPUT;EST.MATL.MAINT;10;GOTO 10995
   BEGIN CASE
      CASE QCALC.TYPE = "C" OR QCALC.TYPE = "M"
*        ERR =0
*        BEGIN CASE
*        CASE NOT(NUM(S$VALUE))
*           ERR = 1
*        CASE S$VALUE # INT(S$VALUE)
*           ERR = 1
*        END CASE
*        IF ERR THEN
*           ERRMSG = "Invalid parameter. Try again! "
*           GOSUB 90000
*           GOTO 10160
*        END
      CASE QCALC.TYPE = "F"
         SUB.NAME="EST.FORMULA.Q":S$VALUE
         FORMULA.FOUND = 0
         READ REC FROM VOC, SUB.NAME THEN
            IF REC<1> = "C" THEN
               OSREAD REC FROM REC<2> THEN FORMULA.FOUND = 1
            END
         END ELSE
            OSREAD REC FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
         END
         IF NOT(FORMULA.FOUND) THEN
            ERRMSG="Invalid formula ID. Try again !"
            GOSUB 90000
            GOTO 10160
         END
   END CASE
   TEMP.QPARAM = S$VALUE
*---- GET QTY OVERRIDE FLAG
10170*
   BEGIN CASE
      CASE QCALC.TYPE = ""
         TEMP.QOR = ""
         S$DATA(11)<S$SCR,REF.NO> = TEMP.QOR
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.MATL.MAINT;11
         GOTO 10190
      CASE QCALC.TYPE = "F"
         TEMP.QOR = "X"
         S$DATA(11)<S$SCR,REF.NO> = TEMP.QOR
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.MATL.MAINT;11
         GOTO 10190
   END CASE
   S$VAL = REF.NO
   SCREEN FIELD;EST.MATL.MAINT;11
   SCREEN INPUT;EST.MATL.MAINT;11;GOTO 10995
   TEMP.QOR = S$VALUE
10190*
   ESTM.PROD<1,REF.NO> = TEMP.PROD
   ESTM.DESC<1,REF.NO> = TEMP.DESC
   ESTM.WIDTH<1,REF.NO> = TEMP.WIDTH
   ESTM.LENGTH<1,REF.NO> = TEMP.LENGTH
   ESTM.UM<1,REF.NO> = TEMP.UM
   ESTM.COST<1,REF.NO> = TEMP.COST
   ESTM.COST.UNIT<1,REF.NO> = TEMP.COST.UNIT
   ESTM.QCALC<1,REF.NO> = TEMP.QCALC
   ESTM.QPARAM<1,REF.NO> = TEMP.QPARAM
   ESTM.QOR<1,REF.NO> = TEMP.QOR
   ESTM.FCALC<1,REF.NO> = "C"
   ESTM.FPARAM<1,REF.NO> = 1
   IF TEMP.COST+0 = 0 THEN
      ESTM.FOR<1,REF.NO> = ""
   END ELSE
      ESTM.FOR<1,REF.NO> = "N"
   END
   CALL EST.MATL.FULL.DESC.SUB(MAT ESTM.REC,CONTROL,REF.NO,PROD.KEY)
   RETURN
*---- BACK-OUT ENTRY
10995*
   S$DATA(5)<S$SCR,REF.NO> = ESTM.PROD<1,REF.NO>
   S$DATA(6)<S$SCR,REF.NO> = ESTM.DESC<1,REF.NO>
   S$DATA(7)<S$SCR,REF.NO> = ESTM.UM<1,REF.NO>
   S$DATA(8)<S$SCR,REF.NO> = ESTM.COST<1,REF.NO>
   S$DATA(12)<S$SCR,REF.NO> = ESTM.COST.UNIT<1,REF.NO>
   S$DATA(9)<S$SCR,REF.NO> = ESTM.QCALC<1,REF.NO>
   S$DATA(10)<S$SCR,REF.NO> = ESTM.QPARAM<1,REF.NO>
   S$DATA(11)<S$SCR,REF.NO> = ESTM.QOR<1,REF.NO>
   S$DATA(17)<S$SCR,REF.NO> = ESTM.WIDTH<1,REF.NO>
   S$DATA(18)<S$SCR,REF.NO> = ESTM.LENGTH<1,REF.NO>
   CURR.REF.NO = ""
   GOSUB 50000
   RETURN
*
*---- GET REGULAR MATL LINE REFERENCE NUMBER
*
30000*
   S$DATA(16)<S$SCR> = ""
   SCREEN FIELD;EST.MATL.MAINT;16
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > CNT THEN S$MAXV = CNT
   SCREEN INPUT;EST.MATL.MAINT;16
   RETURN
*
*---- SCROLL REGULAR MATL
*
50000*
   START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = COUNT(S$DATA(5)<S$SCR>,VM) + (S$DATA(5)<S$SCR> # "")
   SCREEN MULTI;EST.MATL.MAINT;C;4;5;6;17;18;7;8;12;9;10;11
   RETURN
*
*---- DELETE MATRIX LINE
*
60000*
   S$DATA(5) = DELETE(S$DATA(5),S$SCR,REF.NO,0)
   S$DATA(6) = DELETE(S$DATA(6),S$SCR,REF.NO,0)
   S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF.NO,0)
   S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF.NO,0)
   S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
   S$DATA(9) = DELETE(S$DATA(9),S$SCR,REF.NO,0)
   S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF.NO,0)
   S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF.NO,0)
   S$DATA(17) = DELETE(S$DATA(17),S$SCR,REF.NO,0)
   S$DATA(18) = DELETE(S$DATA(18),S$SCR,REF.NO,0)
   ESTM.PROD = DELETE(ESTM.PROD,1,REF.NO,0)
   ESTM.DESC = DELETE(ESTM.DESC,1,REF.NO,0)
   ESTM.FULL.DESC = DELETE(ESTM.FULL.DESC,1,REF.NO,0)
   ESTM.WIDTH = DELETE(ESTM.WIDTH,1,REF.NO,0)
   ESTM.LENGTH = DELETE(ESTM.LENGTH,1,REF.NO,0)
   ESTM.UM = DELETE(ESTM.UM,1,REF.NO,0)
   ESTM.COST.UNIT = DELETE(ESTM.COST.UNIT,1,REF.NO,0)
   ESTM.COST = DELETE(ESTM.COST,1,REF.NO,0)
   ESTM.QCALC = DELETE(ESTM.QCALC,1,REF.NO,0)
   ESTM.QPARAM = DELETE(ESTM.QPARAM,1,REF.NO,0)
   ESTM.QOR = DELETE(ESTM.QOR,1,REF.NO,0)
   ESTM.FCALC = DELETE(ESTM.FCALC,1,REF.NO,0)
   ESTM.FPARAM = DELETE(ESTM.FPARAM,1,REF.NO,0)
   ESTM.FOR = DELETE(ESTM.FOR,1,REF.NO,0)
   RETURN
*
*---- LOAD MATRIX
*
80000*
   S$DATA(5)<S$SCR> = ESTM.PROD
   S$DATA(6)<S$SCR> = ESTM.DESC
   S$DATA(7)<S$SCR> = ESTM.UM
   S$DATA(8)<S$SCR> = ESTM.COST
   S$DATA(12)<S$SCR> = ESTM.COST.UNIT
   S$DATA(9)<S$SCR> = ESTM.QCALC
   S$DATA(10)<S$SCR> = ESTM.QPARAM
   S$DATA(11)<S$SCR> = ESTM.QOR
   S$DATA(17)<S$SCR> = ESTM.WIDTH
   S$DATA(18)<S$SCR> = ESTM.LENGTH
   BEGIN CASE
      CASE NUM(ESTM.FOH.PCT)
         S$DATA(19)<S$SCR> = OCONV(ESTM.FOH.PCT,"MD2")
      CASE 1
         S$DATA(19)<S$SCR> = ESTM.FOH.PCT
   END CASE
   BEGIN CASE
      CASE NUM(ESTM.MARKUP)
         S$DATA(20)<S$SCR> = OCONV(ESTM.MARKUP,"MD2")
      CASE 1
         S$DATA(20)<S$SCR> = ESTM.MARKUP
   END CASE
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   SCREEN CLOSE
END
