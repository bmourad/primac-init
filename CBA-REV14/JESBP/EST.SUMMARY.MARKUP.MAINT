   SUBROUTINE EST.SUMMARY.MARKUP.MAINT (CONO, ACTION, EST.KEY, STATUS,NEW.REC)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.SUMMARY.MARKUP.MAINT
*
* AUTHOR   - DIANE TOVAR, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 08/07/93
*
* DESCRIPTION
*
* This subroutine is used to maintain the mark-up percentages by category.
*
* MOD TASK 17456 DMT 9/29/93 PRICE PER UOM FOR EACH 4 DECIMAL
* MOD TASK 17918 DMT 8/19/94 INSTALL IN REV10 ADD 99 QTYS
* T24338 randy 08/11/99 Add code to ensure that PRT ADL/M field
*                       defaults to Y.
* T24318 cm 08/30/1999 Change column headings to be QPTR instead of
*                      cycling throuh 1 - 4.
* T26138 cm 09/17/2001 Expand estimate qty from 8 to 9 digits.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>CPYLIB>SCREEN.COM
*COPY>JES.CPYLIB>EST.COST.TYPE.SUM
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   OPEN "","JES.SCREENS" TO JES.SCREENS ELSE ERRMSG = "CANNOT OPEN JES.SCREENS";GOSUB 90000;GOTO 99999
   DIM SAVE.CSUM.REC(40)
   EQU SAVE.LB.HRS           TO SAVE.CSUM.REC(2)    ;* Labor hours
   EQU SAVE.LB.DCOST         TO SAVE.CSUM.REC(3)    ;* Labor direct cost
   EQU SAVE.LB.COST          TO SAVE.CSUM.REC(4)    ;* Labor total cost
   EQU SAVE.LB.SALE          TO SAVE.CSUM.REC(5)    ;* Labor sale
   EQU SAVE.MT.DCOST         TO SAVE.CSUM.REC(6)    ;* Material direct cost
   EQU SAVE.MT.COST          TO SAVE.CSUM.REC(7)    ;* Material total cost
   EQU SAVE.MT.SALE          TO SAVE.CSUM.REC(8)    ;* Material sale
   EQU SAVE.OS.DCOST         TO SAVE.CSUM.REC(9)    ;* O/P direct cost
   EQU SAVE.OS.COST          TO SAVE.CSUM.REC(10)   ;* O/P total cost
   EQU SAVE.OS.SALE          TO SAVE.CSUM.REC(11)   ;* O/P sale
   EQU SAVE.SP.DCOST         TO SAVE.CSUM.REC(12)   ;* Shipping direct cost
   EQU SAVE.SP.COST          TO SAVE.CSUM.REC(13)   ;* Shipping total cost
   EQU SAVE.SP.SALE          TO SAVE.CSUM.REC(14)   ;* Shipping sale
   EQU SAVE.MS.DCOST         TO SAVE.CSUM.REC(15)   ;* Misc direct cost
   EQU SAVE.MS.COST          TO SAVE.CSUM.REC(16)   ;* Misc total cost
   EQU SAVE.MS.SALE          TO SAVE.CSUM.REC(17)   ;* Misc sale
   EQU SAVE.TOT.DCOST        TO SAVE.CSUM.REC(18)   ;* Total direct cost
   EQU SAVE.TOT.COST         TO SAVE.CSUM.REC(19)   ;* Total cost
   EQU SAVE.TOT.SALE         TO SAVE.CSUM.REC(20)   ;* Total sale
   EQU SAVE.MT.DCOST.DET     TO SAVE.CSUM.REC(21)   ;* (MV1) Material direct cost detail
*                                                 ;* 1 = paper
*                                                 ;* 2 = ink
*                                                 ;* 3 = film
*                                                 ;* 4 = plates
*                                                 ;* 5 = other
   EQU SAVE.MT.COST.DET      TO SAVE.CSUM.REC(22)   ;* (MV1) Material total cost detail
   EQU SAVE.MT.SALE.DET      TO SAVE.CSUM.REC(23)   ;* (MV1) Material sale detail
*
*---- INITIALIZATION
*
   SCREEN DEFINE;EST.SUMMARY.MARKUP.MAINT;JES.SCREENS
   SCREEN FORMAT
   LINE.COUNT = 3
   LINE.CNT = DCOUNT(EST.QTY,VM)
   LINE.SPACE = 1
   REF.NO = 1
   CURR.REF.NO = ''
*
*---- MAIN PROCESSING
*
100 *
   GOSUB 70000
   GOSUB 50000
   GOSUB 80000
   CHANGE.FLAG = 0
   IF NEW.REC THEN
      NCNT = DCOUNT(EST.QTY,VM)
      FOR NQPTR = 1 TO NCNT UNTIL S$VALUE = 'END'
         QPTR = NQPTR
         GOSUB 10000
         IF MOD(NQPTR,"3") = 0 THEN
            ERRMSG = 'PRESS RETURN TO CONTINUE'
            GOSUB 90000
            REF.NO = CURR.REF.NO + LINE.COUNT
            IF REF.NO > LINE.CNT THEN REF.NO = 1
            GOSUB 50000
         END
      NEXT NQPTR
      GOSUB 10300
      GOSUB 10400
   END
*
*---- GET OPERATOR REPLY
*
500 *
   BEGIN CASE
      CASE ACTION = "M"
         SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;53
         SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;53
      CASE 1
         SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;54
         SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;54
   END CASE
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         IF ACTION # 'I' THEN
            ECNT = DCOUNT(EST.QTY,VM)
            ERRMSG = ''
            FOR EP = 1 TO ECNT
               IF EST.OM.PRICE.M<1,EP> = 0 AND EST.FINAL.PRICE<1,EP> # 0 THEN
                  ERRMSG =  'CANNOT EXIT SCREEN UNTIL MARKUP PERCENT HAS BEEN UPDATED'
               END
            NEXT EP
            IF ERRMSG # '' THEN
               GOSUB 90000
            END ELSE
               IF CHANGE.FLAG THEN
                  GOSUB 20500
                  EST.OM.ENTERED = "Y"
               END
               GOTO 99999
            END
         END ELSE
            GOTO 99999
         END
      CASE OPTION = 'Q'
         MORE = 1
         LOOP
            BEGIN CASE
               CASE ACTION = "M"
                  S$MINV = CURR.REF.NO
                  IF CURR.REF.NO + 2 > DCOUNT(EST.QTY,VM) THEN
                     S$MAXV = DCOUNT(EST.QTY,VM)
                  END ELSE
                     S$MAXV = CURR.REF.NO + 2
                  END
                  SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;58
                  SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;58
               CASE 1
                  SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;59
                  SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;59
            END CASE
            OPTQ = S$VALUE
            BEGIN CASE
               CASE OPTQ = "" OR OPTQ = "END"
                  MORE = 0
               CASE OPTQ = "S" OR OPTQ = "SF"
                  REF.NO = CURR.REF.NO + LINE.COUNT
                  IF REF.NO > LINE.CNT THEN REF.NO = 1
                  GOSUB 50000
               CASE OPTQ = "SR"
                  REF.NO = CURR.REF.NO - LINE.COUNT
                  IF REF.NO < 1 THEN REF.NO = 1
                  GOSUB 50000
               CASE OPTQ = "ST"
                  REF.NO = 1
                  GOSUB 50000
               CASE OPTQ = "SB"
                  REF.NO = LINE.CNT
                  IF REF.NO < 1 THEN REF.NO = 1
                  GOSUB 50000
               CASE NUM(OPTQ)
                  CHANGE.FLAG = 1
                  QPTR = S$VALUE
                  GOSUB 10200
                  IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
                     GOSUB 10100
                  END
            END CASE
         WHILE MORE DO
         REPEAT
      CASE ACTION = "M" AND OPTION # "" AND NUM(OPTION)
         CHANGE.FLAG = 1
         FLD = OPTION
         ON FLD GOSUB 10300,10400
   END CASE
   GOTO 500
*
*---- New Estimate
*
10000 *
   GOSUB 10100
   GOSUB 10200
   RETURN
*
*---- Markup Percent
*
10100 *
*
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;39
            SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;39;RETURN
            EST.OM.PCT<1,QPTR> = S$VALUE
            GOSUB 20200          ;* Final Price
            GOSUB 20210
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
            GOSUB 20410
         END ELSE
*T24318 v
*           ERRMSG = 'QUANTITY 1 PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
*T24318 ^
            GOSUB 90000
         END
      CASE MOD(QPTR + 3,"3") = 2
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;40
            SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;40;RETURN
            EST.OM.PCT<1,QPTR> = S$VALUE
            GOSUB 20200          ;* Final Price
            GOSUB 20210
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
            GOSUB 20410
         END ELSE
*T24318 v
*           ERRMSG = 'QUANTITY 2 PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
*T24318 ^
            GOSUB 90000
         END
      CASE MOD(QPTR + 3,"3") = 0
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;41
            SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;41;RETURN
            EST.OM.PCT<1,QPTR> = S$VALUE
            GOSUB 20200          ;* Final Price
            GOSUB 20210
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
            GOSUB 20410
         END ELSE
*T24318 v
*           ERRMSG = 'QUANTITY 3 PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
*T24318 ^
            GOSUB 90000
         END
   END CASE
   RETURN
*
*---- Price Per Thousand Override
*
10200 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            S$DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
            EST.OM.PRICE.M<1,QPTR> = S$DEFAULT
         END ELSE
            S$DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
         SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;45
         SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;45;RETURN
         IF EST.OM.PRICE.M<1,QPTR> # S$VALUE AND S$VALUE # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = S$VALUE
            GOSUB 20100
            GOSUB 20110
            GOSUB 20210
         END
         EST.OM.PRICE.M<1,QPTR> = S$VALUE
      CASE MOD(QPTR + 3,"3") = 2
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            S$DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
            EST.OM.PRICE.M<1,QPTR> = S$DEFAULT
         END ELSE
            S$DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
         SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;46
         SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;46;RETURN
         IF EST.OM.PRICE.M<1,QPTR> # S$VALUE AND S$VALUE # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = S$VALUE
            GOSUB 20100
            GOSUB 20110
            GOSUB 20210
         END
         EST.OM.PRICE.M<1,QPTR> = S$VALUE
      CASE MOD(QPTR + 3,"3") = 0
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            S$DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
            EST.OM.PRICE.M<1,QPTR> = S$DEFAULT
         END ELSE
            S$DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
         SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;47
         SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;47;RETURN
         IF EST.OM.PRICE.M<1,QPTR> # S$VALUE AND S$VALUE # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = S$VALUE
            GOSUB 20100
            GOSUB 20110
            GOSUB 20210
         END
         EST.OM.PRICE.M<1,QPTR> = S$VALUE
   END CASE
   RETURN
*
*---- Print Additional Price Per Thousand Flag
*
10300 *
*T24338 v
   IF EST.PRT.PRICE.THOU = "" THEN EST.PRT.PRICE.THOU = "Y"
   S$DATA(51)<S$SCR> = EST.PRT.PRICE.THOU
   SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;51
*T24338 ^
   SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;51
*T24338 v
   S$DEFAULT = EST.PRT.PRICE.THOU
*T24338 ^
   SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;51;RETURN
   EST.PRT.PRICE.THOU = S$VALUE
   RETURN
*
*---- Print Price Per Unit of Measure
*
10400 *
*T24338 v
   IF EST.PRT.PRICE.UOM = "" THEN EST.PRT.PRICE.UOM = "M"
   S$DATA(52)<S$SCR> = EST.PRT.PRICE.UOM
   SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;52
*T24338 ^
   SCREEN FIELD;EST.SUMMARY.MARKUP.MAINT;52
*T24338 v
   S$DEFAULT = EST.PRT.PRICE.UOM
*T24338 ^
   SCREEN INPUT;EST.SUMMARY.MARKUP.MAINT;52;RETURN
   IF EST.PDEF.TYPE = 'RES' THEN
      IF S$VALUE = 'CWT' OR S$VALUE = 'MSF' THEN
         ERRMSG = "Invalid unit of measure for Roll Label estimate."
         GOSUB 90000
         GOTO 10400
      END
   END
   EST.PRT.PRICE.UOM = S$VALUE
   GOSUB 20500
   CHANGE.FLAG = 0
   RETURN
*
*---- DUMMY
*
19990 *
   RETURN
*
*---- Calculate Markup Percent
*
20100 *
   BEGIN CASE
*         CASE QPTR = 1
      CASE MOD(QPTR + 3,"3") = 1
         EST.FINAL.PRICE<1,QPTR> = INT(EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000)
*            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 10000 + .5)
         IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
         END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
         S$DATA(39)<S$SCR> = EST.OM.PCT<1,QPTR>
*T26138 v
*        S$DATA(42)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(42)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         GOSUB 20400
         GOSUB 20410
      CASE MOD(QPTR + 3,"3") = 2
         EST.FINAL.PRICE<1,QPTR> = EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000
         IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
         END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
         S$DATA(40)<S$SCR> = EST.OM.PCT<1,QPTR>
*T26138 v
*        S$DATA(43)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(43)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         GOSUB 20400
         GOSUB 20410
      CASE MOD(QPTR + 3,"3") = 0
         EST.FINAL.PRICE<1,QPTR> = EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000
         IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
         END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
         S$DATA(41)<S$SCR> = EST.OM.PCT<1,QPTR>
*T26138 v
*        S$DATA(44)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(44)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         GOSUB 20400
         GOSUB 20410
   END CASE
   RETURN
*
*---- Display Markup Percent
*
20110 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;39
      CASE MOD(QPTR + 3,"3") = 2
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;40
      CASE MOD(QPTR + 3,"3") = 0
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;41
   END CASE
   RETURN
*
*---- Calculate Final Price
*
20200 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
*T26138 v
*        S$DATA(42)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(42)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
      CASE MOD(QPTR + 3,"3") = 2
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
*T26138 v
*        S$DATA(43)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(43)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
      CASE MOD(QPTR + 3,"3") = 0
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
*T26138 v
*        S$DATA(44)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
         S$DATA(44)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
      CASE 1
         EST.FINAL.PRICE<1,1> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,1>,'MD4') + .005 / 100))
         EST.FINAL.PRICE<1,2> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,2>,'MD4') + .005 / 100))
         EST.FINAL.PRICE<1,3> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,3>,'MD4') + .005 / 100))
*T26138 v
*        S$DATA(42)<S$SCR> = EST.FINAL.PRICE<1,1>
*        S$DATA(43)<S$SCR> = EST.FINAL.PRICE<1,2>
*        S$DATA(44)<S$SCR> = EST.FINAL.PRICE<1,3>
         S$DATA(42)<S$SCR> = OCONV(EST.FINAL.PRICE<1,1>,'MD2,')
         S$DATA(43)<S$SCR> = OCONV(EST.FINAL.PRICE<1,2>,'MD2,')
         S$DATA(44)<S$SCR> = OCONV(EST.FINAL.PRICE<1,3>,'MD2,')
*T26138 ^
   END CASE
   RETURN
*
*---- Display Final Price
*
20210 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;42
      CASE MOD(QPTR + 3,"3") = 2
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;43
      CASE MOD(QPTR + 3,"3") = 0
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;44
      CASE 1
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;42
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;43
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;44
   END CASE
   RETURN
*
*---- Calculate  Price per Thousand
*
20300 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
         S$DATA(45)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;45
      CASE MOD(QPTR + 3,"3") = 2
         EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
         S$DATA(46)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;46
      CASE MOD(QPTR + 3,"3") = 0
         EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
         S$DATA(47)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;47
   END CASE
   RETURN
*
*---- Calculate Additional Price per Thousand
*
20400 *
   TOTAL.VSALE=""
   TOTAL.VCOST=""
   DC=COUNT(EST.DEPT.COMP,VM)+(EST.DEPT.COMP#"")
   FOR DP=1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      QTY=FIELD(ESTD.ID,"!",3)
      LOCATE QTY IN EST.QTY<1>,1 SETTING P ELSE P=0
      IF P > 0 THEN
         TOTAL.VSALE<1,P>=TOTAL.VSALE<1,P>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.VCOST<1,P>=TOTAL.VCOST<1,P>+EST.DEPT.COMP.VCOST<1,DP>
      END
   NEXT DP
   EST.COST.THOU<1,QPTR> = ''
   EST.PRICE.THOU<1,QPTR> = ''
   EP = QPTR
   PRICE.THOU.MKUP = TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
   EST.PRICE.THOU<1,EP>=INT(PRICE.THOU.MKUP/(EST.QTY<1,EP>/1000)+0.5)
   EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
   RETURN
*
*---- Display Price Per Additional Thousand
*
20410 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         S$DATA(48)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;48
      CASE MOD(QPTR + 3,"3") = 2
         S$DATA(49)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;49
      CASE MOD(QPTR + 3,"3") = 0
         S$DATA(50)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;50
   END CASE
   RETURN
*
*---- Calculate Price per UOM
*
20500 *
   BEGIN CASE
      CASE EST.PRT.PRICE.UOM = 'EA'
         ECNT=COUNT(EST.QTY,VM)+1
         FOR EP=1 TO ECNT
            EST.PRICE.UOM<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP>  * 100 + .5)
         NEXT EP
      CASE EST.PRT.PRICE.UOM = 'MSF'
         WIDTH = EST.PROD.TS.WIDTH<1,1,1>
         XXLENGTH = EST.PROD.TS.LENGTH<1,1,1>
         PGS=EST.PROD.PG.CNT<1,1,1>
         SQ.FT=OCONV(WIDTH,'MD4') * OCONV(XXLENGTH,'MD4') / 144 * PGS
         ECNT=COUNT(EST.QTY,VM)+1
         FOR EP=1 TO ECNT
            EST.PRICE.UOM<1,EP> = INT(OCONV(EST.FINAL.PRICE<1,EP>,'MD2') / (EST.QTY<1,EP> * SQ.FT / 1000) * 100 + .5)
         NEXT EP
      CASE EST.PRT.PRICE.UOM = 'CWT'
         TOT.WGT = ''
         QCNT = DCOUNT(EST.QTY,VM)
         FOR QPTR = 1 TO QCNT
            PROD.QTY = EST.QTY<1,QPTR>
            TOT.WGT<1,QPTR> = 0
            FOR C = 1 TO EST.COMPONENT.CNT
               IF EST.PROD.OS.TYPE<1,C> = "" THEN GOTO 20590
               IF EST.PROD.OS.TYPE<1,C> # "S" THEN
                  MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:EST.PROD.PRESS.ID<1,C> ELSE
                     ERRMSG = "Invalid press ID - ":EST.PROD.PRESS.ID<1,C>
                     GOSUB 90000
                     GOTO 20590
                  END
               END
               WEB.CNT = EST.PROD.WEB.CNT<1,C>+0
               IF WEB.CNT = 0 THEN WEB.CNT = 1
               FOR MPTR = 1 TO WEB.CNT
                  MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP, CONO:EST.PROD.OS.USAGE<1,C,MPTR> ELSE
                     ERRMSG = "Invalid paper group"
                     GOSUB 90000
                     GOTO 20580
                  END
                  BW = EST.PROD.BASIS.WT<1,C,MPTR>
                  BSW = ESTPG.WIDTH/10000
                  BSL = ESTPG.LENGTH/10000
                  PSW = EST.PROD.PS.WIDTH<1,C,MPTR>/10000
                  IF EST.PROD.OS.TYPE<1,C> = "S" THEN
                     MAT EQUIPMENT.REC = ""
                     PSL = EST.PROD.PS.LENGTH<1,C,MPTR>/10000
                  END ELSE
                     PSL = EQP.PRESS.CUTOFF.LEN/10000
                  END
                  M.WEIGHT = 2 * BW * (PSW * PSL) / (BSW * BSL)
                  M.WEIGHT = INT(M.WEIGHT * 100 + 0.5) / 100
                  NUMBER.UP = EST.PROD.NO.UP<1,C,1>+0
                  IF NUMBER.UP = 0 THEN NUMBER.UP = 1
                  FORMS = EST.PROD.FORMS<1,C,1>+0
                  IF FORMS = 0 THEN FORMS = 1
                  TOT.SHT = INT(PROD.QTY / NUMBER.UP * FORMS + 0.99)
                  TOT.WGT<1,QPTR> = TOT.WGT<1,QPTR> + (TOT.SHT / 1000 * M.WEIGHT)
20580          NEXT MPTR
20590       NEXT C
            EST.PRICE.UOM<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / (TOT.WGT<1,QPTR> / 100))
         NEXT QPTR
      CASE EST.PRT.PRICE.UOM = 'M'
         ECNT = DCOUNT(EST.QTY,VM)
         FOR EP = 1 TO ECNT
            EST.PRICE.UOM<1,EP> = EST.OM.PRICE.M<1,EP>
         NEXT EP
   END CASE
   RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
   SCREEN CLEAR;EST.SUMMARY.MARKUP.MAINT;D
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   CNT = DCOUNT(EST.QTY,VM)
   IF CNT > START.REF.NO + 2 THEN
      QPTR = START.REF.NO
      GOSUB 70500
      QPTR = START.REF.NO + 1
      GOSUB 70500
      QPTR = START.REF.NO + 2
      GOSUB 70500
   END ELSE
      FOR QPTR = START.REF.NO TO CNT
         GOSUB 70500
      NEXT QPTR
   END
   GOSUB 80000
   RETURN
*
*---- Calculate Target Sales
*
70000 *
   TOTAL.SALE = ''
   CALC.LB.PCT.SALE = ''
   CALC.MT.PCT.SALE = ''
   CALC.OS.PCT.SALE = ''
   CALC.SP.PCT.SALE = ''
   CALC.MS.PCT.SALE = ''
   CALC.TOT.PCT.SALE = ''
   MAT SAVE.CSUM.REC = ''
   QCNT = DCOUNT(EST.QTY,VM)
   FOR QPTR = 1 TO QCNT
      IF EST.PDEF.TYPE = 'RL' THEN
         CALL EST.RES.QTY.GEN (CONO,"A",EST.KEY,"ALL")
      END ELSE
         CALL EST.QTY.GEN (CONO,"A",EST.KEY,"ALL")
      END
      QSEL = EST.QTY<1,QPTR>
      MAT CSUM.REC = ''
      CALC.LB.PCT.SALE<1,QPTR> = ''
      CALC.MT.PCT.SALE<1,QPTR> = ''
      CALC.OS.PCT.SALE<1,QPTR> = ''
      CALC.SP.PCT.SALE<1,QPTR> = ''
      CALC.MS.PCT.SALE<1,QPTR> = ''
      CALC.TOT.PCT.SALE<1,QPTR> = ''
      IF EST.PDEF.TYPE = 'RL' THEN
         CALL EST.RES.COST.TYPE.SUB (CONO,EST.KEY,'ALL','ALL',QSEL,MAT CSUM.REC)
      END ELSE
         CALL EST.COST.TYPE.SUB (CONO,EST.KEY,'ALL','ALL',QSEL,MAT CSUM.REC)
      END
      IF CSUM.LB.SALE # '' THEN
         CALC.LB.PCT.SALE<1,QPTR> = CSUM.LB.SALE / CSUM.TOT.SALE
      END
      IF CSUM.MT.SALE # '' THEN
         CALC.MT.PCT.SALE<1,QPTR> = CSUM.MT.SALE / CSUM.TOT.SALE
      END
      IF CSUM.OS.SALE # '' THEN
         CALC.OS.PCT.SALE<1,QPTR> = CSUM.OS.SALE / CSUM.TOT.SALE
      END
      IF CSUM.SP.SALE # '' THEN
         CALC.SP.PCT.SALE<1,QPTR> = CSUM.SP.SALE / CSUM.TOT.SALE
      END
      IF CSUM.MS.SALE # '' THEN
         CALC.MS.PCT.SALE<1,QPTR> = CSUM.MS.SALE / CSUM.TOT.SALE
      END
      CALC.TOT.PCT.SALE<1,QPTR> = ICONV(CALC.TOT.PCT.SALE<1,QPTR>,"MD4")
      CALC.LB.PCT.SALE<1,QPTR> = ICONV(CALC.LB.PCT.SALE<1,QPTR>,"MD4")
      CALC.MS.PCT.SALE<1,QPTR> = ICONV(CALC.MS.PCT.SALE<1,QPTR>,"MD4")
      CALC.SP.PCT.SALE<1,QPTR> = ICONV(CALC.SP.PCT.SALE<1,QPTR>,"MD4")
      CALC.OS.PCT.SALE<1,QPTR> = ICONV(CALC.OS.PCT.SALE<1,QPTR>,"MD4")
      CALC.MT.PCT.SALE<1,QPTR> = ICONV(CALC.MT.PCT.SALE<1,QPTR>,"MD4")
      SAVE.LB.SALE<1,QPTR> = CSUM.LB.SALE
      SAVE.MT.SALE<1,QPTR> = CSUM.MT.SALE
      SAVE.OS.SALE<1,QPTR> = CSUM.OS.SALE
      SAVE.SP.SALE<1,QPTR> = CSUM.SP.SALE
      SAVE.MS.SALE<1,QPTR> = CSUM.MS.SALE
      TOTAL.SALE<1,QPTR> = CSUM.TOT.SALE
   NEXT QPTR
   RETURN
*
*---- Display target Sales
*
70500 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         S$DATA(57)<S$SCR> = QPTR
*T26138 v
*        S$DATA(3)<S$SCR> = EST.QTY<1,QPTR>
*        S$DATA(6)<S$SCR> = SAVE.LB.SALE<1,QPTR>
*        S$DATA(7)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(12)<S$SCR> = SAVE.MT.SALE<1,QPTR>
*        S$DATA(13)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(18)<S$SCR> = SAVE.OS.SALE<1,QPTR>
*        S$DATA(19)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(24)<S$SCR> = SAVE.SP.SALE<1,QPTR>
*        S$DATA(25)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(30)<S$SCR> = SAVE.MS.SALE<1,QPTR>
*        S$DATA(31)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(36)<S$SCR> = TOTAL.SALE<1,QPTR>
*        S$DATA(39)<S$SCR> = EST.OM.PCT<1,QPTR>
*        S$DATA(45)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
*        S$DATA(48)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         S$DATA(3)<S$SCR> = OCONV(EST.QTY<1,QPTR>,'MD0,')
         S$DATA(6)<S$SCR> = OCONV(SAVE.LB.SALE<1,QPTR>,'MD2,')
         S$DATA(7)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(12)<S$SCR> = OCONV(SAVE.MT.SALE<1,QPTR>,'MD2,')
         S$DATA(13)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(18)<S$SCR> = OCONV(SAVE.OS.SALE<1,QPTR>,'MD2,')
         S$DATA(19)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(24)<S$SCR> = OCONV(SAVE.SP.SALE<1,QPTR>,'MD2,')
         S$DATA(25)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(30)<S$SCR> = OCONV(SAVE.MS.SALE<1,QPTR>,'MD2,')
         S$DATA(31)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(36)<S$SCR> = OCONV(TOTAL.SALE<1,QPTR>,'MD2,')
         S$DATA(39)<S$SCR> = EST.OM.PCT<1,QPTR>
         S$DATA(45)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         S$DATA(48)<S$SCR> = EST.PRICE.THOU<1,QPTR>
*T26138 ^
         IF EST.FINAL.PRICE<1,QPTR> = '' THEN
            GOSUB 20200
         END ELSE
*T26138 v
*           S$DATA(42)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
            S$DATA(42)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         END
      CASE MOD(QPTR + 3,"3") = 2
         S$DATA(56)<S$SCR> = QPTR
*T26138 v
*        S$DATA(4)<S$SCR> = EST.QTY<1,QPTR>
*        S$DATA(8)<S$SCR> = SAVE.LB.SALE<1,QPTR>
*        S$DATA(9)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(14)<S$SCR> = SAVE.MT.SALE<1,QPTR>
*        S$DATA(15)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(20)<S$SCR> = SAVE.OS.SALE<1,QPTR>
*        S$DATA(21)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(26)<S$SCR> = SAVE.SP.SALE<1,QPTR>
*        S$DATA(27)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(32)<S$SCR> = SAVE.MS.SALE<1,QPTR>
*        S$DATA(33)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(37)<S$SCR> = TOTAL.SALE<1,QPTR>
*        S$DATA(40)<S$SCR> = EST.OM.PCT<1,QPTR>
*        S$DATA(46)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
*        S$DATA(49)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         S$DATA(4)<S$SCR> = OCONV(EST.QTY<1,QPTR>,'MD0,')
         S$DATA(8)<S$SCR> = OCONV(SAVE.LB.SALE<1,QPTR>,'MD2,')
         S$DATA(9)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(14)<S$SCR> = OCONV(SAVE.MT.SALE<1,QPTR>,'MD2,')
         S$DATA(15)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(20)<S$SCR> = OCONV(SAVE.OS.SALE<1,QPTR>,'MD2,')
         S$DATA(21)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(26)<S$SCR> = OCONV(SAVE.SP.SALE<1,QPTR>,'MD2,')
         S$DATA(27)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(32)<S$SCR> = OCONV(SAVE.MS.SALE<1,QPTR>,'MD2,')
         S$DATA(33)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(37)<S$SCR> = OCONV(TOTAL.SALE<1,QPTR>,'MD2,')
         S$DATA(40)<S$SCR> = EST.OM.PCT<1,QPTR>
         S$DATA(46)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         S$DATA(49)<S$SCR> = EST.PRICE.THOU<1,QPTR>
*T26138 ^
         IF EST.FINAL.PRICE<1,QPTR> = '' THEN
            GOSUB 20200
         END ELSE
*T26138 v
*           S$DATA(43)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
            S$DATA(43)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         END
      CASE MOD(QPTR + 3,"3") = 0
         S$DATA(55)<S$SCR> = QPTR
*T26138 v
*        S$DATA(5)<S$SCR> = EST.QTY<1,QPTR>
*        S$DATA(10)<S$SCR> = SAVE.LB.SALE<1,QPTR>
*        S$DATA(11)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(16)<S$SCR> = SAVE.MT.SALE<1,QPTR>
*        S$DATA(17)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(22)<S$SCR> = SAVE.OS.SALE<1,QPTR>
*        S$DATA(23)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(28)<S$SCR> = SAVE.SP.SALE<1,QPTR>
*        S$DATA(29)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(34)<S$SCR> = SAVE.MS.SALE<1,QPTR>
*        S$DATA(35)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
*        S$DATA(38)<S$SCR> = TOTAL.SALE<1,QPTR>
*        S$DATA(41)<S$SCR> = EST.OM.PCT<1,QPTR>
*        S$DATA(47)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
*        S$DATA(50)<S$SCR> = EST.PRICE.THOU<1,QPTR>
         S$DATA(5)<S$SCR> = OCONV(EST.QTY<1,QPTR>,'MD0,')
         S$DATA(10)<S$SCR> = OCONV(SAVE.LB.SALE<1,QPTR>,'MD2,')
         S$DATA(11)<S$SCR> = OCONV(CALC.LB.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(16)<S$SCR> = OCONV(SAVE.MT.SALE<1,QPTR>,'MD2,')
         S$DATA(17)<S$SCR> = OCONV(CALC.MT.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(22)<S$SCR> = OCONV(SAVE.OS.SALE<1,QPTR>,'MD2,')
         S$DATA(23)<S$SCR> = OCONV(CALC.OS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(28)<S$SCR> = OCONV(SAVE.SP.SALE<1,QPTR>,'MD2,')
         S$DATA(29)<S$SCR> = OCONV(CALC.SP.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(34)<S$SCR> = OCONV(SAVE.MS.SALE<1,QPTR>,'MD2,')
         S$DATA(35)<S$SCR> = OCONV(CALC.MS.PCT.SALE<1,QPTR>,"MD2")
         S$DATA(38)<S$SCR> = OCONV(TOTAL.SALE<1,QPTR>,'MD2,')
         S$DATA(41)<S$SCR> = EST.OM.PCT<1,QPTR>
         S$DATA(47)<S$SCR> = EST.OM.PRICE.M<1,QPTR>
         S$DATA(50)<S$SCR> = EST.PRICE.THOU<1,QPTR>
*T26138 ^
         IF EST.FINAL.PRICE<1,QPTR> = '' THEN
            GOSUB 20200
         END ELSE
*T26138 v
*           S$DATA(44)<S$SCR> = EST.FINAL.PRICE<1,QPTR>
            S$DATA(44)<S$SCR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
*T26138 ^
         END
   END CASE
   RETURN
*
*---- LOAD SCREEN VALUES
*
80000 *
   S$DATA(1)<S$SCR> = EST.KEY
   S$DATA(2)<S$SCR> = EST.COMMENTS<1,1>
   S$DATA(51)<S$SCR> = EST.PRT.PRICE.THOU
   S$DATA(52)<S$SCR> = EST.PRT.PRICE.UOM
   SCREEN DISPLAY;EST.SUMMARY.MARKUP.MAINT;ALL
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999 *
   SCREEN CLEAR;EST.SUMMARY.MARKUP.MAINT;D
   RETURN
END
