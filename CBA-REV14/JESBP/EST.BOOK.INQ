*COPY>CPYLIB>SCOMMON1
***************************************************************************
*
* REVISION - [07.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.BOOK.INQ
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/28/87
*
* DESCRIPTION
*
* This program is for inquiry of a booked estimate.
*
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
***************************************************************************
*
*--- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
  DIM MAST.REC(15)
  EQU MAST.EST        TO MAST.REC(1)
  EQU MAST.STATUS     TO MAST.REC(2)
  EQU MAST.EST.SUBS   TO MAST.REC(3)
  EQU MAST.JOB        TO MAST.REC(4)
  EQU MAST.CUST       TO MAST.REC(5)
  EQU MAST.CUST.NAME  TO MAST.REC(6)
  EQU MAST.BOOK.EST   TO MAST.REC(7)
  EQU MAST.BOOK.COMP  TO MAST.REC(8)
  EQU MAST.BOOK.JOB   TO MAST.REC(9)
  EQU MAST.BOOK.QTY   TO MAST.REC(10)
*
*--- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;STOP
  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;STOP
  OPEN "","SECURITY" TO SECURITY ELSE ERRMSG="CANNOT OPEN SECURITY FILE";GOSUB 90000;STOP
  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX FILE";GOSUB 90000;STOP
  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CANNOT OPEN CUSTOMER FILE";GOSUB 90000;STOP
  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG="CANNOT OPEN CUSTOMER.XREF FILE";GOSUB 90000;STOP
  OPEN "","JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;STOP
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN JES.SCREENS FILE";GOSUB 90000;STOP
  OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG="CANNOT OPEN ESTIMATE FILE";GOSUB 90000;STOP
*
*--- INITIALIZATION
*
  CONO=""
  CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR=1
  SCREEN DEFINE;EST.BOOK.INQ
  SCREEN FORMAT
  SCREEN COUNT;EST.BOOK.INQ;9
  LINE.COUNT=S$LCNT
  LINE.SPACE=S$LSPC
  MAT GEN.XREF.REC=""
  ERRMSG=""
  UNKNOWN=STR("?",30)
  TODAY = DATE()
  TRUE=1 ; FALSE=0
  GOTO 110
*
*--- MAIN PROCESSING
*
100*
  RELEASE
  SCREEN CLEAR
110*
  MAT EST.REC = ""
  MAT JOB.REC = ""
  EST.KEY = ""
  MAT MAST.REC = ""
  DUMMY = ""
  CNT = 0
  CURR.REF.NO=""
  S$DATA(1)<S$SCR>=""
  SCREEN FIELD;EST.BOOK.INQ;1
  SCREEN INPUT;EST.BOOK.INQ;1
  BEGIN CASE
    CASE S$VALUE = "END"
      GOTO 99999
    CASE S$VALUE # ""
      EST.KEY = S$VALUE
      MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE
        ERRMSG = "Estimate not on file. Try again! "
        GOSUB 90000; GOTO 110
      END
      BEGIN CASE
        CASE EST.STATUS<1,1> = "LOST"
          ERRMSG = "This estimate is lost"; GOSUB 90000; GOTO 110
      END CASE
      IF EST.MASTER # "" AND EST.MASTER # EST.KEY THEN
        MAST.EST = EST.MASTER
        READ DUMMY FROM ESTIMATE, CONO:MAST.EST ELSE
          ERRMSG = "Master estimate is not on file. Try again! "
          GOSUB 90000; GOTO 110
        END
        MAST.STATUS = DUMMY<EST.MASTER.STATUS.ATT,1>
        MAST.JOB = DUMMY<EST.MASTER.JOB.ATT>
        DUMMY = ""
        MAST.CUST = EST.CUST
        IF EST.CUST = "P" THEN
          MAST.CUST.NAME = EST.CUST.NAME
        END ELSE
          MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
            MAT CUST.REC = ""; CUST.NAME = UNKNOWN
          END
          MAST.CUST.NAME = CUST.NAME
        END
        MP = 0
        JCNT = COUNT(EST.BOOK.JOB,VM) + (EST.BOOK.JOB # "")
        FOR JP = 1 TO JCNT
          MP = MP + 1
          MAST.BOOK.EST<1,MP> = EST.KEY
          MAST.BOOK.JOB<1,MP> = EST.BOOK.JOB<1,JP>
          MAST.BOOK.COMP<1,MP> = EST.BOOK.COMP<1,JP,1>
          CC = COUNT(EST.BOOK.COMP<1,JP>,SM)+1
          FOR CP = 2 TO CC
            MAST.BOOK.COMP<1,MP> = MAST.BOOK.COMP<1,MP>:",":EST.BOOK.COMP<1,JP,CP>
          NEXT CP
          MAST.BOOK.QTY<1,MP> = EST.BOOK.QTY
        NEXT JP
      END ELSE
        MAST.EST = EST.KEY
        MAST.STATUS = EST.STATUS<1,1>
        MAST.JOB = EST.JOB
        MAST.CUST = EST.CUST
        IF EST.CUST = "P" THEN
          MAST.CUST.NAME = EST.CUST.NAME
        END ELSE
          MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
            MAT CUST.REC = ""; CUST.NAME = UNKNOWN
          END
          MAST.CUST.NAME = CUST.NAME
        END
        MAST.EST.SUBS = EST.SUBS
        MP = 0
        JCNT = COUNT(EST.BOOK.JOB,VM) + (EST.BOOK.JOB # "")
        FOR JP = 1 TO JCNT
          MP = MP + 1
          MAST.BOOK.EST<1,MP> = EST.KEY
          MAST.BOOK.JOB<1,MP> = EST.BOOK.JOB<1,JP>
          MAST.BOOK.COMP<1,MP> = EST.BOOK.COMP<1,JP,1>
          CC = COUNT(EST.BOOK.COMP<1,JP>,SM)+1
          FOR CP = 2 TO CC
            MAST.BOOK.COMP<1,MP> = MAST.BOOK.COMP<1,MP>:",":EST.BOOK.COMP<1,JP,CP>
          NEXT CP
          MAST.BOOK.QTY<1,MP> = EST.BOOK.QTY
        NEXT JP
        IF EST.SUBS # "" THEN
          SCREEN FIELD;EST.BOOK.INQ;16
          SCREEN INPUT;EST.BOOK.INQ;16
          IF S$VALUE = "Y" THEN
            DUMMY = ""
            FOR I = 1 TO EST.REC.SIZE
              DUMMY<I> = EST.REC(I)
            NEXT I
            ECNT = COUNT(MAST.EST.SUBS,VM) + (MAST.EST.SUBS # "")
            FOR I = 1 TO ECNT
              MATREAD EST.REC FROM ESTIMATE, CONO:MAST.EST.SUBS<1,I> ELSE GOTO 119
              JCNT = COUNT(EST.BOOK.JOB,VM) + (EST.BOOK.JOB # "")
              FOR JP = 1 TO JCNT
                MP = MP + 1
                MAST.BOOK.EST<1,MP> = MAST.EST.SUBS<1,I>
                MAST.BOOK.JOB<1,MP> = EST.BOOK.JOB<1,JP>
                MAST.BOOK.COMP<1,MP> = EST.BOOK.COMP<1,JP,1>
                CC = COUNT(EST.BOOK.COMP<1,JP>,SM)+1
                FOR CP = 2 TO CC
                  MAST.BOOK.COMP<1,MP> = MAST.BOOK.COMP<1,MP>:",":EST.BOOK.COMP<1,JP,CP>
                NEXT CP
                MAST.BOOK.QTY<1,MP> = EST.BOOK.QTY
              NEXT JP
119         NEXT I
            MAT EST.REC = ""
            FOR I = 1 TO EST.REC.SIZE
              EST.REC(I) = DUMMY<I>
            NEXT I
            DUMMY = ""
          END
        END
      END
    CASE 1
      ERRMSG = "INVALID RESPONSE"
      GOSUB 90000
      GOTO 110
  END CASE
  GOSUB 80000
  CNT = COUNT(MAST.BOOK.EST,VM) + (MAST.BOOK.EST # "")
  REF.NO = 1
  GOSUB 80200
*
*--- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.BOOK.INQ;6
  SCREEN INPUT;EST.BOOK.INQ;6
  OPTION=S$VALUE
  BEGIN CASE
    CASE OPTION="E" OR OPTION="END" OR OPTION = ""
      GOTO 100
    CASE OPTION="S"
      REF.NO=CURR.REF.NO+LINE.COUNT
      IF REF.NO > CNT THEN REF.NO = 1
      GOSUB 80200
    * T25978 v
    CASE OPTION = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 80200
    CASE OPTION = 'ST'
      REF.NO = 1
      GOSUB 80200
    CASE OPTION = 'SB'
      REF.NO = CNT
      GOSUB 80200
    * T25978 ^
  END CASE
  GOTO 80200
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- REFORMAT SCREEN
*
550*
  SCREEN FORMAT
  GOSUB 80100
560*
  CURR.REF.NO=""
  REF.NO=1
  GOSUB 80200
  RETURN
*
*--- LOAD SCREEN VALUES
*
80000*
*
*--- TOP PART OF THE SCREEN
*
  S$DATA(1)<S$SCR>=EST.KEY
  S$DATA(2)<S$SCR>=EST.STATUS<1,1>
  S$DATA(13)<S$SCR>=MAST.EST
  S$DATA(14)<S$SCR>=MAST.STATUS
  S$DATA(3)<S$SCR>=MAST.CUST
  S$DATA(4)<S$SCR>=MAST.CUST.NAME
  S$DATA(15)<S$SCR>=MAST.JOB
*
*--- BOTTOM PART OF THE SCREEN
*
  S$DATA(9)<S$SCR>=MAST.BOOK.EST
  S$DATA(10)<S$SCR>=MAST.BOOK.COMP
  S$DATA(11)<S$SCR>=MAST.BOOK.JOB
  S$DATA(12)<S$SCR>=MAST.BOOK.QTY
80100*
  SCREEN DISPLAY;EST.BOOK.INQ;ALL
  RETURN
*
*--- SCROLL INTERNAL COMMENTS
*
80200*
  START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO=CURR.REF.NO THEN RETURN
  CURR.REF.NO=START.REF.NO
  S$VAL=START.REF.NO
  S$CNT=CNT
  SCREEN MULTI;EST.BOOK.INQ;C;8;9;11;12;10
  RETURN
*
*--- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*    PRINT @(0,23):CL:ERRMSG:
*    INPUT REPLY:
*    PRINT @(0,23):CL:
*    RETURN
*
*--- END OF PROGRAM
*
99999*
*    PRINT @(-1):
END
