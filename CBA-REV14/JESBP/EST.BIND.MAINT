   SUBROUTINE EST.BIND.MAINT (CONO, ACTION, EST.KEY, STATUS, COMP)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.BIND.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/25/86
*
* DESCRIPTION
*
* This program is used to capture bindery related data.
*
*T31351 gat 07/20/1998 * Fix problem with data left in screen and showing
*                        in EST.DEPT.MAINT in error.
*T27924 cmykleb 03/17/2004 * Change screen and following screens to
*                            calculate at the component level.
*T29032 cmyklebu 01/02/2007 * Move pgm from rev12 to rev14.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.IMPO
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN FILES
*
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      MAT COMP.REC = ""
   END
   OPEN "","ESTIMATE.IMPO" TO ESTIMATE.IMPO ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.IMPO FILE"
      GOSUB 90000
      GOTO 99999
   END
*T29032 v
*  OPEN "","REV12A.SCREENS" TO REV12A.SCREENS ELSE
*     ERRMSG = "CANNOT OPEN REV12A.SCREENS FILE"
*     GOSUB 90000
*     GOTO 99999
*  END
   OPEN "","JES.SCREENS" TO JES.SCREENS ELSE
      ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
      GOSUB 90000
      GOTO 99999
   END
*T29032 ^
   MATREAD IMPO.REC FROM ESTIMATE.IMPO, CONO:"IMPO" ELSE
      MAT IMPO.REC = ""
   END
*
*---- INITIALIZATION
*
*T29032 v
*  SCREEN DEFINE;EST.BIND.MAINT;REV12A.SCREENS
   SCREEN DEFINE;EST.BIND.MAINT;JES.SCREENS
*T29032 ^
   SCREEN FORMAT
   SCREEN COUNT;;25
   FOLD.COUNT = S$LCNT
   FOLD.CNT = 0
   CURR.FOLD.REF.NO = ""
   SCREEN COUNT;;41
   CUT.COUNT = S$LCNT
   CUT.CNT = 0
   CURR.CUT.REF.NO = ""
   REF.NO = 1
   CASE.RECALC = 0
*T27924 v
*  IF ACTION = "M" AND EST.BIND.TP.WIDTH = "" THEN NEW.REC = 1 ELSE NEW.REC = 0
   QTY.LINE.COUNT = 3
   QCNT = DCOUNT(EST.QTY<1>,VM)
*  COMP = 1
*  IF EST.BIND.US.WIDTH # '' THEN
*     BCNT = DCOUNT(EST.BIND.US.WIDTH<1>,VM)
*     DONE = 0
*     FOR B = 1 TO BCNT UNTIL DONE
*        IF EST.BIND.US.WIDTH<1,B> # '' THEN COMP = B ; DONE = 1
*     NEXT B
*     IF COMP = '' THEN COMP = 1
*  END
*T27924 ^
*
*----- MAIN PROCESSING
*
100 *
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;;1
*T27924 v
   S$DATA(60)<S$SCR> = COMP
   SCREEN DISPLAY;;60
   IF ACTION = "M" AND EST.BIND.TP.WIDTH<1,COMP> = "" THEN NEW.REC = 1 ELSE NEW.REC = 0
   IF EST.BIND.FOLD.CCTR<1,COMP> # "" THEN NEW.REC = 0
*T27924 ^
120 *
   IF NEW.REC THEN
*T27924 v
*T27924 v
*     FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR,VM)
      FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR<1,COMP>,SM)
*T27924 ^
      REF.NO = FOLD.CNT + 1
      IF REF.NO GT COMP THEN REF.NO = COMP
      GOSUB 80000
      GOSUB 50000
      GOSUB 12000
*T27924 ^
      FOR FLD = 1 TO 10
         ON FLD GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900
         IF S$VALUE = "END" AND FLD = 1 THEN GOTO 121 ; * T27924
         IF S$VALUE = "END" THEN GOTO 99999
      NEXT FLD
121 *
*T27924 v
*     FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR,VM)
      FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR<1,COMP>,SM)
*T27924 ^
      OPT1 = "A"
      GOSUB 540
*T27924 v
*     CUT.CNT = DCOUNT(EST.BIND.CUT.CCTR,VM)
      CUT.CNT = DCOUNT(EST.BIND.CUT.CCTR<1,COMP>,SM)
*T27924 ^
      OPT2 = "A"
      GOSUB 580
      NEW.REC = 0
   END ELSE
      GOSUB 70000
*T27924 v
*     FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR,VM)
      FOLD.CNT = DCOUNT(EST.BIND.FOLD.CCTR<1,COMP>,SM)
*T27924 ^
      GOSUB 80000
      REF.NO = ""
      CURR.FOLD.REF.NO = ""
      GOSUB 50000
      GOSUB 12000
*T27924 v
*     CUT.CNT = DCOUNT(EST.BIND.CUT.CCTR,VM)
      CUT.CNT = DCOUNT(EST.BIND.CUT.CCTR<1,COMP>,SM)
*T27924 ^
      GOSUB 80100
      REF.NO = ""
      CURR.CUT.REF.NO = ""
      GOSUB 50100
   END
*
*---- GET OPERATOR REQUEST
*
500 *
   OPT1 = ""; OPT2 = ""
   BEGIN CASE
      CASE CO.JES.PARAM<1,10> = "N"
         SCREEN FIELD;;55
         SCREEN INPUT;;55
      CASE 1
         SCREEN FIELD;;51
         SCREEN INPUT;;51
   END CASE
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "E" OR OPTION = "END"
         IF CO.JES.PARAM<1,10> = "Y" AND CASE.RECALC THEN
            SCREEN FIELD;;56
            SCREEN INPUT;;56
            IF S$VALUE = "" OR S$VALUE = "N" THEN GOTO 500
         END
         GOTO 99999
      CASE NUM(OPTION) AND OPTION # ""
         BEGIN CASE
            CASE OPTION <= 10
               IF ACTION = "M" THEN
                  ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900
               END ELSE
                  ERRMSG = "Invalid selection in inquiry mode! "
                  GOSUB 90000
               END
            CASE OPTION = 15
               GOSUB 540
            CASE OPTION = 16
               GOSUB 580
         END CASE
      CASE OPTION = "C"
         CASE.RECALC = 0
         S$SCR = S$SCR + 1
*T27924 v
*        CALL EST.CASE.MAINT.1A (CONO, ACTION, EST.KEY, STATUS)
         CALL EST.CASE.MAINT.1A (CONO, ACTION, EST.KEY, STATUS, COMP)
*T27924 ^
         SCREEN CLOSE
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 70000
         REF.NO = ""
         CURR.FOLD.REF.NO = ""
         GOSUB 50000
         REF.NO = ""
         CURR.CUT.REF.NO = ""
         GOSUB 50100
      CASE 1
         ERRMSG = "Invalid Selection"
         GOSUB 90000
   END CASE
   GOTO 500
*
*---- PROCESS FOLDER DATA
*
540 *
   IF OPT1 = "A" THEN GOTO 550
   BEGIN CASE
      CASE ACTION = "M"
         SCREEN FIELD;;52
         SCREEN INPUT;;52
      CASE 1
         SCREEN FIELD;;57
         SCREEN INPUT;;57
   END CASE
   OPT1 = S$VALUE
550 *
   BEGIN CASE
      CASE OPT1 = "" OR OPT1 = "END"
         RETURN
      CASE OPT1 = "A" AND FOLD.CNT < 30
         MODE = "A"
         DONE = 0
*T27924 v
         FOR REF.NO = FOLD.CNT+1 TO 30 UNTIL DONE
*        IF FOLD.CNT = 0 THEN FOLD.CNT = 1
*        FOR REF.NO = FOLD.CNT TO 30 UNTIL DONE
*T27924 ^
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               FOLD.CNT = FOLD.CNT + 1
               GOSUB 12000
            END
         NEXT REF.NO
         REF.NO = FOLD.CNT
         CURR.FOLD.REF.NO = ""
         GOSUB 50000
         OPT1 = ""
      CASE OPT1 = "C" AND FOLD.CNT > 0
         MODE = "C"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 80000
               CURR.FOLD.REF.NO = ""
               GOSUB 50000
            END
            GOSUB 12000
         END
      CASE OPT1 = "D" AND FOLD.CNT > 0
         MODE = "D"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 700
            FOLD.CNT = FOLD.CNT - 1
            IF REF.NO > FOLD.CNT THEN REF.NO = REF.NO - 1
            CURR.FOLD.REF.NO = ""
            GOSUB 50000
            GOSUB 12000
         END
      CASE OPT1 = "I" AND FOLD.CNT > 0
         MODE = "I"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 800
            FOLD.CNT = FOLD.CNT + 1
            CURR.FOLD.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 700
               FOLD.CNT = FOLD.CNT - 1
            END
            CURR.FOLD.REF.NO = ""
            GOSUB 50000
            GOSUB 12000
         END
      CASE OPT1 = "S"
         REF.NO = CURR.FOLD.REF.NO + FOLD.COUNT
         IF REF.NO > FOLD.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT1 = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT1 = "SB"
*T27924 v
*        REF.NO = COUNT(EST.BIND.FOLD.CCTR,VM) + 1
         REF.NO = COUNT(EST.BIND.FOLD.CCTR<1,COMP>,SM) + 1
*T27924 ^
         GOSUB 50000
      CASE OPT1 = "SR"
         REF.NO = CURR.FOLD.REF.NO - FOLD.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE 1
         ERRMSG = "Invalid Selection"
         GOSUB 90000
   END CASE
   GOTO 540
*
*---- PROCESS CUTTER DATA
*
580 *
   IF OPT2 = "A" THEN GOTO 590
   BEGIN CASE
      CASE ACTION = "M"
         SCREEN FIELD;;53
         SCREEN INPUT;;53
      CASE 1
         SCREEN FIELD;;58
         SCREEN INPUT;;58
   END CASE
   OPT2 = S$VALUE
590 *
   BEGIN CASE
      CASE OPT2 = "" OR OPT2 = "END"
         RETURN
      CASE OPT2 = "A" AND CUT.CNT < 30
         MODE = "A"
         DONE = 0
*T27924 v
         FOR REF.NO = CUT.CNT+1 TO 30 UNTIL DONE
*        IF CUT.CNT = 0 THEN CUT.CNT = 1
*        FOR REF.NO = CUT.CNT TO 30 UNTIL DONE
*T27924 ^
            GOSUB 50100
            GOSUB 20000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 750
            END ELSE
               CUT.CNT = CUT.CNT + 1
            END
         NEXT REF.NO
         REF.NO = CUT.CNT
         CURR.CUT.REF.NO = ""
         GOSUB 50100
         OPT2 = ""
      CASE OPT2 = "C" AND CUT.CNT > 0
         MODE = "C"
         GOSUB 650
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 20000
            IF S$VALUE = "END" THEN
               GOSUB 80100
               CURR.CUT.REF.NO = ""
               GOSUB 50100
            END
         END
      CASE OPT2 = "D" AND CUT.CNT > 0
         MODE = "D"
         GOSUB 650
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 750
            CUT.CNT = CUT.CNT - 1
            IF REF.NO > CUT.CNT THEN REF.NO = REF.NO - 1
            CURR.CUT.REF.NO = ""
            GOSUB 50100
         END
      CASE OPT2 = "I" AND CUT.CNT > 0
         MODE = "I"
         GOSUB 650
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 850
            CUT.CNT = CUT.CNT + 1
            CURR.CUT.REF.NO = ""
            GOSUB 50100
            GOSUB 20000
            IF S$VALUE = "END" THEN
               GOSUB 750
               CUT.CNT = CUT.CNT - 1
            END
            CURR.CUT.REF.NO = ""
            GOSUB 50100
         END
      CASE OPT2 = "S"
         REF.NO = CURR.CUT.REF.NO + CUT.COUNT
         IF REF.NO > CUT.CNT THEN REF.NO = 1
         GOSUB 50100
      CASE OPT2 = "ST"
         REF.NO = 1
         GOSUB 50100
      CASE OPT2 = "SB"
*T27924 v
*        REF.NO = COUNT(EST.BIND.CUT.CCTR,VM) + 1
         REF.NO = COUNT(EST.BIND.CUT.CCTR<1,COMP>,SM) + 1
*T27924 ^
         GOSUB 50100
      CASE OPT2 = "SR"
         REF.NO = CURR.CUT.REF.NO - CUT.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50100
      CASE 1
         ERRMSG = "Invalid Selection"
         GOSUB 90000
   END CASE
   GOTO 580
*
*---- GET LINE REFERENCE NUMBER (FOLDER)
*
600 *
   SCREEN FIELD;;54
   S$MINV = CURR.FOLD.REF.NO
   S$MAXV = S$MINV + FOLD.COUNT - 1
   IF S$MAXV > FOLD.CNT THEN S$MAXV = FOLD.CNT
   SCREEN INPUT;;54
   RETURN
*
*---- GET LINE REFERENCE NUMBER (CUTTER)
*
650 *
   SCREEN FIELD;;54
   S$MINV = CURR.CUT.REF.NO
   S$MAXV = S$MINV + CUT.COUNT - 1
   IF S$MAXV > CUT.CNT THEN S$MAXV = CUT.CNT
   SCREEN INPUT;;54
   RETURN
*
*---- DELETE MULTI-LINE DATA (FOLDER)
*
700 *
*T27924 v
*  EST.BIND.FOLD.CCTR = DELETE(EST.BIND.FOLD.CCTR,1,REF.NO,0)
*  EST.BIND.FOLD.PGS = DELETE(EST.BIND.FOLD.PGS,1,REF.NO,0)
*  EST.BIND.FOLD.IMPO = DELETE(EST.BIND.FOLD.IMPO,1,REF.NO,0)
*  EST.BIND.FOLD.SHT = DELETE(EST.BIND.FOLD.SHT,1,REF.NO,0)
*  EST.BIND.FOLD.SIG = DELETE(EST.BIND.FOLD.SIG,1,REF.NO,0)
*  EST.BIND.FOLD.PPI = DELETE(EST.BIND.FOLD.PPI,1,REF.NO,0)
*  EST.BIND.FOLD.BULK = DELETE(EST.BIND.FOLD.BULK,1,REF.NO,0)
*  S$DATA(26) = DELETE(S$DATA(26),S$SCR,REF.NO,0)
*  S$DATA(27) = DELETE(S$DATA(27),S$SCR,REF.NO,0)
*  S$DATA(28) = DELETE(S$DATA(28),S$SCR,REF.NO,0)
*  S$DATA(29) = DELETE(S$DATA(29),S$SCR,REF.NO,0)
*  S$DATA(30) = DELETE(S$DATA(30),S$SCR,REF.NO,0)
*  S$DATA(31) = DELETE(S$DATA(31),S$SCR,REF.NO,0)
*  S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO,0)
   EST.BIND.FOLD.CCTR = DELETE(EST.BIND.FOLD.CCTR,1,COMP,REF.NO)
   EST.BIND.FOLD.PGS = DELETE(EST.BIND.FOLD.PGS,1,COMP,REF.NO)
   EST.BIND.FOLD.IMPO = DELETE(EST.BIND.FOLD.IMPO,1,COMP,REF.NO)
   EST.BIND.FOLD.SHT = DELETE(EST.BIND.FOLD.SHT,1,COMP,REF.NO)
   EST.BIND.FOLD.SIG = DELETE(EST.BIND.FOLD.SIG,1,COMP,REF.NO)
   EST.BIND.FOLD.PPI = DELETE(EST.BIND.FOLD.PPI,1,COMP,REF.NO)
   EST.BIND.FOLD.BULK = DELETE(EST.BIND.FOLD.BULK,1,COMP,REF.NO)
   S$DATA(26) = DELETE(S$DATA(26),S$SCR,REF.NO)
   S$DATA(27) = DELETE(S$DATA(27),S$SCR,REF.NO)
   S$DATA(28) = DELETE(S$DATA(28),S$SCR,REF.NO)
   S$DATA(29) = DELETE(S$DATA(29),S$SCR,REF.NO)
   S$DATA(30) = DELETE(S$DATA(30),S$SCR,REF.NO)
   S$DATA(31) = DELETE(S$DATA(31),S$SCR,REF.NO)
   S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO)
*T27924 ^
   RETURN
*
*---- DELETE MULTI-LINE DATA (CUTTER)
*
750 *
*T27924 v
*  EST.BIND.CUT.CCTR = DELETE(EST.BIND.CUT.CCTR,1,REF.NO,0)
*  EST.BIND.CUT.CUTS = DELETE(EST.BIND.CUT.CUTS,1,REF.NO,0)
*  EST.BIND.CUT.OUT = DELETE(EST.BIND.CUT.OUT,1,REF.NO,0)
*  EST.BIND.CUT.SHT = DELETE(EST.BIND.CUT.SHT,1,REF.NO,0)
*  EST.BIND.CUT.BASIS = DELETE(EST.BIND.CUT.BASIS,1,REF.NO,0)
*  EST.BIND.CUT.WIDTH = DELETE(EST.BIND.CUT.WIDTH,1,REF.NO,0)
*  EST.BIND.CUT.LENGTH = DELETE(EST.BIND.CUT.LENGTH,1,REF.NO,0)
*  S$DATA(42) = DELETE(S$DATA(42),S$SCR,REF.NO,0)
*  S$DATA(43) = DELETE(S$DATA(43),S$SCR,REF.NO,0)
*  S$DATA(44) = DELETE(S$DATA(44),S$SCR,REF.NO,0)
*  S$DATA(45) = DELETE(S$DATA(45),S$SCR,REF.NO,0)
*  S$DATA(46) = DELETE(S$DATA(46),S$SCR,REF.NO,0)
*  S$DATA(47) = DELETE(S$DATA(47),S$SCR,REF.NO,0)
*  S$DATA(48) = DELETE(S$DATA(48),S$SCR,REF.NO,0)
   EST.BIND.CUT.CCTR = DELETE(EST.BIND.CUT.CCTR,1,COMP,REF.NO)
   EST.BIND.CUT.CUTS = DELETE(EST.BIND.CUT.CUTS,1,COMP,REF.NO)
   EST.BIND.CUT.OUT = DELETE(EST.BIND.CUT.OUT,1,COMP,REF.NO)
   EST.BIND.CUT.SHT = DELETE(EST.BIND.CUT.SHT,1,COMP,REF.NO)
   EST.BIND.CUT.BASIS = DELETE(EST.BIND.CUT.BASIS,1,COMP,REF.NO)
   EST.BIND.CUT.WIDTH = DELETE(EST.BIND.CUT.WIDTH,1,COMP,REF.NO)
   EST.BIND.CUT.LENGTH = DELETE(EST.BIND.CUT.LENGTH,1,COMP,REF.NO)
   S$DATA(42) = DELETE(S$DATA(42),S$SCR,REF.NO)
   S$DATA(43) = DELETE(S$DATA(43),S$SCR,REF.NO)
   S$DATA(44) = DELETE(S$DATA(44),S$SCR,REF.NO)
   S$DATA(45) = DELETE(S$DATA(45),S$SCR,REF.NO)
   S$DATA(46) = DELETE(S$DATA(46),S$SCR,REF.NO)
   S$DATA(47) = DELETE(S$DATA(47),S$SCR,REF.NO)
   S$DATA(48) = DELETE(S$DATA(48),S$SCR,REF.NO)
*T27924 ^
   RETURN
*
*---- INSERT MULTI-LINE DATA (FOLDER)
*
800 *
*T27924 v
*  EST.BIND.FOLD.CCTR = INSERT(EST.BIND.FOLD.CCTR,1,REF.NO,0,"")
*  EST.BIND.FOLD.PGS = INSERT(EST.BIND.FOLD.PGS,1,REF.NO,0,"")
*  EST.BIND.FOLD.IMPO = INSERT(EST.BIND.FOLD.IMPO,1,REF.NO,0,"")
*  EST.BIND.FOLD.SHT = INSERT(EST.BIND.FOLD.SHT,1,REF.NO,0,"")
*  EST.BIND.FOLD.SIG = INSERT(EST.BIND.FOLD.SIG,1,REF.NO,0,"")
*  EST.BIND.FOLD.PPI = INSERT(EST.BIND.FOLD.PPI,1,REF.NO,0,"")
*  EST.BIND.FOLD.BULK = INSERT(EST.BIND.FOLD.BULK,1,REF.NO,0,"")
   EST.BIND.FOLD.CCTR = INSERT(EST.BIND.FOLD.CCTR,1,COMP,REF.NO,"")
   EST.BIND.FOLD.PGS = INSERT(EST.BIND.FOLD.PGS,1,COMP,REF.NO,"")
   EST.BIND.FOLD.IMPO = INSERT(EST.BIND.FOLD.IMPO,1,COMP,REF.NO,"")
   EST.BIND.FOLD.SHT = INSERT(EST.BIND.FOLD.SHT,1,COMP,REF.NO,"")
   EST.BIND.FOLD.SIG = INSERT(EST.BIND.FOLD.SIG,1,COMP,REF.NO,"")
   EST.BIND.FOLD.PPI = INSERT(EST.BIND.FOLD.PPI,1,COMP,REF.NO,"")
   EST.BIND.FOLD.BULK = INSERT(EST.BIND.FOLD.BULK,1,COMP,REF.NO,"")
*T27924 ^
   S$DATA(26) = INSERT(S$DATA(26),S$SCR,REF.NO,0,"")
   S$DATA(27) = INSERT(S$DATA(27),S$SCR,REF.NO,0,"")
   S$DATA(28) = INSERT(S$DATA(28),S$SCR,REF.NO,0,"")
   S$DATA(29) = INSERT(S$DATA(29),S$SCR,REF.NO,0,"")
   S$DATA(30) = INSERT(S$DATA(30),S$SCR,REF.NO,0,"")
   S$DATA(31) = INSERT(S$DATA(31),S$SCR,REF.NO,0,"")
   S$DATA(32) = INSERT(S$DATA(32),S$SCR,REF.NO,0,"")
   RETURN
*
*---- INSERT MULTI-LINE DATA (CUTTER)
*
850 *
*T27924 v
*  EST.BIND.CUT.CCTR = INSERT(EST.BIND.CUT.CCTR,1,REF.NO,0,"")
*  EST.BIND.CUT.CUTS = INSERT(EST.BIND.CUT.CUTS,1,REF.NO,0,"")
*  EST.BIND.CUT.OUT = INSERT(EST.BIND.CUT.OUT,1,REF.NO,0,"")
*  EST.BIND.CUT.SHT = INSERT(EST.BIND.CUT.SHT,1,REF.NO,0,"")
*  EST.BIND.CUT.BASIS = INSERT(EST.BIND.CUT.BASIS,1,REF.NO,0,"")
*  EST.BIND.CUT.WIDTH = INSERT(EST.BIND.CUT.WIDTH,1,REF.NO,0,"")
*  EST.BIND.CUT.LENGTH = INSERT(EST.BIND.CUT.LENGTH,1,REF.NO,0,"")
   EST.BIND.CUT.CCTR = INSERT(EST.BIND.CUT.CCTR,1,COMP,REF.NO,"")
   EST.BIND.CUT.CUTS = INSERT(EST.BIND.CUT.CUTS,1,COMP,REF.NO,"")
   EST.BIND.CUT.OUT = INSERT(EST.BIND.CUT.OUT,1,COMP,REF.NO,"")
   EST.BIND.CUT.SHT = INSERT(EST.BIND.CUT.SHT,1,COMP,REF.NO,"")
   EST.BIND.CUT.BASIS = INSERT(EST.BIND.CUT.BASIS,1,COMP,REF.NO,"")
   EST.BIND.CUT.WIDTH = INSERT(EST.BIND.CUT.WIDTH,1,COMP,REF.NO,"")
   EST.BIND.CUT.LENGTH = INSERT(EST.BIND.CUT.LENGTH,1,COMP,REF.NO,"")
*T27924 ^
   S$DATA(42) = INSERT(S$DATA(42),S$SCR,REF.NO,0,"")
   S$DATA(43) = INSERT(S$DATA(43),S$SCR,REF.NO,0,"")
   S$DATA(44) = INSERT(S$DATA(44),S$SCR,REF.NO,0,"")
   S$DATA(45) = INSERT(S$DATA(45),S$SCR,REF.NO,0,"")
   S$DATA(46) = INSERT(S$DATA(46),S$SCR,REF.NO,0,"")
   S$DATA(47) = INSERT(S$DATA(47),S$SCR,REF.NO,0,"")
   S$DATA(48) = INSERT(S$DATA(48),S$SCR,REF.NO,0,"")
   RETURN
*
*---- GET UNTRIMMED SIG SIZE
*
1100 *
*T27924 v
*  PREV.US.WIDTH = EST.BIND.US.WIDTH
*  SCREEN FIELD;;2
*  IF EST.PROD.US.WIDTH<1,1,1> # "" THEN
*     S$O.R = "O"
*     S$DEFAULT = EST.PROD.US.WIDTH<1,1,1>
*  END
*  SCREEN INPUT;;2;RETURN
*  EST.BIND.US.WIDTH = S$VALUE
*  IF EST.BIND.US.WIDTH # PREV.US.WIDTH THEN CASE.RECALC = 1
*  PREV.US.LENGTH = EST.BIND.US.LENGTH
*  SCREEN FIELD;;3
*  IF EST.PROD.US.LENGTH<1,1,1> # "" THEN
*     S$O.R = "O"
*     S$DEFAULT = EST.PROD.US.LENGTH<1,1,1>
*  END
*  SCREEN INPUT;;3;RETURN
*  EST.BIND.US.LENGTH = S$VALUE
*  IF EST.BIND.US.LENGTH # PREV.US.LENGTH THEN CASE.RECALC = 1
   PREV.US.WIDTH = EST.BIND.US.WIDTH<1,COMP>
   SCREEN FIELD;;2
   IF EST.PROD.US.WIDTH<1,COMP,1> # "" THEN
      S$O.R = "O"
      S$DEFAULT = EST.PROD.US.WIDTH<1,COMP,1>
   END
   SCREEN INPUT;;2;RETURN
   EST.BIND.US.WIDTH<1,COMP> = S$VALUE
   IF EST.BIND.US.WIDTH<1,COMP> # PREV.US.WIDTH THEN CASE.RECALC = 1
   PREV.US.LENGTH = EST.BIND.US.LENGTH<1,COMP>
   SCREEN FIELD;;3
   IF EST.PROD.US.LENGTH<1,COMP,1> # "" THEN
      S$O.R = "O"
      S$DEFAULT = EST.PROD.US.LENGTH<1,COMP,1>
   END
   SCREEN INPUT;;3;RETURN
   EST.BIND.US.LENGTH<1,COMP> = S$VALUE
   IF EST.BIND.US.LENGTH<1,COMP> # PREV.US.LENGTH THEN CASE.RECALC = 1
   RETURN
*
*---- GET PAGE SIZE
*
1200 *
*T27924 v
*  PREV.TP.WIDTH = EST.BIND.TP.WIDTH
*  SCREEN FIELD;;4
*  IF EST.PROD.TS.WIDTH<1,1,1> # "" THEN
*     S$O.R = "O"
*     S$DEFAULT = EST.PROD.TS.WIDTH<1,1,1>
*  END
*  SCREEN INPUT;;4;RETURN
*  EST.BIND.TP.WIDTH = S$VALUE
*  IF EST.BIND.TP.WIDTH # PREV.TP.WIDTH THEN CASE.RECALC = 1
*  PREV.TP.LENGTH = EST.BIND.TP.LENGTH
*  SCREEN FIELD;;5
*  IF EST.PROD.TS.LENGTH<1,1,1> # "" THEN
*     S$O.R = "O"
*     S$DEFAULT = EST.PROD.TS.LENGTH<1,1,1>
*  END
*  SCREEN INPUT;;5;RETURN
*  EST.BIND.TP.LENGTH = S$VALUE
*  IF EST.BIND.TP.LENGTH # PREV.TP.LENGTH THEN CASE.RECALC = 1
   PREV.TP.WIDTH = EST.BIND.TP.WIDTH<1,COMP>
   SCREEN FIELD;;4
   IF EST.PROD.TS.WIDTH<1,COMP,1> # "" THEN
      S$O.R = "O"
      S$DEFAULT = EST.PROD.TS.WIDTH<1,COMP,1>
   END
   SCREEN INPUT;;4;RETURN
   EST.BIND.TP.WIDTH<1,COMP> = S$VALUE
   IF EST.BIND.TP.WIDTH<1,COMP> # PREV.TP.WIDTH THEN CASE.RECALC = 1
   PREV.TP.LENGTH = EST.BIND.TP.LENGTH<1,COMP>
   SCREEN FIELD;;5
   IF EST.PROD.TS.LENGTH<1,COMP,1> # "" THEN
      S$O.R = "O"
      S$DEFAULT = EST.PROD.TS.LENGTH<1,COMP,1>
   END
   SCREEN INPUT;;5;RETURN
   EST.BIND.TP.LENGTH<1,COMP> = S$VALUE
   IF EST.BIND.TP.LENGTH<1,COMP> # PREV.TP.LENGTH THEN CASE.RECALC = 1
*T27924 ^
   RETURN
*
*---- GET BINDERY STYLE
*
1300 *
   SCREEN FIELD;;6
   SCREEN INPUT;;6;RETURN
*T27924 v
*  EST.BIND.STYLE = S$VALUE
   EST.BIND.STYLE<1,COMP> = S$VALUE
*T27924 ^
   RETURN
*
*---- GET COVER STYLE
*
1400 *
*T27924 v
*  PREV.COVER.STYLE = EST.BIND.COVER.STYLE
   PREV.COVER.STYLE = EST.BIND.COVER.STYLE<1,COMP>
*T27924 ^
   SCREEN FIELD;;7
   SCREEN INPUT;;7;RETURN
*T27924 v
*  EST.BIND.COVER.STYLE = S$VALUE
*  IF EST.BIND.COVER.STYLE # PREV.COVER.STYLE THEN CASE.RECALC = 1
   EST.BIND.COVER.STYLE<1,COMP> = S$VALUE
   IF EST.BIND.COVER.STYLE<1,COMP> # PREV.COVER.STYLE THEN CASE.RECALC = 1
*T27924 ^
   RETURN
*
*---- GET EDGE STYLE
*
1500 *
*T27924 v
*  PREV.EDGE.TYPE = EST.BIND.EDGE.TYPE
   PREV.EDGE.TYPE = EST.BIND.EDGE.TYPE<1,COMP>
*T27924 ^
   SCREEN FIELD;;9
   SCREEN INPUT;;9;RETURN
*T27924 v
*  EST.BIND.EDGE.TYPE = S$VALUE
*  IF EST.BIND.EDGE.TYPE # PREV.EDGE.TYPE THEN CASE.RECALC = 1
   EST.BIND.EDGE.TYPE<1,COMP> = S$VALUE
   IF EST.BIND.EDGE.TYPE<1,COMP> # PREV.EDGE.TYPE THEN CASE.RECALC = 1
*T27924 ^
   RETURN
*
*---- GET STITCHER DATA
*
1600 *
*T27924 v
*  S$DATA(16)<S$SCR> = EST.STITCHER.CCTR
   S$DATA(16)<S$SCR> = EST.STITCHER.CCTR<1,COMP>
*T27924 ^
   SCREEN FIELD;;16
   SCREEN INPUT;;16;RETURN
   IF S$VALUE = "???" THEN
      FFLD=16;FREF=1;XTYPE="08";GOSUB 49100
      IF XCODE = "" THEN GOTO 1600
   END
   IF S$VALUE # "" THEN
      MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Equipment ID. Try again !"
         GOSUB 90000
         GOTO 1600
      END
      IF EQP.TYPE # "08" THEN
         ERRMSG = "Invalid Equipment Type. Try again! "
         GOSUB 90000
         GOTO 1600
      END
   END
*T27924 v
*  EST.STITCHER.CCTR = S$VALUE
   EST.STITCHER.CCTR<1,COMP> = S$VALUE
*T27924 ^
   SCREEN FIELD;;17
   SCREEN INPUT;;17;RETURN
*T27924 v
*  EST.BIND.STITCH.UP = S$VALUE
   EST.BIND.STITCH.UP<1,COMP> = S$VALUE
*T27924 ^
   RETURN
*
*---- GET BINDER DATA
*
1700 *
*T27924 v
*  S$DATA(13)<S$SCR> = EST.BINDER.CCTR
   S$DATA(13)<S$SCR> = EST.BINDER.CCTR<1,COMP>
*T27924 ^
   SCREEN FIELD;;13
   SCREEN INPUT;;13;RETURN
   IF S$VALUE = "???" THEN
      FFLD=13;FREF=1;XTYPE="10":VM:"12";GOSUB 49100
      IF XCODE = "" THEN GOTO 1700
   END
   IF S$VALUE # "" THEN
      MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Equipment ID. Try again !"
         GOSUB 90000
         GOTO 1700
      END
      IF EQP.TYPE # "10" AND EQP.TYPE # "12" THEN
         ERRMSG = "Invalid Equipment Type. Try again! "
         GOSUB 90000
         GOTO 1700
      END
   END
*T27924 v
*  EST.BINDER.CCTR = S$VALUE
   EST.BINDER.CCTR<1,COMP> = S$VALUE
*T27924 ^
   SCREEN FIELD;;11
   SCREEN INPUT;;11;RETURN
*T27924 v
*  EST.BIND.BIND.UP = S$VALUE
   EST.BIND.BIND.UP<1,COMP> = S$VALUE
*T27924 ^
   RETURN
*
*---- GET GATHERER DATA
*
1800 *
*T27924 v
*  S$DATA(14)<S$SCR> = EST.GATHERER.CCTR
   S$DATA(14)<S$SCR> = EST.GATHERER.CCTR<1,COMP>
*T27924 ^
   SCREEN FIELD;;14
   SCREEN INPUT;;14;RETURN
   IF S$VALUE = "???" THEN
      FFLD=14;FREF=1;XTYPE="22";GOSUB 49100
      IF XCODE = "" THEN GOTO 1800
   END
   IF S$VALUE # "" THEN
      MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Equipment ID. Try again !"
         GOSUB 90000
         GOTO 1800
      END
      IF EQP.TYPE # "22" THEN
         ERRMSG = "Invalid Equipment Type. Try again! "
         GOSUB 90000
         GOTO 1800
      END
   END
*T27924 v
*  EST.GATHERER.CCTR = S$VALUE
   EST.GATHERER.CCTR<1,COMP> = S$VALUE
*T27924 ^
   SCREEN FIELD;;12
   SCREEN INPUT;;12;RETURN
*T27924 v
*  EST.BIND.GATHER.UP = S$VALUE
   EST.BIND.GATHER.UP<1,COMP> = S$VALUE
*T27924 ^
   RETURN
*
*---- GET TRIMMER DATA
*
1900 *
*T27924 v
*  S$DATA(15)<S$SCR> = EST.TRIMMER.CCTR
   S$DATA(15)<S$SCR> = EST.TRIMMER.CCTR<1,COMP>
*T27924 ^
   SCREEN FIELD;;15
   SCREEN INPUT;;15;RETURN
   IF S$VALUE = "???" THEN
      FFLD=15;FREF=1;XTYPE="24";GOSUB 49100
      IF XCODE = "" THEN GOTO 1900
   END
   IF S$VALUE # "" THEN
      MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Equipment ID. Try again !"
         GOSUB 90000
         GOTO 1900
      END
      IF EQP.TYPE # "24" THEN
         ERRMSG = "Invalid Equipment Type. Try again! "
         GOSUB 90000
         GOTO 1900
      END
   END
*T27924 v
*  EST.TRIMMER.CCTR = S$VALUE
   EST.TRIMMER.CCTR<1,COMP> = S$VALUE
*T27924 ^
   RETURN
*
*---- GET MULTI-LINE DATA (FOLDER)
*
10000 *
   S$VAL = REF.NO
   SCREEN DISPLAY;;25
10010 *
*T27924 v
*  PREV.CCTR = EST.BIND.FOLD.CCTR<1,REF.NO>
   PREV.CCTR = EST.BIND.FOLD.CCTR<1,COMP,REF.NO>
*T27924 ^
   S$DATA(26)<S$SCR,REF.NO> = PREV.CCTR
   S$VAL = REF.NO
   SCREEN FIELD;;26
   IF REF.NO > 1 THEN
      S$O.R = "O"
*T27924 v
*     S$DEFAULT = EST.BIND.FOLD.CCTR<1,REF.NO-1>
      S$DEFAULT = EST.BIND.FOLD.CCTR<1,COMP,REF.NO-1>
*T27924 ^
   END
   SCREEN INPUT;;26;GOTO 10950
   IF S$VALUE = "???" THEN
      FFLD=26;FREF=REF.NO;XTYPE="06";GOSUB 49100
      IF XCODE = "" THEN GOTO 10010
   END
   BEGIN CASE
      CASE S$VALUE = "WEB"
      CASE S$VALUE = "PF"
      CASE 1
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
            ERRMSG = "Invalid Equipment ID. Try again !"
            GOSUB 90000
            GOTO 10010
         END
         IF EQP.TYPE # "06" THEN
            ERRMSG = "Equipment specified must be a folder. Try again !"
            GOSUB 90000
            GOTO 10010
         END
   END CASE
   CCTR = S$VALUE
10020 *
   S$VAL = REF.NO
*T27924 v
*  IF MODE = "A" AND REF.NO <= EST.COMPONENT.CNT THEN
   IF MODE = "A" AND REF.NO <= EST.COMPONENT.CNT AND EST.PROD.PG.CNT<1,COMP,1> # "" THEN
*T27924 ^
      PGS = EST.PROD.PG.CNT<1,REF.NO,1>
      S$DATA(27)<S$SCR,REF.NO> = PGS
      SCREEN DISPLAY;;27
   END ELSE
      S$O.R = "R" ; * T27924
      SCREEN FIELD;;27
      SCREEN INPUT;;27;GOTO 10950
      PGS = S$VALUE
   END
10030 *
*T27924 v
*  PREV.IMPO = EST.BIND.FOLD.IMPO<1,REF.NO>
   PREV.IMPO = EST.BIND.FOLD.IMPO<1,COMP,REF.NO>
*T27924 ^
   S$DATA(28)<S$SCR,REF.NO> = PREV.IMPO
   S$VAL = REF.NO
   SCREEN FIELD;;28
   SCREEN INPUT;;28;GOTO 10950
   IF S$VALUE = "" THEN
   END ELSE
      LOCATE S$VALUE IN IMPO.ID<1>,1 SETTING IP ELSE
         ERRMSG = "Invalid Imposition ID. Try again !"
         GOSUB 90000
         GOTO 10030
      END
   END
   IMPO = S$VALUE
10040 *
   S$VAL = REF.NO
   IF IMPO = "" THEN
      SCREEN FIELD;;29
      SCREEN INPUT;;29;GOTO 10950
      SHT = S$VALUE
   END ELSE
      SHT = INT(PGS * 10000 / IMPO.PGS.PER.SHT<1,IP> + 0.5)
      S$DATA(29)<S$SCR,REF.NO> = SHT
      SCREEN DISPLAY;;29
   END
10050 *
   S$VAL = REF.NO
   IF IMPO = "" THEN
      SCREEN FIELD;;30
      SCREEN INPUT;;30;GOTO 10950
      SIG = S$VALUE
   END ELSE
      SIG = INT(SHT * IMPO.SIG.PER.SHT<1,IP> / 10000 + 0.99)
      S$DATA(30)<S$SCR,REF.NO> = SIG
      SCREEN DISPLAY;;30
   END
10060 *
   S$VAL = REF.NO
*T27924 v
*  IF MODE = "A" AND REF.NO <= EST.COMPONENT.CNT THEN
   IF MODE = "A" AND REF.NO <= EST.COMPONENT.CNT AND EST.PROD.PPI<1,COMP,1> # "" THEN
*T27924 ^
      PPI = EST.PROD.PPI<1,REF.NO,1>
      S$DATA(31)<S$SCR,REF.NO> = PPI
      SCREEN DISPLAY;;31
   END ELSE
      S$O.R = "R" ; * T27924
      SCREEN FIELD;;31
      SCREEN INPUT;;31;GOTO 10950
      PPI = S$VALUE
   END
10070 *
   S$VAL = REF.NO
   BULK = INT(PGS * 10000 / PPI + 0.5)
   S$DATA(32)<S$SCR,REF.NO> = BULK
   SCREEN DISPLAY;;32
*C38538 v
   S$VAL = REF.NO
   SCREEN FIELD;;32
   SCREEN INPUT;;32;GOTO 10950
   BULK = S$VALUE
*C38538 ^
*---- STORE INPUT DATA
10900 *
*T27924 v
*  EST.BIND.FOLD.CCTR<1,REF.NO> = CCTR
*  EST.BIND.FOLD.PGS<1,REF.NO> = PGS
*  EST.BIND.FOLD.IMPO<1,REF.NO> = IMPO
*  EST.BIND.FOLD.SHT<1,REF.NO> = SHT
*  EST.BIND.FOLD.SIG<1,REF.NO> = SIG
*  EST.BIND.FOLD.PPI<1,REF.NO> = PPI
*  EST.BIND.FOLD.BULK<1,REF.NO> = BULK
   EST.BIND.FOLD.CCTR<1,COMP,REF.NO> = CCTR
   EST.BIND.FOLD.PGS<1,COMP,REF.NO> = PGS
   EST.BIND.FOLD.IMPO<1,COMP,REF.NO> = IMPO
   EST.BIND.FOLD.SHT<1,COMP,REF.NO> = SHT
   EST.BIND.FOLD.SIG<1,COMP,REF.NO> = SIG
   EST.BIND.FOLD.PPI<1,COMP,REF.NO> = PPI
   EST.BIND.FOLD.BULK<1,COMP,REF.NO> = BULK
*T27924 ^
   RETURN
10950 *
*T27924 v
*  S$DATA(26)<S$SCR,REF.NO> = EST.BIND.FOLD.CCTR<1,REF.NO>
*  S$DATA(27)<S$SCR,REF.NO> = EST.BIND.FOLD.PGS<1,REF.NO>
*  S$DATA(28)<S$SCR,REF.NO> = EST.BIND.FOLD.IMPO<1,REF.NO>
*  S$DATA(29)<S$SCR,REF.NO> = EST.BIND.FOLD.SHT<1,REF.NO>
*  S$DATA(30)<S$SCR,REF.NO> = EST.BIND.FOLD.SIG<1,REF.NO>
*  S$DATA(31)<S$SCR,REF.NO> = EST.BIND.FOLD.PPI<1,REF.NO>
*  S$DATA(32)<S$SCR,REF.NO> = EST.BIND.FOLD.BULK<1,REF.NO>
   S$DATA(26)<S$SCR,REF.NO> = EST.BIND.FOLD.CCTR<1,COMP,REF.NO>
   S$DATA(27)<S$SCR,REF.NO> = EST.BIND.FOLD.PGS<1,COMP,REF.NO>
   S$DATA(28)<S$SCR,REF.NO> = EST.BIND.FOLD.IMPO<1,COMP,REF.NO>
   S$DATA(29)<S$SCR,REF.NO> = EST.BIND.FOLD.SHT<1,COMP,REF.NO>
   S$DATA(30)<S$SCR,REF.NO> = EST.BIND.FOLD.SIG<1,COMP,REF.NO>
   S$DATA(31)<S$SCR,REF.NO> = EST.BIND.FOLD.PPI<1,COMP,REF.NO>
   S$DATA(32)<S$SCR,REF.NO> = EST.BIND.FOLD.BULK<1,COMP,REF.NO>
*T27924 ^
   RETURN
*
*---- CALCULATE AND DISPLAY TOTALS FOR FOLDER
*
12000 *
   TOT.PGS = ""
   TOT.SIG = ""
   TOT.BULK = ""
   FOR TOTP = 1 TO FOLD.CNT
*T27924 v
*     TOT.PGS = TOT.PGS + EST.BIND.FOLD.PGS<1,TOTP>
*     TOT.SIG = TOT.SIG + EST.BIND.FOLD.SIG<1,TOTP>
*     TOT.BULK = TOT.BULK + EST.BIND.FOLD.BULK<1,TOTP>
      TOT.PGS = TOT.PGS + EST.BIND.FOLD.PGS<1,COMP,TOTP>
      TOT.SIG = TOT.SIG + EST.BIND.FOLD.SIG<1,COMP,TOTP>
      TOT.BULK = TOT.BULK + EST.BIND.FOLD.BULK<1,COMP,TOTP>
*T27924 ^
   NEXT TOTP
   S$DATA(36)<S$SCR> = TOT.PGS
   S$DATA(38)<S$SCR> = TOT.SIG
   S$DATA(39)<S$SCR> = TOT.BULK
   SCREEN DISPLAY;;36
   SCREEN DISPLAY;;38
   SCREEN DISPLAY;;39
   RETURN
*
*---- GET MULTI-LINE DATA (CUTTER)
*
20000 *
   S$VAL = REF.NO
   SCREEN DISPLAY;;41
20010 *
*T27924 v
*  PREV.CCTR = EST.BIND.CUT.CCTR<1,REF.NO>
   PREV.CCTR = EST.BIND.CUT.CCTR<1,COMP,REF.NO>
*T27924 ^
   S$DATA(42)<S$SCR,REF.NO> = PREV.CCTR
   S$VAL = REF.NO
   SCREEN FIELD;;42
   IF REF.NO > 1 THEN
      S$O.R = "O"
*T27924 v
*     S$DEFAULT = EST.BIND.CUT.CCTR<1,REF.NO-1>
      S$DEFAULT = EST.BIND.CUT.CCTR<1,COMP,REF.NO-1>
*T27924 ^
   END
   SCREEN INPUT;;42;GOTO 20950
   IF S$VALUE = "???" THEN
      FFLD=42;FREF=REF.NO;XTYPE="04";GOSUB 49100
      IF XCODE = "" THEN GOTO 20010
   END
   MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Equipment ID. Try again !"
      GOSUB 90000
      GOTO 20010
   END
   IF EQP.TYPE # "04" THEN
      ERRMSG = "Equipment specified must be a cutter. Try again !"
      GOSUB 90000
      GOTO 20010
   END
   CCTR = S$VALUE
20020 *
   S$VAL = REF.NO
   SCREEN FIELD;;43
   SCREEN INPUT;;43;GOTO 20950
   CUTS = S$VALUE
20030 *
   S$VAL = REF.NO
   SCREEN FIELD;;44
   SCREEN INPUT;;44;GOTO 20950
   OUT = S$VALUE
20040 *
   S$VAL = REF.NO
   SCREEN FIELD;;45
   SCREEN INPUT;;45;GOTO 20950
   SHT = S$VALUE
20050 *
   S$VAL = REF.NO
   SCREEN FIELD;;46
   IF MODE = "A" AND REF.NO <= EST.COMPONENT.CNT THEN
      S$O.R="O"
      S$DEFAULT=EST.PROD.BASIS.WT<1,REF.NO,1>
   END
   SCREEN INPUT;;46;GOTO 20950
   BASIS = S$VALUE
20060 *
   S$VAL = REF.NO
   SCREEN FIELD;;47
   SCREEN INPUT;;47;GOTO 20950
   WIDTH = S$VALUE
20070 *
   S$VAL = REF.NO
   SCREEN FIELD;;48
   SCREEN INPUT;;48;GOTO 20950
   XXLENGTH = S$VALUE
*---- STORE INPUT DATA
20900 *
*T27924 v
*  EST.BIND.CUT.CCTR<1,REF.NO> = CCTR
*  EST.BIND.CUT.CUTS<1,REF.NO> = CUTS
*  EST.BIND.CUT.OUT<1,REF.NO> = OUT
*  EST.BIND.CUT.SHT<1,REF.NO> = SHT
*  EST.BIND.CUT.BASIS<1,REF.NO> = BASIS
*  EST.BIND.CUT.WIDTH<1,REF.NO> = WIDTH
*  EST.BIND.CUT.LENGTH<1,REF.NO> = XXLENGTH
   EST.BIND.CUT.CCTR<1,COMP,REF.NO> = CCTR
   EST.BIND.CUT.CUTS<1,COMP,REF.NO> = CUTS
   EST.BIND.CUT.OUT<1,COMP,REF.NO> = OUT
   EST.BIND.CUT.SHT<1,COMP,REF.NO> = SHT
   EST.BIND.CUT.BASIS<1,COMP,REF.NO> = BASIS
   EST.BIND.CUT.WIDTH<1,COMP,REF.NO> = WIDTH
   EST.BIND.CUT.LENGTH<1,COMP,REF.NO> = XXLENGTH
*T27924 ^
   RETURN
20950 *
*T27924 v
*  S$DATA(42)<S$SCR,REF.NO> = EST.BIND.CUT.CCTR<1,REF.NO>
*  S$DATA(43)<S$SCR,REF.NO> = EST.BIND.CUT.CUTS<1,REF.NO>
*  S$DATA(44)<S$SCR,REF.NO> = EST.BIND.CUT.OUT<1,REF.NO>
*  S$DATA(45)<S$SCR,REF.NO> = EST.BIND.CUT.SHT<1,REF.NO>
*  S$DATA(46)<S$SCR,REF.NO> = EST.BIND.CUT.BASIS<1,REF.NO>
*  S$DATA(47)<S$SCR,REF.NO> = EST.BIND.CUT.WIDTH<1,REF.NO>
*  S$DATA(48)<S$SCR,REF.NO> = EST.BIND.CUT.LENGTH<1,REF.NO>
   S$DATA(42)<S$SCR,REF.NO> = EST.BIND.CUT.CCTR<1,COMP,REF.NO>
   S$DATA(43)<S$SCR,REF.NO> = EST.BIND.CUT.CUTS<1,COMP,REF.NO>
   S$DATA(44)<S$SCR,REF.NO> = EST.BIND.CUT.OUT<1,COMP,REF.NO>
   S$DATA(45)<S$SCR,REF.NO> = EST.BIND.CUT.SHT<1,COMP,REF.NO>
   S$DATA(46)<S$SCR,REF.NO> = EST.BIND.CUT.BASIS<1,COMP,REF.NO>
   S$DATA(47)<S$SCR,REF.NO> = EST.BIND.CUT.WIDTH<1,COMP,REF.NO>
   S$DATA(48)<S$SCR,REF.NO> = EST.BIND.CUT.LENGTH<1,COMP,REF.NO>
*T27924 ^
   RETURN
*
*---- EQUIPMENT SELECTION
*
49100 *
   CALL EST.EQUIP.XREF(CONO,XTYPE,EQUIPMENT,COST.CNTR,XCODE)
   SCREEN FORMAT
   S$VALUE=XCODE
   S$DATA(FFLD)<S$SCR,FREF>=XCODE
   GOSUB 70090
   CURR.FOLD.REF.NO=""
   GOSUB 50000
   CURR.CUT.REF.NO=""
   GOSUB 50100
   RETURN
*
*---- DISPLAY MULTI-VALUE DATA (FOLDER)
*
50000 *
   START.REF.NO = 1 + INT((REF.NO-1)/FOLD.COUNT)*FOLD.COUNT
   IF START.REF.NO = CURR.FOLD.REF.NO THEN RETURN
   CURR.FOLD.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = DCOUNT(S$DATA(26)<S$SCR>,VM)
   SCREEN MULTI;;C;25;26;27;28;29;30;31;32
   RETURN
*
*---- DISPLAY MULTI-VALUE DATA (CUTTER)
*
50100 *
   START.REF.NO = 1 + INT((REF.NO-1)/CUT.COUNT)*CUT.COUNT
   IF START.REF.NO = CURR.CUT.REF.NO THEN RETURN
   CURR.CUT.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = DCOUNT(S$DATA(42)<S$SCR>,VM)
   SCREEN MULTI;;C;41;42;43;44;45;46;47;48
   RETURN
*
*---- LOAD DATA
*
70000 *
*T27924 v
*  S$DATA(2)<S$SCR> = EST.BIND.US.WIDTH
*  S$DATA(3)<S$SCR> = EST.BIND.US.LENGTH
*  S$DATA(4)<S$SCR> = EST.BIND.TP.WIDTH
*  S$DATA(5)<S$SCR> = EST.BIND.TP.LENGTH
*  S$DATA(6)<S$SCR> = EST.BIND.STYLE
*  S$DATA(7)<S$SCR> = EST.BIND.COVER.STYLE
*  IF EST.BIND.EDGE.TYPE = "" THEN EST.BIND.EDGE.TYPE = "S  "
*  S$DATA(9)<S$SCR> = EST.BIND.EDGE.TYPE
*  S$DATA(11)<S$SCR> = EST.BIND.BIND.UP
*  S$DATA(12)<S$SCR> = EST.BIND.GATHER.UP
*  S$DATA(13)<S$SCR> = EST.BINDER.CCTR
*  S$DATA(14)<S$SCR> = EST.GATHERER.CCTR
*  S$DATA(15)<S$SCR> = EST.TRIMMER.CCTR
*  S$DATA(16)<S$SCR> = EST.STITCHER.CCTR
*  S$DATA(17)<S$SCR> = EST.BIND.STITCH.UP
   S$DATA(2)<S$SCR> = EST.BIND.US.WIDTH<1,COMP>
   S$DATA(3)<S$SCR> = EST.BIND.US.LENGTH<1,COMP>
   S$DATA(4)<S$SCR> = EST.BIND.TP.WIDTH<1,COMP>
   S$DATA(5)<S$SCR> = EST.BIND.TP.LENGTH<1,COMP>
   S$DATA(6)<S$SCR> = EST.BIND.STYLE<1,COMP>
   S$DATA(7)<S$SCR> = EST.BIND.COVER.STYLE<1,COMP>
   IF EST.BIND.EDGE.TYPE<1,COMP>="" THEN EST.BIND.EDGE.TYPE<1,COMP>="S"
   S$DATA(9)<S$SCR> = EST.BIND.EDGE.TYPE<1,COMP>
   S$DATA(11)<S$SCR> = EST.BIND.BIND.UP<1,COMP>
   S$DATA(12)<S$SCR> = EST.BIND.GATHER.UP<1,COMP>
   S$DATA(13)<S$SCR> = EST.BINDER.CCTR<1,COMP>
   S$DATA(14)<S$SCR> = EST.GATHERER.CCTR<1,COMP>
   S$DATA(15)<S$SCR> = EST.TRIMMER.CCTR<1,COMP>
   S$DATA(16)<S$SCR> = EST.STITCHER.CCTR<1,COMP>
   S$DATA(17)<S$SCR> = EST.BIND.STITCH.UP<1,COMP>
*T27924 ^
70090 *
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- LOAD MULTI-LINE DATA (FOLDER)
*
80000 *
*T27924 v
*  S$DATA(26)<S$SCR> = EST.BIND.FOLD.CCTR
*  S$DATA(27)<S$SCR> = EST.BIND.FOLD.PGS
*  S$DATA(28)<S$SCR> = EST.BIND.FOLD.IMPO
*  S$DATA(29)<S$SCR> = EST.BIND.FOLD.SHT
*  S$DATA(30)<S$SCR> = EST.BIND.FOLD.SIG
*  S$DATA(31)<S$SCR> = EST.BIND.FOLD.PPI
*  S$DATA(32)<S$SCR> = EST.BIND.FOLD.BULK
   MCNT = DCOUNT(EST.BIND.FOLD.CCTR<1,COMP>,SM)
   FOR M = 1 TO MCNT
      S$DATA(26)<S$SCR,M> = EST.BIND.FOLD.CCTR<1,COMP,M>
      S$DATA(27)<S$SCR,M> = EST.BIND.FOLD.PGS<1,COMP,M>
      S$DATA(28)<S$SCR,M> = EST.BIND.FOLD.IMPO<1,COMP,M>
      S$DATA(29)<S$SCR,M> = EST.BIND.FOLD.SHT<1,COMP,M>
      S$DATA(30)<S$SCR,M> = EST.BIND.FOLD.SIG<1,COMP,M>
      S$DATA(31)<S$SCR,M> = EST.BIND.FOLD.PPI<1,COMP,M>
      S$DATA(32)<S$SCR,M> = EST.BIND.FOLD.BULK<1,COMP,M>
   NEXT M
*T27924 ^
   RETURN
*
*---- LOAD MULTI-LINE DATA (CUTTER)
*
80100 *
*T27924 v
*  S$DATA(42)<S$SCR> = EST.BIND.CUT.CCTR
*  S$DATA(43)<S$SCR> = EST.BIND.CUT.CUTS
*  S$DATA(44)<S$SCR> = EST.BIND.CUT.OUT
*  S$DATA(45)<S$SCR> = EST.BIND.CUT.SHT
*  S$DATA(46)<S$SCR> = EST.BIND.CUT.BASIS
*  S$DATA(47)<S$SCR> = EST.BIND.CUT.WIDTH
*  S$DATA(48)<S$SCR> = EST.BIND.CUT.LENGTH
   MCNT = DCOUNT(EST.BIND.CUT.CCTR<1,COMP>,SM)
   FOR M = 1 TO MCNT
      S$DATA(42)<S$SCR,M> = EST.BIND.CUT.CCTR<1,COMP,M>
      S$DATA(43)<S$SCR,M> = EST.BIND.CUT.CUTS<1,COMP,M>
      S$DATA(44)<S$SCR,M> = EST.BIND.CUT.OUT<1,COMP,M>
      S$DATA(45)<S$SCR,M> = EST.BIND.CUT.SHT<1,COMP,M>
      S$DATA(46)<S$SCR,M> = EST.BIND.CUT.BASIS<1,COMP,M>
      S$DATA(47)<S$SCR,M> = EST.BIND.CUT.WIDTH<1,COMP,M>
      S$DATA(48)<S$SCR,M> = EST.BIND.CUT.LENGTH<1,COMP,M>
   NEXT M
*T27924 ^
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999 *
*T31351 v
   SCREEN CLEAR;;D
*T31351 ^
   RETURN
END
