      SUBROUTINE EST.FORMULA.F652 (CONO, ACTION, EQTY, DEPT, COMP)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.FORMULA.F652
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/08/86
*
* DESCRIPTION
*
* This formula is used to determine the run efficiency factor for the
* cutter run operation. The factor is based upon the number of cuts
* to be made and the size of press sheet in square inches.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.CUT.EFF
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      TEMP.FCTR = 1000
      TYP = 0
      MATREAD CEFF.REC FROM ESTIMATE.CUT.EFF, CONO:"CUT.EFF" ELSE RETURN
      IF EST.PROD.OS.TYPE<1,COMP> # "S" THEN
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:EST.PROD.PRESS.ID<1,COMP> ELSE
            MAT EQUIPMENT.REC = ""
         END
      END
10*
      IF TEMP.FVAR2 = "" THEN
         IF TYP = 0 THEN CALL EDIT.SUB1 (MAT EDIT.COM)
         X=0;Y=23;TYP=13;MAXL=4;MINV=1;MAXV=99;JUSTIFY="L"
         PMSG = "Cuts per lift ?"
         CALL EDIT.SUB1 (MAT EDIT.COM)
         IF VALUE = "END" THEN RETURN
         IF VALUE = "" THEN GOTO 10
         CUTS.PER.LIFT = VALUE
         TEMP.FVAR2 = VALUE
      END ELSE
         CUTS.PER.LIFT = TEMP.FVAR2
      END
      WIDTH = EST.PROD.PS.WIDTH<1,COMP,1> / 10000
      IF EST.PROD.OS.TYPE<1,COMP> = "S" THEN
         XXLENGTH = EST.PROD.PS.LENGTH<1,COMP,1> / 10000
      END ELSE
         IF EST.PROD.OS.LENGTH<1,COMP,1> NE "" THEN
            XXLENGTH = EST.PROD.OS.LENGTH<1,COMP,1>/10000
         END ELSE
            XXLENGTH = EQP.PRESS.CUTOFF.LEN/10000
         END
      END
*
*---- MAIN PROCESSING
*
      LOCATE CUTS.PER.LIFT IN CEFF.QTY<1>,1 BY "AR" SETTING Y2 ELSE NULL
      BEGIN CASE
      CASE Y2 = 1
         Y1 = 1
      CASE Y2 > COUNT(CEFF.QTY,VM)+1
         Y2 = Y2 - 1
         Y1 = Y2
      CASE 1
         Y1 = Y2 - 1
      END CASE
*
      SQIN = INT(WIDTH * XXLENGTH + 0.5)
      LOCATE SQIN IN CEFF.SQIN<1>,1 BY "AR" SETTING X2 ELSE NULL
      BEGIN CASE
      CASE X2 = 1
         X1 = 1
      CASE X2 > COUNT(CEFF.SQIN,VM)+1
         X2 = X2 - 1
         X1 = X2
      CASE 1
         X1 = X2 - 1
      END CASE
*
      BEGIN CASE
      CASE CEFF.EXTR = "Y"
         TF22 = CEFF.FCTR<1,Y2,X2>
         TF21 = CEFF.FCTR<1,Y2,X1>
         TF12 = CEFF.FCTR<1,Y1,X2>
         TF11 = CEFF.FCTR<1,Y1,X1>
         IF CEFF.QTY<1,Y2> = CEFF.QTY<1,Y1> THEN
            TFY2 = TF22
            TFY1 = TF21
         END ELSE
            TFY2 = INT(TF22-(CEFF.QTY<1,Y2>-CUTS.PER.LIFT)/(CEFF.QTY<1,Y2>-CEFF.QTY<1,Y1>)*(TF22-TF12)+0.5)
            TFY1 = INT(TF21-(CEFF.QTY<1,Y2>-CUTS.PER.LIFT)/(CEFF.QTY<1,Y2>-CEFF.QTY<1,Y1>)*(TF21-TF11)+0.5)
         END
         IF CEFF.SQIN<1,X2> = CEFF.SQIN<1,X1> THEN
            TF = TFY2
         END ELSE
            TF = INT(TFY2-(CEFF.SQIN<1,X2>-SQIN)/(CEFF.SQIN<1,X2>-CEFF.SQIN<1,X1>)*(TFY2-TFY1)+0.5)
         END
      CASE 1
         TF = CEFF.FCTR<1,Y2,X2>
      END CASE
      TEMP.FCTR = TF * 10
      IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
*
*---- END OF PROGRAM
*
99999*
      RETURN
   END
