   SUBROUTINE EST.RES.QTY.CALC (CONO,ACTION,EST.KEY,DEPT,COMP,EQTY)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RL.QTY.CALC
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 02/10/86
*
* DESCRIPTION
*
* This program will automatically calculate estimate for secondary
* quantity for specified department and component.
*
*    ACTION:   Ex = re-calculate using existing estimate standards
*              Cx = re-calculate using current standards
*
*              If x = Null, in-progress message print on screen.
*
*T20322 gat 05/14/1996 * Change calc to include new data on a Cost
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>ESTIMATE.TEMP2
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
   BQTY = EST.BASE.QTY
   TEST.FLAG = 0;****  T E S T   F L A G  ****
   IF ACTION[2,1] = "" THEN
      PRINT.FLAG = 1
   END ELSE
      PRINT.FLAG = 0
   END
*
*---- MAIN PROCESSING
*
100 *
   ESTD.ID = DEPT:"!":COMP:"!":BQTY
   MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID ELSE
      RETURN
   END
   IF PRINT.FLAG THEN
      P_X  = 3 ; P_Y = 23 ; P_VALUE = "Processing Department ":EST.DEPT<1,DEPT>:", Component ":COMP:", Quantity ":EQTY ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   IF EQTY = BQTY THEN
      LOCATE "MR" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE
         LPTR = 0
      END
      IF LPTR > 0 THEN
         GOSUB 50000
         IF TEMP.GRP.CCTR[1,2] = 'PR' THEN
            BEGIN CASE
               CASE TEMP.GRP.CCTR='PRS'
                  TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,1>
               CASE NUM(TEMP.GRP.CCTR[3,99])
                  TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,TEMP.GRP.CCTR[3,99]>
            END CASE
         END
         TCNT = DCOUNT(ESTD.TYPE,VM)
         FOR TPTR = TCNT TO LPTR STEP -1
            IF ESTD.TYPE<1,TPTR> = "MR" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
               NEXT A
            END
         NEXT TPTR
         LPTR = LPTR - 1
         IF TEST.FLAG THEN MSG="INSERT STK ":LPTR;GOSUB 90000
         CALL EST.RES.INSERT.STK (CONO, EQTY, DEPT, COMP, LPTR)
      END
      LOCATE "MI" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE LPTR = 0
      IF LPTR > 0 THEN
         GOSUB 50000
         IF TEMP.GRP.CCTR[1,2] = 'PR' THEN
            BEGIN CASE
               CASE TEMP.GRP.CCTR='PRS'
                  TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,1>
               CASE NUM(TEMP.GRP.CCTR[3,99])
                  TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,TEMP.GRP.CCTR[3,99]>
            END CASE
         END
         TCNT = DCOUNT(ESTD.TYPE,VM)
         FOR TPTR = TCNT TO 1 STEP -1
            IF ESTD.TYPE<1,TPTR> = "MI" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
               NEXT A
            END
         NEXT TPTR
         LPTR = LPTR - 1
         IF TEST.FLAG THEN MSG="INSERT INK";GOSUB 90000
         CALL EST.RES.INSERT.INK (CONO, EQTY, DEPT, COMP, LPTR)
      END
      LOCATE "MC" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE LPTR = 0
      IF LPTR > 0 THEN
         GOSUB 50000
         TCNT = DCOUNT(ESTD.TYPE,VM)
         FOR TPTR = TCNT TO 1 STEP -1
            IF ESTD.TYPE<1,TPTR> = "MC" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
               SAVE.CCTR = ESTD.CCTR<1,TPTR>
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
               NEXT A
            END
         NEXT TPTR
         LPTR = LPTR - 1
         IF TEST.FLAG THEN MSG="INSERT CASE";GOSUB 90000
         CALL EST.INSERT.CASE (CONO, EQTY, DEPT, COMP, LPTR)
      END
      SLPTR = 1
      LOOP
         LOCATE "CUT" IN ESTD.GRP.CCTR<1>,SLPTR SETTING LPTR ELSE LPTR = 0
      WHILE LPTR > 0 DO
         OPER = ESTD.OPV<1,LPTR>
         MAT ESTD.TEMP2 = ""
         TDP = 0
         STORE.TEMP = 1
         LOOP
         WHILE ESTD.GRP.CCTR<1,LPTR> = "CUT" DO
            IF STORE.TEMP THEN
               TDP = TDP + 1
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.TEMP2(A)<1,TDP> = ESTD.REC(A)<1,LPTR>
               NEXT A
               TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR> / 100
               IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
               TEMP2.GRP.QTY<1,TDP> = TEMP.GRP.QTY
            END
            FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
               ESTD.REC(A) = DELETE(ESTD.REC(A),1,LPTR,0)
            NEXT A
            IF ESTD.OPV<1,LPTR> = OPER THEN STORE.TEMP = 0
         REPEAT
         LPTR = LPTR - 1
         IF TEST.FLAG THEN MSG="INSERT CUT";GOSUB 90000
         CALL EST.INSERT.CUT (CONO, EQTY, DEPT, COMP, LPTR, MAT ESTD.TEMP2)
         SLPTR = LPTR+1
      REPEAT
      SLPTR = 1
      LOOP
         LOCATE "FLD" IN ESTD.GRP.CCTR<1>,SLPTR SETTING LPTR ELSE LPTR = 0
      WHILE LPTR > 0 DO
         OPER = ESTD.OPV<1,LPTR>
         MAT ESTD.TEMP2 = ""
         TDP = 0
         STORE.TEMP = 1
         LOOP
         WHILE ESTD.GRP.CCTR<1,LPTR> = "FLD" DO
            IF STORE.TEMP THEN
               TDP = TDP + 1
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.TEMP2(A)<1,TDP> = ESTD.REC(A)<1,LPTR>
               NEXT A
               TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR> / 100
               IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
               TEMP2.GRP.QTY<1,TDP> = TEMP.GRP.QTY
            END
            FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
               ESTD.REC(A) = DELETE(ESTD.REC(A),1,LPTR,0)
            NEXT A
            IF ESTD.OPV<1,LPTR> = OPER THEN STORE.TEMP = 0
         REPEAT
         LPTR = LPTR - 1
         IF TEST.FLAG THEN MSG="INSERT FLD";GOSUB 90000
         CALL EST.INSERT.FLD (CONO, EQTY, DEPT, COMP, LPTR, MAT ESTD.TEMP2)
         SLPTR = LPTR+1
      REPEAT
   END
   TOTAL.HRS = 0
   TOTAL.DCOST = 0
   TOTAL.COST = 0
   TOTAL.SALE = 0
   TOTAL.TSALE = 0
   TOTAL.VSALE = 0
   TOTAL.VCOST = 0
   TCNT = DCOUNT(ESTD.TYPE,VM)
   FOR TPTR = 1 TO TCNT
150 *
      IF ESTD.TYPE<1,TPTR> = "G" THEN GOTO 990
      ACT = ACTION[1,1]
      MAT ESTD.TEMP = ""
      FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
         ESTD.TEMP(A) = ESTD.REC(A)<1,TPTR>
      NEXT A
      IF TEMP.GRP.CCTR='PRS' OR TEMP.GRP.CCTR='PR1' THEN
         IF EST.RL.PRESS.CCTR<1,COMP> = "" THEN
            FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
               ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
            NEXT A
            IF TPTR = TCNT THEN GOTO 1000 ELSE GOTO 150
         END
         IF EST.RL.PRESS.CCTR<1,COMP> # TEMP.CCTR THEN
            TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP>
            ACT = "C"
         END
      END
      IF TEMP.TYPE[1,1] = "L" AND ACT = "C" THEN
         MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE
            TEMP.CCTR = ESTD.CCTR<1,TPTR>
            GOTO 200
         END
         LOCATE TEMP.OPV IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE
            TEMP.CCTR = ESTD.CCTR<1,TPTR>
            GOTO 200
         END
         TEMP.OPV.TYPE=CCTR.OPER.TYPE<1,OP.PTR>
         IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
         IF TEMP.OPV.TYPE="F" THEN
            IF CCTR.OPER.STD.HRS<1,OP.PTR>+0 > 0 THEN
               TEMP.STD=CCTR.OPER.STD.HRS<1,OP.PTR>
               TEMP.STD.TYPE="HR/OP"
            END
         END ELSE
            IF CCTR.OPER.STD.IMP<1,OP.PTR>+0 > 0 THEN
               TEMP.STD=CCTR.OPER.STD.IMP<1,OP.PTR>*100
               TEMP.STD.TYPE="OP/HR"
            END
         END
         IF TEMP.STD+0=0 THEN TEMP.STD=""
         TEMP.RATE=CCTR.OPER.HR.RATE<1,OP.PTR>
         TEMP.IND.1=CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
         TEMP.IND.2=CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
         TEMP.IND.3=CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
         TEMP.IND.4=CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
         TEMP.MARKUP=CCTR.OPER.MARKUP<1,OP.PTR>
      END
200 *
      TEMP.QTY = TEMP.QTY / 100
      IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
      TEMP.STD = TEMP.STD / 100
      IF TEMP.STD = INT(TEMP.STD) THEN TEMP.STD = INT(TEMP.STD)
      TEMP.GRP.QTY = TEMP.GRP.QTY / 100
      IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
      BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            BEGIN CASE
               CASE TEMP.GRP.CCTR = "CUT" AND EQTY = BQTY
               CASE TEMP.GRP.CCTR = "FLD" AND EQTY = BQTY
               CASE TEMP.GRP.QCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
            END CASE
            BEGIN CASE
               CASE TEMP.GRP.CCTR = "CUT"
               CASE TEMP.GRP.CCTR = "FLD"
               CASE TEMP.GRP.FCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
               CASE TEMP.GRP.FCALC = "T"
                  TBL.ID = TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG="EST.TABLE.FCTR";GOSUB 90000
                  CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
                  IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
            END CASE
         CASE TEMP.TYPE[1,1] = "M"
            BEGIN CASE
               CASE TEMP.TYPE = "MI" AND EQTY = BQTY
                  GOTO 390
               CASE TEMP.TYPE = "MC" AND EQTY = BQTY
                  GOTO 390
               CASE TEMP.TYPE = "MS" OR TEMP.TYPE = "MR"
                  TEMP.TYPE = "M":EST.PROD.OS.TYPE<1,COMP>
                  MPTR = TEMP.MPTR
                  MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:EST.PROD.OS.TYPE<1,COMP>:EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE GOTO 390
                  LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE GOTO 390
               CASE 1
                  MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:TEMP.TYPE[2,1] ELSE GOTO 390
                  LOCATE TEMP.OPV IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE GOTO 390
            END CASE
            IF ACT = "C" AND (TEMP.TYPE = "MP" OR TEMP.TYPE = "MF" OR TEMP.TYPE = "MB" OR TEMP.TYPE = "ML" OR TEMP.TYPE = "MO" OR TEMP.TYPE = "MX") THEN
               TEMP.STD = ESTM.COST <1,MT.PTR>/ 100
            END
            BEGIN CASE
               CASE TEMP.GRP.QCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
            END CASE
            BEGIN CASE
               CASE TEMP.GRP.FCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
               CASE TEMP.GRP.FCALC = "T"
                  TBL.ID = TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG="EST.TABLE.FCTR";GOSUB 90000
                  CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
                  IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
            END CASE
         CASE 1
            BEGIN CASE
               CASE TEMP.GRP.QCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
            END CASE
            BEGIN CASE
               CASE TEMP.GRP.FCALC = "F"
                  TEMP.FPTR = TPTR
                  SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG=SUB.NAME;GOSUB 90000
                  CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
               CASE TEMP.GRP.FCALC = "T"
                  TBL.ID = TEMP.GRP.FPARAM
                  IF TEST.FLAG THEN MSG="EST.TABLE.FCTR";GOSUB 90000
                  CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
                  IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
            END CASE
      END CASE
390 *
      IF TEMP.TYPE[1,1] = "P" THEN
         CALL EST.OSP.UPD (CONO,"R",DEPT,COMP,EQTY,TPTR)
      END
*
*---- CALCULATE HOURS, COST AND SALE AMOUNTS
*
      CALL EST.RES.CALC.COST (CONO,EQTY,DEPT)
      TOTAL.HRS = TOTAL.HRS + TEMP.HRS
      TOTAL.DCOST = TOTAL.DCOST + TEMP.DCOST
      TOTAL.COST = TOTAL.COST + TEMP.COST
      TOTAL.SALE = TOTAL.SALE + TEMP.SALE
      TOTAL.TSALE = TOTAL.TSALE + TEMP.TSALE
      IF TEMP.VSALE = "Y" THEN
         TOTAL.VSALE = TOTAL.VSALE + TEMP.TSALE
         TOTAL.VCOST = TOTAL.VCOST + TEMP.COST
      END
*
*---- RESTORE TEMP DATA
*
      FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
         ESTD.REC(A)<1,TPTR> = ESTD.TEMP(A)
      NEXT A
      ESTD.QTY<1,TPTR> = TEMP.QTY * 100
      ESTD.STD<1,TPTR> = TEMP.STD * 100
      ESTD.GRP.QTY<1,TPTR> = TEMP.GRP.QTY * 100
990 NEXT TPTR
*
*---- WRITE RECORD FOR NEW QUANTITY
*
1000 *
   ESTD.ID = DEPT:"!":COMP:"!":EQTY
   LOCATE ESTD.ID IN EST.DEPT.COMP<1>,1 SETTING PP ELSE
      EST.DEPT.COMP<1,PP> = ESTD.ID
   END
   EST.DEPT.COMP.HRS<1,PP> = TOTAL.HRS
   EST.DEPT.COMP.DCOST<1,PP> = TOTAL.DCOST
   EST.DEPT.COMP.COST<1,PP> = TOTAL.COST
   EST.DEPT.COMP.SALE<1,PP> = TOTAL.SALE
   EST.DEPT.COMP.TSALE<1,PP> = TOTAL.TSALE
   EST.DEPT.COMP.VSALE<1,PP> = TOTAL.VSALE
   EST.DEPT.COMP.VCOST<1,PP> = TOTAL.VCOST
   MATWRITE ESTD.REC ON ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID
   IF PRINT.FLAG THEN
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
*---- SAVE GROUP VALUES
*
50000 *
   MAT ESTD.TEMP = ""
   TEMP.TYPE = ESTD.TYPE<1,LPTR>
   TEMP.CCTR = ESTD.CCTR<1,LPTR>
   TEMP.GRP.ID = ESTD.GRP.ID<1,LPTR>
   TEMP.GRP.CCTR = ESTD.GRP.CCTR<1,LPTR>
   TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR>
   TEMP.GRP.FCTR = ESTD.GRP.FCTR<1,LPTR>
   TEMP.GRP.QCALC = ESTD.GRP.QCALC<1,LPTR>
   TEMP.GRP.QPARAM = ESTD.GRP.QPARAM<1,LPTR>
   TEMP.GRP.QOR = ESTD.GRP.QOR<1,LPTR>
   TEMP.GRP.FCALC = ESTD.GRP.FCALC<1,LPTR>
   TEMP.GRP.FPARAM = ESTD.GRP.FPARAM<1,LPTR>
   TEMP.GRP.FOR = ESTD.GRP.FOR<1,LPTR>
   TEMP.GRP.QTY = TEMP.GRP.QTY / 100
   IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
   RETURN
*
*---- DISPLAY ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
END
