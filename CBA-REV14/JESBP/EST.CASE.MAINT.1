* OBSOLETE
      SUBROUTINE EST.CASE.MAINT.1 (CONO, ACTION, EST.KEY, STATUS)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.CASE.MAINT.1
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/02/86
*
* DESCRIPTION
*
* This program is used to capture casmaking related data.
*
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.BIND.SPOIL
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      SCREEN DEFINE;EST.CASE.MAINT.1
      SCREEN FORMAT
      IF EST.CASE.BACK.STYLE = "" THEN NEW.REC = 1 ELSE NEW.REC = 0
      MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"C" ELSE
         MAT ESTM.REC = ""
      END
      CASE.RECALC = 0
*
*----- MAIN PROCESSING
*
100*
      S$DATA(1)<S$SCR> = DATE()
      SCREEN DISPLAY;;1
120*
      IF NEW.REC THEN
         MODE = "A"
         FOR FLD = 1 TO 9
            ON FLD GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900
            IF S$VALUE = "END" THEN GOTO 99999
         NEXT FLD
         GOSUB 2100
         GOSUB 2200
      END ELSE
         GOSUB 80000
      END
*
*---- GET OPERATOR REQUEST
*
500*
      BEGIN CASE
      CASE ACTION = "M"
         SCREEN FIELD;;51
         SCREEN INPUT;;51
      CASE 1
         SCREEN FIELD;;53
         SCREEN INPUT;;53
      END CASE
      OPTION = S$VALUE
      BEGIN CASE
         CASE OPTION = "" OR OPTION = "E" OR OPTION = "END"
            IF CASE.RECALC THEN
               SCREEN FIELD;;52
               SCREEN INPUT;;52
               IF S$VALUE = "" OR S$VALUE = "N" THEN GOTO 500
            END
            GOTO 99999
         CASE NUM(OPTION) AND OPTION # ""
            MODE = "C"
            BEGIN CASE
            CASE OPTION <= 10
               ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900
            CASE OPTION <= 20
               ON OPTION-10 GOSUB 2100,2200
            END CASE
         CASE OPTION = "C"
            CASE.RECALC = 0
            S$SCR = S$SCR + 1
            CALL EST.CASE.MAINT.2 (CONO, ACTION, EST.KEY, STATUS)
            S$SCR = S$SCR - 1
            SCREEN FORMAT
            GOSUB 80000
         CASE OPTION = "R"
            RECALC = 1
            CALL EST.CASE.SUB (CONO, "ENDLEAF", RECALC)
            CALL EST.CASE.SUB (CONO, "BOARD", RECALC)
*           CALL EST.CASE.SUB (CONO, "CLOTH", RECALC)
            GOSUB 70100
            GOSUB 70200
            GOSUB 80000
         CASE 1
            ERRMSG = "Invalid Selection"
            GOSUB 90000
      END CASE
      GOTO 500
*
*---- GET BACK STYLE
*
1100*
      PREV.BACK.STYLE = EST.CASE.BACK.STYLE
      SCREEN FIELD;;2
      SCREEN INPUT;;2;RETURN
      EST.CASE.BACK.STYLE = S$VALUE
      IF MODE = "C" AND EST.CASE.BACK.STYLE # PREV.BACK.STYLE THEN
         CASE.RECALC = 1
         RECALC = 1
         CALL EST.CASE.SUB (CONO, "BOARD", RECALC)
         GOSUB 70200
         CALL EST.CASE.SUB (CONO, "CLOTH", RECALC)
         GOSUB 80000
      END
      RETURN
*
*---- GET CASE PIECES
*
1200*
      PREV.PIECES = EST.CASE.PIECES
      SCREEN FIELD;;3
      SCREEN INPUT;;3;RETURN
      EST.CASE.PIECES = S$VALUE
      IF MODE = "C" AND EST.CASE.PIECES # PREV.PIECES THEN
         CASE.RECALC = 1
         RECALC = 1
         CALL EST.CASE.SUB (CONO, "CLOTH", RECALC)
      END
      RETURN
*
*---- GET SHOW DIMENSION
*
1300*
      PREV.SHOW.SIZE = EST.CASE.SHOW.SIZE
      IF EST.CASE.PIECES = 1 THEN
         S$DATA(4)<S$SCR> = ""
         SCREEN DISPLAY;;4
         EST.CASE.SHOW.SIZE = ""
      END ELSE
         SCREEN FIELD;;4
         SCREEN INPUT;;4;RETURN
         EST.CASE.SHOW.SIZE = S$VALUE
      END
      IF MODE = "C" AND EST.CASE.SHOW.SIZE # PREV.SHOW.SIZE THEN
         CASE.RECALC = 1
         RECALC = 1
         CALL EST.CASE.SUB (CONO, "CLOTH", RECALC)
      END
      RETURN
*
*---- GET CASE-MAKER DATA
*
1400*
      S$DATA(5)<S$SCR> = EST.CASEMAKER.CCTR
      SCREEN FIELD;;5
      SCREEN INPUT;;5;RETURN
      IF S$VALUE # "" THEN
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
            ERRMSG = "Invalid Equipment ID. Try again !"
            GOSUB 90000
            GOTO 1400
         END
         IF EQP.TYPE # "26" THEN
            ERRMSG = "Invalid Equipment Type. Try again! "
            GOSUB 90000
            GOTO 1400
         END
      END
      EST.CASEMAKER.CCTR = S$VALUE
      RETURN
*
*---- GET CASE-STAMPER DATA
*
1500*
      S$DATA(6)<S$SCR> = EST.CASESTAMP.CCTR
      SCREEN FIELD;;6
      SCREEN INPUT;;6;RETURN
      IF S$VALUE = "" THEN
         EST.CASESTAMP.CCTR = ""
         EST.CASESTAMP.HITS = ""
      END ELSE
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
            ERRMSG = "Invalid Equipment ID. Try again !"
            GOSUB 90000
            GOTO 1500
         END
         IF EQP.TYPE # "28" THEN
            ERRMSG = "Invalid Equipment Type. Try again! "
            GOSUB 90000
            GOTO 1500
         END
         EST.CASESTAMP.CCTR = S$VALUE
         SCREEN FIELD;;7
         SCREEN INPUT;;7;RETURN
         EST.CASESTAMP.HITS = S$VALUE
      END
      RETURN
*
*---- CASE CASE-IN DATA
*
1600*
      S$DATA(8)<S$SCR> = EST.CASEIN.CCTR
      SCREEN FIELD;;8
      SCREEN INPUT;;8;RETURN
      IF S$VALUE # "" THEN
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:S$VALUE ELSE
            ERRMSG = "Invalid Equipment ID. Try again !"
            GOSUB 90000
            GOTO 1600
         END
         IF EQP.TYPE # "30" THEN
            ERRMSG = "Invalid Equipment Type. Try again! "
            GOSUB 90000
            GOTO 1600
         END
      END
      EST.CASEIN.CCTR = S$VALUE
      RETURN
*
*---- GET ENDLEAF SPOILAGE
*
1700*
      PREV.SPOIL = EST.CASE.SPOIL<1,1>
      S$DATA(9)<S$SCR> = EST.CASE.SPOIL<1,1>
      SCREEN FIELD;;9
      SCREEN INPUT;;9;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
            ERRMSG = "Invalid bindery spoilage table ID. Try again! "
            GOSUB 90000
            GOTO 1700
         END
      END
      EST.CASE.SPOIL<1,1> = S$VALUE
      IF MODE = "C" AND EST.CASE.SPOIL<1,1> # PREV.SPOIL THEN
         GOSUB 70100
      END
      RETURN
*
*---- GET BOARD SPOILAGE
*
1800*
      PREV.SPOIL = EST.CASE.SPOIL<1,2>
      S$DATA(10)<S$SCR> = EST.CASE.SPOIL<1,2>
      SCREEN FIELD;;10
      SCREEN INPUT;;10;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
            ERRMSG = "Invalid bindery spoilage table ID. Try again! "
            GOSUB 90000
            GOTO 1800
         END
      END
      EST.CASE.SPOIL<1,2> = S$VALUE
      IF MODE = "C" AND EST.CASE.SPOIL<1,2> # PREV.SPOIL THEN
         GOSUB 70200
      END
      RETURN
*
*---- GET CLOTH SPOILAGE
*
1900*
      PREV.SPOIL = EST.CASE.SPOIL<1,3>
      S$DATA(11)<S$SCR> = EST.CASE.SPOIL<1,3>
      SCREEN FIELD;;11
      SCREEN INPUT;;11;RETURN
      IF NOT(NUM(S$VALUE)) THEN
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
            ERRMSG = "Invalid bindery spoilage table ID. Try again! "
            GOSUB 90000
            GOTO 1900
         END
      END
      EST.CASE.SPOIL<1,3> = S$VALUE
      IF MODE = "C" AND EST.CASE.SPOIL<1,3> # PREV.SPOIL THEN
      END
      RETURN
*
*---- GET ENDLEAF ITEM
*
2100*
      RECALC = 0
      PREV.ENDLEAF = EST.CASE.ENDLF<1,1>
      S$DATA(12)<S$SCR> = PREV.ENDLEAF
      SCREEN FIELD;;12
      SCREEN INPUT;;12;RETURN
      IF S$VALUE # PREV.ENDLEAF THEN
         IF S$VALUE = "" THEN
            EST.CASE.ENDLF = ""
            EST.CASE.ENDLF.SRC = ""
            EST.CASE.ENDLF.SIZE = ""
            EST.CASE.ENDLF.SPEC = ""
            EST.CASE.ENDLF.PRICE = ""
            RECALC = 1
         END ELSE
            LOCATE S$VALUE IN ESTM.PROD<1>,1 SETTING MP ELSE
               ERRMSG = "Invalid item ID. Try again !"
               GOSUB 90000
               GOTO 2100
            END
            EST.CASE.ENDLF<1,1> = S$VALUE
            EST.CASE.ENDLF<1,2> = ESTM.DESC<1,MP>
            EST.CASE.ENDLF.SIZE<1,1> = ESTM.WIDTH<1,MP>
            EST.CASE.ENDLF.SIZE<1,2> = ESTM.LENGTH<1,MP>
            EST.CASE.ENDLF.SRC = ""
            EST.CASE.ENDLF.SPEC<1,1> = ESTM.BASIS.WT<1,MP> / 100
            EST.CASE.ENDLF.SPEC<1,2> = ESTM.GRAIN<1,MP>
            EST.CASE.ENDLF.SPEC<1,3> = ESTM.CLR.CD<1,MP>
            EST.CASE.ENDLF.SPEC<1,4> = ESTM.FINISH.CD<1,MP>
            EST.CASE.ENDLF.PRICE<1,1,1> = ESTM.COST<1,MP>
            EST.CASE.ENDLF.PRICE<1,1,2> = ESTM.COST<1,MP>
            EST.CASE.ENDLF.PRICE<1,1,3> = ESTM.COST<1,MP>
            EST.CASE.ENDLF.PRICE<1,2> = ESTM.UM<1,MP>
            EST.CASE.ENDLF.PRICE<1,3> = ESTM.COST.UNIT<1,MP>
            RECALC = 1
         END
         GOSUB 80000
      END
      IF EST.CASE.ENDLF<1,1> = "" THEN GOTO 2190
2110*
      SCREEN FIELD;;13
      SCREEN INPUT;;13;RETURN
      EST.CASE.ENDLF<1,2> = S$VALUE
2112*
      PREV.SIZE = EST.CASE.ENDLF.SIZE<1,1>
      SCREEN FIELD;;14
      SCREEN INPUT;;14;RETURN
      EST.CASE.ENDLF.SIZE<1,1> = S$VALUE
      IF EST.CASE.ENDLF.SIZE<1,1> # PREV.SIZE THEN RECALC = 1
2114*
      PREV.SIZE = EST.CASE.ENDLF.SIZE<1,2>
      SCREEN FIELD;;15
      SCREEN INPUT;;15;RETURN
      EST.CASE.ENDLF.SIZE<1,2> = S$VALUE
      IF EST.CASE.ENDLF.SIZE<1,2> # PREV.SIZE THEN RECALC = 1
2116*
      IF EST.CASE.ENDLF.SIZE<1,2> = "" THEN
         EST.CASE.ENDLF.SRC = "R"
      END ELSE
         EST.CASE.ENDLF.SRC = "S"
      END
      S$DATA(16)<S$SCR> = EST.CASE.ENDLF.SRC
      SCREEN DISPLAY;;16
2118*
      SCREEN FIELD;;17
      SCREEN INPUT;;17;RETURN
      EST.CASE.ENDLF.SPEC<1,1> = S$VALUE
2120*
      SCREEN FIELD;;18
      SCREEN INPUT;;18;RETURN
      EST.CASE.ENDLF.SPEC<1,2> = S$VALUE
2122*
      SCREEN FIELD;;19
      SCREEN INPUT;;19;RETURN
      EST.CASE.ENDLF.SPEC<1,3> = S$VALUE
2124*
      SCREEN FIELD;;20
      SCREEN INPUT;;20;RETURN
      EST.CASE.ENDLF.SPEC<1,4> = S$VALUE
2126*
      SCREEN FIELD;;21
      SCREEN INPUT;;21;RETURN
      EST.CASE.ENDLF.PRICE<1,1,1> = S$VALUE
      EST.CASE.ENDLF.PRICE<1,1,2> = S$VALUE
      EST.CASE.ENDLF.PRICE<1,1,3> = S$VALUE
2128*
      SCREEN FIELD;;22
      SCREEN INPUT;;22;RETURN
      EST.CASE.ENDLF.PRICE<1,2> = S$VALUE
2130*
      SCREEN FIELD;;23
      SCREEN INPUT;;23;RETURN
      EST.CASE.ENDLF.PRICE<1,3> = S$VALUE
2190*
      CALL EST.CASE.SUB (CONO, "ENDLEAF", RECALC)
      S$DATA(24)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,1>
      S$DATA(25)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,2>
      S$DATA(26)<S$SCR> = EST.CASE.ENDLF.CUT.OUT
      SCREEN DISPLAY;;24
      SCREEN DISPLAY;;25
      SCREEN DISPLAY;;26
      GOSUB 70100
      RETURN
*
*---- GET BOARD ITEM
*
2200*
      RECALC = 0
      PREV.BOARD = EST.CASE.BOARD<1,1>
      S$DATA(29)<S$SCR> = PREV.BOARD
      SCREEN FIELD;;29
      SCREEN INPUT;;29;RETURN
      IF S$VALUE # PREV.BOARD THEN
         IF S$VALUE = "" THEN
            EST.CASE.BOARD = ""
            EST.CASE.BOARD.SRC = ""
            EST.CASE.BOARD.SIZE = ""
            EST.CASE.BOARD.SPEC = ""
            EST.CASE.BOARD.PRICE = ""
            RECALC = 1
         END ELSE
            LOCATE S$VALUE IN ESTM.PROD<1>,1 SETTING MP ELSE
               ERRMSG = "Invalid item ID. Try again !"
               GOSUB 90000
               GOTO 2200
            END
            EST.CASE.BOARD<1,1> = S$VALUE
            EST.CASE.BOARD<1,2> = ESTM.DESC<1,MP>
            EST.CASE.BOARD.SIZE<1,1> = ESTM.WIDTH<1,MP>
            EST.CASE.BOARD.SIZE<1,2> = ESTM.LENGTH<1,MP>
            EST.CASE.BOARD.SRC = ""
            EST.CASE.BOARD.SPEC<1,1> = ESTM.CALIPER<1,MP>
            EST.CASE.BOARD.SPEC<1,2> = ESTM.GRAIN<1,MP>
            EST.CASE.BOARD.PRICE<1,1,1> = ESTM.COST<1,MP>
            EST.CASE.BOARD.PRICE<1,1,2> = ESTM.COST<1,MP>
            EST.CASE.BOARD.PRICE<1,1,3> = ESTM.COST<1,MP>
            EST.CASE.BOARD.PRICE<1,2> = ESTM.UM<1,MP>
            EST.CASE.BOARD.PRICE<1,3> = ESTM.COST.UNIT<1,MP>
            RECALC = 1
         END
         GOSUB 80000
      END
      IF EST.CASE.BOARD<1,1> = "" THEN GOTO 2290
2210*
      SCREEN FIELD;;30
      SCREEN INPUT;;30;RETURN
      EST.CASE.BOARD<1,2> = S$VALUE
2212*
      PREV.SIZE = EST.CASE.BOARD.SIZE<1,1>
      SCREEN FIELD;;31
      SCREEN INPUT;;31;RETURN
      EST.CASE.BOARD.SIZE<1,1> = S$VALUE
      IF EST.CASE.BOARD.SIZE<1,1> # PREV.SIZE THEN RECALC = 1
2214*
      PREV.SIZE = EST.CASE.BOARD.SIZE<1,2>
      SCREEN FIELD;;32
      SCREEN INPUT;;32;RETURN
      EST.CASE.BOARD.SIZE<1,2> = S$VALUE
      IF EST.CASE.BOARD.SIZE<1,2> # PREV.SIZE THEN RECALC = 1
2216*
      SCREEN FIELD;;33
      SCREEN INPUT;;33;RETURN
      EST.CASE.BOARD.SRC = S$VALUE
2218*
      SCREEN FIELD;;34
      SCREEN INPUT;;34;RETURN
      EST.CASE.BOARD.SPEC<1,1> = S$VALUE
2220*
      SCREEN FIELD;;35
      SCREEN INPUT;;35;RETURN
      EST.CASE.BOARD.SPEC<1,2> = S$VALUE
2226*
      SCREEN FIELD;;36
      SCREEN INPUT;;36;RETURN
      EST.CASE.BOARD.PRICE<1,1,1> = S$VALUE
      EST.CASE.BOARD.PRICE<1,1,2> = S$VALUE
      EST.CASE.BOARD.PRICE<1,1,3> = S$VALUE
2228*
      SCREEN FIELD;;37
      SCREEN INPUT;;37;RETURN
      EST.CASE.BOARD.PRICE<1,2> = S$VALUE
2230*
      SCREEN FIELD;;38
      SCREEN INPUT;;38;RETURN
      EST.CASE.BOARD.PRICE<1,3> = S$VALUE
2290*
      CALL EST.CASE.SUB (CONO, "BOARD", RECALC)
      S$DATA(39)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,1>
      S$DATA(40)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,2>
      S$DATA(41)<S$SCR> = EST.CASE.SIDE.BD.CUT.OUT
      SCREEN DISPLAY;;39
      SCREEN DISPLAY;;40
      SCREEN DISPLAY;;41
      SIZE.CHG = 0
      IF EST.CASE.SIDE.BD.CUT.SIZE<1,1> # "" THEN
         PREV.SIZE = EST.CASE.SIDE.BD.CUT.SIZE<1,1>
         SCREEN FIELD;;39
         SCREEN INPUT;;39;RETURN
         EST.CASE.SIDE.BD.CUT.SIZE<1,1> = S$VALUE
         IF EST.CASE.SIDE.BD.CUT.SIZE<1,1> # PREV.SIZE THEN SIZE.CHG = 1
      END
      IF EST.CASE.SIDE.BD.CUT.SIZE<1,2> # "" THEN
         PREV.SIZE = EST.CASE.SIDE.BD.CUT.SIZE<1,2>
         SCREEN FIELD;;40
         SCREEN INPUT;;40;RETURN
         EST.CASE.SIDE.BD.CUT.SIZE<1,2> = S$VALUE
         IF EST.CASE.SIDE.BD.CUT.SIZE<1,2> # PREV.SIZE THEN SIZE.CHG = 1
      END
      IF SIZE.CHG THEN
         CALL EST.CASE.SUB (CONO, "BOARD", "0")
         S$DATA(41)<S$SCR> = EST.CASE.SIDE.BD.CUT.OUT
         SCREEN DISPLAY;;41
      END
      S$DATA(44)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,1>
      S$DATA(45)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,2>
      S$DATA(46)<S$SCR> = EST.CASE.SPINE.BD.CUT.OUT
      SCREEN DISPLAY;;44
      SCREEN DISPLAY;;45
      SCREEN DISPLAY;;46
      SIZE.CHG = 0
      IF EST.CASE.SPINE.BD.CUT.SIZE<1,1> # "" THEN
         PREV.SIZE = EST.CASE.SPINE.BD.CUT.SIZE<1,1>
         SCREEN FIELD;;44
         SCREEN INPUT;;44;RETURN
         EST.CASE.SPINE.BD.CUT.SIZE<1,1> = S$VALUE
         IF EST.CASE.SPINE.BD.CUT.SIZE<1,1> # PREV.SIZE THEN SIZE.CHG = 1
      END
      IF EST.CASE.SPINE.BD.CUT.SIZE<1,2> # "" THEN
         PREV.SIZE = EST.CASE.SPINE.BD.CUT.SIZE<1,2>
         SCREEN FIELD;;45
         SCREEN INPUT;;45;RETURN
         EST.CASE.SPINE.BD.CUT.SIZE<1,2> = S$VALUE
         IF EST.CASE.SPINE.BD.CUT.SIZE<1,2> # PREV.SIZE THEN SIZE.CHG = 1
      END
      GOSUB 70200
      RETURN
*
*---- CALCULATE ENDLEAF REQUIREMENT
*
70100*
      IF EST.CASE.ENDLF<1,1> # "" AND EST.CASE.ENDLF.CUT.OUT+0 > 0 THEN
         EST.CASE.ENDLF.QTY = ""
         MAT ESTD.TEMP = ""
         TEMP.OPV = EST.CASE.ENDLF<1,1>
         EQTY = EST.QTY<1,1>
         DEPT = ""
         COMP = 1
         CALL EST.FORMULA.Q050 (CONO, ACTION, EQTY, DEPT, COMP)
      END
      S$DATA(27)<S$SCR> = EST.CASE.ENDLF.QTY<1,1,1>
      S$DATA(28)<S$SCR> = EST.CASE.ENDLF.QTY<1,2>
      SCREEN DISPLAY;;27
      SCREEN DISPLAY;;28
      RETURN
*
*---- CALCULATE BOARD REQUIREMENT
*
70200*
      IF EST.CASE.BOARD<1,1> # "" THEN
         EST.CASE.SIDE.BD.QTY = ""
         EST.CASE.SPINE.BD.QTY = ""
         MAT ESTD.TEMP = ""
         TEMP.OPV = EST.CASE.BOARD<1,1>
         EQTY = EST.QTY<1,1>
         DEPT = ""
         COMP = 1
         CALL EST.FORMULA.Q055 (CONO, ACTION, EQTY, DEPT, COMP)
      END
      S$DATA(42)<S$SCR> = EST.CASE.SIDE.BD.QTY<1,1,1>
      S$DATA(43)<S$SCR> = EST.CASE.SIDE.BD.QTY<1,2>
      SCREEN DISPLAY;;42
      SCREEN DISPLAY;;43
      S$DATA(47)<S$SCR> = EST.CASE.SPINE.BD.QTY<1,1,1>
      S$DATA(48)<S$SCR> = EST.CASE.SPINE.BD.QTY<1,2>
      SCREEN DISPLAY;;47
      SCREEN DISPLAY;;48
      RETURN
*
*---- LOAD DATA
*
80000*
      S$DATA(2)<S$SCR> = EST.CASE.BACK.STYLE
      S$DATA(3)<S$SCR> = EST.CASE.PIECES
      S$DATA(4)<S$SCR> = EST.CASE.SHOW.SIZE
      S$DATA(5)<S$SCR> = EST.CASEMAKER.CCTR
      S$DATA(6)<S$SCR> = EST.CASESTAMP.CCTR
      S$DATA(7)<S$SCR> = EST.CASESTAMP.HITS
      S$DATA(8)<S$SCR> = EST.CASEIN.CCTR
      S$DATA(9)<S$SCR> = EST.CASE.SPOIL<1,1>
      S$DATA(10)<S$SCR> = EST.CASE.SPOIL<1,2>
      S$DATA(11)<S$SCR> = EST.CASE.SPOIL<1,3>
      S$DATA(12)<S$SCR> = EST.CASE.ENDLF<1,1>
      S$DATA(13)<S$SCR> = EST.CASE.ENDLF<1,2>
      S$DATA(14)<S$SCR> = EST.CASE.ENDLF.SIZE<1,1>
      S$DATA(15)<S$SCR> = EST.CASE.ENDLF.SIZE<1,2>
      S$DATA(16)<S$SCR> = EST.CASE.ENDLF.SRC
      S$DATA(17)<S$SCR> = EST.CASE.ENDLF.SPEC<1,1>
      S$DATA(18)<S$SCR> = EST.CASE.ENDLF.SPEC<1,2>
      S$DATA(19)<S$SCR> = EST.CASE.ENDLF.SPEC<1,3>
      S$DATA(20)<S$SCR> = EST.CASE.ENDLF.SPEC<1,4>
      S$DATA(21)<S$SCR> = EST.CASE.ENDLF.PRICE<1,1,1>
      S$DATA(22)<S$SCR> = EST.CASE.ENDLF.PRICE<1,2>
      S$DATA(23)<S$SCR> = EST.CASE.ENDLF.PRICE<1,3>
      S$DATA(24)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,1>
      S$DATA(25)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,2>
      S$DATA(26)<S$SCR> = EST.CASE.ENDLF.CUT.OUT
      S$DATA(27)<S$SCR> = EST.CASE.ENDLF.QTY<1,1,1>
      S$DATA(28)<S$SCR> = EST.CASE.ENDLF.QTY<1,2>
      S$DATA(29)<S$SCR> = EST.CASE.BOARD<1,1>
      S$DATA(30)<S$SCR> = EST.CASE.BOARD<1,2>
      S$DATA(31)<S$SCR> = EST.CASE.BOARD.SIZE<1,1>
      S$DATA(32)<S$SCR> = EST.CASE.BOARD.SIZE<1,2>
      S$DATA(33)<S$SCR> = EST.CASE.BOARD.SRC
      S$DATA(34)<S$SCR> = EST.CASE.BOARD.SPEC<1,1>
      S$DATA(35)<S$SCR> = EST.CASE.BOARD.SPEC<1,2>
      S$DATA(36)<S$SCR> = EST.CASE.BOARD.PRICE<1,1,1>
      S$DATA(37)<S$SCR> = EST.CASE.BOARD.PRICE<1,2>
      S$DATA(38)<S$SCR> = EST.CASE.BOARD.PRICE<1,3>
      S$DATA(39)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,1>
      S$DATA(40)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,2>
      S$DATA(41)<S$SCR> = EST.CASE.SIDE.BD.CUT.OUT
      S$DATA(42)<S$SCR> = EST.CASE.SIDE.BD.QTY<1,1,1>
      S$DATA(43)<S$SCR> = EST.CASE.SIDE.BD.QTY<1,2>
      S$DATA(44)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,1>
      S$DATA(45)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,2>
      S$DATA(46)<S$SCR> = EST.CASE.SPINE.BD.CUT.OUT
      S$DATA(47)<S$SCR> = EST.CASE.SPINE.BD.QTY<1,1,1>
      S$DATA(48)<S$SCR> = EST.CASE.SPINE.BD.QTY<1,2>
80090*
      SCREEN DISPLAY;;ALL
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
      SCREEN CLEAR;;D
      RETURN
   END
