********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - BUILD QUOTE
* AUTHOR   - ANN POWLEY, COMPUTER BUSINESS ASSOCIATES
* DATE     - 08/07/90
* DESCRIPTION
* This program will build the estimate quote file.
* MOD TASK 17918 DMT 8/15/94 ADD BACK MARGIN MODS
* T22154 stefanie 08/18/1997 * Fix Rev10B - Rev11 match problems.
*T23278 markt 10/23/1998 * Add check for divisional security
*T23909 rick 04/29/99 * Modify report to print sales version
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>JES.CPYLIB>EST.COST.TYPE.SUM
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>ICS.CPYLIB>COLOR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*
*---- OPEN ALL FILES
*
*T23909 v
  PROCREAD RPT.TYPE ELSE RPT.TYPE = "ORIG"
*T23909 ^
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000; GOTO 99999
  END
*T23909 v      
  IF RPT.TYPE = "SALES" THEN
    OPEN "QUOTE.PRT2" TO QUOTE.PRT ELSE
      ERRMSG = "CANNOT OPEN QUOTE.PRT2 FILE"
      GOSUB 90000;GOTO 99999
    END
  END ELSE
    OPEN "","QUOTE.PRT" TO QUOTE.PRT ELSE
      ERRMSG = "CANNOT OPEN QUOTE.PRT FILE"
      GOSUB 90000; GOTO 99999
    END
  END
*T23909 ^
  OPEN "","ESTIMATE" TO ESTIMATE ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.DEPT FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","ESTIMATE.WORK" TO ESTIMATE.WORK ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.WORK FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","ESTIMATE.PAPER.GROUP" TO ESTIMATE.PAPER.GROUP ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.PAPER.GROUP FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","COLOR" TO COLOR ELSE
    ERRMSG = "CANNOT OPEN COLOR FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "CANNOT OPEN XREF.DATA FILE"
    GOSUB 90000; GOTO 99999
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
    GOSUB 90000; GOTO 99999
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
  PROMPT ""
  PAGE.NO = 0
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;BUILD.QUOTE
  SCREEN FORMAT
  SCREEN COUNT;BUILD.QUOTE;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  CURR.REF.NO = ""
  REF.NO = 1
  NEW.DESC = ""
  MAT GEN.XREF.REC=""
  GXR.CO=CONO
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  SCREEN CLEAR
110 *
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;BUILD.QUOTE;1
120 *
  SCREEN FIELD;BUILD.QUOTE;2
  SCREEN INPUT;BUILD.QUOTE;2
  IF S$VALUE = "END" THEN GOTO 99999
  QUOTE.NO = S$VALUE
  QUOTE.DATE = DATE()
  NEW.REC = 0
  QDISPLAY = ""
  QSCR = ""
  QCD = ""
  PRT.QTY = ""
  MATREAD EST.REC FROM ESTIMATE, CONO:QUOTE.NO ELSE
    ERRMSG = "Estimate not on file. Try again! "
    GOSUB 90000
    GOTO 120
  END
*T23278 v
  DIV.CODE = EST.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
  CALL SI.CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    GOSUB 90000; GOTO 120
  END
*T23278 ^
  IF EST.PDEF.TYPE = "RL" THEN
    ERRMSG = "Roll label estimate does not currently have quote letter function available"
    GOSUB 90000
    GOTO 120
  END
  * T26126 v
  READU QUOTE FROM QUOTE.PRT, CONO:QUOTE.NO LOCKED
    ERRMSG = 'ESTIMATE QUOTE record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 120 
  END ELSE
    QUOTE=""; NEW.REC = 1
  END
  * T26126 ^
  IF NEW.REC THEN
    LINE.CNT = 0
    P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4):"Now building print record." ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    PRT.QTY<1>=EST.QTY
    MATREAD EST.REC FROM ESTIMATE, CONO:QUOTE.NO ELSE
      ERRMSG = "Estimate not on file. Try again! "
      GOSUB 90000
      GOTO 120
    END
*T23278 v
    DIV.CODE = EST.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
    CALL SI.CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 90000; GOTO 120
    END
*T23278 ^
    GOSUB 6000
    P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4) ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  LINE.CNT = DCOUNT(QUOTE,AM)
  LINE.CNT = LINE.CNT - 4
  FOR I = 1 TO LINE.CNT
    BEGIN CASE
      CASE QUOTE<I+4,2> = "" AND QUOTE<I+4,1>[1,1] # "-" AND QUOTE<I+4,1>[1,1] # ""
        QDISPLAY<1,I> = ""
        QSCR<1,I> = QUOTE<I+4,1>
        QCD<1,I> = 2
      CASE 1
        QDISPLAY<1,I> = QUOTE<I+4,1>
        QSCR<1,I> = QUOTE<I+4,2>
        QCD<1,I> = 1
    END CASE
  NEXT I
  GOSUB 80000
  REF.NO = 1
  CURR.REF.NO = ""
  GOSUB 50000
*
*---- GET OPERATOR REPLY
*
300 *
  SCREEN FIELD;BUILD.QUOTE;21
  SCREEN INPUT;BUILD.QUOTE;21
  OPTION = S$VALUE
  BEGIN CASE
    CASE NUM(OPTION)
      ON OPTION GOSUB 400,500,550,570
    CASE OPTION = "A"
      MODE = "A"
      DONE = 0
      FOR REF.NO = LINE.CNT+1 TO 999 UNTIL DONE
        GOSUB 50000
        GOSUB 1000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          LINE.CNT = REF.NO
        END
      NEXT REF.NO
      REF.NO = LINE.CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPTION = "C" AND LINE.CNT > 0
      MODE = "C"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 1000
      END
    CASE OPTION = "D" AND LINE.CNT > 0
      MODE = "D"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        LINE.CNT = LINE.CNT - 1
        IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPTION = "I" AND LINE.CNT > 0
      MODE = "I"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 800
        LINE.CNT = LINE.CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 1000
        IF S$VALUE = "END" THEN
          GOSUB 700
          LINE.CNT = LINE.CNT - 1
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPTION = "S" AND LINE.CNT > 0
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    * T25978 v
    CASE OPTION = 'SR' AND LINE.CNT > 0
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPTION = 'ST'
      REF.NO = 1
      GOSUB 50000
    CASE OPTION = 'SB'
      REF.NO = LINE.CNT
      GOSUB 50000
    * T25978 ^
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "F"
      SAVE.CUST = QUOTE<1>
      SAVE.ATTN = QUOTE<3>
      SAVE.BUD = QUOTE<2>
      SAVE.LET = QUOTE<4>
      QUOTE = ""
      FOR I = 1 TO LINE.CNT
        BEGIN CASE
          CASE QDISPLAY<1,I> = "" AND QSCR<1,I> = ""
            QUOTE<I+4> = ""
          CASE QCD<1,I> = 2
            QUOTE<I+4,1> = QSCR<1,I>
          CASE 1
            QUOTE<I+4,1> = QDISPLAY<1,I>
            QUOTE<I+4,2> = QSCR<1,I>
        END CASE
      NEXT I
      QUOTE<1> = SAVE.CUST
      QUOTE<2> = SAVE.BUD
      QUOTE<3> = SAVE.ATTN
      QUOTE<4> = SAVE.LET
      WRITE QUOTE ON QUOTE.PRT, CONO:QUOTE.NO
      GOTO 100
  END CASE
  GOTO 300
*
*--- CUSTOMER
400 *
  SCREEN FIELD;BUILD.QUOTE;23
  SCREEN INPUT;BUILD.QUOTE;23
  IF S$VALUE # "END" THEN QUOTE<1> = S$VALUE
  RETURN
500 *
  SCREEN FIELD;BUILD.QUOTE;25
  SCREEN INPUT;BUILD.QUOTE;25
  IF S$VALUE # "END" THEN QUOTE<3> = S$VALUE
  RETURN
550 *
  SCREEN FIELD;BUILD.QUOTE;26
  SCREEN INPUT;BUILD.QUOTE;26
  IF S$VALUE # "END" THEN QUOTE<2> = S$VALUE
  RETURN
570 *
  SCREEN FIELD;BUILD.QUOTE;24
  SCREEN INPUT;BUILD.QUOTE;24
  IF S$VALUE # "END" THEN QUOTE<4> = S$VALUE
  RETURN
*
*---- GET LINE REFERENCE NUMBER
*
600 *
  SCREEN FIELD;BUILD.QUOTE;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;BUILD.QUOTE;22
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  QDISPLAY = DELETE(QDISPLAY,1,REF.NO,0)
  QSCR = DELETE(QSCR,1,REF.NO,0)
  QCD = DELETE(QCD,1,REF.NO,0)
  GOSUB 80000
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  QDISPLAY = INSERT(QDISPLAY,1,REF.NO,0,"")
* T22154 v
  IF QDISPLAY<1,REF.NO + 1>[1,1] = '-' THEN
    QDISPLAY<1,REF.NO> = QDISPLAY<1,REF.NO + 1>
    QDISPLAY<1,REF.NO + 1> = ''
  END
* T22154 ^
  QSCR = INSERT(QSCR,1,REF.NO,0,"")
  QCD = INSERT(QCD,1,REF.NO,0,"")
  GOSUB 80000
  RETURN
*
*---- GET MULTI-LINE DATA
*
1000 *
  S$VAL = REF.NO
  SCREEN DISPLAY;BUILD.QUOTE;11
1010 *
  S$VAL = REF.NO
  SCREEN FIELD;BUILD.QUOTE;13
  SCREEN INPUT;BUILD.QUOTE;13;RETURN
  QSCR<1,REF.NO> = S$VALUE
  S$VAL = REF.NO
  QCD<1,REF.NO> = 1
  IF REF.NO # 1 THEN
    IF QCD<1,REF.NO-1> = 2 OR QCD<1,REF.NO+1> = 2 THEN
      QCD<1,REF.NO> = 2
    END
  END ELSE
    IF QCD<1,REF.NO+1> = 2 THEN
      QCD<1,REF.NO> = 2
    END
  END
  RETURN
*
*---- SELECT QUANTITIES
*
5000 *
  EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
  BEGIN CASE
    CASE EC < 4 
      PRT.QTY<1>=EST.QTY
    CASE EC < 6
      S$VALUE = 1
      FOR IPTR = 1 TO 3 UNTIL S$VALUE = '' OR S$VALUE = 'END'
        S$VALUE = ''
        SCREEN FIELD;;35
        S$MINV=1;S$MAXV=EC
        S$PMSG="Enter Quantity"
        IF IPTR = 1 THEN
          FOR EP=1 TO EC
            S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
            IF EP = 1 THEN
              S$VALDAT = EP
            END ELSE
              S$VALDAT = S$VALDAT:",":EP
            END
          NEXT EP
          SAVE.VALDAT = S$VALDAT
          SAVE.PMSG = S$PMSG
        END ELSE
          S$DEFAULT = ''
        END
        S$PMSG = SAVE.PMSG
        S$VALDAT = SAVE.VALDAT
        SCREEN INPUT;;35
        IF S$VALUE # '' AND S$VALUE # 'END' THEN
          S$VALDAT = SAVE.VALDAT
          S$VALDAT = CHANGE(S$VALDAT,",",VM)
          LOCATE S$VALUE IN S$VALDAT<1>,1 SETTING VPTR THEN
            DEL S$VALDAT<1,VPTR>
          END
          S$VALDAT = CHANGE(S$VALDAT,VM,",")
          PRT.QTY<1,IPTR>=EST.QTY<1,S$VALUE>
          SAVE.VALDAT = S$VALDAT
          SEL.QTY = EST.QTY<1,S$VALUE>
          SEL.PTR = "(":S$VALUE:") ":SEL.QTY
          NEW.PTR = "(":S$VALUE:") SELECTED"
          SAVE.PMSG = CHANGE(SAVE.PMSG,SEL.PTR,NEW.PTR)
        END
      NEXT IPTR
    CASE 1
      GXR.ID = 1
      FOR IPTR = 1 TO 99 UNTIL GXR.ID = '' OR DCOUNT(PRT.QTY,VM) = 3
        GXR.ID = ''
        GXR.NAME = 'EST.QTY.SEL'
        GXR.XREF = ESTIMATE.WORK
        GXR.SRCH.ID = QUOTE.NO
        IF IPTR = 1 THEN
          MATWRITE EST.REC ON ESTIMATE.WORK, CONO:QUOTE.NO
        END
        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        SCREEN FORMAT
        GOSUB 80090
        IF GXR.ID # "" THEN 
          MATREADU EST.REC FROM ESTIMATE.WORK, CONO:QUOTE.NO ELSE NULL
          SEL.QTY = EST.QTY<1,GXR.ID>
          PRT.QTY<1,IPTR> = SEL.QTY
          LOCATE SEL.QTY IN EST.QTY<1>,1 SETTING EPTR THEN
            DEL EST.QTY<1,EPTR>
            MATWRITE EST.REC ON ESTIMATE.WORK, CONO:QUOTE.NO
          END
        END
      NEXT IPTR
      DELETE ESTIMATE.WORK, CONO:QUOTE.NO
  END CASE
  RETURN
*
*--- BUILD THE RECORD
*
6000 *
  QUOTE<1> = EST.CUST.NAME
  QUOTE<2> = "N"
  QUOTE<3> = EST.CUST.ATTN
  QUOTE<4> = "N"
  LN.CNT = 5
*
*--- ITEM
*
  CNT = DCOUNT(EST.COMMENTS,VM)
  OLD.DESC = ""
  FOR I = 1 TO CNT
    IF EST.COMMENT.TYPE<1,I> = "" THEN
      OLD.DESC = OLD.DESC:EST.COMMENTS<1,I>:" "
    END
  NEXT I
  CALL DESC.REFORMAT (OLD.DESC,"35",NEW.DESC)
  IF NEW.DESC # "" THEN
    QUOTE<LN.CNT,1> = "ITEM:"
    QUOTE<LN.CNT+1,1> = "----"
    CNT = DCOUNT(NEW.DESC,VM)
    FOR I = 1 TO CNT
      QUOTE<LN.CNT,2> = NEW.DESC<1,I>
      LN.CNT = LN.CNT + 1
    NEXT I
    IF CNT < 2 THEN LN.CNT = LN.CNT + 1
    LN.CNT = LN.CNT + 1
  END
*
*--- SIZE
*
  QUOTE<LN.CNT,1> = "SIZE:"
  QUOTE<LN.CNT+1,1> = "----"
  DMAX = 0
  CNT = DCOUNT(EST.PROD.OS.TYPE,VM)
  FOR I = 1 TO CNT
    IF LEN(EST.PROD.DESC<1,I>) > DMAX THEN
      DMAX = LEN(EST.PROD.DESC<1,I>)
      DJUS = "L#":DMAX
    END
  NEXT I
  DMAX = DMAX + 2
  FOR I = 1 TO CNT
*T23909 v        
    OLD.DESC = EST.PROD.DESC<1,I> DJUS : ": "
    IF RPT.TYPE = "ORIG" THEN
      OLD.DESC = OLD.DESC:OCONV(EST.PROD.US.WIDTH<1,I>,"MD4") :'" x '
      OLD.DESC = OLD.DESC:OCONV(EST.PROD.US.LENGTH<1,I>,"MD4") :'"'
      IF EST.PROD.US.WIDTH<1,I> # EST.PROD.TS.WIDTH<1,I> OR EST.PROD.US.LENGTH<1,I> # EST.PROD.TS.LENGTH<1,I> THEN
        OLD.DESC = OLD.DESC :" FOLDS TO"
      END
      QUOTE<LN.CNT,2> = OLD.DESC
      LN.CNT = LN.CNT + 1
      IF EST.PROD.US.WIDTH<1,I> # EST.PROD.TS.WIDTH<1,I> OR EST.PROD.US.LENGTH<1,I> # EST.PROD.TS.LENGTH<1,I> THEN
        OLD.DESC = SPACE(DMAX)
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.TS.WIDTH<1,I>,"MD4") :'" x '
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.TS.LENGTH<1,I>,"MD4") :'"'
        QUOTE<LN.CNT,2> = OLD.DESC
      END
      LN.CNT = LN.CNT + 1
    END ELSE
*        new report format         
      IF EST.PROD.US.WIDTH<1,I> # EST.PROD.TS.WIDTH<1,I> OR EST.PROD.US.LENGTH<1,I> # EST.PROD.TS.LENGTH<1,I> THEN
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.TS.WIDTH<1,I>,"MD4") :'" x '
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.TS.LENGTH<1,I>,"MD4") :'"'
      END ELSE
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.US.WIDTH<1,I>,"MD4") :'" x '
        OLD.DESC = OLD.DESC:OCONV(EST.PROD.US.LENGTH<1,I>,"MD4") :'"'
      END
      QUOTE<LN.CNT,2> = OLD.DESC
    END
*T23909 ^
  NEXT I
  LN.CNT = LN.CNT + 1
*
*--- COLORS
*
  QUOTE<LN.CNT,1> = "COLORS:"
  QUOTE<LN.CNT+1,1> = "------"
  FOR I = 1 TO CNT
    COLOR1 = ""; COLOR2 = ""
    VARNISH1 = ""; VARNISH2 = ""
    XCNT = DCOUNT(EST.PROD.INK.ID<1,I>,SVM)
    FOR X = 1 TO XCNT
* T22154 v
*        YCNT = DCOUNT(EST.PROD.INK.ID<1,I>,"!")
      YCNT = DCOUNT(EST.PROD.INK.ID<1,I,X>,"!")
* T22154 ^
      FOR Y = 1 TO YCNT
        TYPE = FIELD(EST.PROD.INK.VARNISH<1,I,X>,"!",Y)
        SDS = FIELD(EST.PROD.INK.SIDES<1,I,X>,"!",Y)
        IF TYPE = "V" THEN
          VARNISH1 = VARNISH1 + 1
          IF SDS > 1 THEN VARNISH2 = VARNISH2 + 1
        END ELSE
          COLOR1 = COLOR1 + 1
          IF SDS > 1 THEN COLOR2 = COLOR2 + 1
        END
      NEXT Y
    NEXT X
    OLD.DESC = COLOR1:" COLOR(S)"
    IF VARNISH1 # "" THEN
      OLD.DESC = OLD.DESC:" PLUS ":VARNISH1:" VARNISH(S)"
    END
    IF COLOR2 # "" OR VARNISH2 # "" THEN
      OLD.DESC = OLD.DESC:" 1 SIDE, "
      IF COLOR2 # "" THEN
        OLD.DESC = OLD.DESC:COLOR2:" COLOR(S)"
      END
      IF VARNISH2 # "" THEN
        OLD.DESC = OLD.DESC:" PLUS ":VARNISH2:" VARNISH(S)"
      END
    END
*T23909 v
    IF RPT.TYPE = "ORIG" THEN
      OLD.DESC = OLD.DESC:" 1 SIDE."
    END ELSE
      OLD.DESC = OLD.DESC
    END
*T23909 ^
    CALL DESC.REFORMAT (OLD.DESC,"27",NEW.DESC)
    PLINE = EST.PROD.DESC<1,I> DJUS : ": "
    XCNT = DCOUNT(NEW.DESC,VM)
*T23909 v
    IF RPT.TYPE = "ORIG" THEN
      FOR X = 1 TO XCNT
        QUOTE<LN.CNT,2> = PLINE : NEW.DESC<1,X>
        LN.CNT = LN.CNT + 1
        PLINE = SPACE(DMAX)
      NEXT X
    END
*T23909 ^
    LN.CNT = LN.CNT + 1
  NEXT I
*
*--- ARTS & MECHANICALS
*
  CODE = "01"
  HD1 = "ARTS & MECHANICALS:"
  HD2 = "------------------"
  GOSUB 7000
*
*--- PAPER STOCK
*
  QUOTE<LN.CNT,1> = "PAPER STOCK:"
  QUOTE<LN.CNT+1,1> = "-----------"
  CNT = DCOUNT(EST.PROD.OS.TYPE,VM)
  FOR I = 1 TO CNT
    OLD.DESC = EST.PROD.OS.DESC<1,I> :" "
    COLOR.ID = CONO:EST.PROD.COLOR<1,I>
    MATREAD COLOR.REC FROM COLOR,COLOR.ID ELSE COLOR.DESC = ""
    OLD.DESC = OLD.DESC:COLOR.DESC :" "
    PAPER.ID = CONO:EST.PROD.OS.USAGE<1,I>
    MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP,PAPER.ID ELSE ESTPG.DESC = ""
    OLD.DESC = OLD.DESC:ESTPG.DESC
*
    CALL DESC.REFORMAT (OLD.DESC,"27",NEW.DESC)
    PLINE = EST.PROD.DESC<1,I> DJUS : ": "
    XCNT = DCOUNT(NEW.DESC,VM)
    FOR X = 1 TO XCNT
      QUOTE<LN.CNT,2> = PLINE : NEW.DESC<1,X>
      LN.CNT = LN.CNT + 1
      PLINE = SPACE(DMAX)
      LN.CNT = LN.CNT + 1
    NEXT X
  NEXT I
*
*--- PROOF
*
  CODE = "03"
  HD1 = "PROOF:"
  HD2 = "-----"
  GOSUB 7000
*
*--- FINISHING
*
  CODE = "38"
  HD1 = "FINISHING:"
  HD2 = "---------"
  GOSUB 7000
*
*--- DOTTED LINE BREAK
*
**   QUOTE<LN.CNT,1> = STR("-",65)
**   LN.CNT = LN.CNT + 2
*
*--- QUANTITY & PRICE
*
  MAT CSUM.REC = ""
  CNT = DCOUNT(EST.QTY,VM)
  IF EST.PRT.PRICE.THOU = "Y" THEN
    QUOTE<LN.CNT,1> = "QTY & PRICE & ADDL M:"
    QUOTE<LN.CNT+1,1> = "---------------------"
  END ELSE
    QUOTE<LN.CNT,1> = "QUANTITY & PRICE:"
    QUOTE<LN.CNT+1,1> = "-----------------"
  END
  EST.KEY = QUOTE.NO
  SALE = ""
  QLINE = ""
  TOT.LINE = ""
  PPLINE = ""
  PPMLINE = ""
  SJUS = ""
  QMAX = 0; PMAX = 0; SMAX = 0
  FOR I = 1 TO CNT
    QTY = EST.QTY<1,I>
    QSEL = EST.QTY<1,I>
    FINAL.PRICE = EST.FINAL.PRICE<1,I>
    CALL EST.COST.TYPE.SUB (CONO, EST.KEY, "ALL", "ALL", QSEL, MAT CSUM.REC)
    PER.M = INT((CSUM.TOT.SALE / (QTY/1000)) + .5)
    IF LEN(OCONV(QTY,"MD0,")) > QMAX THEN
      QMAX = LEN(OCONV(QTY,"MD0,"))
      QJUS = "R#":QMAX
    END
    IF LEN(OCONV(PER.M,"MD2,")) > PMAX THEN
      PMAX = LEN(OCONV(PER.M,"MD2,"))
      PJUS = "R#":PMAX
    END
    IF LEN(OCONV(CSUM.TOT.SALE,"MD2Z,")) > SMAX THEN
      SMAX = LEN(OCONV(CSUM.TOT.SALE,"MD2Z,"))
      SJUS = "R#":SMAX
    END 
    IF LEN(OCONV(FINAL.PRICE,"MD2Z,")) > SMAX THEN
      SMAX = LEN(OCONV(EST.FINAL.PRICE<1,I>,"MD2Z,"))
      SJUS = "R#":SMAX
    END
  NEXT I
  FOR I = 1 TO CNT
    QTY = EST.QTY<1,I>
    QSEL = EST.QTY<1,I>
    PPM  = EST.PRICE.THOU<1,I>
    PPUOM = EST.PRICE.UOM<1,I>
    CALL EST.COST.TYPE.SUB (CONO, EST.KEY, "ALL", "ALL", QSEL, MAT CSUM.REC)
    QTY = OCONV(QTY,"MD0Z,")
    UOM = EST.PRT.PRICE.UOM
    IF EST.PRT.PRICE.UOM = 'EA' THEN
      PPLINE = "$":OCONV(PPUOM,"MD4Z,")SJUS
    END ELSE
      PPLINE = "$":OCONV(PPUOM,"MD2Z,")SJUS
    END
    PPMLINE = "$":OCONV(PPM,"MD2Z,")SJUS
    TOT.LINE = "$":OCONV(EST.FINAL.PRICE<1,I>,"MD2Z,")SJUS:"  "
    QUOTE<LN.CNT,2> = QTY QJUS :" @ ": PPLINE :"/":UOM:" = ":TOT.LINE
*T23909 v
    IF RPT.TYPE="ORIG" THEN
      IF EST.PRT.PRICE.THOU = "Y" THEN
        QUOTE<LN.CNT,2> := PPMLINE
      END
    END
*T23909 ^
    LN.CNT = LN.CNT + 1
*T23909 v
    IF RPT.TYPE = "SALES" THEN
      IF EST.PRT.PRICE.UOM = 'EA' THEN
        PPLINE = "$":OCONV(PPUOM,"MD4Z,")SJUS
      END ELSE
        PPLINE = "$":OCONV(PPUOM,"MD2Z,")SJUS
      END
      PPMLINE = "$":OCONV(PPM,"MD2Z,")SJUS
      TOT.LINE = "$":OCONV(EST.DEPT.COMP.DCOST<1,I>,"MD2Z,")SJUS:"  "
      QUOTE<LN.CNT,2> = QTY QJUS :" @ ": PPLINE :"/":UOM:" = ":TOT.LINE
      LN.CNT = LN.CNT + 1
    END
*T23909 ^
*************************************
  NEXT I
*T23909 v
*   This is where the new statements are added to the letter
  IF RPT.TYPE = "SALES" THEN
*        ln.cnt below causes a blank line
    LN.CNT=LN.CNT+1
    QUOTE<LN.CNT,2>="Quote valid for 30 days only"
    LN.CNT=LN.CNT+1
*        ln.cnt below causes a blank line
    LN.CNT=LN.CNT+1
    QUOTE<LN.CNT,2>="Quote subject to change on receipt of copy"
    LN.CNT=LN.CNT+1
*        ln.cnt below causes a blank line
    LN.CNT=LN.CNT+1
  END
*T23909 ^
*
*
*--- GENERAL INFO
*
  OLD.DESC = ""
  HD1 = ""
  HD2 = ""
  LAST.CODE = ""
  PREV.CODE = ""
  ICNT = DCOUNT(EST.DESC.CD,VM)
  FOR II = 1 TO ICNT
    BEGIN CASE
      CASE EST.DESC.CD<1,II> = ""
        IF OLD.DESC # "" AND (LAST.CODE = "41" OR LAST.CODE = "42") THEN
          OLD.DESC = OLD.DESC:EST.DESC<1,II>:" "
        END
      CASE EST.DESC.CD<1,II>[1,2] = "41"
        IF OLD.DESC # "" AND PREV.CODE # "41" THEN
          GOSUB 8500
        END ELSE
          IF OLD.DESC # "" THEN GOSUB 7500
        END
        OLD.DESC = OLD.DESC:EST.DESC<1,II>:" "
      CASE EST.DESC.CD<1,II>[1,2] = "42"
        IF OLD.DESC # "" AND PREV.CODE # "42" THEN
          GOSUB 7500
        END ELSE
          IF OLD.DESC # "" THEN GOSUB 8500
        END
        OLD.DESC = OLD.DESC:EST.DESC<1,II>:" "
    END CASE
    IF EST.DESC.CD<1,II> # "" THEN
      LAST.CODE = EST.DESC.CD<1,II>[1,2]
      IF EST.DESC.CD<1,II>[1,2] = "41" OR EST.DESC.CD<1,II>[1,2] = "42" THEN
        PREV.CODE = EST.DESC.CD<1,II>[1,2]
      END
    END
  NEXT II
  IF OLD.DESC # "" THEN
    IF PREV.CODE = "41" THEN
      GOSUB 7500
    END ELSE
      GOSUB 8500
    END
  END
*
*--- GENERAL INFO
*
  CODE = "43"
  HD1 = ""
  HD2 = ""
  GOSUB 7000
*
*--- DELIVERY
*
  CODE = "44"
  HD1 = "DELIVERY:"
  HD2 = "--------"
  GOSUB 7000
*
*--- SALESMAN
*
  QUOTE<LN.CNT,1> = EST.SALESMAN:":":EST.ESTIMATOR
  LN.CNT = LN.CNT + 1
  QUOTE<LN.CNT,1> = "Estimate #":QUOTE.NO
  RETURN
*
*--- FORMAT DESCRIPTION CODES
*
7000 *
  OLD.DESC = ""
  LAST.CODE = ""
  CNT = DCOUNT(EST.DESC.CD,VM)
  FOR I = 1 TO CNT
    IF EST.DESC.CD<1,I>[1,2] = CODE OR (LAST.CODE = CODE AND EST.DESC.CD<1,I> = "") THEN
      OLD.DESC = OLD.DESC:EST.DESC<1,I>:" "
    END
    IF EST.DESC.CD<1,I> # "" THEN
      LAST.CODE = EST.DESC.CD<1,I>[1,2]
    END
  NEXT I
7500 *
  IF OLD.DESC # "" THEN
    CALL DESC.REFORMAT (OLD.DESC,"35",NEW.DESC)
    QUOTE<LN.CNT,1> = HD1
    QUOTE<LN.CNT+1,1> = HD2
    CNT = DCOUNT(NEW.DESC,VM)
    FOR I = 1 TO CNT
      QUOTE<LN.CNT,2> = NEW.DESC<1,I>
      LN.CNT = LN.CNT + 1
    NEXT I
    LN.CNT = LN.CNT + 1
    IF CNT < 2 AND HD2 # "" THEN LN.CNT = LN.CNT + 1
    OLD.DESC = ""
  END
  RETURN
8500 *
  IF OLD.DESC # "" THEN
    CALL DESC.REFORMAT (OLD.DESC,"65",NEW.DESC)
    CNT = DCOUNT(NEW.DESC,VM)
    FOR I = 1 TO CNT
      QUOTE<LN.CNT> = NEW.DESC<1,I>
      LN.CNT = LN.CNT + 1
    NEXT I
    LN.CNT = LN.CNT + 1
    IF CNT < 2 AND HD2 # "" THEN LN.CNT = LN.CNT + 1
    OLD.DESC = ""
  END
  RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
50000 *
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = DCOUNT(S$DATA(13)<S$SCR>,VM)
  SCREEN MULTI;BUILD.QUOTE;C;11;12;13
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(2)<S$SCR> = QUOTE.NO
  S$DATA(23)<S$SCR> = QUOTE<1>
  S$DATA(25)<S$SCR> = QUOTE<3>
  S$DATA(26)<S$SCR> = QUOTE<2>
  S$DATA(24)<S$SCR> = QUOTE<4>
  S$DATA(12)<S$SCR> = QDISPLAY
  S$DATA(13)<S$SCR> = QSCR
80090 *
  SCREEN DISPLAY;BUILD.QUOTE;ALL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*---- END OF PROGRAM
*
99999 *
END
