*********************************************************************
* PROGRAM  - EST.RES.MAINT.QUOTE
* AUTHOR   - Graham JARVIS, PRISYS Pty Ltd              
* DATE     - 12 May 93
* DESCRIPTION
* This subroutine updates and maintains the ESTIMATE Quotation File
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE.QUOTES 
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>EST.COST.TYPE.SUM
*COPY>JES.CPYLIB>EST.RES.PP.COST.TYPE.SUM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
* OPEN FILES
*
  EM=''
  OPEN '','ESTIMATE' TO ESTIMATE ELSE EM=EM:'ESTIMATE '
  OPEN '','ESTIMATE.RES' TO ESTIMATE.RES ELSE EM=EM:'ESTIMATE.RES '
  OPEN '','ESTIMATE.QUOTES' TO ESTIMATE.QUOTES ELSE EM=EM:'ESTIMATE.QUOTES '
  OPEN '','ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE EM=EM:'ESTIMATE.DEPT '
  OPEN '','CUSTOMER' TO CUSTOMER ELSE EM=EM:'CUSTOMER '
  OPEN '','COMPANY' TO COMPANY ELSE EM=EM:'COMPANY '
  OPEN '','CONTROL' TO CONTROL ELSE EM=EM:'CONTROL '
  OPEN '','JES.SCREENS' TO M.SCREENS ELSE EM=EM:'JES.SCREENS '
  OPEN '','SECURITY' TO SECURITY ELSE EM=EM:'SECURITY '
  OPEN '','OPERATION' TO OPERATION ELSE EM=EM:'OPERATION '
  OPEN '','ESTIMATE.MATL' TO ESTIMATE.MATL ELSE EM=EM:'ESTIMATE.MATL '
  OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE EM=EM:'CATEGORY.OSP '
  OPEN '','QUOTE.FORMAT' TO QUOTE.FORMAT ELSE EM=EM:'QUOTE.FORMAT '
  OPEN '','ESTIMATE.RES.DIE' TO ESTIMATE.RES.DIE ELSE EM=EM:'ESTIMATE.RES.DIE '
  OPEN '','DIVISION' TO DIVISION ELSE EM=EM:'DIVISION '
  OPEN '','SALESMAN' TO SALESMAN ELSE EM=EM:'SALESMAN '
  OPEN '','JOB.CATEGORY' TO JOB.CATEGORY ELSE EM=EM:'JOB.CATEGORY '
  OPEN '','ESTIMATOR' TO ESTIMATOR ELSE EM=EM:'ESTIMATOR '
  OPEN '','COST.CNTR' TO COST.CNTR ELSE EM=EM:'COST.CNTR '
  IF EM#'' THEN
    ERRMSG = EM:'FILE(S) MISSING'
    GOSUB 90000
    GOTO 99999
  END
*
*---- INITIALIZATION
*
  CONO=""
  CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR=1
50 *
  SCREEN DEFINE;EST.RES.MAINT.QUOTE
  SCREEN FORMAT
  ERRMSG = ""
  OPT = ""
  EST.TSALE=''
  MAT ESTM.QTE = ''
*
*---- MAIN PROCESSING
*
100*
  SCREEN CLEAR
  S$DATA(1)=DATE()
  SCREEN DISPLAY;;1
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 99999
  EST.KEY = S$VALUE
  FIRST.TIME=1
  MAT ESTM.QTE = ''
  MATREADU EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
    ERRMSG = 'Estimate is not on file'
    GOSUB 90000
    GOTO 100
  END
  MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:EST.KEY ELSE MAT EST.RL.REC=''
  NEW.REC=0
  MATREADU ESTM.QTE FROM ESTIMATE.QUOTES,CONO:EST.KEY ELSE
    MAT ESTM.QTE = ""
    NEW.REC=1
  END
  CALL EST.RES.MAINT.QUOTE.SUB(CONO,EST.KEY,MAT ESTM.QTE,MAT EST.REC)
  MAT CSUM.REC = ""
  EC = COUNT(EST.QTY,VM) + (EST.QTY # "")
  IF EC > 5 THEN EM = 5 ELSE EM = EC
  FOR EP = 1 TO EC
    QSEL = EST.QTY<1,EP>
    CALL EST.RES.COST.QSUB (CONO, EST.KEY, "ALL", "ALL", QSEL, MAT CSUM.REC)
  NEXT EP
  QSEL = EST.QTY<1,1>
  CALL EST.RES.PP.COST.QSUB(CONO,EST.KEY,"ALL","ALL",QSEL,MAT CSUM.PP.REC)
  IF ESTM.PLATE.SELL = '' AND CSUM.PP.PL.SALE # '' THEN
    ESTM.PLATE.SELL = CSUM.PP.PL.SALE
    ESTM.PLATE.COMM = CSUM.PP.PL.DESC
  END
  IF ESTM.DIES.SELL = '' AND CSUM.PP.DI.SALE # '' THEN
    ESTM.DIES.SELL = CSUM.PP.DI.SALE
    ESTM.DIES.COMM = CSUM.PP.DI.DESC
  END
  IF ESTM.SSCR.SELL = '' AND CSUM.PP.SC.SALE # '' THEN
    ESTM.SSCR.SELL = CSUM.PP.SC.SALE
    ESTM.SSCR.COMM = CSUM.PP.SC.DESC
  END
  IF ESTM.PROOF.SELL = '' AND CSUM.PP.PR.SALE # '' THEN
    ESTM.PROOF.SELL = CSUM.PP.PR.SALE
    ESTM.PROOF.COMM = CSUM.PP.PR.DESC
  END
  IF ESTM.MISC.SELL = '' AND CSUM.PP.MI.SALE # '' THEN
    ESTM.MISC.SELL = CSUM.PP.MI.SALE
    ESTM.MISC.COMM = CSUM.PP.MI.DESC
  END
*
  GOSUB 80000
  IF NEW.REC=1 THEN
    GOSUB 750
  END
*
*---- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.RES.MAINT.QUOTE;37
  SCREEN INPUT;EST.RES.MAINT.QUOTE;37
  OPT = S$VALUE
510*
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      GOTO 99999
    CASE OPT = "F" OR OPT = "FP"
      GOSUB 86000
      ESTM.TI.PRICES<1,1>=ESTM.TI.PRICE1
      ESTM.TI.PRICES<1,2>=ESTM.TI.PRICE2
      ESTM.TI.PRICES<1,3>=ESTM.TI.PRICE3
      ESTM.TI.PRICES<1,4>=ESTM.TI.PRICE4
      ESTM.TI.PRICES<1,5>=ESTM.TI.PRICE5
      ESTM.PREPS.SELL = ''
      ESTM.PREPS.COMM = ''
      PCNT=1
      IF ESTM.PLATE.SELL # '' THEN
        ESTM.PREPS.SELL<1,PCNT> = ESTM.PLATE.SELL
        ESTM.PREPS.COMM<1,PCNT> = ESTM.PLATE.COMM
        PCNT=PCNT+1
      END
      IF ESTM.DIES.SELL # '' THEN
        ESTM.PREPS.SELL<1,PCNT> = ESTM.DIES.SELL
        ESTM.PREPS.COMM<1,PCNT> = ESTM.DIES.COMM
        PCNT=PCNT+1
      END
      IF ESTM.SSCR.SELL # '' THEN
        ESTM.PREPS.SELL<1,PCNT> = ESTM.SSCR.SELL
        ESTM.PREPS.COMM<1,PCNT> = ESTM.SSCR.COMM
        PCNT=PCNT+1
      END
      IF ESTM.PROOF.SELL # '' THEN
        ESTM.PREPS.SELL<1,PCNT> = ESTM.PROOF.SELL
        ESTM.PREPS.COMM<1,PCNT> = ESTM.PROOF.COMM
        PCNT=PCNT+1
      END
      IF ESTM.MISC.SELL # '' THEN
        ESTM.PREPS.SELL<1,PCNT> = ESTM.MISC.SELL
        ESTM.PREPS.COMM<1,PCNT> = ESTM.MISC.COMM
      END
      MATWRITE ESTM.QTE ON ESTIMATE.QUOTES,CONO:EST.KEY
      IF OPT='FP' THEN
        CALL EST.RES.REPORT.1(CONO,CO.NAME,EST.KEY,'1')
      END
P_X  = 0 ; P_Y = 23 ; P_VALUE = CLOSE ; P_OPT = ""
CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 50  
    CASE OPT = 1
      GOSUB 750
    CASE 1
      ON OPT-1 GOSUB 4000,3000,8000,8100,8200,8300,8400
  END CASE
  GOTO 500
*
* - Enter Quote Format Id
*
750 *
  SCREEN FIELD;;40
  SCREEN INPUT;;40;RETURN
  READ DUMMY FROM QUOTE.FORMAT, S$VALUE ELSE
    ERRMSG = "Quotation Format not set up"
    GOSUB 90000
    GOTO 750
  END
  ESTM.QUOTE.NO=S$VALUE
  S$DATA(40)<S$SCR>=ESTM.QUOTE.NO
  RETURN
*
* - Taxable Price Adjustment
*
3000 *  Qty 1
  SCREEN FIELD;;44
  SCREEN INPUT;;44;RETURN
  ESTM.TI.PRICE1 = S$VALUE
  QTY.SEL = 1
  GOSUB 50000
  S$DATA(31)<S$SCR> = MARGIN.TI
  SCREEN DISPLAY;;31
  S$DATA(44)<S$SCR> = ESTM.TI.PRICE1
  SCREEN DISPLAY;;44
     * Qty 2
  IF EST.QTY<1,2> = "" THEN RETURN
  SCREEN FIELD;;45
  SCREEN INPUT;;45;RETURN
  ESTM.TI.PRICE2 = S$VALUE
  QTY.SEL = 2
  GOSUB 50000
  S$DATA(32)<S$SCR> = MARGIN.TI
  SCREEN DISPLAY;;32
     * Qty 3
  IF EST.QTY<1,3> = "" THEN RETURN
  SCREEN FIELD;;46
  SCREEN INPUT;;46;RETURN
  ESTM.TI.PRICE3 = S$VALUE
  QTY.SEL = 3
  GOSUB 50000
  S$DATA(33)<S$SCR> = MARGIN.TI
  SCREEN DISPLAY;;33
     * Qty 4
  IF EST.QTY<1,4> = "" THEN RETURN
  SCREEN FIELD;;55
  SCREEN INPUT;;55;RETURN
  ESTM.TI.PRICE4 = S$VALUE
  QTY.SEL = 3
  GOSUB 50000
  S$DATA(53)<S$SCR> = MARGIN.TI
  SCREEN DISPLAY;;53
     * Qty 5
  IF EST.QTY<1,5> = "" THEN RETURN
  SCREEN FIELD;;56
  SCREEN INPUT;;56;RETURN
  ESTM.TI.PRICE5 = S$VALUE
  QTY.SEL = 5
  GOSUB 50000
  S$DATA(54)<S$SCR> = MARGIN.TI
  SCREEN DISPLAY;;54
  RETURN
*
* - Adjust Taxable Margins
*
4000 * Qty 1
  SCREEN FIELD;;31
  SCREEN INPUT;;31;RETURN
  MARGIN = S$VALUE
  ESTM.TI.PRICE1 = INT((ESTM.TI.COST1/100 * (1+(MARGIN/10000))/(EST.QTY<1,1>/1000))*100+.5)
  S$DATA(44)<S$SCR> = ESTM.TI.PRICE1
  SCREEN DISPLAY;;44
     * Qty 2
  IF EST.QTY<1,2> = "" THEN RETURN
  SCREEN FIELD;;32
  SCREEN INPUT;;32;RETURN
  MARGIN = S$VALUE
  ESTM.TI.PRICE2 = INT((ESTM.TI.COST2/100 * (1+(MARGIN/10000))/(EST.QTY<1,2>/1000))*100+.5)
  S$DATA(45)<S$SCR> = ESTM.TI.PRICE2
  SCREEN DISPLAY;;45
     * Qty 3
  IF EST.QTY<1,3> = "" THEN RETURN
  SCREEN FIELD;;33
  SCREEN INPUT;;33;RETURN
  MARGIN = S$VALUE
  ESTM.TI.PRICE3 = INT((ESTM.TI.COST3/100 * (1+(MARGIN/10000))/(EST.QTY<1,3>/1000))*100+.5)
  S$DATA(46)<S$SCR> = ESTM.TI.PRICE3
  SCREEN DISPLAY;;46
     * Qty 4
  IF EST.QTY<1,4> = "" THEN RETURN
  SCREEN FIELD;;53
  SCREEN INPUT;;53;RETURN
  MARGIN = S$VALUE
  ESTM.TI.PRICE4 = INT((ESTM.TI.COST4/100 * (1+(MARGIN/10000))/(EST.QTY<1,4>/1000))*100+.5)
  S$DATA(55)<S$SCR> = ESTM.TI.PRICE4
  SCREEN DISPLAY;;55
     * Qty 5
  IF EST.QTY<1,5> = "" THEN RETURN
  SCREEN FIELD;;54
  SCREEN INPUT;;54;RETURN
  MARGIN = S$VALUE
  ESTM.TI.PRICE5 = INT((ESTM.TI.COST5/100 * (1+(MARGIN/10000))/(EST.QTY<1,5>/1000))*100+.5)
  S$DATA(56)<S$SCR> = ESTM.TI.PRICE5
  SCREEN DISPLAY;;56
  RETURN
*
* --- Plates
*
8000 *
  SCREEN FIELD;;15
  SCREEN INPUT;;15;RETURN
  ESTM.PLATE.SELL = S$VALUE
  SCREEN FIELD;;16
  SCREEN INPUT;;16;RETURN
  ESTM.PLATE.COMM = S$VALUE
  RETURN
*
* --- Dies
*
8100 *
  SCREEN FIELD;;17
  SCREEN INPUT;;17;RETURN
  ESTM.DIES.SELL = S$VALUE
  SCREEN FIELD;;18
  SCREEN INPUT;;18;RETURN
  ESTM.DIES.COMM = S$VALUE
  RETURN
*
* --- SCREENS
*
8200 *
  SCREEN FIELD;;19
  SCREEN INPUT;;19;RETURN
  ESTM.SSCR.SELL = S$VALUE
  SCREEN FIELD;;20
  SCREEN INPUT;;20;RETURN
  ESTM.SSCR.COMM = S$VALUE
  RETURN
*
* --- Proofs
*
8300 *
  SCREEN FIELD;;21
  SCREEN INPUT;;21;RETURN
  ESTM.PROOF.SELL = S$VALUE
  SCREEN FIELD;;59
  SCREEN INPUT;;59;RETURN
  ESTM.PROOF.COMM = S$VALUE
  RETURN
*
* --- Misc
*
8400 *
  SCREEN FIELD;;35
  SCREEN INPUT;;35;RETURN
  ESTM.MISC.SELL = S$VALUE
  SCREEN FIELD;;36
  SCREEN INPUT;;36;RETURN
  ESTM.MISC.COMM = S$VALUE
  RETURN
*
* - Calculate Margins
*
50000*
*
  BEGIN CASE
    CASE QTY.SEL = 1
      PROFIT.TI = ESTM.TI.PRICE1 * (EST.QTY<1,1>/1000) - ESTM.TI.COST1
      MARGIN.TI = ESTM.TI.COST1
    CASE QTY.SEL = 2
      PROFIT.TI = ESTM.TI.PRICE2 * (EST.QTY<1,2>/1000) - ESTM.TI.COST2
      MARGIN.TI = ESTM.TI.COST2
    CASE QTY.SEL = 3
      PROFIT.TI = ESTM.TI.PRICE3 * (EST.QTY<1,3>/1000) - ESTM.TI.COST3
      MARGIN.TI = ESTM.TI.COST3
    CASE QTY.SEL = 4
      PROFIT.TI = ESTM.TI.PRICE4 * (EST.QTY<1,4>/1000) - ESTM.TI.COST4
      MARGIN.TI = ESTM.TI.COST4
    CASE QTY.SEL = 5
      PROFIT.TI = ESTM.TI.PRICE5 * (EST.QTY<1,5>/1000) - ESTM.TI.COST5
      MARGIN.TI = ESTM.TI.COST5
  END CASE
  IF MARGIN.TI+0 # 0 THEN
    MARGIN.TI = INT((PROFIT.TI/MARGIN.TI)*10000+5)
  END ELSE
    MARGIN.TI=0
  END
  RETURN
* LOAD SCREEN DATA
*
80000*
  S$DATA(1)<S$SCR> = DATE()
  S$DATA(2)<S$SCR> = EST.KEY 
  S$DATA(3)<S$SCR> = ESTM.REV.DATE
  S$DATA(4)<S$SCR> = ESTM.USER.REV
  S$DATA(5)<S$SCR> = ESTM.PRT.DATE
  S$DATA(6)<S$SCR> = ESTM.USER.PRT
  S$DATA(7)<S$SCR> = OCONV(EST.QTY<1,1>,'MD0,')
  S$DATA(8)<S$SCR> = OCONV(EST.QTY<1,2>,'MD0,')
  S$DATA(9)<S$SCR> = OCONV(EST.QTY<1,3>,'MD0,')
  S$DATA(57)<S$SCR> = OCONV(EST.QTY<1,4>,'MD0,')
  S$DATA(58)<S$SCR> = OCONV(EST.QTY<1,5>,'MD0,')
  S$DATA(22)<S$SCR> = ESTM.TI.COST1
  S$DATA(23)<S$SCR> = ESTM.TI.COST2
  S$DATA(24)<S$SCR> = ESTM.TI.COST3
  S$DATA(47)<S$SCR> = ESTM.TI.COST4
  S$DATA(48)<S$SCR> = ESTM.TI.COST5
  S$DATA(25)<S$SCR> = ESTM.TI.TSALE1
  S$DATA(27)<S$SCR> = ESTM.TI.TSALE2
  S$DATA(26)<S$SCR> = ESTM.TI.TSALE3
  S$DATA(49)<S$SCR> = ESTM.TI.TSALE4
  S$DATA(50)<S$SCR> = ESTM.TI.TSALE5
  FOR QTY.SEL = 1 TO DCOUNT(EST.QTY,VM)
    BEGIN CASE
      CASE QTY.SEL = 1
        GOSUB 50000
        S$DATA(31)<S$SCR> = MARGIN.TI
        S$DATA(28)<S$SCR> = INT(ESTM.TI.TSALE1/(EST.QTY<1,1>/1000)+.5)
      CASE QTY.SEL = 2
        GOSUB 50000
        S$DATA(32)<S$SCR> = MARGIN.TI
        S$DATA(29)<S$SCR> = INT(ESTM.TI.TSALE2/(EST.QTY<1,2>/1000)+.5)
      CASE QTY.SEL = 3
        GOSUB 50000
        S$DATA(33)<S$SCR> = MARGIN.TI
        S$DATA(30)<S$SCR> = INT(ESTM.TI.TSALE3/(EST.QTY<1,3>/1000)+.5)
      CASE QTY.SEL = 4
        GOSUB 50000
        S$DATA(53)<S$SCR> = MARGIN.TI
        S$DATA(51)<S$SCR> = INT(ESTM.TI.TSALE4/(EST.QTY<1,4>/1000)+.5)
      CASE QTY.SEL = 5
        GOSUB 50000
        S$DATA(54)<S$SCR> = MARGIN.TI
        S$DATA(52)<S$SCR> = INT(ESTM.TI.TSALE5/(EST.QTY<1,5>/1000)+.5)
    END CASE
    GOSUB 85000
  NEXT QTY.SEL
  S$DATA(38)<S$SCR> = EST.COMMENTS<1,1>
  S$DATA(39)<S$SCR> = EST.CUST.NAME
  S$DATA(40)<S$SCR> = ESTM.QUOTE.NO
  S$DATA(15)<S$SCR> = ESTM.PLATE.SELL
  S$DATA(16)<S$SCR> = ESTM.PLATE.COMM
  S$DATA(17)<S$SCR> = ESTM.DIES.SELL
  S$DATA(18)<S$SCR> = ESTM.DIES.COMM
  S$DATA(19)<S$SCR> = ESTM.SSCR.SELL
  S$DATA(20)<S$SCR> = ESTM.SSCR.COMM
  S$DATA(21)<S$SCR> = ESTM.PROOF.SELL
  S$DATA(59)<S$SCR> = ESTM.PROOF.COMM
  S$DATA(35)<S$SCR> = ESTM.MISC.SELL
  S$DATA(36)<S$SCR> = ESTM.MISC.COMM
  S$DATA(34)<S$SCR,1> = CSUM.PP.PL.COST
  S$DATA(34)<S$SCR,2> = CSUM.PP.DI.COST
  S$DATA(34)<S$SCR,3> = CSUM.PP.SC.COST
  S$DATA(34)<S$SCR,4> = CSUM.PP.PR.COST
  S$DATA(34)<S$SCR,5> = CSUM.PP.MI.COST
  S$DATA(41)<S$SCR,1> = CSUM.PP.PL.SALE
  S$DATA(41)<S$SCR,2> = CSUM.PP.DI.SALE
  S$DATA(41)<S$SCR,3> = CSUM.PP.SC.SALE
  S$DATA(41)<S$SCR,4> = CSUM.PP.PR.SALE
  S$DATA(41)<S$SCR,5> = CSUM.PP.MI.SALE
  S$VAL=1
  S$CNT=5
  SCREEN MULTI;;C;34;41
  SCREEN DISPLAY;;ALL
  RETURN
*
*--- Calculate Total Sale Price, Value Added and Display Data
*
85000 *
  ON QTY.SEL GOSUB 85010,85020,85030,85040,85050
  RETURN
*
85010 *
  S$DATA(44)<S$SCR> = ESTM.TI.PRICE1
  SCREEN DISPLAY;;44
  RETURN
85020 *
  S$DATA(45)<S$SCR> = ESTM.TI.PRICE2
  SCREEN DISPLAY;;45
  RETURN
85030 *
  S$DATA(46)<S$SCR> = ESTM.TI.PRICE3
  SCREEN DISPLAY;;46
  RETURN
85040 *
  S$DATA(55)<S$SCR> = ESTM.TI.PRICE4
  SCREEN DISPLAY;;55
  RETURN
85050 *
  S$DATA(56)<S$SCR> = ESTM.TI.PRICE5
  SCREEN DISPLAY;;56
  RETURN
*
86000 *
  PORT = @TTY[4,3]
  READV USER.ID FROM SECURITY,"R.":PORT,2 ELSE USER.ID="????????"
  ESTM.USER.REV = USER.ID
  ESTM.REV.DATE = DATE()
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*   PRINT @(0,23):@(-4):ERRMSG:
*   INPUT REPLY:
*   PRINT @(0,23):@(-4):
*   RETURN
*
*---- END OF PROGRAM
*
99999*
END
