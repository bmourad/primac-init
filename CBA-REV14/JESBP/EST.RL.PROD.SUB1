      SUBROUTINE EST.RL.PROD.SUB1(CONO,ACTION,EST.KEY,COMP,STATUS)
*********************************************************************
*
* REVISION - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RL.PROD.SUB1
*
* AUTHOR   - DENISE JURGENS, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/26/90
*
* DESCRIPTION
*
* This subroutine allows input and maintenance of the 1st product
* definition screen in roll label estimating.
*
* MOD TASK 16694 DMT 10/01/92 VALIDATE DIE TO COST CENTER
* MOD TASK 16695 DMT 10-12-92 ADD DIE CROSS REFERENCE
* MOD TASK 16752 DMT 10/01/92 VALIDATE PRODUCT WIDTH AGAINST PRESS WIDTH
* MOD TASK 16749 DMT 11/02/92 VALIDATE CYLINDER TO COST CENTER
*C35954 cm 03/20/2000 Getting variable unassigned because REPLY var is
*                     not used at 90000 any more.
*********************************************************************
*
*-COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RL
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.PRESS.SPOIL
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>ICS.CPYLIB>INVENTORY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JES.CPYLIB>ESTIMATE.RL.DIE
*COPY>JES.CPYLIB>ESTIMATE.RL.CYLINDER
*
*  OPEN NECESSARY FILES
*
      STATUS = ""
*
      OPEN "JES.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN JES.SCREENS"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "ESTIMATE.RL.DIE" TO ESTIMATE.RL.DIE ELSE
         ERRMSG = "CANNOT OPEN ESTIMATE.RL.DIE"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "ESTIMATE.RL.CYLINDER" TO ESTIMATE.RL.CYLINDER ELSE
         ERRMSG = "CANNOT OPEN ESTIMATE.RL.CYLINDER"
         GOSUB 90000
         GOTO 99999
      END
*
*-INITIALIZATION
*
      SCREEN DEFINE;EST.RL.PROD.SUB1
      SCREEN FORMAT
      SCREEN COUNT;;23
      LINE.COUNT = S$LCNT
      MAT GEN.XREF.REC = ""
      GXR.CO = CONO
      MAINT.FLAG = ""
*
*-MAIN PROCESSING
*
100 *
      SCREEN CLEAR
110 *
      S$DATA(1)<S$SCR>=DATE()
      SCREEN DISPLAY;;1
      IF EST.RL.JOB.TYPE<1,COMP,1> # "" THEN
         CHECK.DIE = 1
         GOSUB 80000
         GOTO 7000
      END
      CHECK.DIE = ''
*
*    JOB TYPE
*
1000 *
      SCREEN FIELD;;3
      S$O.R = "O"
      S$DEFAULT = "N"
      SCREEN INPUT;;3
      BEGIN CASE
         CASE S$VALUE = "END" AND MAINT.FLAG = "X"
            GOTO 7000
         CASE S$VALUE = "END"
            RETURN
         CASE 1
            EST.RL.JOB.TYPE<1,COMP,1> = S$VALUE
            IF EST.RL.JOB.TYPE<1,COMP,1> = "N" THEN GOTO 1300
      END CASE
*
*   PREV ESTIMATE
*
1100 *
      SCREEN FIELD;;7
      S$O.R = "O"
      SCREEN INPUT;;7;GOTO 7000
      EST.RL.PREV.EST<1,COMP,1> = S$VALUE
      BEGIN CASE
         CASE MAINT.FLAG = "X"
            GOTO 7000
         CASE EST.RL.JOB.TYPE<1,COMP,1> = "RR"
            GOTO 1300
      END CASE
*
* TYPE OF CHANGE
*
1200 *
      SCREEN FIELD;;4
      SCREEN INPUT;;4;GOTO 7000
      EST.RL.TYPE.CHG<1,COMP,1> = S$VALUE
      IF MAINT.FLAG = "X" THEN GOTO 7000
*
* DIMENSION AC
*
1300 *
      SCREEN FIELD;;9
      SCREEN INPUT;;9;GOTO 7000
      EST.RL.DIM.AC<1,COMP,1> = S$VALUE
*
* DIMENSION AR
*
1400 *
      SCREEN FIELD;;8
      SCREEN INPUT;;8;GOTO 1300
      EST.RL.DIM.AR<1,COMP,1> = S$VALUE
      IF MAINT.FLAG = "X" THEN GOTO 7000
*
* COPY DIRECTION
*
1500 *
      SCREEN FIELD;;30
      SCREEN INPUT;;30;GOTO 7000
      EST.RL.CPY.DIR<1,COMP,1> = S$VALUE
      IF MAINT.FLAG = "X" THEN GOTO 7000
*
* PRESS COST CENTER
*
1600 *
      SCREEN FIELD;;5
      SCREEN INPUT;;5;GOTO 7000
*      IF S$VALUE = "???" THEN
*         GXR.XREF = DIVISION
*         GXR.FILE = DEPARTMENT
*         GXR.TOP.LINE = "DEPARTMENT XREF SEARCH"
*         GXR.HEADING = ""
*         GXR.HEADING<1,1> = "DEPT"
*         GXR.HEADING<1,2> = "DESCRIPTION"
*         GXR.ATT="";GXR.LEN="";GXR.OCONV=""
*         GXR.ATT<1,1>=0;GXR.ATT<1,2>=2;GXR.LEN<1,1>=5;GXR.LEN<1,2>=30
*         GXR.LOC = 2
*         GXR.ID = ""
*         GXR.SRCH.ID = EST.DIV
*         CALL GEN.XREF1(MAT GEN.XREF.REC,PREFIX)
*         IF GXR.ID = "" THEN
*            SCREEN FORMAT
*            GOSUB 80000
*            GOTO 1600
*         END
*         MATREAD DEPT.REC FROM DEPARTMENT,CONO:GXR.ID ELSE
*            ERRMSG = "DEPARTMENT ":GXR.ID:" IS MISSING"; GOSUB 90000
*            SCREEN FORMAT
*            GOSUB 80000
*            GOTO 1600
*         END
*         TEMP.DEPT = GXR.ID
*         GXR.XREF = DEPARTMENT
*         GXR.FILE = COST.CNTR
*         GXR.TOP.LINE = "COST CENTER XREF SEARCH"
*         GXR.HEADING = ""
*         GXR.HEADING<1,1> = "CCTR"
*         GXR.HEADING<1,2> = "DESCRIPTION"
*         GXR.LOC = 5
*         GXR.ATT="";GXR.LEN="";GXR.OCONV=""
*         GXR.ATT<1,1>=0;GXR.ATT<1,2>=1;GXR.LEN<1,1>=5;GXR.LEN<1,2>=30
*         GXR.ID = ""
*         GXR.SRCH.ID = TEMP.DEPT
*         CALL GEN.XREF1(MAT GEN.XREF.REC,PREFIX)
*         SCREEN FORMAT
*         GOSUB 80000
*         IF GXR.ID = "" THEN GOTO 1600
*         EST.RL.PRESS.CCTR<1,COMP,1> = GXR.ID
*         EST.PROD.PRESS.ID<1,COMP,1> = GXR.ID
*         S$DATA(5)<S$SCR> = GXR.ID
*         SCREEN DISPLAY;;5
*      END ELSE
*         EST.RL.PRESS.CCTR<1,COMP,1> = S$VALUE
*         EST.PROD.PRESS.ID<1,COMP,1> = S$VALUE
*      END
      IF S$VALUE = "???" THEN
         CALL EST.EQUIP.XREF(CONO,"40",EQUIPMENT,COST.CNTR,XCODE)
         SCREEN FORMAT
         S$VALUE = XCODE
         S$DATA(5)<S$SCR> = XCODE
* v      GOSUB 80000
         IF XCODE = '' THEN
            GOTO 1600
         END
         PRS = FIELD(S$VALUE,"-",1)
         CNF = FIELD(S$VALUE,"-",2)
         EST.RL.PRESS.CCTR<1,COMP,1> = PRS
         EST.PROD.PRESS.ID<1,COMP,1> = PRS
         SCREEN DISPLAY;;5
         GOSUB 80000
      END ELSE
         EST.RL.PRESS.CCTR<1,COMP,1> = S$VALUE
         EST.PROD.PRESS.ID<1,COMP,1> = S$VALUE
      END
      IF EST.RL.PRESS.CCTR<1,COMP,1> = "" THEN
         CCTR.DEPT = ""
         CCTR.DESC = "NO DESCRIPTION AVAILABLE"
      END ELSE
         MATREAD CCTR.REC FROM COST.CNTR,CONO:EST.RL.PRESS.CCTR<1,COMP,1> ELSE
            ERRMSG = "INVALID COST CENTER"
            GOSUB 90000
            GOTO 1600
         END
      END
      S$DATA(6)<S$SCR> = CCTR.DESC
      SCREEN DISPLAY;;6
      IF MAINT.FLAG = "X" THEN
         DIE.ERRS = ''
         CYL.ERRS = ''
         CHECK.DIE = 1
         DIE.CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
         FOR I = 1 TO DIE.CNT
            GOSUB 80020
         NEXT I
         IF DIE.ERRS THEN
            ERRMSG = 'WARNING Die(s) ':DIE.ERRS:'not for press.'
            GOSUB 90000
         END
         IF CYL.ERRS THEN
            ERRMSG = 'WARNING Cylinder(s) ':CYL.ERRS:'not for press.'
            GOSUB 90000
         END
         CHECK.DIE = ''
         MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:EST.RL.PRESS.CCTR<1,COMP,1> ELSE
            MAT EQUIPMENT.REC = ""
         END
         WIDTH.ERRS = ''
         PRESS.MAX = EQP.RL.PRESS.WIDTH.MAX * 10
         PROD.CNT = DCOUNT(EST.PROD.OS.WIDTH<1,COMP>,SVM)
         FOR I = 1 TO PROD.CNT
            IF PRESS.MAX LT EST.PROD.OS.WIDTH<1,COMP,I> THEN
               WIDTH.ERRS = 'WARNING Product width exceeds Press max width.'
            END
         NEXT I
         IF WIDTH.ERRS THEN
            ERRMSG = WIDTH.ERRS
            GOSUB 90000
         END
         GOTO 7000
      END
*
*  DIE INFORMATION
*
1700 *
      IF MAINT.FLAG = "X" THEN
         REF.NO = S$VALUE-6
      END ELSE
         REF.NO = 1
      END
      LOOP WHILE REF.NO < 6 DO
*
* DIE ID
*
1750 *
         S$VAL = REF.NO
         SCREEN FIELD;;23
         SCREEN INPUT;;23;GOTO 7000
         BEGIN CASE
            CASE S$VALUE = ""
               GOTO 7000
            CASE S$VALUE = "???"
               DIE.SELECT = ''
               CALL DIE.SZ.AR.XREF(CONO,DIE.SELECT)
*               S$VALUE = ""
               SCREEN DEFINE;EST.RL.PROD.SUB1
               SCREEN FORMAT
               GOSUB 80000
               IF DIE.SELECT = "" THEN GOTO 1750
               TEMP.DIE = DIE.SELECT
               S$VAL = REF.NO
               S$DATA(23)<S$SCR,REF.NO> = TEMP.DIE
               SCREEN DISPLAY;;23
            CASE 1
               TEMP.DIE = S$VALUE
         END CASE
         IF TEMP.DIE # "#" THEN
            GOSUB 85000
*           IF RLDIE.DEPT = "" THEN GOTO 1750
            IF CCTR.DEPT # RLDIE.DEPT THEN
*C35954 v
*              ERRMSG = 'PRESS & DIE ARE DIFFERENT DEPARTMENTS. <CR> TO CONT. OR "D" TO RE-ENTER'
*              GOSUB 90000
               P_X=3;P_Y=23;P_VALUE='PRESS & DIE ARE DIFFERENT DEPARTMENTS. <CR> TO CONT. OR "D" TO RE-ENTER';P_OPT=''
               CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               INPUT REPLY,1:
*C35954 ^
               IF REPLY = "D" THEN GOTO 1750
            END
            FOUND = ''
            LOCATE EST.RL.PRESS.CCTR<1,COMP,1> IN RLDIE.CCTR<1> SETTING FOUND ELSE
               ERRMSG = '*** WARNING *** Die ':TEMP.DIE:' is not set-up for press.'
               GOSUB 90000
            END
         END ELSE
            MAT RLDIE.REC = ""
         END
*
* DIE REPEAT
*
         S$VAL = REF.NO
         SCREEN FIELD;;24
         S$DEFAULT = RLDIE.REPEAT
         SCREEN INPUT;;24;GOTO 6000
         IF S$VALUE = "" THEN S$VALUE = S$DEFAULT
         TEMP.REPEAT = S$VALUE
*
* DIE ACCROSS
*
1760 *
         S$VAL = REF.NO
         SCREEN FIELD;;25
         S$DEFAULT = RLDIE.NO.ACROSS
         SCREEN INPUT;;25;GOTO 6000
         IF S$VALUE = "" THEN S$VALUE = S$DEFAULT
         TEMP.NO.ACROSS = S$VALUE
*
* DIE AROUND
*
1770 *
         S$VAL = REF.NO
         SCREEN FIELD;;26
         S$DEFAULT = RLDIE.NO.AROUND
         SCREEN INPUT;;26;GOTO 6000
         IF S$VALUE = "" THEN S$VALUE = S$DEFAULT
         TEMP.NO.AROUND = S$VALUE
*
* DIE CYLINDER
*
1780 *
         S$VAL = REF.NO
         SCREEN FIELD;;27
         S$DEFAULT = RLDIE.CYLINDER
         SCREEN INPUT;;27;GOTO 6000
         IF S$VALUE = "" THEN S$VALUE = S$DEFAULT
         MATREAD RLCYN.REC FROM ESTIMATE.RL.CYLINDER,CONO:S$VALUE ELSE
*C35954 v
*           ERRMSG = S$VALUE:" NOT ON CYLINDER FILE - DO YOU WANT TO ACCEPT IT (Y/N)?"
*           GOSUB 90000
            P_X=3;P_Y=23;P_VALUE=S$VALUE:" NOT ON CYLINDER FILE - DO YOU WANT TO ACCEPT IT (Y/N)?";P_OPT=''
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            INPUT REPLY:
*C35954 ^
            IF REPLY # "Y" THEN GOTO 1780
            MAT RLCYN.REC = ""
         END
         TEMP.CYLINDER = S$VALUE
         FOUND = ''
         LOCATE EST.RL.PRESS.CCTR<1,COMP,1> IN RLCYN.CCTR<1> SETTING FOUND ELSE
            ERRMSG = '*** WARNING *** Cylinder ':TEMP.CYLINDER:' is not set-up for press.'
            GOSUB 90000
         END
*
* DIE QUANTITY
*
1790 *
         S$VAL = REF.NO
         SCREEN FIELD;;28
         SCREEN INPUT;;28;GOTO 6000
         TEMP.QTY = S$VALUE
         TEMP.PRICE = 0
         IF RLCYN.QUANTITY = "" THEN RLCYN.QUANTITY = 0
         IF RLCYN.QUANTITY < TEMP.QTY THEN
            QTY.NEED = TEMP.QTY - RLCYN.QUANTITY
            SCREEN FIELD;;20
            S$PMSG = "Need to order ":QTY.NEED:" out of ":TEMP.QTY:" cylinders.  Enter price : "
            SCREEN INPUT;;20;GOTO 6000
            TEMP.PRICE = S$VALUE + 0
         END
1800 *
         EST.RL.DIE<1,COMP,REF.NO> = TEMP.DIE
         EST.RL.DIE.REPEAT<1,COMP,REF.NO> = TEMP.REPEAT
         EST.RL.DIE.NO.ACR<1,COMP,REF.NO> = TEMP.NO.ACROSS
         EST.RL.DIE.NO.ARD<1,COMP,REF.NO> = TEMP.NO.AROUND
         EST.RL.DIE.CYL.ID<1,COMP,REF.NO> = TEMP.CYLINDER
         EST.RL.DIE.QTY<1,COMP,REF.NO> = TEMP.QTY
         EST.RL.CYL.PRICE<1,COMP,REF.NO> = TEMP.PRICE
         IF MAINT.FLAG = "X" THEN
            REF.NO = 6
         END ELSE
            REF.NO = REF.NO + 1
         END
      REPEAT
*
6000 *
      GOSUB 80000
*
* CHANGE FIELD PROMPT
*
7000 *
      MAINT.FLAG = "X"
      SCREEN FIELD;;21
      SCREEN INPUT;;21;RETURN
      BEGIN CASE
*
* DIE CHANGE
*
         CASE S$VALUE > 6 AND S$VALUE < 12
            PLACE = S$VALUE - 6
            IF EST.RL.DIE<1,COMP,PLACE> # "" THEN
               VALUE = S$VALUE
               SCREEN FIELD;;19
               SCREEN INPUT;;19
               BEGIN CASE
                  CASE S$VALUE = "D"
                     DEL EST.RL.DIE<1,COMP,PLACE>
                     DEL EST.RL.DIE.REPEAT<1,COMP,PLACE>
                     DEL EST.RL.DIE.NO.ACR<1,COMP,PLACE>
                     DEL EST.RL.DIE.NO.ARD<1,COMP,PLACE>
                     DEL EST.RL.DIE.CYL.ID<1,COMP,PLACE>
                     DEL EST.RL.DIE.QTY<1,COMP,PLACE>
                     DEL EST.RL.CYL.PRICE<1,COMP,PLACE>
                     GOSUB 80010
                     GOTO 7000
                  CASE S$VALUE = "C"
                  CASE 1
                     GOTO 7000
               END CASE
               S$VALUE = VALUE
            END
*
* PREVIOUS ESTIMATE
*
         CASE S$VALUE = 2
            IF EST.RL.JOB.TYPE<1,COMP,1> = "N" THEN
               ERRMSG = "INVALID JOB TYPE FOR ACCESS TO 'Prev Estimate'"
               GOSUB 90000
               GOTO 7000
            END
*
* TYPE OF CHANGE
*
         CASE S$VALUE = 3
            IF EST.RL.JOB.TYPE<1,COMP,1> # "RC" THEN
               ERRMSG = "INVALID JOB TYPE FOR ACCESS TO 'Type of Change'"
               GOSUB 90000
               GOTO 7000
            END
*
* NEXT SCREEN
*
         CASE S$VALUE = "N"
            STATUS = "P2"
            GOTO 99999
*
* ANOTHER SCREEN
*
         CASE S$VALUE[1,1] = "P"
            PNUM = S$VALUE[2,1]
            IF ACTION = "M" AND EST.DEPT = "" AND PNUM > "2" THEN
               ERRMSG = "Invalid option while in entry mode. Try again!"
               GOSUB 90000
            END ELSE
               STATUS = S$VALUE
               GOTO 99999
            END
*
* END
*
         CASE S$VALUE = "E" OR S$VALUE = "END"
            GOTO 99999
      END CASE
*
* FIELD CHANGES
*
      ON S$VALUE GOTO 1000,1100,1200,1300,1500,1600,1700,1700,1700,1700,1700
*
*    LOAD SCREEN DATA
*
80000 *
      S$DATA(1)<S$SCR> = DATE()
      S$DATA(3)<S$SCR> = EST.RL.JOB.TYPE<1,COMP,1>
      S$DATA(7)<S$SCR> = EST.RL.PREV.EST<1,COMP,1>
      S$DATA(4)<S$SCR> = EST.RL.TYPE.CHG<1,COMP,1>
      S$DATA(9)<S$SCR> = EST.RL.DIM.AC<1,COMP,1>
      S$DATA(8)<S$SCR> = EST.RL.DIM.AR<1,COMP,1>
      S$DATA(30)<S$SCR> = EST.RL.CPY.DIR<1,COMP,1>
      S$DATA(5)<S$SCR> = EST.RL.PRESS.CCTR<1,COMP,1>
      MATREAD CCTR.REC FROM COST.CNTR,CONO:EST.RL.PRESS.CCTR<1,COMP,1> ELSE
         MAT CCTR.REC = ""
         CCTR.DESC = "NO DESCRIPTION AVAILABLE"
      END
      S$DATA(6)<S$SCR> = CCTR.DESC
      SCREEN DISPLAY;;ALL
80010 *
      DIE.ERRS = ''
      CYL.ERRS = ''
      DIE.CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
      FOR I = 1 TO DIE.CNT
         S$DATA(23)<S$SCR,I> = EST.RL.DIE<1,COMP,I>
         S$DATA(24)<S$SCR,I> = EST.RL.DIE.REPEAT<1,COMP,I>
         S$DATA(25)<S$SCR,I> = EST.RL.DIE.NO.ACR<1,COMP,I>
         S$DATA(26)<S$SCR,I> = EST.RL.DIE.NO.ARD<1,COMP,I>
         S$DATA(27)<S$SCR,I> = EST.RL.DIE.CYL.ID<1,COMP,I>
         S$DATA(28)<S$SCR,I> = EST.RL.DIE.QTY<1,COMP,I>
         GOSUB 80020
      NEXT I
      CHECK.DIE = ''
      S$VAL = 1
      S$CNT = DIE.CNT
      SCREEN MULTI;;C;23;24;25;26;27;28
      IF DIE.ERRS THEN
         ERRMSG = 'WARNING Die(s) ':DIE.ERRS:'not for press.'
         GOSUB 90000
      END
      IF CYL.ERRS THEN
         ERRMSG = 'WARNING Cylinder(s) ':CYL.ERRS:'not for press.'
         GOSUB 90000
      END
      IF EST.RL.DIE<1,1,1> # "" AND EST.RL.DIE<1,1,1> # "#" THEN
         TEMP.DIE = EST.RL.DIE<1,1,1>
         GOSUB 85000
      END ELSE
         MAT RLDIE.REC = ""
      END
      RETURN
*
*   VALIDATE DIE AND CYLINDER IS SET UP FOR PRESS
*
80020 *
      IF CHECK.DIE THEN
         DIE.ID = EST.RL.DIE<1,COMP,I>
         MATREAD RLDIE.REC FROM ESTIMATE.RL.DIE,CONO:DIE.ID THEN
            FOUND = ''
            LOCATE EST.RL.PRESS.CCTR<1,COMP,1> IN RLDIE.CCTR<1> SETTING FOUND ELSE
               DIE.ERRS := DIE.ID:' '
            END
         END ELSE
            ERRMSG = "DIE ":DIE.ID:" NOT IN DIE FILE"; GOSUB 90000
            MAT RLDIE.REC = ""
         END
         CYL.ID = EST.RL.DIE.CYL.ID<1,COMP,I>
         MATREAD RLCYN.REC FROM ESTIMATE.RL.CYLINDER,CONO:CYL.ID THEN
            FOUND = ''
            LOCATE EST.RL.PRESS.CCTR<1,COMP,1> IN RLCYN.CCTR<1> SETTING FOUND ELSE
               CYL.ERRS := CYL.ID:' '
            END
         END ELSE
            ERRMSG = 'CYLINDER ':CYL.ID:' NOT IN CYLINDER FILE'; GOSUB 90000
            MAT RLCYN.REC = ""
         END
      END
      RETURN
*
*   DISPLAY DIE INFORMATION
*
85000 *
      MATREAD RLDIE.REC FROM ESTIMATE.RL.DIE,CONO:TEMP.DIE ELSE
         ERRMSG = "NOT IN DIE FILE"; GOSUB 90000
         MAT RLDIE.REC = ""
         RETURN
      END
      IF RLDIE.RETOOL = "" THEN RLDIE.RETOOL = "N"
      IF RLDIE.DAMAGED = "" THEN RLDIE.DAMAGED = "N"
      S$DATA(29)<S$SCR> = ""
      S$DATA(29)<S$SCR,1> = "Out/Retooling (Y/N)   : ":RLDIE.RETOOL
      S$DATA(29)<S$SCR,2> = "On Order Due In  ":OCONV(RLDIE.ORDER.DATE,"D2/")
      S$DATA(29)<S$SCR,3> = "On Job - Available  ":OCONV(RLDIE.JOB.DATE,"D2/")
      S$DATA(29)<S$SCR,4> = "Damaged Die  (Y/N)   : ":RLDIE.DAMAGED
      S$DATA(31)<S$SCR> = ""
      S$DATA(31)<S$SCR,1> = RLDIE.COMMENTS<1,1>
      S$DATA(31)<S$SCR,2> = RLDIE.COMMENTS<1,2>
      S$DATA(31)<S$SCR,3> = RLDIE.COMMENTS<1,3>
      S$VAL = 1
      S$CNT = 5
      SCREEN MULTI;;C;29;31
      RETURN
*
*-ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
*
*-END OF PROGRAM
*
99999 *
      SCREEN CLEAR;;D
      RETURN
   END
