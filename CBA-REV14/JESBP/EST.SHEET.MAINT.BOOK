***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.SHEET.MAINT.BOOK
*
* AUTHOR   - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 02/05/86
*
* DESCRIPTION
*
* This program updates and maintaines the ESTIMATE.MATL file.
* The key to this file will be CONO:"S":PAPER TYPE. (For sheet material)
*
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T27250 epitka 01/29/2003 * Check the platform.
*T27684 cmykleb 09/08/2003 * Change echo $UDTHOME to call SYSVARS.SUB
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>JCS.CPYLIB>FOH.TABLE
*COPY>JES.CPYLIB>ESTIMATE.MARKUP
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>FINISH
*COPY>ICS.CPYLIB>COLOR
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MATL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.PAPER.GROUP" TO ESTIMATE.PAPER.GROUP ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.PAPER.GROUP FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
      ERRMSG = "CANNOT OPEN FOH.TABLE FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MARKUP FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","FINISH" TO FINISH ELSE
      ERRMSG = "CANNOT OPEN FINISH FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","COLOR" TO COLOR ELSE
      ERRMSG = "CANNOT OPEN COLOR FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CANNOT OPEN CATEGORY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JES.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
*T27684 v
*  PLATFORM=SYSTEM(33)                          
*  IF PLATFORM='UNIX' THEN                      
*     PERFORM "!echo $UDTHOME" CAPTURING UDTDIR  
*  END ELSE                                     
*     PERFORM "!echo %UDTHOME%" CAPTURING UDTDIR 
*  END                                          
   UDTDIR = "UDTHOME"
   CALL SYSVARS.SUB (UDTDIR)
*T27684 ^
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
   CONO = ""
   CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;EST.SHEET.MAINT.BOOK
   SCREEN FORMAT
   SCREEN COUNT;;32
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   CURR.REF.NO = ""
   SCREEN FIELD;;10
   IF S$TYP = "3" THEN CAL.PPI = "P" ELSE CAL.PPI = "C"
   S$TYP=0; CALL SCREEN.INPUT; S$MASK="#"
   ERRMSG = ""
*
*---- MAIN PROCESSING
*
100*
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;;1
   SCREEN FIELD;;11
   SCREEN INPUT;;11
   IF S$VALUE = "END" THEN GOTO 99999
   MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP,CONO:S$VALUE ELSE
      ERRMSG = "Invalid Paper Group ID. Try again! "
      GOSUB 90000
      GOTO 100
   END
   S$DATA(12)<S$SCR> = ESTPG.DESC
   SCREEN DISPLAY;;12
   USAGE.CD = S$VALUE
   USAGE.DESC = ESTPG.DESC
   KEY = CONO:"S":S$VALUE
   NEW.MV = "";NEW.REC = 0;CNT = 0;CURR.REF.NO = ""
   MATREADU ESTM.REC FROM ESTIMATE.MATL,KEY ELSE
      MAT ESTM.REC = ""
      NEW.MV = 1
      NEW.REC = 1
   END
   SCREEN FIELD;;2
   IF NOT(NEW.REC) THEN
      S$O.R = "O"
      S$DEFAULT = ESTM.PROD<1,1>
   END
   SCREEN INPUT;;2
   BEGIN CASE
      CASE S$VALUE = "END"
         SCREEN CLEAR
         RELEASE ESTIMATE.MATL,KEY
         GOTO 100
      CASE NEW.REC = 1 AND NEW.MV = 1
         ESTM.PROD<1,NEW.MV> = S$VALUE
         ESTM.USAGE.CD<1,NEW.MV> = USAGE.CD
         PROD.CNT = 1
      CASE 1
         PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
         LOCATE S$VALUE IN ESTM.PROD<1>,1 BY "AL" SETTING NEW.MV ELSE
            NEW.REC = 1
            IF NEW.MV <= PROD.CNT THEN
               ESTM.PROD = INSERT(ESTM.PROD,1,NEW.MV,0,"")
               ESTM.DESC = INSERT(ESTM.DESC,1,NEW.MV,0,"")
               ESTM.UM = INSERT(ESTM.UM,1,NEW.MV,0,"")
               ESTM.BASIS.WT = INSERT(ESTM.BASIS.WT,1,NEW.MV,0,"")
               ESTM.CLR.CD = INSERT(ESTM.CLR.CD,1,NEW.MV,0,"")
               ESTM.FINISH.CD = INSERT(ESTM.FINISH.CD,1,NEW.MV,0,"")
               ESTM.PLINE = INSERT(ESTM.PLINE,1,NEW.MV,0,"")
               ESTM.COAT.CD = INSERT(ESTM.COAT.CD,1,NEW.MV,0,"")
               ESTM.USAGE.CD = INSERT(ESTM.USAGE.CD,1,NEW.MV,0,"")
               ESTM.WIDTH = INSERT(ESTM.WIDTH,1,NEW.MV,0,"")
               ESTM.LENGTH = INSERT(ESTM.LENGTH,1,NEW.MV,0,"")
               ESTM.GRAIN = INSERT(ESTM.GRAIN,1,NEW.MV,0,"")
               ESTM.CALIPER = INSERT(ESTM.CALIPER,1,NEW.MV,0,"")
               ESTM.PPI = INSERT(ESTM.PPI,1,NEW.MV,0,"")
               ESTM.FOH.PCT = INSERT(ESTM.FOH.PCT,1,NEW.MV,0,"")
               ESTM.MARKUP = INSERT(ESTM.MARKUP,1,NEW.MV,0,"")
               ESTM.BEG.QTY = INSERT(ESTM.BEG.QTY,1,NEW.MV,0,"")
               ESTM.END.QTY = INSERT(ESTM.END.QTY,1,NEW.MV,0,"")
               ESTM.QCOST = INSERT(ESTM.QCOST,1,NEW.MV,0,"")
               ESTM.QCALC = INSERT(ESTM.QCALC,1,NEW.MV,0,"")
               ESTM.QPARAM = INSERT(ESTM.QPARAM,1,NEW.MV,0,"")
               ESTM.QOR = INSERT(ESTM.QOR,1,NEW.MV,0,"")
               ESTM.FCALC = INSERT(ESTM.FCALC,1,NEW.MV,0,"")
               ESTM.FPARAM = INSERT(ESTM.FPARAM,1,NEW.MV,0,"")
               ESTM.FOR = INSERT(ESTM.FOR,1,NEW.MV,0,"")
            END
            ESTM.PROD<1,NEW.MV> = S$VALUE
         END
         ESTM.USAGE.CD<1,NEW.MV> = USAGE.CD
         PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
         CNT = COUNT(ESTM.BEG.QTY<1,NEW.MV>,SVM) + (ESTM.BEG.QTY<1,NEW.MV> # "")
   END CASE
   IF NEW.REC THEN
      FOR FLD = 1 TO 15
         BEGIN CASE
            CASE FLD <= 10
               ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10850,10900
            CASE FLD <= 20
               ON FLD-10 GOSUB 11000,11100,11200,19990,19990
         END CASE
         IF S$VALUE = "END" THEN
            SCREEN CLEAR
            RELEASE ESTIMATE.MATL,KEY
            GOTO 100
         END
      NEXT FLD
      DONE = 0
      FOR REF.NO = CNT + 1 TO 99 UNTIL DONE
         GOSUB 50000
         GOSUB 11600
         IF S$VALUE = "END" THEN
            DONE = 1
            S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO,0)
            S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
            S$DATA(34) = DELETE(S$DATA(34),S$SCR,REF.NO,0)
            ESTM.BEG.QTY = DELETE(ESTM.BEG.QTY,1,NEW.MV,REF.NO)
            ESTM.END.QTY = DELETE(ESTM.END.QTY,1,NEW.MV,REF.NO)
            ESTM.QCOST = DELETE(ESTM.QCOST,1,NEW.MV,REF.NO)
         END ELSE
            CNT = CNT + 1
         END
      NEXT REF.NO
      REF.NO = CNT
      CURR.REF.NO = ""
      GOSUB 50000
      REF.NO = ""
   END ELSE
      GOSUB 80000
      SCREEN DISPLAY;;ALL
      S$DATA(32)<S$SCR> = BEG.QTY.TBL
      S$DATA(33)<S$SCR> = END.QTY.TBL
      S$DATA(34)<S$SCR> = QCOST.TBL
      IF ESTM.BEG.QTY<1,NEW.MV> # "" THEN
         REF.NO = 1
         GOSUB 50000
      END
      REF.NO = ""
   END
*
*---- GET OPERATOR REPLY
*
500*
   PREV.OPTION = ""
   MORE.OPT = 1
   LOOP
      S$DATA(41)<S$SCR> = ""
      SCREEN FIELD;;41
      SCREEN INPUT;;41
      OPTION = S$VALUE
      BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END"
            RELEASE ESTIMATE.MATL,KEY
            MORE.OPT = 0
         CASE OPTION # "" AND NUM(OPTION)
            FLD = OPTION
            BEGIN CASE
               CASE FLD <= 10
                  ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10850,10900
               CASE FLD <= 20
                  ON FLD-10 GOSUB 11000,11100,11200,19990,19990
            END CASE
         CASE OPTION = "P"
            GOSUB 20000
         CASE OPTION = "D"
            SCREEN FIELD;;44
            SCREEN INPUT;;44
            IF S$VALUE = "Y" THEN
               ESTM.PROD = DELETE(ESTM.PROD,1,NEW.MV,0)
               ESTM.DESC = DELETE(ESTM.DESC,1,NEW.MV,0)
               ESTM.UM = DELETE(ESTM.UM,1,NEW.MV,0)
               ESTM.BASIS.WT = DELETE(ESTM.BASIS.WT,1,NEW.MV,0)
               ESTM.CLR.CD = DELETE(ESTM.CLR.CD,1,NEW.MV,0)
               ESTM.FINISH.CD = DELETE(ESTM.FINISH.CD,1,NEW.MV,0)
               ESTM.PLINE = DELETE(ESTM.PLINE,1,NEW.MV,0)
               ESTM.COAT.CD = DELETE(ESTM.COAT.CD,1,NEW.MV,0)
               ESTM.USAGE.CD = DELETE(ESTM.USAGE.CD,1,NEW.MV,0)
               ESTM.WIDTH = DELETE(ESTM.WIDTH,1,NEW.MV,0)
               ESTM.LENGTH = DELETE(ESTM.LENGTH,1,NEW.MV,0)
               ESTM.GRAIN = DELETE(ESTM.GRAIN,1,NEW.MV,0)
               ESTM.CALIPER = DELETE(ESTM.CALIPER,1,NEW.MV,0)
               ESTM.PPI = DELETE(ESTM.PPI,1,NEW.MV,0)
               ESTM.FOH.PCT = DELETE(ESTM.FOH.PCT,1,NEW.MV,0)
               ESTM.MARKUP = DELETE(ESTM.MARKUP,1,NEW.MV,0)
               ESTM.BEG.QTY = DELETE(ESTM.BEG.QTY,1,NEW.MV,0)
               ESTM.END.QTY = DELETE(ESTM.END.QTY,1,NEW.MV,0)
               ESTM.QCOST = DELETE(ESTM.QCOST,1,NEW.MV,0)
               ESTM.QCALC = DELETE(ESTM.QCALC,1,NEW.MV,0)
               ESTM.QPARAM = DELETE(ESTM.QPARAM,1,NEW.MV,0)
               ESTM.QOR = DELETE(ESTM.QOR,1,NEW.MV,0)
               ESTM.FCALC = DELETE(ESTM.FCALC,1,NEW.MV,0)
               ESTM.FPARAM = DELETE(ESTM.FPARAM,1,NEW.MV,0)
               ESTM.FOR = DELETE(ESTM.FOR,1,NEW.MV,0)
               PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
               MATWRITE ESTM.REC ON ESTIMATE.MATL,KEY
               ERRMSG = "You have deleted this record from the file."
               GOSUB 90000
               IF NEW.MV > PROD.CNT THEN NEW.MV = 1
               SCREEN CLEAR
               S$DATA(11)<S$SCR> = USAGE.CD
               S$DATA(12)<S$SCR> = USAGE.DESC
               S$DATA(2)<S$SCR> = ESTM.PROD<1,NEW.MV>
               GOSUB 80000
               SCREEN DISPLAY;;ALL
               S$DATA(32)<S$SCR> = BEG.QTY.TBL
               S$DATA(33)<S$SCR> = END.QTY.TBL
               S$DATA(34)<S$SCR> = QCOST.TBL
               IF ESTM.BEG.QTY<1,NEW.MV> # "" THEN
                  REF.NO = 1
                  CURR.REF.NO = ""
                  GOSUB 50000
               END
               REF.NO = ""
            END
         CASE OPTION = "N"
            IF PROD.CNT = 1 AND NEW.MV = 1 THEN
               ERRMSG = "This is the only record for this material type."
               GOSUB 90000
            END ELSE
               NEW.MV = NEW.MV + 1
               IF NEW.MV > PROD.CNT THEN NEW.MV = 1
               SCREEN CLEAR
               S$DATA(11)<S$SCR> = USAGE.CD
               S$DATA(12)<S$SCR> = USAGE.DESC
               S$DATA(2)<S$SCR> = ESTM.PROD<1,NEW.MV>
               GOSUB 80000
               SCREEN DISPLAY;;ALL
               S$DATA(32)<S$SCR> = BEG.QTY.TBL
               S$DATA(33)<S$SCR> = END.QTY.TBL
               S$DATA(34)<S$SCR> = QCOST.TBL
               IF ESTM.BEG.QTY<1,NEW.MV> # "" THEN
                  REF.NO = 1
                  CURR.REF.NO = ""
                  GOSUB 50000
               END
               REF.NO = ""
               CNT = COUNT(ESTM.BEG.QTY<1,NEW.MV>,SVM) + (ESTM.BEG.QTY<1,NEW.MV> # "")
            END
         CASE OPTION = "F"
            IF PREV.OPTION # "D" THEN
               CALL EST.MATL.FULL.DESC.SUB(MAT ESTM.REC,CONTROL,NEW.MV,"S")
               MATWRITE ESTM.REC ON ESTIMATE.MATL,KEY
            END
            MORE.OPT = 0
      END CASE
      PREV.OPTION = OPTION
   WHILE MORE.OPT DO REPEAT
   SCREEN CLEAR
   GOTO 100
*
*---- GET DESCRIPTION
*
10100*
   SCREEN FIELD;;3
   SCREEN INPUT;;3;RETURN
   ESTM.DESC<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET PAPER SIZE (WIDTH X LENGTH)
*
10200*
   SCREEN FIELD;;4
   SCREEN INPUT;;4;RETURN
   ESTM.WIDTH<1,NEW.MV> = S$VALUE
   SCREEN FIELD;;5
   SCREEN INPUT;;5;RETURN
   ESTM.LENGTH<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET GRAIN DIRECTION
*
10300*
   SCREEN FIELD;;6
   SCREEN INPUT;;6;RETURN
   ESTM.GRAIN<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET BASIS WEIGHT
*
10400*
   SCREEN FIELD;;9
   SCREEN INPUT;;9;RETURN
   ESTM.BASIS.WT<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET CALIPER OR PPI
*
10500*
   SCREEN FIELD;;10
   SCREEN INPUT;;10;RETURN
   IF CAL.PPI = "P" THEN
      ESTM.PPI<1,NEW.MV> = S$VALUE
      IF S$VALUE+0 = 0 THEN
         ESTM.CALIPER<1,NEW.MV> = ""
      END ELSE
         ESTM.CALIPER<1,NEW.MV> = INT(2000/S$VALUE*1000+0.5)
      END
   END ELSE
      ESTM.CALIPER<1,NEW.MV> = S$VALUE
      IF S$VALUE+0 = 0 THEN
         ESTM.PPI<1,NEW.MV> = ""
      END ELSE
         ESTM.PPI<1,NEW.MV> = INT(2000/(S$VALUE/1000)+0.5)
      END
   END
   RETURN
*
*---- GET COATING CODE
*
10600*
   SCREEN FIELD;;13
   SCREEN INPUT;;13;RETURN
   ESTM.COAT.CD<1,NEW.MV> = S$VALUE
   BEGIN CASE
      CASE ESTM.COAT.CD<1,NEW.MV> = "1"
         COAT.DESC = "ONE-SIDE"
      CASE ESTM.COAT.CD<1,NEW.MV> = "2"
         COAT.DESC = "TWO-SIDES"
      CASE 1
         COAT.DESC = ""
   END CASE
   S$DATA(14)<S$SCR> = COAT.DESC
   SCREEN DISPLAY;;14
   RETURN
*
*---- GET COLOR
*
10700*
   S$DATA(15)<S$SCR> = ESTM.CLR.CD<1,NEW.MV>
   SCREEN FIELD;;15
   SCREEN INPUT;;15;RETURN
   IF S$VALUE # "" THEN
      MATREAD COLOR.REC FROM COLOR,CONO:S$VALUE ELSE
         ERRMSG = "Invalid Color Code. Try again! "
         GOSUB 90000
         GOTO 10700
      END
   END
   ESTM.CLR.CD<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET FINISH
*
10800*
   S$DATA(16)<S$SCR> = ESTM.FINISH.CD<1,NEW.MV>
   SCREEN FIELD;;16
   SCREEN INPUT;;16;RETURN
   IF S$VALUE # "" THEN
      MATREAD FINISH.REC FROM FINISH,CONO:S$VALUE ELSE
         ERRMSG = "Invalid Finish Code. Try again! "
         GOSUB 90000
         GOTO 10800
      END
   END
   ESTM.FINISH.CD<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET PRODUCT LINE
*
10850*
   S$DATA(21)<S$SCR> = ESTM.PLINE<1,NEW.MV>
   SCREEN FIELD;;21
   SCREEN INPUT;;21;RETURN
   IF S$VALUE # "" THEN
      MATREAD CATG.REC FROM CATEGORY, CONO:S$VALUE ELSE
         ERRMSG = "Invalid Product Line. Try again! "
         GOSUB 90000
         GOTO 10850
      END
   END
   ESTM.PLINE<1,NEW.MV> = S$VALUE
   RETURN
*
*---- GET UNIT OF MEASURE
*
10900*
   S$DATA(17)<S$SCR> = "SHT"
   SCREEN DISPLAY;;17
   ESTM.UM<1,NEW.MV> = "SHT"
   S$DATA(45)<S$SCR> = "SHT"
   SCREEN DISPLAY;;45
   ESTM.UM<1,NEW.MV> = "SHT"
*     SCREEN FIELD;;17
*     SCREEN INPUT;;17;RETURN
*     ESTM.UM<1,NEW.MV,1> = S$VALUE
*     SCREEN FIELD;;45
*     SCREEN INPUT;;45;RETURN
*     ESTM.UM<1,NEW.MV,2> = S$VALUE
   RETURN
*
*---- GET FORMULA ID
*
11000*
   S$DATA(46)<S$SCR> = ESTM.QPARAM<1,NEW.MV>
   SCREEN FIELD;;46
   SCREEN INPUT;;46;RETURN
   SUB.NAME="EST.FORMULA.Q":S$VALUE
   FORMULA.FOUND = 0
   READ REC FROM VOC, SUB.NAME THEN
      IF REC<1> = "C" THEN
         OSREAD REC FROM REC<2> THEN FORMULA.FOUND = 1
      END
   END ELSE
      OSREAD REC FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
   END
   IF NOT(FORMULA.FOUND) THEN
      ERRMSG="Invalid formula ID. Try again !"
      GOSUB 90000
      GOTO 11000
   END
   ESTM.QCALC<1,NEW.MV> = "F"
   ESTM.QPARAM<1,NEW.MV> = S$VALUE
   ESTM.QOR<1,NEW.MV> = "N"
   ESTM.FCALC<1,NEW.MV> = "C"
   ESTM.FPARAM<1,NEW.MV> = "1"
   ESTM.FOR<1,NEW.MV> = "N"
   RETURN
*
*---- GET INDIRECT PERCENT
*
11100*
   SAVE.FOH.PCT = S$DATA(18)<S$SCR>
11102*
   S$DATA(18)<S$SCR> = SAVE.FOH.PCT
   SCREEN FIELD;;18
   SCREEN INPUT;;18;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 11102
         END
         ESTM.FOH.PCT<1,NEW.MV> = IVAL
         S$DATA(18)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;;18
      CASE S$VALUE # ""
         MATREAD FTR.REC FROM FOH.TABLE,CONO:S$VALUE ELSE
            ERRMSG = "Invalid Table ID. Try again! "
            GOSUB 90000
            GOTO 11102
         END
         ESTM.FOH.PCT<1,NEW.MV> = S$VALUE
   END CASE
   RETURN
*
*---- GET MARK-UP % OR TABLE ID
*
11200*
   SAVE.MARKUP = S$DATA(19)<S$SCR>
11202*
   S$DATA(19)<S$SCR> = SAVE.MARKUP
   SCREEN FIELD;;19
   SCREEN INPUT;;19;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 11202
         END
         ESTM.MARKUP<1,NEW.MV> = IVAL
         S$DATA(19)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;;19
      CASE S$VALUE # ""
         MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:S$VALUE ELSE
            ERRMSG = "Invalid Table ID. Try again! "
            GOSUB 90000
            GOTO 11202
         END
         ESTM.MARKUP<1,NEW.MV> = S$VALUE
   END CASE
   RETURN
*
*---- GET PRICING RANGE/PRICE
*
11600*
   IF ESTM.END.QTY<1,NEW.MV,CNT> = 99999999 THEN
      S$VALUE = "END"
      GOTO 11695
   END
   S$VAL = REF.NO
   SCREEN DISPLAY;;31
   S$VAL = REF.NO
   IF REF.NO = 1 THEN
      BEG.QTY = 1
   END ELSE
      BEG.QTY = ESTM.END.QTY<1,NEW.MV,REF.NO - 1> + 1
   END
   S$DATA(32)<S$SCR,REF.NO> = BEG.QTY
   SCREEN DISPLAY;;32
   TEMP.BEG = BEG.QTY
11610*
   S$VAL = REF.NO
   SCREEN FIELD;;33
   IF REF.NO # 1 AND REF.NO < CNT THEN
      S$MINV = ESTM.BEG.QTY<1,NEW.MV,REF.NO> + 1
      S$MAXV = ESTM.BEG.QTY<1,NEW.MV,REF.NO + 1> - 1
   END
   SCREEN INPUT;;33;GOTO 11695
   IF S$VALUE < BEG.QTY THEN
      ERRMSG = "Must enter a larger quantity than previous quantity"
      GOSUB 90000
      GOTO 11610
   END
   TEMP.END = S$VALUE
11620*
   S$VAL = REF.NO
   SCREEN FIELD;;34
   IF REF.NO # 1 AND REF.NO < CNT THEN
      S$MINV = ESTM.QCOST<1,NEW.MV,REF.NO + 1> + 1
      S$MAXV = ESTM.QCOST<1,NEW.MV,REF.NO - 1> - 1
   END
   SCREEN INPUT;;34;GOTO 11695
   IF REF.NO # 1 AND S$VALUE >= ESTM.QCOST<1,NEW.MV,REF.NO-1> THEN
      ERRMSG = "Current cost must be less than previous cost"
      GOSUB 90000
      GOTO 11620
   END
   TEMP.QCOST = S$VALUE
11690*
   ESTM.BEG.QTY<1,NEW.MV,REF.NO> = TEMP.BEG
   ESTM.END.QTY<1,NEW.MV,REF.NO> = TEMP.END
   ESTM.QCOST<1,NEW.MV,REF.NO> = TEMP.QCOST
   RETURN
*
*---- BACK-OUT ENTRY
*
11695*
   S$DATA(32)<S$SCR,REF.NO> = ESTM.BEG.QTY<1,NEW.MV,REF.NO>
   S$DATA(33)<S$SCR,REF.NO> = ESTM.END.QTY<1,NEW.MV,REF.NO>
   S$DATA(34)<S$SCR,REF.NO> = ESTM.QCOST<1,NEW.MV,REF.NO>
   CURR.REF.NO = ""
   GOSUB 50000
   RETURN
*
*---- DUMMY
*
19990*
   RETURN
*
*---- OPTIONS FOR PRICING
*
20000*
   MORE = 1
   LOOP
      S$DATA(42)<S$SCR> = ""
      SCREEN FIELD;;42
      SCREEN INPUT;;42
      OPT = S$VALUE
      BEGIN CASE
         CASE OPT = "A" AND CNT < 99 AND ESTM.END.QTY<1,NEW.MV,CNT> < 99999999
            DONE = 0
            FOR REF.NO = CNT + 1 TO 99 UNTIL DONE
               GOSUB 50000
               GOSUB 11600
               IF S$VALUE = "END" THEN
                  DONE = 1
                  S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO,0)
                  S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
                  S$DATA(34) = DELETE(S$DATA(34),S$SCR,REF.NO,0)
                  ESTM.BEG.QTY = DELETE(ESTM.BEG.QTY,1,NEW.MV,REF.NO)
                  ESTM.END.QTY = DELETE(ESTM.END.QTY,1,NEW.MV,REF.NO)
                  ESTM.QCOST = DELETE(ESTM.QCOST,1,NEW.MV,REF.NO)
               END ELSE
                  CNT = CNT + 1
               END
            NEXT REF.NO
            REF.NO = CNT
            CURR.REF.NO = ""
            GOSUB 50000
         CASE OPT = "C" AND CNT > 0
            GOSUB 30000
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF.NO = S$VALUE
               OLD.END.QTY = ESTM.END.QTY<1,NEW.MV,REF.NO>
               GOSUB 11600
               IF REF.NO < CNT AND OLD.END.QTY # ESTM.END.QTY<1,NEW.MV,REF.NO> THEN
                  S$VAL = REF.NO + 1
                  ESTM.BEG.QTY<1,NEW.MV,REF.NO + 1> = ESTM.END.QTY<1,NEW.MV,REF.NO> + 1
                  S$DATA(32)<S$SCR,REF.NO + 1> = ESTM.BEG.QTY<1,NEW.MV,REF.NO + 1>
                  CURR.REF.NO = "";GOSUB 50000
               END
            END
         CASE OPT = "D" AND CNT > 0
            GOSUB 30000
            IF S$VALUE # "" AND S$VALUE # "END" THEN
               REF.NO = S$VALUE
               S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO,0)
               S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
               S$DATA(34) = DELETE(S$DATA(34),S$SCR,REF.NO,0)
               ESTM.BEG.QTY = DELETE(ESTM.BEG.QTY,1,NEW.MV,REF.NO)
               ESTM.END.QTY = DELETE(ESTM.END.QTY,1,NEW.MV,REF.NO)
               ESTM.QCOST = DELETE(ESTM.QCOST,1,NEW.MV,REF.NO)
               CNT = CNT - 1
               IF REF.NO > CNT THEN REF.NO = REF.NO - 1
               CURR.REF.NO = ""
               GOSUB 50000
               IF ESTM.BEG.QTY<1,NEW.MV,REF.NO> # "" THEN
                  S$VAL = REF.NO
                  ESTM.BEG.QTY<1,NEW.MV,REF.NO> = ESTM.END.QTY<1,NEW.MV,REF.NO - 1> + 1
                  S$DATA(32)<S$SCR,REF.NO> = ESTM.BEG.QTY<1,NEW.MV,REF.NO>
                  SCREEN DISPLAY;;32
               END
            END
         CASE OPT = "S"
            REF.NO = CURR.REF.NO + LINE.COUNT
            IF REF.NO > CNT THEN REF.NO = 1
            GOSUB 50000
    * T25978 v
         CASE OPT = 'SR'
            REF.NO = CURR.REF.NO - LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 50000
         CASE OPT = 'ST'
            REF.NO = 1
            GOSUB 50000
         CASE OPT = 'SB'
            REF.NO = CNT
            GOSUB 50000
    * T25978 ^
         CASE OPT = "" OR OPT = "END" OR OPT = "E"
            MORE = 0
      END CASE
   WHILE MORE DO REPEAT
   RETURN
*
*---- GET PRICING LINE REFERENCE NUMBER
*
30000*
   S$DATA(43)<S$SCR> = ""
   SCREEN FIELD;;43
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > CNT THEN S$MAXV = CNT
   SCREEN INPUT;;43
   RETURN
*
*---- DISPLAY PRICING
*
50000*
   START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = COUNT(S$DATA(32)<S$SCR>,VM) + (S$DATA(32)<S$SCR> # "")
   SCREEN MULTI;;C;31;32;33;34
   RETURN
*
*---- LOAD SCREEN VALUES
*
80000*
   BEGIN CASE
      CASE ESTM.COAT.CD<1,NEW.MV> = "1"
         COAT.DESC = "ONE-SIDE"
      CASE ESTM.COAT.CD<1,NEW.MV> = "2"
         COAT.DESC = "TWO-SIDES"
      CASE 1
         COAT.DESC = ""
   END CASE
   IF NUM(ESTM.FOH.PCT<1,NEW.MV>) THEN
      INDIRECT = OCONV(ESTM.FOH.PCT<1,NEW.MV>,"MD2")
   END ELSE
      INDIRECT = ESTM.FOH.PCT<1,NEW.MV>
   END
   IF NUM(ESTM.MARKUP<1,NEW.MV>) THEN
      MARKUP = OCONV(ESTM.MARKUP<1,NEW.MV>,"MD2")
   END ELSE
      MARKUP = ESTM.MARKUP<1,NEW.MV>
   END
   S$DATA(3)<S$SCR> = ESTM.DESC<1,NEW.MV>
   S$DATA(4)<S$SCR> = ESTM.WIDTH<1,NEW.MV>
   S$DATA(5)<S$SCR> = ESTM.LENGTH<1,NEW.MV>
   S$DATA(6)<S$SCR> = ESTM.GRAIN<1,NEW.MV>
   S$DATA(9)<S$SCR> = ESTM.BASIS.WT<1,NEW.MV>
   IF CAL.PPI = "P" THEN
      S$DATA(10)<S$SCR> = ESTM.PPI<1,NEW.MV>
   END ELSE
      S$DATA(10)<S$SCR> = ESTM.CALIPER<1,NEW.MV>
   END
   S$DATA(13)<S$SCR> = ESTM.COAT.CD<1,NEW.MV>
   S$DATA(14)<S$SCR> = COAT.DESC
   S$DATA(15)<S$SCR> = ESTM.CLR.CD<1,NEW.MV>
   S$DATA(16)<S$SCR> = ESTM.FINISH.CD<1,NEW.MV>
   S$DATA(21)<S$SCR> = ESTM.PLINE<1,NEW.MV>
   S$DATA(17)<S$SCR> = ESTM.UM<1,NEW.MV>
   S$DATA(45)<S$SCR> = ESTM.UM<1,NEW.MV>
*     S$DATA(17)<S$SCR> = ESTM.UM<1,NEW.MV,1>
*     S$DATA(45)<S$SCR> = ESTM.UM<1,NEW.MV,2>
   S$DATA(46)<S$SCR> = ESTM.QPARAM<1,NEW.MV>
   S$DATA(18)<S$SCR> = INDIRECT
   S$DATA(19)<S$SCR> = MARKUP
   BEG.QTY.TBL = "";END.QTY.TBL = "";QCOST.TBL = ""
   B.CNT = COUNT(ESTM.BEG.QTY<1,NEW.MV>,SVM) + (ESTM.BEG.QTY<1,NEW.MV> # "")
   FOR XX = 1 TO B.CNT
      BEG.QTY.TBL<1,XX> = ESTM.BEG.QTY<1,NEW.MV,XX>
      END.QTY.TBL<1,XX> = ESTM.END.QTY<1,NEW.MV,XX>
      QCOST.TBL<1,XX> = ESTM.QCOST<1,NEW.MV,XX>
   NEXT XX
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
*       PRINT @(-1):
END
