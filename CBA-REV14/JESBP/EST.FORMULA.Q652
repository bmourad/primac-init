   SUBROUTINE EST.FORMULA.Q652 (CONO, ACTION, EQTY, DEPT, COMP)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.FORMULA.Q652
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 02/27/86
*
* DESCRIPTION
*
* This formula is used to calculate cut requirements for specified
* cutter and job specifications.
*
*T27924 cmykleb 03/12/2004 * Move estimate qty to the component level.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
   TEMP.QTY = ""
   TYP = 0
   MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:TEMP.CCTR ELSE
      MAT EQUIPMENT.REC = ""
   END
   LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE QPTR = 1
*T27924 v
   CQTY = EST.COMP.QTY<1,COMP,QPTR>
   BEGIN CASE
      CASE CQTY=""
         COMPQTY = EQTY
      CASE (CQTY[1,1]="+" OR CQTY[1,1]="-") AND CQTY[LEN(CQTY),1]="%"
         COMPQTY = INT(EQTY * (1 + (CQTY[1,LEN(CQTY)-1]/100)) + 0.5)
      CASE CQTY[1,1]="+" OR CQTY[1,1]="-"
         COMPQTY = EQTY + CQTY
      CASE 1
         COMPQTY = CQTY
   END CASE
   IF COMPQTY < 0 THEN COMPQTY = 0
*T27924 ^
10*
   BEGIN CASE
      CASE QPTR > 1 OR ACTION = "R"
         NULL
      CASE 1
         IF TYP = 0 THEN CALL EDIT.SUB1 (MAT EDIT.COM)
*T27924 v
         X=0;Y=23;TYP=14;MAXL=4;MINV=1;MAXV=999;JUSTIFY="L"
*T27924 ^
         BEGIN CASE
            CASE TEMP.FVAR1 # ""
               DEFAULT = TEMP.FVAR1 / 100
            CASE EQP.CUTTER.IN.PER.LIFT # ""
               DEFAULT = EQP.CUTTER.IN.PER.LIFT / 100
            CASE 1
               DEFAULT = ""
         END CASE
         IF DEFAULT = "" THEN
            PMSG = "Inches per lift ?"
         END ELSE
            O.R = "O"
            PMSG = "Inches per lift (Default = ":DEFAULT:") ?"
         END
         CALL EDIT.SUB1 (MAT EDIT.COM)
         IF VALUE = "END" THEN RETURN
         IF VALUE = "" THEN GOTO 10
         TEMP.FVAR1 = VALUE
*        EST.FORMULA.VAR<1,2> = TEMP.FVAR1
   END CASE
   INCHES.PER.LIFT = TEMP.FVAR1
   IF INCHES.PER.LIFT+0 = 0 THEN GOTO 99999
20*
   BEGIN CASE
      CASE QPTR > 1 OR ACTION = "R"
         NULL
      CASE 1
         IF TYP = 0 THEN CALL EDIT.SUB1 (MAT EDIT.COM)
*T27924 v
         X=0;Y=23;TYP=13;MAXL=4;MINV=1;MAXV=99;JUSTIFY="L"
*T27924 ^
         BEGIN CASE
            CASE TEMP.FVAR2 # ""
               DEFAULT = TEMP.FVAR2
            CASE 1
               DEFAULT = ""
         END CASE
         IF DEFAULT = "" THEN
            PMSG = "Cuts per lift ?"
         END ELSE
            O.R = "O"
            PMSG = "Cuts per lift (Default = ":DEFAULT:") ?"
         END
         CALL EDIT.SUB1 (MAT EDIT.COM)
         IF VALUE = "END" THEN RETURN
         IF VALUE = "" THEN GOTO 20
         TEMP.FVAR2 = VALUE
*        EST.FORMULA.VAR<1,3> = TEMP.FVAR2
   END CASE
   CUTS.PER.LIFT = TEMP.FVAR2
   IF CUTS.PER.LIFT+0 = 0 THEN GOTO 99999
   WEB.CNT = EST.PROD.WEB.CNT<1,COMP>+0
   IF WEB.CNT = 0 THEN WEB.CNT = 1
   TOT.PPI = 0
   FOR MPTR = 1 TO WEB.CNT
      IF EST.PROD.CALIPER<1,COMP,MPTR>="" THEN
         PPI = EST.PROD.PPI<1,COMP,MPTR>
      END ELSE
         PPI = INT(2000 / (EST.PROD.CALIPER<1,COMP,MPTR>/1000) + 0.5)
      END
      TOT.PPI = TOT.PPI + PPI
   NEXT MPTR
   PPI = INT(TOT.PPI/WEB.CNT+0.5)
*
*---- MAIN PROCESSING
*
   NUMBER.UP = EST.PROD.NO.UP<1,COMP,1>+0
   IF NUMBER.UP = 0 THEN NUMBER.UP = 1
   FORMS = EST.PROD.FORMS<1,COMP,1>+0
   IF FORMS = 0 THEN FORMS = 1
   PROD.QTY = COMPQTY + FIELD(EST.PROD.BS.REQ<1,COMP,1>,"!",QPTR) ;*T27924
   CUT.SHT = INT(PROD.QTY / NUMBER.UP * FORMS + 0.99)
   IF INCHES.PER.LIFT + 0 = 0 THEN
      LIFTS = 0
   END ELSE
      LIFTS = INT((CUT.SHT / 1000) * (2000/PPI) / (INCHES.PER.LIFT / 100) + 0.99)
   END
   TEMP.QTY = LIFTS * CUTS.PER.LIFT
   TEMP.VSALE = "Y"
   RETURN
*
*---- END OF PROGRAM
*
99999*
   RETURN
END
