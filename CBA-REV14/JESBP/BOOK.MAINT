*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>COM.BOOKING
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - BOOK.MAINT
*
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/23/86
*
* DESCRIPTION
*
* This program is to Book an Estimate to a Job.
*
***************************************************************************
*
*--- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>ESTIMATOR
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>JCS.CPYLIB>JOB.CATEGORY
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   DIM MAST.REC(35)
   EQU MAST.EST        TO MAST.REC(1)
   EQU MAST.STATUS     TO MAST.REC(2)
   EQU MAST.EST.SUBS   TO MAST.REC(3)
   EQU MAST.JOB        TO MAST.REC(4)
   EQU MAST.JOB.SUBS   TO MAST.REC(5)
   EQU MAST.ESTIMATOR  TO MAST.REC(6)
   EQU MAST.CUST       TO MAST.REC(7)
   EQU MAST.SLSMN      TO MAST.REC(8)
   EQU MAST.DIV        TO MAST.REC(9)
   EQU MAST.ENTER.DATE TO MAST.REC(10)
   EQU MAST.DUE.DATE   TO MAST.REC(11)
   EQU MAST.MARKUP     TO MAST.REC(12)
   EQU MAST.QUOTED.AMT TO MAST.REC(13)
   EQU MAST.PRICE.THOU TO MAST.REC(14)
   EQU MAST.SALES.CODE TO MAST.REC(15)
   EQU MAST.TYPE       TO MAST.REC(16)
   EQU MAST.CATG       TO MAST.REC(17)
   EQU MAST.SHPV       TO MAST.REC(18)
   EQU MAST.CUST.PO    TO MAST.REC(19)
   EQU MAST.CREDIT     TO MAST.REC(20)
   EQU MAST.PRIOR.JOB  TO MAST.REC(21)
   EQU MAST.DESC       TO MAST.REC(22)
   EQU MAST.COMMENTS   TO MAST.REC(23)
   EQU MAST.BOOK.JOB   TO MAST.REC(24)
   EQU MAST.BOOK.QTY   TO MAST.REC(25)
   EQU MAST.BOOK.COMP  TO MAST.REC(26)
   EQU MAST.COLORS     TO MAST.REC(27)
   EQU MAST.EST.COST   TO MAST.REC(28)
   EQU MAST.EST.SALE   TO MAST.REC(29)
   EQU MAST.JOB.FLAG   TO MAST.REC(30)
*
*--- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;STOP
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;STOP
   OPEN "","SECURITY" TO SECURITY ELSE ERRMSG="CANNOT OPEN SECURITY FILE";GOSUB 90000;STOP
   OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX FILE";GOSUB 90000;STOP
   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CANNOT OPEN CUSTOMER FILE";GOSUB 90000;STOP
   OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG="CANNOT OPEN CUSTOMER.XREF FILE";GOSUB 90000;STOP
   OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG="CANNOT OPEN SALESMAN FILE";GOSUB 90000;STOP
   OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="CANNOT OPEN DIVISION FILE";GOSUB 90000;STOP
   OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="CANNOT OPEN DEPARTMENT FILE";GOSUB 90000;STOP
   OPEN "","JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;STOP
   OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG="CANNOT OPEN JOB.CATEGORY FILE";GOSUB 90000;STOP
   OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG="CANNOT OPEN SALES.CODE FILE";GOSUB 90000;STOP
   OPEN "","ESTIMATOR" TO ESTIMATOR ELSE ERRMSG="CANNOT OPEN ESTIMATOR FILE";GOSUB 90000;STOP
   OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="CANNOT OPEN SHIP.VIA FILE";GOSUB 90000;STOP
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CANNOT OPEN CATEGORY FILE";GOSUB 90000;STOP
   OPEN "","JES.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN JES.SCREENS FILE";GOSUB 90000;STOP
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG="CANNOT OPEN ESTIMATE FILE";GOSUB 90000;STOP
   OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE ERRMSG="CANNOT OPEN ESTIMATE.DEPT FILE";GOSUB 90000;STOP
   OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE ERRMSG="CANNOT OPEN ESTIMATE.MATL FILE";GOSUB 90000;STOP
   OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE ERRMSG="CANNOT OPEN ESTIMATE.JOB FILE";GOSUB 90000;STOP
   OPEN "","CUST.EST.XREF" TO CUST.EST.XREF ELSE ERRMSG="CANNOT OPEN CUST.EST.XREF FILE";GOSUB 90000;STOP
   OPEN "","PROSPECT.EST.XREF" TO PROSPECT.EST.XREF ELSE ERRMSG="CANNOT OPEN PROSPECT.EST.XREF FILE";GOSUB 90000;STOP
*
*--- INITIALIZATION
*
* PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
*PORT.NO = SYSTEM(18)
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
*PORT.NO = PORT.NO[INDEX(PORT.NO,"/",1)+4,99]
   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "???"
   OPER.ID = PORT.NO :"!": OPER.ID
   CONO=""
   CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
   SCREEN INIT;#
   S$SCR=1
   SCREEN DEFINE;BOOK.MAINT
   SCREEN FORMAT
   SCREEN COUNT;BOOK.MAINT;28
   LINE.COUNT=S$LCNT
   LINE.SPACE=S$LSPC
   MAT GEN.XREF.REC=""
   ERRMSG=""
   UNKNOWN=STR("?",30)
   TRUE=1 ; FALSE=0
   TODAY = DATE()
   GOTO 110
* 
*--- MAIN PROCESSING 
* 
100* 
   SCREEN CLEAR
110* 
   MAT EST.REC = ""
   MAT JOB.REC = ""
   EST.KEY = ""
   OLD.CUST = ""
   OLD.CUST.NAME = ""
   MAT MAST.REC = ""
   DESC.FLAG = "D"
   S$DATA(27)="   Description"
   CNT = 0
   ECNT = 0
   JCNT = 0
   QCNT = 0
   CURR.REF.NO=""
   EC.REF.NO = ""
   JC.REF.NO = ""
   QC.REF.NO = ""
   S$DATA(1)<S$SCR>=""
   SCREEN FIELD;BOOK.MAINT;1
   SCREEN INPUT;BOOK.MAINT;1
   BEGIN CASE
      CASE S$VALUE = "END"
         GOTO 99999
      CASE S$VALUE # ""
         EST.KEY = S$VALUE
         MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE
            ERRMSG = "Estimate not on file. Try again! "
            GOSUB 90000; GOTO 110
         END
         IF EST.CUST = "" THEN
            ERRMSG = "You need either a customer number or a prospect for estimate"
            GOSUB 90000; GOTO 110
         END
         BEGIN CASE
            CASE EST.STATUS<1,1> = "LOST"
               ERRMSG = "This estimate is lost"; GOSUB 90000; GOTO 110
            CASE EST.STATUS<1,1> = "BOOKED"
               BLK = 1
               FOR I = 1 TO EST.COMPONENT.CNT WHILE BLK
                  IF EST.BOOK.JOB<1,I> = "" THEN BLK = 0
               NEXT I
               IF BLK THEN
                  ERRMSG = "All components for this estimate are booked to jobs"
                  GOSUB 90000; GOTO 110
               END
            CASE EST.COMPONENT.CNT < 1
               BEGIN CASE
                  CASE (EST.MASTER = "" OR EST.MASTER = EST.KEY) AND EST.JOB = ""
                  CASE 1
                     ERRMSG = "This estimate has no components. Try again! "
                     GOSUB 90000; GOTO 110
               END CASE
         END CASE
         OLD.CUST = EST.CUST
         OLD.CUST.NAME = EST.CUST.NAME
         MAST.DIV = FIELD(EST.DIV,"-",1)
         IF EST.MASTER = "" OR EST.MASTER = EST.KEY THEN
            MAST.EST = EST.KEY
            MAST.STATUS = EST.STATUS<1,1>
            MAST.EST.SUBS = EST.SUBS
            MAST.JOB = EST.JOB
            IF MAST.JOB # "" THEN
               MATREAD JOB.REC FROM JOB, CONO:MAST.JOB ELSE
                  ERRMSG = "Cannot locate master job - ":MAST.JOB
                  GOSUB 90000; GOTO 110
               END
               IF JOB.EST # MAST.EST THEN
                  ERRMSG = "Master job does not belong to master estimate"
                  GOSUB 90000; GOTO 110
               END
               MAST.JOB.SUBS = JOB.SUBS
               MAST.CUST = JOB.CUST
               MAST.DUE.DATE = JOB.TRACK.DATE<1,4>
               MAST.MARKUP = JOB.MARKUP
               MAST.SALES.CODE = JOB.SALES.CODE
               IF EST.CATG = "" THEN MAST.CATG = JOB.CATG ELSE MAST.CATG = EST.CATG
               MAST.PRIOR.JOB = JOB.PRIOR.JOB
               MAST.COLORS = JOB.COLORS
            END ELSE
               MAST.CUST = EST.CUST
               MAST.DUE.DATE = EST.DATE.REQUIRED
               MAST.MARKUP = EST.MARKUP
               MAST.SALES.CODE = EST.SALES.CODE
               MAST.CATG = EST.CATG
            END
         END ELSE
            READ DUMMY FROM ESTIMATE, CONO:EST.MASTER ELSE
               ERRMSG = "Master estimate not on file"
               GOSUB 90000; GOTO 110
            END
            IF DUMMY<EST.MASTER.JOB.ATT> = "" THEN
               ERRMSG = "Master estimate must be booked before booking sub-estimates"
               GOSUB 90000; GOTO 110
            END
            MAST.EST = EST.MASTER
            MAST.STATUS = DUMMY<EST.MASTER.STATUS.ATT,1>
            MAST.EST.SUBS = DUMMY<EST.MASTER.SUBS.ATT>
            MAST.JOB = DUMMY<EST.MASTER.JOB.ATT>
            MATREAD JOB.REC FROM JOB, CONO:MAST.JOB ELSE
               ERRMSG = "Cannot locate master job - ":MAST.JOB
               GOSUB 90000; GOTO 110
            END
            IF JOB.EST # MAST.EST THEN
               ERRMSG = "Master job does not belong to master estimate"
               GOSUB 90000; GOTO 110
            END
            MAST.JOB.SUBS = JOB.SUBS
            MAST.CUST = JOB.CUST
            MAST.DUE.DATE = JOB.TRACK.DATE<1,4>
            MAST.MARKUP = JOB.MARKUP
            MAST.SALES.CODE = JOB.SALES.CODE
            IF EST.CATG = "" THEN MAST.CATG = JOB.CATG ELSE MAST.CATG = EST.CATG
            MAST.PRIOR.JOB = JOB.PRIOR.JOB
            MAST.COLORS = JOB.COLORS
         END
         MAST.ESTIMATOR = EST.ESTIMATOR
         MAST.SLSMN = EST.SALESMAN
         MAST.ENTER.DATE = DATE()
         MAST.PRICE.THOU = EST.PRICE.THOU
         MAST.TYPE = EST.TYPE
         IF MAST.CUST = "P" THEN
120* 
            SCREEN FIELD;BOOK.MAINT;6
            SCREEN INPUT;BOOK.MAINT;6;GOTO 110
            BEGIN CASE
               CASE S$VALUE = "END"
                  GOTO 110
               CASE S$VALUE # ""
                  MATREAD CUST.REC FROM CUSTOMER, CONO:S$VALUE ELSE
                     ERRMSG = "Customer not on file. Try again! "
                     GOSUB 90000; GOTO 120
                  END
                  MAST.CUST = S$VALUE
               CASE S$VALUE = ""
                  SCREEN FIELD;BOOK.MAINT;7
                  S$DEFAULT = EST.CUST.NAME
                  SCREEN INPUT;BOOK.MAINT;7
                  IF S$VALUE = "END" OR S$VALUE = "" THEN GOTO 120
                  GXR.CO = CONO
                  GXR.XREF = CUSTOMER.XREF
                  GXR.SRCH.ID = S$VALUE
                  GXR.FILE = CUSTOMER
                  GXR.LOC = 1
                  GXR.TOP.LINE = "CUSTOMER XREF SEARCH"
                  GXR.HEADING<1,1> = "CUSTOMER"
                  GXR.ATT<1,1> = 0
                  GXR.LEN<1,1> = 10
                  GXR.HEADING<1,2> = "CUSTOMER NAME"
                  GXR.ATT<1,2> = 1
                  GXR.LEN<1,2> = 60
                  GXR.ID = ""
*         CALL GEN.XREF1 (MAT GEN.XREF.REC,PREFIX)
                  CALL GEN.XREF (MAT GEN.XREF.REC,PREFIX)
                  IF GXR.ACTION # "X" THEN
                     S$DATA(7)<S$SCR> = ""
                     GOSUB 550
                  END
                  IF GXR.ID = "" THEN GOTO 120
                  MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
                     ERRMSG = "Invalid customer. Try again! "
                     GOSUB 90000; GOTO 120
                  END
                  MAST.CUST = GXR.ID
            END CASE
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:MAST.CUST ELSE
               ERRMSG = "Cannot locate customer - ":MAST.CUST
               GOSUB 90000; GOTO 110
            END
         END
         BEGIN CASE
            CASE JOB.SHIP.VIA # ""
               MAST.SHPV = JOB.SHIP.VIA
            CASE CUST.SHIP.VIA # ""
               MAST.SHPV = CUST.SHIP.VIA
            CASE 1
               MAST.SHPV = "00"
         END CASE
         IF JOB.CUST.PO # "" THEN MAST.CUST.PO = JOB.CUST.PO ELSE MAST.CUST.PO = EST.CUST.PO
      CASE 1
         ERRMSG = "INVALID RESPONSE"
         GOSUB 90000
         GOTO 110
   END CASE
   MAST.BOOK.QTY = EST.BOOK.QTY
   DUMMY = ""
   MAT JOB.REC = ""
   CNT = COUNT(EST.COMMENTS,VM) + (EST.COMMENTS # "")
   FOR REF.NO = 1 TO CNT
      BEGIN CASE
         CASE EST.COMMENT.TYPE<1,REF.NO> = ""
            MAST.DESC<1,-1> = EST.COMMENTS<1,REF.NO>
         CASE EST.COMMENT.TYPE<1,REF.NO> = "I"
            BEGIN CASE
               CASE MAST.COMMENTS = "" AND EST.COMMENTS<1,REF.NO> # ""
                  MAST.COMMENTS<1,1> = EST.COMMENTS<1,REF.NO>
               CASE MAST.COMMENTS<1,2> = ""
                  MAST.COMMENTS<1,2> = EST.COMMENTS<1,REF.NO>
            END CASE
      END CASE
   NEXT REF.NO
   GOSUB 80000
   ECNT = COUNT(MAST.EST.SUBS,VM) + (MAST.EST.SUBS # "")
   JCNT = COUNT(MAST.JOB.SUBS,VM) + (MAST.JOB.SUBS # "")
   QCNT = COUNT(EST.QTY,VM) + (EST.QTY # "")
   CNT = COUNT(MAST.DESC,VM) + (MAST.DESC # "")
   EREF = 1
   GOSUB 82000
   IF JCNT THEN JREF = JCNT ELSE JREF = 1
   GOSUB 83000
   QREF = 1
   GOSUB 84000
   REF.NO = 1
   GOSUB 81000
   FOR OPTION = 1 TO 11 UNTIL S$VALUE = "END"
      ON OPTION GOSUB 10300,10400,10500,10800,10900,11000,11100,11200,11300,11500,11600
   NEXT OPTION
   IF S$VALUE = "END" THEN GOTO 100
* 
*--- GET OPERATOR REPLY 
* 
500* 
   SCREEN FIELD;BOOK.MAINT;33
   SCREEN INPUT;BOOK.MAINT;33
   OPTION=S$VALUE
   BEGIN CASE
      CASE OPTION="E" OR OPTION="END"
         GOTO 100
      CASE OPTION="D"
         ACTION = OPTION
         CALL BOOK.MAINT.DESC(ACTION,DESC.FLAG,LINE.COUNT,REF.NO,CURR.REF.NO,MAT MAST.REC)
      CASE OPTION="C"
         ACTION = OPTION
         CALL BOOK.MAINT.DESC(ACTION,DESC.FLAG,LINE.COUNT,REF.NO,CURR.REF.NO,MAT MAST.REC)
      CASE OPTION="SE"
         IF ECNT > 3 THEN
            EREF=EC.REF.NO+3
            IF EREF > ECNT THEN EREF = 1
            GOSUB 82000
         END
      CASE OPTION="SJ"
         IF JCNT > 3 THEN
            JREF=JC.REF.NO+3
            IF JREF > JCNT THEN JREF = 1
            GOSUB 83000
         END
      CASE OPTION="SQ"
         IF QCNT > 3 THEN
            QREF=QC.REFF.NO+3
            IF QREF > QCNT THEN QREF = 1
            GOSUB 84000
         END
      CASE OPTION # "" AND NUM(OPTION)
         FLD=OPTION
         BEGIN CASE
            CASE FLD <= 10
               ON FLD GOSUB 19990,19990,10300,10400,10500,19990,19990,10800,10900,11000
            CASE FLD <= 16
               ON FLD-10 GOSUB 11100,11200,11300,11400,11500,11600
         END CASE
      CASE OPTION="P"
         GOSUB 1000
         IF S$VALUE = "END" THEN GOTO 500
         GOTO 100
   END CASE
   GOTO 500
*-----------------------* 
*---  SUBROUTINES   ---*
*-----------------------* 
* 
*--- REFORMAT SCREEN 
* 
550* 
   SCREEN FORMAT
551*
   GOSUB 80100
   EC.REF.NO=""
   EREF=1
   GOSUB 82000
   JC.REF.NO=""
   IF JCNT THEN JREF=JCNT ELSE JREF=1
   GOSUB 83000
   QC.REF.NO=""
   QREF=1
   GOSUB 84000
   CURR.REF.NO=""
   REF.NO=1
   GOSUB 81000
   RETURN
* 
*--- GET ORDER QUANTITY 
* 
700* 
   EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
   IF EC < 2 THEN
      S$VALUE=EST.QTY<1,1>
   END ELSE
      SCREEN FIELD;BOOK.MAINT;35
      S$MINV=1;S$MAXV=EC
      S$PMSG="Enter Quantity"
      FOR EP=1 TO EC
         S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
      NEXT EP
      SCREEN INPUT;BOOK.MAINT;35;RETURN
      S$VALUE=EST.QTY<1,S$VALUE>
   END
   RETURN
* 
*--- PROCESS BOOKING 
* 
1000* 
   BEGIN CASE
      CASE EST.COMPONENT.CNT < 1 AND MAST.JOB = ""
         MAST.JOB.FLAG = "Y"
      CASE MAST.JOB # ""
         MAST.JOB.FLAG = "N"
      CASE 1
         SCREEN FIELD;BOOK.MAINT;43
         S$PMSG='Do you need a master job header (Y/N)'
         SCREEN INPUT;BOOK.MAINT;43;RETURN
         MAST.JOB.FLAG = S$VALUE
   END CASE
   REPRINT.FLG = 0
   IF MAST.JOB.FLAG = "Y" THEN
      GOSUB 10100
      IF S$VALUE = "END" THEN RETURN
      GOSUB 50000
      IF REQUEST # "F" THEN
         RELEASE JOB, CONO:MAST.BOOK.JOB
         RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
         RETURN
      END
      IF MAST.CREDIT = "" THEN
         GOSUB 11400
         IF S$VALUE = "END" THEN
            RELEASE JOB, CONO:MAST.BOOK.JOB
            RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
            RETURN
         END
      END
      MAST.JOB = MAST.BOOK.JOB
      GOSUB 1500
      MAST.STATUS = "BOOKED"
      MAST.BOOK.JOB = ""
      EST.JOB = MAST.JOB
      S$DATA(8)<S$SCR> = MAST.STATUS
      S$DATA(10)<S$SCR> = MAST.JOB
      S$DATA(5)<S$SCR> = MAST.BOOK.JOB
      REPRINT.FLG = 1
   END
1050*
   FOR PTR = 1 TO EST.COMPONENT.CNT UNTIL S$VALUE = "END"
      IF EST.BOOK.JOB<1,PTR> # "" THEN GOTO 1059
      IF REPRINT.FLG THEN GOSUB 551
      GOSUB 10100
      IF S$VALUE = "END" THEN GOTO 1059
      GOSUB 10200
      IF S$VALUE = "END" THEN
         RELEASE JOB, CONO:MAST.BOOK.JOB
         RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
         GOTO 1059
      END
      FOR II = 1 TO 7 UNTIL S$VALUE = "END"
         ON II GOSUB 10600,10700,10800,10900,11000,11400,11600
      NEXT II
      IF S$VALUE = "END" THEN
         RELEASE JOB, CONO:MAST.BOOK.JOB
         RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
         GOTO 1059
      END
      GOSUB 50000
      IF REQUEST # "F" THEN
         RELEASE JOB, CONO:MAST.BOOK.JOB
         RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
         GOTO 1059
      END
      IF MAST.CREDIT = "" THEN
         GOSUB 11400
         IF S$VALUE = "END" THEN
            RELEASE JOB, CONO:MAST.BOOK.JOB
            RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
            GOTO 1059
         END
      END
      IF MAST.BOOK.COMP = "ALL" THEN
         FOR II = 1 TO EST.COMPONENT.CNT
            IF EST.BOOK.JOB<1,II> = "" THEN EST.BOOK.JOB<1,II> = MAST.BOOK.JOB
         NEXT II
      END ELSE
         EST.BOOK.JOB<1,MAST.BOOK.COMP> = MAST.BOOK.JOB
      END
      IF MAST.JOB = "" THEN MAST.JOB = MAST.BOOK.JOB
      GOSUB 1500
      LOCATE MAST.BOOK.JOB IN MAST.JOB.SUBS<1>,1 SETTING JFND ELSE MAST.JOB.SUBS<1,JFND> = MAST.BOOK.JOB
      JCNT = COUNT(MAST.JOB.SUBS,VM) + (MAST.JOB.SUBS # "")
      MAST.BOOK.JOB = ""
      MAST.BOOK.COMP = ""
      S$DATA(2)<S$SCR> = EST.STATUS<1,1>
      S$DATA(10)<S$SCR> = MAST.JOB
      S$DATA(5)<S$SCR> = MAST.BOOK.JOB
      S$DATA(30)<S$SCR> = MAST.BOOK.COMP
      S$DATA(47)<S$SCR> = MAST.JOB.SUBS
      REPRINT.FLG = 1
1059* 
   NEXT PTR
   S.HMSG = ""
   II = 1
   FOR PTR = 1 TO EST.COMPONENT.CNT
      IF EST.BOOK.JOB<1,PTR> = "" THEN
         IF S.HMSG = "" THEN
            S.HMSG<1,1,II> = "Available components - ":PTR
         END ELSE
            IF LEN(S.HMSG<1,1,II>) + 5 > 75 THEN
               II = II + 1
               S.HMSG<1,1,II> = "Available components (Cont'd) - ":PTR
            END ELSE
               S.HMSG<1,1,II> = S.HMSG<1,1,II> :", ": PTR
            END
         END
      END
   NEXT PTR
   IF S.HMSG = "" THEN GOTO 1099
   SCREEN FIELD;BOOK.MAINT;43
   S$HMSG = S.HMSG
   S$PMSG = "You did not book all components. Continue booking (Y/N)"
   SCREEN INPUT;BOOK.MAINT;43
   IF S$VALUE = "Y" THEN GOTO 1050
1099*
   RETURN
*
*--- CREATE JOB.REC
*
1500*
   MAT JOB.REC = ""
   MAST.EST.COST = 0
   MAST.EST.SALE = 0
   IF MAST.BOOK.COMP # "" THEN
      DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
      FOR DC = 1 TO DC.CNT
         IF FIELD(EST.DEPT.COMP<1,DC>,"!",3) = MAST.BOOK.QTY THEN
            IF MAST.BOOK.COMP = "ALL" OR FIELD(EST.DEPT.COMP<1,DC>,"!",2) = MAST.BOOK.COMP THEN
               MAST.EST.COST = MAST.EST.COST + EST.DEPT.COMP.COST<1,DC>
               MAST.EST.SALE = MAST.EST.SALE + EST.DEPT.COMP.TSALE<1,DC>
            END
         END
      NEXT DC
   END
   JOB.MASTER = MAST.JOB
   JOB.SLSMN = MAST.SLSMN
   JOB.CUST = MAST.CUST
   JOB.DIV = MAST.DIV
   JOB.MARKUP = MAST.MARKUP
   JOB.CONF.AMT = MAST.QUOTED.AMT + 0
   JOB.PRIOR.JOB = MAST.PRIOR.JOB
   JOB.COLORS = MAST.COLORS
   JOB.CREDIT = MAST.CREDIT
   JOB.TYPE = MAST.TYPE
   JOB.SHIP.VIA = MAST.SHPV
   JOB.CUST.PO = MAST.CUST.PO
   JOB.EST = EST.KEY
   JOB.EST.COST = MAST.EST.COST
   JOB.EST.SALE = MAST.EST.SALE
   JOB.CATG = MAST.CATG
   JOB.SALES.CODE = MAST.SALES.CODE
   JOB.PRICE.PER.THOU = MAST.PRICE.THOU
   JOB.TRACK.DATE<1,1> = EST.DATE.ENTERED
   JOB.TRACK.DATE<1,2> = MAST.ENTER.DATE
   JOB.TRACK.DATE<1,4> = MAST.DUE.DATE
   JOB.QTY<1,1> = MAST.BOOK.QTY
   JOB.COMMENTS = MAST.COMMENTS
   JOB.DESC = MAST.DESC
   MATWRITE JOB.REC ON JOB, CONO:MAST.BOOK.JOB
   MATREADU CUST.REC FROM CUSTOMER, CONO:MAST.CUST ELSE NULL
   LOCATE MAST.BOOK.JOB IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
   CUST.JOB<1,JFND> = MAST.BOOK.JOB
   CUST.JOB.BAL<1,JFND> = JOB.CONF.AMT
   MATWRITE CUST.REC ON CUSTOMER, CONO:MAST.CUST
   IF MAST.JOB # MAST.BOOK.JOB THEN
      MATREADU JOB.REC FROM JOB, CONO:MAST.JOB ELSE NULL
      LOCATE MAST.BOOK.JOB IN JOB.SUBS<1>,1 SETTING JFND ELSE JOB.SUBS<1,JFND> = MAST.BOOK.JOB
      MATWRITE JOB.REC ON JOB, CONO:MAST.JOB
   END
   EST.JOB = MAST.JOB
   IF EST.STATUS<1,1> # "BOOKED" THEN
      EST.STATUS = INSERT(EST.STATUS,1,1,0,"BOOKED")
      EST.STAT.DATE = INSERT(EST.STAT.DATE,1,1,0,TODAY)
   END
   IF EST.CUST # MAST.CUST THEN EST.CUST = MAST.CUST
   EST.BOOK.QTY = MAST.BOOK.QTY
   MATWRITE EST.REC ON ESTIMATE, CONO:EST.KEY
   IF MAST.JOB.FLAG # "Y" OR MAST.BOOK.JOB # MAST.JOB THEN
      CALL BOOK.UPDATE (CONO, "", EST.KEY, MAST.BOOK.JOB, MAST.BOOK.COMP)
   END ELSE
      RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
   END
   BEGIN CASE
      CASE OLD.CUST # "P" AND EST.CUST # "P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST,EST.CUST,CUST.EST.XREF,PREFIX)
      CASE OLD.CUST = "P" AND EST.CUST = "P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST.NAME,EST.CUST.NAME,PROSPECT.EST.XREF,PREFIX)
      CASE OLD.CUST = "P" AND EST.CUST # "P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST.NAME,"",PROSPECT.EST.XREF,PREFIX)
         CALL GEN.XREF.MAINT(CONO,EST.KEY,"",EST.CUST,CUST.EST.XREF,PREFIX)
      CASE OLD.CUST # "P" AND EST.CUST = "P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST,"",CUST.EST.XREF,PREFIX)
         CALL GEN.XREF.MAINT(CONO,EST.KEY,"",EST.CUST.NAME,PROSPECT.EST.XREF,PREFIX)
   END CASE
   RETURN
* 
*--- JOB NUMBER 
* 
10100* 
   SCREEN FIELD;BOOK.MAINT;5
   SCREEN INPUT;BOOK.MAINT;5;RETURN
   FND = 1
   READU REC FROM JOB, CONO:S$VALUE ELSE FND = 0
   REC = ""
   IF FND THEN
      RELEASE JOB, CONO:S$VALUE
      ERRMSG = "Job exists on file. Try again! "
      GOSUB 90000; GOTO 10100
   END
   FND = 1
   READU REC FROM ESTIMATE.JOB, CONO:S$VALUE ELSE FND = 0
   REC = ""
   IF FND THEN
      RELEASE JOB, CONO:S$VALUE
      RELEASE ESTIMATE.JOB, CONO:S$VALUE
      ERRMSG = "ESTIMATE.JOB exists on file. Try again! "
      GOSUB 90000; GOTO 10100
   END
   IF MAST.BOOK.JOB # "" AND MAST.BOOK.JOB # S$VALUE THEN
      RELEASE JOB, CONO:MAST.BOOK.JOB
      RELEASE ESTIMATE.JOB, CONO:MAST.BOOK.JOB
   END
   MAST.BOOK.JOB = S$VALUE
   RETURN
* 
*--- COMPONENT NUMBER 
* 
10200* 
   IF MAST.JOB.FLAG # "Y" AND EST.BOOK.JOB = "" AND EST.JOB = "" THEN
      S$VALUE = "ALL"
      S$DATA(30)<S$SCR> = S$VALUE
      SCREEN DISPLAY;BOOK.MAINT;30
      GOTO 10299
   END
   SCREEN FIELD;BOOK.MAINT;30
   SCREEN INPUT;BOOK.MAINT;30;RETURN
   BEGIN CASE
      CASE S$VALUE = "ALL" AND EST.BOOK.JOB = ""
      CASE NUM(S$VALUE) AND S$VALUE > 0 AND S$VALUE <= EST.COMPONENT.CNT
         IF EST.BOOK.JOB<1,S$VALUE> # "" THEN
            ERRMSG = "This component is booked to job - ":EST.BOOK.JOB<1,S$VALUE>
            GOSUB 90000; GOTO 10200
         END
      CASE 1
         ERRMSG = "Invalid component. Try again! "
         GOSUB 90000; GOTO 10200
   END CASE
10299*
   MAST.BOOK.COMP = S$VALUE
   RETURN
* 
*--- DATE ENTERED 
* 
10300* 
   SCREEN FIELD;BOOK.MAINT;19
   SCREEN INPUT;BOOK.MAINT;19;RETURN
   MAST.ENTER.DATE = S$VALUE
   RETURN
* 
*--- DATE REQUIRED 
* 
10400* 
   SCREEN FIELD;BOOK.MAINT;22
   SCREEN INPUT;BOOK.MAINT;22;RETURN
   MAST.DUE.DATE = S$VALUE
   RETURN
* 
*--- MARKUP PERCENT 
* 
10500* 
   SCREEN FIELD;BOOK.MAINT;25
   SCREEN INPUT;BOOK.MAINT;25;RETURN
   MAST.MARKUP=S$VALUE
   RETURN
* 
*--- BOOKED QUANTITY 
* 
10600* 
   IF EST.BOOK.QTY # "" THEN
      MAST.BOOK.QTY = EST.BOOK.QTY
      S$DATA(13)<S$SCR>=MAST.BOOK.QTY
      SCREEN DISPLAY;BOOK.MAINT;13
      GOTO 10699
   END
   SCREEN FIELD;BOOK.MAINT;13
   S$O.R = "O"
   IF MAST.BOOK.QTY # "" THEN S$DEFAULT = MAST.BOOK.QTY ELSE S$DEFUALT = EST.BASE.QTY
   SCREEN INPUT;BOOK.MAINT;13;RETURN
   LOCATE S$VALUE IN EST.QTY<1>,1 SETTING FND ELSE
      ERRMSG = "Invalid quantity. Try again! "
      GOSUB 90000; GOTO 10600
   END
   MAST.BOOK.QTY = S$VALUE
10699* 
   RETURN
* 
*--- QUOTED $ AMOUNT 
* 
10700* 
   MAST.EST.COST = 0
   MAST.EST.SALE = 0
   IF MAST.BOOK.COMP # "" THEN
      DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
      FOR DC = 1 TO DC.CNT
         IF FIELD(EST.DEPT.COMP<1,DC>,"!",3) = MAST.BOOK.QTY THEN
            IF MAST.BOOK.COMP = "ALL" OR FIELD(EST.DEPT.COMP<1,DC>,"!",2) = MAST.BOOK.COMP THEN
               MAST.EST.COST = MAST.EST.COST + EST.DEPT.COMP.COST<1,DC>
               MAST.EST.SALE = MAST.EST.SALE + EST.DEPT.COMP.TSALE<1,DC>
            END
         END
      NEXT DC
   END
   SCREEN FIELD;BOOK.MAINT;48
   IF MAST.QUOTED.AMT # "" THEN
      S$DEFAULT = MAST.QUOTED.AMT
   END ELSE
      S$DEFAULT = MAST.EST.SALE
   END
   S$O.R = "O"
   SCREEN INPUT;BOOK.MAINT;48;RETURN
   MAST.QUOTED.AMT = S$VALUE
   RETURN
* 
*--- PRICE PER THOUSAND 
* 
10800* 
   SCREEN FIELD;BOOK.MAINT;16
   IF MAST.BOOK.QTY + 0 # 0 AND MAST.QUOTED.AMT + 0 # 0 AND MAST.PRICE.THOU = "" THEN
      S$DEFAULT = INT((MAST.QUOTED.AMT / MAST.BOOK.QTY) * 1000)
   END
   SCREEN INPUT;BOOK.MAINT;16;RETURN
   MAST.PRICE.THOU = S$VALUE
   RETURN
* 
*--- SALES CODE 
* 
10900* 
   SCREEN FIELD;BOOK.MAINT;26
   SCREEN INPUT;BOOK.MAINT;26;RETURN
   IF S$VALUE="" THEN
      MAT SLC.REC=""
   END ELSE
      MATREAD SLC.REC FROM SALES.CODE,CONO:S$VALUE ELSE
         ERRMSG="Invalid sales code. Try again! "
         GOSUB 90000
         GOTO 10900
      END
   END
   MAST.SALES.CODE=S$VALUE
   RETURN
* 
*--- ESTIMATE TYPE & DESCRIPTION 
* 
11000* 
   SCREEN FIELD;BOOK.MAINT;20
   SCREEN INPUT;BOOK.MAINT;20;RETURN
   IF S$VALUE # "END" THEN MAST.TYPE=S$VALUE
   GOSUB 60000
   S$DATA(21)<S$SCR>=TYPE.DESC
   SCREEN DISPLAY;BOOK.MAINT;21
   RETURN
* 
*--- CATEGORY & DESCRIPTION 
* 
11100* 
   SCREEN FIELD;BOOK.MAINT;23
   SCREEN INPUT;BOOK.MAINT;23;RETURN
   IF S$VALUE="" THEN
      MAT JCATG.REC=""
   END ELSE
      MATREAD JCATG.REC FROM JOB.CATEGORY,CONO:S$VALUE ELSE
         ERRMSG="Invalid job category. Try again! "
         GOSUB 90000
         GOTO 11100
      END
   END
   MAST.CATG=S$VALUE
   S$DATA(24)<S$SCR>=JCATG.DESC
   SCREEN DISPLAY;BOOK.MAINT;24
   RETURN
* 
*--- SHIP VIA 
* 
11200* 
   SCREEN FIELD;BOOK.MAINT;44
   SCREEN INPUT;BOOK.MAINT;44;RETURN
   MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:S$VALUE ELSE
      ERRMSG="Invalid ship via code. Try again! "
      GOSUB 90000
      GOTO 11200
   END
   MAST.SHPV=S$VALUE
   S$DATA(12)<S$SCR>=SHPV.DESC
   SCREEN DISPLAY;BOOK.MAINT;12
   RETURN
* 
*--- CUSTOMER PO NUMBER 
* 
11300* 
   SCREEN FIELD;BOOK.MAINT;45
   SCREEN INPUT;BOOK.MAINT;45;RETURN
   MAST.CUST.PO=S$VALUE
   RETURN
* 
*--- CUSTOMER AUTH 
* 
11400* 
   S$DATA(46)<S$SCR>=""
   SCREEN DISPLAY;BOOK.MAINT;46
   CUR.JOB.BAL = 0
   CNT.JOB = COUNT(CUST.JOB,VM) + (CUST.JOB # "")
   FOR J = 1 TO CNT.JOB
      IF CUST.JOB<1,J> # MAST.BOOK.JOB THEN CUR.JOB.BAL = CUR.JOB.BAL + CUST.JOB.BAL<1,J>
   NEXT J
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         ERRMSG = "There is no credit for this customer"
         GOSUB 90000; S$VALUE = "END"; GOTO 11499
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - MAST.QUOTED.AMT
         IF AVAIL < 0 THEN
            ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG = ERRMSG : " & JOB = ":OCONV(CUR.JOB.BAL+MAST.QUOTED.AMT,"MD2,$<")
            ERRMSG = ERRMSG : " & TOTAL BAL = ":OCONV(AVAIL,"MD2,$<")
         END ELSE
            MAST.CREDIT = ""
            GOTO 11499
         END
      CASE CUST.CREDIT = "CASH"
         AVAIL = CUST.AR.BAL + CUR.JOB.BAL + MAST.QUOTED.AMT
         IF AVAIL > 0 THEN
            ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG = ERRMSG : " & JOB = ":OCONV(CUR.JOB.BAL+MAST.QUOTED.AMT,"MD2,$<")
            ERRMSG = ERRMSG : " & TOTAL BAL = ":OCONV(AVAIL,"MD2,$<")
         END ELSE
            MAST.CREDIT = ""
            GOTO 11499
         END
      CASE 1
         ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG = ERRMSG : " & JOB = ":OCONV(CUR.JOB.BAL+MAST.QUOTED.AMT,"MD2,$<")
         ERRMSG = ERRMSG : " & TOTAL BAL = ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+MAST.QUOTED.AMT,"MD2,$<")
   END CASE
   GOSUB 90000
   SCREEN FIELD;BOOK.MAINT;46
   S$MAXL = 3
   S$DATA(46)<S$SCR> = FIELD(MAST.CREDIT,"!",1)
   SCREEN INPUT;BOOK.MAINT;46;RETURN
   MAST.CREDIT = S$VALUE : "!" : OPER.ID
   S$DATA(46)<S$SCR> = MAST.CREDIT
   SCREEN DISPLAY;BOOK.MAINT;46
11499* 
   RETURN
* 
*--- PRIOR JOB 
* 
11500* 
   SCREEN FIELD;BOOK.MAINT;11
   SCREEN INPUT;BOOK.MAINT;11;RETURN
   MAST.PRIOR.JOB = S$VALUE
   RETURN
* 
*--- COLORS
* 
11600* 
   SCREEN FIELD;BOOK.MAINT;40
   SCREEN INPUT;BOOK.MAINT;40;RETURN
   MAST.COLORS = S$VALUE
   RETURN
* 
*--- DUMMY 
* 
19990* 
   RETURN
* 
*--- GET OPERATOR REPLY 
* 
50000* 
   SCREEN FIELD;BOOK.MAINT;36
   SCREEN INPUT;BOOK.MAINT;36
   REQUEST=S$VALUE
   BEGIN CASE
      CASE REQUEST="E" OR REQUEST="END" OR REQUEST = "F"
         RETURN
      CASE REQUEST="D"
         ACTION = REQUEST
         CALL BOOK.MAINT.DESC(ACTION,DESC.FLAG,LINE.COUNT,REF.NO,CURR.REF.NO,MAT MAST.REC)
      CASE REQUEST="C"
         ACTION = REQUEST
         CALL BOOK.MAINT.DESC(ACTION,DESC.FLAG,LINE.COUNT,REF.NO,CURR.REF.NO,MAT MAST.REC)
      CASE REQUEST # "" AND NUM(REQUEST)
         FLD=REQUEST
         BEGIN CASE
            CASE FLD <= 10 AND MAST.JOB.FLAG = "Y"
               ON FLD GOSUB 10100,19990,10300,10400,10500,10600,10700,10800,10900,11000
            CASE FLD <= 10
               ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10900,11000
            CASE FLD <= 16
               ON FLD-10 GOSUB 11100,11200,11300,11400,11500,11600
         END CASE
   END CASE
   GOTO 50000
   RETURN
* 
*--- GET EST.TYPE DESCRIPTION 
* 
60000* 
   BEGIN CASE
      CASE MAST.TYPE="R"
         TYPE.DESC="REGULAR"
      CASE MAST.TYPE="C"
         TYPE.DESC="CUSTOMER CHANGE ORDER"
      CASE MAST.TYPE="S"
         TYPE.DESC="SPOILAGE"
      CASE MAST.TYPE="N"
         TYPE.DESC="NON-CHARGEABLE"
      CASE 1
         TYPE.DESC=UNKNOWN
   END CASE
   RETURN
* 
*--- LOAD SCREEN VALUES 
* 
80000* 
   GOSUB 60000
   READ DESC FROM ESTIMATOR,CONO:MAST.ESTIMATOR ELSE DESC=UNKNOWN
   MATREAD SALESMAN.REC FROM SALESMAN,CONO:MAST.SLSMN ELSE SALS.NAME=UNKNOWN
   MATREAD DIV.REC FROM DIVISION,CONO:MAST.DIV ELSE DIV.DESC=UNKNOWN
   IF MAST.CATG="" THEN
      MAT JCATG.REC=""
   END ELSE
      MATREAD JCATG.REC FROM JOB.CATEGORY,CONO:MAST.CATG ELSE JCATG.DESC=UNKNOWN
   END
   MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:MAST.SHPV ELSE SHPV.DESC = UNKNOWN
* 
*--- TOP PART OF THE SCREEN 
* 
   S$DATA(1)<S$SCR>=EST.KEY
   S$DATA(2)<S$SCR>=EST.STATUS<1,1>
   S$DATA(5)<S$SCR>=MAST.BOOK.JOB
   S$DATA(9)<S$SCR>=MAST.EST
   S$DATA(8)<S$SCR>=MAST.STATUS
   S$DATA(10)<S$SCR> = MAST.JOB
   S$DATA(30)<S$SCR> = MAST.BOOK.COMP
   S$DATA(31)<S$SCR> = EST.COMPONENT.CNT
* 
*--- BOTTOM PART OF THE SCREEN 
* 
   S$DATA(3)<S$SCR>=MAST.ESTIMATOR
   S$DATA(4)<S$SCR>=DESC
   S$DATA(19)<S$SCR>=MAST.ENTER.DATE
   S$DATA(6)<S$SCR>=MAST.CUST
   S$DATA(7)<S$SCR>=CUST.NAME
   S$DATA(22)<S$SCR>=MAST.DUE.DATE
   S$DATA(14)<S$SCR>=MAST.SLSMN
   S$DATA(15)<S$SCR>=SALS.NAME
   S$DATA(25)<S$SCR>=MAST.MARKUP
   S$DATA(17)<S$SCR>=MAST.DIV
   S$DATA(18)<S$SCR>=DIV.DESC
   S$DATA(13)<S$SCR>=MAST.BOOK.QTY
   S$DATA(20)<S$SCR>=MAST.TYPE
   S$DATA(21)<S$SCR>=TYPE.DESC
   S$DATA(48)<S$SCR>=""
   S$DATA(23)<S$SCR>=MAST.CATG
   S$DATA(24)<S$SCR>=JCATG.DESC
   S$DATA(16)<S$SCR>=MAST.PRICE.THOU
   S$DATA(26)<S$SCR>=MAST.SALES.CODE
   S$DATA(44)<S$SCR>=MAST.SHPV
   S$DATA(12)<S$SCR>=SHPV.DESC
   S$DATA(45)<S$SCR>=MAST.CUST.PO
   S$DATA(42)<S$SCR>=MAST.EST.SUBS
   S$DATA(47)<S$SCR>=MAST.JOB.SUBS
   S$DATA(41)<S$SCR>=EST.QTY
   S$DATA(46)<S$SCR>=MAST.CREDIT
   S$DATA(11)<S$SCR>=MAST.PRIOR.JOB
   S$DATA(40)<S$SCR>=MAST.COLORS
   IF MAST.DESC = "" AND MAST.COMMENTS # "" THEN
      S$DATA(27)<S$SCR>="Internal Comments"
      S$DATA(29)<S$SCR>=MAST.COMMENTS
      DESC.FLAG = "C"
   END ELSE
      S$DATA(27)<S$SCR>= "   Description"
      S$DATA(29)<S$SCR>=MAST.DESC
      DESC.FLAG = "D"
   END
80100* 
   SCREEN DISPLAY;BOOK.MAINT;ALL
   RETURN
* 
*--- SCROLL INTERNAL COMMENTS 
* 
81000* 
   START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO=CURR.REF.NO THEN RETURN
   CURR.REF.NO=START.REF.NO
   S$VAL=START.REF.NO
   S$CNT=COUNT(S$DATA(29)<S$SCR>,VM)+(S$DATA(29)<S$SCR> # "")
   SCREEN MULTI;BOOK.MAINT;C;28;29
   RETURN
* 
*--- SCROLL SUB ESTIMATES FOR MASTER ESTIMATE 
* 
82000* 
   START.REF = 1 + INT((EREF-1)/3)*3
   IF START.REF = EC.REF.NO THEN RETURN
   EC.REF.NO=START.REF
   S$VAL=START.REF
   S$CNT=ECNT
   SCREEN MULTI;BOOK.MAINT;S;42
   RETURN
* 
*--- SCROLL SUB JOBS FOR MASTER JOB 
* 
83000* 
   START.REF = 1 + INT((JREF-1)/3)*3
   IF START.REF = JC.REF.NO THEN RETURN
   JC.REF.NO=START.REF
   S$VAL=START.REF
   S$CNT=JCNT
   SCREEN MULTI;BOOK.MAINT;S;47
   RETURN
* 
*--- SCROLL QUANTITIES FOR ESTIMATE 
* 
84000* 
   START.REF = 1 + INT((QREF-1)/3)*3
   IF START.REF = QC.REF.NO THEN RETURN
   QC.REF.NO=START.REF
   S$VAL=START.REF
   S$CNT=QCNT
   SCREEN MULTI;BOOK.MAINT;C;41
   RETURN
* 
*--- ERROR ROUTINE 
* 
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000* 
*  PRINT @(0,23):CL:ERRMSG:
*  INPUT REPLY:
*  PRINT @(0,23):CL:
* RETURN
* 
*--- END OF PROGRAM 
* 
99999* 
*  PRINT @(-1):
END 
