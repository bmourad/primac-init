   SUBROUTINE EST.RES.PROD.SUB1(CONO,ACTION,EST.KEY,COMP,STATUS)
*********************************************************************
*
* REVISION - [10.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RES.PROD.SUB1
*
* AUTHOR   - GRAHAM JARVIS, PACRIM SOFTWARE PTY LTD
*
* DATE     - AUG 1994
*
* DESCRIPTION
*
* This subroutine allows input and maintenance of the 1st product
* definition screen in roll label estimating.
*
*T21556 doug 02/04/1997 * Corrections to formula Q869
*T21569 doug 02/05/1997 * Add edit to compare cost centers in die and
*                         press details.
*T21704 rick 04/08/1997 * DISPLAY PROBLEM WITH COPY DIR BACK FIELD
*T22078 gat 07/21/1997 * FIX INQUIRY PROBLEM
*T22172 gat 08/26/1997 * FIX LINEAL FOOTAGE CALCULATION
*T22537 stefanie 01/26/1998 * Across field should not allow zero input.
*T23976 cm 05/21/1999 * Fix Paper Group X-Ref Display Problem
*T24120 diane 07/09/1999 * Fix screen clear data
*T24205 cm 07/28/1999 * Product Desc does not clear when stock is deleted
*T24210 cm 08/12/1999 * When entering a die, compare the die shape in
*                       the die file with the die shape entered in field
*                       4 and if they do not match disallow with an
*                       error message.
*T24213 cm 07/12/1999 * Die Cylinder to come from Die Maintenance screen
*                       instead of calculating and other changes
*T24499 cm 11/27/1999 * Change how par and print cylinder fields are
*                       changed/calculated.
*T25442 lanny 09/28/2000 * Fix divide by zero error.
*                        * Also CCTR XREF.
*T25442 lanny 10/03/2000 * Prompt line fouled in GUI due to use of PMSG.
*T25740 epitka 11/30/2001 * REV12
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T26474 cmykleb 03/06/2002 * When re-accessing the die line and using the
*                            die x-ref and if no die is chosen in the
*                            x-ref the previously selected die is not
*                            being retained.
*T26509 lross 03/26/2002 * If chg INV ID need to use new price table.
*T26583 lross 05/07/2002 * Paper prices get fixed on 1st pass thru
*                          pricing loop.
*T26704 cmykleb 06/28/2002 * Move rev11 corrections (T26668 and T26697)
*                            to rev12.
*T26892 thompson 10/01/2002 * ADD CHANGES FROM REV11
*T26806 thompson 07/05/2002 * CHANGES TO MGAP AND ADD LABEL REPEAT.
*T26774 lross 07/30/2002 * Reinstate storing EST.PROD.COAT from matl file.
*T26869 lross 09/19/2002 * Allows non-roll INVENTORY item entry.
*T26892 thompson 10/01/2002 * Change prompt sequence and add die calc.
*T26902 thompson 10/07/2002 * CHANGE CALC ON PRINT AROUND
*********************************************************************
*
*--- Cpylib Statements
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.RES.PRESS.SPOIL
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>CATEGORY ;*T26869
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JES.CPYLIB>ESTIMATE.RES.DIE
*COPY>JES.CPYLIB>ESTIMATE.RES.CYLINDER
*COPY>JES.CPYLIB>ESTIMATE.RES.GEARSET
*
   IF FILEINFO(WAREHOUSE,0)=0 THEN        
      OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
         ERRMSG='WAREHOUSE FILE IS MISSING' 
         GOSUB 93000                        
      END                                  
   END                                    
*
*--- Open Files & Initialise Variables
*
   STATUS = ""
   RF.TYPE='F'
   PRICE.FLAG='X'
   CCTRID=''
   SIZES.CHANGED=0
   EST.PROD.DESC<1>='Component 1'
   OPEN "XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "CANNOT OPEN XREF.DATA"
      GOSUB 90000
      GOTO 99999
   END
*T25236 v
   OPEN "PREFIX" TO PREFIX ELSE
      ERRMSG = "CANNOT OPEN PREFIX"
      GOSUB 90000
      GOTO 99999
   END
   OPEN 'JES.SCREENS' TO JES.SCREENS ELSE STOP ; * T26892
*T25236 ^
   OPEN "ESTIMATE.RES.DIE.XREF" TO ESTIMATE.RES.DIE.XREF ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES.DIE.XREF"
      GOSUB 90000
      GOTO 99999
   END
   OPEN "ESTIMATE.RES.SHAPE" TO ESTIMATE.RES.SHAPE ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES.SHAPE"
      GOSUB 90000
      GOTO 99999
   END
   READ EST.RES.PRESS.DEPT FROM CONTROL,CONO:'EST.RES.PRESS.DEPT' ELSE
      EST.RES.PRESS.DEPT=''
   END
   READV RES.CCTRS FROM DEPARTMENT,CONO:EST.RES.PRESS.DEPT,5 ELSE
      RES.CCTRS=''
   END
*T26869 v
   OPEN "CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CANNOT OPEN CATEGORY"
      GOSUB 90000
      GOTO 99999
   END
*T26869 ^
*
*--- Initialization
*
   SCREEN DEFINE;EST.RES.PROD.SUB1;JES.SCREENS 
   SCREEN FORMAT
   SCREEN COUNT;;16
   CCTR.LINE.COUNT = S$LCNT
   CCTR.LINE.SPACE = S$LSPC
   SCREEN COUNT;;35
   DIE.LINE.COUNT = S$LCNT
   DIE.LINE.SPACE = S$LSPC
   SCREEN COUNT;;28
   PROD.LINE.COUNT = S$LCNT
   PROD.LINE.SPACE = S$LSPC
   SCREEN COUNT;;1
   QTY.LINE.COUNT = S$LCNT
   REF.NO = 1
   CCTR.OPT = ""; CCTR.REF.NO = 1
   DIE.OPT = ""; DIE.REF.NO = 1
   PROD.OPT = ""; PROD.REF.NO = 1
   MAT GEN.XREF.REC = ""
   GXR.CO = CONO
   MAINT.FLAG = ""
   PRINT.REPEAT = "" ; * T26704
   PRICE.FLAG = CO.JES.PARAM<1,11>
   IF PRICE.FLAG = "" THEN PRICE.FLAG = "X"
   TEMP.NO.ACROSS=1
   TEMP.NO.AROUND=1
   TEMP.CYLINDER=''
   TEMP.REPEAT=0
   TEMP.DG.XREF=''
   TEMP.DIE.EM='' ; * T24213
   TEMP.PG.XREF=''
   TEMP.PRINTUP=0
   TYP = 0; CALL EDIT.SUB1 (MAT EDIT.COM)
*
*--- Main Processing
*
100*
   SCREEN CLEAR
110*
*  S$DATA(1)<S$SCR>=DATE()
*  SCREEN DISPLAY;;1
   IF EST.RL.JOB.TYPE<1,COMP,1> # "" THEN
      GOSUB 80000
      GOTO 7000
   END
*
*--- Job Type
*
1000*
   SCREEN FIELD;;3
   S$O.R = "O"
   S$DEFAULT = "N"
   SCREEN INPUT;;3
   BEGIN CASE
      CASE S$VALUE = "END" AND MAINT.FLAG = "X"
         GOTO 7000
      CASE S$VALUE = "END"
         RETURN
      CASE 1
         EST.RL.JOB.TYPE<1,COMP,1> = S$VALUE
         IF EST.RL.JOB.TYPE<1,COMP,1> = "N" THEN
            EST.RL.PREV.EST<1,COMP,1> = ""
            S$DATA(7)<S$SCR>=""
            SCREEN DISPLAY;;7
         END
         IF EST.RL.JOB.TYPE<1,COMP,1> # "RC" THEN
            EST.RL.TYPE.CHG<1,COMP,1> = ""
            S$DATA(4)<S$SCR>=""
            SCREEN DISPLAY;;4
         END
         IF EST.RL.JOB.TYPE<1,COMP,1> = "N" THEN GOTO 1299
   END CASE
   IF MAINT.FLAG = "X" THEN GOTO 7000
*
*--- Previous Estimate
*
1100*
   IF EST.RL.JOB.TYPE<1,COMP,1> = "N" AND MAINT.FLAG = "X" THEN
      ERRMSG = "INVALID JOB TYPE FOR ACCESS TO 'Prev Estimate'"
      GOSUB 90000
   END ELSE
      SCREEN FIELD;;7
      S$O.R = "O"
      SCREEN INPUT;;7;GOTO 7000
      EST.RL.PREV.EST<1,COMP,1> = S$VALUE
      IF EST.RL.JOB.TYPE<1,COMP,1> # "RC" THEN GOTO 1299
   END
   IF MAINT.FLAG = "X" THEN GOTO 7000
*
*--- Type of Change
*
1200*
   IF EST.RL.JOB.TYPE<1,COMP,1> # "RC" AND MAINT.FLAG = "X" THEN
      ERRMSG = "INVALID JOB TYPE FOR ACCESS TO 'Type of Change'"
      GOSUB 90000
   END ELSE
      SCREEN FIELD;;4
      SCREEN INPUT;;4;GOTO 7000
      EST.RL.TYPE.CHG<1,COMP,1> = S$VALUE
   END
1299*
   IF MAINT.FLAG = "X" THEN GOTO 7000
*
*--- Dimension Across
*
1300*
   SAVE.DIM.AC=EST.RL.DIM.AC<1,COMP,1>
   SAVE.DIM.AR=EST.RL.DIM.AR<1,COMP,1>
   SAVE.GAP=EST.RL.GAP<1,COMP,1>
   SAVE.SET1=EST.RL.SETS<1,COMP,1>
   SAVE.SET2=EST.RL.SETS<1,COMP,2>
   SCREEN FIELD;;9
   SCREEN INPUT;;9;GOTO 7000
   EST.RL.DIM.AC<1,COMP,1> = S$VALUE
*
*--- Dimension Around
*
1400*
   SCREEN FIELD;;8
   SCREEN INPUT;;8;GOTO 1300
   EST.RL.DIM.AR<1,COMP,1> = S$VALUE
*
*--- Set Ratio
*
   SCREEN FIELD;;39
   SCREEN INPUT;;39;GOTO 1300
   EST.RL.SETS<1,COMP,1> = S$VALUE
*
   SCREEN FIELD;;40
   SCREEN INPUT;;40;GOTO 1300
   EST.RL.SETS<1,COMP,2> = S$VALUE
*
*--- Gap between Labels on Repeat
*
1450*
   SCREEN FIELD;;54
   SCREEN INPUT;;54;GOTO 1300
   BEGIN CASE
*  CASE S$VALUE < EQP.RL.DRAW.GAP.MIN
*     ERRMSG='Gap is Less Than Equipment Minimum ( ':OCONV(EQP.RL.DRAW.GAP.MIN,'MD4'):' ) ... Ok to Use Y/N '
*     GOSUB 90000
*     IF REPLY#'Y' THEN GO 1450
      CASE S$VALUE < 0
         GOTO 1450
   END CASE
   EST.RL.GAP<1,COMP,1>=S$VALUE
* T26892
   EST.RL.LBL.REPEAT = EST.RL.GAP<1,COMP,1> + EST.RL.DIM.AR<1,COMP,1>
   S$DATA(8)<S$SCR,2> = EST.RL.LBL.REPEAT
   S$VAL= 2
   SCREEN DISPLAY;;8
*
* Label Repeat
   S$VAL = 2
   SCREEN FIELD;;8
   SCREEN INPUT;;8;GOTO 1300
   EST.RL.LBL.REPEAT = S$VALUE
   EST.RL.GAP<1,COMP,1> = EST.RL.LBL.REPEAT - EST.RL.DIM.AR<1,COMP,1>
   S$DATA(54)<S$SCR> = EST.RL.GAP<1,COMP,1>
   SCREEN DISPLAY;;54
* T26892
*
*--- Shape Of Die
*
1460*
   SCREEN FIELD;;58
   SCREEN INPUT;;58;GOTO 1300
   IF S$VALUE = "???" THEN
*         XTYPE="ESTIMATE.RES.SHAPE";XFILE=ESTIMATE.RES.SHAPE;XFLD=1
*         CALL GEN.CODE.XREF (CONO,XTYPE,XFILE,XFLD,XCODE)
*         S$VALUE=XCODE
      GXR.FILE=ESTIMATE.RES.SHAPE
      GXR.SORT.FILE = "ESTIMATE.RES.SHAPE"
      GXR.NAME = 'GEN.CODE1'
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      S$VALUE = GXR.ID
      SCREEN FORMAT
      GOSUB 80000
      S$DATA(58)<S$SCR> = S$VALUE
      SCREEN DISPLAY;;58
      IF S$VALUE='' THEN GOTO 1460
   END
   READ DESC FROM ESTIMATE.RES.SHAPE, CONO:S$VALUE ELSE
      ERRMSG = "Invalid die shape"; GOSUB 90000
      GOTO 1460
   END
   EST.RL.DIE.SHAPE<1,COMP,1>=S$VALUE
   S$DATA(59)<S$SCR>=DESC
   SCREEN DISPLAY;;59
*
*--- Check if any Changes Have Been Made to Sizes
*
   SIZES.CHANGED=0
   IF MAINT.FLAG = 'X' THEN
      BEGIN CASE
         CASE SAVE.DIM.AC # EST.RL.DIM.AC<1,COMP,1>
            SIZES.CHANGED=1
            GOTO 51000
         CASE SAVE.DIM.AR # EST.RL.DIM.AR<1,COMP,1>
            SIZES.CHANGED=1
            GOTO 51000
         CASE SAVE.SET1 # EST.RL.SETS<1,COMP,1>
            SIZES.CHANGED=1
            GOTO 51000
         CASE SAVE.SET2 # EST.RL.SETS<1,COMP,2>
            SIZES.CHANGED=1
            GOTO 51000
         CASE SAVE.GAP # EST.RL.GAP<1,COMP,1>
            SIZES.CHANGED=1
            GOTO 51000
         CASE 1
            GOTO 7000
      END CASE
   END
*
*--- Copy Direction
*
1500*
   SCREEN FIELD;;30
   SCREEN INPUT;;30;GOTO 7000
   EST.RL.CPY.DIR<1,COMP,1> = S$VALUE
   SCREEN FIELD;;53
   SCREEN INPUT;;53;GOTO 1500
   EST.RL.CPY.DIR<1,COMP,2> = S$VALUE
   IF MAINT.FLAG = "X" THEN
      GOTO 7000
   END ELSE
      GOTO 50000
   END
*
*--- Press Details
*
2100*
   S$VAL = REF.NO
   SCREEN DISPLAY;;16
   S$VAL=REF.NO
   SCREEN FIELD;;5
   SCREEN INPUT;;5;RETURN
2110*
   IF S$VALUE = "???" THEN
      MAT GEN.XREF.REC=''
      GXR.CO = CONO
      GXR.NAME='RES.PRESS.XREF'
      GXR.FILE = EQUIPMENT
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      S$VALUE=GXR.ID
      SCREEN FORMAT
      GOSUB 80000
      S$VAL=REF.NO
      S$DATA(5)<S$SCR,REF.NO> = S$VALUE
      SCREEN DISPLAY;;5
      IF S$VALUE='' THEN GOTO 2100
   END
   S$VAL=REF.NO
   EST.RL.PRESS.CCTR<1,COMP,REF.NO> = S$VALUE
   EST.PROD.PRESS.ID<1,COMP,REF.NO> = S$VALUE
   MATREAD CCTR.REC FROM COST.CNTR,CONO:S$VALUE ELSE
      ERRMSG = "Invalid Cost Center"
      GOSUB 90000
      GOTO 2100
   END
   MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:S$VALUE ELSE
      MAT EQUIPMENT.REC = ""
   END
   IF EQP.TYPE # 40 THEN
      ERRMSG = "Must be a Roll Label press "
      GOSUB 90000
      GOTO 2100
   END
   IF EST.RL.GAP<1,COMP,1> < EQP.RL.DRAW.GAP.MIN THEN
      PMSG='Gap is Less Than Equipment Minimum ( ':OCONV(EQP.RL.DRAW.GAP.MIN,'MD4'):' ) ... Ok to Use Y/N '
      X=0;Y=22;TYP=18;O.R='R'
      CALL EDIT.SUB1 (MAT EDIT.COM)
      IF VALUE#'Y' THEN GO 2100
   END
   S$DATA(6)<S$SCR,REF.NO> = CCTR.DESC
   SCREEN DISPLAY;;6
*
*--- Colours Front
*
   S$VAL=REF.NO
   SCREEN FIELD;;2
   SCREEN INPUT;;2;GOTO 2100
   EST.PROD.COLORS.1<1,COMP,REF.NO> = S$VALUE
*
*--- Colours Back Print
*
   S$VAL=REF.NO
   SCREEN FIELD;;10
   SCREEN INPUT;;10;GOTO 2100
   EST.RL.BACKPRINT<1,COMP,REF.NO> = S$VALUE
   EST.PROD.COLORS.2<1,COMP,REF.NO>=S$VALUE
*
*--- Colours on Adhesive Print
*
   S$VAL=REF.NO
   SCREEN FIELD;;11
   SCREEN INPUT;;11;GOTO 2100
   EST.RL.ADHESIVE<1,COMP,REF.NO> = S$VALUE
*
*--- Varnish Flag (S)pot, (F)ull
*
   S$VAL=REF.NO
   SCREEN FIELD;;12
   SCREEN INPUT;;12;GOTO 2100
   EST.RL.FULL.SPOT<1,COMP,REF.NO>=S$VALUE
*
*--- Foil Stamper
*
   S$VAL=REF.NO
   SCREEN FIELD;;13
   SCREEN INPUT;;13;GOTO 2100
   EST.RL.FOIL<1,COMP,REF.NO>=S$VALUE
*
*--- Speed Slug (ie Use Foiling Speeds Regardless
*
   S$VAL=REF.NO
   SCREEN FIELD;;55
   SCREEN INPUT;;55;GOTO 2100
   EST.RL.FOIL.SPEED<1,COMP,REF.NO>=S$VALUE
*
*--- Silkscreen Colours
*
   S$VAL=REF.NO
   SCREEN FIELD;;14
   SCREEN INPUT;;14;GOTO 2100
   EST.RL.SSCREEN<1,COMP,REF.NO>=S$VALUE
*
*--- Colours Gravure
*
   S$VAL=REF.NO
   SCREEN FIELD;;15
   SCREEN INPUT;;15;GOTO 2100
   EST.RL.GRAVURE<1,COMP,REF.NO>=S$VALUE
*
*--- Embossed Y/N
*
   S$VAL=REF.NO
   SCREEN FIELD;;17
   SCREEN INPUT;;17;GOTO 2100
   EST.RL.EMBOSS<1,COMP,REF.NO>=S$VALUE
*
*--- Over Laminate Y/N
*
   S$VAL=REF.NO
   SCREEN FIELD;;18
   SCREEN INPUT;;18;GOTO 2100
   EST.RL.OVERLAM<1,COMP,REF.NO>=S$VALUE
*
*--- No of Kinds or Varieties
*
   S$VAL=REF.NO
   SCREEN FIELD;;20
   SCREEN INPUT;;20;GOTO 2100
   EST.RL.KINDS<1,COMP,REF.NO>=S$VALUE
   IF S$VALUE=1 THEN
      EST.RL.PLATE.CHANGES<1,COMP,REF.NO>=0
      EST.RL.COLOR.CHANGES<1,COMP,REF.NO>=0
      S$DATA(33)<S$SCR,REF.NO>=0
      S$DATA(34)<S$SCR,REF.NO>=0
      S$VAL=REF.NO
      SCREEN DISPLAY;;33
      S$VAL=REF.NO
      SCREEN DISPLAY;;34
      GOTO 2300
   END
*
*--- No of Plate Changes
*
   S$VAL=REF.NO
   SCREEN FIELD;;33
   SCREEN INPUT;;33;GOTO 2100
   EST.RL.PLATE.CHANGES<1,COMP,REF.NO>=S$VALUE
*
*--- No of Colour Changes
*
   S$VAL=REF.NO
   SCREEN FIELD;;34
   SCREEN INPUT;;34;GOTO 2100
   EST.RL.COLOR.CHANGES<1,COMP,REF.NO>=S$VALUE
*
*--- No of Colour Mixes
*
2300*
   S$VAL=REF.NO
   SCREEN FIELD;;51
   SCREEN INPUT;;51;GOTO 2100
   EST.RL.COL.MIX<1,COMP,REF.NO>=S$VALUE
*
*--- Sprocket Punched Y/N
*
   S$VAL=REF.NO
   SCREEN FIELD;;50
   SCREEN INPUT;;50;GOTO 2100
   EST.RL.SPROCKET<1,COMP,REF.NO>=S$VALUE
   CALL EST.RES.PROD.SUB.MR(CONO,'A',EST.RL.PRESS.CCTR<1,COMP,REF.NO>,COMP,REF.NO)
   RETURN
*
*--- Clear Press Details
*
27000*
   EST.RL.PRESS.CCTR=DELETE(EST.RL.PRESS.CCTR,1,COMP,REF.NO)
   EST.PROD.COLORS.1=DELETE(EST.PROD.COLORS.1,1,COMP,REF.NO)
   EST.RL.BACKPRINT=DELETE(EST.RL.BACKPRINT,1,COMP,REF.NO)
   EST.RL.ADHESIVE=DELETE(EST.RL.ADHESIVE,1,COMP,REF.NO)
   EST.RL.FULL.SPOT=DELETE(EST.RL.FULL.SPOT,1,COMP,REF.NO)
   EST.RL.FOIL=DELETE(EST.RL.FOIL,1,COMP,REF.NO)
   EST.RL.FOIL.SPEED=DELETE(EST.RL.FOIL.SPEED,1,COMP,REF.NO)
   EST.RL.KINDS=DELETE(EST.RL.KINDS,1,COMP,REF.NO)
   EST.RL.PLATE.CHANGES=DELETE(EST.RL.PLATE.CHANGES,1,COMP,REF.NO)
   EST.RL.COLOR.CHANGES=DELETE(EST.RL.COLOR.CHANGES,1,COMP,REF.NO)
   EST.RL.SPROCKET=DELETE(EST.RL.SPROCKET,1,COMP,REF.NO)
   EST.RL.COL.MIX=DELETE(EST.RL.COL.MIX,1,COMP,REF.NO)
   EST.RL.SSCREEN=DELETE(EST.RL.SSCREEN,1,COMP,REF.NO)
   EST.RL.GRAVURE=DELETE(EST.RL.GRAVURE,1,COMP,REF.NO)
   EST.RL.EMBOSS=DELETE(EST.RL.EMBOSS,1,COMP,REF.NO)
   EST.RL.OVERLAM=DELETE(EST.RL.OVERLAM,1,COMP,REF.NO)
   S$DATA(5) = DELETE(S$DATA(5),S$SCR,REF.NO,0)
   S$DATA(6) = DELETE(S$DATA(6),S$SCR,REF.NO,0)
   S$DATA(2) = DELETE(S$DATA(2),S$SCR,REF.NO,0)
   S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF.NO,0)
   S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF.NO,0)
   S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
   S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF.NO,0)
   S$DATA(55) = DELETE(S$DATA(55),S$SCR,REF.NO,0)
   S$DATA(18) = DELETE(S$DATA(18),S$SCR,REF.NO,0)
   S$DATA(20) = DELETE(S$DATA(20),S$SCR,REF.NO,0)
   S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
   S$DATA(34) = DELETE(S$DATA(34),S$SCR,REF.NO,0)
   S$DATA(50) = DELETE(S$DATA(50),S$SCR,REF.NO,0)
   S$DATA(51) = DELETE(S$DATA(51),S$SCR,REF.NO,0)
   S$DATA(14) = DELETE(S$DATA(14),S$SCR,REF.NO,0)
   S$DATA(15) = DELETE(S$DATA(15),S$SCR,REF.NO,0)
   S$DATA(17) = DELETE(S$DATA(17),S$SCR,REF.NO,0)
   CALL EST.RES.PROD.SUB.MR(CONO,'D',EST.RL.PRESS.CCTR<1,COMP,REF.NO>,COMP,REF.NO)
   GOSUB 80100
   RETURN
*
*--- Remove  Die Details
*
27500 *
   EST.RL.DIE            = DELETE(EST.RL.DIE,1,COMP,REF.NO)
   EST.RL.DIE.REPEAT     = DELETE(EST.RL.DIE.REPEAT,1,COMP,REF.NO)
   EST.RL.DIE.NO.ACR     = DELETE(EST.RL.DIE.NO.ACR,1,COMP,REF.NO)
   EST.RL.DIE.NO.ARD     = DELETE(EST.RL.DIE.NO.ARD,1,COMP,REF.NO)
   EST.RL.DIE.CYL.ID     = DELETE(EST.RL.DIE.CYL.ID,1,COMP,REF.NO)
   EST.RL.DIE.PRESS.NO   = DELETE(EST.RL.DIE.PRESS.NO,1,COMP,REF.NO)
   EST.RL.DIETYPE        = DELETE(EST.RL.DIETYPE,1,COMP,REF.NO)
   EST.RL.PRINTGEARS     = DELETE(EST.RL.PRINTGEARS,1,COMP,REF.NO)
   EST.RL.PRINTAR        = DELETE(EST.RL.PRINTAR,1,COMP,REF.NO)
   EST.RL.BUTT        = DELETE(EST.RL.BUTT,1,COMP,REF.NO)
   S$DATA(23) = DELETE(S$DATA(23),S$SCR,REF.NO,0)
   S$DATA(24) = DELETE(S$DATA(24),S$SCR,REF.NO,0)
   S$DATA(38) = DELETE(S$DATA(38),S$SCR,REF.NO,0)
   S$DATA(25) = DELETE(S$DATA(25),S$SCR,REF.NO,0)
   S$DATA(26) = DELETE(S$DATA(26),S$SCR,REF.NO,0)
   S$DATA(27) = DELETE(S$DATA(27),S$SCR,REF.NO,0)
   S$DATA(36) = DELETE(S$DATA(36),S$SCR,REF.NO,0)
   S$DATA(37) = DELETE(S$DATA(37),S$SCR,REF.NO,0)
   S$DATA(52) = DELETE(S$DATA(52),S$SCR,REF.NO,0)
   S$DATA(32) = DELETE(S$DATA(32),S$SCR,REF.NO,0)
   IF EST.RL.DIE = "" THEN
      EST.RL.GAP.CALC = ""
      S$DATA(60)<S$SCR,1>=EST.RL.GAP.CALC<1,COMP,1>
      SCREEN DISPLAY;;60
   END
   GOSUB 81000
   RETURN
*
*--- Enter Die Details for Each Press
*
1700*
   S$DEFAULT = EST.RL.PRESS.CCTR<1,COMP,REF.NO>
   S$VAL = REF.NO
   SCREEN DISPLAY;;35
   S$VAL = REF.NO
   SCREEN FIELD;;52
   SCREEN INPUT;;52; RETURN
   IF S$VALUE # EST.RL.PRESS.CCTR<1,COMP,REF.NO> THEN
      ERRMSG = "DIE COST CENTER ":S$VALUE:" DOES NOT MATCH PRESS CCTR ":EST.RL.PRESS.CCTR<1,COMP, REF.NO>
      GOSUB 90000
      GOTO 1700
   END
   CCTRID=S$VALUE
   TEMP.PRESS.NO = CCTRID
   MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:CCTRID ELSE
      MAT EQUIPMENT.REC=''
   END
   IF EQP.TYPE # 40 THEN
      ERRMSG = "Must be a Roll Label press "
      GOSUB 90000
      GOTO 1700
   END
   S$DATA(52)<S$SCR,REF.NO>=S$VALUE
1705 ;* T26474
*
   S$VAL=REF.NO
   SCREEN FIELD;;23
   IF EST.RL.BUTT<1,COMP,REF.NO>='Y' THEN
      S$DEFAULT='B'
   END
   IF EST.RL.DIE<1,COMP,1>='' THEN
      S$DEFAULT='#'
   END
   SCREEN INPUT;;23;RETURN
   IF S$VALUE='' THEN
      S$VALUE='#'
      SCREEN DISPLAY;;23
   END
   IF S$VALUE='B' THEN
      S$VALUE='#'
      EST.RL.BUTT<1,COMP,REF.NO>='Y'
   END ELSE
      EST.RL.BUTT<1,COMP,REF.NO>=''
   END
   BEGIN CASE
      CASE S$VALUE='END' AND REF.NO=1 AND EST.RL.PRESS.CCTR<1,COMP,1>=''
         GOTO 1700
      CASE S$VALUE='END'
         RETURN
      CASE S$VALUE = "???"
         DIE.SELECT=''
         S$SCR=S$SCR+1
         CALL EST.RES.DIE.XREF(CONO,RF.TYPE,EST.RL.DIM.AC,EST.RL.DIM.AR,DIE.SELECT,EQP.RL.PRESS.GSFBED,EQP.RL.PRESS.GSROTARY,EST.RL.DIE.SHAPE)
         SCREEN CLOSE
         S$SCR=S$SCR-1
         S$VALUE = ""
         SCREEN FORMAT
         GOSUB 80000
         S$VAL = REF.NO
         IF DIE.SELECT = '' THEN GOTO 1705 ; * T26474
         S$DATA(23)<S$SCR,REF.NO> = DIE.SELECT
         SCREEN DISPLAY;;23
         S$DATA(52)<S$SCR,REF.NO>=CCTRID
         S$VAL=REF.NO
         SCREEN DISPLAY;;52
         IF DIE.SELECT='' THEN GOTO 1700
         TEMP.DIE=DIE.SELECT
      CASE 1
         TEMP.DIE = S$VALUE
   END CASE
   IF TEMP.DIE # "#" THEN
      MATREAD RLDIE.REC FROM ESTIMATE.RES.DIE,CONO:TEMP.DIE ELSE
         ERRMSG = "Not In Die File"; GOSUB 90000
         GOTO 1700
      END
      CCTRID=S$DATA(52)<S$SCR,REF.NO>
      MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:CCTRID ELSE
         MAT EQUIPMENT.REC=''
      END
      IF RLDIE.BLANK < EQP.RES.PRESS.DIE.BLANK OR RLDIE.BLANK > EQP.RES.PRESS.BLANK.MAX THEN
         ERRMSG = "Die will not fit on press ":CCTRID; GOSUB 90000
         GOTO 1700
      END
*T24210 v
      IF RLDIE.SHAPE # EST.RL.DIE.SHAPE THEN
         ERRMSG = 'Die shape ':RLDIE.SHAPE:' does not match Estimate shape ':EST.RL.DIE.SHAPE
         GOSUB 90000
         GOTO 1700
      END
*T24210 ^
*T24213 v
      IF RLDIE.RF='F' AND EQP.RL.PRESS.GSFBED # '' AND TEMP.DIE[1,2] # EQP.RL.PRESS.GSFBED THEN
         ERRMSG='Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSFBED:')'
         GOSUB 90000
         GOTO 1700
      END
      IF RLDIE.RF='R' AND EQP.RL.PRESS.GSROTARY # '' AND TEMP.DIE[1,2] # EQP.RL.PRESS.GSROTARY THEN
         ERRMSG='Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSROTARY:')'
         GOSUB 90000
         GOTO 1700
      END
*T24213 ^
*        TEMP.REPEAT=RLDIE.REPEAT
      TEMP.REPEAT=RLDIE.REPEAT * RLDIE.NO.AROUND
*T24213 ^
      READV CTR.TYPE FROM COST.CNTR,CONO:CCTRID,3 ELSE CTR.TYPE='W'
      TEMP.NO.ACROSS=RLDIE.NO.ACROSS
      TEMP.NO.AROUND=RLDIE.NO.AROUND
      TEMP.DIETYPE=RLDIE.RF
      TEMP.CYLINDER=RLDIE.CYLINDER
      TEMP.DIE.EM=RLDIE.DIE.TYPE ; * T24213
*
*--- Check Die Repeats & Cylinder
*
      IF TEMP.CYLINDER # '' THEN
         IF TEMP.DIETYPE='F' THEN
            CYL.TEETH=TEMP.REPEAT*RLDIE.NO.AROUND
            CYL.TEETH=INT((CYL.TEETH/1250))
*T24213        TEMP.CYLINDER=TEMP.CYLINDER[1,2]:CYL.TEETH
            TEMP.REPEAT=TEMP.REPEAT*RLDIE.NO.AROUND
            EST.RL.GAP<1,COMP,1>=RLDIE.SP.AROUND
            S$DATA(54)<S$SCR>=EST.RL.GAP<1,COMP,1>
            SCREEN DISPLAY;;54
         END
      END
      S$DATA(38)<S$SCR,REF.NO>=TEMP.DIETYPE
      S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
      S$DATA(25)<S$SCR,REF.NO>=TEMP.NO.ACROSS
      S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
      S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
*T26704 v
      SCREEN DISPLAY;;38
      SCREEN DISPLAY;;24
      SCREEN DISPLAY;;25
      SCREEN DISPLAY;;26
      SCREEN DISPLAY;;27
*T26704 ^
      IF TEMP.DIE # "#" AND REF.NO=1 THEN
         EST.RL.DIM.AC<1,COMP,1>=RLDIE.SZ.ACROSS
         EST.RL.DIM.AR<1,COMP,1>=RLDIE.SZ.AROUND
         S$DATA(9)<S$SCR,REF.NO>=RLDIE.SZ.ACROSS
         S$DATA(8)<S$SCR,REF.NO>=RLDIE.SZ.AROUND
         SCREEN DISPLAY;;9
         SCREEN DISPLAY;;8
      END
   END ELSE
      MAT RLDIE.REC = ""
      IF EST.RL.BUTT<1,COMP,REF.NO>='Y' THEN
         RLDIE.DESC='** Butt Cut **'
      END ELSE
         RLDIE.DESC="*** New Die Req'd ***"
      END
   END
   S$VAL=REF.NO
   S$DATA(32)<S$SCR,REF.NO>=RLDIE.DESC
   SCREEN DISPLAY;;32
*
*--- Enter Die Type If New Die
*
   S$VAL = REF.NO
   SAVE.DIETYPE=S$DATA(38)<S$SCR,REF.NO>
   IF TEMP.DIE = "#" THEN
      SCREEN FIELD;;38
      SCREEN INPUT;;38;RETURN
      TEMP.DIETYPE = S$VALUE
   END ELSE
      TEMP.DIETYPE=RLDIE.RF
      S$DATA(38)<S$SCR,REF.NO>=RLDIE.RF
      SCREEN DISPLAY;;38
   END
1751*
   GOSUB 2150
*
*--- Calculate Print Gears
*
1753*
   IF TEMP.DIE = "#" THEN
      GOTO 1760; * T26892
1754 *; * T26892
      IF S$DATA(24)<S$SCR,REF.NO>='' THEN
         S$DATA(24)<S$SCR,REF.NO>=EST.RL.DIM.AR<1,COMP,1> + EST.RL.GAP<1,COMP,1>
      END
      S$VAL = REF.NO
      SCREEN FIELD;;24
      SAVE.REPEAT=S$DATA(24)<S$SCR,REF.NO>
      SCREEN INPUT;;24;RETURN
      IF S$VALUE='???' THEN
         SET.S$VALUE=2
         GOSUB 2750
         IF S$VALUE # '' THEN
            S$DATA(24)<S$SCR,REF.NO>=S$VALUE
            S$DATA(27)<S$SCR,REF.NO>=TEMP.DIEGEAR
            S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
            S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
            S$DATA(37)<S$SCR,REF.NO>=TEMP.PRINTUP
            S$VAL = REF.NO
            SCREEN DISPLAY;;24
            S$VAL = REF.NO
            SCREEN DISPLAY;;27
            S$VAL = REF.NO
            SCREEN DISPLAY;;26
            S$VAL = REF.NO
            SCREEN DISPLAY;;36
            S$VAL = REF.NO
            SCREEN DISPLAY;;37
         END ELSE
            GO 1753
         END
      END
      IF SAVE.REPEAT#S$VALUE THEN
*T25442 v
         BEGIN CASE
            CASE DPITCH+0 = 0
               ERRMSG='Invalid Pitch Ratio'
               GOSUB 90000
               GOTO 1751
*           IF MOD(S$VALUE,DPITCH)#0 THEN
            CASE MOD(S$VALUE,DPITCH)#0
               ERRMSG='Invalid Pitch Ratio'
               GOSUB 90000
               GOTO 1751
*           END
         END CASE
*T25442 ^
*T24213     IF DPITCH+0 # 0 THEN
*T24213        TEMP.CYLINDER=DGEARSET:INT(S$VALUE/DPITCH)
*T24213     END ELSE
*T24213        TEMP.CYLINDER=DGEARSET:"0"
*T24213     END
         TEMP.NO.AROUND=INT(S$VALUE/LABEL.SIZE)
         S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
*T24213     S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
         S$VAL = REF.NO
         SCREEN DISPLAY;;26
         S$VAL = REF.NO
         SCREEN DISPLAY;;27
      END
      TEMP.REPEAT = S$VALUE
      S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
* T26892
* Re calc die if Temp die
      IF TEMP.DIE = "#" THEN
         READV PPITCH FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,2 ELSE
            PPITCH=1
         END
         IF PPITCH+0 # 0 THEN
            TEMP.CYLINDER=DGEARSET:INT(TEMP.REPEAT/PPITCH)
         END ELSE
            TEMP.CYLINDER=DGEARSET:"0"
         END
         S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
         SCREEN DISPLAY;;27
      END
      GOTO 1780
* T26892
1760*
      S$VAL = REF.NO
      SCREEN FIELD;;25
      S$DEFAULT=TEMP.NO.ACROSS
      SCREEN INPUT;;25;RETURN
      IF S$VALUE < 1 THEN GOTO 1760            ;* T22537 <
      TEMP.NO.ACROSS = S$VALUE
      S$DATA(25)<S$SCR,REF.NO>=TEMP.NO.ACROSS
1770*
      S$VAL = REF.NO
      SCREEN FIELD;;26
      S$DEFAULT=TEMP.NO.AROUND
      SCREEN INPUT;;26;RETURN
      TEMP.NO.AROUND = S$VALUE
      S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
* T26892
      TEMP.REPEAT = TEMP.NO.AROUND * EST.RL.LBL.REPEAT
      S$DATA(24)<S$SCR,REF.NO> = TEMP.REPEAT
      SCREEN DISPLAY;;24
      GOTO 1754
* T26892
   END
*
1780*
   S$VAL = REF.NO
   SAVE.DGEAR = S$DATA(27)<S$SCR,REF.NO>
   BEGIN CASE
      CASE TEMP.DIETYPE='F' AND EQP.RL.PRESS.GSFBED=''
         S$DATA(27)<S$SCR,REF.NO>=''
         TEMP.CYLINDER=''
         SCREEN DISPLAY;;27
      CASE TEMP.DIETYPE='R' AND EQP.RL.PRESS.GSROTARY=''
         S$DATA(27)<S$SCR,REF.NO>=''
         TEMP.CYLINDER=''
         SCREEN DISPLAY;;27
      CASE 1
         IF TEMP.DIE # '#' AND S$DATA(27)<S$SCR,REF.NO>='' THEN
            S$DATA(27)<S$SCR,REF.NO>=RLDIE.CYLINDER
            TEMP.CYLINDER=RLDIE.CYLINDER
         END
         SCREEN FIELD;;27
*T24213 v
         IF TEMP.DIE.EM = 'M' OR TEMP.DIE = '#' THEN
            S$VALUE = REF.NO
            SCREEN FIELD;;27
            S$DEFAULT=TEMP.CYLINDER
            SCREEN INPUT;;27;RETURN
            TEMP.CYLINDER = S$VALUE
            S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
         END
*T24213 ^
         IF S$VALUE='???' THEN
            S$VALUE = "" ; * T26704
            SET.S$VALUE=1
            GOSUB 2750
            IF S$VALUE # '' THEN
               TEMP.CYLINDER = S$VALUE ; * T26704
               S$DATA(27)<S$SCR,REF.NO>=S$VALUE
               S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
               S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
               S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
               S$DATA(37)<S$SCR,REF.NO>=TEMP.PRINTUP
               S$VAL = REF.NO
               SCREEN DISPLAY;;24
               S$VAL = REF.NO
               SCREEN DISPLAY;;27
               S$VAL = REF.NO
               SCREEN DISPLAY;;26
               S$VAL = REF.NO
               SCREEN DISPLAY;;36
               S$VAL = REF.NO
               SCREEN DISPLAY;;37
            END ELSE
               S$VALUE=''
            END
         END
         IF TEMP.DIE # '#' THEN ; * C35003
            BEGIN CASE
               CASE TEMP.DIETYPE='F' AND EQP.RL.PRESS.GSFBED#'' AND TEMP.DIE[1,2]# EQP.RL.PRESS.GSFBED
                  ERRMSG='Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSFBED:')'
                  GOSUB 90000
*T24213 v
*                    GOTO 1780
                  GOTO 1700
*T24213 ^
               CASE TEMP.DIETYPE='R' AND EQP.RL.PRESS.GSROTARY#'' AND TEMP.DIE[1,2]#EQP.RL.PRESS.GSROTARY
                  ERRMSG='Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSROTARY:')'
                  GOSUB 90000
*T24213 v
*                    GOTO 1780
                  GOTO 1700
*T24213 ^
            END CASE
         END ; * C35003
         NEW.CYL='N'
         MATREAD RLCYN.REC FROM ESTIMATE.RES.CYLINDER,CONO:TEMP.CYLINDER ELSE
            PMSG="Cylinder # ":TEMP.CYLINDER:" - Not on File - OK to Accept (Y/N)? "
            X=0;Y=22;TYP=18;O.R='R'
            CALL EDIT.SUB1 (MAT EDIT.COM)
            IF VALUE # "Y" THEN GOTO 1780
            NEW.CYL='Y'
            MAT RLCYN.REC = ""
         END
         IF NEW.CYL='N' AND SAVE.DGEAR # TEMP.CYLINDER THEN
*T24213        TEMP.REPEAT=RLCYN.REPEAT
            S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
            SCREEN DISPLAY;;24
         END
         IF NEW.CYL='Y' THEN
            MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:TEMP.CYLINDER[1,2]  ELSE
               MAT ESTGS.REC=''
            END
*T24213        RLCYN.REPEAT=ESTGS.PITCH * TEMP.DIE[3,3]
*T24213        TEMP.REPEAT=RLCYN.REPEAT
            S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
            SCREEN DISPLAY;;24
         END
         IF RLCYN.REPEAT#'' OR NEW.CYL='Y' THEN
*T24213        IF MOD(RLCYN.REPEAT,TEMP.REPEAT)#0 THEN
*T24213           ERRMSG='Invalid Cylinder for Repeat'
*T24213           GOSUB 90000
*T24213           GOTO 1753
*T24213        END
*T24213        TEMP.NO.AROUND=INT(RLCYN.REPEAT/(EST.RL.DIM.AR<1,COMP,1>+EST.RL.GAP<1,COMP,1>))
            S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
            SCREEN DISPLAY;;26
            GOSUB 2500
         END
*T24213     TEMP.CYLINDER = S$VALUE
*T24213     S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
   END CASE
   IF TEMP.DIE = "#" THEN GO 1796 ; * T26704
*
*--- Print Gear Details
*
1790*
   S$VAL = REF.NO
   IF EQP.RL.PRESS.GSPRINT# "" THEN
      IF TEMP.DIE = "#" THEN
         SCREEN FIELD;;36
         SCREEN INPUT;;36;RETURN
         IF S$VALUE='???' THEN
            SET.S$VALUE=4
            GOSUB 2750
            IF S$VALUE # '' THEN
               S$DATA(36)<S$SCR,REF.NO>=S$VALUE
               S$DATA(27)<S$SCR,REF.NO>=TEMP.DIEGEAR
               S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
               S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
               S$DATA(37)<S$SCR,REF.NO>=TEMP.PRINTUP
               S$VAL = REF.NO
               SCREEN DISPLAY;;24
               S$VAL = REF.NO
               SCREEN DISPLAY;;27
               S$VAL = REF.NO
               SCREEN DISPLAY;;26
               S$VAL = REF.NO
*T24499           SCREEN DISPLAY;;36
               S$VAL = REF.NO
*T24499           SCREEN DISPLAY;;37
            END ELSE
               S$VALUE=''
            END
         END
         IF S$VALUE[1,2] # EQP.RL.PRESS.GSPRINT THEN
            ERRMSG='Must Match Print Gearset Code "':EQP.RL.PRESS.GSPRINT:'" for This Press Id'
            GOSUB 90000
            GOTO 1780
         END
         TEMP.PRINTGEAR = S$VALUE
         GOTO 1793
      END ELSE
1791 * ; T26892
         GOSUB 2000
         S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
         TEMP.PRINTGEAR=S$DATA(36)<S$SCR,REF.NO>
         READV PGEAR.REP FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,4 ELSE
            PGEAR.REP=''
         END
         READV PGEAR.CYL FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,5 ELSE
            PGEAR.CYL=''
         END
         READV PPITCH FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,2 ELSE
            PPITCH=1
         END
         BEGIN CASE
            CASE TEMP.PRINTGEAR=''
               PRINT.REPEAT=''
               GOSUB 2000
               S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
         END CASE
*T24499 v
         GOTO 1796
*T24499 ^
1785 * T24213
         S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
         SCREEN FIELD;;36
         S$VALDAT = '' ; * T24499
         SCREEN INPUT;;36;RETURN
         IF S$VALUE[1,2] # EQP.RL.PRESS.GSPRINT THEN
            ERRMSG='Mismatch Print Gearset Code "':EQP.RL.PRESS.GSPRINT:'" for This Press Id'
            GOSUB 90000
*T24213        GOTO 1780
            GOTO 1785
         END
*
1793*
         MATREAD RLCYN.REC FROM ESTIMATE.RES.CYLINDER,CONO:S$VALUE ELSE
            PMSG="Cylinder # ":S$VALUE:" - Not on File - OK to Accept Y/N "
            X=0;Y=22;TYP=18;O.R='R'
            CALL EDIT.SUB1 (MAT EDIT.COM)
*T26902            IF VALUE # "Y" THEN GOTO 1790
            IF VALUE # 'Y' THEN GOTO 1796 ;* T26902
            READV PPITCH FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,2 ELSE
               PPITCH=1
            END
            MAT RLCYN.REC = ""
            RLCYN.REPEAT=PPITCH*S$VALUE[3,99]
         END
*T24499     IF RLCYN.REPEAT#'' THEN
*T24499        IF MOD(RLCYN.REPEAT,TEMP.REPEAT)#0 THEN
*T24499           ERRMSG='Invalid Cylinder for Repeat'
*T24499           GOSUB 90000
*T24499           GOTO 1790
*T24499        END
*T24499     END
         TEMP.PRINTGEAR = S$VALUE
         PRINT.REPEAT=RLCYN.REPEAT
      END
      PRINT.REPEAT=RLCYN.REPEAT
   END ELSE
      TEMP.PRINTGEAR=""
      S$DATA(36)<S$SCR,REF.NO>=""
      SCREEN DISPLAY;;36
   END
*
1795*
   S$VAL = REF.NO
   IF TEMP.PRINTGEAR # "" THEN
      IF PRINT.REPEAT > EQP.RES.PRESS.REPEAT.MAX THEN
         ERRMSG='Print Repeat too Large (Calc: ':OCONV(PRINT.REPEAT,'MD4'):' Max: ':OCONV(EQP.RES.PRESS.REPEAT.MAX,'MD4'):')'
         GOSUB 90000
         GOTO 1790
      END
      IF PRINT.REPEAT < EQP.RES.PRESS.REPEAT.MIN THEN
         ERRMSG='Print Repeat too Small (Calc: ':OCONV(PRINT.REPEAT,'MD4'):' Min: ':OCONV(EQP.RES.PRESS.REPEAT.MIN,'MD4'):')'
         GOSUB 90000
         GOTO 1790
      END
*T24499 v
*     END ELSE
   END
   GO 1800
1796 *
*T24499 ^
* T26902   TEMP.PRINTUP=TEMP.NO.ACROSS*TEMP.NO.AROUND
   TEMP.PRINTUP = INT((TEMP.REPEAT/(DPITCH * NO.TEETH)) +.5); * T26902
   S$DATA(37)<S$SCR,REF.NO>=TEMP.PRINTUP
   SCREEN FIELD;;37
   S$VALDAT=''
   SCREEN INPUT;;37;RETURN
   TEMP.PRINTUP=S$VALUE
*T24499 v
*  END
*T26704 v
*  TEMP.PRINTGEAR = TEMP.PRINTUP * RLDIE.REPEAT
   IF TEMP.DIE = "#" THEN
      RNDIR.REPEAT = TEMP.REPEAT / TEMP.NO.AROUND
      READV PGEAR.REP FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,4 ELSE
         PGEAR.REP=''
      END
      READV PGEAR.CYL FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,5 ELSE
         PGEAR.CYL=''
      END
      READV PPITCH FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,2 ELSE
         PPITCH=1
      END
      TEMP.PRINTGEAR = RNDIR.REPEAT * TEMP.PRINTUP
   END ELSE
      TEMP.PRINTGEAR = TEMP.PRINTUP * RLDIE.REPEAT
   END
*T26704 ^
   TEMP.PRINTGEAR = OCONV(TEMP.PRINTGEAR / OCONV(PPITCH,'MD4'),'MD4')
   TEMP.PRINTGEAR = EQUIPMENT.REC(13):OCONV(TEMP.PRINTGEAR,'G0.1')
   GOTO 1785
*T24499 ^
*
*
1800*
   GOSUB 2250
   IF TEMP.DIE # "#" AND REF.NO=1 THEN
      EST.RL.DIM.AC<1,COMP,1>=RLDIE.SZ.ACROSS
      EST.RL.DIM.AR<1,COMP,1>=RLDIE.SZ.AROUND
      S$DATA(9)<S$SCR,REF.NO>=RLDIE.SZ.ACROSS
      S$DATA(8)<S$SCR,REF.NO>=RLDIE.SZ.AROUND
      SCREEN DISPLAY;;9
      SCREEN DISPLAY;;8
   END
   RETURN
*
*--- Calculate Print Gears
*
2000*
   TEMP.PG.XREF=''
   PG.XR.CNT=1
   TEMP.PRINTGEAR=''
   PRINT.REPEAT=0
   TEMP.PG.XREF=''
   TEMP.PRINTUP=0
   BEGIN CASE
      CASE PRINT.REPEAT+0=0 AND TEMP.DG.XREF#''
         DG.CNT=DCOUNT(TEMP.DG.XREF<1>,VM)
         PG.CNT=DCOUNT(PGEAR.REP,VM)
         FOR DG=1 TO DG.CNT
            TEMP.PG.XREF<1,PG.XR.CNT>=TEMP.DG.XREF<1,DG>
            TEMP.PG.XREF<2,PG.XR.CNT>=TEMP.DG.XREF<2,DG>
            TEMP.PG.XREF<3,PG.XR.CNT>=TEMP.DG.XREF<3,DG>
            FOR PRINT.CNT = 1 TO PG.CNT
               IF TEMP.DG.XREF<2,DG>+0 # 0 THEN
                  IF MOD(PGEAR.REP<1,PRINT.CNT>,TEMP.DG.XREF<2,DG>)=0 THEN
                     TEMP.PRINTGEAR=PGEAR.CYL<1,PRINT.CNT>
                     TEMP.PRINTUP=TEMP.DG.XREF<3,DG>*INT(PGEAR.REP<1,PRINT.CNT>/TEMP.DG.XREF<2,DG>)
                     PRINT.REPEAT=PGEAR.REP<1,PRINT.CNT>
                     TEMP.PG.XREF<4,PG.XR.CNT>=TEMP.PRINTGEAR
                     TEMP.PG.XREF<5,PG.XR.CNT>=PRINT.REPEAT
                     TEMP.PG.XREF<6,PG.XR.CNT>=TEMP.PRINTUP
                     TEMP.PG.XREF<1,PG.XR.CNT>=TEMP.DG.XREF<1,DG>
                     TEMP.PG.XREF<2,PG.XR.CNT>=TEMP.DG.XREF<2,DG>
                     TEMP.PG.XREF<3,PG.XR.CNT>=TEMP.DG.XREF<3,DG>
                     PG.XR.CNT=PG.XR.CNT+1
                  END
               END
            NEXT PRINT.CNT
         NEXT DG
         PG.DONE=0
         FOR II=1 TO PG.XR.CNT UNTIL PG.DONE
            IF TEMP.PG.XREF<5,II>#'' THEN
               TEMP.PRINTGEAR=TEMP.PG.XREF<4,II>
               PRINT.REPEAT=TEMP.PG.XREF<6,II>
               TEMP.PRINTUP=TEMP.PG.XREF<6,II>
               PG.DONE=1
            END
         NEXT II
      CASE 1
   END CASE
   S$DATA(37)<S$SCR,REF.NO>=TEMP.PRINTUP
   S$DATA(36)<S$SCR,REF.NO>=TEMP.PRINTGEAR
   S$VAL=REF.NO
   SCREEN DISPLAY;;37
   S$VAL=REF.NO
   SCREEN DISPLAY;;36
   RETURN
*
*--- Calculate New Die Across, Around and Repeat Fields.
*
2150*
   BEGIN CASE
      CASE TEMP.DIETYPE='F'
         DGEARSET=EQP.RL.PRESS.GSFBED
      CASE TEMP.DIETYPE='R'
         DGEARSET=EQP.RL.PRESS.GSROTARY
   END CASE
   MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:DGEARSET ELSE
      MAT ESTGS.REC=''
   END
*T26892   DGEAR.REP=ESTGS.REC(4)
   DGEAR.REP=ESTGS.REPEATS ;* T26892
*T26892   DGEAR.CYL=ESTGS.REC(5)
   DGEAR.CYL=ESTGS.CYLIDS ;* T26892
   DPITCH=ESTGS.PITCH
   READV PGEAR.REP FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,4 ELSE
      PGEAR.REP=''
   END
   READV PGEAR.CYL FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT,5 ELSE
      PGEAR.CYL=''
   END
   BEGIN CASE
      CASE EST.RL.BUTT<1,COMP,REF.NO>='Y'
         EST.RL.GAP<1,COMP>=0
      CASE EST.RL.GAP<1,COMP,1>=''
         EST.RL.GAP<1,COMP>=EQP.RL.DRAW.GAP.MIN
      CASE 1
   END CASE
   LABEL.SIZE = EST.RL.DIM.AR<1,COMP,1> + EST.RL.GAP<1,COMP> ;* Add Minimum Gap
   IF DPITCH+0 # 0 THEN
      NO.TEETH = INT(LABEL.SIZE/DPITCH+.5)
   END ELSE
      NO.TEETH = 0
   END
   DG.CNT=DCOUNT(DGEAR.REP,VM)
   PG.CNT=DCOUNT(PGEAR.REP,VM)
   TEMP.DG.XREF=''
*T24213 v
   IF TEMP.REPEAT='' THEN
      TEMP.REPEAT=LABEL.SIZE
   END
*T24213 ^
   FOR LABEL.AR = 1 TO DG.CNT
      IF MOD(DGEAR.CYL<1,LABEL.AR>[3,3],NO.TEETH-.5)=0 THEN
         IF TEMP.DIE = "#" THEN
            TEMP.CYLINDER=DGEAR.CYL<1,LABEL.AR>
            TEMP.REPEAT=DGEAR.REP<1,LABEL.AR>
            TEMP.NO.AROUND=INT(TEMP.REPEAT/LABEL.SIZE)
         END
         INS TEMP.CYLINDER BEFORE TEMP.DG.XREF<1,1>
         INS TEMP.REPEAT BEFORE TEMP.DG.XREF<2,1>
         INS TEMP.NO.AROUND BEFORE TEMP.DG.XREF<3,1>
      END
      IF MOD(DGEAR.CYL<1,LABEL.AR>[3,3],NO.TEETH)=0 THEN
         IF TEMP.DIE = "#" THEN
            TEMP.CYLINDER=DGEAR.CYL<1,LABEL.AR>;*T24213
            TEMP.REPEAT=DGEAR.REP<1,LABEL.AR>;*T24213
            TEMP.NO.AROUND=INT(TEMP.REPEAT/LABEL.SIZE);*T24213
         END
         INS TEMP.CYLINDER BEFORE TEMP.DG.XREF<1,1>
         INS TEMP.REPEAT BEFORE TEMP.DG.XREF<2,1>
         INS TEMP.NO.AROUND BEFORE TEMP.DG.XREF<3,1>
      END
   NEXT LABEL.AR
   IF EST.RL.DIE.REPEAT<1,COMP,REF.NO>='' OR SAVE.DIETYPE#TEMP.DIETYPE OR SIZES.CHANGED THEN
      GOSUB 2000
      SIZES.CHANGED=0
      S$DATA(26)<S$SCR,REF.NO>=TEMP.NO.AROUND
      S$DATA(24)<S$SCR,REF.NO>=TEMP.REPEAT
      S$DATA(27)<S$SCR,REF.NO>=TEMP.CYLINDER
      S$VAL=REF.NO
      SCREEN DISPLAY;;24
      S$VAL=REF.NO
      SCREEN DISPLAY;;26
      S$VAL=REF.NO
      SCREEN DISPLAY;;27
   END
*
*--- Calculate No Across Maximum Web
*
   MAX.WIDTH=EQP.RES.PRESS.WIDTH.MAX
   MAX.WIDTH=MAX.WIDTH - EQP.RL.TRIM.MIN ;* Less Minimum Trim
   IF RLDIE.NO.ACROSS='' THEN
      TEMP.NO.ACROSS=INT(MAX.WIDTH/EST.RL.DIM.AC<1,COMP,1>)
   END
   IF TEMP.NO.ACROSS+0=0 THEN TEMP.NO.ACROSS=1
2155*
   IF EST.RL.DIE<1,COMP,REF.NO>#'B' THEN
      GAP=(TEMP.NO.ACROSS-1)*EQP.RL.DRAW.GAP.MIN
   END ELSE
      GAP=0
   END
   CHECK.WIDTH=TEMP.NO.ACROSS*EST.RL.DIM.AC<1,COMP,1>+GAP
   IF CHECK.WIDTH > MAX.WIDTH THEN
      WASTE=GAP+EQP.RL.TRIM.MIN
      TEMP.NO.ACROSS=TEMP.NO.ACROSS-1
      IF TEMP.NO.ACROSS <=0 THEN
         PMSG='Press Width Est: ':OCONV(CHECK.WIDTH,'MD4'):' Max: ':OCONV(MAX.WIDTH,'MD4'):'(less trim)  Waste: ':OCONV(WASTE,'MD4'):' Ok Y/N'
         X=0;Y=22;TYP=18;O.R='R'
         CALL EDIT.SUB1 (MAT EDIT.COM)
         IF VALUE # 'Y' THEN
            GO 2150
         END
      END
   END
   S$DATA(25)<S$SCR,REF.NO>=TEMP.NO.ACROSS
   S$VAL = REF.NO
   SCREEN DISPLAY;;25
   RETURN
*
*--- Update New Die Details
*
2250*
   EST.RL.DIE<1,COMP,REF.NO> = TEMP.DIE
   EST.RL.DIE.REPEAT<1,COMP,REF.NO> = TEMP.REPEAT
   EST.RL.DIE.NO.ACR<1,COMP,REF.NO> = TEMP.NO.ACROSS
   EST.RL.DIE.NO.ARD<1,COMP,REF.NO> = TEMP.NO.AROUND
   EST.RL.DIE.CYL.ID<1,COMP,REF.NO> = TEMP.CYLINDER
   EST.RL.DIE.PRESS.NO<1,COMP,REF.NO> = TEMP.PRESS.NO
   EST.RL.DIETYPE<1,COMP,REF.NO> = TEMP.DIETYPE
   EST.RL.PRINTGEARS<1,COMP,REF.NO> = TEMP.PRINTGEAR
   IF TEMP.PRINTUP=0 THEN
      TEMP.PRINTUP=PRINT.REPEAT/TEMP.REPEAT*TEMP.NO.AROUND
   END
   EST.RL.PRINTAR<1,COMP,REF.NO> = TEMP.PRINTUP
   RETURN
*
*--- Calculate Gap Bewteen Labels in Draw (Repeat)
*
2500*
   CALC.NO.AROUND=TEMP.NO.AROUND
   IF CALC.NO.AROUND=0 THEN
      CALC.NO.AROUND=1
   END
   CALC.GAP=OCONV(EST.RL.DIM.AR<1,COMP,1>*CALC.NO.AROUND,'MD4')
   CALC.REPEAT=OCONV(TEMP.REPEAT,'MD4')
   CCALC.GAP=(CALC.REPEAT-CALC.GAP)/CALC.NO.AROUND
   CCALC.GAP=INT(CCALC.GAP*10000)
   BEGIN CASE
      CASE CCALC.GAP < 0
         ERRMSG = 'Cannot Have Negative GAP...'
         GOSUB 90000
         GOTO 1751
      CASE CCALC.GAP < EST.RL.GAP<1,COMP,1>
         PMSG='Calculated Gap ( ':OCONV(CCALC.GAP,'MD4'):' ) Less Than Minimum ':OCONV(EQP.RL.DRAW.GAP.MIN,'MD4'):' ...Ok to Use Y/N '
         X=0;Y=22;TYP=18;O.R='R'
         CALL EDIT.SUB1 (MAT EDIT.COM)
         IF VALUE # 'Y' THEN
            LABEL.SIZE=EST.RL.DIM.AR<1,COMP>+EQP.RL.DRAW.GAP.MIN
            EST.RL.GAP<1,COMP>=EQP.RL.DRAW.GAP.MIN
            GOTO 1751
         END
      CASE CCALC.GAP # EST.RL.GAP<1,COMP,1>
         ERRMSG='Actual Gap ( ':OCONV(CCALC.GAP,'MD4'):' )'
         GOSUB 90000
   END CASE
   EST.RL.GAP.CALC<1,COMP,1>=CCALC.GAP
   S$DATA(60)<S$SCR,1>=EST.RL.GAP.CALC<1,COMP,1>
   SCREEN DISPLAY;;60
   RETURN
*
*--- XReference For Die and Print Gears
*
2750*
   IF TEMP.DG.XREF='' THEN GOSUB 2150
   IF TEMP.PG.XREF='' THEN GOSUB 2000
   BEGIN CASE
      CASE TEMP.DG.XREF=''
         S$VALUE=''
      CASE 1
         MAT GEN.XREF.REC=''
         GXR.CO = CONO    ;*DT
         GXR.NAME='RES.GEAR.XREF'
         GXR.IDLIST=TEMP.PG.XREF
         GXR.FILE = ESTIMATE.RES.GEARSET      ;*T25236
         GXR.XREF = EQUIPMENT     ;*T25236
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         SCREEN FORMAT
         GOSUB 2250
         GOSUB 80000
         IF GXR.ID#'' THEN
            S$VALUE=TEMP.PG.XREF<SET.S$VALUE,GXR.ID>
            TEMP.DIEGEAR=TEMP.PG.XREF<1,GXR.ID>
            TEMP.PRINTGEAR=TEMP.PG.XREF<4,GXR.ID>
            TEMP.NO.AROUND=TEMP.PG.XREF<3,GXR.ID>
            TEMP.REPEAT=TEMP.PG.XREF<2,GXR.ID>
            TEMP.PRINTUP=TEMP.PG.XREF<6,GXR.ID>
            PRINT.REPEAT=TEMP.PG.XREF<5,GXR.ID>
         END ELSE
            S$VALUE=''
         END
   END CASE
   RETURN
*
* --- Call Cost Center Details
*
50000*
   IF EST.RL.PRESS.CCTR<1,COMP>='' THEN OPTION='A' ELSE OPTION = ''
   GOSUB 20000
* T22078
   IF ACTION # "M" THEN
      GOTO 7000
   END
   IF MAINT.FLAG = "X" THEN
      GOTO 7000
   END ELSE
      GOTO 51000
   END
*
* --- Call Die Details
*
51000*
* T22078
   IF EST.RL.DIE<1,COMP>='' THEN OPTION='A' ELSE OPTION = ''
   GOSUB 21000
* T22078
   IF ACTION # "M" THEN
      GOTO 7000
   END
* T22078
   IF MAINT.FLAG = "X" THEN
      GOTO 7000
   END ELSE
      GOTO 52000
   END
*
* --- Call Stock Details
*
52000*
   IF EST.PROD.OS.USAGE<1,COMP>='' THEN OPTION='A' ELSE OPTION = ''
   GOSUB 22000
   GOTO 7000
*
*--- Paper Group
*
3000*
   S$VAL = REF.NO
   SCREEN DISPLAY;;28
   S$VAL = REF.NO
   S$DATA(29)<S$SCR,REF.NO> = EST.PROD.OS.USAGE<1,COMP,REF.NO>
   SCREEN FIELD;;29
   SCREEN INPUT;;29;RETURN
   IF S$VALUE='??' THEN
*T23976 v
      GXR.CO=CONO
      GXR.ID=""
*T23976 ^
      GXR.NAME='EST.RES.PAPER.GROUP'
      GXR.FILE = ESTIMATE.PAPER.GROUP
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      S$VALUE=GXR.ID
*DT         SCREEN DEFINE;EST.RES.PROD.SUB1
      SCREEN FORMAT
      GOSUB 80000
      S$VAL=REF.NO
   END
   MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP,CONO:S$VALUE ELSE
      ERRMSG="Invalid Paper Group ID, Try Again!"
      GOSUB 90000
      GOTO 3000
   END
   IF ESTPG.TYPE # "R" THEN
      ERRMSG = "Paper Group ID Not Roll Label, Try Again!"
      GOSUB 90000
      GOTO 3000
   END
   EST.PROD.OS.TYPE<1,COMP>="R"
   EST.PROD.OS.USAGE<1,COMP,REF.NO> = S$VALUE
   S$DATA(29)<S$SCR,REF.NO>=S$VALUE
   S$VAL=REF.NO
   SCREEN DISPLAY;;29
   S$VAL=REF.NO
   SCREEN DISPLAY;;28
*
*--- Estimate Material Product Id
*
3100*
   MAT ESTM.REC = ""
   S$DATA(31)<S$SCR,REF.NO> = EST.PROD.OS.PROD<1,COMP,REF.NO>
   PREV.PROD=S$DATA(31)<S$SCR,REF.NO>
   S$VAL =REF.NO
   SCREEN FIELD;;31
   SCREEN INPUT;;31;GOTO 3000
   IF S$VALUE="???" THEN
      MATREAD ESTM.REC FROM ESTIMATE.MATL,CONO:"R":EST.PROD.OS.USAGE<1,COMP,REF.NO> ELSE
         MAT ESTM.REC = ""
      END
      S$SCR=S$SCR+1
      CALL EST.RES.PAPER.XREF(CONO,"S","R",EST.PROD.OS.USAGE<1,COMP,REF.NO>,INV.ID)
      SCREEN CLOSE
      S$SCR=S$SCR-1
      SCREEN FORMAT
      GOSUB 80000
      S$VAL=REF.NO
      SCREEN DISPLAY;;29
      S$VAL=REF.NO
      SCREEN DISPLAY;;28
      IF INV.ID = "" THEN
         GOTO 3100
      END ELSE
         EST.PROD.OS.PROD<1,COMP,REF.NO>=INV.ID
      END
   END ELSE
      INV.ID = S$VALUE
      EST.PROD.OS.PROD<1,COMP,REF.NO>=INV.ID
   END
   MATREAD ESTM.REC FROM ESTIMATE.MATL,CONO:"R":EST.PROD.OS.USAGE<1,COMP,REF.NO> ELSE
      MAT ESTM.REC = ""
   END
   LOCATE INV.ID IN ESTM.PROD<1>,1 SETTING MP ELSE
      ERRMSG="Invalid product ID. Try again! "
      GOSUB 90000
      GOTO 3100
   END
   EST.PROD.OS.PROD<1,COMP,REF.NO>=INV.ID
   S$DATA(31)<S$SCR,REF.NO> = EST.PROD.OS.PROD<1,COMP,REF.NO>
   S$VAL =REF.NO
   SCREEN DISPLAY;;31
*
   IF PREV.PROD#EST.PROD.OS.PROD<1,COMP,REF.NO> THEN
      EST.PROD.OS.DESC<1,COMP,REF.NO>=ESTM.DESC<1,MP>
      EST.RL.PAP.PRICE<1,COMP,REF.NO> = '' ;*T26509
*T26704 v
      EST.PROD.OS.WIDTH<1,COMP,REF.NO> = ''
      EST.RL.ACT.WIDTH<1,COMP,REF.NO> = ''
      EST.RL.PAP.CAL<1,COMP,REF.NO> = ''
      EST.RL.PAP.GSM<1,COMP,REF.NO> = ''
*T26704 ^
   END
   S$DATA(41)<S$SCR,REF.NO> = EST.PROD.OS.DESC<1,COMP,REF.NO>
   S$VAL =REF.NO
   SCREEN FIELD;;41
   S$O.R="O"
   SCREEN INPUT;;41;GOTO 3000
   EST.PROD.OS.DESC<1,COMP,REF.NO>=S$VALUE
*
*-INVENTORY ID
*
3200 *
   UNIT.PR = ""
   S$DATA(49)<S$SCR> = EST.PROD.INV.ID<1,COMP,REF.NO>
   SCREEN FIELD;;49
   S$DEFAULT = ""
   SCREEN INPUT;;49;GOTO 3000
   BEGIN CASE
      CASE S$VALUE=""
         EST.PROD.INV.ID<1,COMP,REF.NO>=S$VALUE
      CASE 1
         INV.ID=S$VALUE
         IF INV.ID="???" THEN
            S$SCR=S$SCR+1
            PLINE=EST.PROD.PLINE<1,COMP,REF.NO>
            BASIS=EST.PROD.BASIS.WT<1,COMP,REF.NO>
            FIN=EST.PROD.FINISH<1,COMP,REF.NO>
            CLR=EST.PROD.COLOR<1,COMP,REF.NO>
            WIDTH=""
            LNGTH=""
            CALL EST.INV.XREF(CONO,"S",PLINE,BASIS,FIN,CLR,WIDTH,LNGTH,INV.ID)
            SCREEN CLOSE
            S$SCR=S$SCR-1
            EST.PROD.INV.ID<1,COMP,REF.NO>=INV.ID
            SCREEN FORMAT
            GOSUB 80000
            IF INV.ID = "" THEN GOTO 3200
         END
         MATREAD INV.REC FROM INVENTORY,CONO:INV.ID ELSE
            ERRMSG="Invalid inventory item. Try again! "
            GOSUB 90000
            GOTO 3200
         END
*T26869 v
         MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
            ERRMSG="Invalid Inventory Category. Try again! "
            GOSUB 90000
            GOTO 3200
         END
         IF CATG.TYPE # 'RL' THEN
            ERRMSG='Not a Roll Label product'
            GOSUB 90000
            GOTO 3200
         END
*T26869 ^
         GOSUB 35000
         EST.PROD.INV.ID<1,COMP,REF.NO>=INV.ID
   END CASE
   GOSUB 5000 ;* T26774
   IF EST.PROD.INV.ID<1,COMP,REF.NO> # "" THEN
*     S$DATA(41)<S$SCR> = EST.PROD.OS.DESC<1,COMP,REF.NO>
      S$DATA(41)<S$SCR> = ""
      SCREEN FIELD;;41
      S$DEFAULT = INV.DESC
      SCREEN INPUT;;41
      EST.PROD.OS.DESC<1,COMP,REF.NO> = S$VALUE
   END
*
*--- Estimated Width (Used for Cost Calculations)
*
3300*
   IF EST.PROD.PRESS.ID<1,COMP,REF.NO> # "" THEN
      CCTRID = EST.PROD.PRESS.ID<1,COMP,REF.NO>
   END ELSE
      CCTRID = EST.PROD.PRESS.ID<1,COMP,1>
   END
   MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:CCTRID ELSE
      MAT EQUIPMENT.REC=''
   END
   IF EST.PROD.OS.WIDTH<1,COMP,REF.NO>='' THEN
      EST.PROD.OS.WIDTH<1,COMP,REF.NO>=ESTM.WIDTH<1,MP>
   END
   S$DATA(42)<S$SCR,REF.NO> = EST.PROD.OS.WIDTH<1,COMP,REF.NO>
   S$VAL =REF.NO
   SCREEN FIELD;;42
   S$DEFAULT = EST.PROD.OS.WIDTH<1,COMP,REF.NO>
   SCREEN INPUT;;42;GOTO 3000
   BEGIN CASE
      CASE S$VALUE < EQP.RES.PRESS.WIDTH.MIN
         ERRMSG = "Paper width can be no less than ":OCONV(EQP.RES.PRESS.WIDTH.MIN,"MD4"); GOSUB 90000
         GOTO 3300
      CASE S$VALUE > EQP.RES.PRESS.WIDTH.MAX
         ERRMSG = "Paper width can be no greater than ":OCONV(EQP.RES.PRESS.WIDTH.MAX,"MD4"); GOSUB 90000
         GOTO 3300
   END CASE
   EST.PROD.OS.WIDTH<1,COMP,REF.NO> = S$VALUE
*
* --- Actual Width (Work Ticket)
*
   IF EST.RL.ACT.WIDTH<1,COMP,REF.NO>='' THEN
      EST.RL.ACT.WIDTH<1,COMP,REF.NO>=EST.PROD.OS.WIDTH<1,COMP,REF.NO>
      S$DATA(43)<S$SCR,REF.NO>=EST.RL.ACT.WIDTH<1,COMP,REF.NO>
   END
   S$VAL = REF.NO
   SCREEN FIELD;;43
   SCREEN INPUT;;43;GOTO 3000
   BEGIN CASE
      CASE S$VALUE < EQP.RES.PRESS.WIDTH.MIN
         ERRMSG = "Paper width can be no less than ":OCONV(EQP.RES.PRESS.WIDTH.MIN,"MD4"); GOSUB 90000
         GOTO 3300
      CASE S$VALUE > EQP.RES.PRESS.WIDTH.MAX
         ERRMSG = "Paper width can be no greater than ":OCONV(EQP.RES.PRESS.WIDTH.MAX,"MD4"); GOSUB 90000
         GOTO 3300
   END CASE
   EST.RL.ACT.WIDTH<1,COMP,REF.NO>=S$VALUE
*
*--- Caliper
*
3350*
   IF EST.RL.PAP.CAL<1,COMP,REF.NO>='' THEN
      EST.RL.PAP.CAL<1,COMP,REF.NO>=ESTM.CALIPER<1,MP>;*T21556
   END
   S$DATA(44)<S$SCR,REF.NO>=EST.RL.PAP.CAL<1,COMP,REF.NO>
   S$VAL=REF.NO
   SCREEN FIELD;;44
   SCREEN INPUT;;44;GOTO 3000
   IF S$VALUE+0 = 0 THEN
      ERRMSG = "Caliper must be greater than zero"; GOSUB 90000
      GOTO 3350
   END
   EST.RL.PAP.CAL<1,COMP,REF.NO>=S$VALUE
*
*--- Material GSM
*
   IF EST.RL.PAP.GSM<1,COMP,REF.NO>='' THEN
      EST.RL.PAP.GSM<1,COMP,REF.NO>=ESTPG.WGT.CLASS;*T21556
   END
   S$DATA(45)<S$SCR,REF.NO>=EST.RL.PAP.GSM<1,COMP,REF.NO>;*T21556
   S$VAL=REF.NO
   SCREEN FIELD;;45
   SCREEN INPUT;;45;GOTO 3000
   EST.RL.PAP.GSM<1,COMP,REF.NO>=S$VALUE;*T21556
*
*--- Enter Material Requirements
*
3400*
   EQTY = DCOUNT(EST.QTY,VM)
   FOR Y = 1 TO EQTY
      S$VAL = QTY.LINE.COUNT * INT((Y-1)/QTY.LINE.COUNT) + 1
      S$CNT = EQTY
      SCREEN MULTI;;C;1;46;47;48
      GOSUB 30000
      TOT.MSI = INT(((EST.PROD.OS.WIDTH<1,COMP,REF.NO>/10000*TOT.LINEAL)/1000)+.9)
      IF UNIT.PR = "" THEN
         PRICE.BRK.COUNT = DCOUNT(ESTM.END.QTY<1,MP>,SVM)
         FLG=0
         FOR X = 1 TO PRICE.BRK.COUNT UNTIL FLG=1
            TEST.QTY = ESTM.END.QTY<1,MP,X>
            IF TOT.MSI <= TEST.QTY THEN
               UNIT.PR = ESTM.QCOST<1,MP,X>
               FLG=1
            END
         NEXT X
         IF NOT(FLG) THEN
            UNIT.PR = ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
         END
      END
      MACRO REPVAL;EST.RL.TOTAL.PC<1,COMP,REF.NO>;"!";Y;INT(TOT.LINEAL)
* C33801
      MACRO REPVAL;EST.RL.MR.PC<1,COMP,REF.NO>;"!";Y;INT(MR.LINEAL)
* C33801
      MACRO REPVAL;EST.RL.PAP.MSI<1,COMP,REF.NO>;"!";Y;TOT.MSI
      S$DATA(46)<S$SCR,Y>=TOT.MSI
      S$VAL = Y
      SCREEN DISPLAY;;46
      S$DATA(47)<S$SCR,Y>=FIELD(EST.RL.PAP.PRICE<1,COMP,REF.NO>,'!',Y)
      S$VAL = Y
      SCREEN FIELD;;47
      S$DEFAULT=FIELD(EST.RL.PAP.PRICE<1,COMP,REF.NO>,'!',Y)
      IF S$DEFAULT = "" THEN S$DEFAULT = UNIT.PR
      SCREEN INPUT;;47;GOTO 3000
      UNIT.PR=S$VALUE
      IF UNIT.PR+0=0 AND Y>1 THEN
         UNIT.PR=FIELD(EST.RL.PAP.PRICE<1,COMP,REF.NO>,'!',1)
      END
      MACRO REPVAL;EST.RL.PAP.PRICE<1,COMP,REF.NO>;"!";Y;UNIT.PR
      S$DATA(48)<S$SCR,Y>=INT((TOT.MSI * (UNIT.PR/100))+.5)
      S$VAL = Y
      SCREEN DISPLAY;;48
      UNIT.PR='' ;*T26583
   NEXT Y
   GOSUB 82000
   RETURN
*
*--- Load Paper Data
*
5000*
 * T26774 comment out all lines except EST.PROD.COATING
*   EST.PROD.OS.WIDTH<1,COMP,REF.NO>=ESTM.WIDTH<1,MP>
*   EST.PROD.OS.LENGTH<1,COMP,REF.NO>=ESTM.LENGTH<1,MP>
*   EST.PROD.OS.GRAIN<1,COMP,REF.NO>=ESTM.GRAIN<1,MP>
*   EST.PROD.PLINE<1,COMP,REF.NO>=ESTM.PLINE<1,MP>
*   EST.PROD.BASIS.WT<1,COMP,REF.NO>=ESTM.BASIS.WT<1,MP>
*   EST.PROD.FINISH<1,COMP,REF.NO>=ESTM.FINISH.CD<1,MP>
*   EST.PROD.COLOR<1,COMP,REF.NO>=ESTM.CLR.CD<1,MP>
*   EST.PROD.PPI<1,COMP,REF.NO>=ESTM.PPI<1,MP>
*   EST.PROD.PPI<1,COMP,REF.NO>=ESTM.PPI<1,MP>
*   EST.PROD.PS.WIDTH<1,COMP,REF.NO>=EST.PROD.OS.WIDTH<1,COMP,REF.NO>
*   EST.PROD.PS.LENGTH<1,COMP,REF.NO>=EST.PROD.OS.LENGTH<1,COMP,REF.NO>
*   EST.PROD.PS.GRAIN<1,COMP,REF.NO>=EST.PROD.OS.GRAIN<1,COMP,REF.NO>
   EST.PROD.COATING<1,COMP,REF.NO>=ESTM.COAT.CD<1,MP>
*   EST.PROD.M.WT<1,COMP,REF.NO>=ESTM.M.WEIGHT<1,MP>
*   IF EST.PROD.OS.TYPE<1,COMP>="" THEN
*      AC=COUNT(EST.A9B,",")+1
*      FOR AP=1 TO AC
*         AA=FIELD(EST.A9B,",",AP)
*         AA1=FIELD(AA,"-",1)
*         AA2=FIELD(AA,"-",2)
*         IF AA2="" THEN AA2=AA1
*         FOR AAP=AA1 TO AA2
*            EST.REC(AAP)<1,COMP,REF.NO>=""
**         NEXT AAP
*      NEXT AP
*   END
   RETURN
*
*--- Delete Paper Data
*
60000*
   DEL EST.PROD.OS.USAGE<1,COMP,REF.NO>
   DEL EST.PROD.OS.PROD<1,COMP,REF.NO>
   DEL EST.PROD.OS.DESC<1,COMP,REF.NO>
   DEL EST.PROD.OS.WIDTH<1,COMP,REF.NO>
   DEL EST.PROD.OS.LENGTH<1,COMP,REF.NO>
   DEL EST.PROD.OS.GRAIN<1,COMP,REF.NO>
   DEL EST.PROD.PS.WIDTH<1,COMP,REF.NO>
   DEL EST.PROD.PS.LENGTH<1,COMP,REF.NO>
   DEL EST.PROD.PS.GRAIN<1,COMP,REF.NO>
   DEL EST.PROD.BASIS.WT<1,COMP,REF.NO>
   DEL EST.PROD.COATING<1,COMP,REF.NO>
   DEL EST.PROD.M.WT<1,COMP,REF.NO>
   DEL EST.PROD.PPI<1,COMP,REF.NO>
   DEL EST.PROD.PLINE<1,COMP,REF.NO>
   DEL EST.PROD.COLOR<1,COMP,REF.NO>
   DEL EST.PROD.FINISH<1,COMP,REF.NO>
   DEL EST.PROD.INV.ID<1,COMP,REF.NO>
   DEL EST.PROD.PPI<1,COMP,REF.NO>
   DEL EST.RL.TOTAL.PC<1,COMP,REF.NO>
   DEL EST.RL.PAP.MSI<1,COMP,REF.NO>
   DEL EST.RL.PAP.PRICE<1,COMP,REF.NO>
   DEL EST.RL.PAP.GSM<1,COMP,REF.NO>
   DEL EST.RL.PAP.CAL<1,COMP,REF.NO>
   DEL EST.RL.ACT.WIDTH<1,COMP,REF.NO>
   IF EST.PROD.OS.USAGE<1,COMP> = "" THEN
      DEL EST.PROD.OS.TYPE<1,COMP>
   END
   S$DATA(29) = DELETE(S$DATA(29),S$SCR,REF.NO,0)
   S$DATA(31) = DELETE(S$DATA(31),S$SCR,REF.NO,0)
   S$DATA(43) = DELETE(S$DATA(43),S$SCR,REF.NO,0)
   S$DATA(41) = DELETE(S$DATA(41),S$SCR,REF.NO,0)
   S$DATA(42) = DELETE(S$DATA(42),S$SCR,REF.NO,0)
   S$DATA(44) = DELETE(S$DATA(44),S$SCR,REF.NO,0)
   S$DATA(45) = DELETE(S$DATA(45),S$SCR,REF.NO,0)
   S$DATA(49) = DELETE(S$DATA(49),S$SCR,REF.NO,0)
   GOSUB 82000
   RETURN
*
*--- Get User Option for Cost Center
*
20000*
   CNT=DCOUNT(EST.RL.PRESS.CCTR<1,COMP>,SVM)
   MORE = 1
   LOOP
      IF OPTION = "A" THEN
         CCTR.OPT = "A"
      END ELSE
* T22078
         IF ACTION  = "M" THEN
            S$DATA(56)<S$SCR>=""
            SCREEN FIELD;;56
            S$DEFAULT=''
            SCREEN INPUT;;56
         END ELSE
        * T25978 v
        * PMSG='(S)croll, (E)xit :'          
        * X=0;Y=22;TYP=1;O.R='O'
        * X=0;Y=22;TYP=11;O.R='O'     ;*T25236
        * VALDAT = "S":VM:"E"                     
        * CALL EDIT.SUB1 (MAT EDIT.COM)
        * S$VALUE = VALUE
        * VALUE = ""
            S$DATA(56)<S$SCR>=""
            SCREEN FIELD;;56
            S$DEFAULT=''
            S$PMSG = '(S,SR,SB,ST) to Scroll or (E)xit' 
            S$VALDAT = 'S,SR,SB,ST,E'
            SCREEN INPUT;;56
        * T25978 ^
         END
         CCTR.OPT=OCONV(S$VALUE,'MCU')
         OPTION=""
      END
      BEGIN CASE
         CASE CCTR.OPT="A" AND CNT < 100
            DONE=0
            FOR REF.NO=CNT+1 TO 100 UNTIL DONE
               GOSUB 80100
               GOSUB 2100
               IF S$VALUE="END" THEN
                  DONE=1
                  GOSUB 27000
               END ELSE
                  CNT=CNT+1
               END
            NEXT REF.NO
            CNT=DCOUNT(EST.RL.PRESS.CCTR<1,COMP>,SVM)
            REF.NO=CNT
            GOSUB 80500
            OPTION = ""
         CASE CCTR.OPT="C" AND CNT > 0
            LINE.COUNT = CCTR.LINE.COUNT
            START.REF.NO = CCTR.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 2100
            END
         CASE CCTR.OPT="D" AND CNT > 0
            LINE.COUNT = CCTR.LINE.COUNT
            START.REF.NO = CCTR.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 27000
               CNT=CNT-1
               IF REF.NO > CNT THEN REF.NO=REF.NO-1
               IF REF.NO < 1 THEN REF.NO = 1
            END
         CASE CCTR.OPT="S"
            REF.NO=CCTR.REF.NO+CCTR.LINE.COUNT
            IF REF.NO > CNT THEN REF.NO=1
            GOSUB 80500
      * T25978 v
         CASE CCTR.OPT = 'SR'
            REF.NO = CCTR.REF.NO - CCTR.LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 80500
         CASE CCTR.OPT = 'ST'
            REF.NO = 1
            GOSUB 80500
         CASE CCTR.OPT = 'SB'
            REF.NO = CNT
            GOSUB 80500
      * T25978 ^
         CASE CCTR.OPT="" OR CCTR.OPT="END" OR CCTR.OPT="E"
            MORE=0
      END CASE
   WHILE MORE DO REPEAT
   CCTR.OPT = ""
   RETURN
*
*--- Get User Option for Die
*
21000*
   CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
   MORE = 1
   LOOP
      IF OPTION = "A" THEN
         DIE.OPT = "A"
      END ELSE
* T22078
         IF ACTION = "M" THEN
            S$DATA(56)<S$SCR>=""
            SCREEN FIELD;;56
            S$DEFAULT=''
            SCREEN INPUT;;56
         END ELSE
        * T25978 v
        * PMSG='(S)croll, (E)xit :'                
        * X=0;Y=22;TYP=1;O.R='O'
        * X=0;Y=22;TYP=11;O.R='O'     ;*T25236
        * VALDAT = "S":VM:"E"                      
        * CALL EDIT.SUB1 (MAT EDIT.COM)
        * S$VALUE = VALUE
        * VALUE = ""
            S$DATA(56)<S$SCR>=""
            SCREEN FIELD;;56
            S$DEFAULT=''
            S$PMSG = '(S,SR,SB,ST) to Scroll or (E)xit'  
            S$VALDAT = 'S,SR,SB,ST,E'
            SCREEN INPUT;;56
        * T25978 ^
         END
         DIE.OPT=OCONV(S$VALUE,'MCU')
         OPTION=""
      END
      BEGIN CASE
         CASE DIE.OPT="A" AND CNT < 100
            DONE=0
            FOR REF.NO=CNT+1 TO 100 UNTIL DONE
               GOSUB 81000
               GOSUB 1700
               IF S$VALUE="END" THEN
                  DONE=1
               END ELSE
                  CNT=CNT+1
               END
            NEXT REF.NO
            CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
            REF.NO=CNT
            GOSUB 81500
            OPTION = ""
         CASE DIE.OPT="C" AND CNT > 0
            LINE.COUNT = DIE.LINE.COUNT
            START.REF.NO = DIE.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 1700
            END
         CASE DIE.OPT="D" AND CNT > 0
            LINE.COUNT = DIE.LINE.COUNT
            START.REF.NO = DIE.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 27500
               CNT=CNT-1
               IF REF.NO > CNT THEN REF.NO=REF.NO-1
               IF REF.NO < 1 THEN REF.NO = 1
            END
         CASE DIE.OPT="S"
            REF.NO=DIE.REF.NO+DIE.LINE.COUNT
            IF REF.NO > CNT THEN REF.NO=1
            GOSUB 81500
      * T25978 v
         CASE DIE.OPT = 'SR'
            REF.NO = DIE.REF.NO - DIE.LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 81500
         CASE DIE.OPT = 'ST'
            REF.NO = 1
            GOSUB 81500
         CASE DIE.OPT = 'SB'
            REF.NO = CNT
            GOSUB 81500
      * T25978 ^
         CASE DIE.OPT="" OR DIE.OPT="END" OR DIE.OPT="E"
            MORE=0
      END CASE
   WHILE MORE DO REPEAT
   DIE.OPT = ""
   RETURN
*
*--- Get User Option for Stock
*
22000*
   CNT = DCOUNT(EST.PROD.OS.USAGE<1,COMP>,SVM)
   MORE = 1
   LOOP
      IF OPTION = "A" THEN
         PROD.OPT = "A"
      END ELSE
* T22078
         IF ACTION = "M" THEN
            S$DATA(19)<S$SCR>=""
            SCREEN FIELD;;19
            S$DEFAULT=''
            SCREEN INPUT;;19
         END ELSE
        * T25978 v
        * PMSG='(S)croll, Scroll (Q)ty, (E)xit :'
        * X=0;Y=22;TYP=1;O.R='O'
        * X=0;Y=22;TYP=11;O.R='O'     ;*T25236
        * VALDAT = "S":VM:"Q":VM:"E"
        * CALL EDIT.SUB1 (MAT EDIT.COM)
        * S$VALUE = VALUE
        * VALUE = ""
            S$DATA(19)<S$SCR>=""
            SCREEN FIELD;;19
            S$PMSG = '(S,SR,SB,ST) to Scroll,(Q,QR,QB,QT) to Scroll Qty, or (E)xit'
            S$VALDAT = 'S,Q,E,SR,SB,ST,QR,QB,QT'
            S$DEFAULT=''
            SCREEN INPUT;;19
        * T25978 ^
         END
         PROD.OPT=OCONV(S$VALUE,'MCU')
         OPTION=""
      END
      BEGIN CASE
         CASE PROD.OPT="A" AND CNT < 100
            DONE=0
            FOR REF.NO=CNT+1 TO 100 UNTIL DONE
               GOSUB 82000
               GOSUB 3000
               IF S$VALUE="END" THEN
                  DONE=1
                  GOSUB 60000
               END ELSE
                  CNT=CNT+1
               END
            NEXT REF.NO
            CNT = DCOUNT(EST.PROD.OS.USAGE<1,COMP>,SVM)
            REF.NO=CNT
            GOSUB 82500
            OPTION = ""
         CASE PROD.OPT="C" AND CNT > 0
            LINE.COUNT = PROD.LINE.COUNT
            START.REF.NO = PROD.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 3000
            END
         CASE PROD.OPT="D" AND CNT > 0
            LINE.COUNT = PROD.LINE.COUNT
            START.REF.NO = PROD.REF.NO
            GOSUB 40000
            IF S$VALUE#"" AND S$VALUE#"END" THEN
               REF.NO=S$VALUE
               GOSUB 60000
               CNT=CNT-1
               IF REF.NO > CNT THEN REF.NO=REF.NO-1
               IF REF.NO < 1 THEN REF.NO = 1
            END
         CASE PROD.OPT="S"
            REF.NO=PROD.REF.NO+PROD.LINE.COUNT
            IF REF.NO > CNT THEN REF.NO=1
            GOSUB 82500
      * T25978 v
         CASE PROD.OPT = 'SR'
            REF.NO = PROD.REF.NO - PROD.LINE.COUNT
            IF REF.NO < 1 THEN REF.NO = 1
            GOSUB 82500
         CASE PROD.OPT = 'ST'
            REF.NO = 1
            GOSUB 82500
         CASE PROD.OPT = 'SB'
            REF.NO = CNT
            GOSUB 82500
      * T25978 ^
         CASE PROD.OPT="Q"
            QTY.REF.NO=QTY.REF.NO+QTY.LINE.COUNT
            IF QTY.REF.NO > DCOUNT(EST.QTY,VM) THEN QTY.REF.NO=1
            GOSUB 83000
      * T25978 v
         CASE PROD.OPT = 'QR'
            QTY.REF.NO = QTY.REF.NO - QTY.LINE.COUNT
            IF QTY.REF.NO < 1 THEN QTY.REF.NO = 1
            GOSUB 83000
         CASE PROD.OPT = 'QT'
            QTY.REF.NO = 1
            GOSUB 83000
         CASE PROD.OPT = 'QB'
            QTY.REF.NO = DCOUNT(EST.QTY,VM)
            GOSUB 83000
      * T30978 ^
         CASE PROD.OPT="" OR PROD.OPT="END" OR PROD.OPT="E"
            MORE=0
      END CASE
   WHILE MORE DO REPEAT
   PROD.OPT = ""
   RETURN
*
*--- Calculate Stock Requirements
*
30000*
   IF EST.RL.DIE.REPEAT<1,COMP,1> # "" AND EST.RL.DIE.NO.ACR<1,COMP,1> # "" AND EST.RL.DIE.NO.ARD<1,COMP,1> # "" THEN
      VAR1 = EST.QTY<1,Y>*(EST.RL.DIE.REPEAT<1,COMP,1>/10000)
      IF EST.RL.DIE.NO.ARD<1,COMP,1>='' THEN
         VAR3 = 1
      END ELSE
         VAR3 = EST.RL.DIE.NO.ARD<1,COMP,1>
      END
      VAR4 = EST.RL.SETS<1,COMP,2>
      IF VAR4 = '' THEN VAR4 = 1
      VAR2=EST.RL.DIE.NO.ACR<1,COMP,1>
* T22172
      VAR2=(VAR2*VAR3)/VAR4
*         VAR2 = VAR2/VAR4
* T22172
*METRIC         BASE.PC = INT((VAR1/VAR2)/1000+.5)
      BASE.LINEAL = INT((VAR1/VAR2)+ .5); * IMPERIAL
      MR.LINEAL=0; PR.SPOIL.LINEAL=0; FIN.SPOIL.LINEAL=0
      CALL EST.RES.CALC.SPOIL(CONO,ACTION,COMP,EST.QTY<1,Y>,BASE.LINEAL,PR.SPOIL.LINEAL,FIN.SPOIL.LINEAL,MR.LINEAL)
      TOT.LINEAL = BASE.LINEAL+MR.LINEAL+PR.SPOIL.LINEAL+FIN.SPOIL.LINEAL
   END ELSE
      TOT.LINEAL = "0"
   END
   RETURN
*
*---- GET INVENTORY PRICE
*
35000 *
   ICOST = ""
   WCNT = DCOUNT(INV.WHSE.CODE,VM)
   FOR WP = 1 TO WCNT
      WHSE = INV.WHSE.CODE<1,WP>
      IWH.ID = CONO:INV.ID:"!":WHSE
      MATREAD IWH.REC FROM INV.WHSE, CONO:INV.ID:"!":WHSE THEN
      END ELSE
         MAT IWH.REC = ""
      END
      SCOST = ""
      BEGIN CASE
         CASE PRICE.FLAG = "L"
            IF IWH.LIST.COST # "" THEN
               SCOST = IWH.LIST.COST
            END
         CASE PRICE.FLAG = "A"
            IF IWH.AVG.COST # "" THEN
               SCOST = IWH.AVG.COST
            END
         CASE PRICE.FLAG = "S"
            IF IWH.STD.COST # "" THEN
               SCOST = IWH.STD.COST
            END
         CASE PRICE.FLAG = "R"
            DIV.POS='' ; FISCAL.FLAG='IC' ; TRAN.PERIOD=''
            CALL GET.LAST.COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
            BEGIN CASE
               CASE ERR.FLG=''
                  SCOST=LAST.PRICE
               CASE ERR.FLG="-1"
                  GOSUB 90000
                  CONTINUE
               CASE ERR.FLG='-2'
                  GOSUB 93000
            END CASE
      END CASE
      BEGIN CASE
         CASE SCOST = ""
         CASE ICOST = ""
            ICOST = SCOST
         CASE SCOST > ICOST
            ICOST = SCOST
      END CASE
   NEXT WP
   UNIT.PR = ICOST
   RETURN
*
*--- Get Line No to Change
*
40000*
   IF CNT=1 THEN
      S$VALUE = 1
   END ELSE
      S$DATA(22)<S$SCR> = ""
      SCREEN FIELD;;22
      S$MINV = START.REF.NO
      S$MAXV = S$MINV + LINE.COUNT - 1
      IF S$MAXV > CNT THEN S$MAXV = CNT
      SCREEN INPUT;;22
   END
   RETURN
*
6000*
   GOSUB 80000
7000*
* T22078
* T25442 v
   IF ACTION = "M" THEN
      MAINT.FLAG = "X"
   END   ;*T25442
   SCREEN FIELD;;21
   SCREEN INPUT;;21;GOTO 99990
*     END ELSE
*        PMSG='(C)ntr, (D)ies, (S)tocks, (MR)eady, (N)ext, (E)xit:'
*        X=0;Y=22;TYP=1;O.R='R';MAXL=2
*        X=0;Y=22;TYP=11;O.R='R';MAXL=2     ;*T25236
*        VALDAT="C":VM:"D":VM:"S":VM:"MR":VM:"N":VM:"E"
*        CALL EDIT.SUB1 (MAT EDIT.COM)
*        P_X  = 0;P_Y = 22;P_VALUE = "";P_OPT = "CL"
*        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*        S$VALUE = VALUE
*        VALUE = ""
*     END
* T25442 ^
* T22078
   BEGIN CASE
      CASE S$VALUE='MR'
         S$SCR=S$SCR+1
         CALL EST.RES.PROD.SUB3(CONO,ACTION,EST.KEY,COMP,STATUS)
*            SCREEN CLOSE
         S$SCR=S$SCR-1
         SCREEN FORMAT
         GOSUB 80000
      CASE S$VALUE = "N"
         STATUS = "P2"
         GOTO 99999
      CASE S$VALUE[1,1] = "P"
         PNUM = S$VALUE[2,1]
         IF ACTION = "M" AND EST.DEPT = "" AND PNUM > "2" THEN
            ERRMSG = "Invalid option while in entry mode. Try again!"
            GOSUB 90000
         END ELSE
            STATUS = S$VALUE
            GOTO 99999
         END
      CASE S$VALUE = 'C' OR S$VALUE = 'c'
         GOTO 50000
      CASE S$VALUE = 'D' OR S$VALUE = 'd'
         GOTO 51000
      CASE S$VALUE = 'S' OR S$VALUE = 's'
         GOTO 52000
      CASE S$VALUE = 'E' OR S$VALUE='e' OR S$VALUE='END'
         GOTO 99999
      CASE 1
         IF ACTION = 'M' THEN  ;*T25442
            ON S$VALUE GOTO 1000,1100,1200,1300,1500
         END  ;*T25442
   END CASE
   GOTO 7000
*
*--- Load Screen Data Routines
*
80000*
*  S$DATA(1)<S$SCR> = DATE()
   S$DATA(3)<S$SCR> = EST.RL.JOB.TYPE<1,COMP,1>
   S$DATA(7)<S$SCR> = EST.RL.PREV.EST<1,COMP,1>
   S$DATA(4)<S$SCR> = EST.RL.TYPE.CHG<1,COMP,1>
   S$DATA(9)<S$SCR> = EST.RL.DIM.AC<1,COMP,1>
*T26806 v
*  S$DATA(8)<S$SCR> = EST.RL.DIM.AR<1,COMP,1>
   EST.RL.LBL.REPEAT = EST.RL.GAP<1,COMP,1> + EST.RL.DIM.AR<1,COMP,1>
   S$DATA(8)<S$SCR,1> = EST.RL.DIM.AR<1,COMP,1>
   S$DATA(8)<S$SCR,2> = EST.RL.LBL.REPEAT
*T26806 ^
   S$DATA(39)<S$SCR> = EST.RL.SETS<1,COMP,1>
   S$DATA(40)<S$SCR> = EST.RL.SETS<1,COMP,2>
   S$DATA(30)<S$SCR> = EST.RL.CPY.DIR<1,COMP,1>
*T21704      S$DATA(41)<S$SCR> = EST.RL.CPY.DIR<1,COMP,2>
   S$DATA(53)<S$SCR> = EST.RL.CPY.DIR<1,COMP,2>  ;*T21704
   S$DATA(54)<S$SCR> = EST.RL.GAP<1,COMP,1>
   S$DATA(58)<S$SCR> = EST.RL.DIE.SHAPE<1,COMP,1>
   S$DATA(60)<S$SCR> = EST.RL.GAP.CALC<1,COMP,1>
   READ DESC FROM ESTIMATE.RES.SHAPE, CONO:EST.RL.DIE.SHAPE ELSE
      DESC = ""
   END
   S$DATA(59)<S$SCR>=DESC
   S$VAL=1
   S$CNT=1
   SCREEN DISPLAY;;ALL
*T26806 v
   S$VAL = 1
   SCREEN DISPLAY;;8
   S$VAL = 2
   SCREEN DISPLAY;;8
   S$VAL = 1
*T26806 ^
   HOLD.REF.NO = REF.NO
   IF CCTR.OPT = "" THEN REF.NO = CCTR.REF.NO
   GOSUB 80100 ;* Display Cost Centers
   IF DIE.OPT = "" THEN REF.NO = DIE.REF.NO
   GOSUB 81000 ;* Display Dies
   IF PROD.OPT = "" THEN REF.NO = PROD.REF.NO
   GOSUB 82000 ;* Display Stock Details
   REF.NO = HOLD.REF.NO
   RETURN
*
*--- Load Cost Center Details
*
80100*
   CCTR.CNT=DCOUNT(EST.RL.PRESS.CCTR<1,COMP>,SVM)
   FOR I=1 TO CCTR.CNT
      S$DATA(5)<S$SCR,I> = EST.RL.PRESS.CCTR<1,COMP,I>
      MATREAD CCTR.REC FROM COST.CNTR,CONO:EST.RL.PRESS.CCTR<1,COMP,I> ELSE
         CCTR.DESC = "*** Unknown Cost Center ***"
      END
      S$DATA(6)<S$SCR,I> = CCTR.DESC
      READV RF.TYPE FROM EQUIPMENT,CONO:EST.RL.PRESS.CCTR<1,COMP,I>,14 ELSE RF.TYPE='F'
      S$DATA(2)<S$SCR,I> = EST.PROD.COLORS.1<1,COMP,I>
      S$DATA(10)<S$SCR,I> = EST.RL.BACKPRINT<1,COMP,I>
      S$DATA(11)<S$SCR,I> = EST.RL.ADHESIVE<1,COMP,I>
      S$DATA(12)<S$SCR,I> = EST.RL.FULL.SPOT<1,COMP,I>
      S$DATA(13)<S$SCR,I> = EST.RL.FOIL<1,COMP,I>
      S$DATA(55)<S$SCR,I> = EST.RL.FOIL.SPEED<1,COMP,I>
      S$DATA(18)<S$SCR,I> = EST.RL.OVERLAM<1,COMP,I>
      S$DATA(20)<S$SCR,I> = EST.RL.KINDS<1,COMP,I>
      S$DATA(33)<S$SCR,I> = EST.RL.PLATE.CHANGES<1,COMP,I>
      S$DATA(34)<S$SCR,I> = EST.RL.COLOR.CHANGES<1,COMP,I>
      S$DATA(50)<S$SCR,I> = EST.RL.SPROCKET<1,COMP,I>
      S$DATA(51)<S$SCR,I> = EST.RL.COL.MIX<1,COMP,I>
      S$DATA(14)<S$SCR,I> = EST.RL.SSCREEN<1,COMP,I>
      S$DATA(15)<S$SCR,I> = EST.RL.GRAVURE<1,COMP,I>
      S$DATA(17)<S$SCR,I> = EST.RL.EMBOSS<1,COMP,I>
   NEXT I
80500*
   START.REF.NO=1+INT((REF.NO-1)/CCTR.LINE.COUNT)*CCTR.LINE.COUNT
   CCTR.REF.NO=START.REF.NO
   S$VAL=START.REF.NO
   S$CNT=CCTR.CNT
   SCREEN MULTI;;C;16;5;6;2;10;11;12;13;55;14;15;17;18;20;33;34;51;50
   RETURN
*
*--- Display Die Details
*
81000*
   DIE.CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
   FOR I = 1 TO DIE.CNT
      S$DATA(23)<S$SCR,I> = EST.RL.DIE<1,COMP,I>
      S$DATA(24)<S$SCR,I> = EST.RL.DIE.REPEAT<1,COMP,I>
      S$DATA(38)<S$SCR,I>=EST.RL.DIETYPE<1,COMP,I>
      S$DATA(25)<S$SCR,I> = EST.RL.DIE.NO.ACR<1,COMP,I>
      S$DATA(26)<S$SCR,I> = EST.RL.DIE.NO.ARD<1,COMP,I>
      S$DATA(27)<S$SCR,I> = EST.RL.DIE.CYL.ID<1,COMP,I>
      S$DATA(36)<S$SCR,I> = EST.RL.PRINTGEARS<1,COMP,I>
      S$DATA(37)<S$SCR,I> = EST.RL.PRINTAR<1,COMP,I>
      S$DATA(52)<S$SCR,I> = EST.RL.DIE.PRESS.NO<1,COMP,I>
      IF EST.RL.DIE<1,COMP,I> # '#' THEN
         READV DIE.DESC FROM ESTIMATE.RES.DIE,CONO:EST.RL.DIE<1,COMP,I>,1 ELSE
            DIE.DESC='*** Missing Die ***'
         END
      END ELSE
         IF EST.RL.BUTT<1,COMP,I>='Y' THEN
            DIE.DESC='** Butt Cut **'
         END ELSE
            DIE.DESC = 'New Die Required'
         END
      END
      S$DATA(32)<S$SCR,I> = DIE.DESC
   NEXT I
81500*
   START.REF.NO=1+INT((REF.NO-1)/DIE.LINE.COUNT)*DIE.LINE.COUNT
   DIE.REF.NO=START.REF.NO
   S$VAL=START.REF.NO
   S$CNT=DIE.CNT
   SCREEN MULTI;;C;35;52;23;32;38;24;25;26;27;36;37
   RETURN
*
*--- Display Stock Details
*
82000*
   PROD.CNT = DCOUNT(EST.PROD.OS.USAGE<1,COMP>,SVM)
   IF PROD.CNT = 0 THEN PCNT = 1 ELSE PCNT = PROD.CNT
   FOR I = 1 TO PCNT
      S$DATA(29)<S$SCR,I> = EST.PROD.OS.USAGE<1,COMP,I>
      S$DATA(31)<S$SCR,I> = EST.PROD.OS.PROD<1,COMP,I>
      S$DATA(43)<S$SCR,I> = EST.RL.ACT.WIDTH<1,COMP,I>
      S$DATA(41)<S$SCR,I> = EST.PROD.OS.DESC<1,COMP,I>
      S$DATA(42)<S$SCR,I> = EST.PROD.OS.WIDTH<1,COMP,I>
      S$DATA(44)<S$SCR,I>=EST.RL.PAP.CAL<1,COMP,I>
      S$DATA(45)<S$SCR,I>=EST.RL.PAP.GSM<1,COMP,I>;*T21556
      S$DATA(49)<S$SCR,I>=EST.PROD.INV.ID<1,COMP,I>
   NEXT I
   S$DATA(57)<S$SCR> = PROD.CNT
   SCREEN DISPLAY;;57
*T24205 v
   SCREEN DISPLAY;;41
*T24205 ^
82500*
   START.REF.NO=1+INT((REF.NO-1)/PROD.LINE.COUNT)*PROD.LINE.COUNT
   PROD.REF.NO=START.REF.NO
   S$VAL=START.REF.NO
   S$CNT=PROD.CNT
   SCREEN MULTI;;C;28;29;31;41;42;43;44;45;49
   QTY.REF.NO=1
*
*---- Scroll Paper MSI and Price
*
83000 *
   MSI.CNT = DCOUNT(EST.RL.PAP.MSI<1,COMP,PROD.REF.NO>,"!")
   IF MSI.CNT = 0 THEN MCNT = 1 ELSE MCNT = MSI.CNT
   FOR I = 1 TO MCNT
      TOT.MSI = FIELD(EST.RL.PAP.MSI<1,COMP,PROD.REF.NO>,"!",I)
      UNIT.PR = FIELD(EST.RL.PAP.PRICE<1,COMP,PROD.REF.NO>,"!",I)
      S$DATA(46)<S$SCR,I> = TOT.MSI
      S$DATA(47)<S$SCR,I>=UNIT.PR
      S$DATA(48)<S$SCR,I>=INT((TOT.MSI * (UNIT.PR/100))+.5)
   NEXT I
   S$VAL = QTY.REF.NO
   S$CNT = MSI.CNT
   SCREEN MULTI;;C;1;46;47;48
   RETURN
*
*-ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*--- Check if Press Id's Have Changed
*
*
*-END OF PROGRAM
*
99999*
*
*--- Check That Press & Die Details Have Been Entered
*
   IF EST.RL.DIE.REPEAT<1,COMP,1>='' OR EST.RL.PRESS.CCTR<1,COMP,1>='' THEN
*        ERRMSG='Must Have PRESS and DIE Details Before Exiting...'
      ERRMSG='Warning, Not all PRESS and DIE details have been entered'
      GOSUB 90000
*        GOTO 7000
   END
*
* --- Check that Stock has been Entered
*
   IF EST.PROD.OS.USAGE<1,COMP>='' THEN
*        ERRMSG='Must Have STOCK Details Before Exiting...'
      ERRMSG='Warning, Not all STOCK details have been entered'
      GOSUB 90000
*        GOTO 7000
   END
*T21569 v
*
* --- Check that die cost centers exist in press detail
*
   DIE.CNT = DCOUNT(EST.RL.DIE<1,COMP>,SVM)
   FOR I = 1 TO DIE.CNT
      LOCATE EST.RL.DIE.PRESS.NO<1,COMP,I> IN EST.RL.PRESS.CCTR<1,COMP>,1 SETTING FND ELSE
         ERRMSG='Warning, Die cost center ':EST.RL.DIE.PRESS.NO<1,COMP,I>:' not defined in Press Details.'
         GOSUB 90000
*        GOTO 7000
      END
   NEXT I
*T21569 ^
*
*
*T24210 v
*
   IF EST.RL.DIE<1,1> # "#" THEN
      MATREAD RLDIE.REC FROM ESTIMATE.RES.DIE,CONO:EST.RL.DIE<1,1,1> THEN
         IF RLDIE.SHAPE # EST.RL.DIE.SHAPE THEN
            ERRMSG = 'Die shape ':RLDIE.SHAPE:' does not match Estimate shape ':EST.RL.DIE.SHAPE
            GOSUB 90000
         END
      END
   END
*
*T24210 ^
   SCREEN CLEAR;;D
99990 *
   SCREEN CLOSE
   RETURN
END
