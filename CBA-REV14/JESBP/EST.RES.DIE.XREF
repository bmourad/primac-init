      SUBROUTINE EST.RES.DIE.XREF(CONO, TYPE, ACROSS, AROUND, SELECTION,FGEAR,RGEAR,EST.DIE.SHAPE)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RES.DIE.XREF
*
* AUTHOR   - CURTIS WILLIAMS, PACRIM SOFTWARE
*
* DATE     - 22/10/92
*
* DESCRIPTION
*
* This subroutine displays all DIE XREF  for specified type
*
* Modified - G Jarvis 11 Nov 1994
*            Added Die Shape & Correct Gearset Code Matching
*T21495 diane 01/21/1997 * READ ALL DIES IN XREF FILE
*T24210 cm 08/12/1999 * Only display dies that have the same die shape
*                       as the die shape in the current estimate.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>JES.CPYLIB>ESTIMATE.RES.DIE
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      OPEN "","ESTIMATE.RES.DIE.XREF" TO ESTIMATE.RES.DIE.XREF ELSE
         ERRMSG = "Cannot open ESTIMATE.RES.DIE.XREF file"
         GOSUB 90000
         GOTO 99999
      END
      OPEN "","ESTIMATE.RES.DIE" TO ESTIMATE.RES.DIE ELSE
         ERRMSG = "Cannot open ESTIMATE.RES.DIE file"
         GOSUB 90000
         GOTO 99999
      END
      SELECTION = ""
      DIM TEMP.REC(15)
      EQU TEMP.DIE       TO TEMP.REC(1)
      EQU TEMP.DESC      TO TEMP.REC(2)
      EQU TEMP.ACROSS    TO TEMP.REC(3)
      EQU TEMP.AROUND    TO TEMP.REC(4)
      EQU TEMP.REPEAT    TO TEMP.REC(5)
      EQU TEMP.AC        TO TEMP.REC(6)
      EQU TEMP.AR        TO TEMP.REC(7)
      EQU TEMP.CYLINDER  TO TEMP.REC(8)
      EQU TEMP.OUT       TO TEMP.REC(9)
      EQU TEMP.DMG       TO TEMP.REC(10)
      EQU TEMP.CNR       TO TEMP.REC(11)
      EQU TEMP.SHP       TO TEMP.REC(12)
      EQU TEMP.BLANK     TO TEMP.REC(13)
*
* If type = 'B' then change request to 'F'
*
      IF TYPE='B' THEN TYPE='F'
      IF TYPE='' THEN TYPE='F'
*
      SCREEN DEFINE;EST.RES.DIE.XREF
      SCREEN CLEAR;EST.RES.DIE.XREF;D
      SCREEN FORMAT
      SCREEN COUNT;EST.RES.DIE.XREF;6
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      ACROSS.P.N = 625
      AROUND.P.N = 625
*
*---- MAIN PROCESSING
*
100*
      CURR.REF.NO = ""
      S$DATA(1)<S$SCR> = TYPE
      S$DATA(2)<S$SCR> = ACROSS
      S$DATA(3)<S$SCR> = ACROSS.P.N
      S$DATA(4)<S$SCR> = AROUND
      S$DATA(5)<S$SCR> = AROUND.P.N
      SCREEN DISPLAY;EST.RES.DIE.XREF;ALL
      REF.NO = 1
      GOSUB 10000
      GOSUB 50000
*
*---- GET OPERATOR REPLY
*
500*
      SCREEN FIELD;EST.RES.DIE.XREF;17
      SCREEN INPUT;EST.RES.DIE.XREF;17
      OPT = S$VALUE
      BEGIN CASE
      CASE OPT = "C"
         FOR X = 1 TO 5 UNTIL S$VALUE = "END"
            ON X GOSUB 1000,2000,3000,4000,5000
         NEXT X
         GOSUB 10000
         GOSUB 50000
      CASE OPT # "" AND NUM(OPT)
         IF OPT < CURR.REF.NO OR OPT > LINE.CNT OR OPT > (CURR.REF.NO + LINE.COUNT - 1) THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
         END ELSE
            SELECTION = TEMP.DIE<1,OPT>
            GOTO 99999
         END
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      END CASE
      GOTO 500
*
*---- Die Type
*
1000*
      SCREEN FIELD;EST.RES.DIE.XREF;1
      SCREEN INPUT;EST.RES.DIE.XREF;1;RETURN
      TYPE = S$VALUE
      RETURN
*
*---- Dim Across
*
2000*
      SCREEN FIELD;EST.RES.DIE.XREF;2
      SCREEN INPUT;EST.RES.DIE.XREF;2;RETURN
      ACROSS = S$VALUE
      RETURN
*
*---- Across +/-
*
3000*
      SCREEN FIELD;EST.RES.DIE.XREF;3
      SCREEN INPUT;EST.RES.DIE.XREF;3;RETURN
      ACROSS.P.N = S$VALUE
      RETURN
*
*---- Dim Around
*
4000*
      SCREEN FIELD;EST.RES.DIE.XREF;4
      SCREEN INPUT;EST.RES.DIE.XREF;4;RETURN
      AROUND = S$VALUE
      RETURN
*
*---- Around +/-
*
5000*
      SCREEN FIELD;EST.RES.DIE.XREF;5
      SCREEN INPUT;EST.RES.DIE.XREF;5;RETURN
      AROUND.P.N = S$VALUE
      RETURN
*
*---- BUILD DISPLAY
*
10000*
      MAT TEMP.REC = ""
      LC = 0
      START.AC = INT((ACROSS-ACROSS.P.N)/10000)
      END.AC   = INT((ACROSS+ACROSS.P.N)/10000)
      START.AR = INT((AROUND-AROUND.P.N)/10000)
      END.AR   = INT((AROUND+AROUND.P.N)/10000)
      FOR AC = START.AC TO END.AC
         FOR AR = START.AR TO END.AR
            KEY = CONO:TYPE:AC:"*":AR
            READ DIE.KEY FROM ESTIMATE.RES.DIE.XREF, KEY ELSE GOTO 10099
            DIE.CNT = DCOUNT(DIE.KEY,VM)
            FOR DK = 1 TO DIE.CNT
              BEGIN CASE
               CASE TYPE='F'
                IF DIE.KEY<1,DK>[1,2]#FGEAR THEN GOTO 10001
               CASE TYPE='R'
*C30237         IF DIE.KEY<1,DK>[1,2]#RGEAR<1,1> THEN  GOTO 10001
*C30237 Need to make it work if more than one RGEAR - 2 is the max
                IF DIE.KEY<1,DK>[1,2]#RGEAR<1,1> THEN 
                  IF DIE.KEY<1,DK>[1,2]#RGEAR<1,2> THEN GOTO 10001
                END
               CASE 1
                GOTO 10001
              END CASE
*               IF DIE.KEY<1,DK>[1,2]#FGEAR AND DIE.KEY<1,DK>[1,2]#RGEAR AND FGEAR#'' AND RGEAR#'' THEN GOTO 10001
*T21495               MATREAD RLDIE.REC FROM ESTIMATE.RES.DIE, CONO:DIE.KEY<1,DK> ELSE GOTO 10099
               MATREAD RLDIE.REC FROM ESTIMATE.RES.DIE, CONO:DIE.KEY<1,DK> ELSE GOTO 10001     ;* T21495
*C30237 v  Make sure the die sizes are within the range selected.
               S.AC = ACROSS-ACROSS.P.N
               E.AC = ACROSS+ACROSS.P.N
               S.AR = AROUND-AROUND.P.N
               E.AR = AROUND+AROUND.P.N
               IF RLDIE.SZ.ACROSS < S.AC THEN GOTO 10001
               IF RLDIE.SZ.ACROSS > E.AC THEN GOTO 10001
               IF RLDIE.SZ.AROUND < S.AR THEN GOTO 10001
               IF RLDIE.SZ.AROUND > E.AR THEN GOTO 10001
*C30237 ^
*T24210 v
               IF RLDIE.SHAPE # EST.DIE.SHAPE THEN GOTO 10001
*T24210 ^
               LC = LC + 1
               TEMP.DIE<1,LC> = DIE.KEY<1,DK>
               TEMP.DESC<1,LC> = RLDIE.DESC
               TEMP.ACROSS<1,LC> = RLDIE.SZ.ACROSS
               TEMP.AROUND<1,LC> = RLDIE.SZ.AROUND
               TEMP.REPEAT<1,LC> = RLDIE.REPEAT
               TEMP.AC<1,LC> = RLDIE.NO.ACROSS
               TEMP.AR<1,LC> = RLDIE.NO.AROUND
               TEMP.CYLINDER<1,LC> = RLDIE.CYLINDER
               TEMP.OUT<1,LC> = RLDIE.RETOOL
               TEMP.DMG<1,LC> = RLDIE.DAMAGED
               TEMP.CNR<1,LC> = RLDIE.CORNERS
               TEMP.SHP<1,LC> = RLDIE.SHAPE
               TEMP.BLANK<1,LC> = RLDIE.BLANK
10001 *
            NEXT DK
10099    NEXT AR
      NEXT AC
      LINE.CNT = DCOUNT(TEMP.DIE<1>,VM)
*
*---- ASSIGN S$DATA

20000*
      S$DATA(7)<S$SCR> = TEMP.DIE
      S$DATA(8)<S$SCR> = TEMP.DESC
      S$DATA(9)<S$SCR> = TEMP.ACROSS
      S$DATA(10)<S$SCR> = TEMP.AROUND
      S$DATA(11)<S$SCR> = TEMP.REPEAT
      S$DATA(12)<S$SCR> = TEMP.AC
      S$DATA(13)<S$SCR> = TEMP.AR
      S$DATA(14)<S$SCR> = TEMP.CYLINDER
      S$DATA(15)<S$SCR> = TEMP.OUT
      S$DATA(16)<S$SCR> = TEMP.DMG
      S$DATA(18)<S$SCR> = TEMP.CNR
      S$DATA(19)<S$SCR> = TEMP.SHP
      S$DATA(20)<S$SCR> = TEMP.BLANK
      CURR.REF.NO=''
      RETURN
*
*---- SCROLL MULTI-LINE DATA
*
50000*
      START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = DCOUNT(S$DATA(7)<S$SCR>,VM)
      SCREEN MULTI;EST.RES.DIE.XREF;C;6;7;8;9;10;11;12;13;14;15;16;18;19;20
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
*      SCREEN CLEAR;EST.RES.DIE.XREF
      RETURN
   END
