*COPY>CPYLIB>SCOMMON1
*********************************************************************
* REVISION    - [10.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - RESBP
* PROGRAM     - EST.RES.EQUIP.MAINT
* BY          - RICK BROWN
* DATE        - 10/05/94
* DESCRIPTION - This program maintains the Roll Equipment.
*T21954 diane 05/21/1997 * Prompt for Delete message
*T23088 markt 07/30/1998 * Correct data restore after 'E' from X-REF in
*                          fields 10,11,12 for Roll Label Press.
*T26470 cmykleb 03/05/2002 * Change the Print Gearset code field to not
*                            be a required field and also change how the
*                            x-ref is accessed on this field.
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>ESTIMATE.RES.GEARSET
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SET SYSCOM
*
  SYS.TYPE=1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN 'EQUIPMENT' TO EQUIPMENT ELSE
    ERRMSG = 'CANNOT OPEN EQUIPMENT FILE'
    GOTO 93000
  END
  OPEN '','ESTIMATE.RES.GEARSET' TO ESTIMATE.RES.GEARSET ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.GEARSET FILE'
    GOTO 93000
  END
  OPEN 'COST.CNTR' TO COST.CNTR ELSE
    ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
    GOTO 93000
  END
  OPEN 'COMPANY' TO COMPANY ELSE
    ERRMSG = 'CANNOT OPEN COMPANY FILE'
    GOTO 93000
  END
  OPEN 'CONTROL' TO CONTROL ELSE
    ERRMSG = 'CANNOT OPEN CONTROL FILE'
    GOTO 93000
  END
  OPEN 'JES.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'CANNOT OPEN JES.SCREENS FILE'
    GOTO 93000
  END
  OPEN 'PREFIX' TO PREFIX ELSE
    ERRMSG = 'CANNOT OPEN PREFIX FILE'
    GOTO 93000
  END
  OPEN 'XREF.DATA' TO XREF.DATA ELSE
    ERRMSG = 'CANNOT OPEN XREF.DATA FILE'
    GOTO 93000
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.RES.EQUIP.MAINT
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
*
*---- MAIN PROCESSING
*
100 *
  SCREEN FORMAT
  CURR.REF.NO = ''
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  SCREEN FIELD;;2
  SCREEN INPUT;;2
  IF S$VALUE = 'END' THEN GOTO 99999
  IF S$VALUE = "???" THEN
    MAT GEN.XREF.REC=''
    GXR.NAME='RES.PRESS.XREF'
    GXR.SRCH.ID = ''
    GXR.FILE = EQUIPMENT
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    S$VALUE=GXR.ID[4,3]
    IF S$VALUE='' THEN GOTO 100
    SCREEN FORMAT
    S$DATA(2)<S$SCR> = S$VALUE
    SCREEN DISPLAY;;2
  END
  EQKEY = CONO:S$VALUE
  NEW.REC = 0
  MATREAD CCTR.REC FROM COST.CNTR, EQKEY ELSE
    ERRMSG = "Item must be a valid cost center"
    GOSUB 91000
    GOTO 100
  END
   * T26126 v
  MATREADU EQUIPMENT.REC FROM EQUIPMENT,EQKEY LOCKED
    ERRMSG = 'ROLL LABEL PRESS record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 100 
  END ELSE
   * T26126 ^
    MAT EQUIPMENT.REC = ''
    NEW.REC = 1
  END
  IF EQP.TYPE # "" AND EQP.TYPE # "40" THEN
    RELEASE
    ERRMSG = "Item has already been defined as other than a roll label press"
    GOSUB 91000
    GOTO 100
  END
  EQP.TYPE = 40
  IF NEW.REC THEN
    S$DATA(27)<S$SCR> = CCTR.DESC
    SCREEN DISPLAY;;27
    FOR FLD = 1 TO 12
      ON FLD GOSUB 10100,10200,10210,10220,10230,10240,10300,10400,10600,10700,10800,10900
      IF S$VALUE = 'END' THEN 
        SCREEN CLEAR
        RELEASE
        GOTO 100
      END
    NEXT FLD
  END ELSE
    GOSUB 80000
    SCREEN DISPLAY;;ALL
  END
*
*---- ENTER PROMPT
*
500 *
  SCREEN FIELD;;21
  SCREEN INPUT;;21
  OPTION = S$VALUE
  BEGIN CASE
    CASE NUM(OPTION)
      ON OPTION GOSUB 10100,10200,10210,10220,10230,10240,10300,10400,10600,10700,10800,10900
    CASE OPTION = 'D'
510 *
* P_X  = 0 ; P_Y = 23 ; P_VALUE = 'Are you sure you want to Delete (Y/N)? ' ; P_OPT = ""
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*   INPUT ANS:
* P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      SCREEN FIELD;;45
      SCREEN INPUT;;45
      BEGIN CASE
        CASE S$VALUE = 'Y'
          DELETE EQUIPMENT,EQKEY
          SCREEN CLEAR
          RELEASE
          GOTO 100
        CASE S$VALUE = 'N'
          GOTO 500
        CASE 1
          GOTO 510
      END CASE
    CASE OPTION = 'E' OR OPTION = 'END'
      SCREEN CLEAR
      RELEASE
      GOTO 100
    CASE OPTION = 'F'
      MATWRITE EQUIPMENT.REC ON EQUIPMENT,EQKEY
      SCREEN CLEAR
      RELEASE
      GOTO 100
  END CASE
  GOTO 500
*
*---- REPEAT
*
10100 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  EQP.RES.PRESS.REPEAT.MIN = S$VALUE
  SCREEN FIELD;;25
  SCREEN INPUT;;25;RETURN
  EQP.RES.PRESS.REPEAT.MAX = S$VALUE
  RETURN
*
*---- WIDTH
*
10200 *
  SCREEN FIELD;;31
  SCREEN INPUT;;31;RETURN
  EQP.RES.PRESS.WIDTH.MIN = S$VALUE
  SCREEN FIELD;;26
  SCREEN INPUT;;26;RETURN
  EQP.RES.PRESS.WIDTH.MAX = S$VALUE
  RETURN
*
*
*   Draw gap minimum
*
10210 *
  SCREEN FIELD;;42
  SCREEN INPUT;;42;RETURN
  EQP.RL.DRAW.GAP.MIN = S$VALUE
  RETURN
*
*--- Gap between (Across)
*
10220 *
*
  SCREEN FIELD;;43
  SCREEN INPUT;;43;RETURN
  EQP.RL.WIDTH.GAP = S$VALUE
  RETURN
*
*--- Trim Min
*
10230 *
*
  SCREEN FIELD;;44
  SCREEN INPUT;;44;RETURN
  EQP.RL.TRIM.MIN = S$VALUE
  RETURN
*
*--- Die Blank
*
10240 *
  SCREEN FIELD;;10
  SCREEN INPUT;;10;RETURN
  EQP.RES.PRESS.DIE.BLANK = S$VALUE
  SCREEN FIELD;;11
  SCREEN INPUT;;11;RETURN
  EQP.RES.PRESS.BLANK.MAX = S$VALUE
  RETURN
*
*---- # OF COLOR UNITS
*
10300 *
  SCREEN FIELD;;28
  SCREEN INPUT;;28;RETURN
  EQP.RES.PRESS.COLOR.UNITS = S$VALUE
  RETURN
*
*---- # OF DIE UNITS
*
10400 *
  SCREEN FIELD;;5
  SCREEN INPUT;;5;RETURN
  EQP.RES.PRESS.DIE.UNITS = S$VALUE
  RETURN
*
*---- Rotary or Flatbed Die Type
*
10600 *
  SCREEN FIELD;;35
  SCREEN INPUT;;35;RETURN
  EQP.RL.PRESS.DIE.TYPE = S$VALUE
  BEGIN CASE
    CASE EQP.RL.PRESS.DIE.TYPE = "F"
      S$DATA(36)<S$SCR>=''
      EQP.RL.PRESS.GSROTARY=""
    CASE EQP.RL.PRESS.DIE.TYPE = "R"
      S$DATA(38)<S$SCR>=''
      EQP.RL.PRESS.GSFBED=''
  END CASE
  SCREEN DISPLAY;;ALL
  RETURN
*
*---- Rotary Gearset Code
*
10700 *
  SCREEN FIELD;;36
  IF EQP.RL.PRESS.DIE.TYPE='B' OR EQP.RL.PRESS.DIE.TYPE='R' THEN
    SCREEN INPUT;;36
    BEGIN CASE
      CASE S$VALUE = "END"
        S$DATA(36)<S$SCR> = EQP.RL.PRESS.GSROTARY
        SCREEN DISPLAY;;36
        RETURN
      CASE S$VALUE = ""
        GXR.NAME = "ESTIMATE.RES.GEARSET"
        GXR.FILE = ESTIMATE.RES.GEARSET
        GXR.SORT.FILE = ESTIMATE.RES.GEARSET
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        SCREEN FORMAT
***** T23088
**    S$DATA(36)<S$SCR> = GXR.ID
        IF GXR.ID = "" THEN
          S$DATA(36)<S$SCR> = EQP.RL.PRESS.GSROTARY
        END ELSE
          S$DATA(36)<S$SCR> = GXR.ID
        END
***** END T23088
        SCREEN DISPLAY;;ALL
        IF GXR.ID = "" THEN GOTO 10700
        S$VALUE=GXR.ID
    END CASE
    MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:S$VALUE ELSE
      ERRMSG = "Invalid gearset code"; GOSUB 91000
      GOTO 10700
    END
    IF ESTGS.IMPRESS # "" THEN
      ERRMSG = "This is not a rotary gearset code"; GOSUB 91000
      GOTO 10700
    END
    EQP.RL.PRESS.GSROTARY=S$VALUE
    S$DATA(37)<S$SCR>=ESTGS.DESC
    SCREEN DISPLAY;;37
  END ELSE
    EQP.RL.PRESS.GSROTARY=''
    S$DATA(36)<S$SCR>=''
    S$DATA(37)<S$SCR>=''
    SCREEN DISPLAY;;36
    SCREEN DISPLAY;;37
  END
  RETURN
*
*---- Flatbed Gearset Code
*
10800 *
  SCREEN FIELD;;38
  IF EQP.RL.PRESS.DIE.TYPE='B' OR EQP.RL.PRESS.DIE.TYPE='F' THEN
    SCREEN INPUT;;38
    BEGIN CASE
      CASE S$VALUE = "END"
        S$DATA(38)<S$SCR> = EQP.RL.PRESS.GSFBED
        SCREEN DISPLAY;;38
        RETURN
      CASE S$VALUE = ""
        GXR.NAME = "ESTIMATE.RES.GEARSET"
        GXR.FILE = ESTIMATE.RES.GEARSET
        GXR.SORT.FILE = ESTIMATE.RES.GEARSET
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        SCREEN FORMAT
***** T23088
**    S$DATA(38)<S$SCR> = GXR.ID
        IF GXR.ID = "" THEN
          S$DATA(38)<S$SCR> = EQP.RL.PRESS.GSFBED
        END ELSE
          S$DATA(38)<S$SCR> = GXR.ID
        END
***** END T23088
        SCREEN DISPLAY;;ALL
        IF GXR.ID = "" THEN GOTO 10800
        S$VALUE=GXR.ID
    END CASE
    MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:S$VALUE ELSE
      ERRMSG = "Invalid gearset code"; GOSUB 91000
      GOTO 10800
    END
    IF ESTGS.IMPRESS = "" THEN
      ERRMSG = "This is not a flatbed gearset code"; GOSUB 91000
      GOTO 10800
    END
    EQP.RL.PRESS.GSFBED=S$VALUE
    S$DATA(39)<S$SCR>=ESTGS.DESC
    SCREEN DISPLAY;;39
  END ELSE
    EQP.RL.PRESS.GSFBED=''
    S$DATA(38)<S$SCR>=''
    S$DATA(39)<S$SCR>=''
    SCREEN DISPLAY;;38
    SCREEN DISPLAY;;39
  END
  RETURN
*
*---- Print Gearset Code
*
10900 *
  SCREEN FIELD;;40
  SCREEN INPUT;;40
  BEGIN CASE
    CASE S$VALUE = "END"
      S$DATA(40)<S$SCR> = EQP.RL.PRESS.GSPRINT
      SCREEN DISPLAY;;40
      RETURN
*T26470 v
*     CASE S$VALUE = ""
    CASE S$VALUE = "???" OR S$VALUE = "??"
      S$VALUE = ""
*T26470 ^
      GXR.NAME = "ESTIMATE.RES.GEARSET"
      GXR.FILE = ESTIMATE.RES.GEARSET
      GXR.SORT.FILE = ESTIMATE.RES.GEARSET
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      SCREEN FORMAT
      IF GXR.ID = "" THEN 
        S$DATA(40)<S$SCR> = EQP.RL.PRESS.GSPRINT
      END ELSE
        S$DATA(40)<S$SCR> = GXR.ID
      END
      SCREEN DISPLAY;;ALL
      IF GXR.ID = "" THEN GOTO 10900
      S$VALUE=GXR.ID
  END CASE
  IF S$VALUE # "" THEN ; * CM
    MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:S$VALUE ELSE
      ERRMSG = "Invalid gearset code"; GOSUB 91000
      GOTO 10900
    END
  END ELSE
    ESTGS.DESC = ""
  END
  EQP.RL.PRESS.GSPRINT=S$VALUE
  S$DATA(41)<S$SCR>=ESTGS.DESC
  SCREEN DISPLAY;;41
*
*---- LOAD SCREEN
*
80000 *
  S$DATA(3)<S$SCR> = EQP.RES.PRESS.REPEAT.MIN
  S$DATA(25)<S$SCR> = EQP.RES.PRESS.REPEAT.MAX
  S$DATA(31)<S$SCR> = EQP.RES.PRESS.WIDTH.MIN
  S$DATA(26)<S$SCR> = EQP.RES.PRESS.WIDTH.MAX
  S$DATA(28)<S$SCR> = EQP.RES.PRESS.COLOR.UNITS
  S$DATA(42)<S$SCR> = EQP.RL.DRAW.GAP.MIN
  S$DATA(43)<S$SCR> = EQP.RL.WIDTH.GAP
  S$DATA(44)<S$SCR> = EQP.RL.TRIM.MIN
  S$DATA(10)<S$SCR> = EQP.RES.PRESS.DIE.BLANK
  S$DATA(11)<S$SCR> = EQP.RES.PRESS.BLANK.MAX
  S$DATA(5)<S$SCR> = EQP.RES.PRESS.DIE.UNITS
  S$DATA(6)<S$SCR> = EQP.RL.PRESS.SPOIL.TBL
  S$DATA(35)<S$SCR> = EQP.RL.PRESS.DIE.TYPE
*
  S$DATA(36)<S$SCR> = EQP.RL.PRESS.GSROTARY
  MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSROTARY ELSE
    MAT ESTGS.REC=''
  END
  S$DATA(37)<S$SCR> = ESTGS.DESC
*
  S$DATA(38)<S$SCR> = EQP.RL.PRESS.GSFBED
  MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSFBED ELSE
    MAT ESTGS.REC=''
  END
  S$DATA(39)<S$SCR> = ESTGS.DESC
*
  S$DATA(40)<S$SCR> = EQP.RL.PRESS.GSPRINT
  MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:EQP.RL.PRESS.GSPRINT ELSE
    MAT ESTGS.REC=''
  END
  S$DATA(41)<S$SCR> = ESTGS.DESC
*
  MATREAD CCTR.REC FROM COST.CNTR,EQKEY ELSE
    MAT CCTR.REC = ''
  END
  S$DATA(27)<S$SCR> = CCTR.DESC
  RETURN
*
*---- SYSCOM MESSAGES
*
91000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
END
