   SUBROUTINE EST.QTY.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
*****************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* Modified version of GEN.XREF.SUB to allow for an (A)ll option in
* estimate qty selection.
*
*T27924 cmykleb 03/22/2004 * Add an (A)ll option to estimate quantity
*                            selection.
*****************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>ROC.H
   DIM S.XRFS.REC(35)
   DIM KSL.DATA(25)
*
*---- Check PC Package
*
   CALL GET.CRTMODE(CRTMODE)
   BEGIN CASE
      CASE CRTMODE = "wIntegrate"
         CALL GXSUB_WTG(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         GOTO 99999
      CASE CRTMODE = "termulator" AND GXR.NAME # 'PC.PORT'     ;*T21177 5-11-98
         CALL GXSUB_TU(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         GOTO 99999
   END CASE
*
*---- Setup SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   SLIST = "" ; SYSLIST= ""
*
*---- Get XREF setup table
*
   PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
   MAINTMODE = 0; MAINTNAME = "_XRF_":PORT.NO:"TBL"
   GXR.ACTION = ""; GXR.ID = ""
   MATREAD XRFS.REC FROM XREF.DATA, GXR.NAME ELSE
      GXR.ACTION = "X"; GXR.NAME = "Error # 001"
      GOTO 99990
   END
   BEGIN CASE
      CASE XRFS.HEADING # ""
      CASE XRFS.LOC = "S"
      CASE GXR.SRCH.ID # ""
      CASE 1
         GXR.ACTION = "X"; GXR.NAME = "Error # 002"
         GOTO 99990
   END CASE
   GOSUB 2100
   IF GXR.ACTION = "X" THEN GOTO 99990
*
*---- Setup EDIT.SUB
*
   MAT EDIT.COM = ""
   TYP = 0; CALL EDIT.SUB1.1(MAT EDIT.COM)
*
*---- Initialization
*
   GOSUB 2200
   IF GXR.ACTION = "X" THEN GOTO 99990
   IF GXR.CO<2> # "" THEN
      XFR.CO = GXR.CO<1>
      DTL.CO = GXR.CO<2>
   END ELSE
      XFR.CO = GXR.CO
      DTL.CO = GXR.CO
   END
   CONOLEN = LEN(DTL.CO)
   CONOPTR = CONOLEN + 1
   OLD.PGNO = 1; OLD.ROW = 0
   GOSUB 3000
   IF GXR.ACTION = "X" THEN GOTO 99990
   CALL TCC.SUB1(PORT.NO,MAT TCC.PORT.REC,MAT TCC.REC,MAT GRAPH.REC,MAT VIDEO.REC,MAT KSEL.REC,MAT HBOX.REC)
   GOSUB 1000
   MORE = 1
   IF KSEL.PORT.TYPE = "STD" THEN GOTO 510
   LOOP
      CALL @KSEL.SUB(MAT TCC.REC, MAT GRAPH.REC, MAT VIDEO.REC, MAT KSEL.REC, MAT KSL.REC, MAT KSL.YX)
      BEGIN CASE
         CASE KSL.SEL = KSL.ESC
            GXR.ACTION = ""
            MORE = 0
         CASE KSL.SEL = KSEL.SEL
            IF XRFS.LOC = 'M' THEN
               GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>
               MORE = 0
            END ELSE
               GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>[CONOPTR,999]
               MORE = 0
            END
         CASE KSL.SEL = "SF"
            GOSUB 1900
         CASE KSL.SEL = "SR"
            GOSUB 1900
         CASE KSL.SEL = "ST"
            GOSUB 1900
         CASE KSL.SEL = "SB"
            GOSUB 1900
         CASE KSL.SEL = "M"
            GOSUB 2000
            IF GXR.ACTION = "X" THEN
               ERRMSG = "Invalid new setup"
               GOSUB 91000; MORE = 0
            END
         CASE KSL.SEL = "MU"
            GOSUB 4000
         CASE NUM(KSL.SEL)
            IF KSL.SEL >= 1 AND KSL.SEL <= LINES THEN
               IF XRFS.LOC = 'M' THEN
                  GXR.ID = KSL.DATA(KSL.ROW)<KSL.COL>
                  MORE = 0
               END ELSE
*T26910 v
*                 GXR.ID = REC.IDS<1,KSL.SEL>[CONOPTR,999]
                  IF XRFS.FST.PAGE = "T" THEN
                     GXR.ID = REC.IDS<1,KSL.SEL>[CONOPTR,999]
                  END ELSE
                     GXR.ID = REC.IDS<1,LINES-KSL.SEL+1>[CONOPTR,999]
                  END
*T26910 ^
                  MORE = 0
               END
            END ELSE
               ERRMSG = "Out of range, please re-enter"
               GOSUB 91000
            END
         CASE 1
            ERRMSG = "Invalid entryy, please re-enter"
            GOSUB 91000
      END CASE
   WHILE MORE DO REPEAT
   BOX.CLEAR = 9
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   GOTO 99990
510*
   LOOP
      X = DX; Y = MSG.ROW; TYP = 1
      O.R = "O"; MAXL = P.LEN
      PMSG = P.MSG
      CALL EDIT.SUB1.1(MAT EDIT.COM)
      OPT = VALUE
      BEGIN CASE
         CASE OPT = "E" OR OPT = "END"
            GXR.ACTION = ""
            MORE = 0
         CASE KSL.PAGES = 1 AND (OPT = "" OR OPT = "S" OR OPT = "SF" OR OPT = "SR" OR OPT = "ST" OR OPT = "SB")
         CASE OPT = "" OR OPT = "S" OR OPT = "SF"
            KSL.PGNO = KSL.PGNO + 1
            IF KSL.PGNO > KSL.PAGES THEN KSL.PGNO = 1
            GOSUB 1900
         CASE OPT = "SR"
            KSL.PGNO = KSL.PGNO - 1
            IF KSL.PGNO < 1 THEN KSL.PGNO = KSL.PAGES
            GOSUB 1900
         CASE OPT = "ST"
            IF KSL.PGNO > 1 THEN
               KSL.PGNO = 1
               GOSUB 1900
            END
         CASE OPT = "SB"
            IF KSL.PGNO # KSL.PAGES THEN
               KSL.PGNO = KSL.PAGES
               GOSUB 1900
            END
         CASE OPT[1,1] = "S" AND NUM(OPT[2,99])
            LN.NO = OPT[2,99] + 0
            BEGIN CASE
               CASE LN.NO < 1 OR LN.NO > LINES
                  ERRMSG = "** Invalid selection **"
                  GOSUB 91000
               CASE KSL.PGNO = INT(LN.NO / PAGE.SIZE + .99)
               CASE 1
                  KSL.PGNO = INT(LN.NO / PAGE.SIZE + .99)
                  GOSUB 1900
            END CASE
*T27924 v
         CASE OPT = "A"
            GXR.ACTION = "ALL"
            MORE = 0
*T27924 ^
         CASE NOT(NUM(OPT))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE OPT < START.LINE OR OPT > LAST.LINE
            ERRMSG = "Out of range, please re-enter"
            GOSUB 91000
         CASE 1
            IF XRFS.LOC = 'M' THEN
               GXR.ID = OPT
               MORE = 0
            END ELSE
*T26910 v
*              GXR.ID = IDLIST<OPT>[CONOPTR,999]
               IF XRFS.FST.PAGE = "T" THEN
                  GXR.ID = IDLIST<OPT>[CONOPTR,999]
               END ELSE
                  GXR.ID = IDLIST<LINES-OPT+1>[CONOPTR,999]
               END
*T26910 ^
               MORE = 0
            END
      END CASE
   WHILE MORE DO REPEAT
   GOTO 99990
*
*---- Print screen
1000*
   FOR PP = 1 TO TOP.CNT
      POS = INDEX(XRFS.TOP.LINE<1,PP>,"^ID^",1)
      IF POS THEN
         XRFS.TOP.LINE<1,PP> = XRFS.TOP.LINE<1,PP>[1,POS-1]:GXR.SRCH.ID:XRFS.TOP.LINE<1,PP>[POS+4,999]
      END
      POS = INDEX(XRFS.TOP.LINE<1,PP>,"^CO^",1)
      IF POS THEN
         XRFS.TOP.LINE<1,PP> = XRFS.TOP.LINE<1,PP>[1,POS-1]:XFR.CO:XRFS.TOP.LINE<1,PP>[POS+4,999]
      END
      POS = INDEX(XRFS.TOP.LINE<1,PP>,"^FILE^",1)
      IF POS THEN
         XRFS.TOP.LINE<1,PP> = XRFS.TOP.LINE<1,PP>[1,POS-1]:XRFS.SORT.FILE:XRFS.TOP.LINE<1,PP>[POS+6,999]
      END
      POS = INDEX(XRFS.TOP.LINE<1,PP>,"^HEAD1^",1)
      IF POS THEN
         XRFS.TOP.LINE<1,PP> = XRFS.TOP.LINE<1,PP>[1,POS-1]:GXR.HEAD1:XRFS.TOP.LINE<1,PP>[POS+7,999]
      END
      POS = INDEX(XRFS.TOP.LINE<1,PP>,"^HEAD2^",1)
      IF POS THEN
         XRFS.TOP.LINE<1,PP> = XRFS.TOP.LINE<1,PP>[1,POS-1]:GXR.HEAD2:XRFS.TOP.LINE<1,PP>[POS+7,999]
      END
   NEXT PP
   BOX.X = XRFS.COL<1,1> - 1
   L.X = XRFS.COL<1,MAX.COL> + XRFS.LEN<1,MAX.COL>
   LIMIT = MAX.COL + 1
   FOR DLP = LIMIT TO DISP.CNT
      CUR.COL = XRFS.COL<1,DLP> + XRFS.LEN<1,DLP>
      IF CUR.COL > L.X THEN L.X = CUR.COL
   NEXT DLP
   BOX.COLS = L.X - BOX.X + 1
   IF BOX.COLS < 21 THEN BOX.COLS = 21
   FOR PP = 1 TO TOP.CNT
      IF LEN(XRFS.TOP.LINE<1,PP>) + 2 > BOX.COLS THEN
         BOX.COLS = LEN(XRFS.TOP.LINE<1,PP>) + 2
      END
   NEXT PP
   BOX.Y = XRFS.BEGIN.PAGE; BOX.CLEAR = 1
   IF XRFS.CLS = "Y" THEN
      PRINT @(0,0) : CS :
   END
   IF LINES < XRFS.PAGE.SIZE THEN
      PAGE.SIZE = LINES
   END ELSE
      PAGE.SIZE = XRFS.PAGE.SIZE
   END
   BOX.ROWS = TOP.CNT + PAGE.SIZE * XRFS.LINE.SPACE + 2
   BEGIN.PAGE = XRFS.BEGIN.PAGE + TOP.CNT + 2
   MAT KSL.REC = ""
   KSL.PAGES = INT(LINES / PAGE.SIZE + .99)
   IF KSL.PAGES > 1 THEN
      BOX.HROW = 1
   END ELSE
      BOX.HROW = 0
   END
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
   CLR.LINE = SPACE(MAX.COLS)
   LIMIT = MAX.COL
   FOR DLP = 1 TO LIMIT
      IF XRFS.ATT<1,DLP> # "R" THEN
         H.X = XRFS.COL<1,DLP> - 1
         LIMIT = 0
      END
   NEXT DLP
   IF LIMIT THEN
      H.X = DX - 1
   END
   IF BOX.HROW THEN
      MSG.ROW = BOX.HROW + 1
      IF XRFS.CLS = "N" THEN
         PRINT @(DX-1,BOX.HROW):ETX.OFF:CLR.LINE:
      END
   END ELSE
      MSG.ROW = BEGIN.PAGE + (PAGE.SIZE * XRFS.LINE.SPACE) + 1
   END
   FOR PP = 1 TO TOP.CNT
      SP = MAX.COLS - LEN(XRFS.TOP.LINE<1,PP>)
      HD.LINE = STR(" ",INT(SP/2)):XRFS.TOP.LINE<1,PP>
      TOP.ROW = XRFS.BEGIN.PAGE + PP - 1; FLD.MSK = "L#":MAX.COLS
      PRINT @(DX-1,TOP.ROW):ETX.TOP.OFF:HD.LINE FLD.MSK:ETX.TOP.OFF:
      PRINT @(DX-1,TOP.ROW):ETX.TOP:
   NEXT PP
   TOP.ROW = XRFS.BEGIN.PAGE + TOP.CNT
   FOR DLP = 1 TO MAX.COL
      FLD.MSK = "L#" : XRFS.LEN<1,DLP>
      COL = XRFS.COL<1,DLP> - 1
      IF COL < DX - 1 THEN COL = DX - 1
      PRINT @(COL,TOP.ROW):ETX.OFF:XRFS.HEADING<1,DLP> FLD.MSK:ETX.OFF:
      PRINT @(COL,TOP.ROW):ETX.HSL:
   NEXT DLP
*
   P.LEN = LEN(LINES) + 1
   P.MSG = "Enter #,(A)ll,(S),(E):" ; * T27924
*
   KSL.ESC = KSEL.ESC
   KSL.SCROLL = 1
   KSL.ETX.SEL = ETX.DSL
   KSL.ETX.OFF = ETX.OFF
   KSL.HROW = "B"
   IF OLD.ROW THEN
      KSL.ROW = OLD.ROW
   END ELSE
      KSL.ROW = BEGIN.PAGE
   END
   KSL.COL = 1
   KSL.COLS = 1
   KSL.PGNO = OLD.PGNO
   MAT KSL.YX = ""
*
   GOSUB 1900
   RETURN
*
*---- Display Page
1900*
   START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   SLN = BEGIN.PAGE - XRFS.LINE.SPACE
   IF XRFS.FST.PAGE = "T" THEN
      FOR PL = START.LINE TO LAST.LINE
         SLN = SLN + XRFS.LINE.SPACE
         GOSUB 1910
      NEXT PL
   END ELSE
      FOR NPL = START.LINE TO LAST.LINE
         SLN = SLN + XRFS.LINE.SPACE
         PL = LINES - NPL + 1
         GOSUB 1910
      NEXT NPL
   END
   LST.PL = LAST.LINE - START.LINE + 2
   FOR PL = LST.PL TO PAGE.SIZE
      SLN = SLN + XRFS.LINE.SPACE
      FOR CLN = 1 TO XRFS.LINE.SPACE
         KSL.YX(SLN+CLN-1) = ""
         PRINT @(DX-1,SLN+CLN-1):ETX.OFF:CLR.LINE:
      NEXT CLN
   NEXT PL
*
*---- Display lines & pages
*
   BEGIN CASE
      CASE BOX.HROW < 1
      CASE BOX.COLS < 10
      CASE BOX.COLS < 15
         PX = BOX.X + BOX.COLS - 10
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:KSL.PGNO "R%4":" of ":KSL.PAGES "R%4":ETX.HHD.OFF:
         PRINT @(PX,BOX.HROW):ETX.HHD:
      CASE 1
*T26556 v
*        PX = BOX.X + BOX.COLS - 15
*        PRINT @(PX,BOX.HROW):ETX.HHD.OFF:"Page ":KSL.PGNO "R%4":" of ":KSL.PAGES "R%4":ETX.HHD.OFF:
         PX = BOX.X + BOX.COLS - 15
         PRINT @(PX,BOX.HROW):ETX.HHD.OFF:("Page ":KSL.PGNO:" of ":KSL.PAGES)"L#15":ETX.HHD.OFF:
*T26556 ^
         PRINT @(PX,BOX.HROW):ETX.HHD:
   END CASE
   RETURN
*
*---- Display line
1910*
   IF ATT.REF THEN
      READ ITEM FROM GXR.FILE, IDLIST<PL> THEN
         KSL.YX(SLN) = H.X
         IF XRFS.LOC = "M" THEN
            KSL.DATA(SLN) = PL
         END ELSE
            KSL.DATA(SLN) = IDLIST<PL>
         END
      END ELSE
         ITEM = ""
         FOR DLP = 1 TO DISP.CNT
            BEGIN CASE
               CASE XRFS.ATT<1,DLP> = "R"
               CASE XRFS.ATT<1,DLP> = "H"
               CASE XRFS.ATT<1,DLP> > 0
                  ITEM<XRFS.ATT<1,DLP>,XRFS.MV<1,DLP>> = STR("?",XRFS.LEN<1,DLP>)
            END CASE
         NEXT DLP
      END
   END ELSE
      KSL.YX(SLN) = H.X
      IF XRFS.LOC = "M" THEN
         KSL.DATA(SLN) = PL
      END ELSE
         KSL.DATA(SLN) = IDLIST<PL>
      END
      ITEM = ""
   END
   FOR DLP = 1 TO DISP.CNT
      FLD.MSK = XRFS.JUSTIFY<1,DLP>:"#":XRFS.LEN<1,DLP>
      ATTNO = XRFS.ATT<1,DLP>
      BEGIN CASE
         CASE ATTNO = "H"
            GOTO 1917
         CASE ATTNO = "R"
*T26910 v
*           PRINT @(XRFS.COL<1,DLP>-1,SLN+XRFS.ROW<1,DLP>-1):ETX.OFF:PL FLD.MSK:ETX.OFF:
            IF XRFS.FST.PAGE = "T" THEN
               PRINT @(XRFS.COL<1,DLP>-1,SLN+XRFS.ROW<1,DLP>-1):ETX.OFF:PL FLD.MSK:ETX.OFF:
            END ELSE
               PRINT @(XRFS.COL<1,DLP>-1,SLN+XRFS.ROW<1,DLP>-1):ETX.OFF:NPL FLD.MSK:ETX.OFF:
            END
*T26910 ^
            PRINT @(XRFS.COL<1,DLP>-1,SLN+XRFS.ROW<1,DLP>-1):ETX.NUM:
            GOTO 1917
         CASE ATTNO
            BEGIN CASE
               CASE XRFS.LOC = "A"
                  FLD = ""
               CASE XRFS.LOC = "M"
                  FLD = IDLIST<ATTNO,PL>
               CASE 1
                  FLD = ITEM<ATTNO,XRFS.MV<1,DLP>>
            END CASE
            BEGIN CASE
               CASE XRFS.TFUNC<1,DLP> # ""
                  TFUNC = XRFS.TFUNC<1,DLP>
                  TCNT = DCOUNT(TFUNC,"]")
                  FOR T = 1 TO TCNT
                     IF CONOLEN THEN
                        FLD = GXR.CO:FLD
                     END
                     FLD = OCONV(FLD,FIELD(TFUNC,"]",T))
                  NEXT T
               CASE XRFS.SUBR<1,DLP> # ""
                  SUBNAME = XRFS.SUBR<1,DLP>
                  IF ATT.REF THEN
                     CALL @SUBNAME(MAT GEN.XREF.REC,PL,DLP,ITEM,FLD)
                  END ELSE
                     CALL @SUBNAME(MAT GEN.XREF.REC,PL,DLP,IDLIST,FLD)
                  END
            END CASE
         CASE 1
            BEGIN CASE
               CASE XRFS.LOC = "A"
                  FLD = IDLIST<PL>
                  IF XRFS.MV<1,DLP> THEN
                     FLD = FLD<1,XRFS.MV<1,DLP>>
                  END
               CASE XRFS.LOC = "M"
                  FLD = GXR.SRCH.ID
               CASE 1
                  FLD = IDLIST<PL>[CONOPTR,999]
            END CASE
            BEGIN CASE
               CASE XRFS.TFUNC<1,DLP> # ""
                  TFUNC = XRFS.TFUNC<1,DLP>
                  TCNT = DCOUNT(TFUNC,"]")
                  FOR T = 1 TO TCNT
                     IF CONOLEN THEN
                        FLD = GXR.CO:FLD
                     END
                     FLD = OCONV(FLD,FIELD(TFUNC,"]",T))
                  NEXT T
               CASE XRFS.SUBR<1,DLP> # ""
                  SUBNAME = XRFS.SUBR<1,DLP>
                  CALL @SUBNAME(MAT GEN.XREF.REC,PL,DLP,IDLIST,FLD)
            END CASE
      END CASE
      IF XRFS.OCONV<1,DLP> # "" THEN
         FLD = OCONV(FLD,XRFS.OCONV<1,DLP>)
      END
      PRINT @(XRFS.COL<1,DLP>,SLN+XRFS.ROW<1,DLP>-1):FLD FLD.MSK:
1917*
   NEXT DLP
   PRINT @(L.X,SLN):ETX.OFF:
   PRINT @(H.X,SLN):ETX.DHD:
   FOR DLP = 2 TO XRFS.LINE.SPACE
      PRINT @(L.X,SLN+DLP-1):ETX.OFF:
      PRINT @(DX-1,SLN+DLP-1):ETX.DHD:
   NEXT DLP
   RETURN
*
*---- Maintainenance
2000*
   IF NOT(MAINTMODE) THEN
      MATREADU S.XRFS.REC FROM XREF.DATA, GXR.NAME ELSE
         RELEASE XREF.DATA, GXR.NAME
         ERRMSG = "Cannot locate cross reference table # ":GXR.NAME
         GOSUB 91000; GOTO 2009
      END
      READU DUMMY FROM XREF.DATA, MAINTNAME ELSE NULL
      DUMMY = ""
      MATWRITE S.XRFS.REC ON XREF.DATA, MAINTNAME
      RELEASE XREF.DATA, GXR.NAME
      MAINTMODE = 1
   END
   OLD.PGNO = KSL.PGNO; OLD.ROW = KSL.ROW
   STMT = "XREF.DATA.UPD ":MAINTNAME
   PERFORM STMT
   PRINT @(0,0) : CS :
   MAT S.XRFS.REC = MAT XRFS.REC
   NEWREC = 1
   MATREAD XRFS.REC FROM XREF.DATA, MAINTNAME ELSE
      MAT XRFS.REC = MAT S.XRFS.REC
      GOTO 2008
   END
   BEGIN CASE
      CASE XRFS.HEADING # ""
      CASE XRFS.LOC = "S"
      CASE GXR.SRCH.ID # ""
      CASE 1
         MAT XRFS.REC = MAT S.XRFS.REC
         GOTO 2008
   END CASE
2007*
   GOSUB 2100
   IF GXR.ACTION = "X" THEN
      IF NEWREC THEN
         MAT XRFS.REC = MAT S.XRFS.REC
         GXR.ACTION = ""; NEWREC = 0
      END ELSE
         GOTO 2009
      END
   END
   GOSUB 2200
   IF GXR.ACTION = "X" THEN
      IF NEWREC THEN
         MAT XRFS.REC = MAT S.XRFS.REC
         GXR.ACTION = ""; NEWREC = 0
         GOTO 2007
      END ELSE
         GOTO 2009
      END
   END
   GOSUB 3000
   IF GXR.ACTION = "X" THEN
      IF NEWREC THEN
         MAT XRFS.REC = MAT S.XRFS.REC
         GXR.ACTION = ""; NEWREC = 0
         GOTO 2007
      END ELSE
         GOTO 2009
      END
   END
2008*
   GOSUB 1000
2009*
   RETURN
*
*---- Open files
2100*
   IF GXR.OPEN.XREF # "" THEN
      BEGIN CASE
         CASE XRFS.XREF.FILE = "^VALUE^"
         CASE XRFS.XREF.FILE = "DICT ^VALUE^"
            GXR.OPEN.XREF = "DICT ":GXR.OPEN.XREF
         CASE 1
            GXR.OPEN.XREF = XRFS.XREF.FILE
      END CASE
      IF GXR.OPEN.XREF[1,5] = "DICT " THEN
         GXR.OPEN.XREF = TRIM(GXR.OPEN.XREF[6,999])
         OPEN "DICT", GXR.OPEN.XREF TO GXR.XREF ELSE
            GXR.ACTION = "X"; GXR.NAME = "Error # 003"
            GOTO 2109
         END
      END ELSE
         OPEN "", GXR.OPEN.XREF TO GXR.XREF ELSE
            GXR.ACTION = "X"; GXR.NAME = "Error # 004"
            GOTO 2109
         END
      END
   END
   IF GXR.OPEN.DATA # "" THEN
      BEGIN CASE
         CASE XRFS.DATA.FILE = "^VALUE^"
         CASE XRFS.DATA.FILE = "DICT ^VALUE^"
            GXR.OPEN.DATA = "DICT ":GXR.OPEN.DATA
         CASE 1
            GXR.OPEN.DATA = XRFS.DATA.FILE
      END CASE
      IF GXR.OPEN.DATA[1,5] = "DICT " THEN
         GXR.OPEN.DATA = TRIM(GXR.OPEN.DATA[6,999])
         OPEN "DICT", GXR.OPEN.DATA TO GXR.FILE ELSE
            GXR.ACTION = "X"; GXR.NAME = "Error # 005"
            GOTO 2109
         END
      END ELSE
         OPEN "", GXR.OPEN.DATA TO GXR.FILE ELSE
            GXR.ACTION = "X"; GXR.NAME = "Error # 006"
            GOTO 2109
         END
      END
   END
2109*
   RETURN
*
*---- Setup
2200*
   DISP.CNT = COUNT(XRFS.HEADING,VM) + 1
   LIMIT = DISP.CNT; MAX.COL = DISP.CNT
   FOR DLP = 1 TO LIMIT
      IF XRFS.ROW<1,DLP> > 1 THEN
         MAX.COL = DLP - 1
         LIMIT = 0
      END
   NEXT DLP
   IF MAX.COL < 1 THEN
      GXR.ACTION = "X"; GXR.NAME = "Error # 007"
      GOTO 2209
   END
   LIMIT = DISP.CNT; ATT.REF = 0
   FOR DLP = 1 TO LIMIT
      BEGIN CASE
         CASE XRFS.ATT<1,DLP> = "R"
         CASE XRFS.ATT<1,DLP> = "H"
         CASE XRFS.ATT<1,DLP> > 0
            LIMIT = 0; ATT.REF = XRFS.ATT<1,DLP>
      END CASE
   NEXT DLP
   TOP.CNT = DCOUNT(XRFS.TOP.LINE,VM)
   XRFS.SORT.FILE = TRIM(XRFS.SORT.FILE)
   BEGIN CASE
      CASE XRFS.SORT.FILE = ""
      CASE XRFS.SORT.FILE = "^VALUE^"
         XRFS.SORT.FILE = TRIM(GXR.SORT.FILE)
      CASE XRFS.SORT.FILE = "DICT ^VALUE^"
         GXR.SORT.FILE = TRIM(GXR.SORT.FILE)
         IF GXR.SORT.FILE = "" THEN
            XRFS.SORT.FILE = ""
         END ELSE
            XRFS.SORT.FILE = "DICT ":GXR.SORT.FILE
         END
   END CASE
2209*
   RETURN
*
*---- Build IDs
3000*
   REC.IDS = ""
   ALL.NAMES = ""
*
   BEGIN CASE
      CASE XRFS.LOC = "S"
         IF XRFS.SORT.FILE = "" THEN
            GXR.ACTION = "X"; GXR.NAME = "Error # 008"
            GOTO 3999
         END
         STMT = "SELECT ":XRFS.SORT.FILE
         PERFORM STMT RTNLIST SYSLIST CAPTURING RESPONSE
         DATA = 1; LINES = 0; IDLIST = ""
         LOOP
            READNEXT ID FROM SYSLIST ELSE DATA = 0
         WHILE DATA DO
            LINES = LINES + 1
            IDLIST<LINES> = ID
         REPEAT
         IF LINES < 1 THEN
            GXR.ACTION = "X"; GXR.NAME = "Error # 009"
            GOTO 3999
         END
         RESPONSE = ""
         IF CONOLEN THEN
            OLINES = LINES
            FOR PL = OLINES TO 1 STEP -1
               IF IDLIST<PL>[1,CONOLEN] # DTL.CO THEN
                  IDLIST = DELETE(IDLIST,PL,0,0)
                  LINES = LINES - 1
               END
            NEXT PL
            IF LINES < 1 THEN
               GXR.ACTION = "X"; GXR.NAME = "Error # 010"
               GOTO 3999
            END
         END
         GOTO 3200
      CASE XRFS.LOC = "A"
         IF GXR.IDLIST = "" THEN
            READ IDLIST FROM GXR.XREF, XFR.CO:GXR.SRCH.ID ELSE
               GXR.ACTION = "X"; GXR.NAME = "Error # 011"
               GOTO 3999
            END
         END ELSE
            IDLIST = GXR.IDLIST
         END
         LINES = DCOUNT(IDLIST,AM)
         IF LINES < 1 THEN
            GXR.ACTION = "X"; GXR.NAME = "Error # 012"
            GOTO 3999
         END
         ATT.REF = 0
         GOTO 3999
      CASE XRFS.LOC = "M"
         BEGIN CASE
            CASE NOT(ATT.REF)
               GXR.ACTION = "X"; GXR.NAME = "Error # 013"
               GOTO 3999
            CASE GXR.IDLIST = ""
               READ IDLIST FROM GXR.XREF, XFR.CO:GXR.SRCH.ID ELSE
                  GXR.ACTION = "X"; GXR.NAME = "Error # 014"
                  GOTO 3999
               END
            CASE 1
               IDLIST = GXR.IDLIST
         END CASE
         LINES = DCOUNT(IDLIST<ATT.REF>,VM)
         IF LINES < 1 THEN
            GXR.ACTION = "X"; GXR.NAME = "Error # 015"
            GOTO 3999
         END
         ATT.REF = 0
         GOTO 3999
      CASE NOT(NUM(XRFS.LOC))
         GXR.ACTION = "X"; GXR.NAME = "Error # 016"
         GOTO 3999
      CASE GXR.IDLIST # ""
         REC.IDS = GXR.IDLIST
         GOTO 3100
      CASE XRFS.LOC = 0
         REC.IDS = GXR.SRCH.ID
         GOTO 3100
      CASE XRFS.LOC < 1
         GXR.ACTION = "X"; GXR.NAME = "Error # 017"
         GOTO 3999
   END CASE
   CALL GET.NAME(GXR.SRCH.ID,ALL.NAMES,PREFIX)
   NAME.CNT = DCOUNT(ALL.NAMES,VM)
   REC.IDS = ""
   IF NAME.CNT THEN
      READ ITEM FROM GXR.XREF, XFR.CO : ALL.NAMES<1,1> ELSE
         GXR.ACTION = "X"; GXR.NAME = "Error # 018"
         GOTO 3999
      END
      REC.IDS = ITEM<XRFS.LOC>
   END
   LIMIT = NAME.CNT
   FOR MLP = 2 TO LIMIT
      READ ITEM FROM GXR.XREF, XFR.CO : ALL.NAMES<1,MLP> THEN
         CNT = DCOUNT(REC.IDS<1>,VM)
         IF CNT THEN
            FOR SLP = CNT TO 1 STEP - 1
               LOCATE REC.IDS<1,SLP> IN ITEM<XRFS.LOC>,1 SETTING FND ELSE
                  REC.IDS = DELETE(REC.IDS,1,SLP,0)
               END
            NEXT SLP
            IF REC.IDS = "" THEN LIMIT = 0
         END ELSE
            LIMIT = 0; REC.IDS = ""
         END
      END ELSE
         LIMIT = 0; REC.IDS = ""
      END
   NEXT MLP
3100*
   LINES = DCOUNT(REC.IDS,VM)
   IF LINES < 1 THEN
      GXR.ACTION = "X"; GXR.NAME = "Error # 019"
      GOTO 3999
   END
   IDLIST = DTL.CO:REC.IDS<1,1>
   REC.IDS = DELETE(REC.IDS,1,1,0)
   FOR PL = 2 TO LINES
      IDLIST<PL> = DTL.CO:REC.IDS<1,1>
      REC.IDS = DELETE(REC.IDS,1,1,0)
   NEXT PL
3200*
   SET.MAX = DCOUNT(XRFS.WITH.ATT,VM)
   IF SET.MAX < 1 THEN GOTO 3700
   PTR = 1; VALUENO = "^ID^"
   LOOP
      LOCATE VALUENO IN XRFS.WITH.VAL<1>,PTR SETTING FND THEN
         XRFS.WITH.VAL<1,FND> = GXR.SRCH.ID
         PTR = FND + 1
      END ELSE
         PTR = 0
      END
   WHILE PTR DO REPEAT
   FOR S = 1 TO 5
      VALUENO = "^VALUE":S:"^"
      PTR = 1
      LOOP
         LOCATE VALUENO IN XRFS.WITH.VAL<1>,PTR SETTING FND THEN
            SPTR = GXR.VAL.PTR + S - 1
            IF GEN.XREF.REC(SPTR) = "^IGNORE^" THEN
               IF FND = 1 OR XRFS.WITH<1,FND> = "A" THEN
                  XRFS.WITH = DELETE(XRFS.WITH,1,FND,0)
                  XRFS.WITH.ATT = DELETE(XRFS.WITH.ATT,1,FND,0)
                  XRFS.WITH.MV = DELETE(XRFS.WITH.MV,1,FND,0)
                  XRFS.WITH.EQ = DELETE(XRFS.WITH.EQ,1,FND,0)
                  XRFS.WITH.VAL = DELETE(XRFS.WITH.VAL,1,FND,0)
                  XRFS.WITH.OCONV = DELETE(XRFS.WITH.OCONV,1,FND,0)
                  PTR = FND
               END ELSE
                  XRFS.WITH.VAL<1,FND> = "^$#@!IGNORE*&%(^"
                  PTR = FND + 1
               END
            END ELSE
               XRFS.WITH.VAL<1,FND> = GEN.XREF.REC(SPTR)
               PTR = FND + 1
            END
         END ELSE
            PTR = 0
         END
      WHILE PTR DO REPEAT
   NEXT S
   SET.MAX = DCOUNT(XRFS.WITH.ATT,VM)
   IF SET.MAX < 1 THEN GOTO 3700
   SET.SEQ = 0; SET.CNT = 1; PTR = 2
   LOOP
      LOCATE "O" IN XRFS.WITH<1>,PTR SETTING W THEN
         SET.CNT = SET.CNT + 1
         IF W = SET.MAX THEN
            SET.SEQ<SET.CNT> = W - 1
            SET.CNT = SET.CNT + 1
            SET.SEQ<SET.CNT> = W
            PTR = 0
         END ELSE
            SET.SEQ<SET.CNT> = W - 1
            PTR = W + 1
         END
      END ELSE
         BEGIN CASE
            CASE SET.CNT = 1
               SET.CNT = 2
               SET.SEQ<SET.CNT> = SET.MAX
            CASE SET.SEQ<SET.CNT> < SET.MAX
               SET.CNT = SET.CNT + 1
               SET.SEQ<SET.CNT> = SET.MAX
         END CASE
         PTR = 0
      END
   WHILE PTR DO REPEAT
   OLINES = LINES
   FOR LNO = OLINES TO 1 STEP - 1
      READ ITEM FROM GXR.FILE , IDLIST<LNO> ELSE
         IDLIST = DELETE(IDLIST,LNO,0,0)
         LINES = LINES - 1
         GOTO 3500
      END
      MAX.SET.SEQ = SET.CNT - 1
      FOR MSS = 1 TO MAX.SET.SEQ
         SUB.SET.NO = SET.SEQ<MSS> + 1
         MAX.SUB.SET = SET.SEQ<MSS+1>
         FOR SSO = SUB.SET.NO TO MAX.SUB.SET
            OPNO = XRFS.WITH.EQ<1,SSO>
            VLNO = XRFS.WITH.VAL<1,SSO>
            CNV = XRFS.WITH.OCONV<1,SSO>
            BEGIN CASE
               CASE CNV = ""
               CASE VLNO = "DATE" AND CNV = "D2/"
                  VLNO = DATE()
               CASE VLNO = "TIME" AND CNV = "MTS"
                  VLNO = TIME()
            END CASE
            CHK.FLD = XRFS.WITH.ATT<1,SSO>
            IF CHK.FLD THEN
               MVNO = XRFS.WITH.MV<1,SSO> + 0
               IF MVNO THEN
                  CHK.FLD = ITEM<CHK.FLD,MVNO>
               END ELSE
                  CHK.FLD = ITEM<CHK.FLD>
               END
            END ELSE
               CHK.FLD = IDLIST<LNO>[CONOPTR,999]
               MVNO = 0
            END
            BEGIN CASE
               CASE OPNO = "EQ"
                  IF VLNO # CHK.FLD THEN MAX.SUB.SET = 0
               CASE OPNO = "NE"
                  IF VLNO = CHK.FLD THEN MAX.SUB.SET = 0
               CASE OPNO = "GE"
                  IF CHK.FLD < VLNO THEN MAX.SUB.SET = 0
               CASE OPNO = "LE"
                  IF CHK.FLD > VLNO THEN MAX.SUB.SET = 0
               CASE OPNO = "GT"
                  IF CHK.FLD <= VLNO THEN MAX.SUB.SET = 0
               CASE OPNO = "LT"
                  IF CHK.FLD >= VLNO THEN MAX.SUB.SET = 0
               CASE OPNO = "IX"
                  IF NOT(INDEX(CHK.FLD,VLNO,1)) THEN MAX.SUB.SET = 0
               CASE OPNO = "IN"
                  IF INDEX(CHK.FLD,VLNO,1) THEN MAX.SUB.SET = 0
               CASE OPNO = "LX"
                  IF MVNO THEN
                     LOCATE VLNO IN CHK.FLD<1,1>,1 SETTING L ELSE
                        MAX.SUB.SET = 0
                     END
                  END ELSE
                     LOCATE VLNO IN CHK.FLD<1>,1 SETTING L ELSE
                        MAX.SUB.SET = 0
                     END
                  END
               CASE OPNO = "LN"
                  IF MVNO THEN
                     LOCATE VLNO IN CHK.FLD<1,1>,1 SETTING L THEN
                        MAX.SUB.SET = 0
                     END
                  END ELSE
                     LOCATE VLNO IN CHK.FLD<1>,1 SETTING L THEN
                        MAX.SUB.SET = 0
                     END
                  END
               CASE 1
                  MAX.SUB.SET = 0
            END CASE
         NEXT SSO
         IF MAX.SUB.SET THEN MAX.SET.SEQ = 0
      NEXT MSS
      IF MAX.SET.SEQ THEN
         IDLIST = DELETE(IDLIST,LNO,0,0)
         LINES = LINES - 1
      END
3500*
   NEXT LNO
   IF LINES < 1 THEN
      GXR.ACTION = "X"; GXR.NAME = "Error # 020"
      GOTO 3999
   END
3700*
   IF XRFS.SORT.FILE = "" THEN GOTO 3999
   OPEN "","SAVEDLISTS" TO SAVEDLISTS ELSE
      GXR.ACTION = "X"; GXR.NAME = "Error # 021"
      GOTO 3999
   END
   IF XRFS.SORT.FILE[1,5] = "DICT " THEN
      OPEN "", "VOC" TO DICTFILE ELSE
         GXR.ACTION = "X"; GXR.NAME = "Error # 022"
         GOTO 3999
      END
      DICT.FLG = 1
   END ELSE
      OPEN "DICT", XRFS.SORT.FILE TO DICTFILE ELSE
         GXR.ACTION = "X"; GXR.NAME = "Error # 023"
         GOTO 3999
      END
      DICT.FLG = 0
   END
   LISTNAME = "XREFL":PORT.NO
   LISTID = LISTNAME:"000"
   READU DLIST FROM SAVEDLISTS, LISTID ELSE NULL
   WRITE IDLIST ON SAVEDLISTS, LISTID
   DLIST = ""
   GETLIST LISTNAME TO SLIST ELSE
      GXR.ACTION = "X"; GXR.NAME = "Error # 024"
      GOTO 3999
   END
   STMT = "SSELECT ":XRFS.SORT.FILE
   SCNT = DCOUNT(XRFS.SORT,VM)
   DICTNAMES = ""; DCNT = 0
   IF DICT.FLG THEN
      FOR SS = 1 TO SCNT
         IF XRFS.SORT.DICT<1,SS> = "" THEN
            REC = "D"
            REC<2> = XRFS.S.ATT<1,SS>
            REC<3> = XRFS.S.OCONV<1,SS>
            REC<5> = XRFS.S.LEN<1,SS>:XRFS.S.JUSTIFY<1,SS>
            IF XRFS.S.MV<1,SS> = "Y" THEN
               REC<6> = "M"
            END
            BASENAME = "_XRF_":PORT.NO:(SS "R%3"); XPTR = 1
            LOOP
               DICTNAME = BASENAME:XPTR
               READU DUMMY FROM DICTFILE, DICTNAME THEN
                  RELEASE DICTFILE, DICTNAME
               END ELSE
                  WRITE REC ON DICTFILE, DICTNAME
                  DCNT = DCNT + 1
                  DICTNAMES<DCNT> = DICTNAME
                  XPTR = 0
               END
            WHILE XPTR DO
               XPTR = XPTR + 1
            REPEAT
         END ELSE
            DICTNAME = XRFS.SORT.DICT<1,SS>
         END
         READ REC FROM DICTFILE, DICTNAME THEN
            IF XRFS.SORT<1,SS> = "D" THEN
               STMT = STMT : " BY.DSND ":DICTNAME
            END ELSE
               STMT = STMT : " BY ":DICTNAME
            END
         END
      NEXT SS
   END ELSE
      FOR SS = 1 TO SCNT
         DICTNAME = XRFS.SORT.DICT<1,SS>
         IF DICTNAME # "" THEN
            READ REC FROM DICTFILE, DICTNAME THEN
               IF XRFS.SORT<1,SS> = "D" THEN
                  STMT = STMT : " BY-DSND ":DICTNAME
               END ELSE
                  STMT = STMT : " BY ":DICTNAME
               END
            END
         END
      NEXT SS
   END
   PERFORM STMT PASSLIST SLIST RTNLIST SYSLIST CAPTURING RESPONSE
   DATA = 1; LINES = 0; IDLIST = ""
   LOOP
      READNEXT ID FROM SYSLIST ELSE DATA = 0
   WHILE DATA DO
      LINES = LINES + 1
      IDLIST<LINES> = ID
   REPEAT
   RESPONSE = ""
   FOR SS = 1 TO DCNT
      READU DUMMY FROM DICTFILE, DICTNAMES<SS> THEN
         DELETE DICTFILE, DICTNAMES<SS>
      END ELSE
         RELEASE DICTFILE, DICTNAMES<SS>
      END
   NEXT SS
   DICTNAMES = ""
   READU DLIST FROM SAVEDLISTS, LISTID THEN
      DELETE SAVEDLISTS, LISTID
   END ELSE
      RELEASE SAVEDLISTS, LISTID
   END
   DLIST = ""
   IF LINES < 1 THEN
      GXR.ACTION = "X"; GXR.NAME = "Error # 025"
      GOTO 3999
   END
3999*
   RETURN
*
*---- Update maintained XREF table
4000*
   IF MAINTMODE THEN
      MATREADU S.XRFS.REC FROM XREF.DATA, MAINTNAME THEN
         READU DUMMY FROM XREF.DATA, GXR.NAME ELSE NULL
         DUMMY = ""
         MATWRITE S.XRFS.REC ON XREF.DATA, GXR.NAME
         DELETE XREF.DATA, MAINTNAME
         MAINTMODE = 0
      END ELSE
         ERRMSG = "Cannot locate maintained table # ":MAINTNAME
         GOSUB 91000
      END
   END ELSE
      ERRMSG = "No available maintained tables to be updated."
      GOSUB 91000
   END
   RETURN
91000 ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
99990*
   IF MAINTMODE THEN
      MATREADU XRFS.REC FROM XREF.DATA, MAINTNAME ELSE NULL
      DELETE XREF.DATA, MAINTNAME
   END
99999*
   RETURN
END
