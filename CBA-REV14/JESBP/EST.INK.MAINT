***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.INK.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 02/04/86
*
* DESCRIPTION
*
* This program maintaines the ESTIMATE.MATL file for ink products.
* The key to this file will be CONO:"I"
*
*T22228 renee 09/12/1997 * Change program to read formulas from VOC
*                          instead of JESBP.
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
*T27250 epitka 01/29/2003 * Check the platform.
*T27684 cmykleb 09/08/2003 * Change echo $UDTHOME to call SYSVARS.SUB
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
* T22228 v   Added open VOC file statement
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOSUB 90000
      STOP
   END
* T22228 ^
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JESBP" TO JESBP ELSE
      ERRMSG = "CANNOT OPEN JESBP FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JES.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
      ERRMSG = "CANNOT OPEN FOH.TABLE FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MARKUP FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.MATL FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
* T22228 v   Copied from EST.DEPT.GROUP
*T27684 v
*  PLATFORM=SYSTEM(33)                          
*  IF PLATFORM='UNIX' THEN                      
*     PERFORM "!echo $UDTHOME" CAPTURING UDTDIR  
*  END ELSE                                     
*     PERFORM "!echo %UDTHOME%" CAPTURING UDTDIR 
*  END                                          
   UDTDIR = "UDTHOME"
   CALL SYSVARS.SUB (UDTDIR)
*T27684 ^
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
* T22228 ^
   CONO = ""
   CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;EST.INK.MAINT
   SCREEN FORMAT
   SCREEN COUNT;EST.INK.MAINT;3
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
*
*---- MAIN PROCESSING
*
100*
   CURR.REF.NO = ""
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;EST.INK.MAINT;1
   MATL.KEY = "I"
   NEW.REC = 0
  * T26126 v
   MATREADU ESTM.REC FROM ESTIMATE.MATL, CONO:MATL.KEY LOCKED
      ERRMSG = 'INK record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 90000;GOTO 99999 
   END ELSE
  * T26126 ^
      MAT ESTM.REC = ""
      NEW.REC = 1
   END
   ESTM.FOH.PCT = ESTM.FOH.PCT<1,1>
   ESTM.MARKUP = ESTM.MARKUP<1,1>
   CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
   IF NEW.REC THEN
      FOR FLD = 1 TO 2
         ON FLD GOSUB 1100, 1200
         IF S$VALUE = "END" THEN
            SCREEN CLEAR
            RELEASE
            GOTO 100
         END
      NEXT FLD
      DONE = 0
      FOR REF.NO = CNT + 1 TO 999 UNTIL DONE
         GOSUB 50000
         GOSUB 10000
         IF S$VALUE = "END" THEN
            DONE = 1
            GOSUB 60000
         END ELSE
            CNT = CNT + 1
         END
      NEXT REF.NO
      REF.NO = CNT
      CURR.REF.NO = ""
      GOSUB 50000
   END ELSE
      GOSUB 80000
      SCREEN DISPLAY;EST.INK.MAINT;ALL
      IF ESTM.PROD # "" THEN
         REF.NO = 1
         GOSUB 50000
      END
   END
*
*---- GET OPERATOR REPLY
*
500*
   SCREEN FIELD;EST.INK.MAINT;15
   SCREEN INPUT;EST.INK.MAINT;15
   OPT = S$VALUE
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         FLD = OPT
         ON FLD GOSUB 1100, 1200
      CASE OPT = "A" AND CNT < 999
         DONE = 0
         FOR REF.NO = CNT + 1 TO 999 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 60000
            END ELSE
               CNT = CNT + 1
            END
         NEXT REF.NO
         REF.NO = CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPT = "C" AND CNT > 0
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
         END
      CASE OPT = "I" AND CNT > 0
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            S$DATA(3) = INSERT(S$DATA(3),S$SCR,REF.NO,0,"")
            S$DATA(4) = INSERT(S$DATA(4),S$SCR,REF.NO,0,"")
            S$DATA(5) = INSERT(S$DATA(5),S$SCR,REF.NO,0,"")
            S$DATA(6) = INSERT(S$DATA(6),S$SCR,REF.NO,0,"")
            S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF.NO,0,"")
            S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF.NO,0,"")
            S$DATA(9) = INSERT(S$DATA(9),S$SCR,REF.NO,0,"")
            S$DATA(10) = INSERT(S$DATA(10),S$SCR,REF.NO,0,"")
            S$DATA(11) = INSERT(S$DATA(11),S$SCR,REF.NO,0,"")
            S$DATA(17) = INSERT(S$DATA(17),S$SCR,REF.NO,0,"")
            ESTM.PROD = INSERT(ESTM.PROD,1,REF.NO,0,"")
            ESTM.DESC = INSERT(ESTM.DESC,1,REF.NO,0,"")
            ESTM.FULL.DESC = INSERT(ESTM.FULL.DESC,1,REF.NO,0,"")
            ESTM.UM = INSERT(ESTM.UM,1,REF.NO,0,"")
            ESTM.COST.UNIT = INSERT(ESTM.COST.UNIT,1,REF.NO,0,"")
            ESTM.COVER.C = INSERT(ESTM.COVER.C,1,REF.NO,0,"")
            ESTM.COVER.U = INSERT(ESTM.COVER.U,1,REF.NO,0,"")
            ESTM.MIN.QTY = INSERT(ESTM.MIN.QTY,1,REF.NO,0,"")
            ESTM.COST = INSERT(ESTM.COST,1,REF.NO,0,"")
            ESTM.QCALC = INSERT(ESTM.QCALC,1,REF.NO,0,"")
            ESTM.QPARAM = INSERT(ESTM.QPARAM,1,REF.NO,0,"")
            ESTM.QOR = INSERT(ESTM.QOR,1,REF.NO,0,"")
            ESTM.VARNISH = INSERT(ESTM.VARNISH,1,REF.NO,0,"")
            ESTM.FCALC = INSERT(ESTM.FCALC,1,REF.NO,0,"")
            ESTM.FPARAM = INSERT(ESTM.FPARAM,1,REF.NO,0,"")
            ESTM.FOR = INSERT(ESTM.FOR,1,REF.NO,0,"")
            CNT = CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 60000
               CNT = CNT - 1
            END
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "D" AND CNT > 0
         GOSUB 30000
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 60000
            CNT = CNT - 1
            IF REF.NO > CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "S"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = COUNT(ESTM.PROD,VM) + 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "F"
         CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
         FOR C = 2 TO CNT
            ESTM.FOH.PCT<1,C> = ESTM.FOH.PCT<1,1>
            ESTM.MARKUP<1,C> = ESTM.MARKUP<1,1>
         NEXT C
         MATWRITE ESTM.REC ON ESTIMATE.MATL,CONO:MATL.KEY
         GOTO 99999
   END CASE
   GOTO 500
*
*---- GET INDIRECT % OR TABLE ID
*
1100*
   SAVE.FOH.PCT = S$DATA(13)<S$SCR>
1102*
   S$DATA(13)<S$SCR> = SAVE.FOH.PCT
   SCREEN FIELD;EST.INK.MAINT;13
   SCREEN INPUT;EST.INK.MAINT;13;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 1102
         END
         ESTM.FOH.PCT = IVAL
         S$DATA(13)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;EST.INK.MAINT;13
      CASE 1
         READ REC FROM FOH.TABLE, CONO:S$VALUE ELSE
            ERRMSG = "Invalid table ID. Try again! "
            GOSUB 90000
            GOTO 1102
         END
         ESTM.FOH.PCT = S$VALUE
   END CASE
   RETURN
*
*---- GET MARK-UP % OR TABLE ID
*
1200*
   SAVE.MARKUP = S$DATA(14)<S$SCR>
1202*
   S$DATA(14)<S$SCR> = SAVE.MARKUP
   SCREEN FIELD;EST.INK.MAINT;14
   SCREEN INPUT;EST.INK.MAINT;14;RETURN
   BEGIN CASE
      CASE NUM(S$VALUE)
         IVAL = ICONV(S$VALUE,"MD2")
         IF IVAL > 10000 THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 1202
         END
         ESTM.MARKUP = IVAL
         S$DATA(14)<S$SCR> = OCONV(IVAL,"MD2")
         SCREEN DISPLAY;EST.INK.MAINT;14
      CASE 1
         READ REC FROM ESTIMATE.MARKUP, CONO:S$VALUE ELSE
            ERRMSG = "Invalid table ID. Try again! "
            GOSUB 90000
            GOTO 1202
         END
         ESTM.MARKUP = S$VALUE
   END CASE
   RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
   S$VAL = REF.NO
   SCREEN DISPLAY;EST.INK.MAINT;2
10100*
   S$DATA(3)<S$SCR,REF.NO> = ESTM.PROD<1,REF.NO>
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;3
   SCREEN INPUT;EST.INK.MAINT;3;GOTO 10195
   TEMP.PROD = S$VALUE
   LOCATE TEMP.PROD IN ESTM.PROD<1>,1 SETTING FND ELSE FND = 0
   IF FND AND FND # REF.NO THEN
      ERRMSG = "Duplicate product specified. Try again! "
      GOSUB 90000
      GOTO 10100
   END
10110*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;4
   SCREEN INPUT;EST.INK.MAINT;4;GOTO 10195
   TEMP.DESC = S$VALUE
10120*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;5
   SCREEN INPUT;EST.INK.MAINT;5;GOTO 10195
   TEMP.COVER.C = S$VALUE
10125*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;6
   SCREEN INPUT;EST.INK.MAINT;6;GOTO 10195
   TEMP.COVER.U = S$VALUE
10130*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;11
   SCREEN INPUT;EST.INK.MAINT;11;GOTO 10195
   TEMP.MIN.QTY = S$VALUE
10140*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;7
   SCREEN INPUT;EST.INK.MAINT;7;GOTO 10195
   TEMP.COST = S$VALUE
*---- GET QTY CALC TYPE
10150*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;8
   SCREEN INPUT;EST.INK.MAINT;8;GOTO 10195
   TEMP.QCALC = S$VALUE
*---- GET QTY CALC PARAM
10160*
   IF TEMP.QCALC = "" THEN
      TEMP.QPARAM = ""
      S$DATA(9)<S$SCR,REF.NO> = TEMP.QPARAM
      S$VAL = REF.NO
      SCREEN DISPLAY;EST.INK.MAINT;9
      GOTO 10170
   END
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;9
   SCREEN INPUT;EST.INK.MAINT;9;GOTO 10195
   BEGIN CASE
      CASE TEMP.QCALC = "C"
*        ERR =0
*        BEGIN CASE
*        CASE NOT(NUM(S$VALUE))
*           ERR = 1
*        CASE S$VALUE # INT(S$VALUE)
*           ERR = 1
*        END CASE
*        IF ERR THEN
*           ERRMSG = "Invalid parameter. Try again! "
*           GOSUB 90000
*           GOTO 10160
*        END
      CASE TEMP.QCALC = "F"
* T22228 v   Copied from EST.DEPT.GROUP
         SUB.ID=S$VALUE
         SUB.NAME="EST.FORMULA.Q":SUB.ID
         FORMULA.FOUND = 0
         READ DUMMY FROM VOC, SUB.NAME THEN
            IF DUMMY<1> = "C" THEN
               OSREAD DUMMY FROM DUMMY<2> THEN FORMULA.FOUND = 1
            END
         END ELSE
            OSREAD DUMMY FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
         END
         IF NOT(FORMULA.FOUND) THEN
            ERRMSG="Invalid formula ID. Try again !"
            GOSUB 90000
            GOTO 10160
         END
* T22228 ^
* T22228 v   Comment ou old logic
*         READ REC FROM JESBP, "EST.FORMULA.Q":S$VALUE ELSE
*            ERRMSG = "Invalid formula ID - EST.FORMULA.Q":S$VALUE:". Try again! "
*            GOSUB 90000
*            GOTO 10160
*         END
* T22228 ^
   END CASE
   TEMP.QPARAM = S$VALUE
*---- GET QTY OVERRIDE FLAG
10170*
   BEGIN CASE
      CASE TEMP.QCALC = ""
         TEMP.QOR = ""
         S$DATA(10)<S$SCR,REF.NO> = TEMP.QOR
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.INK.MAINT;10
      CASE TEMP.QCALC = "F"
         TEMP.QOR = "X"
         S$DATA(10)<S$SCR,REF.NO> = TEMP.QOR
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.INK.MAINT;10
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.INK.MAINT;10
         SCREEN INPUT;EST.INK.MAINT;10;GOTO 10195
         TEMP.QOR = S$VALUE
   END CASE
*---- GET VARNISH FLAG
10180*
   S$VAL = REF.NO
   SCREEN FIELD;EST.INK.MAINT;17
   SCREEN INPUT;EST.INK.MAINT;17;GOTO 10195
   TEMP.VARNISH = S$VALUE
10190*
   ESTM.PROD<1,REF.NO> = TEMP.PROD
   ESTM.DESC<1,REF.NO> = TEMP.DESC
   ESTM.UM<1,REF.NO> = "LBS"
   ESTM.COST.UNIT<1,REF.NO> = 1
   ESTM.COVER.C<1,REF.NO> = TEMP.COVER.C
   ESTM.COVER.U<1,REF.NO> = TEMP.COVER.U
   ESTM.MIN.QTY<1,REF.NO> = TEMP.MIN.QTY
   ESTM.COST<1,REF.NO> = TEMP.COST
   ESTM.QCALC<1,REF.NO> = TEMP.QCALC
   ESTM.QPARAM<1,REF.NO> = TEMP.QPARAM
   ESTM.QOR<1,REF.NO> = TEMP.QOR
   ESTM.VARNISH<1,REF.NO> = TEMP.VARNISH
   ESTM.FCALC<1,REF.NO> = "C"
   ESTM.FPARAM<1,REF.NO> = "1"
   IF TEMP.COST+0 = 0 THEN
      ESTM.FOR<1,REF.NO> = ""
   END ELSE
      ESTM.FOR<1,REF.NO> = "N"
   END
   ESTM.FULL.DESC<1,REF.NO> = ESTM.DESC<1,REF.NO>
   RETURN
10195*
   S$DATA(3)<S$SCR,REF.NO> = ESTM.PROD<1,REF.NO>
   S$DATA(4)<S$SCR,REF.NO> = ESTM.DESC<1,REF.NO>
   S$DATA(5)<S$SCR,REF.NO> = ESTM.COVER.C<1,REF.NO>
   S$DATA(6)<S$SCR,REF.NO> = ESTM.COVER.U<1,REF.NO>
   S$DATA(7)<S$SCR,REF.NO> = ESTM.COST<1,REF.NO>
   S$DATA(8)<S$SCR,REF.NO> = ESTM.QCALC<1,REF.NO>
   S$DATA(9)<S$SCR,REF.NO> = ESTM.QPARAM<1,REF.NO>
   S$DATA(10)<S$SCR,REF.NO> = ESTM.QOR<1,REF.NO>
   S$DATA(11)<S$SCR,REF.NO> = ESTM.MIN.QTY<1,REF.NO>
   S$DATA(17)<S$SCR,REF.NO> = ESTM.VARNISH<1,REF.NO>
   CURR.REF.NO = ""
   GOSUB 50000
   RETURN
*
*---- GET LINE REFERENCE
*
30000*
   S$DATA(16)<S$SCR> = ""
   SCREEN FIELD;EST.INK.MAINT;16
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > CNT THEN S$MAXV = CNT
   SCREEN INPUT;EST.INK.MAINT;16
   RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
50000*
   START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = COUNT(S$DATA(3)<S$SCR>,VM) + (S$DATA(3)<S$SCR> # "")
   SCREEN MULTI;EST.INK.MAINT;C;2;3;4;5;6;11;7;8;9;10;17
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
60000*
   S$DATA(3) = DELETE(S$DATA(3),S$SCR,REF.NO,0)
   S$DATA(4) = DELETE(S$DATA(4),S$SCR,REF.NO,0)
   S$DATA(5) = DELETE(S$DATA(5),S$SCR,REF.NO,0)
   S$DATA(6) = DELETE(S$DATA(6),S$SCR,REF.NO,0)
   S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF.NO,0)
   S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF.NO,0)
   S$DATA(9) = DELETE(S$DATA(9),S$SCR,REF.NO,0)
   S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF.NO,0)
   S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF.NO,0)
   S$DATA(17) = DELETE(S$DATA(17),S$SCR,REF.NO,0)
   ESTM.PROD = DELETE(ESTM.PROD,1,REF.NO,0)
   ESTM.DESC = DELETE(ESTM.DESC,1,REF.NO,0)
   ESTM.FULL.DESC = DELETE(ESTM.FULL.DESC,1,REF.NO,0)
   ESTM.UM = DELETE(ESTM.UM,1,REF.NO,0)
   ESTM.COST.UNIT = DELETE(ESTM.COST.UNIT,1,REF.NO,0)
   ESTM.COVER.C = DELETE(ESTM.COVER.C,1,REF.NO,0)
   ESTM.COVER.U = DELETE(ESTM.COVER.U,1,REF.NO,0)
   ESTM.MIN.QTY = DELETE(ESTM.MIN.QTY,1,REF.NO,0)
   ESTM.COST = DELETE(ESTM.COST,1,REF.NO,0)
   ESTM.QCALC = DELETE(ESTM.QCALC,1,REF.NO,0)
   ESTM.QPARAM = DELETE(ESTM.QPARAM,1,REF.NO,0)
   ESTM.QOR = DELETE(ESTM.QOR,1,REF.NO,0)
   ESTM.VARNISH = DELETE(ESTM.VARNISH,1,REF.NO,0)
   ESTM.FCALC = DELETE(ESTM.FCALC,1,REF.NO,0)
   ESTM.FPARAM = DELETE(ESTM.FPARAM,1,REF.NO,0)
   ESTM.FOR = DELETE(ESTM.FOR,1,REF.NO,0)
   RETURN
*
*---- LOAD MATRIX
*
80000*
   S$DATA(3)<S$SCR> = ESTM.PROD
   S$DATA(4)<S$SCR> = ESTM.DESC
   S$DATA(5)<S$SCR> = ESTM.COVER.C
   S$DATA(6)<S$SCR> = ESTM.COVER.U
   S$DATA(7)<S$SCR> = ESTM.COST
   S$DATA(8)<S$SCR> = ESTM.QCALC
   S$DATA(9)<S$SCR> = ESTM.QPARAM
   S$DATA(10)<S$SCR> = ESTM.QOR
   S$DATA(11)<S$SCR> = ESTM.MIN.QTY
   S$DATA(17)<S$SCR> = ESTM.VARNISH
   BEGIN CASE
      CASE NUM(ESTM.FOH.PCT)
         S$DATA(13)<S$SCR> = OCONV(ESTM.FOH.PCT,"MD2")
      CASE 1
         S$DATA(13)<S$SCR> = ESTM.FOH.PCT
   END CASE
   BEGIN CASE
      CASE NUM(ESTM.MARKUP)
         S$DATA(14)<S$SCR> = OCONV(ESTM.MARKUP,"MD2")
      CASE 1
         S$DATA(14)<S$SCR> = ESTM.MARKUP
   END CASE
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   SCREEN CLOSE
END
