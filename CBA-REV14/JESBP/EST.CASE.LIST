*COPY>CPYLIB>COM1
****************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM       - EST.CASE.LIST
*
* SYSTEM        - JESBP
*
* BY            - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE          - 04/18/86
*
* DESCRIPTION   -
* This program produces an Estimate Material (Case materials) report.
*
*T26138 cm 09/20/2001 Expand qty field from 8 to 9 digits.
*T25901 cmykleb 03/07/2002 * Change report to use GET.PROG.HEAD heading
*                            routine.
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*ENDDOC
****************************************************************
*
*---- FILE EQUATES
*
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
   SYS.TYPE=1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
   OPEN '','ESTIMATE.MATL' TO ESTIMATE.MATL ELSE ERRMSG='ESTIMATE.MATL FILE MISSING';GOTO 93000
*
*---- READ FROM PROC
*
   PROCREAD BUFFER ELSE
      ERRMSG = "CANNOT READ FROM PROC"
      GOTO 93000
   END
*
*---- GET COMPANY NUMBER
*
   CONO=""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO='END' THEN GOTO 99999
*
*---- INITIALIZATION
*
   PG.NO=0
   LINE.CNT=99
   ERRMSG=""
   PREV.PGRP = ""
   RPT.NO="XXXX"
   UNKNOWN=STR("?",30)
   SP = " "
   SP2 = "  "
   SP3 = "   "
   SP4 = "    "
   NODATA=1
*T25901 v
*  K = SPACE(INT((50 - LEN(CO.NAME)) / 2))
*  CONAME = K:CO.NAME:K
*  CONAME = CONAME "L#50"
*  HEAD1 = OCONV(DATE(),"D2/"):SPACE(33):CONAME:SPACE(32):"PAGE  "
*  HEAD2 = SPACE(36):"E S T I M A T E   C A S E   M A T E R I A L   L I S T I N G"
*T26493 v
*  REPORT.NAME = "ESTIMATE CASE MATERIAL LISTING"
*  REPORT.NUMBER = "XXXX"
   REPORT.NUMBER = BUFFER<2>
   CONO.NAME = ""
   REPORT.NAME = ""
*T26493 ^
   HEAD1 = "" ; HEAD2 = ""
   CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,"",HEAD1,HEAD2)
*T25901 ^
*T26138 v
*    HEAD4 = "                                                     GRAIN                       COST                <------- PRICING -------->"
*    HEAD5 = " PROD#                 FULL DESCRIPTION               DIR  FIN/CAL   EMBOSS  U/M UNIT  FOH%   MKUP%  FROM-QTY  TO-QTY    PRICE"
*    HEAD6 = "------ --------------------------------------------- ----- -------- -------- --- ---- ------ ------  -------- -------- --------"
   HEAD4 = "                                                     GRN                       COST               <---------- PRICING ----------->"
   HEAD5 = " PROD#                 FULL DESCRIPTION              DIR FIN/CAL   EMBOSS  U/M UNIT  FOH%  MKUP%   FROM-QTY     TO-QTY     PRICE"
   HEAD6 = "------ --------------------------------------------- --- -------- -------- --- ---- ------ ------ ----------- ----------- --------"
*T26138 ^
   PRINTER ON
*
*---- MAIN PROCESSING
*
10*
   READNEXT ESTM.KEY ELSE 
      IF NODATA THEN GOTO 99999
      GOTO 15
   END
   MATREAD ESTM.REC FROM ESTIMATE.MATL,ESTM.KEY ELSE GOTO 10
   NODATA=0
   PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
   FOR ZZ = 1 TO PROD.CNT
      PROD.NO = ESTM.PROD<1,ZZ> "L#6"
      DESC = ESTM.FULL.DESC<1,ZZ> "L#45"
      GRAIN = ESTM.GRAIN<1,ZZ> "L#1"
      IF ESTM.CALIPER<1,ZZ>+0 > 0 THEN
         CAL.FIN = OCONV(ESTM.CALIPER<1,ZZ>,"MD3")"R#7":" "
      END ELSE
         CAL.FIN = ESTM.FINISH.CD<1,ZZ>"L#8"
      END
      EMB = ESTM.EMBOSS<1,ZZ> "L#8"
      UM = ESTM.UM<1,ZZ> "L#3"
      CU = ESTM.COST.UNIT<1,ZZ> "R#4"
      IF NUM(ESTM.FOH.PCT<1,ZZ>) THEN
         FOH = OCONV(ESTM.FOH.PCT<1,ZZ>,"MD2Z") "R#6"
      END ELSE
         FOH = ESTM.FOH.PCT<1,ZZ> "R#6"
      END
      IF NUM(ESTM.MARKUP<1,ZZ>) THEN
         MKUP = OCONV(ESTM.MARKUP<1,ZZ>,"MD2Z") "R#6"
      END ELSE
         MKUP = ESTM.MARKUP<1,ZZ> "R#6"
      END
      BQ.CNT = COUNT(ESTM.BEG.QTY<1,ZZ>,SVM) + (ESTM.BEG.QTY<1,ZZ> # "")
*T26138 v
*     BEG.QTY = ESTM.BEG.QTY<1,ZZ,1> "R#8"
*     END.QTY = ESTM.END.QTY<1,ZZ,1> "R#8"
      BEG.QTY = OCONV(ESTM.BEG.QTY<1,ZZ,1>,'MD0,') "R#11"
      END.QTY = OCONV(ESTM.END.QTY<1,ZZ,1>,'MD0,') "R#11"
*T26138 ^
      QCOST = OCONV(ESTM.QCOST<1,ZZ,1>,"MD2") "R#8"
      COST = OCONV(ESTM.COST<1,ZZ>,"MD2") "R#8"
      GOSUB 30
   NEXT ZZ
   GOTO 10
15*
   PRINTER OFF
   GOTO 99999
*
*---- PRINT THE HEADINGS
*
20*
   PRINT CHAR(12)
   PRINT
   PG.NO=PG.NO + 1
   PRINT HEAD1:PG.NO
   PRINT HEAD2
   PRINT
   PRINT HEAD4
   PRINT HEAD5
   PRINT HEAD6
   LINE.CNT = 7
   RETURN
*
*---- PRINT THE VALUES
*
30*
   IF LINE.CNT >= 55 THEN GOSUB 20
   PRINT
*T26138 v
*  PRINT PROD.NO:SP:DESC:SP3:GRAIN:SP3:CAL.FIN:SP:EMB:SP:UM:SP:CU:SP:FOH:SP:MKUP:SP2:BEG.QTY:SP:END.QTY:SP:QCOST
   PRINT PROD.NO:SPACE(1):
   PRINT DESC:SPACE(2):
   PRINT GRAIN:SPACE(2):
   PRINT CAL.FIN:SPACE(1):
   PRINT EMB:SPACE(1):
   PRINT UM:SPACE(1):
   PRINT CU:SPACE(1):
   PRINT FOH:SPACE(1):
   PRINT MKUP:SPACE(1):
   PRINT BEG.QTY:SPACE(1):
   PRINT END.QTY:SPACE(1):
   PRINT QCOST
*T26138 ^
   LINE.CNT = LINE.CNT + 2
   IF BQ.CNT > 1 THEN
      FOR QQ = 2 TO BQ.CNT
         IF LINE.CNT >= 55 THEN GOSUB 20
*T26138 v
*        BEG.QTY = ESTM.BEG.QTY<1,ZZ,QQ> "R#8"
*        END.QTY = ESTM.END.QTY<1,ZZ,QQ> "R#8"
         BEG.QTY = OCONV(ESTM.BEG.QTY<1,ZZ,QQ>,'MD0,') "R#11"
         END.QTY = OCONV(ESTM.END.QTY<1,ZZ,QQ>,'MD0,') "R#11"
*T26138 ^
         QCOST = OCONV(ESTM.QCOST<1,ZZ,QQ>,"MD2") "R#8"
*T26138 v
*          PRINT SPACE(101):BEG.QTY:SP:END.QTY:SP:QCOST
         PRINT SPACE(98):BEG.QTY:SP:END.QTY:SP:QCOST
*T26138 ^
         LINE.CNT = LINE.CNT + 1
      NEXT QQ
   END
   RETURN
*
*---- CALLS FOR SYSCOM
*
93000*
   PRINTER OFF
   ERR.TYPE=3
   CALL SI_SYSCOM(MAT SYSCOM.REC)
99999*
END
