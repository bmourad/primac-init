*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.TABLE.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 07/25/86
*
* DESCRIPTION
*
* This program updates and maintaines the ESTIMATE.TBL file.
*
* T2613 cm 09/20/2001 * Expand qty from 8 to 9 digits.
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>ESTIMATE.TBL
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","ESTIMATE.TBL" TO ESTIMATE.TBL ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.TBL FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.TABLE.MAINT
  SCREEN FORMAT
  SCREEN COUNT;EST.TABLE.MAINT;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  GOTO 110
*
*---- MAIN PROCESSING
*
100*
  RELEASE
  SCREEN CLEAR
110*
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;EST.TABLE.MAINT;1
  SCREEN FIELD;EST.TABLE.MAINT;2
  SCREEN INPUT;EST.TABLE.MAINT;2
  IF S$VALUE = "END" THEN GOTO 99999
  BEGIN CASE
    CASE S$VALUE = "D"
      SCREEN FIELD;EST.TABLE.MAINT;23
      SCREEN INPUT;EST.TABLE.MAINT;23
      IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 100
      MATREAD ESTT.REC FROM ESTIMATE.TBL, CONO:S$VALUE ELSE
        ERRMSG = "Cannot locate spoilage table. Try again! "
        GOSUB 90000
        GOTO 100
      END
      SCREEN FIELD;EST.TABLE.MAINT;24
      SCREEN INPUT;EST.TABLE.MAINT;24
      IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 100
      TBL.KEY = S$VALUE
      FND = 1
      READVU DUMMY FROM ESTIMATE.TBL, CONO:TBL.KEY,1 LOCKED NULL ELSE FND = 0    ;* T26126
      IF FND THEN
        ERRMSG = "Spoilage table already present. Try again! "
        GOSUB 90000
        GOTO 100
      END
      NEW.REC = 0
    CASE 1
      TBL.KEY = S$VALUE
      NEW.REC = 0
      * T26126 v
      MATREADU ESTT.REC FROM ESTIMATE.TBL, CONO:TBL.KEY LOCKED
        ERRMSG = 'FACTOR TABLE record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 90000;GOTO 100 
      END ELSE
      * T26126 ^
        MAT ESTT.REC = ""
        NEW.REC = 1
      END
  END CASE
  IF NEW.REC THEN
    FOR N = 1 TO 2
      ON N GOSUB 1100,1200
      IF S$VALUE = "END" THEN GOTO 100
    NEXT N
    CNT = 0
    REF.NO = 0
    CURR.REF.NO = ""
    OPT = "A"
    GOTO 510
  END ELSE
    S$DATA(2)<S$SCR> = TBL.KEY
    S$DATA(3)<S$SCR> = ESTT.DESC
    S$DATA(6)<S$SCR> = ESTT.EXTR
    SCREEN DISPLAY;EST.TABLE.MAINT;ALL
    CNT = COUNT(ESTT.QTY,VM) + (ESTT.QTY # "")
    S$DATA(12)<S$SCR> = ESTT.QTY
    S$DATA(13)<S$SCR> = ESTT.FCTR
    REF.NO = 1
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.TABLE.MAINT;21
  SCREEN INPUT;EST.TABLE.MAINT;21
  OPT = S$VALUE
510*
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      GOTO 100
    CASE OPT # "" AND NUM(OPT)
      ON OPT GOSUB 1100,1200
    CASE OPT = "A" AND CNT < 99
      DONE = 0
      FOR REF.NO = CNT + 1 TO 99 UNTIL DONE
        GOSUB 50000
        GOSUB 10100
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 600
        END ELSE
          CNT = CNT + 1
        END
      NEXT REF.NO
      REF.NO = CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "C" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 10100
      END
    CASE OPT = "I" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        CNT = CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 10100
        IF S$VALUE = "END" THEN
          GOSUB 600
          CNT = CNT - 1
        END
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "D" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 600
        CNT = CNT - 1
        IF REF.NO > CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "S"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > CNT THEN REF.NO = 1
      GOSUB 50000
    * T25978 v
    CASE OPT = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = 'ST'
      REF.NO = 1
      GOSUB 50000
    CASE OPT = 'SB'
      REF.NO = CNT
      GOSUB 50000
    * T25978 ^
    CASE OPT = "F"
      MATWRITE ESTT.REC ON ESTIMATE.TBL,CONO:TBL.KEY
      GOTO 100
  END CASE
  GOTO 500
*
*---- DELETE MULTI-LINE DATA
*
600*
  S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
  S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF.NO,0)
  ESTT.QTY = DELETE(ESTT.QTY,1,REF.NO,0)
  ESTT.FCTR = DELETE(ESTT.FCTR,1,REF.NO,0)
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
700*
  S$DATA(12) = INSERT(S$DATA(12),S$SCR,REF.NO,0,"")
  S$DATA(13) = INSERT(S$DATA(13),S$SCR,REF.NO,0,"")
  ESTT.QTY = INSERT(ESTT.QTY,1,REF.NO,0,"")
  ESTT.FCTR = INSERT(ESTT.FCTR,1,REF.NO,0,"")
  RETURN
*
*---- GET DESCRIPTION
*
1100*
  SCREEN FIELD;EST.TABLE.MAINT;3
  SCREEN INPUT;EST.TABLE.MAINT;3;RETURN
  ESTT.DESC = S$VALUE
  RETURN
*
*---- GET EXTRAPOLATE FLAG
*
1200*
  SCREEN FIELD;EST.TABLE.MAINT;6
  SCREEN INPUT;EST.TABLE.MAINT;6;RETURN
  ESTT.EXTR = S$VALUE
  RETURN
*
*---- GET MULTI-LINE DATA
*
10100*
  S$VAL = REF.NO
  SCREEN DISPLAY;EST.TABLE.MAINT;11
  S$VAL = REF.NO
  SCREEN FIELD;EST.TABLE.MAINT;12
  IF REF.NO = 1 THEN S$MINV = 1 ELSE S$MINV = ESTT.QTY<1,REF.NO-1>+1
*T26138 v
*  IF REF.NO >= CNT THEN S$MAXV = 99999999 ELSE S$MAXV = ESTT.QTY<1,REF.NO+1>-1
  IF REF.NO >= CNT THEN S$MAXV = 999999999 ELSE S$MAXV = ESTT.QTY<1,REF.NO+1>-1
*T26138 ^
  SCREEN INPUT;EST.TABLE.MAINT;12;RETURN
  ESTT.QTY<1,REF.NO> = S$VALUE
  S$VAL = REF.NO
  SCREEN FIELD;EST.TABLE.MAINT;13
  SCREEN INPUT;EST.TABLE.MAINT;13;RETURN
  ESTT.FCTR<1,REF.NO> = S$VALUE
  RETURN
*
*---- GET LINE REFERENCE NUMBER
*
30000*
  SCREEN FIELD;EST.TABLE.MAINT;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > CNT THEN S$MAXV = CNT
  SCREEN INPUT;EST.TABLE.MAINT;22
  RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
50000*
  START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = COUNT(S$DATA(12)<S$SCR>,VM) + (S$DATA(12)<S$SCR> # "")
  SCREEN MULTI;EST.TABLE.MAINT;C;11;12;13
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
END
