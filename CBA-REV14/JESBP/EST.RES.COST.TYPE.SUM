   SUBROUTINE EST.RES.COST.TYPE.SUM (CONO, EST.KEY, DSEL, CSEL, QSEL)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RES.COST.TYPE.SUM
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 05/09/86
*
* DESCRIPTION
*
* This subroutine will display estimate data summarized by cost type with
* detail for material costs.
* Data may be summarized for one or all components for the specified order
* quantity.
*
*T22078 gat 07/18/1997 * FIX XREF PROBLEM
*T26138 cmykleb 11/27/2001 * Expand qty fields from 8 to 9 digits.
*T26411 cm 01/30/2002 When (Q)ty is chosen list is not in GUI.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EST.RES.COST.TYPE.SUM
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
*---- DIMENSIONED VARIABLES
*
   DIM TOT.REC(10)
   EQU TOTAL.HRS     TO TOT.REC(1)
   EQU TOTAL.DCOST   TO TOT.REC(2)
   EQU TOTAL.COST    TO TOT.REC(3)
   EQU TOTAL.SALE    TO TOT.REC(4)
*
*---- INITIALIZATION
*
   OPEN '','XREF.DATA' TO XREF.DATA ELSE RETURN
   OPEN '','ESTIMATE.WORK' TO ESTIMATE.WORK ELSE NULL
   SCREEN DEFINE;EST.RES.COST.TYPE.SUM
   SCREEN FORMAT
   SCREEN COUNT;EST.RES.COST.TYPE.SUM;5
   TOP.CNT = S$LCNT
   TOP.SPC = S$LSPC
   SCREEN COUNT;EST.RES.COST.TYPE.SUM;25
   BOT.CNT = S$LCNT
   BOT.SPC = S$LSPC
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
*
*---- MAIN PROCESSING
*
100*
   GOSUB 6000
   GOSUB 7000
   SCREEN DISPLAY;EST.RES.COST.TYPE.SUM;ALL
   S$VAL=1
   S$CNT=TOP.CNT
   SCREEN MULTI;EST.RES.COST.TYPE.SUM;C;5;6;7;8
   S$VAL=1
   S$CNT=BOT.CNT
   SCREEN MULTI;EST.RES.COST.TYPE.SUM;C;25;26;27
*
*---- GET OPERATOR REPLY
*
500*
   SCREEN FIELD;EST.RES.COST.TYPE.SUM;36
   SCREEN INPUT;EST.RES.COST.TYPE.SUM;36
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         SCREEN CLEAR;EST.RES.COST.TYPE.SUM;D
         GOTO 99999
      CASE OPTION = "Q"
         GOSUB 550
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         IF S$VALUE = QSEL THEN GOTO 500
         QSEL = S$VALUE
         SCREEN CLEAR;EST.RES.COST.TYPE.SUM
         GOTO 100
   END CASE
   GOTO 500
*
*---- GET ORDER QUANTITY
*
550*
   EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
   BEGIN CASE
      CASE EC < 2 
         S$VALUE=EST.QTY<1,1>
*T26138 v
*     CASE EC < 6
      CASE EC < 1
*T26138 ^
         SCREEN FIELD;;37
         S$MINV=1;S$MAXV=EC
         S$PMSG="Enter Quantity"
         FOR EP=1 TO EC
            S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
         NEXT EP
         SCREEN INPUT;;37;RETURN
         S$VALUE=EST.QTY<1,S$VALUE>
      CASE 1
         GXR.NAME = 'EST.QTY.SEL'
         GXR.XREF = ESTIMATE.WORK
         GXR.SRCH.ID = EST.KEY
         MATWRITE EST.REC TO ESTIMATE.WORK, CONO:EST.KEY
*T26411 v
*        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T26411 ^
         DELETE ESTIMATE.WORK, CONO:EST.KEY
         IF GXR.ID = "" THEN 
            S$VALUE = ''
         END ELSE
            S$VALUE = EST.QTY<1,GXR.ID>
         END
         SCREEN FORMAT
   END CASE
   RETURN
*
*---- LOAD SCREEN DATA (TOP)
*
6000*
   MAT CSUM.REC = ""
   CALL EST.RES.COST.TYPE.SUB (CONO, EST.KEY, DSEL,CSEL, QSEL, MAT CSUM.REC)
   MAT TOT.REC = ""
   TOTAL.HRS = CSUM.LB.HRS
   TOTAL.DCOST = CSUM.LB.DCOST+CSUM.MT.DCOST+CSUM.OS.DCOST+CSUM.SP.DCOST+CSUM.MS.DCOST
   TOTAL.COST = CSUM.LB.COST+CSUM.MT.COST+CSUM.OS.COST+CSUM.SP.COST+CSUM.MS.COST
   TOTAL.SALE = CSUM.LB.SALE+CSUM.MT.SALE+CSUM.OS.SALE+CSUM.SP.SALE+CSUM.MS.SALE
   S$DATA(1)<S$SCR> = DATE()
   IF CSEL = "ALL" THEN
      S$DATA(2)<S$SCR> = "ALL COMPONENTS"
   END ELSE
      S$DATA(2)<S$SCR> = EST.PROD.DESC<1,CSEL>
   END
*T26138 v
*  S$DATA(3)<S$SCR> = QSEL
*  S$DATA(5)<S$SCR,1> = CSUM.LB.HRS
*  S$DATA(6)<S$SCR,1> = CSUM.LB.DCOST
*  S$DATA(6)<S$SCR,2> = CSUM.MT.DCOST
*  S$DATA(6)<S$SCR,3> = CSUM.OS.DCOST
*  S$DATA(6)<S$SCR,4> = CSUM.SP.DCOST
*  S$DATA(6)<S$SCR,5> = CSUM.MS.DCOST
*  S$DATA(7)<S$SCR,1> = CSUM.LB.COST
*  S$DATA(7)<S$SCR,2> = CSUM.MT.COST
*  S$DATA(7)<S$SCR,3> = CSUM.OS.COST
*  S$DATA(7)<S$SCR,4> = CSUM.SP.COST
*  S$DATA(7)<S$SCR,5> = CSUM.MS.COST
*  S$DATA(8)<S$SCR,1> = CSUM.LB.SALE
*  S$DATA(8)<S$SCR,2> = CSUM.MT.SALE
*  S$DATA(8)<S$SCR,3> = CSUM.OS.SALE
*  S$DATA(8)<S$SCR,4> = CSUM.SP.SALE
*  S$DATA(8)<S$SCR,5> = CSUM.MS.SALE
*  S$DATA(15)<S$SCR> = TOTAL.HRS
*  S$DATA(16)<S$SCR> = TOTAL.DCOST
*  S$DATA(17)<S$SCR> = TOTAL.COST
*  S$DATA(38)<S$SCR> = INT(TOTAL.SALE/(QSEL/1000)+.5)
*  S$DATA(18)<S$SCR> = TOTAL.SALE
   S$DATA(3)<S$SCR> = OCONV(QSEL,'MD0,')
   S$DATA(5)<S$SCR,1> = CSUM.LB.HRS
   S$DATA(6)<S$SCR,1> = OCONV(CSUM.LB.DCOST,'MD2,')
   S$DATA(6)<S$SCR,2> = OCONV(CSUM.MT.DCOST,'MD2,')
   S$DATA(6)<S$SCR,3> = OCONV(CSUM.OS.DCOST,'MD2,')
   S$DATA(6)<S$SCR,4> = OCONV(CSUM.SP.DCOST,'MD2,')
   S$DATA(6)<S$SCR,5> = OCONV(CSUM.MS.DCOST,'MD2,')
   S$DATA(7)<S$SCR,1> = OCONV(CSUM.LB.COST,'MD2,')
   S$DATA(7)<S$SCR,2> = OCONV(CSUM.MT.COST,'MD2,')
   S$DATA(7)<S$SCR,3> = OCONV(CSUM.OS.COST,'MD2,')
   S$DATA(7)<S$SCR,4> = OCONV(CSUM.SP.COST,'MD2,')
   S$DATA(7)<S$SCR,5> = OCONV(CSUM.MS.COST,'MD2,')
   S$DATA(8)<S$SCR,1> = OCONV(CSUM.LB.SALE,'MD2,')
   S$DATA(8)<S$SCR,2> = OCONV(CSUM.MT.SALE,'MD2,')
   S$DATA(8)<S$SCR,3> = OCONV(CSUM.OS.SALE,'MD2,')
   S$DATA(8)<S$SCR,4> = OCONV(CSUM.SP.SALE,'MD2,')
   S$DATA(8)<S$SCR,5> = OCONV(CSUM.MS.SALE,'MD2,')
   S$DATA(15)<S$SCR> = TOTAL.HRS
   S$DATA(16)<S$SCR> = OCONV(TOTAL.DCOST,'MD2,')
   S$DATA(17)<S$SCR> = OCONV(TOTAL.COST,'MD2,')
   S$DATA(38)<S$SCR> = INT(TOTAL.SALE/(QSEL/1000)+.5)
   S$DATA(18)<S$SCR> = OCONV(TOTAL.SALE,'MD2,')
*T26138 ^
   RETURN
*
*---- LOAD SCREEN DATA (BOTTOM)
*
7000*
*T26138 v
*  S$DATA(25)<S$SCR,1> = CSUM.MT.DCOST.DET<1,1>
*  S$DATA(25)<S$SCR,2> = CSUM.MT.DCOST.DET<1,2>
*  S$DATA(25)<S$SCR,3> = CSUM.MT.DCOST.DET<1,3>
*  S$DATA(25)<S$SCR,4> = CSUM.MT.DCOST.DET<1,4>
*  S$DATA(25)<S$SCR,5> = CSUM.MT.DCOST.DET<1,5>
*  S$DATA(25)<S$SCR,6> = CSUM.MT.DCOST.DET<1,6>
*  S$DATA(26)<S$SCR,1> = CSUM.MT.COST.DET<1,1>
*  S$DATA(26)<S$SCR,2> = CSUM.MT.COST.DET<1,2>
*  S$DATA(26)<S$SCR,3> = CSUM.MT.COST.DET<1,3>
*  S$DATA(26)<S$SCR,4> = CSUM.MT.COST.DET<1,4>
*  S$DATA(26)<S$SCR,5> = CSUM.MT.COST.DET<1,5>
*  S$DATA(26)<S$SCR,6> = CSUM.MT.COST.DET<1,6>
*  S$DATA(27)<S$SCR,1> = CSUM.MT.SALE.DET<1,1>
*  S$DATA(27)<S$SCR,2> = CSUM.MT.SALE.DET<1,2>
*  S$DATA(27)<S$SCR,3> = CSUM.MT.SALE.DET<1,3>
*  S$DATA(27)<S$SCR,4> = CSUM.MT.SALE.DET<1,4>
*  S$DATA(27)<S$SCR,5> = CSUM.MT.SALE.DET<1,5>
*  S$DATA(27)<S$SCR,6> = CSUM.MT.SALE.DET<1,6>
   S$DATA(25)<S$SCR,1> = OCONV(CSUM.MT.DCOST.DET<1,1>,'MD2,')
   S$DATA(25)<S$SCR,2> = OCONV(CSUM.MT.DCOST.DET<1,2>,'MD2,')
   S$DATA(25)<S$SCR,3> = OCONV(CSUM.MT.DCOST.DET<1,3>,'MD2,')
   S$DATA(25)<S$SCR,4> = OCONV(CSUM.MT.DCOST.DET<1,4>,'MD2,')
   S$DATA(25)<S$SCR,5> = OCONV(CSUM.MT.DCOST.DET<1,5>,'MD2,')
   S$DATA(25)<S$SCR,6> = OCONV(CSUM.MT.DCOST.DET<1,6>,'MD2,')
   S$DATA(26)<S$SCR,1> = OCONV(CSUM.MT.COST.DET<1,1>,'MD2,')
   S$DATA(26)<S$SCR,2> = OCONV(CSUM.MT.COST.DET<1,2>,'MD2,')
   S$DATA(26)<S$SCR,3> = OCONV(CSUM.MT.COST.DET<1,3>,'MD2,')
   S$DATA(26)<S$SCR,4> = OCONV(CSUM.MT.COST.DET<1,4>,'MD2,')
   S$DATA(26)<S$SCR,5> = OCONV(CSUM.MT.COST.DET<1,5>,'MD2,')
   S$DATA(26)<S$SCR,6> = OCONV(CSUM.MT.COST.DET<1,6>,'MD2,')
   S$DATA(27)<S$SCR,1> = OCONV(CSUM.MT.SALE.DET<1,1>,'MD2,')
   S$DATA(27)<S$SCR,2> = OCONV(CSUM.MT.SALE.DET<1,2>,'MD2,')
   S$DATA(27)<S$SCR,3> = OCONV(CSUM.MT.SALE.DET<1,3>,'MD2,')
   S$DATA(27)<S$SCR,4> = OCONV(CSUM.MT.SALE.DET<1,4>,'MD2,')
   S$DATA(27)<S$SCR,5> = OCONV(CSUM.MT.SALE.DET<1,5>,'MD2,')
   S$DATA(27)<S$SCR,6> = OCONV(CSUM.MT.SALE.DET<1,6>,'MD2,')
*T26138 ^
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
   SCREEN CLEAR;EST.RES.COST.TYPE.SUM;D
   RETURN
END
