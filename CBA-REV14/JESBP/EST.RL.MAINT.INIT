      SUBROUTINE EST.RL.MAINT.INIT (CONO,ACTION,EST.FLAG,EST.KEY,EST.DUP.KEY,NEW.REC,STD.FLAG,DUP.FLAG,CUST.EST.XREF,PROSPECT.EST.XREF)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.MAINT.INIT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/12/86
*
* DESCRIPTION
*
* This subroutine is used to get the estimate ID from user.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RL
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      OPEN "","JES.SCREENS" TO M.SCREENS ELSE 
         ERRMSG = "JES.SCREENS IS NOT A FILE"
         GOSUB 90000
         STOP
      END
      PORTNO="TTY"; CALL SYSVARS.SUB(PORTNO)
      S$SCR=1
      SCREEN DEFINE;EST.RL.MAINT
      MAT GEN.XREF.REC=""
      GXR.CO=CONO
      GOTO 110
*
*---- MAIN PROCESSING
*
100 *
      SCREEN CLEAR
110 *
      MAT EST.REC=""
      MAT EST.RL.REC=""
      NEW.REC=0
      S$DATA(1)<S$SCR>=""
      SCREEN FIELD;;1
      IF ACTION="I" THEN
         S$TYP="7"
         S$PATRN="0N,0N-2N,???"
         S$HMSG='Enter Estimate ID or "???" for cross-referencing.'
      END
      SCREEN INPUT;;1
      EST.FLAG=S$VALUE
      STD.FLAG=0
      DUP.FLAG=0
      BEGIN CASE
      CASE EST.FLAG="END"
         GOTO 99999
      CASE EST.FLAG="N"
         READU NUM FROM CONTROL,CONO:"EST.SEQ.NUM" ELSE NUM=10001
         SEQ="01"
         EST.KEY=NUM:"-":SEQ
         EST.DUP.KEY=EST.KEY
         NUM=NUM+1
         WRITE NUM ON CONTROL,CONO:"EST.SEQ.NUM"
         MAT EST.REC=""
         MAT EST.RL.REC=""
         NEW.REC=1
      CASE EST.FLAG="NS"
114 *
         SCREEN FIELD;;34
         S$PMSG="Enter new standard estimate number -"
         S$MAXL=8;S$PATRN="0N"
         SCREEN INPUT;;34;GOTO 100
         IF S$VALUE="" THEN GOTO 100
         EST.KEY=S$VALUE
         EST.DUP.KEY=EST.KEY
         MATREADU EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            MAT EST.REC=""
            NEW.REC=1
         END
         MATREADU EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
            MAT EST.RL.REC=""
         END
         IF NOT(NEW.REC) THEN
            RELEASE
            ERRMSG="Standard already present. Try again! "
            GOSUB 90000
            GOTO 114
         END
         STD.FLAG=1
      CASE EST.FLAG="R"
116 *
         SCREEN FIELD;;34
         S$PMSG="Enter estimate number to be revised -"
         S$HMSG='You may enter "???" for cross-referencing.'
         S$PATRN="0N-2N,0N,???"
         SCREEN INPUT;;34;GOTO 100
         IF S$VALUE="" THEN GOTO 100
         IF S$VALUE="???" THEN
            PARAM="SELECT"; PARAM<-1>='TYPE=R'; GOSUB 12000
            IF EST.KEY="" THEN GOTO 110
            IF FIELD(EST.KEY,"-",2)="" THEN GOTO 110
         END ELSE
            EST.KEY=S$VALUE
         END
         EST.DUP.KEY=EST.KEY
         MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            ERRMSG="Estimate not on file. Try again! "
            GOSUB 90000
            GOTO 116
         END
         MATREAD EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
            MAT EST.RL.REC=""
         END
         KEY.BASE=FIELD(EST.KEY,"-",1)
         KEY.SEQ=FIELD(EST.KEY,"-",2)
         RDONE=0
         FOR SEQ=KEY.SEQ+1 TO 99 UNTIL RDONE
            EST.KEY=KEY.BASE:"-":STR("0",2-LEN(SEQ)):SEQ
            RFND=1
            READU DUMMY FROM ESTIMATE,CONO:EST.KEY ELSE RFND=0
            IF RFND THEN
               RELEASE ESTIMATE,CONO:EST.KEY
            END ELSE
               RDONE=1
            END
         NEXT REV
         IF NOT(RDONE) THEN
            RELEASE
            ERRMSG="Maximum revisions=99. Try again! "
            GOSUB 90000
            GOTO 100
         END
         DUP.FLAG=1
      CASE EST.FLAG="D"
118 *
         SCREEN FIELD;;34
         S$PMSG="Enter estimate number to be duplicated -"
         S$HMSG='You may enter "???" for cross-referencing.'
         S$PATRN="0N-2N,0N,???"
         SCREEN INPUT;;34;GOTO 100
         IF S$VALUE="" THEN GOTO 100
         IF S$VALUE="???" THEN
            PARAM="SELECT"; PARAM<-1>='TYPE=R'; GOSUB 12000
            IF EST.KEY="" THEN GOTO 110
            IF FIELD(EST.KEY,"-",2)="" THEN GOTO 110
         END ELSE
            EST.KEY=S$VALUE
         END
         EST.DUP.KEY=EST.KEY
         MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            ERRMSG="Estimate not on file. Try again! "
            GOSUB 90000
            GOTO 118
         END
         MATREAD EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
            MAT EST.RL.REC=""
         END
         EST.MASTER='' ; EST.SUBS=''
         READU NUM FROM CONTROL,CONO:"EST.SEQ.NUM" ELSE NUM=10001
         SEQ="01"
         EST.KEY=NUM:"-":SEQ
         NUM=NUM+1
         WRITE NUM ON CONTROL,CONO:"EST.SEQ.NUM"
         READU DUMMY FROM ESTIMATE,CONO:EST.KEY ELSE NULL
         DUP.FLAG=1
      CASE EST.FLAG="DS"
120 *
         SCREEN FIELD;;34
         S$PMSG="Enter standard estimate number to be duplicated -"
         S$HMSG='You may enter "???" for cross-referencing.'
         S$MAXL=8;S$PATRN="0N,???"
         SCREEN INPUT;;34;GOTO 100
         IF S$VALUE="" THEN GOTO 100
         IF S$VALUE="???" THEN
            PARAM="SELECT"; PARAM<-1>='TYPE=S'; GOSUB 12000
            IF EST.KEY="" THEN GOTO 110
            IF FIELD(EST.KEY,"-",2) # "" THEN GOTO 110
         END ELSE
            EST.KEY=S$VALUE
         END
         EST.DUP.KEY=EST.KEY
         MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            ERRMSG="Estimate not on file. Try again! "
            GOSUB 90000
            GOTO 120
         END
         MATREAD EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
            MAT EST.RL.REC=""
         END
121 *
         SCREEN FIELD;;34
         S$PMSG="Enter new standard estimate number -"
         S$MAXL=8;S$PATRN="0N"
         SCREEN INPUT;;34;GOTO 100
         IF S$VALUE="" THEN GOTO 100
         EST.KEY=S$VALUE
         READU DUMMY FROM ESTIMATE,CONO:EST.KEY ELSE NEW.REC=1
         IF NOT(NEW.REC) THEN
            RELEASE
            ERRMSG="Standard already present. Try again! "
            GOSUB 90000
            GOTO 121
         END
         NEW.REC=0
         STD.FLAG=1
         DUP.FLAG=1
      CASE EST.FLAG # ""
         IF S$VALUE="???" THEN
            PARAM="SELECT"; GOSUB 12000
            IF EST.KEY="" THEN GOTO 110
         END ELSE
            EST.KEY=S$VALUE
         END
         IF (EST.KEY MATCHES "0N" OR EST.KEY MATCHES "0N-2N") AND EST.KEY[1,1] # "-" THEN
            NULL
         END ELSE
            ERRMSG = "Invalid format. Try again! "
            GOSUB 90000
            GOTO 100
         END
         EST.DUP.KEY=EST.KEY
         IF ACTION="I" THEN
            MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
               RELEASE
               ERRMSG="Estimate not on file. Try again! "
               GOSUB 90000
               GOTO 100
            END
            MATREAD EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
               MAT EST.RL.REC=""
            END
         END ELSE
            MATREADU EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
               SCREEN FIELD;;44
               SCREEN INPUT;;44
               IF S$VALUE="Y" THEN
                  MAT EST.REC=""
                  NEW.REC=1
                  IF EST.KEY MATCHES "0N" THEN
                     STD.FLAG = 1
                  END
               END ELSE
                  RELEASE
                  GOTO 100
               END
            END
            MATREADU EST.RL.REC FROM ESTIMATE.RL,CONO:EST.KEY ELSE
               MAT EST.RL.REC=""
            END
         END
      CASE EST.FLAG=""
         GOSUB 10300
         IF S$VALUE="END" THEN GOTO 100
         GXR.FILE=ESTIMATE
         IF EST.CUST="P" THEN
            GXR.SRCH.ID=EST.CUST.NAME
            GXR.XREF=PROSPECT.EST.XREF
            GXR.NAME="PROSP.RL.CUST.XREF"
         END ELSE
            GXR.SRCH.ID=EST.CUST
            GXR.XREF=CUST.EST.XREF
            GXR.NAME="EST.RL.CUST.XREF"
         END
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         IF GXR.ACTION # "X" THEN
            SCREEN FORMAT
         END
         IF GXR.ID="" THEN GOTO 100
         IF ACTION="I" THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:GXR.ID ELSE
               RELEASE
               GOTO 100
            END
            MATREAD EST.RL.REC FROM ESTIMATE.RL,CONO:GXR.ID ELSE
               MAT EST.RL.REC=""
            END
         END ELSE
            MATREADU EST.REC FROM ESTIMATE, CONO:GXR.ID ELSE
               RELEASE
               GOTO 100
            END
            MATREADU EST.RL.REC FROM ESTIMATE.RL,CONO:GXR.ID ELSE
               MAT EST.RL.REC=""
            END
         END
         EST.KEY=GXR.ID
         EST.DUP.KEY=EST.KEY
      CASE 1
         ERRMSG="INVALID RESPONSE"
         GOSUB 90000
         GOTO 100
      END CASE
      S$DATA(1)<S$SCR>=EST.KEY
      SCREEN DISPLAY;;1
      GOTO 99999
*
*---- CUSTOMER NUMBER,NAME & ADDRESS
*
10300 *
      SCREEN FIELD;;6
      SCREEN INPUT;;6;RETURN
      BEGIN CASE
      CASE S$VALUE="END"
         GOTO 10399
      CASE S$VALUE=""
         SCREEN FIELD;;7
         SCREEN INPUT;;7
         BEGIN CASE
         CASE S$VALUE="END" OR S$VALUE=""
            GOTO 10300
         CASE S$VALUE # ""
            GXR.XREF=CUSTOMER.XREF
            GXR.SRCH.ID=S$VALUE
            GXR.FILE=CUSTOMER
            GXR.NAME = "CUSTOMER"
            CALL GEN.XREF.SUB (MAT GEN.XREF.REC,PREFIX,XREF.DATA)
            IF GXR.ID="" THEN GXR.ID="P"
            IF GXR.ACTION # "X" THEN
               SCREEN FORMAT
               S$DATA(6)<S$SCR>=GXR.ID
               SCREEN DISPLAY;;6
            END ELSE
               S$DATA(6)<S$SCR>=GXR.ID
               SCREEN DISPLAY;;6
            END
            BEGIN CASE
            CASE GXR.ID="END"
               GOTO 10300
            CASE GXR.ID="P"
               EST.CUST=GXR.ID
               GOTO 10340
            CASE GXR.ID # ""
               MATREAD CUST.REC FROM CUSTOMER,CONO:GXR.ID ELSE
                  ERRMSG="Invalid customer. Try again! "
                  GOSUB 90000
                  GOTO 10300
               END
               EST.CUST=GXR.ID
               GOTO 10350
            END CASE
         END CASE
      CASE S$VALUE="P"
         EST.CUST=S$VALUE
         GOTO 10340
      CASE S$VALUE # ""
         MATREAD CUST.REC FROM CUSTOMER,CONO:S$VALUE ELSE
            ERRMSG="Invalid customer. Try again! "
            GOSUB 90000
            GOTO 10300
         END
         EST.CUST=S$VALUE
         GOTO 10350
      END CASE
10340 *
      SCREEN FIELD;;7
      SCREEN INPUT;;7
      IF S$VALUE # "END" THEN EST.CUST.NAME=S$VALUE ELSE GOTO 10399
      IF EST.FLAG="" THEN GOTO 10399
      SCREEN FIELD;;8
      SCREEN INPUT;;8
      IF S$VALUE # "END" THEN EST.CUST.ADDR1=S$VALUE ELSE GOTO 10399
      SCREEN FIELD;;10
      SCREEN INPUT;;10
      IF S$VALUE # "END" THEN EST.CUST.ADDR2=S$VALUE ELSE GOTO 10399
      SCREEN FIELD;;12
      SCREEN INPUT;;12
      IF S$VALUE # "END" THEN EST.CUST.ADDR3=S$VALUE ELSE GOTO 10399
      SCREEN FIELD;;45
      SCREEN INPUT;;45
      IF S$VALUE # "END" THEN EST.CUST.ADDR4=S$VALUE ELSE GOTO 10399
      GOTO 10399
10350 *
      S$DATA(7)<S$SCR>=CUST.NAME
      S$DATA(8)<S$SCR>=CUST.ADDR1
      S$DATA(10)<S$SCR>=CUST.ADDR2
      S$DATA(12)<S$SCR>=CUST.ADDR3
      S$DATA(45)<S$SCR>=CUST.ADDR4:"  ":CUST.ZIP
      SCREEN DISPLAY;;7
      SCREEN DISPLAY;;8
      SCREEN DISPLAY;;10
      SCREEN DISPLAY;;12
      SCREEN DISPLAY;;45
      EST.CUST.NAME=CUST.NAME
      EST.CUST.ADDR1=CUST.ADDR1
      EST.CUST.ADDR2=CUST.ADDR2
      EST.CUST.ADDR3=CUST.ADDR3
      EST.CUST.ADDR4=CUST.ADDR4:"  ":CUST.ZIP
10399 *
      RETURN
*
*---- GENERAL CROSS-REFERENCE ROUTINE
*
12000 *
      WRITE PARAM ON CONTROL,"EST.XREF.":PORTNO
      PERFORM "EST.XREF"
      READ EST.KEY FROM CONTROL,"EST.XREF.":PORTNO ELSE EST.KEY=""
      DELETE CONTROL,"EST.XREF.":PORTNO
      SCREEN FORMAT
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- RETURN TO CALLING PROGRAM
*
99999 *
      RETURN
      END
