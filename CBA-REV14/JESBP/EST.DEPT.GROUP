   SUBROUTINE EST.DEPT.GROUP (CONO, ACTION, LINE.CNT, REF.NO, CURR.REF.NO, MD, COMP, EQTY, DPTR)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.DEPT.GROUP
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 03/02/87
*
* DESCRIPTION
*
* This subroutine is used to maintain the quantity and factor fields for
* selected group.
*
* CSF 18984 DMT 3/19/93 CORRECT FACTOR RETREIVAL FROM TABLE WHEN QTY INPUT
* CSF 21977 GAT 11/04/94 CORRECT FACTOR "" FROM FORMUALA
* C25275 gat 04/01/1996 * FIX INK WITH ZERO PRICE
* CSF 25880
*T21177 diane 11/21/1996 * REV10B UPG
*T21526 diane 01/30/1997 *  Use COM'L EST.DEPT.GROUP FOR NEW RES.
*T25099 cm 04/21/2000 * Correct display issue when scrolling after loading
*                       a new group.
*T27250 epitka 01/29/2003 * Check the platform.
*T27684 cmykleb 09/08/2003 * Change echo $UDTHOME to call SYSVARS.SUB
*T27716 cmykleb 10/09/2003 * Add Pre-pres inclusive functionality.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
   OPEN "","VOC" TO VOC ELSE RETURN
*
*-- INITIALIZATION
*
*T27684 v
*  PLATFORM=SYSTEM(33)                          
*  IF PLATFORM='UNIX' THEN                      
*     PERFORM "!echo $UDTHOME" CAPTURING UDTDIR  
*  END ELSE                                     
*     PERFORM "!echo %UDTHOME%" CAPTURING UDTDIR 
*  END                                          
   UDTDIR = "UDTHOME"
   CALL SYSVARS.SUB (UDTDIR)
*T27684 ^
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
   GRP.ID = ESTD.GRP.ID<1,REF.NO>
   SCREEN DEFINE;EST.DEPT.MAINT
   SCREEN COUNT;EST.DEPT.MAINT;9
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
*
*---- MAIN PROCESSING
*
100*
   LOOP
      REF.NO = REF.NO + 1
   WHILE ESTD.GRP.ID<1,REF.NO> = GRP.ID DO
      MAT ESTD.TEMP = ""
      FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
         ESTD.TEMP(A) = ESTD.REC(A)<1,REF.NO>
      NEXT A
      TEMP.QTY = TEMP.QTY / 100
      IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
      TEMP.STD = TEMP.STD / 100
      IF TEMP.STD = INT(TEMP.STD) THEN TEMP.STD = INT(TEMP.STD)
      TEMP.GRP.QTY = TEMP.GRP.QTY / 100
      IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
      GOSUB 50000
      GOSUB 1000
   REPEAT
   LINE.CNT = COUNT(ESTD.TYPE,VM) + (ESTD.TYPE # "")
   REF.NO = REF.NO - 1
   GOTO 99999
*
*---- GET MULTI-LINE DATA
*
1000*
*
*---- GET TRANSACTION CODE
*
1400*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "G"
      CASE TEMP.TYPE[1,1] = "L"
      CASE TEMP.TYPE[1,1] = "M"
      CASE TEMP.TYPE[1,1] = "I"
      CASE TEMP.TYPE[1,1] = "P"
1430*
         S$DATA(11)<S$SCR,REF.NO>=TEMP.OPV
         S$VAL=REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;11
* S$O.R="O"
         SCREEN INPUT;EST.DEPT.MAINT;11;RETURN
         IF S$VALUE="???" THEN
*               FLD=11;FREF=REF.NO;XTYPE="VENDOR";XFILE=VENDOR;XFLD=1;GOSUB 49000
            FLD=11;FREF=REF.NO;XTYPE="VEND";XFILE=VEND;XFLD=1;GOSUB 49000
            IF XCODE="" THEN GOTO 1430
         END
         IF S$VALUE="" THEN
            MAT VEND.REC=""
         END ELSE
            MATREAD VEND.REC FROM VEND,CONO:S$VALUE ELSE
               ERRMSG="Invalid Vendor ID. Try again! "
               GOSUB 90000
               GOTO 1430
            END
         END
         TEMP.OPV=S$VALUE
1440*
         PREV.CODE = TEMP.CODE
         S$VAL = REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;12
         SCREEN INPUT;EST.DEPT.MAINT;12;RETURN
         MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:S$VALUE ELSE
            ERRMSG = "Invalid O/P category code. Try again! "
            GOSUB 90000
            GOTO 1440
         END
         TEMP.CODE = S$VALUE
         TEMP.IND.1 = CAOS.FOH.PCT
         TEMP.MARKUP = CAOS.MARKUP
         IF TEMP.CODE # PREV.CODE THEN TEMP.DESC = CAOS.DESC
      CASE TEMP.TYPE[1,1] = "S"
1450*
         S$VAL = REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;12
         SCREEN INPUT;EST.DEPT.MAINT;12;RETURN
         MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:S$VALUE ELSE
            ERRMSG = "Invalid carrier ID. Try again! "
            GOSUB 90000
            GOTO 1450
         END
         TEMP.CODE = S$VALUE
         TEMP.DESC = SHPV.DESC
   END CASE
*
*---- GET DESCRIPTION
*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "L"
      CASE TEMP.TYPE[1,1] = "I"
      CASE TEMP.TYPE[1,1] = "M"
      CASE 1
         S$DATA(19)<S$SCR,REF.NO> = TEMP.DESC
         S$VAL = REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;19
         SCREEN INPUT;EST.DEPT.MAINT;19;RETURN
         TEMP.DESC = S$VALUE
   END CASE
*
*---- GET QUANTITY
*
1500*
   BEGIN CASE
      CASE TEMP.GRP.QOR = "N"
      CASE TEMP.GRP.QOR = "X"
*CSF 25880 v
         IF (TEMP.GRP.QPARAM = "799") AND (REF.NO+0 > 1) THEN
            TEMP.QTY = ESTD.QTY<1,REF.NO-1> / 100
            IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
            S$VAL = REF.NO
            S$DATA(13)<S$SCR,REF.NO> = TEMP.QTY
            SCREEN DISPLAY;EST.DEPT.MAINT;13
         END
*CSF 25880 ^
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;13
*        IF ESTG.HMSG # "" THEN S$HMSG = ESTG.HMSG
         SCREEN INPUT;EST.DEPT.MAINT;13;RETURN
         IF NUM(S$VALUE) THEN
            TEMP.QTY = S$VALUE
         END ELSE
            SUB.ID=S$VALUE[2,99]
            SUB.NAME="EST.FORMULA.Q":SUB.ID
            FORMULA.FOUND = 0
            READ DUMMY FROM VOC, SUB.NAME THEN
               IF DUMMY<1> = "C" THEN
                  OSREAD DUMMY FROM DUMMY<2> THEN FORMULA.FOUND = 1
               END
            END ELSE
               OSREAD DUMMY FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
            END
            IF NOT(FORMULA.FOUND) THEN
               ERRMSG="Invalid formula ID. Try again !"
               GOSUB 90000
               GOTO 1500
            END
            TEMP.FPTR = REF.NO
            CALL @SUB.NAME (CONO,"",EQTY,DPTR,COMP)
            IF TEMP.QTY = "" THEN GOTO 1500
            TEMP.GRP.QCALC = "F"
            TEMP.GRP.QPARAM = SUB.ID
            TEMP.GRP.QOR = "X"
            S$VAL = REF.NO
            S$DATA(13)<S$SCR,REF.NO> = TEMP.QTY
            SCREEN DISPLAY;EST.DEPT.MAINT;13
         END
   END CASE
*
*---- GET FACTOR
*
1600*
   PREV.FCTR = TEMP.FCTR
   BEGIN CASE
**       CASE TEMP.GRP.FOR = "N" AND TEMP.GRP.FCALC # 'F' AND TEMP.GRP.FCALC # 'T'
**         CASE TEMP.GRP.FOR = "X" AND TEMP.GRP.FCALC # 'F' AND TEMP.GRP.FCALC # 'T'
      CASE TEMP.GRP.FOR = "N"
      CASE TEMP.GRP.FOR = "X"
*CSF 25880 v
         IF (TEMP.GRP.FPARAM = "799") AND (REF.NO+0 > 1) THEN
            TEMP.FCTR = ESTD.FCTR<1,TEMP.FPTR-1>
            IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
            S$VAL = REF.NO
            S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
            SCREEN DISPLAY;EST.DEPT.MAINT;14
         END
*CSF 25880 ^
      CASE TEMP.TYPE[1,1] = "L"
         BEGIN CASE
            CASE TEMP.GRP.FCALC="F"
               S$VALUE="F":TEMP.GRP.FPARAM
            CASE TEMP.GRP.FCALC="T"
               S$VALUE="T":TEMP.GRP.FPARAM
            CASE 1
               S$VAL = REF.NO
               S$DATA(14)<S$SCR,REF.NO> = OCONV(S$DATA(14)<S$SCR,REF.NO>,"MD3Z")
               SCREEN FIELD;EST.DEPT.MAINT;14
               S$TYP = 7
               SCREEN INPUT;EST.DEPT.MAINT;14;RETURN
         END CASE
         BEGIN CASE
            CASE NUM(S$VALUE)
               TEMP.FCTR = S$VALUE*1000
*T25099 v
               S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
*T25099 ^
               GOTO 1700
            CASE S$VALUE[1,1]="F"
               SUB.ID=S$VALUE[2,99]
               SUB.NAME="EST.FORMULA.F":SUB.ID
               FORMULA.FOUND = 0
               READ DUMMY FROM VOC, SUB.NAME THEN
                  IF DUMMY<1> = "C" THEN
                     OSREAD DUMMY FROM DUMMY<2> THEN FORMULA.FOUND = 1
                  END
               END ELSE
                  OSREAD DUMMY FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
               END
               IF NOT(FORMULA.FOUND) THEN
                  ERRMSG="Invalid formula ID. Try again !"
                  GOSUB 90000
                  GOTO 1600
               END
               TEMP.FPTR = REF.NO
               CALL @SUB.NAME (CONO,"",EQTY,DPTR,COMP)
            CASE S$VALUE[1,1] = "T"
               SUB.ID = S$VALUE[2,99]
               CALL EST.TABLE.FCTR (CONO, SUB.ID, TEMP.GRP.FCTR)
               IF SUB.ID = "NONE" THEN 
                  SUB.ID = "" 
                  GOTO 1600
               END
            CASE 1
               ERRMSG = "Invalid entry. Try again !"
               GOSUB 90000
               GOTO 1600
         END CASE
         IF TEMP.FCTR = "" THEN TEMP.FCTR = 0
         TEMP.GRP.FCALC = S$VALUE[1,1]
         TEMP.GRP.FPARAM = SUB.ID
         TEMP.GRP.FOR = "X"
         S$VAL = REF.NO
         S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
         SCREEN DISPLAY;EST.DEPT.MAINT;14
   END CASE
*
*---- GET STANDARD
*
1700*
   BEGIN CASE
      CASE TEMP.GRP.FOR = "N" AND TEMP.TYPE # "MI" 
      CASE TEMP.GRP.FOR = "N" AND TEMP.TYPE = "MI" AND TEMP.STD+0 # 0
      CASE TEMP.GRP.FOR = "X"
      CASE TEMP.FCTR = PREV.FCTR OR TEMP.STD+0 = 0
         S$VAL = REF.NO
         SCREEN FIELD;EST.DEPT.MAINT;15
         SCREEN INPUT;EST.DEPT.MAINT;15;RETURN
         IF S$VALUE # TEMP.STD THEN
*      C25275  v
            BEGIN CASE
               CASE TEMP.STD+0 # 0 AND TEMP.TYPE[1,1] = "L" 
                  TEMP.FCTR = INT(S$VALUE / TEMP.STD * 1000 + 0.5)
                  S$VAL = REF.NO
                  S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
                  SCREEN DISPLAY;EST.DEPT.MAINT;14
                  S$VAL = REF.NO
                  S$DATA(15)<S$SCR,REF.NO> = TEMP.STD
                  SCREEN DISPLAY;EST.DEPT.MAINT;15
*       CASE TEMP.STD+0 = 0 AND TEMP.TYPE[2,1] = "I" 
               CASE TEMP.TYPE[2,1] = "I"
                  INKCNT = DCOUNT(EST.PROD.INK.ID<1,COMP,TEMP.MPTR>,"!")
                  FOR MM = 1 TO INKCNT
                     IF FIELD(EST.PROD.INK.ID<1,COMP,TEMP.MPTR>,"!",MM) = TEMP.OPV THEN
                        MACRO REPVAL;EST.PROD.INK.UCOST<1,COMP,TEMP.MPTR>;"!";MM;S$VALUE
                     END
                  NEXT MM
                  TEMP.STD = S$VALUE
               CASE 1
                  TEMP.STD = S$VALUE
            END CASE
         END
   END CASE
   IF TEMP.TYPE[1,1] = "P" THEN
      CALL EST.OSP.UPD (CONO,"A",DPTR,COMP,EQTY,REF.NO)
   END
*
*---- CALCULATE HOURS, COST AND SALE AMOUNTS
*
1800*
*T21526 v
   IF EST.PDEF.TYPE # "RL" THEN
*T27716 v
*     CALL EST.CALC.COST (CONO)
      CALL EST.CALC.COST (CONO,DPTR)
*T27716 ^
  *
      S$VAL = REF.NO
      S$DATA(18)<S$SCR,REF.NO> = TEMP.TSALE
   END ELSE
      CALL EST.RES.CALC.COST (CONO,EST.QTY,DPTR)
      S$VAL = REF.NO
      S$DATA(18)<S$SCR,REF.NO> = TEMP.SALE
   END
*T21526 ^
   SCREEN DISPLAY;EST.DEPT.MAINT;18
*
*---- SAVE ALL VALUES
*
1900*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "M"
         GOSUB 30000
      CASE 1
         GOSUB 30000
   END CASE
   RETURN
*
*---- STORE OPERATION RELATED DATA
*
30000*
   FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
      ESTD.REC(A)<1,REF.NO> = ESTD.TEMP(A)
   NEXT A
   ESTD.QTY<1,REF.NO> = TEMP.QTY * 100
   ESTD.STD<1,REF.NO> = TEMP.STD * 100
   ESTD.GRP.QTY<1,REF.NO> = TEMP.GRP.QTY * 100
   RETURN
*
*---- CROSS REFERENCE
*
49000*
* CALL GEN.CODE.XREF (CONO,XTYPE,XFILE,XFLD,XCODE)
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   GXR.ID = ""
   GXR.NAME = "GEN.CODE"
   GXR.FILE = XFILE
   GXR.SORT.FILE = XTYPE
   CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
   XCODE = GXR.ID
   SCREEN FORMAT
   S$VALUE=XCODE
   S$DATA(FLD)<S$SCR,FREF>=XCODE
   SCREEN DISPLAY;EST.DEPT.MAINT;ALL
   CURR.REF.NO=""
   GOSUB 50000
   RETURN
*
*-- DISPLAY MULTI-LINE DATA
*
50000*
   START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO=CURR.REF.NO THEN RETURN
   CURR.REF.NO=START.REF.NO
   S$VAL=START.REF.NO
   S$CNT=COUNT(S$DATA(9)<S$SCR>,VM) + (S$DATA(9)<S$SCR> # "")
   SCREEN MULTI;EST.DEPT.MAINT;C;8;9;10;11;12;13;14;15;16;18;19
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
* PRINT @(0,23):CL:ERRMSG:
* INPUT REPLY,1:
* PRINT @(0,23):CL:
* RETURN
*
*---- END OF PROGRAM
*
99999*
   RETURN
