***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.CASE.BIND.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 06/01/87
*
* DESCRIPTION
*
* This program updates and maintaines the ESTIMATE.MATL file.
* The key to this file will be CONO:"C". (For case-making materials)
*
*T26126 adelgado 03/08/2002 * Implement the LOCKED clause for READU.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JCS.CPYLIB>FOH.TABLE
*COPY>JES.CPYLIB>ESTIMATE.MARKUP
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>FINISH
*COPY>ICS.CPYLIB>COLOR
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.MATL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
    ERRMSG = "CANNOT OPEN FOH.TABLE FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.MARKUP FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","FINISH" TO FINISH ELSE
    ERRMSG = "CANNOT OPEN FINISH FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","COLOR" TO COLOR ELSE
    ERRMSG = "CANNOT OPEN COLOR FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","MD" TO MD ELSE
    ERRMSG = "CANNOT OPEN MASTER DICTIONARY"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.CASE.BIND.MAINT
  SCREEN FORMAT
  ERRMSG = ""
*
*---- MAIN PROCESSING
*
100*
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  NEW.MV = "";NEW.REC = 0
  * T26126 v
  MATREADU ESTM.REC FROM ESTIMATE.MATL,CONO:"C" LOCKED
    ERRMSG = 'ESTIMATE MATL record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 99999 
  END ELSE
  * T26126 ^
    MAT ESTM.REC = ""
    NEW.MV = 1
    NEW.REC = 1
  END
  SCREEN FIELD;;2
  IF NOT(NEW.REC) THEN
    S$O.R = "O"
    S$DEFAULT = ESTM.PROD<1,1>
  END
  SCREEN INPUT;;2
  BEGIN CASE
    CASE S$VALUE = "END"
      GOTO 99999
    CASE NEW.REC = 1 AND NEW.MV = 1
      ESTM.PROD<1,NEW.MV> = S$VALUE
      PROD.CNT = 1
    CASE 1
      PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
      LOCATE S$VALUE IN ESTM.PROD<1>,1 BY "AL" SETTING NEW.MV ELSE
        NEW.REC = 1
        IF NEW.MV <= PROD.CNT THEN
          ESTM.PROD = INSERT(ESTM.PROD,1,NEW.MV,0,"")
          ESTM.DESC = INSERT(ESTM.DESC,1,NEW.MV,0,"")
          ESTM.WIDTH = INSERT(ESTM.WIDTH,1,NEW.MV,0,"")
          ESTM.LENGTH = INSERT(ESTM.LENGTH,1,NEW.MV,0,"")
          ESTM.GRAIN = INSERT(ESTM.GRAIN,1,NEW.MV,0,"")
          ESTM.CALIPER = INSERT(ESTM.CALIPER,1,NEW.MV,0,"")
          ESTM.BASIS.WT = INSERT(ESTM.BASIS.WT,1,NEW.MV,0,"")
          ESTM.CLR.CD = INSERT(ESTM.CLR.CD,1,NEW.MV,0,"")
          ESTM.FINISH.CD = INSERT(ESTM.FINISH.CD,1,NEW.MV,0,"")
          ESTM.EMBOSS = INSERT(ESTM.EMBOSS,1,NEW.MV,0,"")
          ESTM.UM = INSERT(ESTM.UM,1,NEW.MV,0,"")
          ESTM.COST = INSERT(ESTM.COST,1,NEW.MV,0,"")
          ESTM.COST.UNIT = INSERT(ESTM.COST.UNIT,1,NEW.MV,0,"")
          ESTM.FOH.PCT = INSERT(ESTM.FOH.PCT,1,NEW.MV,0,"")
          ESTM.MARKUP = INSERT(ESTM.MARKUP,1,NEW.MV,0,"")
          ESTM.QCALC = INSERT(ESTM.QCALC,1,NEW.MV,0,"")
          ESTM.QPARAM = INSERT(ESTM.QPARAM,1,NEW.MV,0,"")
          ESTM.QOR = INSERT(ESTM.QOR,1,NEW.MV,0,"")
          ESTM.FCALC = INSERT(ESTM.FCALC,1,NEW.MV,0,"")
          ESTM.FPARAM = INSERT(ESTM.FPARAM,1,NEW.MV,0,"")
          ESTM.FOR = INSERT(ESTM.FOR,1,NEW.MV,0,"")
        END
        ESTM.PROD<1,NEW.MV> = S$VALUE
      END
      PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
  END CASE
  IF NEW.REC THEN
    FOR FLD = 1 TO 15
      BEGIN CASE
        CASE FLD <= 10
          ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10900,11000
        CASE FLD <= 20
          ON FLD-10 GOSUB 11100,11200,11300,11400,19990
      END CASE
      IF S$VALUE = "END" THEN
        SCREEN CLEAR
        RELEASE ESTIMATE.MATL,CONO:"C"
        GOTO 100
      END
    NEXT FLD
  END ELSE
    GOSUB 80000
  END
*
*---- GET OPERATOR REPLY
*
500*
  PREV.OPTION = ""
  MORE.OPT = 1
  LOOP
    S$DATA(41)<S$SCR> = ""
    SCREEN FIELD;;41
    SCREEN INPUT;;41
    OPTION = S$VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE ESTIMATE.MATL,CONO:"C"
        MORE.OPT = 0
      CASE OPTION # "" AND NUM(OPTION)
        FLD = OPTION
        BEGIN CASE
          CASE FLD <= 10
            ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10900,11000
          CASE FLD <= 20
            ON FLD-10 GOSUB 11100,11200,11300,11400,19990
        END CASE
      CASE OPTION = "D"
        SCREEN FIELD;;44
        SCREEN INPUT;;44
        IF S$VALUE = "Y" THEN
          ESTM.PROD = DELETE(ESTM.PROD,1,NEW.MV,0)
          ESTM.DESC = DELETE(ESTM.DESC,1,NEW.MV,0)
          ESTM.WIDTH = DELETE(ESTM.WIDTH,1,NEW.MV,0)
          ESTM.LENGTH = DELETE(ESTM.LENGTH,1,NEW.MV,0)
          ESTM.GRAIN = DELETE(ESTM.GRAIN,1,NEW.MV,0)
          ESTM.CALIPER = DELETE(ESTM.CALIPER,1,NEW.MV,0)
          ESTM.BASIS.WT = DELETE(ESTM.BASIS.WT,1,NEW.MV,0)
          ESTM.CLR.CD = DELETE(ESTM.CLR.CD,1,NEW.MV,0)
          ESTM.FINISH.CD = DELETE(ESTM.FINISH.CD,1,NEW.MV,0)
          ESTM.EMBOSS = DELETE(ESTM.EMBOSS,1,NEW.MV,0)
          ESTM.UM = DELETE(ESTM.UM,1,NEW.MV,0)
          ESTM.COST = DELETE(ESTM.COST,1,NEW.MV,0)
          ESTM.COST.UNIT = DELETE(ESTM.COST.UNIT,1,NEW.MV,0)
          ESTM.FOH.PCT = DELETE(ESTM.FOH.PCT,1,NEW.MV,0)
          ESTM.MARKUP = DELETE(ESTM.MARKUP,1,NEW.MV,0)
          ESTM.QCALC = DELETE(ESTM.QCALC,1,NEW.MV,0)
          ESTM.QPARAM = DELETE(ESTM.QPARAM,1,NEW.MV,0)
          ESTM.QOR = DELETE(ESTM.QOR,1,NEW.MV,0)
          ESTM.FCALC = DELETE(ESTM.FCALC,1,NEW.MV,0)
          ESTM.FPARAM = DELETE(ESTM.FPARAM,1,NEW.MV,0)
          ESTM.FOR = DELETE(ESTM.FOR,1,NEW.MV,0)
          PROD.CNT = COUNT(ESTM.PROD,VM) + (ESTM.PROD # "")
          MATWRITE ESTM.REC ON ESTIMATE.MATL,CONO:"C"
          ERRMSG = "You have deleted this record from the file."
          GOSUB 90000
          IF NEW.MV > PROD.CNT THEN NEW.MV = 1
          SCREEN CLEAR
          S$DATA(2)<S$SCR> = ESTM.PROD<1,NEW.MV>
          GOSUB 80000
        END
      CASE OPTION = "N"
        IF PROD.CNT = 1 AND NEW.MV = 1 THEN
          ERRMSG = "This is the only record for this material type."
          GOSUB 90000
        END ELSE
          NEW.MV = NEW.MV + 1
          IF NEW.MV > PROD.CNT THEN NEW.MV = 1
          SCREEN CLEAR
          S$DATA(2)<S$SCR> = ESTM.PROD<1,NEW.MV>
          GOSUB 80000
        END
      CASE OPTION = "F"
        IF PREV.OPTION # "D" THEN
          CALL EST.MATL.FULL.DESC.SUB(MAT ESTM.REC,CONTROL,NEW.MV,"S")
          MATWRITE ESTM.REC ON ESTIMATE.MATL,CONO:"C"
        END
        MORE.OPT = 0
    END CASE
    PREV.OPTION = OPTION
  WHILE MORE.OPT DO REPEAT
  SCREEN CLEAR
  GOTO 100
*
*---- GET DESCRIPTION
*
10100*
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  ESTM.DESC<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET SIZE (WIDTH X LENGTH)
*
10200*
  SCREEN FIELD;;4
  SCREEN INPUT;;4;RETURN
  ESTM.WIDTH<1,NEW.MV> = S$VALUE
  SCREEN FIELD;;5
  SCREEN INPUT;;5;RETURN
  ESTM.LENGTH<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET GRAIN DIRECTION
*
10300*
  SCREEN FIELD;;6
  SCREEN INPUT;;6;RETURN
  ESTM.GRAIN<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET BASIS WEIGHT
*
10400*
  SCREEN FIELD;;9
  SCREEN INPUT;;9;RETURN
  ESTM.BASIS.WT<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET CALIPER
*
10500*
  SCREEN FIELD;;10
  SCREEN INPUT;;10;RETURN
  ESTM.CALIPER<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET COLOR
*
10600*
  S$DATA(15)<S$SCR> = ESTM.CLR.CD<1,NEW.MV>
  SCREEN FIELD;;15
  SCREEN INPUT;;15;RETURN
  IF S$VALUE # "" THEN
    MATREAD COLOR.REC FROM COLOR,CONO:S$VALUE ELSE
      ERRMSG = "Invalid Color Code. Try again! "
      GOSUB 90000
      GOTO 10600
    END
  END
  ESTM.CLR.CD<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET FINISH
*
10700*
  S$DATA(16)<S$SCR> = ESTM.FINISH.CD<1,NEW.MV>
  SCREEN FIELD;;16
  SCREEN INPUT;;16;RETURN
  IF S$VALUE # "" THEN
    MATREAD FINISH.REC FROM FINISH,CONO:S$VALUE ELSE
      ERRMSG = "Invalid Finish Code. Try again! "
      GOSUB 90000
      GOTO 10700
    END
  END
  ESTM.FINISH.CD<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET EMBOSSING TYPE
*
10800*
  SCREEN FIELD;;21
  SCREEN INPUT;;21;RETURN
  ESTM.EMBOSS<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET UNIT OF MEASURE
*
10900*
  SCREEN FIELD;;17
  SCREEN INPUT;;17
  ESTM.UM<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET UNIT PRICE
*
11000*
  SCREEN FIELD;;45
  SCREEN INPUT;;45;RETURN
  ESTM.COST<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET COSTING UNIT
*
11100*
  SCREEN FIELD;;8
  SCREEN INPUT;;8;RETURN
  ESTM.COST.UNIT<1,NEW.MV> = S$VALUE
  RETURN
*
*---- GET FORMULA ID
*
11200*
  S$DATA(46)<S$SCR> = ESTM.QPARAM<1,NEW.MV>
  SCREEN FIELD;;46
  SCREEN INPUT;;46;RETURN
  READ DUMMY FROM MD, "EST.FORMULA.Q":S$VALUE ELSE
    ERRMSG = "Invalid formula ID - EST.FORMULA.Q":S$VALUE:". Try again! "
    GOSUB 90000
    GOTO 11200
  END
  ESTM.QCALC<1,NEW.MV> = "F"
  ESTM.QPARAM<1,NEW.MV> = S$VALUE
  ESTM.QOR<1,NEW.MV> = "N"
  ESTM.FCALC<1,NEW.MV> = "C"
  ESTM.FPARAM<1,NEW.MV> = "1"
  ESTM.FOR<1,NEW.MV> = "N"
  RETURN
*
*---- GET INDIRECT PERCENT
*
11300*
  SAVE.FOH.PCT = S$DATA(18)<S$SCR>
11302*
  S$DATA(18)<S$SCR> = SAVE.FOH.PCT
  SCREEN FIELD;;18
  SCREEN INPUT;;18;RETURN
  BEGIN CASE
    CASE NUM(S$VALUE)
      IVAL = ICONV(S$VALUE,"MD2")
      IF IVAL > 10000 THEN
        ERRMSG = "** OUT OF RANGE **"
        GOSUB 90000
        GOTO 11302
      END
      ESTM.FOH.PCT<1,NEW.MV> = IVAL
      S$DATA(18)<S$SCR> = OCONV(IVAL,"MD2")
      SCREEN DISPLAY;;18
    CASE S$VALUE # ""
      MATREAD FTR.REC FROM FOH.TABLE,CONO:S$VALUE ELSE
        ERRMSG = "Invalid Table ID. Try again! "
        GOSUB 90000
        GOTO 11302
      END
      ESTM.FOH.PCT<1,NEW.MV> = S$VALUE
  END CASE
  RETURN
*
*---- GET MARK-UP % OR TABLE ID
*
11400*
  SAVE.MARKUP = S$DATA(19)<S$SCR>
11402*
  S$DATA(19)<S$SCR> = SAVE.MARKUP
  SCREEN FIELD;;19
  SCREEN INPUT;;19;RETURN
  BEGIN CASE
    CASE NUM(S$VALUE)
      IVAL = ICONV(S$VALUE,"MD2")
      IF IVAL > 10000 THEN
        ERRMSG = "** OUT OF RANGE **"
        GOSUB 90000
        GOTO 11402
      END
      ESTM.MARKUP<1,NEW.MV> = IVAL
      S$DATA(19)<S$SCR> = OCONV(IVAL,"MD2")
      SCREEN DISPLAY;;19
    CASE S$VALUE # ""
      MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:S$VALUE ELSE
        ERRMSG = "Invalid Table ID. Try again! "
        GOSUB 90000
        GOTO 11402
      END
      ESTM.MARKUP<1,NEW.MV> = S$VALUE
  END CASE
  RETURN
*
*---- DUMMY
*
19990*
  RETURN
*
*---- LOAD SCREEN VALUES
*
80000*
  IF NUM(ESTM.FOH.PCT<1,NEW.MV>) THEN
    INDIRECT = OCONV(ESTM.FOH.PCT<1,NEW.MV>,"MD2")
  END ELSE
    INDIRECT = ESTM.FOH.PCT<1,NEW.MV>
  END
  IF NUM(ESTM.MARKUP<1,NEW.MV>) THEN
    MARKUP = OCONV(ESTM.MARKUP<1,NEW.MV>,"MD2")
  END ELSE
    MARKUP = ESTM.MARKUP<1,NEW.MV>
  END
  S$DATA(3)<S$SCR> = ESTM.DESC<1,NEW.MV>
  S$DATA(4)<S$SCR> = ESTM.WIDTH<1,NEW.MV>
  S$DATA(5)<S$SCR> = ESTM.LENGTH<1,NEW.MV>
  S$DATA(6)<S$SCR> = ESTM.GRAIN<1,NEW.MV>
  S$DATA(9)<S$SCR> = ESTM.BASIS.WT<1,NEW.MV>
  S$DATA(10)<S$SCR> = ESTM.CALIPER<1,NEW.MV>
  S$DATA(15)<S$SCR> = ESTM.CLR.CD<1,NEW.MV>
  S$DATA(16)<S$SCR> = ESTM.FINISH.CD<1,NEW.MV>
  S$DATA(21)<S$SCR> = ESTM.EMBOSS<1,NEW.MV>
  S$DATA(17)<S$SCR> = ESTM.UM<1,NEW.MV>
  S$DATA(45)<S$SCR> = ESTM.COST<1,NEW.MV>
  S$DATA(8)<S$SCR> = ESTM.COST.UNIT<1,NEW.MV>
  S$DATA(46)<S$SCR> = ESTM.QPARAM<1,NEW.MV>
  S$DATA(18)<S$SCR> = INDIRECT
  S$DATA(19)<S$SCR> = MARKUP
80100*
  SCREEN DISPLAY;;ALL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*---- END OF PROGRAM
*
99999*
*       PRINT @(-1):
END
