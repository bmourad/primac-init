  SUBROUTINE EST.RES.DIE.MAINT.SUB (CONO, COMP)
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - RES.BP
* PROGRAM     - EST.RES.DIE.MAINT.SUB
* BY          - KERRY WILSON
* DATE        - 01/22/90
* DESCRIPTION - This program maintains the Roll Label Die.
* T20719 GAT 07/22/96 * DIE MAINT FOR COMMERCIAL ESTIMATE
*                       MODIFICATION SAME FILES FOR DIE MAINT
*T21177 diane 11/06/1996 * REV11 UPG
*T21344 lanny 12/18/1996 * Add Delete function to options.
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES.DIE
*COPY>JES.CPYLIB>ESTIMATE.RES.GEARSET
*COPY>JES.CPYLIB>ESTIMATE.RES.CYLINDER
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SET SYSCOM
*
  SYS.TYPE=1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN 'ESTIMATE.RES.DIE' TO ESTIMATE.RES.DIE ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.DIE FILE'
    GOTO 93000
  END
  OPEN 'ESTIMATE.RES.GEARSET' TO ESTIMATE.RES.GEARSET ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.GEARSET FILE'
    GOTO 93000
  END
  OPEN 'ESTIMATE.RES.CYLINDER' TO ESTIMATE.RES.CYLINDER ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.CYLINDER FILE'
    GOTO 93000
  END
  OPEN 'ESTIMATE.RES.SHAPE' TO ESTIMATE.RES.SHAPE ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.SHAPE FILE'
    GOTO 93000
  END
  OPEN 'DEPARTMENT' TO DEPARTMENT ELSE
    ERRMSG = 'CANNOT OPEN DEPARTMENT FILE'
    GOTO 93000
  END
  OPEN 'COST.CNTR' TO COST.CNTR ELSE
    ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
    GOTO 93000
  END
  OPEN 'EQUIPMENT' TO EQUIPMENT ELSE
    ERRMSG = 'CANNOT OPEN EQUIPMENT FILE'
    GOTO 93000
  END
  OPEN 'VEND' TO VEND ELSE
    ERRMSG = 'CANNOT OPEN VEND FILE'
    GOTO 93000
  END
  OPEN 'JES.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'CANNOT OPEN JES.SCREENS FILE'
    GOTO 93000
  END
*   OPEN 'DEV.SCREENS' TO DEV.SCREENS ELSE
*      ERRMSG = 'CANNOT OPEN DEV.SCREENS FILE'
*      GOTO 93000
*   END
  OPEN 'VENDOR.XREF' TO VENDOR.XREF ELSE
    ERRMSG = 'CANNOT OPEN VENDOR.XREF FILE'
    GOTO 93000
  END
  OPEN 'ESTIMATE.RES.DIE.XREF' TO ESTIMATE.RES.DIE.XREF ELSE
    ERRMSG = 'CANNOT OPEN ESTIMATE.RES.DIE.XREF FILE'
    GOTO 93000
  END
  OPEN 'COMPANY' TO COMPANY ELSE
    ERRMSG = 'CANNOT OPEN COMPANY FILE'
    GOTO 93000
  END
  OPEN 'CONTROL' TO CONTROL ELSE
    ERRMSG = 'CANNOT OPEN CONTROL FILE'
    GOTO 93000
  END
  OPEN 'PREFIX' TO PREFIX ELSE
    ERRMSG = 'CANNOT OPEN PREFIX FILE'
    GOTO 93000
  END
  OPEN 'XREF.DATA' TO XREF.DATA ELSE
    ERRMSG = 'CANNOT OPEN XREF.DATA FILE'
    GOTO 93000
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN DEFINE;EST.RES.DIE.MAINT.SUB
  SCREEN FORMAT
  SCREEN COUNT;;32
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  SCREEN COUNT;;12
  PRS.LINE.COUNT = S$LCNT
  PRS.LINE.SPACE = S$LSPC
  NEW.NAME = ''
  OLD.NAME = ''
  TEMP.GEARSET = ''
*
*---- SET UP GEN.XREF.REC
*
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
*
*---- MAIN PROCESSING
*
100 *
  CCTR = ''
  DESC = ''
  PRS.CURR.REF.NO = ''
  PRS.REF.NO = 1
  CURR.REF.NO = ''
  REF.NO = 1
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
*    T20719
  IF EST.PROD.DIE<1,COMP> = "" THEN
    SCREEN FIELD;;2
    SCREEN INPUT;;2
    RLKEY = CONO:TEMP.GEARSET:S$VALUE
  END ELSE
    S$VALUE = EST.PROD.DIE<1,COMP>
    RLKEY = CONO:TEMP.GEARSET:S$VALUE
    S$DATA(2)<S$SCR> = RLKEY[4,9]
    SCREEN DISPLAY;;2
  END
  NEW.REC = 0
  BEGIN CASE
    CASE S$VALUE = 'END'
      GOTO 99999
    CASE S$VALUE = '??'
      GXR.NAME = "ESTIMATE.RES.GEARSET"
      GXR.FILE = ESTIMATE.RES.GEARSET
      GXR.SORT.FILE = ESTIMATE.RES.GEARSET
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      TEMP.GEARSET=GXR.ID
      SCREEN FORMAT
      S$DATA(2)<S$SCR> = GXR.ID
      SCREEN DISPLAY;;2
      GOTO 100
    CASE S$VALUE = '???'
      GXR.NAME = "ESTIMATE.RES.DIE"
      GXR.FILE = ESTIMATE.RES.DIE
      GXR.SORT.FILE = ESTIMATE.RES.DIE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      TEMP.DIE=GXR.ID
      SCREEN FORMAT
      S$DATA(2)<S$SCR> = GXR.ID
      SCREEN DISPLAY;;2
      RLKEY = CONO:GXR.ID
    CASE LEN(RLKEY) < 6
      ERRMSG = 'Die ID must be at least 3 characters long'
      GOSUB 91000
      TEMP.GEARSET = ""
      GOTO 100
  END CASE
110 *
  MATREADU RLDIE.REC FROM ESTIMATE.RES.DIE,RLKEY THEN
    NEW.NAME = RLDIE.RF:INT(RLDIE.SZ.ACROSS/10000):"*":INT(RLDIE.SZ.AROUND/10000)
    OLD.NAME = NEW.NAME
  END ELSE
    MAT RLDIE.REC = ''
    NEW.REC = 1
    NEW.NAME = ''
    OLD.NAME = ''
  END
  MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,RLKEY[1,5] ELSE
    ERRMSG = 'Invalid Gearset Code: ':RLKEY[4,2]:' '
    GOSUB 91000
    TEMP.GEARSET = ""
    GOTO 100
  END
  TEMP.GEARSET = ''
  CNT = COUNT(RLDIE.COMMENTS,VM) + (RLDIE.COMMENTS # "")
  GOSUB 51100
  IF NEW.REC THEN
    PRS.REF.NO = 1
    GOSUB 51000
    FOR FLD = 1 TO 20
      ON FLD GOSUB 10050,10100,10200,10250,10300,10400,10500,10600,10700,10800,10900,11000,11050,11100,11200,11300,11400,11550,11560,11570
      IF S$VALUE = 'END' THEN 
        SCREEN CLEAR
        RELEASE
        TEMP.GEARSET = ""
        GOTO 100
      END
    NEXT FLD
    CNT = 0
    OPT2 = 'A'
    GOSUB 40000
  END ELSE
    CNT = DCOUNT(RLDIE.COMMENTS,VM)
    GOSUB 80000
    SCREEN DISPLAY;;ALL
  END
*
*---- ENTER PROMPT
*
500 *
  SCREEN FIELD;;21
  SCREEN INPUT;;21
  OPTION = S$VALUE
  BEGIN CASE
    CASE NUM(OPTION) AND NEW.REC
      ON OPTION GOSUB 10050,10100,10200,10250,10300,10400,10500,10600,10700,10800,10900,11000,11050,11100,11200,11300,11400,11550,11560,11570
    CASE OPTION = 'D'
510 *
* P_X  = 0 ; P_Y = 23 ; P_VALUE = 'Are you sure you want to Delete (Y/N)? ' ; P_OPT = ""
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*   INPUT ANS:
* P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
* CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      SCREEN FIELD;;41
      SCREEN INPUT;;41
      BEGIN CASE
        CASE S$VALUE = 'Y'
          NEW.NAME = ""
          RLKEY.DIE = RLKEY[4,LEN(RLKEY)-3]
          CALL GEN.XREF.MAINT(CONO,RLKEY.DIE,OLD.NAME,NEW.NAME,ESTIMATE.RES.DIE.XREF,PREFIX)
          DELETE ESTIMATE.RES.DIE,RLKEY
          SCREEN CLEAR
          RELEASE
          TEMP.GEARSET = ""
          GOTO 100
        CASE S$VALUE = 'N'
          GOTO 500
        CASE 1
          GOTO 510
      END CASE
*T21344 v
    CASE OPTION = 'R'
      DEL EST.PROD.DIE<1,COMP>
      GOTO 99999
*T21344 ^
    CASE OPTION = 'C'
520 *
      IF NEW.REC THEN
        SCREEN FIELD;;34
        SCREEN INPUT;;34
      END ELSE
        SCREEN FIELD;;17
        SCREEN INPUT;;17
      END
      OPT2 = S$VALUE
      BEGIN CASE
        CASE OPT2 = "" OR OPT2 = "E" OR OPT2 = "END"
          GOTO 500
        CASE OPT2 = "A" AND CNT < 99 AND NEW.REC
          GOSUB 40000
        CASE OPT2 = "C" AND CNT > 0 AND NEW.REC
          GOSUB 30000
          IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 11600
          END
        CASE OPT2 = "I" AND CNT > 0 AND NEW.REC
          GOSUB 30000
          IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            S$DATA(33) = INSERT(S$DATA(33),S$SCR,REF.NO,0,"")
            RLDIE.COMMENTS = INSERT(RLDIE.COMMENTS,1,REF.NO,0,"")
            CNT = CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 11600
            IF S$VALUE = "END" THEN
              S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
              RLDIE.COMMENTS = DELETE(RLDIE.COMMENTS,1,REF.NO,0)
              CNT = CNT - 1
            END
            CURR.REF.NO = ""
            GOSUB 50000
          END
        CASE OPT2 = "D" AND CNT > 0 AND NEW.REC
          GOSUB 30000
          IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
            RLDIE.COMMENTS = DELETE(RLDIE.COMMENTS,1,REF.NO,0)
            CNT = CNT - 1
            IF REF.NO > CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
          END
        CASE OPT2 = "S" 
          REF.NO = CURR.REF.NO + LINE.COUNT
          IF REF.NO > CNT THEN REF.NO = 1
          GOSUB 50000
    * T25978 v
        CASE OPT2 = 'SR'
          REF.NO = CURR.REF.NO - LINE.COUNT
          IF REF.NO < 1 THEN REF.NO = 1
          GOSUB 50000
        CASE OPT2 = 'ST'
          REF.NO = 1
          GOSUB 50000
        CASE OPT2 = 'SB'
          REF.NO = CNT
          GOSUB 50000
    * T25978 ^
      END CASE
      GOTO 520
    CASE OPTION = 'P'
      PRS.REF.NO = PRS.CURR.REF.NO + PRS.LINE.COUNT
      IF PRS.REF.NO > PRS.CNT THEN PRS.REF.NO = 1
      GOSUB 51000
    CASE OPTION = 'E' OR OPTION = 'END'
      IF NEW.REC THEN
        SCREEN FIELD;;16
        SCREEN INPUT;;16
        IF S$VALUE = "N" THEN
          GO 500
        END 
      END ELSE
        GO 99999
      END
      SCREEN CLEAR
      RELEASE
      TEMP.GEARSET = ""
      GOTO 100
    CASE OPTION = 'F' 
      MATWRITE RLDIE.REC ON ESTIMATE.RES.DIE,RLKEY
      NEW.NAME = RLDIE.RF:INT(RLDIE.SZ.ACROSS/10000):'*':INT(RLDIE.SZ.AROUND/10000)
      IF OLD.NAME # NEW.NAME THEN
        RLKEY.DIE = RLKEY[4,LEN(RLKEY)-3]
        CALL GEN.XREF.MAINT(CONO,RLKEY.DIE,OLD.NAME,NEW.NAME,ESTIMATE.RES.DIE.XREF,PREFIX)
      END
      SCREEN CLEAR
      RELEASE
      TEMP.GEARSET = ""
*  GOTO 100
      EST.PROD.DIE<1,COMP> = RLKEY[4,99]
      GOTO 99999
  END CASE
  GOTO 500
*
* Rotary or Flatbed
*
10050 *
* SCREEN FIELD;;35
* SCREEN INPUT;;35;RETURN
  IF ESTGS.IMPRESS = "" THEN
    S$VALUE = 'R'
  END ELSE
    S$VALUE = 'F'
  END
  S$DATA(35)<S$SCR> = S$VALUE
  RLDIE.RF = S$VALUE
  IF S$VALUE = 'F' THEN
    S$DATA(36)<S$SCR>='Flatbed'
  END ELSE
    S$DATA(36)<S$SCR>='Rotary'
  END
  SCREEN DISPLAY;;35
  SCREEN DISPLAY;;36
  RETURN
*
*---- DIE DESCRIPTION
*
10100 *
  SCREEN FIELD;;37
  SCREEN INPUT;;37;RETURN
  RLDIE.DESC = S$VALUE
  RETURN
*
*---- VENDOR ID
*
10200 *
  SCREEN FIELD;;4
  SCREEN INPUT;;4;RETURN
  RLDIE.VEND= S$VALUE
  IF S$VALUE = '' THEN
    SCREEN FIELD;;26
    SCREEN INPUT;;26
    IF S$VALUE = '' OR S$VALUE = 'END' THEN RETURN
    GXR.NAME = 'VEND'
    GXR.XREF = VENDOR.XREF
    GXR.FILE = VEND
    GXR.ID = ''
    GXR.SRCH.ID = S$VALUE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    IF GXR.ID = '' THEN
      S$DATA(26)<S$SCR> = ''
    END
    SCREEN FORMAT
    SCREEN DISPLAY;;ALL
    CURR.REF.NO = ""
    GOSUB 50000
    RLDIE.VEND = GXR.ID
    IF GXR.ID = '' THEN
      GOTO 10200
    END ELSE
      MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
        ERRMSG = 'VENDOR NUMBER ':GXR.ID:' IS MISSING'
        GOSUB 91000
        GOTO 10200
      END
      OLD.NAME = VEND.DESC
      STATUS = '0'
      VEND.NUM = GXR.ID
      S$DATA(4)<S$SCR> = VEND.NUM
      SCREEN DISPLAY;;4
    END
  END
  MATREAD VEND.REC FROM VEND,CONO:RLDIE.VEND ELSE
    ERRMSG = 'INVALID VENDOR'
    GOSUB 91000
    GOTO 10200
  END
  S$DATA(26)<S$SCR> = VEND.DESC
  SCREEN DISPLAY;;26
  RETURN
*
*---- CYLINDER ID
*
10250 *
  SCREEN FIELD;;31
  SCREEN INPUT;;31;RETURN
  IF S$VALUE = '???' THEN
    GXR.NAME = "ESTIMATE.RES.CYLINDER"
    GXR.FILE = ESTIMATE.RES.CYLINDER
    GXR.SORT.FILE = ESTIMATE.RES.CYLINDER
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    S$VALUE=GXR.ID
    SCREEN FORMAT
    S$DATA(31)<S$SCR> = S$VALUE
    SCREEN DISPLAY;;ALL
    CURR.REF.NO=0; GOSUB 50000
    PRS.CURR.REF.NO=0; GOSUB 51000
    IF S$VALUE='' THEN GOTO 10250
  END
  MATREAD RLCYN.REC FROM ESTIMATE.RES.CYLINDER,CONO:S$VALUE ELSE
    ERRMSG = "Invalid Cylinder ID"
    GOSUB 91000
    GOTO 10250
  END
  RLDIE.CYLINDER = S$VALUE
  IF RLDIE.RF = "R" THEN
    RLDIE.TEETH=RLCYN.TEETH
    S$DATA(5)<S$SCR>=RLDIE.TEETH
    SCREEN DISPLAY;;5
* RLDIE.REPEAT=RLCYN.REPEAT
* S$DATA(6)<S$SCR>=RLDIE.REPEAT
* SCREEN DISPLAY;;6
  END
*
*---- TEETH
*
10300 *
  IF RLDIE.RF = "F" THEN
    SCREEN FIELD;;5
    SCREEN INPUT;;5;RETURN
    RLDIE.TEETH = S$VALUE
*END ELSE
*  RLDIE.TEETH=RLDIE.CYLINDER[3,9]
*  S$DATA(5)<S$SCR>=RLDIE.TEETH
*  SCREEN DISPLAY;;5
  END
  RETURN
*
*---- REPEAT
*
10400 *
* IF RLDIE.RF = "F" THEN
  SCREEN FIELD;;6
  SCREEN INPUT;;6;RETURN
  RLDIE.REPEAT = S$VALUE
* END ELSE
*   RLDIE.REPEAT=RLCYN.REPEAT
*   S$DATA(6)<S$SCR>=RLDIE.REPEAT
*   SCREEN DISPLAY;;6
* END
  RETURN
*
*---- NUMBER AROUND
*
10500 *
  SCREEN FIELD;;7
  SCREEN INPUT;;7;RETURN
  RLDIE.NO.AROUND = S$VALUE
  RETURN
*
*---- SIZE AROUND
*
10600 *
  SCREEN FIELD;;8
  SCREEN INPUT;;8;RETURN
  RLDIE.SZ.AROUND = S$VALUE
  RETURN
*
*---- SPACE AROUND
*
10700 *
  SCREEN FIELD;;9
  SCREEN INPUT;;9;RETURN
  RLDIE.SP.AROUND = S$VALUE
  RETURN
*
*---- NUMBER ACROSS
*
10800 *
  SCREEN FIELD;;10
  SCREEN INPUT;;10;RETURN
  RLDIE.NO.ACROSS = S$VALUE
  RETURN
*
*---- SIZE ACROSS
*
10900 *
  SCREEN FIELD;;23
  SCREEN INPUT;;23;RETURN
  RLDIE.SZ.ACROSS = S$VALUE
  RETURN
*
*---- STEP ACROSS
*
11000 * 
  SCREEN FIELD;;24
  SCREEN INPUT;;24;RETURN
  RLDIE.STEP.ACROSS = S$VALUE
  RETURN
*
*---- RADIAL CORNERS
*
11050 *
  SCREEN FIELD;;38
  SCREEN INPUT;;38
  RLDIE.CORNERS = S$VALUE
  RETURN
*
*---- RETOOLING
*
11100 *
  SCREEN FIELD;;27
  SCREEN INPUT;;27;RETURN
  RLDIE.RETOOL = S$VALUE
  RETURN
*
*---- ORDER DUE IN
*
11200 *
  SCREEN FIELD;;28
  SCREEN INPUT;;28;RETURN
  RLDIE.ORDER.DATE = S$VALUE
  RETURN
*
*---- JOB AVAILABLE
*
11300 *
  SCREEN FIELD;;29
  SCREEN INPUT;;29;RETURN
  RLDIE.JOB.DATE = S$VALUE
  RETURN
*
*---- DAMAGED DIE
*
11400 *
  SCREEN FIELD;;30
  SCREEN INPUT;;30;RETURN
  RLDIE.DAMAGED = S$VALUE
  RETURN
*
*--- SHAPE
*
11550 *
  SCREEN FIELD;;39
  SCREEN INPUT;;39;RETURN
  IF S$VALUE = "???" THEN
    XTYPE="ESTIMATE.RES.SHAPE";XFILE=ESTIMATE.RES.SHAPE;XFLD=1
*      CALL GEN.CODE.XREF (CONO,XTYPE,XFILE,XFLD,XCODE)
    GXR.ID = ""
    GXR.NAME = "GEN.CODE"
    GXR.FILE = XFILE
    GXR.SORT.FILE = XTYPE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    XCODE = GXR.ID
    SCREEN FORMAT
    S$VALUE=XCODE
    SCREEN FORMAT
    S$DATA(39)<S$SCR> = S$VALUE
    SCREEN DISPLAY;;ALL
    CURR.REF.NO=0; GOSUB 50000
    PRS.CURR.REF.NO=0; GOSUB 51000
    IF S$VALUE='' THEN GOTO 11550
  END
  READ DESC FROM ESTIMATE.RES.SHAPE, CONO:S$VALUE ELSE
    ERRMSG = "Invalid die shape"; GOSUB 91000
    GOTO 11550
  END
  RLDIE.SHAPE=S$VALUE
  RETURN
*
*--- DIE BLANK
*
11560 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  RLDIE.BLANK=S$VALUE
  RETURN
*
*--- LOCATION
*
11570 *
  SCREEN FIELD;;11
  SCREEN INPUT;;11;RETURN
  RLDIE.LOC=S$VALUE
  RETURN
*
*---- GET COMMENTS
*
11600 *
  S$VAL = REF.NO
  SCREEN DISPLAY;;32
  S$VAL = REF.NO
  SCREEN FIELD;;33
  SCREEN INPUT;;33
  BEGIN CASE
    CASE S$VALUE = "END"
      GOTO 11699
    CASE S$VALUE = ""
      GOTO 11600
    CASE S$VALUE # ""
      RLDIE.COMMENTS<1,REF.NO> = S$VALUE
  END CASE
11699 *
  RETURN
*
*---- GET LINE REFERENCE NUMBER
*
30000 *
  S$DATA(22)<S$SCR> = ""
  SCREEN FIELD;;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > CNT THEN S$MAXV = CNT
  SCREEN INPUT;;22
  RETURN
*
*---- ADD COMMENTS
*
40000 *
  DONE = 0
  FOR REF.NO = CNT + 1 TO 99 UNTIL DONE
    GOSUB 50000
    GOSUB 11600
    IF S$VALUE = "END" THEN
      DONE = 1
      S$DATA(33) = DELETE(S$DATA(33),S$SCR,REF.NO,0)
      RLDIE.COMMENTS = DELETE(RLDIE.COMMENTS,1,REF.NO,0)
    END ELSE
      CNT = CNT + 1
    END
  NEXT REF.NO
  REF.NO = CNT
  CURR.REF.NO = ""
  GOSUB 50000
  RETURN
*
*---- SCROLL DESCRIPTION
*
50000 *
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = CNT
  SCREEN MULTI;EST.RES.DIE.MAINT.SUB;C;32;33
  RETURN
*
*---- SCROLL DESCRIPTION FOR PRESSES
*
51000 *
  START.PRS.REF.NO = 1 + INT((PRS.REF.NO-1)/PRS.LINE.COUNT)*PRS.LINE.COUNT
  IF START.PRS.REF.NO = PRS.CURR.REF.NO THEN RETURN
  PRS.CURR.REF.NO = START.PRS.REF.NO
  S$VAL = START.PRS.REF.NO
  S$CNT = PRS.CNT
  SCREEN MULTI;EST.RL.DIE.MAINT;C;12;13;14
  RETURN
*
*---- GET COST.CNTRS
*
51100 *
  SELECTINDEX "GSROTARY",RLKEY[4,2] FROM EQUIPMENT
  DATA = 1
  LOOP
    READNEXT ID ELSE DATA = 0
  WHILE DATA DO
    IF ID[1,3] = CONO THEN
      ID = ID[4,99]
      LOCATE ID IN CCTR<1>,1 BY "AR" SETTING PTR ELSE
        CCTR = INSERT(CCTR,1,PTR,0,ID)
      END
    END
  REPEAT
  SELECTINDEX "GSFBED",RLKEY[4,2] FROM EQUIPMENT
  DATA = 1
  LOOP
    READNEXT ID ELSE DATA = 0
  WHILE DATA DO
    IF ID[1,3] = CONO THEN
      ID = ID[4,99]
      LOCATE ID IN CCTR<1>,1 BY "AR" SETTING PTR ELSE
        CCTR = INSERT(CCTR,1,PTR,0,ID)
      END
    END
  REPEAT
  PRS.CNT = DCOUNT(CCTR,VM)
  FOR C = 1 TO PRS.CNT
    MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR<1,C> ELSE
      CCTR.DESC = STR("?",25)
    END
    DESC<1,C> = CCTR.DESC "L#28"
  NEXT C
  S$DATA(13)<S$SCR> = CCTR
  S$DATA(14)<S$SCR> = DESC
  RETURN
*
*---- LOAD SCREEN
*
80000 *
  S$DATA(4)<S$SCR> = RLDIE.VEND
  S$DATA(5)<S$SCR> = RLDIE.TEETH
  S$DATA(6)<S$SCR> = RLDIE.REPEAT
  S$DATA(7)<S$SCR> = RLDIE.NO.AROUND
  S$DATA(8)<S$SCR> = RLDIE.SZ.AROUND
  S$DATA(9)<S$SCR> = RLDIE.SP.AROUND
  S$DATA(10)<S$SCR> = RLDIE.NO.ACROSS
  S$DATA(11)<S$SCR> = RLDIE.LOC
  S$DATA(23)<S$SCR> = RLDIE.SZ.ACROSS
  S$DATA(24)<S$SCR> = RLDIE.STEP.ACROSS
  S$DATA(27)<S$SCR> = RLDIE.RETOOL
  S$DATA(28)<S$SCR> = RLDIE.ORDER.DATE
  S$DATA(29)<S$SCR> = RLDIE.JOB.DATE
  S$DATA(30)<S$SCR> = RLDIE.DAMAGED
  S$DATA(31)<S$SCR> = RLDIE.CYLINDER
  S$DATA(33)<S$SCR> = RLDIE.COMMENTS
  S$DATA(39)<S$SCR> = RLDIE.SHAPE
  S$DATA(3)<S$SCR> = RLDIE.BLANK
  S$DATA(35)<S$SCR> = RLDIE.RF
  IF RLDIE.RF = 'F' THEN
    S$DATA(36)<S$SCR> = "Flatbed"
  END ELSE
    S$DATA(36)<S$SCR> = "Rotary"
  END
  IF RLDIE.COMMENTS # "" THEN
    REF.NO = 1
    GOSUB 50000
  END
  PRS.REF.NO = 1
  GOSUB 51000
  S$DATA(37)<S$SCR> = RLDIE.DESC
  S$DATA(38)<S$SCR> = RLDIE.CORNERS
  MATREAD VEND.REC FROM VEND,CONO:RLDIE.VEND ELSE
    MAT VEND.REC = ''
  END
  S$DATA(26)<S$SCR> = VEND.DESC
  RETURN
*
*---- SYSCOM MESSAGES
*
91000 *
  ERR.TYPE=1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 *
  ERR.TYPE=2
  CALL SI_SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE=3
  CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
*   PRINT @(-1)
  RETURN
END
