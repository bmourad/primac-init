   SUBROUTINE EST.RES.DETAIL.RECAP(CONO,CO.NAME,EST.KEY,JOB.DESC, PAGE.NO,PRT.QTY,HD1,HD2)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RES.DETAIL.RECAP
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 06/08/87
*
* DESCRIPTION
*
* This subroutine will summarize the detail estimate data by department,
* cost center and operation displaying up to three quantities accross the
* page.
*
*MODIFIED   - G JARVIS Pacrim Software Pty Ltd
*             Roll Label Estimating REV10
*T26138 cm 10/11/2001 * Expand qty fields from 7 to 9 digits.
*T26226 edwin 10/15/2001 * Unit of measure for Ink & Cartons is not
*                          printing on the Estimate Detail Recap Report.
*T26090 cmykleb 04/04/2002 * Change rpt to use rpt heading from call pgm.
*T27733 cmykleb 10/07/2003 * Add a "Sell" column to the report like the
*                            Commercial detail recap report has.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES
*COPY>JES.CPYLIB>ESTIMATE.QUOTES
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>EST.COST.TYPE.SUM
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
   OPEN '','ESTIMATE.QUOTES' TO ESTIMATE.QUOTES ELSE STOP
*
*
*---- DIMENSIONED VARIABLES
*
   DIM PRT.REC(15)
   EQU P.TYPE    TO PRT.REC(1)    ;* (MV1)
   EQU P.CCTR    TO PRT.REC(2)    ;* (MV1)
   EQU P.OPV     TO PRT.REC(3)    ;* (MV1)
   EQU P.DESC    TO PRT.REC(4)    ;* (MV1)
   EQU P.QTY     TO PRT.REC(5)    ;* (MV1,MSV)
   EQU P.HRS     TO PRT.REC(6)    ;* (MV1,MSV)
   EQU P.FCTR    TO PRT.REC(7)    ;* (MV1,MSV)
   EQU P.UM      TO PRT.REC(8)    ;* (MV1)
   EQU P.SELL    TO PRT.REC(9)    ;* (MV1,MSV)
   EQU P.THRS    TO PRT.REC(10)   ;* (MSV)
   EQU P.TCOST   TO PRT.REC(11)   ;* (MSV)
   EQU P.GHRS    TO PRT.REC(12)   ;* (MSV)
   EQU P.GSELL   TO PRT.REC(13)   ;* (MSV)
   EQU P.TSELL   TO PRT.REC(14)   ;* (MSV) ; * T27733
*
   TCOST.LAB=''
   TCOST.STK=''
   TCOST.MAT=''
   TCOST.SHP=''
   TCOST.OSP=''
   TCOST.MSC=''
*
   PBOLDON=''
   PBOLDOF=''
*
*---- INITIALIZATION
*
*T26090 v
*  N = ((50 - LEN(CO.NAME)) / 2)
*  COMPY.NAME = SPACE(N):CO.NAME:SPACE(N)
*  HD1 = OCONV(DATE(),"D2/"):SPACE(33):COMPY.NAME:SPACE(30):"PAGE: "
*  HD2 = SPACE(38):"E S T I M A T E   D E T A I L   R E C A P   R E P O R T"
   HD3 = SPACE(61):"ESTIMATE DETAIL RECAP REPORT"
*T26090 ^
   HD4 = "ESTIMATE : ":EST.KEY "L#12":"    ":EST.CUST.NAME "L#40":"    ":JOB.DESC "L#60"
   ECNT = DCOUNT(PRT.QTY,SVM)
   QPTR = ''
   FOR Q = 1 TO ECNT
      LOCATE PRT.QTY<1,1,Q> IN EST.QTY<1>,1 SETTING Q1 THEN
         QPTR<1,Q> = Q1
      END
   NEXT Q
   IF ECNT > 5 THEN ECNT = 5
   SH1 = SPACE(34)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
      QQ = OCONV(EST.QTY<1,QPTR<1,EPTR>>,"MD0,")
      QQ = QQ:SPACE((9-LEN(QQ))/2)
*T26138 v
*     SH1 = SH1:FILL1:"---":QQ "R#9":"--"
*T27733 v
*     SH1 = SH1:FILL1:"---":QQ "R#11":"--"
      SH1 = SH1:FILL1:"<------- ":QQ"R#11":" -------->"
*T27733 ^
*T26138 ^
      FILL1 = " : "
   NEXT EPTR 
   SHC = 'Cost Summary':SPACE(22)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
      QQ = OCONV(EST.QTY<1,QPTR<1,EPTR>>,"MD0,")
      QQ = QQ:SPACE((9-LEN(QQ))/2)
      SHC = SHC:FILL1:'-':QQ "R#12":'-'
      FILL1 = " : "
   NEXT EPTR 
   SH3 = "               Description        "
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     SH3 = SH3:FILL1:"   Units   U/M"
*T27733 v
*     SH3 = SH3:FILL1:"     Units   U/M"
      SH3 = SH3:FILL1:"    Units    U/M      Sell    "
*T27733 ^
      FILL1 = " : "
*T26138 ^
   NEXT EPTR 
   SH4 = "----------------------------------"
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     SH4 = SH4:FILL1:"---------- ---"
*T27733 v
*     SH4 = SH4:FILL1:"------------ ---"
      SH4 = SH4:FILL1:"------------ --- -------------"
*T27733 ^
*T26138 ^
      FILL1 = " : "
   NEXT EPTR 
   UL1 = SPACE(34)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     UL1 = UL1:FILL1:"--------------"
*T27733 v
*     UL1 = UL1:FILL1:"----------------"
      UL1 = UL1:FILL1:"------------     -------------"
*T27733 ^
*T26138 ^
      FILL1 = " : "
   NEXT EPTR 
   UL2 = SPACE(34)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     UL2 = UL2:FILL1:"=============="
*T27733 v
*     UL2 = UL2:FILL1:"================"
      UL2 = UL2:FILL1:"                 ============="
*T27733 ^
*T26138 ^
      FILL1 = " : "
   NEXT EPTR 
   VL1 = ""
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     VL1 = VL1:FILL1:SPACE(14)
*T27733 v
*     VL1 = VL1:FILL1:SPACE(16)
      VL1 = VL1:FILL1:SPACE(30)
*T27733 ^
*T26138 ^
      FILL1 = " : "
   NEXT EPTR 
   MAT PRT.REC = ""
   PRINTER ON
*
*---- MAIN PROCESSING
*
*
*--- Department Details
*
102 *
   CCNT = EST.COMPONENT.CNT
   DCNT = COUNT(EST.DEPT,VM) + (EST.DEPT # "")
   FOR CPTR = 1 TO CCNT
      LINE.CNT = 99
      FOR DPTR = 1 TO DCNT
         GOSUB 1000
      NEXT DPTR
   NEXT CPTR
*T27733 v
   PRINT UL2
   PLINE = SPACE(34)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
      PLINE = PLINE:FILL1:SPACE(17)
      PLINE = PLINE:OCONV(P.GSELL<1,1,EPTR>,"MD2,") "R#13"
      FILL1 = " : "
   NEXT EPTR
   PRINT PLINE
*T27733 ^
   GOTO 99999
*
*---- PRINT DEPARTMENT DETAIL FOR SPECIFIED COMPONENT
*
1000 *
   P.CCTR = ""
   P.OPV = ""
   P.DESC = ""
   P.QTY = ""
   P.HRS = ""
   P.THRS = ""
   P.GHRS = ""
   FOR EPTR = 1 TO ECNT
      EQTY = EST.QTY<1,QPTR<1,EPTR>>
      ESTD.ID = DPTR:"!":CPTR:"!":EQTY
      LOCATE ESTD.ID IN EST.DEPT.COMP<1>,1 SETTING DCP ELSE RETURN
      MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID ELSE RETURN
      LPTR = 0
      TC = COUNT(ESTD.TYPE,VM) + (ESTD.TYPE # "")
      FOR TP = 1 TO TC
         TYPE = ESTD.TYPE<1,TP>
         IF TYPE[1,1] = "G" THEN
            LPTR = LPTR + 1
            P.TYPE<1,LPTR> = "G"
            P.OPV<1,LPTR> = ESTD.OPV<1,TP>
            P.DESC<1,LPTR> = ESTD.DESC<1,TP>
            GOTO 1090
         END
         LPTR = LPTR + 1
         IF EPTR = 1 THEN
            P.TYPE<1,LPTR> = TYPE
            P.CCTR<1,LPTR> = ESTD.CCTR<1,TP>
            P.OPV<1,LPTR> = ESTD.OPV<1,TP>
            P.DESC<1,LPTR> = ESTD.DESC<1,TP>
            P.UM<1,LPTR> = ESTD.STD.TYPE<1,TP>
         END ELSE
            IF ESTD.CCTR<1,TP> # P.CCTR<1,LPTR> THEN
               ERRMSG = "Department detail mismatch"
            END
            IF ESTD.CCTR<1,TP> # P.CCTR<1,LPTR> THEN
               ERRMSG = "Department detail mismatch"
            END
         END
         BEGIN CASE
            CASE TYPE[1,1] = "L"
               P.HRS<1,LPTR,EPTR> = ESTD.HRS<1,TP>
               P.THRS<1,1,EPTR> = P.THRS<1,1,EPTR> + P.HRS<1,LPTR,EPTR>
               P.GHRS<1,1,EPTR> = P.GHRS<1,1,EPTR> + P.HRS<1,LPTR,EPTR>
            CASE 1
               P.QTY<1,LPTR,EPTR> = ESTD.QTY<1,TP>
         END CASE
         P.FCTR<1,LPTR,EPTR> = ESTD.FCTR<1,TP>
         P.TCOST<1,1,EPTR> = P.TCOST<1,1,EPTR> + ESTD.COST<1,TP>
         P.SELL<1,LPTR,EPTR> = ESTD.TSALE<1,TP> ; * T27733
         P.TSELL<1,1,EPTR> = P.TSELL<1,1,EPTR> + ESTD.TSALE<1,TP>; * T27733
         P.GSELL<1,1,EPTR> = P.GSELL<1,1,EPTR> + ESTD.TSALE<1,TP>
1090  NEXT TP
   NEXT EPTR
   IF LPTR = 0 THEN RETURN
*
*---- PRINT DEPARTMENT DETAIL
*
   LCNT = LPTR
   IF LINE.CNT + 4 > 55 THEN GOSUB 10000
   PLINE = EST.DEPT.DESC<1,DPTR> "L#34"
   PLINE = PLINE : VL1
   PRINT PLINE
   LINE.CNT = LINE.CNT + 1
   PREV.CCTR = ""
   FOR LPTR = 1 TO LCNT
      BEGIN CASE
         CASE P.TYPE<1,LPTR> = "G"
            IF LINE.CNT + 3 > 55 THEN GOSUB 10000
            PLINE = (SPACE(1):P.DESC<1,LPTR>) "L#34"
            PLINE = PLINE : VL1
            PRINT PLINE
            LINE.CNT = LINE.CNT + 1
            PREV.CCTR = ""
            GOTO 1590
         CASE P.CCTR<1,LPTR> # PREV.CCTR
            IF LINE.CNT + 2 > 55 THEN GOSUB 10000
            PREV.CCTR = P.CCTR<1,LPTR>
            PTR = DCOUNT(P.CCTR<1,LPTR>,SVM)
            MATREAD CCTR.REC FROM COST.CNTR, CONO:P.CCTR<1,LPTR,PTR> ELSE
               MAT CCTR.REC = ""
               CCTR.DESC = "???????????????"
            END
            PLINE = (SPACE(2):CCTR.DESC) "L#34"
            PLINE = PLINE : VL1
            PRINT PLINE
            LINE.CNT = LINE.CNT + 1
      END CASE
      IF LINE.CNT > 55 THEN GOSUB 10000
      PLINE = (SPACE(4):P.DESC<1,LPTR>) "L#34"
      FILL1 = "  "
      FOR EPTR = 1 TO ECNT
         IF P.HRS<1,LPTR,EPTR> # "" THEN
*T26138 v
*           PLINE = PLINE:FILL1:OCONV(P.HRS<1,LPTR,EPTR>,"MD2,") "R#10"
            PLINE = PLINE:FILL1:OCONV(P.HRS<1,LPTR,EPTR>,"MD2,") "R#12"
*T26138 ^
            UM = "Hrs"
         END ELSE
            QTY = P.QTY<1,LPTR,EPTR>
            IF REM(QTY,100) = 0 THEN
*T26138 v
*              PLINE = PLINE:FILL1:OCONV(INT(QTY/100),'MD0,') "R#10"
               PLINE = PLINE:FILL1:OCONV(INT(QTY/100),'MD0,') "R#12"
*T26138 ^
            END ELSE
*T26138 v
*              PLINE = PLINE:FILL1:OCONV(QTY,"MD2,") "R#10"
               PLINE = PLINE:FILL1:OCONV(QTY,"MD2,") "R#12"
*T26138 ^
            END
            TYPE = P.TYPE<1,LPTR>
            UM = P.UM<1,LPTR>[3,3]
            BEGIN CASE
               CASE TYPE = "MS"
                  UM = "Sht"
               CASE TYPE = "MR"
                  UM = "MSI"
               CASE UM = "KGS"
                  UM = "Kgs"
               CASE 1
                  UM = P.UM<1,LPTR>[3,1]:DOWNCASE(P.UM<1,LPTR>[4,2])
            END CASE
         END
         PLINE = PLINE:SPACE(1):UM"L#3"
*T27733 v
         PLINE = PLINE:SPACE(1):OCONV(P.SELL<1,LPTR,EPTR>,"MD2,") "R#13"
*T27733 ^
         FILL1 = " : "
      NEXT EPTR
      PRINT PLINE
      LINE.CNT = LINE.CNT + 1
1590 NEXT LPTR
   PRINT UL1
   LINE.CNT = LINE.CNT + 1
   PLINE = SPACE(34)
   FILL1 = "  "
   FOR EPTR = 1 TO ECNT
*T26138 v
*     PLINE = PLINE:FILL1:OCONV(P.THRS<1,1,EPTR>,"MD2,") "R#10"
      PLINE = PLINE:FILL1:OCONV(P.THRS<1,1,EPTR>,"MD2,") "R#12"
*T26138 ^
      PLINE = PLINE:SPACE(1):"Hrs"
*T27733 v
      PLINE = PLINE:SPACE(1):OCONV(P.TSELL<1,1,EPTR>,"MD2,") "R#13"
*T27733 ^
      FILL1 = " : "
   NEXT EPTR
   PRINT PLINE
   LINE.CNT = LINE.CNT + 1
   P.THRS = ""
   P.TSELL = "" ; * T27733
   RETURN
*
*---- PRINT HEADING
*
10000 *
   PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT
   PRINT HD4
   PRINT
   PRINT SH1
   PRINT SH3
   PRINT SH4
   LINE.CNT = 8
   RETURN
*
*---- END OF PROGRAM
*
99999*
   PRINTER OFF
   RETURN
END
