*********************************************************************
*
* REVISION - [08.1]
*
* PROGRAM  - EST.XREF
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 03/04/91
*
* DESCRIPTION
*
*T21913 diane 06/09/1997 * Select only desired estimates
*T27707 thompson 09/15/2003 * Fix problem with xref lookup on xx-xx
*                             divisions.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JES.CPYLIB>ESTIMATOR
*COPY>JCS.CPYLIB>JOB.CATEGORY
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATE" TO ESTIMATE ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","SALESMAN" TO SALESMAN ELSE
      ERRMSG = "CANNOT OPEN SALESMAN FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","ESTIMATOR" TO ESTIMATOR ELSE
      ERRMSG = "CANNOT OPEN ESTIMATOR FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE
      ERRMSG = "CANNOT OPEN JOB.CATEGORY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","JES.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;EST.XREF
   SCREEN FORMAT
*
   SEL.DIV  = ""
   SEL.DATE = ""
   SEL.CUST = ""
   SEL.SLSM = ""
   SEL.ESTM = ""
   SEL.CATG = ""
   SEL.STAT = ""
   SEL.TYPE = ""
   RL.EST = 0
   COM.EST = 0
   QP.EST = 0
   BOOK.EST = 0
*
*---- GET RUN-TIME PARAMETERS
*
*     PORTNO = SYSTEM(18)
   PORTNO = 'TTY'
   CALL SYSVARS.SUB(PORTNO)
   READ PARAM FROM CONTROL, "EST.XREF.":PORTNO ELSE PARAM = ""
   DELETE CONTROL, "EST.XREF.":PORTNO
   ACTION = PARAM<1>
*
   PCNT = DCOUNT(PARAM,AM)
   FOR PPTR = 2 TO PCNT
      PTYPE = TRIM(FIELD(PARAM<PPTR>,"=",1))
      BEGIN CASE
         CASE PTYPE = "ETYPE"
            SEL.ETYPE = TRIM(FIELD(PARAM<PPTR>,"=",2))
            BEGIN CASE
               CASE SEL.ETYPE = "RL"
                  RL.EST = 1
               CASE SEL.ETYPE = "1"
                  COM.EST = 1
               CASE SEL.ETYPE = "QP"
                  QP.EST = 1
               CASE SEL.ETYPE = "BOOK"
                  BOOK.EST = 1
            END CASE
         CASE PTYPE = "RL"
            RL.EST = 1
         CASE PTYPE = "DIV"
            SEL.DIV = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "DATE"
            SEL.DATE = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "CUST"
            SEL.CUST = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "SLSM"
            SEL.SLSM = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "ESTM"
            SEL.ESTM = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "CATG"
            SEL.CATG = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "STAT"
            SEL.STAT = TRIM(FIELD(PARAM<PPTR>,"=",2))
         CASE PTYPE  = "TYPE"
            SEL.TYPE = TRIM(FIELD(PARAM<PPTR>,"=",2))
      END CASE
   NEXT PPTR
   IF PCNT > 1 THEN GOSUB 80000
*
   SELDAT = ""
   SELEST = ""
   SELCNT = 0
*
*---- MAIN PROCESSING
*
100 *
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;;1
*     FOR REF = 1 TO 8
*        ON REF GOSUB 1010,1020,1030,1040,1050,1060,1070,1080
*        IF S$VALUE = "END" THEN GOTO 100
*     NEXT REF
*
*---- GET OPERATOR REPLY
*
500 *
   SCREEN FIELD;;21
   SCREEN INPUT;;21
   OPT = S$VALUE
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010,1020,1030,1040,1050,1060,1070,1080
      CASE OPT = "N"
         SELCNT = 0
         SCREEN CLEAR
         SEL.DIV  = ""
         SEL.DATE = ""
         SEL.CUST = ""
         SEL.SLSM = ""
         SEL.ESTM = ""
         SEL.CATG = ""
         SEL.STAT = ""
         SEL.TYPE = ""
         GOSUB 80000
      CASE OPT = "H"
         S$SCR = S$SCR + 1
         CALL SCREEN.HELP("EST.XREF", "ESTIMATE CROSS-REFERENCE")
         SCREEN CLOSE
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 80050
      CASE OPT = "P"
         GOSUB 85000
         IF SELCNT = 0 THEN
            ERRMSG = "No estimates found with specified criteria! "
            GOSUB 90000
            GOTO 500
         END
         S$SCR = S$SCR + 1
         CALL EST.XREF.SUB(CONO, ACTION, SELEST, SELECTION)
         S$SCR = S$SCR - 1
         IF ACTION # "" AND SELECTION # "" THEN
            WRITE SELECTION ON CONTROL, "EST.XREF.":PORTNO
            GOTO 99999
         END
         SCREEN FORMAT
         GOSUB 80050
   END CASE
   GOTO 500
*
*---- GET FIELD 1
*
1010 *
   S$DATA(2)<S$SCR> = SEL.DIV
   SCREEN FIELD;;2
   SCREEN INPUT;;2;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR OR XNAME # "" THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1010
   END
   IF SEL.DIV # "" AND SEL.DIV # S$VALUE THEN SELCNT = 0
   SEL.DIV = S$VALUE
   RETURN
*
*---- GET FIELD 2
*
1020 *
   S$DATA(3)<S$SCR> = SEL.DATE
   SCREEN FIELD;;3
   SCREEN INPUT;;3;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR OR XNAME # "" THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1020
   END
   IF SEL.DATE # "" AND SEL.DATE # S$VALUE THEN SELCNT = 0
   SEL.DATE = S$VALUE
   RETURN
*
*---- GET FIELD 3
*
1030 *
   S$DATA(4)<S$SCR> = SEL.CUST
   SCREEN FIELD;;4
   SCREEN INPUT;;4;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1030
   END
   IF SEL.CUST # "" AND SEL.CUST # S$VALUE THEN SELCNT = 0
   SEL.CUST = S$VALUE
   RETURN
*
*---- GET FIELD 4
*
1040 *
   S$DATA(5)<S$SCR> = SEL.SLSM
   SCREEN FIELD;;5
   SCREEN INPUT;;5;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1040
   END
   IF SEL.SLSM # "" AND SEL.SLSM # S$VALUE THEN SELCNT = 0
   SEL.SLSM = S$VALUE
   RETURN
*
*---- GET FIELD 5
*
1050 *
   S$DATA(6)<S$SCR> = SEL.ESTM
   SCREEN FIELD;;6
   SCREEN INPUT;;6;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1050
   END
   IF SEL.ESTM # "" AND SEL.ESTM # S$VALUE THEN SELCNT = 0
   SEL.ESTM = S$VALUE
   RETURN
*
*---- GET FIELD 6
*
1060 *
   S$DATA(7)<S$SCR> = SEL.CATG
   SCREEN FIELD;;7
   SCREEN INPUT;;7;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1060
   END
   IF SEL.CATG # "" AND SEL.CATG # S$VALUE THEN SELCNT = 0
   SEL.CATG = S$VALUE
   RETURN
*
*---- GET FIELD 7
*
1070 *
   S$DATA(8)<S$SCR> = SEL.STAT
   SCREEN FIELD;;8
   SCREEN INPUT;;8;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1070
   END
   IF SEL.STAT # "" AND SEL.STAT # S$VALUE THEN SELCNT = 0
   SEL.STAT = S$VALUE
   RETURN
*
*---- GET FIELD 8
*
1080 *
   S$DATA(9)<S$SCR> = SEL.STAT
   SCREEN FIELD;;9
   SCREEN INPUT;;9;RETURN
   XDATA = S$VALUE; GOSUB 88000
   IF EDIT.ERR THEN
      ERRMSG = "** INVALID INPUT **"
      GOSUB 90000
      GOTO 1080
   END
   IF SEL.TYPE # "" AND SEL.TYPE # S$VALUE THEN SELCNT = 0
   SEL.TYPE = S$VALUE
   RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
   S$DATA(2)<S$SCR> = SEL.DIV
   S$DATA(3)<S$SCR> = SEL.DATE
   S$DATA(4)<S$SCR> = SEL.CUST
   S$DATA(5)<S$SCR> = SEL.SLSM
   S$DATA(6)<S$SCR> = SEL.ESTM
   S$DATA(7)<S$SCR> = SEL.CATG
   S$DATA(8)<S$SCR> = SEL.STAT
   S$DATA(9)<S$SCR> = SEL.TYPE
80050 *
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- DERIVE ESTIMATE LIST
*
85000 *
   SEL.DIV.ID  = ""
   SEL.DATE.ID = ""
   SEL.CUST.ID = ""
   SEL.CUST.NM = ""
   SEL.SLSM.ID = ""
   SEL.SLSM.NM = ""
   SEL.ESTM.ID = ""
   SEL.ESTM.NM = ""
   SEL.CATG.ID = ""
   SEL.CATG.NM = ""
   SEL.STAT.ID = ""
   SEL.TYPE.ID = ""
*
   XDATA=SEL.DIV;  GOSUB 88000; SEL.DIV.ID=XID
   XDATA=SEL.DATE; GOSUB 88000; SEL.DATE.ID=XID
   XDATA=SEL.CUST; GOSUB 88000; SEL.CUST.ID=XID; SEL.CUST.NM=XNAME
   XDATA=SEL.SLSM; GOSUB 88000; SEL.SLSM.ID=XID; SEL.SLSM.NM=XNAME
   XDATA=SEL.ESTM; GOSUB 88000; SEL.ESTM.ID=XID; SEL.ESTM.NM=XNAME
   XDATA=SEL.CATG; GOSUB 88000; SEL.CATG.ID=XID; SEL.CATG.NM=XNAME
   XDATA=SEL.STAT; GOSUB 88000; SEL.STAT.ID=XID
*
   SEL.DIV.ID.CNT  = DCOUNT(SEL.DIV.ID,VM)
   SEL.DATE.ID.CNT = DCOUNT(SEL.DATE.ID,VM)
   SEL.CUST.ID.CNT = DCOUNT(SEL.CUST.ID,VM)
   SEL.CUST.NM.CNT = DCOUNT(SEL.CUST.NM,VM)
   SEL.SLSM.ID.CNT = DCOUNT(SEL.SLSM.ID,VM)
   SEL.SLSM.NM.CNT = DCOUNT(SEL.SLSM.NM,VM)
   SEL.ESTM.ID.CNT = DCOUNT(SEL.ESTM.ID,VM)
   SEL.ESTM.NM.CNT = DCOUNT(SEL.ESTM.NM,VM)
   SEL.CATG.ID.CNT = DCOUNT(SEL.CATG.ID,VM)
   SEL.CATG.NM.CNT = DCOUNT(SEL.CATG.NM,VM)
   SEL.STAT.ID.CNT = DCOUNT(SEL.STAT.ID,VM)
*
   IF SELCNT = 0 THEN
      SELDAT = ""
      SELEST = ""
      SELECT ESTIMATE
      EOF = 0
      LOOP
         READNEXT ID ELSE EOF = 1
      UNTIL EOF DO
         BEGIN CASE
            CASE ID[1,3] # CONO
            CASE SEL.TYPE = "R" AND INDEX(ID,"-",1) = 0
            CASE SEL.TYPE = "S" AND INDEX(ID,"-",1) > 0
            CASE 1
               EST.ID = ID[4,99]
               SEL.OK = 1
               MATREAD EST.REC FROM ESTIMATE, ID ELSE SEL.OK = 0
               IF RL.EST AND EST.PDEF.TYPE # "RL" THEN SEL.OK = 0
*T21913 v
               IF COM.EST AND EST.PDEF.TYPE # "1" THEN SEL.OK = 0
               IF QP.EST AND EST.PDEF.TYPE # "QP" THEN SEL.OK = 0
               IF BOOK.EST AND EST.PDEF.TYPE # "BOOK" THEN SEL.OK = 0
*T21913 ^
               IF SEL.OK THEN GOSUB 86000
               IF SEL.OK THEN
                  IF INDEX(EST.ID,"-",1) = 0 THEN
                     ESTID = CONO:EST.ID:"-00"
                  END ELSE
                     ESTID = CONO:EST.ID
                  END
                  SKEY = EST.DATE.ENTERED:"*":ESTID
                  LOCATE SKEY IN SELDAT,1 BY "AR" SETTING EPTR ELSE NULL
                  SELDAT = INSERT(SELDAT,EPTR,0,0,SKEY)
                  SELEST = INSERT(SELEST,EPTR,0,0,ESTID)
                  SELCNT = SELCNT + 1
               END
         END CASE
      REPEAT
   END ELSE
      ECNT = DCOUNT(SELEST,AM)
      FOR EPTR = ECNT TO 1 STEP -1
         EST.ID = SELEST<EPTR>[4,99]
         IF FIELD(EST.ID,"-",2) = "00" THEN
            EST.ID = FIELD(EST.ID,"-",1)
         END
         BEGIN CASE
            CASE SEL.TYPE = "R" AND INDEX(EST.ID,"-",1) = 0
               SEL.OK = 0
            CASE SEL.TYPE = "S" AND INDEX(EST.ID,"-",1) > 0
               SEL.OK = 0
            CASE 1
               ID = CONO:EST.ID
               SEL.OK = 1
               MATREAD EST.REC FROM ESTIMATE, ID ELSE SEL.OK = 0
               IF RL.EST AND EST.PDEF.TYPE # "RL" THEN SEL.OK = 0
*T21913 v
               IF COM.EST AND EST.PDEF.TYPE # "1" THEN SEL.OK = 0
               IF QP.EST AND EST.PDEF.TYPE # "QP" THEN SEL.OK = 0
               IF BOOK.EST AND EST.PDEF.TYPE # "BOOK" THEN SEL.OK = 0
*T21913 ^
               IF SEL.OK THEN GOSUB 86000
         END CASE
         IF NOT(SEL.OK) THEN
            SELDAT = DELETE(SELDAT,EPTR,0,0)
            SELEST = DELETE(SELEST,EPTR,0,0)
            SELCNT = SELCNT - 1
         END
      NEXT EPTR
   END
   RETURN
*
*---- CHECK ALL SELECTION CRITERIA
*
86000 *
   DIV.SEL.OK  = 1
   DATE.SEL.OK = 1
   CUST.SEL.OK = 1
   SLSM.SEL.OK = 1
   ESTM.SEL.OK = 1
   CATG.SEL.OK = 1
   STAT.SEL.OK = 1
*
*---- CHECK DIVISION ID
*
   IF SEL.DIV.ID.CNT > 0 THEN
      DIV.SEL.OK = 0
      FOR N = 1 TO SEL.DIV.ID.CNT UNTIL DIV.SEL.OK
         IDX = SEL.DIV.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF EST.DIV[1,2] >= ID1 AND EST.DIV[1,2] <= ID2 THEN DIV.SEL.OK = 1 ; *T27707
         END ELSE
            IF EST.DIV[1,2] >= ID2 AND EST.DIV[1,2] <= ID1 THEN DIV.SEL.OK = 1
         END
      NEXT N
      IF NOT(DIV.SEL.OK) THEN GOTO 86099
   END
*
*---- CHECK ESTIMATE DATE
*
   IF SEL.DATE.ID.CNT > 0 THEN
      DATE.SEL.OK = 0
      FOR N = 1 TO SEL.DATE.ID.CNT UNTIL DATE.SEL.OK
         IDX = SEL.DATE.ID<1,N>
         ID1 = ICONV(TRIM(FIELD(IDX,"-",1)),"D")
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1 ELSE ID2 = ICONV(ID2,"D")
         IF ID1 <= ID2 THEN
            IF EST.DATE.ENTERED >= ID1 AND EST.DATE.ENTERED <= ID2 THEN DATE.SEL.OK = 1
         END ELSE
            IF EST.DATE.ENTERED >= ID2 AND EST.DATE.ENTERED <= ID1 THEN DATE.SEL.OK = 1
         END
      NEXT N
      IF NOT(DATE.SEL.OK) THEN GOTO 86099
   END
*
*---- CHECK CUSTOMER ID
*
   IF SEL.CUST.ID.CNT > 0 THEN
      CUST.SEL.OK = 0
      FOR N = 1 TO SEL.CUST.ID.CNT UNTIL CUST.SEL.OK
         IDX = SEL.CUST.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF EST.CUST >= ID1 AND EST.CUST <= ID2 THEN CUST.SEL.OK = 1
         END ELSE
            IF EST.CUST >= ID2 AND EST.CUST <= ID1 THEN CUST.SEL.OK = 1
         END
      NEXT N
      IF NOT(CUST.SEL.OK) AND SEL.CUST.NM.CNT = 0 THEN GOTO 86099
   END
*
*---- CHECK SALESMAN ID
*
   IF SEL.SLSM.ID.CNT > 0 THEN
      SLSM.SEL.OK = 0
      FOR N = 1 TO SEL.SLSM.ID.CNT UNTIL SLSM.SEL.OK
         IDX = SEL.SLSM.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF EST.SALESMAN >= ID1 AND EST.SALESMAN <= ID2 THEN SLSM.SEL.OK = 1
         END ELSE
            IF EST.SALESMAN >= ID2 AND EST.SALESMAN <= ID1 THEN SLSM.SEL.OK = 1
         END
      NEXT N
      IF NOT(SLSM.SEL.OK) AND SEL.SLSM.NM.CNT = 0 THEN GOTO 86099
   END
*
*---- CHECK ESTIMATOR ID
*
   IF SEL.ESTM.ID.CNT > 0 THEN
      ESTM.SEL.OK = 0
      FOR N = 1 TO SEL.ESTM.ID.CNT UNTIL ESTM.SEL.OK
         IDX = SEL.ESTM.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF EST.ESTIMATOR >= ID1 AND EST.ESTIMATOR <= ID2 THEN ESTM.SEL.OK = 1
         END ELSE
            IF EST.ESTIMATOR >= ID2 AND EST.ESTIMATOR <= ID1 THEN ESTM.SEL.OK = 1
         END
      NEXT N
      IF NOT(ESTM.SEL.OK) AND SEL.ESTM.NM.CNT = 0 THEN GOTO 86099
   END
*
*---- CHECK CATEGORY ID
*
   IF SEL.CATG.ID.CNT > 0 THEN
      CATG.SEL.OK = 0
      FOR N = 1 TO SEL.CATG.ID.CNT UNTIL CATG.SEL.OK
         IDX = SEL.CATG.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))
         ID2 = TRIM(FIELD(IDX,"-",2))
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF EST.CATG >= ID1 AND EST.CATG <= ID2 THEN CATG.SEL.OK = 1
         END ELSE
            IF EST.CATG >= ID2 AND EST.CATG <= ID1 THEN CATG.SEL.OK = 1
         END
      NEXT N
      IF NOT(CATG.SEL.OK) AND SEL.CATG.NM.CNT = 0 THEN GOTO 86099
   END
*
*---- CHECK STATUS
*
   IF SEL.STAT.ID.CNT > 0 THEN
      ESTAT = EST.STATUS<1,1>[1,1]
      IF ESTAT = "" THEN ESTAT = "O"
      STAT.SEL.OK = 0
      FOR N = 1 TO SEL.STAT.ID.CNT UNTIL STAT.SEL.OK
         IDX = SEL.STAT.ID<1,N>
         ID1 = TRIM(FIELD(IDX,"-",1))[1,1]
         ID2 = TRIM(FIELD(IDX,"-",2))[1,1]
         IF ID2 = "" THEN ID2 = ID1
         IF ID1 <= ID2 THEN
            IF ESTAT >= ID1 AND ESTAT <= ID2 THEN STAT.SEL.OK = 1
         END ELSE
            IF ESTAT >= ID2 AND ESTAT <= ID1 THEN STAT.SEL.OK = 1
         END
      NEXT N
      IF NOT(STAT.SEL.OK) THEN GOTO 86099
   END
*
*---- CHECK CUSTOMER NAME
*
   IF SEL.CUST.ID.CNT > 0 AND CUST.SEL.OK THEN
      NULL
   END ELSE
      CUST.SEL.OK = 0
      IF SEL.CUST.NM.CNT > 0 THEN
         IF EST.CUST = "P" THEN
            CUST.NAME = EST.CUST.NAME
         END ELSE
            IF EST.CUST = "" THEN GOTO 86099
            MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE GOTO 86099
         END
         FOR N = 1 TO SEL.CUST.NM.CNT UNTIL CUST.SEL.OK
            NMX = SEL.CUST.NM<1,N>
            IF INDEX(CUST.NAME,NMX,1) > 0 THEN CUST.SEL.OK = 1
         NEXT N
         IF NOT(CUST.SEL.OK) THEN GOTO 86099
      END
   END
*
*---- CHECK SALESMAN NAME
*
   IF SEL.SLSM.ID.CNT > 0 AND SLSM.SEL.OK THEN
      NULL
   END ELSE
      SLSM.SEL.OK = 0
      IF SEL.SLSM.NM.CNT > 0 THEN
         IF EST.SALESMAN = "" THEN GOTO 86099
         MATREAD SALESMAN.REC FROM SALESMAN, CONO:EST.SALESMAN ELSE GOTO 86099
         FOR N = 1 TO SEL.SLSM.NM.CNT UNTIL SLSM.SEL.OK
            NMX = SEL.SLSM.NM<1,N>
            IF INDEX(SALS.NAME,NMX,1) > 0 THEN SLSM.SEL.OK = 1
         NEXT N
         IF NOT(SLSM.SEL.OK) THEN GOTO 86099
      END
   END
*
*---- CHECK ESTIMATOR NAME
*
   IF SEL.ESTM.ID.CNT > 0 AND ESTM.SEL.OK THEN
      NULL
   END ELSE
      ESTM.SEL.OK = 0
      IF SEL.ESTM.NM.CNT > 0 THEN
         IF EST.ESTIMATOR = "" THEN GOTO 86099
         MATREAD ESTIMATOR.REC FROM ESTIMATOR, CONO:EST.ESTIMATOR ELSE GOTO 86099
         FOR N = 1 TO SEL.ESTM.NM.CNT UNTIL ESTM.SEL.OK
            NMX = SEL.ESTM.NM<1,N>
            IF INDEX(ESTMTR.NAME,NMX,1) > 0 THEN ESTM.SEL.OK = 1
         NEXT N
         IF NOT(ESTM.SEL.OK) THEN GOTO 86099
      END
   END
*
*---- CHECK CATEGORY NAME
*
   IF SEL.CATG.ID.CNT > 0 AND CATG.SEL.OK THEN
      NULL
   END ELSE
      CATG.SEL.OK = 0
      IF SEL.CATG.NM.CNT > 0 THEN
         IF EST.CATG = "" THEN GOTO 86099
         MATREAD JCATG.REC FROM JOB.CATEGORY, CONO:EST.CATG ELSE GOTO 86099
         FOR N = 1 TO SEL.CATG.NM.CNT UNTIL CATG.SEL.OK
            NMX = SEL.CATG.NM<1,N>
            IF INDEX(JCATG.DESC,NMX,1) > 0 THEN CATG.SEL.OK = 1
         NEXT N
         IF NOT(CATG.SEL.OK) THEN GOTO 86099
      END
   END
*---- SELECT ESTIMATE
86090 *
   RETURN
*---- DO NOT SELECT ESTIMATE
86099 *
   SEL.OK = 0
   RETURN
*
*---- PARSE INPUT DATA
*
88000 *
   EDIT.ERR = 0
   XID = ""; XNAME = ""
   CNT = DCOUNT(XDATA,",")
   FOR N = 1 TO CNT UNTIL EDIT.ERR
      INPVAL = TRIM(FIELD(XDATA,",",N))
      BEGIN CASE
         CASE INPVAL[1,1] = '"' AND INPVAL[LEN(INPVAL),1] = '"'
            INPVAL = INPVAL[2,LEN(INPVAL)-2]
            IF INDEX(INPVAL,"-",1) > 0 THEN EDIT.ERR = 1
            XNAME<1,-1> = INPVAL
         CASE INPVAL[1,1] = "'" AND INPVAL[LEN(INPVAL),1] = "'"
            INPVAL = INPVAL[2,LEN(INPVAL)-2]
            IF INDEX(INPVAL,"-",1) > 0 THEN EDIT.ERR = 1
            XNAME<1,-1> = INPVAL
         CASE 1
            XID<1,-1> = INPVAL
      END CASE
   NEXT N
   IF INDEX(XID,'"',1) > 0 THEN EDIT.ERR = 1
   IF INDEX(XID,"'",1) > 0 THEN EDIT.ERR = 1
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*    PRINT @(0,23):@(-4):ERRMSG:
*    INPUT REPLY:
*    PRINT @(0,23):@(-4):
*    RETURN
*
*---- END OF PROGRAM
*
99999 *
*      SCREEN CLEAR;;D
   SCREEN CLOSE
*    PRINT @(-1)
END
