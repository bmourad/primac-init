  SUBROUTINE EST.DESC.MAINT (CONO, ACTION, EST.KEY, STATUS)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.DESC.MAINT
*
* AUTHOR   - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/12/85
*
* DESCRIPTION
*
* This subroutine updates and maintaines the ESTIMATE file (description
* information).
*
*T21998 gat 06/09/1997 * FIX XREF FOR JOB.DESC DATA
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EST.DESC.CODE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
  SCREEN DEFINE;EST.DESC.MAINT
  SCREEN FORMAT
  SCREEN COUNT;EST.DESC.MAINT;2
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  ERRMSG = ""
  OPT = ""
*
*---- MAIN PROCESSING
*
100*
  CURR.REF.NO = ""
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;EST.DESC.MAINT;1
  CNT = COUNT(EST.DESC.COMP,VM) + (EST.DESC.COMP # "")
  IF ACTION = "M" AND CNT = 0 THEN
    OPT = "A"
    GOTO 510
  END ELSE
    GOSUB 80000
    REF.NO = 1
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500*
  IF ACTION = "M" THEN
    SCREEN FIELD;EST.DESC.MAINT;5
    SCREEN INPUT;EST.DESC.MAINT;5
  END ELSE
    SCREEN FIELD;EST.DESC.MAINT;9
    SCREEN INPUT;EST.DESC.MAINT;9
  END
  OPT = S$VALUE
510*
  BEGIN CASE
    CASE OPT = "" OR OPT = "E" OR OPT = "END"
      GOTO 99999
    CASE OPT = "A" AND CNT < 99
      DONE = 0
      REF.NO = CNT
      LOOP
        REF.NO = REF.NO + 1
      UNTIL DONE OR REF.NO > 99 DO
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 600
        END ELSE
          CNT = REF.NO
        END
      REPEAT
      REF.NO = CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "C" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 10000
      END
    CASE OPT = "I" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
*              S$DATA(3) = INSERT(S$DATA(3),S$SCR,REF.NO,0,"")
        S$DATA(4) = INSERT(S$DATA(4),S$SCR,REF.NO,0,"")
        S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF.NO,0,"")
        S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF.NO,0,"")
        EST.DESC.COMP = INSERT(EST.DESC.COMP,1,REF.NO,0,"")
        EST.DESC = INSERT(EST.DESC,1,REF.NO,0,"")
        EST.DESC.CD = INSERT(EST.DESC.CD,1,REF.NO,0,"")
        EST.DESC.HEADING = INSERT(EST.DESC.HEADING,1,REF.NO,0,"")
        CURR.REF.NO = ""
        CNT = CNT + 1
        GOSUB 50000
        GOSUB 10000
        CNT = COUNT(EST.DESC.COMP,VM) + (EST.DESC.COMP # "")
        IF S$VALUE = "END" THEN
          GOSUB 600
          CNT = CNT - 1
        END
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "D" AND CNT > 0
      GOSUB 30000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 600
        CNT = CNT - 1
        IF REF.NO > CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "S"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > CNT THEN REF.NO = 1
      GOSUB 50000
    * T25978 v
    CASE OPT = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = 'ST'
      REF.NO = 1
      GOSUB 50000
    CASE OPT = 'SB'
      REF.NO = CNT
      GOSUB 50000
    * T25978 ^
  END CASE
  GOTO 500
*
*---- DELETE MULTI-LINE DATA
*
600*
*     S$DATA(3) = DELETE(S$DATA(3),S$SCR,REF.NO,0)
  S$DATA(4) = DELETE(S$DATA(4),S$SCR,REF.NO,0)
  S$DATA(7) = DELETE(S$DATA(7),S$SCR,REF.NO,0)
  S$DATA(8) = DELETE(S$DATA(8),S$SCR,REF.NO,0)
  EST.DESC.COMP = DELETE(EST.DESC.COMP,1,REF.NO,0)
  EST.DESC = DELETE(EST.DESC,1,REF.NO,0)
  EST.DESC.CD = DELETE(EST.DESC.CD,1,REF.NO,0)
  EST.DESC.HEADING = DELETE(EST.DESC.HEADING,1,REF.NO,0)
  RETURN
*
*---- GET DESCRIPTION COMPONENT NUMBER
*
10000*
  IF OPT = "C" THEN
    TEMP.COMP = EST.DESC.COMP<1,REF.NO>
    TEMP.CD = EST.DESC.CD<1,REF.NO>
    GOTO 10112
  END
  S$VAL = REF.NO
  SCREEN DISPLAY;EST.DESC.MAINT;2
10100*
*     S$VAL = REF.NO
*     SCREEN FIELD;EST.DESC.MAINT;3
*     SCREEN INPUT;EST.DESC.MAINT;3;GOTO 10199
  TEMP.COMP = "X"
*     S$DATA(3)<S$SCR,REF.NO> = TEMP.COMP
*---- GET DESCRIPTION CODE
10110*
  S$DATA(7)<S$SCR,REF.NO> = EST.DESC.CD<1,REF.NO>
  S$VAL = REF.NO
  SCREEN FIELD;EST.DESC.MAINT;7
  SCREEN INPUT;EST.DESC.MAINT;7;GOTO 10199
  IF S$VALUE = "???" THEN
    FLD=7;FREF=REF.NO;XTYPE="DESCRIPTION";XFILE=EST.DESC.CODE;XFLD=2
    XTYPE = "EST.DESC.CODE"
    MAT GEN.XREF.REC = ""
    GXR.CO = CONO
    GXR.ID = ""
    GXR.NAME = "GEN.CODE.2"
    GXR.FILE = XFILE
    GXR.SORT.FILE = XTYPE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    XCODE = GXR.ID
*         CALL GEN.CODE.XREF(CONO,XTYPE,XFILE,XFLD,XCODE)
    S$VALUE=XCODE
    S$DATA(FLD)<S$SCR,FREF>=XCODE
    SCREEN FORMAT
    CURR.REF.NO=""
    GOSUB 80000
    GOSUB 50000
    IF XCODE = "" THEN GOTO 10000
  END
  TEMP.CD = S$VALUE
  IF S$VALUE # "" THEN
    MATREAD EDC.REC FROM EST.DESC.CODE,CONO:S$VALUE ELSE
      ERRMSG = "Invalid description code.  Try again !"
      GOSUB 90000
      GOTO 10110
    END
    EST.DESC.COMP<1,REF.NO> = TEMP.COMP
    EST.DESC.CD<1,REF.NO> = TEMP.CD
    EST.DESC.HEADING<1,REF.NO> = EDC.HEADING
    EST.DESC<1,REF.NO> = EDC.DESC<1,1>
    DCNT = COUNT(EDC.DESC,VM) + (EDC.DESC # "")
    IF OPT = "I" AND DCNT > 1 THEN GOSUB 60000
    FOR DD = 2 TO DCNT
      REF.NO = REF.NO + 1
      EST.DESC.COMP<1,REF.NO> = TEMP.COMP
      EST.DESC.CD<1,REF.NO> = ""
      EST.DESC.HEADING<1,REF.NO> = ""
      EST.DESC<1,REF.NO> = EDC.DESC<1,DD>
    NEXT DD
    GOSUB 80000
    CURR.REF.NO = ""
    GOSUB 50000
    IF EDC.DESC = "" THEN
      TEMP.HEADING = EDC.HEADING
      GOTO 10120
    END
    RETURN
  END
*---- GET DESCRIPTION HEADING
10112*
  S$VAL = REF.NO
  SCREEN FIELD;EST.DESC.MAINT;8
  SCREEN INPUT;EST.DESC.MAINT;8;GOTO 10199
  TEMP.HEADING = S$VALUE
*---- GET DESCRIPTION
10120*
  S$VAL = REF.NO
  SCREEN FIELD;EST.DESC.MAINT;4
  SCREEN INPUT;EST.DESC.MAINT;4;GOTO 10199
  TEMP.DESC = S$VALUE
10190*
  EST.DESC.COMP<1,REF.NO> = TEMP.COMP
  EST.DESC.CD<1,REF.NO> = TEMP.CD
  EST.DESC.HEADING<1,REF.NO> = TEMP.HEADING
  EST.DESC<1,REF.NO> = TEMP.DESC
  RETURN
10199*
*     S$DATA(3)<S$SCR,REF.NO> = EST.DESC.COMP<1,REF.NO>
  S$DATA(7)<S$SCR,REF.NO> = EST.DESC.CD<1,REF.NO>
  S$DATA(8)<S$SCR,REF.NO> = EST.DESC.HEADING<1,REF.NO>
  S$DATA(4)<S$SCR,REF.NO> = EST.DESC<1,REF.NO>
  RETURN
*
*---- GET LINE REFERENCE NUMBER
*
30000*
  S$DATA(6)<S$SCR> = ""
  SCREEN FIELD;EST.DESC.MAINT;6
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > CNT THEN S$MAXV = CNT
  SCREEN INPUT;EST.DESC.MAINT;6
  RETURN
*
*---- SCROLL DESCRIPTION
*
50000*
  START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = COUNT(EST.DESC.COMP,VM) + (EST.DESC.COMP # "")
  SCREEN MULTI;EST.DESC.MAINT;C;2;7;8;4
  RETURN
*
*---- INSERT EXTRA LINES FOR MUTLI DESC LINES
*
60000*
  SAVE.REF.NO = REF.NO
  FOR DDD = 2 TO DCNT
    REF.NO = REF.NO + 1
*        S$DATA(3) = INSERT(S$DATA(3),S$SCR,REF.NO,0,"")
    S$DATA(4) = INSERT(S$DATA(4),S$SCR,REF.NO,0,"")
    S$DATA(7) = INSERT(S$DATA(7),S$SCR,REF.NO,0,"")
    S$DATA(8) = INSERT(S$DATA(8),S$SCR,REF.NO,0,"")
    EST.DESC.COMP = INSERT(EST.DESC.COMP,1,REF.NO,0,"")
    EST.DESC = INSERT(EST.DESC,1,REF.NO,0,"")
    EST.DESC.CD = INSERT(EST.DESC.CD,1,REF.NO,0,"")
    EST.DESC.HEADING = INSERT(EST.DESC.HEADING,1,REF.NO,0,"")
  NEXT DDD
  REF.NO = SAVE.REF.NO
  RETURN
*
*---- LOAD SCREEN DATA
*
80000*
*     S$DATA(3)<S$SCR> = EST.DESC.COMP
  S$DATA(7)<S$SCR> = EST.DESC.CD
  S$DATA(8)<S$SCR> = EST.DESC.HEADING
  S$DATA(4)<S$SCR> = EST.DESC
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;EST.DESC.MAINT;1
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999*
  SCREEN CLEAR;EST.DESC.MAINT;D
  RETURN
END
