***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.DESC.GROUP
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/14/86
*
* DESCRIPTION
*
* This program is used to maintain a group of questions to use for detailed
* description entry of job specifications.
*
* MOD TASK  - 13821
* MOD BY    - MT
* MOD DATE  - 3/13/89
* MOD DESC  - Secure the reference column from any changes.
*T25978 adelgado 03/07/2002 * Fix scrolling option.
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE.DESC.GRP
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.DESC.GRP" TO ESTIMATE.DESC.GRP ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.DESC.GRP FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JES.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.DESC.GROUP
  SCREEN FORMAT;EST.DESC.GROUP
  SCREEN COUNT;EST.DESC.GROUP;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  GOTO 110
*
*----- MAIN PROCESSING
*
100*
  RELEASE
  SCREEN CLEAR;EST.DESC.GROUP
110*
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;EST.DESC.GROUP;1
  GROUP = ""
120*
  GOSUB 1000
  IF S$VALUE = "END" THEN GOTO 99999
  NEW.REC = 0
  * T26126 v
  MATREADU ESTDG.REC FROM ESTIMATE.DESC.GRP, CONO:GROUP LOCKED
    ERRMSG = 'GROUP record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 110 
  END ELSE
  * T26126 ^
    NEW.REC = 1
    MAT ESTDG.REC = ""
  END
  IF NEW.REC THEN
    REFER.NO = 0
    FOR FLD = 1 TO 1
      ON FLD GOSUB 1100
      IF S$VALUE = "END" THEN GOTO 100
    NEXT FLD
    LINE.CNT = 0
    CURR.REF.NO = ""
    OPTION = "A"
    GOTO 510
  END ELSE
    LINE.CNT = COUNT(ESTDG.REQUEST,VM) + (ESTDG.REQUEST # "")
    REFER.NO = 0
    FOR RN = 1 TO LINE.CNT
      IF ESTDG.TYPE # 0 THEN
        IF ESTDG.DREF<1,RN> > REFER.NO THEN 
          REFER.NO = ESTDG.DREF<1,RN>
        END
      END
    NEXT RN
    GOSUB 80000
    SCREEN DISPLAY;EST.DESC.GROUP;ALL
    REF.NO = ""
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REQUEST
*
500*
  SCREEN FIELD;EST.DESC.GROUP;21
  SCREEN INPUT;EST.DESC.GROUP;21
  OPTION = S$VALUE
510*
  BEGIN CASE
    CASE NUM(OPTION) AND OPTION # ""
      ON OPTION GOSUB 1100
    CASE OPTION = "A" AND LINE.CNT < 99
      DONE = 0
      FOR REF.NO = LINE.CNT+1 TO 99 UNTIL DONE
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          LINE.CNT = LINE.CNT + 1
        END
      NEXT REF.NO
      REF.NO = LINE.CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPTION = "C" AND LINE.CNT > 0
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 10000
        IF S$VALUE = "END" THEN
          GOSUB 80000
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPTION = "D" AND LINE.CNT > 0
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        LINE.CNT = LINE.CNT - 1
        IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPTION = "I" AND LINE.CNT > 0
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 800
        LINE.CNT = LINE.CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          GOSUB 700
          LINE.CNT = LINE.CNT - 1
        END
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPTION = "P"
      SCREEN FIELD;EST.DESC.GROUP;23
      SCREEN INPUT;EST.DESC.GROUP;23
      IF S$VALUE = "Y" THEN
        DELETE ESTIMATE.DESC.GRP, CONO:GROUP
        GOTO 100
      END
    CASE OPTION = "S"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    CASE OPTION = "ST"
      REF.NO = 1
      GOSUB 50000
    CASE OPTION = "SB"
      * T25978 v
      * REF.NO = COUNT(DEPTS,VM) + 1
      REF.NO = LINE.CNT
      * T25978 ^
      GOSUB 50000
    CASE OPTION = "SR"
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "F"
      MATWRITE ESTDG.REC ON ESTIMATE.DESC.GRP, CONO:GROUP
      GOTO 100
    CASE 1
      ERRMSG = "Invalid Selection"
      GOSUB 90000
  END CASE
  GOTO 500
*
*---- GET LINE REFERENCE NUMBER
*
600*
  SCREEN FIELD;EST.DESC.GROUP;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;EST.DESC.GROUP;22
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
  ESTDG.REQUEST = DELETE(ESTDG.REQUEST,1,REF.NO,0)
  ESTDG.TYPE = DELETE(ESTDG.TYPE,1,REF.NO,0)
  ESTDG.MAXL = DELETE(ESTDG.MAXL,1,REF.NO,0)
  ESTDG.O.R = DELETE(ESTDG.O.R,1,REF.NO,0)
  ESTDG.JUSTIFY = DELETE(ESTDG.JUSTIFY,1,REF.NO,0)
  ESTDG.PATRN = DELETE(ESTDG.PATRN,1,REF.NO,0)
  ESTDG.DREF = DELETE(ESTDG.DREF,1,REF.NO,0)
  ESTDG.DROW = DELETE(ESTDG.DROW,1,REF.NO,0)
  ESTDG.DCOL = DELETE(ESTDG.DCOL,1,REF.NO,0)
  S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
  S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF.NO,0)
  S$DATA(14) = DELETE(S$DATA(14),S$SCR,REF.NO,0)
  S$DATA(15) = DELETE(S$DATA(15),S$SCR,REF.NO,0)
  S$DATA(16) = DELETE(S$DATA(16),S$SCR,REF.NO,0)
  S$DATA(17) = DELETE(S$DATA(17),S$SCR,REF.NO,0)
  S$DATA(18) = DELETE(S$DATA(18),S$SCR,REF.NO,0)
  S$DATA(19) = DELETE(S$DATA(19),S$SCR,REF.NO,0)
  S$DATA(20) = DELETE(S$DATA(20),S$SCR,REF.NO,0)
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800*
  ESTDG.REQUEST = INSERT(ESTDG.REQUEST,1,REF.NO,0,"")
  ESTDG.TYPE = INSERT(ESTDG.TYPE,1,REF.NO,0,"")
  ESTDG.MAXL = INSERT(ESTDG.MAXL,1,REF.NO,0,"")
  ESTDG.O.R = INSERT(ESTDG.O.R,1,REF.NO,0,"")
  ESTDG.JUSTIFY = INSERT(ESTDG.JUSTIFY,1,REF.NO,0,"")
  ESTDG.PATRN = INSERT(ESTDG.PATRN,1,REF.NO,0,"")
  ESTDG.DREF = INSERT(ESTDG.DREF,1,REF.NO,0,"")
  ESTDG.DROW = INSERT(ESTDG.DROW,1,REF.NO,0,"")
  ESTDG.DCOL = INSERT(ESTDG.DCOL,1,REF.NO,0,"")
  S$DATA(12) = INSERT(S$DATA(12),S$SCR,REF.NO,0,"")
  S$DATA(13) = INSERT(S$DATA(13),S$SCR,REF.NO,0,"")
  S$DATA(14) = INSERT(S$DATA(14),S$SCR,REF.NO,0,"")
  S$DATA(15) = INSERT(S$DATA(15),S$SCR,REF.NO,0,"")
  S$DATA(16) = INSERT(S$DATA(16),S$SCR,REF.NO,0,"")
  S$DATA(17) = INSERT(S$DATA(17),S$SCR,REF.NO,0,"")
  S$DATA(18) = INSERT(S$DATA(18),S$SCR,REF.NO,0,"")
  S$DATA(19) = INSERT(S$DATA(19),S$SCR,REF.NO,0,"")
  S$DATA(20) = INSERT(S$DATA(20),S$SCR,REF.NO,0,"")
  RETURN
*
*---- GET GROUP ID
*
1000*
  SCREEN FIELD;EST.DESC.GROUP;2
  SCREEN INPUT;EST.DESC.GROUP;2;RETURN
  GROUP = S$VALUE
  RETURN
*
*---- GET GROUP DESCRIPTION
*
1100*
  SCREEN FIELD;EST.DESC.GROUP;3
  SCREEN INPUT;EST.DESC.GROUP;3;RETURN
  ESTDG.DESC = S$VALUE
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
  S$VAL = REF.NO
  SCREEN DISPLAY;EST.DESC.GROUP;11
10100*
  S$VAL = REF.NO
  SCREEN FIELD;EST.DESC.GROUP;12
  SCREEN INPUT;EST.DESC.GROUP;12;RETURN
  REQUEST = S$VALUE
10200*
  S$VAL = REF.NO
  SCREEN FIELD;EST.DESC.GROUP;13
  SCREEN INPUT;EST.DESC.GROUP;13;RETURN
  TYPE = S$VALUE
10300*
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    MAXL = ""
    S$DATA(14)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;14
  END ELSE
    SCREEN FIELD;EST.DESC.GROUP;14
    SCREEN INPUT;EST.DESC.GROUP;14;RETURN
    MAXL = S$VALUE
  END
10400*
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    O.R = ""
    S$DATA(15)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;15
  END ELSE
    SCREEN FIELD;EST.DESC.GROUP;15
    SCREEN INPUT;EST.DESC.GROUP;15;RETURN
    O.R = S$VALUE
  END
10600*
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    JUSTIFY = ""
    S$DATA(16)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;16
  END ELSE
    SCREEN FIELD;EST.DESC.GROUP;16
    SCREEN INPUT;EST.DESC.GROUP;16;RETURN
    JUSTIFY = S$VALUE
  END
10700*
  IF TYPE = 7 OR O.R = "O" THEN
    S$VAL = REF.NO
    SCREEN FIELD;EST.DESC.GROUP;17
    IF TYPE # "7" THEN S$O.R = "O"
    SCREEN INPUT;EST.DESC.GROUP;17;RETURN
    PATRN = S$VALUE
  END ELSE
    PATRN = ""
    S$DATA(17)<S$SCR,REF.NO> = ""
    S$VAL = REF.NO
    SCREEN DISPLAY;EST.DESC.GROUP;17
  END
10750*
  IF OPTION = "C" THEN
    DREF = ESTDG.DREF<1,REF.NO>
    GOTO 10800
  END
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    DREF = ""
    S$DATA(18)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;18
  END ELSE
*        S$O.R = "O"
*        S$DEFAULT = REF.NO
*        SCREEN FIELD;EST.DESC.GROUP;18
*        SCREEN INPUT;EST.DESC.GROUP;18;RETURN
*        DREF = S$VALUE
    REFER.NO = REFER.NO + 1
    DREF = REFER.NO
    S$DATA(18)<S$SCR,REF.NO> = DREF
    SCREEN DISPLAY;EST.DESC.GROUP;18
  END
10800*
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    DROW = ""
    S$DATA(19)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;19
  END ELSE
    SCREEN FIELD;EST.DESC.GROUP;19
    SCREEN INPUT;EST.DESC.GROUP;19;RETURN
    DROW = S$VALUE
  END
10850*
  S$VAL = REF.NO
  IF TYPE = "0" THEN
    DCOL = ""
    S$DATA(20)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;EST.DESC.GROUP;20
  END ELSE
    SCREEN FIELD;EST.DESC.GROUP;20
    SCREEN INPUT;EST.DESC.GROUP;20;RETURN
    DCOL = S$VALUE
  END
*---- STORE INPUT DATA
10900*
  ESTDG.REQUEST<1,REF.NO> = REQUEST
  ESTDG.TYPE<1,REF.NO> = TYPE
  ESTDG.MAXL<1,REF.NO> = MAXL
  ESTDG.O.R<1,REF.NO> = O.R
  ESTDG.JUSTIFY<1,REF.NO> = JUSTIFY
  ESTDG.PATRN<1,REF.NO> = PATRN
  ESTDG.DREF<1,REF.NO> = DREF
  ESTDG.DROW<1,REF.NO> = DROW
  ESTDG.DCOL<1,REF.NO> = DCOL
  RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000*
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = LINE.CNT
  SCREEN MULTI;EST.DESC.GROUP;C;11;12;13;14;15;16;17;18;19;20
  RETURN
*
*---- LOAD MULTI-LINE DATA
*
80000*
  S$DATA(3)<S$SCR> = ESTDG.DESC
  S$DATA(12)<S$SCR> = ESTDG.REQUEST
  S$DATA(13)<S$SCR> = ESTDG.TYPE
  S$DATA(14)<S$SCR> = ESTDG.MAXL
  S$DATA(15)<S$SCR> = ESTDG.O.R
  S$DATA(16)<S$SCR> = ESTDG.JUSTIFY
  S$DATA(17)<S$SCR> = ESTDG.PATRN
  S$DATA(18)<S$SCR> = ESTDG.DREF
  S$DATA(19)<S$SCR> = ESTDG.DROW
  S$DATA(20)<S$SCR> = ESTDG.DCOL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
*       PRINT @(-1):
  STOP
END
