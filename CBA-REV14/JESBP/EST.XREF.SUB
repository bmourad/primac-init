   SUBROUTINE EST.XREF.SUB(CONO, ACTION, SELEST, SELECTION)
*********************************************************************
*
* REVISION - [08.1]
*
* PROGRAM  - EST.XREF.SUB
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 03/04/91
*
* DESCRIPTION
*
* This program is used to display estimates selected by EST.XREF.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T21913 diane 06/09/1997 * Close screens for gui
*C43065 cmykleb 02/28/2004 * The screen is not displaying the estimate
*                            type.
*C43268 cmykleb 04/01/2004 * Correct problem of process dropping out
*                            when the user keys in something wrong.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>TCC
*COPY>CPYLIB>KSEL
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*C43268 v
*  MAT SYSCOM.REC =  ""; SYS.TYPE = 2  ;* T21913 MOVED UP
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*C43268 ^
   DIM KSL.DATA(25)
   SELECTION = ""
   IF SELEST = "" THEN
      GOTO 99999
   END
   OPEN "","TCC" TO TCC THEN
      PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
      CRTMODE = ""
      CALL GET.CRTMODE(CRTMODE)
      BEGIN CASE
         CASE CRTMODE = "termulator"
            CALL EST_XRFSUB_TU(CONO, ACTION, SELEST, SELECTION)
            GOTO 99999
      END CASE
   END
*
*---- INITIALIZATION
*
   LINE.CNT = COUNT(SELEST,AM) + 1
   PORT.NO = "TTY"; CALL SYSVARS.SUB(PORT.NO)
   CALL TCC.SUB1(PORT.NO,MAT TCC.PORT.REC,MAT TCC.REC,MAT GRAPH.REC,MAT VIDEO.REC,MAT KSEL.REC,MAT HBOX.REC)
   MAT KSL.REC = ""
   KSL.ESC = KSEL.ESC
   KSL.SCROLL = 1
   KSL.ETX.SEL = ETX.DSL
   KSL.ETX.OFF = ETX.OFF
   KSL.HROW = "B"
   KSL.VALDAT = "R"
   BOX.ROWS = 19
   IF LINE.CNT + 3 < BOX.ROWS THEN
      BOX.ROWS = LINE.CNT + 3
   END
   BOX.COLS = 74
   PAGE.SIZE = BOX.ROWS - 3
   KSL.COL = 1
   KSL.COLS = 1
   KSL.PGNO = 1
   KSL.PAGES = INT(LINE.CNT / PAGE.SIZE + .99)
   MAT KSL.YX = ""
   HD1 = "E S T I M A T E   C R O S S - R E F E R E N C E"
   SP = BOX.COLS - 22 - LEN(HD1)
   SP1 = INT(SP/2); SP2 = INT(SP/2+.99)
   GOSUB 1100
   KSL.ROW = BEGIN.PAGE
   MORE = 1
   LOOP
      CALL @KSEL.SUB(MAT TCC.REC, MAT GRAPH.REC, MAT VIDEO.REC, MAT KSEL.REC, MAT KSL.REC, MAT KSL.YX)
      BEGIN CASE
         CASE KSL.SEL = KSL.ESC
            SELECTION = ""
            MORE = 0
         CASE KSL.SEL = KSEL.SEL
            EST.ID = KSL.DATA(KSL.ROW)<KSL.COL>
            IF EST.ID[LEN(EST.ID)-2,3] = "-00" THEN
               EST.ID = EST.ID[1,LEN(EST.ID)-3]
            END
            SELECTION = EST.ID
            MORE = 0
         CASE KSL.SEL = "R"
            BOX.CLEAR = 9
            CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
            EST.ID = KSL.DATA(KSL.ROW)<KSL.COL>
            IF EST.ID[LEN(EST.ID)-2,3] = "-00" THEN
               EST.ID = EST.ID[1,LEN(EST.ID)-3]
            END
            S$SCR = S$SCR + 1
            CALL EST.XREF.DET(CONO, EST.ID)
            S$SCR = S$SCR - 1
            GOSUB 1100
         CASE KSL.SEL = "SF"
            GOSUB 1900
         CASE KSL.SEL = "SR"
            GOSUB 1900
         CASE KSL.SEL = "ST"
            GOSUB 1900
         CASE KSL.SEL = "SB"
            GOSUB 1900
         CASE NUM(KSL.SEL)
            IF KSL.SEL >= 1 AND KSL.SEL <= LINE.CNT THEN
               EST.ID = SELEST<KSL.SEL>[4,99]
               IF EST.ID[LEN(EST.ID)-2,3] = "-00" THEN
                  EST.ID = EST.ID[1,LEN(EST.ID)-3]
               END
               SELECTION = EST.ID
               MORE = 0
            END ELSE
               ERRMSG = '* * INVALID SELECTION * *'
               GOSUB 91000
            END
         CASE 1
            ERRMSG = '* * INVALID SELECTION * *'
            GOSUB 91000
      END CASE
   WHILE MORE DO REPEAT
   BOX.CLEAR = 9
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   GOTO 99999
1100*
   IF KSL.PAGES > 1 THEN
      BOX.HROW = 1
   END ELSE
      BOX.HROW = 0
   END
   BOX.X = "C"; BOX.Y = "C"; BOX.CLEAR = 1
   CALL @GRAPH.SUB(MAT GRAPH.REC,MAT VIDEO.REC)
   IF BOX.HROW < BOX.Y + BOX.ROWS + 1 THEN
      PX.ADD = 1
   END ELSE
      PX.ADD = 0
   END
   BEGIN.PAGE = BOX.Y + 3
   END.PAGE = BOX.Y + BOX.ROWS - 1
   DX = BOX.X + 1; DY = BOX.Y; MAX.COLS = BOX.COLS - 2
   P_X  = DX-1 ; P_Y = DY ; P_VALUE = ETX.TOP.OFF:"PRIMAC[08.1]":SPACE(SP1):HD1 ; P_OPT = ""
   P_X  := AM:0 ; P_Y := AM:23 ; P_VALUE := AM:SPACE(SP2):OCONV(DATE(),"D2/"):ETX.TOP.OFF
   P_X  := AM:DX-1 ; P_Y := AM:DY ; P_VALUE := AM:ETX.TOP
   P_X  := AM:DX ; P_Y := AM:DY+1 ; P_VALUE := AM:"Ln#":ETX.OFF
   P_X  := AM:DX-1 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+4 ; P_Y := AM:DY+1 ; P_VALUE := AM:" Date ":ETX.OFF
   P_X  := AM:DX+3 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+13 ; P_Y := AM:DY+1 ; P_VALUE := AM:" Estimate ":ETX.OFF
   P_X  := AM:DX+12 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+25 ; P_Y := AM:DY+1 ; P_VALUE := AM:"Typ":ETX.OFF
   P_X  := AM:DX+24 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = DX+29 ; P_Y = DY+1 ; P_VALUE = " Customer/Prospect/Desc ":ETX.OFF ; P_OPT = ""
   P_X  := AM:DX+28 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+60 ; P_Y := AM:DY+1 ; P_VALUE := AM:" Cat ":ETX.OFF
   P_X  := AM:DX+59 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   P_X  := AM:DX+66 ; P_Y := AM:DY+1 ; P_VALUE := AM:"Status":ETX.OFF
   P_X  := AM:DX+65 ; P_Y := AM:DY+1 ; P_VALUE := AM:ETX.HSL
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1900*
   START.LINE = ((KSL.PGNO - 1) * PAGE.SIZE) + 1
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINE.CNT THEN LAST.LINE = LINE.CNT
   SLN = BEGIN.PAGE - 1
   FOR V = START.LINE TO LAST.LINE
      SLN = SLN + 1
      EST.ID = SELEST<V>[4,99]
      IF EST.ID[LEN(EST.ID)-2,3] = "-00" THEN
         EST.ID = EST.ID[1,LEN(EST.ID)-3]
         STD.FLG = 1
      END ELSE STD.FLG = 0
      MATREAD EST.REC FROM ESTIMATE, CONO:EST.ID THEN
         KSL.YX(SLN) = DX + 3
         KSL.DATA(SLN) = EST.ID
      END ELSE
         MAT EST.REC = ""
         EST.STATUS = STR("?",6)
      END
      P_X  = DX ; P_Y = SLN ; P_VALUE = V "R#3":ETX.OFF ; P_OPT = ""
      P_X  := AM:DX-1 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.NUM
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      PLINE = OCONV(EST.DATE.ENTERED,"D2/") "L#8":" "
      PLINE = PLINE : EST.ID "L#11":" "
      BEGIN CASE
         CASE EST.SUBS # ""
            PLINE = PLINE : "MST "
         CASE EST.MASTER # "" AND EST.MASTER # EST.ID
            PLINE = PLINE : "SUB "
         CASE 1
            PLINE = PLINE : "    "
      END CASE
      IF STD.FLG THEN
         PLINE = PLINE : EST.COMMENTS<1,1>[1,30] "L#31"
      END ELSE
         IF EST.CUST = "P" THEN
            PLINE = PLINE : EST.CUST.NAME "L#30":" "
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
               MAT CUST.REC = ""
            END
            PLINE = PLINE : CUST.NAME "L#30":" "
         END
      END
      PLINE = PLINE : EST.CATG "L#5":" ":EST.STATUS<1,1> "L#6"
      P_X  = DX+4 ; P_Y = SLN ; P_VALUE = PLINE:ETX.OFF ; P_OPT = ""
      P_X  := AM:DX+3 ; P_Y := AM:SLN ; P_VALUE := AM:ETX.DHD
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT V
   LST.V = LAST.LINE - START.LINE + 2
   FOR V = LST.V TO PAGE.SIZE
      SLN = SLN + 1
      KSL.YX(SLN) = ""
      P_X  = DX-1 ; P_Y = SLN ; P_VALUE = ETX.OFF:SPACE(MAX.COLS) ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT V
*
*---- Display lines & pages
*
   BEGIN CASE
      CASE BOX.HROW < 1
      CASE BOX.COLS < 10
      CASE BOX.COLS < 15
         PX = BOX.X + BOX.COLS - 9 - PX.ADD
         P_X  = PX ; P_Y = BOX.HROW ; P_VALUE = ETX.HHD.OFF:KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF ; P_OPT = ""
         P_X  := AM:PX ; P_Y := AM:BOX.HROW ; P_VALUE := AM:ETX.HHD
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CASE 1
         PX = BOX.X + BOX.COLS - 14 - PX.ADD
         P_X  = PX ; P_Y = BOX.HROW ; P_VALUE = ETX.HHD.OFF:"Page ":KSL.PGNO "R%2":" of ":KSL.PAGES "R%2":ETX.HHD.OFF ; P_OPT = ""
         P_X  := AM:PX ; P_Y := AM:BOX.HROW ; P_VALUE := AM:ETX.HHD
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END CASE
   RETURN
*
*---- GET LINE NUMBER
*
*C43268 v
91000 *
*  ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
*C43268 ^
99999 *
   RETURN
END
