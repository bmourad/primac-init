*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.RL.REPORT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/18/86
*
* DESCRIPTION
*
* This program will print the estimate report.
*
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RL
*COPY>JES.CPYLIB>ESTIMATOR
*COPY>JES.CPYLIB>ESTIMATE.RPT
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JCS.CPYLIB>JOB.CATEGORY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE" TO ESTIMATE ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.RL" TO ESTIMATE.RL ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.RL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATOR" TO ESTIMATOR ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATOR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.DEPT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.MATL FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.RL.CYLINDER" TO ESTIMATE.RL.CYLINDER ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.RL.CYLINDER FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DIVISION FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CUSTOMER FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","SALESMAN" TO SALESMAN ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN SALESMAN FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.CATEGORY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","COLOR" TO COLOR ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COLOR FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","FINISH" TO FINISH ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN FINISH FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JES.SCREENS FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","ESTIMATE.RPT" TO ESTIMATE.RPT ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.RPT FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    P_X  = 3 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN INVENTORY FILE" ; P_OPT = ""
    CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
  PROMPT ""
  PAGE.NO = 0
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.REPORT
  SCREEN FORMAT
  SCREEN COUNT;EST.REPORT;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  CURR.REF.NO = ""
  REF.NO = 1
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  SCREEN CLEAR
110 *
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;EST.REPORT;1
120 *
  SCREEN FIELD;EST.REPORT;2
  SCREEN INPUT;EST.REPORT;2
  IF S$VALUE = "END" THEN GOTO 99999
  MATREAD DIV.REC FROM DIVISION, CONO:S$VALUE ELSE
    ERRMSG = "Invalid division. Try again! "
    GOSUB 90000
    GOTO 120
  END
  DIV.ID = S$VALUE
  S$DATA(3)<S$SCR> = DIV.DESC
  SCREEN DISPLAY;EST.REPORT;3
  NEW.REC = 0
  MATREADU ESTR.REC FROM ESTIMATE.RPT, CONO:DIV.ID ELSE
    MAT ESTR.REC = ""
    NEW.REC = 1
  END
  IF NEW.REC THEN
    LINE.CNT = 0
    OPTION = "A"
    GOTO 510
  END ELSE
    LINE.CNT = COUNT(ESTR.EST.ID,VM) + (ESTR.EST.ID # "")
    GOSUB 80000
    REF.NO = 1
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  SCREEN FIELD;EST.REPORT;21
  SCREEN INPUT;EST.REPORT;21
  OPTION = S$VALUE
510 *
  BEGIN CASE
    CASE OPTION = "A"
      MODE = "A"
      DONE = 0
      FOR REF.NO = LINE.CNT+1 TO 99 UNTIL DONE
        GOSUB 50000
        GOSUB 1000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          LINE.CNT = REF.NO
        END
      NEXT REF.NO
      REF.NO = LINE.CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPTION = "C" AND LINE.CNT > 0
      MODE = "C"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 1000
      END
    CASE OPTION = "D" AND LINE.CNT > 0
      MODE = "D"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        LINE.CNT = LINE.CNT - 1
        IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPTION = "I" AND LINE.CNT > 0
      MODE = "I"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 800
        LINE.CNT = LINE.CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 1000
        IF S$VALUE = "END" THEN
          GOSUB 700
          LINE.CNT = LINE.CNT - 1
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPTION = "S" AND LINE.CNT > 0
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    * T25978 v
    CASE OPTION = 'SR' AND LINE.CNT > 0
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPTION = 'ST'
      REF.NO = 1
      GOSUB 50000
    CASE OPTION = 'SB'
      REF.NO = LINE.CNT
      GOSUB 50000
    * T25978 ^
    CASE OPTION = "E" OR OPTION = "END"
      GOTO 100
    CASE OPTION = "F"
      MATWRITE ESTR.REC ON ESTIMATE.RPT, CONO:DIV.ID
      GOTO 100
    CASE OPTION = "P"
      FOR REF = 1 TO LINE.CNT
        EST.KEY = ESTR.EST.ID<1,REF>
        FND = 1
        MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE FND = 0
        MATREAD EST.RL.REC FROM ESTIMATE.RL, CONO:EST.KEY ELSE MAT EST.RL.REC=""
        IF FND THEN
          RPT.TYPE = ESTR.RPT.TYPE<1,REF>
          GOSUB 5000
        END
      NEXT REF
      DELETE ESTIMATE.RPT, CONO:DIV.ID
      PRINTER CLOSE
      GOTO 100
  END CASE
  GOTO 500
*
*---- GET LINE REFERENCE NUMBER
*
600 *
  SCREEN FIELD;EST.REPORT;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;EST.REPORT;22
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  ESTR.EST.ID = DELETE(ESTR.EST.ID,1,REF.NO,0)
  ESTR.CUST.NAME = DELETE(ESTR.CUST.NAME,1,REF.NO,0)
  ESTR.SUB.FLAG = DELETE(ESTR.SUB.FLAG,1,REF.NO,0)
  ESTR.RPT.TYPE = DELETE(ESTR.RPT.TYPE,1,REF.NO,0)
  GOSUB 80000
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  ESTR.EST.ID = INSERT(ESTR.EST.ID,1,REF.NO,0,"")
  ESTR.CUST.NAME = INSERT(ESTR.CUST.NAME,1,REF.NO,0,"")
  ESTR.SUB.FLAG = INSERT(ESTR.SUB.FLAG,1,REF.NO,0,"")
  ESTR.RPT.TYPE = INSERT(ESTR.RPT.TYPE,1,REF.NO,0,"")
  GOSUB 80000
  RETURN
*
*---- GET MULTI-LINE DATA
*
1000 *
  S$VAL = REF.NO
  SCREEN DISPLAY;EST.REPORT;11
1010 *
  S$VAL = REF.NO
  SCREEN FIELD;EST.REPORT;12
  SCREEN INPUT;EST.REPORT;12;RETURN
  MATREAD EST.REC FROM ESTIMATE, CONO:S$VALUE ELSE
    ERRMSG = "Estimate not on file. Try again! "
    GOSUB 90000
    GOTO 1010
  END
  EST.ID = S$VALUE
1020 *
  S$VAL = REF.NO
  S$DATA(13)<S$SCR,REF.NO> = EST.CUST.NAME
  SCREEN DISPLAY;EST.REPORT;13
*
  S$DATA(20)<S$SCR> = EST.COMMENTS<1,1>
  SCREEN DISPLAY;EST.REPORT;20
1030 *
  S$VAL = REF.NO
  IF EST.SUBS = "" THEN
    SUB.FLAG = "Y"
    S$DATA(14)<S$SCR,REF.NO> = "Y"
    SCREEN DISPLAY;EST.REPORT;14
  END ELSE
    SCREEN FIELD;EST.REPORT;14
    SCREEN INPUT;EST.REPORT;14;RETURN
    SUB.FLAG = S$VALUE
  END
1040 *
  S$VAL = REF.NO
  SCREEN FIELD;EST.REPORT;15
  IF CO.JES.PARAM<1,7> # "" THEN
    S$O.R = "O"
    S$DEFAULT = CO.JES.PARAM<1,7>
  END
  SCREEN INPUT;EST.REPORT;15;RETURN
  RPT.TYPE = S$VALUE
1090 *
  ESTR.EST.ID<1,REF.NO> = EST.ID
  ESTR.CUST.NAME<1,REF.NO> = EST.CUST.NAME
  ESTR.SUB.FLAG<1,REF.NO> = SUB.FLAG
  ESTR.RPT.TYPE<1,REF.NO> = RPT.TYPE
  S$DATA(20)<S$SCR> = ""
  SCREEN DISPLAY;EST.REPORT;20
  RETURN
*
*---- PRINT ESTIMATE REPORT
*
5000 *
  DESC = EST.COMMENTS<1,1>
  FOR TP = 1 TO LEN(RPT.TYPE)
    TYPE = RPT.TYPE[TP,1]
    BEGIN CASE
      CASE TYPE = "1"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Demographics" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF EST.RL.JOB.TYPE = "" THEN
          CALL EST.REPORT.1 (CONO, CO.NAME, EST.KEY, PAGE.NO)
        END ELSE
          CALL EST.RL.REPORT.1 (CONO,CO.NAME,EST.KEY,PAGE.NO,ESTIMATE.RL.CYLINDER)
        END
      CASE TYPE = "2"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Recap Report" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF EST.RL.JOB.TYPE = "" THEN
          CALL EST.RECAP.RPT (CONO, CO.NAME, EST.KEY, PAGE.NO)
        END ELSE
          CALL EST.RL.RECAP.RPT (CONO, CO.NAME, EST.KEY, PAGE.NO)
        END
      CASE TYPE = "3"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Component/Department Summary Report" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CALL EST.COMP.DEPT.SUM.RPT (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
      CASE TYPE = "4"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Department/Component Summary Report" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF EST.RL.JOB.TYPE = "" THEN
          CALL EST.DEPT.COMP.SUM.RPT (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
        END ELSE
          CALL EST.RL.DEPT.COMP.SUM.RPT (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
        END
      CASE TYPE = "5"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Detail Recap Report" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CALL EST.RL.DETAIL.RECAP (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
      CASE TYPE = "6"
        P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Detail Report" ; P_OPT = "CL"
        CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CALL EST.DETAIL.RPT.1 (CONO, CO.NAME, EST.KEY, PAGE.NO)
*           CALL EST.DETAIL.RPT.2 (CONO, CO.NAME, EST.KEY, PAGE.NO)
    END CASE
  NEXT TP
  P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- PRINT DEMOGRAPHICS
*
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Demographics" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CALL EST.REPORT.1 (CONO, CO.NAME, EST.KEY, PAGE.NO)
*
*---- PRINT RECAP REPORT
*
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Recap Report" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CALL EST.RECAP.RPT (CONO, CO.NAME, EST.KEY, PAGE.NO)
*
*---- PRINT OTHER REPORTS
*
  DESC = EST.COMMENTS<1,1>
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Component/Department Summary Report" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CALL EST.COMP.DEPT.SUM.RPT (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
*     PRINT @(0,21):CL:"(":EST.KEY:") Processing Department/Component Summary Report":
*     CALL EST.DEPT.COMP.SUM.RPT (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Detail Recap Report" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CALL EST.RL.DETAIL.RECAP (CONO, CO.NAME, EST.KEY, DESC, PAGE.NO)
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "(":EST.KEY:") Processing Detail Report" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF RPT.TYPE = "2" THEN
    CALL EST.DETAIL.RPT.1 (CONO, CO.NAME, EST.KEY, PAGE.NO)
*        CALL EST.DETAIL.RPT.2 (CONO, CO.NAME, EST.KEY, PAGE.NO)
  END
  P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
50000 *
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = COUNT(S$DATA(12)<S$SCR>,VM) + (S$DATA(12)<S$SCR> # "")
  SCREEN MULTI;EST.REPORT;C;11;12;13;14;15
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(1)<S$SCR> = DATE()
  S$DATA(2)<S$SCR> = DIV.ID
  S$DATA(3)<S$SCR> = DIV.DESC
  S$DATA(12)<S$SCR> = ESTR.EST.ID
  S$DATA(13)<S$SCR> = ESTR.CUST.NAME
  S$DATA(14)<S$SCR> = ESTR.SUB.FLAG
  S$DATA(15)<S$SCR> = ESTR.RPT.TYPE
80090 *
  SCREEN DISPLAY;EST.REPORT;ALL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
* PRINT @(0,23):CL:ERRMSG:
* INPUT REPLY,1:
* PRINT @(0,23):CL:
* RETURN
*
*---- END OF PROGRAM
*
99999 *
* PRINT @(-1):
END
