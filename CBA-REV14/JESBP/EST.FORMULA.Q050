   SUBROUTINE EST.FORMULA.Q050 (CONO, ACTION, EQTY, DEPT, COMP)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.FORMULA.Q050
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/08/86
*
* DESCRIPTION
*
* This formula is used to calculate the number of sheets, pounds or yards
* of endleaf material required for casebound book.
*
*T27924 cmykleb 03/12/2004 * Move estimate qty to the component level.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>ESTIMATE.BIND.SPOIL
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
   TEMP.QTY = ""
   TYP = 0
   LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE RETURN
*T27924 v
   CQTY = EST.COMP.QTY<1,COMP,QPTR>
   BEGIN CASE
      CASE CQTY=""
         COMPQTY = EQTY
      CASE (CQTY[1,1]="+" OR CQTY[1,1]="-") AND CQTY[LEN(CQTY),1]="%"
         COMPQTY = INT(EQTY * (1 + (CQTY[1,LEN(CQTY)-1]/100)) + 0.5)
      CASE CQTY[1,1]="+" OR CQTY[1,1]="-"
         COMPQTY = EQTY + CQTY
      CASE 1
         COMPQTY = CQTY
   END CASE
   IF COMPQTY < 0 THEN COMPQTY = 0
*T27924 ^
   LOCATE TEMP.OPV IN ESTM.PROD<1>,1 SETTING MP ELSE RETURN
*
*---- MAIN PROCESSING
*
   BEGIN CASE
      CASE NUM(EST.CASE.SPOIL<1,COMP,1>); * T27924
         SPOIL = INT(COMPQTY * (EST.CASE.SPOIL<1,COMP,1> / 100) + 0.99) ;*T27924
      CASE 1
*T27924 v
*        MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:EST.CASE.SPOIL<1,1> ELSE
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:EST.CASE.SPOIL<1,COMP,1> ELSE
*T27924 ^
            MAT BST.REC = ""
         END
*T27924 v chg to compqty in locate
         LOCATE COMPQTY IN BST.QTY<1>,1 BY "AR" SETTING BP ELSE NULL
         BEGIN CASE
            CASE BP = 1
               BSPCT = BST.PCT<1,BP>
            CASE BP > COUNT(BST.QTY,VM) + 1
               BSPCT = BST.PCT<1,BP-1>
            CASE BST.EXTR = "Y"
*T27924 v
               BSPCT = INT(BST.PCT<1,BP>-(BST.QTY<1,BP>-COMPQTY)/(BST.QTY<1,BP>-BST.QTY<1,BP-1>)*(BST.PCT<1,BP>-BST.PCT<1,BP-1>)+0.5)
            CASE 1
               BSPCT = BST.PCT<1,BP>
         END CASE
         SPOIL = INT(COMPQTY * (BSPCT / 10000) + 0.99) ;*T27924
   END CASE
   PROD.QTY = COMPQTY + SPOIL ;*T27924
*T27924 v
*  NO.OUT = INT(EST.CASE.ENDLF.CUT.OUT / 100)
   NO.OUT = INT(EST.CASE.ENDLF.CUT.OUT<1,COMP> / 100)
*T27924 ^
   IF NO.OUT = 0 THEN
      TEMP.QTY = 0
      SHEETS = ""
   END ELSE
      SHEETS = INT(PROD.QTY * 2 / NO.OUT + 0.99)
*T27924 v
*     PRICE.UNIT = EST.CASE.ENDLF.PRICE<1,2>
      PRICE.UNIT = EST.CASE.ENDLF.UOM<1,COMP,1>
*T27924 ^
      BEGIN CASE
         CASE PRICE.UNIT[1,2] = "LB"
*T27924 v
*           IF EST.CASE.ENDLF.SRC = "R" THEN
*              XXLENGTH = EST.BIND.US.LENGTH
            IF EST.CASE.ENDLF.SRC<1,COMP> = "R" THEN
               XXLENGTH = EST.BIND.US.LENGTH<1,COMP>
*T27924 ^
            END ELSE
*T27924 v
*              XXLENGTH = EST.CASE.ENDLF.SIZE<1,2>
               XXLENGTH = EST.CASE.ENDLF.SIZE<1,COMP,2>
*T27924 ^
            END
*T27924 v
*           M.WEIGHT = EST.CASE.ENDLF.SPEC<1,1> * (EST.CASE.ENDLF.SIZE<1,1>/10000 * XXLENGTH/10000) / 950 * 2
            M.WEIGHT = EST.CASE.ENDLF.SPEC<1,COMP,1> * (EST.CASE.ENDLF.SIZE<1,COMP,1>/10000 * XXLENGTH/10000) / 950 * 2
*T27924 ^
            TEMP.QTY = INT(M.WEIGHT * (SHEETS / 1000) + 0.5)
*T27924 v
*           EST.CASE.ENDLF.QTY<1,1,QPTR> = TEMP.QTY
*           EST.CASE.ENDLF.QTY<1,2> = "LBS"
            EST.CASE.ENDLF.QTY<1,COMP,QPTR> = TEMP.QTY
            EST.CASE.ENDLF.UOM<1,COMP,3> = "LBS"
*T27924 ^
         CASE PRICE.UNIT[1,2] = "YD"
*T27924 v
*           XXLENGTH = EST.BIND.US.LENGTH
            XXLENGTH = EST.BIND.US.LENGTH<1,COMP>
*T27924 ^
            TEMP.QTY = INT(SHEETS * (XXLENGTH/10000) / 36 + 0.99)
*T27924 v
*           EST.CASE.ENDLF.QTY<1,1,QPTR> = TEMP.QTY
*           EST.CASE.ENDLF.QTY<1,2> = "YDS"
            EST.CASE.ENDLF.QTY<1,COMP,QPTR> = TEMP.QTY
            EST.CASE.ENDLF.UOM<1,COMP,3> = "YDS"
*T27924 ^
         CASE PRICE.UNIT = "SHT" OR PRICE.UNIT = "EA"
            TEMP.QTY = SHEETS
*T27924 v
*           EST.CASE.ENDLF.QTY<1,1,QPTR> = TEMP.QTY
*           EST.CASE.ENDLF.QTY<1,2> = "SHT"
            EST.CASE.ENDLF.QTY<1,COMP,QPTR> = TEMP.QTY
            EST.CASE.ENDLF.UOM<1,COMP,3> = "SHT"
*T27924 ^
      END CASE
   END
   TEMP.FCTR = 1000
*T27924 v
*  TEMP.STD = EST.CASE.ENDLF.PRICE<1,1,QPTR> / 100
*  TEMP.STD.TYPE = "$/":EST.CASE.ENDLF.PRICE<1,2>
*  TEMP.UM = EST.CASE.ENDLF.PRICE<1,3>
   TEMP.STD = EST.CASE.ENDLF.PRICE<1,COMP,QPTR> / 100
   TEMP.STD.TYPE = "$/":EST.CASE.ENDLF.UOM<1,COMP,1>
   TEMP.UM = EST.CASE.ENDLF.UOM<1,COMP,2>
*T27924 ^
   TEMP.IND.1 = ESTM.FOH.PCT<1,MP>
   TEMP.MARKUP = ESTM.MARKUP<1,MP>
*T27924 v
*  TEMP.DESC = EST.CASE.ENDLF<1,2>
   TEMP.DESC = EST.CASE.ENDLF<1,COMP,2>
*T27924 ^
   TEMP.VSALE = "Y"
   RETURN
END
