*COPY>CPYLIB>SCOMMON1
**************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - BOOKING.INQUIRY
*
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/23/86
*
* DESCRIPTION
*
* This program is for inquiry of a booked estimate.
* Also to release estimate from booked jobs.
*
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
**************************************************************************
*
*--- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
  DIM MAST.REC(15)
  EQU MAST.EST        TO MAST.REC(1)
  EQU MAST.STATUS     TO MAST.REC(2)
  EQU MAST.EST.SUBS   TO MAST.REC(3)
  EQU MAST.JOB        TO MAST.REC(4)
  EQU MAST.CUST       TO MAST.REC(5)
  EQU MAST.CUST.NAME  TO MAST.REC(6)
  EQU MAST.BOOK.EST   TO MAST.REC(7)
  EQU MAST.BOOK.COMP  TO MAST.REC(8)
  EQU MAST.BOOK.JOB   TO MAST.REC(9)
  EQU MAST.BOOK.QTY   TO MAST.REC(10)
  EQU MAST.BOOK.STAR  TO MAST.REC(11)
*
*--- PROC READ
*
  PROCREAD MENU ELSE ERRMSG="MUST RUN FROM PROC";GOSUB 90000;STOP
  IF MENU<1> = "C" THEN MENU = "C" ELSE MENU = "I"
*
*--- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY FILE";GOSUB 90000;STOP
  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL FILE";GOSUB 90000;STOP
  OPEN "","SECURITY" TO SECURITY ELSE ERRMSG="CANNOT OPEN SECURITY FILE";GOSUB 90000;STOP
  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX FILE";GOSUB 90000;STOP
  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CANNOT OPEN CUSTOMER FILE";GOSUB 90000;STOP
  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG="CANNOT OPEN CUSTOMER.XREF FILE";GOSUB 90000;STOP
  OPEN "","JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB 90000;STOP
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN JES.SCREENS FILE";GOSUB 90000;STOP
  OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG="CANNOT OPEN ESTIMATE FILE";GOSUB 90000;STOP
*
*--- INITIALIZATION
*
  CONO=""
  CALL GET.CONO1 (CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR=1
  SCREEN DEFINE;BOOKING.INQUIRY
  SCREEN FORMAT
  SCREEN COUNT;BOOKING.INQUIRY;9
  LINE.COUNT=S$LCNT
  LINE.SPACE=S$LSPC
  MAT GEN.XREF.REC=""
  ERRMSG=""
  UNKNOWN=STR("?",30)
  STAR = "*"
  TODAY = DATE()
  HEAD = "B O O K I N G   "
  IF MENU = "C" THEN
    HEAD = HEAD : "C A N C E L L A T I O N"
  END ELSE
    HEAD = HEAD : "I N Q U I R Y"
  END
  HEAD = STR(" ",INT((40-LEN(HEAD))/2)) : HEAD
  S$DATA(18)<S$SCR>=HEAD
  SCREEN DISPLAY;BOOKING.INQUIRY;18
  IF GUIFORM THEN
    P_TITLE = S$DATA(18)<S$SCR>
    CALL VSI__SI_PTITLE(P_TITLE,ERROR)
  END
  TRUE=1 ; FALSE=0
  GOTO 110
*
*--- MAIN PROCESSING
*
100*
  RELEASE
  SCREEN CLEAR
  S$DATA(18)<S$SCR>=HEAD
  SCREEN DISPLAY;BOOKING.INQUIRY;18
110*
  MAT EST.REC = ""
  MAT JOB.REC = ""
  EST.KEY = ""
  MAT MAST.REC = ""
  DUMMY = ""
  CNT = 0
  CURR.REF.NO=""
  S$DATA(1)<S$SCR>=""
  SCREEN FIELD;BOOKING.INQUIRY;1
  SCREEN INPUT;BOOKING.INQUIRY;1
  BEGIN CASE
    CASE S$VALUE = "END"
      GOTO 99999
    CASE S$VALUE # ""
      EST.KEY = S$VALUE
      MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE
        ERRMSG = "Estimate not on file. Try again! "
        GOSUB 90000; GOTO 110
      END
      BEGIN CASE
        CASE EST.STATUS<1,1> = "LOST"
          ERRMSG = "This estimate is lost"; GOSUB 90000; GOTO 110
      END CASE
      IF EST.MASTER # "" AND EST.MASTER # EST.KEY THEN
        MAST.EST = EST.MASTER
        READ DUMMY FROM ESTIMATE, CONO:MAST.EST ELSE
          ERRMSG = "Master estimate is not on file. Try again! "
          GOSUB 90000; GOTO 110
        END
        MAST.STATUS = DUMMY<EST.MASTER.STATUS.ATT,1>
        MAST.JOB = DUMMY<EST.MASTER.JOB.ATT>
        DUMMY = ""
        MAST.CUST = EST.CUST
        IF EST.CUST = "P" THEN
          MAST.CUST.NAME = EST.CUST.NAME
        END ELSE
          MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
            MAT CUST.REC = ""; CUST.NAME = UNKNOWN
          END
          MAST.CUST.NAME = CUST.NAME
        END
        IF EST.COMPONENT.CNT < 1 THEN
          MAST.BOOK.EST = EST.KEY
          MAST.BOOK.JOB = EST.JOB
          MAST.BOOK.QTY = EST.BOOK.QTY
        END
        FOR I = 1 TO EST.COMPONENT.CNT
          MAST.BOOK.EST<1,I> = EST.KEY
          MAST.BOOK.COMP<1,I> = I
          IF EST.BOOK.JOB<1,I> # "" THEN
            MAST.BOOK.JOB<1,I> = EST.BOOK.JOB<1,I>
            MAST.BOOK.QTY<1,I> = EST.BOOK.QTY
          END
        NEXT I
      END ELSE
        MAST.EST = EST.KEY
        MAST.STATUS = EST.STATUS<1,1>
        MAST.JOB = EST.JOB
        MAST.CUST = EST.CUST
        IF EST.CUST = "P" THEN
          MAST.CUST.NAME = EST.CUST.NAME
        END ELSE
          MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
            MAT CUST.REC = ""; CUST.NAME = UNKNOWN
          END
          MAST.CUST.NAME = CUST.NAME
        END
        MAST.EST.SUBS = EST.SUBS
        FOR I = 1 TO EST.COMPONENT.CNT
          MAST.BOOK.EST<1,I> = EST.KEY
          MAST.BOOK.COMP<1,I> = I
          IF EST.BOOK.JOB<1,I> # "" THEN
            MAST.BOOK.JOB<1,I> = EST.BOOK.JOB<1,I>
            MAST.BOOK.QTY<1,I> = EST.BOOK.QTY
          END
        NEXT I
        IF EST.SUBS # "" THEN
          SCREEN FIELD;BOOKING.INQUIRY;16
          SCREEN INPUT;BOOKING.INQUIRY;16
          IF S$VALUE = "Y" THEN
            DUMMY = ""
            FOR I = 1 TO EST.REC.SIZE
              DUMMY<I> = EST.REC(I)
            NEXT I
            ECNT = COUNT(MAST.EST.SUBS,VM) + (MAST.EST.SUBS # "")
            FOR I = 1 TO ECNT
              MATREAD EST.REC FROM ESTIMATE, CONO:MAST.EST.SUBS<1,I> ELSE GOTO 119
              IF EST.COMPONENT.CNT < 1 THEN GOTO 119
              FOR II = 1 TO EST.COMPONENT.CNT
                CNT = COUNT(MAST.BOOK.EST,VM) + (MAST.BOOK.EST # "") + 1
                MAST.BOOK.EST<1,CNT> = MAST.EST.SUBS<1,I>
                MAST.BOOK.COMP<1,CNT> = II
                IF EST.BOOK.JOB<1,II> # "" THEN
                  MAST.BOOK.JOB<1,CNT> = EST.BOOK.JOB<1,II>
                  MAST.BOOK.QTY<1,CNT> = EST.BOOK.QTY
                END
              NEXT II
119*
            NEXT I
            MAT EST.REC = ""
            FOR I = 1 TO EST.REC.SIZE
              EST.REC(I) = DUMMY<I>
            NEXT I
            DUMMY = ""
          END
        END
      END
    CASE 1
      ERRMSG = "INVALID RESPONSE"
      GOSUB 90000
      GOTO 110
  END CASE
  GOSUB 80000
  CNT = COUNT(MAST.BOOK.EST,VM) + (MAST.BOOK.EST # "")
  REF.NO = 1
  GOSUB 80200
*
*--- GET OPERATOR REPLY
*
500*
  IF MENU = "C" THEN
    SCREEN FIELD;BOOKING.INQUIRY;5
    SCREEN INPUT;BOOKING.INQUIRY;5
  END ELSE
    SCREEN FIELD;BOOKING.INQUIRY;6
    SCREEN INPUT;BOOKING.INQUIRY;6
  END
  OPTION=S$VALUE
  BEGIN CASE
    CASE OPTION="E" OR OPTION="END" OR OPTION = ""
      GOTO 100
    CASE OPTION="CM"
      GOSUB 10000
      IF BLK THEN GOTO 500 ELSE GOTO 100
    CASE OPTION="C"
      GOSUB 70000
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        IF MAST.BOOK.STAR<1,S$VALUE> # "" THEN
          ERRMSG="You already released this estimate component"
          GOSUB 90000; GOTO 500
        END
        IF MAST.BOOK.JOB<1,S$VALUE> = "" THEN
          ERRMSG="This line does not have a job to release"
          GOSUB 90000; GOTO 500
        END
        REF.NO=S$VALUE
        SCREEN FIELD;BOOKING.INQUIRY;16
        S$PMSG="You are about to release all components booked to job ":MAST.BOOK.JOB<1,REF.NO>:" continue (Y/N)"
        SCREEN INPUT;BOOKING.INQUIRY;16
        IF S$VALUE # "Y" THEN GOTO 500
        GOSUB 20000
        IF BLK = 0 AND MAST.JOB = "" THEN GOTO 100
        GOSUB 560
      END
    CASE OPTION="S"
      REF.NO=CURR.REF.NO+LINE.COUNT
      IF REF.NO > CNT THEN REF.NO = 1
      GOSUB 80200
    * T25978 v
    CASE OPTION = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 80200
    CASE OPTION = 'ST'
      REF.NO = 1
      GOSUB 80200
    CASE OPTION = 'SB'
      REF.NO = CNT
      GOSUB 80200
    * T25978 ^
  END CASE
  GOTO 500
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- REFORMAT SCREEN
*
550*
  SCREEN FORMAT
  GOSUB 80100
560*
  CURR.REF.NO=""
  REF.NO=1
  GOSUB 80200
  RETURN
*
*--- RELEASE MASTER ESTIMATE
*
10000*
  BLK = 0
  IF MAST.EST # EST.KEY THEN
    ERRMSG="This is not a master estimate"
    GOSUB 90000; BLK = 1; GOTO 10999
  END
  IF MAST.JOB = "" THEN
    ERRMSG="This master is not booked"; GOSUB 90000; BLK = 1; GOTO 10999
  END
  IF EST.BOOK.JOB # "" OR EST.BOOK.QTY # "" THEN
    ERRMSG="You must release all components first"; GOSUB 90000; BLK = 1; GOTO 10999
  END
  IF MAST.EST.SUBS # "" THEN
    DUMMY = ""
    FOR PTR = 1 TO EST.REC.SIZE
      DUMMY<PTR> = EST.REC(PTR)
    NEXT PTR
    ECNT = COUNT(MAST.EST.SUBS,VM) + (MAST.EST.SUBS # "")
    BLK = 0
    FOR PTR = 1 TO ECNT UNTIL BLK
      MATREAD EST.REC FROM ESTIMATE, CONO:MAST.EST.SUBS<1,PTR> ELSE MAT EST.REC = ""
      IF EST.JOB # "" OR EST.BOOK.JOB # "" OR EST.BOOK.QTY # "" THEN
        ERRMSG="You must release sub-estimate ":MAST.EST.SUBS<1,PTR>:" first."
        GOSUB 90000; BLK = 1
      END
    NEXT PTR
    MAT EST.REC = ""
    FOR PTR = 1 TO EST.REC.SIZE
      EST.REC(PTR) = DUMMY<PTR>
    NEXT PTR
    DUMMY = ""
    IF BLK THEN GOTO 10999
  END
  MATREADU EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE
    RELEASE ESTIMATE, CONO:EST.KEY
    ERRMSG="Estimate is not on file."; GOSUB 90000; BLK = 1; GOTO 10999
  END
  JOB.NUM = EST.JOB
  GOSUB 60000
  IF BLK THEN
    RELEASE ESTIMATE, CONO:EST.KEY
    GOTO 10999
  END
  EST.JOB = ""
  IF EST.STATUS<1,1> # "" THEN
    EST.STATUS = INSERT(EST.STATUS,1,1,0,"")
    EST.STAT.DATE = INSERT(EST.STAT.DATE,1,1,0,TODAY)
  END
  MATWRITE EST.REC ON ESTIMATE, CONO:EST.KEY
10999*
  RETURN
*
*--- RELEASE ESTIMATE COMPONENT
*
20000*
  BLK = 0
  DUMMY = ""
  FOR PTR = 1 TO EST.REC.SIZE
    DUMMY<PTR> = EST.REC(PTR)
  NEXT PTR
  MATREADU EST.REC FROM ESTIMATE, CONO:MAST.BOOK.EST<1,REF.NO> ELSE
    RELEASE ESTIMATE, CONO:MAST.BOOK.EST<1,REF.NO>
    ERRMSG="Estimate is not on file."; GOSUB 90000; BLK = 1; GOTO 20888
  END
  IF EST.MASTER # "" AND EST.MASTER # MAST.EST THEN
    RELEASE ESTIMATE, CONO:MAST.BOOK.EST<1,REF.NO>
    ERRMSG="Estimate ":MAST.BOOK.EST<1,REF.NO>:" belongs to master estimate ":EST.MASTER
    GOSUB 90000; BLK = 1; GOTO 20888
  END
  JOB.NUM = MAST.BOOK.JOB<1,REF.NO>
  GOSUB 60000
  IF BLK THEN
    RELEASE ESTIMATE, CONO:MAST.BOOK.EST<1,REF.NO>
    GOTO 20888
  END
  JCNT = COUNT(EST.BOOK.JOB,VM) + (EST.BOOK.JOB # "")
  FOR J = 1 TO JCNT
    IF EST.BOOK.JOB<1,J> = JOB.NUM THEN EST.BOOK.JOB<1,J> = ""
  NEXT J
  MORE = 0
  FOR J = JCNT TO 1 STEP - 1 UNTIL MORE
    IF EST.BOOK.JOB<1,J> = "" THEN
      EST.BOOK.JOB = DELETE(EST.BOOK.JOB,1,J,0)
    END ELSE
      MORE = 1
    END
  NEXT J
  IF EST.BOOK.JOB = "" THEN
    EST.BOOK.QTY = ""
    BEGIN CASE
      CASE EST.JOB = JOB.NUM
        EST.JOB = ""
        MAST.JOB = ""
      CASE MAST.EST # EST.KEY AND MAST.BOOK.EST<1,REF.NO> = EST.KEY
        EST.JOB = ""
        MAST.JOB = ""
      CASE MAST.BOOK.EST<1,REF.NO> # EST.KEY
        EST.JOB = ""
    END CASE
    IF EST.JOB = "" AND EST.STATUS<1,1> # "" THEN
      EST.STATUS = INSERT(EST.STATUS,1,1,0,"")
      EST.STAT.DATE = INSERT(EST.STAT.DATE,1,1,0,TODAY)
    END
  END
  MATWRITE EST.REC ON ESTIMATE, CONO:MAST.BOOK.EST<1,REF.NO>
  IF MAST.JOB = "" THEN GOTO 20999
  ECNT = COUNT(MAST.BOOK.EST,VM) + (MAST.BOOK.EST # "")
  FOR E = 1 TO ECNT
    IF MAST.BOOK.JOB<1,E> = JOB.NUM THEN
      MAST.BOOK.STAR<1,E> = STAR
      MAST.BOOK.JOB<1,E> = ""
      MAST.BOOK.QTY<1,E> = ""
    END
  NEXT E
  S$DATA(17)<S$SCR>=MAST.BOOK.STAR
  S$DATA(9)<S$SCR>=MAST.BOOK.EST
  S$DATA(10)<S$SCR>=MAST.BOOK.COMP
  S$DATA(11)<S$SCR>=MAST.BOOK.JOB
  S$DATA(12)<S$SCR>=MAST.BOOK.QTY
20888*
  MAT EST.REC = ""
  FOR PTR = 1 TO EST.REC.SIZE
    EST.REC(PTR) = DUMMY<PTR>
  NEXT PTR
  DUMMY = ""
  MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE NULL
20999*
  RETURN
*
*--- CHECK AND CANCEL THE JOB
*
60000*
  MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
    RELEASE JOB, CONO:JOB.NUM
    MAT JOB.REC = ""
    ERRMSG="Job ":JOB.NUM:" is missing."
    GOSUB 90000; BLK = 1; GOTO 60999
  END
  BEGIN CASE
    CASE JOB.STATUS = ""
    CASE JOB.STATUS<1,1> = 9
    CASE 1
      ERRMSG="You must use job maintenance function to cancel job ":JOB.NUM
      GOSUB 90000; BLK = 1; GOTO 60999
  END CASE
  IF JOB.WIP # "" OR JOB.RESV.MATL # "" OR JOB.INV.NO # "" THEN
    ERRMSG="You must use job maintenance function to cancel job ":JOB.NUM
    GOSUB 90000; BLK = 1; GOTO 60999
  END
  MATREADU CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
    RELEASE CUSTOMER, CONO:JOB.CUST
    RELEASE JOB, CONO:JOB.NUM
    ERRMSG="Cannot locate customer ":JOB.CUST
    GOSUB 90000; BLK = 1; GOTO 60999
  END
  IF JOB.STATUS<1,1> # 9 THEN
    JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"9")
    JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
  END
  LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE
    CUST.JOB<1,JFND> = JOB.NUM
  END
  CUST.JOB.BAL<1,JFND> = 0
  MATWRITE CUST.REC ON CUSTOMER, CONO:JOB.CUST
  MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
60999*
  RETURN
*
*--- GET LINE REFERENCE NUMBER
*
70000*
  S$DATA(7)<S$SCR>=""
  SCREEN FIELD;BOOKING.INQUIRY;7
  S$MINV=CURR.REF.NO
  S$MAXV=S$MINV+LINE.COUNT-1
  IF S$MAXV > CNT THEN S$MAXV=CNT
  SCREEN INPUT;BOOKING.INQUIRY;7
  RETURN
*
*--- LOAD SCREEN VALUES
*
80000*
*
*--- TOP PART OF THE SCREEN
*
  S$DATA(1)<S$SCR>=EST.KEY
  S$DATA(2)<S$SCR>=EST.STATUS<1,1>
  S$DATA(13)<S$SCR>=MAST.EST
  S$DATA(14)<S$SCR>=MAST.STATUS
  S$DATA(3)<S$SCR>=MAST.CUST
  S$DATA(4)<S$SCR>=MAST.CUST.NAME
  S$DATA(15)<S$SCR>=MAST.JOB
*
*--- BOTTOM PART OF THE SCREEN
*
  S$DATA(17)<S$SCR>=MAST.BOOK.STAR
  S$DATA(9)<S$SCR>=MAST.BOOK.EST
  S$DATA(10)<S$SCR>=MAST.BOOK.COMP
  S$DATA(11)<S$SCR>=MAST.BOOK.JOB
  S$DATA(12)<S$SCR>=MAST.BOOK.QTY
80100*
  SCREEN DISPLAY;BOOKING.INQUIRY;ALL
  RETURN
*
*--- SCROLL INTERNAL COMMENTS
*
80200*
  START.REF.NO=1+INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO=CURR.REF.NO THEN RETURN
  CURR.REF.NO=START.REF.NO
  S$VAL=START.REF.NO
  S$CNT=CNT
  SCREEN MULTI;BOOKING.INQUIRY;C;8;17;9;10;11;12
  RETURN
*
*--- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*    PRINT @(0,23):CL:ERRMSG:
*    INPUT REPLY:
*    PRINT @(0,23):CL:
*    RETURN
*
*--- END OF PROGRAM
*
99999*
*    PRINT @(-1):
END
