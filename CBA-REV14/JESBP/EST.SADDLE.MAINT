*COPY>CPYLIB>SCOMMON1
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.SADDLE.MAINT
*
* SOURCE   - JESBP (NJESBP)
*
* AUTHOR   - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/27/85
*
* DESCRIPTION
* This program updates and maintains the EQUIPMENT file (Saddle items).
*
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","EQUIPMENT" TO EQUIPMENT ELSE
    ERRMSG = "CANNOT OPEN EQUIPMENT FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = "CANNOT OPEN COST.CNTR FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.SADDLE.MAINT
  SCREEN FORMAT
*
*---- MAIN PROCESSING
*
100*
  SCREEN FIELD;EST.SADDLE.MAINT;1
  SCREEN INPUT;EST.SADDLE.MAINT;1
  IF S$VALUE = "END" THEN GOTO 99999
  EQP.KEY = S$VALUE
  MATREAD CCTR.REC FROM COST.CNTR, CONO:EQP.KEY ELSE
    ERRMSG = "Item must be a valid cost center"
    GOSUB 90000
    GOTO 100
  END
  S$DATA(2)<S$SCR> = CCTR.DESC
  SCREEN DISPLAY;EST.SADDLE.MAINT;2
  NEW.REC = 0
  * T26126 v
  MATREADU EQUIPMENT.REC FROM EQUIPMENT, CONO:EQP.KEY LOCKED
    ERRMSG = 'STITCHER record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 100 
  END ELSE
  * T26126 ^
    MAT EQUIPMENT.REC = ""
    NEW.REC = 1
  END
  IF EQP.TYPE # "" AND EQP.TYPE # "08" THEN
    RELEASE
    ERRMSG = "Item has already been defined as other than a saddle binder"
    GOSUB 90000
    GOTO 100
  END
  IF NEW.REC THEN
    EQP.TYPE = "08"
    FOR FLD = 1 TO 10
      ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,19990,19990
      IF S$VALUE = "END" THEN
        SCREEN CLEAR;EST.SADDLE.MAINT
        RELEASE
        GOTO 100
      END
    NEXT FLD
  END ELSE
    GOSUB 80000
    SCREEN DISPLAY;EST.SADDLE.MAINT;ALL
  END
*
*---- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.SADDLE.MAINT;23
  SCREEN INPUT;EST.SADDLE.MAINT;23
  OPTION = S$VALUE
  BEGIN CASE
    CASE OPTION # "" AND NUM(OPTION)
      FLD = OPTION
      ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,19990,19990
    CASE OPTION = "E" OR OPTION = "END"
      SCREEN CLEAR;EST.SADDLE.MAINT
      RELEASE
      GOTO 100
    CASE OPTION = "F"
      MATWRITE EQUIPMENT.REC ON EQUIPMENT, CONO:EQP.KEY
      SCREEN CLEAR;EST.SADDLE.MAINT
      GOTO 100
  END CASE
  GOTO 500
*
*---- GET NUMBER UP STITCHABLE
*
10100*
  SCREEN FIELD;EST.SADDLE.MAINT;3
  SCREEN INPUT;EST.SADDLE.MAINT;3;RETURN
  EQP.SADDLE.NO.UP.STITCH = S$VALUE
  RETURN
*
*---- GET NUMBER UP TRIMMABLE
*
10200*
  SCREEN FIELD;EST.SADDLE.MAINT;4
  SCREEN INPUT;EST.SADDLE.MAINT;4;RETURN
  EQP.SADDLE.NO.UP.TRIM = S$VALUE
  RETURN
*
*---- GET NO OF POCKETS
*
10300*
  SCREEN FIELD;EST.SADDLE.MAINT;5
  SCREEN INPUT;EST.SADDLE.MAINT;5;RETURN
  EQP.SADDLE.POCKET.CNT = S$VALUE
  RETURN
*
*---- GET MAX SPINE LENGTH
*
10400*
  SCREEN FIELD;EST.SADDLE.MAINT;6
  SCREEN INPUT;EST.SADDLE.MAINT;6;RETURN
  EQP.SADDLE.MAX.SPINE.LEN = S$VALUE
  RETURN
*
*---- GET POCKETS REQ HELPER
*
10500*
  SCREEN FIELD;EST.SADDLE.MAINT;7
  SCREEN INPUT;EST.SADDLE.MAINT;7;RETURN
  EQP.SADDLE.PKT.REQ.HELP = S$VALUE
  RETURN
*
*---- GET MINIMUM QUANTITY
*
10600*
  SCREEN FIELD;EST.SADDLE.MAINT;8
  SCREEN INPUT;EST.SADDLE.MAINT;8;RETURN
  EQP.SADDLE.MIN.QTY = S$VALUE
  RETURN
*
*---- GET % OF RUN TIME TO BE INCREASED
*
10700*
  SCREEN FIELD;EST.SADDLE.MAINT;9
  SCREEN INPUT;EST.SADDLE.MAINT;9;RETURN
  EQP.SADDLE.RUN.INCR.PKT = S$VALUE
  RETURN
*
*---- GET NO OF POCKETS HELPER CAN FEED
*
10800*
  SCREEN FIELD;EST.SADDLE.MAINT;10
  SCREEN INPUT;EST.SADDLE.MAINT;10;RETURN
  EQP.SADDLE.PKT.PER.HELP = S$VALUE
  RETURN
*
*---- DUMMY
*
19990*
  RETURN
*
*---- LOAD SCREEN VALUES
*
80000*
  MATREAD CCTR.REC FROM COST.CNTR, CONO:EQP.KEY ELSE
    MAT CCTR.REC = ""
    CCTR.DESC = "??????????"
  END
  S$DATA(2)<S$SCR> = CCTR.DESC
  S$DATA(3)<S$SCR> = EQP.SADDLE.NO.UP.STITCH
  S$DATA(4)<S$SCR> = EQP.SADDLE.NO.UP.TRIM
  S$DATA(5)<S$SCR> = EQP.SADDLE.POCKET.CNT
  S$DATA(6)<S$SCR> = EQP.SADDLE.MAX.SPINE.LEN
  S$DATA(7)<S$SCR> = EQP.SADDLE.PKT.REQ.HELP
  S$DATA(8)<S$SCR> = EQP.SADDLE.MIN.QTY
  S$DATA(9)<S$SCR> = EQP.SADDLE.RUN.INCR.PKT
  S$DATA(10)<S$SCR> = EQP.SADDLE.PKT.PER.HELP
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
  STOP
END
