   SUBROUTINE EST.COST.TYPE.SUM (CONO, EST.KEY, DSEL, CSEL, QSEL)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.COST.TYPE.SUM
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 05/09/86
*
* DESCRIPTION
*
* This subroutine will display estimate data summarized by cost type with
* detail for material costs.
* Data may be summarized for one or all components for the specified order
* quantity.
*
* MOD TASK 17811 DMT 4/19/94 ALLOW 99 QUANTITIES
*T26138 cm 09/17/2001 Expand estimate qty from 8 to 9 digits.
*T26411 cm 01/30/2002 When (Q)ty is chosen list is not in GUI.
*T27924 cmykleb 03/12/2004 * Move estimate qty to the component level.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EST.COST.TYPE.SUM
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
*---- DIMENSIONED VARIABLES
*
   DIM TOT.REC(10)
   EQU TOTAL.HRS     TO TOT.REC(1)
   EQU TOTAL.DCOST   TO TOT.REC(2)
   EQU TOTAL.COST    TO TOT.REC(3)
   EQU TOTAL.SALE    TO TOT.REC(4)
   OPEN '','JES.SCREENS' TO JES.SCREENS ELSE RETURN
   OPEN '','XREF.DATA' TO XREF.DATA ELSE RETURN
   OPEN '','ESTIMATE.WORK' TO ESTIMATE.WORK ELSE NULL
*
*---- INITIALIZATION
*
   SCREEN DEFINE;EST.COST.TYPE.SUM;JES.SCREENS
   SCREEN FORMAT
   SCREEN COUNT;EST.COST.TYPE.SUM;5
   TOP.CNT = S$LCNT
   TOP.SPC = S$LSPC
   SCREEN COUNT;EST.COST.TYPE.SUM;25
   BOT.CNT = S$LCNT
   BOT.SPC = S$LSPC
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   CLEARDASCREEN = ''
*
*---- MAIN PROCESSING
*
100*
   GOSUB 6000
   GOSUB 7000
   SCREEN DISPLAY;EST.COST.TYPE.SUM;ALL
   S$VAL=1
   S$CNT=TOP.CNT
   SCREEN MULTI;EST.COST.TYPE.SUM;C;5;6;7;8
   S$VAL=1
   S$CNT=BOT.CNT
   SCREEN MULTI;EST.COST.TYPE.SUM;C;25;26;27
*
*---- GET OPERATOR REPLY
*
500*
   SCREEN FIELD;EST.COST.TYPE.SUM;36
   SCREEN INPUT;EST.COST.TYPE.SUM;36
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "END"
         SCREEN CLEAR;EST.COST.TYPE.SUM;D
         GOTO 99999
      CASE OPTION = "Q"
         GOSUB 550
         IF CLEARDASCREEN THEN
            S$SCR = 2
            SCREEN FORMAT
         END
         BEGIN CASE
            CASE S$VALUE = "" OR S$VALUE = "END" 
               IF CLEARDASCREEN THEN
                  SCREEN DISPLAY;;ALL
                  CLEARDASCREEN = ''
               END
            CASE S$VALUE = QSEL 
               IF CLEARDASCREEN THEN
                  SCREEN DISPLAY;;ALL
                  CLEARDASCREEN = ''
               END
            CASE 1
               QSEL = S$VALUE
               CLEARDASCREEN = ''
               GOTO 100
         END CASE
   END CASE
   GOTO 500
*
*---- GET ORDER QUANTITY
*
550*
   EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
   BEGIN CASE
      CASE EC < 2 
         S$VALUE=EST.QTY<1,1>
*T26138 v
*     CASE EC < 6
      CASE EC = 999
*T26138 ^
         SCREEN FIELD;;37
         S$MINV=1;S$MAXV=EC
         S$PMSG="Enter Quantity"
         FOR EP=1 TO EC
*T27924 v
*           S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
            CPTR=CSEL; EQTY=EST.QTY<1,EP>; GOSUB 8500
            S$PMSG=S$PMSG:"  (":EP:") ":COMPQTY
*T27924 ^
         NEXT EP
         SCREEN INPUT;;37;RETURN
         S$VALUE=EST.QTY<1,S$VALUE>
      CASE 1
         GXR.NAME = 'EST.QTY.SEL'
         GXR.XREF = ESTIMATE.WORK
         GXR.SRCH.ID = EST.KEY
         MATWRITE EST.REC TO ESTIMATE.WORK, CONO:EST.KEY
*T26411 v
*        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T26411 ^
         DELETE ESTIMATE.WORK, CONO:EST.KEY
         CLEARDASCREEN = 'Y'
         IF GXR.ID = "" THEN 
            S$VALUE = ''
         END ELSE
            S$VALUE = EST.QTY<1,GXR.ID>
         END
   END CASE
*
*---- LOAD SCREEN DATA (TOP)
*
6000*
   MAT CSUM.REC = ""
   CALL EST.COST.TYPE.SUB (CONO, EST.KEY, DSEL,CSEL, QSEL, MAT CSUM.REC)
   MAT TOT.REC = ""
   TOTAL.HRS = CSUM.LB.HRS
   TOTAL.DCOST = CSUM.LB.DCOST+CSUM.MT.DCOST+CSUM.OS.DCOST+CSUM.SP.DCOST+CSUM.MS.DCOST
   TOTAL.COST = CSUM.LB.COST+CSUM.MT.COST+CSUM.OS.COST+CSUM.SP.COST+CSUM.MS.COST
   TOTAL.SALE = CSUM.LB.SALE+CSUM.MT.SALE+CSUM.OS.SALE+CSUM.SP.SALE+CSUM.MS.SALE
   S$DATA(1)<S$SCR> = DATE()
   IF CSEL = "ALL" THEN
      S$DATA(2)<S$SCR> = "ALL COMPONENTS"
   END ELSE
      S$DATA(2)<S$SCR> = EST.PROD.DESC<1,CSEL>
   END
*T26138 v
*  S$DATA(3)<S$SCR> = QSEL
*T27924 v
*  S$DATA(3)<S$SCR> = OCONV(QSEL,'MD0,')
   CPTR=CSEL; EQTY=QSEL; GOSUB 8500
   S$DATA(3)<S$SCR> = OCONV(COMPQTY,'MD0,')
*T27924 ^
*T26138 ^
   S$DATA(5)<S$SCR,1> = CSUM.LB.HRS
*T26138 v
*     S$DATA(6)<S$SCR,1> = CSUM.LB.DCOST
*     S$DATA(6)<S$SCR,2> = CSUM.MT.DCOST
*     S$DATA(6)<S$SCR,3> = CSUM.OS.DCOST
*     S$DATA(6)<S$SCR,4> = CSUM.SP.DCOST
*     S$DATA(6)<S$SCR,5> = CSUM.MS.DCOST
*     S$DATA(7)<S$SCR,1> = CSUM.LB.COST
*     S$DATA(7)<S$SCR,2> = CSUM.MT.COST
*     S$DATA(7)<S$SCR,3> = CSUM.OS.COST
*     S$DATA(7)<S$SCR,4> = CSUM.SP.COST
*     S$DATA(7)<S$SCR,5> = CSUM.MS.COST
*     S$DATA(8)<S$SCR,1> = CSUM.LB.SALE
*     S$DATA(8)<S$SCR,2> = CSUM.MT.SALE
*     S$DATA(8)<S$SCR,3> = CSUM.OS.SALE
*     S$DATA(8)<S$SCR,4> = CSUM.SP.SALE
*     S$DATA(8)<S$SCR,5> = CSUM.MS.SALE
   S$DATA(6)<S$SCR,1> = OCONV(CSUM.LB.DCOST,'MD2,')
   S$DATA(6)<S$SCR,2> = OCONV(CSUM.MT.DCOST,'MD2,')
   S$DATA(6)<S$SCR,3> = OCONV(CSUM.OS.DCOST,'MD2,')
   S$DATA(6)<S$SCR,4> = OCONV(CSUM.SP.DCOST,'MD2,')
   S$DATA(6)<S$SCR,5> = OCONV(CSUM.MS.DCOST,'MD2,')
   S$DATA(7)<S$SCR,1> = OCONV(CSUM.LB.COST,'MD2,')
   S$DATA(7)<S$SCR,2> = OCONV(CSUM.MT.COST,'MD2,')
   S$DATA(7)<S$SCR,3> = OCONV(CSUM.OS.COST,'MD2,')
   S$DATA(7)<S$SCR,4> = OCONV(CSUM.SP.COST,'MD2,')
   S$DATA(7)<S$SCR,5> = OCONV(CSUM.MS.COST,'MD2,')
   S$DATA(8)<S$SCR,1> = OCONV(CSUM.LB.SALE,'MD2,')
   S$DATA(8)<S$SCR,2> = OCONV(CSUM.MT.SALE,'MD2,')
   S$DATA(8)<S$SCR,3> = OCONV(CSUM.OS.SALE,'MD2,')
   S$DATA(8)<S$SCR,4> = OCONV(CSUM.SP.SALE,'MD2,')
   S$DATA(8)<S$SCR,5> = OCONV(CSUM.MS.SALE,'MD2,')
*T26138 ^
   S$DATA(15)<S$SCR> = TOTAL.HRS
*T26138 v
*     S$DATA(16)<S$SCR> = TOTAL.DCOST
*     S$DATA(17)<S$SCR> = TOTAL.COST
*     S$DATA(18)<S$SCR> = TOTAL.SALE
   S$DATA(16)<S$SCR> = OCONV(TOTAL.DCOST,'MD2,')
   S$DATA(17)<S$SCR> = OCONV(TOTAL.COST,'MD2,')
   S$DATA(18)<S$SCR> = OCONV(TOTAL.SALE,'MD2,')
*T26138 ^
   RETURN
*
*---- LOAD SCREEN DATA (BOTTOM)
*
7000*
*T26138 v
*     S$DATA(25)<S$SCR,1> = CSUM.MT.DCOST.DET<1,1>
*     S$DATA(25)<S$SCR,2> = CSUM.MT.DCOST.DET<1,2>
*     S$DATA(25)<S$SCR,3> = CSUM.MT.DCOST.DET<1,3>
*     S$DATA(25)<S$SCR,4> = CSUM.MT.DCOST.DET<1,4>
*     S$DATA(25)<S$SCR,5> = CSUM.MT.DCOST.DET<1,5>
*     S$DATA(25)<S$SCR,6> = CSUM.MT.DCOST.DET<1,6>
*     S$DATA(26)<S$SCR,1> = CSUM.MT.COST.DET<1,1>
*     S$DATA(26)<S$SCR,2> = CSUM.MT.COST.DET<1,2>
*     S$DATA(26)<S$SCR,3> = CSUM.MT.COST.DET<1,3>
*     S$DATA(26)<S$SCR,4> = CSUM.MT.COST.DET<1,4>
*     S$DATA(26)<S$SCR,5> = CSUM.MT.COST.DET<1,5>
*     S$DATA(26)<S$SCR,6> = CSUM.MT.COST.DET<1,6>
*     S$DATA(27)<S$SCR,1> = CSUM.MT.SALE.DET<1,1>
*     S$DATA(27)<S$SCR,2> = CSUM.MT.SALE.DET<1,2>
*     S$DATA(27)<S$SCR,3> = CSUM.MT.SALE.DET<1,3>
*     S$DATA(27)<S$SCR,4> = CSUM.MT.SALE.DET<1,4>
*     S$DATA(27)<S$SCR,5> = CSUM.MT.SALE.DET<1,5>
*     S$DATA(27)<S$SCR,6> = CSUM.MT.SALE.DET<1,6>
   S$DATA(25)<S$SCR,1> = OCONV(CSUM.MT.DCOST.DET<1,1>,'MD2,')
   S$DATA(25)<S$SCR,2> = OCONV(CSUM.MT.DCOST.DET<1,2>,'MD2,')
   S$DATA(25)<S$SCR,3> = OCONV(CSUM.MT.DCOST.DET<1,3>,'MD2,')
   S$DATA(25)<S$SCR,4> = OCONV(CSUM.MT.DCOST.DET<1,4>,'MD2,')
   S$DATA(25)<S$SCR,5> = OCONV(CSUM.MT.DCOST.DET<1,5>,'MD2,')
   S$DATA(25)<S$SCR,6> = OCONV(CSUM.MT.DCOST.DET<1,6>,'MD2,')
   S$DATA(26)<S$SCR,1> = OCONV(CSUM.MT.COST.DET<1,1>,'MD2,')
   S$DATA(26)<S$SCR,2> = OCONV(CSUM.MT.COST.DET<1,2>,'MD2,')
   S$DATA(26)<S$SCR,3> = OCONV(CSUM.MT.COST.DET<1,3>,'MD2,')
   S$DATA(26)<S$SCR,4> = OCONV(CSUM.MT.COST.DET<1,4>,'MD2,')
   S$DATA(26)<S$SCR,5> = OCONV(CSUM.MT.COST.DET<1,5>,'MD2,')
   S$DATA(26)<S$SCR,6> = OCONV(CSUM.MT.COST.DET<1,6>,'MD2,')
   S$DATA(27)<S$SCR,1> = OCONV(CSUM.MT.SALE.DET<1,1>,'MD2,')
   S$DATA(27)<S$SCR,2> = OCONV(CSUM.MT.SALE.DET<1,2>,'MD2,')
   S$DATA(27)<S$SCR,3> = OCONV(CSUM.MT.SALE.DET<1,3>,'MD2,')
   S$DATA(27)<S$SCR,4> = OCONV(CSUM.MT.SALE.DET<1,4>,'MD2,')
   S$DATA(27)<S$SCR,5> = OCONV(CSUM.MT.SALE.DET<1,5>,'MD2,')
   S$DATA(27)<S$SCR,6> = OCONV(CSUM.MT.SALE.DET<1,6>,'MD2,')
*T26138 ^
   RETURN
*T27924 v
*
*---- DERIVE COMPONENT QUANTITY
*
8500*
      IF NUM(CPTR) THEN
         LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE QPTR = 1
         CQTY = EST.COMP.QTY<1,CPTR,QPTR>
         BEGIN CASE
         CASE CQTY=""
            COMPQTY = EQTY
         CASE (CQTY[1,1]="+" OR CQTY[1,1]="-") AND CQTY[LEN(CQTY),1]="%"
            COMPQTY = INT(EQTY * (1 + (CQTY[1,LEN(CQTY)-1]/100)) + 0.5)
         CASE CQTY[1,1]="+" OR CQTY[1,1]="-"
            COMPQTY = EQTY + CQTY
         CASE 1
            COMPQTY = CQTY
         END CASE
         IF COMPQTY < 0 THEN COMPQTY = 0
      END ELSE
        COMPQTY = EQTY
      END
      RETURN
*T27924 ^
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   SCREEN CLEAR;EST.COST.TYPE.SUM;D
   RETURN
END
