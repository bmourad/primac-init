*COPY>CPYLIB>SCOMMON1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - RES.BP
* PROGRAM     - EST.RL.CYLINDER.MAINT
* BY          - KERRY WILSON
* DATE        - 01/18/90
* DESCRIPTION - This program maintains the Roll Label Cylinder.
*T24312 gat 10/01/1999 * ADD PRINT CODES TO SCREEN
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/01/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>JES.CPYLIB>ESTIMATE.RES.CYLINDER
*COPY>JES.CPYLIB>ESTIMATE.RES.GEARSET
*COPY>JES.CPYLIB>EST.RES.FDIE.SPEEDS
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- SET SYSCOM
*
SYS.TYPE=1
CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
OPEN 'ESTIMATE.RES.CYLINDER' TO ESTIMATE.RES.CYLINDER ELSE
  ERRMSG = 'CANNOT OPEN ESTIMATE.RES.CYLINDER FILE'
  GOTO 93000
END
OPEN '','ESTIMATE.RES.GEARSET' TO ESTIMATE.RES.GEARSET ELSE
  ERRMSG='CANNOT OPEN ESTIMATE.RES.GEARSET FILE'
  GOTO 93000
END
OPEN '','EST.RES.FDIE.SPEEDS' TO EST.RES.FDIE.SPEEDS ELSE
  ERRMSG='Cannot open EST.RES.FDIE.SPEEDS'
  GOSUB 93000
END
OPEN 'EQUIPMENT' TO EQUIPMENT ELSE
  ERRMSG = 'CANNOT OPEN EQUIPMENT FILE'
  GOTO 93000
END
OPEN 'COST.CNTR' TO COST.CNTR ELSE
  ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
  GOTO 93000
END
OPEN 'COMPANY' TO COMPANY ELSE
  ERRMSG = 'CANNOT OPEN COMPANY FILE'
  GOTO 93000
END
OPEN 'CONTROL' TO CONTROL ELSE
  ERRMSG = 'CANNOT OPEN CONTROL FILE'
  GOTO 93000
END
OPEN 'JES.SCREENS' TO M.SCREENS ELSE
  ERRMSG = 'CANNOT OPEN JES.SCREENS FILE'
  GOTO 93000
END
OPEN 'PREFIX' TO PREFIX ELSE
  ERRMSG = 'CANNOT OPEN PREFIX FILE'
  GOTO 93000
END
OPEN 'XREF.DATA' TO XREF.DATA ELSE
  ERRMSG = 'CANNOT OPEN XREF.DATA FILE'
  GOTO 93000
END
*
*---- INITIALIZATION
*
CONO = ""
CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
SCREEN INIT;#
S$SCR = 1
SCREEN DEFINE;EST.RES.CYLINDER.MAINT
SCREEN FORMAT
SCREEN COUNT;;12
LINE.COUNT = S$LCNT
LINE.SPACE = S$LSPC
SCREEN COUNT;;24
PLINE.COUNT = S$LCNT
PLINE.SPACE = S$LSPC
MAT GEN.XREF.REC = ""
GXR.CO = CONO
TEMP.GEARSET = ""
*
*---- MAIN PROCESSING
*
100 *
CCTR = ''
PCCTR = ""
DESC = ''
PDESC = ""
CURR.REF.NO = ''
PCURR.REF.NO = ''
REF.NO = 1
PREF.NO = 1
S$DATA(1)<S$SCR> = DATE()
SCREEN DISPLAY;;1
SCREEN FIELD;;2
SCREEN INPUT;;2
BEGIN CASE
  CASE S$VALUE = 'END'
    GOTO 99999
  CASE S$VALUE = '??'
    GXR.NAME = "ESTIMATE.RES.GEARSET"
    GXR.FILE = ESTIMATE.RES.GEARSET
    GXR.SORT.FILE = ESTIMATE.RES.GEARSET
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    TEMP.GEARSET=GXR.ID
    SCREEN FORMAT
    S$DATA(2)<S$SCR> = GXR.ID
    SCREEN DISPLAY;;2
    GOTO 100
  CASE S$VALUE = '???'
    GXR.NAME = "ESTIMATE.RES.CYLINDER"
    GXR.FILE = ESTIMATE.RES.CYLINDER
    GXR.SORT.FILE = ESTIMATE.RES.CYLINDER
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    S$VALUE=GXR.ID
    SCREEN FORMAT
    S$DATA(2)<S$SCR> = GXR.ID
    SCREEN DISPLAY;;2
    IF GXR.ID="" THEN GOTO 100
    TEMP.GEARSET=""
END CASE
S$VALUE = TEMP.GEARSET:S$VALUE
RLKEY = CONO:S$VALUE
S$DATA(2)<S$SCR> = RLKEY[4,5]
SCREEN DISPLAY;;2
IF LEN(S$VALUE) < 3 THEN
  ERRMSG='Key must be Gearset Code + Number of Teeth'
  GOSUB 91000
  TEMP.GEARSET = ""
  GOTO 100
END
*
NEW.REC = 0
MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:S$VALUE[1,2] ELSE
  ERRMSG='Invalid Gearset Code'
  GOSUB 91000
  TEMP.GEARSET = ""
  GOTO 100
END
IF NOT(NUM(S$VALUE[3,3])) THEN
  ERRMSG = "Number of Teeth must be numeric"
  GOSUB 91000
  TEMP.GEARSET = ""
  GOTO 100
END
*
  * T26126 v
MATREADU RLCYN.REC FROM ESTIMATE.RES.CYLINDER,RLKEY LOCKED
  ERRMSG = 'CYLINDER record is locked by user - ':GETUSERNAME(STATUS())
  GOSUB 91000;GOTO 100 
END ELSE
  * T26126 ^
  MAT RLCYN.REC = ''
  S$DATA(3)<S$SCR>=S$VALUE[1,2]
  S$DATA(4)<S$SCR>=RLKEY[6,(LEN(RLKEY)-5)]
  RLCYN.TEETH=RLKEY[6,(LEN(RLKEY)-5)]
  S$DATA(7)<S$SCR>=ESTGS.DESC
  NEW.REC = 1
END
GOSUB 50000
GOSUB 60000
IF NEW.REC THEN
  REF.NO = 1
  PREF.NO = 1
  GOSUB 51000
  GOSUB 61000
  FOR FLD = 1 TO 6
    ON FLD GOSUB 10000,10200,10300,10400,10600,10700
    IF S$VALUE = 'END' THEN 
      SCREEN CLEAR
      RELEASE
      TEMP.GEARSET = ""
      GOTO 100
    END
  NEXT FLD
END ELSE
  GOSUB 80000
END
*
*---- ENTER PROMPT
*
500 *
SCREEN FIELD;;21
SCREEN INPUT;;21
OPTION = S$VALUE
BEGIN CASE
  CASE NUM(OPTION)
    ON OPTION GOSUB 10200,10300,10400,10600,10700
  CASE OPTION = 'D'
510 *
    SCREEN FIELD;;11
    SCREEN INPUT;;11
    BEGIN CASE
      CASE S$VALUE = 'Y'
        DELETE ESTIMATE.RES.CYLINDER,RLKEY
        SCREEN CLEAR
        RELEASE
        GOTO 100
        LOCATE RLCYN.REPEAT IN ESTGS.REPEATS,1 SETTING REPEAT.FND THEN
          ESTGS.REPEATS=DELETE(ESTGS.REPEATS,1,REPEAT.FND,0)
          ESTGS.CYLIDS=DELETE(ESTGS.CYLIDS,1,REPEAT.FND,0)
          MATWRITE ESTGS.REC ON ESTIMATE.RES.GEARSET,RLKEY[1,5]
        END
      CASE S$VALUE = 'N'
        GOTO 500
      CASE 1
        GOTO 510
    END CASE
  CASE OPTION = 'E' OR OPTION = 'END'
    SCREEN CLEAR
    RELEASE
    TEMP.GEARSET = ""
    GOTO 100
  CASE OPTION = 'F'
*
*--- UpDate Valid Repeats for this Gearset Code
*
    LOCATE RLCYN.REPEAT IN ESTGS.REPEATS<1>,1 BY "AR" SETTING REPEAT.FND ELSE
      ESTGS.REPEATS = INSERT(ESTGS.REPEATS,1,REPEAT.FND,0,RLCYN.REPEAT)
      ESTGS.CYLIDS = INSERT(ESTGS.CYLIDS,1,REPEAT.FND,0,RLKEY[4,10])
      MATWRITE ESTGS.REC ON ESTIMATE.RES.GEARSET,CONO:RLKEY[4,2]
    END
*
    MATWRITE RLCYN.REC ON ESTIMATE.RES.CYLINDER,RLKEY
    SCREEN CLEAR
    RELEASE
    TEMP.GEARSET = ""
    GOTO 100
  CASE OPTION = "S"
    REF.NO = CURR.REF.NO + LINE.COUNT
    IF REF.NO > CNT THEN REF.NO = 1
    GOSUB 51000
    * T25978 v
  CASE OPTION = 'SR'
    REF.NO = CURR.REF.NO - LINE.COUNT
    IF REF.NO < 1 THEN REF.NO = 1
    GOSUB 51000
  CASE OPTION = 'ST'
    REF.NO = 1
    GOSUB 51000
  CASE OPTION = 'SB'
    REF.NO = CNT
    GOSUB 51000
    * T25978 ^
  CASE OPTION = "P"
    PREF.NO = PCURR.REF.NO + PLINE.COUNT
    IF PREF.NO > PCNT THEN PREF.NO = 1
    GOSUB 61000
    * T25978 v
  CASE OPTION = 'PR'
    PREF.NO = PCURR.REF.NO - PLINE.COUNT
    IF PREF.NO < 1 THEN PREF.NO = 1
    GOSUB 61000
  CASE OPTION = 'PT'
    PREF.NO = 1
    GOSUB 61000
  CASE OPTION = 'PB'
    PREF.NO = PCNT
    GOSUB 61000
    * T25978 ^
END CASE
GOTO 500
*
*---- GEARSET
*
10000 *
SCREEN DISPLAY;;3
SCREEN DISPLAY;;7
*
*---- TEETH
*
SCREEN DISPLAY;;4
*
*---- REPEAT
*
RLCYN.REPEAT=RLCYN.TEETH*ESTGS.PITCH
S$DATA(5)<S$SCR>=RLCYN.REPEAT
SCREEN DISPLAY;;5
*
*--- Update Maximum Speed For This Cylinder If Impressions
*    Are Available for this CYLINDER (ie if Flatbed)
*
IF ESTGS.IMPRESS+0 > 0 THEN
  MAX.SPEED=INT((RLCYN.REPEAT/10000)*(ESTGS.IMPRESS/1000)*60)
  MAX.KEY=INT((RLCYN.REPEAT+5)/10000)
  WRITE MAX.SPEED ON EST.RES.FDIE.SPEEDS,RLKEY[1,5]:'*':MAX.KEY
END
RETURN
*
*---- QTY ON HAND
*
10200 *
SCREEN FIELD;;6
SCREEN INPUT;;6;RETURN
RLCYN.QUANTITY = S$VALUE
RETURN
*
*---- LOCATION
*
10300 *
SCREEN FIELD;;8
SCREEN INPUT;;8;RETURN
RLCYN.LOC = S$VALUE
RETURN
*
*---- TYPE
*
10400 *
SCREEN FIELD;;9
SCREEN INPUT;;9;RETURN
RLCYN.TYPE = S$VALUE
IF RLCYN.TYPE = 'PF' THEN
  GOSUB 10500
END ELSE
  RLCYN.PERF.INCH = ''
  S$DATA(10)<S$SCR> = ''
  SCREEN DISPLAY;;10
END
RETURN
*
*---- PERF INCHES
*
10500 *
SCREEN FIELD;;10
SCREEN INPUT;;10;RETURN
RLCYN.PERF.INCH = S$VALUE
RETURN
*
*------ PRINT QUANTITY
10600 *
SCREEN FIELD;;27
SCREEN INPUT;;27;RETURN
RLCYN.PQTY = S$VALUE
RETURN
*
*---- LOCATION
*
10700 *
SCREEN FIELD;;28
SCREEN INPUT;;28;RETURN
RLCYN.PLOC = S$VALUE
RETURN
*
*---- GET COST.CNTRS
*
50000 *
SELECTINDEX "GSROTARY",S$VALUE[1,2] FROM EQUIPMENT
DATA = 1
LOOP
  READNEXT ID ELSE DATA = 0
WHILE DATA DO
  IF ID[1,3] = CONO THEN
    ID = ID[4,99]
    LOCATE ID IN CCTR<1>,1 BY "AR" SETTING PTR ELSE
      CCTR = INSERT(CCTR,1,PTR,0,ID)
    END
  END
REPEAT
SELECTINDEX "GSFBED",S$VALUE[1,2] FROM EQUIPMENT
DATA = 1
LOOP
  READNEXT ID ELSE DATA = 0
WHILE DATA DO
  IF ID[1,3] = CONO THEN
    ID = ID[4,99]
    LOCATE ID IN CCTR<1>,1 BY "AR" SETTING PTR ELSE
      CCTR = INSERT(CCTR,1,PTR,0,ID)
    END
  END
REPEAT
CNT = DCOUNT(CCTR,VM)
FOR C = 1 TO CNT
  MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR<1,C> ELSE
    CCTR.DESC = STR("?",25)
  END
  DESC<1,C> = CCTR.DESC "L#28"
NEXT C
S$DATA(13)<S$SCR> = CCTR
S$DATA(14)<S$SCR> = DESC
RETURN
*
*---- SCROLL DESCRIPTION FOR COST CENTERS
*
51000 *
START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
IF START.REF.NO = CURR.REF.NO THEN RETURN
CURR.REF.NO = START.REF.NO
S$VAL = START.REF.NO
S$CNT = CNT
SCREEN MULTI;EST.RES.CYLINDER.MAINT;C;12;13;14
RETURN
*
*---- GET PRINT COST.CNTRS
*
60000 *
SELECTINDEX "GSPRINT",S$VALUE[1,2] FROM EQUIPMENT
DATA = 1
LOOP
  READNEXT ID ELSE DATA = 0
WHILE DATA DO
  IF ID[1,3] = CONO THEN
    ID = ID[4,99]
    LOCATE ID IN PCCTR<1>,1 BY "AR" SETTING PTR ELSE
      PCCTR = INSERT(PCCTR,1,PTR,0,ID)
    END
  END
REPEAT
PCNT = DCOUNT(PCCTR,VM)
FOR C = 1 TO PCNT
  MATREAD CCTR.REC FROM COST.CNTR,CONO:PCCTR<1,C> ELSE
    CCTR.DESC = STR("?",25)
  END
  PDESC<1,C> = CCTR.DESC "L#28"
NEXT C
S$DATA(25)<S$SCR> = PCCTR
S$DATA(26)<S$SCR> = PDESC
RETURN
*
*---- SCROLL DESCRIPTION FOR COST CENTERS
*
61000 *
PSTART.REF.NO = 1 + INT((PREF.NO-1)/PLINE.COUNT)*PLINE.COUNT
IF PSTART.REF.NO = PCURR.REF.NO THEN RETURN
PCURR.REF.NO = PSTART.REF.NO
S$VAL = PSTART.REF.NO
S$CNT = PCNT
SCREEN MULTI;EST.RES.CYLINDER.MAINT;C;24;25;26
RETURN
*---- LOAD SCREEN
*
80000 *
S$DATA(3)<S$SCR> = S$VALUE[1,2]
S$DATA(4)<S$SCR> = RLCYN.TEETH
S$DATA(5)<S$SCR> = RLCYN.REPEAT
S$DATA(6)<S$SCR> = RLCYN.QUANTITY
MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:S$VALUE[1,2] ELSE
  ESTGS.DESC='** Invalid Gearset **'
END
S$DATA(7)<S$SCR> = ESTGS.DESC
S$DATA(8)<S$SCR> = RLCYN.LOC
S$DATA(9)<S$SCR> = RLCYN.TYPE
S$DATA(10)<S$SCR> = RLCYN.PERF.INCH
S$DATA(27)<S$SCR> = RLCYN.PQTY
S$DATA(28)<S$SCR> = RLCYN.PLOC
REF.NO = 1
GOSUB 51000
PREF.NO = 1
GOSUB 61000
SCREEN DISPLAY;;ALL
RETURN
*
*---- SYSCOM MESSAGES
*
91000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 *
* ERR.TYPE=1
* CALL SI_SYSCOM(MAT SYSCOM.REC)
* RETURN
92000 ERR.TYPE=2;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 92000 *
* ERR.TYPE=2
* CALL SI_SYSCOM(MAT SYSCOM.REC)
* RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
* 93000 *
* ERR.TYPE=3
* CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
* PRINT @(-1)
END
