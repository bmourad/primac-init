*COPY>CPYLIB>SCOMMON1
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.PRESS.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/25/85
*
* DESCRIPTION
*
*T21871 larryt 05/02/1997 * CHANGE ENTRY OF COLOR UNITS TO ALLOW 2
*                           DIGITS
*T26126 adelgado 03/11/2002 * Implement the LOCKED clause for READU.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JES.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JES.SCREENS FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","EQUIPMENT" TO EQUIPMENT ELSE
    ERRMSG = "CANNOT OPEN EQUIPMENT FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = "CANNOT OPEN COST.CNTR FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","OPERATION" TO OPERATION ELSE
    ERRMSG = "CANNOT OPEN OPERATION FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","ESTIMATE.PRESS.SPOIL" TO ESTIMATE.PRESS.SPOIL ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.PRESS.SPOIL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","ESTIMATE.RUN.EFF" TO ESTIMATE.RUN.EFF ELSE
    ERRMSG = "CANNOT OPEN ESTIMATE.RUN.EFF FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;EST.PRESS.MAINT
  SCREEN FORMAT
  GOTO 110
*
*---- MAIN PROCESSING
*
100*
  SCREEN CLEAR
  RELEASE
110*
  SCREEN FIELD;EST.PRESS.MAINT;1
  SCREEN INPUT;EST.PRESS.MAINT;1
  IF S$VALUE = "END" THEN GOTO 99999
  EQP.KEY = S$VALUE
  MATREAD CCTR.REC FROM COST.CNTR, CONO:EQP.KEY ELSE
    ERRMSG = "Item must be a valid cost center"
    GOSUB 90000
    GOTO 100
  END
  S$DATA(2)<S$SCR> = CCTR.DESC
  SCREEN DISPLAY;EST.PRESS.MAINT;2
  NEW.REC = 0
  * T26126 v
  MATREADU EQUIPMENT.REC FROM EQUIPMENT, CONO:EQP.KEY LOCKED
    ERRMSG = 'PRESS record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 100 
  END ELSE
  * T26126 ^
    MAT EQUIPMENT.REC = ""
    NEW.REC = 1
  END
  IF EQP.TYPE # "" AND EQP.TYPE # "01" THEN
    RELEASE
    ERRMSG = "Item has already been defined as other than a press"
    GOSUB 90000
    GOTO 100
  END
  IF NEW.REC THEN
    EQP.TYPE = "01"
    FOR FLD = 1 TO 16
      BEGIN CASE
        CASE FLD <= 10
          ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,19990,19990,11000
        CASE FLD <= 20
          ON FLD-10 GOSUB 11100,11200,11300,11400,11500,11600
      END CASE
      IF S$VALUE = "END" THEN GOTO 100
    NEXT FLD
  END ELSE
    GOSUB 80000
    GOSUB 20000
  END
*
*---- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.PRESS.MAINT;25
  SCREEN INPUT;EST.PRESS.MAINT;25
  OPTION = S$VALUE
  BEGIN CASE
    CASE OPTION # "" AND NUM(OPTION)
      FLD = OPTION
      BEGIN CASE
        CASE FLD <= 10
          ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,19990,19990,11000
        CASE FLD <= 20
          ON FLD-10 GOSUB 11100,11200,11300,11400,11500,11600
      END CASE
    CASE OPTION = "S2"
      ACTION = NEW.REC
      STATUS = ""
      S$SCR = S$SCR + 1
      CALL EST.PRESS.MAINT.2 (CONO, EQP.KEY, CCTR.DESC, MAT EQUIPMENT.REC)
      SCREEN CLOSE
      S$SCR = S$SCR - 1
      SCREEN FORMAT
      GOSUB 80090
    CASE OPTION = "E" OR OPTION = "END"
      SCREEN CLEAR
      RELEASE
      GOTO 100
    CASE OPTION = "F"
      MATWRITE EQUIPMENT.REC ON EQUIPMENT, CONO:EQP.KEY
      SCREEN CLEAR
      GOTO 100
  END CASE
  GOTO 500
*
*---- GET MIN AND MAX LENGTH
*
10100*
  SCREEN FIELD;EST.PRESS.MAINT;27
  SCREEN INPUT;EST.PRESS.MAINT;27;RETURN
  EQP.PRESS.MIN.LENGTH = S$VALUE
  SCREEN FIELD;EST.PRESS.MAINT;3
  SCREEN INPUT;EST.PRESS.MAINT;3;RETURN
  EQP.PRESS.CUTOFF.LEN = S$VALUE
  RETURN
*
*---- GET MIN AND MAX WIDTH
*
10200*
  SCREEN FIELD;EST.PRESS.MAINT;4
  SCREEN INPUT;EST.PRESS.MAINT;4;RETURN
  EQP.PRESS.MIN.WIDTH = S$VALUE
  SCREEN FIELD;EST.PRESS.MAINT;5
  SCREEN INPUT;EST.PRESS.MAINT;5;RETURN
  EQP.PRESS.MAX.WIDTH = S$VALUE
  RETURN
*
*---- GET PRESS TYPE DATA
*
10300*
  SCREEN FIELD;EST.PRESS.MAINT;6
  SCREEN INPUT;EST.PRESS.MAINT;6;RETURN
  EQP.PRESS.TYPE = S$VALUE
  BEGIN CASE
    CASE EQP.PRESS.TYPE = "S"
      S$DATA(7)<S$SCR> = "SHEETFED"
    CASE EQP.PRESS.TYPE = "W"
      S$DATA(7)<S$SCR> = "WEB"
    CASE 1
      S$DATA(7)<S$SCR> = "OTHER"
  END CASE
  SCREEN DISPLAY;EST.PRESS.MAINT;7
  IF EQP.PRESS.TYPE = "W" THEN
    SCREEN FIELD;EST.PRESS.MAINT;8
    SCREEN INPUT;EST.PRESS.MAINT;8;RETURN
    EQP.PRESS.WEB.CNT = S$VALUE
    SCREEN FIELD;EST.PRESS.MAINT;9
    SCREEN INPUT;EST.PRESS.MAINT;9;RETURN
    EQP.PRESS.FOLDER = S$VALUE
    SCREEN FIELD;EST.PRESS.MAINT;10
    SCREEN INPUT;EST.PRESS.MAINT;10;RETURN
    EQP.PRESS.HEAT.SET = S$VALUE
    SCREEN FIELD;EST.PRESS.MAINT;11
    SCREEN INPUT;EST.PRESS.MAINT;11;RETURN
    EQP.PRESS.SHEETER = S$VALUE
    SCREEN FIELD;EST.PRESS.MAINT;12
    SCREEN INPUT;EST.PRESS.MAINT;12;RETURN
    EQP.PRESS.FINISHER = S$VALUE
  END ELSE
    S$DATA(8)<S$SCR> = ""
    S$DATA(9)<S$SCR> = ""
    S$DATA(10)<S$SCR> = ""
    S$DATA(11)<S$SCR> = ""
    S$DATA(12)<S$SCR> = ""
    EQP.PRESS.WEB.CNT = ""
    EQP.PRESS.FOLDER = ""
    EQP.PRESS.HEAT.SET = ""
    EQP.PRESS.SHEETER = ""
    EQP.PRESS.FINISHER = ""
    SCREEN DISPLAY;EST.PRESS.MAINT;8
    SCREEN DISPLAY;EST.PRESS.MAINT;9
    SCREEN DISPLAY;EST.PRESS.MAINT;10
    SCREEN DISPLAY;EST.PRESS.MAINT;11
    SCREEN DISPLAY;EST.PRESS.MAINT;12
  END
  RETURN
*
*---- GET BLANKET TO BLANKET
*
10400*
  SCREEN FIELD;EST.PRESS.MAINT;13
  SCREEN INPUT;EST.PRESS.MAINT;13;RETURN
  EQP.PRESS.BLK.TO.BLK = S$VALUE
  RETURN
*
*---- GET NUMBER OF COLOR UNITS
*
10500*
  SCREEN FIELD;EST.PRESS.MAINT;14
  SCREEN INPUT;EST.PRESS.MAINT;14;RETURN
  EQP.PRESS.CLR.CNT = S$VALUE
  GOSUB 20000
  RETURN
*
*---- GET PERFECTOR
*
10600*
  SCREEN FIELD;EST.PRESS.MAINT;15
  SCREEN INPUT;EST.PRESS.MAINT;15;RETURN
  EQP.PRESS.PERFECTOR = S$VALUE
  RETURN
*
*---- GET SWITCHABLE UNITS
*
10700*
  SCREEN FIELD;EST.PRESS.MAINT;16
  SCREEN INPUT;EST.PRESS.MAINT;16;RETURN
  EQP.PRESS.SWITCHABLE = S$VALUE
  RETURN
*
*---- GET GRIPPER DATA
*
11000*
  SCREEN FIELD;EST.PRESS.MAINT;17
  SCREEN INPUT;EST.PRESS.MAINT;17;RETURN
  EQP.PRESS.GRIPPER.CNT = S$VALUE
  SCREEN FIELD;EST.PRESS.MAINT;18
  SCREEN INPUT;EST.PRESS.MAINT;18;RETURN
  EQP.PRESS.GRIPPER.WIDTH = S$VALUE
  SCREEN FIELD;EST.PRESS.MAINT;19
  SCREEN INPUT;EST.PRESS.MAINT;19;RETURN
  EQP.PRESS.GRIPPER.POS = S$VALUE
  RETURN
*
*---- GET COLOR BAR ALLOWANCE
*
11100*
  SCREEN FIELD;EST.PRESS.MAINT;20
  SCREEN INPUT;EST.PRESS.MAINT;20;RETURN
  EQP.PRESS.CLR.BAR.ALLOW = S$VALUE
  RETURN
*
*---- GET TAIL ALLOWANCE
*
11200*
  SCREEN FIELD;EST.PRESS.MAINT;21
  SCREEN INPUT;EST.PRESS.MAINT;21;RETURN
  EQP.PRESS.TAIL.ALLOW = S$VALUE
  RETURN
*
*---- GET CLAMP ALLOWANCE
*
11300*
  SCREEN FIELD;EST.PRESS.MAINT;22
  SCREEN INPUT;EST.PRESS.MAINT;22;RETURN
  EQP.PRESS.CLAMP.ALLOW = S$VALUE
  RETURN
*
*---- GET SOLIDS ABILITY
*
11400*
  SCREEN FIELD;EST.PRESS.MAINT;23
  SCREEN INPUT;EST.PRESS.MAINT;23;RETURN
  EQP.PRESS.SOLID.ABILITY = S$VALUE
  RETURN
*
*---- GET REGISTER ABILITY
*
11500*
  SCREEN FIELD;EST.PRESS.MAINT;24
  SCREEN INPUT;EST.PRESS.MAINT;24;RETURN
  EQP.PRESS.REGISTER.ABILITY = S$VALUE
  RETURN
*
*---- GET RUN SPOILAGE % OR TABLE ID
*
11600*
  SCREEN FIELD;EST.PRESS.MAINT;28
  SCREEN INPUT;EST.PRESS.MAINT;28;RETURN
  IF NOT(NUM(S$VALUE)) THEN
    READ REC FROM ESTIMATE.PRESS.SPOIL, CONO:S$VALUE ELSE
      ERRMSG = "** WARNING **  Cannot locate spoilage table "
      GOSUB 90000
    END
  END
  EQP.PRESS.RUN.SPOIL = S$VALUE
  RETURN
*
*---- DUMMY
*
19990*
  RETURN
*
*---- CHECK FOR EFFICIENCY TABLE PRESENCE
*
20000*
  EFF.KEY = EQP.KEY:"*":EQP.PRESS.CLR.CNT:"*M*M"
  READ REC FROM ESTIMATE.RUN.EFF, CONO:EFF.KEY ELSE
    ERRMSG = "** WARNING **  Cannot locate run efficiency table "
    GOSUB 90000
  END
  RETURN
*
*---- LOAD SCREEN VALUES
*
80000*
  MATREAD CCTR.REC FROM COST.CNTR, CONO:EQP.KEY ELSE
    MAT CCTR.REC = ""
    CCTR.DESC = "??????????"
  END
  S$DATA(2)<S$SCR> = CCTR.DESC
  S$DATA(3)<S$SCR> = EQP.PRESS.CUTOFF.LEN
  S$DATA(4)<S$SCR> = EQP.PRESS.MIN.WIDTH
  S$DATA(5)<S$SCR> = EQP.PRESS.MAX.WIDTH
  S$DATA(6)<S$SCR> = EQP.PRESS.TYPE
  BEGIN CASE
    CASE EQP.PRESS.TYPE = "S"
      S$DATA(7)<S$SCR> = "SHEETFED"
    CASE EQP.PRESS.TYPE = "W"
      S$DATA(7)<S$SCR> = "WEB"
    CASE 1
      S$DATA(7)<S$SCR> = "OTHER"
  END CASE
  S$DATA(8)<S$SCR> = EQP.PRESS.WEB.CNT
  S$DATA(9)<S$SCR> = EQP.PRESS.FOLDER
  S$DATA(10)<S$SCR> = EQP.PRESS.HEAT.SET
  S$DATA(11)<S$SCR> = EQP.PRESS.SHEETER
  S$DATA(12)<S$SCR> = EQP.PRESS.FINISHER
  S$DATA(13)<S$SCR> = EQP.PRESS.BLK.TO.BLK
  S$DATA(14)<S$SCR> = EQP.PRESS.CLR.CNT
  S$DATA(15)<S$SCR> = EQP.PRESS.PERFECTOR
  S$DATA(16)<S$SCR> = EQP.PRESS.SWITCHABLE
  S$DATA(17)<S$SCR> = EQP.PRESS.GRIPPER.CNT
  S$DATA(18)<S$SCR> = EQP.PRESS.GRIPPER.WIDTH
  S$DATA(19)<S$SCR> = EQP.PRESS.GRIPPER.POS
  S$DATA(20)<S$SCR> = EQP.PRESS.CLR.BAR.ALLOW
  S$DATA(21)<S$SCR> = EQP.PRESS.TAIL.ALLOW
  S$DATA(22)<S$SCR> = EQP.PRESS.CLAMP.ALLOW
  S$DATA(23)<S$SCR> = EQP.PRESS.SOLID.ABILITY
  S$DATA(24)<S$SCR> = EQP.PRESS.REGISTER.ABILITY
  S$DATA(27)<S$SCR> = EQP.PRESS.MIN.LENGTH
  S$DATA(28)<S$SCR> = EQP.PRESS.RUN.SPOIL
80090*
  SCREEN DISPLAY;EST.PRESS.MAINT;ALL
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
  STOP
END
