*
*  THIS PGM WILL GO THROUGH ALL CPYLIB IN THE BASE PACKAGE AND WILL GENERATE
*   A FILE THAT HAS AS ITS FORMAT
*   ID  <0>    -   CPYLIB EQUATE VARIABLE
*   ITEMID <1> -   MV1 CPYLIB RECORD ID
*   FILE   <2> -   MV1 CPYLIB FILENAME
*   ATTR   <3> -   MV1 ATTR VALUE FROM EQUATE
*   PGM    <4> -   MV2 PROGRAMS THAT USE THIS VARIABLE
*
EQU A.ITEMID TO 1
EQU A.FILE   TO 2
EQU A.ATTR   TO 3
EQU A.PGM    TO 4
*
*   THIS IS A TWO PASS PROCESS THE FIRST PASS WILL GO THROUGH ALL NOTED
*   CPYLIB FILES AND WILL PROCESS EACH VALID EQUATE TO BUILD AN ENTRY IN
*   THE ABOVE FILE (CPYLIB.XREF).   THE SECOND PASS WILL GO THROUGH ALL
*   OF THE PROGRAMS AND WILL SEARCH FOR USES OF THE ABOVE VARIABLES AND
*   WILL BUILD ATTR 4 ABOVE WITH A LIST OF PGMS THAT ARE REFERENCE
*   THE VARIABLE
*
*
OPEN "CPYLIB.XREF" TO CPYLIB.XREF ELSE
  PRINT "NO CPYLIB.XREF FILE LOCATED IN THIS ACCCOUNT"
  STOP
END
*
MODL="":@VM:"APS":@VM:"ARS":@VM:"CBA":@VM:"CNV":@VM:"EP4":@VM:"EPS":@VM
MODL=MODL : "FAS":@VM:"GLS":@VM:"ICS":@VM:"JCS":@VM:"JES":@VM:"JIS":@VM
MODL=MODL : "NDC":@VM:"OPS":@VM:"PMC":@VM:"POS":@VM:"PR4":@VM:"PRS":@VM
MODL=MODL : "PSS":@VM:"QPL":@VM:"RES":@VM:"SAS":@VM:"UTL"
*
NUM.O.MODS = DCOUNT(MODL,@VM)
*
CPY.FILE.CTR=0
FOR MPTR = 1 TO NUM.O.MODS
  * PROCESS THE CPYLIBS
  IF MPTR = 1 THEN
    ADDON = "CPYLIB"
  END ELSE
    ADDON = ".CPYLIB"
  END
  CFNAME = MODL<1,MPTR>:ADDON
  OPEN CFNAME TO WORKING.CPYLIB THEN
    CPY.FILE.CTR = CPY.FILE.CTR + 1
    GOSUB 1000 ;* PROCESS THE CPYLIB FILE
  END
NEXT MPTR
*
PGM.FILE.CTR = 0
FOR MPTR = 1 TO NUM.O.MODS
  * PROCESS THE BP FILES
  IF MPTR = 1 THEN
    * NOT A VALID BP FILE SKIP THIS ONE
  END ELSE
    PGM.FILE.CTR = PGM.FILE.PTR + 1
    CFNAME = MODL<1,MPTR>:"BP"
    OPEN CFNAME TO WORKING.BP THEN 
      GOSUB 6000 ;*  PROCESS THE BP FILE
    END 
  END
NEXT MPTR
*
*
1000 *  PROCESS THE CPYLIB FILE
*
SELECT WORKING.CPYLIB
*
DONE = 0
REC.CTR = 0
LOOP
  READNEXT ID ELSE DONE = 1
UNTIL DONE DO
  READ REC FROM WORKING.CPYLIB,ID THEN
    REC.CTR = REC.CTR + 1
    GOSUB 1500 ;* PROCESS A CPYLIB RECORD
    IF REM(REC.CTR,10)=0 THEN
      PRINT CFNAME:" ":REC.CTR
    END
  END 
REPEAT
*
RETURN
*
1500 * PROCESS A CPYLIB ITEM
*
NUM.AM = DCOUNT(REC,@AM)
FOR REC.ATT.NUM = 1 TO NUM.AM
  CATT = REC<REC.ATT.NUM>
  CATT = TRIM(CATT)
  FIRST.CHAR = CATT[1,1]
  FIRST.THREE = CATT[1,3]
  IF FIRST.CHAR = "*" OR FIRST.CHAR = "!" OR FIRST.THREE = "REM" THEN
    *   this attr is a comment
  END ELSE
    IF FIRST.THREE = "EQU" THEN
      * this is an equate line
      *
      FLDNAME = FIELD(CATT," ",2)
      P4 = FIELD(CATT," ",4)
      FIRST.PAREN = INDEX(P4,"(",1)
      SEC.PAREN = INDEX(P4,")",1)
      ATTRNUM = P4[FIRST.PAREN+1,(SEC.PAREN - FIRST.PAREN - 1)]
*      PRINT CFNAME :" ":ID:" ":P2:" ":ATTRNUM
      GOSUB 1800 ;* ADD RECORD
    END
  END
NEXT REC.ATT.NUM
RETURN
*
1800 *   ADD RECORD TO XREF
*
READ CPY.REC FROM CPYLIB.XREF,FLDNAME THEN
  * PROCESS AN EXISTING RECORD
  LOCATE ID IN CPY.REC<A.ITEMID>,1 SETTING FND.POS THEN
    IF CPY.REC<A.FILE,FND.POS> = CFNAME AND CPY.REC<A.ATTR,FND.POS> = ATTRNUM THEN
      * EXACT DUP SKIP AND GO ON
    END ELSE
      * THIS IS WHERE THE SAME ATTR NAME IS USED IN MULTI CPYLIBS
      *   ALSO THE THE SAME FILE NAME IS USED 
      *   THIS IS A PROBLEM  LETS REPORT IT NOW AND IF WE NEED TO DEAL WITH IT
      *   THEN WE CAN ADD CODE HERE LATER
      PRINT "An error has occured.  The cpylib item ":ID:" is in at least "
      PRINT "two files ":CFNAME:" and ": CPY.REC<A.ITEMID,FND.POS>
      PRINT "Enter <RETURN> to acknowledge ":
      INPUT XXX
    END
  END ELSE
    *   THIS IS WHERE THE CPYLIB ATTR NAME MATCH BUT
    *   THE ITEM ID OF THE RECORDS ARE DIFFERENT
    CPY.REC = INSERT(CPY.REC,A.ITEMID,FND.POS,0,ID)
    CPY.REC = INSERT(CPY.REC,A.CFNAME,FND.POS,0,CFNAME)
    
END ELSE
  * PROCESS A NEW REC
  CPY.REC = ""
  CPY.REC<A.ITEMID> = ID
  CPY.REC<A.FILE> = CFNAME
  CPY.REC<A.ATTR> = ATTRNUM
END
WRITE CPY.REC ON CPYLIB.XREF,FLDNAME
*
RETURN
*
6000 *
*
*
RETURN      


