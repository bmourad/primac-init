*OPEN "DEVDEVBP" TO DEVBP ELSE
*  PRINT "UNABLE TO OPEN DEVBP IN DEV ACCT"
*  STOP
*END
OPEN "MD" TO MD ELSE PRINT "NO MD " ; STOP
*OPEN "REV10DEVBP" TO REV10DEVBP ELSE
*  PRINT "UNABLE TO OPEN REV10DEVBP IN REV ACCT"
*  STOP
*END
INCLUDE INCS GLOBAL.EQUATES
PLIST    ="APS"
PLIST<-1>="ARS"
PLIST<-1>="CBA"
*PLIST<-1>="CNV"
PLIST<-1>="EP4"
PLIST<-1>="EPS"
PLIST<-1>="FAS"
*PLIST<-1>="GLS"
PLIST<-1>="ICS"
PLIST<-1>="JCS"
PLIST<-1>="JES"
*PLIST<-1>="NDC"
PLIST<-1>="OPS"
PLIST<-1>="PMC"
PLIST<-1>="POS"
PLIST<-1>="PR4"
PLIST<-1>="PRS"
PLIST<-1>="PSS"
*PLIST<-1>="QPL"
PLIST<-1>="SAS"
PLIST<-1>="UTL"
*PLIST<-1>="REPORT.PROC.FILE"
*PLIST<-1>="PRIMAC.MENUS"
NUM.FILES = DCOUNT(PLIST,AM)
*
*  GET THE PART1 OF THE PATH SOURCE
100 *
PRINT "Enter base part of source path.  If you want to process the CBA-REV10A account"
PRINT "for rev10a you would enter '/usr/ud/primac/rev10/basea/CBA-REV10A' "
PRINT "Enter path :":
INPUT SPATH
PRINT
PRINT "'":SPATH:"' is this what you want (Y/N):":
INPUT RESP
IF RESP[1,1] # "Y" THEN GO 100
PRINT
200 *
PRINT "Enter base part of dest path.  If you want to process the CBA-NEYLER account"
PRINT "for rev10a you would enter '/vsi/cust/rev10a/neyler/CBA-NEYLER' "
PRINT "Enter path :":
INPUT DPATH
PRINT
PRINT "'":DPATH:"' is this what you want (Y/N):":
INPUT RESP
IF RESP[1,1] # "Y" THEN GO 200
PRINT
PRINT "Do you want to update the dest dict with missing items (Y/N):":
INPUT RESP
IF RESP[1,1] = 'Y' THEN
  UPDATE.REMOTE=1
END ELSE
  UPDATE.REMOTE=0
END
*
* extract the acct name ... for CBA-REV10A get REV10A
*
NUM.SLASH = DCOUNT(SPATH,"/")
LFIELD = FIELD(SPATH,"/",NUM.SLASH)
IF LFIELD[1,4] # "CBA-" THEN
  PRINT "Unable to process ":SPATH
  PRINT "must be a CBA-... account in path"
  STOP
END ELSE
  SACCT = FIELD(LFIELD,"-",2)
  NSPATH=''
  FOR I = 1 TO NUM.SLASH-1
    IF I = 1 THEN
      NSPATH=FIELD(SPATH,"/",I):"/"
    END ELSE
      NSPATH=NSPATH:FIELD(SPATH,"/",I):"/"
    END
  NEXT I
  SPATH=NSPATH
END
NUM.SLASH = DCOUNT(DPATH,"/")
LFIELD = FIELD(DPATH,"/",NUM.SLASH)
IF LFIELD[1,4] # "CBA-" THEN
  PRINT "Unable to process ":DPATH
  PRINT "must be a CBA-... account in path"
  STOP
END ELSE
  DACCT = FIELD(LFIELD,"-",2)
  NDPATH=''
  FOR I = 1 TO NUM.SLASH-1
    IF I = 1 THEN
      NDPATH=FIELD(DPATH,"/",I):"/"
    END ELSE
      NDPATH=NDPATH:FIELD(DPATH,"/",I):"/"
    END
  NEXT I
  DPATH=NDPATH
END
*
PRINTER ON 
PRINT
PRINT "COMPARISON OF ":SPATH:SACCT:"   TO "
PRINT "              ":DPATH:DACCT
PRINT
FOR I = 1 TO NUM.FILES
  CURR.MOD = PLIST<I>
  PRINTER ON
  PRINT
  PRINT
  PRINT "PROCESSING ":CURR.MOD
  PRINTER OFF
  PRINT "PROCESSING ":CURR.MOD
*
*   PROCESS BP , PROC, SCREENS, VOC
    IF CURR.MOD # 'CBA' THEN
      VOCTRUE=1
      IF CURR.MOD = "PMC" THEN
        ORIG.VOC = SACCT:"/VOC"
        NEW.VOC =  DACCT:"/VOC"
      END ELSE
        ORIGVOC = SACCT:"-":CURR.MOD:"/VOC"
        NEWVOC = DACCT:"-":CURR.MOD:"/VOC"
      END
      FNAME1 = NEWVOC
      FNAME2 = ORIGVOC
      ONAME=CURR.MOD:"VOC"
      GOSUB 1000;* PROCESS FNAME1 AND FNAME2
      VOCTRUE=FALSE
      P1 = "CBA-REV010/"
      P2 = "CBA-REV10A/"
      ORIGBP = P1:CURR.MOD:"BP"
      NEWBP = P2:CURR.MOD:"BP"
      FNAME1=NEWBP;FNAME2=ORIGBP
      ONAME=CURR.MOD:"BP"
*      GOSUB 1000
      ORIGPROCS = P1:CURR.MOD:"PROCS"
      NEWPROCS  = P2:CURR.MOD:"PROCS"
      FNAME1=NEWPROCS;FNAME2=ORIGPROCS
      ONAME=CURR.MOD:"PROCS"
*      GOSUB 1000
      ORIG.SCREENS = P1:CURR.MOD:".SCREENS"
      NEW.SCREENS  = P2:CURR.MOD:".SCREENS"
      FNAME1=NEW.SCREENS;FNAME2 = ORIG.SCREENS
      ONAME=CURR.MOD:".SCREENS"
*      GOSUB 1000
      ORIG.CPYLIB = P1:CURR.MOD:".CPYLIB"
      NEW.CPYLIB = P2:CURR.MOD:".CPYLIB"
      FNAME1=NEW.CPYLIB ; FNAME2=ORIG.CPYLIB
      ONAME=CURR.MOD:".CPYLIB"
*      GOSUB 1000
    END ELSE
*      IN THE CBA MOD COMPARE MENUS, REPORT.PROC.FILE AND VOC
      FNAME1="CBA-":DACCT:"/PRIMAC.MENUS"
      FNAME2="CBA-":SACCT:"/PRIMAC.MENUS"
      ONAME="PRIMAC.MENUS"
      GOSUB 1000
      FNAME1=DACCT:"/REPORT.PROC.FILE"
      FNAME2=SACCT:"/REPORT.PROC.FILE"
      ONAME="REPORT.PROC.FILE"
      GOSUB 1000
    END
NEXT I
*
*
STOP
*
1000 ***
CTR = 0
MCTR=0
*
*    FNAME1 AND FNAME2 ARE IMPORTED AND TO BE PROCESSED
*
DELETE MD, "TEMPQNAME1"
DELETE MD, "TEMPQNAME2"
CMD1 = 'SETFILE ':DPATH:FNAME1:" TEMPQNAME2 OVERWRITING"
CMD2 = 'SETFILE ':SPATH:FNAME2:" TEMPQNAME1 OVERWRITING"
UDTEXECUTE CMD1 CAPTURING ERRMSG1
ERR.PRINTED=0
IF ERRMSG1[1,7] = "No such" THEN
  ERR.PRINTED=1
   PRINTER ON
   PRINT SPACE(3):FNAME1:"  Unable to Open "
   PRINTER OFF
END
READ V1 FROM MD,"TEMPQNAME1" THEN
  IF V1<3> = "" THEN V1<3> = "D_VOC"
  WRITE V1 ON MD,"TEMPQNAME1" 
END
UDTEXECUTE CMD2 CAPTURING ERRMSG2
IF ERRMSG2[1,7] = "No such" THEN
   PRINTER ON
   ERR.PRINTED=1
   PRINT SPACE(3):FNAME2:" Unable to Open "
   PRINTER OFF
END
IF ERR.PRINTED THEN RETURN
READ V1 FROM MD,"TEMPQNAME2" THEN
  IF V1<3> = "" THEN V1<3> = "D_VOC"
  WRITE V1 ON MD,"TEMPQNAME2"
END
PRINT CMD1
PRINT CMD2
SELECTVERB="SSELECT TEMPQNAME1"
DONE=0
PRINTER ON
*  OPEN THE FILES TO FILEVAR1 AND FILEVAR2
OPEN "TEMPQNAME1" TO FILEVAR1 ELSE
  PRINT "UNABLE TO OPEN ":FNAME1
  RETURN
END
OPEN "TEMPQNAME2" TO FILEVAR2 ELSE
  PRINT "UNABLE TO OPEN ":FNAME2
  RETURN
END
PRINTER OFF
SCREEN.ARRAY=''
PRINT.ONAME=TRUE
LEN.ONAME=LEN(ONAME)
IF ONAME[LEN.ONAME-7,8]='.SCREENS' THEN
  ISA.SCREEN=TRUE
END ELSE
  ISA.SCREEN=FALSE
END
PRINT SELECTVERB
PERFORM SELECTVERB
SELECT FILEVAR1 TO LIST1
PRINTER ON
LOOP
  READNEXT ID FROM LIST1 ELSE DONE=1
UNTIL DONE DO
  CTR=CTR+1
  IF ID[1,1] # "_" THEN
    READ REC1 FROM FILEVAR1,ID THEN
      FOUND.SCREEN=TRUE
      IF ISA.SCREEN THEN
        SCRNAME=ONAME:"|":FIELD(ID,"*",1)
        LOCATE SCRNAME IN SCREEN.ARRAY<1>,1 SETTING POS ELSE
          SCREEN.ARRAY = INSERT(SCREEN.ARRAY,1,POS;SCRNAME)
          FOUND.SCREEN=FALSE
        END
      END
      READ REC2 FROM FILEVAR2,ID THEN
        IF REC1 # REC2 THEN
*            THIS ITEM HAS CHANGED"
          IF PRINT.ONAME THEN
            PRINT SPACE(3):ONAME
            PRINT.ONAME=FALSE
          END
          IF ISA.SCREEN THEN
            IF NOT(FOUND.SCREEN) THEN
              PRINT SPACE(6):SCRNAME
            END
          END ELSE
            R1=REC1<1>
            IF R1='V' OR R1='S' OR R1='K' OR R1='SQLV' OR R1='s' THEN
              * NO PRINT LINE THIS IS A SYSTEM VERB
            END ELSE
              IF R1 = "F" OR R1 = "DIR" OR R1 = "D" THEN
                * NO PRINT ONLY DIFFERENT
                IF NOT(INDEX(REC1<2>,"/",1)) AND REC1<2> = ID THEN
                  GOSUB 3000 ;* PROCESS DICTIONARY OF FILE
                  PRINTER ON
                END ELSE
                  IF REC1<3>[3,99]=ID THEN
                    GOSUB 3000
                    PRINTER ON
                  END
                END
              END ELSE
                PRINT SPACE(6):ID:STR("-",40-LEN(ID)):"         ":REC1<1>
              END
            END
          END
          MCTR=MCTR+1
        END ELSE
*          THEN ITEMS ARE THE SAME
            *
          R1=REC1<1>[1,1]
          IF (R1 = "F" OR R1 = "D") AND VOCTRUE THEN
            * NO PRINT ONLY DIFFERENT
            *  THIS IS WHERE THE DICTIONARY ITEMS NEED TO BE CHECKED
            *
            IF INDEX(REC1<2>,"/",1) THEN
              *  This is a pointer to another acct not a local file
            END ELSE
              IF REC1<2> = ID OR REC1<3>[3,99]=ID THEN
                PRINTER OFF
                GOSUB 3000 ;* PROCESS DICTIONARY OF FILE
                PRINTER ON
              END
            END
          END
        END
      END ELSE
*          THE ITEM ONLY EXIST IN FILEVAR1
        IF PRINT.ONAME THEN
          PRINT SPACE(3):ONAME
          PRINT.ONAME=FALSE
        END
          IF ISA.SCREEN THEN
            IF NOT(FOUND.SCREEN) THEN
              PRINT SPACE(6):SCRNAME     
            END
          END ELSE
            R1=REC1<1>
            IF R1='V' OR R1='S' OR R1='K' OR R1='SQLV' OR R1='s' THEN
              * NO PRINT LINE THIS IS A SYSTEM VERB
            END ELSE
              * SPECIAL CHECK IF UNDERSCORE CHECK FOR WITHOUT AND IF SO
              * THEN EXCLUDE
              DO.PRINT=1
              IF INDEX(ID,"_",1) AND (REC1<1>[1,1]='F' OR REC1<1>[1,1]='D') THEN
                IF REC1<2> # ID THEN
                  IF INDEX(REC1<2>,"/",1) THEN
                    NUMS = DCOUNT(REC1<2>,"/")
                    IF FIELD(REC1<2>,"/",NUMS) # ID THEN
                      DO.PRINT=0
                    END
                  END ELSE
                    IF REC1<3>[3,99] = ID THEN
                      DO.PRINT=1
                    END ELSE
                      DO.PRINT=0
                    END
                  END
                END
              END
              IF DO.PRINT THEN
                PRINT SPACE(6):ID:STR("-",40-LEN(ID)):" MISSING ":REC1<1>
              END
            END
          END
      END
    END ELSE
*     THIS SHOULD NEVER OCCUR
      PRINT SPACE(4):"**************":"ITEM IN SELECT LIST NOT IN FILE??? ":FNAME1:" ":ID
    END
  END
REPEAT
*PRINT SPACE(2):"FOR FILE ":FNAME1:" PROCESSED ":CTR:" RECORDS AND ":MCTR:" MISMATCHED"
PRINT SPACE(3):ONAME:"  *** PROCESSED ":CTR:" MISSMATCH ":MCTR
PRINTER OFF
RETURN
*
*
3000 * PROCESS THE DICT OF A FILE
*
*
IF CURR.MOD = "PMC" THEN
  DORIG.T = SACCT
  DNEW.T =  DACCT
END ELSE
  DORIG.T = SACCT:"-":CURR.MOD
  DNEW.T = DACCT:"-":CURR.MOD
END
*
PRINTER OFF
DELETE MD, "TEMPQNAME3"
DELETE MD, "TEMPQNAME4"
CMD1 = 'SETFILE ':DPATH:DNEW.T:"/":ID:" TEMPQNAME4 OVERWRITING"
CMD2 = 'SETFILE ':SPATH:DORIG.T:"/":ID:" TEMPQNAME3 OVERWRITING"
PRINT CMD1
UDTEXECUTE CMD1 CAPTURING ERRMSG1
ERR.PRINTED=0
IF ERRMSG1[1,7] = "No such" THEN
  ERR.PRINTED=1
   PRINTER ON
   PRINT SPACE(3):"DICT ":ID:"  Unable to Open D":DPATH:DNEW.T:"/":ID
   PRINTER OFF
END
READ V1 FROM MD,"TEMPQNAME3" THEN
  WRITE V1 ON MD,"TEMPQNAME3" 
END
PRINT CMD2
UDTEXECUTE CMD2 CAPTURING ERRMSG2
IF ERRMSG2[1,7] = "No such" THEN
   PRINTER ON
   ERR.PRINTED=1
   PRINT SPACE(3):"DICT ":ID:" Unable to Open S":SPATH:DORIG.T:"/":ID
   PRINTER OFF
END
IF ERR.PRINTED THEN RETURN
*
OPEN "DICT","TEMPQNAME3" TO SDICTFILE ELSE
  PRINT "UNABLE TO OPEN DICT OF SRC ":FNAME1
  RETURN
END
OPEN "DICT","TEMPQNAME4" TO DDICTFILE ELSE
  PRINT "UNABLE TO OPEN DICT OF DEST ":FNAME1
  RETURN
END
*
PERFORM "SSELECT DICT TEMPQNAME3"
SELECT SDICTFILE TO LIST2
DDONE = 0
DITEMCTR=0
DITEMMIS=0
PRINTER ON
PRINT.HEAD=0
HEADTEXT=SPACE(8):"Processing ":ID
LOOP
  READNEXT DID FROM LIST2 ELSE DDONE=1
UNTIL DDONE DO
  DITEMCTR=DITEMCTR+1
  READ DREC1 FROM SDICTFILE,DID THEN
    READ DREC2 FROM DDICTFILE,DID THEN
      IF DREC1 # DREC2 THEN
        * THE DICT ITEMS ARE DIFFERENT PRINT AN ERROR
        IF NOT(PRINT.HEAD) THEN PRINT HEADTEXT
        PRINT SPACE(8):"    ":DID:STR("-",34-LEN(DID)):"         "
        DITEMMIS=DITEMMIS+1
        PRINT.HEAD=1
      END ELSE
        * THEY MATCH
      END
    END ELSE
      * THE ITEM IS MISSING FROM THE DESTINATION FILE
      IF NOT(UPDATE.REMOTE) THEN
         IF NOT(PRINT.HEAD) THEN PRINT HEADTEXT
         PRINT.HEAD=1
         PRINT SPACE(8):"    ":DID:STR("-",34-LEN(DID)):" MISSING "
      END
      DITEMMIS=DITEMMIS+1
      IF UPDATE.REMOTE THEN WRITE DREC1 ON DDICTFILE,DID
    END
  END ELSE
    * THIS IS A MISSING ITEM FROM THE FIEL SELECTED
    PRINT " MISSING ITEM FROM SOURCE DICT ":ID:" ":DID
  END
REPEAT
IF DITEMMIS <= 0 THEN
*   PRINT SPACE(8):"Processed ":ID
END ELSE
  PRINT SPACE(8):"Processed ":ID:" Items ":DITEMCTR:" Missmatch ":DITEMMIS
END
PRINTER OFF
RETURN
*

