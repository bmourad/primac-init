      SUBROUTINE RCV.RF.LOC.TRAN (ACTION, CONO, EMPID, MAT RCV.FILE.VARS)
*********************************************************************
*
* PROGRAM  - RCV.RF.LOC.TRAN
*
* AUTHOR   - JULIANNE MATHESON, NASTech, Inc.
*
* DATE     - 05/11/00
*
* DESCRIPTION
*
* This program is used to process location transfers
* from the hand-held R-F units used in the warehouse.
* All rolls in a location will be transferred to another location.
*T26132 cm 09/10/2001 * Change screen size from 21x16 to 20x15.
*T26496 lhelms 04/10/2002 * UPGRADE REV12; COM COMMONS; RSKI.INFO
*                           INV_SERIAL
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>RCV.CPYLIB>RCV.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SCREEN.COM
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>RS.XFER
*COPY>ICS.CPYLIB>TRANSFER
*COPY>ICS.CPYLIB>DAILY_TRANSFER
*COPY>ICS.CPYLIB>INV.CNV
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- OPEN ALL FILES
*
      OPEN "","PO" TO PO ELSE
         ERRMSG = "NO PO FILE"
         GOTO 93000
      END
      OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
         ERRMSG = "NO INV_SERIAL"
         GOTO 93000
      END
      OPEN "","CATEGORY" TO CATEGORY ELSE
         ERRMSG = "NO CATEGORY FILE"
         GOTO 93000
      END
      OPEN "","INVENTORY" TO INVENTORY ELSE
         ERRMSG = "NO INVENTORY FILE"
         GOTO 93000
      END
      OPEN "","INV.WHSE" TO INV.WHSE ELSE
         ERRMSG = "NO INV.WHSE FILE"
         GOTO 93000
      END
      OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
         ERRMSG = "NO INV.WHSE.LOC FILE"
         GOTO 93000
      END
      OPEN "","INV.HIST" TO INV.HIST ELSE
         ERRMSG = "NO INV.HIST FILE"
         GOTO 93000
      END
      OPEN "","INV.TRAN.HIST" TO INV.TRAN.HIST ELSE
         ERRMSG = "NO INV.TRAN.HIST"
         GOTO 93000
      END
      OPEN "","RS.XFER" TO RS.XFER ELSE
         ERRMSG = "NO RS.XFER FILE"
         GOTO 93000
      END
      OPEN "","TRANSFER" TO TRANSFER ELSE
         ERRMSG = "NO TRANSFER FILE"
         GOTO 93000
      END
      OPEN "","DAILY_TRANSFER" TO DAILY_TRANSFER ELSE
         ERRMSG = "NO DAILY_TRANSFER FILE"
         GOTO 93000
      END
      OPEN "","JOB" TO JOB ELSE
         ERRMSG = "NO JOB FILE"
         GOTO 93000
      END
      OPEN "","JOB.STATS" TO JOB.STATS ELSE
         ERRMSG = "NO JOB.STATS FILE"
         GOTO 93000
      END
      OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
         ERRMSG = 'CANNOT LOC.TEMPATE INV.WHSE.LOC.TEMP FILE'
         GOTO 93000
      END
      OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
         ERRMSG = 'CANNOT LOCATE INV_SERIAL_TEMP FILE'
         GOTO 93000
      END
      OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
         ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST FILE'
         GOTO 93000
      END
      OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE
         ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST_TEMP FILE'
         GOTO 93000
      END
      OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
         ERRMSG = 'CANNOT LOCATE INV_AUDIT_TAG FILE'
         GOTO 93000
      END
      OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
         ERRMSG = 'CANNOT LOCATE INV_RECEIPTS FILE'
         GOTO 93000
      END
      OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
         ERRMSG = 'CANNOT LOCATE INV_RECEIPTS_TEMP FILE'
         GOTO 93000
      END
      OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
         ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE FILE'
         GOTO 93000
      END
      OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE
         ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE_TEMP FILE'
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      REAL.TIME = 1
      TEST.MODE = 0
      IF LEN(ACTION) > 1 THEN
         IF ACTION[LEN(ACTION),1] = "T" THEN
            TEST.MODE = 1
         END
      END
      MATREAD COMP.REC FROM COMPANY,CONO ELSE
         MAT COMP.REC = ""
      END
      SPX = ""
      FLIST = "" ; * T26132
      EMPNAME = "???????????????"
      MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
         EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
      END
      IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
      EMPNAME = SPX:EMPNAME
*
      TODAY = DATE()
*     OTODAY = "01/31/2002"
      OTODAY = ICONV(TODAY,"D4-")
*---- INITIALIZE SCREEN.COM
*
      MAT S$EDIT = ""
      S$TYP = 0
      CALL RF.INPUT
      GOSUB 89990
      S$MASK = "#"
      ERY = 15
*
*---- DISPLAY SCREEN
*
*T26132 v
*     DIM SCRN(16)
*     MAT SCRN = ""
*     XXXXXXXX = " 123456789012345678901 "
*     XXXXXXXX = "+---------------------+"
*     SCRN(01) = "|  LOCATION TRANSFER  |"
*     SCRN(02) = "|---------------------|"
*     SCRN(03) = "|@@@@@@@@@@@@@@@@@@@@@|"
*     SCRN(04) = "|---------------------|"
*     SCRN(05) = "|                     |"
*     SCRN(06) = "|Warehouse : ####     |"
*     SCRN(07) = "|                     |"
*     SCRN(08) = "|From Loc  : ####     |"
*     SCRN(09) = "|                     |"
*     SCRN(10) = "|To Loc    : ####     |"
*     SCRN(11) = "|                     |"
*     SCRN(12) = "|---------------------|"
*     SCRN(13) = "|                     |"
*     SCRN(14) = "|                     |"
*     SCRN(15) = "|Correct (Y/N)? #     |"
*     SCRN(16) = "|                     |"
*     XXXXXXXX = "+---------------------+"
*     XXXXXXXX = " 123456789012345678901 "
      DIM SCRN(15)
      MAT SCRN = ""
      XXXXXXXX = " 12345678901234567890 "
      XXXXXXXX = "+--------------------+"
      SCRN(01) = "| LOCATION TRANSFER  |"
      SCRN(02) = "|--------------------|"
      SCRN(03) = "|@@@@@@@@@@@@@@@@@@@@|"
      SCRN(04) = "|--------------------|"
      SCRN(05) = "|                    |"
      SCRN(06) = "|Warehouse : ####    |"
      SCRN(07) = "|                    |"
      SCRN(08) = "|From Loc  : ####    |"
      SCRN(09) = "|                    |"
      SCRN(10) = "|To Loc    : ####    |"
      SCRN(11) = "|                    |"
      SCRN(12) = "|--------------------|"
      SCRN(13) = "|                    |"
      SCRN(14) = "|Correct (Y/N)? #    |"
      SCRN(15) = "|                    |"
      XXXXXXXX = "+--------------------+"
      XXXXXXXX = " 12345678901234567890 "
*T26132 ^
*
      SLINE = @(-1)
*T26132 v
*     FOR SL = 1 TO 16
*        SDATA = SCRN(SL)[2,21]
      FOR SL = 1 TO 15
         SDATA = SCRN(SL)[2,20]
*T26132 ^
         CONVERT "#" TO " " IN SDATA
         CONVERT "@" TO " " IN SDATA
         SDATA = TRIMB(SDATA)
         LDATA = LEN(SDATA)
         LDONE = 0
         FOR N = 1 TO LDATA UNTIL LDONE
            IF SDATA[N,1] # " " THEN
               SLINE = SLINE:@((N-1),(SL-1)):SDATA[N,99]
               LDONE = 1
            END
         NEXT N
      NEXT SL
      PRINT SLINE:
      GOSUB 89990
*
*---- MAIN PROCESSING
*
1 *
      RELEASE
      PRINT @(00,02):EMPNAME:
      PRINT @(12,05):@(-4):
      PRINT @(12,07):@(-4):
      PRINT @(12,09):@(-4):
      GOSUB 89990
*
1030 *
      WHSE = ""; FROM.LOC = ""; TO.LOC = ""
      ROLL.IDS = ""
      S$TYP=1; S$X=12; S$Y=5; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15 
      S$O.R="O"; S$DEFAULT=""
      CALL RF.INPUT
      GOSUB 89990
      IF S$VALUE = "END" THEN GOTO 99999
      IF S$VALUE = "" THEN GOTO 99999
      IF S$VALUE = "INTR" THEN
         ERRMSG = "IN-TRANSIT WAREHOUSE"; GOSUB 91000; GOTO 1030
      END
      MATREAD WHSE.REC FROM WAREHOUSE, CONO:S$VALUE ELSE
         ERRMSG = "INVALID WAREHOUSE"; GOSUB 91000; GOTO 1030
      END
      WHSE = S$VALUE
      FROM.WHSE.DIV = WHS.DIV
      PRINT @(12,07):@(-4):
      GOSUB 89990
*
*
1040*
      S$TYP=1; S$X=12; S$Y=7; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15
      S$O.R="R"; S$DEFAULT=""
      CALL RF.INPUT
      GOSUB 89990
      IF S$VALUE = "END" THEN GOTO 1030
      FROM.LOC = S$VALUE
1050 *
      S$TYP=1; S$X=12; S$Y=9; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15
      S$O.R="R"; S$DEFAULT=""
      CALL RF.INPUT
      GOSUB 89990
      IF S$VALUE = "END" THEN GOTO 1030
      TO.LOC = S$VALUE
1070 *
*T26132 v
*     S$TYP=8; S$X=16; S$Y=14; S$EX=0; S$EY=15; S$ERY=15
      S$TYP=8; S$X=16; S$Y=13; S$EX=0; S$EY=15; S$ERY=15
*T26132 ^
      CALL RF.INPUT
      GOSUB 89990
      IF S$VALUE = "END" THEN GOTO 1080
      IF S$VALUE = "Y" THEN
         CMD = 'SELECT INV_SERIAL WITH CONO = "':CONO:'"'
         CMD = CMD:' AND WITH ISTK_WHSE = "':WHSE:'"'
         CMD = CMD:' AND WITH ISTK_LOC = "':FROM.LOC:'"'
         CMD = CMD:' AND WITH TRACK_LVL = "S"'
         CMD = CMD:' AND WITH ISTK_POST_DATE # ""'
         PERFORM CMD RTNLIST FLIST CAPTURING SELMSG
         NUM.REC.STR = SELMSG<2>
         NUM.RECORDS = FIELD(NUM.REC.STR," ",1)
         NUM.RECORDS = TRIM(NUM.RECORDS)
         IF (NUM.RECORDS + 0) < 1 THEN
            ERRMSG = "EMPTY LOCATION"; GOSUB 91000
         END ELSE
            DATA = 1
            LOOP
               READNEXT ID FROM FLIST ELSE DATA = 0
            WHILE DATA DO
               IF ID[4,1] = "R" THEN GOTO 999
*
*
               MATREAD ISTK.REC FROM INV_SERIAL, ID ELSE
                  MAT ISTK.REC = ""
               END
*
               DEF.PERIOD = "";ERR.FLG = "";ERRMSG = ""
               CALL CHECK.PERIOD.DATE(CONO,TODAY,DEF.PERIOD,FROM.WHSE.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL)
               BEGIN CASE
                  CASE ERR.FLG = 1
                     ERRMSG = 'DATA PROBLEM'
                     GOSUB 91000
                  CASE ERR.FLG = 2
                     ERRMSG = 'FATAL FILE ERROR'
                     GOSUB 91000; GOTO 99999
                  CASE ISTK.POST.DATE = ""
                     ERRMSG = ID[4,999]:"not posted"
                     GOSUB 91000
                  CASE "X":ISTK.WHSE # "X":WHSE
                  CASE "X":ISTK.LOC # "X":FROM.LOC
                  CASE 1
                     IF CO.INTR.WHSE # "" THEN
                        IF CO.INTR.WHSE = ISTK.WHSE THEN
                           NULL ;* No Inter divisional
                        END ELSE
                           ROLL.ID = TRIM(ID[4,99])
                           GOSUB 5000
                           IF ERRMSG # "" THEN
                              ERRMSG = ROLL.ID:ERRMSG; GOSUB 91000
                           END
*                       LOCATE ID[4,99] IN ROLL.IDS<1>,1 SETTING RFND ELSE
*                          ROLL.IDS<1,RFND> = ID[4,99]
*                       END
                        END
                     END
               END CASE
*
999:*
*
            REPEAT
         END
*        RCNT = DCOUNT(ROLL.IDS,VM)
*        IF RCNT = 0 THEN
*           ERRMSG = "EMPTY LOCATION"; GOSUB 91000
*        END ELSE
*           FOR RPTR = 1 TO RCNT
*              GOSUB 5000
*              IF ERRMSG # "" THEN
*                 ERRMSG = ROLL.IDS<1,RPTR>:ERRMSG; GOSUB 91000
*              END
*           NEXT RPTR
*        END
1080 *
         PRINT @(12,05):@(-4):
         PRINT @(12,07):@(-4):
         PRINT @(12,11):@(-4):
         GOSUB 89990
      END
1090  GOTO 1
      RETURN
*
*---- PROCESS TRANSFER
*
5000 *
      ERRMSG = ""
      MAT RS.XFER.REC = ""
      RS.XFER.TO.WHSE = WHSE
      RS.XFER.TO.LOC = TO.LOC
*     RS.XFER.ID = ROLL.IDS<1,RPTR>
      RS.XFER.ID = ROLL.ID
      RS.XFER.ENTRY.DATE = DATE()
*     ROLL.ID = ROLL.IDS<1,RPTR>
      IF ISTK.JOB = "" THEN
         MAT JOB.REC = ""
      END ELSE
         MATREAD JOB.REC FROM JOB, CONO:ISTK.JOB ELSE
            ERRMSG = "ERROR 5001"      ;* "Job does not exist on Job Stats file"
            RETURN
         END
         IF JOB.STATUS = "9" THEN
            ERRMSG = "ERROR 5002"      ;* "Job has been cancelled"
            RETURN
         END
         MATREAD JSTAT.REC FROM JOB.STATS, CONO:ISTK.JOB ELSE
            ERRMSG = "ERROR 5003"      ;* "Job Stats does not exist"
            RETURN
         END
         IF JSTAT.SHP.PROD = "" THEN
            ERRMSG = "ERROR 5004"      ;* "No prod on Job Stats file"
            RETURN
         END
         LOCATE ROLL.ID IN JSTAT.SHP.R.S.ID<1>,1 SETTING FNGD ELSE
            ERRMSG = "ERROR 5005"      ;* "Serial not on JSTATS file"
            RETURN
         END
      END
      MATREAD IWH.REC FROM INV.WHSE, CONO:ISTK.PROD:"!":ISTK.WHSE ELSE
         ERRMSG = "ERROR 5102"         ;* "From Whse does not exist"
         RETURN
      END
      MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:ISTK.PROD:"!":ISTK.WHSE:"!":ISTK.LOC ELSE
         ERRMSG = "ERROR 5103"         ;* "From Loc does not exist"
         RETURN
      END
      LOCATE ROLL.ID IN IWLO.SERIAL<1>,1 SETTING RSPTR ELSE
         ERRMSG = "ERROR 5104"         ;* "Serial not in location"
         RETURN
      END
      MATREAD IWH.REC FROM INV.WHSE, CONO:ISTK.PROD:"!":ISTK.WHSE ELSE
         ERRMSG = "ERROR 5106"         ;* "To Whse does not exist"
         RETURN
      END
*
*---- LOAD TRANSFER RECORD
      MAT D.TRAN.REC = ""
      D.TRAN.CODE = "N"
      D.TRAN.PROD.NO         = ISTK.PROD
      D.TRAN.SERIAL          = ROLL.ID
      D.TRAN.RECP            = ISTK.RECP
      D.TRAN.TOT.WHT         = ISTK.CUR.QTY
      D.TRAN.FROM.WHSE       = ISTK.WHSE        
      D.TRAN.FROM.LOC        = ISTK.LOC         
      D.TRAN.TO.WHSE         = ISTK.WHSE      
      D.TRAN.TO.LOC          = TO.LOC        
      D.TRAN.QTY             = ISTK.CUR.QTY        
      D.TRAN.TOT.QTY         = ISTK.CUR.QTY        
      D.TRAN.REASON.DESC     = "RF GUN TRANSFER"
      D.TRAN.DATE.ENTER      = TODAY
      D.TRAN.PRT.DATE        = TODAY
      D.TRAN.PERIOD          = DEF.PERIOD
      D.TRAN.JOB             = ISTK.JOB
      D.TRAN.EMP             = EMPID
      MAT TRAN.REC = ""
      NEW.ERRMSG = ""
*     PROCESS.FLAG = CO.ICS.REAL.TRAN
      PROCESS.FLAG = "Y"
      CALL TRAN.UPDATE(CONO,D.TRAN.CODE,MAT TRAN.REC,PROCESS.FLAG,CO.ICS.LOC.TRAN,NEW.ERRMSG)
      RETURN
*
*---- DRAW BORDER
*
89990 *
      IF TEST.MODE THEN
*T26132 v
*        FOR SL = 1 TO 16
*           PRINT @(21,(SL-1)):"|":
*        NEXT SL
*        PRINT @(0,16):"---------------------+":
         FOR SL = 1 TO 15
            PRINT @(20,(SL-1)):"|":
         NEXT SL
         PRINT @(0,15):"--------------------+":
*T26132 ^
      END
      RETURN
*
*---- ERROR ROUTINE
*
91000 *
      PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG[1,19]:
      INPUT REPLY,1:
      PRINT @(0,ERY):@(-4):
      ERY = 15
      RETURN
93000 *
      GOSUB 91000
*
*---- END OF PROGRAM
*
99999 *
      RETURN
   END
