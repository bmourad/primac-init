      SUBROUTINE RF.INPUT
*********************************************************************
*
* PROGRAM - RF.INPUT
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 01/01/96
*
* DESCRIPTION
*
*   THIS ROUTINE PROVIDES A BASIC INTERFACE BETWEEN
*   ON-LINE PROCESSING PROGRAM AND A R-F TERMINAL OPERATOR.
*   THE FOLLOWING TYPES OF EDITTING MAY BE REQUESTED.
*
*       1 - ALPHANUMERIC
*       2 - ALPHABETIC
*       3 - NUMERIC
*       4 - DECIMAL
*       5 - ALPHANUMERIC WITH NO SPACES
*       6 - DATE
*       7 - PATTERN MATCH
*       8 - (Y)ES OR (N)O
*       9 - RESERVED FOR MULTI-LINE REFERENCE NUMBER FIELDS
*
*   FIELD LENGTH CHECKING, RANGE CHECKING, LEFT OR
*   RIGHT JUSTIFICATION, AND EXTERNAL TO INTERNAL DATA
*   CONVERSION IS ALSO SUPPORTED.
*
*T26496 lhelms 04/09/2002 * REV12; UPGRADE COM COMMONS
*********************************************************************
*
*---- DIMENSION
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>RCV.CPYLIB>RCV.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      PROMPT ""
      IF S$TYP = 0 OR S$TYP > 9 THEN
         S$MASK   = "#"
         S$STOP   = "N"
         ERRMSG = ""
         MAT TCC.REC = "STD"
         GOTO 17090
      END
*
*---- MAIN PROCESSING
*
10000 IF S$MASK = "" THEN S$MASK = "#"
      IF S$LCNT > 1 THEN
         S$Y = S$Y + S$LSPC * MOD(S$VAL-1,S$LCNT)
      END
      IF S$JUSTIFY = "" THEN
         IF S$TYP = 3 OR S$TYP = 4 THEN
            S$JUSTIFY = "R"
         END ELSE
            S$JUSTIFY = "L"
         END
      END
      SAVE.O.R = S$O.R
      SAVE.DEFAULT = S$DEFAULT
*     IF S$DATA(S$FLD)<S$SCR,S$VAL> # "" THEN
*        S$O.R = "O"
*        S$DEFAULT = S$DATA(S$FLD)<S$SCR,S$VAL>
*        S$PVALUE = S$DEFAULT
*     END
      IF S$DEFAULT # "" THEN
         BEGIN CASE
         CASE S$TYP = 4
            CONV = "MD":S$SCALER
            S$DEFAULT = OCONV(S$DEFAULT,CONV)
            IF S$PVALUE # "" THEN S$PVALUE = S$DEFAULT
            IF SAVE.DEFAULT # "" THEN
               SAVE.DEFAULT = OCONV(SAVE.DEFAULT,CONV)
            END
         CASE S$TYP = 6
            BEGIN CASE
            CASE NUM(S$DEFAULT)
               S$DEFAULT = OCONV(S$DEFAULT,"D2/")
            CASE S$DEFAULT = "DATE"
               S$DEFAULT = OCONV(DATE(),"D2/")
            CASE S$DEFAULT[1,5] = "DATE+"
               INCR = S$DEFAULT[6,3]
               S$DEFAULT = OCONV(DATE()+INCR,"D2/")
            CASE S$DEFAULT[1,5] = "DATE-"
               DECR = S$DEFAULT[6,3]
               S$DEFAULT = OCONV(DATE()-DECR,"D2/")
            END CASE
            IF S$PVALUE # "" THEN S$PVALUE = S$DEFAULT
            IF SAVE.DEFAULT # "" AND NUM(SAVE.DEFAULT) THEN
               SAVE.DEFAULT = OCONV(SAVE.DEFAULT,"D2/")
            END
         END CASE
      END
      VCNT = DCOUNT(S$VALDAT,",")
      PCNT = DCOUNT(S$PATRN,",")
      IF S$PMSG # "" THEN PX = S$X; PY = S$Y; S$X = S$X + LEN(S$PMSG) + 1
      IF S$Y # 15 AND TRIM(S$DEFAULT) # "" AND S$O.R = "O" THEN P.DEFAULT = 1 ELSE P.DEFAULT = 0
      BEGIN CASE
      CASE S$TYP = 6 AND S$MAXL = 8
         FILLER = S$MASK:S$MASK:"/":S$MASK:S$MASK:"/":S$MASK:S$MASK
      CASE S$TYP = 4
         FILLER = STR(S$MASK,S$MAXL-S$SCALER-1):".":STR(S$MASK,S$SCALER)
      CASE 1
         FILLER = STR(S$MASK,S$MAXL)
      END CASE
11000 IF S$PMSG # "" THEN PRINT @(PX,PY):CL:S$PMSG:SPACE(1):
      BEGIN CASE
      CASE P.DEFAULT
         BEGIN CASE
         CASE LEN(S$DEFAULT) <= 12
            PRINT @(0,15) :CL:"DEFAULT:":S$DEFAULT:
         CASE LEN(S$DEFAULT) <= 16
            PRINT @(0,15) :CL:"DEF:":S$DEFAULT:
         CASE LEN(S$DEFAULT) <= 20
            PRINT @(0,15) :CL:S$DEFAULT:
         CASE 1
            PRINT @(0,15) :CL:S$DEFAULT[1,17]:"...":
         END CASE
         PRINT @(S$X,S$Y) : FILLER : @(S$X,S$Y) :
         IF S$AUTO.RTN = "" THEN
            INPUT S$DVALUE,S$MAXL _:
         END ELSE
            INPUT S$DVALUE,S$MAXL :
         END
         PRINT @(0,15):CL:
      CASE S$BLANK = ""
         PRINT @(S$X,S$Y) : FILLER : @(S$X,S$Y) :
         IF S$AUTO.RTN = "" THEN
            INPUT S$DVALUE,S$MAXL _:
         END ELSE
            INPUT S$DVALUE,S$MAXL :
         END
      CASE 1
         PRINT @(S$X,S$Y) : FILLER : @(S$X,S$Y) :
         ECHO OFF
         IF S$AUTO.RTN = "" THEN
            INPUT S$DVALUE,S$MAXL _:
         END ELSE
            INPUT S$DVALUE,S$MAXL :
         END
         ECHO ON
      END CASE
      IF S$STOP = "Y" AND S$DVALUE = "<" THEN STOP
      IF S$DVALUE # "" AND S$DVALUE = SPACE(LEN(S$DVALUE)) THEN
         DELETE.FLAG = 1
         S$DVALUE = ""
      END ELSE
         DELETE.FLAG = 0
      END
      INLEN = LEN(S$DVALUE)
      T.DVALUE = TRIM(S$DVALUE)
*
*---- CHECK INPUT LENGTH
*
      BEGIN CASE
      CASE DELETE.FLAG AND SAVE.O.R = "O"
         S$MINL = 0
         S$DVALUE = SAVE.DEFAULT
         INLEN = LEN(S$DVALUE)
         IF S$DVALUE = "" THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      CASE INLEN < 1 AND S$O.R = "O"
         S$MINL = 0
         S$DVALUE = S$DEFAULT
         INLEN = LEN(S$DVALUE)
         IF S$DVALUE = "" THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      CASE INLEN < 1
         ERRMSG = "** REQUIRED **"
         GOSUB 18000
         GOTO 11000
*
*---- CHECK END REQUEST
*
      CASE T.DVALUE = CHAR(27) OR T.DVALUE = "END" OR T.DVALUE = "^"
         S$DVALUE = S$PVALUE
         S$VALUE  = "END"
         GOTO 17000
*
*----  CHECK HELP REQUEST
*
      CASE T.DVALUE = "?"
         GOSUB 30000
         GOTO 11000
      END CASE
*
*--- CHECK (OR) VALID INPUT
*
      IF S$ORVALDAT AND VCNT THEN
         FOR V = 1 TO VCNT
            IF S$DVALUE = FIELD(S$VALDAT,",",V) THEN VCNT = 0
         NEXT V
         IF NOT(VCNT) THEN
            S$VALUE = S$DVALUE
            GOTO 17000
         END
      END
*
*---- RANGE CHECK INPUT LENGTH
*
      IF INLEN < S$MINL THEN
         ERRMSG = "** MIN LEN = " : S$MINL : " **"
         GOSUB 18000
         GOTO 11000
      END
*
*---  CHECK ILLEGAL CHARACTER INPUT
*
      IF S$INVALCHR # "" THEN
         ICNT = DCOUNT(S$INVALCHR,",")
         FOR I = 1 TO ICNT
            IF INDEX(S$DVALUE,FIELD(S$INVALCHR,",",I),1) THEN
               ERRMSG = FIELD(S$INVALCHR,",",I)
               ICNT = 0
            END
         NEXT I
         IF NOT(ICNT) THEN
            ERRMSG = "** INVALID (":ERRMSG:") **"
            GOSUB 18000
            GOTO 11000
         END
      END
      T.LEN = LEN(T.DVALUE)
      FOR N = 1 TO T.LEN
         DEC.EQUIV = SEQ(T.DVALUE[N,1])
         IF DEC.EQUIV < 32 OR DEC.EQUIV > 126 THEN
            ERRMSG = "** INVALID **"
            GOSUB 18000
            GOTO 11000
         END
      NEXT N
*
*---- THE FOLLOWING ALLOWS DATE OR SPECIFIED INPUT
*
      IF S$TYP = 6 AND VCNT > 0 AND S$ORVALDAT = "" THEN
         FND = 0
         FOR V = 1 TO VCNT UNTIL FND > 0
            IF S$DVALUE = FIELD(S$VALDAT,",",V) THEN FND = V
         NEXT V
         IF FND > 0 THEN
            S$VALUE = S$DVALUE
            GOTO 17000
*        END ELSE
*           S$VALDAT = ""
         END
      END
      ERRMSG = ""
*
*---- ZERO OR BLANK FILL IF REQUESTED
*
      IF S$FILL # "" AND INLEN < S$MAXL THEN
         IF S$FILL = "B" THEN S$FILL = " "
         IF S$JUSTIFY = "R" THEN
            IF NUM(S$DVALUE) THEN
               S$DVALUE = STR(S$FILL,S$MAXL-INLEN):S$DVALUE
            END
         END ELSE
            S$DVALUE = S$DVALUE:STR(S$FILL,S$MAXL-INLEN)
         END
      END
*
*---- PROCESS EDIT REQUEST
*
      ON S$TYP GOSUB 17100,17200,17300,17400,17500,17600,17700,17800,17900
      IF ERRMSG # "" THEN
         GOSUB 18000
         GOTO 11000
      END
*
*---- RANGE CHECK IF REQUESTED
*
      IF S$MINV # "" OR S$MAXV # "" THEN
         IF S$VALUE < S$MINV OR S$VALUE > S$MAXV THEN
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 18000
            GOTO 11000
         END
      END
*
*---- CHECK VALID INPUT
*
      IF S$TYP = 6 THEN GOTO 17000
      IF VCNT > 0 AND S$VALDAT.CODE = "" AND S$ORVALDAT = "" THEN
         FND = 0
         FOR V = 1 TO VCNT UNTIL FND > 0
            IF S$DVALUE = FIELD(S$VALDAT,",",V) THEN FND = V
         NEXT V
         IF FND = 0 THEN
            ERRMSG = "** INVALID **"
            GOSUB 18000
            GOTO 11000
         END
      END
17000 IF S$BLANK = "" THEN
         FORM = S$JUSTIFY:"#":S$MAXL
         S$PVALUE = S$DVALUE FORM
         PRINT @(S$X,S$Y) : S$PVALUE :
      END
      IF S$VALUE = "END" THEN GOTO 17090
      IF S$PMSG = "" THEN
*        S$DATA(S$FLD)<S$SCR,S$VAL> = S$VALUE
      END
*
*---- INITIALIZE ALL PARAMETERS
*
17090 IF S$PMSG # "" THEN
         PRINT @(PX,PY):CL:
      END
      S$VAL         = 1
      S$TYP         = 1
      S$PVALUE      = ""
      S$MINL        = 1
      S$MAXL        = 1
      S$MINV        = ""
      S$MAXV        = ""
      S$O.R         = "R"
      S$DEFAULT     = ""
      S$JUSTIFY     = ""
      S$SCALER      = 2
      S$PATRN       = ""
      S$EMODE       = 1
      S$EX          = 0
      S$EY          = 15
      S$PMSG        = ""
      S$BLANK       = ""
      S$BLINK       = ""
      S$REVERSE     = ""
      S$HMSG        = ""
      S$VALDAT      = ""
      S$AUTO.RTN    = ""
      S$FILL        = ""
      S$LCNT        = 1
      S$LSPC        = 1
      S$VALDAT.FILE = ""
      S$VALDAT.CODE = ""
      S$VALDAT.ITEM = ""
      S$VALDATION   = ""
      S$PREFIX      = ""
      S$ORVALDAT    = ""
      S$INVALCHR    = ""
      RETURN
*
*********************  S U B R O U T I N E S  *************************
*
*---- EDIT ALPHANUMERIC INPUT
*
17100 S$VALUE = S$DVALUE
      RETURN
*
*---- EDIT ALPHABETIC INPUT
*
17200 *ALPHA(DVALUE) WORKS ONLY WITH NEW COMPILER
      FOR I = 1 TO INLEN WHILE ERRMSG = ""
         CHR = S$DVALUE[I,1]
         IF CHR < "A" OR CHR > "Z" THEN
            ERRMSG = "** ALPHA REQUIRED **"
         END
      NEXT I
      IF ERRMSG = "" THEN
         S$VALUE = S$DVALUE
      END
17299 RETURN
*
*---- EDIT NUMERIC INPUT
*
17300 IF S$DVALUE MATCHES "0N" THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** NUMERIC REQ'D **"
      END
17399 RETURN
*
*---- EDIT SCALED DECIMAL INPUT
*
17400 IF NOT(NUM(S$DVALUE)) THEN GOTO 17490
      IF LEN(FIELD(S$DVALUE,".",1)) > (S$MAXL - S$SCALER - 1) THEN GOTO 17490
      IF LEN(FIELD(S$DVALUE,".",2)) > S$SCALER THEN GOTO 17490
      CNV = "MD" : S$SCALER
      S$VALUE = ICONV(S$DVALUE,CNV)
      S$DVALUE= OCONV(S$VALUE,CNV)
      IF S$MINV = "" AND S$MAXV = "" THEN GOTO 17499
      IF INDEX(S$MINV,".",1) > 0 THEN S$MINV = ICONV(S$MINV,CNV)
      IF INDEX(S$MAXV,".",1) > 0 THEN S$MAXV = ICONV(S$MAXV,CNV)
      GOTO 17499
17490 ERRMSG = "** DECIMAL REQ'D **"
17499 RETURN
*
*---- EDIT ALPHANUMERIC WITH NO SPACES INPUT
*
17500 IF INDEX(S$DVALUE," ",1) THEN
         ERRMSG = "** INVALID SPACE INPUT **"
      END ELSE
         S$VALUE = S$DVALUE
      END
17599 RETURN
*
*---- EDIT DATE INPUT
*
17600 *
      IF S$DVALUE MATCHES "0N" THEN
         ERRMSG = "** INVALID DATE **"
         GOTO 17699
      END
      IF S$DVALUE = "DATE" THEN S$DVALUE = OCONV(DATE(),"D2")
      S$VALUE = ICONV(S$DVALUE,"D")
      IF S$VALUE = S$DVALUE OR S$VALUE = "" THEN
         ERRMSG = "** INVALID DATE **"
      END ELSE
         S$DVALUE = OCONV(S$VALUE,"D2/")
         IF S$MINV = "" AND S$MAXV = "" THEN GOTO 17699
         BEGIN CASE
         CASE NUM(S$MINV)
         CASE S$MINV = "DATE"
            S$MINV = DATE()
         CASE S$MINV[1,5] = "DATE+"
            S$MINV = DATE() + S$MINV[6,3]
         CASE S$MINV[1,5] = "DATE-"
            S$MINV = DATE() - S$MINV[6,3]
         END CASE
         BEGIN CASE
         CASE NUM(S$MAXV)
         CASE S$MAXV = "DATE"
            S$MAXV = DATE()
         CASE S$MAXV[1,5] = "DATE+"
            S$MAXV = DATE() + S$MAXV[6,3]
         CASE S$MAXV[1,5] = "DATE-"
            S$MAXV = DATE() - S$MAXV[6,3]
         END CASE
      END
17699 RETURN
*
*---- EDIT PATTERN INPUT
*
17700 FND = 0
      FOR P = 1 TO PCNT UNTIL FND > 0
         IF S$DVALUE MATCHES FIELD(S$PATRN,",",P) THEN FND = P
      NEXT P
      IF FND > 0 THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** INVALID FORMAT **"
      END
17799 RETURN
*
*---- EDIT YES OR NO
*
17800 IF S$DVALUE = "Y" OR S$DVALUE = "N" THEN
         S$VALUE = S$DVALUE
      END ELSE
         ERRMSG = "** ENTER Y OR N **"
      END
17899 RETURN
*
*---- EDIT (OPEN)
*
17900 S$VALUE = S$DVALUE
17999 RETURN
*
*---- ERROR ROUTINE
*
18000 BEGIN CASE
      CASE S$EMODE = 1 OR S$EMODE = 4
         ERX = S$EX
         ERY = S$EY
      CASE S$EMODE = 3 OR S$EMODE = 6
         ERX = S$EX
         ERY = S$EY
      CASE 1
         ERX = 0
         ERY = 15
      END CASE
      SP.LEN = 20 - ERX
      PRINT @(ERX,ERY) : SPACE(SP.LEN) :
      PRINT @(ERX,ERY) : BEL : ERRMSG :
      IF S$EMODE < 4 THEN
         INPUT STALL,1 _:
         PRINT @(ERX,ERY) : STR(" ",LEN(ERRMSG)+1) :
      END
      ERRMSG = ""
      RETURN
*
*---- PROCESS HELP REQUEST
*
30000 IF S$HMSG = "" THEN
         S$HMSG = "NO HELP AVAILABLE"
      END
      DONE = 0
      NO.HELPS = DCOUNT(S$HMSG,SVM)
      FOR HMSG.NO = 1 TO NO.HELPS UNTIL DONE
         PRINT @(0,15):CL:S$HMSG<1,1,HMSG.NO>[1,20]:
         INPUT STALL,1 _:
         IF STALL = CHAR(27) OR STALL = "^" THEN DONE = 1
      NEXT HMSG.NO
      PRINT @(0,15):CL:
      RETURN
*
*---- ERROR ROUTINE
*
90000 PRINT @(0,15) : CL : ERRMSG :
      INPUT ERRVAL,1 _:
      PRINT @(0,15) : CL :
      RETURN
      END
