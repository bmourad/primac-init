*********************************************************************
*
* PROGRAM  - RCV.TRACK.INQ
*
* AUTHOR   - Nick Amendola, NASTech, Inc.
*
* DATE     - 10/07/97
*
* DESCRIPTION
*
* This program is used to view Manifest Tracking information.
*
*T25697 edvard 03/20/2001 * MAKE MAN WEIGHT SINGLE-VALUED FIELD.
*T26394 lhelms 01/23/2002 * CNAME UNDEFINED
*                         * CORRECT QTY UNIT MEASURE DISPLAY
*T26496 lhelms 04/11/2002 * UPGRADE REV12 REMOVE RVC.MANIFEST REPLACE
*                           WITH DAILY_STOCK
*T25740 lhelms 05/16/2002 * REV12 UPGRADE TO INCLULDE DAILY_STOCK AND
*                           PO.MAN.XREF
*C40536 cmykleb 08/08/2002 * Received amounts not displaying correctly.
*T28257 lross 09/16/2004 * Several display problems.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>DAILY_STOCK
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>PO.MAN.XREF
*COPY>ICS.CPYLIB>PO.RSKI.XREF
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- DEFINE DATA STORAGE
*
   DIM TEMP.REC(20)
   EQU TEMP.PROD.NO  TO TEMP.REC(1)  ;* (MA)     Product ID
   EQU TEMP.DESC     TO TEMP.REC(2)  ;* (MA)     Product description
   EQU TEMP.BASIS    TO TEMP.REC(3)  ;* (MA)     Basis weight
   EQU TEMP.WIDTH    TO TEMP.REC(4)  ;* (MA)     Roll width
   EQU TEMP.JOB.NO   TO TEMP.REC(5)  ;* (MA,MSV) Job numbers
   EQU TEMP.QTY.ORD  TO TEMP.REC(6)  ;* (MA)     Quantity ordered
   EQU TEMP.QTY.INT  TO TEMP.REC(7)  ;* (MA)     Quantity in transit
   EQU TEMP.QTY.RCV  TO TEMP.REC(8)  ;* (MA)     Quantity received
*
   EQU TEMP.MAN.NO   TO TEMP.REC(11) ;* (MA,MV)  Product ID
   EQU TEMP.MAN.DT   TO TEMP.REC(12) ;* (MA,MV)  Product description
   EQU TEMP.MQTY.INT TO TEMP.REC(13) ;* (MA,MV)  Quantity in transit
   EQU TEMP.MQTY.RCV TO TEMP.REC(14) ;* (MA,MV)  Quantity received
   EQU TEMP.MAN.SOURCE TO TEMP.REC(15) ;* (MA,VM) DAILY_STOCK OR ISTK
   EQU TEMP.PROD.POLN TO TEMP.REC(16) ;* (MA,MV) T28257
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE"; GOSUB 90000; STOP
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE"; GOSUB 90000; STOP
   OPEN "","DAILY_STOCK" TO DAILY_STOCK ELSE ERRMSG = "CANNOT OPEN DAILY_STOCK FILE"; GOSUB 90000; STOP
   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE"; GOSUB 90000; STOP
   OPEN "","VEND" TO VEND ELSE ERRMSG = "CANNOT OPEN VEND FILE"; GOSUB 90000; STOP
   OPEN "","PO" TO PO ELSE ERRMSG = "CANNOT OPEN PO FILE"; GOSUB 90000; STOP
   OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE ERRMSG = "CANNOT OPEN PO.MAN.XREF FILE"; GOSUB 90000; STOP
   OPEN "","PO.RSKI.XREF" TO PO.RSKI.XREF ELSE ERRMSG = "CANNOT OPEN PO.RSKI.XREF FILE"; GOSUB 90000; STOP
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE"; GOSUB 90000; STOP
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE"; GOSUB 90000; STOP
   OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG = "CANNOT OPEN INV.WHSE.LOC FILE"; GOSUB 90000; STOP
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG = "CANNOT OPEN INV_SERIAL FILE"; GOSUB 90000; STOP
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE"; GOSUB 90000; STOP
   OPEN "","RCV.SCREENS" TO M.SCREENS ELSE ERRMSG = "CANNOT OPEN RCV.SCREENS FILE"; GOSUB 90000; STOP
   OPEN "","RCV.SCREENS" TO RCV.SCREENS ELSE ERRMSG = "CANNOT OPEN RCV.SCREENS FILE"; GOSUB 90000; STOP
*     OPEN "","DEV.SCREENS" TO M.SCREENS ELSE ERRMSG = "CANNOT OPEN DEV.SCREENS FILE"; GOSUB 90000; STOP
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;RCV.TRACK.INQ;RCV.SCREENS
   SCREEN FORMAT
   SCREEN COUNT;;11
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   LINE.CNT = 0
   REF.NO = ""
   CURR.REF.NO = ""
   SCREEN COUNT;;31
   LINE.COUNT2 = S$LCNT
   LINE.SPACE2 = S$LSPC
   LINE.CNT2 = 0
   REF.NO2 = ""
   CURR.REF.NO2 = ""
   PO.NO = ""
   GOTO 110
*
*---- MAIN PROCESSING
*
100 *
   SCREEN CLEAR
110 *
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;;1
   S$DATA(2)<S$SCR> = PO.NO
   SCREEN FIELD;;2
   SCREEN INPUT;;2;GOTO 99999
   MATREAD PO.REC FROM PO, CONO:S$VALUE ELSE
      ERRMSG = "Invalid P/O. Try again! "
      GOSUB 90000
      GOTO 100
   END
   PO.NO = S$VALUE
   MATREAD VEND.REC FROM VEND, CONO:PO.VEND.NO ELSE
      MAT VEND.REC = ""
      VEND.DESC = "VENDOR # ":PO.VEND.NO
   END
*MATREAD RSXRF.REC FROM RCV.PO.XREF, CONO:PO.NO ELSE MAT RSXRF.REC = ""
120 *
   REF.NO = 1
   GOSUB 80000
   GOSUB 81000
   CURR.REF.NO = ""
   GOSUB 50000
   REF.NO2 = 1
   CURR.REF.NO2 = ""
   GOSUB 50500
*
*---- GET OPERATOR REPLY
*
500 *
   SCREEN FIELD;;21
   SCREEN INPUT;;21
   OPT = S$VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 100
      CASE OPT = "N"
         REF.NO = REF.NO + 1
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
         GOSUB 81500
         REF.NO2 = 1
         CURR.REF.NO2 = ""
         GOSUB 50500
      CASE OPT = "P"
         REF.NO = REF.NO - 1
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
         GOSUB 81500
         REF.NO2 = 1
         CURR.REF.NO2 = ""
         GOSUB 50500
      CASE OPT = "S" OR OPT = "SF"
         REF.NO2 = CURR.REF.NO2 + LINE.COUNT2
         IF REF.NO2 > LINE.CNT2 THEN REF.NO2 = 1
         GOSUB 50500
      CASE OPT = "SR"
         REF.NO2 = CURR.REF.NO2 - LINE.COUNT2
         IF REF.NO2 < 1 THEN REF.NO2 = 1
         GOSUB 50500
      CASE OPT = "ST"
         REF.NO2 = 1
         GOSUB 50500
      CASE OPT = "SB"
         REF.NO2 = LINE.CNT2
         IF REF.NO2 < 1 THEN REF.NO2 = 1
         GOSUB 50500
   END CASE
   GOTO 500
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
   S$DATA(50)<S$SCR> = ""
   S$DATA(50)<S$SCR,REF.NO> = "*"
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
*     IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
   SCREEN MULTI;;C;11;50;12;13;14;15;16;17;18;19
*SCREEN MULTI;;C;11;50;12;13;14;15;16;18;19
   P1 = INT((START.REF.NO-1)/LINE.COUNT)+1; IF P1=0 THEN P1=1
   P2 = INT((S$CNT-1)/LINE.COUNT)+1; IF P2=0 THEN P2=1
   S$DATA(51)<S$SCR> = P1
   S$DATA(52)<S$SCR> = P2
   SCREEN DISPLAY;;51
   SCREEN DISPLAY;;52
   RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50500 *
   START.REF.NO2 = 1 + INT((REF.NO2-1)/LINE.COUNT2)*LINE.COUNT2
   IF START.REF.NO2 = CURR.REF.NO2 THEN RETURN
   CURR.REF.NO2 = START.REF.NO2
   S$VAL = START.REF.NO2
   S$CNT = DCOUNT(S$DATA(32)<S$SCR>,VM)
   SCREEN MULTI;;C;31;32;33;34;35
*SCREEN MULTI;;C;31;32;33;35
   P1 = INT((START.REF.NO2-1)/LINE.COUNT2)+1; IF P1=0 THEN P1=1
   P2 = INT((S$CNT-1)/LINE.COUNT2)+1; IF P2=0 THEN P2=1
   S$DATA(53)<S$SCR> = P1
   S$DATA(54)<S$SCR> = P2
   SCREEN DISPLAY;;53
   SCREEN DISPLAY;;54
   RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
   JOB.NOS = ""
   CUST.NOS = ""
   MAT TEMP.REC = ""
   PPTR = 0
   ICR.CNV = ""                                               
   ICR.DV1 = ""                                               
   ICR.DV2 = ""                                               
   ICR.MT1 = ""                                               
   DIFF.UM=''
   PC = DCOUNT(PO.PROD.NUM,VM)
   FOR PP = 1 TO PC
      PROD.NO = PO.PROD.NUM<1,PP>
      MATREAD INV.REC FROM INVENTORY, CONO:PROD.NO THEN
         PPTR += 1
         GOSUB GET.CONVERSION
         TEMP.PROD.NO<PPTR> = PROD.NO
        TEMP.PROD.POLN<PPTR> = PROD.NO:PPTR'R%3'
         TEMP.DESC<PPTR>    = INV.DESC
         TEMP.BASIS<PPTR>   = INV.BAS.WT
         TEMP.WIDTH<PPTR>   = INV.PAP.WIDTH
         TEMP.JOB.NO<PPTR>  = PO.JOB.NO<1,PP>
         JCNT = DCOUNT(PO.JOB.NO<1,PP>,SM)
         FOR JPTR = 1 TO JCNT
            JOB.NO = PO.JOB.NO<1,PP,JPTR>
            IF JOB.NO # "" THEN
               LOCATE JOB.NO IN JOB.NOS<1>,1 SETTING P ELSE
                  MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
                     JOB.NOS<1,-1> = JOB.NO
                     IF JOB.CUST # "" THEN
                        LOCATE JOB.CUST IN CUST.NOS<1>,1 SETTING P ELSE
                           CUST.NOS<1,-1> = JOB.CUST
                        END
                     END
                  END
               END
            END
         NEXT JPTR
         TEMP.QTY.ORD<PPTR> = PO.TOT.ONORD<1,PP>
*    TEMP.QTY.INT<PPTR> = ""
         TEMP.QTY.RCV<PPTR> = ""
      END
   NEXT PP
   LINE.CNT = DCOUNT(TEMP.PROD.NO,AM)
*
   XCNT = DCOUNT(PO.MAN,VM)
   FOR XPTR = 1 TO XCNT
      MAN.NO = PO.MAN<1,XPTR>
      MATREAD DSR.REC FROM DAILY_STOCK, CONO:PO.NO:"!":MAN.NO THEN
         PC = DCOUNT(DSR.PROD,VM)
         FOR PP = 1 TO PC
* Move 4 lines below to be within Locate v. T28257
*           IF DSR.SHPMNT.TOT+0 > 0 OR SUM(DSR.QTY<1,PP>)+0 # 0 THEN
*              QTY.RCV = SUM(DSR.QTY<1,PP>)           ;* 999999
*              QTY.RCV = QTY.RCV / 10
*           END
*
           DSR.PO.LINE<1,PP> = DSR.PO.LINE<1,PP>'R%3' ;*T28257
*           LOCATE DSR.PROD<1,PP> IN TEMP.PROD.NO,1 SETTING PINDEX THEN
            LOCATE DSR.PROD<1,PP>:DSR.PO.LINE<1,PP> IN TEMP.PROD.POLN,1 SETTING PINDEX THEN ;*T28257
              IF DSR.SHPMNT.TOT+0 > 0 OR SUM(DSR.QTY<1,PP>)+0 # 0 THEN
                 QTY.RCV = SUM(DSR.QTY<1,PP>)           ;* 999999
                 QTY.RCV = QTY.RCV / 10
              END
               LOCATE MAN.NO IN TEMP.MAN.NO<PINDEX>,1 BY "AR" SETTING MINDEX ELSE
                  INS MAN.NO BEFORE TEMP.MAN.NO<PINDEX,MINDEX>
                  INS "" BEFORE TEMP.MAN.DT<PINDEX,MINDEX>
                  INS "" BEFORE TEMP.MQTY.INT<PINDEX,MINDEX>
                  INS "" BEFORE TEMP.MQTY.RCV<PINDEX,MINDEX>
               END
               TEMP.MQTY.INT<PINDEX,MINDEX> += QTY.RCV
            END
         NEXT PP
      END
   NEXT XPTR
*        QTY.INT = RCVMAN.REC.WGT<1,PP> - QTY.RCV      ;* 999999
*        IF QTY.INT < 0 THEN QTY.INT = 0
*        TEMP.QTY.INT<PP> += QTY.INT
*        TEMP.QTY.RCV<PP> += QTY.RCV
*        TEMP.MQTY.INT<PP,MP> += QTY.INT
*        TEMP.MQTY.RCV<PP,MP> += QTY.RCV
* END ELSE
   MATREAD RSXRF.REC FROM PO.RSKI.XREF, CONO:PO.NO ELSE
      MAT RSXRF.REC = ""
   END
   NUM.SERIAL = DCOUNT(RSXRF.RS.NO,VM)
   FOR PP = 1 TO NUM.SERIAL
      MATREAD ISTK.REC FROM INV_SERIAL, CONO:RSXRF.RS.NO<1,PP> ELSE
         MAT ISTK.REC = ""
      END
      IF ISTK.POST.DATE # "" THEN
*T28257 v
*        LOCATE ISTK.PROD IN TEMP.PROD.NO,1 SETTING PINDEX THEN
        ISTK.PO.LINE = ISTK.PO.LINE'R%3'
         LOCATE ISTK.PROD:ISTK.PO.LINE IN TEMP.PROD.POLN,1 SETTING PINDEX THEN
*T28257 ^
            IF ISTK.MANIFEST.NO = "" THEN 
               ISTK.MANIFEST.NO = "NOT RCVD"
            END
            LOCATE ISTK.MANIFEST.NO IN TEMP.MAN.NO<PINDEX>,1 BY "AR" SETTING MINDEX ELSE
               INS ISTK.MANIFEST.NO BEFORE TEMP.MAN.NO<PINDEX,MINDEX>
               INS '' BEFORE TEMP.MAN.DT<PINDEX,MINDEX>
               INS "" BEFORE TEMP.MQTY.RCV<PINDEX,MINDEX>
               INS "" BEFORE TEMP.MQTY.INT<PINDEX,MINDEX>
            END
*C40536 v
            TEMP.MAN.DT<PINDEX,MINDEX> = ISTK.POST.DATE ;*T28257
*           TEMP.MQTY.RCV<PINDEX,MINDEX> += ISTK.QTY.ENTERED
            TEMP.MQTY.RCV<PINDEX,MINDEX> += ISTK.ORG.QTY
*C40536 ^
         END
      END
   NEXT PP
*
   JCNT = DCOUNT(JOB.NOS,VM)
   CCNT = DCOUNT(CUST.NOS,VM)
   BEGIN CASE
      CASE JCNT = 0
         JOB.NO = ""
         CNAME = ""
      CASE JCNT = 1
         JOB.NO = JOB.NOS
         CUST.NO = CUST.NOS
         MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NO THEN CNAME=CUST.NAME
      CASE CCNT = 1
         JOB.NO = "MULTIPLE"
         CUST.NO = CUST.NOS
         MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NO THEN CNAME=CUST.NAME
      CASE 1
         JOB.NO = "MULTIPLE"
*T26394
         CNAME = ""
   END CASE
   S$DATA(1)<S$SCR> = DATE()
   S$DATA(2)<S$SCR> = PO.NO
   S$DATA(3)<S$SCR> = VEND.DESC
   S$DATA(4)<S$SCR> = JOB.NO
   S$DATA(5)<S$SCR> = CNAME
   S$DATA(6)<S$SCR> = PO.DATE
80050 *
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
   S$DATA(12)<S$SCR> = ""
   S$DATA(13)<S$SCR> = ""
   S$DATA(14)<S$SCR> = ""
   S$DATA(15)<S$SCR> = ""
   S$DATA(16)<S$SCR> = ""
   S$DATA(17)<S$SCR> = ""
   S$DATA(18)<S$SCR> = ""
   S$DATA(19)<S$SCR> = ""
   S$DATA(50)<S$SCR> = ""
   LINE.CNT = DCOUNT(TEMP.PROD.NO,AM)
   FOR REF = 1 TO LINE.CNT
      S$DATA(12)<S$SCR,REF> = TEMP.PROD.NO<REF>
      S$DATA(13)<S$SCR,REF> = INT(TEMP.BASIS<REF>/100)
      S$DATA(14)<S$SCR,REF> = TEMP.WIDTH<REF>
      JCNT = DCOUNT(TEMP.JOB.NO<REF>,SM)
      BEGIN CASE
         CASE JCNT = 0
            S$DATA(15)<S$SCR,REF> = ""
         CASE JCNT = 1
            S$DATA(15)<S$SCR,REF> = TEMP.JOB.NO<REF,1>
         CASE 1
            S$DATA(15)<S$SCR,REF> = "MULTIPLE"
      END CASE
      QTY=TEMP.QTY.ORD<REF>
      GOSUB CALC.ORD.QTY
      S$DATA(16)<S$SCR,REF>=DISP.QTY
*T26394
*C40536 v
*     QTY = TEMP.QTY.ORD<REF> - (SUM(TEMP.MQTY.RCV<REF>) * 10)
      QTY = TEMP.QTY.ORD<REF> - SUM(TEMP.MQTY.RCV<REF>)
      IF QTY < 0 THEN QTY = 0 ;*T28257
*C40536 ^
      GOSUB CALC.ORD.QTY
      S$DATA(17)<S$SCR,REF> = DISP.QTY
*C40536 v
*     QTY = SUM(TEMP.MQTY.RCV<REF>)
*     QTY = QTY * 10
      QTY = SUM(TEMP.MQTY.RCV<REF>)
*C40536 ^
      GOSUB CALC.ORD.QTY
      S$DATA(18)<S$SCR,REF>=DISP.QTY
      S$DATA(19)<S$SCR,REF> = TEMP.DESC<REF>
*
*  S$DATA(17)<S$SCR,REF> = OCONV(TEMP.QTY.INT<REF>,"MD0Z,")
* IF PO.UNIT.FLG<1,REF>='LBS' OR PO.UNIT.FLG<1,REF>='MSI' THEN
*   S$DATA(18)<S$SCR,REF>=OCONV(TEMP.QTY.RCV<REF>,'MD2,')
* END ELSE
*   S$DATA(18)<S$SCR,REF>=OCONV(TEMP.QTY.RCV<REF>,'MD0,')
* END
   NEXT REF
81500 *
   S$DATA(32)<S$SCR> = ""
   S$DATA(33)<S$SCR> = ""
   S$DATA(34)<S$SCR> = ""
   S$DATA(35)<S$SCR> = ""
   LINE.CNT2 = DCOUNT(TEMP.MAN.NO<REF.NO>,VM)
   FOR REF = 1 TO LINE.CNT2
      S$DATA(32)<S$SCR,REF> = TEMP.MAN.NO<REF.NO,REF>
      S$DATA(33)<S$SCR,REF> = TEMP.MAN.DT<REF.NO,REF>
      QTY = TEMP.MQTY.INT<REF.NO,REF>
*     QTY = QTY * 10
      TEMP.REF = REF
      REF = REF.NO
      GOSUB CALC.ORD.QTY
      REF = TEMP.REF
      S$DATA(34)<S$SCR,REF> = DISP.QTY
*  S$DATA(34)<S$SCR,REF> = OCONV(TEMP.MQTY.INT<REF.NO,REF>,"MD0Z,")
*T26394
      QTY = TEMP.MQTY.RCV<REF.NO,REF>
*C40536      QTY = QTY * 10 ;* this is done because manifest is 2 digits inv is 3 digits
*                ;* can use the same conversion routine to display qty
      TEMP.REF = REF
      REF = REF.NO
      GOSUB CALC.ORD.QTY
* REF.NO = TEMP.REF
      REF = TEMP.REF
      S$DATA(35)<S$SCR,REF>=DISP.QTY
* IF PO.UNIT.FLG<1,REF.NO>='LBS' OR PO.UNIT.FLG<1,REF.NO>='MSI' THEN  
*   S$DATA(35)<S$SCR,REF> = OCONV(TEMP.MQTY.RCV<REF.NO,REF>,"MD2")
* END ELSE
*   S$DATA(35)<S$SCR,REF> = OCONV(TEMP.MQTY.RCV<REF.NO,REF>,"MD0Z")
* END
   NEXT REF
   RETURN
*
******************
GET.CONVERSION: 
******************
*
*T26394
* ICR.CNV = ""                                               
* ICR.DV1 = ""                                               
* ICR.DV2 = ""                                               
* ICR.MT1 = ""                                               
* DIFF.UM=''
   BEGIN CASE                                                 
      CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"       
         ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 1      
         ICR.DV1<PPTR,1> = INV.M.WT;          ICR.MT1<PPTR,1> = 1      
      CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"        
         ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 1      
         ICR.DV1<PPTR,1> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,1> = 10     
      CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"        
         ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 12     
         ICR.DV1<PPTR,1> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,1> = 100    
      CASE 1                                                     
         ICR.CNV<PPTR,1> = "MD2";             ICR.DV2<PPTR,1> = 1      
         ICR.DV1<PPTR,1> = 10;                ICR.MT1<PPTR,1> = INV.SBR
   END CASE                                                   
*                                                            
   BEGIN CASE                                             
      CASE PO.UNIT.FLG<1,PP> = "SHT" AND INV.UNIT<1,3> = "LBS"       
         ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 1  
         ICR.DV1<PPTR,2> = INV.M.WT;          ICR.MT1<PPTR,2> = 1  
      CASE PO.UNIT.FLG<1,PP> = "PC" AND INV.UNIT<1,3> = "MSI"        
         ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 1  
         ICR.DV1<PPTR,2> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,2> = 10 
      CASE PO.UNIT.FLG<1,PP> = "FT" AND INV.UNIT<1,3> = "MSI"        
         ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 12 
         ICR.DV1<PPTR,2> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,2> = 100
      CASE 1                                                 
         ICR.CNV<PPTR,2> = "MD2";             ICR.DV2<PPTR,2> = 1  
         ICR.DV1<PPTR,2> = 10;                ICR.MT1<PPTR,2> = 1  
   END CASE                                               
   IF PO.UNIT.FLG<1,PP> # INV.UNIT<1,2> THEN DIFF.UM<PPTR> = "Y" ELSE DIFF.UM<PPTR> = "N"
   RETURN
*
**************
CALC.ORD.QTY: 
**************
*
   DISP.QTY=''
*T26394
   IF DIFF.UM<REF> = "Y" THEN
      IF ICR.CNV<REF,2> = "MD0" THEN
         IF QTY # "" THEN
            DISP.QTY = ICONV(((QTY/ICR.DV1<REF,2>)*ICR.MT1<REF,2>)/ICR.DV2<REF,2>, 'MD0')
         END
      END ELSE
         IF QTY # "" THEN
            IF ICR.CNV<REF,1> = "MD0" THEN
               DISP.QTY = OCONV(INT(QTY/10), "MD2")
            END ELSE
               DISP.QTY = OCONV(INT((QTY/10)/ICR.MT1<REF,1>), "MD2")
            END
         END
      END
   END ELSE
      IF ICR.CNV<REF,1> = "MD0" THEN
         IF QTY # "" THEN
            DISP.QTY = ICONV(((QTY/ICR.DV1<REF,1>)*ICR.MT1<REF,1>)/ICR.DV2<REF,1>,'MD0')
         END
      END ELSE
         IF QTY # "" THEN
            DISP.QTY = OCONV(INT(QTY/10), "MD2")
         END
      END
   END
*   IF ICR.CNV<REF,1> = "MD0" THEN
*     IF QTY # "" THEN
*       DISP.QTY = INT(((QTY/ICR.DV1<REF,1>)*ICR.MT1<REF,1>)/ICR.DV2<REF,1> + .5)
*     END
*   END ELSE
*     IF QTY # "" THEN
*       DISP.QTY = OCONV(INT(QTY/10)/100, "MD0")
*     END
*   END
* END
*
   RETURN
*---- ERROR ROUTINE
*
90000 *
   PRINT @(0,23):@(-4):ERRMSG:
   INPUT REPLY:
   PRINT @(0,23):@(-4):
   RETURN
*
*---- END OF PROGRAM
*
99999 *
   PRINT @(-1)
END
