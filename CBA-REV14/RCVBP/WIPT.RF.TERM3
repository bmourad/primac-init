*********************************************************************
*
* PROGRAM  - WIPT.RF.TERM
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/01/95
*
* DESCRIPTION
*
* This program is used to process transaction from the hand-held 
* R-F units used in the warehouse.
*
*T22322 ct6 01/07/1998 * Install WIP IN-PROCESS with changes for Bawden
*
*KDS9806  UPDATE COMPONENT MASKING
*KDS9806A UPDATE STORE PALLET PRIOR LOCATION
*KDS9807  ADD A STORE PALLET UPON ACCEPTING AN INDIVIDUAL REQUEST
*KDS9807A UPDATE LOGIN PROCESS - ADD LOGOUT
*KDS9808  FIX SO THAT PALLETS ZEROS WHEN MOVING TO CONSUMING LOCATION
*KDS9810  UPDATE PALLET PRIOR LOCATION
*KDS9812  VALIDATE DRIVER ID
*KDS9902  ADD PALLET LOCATION ADJUSTMENT SCREEN
*KDS9906  UPDATE PALLET PRIOR LOCATION LOGIC
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>RCV.CPYLIB>WIP.TRACK.JOB
*COPY>RCV.CPYLIB>WIP.TRACK.FORM
*COPY>RCV.CPYLIB>WIP.TRACK.PALLET
*COPY>RCV.CPYLIB>WIP.TRACK.CONTROL
*COPY>RCV.CPYLIB>WIP.FILE.VARS
*COPY>RCV.CPYLIB>WIP.TRACK.TO.JOB
*COPY>RCV.CPYLIB>WIP.TRACK.ISBN
*COPY>RCV.CPYLIB>WIPT.STORAGE.LOC
*COPY>RCV.CPYLIB>WIP.BP.LOC.CODES
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PMC.CPYLIB>VEND
*COPY>RCV.CPYLIB>RCV.FILE.VARS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*KDS9812
*COPY>RCV.CPYLIB>WIP.BP.DRIVER.CODES
*KDS9812
*KDS9902
*COPY>RCV.CPYLIB>BP.TEMP.PALLET.ADJ
*KDS9902
*
*---- PRE-INITIALIZATION
*
      PROCREAD PARAM ELSE PARAM = ""
      ACTION = PARAM<1>
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOTO 93000
      END
      OPEN "","JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"
         GOTO 93000
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
         ERRMSG = "CANNOT OPEN CUSTOMER FILE"
         GOTO 93000
      END
      OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
         ERRMSG = "CANNOT OPEN EMPLOYEE FILE"
         GOTO 93000
      END
      OPEN "","VEND" TO VEND ELSE
         ERRMSG = "CANNOT OPEN VEND FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.JOB" TO WIP.TRACK.JOB ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.JOB FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.CONTROL" TO WIP.TRACK.CONTROL ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.CONTROL FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.TO.JOB" TO WIP.TRACK.TO.JOB ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.TO.JOB FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.ISBN" TO WIP.TRACK.ISBN ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.ISBN FILE"
         GOTO 93000
      END
      OPEN "","WIPT.STORAGE.LOC" TO WIPT.STORAGE.LOC ELSE
         ERRMSG = "CANNOT OPEN WIPT.STORAGE.LOC FILE"
         GOTO 93000
      END
      OPEN "","RCV.MANIFEST" TO RCV.MANIFEST ELSE
         ERRMSG = "CANNOT OPEN RCV.MANIFEST FILE"
         GOTO 93000
      END
      OPEN "","RCV.PO.XREF" TO RCV.PO.XREF ELSE
         ERRMSG = "CANNOT OPEN RCV.PO.XREF FILE"
         GOTO 93000
      END
      OPEN "","RCV.ROLL.XREF" TO RCV.ROLL.XREF ELSE
         ERRMSG = "CANNOT OPEN RCV.ROLL.XREF FILE"
         GOTO 93000
      END
      OPEN "","ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE
         ERRMSG = "CANNOT OPEN ROLL.SKID.INFO FILE"
         GOTO 93000
      END
*KDS9902
      OPEN "","BP.TEMP.PALLET.ADJ" TO BP.TEMP.PALLET.ADJ ELSE
         ERRMSG = "CANNOT OPEN BP.TEMP.PALLET.ADJ FILE"
         GOTO 93000
      END
*KDS9902
*
*---- INITIALIZATION
*
      CONO = ""
      MAT COMP.REC = ""
      CALL GET.CONO (CONO, MAT COMP.REC)
      IF CONO = "END" THEN GOTO 99999
      USER.ID = @LOGNAME
      EMPID = "XXXX"
      EMPNAME = ""
      MATREAD WIPTE.REC FROM WIP.TRACK.CONTROL, CONO:"EMP" THEN
         LOCATE USER.ID IN WIPTE.USER<1>,1 SETTING EPTR THEN 
            EMPID = WIPTE.EMP<1,EPTR>
            MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
               EMPNAME = EMP.FRST.NAME:" ":EMP.LAST.NAME
            END
         END
      END
      MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" THEN
         POS = 1
         LOOP
            LOCATE USER.ID IN WIPTR.USER<1>,POS SETTING PTR ELSE PTR = 0
         WHILE PTR > 0 DO
            WIPTR.USER<1,PTR> = ""
            WIPTR.PALLET<1,PTR> = ""
            POS = PTR + 1
         REPEAT
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
      END ELSE
         RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
      END
      PREV.DEFINE.JOB = ""
      PREV.DEFINE.FORM = ""
      PREV.DEFINE.SKID = ""
      PREV.DEFINE.TYPE = ""
      PREV.DEFINE.QTY = ""
      PREV.DEFINE.LOC = ""
      PREV.DEFINE.DESC = ""
*KDS9806A
      DIM SAVE.WIPTP.REC(40)
*KDS9806A
*
*---- INITIALIZE EDIT.SUB
*
      MAT EDIT.COM = ""
      TYP = 0
      CALL WIPT.INPUT
      GOSUB 89990
      FILL = "#"
      ERY = 15
*
*---- INITIALIZE MENUS AND SCREENS
*
      DIM SCRN(20,16)
      DIM SCRX(20,16)
      DIM SCRD(20,16)
      MAT SCRN = ""
      MAT SCRX = ""
      MAT SCRD = ""
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(1,01) = "|      Main Menu     |"
      SCRN(1,02) = "|--------------------|"
      SCRN(1,03) = "|  1- Sign-on        |"
      SCRN(1,04) = "|  2- Store Pallet   |"
      SCRN(1,05) = "|  3- Pallet Request |"
      SCRN(1,06) = "|  4- Locate Pallet  |"
      SCRN(1,07) = "|  5- Define Pallet  |"
      SCRN(1,08) = "|  6- Update Pallet  |"
      SCRN(1,09) = "|                    |"
      SCRN(1,10) = "|  8- Roll/Skid Menu |"
      SCRN(1,11) = "|                    |"
      SCRN(1,12) = "|  X- Exit           |"
      SCRN(1,13) = "|                    |"
      SCRN(1,14) = "|    Selection: ##   |"
      SCRN(1,15) = "|                    |"
      SCRN(1,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(2,01) = "|      Sign-on       |"
      SCRN(2,02) = "|--------------------|"
      SCRN(2,03) = "|                    |"
      SCRN(2,04) = "|Current Employee:   |"
      SCRN(2,05) = "|                    |"
      SCRN(2,06) = "| ###################|"
      SCRN(2,07) = "|                    |"
      SCRN(2,08) = "|                    |"
      SCRN(2,09) = "|Employee ID: ####   |"
      SCRN(2,10) = "|                    |"
      SCRN(2,11) = "|                    |"
      SCRN(2,12) = "|                    |"
      SCRN(2,13) = "|                    |"
      SCRN(2,14) = "|                    |"
      SCRN(2,15) = "|                    |"
      SCRN(2,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(3,01) = "|    Store Pallet    |"
      SCRN(3,02) = "|--------------------|"
      SCRN(3,03) = "| ###################|"
      SCRN(3,04) = "|--------------------|"
      SCRN(3,05) = "| Pallet #: ######## |"
      SCRN(3,06) = "|                    |"
      SCRN(3,07) = "| Location: ######## |"
      SCRN(3,08) = "|                    |"
      SCRN(3,09) = "| Moved To: ######## |"
      SCRN(3,10) = "|                    |"
      SCRN(3,11) = "|                    |"
      SCRN(3,12) = "|------- Prior ------|"
      SCRN(3,13) = "|                    |"
      SCRN(3,14) = "| Pallet #: ######## |"
      SCRN(3,15) = "| Moved To: ######## |"
      SCRN(3,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
*T22322v
*     XXXXXXXXXX = "+--------------------+"
*     SCRN(4,01) = "|   Pallet Request   |"
*     SCRN(4,02) = "|--------------------|"
*     SCRN(4,03) = "|                    |"
*     SCRN(4,04) = "| Pallet #: ######## |"
*     SCRN(4,05) = "| Location: ######## |"
*     SCRN(4,06) = "|                    |"
*     SCRN(4,07) = "| Job : ########     |"
*     SCRN(4,08) = "| Component: ####### |"
*     SCRN(4,09) = "|                    |"
*     SCRN(4,10) = "| Stitcher: ######## |"
*     SCRN(4,11) = "|                    |"
*     SCRN(4,12) = "|Delivered: ######## |"
*     SCRN(4,13) = "|                    |"
*     SCRN(4,14) = "|                    |"
*     SCRN(4,15) = "|                    |"
*     SCRN(4,16) = "|                    |"
*     XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(4,01) = "|   Pallet Request   |"
      SCRN(4,02) = "|--------------------|"
      SCRN(4,03) = "| ###################|"
      SCRN(4,04) = "|--------------------|"
      SCRN(4,05) = "| Date: ########     |"
      SCRN(4,06) = "| Time: #####        |"
      SCRN(4,07) = "| Cctr: ###          |"
      SCRN(4,08) = "| Job : ########     |"
      SCRN(4,09) = "| Comp: #######      |"
      SCRN(4,10) = "| (N)ext,(P)rior: ###|"
      SCRN(4,11) = "| (F)ifo,(L)ifo : ###|"
      SCRN(4,12) = "|                    |"
      SCRN(4,13) = "| Pallet #: ######## |"
      SCRN(4,14) = "| Location: ######## |"
      SCRN(4,15) = "|(N)ext,(P)rior: ### |"
      SCRN(4,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
*T22322^
      XXXXXXXXXX = " 123456789012345678901 "
*T22322v
*     XXXXXXXXXX = "+--------------------+"
*     SCRN(5,01) = "|   Locate Pallet    |"
*     SCRN(5,02) = "|--------------------|"
*     SCRN(5,03) = "| Job : ########     |"
*     SCRN(5,04) = "| Component: ####### |"
*     SCRN(5,05) = "|--------------------|"
*     SCRN(5,06) = "|     ###    ###     |"
*     SCRN(5,07) = "|                    |"
*     SCRN(5,08) = "| Pallet #: ######## |"
*     SCRN(5,09) = "| Location: ######## |"
*     SCRN(5,10) = "| Quantity: ######## |"
*     SCRN(5,11) = "|     Type: ####     |"
*     SCRN(5,12) = "|####################|"
*     SCRN(5,13) = "|                    |"
*     SCRN(5,14) = "|                    |"
*     SCRN(5,15) = "|                    |"
*     SCRN(5,16) = "|                    |"
*     XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(5,01) = "|   Locate Pallet    |"
      SCRN(5,02) = "|--------------------|"
      SCRN(5,03) = "| ###################|"
      SCRN(5,04) = "|--------------------|"
      SCRN(5,05) = "| Job   : ########   |"
      SCRN(5,06) = "| Comp  : #######    |"
      SCRN(5,07) = "| To-Job: ########   |"
      SCRN(5,08) = "| ISBN:              |"
      SCRN(5,09) = "|################### |"
      SCRN(5,10) = "| (F)ifo,(L)ifo: ### |"
      SCRN(5,11) = "| --------### of ### |"
      SCRN(5,12) = "| Pallet #: ######## |"
      SCRN(5,13) = "| Location: ######## |"
      SCRN(5,14) = "| Quantity: ######## |"
      SCRN(5,15) = "| (P)rior,(N)ext: ###|"
      SCRN(5,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
*T22322^
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(7,01) = "|    Define Pallet   |"
      SCRN(7,02) = "|--------------------|"
      SCRN(7,03) = "|                    |"
      SCRN(7,04) = "|  Pallet: ########  |"
      SCRN(7,05) = "|                    |"
      SCRN(7,06) = "| Job : ########     |"
      SCRN(7,07) = "| Comp: #######      |"
      SCRN(7,08) = "| Skid: ###          |"
      SCRN(7,09) = "| To-Oper: ###       |"
      SCRN(7,10) = "|                    |"
      SCRN(7,11) = "| Quantity: ######## |"
      SCRN(7,12) = "| Location: ######   |"
      SCRN(7,13) = "|                    |"
      SCRN(7,14) = "| Description:       |"
      SCRN(7,15) = "|####################|"
      SCRN(7,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXX = "+--------------------+"
      SCRN(8,01) = "|    Update Pallet   |"
      SCRN(8,02) = "|--------------------|"
      SCRN(8,03) = "| ###################|"
      SCRN(8,04) = "|--------------------|"
      SCRN(8,05) = "| Pallet  : ######## |"
      SCRN(8,06) = "| Job     : ######## |"
      SCRN(8,07) = "| Comp    : #######  |"
      SCRN(8,08) = "| Skid    : ###      |"
      SCRN(8,09) = "| To-Oper : ###      |"
      SCRN(8,10) = "| To-Job  : ######## |"
      SCRN(8,11) = "| Location: ######## |"
      SCRN(8,12) = "| Quantity: ######   |"
      SCRN(8,13) = "| Cartons : ######   |"
      SCRN(8,14) = "|                    |"
      SCRN(8,15) = "| (E)xit, (F)ile: ###|"
      SCRN(8,16) = "|                    |"
      XXXXXXXXXX = "+--------------------+"
      XXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXXX = "+--------------------+"
      SCRN(10,01) = "|   Pallet Pick-up   |"
      SCRN(10,02) = "|--------------------|"
      SCRN(10,03) = "|                    |"
      SCRN(10,04) = "| Pallet #: ######## |"
      SCRN(10,05) = "| Location: ######## |"
      SCRN(10,06) = "|                    |"
      SCRN(10,07) = "| Job : ########     |"
      SCRN(10,08) = "| Comp: #######      |"
      SCRN(10,09) = "|                    |"
      SCRN(10,10) = "| Accept? : ###      |"
      SCRN(10,11) = "|                    |"
      SCRN(10,12) = "|                    |"
      SCRN(10,13) = "|                    |"
      SCRN(10,14) = "|                    |"
      SCRN(10,15) = "|                    |"
      SCRN(10,16) = "|                    |"
      XXXXXXXXXXX = "+--------------------+"
      XXXXXXXXXXX = " 123456789012345678901 "
*KDS9902
      XXXXXXXXXXX = " 123456789012345678901 "
      XXXXXXXXXXX = "+--------------------+"
      SCRN(11,01) = "|       Pallet       |"
      SCRN(11,02) = "|      Location      |"
      SCRN(11,03) = "|      Clean-up      |"
      SCRN(11,04) = "|--------------------|"
      SCRN(11,05) = "| ###################|"
      SCRN(11,06) = "|--------------------|"
      SCRN(11,07) = "|                    |"
      SCRN(11,08) = "| Location: ######## |"
      SCRN(11,09) = "|                    |"
      SCRN(11,10) = "| Pallet #: ######## |"
      SCRN(11,11) = "|                    |"
      SCRN(11,12) = "| ######### ######## |"
      SCRN(11,13) = "|                    |"
      SCRN(11,14) = "|                    |"
      SCRN(11,15) = "|                    |"
      SCRN(11,16) = "|                    |"
      XXXXXXXXXXX = "+--------------------+"
      XXXXXXXXXXX = " 123456789012345678901 "
*KDS9902
*
      FOR SN = 1 TO 19
         FOR SL = 1 TO 16
*T22322v
*            SLINE = SCRN(SN,SL)[2,21]
            SLINE = SCRN(SN,SL)[2,20]
*T22322^
            FOR N = 1 TO 21 WHILE SCRX(SN,SL) = ""
               IF SLINE[N,1] # " " THEN
                  SCRX(SN,SL) = N
                  SCRD(SN,SL) = SLINE[N,99]
               END
            NEXT N
         NEXT SL
      NEXT SN
*
*---- MAIN PROCESSING
*
100 *
      RELEASE
*
      ESN=1; GOSUB 1000
*T22322vvv
*     TYP=1; X=15; Y=12; MAXL=1
      TYP=1; X=15; Y=13; MAXL=1
*T22322^^
      EX=0; EY=15; ERY=15
*T22322vvv
*     VALDAT="1":VM:"2":VM:"3":VM:"4":VM:"5":VM:"6":VM:"X"
      VALDAT="1":VM:"2":VM:"3":VM:"4":VM:"5":VM:"6":VM:"7":VM:"8":VM:"X"
*T22322^
      CALL WIPT.INPUT
      GOSUB 89990
      OPTION = VALUE
120 *
      BEGIN CASE
      CASE OPTION = "END"
         GOTO 99999
*KDS9807A
      CASE OPTION = "X"
         GOTO 99999
*KDS9807A
      CASE OPTION = "1"           ;* SIGN-ON
         ESN=2; GOSUB 1000
         GOSUB 1010
*KDS9807A
      CASE EMPID = "XXXX"         ;* NO LOGIN
         PRINT @(2,14):"Please Log In":
         SLEEP 3
*KDS9807A
      CASE OPTION = "2"           ;* PALLET STORAGE
         ESN=3; GOSUB 1000
         GOSUB 1020
      CASE OPTION = "3"           ;* PALLET REQUEST
         ESN=4; GOSUB 1000
         GOSUB 1030
      CASE OPTION = "4"           ;* LOCATE PALLET
         ESN=5; GOSUB 1000
         GOSUB 1040
*T22322*      CASE OPTION = "5"           ;* CHANGE LOCATION
*T22322*         ESN=6; GOSUB 1000
*T22322*         GOSUB 1050
*T22322v
*     CASE OPTION = "6"           ;* DEFINE PALLET
      CASE OPTION = "5"           ;* DEFINE PALLET
*T22322^
         ESN=7; GOSUB 1000
         GOSUB 1060
*T22322vvv
      CASE OPTION = "6"           ;* UPDATE PALLET
         ESN=8; GOSUB 1000
         GOSUB 1070
*T22322^
*     CASE OPTION = "9"           ;* PALLET PICK-UP
*        ESN=5; GOSUB 1000
*        GOSUB 1090
*        IF OPTION = "2" THEN GOTO 120
*KDS9807A
*     CASE OPTION = "X"
*        GOTO 99999
*KDS9807A
*KDS9902
      CASE OPTION = "7"           ;* UPDATE PALLET LOCATION
         ESN=11; GOSUB 1000
         GOSUB 1100
*KDS9902
      CASE OPTION = "8"           ;* STOCK RECEIPT, TRANSFER AND ADJUST
      PARAM = "M"
      PARAM<1,2> = "AUTO"
      PARAM<1,3> = EMPID
      CALL PERFORM.PROG("RCV.RF.MAIN.2",PARAM)
      END CASE
      GOTO 100
*
*---- DISPLAY SCREEN
*
1000 *
      SLINE = @(-1)
      FOR N = 1 TO 16
         SDATA = SCRD(ESN,N)
         CONVERT "#" TO " " IN SDATA
         IF TRIM(SDATA) # "" THEN
            X = SCRX(ESN,N) - 1
            Y = N - 1
            SLINE = SLINE:@(X,Y):TRIMF(TRIMB(SDATA))
         END
      NEXT N
      PRINT SLINE:
      GOSUB 89990
      RETURN
*
*---- SIGN-ON
*
1010 *
*KDS9807A
      PRINT @(1,5):EMPNAME"L#20":
*KDS9807A
      TYP=1; X=13; Y=8; MAXL=4; EX=0; EY=15; ERY=15
      PRINT @(X,Y):STR("#",MAXL):
      PRINT @(X,Y):
      INPUT VALUE,4:_ FOR 10 ELSE VALUE = ""
      IF VALUE = "" OR VALUE = "END" THEN RETURN
      MATREAD EMP.REC FROM EMPLOYEE, CONO:VALUE ELSE
         ERRMSG = "INVALID EMPLOYEE ID"
         GOSUB 91000
         GOTO 1010
      END
*KDS9812
      MATREAD WIPTC.BPDRIVERS.REC FROM WIP.TRACK.CONTROL, CONO:"BPDRIVERS" ELSE MAT WIPTC.BPDRIVERS.REC=""
      DRIVER.FOUND = "N"
      DRIVER.CT = DCOUNT(WIPTC.BPDRIVERS.CODE,VM)
      FOR X1010 = 1 TO DRIVER.CT
         IF WIPTC.BPDRIVERS.CODE<1,X1010> = VALUE THEN DRIVER.FOUND="Y"
      NEXT X1010
      IF DRIVER.FOUND = "N" THEN
         ERRMSG = "INVALID DRIVER ID"
         GOSUB 91000
         GOTO 1010
      END
*KDS9812
      EMPID = VALUE
      EMPNAME = EMP.FRST.NAME:" ":EMP.LAST.NAME
      PRINT @(1,11):"HELLO":
      PRINT @(1,13):EMPNAME"L#20":
      MATREADU WIPTE.REC FROM WIP.TRACK.CONTROL, CONO:"EMP" ELSE MAT WIPTE.REC = ""
      LOCATE USER.ID IN WIPTE.USER<1>,1 SETTING EPTR ELSE WIPTE.USER<1,EPTR> = USER.ID
      WIPTE.EMP<1,EPTR> = EMPID
      MATWRITE WIPTE.REC ON WIP.TRACK.CONTROL, CONO:"EMP"
      SLEEP 3
      RETURN
*
*---- STORE PALLET
*
1020 *
*KDS9807
         STORE.FROM = "M"         ;* CALL FROM MAIN MENU
*KDS9807
      LOOP
*T22322vvv
*KDS9807
1024 *
*KDS9807
         IF EMPNAME # "" THEN PRINT @(1,2):EMPNAME "L#20"
*         TYP=7; X=11; Y=3; MINL=8; MAXL=8; EX=0; EY=9; ERY=9 
         TYP=7; X=11; Y=4; MINL=8; MAXL=8; EX=0; EY=9; ERY=9 
*T22322^
         PATRN="1A7N"
         O.R="O"; DEFAULT=""
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "" OR VALUE = "END" THEN RETURN
         CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
         IF NOT(VALID) THEN
            ERRMSG = "INVALID PALLET ID"
            GOSUB 91000
            GOTO 1029
         END
         PAL.ID = VALUE
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE
*           MAT WIPTP.REC = ""
*           WIPTP.MLOC = "????"
*           PRINT CHAR(7):CHAR(7):
            ERRMSG = "PALLET NOT ON FILE"
            GOSUB 91000
            GOTO 1029
         END
*T22322v
*         PRINT @(11,05):WIPTP.MLOC<1,1>"L#8":
         PRINT @(11,06):WIPTP.MLOC<1,1>"L#8":
*T22322^
*KDS9806A     GET PRIOR LOCATION
         GOSUB 20000
         IF PRIOR.PALID#"" THEN
            PRINT @(11,13):PRIOR.PALID"L#8":
            PRINT @(11,14):PRIOR.PALLOC"L#8":
         END ELSE
            PRINT @(11,13):"""L#8":
            PRINT @(11,14):"""L#8":
         END
*KDS9806A
1028 *
*T22322v
*        TYP=7; X=11; Y=7; MINL=4; MAXL=8
         TYP=1; X=11; Y=8; MINL=4; MAXL=8
*        PATRN="1A1N1A0X":VM:"1A1N-0X":VM:"'SHREDDER'":VM:"'VENDOR'"
*T22322^
         EX=0; EY=9; ERY=9
         IF WIPTP.MLOC<1,1> # "????" THEN
*KDS9806A
*           O.R="O"; DEFAULT=WIPTP.MLOC<1,1>
            IF PRIOR.PALID#" " THEN
               O.R="O"; DEFAULT=PRIOR.PALLOC
            END ELSE
               O.R="O"; DEFAULT=WIPTP.MLOC<1,1>
            END
*KDS9806A
         END
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN RETURN
*T22322v
         SL.LOC = VALUE
         GOSUB 3000 ;* Get the location definition record
         IF ERRMSG # "" THEN
            GOSUB 91000
            GOTO 1028
         END
*T22322^
*KDS9807
         STORE.COMPLETED = "N"
*KDS9807
         IF VALUE # "" THEN
            NEWLOC = VALUE
            MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID LOCKED
               ERRMSG = "** Pallet Locked **"
               GOSUB 91000
               GOTO 1028
            END ELSE
               MAT WIPTP.REC = ""
            END
            PLOC = WIPTP.MLOC<1,1>
            PQTY = WIPTP.CQTY
            GOSUB 2000
            CALL WIPT.LOC.UPD(CONO,PAL.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
*NA         CALL WIPT.HIST.UPD(CONO,PLOC,PQTY,MAT WIPTP.REC,WIP.TRACK.HIST,ERRMSG)
            MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PAL.ID
*KDS9806A
*           PRINT @(11,13):PAL.ID"L#8":
*           PRINT @(11,14):NEWLOC"L#8":
*KDS9806A
            PRINT @(00,15):@(-4):
            IF WIPTP.SEQ >= 900 THEN
               PRINT @(00,15):BEL:BEL:" **** USE LAST **** ":
            END
*KDS9807
            STORE.COMPLETED = "Y"
*KDS9807
         END
         PRINT @(11,04):@(-4):
         PRINT @(11,06):@(-4):
         PRINT @(11,08):@(-4):
*KDS9807
         IF STORE.FROM = "R" THEN RETURN
*KDS9807
         GOSUB 89990
1029  REPEAT
      RETURN
*
*---- PALLET REQUEST
*
1030 *
*T22322v
      IF EMPNAME # "" THEN PRINT @(1,2):EMPNAME "L#20"
*T22322^
      RTYPE = "D"
      REQCCTR = ""
      REQFND = 0
      MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
      RCNT = DCOUNT(WIPTR.DATE,VM)
      RSTEP = 0
      LOOP
         TYP=1; X=17; Y=10; MAXL=3; EX=0; EY=15; ERY=15
         CALL WIPT.INPUT
         GOSUB 89990
         BEGIN CASE
         CASE VALUE = "END"
            RETURN
         CASE VALUE = "F"
            RSTART=1; REND=RCNT; RSTEP=1
         CASE VALUE = "L"
            RSTART=RCNT; REND=1; RSTEP=-1
         CASE 1
            ERRMSG = "**INVALID INPUT**"
            GOSUB 91000
         END CASE
      UNTIL RSTEP # 0 DO
      REPEAT
1031 *
      LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
         WIPTR.USER<1,RPTR> = ""
      END
      REQFND = 0
      FOR RPTR = RSTART TO REND STEP RSTEP UNTIL REQFND
*T22322^
         BEGIN CASE
         CASE RTYPE # WIPTR.TYPE<1,RPTR>
         CASE WIPTR.USER<1,RPTR> # ""
         CASE 1
*T22322v
            PRINT @(7,4):OCONV(WIPTR.DATE<1,RPTR>,"D2/"):@(-4):
            PRINT @(7,5):OCONV(WIPTR.TIME<1,RPTR>,"MT"):@(-4):
            PRINT @(07,6):WIPTR.CCTR<1,RPTR>[4,99]:@(-4):
            PRINT @(07,7):WIPTR.JOB<1,RPTR>:@(-4):
            PRINT @(07,8):WIPTR.FORM<1,RPTR>:@(-4):
            WIPTR.USER<1,RPTR> = USER.ID
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
            REQFND = 1
         END CASE
      NEXT RPTR
***      IF REQFND = 0 THEN RPTR = RPTR - RSTEP
*
      IF NOT(REQFND) THEN
         PRINT @(7,4):"**NONE**":
         PRINT @(7,5):@(-4):
         PRINT @(7,6):@(-4):
         PRINT @(7,7):@(-4):
         PRINT @(7,8):@(-4):
         GOSUB 89990
      END
1032 *
      TYP=1; X=17; Y=9; MAXL=3; EX=0; EY=15; ERY=15; O.R = "O"
      VALDAT="DEL":VM:"":VM:"P":VM:"N":VM:"END"
      CALL WIPT.INPUT
      GOSUB 89990
      BEGIN CASE
      CASE VALUE = "END"
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
            WIPTR.USER<1,RPTR> = ''
         END
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         RETURN
      CASE VALUE = "DEL"
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
            FOR N = 1 TO WIPTR.REC.SIZE
               WIPTR.REC(N) = DELETE(WIPTR.REC(N),1,RPTR,0)
            NEXT N
         END
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         RETURN
      CASE VALUE = "N" OR VALUE = "P" 
1033     REQFND = 0
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC=""
         RCNT = DCOUNT(WIPTR.DATE<1>,VM)
         LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPOS THEN
            RPTR = RPOS
            WIPTR.USER<1,RPTR> = ""
         END ELSE
            IF RSTEP=1 THEN
               RPTR=RCNT+1
            END ELSE
               RPTR = 0
            END
         END
         MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         IF VALUE = "N" THEN
            RSTART=RPTR+1; REND=RCNT; RSTEP=1
            IF RSTART > RCNT THEN RSTART = RCNT
         END
         IF VALUE = "P" THEN
            RSTART=RPTR-1; REND=1; RSTEP=-1
            IF RSTART < 1 THEN RSTART = 1
         END
         PRINT @(11,12):@(-4):
         PRINT @(11,13):@(-4):
         GOSUB 89990
         GOTO 1031
      CASE VALUE = "" AND REQFND # 0
         PAL.ACTION = 0
         GOSUB 1035 ;* HANDLE PALLET SCROLLING
         PRINT @(0,15):@(-4):
         GOSUB 89990
         BEGIN CASE
         CASE PAL.ACTION = 1 
         * REQUEST WAS ACCEPTED
*KDS9807
*           VALUE = PAL.ID
            STORE.FROM = "R"       ;*  CALL FROM PALLET REQUEST
            ESN=3;  GOSUB 1000
*           PRINT @(11,04):VALUE"L#8"
            GOSUB 1024
            IF STORE.COMPLETED = "N" THEN RETURN   ;* KEEP REQUEST
*KDS9807
            MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
            LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
               FOR N = 1 TO WIPTR.REC.SIZE
                  WIPTR.REC(N) = DELETE(WIPTR.REC(N),1,RPTR,0)
               NEXT N
            END
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
            RETURN ;* TO MAIN MENU
         CASE 1    ;* 'END' was entered at N/P Pallet prompt
            GOTO 1033 ;* Prompt for Next or Prior Request
         END CASE
      END CASE
      GOTO 1032
*
1035 * Pallet Display for Request
      LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR ELSE RETURN
      WIPTF.ID = WIPTR.JOB<1,RPTR>:"!":WIPTR.FORM<1,RPTR>
      MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE
         MAT WIPTF.REC = ""
      END
      PCNT = DCOUNT(WIPTF.PALLET,VM)
      PAL.IDS = ""
      FOR PPTR = PCNT TO 1 STEP -1
         PAL.ID = WIPTF.PALLET<1,PPTR>
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
*T22322v  *Determine the Location's Definition (Zero Bal flag)
            SL.LOC = WIPTP.MLOC<1,1>
            GOSUB 3000 ;* GET THE WIPSL.REC FOR THIS PALLET'S LOCATION
*T22322^
            BEGIN CASE
            CASE WIPTP.CQTY = 0
*T22322>    CASE WIPTP.MLOC<1,1> = "VENDOR"
*T22322>    CASE WIPTP.MLOC<1,1> = "SHREDDER"
*T22322v  *This case will cover all Zero Qty Flaged locations (as above)
            CASE WIPSL.RANGE.ZERO<1> = "Y"
*T22322^
            CASE WIPTP.STATUS<1,1> = "D"
            CASE 1
               SELPTR = PPTR
               PAL.IDS = INSERT(PAL.IDS,1,1,0;PAL.ID) ;*Build list
            END CASE
         END
      NEXT PPTR
      PALCNT = DCOUNT(PAL.IDS,VM)
      BEGIN CASE
      CASE PALCNT = 0 
         PAL.ID = "**NONE**"
         MAT WIPTP.REC = ""
         RETURN
      CASE PALCNT = 1
         PPTR = 1
      CASE 1
*** Prompt for FIFO/LIFO viewing of Pallets
         PPTR = 0
         LOOP
            TYP=1; X=17; Y=10; MAXL=3; EX=0; EY=15; ERY=15
            CALL WIPT.INPUT
            GOSUB 89990
            BEGIN CASE
            CASE VALUE = "END"
               RETURN
            CASE VALUE = "F"
               PPTR = 1
            CASE VALUE = "L"
               PPTR = PCNT
            CASE 1
               ERRMSG = "**INVALID INPUT**"
               GOSUB 91000
            END CASE
         UNTIL PPTR # 0 DO
         REPEAT
*
      END CASE
1036 * Display the next/prior pallet
      PAL.ID = PAL.IDS<1,PPTR>
      MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE MAT WIPTP.REC = ""
      PRINT @(11,12):PAL.ID "L#8":
      PRINT @(11,13):WIPTP.MLOC<1,1> "L#8":
      GOSUB 89990
1037 * Prompt for Next or Prior (or Acceptance of Request!)
      PRINT @(0,15):"Enter=Accept Request"
      TYP=1; X=16; Y=14; MAXL=3; EX=0; EY=15; ERY=15; O.R = "O"
      VALDAT = "N":VM:"P":VM:"":VM:"END"
      CALL WIPT.INPUT
      GOSUB 89990
      BEGIN CASE
      CASE VALUE = "END"
         RETURN
      CASE VALUE = "N"
         PPTR = PPTR + 1
         IF PPTR > PALCNT THEN PPTR = PALCNT
      CASE VALUE = "P"
         PPTR = PPTR - 1
         IF PPTR < 1 THEN PPTR = 1
      CASE VALUE = ""
         PAL.ACTION = 1
         RETURN
      END CASE
      GOTO 1036
      RETURN
*
*---- LOCATE PALLET
*
1040 *
1041 *
      IF EMPNAME # "" THEN PRINT @(1,2):EMPNAME"L#20":
      GOSUB 89990
      TYP=1; X=9; Y=4; MAXL=8; EX=0; EY=15; ERY=15; O.R="O"
      CALL WIPT.INPUT
      GOSUB 89990
      IF VALUE = "END" THEN GOTO 1049
      REQJOB = '' ;* T22322
      IF VALUE = "" THEN GOTO 1043  ;* T22322
      MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
         ERRMSG = "INVALID JOB NUMBER"
         GOSUB 91000
         GOTO 1041
      END
      REQJOB = VALUE
1042  TYP=7; X=9; Y=5; MAXL=7; EX=0; EY=15; ERY=15
*T22322v
*     PATRN="1A0N":VM:"2A0N":VM:"0N":VM:"0N'.'0N":VM:"0N'.'0N'.'0N"
*     PATRN="0N":VM:"0N'.'0N"
      PATRN="0N'.'0N":VM:"0N'.'3A":VM:"3A'.'0N":VM:"3A'.'3A"
*T22322^
      CALL WIPT.INPUT
      GOSUB 89990
      IF VALUE = "END" THEN GOTO 1049
      FORMNO = VALUE
*     GOSUB 85100
      GOSUB 85101
      IF ERRMSG # "" THEN
         GOSUB 91000
         GOTO 1042
      END
      REQFORM = FORMNO
*T22322v
1043 * To-Job entry in Locate Pallet
      IF REQJOB # "" THEN GOTO 1044
      TYP=1; X=9; Y=6; MAXL=8; EX=0; EY=15; ERY=15; O.R="O"
      CALL WIPT.INPUT
      GOSUB 89990
      IF VALUE = "END" THEN GOTO 1049
      REQTOJOB = ""
      IF VALUE = "" AND REQJOB = "" THEN GOTO 1044
      MATREAD WIPTTJ.REC FROM WIP.TRACK.TO.JOB, CONO:VALUE ELSE
         ERRMSG = "INVALID TO-JOB NUM."
         GOSUB 91000
         GOTO 1043
      END
      REQTOJOB = VALUE
* CROSS REFERENCE TO GET JOB IDS USING TO-JOB
      IF REQJOB # "" THEN GOTO 1046
      JPTRCNT = DCOUNT(WIPTTJ.JOB<1>,VM)
      IF JPTRCNT = 0 THEN
         ERRMSG = "INVALID TO-JOB NUMBER"
         GOSUB 91000
         GOTO 1043
      END
      IF JPTRCNT = 1 THEN
         MATREAD JOB.REC FROM JOB, CONO:WIPTTJ.JOB<1,JPTRCNT> ELSE
            ERRMSG = "INVALID TO-JOB NUMBER"
            GOSUB 91000
            GOTO 1043
         END
         REQJOB = WIPTTJ.JOB<1,JPTRCNT>
         PRINT @(9,4):REQJOB "L#8"
         GOSUB 89990
         GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
      END
* You will only pass here if there are multiple JOB#'s in TO-JOB Xref
      JPTR = 1
      PRINT @(1,15):"ENTER = ACCEPT JOB"
10431 * CROSS REF DISPLAY
      PRINT @(9,7):@(-4):JPTR "R#3":" of ":JPTRCNT "R#3"
      TEMPJOB = WIPTTJ.JOB<1,JPTR>
      PRINT @(9,4):TEMPJOB "L#8":
      GOSUB 89990
      TYP=1; X=17; Y=14; MAXL=1; O.R="O"; EX=0; EY=15; ERY=15
      CALL WIPT.INPUT
      GOSUB 89990
      BEGIN CASE
      CASE VALUE = "END"
         GOSUB 1000; GOTO 1040
      CASE (VALUE = "P" OR VALUE = "p") AND JPTR > 1
         JPTR = JPTR - 1
      CASE (VALUE = "N" OR VALUE = "n") AND JPTR < JPTRCNT
         JPTR = JPTR + 1
      CASE VALUE = ""
         MATREAD JOB.REC FROM JOB, CONO:TEMPJOB ELSE
            ERRMSG = "INVALID JOB NUMBER"
            GOSUB 91000
            GOTO 10431
         END
         REQJOB = TEMPJOB
         PRINT @(9,4):REQJOB "L#8"
         GOSUB 89990
         PRINT @(9,7):SPACE(10):
         PRINT @(1,15):SPACE(19):
         GOSUB 89990
         GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
      CASE 1
         GOTO 10431
      END CASE
   GOTO 10431
1044 * ISBN entry in Locate Pallet
      IF REQJOB # "" THEN
         REQISBN = JOB.ISBN<1,1>
         PRINT @(0,8):REQISBN "L#20"
         GOTO 1046
      END
      TYP=1; X=0; Y=8; MAXL=20; EX=0; EY=15; ERY=15
      CALL WIPT.INPUT
      GOSUB 89990
      IF VALUE = "END" THEN GOTO 1049
      MATREAD WIPTISBN.REC FROM WIP.TRACK.ISBN, CONO:VALUE ELSE
         ERRMSG = "INVALID ISBN NUMBER"
         GOSUB 91000
         GOTO 1044
      END
      REQISBN = VALUE
* CROSS REFERNCE TO GET JOB IDS
      IF REQJOB # "" THEN GOTO 1046
      JPTRCNT = DCOUNT(WIPTISBN.JOB<1>,VM)
      IF JPTRCNT = 0 THEN
         ERRMSG = "INVALID ISBN NUMBER"
         GOSUB 91000
         GOTO 1044
      END
      IF JPTRCNT = 1 THEN
         MATREAD JOB.REC FROM JOB, CONO:WIPTISBN.JOB<1,JPTRCNT> ELSE
            ERRMSG = "INVALID ISBN NUMBER"
            GOSUB 91000
            GOTO 1044
         END
         REQJOB = WIPTISBN.JOB<1,JPTRCNT>
         PRINT @(9,4):REQJOB "L#8"
         GOSUB 89990
         GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
      END
* You will only get passed here if there are multiple JOB#'s in ISBN Xref
      JPTR = 1
      PRINT @(1,15):"ENTER = ACCEPT JOB"
1045 * CROSS REF DISPLAY
      PRINT @(9,7):@(-4):JPTR "R#3":" of ":JPTRCNT "R#3"
      TEMPJOB = WIPTISBN.JOB<1,JPTR>
      PRINT @(9,4):TEMPJOB "L#8":
      GOSUB 89990
      TYP=1; X=17; Y=14; MAXL=1; O.R="O"; EX=0; EY=15; ERY=15
      CALL WIPT.INPUT
      GOSUB 89990
      BEGIN CASE
      CASE VALUE = "END"
         GOSUB 1000; GOTO 1040
      CASE (VALUE = "P" OR VALUE = "p") AND JPTR > 1
         JPTR = JPTR - 1
      CASE (VALUE = "N" OR VALUE = "n") AND JPTR < JPTRCNT
         JPTR = JPTR + 1
      CASE VALUE = ""
         MATREAD JOB.REC FROM JOB, CONO:TEMPJOB ELSE
            ERRMSG = "INVALID JOB NUMBER"
            GOSUB 91000
            GOTO 1045
         END
         REQJOB = TEMPJOB
         PRINT @(9,4):REQJOB "L#8"
         GOSUB 89990
         PRINT @(9,7):SPACE(10):
         PRINT @(1,15):SPACE(19):
         GOSUB 89990
         GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
      CASE 1
         GOTO 1045
      END CASE
   GOTO 1045
*      PRINT @(-1):" ISBN/JOB CROSS REF":
*      PRINT @(0,1):"--------------------":
*      PRINT @(0,2):"Line   Job ID":
*      PRINT @(0,3):"----  --------":
*      FOR DISPY = 4 TO 13
*         JPTR = JPTR + 1
*         IF WIPTISBN.JOB<1,JPTR> # "" THEN
*            PRINT @(1,DISPY):JPTR "R#3":
*            PRINT SPACE(2):WIPTISBN.JOB<1,JPTR> "L#8":
*         END
*      NEXT DISPY
*      JPTR = JPTR - 10  ;* KEEPS THE DISPLAYED LINES THE SAME
*      TYP=1; X=2; Y=15; MAXL=2; O.R='O'; EX=0; EY=15; ERY=15
*      PMSG = "Line#,(S)croll:"
*      CALL WIPT.INPUT
*      GOSUB 89990
*      BEGIN CASE
*      CASE VALUE = "END"
*         GOSUB 1000; GOTO 1040
*      CASE VALUE = ""
*         GOSUB 1000; GOTO 1044
*      CASE NUM(VALUE)
*         MATREAD JOB.REC FROM JOB, CONO:WIPTISBN.JOB<1,VALUE> ELSE
*            ERRMSG = "INVALID LINE NUMBER"
*            GOSUB 91000
*            GOTO 1045
*         END
*         REQJOB = WIPTISBN.JOB<1,VALUE>
*         GOSUB 1000
*         PRINT @(9,4):REQJOB "L#8"
*         GOSUB 89990
*         GOTO 1042 ;* CONTINUE ON WITH THE COMPONENT PROMPT
*      CASE VALUE = "S"
*         JPTR = JPTR + 10; IF JPTR > JPTRCNT THEN JPTR = 0
*      CASE VALUE = "SR"
*         JPTR = JPTR - 10
*         IF JPTR < 0 THEN JPTR = 0
*      END CASE
*      GOTO 1045
**
1046 *
*T22322^
      PALIDS = ""
      WIPTF.ID = REQJOB:"!":REQFORM
      MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE
         MAT WIPTF.REC = ""
      END
      PCNT = DCOUNT(WIPTF.PALLET,VM)
      FOR PPTR = PCNT TO 1 STEP -1
         PAL.ID = WIPTF.PALLET<1,PPTR>
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
            BEGIN CASE
            CASE WIPTP.CQTY = 0
*           CASE WIPTP.MLOC<1,1> = "VENDOR"
*           CASE WIPTP.MLOC<1,1> = "SHREDDER"
*           CASE WIPTP.STATUS<1,1> = "D"
            CASE 1
               PALIDS<1,-1> = PAL.ID
            END CASE
         END
      NEXT PPTR
      IF PALIDS = "" THEN
         ERRMSG = "NO MATCHING PALLETS"
         GOSUB 91000
         PRINT @(9,4):@(-4):
         PRINT @(9,5):@(-4):
         PRINT @(9,6):@(-4):
         PRINT @(0,8):@(-4):
         GOTO 1040
*T22322v
*      END ELSE
      END
      PCNT = DCOUNT(PALIDS,VM)
      IF PCNT > 1 THEN
1047 *  PROMPT FOR FIFO OR LIFO VIEWING OF PALLETS
         TYP=1; X=16; Y=9; MAXL=1; O.R="O"; EX=0; EY=15; ERY=15
         CALL WIPT.INPUT
         GOSUB 89990
         BEGIN CASE
         CASE VALUE = "END"
            RETURN
         CASE VALUE = "F"
            PPTR = PCNT
         CASE VALUE = "L"
            PPTR = 1
         CASE 1
            GOTO 1047
         END CASE
      END ELSE
         PPTR = 1
      END
*         PRINT @(09,05):"of":@(12,05):PCNT"L#3":
      PRINT @(16,10):PCNT"L#3":
*T22322^
      LOOP
         PAL.ID = PALIDS<1,PPTR>
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE
            MAT WIPTP.REC = ""
         END
*T22322v
*        PRINT @(05,05):PPTR"R#3":
*        PRINT @(11,07):PAL.ID"L#8":
*        PRINT @(11,08):WIPTP.MLOC<1,1>"L#8":
*        PRINT @(11,09):OCONV(WIPTP.CQTY,"MD0,")"L#8":
*        PRINT @(11,10):WIPTP.TYPE"L#4":
*        PRINT @(01,11):WIPTP.DESC"L#20":
         PRINT @(09,10):PPTR"R#3":
         PRINT @(11,11):PAL.ID"L#8":
         PRINT @(11,12):WIPTP.MLOC<1,1>"L#8":
         PRINT @(11,13):OCONV(WIPTP.CQTY,"MD0,")"L#8":
*1048    TYP=1; X=3; Y=13; MAXL=1; O.R="O"; EX=0; EY=15; ERY=15
*        PMSG = "(P)rior, (N)ext:"
1048     TYP=1; X=17; Y=14; MAXL=1; O.R="O"; EX=0; EY=15; ERY=15
*T22322^
         CALL WIPT.INPUT
         GOSUB 89990
         BEGIN CASE
         CASE VALUE = "END"
         CASE (VALUE = "P" OR VALUE = "p") AND PPTR > 1
            PPTR = PPTR - 1
         CASE (VALUE = "" OR VALUE = "N" OR VALUE = "n") AND PPTR < PCNT
            PPTR = PPTR + 1
         CASE 1
            GOTO 1048
         END CASE
      UNTIL VALUE = "END" DO
      REPEAT
1049  RETURN
*
*---- CHANGE LOCATION
*
1050 *
      CALL WIPT.RF.CHG.LOC(ACTION,CONO,EMPID,MAT WIP.FILE.VARS)
      RETURN
*
*---- DEFINE PALLET
*
1060 *
      LOOP
1061     TYP=7; X=10; Y=3; MINL=8; MAXL=8; EX=0; EY=15; ERY=15
         PATRN="1A7N"
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN RETURN
         CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
         IF NOT(VALID) THEN
            ERRMSG = "INVALID PALLET ID"
            GOSUB 91000
            GOTO 1061
         END
         PAL.ID = VALUE
         MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
            PRINT @(10,3):PAL.ID"L#8":
            PRINT @(07,5):WIPTP.JOB"L#8":
            BEGIN CASE
            CASE WIPTP.VER = "" AND WIPTP.SIG = ""
               XFORM = WIPTP.FORM
            CASE WIPTP.SIG = ""
               XFORM = WIPTP.FORM:".":WIPTP.VER
            CASE 1
               XFORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
            END CASE
            PRINT @(07,6):XFORM"L#14":
            PRINT @(07,7):WIPTP.SKID"L#3":
            PRINT @(10,8):WIPTP.TO.OPER"L#3":
            PRINT @(11,10):WIPTP.CQTY"L#6":
            PRINT @(11,11):WIPTP.MLOC<1,1>"L#8":
*T22322v
*           PRINT @(1,13):WIPTP.DESC"L#20":
*           TYP=8; X=0; Y=14
            PRINT @(1,14):WIPTP.DESC"L#20":
            TYP=8; X=0; Y=15
*T22322^
            PMSG = "Continue?"
            CALL WIPT.INPUT
*T22322v
*           PRINT @(0,14):SPACE(21):
            PRINT @(0,15):SPACE(21):
*T22322^
            IF VALUE # "Y" THEN
               RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
               ESN=7; GOSUB 1000
               GOTO 1061
            END
            PREV.DEFINE.JOB = WIPTP.JOB
            PREV.DEFINE.FORM = XFORM
            PREV.DEFINE.SKID = WIPTP.SKID
            PREV.DEFINE.TYPE = WIPTP.TYPE
            PREV.DEFINE.QTY = WIPTP.CQTY
            PREV.DEFINE.LOC = WIPTP.MLOC<1,1>
            PREV.DEFINE.DESC = WIPTP.DESC
            PREV.JOB = WIPTP.JOB
            PREV.FORM = XFORM
         END LOCKED
            ERRMSG = "** Pallet Locked **"
            GOSUB 91000
            GOTO 1061
         END ELSE
            MAT WIPTP.REC = ""
            PREV.DEFINE.SKID = ""
            PREV.DEFINE.TYPE = ""
            PREV.DEFINE.QTY = ""
            PREV.DEFINE.LOC = ""
            PREV.DEFINE.DESC = ""
            PREV.JOB = ""
            PREV.FORM = ""
         END
         PLOC = WIPTP.MLOC<1,1>
         PQTY = WIPTP.CQTY
* DEF. PALLET - JOB PROMPT * VVV
1062     TYP=1; X=07; Y=5; MAXL=8; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.JOB # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.JOB
         END
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.JOB
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
         MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
            ERRMSG = "INVALID JOB NUMBER"
            GOSUB 91000
            GOTO 1062
         END
         JOB.NO = VALUE
* DEF. PALLET - COMPONENT PROMPT * VVV
1063     TYP=7; X=07; Y=6; MAXL=14; EX=0; EY=15; ERY=15
         IF JOB.NO = PREV.DEFINE.JOB AND PREV.DEFINE.FORM # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.FORM
         END
*T22322v
*        PATRN="1A0N":VM:"2A0N":VM:"0N":VM:"0N'.'0N":VM:"0N'.'0N'.'0N"
*        PATRN="0N'.'0N":VM:"0N"
      PATRN="0N'.'0N":VM:"0N'.'3A":VM:"3A'.'0N":VM:"3A'.'3A"
*T22322^
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.FORM
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
*        FORMNO = VALUE; GOSUB 85100
         FORMNO = VALUE; GOSUB 85101
         IF ERRMSG # "" THEN
            GOSUB 91000
            GOTO 1063
         END
* DEF. PALLET - SKID PROMPT * VVV
1064     TYP=3; X=07; Y=7; MAXL=3; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.SKID # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.SKID
         END
         JUSTIFY="L"
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.SKID
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
         SKID = VALUE
* DEF. PALLET - TO.OPER PROMPT * VVV
*KDS9807
*1065    TYP=1; X=07; Y=8; MAXL=3; EX=0; EY=15; ERY=15
1065     TYP=1; X=10; Y=8; MAXL=3; EX=0; EY=15; ERY=15
*KDS9807
         O.R="O"; DEFAULT=PREV.DEFINE.TYPE
*        VALDAT="V":VM:"S":VM:"VS":VM:"L":VM:"LV":VM:"LS":VM:"LVS"
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
         XTYPE = VALUE
1066     TYP=3; X=11; Y=10; MINL=1; MAXL=6; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.QTY # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.QTY
         END
         JUSTIFY="L"
         MINV=1; MAXV=999999
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.QTY
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
         QTY = VALUE
*T22322v
*1067    TYP=7; X=11; Y=11; MINL=4; MAXL=8; EX=0; EY=15; ERY=15
1067     TYP=1; X=11; Y=11; MINL=4; MAXL=8; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.LOC # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.LOC
         END
*        PATRN="1A1N1A0X":VM:"1A1N-0X"
*T22322^
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.LOC
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
*T22322v
         SL.LOC = VALUE; GOSUB 3000  ;* Check for Storage Loc Definition
         IF ERRMSG # "" THEN GOSUB 91000; GOTO 1067
*T22322^
         LOC = VALUE
*T22322v
*1068    TYP=1; X=1; Y=13; MAXL=20; EX=0; EY=15; ERY=15
1068     TYP=1; X=1; Y=14; MAXL=20; EX=0; EY=15; ERY=15
*T22322^
         O.R="O"; DEFAULT=PREV.DEFINE.DESC
         PATRN="1A1N1A0X":VM:"1A1N-0X"
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.DESC
         IF VALUE[1,20]=PREV.DEFINE.DESC[1,20] THEN VALUE=PREV.DEFINE.DESC
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1069
         DESC = VALUE
*
         MAT WIPTP.REC = ""
         CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
         IF NUM(FNUM) THEN
            WIPTP.PTYPE = ""
         END ELSE
            WIPTP.PTYPE = "I"
         END
         WIPTP.DATE  = CDATE
         WIPTP.TIME  = CTIME
         WIPTP.JOB   = JOB.NO
         WIPTP.FORM  = FNUM
         WIPTP.VER   = VNUM
*KDS9807
*        WIPTP.SIG   = SNUM
*KDS9807
         WIPTP.SKID  = SKID
         WIPTP.SEQ   = 500
         WIPTP.TYPE  = XTYPE
         WIPTP.IQTY  = QTY
         WIPTP.CQTY  = QTY
         WIPTP.DESC  = DESC
         WIPTP.MLOC  = LOC
         WIPTP.MDATE = CDATE
         WIPTP.MTIME = CTIME
         WIPTP.MEMP  = EMPID
         WIPTP.ACODE = "N"
         WIPTP.AQTY  = QTY
         WIPTP.ADATE = CDATE
         WIPTP.ATIME = CTIME
         WIPTP.AEMP  = EMPID
*
         CURR.JOB = WIPTP.JOB
         BEGIN CASE
         CASE WIPTP.VER = "" AND WIPTP.SIG = ""
            CURR.FORM = WIPTP.FORM
         CASE WIPTP.SIG = ""
            CURR.FORM = WIPTP.FORM:".":WIPTP.VER
         CASE 1
            CURR.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
         END CASE
         GOSUB 89100
*        IF GEN.SKID > 0 THEN WIPTP.SKID = GEN.SKID
         CALL WIPT.LOC.UPD(CONO,PAL.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
*NA      CALL WIPT.HIST.UPD(CONO,PLOC,PQTY,MAT WIPTP.REC,WIP.TRACK.HIST,ERRMSG)
         MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PAL.ID
         PREV.DEFINE.JOB = WIPTP.JOB
         BEGIN CASE
         CASE WIPTP.VER = "" AND WIPTP.SIG = ""
            PREV.DEFINE.FORM = WIPTP.FORM
         CASE WIPTP.SIG = ""
            PREV.DEFINE.FORM = WIPTP.FORM:".":WIPTP.VER
         CASE 1
            PREV.DEFINE.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
         END CASE
1069 *
         PRINT @(10,03):@(-4):
         PRINT @(07,05):@(-4):
         PRINT @(07,06):@(-4):
         PRINT @(07,07):@(-4):
         PRINT @(10,08):@(-4):
         PRINT @(11,10):@(-4):
         PRINT @(11,11):@(-4):
         PRINT @(0,13):@(-4):
         PRINT @(0,14):@(-4):
         GOSUB 89990
         RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
      REPEAT
      RETURN
*
*T22322vvv
*---- UPDATE PALLET
*
1070 *
      LOOP
1071     IF EMPNAME # "" THEN PRINT @(1,2):EMPNAME"L#20":
         GOSUB 89990
         TYP=1; X=11; Y=4; MAXL=8; EX=0; EY=15; ERY=15
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN RETURN
         CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
         IF NOT(VALID) THEN
            ERRMSG = "INVALID PALLET ID"
            GOSUB 91000
            GOTO 1071
         END
         PAL.ID = VALUE
         MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
            PRINT @(11,4):PAL.ID"L#8":
            PRINT @(11,5):WIPTP.JOB"L#8":
            BEGIN CASE
            CASE WIPTP.VER = "" AND WIPTP.SIG = ""
               XFORM = WIPTP.FORM
            CASE WIPTP.SIG = ""
               XFORM = WIPTP.FORM:".":WIPTP.VER
            CASE 1
               XFORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
            END CASE
            PRINT @(11,6):XFORM"L#8":
            PRINT @(11,7):WIPTP.SKID"L#3":
            PRINT @(11,8):WIPTP.TO.OPER"L#3":
            PRINT @(11,9):WIPTP.TO.JOB"L#8":
            PRINT @(11,10):WIPTP.MLOC<1,1>"L#8":
            PRINT @(11,11):WIPTP.CQTY"L#6":
            PRINT @(11,12):WIPTP.CARTONS"L#3":
            PREV.DEFINE.QTY = WIPTP.CQTY
            PREV.DEFINE.CARTONS = WIPTP.CARTONS
1072* CHECK TO SEE IF THEY WANT TO CONTINUE
            TYP=8; X=0; Y=13
            PMSG = "Change quantity?"
            CALL WIPT.INPUT
            PRINT @(0,13):SPACE(21):
            IF VALUE # "Y" THEN
               IF PREV.DEFINE.QTY # WIPTP.CQTY OR PREV.DEFINE.CARTONS # WIPTP.CARTONS THEN
                  GOTO 1078 ;* Get the File or Exit option
               END ELSE
                  RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
                  ESN=8; GOSUB 1000
                  GOTO 1071
               END
            END
         END LOCKED
            ERRMSG = "** Pallet Locked **"
            GOSUB 91000
            GOTO 1071
         END ELSE
            ERRMSG = "*INVALID PALLET ID*"
            GOSUB 91000
            GOTO 1071
         END
         PLOC = WIPTP.MLOC<1,1>
1073 * Prompt for New Quantity
      TYP=1; X=11; Y=11; MAXL=6; O.R="O"; EX=0; EY=15; ERY=15
      DEFAULT = WIPTP.CQTY
      PATRN="0N":VM:"'+'0N":VM:"'-'0N"
      CALL WIPT.INPUT
      GOSUB 89990
      IF VALUE = "" THEN VALUE = DEFAULT
      BEGIN CASE
      CASE VALUE = "END"
         RELEASE WIP.TRACK.PALLET,CONO:PAL.ID
         ESN=8; GOSUB 1000
         GOTO 1071
      CASE VALUE[1,1] = "+" AND NUM(VALUE[2,99])
         VALUE = VALUE[2,99]
         WIPTP.CQTY = WIPTP.CQTY + VALUE
         PRINT @(11,11):WIPTP.CQTY"L#6"
         GOSUB 89990
      CASE VALUE[1,1] = "-" AND NUM(VALUE[2,99])
         VALUE = VALUE[2,99]
         WIPTP.CQTY = WIPTP.CQTY - VALUE
         IF WIPTP.CQTY < 0 THEN WIPTP.CQTY = 0
         PRINT @(11,11):WIPTP.CQTY"L#6":@(-4):
         GOSUB 89990
      CASE NUM(VALUE)
         WIPTP.CQTY = VALUE
      CASE 1
         ERRMSG = "**INVALID RESPONSE**"
         GOSUB 91000
         GOTO 1073
      END CASE
1074 * Check for Finished Goods flag.  Prompt for Cartons if 'Y'
      SL.LOC = WIPTP.MLOC<1,1>
      GOSUB 3000
      IF WIPSL.RANGE.FG = "Y" THEN
1075     TYP=1; X=11; Y=12; MAXL=3; EX=0; EY=15; ERY=15; O.R = "O"
         DEFAULT=WIPTP.CARTONS
         PATRN = "0N":VM:"'+'0N":VM:"'-'0N"
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "" THEN VALUE = DEFAULT
         BEGIN CASE
         CASE VALUE = "END"
            RELEASE WIP.TRACK.PALLET,CONO:PAL.ID
            ESN=8; GOSUB 1000
            GOTO 1071
         CASE VALUE[1,1] = "+" AND NUM(VALUE[2,99])
            VALUE = VALUE[2,99]
            WIPTP.CARTONS = WIPTP.CARTONS + VALUE
            PRINT @(11,12):WIPTP.CARTONS"L#3"
            GOSUB 89990
         CASE VALUE[1,1] = "-" AND NUM(VALUE[2,99])
            VALUE = VALUE[2,99]
            WIPTP.CARTONS = WIPTP.CARTONS - VALUE
            IF WIPTP.CARTONS < 0 THEN WIPTP.CARTONS = 0
            PRINT @(11,12):WIPTP.CARTONS"L#3":@(-4):
            GOSUB 89990
*T22322*v
*         CASE NUM(VALUE)
         CASE NUM(VALUE) OR VALUE = "S"
*T22322*^
            WIPTP.CARTONS = VALUE
         CASE 1
            ERRMSG = "**INVALID RESPONSE**"
            GOSUB 91000
            GOTO 1075
         END CASE
      END
      GOTO 1072
*
1078 * Prompt for Option to File or Exit
      TYP=1; X=16; Y=14; MAXL=1; EX=0; EY=15; ERY=15
      CALL WIPT.INPUT
      GOSUB 89990
      BEGIN CASE
      CASE VALUE = "END" OR VALUE = "E"
         RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
      CASE VALUE = "F"
        CDATE = DATE(); CTIME = TIME(); IF CTIME < 10 THEN CDATE = DATE()
        AQTY = WIPTP.CQTY - PREV.DEFINE.QTY
*T22322*v
*        ACARTONS = WIPTP.CARTONS - PREV.DEFINE.CARTONS
        IF WIPTP.CARTONS = "S" THEN
           ACARTONS = -PREV.DEFINE.CARTONS
        END ELSE
           ACARTONS = WIPTP.CARTONS - PREV.DEFINE.CARTONS
        END
*T22322*^
        WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0;"C")
        WIPTP.AQTY = INSERT(WIPTP.AQTY,1,1,0;AQTY)
        WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0;CDATE)
        WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0;CTIME)
        WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0;EMPID)
        WIPTP.ACARTONS = INSERT(WIPTP.ACARTONS,1,1,0;ACARTONS)
        MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PAL.ID
      END CASE
1079 *
         PRINT @(11,4):@(-4):
         PRINT @(11,5):@(-4):
         PRINT @(11,6):@(-4):
         PRINT @(11,7):@(-4):
         PRINT @(11,8):@(-4):
         PRINT @(11,9):@(-4):
         PRINT @(11,10):@(-4):
         PRINT @(11,11):@(-4):
         PRINT @(11,12):@(-4):
         GOSUB 89990
         RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
      REPEAT
   RETURN
*T22322^
*
*---- PICK-UP PALLET
*
1090 *
      RTYPE = "P"
      MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" ELSE MAT WIPTR.REC = ""
      REQFND = 0
      RCNT = DCOUNT(WIPTR.DATE,VM)
      FOR RPTR = 1 TO RCNT UNTIL REQFND
         BEGIN CASE
         CASE RTYPE # WIPTR.TYPE<1,RPTR>
         CASE WIPTR.USER<1,RPTR> # ""
         CASE 1
            REQFND = 1
            MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:WIPTR.PALLET<1,RPTR> ELSE
               MAT WIPTP.REC = ""
               WIPTP.JOB = "????"
               WIPTP.FORM = "????"
            END
            BEGIN CASE
            CASE WIPTP.VER = "" AND WIPTP.SIG = ""
               FORM.NO = WIPTP.FORM
            CASE WIPTP.SIG = ""
               FORM.NO = WIPTP.FORM:".":WIPTP.VER
            CASE 1
               FORM.NO = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
            END CASE
            PRINT @(11,3):WIPTR.PALLET<1,RPTR>:
            PRINT @(11,4):WIPTR.CCTR<1,RPTR>[4,99]:
            PRINT @(07,6):WIPTP.JOB:
            PRINT @(07,7):FORM.NO:
            WIPTR.USER<1,RPTR> = USER.ID
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         END CASE
      NEXT RPTR
*
      IF REQFND THEN
         TYP=1; MAXL=3; X=11; Y=9; EX=0; EY=15; ERY=15
         VALDAT = "Y":VM:"N":VM:"DEL"
         CALL WIPT.INPUT
         GOSUB 89990
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" THEN
            LOCATE USER.ID IN WIPTR.USER<1>,1 SETTING RPTR THEN
               BEGIN CASE
               CASE VALUE = "END"
                  WIPTR.USER<1,RPTR> = ""
               CASE VALUE = "Y" OR VALUE = "N" OR VALUE = "DEL"
                  FOR N = 1 TO WIPTR.REC.SIZE
                     WIPTR.REC(N) = DELETE(WIPTR.REC(N),1,RPTR,0)
                  NEXT N
                  IF VALUE = "Y" THEN OPTION = "2"
               END CASE
            END
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         END ELSE
            RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
         END
      END ELSE
         RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
         PRINT @(10,3):"**NONE**":
         SLEEP 3
      END
      RETURN
*
*KDS9902
*
*---- PALLET LOCATION CLEAN-UP
*
1100 *
   IF EMPNAME # "" THEN PRINT @(1,4):EMPNAME "L#20"
   TYP=1; X=11; Y=7; MINL=4; MAXL=8
   EX=0; EY=9; ERY=9
   CALL WIPT.INPUT
   IF VALUE = "END" OR VALUE = "" THEN RETURN
   MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, CONO:VALUE:"*":VALUE ELSE
      ERRMSG = "INVALID LOCATION"
      GOSUB 91000
      GOTO 1100
   END
   IF WIPSL.RANGE.ZERO = "Y" THEN
      ERRMSG = "CONSUMING LOCATION"
      GOSUB 91000
      GOTO 1100
   END
   PAL.LOC = VALUE
1120*
   TYP=7; X=11; Y=9; MINL=8; MAXL=8; EX=0; EY=9; ERY=9 
   PATRN="1A7N"
   O.R="O"; DEFAULT=""
   CALL WIPT.INPUT
   GOSUB 89990
   IF VALUE = "" OR VALUE = "END" THEN GOTO 1130
   CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
   IF NOT(VALID) THEN
      ERRMSG = "INVALID PALLET ID"
      GOSUB 91000
      GOTO 1120
   END
   PAL.ID = VALUE
   MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE
      ERRMSG = "PALLET NOT ON FILE"
      GOSUB 91000
      GOTO 1120
   END
*
   IF WIPTP.CQTY = 0 THEN
      PRINT @(1,11):BEL:BEL:BEL:"Quantity:":
      TYP=1; X=11; Y=11; MAXL=6; EX=0; EY=0; ERY=9
      CALL WIPT.INPUT
      PAL.QTY = VALUE
   END ELSE
      PAL.QTY = WIPTP.CQTY
   END
*
   BPTPA.LOC = PAL.LOC
   BPTPA.QTY = PAL.QTY
   MATWRITE BPTPA.REC ON BP.TEMP.PALLET.ADJ, CONO:PAL.ID
   PRINT @(1,11):@(-4):
   GOTO 1120
*
1130*
   STMT = 'SELECT WIP.TRACK.PALLET WITH CURR.LOC= "':PAL.LOC:'"'
   PERFORM STMT CAPTURING GARBAGE
1140*
   READNEXT TEMP.ID ELSE GOTO 1150
   CDATE=DATE(); CTIME=TIME(); IF CTIME<10 THEN CDATE=DATE()
   TEMP.FOUND = "Y"
   MATREAD BPTPA.REC FROM BP.TEMP.PALLET.ADJ, TEMP.ID ELSE TEMP.FOUND="N"
   MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, TEMP.ID ELSE MAT WIPTP.REC=""
   IF TEMP.FOUND = "Y" THEN
      WIPTP.CQTY = BPTPA.QTY
      IF WIPTP.MLOC<1,1> # BPTPA.LOC THEN
         PLOC = WIPTP.MLOC<1,1>
         WIPTP.MLOC  = INSERT(WIPTP.MLOC,1,1,0,BPTPA.LOC)
         WIPTP.MDATE = INSERT(WIPTP.MDATE,1,1,0,CDATE)
         WIPTP.MTIME = INSERT(WIPTP.MTIME,1,1,0,CTIME)
         WIPTP.MEMP  = INSERT(WIPTP.MEMP,1,1,0,"9999")
         CALL WIPT.LOC.UPD(CONO,TEMP.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
      END
      MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, TEMP.ID
      DELETE BP.TEMP.PALLET.ADJ, TEMP.ID
   END ELSE
      MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, TEMP.ID ELSE MAT WIPTP.REC=""
      PLOC = WIPTP.MLOC<1,1>
      WIPTP.MLOC  = INSERT(WIPTP.MLOC,1,1,0,"LOST")
      WIPTP.MDATE = INSERT(WIPTP.MDATE,1,1,0,CDATE)
      WIPTP.MTIME = INSERT(WIPTP.MTIME,1,1,0,CTIME)
      WIPTP.MEMP  = INSERT(WIPTP.MEMP,1,1,0,"9999")
      CALL WIPT.LOC.UPD(CONO,TEMP.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
      MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, TEMP.ID
   END
   GOTO 1140
*
1150
   STMT = 'SELECT BP.TEMP.PALLET.ADJ WITH BPTPA.LOC= "':PAL.LOC:'"'
   PERFORM STMT CAPTURING GARBAGE
1160*
*  READNEXT TEMP.ID ELSE GOTO 1199
   READNEXT TEMP.ID ELSE GOTO 1100
   CDATE=DATE(); CTIME=TIME(); IF CTIME<10 THEN CDATE=DATE()
   MATREAD BPTPA.REC FROM BP.TEMP.PALLET.ADJ,TEMP.ID ELSE MAT BPTPA.REC=""
   MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, TEMP.ID ELSE MAT WIPTP.REC=""
   WIPTP.CQTY = BPTPA.QTY
   PLOC = WIPTP.MLOC<1,1>
   WIPTP.MLOC  = INSERT(WIPTP.MLOC,1,1,0,BPTPA.LOC)
   WIPTP.MDATE = INSERT(WIPTP.MDATE,1,1,0,CDATE)
   WIPTP.MTIME = INSERT(WIPTP.MTIME,1,1,0,CTIME)
   WIPTP.MEMP  = INSERT(WIPTP.MEMP,1,1,0,"9999")
   CALL WIPT.LOC.UPD(CONO,TEMP.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
   MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, TEMP.ID
   DELETE BP.TEMP.PALLET.ADJ, TEMP.ID
   GOTO 1160
*
1199*
   RETURN
*
*KDS9902
*
*---- UPDATE PALLET LOCATION
*
2000 *
      PREV.LOC = WIPTP.MLOC<1,1>
      IF NEWLOC # "" AND NEWLOC # WIPTP.MLOC<1,1> THEN
         CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
         WIPTP.MLOC  = INSERT(WIPTP.MLOC,1,1,0,NEWLOC)
         WIPTP.MDATE = INSERT(WIPTP.MDATE,1,1,0,CDATE)
         WIPTP.MTIME = INSERT(WIPTP.MTIME,1,1,0,CTIME)
         WIPTP.MEMP  = INSERT(WIPTP.MEMP,1,1,0,EMPID)
*T22322v
*         IF NEWLOC = "VENDOR" OR NEWLOC = "SHREDDER" THEN
*            IF NEWLOC = "VENDOR" THEN ACODE = "V" ELSE ACODE = "S"
         IF WIPSL.RANGE.ZERO = "Y" THEN
            ACODE = "S"  ;* 'S' for Storage Loc Defined Zero
*T22322^
            WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,ACODE)
            WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,(-WIPTP.CQTY))
            WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
            WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
            WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0,EMPID)
            WIPTP.CQTY = 0
*T22322v
*T22322*v
*            WIPTP.ACARTONS = INSERT(WIPTP.ACARTONS,1,1,0,(-WIPTP.CARTONS))
            WIPTP.ACARTONS = INSERT(WIPTP.ACARTONS,1,1,0,("-":WIPTP.CARTONS))
*T22322*^
            WIPTP.CARTONS = 0
*T22322^
         END
*T22322v
*         IF PREV.LOC = "VENDOR" OR PREV.LOC = "SHREDDER" THEN
*        SL.LOC = PREV.LOC; GOSUB 3000
*KDS9808
*        SL.LOC = NEWLOC; GOSUB 3000
*        IF WIPSL.RANGE.ZERO = "Y" THEN
*           WIPTP.CARTONS = -WIPTP.ACARTONS<1,1>
*           WIPTP.ACARTONS = INSERT(WIPTP.ACARTONS,1,1,0,WIPTP.CARTONS)
*T22322^
*           WIPTP.CQTY = -WIPTP.AQTY<1,1>
*           WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,WIPTP.ACODE<1,1>)
*           WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,WIPTP.CQTY)
*           WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
*           WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
*           WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0,EMPID)
*        END
      END
      RETURN
*
*T22322v
*---- Get the WIPT.STORAGE.LOC definition for a specific location
*
3000 *
      ERRMSG = ""
      STMT = 'SSELECT WIPT.STORAGE.LOC WITH RANGE.START <= "':SL.LOC:'"'
      STMT = STMT:' AND WITH RANGE.END >= "':SL.LOC:'"'
      STMT = STMT:' AND WITH CONO = "':CONO:'"'
      PERFORM STMT CAPTURING GARBAGE
      MAT WIPSL.REC = ""
      READNEXT SL.ID THEN
         MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, SL.ID ELSE MAT WIPSL.REC = ""
      CLEARSELECT
      END ELSE
         ERRMSG = "*Undefined Location*"
      END
      RETURN
*
*KDS9806A
*- Get the location that the prior similar pallet was stored.
*
20000 *
      MAT SAVE.WIPTP.REC = MAT WIPTP.REC
      STMT = 'SELECT WIP.TRACK.PALLET WITH WIPTP.JOB= "':WIPTP.JOB:'"'
*KDS9810
*     STMT = STMT:' AND WITH WIPTP.FORM= "':WIPTP.FORM:'"'
*     STMT = STMT:' AND WITH WIPTP.VER= "':WIPTP.VER:'"'
*     STMT = STMT:' AND WITH CURR.LOC# "':WIPTP.MLOC<1,1>:'"'
      I.LOC = DCOUNT(WIPTP.MLOC<1>,VM)
      INITIAL.LOC = FIELD(WIPTP.MLOC<1>,VM,I.LOC)
      STMT = STMT:' AND WITH INIT.LOC= "':INITIAL.LOC:'"'
*KDS9906
      STMT = STMT:' AND WITH CURR.LOC# "':INITIAL.LOC:'"'
*     STMT = STMT:' AND WITH BP.LOC.CT = 2'
*KDS9906
*KDS9810
      STMT = STMT:' AND WITH CONO = "':CONO:'"'
      STMT = STMT:' BY.DSND CURR.DATE BY.DSND BP.CURR.TIME.5 '
      PERFORM STMT CAPTURING GARBAGE
      READNEXT WIPTP.ID THEN
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, WIPTP.ID ELSE MAT WIPTP.REC = ""
         CLEARSELECT
         PRIOR.PALID = WIPTP.ID[4,99]
         PRIOR.PALLOC= WIPTP.MLOC<1,1>
      END ELSE
         PRIOR.PALID = ""
         MAT WIPTP.REC = MAT SAVE.WIPTP.REC
         PRIOR.PALLOC = WIPTP.MLOC<1,1>
      END
      MAT WIPTP.REC = MAT SAVE.WIPTP.REC
      RETURN
*KDS9806A
*
*KDS9807A
*- Log the user out of the Locator system
*
80000 *
      MATREAD WIPTE.REC FROM WIP.TRACK.CONTROL, CONO:"EMP" ELSE RETURN
*
      LOCATE USER.ID IN WIPTE.USER<1> SETTING EPTR THEN
         WIPTE.USER = DELETE(WIPTE.USER,1,EPTR,0)
         WIPTE.EMP  = DELETE(WIPTE.EMP,1,EPTR,0)
         MATWRITE WIPTE.REC ON WIP.TRACK.CONTROL, CONO:"EMP"
      END
*
      RETURN
*KDS9807A
*
*---- FORMAT FORM NUMBER
*
*KDS9806   CHANGED 85100 TO 85101
85100 *
      ERRMSG = ""
      FNUM = FIELD(FORMNO,".",1)
      VNUM = FIELD(FORMNO,".",2)
      SNUM = FIELD(FORMNO,".",3)
      BEGIN CASE
      CASE NUM(FNUM)
         BEGIN CASE
         CASE FNUM = ""
            ERRMSG = 1
         CASE FNUM = 0
            ERRMSG = 1
*T22322v
*         CASE LEN(FNUM) > 4
         CASE LEN(FNUM) > 3
*T22322^
            ERRMSG = 1
         CASE 1
*T22322v
*            FNUM = (10000+FNUM)[2,4]
            FNUM = (1000+FNUM)[2,3]
*T22322^
            BEGIN CASE
*T22322v
*            CASE VNUM = "" AND SNUM = ""
            CASE VNUM = ""
*T22322^
               FORMNO = FNUM
*T22322            CASE VNUM = ""
*T22322               ERRMSG = 2
            CASE VNUM = 0
               ERRMSG = 2
            CASE LEN(VNUM) > 3
               ERRMSG = 2
            CASE 1
               VNUM = (1000+VNUM)[2,3]
*T22322               BEGIN CASE
*T22322               CASE SNUM = ""
                  FORMNO = FNUM:".":VNUM
*T22322               CASE SNUM = 0
*T22322                  ERRMSG = 3
*T22322               CASE LEN(SNUM) > 5
*T22322                  ERRMSG = 3
*T22322               CASE 1
*T22322                  SNUM = (100000+SNUM)[2,5]
*T22322                  FORMNO = FNUM:".":VNUM:".":SNUM
*T22322               END CASE
            END CASE
         END CASE
      CASE NUM(FNUM[2,99])
         BEGIN CASE
         CASE LEN(FNUM) = 2
*T22322v
*            FNUM = FNUM[1,1]:"00":FNUM[2,99]
            FNUM = FNUM[1,1]:"0":FNUM[2,99]
*T22322^
            FORMNO = FNUM
*T22322         CASE LEN(FNUM) = 3
*T22322            FNUM = FNUM[1,1]:"0":FNUM[2,99]
*T22322            FORMNO = FNUM
*T22322         CASE LEN(FNUM) = 4
         CASE 1
            ERRMSG = 1
         END CASE
      CASE NUM(FNUM[3,99])
         BEGIN CASE
         CASE LEN(FNUM) = 3
*T22322            FNUM = FNUM[1,2]:"0":FNUM[3,99]
            FORMNO = FNUM
*T22322         CASE LEN(FNUM) = 4
         CASE 1
            ERRMSG = 1
         END CASE
      END CASE
      BEGIN CASE
      CASE ERRMSG = 1
         ERRMSG = "Invalid form #, Try again! "
      CASE ERRMSG = 2
         ERRMSG = "Invalid run #, Try again! "
      CASE ERRMSG = 3
         ERRMSG = "Invalid sig #, Try again! "
      END CASE
      RETURN
*
85101 *
      ERRMSG = ""
      FNUM = FIELD(FORMNO,".",1)
      VNUM = FIELD(FORMNO,".",2)
*
      BEGIN CASE
         CASE LEN(FNUM) > 3 OR LEN(FNUM) < 1
            ERRMSG = 1
         CASE NUM(FNUM)
            BEGIN CASE
               CASE LEN(FNUM) = 1
                  FNUM = "00":FNUM
               CASE LEN(FNUM) = 2
                  FNUM = "0":FNUM
            END CASE
         CASE FNUM = "OSP"
         CASE FNUM = "FRN"
         CASE 1
            ERRMSG = 1
      END CASE
*
      BEGIN CASE
         CASE LEN(VNUM) > 3 OR LEN(VNUM) < 1
            ERRMSG = 1
         CASE NUM(VNUM)
            BEGIN CASE
               CASE LEN(VNUM) = 1
                  VNUM = "00":VNUM
               CASE LEN(VNUM) = 2
                  VNUM = "0":VNUM
            END CASE
         CASE 1
            MATREAD WIPTC.BPCODES.REC FROM WIP.TRACK.CONTROL, CONO:"BPCODES" ELSE MAT WIPTC.BPCODES.REC=""
            LOCATE VNUM IN WIPTC.BPCODES.CODE<1>,1 SETTING CODE.FOUND ELSE
               ERRMSG = 1
            END
      END CASE
*
      IF ERRMSG = 1 THEN
         ERRMSG = "Invalid component #, Try again! "
      END ELSE
         FORMNO = FNUM:".":VNUM
      END
      RETURN
*
*---- UPDATE X-REF DATA
*
89100 *
      CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PAL.ID,GEN.SKID,ERRMSG)
      RETURN
*
*---- DRAW BORDER
*
89990 *
RETURN
      FOR SL = 1 TO 16
         PRINT @(21,(SL-1)):"|":
      NEXT SL
      PRINT @(0,16):"---------------------+":
      RETURN
*
*---- ERROR ROUTINE
*
91000 *
      PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,ERY):@(-4):
      GOSUB 89990
      ERY = 15
      RETURN
93000 *
      PRINT @(0,15):@(-4):ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,15):@(-4):
      GOTO 99999
*
*---- END OF PROGRAM
*
99999 *
*KDS9807A
      GOSUB 80000
*KDS9807A
      PRINT @(-1):
   END
