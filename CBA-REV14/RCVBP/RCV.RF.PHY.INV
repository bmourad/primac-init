  SUBROUTINE RCV.RF.PHY.INV (ACTION, CONO, EMPID, MAT RCV.FILE.VARS)
*********************************************************************
*
* PROGRAM  - RCV.RF.PHY.INV
*
* AUTHOR   - Alejandro Delgado
*
* DATE     - 06/21/2002
*
* DESCRIPTION
*
* This program is used to process physical inventory transactionss
* from the hand-held R-F units used in the warehouse.
*
*T26674 adelgado 06/21/2002 * Original Code
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>RCV.CPYLIB>RCV.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>CPYLIB>SCREEN.COM
*COPY>PMC.CPYLIB>DIVISION
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>PHY.INV
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- OPEN ALL FILES
*
  OPEN "","PHY.INV" TO PHY.INV ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","PHY.XREF" TO PHY.XREF ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000
  END
  OPEN '','DAILY_TRANSFER' TO DAILY_TRANSFER ELSE
    ERRMSG = 'FILE MISSING'
    GOSUB 93000
  END
  OPEN '','TRANSFER' TO TRANSFER ELSE
    ERRMSG = 'FILE MISSING'
    GOSUB 93000
  END
  OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                     
  END                                              
  OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                              
  END                                                       
  OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                              
  END                                                       
  OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                              
  END                                                       
  OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                          
  END                                                   
  OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                         
  END                                                  
  OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                            
  END                                                     
  OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE 
    ERRMSG = 'FILE MISSING'
    GOTO 93000                                            
  END                                                     
*
*---- INITIALIZATION
*
  MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ''
  REAL.TIME = 1
  TEST.MODE = 0
  IF LEN(ACTION) > 1 THEN
    IF ACTION[LEN(ACTION),1] = "T" THEN
      TEST.MODE = 1
    END
  END
  SPX = ""
  EMPNAME = "???????????????"
  MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
    EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
  END
  IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
  EMPNAME = SPX:EMPNAME
*
*---- INITIALIZE SCREEN.COM
*
  MAT S$EDIT = ""
  S$TYP = 0
  CALL RF.INPUT
  GOSUB 89990
  S$MASK = "#"
  ERY = 15
*
*---- DISPLAY SCREEN
*
  DIM SCRN(15)
  MAT SCRN = ""
  GOSUB PRINT.SCREEN
*
*---- MAIN PROCESSING
*
  ALL.DONE = 0
  LOOP
    GOSUB INIT.VARS
    GOSUB GET.SEQ
    IF SEQ.NO # '' THEN
      IF LOC.NO = '' THEN GOSUB GET.LOC
      IF LOC.NO = '' THEN CONTINUE
      IF DATE.ENT = '' THEN GOSUB GET.DATE
      IF DATE.ENT = '' THEN CONTINUE
      PRINT @(7,07):LOC.NO
      PRINT @(7,08):OCONV(DATE.ENT,'D2/')
    END ELSE
      ALL.DONE = 1
    END
  UNTIL (ALL.DONE) DO
    CALL RCV.RF.PHY.INV.SUB(ACTION,CONO,EMPID,MAT RCV.FILE.VARS,MAT PHYSI.REC,SEQ.NO,PHY.XREF)
    GOSUB PRINT.SCREEN
    PRINT @(00,02):EMPNAME:
    PRINT @(7,05):SEQ.NO
    PRINT @(7,06):WHSE.NO
    PRINT @(7,07):LOC.NO
    PRINT @(7,08):OCONV(DATE.ENT,'D2/')
    GOSUB BOTTOM.PROMPT
  REPEAT
  *
  RETURN
*
PRINT.SCREEN: 
*
  XXXXXXXX = " 01234567890123456789 "
  XXXXXXXX = "+--------------------+"
  SCRN(01) = "| PHYSICAL INVENTORY |"
  SCRN(02) = "|--------------------|"
  SCRN(03) = "|@@@@@@@@@@@@@@@@@@@@|"
  SCRN(04) = "|--------------------|"
  SCRN(05) = "|                    |"
  SCRN(06) = "|Seq  : ###########  |"
  SCRN(07) = "|Whse : ####         |"
  SCRN(08) = "|Loc  : ####         |"
  SCRN(09) = "|Date : ########     |"
  SCRN(10) = "|                    |"
  SCRN(11) = "|--------------------|"
  SCRN(12) = "|                    |"
  SCRN(13) = "|  (F)ile or e(X)it  |"
  SCRN(14) = "|                    |"
  SCRN(15) = "|Selection ? #       |"
  XXXXXXXX = "+--------------------+"
  XXXXXXXX = " 01234567890123456789 "
*
  SLINE = @(-1)
  FOR SL = 0 TO 14
    SDATA = SCRN(SL+1)[2,20]
    CONVERT "#" TO " " IN SDATA
    CONVERT "@" TO " " IN SDATA
    SDATA = TRIMB(SDATA)
    LDATA = LEN(SDATA)
    LDONE = 0
    FOR N = 1 TO LDATA UNTIL LDONE
      IF SDATA[N,1] # " " THEN
        SLINE = SLINE:@((N-1),(SL)):SDATA[N,99]
        LDONE = 1
      END
    NEXT N
  NEXT SL
  PRINT SLINE:
  GOSUB 89990
  *
  RETURN
*
INIT.VARS: 
*
  RELEASE
  ;* CLEAR SCREEN FIRST
  PRINT @(00,02):EMPNAME:
  PRINT @(7,05):@(-4):
  PRINT @(7,06):@(-4):
  PRINT @(7,07):@(-4):
  PRINT @(7,08):@(-4):
  PRINT @(12,14):@(-4):
  GOSUB 89990
  ;* CLEAR VARIABLES
  SEQ.NO = '' ; DATE.ENT = ''
  WHSE.NO = '' ; LOC.NO = ''
  *
  RETURN
*
GET.SEQ: 
*
  LOOP.DONE = 0
  LOOP
    S$TYP=1; S$X=7; S$Y=5; S$MINL=1; S$MAXL=11; S$EX=0; S$EY=15; ERY=15 
    S$O.R="O"; S$DEFAULT=""
    CALL RF.INPUT
    GOSUB 89990
    IF S$VALUE = 'END' OR S$VALUE = '' THEN
      LOOP.DONE = 1
    END ELSE
      MATREADU PHYSI.REC FROM PHY.INV, CONO:S$VALUE LOCKED
        ERRMSG = 'SEQUENCE LOCKED' ; GOSUB 91000
      END THEN
        PRINT @(7,06):PHYSI.WHSE
        PRINT @(7,07):PHYSI.LOC
        WHSE.NO = PHYSI.WHSE
        LOC.NO = PHYSI.LOC
        DATE.ENT = PHYSI.MAINT.DATE
        SEQ.NO = S$VALUE
        LOOP.DONE = 1
      END ELSE
        ERRMSG = 'INVALID SEQ' ; GOSUB 91000
      END
    END
  UNTIL (LOOP.DONE) DO REPEAT
  *
  RETURN
*
GET.LOC: 
*
  S$TYP=1; S$X=7; S$Y=7; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15 
  S$O.R="R"; S$DEFAULT=""
  CALL RF.INPUT
  GOSUB 89990
  IF S$VALUE # 'END' THEN
    LOC.NO = S$VALUE
    PHYSI.LOC = LOC.NO
  END
  *
  RETURN
*
GET.DATE: 
*
  S$TYP=6; S$X=7; S$Y=8; S$MINL=1; S$MAXL=8; S$EX=0; S$EY=15; ERY=15 
  S$O.R="R"; S$DEFAULT=OCONV(DATE(),'D2/')
  CALL RF.INPUT
  GOSUB 89990
  IF S$VALUE # 'END' THEN
    DATE.ENT = S$VALUE
    PHYSI.MAINT.DATE = DATE.ENT
  END
  *
  RETURN
*
BOTTOM.PROMPT: 
*
  LOOP.DONE = 0
  LOOP
    S$TYP=1; S$X=12; S$Y=14; S$MINL=1; S$MAXL=1; S$EX=0; S$EY=15; ERY=15 
    S$O.R="R"; S$DEFAULT=""
    CALL RF.INPUT
    GOSUB 89990
    RESP = S$VALUE
    BEGIN CASE
      CASE RESP = 'X'
        LOOP.DONE = 1
      CASE RESP = 'F'
        PHYSI.OPER.ID = EMPID
        MATWRITE PHYSI.REC ON PHY.INV, CONO:SEQ.NO
        LOOP.DONE = 1
      CASE 1
        ERRMSG = 'INVALID RESPONSE'
        GOSUB 91000
    END CASE
  UNTIL (LOOP.DONE) DO
  REPEAT
  *
  RETURN
*
*---- DRAW BORDER
*
89990 *
  IF TEST.MODE THEN
    FOR SL = 1 TO 15
      PRINT @(20,(SL-1)):"|":
    NEXT SL
    PRINT @(0,15):"--------------------+":
  END
  RETURN
*
*---- ERROR ROUTINE
*
91000 *
  PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG[1,19]:
  INPUT REPLY,1:
  PRINT @(0,ERY):@(-4):
  ERY = 15
  RETURN
93000 *
  GOSUB 91000
*
*---- END OF PROGRAM
*
99999 *
  RETURN
END
