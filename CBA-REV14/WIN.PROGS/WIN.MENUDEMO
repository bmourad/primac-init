* WIN.MENUDEMO
* Menus demonstration
* Compile for: GENERIC AP MD ME PI PR SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-97. Impact Business Systems
*
      PROMPT ''
      C22 = @(0,22):@(-4)
      C23 = @(0,23):@(-4)
      CMSG = @(0,20):@(-4)
AMVM=1; AMVM<1,2>=2; AMVM<2>=3
AM=AMVM[4,1]
VM=AMVM[2,1]
*
      PRINT @(-1):"WIN.MENUDEMO":
      PRINT @(20,0):"Windows Menus demonstration":
      PRINT @(71,0):OCONV(DATE(),"D2"):
      CALL WIN.BOX(0,1,79,1,1)
*
      PRINT @(0,3):"This program demonstrates using Windows menus from the host"
      PRINT
      PRINT "Before any menu can be used they need to be defined with:-"
      PRINT "   CALL WIN.MENULOAD(MENU, DEF)"
      PRINT
      PRINT "Once loaded a menu can be popped up with:-"              
      PRINT "   CALL WIN.POPUPIN(MENU,X,Y,RET.MENU,RET.OPT)"
      PRINT "or attached to another menu with:-"
      PRINT "   CALL WIN.MENUATT(MAINMENU, MENU, TITLE, BEFORE)"
      PRINT "and then interrogated with:-"
      PRINT "   CALL WIN.MENUIN(MAINMENU,MENU, RET.MENU, RET.OPT)"
      PRINT
      PRINT "To delete the menu when it has been finished with use:-"
      PRINT "   CALL WIN.MENUDEL(MENU)"
*
* First define submenu
      SUBDEF = ''
      SUBDEF<1>="&Creating"
      SUBDEF<2>="&Attaching"
      SUBDEF<3>="&Displaying"
      CALL WIN.MENULOAD("DemoSub",SUBDEF)
*
* Define Main menu
      DEF = ''
      DEF<-1>='&Format of DEF':VM:VM:"Description of DEF argument"
      DEF<-1>='&DEF used for this menu':VM:VM:"Definition used for this menu"
      DEF<-1>='&Popup arguments':VM:VM:"Arguments to WIN.POPUPIN"
      DEF<-1>='>&Submenus':VM:"DemoSub"
      DEF<-1>='Se&parators' 
      DEF<-1>='Setting menu &item state'
      DEF<-1>='-'
      DEF<-1>='Attaching to &MainMenu':VM:VM:"Details on attaching to main menu"
      DEF<-1>='&Attached to Main':VM:VM:"Attach/Unattach from main menu"
      DEF<-1>='-'
      DEF<-1>='E&xit Demo':VM:VM:"FIN the menu demonstration"
      NO.OPTS = DCOUNT(DEF,AM)
*
      PRINT C22:"Press <CR> to continue with demonstration":
      INPUT DUM:                                              
      PRINT C22:
*
      CALL WIN.MENULOAD("Demo",DEF)
*
      MENU.SHOW = 1
      FIN = 0
      MENU=''
      OPT=''
*
      LOOP
*
         IF MENU.SHOW = 1 THEN
            CALL WIN.POPUPIN("Demo",45,10,MENU,OPT)
         END ELSE
            CALL WIN.MENUIN("", "Demo", MENU, OPT)
         END
*                           
         PRINT @(0,18):@(-4):"Response, Menu = '":MENU:"', Option = '":OPT:"'":
*
         BEGIN CASE
            CASE MENU = ''
               IF OPT = 'ESC' THEN
                  PRINT CMSG:'This means no option has been selected from the menu':
               END ELSE PRINT CMSG:'This is keyboard input of ':OPT:
            CASE MENU = "Demo"
               PRINT CMSG:"This means the top level menu ":MENU:", had option ":OPT:' selected':
*
               BEGIN CASE
                  CASE OPT = 1; GOSUB 1100; * DEF definition
                  CASE OPT = 2; GOSUB 1200; * This Menus definition
                  CASE OPT = 3; GOSUB 1300; * POPUPIN info
                  CASE OPT = 5; GOSUB 1500; * Separator
                  CASE OPT = 6; GOSUB 1600; * Menu item state
                  CASE OPT = 8; GOSUB 1800; * Attach to main description
                  CASE OPT = 9; GOSUB 1900; * Toggle between popup and main
                  CASE OPT = NO.OPTS; FIN = 1 ; * Exit always at end of menu
               END CASE
            CASE MENU = "DemoSub"
               PRINT CMSG:"This means the sub menu ":MENU:", had option ":OPT:' selected':
*
               BEGIN CASE
                  CASE OPT = 1; GOSUB 3100; * Creating a submenu
                  CASE OPT = 2; GOSUB 3200; * Attaching a submenu
                  CASE OPT = 3; GOSUB 3300; * Displaying a submenu
*
               END CASE
         END CASE
*
      UNTIL FIN DO
      REPEAT
*
      IF MENU.SHOW = 2 THEN CALL WIN.MENUDET('',"Demo")
      CALL WIN.MENUDEL("Demo")
      CALL WIN.MENUDEL("DemoSub")
*
      PRINT C23:
      PRINT C22:"End of Demonstration, Press <CR> to continue":
      INPUT DUM:                         
*
      STOP
*
* Description of menu definition
1100  TITLE = "DEF definition"
      TEXT = "The DEF parameter of the WIN.MENULOAD subroutine"
      TEXT<-1>=" "
      TEXT<-1>="Each attribute of DEF is made up of up to three values"
      TEXT<-1>="1)   The Text for the attribute"
      TEXT<-1>="2)   Optional data to be sent to the host"
      TEXT<-1>="     or the submenu name (see below)"
      TEXT<-1>="3)   Help text for the status bar"  
      TEXT<-1>="If (1) starts with a '-' then it is a separator"
      TEXT<-1>="If (1) starts with a '>' then it leads to a submenu"
      TEXT<-1>="If (2) is omitted it sends the correct reponse for"
      TEXT<-1>="the WIN.MENUIN and WIN.POPUPIN routines."      
      GOSUB 5000; * Display text
      RETURN
*
* Show this menus definition
1200  TITLE = "Definition of this menu"
      TEXT = 'Text                   Command  Help                      '
      FOR J = 1 TO NO.OPTS
         LINE=@(0,J):DEF<J,1>    
         LINE=LINE : @(23,J):DEF<J,2>
         LINE=LINE : @(32,J):DEF<J,3>
         TEXT<-1>=LINE
      NEXT J
      GOSUB 5000; * Display Text
      RETURN
*
* WIN.POPUPUN arguments
1300  TITLE = "WIN.POPUPIN arguments"
      TEXT = "CALL WIN.POPUPIN(NAME,X,Y,RET.MENU, RET.OPT)"
      TEXT<-1>="  NAME menu name as specified with WIN.MENULOAD"
      TEXT<-1>="  X    Column position for top left of menu"
      TEXT<-1>="  Y    Row position for top right of menu"
      TEXT<-1>="  RET.MENU  Menu name of selection or '' if not a menu"
      TEXT<-1>="  RET.OPT   Menu option selected from RET.MENU"
      GOSUB 5000; * Display Text           
      RETURN
*
* Separators
1500  TITLE = "Separators"
      TEXT = "A separator of a horizontal bar is added to"
      TEXT<-1>="a menu by specifying a '-' on the line of the"
      TEXT<-1>="menu definition used in WIN.MENULOAD"
      GOSUB 5000; * Display Text
      RETURN
*
* Setting a menu items state
1600  TITLE = "Setting a menu items state"
      TEXT = "A menu item can be Enabled, Disabled"
      TEXT<-1>="Checked or Unchecked"
      TEXT<-1>="To do this use:-"
      TEXT<-1>="  CALL WIN.MSTATE(NAME, OPTION, CHECK, ENABLE)"
      TEXT<-1>="Where NAME is the menu name"
      TEXT<-1>="      OPTION is the option number"
      TEXT<-1>="      CHECK  is 1 to check the option otherwise 0"
      TEXT<-1>="      ENABLE is 1 to enable the option otherwise 0"
      GOSUB 5000;* Display Text
      RETURN
*
* Attaching to main menu bar
1800  TITLE = "Putting the menu on the main menu bar"
      TEXT = "A menu can be added to the main menu bar with:-"
      TEXT<-1> = "  CALL WIN.MENUATT('',NAME,TITLE,POS)"
      TEXT<-1> = "The menu is then attached but disabled."
      TEXT<-1> = "Input from the menu is then received with:-"
      TEXT<-1> = "  CALL WIN.MENUIN('',MENU,RET.MENU, RET.OPT)"
      TEXT<-1> = "This enables the menu, gets some input and"
      TEXT<-1> = "then disables the menu again."
      TEXT<-1> = " "
      TEXT<-1> = "The menu can be detached from the mainmenu with:-"
      TEXT<-1> = "  CALL WIN.MENUDET('',MENU)"
      GOSUB 5000; * Display Text
      RETURN
*
* Attaching/Detaching in action
1900  IF MENU.SHOW = 1 THEN
         CALL WIN.MENUATT('', "Demo","&Demo","Help")
         CALL WIN.MSTATE("Demo",9,1,1)
         MENU.SHOW = 2
         PRINT C23:"Select menu option from the Demo menu on the main menu bar":
      END ELSE        
         CALL WIN.MENUDET('', "Demo")     
         CALL WIN.MSTATE("Demo",9,0,1)
         MENU.SHOW= 1
         PRINT C23:"Select the menu option from the Popup menu":
      END
      RETURN
*
* Creating a submenu
3100  TITLE = "Creating a submenu"
      TEXT = "A submenu is created in exactly the same way as"
      TEXT<-1>="a top level menu."
      TEXT<-1>=' '
      TEXT<-1>='The full menu tree must be created from the lowest'
      TEXT<-1>='submenu up.'
      TEXT<-1>=' '
      TEXT<-1>='This means in this program this submenu was created'
      TEXT<-1>='with WIN.MENULOAD before the main menu'
      GOSUB 5000; * Display Text
      RETURN
*
* Attaching a submenu
3200  TITLE = "Attaching a submenu"
      TEXT = "A submenu is attached to a menu by putting a >"
      TEXT<-1> = "symbol before the text for its parent menu."
      TEXT<-1>="The submenus name should be put in the second"
      TEXT<-1>="value of the definitions attribute."
      GOSUB 5000;* Display Text
      RETURN
*
* Diplaying a submenu
3300  TITLE = "Displaying a submenu"
      TEXT =  "Submenus are displayed when you highlight"
      TEXT<-1>="the option with the mouse or press RightArrow"
      TEXT<-1>="if using the cursor to select the option"
      GOSUB 5000;* Display Text
      RETURN
*
* Display Text in a centered text window
5000  N = DCOUNT(TEXT,AM)
      M = LEN(TITLE)
      FOR J = 1 TO N
         IF LEN(TEXT<J>) > M THEN M = LEN(TEXT<J>)
      NEXT J
*                    
      X = 40 - INT(M/2)
      Y = 11 - INT(N/2)
*                                                        
      CALL WIN.SSTATE(STATE,"")
      CALL WIN.COLOUR("Yellow","Blue")
      CALL WIN.TWOPEN("MENUDEMO",TITLE,X,Y,X+M,Y+N+1, "SINGLE")
      CALL WIN.COLOUR("White","")
*
      FOR J = 1 TO N
         PRINT TEXT<J>
      NEXT J
*
      PRINT
      PRINT "Press <CR> to continue":
      INPUT DUM:
      CALL WIN.TWCLOSE("MENUDEMO")
      CALL WIN.SSTATE('',STATE)
*
      RETURN
*
   END
