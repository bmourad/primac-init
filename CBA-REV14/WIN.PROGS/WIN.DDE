* WIN.DDE
* This program displays moving data, to be used as a source for DDE
* Compile for: GENERIC AP MD ME PI PR SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-93. Impact Business Systems
*
* This program uses SYSTEM(14) to check for the presence of characters in
* input buffer. This statement is supported by generic Pick systems, but
* may not be supported on your system. You may need to amend or delete
* the relevant lines to get this to compile on your system.
*
* You will see that the program prints a lot of spaces - this is to
* avoid compatibility problems with formatting statements on different
* machines.
*
      PROMPT ''
      PRINT @(-1) : 'WIN.DDE                Example of wIntegrate acting as source for DDE'
*
      PRINT @(5,2) : 'This program generates and displays changing numbers to illustrate'
      PRINT @(5,3) : 'the principles of Dynamic Data Exchange (DDE) - the protocol'
      PRINT @(5,4) : 'for communication between Windows applications. Open the example Excel'
      PRINT @(5,5) : 'spreadsheets to see the received data.'
      PRINT @(5,6) : 'Enter the number of minutes to run:  ':
      INPUT MINUTES
      IF MINUTES MATCH "1N0N" THEN NULL ELSE STOP
      IF MINUTES < 1 OR MINUTES > 120 THEN STOP   ;* Arbitrary limits
      TIME.TO.STOP = INT(TIME()) + (MINUTES * 60)
*
*
* Initialise
*
      DIM PRODUCTS(2,4)
      PRODUCTS(1,1) = 'Widgets'
      PRODUCTS(1,2) = 'Grommets'
      PRODUCTS(1,3) = 'Sprockets'
      PRODUCTS(1,4) = 'Faucets'
*
      PRODUCTS(2,1) = 0.6             ;* Widgets are cheap
      PRODUCTS(2,2) = 1               ;* Grommets are average price
      PRODUCTS(2,3) = 1.1             ;* Sprockets are about average price
      PRODUCTS(2,4) = 1.4             ;* Faucets are expensive
*
      DIM PERSONS(2,5)
      PERSONS(1,1) = 'Mary'
      PERSONS(1,2) = 'Peter'
      PERSONS(1,3) = 'John'
      PERSONS(1,4) = 'Jane'
      PERSONS(1,5) = 'Sam'
*
      PERSONS(2,1) = 1                 ;* Mary is average
      PERSONS(2,2) = 1.2               ;* Peter is better
      PERSONS(2,3) = 0.7               ;* John is new
      PERSONS(2,4) = 1.4               ;* Jane is good
      PERSONS(2,5) = 0.9               ;* Sam's not so bad
*
      DIM SALES(4,5)                  ;* Sales for each product,person
      MAT SALES = 0
*
      PROMPT ''
      QUIT = 0
      S1 = 0                          ;* Controls overall sales loop
*
      LOOP
*
         IF TIME() > TIME.TO.STOP THEN QUIT = 1
*
      UNTIL QUIT DO
*
         GOSUB 1000                   ;* Sales figures
*
         GOSUB 2000                   ;* Production figures
*
         GOSUB 3000                   ;* Accounting
*
         GOSUB 4000                   ;* CPU usage
*
         FOR J = 1 TO 3
            RQM
         NEXT J
*
      REPEAT
*
      STOP
*
*
*
* Sales figures
*
1000* Display products and people
      FOR PRODUCT = 1 TO 4
         PRINT @(PRODUCT*10-2,8) : PRODUCTS(1,PRODUCT) :    
      NEXT PRODUCT
*
      FOR PERSON = 1 TO 5
         PRINT @(0,PERSON+8) : PERSONS(1,PERSON) :
      NEXT PERSON
*
* Add sales to the array
*
      FOR PRODUCT = 1 TO 4
          FOR PERSON = 1 TO 5
             AMOUNT = RND(5)            ;* Random number under 5
             AMOUNT = AMOUNT * PRODUCTS(2,PRODUCT) * PERSONS(2,PERSON)
             AMOUNT = INT(AMOUNT) + 1
             SALES(PRODUCT,PERSON) = SALES(PRODUCT,PERSON) + AMOUNT
          NEXT PERSON
      NEXT PRODUCT
*
* Print the sales array
*
      FOR PRODUCT = 1 TO 4
         FOR PERSON = 1 TO 5
            PRINT @(PRODUCT*10,PERSON+8) : SALES(PRODUCT,PERSON) :
         NEXT PERSON
      NEXT PRODUCT
*
      RETURN
*
*
* Shopfloor
2000*
      RETURN
*
*
* Account
*
3000*
      RETURN
*
*
* CPU usage
*
4000*
      RETURN
*
   END
