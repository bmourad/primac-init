      SUBROUTINE WIN.BARSUB(TITLE, LABELS, VALS, OPTS)
* Use wintegrate draw commands to create a bar chart
* Compile for: GENERIC AP MD ME PI.SUB PR.SUB SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-93. Impact Business Systems
*
* OPTS
* <1> - Style. 1 = Normal, 2 = Several data sets
* <2> - Position
* <3> - Suppress (Not yet implemented)
* <4> - Colours
* <5> - Min Y, Max Y, step size m/v
* <6> - Catagories names (not yet implemented)
*
      EQU TRUE TO 1, FALSE TO 0
AMVM=1; AMVM<1,2>=2; AMVM<2>=3
AM=AMVM[4,1]
VM=AMVM[2,1]
      WC = 'WIN.COMSUB'
* 
      GOSUB 100; * Decode options
      GOSUB 200; * Calculate totals etc.
      GOSUB 300; * Initialise variables
      GOSUB 400; * Title chart
      GOSUB 500; * Add Labels
      GOSUB 600; * Draw chart
*
      RETURN
*
* Decode options
100   STYLE = OPTS<1>
      IF STYLE = '' THEN STYLE = 1
      X.LEFT = OPTS<2,1>
      Y.TOP = OPTS<2,2>
      X.RIGHT = OPTS<2,3>
      Y.BOT = OPTS<2,4>
*
      IF X.LEFT = '' THEN X.LEFT = 0
      IF X.RIGHT = '' THEN X.RIGHT = 79
      IF Y.TOP = '' THEN Y.TOP = 0
      IF Y.BOT = '' THEN Y.BOT = 23
*
      IF OPTS<4> = '' THEN
         COLS = 'RGB_LightRed'          
         COLS<1,-1> = 'RGB_Yellow'      
         COLS<1,-1> = 'RGB_LightGreen'  
         COLS<1,-1> = 'RGB_LightBlue'   
         COLS<1,-1> = 'RGB_LightMagenta'
         COLS<1,-1> = 'RGB_LightCyan' 
      END ELSE COLS = OPTS<4>
      NO.COLS = DCOUNT(COLS,VM)
*
      YMIN = OPTS<5,1>
      YMAX = OPTS<5,2>
      YSTEP = OPTS<5,3>
*
      CATS = OPTS<6>
*
      RETURN
*
* Calculate totals, min, max values and label sizes.
200   NO.LABELS = DCOUNT(LABELS, AM)                  
      NO.CATS = DCOUNT(CATS,VM)
      NO.CATVALS =1
*
      LABEL.SIZE = 0
      CAT.SIZE = 0
      MIN.VAL = 0
      MAX.VAL = 0
*
      FOR J = 1 TO NO.LABELS
         IF LEN(LABELS<J>) > LABEL.SIZE THEN LABEL.SIZE = LEN(LABELS<J>)
*
         IF STYLE = 2 THEN
            VAL = 0 
            N = DCOUNT(VALS<J>,VM)
            IF N > NO.CATVALS THEN NO.CATVALS = N
            FOR K = 1 TO N
               VAL = VAL + VALS<J,K>
            NEXT K
         END ELSE VAL = VALS<J,1>
*
         IF VAL < MIN.VAL THEN MIN.VAL = VAL
         IF VAL > MAX.VAL THEN MAX.VAL = VAL
      NEXT J
*
      IF NO.CATS THEN
         FOR K = 1 TO NO.CATS
            IF LEN(CATS<1,K>) > CAT.SIZE THEN CAT.SIZE = LEN(CATS<1,K>)
         NEXT K
      END
*
      RETURN
*
* Initialise/Calculate size variables
300   IF YMIN = '' THEN YMIN = 0
* Round up maximum Y value
      IF YMAX = '' THEN
         N = INT(MAX.VAL)
         IF N < MAX.VAL THEN MAX.VAL = N + 1
*
         L = LEN(MAX.VAL)                        
         L = STR('0',L-1)                          
*
         BEGIN CASE                                
            CASE MAX.VAL[1,1] < 2; YMAX = 2:L
            CASE MAX.VAL[1,1] < 5; YMAX = 5:L
            CASE 1; YMAX = 10:L                
         END CASE         
      END                               
* Size calculations                        
      TITLE.DEPTH = 15
      XLABEL.DEPTH = 15
*
      WIDTH = (X.RIGHT - X.LEFT + 1) * 10
      DEPTH = (Y.BOT - Y.TOP + 1) * 10
      X.LEFT = X.LEFT * 10
      X.RIGHT = X.RIGHT * 10
      Y.TOP = Y.TOP * 10    
      Y.BOT = Y.BOT * 10
*
      YLABEL.SIZE = LEN(MAX.VAL) * 10 + 5
      CATLABEL.SIZE = CAT.SIZE * 10 + 30; * Add in coloured block a spaces
      IF NO.CATS = 0 THEN CATLABEL.SIZE = 0
*
      CHART.WIDTH = WIDTH - YLABEL.SIZE - CATLABEL.SIZE
      CHART.DEPTH = DEPTH - TITLE.DEPTH - XLABEL.DEPTH
*
      BAR.WIDTH = INT(CHART.WIDTH/NO.LABELS)
      BAR.GAP = INT(BAR.WIDTH/8)+1
      BAR.XSIZE = BAR.WIDTH - 2 * BAR.GAP; * Coloured rect smaller
*
      CHART.WIDTH = BAR.WIDTH * NO.LABELS
      IF BAR.WIDTH+10 < LABEL.SIZE * 10 THEN LABEL.SIZE = INT(BAR.WIDTH/10) - 1
* Y-axis steps
      IF YSTEP = '' THEN
         BEGIN CASE
            CASE CHART.DEPTH < 40; NO.STEPS = 1
            CASE CHART.DEPTH < 100; NO.STEPS = 2
            CASE CHART.DEPTH < 200; NO.STEPS = 5
            CASE 1; NO.STEPS = 10
         END CASE          
         YSTEP = INT((YMAX-YMIN)/NO.STEPS)
      END ELSE NO.STEPS = INT((YMAX - YMIN)/YSTEP)
      STEP.SIZE = INT(CHART.DEPTH / NO.STEPS)
*
* Position calculations
      CHART.X = X.LEFT + YLABEL.SIZE
      CHART.Y = Y.TOP + TITLE.DEPTH + CHART.DEPTH
*
      RETURN
*
* Title Chart
400   X = (X.LEFT + X.RIGHT)/2 - LEN(TITLE) * 5
      X = INT(X)
      SCRIPT = "Draw Pen RGB_White"
      SCRIPT<-1> = 'Draw Brush RGB_Black'
      SCRIPT<-1> = 'Draw Font "IBSFont",10,10,FONT_Underline'
      SCRIPT<-1> = 'Draw Text ':X:',':Y.TOP:',"':TITLE:'"'
      CALL @WC(SCRIPT)
      RETURN
*         
* Draw Axis
500   X = CHART.X - 1
      Y = CHART.Y + 1
      SCRIPT = 'Draw Move ':X:',':(CHART.Y - CHART.DEPTH)
      SCRIPT<-1> = 'Draw Line ':X:',':Y
      SCRIPT<-1> = 'Draw Line ':(CHART.X + CHART.WIDTH):',':Y
      CALL @WC(SCRIPT)
*
      SCRIPT = 'Draw Font "IBSFont",10,10'       
      LAB.X = CHART.X - 4
      Y = CHART.Y - 5
      X = LAB.X - LEN(YMAX) * 10
      SCRIPT<-1> = 'Draw Text ': X.LEFT :',': (Y-CHART.DEPTH) :',"':YMAX:'"'
      CALL @WC(SCRIPT)
*
      YVAL = YMIN       
      SCRIPT = ''
*
      LOOP
      UNTIL YVAL >= YMAX DO
         X = LAB.X - LEN(YVAL) * 10
         SCRIPT<-1> = 'Draw Text ':X:',':Y:',"':YVAL:'"'
         YVAL = YVAL + YSTEP
         Y = Y - STEP.SIZE
      REPEAT
*
      CALL @WC(SCRIPT)
*               
      SCRIPT = ''
      LAB.X = CHART.X + INT(BAR.WIDTH/2)
      Y = CHART.Y + 5
      FOR J = 1 TO NO.LABELS
         LAB = LABELS<J>[1,LABEL.SIZE]
         X = LAB.X - LEN(LAB) * 5
         LAB.X = LAB.X + BAR.WIDTH
         SCRIPT<-1> = 'Draw Text ':X:',':Y:',"':LAB:'"'
      NEXT J
*
      CALL @WC(SCRIPT)
*
      RETURN
*
* Draw chart
*
600   BEGIN CASE
         CASE STYLE = 1; GOSUB 610; * Plain chart
         CASE STYLE = 2; GOSUB 620; * Several groups per chart
      END CASE
      RETURN
*
* Plain chart
610   X = CHART.X   
      COL = 1                                            
      SCRIPT = ''
      FOR J = 1 TO NO.LABELS
         Y = VALS<J> - YMIN
         COLOUR = COLS<1,COL>
         IF Y > 0 THEN
            Y = CHART.Y - INT(CHART.DEPTH * Y/(YMAX - YMIN))
            SCRIPT<-1> = 'Draw Brush ':COLOUR
            SCRIPT<-1> = 'Draw Pen ':COLOUR
            SCRIPT<-1> = 'Draw Rect ': X :',': Y :',':(X + BAR.WIDTH) :',': CHART.Y
         END
         X = X + BAR.WIDTH
         COL = COL + 1
         IF COL > NO.COLS THEN COL = 1
      NEXT J 
*
      CALL @WC(SCRIPT)
      RETURN
*
* Chart where each bar is made up of several catagoris
620   X = CHART.X + BAR.GAP
      COL = 1                                            
      SCRIPT = ''
*
      FOR J = 1 TO NO.LABELS
         Y.BOT = CHART.Y + 1
         VAL = 0
         FOR K = 1 TO NO.CATVALS
            VAL = VAL + VALS<J,K>
            Y = VAL - YMIN
            COLOUR = COLS<1,K>
            IF VALS<J,K> > 0 THEN
               Y = CHART.Y - INT(CHART.DEPTH * Y/(YMAX - YMIN))
               SCRIPT<-1> = 'Draw Brush ':COLOUR
               SCRIPT<-1> = 'Draw Pen ':COLOUR
               SCRIPT<-1> = 'Draw Rect ': X :',': Y :',':( X + BAR.XSIZE) :',': Y.BOT              
               Y.BOT = Y
            END
         NEXT K
*
         X = X + BAR.WIDTH
      NEXT J 
*
      CALL @WC(SCRIPT)
*
      RETURN
*
   END
