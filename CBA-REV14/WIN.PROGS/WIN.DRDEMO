* WIN.DRDEMO
* Drawing demonstration
* Compile for: GENERIC AP MD ME PI PR SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-97. Impact Business Systems
*
      PROMPT ''
      EQU TRUE TO 1, FALSE TO 0
*
      C22 = @(0,22):@(-4)
      C23 = @(0,23):@(-4)
      CMSG = @(0,20):@(-4)
AMVM=1; AMVM<1,2>=2; AMVM<2>=3
AM=AMVM[4,1]
VM=AMVM[2,1]
*
      PRINT @(-1):"WIN.DRDEMO":
      PRINT @(26,0):"Drawing (overlay graphics) demonstration":
      PRINT @(71,0):OCONV(DATE(),"D2"):
      CALL WIN.BOX(0,1,79,1,1)
*
      GOSUB 50; * Print brief description
*     
      GOSUB 100; * Set up menu options
*
* Draw white back ground for drawings
*
      STATE=''
      CALL WIN.SSTATE(STATE, "")
      CALL WIN.COLOR("BLACK","WHITE")
      XTL = 21;YTL = 4; XBR=59; YBR = 14
      CALL WIN.BOX(XTL-1,YTL-1,XBR+1,YBR+1,0)
      CALL WIN.DRPEN("Black","Solid","")
      CALL WIN.DRBRUSH("","Null")
*                                 
      LOOP
         PRINT @(40,22):"    ":@(40,22):
         INPUT DUM:
*
      UNTIL DUM = "*" DO
         IF NUM(DUM) THEN
            BEGIN CASE
            CASE DUM = PEN.STYLES; GOSUB 1100
            CASE DUM = BRUSH.STYLES; GOSUB 1200
            CASE DUM = SHAPES; GOSUB 1300
            CASE DUM = ARCS; GOSUB 1400
            CASE DUM = TEXT; GOSUB 1500
            END CASE
         END
      REPEAT
*
      CALL WIN.SSTATE("",STATE)
*
      PRINT C22:"Press <CR> to continue ":
      INPUT DUM:
*
      CALL WIN.DRERASE(XTL*10,YTL*10,XBR*10+9,YBR*10+9)
*
STOP
*
* Print brief description
50 PRINT @(0,5):"The draw subroutines allow you to draw lines, shapes and text on top of"
   PRINT "your current screen."
   PRINT
   PRINT "The co-ordinates for these commands are logical with 10 units per"
   PRINT "character row and column."
   PRINT
   PRINT "Colors are specified as 24 bit colors and matched to the nearest color"
   PRINT "your display can match. Standard colors can be specified by name for"
   PRINT "convenience."
   PRINT
   PRINT "You first set the Pen color and style (the pen is used for text, lines"
   PRINT "and the outlines of shapes), then the Brush color and style (the"
   PRINT "brush is used for the interior of shapes) and then plot the"
   PRINT "desired shape or Text."
*
   DESKTOP.TYPE = ''
   CALL WIN.DESKTYPE(DESKTOP.TYPE)
*
   PRINT C22:"Press <CR> to continue ":
   INPUT DUM:
   PRINT @(0,5):@(-3):
   RETURN
*
* Set up menu
100  OPT= ''
     PEN.STYLES = 1; OPT<PEN.STYLES> = "Pen Styles"
     BRUSH.STYLES=2; OPT<BRUSH.STYLES> = "Brush Styles"
     SHAPES = 3;     OPT<SHAPES> = "Shapes"
     ARCS = 4;       OPT<ARCS> = "Arcs/Pies"
     TEXT = 5;       OPT<TEXT> = "Text"
*
     N = DCOUNT(OPT, AM)
     X = 1
     Y = 5
     FOR J = 1 TO N
        PRINT @(X,Y):J:". ":OPT<J>:
        Y=Y+1
     NEXT J
*
     PRINT C22:"Enter option number or * to exit demo ":
*
* Set up info area
     MSY = 18
     CLR.MSG = ''
     FOR J = MSY TO 21
        CLR.MSG = CLR.MSG : @(0,J):@(-4)
     NEXT J
     CLR.MSG = CLR.MSG : @(0,MSY)
     RETURN
*
* Pen styles demo
1100 GOSUB 5100; * Erase graphic
STYLES = "Solid"
     STYLES<-1> = "Dash"
     STYLES<-1> = "Dot"
     STYLES<-1> = "Dash Dot"
     STYLES<-1> = "DashDotDot"
     STYLES<-1> = "Width 5"
*
     X = XTL
     Y = YTL
     N = DCOUNT(STYLES, AM)
     W=""
     FOR J = 1 TO N
       PRINT @(X,Y):STYLES<J>:         
       IF J = N THEN W = 5;STYLES<J>=""
       CALL WIN.DRPEN("Red",STYLES<J>,W)
       CALL WIN.DRLINE((X+12)*10,Y*10+5, XBR*10, Y*10+5)
       Y = Y + 2
     NEXT J
*
     CALL WIN.DRPEN("Black","Solid","")
*
     MSG = "The Pens style along with its color and width are set"
     MSG = MSG:" with the following subroutine."
     MSG<-1>="CALL WIN.DRPEN(COLOR, STYLE, WIDTH)"
     GOSUB 5000; * Display info
     RETURN
*
* Brush styles demo
1200 GOSUB 5100; * Erase graphic
STYLES = "Solid"
     STYLES<-1> = "Dash"
     STYLES<-1> = "Null"
     STYLES<-1> = "Horizontal"
     STYLES<-1> = "Vertical"
     STYLES<-1> = "FDiagonal"
     STYLES<-1> = "BDiagonal"
     STYLES<-1> = "Cross"
     STYLES<-1> = "DiagCross"
*
     X = XTL
     Y = YTL   
     W = INT((XBR-XTL-24)/2)
     N = DCOUNT(STYLES, AM)
     FOR J = 1 TO N
       PRINT @(X,Y):STYLES<J>:
       CALL WIN.DRBRUSH("Red",STYLES<J>)
       CALL WIN.DRRECT((X+12)*10,Y*10-3, (X+12+W)*10, Y*10+13)
       IF J = INT((N+1)/2) THEN
          X = X + INT((XBR-XTL)/2)+1
          Y = YTL
       END ELSE Y = Y + 2
     NEXT J
*
     CALL WIN.DRBRUSH("","Null")
*
     MSG = "The Brushes style along with its color are set"
     MSG = MSG:" with the following subroutine."
     MSG<-1>="CALL WIN.DRBRUSH(COLOR, STYLE)"
     GOSUB 5000; * Display info
     RETURN
*
* Shapes
1300 GOSUB 5100; * Erase graphic
     X = XTL
     Y = YTL   
*
     PRINT @(X,Y):"Lines":
     CALL WIN.DRLINE((X+12)*10,Y*10+5,XBR*10,Y*10+5)
*
     Y = Y + 2
     PRINT @(X,Y):"Rectangles":
     CALL WIN.DRRECT((X+12)*10,Y*10-3,XBR*10,Y*10+13)
*
     Y = Y + 4
     PRINT @(X,Y):"Polygons":
     POINTS=''
     W = INT((XBR-X-12)/3)-2
     X1 = X + 12       
     X1 = X1 * 10
     Y1 = Y * 10 + 5
     W = W * 5     
     D = 18
*
     FOR J = 3 TO 5      
        A = 0
        INC = INT(360/J)
        FOR K = 1 TO J
          POINTS<K,1> = X1 + INT(W * COS(A))
          POINTS<K,2> = Y1 + INT(D * SIN(A))
          A = A + INC            
        NEXT K
        CALL WIN.DRPOLY(POINTS)
        X1 = X1 + W * 2 + 10
     NEXT J
*          
     Y = Y + 4
     PRINT @(X,Y):"Ellipses":
     CALL WIN.DRELL((X+12)*10,Y*10-3,XBR*10,Y*10+13)
*     
     MSG = "The lines/shapes are created with:-"
     MSG<-1>="  CALL WIN.DRLINE(X1,Y1,X2,Y2)"
     MSG=MSG:", CALL WIN.DRRECT(X1,Y1,X2,Y2)"
     MSG<-1>="  CALL WIN.DRPOLY(R.POINTS)"
     MSG=MSG:" and CALL WIN.DRELL(X1,Y1,X2,Y2)"
     GOSUB 5000; * Display info
     RETURN
*
* Arcs etc
1400 GOSUB 5100; * Erase graphic
     X = XTL
     Y = YTL + 2
*
     PRINT @(X,Y):"Arcs":
     CALL WIN.DRARC((X+12)*10,Y*10-15,(X+24)*10,Y*10+25,0,45)
*
     Y = Y + 4
     PRINT @(X,Y):"Chords":
IF DESKTOP.TYPE = "PC" THEN
     CALL WIN.DRCHORD((X+12)*10,Y*10-15,(X+24)*10,Y*10+25,10,115)
END ELSE
     PRINT @(X+10,Y):"Not currently supported":
     PRINT @(X+10,Y+1):"on this client platform":
END
*
     Y = Y + 4
     PRINT @(X,Y):"Pie segments":
     CALL WIN.DRPIE((X+12)*10,Y*10-15,(X+24)*10,Y*10+25,0,45)
*
     MSG = "The arcs, chords and pie segments are drawn with:-"
     MSG<-1> = "   WIN.DRARC(X1,Y1,X2,Y2,SA,EA), WIN.DRCHORD(X1,Y1,X2,Y2,SA,EA)"              
     MSG<-1> = "and WIN.DRPIE(X1,Y1,X2,Y2,SA,EA)"
*
     GOSUB 5000; * Display Info
     RETURN
*
* Text
1500 GOSUB 5100; * Erase graphic
     X = XTL
     Y = YTL
*
     CALL WIN.DRFONT("Arial",10,10,"","")
     CALL WIN.DRTEXT(X*10,Y*10,"Text can be overlayed in any font")
*
     Y = Y + 2
     CALL WIN.DRFONT("Times New Roman",20,20,"","")
     CALL WIN.DRTEXT(X*10,Y*10,"At any size")
*                                            
     Y = Y + 2
     CALL WIN.DRFONT("Courier New",20,20,"","italic")
     CALL WIN.DRTEXT(X*10,Y*10,"Italics")
*                                          
     Y = Y + 2
     CALL WIN.DRFONT("Wingdings",30,30,"","")
     CALL WIN.DRTEXT(X*10,Y*10,"ACEGKNZ")
*
     Y = Y + 4
     CALL WIN.DRFONT("IBSFont",10,10,"","")
     CALL WIN.DRTEXT(X*10,Y*10, "Fixed or variable pitch") 
* 
     MSG = "The font and its size, weight and style is first chosen with:-"
     MSG<-1> = "  CALL WIN.DRFONT(NAME,WIDTH,DEPTH,WEIGHT,STYLE)"
     MSG<-1> = "and then drawn with:-"
     MSG<-1> = "  CALL WIN.DRTEXT(X,Y,TEXT)"
*
     GOSUB 5000; * Display Info
     RETURN
*
* Display message
5000 CALL WIN.SSTATE(PRE.MSG,STATE)
*
     PRINT CLR.MSG:
     N = DCOUNT(MSG, AM)
     FOR J = 1 TO N
       DUM = MSG<J>
       LOOP
       WHILE LEN(DUM) > 79 DO
          P = 79
          LOOP
          WHILE DUM[P,1] # " " DO
             P = P - 1
          REPEAT
          PRINT DUM[1,P-1]
          DUM = DUM[P+1,9999]
       REPEAT
       PRINT DUM
     NEXT J
*
     CALL WIN.SSTATE("", PRE.MSG)
*
     RETURN
*
* Clear graphic area
5100 CALL WIN.DRERASE(XTL*10,YTL*10,XBR*10+9,YBR*10+9)
     CALL WIN.BOX(XTL-1,YTL-1,XBR+1,YBR+1,0)
     RETURN
*
END        
