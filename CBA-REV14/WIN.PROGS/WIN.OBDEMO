* WIN.OBDEMO
* Demonstration of some of the OBJECT routines
* Compile for: GENERIC AP MD ME PI PR SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-99. Impact Business Systems
*
PROMPT ''
DIM ARGS(20)
MAT ARGS = ''
*
PRINT @(-1):"WIN.OBDEMO":
PRINT @(20,0):"Automation demonstration":
PRINT @(71,0):OCONV(DATE(),"D2"):
CALL WIN.BOX(0,1,79,1,1)
*
PG.MSG = @(0,3):@(-3)
*
PRINT PG.MSG:"This program demonstrates control another application using Automation."
PRINT "This uses the Object host routines WIN.OB..."
PRINT
PRINT "To create an automation object we use:-"
PRINT "   CALL WIN.OBNEW(NAME, PROGID, RESP)"
PRINT "To get an existing object or an object from a file"
PRINT "   CALL WIN.OBGET(NAME, FILENAME, PROGID, RESP)"
PRINT "If the link opens ok, we can do the following:-"
PRINT "   CALL WIN.OBGETPRP(NAME, PROP, VALUE) to get a property"
PRINT "   CALL WIN.OBSETPRP(NAME, PROP, VALUE) to set a value"
PRINT "   CALL WIN.OBSET(NAME, PROP, RET.NAME) to set an object from a property"
PRINT "   CALL WIN.OBMETHOD(NAME, METHOD, FLAGS, MAT ARGS, RET.FLAG, RET.VAL)"
PRINT "       to run a method"
PRINT "Finally we release the object with"
PRINT "   CALL WIN.OBREL(NAME)"
PRINT
PRINT "You must have Microsoft Excel installed for this example."
GOSUB 100; * Check if demo required
IF CONTINUE THEN GOSUB 200; * Excel demo
*
STOP
*
* Check if demo required
100 CONTINUE = 0
LOOP
PRINT @(0,22):@(-4):"Do you want to run the demonstration? (Y/N):":
INPUT DUM:
DUM = OCONV(DUM, "MCU")
UNTIL DUM = "Y" OR DUM = "N" DO                                
   PRINT @(0,23):"Please answer Y for yes or N for no":
REPEAT
*
PRINT @(0,20):@(-3):
IF DUM = "Y" THEN CONTINUE = 1
*
RETURN
*
* Excel DDE demonstration
200 PRINT PG.MSG:
PRINT "This demonstration uses the Excel automation object model"
PRINT "to create a very simple spread sheet and then produce a"
PRINT "chart from it."
PRINT
PRINT "We will use the follow Excel objects to do this:"
PRINT "  Application - this is the main appliction"
PRINT "  WorkBooks   - A collection of the workbooks in the application"
PRINT "  WorkBook    - a work book"
PRINT "  WorkSheet   - a work sheet within the work book"
PRINT "  Range       - a range of cells in the work sheet"
PRINT "  Chart       - a chart"
PRINT
PRINT "The next page of the demonstration will start up and show Excel"
PRINT "Please move/resize wIntegrate and Excel so you can see all of"
PRINT "the wIntegrate screen and at least the top left 4 columns and"
PRINT "two rows of Excel."
PRINT
GOSUB 210;* Continue prompt
OK = 1
*
PRINT PG.MSG:
PRINT "First we create a new Excel excel application automation object"
PRINT "and make it visible as follows:-"
PRINT
PRINT '  CALL WIN.OBNEW("XLApp","Excel.Application", ERR)'
PRINT '  CALL WIN.OBSETPRP("XLApp","Visible",1)'
*
CALL WIN.OBNEW("XLApp","Excel.Application", ERR)
CALL WIN.OBSETPRP("XLApp","Visible",1)
*
IF ERR THEN                
   PRINT
   PRINT "We couldn't create the Excel application object."
   PRINT "The demo will end here."
   OK = 0
END
*
IF OK THEN
   GOSUB 210;* Continue prompt
*  Application and workbooks page
   PRINT PG.MSG
   PRINT "A new Excel application automation object has been created"
   PRINT
   PRINT "To create a new Workbook, first get the workbooks automation object with:-"
   PRINT '   CALL WIN.OBSET("XLApp", "WorkBooks", "XLWorkBooks")'
   PRINT
   CALL WIN.OBSET("XLApp", "WorkBooks", "XLWorkBooks")
   PRINT "and then add a new workbook getting the workbook automation object with:-"
   PRINT '   ARGS(1) = -4167;* Excel constant to add a work book'
   PRINT '   CALL WIN.OBMETHOD("XLWorkBooks","Add","I",MAT ARGS,2,"XLWorkBook")'
   PRINT
   ARGS(1) = -4167
   CALL WIN.OBMETHOD("XLWorkBooks","Add","I",MAT ARGS,2,"XLWorkBook")
   PRINT
   PRINT
   PRINT "Note: WIN.OBSET and WIN.OBMETHOD with the return type argument of 2 return"
   PRINT "      a new automation object. These objects will need to be released when"
   PRINT "      they are no longer needed in the same way as objects that are"
   PRINT "      specifically created."
   GOSUB 210;* Continue prompt
* Worksheet page
   PRINT PG.MSG:
   PRINT "Having added the work book to Excel we then need to retrieve the work sheet"
   PRINT "from it."
   PRINT
   PRINT "The work book has a work sheets collection from which we need to retrieve"
   PRINT "the first work sheet. We could do this in the same way as we did for Workbook"
   PRINT "by first getting the WorkSheets object and then getting the Worksheet from it,"
   PRINT "but instead we are going to use the fact that by using a sub-object name"
   PRINT "followed by one of its methods in place of a normal method name, the sub-object"
   PRINT "will be automatically retrieved its method called and then released in the same"
   PRINT "call."
   PRINT
   PRINT "The code to do this is:-"
   PRINT
   PRINT 'ARGS(1) = 1; * Item one from the collection'
   PRINT 'CALL WIN.OBMETHOD("XLWorkBook","Worksheets.Item", "I", MAT ARGS,2,"XLWorkSheet")'
   ARGS(1) = 1; * Item one from the collection
   CALL WIN.OBMETHOD("XLWorkBook","Worksheets.Item", "I", MAT ARGS,2,"XLWorkSheet")
   GOSUB 210;* Continue prompt
* Set up the data page
   PRINT PG.MSG:
   PRINT "We are going to populate the spread sheet with the following values"
   LABELS    = "North"; VALUES = 5.2
   LABELS<2> = "South"; VALUES<2> = 10
   LABELS<3> = "East";  VALUES<3> = 8
   LABELS<4> = "West";  VALUES<4> = 20   
   FOR J = 1 TO 4
      PRINT LABELS<J> : " = " : VALUES<J>
   NEXT J
   PRINT
   PRINT "To do this we get an object which represents a cell on the spread sheet,"
   PRINT "set its value and then release it. e.g.:-"
   PRINT
   PRINT '  CALL WIN.OBMETHOD("XLWorkSheet","Range", "I", MAT ARGS,2,"XLCell")'
   PRINT '  CALL WIN.OBSETPRP("XLCell","Value", "North")'
   PRINT '  CALL WIN.OBREL("XLCell")'
   PRINT
*
   FOR J = 1 TO 4
     ARGS(1) = CHAR(64+J):1
     CALL WIN.OBMETHOD("XLWorkSheet","Range", "I", MAT ARGS,2,"XLCell")
     CALL WIN.OBSETPRP("XLCell","Value", LABELS<J>)
     CALL WIN.OBREL("XLCell")
     ARGS(1) = CHAR(64+J):2
     CALL WIN.OBMETHOD("XLWorkSheet","Range", "I", MAT ARGS,2,"XLCell")
     CALL WIN.OBSETPRP("XLCell","Value", VALUES<J>)
     CALL WIN.OBREL("XLCell")
   NEXT J
   GOSUB 210;* Continue prompt
* Create the chart
   PRINT PG.MSG:
   PRINT "We can now create a chart from the data"
   PRINT
   PRINT "First create a range object for the part of the spread sheet to chart"
   PRINT "and then add a new chart to the work book"
   PRINT
   PRINT '   ARGS(1) = "A1:D2"'
   PRINT '   CALL WIN.OBMETHOD("XLWorkSheet","Range","I",MAT ARGS, 2, "XLRange")'
   PRINT '   CALL WIN.OBMETHOD("XLWorkBook", "Charts.Add","",MAT ARGS, 2, "XLChart")'
   ARGS(1) = "A1:D2"
   CALL WIN.OBMETHOD("XLWorkSheet","Range","I",MAT ARGS, 2, "XLRange")
   CALL WIN.OBMETHOD("XLWorkBook", "Charts.Add","",MAT ARGS, 2, "XLChart")
   PRINT
   PRINT "Then use the ChartWizard method to create the chart"
   PRINT "The ARGS array is set up with 8 parameters including:-"
   PRINT '   ARGS(1) = "XLRange" ;* Source for graph data'
   PRINT '   ARGS(2) = -4102 ;* Gallery - value of xl3dPie constant'
   PRINT '   ...'
   PRINT '   ARGS(8) = "Sales Percentages" ;* Title'
   PRINT "and then the method is called with:-"
   PRINT '   CALL WIN.OBMETHOD("XLChart","ChartWizard", "DIIIIIII", MAT ARGS, 0, DUM)'
* Set up arguments for the chart
   ARGS(1) = "XLRange" ;* Source for graph data
   ARGS(2) = -4102 ;* Gallery - value of xl3dPie constant
   ARGS(3) = 7     ;* Format
   ARGS(4) = 1     ;* Plot by - value of xlRows constant 
   ARGS(5) = 1     ;* Category labels
   ARGS(6) = 0     ;* Series labels
   ARGS(7) = 2     ;* Has legend
   ARGS(8) = "Sales Percentages" ;* Title
   CALL WIN.OBMETHOD("XLChart","ChartWizard", "DIIIIIII", MAT ARGS, 0, DUM)
*
   GOSUB 210;* Continue prompt
*
   PRINT PG.MSG:
   PRINT 'Finally we release the Excel objects we have used and not release yet'
   PRINT
   PRINT '   CALL WIN.OBREL("XLChart")'
   PRINT '   CALL WIN.OBREL("XLRange")'
   PRINT '   CALL WIN.OBREL("XLWorkSheet")'
   PRINT '   CALL WIN.OBREL("XLWorkBook")'
   PRINT '   CALL WIN.OBREL("XLWorkBooks")'
   PRINT '   CALL WIN.OBREL("XLApp")'
*
   CALL WIN.OBREL("XLChart")
   CALL WIN.OBREL("XLRange")
   CALL WIN.OBREL("XLWorkSheet")
   CALL WIN.OBREL("XLWorkBook")
   CALL WIN.OBREL("XLWorkBooks")
   CALL WIN.OBREL("XLApp")
*
   PRINT
   PRINT
   PRINT "This concludes our demonstration"
END
*     
GOSUB 210;* Continue prompt
*
RETURN
*
210 PRINT @(0,22):"Press <CR> to continue ":
INPUT DUM:
RETURN
*
END
