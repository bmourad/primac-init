SUBROUTINE WIN.LOOKUP(R.TABLE, R.LIST, REF)
* Create a simple lookup dialog
* Compile for: GENERIC AP MD ME PI.SUB PR.SUB SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-96. Impact Business Systems
*
* Format for Table is
* 1 - Caption
* 2 - Column headings
* 3 - Column sizes
* 4 - No. of Lines to show
* 5 - Postion for display or ""
* 6 - Parent dialog for lookup box
* 7 - Display hourglass while building lookup
* 8 - Map character depending on emulation
* 9 - Use Light font in 16 bit versions
*
* Returns REF = first mv of list line OR ""
*
EQU XSCALE TO 4 ; * Each dialog unit is 1/4 of the average char width
EQU YSCALE TO 8 ; * Each dialog unit is 1/8 of the char height
EQU MARGIN TO 4 ; * space between edge of dialog and controls
AMVM=1; AMVM<1,2>=2; AMVM<2>=3
AM=AMVM[4,1]
VM=AMVM[2,1]
STX=CHAR(2)
*                             
XPOS = R.TABLE<5,1>
YPOS = R.TABLE<5,2>
IF XPOS = '' THEN XPOS = 1
IF YPOS = '' THEN YPOS = 1
XPOS = XPOS * XSCALE
YPOS = YPOS * YSCALE
*
PARENT = R.TABLE<6>
DISP.HG = R.TABLE<7>
*
DBX = ""
NO.COLS = DCOUNT(R.TABLE<3>,VM)
IDX = 4
COL.POS = 0
ROW.POS = MARGIN
ROW.HEIGHT = YSCALE
LB.WIDTH = 0
TABS = ""
*
IF DISP.HG THEN CALL WIN.HGLASS(1,1)
*
* Create the column headings, Tab positions and measure the listbox width
FOR J = 1 TO NO.COLS
   COL.WIDTH = (R.TABLE<3,J> + 1) * XSCALE
   LINE = "LText '":R.TABLE<2,J>:"',None,"
   LINE = LINE : COL.POS+MARGIN:",":ROW.POS:",":COL.WIDTH:",":ROW.HEIGHT
   IDX = IDX + 1
   DBX<IDX> = LINE
   COL.POS = COL.POS + COL.WIDTH
   LB.WIDTH = LB.WIDTH + COL.WIDTH
   TABS = TABS : "," : COL.POS
NEXT J
*
TABS = TABS[2,9999]
*
* Create the listbox
ROW.POS = 14
LB.HEIGHT = R.TABLE<4> * YSCALE
LB.HEIGHT = LB.HEIGHT + 6;* Add space for border
IDX = IDX + 1
DBX<IDX> = "ListBox List, ":MARGIN: "," :ROW.POS: "," :LB.WIDTH: "," :LB.HEIGHT: ", LBS_USETABSTOPS|LBS_NOTIFY|WS_TABSTOP|WS_VSCROLL|WS_BORDER"
*
* Define the push buttons
ROW.POS = ROW.POS + LB.HEIGHT + 2
COL.WIDTH = 34
ROW.HEIGHT = 12
IDX = IDX + 1
DBX<IDX> = "PushButton 'OK',OK,": MARGIN : "," :ROW.POS: "," :COL.WIDTH: "," :ROW.HEIGHT
IF LB.WIDTH < COL.WIDTH * 2 + 2 THEN LB.WIDTH = 2 * COL.WIDTH + 2
COL.POS = LB.WIDTH + MARGIN - COL.WIDTH
IDX = IDX + 1
DBX<IDX> = "PushButton 'Cancel',CANCEL,": COL.POS: "," :ROW.POS: "," :COL.WIDTH: "," :ROW.HEIGHT
*
* Dialog box itself
COL.WIDTH = LB.WIDTH + 2 * MARGIN
ROW.HEIGHT = ROW.POS + ROW.HEIGHT + 2 * MARGIN
DBX<1> = "DialogBox Create Lookup," : XPOS :",": YPOS :",": COL.WIDTH :",": ROW.HEIGHT
DBX<2> = 'Caption "':R.TABLE<1>:'"'
DBX<3> = 'Style DS_MODALFRAME | WS_POPUP | WS_CAPTION | WS_SYSMENU'
DBX<4> = 'Font 8,"Helv"'
*
DBXOPTION=''
IF R.TABLE<8> = "1" THEN ;* Map chars
   DBXOPTION='M'
END
IF R.TABLE<9> = "1" THEN ;* Light font
   DBXOPTION=DBXOPTION:'L'
END
IF DBXOPTION # "" THEN
   IDX = IDX + 1
   DBX<IDX> = "Option '":DBXOPTION:"'"
END
*
* Define actions for buttons and listbox
* OK button and listbox send current selection to host
* Cancel send "" to the host
*
SEL.CMD = '"Enter stx:Extract(Lookup.list,1,1);DialogBox End Lookup,TRUE"'
CAN.CMD = '"Enter stx;DialogBox End Lookup,FALSE"'
IDX = IDX + 1
DBX<IDX> = "ControlCommand OK,":SEL.CMD
IDX = IDX + 1
DBX<IDX> = "ControlCommand CANCEL,":CAN.CMD
IDX = IDX + 1
DBX<IDX> = "ControlCommand List,":SEL.CMD
*
* Initialisation command Set listbox tabs and select first item in list
INI.CMD = "DialogBox SetTabs Lookup, List, '":TABS:"'"
INI.CMD = INI.CMD : ";"
INI.CMD = INI.CMD : "DialogBox Select Lookup, list, '":R.LIST<1,1>:"'"
INI.CMD = '"':INI.CMD:'"'
IDX = IDX + 1
DBX<IDX> = "InitCommand ":INI.CMD
*
* Load up list box
NO.ITEMS = DCOUNT(R.LIST,AM)
IDX = IDX + 1
DBX<IDX> = "Lookup.list = ''"
QT = CHAR(2)
FOR J = 1 TO NO.ITEMS
    NO.FIELDS = DCOUNT(R.LIST<J>, VM)
    LINE = ''
    FOR K = 1 TO NO.FIELDS
       LINE = LINE : QT: ":tab:" : QT : R.LIST<J,K>
    NEXT K
    LINE = "Ins Lookup.list ":QT:LINE[8,999]:QT
    IDX = IDX + 1
    DBX<IDX> = LINE
NEXT J
*
* Create the listbox
CALL WIN.HSCRIPT(DBX)
*
IF DISP.HG THEN CALL WIN.HGLASS(1,0)
*
* Show, then delete the list box
WC = "DialogBox Show Lookup"
IF PARENT # "" THEN WC = WC : "," : PARENT
WC<-1> = "DialogBox Delete Lookup"
CALL WIN.HSCRIPT(WC)
ECHO OFF
PRINT @(0,22):          
LOOP
INPUT REF:
UNTIL INDEX(REF,STX,1) DO
REPEAT
REF =FIELD(REF,STX,2)
ECHO ON
RETURN
*
END
