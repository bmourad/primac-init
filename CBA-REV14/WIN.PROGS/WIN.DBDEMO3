* WIN.DBDEMO3
* Dialogbox demonstration
* Compile for: GENERIC AP MD ME PI PR SQ UD UL UP UV UC IN GA
* (C) Copyright IBM Corporation 2003. All rights reserved
* Copyright (c) 1991-98. Impact Business Systems
*
  PROMPT ''
  EQU TRUE TO 1, FALSE TO 0
*
  AMVM=1; AMVM<1,2>=2; AMVM<2>=3
  AM=AMVM[4,1]
  VM=AMVM[2,1]
*
* DialogBox Control constants used (from WIN.DBCONST)
* Unfortunately the include statement various for different versions
* of the host basic so cut and paste was used
EQU ANM.PLAY  TO "Play"
EQU ANA.PLAY  TO "III"
EQU ANE.STOP  TO "Stop"
EQU PBP.POSITION TO "Position"
EQU PBM.STEPIT   TO "StepIt"
EQU PBA.STEPIT   TO ""
*
*
  C22 = @(0,22):@(-4)
  C23 = @(0,23):@(-4)
  CMSG = @(0,20):@(-4)
*
  DIM METHOD.ARGS(20)
  MAT METHOD.ARGS= ""
  RESP = ""
*
* Child dialogs
  DIM CHILD.NAME(3)
  DIM CHILD.LOADED(3)
  NUM.CHILDREN = 3
*
  CHILD.NAME(1) = "ListViewDlg"
  CHILD.NAME(2) = "TreeViewDlg"
  CHILD.NAME(3) = "OtherDlg"
*
  FOR J = 1 TO 3
    CHILD.LOADED(J) = FALSE
  NEXT J
*
  CURR.DLG = ""
  TAB.X = 10
  TAB.Y = 20
  OFFDIALOG.X = 1000
*
  PRINT @(-1):"WIN.DBDEMO3":
  PRINT @(20,0):"Dialog box common controls demonstration":
  PRINT @(71,0):OCONV(DATE(),"D2"):
  CALL WIN.BOX(0,1,79,1,1)
*
  GOSUB 50; * Print brief description
*   
  STATE=''
  CALL WIN.SSTATE(STATE,'')
*
  GOSUB 100; * Create and show dialog
  IF ERR = 0 THEN
*                                   
    DLG=''
    CTRL=''
    EVENT=''
    ARGS = ""
    FINISHED=FALSE
*
    CALL WIN.COLOR("Yellow","Blue")
    CALL WIN.TWOPEN("DLGDEMO", "Events received", 10,8,70,20,"SINGLE")
    CALL WIN.COLOR("White","")
*
    LOOP
      CALL WIN.DBEVENT2(DLG,CTRL,EVENT,ARGS,"")
*
      BEGIN CASE
        CASE EVENT = 'U'; PRINT 'Unknown':
        CASE EVENT = 'M'; PRINT 'Menu':
        CASE EVENT = 'V'; PRINT 'Validation':
        CASE EVENT = 'D'; PRINT 'Default':
        CASE EVENT = 'C'; PRINT 'Button Click':
        CASE EVENT = 'DC'; PRINT 'Double Click':
        CASE EVENT = 'S'; PRINT 'Scroll':
        CASE CTRL = "Tab1"; PRINT TABCTRL.EVENTS<EVENT,1>:
        CASE CTRL = "Anim1"; PRINT "Stop":
        CASE 1
          PRINT 'Event ':EVENT:
      END CASE
*
      IF DLG # '' THEN
        PRINT ' Dialog ':DLG:' Control ':CTRL:
        IF ARGS # "" THEN PRINT " Args ":ARGS:
        PRINT
      END ELSE
        PRINT ' Data ':CTRL
      END
*
      BEGIN CASE
        CASE DLG = ''; IF CTRL ='*' THEN FINISHED=TRUE
        CASE DLG = DLG.NAME; GOSUB 1000; * Process DlgDemo events
        CASE DLG = CHILD.NAME(3); GOSUB 2300;* Others child dialog events
      END CASE
*
    UNTIL FINISHED DO
    REPEAT
*
    CALL WIN.TWCLOSE("DLGDEMO")
*
    CALL WIN.COLOR("White","Black")
    PRINT @(0,3):@(-3):"You exited with ":CTRL
    IF CTRL = "OK" THEN GOSUB 1100; * Display details
    CALL WIN.DBDEL(DLG.NAME)
*
* Delete child dialog boxes
   FOR J = 1 TO NUM.CHILDREN
      IF CHILD.LOADED(J) THEN CALL WIN.DBDEL(CHILD.NAME(J))
   NEXT J
*
  END
*
  CALL WIN.SSTATE('',STATE)
  PRINT C22:'Press <CR> to Exit demonstration':
  INPUT DUM:                                 
*
  STOP
*
* Brief description of dialog boxes
50 PRINT @(0,3):
  PRINT "The common controls are added to a dialog box in the same way"
  PRINT "   CALL WIN.DB<name>(DBX,NAME, X,Y,W,D,STYLE)"
  PRINT "where <name> is replaced by an the name for a particular control"
  PRINT "Examples:-"
  PRINT "   CALL WIN.DBTAB(DBX,'Tab1',X,Y,W,D,STYLE)"
  PRINT "   CALL WIN.DBTREE(DBX,'Oak',X,Y,W,D,STYLE)"
  PRINT
  PRINT "To set the events for a control use:"
  PRINT "   CALL WIN.DBEVENTS(DBX,NAME,EVENTS)"
  PRINT "Examples:"
  PRINT "   CALL WIN.DBEVENTS(DBX,'Tab1','SelChanged')"
  PRINT "   CALL WIN.DBEVENTS(DBX,'Oak', 'SelChanged':AM:'EndLabelEdit')"
  PRINT
  PRINT "Events are then monitored within a loop by:-"
  PRINT "   CALL WIN.DBEVENT2(DLG,CTRL,TYPE,ARGS,ESTACK)"
  PRINT
  PRINT "This example also demonstrates the use of 'Child' dialogs"
  PRINT "to create a dialog made of several pages"
  PRINT C22:'Press <CR> to Exit demonstration':
  INPUT DUM:
  PRINT C22:
  RETURN
*
* Create and show dialog
100 DBX=''
  DLG.NAME="DemoDlg3"
  CALL WIN.TWMSG("Creating Dialog ":DLG.NAME:"...", "Red", "Yellow", "DOUBLE")
  OPTS = ""
*
  APPDIR = ""
  CALL WIN.APPDIR(APPDIR)
*
  TITLE="Demonstration of Common Controls"
  STYLES = "WS_VISIBLE|WS_POPUP|DS_MODALFRAME|WS_SYSMENU|WS_CAPTION|WS_CLIPCHILDREN"
  CALL WIN.DBNEW(DBX, DLG.NAME, TITLE, 10,10,200,160, STYLES,OPTS)
*
* Set up a list of events to monitor
  TABCTRL.EVENTS = "SelChanged":AM:"KeyDown":VM:"KeyCode"
  CALL WIN.DBTAB(DBX, "Tab1", 5,5,190,130,"")
  CALL WIN.DBEVENTS(DBX,"Tab1", TABCTRL.EVENTS)
  CALL WIN.DBINIPRP(DBX,"Tab1","Labels","List view,Tree view,Others")
*
  CALL WIN.DBBUTTON(DBX,"OK","OK",8,140,'','',1)
  CALL WIN.DBBUTTON(DBX,"Cancel","Cancel",58,140,'','',0)
*
  CALL WIN.DBLOAD(DBX,ERR)
  IF ERR THEN       
    ERR.MSG='Loading with WIN.DBLOAD'
* Just delete dialog and try again if we get already exist error
    IF ERR = 3 THEN
      CALL WIN.DBDEL(DLG.NAME)
      CALL WIN.DBLOAD(DBX,ERR)
    END                                                          
  END
*         
  IF ERR = 0 THEN
    CALL WIN.DBSHOW(DLG.NAME, 0, ERR)
    IF ERR THEN
      CALL WIN.DBDEL(DLG.NAME)
      ERR.MSG = 'Displaying with WIN.DBSHOW'
    END ELSE
      * Get position for child pages in pixels
      TAB.PIXELS = TAB.X:AM:TAB.Y
      CALL WIN.DBUNIT(DLG.NAME, 4, TAB.PIXELS)
      TAB.PIXEL.X = TAB.PIXELS<1>
      TAB.PIXEL.Y = TAB.PIXELS<2>
    END
  END
*
  CALL WIN.TWCLOSE("MSG")
*
  IF ERR THEN
    CALL WIN.COLOR("Red","White")
    PRINT @(0,18):@(-4):ERR.MSG:' failed, Error Number ':ERR:
  END ELSE
     NEW.DLG = 1
     GOSUB 200; * Set up dialog
     ERR = 0; * Ignore any errors in createing the child
  END
*
  RETURN
*
* Set up and attach the child dialogs
200 * Call routine to load dialog if it is not already loaded
   IF CHILD.LOADED(NEW.DLG) = FALSE THEN
     BEGIN CASE
       CASE NEW.DLG = 1; GOSUB 300; * List view dialog
       CASE NEW.DLG = 2; GOSUB 310; * Tree view dialog
       CASE NEW.DLG = 3; GOSUB 320; * Others dialog
     END CASE
     IF ERR = 0 THEN
        CHILD.LOADED(NEW.DLG) = TRUE
     END ELSE
        RESP = ""
        CALL  WIN.DBMSGBOX(DLG.NAME,"Unable to show ":CHILD.NAME(NEW.DLG),"Error", "MB_ICONHAND", RESP)
     END
   END
*
* Disable and move old child dialog off the visible area
   IF CURR.DLG # "" THEN
      CALL WIN.DBENALL(CHILD.NAME(CURR.DLG),0,FALSE)
      CALL WIN.DBMOVE(CHILD.NAME(CURR.DLG), OFFDIALOG.X, TAB.PIXEL.Y)
   END
*
   IF ERR = 0 THEN   
*
* Enable and move the new child dialog to the correct place
      CALL WIN.DBENALL(CHILD.NAME(NEW.DLG),0,TRUE)
      CALL WIN.DBMOVE(CHILD.NAME(NEW.DLG),TAB.PIXEL.X, TAB.PIXEL.Y)
      CURR.DLG = NEW.DLG
   END ELSE
      CURR.DLG = ""
   END
*
   RETURN
* List view demo dialog
300 NAME = CHILD.NAME(1)
    OPTS = ""
    DBX = ""
    CALL WIN.DBNEW(DBX, NAME, "", TAB.X,TAB.Y,150,100, 'WS_CHILD|WS_VISIBLE|DS_CONTROL',OPTS)
    CALL WIN.DBLISTVW(DBX, "LV1", 2,2,146,96,"")
    CALL WIN.DBLOAD(DBX,ERR)
    IF ERR = 0 THEN CALL WIN.DBCHILD(NAME, DLG.NAME, ERR)
   RETURN
*
* Tree View demo dialog
310 NAME = CHILD.NAME(2)
    OPTS="" 
    DBX = ""
    CALL WIN.DBNEW(DBX, NAME, "", TAB.X, TAB.Y,150,100, "WS_CHILD|WS_VISIBLE|DS_CONTROL",OPTS)
    CALL WIN.DBTREEVW(DBX, "TV1", 2,2,146,96,"WS_BORDER|TVS_HASLINES|TVS_LINESATROOT|TVS_HASBUTTONS")
    CALL WIN.DBLOAD(DBX,ERR)
    IF ERR = 0 THEN CALL WIN.DBCHILD(NAME, DLG.NAME, ERR)
    IF ERR = 0 THEN
*
* Initialise the treeview
      CALL WIN.DBENALL(DLG.NAME,0,FALSE)
      BRANCH = ''
      RESP = ''
      FOR J = 1 TO 10
      METHOD.ARGS(1) = "Root Branch ":J
      CALL WIN.DBMETHOD(NAME,"TV1","InsertLine","I",MAT METHOD.ARGS,1,BRANCH)
      FOR K = 1 TO J
         METHOD.ARGS(1) = "Sub branch ":K
         METHOD.ARGS(2) = 0
         METHOD.ARGS(3) = 0
         METHOD.ARGS(4) = BRANCH
         CALL WIN.DBMETHOD(NAME,"TV1","InsertLine","IIII", MAT METHOD.ARGS,0,RESP)
      NEXT K
      NEXT J
      CALL WIN.DBSETPRP(NAME,"TV1","Redraw",TRUE)
      CALL WIN.DBENALL(DLG.NAME,0,TRUE)
   END
RETURN
*
* Other Controls dialog 
320 NAME = CHILD.NAME(3)
    OPTS = ""
    DBX = ""
    CALL WIN.DBNEW(DBX, NAME, "", TAB.X,TAB.Y,150,100, 'WS_CHILD|WS_VISIBLE|DS_CONTROL',OPTS)
    CALL WIN.DBEDIT(DBX,"Edit1",2,2,28,14,"")
    CALL WIN.DBUPDOWN(DBX, "UD1", 2,2,11,14,"UDS_AUTOBUDDY|UDS_SETBUDDYINT|UDS_ALIGNRIGHT")
    CALL WIN.DBINIPRP(DBX,"Edit1","",10)
    CALL WIN.DBBUTTON(DBX,"Start","Start", 40, 2, 40, 14, FALSE)
    CALL WIN.DBANIM(DBX,"Anim1", 2,18, 80, 20,"ACS_TRANSPARENT")
    CALL WIN.DBINIPRP(DBX,"Anim1","File", APPDIR:"Example\Script\FileCopy.avi")
    CALL WIN.DBEVENTS(DBX,"Anim1","Stop")
    CALL WIN.DBPRGRES(DBX,"Progress1", 2,46,80,8,"")
    CALL WIN.DBLOAD(DBX,ERR)
    IF ERR = 0 THEN CALL WIN.DBCHILD(NAME, DLG.NAME, ERR)
RETURN
*
* Process dialog DlgDemo events
1000 BEGIN CASE
    CASE CTRL='OK'
      CALL WIN.DBEND(DLG.NAME, TRUE)
      FINISHED=TRUE
    CASE CTRL='Cancel'
      CALL WIN.DBEND(DLG.NAME,FALSE)
      FINISHED=TRUE
    CASE CTRL="Tab1"
      IF TABCTRL.EVENTS<EVENT> = "SelChanged" THEN
         IDX = 0
         CALL WIN.DBGETPRP(DLG.NAME,CTRL,"SelectedItem",IDX)
         NEW.DLG = IDX+1
         GOSUB 200; * Change child dialog
      END
  END CASE
*
  RETURN
*
* Display result of dialog
1100 PRINT @(0,3):@(-3):"You clicked OK or pressed return to end the dialog"
  PRINT
  RETURN
*
* Child dialog 3 events (Others)
2300 *
  BEGIN CASE
  CASE CTRL = "Start" AND EVENT = "C";* Start button click event
     PRINT "Calling Play Method of Animation control"
     CALL WIN.DBSETPRP(CHILD.NAME(3),"Progress1", PBP.POSITION, 0)
     PROGRESS = 9
     MAT METHOD.ARGS = ""
     RET.VAL = ""
     METHOD.ARGS(3) = 1
     CALL WIN.DBMETHOD(CHILD.NAME(3),"Anim1",ANM.PLAY,ANA.PLAY, MAT METHOD.ARGS, 0, RET.VAL) 
  CASE CTRL = "Anim1";* Only event is stop
     * Increment the progress bar and restart the animation
     * if the progress bar hasn't finished
     MAT METHOD.ARGS = ""
     RET.VAL = ""
     CALL WIN.DBMETHOD(CHILD.NAME(3),"Progress1",PBM.STEPIT,PBA.STEPIT, MAT METHOD.ARGS, 0, RET.VAL)
     IF PROGRESS THEN
        PROGRESS = PROGRESS - 1
        RET.VAL = ""
        METHOD.ARGS(3) = 1
        CALL WIN.DBMETHOD(CHILD.NAME(3),"Anim1",ANM.PLAY,ANA.PLAY, MAT METHOD.ARGS, 0, RET.VAL) 
     END
  END CASE
*
RETURN
* 
END
