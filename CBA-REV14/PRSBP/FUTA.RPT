*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRSBP
* PROGRAM     - FUTA.RPT
* BY          - WALID YAMOUT
* DATE        - 05/25/84
* DESCRIPTION - Prints the Federal Unemployment Insurance Tax report
* MOD BY      - Paul Koldjeski]MT
* MOD DATE    - 03/04/88]1/12/89
* MOD TASK    - ]13595
* MOD DESC    - ]Change adjusted gross to print gross pay.
* MOD         - CHANGE TO USE ADJUSTED GROSS TASK 18643 (LMR)
* T26798 cmykleb 08/13/2002 * Add a division selection to report and
*                             add breaks on division and totals.
* T26556 cmkleb 08/13/2002 * Rev12 upgrade.
* ENDDOC
*********************************************************************
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PRS.CPYLIB>QTD-YTD
*COPY>CPYLIB>CHAR
*COPY>PRS.CPYLIB>MISCDED
*
*---- READ PROC
*
   PROCREAD INBUFF ELSE PRINT "CANT READ INPUT BUFFER":;INPUT GO$;STOP
   CONO=INBUFF<1>
*T26798 v
*  QTR=INBUFF<3>
*  BACKUP=INBUFF<4>
   DIV = INBUFF<3>
   QTR = INBUFF<4>
   BACKUP = INBUFF<6>
*T26798 ^
*
*---- OPEN FILES
*
   IF BACKUP # "N" THEN
      OPEN "S.COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN S.COMPANY":;INPUT GO$;STOP
      OPEN "S.EMPLOYEE" TO EMPLOYEE ELSE PRINT "CAN'T OPEN S.EMPLOYEE":;INPUT GO$;STOP
      OPEN "S.QTD-YTD" TO QTD.YTD ELSE PRINT "CAN'T OPEN S.QTD-YTD":;INPUT GO$;STOP
   END ELSE
      OPEN "COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN COMPANY":;INPUT  GO$;STOP
      OPEN "EMPLOYEE" TO EMPLOYEE ELSE PRINT "CAN'T OPEN EMPLOYEE":;INPUT GO$;STOP
      OPEN "QTD-YTD" TO QTD.YTD ELSE PRINT "CAN'T OPEN QTD-YTD":;INPUT  GO$;STOP
   END
   OPEN "MISCDED" TO MISCDED ELSE PRINT "CAN'T OPEN MISCDED":;INPUT GO$;STOP
*
*---- DETERMINE QUARTER
*
   RPT.QTR=''
   ANNUAL.FLAG="N"
   IF QTR=1 THEN RPT.QTR="(1ST QUARTER)"
   IF QTR=2 THEN RPT.QTR="(2ND QUARTER)"
   IF QTR=3 THEN RPT.QTR="(3RD QUARTER)"
   IF QTR=4 THEN RPT.QTR="(4TH QUARTER)"
   IF QTR="Y" THEN RPT.QTR="(ANNUALLY)"; QTR=4; ANNUAL.FLAG="Y"
   MATREAD COMP.REC FROM COMPANY, CONO ELSE PRINT "CAN'T READ COMPANY":;INPUT GO$;STOP
*
*---- HEADING
*
   HD1 = ""
   HD2 = ""
   CO.NAME = ""
   RPT.NAME = ""
   RPT.NO = INBUFF<2>
   CALL GET.PROG.HEAD(CONO,CO.NAME,RPT.NAME,RPT.NO,"",HD1,HD2)
   HD3 = SPACE(49): "EXEMPTION LEVEL = " : OCONV(CO.MAX.FUI.TAX, "MD2,$")
   HD4 = SPACE(62): "FUTA PERCENT = " : OCONV(CO.FUI.PCNT, "MD3")
   HD5 = SPACE(53):"ADJUSTED"
   HD6 = "SOCIAL SECURITY   EMPLOYEE NAME" :SPACE(20): "GROSS WAGES    EXEMPT WAGES"
   HD7 = "---------------   ------------------------------   ------------   ------------"
   HD8 = SPACE(68):RPT.QTR
*T26798 v
   LINE.CNT = 0
   PAGE.NO = 0
   FIRST = 1
   OLD.DIV = ""
   DIV.GROSS = 0
   DIV.EXEMPT = 0
*T26798 ^
   PRINTER ON
*
*---- INITIALIZE
*
   TOT.GROSS = 0
   TOT.EXEMPT = 0
   PAG.GROSS = 0
   PAG.EXEMPT = 0
*
*---- READ EMPLOYEE RECORD
100*
   READNEXT ID ELSE GOSUB 2000;GOTO 200
   MAT EMP.REC = ""
   MAT QTD.REC = ""
   MATREAD EMP.REC FROM EMPLOYEE,ID ELSE GOTO 100
   ALT.GROSS=0;ALT.NTSICK=0;QTD.NTD=0
*
*---- CHECK FOR ALTERNATIVE EMPLOYEE NO.
*
   IF EMP.ALT.NO # "" THEN
      MATREAD QTD.REC FROM QTD.YTD,ID[1,3]:EMP.ALT.NO ELSE MAT QTD.REC=""
      FOR I = 1 TO QTR
         ALT.GROSS=ALT.GROSS + QTD.GROSS<1,I>
         ALT.NTSICK=ALT.NTSICK+QTD.SK.NO.FI<1,I>
      NEXT I
      GOSUB 5000;ALT.GROSS=ALT.GROSS-NON.TAX.DED
   END
*
*---- READ EMPLOYEE NO.
*
   MATREAD QTD.REC FROM QTD.YTD,ID ELSE GOTO 100
   IF ANNUAL.FLAG="Y" THEN GOTO 50
   IF QTD.GROSS<1,QTR> + 0 = 0 THEN GOTO 100
50*
   GROSS.YTD=0;NTSICK.YTD=0
   FOR Y = 1 TO QTR
      GROSS.YTD=GROSS.YTD+QTD.GROSS<1,Y>
      NTSICK.YTD=NTSICK.YTD+QTD.SK.NO.FI<1,Y>
   NEXT Y
   IF ANNUAL.FLAG="Y" AND GROSS.YTD=0 THEN GOTO 100
*T26798 v
   IF FIRST THEN
      OLD.DIV = EMP.DIV
      FIRST = 0
      GOSUB 1000
   END
   IF EMP.DIV # OLD.DIV THEN GOSUB 2000;GOSUB 1000
   OLD.DIV = EMP.DIV
   LINE.CNT = LINE.CNT + 1
   IF LINE.CNT GE 50 THEN GOSUB 1000
*T26798 ^
   GOSUB 5000;GROSS.YTD=GROSS.YTD-NON.TAX.DED
   PAID=QTD.GROSS<1,QTR>-QTD.SK.NO.FI<1,QTR>-QTD.NTD
   THIS.FUI=GROSS.YTD-NTSICK.YTD;THAT.FUI=ALT.GROSS-ALT.NTSICK
   PRE.FUI=THIS.FUI-PAID
   BEGIN CASE
      CASE (THIS.FUI+THAT.FUI) > CO.MAX.FUI.TAX
         THIS.FUI=(CO.MAX.FUI.TAX-THAT.FUI)-PRE.FUI
      CASE THIS.FUI > CO.MAX.FUI.TAX
         THIS.FUI=CO.MAX.FUI.TAX-PRE.FUI
      CASE THAT.FUI > CO.MAX.FUI.TAX
         THIS.FUI=0
      CASE 1
         THIS.FUI=PAID
   END CASE
   IF THIS.FUI<0 THEN THIS.FUI=0
   FUI=THIS.FUI
   EXEMPT=0
*
   IF ANNUAL.FLAG="Y" THEN
      EXEMPT=GROSS.YTD-CO.MAX.FUI.TAX
      IF EXEMPT<0 THEN EXEMPT=0
   END ELSE
      EXEMPT=0
      IF PAID> FUI THEN EXEMPT=PAID-FUI
   END
*
*---- PRINT DETAIL LINE
*
   NAME = EMP.LAST.NAME:" ":EMP.FRST.NAME
   PRINT EMP.SOC.SEC "L#11       ":NAME "L#30   ":
   BEGIN CASE
*
      CASE ANNUAL.FLAG="N"
         PRINT OCONV((QTD.GROSS<1,QTR>-QTD.NTD),"MD2Z,") "R#12   ":OCONV(EXEMPT,"MD2Z,")"R#12"
         TOT.GROSS=TOT.GROSS+(QTD.GROSS<1,QTR>-QTD.SK.NO.FI<1,QTR>-QTD.NTD)
         TOT.EXEMPT=TOT.EXEMPT + EXEMPT
         PAG.GROSS=PAG.GROSS+(QTD.GROSS<1,QTR>-QTD.SK.NO.FI<1,QTR>-QTD.NTD)
         PAG.EXEMPT=PAG.EXEMPT+EXEMPT
*T26798 v
         DIV.GROSS=DIV.GROSS+(QTD.GROSS<1,QTR>-QTD.SK.NO.FI<1,QTR>-QTD.NTD)
         DIV.EXEMPT=DIV.EXEMPT+EXEMPT
*T26798 ^
*
      CASE ANNUAL.FLAG="Y"
         PRINT OCONV(GROSS.YTD, "MD2Z,") "R#12   ":OCONV(EXEMPT,"MD2Z,") "R#12"
         TOT.GROSS = TOT.GROSS + (GROSS.YTD-NTSICK.YTD)
         TOT.EXEMPT = TOT.EXEMPT + EXEMPT
         PAG.GROSS = PAG.GROSS + (GROSS.YTD-NTSICK.YTD)
         PAG.EXEMPT = PAG.EXEMPT + EXEMPT
*T26798 v
         DIV.GROSS = DIV.GROSS + (GROSS.YTD-NTSICK.YTD)
         DIV.EXEMPT = DIV.EXEMPT + EXEMPT
*T26798 ^
*
   END CASE
*
   GOTO 100
*
*---- PRINT GRAND TOTALS
*
200 *
   IF DIV # "ALL" THEN GOTO 201
   PRINT
   PRINT SPACE(51) : "------------   ------------"
   PRINT SPACE(34):"COMPANY TOTALS - ":OCONV(TOT.GROSS, "MD2,") "R#12   ":OCONV(TOT.EXEMPT, "MD2,") "R#12"
   PRINT
   GROSS = TOT.GROSS - TOT.EXEMPT
   PRINT SPACE(9): "TOTAL TAXABLE WAGES = " : OCONV(GROSS, "MD2,")
   EXEMPT = INT((GROSS / 100) * (CO.FUI.PCNT / 1000) + .5)
   PRINT "TAX DUE BEFORE STATE CREDITS = ":OCONV(EXEMPT, "MD2,")
201 *
   PRINTER OFF
   GOTO 999999
*
*--- PRINT HEADING
*
1000 *
   PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   HEAD1 = HD1:PAGE.NO
   HEAD3 = "DIVISION : ":EMP.DIV:HD3
   PRINT HEAD1
   PRINT HD2
   PRINT HD8
   PRINT HEAD3
   PRINT HD4
   PRINT
   PRINT HD5
   PRINT HD6
   PRINT HD7
   LINE.CNT = 9
   RETURN
*
*--- PRINT DIVISION TOTALS
*
2000 *
   IF FIRST THEN GOSUB 1000
   PRINT SPACE(51):"------------   ------------"
   PRINT SPACE(38):"DIV TOTALS - ":OCONV(DIV.GROSS, "MD2,") "R#12   ":OCONV(DIV.EXEMPT, "MD2,") "R#12"
   GROSS = DIV.GROSS - DIV.EXEMPT
   PRINT
   PRINT SPACE(15): "TAXABLE WAGES = " : OCONV(GROSS, "MD2,")
   EXEMPT = INT((GROSS / 100) * (CO.FUI.PCNT / 1000) + .5)
   PRINT "TAX DUE BEFORE STATE CREDITS = ":OCONV(EXEMPT, "MD2,")
   DIV.GROSS = 0
   DIV.EXEMPT = 0
   RETURN
*
*---- NON TAXABLE DEDUCTIONS
*
5000*
   NON.TAX.DED=0
   NTD.CNT=DCOUNT(QTD.DED,VM)
   FOR REF=1 TO NTD.CNT
      MATREAD MDED.REC FROM MISCDED,CONO:QTD.DED<1,REF> ELSE MAT MDED.REC=""
      IF MDED.TAXABLE="B" THEN
         IF MDED.NTXFUTA = 'Y' THEN
            FOR X =1 TO QTR
               NON.TAX.DED=NON.TAX.DED+QTD.AMNT<1,REF,X>
               IF X=QTR THEN QTD.NTD=QTD.NTD+QTD.AMNT<1,REF,X>
            NEXT X
         END
      END
   NEXT REF
   RETURN
999999*
END
