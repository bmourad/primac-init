*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.EMPLOYEE
*COPY>CPYLIB>COM.GEN.XREF
*COPY>PRS.CPYLIB>COM.PAYROLL.INPUT
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PRSBP
* PROGRAM     - PAYROLL.INPUT
* BY          - WALID YAMOUT , C.B.A
* DATE        - 06/11/85
* MODIFIED    - 03/17/88 BY KERRY WILSON
* DESCRIPTION -
*ENDDOC
*********************************************************************
*
*--- INSERT FILES EQUATES
*
*COPY>PRS.CPYLIB>QTD-YTD
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PRS.CPYLIB>PAYREG
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>PRS.CPYLIB>PAYROLL.HOURS
*COPY>CPYLIB>CHAR
      DIM OTH.INC.REC(5)
      EQU OTH.INC.DESC TO OTH.INC.REC(1)
      DIM SAVE.PAYREG(55)
      ERRMSG = ""
      PROCREAD ID ELSE ERRMSG = "MUST RUN FROM MENU"; GOSUB 91000; GOTO 999999
*
*--- GET COMPANY
*
      MAT FILE.VARS = ""
      OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
      CONO = ""
      CONO = ID<1>
      INPUT.TYPE = ID<3>
      INPUT.CYCLE = ID<9>
      IF INPUT.CYCLE = "" THEN INPUT.CYCLE = "ALL"
      IF INPUT.TYPE # "SALARY" AND INPUT.TYPE # "STANDARD" AND INPUT.TYPE # "DETAIL" THEN
         ERRMSG = "PAYROLL INPUT TYPE ERROR"; GOSUB 91000; GOTO 999999
      END
      MATREAD COMP.REC FROM COMPANY, CONO ELSE
         ERRMSG = "COMPANY ":CONO:" IS NOT ON FILE"
         GOSUB 91000; GOTO 999999
      END
      MATREAD HRS.REC FROM CONTROL, CONO:"PAYROLL.HOURS" ELSE MAT HRS.REC = ""
      HRS.CNT = COUNT(HRS.DESC,VM) + (HRS.DESC # "")
      IF HRS.CNT < 1 OR HRS.CNT > 11 THEN
         ERRMSG = "NEED TO SETUP PAYROLL HOURS FOR COMPANY ":CONO
         GOSUB 91000; GOTO 999999
      END
*
*--- OPEN FILES
*
      OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG = 'EMPLOYEE FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','OTHER-INC' TO OTHER.INC ELSE ERRMSG = 'OTHER.INC FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','BATCH1' TO BATCH1 ELSE ERRMSG = 'BATCH1 FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','QTD-YTD' TO QTD.YTD ELSE ERRMSG = 'QTD-YTD FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','PRS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PRS.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','PAYREG' TO PAYREG ELSE ERRMSG = 'PAYREG FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','DEDREG' TO DEDREG ELSE ERRMSG = 'DEDREG FILE IS MISSING'; GOSUB 91000; GOTO 999999
      OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 999999
      IF CO.EMP.XREF = "Y" THEN
         OPEN '','EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE ERRMSG = 'EMPLOYEE.XREF FILE IS MISSING'; GOSUB 91000; GOTO 999999
      END
      UNKNOWN = "????????"
*
*--- SCREEN
*
      MAT EDIT.COM.DRIVER = ''
      ECD.SCRN.CNT = 2
      ECD.SCRN.NAME<1> = 'PAYROLL.INPUT'
      ECD.SCRN.NAME<2> = 'PAYROLL.INPUT.SUB'
      ECD.ACTION=1;CALL SCRN.EDIT
      MAT SCV.REC = ""
      PRINT.HRS = ""
      SAVE.VALDAT = "F,E,5,7,8"
      FOR I = 1 TO HRS.CNT
         PRINT.HRS<1,I> = (I + 8) "R#2" : "- " "L#2" : HRS.SHORT<1,I> "L#7" : " :" "L#2"
         SAVE.VALDAT = SAVE.VALDAT : "," : (I + 8)
      NEXT I
*
*--- EXCLUSION OF SALARY EMPLOYEE
*
      IF INPUT.TYPE = "SALARY" THEN
         VOID.EMP = ""
         CALL PAYROLL.INPUT.SUB
      END
*
*--- BATCH NUMBER
*
10*
      ECD.SCRN.NO = 1
      MAT SCV.REC = ""
      ECD.ACTION=6;CALL SCRN.EDIT
      ECD.NUM = 25; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PRINT.HRS<1>
      ECD.SUB.NUM = 1; ECD.ACTION = 7; CALL SCRN.EDIT
      BATCH.NO = ""
      MAT EMP.REC = ""
      ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 999999
      CASE ECD.RET.VALUE # ""
         RECORD = 1
         BATCH.NO = ECD.RET.VALUE
         MATREADU PAY.REC FROM BATCH1, CONO:BATCH.NO ELSE
            MAT PAY.REC = ""
            FOR OPTION = 1 TO 6 UNTIL ECD.RET.VALUE = "END"
               ON OPTION GOSUB 1000,2000,5000,7000,8000,9000
            NEXT OPTION
            IF ECD.RET.VALUE = "END" THEN RELEASE BATCH1, CONO:BATCH.NO; GOTO 10
            GOTO 20
         END
         GOSUB 80000
20*
         PAY.BATCH.NO = BATCH.NO
         PAY.RECORDS = 1
         GOTO 50
      END CASE
      GOTO 10
*
*--- ENTER OPTIONS FOR BATCH
*
50*
      ECD.NUM = 30
      ECD.VALDAT = SAVE.VALDAT : ",1,2"
      SCV.REC(ECD.NUM)<1> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
         RELEASE BATCH1, CONO:BATCH.NO
         GOTO 10
      CASE NUM(OPTION) AND OPTION > 0 AND OPTION < 20
         ON OPTION GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000
      CASE OPTION = 'F'
         MATWRITE PAY.REC ON BATCH1, CONO:BATCH.NO
         MAT SAVE.PAYREG = MAT PAY.REC
         WEEKS = PAY.WEEKS
         DAYS = PAY.DAYS
         GOTO 100
      END CASE
      GOTO 50
*
*--- MAIN PROCESS
*
100*
      FOR SCV = 1 TO SCV.REC.SIZE
         SCV.REC(SCV)<1> = ''
      NEXT SCV
      SCV.REC(9)<1> = BATCH.NO
      ECD.ACTION=6;CALL SCRN.EDIT
      ECD.NUM = 25; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = PRINT.HRS<1>
      ECD.SUB.NUM = 1; ECD.ACTION = 7; CALL SCRN.EDIT
*
*--- SALARY ROUTINE
*
      IF INPUT.TYPE = "SALARY" THEN
         ECD.NUM = 9; ECD.ACTION = 5; CALL SCRN.EDIT
110*
         EMP.NO = ""
         READNEXT ID ELSE
            RELEASE BATCH1, CONO:BATCH.NO
            GOTO 999999
         END
         EMP.NO = ID[4,4]
         LOCATE EMP.NO IN VOID.EMP,1 SETTING FND ELSE FND = 0
         IF FND THEN GOTO 110
         MATREADU EMP.REC FROM EMPLOYEE, CONO:EMP.NO ELSE MAT EMP.REC = ""; GOTO 150
         ECD.NUM = 1; SCV.REC(1)<1> = EMP.NO; ECD.ACTION = 5; CALL SCRN.EDIT
         IF EMP.REHR.DATE - EMP.TERM.DATE < 0 THEN
            ERRMSG = "WARNING : Employee ":EMP.NO:" has been terminated on ":OCONV(EMP.TERM.DATE,"D2/"):"."
            GOSUB 91000
         END
         SCV.REC(2)<1> = EMP.FRST.NAME :" ": EMP.LAST.NAME
         ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT
         MATREAD QTD.REC FROM QTD.YTD, CONO:EMP.NO ELSE MAT QTD.REC = ""
         MAT PAY.REC = MAT SAVE.PAYREG
         PAY.ISSUE = 1
         PAY.EMP = EMP.NO
         PAY.SHIFT = EMP.SHIFT
         PAY.RATE = EMP.SALARY
*    PAY.MISC.DED = "Y"
         PAY.DEPT = EMP.DEPT
         PAY.DIV = EMP.DIV
         PAY.COST.CNTR = EMP.COST.CNTR
         LOCATE "VAC" IN HRS.QTD<1>,1 SETTING FND ELSE FND = 0
         IF FND THEN
            SAVE.HRS = PAY.HOURS<1,1,HRS.SMV<1,FND>>
            IF SAVE.HRS > 0 AND (SAVE.HRS + SUM(QTD.VAC.HRS)) > (EMP.MAX.VAC * 100) THEN
               EXC.HRS = OCONV((SAVE.HRS + SUM(QTD.VAC.HRS) - (EMP.MAX.VAC * 100)), "MD2")
               ECD.PMSG = "VAC EXCEEDS MAX BY ":EXC.HRS:" ACCEPT (Y/N) :"
               ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE # "Y" THEN GOTO 150
            END
         END
         LOCATE "SICK" IN HRS.QTD<1>,1 SETTING FND ELSE FND = 0
         IF FND THEN
            SAVE.HRS = PAY.HOURS<1,1,HRS.SMV<1,FND>>
            IF SAVE.HRS > 0 AND (SAVE.HRS + SUM(QTD.SCK.HRS)) > (EMP.MAX.SIC * 100) THEN
               EXC.HRS = OCONV((SAVE.HRS + SUM(QTD.SCK.HRS) - (EMP.MAX.SIC * 100)), "MD2")
               ECD.PMSG = "SICK EXCEEDS MAX BY ":EXC.HRS:" ACCEPT (Y/N) :"
               ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE # "Y" THEN GOTO 150
            END
         END
         MATWRITE PAY.REC ON PAYREG, CONO:EMP.NO:PAY.ISSUE
150*
         RELEASE EMPLOYEE, CONO:EMP.NO
         GOTO 110
      END
*
*--- ENTER EMPLOYEE NUMBER
*
200*
      EMP.NO = ""
      ISSUE = ""
      ECD.NUM = 1; ECD.ACTION=4;CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         RELEASE BATCH1, CONO:BATCH.NO
         GOTO 10
      CASE ECD.RET.VALUE = "N"
         READNEXT ID ELSE
            ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "Y" THEN GOTO 999999 ELSE GOTO 200
         END
         EMP.NO = ID[4,4]
         MATREADU EMP.REC FROM EMPLOYEE, CONO:EMP.NO ELSE
            MAT EMP.REC = ""
            RELEASE EMPLOYEE, CONO:EMP.NO
            ERRMSG = "EMPLOYEE ":EMP.NO:" IS NOT ON FILE"
            GOSUB 91000
            GOTO 200
         END
         IF EMP.REHR.DATE - EMP.TERM.DATE < 0 THEN
            ERRMSG = "WARNING : Employee ":EMP.NO:" has been terminated on ":OCONV(EMP.TERM.DATE,"D2/"):"."
            GOSUB 91000
         END
         SCV.REC(1)<1> = EMP.NO
      CASE ECD.RET.VALUE = ""
         IF CO.EMP.XREF # "Y" THEN GOTO 200
         ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 200
         MAT GEN.XREF.REC = ''
         GXR.CO = CONO
         GXR.LOC = 1
         GXR.HEADING<1,1> = 'EMP#'
         GXR.HEADING<1,2> = 'FIRST NAME'
         GXR.HEADING<1,3> = 'LAST NAME'
         GXR.HEADING<1,4> = 'STATUS'
         GXR.HEADING<1,5> = 'CYCLE'
         GXR.ATT<1,1> = 0
         GXR.ATT<1,2> = 5
         GXR.ATT<1,3> = 4
         GXR.ATT<1,4> = 30
         GXR.ATT<1,5> = 31
         GXR.LEN<1,1> = 4
         GXR.LEN<1,2> = 20
         GXR.LEN<1,3> = 20
         GXR.LEN<1,4> = 6
         GXR.LEN<1,5> = 5
         GXR.XREF = EMPLOYEE.XREF
         GXR.FILE = EMPLOYEE
         GXR.TOP.LINE<1,1> = "EMPLOYEE XREF SEARCH"
         GXR.TOP.LINE<1,2> = "FOR STRING : ":ECD.RET.VALUE
         GXR.ID = ''
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = '' THEN GOTO 100
         MATREADU EMP.REC FROM EMPLOYEE, CONO:GXR.ID ELSE
            RELEASE EMPLOYEE, CONO:GXR.ID
            SCV.REC(2)<1> = ''
            ERRMSG = 'EMPLOYEE NUMBER ':GXR.ID:' IS MISSING'; GOSUB 91000; GOTO 200
         END
         EMP.NO = GXR.ID
         IF EMP.REHR.DATE - EMP.TERM.DATE < 0 THEN
            ERRMSG = "WARNING : Employee ":EMP.NO:" has been terminated on ":OCONV(EMP.TERM.DATE,"D2/"):"."
            GOSUB 91000
         END
         SCV.REC(1)<1> = EMP.NO
      CASE NUM(ECD.RET.VALUE)
         ECD.RET.VALUE = STR("0",4-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
         MATREADU EMP.REC FROM EMPLOYEE, CONO:ECD.RET.VALUE ELSE
            RELEASE EMPLOYEE, CONO:ECD.RET.VALUE
            ERRMSG = "EMPLOYEE ":ECD.RET.VALUE:" IS NOT ON FILE"; GOSUB 91000
            GOTO 200
         END
         SCV.REC(1)<1> = ECD.RET.VALUE
         EMP.NO = ECD.RET.VALUE
         IF EMP.REHR.DATE - EMP.TERM.DATE < 0 THEN
            ERRMSG = "WARNING : Employee ":EMP.NO:" has been terminated on ":OCONV(EMP.TERM.DATE,"D2/"):"."
            GOSUB 91000
         END
      CASE 1
         ERRMSG = "INVALID INPUT"; GOSUB 91000; GOTO 200
      END CASE
      MATREAD QTD.REC FROM QTD.YTD, CONO:EMP.NO ELSE MAT QTD.REC = ""
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:EMP.DEPT ELSE MAT DEPT.REC = ""
      ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
      SCV.REC(2)<1> = EMP.FRST.NAME :" ": EMP.LAST.NAME
      ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT
      SCV.REC(3)<1> = EMP.DEPT
      SCV.REC(4)<1> = DEPT.DESC
      SCV.REC(5)<1> = EMP.SHIFT
      IF EMP.STATUS = "H" THEN
         SCV.REC(6)<1> = OCONV(EMP.RATE, "MD4")
      END ELSE
         SCV.REC(6)<1> = OCONV(EMP.SALARY, "MD2")
      END
      SCV.REC(7)<1> = EMP.UNION
300*
      ECD.NUM = 8; SCV.REC(8)<1> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 200
      ISSUE = ECD.RET.VALUE
      RECORD = 1
      MATREADU PAY.REC FROM PAYREG, CONO:EMP.NO:ISSUE ELSE
         MAT PAY.REC = ""
         ECD.NUM = 32; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE # "Y" THEN
            RELEASE PAYREG, CONO:EMP.NO:ISSUE
            RELEASE EMPLOYEE, CONO:EMP.NO
            GOTO 100
         END
         GOSUB 22000
         GOSUB 9000
         IF ECD.RET.VALUE = "END" THEN
            RELEASE PAYREG, CONO:EMP.NO:ISSUE
            RELEASE EMPLOYEE, CONO:EMP.NO
            GOTO 100
         END
         GOTO 500
      END
      IF PAY.STATUS # "" THEN
         RELEASE PAYREG, CONO:EMP.NO:ISSUE
         ERRMSG = "CANNOT CHANGE THIS CHECK BECAUSE OF THE STATUS"; GOSUB 91000; GOTO 300
      END
      IF PAY.BATCH.NO # BATCH.NO THEN
         RELEASE PAYREG, CONO:EMP.NO:ISSUE
         ERRMSG = "THIS CHECK IS FOR DIFFERENT BATCH"; GOSUB 91000; GOTO 300
      END
      IF PAY.WEEKS # WEEKS THEN PAY.WEEKS = WEEKS
      IF PAY.DAYS # DAYS THEN PAY.DAYS = DAYS
      GOSUB 80000
*
*--- ENTER OPTIONS
*
500*
      ECD.NUM = 34
      IF INPUT.TYPE = "DETAIL" THEN
         ECD.VALDAT = SAVE.VALDAT : ",3,4,6,V,R"
         ECD.PMSG = "Enter # to Change, (R)ecord, (V)oid, (F)ile, (E)xit :"
      END ELSE
         ECD.VALDAT = SAVE.VALDAT : ",3,4,6,V"
         ECD.PMSG = "Enter # to Change, (V)oid, (F)ile, (E)xit :"
      END
      SCV.REC(ECD.NUM)<1> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
         RELEASE PAYREG, CONO:EMP.NO:ISSUE
         RELEASE EMPLOYEE, CONO:EMP.NO
         GOTO 100
      CASE NUM(OPTION) AND OPTION > 0 AND OPTION < 20
         ON OPTION GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000
      CASE OPTION = 'V'
         PAY.STATUS = "DELETE"
         MATWRITE PAY.REC ON PAYREG, CONO:EMP.NO:ISSUE
         DELETE DEDREG, CONO:EMP.NO:ISSUE
         GOTO 100
      CASE OPTION = 'F'
         MATWRITE PAY.REC ON PAYREG, CONO:EMP.NO:ISSUE
         GOTO 100
      CASE OPTION = "R"
         GOSUB 800
      END CASE
      GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- RECORD REQUEST
*
800*
      ECD.VALDAT = "A,D,N,E"
      FOR II = 1 TO PAY.RECORDS
         ECD.VALDAT = ECD.VALDAT :",":II
      NEXT II
      ECD.NUM = 33; ECD.ACTION = 4; CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "E"
         GOTO 899
      CASE REQUEST = "N" AND PAY.RECORDS > 1
         IF RECORD < PAY.RECORDS THEN
            RECORD = RECORD + 1
         END ELSE
            RECORD = 1
         END
         GOSUB 80000
      CASE REQUEST = "A"
         IF PAY.RECORDS < 25 THEN
            RECORD = PAY.RECORDS + 1
            GOSUB 22000
            GOSUB 9000
            IF ECD.RET.VALUE = "END" THEN GOSUB 23000
         END ELSE
            ERRMSG = "YOU REACHED MAX RECORDS (25)";GOSUB 91000
         END
      CASE REQUEST = "D"
         IF PAY.RECORDS < 2 THEN
            ERRMSG = "CAN NOT DELETE THE LAST RECORD; YOU CAN VOID THE CHECK"
            GOSUB 91000
         END ELSE
            GOSUB 23000
         END
      CASE NUM(REQUEST)
         RECORD = REQUEST
         GOSUB 80000
      END CASE
      GOTO 800
899*
      RETURN
*
*--- DAYS WORKED
*
1000*
      ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN PAY.DAYS = ECD.RET.VALUE
      RETURN
*
*--- WEEKS WORKED
*
2000*
      ECD.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 2999
      CASE NUM(ECD.RET.VALUE)
         ECD.RET.VALUE = ICONV(ECD.RET.VALUE, "MD3")
         IF ECD.RET.VALUE > 99999 OR ECD.RET.VALUE <= 0 THEN GOTO 2000
      CASE ECD.RET.VALUE = "W"
         ECD.RET.VALUE = 1000
      CASE ECD.RET.VALUE = "B"
         ECD.RET.VALUE = 2000
      CASE ECD.RET.VALUE = "S"
         ECD.RET.VALUE = 2167
      CASE ECD.RET.VALUE = "M"
         ECD.RET.VALUE = 4334
      CASE 1
         ERRMSG = "INVALID INPUT"; GOSUB 91000; GOTO 2000
      END CASE
      PAY.WEEKS = ECD.RET.VALUE
2999*
      ECD.NUM = 11; SCV.REC(11)<1> = OCONV(PAY.WEEKS, "MD3")
      ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*--- SHIFT
*
3000*
      ECD.NUM = 13; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN PAY.SHIFT<1,RECORD> = ECD.RET.VALUE
      RETURN
*
*--- RATE/SALARY
*
4000*
      IF EMP.STATUS = "S" THEN ECD.SCALER = 2
      ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN PAY.RATE<1,RECORD> = ECD.RET.VALUE
      RETURN
*
*--- OTHER INCOME AND CODE
*
5000*
      ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = ""
         PAY.OTH.INC<1,RECORD> = ""
         PAY.OTH.CODE<1,RECORD> = ""
         GOTO 5599
      CASE (ECD.RET.VALUE*(520/PAY.WEEKS)) > 399999 AND EMP.FIT.CALC = ""
         ERRMSG = "AMOUNT IS OVER THE LIMITS OF TAX TABLES"; GOSUB 91000; GOTO 5000
      END CASE
      PAY.OTH.INC<1,RECORD> = ECD.RET.VALUE
5500*
      ECD.NUM = 16; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 5000
      PAY.OTH.CODE<1,RECORD> = ECD.RET.VALUE
5599*
      IF PAY.OTH.CODE<1,RECORD> = "" THEN
         SCV.REC(16)<1> = ""
         SCV.REC(17)<1> = ""
      END ELSE
         MATREAD OTH.INC.REC FROM OTHER.INC, CONO:PAY.OTH.CODE<1,RECORD> ELSE
            MAT OTH.INC.REC = ""
            ERRMSG = "OTHER INCOME CODE ":PAY.OTH.CODE<1,RECORD>: "IS NOT ON FILE"
            GOSUB 91000; GOTO 5500
         END
         SCV.REC(16)<1> = PAY.OTH.CODE<1,RECORD>
         SCV.REC(17)<1> = OTH.INC.DESC
      END
      ECD.NUM = 16; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 17; ECD.ACTION = 5; CALL SCRN.EDIT
      GOSUB 5700
      ECD.NUM = 29; ECD.ACTION = 5; CALL SCRN.EDIT
      RETURN
*
*--- TOT OTHER INC
*
5700*
      PAY.TOT.INC = 0
      FOR II = 1 TO PAY.RECORDS
         PAY.TOT.INC = PAY.TOT.INC + PAY.OTH.INC<1,II>
      NEXT II
      SCV.REC(29)<1> = PAY.TOT.INC
      RETURN
*
*--- DIVISION & DEPARTMENT & COST CENTER
*
6000*
      ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         MATREAD DIV.REC FROM DIVISION, CONO:PAY.DIV<1,RECORD> ELSE
            MAT DIV.REC = ""; DIV.DESC = UNKNOWN
         END
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:PAY.DEPT<1,RECORD> ELSE
            MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
         END
         IF PAY.COST.CNTR<1,RECORD> = "000" THEN
            MAT CCTR.REC = ""; CCTR.DESC = "GENERAL COST CENTER"
         END ELSE
            MATREAD CCTR.REC FROM COST.CNTR,CONO:PAY.COST.CNTR<1,RECORD> ELSE
               MAT CCTR.REC = ""; CCTR.DESC = UNKNOWN
            END
         END
         ECD.NUM = 18; SCV.REC(18)<1> = PAY.DIV<1,RECORD>; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 19; SCV.REC(19)<1> = DIV.DESC; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 20; SCV.REC(20)<1> = PAY.DEPT<1,RECORD>; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 21; SCV.REC(21)<1> = DEPT.DESC; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 35; SCV.REC(35)<1> = PAY.COST.CNTR<1,RECORD>; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 36; SCV.REC(36)<1> = CCTR.DESC; ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 6999
      CASE ECD.RET.VALUE # ""
         MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
            MAT DIV.REC = ""
            ERRMSG = "DIVISION ":ECD.RET.VALUE:" IS NOT ON FILE"
            GOSUB 91000; GOTO 6000
         END
         PAY.DIV<1,RECORD> = ECD.RET.VALUE
         ECD.NUM = 19; SCV.REC(19)<1> = DIV.DESC; ECD.ACTION = 5; CALL SCRN.EDIT
      CASE ECD.RET.VALUE = ""
         MAT GEN.XREF.REC = ''
         GXR.CO = CONO
         GXR.HEADING<1,2> = "DISCRIPTION"
         GXR.ATT<1,1> = 0
         GXR.ATT<1,2> = 1
         GXR.LEN<1,1> = 2
         GXR.LEN<1,2> = 30
         GXR.XREF = CONTROL
         GXR.FILE = DIVISION
         GXR.LOC = 1
         GXR.TOP.LINE<1,1> = "DIVISION XREF SEARCH"
         GXR.TOP.LINE<1,2> = "FOR STRING : ":ECD.RET.VALUE
         GXR.HEADING<1,1> = 'DV'
         GXR.ID = ''
         GXR.SRCH.ID = "DIVISIONS"
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            SCV.REC(19)<1> = ''
            ECD.ACTION=3;CALL SCRN.EDIT
            GOTO 6000
         END ELSE
            MATREAD DIV.REC FROM DIVISION, CONO:GXR.ID ELSE
               ERRMSG = 'DIVISION NUMBER ':GXR.ID:' IS MISSING'
               GOSUB 91000
               SCV.REC(19)<1> = ''
               ECD.ACTION = 3; CALL SCRN.EDIT
               GOTO 6000
            END
            PAY.DIV<1,RECORD> = GXR.ID
            SCV.REC(18)<1> = PAY.DIV<1,RECORD>
            SCV.REC(19)<1> = DIV.DESC
            ECD.ACTION = 3; CALL SCRN.EDIT
         END
      END CASE
6500*
      ECD.NUM = 20; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 6000
      CASE ECD.RET.VALUE = "???"
         MAT GEN.XREF.REC = ""
         GXR.XREF = DIVISION
         GXR.FILE = DEPARTMENT
         GXR.TOP.LINE = "DEPARTMENT XREF SEARCH"
         GXR.HEADING<1,1> = "DEPT"
         GXR.HEADING<1,2> = "DESCRIPTION"
         GXR.LEN<1,1> = 5
         GXR.LEN<1,2> = 30
         GXR.LOC = 2
         GXR.ATT<1,1> = 0
         GXR.ATT<1,2> = 2
         GXR.CO = CONO
         GXR.SRCH.ID = PAY.DIV<1,RECORD>
         GXR.ID = ""
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(20)<1> = ""
            SCV.REC(21)<1> = ""
            ECD.ACTION = 3; CALL SCRN.EDIT
            GOTO 6500
         END ELSE
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
               MAT DEPT.REC = ""
               ERRMSG = "DEPARTMENT ":GXR.ID:" IS NOT ON FILE"; GOSUB 91000
               SCV.REC(20)<1> = ""; SCV.REC(21)<1> = ""
               ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 6500
            END
            PAY.DEPT<1,RECORD> = GXR.ID
            SCV.REC(20)<1> = GXR.ID
            SCV.REC(21)<1> = DEPT.DESC
            ECD.ACTION = 3; CALL SCRN.EDIT
         END
      CASE (ECD.RET.VALUE MATCHES "2X") OR (ECD.RET.VALUE MATCHES '2X"-"2X')
         LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING DFND ELSE
            ERRMSG = "DEPARTMENT ":ECD.RET.VALUE:" DOES NOT BELONG TO DIVISION ":PAY.DIV<1,RECORD>
            GOSUB 91000; GOTO 6500
         END
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
            MAT DEPT.REC = ""
            ERRMSG = "DEPARTMENT ":ECD.RET.VALUE:" IS MISSING"; GOSUB 91000; GOTO 6500
         END
         PAY.DEPT<1,RECORD> = ECD.RET.VALUE
         ECD.NUM = 21; SCV.REC(21)<1> = DEPT.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE 1
         ERRMSG = "INVALID INPUT"; GOSUB 91000; GOTO 6500
      END CASE
6700*
      ECD.NUM = 35; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 6000
      CASE ECD.RET.VALUE = "???"
         MAT GEN.XREF.REC = ""
         GXR.XREF = DEPARTMENT
         GXR.FILE = COST.CNTR
         GXR.TOP.LINE = "COST CENTER XREF SEARCH"
         GXR.HEADING<1,1> = "COST CNTR"
         GXR.HEADING<1,2> = "DESCRIPTION"
         GXR.LEN<1,1> = 9
         GXR.LEN<1,2> = 30
         GXR.LOC = 5
         GXR.ATT<1,1> = 0
         GXR.ATT<1,2> = 1
         GXR.CO = CONO
         GXR.SRCH.ID = PAY.DEPT<1,RECORD>
         GXR.ID = ""
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(35)<1> = ""
            SCV.REC(36)<1> = ""
            ECD.ACTION = 3; CALL SCRN.EDIT
            GOTO 6700
         END ELSE
            MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
               MAT CCTR.REC = ""
               ERRMSG = "COST CENTER ":GXR.ID:" IS NOT ON FILE"; GOSUB 91000
               SCV.REC(35)<1> = ""; SCV.REC(36)<1> = ""
               ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 6700
            END
            PAY.COST.CNTR<1,RECORD> = GXR.ID
            SCV.REC(35)<1> = GXR.ID
            SCV.REC(36)<1> = CCTR.DESC
            ECD.ACTION = 3; CALL SCRN.EDIT
         END
      CASE ECD.RET.VALUE = "000"
         MAT CCTR.REC = ""; CCTR.DESC = "GENERAL COST CENTER"
         PAY.COST.CNTR<1,RECORD> = ECD.RET.VALUE
         ECD.NUM = 36; SCV.REC(36)<1> = CCTR.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE (ECD.RET.VALUE MATCHES "3N")
         LOCATE ECD.RET.VALUE IN DEPT.CCTRS<1>,1 SETTING DFND ELSE
            ERRMSG = "COST CENTER ":ECD.RET.VALUE:" DOES NOT BELONG TO DEPARTMENT ":PAY.DEPT<1,RECORD>
            GOSUB 91000; GOTO 6700
         END
         MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
            MAT CCTR.REC = ""
            ERRMSG = "COST CENTER ":ECD.RET.VALUE:" IS MISSING"; GOSUB 91000; GOTO 6700
         END
         PAY.COST.CNTR<1,RECORD> = ECD.RET.VALUE
         ECD.NUM = 36; SCV.REC(36)<1> = CCTR.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
      CASE 1
         ERRMSG = "INVALID INPUT"; GOSUB 91000; GOTO 6700
      END CASE
6999*
      RETURN
*
*--- MISC DED
*
7000*
      IF RECORD > 1 THEN GOTO 7999
      ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN PAY.MISC.DED = ECD.RET.VALUE
7999*
      RETURN
*
*--- CHECK NUMBER
*
8000*
      IF RECORD > 1 THEN GOTO 8999
      ECD.NUM = 23; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 8999
      PAY.CHECK.NO = ECD.RET.VALUE
      IF PAY.CHECK.NO = "" THEN PAY.MANUAL = "" ELSE PAY.MANUAL = "M"
8999*
      RETURN
*
*--- HOURS
*
9000*
      ECD.NUM = 26; ECD.SUB.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 1; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 9000
10000*
      IF HRS.CNT < 2 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 2; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 10000
11000*
      IF HRS.CNT < 3 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 3; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 11000
12000*
      IF HRS.CNT < 4 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 4; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 12000
13000*
      IF HRS.CNT < 5 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 5; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 13000
14000*
      IF HRS.CNT < 6 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 6; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 14000
15000*
      IF HRS.CNT < 7 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 7; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 15000
16000*
      IF HRS.CNT < 8 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 8; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 16000
17000*
      IF HRS.CNT < 9 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 9; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 17000
18000*
      IF HRS.CNT < 10 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 10; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 18000
19000*
      IF HRS.CNT < 11 THEN GOTO 19999
      ECD.NUM = 26; ECD.SUB.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19999
      SUB.NUM = 11; GOSUB 20000; IF ECD.RET.VALUE = "END" THEN GOTO 19000
19999*
      IF ECD.RET.VALUE = "END" THEN ECD.RET.VALUE = ""
      RETURN
20000*
      BEGIN CASE
      CASE HRS.QTD<1,SUB.NUM> = "VAC" AND PAY.EMP # ""
         IF EMP.MAX.VAC = "" THEN EMP.MAX.VAC = 0
         IF (ECD.RET.VALUE + SUM(QTD.VAC.HRS)) > (EMP.MAX.VAC * 100) AND ECD.RET.VALUE > 0 THEN
            SAVE.HRS = ECD.RET.VALUE
            EXC.HRS = OCONV((ECD.RET.VALUE + SUM(QTD.VAC.HRS) - (EMP.MAX.VAC * 100)), "MD2")
            ECD.PMSG = "VAC EXCEEDS MAX BY ":EXC.HRS:" ACCEPT (Y/N) :"
            ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "Y" THEN
               ECD.RET.VALUE = "END"; GOTO 20999
            END
            ECD.RET.VALUE = SAVE.HRS
         END
      CASE HRS.QTD<1,SUB.NUM> = "SICK" AND PAY.EMP # ""
         IF EMP.MAX.SIC = "" THEN EMP.MAX.SIC = 0
         IF (ECD.RET.VALUE + SUM(QTD.SCK.HRS)) > (EMP.MAX.SIC * 100) AND ECD.RET.VALUE > 0 THEN
            SAVE.HRS = ECD.RET.VALUE
            EXC.HRS = OCONV((ECD.RET.VALUE + SUM(QTD.SCK.HRS) - (EMP.MAX.SIC * 100)), "MD2")
            ECD.PMSG = "SICK EXCEEDS MAX BY ":EXC.HRS:" ACCEPT (Y/N) :"
            ECD.NUM = 31; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "Y" THEN
               ECD.RET.VALUE = "END"; GOTO 20999
            END
            ECD.RET.VALUE = SAVE.HRS
         END
      END CASE
      PAY.HOURS<1,RECORD,HRS.SMV<1,SUB.NUM>> = ECD.RET.VALUE
      PAY.TOT.HRS<1,RECORD> = 0
      FOR I = 1 TO HRS.CNT
         PAY.TOT.HRS<1,RECORD> = PAY.TOT.HRS<1,RECORD> + PAY.HOURS<1,RECORD,HRS.SMV<1,I>>
      NEXT I
      ECD.NUM = 24; SCV.REC(24)<1> = PAY.TOT.HRS<1,RECORD>
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOSUB 21000
      ECD.NUM = 28; ECD.ACTION = 5; CALL SCRN.EDIT
20999*
      RETURN
*
*--- TOTAL HOURS FOR THE CHECK
*
21000*
      TOTAL.HOURS = 0
      FOR II = 1 TO PAY.RECORDS
         TOTAL.HOURS = TOTAL.HOURS + PAY.TOT.HRS<1,II>
      NEXT II
      SCV.REC(28)<1> = TOTAL.HOURS
      RETURN
*
*--- LOAD PAYREG FROM BATCH1
*
22000*
      IF RECORD > 1 THEN
         PAY.OTH.INC<1,RECORD> = SAVE.PAYREG(7)
         PAY.OTH.CODE<1,RECORD> = SAVE.PAYREG(8)
         PAY.HOURS<1,RECORD> = SAVE.PAYREG(15)
         PAY.RECORDS = PAY.RECORDS + 1
         PAY.TOT.HRS<1,RECORD> = SAVE.PAYREG(22)
      END ELSE
         MAT PAY.REC = MAT SAVE.PAYREG
         PAY.ISSUE = ISSUE
         PAY.EMP = EMP.NO
      END
      PAY.SHIFT<1,RECORD> = EMP.SHIFT
      PAY.DEPT<1,RECORD> = EMP.DEPT
      PAY.DIV<1,RECORD> = EMP.DIV
      PAY.COST.CNTR<1,RECORD> = EMP.COST.CNTR
      IF EMP.STATUS = "H" THEN
         PAY.RATE<1,RECORD> = EMP.RATE
      END ELSE
         PAY.RATE<1,RECORD> = EMP.SALARY
         IF RECORD > 1 THEN
            FOR II = 1 TO RECORD - 1 UNTIL PAY.RATE<1,RECORD> < 0
               PAY.RATE<1,RECORD> = PAY.RATE<1,RECORD> - PAY.RATE<1,II>
            NEXT II
            IF PAY.RATE<1,RECORD> < 0 THEN PAY.RATE<1,RECORD> = 0
         END
      END
      GOSUB 80000
      RETURN
*
*--- DELETE RECORD
*
23000*
      PAY.DEPT = DELETE(PAY.DEPT,1,RECORD,0)
      PAY.COST.CNTR = DELETE(PAY.COST.CNTR,1,RECORD,0)
      PAY.OTH.INC = DELETE(PAY.OTH.INC,1,RECORD,0)
      PAY.OTH.CODE = DELETE(PAY.OTH.CODE,1,RECORD,0)
      PAY.RATE = DELETE(PAY.RATE,1,RECORD,0)
      PAY.HOURS = DELETE(PAY.HOURS,1,RECORD,0)
      PAY.TOT.HRS = DELETE(PAY.TOT.HRS,1,RECORD,0)
      PAY.SHIFT = DELETE(PAY.SHIFT,1,RECORD,0)
      PAY.DIV = DELETE(PAY.DIV,1,RECORD,0)
      PAY.RECORDS = COUNT(PAY.DEPT,VM) + (PAY.DEPT # "")
      IF RECORD > PAY.RECORDS THEN RECORD = PAY.RECORDS
      GOSUB 80000
      RETURN
*
*--- MAT SCV.REC
*
80000*
      ECD.ACTION = 6; CALL SCRN.EDIT
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:PAY.DEPT<1,RECORD> ELSE MAT DEPT.REC = ""
      MATREAD DIV.REC FROM DIVISION, CONO:PAY.DIV<1,RECORD> ELSE MAT DIV.REC = ""
      IF PAY.COST.CNTR<1,RECORD> = "000" THEN
         MAT CCTR.REC = ""; CCTR.DESC = "GENERAL COST CENTER"
      END ELSE
         MATREAD CCTR.REC FROM COST.CNTR, CONO:PAY.COST.CNTR<1,RECORD> ELSE MAT CCTR.REC = ""
      END
      MATREAD OTH.INC.REC FROM OTHER.INC, CONO:PAY.OTH.CODE<1,RECORD> ELSE MAT OTH.INC.REC = ""
      SCV.REC(8)<1> = PAY.ISSUE
      SCV.REC(9)<1> = PAY.BATCH.NO
      SCV.REC(10)<1> = PAY.DAYS
      SCV.REC(11)<1> = OCONV(PAY.WEEKS, "MD3")
      SCV.REC(12)<1> = RECORD
      SCV.REC(13)<1> = PAY.SHIFT<1,RECORD>
      IF PAY.RATE<1,RECORD> # "" THEN
         IF EMP.STATUS = "H" THEN
            SCV.REC(14)<1> = OCONV(PAY.RATE<1,RECORD>, "MD4")
         END ELSE
            SCV.REC(14)<1> = OCONV(PAY.RATE<1,RECORD>, "MD2")
         END
      END
      SCV.REC(15)<1> = PAY.OTH.INC<1,RECORD>
      SCV.REC(16)<1> = PAY.OTH.CODE<1,RECORD>
      SCV.REC(17)<1> = OTH.INC.DESC
      SCV.REC(18)<1> = PAY.DIV<1,RECORD>
      SCV.REC(19)<1> = DIV.DESC
      SCV.REC(20)<1> = PAY.DEPT<1,RECORD>
      SCV.REC(21)<1> = DEPT.DESC
      SCV.REC(22)<1> = PAY.MISC.DED
      SCV.REC(23)<1> = PAY.CHECK.NO
      SCV.REC(24)<1> = PAY.TOT.HRS<1,RECORD>
      SCV.REC(27)<1> = PAY.RECORDS
      SCV.REC(35)<1> = PAY.COST.CNTR<1,RECORD>
      SCV.REC(36)<1> = CCTR.DESC
      GOSUB 21000
      GOSUB 5700
      FOR II = 1 TO HRS.CNT
         SCV.REC(26)<1,II> = PAY.HOURS<1,RECORD,HRS.SMV<1,II>>
      NEXT II
      ECD.ACTION = 3; CALL SCRN.EDIT
      SCV.REC(14)<1> = PAY.RATE<1,RECORD>
      RETURN
*
*--- ERROR ROUTINE
*
91000*
      PRINT @(0,23):ERRMSG:CL:
      INPUT REPLY,1 :
      PRINT @(0,23):CL:
      RETURN
999999*
      PRINT @(-1):
   END
