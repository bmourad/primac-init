SUBROUTINE FORMS.DATA.SUB
*COPY>PRS.CPYLIB>COM.FORMS
*COPY>PRS.CPYLIB>AUTO.FORMS
*COPY>PRS.CPYLIB>AUTO.FORMS.COM
*COPY>PRS.CPYLIB>AUTO.FORMS.DATA
*COPY>CPYLIB>NEW.BUILD.SCREEN
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
ESN = ECD.SCRN.NO
VC.OT = "-":AM:"C":AM:"<"
V.OT = "Z":AM:",":AM:"$":AM:VC.OT
*- Prompt for reference number (Item Id)
IF REF.NO # "" THEN
ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = REF.NO
ECD.ACTION = 5; CALL SCRN.EDIT; GOTO 200
END
100 ECD.NUM = 1
ECD.ACTION = 4; CALL SCRN.EDIT
REF.NO = ECD.RET.VALUE
BEGIN CASE
CASE REF.NO = "END"
GOTO 99999
CASE REF.NO = "N"
FOR I = 1 TO 98 WHILE REF.NO = "N"
LOCATE I IN H.REF<1> SETTING LNO ELSE REF.NO = I
NEXT I
IF REF.NO = "N" THEN
ERM = "Cannot exceed the limit of 99 references"
GOSUB 91000; GOTO 100
END
SCV.REC(ECD.NUM)<ESN> = REF.NO
ECD.ACTION = 5; CALL SCRN.EDIT
CASE NOT(NUM(REF.NO))
ERM = "Invalid reference number"
GOSUB 91000; GOTO 100
CASE REF.NO < 1 OR REF.NO > 99
ERM = "Invalid reference number"
GOSUB 91000; GOTO 100
END CASE
200 S.Y = H.S.Y; S.X = H.S.X; S.L = H.S.L; S.R = H.S.R
F.Y = H.F.Y; F.X = H.F.X; F.L = H.F.L; F.R = H.F.R
T.Y = AFH.HT.Y; T.X = AFH.HT.X; T.L = AFH.HT.LEN; T.R = AFH.HT.REF
F.ID = FORM.ID:"!":OPTION:"!":REF.NO
MATREADU AFD.REC FROM AUTO.FORMS, F.ID THEN
GOSUB 7000
SCV.REC(2)<ESN> = AFD.DESC
SCV.REC(3)<ESN> = AFD.ATT
SCV.REC(4)<ESN> = AFD.OPT
SCV.REC(5)<ESN> = AFD.D.REF
SCV.REC(6)<ESN> = AFD.OUTPUT
SCV.REC(7)<ESN> = AFD.F.Y
SCV.REC(8)<ESN> = AFD.F.X
SCV.REC(9)<ESN> = AFD.S.SEQ
SCV.REC(10)<ESN> = AFD.S.Y
SCV.REC(11)<ESN> = AFD.S.X
SCV.REC(12)<ESN> = AFD.S.HEAD
SCV.REC(13)<ESN> = AFD.TYP
SCV.REC(14)<ESN> = AFD.Y
SCV.REC(15)<ESN> = AFD.X
SCV.REC(16)<ESN> = AFD.SCALER
SCV.REC(17)<ESN> = AFD.JUSTIFY
SCV.REC(18)<ESN> = AFD.O.R
SCV.REC(19)<ESN> = AFD.MAXL
SCV.REC(20)<ESN> = AFD.MINL
IF AFD.MAXL > 19 THEN
VALDAT.FMT = AFD.JUSTIFY:"#19"
END ELSE
VALDAT.FMT = AFD.FMT
END
ECD.NUM = 21
IF AFD.TYP = 7 THEN
SCV.REC(ECD.NUM)<ESN> = "Pattern Match"
END ELSE
SCV.REC(ECD.NUM)<ESN> = "Valid Values"
END
SCV.REC(22)<ESN> = AFD.MAXV
SCV.REC(23)<ESN> = AFD.MINV
SCV.REC(24)<ESN> = AFD.DEFAULT
SCV.REC(27)<ESN> = AFD.FILL.CHR
ECD.ACTION = 3; CALL SCRN.EDIT
GOSUB 7330
BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1
OLD.START.LINE = 0; LINES = DCOUNT(AFD.HMSG,VM)
SPTR = 3; LN = 1; GOSUB 8200
151 IF AFD.OPT # "S" THEN GOTO 152
Y = AFD.F.Y; X = AFD.F.X
O.Y = AFH.HT.Y; O.X = AFH.HT.X; O.L = AFH.HT.LEN; O.R = AFH.HT.REF
GOSUB 900
AFH.HT.Y = O.Y; AFH.HT.X = O.X; AFH.HT.LEN = O.L; AFH.HT.REF = O.R
GOTO 153
152 IF AFD.OPT = "N" THEN GOTO 153
Y = AFD.F.Y; X = AFD.F.X
O.Y = H.F.Y; O.X = H.F.X; O.L = H.F.L; O.R = H.F.R
GOSUB 900
H.F.Y = O.Y; H.F.X = O.X; H.F.L = O.L; H.F.R = O.R
153 BEGIN CASE
CASE AFD.OPT = "D" OR AFD.OPT = "P"
GOTO 155
CASE AFD.OPT = "S" AND AFD.D.REF
GOTO 155
CASE AFD.S.SEQ = "N"
GOTO 154
END CASE
Y = AFD.S.Y; X = AFD.S.X
O.Y = H.S.Y; O.X = H.S.X; O.L = H.S.L; O.R = H.S.R
GOSUB 900
H.S.Y = O.Y; H.S.X = O.X; H.S.L = O.L; H.S.R = O.R
154 IF AFD.S.SEQ = "H" OR AFD.S.SEQ = "S" THEN GOTO 155
Y = AFD.Y; X = AFD.X
O.Y = H.S.Y; O.X = H.S.X; O.L = H.S.L; O.R = H.S.R
GOSUB 900
H.S.Y = O.Y; H.S.X = O.X; H.S.L = O.L; H.S.R = O.R
155 GOSUB 7800
END ELSE
NEW = 1; MAT AFD.REC = ""
FOR REQ = 1 TO 19 WHILE ECD.RET.VALUE # "END"
ON REQ GOSUB 1010,1020,1100,1200,1300,1400,1500,2100,2200,2300,2400,3100,3200,3300,3400,3500,3600,3700,4200
NEXT REQ
IF ECD.RET.VALUE = "END" THEN
FOR I = 1 TO 32
SCV.REC(I)<ESN> = ""
NEXT I
ECD.ACTION = 6; CALL SCRN.EDIT; GOTO 100
END
END
NEW = 0
*- Main prompt line routine
LOOP
ECD.NUM = 30; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 4; CALL SCRN.EDIT
REQ = ECD.RET.VALUE
BEGIN CASE
CASE REQ = "END" OR REQ = "E" OR REQ = ""
H.S.Y = S.Y; H.S.X = S.X; H.S.L = S.L; H.S.R = S.R
H.F.Y = F.Y; H.F.X = F.X; H.F.L = F.L; H.F.R = F.R
AFH.HT.Y = T.Y; AFH.HT.X = T.X; AFH.HT.LEN = T.L; AFH.HT.REF = T.R
REQ = "END"; REF.NO = REQ
CASE REQ = "N"
ECD.SCRN.NO = ECD.SCRN.NO + 1
ECD.ACTION = 2; CALL SCRN.EDIT
CALL FORMS.MAGNETIC.SUB
ECD.SCRN.NO = ECD.SCRN.NO - 1
ECD.ACTION = 2; CALL SCRN.EDIT
ECD.ACTION = 3; CALL SCRN.EDIT
CASE REQ = "F"
BEGIN CASE
CASE AFD.ATT > 0 AND AFD.D.REF > 0
ERM = "Cannot specify both attribute # and link reference #"
GOSUB 91000; GOTO 319
CASE AFD.OPT = "S" AND (AFD.ATT + AFD.D.REF) < 1
ERM = "Need to setup the attribute or reference link"
GOSUB 91000; GOTO 319
CASE AFD.OPT = "P" AND AFD.ATT > 0
ERM = "Attribue # should be 0 for the (P) option"
GOSUB 91000; GOTO 319
CASE AFD.OPT = "D" AND AFD.ATT < 1
ERM = "Attribue # should not be 0 for the (D) option"
GOSUB 91000; GOTO 319
END CASE
O.S.Y = H.S.Y; O.S.X = H.S.X; O.S.L = H.S.L; O.S.R = H.S.R
O.F.Y = H.F.Y; O.F.X = H.F.X; O.F.L = H.F.L; O.F.R = H.F.R
O.T.Y = AFH.HT.Y; O.T.X = AFH.HT.X; O.T.L = AFH.HT.LEN; O.T.R = AFH.HT.REF
301 IF AFD.OPT # "S" THEN GOTO 302
Y = AFD.F.Y; X = AFD.F.X
O.Y = AFH.HT.Y; O.X = AFH.HT.X; O.L = AFH.HT.LEN; O.R = AFH.HT.REF
GOSUB 950
IF ERM # "" THEN ERM = "Form":ERM; GOSUB 91000; GOTO 310
AFH.HT.Y = O.Y; AFH.HT.X = O.X; AFH.HT.LEN = O.L; AFH.HT.REF = O.R
GOTO 303
302 IF AFD.OPT = "N" THEN GOTO 303
Y = AFD.F.Y; X = AFD.F.X
O.Y = H.F.Y; O.X = H.F.X; O.L = H.F.L; O.R = H.F.R
GOSUB 950
IF ERM # "" THEN ERM = "Form":ERM; GOSUB 91000; GOTO 310
H.F.Y = O.Y; H.F.X = O.X; H.F.L = O.L; H.F.R = O.R
303 BEGIN CASE
CASE AFD.OPT = "D" OR AFD.OPT = "P"
GOTO 305
CASE AFD.OPT = "S" AND AFD.D.REF
GOTO 305
CASE AFD.S.SEQ = "N"
GOTO 304
END CASE
Y = AFD.S.Y; X = AFD.S.X; L = AFD.MAXL
BEGIN CASE
CASE AFD.S.SEQ = "S"
CASE AFD.S.SEQ = "H"
AFD.MAXL = LEN(AFD.S.HEAD)
CASE AFD.S.SEQ < 1 OR AFD.S.SEQ > 98
AFD.MAXL = LEN(AFD.S.HEAD)
CASE 1
AFD.MAXL = LEN(AFD.S.HEAD) + 4
END CASE
O.Y = H.S.Y; O.X = H.S.X; O.L = H.S.L; O.R = H.S.R
GOSUB 950; AFD.MAXL = L
IF ERM # "" THEN ERM = "Screen":ERM; GOSUB 91000; GOTO 310
H.S.Y = O.Y; H.S.X = O.X; H.S.L = O.L; H.S.R = O.R
304 IF AFD.S.SEQ = "H" OR AFD.S.SEQ = "S" THEN GOTO 305
O.Y = H.S.Y; O.X = H.S.X; O.L = H.S.L; O.R = H.S.R
Y = AFD.Y; X = AFD.X; GOSUB 950
IF ERM # "" THEN ERM = "Data":ERM; GOSUB 91000; GOTO 310
H.S.Y = O.Y; H.S.X = O.X; H.S.L = O.L; H.S.R = O.R
305 MATWRITE AFD.REC ON AUTO.FORMS, F.ID
LOCATE REF.NO IN H.REF<1> BY "AR" SETTING LNO ELSE
INS REF.NO BEFORE H.REF<1,LNO>
INS "" BEFORE H.ATT<1,LNO>
INS "" BEFORE H.SEQ<1,LNO>
INS "" BEFORE P.D<1,LNO>
INS "" BEFORE P.F.T<1,LNO>
INS "" BEFORE P.F.Y<1,LNO>
INS "" BEFORE P.F.X<1,LNO>
INS "" BEFORE P.D.T<1,LNO>
INS "" BEFORE P.D.Y<1,LNO>
INS "" BEFORE P.D.X<1,LNO>
INS "" BEFORE P.H.Y<1,LNO>
INS "" BEFORE P.H.X<1,LNO>
END
H.ATT<1,LNO> = AFD.ATT; H.SEQ<1,LNO> = AFD.S.SEQ
P.D<1,LNO> = AFD.DESC; P.F.T<1,LNO> = AFD.OPT
P.F.Y<1,LNO> = AFD.F.Y; P.F.X<1,LNO> = AFD.F.X
P.D.T<1,LNO> = AFD.TYP; P.D.Y<1,LNO> = AFD.Y; P.D.X<1,LNO> = AFD.X
P.H.Y<1,LNO> = AFD.S.Y; P.H.X<1,LNO> = AFD.S.X
O.S.Y = ""; O.S.X = ""; O.S.L = ""; O.S.R = ""
O.F.Y = ""; O.F.X = ""; O.F.L = ""; O.F.R = ""
O.T.Y = ""; O.T.X = ""; O.T.L = ""; O.T.R = ""
REQ = "END"; GOTO 319
310 H.S.Y = O.S.Y; H.S.X = O.S.X; H.S.L = O.S.L; H.S.R = O.S.R
H.F.Y = O.F.Y; H.F.X = O.F.X; H.F.L = O.F.L; H.F.R = O.F.R
AHF.HT.Y = O.T.Y; AHF.HT.X = O.T.X; AHF.HT.LEN = O.T.L; AHF.HT.REF = O.T.R
319 CASE REQ = "P" AND AFD.ATT > 0 AND AFD.ATT < 26
ERM = "Attributes 1 through 25 are reserved."; GOSUB 91000
CASE REQ = "P"
DELETE AUTO.FORMS, F.ID
LOCATE REF.NO IN H.REF<1> SETTING LNO THEN
H.REF = DELETE(H.REF,1,LNO,0)
H.ATT = DELETE(H.ATT,1,LNO,0)
H.SEQ = DELETE(H.SEQ,1,LNO,0)
P.D = DELETE(P.D,1,LNO,0)
P.F.T = DELETE(P.F.T,1,LNO,0)
P.F.Y = DELETE(P.F.Y,1,LNO,0)
P.F.X = DELETE(P.F.X,1,LNO,0)
P.H.Y = DELETE(P.H.Y,1,LNO,0)
P.H.X = DELETE(P.H.X,1,LNO,0)
END
REQ = "END"
CASE NOT(NUM(REQ))
ERM = "Invalid Selection"; GOSUB 91000
CASE REQ < 3 AND REQ > 0
ON REQ GOSUB 1010,1020
CASE REQ < 16 AND REQ > 10
REQ = REQ - 10
ON REQ GOSUB 1100,1200,1300,1400,1500
CASE REQ < 25 AND REQ > 20
REQ = REQ - 20
ON REQ GOSUB 2100,2200,2300,2400
CASE REQ < 39 AND REQ > 30
REQ = REQ - 30
ON REQ GOSUB 3100,3200,3300,3400,3500,3600,3700,3800
CASE REQ < 44 AND REQ > 39
REQ = REQ - 39
ON REQ GOSUB 4000,4100,4200,4300
CASE REQ = 39 AND AFD.TYP = 7
BEGIN.PAGE = 15; PAGE.SIZE = 5; LINE.SPACE = 1
OLD.START.LINE = 0; LINES = DCOUNT(AFD.PATRN,VM)
SPTR = 2; GOSUB 8000
CASE REQ = 39 AND AFD.TYP < 7
BEGIN.PAGE = 15; PAGE.SIZE = 5; LINE.SPACE = 1
OLD.START.LINE = 0; LINES = DCOUNT(AFD.VALDAT,VM)
SPTR = 1; GOSUB 8000
CASE REQ = 39
ERM = "Cannot use Valid Values for this data type"; GOSUB 91000
CASE REQ = 44
BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1
OLD.START.LINE = 0; LINES = DCOUNT(AFD.HMSG,VM)
SPTR = 3; GOSUB 8000
END CASE
WHILE REQ # "END" DO REPEAT
FOR I = 1 TO 32
SCV.REC(I)<ESN> = ""
NEXT I
ECD.ACTION = 6; CALL SCRN.EDIT
GOTO 100
900 LOCATE Y IN O.Y<1> SETTING YNO THEN
LOCATE X IN O.X<1,YNO> SETTING XNO THEN
O.X = DELETE(O.X,1,YNO,XNO)
O.L = DELETE(O.L,1,YNO,XNO)
O.R = DELETE(O.R,1,YNO,XNO)
END
IF O.L<1,YNO> = "" THEN
O.Y = DELETE(O.Y,1,YNO,0)
O.X = DELETE(O.X,1,YNO,0)
O.L = DELETE(O.L,1,YNO,0)
O.R = DELETE(O.R,1,YNO,0)
END
END
RETURN
950 ERM = ""
LOCATE Y IN O.Y<1> BY "AR" SETTING YNO ELSE
INS Y BEFORE O.Y<1,YNO>
INS "" BEFORE O.X<1,YNO>
INS "" BEFORE O.L<1,YNO>
INS "" BEFORE O.R<1,YNO>
END
LOCATE X IN O.X<1,YNO> BY "AR" SETTING XNO THEN
ERM = " column is overlaying reference # ":O.R<1,YNO,XNO>
END ELSE
IF XNO > 1 THEN
IF O.X<1,YNO,XNO-1>+O.L<1,YNO,XNO-1> > X THEN
ERM = " column is overlaying the back end of reference # ":O.R<1,YNO,XNO-1>
END
END
IF O.X<1,YNO,XNO> > 0 AND X + AFD.MAXL > O.X<1,YNO,XNO> THEN
ERM = " column is overlaying the front end of reference # ":O.R<1,YNO,XNO>
END
END
INS X BEFORE O.X<1,YNO,XNO>
INS AFD.MAXL BEFORE O.L<1,YNO,XNO>
INS REF.NO BEFORE O.R<1,YNO,XNO>
RETURN
*- General field description
1010 ECD.NUM = 2
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # "END" THEN AFD.DESC = ECD.RET.VALUE
RETURN
*- Data Attribute number
1020 IF NOT(NEW) AND AFD.OPT # "D" AND AFD.ATT > 0 AND AFD.ATT < 26 THEN GOTO 1029
ECD.NUM = 3; ECD.MAXV = 99
ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 1029
CASE ECD.RET.VALUE < 1
CASE NOT(NEW) AND AFD.OPT # "D" AND ECD.RET.VALUE < 26
ERM = "Attributes 1 through 25 are reserved"
GOSUB 91000; GOTO 1020
CASE 1
LOCATE ECD.RET.VALUE IN H.ATT<1> SETTING LNO THEN
IF REF.NO <> H.REF<1,LNO> THEN
ERM = "Warning!!! This Attribute is already in use for reference # ":H.REF<1,LNO>
GOSUB 91000
IF NOT(NEW) AND AFD.OPT # "D" THEN GOTO 1020
END
END
END CASE
AFD.ATT = ECD.RET.VALUE
1029 RETURN
*- Output option
1100 IF NOT(NEW) AND AFD.ATT > 0 AND AFD.ATT < 26 THEN GOTO 1199
IF OPTION = "H" THEN ECD.VALDAT = "N,P,S,D" ELSE ECD.VALDAT = "N,D"
ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 1199
CASE NOT(NEW) AND ECD.RET.VALUE = AFD.OPT
GOTO 1199
CASE ECD.RET.VALUE # "D" AND AFD.ATT > 0
IF AFD.ATT < 26 THEN
ERM = "Only the (D) option is valid for attributes 1 through 25."
GOSUB 91000; GOTO 1100
END
PTR = 1
LOOP
LOCATE AFD.ATT IN H.ATT<1>,PTR SETTING LNO THEN
IF REF.NO <> H.REF<1,LNO> THEN
ERM = "This Attribute is already in use for reference # ":H.REF<1,LNO>
GOSUB 91000
PTR = 0; LNO = 0
END
END ELSE
PTR = 0
END
WHILE PTR DO
PTR = LNO + 1
REPEAT
IF LNO = 0 THEN GOTO 1100
CASE ECD.RET.VALUE = "S" AND OPTION # "H"
ERM = "Subtotal should only be for a header form"
GOSUB 91000; GOTO 1100
END CASE
O.AFD.OPT = AFD.OPT; AFD.OPT = ECD.RET.VALUE
IF NEW THEN GOSUB 7800; GOTO 1199
IF AFD.OPT = "N" THEN
AFD.D.REF = ""; AFD.F.Y = ""; AFD.F.X = ""; AFD.OUTPUT = ""
FOR I = 5 TO 8
ECD.NUM = I; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 5; CALL SCRN.EDIT
NEXT I
END
IF AFD.OPT = "S" THEN
GOSUB 1200
END ELSE
AFD.D.REF = ""; ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 5; CALL SCRN.EDIT; GOSUB 2100
END
IF ECD.RET.VALUE = "END" THEN AFD.OPT = O.AFD.OPT; GOTO 1100
1199 RETURN
*- Data reference pointer for Subtotals
1200 IF AFD.OPT # "S" THEN GOTO 1299
ECD.MINV = 0; ECD.MAXV = 98
ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1299
IF ECD.RET.VALUE > 0 THEN
LOCATE ECD.RET.VALUE IN AFH.D.REF<1> SETTING LNO THEN
IF AFH.D.SEQ<1,LNO> = "S" OR AFH.D.SEQ<1,LNO> = "H" THEN
ERM = "Invalid detail reference # ":ECD.RET.VALUE
GOSUB 91000; GOTO 1200
END
END ELSE
ERM = "Cannot locate detail reference # ":ECD.RET.VALUE
GOSUB 91000; GOTO 1200
END
END
O.AFD.D.REF = AFD.D.REF; AFD.D.REF = ECD.RET.VALUE
IF NEW THEN GOSUB 7800; GOTO 1299
GOSUB 2100
IF ECD.RET.VALUE = "END" THEN AFD.D.REF = O.AFD.D.REF; GOTO 1200
1299 RETURN
*- Output format
1300 IF AFD.OPT = "N" THEN GOTO 1399
ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1399
VOT = V.OT; VCOT = VC.OT
VNO = 0; I = 1
LOOP
CHR = ECD.RET.VALUE[I,1]
WHILE CHR # "" DO
BEGIN CASE
CASE NUM(CHR) AND I = 1
I = 99; ERM = "Cannot have a number in the first character"
CASE NUM(CHR) AND VNO
I = 99; ERM = "Cannot have a number twice"
CASE NUM(CHR)
I = I + 1
LOOP
CHR = ECD.RET.VALUE[I,1]
WHILE CHR # "" AND NUM(CHR) DO
I = I + 1
REPEAT
IF CHR = "" THEN
I = 99; ERM = "Missing a trailer character after the specified number"
END ELSE
I = I + 1; VNO = 1
END
CASE 1
LOCATE CHR IN VOT SETTING K THEN
FOR J = K TO 1 STEP -1
VOT = DELETE(VOT,J,0,0)
NEXT J
LOCATE CHR IN VCOT SETTING K THEN
VCOT = DELETE(VCOT,K,0,0)
FOR J = 1 TO 2
LOCATE VCOT<J> IN VOT SETTING K THEN
VOT = DELETE(VOT,K,0,0)
END
NEXT J
VCOT = ""
END
I = I + 1
END ELSE
I = 99; ERM = "Invalid or out of sequence output character (":CHR:")"
END
END CASE
REPEAT
IF I = 99 THEN GOSUB 91000; GOTO 1300
AFD.OUTPUT = ECD.RET.VALUE
1399 RETURN
*- Form row location
1400 IF AFD.OPT = "N" THEN GOTO 1499
ECD.NUM = 7; ECD.MINV = 1; ECD.MAXV = AFH.LENGTH
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1499
AFD.F.Y = ECD.RET.VALUE
1499 RETURN
*- Form column location
1500 IF AFD.OPT = "N" THEN GOTO 1599
ECD.NUM = 8; ECD.MINV = 1; ECD.MAXV = AFH.WIDTH
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 1599
AFD.F.X = ECD.RET.VALUE
1599 RETURN
*- Screen prompt number
2100 IF NOT(NEW) AND AFD.ATT > 0 AND AFD.ATT < 26 THEN GOTO 2199
ECD.NUM = 9
IF AFD.OPT = "P" OR AFD.OPT = "D" OR (AFD.OPT = "S" AND AFD.D.REF > 0) THEN
ECD.RET.VALUE = "N"
SCV.REC(ECD.NUM)<ESN> = "N"
ECD.ACTION = 5; CALL SCRN.EDIT
END ELSE
ECD.ACTION = 4; CALL SCRN.EDIT
END
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 2199
CASE AFD.OPT = "S"
BEGIN CASE
CASE ECD.RET.VALUE = "S"
CASE ECD.RET.VALUE = "H"
CASE ECD.RET.VALUE = "N" AND AFD.D.REF < 1
CASE 1
GOTO 2101
END CASE
ERM = "Cannot use this sequence with option form (S)"
GOSUB 91000; GOTO 2100
2101 CASE ECD.RET.VALUE = "S" AND NOT(NEW)
S.HEAD = ""
ECD.NUM = 12; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 5; CALL SCRN.EDIT
CASE ECD.RET.VALUE = "N" AND NOT(NEW)
AFD.S.Y = ""; AFD.S.X = ""; AFD.S.HEAD = ""
FOR I = 10 TO 12
ECD.NUM = I; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 5; CALL SCRN.EDIT
NEXT I
CASE ECD.RET.VALUE = "N" OR ECD.RET.VALUE = "S" OR ECD.RET.VALUE = "H"
CASE NOT(NUM(ECD.RET.VALUE))
ERM = "Invalid prompt number"
GOSUB 91000; GOTO 2100
CASE 1
LOCATE ECD.RET.VALUE IN H.SEQ<1> SETTING LNO THEN
IF REF.NO <> H.REF<1,LNO> THEN
ERM = "This sequence is already in use for reference # ":H.REF<1,LNO>
GOSUB 91000; GOTO 2100
END
END
END CASE
O.AFD.S.SEQ = AFD.S.SEQ; AFD.S.SEQ = ECD.RET.VALUE
IF NEW THEN GOSUB 7800; GOTO 2199
GOSUB 3100
IF ECD.RET.VALUE = "END" THEN AFD.S.SEQ = O.AFD.S.SEQ; GOTO 2100
GOSUB 7800
2199 RETURN
*- Screen row location
2200 IF AFD.S.SEQ = "N" THEN GOTO 2299
ECD.MINV = 0; ECD.MAXV = 22
ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 2299
AFD.S.Y = ECD.RET.VALUE
2299 RETURN
*- Screen column location
2300 IF AFD.S.SEQ = "N" THEN GOTO 2399
ECD.MINV = 0; ECD.MAXV = 79
ECD.NUM = 11; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 2399
AFD.S.X = ECD.RET.VALUE
2399 RETURN
*- Screen output heading
2400 BEGIN CASE
CASE AFD.S.SEQ = "N"
GOTO 2499
CASE AFD.S.SEQ = "S"
ECD.MAXL = 1; L = AFD.MAXL - 1
CASE AFD.S.SEQ = "H"
L = 0
CASE AFD.S.SEQ < 1 OR AFD.S.SEQ > 98
L = 0
CASE 1
L = 3
END CASE
ECD.NUM = 12; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 2499
IF AFD.S.X + L + LEN(ECD.RET.VALUE) > 80 THEN
ERM = "Heading exceeding screen limits of 80 characters"
GOSUB 91000; GOTO 2400
END
AFD.S.HEAD = ECD.RET.VALUE
2499 RETURN
*- Type
3100 IF NOT(NEW) AND AFD.ATT > 0 AND AFD.ATT < 26 THEN GOTO 3199
ECD.NUM = 13
BEGIN CASE
CASE AFD.OPT = "P"
ECD.RET.VALUE = 3; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
ECD.ACTION = 5; CALL SCRN.EDIT
CASE AFD.S.SEQ = "H" OR AFD.S.SEQ = "S"
ECD.RET.VALUE = 0; SCV.REC(ECD.NUM)<ESN> = 0
ECD.ACTION = 5; CALL SCRN.EDIT
CASE 1
ECD.VALDAT = "1,2,3,4,6,7,8"
ECD.ACTION = 4; CALL SCRN.EDIT
END CASE
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 3199
CASE ECD.RET.VALUE = AFD.TYP
GOTO 3199
CASE ECD.RET.VALUE = ""
GOTO 3100
END CASE
GOSUB 7200
AFD.SCALER = ""; AFD.JUSTIFY = "L"; AFD.FMT = ""
AFD.CONV = ""; AFD.MINL = 1
BEGIN CASE
CASE ECD.RET.VALUE = 3
AFD.JUSTIFY = "R"; AFD.CONV = "MD0"
CASE ECD.RET.VALUE = 4
AFD.SCALER = 2; AFD.JUSTIFY = "R"; AFD.CONV = "MD2"
CASE ECD.RET.VALUE = 6
AFD.MAXL = 8; AFD.CONV = "D2/"; AFD.FMT = "L#8"
CASE ECD.RET.VALUE = 8
AFD.MAXL = 1; AFD.FMT = "L#1"
CASE ECD.RET.VALUE < 1 OR ECD.RET.VALUE > 8
AFD.MINL = ""; AFD.JUSTIFY = ""
END CASE
AFD.MAXV = ""; AFD.MINV = ""
AFD.DEFAULT = ""; AFD.FILL.CHR = ""
AFD.VALDAT = ""; VALDAT.FMT = AFD.FMT; AFD.PATRN = ""
AFD.TYP = ECD.RET.VALUE
ECD.NUM = 16; SCV.REC(ECD.NUM)<ESN> = AFD.SCALER
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 17; SCV.REC(ECD.NUM)<ESN> = AFD.JUSTIFY
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 19; SCV.REC(ECD.NUM)<ESN> = AFD.MAXL
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = AFD.MINL
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 21
IF AFD.TYP = 7 THEN
SCV.REC(ECD.NUM)<ESN> = "Pattern Match"
END ELSE
SCV.REC(ECD.NUM)<ESN> = "Valid Values"
END
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 27; SCV.REC(ECD.NUM)<ESN> = AFD.FILL.CHR
ECD.ACTION = 5; CALL SCRN.EDIT
GOSUB 7000; GOSUB 7300
3199 RETURN
*- Row
3200 IF NO.S.FLD THEN GOTO 3299
IF AFD.Y = "" AND NUM(AFD.S.SEQ) THEN
ECD.DEFAULT = AFD.S.Y
END
ECD.MINV = 0; ECD.MAXV = 22
ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # "END" THEN AFD.Y = ECD.RET.VALUE
3299 RETURN
*- Column
3300 IF NO.S.FLD THEN GOTO 3399
IF AFD.X = "" AND NUM(AFD.S.SEQ) THEN
IF AFD.S.SEQ < 1 AND AFD.S.SEQ > 98 THEN
ADD = 1
END ELSE
ADD = 5
END
ECD.DEFAULT = AFD.S.X + LEN(AFD.S.HEAD) + ADD
END
ECD.MINV = 0; ECD.MAXV = 79
ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # "END" THEN AFD.X = ECD.RET.VALUE
3399 RETURN
*- Scaler
3400 IF AFD.TYP <> 4 OR (NOT(NEW) AND AFD.ATT > 0 AND AFD.ATT < 26) THEN GOTO 3499
ECD.NUM = 16; ECD.MINV = 0; ECD.MAXV = 4
ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 3499
CASE ECD.RET.VALUE = AFD.SCALER
GOTO 3499
END CASE
AFD.SCALER = ECD.RET.VALUE
AFD.CONV = "MD" : AFD.SCALER
AFD.MAXV = ""; AFD.MINV = ""; AFD.DEFAULT = ""; AFD.VALDAT = ""
GOSUB 7000; GOSUB 7300
3499 RETURN
*- Justify
3500 IF AFD.S.SEQ = "H" OR AFD.S.SEQ = "S" THEN GOTO 3599
ECD.VALDAT = "L,R"; ECD.NUM = 17; ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 3599
CASE ECD.RET.VALUE = AFD.JUSTIFY
GOTO 3599
END CASE
AFD.JUSTIFY = ECD.RET.VALUE
AFD.FMT = AFD.JUSTIFY:"#":AFD.MAXL
IF AFD.MAXL > 19 THEN
VALDAT.FMT = AFD.JUSTIFY:"#19"
END ELSE
VALDAT.FMT = AFD.FMT
END
GOSUB 7000; GOSUB 7300
3599 RETURN
*- Optional or Required
3600 IF NO.S.FLD THEN GOTO 3699
ECD.VALDAT = "O,R"; ECD.NUM = 18; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 3699
AFD.O.R = ECD.RET.VALUE
IF AFD.O.R # "R" THEN GOTO 3699
AFD.DEFAULT = ""
ECD.NUM = 24; SCV.REC(ECD.NUM)<ESN> = ECD.DEFAULT
ECD.ACTION = 5; CALL SCRN.EDIT
3699 RETURN
*- Maximum length
3700 IF AFD.S.SEQ = "H" THEN GOTO 3799
BEGIN CASE
CASE AFD.TYP = 4
ECD.MAXV = 13
CASE AFD.S.SEQ = "0"
ECD.MAXV = 40
CASE 1
ECD.MAXV = 132
END CASE
ECD.MINV = 1; ECD.NUM = 19; ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 3799
CASE ECD.RET.VALUE = AFD.MAXL
GOTO 3799
END CASE
IF AFD.OPT # "N" AND AFD.F.X + ECD.RET.VALUE > AFH.WIDTH THEN
ERM = "Output exceeding form limits of ":AFH.WIDTH:" characters"
GOSUB 91000; GOTO 3700
END
IF AFD.X + ECD.RET.VALUE > 80 THEN
ERM = "Data exceeding screen limits of 80 characters"
GOSUB 91000; GOTO 3700
END
BEGIN CASE
CASE ECD.RET.VALUE < AFD.MAXL AND AFD.CONV = ""
IF LEN(AFD.MAXV) > ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END ELSE
IF LEN(AFD.MINV) > ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END
END
IF LEN(AFD.DEFAULT) > ECD.RET.VALUE THEN
AFD.DEFAULT = ""
END
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(AFD.VALDAT<1,LNO>) > ECD.RET.VALUE THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
LINES = DCOUNT(AFD.PATRN,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(AFD.PATRN<1,LNO>) > ECD.RET.VALUE THEN
AFD.PATRN = DELETE(AFD.PATRN,1,LNO,0)
END
NEXT LNO
CASE ECD.RET.VALUE < AFD.MAXL
IF LEN(OCONV(AFD.MAXV,AFD.CONV)) > ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END ELSE
IF LEN(OCONV(AFD.MINV,AFD.CONV)) > ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END
END
IF LEN(OCONV(AFD.DEFAULT,AFD.CONV)) > ECD.RET.VALUE THEN
AFD.DEFAULT = ""
END
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(OCONV(AFD.VALDAT<1,LNO>,AFD.CONV)) > ECD.RET.VALUE THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
END CASE
GOSUB 7200
AFD.MAXL = ECD.RET.VALUE
AFD.FMT = AFD.JUSTIFY:"#":AFD.MAXL
IF AFD.MAXL > 19 THEN
VALDAT.FMT = AFD.JUSTIFY:"#19"
END ELSE
VALDAT.FMT = AFD.FMT
END
GOSUB 7000; GOSUB 7300
3799 RETURN
*- Minimum length
3800 IF NO.S.FLD THEN GOTO 3899
ECD.NUM = 20; ECD.MINV = 1; ECD.MAXV = AFD.MAXL
ECD.ACTION = 4; CALL SCRN.EDIT
BEGIN CASE
CASE ECD.RET.VALUE = "END"
GOTO 3899
CASE ECD.RET.VALUE = AFD.MINL
GOTO 3899
CASE ECD.RET.VALUE > AFD.MINL AND AFD.CONV = ""
IF LEN(AFD.MAXV) < ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END ELSE
IF LEN(AFD.MINV) < ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END
END
IF LEN(AFD.DEFAULT) < ECD.RET.VALUE THEN
AFD.DEFAULT = ""
END
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(AFD.VALDAT<1,LNO>) < ECD.RET.VALUE THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
LINES = DCOUNT(AFD.PATRN,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(AFD.PATRN<1,LNO>) < ECD.RET.VALUE THEN
AFD.PATRN = DELETE(AFD.PATRN,1,LNO,0)
END
NEXT LNO
CASE ECD.RET.VALUE > AFD.MINL
IF LEN(OCONV(AFD.MAXV,AFD.CONV)) < ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END ELSE
IF LEN(OCONV(AFD.MINV,AFD.CONV)) < ECD.RET.VALUE THEN
AFD.MAXV = ""; AFD.MINV = ""
END
END
IF LEN(OCONV(AFD.DEFAULT,AFD.CONV)) < ECD.RET.VALUE THEN
AFD.DEFAULT = ""
END
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF LEN(OCONV(AFD.VALDAT<1,LNO>,AFD.CONV)) < ECD.RET.VALUE THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
END CASE
AFD.MINL = ECD.RET.VALUE
GOSUB 7000; GOSUB 7300
3899 RETURN
*- Prompt for Valid Values scrolling line
3900 IF NO.S.FLD OR AFD.TYP > 6 THEN GOTO 3949
GOSUB 8200
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
PRINT @(57,SLN) : LN "R#2" : CL :
3910 TYP = AFD.TYP; X = 60; Y = SLN
IF AFD.MAXL > 19 THEN MAXL = 19 ELSE MAXL = AFD.MAXL
SCALER = AFD.SCALER; MINV = AFD.MINV; MAXV = AFD.MAXV
MINL = AFD.MINL; JUSTIFY = AFD.JUSTIFY
HMSG = "Enter the field valid values"
IF AFD.VALDAT<1,LN> # "" THEN
O.R = "O"
IF AFD.CONV = "" THEN
DEFAULT = AFD.VALDAT<1,LN>
END ELSE
DEFAULT = OCONV(AFD.VALDAT<1,LN>,AFD.CONV)
END
END
CALL EDIT.SUB
BEGIN CASE
CASE VALUE = "END" AND ACTION = "A"
GOSUB 3980
PRINT @(57,SLN) : CL :
GOTO 3949
CASE VALUE = "END"
PRINT @(57,SLN) : LN "R#2" : CL :
IF AFD.CONV = "" THEN
PRINT @(60,SLN) : AFD.VALDAT<1,LN> VALDAT.FMT :
END ELSE
PRINT @(60,SLN):OCONV(AFD.VALDAT<1,LN>,AFD.CONV) VALDAT.FMT :
END
GOTO 3949
END CASE
LOCATE VALUE IN AFD.VALDAT<1> SETTING LNO ELSE LNO = LN
IF LNO <> LN THEN
ERM = "(":VALUE:") already exists on line # ":LNO
GOSUB 91000; GOTO 3910
END
AFD.VALDAT<1,LN> = VALUE
LINES = DCOUNT(AFD.VALDAT,VM)
3949 RETURN
*- Prompt for Pattern Match scrolling line
3950 IF NO.S.FLD OR AFD.TYP <> 7 THEN GOTO 3979
GOSUB 8200
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
PRINT @(57,SLN) : LN "R#2" : CL :
3960 TYP = 1; X = 60; Y = SLN; MAXL = 19
HMSG = "Enter the field pattern match format"
IF AFD.PATRN<1,LN> # "" THEN
O.R = "O"; DEFAULT = AFD.PATRN<1,LN>
END
CALL EDIT.SUB
BEGIN CASE
CASE VALUE = "END" AND ACTION = "A"
GOSUB 3985
PRINT @(57,SLN) : CL :
GOTO 3979
CASE VALUE = "END"
PRINT @(60,SLN) : AFD.PATRN<1,LN> "L#19" :
GOTO 3979
END CASE
LOCATE VALUE IN AFD.PATRN<1> SETTING LNO ELSE LNO = LN
IF LNO <> LN THEN
ERM = "(":VALUE:") already exists on line # ":LNO
GOSUB 91000; GOTO 3960
END
AFD.PATRN<1,LN> = VALUE
LINES = DCOUNT(AFD.PATRN,VM)
3979 RETURN
*- Delete Valid Values scrolling line
3980 AFD.VALDAT = DELETE(AFD.VALDAT,1,LN,0)
LINES = DCOUNT(AFD.VALDAT,VM)
RETURN
*- Delete Pattern Match scrolling line
3985 AFD.PATRN = DELETE(AFD.PATRN,1,LN,0)
LINES = DCOUNT(AFD.PATRN,VM)
RETURN
*- Print Valid Values scrolling line
3990 FOR LNO = START.LINE TO LAST.LINE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(57,SLN) : LNO "R#2" : CL :
IF AFD.CONV = "" THEN
PRINT @(60,SLN) : AFD.VALDAT<1,LNO> VALDAT.FMT :
END ELSE
PRINT @(60,SLN):OCONV(AFD.VALDAT<1,LNO>,AFD.CONV) VALDAT.FMT :
END
CNT = CNT + 1
NEXT LNO
FOR LNO = CNT TO PAGE.SIZE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(57,SLN) : CL :
NEXT LNO
RETURN
*- Print Pattern Match scrolling line
3995 FOR LNO = START.LINE TO LAST.LINE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(57,SLN) : LNO "R#2" : CL :
PRINT @(60,SLN) : AFD.PATRN<1,LNO> "L#19" :
CNT = CNT + 1
NEXT LNO
FOR LNO = CNT TO PAGE.SIZE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(57,SLN) : CL :
NEXT LNO
RETURN
*- Maximum value
4000 IF NO.S.FLD OR AFD.TYP > 6 THEN GOTO 4099
ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 4099
AFD.MAXV = ECD.RET.VALUE
IF AFD.DEFAULT > AFD.MAXV THEN AFD.DEFAULT = ""
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF AFD.VALDAT<1,LNO> > AFD.MAXV THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
GOSUB 7320
4099 RETURN
*- Minimum value
4100 IF NO.S.FLD OR AFD.TYP > 6 THEN GOTO 4199
ECD.NUM = 23; ECD.MAXV = AFD.MAXV
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 4199
AFD.MINV = ECD.RET.VALUE
IF AFD.DEFAULT < AFD.MINV THEN AFD.DEFAULT = ""
LINES = DCOUNT(AFD.VALDAT,VM)
FOR LNO = LINES TO 1 STEP - 1
IF AFD.VALDAT<1,LNO> < AFD.MINV THEN
AFD.VALDAT = DELETE(AFD.VALDAT,1,LNO,0)
END
NEXT LNO
GOSUB 7320
4199 RETURN
*- Default
4200 IF AFD.O.R # "O" THEN GOTO 4299
ECD.NUM = 24
ECD.MINV = AFD.MINV; ECD.MAXV = AFD.MAXV
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE = "END" THEN GOTO 4299
AFD.DEFAULT = ECD.RET.VALUE
4299 RETURN
*- Data fill in character
4300 BEGIN CASE
CASE AFD.OPT = "P"
CASE NO.S.FLD = 0
CASE AFD.TYP > 0 AND AFD.TYP < 4
CASE 1
GOTO 4399
END CASE
ECD.NUM = 27
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # "END" THEN
AFD.FILL.CHR = ECD.RET.VALUE
END
4399 RETURN
*- Prompt for Help Message scrolling line
4400 IF NO.S.FLD THEN GOTO 4479
GOSUB 8200
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
PRINT @(1,SLN) : LN "R#2" : SPACE(53) :
4410 TYP = 1; X = 4; Y = SLN; MAXL = 52
HMSG = "Enter help message to be used when entering this field"
IF AFD.HMSG<1,LN> # "" THEN
O.R = "O"; DEFAULT = AFD.HMSG<1,LN>
END
CALL EDIT.SUB
BEGIN CASE
CASE VALUE = "END" AND ACTION = "A"
GOSUB 4480
PRINT @(1,SLN) : SPACE(55) :
GOTO 4479
CASE VALUE = "END"
PRINT @(4,SLN) : AFD.HMSG<1,LN> "L#52" :
GOTO 4479
END CASE
AFD.HMSG<1,LN> = VALUE
LINES = DCOUNT(AFD.HMSG,VM)
4479 RETURN
*- Delete Help Message scrolling line
4480 AFD.HMSG = DELETE(AFD.HMSG,1,LN,0)
LINES = DCOUNT(AFD.HMSG,VM)
RETURN
*- Print Help Message scrolling line
4490 FOR LNO = START.LINE TO LAST.LINE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(1,SLN) : LNO "R#2" : SPACE(1) :
PRINT @(4,SLN) : AFD.HMSG<1,LNO> "L#52" :
CNT = CNT + 1
NEXT LNO
FOR LNO = CNT TO PAGE.SIZE
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNO-1,PAGE.SIZE)
PRINT @(1,SLN) : SPACE(55) :
NEXT LNO
RETURN
*- Setup special screen fields
7000 ECD.NUM = 22
LOCATE ECD.NUM IN BLD.EXT.REF<1> SETTING LNO THEN
MAXL = 13; GOSUB 7100
END
ECD.NUM = 23
LOCATE ECD.NUM IN BLD.EXT.REF<1> SETTING LNO THEN
MAXL = 13; GOSUB 7100
END
ECD.NUM = 24
LOCATE ECD.NUM IN BLD.EXT.REF<1> SETTING LNO THEN
MAXL = 41; GOSUB 7100
END
RETURN
7100 BLD.SCRN(LNO)<1,B.TYP> = AFD.TYP
IF MAXL > AFD.MAXL THEN BLD.SCRN(LNO)<1,B.MAXL> = AFD.MAXL
BLD.SCRN(LNO)<1,B.SCALER> = AFD.SCALER
BLD.SCRN(LNO)<1,B.JUSTIFY> = AFD.JUSTIFY
IF MAXL > AFD.MINL THEN BLD.SCRN(LNO)<1,B.MINL> = AFD.MINL
RETURN
7200 FOR I = 22 TO 24
ECD.NUM = I; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 5; CALL SCRN.EDIT
NEXT I
RETURN
7300 ECD.NUM = 22; SCV.REC(ECD.NUM)<ESN> = AFD.MAXV
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 23; SCV.REC(ECD.NUM)<ESN> = AFD.MINV
ECD.ACTION = 5; CALL SCRN.EDIT
7320 ECD.NUM = 24; SCV.REC(ECD.NUM)<ESN> = AFD.DEFAULT
ECD.ACTION = 5; CALL SCRN.EDIT
7330 BEGIN.PAGE = 15; PAGE.SIZE = 5; LINE.SPACE = 1
OLD.START.LINE = 0; LN = 1
LINES = DCOUNT(AFD.PATRN,VM)
IF LINES THEN
SPTR = 2
END ELSE
LINES = DCOUNT(AFD.VALDAT,VM); SPTR = 1
END
GOSUB 8200
RETURN
*- Check screen field prompt
7800 BEGIN CASE
CASE AFD.OPT = "P" OR AFD.OPT = "D"
NO.S.FLD = 1
CASE AFD.S.SEQ = "H" OR AFD.S.SEQ = "S"
NO.S.FLD = 1
CASE AFD.OPT = "S" AND AFD.D.REF
NO.S.FLD = 1
CASE 1
NO.S.FLD = 0
END CASE
RETURN
*- General prompt line for scrolling routines
8000 IF LINES THEN
LN = 1
END ELSE
ACTION = "A"
LOOP
LN = LINES + 1
OLD.LINES = LINES
ON SPTR GOSUB 3900,3950,4400
WHILE LINES > OLD.LINES DO REPEAT
LN = LINES
END
GOSUB 8200
LOOP
ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = ""
ECD.ACTION = 4; CALL SCRN.EDIT
ACTION = ECD.RET.VALUE
BEGIN CASE
CASE ACTION = "END" OR ACTION = "E" OR ACTION = ""
ACTION = "END"
CASE ACTION = "A"
LOOP
LN = LINES + 1
OLD.LINES = LINES
ON SPTR GOSUB 3900,3950,4400
WHILE LINES > OLD.LINES DO REPEAT
LN = LINES
GOSUB 8200
CASE ACTION = "C"
GOSUB 8100
IF LNO THEN
LN = LNO
ON SPTR GOSUB 3900,3950,4400
END
CASE ACTION = "D"
GOSUB 8100
IF LNO THEN
LN = LNO
ON SPTR GOSUB 3980,3985,4480
IF LN > 1 AND LN > LINES THEN LN = LN - 1
IF LN < 1 THEN LN = 1
OLD.START.LINE = 0; GOSUB 8200
END
CASE ACTION = "S"
LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
IF LN > LINES THEN LN = 1
GOSUB 8200
END CASE
WHILE ACTION # "END" DO REPEAT
RETURN
*- General line number for scrolling routines
8100 GOSUB 8200
ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = ""
ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
ECD.ACTION = 4; CALL SCRN.EDIT
LNO = ECD.RET.VALUE
IF LNO = "" OR LNO = "END" THEN LNO = 0
RETURN
*- General scrolling routine
8200 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 8299
OLD.START.LINE = START.LINE
CNT = 1
ON SPTR GOSUB 3990,3995,4490
8299 RETURN
91000 PRINT @(0,23) : ERM : CL :
INPUT REPLY :
PRINT @(0,23) : CL :
RETURN
99999 RETURN
END
