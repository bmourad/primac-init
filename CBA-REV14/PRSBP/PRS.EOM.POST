*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - PRSBP
* PROGRAM     - PRS.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>COA
*COPY>PRS.CPYLIB>MDS
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PRS.CPYLIB>TAX2
*COPY>PRS.CPYLIB>MISCDED
*COPY>PRS.CPYLIB>OTHER-INC
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
     MAT FILE.VARS=''
     MAT EDIT.COM.DRIVER=''
*
***** SETUP ERRMSG ROUTINE
*
     SYS.TYPE=1
     CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
     PROCREAD INBUFF ELSE
        ERRMSG = "MUST RUN FROM PROC"
        GOSUB 91000; GOTO 99999
     END
     CONO = INBUFF<1>
     FR.NEXT.PER = ""
*
***** OPEN FILES
*
     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
     OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FILE IS MISSING';GOTO 93000
     OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
     OPEN '','MDS' TO MDS ELSE ERRMSG='MDS FILE IS MISSING';GOTO 93000
     OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='EMPLOYEE FILE IS MISSING';GOTO 93000
     OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING';GOTO 93000
     OPEN '','TAX2' TO TAX2 ELSE ERRMSG='TAX2 FILE IS MISSING';GOTO 93000
     OPEN '','MISCDED' TO MISCDED ELSE ERRMSG='MISCDED FILE IS MISSING';GOTO 93000
     OPEN '','OTHER-INC' TO OTHER.INC ELSE ERRMSG='MDS FILE IS MISSING';GOTO 93000
     OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MISSING';GOTO 93000
     OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE IS MISSING';GOTO 93000
*
***** GET CONO
*
     MATREAD COMP.REC FROM COMPANY, CONO ELSE
        ERRMSG = "COMPANY RECORD IS MISSING"
        GOTO 93000
     END
     SYS.FISCAL = 'PRFISCAL'
     STMT.HEAD = 'PAYROLL'
*COPY>PMCBP>EOM.POST
     IF ECD.RET.VALUE = 'END' THEN GOTO 99000
     CLEARFILE EOM.TRANS
     CLEARFILE POST.REJECTS
     PRR.SEQ = 10000
     MATREAD COA.REC FROM COA, CONO : GLTB.PR.CASH ELSE COA.LEVEL = 0
     PR.CSH.ACCT = GLTB.PR.CASH; PR.CSH.LEVEL = COA.LEVEL
     MATREAD COA.REC FROM COA, CONO : GLTB.PR.EARN ELSE COA.LEVEL = 0
     PR.GRS.ACCT = GLTB.PR.EARN; PR.GRS.LEVEL = COA.LEVEL
     PR.GRS.ACCT<2> = GLTB.PR.EARN; PR.GRS.LEVEL<2> = COA.LEVEL
     PR.GRS.ACCT<3> = GLTB.PR.EARN; PR.GRS.LEVEL<3> = COA.LEVEL
     PR.GRS.ACCT<4> = GLTB.PR.EARN; PR.GRS.LEVEL<4> = COA.LEVEL
     PR.GRS.ACCT<5> = GLTB.PR.EARN; PR.GRS.LEVEL<5> = COA.LEVEL
     PR.GRS.ACCT<6> = GLTB.PR.EARN; PR.GRS.LEVEL<6> = COA.LEVEL
     PR.GRS.ACCT<7> = GLTB.PR.EARN; PR.GRS.LEVEL<7> = COA.LEVEL
     PR.GRS.ACCT<8> = GLTB.PR.EARN; PR.GRS.LEVEL<8> = COA.LEVEL
     PR.GRS.ACCT<9> = GLTB.PR.EARN; PR.GRS.LEVEL<9> = COA.LEVEL
     PR.GRS.ACCT<10> = GLTB.PR.EARN; PR.GRS.LEVEL<10> = COA.LEVEL
     PR.GRS.ACCT<11> = GLTB.PR.EARN; PR.GRS.LEVEL<11> = COA.LEVEL
     MATREAD COA.REC FROM COA, CONO : GLTB.PR.FIT ELSE COA.LEVEL = 0
     PR.FIT.ACCT = GLTB.PR.FIT; PR.FIT.LEVEL = COA.LEVEL
     MATREAD COA.REC FROM COA, CONO : GLTB.FICA ELSE COA.LEVEL = 0
     PR.FCA.ACCT = GLTB.FICA; PR.FCA.LEVEL = COA.LEVEL
     MATREAD COA.REC FROM COA, CONO : GLTB.PR.SAV.BOND ELSE COA.LEVEL = 0
     PR.BND.ACCT = GLTB.PR.SAV.BOND; PR.BND.LEVEL = COA.LEVEL
     MATREAD COA.REC FROM COA, CONO : GLTB.PR.EIC ELSE COA.LEVEL = 0
     PR.EIC.ACCT = GLTB.PR.EIC; PR.EIC.LEVEL = COA.LEVEL
     PR.STX.ACCT = STR("0",IN.ACCT.LEN); PR.STX.LEVEL = 0
     PR.CTX.ACCT = STR("0",IN.ACCT.LEN); PR.CTX.LEVEL = 0
     PR.SUI.ACCT = STR("0",IN.ACCT.LEN); PR.SUI.LEVEL = 0
     PR.DED.ACCT = STR("0",IN.ACCT.LEN); PR.DED.LEVEL = 0
     PR.INC.ACCT = STR("0",IN.ACCT.LEN); PR.INC.LEVEL = 0
     OLD.EMP = "!@#$%^&*"
     DATA = 1
     LOOP
        READNEXT MDS.ID ELSE DATA = 0
     WHILE DATA DO
        IF CONO # MDS.ID[1,3] THEN GOTO 999
        MATREADU MDS.REC FROM MDS, MDS.ID ELSE
           MAT PRR.REC = ''
           PRR.FILE = 'MDS'
           PRR.ERR = 'CANNOT LOCATE'
           PRR.ID = MDS.ID
           PRR.SEQ = PRR.SEQ + 1
           MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
           GOTO 900
        END
        KEY = FIELD(MDS.ID,"!",1)
        MDS.EMP = KEY[4,4]
        MDS.DIV = KEY[8,2]
        MDS.DEPT = KEY[10,2]
        MDS.CCTR = FIELD(MDS.ID,"!",2)
        BEGIN CASE
        CASE MDS.DIV = ""
           MDS.DIV = GEN.DIV
           MDS.DEPT = GEN.DEPT
           MDS.CCTR = GEN.CCTR
        CASE MDS.DEPT = ""
           MDS.DEPT = GEN.DEPT
           MDS.CCTR = GEN.CCTR
        CASE MDS.CCTR = ""
           MDS.CCTR = GEN.CCTR
        END CASE
        IF OLD.EMP # MDS.EMP THEN
           MATREAD EMP.REC FROM EMPLOYEE, CONO : MDS.EMP ELSE
              MAT EMP.REC = ''
           END
           OLD.EMP = MDS.EMP
           NEW.PTR = 0; NEW.REC = 0
        END
        PRINT @(0,23) : CL : 'NOW PROCESSING EMPLOYEE NUMBER - ' : MDS.EMP "L#4" :
        TOT.AMT = 0
        MATREAD DEPT.REC FROM DEPARTMENT, CONO : MDS.DEPT ELSE MAT DEPT.REC = ""
        FOR II = 1 TO 11
           TEMP.ACCT = DEPT.HRS.ACCT<1,II>
           IF TEMP.ACCT = "" THEN TEMP.ACCT = DEPT.ACCT
           BEGIN CASE
           CASE TEMP.ACCT = PR.GRS.ACCT<II>
           CASE TEMP.ACCT # ""
              TEMP.ACCT = TEMP.ACCT : STR("0",IN.ACCT.LEN-LEN(TEMP.ACCT))
              TEMP.ACCT = TEMP.ACCT[1,IN.ACCT.LEN]
              MATREAD COA.REC FROM COA, CONO : TEMP.ACCT ELSE COA.LEVEL = 0
              PR.GRS.ACCT<II> = TEMP.ACCT
              PR.GRS.LEVEL<II> = COA.LEVEL
            CASE GLTB.PR.EARN = PR.GRS.ACCT<II>
            CASE 1
              MATREAD COA.REC FROM COA, CONO : GLTB.PR.EARN ELSE COA.LEVEL = 0
              PR.GRS.ACCT<II> = GLTB.PR.EARN
              PR.GRS.LEVEL<II> = COA.LEVEL
           END CASE
           BEGIN CASE
           CASE PR.GRS.LEVEL<II> = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.GRS.ACCT<II>
           CASE PR.GRS.LEVEL<II> = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.GRS.ACCT<II>
           CASE PR.GRS.LEVEL<II> = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.GRS.ACCT<II>
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.GRS.ACCT<II>
           END CASE
           PRS.AMT = MDS.EARN<1,II>; TOT.AMT = TOT.AMT + PRS.AMT
           MDS.NO = "GR"; GOSUB 1000
        NEXT II
        IF MDS.SWHT + 0 <> 0 OR MDS.DIAB + 0 <> 0 THEN
           MATREAD TAX.TAB.REC FROM TAX2, CONO : EMP.ST.CODE ELSE
              MAT TAX.TAB.REC = ''
           END
           IF MDS.SWHT + 0 <> 0 THEN
              BEGIN CASE
              CASE TTR.TAX.ACCT = PR.STX.ACCT
              CASE 1
                 TTR.TAX.ACCT = TTR.TAX.ACCT : STR("0",IN.ACCT.LEN-LEN(TTR.TAX.ACCT))
                 TTR.TAX.ACCT = TTR.TAX.ACCT[1,IN.ACCT.LEN]
                 MATREAD COA.REC FROM COA, CONO : TTR.TAX.ACCT ELSE COA.LEVEL = 0
                 PR.STX.ACCT = TTR.TAX.ACCT; PR.STX.LEVEL = COA.LEVEL
              END CASE
              BEGIN CASE
              CASE PR.STX.LEVEL = 0
                 T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.STX.ACCT
              CASE PR.STX.LEVEL = 1
                 T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.STX.ACCT
              CASE PR.STX.LEVEL = 2
                 T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.STX.ACCT
              CASE 1
                 T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.STX.ACCT
              END CASE
              PRS.AMT = MDS.SWHT; TOT.AMT = TOT.AMT - PRS.AMT
              MDS.NO = "ST-" : EMP.ST.CODE; GOSUB 2000
           END
           IF MDS.DIAB + 0 <> 0 THEN
              BEGIN CASE
              CASE TTR.SUI.ACCT = PR.SUI.ACCT
              CASE 1
                 TTR.SUI.ACCT = TTR.SUI.ACCT : STR("0",IN.ACCT.LEN-LEN(TTR.SUI.ACCT))
                 TTR.SUI.ACCT = TTR.SUI.ACCT[1,IN.ACCT.LEN]
                 MATREAD COA.REC FROM COA, CONO : TTR.SUI.ACCT ELSE COA.LEVEL = 0
                 PR.SUI.ACCT = TTR.SUI.ACCT; PR.SUI.LEVEL = COA.LEVEL
              END CASE
              BEGIN CASE
              CASE PR.SUI.LEVEL = 0
                 T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : TTR.SUI.ACCT
              CASE PR.SUI.LEVEL = 1
                 T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : TTR.SUI.ACCT
              CASE PR.SUI.LEVEL = 2
                 T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : TTR.SUI.ACCT
              CASE 1
                 T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : TTR.SUI.ACCT
              END CASE
              PRS.AMT = MDS.DIAB; TOT.AMT = TOT.AMT - PRS.AMT
              MDS.NO = "DB-" : EMP.ST.CODE; GOSUB 2000
           END
        END
        IF MDS.CWHT + 0 <> 0 THEN
           MATREAD TAX.TAB.REC FROM TAX2, CONO : EMP.CITY.CODE ELSE
              MAT TAX.TAB.REC = ''
           END
           BEGIN CASE
           CASE TTR.TAX.ACCT = PR.CTX.ACCT
           CASE 1
              TTR.TAX.ACCT = TTR.TAX.ACCT : STR("0",IN.ACCT.LEN-LEN(TTR.TAX.ACCT))
              TTR.TAX.ACCT = TTR.TAX.ACCT[1,IN.ACCT.LEN]
              MATREAD COA.REC FROM COA, CONO : TTR.TAX.ACCT ELSE COA.LEVEL = 0
              PR.CTX.ACCT = TTR.TAX.ACCT; PR.CTX.LEVEL = COA.LEVEL
           END CASE
           BEGIN CASE
           CASE PR.CTX.LEVEL = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : TTR.TAX.ACCT
           CASE PR.CTX.LEVEL = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : TTR.TAX.ACCT
           CASE PR.CTX.LEVEL = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : TTR.TAX.ACCT
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : TTR.TAX.ACCT
           END CASE
           PRS.AMT = MDS.CWHT; TOT.AMT = TOT.AMT - PRS.AMT
           MDS.NO = "CT-" : EMP.CITY.CODE; GOSUB 2000
        END
        DCNT = COUNT(MDS.DED.CODE,VM) + (MDS.DED.CODE # '')
        FOR D = 1 TO DCNT
           IF MDS.DED.AMT<1,D> + 0 <> 0 THEN
              MATREAD MDED.REC FROM MISCDED, CONO : MDS.DED.CODE<1,D> ELSE
                 MAT MDED.REC = ''
              END
              BEGIN CASE
              CASE MDED.ACCT = PR.DED.ACCT
              CASE 1
                 MDED.ACCT = MDED.ACCT : STR("0",IN.ACCT.LEN-LEN(MDED.ACCT))
                 MDED.ACCT = MDED.ACCT[1,IN.ACCT.LEN]
                 MATREAD COA.REC FROM COA, CONO : MDED.ACCT ELSE COA.LEVEL = 0
                 PR.DED.ACCT = MDED.ACCT; PR.DED.LEVEL = COA.LEVEL
              END CASE
              BEGIN CASE
              CASE PR.DED.LEVEL = 0
                 T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : MDED.ACCT
              CASE PR.DED.LEVEL = 1
                 T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : MDED.ACCT
              CASE PR.DED.LEVEL = 2
                 T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : MDED.ACCT
              CASE 1
                 T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : MDED.ACCT
              END CASE
              PRS.AMT = MDS.DED.AMT<1,D>; TOT.AMT = TOT.AMT - PRS.AMT
              MDS.NO = "DD-" : MDS.DED.CODE<1,D>; GOSUB 2000
           END
        NEXT D
        OCNT = COUNT(MDS.OINC.CODE,VM) + (MDS.OINC.CODE # '')
        FOR O = 1 TO OCNT
           IF MDS.OINC.AMT<1,O> + 0 <> 0 THEN
              MATREAD OINC.REC FROM OTHER.INC, CONO : MDS.OINC.CODE<1,O> ELSE
                 MAT OINC.REC = ''
              END
              BEGIN CASE
              CASE OINC.ACCT = PR.INC.ACCT
              CASE 1
                 OINC.ACCT = OINC.ACCT : STR("0",IN.ACCT.LEN-LEN(OINC.ACCT))
                 OINC.ACCT = OINC.ACCT[1,IN.ACCT.LEN]
                 MATREAD COA.REC FROM COA, CONO : OINC.ACCT ELSE COA.LEVEL = 0
                 PR.INC.ACCT = OINC.ACCT; PR.INC.LEVEL = COA.LEVEL
              END CASE
              BEGIN CASE
              CASE PR.INC.LEVEL = 0
                 T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : OINC.ACCT
              CASE PR.INC.LEVEL = 1
                 T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : OINC.ACCT
              CASE PR.INC.LEVEL = 2
                 T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : OINC.ACCT
              CASE 1
                 T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : OINC.ACCT
              END CASE
              PRS.AMT = MDS.OINC.AMT<1,O>; TOT.AMT = TOT.AMT + PRS.AMT
              MDS.NO = "OI-" : MDS.OINC.CODE<1,O>; GOSUB 1000
           END
        NEXT O
        IF MDS.FWHT + 0 <> 0 THEN
           BEGIN CASE
           CASE PR.FIT.LEVEL = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.FIT.ACCT
           CASE PR.FIT.LEVEL = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.FIT.ACCT
           CASE PR.FIT.LEVEL = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.FIT.ACCT
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.FIT.ACCT
           END CASE
           PRS.AMT = MDS.FWHT; TOT.AMT = TOT.AMT - PRS.AMT
           MDS.NO = "FT"; GOSUB 2000
        END
        IF MDS.FICA + 0 <> 0 THEN
           BEGIN CASE
           CASE PR.FCA.LEVEL = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.FCA.ACCT
           CASE PR.FCA.LEVEL = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.FCA.ACCT
           CASE PR.FCA.LEVEL = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.FCA.ACCT
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.FCA.ACCT
           END CASE
           PRS.AMT = MDS.FICA; TOT.AMT = TOT.AMT - PRS.AMT
           MDS.NO = "FA"; GOSUB 2000
        END
        IF MDS.BONDS + 0 <> 0 THEN
           BEGIN CASE
           CASE PR.BND.LEVEL = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.BND.ACCT
           CASE PR.BND.LEVEL = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.BND.ACCT
           CASE PR.BND.LEVEL = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.BND.ACCT
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.BND.ACCT
           END CASE
           PRS.AMT = MDS.BONDS; TOT.AMT = TOT.AMT - PRS.AMT
           MDS.NO = "BD"; GOSUB 2000
        END
        IF MDS.EIC + 0 <> 0 THEN
           BEGIN CASE
           CASE PR.EIC.LEVEL = 0
              T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.EIC.ACCT
           CASE PR.EIC.LEVEL = 1
              T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.EIC.ACCT
           CASE PR.EIC.LEVEL = 2
              T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.EIC.ACCT
           CASE 1
              T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.EIC.ACCT
           END CASE
           PRS.AMT = MDS.EIC; TOT.AMT = TOT.AMT - PRS.AMT
           MDS.NO = "EC"; GOSUB 2000
        END
        BEGIN CASE
        CASE PR.CSH.LEVEL = 0
           T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PR.CSH.ACCT
        CASE PR.CSH.LEVEL = 1
           T.ACCT = MDS.DIV : GEN.DEPT : GEN.CCTR : PR.CSH.ACCT
        CASE PR.CSH.LEVEL = 2
           T.ACCT = MDS.DIV : MDS.DEPT : GEN.CCTR : PR.CSH.ACCT
        CASE 1
           T.ACCT = MDS.DIV : MDS.DEPT : MDS.CCTR : PR.CSH.ACCT
        END CASE
        PRS.AMT = TOT.AMT
        MDS.NO = "CA"; GOSUB 2000
        IF NEW.PTR THEN
           NEW.REC = NEW.REC + 1
           NEW.PTR = 0
        END
900     RELEASE MDS, MDS.ID
999  REPEAT
     GOTO 99999
1000 PRS.AMT = 0 + PRS.AMT
     BEGIN CASE
     CASE PRS.AMT > 0
        ETR.ID = CONO : T.ACCT : OLD.EMP : "!D*" : NEW.REC
     CASE PRS.AMT + 0 < 0
        ETR.ID = CONO : T.ACCT : OLD.EMP : "!C*" : NEW.REC
     CASE 1
        GOTO 1999
     END CASE
     MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
        MAT ETR.REC = ""
     END
     ETR.AMT = ETR.AMT + PRS.AMT
     LOCATE MDS.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
     INS MDS.NO BEFORE ETR.TRAN<1,PTR>
     INS "" BEFORE ETR.DATE<1,PTR>
     INS PRS.AMT BEFORE ETR.TAMT<1,PTR>
     IF PTR > 99 THEN NEW.PTR = 1
     MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
2000 PRS.AMT = 0 + PRS.AMT
     BEGIN CASE
     CASE PRS.AMT > 0
        ETR.ID = CONO : T.ACCT : OLD.EMP : "!C*" : NEW.REC
     CASE PRS.AMT + 0 < 0
        ETR.ID = CONO : T.ACCT : OLD.EMP : "!D*" : NEW.REC
     CASE 1
        GOTO 2999
     END CASE
     MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
        MAT ETR.REC = ""
     END
     ETR.AMT = ETR.AMT - PRS.AMT
     LOCATE MDS.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
     INS MDS.NO BEFORE ETR.TRAN<1,PTR>
     INS "" BEFORE ETR.DATE<1,PTR>
     INS (0 - PRS.AMT) BEFORE ETR.TAMT<1,PTR>
     IF PTR > 99 THEN NEW.PTR = 1
     MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN
91000 ERR.TYPE = 1
     CALL SYSCOM(MAT SYSCOM.REC)
     RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99000 IF FR.NEXT.PER = "" THEN
        INBUFF<5> = "END"
        PROCWRITE INBUFF
     END
*** END OF JOB ***
99999 END
