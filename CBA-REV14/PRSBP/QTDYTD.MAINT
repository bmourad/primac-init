*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.EMPLOYEE
*COPY>PRS.CPYLIB>COM.QTD-YTD
*COPY>PRS.CPYLIB>COM.PRS.FILE.VARS
*COPY>PRS.CPYLIB>COM.QTDYTD.MAINT
***************************************************************
* REVISION       - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE         - PRSBP
* PROGRAM        - QTDYTD.MAINT
* BY             - KERRY WILSON, C.B.A
* DATE           - 03/16/88
* DESCRIPTION    - This program maintains the QTD-YTD file.
*T23838 markt 04/07/1999 * On new record entry only, FICA total not
*                          being properly calculated from LVL1 and LVL2
*                          values.  Problem also occurs when modifying
*                          data by Quarter, rather than by field.
***************************************************************
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>PRS.CPYLIB>QTD-YTD
*COPY>PRS.CPYLIB>PRS.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PRS.CPYLIB>MISCDED
*
*---- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  PROCREAD X ELSE
      PRINT "CANNOT READ INPUT BUFFER"
      GOTO 93000
  END
  CONO = X<1>; BACKUP=X<5>
*
*---- OPEN FILES
*
  OPEN 'CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
  OPEN 'PRS.SCREENS' TO M.SCREENS ELSE ERRMSG='PRS.SCREENS IS MISSING';GOTO 93000
  IF BACKUP = 'Y' THEN
      OPEN 'S.QTD-YTD' TO QTD.YTD ELSE ERRMSG='S.QTD-YTD FILE IS MISSING';GOTO 93000
      OPEN 'S.COMPANY' TO COMPANY ELSE ERRMSG='S.COMPANY FILE IS MISSING';GOTO 93000
      OPEN 'S.EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='S.EMPLOYEE FILE IS MISSING';GOTO 93000
  END ELSE
      OPEN 'QTD-YTD' TO QTD.YTD ELSE ERRMSG='QTD-YTD FILE IS MISSING';GOTO 93000
      OPEN 'COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
      OPEN 'EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='EMPLOYEE FILE IS MISSING';GOTO 93000
  END
  OPEN '','MISCDED' TO MISCDED ELSE ERRMSG="MISCDED FILE IS MISSING"; GOTO 93000
  OPEN 'KEYWORDS' TO KEYWORDS ELSE ERRMSG='KEYWORDS FILE IS MISSING';GOTO 93000
  OPEN 'EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE ERRMSG='EMPLOYEE.XREF FILE IS MISSING';GOTO 93000
*
*---- GET COMPANY NUMBER
*
  CONO = ''
  MAT COMP.REC = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
*
*---- INITIALIZATION
*
  PROMPT ''
  MAT EDIT.COM = ""
  TYP = 0
  CALL EDIT.SUB
  FILL = "#"
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.NAME<1> = 'QTDYTD.MAINT'
  ECD.SCRN.NAME<2> = 'QTDYTD.MAINT.ERN'
  ECD.SCRN.NAME<3> = 'QTDYTD.MAINT.HRS'
  ECD.SCRN.NAME<4> = 'QTDYTD.MAINT.DED'
  ECD.SCRN.CNT = 4
  ECD.ACTION = 1
  ECD.SCRN.NO = 1
  CALL SCRN.EDIT
  ECD.ACTION = 2
  CALL SCRN.EDIT
*
*---- MAIN PROCESSING
*
10 *
  ADD.FLG = ""
  MAT SCV.REC = ""
  MAT QTD.REC = ""
  MAT MDED.REC = ""
  MAT EMP.REC = ""
  MAT GEN.XREF.REC = ""
  NEW.FLG = "N"
  ECD.ACTION = 6
  CALL SCRN.EDIT
  ECD.NUM = 1
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
      CASE ECD.RET.VALUE = 'END' 
          GOTO 99999
      CASE ECD.RET.VALUE # ""
          GOSUB 4000
          IF ADD.FLG = 'N' THEN GOTO 10
      CASE ECD.RET.VALUE = ''  
          GOSUB 3000
          IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' OR GXR.ID = '' THEN GOTO 10
          GOSUB 4000
          IF ADD.FLG = 'N' THEN GOTO 10
  END CASE
  LOOP
      ECD.NUM = 21
      ECD.ACTION = 4
      CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
          CASE OPTION = 'E' OR OPTION = 'END'  
              OPTION= 'END'
              RELEASE QTD.YTD,ID
          CASE OPTION = 'F' 
              MATWRITE QTD.REC ON QTD.YTD,ID
              OPTION = 'END'
          CASE NUM(OPTION) 
              ON OPTION GOSUB 100,200,300,400,500,550,600,700,800,900,1000
          CASE OPTION = 'W'  
              CALL QTDYTD.MAINT.ERN
              ECD.SCRN.NO = 1
              ECD.ACTION = 2
              CALL SCRN.EDIT
              GOSUB 4100
          CASE OPTION = 'H' 
              CALL QTDYTD.MAINT.HRS
              ECD.SCRN.NO = 1
              ECD.ACTION = 2
              CALL SCRN.EDIT
              GOSUB 4100
          CASE OPTION = 'D' 
              CALL QTDYTD.MAINT.DED
              ECD.SCRN.NO = 1
              ECD.ACTION = 2
              CALL SCRN.EDIT
              GOSUB 4100
          CASE OPTION[1,1] = 'Q' 
              QTR = OPTION[2,1]
              GOSUB 1100
      END CASE
  WHILE OPTION # 'END' DO REPEAT
  ECD.ACTION = 6
  CALL SCRN.EDIT
  GOTO 10
*
*---- CHANGE QTD.GROSS
*
100 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 1; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 101
      QTD.GROSS<1,I> = ECD.RET.VALUE
  NEXT I
101 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.NON.TAX
*
200 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 2; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 201
      QTD.NON.TAX<1,I> = ECD.RET.VALUE
  NEXT I
201 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.SCK.PAY
*
300 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 3; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 301
      QTD.SCK.PAY<1,I> = ECD.RET.VALUE
  NEXT I
301 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.FWHT
*
400 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 401
      QTD.FWHT<1,I> = ECD.RET.VALUE
  NEXT I
401 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.FICA  OASDI ONLY
*
500 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 5; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 501
      QTD.LVL1.FICA<1,I> = ECD.RET.VALUE
      QTD.FICA<1,I> = QTD.LVL1.FICA<1,I> + QTD.LVL2.FICA<1,I>
  NEXT I
501 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.FICA  MEDICARE ONLY
*
550 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 6; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 551
      QTD.LVL2.FICA<1,I> = ECD.RET.VALUE
      QTD.FICA<1,I> = QTD.LVL1.FICA<1,I> + QTD.LVL2.FICA<1,I>
  NEXT I
551 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.SUI
*
600 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 7; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 601
      QTD.SUI<1,I> = ECD.RET.VALUE
  NEXT I
601 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.SWHT
*
700 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 8; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 701
      QTD.SWHT<1,I> = ECD.RET.VALUE
  NEXT I
701 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.CWHT
*
800 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 9; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 801
      QTD.CWHT<1,I> = ECD.RET.VALUE
  NEXT I
801 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.EIC
*
900 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 10; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 901
      QTD.EIC<1,I> = ECD.RET.VALUE
  NEXT I
901 GOSUB 2000
  RETURN
*
*---- CHANGE QTD.SK.NO.FI
*
1000 *
  FOR I = 1 TO 4
      ECD.ACTION = 4; ECD.NUM = I+2; ECD.SUB.NUM = 11; CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 1001
      QTD.SK.NO.FI<1,I> = ECD.RET.VALUE
  NEXT I
1001 GOSUB 2000
  RETURN
*
*---- CHANGE QUARTER 
*
1100 *
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 1; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.GROSS<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 2; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.NON.TAX<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 3; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.SCK.PAY<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.FWHT<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 5; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.LVL1.FICA<1,QTR> = ECD.RET.VALUE
  QTD.FICA<1,QTR> = QTD.LVL1.FICA<1,QTR> + QTD.LVL2.FICA<1,QTR>; *T23838
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 6; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.LVL2.FICA<1,QTR> = ECD.RET.VALUE
  QTD.FICA<1,QTR> = QTD.LVL1.FICA<1,QTR> + QTD.LVL2.FICA<1,QTR>; *T23838
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 7; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.SUI<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 8; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.SWHT<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 9; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.CWHT<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 10; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.EIC<1,QTR> = ECD.RET.VALUE
  ECD.ACTION = 4; ECD.NUM = QTR+2; ECD.SUB.NUM = 11; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1101
  QTD.SK.NO.FI<1,QTR> = ECD.RET.VALUE
1101 GOSUB 2000
  RETURN
*
*---- REPRINT YTD TOTALS
*
2000 *
  SCV.REC(7)<ECD.SCRN.NO,1> = SUM(QTD.GROSS)
  SCV.REC(7)<ECD.SCRN.NO,2> = SUM(QTD.NON.TAX)
  SCV.REC(7)<ECD.SCRN.NO,3> = SUM(QTD.SCK.PAY)
  SCV.REC(7)<ECD.SCRN.NO,4> = SUM(QTD.FWHT)
  SCV.REC(7)<ECD.SCRN.NO,5> = SUM(QTD.LVL1.FICA)
  SCV.REC(7)<ECD.SCRN.NO,6> = SUM(QTD.LVL2.FICA)
  SCV.REC(7)<ECD.SCRN.NO,7> = SUM(QTD.SUI)
  SCV.REC(7)<ECD.SCRN.NO,8> = SUM(QTD.SWHT)
  SCV.REC(7)<ECD.SCRN.NO,9> = SUM(QTD.CWHT)
  SCV.REC(7)<ECD.SCRN.NO,10> = SUM(QTD.EIC)
  SCV.REC(7)<ECD.SCRN.NO,11> = SUM(QTD.SK.NO.FI)
  ECD.ACTION = 3
  CALL SCRN.EDIT
  RETURN
*
*---- XREF EMPLOYEE FILE
*
3000 *
  IF CO.EMP.XREF # 'Y' THEN GOTO 3099
  ECD.NUM = 2;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 3099
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GXR.HEADING<1,1> = 'EMP#'
  GXR.HEADING<1,2> = 'LAST NAME'
  GXR.HEADING<1,3> = 'FIRST NAME'
  GXR.ATT<1,1> = 0
  GXR.ATT<1,2> = 4
  GXR.ATT<1,3> = 5
  GXR.LEN<1,1> = 4
  GXR.LEN<1,2> = 30
  GXR.LEN<1,3> = 30
  GXR.XREF = EMPLOYEE.XREF
  GXR.FILE = EMPLOYEE
  GXR.LOC = 1
  GXR.TOP.LINE<1,1> = 'EMPLOYEE XREF SEARCH'
  GXR.TOP.LINE<1,2> = 'FOR STRING : ':ECD.RET.VALUE
  GXR.HEADING<1,1> = 'EMP#'
  GXR.ID = ''
  GXR.SRCH.ID = ECD.RET.VALUE
  CALL GEN.XREF(MAT GEN.XREF.REC,KEYWORDS)
  ECD.ACTION = 2;CALL SCRN.EDIT
  IF GXR.ID = '' THEN
      ECD.ACTION = 3;CALL SCRN.EDIT
      GOTO 3099
  END ELSE
      MATREAD EMP.REC FROM EMPLOYEE,CONO:GXR.ID ELSE
          RELEASE EMPLOYEE, CONO:GXR.ID
          ERRMSG = 'EMPLOYEE NUMBER ':GXR.ID:' IS MISSING'
          GOSUB 91000
          GOTO 3099
      END
  END
  EMP.NO = GXR.ID
  OLD.NAME = EMP.LAST.NAME
  ECD.RET.VALUE = EMP.NO
3099 RETURN
*
*---- LOAD SCV.REC
*
4000 *
  EMP.NO=ECD.RET.VALUE
  ID = CONO:EMP.NO
  MATREAD EMP.REC FROM EMPLOYEE,ID ELSE
      ERRMSG = 'EMPLOYEE ':EMP.NO:' NOT ON FILE'
      GOSUB 91000
      ADD.FLG = 'N'
      GOTO 10
  END
  SCV.REC(1)<ECD.SCRN.NO> = EMP.NO
  SCV.REC(2)<ECD.SCRN.NO> = EMP.FRST.NAME:' ':EMP.LAST.NAME
  ECD.ACTION = 3
  CALL SCRN.EDIT
  MATREADU QTD.REC FROM QTD.YTD,ID ELSE  
      ECD.NUM = 22
      ECD.PMSG = SCV.REC(1)<ECD.SCRN.NO>:' IS NOT ON FILE.  DO YOU WANT TO ADD? (RET/N):'
      ECD.ACTION = 4
      CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'N' THEN
          ADD.FLG = ECD.RET.VALUE
          RELEASE QTD.YTD,ID
          GOTO 20
      END
      MAT QTD.REC = ''
      FOR QTR = 1 TO 4
          GOSUB 1100
          IF ECD.RET.VALUE = 'END' THEN QTR=4
      NEXT QTR
      IF ECD.RET.VALUE = 'END' THEN GOTO 20
      NEW.FLG = 'Y'
      CALL QTDYTD.MAINT.ERN
      CALL QTDYTD.MAINT.HRS
      CALL QTDYTD.MAINT.DED
      ECD.SCRN.NO = 1
      ECD.ACTION = 2
      CALL SCRN.EDIT
      GOSUB 4100
      GOTO 20
  END
  GOSUB 4100
20 RETURN
*
4100 SCV.REC(1)<ECD.SCRN.NO> = EMP.NO
  SCV.REC(2)<ECD.SCRN.NO> = EMP.FRST.NAME:' ':EMP.LAST.NAME
  FOR I = 1 TO 4
      SCV.REC(I+2)<ECD.SCRN.NO,1> = QTD.GROSS<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,2> = QTD.NON.TAX<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,3> = QTD.SCK.PAY<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,4> = QTD.FWHT<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,5> = QTD.LVL1.FICA<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,6> = QTD.LVL2.FICA<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,7> = QTD.SUI<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,8> = QTD.SWHT<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,9> = QTD.CWHT<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,10> = QTD.EIC<1,I>
      SCV.REC(I+2)<ECD.SCRN.NO,11> = QTD.SK.NO.FI<1,I>
  NEXT I
  GOSUB 2000
  RETURN
*
*---- CALL FOR SYSCOM
*
91000 *
  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999 *
END
