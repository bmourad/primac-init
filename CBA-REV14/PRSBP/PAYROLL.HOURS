*COPY>CPYLIB>COM1
**********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - PRSBP
* PROGRAM       - PAYROLL.HOURS.MAINT
* BY            - WALID YAMOUT, CBA
* DATE          - 06/14/85
* DESCRIPTION   -
* LAST COMPILE  - 417
**********************************************************************
*ENDDOC
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PRS.CPYLIB>PAYROLL.HOURS
*COPY>CPYLIB>CHAR
DIM ORIG.REC(10)
EQU ORIG.DESC TO ORIG.REC(1)
EQU ORIG.SHORT TO ORIG.REC(2)
EQU ORIG.SMV TO ORIG.REC(3)
EQU ORIG.QTD TO ORIG.REC(4)
*
*--- OPEN FILES
*
ERRMSG = ""
MAT FILE.VARS = ""
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
OPEN '','PRS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PRS.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
*
*--- INITIALIZATION
*
LINE.SPACE = 1
PAGE.SIZE = 13
BEGIN.PAGE = 7
*
*--- LOAD ORIG.REC
*
MAT ORIG.REC = ""
ORIG.DESC = "REGULAR"
ORIG.SHORT = "REG"
ORIG.SMV = 1
ORIG.DESC<1,2> = "OVER TIME"
ORIG.SHORT<1,2> = "O/T"
ORIG.SMV<1,2> = 2
ORIG.DESC<1,3> = "DOUBLE TIME"
ORIG.SHORT<1,3> = "D/T"
ORIG.SMV<1,3> = 3
ORIG.DESC<1,4> = "SICK"
ORIG.SHORT<1,4> = "SICK"
ORIG.SMV<1,4> = 4
ORIG.QTD<1,4> = "SICK"
ORIG.DESC<1,5> = "HOLIDAY"
ORIG.SHORT<1,5> = "HOL"
ORIG.SMV<1,5> = 5
ORIG.DESC<1,6> = "VACATION"
ORIG.SHORT<1,6> = "VAC"
ORIG.SMV<1,6> = 6
ORIG.QTD<1,6> = "VAC"
ORIG.DESC<1,7> = "MISCELLANEOUS"
ORIG.SHORT<1,7> = "MISC"
ORIG.SMV<1,7> = 7
ORIG.DESC<1,8> = "REG NON CHARGE"
ORIG.SHORT<1,8> = "REG-N/C"
ORIG.SMV<1,8> = 8
ORIG.DESC<1,9> = "O/T NON CHARGE"
ORIG.SHORT<1,9> = "O/T-N/C"
ORIG.SMV<1,9> = 9
ORIG.DESC<1,10> = "REG SUPERVISE"
ORIG.SHORT<1,10> = "REG-SUP"
ORIG.SMV<1,10> = 10
ORIG.DESC<1,11> = "O/T SUPERVISE"
ORIG.SHORT<1,11> = "O/T-SUP"
ORIG.SMV<1,11> = 11
*
*--- SCREEN
*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'PAYROLL.HOURS.MAINT'
   ECD.ACTION=1;CALL SCRN.EDIT
*
*--- MAIN PROCESS
*
100*
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
*
*--- ENTER COMPANY NUMBER
*
200*
  CONO = ""
  ECD.NUM = 1
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 999999
    CASE ECD.RET.VALUE # ""
      MATREAD COMP.REC FROM COMPANY, ECD.RET.VALUE ELSE
        MAT COMP.REC = ""
        ERRMSG = "COMPANY NOT ON FILE"
        GOSUB 91000
        GOTO 200
      END
      CONO = ECD.RET.VALUE
  END CASE
  ECD.NUM = 2; SCV.REC(2)<1> = CO.NAME
  ECD.ACTION = 5; CALL SCRN.EDIT
  MAT HRS.REC = ""
  MATREADU HRS.REC FROM CONTROL, CONO:"PAYROLL.HOURS" ELSE MAT HRS.REC = MAT ORIG.REC
  LINES = COUNT(HRS.DESC,VM) + (HRS.DESC # "")
  LN = 1
  OLD.START = 0
  GOSUB 10000
*
*--- ENTER REQUEST
*
500*
   ECD.NUM = 3; SCV.REC(3)<ECD.SCRN.NO> = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   REQUEST = ECD.RET.VALUE
   BEGIN CASE
     CASE REQUEST = "E" OR REQUEST = "END"
       RELEASE CONTROL, CONO:"PAYROLL.HOURS"
       GOTO 100
     CASE REQUEST = "D"
       GOSUB 30000
       IF LNO THEN
         LN = LNO
         HRS.DESC = DELETE(HRS.DESC,1,LN,0)
         HRS.SHORT = DELETE(HRS.SHORT,1,LN,0)
         HRS.SMV = DELETE(HRS.SMV,1,LN,0)
         HRS.QTD = DELETE(HRS.QTD,1,LN,0)
         LINES = COUNT(HRS.DESC,VM) + (HRS.DESC # "")
         IF LN > LINES THEN LN = LINES
         IF LN < 1 THEN LN = 1
         OLD.START = 0
       END
     CASE REQUEST = "C"
       MAT HRS.REC = MAT ORIG.REC
       LINES = COUNT(HRS.DESC,VM) + (HRS.DESC # "")
       LN = 1
       OLD.START = 0
     CASE REQUEST = "F"
       IF LINES < 1 THEN
         ERRMSG = "NO HOURS FOR PAYROLL INPUT * NO FILE *"
         GOSUB 91000
       END ELSE
         MATWRITE HRS.REC ON CONTROL, CONO:"PAYROLL.HOURS"
         GOTO 100
       END
   END CASE
   GOSUB 10000
   GOTO 500
*-----------------*
*   SUBROUTINES   *
*-----------------*
*
*--- SCROLL
*
10000*
   ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   IF ST.LINE = OLD.START THEN RETURN
   OLD.START = ST.LINE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   CNT = 1
   FOR N = ST.LINE TO LST.LINE UNTIL N > LINES
     SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
     PRINT @(0,SLN) : N "R#2" :
     PRINT @(5,SLN) : HRS.DESC<1,N> "L#17" :
     PRINT @(25,SLN) : HRS.SHORT<1,N> "L#7" :
     PRINT @(35,SLN) : HRS.SMV<1,N> "R#2" :
     CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
     SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
     PRINT @(0,SLN) : CL :
   NEXT N
RETURN
*
*--- GET LINE
*
30000*
   GOSUB 10000
   IF LST.LINE > LINES THEN ECD.MAXV = LINES ELSE ECD.MAXV = LST.LINE
   ECD.MINV = ST.LINE
   ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
RETURN
*
*--- ERROR ROUTINE
*
91000*
   PRINT @(0,23):ERRMSG:CL:
   INPUT REPLY,1 :
   PRINT @(0,23):CL:
RETURN
999999*
   PRINT @(-1):
   END
