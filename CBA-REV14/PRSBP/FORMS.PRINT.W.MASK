*COPY>CPYLIB>COM3
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE      - PRSBP
* PROGRAM     - FORMS.PRINT
* AUTHOR      - ZIAD YAMOUT, CBA
* DATE        - 10/10/88
* DESCRIPTION - This program is used to maintain questions and setups
*               for various forms.
* MOD         - per EG,JW,GR, w2's must form feed before total pages
*             - RWW 011990
*********************************************************************
*COPY>PRS.CPYLIB>AUTO.FORMS
*COPY>PRS.CPYLIB>AUTO.FORMS.DATA
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*--- Get company number
     PROCREAD BUFFER ELSE
        ERRMSG = "Must be executed from a PROC"
        GOSUB 91000; GOTO 99999
     END
     EOJ = 0
     CONO = BUFFER<1>
     FORM.NAME = BUFFER<3>
*--- Open files
     OPEN "AUTO.FORMS" TO AUTO.FORMS ELSE
        ERRMSG = "Cannot open AUTO.FORMS file"
        GOSUB 91000; GOTO 99999
     END
     OPEN FORM.NAME TO FORM.FILE ELSE
        ERRMSG = "Cannot open ":FORM.NAME:" file"
        GOSUB 91000; GOTO 99999
     END
     READNEXT SEQ.NO ELSE
        ERRMSG = "No ":FORM.NAME:" items selected"
        GOSUB 91000; GOTO 99999
     END
*--- Initialization
     DIM P.REC(120)
     DIM H.REC(120)
     DIM I.REC(100)
     DIM S.REC(25)
     DIM G.REC(25)
     MAT S.REC = ""; MAT G.REC = ""
     MAT EDIT.COM = ""; TYP = 0
     CALL EDIT.SUB; FILL = "#"
*--- Get form's header information
     MATREAD AFH.REC FROM AUTO.FORMS, FORM.NAME ELSE
        ERRMSG = "Cannot locate AUTO.FORMS, ":FORM.NAME
        GOSUB 91000; GOTO 99999
     END
     MATREAD I.REC FROM FORM.FILE, CONO : FORM.NAME ELSE
        ERRMSG = "Cannot locate Header data for ":FORM.NAME
        GOSUB 91000; GOTO 99999
     END
*
*--- Set up header
*
     MASK.CNT = 0
     MAT H.REC = ""
     FOR I = 1 TO AFH.LENGTH
        H.REC(I) = SPACE(AFH.WIDTH)
     NEXT I
     P.Y = 0
     YCNT = DCOUNT(AFH.HF.Y,VM)
     FOR I = 1 TO YCNT
        XCNT = DCOUNT(AFH.HF.X<1,I>,SVM)
        Y = AFH.HF.Y<1,I>
        FOR J = 1 TO XCNT
           X = AFH.HF.X<1,I,J>
           F.ID = FORM.NAME:"!H!":AFH.HF.REF<1,I,J>
           MATREAD AFD.REC FROM AUTO.FORMS, F.ID THEN
              BEGIN CASE
              CASE AFD.OPT = "P"
                 P.Y = Y; P.X = X; P.L = AFD.MAXL; P.FMT = AFD.FMT
                 P.FILL = AFD.FILL.CHR; P.JUSTIFY = AFD.JUSTIFY
              CASE AFD.ATT = 0 OR AFD.ATT GT 100
              CASE 1
                 IF AFD.CONV # "" THEN
                    VAR = OCONV(I.REC(AFD.ATT),AFD.CONV:AFD.OUTPUT) AFD.FMT
                 END ELSE
                    VAR = I.REC(AFD.ATT) AFD.FMT
                 END
                 H.REC(Y) = H.REC(Y)[1,X-1]:VAR:H.REC(Y)[X+AFD.MAXL,AFH.WIDTH]
              END CASE
           END
        NEXT J
     NEXT I
*
*--- Set up subtotals
*
     SCNT = 0; S.REF = ""; S.ATT = ""; S.Y = ""; S.X = ""
     S.L = ""; S.CONV = ""; S.FMT = ""
     BCNT = 0; B.ATT = ""; B.Y = ""; B.X = ""
     B.L = ""; B.CONV = ""; B.FMT = ""
     YCNT = DCOUNT(AFH.HT.Y,VM)
     FOR I = 1 TO YCNT
        XCNT = DCOUNT(AFH.HT.X<1,I>,SVM)
        Y = AFH.HT.Y<1,I>
        FOR J = 1 TO XCNT
           X = AFH.HT.X<1,I,J>
           F.ID = FORM.NAME:"!H!":AFH.HT.REF<1,I,J>
           MATREAD AFD.REC FROM AUTO.FORMS, F.ID THEN
              IF AFD.ATT THEN
                 BCNT = BCNT + 1
                 B.ATT<BCNT> = I.REC(AFD.ATT)
                 B.Y<BCNT> = Y
                 B.X<BCNT> = X
                 B.L<BCNT> = AFD.MAXL
                 B.CONV<BCNT> = AFD.CONV:AFD.OUTPUT
                 B.FMT<BCNT> = AFD.FMT
              END ELSE
                 SCNT = SCNT + 1
                 S.REF<SCNT> = AFD.D.REF
                 S.Y<SCNT> = Y
                 S.X<SCNT> = X
                 S.L<SCNT> = AFD.MAXL
                 S.CONV<SCNT> = AFD.CONV:AFD.OUTPUT
                 S.FMT<SCNT> = AFD.FMT
              END
           END
        NEXT J
     NEXT I
*
*--- Set up detail and mask
*
     MAT P.REC = MAT H.REC
     DCNT = 0; D.ATT = ""; D.Y = ""; D.X = ""
     D.L = ""; D.CONV = ""; D.FMT = ""
     YCNT = DCOUNT(AFH.DF.Y,VM)
     FOR I = 1 TO YCNT
        XCNT = DCOUNT(AFH.DF.X<1,I>,SVM)
        Y = AFH.DF.Y<1,I>
        FOR J = 1 TO XCNT
           X = AFH.DF.X<1,I,J>
           F.ID = FORM.NAME:"!D!":AFH.DF.REF<1,I,J>
           MATREAD AFD.REC FROM AUTO.FORMS, F.ID THEN
              LOCATE AFH.DF.REF<1,I,J> IN S.REF SETTING FND THEN
                 S.ATT<FND> = AFD.ATT
              END
              DCNT = DCNT + 1
              D.ATT<DCNT> = AFD.ATT
              D.Y<DCNT> = Y
              D.X<DCNT> = X
              D.L<DCNT> = AFD.MAXL
              D.CONV<DCNT> = AFD.CONV:AFD.OUTPUT
              D.FMT<DCNT> = AFD.FMT
              BEGIN CASE
              CASE AFD.TYP = 6
                 VAR = "99/99/99" AFD.FMT
              CASE AFD.CONV # ""
                 VAR = OCONV(STR(9,AFD.MAXL-1),AFD.CONV) AFD.FMT
              CASE AFD.TYP = 3
                 VAR = STR(9,AFD.MAXL) AFD.FMT
              CASE 1
                 VAR = STR("X",AFD.MAXL) AFD.FMT
              END CASE
              P.REC(Y) = P.REC(Y)[1,X-1]:VAR:P.REC(Y)[X+AFD.MAXL,AFH.WIDTH]
           END
        NEXT J
     NEXT I
     FOR I = SCNT TO 1 STEP -1
        IF S.ATT<I> = "" THEN
           S.ATT = DELETE(S.ATT,I,0,0)
           SCNT = SCNT - 1
        END
     NEXT I
*
*--- Print Mask
*
*     PRINT CS :
     PRINT @(0,0) :@(-3): "PRIMAC" :
     PRINT @(INT((80-LEN(FORM.NAME))/2),0) : FORM.NAME :
     PRINT @(73,0) : "[08.1]" :
     PRINT @(0,1) : STR("-",80) :
     PRINT @(0,20): STR("-",80) :
     PRINT @(0,22): STR("-",80) :
     NO.TOP = 1; MORE = 0
     LOOP
        X = 0; Y = 21; TYP = 1; MAXL = 1
       PMSG = "Enter # of Masks to print, (M)ask print, (F)orm print, (E)xit :"
*        PMSG = "Enter (F)orms print, or (E)xit :"
        CALL EDIT.SUB
        BEGIN CASE
        CASE VALUE = "END" OR VALUE = "E"
           MORE = 1; VALUE = "END"
        CASE VALUE = "M"
           PRINTER ON
           IF NO.TOP THEN
              PRINT CHAR(12)
              NO.TOP = 0
           END
           FOR I = 1 TO AFH.LENGTH
              PRINT P.REC(I)
           NEXT I
           PRINTER CLOSE
           PRINTER OFF
        CASE VALUE = "F" AND NO.TOP
           ERRMSG = "No Mask is printed before printing actual forms"
           GOSUB 91000
        CASE VALUE = "F"
           MORE = -1
        CASE NUM(VALUE)
           IF VALUE < 1 OR VALUE > 9 THEN
              ERRMSG = "Invalid number of Mask forms"
              GOSUB 91000
           END ELSE
              MORE = VALUE
           END
        CASE 1
           ERRMSG = "*** Invalid input ***"
           GOSUB 91000
        END CASE
     WHILE MORE = 0 DO REPEAT
     IF VALUE = "END" THEN GOTO 99999
*
*--- Print Forms
*
     PRINTER ON
     IF NO.TOP THEN
        PRINT CHAR(12)
        NO.TOP = 0
     END
     FOR I = 1 TO MORE
        FOR J = 1 TO AFH.LENGTH
           PRINT P.REC(J)
        NEXT J
     NEXT I
     FORM.CNT = 1
     DATA = 1
     LOOP
        IF AFH.BRK.LN > 0 AND AFH.BRK.LN < 999 THEN
           IF FORM.CNT > AFH.BRK.LN THEN
              GOSUB 1000
              MAT S.REC = ""
              FORM.CNT = 1
           END
        END
        MATREAD I.REC FROM FORM.FILE, SEQ.NO ELSE GOTO 999
        MAT P.REC = MAT H.REC
        IF P.Y THEN
           BEGIN CASE
           CASE P.FILL = ""
*             VAR = FORM.CNT P.FMT
              VAR = SEQ.NO[4,99] P.FMT
           CASE P.JUSTIFY = "R"
*             VAR = STR(P.FILL,P.L-LEN(FORM.CNT)):FORM.CNT
              VAR = STR(P.FILL,P.L-LEN(SEQ.NO[4,99])):SEQ.NO[4,99]
           CASE 1
*             VAR = FORM.CNT:STR(P.FILL,P.L-LEN(FORM.CNT))
              VAR = SEQ.NO[4,99]:STR(P.FILL,P.L-LEN(SEQ.NO[4,99]))
           END CASE
           P.REC(P.Y) = P.REC(P.Y)[1,P.X-1]:VAR:P.REC(P.Y)[P.X+P.L,AFH.WIDTH]
        END
        FOR I = 1 TO DCNT
           IF D.CONV<I> # "" THEN
              IF D.ATT<I> NE 0 THEN
                 VAR = OCONV(I.REC(D.ATT<I>),D.CONV<I>) D.FMT<I>
              END ELSE VAR = ""
           END ELSE
              VAR = I.REC(D.ATT<I>) D.FMT<I>
           END
           P.REC(D.Y<I>) = P.REC(D.Y<I>)[1,D.X<I>-1]:VAR:P.REC(D.Y<I>)[D.X<I>+D.L<I>,AFH.WIDTH]
        NEXT I
        FOR I = 1 TO SCNT
           S.REC(I) = S.REC(I) + I.REC(S.ATT<I>)
           G.REC(I) = G.REC(I) + I.REC(S.ATT<I>)
        NEXT I
        FOR I = 1 TO AFH.LENGTH
           PRINT P.REC(I)
        NEXT I
        FORM.CNT = FORM.CNT + 1
999  READNEXT SEQ.NO ELSE DATA = 0
     WHILE DATA DO REPEAT
     IF AFH.BRK.LN THEN
        GOSUB 1000
     END
     EOJ = 1
     MAT S.REC = MAT G.REC
     GOSUB 1000
     PRINTER CLOSE
     PRINTER OFF
     GOTO 99999
*
*--- Print subtotals
1000*
     IF AFH.BRK.N.P = "Y" THEN
*
* this is where the sub total pages are supposed to print at the
* bottom of the next page
*
         BLANKS = AFH.PER.PAGE - 1 
         IF BLANKS GE 1 THEN
           LINES = BLANKS * AFH.LENGTH 
            IF NOT(EOJ) THEN
              BLNK.CNT = FIELD(FORM.CNT/AFH.PER.PAGE,'.',2)
              IF BLNK.CNT + 0 EQ 0 THEN
                PRINT CHAR(12)
                LINES = LINES - 1
              END
            END
*
              FOR J = 1 TO LINES 
                 PRINT
              NEXT J
*
         END
     END
     MAT P.REC = MAT H.REC
     FOR I = 1 TO BCNT
        IF B.CONV<I> # "" THEN
           VAR = OCONV(B.ATT<I>,B.CONV<I>) B.FMT<I>
        END ELSE
           VAR = B.ATT<I> B.FMT<I>
        END
        P.REC(B.Y<I>) = P.REC(B.Y<I>)[1,B.X<I>-1]:VAR:P.REC(B.Y<I>)[B.X<I>+B.L<I>,AFH.WIDTH]
     NEXT I
     FOR I = 1 TO SCNT
        IF S.CONV<I> # "" THEN
           VAR = OCONV(S.REC(I),S.CONV<I>) S.FMT<I>
        END ELSE
           VAR = S.REC(I) S.FMT<I>
        END
        P.REC(S.Y<I>) = P.REC(S.Y<I>)[1,S.X<I>-1]:VAR:P.REC(S.Y<I>)[S.X<I>+S.L<I>,AFH.WIDTH]
     NEXT I
     FOR I = 1 TO AFH.LENGTH
        PRINT P.REC(I)
     NEXT I
     RETURN
91000PRINT @(0,23) : ERRMSG : CL :
     INPUT REPLY :
     PRINT @(0,23) : CL :
     RETURN
99999END
