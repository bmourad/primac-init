*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB.INQ
*********************** :COPY>CPYLIB>COM.JOB
**************************************************************************
* REVISION    - [09.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      -
* PROGRAM     - BUDGET SALES MAINT
* BY          - DANIEL J. CRONIN; CBA
* DATE        - 09/07/93 * DESCRIPTION - *
*
* THIS PROGRAM BUILDS THE BUDGETS FOR PRODUCT QTY AND SALES. THE
* 'BUDGET.SALES.MAINT' SCREEN IS USED TO INPUT & CHANGE THE PERIOD BUDGET
* INFORMATION.
*
**************************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>LMFP.CPYLIB>BUDGET.SALES.MAINT.LMG
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>JCS.CPYLIB>JOB.TOT.REC
*COPY>JCS.CPYLIB>DEPT.TOT.REC
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB.CREDIT.STATS
*COPY>JES.CPYLIB>ESTIMATE
      DIM SAVE.JOB(110)
      DIM MAIR.REC(225)
      DIM MASTER.REC(110)
      DIM TEMP.REC(110)
      SYS.TYPE=1
      CALL SYSCOM(MAT SYSCOM.REC)
      MAT FILE.VARS=''
      OPEN '','BUDGET.SALES.MAINT.LMG' TO BUDGET.SALES.MAINT.LMG ELSE
         ERRMSG='BUDGET.SALES.MAINT.LMG FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','JOB' TO JOB ELSE
         ERRMSG='JOB FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INVENTORY' TO INVENTORY ELSE
         ERRMSG = 'INVENTORY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
         ERRMSG = 'INVENTORY.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN "","INV.FNGD" TO INV.FNGD ELSE
         ERRMSG = "INV.FNGD"
         GOTO 93000
      END
      OPEN '','CATEGORY' TO CATEGORY ELSE
         ERRMSG = 'CATEGORY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
         ERRMSG = 'WAREHOUSE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE' TO INV.WHSE ELSE
         ERRMSG = 'INV.WHSE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUSTOMER' TO CUSTOMER ELSE
         ERRMSG='CUSTOMER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','COA' TO COA ELSE
         ERRMSG='COA FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE
         ERRMSG='CUSTOMER.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SALESMAN' TO SALESMAN ELSE
         ERRMSG='SALESMAN FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SALESMAN.XREF' TO SALESMAN.XREF ELSE
         ERRMSG='SALESMAN.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
         ERRMSG = "XREF.DATA"
         GOTO 93000
      END
      OPEN  '','LMFP.SCREENS' TO M.SCREENS ELSE
         ERRMSG= 'LMFP.SCREENS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','COMPANY' TO COMPANY ELSE
         ERRMSG='COMPANY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE' TO INV.WHSE ELSE
         ERRMSG='INV.WHSE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
         ERRMSG='INV.WHSE.LOC FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.STATS' TO INV.STATS ELSE
         ERRMSG='INV.STATS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
         ERRMSG='INV.JOB.STATS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','PREFIX' TO PREFIX ELSE
         ERRMSG='PREFIX FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CONTROL' TO CONTROL ELSE
         ERRMSG='CONTROL FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SECURITY' TO SECURITY ELSE
         ERRMSG='SECURITY FILE IS MISSING'
         GOTO 93000
      END
      CONO="";MAT COMP.REC=''
      CALL GET.CONO(CONO,MAT COMP.REC)
      IF CONO='END' THEN GOTO 99999
      DIM EST.PAR(10)
      MAT EST.PAR=""
      MAT INV.REC = ''
      MAT CATG.REC = ""
      MAT SCV.REC = ""
      PROG.FLAG="M"
      N=0
      TOTAL.BUDGET.AMT = 0
      TOTAL.BUDGET.UNITS = 0
      N6=0
      PTR=''
      MAX.NO.PAGES = 1
      MAT EDIT.COM.DRIVER=''
      MAT FISCAL.REC = ""
      MAT SALESDATES.REC = ""
      MAT BUDGET.MAINT.REC = ""
      MAT EDIT.COM = ''
      TYP = 0; CALL EDIT.SUB; FILL = "#"
      MAT GEN.XREF.REC=''
      DASHES=STR('-',80)
      ERRMSG="";UNKNOWN=STR("?",20)
      PCB.MODE=''
      FIELDS.ACC=""
      FIELDS.ACC1=""
      FIELDS.ACC2=""
      FIELDS.ACC1<1,1>=8
      FIELDS.ACC1<1,2>=9
      FIELDS.ACC1<1,3>=10
      FIELDS.ACC1<1,4>=14
      FIELDS.ACC1<1,5>=16
      FIELDS.ACC1<1,6>=17
      FIELDS.ACC1<1,7>=19
      FIELDS.ACC1<1,8>=20
      FIELDS.ACC1<1,9>=22
      FIELDS.ACC2<1,1>=10
      FIELDS.ACC2<1,2>=16
      FIELDS.ACC2<1,3>=17
      FIELDS.ACC2<1,4>=22
      FIELDS.ACC2<1,5>=1
*PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
*PORT.NO = SYSTEM(18)
      PORT.NO = @TTY
*PORT.NO = PORT.NO[INDEX(PORT.NO,"/",1)+4,99]
      IND.POS = INDEX(PORT.NO,'/',1)
      IF IND.POS = 0 THEN
         PORT.NO = PORT.NO[4,(LEN(PORT.NO)-3)]
      END ELSE
         PORT.NO = PORT.NO[4,IND.POS-4]
      END
      READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "???"
      OPER.ID = PORT.NO : "!" : OPER.ID
      TODAY = DATE()
      GXR.CO=CONO
      BEGIN.PAGE = 8; PAGE.SIZE = 12; LINE.SPACE = 1
      ECD.SCRN.CNT=1
      ECD.SCRN.NAME<1>='BUDGET.SALES'
      ECD.ACTION=1;CALL SCRN.EDIT
      ECD.SCRN.NO=1
      OLD.START.LIN=0
100*
*********************************************************************
*  THE FOLLOWING FOUR FIELDS ARE THE KEY TO THE BUDGET.SALES RECORD *
*  PRECEEDED BY CONO. THE LEVEL FIELD DETERMINES THE STRUCTURE OF   *
*  KEY. LEVEL 0  MEANS ALL PRODUCTS AND WAREHOUSES. LEVEL 1 IS BY   *
*  PRODUCT AND LEVEL 2 IS BY PRODUCT AND WAREHOUSE                  *
*********************************************************************
      CUST=''
      SALESPERSON=''
      PROD.NUM=''
      BR.YEAR=''
      LEVEL=''
      ESN=1
      MAT BUDGET.MAINT.REC=''
      MAT JOB.REC=''
      MAT SALESMAN.REC=''
      OLD.CUST=''
      OLD.MASTER=''
      OLD.EST=''
      LN=1;LINES=0;SLINES=0
      INQUIRE = 0
      PERIOD.RETURN = 'N'
      VAIL = ''
      SAVE.INV.JS.REC = ''
      MASTER.CUST=""
      COMPLETE.DATE = ""
      FLG="O"
      PREV.CRED.AUTH = ''
      LN = 1; LINES = 0
      OLD.START.LINE=0
      WAIT.FOR.IT=''
      BEGIN.PAGE = 8; PAGE.SIZE = 12; LINE.SPACE = 1
      MAT SCV.REC = ""
      ECD.ACTION = 6; CALL SCRN.EDIT
      MATREAD FISCAL.REC FROM CONTROL , CONO:"JCFISCAL" ELSE
         ERRMSG = "CONTROL FISCAL IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
*FR.CURR.PER<1> = '199201';*This is used to test the closing routines
      YEAR = FR.CURR.PER<1>[1,4]
      CURR = FR.CURR.PER<1>[5,2]
*CRT @(0,23):"PERIOD=":FR.CURR.PER<1>
      READ DATES.REC FROM CONTROL , CONO:"OPENDATES" ELSE
         ERRMSG = "CONTROL OPENDATES IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
      MATREAD SALESDATES.REC FROM CONTROL , CONO:"SALESDATES" ELSE
         ERRMSG = "CONTROL SALESDATES IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
150*
      PRT.DATA='Y'
      START.OVER='N'
      GOSUB 200   ;* FUNCTION IS FOR CUSTOMER
      GOSUB 300   ;* FUNCTION IS FOR SALESMAN
      GOSUB 400   ;* FUNCTION IS FOR PRODUCT
      GOSUB 700   ;* FUNCTION IS FOR YEAR
      GOSUB 800   ;* FUNCTION GETS BUDGET.MAINT RECORD
      IF START.OVER='Y' THEN GOTO 100
      GOSUB 1000  ;* FUNCTION IS FOR BUDGET DETAIL BY PERIOD
      GOTO 100
      GOTO 99999
*********************************************************************
* THIS SUBROUTINE HANDLES THE INPUT OF THE CUSTOMER NUMBER VIA A    *
* A NUMBER OR A NAME.                                               *
*********************************************************************
200*
      ECD.ACTION=6;CALL SCRN.EDIT
      ECD.NUM=10
      ECD.VALDAT.CODE=1;ECD.VALDAT.FILE=CUSTOMER;ECD.PREFIX.ID=CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      CUST = ECD.RET.VALUE
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
         ECD.NUM=11;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE='END'  THEN GOTO 99999
         GXR.NAME='CUSTOMER'
         GXR.XREF=CUSTOMER.XREF
         GXR.FILE=CUSTOMER
         GXR.ID=''
         GXR.SRCH.ID=ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX, XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN
            SCV.REC(10)<1> = ""; GOTO 100
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
               ERRMSG='CUSTOMER ':GXR.ID:' IS MISSING';GOSUB 91000
               SCV.REC(10)<1> = ""; GOTO 200
            END
            SCV.REC(10)<1>=GXR.ID
            SCV.REC(11)<1>=CUST.NAME
            CUST=GXR.ID
            ECD.ACTION=3;CALL SCRN.EDIT
         END
      CASE ECD.RET.VALUE#'' AND ECD.VALDAT.ITEM=''
         GOTO 200
      CASE 1
         IF ECD.RET.VALUE # 'END' THEN
            GXR.ID=ECD.RET.VALUE
            FOR I=1 TO CUST.REC.SIZE;CUST.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=CUST.NAME
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      END CASE
299   RETURN
*****************************************************************
*    INPUT SALESMAN INFO                                        *
*****************************************************************
300   ECD.NUM=17
      ECD.VALDAT.CODE=1;ECD.VALDAT.FILE=SALESMAN;ECD.PREFIX.ID=CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = '???' THEN GOSUB 310; GOTO 399
      IF ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM='' THEN  GOTO 300
      IF ECD.RET.VALUE = '' THEN GOSUB 310; GOTO 399
      IF ECD.RET.VALUE # 'END' THEN
         SALESPERSON = ECD.RET.VALUE
         FOR I=1 TO SALESMAN.REC.SIZE;SALESMAN.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
         ECD.NUM=18;SCV.REC(ECD.NUM)<1>=SALS.NAME
         ECD.ACTION=5;CALL SCRN.EDIT
      END
      GOTO 399
*****************************************************************
310*
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???" THEN
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "SALESMAN"; GXR.FILE = SALESMAN
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            ECD.RET.VALUE = ""
            GOTO 200
         END ELSE
            MATREAD SALESMAN.REC FROM SALESMAN , CONO:GXR.ID ELSE
               ERRMSG = "Salesrep (":GXR.ID:") not on file" ;GOSUB 91000
               NEW.ITEM = 1
               GXR.ID = "" ; GOTO 300
            END
            SALESPERSON = GXR.ID
            ECD.NUM=17;SCV.REC(ECD.NUM)<1>=GXR.ID
            ECD.ACTION=3;CALL SCRN.EDIT
            ECD.NUM=18;SCV.REC(ECD.NUM)<1>=SALS.NAME
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      END
399   RETURN
*****************************************************************
400*       GET PRODUCT CODE
*****************************************************************
*
**** ENTER PRODUCT NUMBER
*
610*
      ECD.NUM = 14
      ECD.VALDAT.CODE = '5'
      ECD.VALDAT.FILE = INVENTORY
      ECD.PREFIX.ID = CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      PROD.NUM = ECD.RET.VALUE
      OLD.NAME = ''
      BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 150
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
         STATUS = '0'
         FOR I = 1 TO INV.REC.SIZE
            INV.REC(I) = ECD.VALDAT.ITEM<I>
         NEXT I
         IF INV.M.LINE# 'FNGD' THEN
            ERRMSG = 'THIS PRODUCT IS NOT A FINISHED GOODS PRODUCT'
            GOSUB 91000
            GOTO 610
         END
         OLD.NAME = INV.FULL.DESC
         ECD.ACTION=3;CALL SCRN.EDIT
         ECD.NUM=16;SCV.REC(ECD.NUM)<1>=INV.FULL.DESC
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
         ECD.NUM = 16; ECD.O.R = "O"
         ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "" THEN GOTO 610
         IF ECD.RET.VALUE = "END" THEN GOTO 150
         GXR.ID = ""
         GXR.CO = CONO
         GXR.NAME = "INV.FNGD"
         GXR.XREF = INVENTORY.XREF
         GXR.FILE = INVENTORY
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
         SCV.REC(16)<ESN> = ""
         IF GXR.ID = "" THEN
            ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 610
         END ELSE
            MATREADU INV.REC FROM INVENTORY, CONO:GXR.ID ELSE
               RELEASE INVENTORY, CONO:GXR.ID
               ERRMSG = "Cannot locate Product # ":GXR.ID
               GOSUB 91000
               ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 610
            END
            MATREADU IOF.REC FROM INV.FNGD, CONO:GXR.ID ELSE
               MAT IOF.REC = ""
            END
            NEWREC = 0
            PROD.NUM = GXR.ID
            ECD.NUM=16;SCV.REC(ECD.NUM)<1>=INV.FULL.DESC
            ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=14;SCV.REC(14)<1> = PROD.NUM
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      CASE 1
         PROD.NUM = ECD.RET.VALUE
         MATREADU IOF.REC FROM INV.FNGD, CONO:PROD.NUM ELSE
            MAT IOF.REC = ""
         END
      END CASE
*CRT @(0,23) : "PROD NUMB=":PROD.NUM;INPUT WAIT.FOR.IT
      IF PROD.NUM='000000000000000' THEN GOTO 610
      IF PROD.NUM='' THEN GOTO 610
699   RETURN
*************************************************************
700*        GET BUDGET YEAR
*************************************************************
      ECD.NUM=12
      ECD.ACTION=4;CALL SCRN.EDIT
      BR.YEAR=ECD.RET.VALUE
      BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 150
      END CASE
      RETURN
**************************************************************
800*       GET BUDGET MAINTENANCE RECORD
**************************************************************
      MAT BUDGET.MAINT.REC=''
      GET.BUDGET.REC='Y'
      MATREADU BUDGET.MAINT.REC FROM BUDGET.SALES.MAINT.LMG, CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":BR.YEAR ELSE
         GET.BUDGET.REC='N'
         X = 0; Y = 23; TYP = 8; MAXL = 1
         PMSG = 'Budget.sales record not found; Do you wish to add? Y/N.'
         CALL EDIT.SUB
         PRINT @(0,23) : CL :
         IF VALUE = "N" THEN
            START.OVER='Y'
         END ELSE
            START.OVER='N'
         END
      END
      IF GET.BUDGET.REC='Y' THEN
         GOSUB 1900
      END ELSE
         YEAR.RETURN='Y'
         GOSUB 1100
      END
899   RETURN
**************************************************************
1000*   BUDGET PERIOD ROUTINE                                *
**************************************************************
      LOOP
         ECD.NUM=40
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
         ACTION = ECD.RET.VALUE
         BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            ANCORE = 0
         CASE ACTION = 'F'
            GOSUB 2000
            ANCORE = 0
         CASE ACTION >= 1  AND ACTION =< 12
            ANCORE = 1
            PERIOD.RETURN = 'Y'
            IF ACTION = 1 THEN
               GOSUB 1100
            END
            IF ACTION = 2 THEN
               GOSUB 1110
            END
            IF ACTION = 3 THEN
               GOSUB 1120
            END
            IF ACTION = 4 THEN
               GOSUB 1130
            END
            IF ACTION = 5 THEN
               GOSUB 1140
            END
            IF ACTION = 6 THEN
               GOSUB 1150
            END
            IF ACTION = 7 THEN
               GOSUB 1160
            END
            IF ACTION = 8 THEN
               GOSUB 1170
            END
            IF ACTION = 9 THEN
               GOSUB 1180
            END
            IF ACTION = 10 THEN
               GOSUB 1190
            END
            IF ACTION = 11 THEN
               GOSUB 1200
            END
            IF ACTION = 12 THEN
               GOSUB 1210
            END
         END CASE
      WHILE ANCORE DO REPEAT
      RETURN
1220*
1100*
      X = 14; Y = 12; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,1>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1105
      END
      BUDGET.AMT<1,1> = VALUE
      GOSUB 1700
*                --------
1105*
      X = 27; Y = 12; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,1>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1110
      END
      BUDGET.UNITS<1,1> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1110*
      X = 14; Y = 13; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,2>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1115
      END
      BUDGET.AMT<1,2> = VALUE
      GOSUB 1700
*                --------
1115*
      X = 27; Y = 13; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,2>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1120
      END
      BUDGET.UNITS<1,2> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1120*
      X = 14; Y = 14; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,3>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1125
      END
      BUDGET.AMT<1,3> = VALUE
      GOSUB 1700
*                --------
1125*
      X = 27; Y = 14; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,3>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1130
      END
      BUDGET.UNITS<1,3> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1130*
      X = 14; Y = 15; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,4>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1135
      END
      BUDGET.AMT<1,4> = VALUE
      GOSUB 1700
*                --------
1135*
      X = 27; Y = 15; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,4>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1140
      END
      BUDGET.UNITS<1,4> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1140*
      X = 14; Y = 16; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,5>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1145
      END
      BUDGET.AMT<1,5> = VALUE
      GOSUB 1700
*                --------
1145*
      X = 27; Y = 16; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,5>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1150
      END
      BUDGET.UNITS<1,5> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1150*
      X = 14; Y = 17; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,6>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1155
      END
      BUDGET.AMT<1,6> = VALUE
      GOSUB 1700
*                --------
1155*
      X = 27; Y = 17; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,6>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1160
      END
      BUDGET.UNITS<1,6> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1160*
      X = 48; Y = 12; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,7>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1165
      END
      BUDGET.AMT<1,7> = VALUE
      GOSUB 1700
*                --------
1165*
      X = 61; Y = 12; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,7>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1170
      END
      BUDGET.UNITS<1,7> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1170*
      X = 48; Y = 13; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,8>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1175
      END
      BUDGET.AMT<1,8> = VALUE
      GOSUB 1700
*                --------
1175*
      X = 61; Y = 13; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,8>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1180
      END
      BUDGET.UNITS<1,8> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1180*
      X = 48; Y = 14; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,9>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1185
      END
      BUDGET.AMT<1,9> = VALUE
      GOSUB 1700
*                --------
1185*
      X = 61; Y = 14; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,9>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1190
      END
      BUDGET.UNITS<1,9> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1190*
      X = 48; Y = 15; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,10>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1195
      END
      BUDGET.AMT<1,10> = VALUE
      GOSUB 1700
*                --------
1195*
      X = 61; Y = 15; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,10>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1200
      END
      BUDGET.UNITS<1,10> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1200*
      X = 48; Y = 16; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,11>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1205
      END
      BUDGET.AMT<1,11> = VALUE
      GOSUB 1700
*                --------
1205*
      X = 61; Y = 16; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,11>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1210
      END
      BUDGET.UNITS<1,11> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1210*
      X = 48; Y = 17; TYP = 3; MAXL = 7; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.AMT<1,12>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1215
      END
      BUDGET.AMT<1,12> = VALUE
      GOSUB 1700
*                --------
1215  
      X = 61; Y = 17; TYP = 3; MAXL = 5; O.R = 'O';JUSTIFY = "R"
      DEFAULT = BUDGET.UNITS<1,12>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      IF VALUE = ""  THEN
         GOTO 1250
      END
      BUDGET.UNITS<1,12> = VALUE
      GOSUB 1700
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
      IF YEAR.RETURN = 'Y' THEN
         YEAR.RETURN = 'N'
         RETURN
      END
*                --------
1250*
      X = 26; Y = SLN; TYP = 1; MAXL = 13 ;JUSTIFY = "R"
      DEFAULT = BUDGET.SALES.AMT<1,LN>
      CALL EDIT.SUB
      IF VALUE = "" OR VALUE = "END" THEN
         IF ACTION = 'A' THEN
            BUDGET.SALES.QTY = DELETE(BUDGET.SALES.QTY,1,LN,0)
            BUDGET.SALES.AMT = DELETE(BUDGET.SALES.AMT,1,LN,0)
         END
         GOTO 1299
      END
      BUDGET.SALES.AMT<1,LN> = VALUE
*                --------
1299*
      GOTO 150
      LINES = COUNT(BUDGET.SALES.PERIOD,VM) + (BUDGET.SALES.PERIOD # "")
      IF LINES > 12 THEN
         MAX.NO.PAGES = INT(LINES/12)
      END ELSE
         MAX.NO.PAGES = 1
      END
      IF LN > 12 THEN
         CUR.PAGE.NO  = INT(LN/12)
         CUR.PAGE.NO  = CUR.PAGE.NO + 1
      END ELSE
         CUR.PAGE.NO  = 1
      END
      ECD.NUM=30;SCV.REC(ECD.NUM)<1>=CUR.PAGE.NO
      ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=31;SCV.REC(ECD.NUM)<1>=MAX.NO.PAGES
      ECD.ACTION=5;CALL SCRN.EDIT
*CRT @(0,23):CL:"location=1299"; INPUT WAIT.FOR.IT
      RETURN
1700*   TOTAL THE YEARS BUDGET FIGURES
      TOTAL.BUDGET.AMT = 0
      TOTAL.BUDGET.UNITS = 0
      FOR N = 1 TO 6
         N6 = N + 6
*CRT @(0,23):CL:"N=":N:"N6=":N6:"BA=":BUDGET.AMT<1,N>; INPUT WAIT.FOR.IT
         TOTAL.BUDGET.AMT = TOTAL.BUDGET.AMT + BUDGET.AMT<1,N>
         TOTAL.BUDGET.AMT = TOTAL.BUDGET.AMT + BUDGET.AMT<1,N6>
         TOTAL.BUDGET.UNITS = TOTAL.BUDGET.UNITS + BUDGET.UNITS<1,N>
         TOTAL.BUDGET.UNITS = TOTAL.BUDGET.UNITS + BUDGET.UNITS<1,N6>
      NEXT N
      ECD.NUM=32;SCV.REC(ECD.NUM)<1>=TOTAL.BUDGET.AMT
      ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=33;SCV.REC(ECD.NUM)<1>=TOTAL.BUDGET.UNITS
      ECD.ACTION=5;CALL SCRN.EDIT
      RETURN
*****************************************************************
1800*
*CRT @(0,23):CL:"location=1800"; INPUT WAIT.FOR.IT
      GOSUB 1900
      ECD.NUM = 31; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
      RETURN
*****************************************************************
1900*
*CRT @(0,23):CL:"location=1900"; INPUT WAIT.FOR.IT
      TOTAL.BUDGET.AMT = 0
      TOTAL.BUDGET.UNITS = 0
      START.LINE = 1
      LAST.LINE = 6
      CNT = 1
      SLN = 12
      FOR N = START.LINE TO LAST.LINE
         N6 = N + 6
         PRINT @(14,SLN): BUDGET.AMT<1,N> "R#07" :
         PRINT @(27,SLN): BUDGET.UNITS<1,N> "R#05" :
         PRINT @(48,SLN): BUDGET.AMT<1,N6> "R#07" :
         PRINT @(61,SLN): BUDGET.UNITS<1,N6> "R#05" :
         SLN = SLN + 1
      NEXT N
      GOSUB 1700
*            FOR M = CNT TO PAGE.SIZE
*               SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
*               PRINT @(0,SLN) : CL :
*            NEXT M
1990  
*CRT @(0,23):CL:"location=1990"; INPUT WAIT.FOR.IT
      RETURN
1999  
*CRT @(0,23):CL:"location=1999"; INPUT WAIT.FOR.IT
      GOTO 99999
*****************************************************************
2000*
      MATWRITE BUDGET.MAINT.REC ON BUDGET.SALES.MAINT.LMG, CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":BR.YEAR
      RETURN
*****************************************************************
30500 ECD.ACTION=3;CALL SCRN.EDIT
      OLD.START.LIN=0;GOSUB 1900
      RETURN
***********************************************
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
   END
**********************************************
**********************************************
**********************************************
**********************************************
