*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB.INQ
*********************** :COPY>CPYLIB>COM.JOB
**************************************************************************
* REVISION    - [09.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      -
* PROGRAM     - BUDGET SALES MAINT
* BY          - DANIEL J. CRONIN; CBA
* DATE        - 09/07/93 * DESCRIPTION - *
*
* THIS PROGRAM BUILDS THE BUDGETS FOR PRODUCT QTY AND SALES. THE
* 'BUDGET.SALES.MAINT' SCREEN IS USED TO INPUT & CHANGE THE PERIOD BUDGET
* INFORMATION.
*
**************************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>SAS.CPYLIB>BUDGET.SALES
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>JCS.CPYLIB>JOB.TOT.REC
*COPY>JCS.CPYLIB>DEPT.TOT.REC
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB.CREDIT.STATS
*COPY>JES.CPYLIB>ESTIMATE
      DIM SAVE.JOB(110)
      DIM SAVE.BUDGET.SALES.REC(4)
      DIM MAIR.REC(225)
      DIM MASTER.REC(110)
      DIM TEMP.REC(110)
      SYS.TYPE=1
      CALL SYSCOM(MAT SYSCOM.REC)
      MAT FILE.VARS=''
      OPEN '','BUDGET.SALES' TO BUDGET.SALES ELSE
         ERRMSG='BUDGET.SALES FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','JOB' TO JOB ELSE
         ERRMSG='JOB FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INVENTORY' TO INVENTORY ELSE
         ERRMSG = 'INVENTORY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
         ERRMSG = 'INVENTORY.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN "","INV.FNGD" TO INV.FNGD ELSE
         ERRMSG = "INV.FNGD"
         GOTO 93000
      END
      OPEN '','CATEGORY' TO CATEGORY ELSE
         ERRMSG = 'CATEGORY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
         ERRMSG = 'WAREHOUSE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE' TO INV.WHSE ELSE
        ERRMSG = 'INV.WHSE IS MISSING'
        GOTO 93000
      END
      OPEN '','CUSTOMER' TO CUSTOMER ELSE
         ERRMSG='CUSTOMER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','COA' TO COA ELSE
         ERRMSG='COA FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE
         ERRMSG='CUSTOMER.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SALESMAN' TO SALESMAN ELSE
         ERRMSG='SALESMAN FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SALESMAN.XREF' TO SALESMAN.XREF ELSE
         ERRMSG='SALESMAN.XREF FILE IS MISSING'
         GOTO 93000
      END
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
         ERRMSG = "XREF.DATA"
         GOTO 93000
      END
      OPEN  '','SAS.SCREENS' TO M.SCREENS ELSE
         ERRMSG= 'SAS.SCREENS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','COMPANY' TO COMPANY ELSE
         ERRMSG='COMPANY FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE' TO INV.WHSE ELSE
         ERRMSG='INV.WHSE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
         ERRMSG='INV.WHSE.LOC FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.STATS' TO INV.STATS ELSE
         ERRMSG='INV.STATS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
         ERRMSG='INV.JOB.STATS FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','PREFIX' TO PREFIX ELSE
         ERRMSG='PREFIX FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CONTROL' TO CONTROL ELSE
         ERRMSG='CONTROL FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SECURITY' TO SECURITY ELSE
         ERRMSG='SECURITY FILE IS MISSING'
         GOTO 93000
      END
      CONO="";MAT COMP.REC=''
      CALL GET.CONO(CONO,MAT COMP.REC)
      IF CONO='END' THEN GOTO 99999
      DIM EST.PAR(10)
      MAT EST.PAR=""
      MAT INV.REC = ''
      MAT CATG.REC = ""
      MAT SCV.REC = ""
      PROG.FLAG="M"
      PTR=''
      MAX.NO.PAGES = 1
      MAT EDIT.COM.DRIVER=''
      MAT FISCAL.REC = ""
      MAT SALESDATES.REC = ""
      MAT SAVE.BUDGET.SALES.REC = ""
      MAT BUDGET.SALES.REC = ""
      MAT EDIT.COM = ''
      TYP = 0; CALL EDIT.SUB; FILL = "#"
      MAT GEN.XREF.REC=''
      DASHES=STR('-',80)
      ERRMSG="";UNKNOWN=STR("?",20)
      PCB.MODE=''
      FIELDS.ACC=""
      FIELDS.ACC1=""
      FIELDS.ACC2=""
      FIELDS.ACC1<1,1>=8
      FIELDS.ACC1<1,2>=9
      FIELDS.ACC1<1,3>=10
      FIELDS.ACC1<1,4>=14
      FIELDS.ACC1<1,5>=16
      FIELDS.ACC1<1,6>=17
      FIELDS.ACC1<1,7>=19
      FIELDS.ACC1<1,8>=20
      FIELDS.ACC1<1,9>=22
      FIELDS.ACC2<1,1>=10
      FIELDS.ACC2<1,2>=16
      FIELDS.ACC2<1,3>=17
      FIELDS.ACC2<1,4>=22
      FIELDS.ACC2<1,5>=1
*PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
*PORT.NO = SYSTEM(18)
      PORT.NO = 'TTY'; CALL SYSVARS.SUB(PORT.NO)
*PORT.NO = PORT.NO[INDEX(PORT.NO,"/",1)+4,99]
*     IND.POS = INDEX(PORT.NO,'/',1)
*     IF IND.POS = 0 THEN
*        PORT.NO = PORT.NO[4,(LEN(PORT.NO)-3)]
*     END ELSE
*        PORT.NO = PORT.NO[4,IND.POS-4]
*     END
      READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "???"
      OPER.ID = PORT.NO : "!" : OPER.ID
      TODAY = DATE()
      GXR.CO=CONO
      BEGIN.PAGE = 8; PAGE.SIZE = 12; LINE.SPACE = 1
      ECD.SCRN.CNT=1
      ECD.SCRN.NAME<1>='BUDGET.SALES.MAINT'
      ECD.ACTION=1;CALL SCRN.EDIT
      ECD.SCRN.NO=1
      OLD.START.LIN=0
100*
*********************************************************************
*  THE FOLLOWING FOUR FIELDS ARE THE KEY TO THE BUDGET.SALES RECORD *
*  PRECEEDED BY CONO. THE LEVEL FIELD DETERMINES THE STRUCTURE OF   *
*  KEY. LEVEL 0  MEANS ALL PRODUCTS AND WAREHOUSES. LEVEL 1 IS BY   *
*  PRODUCT AND LEVEL 2 IS BY PRODUCT AND WAREHOUSE                  *
*********************************************************************
      CUST=''
      SALESPERSON=''
      PROD.NUM=''
      WHOUSE=''
      LEVEL=''
      ESN=1
      NEW.REC='N'
      BUILD.BUDGET.REC='Y'
      BUDGET.REC.SAVED='N'
      MAT BUDGET.SALES.REC=''
      MAT SAVE.BUDGET.SALES.REC = ""
      MAT JOB.REC=''
      MAT SALESMAN.REC=''
      OLD.CUST=''
      OLD.MASTER=''
      OLD.EST=''
      LN=1;LINES=0;SLINES=0
      INQUIRE = 0
      VAIL = ''
      SAVE.INV.JS.REC = ''
      MASTER.CUST=""
      COMPLETE.DATE = ""
      FLG="O"
      PREV.CRED.AUTH = ''
      LN = 1; LINES = 0
      OLD.START.LINE=0
      WAIT.FOR.IT=''
      BEGIN.PAGE = 8; PAGE.SIZE = 12; LINE.SPACE = 1
      MAT SCV.REC = ""
      ECD.ACTION = 6; CALL SCRN.EDIT
      MATREAD FISCAL.REC FROM CONTROL , CONO:"JCFISCAL" ELSE
         ERRMSG = "CONTROL FISCAL IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
*FR.CURR.PER<1> = '199201';*This is used to test the closing routines
      YEAR = FR.CURR.PER<1>[1,4]
      CURR = FR.CURR.PER<1>[5,2]
 *CRT @(0,23):"PERIOD=":FR.CURR.PER<1>;INPUT WAIT.FOR.IT
      READ DATES.REC FROM CONTROL , CONO:"OPENDATES" ELSE
         ERRMSG = "CONTROL OPENDATES IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
      MATREAD SALESDATES.REC FROM CONTROL , CONO:"SALESDATES" ELSE
         ERRMSG = "CONTROL SALESDATES IS NOT ON FILE"; GOSUB 91000; GOTO 99999
      END
150*
      BUILD.BUDGET.REC='Y'
      PRT.DATA='Y'
      START.OVER='N'
      GOSUB 200   ;* FUNCTION IS FOR CUSTOMER OR SALESMAN
      GOSUB 400   ;* FUNCTION IS FOR LEVEL, PRODUCT, AND WAREHOUSE
      GOSUB 780   ;* FUNCTION IS FOR BUDGET YEAR
      GOSUB 800   ;* FUNCTION GETS BUDGET.SALES RECORD
      IF START.OVER='Y' THEN GOTO 100
      GOSUB 1000  ;* FUNCTION IS FOR BUDGET DETAIL BY PERIOD
      GOTO 100
      GOTO 99999
*********************************************************************
* THIS SUBROUTINE HANDLES THE INPUT OF THE CUSTOMER NUMBER VIA A    *
* A NUMBER OR A NAME. IF ZEROS ARE ENTERED THEN THE SYSTEM ASSUMES  *
* THE BUDGET INFORMATION WILL BE FOR A SALESPERSON OR IF THE USER   *
* SKIPS OVER CUSTOMER AND CUSTOMER NAME THE SYSTEM ASSUMES THE      *
* BUDGET INFORMATION IS FOR A SALESMAN                              *
*********************************************************************
200*
      ECD.ACTION=6;CALL SCRN.EDIT
      ECD.NUM=10
      ECD.VALDAT.CODE=1;ECD.VALDAT.FILE=CUSTOMER;ECD.PREFIX.ID=CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      CUST = ECD.RET.VALUE
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = "000000"
         GOSUB 300 ;* ENTERING BUDGET INFO. FOR SALESMAN
         GOTO 299
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
         ECD.NUM=11;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE='END'  THEN GOTO 99999
         IF ECD.RET.VALUE=''  THEN GOSUB 300; GOTO 299
         GXR.NAME='CUSTOMER'
         GXR.XREF=CUSTOMER.XREF
         GXR.FILE=CUSTOMER
         GXR.ID=''
         GXR.SRCH.ID=ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX, XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN
            SCV.REC(10)<1> = ""; GOTO 100
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
               ERRMSG='CUSTOMER ':GXR.ID:' IS MISSING';GOSUB 91000
               SCV.REC(10)<1> = ""; GOTO 200
            END
            SCV.REC(10)<1>=GXR.ID
            SCV.REC(11)<1>=CUST.NAME
            CUST=GXR.ID
            ECD.ACTION=3;CALL SCRN.EDIT
         END
      CASE ECD.RET.VALUE#'' AND ECD.VALDAT.ITEM=''
         GOTO 200
      CASE 1
         IF ECD.RET.VALUE # 'END' THEN
            GXR.ID=ECD.RET.VALUE
            FOR I=1 TO CUST.REC.SIZE;CUST.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=CUST.NAME
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      END CASE
      ECD.NUM=17;SCV.REC(ECD.NUM)<1>='000'
      ECD.ACTION=5;CALL SCRN.EDIT
      SALESPERSON = '000'
299   RETURN
*****************************************************************
*    INPUT SALESMAN INFO                                        *
*****************************************************************
300   ECD.NUM=10;SCV.REC(ECD.NUM)<1>='000000'
      ECD.ACTION=5;CALL SCRN.EDIT
      CUST = '000000'
      ECD.NUM=17
      ECD.VALDAT.CODE=1;ECD.VALDAT.FILE=SALESMAN;ECD.PREFIX.ID=CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = '???' THEN GOSUB 310; GOTO 399
      IF ECD.RET.VALUE = '000' THEN  SALESPERSON = '000'; GOTO 399
      IF ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM='' THEN  GOTO 300
      IF ECD.RET.VALUE = '' THEN GOSUB 310; GOTO 399
      IF ECD.RET.VALUE # 'END' THEN
         SALESPERSON = ECD.RET.VALUE
         FOR I=1 TO SALESMAN.REC.SIZE;SALESMAN.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
         ECD.NUM=11;SCV.REC(ECD.NUM)<1>=SALS.NAME
         ECD.ACTION=5;CALL SCRN.EDIT
      END
      GOTO 399
*****************************************************************
310*
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???" THEN
         GXR.NAME = "SALESMAN2"
         GXR.SORT.FILE = "SALESMAN"; GXR.FILE = SALESMAN
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            ECD.RET.VALUE = ""
            GOTO 200
         END ELSE
            MATREAD SALESMAN.REC FROM SALESMAN , CONO:GXR.ID ELSE
               ERRMSG = "Salesrep (":GXR.ID:") not on file" ;GOSUB 91000
               NEW.ITEM = 1
               GXR.ID = "" ; GOTO 300
            END
            SALESPERSON = GXR.ID
            ECD.NUM=10;SCV.REC(ECD.NUM)<1>='000000'
            ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=17;SCV.REC(ECD.NUM)<1>=GXR.ID
            ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=SALS.NAME
            ECD.ACTION=5;CALL SCRN.EDIT
         END
    END
399      RETURN
*****************************************************************
*     DETERMINE THE LEVEL THE BUDGET IS ENTERED FOR             *
*****************************************************************
400*        
            ECD.NUM=12
            ECD.ACTION=4;CALL SCRN.EDIT
            LEVEL=ECD.RET.VALUE
            BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GO 150
            CASE ECD.RET.VALUE='0'
               GOSUB 500           ;* FOR ALL PRODUCTS AND WAREHOUSES
            CASE ECD.RET.VALUE='1'
               GOSUB 600           ;* FOR A PRODUCT
            CASE ECD.RET.VALUE='2'
               GOSUB 700           ;* FOR A PRODUCT AND WAREHOUSE
            END CASE
499         RETURN
*****************************************************************
500*
            PROD.NUM='000000000000000'
*ECD.NUM=14;SCV.REC(ECD.NUM)<1>=PROD.NUM
*ECD.ACTION=5;CALL SCRN.EDIT
            WHOUSE='0000'
*ECD.NUM=15;SCV.REC(ECD.NUM)<1>=WHOUSE
*ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=16;SCV.REC(ECD.NUM)<1>="ALL PRODUCTS AND WAREHOUSES"
            ECD.ACTION=5;CALL SCRN.EDIT
599         RETURN
*****************************************************************
600*       GET PRODUCT LINE
*****************************************************************
            WHOUSE='0000'
*
**** ENTER PRODUCT NUMBER
*
610*
            ECD.NUM = 14
            ECD.VALDAT.CODE = '5'
            ECD.VALDAT.FILE = CATEGORY
            ECD.PREFIX.ID = CONO
            ECD.ACTION=4;CALL SCRN.EDIT
            PROD.NUM = ECD.RET.VALUE
            OLD.NAME = ''
            BEGIN CASE
            CASE ECD.RET.VALUE = 'END'
               GOTO 150
            CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
               STATUS = '0'
               FOR I = 1 TO CATG.REC.SIZE
                  CATG.REC(I) = ECD.VALDAT.ITEM<I>
               NEXT I
               *IF INV.M.LINE# 'FNGD' THEN
                  *ERRMSG = 'THIS PRODUCT IS NOT A FINISHED GOODS PRODUCT'
                  *GOSUB 91000
                  *GOTO 610
               *END
               OLD.NAME = CATG.DESC
               ECD.ACTION=3;CALL SCRN.EDIT
               ECD.NUM=16;SCV.REC(ECD.NUM)<1>=CATG.DESC
               ECD.ACTION=5;CALL SCRN.EDIT
            CASE ECD.RET.VALUE = ""
               ECD.NUM = 16; ECD.O.R = "O"
               ECD.ACTION = 4; CALL SCRN.EDIT
               IF ECD.RET.VALUE = "" THEN GOTO 610
               IF ECD.RET.VALUE = "END" THEN GOTO 150
               MAT GEN.XREF.REC=''
               GXR.ID = ""
               GXR.CO = CONO
               GXR.SORT.FILE = "CATEGORY"
               GXR.NAME = "CATEGORY.DESC"
               GXR.XREF = ''
               GXR.FILE = CATEGORY
               GXR.SRCH.ID = ''
               GXR.VALUE1 = ECD.RET.VALUE
               CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
               ECD.ACTION = 2; CALL SCRN.EDIT
               ECD.ACTION = 3; CALL SCRN.EDIT
               SCV.REC(16)<ESN> = ""
               IF GXR.ID = "" THEN
                  ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 610
               END ELSE
                  MATREADU CATG.REC FROM CATEGORY, CONO:GXR.ID ELSE
                     RELEASE CATEGORY, CONO:GXR.ID
                     ERRMSG = "Cannot locate Category  ":GXR.ID
                     GOSUB 91000
                     ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 610
                  END
                  *MATREADU IOF.REC FROM INV.FNGD, CONO:GXR.ID ELSE
                     *MAT IOF.REC = ""
                  *END
                  NEWREC = 0
                  PROD.NUM = GXR.ID
                  ECD.NUM=16;SCV.REC(ECD.NUM)<1>=CATG.DESC
                  ECD.ACTION=5;CALL SCRN.EDIT
                  ECD.NUM=14;SCV.REC(14)<1> = PROD.NUM
                  ECD.ACTION=5;CALL SCRN.EDIT
               END
            CASE 1
               PROD.NUM = ECD.RET.VALUE
               MATREADU CATG.REC FROM CATEGORY, CONO:PROD.NUM ELSE
                  MAT IOF.REC = ""
               END
            END CASE
*CRT @(0,23) : "PROD NUMB=":PROD.NUM;INPUT WAIT.FOR.IT
            IF PROD.NUM='000000000000000' THEN GOTO 610
            IF PROD.NUM='' THEN GOTO 610
699         RETURN
**************************************************************
700*      GET WAREHOUSE CODE
**************************************************************
            GOSUB 610 ;* GETS PRODUCT INFORMATION
            GOSUB 777 ;* WAREHOUSE XREF ROUTINE
            GOTO 779
*---- Warehouse
777*
            ECD.NUM = 15; SCV.REC(ECD.NUM)<ESN> = ""
            ECD.VALDAT.CODE = '5'
            ECD.VALDAT.FILE = WAREHOUSE
            ECD.PREFIX.ID = CONO
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "" THEN GOTO 777
            IF ECD.RET.VALUE = "END" THEN GOTO 150
            IF ECD.RET.VALUE = "???" THEN
               MAT GEN.XREF.REC=''
               GXR.CO = CONO
               GXR.SORT.FILE = "WAREHOUSE"
               GXR.ID = ''
               GXR.HEADING = 'SELECT WAREHOUSE'
               GXR.NAME = "GEN.CODE1"
               GXR.FILE = WAREHOUSE
               GXR.XREF = ''
               GXR.SRCH.ID = ''
               CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
               ECD.ACTION = 2; CALL SCRN.EDIT
               IF GXR.ID = "" THEN
                  ECD.ACTION = 3; CALL SCRN.EDIT
                  GOTO 777
               END ELSE
                  ECD.RET.VALUE = GXR.ID
                  SCV.REC(15)<ESN> = GXR.ID
                  ECD.ACTION = 3; CALL SCRN.EDIT
               END
            END
            *MATREAD IWH.REC FROM INV.WHSE, CONO:PROD.NUM:'!':ECD.RET.VALUE ELSE
               *ERRMSG = "NOT ON FILE"
               *GOSUB 91000
               *GOTO 777
            *END
            WHOUSE = ECD.RET.VALUE
            IF WHOUSE='0000' THEN GOTO 777
            IF WHOUSE='' THEN GOTO 777
            RETURN
779         RETURN
**************************************************************
780*       GET BUDGET YEAR
**************************************************************
      SCV.REC(08)<ESN> = YEAR
      ECD.ACTION = 3; CALL SCRN.EDIT
      ECD.NUM=08
      ECD.ACTION=4;CALL SCRN.EDIT
      BR.YEAR=ECD.RET.VALUE
      BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 150
      CASE ECD.RET.VALUE < YEAR
         ERRMSG = "YEAR cannot be less than current fiscal year"
         GOSUB 91000
         GOTO 780
      CASE ECD.RET.VALUE > (YEAR + 1)
         ERRMSG = "YEAR cannot be greater than 1 years from the fiscal year"
         GOSUB 91000
         GOTO 780
      END CASE
      GET.YEAR = BR.YEAR
      RETURN

**************************************************************
800*       GET BUDGET SALES RECORD
**************************************************************
            MAT BUDGET.SALES.REC=''
            GET.BUDGET.SALES.REC='Y'
            IGNORE.ERROR.MSG='N'
            MATREADU BUDGET.SALES.REC FROM BUDGET.SALES, CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":WHOUSE:"_":BR.YEAR ELSE
               IF BUILD.BUDGET.REC='Y' THEN
                  GET.BUDGET.SALES.REC='N'
                  X = 0; Y = 23; TYP = 8; MAXL = 1
                  PMSG = 'Budget.sales record not found; Do you wish to add? Y/N.'
                  CALL EDIT.SUB
                  PRINT @(0,23) : CL :
                  IF VALUE = "N" THEN
                     START.OVER='Y'
                  END ELSE 
                     NEW.REC='Y'
                     GOSUB 3000
                     GOSUB 1900
                     PERIOD.RETURN = 'N'
                     IGNORE.ERROR.MSG='Y'
                     GOSUB 1100
                     IGNORE.ERROR.MSG='N'
                     START.OVER='N'
                  END
               END ELSE
                   GOTO 899
               END
            END
            IF GET.BUDGET.SALES.REC='Y'  THEN GOSUB 1900
            BUILD.BUDGET.REC='Y'
            LINES = COUNT(BUDGET.SALES.PERIOD,VM) + (BUDGET.SALES.PERIOD # "")
899         RETURN
**************************************************************
1000*   BUDGET PERIOD ROUTINE                                *
**************************************************************
         CUR.PAGE.NO = 1
         SAVE.CURR.PER=FR.CURR.PER<1>
         SAVE.CURR.PER<1>[5,2]='01'
      LOOP
         ANCORE = 1
         IF NEW.REC='Y' THEN
            ECD.NUM=41
           END ELSE
            ECD.NUM=40
         END
         SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
         ACTION = ECD.RET.VALUE
         BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            ANCORE = 0
         CASE ACTION = 'F'
            NEW.REC='N'
            GOSUB 2000
            ANCORE = 0
         CASE ACTION >= 1  AND ACTION =< 12
            ANCORE = 1
            NEW.REC='Y'
               PERIOD.RETURN = 'Y'
               IF ACTION = 1 THEN
                  GOSUB 1100
               END
               IF ACTION = 2 THEN
                  GOSUB 1110
               END
               IF ACTION = 3 THEN
                  GOSUB 1120
               END
               IF ACTION = 4 THEN
                  GOSUB 1130
               END
               IF ACTION = 5 THEN
                  GOSUB 1140
               END
               IF ACTION = 6 THEN
                  GOSUB 1150
               END
               IF ACTION = 7 THEN
                  GOSUB 1160
               END
               IF ACTION = 8 THEN
                  GOSUB 1170
               END
               IF ACTION = 9 THEN
                  GOSUB 1180
               END
               IF ACTION = 10 THEN
                  GOSUB 1190
               END
               IF ACTION = 11 THEN
                  GOSUB 1200
               END
               IF ACTION = 12 THEN
                  GOSUB 1210
               END
            CASE ACTION = 'S'
              IF NEW.REC='N' THEN
                 DO.FUNCTION.1900='Y'
                 BR.YEAR = BR.YEAR + 1
                 MATREADU BUDGET.SALES.REC FROM BUDGET.SALES, CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":WHOUSE:"_":BR.YEAR ELSE
                     BR.YEAR = YEAR
                     BUILD.BUDGET.REC='N'
                     GOSUB 800 
                     BUILD.BUDGET.REC='Y'
                     DO.FUNCTION.1900='N'
                  END
                 IF DO.FUNCTION.1900='Y' THEN
                    GOSUB 1900
                 END
               END ELSE
                 ANCORE = 1
               END 
         END CASE
      WHILE ANCORE DO REPEAT
      NEW.REC='N'
      RETURN
1100*
      BUILD.YEAR.PERIOD = BR.YEAR:'01'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1106
      END
      X = 14; Y = 08; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,1>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1105
      *END
      BUDGET.SALES.QTY<1,1> = VALUE
      GOSUB 1700
*                --------
1105*
      X = 26; Y = 08; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,1>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1106
      *END
      BUDGET.SALES.AMT<1,1> = VALUE
      GOSUB 1700
1106*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1110*
      BUILD.YEAR.PERIOD = BR.YEAR:'02'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1116
      END
      X = 14; Y = 09; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,2>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1115
      *END
      BUDGET.SALES.QTY<1,2> = VALUE
      GOSUB 1700
*                --------
1115*
      X = 26; Y = 09; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,2>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1116
      *END
      BUDGET.SALES.AMT<1,2> = VALUE
      GOSUB 1700
1116*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1120*
      BUILD.YEAR.PERIOD = BR.YEAR:'03'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1126
      END
      X = 14; Y = 10; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,3>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1125
      *END
      BUDGET.SALES.QTY<1,3> = VALUE
      GOSUB 1700
*                --------
1125*
      X = 26; Y = 10; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,3>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1126
      *END
      BUDGET.SALES.AMT<1,3> = VALUE
      GOSUB 1700
1126*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1130*
      BUILD.YEAR.PERIOD = BR.YEAR:'04'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1136
      END
      X = 14; Y = 11; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,4>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1135
      *END
      BUDGET.SALES.QTY<1,4> = VALUE
      GOSUB 1700
*                --------
1135*
      X = 26; Y = 11; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,4>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1136
      *END
      BUDGET.SALES.AMT<1,4> = VALUE
      GOSUB 1700
1136*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1140*
      BUILD.YEAR.PERIOD = BR.YEAR:'05'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1146
      END
      X = 14; Y = 12; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,5>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1145
      *END
      BUDGET.SALES.QTY<1,5> = VALUE
      GOSUB 1700
*                --------
1145*
      X = 26; Y = 12; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,5>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1146
      *END
      BUDGET.SALES.AMT<1,5> = VALUE
      GOSUB 1700
1146*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1150*
      BUILD.YEAR.PERIOD = BR.YEAR:'06'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1156
      END
      X = 14; Y = 13; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,6>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1155
      *END
      BUDGET.SALES.QTY<1,6> = VALUE
      GOSUB 1700
*                --------
1155*
      X = 26; Y = 13; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,6>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1156
      *END
      BUDGET.SALES.AMT<1,6> = VALUE
      GOSUB 1700
1156*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1160*
      BUILD.YEAR.PERIOD = BR.YEAR:'07'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1166
      END
      X = 14; Y = 14; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,7>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1165
      *END
      BUDGET.SALES.QTY<1,7> = VALUE
      GOSUB 1700
*                --------
1165*
      X = 26; Y = 14; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,7>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1166
      *END
      BUDGET.SALES.AMT<1,7> = VALUE
      GOSUB 1700
1166*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1170*
      BUILD.YEAR.PERIOD = BR.YEAR:'08'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1176
      END
      X = 14; Y = 15; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,8>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1175
      *END
      BUDGET.SALES.QTY<1,8> = VALUE
      GOSUB 1700
*                --------
1175*
      X = 26; Y = 15; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,8>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1176
      *END
      BUDGET.SALES.AMT<1,8> = VALUE
      GOSUB 1700
1176*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1180*
      BUILD.YEAR.PERIOD = BR.YEAR:'09'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1186
      END
      X = 14; Y = 16; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,9>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1185
      *END
      BUDGET.SALES.QTY<1,9> = VALUE
      GOSUB 1700
*                --------
1185*
      X = 26; Y = 16; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,9>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1186
      *END
      BUDGET.SALES.AMT<1,9> = VALUE
      GOSUB 1700
1186*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1190*
      BUILD.YEAR.PERIOD = BR.YEAR:'10'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1196
      END
      X = 14; Y = 17; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,10>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1195
      *END
      BUDGET.SALES.QTY<1,10> = VALUE
      GOSUB 1700
*                --------
1195*
      X = 26; Y = 17; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,10>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1196
      *END
      BUDGET.SALES.AMT<1,10> = VALUE
      GOSUB 1700
1196*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1200*
      BUILD.YEAR.PERIOD = BR.YEAR:'11'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1206
      END
      X = 14; Y = 18; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,11>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1205
      *END
      BUDGET.SALES.QTY<1,11> = VALUE
      GOSUB 1700
*                --------
1205*
      X = 26; Y = 18; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,11>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1206
      *END
      BUDGET.SALES.AMT<1,11> = VALUE
      GOSUB 1700
1206*
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
*                --------
1210*
      BUILD.YEAR.PERIOD = BR.YEAR:'12'
 *CRT @(0,23):"PERIOD=":BUILD.YEAR.PERIOD;INPUT WAIT.FOR.IT
      IF BUILD.YEAR.PERIOD < FR.CURR.PER<1> THEN
         IF IGNORE.ERROR.MSG='N' THEN
            ERRMSG = "YEAR/PERIOD cannot be less than current fiscal year/period"
            GOSUB 91000
         END
         GOTO 1216
      END
      X = 14; Y = 19; TYP = 3; MAXL = 11; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget Quantity"
      DEFAULT = BUDGET.SALES.QTY<1,12>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1215
      *END
      BUDGET.SALES.QTY<1,12> = VALUE
      GOSUB 1700
*                --------
1215  
      X = 26; Y = 19; TYP = 3; MAXL = 13; O.R = 'O';JUSTIFY = "R"
      HMSG="Enter a Budget amount in Dollars"
      DEFAULT = BUDGET.SALES.AMT<1,12>
      CALL EDIT.SUB
      IF VALUE = "END" THEN
         GOTO 1299
      END
      *IF VALUE = ""  THEN
         *GOTO 1216
      *END
      BUDGET.SALES.AMT<1,12> = VALUE
      GOSUB 1700
1216  
      IF PERIOD.RETURN = 'Y' THEN
         PERIOD.RETURN = 'N'
         RETURN
      END
      *IF YEAR.RETURN = 'Y' THEN
         *YEAR.RETURN = 'N'
         *RETURN
      *END
*                --------
1250*
      RETURN
*                --------
1299*
      RETURN
********************************************************************
1700*   TOTAL THE YEARS BUDGET FIGURES
******************************************************************** 
      *TOTAL.BUDGET.AMT = 0
      *TOTAL.BUDGET.UNITS = 0
      *FOR N = 1 TO 12
         *TOTAL.BUDGET.AMT = TOTAL.BUDGET.AMT + BUDGET.AMT<1,N>
         *TOTAL.BUDGET.UNITS = TOTAL.BUDGET.UNITS + BUDGET.UNITS<1,N>
      *NEXT N
      *ECD.NUM=32;SCV.REC(ECD.NUM)<1>=TOTAL.BUDGET.AMT
      *ECD.ACTION=5;CALL SCRN.EDIT
      *ECD.NUM=33;SCV.REC(ECD.NUM)<1>=TOTAL.BUDGET.UNITS
      *ECD.ACTION=5;CALL SCRN.EDIT
      RETURN
*****************************************************************
1900*    PRINT THE 12 MONTH BUDGET FIGURES
*****************************************************************
      PRINT @(15,4): BR.YEAR "R#04" :
      TOTAL.BUDGET.AMT = 0
      TOTAL.BUDGET.UNITS = 0
      START.LINE = 1
      LAST.LINE = 12
      CNT = 1
      SLN = 8
      FOR N = START.LINE TO LAST.LINE
         PRINT @(00,SLN): N "R#02" :
         PRINT @(03,SLN): BUDGET.SALES.PERIOD<1,N> "L#06" :
         PRINT @(10,SLN): BUDGET.SALES.MONTH<1,N> "L#03" :
         PRINT @(14,SLN): BUDGET.SALES.QTY<1,N> "R#11" :
         PRINT @(26,SLN): BUDGET.SALES.AMT<1,N> "R#13" :
         SLN = SLN + 1
      NEXT N
*     GOSUB 1700
1990  
      RETURN
*****************************************************************
2000*   WRITE THE BUDGET RECORD
******************************************************************
      MATWRITE BUDGET.SALES.REC ON BUDGET.SALES, CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":WHOUSE:"_":BR.YEAR
      RETURN
******************************************************************
3000*  BUILD THE PERIOD DATA
******************************************************************
*CRT @(0,23):CL:"location=3000"; INPUT WAIT.FOR.IT
            PRT.DATA='Y'
            NEW.REC='Y'
            VALUE = BR.YEAR
            SAVE.PERIOD = VALUE
            SAVE.PERIOD[5,2]='01' ;* THIS IS TO SEARCH FOR THE FIRST PERIOD
            *SAVE.PERIOD = VALUE
            *IF VALUE < FR.CURR.PER<1> THEN
               *ERRMSG = "Cannot enter a CLOSED PERIOD!."
               *GOSUB 91000
               *GOTO 3000
            *END
            BUDGET.YEARS = SAVE.PERIOD[1,4] - YEAR
            *IF BUDGET.YEARS > 1 THEN
               *ERRMSG = "Cannot enter a PERIOD GREATER THAN TWO YEARS AHEAD!."
               *GOSUB 91000
               *GOTO 3000
            *END
3100*
*CRT @(0,23):CL:"location=3100"; INPUT WAIT.FOR.IT
            *NO.PERIODS = COUNT(BUDGET.SALES.PERIOD,VM) + (BUDGET.SALES.PERIOD # "")
            BEGIN.LINE = 1
            END.LINE = 12
            MNTH = 01
            PER  = 0
            FOR N = BEGIN.LINE TO END.LINE
               BUDGET.SALES.PERIOD<1,N> = SAVE.PERIOD
               PER = PER + 01
               BEGIN CASE
               CASE PER = 01
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '01'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.01<1,2>
               CASE PER = 02
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '02'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.02<1,2>
               CASE PER = 03
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '03'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.03<1,2>
               CASE PER = 04
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '04'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.04<1,2>
               CASE PER = 05
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '05'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.05<1,2>
               CASE PER = 06
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '06'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.06<1,2>
               CASE PER = 07
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '07'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.07<1,2>
               CASE PER = 08
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '08'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.08<1,2>
               CASE PER = 09
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '09'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.09<1,2>
               CASE PER = 10
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '10'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.10<1,2>
               CASE PER = 11
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '11'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.11<1,2>
               CASE PER = 12
                  BUDGET.SALES.PERIOD<1,N>[5,2] = '12'
                  BUDGET.SALES.MONTH<1,N> = SALD.PER.12<1,2>
               END CASE
               SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
               IF PRT.DATA='Y' THEN
                  PRINT @(00,SLN): N "R#2" :
                  PRINT @(03,SLN): BUDGET.SALES.PERIOD<1,N> "L#06" :
                  PRINT @(10,SLN): BUDGET.SALES.MONTH<1,N> "L#03" :
               END
            NEXT N
3999        RETURN
*****************************************************************
30500 ECD.ACTION=3;CALL SCRN.EDIT
      OLD.START.LIN=0;GOSUB 1900
      RETURN
***********************************************
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
   END
**********************************************
**********************************************
*************** EOP **************************
**********************************************
**********************************************
