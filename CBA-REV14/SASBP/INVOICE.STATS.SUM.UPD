*********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - INVOICE.STATS.SUM.UPD
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/21/85
*
* DESCRIPTION
*
* This program will summarize the items selected from the JOB.SALES.STATS
* file into the JOB.STATS.SUM file for summary reporting.
*
*T26493 cmykleb 03/26/2002 * Change proc to use REPORT.SCRN 
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>INVOICE.SALES.STATS
*COPY>PMC.CPYLIB>JOB.STATS.SUM
*COPY>SAS.CPYLIB>BUDGET.SALES
*COPY>CPYLIB>CHAR
*
*---- GET PARAMETERS
*
      PROCREAD PARAM ELSE
         ERRMSG = "MUST EXECUTE FROM A PROC"
         GOSUB 90000
         STOP
      END
*T26493 v
*     TYPE = PARAM<5>
      TYPE = PARAM<9>
      PERIOD = PARAM<4>
      IF PERIOD = 'ALL' THEN PERIOD = PARAM<6>
*T26493 ^
      BEGIN CASE
         CASE TYPE = "CUST"
         CASE TYPE = "SLSM"
         CASE TYPE = "BCUST"
         CASE TYPE = "BSLSM"
         CASE TYPE = "CAT"
         CASE TYPE = "CATOPS"
         CASE TYPE = "SCD"
*T26493 v
*           MASK = PARAM<6>
            MASK = PARAM<3>
*T26493 ^
            MASK.LEN = LEN(MASK)
            ERR = 0
            FOR M = 1 TO MASK.LEN UNTIL ERR
               IF MASK[M,1] # "X" AND MASK[M,1] # "." THEN ERR = 1
            NEXT M
            IF ERR THEN
               ERRMSG = 'INVALID MASK - VALID ENTRIES MUST CONTAIN ONLY "X" AND "."'
               GOSUB 90000
               STOP
            END
         CASE TYPE = "PRESS"
         CASE TYPE = "COLOR"
         CASE TYPE = "PROD"
         CASE TYPE = "WHSE"
         CASE TYPE = "STATE"
         CASE 1
            ERRMSG = "INVALID TYPE - ":TYPE
            GOSUB 90000
            STOP
      END CASE
*
*---- OPEN ALL FILES
*
      OPEN "","INVOICE.SALES.STATS" TO INVOICE.SALES.STATS ELSE
         ERRMSG = "CANNOT OPEN INVOICE.SALES.STATS FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","JOB.STATS.SUM" TO JOB.STATS.SUM ELSE
         ERRMSG = "CANNOT OPEN JOB.STATS.SUM FILE"
         GOSUB 90000
         STOP
      END
      OPEN '','BUDGET.SALES' TO BUDGET.SALES ELSE
         ERRMSG='BUDGET.SALES FILE IS MISSING'
         GOTO 90000
      END
*
*---- INITIALIZATION
*
      MAT JSX.REC = ""
      PRIOR.ID = ""
*
*---- MAIN PROCESSING
*
100*
      READNEXT ISS.KEY ELSE
         IF PRIOR.ID # "" THEN
             MATWRITE JSX.REC ON JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID
         END
         STOP
      END
      CONO = ISS.KEY[1,3]
      PROD.NO = FIELD(ISS.KEY,"_",5)
      WHSE.NO = FIELD(ISS.KEY,"_",6)
      PROD.WHSE = PROD.NO:"*":WHSE.NO
      MATREAD ISS.REC FROM INVOICE.SALES.STATS, ISS.KEY ELSE GOTO 100
      BEGIN CASE
         CASE TYPE = "CUST"
            IF ISS.CUST.ID = "" THEN ISS.CUST.ID = "??????"
            IF ISS.CUST.ID # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.CUST.ID
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "SLSM"
            IF ISS.SLSM.ID = "" THEN ISS.SLSM.ID = "???"
            IF ISS.SLSM.ID # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.SLSM.ID
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "BCUST"
            SALESPERSON='000'
            IF ISS.CUST.ID = "" THEN ISS.CUST.ID = "??????"
            IF ISS.CUST.ID # PRIOR.ID THEN
               CUST = ISS.CUST.ID
               GOSUB 2000  ;* GET BUDGET DATA
               GOSUB 3000
               PRIOR.ID = ISS.CUST.ID
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "BSLSM"
            CUST = "000000"
            IF ISS.SLSM.ID = "" THEN ISS.SLSM.ID = "???"
            IF ISS.SLSM.ID # PRIOR.ID THEN
               SALESPERSON= ISS.SLSM.ID
               GOSUB 2000  ;* GET BUDGET DATA
               GOSUB 3000
               PRIOR.ID = ISS.SLSM.ID
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "PROD"
            IF PROD.NO = "" THEN PROD.NO = "???"
            IF PROD.NO # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = PROD.NO
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "WHSE"
            IF PROD.WHSE = "" THEN PROD.WHSE = "???"
            IF PROD.WHSE # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = PROD.WHSE
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "STATE"
            IF ISS.CUST.STATE = "" THEN ISS.CUST.STATE = "???"
            IF ISS.CUST.STATE # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.CUST.STATE
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "CAT"
            IF ISS.JOB.CAT = "" THEN ISS.JOB.CAT = "???"
            IF ISS.JOB.CAT # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.JOB.CAT
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "CATOPS"
            IF ISS.PROD.LINE = "" THEN ISS.PROD.LINE = "???"
            IF ISS.PROD.LINE # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.PROD.LINE
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "SCD"
            IF ISS.SALES.CODE = "" THEN
               IF MASK.LEN = 0 THEN
                  ISS.SALES.CODE = "???"
               END ELSE
                  ISS.SALES.CODE = STR("?",MASK.LEN)
               END
            END
            SCODE = ISS.SALES.CODE
            FOR M = 1 TO MASK.LEN
               IF MASK[M,1] = "." THEN
                  SCODE = SCODE[1,M-1]:".":SCODE[M+1,99]
               END
            NEXT M
            IF SCODE # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = SCODE
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "PRESS"
            IF ISS.MULTI.PRESS = "Y" THEN
               PRESS.ID = "MULTI"
            END ELSE
               PRESS.ID = ISS.PRESS
            END
            IF PRESS.ID = "" THEN PRESS.ID = "???"
            IF PRESS.ID # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = PRESS.ID
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
         CASE TYPE = "COLOR"
            IF ISS.NO.COLORS = "" THEN ISS.NO.COLORS = "?"
            IF ISS.NO.COLORS # PRIOR.ID THEN
               GOSUB 3000
               PRIOR.ID = ISS.NO.COLORS
               MATREADU JSX.REC FROM JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID ELSE MAT JSX.REC = ""
            END
      END CASE
*
      INVOICE.TAX = 0; INVOICE.SHIP = 0
      C2 = COUNT(ISS.INVOICE.NO,VM) + (ISS.INVOICE.NO # "")
      FOR C = 1 TO C2
         INVOICE.TAX = INVOICE.TAX + ISS.INVOICE.TAX<1,C>
         INVOICE.SHIP = INVOICE.SHIP + ISS.INVOICE.SHIP<1,C>
      NEXT C
      IF TYPE = "BCUST" OR TYPE = "BSLSM" THEN
         JSX.TOT.SALES = JSX.TOT.SALES + BUD.SALES.AMT
         BUD.SALES.AMT = 0
      END ELSE
         JSX.TOT.SALES = JSX.TOT.SALES + ISS.INVOICE.TOTAL + INVOICE.TAX 
      END
      JSX.NET.SALES = JSX.NET.SALES + ISS.INVOICE.TOTAL - ISS.COMMISSION<1,1>
      JSX.VAL.ADDED = JSX.VAL.ADDED + ISS.VALUE.ADDED
      JSX.TOT.COST = JSX.TOT.COST + ISS.COST.TOTAL - ISS.SHIP.COST
      JSX.ADJ.COST = JSX.ADJ.COST + ISS.ADJUST.COST<1,1> - ISS.SHIP.COST
      JSX.MKT.COST = JSX.MKT.COST + ISS.ADJUST.COST<1,2>
      JSX.SPOILAGE = JSX.SPOILAGE + ISS.SPOILAGE
*
      IF JSX.NET.SALES+0 > 0 THEN
         JSX.VAL.ADDED.PCT = INT(JSX.VAL.ADDED / JSX.NET.SALES * 10000 + 0.5)
         JSX.TOT.COST.PCT = INT((JSX.NET.SALES - JSX.TOT.COST) / JSX.NET.SALES * 10000 + 0.5)
         JSX.ADJ.COST.PCT = INT((JSX.NET.SALES - JSX.ADJ.COST) / JSX.NET.SALES * 10000 + 0.5)
         JSX.MKT.COST.PCT = INT((JSX.NET.SALES - JSX.MKT.COST) / JSX.NET.SALES * 10000 + 0.5)
         JSX.SPOILAGE.PCT = INT(JSX.SPOILAGE / JSX.NET.SALES * 10000 + 0.5)
      END ELSE
         JSX.VAL.ADDED.PCT = 0
         JSX.TOT.COST.PCT = 0
         JSX.ADJ.COST.PCT = 0
         JSX.MKT.COST.PCT = 0
         JSX.SPOILAGE.PCT = 0
      END
      GOTO 100
2000 *
*
*-----GET BUDGET INFORMATION
*
      PTR=0
      PROD.NUM='000000000000000'
      WHOUSE ='0000'
      BUDGET.KEY = CONO:"_":CUST:"_":SALESPERSON:"_":PROD.NUM:"_":WHOUSE
      MATREADU BUDGET.SALES.REC FROM BUDGET.SALES, BUDGET.KEY ELSE
               MAT BUDGET.SALES.REC=''
      END
*T26493 v
*     LOCATE PARAM<3> IN BUDGET.SALES.PERIOD<1> SETTING PTR ELSE PTR=0
      LOCATE PERIOD IN BUDGET.SALES.PERIOD<1> SETTING PTR ELSE PTR=0
*T26493 ^
      IF PTR > 0 THEN
         BUD.SALES.AMT = (BUDGET.SALES.AMT<1,PTR> * 100)
  * NOTE MULTIPYING BUDGET.SALES.AMT BY 100 IS TO OFFSET THE DIVISION BY 100 INT THE SUMMARY REPORT 
      END ELSE
         BUD.SALES.AMT = 0
      END
  * CRT @(0,23) :"CUST=":CUST:"SALE":SALESPERSON:"prod":PROD.NUM:"wh":WHOUSE; INPUT DAN
RETURN
*
*---- WRITE JOB.STATS.SUM RECORD
*
3000*
      IF PRIOR.ID # "" THEN
         MATWRITE JSX.REC ON JOB.STATS.SUM, CONO:"*":TYPE:"*":PRIOR.ID
      END
      RETURN
*
*---- ERROR ROUTINE
*
90000*
      PRINT @(0,23):CL:ERRMSG:
      INPUT REPLY,3:
      PRINT @(0,23):CL:
      RETURN
   END
*************************************************************************
*************************************************************************
*************************************************************************
*************************************************************************
