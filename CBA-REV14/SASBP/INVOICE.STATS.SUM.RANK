***************************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM   - JOB.STATS.SUM.RANK
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/21/85
*
* DESCRIPTION
*
* This program is used to rank selected items based on input parameter.
*
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>JOB.STATS.SUM
*COPY>CPYLIB>CHAR
*
*---- GET PARAMETERS
*
      PROCREAD PARAM ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = "MUST EXECUTE FROM A PROC" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
      TYPE = PARAM<5>
      BEGIN CASE
      CASE TYPE = "NET"
      CASE TYPE = "VA"
      CASE TYPE = "ADJ"
      CASE 1
P_X  = 0 ; P_Y = 23 ; P_VALUE = "INVALID TYPE - ":TYPE ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END CASE
*
*---- OPEN ALL FILES
*
      OPEN "","JOB.STATS.SUM" TO JOB.STATS.SUM ELSE
P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN JOB.STATS.SUM FILE" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         STOP
      END
*
*---- INITIALIZATION
*
      RANK = 0
      PRIOR.VALUE = ""
*
*---- MAIN PROCESSING
*
100*
      READNEXT ID ELSE STOP
      MATREADU JSX.REC FROM JOB.STATS.SUM, ID ELSE
         RELEASE JOB.STATS.SUM, ID
         GOTO 100
      END
      BEGIN CASE
         CASE TYPE = "NET"
            IF JSX.NET.SALES # PRIOR.VALUE THEN
               RANK = RANK + 1
               PRIOR.VALUE = JSX.NET.SALES
            END
            JSX.NET.SALES.RANK = RANK
         CASE TYPE = "VA"
            IF JSX.VAL.ADDED.PCT # PRIOR.VALUE THEN
               RANK = RANK + 1
               PRIOR.VALUE = JSX.VAL.ADDED.PCT
            END
            JSX.VAL.ADDED.RANK = RANK
         CASE TYPE = "ADJ"
            IF JSX.ADJ.COST.PCT # PRIOR.VALUE THEN
               RANK = RANK + 1
               PRIOR.VALUE = JSX.ADJ.COST.PCT
            END
            JSX.ADJ.COST.RANK = RANK
      END CASE
      MATWRITE JSX.REC ON JOB.STATS.SUM, ID
      GOTO 100
   END
