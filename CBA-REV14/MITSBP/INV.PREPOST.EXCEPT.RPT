*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
**************************************************************
* REVISION    - [12.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - INV.PREPOST.EXCEPT.RPT
* BY          - Lanny Ross
* DATE        - 9/27/05
* DESCRIPTION -
* This program produces a report of JCS or OPS DAILY invoice records that
* have a profit margin less than or greater than selection prompts.
* 10/10/2005 lross - Print all records, add JOB ID ans print ALL OPS
*                    Invoice Line-Items.
*
*ENDDOC
**************************************************************
*
*---- FILE EQUATES
*
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>JCS.CPYLIB>DAILY.INVOICE
*COPY>MITS.CPYLIB>T28652 ;* Basically DAILY.ORDER.INVOICE
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>JCS.CPYLIB>JOB
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
SYS.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
*
*---- PROCREAD
*
PROCREAD XX ELSE
   ERRMSG = "MUST BE READ FROM A PROC"
   GOSUB 91000;GOTO 99999
END
TYPE.FLAG = XX<3>
PROC.DIV = XX<4>
IF TYPE.FLAG # "J" AND TYPE.FLAG # "O" THEN
   ERRMSG = "INVALID INFORMATION PASSED TO PROGRAM"
   GOSUB 91000
   GOTO 99999
END
LOW.MARG = XX<6>
HIGH.MARG = XX<7>
BAD.CODE='BLANK CODE- CORRECT'
BAD.MARG='MARGIN - CORRECT'
DATA = 1
*
*---- DIMENSION VARIABLES
*
*
*---- OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
IF TYPE.FLAG = 'J' THEN
   OPEN '','DAILY.INVOICE' TO DAILY.INVOICE ELSE ERRMSG='DAILY.INVOICE FILE MISSING';GOTO 93000
END ELSE
   OPEN 'DAILY.ORDER.INVOICE' TO DAILY.INVOICE ELSE ERRMSG='DAILY.ORDER.INVOICE FILE MISSING';GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE MISSING';GOTO 93000
OPEN '','ORDER' TO ORDER ELSE ERRMSG='ORDER FILE MISSING';GOTO 93000
OPEN '','ORDER.DETAIL' TO ORDER.DETAIL ELSE ERRMSG='ORDER.DETAIL FILE MISSING';GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE MISSING';GOTO 93000
*
*---- INITIALIZATION
*
ALL.TYPE = "LB"
ALL.TYPE<1,2> = "MT"
ALL.TYPE<1,3> = "OS"
ALL.TYPE<1,4> = "SP"
ALL.TYPE<1,5> = "MS"
PG.NO=0
LINE.CNT=0
ERRMSG=''
PRINTER ON
*
*---- GET COMPANY NUMBER
*
CONO=''
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO='END' THEN GOTO 99999
IF TYPE.FLAG = 'J' THEN
   READV POSTING.MON FROM CONTROL,CONO:'JCFISCAL',1 ELSE
     ERRMSG='Cannot locate CONTROL ':'JCFISCAL record!'; GOTO 93000
   END
END ELSE
   READV POSTING.MON FROM CONTROL,CONO:'OPFISCAL',1 ELSE
     ERRMSG='Cannot locate CONTROL ':'OPFISCAL record!'; GOTO 93000
   END
END
READ SECURITY.REC FROM CONTROL,CONO'DIV.SECURITY' ELSE
   SECURITY.REC = 'N'; SECURITY.REC<2>= 'N'
END
IF SECURITY.REC<1> = 'Y' THEN
   READ DIVISIONS FROM CONTROL,CONO:'DIVISIONS' ELSE DIVISIONS = ''
   IF SECURITY.REC<2> = 'Y' THEN
      IF PROC.DIV = 'ALL' OR PROC.DIV = '00' THEN
         ERRMSG='Divisional security failure'
         GOSUB 92000
         GOTO 99999
      END ELSE
         LOCATE PROC.DIV IN DIVISIONS<1>,1 SETTING POS ELSE POS = 1
      END
   END ELSE
      LOCATE PROC.DIV IN DIVISIONS<1>,1 SETTING POS ELSE POS = 1
   END
END ELSE
   POS = 1
END
POSTING.MON = POSTING.MON<1,POS>
CURR.MON = POSTING.MON
*
*---- GET REPORT HEADING (FIRST TWO LINES)
*
CO.NAME = ""
RNAME = ""
RPT.NO = XX<2>
RDATE=DATE()
CALL GET.PROG.HEAD(CONO,CO.NAME,RNAME,RPT.NO,RDATE,HLINE1,HLINE2)
HLINE3=SPACE(26):"Invoices Missing Sales or Job Category Codes"
HLINE4=SPACE(40):"Margins of less than ":LOW.MARG:"% or more than "
HLINE4:=HIGH.MARG:"%"
HLINE5="CUST":SPACE(39):" JOB    SALES  JOB     INVOICE       COST"
HLINE6=" NO     CUSTOMER NAME":SPACE(13):"INVOICE    NO    CODE   CAT       TOTAL"
HLINE6:=SPACE(7):"TOTAL":SPACE(7):"MARGIN      MARGIN %  ERROR"
HLINE7="------  ":STR("-",24):" -------- -------- ----- ----- ------------"
HLINE7:=" ------------ ------------  --------- -------------------"
*
*---- MAIN PROCESSING
*
GOSUB 20
LOOP
   READNEXT INV.ID ELSE
      DATA = 0
   END
WHILE DATA DO
   IF TYPE.FLAG = 'J' THEN
      MATREAD DI.REC FROM DAILY.INVOICE,INV.ID ELSE CONTINUE
      CUST.NUM = DI.CUST.NO "L#6"
      CUST.NAME = DI.CUST.NAME
   END ELSE
      MATREAD ODI.REC FROM DAILY.INVOICE,INV.ID ELSE CONTINUE
      CUST.NUM = ODI.CUST.NO "L#6"
      CUST.NAME = ODI.CUST.NAME
      DI.JOB.NO = ODI.JOB.NO
      MATREAD ORD.REC FROM ORDER,CONO:DI.JOB.NO ELSE MAT ORD.REC = ''
   END
   INVOICE.NO = INV.ID[4,99] "L#8"
   INV.SUFFIX = INVOICE.NO[7,2]
*  IF INV.SUFFIX # "" THEN CONTINUE
   TOTAL.INV = 0
   TOTAL.COST = 0
   AFTER.LABOR.DCOST = 0                
   AFTER.LABOR.FFOH  = 0                
   AFTER.LABOR.VFOH  = 0                
   AFTER.LABOR.SAOH  = 0                
   AFTER.MATL.DCOST  = 0                
   AFTER.MATL.FFOH   = 0                
   AFTER.MATL.VFOH   = 0                
   AFTER.OSP.DCOST   = 0                
   AFTER.OSP.FFOH    = 0                
   AFTER.SHIP.DCOST  = 0                
   AFTER.SHIP.FFOH   = 0                
   AFTER.MISC.DCOST  = 0                
   AFTER.MISC.FFOH   = 0                
   SALES.CODE = ''
   JOB.CAT = ''
   IF TYPE.FLAG = 'J' THEN
      GOSUB 30
   END ELSE
      GOSUB 40
   END
   IF TOTAL.INV + TOTAL.COST = 0 THEN CONTINUE
   MARGIN = TOTAL.INV - TOTAL.COST
   IF TOTAL.INV > 0 THEN
      MARG.PCT = ICONV(MARGIN / TOTAL.INV * 10000, 'MD0')
   END ELSE
      MARG.PCT = 0
   END
   PTOTAL.COST=TOTAL.COST
   PTOTAL.INV=TOTAL.INV
   GOSUB 50
REPEAT
PRINTER OFF
GOTO 99999
*
*---- PRINT THE HEADINGS
*
20 *
PRINT CHAR(12)
PG.NO=PG.NO + 1
PRINT HLINE1:PG.NO
PRINT HLINE2
PRINT "DIVISION: ":PROC.DIV:HLINE3
PRINT HLINE4
PRINT
PRINT HLINE5
PRINT HLINE6
PRINT HLINE7
PRINT
LINE.CNT=9
RETURN
*
*---- JCS INVOICES
*
30 *
MULTI.JOB = 0
LCNT=DCOUNT(DI.CHG.CODE,VM)
FOR L = 1 TO LCNT UNTIL MULTI.JOB
   IF DI.CHG.JOB<1,L> = "" THEN
      BEGIN CASE
         CASE DI.CHG.CODE<1,L> = "TOT"
         CASE DI.CHG.CODE<1,L> = "SUB"
         CASE DI.CHG.CODE<1,L> = "SUBT"
         CASE DI.CHG.CAT<1,L> = "CMT"
         CASE 1
            DI.CHG.JOB<1,L> = DI.JOB.NO
      END CASE
   END ELSE
      IF DI.CHG.JOB<1,L> # DI.JOB.NO THEN MULTI.JOB = 1
   END
NEXT L
MATREAD JOB.REC FROM JOB, CONO:DI.JOB.NO ELSE
   ERRMSG = "JOB ":DI.JOB.NO:" IS MISSING"; GOSUB 91000; RETURN
END
IF JOB.CAT = '' THEN IF JOB.CATG # '' THEN JOB.CAT = JOB.CATG
IF SALES.CODE = '' THEN IF JOB.SALES.CODE # '' THEN SALES.CODE = JOB.SALES.CODE
PSALES.CODE=SALES.CODE
WCNT = COUNT(DI.WIP.DATE,VM) + (DI.WIP.DATE # "")
WIP.TYPE = ""
WIP.PERCENT = ""
WIP.DATE = ""
BEGIN CASE
   CASE WCNT < 1
      WIP.TYPE = "ALL"
      WIP.PERCENT = 10000
      WIP.DATE = "ALL"
   CASE WCNT = 1
      WIP.TYPE = "ALL"
      WIP.PERCENT = DI.WIP.PRCNT<1,1>
      WIP.DATE = DI.WIP.DATE<1,1>
   CASE 1
      WW = 0
      FOR XX = 1 TO WCNT
         LOCATE DI.WIP.TYPE<1,XX> IN ALL.TYPE<1>,1 SETTING WFND ELSE WFND = 0
         IF WFND THEN
            WW = WW + 1
            WIP.TYPE<1,WW> = DI.WIP.TYPE<1,XX>
            WIP.PERCENT<1,WW> = DI.WIP.PRCNT<1,XX>
            WIP.DATE<1,WW> = DI.WIP.DATE<1,XX>
         END
      NEXT XX
      LOCATE "OTH" IN DI.WIP.TYPE<1>,1 SETTING WFND ELSE WFND = 0
      IF WFND THEN
         FOR XX = 1 TO 5
            LOCATE ALL.TYPE<1,XX> IN WIP.TYPE<1>,1 SETTING WW ELSE
               WIP.TYPE<1,WW> = ALL.TYPE<1,XX>
               WIP.PERCENT<1,WW> = DI.WIP.PRCNT<1,WFND>
               WIP.DATE<1,WW> = DI.WIP.DATE<1,WFND>
            END
         NEXT XX
      END
END CASE
CNT = COUNT(DI.CHG.CODE,VM) + (DI.CHG.CODE # "")
JOB.STACK = ''
FOR I = 1 TO CNT
   CHARGE.CODE = DI.CHG.CODE<1,I>
   CHARGE.JOB = DI.CHG.JOB<1,I>
   CHARGE.CAT = DI.CHG.CAT<1,I>
   CHARGE.INV = 0
   CHARGE.TAX = 0
   IF CHARGE.CODE = "TOT" OR CHARGE.CODE = "SUB" OR CHARGE.CAT = "CMT" OR CHARGE.CODE = "SUBT" THEN CONTINUE
   CHARGE.INV = DI.AMOUNT<1,I>
   TOTAL.INV = TOTAL.INV + DI.AMOUNT<1,I>
   IF MULTI.JOB THEN
      MATREAD JOB.REC FROM JOB, CONO:CHARGE.JOB ELSE
         ERRMSG = "JOB ":CHARGE.JOB:" IS MISSING"; GOSUB 91000; CONTINUE
      END
   END
*
   IF MULTI.JOB THEN
      LOCATE(CHARGE.JOB,JOB.STACK,1;MULTI.POS) ELSE
         JOB.STACK<1,-1> = CHARGE.JOB
         JOB.WIP<1,1> = JOB.WIP<1,1> + 1
         IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN
            JOB.WIP<1,4> = POSTING.MON
         END
         IF JOB.WIP<1,5> < POSTING.MON THEN
            JOB.WIP<1,5> = POSTING.MON
         END
         GOSUB 16100  ;* GET 'BEFORE' COSTS
         PRINTER OFF
         CALL REVERSE.JOB.WIP.NOP(CONO,CHARGE.JOB,WIP.TYPE,WIP.PERCENT,WIP.DATE,POSTING.MON,CURR.MON)
         PRINTER ON
         GOSUB 16200  ;* GET 'AFTER' COSTS
      END
   END
*
   IF CHARGE.CAT = "TAX" THEN
      CHARGE.TAX = DI.AMOUNT<1,I>
      TOTAL.INV -= CHARGE.TAX
   END
   IF MULTI.JOB THEN
*        GOSUB 12000
*----------- GET INVOICE SALES DATA FOR MULTI-JOBS -------------- 
      BEGIN CASE
         CASE CHARGE.INV # 0 OR CHARGE.TAX # 0
            GOSUB 16000  ;* INVOICE SALES SUBROUTINE
         CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LABOR.VFOH # 0 OR AFTER.LABOR.SAOH # 0
            GOSUB 16000
         CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL.VFOH # 0
            GOSUB 16000
         CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0
            GOSUB 16000
         CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0
            GOSUB 16000
         CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0
            GOSUB 16000
      END CASE
*------------------------------------------
   END
NEXT I
IF NOT(MULTI.JOB) THEN
   JOB.WIP<1,1> = JOB.WIP<1,1> + 1
   IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN
      JOB.WIP<1,4> = POSTING.MON
   END
   IF JOB.WIP<1,5> < POSTING.MON THEN
      JOB.WIP<1,5> = POSTING.MON
   END
   GOSUB 16100  ;* GET 'BEFORE' COSTS
   PRINTER OFF
   CALL REVERSE.JOB.WIP.NOP(CONO,DI.JOB.NO,WIP.TYPE,WIP.PERCENT,WIP.DATE,POSTING.MON,CURR.MON)
   PRINTER ON
   GOSUB 16200  ;* GET 'AFTER' COSTS
   CHARGE.JOB = DI.JOB.NO
   CHARGE.INV = TOTAL.INV
*---- GET INVOICE SALES DATA -------------- 
   BEGIN CASE
      CASE CHARGE.INV # 0 OR CHARGE.TAX # 0
         GOSUB 16000  ;* INVOICE SALES SUBROUTINE
      CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LABOR.VFOH # 0 OR AFTER.LABOR.SAOH # 0
         GOSUB 16000
      CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL.VFOH # 0
         GOSUB 16000
      CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0
         GOSUB 16000
      CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0
         GOSUB 16000
      CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0
         GOSUB 16000
   END CASE
*------------------------------------------
END
RETURN
*
*---- OPS INVOICES
*
40 *
LCNT = DCOUNT(ODI.CHG.CAT,VM)
FOR LPTR = 1 TO LCNT
*  ORD.JOB = ODI.CHG.JOB<1,LPTR>
   SALES.CODE=''
   CHARGE.CODE = ODI.CHG.CODE<1,LPTR>
   CHARGE.ORD = ODI.CHG.ORDER<1,LPTR>
   CHARGE.CAT = ODI.CHG.CAT<1,LPTR>
   CHARGE.INV = 0
   CHARGE.TAX = 0
   IF CHARGE.CODE = "TOT" OR CHARGE.CODE = "SUB" OR CHARGE.CAT = "CMT" OR CHARGE.CODE = "SUBT" THEN CONTINUE
*  CHARGE.INV = ODI.AMOUNT<1,LPTR>
*  TOTAL.INV = TOTAL.INV + CHARGE.INV
   MATREADU ORD.REC FROM ORDER, CONO:CHARGE.ORD ELSE
      ERRMSG = "ORDER ":CHARGE.ORD:" IS MISSING"
      GOSUB 91000; CONTINUE
   END
*
*  IF CHARGE.CAT = "TAX" THEN
*     CHARGE.TAX = CHARGE.INV
*     TOTAL.INV -= CHARGE.TAX
*  END
   IF CHARGE.CODE = "FNGD" THEN
      ORD.ID = CHARGE.ORD:"!":ODI.SHIP.TO
      MATREADU ORD.DET.REC FROM ORDER.DETAIL, CONO:ORD.ID ELSE
         ERRMSG = "ORDER DETAIL ":ORD.ID:" IS MISSING"
         GOSUB 91000; CONTINUE
      END
      DCNT = DCOUNT(OSD.PROD,VM)
      PCNT = DCOUNT(ODI.PROD<1,LPTR>,SM)
      FOR PPTR = 1 TO PCNT
         IF ORD.JOB # '' THEN
            MATREAD JOB.REC FROM JOB,CONO:ORD.JOB<1,1> ELSE MAT JOB.REC = ''
            IF JOB.CAT = '' THEN JOB.CAT = JOB.CATG
         END ELSE JOB.CAT = 'X'
         PROD = ODI.PROD<1,LPTR,PPTR>
         WHSE = ODI.WHSE<1,LPTR,PPTR>
         TOTAL.COST += ODI.SHP.COST<1,LPTR,PPTR>  
         PTOTAL.COST = ODI.SHP.COST<1,LPTR,PPTR>
         MATREAD IWH.REC FROM INV.WHSE, CONO:PROD:"!":WHSE ELSE
            MAT IWH.REC =''
         END
         IF SALES.CODE = '' THEN SALES.CODE = IWH.SALES.CODE
         PSALES.CODE=SALES.CODE
         IQTY = ODI.SHP.QTY<1,LPTR,PPTR>
         FACTOR = ODI.COST.UNIT<1,LPTR>    
         TIA.AMT = (IQTY / FACTOR ) * ODI.UNIT.PRICE<1,LPTR>
         IF TIA.AMT > 0 THEN
            TIA.AMT = INT( TIA.AMT/100 + 0.5)
         END ELSE
            TIA.AMT = INT( TIA.AMT/100 - 0.5)
         END
         TOTAL.INV += TIA.AMT
         PTOTAL.INV = TIA.AMT
         MARGIN = PTOTAL.INV - PTOTAL.COST
         IF PTOTAL.INV > 0 THEN
            MARG.PCT = ICONV(MARGIN / PTOTAL.INV * 10000, 'MD0')
         END ELSE
            MARG.PCT = 0
         END
         GOSUB 50
      NEXT PPTR
   END
*
NEXT LPTR
CUST.NUM=''
CUST.NAME=SPACE(11):"*** TOTAL ***"
PSALES.CODE = 'X'
JOB.CAT = 'X'
RETURN
*
*---- PRINT EXCEPTION
*
50 *
ERR.MSG=''
IF JOB.CAT = '' THEN
   ERR.MSG<-1>=BAD.CODE
END
IF PSALES.CODE = '' THEN
   ERR.MSG<-1>=BAD.CODE
END
IF MARG.PCT < (LOW.MARG*100) THEN
   ERR.MSG<-1>=BAD.MARG
END
IF MARG.PCT > (HIGH.MARG*100) THEN
   ERR.MSG<-1>=BAD.MARG
END
*IF ERR.MSG = '' THEN
*   RETURN
*END
IF JOB.CAT = 'X' THEN JOB.CAT = ''
IF PSALES.CODE = 'X' THEN PSALES.CODE = ''
IF LINE.CNT > 55 THEN GOSUB 20
PRINT CUST.NUM'L#8':CUST.NAME'L#24 ':INVOICE.NO'L#9':DI.JOB.NO'L#9':
PRINT PSALES.CODE'L#6':
PRINT JOB.CAT'L#5':OCONV(PTOTAL.INV,'MD2,')'R#13':OCONV(PTOTAL.COST,'MD2,')'R#13':
PRINT OCONV(MARGIN,'MD2,')'R#13':OCONV(MARG.PCT,'MD2')'R#11 ':
PRINT ERR.MSG<1>'L#19'
LINE.CNT += 1
IF DCOUNT(ERR.MSG,AM) > 1 THEN
  FOR M = 2 TO DCOUNT(ERR.MSG,AM)
    PRINT SPACE(113):ERR.MSG<M>
    LINE.CNT+=1
  NEXT M
END
RETURN
*
*---- UPDATE COST
*
16000*
TOTAL.COST = TOTAL.COST + (AFTER.LABOR.DCOST + AFTER.LABOR.FFOH  + AFTER.LABOR.VFOH  + AFTER.LABOR.SAOH  + AFTER.MATL.DCOST  + AFTER.MATL.FFOH   + AFTER.MATL.VFOH   + AFTER.OSP.DCOST   + AFTER.OSP.FFOH    + AFTER.SHIP.DCOST  + AFTER.SHIP.FFOH   + AFTER.MISC.DCOST  + AFTER.MISC.FFOH)
RETURN
16100 * CAPTURE BEFORE  WIP COSTS
BEFORE.LABOR.DCOST = JOB.LB.WIP<1,3,1>
BEFORE.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
BEFORE.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
BEFORE.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
BEFORE.MATL.DCOST  = JOB.MT.WIP<1,3,1>
BEFORE.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
BEFORE.MATL.VFOH   = JOB.MT.WIP<1,3,3>
BEFORE.OSP.DCOST   = JOB.OS.WIP<1,3,1>
BEFORE.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
BEFORE.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
BEFORE.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
BEFORE.MISC.DCOST  = JOB.MS.WIP<1,3,1>
BEFORE.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
RETURN
16200 * CAPTURE AFTER  WIP COSTS
AFTER.LABOR.DCOST = JOB.LB.WIP<1,3,1>
AFTER.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
AFTER.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
AFTER.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
AFTER.MATL.DCOST  = JOB.MT.WIP<1,3,1>
AFTER.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
AFTER.MATL.VFOH   = JOB.MT.WIP<1,3,3>
AFTER.OSP.DCOST   = JOB.OS.WIP<1,3,1>
AFTER.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
AFTER.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
AFTER.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
AFTER.MISC.DCOST  = JOB.MS.WIP<1,3,1>
AFTER.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
AFTER.LABOR.DCOST = AFTER.LABOR.DCOST - BEFORE.LABOR.DCOST
AFTER.LABOR.FFOH = AFTER.LABOR.FFOH - BEFORE.LABOR.FFOH
AFTER.LABOR.VFOH = AFTER.LABOR.VFOH - BEFORE.LABOR.VFOH
AFTER.LABOR.SAOH = AFTER.LABOR.SAOH - BEFORE.LABOR.SAOH
AFTER.MATL.DCOST = AFTER.MATL.DCOST - BEFORE.MATL.DCOST
AFTER.MATL.FFOH = AFTER.MATL.FFOH - BEFORE.MATL.FFOH 
AFTER.MATL.VFOH = AFTER.MATL.VFOH - BEFORE.MATL.VFOH
AFTER.OSP.DCOST = AFTER.OSP.DCOST - BEFORE.OSP.DCOST
AFTER.OSP.FFOH = AFTER.OSP.FFOH - BEFORE.OSP.FFOH 
AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST
AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH
AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST
AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH
RETURN
*---- CALLS FOR SYSCOM
*
91000 *
PRINTER OFF
ERR.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
PRINTER ON
RETURN
92000 *
PRINTER OFF
ERR.TYPE=2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 *
PRINTER OFF
ERR.TYPE=3
CALL SYSCOM(MAT SYSCOM.REC)
99999 *
END
