*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - CHECK.REVERSAL.POST
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 11/12/84
* DESCRIPTION -
* 01/21/91 - CSF 15238 - JR CORRECTED VOUCHER PERIOD FOR POSTING
* 06/91 - DLG - TASKS 15943/15960 UPDATE STATS/CHECK# REVERS/DELETE
* 10/14/94 CLW Task 17919 - Accrual accounting
* T19149 RKB 05/01/94 add support for ap div,dept,cctr
*T20945 lanny 09/05/1996 * Logic for getting PERIOD for VOUCHER is
*                          determined after the ACCRUED.LISB.HIST file
*                          records written : PERIOD missing from these
*                          records.
*T21956 llh 05/21/1997 * FIX OAP.DIV.OWNER = "" TO SET TO SQV.DIV.OWNER
*T22155 lanny 08/18/1997 * If DCR.REV.FLG = N then DIV = 00 instead of
*                          DIV on SQV.AP.DIV (wrong).
*T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS A VARIABLE
*T23278 markt 11/17/1998 * Enable division-level posting of fiscal data.
*T24522 lanny 09/30/1999 * Correct DIV in ACCRUED.LISB.HIST
*T24587 gil 11/22/1999 * Correct DIV on Reversed Voucher record.
*T25304 cm 07/10/2000 * Do not create a blank OAP record when no OAP
*                       record exists.
*T25632 lanny 02/13/2001 * Voucher Numbers are Sub-valued in VPDS.VOU.NO.
*T26387 lhelms 01/23/2002 * When you do not delete vouchers the
*                           account amount for each voucher on the
*                           MCD record was added 1 to 2 to 3 etc...
*T25755 cmykleb 02/19/2002 * Modify pgm to look at the new OUTSIDE.PO
*                            format with seq #'s.
*T26924 cmykleb 10/18/2002 * Reversal of partial payment of voucher
*                            causes an incorrect A/P side entry.
*T23880 lross 10/16/2002 * Include offset acct in ALH record for OS
*                          PO's.  
*T27984 lross 03/02/2004 * Use orig check date in SQV.PAID.DATE.
*T28779 lross 02/07/2006 * Retain identity of multiple same Prod/Whse
*                          lines.
*ENDDOC
*********************************************************************
**** INSERT FILES EQUATES
*COPY>APS.CPYLIB>DAILY.CHECK.REVERSAL
*COPY>APS.CPYLIB>OAP
*COPY>APS.CPYLIB>VOUCHERS
*COPY>APS.CPYLIB>CKREV
*COPY>APS.CPYLIB>MCD
*COPY>APS.CPYLIB>SQV
*COPY>APS.CPYLIB>HDCH
*COPY>APS.CPYLIB>APCHECK
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>APS.CPYLIB>VEND.VOUCH.STATS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>FISCAL
*COPY>FAS.CPYLIB>EQUIP.FILE
*COPY>FAS.CPYLIB>REPAIRS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>APS.CPYLIB>AP.HIST
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>CATEGORY.MISC
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>MISC.PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
*COPY>ICS.CPYLIB>WAREHOUSE   ;*** T24522
DIM AP.REC(25)
EQU AP.CHECK     TO AP.REC(1)
EQU AP.BANK.ACCT TO AP.REC(2)
EQU AP.NO.OF.CHK TO AP.REC(3)
EQU AP.GRS.AMT   TO AP.REC(4)
EQU AP.DSC.AMT   TO AP.REC(5)
EQU AP.NET.AMT   TO AP.REC(6)
EQU AP.CHK.DATE  TO AP.REC(7)
EQU AP.VEND      TO AP.REC(8)
EQU AP.MON       TO AP.REC(9)
EQU AP.DIV       TO AP.REC(10)
EQU AP.DEPT      TO AP.REC(11)
EQU AP.CCTR      TO AP.REC(12)
EQU AP.GLA.DATE  TO AP.REC(14)
EQU AP.VOUCH     TO AP.REC(15)
EQU AP.VOUCH.GRS TO AP.REC(16)
EQU AP.VOUCH.DSC TO AP.REC(17)
EQU AP.VOUCH.NET TO AP.REC(18)
*
DIM SVEND.REC(50)
EQU SVEND.DESC     TO SVEND.REC(1)
EQU SVEND.ADDR1    TO SVEND.REC(2)
EQU SVEND.CT.ST    TO SVEND.REC(4)
EQU SVEND.ZIP      TO SVEND.REC(5)
EQU SVEND.TERMS    TO SVEND.REC(6)
EQU SVEND.PD.M.T.D TO SVEND.REC(7)
EQU SVEND.PD.Y.T.D TO SVEND.REC(8)
EQU SVEND.DATE.PD  TO SVEND.REC(10)
EQU SVEND.PA.AMT   TO SVEND.REC(11)
EQU SVEND.CK.NO.PD TO SVEND.REC(12)
EQU SVEND.OP.BAL   TO SVEND.REC(13)
**** SETUP FOR SYSTEM ERRMSGS
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
**** READ PROC BUFFER
PROCREAD XX ELSE
   ERRMSG = "MUST BE RUN FROM A PROC"
   GOTO 93000
END
DIV.CODE = XX<3>
**** OPEN FILES
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING'; GOTO 93000
OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE IS MISSING'; GOTO 93000
OPEN '','MCD' TO MCD ELSE ERRMSG = 'MCD FILE IS MISSING'; GOTO 93000
OPEN '','MCD.TAG' TO MCD.TAG ELSE ERRMSG = 'MCD.TAG FILE IS MISSING'; GOTO 93000
OPEN '','CKREV' TO CKREV ELSE ERRMSG = 'CKREV FILE IS MISSING'; GOTO 93000
OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = 'APCHECK FILE IS MISSING'; GOTO 93000
OPEN '','AP.HIST' TO AP.HIST ELSE ERRMSG = 'AP.HIST FILE IS MISSING'; GOTO 93000
OPEN '','HDCH' TO HDCH ELSE ERRMSG = 'HDCH FILE IS MISSING'; GOTO 93000
OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE IS MISSING'; GOTO 93000
OPEN '','VEND.STATS' TO VEND.STATS ELSE ERRMSG = 'VEND.STATS FILE IS MISSING'; GOTO 93000
OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE ERRMSG = 'VEND.PO.STATS FILE IS MISSING'; GOTO 93000
OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE ERRMSG = 'VEND.PROD.STATS FILE IS MISSING'; GOTO 93000
OPEN '','VEND.VOUCH.STATS' TO VEND.VOUCH.STATS ELSE ERRMSG = 'VEND.VOUCH.STATS FILE IS MISSING'; GOTO 93000
OPEN '','VOUCHERS' TO VOUCHERS ELSE ERRMSG = 'VOUCHERS DICT FILE IS MISSING'; GOTO 93000
OPEN '','VOUCHERS.TAG' TO VOUCHERS.TAG ELSE ERRMSG = 'VOUCHERS.TAG DICT FILE IS MISSING'; GOTO 93000
OPEN '','DAILY.CHECK.REVERSAL' TO DAILY.CHECK.REVERSAL ELSE ERRMSG = 'DAILY.CHECK.REVERSAL FILE MISSING'; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING'; GOTO 93000
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGORY.MISC FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OSP FILE MISSING' ; GOTO 93000
OPEN 'PO' TO PO ELSE ERRMSG = 'PO FILE MISSING' ; GOTO 93000
OPEN 'MISC.PO' TO MISC.PO ELSE ERRMSG = 'MISC.PO FILE MISSING' ; GOTO 93000
OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING';GOTO 93000
OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 'ACCRUED.LIAB.HIST FILE MISSING' ; GOTO 93000
*** T24522 v
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE MISSING'; GOTO 93000
*
**** INIT
TODAY = DATE()
GEN.DIV = "00"; GEN.DEPT = "00"; GEN.CCTR = "000"
MAT VEND.REC = '' ; MAT VCH.REC = '' ; MAT OAP.REC = '' ; MAT SQV.REC = ''
MAT HDCK.REC = '' ; MAT APCK.REC = ''; MAT RPR.REC = '' ; MAT EQP.REC = ''
MAT APH.REC = '' ; MAT MCD.REC = '' ; MAT DCR.REC = '' ; MAT CKRV.REC = ''
AP.REV = ''
ACCRUE.OFFACCT = '' ;*T23880  
**** MAIN PROCESS
READNEXT VOU.ID ELSE GOTO 99999
CONO = VOU.ID[1,3]
MATREAD GLTABLE.REC FROM CONTROL , CONO:"GLTABLE" ELSE
   ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE"; GOTO 93000
END
MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
MATREAD FISCAL.REC FROM CONTROL, CONO:"APDFISCAL" ELSE
   ERRMSG = "CONTROL 'APDFISCAL' IS MISSING"; GOTO 93000
END
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
   PERIOD.REC = 12
END
NUM.PERIODS = PERIOD.REC<1>
***** T23278 v
READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
   ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
   GOTO 93000
END
READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
   ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"
   GOTO 93000
END
*
IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
   IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
      ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
      GOSUB 91000; GOTO 99999
   END
   LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
      ERRMSG = "Division ":DIV.CODE:" not found in Control File DIVISIONS Record"
      GOTO 93000
   END
END ELSE
   POS = 1
END
*  IF FR.CURR.PER[5,2] < 1 OR FR.CURR.PER[5,2] > NUM.PERIODS THEN
IF FR.CURR.PER<1,POS>[5,2] < 1 OR FR.CURR.PER<1,POS>[5,2] > NUM.PERIODS THEN
***** T23278 ^
   ERRMSG = "ERROR IN CONTROL RECORD 'APDFISCAL'"; GOTO 93000
END
IF CO.FAS = "Y" THEN
   OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE IS MISSING';GOTO 93000
   OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSING';GOTO 93000
END
GOSUB 1000
DATA = 1
LOOP
   READNEXT VOU.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO = VOU.ID[1,3] THEN GOSUB 1000
REPEAT
GOTO 99999
*** UPDATE ALL FILES
1000*
MAT VEND.REC = ''
MAT VCH.REC = ''
MAT HDCK.REC = ''
MAT APCK.REC = ''
MAT APH.REC = ''
MAT MCD.REC = ''
MAT CKRV.REC = ''
AP.ACCT=''; AP.AMT=''; AP.NET=''; AP.DSC=''; APDIV='';APDEPT='';APCCTR=''
MATREADU DCR.REC FROM DAILY.CHECK.REVERSAL, VOU.ID ELSE
   RELEASE DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
END
DCR.STATUS = ""
PROG.FLAG = "MANUAL"
MCD.CHECK=DCR.CHECK.NO
MCD.BANK.ACCT=DCR.DISB.ACCT
MCD.NO.OF.CHK=1
MCD.GRS.AMT=DCR.GRS.AMT * (-1)
MCD.DSC.AMT=DCR.DSC.AMT * (-1)
MCD.NET.AMT=((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
MCD.CHK.DATE=TODAY
MCD.VEND=DCR.VEND<1,1>
MCD.MON=FR.CURR.PER<1,POS>;* T23278
GOSUB 2000
IF CO.CHK.RECON # 'N' THEN
   MATREADU APCK.REC FROM APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO ELSE
      RELEASE APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
      DCR.STATUS = "CHECK NOT ON BANK-REC"
      MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
   END
   IF APCK.CODE = "V" THEN
      RELEASE APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
      DCR.STATUS = "CHECK HAD BEEN REVERSED"
      MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
   END
   IF APCK.AMT # (DCR.GRS.AMT - DCR.DSC.AMT) THEN
      RELEASE APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
      DCR.STATUS = "MISMATCH IN CHECK AMOUNT"
      MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
   END
   ALL.ACCT = ""
   ALL.DIV = ""
   ALL.DEPT = ""
   ALL.CCTR = ""
   ALL.AMT = ""
   ALL.EQUIP = ""
   ALL.NET = ""
   ALL.DSC = ""
   TR.CNT = COUNT(APCK.VOUCH,VM) + (APCK.VOUCH # "")
   PAID.AMT = 0
   PAID.DSC = 0
   FOR TR = 1 TO TR.CNT
      MATREAD SQV.REC FROM SQV, CONO : APCK.VOUCH<1,TR> ELSE MAT SQV.REC = ""
      PTR = 1
      LOOP
         LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1>,PTR SETTING FND ELSE FND = 0
         BEGIN CASE
            CASE FND = 0
               PTR = 0
            CASE DCR.DISB.ACCT # SQV.DISB.ACCT<1,FND>
               PTR = FND + 1
            CASE APCK.DATE # SQV.PAID.DATE<1,FND>
               PTR = FND + 1
            CASE 1
               PAID.AMT = PAID.AMT + SQV.PAID.AMT<1,FND>
               PAID.DSC = PAID.DSC + SQV.DSC.PAID<1,FND>
               PAID.GRS = SQV.PAID.AMT<1,FND> + SQV.DSC.PAID<1,FND>
               CALL AMOUNT.DIST.SUB(SQV.DIV,SQV.DIST.AMT,PAID.GRS,ALL.NET,SQV.DSC.PAID<1,FND>,TEMP.DSC,ERRMSG)
               DCNT = COUNT(SQV.DIST.AMT,VM) + (SQV.DIST.AMT # "")
               FOR D = 1 TO DCNT
                  DPTR = 1
                  LOOP
                     ADD.ACCT = 0
                     LOCATE SQV.ACCT<1,D> IN ALL.ACCT<1>,DPTR SETTING DFND THEN
                        NULL
                     END ELSE
                        ADD.ACCT = 1
                     END
                     IF ADD.ACCT THEN
                        ALL.ACCT<1,DFND> = SQV.ACCT<1,D>
                        ALL.DIV<1,DFND> = SQV.DIV<1,D>
                        ALL.DEPT<1,DFND> = SQV.DEPT<1,D>
                        ALL.CCTR<1,DFND> = SQV.CCTR<1,D>
                        ALL.EQUIP<1,DFND> = SQV.ASSET<1,D>
                        ALL.AMT<1,DFND> = ALL.NET<1,D>
                        ALL.DSC<1,DFND> = TEMP.DSC<1,D>
                        DPTR = 0
                     END
                     BEGIN CASE
                        CASE DPTR = 0
                        CASE ALL.DIV<1,DFND> # SQV.DIV<1,D>
                           DPTR = DFND + 1
                        CASE ALL.DEPT<1,DFND> # SQV.DEPT<1,D>
                           DPTR = DFND + 1
                        CASE ALL.CCTR<1,DFND> # SQV.CCTR<1,D>
                           DPTR = DFND + 1
                        CASE ALL.EQUIP<1,DFND> # SQV.ASSET<1,D>
                           DPTR = DFND + 1
                        CASE 1
                           ALL.AMT<1,DFND> = ALL.AMT<1,DFND> + ALL.NET<1,D>
                           ALL.DSC<1,DFND> = ALL.DSC<1,DFND> + TEMP.DSC<1,D>
                           DPTR = 0
                     END CASE
                  WHILE DPTR DO
                  REPEAT
               NEXT D
               AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")
               FOR AP=1 TO AP.CNT
                  LOCATE SQV.AP.ACCT<1,AP> IN AP.ACCT<1>,1 SETTING AFND ELSE
                     AP.ACCT<1,AFND>=SQV.AP.ACCT<1,AP>
                     APDIV<1,AFND> =SQV.AP.DIV<1,AP>
                     APDEPT<1,AFND>=SQV.AP.DEPT<1,AP>
                     APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>
                     AP.AMT<1,AFND>=0
                  END
                  AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>
               NEXT AP
               PTR = 0
         END CASE
      WHILE PTR DO
      REPEAT
   NEXT TR
   IF PAID.AMT = APCK.AMT THEN
      PROG.FLAG = ""
      PAID.GRS = PAID.AMT + PAID.DSC
   END
   IF PROG.FLAG = "MANUAL" THEN
      IF DCR.REV.FLAG = "N" THEN
         RELEASE APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
         DCR.STATUS = "REVERSE VOUCHERS FLAG MUST BE (YES) IF CHECK REVERSAL WAS ENTERED MANUALLY"
         MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
      END
   END ELSE
      BEGIN CASE
         CASE ALL.ACCT # DCR.ACCT
            DCR.STATUS = "MISMATCH IN DISTRIBUTION ACCOUNTS"
         CASE ALL.DIV # DCR.DIV
            DCR.STATUS = "MISMATCH IN DISTRIBUTION DIVISIONS"
         CASE ALL.DEPT # DCR.DEPT
            DCR.STATUS = "MISMATCH IN DISTRIBUTION DEPARTMENTS"
         CASE ALL.CCTR # DCR.CCTR
            DCR.STATUS = "MISMATCH IN DISTRIBUTION COST CENTERS"
         CASE ALL.EQUIP # DCR.ASSET.ID
            DCR.STATUS = "MISMATCH IN DISTRIBUTION EQUIPMENTS"
         CASE ALL.AMT # DCR.DIST.AMT
            DCR.STATUS = "MISMATCH IN DISTRIBUTION AMOUNTS"
         CASE ALL.DSC # DCR.DSC
            DCR.STATUS = "MISMATCH IN DISTRIBUTION DISCOUNTS"
         CASE APCK.VOUCH # DCR.VOUCH
            DCR.STATUS = "MISMATCH BETWEEN CHECK AND REVERSED VOUCHERS"
      END CASE
      IF DCR.STATUS # "" THEN
         RELEASE APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
         MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
      END
   END
END ELSE
   IF DCR.REV.FLAG = "N" THEN
      DCR.STATUS = "REVERSE VOUCHERS FLAG MUST BE (YES) IF CHECK RECON. FLAG IS (NO)"
      MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
   END
END
DL.CTR = DCR.CTR
MATREADU VEND.REC FROM VEND , CONO:DCR.VEND<1,1> ELSE
   RELEASE VEND , CONO:DCR.VEND<1,1>
   DCR.STATUS = "VENDOR # (":DCR.VEND<1,1>:") NOT ON FILE"
   MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
END
IF LEN(DCR.VEND<1,1>) = 8 THEN
   MATREADU SVEND.REC FROM VEND , CONO:DCR.VEND<1,1>[1,5] ELSE
      RELEASE VEND , CONO:DCR.VEND<1,1>
      DCR.STATUS = "VENDOR # (":DCR.VEND<1,1>") NOT ON FILE"
      MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
   END
END
MATREAD VCH.REC FROM VOUCHERS , CONO:DCR.CHECK.NO:"0V" ELSE
   MAT VCH.REC = ""
END
IF VCH.VEND # "" THEN
   DCR.STATUS = "CHECK # (":DCR.CHECK.NO:") HAS BEEN REVERSED"
   MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
END
FOR XX = 1 TO DCR.CTR
   IF CO.FAS = "Y" THEN
      IF DCR.ASSET.ID<1,XX> # "" THEN
         MATREAD EQP.REC FROM EQUIP.FILE , CONO:DCR.ASSET.ID<1,XX> ELSE
            MAT EQP.REC = ''
            DCR.STATUS = "EQUIP ID (":DCR.ASSET.ID<1,XX>:") NOT ON FILE"
            MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
         END
      END
   END
NEXT XX
IF DCR.REV.FLAG = "Y" THEN
   VCH.VEND = DCR.VEND
   VCH.INV = DCR.INV
   VCH.INV.DATE = DCR.INV.DATE
   VCH.DUE.DATE = DCR.DUE.DATE
   VCH.GRS.AMT = DCR.GRS.AMT * (-1)
   VCH.MER.AMT = DCR.MER.AMT * (-1)
   VCH.DSC.AMT = DCR.DSC.AMT * (-1)
   VCH.CTR = DL.CTR
   XX.MON = FIELD(VOU.ID,"!",4)
   VCH.DESC = "CHECK REVERSAL"
   VCH.JOB = ''
   VCH.PO = DCR.PO
   TR.CNT = DCOUNT(DCR.VOUCH,VM)
   FOR TR = 1 TO TR.CNT
      MATREADU SQV.REC FROM SQV, CONO:DCR.VOUCH<1,TR> ELSE
         MAT SQV.REC = ""
      END
      LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1> SETTING CHK.LOC ELSE CHK.LOC=CHK.LOC-1
      SQV.CHK.NO<1,CHK.LOC>="DELETE"
      MATWRITE SQV.REC ON SQV, CONO:DCR.VOUCH<1,TR>
*T25304 v
*     MATREADU OAP.REC FROM OAP, CONO:DCR.VOUCH<1,TR> ELSE
*        MAT OAP.REC = ""
*     END
      MATREADU OAP.REC FROM OAP, CONO:DCR.VOUCH<1,TR> THEN
*T25304 ^
         REM OAP.PAID.DATE=''
         REM OAP.DISB.ACCT=''
         OAP.CHK.NO = "DELETE"
         MATWRITE OAP.REC ON OAP, CONO:DCR.VOUCH<1,TR>
      END ; *T25304
      VOUCH.NO = DCR.VOUCH<1,TR>
      MATREADU VVOS.REC FROM VEND.VOUCH.STATS, CONO:DCR.VEND<1,1>:"!":VOUCH.NO ELSE
         RELEASE VEND.VOUCH.STATS,CONO:DCR.VEND<1,1>:"!":VOUCH.NO
         GOTO 1009
      END
      PO.CNT = DCOUNT(VVOS.PO.NO<1>,VM)
      FOR VV = 1 TO PO.CNT
*T20945 v  Duplicate logic from lines 525 - 529
         IF SQV.MON > XX.MON THEN
            VCH.MON = SQV.MON
         END ELSE
            VCH.MON = XX.MON
         END
*T20945 ^
* Task 17919
* Upate Accrued Liability History
*** T24522 v
         ACC.WORK.DIV=GEN.DIV ; ACC.WORK.DEPT=GEN.DEPT ; ACC.WORK.CCTR=GEN.CCTR
         BEGIN CASE
            CASE VVOS.PO.TYPE<1,VV> = "R"
               MATREAD PO.REC FROM PO, CONO:VVOS.PO.NO<1,VV> ELSE MAT PO.REC=""
               MATREAD INV.REC FROM INVENTORY, CONO:VVOS.PROD<1,VV> ELSE MAT INV.REC=""
               MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
*** T24522 v
               MATREAD WHSE.REC FROM WAREHOUSE,CONO:VVOS.WHSE<1,VV> ELSE MAT WHSE.REC=''
               ACC.WORK.DIV = WHS.DIV
               ACC.WORK.DEPT = GEN.DEPT
               ACC.WORK.CCTR = GEN.CCTR
*** T24522^
               ACCRUE.FLAG = PO.ACCRUE
               ACCRUE.REF = "R*":VVOS.PO.NO<1,VV>:"*":VVOS.PROD<1,VV>
               ACCRUE.SRC = "IV"
               ACCRUE.ACCT = CATG.ACCRU.LIAB
            CASE VVOS.PO.TYPE<1,VV> = "M"
               MATREAD MPO.REC FROM MISC.PO, CONO:VVOS.PO.NO<1,VV> ELSE MAT MPO.REC=""
               LOCATE VVOS.SEQ.NO<1,VV> IN MPO.SEQ.NO<1>,1 SETTING POFND ELSE POFND = 0
               MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,POFND> ELSE MAT CAMISC.REC=""
*** T24522 v
               ACC.WORK.DIV = MPO.MISC.DIV<1,POFND>
               ACC.WORK.DEPT = MPO.MISC.DEPT<1,POFND>
               ACC.WORK.CCTR = MPO.MISC.CCTR<1,POFND>
** T24522^
               ACCRUE.FLAG = MPO.ACCRUE
               ACCRUE.REF = "M*":VVOS.PO.NO<1,VV>:"*":VVOS.PROD<1,VV>
               ACCRUE.SRC = "MV"
               ACCRUE.ACCT = CAMISC.CRED.EXP
            CASE 1
               MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VVOS.PO.NO<1,VV> ELSE MAT OPO.REC=""
               POPTR = 1
               LOOP
                  LOCATE VVOS.PROD<1,VV> IN OPO.JOB.NO<1>,POPTR SETTING POFND THEN
*T25755 v
*                       IF VVOS.WHSE<1,VV> = OPO.PROD.LINE<1,POFND> THEN POPTR = 0
                     IF VVOS.PO.SEQ<1,VV> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
*T25755 ^
                  END ELSE
                     POPTR = 0; POFND = 0
                  END
               WHILE POPTR DO
                  POPTR = POFND + 1
               REPEAT
               MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POFND> ELSE MAT CAOS.REC=""
*** T24522 v
               ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>
               ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>
               ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>
*** T24522^
               ACCRUE.FLAG = OPO.ACCRUE
               ACCRUE.REF = "O*":VVOS.PO.NO<1,VV>:"*":VVOS.PROD<1,VV>
               ACCRUE.SRC = "OV"
               ACCRUE.ACCT = CAOS.ACCRU.LIAB
               ACCRUE.OFFACCT = CAOS.WIP ;*T23880 
         END CASE
         IF ACCRUE.FLAG = "Y" THEN
            READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0
            ALH.CT = ALH.CT + 1
            IF ALH.CT > 999999 THEN ALH.CT = 1
            WRITE ALH.CT ON CONTROL,CONO:"ALHCOUNTER"
            MAT ALH.REC = ""
            ALH.ID = CONO:STR("0",6-LEN(ALH.CT)):ALH.CT
            ALH.DATE = DATE()
            ALH.REF = ACCRUE.REF
            ALH.SRC = ACCRUE.SRC
            ALH.MON = VCH.MON
            ALH.AMT = 0 - VVOS.PROD.COST<1,VV>
            ALH.ACCT = ACCRUE.ACCT
*** T24522 v
            ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK.CCTR"R%3"
            ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880  
            MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID
         END
         TYPE=VVOS.PO.TYPE<1,VV>
         VSTAT.KEY = CONO:DCR.VEND<1,1>:"!":TYPE
         VPS.KEY = VSTAT.KEY :"!": VVOS.PO.NO<1,VV>
         IF TYPE = 'M' THEN
            VPDS.KEY = VPS.KEY :"!": VVOS.SEQ.NO<1,VV> :"!": VVOS.WHSE<1,VV>
         END ELSE
*T25755 v
*              VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>
*T28779 IF TYPE = "O" THEN
            IF TYPE = "O" OR TYPE = 'R' THEN
               VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>:"@":VVOS.PO.SEQ<1,VV>
            END ELSE
               VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>
            END
*T25755 ^
         END
         MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY THEN
*T25632 v
            FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1
*            LOCATE VOUCH.NO IN VPDS.VOU.NO<1> SETTING VAL THEN
               LOCATE VOUCH.NO IN VPDS.VOU.NO<1,VVV>,1 SETTING VAL THEN
*               DEL VPDS.VOU.NO<1,VAL>
                  DEL VPDS.VOU.NO<1,VVV,VAL>
*               DEL VPDS.VOU.DATE<1,VAL>
                  DEL VPDS.VOU.DATE<1,VVV,VAL>
*               DEL VPDS.INV.NO<1,VAL>
                  DEL VPDS.INV.NO<1,VVV,VAL>
*               DEL VPDS.INV.DATE<1,VAL>
                  DEL VPDS.INV.DATE<1,VVV,VAL>
*               DEL VPDS.QTY<1,VAL>
                  DEL VPDS.QTY<1,VVV,VAL>
*               DEL VPDS.UN.COST<1,VAL>
                  DEL VPDS.UN.COST<1,VVV,VAL>
*               DEL VPDS.PERIOD<1,VAL>
                  DEL VPDS.PERIOD<1,VVV,VAL>
*               DEL VPDS.ENT.FLG<1,VAL>
                  DEL VPDS.ENT.FLG<1,VVV,VAL>
               END
            NEXT VVV
*T25632 ^
            IF VPDS.ORD.DATE='' AND VPDS.REC.DATE='' AND VPDS.VOU.DATE='' THEN
               DELETE VEND.PROD.STATS, VPDS.KEY
            END ELSE
               MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
            END
         END ELSE
            RELEASE VEND.PROD.STATS, VPDS.KEY
         END
         MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY THEN
            IF TYPE='M' THEN
               LOCATE VVOS.SEQ.NO<1,VV> IN VPS.SEQ.NO<1> SETTING VAL THEN
                  VPS.VOU.QTY<1,VAL> = VPS.VOU.QTY<1,VAL> - VVOS.VOU.QTY<1,VV>
                  VPS.VOU.AMT<1,VAL> = VPS.VOU.AMT<1,VAL> - VVOS.PROD.COST<1,VV>
                  LOCATE VOUCH.NO IN VPS.VOU.NO<1,VAL> SETTING VAL2 THEN
                     DEL VPS.VOU.NO<1,VAL,VAL2>
                  END
                  MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
               END
            END ELSE
* (TYPE NOT 'M')
*T28779 v
               PPTR=1
               LOOP
*         LOCATE VVOS.PROD<1,VV> IN VPS.PROD<1> SETTING VAL THEN
                  LOCATE VVOS.PROD<1,VV> IN VPS.PROD<1>,PPTR SETTING VAL THEN
                     IF VVOS.WHSE<1,VV>:"@":VVOS.PO.SEQ<1,VV> = VPS.WHSE<1,VAL> THEN
                        PPTR = 0
                     END
                  END ELSE PPTR = 0
               UNTIL PPTR = 0 DO
                  PPTR += 1
               REPEAT
*T28779 ^
               VPS.VOU.QTY<1,VAL> = VPS.VOU.QTY<1,VAL> - VVOS.VOU.QTY<1,VV>
               VPS.VOU.AMT<1,VAL> = VPS.VOU.AMT<1,VAL> - VVOS.PROD.COST<1,VV>
               LOCATE VOUCH.NO IN VPS.VOU.NO<1,VAL> SETTING VAL2 THEN
                  DEL VPS.VOU.NO<1,VAL,VAL2>
               END
               MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
*T28779 ^   END
         END
      END ELSE
         RELEASE VEND.PO.STATS, VPS.KEY
      END
      MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY THEN
         LOCATE VVOS.PO.NO<1,VV> IN VSTAT.PO<1> SETTING VAL THEN
            VSTAT.PO.VOUCH<1,VAL>=VSTAT.PO.VOUCH<1,VAL> - VVOS.PROD.COST<1,VV>
            LOCATE VOUCH.NO IN VSTAT.VOUCH.NOS<1,VAL> SETTING VAL2 THEN
               DEL VSTAT.VOUCH.NOS<1,VAL,VAL2>
            END
            MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
         END
      END ELSE
         RELEASE VEND.STATS, VSTAT.KEY
      END
   NEXT VV
   DELETE VEND.VOUCH.STATS, CONO:DCR.VEND<1,1>:"!":VOUCH.NO
1009*
NEXT TR
* Reverse original vouchers distrbution accts/amts
FOR FV = 1 TO DCR.CTR
   MATREAD SQV.REC FROM SQV, CONO:DCR.VOUCH<1,FV> ELSE
      MAT SQV.REC = ""
   END
   IF SQV.MON > XX.MON THEN
      VCH.MON = SQV.MON
   END ELSE
      VCH.MON = XX.MON
   END
   VCH.ACCT = DCR.ACCT<1,FV>
   VCH.DIST.AMT = DCR.DIST.AMT<1,FV> * (-1)
   VCH.DIV = DCR.DIV<1,FV>
   VCH.DEPT = DCR.DEPT<1,FV>
   VCH.CCTR = DCR.CCTR<1,FV>
   VCH.JOB = DCR.JOB<1,FV>
   VCH.ASSET = DCR.ASSET.ID<1,FV>
   MATWRITE VCH.REC ON VOUCHERS , CONO:DCR.CHECK.NO:FV:'V'
   TAG = ''
   WRITE TAG ON VOUCHERS.TAG , CONO:DCR.CHECK.NO:FV:'V'
NEXT FV
*
*   TASK 17919
*
* Create VOUCHERS txn for reversal of A/P details
*
VCH.JOB=""
VCH.ASSET=""
VCH.DIV=""
VCH.DEPT=""
VCH.CCTR=""
VCH.CTR=1
AP.CNT=COUNT(AP.ACCT,VM) + (AP.ACCT # "")
*
* If no A/P details use default G/L A/P account
*
IF AP.CNT=0 THEN
   IF DCR.GRS.AMT+0 # 0 THEN
      AP.CNT=1
      AP.ACCT=GLTB.AP
      AP.AMT=DCR.GRS.AMT
      AP.NET=DCR.GRS.AMT
*T19149 V
***** T23278 v
      IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> "Y" THEN
         VCH.DIV = DIV.CODE
      END ELSE
***** T23278 ^
         VCH.DIV = GEN.DIV
      END ;* T23278
      VCH.DEPT = GEN.DEPT
      VCH.CCTR = GEN.CCTR
*T19149 ^      
      VCH.ACCT=GLTB.AP
      VCH.DIST.AMT=DCR.GRS.AMT
      SUPP=DCR.CTR + 1
      MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
      WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
   END
END ELSE
   CALL AMOUNT.DIST.SUB(AP.ACCT,AP.AMT,DCR.GRS.AMT,AP.NET,0,AP.DSC,ERR)
   SUPP=DCR.CTR
   VCH.CTR=AP.CNT
   FOR A=1 TO AP.CNT
      IF AP.NET<1,A>+0#0 THEN
         VCH.ACCT=AP.ACCT<1,A>
         VCH.DIST.AMT=AP.NET<1,A>
*T19149 v
*                 VCH.DIV =  AP.DIV<1,A,1>
         VCH.DIV =  APDIV<1,A,1>   ;* T24587
*                 VCH.DEPT = AP.DEPT<1,A,1>
         VCH.DEPT = APDEPT<1,A,1>   ;* T24587
*                 VCH.CCTR = AP.CCTR<1,A,1>
         VCH.CCTR = APCCTR<1,A,1>   ;* T24587
*T19149 ^            
         SUPP=SUPP+1
         MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
         WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
      END
   NEXT A
END
*
CALL AMOUNT.DIST.SUB(DCR.DIV,DCR.DIST.AMT,DCR.GRS.AMT,ALL.GRS,DCR.DSC.AMT,ALL.DSC,ERRMSG)
LOCATE "REVERS" IN MCD.VOUCH<1>,1 SETTING VFND ELSE
   MCD.VOUCH<1,VFND> = "REVERS"
   MCD.VOUCH.GRS<1,VFND> = ""
   MCD.VOUCH.DSC<1,VFND> = ""
   MCD.VOUCH.NET<1,VFND> = ""
   MCD.DIV<1,VFND> = ""
   MCD.DEPT<1,VFND> = ""
   MCD.CCTR<1,VFND> = ""
END
FOR FV = 1 TO DCR.CTR
   DPTR = 1
   LOOP
      LOCATE DCR.DIV<1,FV> IN MCD.DIV<1,VFND>,DPTR SETTING DFND ELSE
         MCD.DIV<1,VFND,DFND> = DCR.DIV<1,FV>
         MCD.DEPT<1,VFND,DFND> = DCR.DEPT<1,FV>
         MCD.CCTR<1,VFND,DFND> = DCR.CCTR<1,FV>
         MCD.VOUCH.GRS<1,VFND,DFND> = DCR.DIST.AMT<1,FV> * (-1)
         MCD.VOUCH.DSC<1,VFND,DFND> = ALL.DSC<1,FV> * (-1)
         MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
         DPTR = 0
      END
      BEGIN CASE
         CASE DPTR = 0
         CASE MCD.DEPT<1,VFND,DFND> # DCR.DEPT<1,FV>
            DPTR = DFND + 1
         CASE MCD.CCTR<1,VFND,DFND> # DCR.CCTR<1,FV>
            DPTR = DFND + 1
         CASE 1
            MCD.VOUCH.GRS<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> + DCR.DIST.AMT<1,FV> * (-1)
            MCD.VOUCH.DSC<1,VFND,DFND> = MCD.VOUCH.DSC<1,VFND,DFND> + ALL.DSC<1,FV> * (-1)
            MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
            DPTR = 0
      END CASE
   WHILE DPTR DO
   REPEAT
NEXT FV
*
*  TASK 17919
*
* Reverse A/P details on MCD
*
AP.VOUCH="REVERS"
FOR AP=1 TO AP.CNT
   AP.DIV=APDIV<1,AP>
   AP.DEPT=APDEPT<1,AP>
   AP.CCTR=APCCTR<1,AP>
   AP.BANK.ACCT = AP.ACCT<1,AP>
   AP.VOUCH.GRS=AP.NET<1,AP>
   AP.VOUCH.NET=AP.NET<1,AP>
   AP.KEY=CONO:"V":AP.ACCT<1,AP>:TODAY:MCD.CHECK:"!AP"
   MATWRITE AP.REC ON MCD,AP.KEY
   WRITE '' ON MCD.TAG,AP.KEY
NEXT AP
END ELSE            ;*  DCR.REV.FLAG # Y
PAID.AMT = 0
PAID.DSC = 0
ALL.ACCT = DCR.ACCT
ALL.DIV = DCR.DIV
ALL.DEPT = DCR.DEPT
ALL.CCTR = DCR.CCTR
ALL.AMT = DCR.DIST.AMT
ALL.EQUIP = DCR.ASSET.ID
ALL.DSC = DCR.DSC
AP.ACCT='' ; AP.AMT='' ; AP.NET='' ; AP.DSC=''
TR.CNT = COUNT(DCR.VOUCH,VM) + (DCR.VOUCH # "")
FOR TR = 1 TO TR.CNT
   MATREADU SQV.REC FROM SQV, CONO : DCR.VOUCH<1,TR> ELSE
      RELEASE SQV, CONO : DCR.VOUCH<1,TR>
      GOTO 1099
   END
   PTR = 1
   LOOP
      LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1>,PTR SETTING FND ELSE FND = 0
      BEGIN CASE
         CASE FND = 0
            PTR = 0
         CASE DCR.DISB.ACCT # SQV.DISB.ACCT<1,FND>
            PTR = FND + 1
         CASE APCK.DATE # SQV.PAID.DATE<1,FND>
            PTR = FND + 1
         CASE 1
            PAID.AMT = PAID.AMT + SQV.PAID.AMT<1,FND>
            PAID.DSC = PAID.DSC + SQV.DSC.PAID<1,FND>
            PAID.GRS = SQV.PAID.AMT<1,FND> + SQV.DSC.PAID<1,FND>
            CALL AMOUNT.DIST.SUB(SQV.DIV,SQV.DIST.AMT,PAID.GRS,ALL.NET,SQV.DSC.PAID<1,FND>,TEMP.DSC,ERRMSG)
            DCNT = COUNT(SQV.DIST.AMT,VM) + (SQV.DIST.AMT # "")
            FOR D = 1 TO DCNT
               DPTR = 1
               LOOP
                  LOCATE SQV.ACCT<1,D> IN ALL.ACCT<1>,DPTR SETTING DFND ELSE DFND = 0
                  BEGIN CASE
                     CASE DFND = 0
                        DPTR = 0
                     CASE ALL.DIV<1,DFND> # SQV.DIV<1,D>
                        DPTR = DFND + 1
                     CASE ALL.DEPT<1,DFND> # SQV.DEPT<1,D>
                        DPTR = DFND + 1
                     CASE ALL.CCTR<1,DFND> # SQV.CCTR<1,D>
                        DPTR = DFND + 1
                     CASE ALL.EQUIP<1,DFND> # SQV.ASSET<1,D>
                        DPTR = DFND + 1
                     CASE 1
                        ALL.AMT<1,DFND> = ALL.AMT<1,DFND> - ALL.NET<1,D>
                        ALL.DSC<1,DFND> = ALL.DSC<1,DFND> - TEMP.DSC<1,D>
                        DPTR = 0
                  END CASE
               WHILE DPTR DO
               REPEAT
            NEXT D
            AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")
            FOR AP=1 TO AP.CNT
               LOCATE SQV.AP.ACCT<1,AP> IN AP.ACCT<1>,1 SETTING AFND ELSE
                  AP.ACCT<1,AFND>=SQV.AP.ACCT<1,AP>
                  APDIV<1,AFND> =SQV.AP.DIV<1,AP>
                  APDEPT<1,AFND>=SQV.AP.DEPT<1,AP>
                  APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>
                  AP.AMT<1,AFND>=0
               END
               AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>
            NEXT AP
            PTR = 0
      END CASE
   WHILE PTR DO
   REPEAT
   IF FND = 0 THEN
      RELEASE SQV, CONO : DCR.VOUCH<1,TR>
      GOTO 1099
   END
   CCNT = COUNT(SQV.CHK.NO,VM) + (SQV.CHK.NO # "") + 1
   REM SQV.CHK.NO<1,CCNT> = SQV.CHK.NO<1,FND>
   SQV.CHK.NO<1,CCNT> = "REVERS"
   SQV.DISB.ACCT<1,CCNT> = SQV.DISB.ACCT<1,FND>
*T27984 v
*   SQV.PAID.DATE<1,CCNT> = TODAY
   SQV.PAID.DATE<1,CCNT> = APCK.DATE
   SQV.PAID.AMT<1,CCNT> = SQV.PAID.AMT<1,FND> * (-1)
   SQV.DSC.PAID<1,CCNT> = SQV.DSC.PAID<1,FND> * (-1)
   FND.OAP = 1
   MATREADU OAP.REC FROM OAP, CONO : DCR.VOUCH<1,TR> ELSE FND.OAP = 0
   IF FND.OAP THEN
      IF OAP.DUE.DATE = "ADVANCE" AND FND = 1 THEN OAP.DUE.DATE = OAP.INV.DATE
      OAP.PAID.AMT = OAP.PAID.AMT - SQV.PAID.AMT<1,FND>
      OAP.DSC.PAID = OAP.DSC.PAID - SQV.DSC.PAID<1,FND>
   END ELSE
      MAT OAP.REC = ""
      OAP.VEND = SQV.VEND
      OAP.INV = SQV.INV
      OAP.INV.DATE = SQV.INV.DATE
      OAP.MER.AMT = SQV.MER.AMT
      IF SQV.DUE.DATE = "ADVANCE" THEN
         OAP.GRS.AMT = SQV.GRS.AMT * (-1)
         OAP.DSC.AMT = SQV.DSC.AMT * (-1)
      END ELSE
         OAP.GRS.AMT = SQV.GRS.AMT
         OAP.DSC.AMT = SQV.DSC.AMT
      END
      OAP.CTR = SQV.CTR
      OAP.ACCT = SQV.ACCT
      OAP.DIST.AMT = SQV.DIST.AMT
      IF SQV.DUE.DATE = "ADVANCE" THEN ST.CC=2 ELSE ST.CC=1
      FOR CC = ST.CC TO CCNT
         OAP.PAID.AMT = OAP.PAID.AMT + SQV.PAID.AMT<1,CC>
         OAP.DSC.PAID = OAP.DSC.PAID + SQV.DSC.PAID<1,CC>
      NEXT CC
      OAP.JOB = SQV.JOB
      OAP.ASSET.ID = SQV.ASSET
      OAP.TERMS = SQV.TERMS
      OAP.DIV = SQV.DIV
      OAP.DEPT = SQV.DEPT
      OAP.CCTR = SQV.CCTR
      OAP.MON = SQV.MON
      OAP.COMMENT = SQV.COMMENT
      OAP.MISC.CAT=SQV.MISC.CAT
      OAP.AP.ACCT=SQV.AP.ACCT
      OAP.AP.AMT=SQV.AP.AMT
      OAP.AP.DIV=SQV.AP.DIV
      OAP.AP.DEPT=SQV.AP.DEPT
      OAP.AP.CCTR=SQV.AP.CCTR
      OAP.DIV.OWNER = SQV.DIV.OWNER
   END
   OAP.DUE.DATE = SQV.DUE.DATE
   OAP.PAID.DATE = ''
   OAP.DISB.ACCT = ''
   OAP.CHK.NO = "REVERS"
   MATWRITE OAP.REC ON OAP, CONO : DCR.VOUCH<1,TR>
   MATWRITE SQV.REC ON SQV, CONO : DCR.VOUCH<1,TR>
   LOCATE DCR.VOUCH<1,TR> IN MCD.VOUCH<1>,1 SETTING VFND ELSE
      MCD.VOUCH<1,VFND> = DCR.VOUCH<1,TR>
      MCD.VOUCH.GRS<1,VFND> = ""
      MCD.VOUCH.DSC<1,VFND> = ""
      MCD.VOUCH.NET<1,VFND> = ""
      MCD.DIV<1,VFND> = ""
      MCD.DEPT<1,VFND> = ""
      MCD.CCTR<1,VFND> = ""
   END
   FOR FV = 1 TO SQV.CTR
      DPTR = 1
      LOOP
         LOCATE SQV.DIV<1,FV> IN MCD.DIV<1,VFND>,DPTR SETTING DFND ELSE
            MCD.DIV<1,VFND,DFND> = SQV.DIV<1,FV>
            MCD.DEPT<1,VFND,DFND> = SQV.DEPT<1,FV>
            MCD.CCTR<1,VFND,DFND> = SQV.CCTR<1,FV>
            MCD.VOUCH.GRS<1,VFND,DFND> = ALL.NET<1,FV> * (-1)
            MCD.VOUCH.DSC<1,VFND,DFND> = TEMP.DSC<1,FV> * (-1)
            MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
            DPTR = 0
         END
         BEGIN CASE
            CASE DPTR = 0
            CASE MCD.DEPT<1,VFND,DFND> # SQV.DEPT<1,FV>
               DPTR = DFND + 1
            CASE MCD.CCTR<1,VFND,DFND> # SQV.CCTR<1,FV>
               DPTR = DFND + 1
            CASE 1
               MCD.VOUCH.GRS<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> + ALL.NET<1,FV> * (-1)
               MCD.VOUCH.DSC<1,VFND,DFND> = MCD.VOUCH.DSC<1,VFND,DFND> + TEMP.DSC<1,FV> * (-1)
               MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
               DPTR = 0
         END CASE
      WHILE DPTR DO
      REPEAT
   NEXT FV
*
*  TASK 17919
*
* Reverse voucher paid amts as per A/P distribution
*
   CALL AMOUNT.DIST.SUB(SQV.AP.ACCT,SQV.AP.AMT,PAID.GRS,AP.NET,0,AP.DSC,ERR)
   ACNT=COUNT(SQV.AP.ACCT,VM)+(SQV.AP.ACCT#"")
   FOR A=1 TO ACNT
*T26924 v
      IF AP.NET<1,A>+0#0 THEN
*T26924 ^
*T26387 v   IF AP.AMT<1,A> + 0 # 0 THEN
*T26924     IF SQV.AP.AMT<1,A> + 0 # 0 THEN
         AP.KEY=CONO:"V":SQV.AP.ACCT<1,A>:TODAY:MCD.CHECK:"!AP"
         MATREADU AP.REC FROM MCD,AP.KEY ELSE GOSUB 2000
         LOCATE AP.KEY IN AP.REV<1>,1 SETTING RFND ELSE
            GOSUB 2000
            AP.REV<1,RFND>=AP.KEY
         END
         AP.BANK.ACCT=SQV.AP.ACCT<1,A>
         LOCATE DCR.VOUCH<1,TR> IN AP.VOUCH<1>,1 SETTING AF ELSE
            AP.VOUCH<1,AF>=DCR.VOUCH<1,TR>
            AP.VOUCH.GRS<1,AF>=0
            AP.VOUCH.NET<1,AF>=0
            AP.VOUCH.DSC<1,AF>=0
         END
*T26924 v
         AP.VOUCH.GRS<1,AF>=AP.VOUCH.GRS<1,AF>+AP.NET<1,A>
         AP.VOUCH.NET<1,AF>=AP.VOUCH.NET<1,AF>+AP.NET<1,A>
*T26924 ^
*T22155 v
*T26387        AP.DIV<1,AF>=APDIV<1,A>
         AP.DIV<1,AF>=SQV.AP.DIV<1,A>
*T26387        AP.DEPT<1,AF>=APDEPT<1,A>
         AP.DEPT<1,AF>=SQV.AP.DEPT<1,A>
*T26387        AP.CCTR<1,AF>=APCCTR<1,A>
         AP.CCTR<1,AF>=SQV.AP.CCTR<1,A>
*T22155 ^
         MATWRITE AP.REC ON MCD,AP.KEY
         WRITE '' ON MCD.TAG,AP.KEY
      END
   NEXT A
1099*
NEXT TR
DCNT = COUNT(ALL.AMT,VM) + (ALL.AMT # "")
FOR D = DCNT TO 1 STEP - 1
   IF ALL.AMT<1,D> + 0 = 0 AND ALL.DSC<1,D> + 0 = 0 THEN
      ALL.ACCT = DELETE(ALL.ACCT,1,D,0)
      ALL.DIV = DELETE(ALL.DIV,1,D,0)
      ALL.DEPT = DELETE(ALL.DEPT,1,D,0)
      ALL.CCTR = DELETE(ALL.CCTR,1,D,0)
      ALL.AMT = DELETE(ALL.AMT,1,D,0)
      ALL.EQUIP = DELETE(ALL.EQUIP,1,D,0)
      ALL.DSC = DELETE(ALL.DSC,1,D,0)
   END
NEXT D
DCNT = COUNT(ALL.AMT,VM) + (ALL.AMT # "")
IF DCR.GRS.AMT # (PAID.AMT + PAID.DSC) AND DCNT > 0 THEN
   MAT VCH.REC = ""
   VCH.VEND = DCR.VEND
   VCH.INV = DCR.INV
   VCH.INV.DATE = DCR.INV.DATE
   VCH.DUE.DATE = DCR.DUE.DATE
   VCH.GRS.AMT = (DCR.GRS.AMT - PAID.AMT - PAID.DSC) * (-1)
   VCH.MER.AMT = VCH.GRS.AMT
   VCH.DSC.AMT = (DCR.DSC.AMT - PAID.DSC) * (-1)
   VCH.CTR = DCNT
   XX.MON = FIELD(VOU.ID,"!",4)
   VCH.DESC = "CHECK REVERSAL"
   VCH.JOB = ''
   VCH.PO = DCR.PO
   FOR FV = 1 TO DCNT
      MATREAD SQV.REC FROM SQV, CONO:DCR.VOUCH<1,FV> ELSE
         MAT SQV.REC = ""
      END
      IF SQV.MON > XX.MON THEN
         VCH.MON = SQV.MON
      END ELSE
         VCH.MON = XX.MON
      END
      VCH.ACCT = ALL.ACCT<1,FV>
      VCH.DIST.AMT = ALL.AMT<1,FV> * (-1)
      VCH.DIV = ALL.DIV<1,FV>
      VCH.DEPT = ALL.DEPT<1,FV>
      VCH.CCTR = ALL.CCTR<1,FV>
      VCH.ASSET = ALL.EQUIP<1,FV>
      MATWRITE VCH.REC ON VOUCHERS , CONO:DCR.CHECK.NO:FV:'V'
      TAG = ''
      WRITE TAG ON VOUCHERS.TAG , CONO:DCR.CHECK.NO:FV:'V'
   NEXT FV
*
* TASK 17919
*
* Create VOUCHERS txn for A/P details
*
   VCH.JOB=""
   VCH.ASSET=""
   VCH.DIV=""
   VCH.DEPT=""
   VCH.CCTR=""
   VCH.CTR=1
   AP.CNT=COUNT(AP.ACCT,VM) + (AP.ACCT # "")
*
* If no A/P details use default G/L A/P account
*
   IF AP.CNT=0 THEN
      IF DCR.GRS.AMT - PAID.AMT - PAID.DSC # 0 THEN
         VCH.ACCT=GLTB.AP
         VCH.DIST.AMT=DCR.GRS.AMT - PAID.AMT - PAID.DSC
         AP.CNT=1
         AP.ACCT=GLTB.AP
         AP.NET=VCH.DIST.AMT
         AP.AMT=VCH.DIST.AMT
         IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN 
            VCH.DIV = DIV.CODE
         END ELSE
            VCH.DIV=GEN.DIV
         END ;* T23278
         VCH.DEPT=GEN.DEPT
         VCH.CCTR=GEN.CCTR
         SUPP=DCNT+1
         MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
         WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
      END
   END ELSE
      AP.GRS=DCR.GRS.AMT-PAID.AMT-PAID.DSC
      CALL AMOUNT.DIST.SUB(AP.ACCT,AP.AMT,AP.GRS,AP.NET,0,AP.DSC,ERR)
      SUPP=DCNT
      VCH.CTR=AP.CNT
      FOR AP=1 TO AP.CNT
         IF AP.NET<1,AP>+0 # 0 THEN
            VCH.ACCT=AP.ACCT<1,AP>
            VCH.DIST.AMT=AP.NET<1,AP>
*T19149 v
*                     VCH.DIV = AP.DIV<1,AP,1>
            VCH.DIV = APDIV<1,AP,1>   ;* T24587
*                     VCH.DEPT = AP.DEPT<1,AP,1>
            VCH.DEPT = APDEPT<1,AP,1>   ;* T24587
*                     VCH.CCTR = AP.CCTR<1,AP,1>
            VCH.CCTR = APCCTR<1,AP,1>   ;* T24587
*T19149 ^          
            SUPP=SUPP+1
            MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
            WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
         END
      NEXT AP
   END
   LOCATE "REVERS" IN MCD.VOUCH<1>,1 SETTING VFND ELSE
      MCD.VOUCH<1,VFND> = "REVERS"
      MCD.VOUCH.GRS<1,VFND> = ""
      MCD.VOUCH.DSC<1,VFND> = ""
      MCD.VOUCH.NET<1,VFND> = ""
      MCD.DIV<1,VFND> = ""
      MCD.DEPT<1,VFND> = ""
      MCD.CCTR<1,VFND> = ""
   END
   FOR FV = 1 TO DCNT
      DPTR = 1
      LOOP
         LOCATE ALL.DIV<1,FV> IN MCD.DIV<1,VFND>,DPTR SETTING DFND ELSE
            MCD.DIV<1,VFND,DFND> = ALL.DIV<1,FV>
            MCD.DEPT<1,VFND,DFND> = ALL.DEPT<1,FV>
            MCD.CCTR<1,VFND,DFND> = ALL.CCTR<1,FV>
            MCD.VOUCH.GRS<1,VFND,DFND> = ALL.AMT<1,FV> * (-1)
            MCD.VOUCH.DSC<1,VFND,DFND> = ALL.DSC<1,FV> * (-1)
            MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
            DPTR = 0
         END
         BEGIN CASE
            CASE DPTR = 0
            CASE MCD.DEPT<1,VFND,DFND> # ALL.DEPT<1,FV>
               DPTR = DFND + 1
            CASE MCD.CCTR<1,VFND,DFND> # ALL.CCTR<1,FV>
               DPTR = DFND + 1
            CASE 1
               MCD.VOUCH.GRS<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> + ALL.AMT<1,FV> * (-1)
               MCD.VOUCH.DSC<1,VFND,DFND> = MCD.VOUCH.DSC<1,VFND,DFND> + ALL.DSC<1,FV> * (-1)
               MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> - MCD.VOUCH.DSC<1,VFND,DFND>
               DPTR = 0
         END CASE
      WHILE DPTR DO
      REPEAT
   NEXT FV
*
*  TASK 17919
*
* Reverse diff between entered and calculated cheque amounts for A/P
*
   FOR A=1 TO AP.CNT
      IF AP.NET<1,A>+0#0 THEN
         AP.KEY=CONO:"V":AP.ACCT<1,A>:TODAY:MCD.CHECK:"!AP"
         MATREADU AP.REC FROM MCD,AP.KEY ELSE GOSUB 2000
         LOCATE AP.KEY IN AP.REV<1>,1 SETTING RFND ELSE
            GOSUB 2000
            AP.REV<1,RFND>=AP.KEY
         END
         AP.BANK.ACCT=AP.ACCT<1,A>
         LOCATE "REVERS" IN AP.VOUCH<1>,1 SETTING AF ELSE
            AP.VOUCH<1,AF>="REVERS"
            AP.VOUCH.GRS<1,AF>=0
            AP.VOUCH.NET<1,AF>=0
            AP.VOUCH.DSC<1,AF>=0
         END
         AP.VOUCH.GRS<1,AF>=AP.VOUCH.GRS<1,AF>+AP.NET<1,A>
         AP.VOUCH.NET<1,AF>=AP.VOUCH.NET<1,AF>+AP.NET<1,A>
         MATWRITE AP.REC ON MCD,AP.KEY
         WRITE '' ON MCD.TAG,AP.KEY
      END
   NEXT A
END
END
IF CO.CHK.RECON # "N" THEN
   APCK.CODE = "V"
   APCK.SEQ = "1"
   APCK.COMM = "*** CANCELLED ON ":OCONV(TODAY,"D2")
   MATWRITE APCK.REC ON APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO
END
CKRV.VEND = DCR.VEND<1,1>
CKRV.CHK.NO = DCR.CHECK.NO
CKRV.CHK.DATE = APCK.DATE
CKRV.JOB.CAT = DCR.JOB
CKRV.GL.ACCT = DCR.ACCT
CKRV.CTR = DCR.CTR
IF VEND.DESC = "" THEN
   CKRV.VEND.NA = DCR.VEND<1,2>
END ELSE
   CKRV.VEND.NA = VEND.DESC
END
CKRV.ASSET.ID = DCR.ASSET.ID
CKRV.DISB.ACCT = DCR.DISB.ACCT
CKRV.DIST.AMT = DCR.DIST.AMT
CKRV.DIV = DCR.DIV
CKRV.DEPT = DCR.DEPT
CKRV.CCTR = DCR.CCTR
*C26505 v
CKRV.DSC = DCR.DSC
CKRV.VOUCH = DCR.VOUCH
*C26505 ^
MATWRITE CKRV.REC ON CKREV , CONO:DCR.CHECK.NO
IF CO.APHIST.FLG # "N" THEN
   MAT APH.REC = ''
   APH.VEND = CKRV.VEND
   APH.GRS.AMT = DCR.GRS.AMT * (-1)
   APH.MER.AMT = (DCR.GRS.AMT - DCR.DSC.AMT) * (-1)
   APH.DSC.AMT = DCR.DSC.AMT * (-1)
   APH.MON = FIELD(VOU.ID,"!",4)
   APH.FLAG = "   Y"
   MATWRITE APH.REC ON AP.HIST , CONO:DCR.CHECK.NO:TODAY
END
IF DCR.REV.FLAG # "Y" THEN
   IF LEN(DCR.VEND<1,1>) = 8 THEN
      SVEND.OP.BAL = SVEND.OP.BAL + PAID.AMT + PAID.DSC
   END ELSE
      VEND.OP.BAL = VEND.OP.BAL + PAID.AMT + PAID.DSC
   END
END
IF LEN(DCR.VEND<1,1>) = 8 THEN
   SVEND.PD.M.T.D = SVEND.PD.M.T.D + ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
   SVEND.PD.Y.T.D = SVEND.PD.Y.T.D + ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
END ELSE
   VEND.PD.M.T.D = VEND.PD.M.T.D + ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
   VEND.PD.Y.T.D = VEND.PD.Y.T.D + ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
END
IF LEN(DCR.VEND<1,1>) = 8 THEN
   MATWRITE SVEND.REC ON VEND , CONO:DCR.VEND<1,1>[1,5]
END ELSE
   MATWRITE VEND.REC ON VEND , CONO:DCR.VEND<1,1>
END
MCD.CHECK = DCR.CHECK.NO
MCD.BANK.ACCT = DCR.DISB.ACCT
MCD.NO.OF.CHK = 1
MCD.GRS.AMT = DCR.GRS.AMT * (-1)
MCD.DSC.AMT = DCR.DSC.AMT * (-1)
MCD.NET.AMT = ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
MCD.CHK.DATE = TODAY
MCD.VEND = DCR.VEND<1,1>
MCD.MON = FR.CURR.PER<1,POS>;* T23278
MATWRITE MCD.REC ON MCD , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.CHECK
TAG = ''
WRITE TAG ON MCD.TAG , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.CHECK
IF CO.FAS = "Y"  AND DCR.ASSET.ID # "" THEN
   FOR AG = 1 TO DCR.CTR
      IF DCR.ASSET.ID<1,AG> # "" THEN
         READV REP.NO FROM CONTROL , CONO:"REPAIR-NO",1 ELSE REP.NO = 0
         REP.NO = REP.NO + 1
         WRITEV REP.NO ON CONTROL , CONO:"REPAIR-NO",1
         RPR.CHARGE = DCR.DIST.AMT<1,AG> * (-1)
         RPR.DATE = TODAY
         RPR.COMMET = DCR.CHECK.NO:" - CHECK REVERSAL"
         RPR.JOB = DCR.JOB<1,AG>[1,6]
         RPR.JOB.AMT = DCR.DIST.AMT<1,AG> * (-1)
         RPR.CATEGORY = DCR.JOB<1,AG>[7,3]
         RPR.SOURCE = "AP"
         MATWRITE RPR.REC ON REPAIRS , CONO:DCR.ASSET.ID<1,AG>:STR("0",3-LEN(REP.NO)):REP.NO
         MATREAD EQP.REC FROM EQUIP.FILE , CONO:DCR.ASSET.ID<1,AG> ELSE
            MAT EQP.REC = ''
         END
         EQP.REPAIR = EQP.REPAIR + (DCR.DIST.AMT<1,AG> * (-1))
         EQP.YTD.REPAIR = EQP.YTD.REPAIR + (DCR.DIST.AMT<1,AG> * (-1))
         EQP.CUM.REPAIR = EQP.CUM.REPAIR + (DCR.DIST.AMT<1,AG> * (-1))
         MATWRITE EQP.REC ON EQUIP.FILE , CONO:DCR.ASSET.ID<1,AG>
      END
   NEXT AG
END
DELETE DAILY.CHECK.REVERSAL, VOU.ID
1999 RETURN
*
* Set up A/P MCD record
*
2000*
MAT AP.REC=""
AP.CHECK=MCD.CHECK
AP.NO.OF.CHK=1
AP.GRS.AMT=MCD.GRS.AMT
AP.NET.AMT=MCD.NET.AMT
AP.CHK.DATE=MCD.CHK.DATE
AP.VEND=MCD.VEND
AP.MON=MCD.MON
*T19149 v
IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
   AP.DIV = DIV.CODE 
END ELSE
   AP.DIV=GEN.DIV
END ;* T23278
AP.DEPT=GEN.DEPT
AP.CCTR=GEN.CCTR
*T19149 ^
RETURN
91000ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
*** END OF PROCESS
99999 END
