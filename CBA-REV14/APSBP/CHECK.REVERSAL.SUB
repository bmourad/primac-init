  SUBROUTINE CHECK.REVERSAL.SUB(CONO,MAT DCR.REC,CO.ACCT.MASK,APCK.DATE)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - CHECK.REVERSAL.SUB
* BY          - WALID YAMOUT, C.B.A
* DATE        - 11/14/86
* DESCRIPTION -
*  This Program is used to dispays all voucher for a check.
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*********************************************************************
*
*--- INSERT FILE EQUATES
*
*COPY>APS.CPYLIB>SQV
*COPY>APS.CPYLIB>DAILY.CHECK.REVERSAL
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*--- INT
*
  BEGIN.PAGE = 9
  PAGE.SIZE = 4
  LINE.SPACE = 1
  LINES = 0
  OLD.START.LINE = 0
  BEG.AD.PAGE = 16
  PAGE.AD.SIZE = 4
  LINE.AD.SPACE = 1
  AD.LINES = 0
  AD.OLD.START.LINE = 0
  LINE.INV = ""
  LINE.PO = ""
  LINE.DATE = ""
  LINE.GROSS = ""
  LINE.DISC = ""
  LINE.NET = ""
*
*--- SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- MAIN PROCESS
*
  LINES = COUNT(DCR.VOUCH,VM) + (DCR.VOUCH # "")
  LN = 1
  GOSUB 10000
*
*--- OPERATOR REQUEST
*
500*
  ECD.NUM = 13
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  REQUEST = ECD.RET.VALUE
  BEGIN CASE
    CASE REQUEST = "E" OR REQUEST = "END" OR REQUEST = ""
      GOTO 99999
    CASE REQUEST = "R"
      GOSUB 70000
      IF LNO THEN
        LN = LNO
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
        P_X  = 3 ; P_Y = SLN ; P_VALUE = "==>" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        MATREAD SQV.REC FROM SQV, CONO : DCR.VOUCH<1,LN> ELSE MAT SQV.REC = ""
        GOSUB 5000
        P_X  = 3 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
    CASE REQUEST = "S"
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 10000
    * T25978 v
    CASE REQUEST = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 10000
    CASE REQUEST = 'ST'
      LN = 1
      GOSUB 10000
    CASE REQUEST = 'SB'
      LN = LINES
      GOSUB 10000
    * T25978 ^
  END CASE
  GOTO 500
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- ACCOUNT DISTRIBUTION
*
5000*
  CALL AMOUNT.DIST.SUB(SQV.DIV,SQV.DIST.AMT,LINE.NET<LN>,ALL.NET,LINE.DISC<LN>,ALL.DSC,ERRMSG)
  AD.LINES = COUNT(SQV.ACCT,VM) + (SQV.ACCT # "")
  AD.LN = 1
  AD.OLD.START.LINE = 0
  GOSUB 20000
*
*--- ACCOUNT DISTRIBUTION REQUEST
*
5001*
  ECD.NUM = 14
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
  BEGIN CASE
    CASE OPTION = "E" OR OPTION = "END" OR OPTION = ""
      GOTO 5999
    CASE OPTION = "S"
      AD.LN = AD.LN + PAGE.AD.SIZE
      IF AD.LN > AD.LINES THEN AD.LN = 1
      GOSUB 20000
    * T25978 v
    CASE OPTION = 'SR'
      AD.LN -= PAGE.AD.SIZE
      IF AD.LN < 1 THEN AD.LN = 1
      GOSUB 20000
    CASE OPTION = 'ST'
      AD.LN = 1
      GOSUB 20000
    CASE OPTION = 'SB'
      AD.LN = AD.LINES
      GOSUB 20000
    * T25978 ^
  END CASE
  GOTO 5001
5999*
  AD.LN = 1
  AD.LINES = 0
  AD.OLD.START.LINE = 0
  GOSUB 20000
  RETURN
*
*--- VOUCHER SCROLL ROUTINE
*
10000*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN RETURN
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF LINE.NET<N> = "" THEN
      MATREAD SQV.REC FROM SQV, CONO : DCR.VOUCH<1,N> ELSE MAT SQV.REC = ""
      LINE.INV<N> = SQV.INV
      LINE.PO<N> = SQV.PO
      LINE.DATE<N> = SQV.DUE.DATE
      LINE.GROSS<N> = SQV.GRS.AMT
      PTR = 1
      LOOP
        LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1>,PTR SETTING FND ELSE FND = 0
        BEGIN CASE
          CASE FND = 0
            LINE.DISC<N> = 0
            LINE.NET<N> = 0
            PTR = 0
          CASE DCR.DISB.ACCT # SQV.DISB.ACCT<1,FND>
            PTR = FND + 1
          CASE APCK.DATE # SQV.PAID.DATE<1,FND>
            PTR = FND + 1
          CASE 1
            LINE.DISC<N> = SQV.DSC.PAID<1,FND>
            LINE.NET<N> = SQV.PAID.AMT<1,FND>
            PTR = 0
        END CASE
      WHILE PTR DO REPEAT
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = "CL"
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.VOUCH<1,N> "L#7"
    P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.INV<N> "L#10"
    P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.PO<N> "L#10"
    P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.DATE<N>, "D2/") "L#8"
    P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.GROSS<N>, "MD2") "R#10"
    P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.DISC<N>, "MD2") "R#10"
    P_X  := AM:67 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.NET<N>, "MD2") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- ACCOUNT DISTRIBUTION SCROLL ROUTINE
*
20000*
  START.LINE = 1 + INT((AD.LN-1)/PAGE.AD.SIZE) * PAGE.AD.SIZE
  LAST.LINE = START.LINE + PAGE.AD.SIZE - 1
  IF LAST.LINE > AD.LINES THEN LAST.LINE = AD.LINES
  IF START.LINE = AD.OLD.START.LINE THEN RETURN
  AD.OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    AD.SLN = BEG.AD.PAGE + LINE.AD.SPACE * MOD(N-1,PAGE.AD.SIZE)
    P_X  = 0 ; P_Y = AD.SLN ; P_VALUE = N "L#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:AD.SLN ; P_VALUE := AM:SQV.ACCT<1,N> CO.ACCT.MASK
    P_X  := AM:20 ; P_Y := AM:AD.SLN ; P_VALUE := AM:SQV.DIV<1,N> "L#2"
    P_X  := AM:23 ; P_Y := AM:AD.SLN ; P_VALUE := AM:SQV.DEPT<1,N> "L#2"
    P_X  := AM:26 ; P_Y := AM:AD.SLN ; P_VALUE := AM:SQV.CCTR<1,N> "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    MATREAD COA.REC FROM COA, CONO : SQV.ACCT<1,N> ELSE
      MAT COA.REC = "?????????????"
    END
    P_X  = 30 ; P_Y = AD.SLN ; P_VALUE = COA.DESC "L#30" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:AD.SLN ; P_VALUE := AM:OCONV((ALL.NET<1,N> + ALL.DSC<1,N>), "MD2") "R#10"
    P_X  := AM:72 ; P_Y := AM:AD.SLN ; P_VALUE := AM:SQV.ASSET<1,N> "L#8"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.AD.SIZE
    AD.SLN = BEG.AD.PAGE + LINE.AD.SPACE * MOD(N-1,PAGE.AD.SIZE)
    P_X  = 0 ; P_Y = AD.SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- ENTER LINE NUMBER
*
70000*
  GOSUB 10000
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  ECD.NUM = 15
  ECD.ACTION = 4
  CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = '' OR LNO = 'END' THEN LNO = 0
  RETURN
*
*--- CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
