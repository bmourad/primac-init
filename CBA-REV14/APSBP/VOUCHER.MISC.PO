  SUBROUTINE VOUCHER.MISC.PO(V.CODE,PO.NO)
*COPY>CPYLIB>COM1 
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>POS.CPYLIB>COM.MPO
*COPY>APS.CPYLIB>COM.APS.FILE.VARS
*COPY>APS.CPYLIB>COM.TEMP.VOUCHERS
*COPY>APS.CPYLIB>COM.VOUCHER.MAINT
***********************************************************************
* REVISION     - [8.0]
* Copyright 1982 by Computer Business Associates(Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* PROGRAM      - VOUCHER.MISC.PO
* BY           - GREG GARDNER, C.B.A.
* DATE         - 02/23/90
* DESCRIPTION
*  This Program is used to enter all miscellaneous PO's and product's.
* MOD          - 2.23.90 GG ENLARGE UNIT COST FIELD.
* MOD 10/08/94 CLW Task 17919 - Accrual accounting
* BUG 01/27/94 RKB TASK 18746 Problems related to Category
* T19149 05/01/95 RKB add support for credit dept,div,cctr
* TASK 19406 11/03/95 CT6 * divisionalize, PO div must = Voucher div.
*T20016 1/31/96 RKB * make div,dept,cctr part of tvo rec and ck div when 
*                     adding acct line detail
*T20016.1 2/6/96 RKB * add restriction to edit of accrual acct,div
*T21348 lanny 12/23/1996 * Problem with clearing old data from TVO.REC
*                          if PO# changed on 1st screen.
*T22934 renee 05/26/1998 * When enter manually entering the PO number,
*                          the AP acct division is always 00 even if the
*                          PO, the PO line and the voucher are all
*                          division 01's. But, when selecting PO from
*                          ??? list, then the division is 01.
*T23776 diane 03/17/1999 * FIX DIV,DEPT,CCTR AND ACCOUNT DISTRIBUTION
*C33616 markt 06/24/1999 * NEED TO INITIALIZE AP.CCTR, AP.DEPT AND AP.DIV
*T24839 gil 03/06/2000 * If changes are made to PO information the user
*                        gets an error message that debits and credits do
*                        not equal when filing voucher.
*T25039 alex 04/14/2000 * TVO.SEQ.NO is set incorrectly when multiple
*                         products share the same description.
*T26233 gat 10/24/2001 * DEFAULT "EA" AS UNIT OF MEASURE
*T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,ST).
*T26512 lross 03/27/2002 * When non-existent PO is entered the debit
*                          side DIV should default to DIV.OWNER
*T28042 thompson 03/31/2004 * ADD CONDIONAL STATEMENT TO CHECK IF FIELD
*                             NULL AND NOT CHANGE PREVIOUS ENTRY FOR
*                             REAL POS
**********************************************************************
*
**** INSERT FILE EQUATES
*
*COPY>APS.CPYLIB>TEMP.VOUCHERS
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>CATEGORY.MISC
*COPY>POS.CPYLIB>MISC.PO
*COPY>PMC.CPYLIB>COA
*** INT
*
  BEGIN.PAGE = 6
  PAGE.SIZE = 6
  LINE.SPACE = 2
  LINES = 0
  LN = 0
  OLD.START.LINE=0
  TOTAL.VOUCH = 0
  PAY.VALUES = ""
  MAT INV.CNV.REC = ""
  OPTION = ""
  TEMP.ACCT.ACCRUE=0 ;*T20016.1
*
**** SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**** MAIN PROCESS
*
  VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
  MATREAD VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.REC = ""
  IF TVO.PO.NOS = "" THEN
    OPTION = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO
    REPEAT
    LN = LINES
  END ELSE
    LINES = COUNT(TVO.PO.NOS, VM) + (TVO.PO.NOS # "")
    LN = 1
    IF TVO.PO # "MULTI" THEN
      FOR LN = LINES TO 1 STEP - 1
        IF TVO.PO.NOS<1,LN> # TVO.PO THEN
          GOSUB 5000
          ICR.CNV = DELETE(ICR.CNV,LN,0,0)
          ICR.DV2 = DELETE(ICR.DV2,LN,0,0)
          ICR.DV1 = DELETE(ICR.DV1,LN,0,0)
          ICR.MT1 = DELETE(ICR.MT1,LN,0,0)
        END
      NEXT LN
      LINES = COUNT(TVO.PO.NOS, VM) + (TVO.PO.NOS # "")
      LN = 1
    END
    GOSUB 3000
  END
  GOSUB 10000
*
***** ENTER OPTIONS
*
  MORE = 1
  LOOP
    ECD.NUM = 14
    SCV.REC(14)<ECD.SCRN.NO> = ""; ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'E' OR OPTION = 'END'
        TVO.GRS.AMT = TOTAL.VOUCH
        TVO.MER.AMT = TOTAL.VOUCH
        MORE = 0
      CASE OPTION = 'S'
        LN = START.LINE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 10000
      * T25978 ^
      CASE OPTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO
        REPEAT
        LN = LINES
      CASE OPTION = "C"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
          GOSUB 1000
        END
      CASE OPTION = "D"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>
          ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
          ECD.ACTION = 5; CALL SCRN.EDIT
          GOSUB 5000
          ICR.CNV = DELETE(ICR.CNV,LN,0,0)
          ICR.DV2 = DELETE(ICR.DV2,LN,0,0)
          ICR.DV1 = DELETE(ICR.DV1,LN,0,0)
          ICR.MT1 = DELETE(ICR.MT1,LN,0,0)
          LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
          IF LN > 1 AND LN > LINES THEN LN = LN -1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END 
        GOSUB 10000
    END CASE
  WHILE MORE DO
  REPEAT
  GOTO 99999
*
**** ENTER LINE INFORMATION
*
1000*
  GOSUB 10000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN -1, PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  TEMP.VALUES = ""
  TEMP.ACCT.ACCRUE=0 ;* T20016.1
  OLD.ACCT = ""
  AP.ACCT = ""
  AP.CCTR = ''; AP.DEPT = ''; AP.DIV = '' ;* C33616
  OLD.DV = GEN.DIV
  OLD.DP = GEN.DEPT
  OLD.CC = GEN.CCTR
  OLD.AP.CC = GEN.CCTR; OLD.AP.DP = GEN.DEPT; OLD.AP.DV = GEN.DIV ;*T21348
  TEMP.CNV = "MD2"
  TEMP.DV1 = 1
  TEMP.MT1 = 1
  TEMP.DV2 = 1
  TEMP.CNV<2> = "MD2"
  TEMP.DV1<2> = 1
  TEMP.MT1<2> = 1
  TEMP.DV2<2> = 1
  IF OPTION = "A" THEN GOTO 1010
  TEMP.VALUES = TVO.PO.NOS<1,LN>
  TEMP.VALUES<2> = TVO.PO.PROD<1,LN>
  TEMP.VALUES<3> = TVO.PROD.DESC<1,LN>
  TEMP.VALUES<4> = TVO.MISC.CAT<1,LN>
  TEMP.VALUES<5> = TVO.PO.UM<1,LN>
  TEMP.VALUES<6> = TVO.PO.QTY<1,LN>
  TEMP.VALUES<7> = TVO.PO.U.COST<1,LN>
  TEMP.VALUES<8> = TVO.PO.VOUCH<1,LN>
  TEMP.VALUES<9> = TVO.SEQ.NO<1,LN>
  TEMP.CNV = ICR.CNV<LN>
  TEMP.DV1 = ICR.DV1<LN>
  TEMP.MT1 = ICR.MT1<LN>
  TEMP.DV2 = ICR.DV2<LN>
  TEMP.CNV<2> = ICR.CNV<LN>
  TEMP.DV1<2> = ICR.DV1<LN>
  TEMP.MT1<2> = ICR.MT1<LN>
  TEMP.DV2<2> = ICR.DV2<LN>
  GOSUB 6000
*
**** ENTER PO NUMBER
*
1010*
  X = 4; Y = SLN; MAXL = 8; TYP = 1; O.R = "R"; VALDAT = ""; HMSG = "Enter a valid PO number"
  BEGIN CASE
    CASE TVO.PO # "MULTI"
      DEFAULT = TVO.PO; O.R = "O"
      VALDAT = TVO.PO
    CASE TVO.PO.NOS<1,LN> # ""
      DEFAULT = TVO.PO.NOS<1,LN>; O.R = "O"
    CASE TEMP.VALUES<1> # ""
      DEFAULT = TEMP.VALUES<1>; O.R = "O"
    CASE LN > 1 AND TVO.PO.NOS<1,LN-1> # ""
      DEFAULT = TVO.PO.NOS<1,LN-1>; O.R = "O"
  END CASE
  CALL EDIT.SUB
  IF VALUE = "END" AND OPTION = "A" THEN
    GOSUB 5500
    ICR.CNV = DELETE(ICR.CNV,LN,0,0)
    ICR.DV2 = DELETE(ICR.DV2,LN,0,0)
    ICR.DV1 = DELETE(ICR.DV1,LN,0,0)
    ICR.MT1 = DELETE(ICR.MT1,LN,0,0)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF VALUE = "END" THEN GOTO 1999
  IF VALUE = "???" AND TVO.PO = "MULTI" THEN
    IF VSTAT.PO # "" THEN
      ECD.SCRN.NO = 4
      SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
      SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
      SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"
      ECD.ACTION = 3; CALL SCRN.EDIT
      PAY.VALUES = ""
      CALL VEND.PO.INQ(PAY.VALUES)
      ECD.SCRN.NO = 10; ECD.ACTION = 3; CALL SCRN.EDIT
      OLD.START.LINE = 0
      IF PAY.VALUES<1> = "" THEN
        GOSUB 10000 
        GOTO 1000
      END
      LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
      LN = LINES
      IF OPTION = "A" THEN OLD.LINES = LINES - 1
      GOSUB 3000
      GOSUB 10000
      GOTO 1999
    END ELSE
      ERRMSG = "No POs associated with that vendor"; GOSUB 91000; GOTO 1010
    END
  END
  IF TVO.PO # "MULTI" AND VALUE # TVO.PO THEN
    ERRMSG = "Valid entry = ":TVO.PO
    GOSUB 91000
    GOTO 1010
  END
*TASK 19406 vvv
  PO.DIV.AVAIL=1
  MATREAD MPO.REC FROM MISC.PO, CONO:VALUE ELSE
    MAT MPO.REC = ""
    PO.DIV.AVAIL = 0
  END
  IF MPO.DIV.OWNER # TVO.DIV.OWNER THEN
    IF PO.DIV.AVAIL THEN
      IF TVO.DIV.OWNER # "00" THEN
        ERRMSG = "PO and Voucher must have the same Owning Division"
        GOSUB 91000; GOTO 1010
      END
    END ELSE
      MPO.DIV.OWNER = TVO.DIV.OWNER
    END
  END
*TASK 19406 ^^
  CHECK.FLG = "P"
  LOCATE VALUE IN VSTAT.PO<1>,1 SETTING FNDP ELSE FNDP = 0
  IF FNDP = 0 AND VALUE # TEMP.VALUES<1> THEN
    QUESTION = "This PO is not setup.  Ok to use? (Y/N)"; GOSUB 11000
    IF REPLY = "N" THEN GOTO 1000
    CHECK.FLG = ""
  END
  MATREAD VPS.REC FROM VEND.PO.STATS , CONO:TVO.VEND:"!":TVO.PO.TYPE:"!":VALUE ELSE
    IF CHECK.FLG = "P" AND VALUE # TEMP.VALUES<1> THEN
      QUESTION = "This PO is not setup.  Ok to use?(Y/N)"; GOSUB 11000
      IF REPLY = "N" THEN GOTO 1000
      CHECK.FLG = ""
    END
    MAT VPS.REC = ""
  END
*
* Access misc. po details for vouchering
*
  TEMP.VALUES<1> = VALUE
*
*18746 Add read of MPO rec here to reference later in add or change process
*
  MATREAD MPO.REC FROM MISC.PO,CONO:VALUE ELSE MAT MPO.REC=''
*
*
**** ENTER PRODUCT NUMBER 
*
1020*
  X = 13; Y = SLN; MAXL = 15; TYP = 1; VALDAT = ""; HMSG = "Enter a valid product number"
  BEGIN CASE
    CASE TVO.PO.PROD<1,LN> # ""
      DEFAULT = TVO.PO.PROD<1,LN>; O.R = "O"
    CASE TEMP.VALUES<2> # ""
      DEFAULT = TEMP.VALUES<2>; O.R = "O"
  END CASE
  IF TVO.PO.TYPE = "M" THEN O.R = "O"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1010
  IF VALUE = "???" THEN
    IF VPS.PROD # "" OR (VPS.PROD.DESC # "" AND TVO.PO.TYPE = "M") THEN
      ECD.SCRN.NO = 5
      GOSUB 4000
      IF TVO.PO.TYPE = "M" AND VPS.PROD.DESC # "" THEN
        IF TVO.MISC.CAT='' THEN TVO.MISC.CAT=MPO.MISC.CAT<1,LN>
*            IF MPO.MISC.CAT<1,LN> # TVO.MISC.CAT THEN
*               ERRMSG = "PO category (":MPO.MISC.CAT<1,LN>:") does not match selected category (":TVO.MISC.CAT:")"
*               GOSUB 91000
*               GOTO 1020
*            END
      END
      GOTO 1999
    END ELSE
      ERRMSG = "No product associated with this PO"; GOSUB 91000; GOTO 1020
    END
  END
  POSIT=0
  IF MPO.PROD.NUM THEN
    LOCATE VALUE IN MPO.PROD.NUM<1>,1 SETTING MPO.OFFSET ELSE
      ERRMSG = "Invalid Product Code for this Voucher"
      GOSUB 91000
      GOTO 1020
    END
* T23776 v Moving this down
* T22934 v Pull in Div/dept/cctr from the Misc PO when PO num entered
*T23776      OLD.AP.DV = MPO.MISC.DIV<1,MPO.OFFSET>
*T23776      OLD.AP.DP = MPO.MISC.DEPT<1,MPO.OFFSET>
*T23776      OLD.AP.CC = MPO.MISC.CCTR<1,MPO.OFFSET>
* T22934 ^
* T23776 ^
* CSF 22882 MPO.OFFSET WILL ONLY BE SET IF MPO.PROD.NUM NOT NULL
  END ELSE MPO.OFFSET = 1
*
  IF VPS.PROD.DESC # "" THEN
    IF TVO.MISC.CAT='' THEN TVO.MISC.CAT=MPO.MISC.CAT<1,LN>
*      IF MPO.MISC.CAT<1,LN> # TVO.MISC.CAT<1,LN> THEN
*         ERRMSG = "PO category (":MPO.MISC.CAT<1,LN>:") does not match selected category (":TVO.MISC.CAT:")"
*         GOSUB 91000
*         GOTO 1020
*      END
  END
   *
1025*
  TEMP.VALUES<2> = VALUE
   *
  BEGIN CASE
    CASE TVO.PROD.DESC<1,LN> # ""
      VALUE = TVO.PROD.DESC<1,LN>
    CASE TEMP.VALUES<3> # ""
      VALUE = TEMP.VALUES<3>
    CASE 1
      LOCATE TEMP.VALUES<2> IN MPO.PROD.NUM<1>,1 SETTING POFF THEN
        VALUE = MPO.PROD.DESC<1,POFF>
      END ELSE
        X = 13; Y = SLN+1; TYP = 1; MAXL = 30; O.R = "R"
        HMSG = "Enter Product Description"
        CALL EDIT.SUB
        IF VALUE = "END" THEN GOTO 1010
      END
  END CASE
  P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = VALUE<1,1,1> "L#30" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LOCATE VALUE IN VPS.PROD.DESC<1>,1 SETTING FNDPD ELSE FNDPD = 0
  IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<3> THEN
    QUESTION = "This product is not setup for this PO.  Ok to use? (Y/N)"; GOSUB 11000
    IF REPLY = "N" THEN GOTO 1020
  END
  TEMP.VALUES<3> = VALUE
  *T25039 v * Used MPO.OFFSET to find seq # since misc. po's does not
  *           allow the user enter in duplicate products.            
  * IF FNDPD # "0" THEN TEMP.VALUES<9> = VPS.SEQ.NO<1,FNDPD> ELSE TEMP.VALUES<9> = ""
  TEMP.VALUES<9> = MPO.SEQ.NO<1,MPO.OFFSET>
  *T25039 ^                                
  MAT INV.REC = ""
  MAT CATG.REC = ""
  IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
  IF INV.SBR + 0 = 0 THEN INV.SBR = 1
*
**** ENTER category
*
1030*
  X = 29; Y = SLN; TYP = 1; MAXL = 6; O.R = 'R'; VALDAT = ''
  HMSG = "Enter a valid Category"
  IF MPO.MISC.CAT<1,MPO.OFFSET> # "" THEN
    VALUE = MPO.MISC.CAT<1,MPO.OFFSET>
    P_X  = X ; P_Y = Y ; P_VALUE = VALUE"L#6" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    BEGIN CASE
      CASE TVO.MISC.CAT<1,LN> # ""
        DEFAULT = TVO.MISC.CAT<1,LN>; O.R = 'O'
      CASE TEMP.VALUES<4> # ""
        DEFAULT = TEMP.VALUES<4>; O.R = 'O'
    END CASE
    CALL EDIT.SUB
    IF VALUE = "END" THEN GOTO 1010
*CSF 25532 v
    MATREAD CAMISC.REC FROM CATEGORY.MISC,CONO:VALUE ELSE
      ERRMSG=VALUE:' is not a valid misc. category.'
      GOSUB 91000
      GOTO 1030
    END
*CSF 25532 ^
  END
  TEMP.VALUES<4> = VALUE
*
**** ENTER ORDERING UNITS
*
1040*
  X = 36; Y = SLN; TYP = 1; MAXL = 3; O.R = "R"; HMSG = "Enter ordering unit of measure"
  IF MPO.UNIT.MAG<1,MPO.OFFSET> # "" THEN
    VALUE = MPO.UNIT.MAG<1,MPO.OFFSET>
    TEMP.VALUES<5>=VALUE
    P_X  = X ; P_Y = Y ; P_VALUE = VALUE"L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    BEGIN CASE
      CASE TVO.PO.TYPE = "M"
        BEGIN CASE
          CASE TVO.PO.UM<1,LN> # ""
            DEFAULT = TVO.PO.UM<1,LN>; O.R = "O"
          CASE TEMP.VALUES<5> # ""
            DEFAULT = TEMP.VALUES<5>; O.R = "O"
          CASE 1 ; * T25663 - PF11-511
            DEFAULT = "EA"; O.R = 'O' ; * T25663 - PF11-511
        END CASE
        CALL EDIT.SUB
        IF VALUE = "END" THEN GOTO 1010
        TEMP.VALUES<5> = VALUE
      CASE 1
        TEMP.VALUES<5> = INV.UNIT<1,1>
        P_X  = 36 ; P_Y = SLN ; P_VALUE = TEMP.VALUES<5> "L#3" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END CASE
  END
  TEMP.CNV<1> = "MD2"; TEMP.DV2<1> = 1
  TEMP.DV1<1> = 1; TEMP.MT1<1> = 1
  TEMP.CNV<2> = "MD2"; TEMP.DV2<2> = 1
  TEMP.DV1<2> = 1; TEMP.MT1<2> = 1
*
**** ENTER VOUCHERED QUANTITY
*
1050*
  X = 40; Y = SLN; MAXL = 10; O.R = 'R'; VALDAT = ''; MSG = "Enter vouchered quantity"
  IF TEMP.CNV<2> = "MDO" THEN
    TYP = 3
    BEGIN CASE
      CASE TVO.PO.QTY<1,LN> # ""
        DEFAULT = INT(((TVO.PO.QTY<1,LN>/TEMP.DV1<2>)*TEMP.MT1<2>)/TEMP.DV2<2>+.5)
        O.R = 'O'
      CASE TEMP.VALUES<6> # ""
        DEFAULT = INT(((TEMP.VALUES<6>/TEMP.DV1<2>)*TEMP.MT1<2>)/TEMP.DV2<2>+.5)
        O.R = 'O'
    END CASE
  END ELSE
    TYP = 4; SCALER = 2
    BEGIN CASE
      CASE TVO.PO.QTY<1,LN> # ""
        DEFAULT = OCONV(TVO.PO.QTY<1,LN>/TEMP.MT1<2>, "MD2")
        O.R = "O"
      CASE TEMP.VALUES<6> # ""
        DEFAULT = OCONV(TEMP.VALUES<6>/TEMP.MT1<2>, "MD2")
        O.R = "O"
    END CASE
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1010
  IF TEMP.CNV<2> = "MDO" THEN
    VALUE = INT(((VALUE/TEMP.MT1<2>)*TEMP.DV1<2>)*TEMP.DV2<2>+.5)
  END ELSE
    VALUE = VALUE * TEMP.MT1<2>
  END
  TEMP.VALUES<6> = VALUE
*
**** ENTER VOUCHERED UNIT OF PRICE
*
1060*
  X = 51; Y = SLN; TYP = 4; SCALER = 4; MAXL = 12; O.R = "R"
  VALDAT = ""; HMSG = "Enter vouchered unit price"
  BEGIN CASE
    CASE TVO.PO.U.COST<1,LN> # ""
      DEFAULT = OCONV(TVO.PO.U.COST<1,LN>, "MD4")
      O.R = 'O'
    CASE TEMP.VALUES<7> # ""
      DEFAULT = OCONV(TEMP.VALUES<7>, "MD4")
      O.R = 'O'
  END CASE
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1010

  IF VALUE # TVO.PO.U.COST<1,LN> OR TEMP.VALUES<1> # TVO.PO.NOS<1,LN> OR TEMP.VALUES<2> # TVO.PO.PROD<1,LN> OR TEMP.VALUES<3> # TVO.PROD.DESC<1,LN> OR TEMP.VALUES<5> # TVO.PO.UM<1,LN> OR TEMP.VALUES<6> # TVO.PO.QTY<1,LN> OR TEMP.VALUES<9> # TVO.SEQ.NO<1,LN> THEN
    TVO.ENT.FLG<1,LN> = "E"
  END
  IF TEMP.CNV<2> = "MD4" THEN
    TVO.PO.U.COST<1,LN> = INT(VALUE/TEMP.MT1<2>)
  END ELSE
    TVO.PO.U.COST<1,LN> = VALUE
  END
   * ADDED DLG 06/03/92
  TEMP.VALUES<7> = TVO.PO.U.COST<1,LN>
  TVO.PO.NOS<1,LN> = TEMP.VALUES<1>
  TVO.PO.PROD<1,LN> = TEMP.VALUES<2>
  TVO.PROD.DESC<1,LN> = TEMP.VALUES<3>
  IF MPO.SHIP.WHSE # "" THEN
    IF MPO.SHIP.WHSE<1,MPO.OFFSET> # "" THEN
      TTWHSE=MPO.SHIP.WHSE<1,MPO.OFFSET>
    END ELSE
      TTWHSE=MPO.SHIP.WHSE<1,1>
    END
  END ELSE
    TTWHSE=''
  END
  TVO.MISC.CAT<1,LN> = TEMP.VALUES<4>
  TVO.PO.WHSE<1,LN> = TTWHSE
  TVO.PO.UM<1,LN> = TEMP.VALUES<5>
  TVO.PO.QTY<1,LN> = TEMP.VALUES<6>
  TVO.SEQ.NO<1,LN> = TEMP.VALUES<9>
  ICR.CNV<LN> = TEMP.CNV<1>
  ICR.DV1<LN> = TEMP.DV1<1>
  ICR.MT1<LN> = TEMP.MT1<1>
  ICR.DV2<LN> = TEMP.DV2<1>
*
**** CALCULATE AND PRINT TOTAL VOUCHERED
*
1070*
  OLD.PO.VOUCH = TVO.PO.VOUCH<1,LN> + 0
  IF OLD.ACCT # "" THEN
    OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))
    OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
    REV.AMT = TVO.PO.VOUCH<1,LN>
    PTR = 1
    LOOP
      LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
        IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
          IF REV.AMT > TVO.DIST.AMT<1,FND> THEN
            REV.AMT = REV.AMT - TVO.DIST.AMT<1,FND>
            TVO.DIST.AMT<1,FND> = 0
          END ELSE
            TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> - REV.AMT
            REV.AMT = 0
          END
          IF TVO.DIST.AMT<1,FND> = 0 THEN
            TVO.ACCT = DELETE(TVO.ACCT,1,FND,0)
            TVO.DIST.AMT = DELETE(TVO.DIST.AMT,1,FND,0)
            TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)
            TVO.DIV = DELETE(TVO.DIV,1,FND,0)
            TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)
            TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)
            TVO.ACCT.FLG = DELETE(TVO.ACCT.FLG,1,FND,0)
            TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
            VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) ;*T20016.1
          END
          IF REV.AMT > 0 THEN
            PTR = FND + 1
          END ELSE
            PTR = 0
          END
        END ELSE
          PTR = FND + 1
        END
      END ELSE
        TVO.DIST.AMT = 0 ; *T24839
        PTR = 0
      END
    WHILE PTR DO REPEAT
  END
  TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>
  TEMP1 = TVO.PO.QTY<1,LN>
  BEGIN CASE
    CASE TVO.PO.U.COST<1,LN> > 0 AND TEMP1 > 0
      TVO.PO.VOUCH<1,LN> = INT((TVO.PO.U.COST<1,LN> / 10000) * (TEMP1/(INV.COST.WT/100))+.5)
    CASE TVO.PO.U.COST<1,LN> < 0 AND TEMP1 < 0
      TVO.PO.VOUCH<1,LN> = INT((TVO.PO.U.COST<1,LN> / 10000) * (TEMP1/(INV.COST.WT/100))+.5)
    CASE 1
      TVO.PO.VOUCH<1,LN> = INT((TVO.PO.U.COST<1,LN> / 10000) * (TEMP1/(INV.COST.WT/100))-.5)
  END CASE
  IF OCONV(TVO.PO.VOUCH<1,LN>,"MD2") GT "9999999.99" THEN ERRMSG="Extended amount cannot exceed 9,999,999.99"; GOSUB 91000; GOTO 1060
  GOSUB 2000
  MATREAD CAMISC.REC FROM CATEGORY.MISC,CONO:TEMP.VALUES<4> ELSE MAT CAMISC.REC=''
  IF MPO.ACCRUE = 'Y' THEN
    OLD.ACCT=CAMISC.CRED.EXP
    TEMP.ACCT.ACCRUE=1 ;*T20016.1
    AP.ACCT=CAMISC.AP.ACCT
  END ELSE
    OLD.ACCT=CAMISC.EXP.ACCT
    TEMP.ACCT.ACCRUE=0 ;*T20016.1
    AP.ACCT=CAMISC.AP.ACCT
  END
  GOSUB 75000      ;* T23776
* T23776 v Moved here from above
* T22934 v Pull in Div/dept/cctr from the Misc PO when PO num entered
*T28042
IF OLD.AP.DV = "" THEN
  OLD.AP.DV = MPO.MISC.DIV<1,MPO.OFFSET>
  OLD.AP.DP = MPO.MISC.DEPT<1,MPO.OFFSET>
  OLD.AP.CC = MPO.MISC.CCTR<1,MPO.OFFSET>
END
*T28042
* T22934 ^
* T23776 ^
  LOCATE TEMP.VALUES<2> IN MPO.PROD.NUM<1>,1 SETTING POSIT THEN
    OLD.DV = MPO.MISC.DIV<1,POSIT>
    OLD.DP = MPO.MISC.DEPT<1,POSIT>
    OLD.CC = MPO.MISC.CCTR<1,POSIT>
  END ELSE
*T26512 OLD.DV = GEN.DIV
    OLD.DV = TVO.DIV.OWNER
    OLD.DP = GEN.DEPT
    OLD.CC = GEN.CCTR
  END
  IF OLD.ACCT # "" THEN
    OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))
    OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
    PTR = 1
    LOOP
      LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
        IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
          PTR = 0
*T20016.1 v
          IF TEMP.ACCT.ACCRUE THEN
            VOUCHER.ACCRUE.FLAG<1,FND>=1
          END
*T20016.1 ^               
        END ELSE
          PTR = FND + 1
        END
      END ELSE
        TVO.ACCT<1,FND> = OLD.ACCT
*T20016.1 v
        IF TEMP.ACCT.ACCRUE THEN
          VOUCHER.ACCRUE.FLAG<1,FND>=1
        END
*T20016.1 ^            
        TVO.DIST.AMT<1,FND> = 0
        TVO.ASSET.ID<1,FND> = ""
*CSF 25150 v
        IF MPO.ACCRUE = 'Y' THEN
          TVO.ACCT.FLG<1,FND> = "P"
        END ELSE TVO.ACCT.FLG<1,FND> = ''
*CSF 25150 ^
        TVO.DIV<1,FND> = OLD.DV
        TVO.DEPT<1,FND> = OLD.DP
        TVO.CCTR<1,FND> = OLD.CC
        PTR = 0
      END
    WHILE PTR DO REPEAT
    TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,LN>
  END 
  TOTAL.VOUCH = TOTAL.VOUCH + TVO.PO.VOUCH<1,LN>
  SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
  ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
  LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
*
* Calculate AP account Distribution Amounts
*
*   ERRMSG = AP.ACCT ; GOSUB 91000
  IF AP.ACCT # "" THEN
    AP.ACCT = AP.ACCT : STR("0",IN.ACCT.LEN-LEN(AP.ACCT))
    AP.ACCT = AP.ACCT[1,IN.ACCT.LEN]
    REV.AMT = OLD.PO.VOUCH
    PTR = 1
    LOOP
      LOCATE AP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
*              IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
        IF TVO.AP.DIV<1,FND>=OLD.AP.DV AND TVO.AP.DEPT<1,FND>=OLD.AP.DP AND TVO.AP.CCTR<1,FND>=OLD.AP.CC THEN    ;*T21348
          IF REV.AMT > TVO.AP.AMT<1,FND>*(-1) THEN
            REV.AMT = REV.AMT + TVO.AP.AMT<1,FND>
            TVO.AP.AMT<1,FND> = 0
          END ELSE
            TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> + REV.AMT
            REV.AMT = 0
          END
          IF TVO.AP.AMT<1,FND> = 0 THEN
            TVO.AP.ACCT = DELETE(TVO.AP.ACCT,1,FND,0)
            TVO.AP.AMT = DELETE(TVO.AP.AMT,1,FND,0)
            TVO.AP.FLG = DELETE(TVO.AP.FLG,1,FND,0)
*T19149 v
            TVO.AP.DIV = DELETE(TVO.AP.DIV,1,FND,0)
            TVO.AP.DEPT = DELETE(TVO.AP.DEPT,1,FND,0)
            TVO.AP.CCTR = DELETE(TVO.AP.CCTR,1,FND,0)
*T19149 ^            
            PTR = FND
          END ELSE
            IF REV.AMT = 0 THEN PTR = 0 ELSE PTR = FND + 1
          END
        END ELSE 
          PTR = FND+1
        END
      END ELSE
        PTR=0
      END
    WHILE PTR DO
    REPEAT
  END
  IF AP.ACCT # "" THEN
    AP.ACCT = AP.ACCT : STR("0",IN.ACCT.LEN-LEN(AP.ACCT))
    AP.ACCT = AP.ACCT[1,IN.ACCT.LEN]
*T20016 v
    PTR=1
    LOOP
      LOCATE AP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
*              IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
        IF TVO.AP.DIV<1,FND>=OLD.AP.DV AND TVO.AP.DEPT<1,FND>=OLD.AP.DP AND TVO.AP.CCTR<1,FND>=OLD.AP.CC THEN    ;*T21348
          PTR=0
        END ELSE
          PTR=FND+1
        END
      END ELSE
        TVO.AP.ACCT<1,FND> = AP.ACCT
        TVO.AP.AMT<1,FND> = 0
*CSF 25150 v
        IF MPO.ACCRUE = 'Y' THEN
          TVO.AP.FLG<1,FND> = 'P'
        END ELSE TVO.AP.FLG<1,FND> = ''
*CSF 25150 ^
*T19149 v
        TVO.AP.DIV<1,FND> = OLD.AP.DV   ;*T21348
        TVO.AP.DEPT<1,FND> = OLD.AP.DP
        TVO.AP.CCTR<1,FND> = OLD.AP.CC
*T19149 ^ 
        PTR=0  
      END
    WHILE PTR DO 
    REPEAT
    TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> - TVO.PO.VOUCH<1,LN>
*T20016 ^      
  END
1999*
  IF VALUE = "END" AND OPTION # "A" THEN
    GOSUB 2000
  END
  RETURN
*
**** PRINT PROCESS LINE VALUES
*
2000*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.NOS<1,LN> "L#8"
  P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.PROD<1,LN> "L#15"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.MISC.CAT<1,LN> "L#6"
  P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.UM<1,LN> "L#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF ICR.CNV<LN> = "MD0" THEN
    P_X  = 40 ; P_Y = SLN ; P_VALUE = INT(((TVO.PO.QTY<1,LN>/ICR.DV1<LN>) * ICR.MT1<LN>)/ICR.DV2<LN> + .5) "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,LN>, "MD2") "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  P_X  = 51 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,LN>, "MD4") "R#12" ; P_OPT = ""
  P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TVO.PO.VOUCH<1,LN>, "MD2") "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TVO.PROD.DESC<1,LN> "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
****PRINT PROCESS LINE VALUES
*
2500*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<1> "L#8"
  P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<2> "L#15"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<4> "L#6"
  P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<5> "L#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF TEMP.CNV<2> = "MD0" THEN
    P_X  = 40 ; P_Y = SLN ; P_VALUE = INT(((TEMP.VALUES<6>/TEMP.DV1<2>) * TEMP.MT1<2>)/TEMP.DV2<2> + .5) "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<6>, "MD2") "R#10" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  P_X  = 51 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<7>, "MD4") "R#12" ; P_OPT = ""
  P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.VALUES<8>, "MD2") "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*--- GET ORD & REC BAL
*
3000*
  TOTAL.VOUCH = 0
  MAT INV.CNV.REC = ""
  FOR TA = 1 TO LINES
    MATREAD INV.REC FROM INVENTORY, CONO: TVO.PO.PROD<1,TA> ELSE MAT INV.REC = ""
    TOTAL.VOUCH = TOTAL.VOUCH + TVO.PO.VOUCH<1,TA>
*
*--- SET UP INVENTORY CONVERSION
*
    BEGIN CASE
      CASE TVO.PO.TYPE = "M"
        ICR.CNV<TA> = "MD2"; ICR.DV2<TA> = 1
        ICR.DV1<TA> = 1; ICR.MT1<TA> = 1
      CASE 1
        ICR.CNV<TA> = "MD2"; ICR.DV2<TA> = 1
        ICR.DV1<TA> = 1; ICR.MT1<TA> = 1
    END CASE
    IF TVO.PO.U.COST<1,TA>+0 = 0 AND TVO.PO.VOUCH<1,TA>+0 # 0 THEN
      IF ICR.CNV<TA> = "MD0" THEN
        TEMP1 = INT(((TVO.PO.QTY<1,TA>/ICR.DV1<TA>)*ICR.MT1<TA>)/ICR.DV2<TA> + .5)
      END ELSE
        TEMP1 = TVO.PO.QTY<1,TA>
      END
      BEGIN CASE
        CASE TEMP1 + 0 = 0
          TVO.PO.U.COST<1,TA> = 0
        CASE ICR.CNV<TA> = "MD0"
          TVO.PO.U.COST<1,TA> = INT((TVO.PO.VOUCH<1,TA> * 100 / TEMP1) + .5)
        CASE 1
          TVO.PO.U.COST<1,TA> = INT((TVO.PO.VOUCH<1,TA> * 100 / TEMP1) * 100 + .5)
      END CASE
    END
  NEXT TA
  ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
* Access purchase order for vouchering details
*
4000*
  SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
  SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
  SCV.REC(3)<ECD.SCRN.NO> = TEMP.VALUES<1>
  SCV.REC(19)<ECD.SCRN.NO> = TVO.PO.TYPE
  IF TVO.PO.TYPE = "R" THEN
    SCV.REC(20)<ECD.SCRN.NO> = "REGULAR"
  END ELSE
    SCV.REC(20)<ECD.SCRN.NO> = "MISCELLANEOUS"
  END
  ECD.ACTION = 3; CALL SCRN.EDIT
  PAY.VALUES<2> = ""
  CALL PO.ACT.INQ(FNDP,PAY.VALUES)
*T24839 v
*T25039 v ; Commented out the following codes from task #24839, the 
*           re-initializing the variable to null was causing the debit
*           and credit to not offset each other.
*  TVO.AP.ACCT = '' ; TVO.AP.DIV = '' ; TVO.AP.DEPT = ''
*  TVO.AP.CCTR = '' ; TVO.AP.AMT = ''
*T25039 ^
*T24839 ^
  ECD.SCRN.NO = 10
  ECD.ACTION = 3; CALL SCRN.EDIT
  OLD.START.LINE = 0
  IF PAY.VALUES<2> = "" THEN
    GOSUB 10000
    GOSUB 2500
    RETURN TO 1020
  END
  LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
  LN = LINES
  IF OPTION = "A" THEN OLD.LINES = LINES - 1
  GOSUB 3000
  GOSUB 10000
  RETURN
*
*--- DELETE LINE ACCOUNTS
*
5000*
  GOSUB 6000
  IF OLD.ACCT = "" THEN GOTO 5050
  OLD.ACCT = OLD.ACCT: STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))
  OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
  REV.AMT = TVO.PO.VOUCH<1,LN>
  PTR = 1
  LOOP
    LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
      IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
        IF REV.AMT > TVO.DIST.AMT<1,FND> THEN
          REV.AMT = REV.AMT - TVO.DIST.AMT<1,FND>
          TVO.DIST.AMT<1,FND> = 0
        END ELSE
          TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> - REV.AMT
          REV.AMT = 0
        END
        IF TVO.DIST.AMT<1,FND> = 0 THEN
          TVO.ACCT = DELETE(TVO.ACCT,1,FND,0)
          TVO.DIST.AMT = DELETE(TVO.DIST.AMT,1,FND,0)
          TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)
          TVO.DIV = DELETE(TVO.DIV,1,FND,0)
          TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)
          TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)
          TVO.ACCT.FLG = DELETE(TVO.ACCT.FLG,1,FND,0)
          TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
          VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) ;*T20016.1
        END
        IF REV.AMT > 0 THEN
          PTR = FND + 1
        END ELSE
          PTR = 0
        END
      END ELSE
        PTR = FND + 1
      END
    END ELSE
      PTR = 0
    END
  WHILE PTR DO REPEAT
5050*
  IF AP.ACCT = "" THEN GOTO 5500
  AP.ACCT = AP.ACCT : STR("0",IN.ACCT.LEN-LEN(AP.ACCT))
  AP.ACCT = AP.ACCT[1,IN.ACCT.LEN]
  REV.AMT = TVO.PO.VOUCH<1,LN>
  PTR = 1
  LOOP
*T20016 v     
    LOCATE AP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
*           IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
      IF TVO.AP.DIV<1,FND>=OLD.AP.DV AND TVO.AP.DEPT<1,FND>=OLD.AP.DP AND TVO.AP.CCTR<1,FND>=OLD.AP.CC THEN    ;*T21348
        IF REV.AMT > TVO.AP.AMT<1,FND>*(-1) THEN
          REV.AMT = REV.AMT + TVO.AP.AMT<1,FND>
          TVO.AP.AMT<1,FND> = 0
        END ELSE
          TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> + REV.AMT
          REV.AMT = 0
        END
        IF TVO.AP.AMT<1,FND> = 0 THEN
          TVO.AP.ACCT = DELETE(TVO.AP.ACCT,1,FND,0)
          TVO.AP.AMT = DELETE(TVO.AP.AMT,1,FND,0)
          TVO.AP.FLG = DELETE(TVO.AP.FLG,1,FND,0)
*T19149 v
          TVO.AP.DIV = DELETE(TVO.AP.DIV,1,FND,0)
          TVO.AP.DEPT = DELETE(TVO.AP.DEPT,1,FND,0)
          TVO.AP.CCTR = DELETE(TVO.AP.CCTR,1,FND,0)
*T19149 ^
          PTR = FND
        END ELSE
          IF REV.AMT = 0 THEN PTR = 0 ELSE PTR = FND + 1
        END
      END ELSE
        PTR = FND+1
      END
    END ELSE
      PTR=0
    END
  WHILE PTR DO
  REPEAT
*
*--- DELETE LINE ITEM
*
5500*
  TVO.PO.NOS = DELETE(TVO.PO.NOS,1,LN,0)
  TVO.PO.PROD = DELETE(TVO.PO.PROD,1,LN,0)
  TVO.PO.WHSE = DELETE(TVO.PO.WHSE,1,LN,0)
  TVO.PO.UM = DELETE(TVO.PO.UM,1,LN,0)
  TVO.PO.QTY = DELETE(TVO.PO.QTY, 1,LN,0)
  TVO.PO.U.COST = DELETE(TVO.PO.U.COST,1,LN,0)
  TVO.PO.VOUCH = DELETE(TVO.PO.VOUCH,1,LN,0)
  TVO.PROD.DESC = DELETE(TVO.PROD.DESC,1,LN,0)
  TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,LN,0)
  TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,LN,0)
  TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,LN,0)
  RETURN
*
* Set up debit and credit accounts
*
6000*
  OLD.ACCT = ""
  TEMP.ACCT.ACCRUE=0 ;*T20016.1
  AP.ACCT = ""
  MATREAD MPO.REC FROM MISC.PO, CONO:TVO.PO.NOS<1,LN> ELSE MAT MPO.REC=""
  IF MPO.MISC.CAT<1,LN>='' THEN MPO.MISC.CAT<1,LN>=TVO.MISC.CAT
  MATREAD CAMISC.REC FROM CATEGORY.MISC,CONO:MPO.MISC.CAT<1,LN> ELSE MAT CAMISC.REC = ""
  IF MPO.ACCRUE = "Y" THEN
    MAT INV.REC = ''
    OLD.ACCT = CAMISC.CRED.EXP
    TEMP.ACCT.ACCRUE=1 ;*T20016.1
    AP.ACCT = CAMISC.AP.ACCT
  END ELSE
    OLD.ACCT = CAMISC.EXP.ACCT
    AP.ACCT = CAMISC.AP.ACCT
  END
  LOCATE TVO.PO.PROD<1,LN> IN MPO.PROD.NUM<1>,1 SETTING POSIT THEN
    OLD.DV = MPO.MISC.DIV<1,POSIT>
    OLD.DP = MPO.MISC.DEPT<1,POSIT>
    OLD.CC = MPO.MISC.CCTR<1,POSIT>
  END ELSE
    OLD.DV = GEN.DIV
    OLD.DP = GEN.DEPT
    OLD.CC = GEN.CCTR
  END
*T21348 v
  OLD.AP.DV = OLD.DV; OLD.AP.DP = OLD.DP; OLD.AP.CC = OLD.CC
  IF OLD.ACCT = '' THEN
    OLD.ACCT = TVO.ACCT<1,1>
    OLD.DV = TVO.DIV<1,1>; OLD.DP = TVO.DEPT<1,1>; OLD.CC = TVO.CCTR<1,1>
  END
  IF AP.ACCT = '' THEN
    AP.ACCT = TVO.AP.ACCT<1,1>
    OLD.AP.DV=TVO.AP.DIV<1,1>; OLD.AP.DP=TVO.AP.DEPT<1,1>; OLD.AP.CC=TVO.AP.CCTR<1,1>
  END
  MATREAD COA.REC FROM COA, CONO:AP.ACCT THEN
    IF COA.LEVEL < 3 THEN
      OLD.AP.CC = GEN.CCTR
    END
    IF COA.LEVEL < 2 THEN
      OLD.AP.DP = GEN.DEPT
    END
    IF COA.LEVEL < 1 THEN
      OLD.AP.DV = GEN.DIV
    END
  END
  MATREAD COA.REC FROM COA, CONO:OLD.ACCT THEN
    IF COA.LEVEL < 3 THEN
      OLD.CC = GEN.CCTR
    END
    IF COA.LEVEL < 2 THEN
      OLD.DP = GEN.DEPT
    END
    IF COA.LEVEL < 1 THEN
      OLD.DV = GEN.DIV
    END
  END
*T21348 ^
  RETURN
*
* Prompt for misc category
*
*
**** SCROLL ROUTINE
*
10000*
  START.LINE =1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE=OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE=START.LINE
  CNT=1
  FOR N=START.LINE TO LAST.LINE
    S.SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = S.SLN ; P_VALUE = N "L#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.NOS<1,N> "L#8"
    P_X  := AM:13 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.PROD<1,N> "L#15"
    P_X  := AM:29 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.MISC.CAT<1,N> "L#6"
    P_X  := AM:36 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.UM<1,N> "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF ICR.CNV<N> = "MD0" THEN
      P_X  = 40 ; P_Y = S.SLN ; P_VALUE = INT((TVO.PO.QTY<1,N>/ICR.DV1<N>) * ICR.MT1<N>/ICR.DV2<N> + .5) "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
      P_X  = 40 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,N>, "MD2") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    P_X  = 51 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,N>, "MD4") "R#12" ; P_OPT = ""
    P_X  := AM:64 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO.VOUCH<1,N>, "MD2") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 13 ; P_Y = S.SLN+1 ; P_VALUE = TVO.PROD.DESC<1,N> "L#45" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR N=CNT TO PAGE.SIZE
    S.SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = S.SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = S.SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
10001*
  RETURN
*
**** ENTER PROGRAM QUESTION
*
11000*
  S.VALUE = VALUE
  X = 0; Y = 23; TYP = 18; PMSG = QUESTION
  CALL EDIT.SUB
  IF VALUE = "END" THEN VALUE = "N"
  REPLY = VALUE
  VALUE = S.VALUE
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*** ENTER LINE NUMBER
70000*
  GOSUB 10000
  ECD.NUM = 15; SCV.REC(15)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
*
* T23776 v
75000 *
  IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,MPO.OFFSET>
  IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,MPO.OFFSET>
  IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,MPO.OFFSET>
  MATREAD COA.REC FROM COA, CONO:AP.ACCT THEN
    IF COA.LEVEL < 3 THEN
      AP.CCTR = GEN.CCTR
    END
    IF COA.LEVEL < 2 THEN
      AP.DEPT = GEN.DEPT
    END
    IF COA.LEVEL < 1 THEN
      AP.DIV = GEN.DIV
    END
  END
  MATREAD COA.REC FROM COA, CONO:OLD.ACCT THEN
    IF COA.LEVEL < 3 THEN
      MPO.MISC.CCTR<1,MPO.OFFSET> = GEN.CCTR
    END
    IF COA.LEVEL < 2 THEN
      MPO.MISC.DEPT<1,MPO.OFFSET> = GEN.DEPT
    END
    IF COA.LEVEL < 1 THEN
      MPO.MISC.DIV<1,MPO.OFFSET> = GEN.DIV
    END
  END
*C33616  IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,MPO.OFFSET>
*C33616  IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,MPO.OFFSET>
*C33616  IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,MPO.OFFSET>
  RETURN
* T23776 ^
*
***** CALLS FOR SYSCOM
91000*
  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  RETURN
END
