*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - APD.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
* 10/19/94 CLW TASK 17919 - Accrual accounting
*T21177 diane 01/21/1997 * REV11 UPG ADD CLOSE
*T21177 diane 01/23/1997 * REV11 UPG ADD CLOSE
*T23278 markt 11/11/1998 * Make fiscal data multi-value by division
*T26229 gat 10/17/2001 * FIX DISPLAY PROBLEM ON PROCESSING
*T26685 lhelms 07/02/2002 * REV12 DIVISION SECURITY
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>COA
*COPY>APS.CPYLIB>MCD
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>PMC.CPYLIB>DIVISION ;* T23278
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
  MAT FILE.VARS=''
  MAT EDIT.COM.DRIVER=''
*
***** SETUP ERRMSG ROUTINE
*
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- PROCREAD
*
  PROCREAD INBUFF ELSE
      ERRMSG = "MUST RUN FROM PROC"
      GOSUB 91000; GOTO 99999
  END
  CONO = INBUFF<1>
  DIV.CODE = INBUFF<7>;* T23278
  FR.NEXT.PER = ""
*
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FILE IS MISSING';GOTO 93000
  OPEN '','MCD' TO MCD ELSE ERRMSG='MCD FILE IS MISSING';GOTO 93000
  OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
  OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MISSING';GOTO 93000
  OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE IS MISSING';GOTO 93000
  OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE IS MISSING';GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000;* T23278
*
***** GET CONO
*
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
  END
  SYS.FISCAL = 'APDFISCAL'
  STMT.HEAD = 'CASH DISBURSEMENTS'
*COPY>PMCBP>EOD.POST
  IF ECD.RET.VALUE = 'END' THEN
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99000
  END
  CLEARFILE EOM.TRANS
  CLEARFILE POST.REJECTS
  PRR.SEQ = 10000
  OLD.TYPE = "!@#$%^&*"
  OLD.VEND = "!@#$%^&*"
  MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
  CD.CSH.ACCT = GLTB.CASH
  CD.CSH.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.AP ELSE COA.LEVEL = 0
  CD.VCH.ACCT = GLTB.AP
  CD.VCH.LEVEL = COA.LEVEL
  MATREAD COA.REC FROM COA, CONO : GLTB.PUR.DISC ELSE COA.LEVEL = 0
  CD.DSC.ACCT = GLTB.PUR.DISC
  CD.DSC.LEVEL = COA.LEVEL
  DATA = 1
  LOOP
      READNEXT MCD.ID ELSE DATA = 0
  WHILE DATA DO
      IF CONO # MCD.ID[1,3] THEN GOTO 999
      MATREADU MCD.REC FROM MCD, MCD.ID ELSE
          MAT PRR.REC = ''
          PRR.FILE = 'MCD'
          PRR.ERR = 'CANNOT LOCATE'
          MCD.CHECK = MCD.ID[LEN(MCD.ID)-5,6]
          PRR.ID = MCD.CHECK
          PRR.SEQ = PRR.SEQ + 1
          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
          RELEASE MCD, MCD.ID
          GOTO 999
      END
*         IF MCD.MON <> FR.CURR.PER THEN;* T23278
      IF MCD.MON <> FR.CURR.PER<1,POS> THEN;* T23278
          RELEASE MCD, MCD.ID
          GOTO 999
      END
      IF MCD.GLA.DATE # "" AND MCD.GLA.DATE # "P" THEN
          RELEASE MCD, MCD.ID
          GOTO 999
      END
***** T23278 v
      IF MCD.DIV<1,1,1> # DIV.CODE AND DIV.CODE # "ALL" THEN
          RELEASE MCD, MCD.ID
          GOTO 999
      END
***** T23278 ^
      MCD.TYPE = MCD.ID[4,1]
      BEGIN CASE
          CASE OLD.TYPE # MCD.TYPE
              OLD.TYPE = MCD.TYPE
              OLD.VEND = MCD.VEND
              NEW.REC = 0; NEW.PTR = 0
          CASE OLD.VEND # MCD.VEND
              OLD.VEND = MCD.VEND
              NEW.REC = 0; NEW.PTR = 0
      END CASE
*       IF MCD.MON <> FR.CURR.PER THEN GOTO 998
      P_X  = 5 ; P_Y = 19 ; P_VALUE = 'NOW PROCESSING CHECK NUMBER - ':MCD.CHECK "L#10" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      VCNT = COUNT(MCD.VEND,VM) + (MCD.VEND # "")
      CNT = COUNT(MCD.VOUCH,VM) + (MCD.VOUCH # "")
      FOR I = 1 TO CNT
          SCNT = COUNT(MCD.VOUCH.GRS<1,I>,SVM) + (MCD.VOUCH.GRS<1,I> # "")
          FOR II = 1 TO SCNT
              BEGIN CASE
                  CASE MCD.DIV<1,I,II> = ""
                      CASH.DIV = GEN.DIV
                      CASH.DEPT = GEN.DEPT
                      CASH.CCTR = GEN.CCTR
                  CASE MCD.DEPT<1,I,II> = ""
                      CASH.DIV = MCD.DIV<1,I,II>
                      CASH.DEPT = GEN.DEPT
                      CASH.CCTR = GEN.CCTR
                  CASE MCD.CCTR<1,I,II> = ""
                      CASH.DIV = MCD.DIV<1,I,II>
                      CASH.DEPT = MCD.DEPT<1,I,II>
                      CASH.CCTR = GEN.CCTR
                  CASE 1
                      CASH.DIV = MCD.DIV<1,I,II>
                      CASH.DEPT = MCD.DEPT<1,I,II>
                      CASH.CCTR = MCD.CCTR<1,I,II>
              END CASE
              IF MCD.VOUCH.DSC<1,I,II> + 0 <> 0 THEN
                  CASH.AMT = MCD.VOUCH.DSC<1,I,II>
                  BEGIN CASE
                      CASE CD.DSC.LEVEL = 0
                          T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : CD.DSC.ACCT
                      CASE 1
                          T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : CD.DSC.ACCT
                  END CASE
***                 CASE CD.DSC.LEVEL = 1
***                    T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : CD.DSC.ACCT
***                 CASE CD.DSC.LEVEL = 2
***                    T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : CD.DSC.ACCT
***                 CASE 1
***                    T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : CD.DSC.ACCT
***                 END CASE
                  GOSUB 2000
              END
              BEGIN CASE
                  CASE MCD.BANK.ACCT = CD.CSH.ACCT
                  CASE MCD.BANK.ACCT # ""
                      MCD.BANK.ACCT = MCD.BANK.ACCT : STR("0",IN.ACCT.LEN-LEN(MCD.BANK.ACCT))
                      MCD.BANK.ACCT = MCD.BANK.ACCT[1,IN.ACCT.LEN]
                      MATREAD COA.REC FROM COA, CONO : MCD.BANK.ACCT ELSE COA.LEVEL = 0
                      CD.CSH.ACCT = MCD.BANK.ACCT
                      CD.CSH.LEVEL = COA.LEVEL
                  CASE GLTB.CASH = CD.CSH.ACCT
                  CASE 1
                      MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
                      CD.CSH.ACCT = GLTB.CASH
                      CD.CSH.LEVEL = COA.LEVEL
              END CASE
              CASH.AMT = MCD.VOUCH.NET<1,I,II>
              BEGIN CASE
                  CASE CD.CSH.LEVEL = 0
                      T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : CD.CSH.ACCT
*CSF 25173 v
                  CASE CD.CSH.LEVEL = 1 AND CD.CSH.ACCT # GLTB.CASH
                      T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : CD.CSH.ACCT
                  CASE CD.CSH.LEVEL = 2 AND CD.CSH.ACCT # GLTB.CASH
                      T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : CD.CSH.ACCT
                  CASE CD.CSH.LEVEL = 3 AND CD.CSH.ACCT # GLTB.CASH
                      T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : CD.CSH.ACCT
*CSF 25173 ^
                  CASE 1
                      T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : CD.CSH.ACCT
              END CASE
***              CASE CD.CSH.LEVEL = 1
***                 T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : CD.CSH.ACCT
***              CASE CD.CSH.LEVEL = 2
***                 T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : CD.CSH.ACCT
***              CASE 1
***                 T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : CD.CSH.ACCT
***              END CASE
              GOSUB 2000
              IF NEW.PTR THEN
                  NEW.REC = NEW.REC + 1
                  NEW.PTR = 0
              END
          NEXT II
      NEXT I
      MCD.GLA.DATE = "P"
      MATWRITE MCD.REC ON MCD, MCD.ID
999 REPEAT
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
2000*
  ETR.ID = CONO : T.ACCT : OLD.TYPE :"!": MCD.VEND<1,1>
  BEGIN CASE
      CASE CASH.AMT > 0
          ETR.ID = ETR.ID : "!C*"
      CASE CASH.AMT + 0 < 0
          ETR.ID = ETR.ID : "!D*"
      CASE 1
          GOTO 2999
  END CASE
  IF VCNT > 1 THEN
      NEW.REC = 0
      FND = 0
      LOOP
          MATREAD ETR.REC FROM EOM.TRANS, ETR.ID : NEW.REC ELSE
              MAT ETR.REC = ""
              ETR.RDATE = MCD.VEND<1,2>
          END
          IF ETR.RDATE # MCD.VEND<1,2> THEN
              NEW.REC = NEW.REC + 1
          END ELSE
              ETR.ID = ETR.ID : NEW.REC
              FND = 1
          END
      UNTIL FND DO REPEAT
  END ELSE
      ETR.ID = ETR.ID : NEW.REC
      MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
          MAT ETR.REC = ""
      END
  END
  ETR.AMT = ETR.AMT - CASH.AMT
  LOCATE MCD.CHECK IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS MCD.CHECK BEFORE ETR.TRAN<1,PTR>
  INS MCD.CHK.DATE BEFORE ETR.DATE<1,PTR>
  INS (0 - CASH.AMT) BEFORE ETR.TAMT<1,PTR>
  INS MCD.VOUCH<1,I> BEFORE ETR.REF<1,PTR>
  IF PTR > 99 THEN NEW.PTR = 1
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99000 
*  IF FR.NEXT.PER = "" THEN;* T23278
  IF FR.NEXT.PER<1,POS> = "" THEN;* T23278
      INBUFF<5> = "END"
      PROCWRITE INBUFF
  END
*** END OF JOB ***
99999 END
