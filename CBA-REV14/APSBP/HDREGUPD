******************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - HDREGUPD
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 06/03/86
* DESCRIPTION - This program update (AP.HIST) & (MCD) files after
*                 hand check register.
*  MOD CLW 12/12/94 accural accounting task 17919
* T19149 RKB 05/02/95 add support for ap credit div,dept,cctr
* T18573 LLH 7/95 1-52 WEEK ACCOUNTING
*T23278 markt 11/25/1998 * Make fiscal data multi-value by division.
*T26685 cmykleb 08/22/2002 * Division Security
*ENDDOC
******************************************************
*COPY>APS.CPYLIB>MCD
*COPY>APS.CPYLIB>HDCH
*COPY>APS.CPYLIB>AP.HIST
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>FISCAL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*--- INITIALZATION
*
  MAT HDCK.REC=""
  MAT MCD.REC=""
  MAT COMP.REC=""
  MAT APH.REC=""
*
*--- READ PROC VALUES
*
  PROCREAD PROC.VALUES ELSE
      ERRMSG = "THIS PROGRAM MUST RUN FROM A PROC" ; GOTO 93000
  END
  CONO = PROC.VALUES<1>
  DIV.CODE = PROC.VALUES<7>;* T23278
*
*--- SETUP SYSTEM ERRMSG
*
  SYS.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN ALL FILES
*
  OPEN "","HDCH" TO HDCH ELSE ERRMSG="HDCH FILE IS MISSING";GOTO 93000
  OPEN "","MCD" TO MCD ELSE ERRMSG="MCD FILE IS MISSING";GOTO 93000
  OPEN "","MCD.TAG" TO MCD.TAG ELSE ERRMSG="MCD.TAG FILE IS MISSING";GOTO 93000
  OPEN "DICT","HDCH" TO FD.HDCH ELSE ERRMSG="DICT HDCH IS MISSING";GOTO 93000
  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE IS MISSING";GOTO 93000
  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING";GOTO 93000
*
*--- GET CONTROL VALUES
*
  READV PRINT.DATE FROM FD.HDCH ,CONO:"HDDATE",1 ELSE PRINT.DATE=OCONV(DATE(),"D2/")
  PRINT.DATE=ICONV(PRINT.DATE,"D2/")
  MATREAD FISCAL.REC FROM CONTROL, CONO:"APDFISCAL" ELSE
      ERRMSG = "FISCAL MONTH IS MISSING " ; GOTO 93000
  END
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
***** T23278 v
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
      GOTO 93000
  END
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"
      GOTO 93000
  END
*
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN 
      IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
          ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
          GOSUB 91000; GOTO 99999
      END
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING DIV.POS ELSE
          ERRMSG = "Division ":DIV.CODE:" not on Control File DIVISIONS Record"
          GOTO 93000
      END
  END ELSE
      DIV.POS = 1
  END
*  MON = FR.CURR.PER[5,2];* T23278
  MON = FR.CURR.PER<1,DIV.POS>[5,2];* T23278
  IF MON < 1 OR MON > NUM.PERIODS THEN
      ERRMSG = "ERROR IN CONTROL RECORD 'APDFISCAL'"; GOTO 93000
  END
  MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG="COMPANY RECORD IS MISSING";GOTO 93000
  IF CO.APHIST.FLG = "Y" THEN
      OPEN "","AP.HIST" TO AP.HIST ELSE ERRMSG="AP.HIST";GOTO 93000
  END
  MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG="GL TABLE IS MISSING";GOTO 93000
  P_X  = 5 ; P_Y = 17 ; P_VALUE = "Hand check register file update in process" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*--- START PROCESSING
*
  DATA = 1
  LOOP
      READNEXT ID ELSE DATA = 0
  WHILE DATA = 1 DO
      MATREADU HDCK.REC FROM HDCH , ID ELSE
          RELEASE HDCH, ID
          GOTO 199
      END
      GOSUB 1000
199*
  REPEAT
  GOTO 99999
*
*--- START UPDATE FILES
*
1000*
  IF CO.APHIST.FLG = "Y" THEN
      MATREADU APH.REC FROM AP.HIST, CONO:HDCK.NUM:HDCK.DATE ELSE
          MAT APH.REC = ""
          APH.VEND = HDCK.VEND
*          APH.MON = FR.CURR.PER;* T23278
          APH.MON = FR.CURR.PER<1,DIV.POS>;* T23278
          APH.FLG = ""
      END
      AD.CNT = COUNT(APH.VOUCHER, VM) + (APH.VOUCHER # "") + 1
      APH.VOUCHER<1,AD.CNT>=ID[4,6]
      APH.INV<1,AD.CNT>=HDCK.INV
      APH.INV.DATE<1,AD.CNT>=HDCK.INV.DATE
      APH.GRS.AMT<1,AD.CNT>=HDCK.GRS.AMT
      APH.MER.AMT<1,AD.CNT>=HDCK.GRS.AMT - HDCK.DSC.AMT
      APH.DSC.AMT<1,AD.CNT>=HDCK.DSC.AMT
      MATWRITE APH.REC ON AP.HIST,CONO:HDCK.NUM:HDCK.DATE
  END
  IF HDCK.DUE.DATE = "PAIDC" THEN TYPE = "C" ELSE TYPE ="H"
  VEND.NUM = HDCK.VEND<1,1>
  HDCK.NUM = STR("0",6 - LEN(HDCK.NUM)):HDCK.NUM
  KEY = TYPE:HDCK.DISB.ACCT:PRINT.DATE:HDCK.NUM
  MATREADU MCD.REC FROM MCD , CONO:KEY ELSE
      MAT MCD.REC = ""
      MCD.CHECK = HDCK.NUM
      MCD.BANK.ACCT = HDCK.DISB.ACCT
      MCD.CHK.DATE = PRINT.DATE
      MCD.VEND = HDCK.VEND
*      MCD.MON = FR.CURR.PER;* T23278
      MCD.MON = FR.CURR.PER<1,DIV.POS>;* T23278
      MCD.NO.OF.CHK = 1
  END
  MCD.GRS.AMT = MCD.GRS.AMT + HDCK.GRS.AMT
  MCD.DSC.AMT = MCD.DSC.AMT + HDCK.DSC.AMT
  MCD.NET.AMT = MCD.NET.AMT + HDCK.GRS.AMT - HDCK.DSC.AMT
  CALL AMOUNT.DIST.SUB(HDCK.DIV,HDCK.DIST.AMT,HDCK.GRS.AMT,ALL.GRS,HDCK.DSC.AMT,ALL.DSC,ERRMSG)
  VFND = COUNT(MCD.VOUCH,VM) + (MCD.VOUCH # "") + 1
  MCD.VOUCH<1,VFND> = ID[4,6]
  MCD.VOUCH.GRS<1,VFND> = ""
  MCD.VOUCH.DSC<1,VFND> = ""
  MCD.VOUCH.NET<1,VFND> = ""
  MCD.DIV<1,VFND> = ""
  MCD.DEPT<1,VFND> = ""
  MCD.CCTR<1,VFND> = ""
  TR.CNT = COUNT(HDCK.DIST.AMT,VM) + (HDCK.DIST.AMT # "")
  FOR TR = 1 TO TR.CNT
      DPTR = 1
      LOOP
          LOCATE HDCK.DIV<1,TR> IN MCD.DIV<1,VFND>,DPTR SETTING DFND ELSE
              MCD.DIV<1,VFND,DFND> = HDCK.DIV<1,TR>
              MCD.DEPT<1,VFND,DFND> = HDCK.DEPT<1,TR>
              MCD.CCTR<1,VFND,DFND> = HDCK.CCTR<1,TR>
              MCD.VOUCH.GRS<1,VFND,DFND> = ALL.GRS<1,TR>
              MCD.VOUCH.DSC<1,VFND,DFND> = ALL.DSC<1,TR>
              MCD.VOUCH.NET<1,VFND,DFND> = ALL.GRS<1,TR> - ALL.DSC<1,TR>
              DPTR = 0
          END
          BEGIN CASE
              CASE DPTR = 0
              CASE MCD.DEPT<1,VFND,DFND> # HDCK.DEPT<1,TR>
                  DPTR = DFND + 1
              CASE MCD.CCTR<1,VFND,DFND> # HDCK.CCTR<1,TR>
                  DPTR = DFND + 1
              CASE 1
                  MCD.VOUCH.GRS<1,VFND,DFND> = MCD.VOUCH.GRS<1,VFND,DFND> + ALL.GRS<1,TR>
                  MCD.VOUCH.DSC<1,VFND,DFND> = MCD.VOUCH.DSC<1,VFND,DFND> + ALL.DSC<1,TR>
                  MCD.VOUCH.NET<1,VFND,DFND> = MCD.VOUCH.NET<1,VFND,DFND> + ALL.GRS<1,TR> - ALL.DSC<1,TR>
                  DPTR = 0
          END CASE
      WHILE DPTR DO
      REPEAT
  NEXT TR
  MATWRITE MCD.REC ON MCD,CONO:KEY
  TAG = ''
  WRITE TAG ON MCD.TAG,CONO:KEY
*
* Process A/P account(s) details   Task 17919
*
  AP.CNT=COUNT(HDCK.AP.ACCT,VM) + (HDCK.AP.ACCT # "")
  CALL AMOUNT.DIST.SUB(HDCK.AP.ACCT,HDCK.AP.AMT,HDCK.GRS.AMT,AP.GRS,0,AP.DSC,ERRMSG)
  FOR AP=1 TO AP.CNT
      AP.KEY=CONO:TYPE:HDCK.AP.ACCT<1,AP>:PRINT.DATE:HDCK.NUM
      MATREADU MCD.REC FROM MCD, AP.KEY ELSE
          MAT MCD.REC = ""
          MCD.CHECK = HDCK.NUM
          MCD.CHK.DATE = PRINT.DATE
          MCD.VEND = HDCK.VEND
*          MCD.MON = FR.CURR.PER;* T23278
          MCD.MON = FR.CURR.PER<1,DIV.POS>;* T23278
          MCD.NO.OF.CHK = 1
      END
      MCD.BANK.ACCT = HDCK.AP.ACCT<1,AP>
      MCD.GRS.AMT = MCD.GRS.AMT - AP.GRS<1,AP>
      MCD.NET.AMT = MCD.NET.AMT - AP.GRS<1,AP>
      VCH = ID[4,6]
      LOCATE VCH IN MCD.VOUCH<1>,1 SETTING POS ELSE
          INS VCH BEFORE MCD.VOUCH<1,POS>
          INS "" BEFORE MCD.VOUCH.GRS<1,POS>
          INS "" BEFORE MCD.VOUCH.DSC<1,POS>
          INS "" BEFORE MCD.VOUCH.NET<1,POS>
          INS "" BEFORE MCD.DIV<1,POS>
          INS "" BEFORE MCD.DEPT<1,POS>
          INS "" BEFORE MCD.CCTR<1,POS>
      END
*T19149 v       
*       LOCATE '00' IN MCD.DIV<1,POS>,1 SETTING DFND ELSE
*          INS '00'  BEFORE MCD.DIV<1,POS,DFND>
*          INS '00'  BEFORE MCD.DEPT<1,POS,DFND>
*          INS '000' BEFORE MCD.CCTR<1,POS,DFND>
      IF HDCK.AP.DIV<1,AP> = '' THEN
***** T23278 v
          IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
              CDIV = DIV.CODE
          END ELSE
***** T23278 ^
              CDIV = '00'
          END ;* T23278
      END ELSE
          CDIV = HDCK.AP.DIV<1,AP>
      END
      IF HDCK.AP.DEPT<1,AP> = '' THEN
          CDEPT = '00'
      END ELSE
          CDEPT = HDCK.AP.DEPT<1,AP>
      END
      IF HDCK.AP.CCTR<1,AP> = '' THEN
          CCCTR = '000'
      END ELSE
          CCCTR = HDCK.AP.CCTR<1,AP>
      END
      LOCATE CDIV IN MCD.DIV<1,POS>,1 SETTING DFND ELSE
          INS CDIV BEFORE MCD.DIV<1,POS,DFND>
          INS CDEPT BEFORE MCD.DEPT<1,POS,DFND>
          INS CCCTR BEFORE MCD.CCTR<1,POS,DFND>
*T19149 ^           
          INS 0     BEFORE MCD.VOUCH.GRS<1,POS,DFND>
          INS 0     BEFORE MCD.VOUCH.DSC<1,POS,DFND>
          INS 0     BEFORE MCD.VOUCH.NET<1,POS,DFND>
      END
      MCD.VOUCH.GRS<1,POS,DFND> = MCD.VOUCH.GRS<1,POS,DFND> - AP.GRS<1,AP>
      MCD.VOUCH.NET<1,POS,DFND> = MCD.VOUCH.NET<1,POS,DFND> - AP.GRS<1,AP>
      MATWRITE MCD.REC ON MCD, AP.KEY
      WRITE '' ON MCD.TAG, AP.KEY
  NEXT AP
*
  DELETE HDCH, ID
  RETURN
*--- CALLS FOR SYSCOM
91000*
  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
  END

