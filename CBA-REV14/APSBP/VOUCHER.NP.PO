  SUBROUTINE VOUCHER.NP.PO(V.CODE,PO.NO)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>POS.CPYLIB>COM.MPO
*COPY>APS.CPYLIB>COM.APS.FILE.VARS
*COPY>APS.CPYLIB>COM.TEMP.VOUCHERS
*COPY>APS.CPYLIB>COM.VOUCHER.MAINT
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - VOUCHER.NP.PO
* BY          - jamesf
* DATE        - 12/30/99
* DESCRIPTION
*  This Program is used to enter all non-primac PO's and product's.
*T24137 lanny 04/24/2000 * New screen
*T25824 hlehr 07/31/2001* upgrage to rev12
*T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,ST).
*T26556 cmykleb 06/11/2002 * Correct problem with new mod.
*C40187 ajibaly 06/18/2002 * Correct display of of an extra line after x-ref
*T28171 lross 07/06/2004 * Dept for acct'ng use only 1st 2 digits.
*T28209 lross 08/03/2004 * Wait until line-item complete to read NEXT NO.
*********************************************************************
*
**** INSERT FILE EQUATES
*
*COPY>APS.CPYLIB>TEMP.VOUCHERS
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>COA
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>GEN.XREF.SUB
*
**** INITIALIZATION
*
  OPEN '','XREF.DATA' TO XREF.DATA ELSE
    ERRMSG = 'XREF.DATA FILE IS MISSING'
    GOSUB 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'PREFIX FILE IS MISSING'
    GOSUB 93000
  END
  MAT OPO.REC = ''
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
  BEGIN.PAGE = 6
  PAGE.SIZE = 6
  LINE.SPACE = 2
  LINES = 0
  LN = 0
  OLD.START.LINE=0
  TOTAL.VOUCH = 0
  OPTION = ""
  PAY.VALUES = ""
  OLD.ACCT = ""
  OAP.ACCT = ''
  NEW.ACCT = ''
  AP.ACCT = ""
  CURR.OFFSET=0
  OLD.DV = GEN.DIV
  OLD.DP = GEN.DEPT
  OLD.CC = GEN.CCTR
  TVO.ACCT.FLAG=''
  TEMP.ACCT.ACCRUE=0
  TEMP.VALUES = ""
*
**** SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**** MAIN PROCESS
*
  VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
  MATREAD VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.REC = ""
  IF TVO.PO.NOS = "" THEN
    OPTION = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO
    REPEAT
    LN = LINES
  END ELSE
    LINES = DCOUNT(TVO.PO.NOS, VM)
    LN = 1
    GOSUB 3000    ;* Accumulate total vouchered
  END
  GOSUB 10000
*
***** ENTER OPTIONS
*
  MORE = 1
  LOOP
    LINES = DCOUNT(TVO.PO.NOS<1>,VM)
    ECD.NUM = 14
    SCV.REC(14)<ECD.SCRN.NO> = ""; ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'E' OR OPTION = 'END'
        TVO.GRS.AMT = TOTAL.VOUCH
        TVO.MER.AMT = TOTAL.VOUCH
        MORE = 0
      CASE OPTION = 'S'
        LN = START.LINE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 10000
      * T25978 ^
      CASE OPTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO
        REPEAT
        LN = LINES
      CASE OPTION = "C"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          GOSUB 80000
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
          GOSUB 1000
        END
      CASE OPTION = "D"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          GOSUB 80000
          TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>
          ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
          ECD.ACTION = 5; CALL SCRN.EDIT
          GOSUB 5000
          LINES = DCOUNT(TVO.PO.NOS,VM)
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 10000
    END CASE
  WHILE MORE DO
  REPEAT
  GOTO 99999
*
**** ENTER LINE INFORMATION
*
1000*
  GOSUB 10000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN -1, PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  TEMP.VALUES = ""
  TEMP.ACCT.ACCRUE=0 ;* T20016.1
  OLD.ACCT = ""
  AP.ACCT = ""
  OLD.DV = GEN.DIV
  OLD.DP = GEN.DEPT
  OLD.CC = GEN.CCTR
  IF OPTION = "A" THEN GOTO 1020
  TEMP.VALUES = TVO.PO.NOS<1,LN>
  TEMP.VALUES<2> = TVO.PO.PROD<1,LN>
  TEMP.VALUES<3> = TVO.PROD.DESC<1,LN>
  TEMP.VALUES<4> = TVO.PO.WHSE<1,LN>
  TEMP.VALUES<5> = TVO.PO.QTY<1,LN>
  TEMP.VALUES<6> = TVO.PO.VOUCH<1,LN>
  OPO.OFFSET=0 ; PRODOFF=0
  GOSUB 80000
*
**** ENTER JOB NUMBER
*
1020*
  CURR.VOUCH=TVO.PO.VOUCH<1,LN>
*  X = 6; Y = SLN; MAXL = 8; TYP = 1; O.R = "R"; VALDAT = ""; HMSG = "Enter a valid job number"
*T28209 v The following code relating to VPS.REC is irrelevant since the
*         NXTPO number is bumped for every line-item entered, every line
*         will be a unique PO Code therefore it will never read a valid
*         VPS record. This code was probably included from the original 
*         VOUCHER.OS.PO from which this program was cloned.
*         Move the READ for NXTPO to just prior to the WRITE.
* IF OPTION = 'A' THEN
*   READU NP.PONO FROM CONTROL, CONO:"NEXT.NP.PO.NUM" ELSE
*     NP.PONO = 1000
*   END
*   NXTPO = NP.PONO + 1
*   IF NXTPO > 999999 THEN NXTPO = 1000
*   TVO.PO.NOS<1,LN> = "NP":NXTPO ;* C40187
* END
* VPS.KEY=VSTAT.KEY:"!":TVO.PO.NOS<1,LN> ;* C40187
* MATREAD VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC = ''
  MAT VPS.REC = ''
*T28209 ^
  LIST.O.JOBS='' ; OTH.DEFAULT=''
  IF VPS.PROD # "" THEN
    NUM.PROD=DCOUNT(VPS.PROD,VM)
    IF NUM.PROD = 1 THEN
      OTH.DEFAULT=VPS.PROD
    END ELSE
      FOR KK=1 TO NUM.PROD
        IF KK=1 THEN
          LIST.O.JOBS=VPS.PROD<1,KK>
        END ELSE
          LIST.O.JOBS=LIST.O.JOBS:", ":VPS.PROD<1,KK>
        END
      NEXT KK
    END
  END
  O.R = 'R'
  BEGIN CASE
    CASE TVO.PO.PROD<1,LN> # ""
      DEFAULT = TVO.PO.PROD<1,LN>; O.R = "O"
    CASE TEMP.VALUES<2> # ""
      DEFAULT = TEMP.VALUES<2>; O.R = "O"
    CASE OTH.DEFAULT # "" 
      DEFAULT = OTH.DEFAULT ;O.R='O'
  END CASE
  IF DEFAULT = "" AND LIST.O.JOBS # "" THEN
    HMSG=HMSG:" (":LIST.O.JOBS:")"
    IF LEN(HMSG) > 70 THEN
* break the line into a multi prompt line.
      GOSUB 6000 ;* 
    END
  END
  IF TVO.DIV<1,LN> # "" THEN OLD.DV = TVO.DIV<1,LN>
  X = 6; Y = SLN; MAXL = 8; TYP = 1; VALDAT = ""; HMSG = "Enter a valid job number"
  CALL EDIT.SUB
  P_X = 6; P_Y = SLN; P_VALUE = VALUE 'L#8'; P_OPT = ''
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF VALUE = "END" THEN GOTO 1999
  CHECK.FLG = ''
  LOCATE VALUE IN VPS.PROD<1>,1 SETTING FNDPD ELSE FNDPD = 0
  IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<2> THEN
    QUESTION = "This job is not setup for this PO. Ok to use? (Y/N)"
    GOSUB 11000
    IF REPLY = "N" THEN GOTO 1020
  END
  MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
    ERRMSG = "JOB # (":VALUE:") not on file."
    GOSUB 91000
    GOTO 1020
  END
  IF JOB.DIV # TVO.DIV.OWNER AND TVO.DIV.OWNER # GEN.DIV THEN
    ERRMSG='JOB is for Division ':JOB.DIV:' Voucher Division is ':TVO.DIV.OWNER
    GOSUB 91000
    GOTO 1020
  END
  TEMP.VALUES<2> = VALUE
  TEMP.VALUES<3> = JOB.DESC<1,1>
  P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T26556  TVO.JOB = VALUE
*
**** ENTER OSP CATEGORY
*
1030*
  X = 18; Y = SLN; TYP = 1; MAXL = 7; O.R = 'O'; VALDAT = ""; HMSG = "Enter a valid OSP category number"
  BEGIN CASE
    CASE TVO.PO.WHSE<1,LN> # ""
      DEFAULT = TVO.PO.WHSE<1,LN>; O.R = 'O'
    CASE TEMP.VALUES<4> # ""
      DEFAULT = TEMP.VALUES<4>; O.R = 'O'
    CASE VPS.WHSE<1,FNDPD> # ''
      DEFAULT = VPS.WHSE<1,FNDPD> ; O.R = 'O'
  END CASE
  IF DEFAULT # '' THEN
    MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DEFAULT ELSE
      ERRMSG = "Original category ':DEFAULT:' is not on file"
      GOSUB 91000
      GOTO 1030
    END
    IF CAOS.ACCRU.LIAB = '' AND CAOS.AP.ACCT = '' THEN   ;* Task 17919
      ERRMSG = "Invalid Account on Category !"
      GOSUB 91000
      GOTO 1030
    END
    OLD.ACCT = CAOS.APL
    OAP.ACCT = CAOS.AP.ACCT
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  IF VALUE = '???' OR VALUE = '' THEN
    GXR.FILE = CATEGORY.OSP
    GXR.XREF=''
    GXR.NAME = 'CATEGORY.OSP'
    GXR.ID = ''
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
    ECD.ACTION = 2;CALL SCRN.EDIT
    ECD.ACTION = 3;CALL SCRN.EDIT
    SAVE.LN = LN
    OLD.START.LINE = 0
    IF OPTION = 'A' THEN LINES += 1 ;* C40187
    GOSUB 10000
    IF OPTION = 'A' THEN LINES -= 1 ;* C40187
    LN = SAVE.LN
    IF GXR.ID = '' THEN
      GOTO 1030
    END ELSE 
      VALUE = GXR.ID
      P_X = 18; P_Y = SLN; P_VALUE = VALUE; P_OPT = ''
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
  END
  MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:VALUE ELSE
    ERRMSG = "This category is not on file"
    GOSUB 91000
    GOTO 1030
  END
  IF CAOS.ACCRU.LIAB = '' AND CAOS.AP.ACCT = '' THEN   ;* Task 17919
    ERRMSG = "Invalid Account on Category !"
    GOSUB 91000
    GOTO 1030
  END
  NEW.ACCT = CAOS.APL
  AP.ACCT = CAOS.AP.ACCT
*C38185 v MATREAD COA.REC FROM COA, CONO:NEW.ACCT ELSE COA.LEVEL = 0
*  IF COA.LEVEL < 3 THEN
*    ERRMSG='Account Level must be 3 to allow posting to JOB!'
*    GOSUB 91000
*    GOTO 1030
*C38185 ^ END
  TEMP.VALUES<4> = VALUE
*
*** Enter Department
*
1040*
*T28171  X = 29; Y = SLN; MAXL = 2; O.R = 'R'; VALDATE = ''; TYP=3; MINL = 2
  X = 28; Y = SLN; MAXL = 5; O.R = 'R'; VALDATE = ''; TYP=7; MINL = 2
  PATRN='2N':VM:'2N-2N'
  HMSG = "Enter Department"
  BEGIN CASE
    CASE TVO.PO.DEPT<1,LN> # ""
      DEFAULT = TVO.PO.DEPT<1,LN>; O.R = 'O'
    CASE TEMP.VALUES<7> # ""
      DEFAULT = TEMP.VALUES<7>; O.R = 'O'
    CASE 1
      DEFAULT = ""
  END CASE
  IF DEFAULT # '' THEN OLD.DP = DEFAULT
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE
    ERRMSG = "This Department is not on file..."
    GOSUB 91000; GOTO 1040
  END
  TEMP.VALUES<7> = VALUE
*
*** Enter Cost Center
*
1050*
  X = 35; Y = SLN; MAXL = 3; O.R = 'R'; VALDATE = ''; TYP = 3; MINL = 3
  HMSG = "Enter Cost Center..."
  BEGIN CASE
    CASE TVO.PO.CCTR<1,LN> # ""
      DEFAULT = TVO.PO.CCTR<1,LN>; O.R = 'O'
    CASE TEMP.VALUES<8> # ""
      DEFAULT = TEMP.VALUES<8>; O.R = 'O'
    CASE 1
      DEFAULT = ""
  END CASE
  IF DEFAULT # '' THEN OLD.CC = DEFAULT
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  LOCATE VALUE IN DEPT.CCTRS<1>,1 SETTING FND ELSE
    ERRMSG = "Invalid Cost Center for specified Department..."
    GOSUB 91000; GOTO 1050
  END
  MATREAD CCTR.REC FROM COST.CNTR, CONO:VALUE ELSE
    ERRMSG = "Cost Center is not on file..."
    GOSUB 91000; GOTO 1050
  END
*
  TEMP.VALUES<8> = VALUE
*T28171 v
  IF TEMP.VALUES<7> # CCTR.DEPT THEN
    TEMP.VALUES<7> = CCTR.DEPT
    P_X=28; P_Y=SLN; P_VALUE=CCTR.DEPT; P_OPT=""; CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
*T28171 ^
*
*** Enter Operation
*
1060*
  X = 40; Y = SLN; MAXL = 4; O.R = 'R'; VALDATE = ''
  HMSG = "Enter Operation"
  BEGIN CASE
    CASE TVO.PO.OPER<1,LN> # ""
      DEFAULT = TVO.PO.OPER<1,LN>; O.R = 'O'
    CASE TEMP.VALUES<9> # ""
      DEFAULT = TEMP.VALUES<9>; O.R = 'O'
    CASE 1
      DEFAULT = ""
  END CASE
  IF DEFAULT # '' THEN OLD.OP = DEFAULT
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  LOCATE VALUE IN CCTR.OPER<1>,1 SETTING FND ELSE
    ERRMSG = "Invalid operation for selected cost center..."
    GOSUB 91000; GOTO 1060
  END
  MATREAD OPER.REC FROM OPERATION, CONO:VALUE ELSE
    ERRMSG = "This operation is not on file..."
    GOSUB 91000; GOTO 1060
  END
*
  TEMP.VALUES<9> = VALUE
*
*
**** Enter Amount
*
1070*
  X = 57; Y = SLN; MAXL = 10; TYP = 4; SCALER = 2; O.R = 'R'
  HMSG = "Enter Amount"
  BEGIN CASE
    CASE TVO.PO.VOUCH<1,LN> # ""
      DEFAULT = OCONV(TVO.PO.VOUCH<1,LN>,'MD2'); O.R = 'O'
    CASE TEMP.VALUES<6> # ""
      DEFAULT = OCONV(TEMP.VALUES<6>,'MD2'); O.R = 'O'
    CASE 1
      DEFAULT = 0
  END CASE
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  IF VALUE # TVO.PO.VOUCH<1,LN> OR TEMP.VALUES<2> # TVO.PO.PROD<1,LN> OR TEMP.VALUES<4> # TVO.PO.WHSE<1,LN> OR TEMP.VALUES<7> # TVO.PO.DEPT<1,LN> OR TEMP.VALUES<8> # TVO.PO.CCTR<1,LN> OR TEMP.VALUES<9> # TVO.PO.OPER<1,LN> THEN
    TVO.ENT.FLG<1,LN> = "E"
  END
  TVO.SEQ.NO<1,LN> = ""
  TVO.PO.PROD<1,LN> = TEMP.VALUES<2>
  TVO.PROD.DESC<1,LN> = TEMP.VALUES<3> ;* C40187
  TVO.PO.WHSE<1,LN> = TEMP.VALUES<4>
  TVO.PO.DEPT<1,LN> = TEMP.VALUES<7>
  TVO.PO.CCTR<1,LN> = TEMP.VALUES<8>
  TVO.PO.OPER<1,LN> = TEMP.VALUES<9>
  TVO.PO.DIV<1,LN> = JOB.DIV
  OLD.VOUCH.AMT = TVO.PO.VOUCH<1,LN>
  TVO.PO.VOUCH<1,LN> = VALUE
  TEMP.VALUES<5> = 100
  TVO.PO.QTY<1,LN> = 100
  TVO.PO.UM<1,LN>='EA'
*
**** CALCULATE AND PRINT TOTAL VOUCHERED
*
1080*
  OLD.PO.VOUCH = OLD.VOUCH.AMT
  IF OLD.ACCT # "" THEN
    OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))
    OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
    REV.AMT = OLD.PO.VOUCH
    PTR = 1
    LOOP
      LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
        IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
          TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> - REV.AMT
          REV.AMT = 0
          IF TVO.DIST.AMT<1,FND> = 0 THEN
            TVO.ACCT = DELETE(TVO.ACCT,1,FND,0)
            TVO.DIST.AMT = DELETE(TVO.DIST.AMT,1,FND,0)
            TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)
            TVO.DIV = DELETE(TVO.DIV,1,FND,0)
            TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)
            TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)
            TVO.ACCT.FLG = DELETE(TVO.ACCT.FLAG,1,FND,0)
            VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) 
          END
          IF REV.AMT > 0 THEN
            PTR = FND + 1
          END ELSE
            PTR = 0
          END
        END ELSE
          PTR = FND + 1
        END
      END ELSE
        PTR = 0
      END
    WHILE PTR DO REPEAT
  END
  NEW.ACCT = NEW.ACCT : STR("0",IN.ACCT.LEN-LEN(NEW.ACCT))
  NEW.ACCT = NEW.ACCT[1,IN.ACCT.LEN]
  PTR = 1
  LOOP
    LOCATE NEW.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
      IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
        PTR = 0
        IF TEMP.ACCT.ACCRUE THEN
          VOUCHER.ACCRUE.FLAG<1,FND>=1
        END
      END ELSE
        PTR = FND + 1
      END
    END ELSE
      TVO.ACCT<1,FND> = NEW.ACCT
      IF TEMP.ACCT.ACCRUE THEN
        VOUCHER.ACCRUE.FLAG<1,FND>=1
      END
      TVO.DIST.AMT<1,FND> = 0
      TVO.ASSET.ID<1,FND> = ""
      TVO.DIV<1,FND> = JOB.DIV
*T28171 v TVO.DEPT<1,FND> = TEMP.VALUES<7>
      TVO.DEPT<1,FND> = TEMP.VALUES<7>[1,2]
      TVO.CCTR<1,FND> = TEMP.VALUES<8>
      TVO.ACCT.FLG<1,FND> = ''
      PTR = 0
    END
  WHILE PTR DO REPEAT
  TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,LN>
  TVO.CTR = DCOUNT(TVO.ACCT,VM)
  TOTAL.VOUCH = TOTAL.VOUCH - CURR.VOUCH + TVO.PO.VOUCH<1,LN>
  SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
  ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
  IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE ADJVAL = 100 ;*T21177
  IF TVO.PO.QTY<1,LN>+0 # 0 AND TVO.PO.VOUCH<1,LN>+0 # 0 THEN
    TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.PO.QTY<1,LN>) * ADJVAL + .5) ;*T21177
  END ELSE
    TVO.PO.U.COST<1,LN> = TVO.PO.VOUCH<1,LN> * 100
  END
  ;* C40187 TVO.PO.NOS<1,LN> = "NP":NXTPO
*T28209v  LINES = DCOUNT(TVO.PO.NOS,VM)
  LINES = DCOUNT(TVO.PO.PROD,VM)
*
* Calculate AP account Distribution Amounts
*
  IF OAP.ACCT # "" THEN
    OAP.ACCT = OAP.ACCT : STR("0",IN.ACCT.LEN-LEN(OAP.ACCT))
    OAP.ACCT = OAP.ACCT[1,IN.ACCT.LEN]
    REV.AMT = OLD.PO.VOUCH
    PTR = 1
    LOOP
      LOCATE OAP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
        IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
          TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> + REV.AMT
          REV.AMT = 0
          IF TVO.AP.AMT<1,FND> = 0 THEN
            TVO.AP.ACCT = DELETE(TVO.AP.ACCT,1,FND,0)
            TVO.AP.AMT = DELETE(TVO.AP.AMT,1,FND,0)
            TVO.AP.FLG = DELETE(TVO.AP.FLG,1,FND,0)
            TVO.AP.DIV = DELETE(TVO.AP.DIV,1,FND,0)
            TVO.AP.DEPT = DELETE(TVO.AP.DEPT,1,FND,0)
            TVO.AP.CCTR = DELETE(TVO.AP.CCTR,1,FND,0)
            PTR = FND
          END ELSE
            IF REV.AMT = 0 THEN PTR = 0 ELSE PTR = FND + 1
          END
        END ELSE
          PTR=FND+1
        END
      END ELSE
        PTR=0
      END
    WHILE PTR DO
    REPEAT
  END
  IF AP.ACCT # "" THEN
    AP.ACCT = AP.ACCT : STR("0",IN.ACCT.LEN-LEN(AP.ACCT))
    AP.ACCT = AP.ACCT[1,IN.ACCT.LEN]
    PTR=1
    LOOP
      LOCATE AP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
        IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
          PTR=0
        END ELSE
          PTR=FND+1
        END
      END ELSE
        TVO.AP.ACCT<1,FND> = AP.ACCT
        TVO.AP.AMT<1,FND> = 0
        IF OPO.ACCRUE = 'Y' THEN
          TVO.AP.FLG<1,FND> = 'P'
        END ELSE TVO.AP.FLG<1,FND> = ''
        IF CURR.OFFSET # 0 THEN
          TVO.AP.DIV<1,FND>=OPO.DVDPCC<1,1,CURR.OFFSET>
          TVO.AP.DEPT<1,FND>=OPO.DVDPCC<1,2,CURR.OFFSET>
          TVO.AP.CCTR<1,FND>=OPO.DVDPCC<1,3,CURR.OFFSET>
        END ELSE
*           TVO.AP.DIV<1,FND> = GEN.DIV
          TVO.AP.DIV<1,FND> = JOB.DIV
*           TVO.AP.DEPT<1,FND> = GEN.DEPT
*T28171 v  TVO.AP.DEPT<1,FND> = TEMP.VALUES<7>
          TVO.AP.DEPT<1,FND> = TEMP.VALUES<7>[1,2]
*           TVO.AP.CCTR<1,FND> = GEN.CCTR
          TVO.AP.CCTR<1,FND> = TEMP.VALUES<8>
        END
        PTR=0
      END
    WHILE PTR DO
    REPEAT
    TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> - TVO.PO.VOUCH<1,LN>
  END
1999*
  IF VALUE = 'END' THEN
    BEGIN CASE
      CASE OPTION # 'A'
        GOSUB 2000
      CASE 1
        DEL TVO.PO.NOS<1,LN>
        DEL TVO.PO.PROD<1,LN>
        DEL TVO.PO.WHSE<1,LN>
        DEL TVO.PO.DIV<1,LN>
        DEL TVO.PO.DEPT<1,LN>
        DEL TVO.PO.CCTR<1,LN>
        DEL TVO.PO.OPER<1,LN>
        DEL TVO.PO.VOUCH<1,LN>
        OLD.START.LINE=0
        GOSUB 10000
    END CASE
  END
  IF OPTION = 'A' AND VALUE # 'END' THEN
*T28209 v
    READU NP.PONO FROM CONTROL, CONO:"NEXT.NP.PO.NUM" ELSE
      NP.PONO = 1000
    END
    NXTPO = NP.PONO + 1
    IF NXTPO > 999999 THEN NXTPO = 1000
    TVO.PO.NOS<1,LN> = "NP":NXTPO ;* C40187
*T28209 ^
    WRITEV NXTPO ON CONTROL, CONO:"NEXT.NP.PO.NUM",1
  END
  RETURN
*
**** PRINT PROCESS LINE VALUES
*
2000*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = ""
  P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.PROD<1,LN> "L#8"
  P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.WHSE<1,LN> "L#7"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.DEPT<1,LN> "L#4"
  P_X  := AM:35 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.CCTR<1,LN>"L#8" ;*18746
  P_X  := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM:TVO.PO.OPER<1,LN> "L#9"
  P_X  := AM:57 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TVO.PO.VOUCH<1,LN>, "MD2") "R#9" 
  P_X := AM:13 ; P_Y := AM:SLN+1 ; P_VALUE := AM:TVO.PROD.DESC<1,LN> "L#40"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
**** PRINT PROCESS LINE VALUES
*
2500*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "L#3" ; P_OPT = ""
  P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<1> "L#8"
  P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<2> "L#8"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<3> "L#7"
  P_X  := AM:35 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<4> "R#10"
  P_X  := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.VALUES<5> "R#9" 
  P_X  := AM:57 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.VALUES<6>, "MD2") "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*--- GET ORD & REC BAL
*
3000*
  TOTAL.VOUCH = 0
  FOR TA = 1 TO LINES
    TOTAL.VOUCH = TOTAL.VOUCH + TVO.PO.VOUCH<1,TA>
  NEXT TA
  ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*--- DELETE LINE ACCOUNTS
*
5000*
  TEMP.ACCT.ACCRUE=0 ;*T20016.1
  OLD.ACCT = ''
  AP.ACCT = ''
  IF TVO.PO.WHSE<1,LN> = "" THEN GOTO 5050
  MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : TVO.PO.WHSE<1,LN> ELSE GOTO 5500
  MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,LN> ELSE MAT OPO.REC=''
  IF OPO.ACCRUE = "Y" THEN
    TEMP.ACCT.ACCRUE=1
    OLD.ACCT = CAOS.ACCRU.LIAB
    AP.ACCT = CAOS.AP.ACCT
  END ELSE
    OLD.ACCT = CAOS.APL
    AP.ACCT = CAOS.AP.ACCT
  END
  IF OLD.ACCT = "" THEN GOTO 5050
  OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))
  OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
  REV.AMT = TVO.PO.VOUCH<1,LN>
  PTR = 1
  LOOP
    LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
      IF TVO.DIV<1,FND>=OLD.DV AND TVO.DEPT<1,FND>=OLD.DP AND TVO.CCTR<1,FND>=OLD.CC THEN
        TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> - REV.AMT
        REV.AMT = 0
        IF TVO.DIST.AMT<1,FND> = 0 THEN
          TVO.ACCT = DELETE(TVO.ACCT,1,FND,0)
          TVO.DIST.AMT = DELETE(TVO.DIST.AMT,1,FND,0)
          TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)
          TVO.DIV = DELETE(TVO.DIV,1,FND,0)
          TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)
          TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)
          TVO.ACCT.FLG = DELETE(TVO.ACCT.FLAG,1,FND,0)
          TVO.CTR = DCOUNT(TVO.ACCT,VM)
          VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) ;* T20016.1
        END
        IF REV.AMT # 0 THEN
          PTR = FND + 1
        END ELSE
          PTR = 0
        END
      END ELSE
        PTR = FND + 1
      END
    END ELSE
      PTR = 0
    END
  WHILE PTR DO REPEAT
5050*
  IF AP.ACCT = "" THEN GOTO 5500
  AP.ACCT = AP.ACCT : STR("0",IN.ACCT.LEN-LEN(AP.ACCT))
  AP.ACCT = AP.ACCT[1,IN.ACCT.LEN]
  REV.AMT = TVO.PO.VOUCH<1,LN>
  PTR = 1
  LOOP
*T20016 v
    LOCATE AP.ACCT IN TVO.AP.ACCT<1>,PTR SETTING FND THEN
      IF TVO.AP.DIV<1,FND>=OLD.DV AND TVO.AP.DEPT<1,FND>=OLD.DP AND TVO.AP.CCTR<1,FND>=OLD.CC THEN
        TVO.AP.AMT<1,FND> = TVO.AP.AMT<1,FND> + REV.AMT
        REV.AMT = 0
        IF TVO.AP.AMT<1,FND> = 0 THEN
          TVO.AP.ACCT = DELETE(TVO.AP.ACCT,1,FND,0)
          TVO.AP.AMT = DELETE(TVO.AP.AMT,1,FND,0)
          TVO.AP.FLG = DELETE(TVO.AP.FLG,1,FND,0)
*T19149 v
          TVO.AP.DIV = DELETE(TVO.AP.DIV,1,FND,0)
          TVO.AP.DEPT = DELETE(TVO.AP.DEPT,1,FND,0)
          TVO.AP.CCTR = DELETE(TVO.AP.CCTR,1,FND,0)
*T19149 ^           
          PTR = FND
        END ELSE
          IF REV.AMT = 0 THEN PTR = 0 ELSE PTR = FND + 1
        END
      END ELSE
        PTR=FND+1
      END
    END ELSE
      PTR=0
    END
  WHILE PTR DO
  REPEAT
*T20016 ^
*
*--- DELETE LINE ITEM
*
5500*
  TVO.PO.PROD = DELETE(TVO.PO.PROD,1,LN,0)
  TVO.PO.WHSE = DELETE(TVO.PO.WHSE,1,LN,0)
  TVO.PO.DEPT = DELETE(TVO.PO.DEPT,1,LN,0)
  TVO.PO.CCTR = DELETE(TVO.PO.CCTR,1,LN,0)
  TVO.PO.VOUCH = DELETE(TVO.PO.VOUCH,1,LN,0)
  TVO.PO.OPER = DELETE(TVO.PO.OPER,1,LN,0)
  TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,LN,0)
  TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,LN,0)
  DEL TVO.PO.QTY<1,LN>
  DEL TVO.PO.UM<1,LN>
  DEL TVO.PO.U.COST<1,LN>
  RETURN
*
*   ** Break HMSG IN TO MULTI LINES
*
6000 *
  NUM.SPACES = DCOUNT(HMSG," ")
  NEW.PR = ''
  FOR KK = 1 TO NUM.SPACES
    NEWWORD=FIELD(HMSG," ",KK)
    IF KK = 1 THEN
      TTPR = NEWWORD
    END ELSE
      TTPR = NEW.PR:" ":NEWWORD
    END
    IF LEN(TTPR) > 70 THEN
      NEW.PR=NEW.PR:VM:NEWWORD
    END ELSE
      NEW.PR=TTPR
    END
  NEXT KK
  HMSG=NEW.PR
  RETURN
*
***** SCROLL ROUTINE
*
10000*
  START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF LAST.LINE = 0 AND TEMP.VALUES<2> # "" THEN LAST.LINE = 1
  IF START.LINE=OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE=START.LINE
  CNT=1
  FOR N=START.LINE TO LAST.LINE
    S.SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = S.SLN ; P_VALUE = N "L#3" ; P_OPT = ""
    IF TVO.PO.PROD<1,N> # "" THEN
      P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.PROD<1,N> "L#8"
    END ELSE
      P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TEMP.VALUES<2> "L#8"
    END
    P_X  := AM:18 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.WHSE<1,N> "L#7"
*T28171 P_X  := AM:29 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.DEPT<1,N> "L#2"
    P_X  := AM:28 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.DEPT<1,N> "L#5"
    P_X  := AM:35 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.CCTR<1,N> "R#3"
    P_X  := AM:40 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.OPER<1,N> "R#4"
    P_X  := AM:57 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO.VOUCH<1,N>, "MD2") "R#10"
    IF TVO.PROD.DESC<1,N> # '' THEN
      P_X := AM:13 ; P_Y:= AM:S.SLN+1 ; P_VALUE:= AM:TVO.PROD.DESC<1,N> "L#45" 
    END ELSE
      P_X := AM:13 ; P_Y:= AM:S.SLN+1 ; P_VALUE:= AM:TEMP.VALUES<3> "L#45" 
    END
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR N=CNT TO PAGE.SIZE
    S.SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = S.SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = S.SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
10001*
  RETURN
*
**** ENTER PROGRAM QUESTION
*
11000*
  S.VALUE = VALUE
  X = 0; Y = 23; TYP = 18; PMSG = QUESTION
  CALL EDIT.SUB
  IF VALUE = "END" THEN VALUE = "N"
  REPLY = VALUE
  VALUE = S.VALUE
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*** ENTER LINE NUMBER
70000*
  GOSUB 10000
  ECD.NUM = 15; SCV.REC(15)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
*** GET CATEGORY INFO
80000*
  IF TVO.PO.WHSE<1,LN> = "" THEN
    TEMP.ACCT.ACCRUE=0
    OLD.ACCT = ""
    AP.ACCT = ''                    ;* Task 17919
    OLD.DV = GEN.DIV
    OLD.DP = GEN.DEPT
    OLD.CC = GEN.CCTR
  END ELSE
    MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : TVO.PO.WHSE<1,LN> ELSE MAT CAOS.REC = ""
    CURR.PROD = TVO.PO.PROD<1,LN>
    CURR.CAT  = TVO.PO.WHSE<1,LN>
    CURR.OFFSET=0
    OLD.ACCT = CAOS.APL
    AP.ACCT = CAOS.AP.ACCT
    OLD.DV = TVO.DIV.OWNER
    OLD.DP = TVO.PO.DEPT<1,LN>
    OLD.CC = TVO.PO.CCTR<1,LN>
  END
  RETURN
***** CALLS FOR SYSCOM
91000*
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999*
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  RETURN
END
