*COPY>CPYLIB>COM1
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM  - CASH.DISB.MAINT
* AUTHOR   - CURTIS WILLIAMS, COMPUTER BUSINESS ASSOCIATES
* DATE     - 11/13/86
* TASK 20269 JR ALLOW DIFFERENT DIVISIONS TO RUN CHECKS AT SAME TIME
* TASK 20526 JR VEND.POP DID NOT HAVE DIVISION SUFFIX ON KEY
*T22398 renee 02/25/1998 * (#174) Errmsg "PAYMENT DATE IS MISSING" should
*                          be a normal error, not a fatal one.
*T22398 cindy 01/05/1999 * the above task was missing from 11base
*T23678 cindy 02/12/1999 * writing to wrong key (no ! in key)
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T111609 - UnitPrice Changes by Naresh on 11/16/09
*********************************************************************
*
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>APS.CPYLIB>VEND.POP
*COPY>APS.CPYLIB>VEND.VOUCH.POP
*COPY>APS.CPYLIB>OAP
*COPY>PMC.CPYLIB>VEND
*COPY>APS.CPYLIB>CKP
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  PROCREAD INBUFF ELSE ERRMSG = ' THIS PROGRAM MUST BE RUN FROM A PROC'; GOSUB 91000; GOTO 99999
*
*----OPEN FILES
*
  MAT FILE.VARS = ''
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG ='CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG ='COMPANY FILE IS MISSING'; GOTO 93000
  OPEN '','VEND.POP' TO VEND.POP ELSE ERRMSG ='VEND.POP FILE IS MISSING'; GOTO 93000
  OPEN '','CKP' TO CKP ELSE ERRMSG ='CKP FILE IS MISSING'; GOTO 93000
  OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE IS MISSING'; GOTO 93000
  OPEN '','APS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS IS MISSING'; GOTO 93000
  OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING'; GOTO 93000
*
*----INITIALIZATION
*
  CONO = INBUFF<1>
  COM.NAME = INBUFF<2>
  DISB.CODE = INBUFF<4>
* TASK 20269
  DIV.OWNER = INBUFF<6>
*      READV DUE.DATE FROM CONTROL, CONO : "PAYDATE",1 ELSE ERRMSG = "PAYMENT DATE IS MISSING"; GOTO 93000
  IF DISB.CODE # "M" THEN
*T22398 READV DUE.DATE FROM CONTROL, CONO : "PAYDATE":DIV.OWNER,1 ELSE ERRMSG = "PAYMENT DATE IS MISSING"; GOTO 93000
    READV DUE.DATE FROM CONTROL, CONO : "PAYDATE":DIV.OWNER,1 ELSE ERRMSG = "PAYMENT DATE IS MISSING"; GOTO 91000 ; GOTO 99990 ; *T22398
  END
*
  MAT EDIT.COM.DRIVER = ''
  ECD.SCRN.CNT = 2
  ECD.SCRN.NAME<1> = 'CASH.DISB.MAINT'
  ECD.SCRN.NAME<2> = 'CASH.DISB.MAINT.SUB'
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*       MAT EDIT.COM = ''
*       TYP = 0
*       CALL EDIT.SUB
  FILL = '#'
  PAGE.SIZE = 15
  BEGIN.PAGE = 5
  LN = 1
  LINE.SPACE = 1
  DESC = ''
*
1000*
*
  MAT SCV.REC  = ''
  VPOP.VEND = ''
  MAT CKP.REC = ''
  MAT VEND.REC = ''
  LAST.LINE = 0
  LINES = 0
  START.LINE = 0
  OLD.START.LINE = 0
*
  ECD.ACTION = 2; CALL SCRN.EDIT
*
*----MAIN PROCESS
*
  IF DISB.CODE = 'M' THEN
* TASK 20269        
*         READU DUMMY FROM CONTROL, CONO : "PAYDATE" ELSE DUMMY = ""
*         WRITE "MANUAL" ON CONTROL, CONO : "PAYDATE"
    READU DUMMY FROM CONTROL, CONO : "PAYDATE":DIV.OWNER ELSE DUMMY = ""
    WRITE "MANUAL" ON CONTROL, CONO : "PAYDATE":DIV.OWNER
* TASK 20269
    ECD.NUM = 9
    SCV.REC(ECD.NUM)<1> = "M A N U A L"
    ECD.ACTION = 5
    CALL SCRN.EDIT
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 30000
    WHILE LINES > OLD.LINES DO
    REPEAT
    OLD.START.LINE = 0
    GOSUB 20000
  END ELSE
    ECD.NUM = 9
    SCV.REC(ECD.NUM)<1> = "U P D A T E"
    ECD.ACTION = 5
    CALL SCRN.EDIT
* TASK 20269         
*         READ VPOP.VEND FROM VEND.POP,CONO:"VENDORS" ELSE VPOP.VEND = ''
    READ VPOP.VEND FROM VEND.POP,CONO:"VENDORS":DIV.OWNER ELSE VPOP.VEND = ''
* TASK 20269
    VCNT = COUNT(VPOP.VEND,AM) + (VPOP.VEND # '')
    VCNT = VCNT - VPOP.START.ATT + 1
    IF VCNT < 1 THEN
      ERRMSG = "THERE ARE NO VENDORS FOR THIS ACCOUNT"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99990
    END
    DESC = ''
    FOR I = 1 TO VCNT
      L = I + VPOP.START.ATT - 1
      IF VPOP.VEND<L,2> # "" THEN
        MAT VEND.REC = ''
        VEND.DESC = VPOP.VEND<L,2>
      END ELSE
        MATREAD VEND.REC FROM VEND,CONO:VPOP.VEND<L> ELSE
          MAT VEND.REC = ''
        END
      END
      DESC<L> = VEND.DESC
    NEXT I
    LINES = VCNT
    OLD.START.LINE = 0
    GOSUB 20000
  END
*
*---- REQUEST ROUTINE
*
  MORE = 0
  LOOP
    ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = 'R'
        GOSUB 10000
        IF LN.NO THEN
          LN = LN.NO
          V.FLAG = 0
          ECD.SCRN.NO = ECD.SCRN.NO + 1
          SCV.REC(11)<ECD.SCRN.NO> = VPOP.VEND<MV>
          SCV.REC(12)<ECD.SCRN.NO> = DESC<MV>
          ECD.ACTION = 3; CALL SCRN.EDIT
          CALL CASH.DISB.MAINT.SUB (LN,CONO,VPOP.VEND,VEND.POP,CKP,V.FLAG)
          ECD.SCRN.NO = ECD.SCRN.NO - 1
          ECD.ACTION = 3; CALL SCRN.EDIT
          IF V.FLAG = 1 THEN
            GOSUB 50000
          END ELSE
            OLD.START.LINE = 0
            GOSUB 20000
          END
        END
      CASE REQUEST = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 30000
        WHILE LINES > OLD.LINES DO
        REPEAT
        OLD.START.LINE = 0
        GOSUB 20000
      CASE REQUEST = 'D'
        GOSUB 10000
        IF LN.NO THEN
          LN = LN.NO
          GOSUB 50000
        END
      CASE REQUEST = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 20000
      * T25978 v
      CASE REQUEST = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 20000
      CASE REQUEST = 'ST'
        LN = 1
        GOSUB 20000
      CASE REQUEST = 'SB'
        LN = LINES
        GOSUB 20000
      * T25978 ^
      CASE REQUEST = 'E' OR REQUEST = 'END'
        MORE = 1
    END CASE
  UNTIL MORE DO
  REPEAT
  IF LINES < 1 THEN
    ERRMSG = "THERE ARE NO VENDORS FOR THIS ACCOUNT"
    GOSUB 91000
    ECD.ACTION = 99 ; CALL SCRN.EDIT
    GOTO 99990
  END
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
*
*----SUBROUTINES
*
10000*
  GOSUB 20000
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  ECD.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  IF LN.NO THEN MV = LN.NO + VPOP.START.ATT - 1
  RETURN
*
20000*
*
  START.LINE = 1 + INT((LN-1)/ PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN RETURN
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    MV = N + VPOP.START.ATT - 1
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N"R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VEND<MV,1>"L#8"
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:DESC<MV>"L#30"
*T111609 v
*    P_X  := AM:44 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.GRS.ATT,MV>,"MD2")"R#10"
*    P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.DSC.ATT,MV>,"MD2")"R#10"
*    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.NET.ATT,MV>,"MD2")"R#10"
    P_X  := AM:44 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.GRS.ATT,MV>,"MD2")"R#12"
    P_X  := AM:57 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.DSC.ATT,MV>,"MD2")"R#10"
    P_X  := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.NET.ATT,MV>,"MD2")"R#12"
*T111609 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
  RETURN
*
30000*
  GOSUB 20000
*
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN"R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
35000*
  MV = LN + VPOP.START.ATT - 1
  TYP = 1; X = 4; Y = SLN; MAXL = 8
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    VPOP.VEND = DELETE(VPOP.VEND,MV,0,0)
    VPOP.VEND = DELETE(VPOP.VEND,VPOP.GRS.ATT,MV,0)
    VPOP.VEND = DELETE(VPOP.VEND,VPOP.DSC.ATT,MV,0)
    VPOP.VEND = DELETE(VPOP.VEND,VPOP.NET.ATT,MV,0)
    VPOP.VEND = DELETE(VPOP.VEND,VPOP.SEQ.ATT,MV,0)
    LINES = COUNT(VPOP.VEND,AM) + (VPOP.VEND # '')
    IF LINES > 0 THEN LINES = LINES - VPOP.START.ATT + 1
    RETURN
  END
  FOUND = 0
  LOCATE VALUE IN VPOP.VEND,VPOP.START.ATT SETTING FOUND ELSE FOUND = 0
  IF FOUND THEN
    ERRMSG = 'VENDOR IS ALREADY LISTED'
    GOSUB 91000
    GOTO 35000
  END
  IF VALUE MATCHES '1A' THEN
    VALUE = "0000":VALUE
    VEND.DESC = 'MISCELLANEOUS'
    VPOP.VEND<VPOP.NEXT.SEQ.ATT> = VPOP.VEND<VPOP.NEXT.SEQ.ATT> + 1
    VPOP.VEND<VPOP.SEQ.ATT,MV> = VPOP.VEND<VPOP.NEXT.SEQ.ATT>
    DESC<MV> = VEND.DESC
    VPOP.VEND<MV> = VALUE
    VPOP.VEND<MV,2> = ""
  END ELSE
    MATREAD VEND.REC FROM VEND,CONO:VALUE ELSE
      ERRMSG = 'INVALID VENDOR'
      GOSUB 91000
      GOTO 35000
    END
    DESC<MV> = VEND.DESC
    VPOP.VEND<MV> = VALUE
  END
  V.FLAG = 0
  ECD.SCRN.NO = ECD.SCRN.NO + 1
  SCV.REC(11)<ECD.SCRN.NO> = VPOP.VEND<MV>
  SCV.REC(12)<ECD.SCRN.NO> = DESC<MV>
  ECD.ACTION = 3; CALL SCRN.EDIT
  CALL CASH.DISB.MAINT.SUB(LN,CONO,VPOP.VEND,VEND.POP,CKP,V.FLAG)
  ECD.SCRN.NO = ECD.SCRN.NO - 1
  ECD.ACTION = 3; CALL SCRN.EDIT
  IF VPOP.VEND<MV,2> # "" THEN
    DESC<MV> = VPOP.VEND<MV,2>
  END
  IF V.FLAG = 1 THEN
    GOSUB 50000
    GOTO 30000
  END ELSE
    LINES = COUNT(VPOP.VEND,AM) + (VPOP.VEND # '')
    LINES = LINES - VPOP.START.ATT + 1
    OLD.START.LINE = 0
    GOSUB 20000
  END
  RETURN
*
50000*
*
  MV = LN + VPOP.START.ATT - 1
  VCNT = COUNT(VPOP.VEND<MV>,VM) + (VPOP.VEND<MV> # "")
  BEGIN CASE
    CASE VCNT = 1
      READ VPOP.VOUCH FROM VEND.POP, CONO : VPOP.VEND<MV>:"!":DIV.OWNER ELSE VPOP.VOUCH = ""
      VOU.CNT = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # "")
      FOR VOU = 1 TO VOU.CNT
        DELETE CKP, CONO : VPOP.VOUCH<VOU,VPOP.VOUCH.MV>
      NEXT VOU
      DELETE VEND.POP, CONO : VPOP.VEND<MV>:"!":DIV.OWNER
    CASE VCNT > 1
*            READ VPOP.VOUCH FROM VEND.POP, CONO : VPOP.VEND<MV,1> : "!" : VPOP.VEND<VPOP.SEQ.ATT,MV> ELSE VPOP.VOUCH = ""
      VVV.KEY = CONO:VPOP.VEND<MV,1>:"!":VPOP.VEND<VPOP.SEQ.ATT,MV>:"!": DIV.OWNER
      READ VPOP.VOUCH FROM VEND.POP, VVV.KEY ELSE VPOP.VOUCH = ""
      VOU.CNT = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # "")
      FOR VOU = 1 TO VOU.CNT
        DELETE CKP, CONO : VPOP.VOUCH<VOU,VPOP.VOUCH.MV>
      NEXT VOU
*            DELETE VEND.POP, CONO : VPOP.VEND<MV,1> : "!" : VPOP.VEND<VPOP.SEQ.ATT,MV>
      DELETE VEND.POP, VVV.KEY
  END CASE
  VPOP.VEND = DELETE(VPOP.VEND,MV,0,0)
  DESC = DELETE(DESC,MV,0,0)
  VPOP.VEND = DELETE(VPOP.VEND,VPOP.GRS.ATT,MV,0)
  VPOP.VEND = DELETE(VPOP.VEND,VPOP.DSC.ATT,MV,0)
  VPOP.VEND = DELETE(VPOP.VEND,VPOP.NET.ATT,MV,0)
  VPOP.VEND = DELETE(VPOP.VEND,VPOP.SEQ.ATT,MV,0)
*T23678 v
* WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS":"!":DIV.OWNER
  WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS":DIV.OWNER
*T23678 ^
  LINES = COUNT(VPOP.VEND,AM) + (VPOP.VEND # '')
  LINES = LINES - VPOP.START.ATT + 1
  OLD.START.LINE = 0
  GOSUB 20000
  RETURN
*
* 91000*
*
*       PRINT @(0,23) : CL : ERRMSG:
*       INPUT X:
*       PRINT @(0,23) : CL :
*       RETURN
* 93000*
*       PRINT CHAR(12)
*       PRINT @(14,8): ERRMSG:
*       INPUT X:
*
*--- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99990 *
  INBUFF<3> = 'END'
  PROCWRITE INBUFF
99999*
END
