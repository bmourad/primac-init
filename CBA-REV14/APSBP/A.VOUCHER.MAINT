*COPY>CPYLIB>COM1
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM        - PRIMAC
* PROGRAM       - VOUCHER.MAINT
* BY            - JIHAD YAMOUT , C.B.A
* DATE          - 06/07/84
* DESCRIPTION
* TASK 19406 Bob Sherer - Added support for Divisionalization based on a
* controlling (owning) division number.  10/11/95
* TASK 20016 JR FORCE DIV IN ACCT DIST IF OWNING DIV IS NOT "00"
*T22288 rick 10/15/1997 * Year 2000 compliance. Make sure date calcs use
*                         4 digit year.
*T22637 stefanie 02/24/1998 * Using incorrect variables for screen
*                             display.
*T23278 markt 10/13/1998 * Add division security check
*T25978 adelgado 02/11/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/25/2002 * Implement the LOCKED clause for READU.
*T25759 cmykleb 05/17/2002 * Add remitt comments to screen.
*T26643 cmykleb 06/03/2002 * Correct prompt line problem in GUI.
*T27646 thompson 08/19/2003 * MODIFY FOR MULTI PLATFORM ISSUE
*T28977 lross 09/13/2006 * Toggle Vendor/Sub-vendor - allow 55 char
*                          name.
*T29032 cmyklebu 12/26/2006 * Move from re12 to rev14
*ENDDOC
*************************************************************************
**** INSERT FILE EQUATES
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>GLTABLE
*COPY>APS.CPYLIB>AUTO.VOUCHERS
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>COA
*COPY>FAS.CPYLIB>EQUIP.FILE
*COPY>FAS.CPYLIB>ASSETS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
   DIM SVEND.REC(50)
   EQU SVEND.DESC TO SVEND.REC(1)
   EQU SVEND.ADDR1 TO SVEND.REC(2)
   EQU SVEND.CT.ST TO SVEND.REC(4)
   EQU SVEND.ZIP TO SVEND.REC(5)
   EQU SVEND.TERMS TO SVEND.REC(6)
   DIM SEQ.REC(1)
   EQU SEQ.NO TO SEQ.REC(1)
*T28977 v
MST.VNUM=''
MST.VNAME=''
MST.VADDR=''
MST.VCSZ=''
*T28977 ^
**** SETUP FOR SYSTEM ERRMSGS
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
**** OPEN FILES
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
   OPEN '','AUTO.VOUCHERS' TO AUTO.VOUCHERS ELSE ERRMSG = 'AUTO.VOUCHERS FILE MISSING';GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOTO 93000
*T28977 v
*  OPEN '','APS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'APS.SCREENS FILE MISSING';GOTO 93000
*T29032 v
*  OPEN '','REV12A.SCREENS' TO M.SCREENS ELSE ERRMSG = 'REV12A.SCREENS FILE MISSING';GOTO 93000
   OPEN '','APS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'APS.SCREENS FILE MISSING';GOTO 93000
*T29032 ^
   OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG = 'VENDOR.XREF FILE MISSING';GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING';GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MISSING';GOTO 93000
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE MISSING';GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE MISSING';GOTO 93000
   OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GOTO 93000
***** GET COMPANY NAME
   MAT COMP.REC = ''
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IN.ACCT.LEN = LEN(CO.ACCT.PIC)
   MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE
      ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE";GOTO 93000
   END
   IF CO.FAS = "Y" THEN
      OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE IS MISSING';GOTO 93000
      OPEN '','ASSETS' TO ASSETS ELSE  ERRMSG = 'ASSETS FILE IS MISSING';GOTO 93000
   END
   IF CO.POS = "Y" THEN
      OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING';GOTO 93000
      OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING';GOTO 93000
      OPEN '','MISC.PO' TO MISC.PO ELSE ERRMSG = 'MISC.PO FILE IS MISSING';GOTO 93000
   END
**** GET FISCAL MON
   MATREAD FISCAL.REC FROM CONTROL, CONO:"APVFISCAL" ELSE
      ERRMSG = "APVFISCAL CONTROL RECORD IS MISSING" ; GOTO 93000
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
***** T23278 v
   READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING" ; GOTO 93000
   END
*
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING" ; GOTO 93000
   END
*  YEAR = FR.CURR.PER[1,4]
*  MON = FR.CURR.PER[5,2]
*  MON = STR("0",2-LEN(MON)):MON
*  IF MON < 1 OR MON > NUM.PERIODS THEN
*      ERRMSG = "ERROR IN CONTROL RECORD APVFISCAL"; GOTO 93000
*  END
***** T23278 ^
*
LOGNAME = 'LOGNAME' ; CALL SYSVARS.SUB(LOGNAME) ; *T27646
**** SET UP GEN.XREF.REC
   MAT EDIT.COM.DRIVER = '';MAT GEN.XREF.REC = ''
*     MAT EDIT.COM = ''
*     TYP = 0;CALL EDIT.SUB
   FILL = "#"
   GXR.CO = CONO
   GXR.HEADING<1,2> = 'DESCRIPTION'
*T28977 v
*  GXR.ATT<1,1> = 0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 10;GXR.LEN<1,2> = 30
   GXR.ATT<1,1> = 0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 10;GXR.LEN<1,2> = 55
*T25759 v
*  BEGIN.PAGE=16;PAGE.SIZE=3;LINE.SPACE=1;LINES=0;OLD.START.LINE=0
   BEGIN.PAGE=17;PAGE.SIZE=3;LINE.SPACE=1;LINES=0;OLD.START.LINE=0
*T25759 ^
   GEN.DIV='00';GEN.DEPT='00';GEN.CCTR='000'
***** MAIN PROCESSING
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'A.VOUCHER.MAINT'
   ECD.ACTION=1;CALL SCRN.EDIT
**** PRINT SCREEN
1*
   RELEASE           ;* T26126
   LINES = 0;OLD.START.LINE = 0;MAT AVO.REC = ''
   OPTION = '';REQUEST = ''
   DB.CR = "D"
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
***** ENTER VOUCHER NUMBER
5*
   ECD.NUM = 5
   ECD.VALDAT.CODE = '2'
   ECD.VALDAT.FILE = AUTO.VOUCHERS
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   V.CODE = ECD.RET.VALUE
   BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 99999
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
      * T26126 v
         READU TMP.REC FROM AUTO.VOUCHERS,CONO:V.CODE LOCKED
            ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 5 
         END ELSE NULL
      * T26126 ^
         STATUS = '0'
         FOR I = 1 TO AVO.REC.SIZE
            AVO.REC(I) = ECD.VALDAT.ITEM<I>
         NEXT I
*T23278 v
         DIV.CODE = AVO.DIV.OWNER; USER.ID = UPCASE(LOGNAME); ERRMSG = '' ; *T27646
         IF DIV.CODE = GEN.DIV THEN
            IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
               ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
               GOSUB 91000; GOTO 5
            END
         END
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 5
         END
         IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
            LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
               ERRMSG = "Division ":DIV.CODE:"  not found in Control File DIVISIONS Record."
               GOTO 93000
            END
         END ELSE
            POS = 1
         END
         YEAR = FR.CURR.PER<1,POS>[1,4]
         MON = FR.CURR.PER<1,POS>[5,2]
         MON = STR("0",2-LEN(MON)):MON
         IF MON < 1 OR MON > NUM.PERIODS THEN
            ERRMSG = "ERROR IN CONTROL RECORD APVFISCAL"; GOTO 93000
         END
*T23278 ^
         GOSUB 1000
         ECD.ACTION=3;CALL SCRN.EDIT
         GOSUB 150
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
         IF ECD.RET.VALUE # "N" THEN GOTO 1
         STATUS = '1'
*T25759 v
*        FOR S = 1 TO 14
*           ON S GOSUB 10,20,30,40,50,60,70,80,90,100,110,120,130,150
         FOR S = 1 TO 15
            ON S GOSUB 10,20,30,40,50,60,70,80,90,100,110,120,130,150,160
*T25759 ^
            IF ECD.RET.VALUE = 'END' THEN GOTO 1
         NEXT S
   END CASE
* TASK 20016 v
   CR.LINES = DCOUNT(AVO.AP.ACCT,VM)
   IF CR.LINES = 0 THEN
      CR.LINES = 1
      CR.TOT = AVO.GRS.AMT * (-1)
      AVO.AP.AMT = CR.TOT
      AVO.AP.ACCT = GLTB.AP
      MATREAD COA.REC FROM COA, CONO:GLTB.AP ELSE
         ERRMSG = "ACCOUNT ":GLTB.AP:" NOT ON FILE"
         GOSUB 91000; GOTO 1
      END
      IF COA.LEVEL = 0 AND AVO.DIV.OWNER # GEN.DIV THEN
         ERRMSG = 'CREDIT ACCOUNT ':GLTB.AP:' IS LEVEL 0 AND CAN ONLY BE USED WITH "':GEN.DIV:'" VOUCHERS'
         GOSUB 91000; GOTO 1
      END
      AVO.AP.DIV = AVO.DIV.OWNER
      AVO.AP.DEPT = GEN.DEPT
      AVO.AP.CCTR = GEN.CCTR
   END
* TASK 20016 ^
   GOSUB 60000
*T25759 v
*  P_X  = 45 ; P_Y = 19 ; P_VALUE = SPACE(10) ; P_OPT = ""
*  P_X  = 68 ; P_Y = 19 ; P_VALUE = SPACE(10)
   P_X  = 45 ; P_Y = 20 ; P_VALUE = SPACE(10) ; P_OPT = ""
   P_X  = 68 ; P_Y = 20 ; P_VALUE = SPACE(10)
*T25759 ^
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   GOTO 1
*** ENTER OWNING DIVISION NUMBER (ONLY ON NEW ENTRIES) TASK 19406
10*
   ECD.NUM=58
* TASK 20016 v
*     ECD.VALDAT.CODE=2
*     ECD.VALDAT.FILE= DIVISION
*     ECD.PREFIX.ID= CONO
* TASK 20016 ^
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.DIV.OWNER
   ECD.ACTION = 4 ; CALL SCRN.EDIT
   IF ECD.RET.VALUE= "END" THEN GOTO 19
* TASK 20016 v
   IF ECD.RET.VALUE # GEN.DIV THEN
      MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "DIVISION ":ECD.RET.VALUE:" IS NOT ON FILE"
         GOSUB 91000; GOTO 10
      END
*T23278 v
   END ELSE
      IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
         ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
         GOSUB 91000; GOTO 10
      END
* T23278 ^
   END
*T23278 v
   DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(LOGNAME); ERRMSG = '' ; *T27646
   CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
   IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 10
   END
   IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
         ERRMSG = "Division ":DIV.CODE:"  not found in Control File DIVISIONS Record."
         GOTO 93000
      END
   END ELSE
      POS = 1
   END
   YEAR = FR.CURR.PER<1,POS>[1,4]
   MON = FR.CURR.PER<1,POS>[5,2]
   MON = STR("0",2-LEN(MON)):MON
   IF MON < 1 OR MON > NUM.PERIODS THEN
      ERRMSG = "ERROR IN CONTROL RECORD APVFISCAL"; GOTO 93000
   END
*T23278 ^
   AVO.DIV.OWNER = ECD.RET.VALUE
* TASK 20016 ^
19*
   RETURN
*** ENTER VEND CODE AND PRINT VEND INFORMATION
20*
   ECD.NUM = 10
   ECD.VALDAT.CODE = 2
   ECD.VALDAT.FILE = VEND
   ECD.PREFIX.ID = CONO
   IF OPTION # "" AND COUNT(AVO.VEND,VM) + (AVO.VEND # "") > 1 THEN SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.VEND[5,1]
   ECD.ACTION=4;CALL SCRN.EDIT
   AVO.VEND<1,1> = ECD.RET.VALUE
   BEGIN CASE
      CASE ECD.RET.VALUE MATCH "1A"
         MAT VEND.REC = ""
         GOSUB 500
      CASE ECD.RET.VALUE = 'END'
         GOTO 29
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
         FOR V = 1 TO VEND.REC.SIZE
            VEND.REC(V) = ECD.VALDAT.ITEM<V>
         NEXT V
         SCV.REC(11)<ECD.SCRN.NO,1> = VEND.DESC
         SCV.REC(13)<ECD.SCRN.NO,1> = VEND.ADDR1
         SCV.REC(16)<ECD.SCRN.NO,1> = VEND.CT.ST[1,19]
         SCV.REC(53)<ECD.SCRN.NO,1> = VEND.ZIP
         IF VEND.TERMS<1,2>[1,1] = "P" THEN
            SCV.REC(17)<ECD.SCRN.NO,1> = VEND.TERMS<1,2>
            SCV.REC(47)<ECD.SCRN.NO,1> = VEND.TERMS<1,1>[1,4]
         END
*T28977 v
*        IF AVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200
         IF AVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200 ELSE SCV.REC(26)<ECD.SCRN.NO> = 'Vendor'
         ECD.ACTION=3;CALL SCRN.EDIT
      CASE ECD.RET.VALUE = ''
         ECD.NUM = 11
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 20
         GXR.XREF = VENDOR.XREF
         GXR.FILE = VEND
         GXR.LOC = 1
         GXR.TOP.LINE = 'VEND XREF SEARCH'
         GXR.HEADING<1,1> = 'VEND NO'
         GXR.ID = ''
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            SCV.REC(11)<1> = ''
            ECD.ACTION=2;CALL SCRN.EDIT
            GOTO 20
         END ELSE
            MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
               ERRMSG = 'VENDOR NOT ON FILE'
               GOSUB 91000
               SCV.REC(11)<1> = ''
               GOTO 20
            END
            AVO.VEND<1,1> = GXR.ID
            SCV.REC(10)<ECD.SCRN.NO,1> = AVO.VEND<1,1>
            SCV.REC(11)<ECD.SCRN.NO,1> = VEND.DESC
            SCV.REC(13)<ECD.SCRN.NO,1> = VEND.ADDR1
            SCV.REC(16)<ECD.SCRN.NO,1> = VEND.CT.ST[1,19]
            SCV.REC(53)<ECD.SCRN.NO,1> = VEND.ZIP
            IF VEND.TERMS<1,2>[1,1] = "P" THEN
               SCV.REC(17)<ECD.SCRN.NO,1> = VEND.TERMS<1,2>
               SCV.REC(47)<ECD.SCRN.NO,1> = VEND.TERMS<1,1>[1,4]
            END
*T28977 v
*           IF AVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200
            IF AVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200 ELSE SCV.REC(26)<ECD.SCRN.NO> = 'Vendor'
            ECD.ACTION=3;CALL SCRN.EDIT
         END
   END CASE
29*
   RETURN
*** ENTER TERMS
30*
*     IF AVO.TERMS # "" THEN
*        X=0;Y=23;TYP=18;PMSG = "DO YOU WANT TO USE THESE TERMS (Y)ES OR (N)O"
*        O.R = 'R';MAXL = 1;CALL EDIT.SUB
*        PRINT @(0,23):CL:
*        IF VALUE = "END" THEN ECD.RET.VALUE = VALUE;GOTO 39
*     END ELSE
*        VALUE = 'N'
*     END
*     IF VALUE = 'N' THEN
31*
   ECD.NUM = 17
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN GOTO 39
   IF NOT(ECD.RET.VALUE MATCH "1A2N") OR ECD.RET.VALUE[1,1] # "P" THEN
      ERRMSG = "BAD FORMAT VALID FORMAT = (Pxx) WHERE 'xx' IS THE DAY OF THE MONTH";GOSUB 91000;GOTO 31
   END
   AVO.TERMS<1,2> = ECD.RET.VALUE
33*
   ECD.NUM = 47
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 39
   ECD.RET.VALUE = STR("0",4-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
   AVO.TERMS<1,1> = ECD.RET.VALUE
*     END
39 IF OPTION # "" THEN GOSUB 70;GOSUB 100;GOSUB 110;GOSUB 150
   RETURN
*** ENTER PO NUMBER
40*
   ECD.NUM = 12
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      AVO.PO = ECD.RET.VALUE
      IF CO.POS = "Y" AND AVO.PO # "" THEN
         FPO = 1
         READ DUMMY FROM PO, CONO:AVO.PO ELSE FPO = 0
         IF FPO = 0 THEN
            FPO = 1
            READ DUMMY FROM OUTSIDE.PO, CONO:AVO.PO ELSE FPO = 0
            IF FPO = 0 THEN
               FPO = 1
               READ DUMMY FROM MISC.PO, CONO:AVO.PO ELSE FPO = 0
            END
         END
         IF FPO = 0 THEN
*T26643 v
*           X=3;Y=21;TYP=8;PMSG ='PO (':AVO.PO:') NOT ON PO FILE OK (Y)ES OR (N)O'
*           CALL EDIT.SUB
*           P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
*           CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            ECD.NUM = 22
            ECD.ACTION = 4 ; CALL SCRN.EDIT
            VALUE = ECD.RET.VALUE
*T26643 ^
            IF VALUE = "END" OR VALUE = "N" THEN GOTO 40
         END
      END
   END
   RETURN
*** ENTER INVOICE NUMBER
50*
   ECD.NUM = 14
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      AVO.INV = ECD.RET.VALUE
   END
   RETURN
*** ENTER INVOICE DATE
60*
   ECD.NUM = 15
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      AVO.INV.DATE = ECD.RET.VALUE
   END
   IF OPTION # "" THEN GOSUB 70
   RETURN
*** CALCULATE DUE DATE
70*
*T22288 v make sure date is four digits on next two lines
   DATE.INV = OCONV(AVO.INV.DATE, "D4/")
   MM = DATE.INV[1,2];DD = DATE.INV[4,2];YY = DATE.INV[7,4]
*T22288 ^      
   TRM.DAYS = AVO.TERMS<1,2>
   DISC = AVO.TERMS<1,1>
   IF TRM.DAYS[1,1] = 'P' OR DISC[5,2] + 0 = 0 THEN
      IF DD > CO.PROX.CUTOFF THEN
         NMM = MM + 2
      END ELSE
         NMM = MM + 1
      END
      IF NMM > 12 THEN
         NMM = NMM - 12
         YY = YY + 1
      END
*T22288 v make sure date is four digits on next two lines
      NMM=STR('0',2-LEN(NMM)):NMM:"/":TRM.DAYS[2,2]:"/":STR("0",4-LEN(YY)):YY
      AVO.DUE.DATE = ICONV(NMM, "D4/")
*T22288 ^         
   END ELSE
      AVO.DUE.DATE = AVO.INV.DATE + (DISC[5,2]*1)
   END
   ECD.NUM = 18
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.DEFAULT = OCONV(AVO.DUE.DATE , "D2/")
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      AVO.DUE.DATE = ECD.RET.VALUE
   END
   RETURN
*** ENTER GROSS AMT
80*
   ECD.NUM = 23
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.GRS.AMT = ECD.RET.VALUE
      IF OPTION # "" THEN
         GOSUB 90
      END
   END
   RETURN
*** ENTER MERCH AMT
90*
   ECD.NUM = 46
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.GRS.AMT
   IF AVO.GRS.AMT > 0 THEN
      ECD.MINV = 0 ; ECD.MAXV = AVO.GRS.AMT
   END ELSE
      ECD.MINV = AVO.GRS.AMT ; ECD.MAXV = 0
   END
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.MER.AMT = ECD.RET.VALUE
      IF OPTION # "" THEN
         GOSUB 100;GOSUB 110;GOSUB 150
      END
   END
   RETURN
**** CALCULATED DISCOUNT AMT
100*
   DISC = AVO.TERMS<1,1>
   DISC.AMT = INT((AVO.MER.AMT * DISC[1,4]) / 10000 + .5)
   ECD.NUM = 24
   IF AVO.MER.AMT > 0 THEN
      ECD.MINV = 0 ; ECD.MAXV = AVO.MER.AMT
   END ELSE
      ECD.MINV = AVO.MER.AMT ; ECD.MAXV = 0
   END
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> =  DISC.AMT
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.DSC.AMT = ECD.RET.VALUE
   END
   RETURN
**** CALCULATE NET AMT
110*
   ECD.NUM = 25;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.GRS.AMT - AVO.DSC.AMT;ECD.ACTION = 5;CALL SCRN.EDIT
   DIST.BAL = AVO.GRS.AMT
*T25759 v
*  P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(AVO.GRS.AMT , "MD2") "L#10" ; P_OPT = ""
*  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(DIST.BAL , "MD2") "L#10"
   P_X  = 45 ; P_Y = 20 ; P_VALUE = OCONV(AVO.GRS.AMT , "MD2") "L#10" ; P_OPT = ""
   P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:OCONV(DIST.BAL , "MD2") "L#10"
*T25759 ^
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
**** ENTER STARTING FISCAL PERIOD
120*
   IF AVO.MON = "" THEN
      ECD.NUM = 54
      ECD.ACTION = 4;CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         IF ECD.RET.VALUE < MON THEN
            X=3;Y=21;TYP=18;PMSG="ARE YOU SETTING THIS VOUCHER FOR NEXT FISCAL YEAR, OK (Y)ES OR (N)O"
            CALL EDIT.SUB
            P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF VALUE = "END" OR VALUE = "N" THEN GOTO 120
         END
         AVO.ST.PER = ECD.RET.VALUE
      END
   END ELSE
      ERRMSG = "CAN'T CHANGE STARTING PERIOD ON PROCESSED AUTO VOUCHERS"
      GOSUB 91000
   END
   RETURN
**** ENTER NUMBER OF PAYMANTS
130*
   ECD.NUM = 55
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.N.O.P = ECD.RET.VALUE
      GOSUB 140
   END
   RETURN
**** PRINT PAYMENT PAID  & DUE
140*
   ECD.NUM = 56;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.N.P.P;ECD.ACTION = 5;CALL SCRN.EDIT
   ECD.NUM = 57;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.N.O.P - AVO.N.P.P;ECD.ACTION = 5;CALL SCRN.EDIT
**** ENTER ACCOUNT DISTR
150*
   IF AVO.ACCT = "" THEN
      LOOP
         REQUEST = "A"
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 200
      WHILE LINES > OLD.LINES AND DIST.BAL # 0 DO REPEAT
      LN = LINES
   END ELSE
      LINES = COUNT(AVO.ACCT , VM) + (AVO.ACCT # "")
      GOSUB 300
      LN = 1
   END
   GOSUB 1100
   RETURN
*T25759 v
**** ENTER REMITT COMMENTS
160*
   ECD.NUM = 21 ; ECD.ACTION = 4
   IF AVO.REM.COMM # "" THEN ECD.DEFAULT = AVO.REM.COMM
   CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.REM.COMM = ECD.RET.VALUE
   END
   RETURN
*T25759 ^
*** ENTER ACCOUNT DIST.
200*
   GOSUB 1100
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*** ENTER ACCOUNT NUMBER
201*
   X=4;Y = SLN;TYP = 3;O.R = 'O';MAXL = IN.ACCT.LEN
* TASK 20016 v
   IF DB.CR = "D" THEN
* TASK 20016 ^
      IF AVO.ACCT<1,LN> = "" THEN
         IF VEND.AUTO.DIST # "" THEN
            DEFAULT = VEND.AUTO.DIST
         END ELSE
            O.R = "R";DEFAULT = ''
         END
      END ELSE
         DEFAULT = AVO.ACCT<1,LN>
      END
* TASK 20016 v
   END ELSE
      IF AVO.AP.ACCT<1,LN> = '' THEN
         O.R = 'O'; DEFAULT = GLTB.AP
      END ELSE
         DEFAULT = AVO.AP.ACCT<1,LN>
      END
   END
* TASK 20016 ^
   CALL EDIT.SUB
   IF VALUE = "END" THEN
* TASK 20016 v
      IF DB.CR = "D" THEN
* TASK 20016 ^
         IF AVO.DIST.AMT<1,LN> = "" THEN
            AVO.ACCT = DELETE(AVO.ACCT,1,LN,0)
            AVO.DIV = DELETE(AVO.DIV,1,LN,0)
            AVO.DEPT = DELETE(AVO.DEPT,1,LN,0)
            AVO.CCTR = DELETE(AVO.CCTR,1,LN,0)
            AVO.DIST.AMT = DELETE(AVO.DIST.AMT,1,LN,0)
            AVO.ASSET.ID = DELETE(AVO.ASSET.ID,1,LN,0)
            P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      END ELSE
         IF AVO.AP.AMT<1,LN> = '' THEN
            AVO.AP.ACCT = DELETE(AVO.AP.ACCT,1,LN,0)
            AVO.AP.AMT = DELETE(AVO.AP.AMT,1,LN,0)
*               AVO.AP.FLG = DELETE(AVO.AP.FLG,1,LN,0)
*T19149 v
            AVO.AP.DIV = DELETE(AVO.AP.DIV,1,LN,0)
            AVO.AP.DEPT = DELETE(AVO.AP.DEPT,1,LN,0)
            AVO.AP.CCTR = DELETE(AVO.AP.CCTR,1,LN,0)
*T19149 ^
            P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      END
* TASK 20016 ^
      IF REQUEST = 'C' THEN OLD.START.LINE = 0;GOSUB 1100
      GOTO 299
   END
   MATREAD COA.REC FROM COA, CONO:VALUE ELSE
      ERRMSG = "G/L ACCOUNT (":VALUE CO.ACCT.MASK:") NOT ON FILE"
      GOSUB 91000;GOTO 201
   END
* TASK 20016 v
   IF DB.CR = "D" THEN
* TASK 20016 ^
      AVO.ACCT<1,LN> = VALUE
   END ELSE
      AVO.AP.ACCT<1,LN> = VALUE
   END
* TASK 20016 ^
*T22637 >P_X  = 4 ; P_Y = SLN ; P_VALUE = AVO.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
   P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE CO.ACCT.MASK ; P_OPT = ""
   P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:COA.DESC "L#30"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*********************************************************************
*      GET DIVISION, DEPARTMENT AND COST CENTER AS REQUIRED
*********************************************************************
   IF COA.LEVEL = 0 THEN
* TASK 20016 v
      IF AVO.DIV.OWNER # GEN.DIV THEN
         ERRMSG = 'ACCOUNT ':GLTB.AP:' IS LEVEL 0 AND CAN ONLY BE USED WITH "':GEN.DIV:'" VOUCHERS'
         GOSUB 91000; GOTO 201
      END
      IF DB.CR='D' THEN
         AVO.DIV<1,LN> = AVO.DIV.OWNER
         P_X  = 20 ; P_Y = SLN ; P_VALUE = AVO.DIV<1,LN>"L#2" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         AVO.DEPT<1,LN> = GEN.DEPT
         AVO.CCTR<1,LN> = GEN.CCTR
      END ELSE
         AVO.AP.DIV<1,LN> = AVO.DIV.OWNER
         P_X  = 20 ; P_Y = SLN ; P_VALUE = AVO.AP.DIV<1,LN>"L#2" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         AVO.AP.DEPT<1,LN> = GEN.DEPT
         AVO.AP.CCTR<1,LN> = GEN.CCTR
      END
      P_X  = 23 ; P_Y = SLN ; P_VALUE = GEN.DEPT"L#2" ; P_OPT = ""
      P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:GEN.CCTR"L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END ELSE
      IF AVO.DIV.OWNER # "" AND AVO.DIV.OWNER # GEN.DIV THEN
         MATREAD DIV.REC FROM DIVISION, CONO:AVO.DIV.OWNER ELSE
            ERRMSG = "DIVISION ":AVO.DIV.OWNER:" IS NOT ON FILE"
            GOSUB 93000; GOTO 201
         END
         DIV = AVO.DIV.OWNER
         IF DB.CR = 'D' THEN
            AVO.DIV<1,LN> = DIV
         END ELSE
            AVO.AP.DIV<1,LN> = DIV
         END
* TASK 20016 ^
      END ELSE
8881*
         IF DB.CR = 'D' THEN
            CDIV = AVO.DIV<1,LN>
         END ELSE
            CDIV = AVO.AP.DIV<1,LN>
         END
         CALL GET.DIVISION (CONO,20,SLN,30,DIV,AVO.DIV<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DIV.REC,CONTROL,DIVISION,STAT)
         IF STAT[2,1] = "1" THEN
            SAVE.SLN = SLN
            OLD.START.LINE = 0
            GOSUB 1100
            SLN = SAVE.SLN
         END
         IF DIV = "END" THEN GOTO 201
         IF STAT[1,1] = "1" THEN GOTO 8881
         AVO.DIV<1,LN> = DIV
      END
      P_X  = 20 ; P_Y = SLN ; P_VALUE = DIV"L#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
* TASK 20016 ^
   IF COA.LEVEL = 1 OR AVO.DIV<1,LN> = GEN.DIV THEN
      IF DB.CR = "D" THEN
         AVO.DEPT<1,LN> = GEN.DEPT
         AVO.CCTR<1,LN> = GEN.CCTR
      END ELSE
         AVO.AP.DEPT<1,LN> = GEN.DEPT
         AVO.AP.CCTR<1,LN> = GEN.CCTR
      END
      P_X  = 23 ; P_Y = SLN ; P_VALUE = GEN.DEPT"L#2" ; P_OPT = ""
      P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:GEN.CCTR"L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END ELSE
8882*
*T22637 >         CALL GET.DEPARTMENT (CONO,23,SLN,30,DEPT,AVO.DEPT<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DIV.REC,MAT DEPT.REC,DEPARTMENT,STAT)
      CALL GET.DEPARTMENT (CONO,23,SLN,30,DEPT,GEN.DEPT,BEGIN.PAGE,PAGE.SIZE,MAT DIV.REC,MAT DEPT.REC,DEPARTMENT,STAT)
      IF STAT[2,1] = "1" THEN
         SAVE.SLN = SLN
         OLD.START.LINE = 0
         GOSUB 1100
         SLN = SAVE.SLN
      END
      IF DEPT = "END" THEN GOTO 201
      IF STAT[1,1] = "1" THEN GOTO 8882
      IF DB.CR = "D" THEN
         AVO.DEPT<1,LN> = DEPT
      END ELSE
         AVO.AP.DEPT<1,LN> = DEPT
      END
      P_X  = 23 ; P_Y = SLN ; P_VALUE = DEPT"L#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF COA.LEVEL = 2 OR DEPT = GEN.DEPT THEN
         IF DB.CR = "D" THEN
            AVO.CCTR<1,LN> = GEN.CCTR
         END ELSE
            AVO.AP.CCTR<1,LN> = GEN.CCTR
         END
         P_X  = 26 ; P_Y = SLN ; P_VALUE = GEN.CCTR"L#3" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
8883*
         CALL GET.COST.CENTER (CONO,26,SLN,30,CCTR,AVO.CCTR<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DEPT.REC,MAT CCTR.REC,COST.CNTR,STAT)
         IF STAT[2,1] = "1" THEN
            SAVE.SLN = SLN
            OLD.START.LINE = 0
            GOSUB 1100
            SLN = SAVE.SLN
         END
         IF CCTR = "END" THEN GOTO 201
         IF STAT[1,1] = "1" THEN GOTO 8883
         IF DB.CR = "D" THEN
            AVO.CCTR<1,LN> = CCTR
         END ELSE
            AVO.AP.CCTR<1,LN> = CCTR
         END
         P_X  = 26 ; P_Y = SLN ; P_VALUE = CCTR"L#3" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
   END
***************************************************************************
**** ENTER DIST AMT
202*
   IF DB.CR = "D" AND AVO.DIST.AMT<1,LN> > 0 THEN
      DIST.BAL = DIST.BAL + AVO.DIST.AMT<1,LN>
*T25759 v
*     P_X  = 68 ; P_Y = 19 ; P_VALUE = OCONV(DIST.BAL , "MD2") "R#10" ; P_OPT = ""
      P_X  = 68 ; P_Y = 20 ; P_VALUE = OCONV(DIST.BAL , "MD2") "R#10" ; P_OPT = ""
*T25759 ^
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   X=61;Y=SLN;TYP=4;SCALER=2;MAXL=10
   IF DIST.BAL > 0 THEN
      MAXV = DIST.BAL;MINV = 0
   END ELSE
      MAXV = 0;MINV = DIST.BAL
   END
* TASK 20016 v
   IF DB.CR='D' THEN        ;* Task 17919
      IF AVO.DIST.AMT<1,LN>='' THEN
         O.R='R'; DEFAULT=''
      END ELSE
         DEFAULT=OCONV(AVO.DIST.AMT<1,LN>,"MD2")
      END
   END ELSE
      IF AVO.AP.AMT<1,LN> = '' THEN
         O.R = 'R'
      END ELSE
         O.R = 'O';DEFAULT = OCONV(AVO.AP.AMT<1,LN> , "MD2")
      END
   END
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 201
   IF DB.CR = 'D' THEN        ;* Task 17919
      AVO.DIST.AMT<1,LN> = VALUE
   END ELSE
      AVO.AP.AMT<1,LN> = VALUE
   END
*     IF AVO.DIST.AMT<1,LN> = '' THEN
*        O.R = 'R'
*     END ELSE
*        O.R = 'O';DEFAULT = OCONV(AVO.DIST.AMT<1,LN> , "MD2")
*     END
*     CALL EDIT.SUB
*     IF VALUE = "END" THEN GOTO 201
*     AVO.DIST.AMT<1,LN> = VALUE
* TASK 20016 ^
**** ENTER ASSET ID
203*
   IF DB.CR='C' THEN        ;* Task 17919
      CR.LINES = DCOUNT(AVO.AP.ACCT,VM)
      CR.TOT=0
      FOR II=1 TO CR.LINES
         CR.TOT=CR.TOT+AVO.AP.AMT<1,II>
      NEXT II
      GOTO 299
   END
   X=72;Y=SLN;TYP=1;O.R = 'O';MAXL = 8;DEFAULT = AVO.ASSET.ID<1,LN>
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 201
   IF CO.FAS = "Y" AND VALUE # "" THEN
      MATREAD EQP.REC FROM EQUIP.FILE, CONO:VALUE ELSE
         ERRMSG = "MASTER EQUIP ID (":VALUE:") NOT ON FILE";GOSUB 91000;GOTO 203
      END
      MATREAD AST.REC FROM ASSETS, CONO:VALUE ELSE
         ERRMSG = "EQUIP ID (":VALUE:") NOT ON FILE";GOSUB 91000;GOTO 203
      END
   END
   AVO.ASSET.ID<1,LN> = VALUE
   LINES = COUNT(AVO.ACCT , VM) + (AVO.ACCT # "")
   GOSUB 300
299*
   RETURN
*** GET BALANCE
300*
   DIST.BAL = 0
   FOR AA = 1 TO LINES
      DIST.BAL = DIST.BAL + AVO.DIST.AMT<1,AA>
   NEXT AA
   DIST.BAL = AVO.GRS.AMT - DIST.BAL
*T25759 v
*  P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(AVO.GRS.AMT , "MD2") "R#10" ; P_OPT = ""
*  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(DIST.BAL , "MD2") "R#10"
   P_X  = 45 ; P_Y = 20 ; P_VALUE = OCONV(AVO.GRS.AMT , "MD2") "R#10" ; P_OPT = ""
   P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:OCONV(DIST.BAL , "MD2") "R#10"
*T25759 ^
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
**** ENTER A MISC. VEND
500*
   AVO.VEND<1,1> = "0000":ECD.RET.VALUE
   ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = AVO.VEND<1,1>;ECD.ACTION = 5;CALL SCRN.EDIT
**** ENTER VENDOR NAME
501*
   ECD.NUM = 11
   ECD.O.R = 'R'
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.VEND<1,2> = ECD.RET.VALUE
   END ELSE
      GOTO 599
   END
**** ENTER VENDOR ADDRESS
502*
   ECD.NUM = 13
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.VEND<1,3> = ECD.RET.VALUE
   END ELSE
      GOTO 599
   END
**** ENTER CITY & STATE
503*
   ECD.NUM = 16
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.VEND<1,4> = ECD.RET.VALUE
   END ELSE
      GOTO 599
   END
**** ENTER ZIP CODE
504*
   ECD.NUM = 53
   ECD.ACTION = 4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      AVO.VEND<1,5> = ECD.RET.VALUE
   END ELSE
      GOTO 599
   END
599 RETURN
***** GET ALL VALUES FROM FILE
1000*
   MATREAD VEND.REC FROM VEND, CONO:AVO.VEND<1,1> ELSE
      IF COUNT(AVO.VEND, VM) + (AVO.VEND # "") < 1 THEN
         MAT VEND.REC = "??????????????????"
      END ELSE
         VEND.DESC = AVO.VEND<1,2>
         VEND.ADDR1 = AVO.VEND<1,3>
         VEND.CT.ST = AVO.VEND<1,4>
         VEND.ZIP = AVO.VEND<1,5>
      END
   END
   SCV.REC(6)<ECD.SCRN.NO,1> = V.CODE[1,2]
   SCV.REC(10)<ECD.SCRN.NO,1> = AVO.VEND<1,1>
   SCV.REC(11)<ECD.SCRN.NO,1> = VEND.DESC
   SCV.REC(13)<ECD.SCRN.NO,1> = VEND.ADDR1
   SCV.REC(16)<ECD.SCRN.NO,1> = VEND.CT.ST[1,19]
   SCV.REC(53)<ECD.SCRN.NO,1> = VEND.ZIP
   IF AVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200
   SCV.REC(17)<ECD.SCRN.NO,1> = AVO.TERMS<1,2>
   SCV.REC(47)<ECD.SCRN.NO,1> = AVO.TERMS<1,1>[1,4]
   SCV.REC(12)<ECD.SCRN.NO,1> = AVO.PO
   SCV.REC(14)<ECD.SCRN.NO,1> = AVO.INV
   SCV.REC(15)<ECD.SCRN.NO,1> = AVO.INV.DATE
   SCV.REC(18)<ECD.SCRN.NO,1> = OCONV(AVO.DUE.DATE, "D2/")
   SCV.REC(23)<ECD.SCRN.NO,1> = AVO.GRS.AMT
   SCV.REC(46)<ECD.SCRN.NO,1> = AVO.MER.AMT
   SCV.REC(24)<ECD.SCRN.NO,1> = AVO.DSC.AMT
   SCV.REC(25)<ECD.SCRN.NO,1> = AVO.GRS.AMT - AVO.DSC.AMT
   SCV.REC(54)<ECD.SCRN.NO,1> = AVO.ST.PER
   SCV.REC(55)<ECD.SCRN.NO,1> = AVO.N.O.P
   SCV.REC(56)<ECD.SCRN.NO,1> = AVO.N.P.P
   SCV.REC(57)<ECD.SCRN.NO,1> = AVO.N.O.P - AVO.N.P.P
   SCV.REC(58)<ECD.SCRN.NO,1> = AVO.DIV.OWNER ;* TASK 19406
   SCV.REC(21)<ECD.SCRN.NO,1> = AVO.REM.COMM ; * T25759
   RETURN
**** SCROLL ACCOUNT DIST
1100*
* TASK 20016 v
   IF DB.CR = 'D' THEN
      P_X  = 62 ; P_Y = 14 ; P_VALUE = "Debits " ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* TASK 20016 ^
      NO.LINES = COUNT(AVO.ACCT,VM) + (AVO.ACCT # "")
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
*     IF START.LINE = OLD.START.LINE THEN GOTO 1199; * TASK 20016
      OLD.START.LINE = START.LINE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      CNT = 1
      FOR N = START.LINE TO LAST.LINE UNTIL N > NO.LINES
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#3"
         P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.ACCT<1,N> CO.ACCT.MASK
         P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.DIV<1,N> "L#2"
         P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.DEPT<1,N> "L#2"
         P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.CCTR<1,N> "L#3"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         MATREAD COA.REC FROM COA, CONO:AVO.ACCT<1,N> ELSE
            MAT COA.REC = "?????????????"
         END
         P_X  = 30 ; P_Y = SLN ; P_VALUE = COA.DESC "L#30" ; P_OPT = ""
         P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(AVO.DIST.AMT<1,N>, "MD2") "R#10"
         P_X  := AM:72 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.ASSET.ID<1,N> "L#8"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
   END ELSE
      P_X  = 62 ; P_Y = 14 ; P_VALUE = "Credits" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CR.LINES = COUNT(AVO.AP.ACCT,VM) + (AVO.AP.ACCT # "")
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      OLD.START.LINE = START.LINE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      CNT = 1
      FOR N = START.LINE TO LAST.LINE UNTIL N > CR.LINES
         SLN = BEGIN.PAGE + LINE.SPACE * REM(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#3"
         P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.AP.ACCT<1,N> CO.ACCT.MASK
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T19149 v
*            PRINT @(20,SLN):"00":
*            PRINT @(23,SLN):"00":
*            PRINT @(26,SLN):"000":
         P_X  = 20 ; P_Y = SLN ; P_VALUE = AVO.AP.DIV<1,N>"L#2" ; P_OPT = ""
         P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.AP.DEPT<1,N>"L#2"
         P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:AVO.AP.CCTR<1,N>"L#3"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T19149 ^
         MATREAD COA.REC FROM COA, CONO:AVO.AP.ACCT<1,N> ELSE
            MAT COA.REC = ""
            COA.DESC = "?????????????"
         END
         P_X  = 30 ; P_Y = SLN ; P_VALUE = COA.DESC "L#29" ; P_OPT = ""
         P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(AVO.AP.AMT<1,N>, "MD2") "R#11"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * REM(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
   END
* TASK 20016 ^
1199*
   RETURN
**** PRINT MAIN VEND IF SUB VEND WAS INPUT
1200*
   MATREAD SVEND.REC FROM VEND, CONO:AVO.VEND<1,1>[1,5] ELSE
      MAT SVEND.REC = "??????????????"
   END
*T28977 v
*  SCV.REC(41)<ECD.SCRN.NO> = AVO.VEND<1,1>[1,5]
*  SCV.REC(42)<ECD.SCRN.NO> = SVEND.DESC
*  SCV.REC(43)<ECD.SCRN.NO> = SVEND.ADDR1
*  SCV.REC(44)<ECD.SCRN.NO> = SVEND.CT.ST[1,19]:" ":SVEND.ZIP
   MST.VNUM = AVO.VEND<1,1>[1,5]
   MST.VNAME = SVEND.DESC
   MST.VADDR = SVEND.ADDR1
   MST.VCSZ = SVEND.CT.ST'L#19':' ':SVEND.ZIP
   SCV.REC(26)<ECD.SCRN.NO> = 'SubVend'
*T28977 ^
   RETURN
**** ENTER OPTIONS FOR DETAIL LINE
50000*
   OLD.DB.CR=DB.CR
   ECD.NUM=59
   SCV.REC(ECD.NUM)<1>=''
   ECD.ACTION=4 ; CALL SCRN.EDIT
   DB.CR=ECD.RET.VALUE
   IF DB.CR='' OR DB.CR='END' THEN GO 50099
   IF DB.CR # OLD.DB.CR THEN OLD.START.LINE=0; LN=1; GOSUB 1100
   CR.LINES = DCOUNT(AVO.AP.ACCT,VM)
   CO = 1
   LOOP
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      ECD.NUM = 49
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST = '' OR REQUEST = 'END' OR REQUEST = 'E'
            IF DIST.BAL # '0' THEN
               ERRMSG = "PLEASE NOTE THAT YOU HAVE NOT DISTRIBUTED THE TOTAL AMOUNT";GOSUB 91000
            END
            CO = 0
         CASE REQUEST = 'A'
* TASK 20016 v
            IF DB.CR = "D" THEN
               LOOP
                  LN = LINES + 1
                  OLD.LINES = LINES
                  GOSUB 200
               WHILE LINES > OLD.LINES AND DIST.BAL > 0 DO REPEAT
               LN = LINES
            END ELSE
               LOOP
                  LN=CR.LINES + 1
                  OLD.LINES=CR.LINES
                  CR.TOT=0
                  GOSUB 200
               WHILE CR.LINES > OLD.LINES AND CR.TOT+AVO.GRS.AMT#0 DO
               REPEAT
               LN=CR.LINES
               GOSUB 1100
            END
* TASK 20016 ^
         CASE REQUEST = 'C'
            GOSUB 80000
            IF LNO THEN
               LN = LNO
               SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
               GOSUB 200
            END
         CASE REQUEST = 'D'
            GOSUB 80000
            IF LNO THEN
* TASK 20016 v
               IF DB.CR = 'D' THEN        ;* Task 17919
                  LN = LNO
                  AVO.ACCT = DELETE(AVO.ACCT,1,LN,0)
                  AVO.DIV = DELETE(AVO.DIV,1,LN,0)
                  AVO.DEPT = DELETE(AVO.DEPT,1,LN,0)
                  AVO.CCTR = DELETE(AVO.CCTR,1,LN,0)
                  AVO.DIST.AMT = DELETE(AVO.DIST.AMT,1,LN,0)
                  AVO.ASSET.ID = DELETE(AVO.ASSET.ID,1,LN,0)
                  LINES = COUNT(AVO.ACCT,VM) + (AVO.ACCT # "")
                  GOSUB 300
                  IF LN > 1 AND LN > LINES THEN LN = LN - 1
               END ELSE
                  LN=LNO
                  AVO.AP.ACCT = DELETE(AVO.AP.ACCT,1,LN,0)
                  AVO.AP.AMT = DELETE(AVO.AP.AMT,1,LN,0)
*      AVO.AP.FLG = DELETE(AVO.AP.FLG,1,LN,0)
*T19149 v
                  AVO.AP.DIV = DELETE(AVO.AP.DIV,1,LN,0)
                  AVO.AP.DEPT = DELETE(AVO.AP.DEPT,1,LN,0)
                  AVO.AP.CCTR = DELETE(AVO.AP.CCTR,1,LN,0)
*T19149 ^
                  CR.LINES = DCOUNT(AVO.AP.ACCT,VM)
                  IF LN > 1 AND LN > CR.LINES THEN LN=LN-1
               END
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
               GOSUB 1100
            END
         CASE REQUEST = 'S'
            LN = LN + PAGE.SIZE
* TASK 20016 v
            IF DB.CR = "D" THEN
               IF LN > LINES THEN LN = 1
            END ELSE
               IF LN > CR.LINES THEN LN = 1
            END
* TASK 20016 ^
            GOSUB 1100
      * T25978 v
         CASE REQUEST = 'SR'
            LN -= PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 1100
         CASE REQUEST = 'ST'
            LN = 1
            GOSUB 1100
         CASE REQUEST = 'SB'
            IF DB.CR = "D" THEN
               LN = LINES
            END ELSE
               LN = CR.LINES
            END
            GOSUB 1100
      * T25978 ^
      END CASE
   WHILE CO DO REPEAT
50099*
   RETURN
***** ENTER OPTIONS
60000*
   MORE = 0
   LOOP
      ECD.NUM = 40
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = 'END' OR OPTION = 'E'
            MORE = 1
         CASE NUM(OPTION)
*T25759 v
*           ON OPTION GOSUB 20,30,40,50,60,70,80,90,100,120,130
            ON OPTION GOSUB 20,30,40,50,60,70,80,90,100,120,130,160
*T25759 ^
         CASE OPTION = 'AD'
            GOSUB 50000
            DB.CR='D'        ;* Task 17919
            GOSUB 1100
         CASE OPTION = 'F'
            IF DIST.BAL # "0" THEN
               ERRMSG = "CAN'T FILE WHEN DIST. BALANCE NOT EQUAL ZERO";GOSUB 91000;GOTO 60000
            END
*
* Check debit and credit totals balance        ;* Task 17919
*
            DB.TOT=0
            CR.TOT=0
            DB.LINES=COUNT(AVO.ACCT,VM) + (AVO.ACCT # "")
            CR.LINES=COUNT(AVO.AP.ACCT,VM) + (AVO.AP.ACCT # "")
            FOR I=1 TO DB.LINES
               DB.TOT=DB.TOT + AVO.DIST.AMT<1,I> + 0
            NEXT I
            FOR J=1 TO CR.LINES
               CR.TOT=CR.TOT + AVO.AP.AMT<1,J> + 0
            NEXT J
            IF DB.TOT + CR.TOT # 0 THEN
               ERRMSG="Cannot file when debit total + credit total not equal to zero"
               GOSUB 91000
               GOTO 60000
            END
            IF STATUS = 1 THEN
               MATREADU SEQ.REC FROM CONTROL, CONO:"AUTOVOUCHER" ELSE MAT SEQ.REC = 1
               V.CODE = SEQ.NO
               SEQ.NO = SEQ.NO + 1
               MATWRITE SEQ.REC ON CONTROL , CONO:"AUTOVOUCHER"
               ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = V.CODE;ECD.ACTION = 5;CALL SCRN.EDIT
               ERRMSG = "SEQUENCE NUMBER (":V.CODE:") WAS ASSIGNED TO THIS ENTRY"
               GOSUB 91000
            END
            AVO.CTR = COUNT(AVO.DIST.AMT, VM) + (AVO.DIST.AMT # "")
            MATWRITE AVO.REC ON AUTO.VOUCHERS , CONO:V.CODE
            MORE = 1
         CASE OPTION = 'D'
            X=3;Y=21;TYP=8;MAXL=1
            PMSG = "YOU ARE ABOUT TO DELETE THIS ENTRY OK (Y)ES OR (N)O"
            CALL EDIT.SUB
            P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF VALUE = 'Y' THEN
               DELETE AUTO.VOUCHERS , CONO:V.CODE
               MORE = 1
            END
*T28977 v
         CASE OPTION = 'T' AND AVO.VEND<1,1>[6,1] = '-'
           IF SCV.REC(26)<ECD.SCRN.NO> # "Vendor" THEN
             SCV.REC(10)<ECD.SCRN.NO> = MST.VNUM
             SCV.REC(11)<ECD.SCRN.NO> = MST.VNAME
             SCV.REC(13)<ECD.SCRN.NO> = MST.VADDR
             SCV.REC(16)<ECD.SCRN.NO> = MST.VCSZ[1,19]
             SCV.REC(53)<ECD.SCRN.NO> = MST.VCSZ[21,10]
             SCV.REC(26)<ECD.SCRN.NO> = "Vendor"
           END ELSE
             SCV.REC(26)<ECD.SCRN.NO> = "SubVend"
             SCV.REC(10)<ECD.SCRN.NO> = AVO.VEND<1,1>
             SCV.REC(11)<ECD.SCRN.NO> = VEND.DESC
             SCV.REC(13)<ECD.SCRN.NO> = VEND.ADDR1
             SCV.REC(16)<ECD.SCRN.NO> = VEND.CT.ST[1,19]
             SCV.REC(53)<ECD.SCRN.NO> = VEND.ZIP
           END
           ECD.ACTION=3; CALL SCRN.EDIT
*T28977 ^
      END CASE
   WHILE MORE = 0 DO REPEAT
   RETURN
**** ENTER LINE NUMBER
80000*
   GOSUB 1100
   ECD.NUM = 60
   ECD.MINV = OLD.START.LINE
* TASK 20016 v
   IF DB.CR='D' THEN        ;* Task 17919
      IF LAST.LINE < LINES THEN ECD.MAXV=LAST.LINE ELSE ECD.MAXV=LINES
   END ELSE
      IF LAST.LINE < CR.LINES THEN ECD.MAXV=LAST.LINE ELSE ECD.MAXV=CR.LINES
   END
* TASK 20016
   ECD.ACTION = 4
   CALL SCRN.EDIT
   LNO = ECD.RET.VALUE
   IF LNO = '' OR LNO = 'END' THEN LNO = 0
   RETURN
**** CALLS FOR SYSCOM
91000ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT @(-1)
END
