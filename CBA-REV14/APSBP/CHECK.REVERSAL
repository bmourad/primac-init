*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - CHECK.REVERSAL
* BY          - JIHAD YAMOUT, C.B.A
* DATE        - 11/12/84
* DESCRIPTION -
* 02/24/92 DLG TASK 16472-CORRECT MISC VEND NAME ON DCR
*T22701 stefanie 03/27/1998 * Correct check reversal message.
*T23278 markt 10/26/1998 * Add check for divisional security
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T27646 thompson 08/19/2003 * MODIFY FOR MULTI PLATFORM ISSUE
*ENDDOC
*********************************************************************
*** INSERT FILE EQUATES
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>FISCAL
*COPY>APS.CPYLIB>APCHECK
*COPY>APS.CPYLIB>HDCH
*COPY>APS.CPYLIB>DAILY.CHECK.REVERSAL
*COPY>APS.CPYLIB>SQV
*COPY>APS.CPYLIB>VOUCHERS
*COPY>FAS.CPYLIB>EQUIP.FILE
*COPY>FAS.CPYLIB>ASSETS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
  DIM SVEND.REC(50)
  EQU SVEND.DESC TO SVEND.REC(1)
  EQU SVEND.ADDR1 TO SVEND.REC(2)
  EQU SVEND.CT.ST TO SVEND.REC(4)
  EQU SVEND.ZIP TO SVEND.REC(5)
  EQU SVEND.TERMS TO SVEND.REC(6)
*** SETUP FOR SYSTEM ERRMSGS
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*** OPEN FILES
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
  OPEN '','VOUCHERS' TO VOUCHERS ELSE ERRMSG = 'VOUCHERS FILE MISSING';GOTO 93000
  OPEN '','DAILY.CHECK.REVERSAL' TO DAILY.CHECK.REVERSAL ELSE ERRMSG = 'DAILY.CHECK.REVERSAL FILE MISSING';GOTO 93000
  OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOTO 93000
  OPEN '','HDCH' TO HDCH ELSE ERRMSG = 'HDCH FILE MISSING';GOTO 93000
  OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE MISSING';GOTO 93000
  OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG = 'VENDOR.XREF FILE MISSING';GOTO 93000
  OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = 'APCHECK FILE MISSING';GOTO 93000
  OPEN '','APS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'APS.SCREENS FILE MISSING';GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING';GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MISSING';GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE MISSING';GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE MISSING';GOTO 93000
  OPEN '','COA' TO COA ELSE ERRMSG = 'COA FILE IS MISSING';GOTO 93000
*** GET COMPANY NAME
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  LOGNAME = 'LOGNAME'; CALL SYSVARS.SUB(LOGNAME) ; *T27646
  IN.ACCT.LEN = LEN(CO.ACCT.PIC)
  MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE
    ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE";GOTO 93000
  END
  MATREAD FISCAL.REC FROM CONTROL,CONO:'APVFISCAL' ELSE
    ERRMSG = "APVFISCAL CONTROL RECORD IS MISSING"; GOTO 93000
  END
  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
    PERIOD.REC = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
***** T23278 v
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"; GOTO 93000
  END
*
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    ERRMSG = "DIV.SECURITY CONTORL RECORD IS MISSING"; GOTO 93000
  END
*  MON = FR.CURR.PER[5,2]
*  IF MON < 1 OR MON > NUM.PERIODS THEN
*      ERRMSG = "ERROR IN CONTROL RECORD 'APVFISCAL'"; GOTO 93000
*  END
***** T23278 ^
  IF CO.FAS = "Y" THEN
    OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE IS MISSING';GOTO 93000
    OPEN '','ASSETS' TO ASSETS ELSE ERRMSG = 'ASSETS FILE IS MISSING';GOTO 93000
  END
*** SET UP GEN.XREF.REC
  MAT EDIT.COM.DRIVER = '';MAT GEN.XREF.REC = ''
*  MAT EDIT.COM = ''
*  TYP = 0;CALL EDIT.SUB
  FILL = "#"
  GXR.CO = CONO
  GXR.HEADING<1,2> = 'DESCRIPTION'
  GXR.ATT<1,1> = 0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 10;GXR.LEN<1,2> = 30
  BEGIN.PAGE = 13;PAGE.SIZE = 6;LINE.SPACE = 1;LINES = 0;OLD.START.LINE = 0
  GEN.DIV='00';GEN.DEPT='00';GEN.CCTR='000'
*** MAIN PROCESSING
  MAT EDIT.COM.DRIVER = ''
  ECD.SCRN.CNT = 2
  ECD.SCRN.NAME<1> = "CHECK.REVERSAL"
  ECD.SCRN.NAME<2> = "CHECK.REVERSAL.SUB"
  ECD.ACTION=1;CALL SCRN.EDIT
*** PRINT SCREEN
1*
  LINES = 0;OLD.START.LINE = 0;MAT DCR.REC = ''
  MAT VEND.REC = '';MAT APCK.REC = '';MAT SVEND.REC = ''
  OPTION = '';REQUEST = '';STATUS = 1
  PROG.FLAG = "MANUAL"
  ALL.ACCT = ""
  ALL.DIV = ""
  ALL.DEPT = ""
  ALL.CCTR = ""
  ALL.AMT = ""
  ALL.EQUIP = ""
  ALL.NET = ""
  ALL.DSC = ""
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
*** ENTER CHECK NUMBER
5*
  ECD.NUM = 5
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 99999
  CHK.NO = ECD.RET.VALUE
  DCR.CHECK.NO = STR('0',6-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
  MATREAD VCH.REC FROM VOUCHERS, CONO:DCR.CHECK.NO:"0V" ELSE
    MAT VCH.REC = ''
  END
  IF VCH.VEND # '' THEN
    ERRMSG = "CHECK NUMBER (":DCR.CHECK.NO:") HAS BEEN REVERSED";GOSUB 91000;GOTO 5
  END
*** ENTER G/L ACCOUNT NUMBER
7*
  ECD.NUM = 6
  SCV.REC(ECD.NUM)<1> = "";ECD.ACTION=5;CALL SCRN.EDIT
  ECD.DEFAULT = GLTB.CASH
  ECD.MAXL = IN.ACCT.LEN;ECD.MINL = IN.ACCT.LEN
  ECD.VALDAT.CODE = '2';ECD.VALDAT.FILE = COA;ECD.PREFIX.ID = CONO
  ECD.PATRN = CO.ACCT.MATCH
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1
  ACCT.NO = ECD.RET.VALUE
  DCR.DISB.ACCT = ECD.RET.VALUE
  SCV.REC(ECD.NUM)<1> = DCR.DISB.ACCT CO.ACCT.MASK;ECD.ACTION=5;CALL SCRN.EDIT
*
********************
* THE FOLLOWING SECTION ADDED BY T23278. SOME CODE IN THIS BLOCK WAS ACTUALLY 
* MOVED FROM ELSEWHERE IN THE PROGRAM SO THAT KEYS COULD BE BUILT AND RECORDS READ
* IN THE PROPER SEQUENCE TO ACCOMMODATE MULTI-DIVISION FISCAL RECORD FORMAT.
********************
*
*** READ CHECK REC
  IF CO.CHK.RECON # "N" THEN
    MATREAD APCK.REC FROM APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO ELSE
      ERRMSG = "CHECK NUMBER (":DCR.CHECK.NO:") NOT ON FILE";GOSUB 91000;GOTO 1
    END
    DIV.CODE = APCK.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = '' ; *T27646
    CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 1
    END
  END
*** GET FISCAL MONTH/PERIOD FOR OWNING DIVISION
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
    IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
      ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
      GOSUB 91000; GOTO 99999
    END
    LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
      ERRMSG = "Division ":DIV.CODE:" not found in Control File DIVISIONS Record."
      GOTO 93000
    END
  END ELSE
    POS = 1
  END
  MON = FR.CURR.PER<1,POS>[5,2]
  IF MON < 1 OR MON > NUM.PERIODS THEN
    ERRMSG = "ERROR IN CONTROL RECORD 'APVFISCAL'"; GOTO 93000
  END
*
********************
* END OF NEW SECTION FOR T23278
********************
*
*** ENTER FISCAL MONTH/PERIOD
10*
  ECD.NUM = 7;SCV.REC(ECD.NUM)<1> = MON;ECD.ACTION = 5;CALL SCRN.EDIT
*  DCR.KEY = "!":DCR.CHECK.NO:"!":ACCT.NO:"!":FR.CURR.PER;* T23278
  DCR.KEY = "!":DCR.CHECK.NO:"!":ACCT.NO:"!":FR.CURR.PER<1,POS>;* T23278
  MATREAD DCR.REC FROM DAILY.CHECK.REVERSAL, CONO:DCR.KEY ELSE
    STATUS = 0
  END
  IF CO.CHK.RECON # "N" THEN
***** T23278 v
*      MATREAD APCK.REC FROM APCHECK, CONO:DCR.DISB.ACCT:DCR.CHECK.NO ELSE
*          ERRMSG = "CHECK NUMBER (":DCR.CHECK.NO:") NOT ON FILE";GOSUB 91000;GOTO 1
*      END
***** T23278 ^
    IF APCK.CODE = "V" THEN
      ERRMSG = "CHECK NUMBER (":DCR.CHECK.NO:") HAS BEEN REVERSED";GOSUB 91000;GOTO 1
    END
    DCR.VEND = APCK.VEND
    TR.CNT = COUNT(APCK.VOUCH,VM) + (APCK.VOUCH # "")
    PAID.AMT = 0
    PAID.DSC = 0
    BLK.FLG = 0
    FOR TR = 1 TO TR.CNT UNTIL BLK.FLG
      BLK.FLG = 1
      MATREAD HDCK.REC FROM HDCH, CONO : APCK.VOUCH<1,TR> ELSE BLK.FLG = 0
      MAT HDCK.REC = ""
      IF BLK.FLG THEN GOTO 17
      MATREAD SQV.REC FROM SQV, CONO : APCK.VOUCH<1,TR> ELSE MAT SQV.REC = ""
      IF SQV.DUE.DATE = "ADVANCE" THEN MULT = (-1) ELSE MULT = 1
      PTR = 1
      LOOP
        LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1>,PTR SETTING FND ELSE FND = 0
        BEGIN CASE
          CASE FND = 0
            PTR = 0
          CASE DCR.DISB.ACCT # SQV.DISB.ACCT<1,FND>
            PTR = FND + 1
          CASE APCK.DATE # SQV.PAID.DATE<1,FND>
            PTR = FND + 1
          CASE 1
            PAID.AMT = PAID.AMT + SQV.PAID.AMT<1,FND>
            PAID.DSC = PAID.DSC + SQV.DSC.PAID<1,FND>
            PAID.GRS = SQV.PAID.AMT<1,FND> + SQV.DSC.PAID<1,FND>
            CALL AMOUNT.DIST.SUB(SQV.DIV,SQV.DIST.AMT,PAID.GRS,ALL.NET,SQV.DSC.PAID<1,FND>,TEMP.DSC,ERRMSG)
            DCNT = COUNT(SQV.DIST.AMT,VM) + (SQV.DIST.AMT # "")
            FOR D = 1 TO DCNT
              DPTR = 1
              LOOP
                LOCATE SQV.ACCT<1,D> IN ALL.ACCT<1>,DPTR SETTING DFND ELSE
                  ALL.ACCT<1,DFND> = SQV.ACCT<1,D>
                  ALL.DIV<1,DFND> = SQV.DIV<1,D>
                  ALL.DEPT<1,DFND> = SQV.DEPT<1,D>
                  ALL.CCTR<1,DFND> = SQV.CCTR<1,D>
                  ALL.EQUIP<1,DFND> = SQV.ASSET<1,D>
                  ALL.AMT<1,DFND> = ALL.NET<1,D>
                  ALL.DSC<1,DFND> = TEMP.DSC<1,D>
                  DPTR = 0
                END
                BEGIN CASE
                  CASE DPTR = 0
                  CASE ALL.DIV<1,DFND> # SQV.DIV<1,D>
                    DPTR = DFND + 1
                  CASE ALL.DEPT<1,DFND> # SQV.DEPT<1,D>
                    DPTR = DFND + 1
                  CASE ALL.CCTR<1,DFND> # SQV.CCTR<1,D>
                    DPTR = DFND + 1
                  CASE ALL.EQUIP<1,DFND> # SQV.ASSET<1,D>
                    DPTR = DFND + 1
                  CASE 1
                    ALL.AMT<1,DFND> = ALL.AMT<1,DFND> + ALL.NET<1,D>
                    ALL.DSC<1,DFND> = ALL.DSC<1,DFND> + TEMP.DSC<1,D>
                    DPTR = 0
                END CASE
              WHILE DPTR DO
              REPEAT
            NEXT D
            PTR = 0
        END CASE
      WHILE PTR DO
      REPEAT
17*
    NEXT TR
* TASK 16472 *
    IF DCR.VEND MATCHES "'0000'1A" THEN
      DCR.VEND = SQV.VEND
      VEND.DESC = DCR.VEND<1,2>
      VEND.ADDR1= DCR.VEND<1,3>
      VEND.CT.ST= DCR.VEND<1,4>
      VEND.ZIP  = DCR.VEND<1,5>
    END
*
    IF BLK.FLG THEN
      ERRMSG = "YOU MUST RUN HAND CHECK REGISTER"
      GOSUB 91000
      GOTO 1
    END
    IF PAID.AMT = APCK.AMT THEN
      PROG.FLAG = ""
      PAID.GRS = PAID.AMT + PAID.DSC
    END
  END
  IF STATUS = 1 OR PROG.FLAG = "" THEN
    IF PROG.FLAG = "" THEN
      DCR.ACCT = ALL.ACCT
      DCR.DIST.AMT = ALL.AMT
      DCR.ASSET.ID = ALL.EQUIP
      DCR.DIV = ALL.DIV
      DCR.DEPT = ALL.DEPT
      DCR.CCTR = ALL.CCTR
      DCR.DSC = ALL.DSC
      DCR.CTR = COUNT(DCR.ACCT,VM) + (DCR.ACCT # "")
      DCR.GRS.AMT = PAID.GRS
      DCR.MER.AMT = PAID.GRS
      DCR.DSC.AMT = PAID.DSC
      DCR.VOUCH = APCK.VOUCH
    END
    GOSUB 1000
  END ELSE
    FOR I = 1 TO 3 UNTIL ECD.RET.VALUE = "END"
      ON I GOSUB 20,100,400
    NEXT I
    IF ECD.RET.VALUE = "END" THEN GOTO 1
  END
*** ENTER OPTIONS
19*
  MORE = 0
  LOOP
    IF PROG.FLAG = "MANUAL" THEN
      ECD.NUM = 22
    END ELSE
      ECD.NUM = 24
    END
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
        MORE = 1
      CASE NUM(OPTION)
        ON OPTION GOSUB 20,100,200
      CASE OPTION = 'AD'
        GOSUB 50000
      CASE OPTION = 'F'
        IF DIST.BAL # "0" THEN
          ERRMSG = "CAN'T FILE WHEN DIST. BALANCE NOT EQUAL ZERO";GOSUB 91000;GOTO 19
        END
        IF PROG.FLAG = "MANUAL" THEN
          DCR.REV.FLAG = "Y"
        END ELSE
          X=0;Y=23;TYP=18;MAXL=1
*T22701 >            PMSG = "DO YOU WANT TO REVERSE VOUCHERS (Y/N)"
          PMSG = "DO YOU WANT TO DELETE VOUCHERS (Y/N)"
          CALL EDIT.SUB
          P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          IF VALUE = "END" THEN GOTO 19
          IF VALUE = 'Y' THEN
            DCR.REV.FLAG = "Y"
          END ELSE
            DCR.REV.FLAG = "N"
          END
        END
        DCR.INV = "REVERSAL"
        DCR.INV.DATE = DATE()
        DCR.PAID.AMT = (DCR.GRS.AMT - DCR.DSC.AMT)
        DCR.PAID.DATE = DATE()
        DCR.CTR = COUNT(DCR.DIST.AMT, VM) + (DCR.DIST.AMT # "")
        DCR.PRT.DATE = ""
        DCR.STATUS = ""
        IF PROG.FLAG = "MANUAL" THEN
          CALL AMOUNT.DIST.SUB(DCR.DIV,DCR.DIST.AMT,DCR.GRS.AMT,ALL.NET,DCR.DSC.AMT,ALL.DSC,ERRMSG)
          DCR.DSC = ALL.DSC
        END
        MATWRITE DCR.REC ON DAILY.CHECK.REVERSAL, CONO:DCR.KEY
        MORE = 1
      CASE OPTION = 'D'
        X=0;Y=23;TYP=18;MAXL=1
        PMSG = "YOU ARE ABOUT TO DELETE THIS CHECK REVERSAL OK (Y)ES OR (N)O"
        CALL EDIT.SUB
        P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF VALUE = 'Y' THEN
          DELETE DAILY.CHECK.REVERSAL, CONO:DCR.KEY
          MORE = 1
        END
      CASE OPTION = "N"
        ECD.SCRN.NO = 2
        SCV.REC(5)<ECD.SCRN.NO> = SCV.REC(5)<1>
        SCV.REC(6)<ECD.SCRN.NO> = SCV.REC(6)<1>
        SCV.REC(7)<ECD.SCRN.NO> = SCV.REC(7)<1>
        SCV.REC(8)<ECD.SCRN.NO> = SCV.REC(8)<1>
        SCV.REC(9)<ECD.SCRN.NO> = SCV.REC(9)<1>
        SCV.REC(10)<ECD.SCRN.NO> = SCV.REC(17)<1>
        SCV.REC(11)<ECD.SCRN.NO> = SCV.REC(18)<1>
        SCV.REC(12)<ECD.SCRN.NO> = SCV.REC(19)<1>
        ECD.ACTION = 3
        CALL SCRN.EDIT
        CALL CHECK.REVERSAL.SUB(CONO,MAT DCR.REC,CO.ACCT.MASK,APCK.DATE)
        ECD.SCRN.NO = 1
        ECD.ACTION = 3
        CALL SCRN.EDIT
        OLD.START.LINE = 0
        LN = 1
        GOSUB 1100
      CASE OPTION = "S"
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 1100
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 1100
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 1100
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 1100
      * T25978 ^
    END CASE
  WHILE MORE = 0 DO
  REPEAT
  GOTO 1
*** ENTER VEND CODE AND PRINT VEND INFORMATION
20*
  IF APCK.VEND = "" THEN
    ECD.NUM = 8
    ECD.VALDAT.CODE = 2
    ECD.VALDAT.FILE = VEND
    ECD.PREFIX.ID = CONO
    IF OPTION # "" AND COUNT(DCR.VEND,VM) + (DCR.VEND # "") > 1 THEN SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.VEND<1,1>
    ECD.ACTION=4;CALL SCRN.EDIT
    DCR.VEND<1,1> = ECD.RET.VALUE
    BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
        GOTO 29
      CASE ECD.RET.VALUE MATCH "1A"
        MAT VEND.REC = ""
      CASE ECD.RET.VALUE MATCH "'0000'1A"
        MAT VEND.REC = ''
        ECD.RET.VALUE=ECD.RET.VALUE[5,1]
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
        FOR V = 1 TO VEND.REC.SIZE
          VEND.REC(V) = ECD.VALDAT.ITEM<V>
        NEXT V
      CASE ECD.RET.VALUE = ''
        ECD.NUM = 9
        ECD.ACTION=4;CALL SCRN.EDIT
        IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 20
        GXR.XREF = VENDOR.XREF
        GXR.FILE = VEND
        GXR.LOC = 1
        GXR.TOP.LINE = 'VEND XREF SEARCH'
        GXR.HEADING<1,1> = 'VEND NO'
        GXR.ID = ''
        GXR.SRCH.ID = ECD.RET.VALUE
        CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
        ECD.ACTION=2;CALL SCRN.EDIT
        IF GXR.ID = '' THEN
          SCV.REC(9)<1> = ''
          ECD.ACTION=2;CALL SCRN.EDIT
          GOTO 20
        END ELSE
          MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
            ERRMSG = 'VENDOR NOT ON FILE'
            GOSUB 91000
            SCV.REC(9)<1> = ''
            GOTO 20
          END
          DCR.VEND<1,1> = GXR.ID
        END
    END CASE
    IF VEND.DESC = "" THEN
      GOSUB 700
      VEND.DESC = DCR.VEND<1,2>
      VEND.ADDR1 = DCR.VEND<1,3>
      VEND.CT.ST = DCR.VEND<1,4>
      VEND.ZIP = DCR.VEND<1,5>
    END
  END ELSE
    MATREAD VEND.REC FROM VEND,CONO:DCR.VEND<1,1> ELSE
      ERRMSG = "CHECK WAS WRITTEN TO VENDOR # (":DCR.VEND<1,1>:") BUT VENDOR NOT ON FILE";GOSUB 91000
      GOTO 1
    END
    IF DCR.VEND<1,2> # "" THEN
      VEND.DESC = DCR.VEND<1,2>
      VEND.ADDR1 = DCR.VEND<1,3>
      VEND.CT.ST = DCR.VEND<1,4>
      VEND.ZIP = DCR.VEND<1,5>
    END
  END
28*
  SCV.REC(8)<ECD.SCRN.NO> = DCR.VEND<1,1>
  SCV.REC(9)<ECD.SCRN.NO> = VEND.DESC
  SCV.REC(10)<ECD.SCRN.NO> = VEND.ADDR1
  SCV.REC(11)<ECD.SCRN.NO> = VEND.CT.ST[1,19]
  SCV.REC(12)<ECD.SCRN.NO> = VEND.ZIP
  IF DCR.VEND[6,1] = "-" THEN GOSUB 1200
  ECD.ACTION=3;CALL SCRN.EDIT
29*
  RETURN
*** ENTER GROSS AMT
100*
  ECD.NUM = 17
  IF CO.CHK.RECON # 'N' AND APCK.AMT * 1 # "0" THEN
    ECD.DEFAULT = APCK.AMT
  END
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE < 0 THEN GOTO 100
  IF ECD.RET.VALUE = 'END' THEN GOTO 399
  DCR.GRS.AMT = ECD.RET.VALUE
*** CALCULATED DISCOUNT AMT
200*
  ECD.NUM = 18
  IF CO.CHK.RECON # "N" AND APCK.AMT * 1 # '0' THEN
    DCR.DSC.AMT = APCK.AMT - DCR.GRS.AMT
    IF DCR.DSC.AMT < 0 THEN DCR.DSC.AMT = DCR.DSC.AMT * (-1)
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.DSC.AMT;ECD.ACTION = 5;CALL SCRN.EDIT
  END ELSE
    ECD.ACTION = 4;CALL SCRN.EDIT
    IF ECD.RET.VALUE < 0 THEN  GOTO 200
    IF ECD.RET.VALUE = 'END' THEN GOTO 399
    IF ECD.RET.VALUE > DCR.GRS.AMT THEN
      ERRMSG = "DISCOUNT AMOUNT SHOULD BE LESS THAN OR EQUAL GROSS AMOUNT";GOSUB 91000;GOTO 200
    END ELSE
      DCR.DSC.AMT = ECD.RET.VALUE
    END
  END
*** CALCULATE NET AMT
300*
  IF DCR.GRS.AMT - DCR.DSC.AMT # APCK.AMT AND CO.CHK.RECON # "N" THEN
    ERRMSG = "CHECK AMOUNT SHOULD BE $ ":OCONV(APCK.AMT, "MD2")
    GOSUB 91000;GOTO 100
  END
  ECD.NUM = 19;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.GRS.AMT - DCR.DSC.AMT;ECD.ACTION = 5;CALL SCRN.EDIT
  DIST.BAL = DCR.GRS.AMT
  ECD.NUM = 20
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.GRS.AMT
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 21
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DIST.BAL
  ECD.ACTION = 5
  CALL SCRN.EDIT
  GOSUB 600
399*
  RETURN
*** ENTER ACCOUNT DISTR
400*
  IF DCR.ACCT = "" THEN
    LOOP
      REQUEST = "A"
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 500
    WHILE LINES > OLD.LINES AND DIST.BAL # 0 DO
    REPEAT
    LN = LINES
  END ELSE
    LINES = COUNT(DCR.ACCT, VM) + (DCR.ACCT # "")
    GOSUB 600
    LN = 1
  END
  GOSUB 1100
  IF REQUEST = "A" THEN GOSUB 50000
  RETURN
*** ENTER ACCOUNT DIST.
500*
  GOSUB 1100
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*** ENTER ACCOUNT NUMBER
501*
  X=4;Y = SLN;TYP = 3;O.R = 'O';MAXL = IN.ACCT.LEN
  IF DCR.ACCT<1,LN> = "" THEN
    O.R = "R";DEFAULT = ''
  END ELSE
    DEFAULT = DCR.ACCT<1,LN>
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF DCR.DIST.AMT<1,LN> = "" THEN
      DCR.ACCT = DELETE(DCR.ACCT,1,LN,0)
      DCR.DIV = DELETE(DCR.DIV,1,LN,0)
      DCR.DEPT = DELETE(DCR.DEPT,1,LN,0)
      DCR.CCTR = DELETE(DCR.CCTR,1,LN,0)
      DCR.DIST.AMT = DELETE(DCR.DIST.AMT,1,LN,0)
      DCR.ASSET.ID = DELETE(DCR.ASSET.ID,1,LN,0)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    IF REQUEST = 'C' THEN OLD.START.LINE = 0;GOSUB 1100
    GOTO 599
  END
  MATREAD COA.REC FROM COA, CONO:VALUE ELSE
    ERRMSG = "G/L ACCOUNT (":VALUE CO.ACCT.MASK:") NOT ON FILE";GOSUB 91000;GOTO 501
  END
  DCR.ACCT<1,LN> = VALUE
  P_X  = 4 ; P_Y = SLN ; P_VALUE = DCR.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
  P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:COA.DESC "L#30"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*********************************************************************
*      GET DIVISION, DEPARTMENT AND COST CENTER AS REQUIRED
*********************************************************************
  IF COA.LEVEL = 0 THEN
    DCR.DIV<1,LN> = GEN.DIV
    DCR.DEPT<1,LN> = GEN.DEPT
    DCR.CCTR<1,LN> = GEN.CCTR
    P_X  = 20 ; P_Y = SLN ; P_VALUE = GEN.DIV"L#2" ; P_OPT = ""
    P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:GEN.DEPT"L#2"
    P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:GEN.CCTR"L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
8881*
    CALL GET.DIVISION (CONO,20,SLN,30,DIV,DCR.DIV<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DIV.REC,CONTROL,DIVISION,STAT)
    IF STAT[2,1] = "1" THEN
      SAVE.SLN = SLN
      OLD.START.LINE = 0
      GOSUB 1100
      SLN = SAVE.SLN
    END
    IF DIV = "END" THEN GOTO 501
    IF STAT[1,1] = "1" THEN GOTO 8881
    DCR.DIV<1,LN> = DIV
    P_X  = 20 ; P_Y = SLN ; P_VALUE = DIV"L#2" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF COA.LEVEL = 1 OR DIV = GEN.DIV THEN
      DCR.DEPT<1,LN> = GEN.DEPT
      DCR.CCTR<1,LN> = GEN.CCTR
      P_X  = 23 ; P_Y = SLN ; P_VALUE = GEN.DEPT"L#2" ; P_OPT = ""
      P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:GEN.CCTR"L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
8882*
      CALL GET.DEPARTMENT (CONO,23,SLN,30,DEPT,DCR.DEPT<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DIV.REC,MAT DEPT.REC,DEPARTMENT,STAT)
      IF STAT[2,1] = "1" THEN
        SAVE.SLN = SLN
        OLD.START.LINE = 0
        GOSUB 1100
        SLN = SAVE.SLN
      END
      IF DEPT = "END" THEN GOTO 501
      IF STAT[1,1] = "1" THEN GOTO 8882
      DCR.DEPT<1,LN> = DEPT
      P_X  = 23 ; P_Y = SLN ; P_VALUE = DEPT"L#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF COA.LEVEL = 2 OR DEPT = GEN.DEPT THEN
        DCR.CCTR<1,LN> = GEN.CCTR
        P_X  = 26 ; P_Y = SLN ; P_VALUE = GEN.CCTR"L#3" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
8883*
        CALL GET.COST.CENTER (CONO,26,SLN,30,CCTR,DCR.CCTR<1,LN>,BEGIN.PAGE,PAGE.SIZE,MAT DEPT.REC,MAT CCTR.REC,COST.CNTR,STAT)
        IF STAT[2,1] = "1" THEN
          SAVE.SLN = SLN
          OLD.START.LINE = 0
          GOSUB 1100
          SLN = SAVE.SLN
        END
        IF CCTR = "END" THEN GOTO 501
        IF STAT[1,1] = "1" THEN GOTO 8883
        DCR.CCTR<1,LN> = CCTR
        P_X  = 26 ; P_Y = SLN ; P_VALUE = CCTR"L#3" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
    END
  END
*********************************************************************
*** ENTER DIST AMT
502*
  IF DCR.DIST.AMT<1,LN> # 0 THEN
    ECD.NUM = 21
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DIST.BAL + DCR.DIST.AMT<1,LN>
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  X=61;Y=SLN;TYP=4;SCALER=2;MAXL=10
  IF DCR.DIST.AMT<1,LN> = '' THEN
    O.R = 'R'
  END ELSE
    O.R = 'O';DEFAULT = OCONV(DCR.DIST.AMT<1,LN>, "MD2")
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 501
  DIST.BAL = DIST.BAL + DCR.DIST.AMT<1,LN> - VALUE
  DCR.DIST.AMT<1,LN> = VALUE
*** ENTER ASSET ID
503*
  X=72;Y=SLN;TYP=1;O.R = 'O';MAXL = 8;DEFAULT = DCR.ASSET.ID<1,LN>
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 501
  IF CO.FAS = "Y" AND VALUE # "" THEN
    MATREAD EQP.REC FROM EQUIP.FILE, CONO:VALUE ELSE
      ERRMSG = "MASTER EQUIP ID (":VALUE:") NOT ON FILE";GOSUB 91000;GOTO 503
    END
    MATREAD AST.REC FROM ASSETS, CONO:VALUE ELSE
      ERRMSG = "EQUIP ID (":VALUE:") NOT ON FILE";GOSUB 91000;GOTO 503
    END
  END
  DCR.ASSET.ID<1,LN> = VALUE
  LINES = COUNT(DCR.ACCT, VM) + (DCR.ACCT # "")
  GOSUB 600
599*
  RETURN
*** GET BALANCE
600*
  DIST.BAL = DCR.GRS.AMT
  FOR AA = 1 TO LINES
    DIST.BAL = DIST.BAL - DCR.DIST.AMT<1,AA>
  NEXT AA
  ECD.NUM = 20
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.GRS.AMT
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 21
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DIST.BAL
  ECD.ACTION = 5
  CALL SCRN.EDIT
  RETURN
*
*** ENTER MISC. VENDOR
*
700*
  DCR.VEND<1,1> = "0000":ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE MATCHES "1A"
      DCR.VEND<1,1>='0000':ECD.RET.VALUE
  END CASE
  ECD.NUM = 8;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DCR.VEND<1,1>;ECD.ACTION = 5;CALL SCRN.EDIT
*** ENTER VENDOR NAME
701*
  ECD.NUM = 9
  ECD.O.R = 'R'
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    DCR.VEND<1,2> = ECD.RET.VALUE
  END ELSE
    GOTO 799
  END
*** ENTER VENDOR ADDRESS
702*
  ECD.NUM = 10
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    DCR.VEND<1,3> = ECD.RET.VALUE
  END ELSE
    GOTO 799
  END
*** ENTER CITY & STATE
703*
  ECD.NUM = 11
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    DCR.VEND<1,4> = ECD.RET.VALUE
  END ELSE
    GOTO 799
  END
*** ENTER ZIP CODE
704*
  ECD.NUM = 12
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    DCR.VEND<1,5> = ECD.RET.VALUE
  END ELSE
    GOTO 799
  END
799 RETURN
*** GET ALL VALUES FROM FILE
1000*
* TASK 16472 *
  IF DCR.VEND<1,1> MATCHES "'0000'1A" THEN NULL ELSE
    MATREAD VEND.REC FROM VEND, CONO:DCR.VEND ELSE
      MAT VEND.REC = ""
      VEND.DESC = "????????"
    END
  END
  SCV.REC(8)<ECD.SCRN.NO> = DCR.VEND<1,1>
*
  SCV.REC(9)<ECD.SCRN.NO> = VEND.DESC
  SCV.REC(10)<ECD.SCRN.NO> = VEND.ADDR1
  SCV.REC(11)<ECD.SCRN.NO> = VEND.CT.ST[1,19]
  SCV.REC(12)<ECD.SCRN.NO> = VEND.ZIP
  IF DCR.VEND[6,1] = "-" THEN GOSUB 1200
  SCV.REC(17)<ECD.SCRN.NO> = DCR.GRS.AMT
  SCV.REC(18)<ECD.SCRN.NO> = DCR.DSC.AMT
  SCV.REC(19)<ECD.SCRN.NO> = DCR.GRS.AMT - DCR.DSC.AMT
  ECD.ACTION = 3;CALL SCRN.EDIT
  GOSUB 400
  RETURN
*** SCROLL ACCOUNT DIST
1100*
  NO.LINES = COUNT(DCR.ACCT,VM) + (DCR.ACCT # "")
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 1199
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > NO.LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#3"
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.ACCT<1,N> CO.ACCT.MASK
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.DIV<1,N> "L#2"
    P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.DEPT<1,N> "L#2"
    P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.CCTR<1,N> "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    MATREAD COA.REC FROM COA, CONO:DCR.ACCT<1,N> ELSE
      MAT COA.REC = ""
      COA.DESC = "?????????????"
    END
    P_X  = 30 ; P_Y = SLN ; P_VALUE = COA.DESC "L#30" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DCR.DIST.AMT<1,N>, "MD2") "R#10"
    P_X  := AM:72 ; P_Y := AM:SLN ; P_VALUE := AM:DCR.ASSET.ID<1,N> "L#8"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
1199*
  RETURN
*** PRINT MAIN VEND IF SUB VEND WAS INPUT
1200*
  MATREAD SVEND.REC FROM VEND, CONO:DCR.VEND[1,5] ELSE
    MAT SVEND.REC = ""
    SVEND.DESC = "??????????????"
  END
  SCV.REC(13)<ECD.SCRN.NO> = DCR.VEND[1,5]
  SCV.REC(14)<ECD.SCRN.NO> = SVEND.DESC
  SCV.REC(15)<ECD.SCRN.NO> = SVEND.ADDR1
  SCV.REC(16)<ECD.SCRN.NO> = SVEND.CT.ST[1,19]:" ":SVEND.ZIP
  RETURN
*** ENTER OPTIONS FOR DETAIL LINE
50000*
  CO = 1
  LOOP
    ECD.NUM = 23
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
    ECD.ACTION=4;CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = '' OR REQUEST = 'END' OR REQUEST = 'E'
        IF DIST.BAL # '0' THEN
          ERRMSG = "PLEASE NOTE THAT YOU HAVE NOT DISTRIBUTED THE TOTAL AMOUNT";GOSUB 91000
        END
        CO = 0
      CASE REQUEST = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 500
        WHILE LINES > OLD.LINES AND DIST.BAL # 0 DO
        REPEAT
        LN = LINES
        GOSUB 1100
      CASE REQUEST = 'C'
        GOSUB 80000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 500
        END
      CASE REQUEST = 'D'
        GOSUB 80000
        IF LNO THEN
          LN = LNO
          DCR.ACCT = DELETE(DCR.ACCT,1,LN,0)
          DCR.DIV = DELETE(DCR.DIV,1,LN,0)
          DCR.DEPT = DELETE(DCR.DEPT,1,LN,0)
          DCR.CCTR = DELETE(DCR.CCTR,1,LN,0)
          DCR.DIST.AMT = DELETE(DCR.DIST.AMT,1,LN,0)
          DCR.ASSET.ID = DELETE(DCR.ASSET.ID,1,LN,0)
          LINES = COUNT(DCR.ACCT,VM) + (DCR.ACCT # "")
          GOSUB 600
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
          GOSUB 1100
        END
      CASE REQUEST = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 1100
      * T25978 v
      CASE REQUEST = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 1100
      CASE REQUEST = 'ST'
        LN = 1
        GOSUB 1100
      CASE REQUEST = 'SB'
        LN = LINES
        GOSUB 1100
      * T25978 ^
    END CASE
  WHILE CO DO
  REPEAT
  RETURN
*** ENTER LINE NUMBER
80000*
  GOSUB 1100
  ECD.NUM = 25
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  ECD.ACTION = 4
  CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = '' OR LNO = 'END' THEN LNO = 0
  RETURN
*** CALLS FOR SYSCOM
91000*
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
*    PRINT @(-1)
END
