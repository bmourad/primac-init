*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB           ; *T25824 v
*COPY>JCS.CPYLIB>COM.DAILY.OSP
*COPY>JCS.CPYLIB>COM.JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>COM.WIP.LEVEL
*COPY>PMC.CPYLIB>COM.COMPANY       ; *T25824 ^
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - VOUCHER.POST
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 06/07/84
* DESCRIPTION -
* 10/11/91 DLG TASK 16173 ADDED NEW SQV PO. ITEMS
* 12/30/91 DLG TASK 16364-PLACE PO# IN SQV FOR AP WEEK RPT FOR NONPO USE
* 01/02/92 DLG TASK 16366-WEEKLY A/P REPORTS TO INCLUDE CHECK REVERSALS
* 04/27/92 DLG TASK 16414-WRITE DAILY.OSP RECORDS, ADD RECPTS TO VSTATS
* 09/14/93 LMR TASK 17180 STDREG
* 10/21/93 JR TASK 17513
* 6/1/94 BWD TASK 17883 RECEIPT COST ADJ FROM VOUCHER POSTING
* 10/14/94 CLW Task 17919 - Acrual accounting
* 01/31/94 RKB Task 18746 - Add logic to insure that MISC po prod exist in po
* CSF 22611 GAT 3/10/95 FIXED VALIDATON AGAINST MPO 
* T19149 RKB 05/01/95  add support for ap div,dept,cctr
* 10/11/95 Bob Sherer TASK 19406 - ADD OWNING DIVISION TO VOUCHERS FILE
* C25587 GAT 04/26/96 * ALLOW FOR MISC PO ON THE FLY.
*T20924 lanny 08/29/1996 * Pass to JCS the unit-cost assoc with the OS
*                          receipt.
*T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS A VARIABLE
*T23319 alex 08/14/2000 * Fix calculation of UOM Type' "C", it is
*                         defaulting to a type "EA" for outside po's.
*T25755 cm 04/19/2001 * Modify pgm to work with new OUTSIDE.PO format.
*T25759 edwin 05/15/2001 * Added remittance comments.
*T25824 edwin 06/10/2001 * Added Vouchering for Non-Primac POs.
*T26322 cmykleb 12/04/2001 * Manual pay uses 00 (GEN.DIV) as the division
*                            number and it should use the division owner
*                            from the voucher TVO.DIV.OWNER.
*T23880 lross 10/16/2002 * Include offset acct in ALH record for OS 
*                          PO's. 
*T28678 lross 09/23/2005 * Rounding problem on OSP.
*T28786 lross 02/02/2006 * Multiple acct dist lines for Accrued Liab
*                          Acct should update file.
*T28779 lross 02/07/2006 * Retain identity of multiple same Prod/Whse
*                          lines.
*T28946 lross 07/05/2006 * Remove mod 28786 - SLPCBP only.
*********************************************************************
*
*--- INSERT FILES EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>APS.CPYLIB>TEMP.VOUCHERS
*COPY>PMC.CPYLIB>VEND
*COPY>APS.CPYLIB>OAP
*COPY>APS.CPYLIB>VOUCHERS
*COPY>APS.CPYLIB>SQV
*COPY>APS.CPYLIB>HDCH
*COPY>APS.CPYLIB>APCHECK
*COPY>PMC.CPYLIB>GLTABLE
*COPY>FAS.CPYLIB>EQUIP.FILE
*COPY>FAS.CPYLIB>REPAIRS
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>APS.CPYLIB>VEND.VOUCH.STATS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
* TASK 16173 *
*COPY>ICS.CPYLIB>INVENTORY
* 16414
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>JCS.CPYLIB>DAILY.OSP
*COPY>JCS.CPYLIB>JOB
* TASK 17513
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>MISC.PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>CATEGORY.MISC
*COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
*COPY>ICS.CPYLIB>WAREHOUSE
DIM SVEND.REC(50)
EQU SVEND.DESC TO SVEND.REC(1)
EQU SVEND.ADDR1 TO SVEND.REC(2)
EQU SVEND.CT.ST TO SVEND.REC(4)
EQU SVEND.ZIP TO SVEND.REC(5)
EQU SVEND.TERMS TO SVEND.REC(6)
EQU SVEND.PD.M.T.D TO SVEND.REC(7)
EQU SVEND.PD.Y.T.D TO SVEND.REC(8)
EQU SVEND.DATE.PD TO SVEND.REC(10)
EQU SVEND.PA.AMT TO SVEND.REC(11)
EQU SVEND.CK.NO.PD TO SVEND.REC(12)
EQU SVEND.OP.BAL   TO SVEND.REC(13)
*
*--- SETUP FOR SYSTEM ERRMSGS
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING' ; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING' ; GOTO 93000
OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE IS MISSING' ; GOTO 93000
OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = 'APCHECK FILE IS MISSING' ; GOTO 93000
OPEN '','HDCH' TO HDCH ELSE ERRMSG = 'HDCH FILE IS MISSING' ; GOTO 93000
OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE IS MISSING' ; GOTO 93000
OPEN '','VOUCHERS' TO VOUCHERS ELSE ERRMSG = 'VOUCHERS DICT FILE IS MISSING' ; GOTO 93000
OPEN '','VOUCHERS.TAG' TO VOUCHERS.TAG ELSE ERRMSG = 'VOUCHERS.TAG DICT FILE IS MISSING' ; GOTO 93000
OPEN '','TEMP.VOUCHERS' TO TEMP.VOUCHERS ELSE ERRMSG = 'TEMP.VOUCHERS FILE MISSING' ; GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING' ; GOTO 93000
OPEN '','VEND.STATS' TO VEND.STATS ELSE ERRMSG = 'VEND.STATS FILE IS MISSING' ; GOTO 93000
OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE ERRMSG = 'VEND.PO.STATS FILE MISSING' ; GOTO 93000
OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE ERRMSG = 'VEND.PROD.STATS FILE MISSING' ; GOTO 93000
OPEN '','VEND.VOUCH.STATS' TO VEND.VOUCH.STATS ELSE ERRMSG = 'VEND.VOUCH.STATS FILE MISSING' ; GOTO 93000
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING' ; GOTO 93000
* TASK 16173 *
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE MISSING' ; GOTO 93000
* 16414
*     OPEN 'ADD.TEMP.VOUCHER.INFO' TO ADD.TEMP.VOUCHER.INFO ELSE ERRMSG = 'ADD.TEMP.VOUCHER.INFO FILE IS MISSING' ; GOTO 93000
OPEN 'JOB.OSP' TO JOB.OSP ELSE ERRMSG = 'JOB.OSP FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OSP FILE MISSING' ; GOTO 93000
OPEN 'DAILY.OSP' TO DAILY.OSP ELSE ERRMSG = 'DAILY.OSP FILE MISSING' ; GOTO 93000
OPEN 'JOB' TO JOB ELSE ERRMSG = 'JOB FILE MISSING' ; GOTO 93000
* TASK 17513
OPEN 'PO' TO PO ELSE ERRMSG = 'PO FILE MISSING' ; GOTO 93000
OPEN 'MISC.PO' TO MISC.PO ELSE ERRMSG = 'MISC.PO FILE MISSING' ; GOTO 93000
OPEN 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MISSING' ; GOTO 93000
OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGORY.MISC FILE MISSING' ; GOTO 93000
OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 'ACCRUED.LIAB.HIST FILE MISSING' ; GOTO 93000
OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS MISSING" ; GOTO 93000
*T25824 v
OPEN "DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE MISSING" ; GOTO 93000
OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE MISSING" ; GOTO 93000
OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE MISSING" ; GOTO 93000
OPEN "OPERATION" TO OPERATION ELSE ERRMSG = "OPERATION FILE MISSING" ; GOTO 93000
OPEN "COST.CNTR.WIP" TO COST.CNTR.WIP ELSE ERRMSG = "COST.CNTR.WIP FILE MISSING" ; GOTO 93000
OPEN "FOH.TABLE" TO FOH.TABLE ELSE ERRMSG = "FOH.TABLE FILE MISSING" ; GOTO 93000
OPEN "PROD.STATS" TO PROD.STATS ELSE ERRMSG = "PROD.STATS FILE MISSING" ; GOTO 93000
OPEN "SPOIL.STATS" TO SPOIL.STATS ELSE ERRMSG = "SPOIL.STATS FILE MISSING" ; GOTO 93000
OPEN "JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG = "JOB.STAT.CODE FILE MISSING" ; GOTO 93000
*T25824 ^
*
*
*--- INIT
*
MAT VEND.REC = '' ; MAT VCH.REC = '' ; MAT OAP.REC = '' ; MAT SQV.REC = ''
MAT HDCK.REC = '' ; MAT APCK.REC = ''; MAT RPR.REC = '' ; MAT EQP.REC = ''
GEN.DIV = "00"; GEN.DEPT = "00"; GEN.CCTR = "000"
TODAY = DATE()
ACCRUE.OFFACCT='' ;*T23880
*T25824 v
UNPOST.CNT = ""
REJECT.LIST = ""
*T25824 ^
*
*--- MAIN PROCESS
*
READNEXT VOU.ID ELSE GOTO 99999
CONO = VOU.ID[1,3]
MATREAD GLTABLE.REC FROM CONTROL , CONO:"GLTABLE" ELSE
  ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE" ; GOTO 93000
END
VOU.NO = VOU.ID[4,99]
MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
IF CO.FAS = "Y" THEN
  OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE IS MISSING';GOTO 93000
  OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSING';GOTO 93000
END
*T25824 v
MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELSE
  MAT JOB.CUTOFF.REC = ''
  J.CUTOFF.NUM = 0
END
MATREAD WIP.LEVEL.REC FROM CONTROL,CONO:"WIP.LEVEL" ELSE
  MAT WIP.LEVEL.REC = ""
  WLR.OS.COST = 2 ; WLR.OS.WIP = 2
END
READV POSTING.MON FROM CONTROL,CONO:"APVFISCAL",1 ELSE
  ERRMSG = "CANNOT LOCATE CONTROL FISCAL RECORD"
  GOTO 93000
END
*T25824 ^
GOSUB 1000
*     IF TVO.PO.TYPE = "R" THEN
*        FOR PP = 1 TO DCOUNT(TVO.PO.PROD,VM)
*           VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
*           VPS.KEY = VSTAT.KEY:"!":TVO.PO.NOS<1,PP>
*           VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,PP>:"!":TVO.PO.WHSE<1,PP>
*           MATREADU VPDS.REC FROM VEND.PROD.STATS , VPDS.KEY ELSE MAT VPDS.REC = ""
*           FOR RR = 1 TO DCOUNT(VPDS.REC.DATE,VM)
*              IF (TVO.PO.QTY<1,PP> = VPDS.REC.QTY<1,RR>) OR (TVO.PO.QTY<1,PP> = SUM(VPDS.REC.QTY)) THEN
*                 CALL APS.RECV.COST.ADJ(CONO,TVO.PO.PROD<1,PP>,TVO.PO.WHSE<1,PP>,MAT TVO.REC,PP,VPDS.REC.DATE<1,RR>,VPDS.REC.UN.COST<1,RR>,VPDS.REC.QTY<1,RR>*10)
*              END
*           NEXT RR
*        NEXT PP
*     END
DATA = 1
LOOP
  READNEXT VOU.ID ELSE DATA = 0
  CONO = VOU.ID[1,3]
  VOU.NO = VOU.ID[4,99]
WHILE DATA DO
  GOSUB 1000
*        IF TVO.PO.TYPE = "R" THEN
*           FOR PP = 1 TO DCOUNT(TVO.PO.PROD,VM)
*              VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
*              VPS.KEY = VSTAT.KEY:"!":TVO.PO.NOS<1,PP>
*              VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,PP>:"!":TVO.PO.WHSE<1,PP>
*              MATREADU VPDS.REC FROM VEND.PROD.STATS , VPDS.KEY ELSE MAT VPDS.REC = ""
*              FOR RR = 1 TO DCOUNT(VPDS.REC.DATE,VM)
*                 IF (TVO.PO.QTY<1,PP> = VPDS.REC.QTY<1,RR>) OR (TVO.PO.QTY<1,PP> = SUM(VPDS.REC.QTY)) THEN
*                    CALL APS.RECV.COST.ADJ(CONO,TVO.PO.PROD<1,PP>,TVO.PO.WHSE<1,PP>,MAT TVO.REC,PP,VPDS.REC.DATE<1,RR>,VPDS.REC.UN.COST<1,RR>,VPDS.REC.QTY<1,RR>*10)
*                 END
*              NEXT RR
*           NEXT PP
*        END
REPEAT
GOTO 99999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- UPDATE ALL FILES
*
1000*
MATREADU TVO.REC FROM TEMP.VOUCHERS , VOU.ID ELSE
  RELEASE TEMP.VOUCHERS, VOU.ID ; GOTO 1999
END
* 16414
*     MATREADU ATVO.REC FROM ADD.TEMP.VOUCHER.INFO, VOU.ID ELSE
*        RELEASE ADD.TEMP.VOUCHER.INFO, VOU.ID; GOTO 1999
*    END
TVO.STATUS = ""
MULT = 1;DL.CTR = TVO.CTR;DUE.DATE = TVO.DUE.DATE
IF TVO.DUE.DATE = "ADVANCE" THEN
  MULT = -1 ; DUE.DATE = "PAID"
END
MATREADU VEND.REC FROM VEND , CONO:TVO.VEND<1,1> ELSE
  IF COUNT(TVO.VEND,VM) + (TVO.VEND # "") = 1 THEN
    RELEASE VEND , CONO:TVO.VEND
    TVO.STATUS = "VENDOR # (":TVO.VEND:") NOT ON FILE"
    MATWRITE TVO.REC ON TEMP.VOUCHERS , VOU.ID ; GOTO 1999
  END
  MAT VEND.REC = ""
END
IF LEN(TVO.VEND<1,1>) = 8 THEN
  MATREADU SVEND.REC FROM VEND , CONO:TVO.VEND<1,1>[1,5] ELSE
    RELEASE VEND, CONO:TVO.VEND<1,1>
    RELEASE VEND, CONO:TVO.VEND<1,1>[1,5]
    TVO.STATUS = "VENDOR # (":TVO.VEND:") NOT ON FILE"
    MATWRITE TVO.REC ON TEMP.VOUCHERS , VOU.ID ; GOTO 1999
  END
END
IF TVO.CHK.NO # "" AND TVO.DISB.ACCT # "" AND CO.CHK.RECON # "N" THEN
  MATREAD APCK.REC FROM APCHECK , CONO:TVO.DISB.ACCT:TVO.CHK.NO ELSE
    MAT APCK.REC = ""
    APCK.VEND = TVO.VEND
    APCK.DATE = TVO.PAID.DATE
    APCK.AMT = 0
    APCK.CODE = "P"
*T26322 v
*        APCK.DIV = GEN.DIV
    APCK.DIV = TVO.DIV.OWNER
*T26322 ^
    APCK.DEPT = GEN.DEPT
    APCK.CCTR = GEN.CCTR
  END
  IF APCK.VEND<1,1> # TVO.VEND<1,1> THEN
    TVO.STATUS = "CHECK # (":TVO.CHK.NO:") WAS ASSIGNED TO DIFFERENT VENDOR"
    RELEASE VEND, CONO:TVO.VEND<1,1>
    IF LEN(TVO.VEND<1,1>) = 8 THEN RELEASE VEND, CONO:TVO.VEND<1,1>[1,5]
    MATWRITE TVO.REC ON TEMP.VOUCHERS, VOU.ID ; GOTO 1999
  END
  IF APCK.CODE # "P" THEN
    TVO.STATUS = "THIS CHECK IS NOT A HAND CHECK OR IT WAS CANCELLED"
    RELEASE VEND, CONO:TVO.VEND<1,1>
    IF LEN(TVO.VEND<1,1>) = 8 THEN RELEASE VEND, CONO:TVO.VEND<1,1>[1,5]
    MATWRITE TVO.REC ON TEMP.VOUCHERS, VOU.ID ; GOTO 1999
  END
END
FOR XX = 1 TO TVO.CTR UNTIL TVO.STATUS # ""
  MATREAD VCH.REC FROM VOUCHERS , VOU.ID:XX ELSE
    MAT VCH.REC = ""
  END
  IF VCH.VEND # "" THEN
    TVO.STATUS = "VOUCHER # (":VOU.NO:") HAS BEEN CREATED"
    GOTO 1009
  END
  IF CO.FAS = "Y" THEN
    IF TVO.ASSET.ID<1,XX> # "" THEN
      MATREAD EQP.REC FROM EQUIP.FILE , CONO:TVO.ASSET.ID<1,XX> ELSE
        MAT EQP.REC = ''
        TVO.STATUS = "EQUIP ID (":TVO.ASSET.ID<1,XX>:") NOT ON FILE"
        GOTO 1009
      END
    END
  END
1009*
NEXT XX
*18746  v
IF TVO.PO.TYPE = 'M' AND TVO.STATUS = '' THEN
  * verify the product is still in the po
  NUMPRODT = DCOUNT(TVO.PO.PROD,VM)
  FOR III = 1 TO NUMPRODT WHILE TVO.STATUS=''
    TPONUM=TVO.PO.NOS<1,III>
    MATREAD MPO.REC FROM MISC.PO,CONO:TPONUM THEN
      CURRPROD=TVO.PROD.DESC<1,III>
      LOCATE CURRPROD IN MPO.PROD.DESC<1>,1 SETTING TFND ELSE
        TVO.STATUS=CURRPROD:" is no longer in Misc. PO # ":TPONUM
      END
*     C25587 v
*   END ELSE
*     TVO.STATUS=TPONUM:" is no longer a valid Misc. PO #"
*     C25587 ^
    END
  NEXT III
END
*18746  
IF TVO.STATUS # "" THEN
  RELEASE VEND, CONO:TVO.VEND<1,1>
  IF LEN(TVO.VEND<1,1>) = 8 THEN RELEASE VEND, CONO:TVO.VEND<1,1>[1,5]
  MATWRITE TVO.REC ON TEMP.VOUCHERS, VOU.ID
*        RELEASE ADD.TEMP.VOUCHER.INFO, VOU.ID
  GOTO 1999
END
*
*--- CREATE VOUCHER RECORDS
*
* TASK 17180
*     IF TVO.DUE.DATE # "PAID" AND TVO.DUE.DATE # "ADVANCE" AND TVO.DUE.DATE # "HOLD" AND TVO.PAID.AMT + 0 = 0 THEN
*    TVO.GRS.AMT = TVO.GRS.AMT - TVO.DSC.AMT + ATVO.FRT + ATVO.TAX + ATVO.MSC
TVO.GRS.AMT = TVO.GRS.AMT + TVO.FRT + TVO.TAX + TVO.MSC
*    TVO.DSC.AMT = 0
*     END
*
MAT VCH.REC = ""
VCH.VEND = TVO.VEND
VCH.INV = TVO.INV
VCH.INV.DATE = TVO.INV.DATE
VCH.DUE.DATE = DUE.DATE
*     VCH.GRS.AMT = TVO.GRS.AMT - TVO.DSC.AMT
VCH.GRS.AMT = TVO.GRS.AMT
VCH.MER.AMT = TVO.MER.AMT
VCH.DSC.AMT = TVO.DSC.AMT
*     VCH.DSC.AMT = 0
VCH.CTR = DL.CTR
VCH.MON = TVO.MON
VCH.PO = TVO.PO
FOR FV = 1 TO TVO.CTR
  VCH.ACCT = TVO.ACCT<1,FV>
  IF TVO.DUE.DATE = "ADVANCE" THEN
    VCH.DIST.AMT = 0
  END ELSE
    VCH.DIST.AMT = TVO.DIST.AMT<1,FV>
  END
  VCH.DIV = TVO.DIV<1,FV>
  VCH.DEPT = TVO.DEPT<1,FV>
  VCH.CCTR = TVO.CCTR<1,FV>
  VCH.DESC = ''
  VCH.JOB = TVO.JOB<1,FV>
  VCH.ASSET = TVO.ASSET.ID<1,FV>
* TASK 17180
  VCH.DSC = TVO.DSC.AMT<1,FV>
  VCH.FRT = TVO.FRT.AMT<1,FV>
  VCH.TAX = TVO.TAX.AMT<1,FV>
  VCH.MSC = TVO.MSC.AMT<1,FV>
*
*** TASK 19406 ***
  VCH.DIV.OWNER = TVO.DIV.OWNER
***
  MATWRITE VCH.REC ON VOUCHERS , VOU.ID:FV
  TAG = ''
  WRITE TAG ON VOUCHERS.TAG , VOU.ID:FV
NEXT FV
*  TASK 17919
AP.CNT = COUNT(TVO.AP.ACCT,VM) + (TVO.AP.ACCT # "")
VCH.CTR = AP.CNT
FOR AV = 1 TO AP.CNT
  VCH.ACCT = TVO.AP.ACCT<1,AV>
  IF TVO.DUE.DATE = "ADVANCE" THEN
    VCH.DIST.AMT = 0
  END ELSE
    VCH.DIST.AMT = TVO.AP.AMT<1,AV>
  END
*T19149 v
*  VCH.DIV = ""
*  VCH.DEPT = ""
*  VCH.CCTR = ""
  VCH.DIV = TVO.AP.DIV<1,AV>
  VCH.DEPT = TVO.AP.DEPT<1,AV>
  VCH.CCTR = TVO.AP.CCTR<1,AV>
*T19149 ^
  VCH.DESC = ""
  VCH.JOB = ""
  VCH.ASSET = ""
  SUPP = AV + TVO.CTR
  MATWRITE VCH.REC ON VOUCHERS, VOU.ID:SUPP
  TAG = ''
  WRITE TAG ON VOUCHERS.TAG, VOU.ID:SUPP
NEXT AV
*
*--- CREATE SQV RECORD
*
MAT SQV.REC = ""
SQV.VEND = TVO.VEND
SQV.INV = TVO.INV
SQV.INV.DATE = TVO.INV.DATE
SQV.DUE.DATE = TVO.DUE.DATE
SQV.GRS.AMT = TVO.GRS.AMT
**    SQV.GRS.AMT = TVO.GRS.AMT - TVO.DSC.AMT
IF TVO.DUE.DATE = "ADVANCE" THEN
  SQV.MER.AMT = TVO.MER.AMT * (-1)
  SQV.PAID.AMT<1,1> = TVO.PAID.AMT
  SQV.PAID.DATE<1,1> = TVO.PAID.DATE
  SQV.DISB.ACCT<1,1> = TVO.DISB.ACCT
  SQV.DSC.PAID<1,1> = TVO.DSC.PAID
  SQV.CHK.NO<1,1> = TVO.CHK.NO
  SQV.ASSET = ""
END ELSE
  SQV.MER.AMT = TVO.MER.AMT
  IF TVO.PAID.AMT # "" THEN
    SQV.PAID.AMT<1,1> = TVO.PAID.AMT
    SQV.PAID.DATE<1,1> = TVO.PAID.DATE
    SQV.DISB.ACCT<1,1> = TVO.DISB.ACCT
    SQV.DSC.PAID<1,1> = TVO.DSC.PAID
    SQV.CHK.NO<1,1> = TVO.CHK.NO
  END
  SQV.ASSET = TVO.ASSET.ID
END
SQV.DSC.AMT = TVO.DSC.AMT
**    SQV.DSC.AMT = 0
SQV.CTR = TVO.CTR
SQV.ACCT = TVO.ACCT
SQV.DIST.AMT = TVO.DIST.AMT
SQV.DIV = TVO.DIV
SQV.DEPT = TVO.DEPT
SQV.CCTR = TVO.CCTR
SQV.JOB = TVO.JOB
SQV.PO = TVO.PO
SQV.TERMS = TVO.TERMS
SQV.MON = TVO.MON
SQV.AP.ACCT = TVO.AP.ACCT
SQV.AP.AMT = TVO.AP.AMT
*T19149 v
SQV.AP.DIV = TVO.AP.DIV
SQV.AP.DEPT = TVO.AP.DEPT
SQV.AP.CCTR = TVO.AP.CCTR
*T19149 ^
SQV.MISC.CAT = TVO.MISC.CAT
* TASK 16173 *
LN.CNT=DCOUNT(TVO.ACCT<1>,VM)
FOR X = 1 TO LN.CNT
  IF TVO.AD.COMMENT<1,X> # "" THEN
    SQV.DESC<1,X> = TVO.AD.COMMENT<1,X>
  END ELSE
    IF TVO.PO.TYPE = "M" THEN
      SQV.DESC<1,X> = TVO.PROD.DESC<1,X>
    END ELSE
      MATREAD INV.REC FROM INVENTORY, CONO:TVO.PO.PROD<1,X> ELSE
        MAT INV.REC = ''
      END
      SQV.DESC<1,X> = INV.DESC
    END
  END
NEXT X
SQV.TAX.FLG = TVO.AD.TAX.FLG
SQV.POST.DATE = DATE()
SQV.PO.DETAIL = TVO.PO.DETAIL
SQV.PO.NOS = TVO.PO.NOS
*
* DLG 10/28/91 ADDED TO CLEAR PO.ACCT FIELD FOR MISC PO
SQV.PO.ACCT = TVO.PO.ACCT
SQV.PO.VOUCH = TVO.PO.VOUCH
* 16364
IF TVO.PO.NOS<1> = '' THEN
  IF SQV.PO.NOS = '' THEN
    SQV.PO.NOS = TVO.PO
  END
END
*
* TASK 17180
SQV.DSC = TVO.DSC.AMT
SQV.FRT = TVO.FRT.AMT
SQV.TAX = TVO.TAX.AMT
SQV.MSC = TVO.MSC.AMT
*
* TASK 19406
SQV.DIV.OWNER = TVO.DIV.OWNER
*
MATWRITE SQV.REC ON SQV , VOU.ID
*
*--- CREATE OAP RECORD
*
MAT OAP.REC = ""
IF TVO.DUE.DATE # "PAID" THEN
  IF TVO.DUE.DATE = "ADVANCE" THEN
    OAP.PAID.AMT = 0
    OAP.PAID.DATE = ""
    OAP.DISB.ACCT = ""
    OAP.ASSET.ID = ""
    OAP.CHK.NO = ""
    FOR TR = 1 TO TVO.CTR
      OAP.DIST.AMT<1,TR> = TVO.DIST.AMT<1,TR> * MULT
    NEXT TR
    OAP.DSC.PAID = 0
  END ELSE
    OAP.PAID.AMT = TVO.PAID.AMT
    OAP.PAID.DATE = TVO.PAID.DATE
    OAP.DISB.ACCT = TVO.DISB.ACCT
    OAP.ASSET.ID = TVO.ASSET.ID
    OAP.DIST.AMT = TVO.DIST.AMT
    OAP.DSC.PAID = TVO.DSC.PAID
    OAP.CHK.NO = TVO.CHK.NO
  END
  OAP.VEND = TVO.VEND
  OAP.INV = TVO.INV
  OAP.INV.DATE = TVO.INV.DATE
  OAP.DUE.DATE = TVO.DUE.DATE
  OAP.GRS.AMT = TVO.GRS.AMT * MULT
**       OAP.GRS.AMT = (TVO.GRS.AMT - TVO.DSC.AMT) * MULT
  OAP.MER.AMT = TVO.MER.AMT * MULT
  OAP.DSC.AMT = TVO.DSC.AMT * MULT
**       OAP.DSC.AMT = 0
  OAP.CTR = TVO.CTR
  OAP.ACCT = TVO.ACCT
  OAP.DIV = TVO.DIV
  OAP.DEPT = TVO.DEPT
  OAP.CCTR = TVO.CCTR
  OAP.JOB = TVO.JOB
  OAP.PO = TVO.PO
  OAP.TERMS = TVO.TERMS
  OAP.MON = TVO.MON
* TASK 17180
  OAP.DSC = TVO.DSC.AMT
  OAP.FRT = TVO.FRT.AMT
  OAP.TAX = TVO.TAX.AMT
  OAP.MSC = TVO.MSC.AMT
  OAP.REM.COMM = TVO.REM.COMM ; *T25759
* TASK 17919
  OAP.AP.ACCT = TVO.AP.ACCT
  ACNT=DCOUNT(TVO.AP.ACCT,VM)
  FOR AA=1 TO ACNT
    OAP.AP.AMT<1,AA> = TVO.AP.AMT<1,AA> * MULT
  NEXT AA
*T19149 v
  OAP.AP.DIV = TVO.AP.DIV
  OAP.AP.DEPT = TVO.AP.DEPT
  OAP.AP.CCTR = TVO.AP.CCTR
*T19149 ^  
  OAP.MISC.CAT = TVO.MISC.CAT
*
* TASK 19406
  OAP.DIV.OWNER = TVO.DIV.OWNER
*
  MATWRITE OAP.REC ON OAP , VOU.ID
END
*
*--- CREATE HDCH RECORD
*
IF TVO.DUE.DATE = "PAID" OR TVO.DUE.DATE = "ADVANCE" OR TVO.PAID.AMT # "" THEN
  HDCK.VEND = TVO.VEND
  HDCK.INV = TVO.INV
  HDCK.INV.DATE = TVO.INV.DATE
  HDCK.DUE.DATE = DUE.DATE
  HDCK.MER.AMT = TVO.MER.AMT
  IF TVO.DUE.DATE = "PAID" OR TVO.DUE.DATE = "ADVANCE" THEN
* TASK 17180
    HDCK.GRS.AMT = TVO.GRS.AMT
**          HDCK.GRS.AMT = TVO.GRS.AMT - TVO.DSC.AMT
    HDCK.DSC.AMT = TVO.DSC.AMT
**          HDCH.DSC.AMT = 0
  END ELSE
    HDCK.GRS.AMT = TVO.PAID.AMT + TVO.DSC.PAID
    HDCK.DSC.AMT = TVO.DSC.PAID
  END
  HDCK.CTR = DL.CTR
  HDCK.ACCT = TVO.ACCT
  HDCK.DIST.AMT = TVO.DIST.AMT
  HDCK.DIV = TVO.DIV
  HDCK.DEPT = TVO.DEPT
  HDCK.CCTR = TVO.CCTR
  HDCK.PAID.AMT = TVO.PAID.AMT
  HDCK.PAID.DATE = TVO.PAID.DATE
  HDCK.JOB = TVO.JOB
  HDCK.PO = TVO.PO
  HDCK.DISB.ACCT = TVO.DISB.ACCT
  HDCK.NUM = TVO.CHK.NO
  HDCK.MON = TVO.MON
  HDCK.DATE = TVO.PAID.DATE
  HDCK.TERMS = TVO.TERMS
  HDCK.DSC.PAID = TVO.DSC.PAID
* TASK 17919
  HDCK.AP.ACCT = TVO.AP.ACCT
  HDCK.AP.AMT = TVO.AP.AMT
*T19149 v
  HDCK.AP.DIV  = TVO.AP.DIV
  HDCK.AP.DEPT = TVO.AP.DEPT
  HDCK.AP.CCTR = TVO.AP.CCTR
*T19149 ^  
  MATWRITE HDCK.REC ON HDCH , VOU.ID
END
*
*--- CREATE APCHECK RECORD
*
IF TVO.CHK.NO # "" AND TVO.DISB.ACCT # "" AND CO.CHK.RECON # "N" THEN
  APCK.AMT = APCK.AMT + TVO.PAID.AMT
  LOCATE VOU.ID[4,6] IN APCK.VOUCH<1>,1 SETTING VPTR ELSE
    APCK.VOUCH<1,VPTR> = VOU.ID[4,6]
  END
  MATWRITE APCK.REC ON APCHECK , CONO:TVO.DISB.ACCT:TVO.CHK.NO
END
*
*--- UPDATE VEND RECORD
*
IF TVO.DUE.DATE # "PAID" AND TVO.DUE.DATE # "ADVANCE" THEN
  IF LEN(TVO.VEND<1,1>) = 8 THEN
    SVEND.OP.BAL = SVEND.OP.BAL + TVO.GRS.AMT
  END ELSE
    VEND.OP.BAL = VEND.OP.BAL + TVO.GRS.AMT
  END
  IF TVO.PAID.AMT # "" THEN
    IF LEN(TVO.VEND<1,1>) = 8 THEN
      SVEND.PD.M.T.D = SVEND.PD.M.T.D + TVO.PAID.AMT
      SVEND.PD.Y.T.D = SVEND.PD.Y.T.D + TVO.PAID.AMT
      SVEND.DATE.PD = TVO.PAID.DATE
*TASK16367
      IF SVEND.CK.NO.PD = TVO.CHK.NO THEN
        SVEND.PA.AMT = SVEND.PA.AMT + TVO.PAID.AMT
        SVEND.CK.NO.PD = TVO.CHK.NO
      END ELSE
        SVEND.PA.AMT = TVO.PAID.AMT
        SVEND.CK.NO.PD = TVO.CHK.NO
      END
    END ELSE
      VEND.PD.M.T.D = VEND.PD.M.T.D + TVO.PAID.AMT
      VEND.PD.Y.T.D = VEND.PD.Y.T.D + TVO.PAID.AMT
      VEND.DATE.PD = TVO.PAID.DATE
*TASK16367
      IF VEND.CK.NO.PD = TVO.CHK.NO THEN
        VEND.PA.AMT = SVEND.PA.AMT + TVO.PAID.AMT
        VEND.CK.NO.PD = TVO.CHK.NO
      END ELSE
        VEND.PA.AMT = TVO.PAID.AMT
        VEND.CK.NO.PD = TVO.CHK.NO
      END
    END
  END
END ELSE
  IF TVO.DUE.DATE = "ADVANCE" THEN
    IF LEN(TVO.VEND<1,1>) = 8 THEN
      SVEND.OP.BAL = SVEND.OP.BAL - TVO.GRS.AMT
    END ELSE
      VEND.OP.BAL = VEND.OP.BAL - TVO.GRS.AMT
    END
  END
  IF LEN(TVO.VEND<1,1>) = 8 THEN
    SVEND.PD.M.T.D = SVEND.PD.M.T.D + (TVO.GRS.AMT - TVO.DSC.AMT)
    SVEND.PD.Y.T.D = SVEND.PD.Y.T.D + (TVO.GRS.AMT - TVO.DSC.AMT)
    SVEND.DATE.PD = TVO.PAID.DATE
*TASK16367
    IF SVEND.CK.NO.PD = TVO.CHK.NO THEN
      SVEND.PA.AMT = SVEND.PA.AMT + TVO.GRS.AMT - TVO.DSC.AMT
      SVEND.CK.NO.PD = TVO.CHK.NO
    END ELSE
      SVEND.PA.AMT = TVO.GRS.AMT - TVO.DSC.AMT
      SVEND.CK.NO.PD = TVO.CHK.NO
    END
  END ELSE
    VEND.PD.M.T.D = VEND.PD.M.T.D + (TVO.GRS.AMT - TVO.DSC.AMT)
    VEND.PD.Y.T.D = VEND.PD.Y.T.D + (TVO.GRS.AMT - TVO.DSC.AMT)
    VEND.DATE.PD = TVO.PAID.DATE
*TASK16367
    IF VEND.CK.NO.PD = TVO.CHK.NO THEN
      VEND.PA.AMT = VEND.PA.AMT + TVO.GRS.AMT - TVO.DSC.AMT
      VEND.CK.NO.PD = TVO.CHK.NO
    END ELSE
      VEND.PA.AMT = TVO.GRS.AMT - TVO.DSC.AMT
      VEND.CK.NO.PD = TVO.CHK.NO
    END
  END
END
IF LEN(TVO.VEND<1,1>) = 8 THEN
  MATWRITE SVEND.REC ON VEND , CONO:TVO.VEND<1,1>[1,5]
  RELEASE VEND, CONO:TVO.VEND<1,1>
END ELSE
  MATWRITE VEND.REC ON VEND , CONO:TVO.VEND<1,1>
  RELEASE VEND, CONO:TVO.VEND<1,1>[1,5]
END
IF CO.FAS = "Y"  AND TVO.ASSET.ID # "" THEN
  FOR AG = 1 TO TVO.CTR
    IF TVO.ASSET.ID<1,AG> # "" THEN
      READV REP.NO FROM CONTROL , CONO:"REPAIR-NO",1 ELSE REP.NO = 0
      REP.NO = REP.NO + 1
      WRITEV REP.NO ON CONTROL , CONO:"REPAIR-NO",1
      RPR.CHARGE = TVO.DIST.AMT<1,AG>
      RPR.DATE = TVO.INV.DATE
      RPR.COMMENT = "VENDOR - ":TVO.VEND<1,1>:",  ":"VOUCHER - ":VOU.NO
      RPR.JOB = TVO.JOB<1,AG>
      RPR.JOB.AMT = TVO.DIST.AMT<1,AG>
      RPR.CATEGORY = "CT"
      RPR.SOURCE = "AP"
      MATWRITE RPR.REC ON REPAIRS , CONO:TVO.ASSET.ID<1,AG>:STR("0",3-LEN(REP.NO)):REP.NO
      MATREAD EQP.REC FROM EQUIP.FILE , CONO:TVO.ASSET.ID<1,AG> ELSE
        MAT EQP.REC = ''
      END
      EQP.REPAIR = EQP.REPAIR +TVO.DIST.AMT<1,AG>
      EQP.YTD.REPAIR = EQP.YTD.REPAIR + TVO.DIST.AMT<1,AG>
      EQP.CUM.REPAIR = EQP.CUM.REPAIR + TVO.DIST.AMT<1,AG>
      MATWRITE EQP.REC ON EQUIP.FILE , CONO:TVO.ASSET.ID<1,AG>
    END
  NEXT AG
END
BEGIN CASE
  CASE TVO.PO.NOS = ""
  CASE TVO.PO.TYPE = "R" AND CO.APS.R.INTRF < 1
  CASE TVO.PO.TYPE = "O" AND CO.APS.O.INTRF < 1
  CASE TVO.PO.TYPE = "M" AND CO.APS.M.INTRF < 1
  CASE 1
    NOS.CNT = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
    VVOS.KEY = CONO:TVO.VEND<1,1>:"!":VOU.ID[4,99]
    MAT VVOS.REC = ""
    VVOS.VOU.DATE = TODAY
    VVOS.INV.NO = TVO.INV
    VVOS.INV.DATE = TVO.INV.DATE
    VVOS.TOT.COST = TVO.GRS.AMT
    VVOS.VOU.PERIOD = TVO.MON
    VVOS.PO.NO = TVO.PO.NOS
    VVOS.PROD = TVO.PO.PROD
    VVOS.PROD.DESC = TVO.PROD.DESC
    VVOS.U.M = TVO.PO.UM
    VVOS.WHSE = TVO.PO.WHSE
*T25755 v
*T28779 IF TVO.PO.TYPE = "O" THEN
    IF TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R' THEN
      VVOS.PO.SEQ = TVO.PO.SEQ
    END
*T25755 ^
    VVOS.VOU.QTY = TVO.PO.QTY
* 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTSIDE
    VVOS.VOU.UN.COST = TVO.PO.U.COST
    VVOS.PROD.COST = TVO.PO.VOUCH
    VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
    MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.REC = ""
    PCNT = COUNT(VSTAT.PO,VM) + (VSTAT.PO # "")
    IF PCNT > 500 THEN
      FOR PP = (PCNT - 500) TO 1 STEP - 1
        IF VSTAT.PO.VOUCH<1,PP> >= VSTAT.PO.ORDERD<1,PP> AND VSTAT.PO.VOUCH<1,PP> >= VSTAT.PO.RECV<1,PP> THEN
          VSTAT.PO = DELETE(VSTAT.PO,1,PP,0)
          VSTAT.PO.ORDERD = DELETE(VSTAT.PO.ORDERD,1,PP,0)
          VSTAT.PO.RECV = DELETE(VSTAT.PO.RECV,1,PP,0)
          VSTAT.PO.VOUCH = DELETE(VSTAT.PO.VOUCH,1,PP,0)
          VSTAT.VOUCH.NOS = DELETE(VSTAT.VOUCH.NOS,1,PP,0)
        END
      NEXT PP
    END
    FOR UA = 1 TO NOS.CNT
      VVOS.PO.TYPE<1,UA> = TVO.PO.TYPE
      LOCATE TVO.PO.NOS<1,UA> IN VSTAT.PO<1>,1 SETTING POFND ELSE
        VSTAT.PO<1,POFND> = TVO.PO.NOS<1,UA>
      END
* TASK 17513
      IF TVO.PO.TYPE = 'R' THEN      ;* ADDED 11/26/96 LMR
        FND = 1
        MATREADU PO.REC FROM PO, CONO:TVO.PO.NOS<1,UA> ELSE
          RELEASE PO, CONO:TVO.PO.NOS<1,UA>
          FND = 0
        END
        IF FND THEN
          DONE = 0
          PLN = 1
          LOOP
          UNTIL DONE DO
            LOCATE TVO.PO.PROD<1,UA> IN PO.PROD.NUM<1>,PLN SETTING PTR THEN
              IF TVO.PO.WHSE<1,UA> = PO.WHSE<1,PTR> AND TVO.PO.U.COST<1,UA> = PO.GROS.PRICE<1,PTR> THEN
                PO.COA.DIV<1,PTR> = TVO.DIV<1,UA>
                PO.COA.DEPT<1,PTR> = TVO.DEPT<1,UA>
                PO.COA.CCTR<1,PTR> = TVO.CCTR<1,UA>
                PLN = PTR + 1
              END ELSE
                PLN = PTR + 1
              END
            END ELSE
              DONE = 1
            END
          REPEAT
          MATWRITE PO.REC ON PO, CONO:TVO.PO.NOS<1,UA>
        END
      END
* TASK 17513 END
      VSTAT.PO.VOUCH<1,POFND> = VSTAT.PO.VOUCH<1,POFND> + TVO.PO.VOUCH<1,UA>
* 16414 - HAVE NO $ FOR RECEIPT,ONLY VOUCHERED QTY/$, AND REC QTY.
* (LMR) ONLY FOR TVO.PO.TYPE = "O"
* DLG 05/01/92 - WE WILL ADD ALL VOUCHER $ FOR RECEIPTS TO RECEIPT AMOUNT
      IF TVO.NEW.RECEIPT<1,UA>='Y' AND TVO.PO.TYPE = "O" THEN
*CSF 24232 v
*     VSTAT.PO.RECV<1,POFND>=VSTAT.PO.RECV<1,POFND>+TVO.PO.VOUCH<1,UA>
        VSTAT.PO.RECV<1,POFND>=VSTAT.PO.RECV<1,POFND>+TVO.JOB.AMT<1,UA>
*CSF 24232 ^
      END
      LOCATE VOU.ID[4,99] IN VSTAT.VOUCH.NOS<1,POFND>,1 SETTING VOFND ELSE NULL
      VSTAT.VOUCH.NOS<1,POFND,VOFND> = VOU.ID[4,99]
      VPS.KEY = VSTAT.KEY:"!":TVO.PO.NOS<1,UA>
      MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC = ""
      PTR = 1
      LOOP
        BEGIN CASE
          CASE TVO.PO.TYPE = "M"
            IF TVO.SEQ.NO<1,UA> # "" THEN
              LOCATE TVO.SEQ.NO<1,UA> IN VPS.SEQ.NO<1>,PTR SETTING PRFND ELSE
                VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA>
                VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA>
                VPS.U.M<1,PRFND> = TVO.PO.UM<1,UA>
                VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>
                VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA>
              END
            END ELSE
              LOCATE TVO.PROD.DESC<1,UA> IN VPS.PROD.DESC<1>,PTR SETTING PRFND ELSE
                VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA>
                VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA>
                VPS.U.M<1,PRFND> = TVO.PO.UM<1,UA>
                VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>
                VPS.SEQ.NO<1,PRFND> = VOU.ID[4,99]:UA
                TVO.SEQ.NO<1,UA> = VOU.ID[4,99]:UA
              END
            END
          CASE 1
            LOCATE TVO.PO.PROD<1,UA> IN VPS.PROD<1>,PTR SETTING PRFND ELSE
              VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA>
              VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA>
              VPS.U.M<1,PRFND> = TVO.PO.UM<1,UA>
*T25755 v
*                       VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>
*T28779       IF TVO.PO.TYPE = 'O' THEN
              IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN
                VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>
              END ELSE
                VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>
              END
*T25755 ^
              VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA>
            END
        END CASE
*T25755 v
*              IF TVO.PO.WHSE<1,UA> = VPS.WHSE<1,PRFND> AND VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA> AND VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA> THEN
        BUMP.PTR=1
*T28779 IF TVO.PO.TYPE = "O" THEN
        IF TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R' THEN
          IF TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA> = VPS.WHSE<1,PRFND> AND VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA> AND VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA> THEN
            BUMP.PTR=0
          END
        END ELSE
          IF TVO.PO.WHSE<1,UA> = VPS.WHSE<1,PRFND> AND VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA> AND VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA> THEN
            BUMP.PTR=0
          END
        END
        IF NOT(BUMP.PTR) THEN
*T25755 ^
          PTR = 0
        END ELSE
          PTR = PRFND + 1
        END
      WHILE PTR DO
      REPEAT
      VPS.VOU.QTY<1,PRFND> = VPS.VOU.QTY<1,PRFND> + TVO.PO.QTY<1,UA>
      VPS.VOU.AMT<1,PRFND> = VPS.VOU.AMT<1,PRFND> + TVO.PO.VOUCH<1,UA>
* 16414 *
* DLG 05/01/92 - WE WILL ADD ALL VOUCHER $ FOR RECEIPTS TO RECEIPT AMOUNT
* (BUT NOT THE QUANTITY - IT WAS ALREADY POSTED IN JCS FOR PREV RECEIPTS)
      IF TVO.PO.TYPE = "O" THEN
*CLS 2/95 - REC AMT SHOULD BE CALC INSTEAD OF ASSUMING VOUCHER AMT
        IF TVO.NEW.RECEIPT<1,UA>='Y' THEN
          VPS.REC.QTY<1,PRFND>=VPS.REC.QTY<1,PRFND> + TVO.REC.QTY<1,UA>
*        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.VOUCH<1,UA>
*      END ELSE
*        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.VOUCH<1,UA>
        END
        IF TVO.PO.TYPE = "O" THEN
            *T23319 v
          BEGIN CASE
            CASE TVO.PO.UM<1,UA> = "M"
              ADJVAL = 10000000
            CASE TVO.PO.UM<1,UA> = "C"
              ADJVAL = 1000000
            CASE 1
              ADJVAL = 10000
          END CASE
            * IF TVO.PO.UM<1,UA> = "M" THEN
            *   ADJVAL = 10000000
            * END ELSE
            *   ADJVAL = 10000
            * END
            *T23319 ^
        END ELSE ADJVAL = 10000
*     REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA>/10000))*100
        REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA>/ADJVAL))*100
        VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + REC.AMT
      END
      LOCATE VOU.ID[4,99] IN VPS.VOU.NO<1,PRFND>,1 SETTING VVFND ELSE
        VPS.VOU.NO<1,PRFND,VVFND> = VOU.ID[4,99]
      END
*T25755 v
*           IF TVO.PO.TYPE = "M" THEN
*              VPDS.KEY = VPS.KEY:"!":TVO.SEQ.NO<1,UA>:"!":TVO.PO.WHSE<1,UA>
*           END ELSE
*              VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,UA>
*           END
      BEGIN CASE
        CASE TVO.PO.TYPE = "M"
          VPDS.KEY = VPS.KEY:"!":TVO.SEQ.NO<1,UA>:"!":TVO.PO.WHSE<1,UA>
*T28779 CASE TVO.PO.TYPE = "O"
        CASE TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R'
          VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>
        CASE 1
          VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,UA>
      END CASE
*T25755 ^
      MATREADU VPDS.REC FROM VEND.PROD.STATS , VPDS.KEY ELSE MAT VPDS.REC = ""
*CSF 24232 v MOVE FOLLOWING LINES TO BEFORE VOU DATA BELOW.
* 16414 - DO NOT LOCATE VOUCHER,GET FROM TVO'S VPDS VALUE POINTER
*   VPFND = TVO.PO.REC.COUNT<1,UA>
*   IF NOT(NUM(VPFND)) OR TVO.NEW.RECEIPT<1,UA>='Y' THEN VPFND = COUNT(VPDS.VOU.NO<1>,VM) + (VPDS.VOU.NO<1,1> NE "") + 1
*   VOU.LOC = COUNT(VPDS.VOU.NO<1,VPFND>,SVM) + (VPDS.VOU.NO<1,VPFND> # "") + 1
*16414 - VPDS VOU DATA IS SUBVALUED BY PO RECEIPT
*16414,A6
*CSF 24232 ^
      IF TVO.NEW.RECEIPT<1,UA>='Y' THEN
*CSF 24232 v
        VPFND = DCOUNT(VPDS.REC.DATE,VM) + 1
*CSF 24232 ^
        VPDS.REC.DATE<1,VPFND>=TVO.REC.DATE<1,UA>
        VPDS.REC.QTY<1,VPFND>=TVO.REC.QTY<1,UA>
*CLS SHOW UNIT COST ON RECIEPTS 2/95
*      VPDS.REC.UN.COST<1,VPFND>=0
        VPDS.REC.UN.COST<1,VPFND>=TVO.PO.U.COST<1,UA>
      END
* 16414 - DO NOT LOCATE VOUCHER,GET FROM TVO'S VPDS VALUE POINTER
      VPFND = TVO.PO.REC.COUNT<1,UA>
      IF NOT(NUM(VPFND)) OR TVO.NEW.RECEIPT<1,UA>='Y' THEN VPFND = COUNT(VPDS.VOU.NO<1>,VM) + (VPDS.VOU.NO<1,1> NE "") + 1
      VOU.LOC = COUNT(VPDS.VOU.NO<1,VPFND>,SVM) + (VPDS.VOU.NO<1,VPFND> # "") + 1
* 16414 - VPDS VOU DATA IS SUBVALUED BY PO RECEIPT
* 16414,A6
      VPDS.VOU.NO<1,VPFND,VOU.LOC> = VOU.ID[4,99]
      VPDS.VOU.DATE<1,VPFND,VOU.LOC> = TODAY
      VPDS.INV.NO<1,VPFND,VOU.LOC> = TVO.INV
      VPDS.INV.DATE<1,VPFND,VOU.LOC> = TVO.INV.DATE
* 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTSIDE
      VPDS.UN.COST<1,VPFND,VOU.LOC> = TVO.PO.U.COST<1,UA>
      VPDS.PERIOD<1,VPFND,VOU.LOC> = TVO.MON
      VPDS.ENT.FLG<1,VPFND,VOU.LOC> = TVO.ENT.FLG<1,UA>
      VPDS.QTY<1,VPFND,VOU.LOC> = VPDS.QTY<1,VPFND,VOU.LOC> + TVO.PO.QTY<1,UA>
*T25824 v
      IF TVO.PO.TYPE = 'N' THEN GOSUB 2000
*T25824 ^
      MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
      MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
*
* CREATE DAILY.OSP RECORDS
*
      JOB.CNT = DCOUNT(TVO.JOB<1,UA>,SVM)
      FOR J = 1 TO JOB.CNT
        MAT DOS.REC = ""
        DOS.JOB = TVO.JOB<1,UA,J>
        MATREAD JOB.REC FROM JOB, CONO : DOS.JOB ELSE
          MAT JOB.REC = ''
        END
        DOS.TYPE = JOB.TYPE
        DOS.DIV = TVO.PO.DIV<1,UA>
        DOS.DEPT = TVO.PO.DEPT<1,UA>
        DOS.CCTR = TVO.PO.CCTR<1,UA>
        DOS.OPER = TVO.PO.OPER<1,UA>
        DOS.VEND = TVO.VEND<1>
        DOS.PO = TVO.PO.NOS<1,UA>
        DOS.INV = TVO.INV
        DOS.INV.DATE = TVO.INV.DATE
        DOS.DUE.DATE = TVO.DUE.DATE
        DOS.DATE = TODAY
        DOS.QTY = TVO.REC.QTY<1,UA>
        DOS.GRS.AMT = TVO.JOB.AMT<1,UA,J>
*T20924 v
        DOS.UOM = TVO.PO.UM<1,UA>
        IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678
        IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN
            *T23319 v
          BEGIN CASE
            CASE DOS.UOM = 'M'
*T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
              DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + ROND)
            CASE DOS.UOM = 'C'
*T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + .5)
              DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + ROND)
            CASE 1
*T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
              DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + ROND)
          END CASE
            * IF DOS.UOM = 'M' THEN
            *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
            * END ELSE
            *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
            * END
            *T23319 ^
        END
*T20924 ^
        DOS.MER.AMT = TVO.JOB.AMT<1,UA,J>
        DOS.DSC.AMT = 0
        DOS.DESC = ''
        DOS.PRD.LINE = TVO.PO.PRD.LINE<1,UA>
        DOS.INIT = ''
        DOS.SALE.AMT = 0
        MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.PRD.LINE<1,UA> ELSE
          MAT CAOS.REC = ''
        END
        IF NUM(CAOS.FOH.PCT) THEN
*T28678   DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + .5)
          DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + ROND)
*T28678   DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + .5)
          DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + ROND)
        END
* BELOW FLAG INDICATES TO OSP.MAINT THAT THIS RECORD CREATED BY VOUCHER
        DOS.ORIGIN = 1
* GET NEW KEY FOR DAILY.OSP
        READU OSP.ENT.SEQ FROM CONTROL , CONO:"DAILY.OSP" ELSE OSP.ENT.SEQ=10001
        LOOP
          READ CK.FLG FROM JOB.OSP , CONO:OSP.ENT.SEQ ELSE CK.FLG=""
        WHILE CK.FLG # "" DO
          OSP.ENT.SEQ=OSP.ENT.SEQ + 1
        REPEAT
        DOS.SEQ.NO=OSP.ENT.SEQ
        OSP.ENT.SEQ=OSP.ENT.SEQ + 1
        WRITE OSP.ENT.SEQ ON CONTROL , CONO:"DAILY.OSP"
        MATWRITE DOS.REC ON DAILY.OSP, CONO:DOS.SEQ.NO
      NEXT J
* Task 17919
* Update Accrued Liability History
      ACC.WORK.DIV=GEN.DIV ; ACC.WORK.DEPT=GEN.DEPT ; ACC.WORK.CCTR=GEN.CCTR
      BEGIN CASE
        CASE TVO.PO.TYPE = "R"
          MATREAD PO.REC FROM PO, CONO:TVO.PO.NOS<1,UA> ELSE MAT PO.REC=""
          MATREAD INV.REC FROM INVENTORY, CONO:TVO.PO.PROD<1,UA> ELSE MAT INV.REC=""
          MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
          MATREAD WHSE.REC FROM WAREHOUSE,CONO:TVO.PO.WHSE<1,UA> ELSE MAT WHSE.REC=''
          ACC.WORK.DIV = WHS.DIV
          ACC.WORK.DEPT = GEN.DEPT
          ACC.WORK.CCTR = GEN.CCTR
          ACCRUE.FLAG = PO.ACCRUE
          ACCRUE.REF = "R*":TVO.PO.NOS<1,UA>:"*":TVO.PO.PROD<1,UA>
          ACCRUE.SRC = "IV"
          ACCRUE.ACCT = CATG.ACCRU.LIAB
        CASE TVO.PO.TYPE = "M"
          MATREAD MPO.REC FROM MISC.PO, CONO:TVO.PO.NOS<1,UA> ELSE MAT MPO.REC=""
          LOCATE TVO.SEQ.NO<1,UA> IN MPO.SEQ.NO<1>,1 SETTING POFND ELSE POFND = 0
          MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,POFND> ELSE MAT CAMISC.REC=""
          ACC.WORK.DIV = MPO.MISC.DIV<1,POFND>
          ACC.WORK.DEPT = MPO.MISC.DEPT<1,POFND>
          ACC.WORK.CCTR = MPO.MISC.CCTR<1,POFND>
          ACCRUE.FLAG = MPO.ACCRUE
          ACCRUE.REF = "M*":TVO.PO.NOS<1,UA>:"*":TVO.PO.PROD<1,UA>
          ACCRUE.SRC = "MV"
          ACCRUE.ACCT = CAMISC.CRED.EXP
        CASE 1
          MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,UA> ELSE MAT OPO.REC=""
          POPTR = 1
          LOOP
            LOCATE TVO.PO.PROD<1,UA> IN OPO.JOB.NO<1>,POPTR SETTING POFND THEN
*T25755 v
*                       IF TVO.PO.WHSE<1,UA> = OPO.PROD.LINE<1,POFND> THEN POPTR = 0
              IF TVO.PO.SEQ<1,UA> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
*T25755 ^
            END ELSE
              POPTR = 0; POFND = 0
            END
          WHILE POPTR DO
            POPTR = POFND + 1
          REPEAT
          MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POFND> ELSE MAT CAOS.REC=""
          ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>
          ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>
          ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>
          ACCRUE.FLAG = OPO.ACCRUE
          ACCRUE.REF = "O*":TVO.PO.NOS<1,UA>:"*":TVO.PO.PROD<1,UA>
          ACCRUE.SRC = "OV"
          ACCRUE.ACCT = CAOS.ACCRU.LIAB
          ACCRUE.OFFACCT = CAOS.WIP ;*T23880      
      END CASE
      IF ACCRUE.FLAG = "Y" THEN
        READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0
        ALH.CT = ALH.CT + 1
        IF ALH.CT > 999999 THEN ALH.CT = 1
        WRITE ALH.CT ON CONTROL,CONO:"ALHCOUNTER"
        MAT ALH.REC = ""
        ALH.ID = CONO:STR("0",6-LEN(ALH.CT)):ALH.CT
        ALH.DATE = TODAY
        ALH.REF = ACCRUE.REF
        ALH.SRC = ACCRUE.SRC
        ALH.MON = TVO.MON
*T28946 v Remove mod below.
*T28786 v
        ALH.AMT = TVO.PO.VOUCH<1,UA>
*       FOR AC = 1 TO TVO.CTR
*         IF TVO.ACCT<1,AC> = ACCRUE.ACCT THEN
*           ALH.AMT += TVO.DIST.AMT<1,AC>
*         END
*       NEXT AC
*T28786 ^
*T28946 ^
        ALH.ACCT = ACCRUE.ACCT
        ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK.CCTR"R%3"
        ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880     
        MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID
      END
    NEXT UA
    PCNT = COUNT(VSTAT.PO,VM) + (VSTAT.PO # "")
    IF PCNT > 500 THEN
      FOR PP = (PCNT - 500) TO 1 STEP - 1
        IF VSTAT.PO.VOUCH<1,PP> >= VSTAT.PO.ORDERD<1,PP> AND VSTAT.PO.VOUCH<1,PP> >= VSTAT.PO.RECV<1,PP> THEN
          VSTAT.PO = DELETE(VSTAT.PO,1,PP,0)
          VSTAT.PO.ORDERD = DELETE(VSTAT.PO.ORDERD,1,PP,0)
          VSTAT.PO.RECV = DELETE(VSTAT.PO.RECV,1,PP,0)
          VSTAT.PO.VOUCH = DELETE(VSTAT.PO.VOUCH,1,PP,0)
          VSTAT.VOUCH.NOS = DELETE(VSTAT.VOUCH.NOS,1,PP,0)
        END
      NEXT PP
    END
    VVOS.SEQ.NO = TVO.SEQ.NO
    VVOS.MISC.CATG = TVO.MISC.CAT
    MATWRITE VVOS.REC ON VEND.VOUCH.STATS, VVOS.KEY
    MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
END CASE
DELETE TEMP.VOUCHERS , VOU.ID
* 16414
*     DELETE ADD.TEMP.VOUCHER.INFO, VOU.ID
1999 
RETURN
*T25824 v
**********************************
2000 * Udpate job for Outside PO *
**********************************
*
* CREATE DAILY.OSP RECORDS
*
* BELOW FLAG INDICATES TO OSP.MAINT THAT THIS RECORD CREATED BY VOUCHER
* DOS.ORIGIN = 1
* GET NEW KEY FOR DAILY.OSP
READU OSP.ENT.SEQ FROM CONTROL , CONO:"DAILY.OSP" ELSE OSP.ENT.SEQ=10001
LOOP
  READ CK.FLG FROM DAILY.OSP , CONO:OSP.ENT.SEQ ELSE CK.FLG=""
WHILE CK.FLG # "" DO
  OSP.ENT.SEQ=OSP.ENT.SEQ + 1
REPEAT
DOS.SEQ.NO=OSP.ENT.SEQ
OSP.ENT.SEQ=OSP.ENT.SEQ + 1
WRITE OSP.ENT.SEQ ON CONTROL , CONO:"DAILY.OSP"
MAT DOS.REC = ""
DOS.ORIGIN = 1
DOS.JOB = TVO.PO.PROD<1,UA>
MATREAD JOB.REC FROM JOB, CONO : DOS.JOB ELSE
  MAT JOB.REC = ''
END
JOS.ID = DOS.SEQ.NO
DOS.ID = CONO:JOS.ID
DOS.TYPE = JOB.TYPE
DOS.DIV = TVO.PO.DIV<1,UA>
DOS.DEPT = TVO.PO.DEPT<1,UA>
DOS.CCTR = TVO.PO.CCTR<1,UA>
DOS.OPER = TVO.PO.OPER<1,UA>
DOS.VEND = TVO.VEND<1>
DOS.PO = TVO.PO.NOS<1,UA>
DOS.INV = TVO.INV
DOS.INV.DATE = TVO.INV.DATE
DOS.DUE.DATE = TVO.DUE.DATE
DOS.DATE = TODAY
IF @LOGNAME='lross' THEN DEBUG
DOS.QTY = TVO.PO.QTY<1,UA>   ; * T24137 changed from REC.QTY to PO.QTY
DOS.GRS.AMT = TVO.PO.VOUCH<1,UA>
IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678
DOS.UOM = TVO.PO.UM<1,UA>
IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN
*T28678 *T23319 v
   BEGIN CASE
     CASE DOS.UOM = 'M'
*T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + ROND)
     CASE DOS.UOM = 'C'
*T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + .5)
       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + ROND)
     CASE 1
*T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + ROND)
   END CASE
* IF DOS.UOM = 'M' THEN
*   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
* END ELSE
*   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
* END
*T28678 ^
END
PO.LINE.NO = 1
DOS.MER.AMT = TVO.PO.VOUCH<1,UA>
DOS.DSC.AMT = 0
DOS.DESC = ''
DOS.PRD.LINE = TVO.PO.WHSE<1,UA>
DOS.INIT = ''
DOS.SALE.AMT = 0
MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.WHSE<1,UA> ELSE
  MAT CAOS.REC = ''
END
IF NUM(CAOS.FOH.PCT) THEN
*T28678  DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + .5)
  DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + ROND)
*T28678  DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + .5)
  DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + ROND)
END
POST.OSJ = 0
CALL POST.OSP.SUB(CONO,DOS.ID,JOS.ID,POST.OSJ,POSTING.MON,POST.ERROR,PO.LINE.NO)
IF POST.ERROR THEN
  IF POST.OSJ THEN
    RELEASE OJOB.OSP, DOS.ID
  END
       * Add reject listing for job transactions when posting vouchers
  REJECT.TYPE = "OUTSIDE PURCHASE ORDERS"
  LOCATE REJECT.TYPE IN REJECT.LIST<1>,1 SETTING RPOS THEN
    REJECT.LIST<2,RPOS,-1> = VOU.ID             ; * Voucher #
    REJECT.LIST<3,RPOS,-1> = DOS.ID             ; * Daily OSP ID
    REJECT.LIST<4,RPOS,-1> = DOS.STATUS         ; * Error message
  END ELSE
    REJECT.LIST<1,RPOS> = REJECT.TYPE
    REJECT.LIST<2,RPOS,-1> = VOU.ID             ; * Voucher #
    REJECT.LIST<3,RPOS,-1> = DOS.ID             ; * Daily OSP ID
    REJECT.LIST<4,RPOS,-1> = DOS.STATUS         ; * Error message
  END
  UNPOST.CNT = UNPOST.CNT + 1
END ELSE
  RELEASE DAILY.OSP, DOS.ID
  IF CO.APS.O.INTRF > 1 THEN
    LOCATE DOS.DATE IN VPDS.REC.DATE<1>,1 SETTING JFND ELSE
      VPDS.REC.DATE<1,JFND> = DOS.DATE
      VPDS.REC.QTY<1,JFND> = 0
      VPDS.REC.UN.COST<1,JFND> = 0
    END
    VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + DOS.QTY
    VPDS.REC.UN.COST<1,JFND> = VPDS.REC.UN.COST<1,JFND> + DOS.U.PRICE
    VPS.REC.QTY<1,PRFND> = VPS.REC.QTY<1,PRFND> + DOS.QTY
    VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + DOS.GRS.AMT
    VSTAT.PO.RECV<1,POFND> = VSTAT.PO.RECV<1,POFND> + DOS.GRS.AMT
  END
END
RETURN
*
5000 * Print reject listing for job transactions
*
PRINTER ON
PRINT CHAR(012)
PRINT SPACE(40):"VOUCHER/JOB NON-PRIMAC TRANSACTIONS REJECT LISTING"
PRINT
PRINT "THE FOLLOWING JOB TRANSACTIONS DID NOT POST AND MUST BE CORRECTED MANUALLY IN THE JCS MODULE:"
PRINT
PRINT
ACOUNT = DCOUNT(REJECT.LIST<1>,VM)
FOR I = 1 TO ACOUNT
  PRINT REJECT.LIST<1,I>
  PRINT
  BCOUNT = DCOUNT(REJECT.LIST<2,I>,SM)
  FOR B = 1 TO BCOUNT
    PRINT SPACE(5):"Trans ID : ":REJECT.LIST<3,I,B>:"     Error : ":
    PRINT REJECT.LIST<4,I,B>
  NEXT B
  PRINT;PRINT
NEXT I
PRINTER OFF
PRINTER CLOSE
RETURN
*T25824 ^
*
91000*
ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000*
ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000*
ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
*** END OF PROCESS
99999*
*T25824 v    Print reject listing for job transactions that didn't post
IF REJECT.LIST NE "" THEN GOSUB 5000
*T25824 ^
END
