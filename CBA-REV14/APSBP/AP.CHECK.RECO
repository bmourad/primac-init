*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - AP.CHECK.RECO
* BY          - JIHAD YAMOUT, C.B.A
* DATE        - 10/20/83
* DESCRIPTION - THIS PROGRAM DISPLAY ALL CHECK FROM SELECTION AND
* AND LET YOU PAY IN FULL OR PAY PART OF IT.
* 06/05/91 TASK 15968 ADD SCROLL BACKWARD ON SCREEN
*T21177 diane 01/21/1997 * REV11 UPG ADD CLOSE
*T23278 markt 10/28/1998 * Add check for divisional security
*T23402 Lanny 11/04/1998 * Fix scroll when exit last item on page
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T27646 thompson 08/19/2003 * MODIFY FOR MULTI PLATFORM ISSUE
*T28117 thompson 05/13/2004 * Change to allow any amout on
*                             reconciliation
*T28799 thompson 02/20/2006 * Fix problem with field being filled
*                             incorretly if user escapes from line
*ENDDOC
*********************************************************************
*
**** INSERT FILES EQUETES
*
*COPY>APS.CPYLIB>APCHECK
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
DIM SAPC.REC(20)
EQU SAPC.KEY    TO SAPC.REC(1)
EQU SAPC.CHKAP  TO SAPC.REC(2)
EQU SAPC.CHKA   TO SAPC.REC(3)
EQU SAPC.CLE    TO SAPC.REC(4)
EQU SAPC.REM    TO SAPC.REC(5)
MAT SAPC.REC = ''
SAVE.VEND = ''
BEGIN.PAGE = 7
PAGE.SIZE = 6
LINE.SPACE = 2
LINES = 0
OLD.START.LINE=0
TOT.AMT = 0 ; TOT.AMT.PD = 0
MAT COA.REC = ""
LOGNAME = 'LOGNAME'; CALL SYSVARS.SUB(LOGNAME)
*
**** SETUP FOR SYSTEM ERRMSGS
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
**** OPEN FILES
OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = "APCHECK.FILE IS MISSING";GOTO 93000
OPEN '','VEND' TO VEND ELSE ERRMSG = "VENDOR FILE IS MISSING" ; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING" ; GOTO 93000
OPEN '','APS.SCREENS' TO M.SCREENS ELSE ERRMSG = "M.SCREENS FILE IS MISSING" ; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING" ; GOTO 93000
*
**** READ PROC
PROCREAD X ELSE ERRMSG = "THIS PROGRAM SHOULD RUN FROM A PROC" ;GOTO 93000
ACCOUNT.NO = X<6>
CONO = X<1>
*
**** MAIN PROCESS
MATREAD COMP.REC FROM COMPANY , CONO ELSE
  ERRMSG = "COMPANY (":CONO:") NOT ON FILE" 
  GOSUB 91000 ; GOTO 99999
END
MATREAD GLTABLE.REC FROM CONTROL , CONO:"GLTABLE" ELSE
  ERRMSG = "GLTABLE FOR COMPANY (":CONO:") NOT ON FILE"
  GOSUB 91000 ; GOTO 99999
END
IF CO.GLS # "N" THEN
  OPEN '','COA' TO COA ELSE
    ERRMSG = "COA FILE IS MISSING"
    GOTO 93000
  END
  MATREAD COA.REC FROM COA, CONO:ACCOUNT.NO ELSE
    COA.DESC = "???????????????"
  END
END
*
**** PRINT SCREEN
MAT EDIT.COM.DRIVER = ''
*     MAT EDIT.COM = ''
*     TYP = 0 ; CALL EDIT.SUB
FILL = "#"
ECD.SCRN.CNT = 1
ECD.SCRN.NAME<1> = "AP.CHECK.RECO"
ECD.ACTION = 1; CALL SCRN.EDIT
ECD.SCRN.NO = 1; MAT SCV.REC = ""
ECD.ACTION = 6 ; CALL SCRN.EDIT
*
SCV.REC(2)<ECD.SCRN.NO> = ACCOUNT.NO CO.ACCT.MASK
SCV.REC(3)<ECD.SCRN.NO> = COA.DESC
ECD.ACTION = 3 ; CALL SCRN.EDIT
MV.CNT = 0
DATA = 1
LOOP
  READNEXT ID ELSE DATA = 0
WHILE DATA = 1 AND MV.CNT < 1201 DO
  MATREAD APCK.REC FROM APCHECK , ID ELSE
    MAT APCK.REC = '' ; GOTO 111
  END
*T23278 v
  DIV.CODE = APCK.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = '' ; *T27646
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN GOTO 111
*T23278 ^
  MV.CNT = MV.CNT + 1
  SAPC.KEY<1,MV.CNT> = ID
  SAPC.CHKA<1,MV.CNT> = APCK.AMT
  SAPC.CHKAP<1,MV.CNT> = APCK.AMT.PAID
  IF APCK.SEQ = '' THEN
    SAPC.CLE<1,MV.CNT> = 'N'
  END ELSE
    SAPC.CLE<1,MV.CNT> = "Y"
  END
  SAPC.REM<1,MV.CNT> = APCK.COMM
  TOT.AMT = TOT.AMT + APCK.AMT
  TOT.AMT.PD = TOT.AMT.PD + APCK.AMT.PAID
111 REPEAT
IF DATA = 1 THEN
  ERRMSG = "Only 1200 check's can be loaded at one time. Last check loaded (":SAPC.KEY<1,MV.CNT>[4+LEN(CO.ACCT.PIC),6]:")"
  GOSUB 91000
END
LINES = COUNT(SAPC.KEY , VM) + (SAPC.KEY # "")
LN = 1
IF LINES = 0 THEN GOTO 99990
GOSUB 10000
GOSUB 1000
GOTO 99990
**** ENTER PAID AMOUNT
100 *
X=40;Y=SLN;TYP=4;SCALER=2;O.R='O';MAXL=10
IF SAPC.CHKAP<1,LN> # "" THEN
  DEFAULT = OCONV(SAPC.CHKAP<1,LN>, "MD2")
  TOT.AMT.PD = TOT.AMT.PD - SAPC.CHKAP<1,LN>
* IF SAPC.CHKAP<1,LN> < 0 THEN MAXV = 0 ; MINV = SAPC.CHKAP<1,LN>
* IF SAPC.CHKAP<1,LN> > 0 THEN MAXV = SAPC.CHKAP<1,LN> ;MINV = 0
END ELSE
  DEFAULT = OCONV(SAPC.CHKA<1,LN>, "MD2")
END
IF SAPC.CHKA<1,LN> < 0 THEN MAXV = 0 ; MINV = SAPC.CHKA<1,LN>
*T28117  IF SAPC.CHKA<1,LN> > 0 THEN MAXV = SAPC.CHKA<1,LN> ;MINV = 0
CALL EDIT.SUB
IF VALUE = "END" THEN
  P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(SAPC.CHKAP<1,LN>, "MD2") "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  TOT.AMT.PD = TOT.AMT.PD + SAPC.CHKAP<1,LN>
  GOTO 999
END ELSE
  SAPC.CHKAP<1,LN> = VALUE
  TOT.AMT.PD = TOT.AMT.PD + VALUE
END
**** ENTER CLEARD CODE
200 *
X=51;Y=SLN;O.R = 'O';TYP = 8; MAXL = 1
IF SAPC.CLE<1,LN> = '' THEN
  DEFAULT = 'N'
END ELSE
  DEFAULT = SAPC.CLE<1,LN>
END
CALL EDIT.SUB
IF VALUE = 'END' THEN
  P_X  = 51 ; P_Y = SLN ; P_VALUE = SAPC.CLE<1,LN> "L#1" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOTO 999
END ELSE
  SAPC.CLE<1,LN> = VALUE
END
**** ENTER REMARKS
300 *
X=53;Y=SLN;O.R='O';MAXL=26;TYP=1
NN = LN ; GOSUB 20000
IF DESC1 # "" THEN
  DEFAULT = DESC1
END
CALL EDIT.SUB
IF VALUE = "END" THEN
  NN = LN
  GOSUB 20000
  GOTO 999
END 
DESC1 = VALUE
X=53;Y=SLN+1;O.R = 'O';MAXL =26;TYP=1
IF DESC2 # "" THEN
  DEFAULT = DESC2
END
CALL EDIT.SUB
IF VALUE = "END" THEN
  NN = LN
  GOSUB 20000
  GOTO 999
END
DESC2 = VALUE
IF DESC1 = '' THEN
  SAPC.REM<1,LN> = DESC2
END ELSE
  SAPC.REM<1,LN> = DESC1:' ':DESC2
END
NN = LN
GOSUB 20000
GOSUB 900
999 RETURN
**** ADD TOTALS
900 *
* TOT.AMT.PD = 0
* FOR II = 1 TO LINES
* TOT.AMT.PD = TOT.AMT.PD + SAPC.CHKAP<1,II>
* NEXT II
P_X  = 67 ; P_Y = 19 ; P_VALUE = OCONV(TOT.AMT.PD, "MD2") "L#12" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
RETURN
**** ENTER OPTION
1000 *
MORE = 1
LOOP
  ECD.NUM = 1 ; SCV.REC(16)<ECD.SCRN.NO> = "" ; ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      MORE = 0
    CASE ECD.RET.VALUE = 'S' OR ECD.RET.VALUE = 'SF'
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 10000
      * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 10000
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 10000
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 10000
      * T25978 ^
    CASE ECD.RET.VALUE = 'P'
      GOSUB 60000
      IF LNO THEN
        LN = LNO - 1
        FOR LN = LNO TO LINES UNTIL VALUE = "END"
          GOSUB 10000
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
* SAPC.CHKAP<1,LN> = SAPC.CHKA<1,LN>
* SAPC.CLE<1,LN> = 'Y'
* SAPC.REM<1,LN> = ""
          P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(SAPC.CHKA<1,LN>, "MD2") "R#10" ; P_OPT = ""
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          X=51;Y=SLN;O.R = 'O';TYP = 8; MAXL = 1
          DEFAULT = 'Y'
          CALL EDIT.SUB
          IF VALUE = 'END' THEN
            P_X = 40; P_Y = SLN; P_VALUE = SPACE(10); P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            P_X  = 51 ; P_Y = SLN ; P_VALUE = SAPC.CLE<1,LN> "L#1" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            LN -= 1 ; * T23402
            SLN -= 2 ;* T28799
          END ELSE
            SAPC.CLE<1,LN> = VALUE
          END
* PRINT @(62,SLN) :SAPC.CLE<1,LN>
          IF SAPC.CLE<1,LN> = "Y" THEN
            TOT.AMT.PD = TOT.AMT.PD - SAPC.CHKAP<1,LN>
            SAPC.CHKAP<1,LN> = SAPC.CHKA<1,LN>
            TOT.AMT.PD = TOT.AMT.PD + SAPC.CHKAP<1,LN>
            P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(SAPC.CHKAP<1,LN>, "MD2") "R#10" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          END ELSE
            TOT.AMT.PD = TOT.AMT.PD - SAPC.CHKAP<1,LN>
            SAPC.CHKAP<1,LN> = ""
            P_X  = 40 ; P_Y = SLN ; P_VALUE = OCONV(SAPC.CHKAP<1,LN>, "MD2") "R#10" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          END
*               PRINT @(64,SLN+1) :CL
*               PRINT @(64,SLN) :CL
          GOSUB 900
        NEXT LN
      END
    CASE ECD.RET.VALUE = 'C'
      GOSUB 60000
      IF LNO THEN
        LN = LNO
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
        GOSUB 100
      END
    CASE ECD.RET.VALUE = 'F'
      FOR FF = 1 TO LINES
        MATREADU APCK.REC FROM APCHECK, SAPC.KEY<1,FF> ELSE
          RELEASE APCHECK , SAPC.KEY<1,FF> ; GOTO 109
        END
        APCK.AMT.PAID = SAPC.CHKAP<1,FF>
        IF SAPC.CLE<1,FF> = "N" THEN
          APCK.SEQ = ""
        END ELSE
          APCK.SEQ = 1
        END
        APCK.COMM = SAPC.REM<1,FF>
        MATWRITE APCK.REC ON APCHECK, SAPC.KEY<1,FF>
109   NEXT FF
      MORE = 0
  END CASE
WHILE MORE DO REPEAT
RETURN
*
***** SCROLL ROTINE
*
10000 *
START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
IF START.LINE=OLD.START.LINE THEN GOTO 10011
OLD.START.LINE=START.LINE
LAST.LINE=START.LINE + PAGE.SIZE - 1
CNT=1
FOR N=START.LINE TO LAST.LINE UNTIL N > LINES
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
  MATREAD APCK.REC FROM APCHECK, SAPC.KEY<1,N> ELSE GOTO 10001
  IF APCK.VEND<1,2> = "" THEN
    MATREAD VEND.REC FROM VEND , CONO:APCK.VEND<1,1> ELSE
      VEND.DESC = "????????????"
    END
  END ELSE
    VEND.DESC = APCK.VEND<1,2>
  END
  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:SAPC.KEY<1,N>[4+LEN(CO.ACCT.PIC),6] "L#6"
  P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:APCK.VEND<1,1> "L#8"
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(APCK.DATE, "D2/") "L#8"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(APCK.AMT, "MD2") "R#10"
  P_X  := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SAPC.CHKAP<1,N>, "MD2") "R#10"
  P_X  := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM:SAPC.CLE<1,N> "L#1"
  P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:SAPC.REM<1,N> "L#27"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = VEND.DESC "L#30" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NN = N
  GOSUB 20000
  CNT=CNT + 1
10001 NEXT N
FOR M=CNT TO PAGE.SIZE
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
P_X  = 30 ; P_Y = 19 ; P_VALUE = OCONV(TOT.AMT, "MD2") "L#12" ; P_OPT = ""
P_X  := AM:67 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(TOT.AMT.PD, "MD2") "L#12"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10011 RETURN
**** PRINT REMARKS
20000 *
IF LEN(SAPC.REM<1,NN>) < 27 THEN
  P_X  = 53 ; P_Y = SLN ; P_VALUE = SAPC.REM<1,NN> "L#27" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 53 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DESC1 = SAPC.REM<1,NN> ; DESC2 = ''
END ELSE
  DESC = TRIM(SAPC.REM<1,NN>)
  FND = 0
  FOR DD = 27 TO 1 STEP -1 UNTIL FND
    IF DESC[DD,1] = " " THEN
      FND = 1
      DESC1 = DESC[1,DD-1]
      DESC2 = DESC[DD+1,26]
    END
  NEXT DD
  P_X  = 53 ; P_Y = SLN ; P_VALUE = DESC1 "L#26" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 53 ; P_Y = SLN+1 ; P_VALUE = DESC2 "L#26" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
END
RETURN
**** ENTER LINE NUMBER
60000 *
GOSUB 10000 ;X = 0 ; Y = 21 ; TYP =13
PMSG = 'ENTER LINE NUMBER : '
MINV = OLD.START.LINE
IF LAST.LINE < LINES THEN
  MAXV = LAST.LINE
END ELSE
  MAXV = LINES
END
O.R = 'O'; MAXL = 3
CALL EDIT.SUB
P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
LNO = VALUE
IF LNO = '' OR LNO = 'END' THEN LNO = 0
MAXV = '' ; MINV = ''
RETURN
***** CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
GOTO 99999
99990 *
ECD.ACTION = 99 ; CALL SCRN.EDIT
99999 END
