  SUBROUTINE CASH.DISB.MAINT.SUB (LN,CONO,VPOP.VEND,VEND.POP,CKP,V.FLAG)
*COPY>CPYLIB>COM1
*********************************************************************
* PROGRAM - CASH.DISB.MANT.SUB
* AUTHOR  - CURTIS WILLIAMS, COMPUTER BUSINESS ASSOCIATES
* DATE    - NOVEMBER 17, 1986
* DESCRIPTION -
* T19149 RKB 05/01/95 * add support for AP div, dept, cctr
* T20269 JR ALLOW CHECK RUNS FOR DIFFERENT DIVISIONS SIMULTANEOUSLY
*T21560 lanny 02/04/1997 * IN ADD MODE IF ESC OUT AT E.G. DISC IT LEAVES
*                          ORIG DATA IN COLUMNS.
*T22829 diane 05/04/1998 * Correct spelling "VENDER" in error msg
*T23678 cindy 02/26/1999 * key built incorrectly
*T23775 markt 03/22/1999 * Cash Discbursement Screen not listing open
*                          invoices for sewlected vendor.
*T25759 edwin 04/19/2001 * Added remittance comments.
*T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,ST)
*T27613 thompson 08/08/2003 * FIX PROBLEM WITH "ALL" AS OWNDIV ON CHECK
*                             RUN
*********************************************************************
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>APS.CPYLIB>VEND.POP
*COPY>APS.CPYLIB>VEND.VOUCH.POP
*COPY>APS.CPYLIB>OAP
*COPY>APS.CPYLIB>CKP
*COPY>PMC.CPYLIB>VEND
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- INITIALIZATION
*
  PAGE.SIZE = 12
  BEGIN.PAGE = 6
  LINE.SPACE = 1
  OLD.LINE = 0
  LNV = 0
  LINES = 0
  OLD.START.LINE = 0
  MAT CKP.REC = ''
  PROCREAD XXX ELSE XXX = ""
  DIV.OWNER = XXX<6>
*
*----MAIN BODY
*
  VN = LN + VPOP.START.ATT - 1
  VCNT = COUNT(VPOP.VEND<VN>,VM) + (VPOP.VEND<VN> # '')
  IF VCNT = 1 THEN
* TASK 20269
*         KEY = VPOP.VEND<VN>
* T23775 v UNDO THE FOLLOWING LINE CHANGE (CHANGE BACK TO INCLUDING "!" IN KEY).
*T23678 v
    KEY = VPOP.VEND<VN>:"!":DIV.OWNER
*         KEY = VPOP.VEND<VN>:DIV.OWNER
*T23678 ^
* T23775 ^
* TASK 20269
  END ELSE
*        KEY = VPOP.VEND<VN,1>:"!":VPOP.VEND<VPOP.SEQ.ATT,VN>
    KEY = VPOP.VEND<VN,1>:"!":VPOP.VEND<VPOP.SEQ.ATT,VN>:"!":DIV.OWNER
  END
  READ VPOP.VOUCH FROM VEND.POP,CONO:KEY ELSE VPOP.VOUCH =''
*
  IF VPOP.VOUCH = "" THEN
    REQUEST = 'A'
    LOOP
      LNV = LINES + 1
      OLD.LINES = LINES
      GOSUB 30000
    WHILE LINES > OLD.LINES DO
    REPEAT
    LNV = LINES
    GOSUB 20000
  END ELSE
    LINES = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
    LNV = 1
    GOSUB 20000
    GOSUB 60500
  END
*
*----REQUEST
*
  LOOP
    ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    MORE = 0
    BEGIN CASE
      CASE REQUEST = 'A'
        LOOP
          LNV = LINES + 1
          OLD.LINES = LINES
          GOSUB 30000
        WHILE LINES > OLD.LINES DO
        REPEAT
        LNV = LINES
        OLD.START.LINE = 0
        GOSUB 20000
      CASE REQUEST = 'C'
        GOSUB 10000
        IF LN.NO THEN
          LNV = LN.NO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNV - 1,PAGE.SIZE)
          MATREAD OAP.REC FROM OAP,CONO:VPOP.VOUCH<LNV,VPOP.VOUCH.MV> ELSE MAT OAP.REC = ''
          GOSUB 36000
        END
      CASE REQUEST = 'D'
        GOSUB 10000
        IF LN.NO THEN
          LNV = LN.NO
          GOSUB 50000
        END
      CASE REQUEST = 'S'
        LNV = LNV + PAGE.SIZE
        IF LNV > LINES THEN LNV = 1
        GOSUB 20000
      * T25978 v
      CASE REQUEST = 'SR'
        LNV -= PAGE.SIZE
        IF LNV < 1 THEN LNV = 1
        GOSUB 20000
      CASE REQUEST = 'ST'
        LNV = 1
        GOSUB 20000
      CASE REQUEST = 'SB'
        LNV = LINES
        GOSUB 20000
      * T25978 ^
      CASE REQUEST = 'E' OR REQUEST = "END"
        IF VPOP.VEND<VPOP.NET.ATT,VN> + 0 < 0 THEN
          ERRMSG = 'Total Net Amt Cannot Be Negative'
          GOSUB 91000
        END ELSE
          LINES = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
          IF LINES = 0 THEN V.FLAG = 1
          MORE = 1
        END
    END CASE
  UNTIL MORE DO
  REPEAT
  GOTO 99999
*
*----SUBROUTINE
*
10000*
  GOSUB 20000
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
*
20000*
  START.LINE = 1 + INT((LNV-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN RETURN
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N"R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VOUCH<N,VPOP.VOUCH.MV>"L#8"
    P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VOUCH<N,VPOP.INV.MV>"L#10"
    P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VOUCH<N,VPOP.PO.MV>"L#10"
    P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.DUE.MV>,"D2/")"R#8"
*T111609 v
*    P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.GRS.MV>,"MD2")"R#10"
*    P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.DSC.MV>,"MD2")"R#10"
*    P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.NET.MV>,"MD2")"R#10"
    P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.GRS.MV>,"MD2")"R#12"
    P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.DSC.MV>,"MD2")"R#10"
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPOP.VOUCH<N,VPOP.NET.MV>,"MD2")"R#12"
*T111609 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
  RETURN
*
30000*
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LNV-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LNV"R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
35000*
  TYP = 3; X = 4; Y = SLN; MAXL = 6
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    VPOP.VOUCH = DELETE(VPOP.VOUCH,LNV,0,0)
    GOTO 37999
  END
  TCNT = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
  BLK = 0
  FOR I = 1 TO TCNT UNTIL BLK
    IF VALUE = VPOP.VOUCH<I,VPOP.VOUCH.MV> AND I # LNV THEN
      ERRMSG = 'VOUCHER ALREADY LISTED'
      GOSUB 91000
      BLK = 1
    END
  NEXT I
  IF BLK THEN GOTO 35000
  MATREAD OAP.REC FROM OAP,CONO:VALUE ELSE
    ERRMSG = 'INVALID VOUCHER'
    GOSUB 91000
    GOTO 35000
  END
*T27613
IF DIV.OWNER # "ALL" THEN
  IF OAP.DIV.OWNER # DIV.OWNER THEN
    ERRMSG = "THIS VOUCHER HAS OWNING DIVISION OF ":OAP.DIV.OWNER
    GOSUB 91000; GOTO 35000
  END
END
*T27613
  IF OAP.VEND<1,1> # VPOP.VEND<VN,1> THEN
    ERRMSG = "VOUCHER HAS A DIFFERENT VENDOR"      ;*T22829
    GOSUB 91000
    GOTO 35000
  END
  IF OAP.VEND<1,2> # '' THEN
    IF VPOP.VEND<VN,2> # '' AND OAP.VEND<1,2> # VPOP.VEND<VN,2> THEN
      ERRMSG = 'VOUCHER HAS A DIFFERENT VENDOR'      ;*T22829
      GOSUB 91000
      GOTO 35000
    END ELSE
      LOCATE OAP.VEND IN VPOP.VEND,VPOP.START.ATT SETTING MARKER ELSE
        MARKER = 0
      END
      IF MARKER # 0 AND MARKER # VN THEN
        ERRMSG = "VOUCHER HAS A DIFFERENT VENDOR LINE"      ;*T22829
        GOSUB 91000
        GOTO 35000
      END ELSE
        VPOP.VEND<VN> = OAP.VEND
        SCV.REC(12)<2> = OAP.VEND<1,2>
        ECD.ACTION = 3; CALL SCRN.EDIT
      END
    END
  END
  VPOP.VOUCH<LNV,VPOP.VOUCH.MV> = VALUE
  VPOP.VOUCH<LNV,VPOP.INV.MV> = OAP.INV
  VPOP.VOUCH<LNV,VPOP.PO.MV> = OAP.PO
  VPOP.VOUCH<LNV,VPOP.DUE.MV> = OCONV(OAP.DUE.DATE,"D2/")
  P_X  = 11 ; P_Y = SLN ; P_VALUE = VPOP.VOUCH<LNV,VPOP.INV.MV>"L#10" ; P_OPT = ""
  P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VOUCH<LNV,VPOP.PO.MV>"L#10"
  P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:VPOP.VOUCH<LNV,VPOP.DUE.MV>"R#8"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
36000*
*T111609 v
*  TYP = 4; X = 42; Y = SLN; MAXL = 10
  TYP = 4; X = 42; Y = SLN; MAXL = 12
*T111609 ^
  SCALER = 2; O.R = 'O'
  IF VPOP.VOUCH<LNV,VPOP.GRS.MV> # '' THEN
    DEFAULT = OCONV(VPOP.VOUCH<LNV,VPOP.GRS.MV>,"MD2")
  END ELSE
    DEFAULT = OCONV(OAP.GRS.AMT - OAP.PAID.AMT - OAP.DSC.PAID, "MD2")
    IF DEFAULT < 0 AND OAP.GRS.AMT > 0 THEN DEFAULT = 0
    IF DEFAULT > 0 AND OAP.GRS.AMT < 0 THEN DEFAULT = 0
  END
  IF DEFAULT = 0 THEN
    ERRMSG = 'This voucher has been paid in full'
    GOSUB 91000
    DEFAULT = ""
    GOTO 30000
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF REQUEST = 'A' THEN
*T21560 v
      GOSUB 70000
*           GOTO 35000
      GOTO 30000
*T21560 ^
    END ELSE
*T111609 v
*      P_X  = 42 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.GRS.MV>,"MD2")"R#10" ; P_OPT = ""
      P_X  = 42 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.GRS.MV>,"MD2")"R#12" ; P_OPT = ""
*T111609 ^
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 37999
    END
  END
  IF VALUE = 0 THEN
    ERRMSG = 'Gross Amt must not be zero '
    GOSUB 91000; GOTO 36000
  END
  IF VALUE > OAP.GRS.AMT - OAP.PAID.AMT - OAP.DSC.PAID THEN
    ERRMSG = 'Gross Amt must be less than ':OCONV(OAP.GRS.AMT,"MD2")
    GOSUB 91000; GOTO 36000
  END
  VPOP.VOUCH<LNV,VPOP.GRS.MV> = VALUE
*
37000*
*T111609 v
*  TYP = 4; X = 53; Y = SLN; MAXL = 10
  TYP = 4; X = 55; Y = SLN; MAXL = 10
*T111609 ^
  SCALER = 2; O.R = 'O'
  IF VPOP.VOUCH<LNV,VPOP.GRS.MV> = 0 THEN
    VALUE = 0
*T111609 v
*    P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#10" ; P_OPT = ""
    P_X  = 55 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#10" ; P_OPT = ""
*T111609 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    IF VPOP.VOUCH<LNV,VPOP.DSC.MV> # '' THEN
      DEFAULT = OCONV(VPOP.VOUCH<LNV,VPOP.DSC.MV>,"MD2")
    END ELSE
      DEFAULT = OCONV(OAP.DSC.AMT - OAP.DSC.PAID,"MD2")
      IF DEFAULT < 0 AND OAP.GRS.AMT > 0 THEN DEFAULT = 0
      IF DEFAULT > 0 AND OAP.GRS.AMT < 0 THEN DEFAULT = 0
    END
    CALL EDIT.SUB
    IF VALUE = 'END' THEN
      IF REQUEST = 'A' THEN
*T21560 v
        GOSUB 70000
        DEL VPOP.VOUCH<LNV,VPOP.GRS.MV>
*              GOTO 35000
        GOTO 30000
*T21560 ^
      END ELSE
*T111609 v
*        P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.DSC.MV>,"MD2")"R#10" ; P_OPT = ""
        P_X  = 55 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.DSC.MV>,"MD2")"R#10" ; P_OPT = ""
*T111609 ^
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOTO 37999
      END
    END
  END
  VPOP.VOUCH<LNV,VPOP.DSC.MV> = VALUE
  VPOP.VOUCH<LNV,VPOP.NET.MV> = VPOP.VOUCH<LNV,VPOP.GRS.MV> - VPOP.VOUCH<LNV,VPOP.DSC.MV>
*T111609 v
*  P_X  = 64 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.NET.MV>,"MD2")"R#10" ; P_OPT = ""
  P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(VPOP.VOUCH<LNV,VPOP.NET.MV>,"MD2")"R#12" ; P_OPT = ""
*T111609 ^
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOSUB 60000
  MAT CKP.REC = ""
  CKP.VEND = OAP.VEND
  CKP.INV = OAP.INV
  CKP.INV.DATE = OAP.INV.DATE
  CKP.DUE.DATE = OAP.DUE.DATE
  CKP.GRS.AMT = VPOP.VOUCH<LNV,VPOP.GRS.MV>
  CKP.MER.AMT = OAP.MER.AMT
  CKP.DSC.AMT = VPOP.VOUCH<LNV,VPOP.DSC.MV>
  CKP.CTR = OAP.CTR
  CKP.ACCT = OAP.ACCT
  CKP.DIST.AMT = OAP.DIST.AMT
  CKP.JOB = OAP.JOB
  CKP.PO = OAP.PO
  CKP.ASSET.ID = OAP.ASSET.ID
  CKP.JCS.TRANS = OAP.JCS.TRANS
  CKP.TERMS = OAP.TERMS
  CKP.DIV = OAP.DIV
  CKP.DEPT = OAP.DEPT
  CKP.CCTR = OAP.CCTR
  CKP.MON = OAP.MON
  CKP.COMMENT = OAP.COMMENT
  CKP.REM.COMM = OAP.REM.COMM ; *T25759
  CKP.MISC.CAT = OAP.MISC.CAT
  CKP.AP.ACCT = OAP.AP.ACCT
  CKP.AP.AMT = OAP.AP.AMT
*T19149 v      
  CKP.AP.DIV = OAP.AP.DIV
  CKP.AP.DEPT = OAP.AP.DEPT
  CKP.AP.CCTR = OAP.AP.CCTR
*T19149 ^      
  MATWRITE CKP.REC ON CKP,CONO : VPOP.VOUCH<LNV,VPOP.VOUCH.MV>
  WRITE VPOP.VOUCH ON VEND.POP, CONO : KEY
* TASK 20269
*      WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS"
  WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS":DIV.OWNER
* TASK 20269
37999 LINES = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
  RETURN
*
50000*
  DELETE CKP,CONO:VPOP.VOUCH<LNV,VPOP.VOUCH.MV>
  VPOP.VOUCH = DELETE(VPOP.VOUCH,LNV,0,0)
  GOSUB 60000
* TASK 20269
*      WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS"
  WRITE VPOP.VEND ON VEND.POP,CONO:"VENDORS":DIV.OWNER
* TASK 20269
  WRITE VPOP.VOUCH ON VEND.POP,CONO:KEY
  LINES = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
  OLD.START.LINE = 0
  GOSUB 20000
  RETURN
*
60000*
  VPOP.VEND<VPOP.GRS.ATT,VN>=0;VPOP.VEND<VPOP.DSC.ATT,VN>=0;VPOP.VEND<VPOP.NET.ATT,VN>=0
  TMV = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # '')
  FOR I = 1 TO TMV
    VPOP.VEND<VPOP.GRS.ATT,VN> = VPOP.VEND<VPOP.GRS.ATT,VN> + VPOP.VOUCH<I,VPOP.GRS.MV>
    VPOP.VEND<VPOP.DSC.ATT,VN> = VPOP.VEND<VPOP.DSC.ATT,VN> + VPOP.VOUCH<I,VPOP.DSC.MV>
    VPOP.VEND<VPOP.NET.ATT,VN> = VPOP.VEND<VPOP.NET.ATT,VN> + VPOP.VOUCH<I,VPOP.NET.MV>
  NEXT I
60500 *
*T111609 v
*  P_X  = 42 ; P_Y = 19 ; P_VALUE = OCONV(VPOP.VEND<VPOP.GRS.ATT,VN>,"MD2")"R#10" ; P_OPT = ""
*  P_X  := AM:53 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.DSC.ATT,VN>,"MD2")"R#10"
*  P_X  := AM:64 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.NET.ATT,VN>,"MD2")"R#10"
  P_X  = 42 ; P_Y = 19 ; P_VALUE = OCONV(VPOP.VEND<VPOP.GRS.ATT,VN>,"MD2")"R#12" ; P_OPT = ""
  P_X  := AM:55 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.DSC.ATT,VN>,"MD2")"R#10"
  P_X  := AM:66 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(VPOP.VEND<VPOP.NET.ATT,VN>,"MD2")"R#12"
*T111609 ^
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
70000*  T21560 v
  DEL VPOP.VOUCH<LNV,VPOP.VOUCH.MV>
  DEL VPOP.VOUCH<LNV,VPOP.INV.MV>
  DEL VPOP.VOUCH<LNV,VPOP.PO.MV>
  DEL VPOP.VOUCH<LNV,VPOP.DUE.MV>
  RETURN
*
*----ERRORS ROUTINE
*
* 91000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT X,1:
*       PRINT @(0,23):CL:
*       RETURN
*
* 93000*
*       PRINT CHAR(12)
*       PRINT @(14,8):ERRMSG:
*       INPUT X,1
*
*--- CALLS FOR SYSCOM
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
