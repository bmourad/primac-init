*COPY>CPYLIB>COM1
**********************************************
* REVISION    - [08.1]
* SYSTEM      - PRIMAC
* PROGRAM     - VEND.HISTORY
* BY          - BILAL MOGHRABI, C.B.A
* DATE        - 10/19/88
* DESCRIPTION - Scrolling Forward and Backward
* TASK 15943 - CHECK REVERSAL - PRINT LAST CHECK# ONLY
*T22950 lanny 05/29/1998 * Deleted Vouchers should show Zero balance
*                          open.
*T26580 adelgado 05/08/2002 * Mod to allow multi-users to access the
*                             same vendor.
*C40418 cmykleb 07/24/2002 * Change pgm to not use the proc.
**********************************************
*
*-- EQUATE CPYLIB
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>VEND
*COPY>APS.CPYLIB>SQV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*
*-- SYSCOM CALL
*
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*-- OPEN FILES
*
   MAT FILE.VARS = ""
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING" ; GOSUB 93000
   OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING" ; GOSUB 93000
   OPEN "","APS.SCREENS" TO M.SCREENS ELSE ERRMSG = "APS.SCREENS FILE IS MISSING" ; GOSUB 93000
   OPEN "","SQV" TO SQV ELSE ERRMSG = "SQV FILE IS MISSING" ; GOSUB 93000
   OPEN "","VEND" TO VEND ELSE ERRMSG = "VEND FILE IS MISSING" ; GOSUB 93000
*
*-- GET COMPANY
*
   MAT COMP.REC = ""
   CONO = ""
   CALL GET.CONO(CONO, MAT COMP.REC)
*
*-- INITIALIZATION
*
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = "VEND.HISTORY"
   ECD.ACTION = 1; CALL SCRN.EDIT
1 *
   FILL = "#"
   LINE.SPACE = 1
   OLD.LINES = 0
   PAGE.SIZE = 14 ; BEGIN.PAGE = 6
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION = 6; CALL SCRN.EDIT
*
*-- ENTER VENDOR #
*
   ECD.NUM = 1
   ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE # ""
         MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE
            ERRMSG = "VENDOR # NOT ON FILE"
            GOSUB 91000
            GOTO 1
         END
         VNO = ECD.RET.VALUE
         CMD = 'SSELECT SQV WITH CONO = "':CONO:'" AND WITH VEND_ = "':VNO:'"'
         UDTEXECUTE CMD CAPTURING TRASH
         DONE = 1
         KEY = ""
         LOOP UNTIL DONE = 0
            READNEXT ID ELSE DONE = 0
            IF DONE # 0 THEN KEY<-1> = ID
         REPEAT
         SCV.REC(2) = VEND.DESC
         SCV.REC(3) = VEND.STATUS
         ECD.NUM = 2 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
         ECD.NUM = 3 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
      CASE 1
         GOTO 1
   END CASE
*
***
*
   LN = 1; OLD.START.LINE = 0
   LINES = DCOUNT(KEY,AM)
   GOSUB 100
*
*-- MAIN PROCESSING
*
   MORE=1
   LOOP
      ECD.NUM=4; SCV.REC(ECD.NUM)=""
      ECD.ACTION=4; CALL SCRN.EDIT
      OPT=ECD.RET.VALUE
      BEGIN CASE
         CASE OPT="" OR OPT="E" OR OPT="END"
            MORE=0
         CASE OPT="F" OR OPT = "S"
            LN=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN=1
            GOSUB 100
         CASE OPT="B" OR OPT = "SR"
            LN = OLD.START.LINE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 100
         CASE OPT="ST"
            LN = 1
            GOSUB 100
         CASE OPT="SB"
            LN = LINES
            GOSUB 100
      END CASE
   WHILE MORE DO REPEAT
   GO 1
*
*-- SCROLLING ROUTINE
*
100*
   START.LINE=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE=START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE=LINES
   IF START.LINE=OLD.START.LINE THEN RETURN
   OLD.START.LINE=START.LINE
   CNT=1
   FOR N=START.LINE TO LAST.LINE
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      MATREAD SQV.REC FROM SQV,KEY<N> ELSE MAT SQV.REC = ""
      VAL.CNT = DCOUNT(SQV.CHK.NO,VM)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#4" ; P_OPT = ""
      P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:KEY<N>[4,6] "L#6"
      P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.INV "L#10"
      P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.INV.DATE, "D2/") "L#8"
      P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DUE.DATE, "D2/") "L#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF SQV.DUE.DATE = "ADVANCE" THEN
         P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(SQV.GRS.AMT * (-1), "MD2") "R#10" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(SQV.GRS.AMT, "MD2") "R#10" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF SQV.DUE.DATE = "ADVANCE" THEN
         P_X  = 52 ; P_Y = SLN ; P_VALUE = OCONV(SQV.DSC.AMT * (-1), "MD2") "R#8" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 52 ; P_Y = SLN ; P_VALUE = OCONV(SQV.DSC.AMT, "MD2") "R#8" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF SQV.DUE.DATE = "ADVANCE" THEN
         OPN.BAL = SUM(SQV.PAID.AMT) + SUM(SQV.DSC.PAID)
         P_X  = 61 ; P_Y = SLN ; P_VALUE = OCONV(OPN.BAL, "MD2,") "R#12" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
*T22950 v
         IF SQV.CHK.NO<1,VAL.CNT> # 'DELETE' THEN
            OPN.BAL = SQV.GRS.AMT - (SUM(SQV.PAID.AMT) + SUM(SQV.DSC.PAID))
         END ELSE OPN.BAL = 0
*T22950 ^
         IF OPN.BAL # 0 THEN
            OPN.BAL = OPN.BAL - SQV.DSC.AMT
         END
         P_X  = 61 ; P_Y = SLN ; P_VALUE = OCONV(OPN.BAL, "MD2,") "R#12" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      P_X  = 74 ; P_Y = SLN ; P_VALUE = SQV.CHK.NO<1,VAL.CNT> "L#6" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT=CNT + 1
   NEXT N
   FOR N=CNT TO PAGE.SIZE
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*-- ERROR MSGS
*
91000*
   ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000*
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
*
*-- END OF JOB
*
99999*
   ECD.ACTION = 99; CALL SCRN.EDIT
END
