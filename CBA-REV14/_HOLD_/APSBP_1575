









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:09:01 CDT 2006
   #    ######   #####  ######  ######
  # #   #     # #     # #     # #     #
 #   #  #     # #       #     # #     #
#     # ######   #####  ######  ######
####### #             # #     # #
#     # #       #     # #     # #
#     # #        #####  ######  #

APSBP/CHECK.REVERSAL.POST                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CHECK.REVERSAL.POST
Printed for thompson at 06/28/2006 04:09:00PM

0017 *                          records.                                *                          records.
0018 *T21956 llh 05/21/1997 * FIX OAP.DIV.OWNER = "" TO SET TO SQV.     *T21956 llh 05/21/1997 * FIX OAP.DIV.OWNER = "" TO SET TO SQ
0019 *T22155 lanny 08/18/1997 * If DCR.REV.FLG = N then DIV = 00 in     *T22155 lanny 08/18/1997 * If DCR.REV.FLG = N then DIV = 00 
0020 *                          DIV on SQV.AP.DIV (wrong).              *                          DIV on SQV.AP.DIV (wrong).
0021 *T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS A      *T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS 
0022 *T23278 markt 11/17/1998 * Enable division-level posting of fi  |  **T23499T23278 markt 11/17/1998 * Enable division-level post
0023 *T24522 lanny 09/30/1999 * Correct DIV in ACCRUED.LISB.HIST     |  *T23725 cindy 03/01/1999 * missing task 22155 from 10b
0024 *T24587 gil 11/22/1999 * Correct DIV on Reversed Voucher recor  |  *T23499 rick 08/30/1999 * Modify pgm to look at new Outside.
0025 *T25304 cm 07/10/2000 * Do not create a blank OAP record when   |  *                         with seq numbers
0026 *                       record exists.                          <  

0027 *T25632 lanny 02/13/2001 * Voucher Numbers are Sub-valued in V  <  
0028 *T26387 lhelms 01/23/2002 * When you do not delete vouchers th  <  
0029 *                           account amount for each voucher on  <  
0030 *                           MCD record was added 1 to 2 to 3 e  <  
0031 *T25755 cmykleb 02/19/2002 * Modify pgm to look at the new OUT  <  
0032 *                            format with seq #'s.               <  
0033 *T26924 cmykleb 10/18/2002 * Reversal of partial payment of vo  <  

0034 *                            causes an incorrect A/P side entr  <  
0035 *T23880 lross 10/16/2002 * Include offset acct in ALH record f     *T23880 lross 10/16/2002 * Include offset acct in ALH record
0036 *                          PO's.                                   *                          PO's.
0037 *T27984 lross 03/02/2004 * Use orig check date in SQV.PAID.DAT  <  
0038 *T28779 lross 02/07/2006 * Retain identity of multiple same Pr  <  
0039 *                          lines.                               <  
0040 *ENDDOC                                                            *ENDDOC

0062 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0063 *COPY>APS.CPYLIB>AP.HIST                                           *COPY>APS.CPYLIB>AP.HIST
0064 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0065 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0066 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0067                                                                 >  *  TASK 17919
0068 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY
0069 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0070 *COPY>ICS.CPYLIB>CATEGORY.MISC                                     *COPY>ICS.CPYLIB>CATEGORY.MISC
0071 *COPY>JCS.CPYLIB>CATEGORY.OSP                                      *COPY>JCS.CPYLIB>CATEGORY.OSP

0106 EQU SVEND.CK.NO.PD TO SVEND.REC(12)                                EQU SVEND.CK.NO.PD TO SVEND.REC(12)
0107 EQU SVEND.OP.BAL   TO SVEND.REC(13)                                EQU SVEND.OP.BAL   TO SVEND.REC(13)
0108 **** SETUP FOR SYSTEM ERRMSGS                                      **** SETUP FOR SYSTEM ERRMSGS
0109 SYS.TYPE = 1                                                       SYS.TYPE = 1
0110 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0111 **** READ PROC BUFFER                                           |  *
0112 PROCREAD XX ELSE                                                |  *T23499 v
0113 ERRMSG = "MUST BE RUN FROM A PROC"                              |  ****** T23278 v
0114 GOTO 93000                                                      |  **
0115 END                                                             |  ***** READ PROC BUFFER

0116 DIV.CODE = XX<3>                                                |  *  PROCREAD XX ELSE
0117                                                                 >  *    ERRMSG = "MUST BE RUN FROM A PROC"
0118                                                                 >  *    GOTO 93000
0119                                                                 >  *  END
0120                                                                 >  **
0121                                                                 >  *  DIV.CODE = XX<3>
0122                                                                 >  **

0123                                                                 >  ****** T23278 ^
0124                                                                 >  *T23499 ^
0125 **** OPEN FILES                                                    **** OPEN FILES
0126 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSI     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MIS
0127 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSI     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MIS
0128 OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE IS MISSING'; GOTO     OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE IS MISSING'; GO
0129 OPEN '','MCD' TO MCD ELSE ERRMSG = 'MCD FILE IS MISSING'; GOTO     OPEN '','MCD' TO MCD ELSE ERRMSG = 'MCD FILE IS MISSING'; GO

0173 END                                                                END
0174 READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE             READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
0175 PERIOD.REC = 12                                                    PERIOD.REC = 12
0176 END                                                                END
0177 NUM.PERIODS = PERIOD.REC<1>                                        NUM.PERIODS = PERIOD.REC<1>
0178                                                                 >  *T23499 v
0179 ***** T23278 v                                                     ***** T23278 v
0180 READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE           |  *  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
0181 ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"                  |  *      ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
0182 GOTO 93000                                                      |  *      GOTO 93000

0183 END                                                             |  *  END
0184 READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE        |  *  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
0185 ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"               |  *      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"
0186 GOTO 93000                                                      |  *      GOTO 93000
0187 END                                                             |  *  END
0188 *                                                               |  **
0189 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         |  *  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN

0190 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN                     |  *      IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
0191 ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING &  |  *          ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LE
0192 GOSUB 91000; GOTO 99999                                         |  *          GOSUB 91000; GOTO 99999
0193 END                                                             |  *      END
0194 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE           |  *      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
0195 ERRMSG = "Division ":DIV.CODE:" not found in Control File DIVI  |  *          ERRMSG = "Division ":DIV.CODE:" not found in Cont
0196 GOTO 93000                                                      |  *          GOTO 93000

0197 END                                                             |  *      END
0198 END ELSE                                                        |  *  END ELSE
0199 POS = 1                                                         |  *      POS = 1
0200 END                                                             |  *  END
0201 *  IF FR.CURR.PER[5,2] < 1 OR FR.CURR.PER[5,2] > NUM.PERIODS T  |  IF FR.CURR.PER[5,2] < 1 OR FR.CURR.PER[5,2] > NUM.PERIODS TH
0202 IF FR.CURR.PER<1,POS>[5,2] < 1 OR FR.CURR.PER<1,POS>[5,2] > NU  |  *  IF FR.CURR.PER<1,POS>[5,2] < 1 OR FR.CURR.PER<1,POS>[5,2]
0203 ***** T23278 ^                                                  |  ****** T23278 ^

0204                                                                 >  *T23499 ^
0205 ERRMSG = "ERROR IN CONTROL RECORD 'APDFISCAL'"; GOTO 93000         ERRMSG = "ERROR IN CONTROL RECORD 'APDFISCAL'"; GOTO 93000
0206 END                                                                END
0207 IF CO.FAS = "Y" THEN                                               IF CO.FAS = "Y" THEN
0208 OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE I     OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE
0209 OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSING     OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSI
0210 END                                                                END

0229 MATREADU DCR.REC FROM DAILY.CHECK.REVERSAL, VOU.ID ELSE            MATREADU DCR.REC FROM DAILY.CHECK.REVERSAL, VOU.ID ELSE
0230 RELEASE DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999                    RELEASE DAILY.CHECK.REVERSAL, VOU.ID; GOTO 1999
0231 END                                                                END
0232 DCR.STATUS = ""                                                    DCR.STATUS = ""
0233 PROG.FLAG = "MANUAL"                                               PROG.FLAG = "MANUAL"
0234                                                                 >  * TASK 17919
0235 MCD.CHECK=DCR.CHECK.NO                                             MCD.CHECK=DCR.CHECK.NO
0236 MCD.BANK.ACCT=DCR.DISB.ACCT                                        MCD.BANK.ACCT=DCR.DISB.ACCT
0237 MCD.NO.OF.CHK=1                                                    MCD.NO.OF.CHK=1
0238 MCD.GRS.AMT=DCR.GRS.AMT * (-1)                                     MCD.GRS.AMT=DCR.GRS.AMT * (-1)

0238 MCD.GRS.AMT=DCR.GRS.AMT * (-1)                                     MCD.GRS.AMT=DCR.GRS.AMT * (-1)
0239 MCD.DSC.AMT=DCR.DSC.AMT * (-1)                                     MCD.DSC.AMT=DCR.DSC.AMT * (-1)
0240 MCD.NET.AMT=((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))                   MCD.NET.AMT=((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
0241 MCD.CHK.DATE=TODAY                                                 MCD.CHK.DATE=TODAY
0242 MCD.VEND=DCR.VEND<1,1>                                             MCD.VEND=DCR.VEND<1,1>
0243 MCD.MON=FR.CURR.PER<1,POS>;* T23278                             |  MCD.MON=FR.CURR.PER
0244                                                                 >  *T23499   MCD.MON=FR.CURR.PER<1,POS>;* T23278
0245                                                                 >  *
0246 GOSUB 2000                                                         GOSUB 2000
0247                                                                 >  *

0293 FOR D = 1 TO DCNT                                                  FOR D = 1 TO DCNT
0294 DPTR = 1                                                           DPTR = 1
0295 LOOP                                                               LOOP
0296 ADD.ACCT = 0                                                       ADD.ACCT = 0
0297 LOCATE SQV.ACCT<1,D> IN ALL.ACCT<1>,DPTR SETTING DFND THEN         LOCATE SQV.ACCT<1,D> IN ALL.ACCT<1>,DPTR SETTING DFND THEN
0298                                                                 >  *             IF ALL.AMT<1,DFND> # ALL.NET<1,D> THEN
0299                                                                 >  *               ADD.ACCT = 1
0300                                                                 >  *             END
0301                                                                 >  * CSF 17770 COMMENT OUT ABOVE 3 LINES - (LMR)
0302 NULL                                                               NULL

0329 DPTR = 0                                                           DPTR = 0
0330 END CASE                                                           END CASE
0331 WHILE DPTR DO                                                      WHILE DPTR DO
0332 REPEAT                                                             REPEAT
0333 NEXT D                                                             NEXT D
0334                                                                 >  *
0335                                                                 >  * A/P details    TASK 17919
0336                                                                 >  *
0337 AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")                  AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")
0338 FOR AP=1 TO AP.CNT                                                 FOR AP=1 TO AP.CNT

0339 LOCATE SQV.AP.ACCT<1,AP> IN AP.ACCT<1>,1 SETTING AFND ELSE         LOCATE SQV.AP.ACCT<1,AP> IN AP.ACCT<1>,1 SETTING AFND ELSE
0340 AP.ACCT<1,AFND>=SQV.AP.ACCT<1,AP>                                  AP.ACCT<1,AFND>=SQV.AP.ACCT<1,AP>
0341 APDIV<1,AFND> =SQV.AP.DIV<1,AP>                                 |  APDIV<1,AFND>=SQV.AP.DIV<1,AP>
0342 APDEPT<1,AFND>=SQV.AP.DEPT<1,AP>                                   APDEPT<1,AFND>=SQV.AP.DEPT<1,AP>
0343 APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>                                   APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>
0344 AP.AMT<1,AFND>=0                                                   AP.AMT<1,AFND>=0
0345 END                                                                END
0346 AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>                   AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>
0347 NEXT AP                                                            NEXT AP

0348                                                                 >  *
0349 PTR = 0                                                            PTR = 0
0350 END CASE                                                           END CASE
0351 WHILE PTR DO                                                       WHILE PTR DO
0352 REPEAT                                                             REPEAT
0353 NEXT TR                                                            NEXT TR
0354 IF PAID.AMT = APCK.AMT THEN                                        IF PAID.AMT = APCK.AMT THEN

0429 VCH.DUE.DATE = DCR.DUE.DATE                                        VCH.DUE.DATE = DCR.DUE.DATE
0430 VCH.GRS.AMT = DCR.GRS.AMT * (-1)                                   VCH.GRS.AMT = DCR.GRS.AMT * (-1)
0431 VCH.MER.AMT = DCR.MER.AMT * (-1)                                   VCH.MER.AMT = DCR.MER.AMT * (-1)
0432 VCH.DSC.AMT = DCR.DSC.AMT * (-1)                                   VCH.DSC.AMT = DCR.DSC.AMT * (-1)
0433 VCH.CTR = DL.CTR                                                   VCH.CTR = DL.CTR
0434                                                                 >  * 15238
0435 XX.MON = FIELD(VOU.ID,"!",4)                                       XX.MON = FIELD(VOU.ID,"!",4)
0436 VCH.DESC = "CHECK REVERSAL"                                        VCH.DESC = "CHECK REVERSAL"
0437 VCH.JOB = ''                                                       VCH.JOB = ''
0438 VCH.PO = DCR.PO                                                    VCH.PO = DCR.PO

0442 MAT SQV.REC = ""                                                   MAT SQV.REC = ""
0443 END                                                                END
0444 LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1> SETTING CHK.LOC ELSE CHK.     LOCATE DCR.CHECK.NO IN SQV.CHK.NO<1> SETTING CHK.LOC ELSE CH
0445 SQV.CHK.NO<1,CHK.LOC>="DELETE"                                     SQV.CHK.NO<1,CHK.LOC>="DELETE"
0446 MATWRITE SQV.REC ON SQV, CONO:DCR.VOUCH<1,TR>                      MATWRITE SQV.REC ON SQV, CONO:DCR.VOUCH<1,TR>
0447 *T25304 v                                                       |  MATREADU OAP.REC FROM OAP, CONO:DCR.VOUCH<1,TR> ELSE
0448 *     MATREADU OAP.REC FROM OAP, CONO:DCR.VOUCH<1,TR> ELSE      |  MAT OAP.REC = ""
0449 *        MAT OAP.REC = ""                                       |  END
0450 *     END                                                       <  
0451 MATREADU OAP.REC FROM OAP, CONO:DCR.VOUCH<1,TR> THEN            <  

0452 *T25304 ^                                                       <  
0453 REM OAP.PAID.DATE=''                                               REM OAP.PAID.DATE=''
0454 REM OAP.DISB.ACCT=''                                               REM OAP.DISB.ACCT=''
0455 OAP.CHK.NO = "DELETE"                                              OAP.CHK.NO = "DELETE"
0456 MATWRITE OAP.REC ON OAP, CONO:DCR.VOUCH<1,TR>                      MATWRITE OAP.REC ON OAP, CONO:DCR.VOUCH<1,TR>
0457 END ; *T25304                                                   <  
0458 VOUCH.NO = DCR.VOUCH<1,TR>                                         VOUCH.NO = DCR.VOUCH<1,TR>

0504 CASE 1                                                             CASE 1
0505 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VVOS.PO.NO<1,VV> ELSE MA     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VVOS.PO.NO<1,VV> ELSE 
0506 POPTR = 1                                                          POPTR = 1
0507 LOOP                                                               LOOP
0508 LOCATE VVOS.PROD<1,VV> IN OPO.JOB.NO<1>,POPTR SETTING POFND TH     LOCATE VVOS.PROD<1,VV> IN OPO.JOB.NO<1>,POPTR SETTING POFND 
0509 *T25755 v                                                       |  *T23499 v
0510 *                       IF VVOS.WHSE<1,VV> = OPO.PROD.LINE<1,P  |  ***                              IF VVOS.WHSE<1,VV> = OPO.PR
0511 IF VVOS.PO.SEQ<1,VV> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0        IF VVOS.PO.SEQ<1,VV> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
0512 *T25755 ^                                                       |  *T23499 ^
0513 END ELSE                                                           END ELSE

0515 END                                                                END
0516 WHILE POPTR DO                                                     WHILE POPTR DO
0517 POPTR = POFND + 1                                                  POPTR = POFND + 1
0518 REPEAT                                                             REPEAT
0519 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POFND     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POF
0520                                                                 >  ACCRUE.FLAG = OPO.ACCRUE
0521 *** T24522 v                                                       *** T24522 v
0522 ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>                               ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>
0523 ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>                              ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>
0524 ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>                              ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>

0525 *** T24522^                                                        *** T24522^
0526 ACCRUE.FLAG = OPO.ACCRUE                                        <  
0527 ACCRUE.REF = "O*":VVOS.PO.NO<1,VV>:"*":VVOS.PROD<1,VV>             ACCRUE.REF = "O*":VVOS.PO.NO<1,VV>:"*":VVOS.PROD<1,VV>
0528 ACCRUE.SRC = "OV"                                                  ACCRUE.SRC = "OV"
0529 ACCRUE.ACCT = CAOS.ACCRU.LIAB                                      ACCRUE.ACCT = CAOS.ACCRU.LIAB
0530 ACCRUE.OFFACCT = CAOS.WIP ;*T23880                                 ACCRUE.OFFACCT = CAOS.WIP ;*T23880
0531 END CASE                                                           END CASE
0532 IF ACCRUE.FLAG = "Y" THEN                                          IF ACCRUE.FLAG = "Y" THEN

0551 VSTAT.KEY = CONO:DCR.VEND<1,1>:"!":TYPE                            VSTAT.KEY = CONO:DCR.VEND<1,1>:"!":TYPE
0552 VPS.KEY = VSTAT.KEY :"!": VVOS.PO.NO<1,VV>                         VPS.KEY = VSTAT.KEY :"!": VVOS.PO.NO<1,VV>
0553 IF TYPE = 'M' THEN                                                 IF TYPE = 'M' THEN
0554 VPDS.KEY = VPS.KEY :"!": VVOS.SEQ.NO<1,VV> :"!": VVOS.WHSE<1,V     VPDS.KEY = VPS.KEY :"!": VVOS.SEQ.NO<1,VV> :"!": VVOS.WHSE<1
0555 END ELSE                                                           END ELSE
0556 *T25755 v                                                       |  *T23499 v
0557 *              VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!":   |  IF TYPE = "O" THEN
0558 *T28779 IF TYPE = "O" THEN                                      <  
0559 IF TYPE = "O" OR TYPE = 'R' THEN                                <  
0560 VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>     VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,V

0559 IF TYPE = "O" OR TYPE = 'R' THEN                                <  
0560 VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>     VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,V
0561 END ELSE                                                           END ELSE
0562 VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,VV>     VPDS.KEY = VPS.KEY :"!": VVOS.PROD<1,VV> :"!": VVOS.WHSE<1,V
0563 END                                                                END
0564 *T25755 ^                                                       |  *T23499 ^
0565 END                                                                END
0566 MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY THEN              MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY THEN
0567 *T25632 v                                                       |  LOCATE VOUCH.NO IN VPDS.VOU.NO<1> SETTING VAL THEN
0568 FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1                |  DEL VPDS.VOU.NO<1,VAL>

0569 *            LOCATE VOUCH.NO IN VPDS.VOU.NO<1> SETTING VAL THE  |  DEL VPDS.VOU.DATE<1,VAL>
0570 LOCATE VOUCH.NO IN VPDS.VOU.NO<1,VVV>,1 SETTING VAL THEN        |  DEL VPDS.INV.NO<1,VAL>
0571 *               DEL VPDS.VOU.NO<1,VAL>                          |  DEL VPDS.INV.DATE<1,VAL>
0572 DEL VPDS.VOU.NO<1,VVV,VAL>                                      |  DEL VPDS.QTY<1,VAL>
0573 *               DEL VPDS.VOU.DATE<1,VAL>                        |  DEL VPDS.UN.COST<1,VAL>
0574 DEL VPDS.VOU.DATE<1,VVV,VAL>                                    |  DEL VPDS.PERIOD<1,VAL>
0575 *               DEL VPDS.INV.NO<1,VAL>                          |  DEL VPDS.ENT.FLG<1,VAL>

0576 DEL VPDS.INV.NO<1,VVV,VAL>                                      <  
0577 *               DEL VPDS.INV.DATE<1,VAL>                        <  
0578 DEL VPDS.INV.DATE<1,VVV,VAL>                                    <  
0579 *               DEL VPDS.QTY<1,VAL>                             <  
0580 DEL VPDS.QTY<1,VVV,VAL>                                         <  
0581 *               DEL VPDS.UN.COST<1,VAL>                         <  
0582 DEL VPDS.UN.COST<1,VVV,VAL>                                     <  

0583 *               DEL VPDS.PERIOD<1,VAL>                          <  
0584 DEL VPDS.PERIOD<1,VVV,VAL>                                      <  
0585 *               DEL VPDS.ENT.FLG<1,VAL>                         <  
0586 DEL VPDS.ENT.FLG<1,VVV,VAL>                                     <  
0587 END                                                             <  
0588 NEXT VVV                                                        <  
0589 *T25632 ^                                                       <  

0590 IF VPDS.ORD.DATE='' AND VPDS.REC.DATE='' AND VPDS.VOU.DATE=''      IF VPDS.ORD.DATE='' AND VPDS.REC.DATE='' AND VPDS.VOU.DATE='
0591 DELETE VEND.PROD.STATS, VPDS.KEY                                   DELETE VEND.PROD.STATS, VPDS.KEY
0592 END ELSE                                                           END ELSE
0593 MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY                     MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
0594 END                                                                END
0595                                                                 >  END
0596 END ELSE                                                           END ELSE
0597 RELEASE VEND.PROD.STATS, VPDS.KEY                                  RELEASE VEND.PROD.STATS, VPDS.KEY
0598 END                                                                END
0599 MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY THEN                  MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY THEN

0606 END                                                                END
0607 MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY                         MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
0608 END                                                                END
0609 END ELSE                                                           END ELSE
0610 * (TYPE NOT 'M')                                                   * (TYPE NOT 'M')
0611 *T28779 v                                                       |  LOCATE VVOS.PROD<1,VV> IN VPS.PROD<1> SETTING VAL THEN
0612 PPTR=1                                                          <  
0613 LOOP                                                            <  
0614 *         LOCATE VVOS.PROD<1,VV> IN VPS.PROD<1> SETTING VAL TH  <  
0615 LOCATE VVOS.PROD<1,VV> IN VPS.PROD<1>,PPTR SETTING VAL THEN     <  

0616 IF VVOS.WHSE<1,VV>:"@":VVOS.PO.SEQ<1,VV> = VPS.WHSE<1,VAL> THE  <  
0617 PPTR = 0                                                        <  
0618 END                                                             <  
0619 END ELSE PPTR = 0                                               <  
0620 UNTIL PPTR = 0 DO                                               <  
0621 PPTR += 1                                                       <  
0622 REPEAT                                                          <  

0623 *T28779 ^                                                       <  
0624 VPS.VOU.QTY<1,VAL> = VPS.VOU.QTY<1,VAL> - VVOS.VOU.QTY<1,VV>       VPS.VOU.QTY<1,VAL> = VPS.VOU.QTY<1,VAL> - VVOS.VOU.QTY<1,VV>
0625 VPS.VOU.AMT<1,VAL> = VPS.VOU.AMT<1,VAL> - VVOS.PROD.COST<1,VV>     VPS.VOU.AMT<1,VAL> = VPS.VOU.AMT<1,VAL> - VVOS.PROD.COST<1,V
0626 LOCATE VOUCH.NO IN VPS.VOU.NO<1,VAL> SETTING VAL2 THEN             LOCATE VOUCH.NO IN VPS.VOU.NO<1,VAL> SETTING VAL2 THEN
0627 DEL VPS.VOU.NO<1,VAL,VAL2>                                         DEL VPS.VOU.NO<1,VAL,VAL2>
0628 END                                                                END
0629 MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY                         MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY

0630 *T28779 ^   END                                                 <  
0631 END                                                                END
0632                                                                 >  END
0633 END ELSE                                                           END ELSE
0634 RELEASE VEND.PO.STATS, VPS.KEY                                     RELEASE VEND.PO.STATS, VPS.KEY
0635 END                                                                END
0636 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY THEN                 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY THEN

0689 AP.CNT=1                                                           AP.CNT=1
0690 AP.ACCT=GLTB.AP                                                    AP.ACCT=GLTB.AP
0691 AP.AMT=DCR.GRS.AMT                                                 AP.AMT=DCR.GRS.AMT
0692 AP.NET=DCR.GRS.AMT                                                 AP.NET=DCR.GRS.AMT
0693 *T19149 V                                                          *T19149 V
0694 ***** T23278 v                                                  <  
0695 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> "Y" THEN           <  
0696 VCH.DIV = DIV.CODE                                              <  
0697 END ELSE                                                        <  
0698 ***** T23278 ^                                                  <  

0699 VCH.DIV = GEN.DIV                                                  VCH.DIV = GEN.DIV
0700 END ;* T23278                                                   <  
0701 VCH.DEPT = GEN.DEPT                                                VCH.DEPT = GEN.DEPT
0702 VCH.CCTR = GEN.CCTR                                                VCH.CCTR = GEN.CCTR
0703 *T19149 ^                                                          *T19149 ^      
0704 VCH.ACCT=GLTB.AP                                                   VCH.ACCT=GLTB.AP
0705 VCH.DIST.AMT=DCR.GRS.AMT                                           VCH.DIST.AMT=DCR.GRS.AMT
0706 SUPP=DCR.CTR + 1                                                   SUPP=DCR.CTR + 1

0714 FOR A=1 TO AP.CNT                                                  FOR A=1 TO AP.CNT
0715 IF AP.NET<1,A>+0#0 THEN                                            IF AP.NET<1,A>+0#0 THEN
0716 VCH.ACCT=AP.ACCT<1,A>                                              VCH.ACCT=AP.ACCT<1,A>
0717 VCH.DIST.AMT=AP.NET<1,A>                                           VCH.DIST.AMT=AP.NET<1,A>
0718 *T19149 v                                                          *T19149 v
0719 *                 VCH.DIV =  AP.DIV<1,A,1>                      |  VCH.DIV = AP.DIV <1,A,1>
0720 VCH.DIV =  APDIV<1,A,1>   ;* T24587                             |  VCH.DEPT = AP.DEPT<1,A,1>
0721 *                 VCH.DEPT = AP.DEPT<1,A,1>                     |  VCH.CCTR = AP.CCTR<1,A,1>
0722 VCH.DEPT = APDEPT<1,A,1>   ;* T24587                            <  
0723 *                 VCH.CCTR = AP.CCTR<1,A,1>                     <  

0724 VCH.CCTR = APCCTR<1,A,1>   ;* T24587                            <  
0725 *T19149 ^                                                          *T19149 ^            
0726 SUPP=SUPP+1                                                        SUPP=SUPP+1
0727 MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'           MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
0728 WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'               WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
0729 END                                                                END
0730 NEXT A                                                             NEXT A

0782 AP.VOUCH.NET=AP.NET<1,AP>                                          AP.VOUCH.NET=AP.NET<1,AP>
0783 AP.KEY=CONO:"V":AP.ACCT<1,AP>:TODAY:MCD.CHECK:"!AP"                AP.KEY=CONO:"V":AP.ACCT<1,AP>:TODAY:MCD.CHECK:"!AP"
0784 MATWRITE AP.REC ON MCD,AP.KEY                                      MATWRITE AP.REC ON MCD,AP.KEY
0785 WRITE '' ON MCD.TAG,AP.KEY                                         WRITE '' ON MCD.TAG,AP.KEY
0786 NEXT AP                                                            NEXT AP
0787                                                                 >  * THE ABOVE WAS COMMENTED OUT AND BELOW INSERTED AT SOME POI
0788                                                                 >  * ABOVE IS CORRECT (LMR) 5/8/95
0789                                                                 >  *        ALL.CNT = DCOUNT(ALL.ACCT,VM)
0790                                                                 >  *        FOR AC = 1 TO ALL.CNT
0791                                                                 >  *           AP.BANK.ACCT = ALL.ACCT<1,AC>

0792                                                                 >  *           AP.DIV = ALL.DIV<1,AC>
0793                                                                 >  *           AP.DEPT = ALL.DEPT<1,AC>
0794                                                                 >  *           AP.CCTR = ALL.CCTR<1,AC>
0795                                                                 >  *           AP.VOUCH="REVERS"
0796                                                                 >  *           AP.VOUCH.GRS = 0 - ALL.AMT<1,AC>
0797                                                                 >  *           AP.VOUCH.DSC = 0
0798                                                                 >  *           AP.VOUCH.NET = 0 - ALL.AMT<1,AC>

0799                                                                 >  *           AP.KEY=CONO:"V":AP.ACCT<1,AP>:TODAY:MCD.CHECK:"!
0800                                                                 >  *           MATWRITE AP.REC ON MCD,AP.KEY
0801                                                                 >  *           WRITE '' ON MCD.TAG,AP.KEY
0802                                                                 >  *        NEXT AC
0803                                                                 >  *
0804 END ELSE            ;*  DCR.REV.FLAG # Y                           END ELSE            ;*  DCR.REV.FLAG # Y
0805 PAID.AMT = 0                                                       PAID.AMT = 0

0855 DPTR = 0                                                           DPTR = 0
0856 END CASE                                                           END CASE
0857 WHILE DPTR DO                                                      WHILE DPTR DO
0858 REPEAT                                                             REPEAT
0859 NEXT D                                                             NEXT D
0860                                                                 >  *
0861                                                                 >  *   TASK 17919
0862                                                                 >  *
0863 AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")                  AP.CNT=COUNT(SQV.AP.ACCT,VM) + (SQV.AP.ACCT # "")
0864 FOR AP=1 TO AP.CNT                                                 FOR AP=1 TO AP.CNT

0869 APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>                                   APCCTR<1,AFND>=SQV.AP.CCTR<1,AP>
0870 AP.AMT<1,AFND>=0                                                   AP.AMT<1,AFND>=0
0871 END                                                                END
0872 AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>                   AP.AMT<1,AFND>=AP.AMT<1,AFND> - SQV.AP.AMT<1,AP>
0873 NEXT AP                                                            NEXT AP
0874                                                                 >  *
0875 PTR = 0                                                            PTR = 0
0876 END CASE                                                           END CASE
0877 WHILE PTR DO                                                       WHILE PTR DO
0878 REPEAT                                                             REPEAT

0882 END                                                                END
0883 CCNT = COUNT(SQV.CHK.NO,VM) + (SQV.CHK.NO # "") + 1                CCNT = COUNT(SQV.CHK.NO,VM) + (SQV.CHK.NO # "") + 1
0884 REM SQV.CHK.NO<1,CCNT> = SQV.CHK.NO<1,FND>                         REM SQV.CHK.NO<1,CCNT> = SQV.CHK.NO<1,FND>
0885 SQV.CHK.NO<1,CCNT> = "REVERS"                                      SQV.CHK.NO<1,CCNT> = "REVERS"
0886 SQV.DISB.ACCT<1,CCNT> = SQV.DISB.ACCT<1,FND>                       SQV.DISB.ACCT<1,CCNT> = SQV.DISB.ACCT<1,FND>
0887 *T27984 v                                                       |  SQV.PAID.DATE<1,CCNT> = TODAY
0888 *   SQV.PAID.DATE<1,CCNT> = TODAY                               <  
0889 SQV.PAID.DATE<1,CCNT> = APCK.DATE                               <  
0890 SQV.PAID.AMT<1,CCNT> = SQV.PAID.AMT<1,FND> * (-1)                  SQV.PAID.AMT<1,CCNT> = SQV.PAID.AMT<1,FND> * (-1)
0891 SQV.DSC.PAID<1,CCNT> = SQV.DSC.PAID<1,FND> * (-1)                  SQV.DSC.PAID<1,CCNT> = SQV.DSC.PAID<1,FND> * (-1)

0898 END ELSE                                                           END ELSE
0899 MAT OAP.REC = ""                                                   MAT OAP.REC = ""
0900 OAP.VEND = SQV.VEND                                                OAP.VEND = SQV.VEND
0901 OAP.INV = SQV.INV                                                  OAP.INV = SQV.INV
0902 OAP.INV.DATE = SQV.INV.DATE                                        OAP.INV.DATE = SQV.INV.DATE
0903                                                                 >  * OAP.DUE.DATE = SQV.INV.DATE
0904 OAP.MER.AMT = SQV.MER.AMT                                          OAP.MER.AMT = SQV.MER.AMT
0905 IF SQV.DUE.DATE = "ADVANCE" THEN                                   IF SQV.DUE.DATE = "ADVANCE" THEN
0906 OAP.GRS.AMT = SQV.GRS.AMT * (-1)                                   OAP.GRS.AMT = SQV.GRS.AMT * (-1)
0907 OAP.DSC.AMT = SQV.DSC.AMT * (-1)                                   OAP.DSC.AMT = SQV.DSC.AMT * (-1)

0923 OAP.DIV = SQV.DIV                                                  OAP.DIV = SQV.DIV
0924 OAP.DEPT = SQV.DEPT                                                OAP.DEPT = SQV.DEPT
0925 OAP.CCTR = SQV.CCTR                                                OAP.CCTR = SQV.CCTR
0926 OAP.MON = SQV.MON                                                  OAP.MON = SQV.MON
0927 OAP.COMMENT = SQV.COMMENT                                          OAP.COMMENT = SQV.COMMENT
0928                                                                 >  *
0929                                                                 >  *TASK 17919
0930 OAP.MISC.CAT=SQV.MISC.CAT                                          OAP.MISC.CAT=SQV.MISC.CAT
0931 OAP.AP.ACCT=SQV.AP.ACCT                                            OAP.AP.ACCT=SQV.AP.ACCT
0932 OAP.AP.AMT=SQV.AP.AMT                                              OAP.AP.AMT=SQV.AP.AMT

0933                                                                 >  *T19149 v
0934 OAP.AP.DIV=SQV.AP.DIV                                              OAP.AP.DIV=SQV.AP.DIV
0935 OAP.AP.DEPT=SQV.AP.DEPT                                            OAP.AP.DEPT=SQV.AP.DEPT
0936 OAP.AP.CCTR=SQV.AP.CCTR                                            OAP.AP.CCTR=SQV.AP.CCTR
0937                                                                 >  *T19149 ^      
0938                                                                 >  *T21956
0939 OAP.DIV.OWNER = SQV.DIV.OWNER                                      OAP.DIV.OWNER = SQV.DIV.OWNER

0940 END                                                                END
0941 OAP.DUE.DATE = SQV.DUE.DATE                                        OAP.DUE.DATE = SQV.DUE.DATE
0942                                                                 >  * OAP.PAID.DATE = TODAY
0943                                                                 >  * OAP.DISB.ACCT = SQV.DISB.ACCT<1,FND>
0944                                                                 >  * OAP.CHK.NO = SQV.CHK.NO<1,FND>
0945 OAP.PAID.DATE = ''                                                 OAP.PAID.DATE = ''
0946 OAP.DISB.ACCT = ''                                                 OAP.DISB.ACCT = ''
0947 OAP.CHK.NO = "REVERS"                                              OAP.CHK.NO = "REVERS"
0948 MATWRITE OAP.REC ON OAP, CONO : DCR.VOUCH<1,TR>                    MATWRITE OAP.REC ON OAP, CONO : DCR.VOUCH<1,TR>

0989 * Reverse voucher paid amts as per A/P distribution                * Reverse voucher paid amts as per A/P distribution
0990 *                                                                  *
0991 CALL AMOUNT.DIST.SUB(SQV.AP.ACCT,SQV.AP.AMT,PAID.GRS,AP.NET,0,     CALL AMOUNT.DIST.SUB(SQV.AP.ACCT,SQV.AP.AMT,PAID.GRS,AP.NET,
0992 ACNT=COUNT(SQV.AP.ACCT,VM)+(SQV.AP.ACCT#"")                        ACNT=COUNT(SQV.AP.ACCT,VM)+(SQV.AP.ACCT#"")
0993 FOR A=1 TO ACNT                                                    FOR A=1 TO ACNT
0994 *T26924 v                                                       <  
0995 IF AP.NET<1,A>+0#0 THEN                                            IF AP.NET<1,A>+0#0 THEN
0996 *T26924 ^                                                       <  
0997 *T26387 v   IF AP.AMT<1,A> + 0 # 0 THEN                         <  
0998 *T26924     IF SQV.AP.AMT<1,A> + 0 # 0 THEN                     <  

1007 AP.VOUCH<1,AF>=DCR.VOUCH<1,TR>                                     AP.VOUCH<1,AF>=DCR.VOUCH<1,TR>
1008 AP.VOUCH.GRS<1,AF>=0                                               AP.VOUCH.GRS<1,AF>=0
1009 AP.VOUCH.NET<1,AF>=0                                               AP.VOUCH.NET<1,AF>=0
1010 AP.VOUCH.DSC<1,AF>=0                                               AP.VOUCH.DSC<1,AF>=0
1011 END                                                                END
1012 *T26924 v                                                       <  
1013 AP.VOUCH.GRS<1,AF>=AP.VOUCH.GRS<1,AF>+AP.NET<1,A>                  AP.VOUCH.GRS<1,AF>=AP.VOUCH.GRS<1,AF>+AP.NET<1,A>
1014 AP.VOUCH.NET<1,AF>=AP.VOUCH.NET<1,AF>+AP.NET<1,A>                  AP.VOUCH.NET<1,AF>=AP.VOUCH.NET<1,AF>+AP.NET<1,A>
1015 *T26924 ^                                                       |  *T23725 v
1016 *T22155 v                                                          *T22155 v

1017 *T26387        AP.DIV<1,AF>=APDIV<1,A>                          |  AP.DIV<1,AF>=APDIV<1,A>
1018 AP.DIV<1,AF>=SQV.AP.DIV<1,A>                                    |  AP.DEPT<1,AF>=APDEPT<1,A>
1019 *T26387        AP.DEPT<1,AF>=APDEPT<1,A>                        |  AP.CCTR<1,AF>=APCCTR<1,A>
1020 AP.DEPT<1,AF>=SQV.AP.DEPT<1,A>                                  <  
1021 *T26387        AP.CCTR<1,AF>=APCCTR<1,A>                        <  
1022 AP.CCTR<1,AF>=SQV.AP.CCTR<1,A>                                  <  
1023 *T22155 ^                                                          *T22155 ^

1024                                                                 >  *T23725 ^
1025 MATWRITE AP.REC ON MCD,AP.KEY                                      MATWRITE AP.REC ON MCD,AP.KEY
1026 WRITE '' ON MCD.TAG,AP.KEY                                         WRITE '' ON MCD.TAG,AP.KEY
1027 END                                                                END
1028 NEXT A                                                             NEXT A
1029 1099*                                                              1099*
1030 NEXT TR                                                            NEXT TR

1049 VCH.DUE.DATE = DCR.DUE.DATE                                        VCH.DUE.DATE = DCR.DUE.DATE
1050 VCH.GRS.AMT = (DCR.GRS.AMT - PAID.AMT - PAID.DSC) * (-1)           VCH.GRS.AMT = (DCR.GRS.AMT - PAID.AMT - PAID.DSC) * (-1)
1051 VCH.MER.AMT = VCH.GRS.AMT                                          VCH.MER.AMT = VCH.GRS.AMT
1052 VCH.DSC.AMT = (DCR.DSC.AMT - PAID.DSC) * (-1)                      VCH.DSC.AMT = (DCR.DSC.AMT - PAID.DSC) * (-1)
1053 VCH.CTR = DCNT                                                     VCH.CTR = DCNT
1054                                                                 >  * 15238
1055 XX.MON = FIELD(VOU.ID,"!",4)                                       XX.MON = FIELD(VOU.ID,"!",4)
1056 VCH.DESC = "CHECK REVERSAL"                                        VCH.DESC = "CHECK REVERSAL"
1057 VCH.JOB = ''                                                       VCH.JOB = ''
1058 VCH.PO = DCR.PO                                                    VCH.PO = DCR.PO

1096 VCH.DIST.AMT=DCR.GRS.AMT - PAID.AMT - PAID.DSC                     VCH.DIST.AMT=DCR.GRS.AMT - PAID.AMT - PAID.DSC
1097 AP.CNT=1                                                           AP.CNT=1
1098 AP.ACCT=GLTB.AP                                                    AP.ACCT=GLTB.AP
1099 AP.NET=VCH.DIST.AMT                                                AP.NET=VCH.DIST.AMT
1100 AP.AMT=VCH.DIST.AMT                                                AP.AMT=VCH.DIST.AMT
1101 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         |  *T19149 v
1102 VCH.DIV = DIV.CODE                                              <  
1103 END ELSE                                                        <  
1104 VCH.DIV=GEN.DIV                                                    VCH.DIV=GEN.DIV
1105 END ;* T23278                                                   <  

1106 VCH.DEPT=GEN.DEPT                                                  VCH.DEPT=GEN.DEPT
1107 VCH.CCTR=GEN.CCTR                                                  VCH.CCTR=GEN.CCTR
1108                                                                 >  *T19149 ^        
1109 SUPP=DCNT+1                                                        SUPP=DCNT+1
1110 MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'           MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
1111 WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'               WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
1112 END                                                                END
1113 END ELSE                                                           END ELSE
1114 AP.GRS=DCR.GRS.AMT-PAID.AMT-PAID.DSC                               AP.GRS=DCR.GRS.AMT-PAID.AMT-PAID.DSC

1118 FOR AP=1 TO AP.CNT                                                 FOR AP=1 TO AP.CNT
1119 IF AP.NET<1,AP>+0 # 0 THEN                                         IF AP.NET<1,AP>+0 # 0 THEN
1120 VCH.ACCT=AP.ACCT<1,AP>                                             VCH.ACCT=AP.ACCT<1,AP>
1121 VCH.DIST.AMT=AP.NET<1,AP>                                          VCH.DIST.AMT=AP.NET<1,AP>
1122 *T19149 v                                                          *T19149 v
1123 *                     VCH.DIV = AP.DIV<1,AP,1>                  |  VCH.DIV = AP.DIV<1,AP,1>
1124 VCH.DIV = APDIV<1,AP,1>   ;* T24587                             |  VCH.DEPT = AP.DEPT<1,AP,1>
1125 *                     VCH.DEPT = AP.DEPT<1,AP,1>                |  VCH.CCTR = AP.CCTR<1,AP,1>
1126 VCH.DEPT = APDEPT<1,AP,1>   ;* T24587                           <  
1127 *                     VCH.CCTR = AP.CCTR<1,AP,1>                <  

1128 VCH.CCTR = APCCTR<1,AP,1>   ;* T24587                           <  
1129 *T19149 ^                                                          *T19149 ^          
1130 SUPP=SUPP+1                                                        SUPP=SUPP+1
1131 MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'           MATWRITE VCH.REC ON VOUCHERS, CONO:DCR.CHECK.NO:SUPP:'V'
1132 WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'               WRITE '' ON VOUCHERS.TAG, CONO:DCR.CHECK.NO:SUPP:'V'
1133 END                                                                END
1134 NEXT AP                                                            NEXT AP

1260 MCD.GRS.AMT = DCR.GRS.AMT * (-1)                                   MCD.GRS.AMT = DCR.GRS.AMT * (-1)
1261 MCD.DSC.AMT = DCR.DSC.AMT * (-1)                                   MCD.DSC.AMT = DCR.DSC.AMT * (-1)
1262 MCD.NET.AMT = ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))                 MCD.NET.AMT = ((DCR.GRS.AMT - DCR.DSC.AMT) * (-1))
1263 MCD.CHK.DATE = TODAY                                               MCD.CHK.DATE = TODAY
1264 MCD.VEND = DCR.VEND<1,1>                                           MCD.VEND = DCR.VEND<1,1>
1265 MCD.MON = FR.CURR.PER<1,POS>;* T23278                           |  MCD.MON = FR.CURR.PER
1266                                                                 >  *T23499   MCD.MON = FR.CURR.PER<1,POS>;* T23278
1267 MATWRITE MCD.REC ON MCD , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.CHE     MATWRITE MCD.REC ON MCD , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.C
1268 TAG = ''                                                           TAG = ''
1269 WRITE TAG ON MCD.TAG , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.CHECK      WRITE TAG ON MCD.TAG , CONO:"V":DCR.DISB.ACCT:TODAY:MCD.CHEC

1292 NEXT AG                                                            NEXT AG
1293 END                                                                END
1294 DELETE DAILY.CHECK.REVERSAL, VOU.ID                                DELETE DAILY.CHECK.REVERSAL, VOU.ID
1295 1999 RETURN                                                        1999 RETURN
1296 *                                                                  *
1297                                                                 >  *  TASK 20000
1298                                                                 >  *
1299 * Set up A/P MCD record                                            * Set up A/P MCD record
1300 *                                                                  *
1301 2000*                                                              2000*

1306 AP.NET.AMT=MCD.NET.AMT                                             AP.NET.AMT=MCD.NET.AMT
1307 AP.CHK.DATE=MCD.CHK.DATE                                           AP.CHK.DATE=MCD.CHK.DATE
1308 AP.VEND=MCD.VEND                                                   AP.VEND=MCD.VEND
1309 AP.MON=MCD.MON                                                     AP.MON=MCD.MON
1310 *T19149 v                                                          *T19149 v
1311 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         <  
1312 AP.DIV = DIV.CODE                                               <  
1313 END ELSE                                                        <  
1314 AP.DIV=GEN.DIV                                                     AP.DIV=GEN.DIV
1315 END ;* T23278                                                   <  


APSBP/CKPRT                                                        /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CKPRT
Printed for thompson at 06/28/2006 04:09:02PM

0024 *T23444 gat 11/18/1998 * Fix spacing at end of Void check on r     *T23444 gat 11/18/1998 * Fix spacing at end of Void check on
0025 *T23458 lanny 11/23/1998 * Disallow starting check number prio     *T23458 lanny 11/23/1998 * Disallow starting check number pr
0026 *                          PCS.LST.CHK.NO                          *                          PCS.LST.CHK.NO
0027 *T26357 lross 12/20/2001 * If laser print start VOID should no     *T26357 lross 12/20/2001 * If laser print start VOID should 
0028 *                          starting check#.                        *                          starting check#.
0029 *T26493 cmykleb 04/17/2002 * Change pgm/proc to use REPORT.SCR  |  *T28917 wvaughan 05/24/2006 * Remove a space from the check 
0030 *T26556 cmykleb 05/21/2002 * Add remit comments to check stub.  |  *T28933 wvaughan 06/15/2006 * Removal of Task 28917
0031 *ENDDOC                                                            *ENDDOC
0032 *************************************************************      ************************************************************
0033 CLEAR                                                              CLEAR

0043 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0044 *COPY>PRS.CPYLIB>PRSCHECK.STATS                                    *COPY>PRS.CPYLIB>PRSCHECK.STATS
0045 *                                                                  *
0046 *---- PROCREAD                                                     *---- PROCREAD
0047 *                                                                  *
0048                                                                 >  *     PROCREAD BUFFER ELSE PRINT "MUST BE RUN FROM PROC PCKP
0049 PROCREAD BUFFER ELSE ERRMSG = "MUST BE RUN FROM PROC PCKPRT";G     PROCREAD BUFFER ELSE ERRMSG = "MUST BE RUN FROM PROC PCKPRT"
0050 CONO=BUFFER<1>                                                     CONO=BUFFER<1>
0051 MONTH=BUFFER<4>                                                    MONTH=BUFFER<4>
0052 *T26493 v                                                       |  DIV.OWNER=BUFFER<8>; * TASK 20269

0053 *  DIV.OWNER=BUFFER<8>                                          <  
0054 DIV.OWNER=BUFFER<6>                                             <  
0055 CKDT = BUFFER<4>                                                <  
0056 ACCT.NO=BUFFER<5>                                               <  
0057 CKNO=BUFFER<8>"R%6"                                             <  
0058 *T26493 ^                                                       <  
0059 *                                                                  *

0121 EOJ = ""                                                           EOJ = ""
0122 VENDOR<1,1> = ""                                                   VENDOR<1,1> = ""
0123 CHECK<1,1> = ""                                                    CHECK<1,1> = ""
0124 NUM.ALIGN = 0;REP=""                                               NUM.ALIGN = 0;REP=""
0125 *T22081 v                                                          *T22081 v
0126 **  This will check the SECURITY file to see if a laser record  |  *
0127 **  for this user.  If so, then it will use laser printer logi  |  **  This will check the SECURITY file to see if a laser reco
0128                                                                 >  **  this user.  If so, then it will use laser printer logic.
0129                                                                 >  *
0130 LASER.FLAG = ''                                                    LASER.FLAG = ''

0133 *                                                                  *
0134 *---- SETUP COMPANY INFORMATION                                    *---- SETUP COMPANY INFORMATION
0135 *                                                                  *
0136 MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG="COMPANY MISSIN     MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG="COMPANY MISS
0137 MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG="G     MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG=
0138                                                                 >  * TASK 20269
0139                                                                 >  *      READV CKDT FROM D.CKP,CONO:"CHECKDT",1 ELSE ERRMSG="C
0140                                                                 >  READV CKDT FROM D.CKP,CONO:"CHECKDT":DIV.OWNER,1 ELSE ERRMSG
0141                                                                 >  * TASK 20269
0142                                                                 >  *      MATREAD CHNO FROM CONTROL,CONO:"APCOUNTER" ELSE MAT C

0146 *                                                                  *
0147 *---- GET G/L NUMBER AND SETUP PRINT PROCESS                       *---- GET G/L NUMBER AND SETUP PRINT PROCESS
0148 *                                                                  *
0149 GOSUB 9500                                                         GOSUB 9500
0150 10 *                                                               10 *
0151 *T26493 v                                                       |  PRINT @(5,15):"ENTER DISBURSEMENT G/L ACCOUNT NUMBER :  ":;I
0152 *  PRINT @(5,15):"ENTER DISBURSEMENT G/L ACCOUNT NUMBER :  ":;  |  *     IF ACCT.NO="END" THEN STOP
0153 *  IF ACCT.NO="END" THEN PROCWRITE "END"; GOTO 99999            |  IF ACCT.NO="END" THEN PROCWRITE "END"; GOTO 99999
0154 *  IF ACCT.NO="" THEN GOTO 10                                   |  IF ACCT.NO="" THEN GOTO 10
0155 *  IF LEN(ACCT.NO) <MINL OR LEN(ACCT.NO) >MAXL THEN GOTO 10     |  IF LEN(ACCT.NO) <MINL OR LEN(ACCT.NO) >MAXL THEN GOTO 10

0156 *T26493 ^                                                       <  
0157 IF LEN(ACCT.NO) <MAXL THEN ACCT.NO=ACCT.NO:STR("0",MAXL-LEN(AC     IF LEN(ACCT.NO) <MAXL THEN ACCT.NO=ACCT.NO:STR("0",MAXL-LEN(
0158                                                                 >  * TASK 20269
0159                                                                 >  *      MATREAD PCS.REC FROM CHECK.STATS, CONO:ACCT.NO ELSE
0160 MATREAD PCS.REC FROM CHECK.STATS, CONO:ACCT.NO:"!":DIV.OWNER E     MATREAD PCS.REC FROM CHECK.STATS, CONO:ACCT.NO:"!":DIV.OWNER
0161                                                                 >  * TASK 20269
0162 MAT PCS.REC = ''                                                   MAT PCS.REC = ''

0161                                                                 >  * TASK 20269
0162 MAT PCS.REC = ''                                                   MAT PCS.REC = ''
0163 END                                                                END
0164 IF CO.GLS="Y" THEN                                                 IF CO.GLS="Y" THEN
0165 READV DESC FROM COA,CONO:ACCT.NO,1 ELSE                            READV DESC FROM COA,CONO:ACCT.NO,1 ELSE 
0166                                                                 >  *            PRINT @(5,16):"INVALID ACCOUNT NUMBER":BEL:
0167 PRINT @(5,16):"INVALID ACCOUNT NUMBER":                            PRINT @(5,16):"INVALID ACCOUNT NUMBER":
0168 *T26493 v                                                       |  INPUT ANSWER:
0169 *        INPUT ANSWER:                                          |  PRINT @(5,16):SP70:
0170 *        PRINT @(5,16):SP70:                                    |  GOTO 10

0171 *        GOTO 10                                                <  
0172 BUFFER<1> = "END"                                               <  
0173 PROCWRITE BUFFER                                                <  
0174 GOTO 99999                                                      <  
0175 *T26493 ^                                                       <  
0176 END                                                                END
0177 END                                                                END

0178 IF CO.GLS#"Y" THEN DESC=""                                         IF CO.GLS#"Y" THEN DESC=""
0179 *T26493 v                                                       |  PRINT @(46,15):ACCT.NO
0180 *  PRINT @(46,15):ACCT.NO                                       |  PRINT @(58,15):DESC"L#20":
0181 *  PRINT @(58,15):DESC"L#20":                                   |  PRINT @(5,16):"IS THIS WHAT YOU WANT (RET/N) :":;INPUT ANS
0182 *  PRINT @(5,16):"IS THIS WHAT YOU WANT (RET/N) :":;INPUT ANS   |  IF ANS#""  THEN GOTO 10
0183 *  IF ANS#""  THEN GOTO 10                                      <  
0184 *T26493 ^                                                       <  
0185 BANK.NO=ACCT.NO                                                    BANK.NO=ACCT.NO

0186 20 *                                                               20 *
0187 *T26493 v                                                       |  PRINT @(5,17):"CHECK PRINT ROUTINE":@(5,18):"ENTER STARTING 
0188 *  PRINT @(5,17):"CHECK PRINT ROUTINE":@(5,18):"ENTER STARTING  |  IF ANS = '/' THEN GOTO 10
0189 *  IF ANS = '/' THEN GOTO 10                                    |  IF ANS = "" THEN
0190 *  IF ANS = "" THEN                                             |  * TASK 20269
0191 *     GOTO 20                                                   |  *         ANS = CHNO(1)+1
0192 *  END                                                          |  GOTO 20
0193 *  IF NOT(NUM(ANS)) OR LEN(ANS)>6 THEN GOTO 20                  |  * TASK 20269

0194 *  CKNO = STR("0",6-LEN(ANS)):ANS                               |  END
0195 *T26493 ^                                                       |  IF NOT(NUM(ANS)) OR LEN(ANS)>6 THEN GOTO 20
0196                                                                 >  CKNO = STR("0",6-LEN(ANS)):ANS
0197 *T23458 v                                                          *T23458 v
0198 PCS.LST.MV.NO = DCOUNT(PCS.VOID.DATE,VM)                           PCS.LST.MV.NO = DCOUNT(PCS.VOID.DATE,VM)
0199 IF PCS.LST.CHK.NO > 0 AND CKNO <= PCS.LST.CHK.NO THEN              IF PCS.LST.CHK.NO > 0 AND CKNO <= PCS.LST.CHK.NO THEN
0200 IF ICONV(CKDT,'D2/') > ICONV(PCS.VOID.DATE<1,PCS.LST.MV.NO>,'D     IF ICONV(CKDT,'D2/') > ICONV(PCS.VOID.DATE<1,PCS.LST.MV.NO>,

0201 PRINT @(5,12):@(-3):"THIS CHECK ALREADY ON BANK FILE! HIT RET   |  PRINT @(5,19):"THIS CHECK ALREADY ON BANK FILE! HIT RET ":;
I
0202 *T26493 v                                                       |  PRINT @(5,19):CL:
0203 *        PRINT @(5,19):CL:                                      |  GOTO 20
0204 *        GOTO 20                                                <  
0205 BUFFER<1> = "END"                                               <  
0206 PROCWRITE BUFFER                                                <  
0207 GOTO 99999                                                      <  

0208 *T26493 ^                                                       <  
0209 END                                                                END
0210 END                                                                END
0211 *T23458 ^                                                          *T23458 ^
0212 MATREAD APCK.REC FROM APCHECK,CONO:BANK.NO:CKNO ELSE GOTO 25       MATREAD APCK.REC FROM APCHECK,CONO:BANK.NO:CKNO ELSE GOTO 25
0213 PRINT @(5,12):@(-3):"THIS CHECK ALREADY ON BANK FILE! HIT RET   |  *      PRINT @(5,19):"THIS CHECK ALREADY ON BANK FILE! HIT R
0214 *T26493 v                                                       |  PRINT @(5,19):"THIS CHECK ALREADY ON BANK FILE! HIT RET ":;I

0215 *  PRINT @(5,19):CL:                                            |  PRINT @(5,19):CL:
0216 *  GOTO 20                                                      |  GOTO 20
0217 BUFFER<1> = "END"                                               <  
0218 PROCWRITE BUFFER                                                <  
0219 GOTO 99999                                                      <  
0220 *T26493 ^                                                       <  
0221 25*                                                                25*

0222 PRINT @(5,12):"CHECK PRINT NOW IN PROGRESS!!":                  |  PRINT @(5,19):"CHECK PRINT NOW IN PROGRESS!!":
0223                                                                 >  * TASK 20269
0224                                                                 >  *      READ REP FROM CONTROL,CONO:"REPRINT" ELSE REP = ""
0225 READ REP FROM CONTROL,CONO:"REPRINT": DIV.OWNER ELSE REP = ""      READ REP FROM CONTROL,CONO:"REPRINT": DIV.OWNER ELSE REP = "
0226                                                                 >  * TASK 20269      
0227                                                                 >  *      IF REP = "" THEN PCS.LST.MV.NO=DCOUNT(PCS.START.VOID,
0228                                                                 >  *

0229                                                                 >  *CSF 18153 CHANGED <1,-1> TO <1,NEW.MV>
0230 NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1                           NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
0231 IF REP = "" THEN PCS.LST.MV.NO = NEW.MV                            IF REP = "" THEN PCS.LST.MV.NO = NEW.MV
0232 PCS.START.UNUSED<1,NEW.MV> = PCS.LST.CHK.NO+1                      PCS.START.UNUSED<1,NEW.MV> = PCS.LST.CHK.NO+1
0233 PCS.END.UNUSED<1,NEW.MV> = CKNO-1                                  PCS.END.UNUSED<1,NEW.MV> = CKNO-1
0234 *T22081 v                                                          *T22081 v
0235 IF LASER.FLAG = '' THEN GOSUB 600;* Run alignment routine if n  |  IF LASER.FLAG = '' THEN GOSUB 600   ;* Run alignment routine

0249 PRINTER ON                                                         PRINTER ON
0250 *                                                                  *
0251 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0252 *                                                                  *
0253 100 *                                                              100 *
0254                                                                 >  *     PRINTER ON   CSF 23041 COMMENTED OUT SEE LINE2 210-211
0255 READNEXT ID ELSE EOJ=1;GOTO 300                                    READNEXT ID ELSE EOJ=1;GOTO 300
0256 WRITE "FLAG" ON D.CKP,CONO:"FLAG"                                  WRITE "FLAG" ON D.CKP,CONO:"FLAG"
0257 MATREAD CKP.REC FROM CKP,ID ELSE GOTO 100                          MATREAD CKP.REC FROM CKP,ID ELSE GOTO 100
0258 TTL=0;VNO=CKP.VEND                                                 TTL=0;VNO=CKP.VEND

0272 *T22081 ^                                                          *T22081 ^
0273 PRINT SP3:OCONV(CKP.GRS.AMT,"MD2,")"R#13":SP3:OCONV(CKP.DSC.AM     PRINT SP3:OCONV(CKP.GRS.AMT,"MD2,")"R#13":SP3:OCONV(CKP.DSC.
0274 IF CKP.GRS.AMT#TTL THEN PRINT "P";GOTO 250                         IF CKP.GRS.AMT#TTL THEN PRINT "P";GOTO 250
0275 PRINT                                                              PRINT
0276 250 LN=LN+1                                                        250   LN=LN+1
0277 *T26656 v                                                       <  
0278 IF CKP.REM.COMM # '' THEN                                       <  
0279 PRINT 'Remit Comments: ':CKP.REM.COMM                           <  
0280 LN = LN + 1                                                     <  
0281 END                                                             <  

0282 *T26656 ^                                                       <  
0283 TOT(1)=TOT(1)+CKP.GRS.AMT;TOT(2)=TOT(2)+CKP.DSC.AMT;TOT(3)=TOT     TOT(1)=TOT(1)+CKP.GRS.AMT;TOT(2)=TOT(2)+CKP.DSC.AMT;TOT(3)=T
0284 PREV.CKNO=STR("0",6-LEN(PREV.CKNO)):PREV.CKNO                      PREV.CKNO=STR("0",6-LEN(PREV.CKNO)):PREV.CKNO
0285 CKNO=STR("0",6-LEN(CKNO)):CKNO                                     CKNO=STR("0",6-LEN(CKNO)):CKNO
0286 CKP.PAID.AMT=CKP.GRS.AMT-CKP.DSC.AMT;CKP.PAID.DATE=ICONV(CKDT,     CKP.PAID.AMT=CKP.GRS.AMT-CKP.DSC.AMT;CKP.PAID.DATE=ICONV(CKD
0287 MATWRITE CKP.REC ON CKR,ID                                         MATWRITE CKP.REC ON CKR,ID
0288 HCTR=HCTR+1                                                        HCTR=HCTR+1

0289 PREV.VENDCKR=REPLACE(PREV.VENDCKR,1,HCTR,0,ID)                     PREV.VENDCKR=REPLACE(PREV.VENDCKR,1,HCTR,0,ID)
0290                                                                 >  *     PRINTER OFF
0291                                                                 >  *     PRINTER CLOSE
0292 GOTO 100                                                           GOTO 100
0293 *                                                                  *
0294 *---- FINISH CHECK STUB                                            *---- FINISH CHECK STUB
0295 *                                                                  *
0296 300 *                                                              300 *

0298 FOR Y=1 TO 14-LN                                                   FOR Y=1 TO 14-LN
0299 PRINT                                                              PRINT
0300 NEXT Y                                                             NEXT Y
0301 320 *                                                              320 *
0302 VNO1=EXTRACT(PREV.VEND,1,1,0)                                      VNO1=EXTRACT(PREV.VEND,1,1,0)
0303                                                                 >  *     PRINT;PRINT SP3:VNO1"L#8":SP6:CKDT"L#8":SP4:TOT(1)/100
0304 PRINT;PRINT SP3:VNO1"L#8":SP4:CKDT"L#8":SP3:OCONV(TOT(1),"MD2,     PRINT;PRINT SP3:VNO1"L#8":SP4:CKDT"L#8":SP3:OCONV(TOT(1),"MD
0305 PRINT SP3:OCONV(TOT(2),"MD2,")"R#12":SP3:OCONV(TOT(3),"MD2,")"     PRINT SP3:OCONV(TOT(2),"MD2,")"R#12":SP3:OCONV(TOT(3),"MD2,"
0306 LN=0                                                               LN=0
0307 *                                                                  *

0323 PRINT;PRINT;PRINT;PRINT;PRINT                                      PRINT;PRINT;PRINT;PRINT;PRINT
0324 VENDOR<1,-1> = PREV.VEND                                           VENDOR<1,-1> = PREV.VEND
0325 CHECK<1,-1> = CKNO                                                 CHECK<1,-1> = CKNO
0326 NET=TOT(3);GOSUB 500                                               NET=TOT(3);GOSUB 500
0327 PRINT NEW.WORD<1,1>"L#80"                                          PRINT NEW.WORD<1,1>"L#80"
0328                                                                 >  *     PRINT NEW.WORD<1,2>"L#66":OCONV(TOT(3),"MD2,")"R$2#13"
0329 PRINT NEW.WORD<1,2>"L#66":OCONV(TOT(3),"MD2,$")"R#13"              PRINT NEW.WORD<1,2>"L#66":OCONV(TOT(3),"MD2,$")"R#13"
0330 PREV.VEND=CKP.VEND                                                 PREV.VEND=CKP.VEND
0331 PRINT                                                              PRINT
0332 PRINT SP10:VEND.DESC"L#40"                                         PRINT SP10:VEND.DESC"L#40"

0333 PRINT SP10:VEND.ADDR1"L#40"                                        PRINT SP10:VEND.ADDR1"L#40"
0334 IF VEND.ADDR2#"" THEN PRINT SP10:VEND.ADDR2"L#40"                  IF VEND.ADDR2#"" THEN PRINT SP10:VEND.ADDR2"L#40"
0335                                                                 >  * CSF 23001
0336                                                                 >  *     PRINT SP10:VEND.CT.ST"L#30":"  ":VEND.ZIP"L#10"
0337 VCSZ = VEND.CT.ST:"  ":VEND.ZIP                                    VCSZ = VEND.CT.ST:"  ":VEND.ZIP
0338 PRINT SPACE(10):VCSZ "L#40"                                        PRINT SPACE(10):VCSZ "L#40"
0339                                                                 >  *
0340 IF VEND.ADDR2="" THEN PRINT                                        IF VEND.ADDR2="" THEN PRINT
0341                                                                 >  *T28933   IF CONO = 001 THEN PRINT ;*T28917

0351 CKNO=STR("0",6-LEN(CKNO)):CKNO                                     CKNO=STR("0",6-LEN(CKNO)):CKNO
0352 IF EOJ THEN                                                        IF EOJ THEN
0353 FOR Y = 1 TO 5 ;PRINT;NEXT Y                                       FOR Y = 1 TO 5 ;PRINT;NEXT Y
0354 PRINTER CLOSE                                                      PRINTER CLOSE
0355 PRINTER OFF                                                        PRINTER OFF
0356                                                                 >  * TASK 20269
0357                                                                 >  *          CHNO(1) = CKNO
0358                                                                 >  *         MATWRITE CHNO ON CONTROL,CONO:"APCOUNTER"
0359                                                                 >  * TASK 20269
0360 355 *                                                              355 *

0361 PRINT @(5,16):@(-3):"DID CHECKS PRINT CORRECTLY? (Y/N): ":      |  *        PRINT @(5,19):"DID CHECKS PRINT CORRECTLY? (RET/N):
0362                                                                 >  *         PRINT @(5,19):"DID CHECKS PRINT CORRECTLY? (Y/N): 
0363                                                                 >  PRINT @(5,19):"DID CHECKS PRINT CORRECTLY? (Y/N): ":
0364 INPUT ANS:                                                         INPUT ANS:
0365 IF ANS= "N" OR ANS = "/" THEN                                      IF ANS= "N" OR ANS = "/" THEN
0366 PRINT @(5,18):@(-3):"CHECKS MUST BE RE-RUN OR CASH DISB AND CH  |  PRINT @(5,18):CL:
0367                                                                 >  PRINT @(5,18):"CHECKS MUST BE RE-RUN OR CASH DISB AND CHECK 

0368 360 *                                                              360 *
0369 PRINT @(5,20):@(-3):"ENTER REPRINT VENDOR# OR (ALL): ":         |  PRINT @(5,19):CL:
0370                                                                 >  PRINT @(5,19):"ENTER REPRINT VENDOR# OR (ALL): ":
0371 INPUT ANSW:                                                        INPUT ANSW:
0372 IF ANSW # "ALL" THEN                                               IF ANSW # "ALL" THEN
0373 LST = DCOUNT(VENDOR,VM)                                            LST = DCOUNT(VENDOR,VM)
0374 NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1                           NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
0375                                                                 >  *              LOCATE ANSW IN VENDOR<1>,1 SETTING FND ELSE G

0391 PCS.START.UNUSED<1,NEW.MV> = ""                                    PCS.START.UNUSED<1,NEW.MV> = ""
0392 PCS.END.UNUSED<1,NEW.MV> = ""                                      PCS.END.UNUSED<1,NEW.MV> = ""
0393 PCS.LST.CHK.NO = CHECK<1,CNT>                                      PCS.LST.CHK.NO = CHECK<1,CNT>
0394 END                                                                END
0395 370*                                                               370*
0396                                                                 >  * TASK 20269
0397                                                                 >  *            MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO
0398 MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER         MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER
0399                                                                 >  * TASK 20269            
0400 BUFFER = REPLACE(BUFFER,2,0,0,ANSW)                                BUFFER = REPLACE(BUFFER,2,0,0,ANSW)

0401                                                                 >  * TASK 20269
0402                                                                 >  *            WRITEV ANSW ON CONTROL , CONO:"REPRINT",1
0403 WRITEV ANSW ON CONTROL , CONO:"REPRINT":DIV.OWNER,1                WRITEV ANSW ON CONTROL , CONO:"REPRINT":DIV.OWNER,1
0404                                                                 >  * TASK 20269
0405 PROCWRITE BUFFER                                                   PROCWRITE BUFFER 
0406                                                                 >  *            STOP
0407 GOTO 99999                                                         GOTO 99999

0406                                                                 >  *            STOP
0407 GOTO 99999                                                         GOTO 99999
0408 END                                                                END
0409 IF ANS#"Y" THEN GOTO 355                                           IF ANS#"Y" THEN GOTO 355
0410 ANS=''                                                             ANS=''
0411                                                                 >  * TASK 20269
0412                                                                 >  *         WRITEV ANS ON CONTROL , CONO:"REPRINT",1
0413 WRITEV ANS ON CONTROL , CONO:"REPRINT":DIV.OWNER,1                 WRITEV ANS ON CONTROL , CONO:"REPRINT":DIV.OWNER,1
0414                                                                 >  * TASK 20269
0415 WRITEV CKNO ON D.CKP,CONO:"CHECKNO",1                              WRITEV CKNO ON D.CKP,CONO:"CHECKNO",1

0416 PCS.LST.CHK.NO = CKNO - 1                                          PCS.LST.CHK.NO = CKNO - 1
0417                                                                 >  * TASK 20269
0418                                                                 >  *         MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO
0419 MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER         MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER
0420                                                                 >  * TASK 20269         
0421 BUFFER=REPLACE(BUFFER,2,0,0,"Y")                                   BUFFER=REPLACE(BUFFER,2,0,0,"Y")
0422 PROCWRITE BUFFER                                                   PROCWRITE BUFFER
0423 *T22081 v                                                          *T22081 v

0427 READ TEMP.REC FROM SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LASE     READ TEMP.REC FROM SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LA
0428 DELETE SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LASER'               DELETE SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LASER'
0429 END                                                                END
0430 END                                                                END
0431 *T22081 ^                                                          *T22081 ^
0432                                                                 >  *         STOP
0433 GOTO 99999                                                         GOTO 99999
0434 END                                                                END
0435 MAT TOT=""                                                         MAT TOT=""
0436 IF LASER.FLAG = "" THEN                                         |  IF LASER.FLAG = '' THEN     ;* T22081 <

0437 FOR Y=1 TO 5;PRINT;NEXT Y                                          FOR Y=1 TO 5;PRINT;NEXT Y
0438                                                                 >  *T22081 v
0439 END ELSE                                                           END ELSE
0440 PRINT CHAR(12):                                                    PRINT CHAR(12):
0441 END                                                                END
0442                                                                 >  *T22081 ^
0443 375 *                                                              375 *
0444 *T22081 v                                                          *T22081 v

0443 375 *                                                              375 *
0444 *T22081 v                                                          *T22081 v
0445 IF LASER.FLAG = '' THEN                                            IF LASER.FLAG = '' THEN
0446 FOR Y=1 TO 4;PRINT;NEXT Y                                          FOR Y=1 TO 4;PRINT;NEXT Y
0447 END ELSE                                                           END ELSE
0448 PRINT                                                           |  *T28933   IF CONO # 001 THEN PRINT;*T28917
0449 END                                                                END
0450 *T22081 ^                                                          *T22081 ^
0451 PREV.CKNO=CKNO                                                     PREV.CKNO=CKNO
0452 GOTO 200                                                           GOTO 200

0476 MATWRITE VOID ON CKR,CONO:VOID(16):"VOID"                          MATWRITE VOID ON CKR,CONO:VOID(16):"VOID"
0477 CKNO=CKNO+1;CKNO=STR("0",6-LEN(CKNO)):CKNO                         CKNO=CKNO+1;CKNO=STR("0",6-LEN(CKNO)):CKNO
0478 *T22081 v                                                          *T22081 v
0479 IF LASER.FLAG = 1 THEN                                             IF LASER.FLAG = 1 THEN
0480 PRINT CHAR(12):                                                    PRINT CHAR(12):
0481 PRINT                                                           |  PRINT        ;*T22081 DT
0482                                                                 >  END ELSE       ;*T22081 DT
0483                                                                 >  *T23444
0484                                                                 >  *        FOR EXTRA.LINES = 1 TO 4 ; PRINT ; NEXT EXTRA.LINES
0485 END                                                                END

0541 IF YY#0 THEN WORD=DOL(YY):WORD                                     IF YY#0 THEN WORD=DOL(YY):WORD
0542 IF TENTHOU>1 THEN                                                  IF TENTHOU>1 THEN
0543 IF THOU#0 THEN WORD="-":WORD                                       IF THOU#0 THEN WORD="-":WORD
0544 WORD=TEN(TENTHOU):WORD                                             WORD=TEN(TENTHOU):WORD
0545 END                                                                END
0546                                                                 >  *      IF HUNDTHOU=0 THEN GOTO 510
0547 IF HUNDTHOU=0 AND L > 8 THEN                                       IF HUNDTHOU=0 AND L > 8 THEN 
0548 GOTO 505                                                           GOTO 505
0549 END ELSE                                                           END ELSE
0550 IF HUNDTHOU = 0 THEN                                               IF HUNDTHOU = 0 THEN

0582 *                                                                  *
0583 *---PRINT MASK ALIGNMENT                                           *---PRINT MASK ALIGNMENT
0584 *                                                                  *
0585 600*                                                               600*
0586 AMTMASK="##,###,###.##"                                            AMTMASK="##,###,###.##" 
0587                                                                 >  *     MATREAD COMP.REC FROM COMPANY,CONO ELSE PRINT "COMPANY
0588                                                                 >  *     MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE P
0589 MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG = "COMPANY FILE     MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG = "COMPANY FI
0590 MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG =      MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG 
0591 GOSUB 9500                                                         GOSUB 9500

0603 PROMPT ""                                                          PROMPT ""
0604 *                                                                  *
0605 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0606 *                                                                  *
0607 700*                                                               700*
0608 PRINT @(5,12):@(-3):'PRESS RETURN WHEN READY TO RUN ALIGNMENT   |  *    PRINT @(5,13):"ARE FORMS MOUNTED IN PRINTER FOR ":CO.NA
0609                                                                 >  PRINT @(5,13):'Hit Return When Ready To Run Alignment Routin
0610 INPUT AN:                                                          INPUT AN:
0611 PRINT @(5,12):@(-4):                                            |  PRINT @(5,13):SP65:@(5,14):SP65
0612                                                                 >  *    IF AN = '/' THEN PRINTER CLOSE;CHAIN 'M'

0613                                                                 >  IF AN = '/' THEN PRINTER CLOSE;PROCWRITE 'END' ;GOTO 99999
0614 IF AN#"" THEN GOTO 700                                             IF AN#"" THEN GOTO 700
0615                                                                 >  *    PRINT @(5,13):"ALIGNMENT ROUTINE NOW RUNNING"
0616 PRINTER ON                                                         PRINTER ON
0617                                                                 >  *    FOR I=1 TO 2
0618 FOR Y=1 TO 4;PRINT;NEXT Y                                          FOR Y=1 TO 4;PRINT;NEXT Y
0619 FOR Y=1 TO 14                                                      FOR Y=1 TO 14

0627 PRINT;PRINT;PRINT SP66:AMTMASK                                     PRINT;PRINT;PRINT SP66:AMTMASK
0628 PRINT                                                              PRINT
0629 FOR Y=1 TO 4;PRINT SP10:STR("X",40);NEXT Y                         FOR Y=1 TO 4;PRINT SP10:STR("X",40);NEXT Y
0630 FOR Y=1 TO 5;PRINT;NEXT Y                                          FOR Y=1 TO 5;PRINT;NEXT Y
0631 NUM.ALIGN = NUM.ALIGN + 1                                          NUM.ALIGN = NUM.ALIGN + 1
0632                                                                 >  *    NEXT I
0633 PRINTER OFF                                                        PRINTER OFF
0634 PRINTER CLOSE                                                      PRINTER CLOSE
0635 710 *                                                           |  710  PRINT @(5,13):"ARE CHECKS ALIGNED ? (RET/N): ":;INPUT A
0636 PRINT @(5,14):@(-3):"ARE CHECKS ALIGNED? (RET/N) ":;INPUT AN    |  PRINT @(5,13):SP65

0637 IF AN="N" THEN                                                     IF AN="N" THEN
0638                                                                 >  *       NUM.ALIGN = NUM.ALIGN + 1
0639 GOTO 700                                                           GOTO 700
0640 END                                                                END
0641                                                                 >  *    IF AN = '/' THEN PRINTER CLOSE; CHAIN 'M'
0642                                                                 >  IF AN = '/' THEN PRINTER CLOSE; PROCWRITE 'END'; GOTO 99999
0643 IF AN#"" THEN GO 710                                               IF AN#"" THEN GO 710
0644 RETURN                                                             RETURN

0664 RETURN                                                             RETURN
0665 *                                                                  *
0666 *---- ERROR ROUTINE                                                *---- ERROR ROUTINE
0667 *                                                                  *
0668 93000 *                                                            93000 *
0669                                                                 >  *      PRINT @(10,10):CS:ERRMSG:" - PRESS <RETURN> TO END: "
0670 PRINT @(10,10):CS:ERRMSG:" - PRESS <RETURN> TO END: ":;INPUT A     PRINT @(10,10):CS:ERRMSG:" - PRESS <RETURN> TO END: ":;INPUT
0671 BUFFER<1> = "END"                                               |  *     CHAIN "M"
0672 PROCWRITE BUFFER                                                |  PROCWRITE 'END'
0673 99999 *                                                            99999 *


APSBP/PO.ACT.INQ                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/PO.ACT.INQ
Printed for thompson at 06/28/2006 04:09:02PM

0001 SUBROUTINE PO.ACT.INQ(VM.NO,PAY.VALUES)                         |  SUBROUTINE PO.ACT.INQ(VM.NO,PAY.VALUES,V.CODE)
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>PMC.CPYLIB>COM.COMPANY                                       *COPY>PMC.CPYLIB>COM.COMPANY
0004 *COPY>POS.CPYLIB>COM.MPO                                           *COPY>POS.CPYLIB>COM.MPO
0005 *COPY>APS.CPYLIB>COM.APS.FILE.VARS                                 *COPY>APS.CPYLIB>COM.APS.FILE.VARS
0006 *COPY>APS.CPYLIB>COM.TEMP.VOUCHERS                                 *COPY>APS.CPYLIB>COM.TEMP.VOUCHERS
0007 *COPY>APS.CPYLIB>COM.VOUCHER.MAINT                                 *COPY>APS.CPYLIB>COM.VOUCHER.MAINT

0028 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0029 *T21348 lanny 12/18/1996 * Problem with clearing old data from     *T21348 lanny 12/18/1996 * Problem with clearing old data fr
0030 *                        PO# changed on 1st screen.                *                        PO# changed on 1st screen.
0031 *T23255 markt 09/11/1998 * Close screen before calling             *T23255 markt 09/11/1998 * Close screen before calling
0032 *                          VOUCHER.OS.PO.REC to avoid GUI pro     *                          VOUCHER.OS.PO.REC to avoid GUI p
0033 *T23319 alex 04/11/2000 * Fix recalculation of TVO.DIST.AMT &   |  *T23499 rick 08/25/1999 * Modify pgm to use new seq number a
0034 *                         for an outside po and uom "C" type.   |  *                         with outside po detail lines
0035 *T25755 cm 04/18/2001 * Modify pgm to use new seq # associated  |  *T24135 jamesf 11/30/1999 * Including vps.unpost.vou.qty in 
0036 *                       outside po detail lines.                |  *                           of line qty.
0037 *T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,  |  *T23319 lanny 04/07/2000 * Correct OS PO uom 'C' calc of cos

0038 *T28143 lross 05/25/2004 * Several errors re: OUTSIDE.POS.      <  
0039 *T28779 lross 02/07/2006 * Retain identity of multiple same Pr  <  
0040 *                          lines.                               <  
0041 *T28932 lross 06/13/2006 * Need to look at the individual line  <  
0042 *                          vs REC'D instead of SUM of all line  <  
0043 *                          REC'D.                               <  
0044 **************************************************************     ************************************************************

0070 *** INT                                                            *** INT
0071 *                                                                  *
0072 OPEN "MISC.PO" TO MISC.PO ELSE                                     OPEN "MISC.PO" TO MISC.PO ELSE
0073 ERRMSG = "Unable to open Misc PO file"                             ERRMSG = "Unable to open Misc PO file"
0074 GOSUB 91000                                                        GOSUB 91000
0075                                                                 >  *  RETURN
0076 GOTO 99999                                                         GOTO 99999
0077 END                                                                END
0078 BEGIN.PAGE = 8                                                     BEGIN.PAGE = 8
0079 PAGE.SIZE = 5                                                      PAGE.SIZE = 5

0085 LINE.FLAG = ""                                                     LINE.FLAG = ""
0086 LINE.VOUCH = ""                                                    LINE.VOUCH = ""
0087 LINE.QTY = ""                                                      LINE.QTY = ""
0088 LINE.ORD = ""                                                      LINE.ORD = ""
0089 LINE.REC = ""                                                      LINE.REC = ""
0090                                                                 >  LINE.RQTY = ""    ;*T24135
0091 PAY.FLAG = ""                                                      PAY.FLAG = ""
0092 PASS.CNT = 0                                                       PASS.CNT = 0
0093 VSTAT.KEY = CONO : TVO.VEND<1,1> :"!": TVO.PO.TYPE                 VSTAT.KEY = CONO : TVO.VEND<1,1> :"!": TVO.PO.TYPE
0094 VPS.KEY = VSTAT.KEY :"!": VSTAT.PO<1,VM.NO>                        VPS.KEY = VSTAT.KEY :"!": VSTAT.PO<1,VM.NO>

0095 *T25755 v                                                       |  *T23499 v
0096 MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC   |  MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.RE
0097 IF VPS.REC(1) # '' AND TVO.PO.TYPE = 'O' THEN GOSUB 85000       |  IF VPS.PROD # "" AND TVO.PO.TYPE = "O" THEN GOSUB 85000  ;*T
0098 *T25755 ^                                                       |  *T23499 ^
0099 DIM ITEMS(500)                                                     DIM ITEMS(500)
0100 TEMP.PO.ID = VSTAT.PO<1,VM.NO>                                     TEMP.PO.ID = VSTAT.PO<1,VM.NO>
0101 MAT ITEMS = ''                                                     MAT ITEMS = ''

0102 LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,1 SETTING FND THEN T  |  LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,1 SETTING FND THEN
0103 *T20016 v                                                          *T20016 v
0104 WORK.DIV=''                                                        WORK.DIV=''
0105 TEMP.ACCT.ACCRUE=0                                                 TEMP.ACCT.ACCRUE=0
0106 *T20016 ^                                                          *T20016 ^
0107 *                                                                  *
0108 **** SETUP FOR SYSTEM ERRMSGS                                      **** SETUP FOR SYSTEM ERRMSGS

0114 *                                                                  *
0115 BEGIN CASE                                                         BEGIN CASE
0116 CASE TVO.PO.TYPE = "O"                                             CASE TVO.PO.TYPE = "O"
0117 SCV.REC(21)<ECD.SCRN.NO> = "Job Number"                            SCV.REC(21)<ECD.SCRN.NO> = "Job Number"
0118 SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"                            SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"
0119                                                                 >  *     SCV.REC(23)<ECD.SCRN.NO> = "------ ---"
0120 CASE TVO.PO.TYPE = 'M'                                             CASE TVO.PO.TYPE = 'M'
0121 SCV.REC(21)<ECD.SCRN.NO> = "Product No"                            SCV.REC(21)<ECD.SCRN.NO> = "Product No"
0122 SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"                            SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"
0123                                                                 >  *     SCV.REC(23)<ECD.SCRN.NO> = "------ ---"

0122 SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"                            SCV.REC(22)<ECD.SCRN.NO> = "Catg   U/M"
0123                                                                 >  *     SCV.REC(23)<ECD.SCRN.NO> = "------ ---"
0124 CASE 1                                                             CASE 1
0125 SCV.REC(21)<ECD.SCRN.NO> = "Product No"                            SCV.REC(21)<ECD.SCRN.NO> = "Product No"
0126 SCV.REC(22)<ECD.SCRN.NO> = "Whse   U/M"                            SCV.REC(22)<ECD.SCRN.NO> = "Whse   U/M"
0127                                                                 >  *     SCV.REC(23)<ECD.SCRN.NO> = "------ ---"
0128 END CASE                                                           END CASE
0129 ECD.NUM = 21; ECD.ACTION = 5; CALL SCRN.EDIT                    |  ECD.NUM = 21;ECD.ACTION = 5;CALL SCRN.EDIT
0130 ECD.NUM = 22; ECD.ACTION = 5; CALL SCRN.EDIT                    |  ECD.NUM = 22;ECD.ACTION = 5;CALL SCRN.EDIT
0131                                                                 >  * ECD.NUM = 23;ECD.ACTION = 5;CALL SCRN.EDIT

0143 MAT INV.REC = ""                                                   MAT INV.REC = ""
0144 FOR LN = 1 TO LINES                                                FOR LN = 1 TO LINES
0145 BEGIN CASE                                                         BEGIN CASE
0146 CASE TVO.PO.TYPE = "R"                                             CASE TVO.PO.TYPE = "R"
0147 MATREAD INV.REC FROM INVENTORY, CONO:VPS.PROD<1,LN> ELSE           MATREAD INV.REC FROM INVENTORY, CONO:VPS.PROD<1,LN> ELSE
0148 MAT INV.REC = ""; INV.FULL.DESC = "UNKNOWN"                     |  MAT INV.REC = "";INV.FULL.DESC = "UNKNOWN"
0149 END                                                                END
0150 CASE 1                                                             CASE 1
0151 MAT INV.REC = ''                                                   MAT INV.REC = ''
0152 END CASE                                                           END CASE

0153 IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100                      IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
0154 SAVE.INV.COST.WT<LN> = INV.COST.WT                                 SAVE.INV.COST.WT<LN> = INV.COST.WT
0155 IF INV.SBR + 0 = 0 THEN INV.SBR = 1                                IF INV.SBR + 0 = 0 THEN INV.SBR = 1
0156 BEGIN CASE                                                         BEGIN CASE
0157 CASE VPS.U.M<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS" AND TVO.P     CASE VPS.U.M<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS" AND TVO
0158 ICR.CNV<LN> = "MD0"; ICR.DV2<LN> = 1                            |  ICR.CNV<LN> = "MD0";ICR.DV2<LN> = 1
0159 ICR.DV1<LN> = INV.M.WT; ICR.MT1<LN> = 10                        |  ICR.DV1<LN> = INV.M.WT;ICR.MT1<LN> = 10
0160 CASE VPS.U.M<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI" AND TVO.PO     CASE VPS.U.M<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI" AND TVO.
0161 ICR.CNV<LN> = "MD0"; ICR.DV2<LN> = 1                            |  ICR.CNV<LN> = "MD0";ICR.DV2<LN> = 1
0162 ICR.DV1<LN> = INV.PAP.WIDTH/100; ICR.MT1<LN> = 100              |  ICR.DV1<LN> = INV.PAP.WIDTH/100;ICR.MT1<LN> = 100

0163 CASE VPS.U.M<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI" AND TVO.PO     CASE VPS.U.M<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI" AND TVO.
0164 ICR.CNV<LN> = "MD0"; ICR.DV2<LN> = 12                           |  ICR.CNV<LN> = "MD0";ICR.DV2<LN> = 12
0165 ICR.DV1<LN> = INV.PAP.WIDTH/100; ICR.MT1<LN> = 1000             |  ICR.DV1<LN> = INV.PAP.WIDTH/100;ICR.MT1<LN> = 1000
0166 CASE 1                                                             CASE 1
0167 ICR.CNV<LN> = "MD2"; ICR.DV2<LN> = 1                            |  ICR.CNV<LN> = "MD2";ICR.DV2<LN> = 1
0168 ICR.DV1<LN> = 1; ICR.MT1<LN> = 1                                |  ICR.DV1<LN> = 1;ICR.MT1<LN> = 1
0169 END CASE                                                           END CASE
0170 SCV.REC(11)<ECD.SCRN.NO> = SCV.REC(11)<ECD.SCRN.NO> + VPS.ORD.     SCV.REC(11)<ECD.SCRN.NO> = SCV.REC(11)<ECD.SCRN.NO> + VPS.O
R

0169 END CASE                                                           END CASE
0170 SCV.REC(11)<ECD.SCRN.NO> = SCV.REC(11)<ECD.SCRN.NO> + VPS.ORD.     SCV.REC(11)<ECD.SCRN.NO> = SCV.REC(11)<ECD.SCRN.NO> + VPS.OR
0171 SCV.REC(12)<ECD.SCRN.NO> = SCV.REC(12)<ECD.SCRN.NO> + VPS.REC.     SCV.REC(12)<ECD.SCRN.NO> = SCV.REC(12)<ECD.SCRN.NO> + VPS.RE
0172 LINE.FLAG<LN> = ""                                                 LINE.FLAG<LN> = ""
0173 LINE.VOUCH<LN> = VPS.VOU.AMT<1,LN>                                 LINE.VOUCH<LN> = VPS.VOU.AMT<1,LN>
0174 LINE.QTY<LN> = VPS.VOU.QTY<1,LN>                                |  *T24135 v
0175 IF LINE.QTY<LN> + 0 = 0 THEN LINE.QTY<LN> = ""                  |  *      LINE.QTY<LN> = VPS.VOU.QTY<1,LN>
0176                                                                 >  LINE.QTY<LN> = (VPS.VOU.QTY<1,LN> + SUM(VPS.UNPOST.VOU.QTY<1
0177                                                                 >  *T24135 ^
0178 LINE.ORD<LN> = VPS.ORD.AMT<1,LN> - VPS.VOU.AMT<1,LN>               LINE.ORD<LN> = VPS.ORD.AMT<1,LN> - VPS.VOU.AMT<1,LN>

0177                                                                 >  *T24135 ^
0178 LINE.ORD<LN> = VPS.ORD.AMT<1,LN> - VPS.VOU.AMT<1,LN>               LINE.ORD<LN> = VPS.ORD.AMT<1,LN> - VPS.VOU.AMT<1,LN>
0179 IF LINE.ORD<LN> < 0 THEN LINE.ORD<LN> = 0                          IF LINE.ORD<LN> < 0 THEN LINE.ORD<LN> = 0
0180 LINE.REC<LN> = VPS.REC.AMT<1,LN> - VPS.VOU.AMT<1,LN>               LINE.REC<LN> = VPS.REC.AMT<1,LN> - VPS.VOU.AMT<1,LN>
0181 IF LINE.REC<LN> < 0 THEN LINE.REC<LN> = 0                          IF LINE.REC<LN> < 0 THEN LINE.REC<LN> = 0
0182                                                                 >  LINE.RQTY<LN> = VPS.REC.QTY<1,LN> - LINE.QTY<LN>
0183 PTR = 1                                                            PTR = 1
0184 LOOP                                                               LOOP
0185 LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE     LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING FND EL
0186 BEGIN CASE                                                         BEGIN CASE

0187 CASE PTR = 0                                                       CASE PTR = 0
0188 CASE TVO.ENT.FLG<1,FND> = "E"                                      CASE TVO.ENT.FLG<1,FND> = "E"
0189 PTR = FND + 1                                                      PTR = FND + 1
0190 CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>                           CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>
0191 PTR = FND + 1                                                      PTR = FND + 1
0192 *25755 v                                                        |  *T23499 v
0193 *       CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN>                |  CASE TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VPS.WHSE<1,L
0194 *         PTR = FND + 1                                         <  
0195 *T28779     CASE TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> # VP  <  
0196 CASE (TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> # VPS.WHSE<1,LN  <  

0197 PTR = FND + 1                                                      PTR = FND + 1
0198 *T28779     CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.P  |  CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.PO.TYPE # "
0199 CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND (TVO.PO.TYPE # 'O  <  
0200 PTR = FND + 1                                                      PTR = FND + 1
0201 *T25755 ^                                                       |  *T23499 ^
0202 *T20681 v                                                          *T20681 v
0203 *           CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>                  *   CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>
0204 CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""       CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""

0207 CASE TVO.SEQ.NO<1,FND> # VPS.SEQ.NO<1,LN> AND TVO.PO.TYPE = "M     CASE TVO.SEQ.NO<1,FND> # VPS.SEQ.NO<1,LN> AND TVO.PO.TYPE = 
0208 PTR = FND + 1                                                      PTR = FND + 1
0209 CASE 1                                                             CASE 1
0210 LINE.FLAG<LN> = "<=="                                              LINE.FLAG<LN> = "<=="
0211 LINE.QTY<LN> = LINE.QTY<LN> + TVO.PO.QTY<1,FND>                    LINE.QTY<LN> = LINE.QTY<LN> + TVO.PO.QTY<1,FND>
0212 IF LINE.QTY<LN> + 0 = 0 THEN LINE.QTY<LN> = ""                  <  
0213 LINE.VOUCH<LN> = LINE.VOUCH<LN> + TVO.PO.VOUCH<1,FND>              LINE.VOUCH<LN> = LINE.VOUCH<LN> + TVO.PO.VOUCH<1,FND>
0214 PTR = FND + 1                                                      PTR = FND + 1
0215 END CASE                                                           END CASE
0216 WHILE PTR DO                                                       WHILE PTR DO

0219 NEXT LN                                                            NEXT LN
0220 LN = 1                                                             LN = 1
0221 IF LINES > 0 THEN                                                  IF LINES > 0 THEN
0222 GOSUB 10000                                                        GOSUB 10000
0223 END                                                                END
0224 ECD.NUM = 11 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                  |  ECD.NUM = 11;ECD.ACTION = 5;CALL SCRN.EDIT
0225 ECD.NUM = 12 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                  |  ECD.NUM = 12;ECD.ACTION = 5;CALL SCRN.EDIT
0226 ECD.NUM = 13 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                  |  ECD.NUM = 13;ECD.ACTION = 5;CALL SCRN.EDIT
0227 *                                                                  *
0228 *--- OPTIONS                                                       *--- OPTIONS

0234 ECD.VALDAT = "S"                                                   ECD.VALDAT = "S"
0235 END ELSE                                                           END ELSE
0236 ECD.NUM = 16                                                       ECD.NUM = 16
0237 ECD.VALDAT = "S,P"                                                 ECD.VALDAT = "S,P"
0238 END                                                                END
0239 ECD.VALDAT := ',SR,SB,ST'      ;* T25978                        <  
0240 GOSUB 10000                                                        GOSUB 10000
0241 FOR XXX = START.LINE TO LAST.LINE                                  FOR XXX = START.LINE TO LAST.LINE
0242 ECD.VALDAT = ECD.VALDAT:",":XXX                                    ECD.VALDAT = ECD.VALDAT:",":XXX
0243 NEXT XXX                                                           NEXT XXX

0244 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''                                 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
0245 ECD.ACTION = 4 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 4;CALL SCRN.EDIT
0246 ECD.VALDAT = ""                                                    ECD.VALDAT = ""
0247 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE
0248 BEGIN CASE                                                         BEGIN CASE
0249 CASE OPTION = 'E' OR OPTION = 'END' OR OPTION = ""                 CASE OPTION = 'E' OR OPTION = 'END' OR OPTION = ""
0250 MORE = 0                                                           MORE = 0
0251 CASE OPTION = 'S'                                                  CASE OPTION = 'S'

0250 MORE = 0                                                           MORE = 0
0251 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0252 LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE             LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0253 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0254 GOSUB 10000                                                        GOSUB 10000
0255 * T25978 v                                                      <  
0256 CASE OPTION = 'SR'                                              <  
0257 LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE          <  
0258 IF LN < 1 THEN LN = 1                                           <  
0259 GOSUB 10000                                                     <  

0260 CASE OPTION = 'ST'                                              <  
0261 LN = 1                                                          <  
0262 GOSUB 10000                                                     <  
0263 CASE OPTION = 'SB'                                              <  
0264 LN = LINES                                                      <  
0265 GOSUB 10000                                                     <  
0266 * T25978 ^                                                      <  

0274 GOSUB 7000                                                         GOSUB 7000
0275 IF ECD.RET.VALUE # "END" THEN MORE = 0                             IF ECD.RET.VALUE # "END" THEN MORE = 0
0276 END                                                                END
0277 NEXT I                                                             NEXT I
0278 IF TVO.PO.TYPE = "O" THEN                                          IF TVO.PO.TYPE = "O" THEN
0279 ECD.ACTION = 99; CALL SCRN.EDIT;* T23255                        |  ECD.ACTION = 99;CALL SCRN.EDIT;* T23255
0280 ECD.SCRN.NO = 11                                                |  *            ECD.SCRN.NO = 11
0281 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>                         |  *            SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
0282 READV VEND.NAME FROM VEND,CONO:TVO.VEND,1 ELSE VEND.NAME = ''   |  *            READV VEND.NAME FROM VEND,CONO:TVO.VEND,1 ELSE 
0283 SCV.REC(2)<ECD.SCRN.NO> = VEND.NAME                             |  *            SCV.REC(2)<ECD.SCRN.NO> = VEND.NAME

0284 CALL VOUCHER.OS.PO.REC(VM.NO,PAY.VALUES,MAT ITEMS,CUR.PO,PAY.F  |  *            CALL VOUCHER.OS.PO.REC(VM.NO,PAY.VALUES,MAT ITE
0285 ECD.SCRN.NO = 5      ;*CSF 31232                                |  ECD.SCRN.NO = 5;*CSF 31232
0286 ECD.ACTION = 3 ; CALL SCRN.EDIT     ;*CSF 31232                 |  ECD.ACTION = 3;CALL SCRN.EDIT;*CSF 31232
0287 END                                                                END
0288 CASE NUM(OPTION)                                                   CASE NUM(OPTION)
0289 LN = OPTION                                                        LN = OPTION
0290 IF TVO.PO.TYPE # "M" THEN                                          IF TVO.PO.TYPE # "M" THEN

0295 MATREAD VPDS.REC FROM VEND.PROD.STATS, VPS.KEY :"!":VPS.SEQ.NO     MATREAD VPDS.REC FROM VEND.PROD.STATS, VPS.KEY :"!":VPS.SEQ.
0296 MAT VPDS.REC = ""                                                  MAT VPDS.REC = ""
0297 END                                                                END
0298 END                                                                END
0299 IF VPDS.REC.DATE = "" AND VPDS.VOU.DATE = "" AND VPDS.ORD.DATE     IF VPDS.REC.DATE = "" AND VPDS.VOU.DATE = "" AND VPDS.ORD.DA
0300 ERRMSG = "There is no activity for this product" ; GOSUB 91000  |  ERRMSG = "There is no activity for this product";GOSUB 91000
0301 END ELSE                                                           END ELSE
0302 ECD.SCRN.NO = 7                                                    ECD.SCRN.NO = 7
0303 SCV.REC(1)<ECD.SCRN.NO> = VSTAT.PO<1,VM.NO>                        SCV.REC(1)<ECD.SCRN.NO> = VSTAT.PO<1,VM.NO>
0304 SCV.REC(2)<ECD.SCRN.NO> = TVO.PO.TYPE                              SCV.REC(2)<ECD.SCRN.NO> = TVO.PO.TYPE

0314 END CASE                                                           END CASE
0315 SCV.REC(3)<ECD.SCRN.NO> = PO.DESC                                  SCV.REC(3)<ECD.SCRN.NO> = PO.DESC
0316 SCV.REC(16)<ECD.SCRN.NO> = VPS.PROD<1,LN>                          SCV.REC(16)<ECD.SCRN.NO> = VPS.PROD<1,LN>
0317 SCV.REC(17)<ECD.SCRN.NO> = VPS.PROD.DESC<1,LN>                     SCV.REC(17)<ECD.SCRN.NO> = VPS.PROD.DESC<1,LN>
0318 SCV.REC(19)<ECD.SCRN.NO> = VPS.U.M<1,LN>                           SCV.REC(19)<ECD.SCRN.NO> = VPS.U.M<1,LN>
0319 *T25755 v                                                       |  *T23499 v
0320 *              SCV.REC(29)<ECD.SCRN.NO> = VPS.WHSE<1,LN>        |  ***             SCV.REC(29)<ECD.SCRN.NO> = VPS.WHSE<1,LN>
0321 SCV.REC(29)<ECD.SCRN.NO> = FIELD(VPS.WHSE<1,LN>,'@',1)          |  SCV.REC(29)<ECD.SCRN.NO> = FIELD(VPS.WHSE<1,LN>,"@",1)
0322 *T25755 ^                                                       |  *T23499 ^
0323 IF TVO.PO.TYPE = "O" THEN                                          IF TVO.PO.TYPE = "O" THEN

0325 SCV.REC(31)<ECD.SCRN.NO> = "Category"                              SCV.REC(31)<ECD.SCRN.NO> = "Category"
0326 END ELSE                                                           END ELSE
0327 SCV.REC(30)<ECD.SCRN.NO> = "Product #"                             SCV.REC(30)<ECD.SCRN.NO> = "Product #"
0328 SCV.REC(31)<ECD.SCRN.NO> = "Warehouse #"                           SCV.REC(31)<ECD.SCRN.NO> = "Warehouse #"
0329 END                                                                END
0330 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 3;CALL SCRN.EDIT
0331 CALL PO.PROD.REC.ACT(OPTION,TVO.PO.TYPE,SAVE.INV.COST.WT<OPTIO     CALL PO.PROD.REC.ACT(OPTION,TVO.PO.TYPE,SAVE.INV.COST.WT<OPT
0332 ECD.SCRN.NO = 5                                                    ECD.SCRN.NO = 5
0333 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 3;CALL SCRN.EDIT
0334 OLD.START.LINE = 0 ; GOSUB 10000                                |  OLD.START.LINE = 0;GOSUB 10000

0334 OLD.START.LINE = 0 ; GOSUB 10000                                |  OLD.START.LINE = 0;GOSUB 10000
0335 END                                                                END
0336 END CASE                                                           END CASE
0337 WHILE MORE DO                                                      WHILE MORE DO
0338 REPEAT                                                             REPEAT
0339                                                                 >  *T24135 v
0340                                                                 >  FOR I = 1 TO DCOUNT(TVO.ACCT,VM)
0341                                                                 >  IF TVO.DIST.AMT<1,I>+0 = 0 THEN
0342                                                                 >  TVO.ACCT = DELETE(TVO.ACCT,1,I,0)
0343                                                                 >  TVO.DIST.AMT = DELETE(TVO.DIST.AMT,1,I,0)

0344                                                                 >  TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,I,0)
0345                                                                 >  TVO.DIV = DELETE(TVO.DIV,1,I,0)
0346                                                                 >  TVO.DEPT = DELETE(TVO.DEPT,1,I,0)
0347                                                                 >  TVO.CCTR = DELETE(TVO.CCTR,1,I,0)
0348                                                                 >  TVO.ACCT.FLG = DELETE(TVO.ACCT.FLG,1,I,0)
0349                                                                 >  TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
0350                                                                 >  *        IF TVO.PO.TYPE = 'M' THEN

0351                                                                 >  *          TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,I,0)
0352                                                                 >  *        END
0353                                                                 >  VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,I,0)
0354                                                                 >  END
0355                                                                 >  NEXT I
0356                                                                 >  FOR I = 1 TO DCOUNT(TVO.AP.ACCT,VM)
0357                                                                 >  IF TVO.AP.AMT<1,I>+0 = 0 THEN

0358                                                                 >  TVO.AP.ACCT = DELETE(TVO.AP.ACCT,1,I,0)
0359                                                                 >  TVO.AP.AMT = DELETE(TVO.AP.AMT,1,I,0)
0360                                                                 >  TVO.AP.FLG = DELETE(TVO.AP.FLG,1,I,0)
0361                                                                 >  TVO.AP.DIV = DELETE(TVO.AP.DIV,1,I,0)
0362                                                                 >  TVO.AP.DEPT = DELETE(TVO.AP.DEPT,1,I,0)
0363                                                                 >  TVO.AP.CCTR = DELETE(TVO.AP.CCTR,1,I,0)
0364                                                                 >  END

0365                                                                 >  NEXT I
0366                                                                 >  FOR I = 1 TO DCOUNT(TVO.PO.VOUCH,VM)
0367                                                                 >  IF TVO.PO.VOUCH<1,I>+0 = 0 THEN
0368                                                                 >  TVO.PO.NOS = DELETE(TVO.PO.NOS,1,I,0)
0369                                                                 >  TVO.PO.PROD = DELETE(TVO.PO.PROD,1,I,0)
0370                                                                 >  TVO.PO.WHSE = DELETE(TVO.PO.WHSE,1,I,0)
0371                                                                 >  TVO.PO.UM = DELETE(TVO.PO.UM,1,I,0)

0372                                                                 >  TVO.PO.QTY = DELETE(TVO.PO.QTY,1,I,0)
0373                                                                 >  TVO.PO.U.COST = DELETE(TVO.PO.U.COST,1,I,0)
0374                                                                 >  TVO.PO.VOUCH = DELETE(TVO.PO.VOUCH,1,I,0)
0375                                                                 >  TVO.PROD.DESC = DELETE(TVO.PROD.DESC,1,I,0)
0376                                                                 >  TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,I,0)
0377                                                                 >  TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,I,0)
0378                                                                 >  IF TVO.PO.TYPE = "M" THEN

0379                                                                 >  TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,I,0)
0380                                                                 >  END
0381                                                                 >  IF TVO.PO.TYPE = "O" THEN
0382                                                                 >  TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,I,0)
0383                                                                 >  END
0384                                                                 >  END
0385                                                                 >  NEXT I

0386                                                                 >  *T24135 ^
0387                                                                 >  *
0388 GOTO 99999                                                         GOTO 99999
0389 *                                                                  *
0390 *--- UPDATE TEMP.VOUCHERS                                          *--- UPDATE TEMP.VOUCHERS
0391 7000*                                                              7000* 
0392 IF PASS.CNT = 0 THEN                                               IF PASS.CNT = 0 THEN

0393 BEGIN CASE                                                      |  *T24135 v
0394 *T28932 v                                                       |  *      BEGIN CASE
0395 *        CASE SUM(LINE.ORD) > 0 AND SUM(LINE.REC) = 0              *        CASE SUM(LINE.ORD) > 0 AND SUM(LINE.REC) = 0
0396 CASE LINE.ORD<LN> > 0 AND LINE.REC<LN> = 0                      |  *          ECD.RET.VALUE = "O"
0397 ECD.RET.VALUE = "O"                                             <  
0398 *        CASE SUM(LINE.REC) > 0 AND SUM(LINE.ORD) = 0              *        CASE SUM(LINE.REC) > 0 AND SUM(LINE.ORD) = 0
0399 CASE LINE.REC<LN> > 0 AND LINE.ORD<LN> = 0                      |  *          ECD.RET.VALUE = "R"

0400 ECD.RET.VALUE = "R"                                             <  
0401 *        CASE SUM(LINE.REC) = SUM(LINE.ORD)                        *        CASE SUM(LINE.REC) = SUM(LINE.ORD)
0402 CASE LINE.REC<LN> = LINE.ORD<LN>                                |  *          ECD.RET.VALUE = "O"
0403 *T28932 ^                                                       |  *        CASE 1
0404 ECD.RET.VALUE = "O"                                             |  *          ECD.NUM = 24;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
0405 CASE 1                                                          |  *          ECD.ACTION = 4;CALL SCRN.EDIT
0406 ECD.NUM = 24; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""                |  *          IF ECD.RET.VALUE = "END" THEN GOTO 7999

0407 ECD.ACTION = 4; CALL SCRN.EDIT                                  |  *      END CASE
0408 IF ECD.RET.VALUE = "END" THEN GOTO 7999                         |  *      PAY.FLAG = ECD.RET.VALUE
0409 END CASE                                                        |  *IF @LOGNAME='lanny' THEN DEBUG
0410 PAY.FLAG = ECD.RET.VALUE                                        |  IF SUM(LINE.REC) = 0 THEN GOTO 7999
0411 *T28932 PASS.CNT = 1                                            |  IF LINE.REC<LN> +0 = 0 THEN GOTO 7999
0412                                                                 >  IF SUM(LINE.RQTY) = 0 THEN GOTO 7999
0413                                                                 >  IF LINE.RQTY<LN>+0 = 0 THEN GOTO 7999

0414                                                                 >  PAY.FLAG = "R"
0415                                                                 >  *T24135 ^
0416                                                                 >  PASS.CNT = 1
0417 END                                                                END
0418 BEGIN CASE                                                         BEGIN CASE
0419 CASE TVO.PO.TYPE = "R"                                             CASE TVO.PO.TYPE = "R"
0420 MATREAD INV.REC FROM INVENTORY, CONO : VPS.PROD<1,LN> ELSE MAT     MATREAD INV.REC FROM INVENTORY, CONO : VPS.PROD<1,LN> ELSE M

0421 IF INV.LINE # "" THEN                                              IF INV.LINE # "" THEN
0422 MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE MAT CATG.     MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE MAT CAT
0423 END ELSE                                                           END ELSE
0424 MAT CATG.REC = ""                                                  MAT CATG.REC = ""
0425 END                                                                END
0426 *T28779  CURR.WHSE = VPS.WHSE<1,LN>                             |  CURR.WHSE = VPS.WHSE<1,LN>
0427 CURR.WHSE = FIELD(VPS.WHSE<1,LN>,"@",1)                         <  
0428 MATREAD WHSE.REC FROM WAREHOUSE,CONO:CURR.WHSE ELSE MAT WHSE.R     MATREAD WHSE.REC FROM WAREHOUSE,CONO:CURR.WHSE ELSE MAT WHSE
0429 IF WHS.DIV # "" THEN                                               IF WHS.DIV # "" THEN
0430 WORK.DIV = WHS.DIV                                                 WORK.DIV = WHS.DIV

0430 WORK.DIV = WHS.DIV                                                 WORK.DIV = WHS.DIV
0431 END ELSE                                                           END ELSE
0432 WORK.DIV = GEN.DIV                                                 WORK.DIV = GEN.DIV
0433 END                                                                END
0434 MATREAD PO.REC FROM PO, CONO:VSTAT.PO<1,VM.NO> ELSE MAT PO.REC     MATREAD PO.REC FROM PO, CONO:VSTAT.PO<1,VM.NO> ELSE MAT PO.R
0435 TEMP.ACCT.ACCRUE=0 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=0;*T20016.1
0436 IF PO.ACCRUE = "Y" THEN                                            IF PO.ACCRUE = "Y" THEN
0437 TEMP.ACCT = CATG.ACCRU.LIAB     ;*  Task 17919                  |  TEMP.ACCT = CATG.ACCRU.LIAB;*  Task 17919
0438 TEMP.ACCT.ACCRUE=1                                                 TEMP.ACCT.ACCRUE=1
0439 AP.ACCT = CATG.AP.ACCT                                             AP.ACCT = CATG.AP.ACCT

0443 END                                                                END
0444 TEMP.DIV = WORK.DIV                                                TEMP.DIV = WORK.DIV
0445 TEMP.DEPT = GEN.DEPT                                               TEMP.DEPT = GEN.DEPT
0446 TEMP.CCTR = GEN.CCTR                                               TEMP.CCTR = GEN.CCTR
0447 CASE TVO.PO.TYPE = "O"                                             CASE TVO.PO.TYPE = "O"
0448 *T25755 v                                                       |  *T23499 v
0449 *        MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : VPS.WHSE<1  |  ***         MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : VPS.W
0450 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,LN  |  MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,
0451 *T25755 ^                                                       |  *T23499 ^
0452 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VSTAT.PO<1,VM.NO> ELSE M     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VSTAT.PO<1,VM.NO> ELSE

0453 CURR.PROD = VPS.PROD<1,LN>                                         CURR.PROD = VPS.PROD<1,LN>
0454 CURR.CAT  = VPS.WHSE<1,LN>                                         CURR.CAT  = VPS.WHSE<1,LN>
0455 *T25755 v                                                       |  *T23499 v
0456 CURR.SEQ = FIELD(CURR.CAT,'@',2)                                |  CURR.SEQ = FIELD(CURR.CAT,"@",2)
0457 CURR.CAT = FIELD(CURR.CAT,'@',1)                                |  CURR.CAT = FIELD(CURR.CAT,"@",1)
0458 *T25755 ^                                                       |  *T23499 ^
0459 CURR.OFFSET=0                                                      CURR.OFFSET=0
0460 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
0461 *T25755 v                                                       |  *T23499 v

0462 *           IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN         |  ***       IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN
0463 IF OPO.PROD.SEQ<1,PRODOFF> = CURR.SEQ THEN                         IF OPO.PROD.SEQ<1,PRODOFF> = CURR.SEQ THEN
0464 *T25755 ^                                                       |  *T23499 ^
0465 * this is the loc for the div,dept,cctr                            * this is the loc for the div,dept,cctr
0466 CURR.OFFSET=PRODOFF                                                CURR.OFFSET=PRODOFF
0467 END ELSE                                                           END ELSE
0468 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)

0467 END ELSE                                                           END ELSE
0468 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
0469 DO.CONTINUE=1                                                      DO.CONTINUE=1
0470 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
0471 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
0472 *T25755 v                                                       |  *T23499 v
0473 *                    IF OPO.PROD.LINE<1,III> = CURR.CAT THEN    |  ***             IF OPO.PROD.LINE<1,III> = CURR.CAT THEN
0474 IF OPO.PROD.SEQ<1,III> = CURR.SEQ THEN                             IF OPO.PROD.SEQ<1,III> = CURR.SEQ THEN
0475 *T25755 ^                                                       |  *T23499 ^
0476 CURR.OFFSET=III                                                    CURR.OFFSET=III

0482 END                                                                END
0483 IF CURR.OFFSET=0 THEN                                              IF CURR.OFFSET=0 THEN
0484 CURR.OFFSET=PRODOFF                                                CURR.OFFSET=PRODOFF
0485 END                                                                END
0486 *  seting up the offset for the dept,div cctr                      *  seting up the offset for the dept,div cctr
0487 TEMP.ACCT.ACCRUE=0 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=0;*T20016.1
0488 IF OPO.ACCRUE = "Y" THEN                                           IF OPO.ACCRUE = "Y" THEN
0489 TEMP.ACCT = CAOS.ACCRU.LIAB     ;*  Task 17919                  |  TEMP.ACCT = CAOS.ACCRU.LIAB;*  Task 17919
0490 AP.ACCT = CAOS.AP.ACCT                                             AP.ACCT = CAOS.AP.ACCT
0491 TEMP.ACCT.ACCRUE=1 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=1;*T20016.1

0492 END ELSE                                                           END ELSE
0493 TEMP.ACCT = CAOS.APL                                               TEMP.ACCT = CAOS.APL
0494 AP.ACCT = CAOS.AP.ACCT                                             AP.ACCT = CAOS.AP.ACCT
0495 END                                                                END
0496 TEMP.DIV = OPO.DVDPCC<1,1,CURR.OFFSET>                             TEMP.DIV = OPO.DVDPCC<1,1,CURR.OFFSET>
0497 WORK.DIV = TEMP.DIV ;*T20016                                    |  WORK.DIV = TEMP.DIV;*T20016
0498 TEMP.DEPT = OPO.DVDPCC<1,2,CURR.OFFSET>                            TEMP.DEPT = OPO.DVDPCC<1,2,CURR.OFFSET>
0499 TEMP.CCTR = OPO.DVDPCC<1,3,CURR.OFFSET>                            TEMP.CCTR = OPO.DVDPCC<1,3,CURR.OFFSET>
0500 CASE TVO.PO.TYPE = "M"                                             CASE TVO.PO.TYPE = "M"
0501 MATREAD MPO.REC FROM MISC.PO, CONO:VSTAT.PO<1,VM.NO> ELSE MAT      MATREAD MPO.REC FROM MISC.PO, CONO:VSTAT.PO<1,VM.NO> ELSE MA

0507 *CSFS 24238 v                                                      *CSFS 24238 v
0508 MPTR=1                                                             MPTR=1
0509 LOOP                                                               LOOP
0510 LOCATE CURR.PROD IN MPO.PROD.NUM<1>,MPTR SETTING CURR.OFFSET E     LOCATE CURR.PROD IN MPO.PROD.NUM<1>,MPTR SETTING CURR.OFFSET
0511 CURR.OFFSET=1                                                      CURR.OFFSET=1
0512 MPO.SEQ.NO<1,CURR.OFFSET> = VPS.SEQ.NO<1,LN>   ;* 21177         |  MPO.SEQ.NO<1,CURR.OFFSET> = VPS.SEQ.NO<1,LN>;* 21177
0513 END                                                                END
0514 BEGIN CASE                                                         BEGIN CASE
0515 CASE VPS.SEQ.NO<1,LN> = MPO.SEQ.NO<1,CURR.OFFSET>                  CASE VPS.SEQ.NO<1,LN> = MPO.SEQ.NO<1,CURR.OFFSET>
0516 MPTR = 0                                                           MPTR = 0

0519 END CASE                                                           END CASE
0520 WHILE MPTR DO REPEAT                                               WHILE MPTR DO REPEAT
0521 *CSF 24238 ^                                                       *CSF 24238 ^
0522 *CSF 26148 CURR.OFFSET IN LINE BELOW WAS MPO.SEQ.NO<1,LN>          *CSF 26148 CURR.OFFSET IN LINE BELOW WAS MPO.SEQ.NO<1,LN>
0523 MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,CUR     MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,C
0524 TEMP.ACCT.ACCRUE=0 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=0;*T20016.1
0525 IF MPO.ACCRUE = "Y" THEN                                           IF MPO.ACCRUE = "Y" THEN
0526 TEMP.ACCT = CAMISC.CRED.EXP                                        TEMP.ACCT = CAMISC.CRED.EXP
0527 TEMP.ACCT.ACCRUE=1 ;* T20016.1                                  |  TEMP.ACCT.ACCRUE=1;* T20016.1
0528 AP.ACCT = CAMISC.AP.ACCT                                           AP.ACCT = CAMISC.AP.ACCT

0531 AP.ACCT = CAMISC.AP.ACCT                                           AP.ACCT = CAMISC.AP.ACCT
0532 END                                                                END
0533 *T21348 v                                                          *T21348 v
0534 HLN=LN                                                             HLN=LN
0535 LN=CURR.OFFSET                                                     LN=CURR.OFFSET
0536 AP.DIV=''; AP.DEPT=''; AP.CCTR=''                               |  AP.DIV='';AP.DEPT='';AP.CCTR=''
0537 GOSUB 75000                                                        GOSUB 75000
0538 LN=HLN                                                             LN=HLN
0539 *T21348 ^                                                          *T21348 ^
0540 TEMP.DIV = MPO.MISC.DIV<1,CURR.OFFSET>                             TEMP.DIV = MPO.MISC.DIV<1,CURR.OFFSET>

0541 WORK.DIV = TEMP.DIV ;*T20016                                    |  WORK.DIV = TEMP.DIV;*T20016
0542 TEMP.DEPT = MPO.MISC.DEPT<1,CURR.OFFSET>                           TEMP.DEPT = MPO.MISC.DEPT<1,CURR.OFFSET>
0543 TEMP.CCTR = MPO.MISC.CCTR<1,CURR.OFFSET>                           TEMP.CCTR = MPO.MISC.CCTR<1,CURR.OFFSET>
0544 *21177 v     CURR.PROD=VPS.PROD<1,LN>                              *21177 v     CURR.PROD=VPS.PROD<1,LN>
0545 *     LOCATE CURR.PROD IN MPO.PROD.NUM<1>,1 SETTING CURR.OFFSE     *     LOCATE CURR.PROD IN MPO.PROD.NUM<1>,1 SETTING CURR.OFF
0546 *       CURR.OFFSET=1                                              *       CURR.OFFSET=1
0547 *     END                                                          *     END

0558 *      MPTR = CURR.OFFSET + 1                                      *      MPTR = CURR.OFFSET + 1
0559 *    END CASE                                                      *    END CASE
0560 *  WHILE MPTR DO REPEAT                                            *  WHILE MPTR DO REPEAT
0561 **CSF 24238 ^                                                      **CSF 24238 ^
0562 *     TEMP.DIV = MPO.MISC.DIV<1,CURR.OFFSET>                       *     TEMP.DIV = MPO.MISC.DIV<1,CURR.OFFSET>
0563 *     WORK.DIV = TEMP.DIV ;*T20016                              |  *     WORK.DIV = TEMP.DIV;*T20016
0564 *     TEMP.DEPT = MPO.MISC.DEPT<1,CURR.OFFSET>                     *     TEMP.DEPT = MPO.MISC.DEPT<1,CURR.OFFSET>
0565 *21177 ^     TEMP.CCTR = MPO.MISC.CCTR<1,CURR.OFFSET>              *21177 ^     TEMP.CCTR = MPO.MISC.CCTR<1,CURR.OFFSET>
0566 CASE 1                                                             CASE 1
0567 TEMP.ACCT.ACCRUE=0                                                 TEMP.ACCT.ACCRUE=0

0579 CASE PTR = 0                                                       CASE PTR = 0
0580 CASE TVO.ENT.FLG<1,FND> = "E"                                      CASE TVO.ENT.FLG<1,FND> = "E"
0581 PTR = FND + 1                                                      PTR = FND + 1
0582 CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>                           CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>
0583 PTR = FND + 1                                                      PTR = FND + 1
0584 *T25755 v                                                       |  *T23499 v
0585 *           CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN>            |  CASE TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VPS.WHSE<1,L
0586 *              PTR = FND + 1                                    <  
0587 *T28779     CASE TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VP  <  
0588 CASE (TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VPS.WHSE<1,LN  <  

0589 PTR = FND + 1                                                      PTR = FND + 1
0590 *T28779     CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.P  |  CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.PO.TYPE # "
0591 CASE (TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN>) AND (TVO.PO.TYPE #   |  *T23499 ^
0592 PTR = FND + 1                                                      PTR = FND + 1
0593 *T25755 ^                                                       <  
0594 *T20681 v                                                          *T20681 v
0595 *           CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>                  *   CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>
0596 CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""       CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""

0624 TVO.DIV = DELETE(TVO.DIV,1,AFND,0)                                 TVO.DIV = DELETE(TVO.DIV,1,AFND,0)
0625 TVO.DEPT = DELETE(TVO.DEPT,1,AFND,0)                               TVO.DEPT = DELETE(TVO.DEPT,1,AFND,0)
0626 TVO.CCTR = DELETE(TVO.CCTR,1,AFND,0)                               TVO.CCTR = DELETE(TVO.CCTR,1,AFND,0)
0627 TVO.ACCT.FLG = DELETE(TVO.ACCT.FLG,1,AFND,0)                       TVO.ACCT.FLG = DELETE(TVO.ACCT.FLG,1,AFND,0)
0628 TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")                     TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
0629 IF TVO.PO.TYPE = 'M' THEN                                       |  *                      IF TVO.PO.TYPE = 'M' THEN
0630 TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,AFND,0)                    |  *                        TVO.MISC.CAT = DELETE(TVO.MISC.CAT,
0631 END                                                             |  *                      END
0632 *T20016.1 v                                                        *T20016.1 v
0633 VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,AFND,0)           VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,AFND,0)

0702 TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,FND,0)                            TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,FND,0)
0703 TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,FND,0)                          TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,FND,0)
0704 IF TVO.PO.TYPE = "M" THEN                                          IF TVO.PO.TYPE = "M" THEN
0705 TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,FND,0)                        TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,FND,0)
0706 END                                                                END
0707 *T25755 v T28779                                                |  *T23499 v
0708 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  |  IF TVO.PO.TYPE = "O" THEN
0709 TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,FND,0)                            TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,FND,0)
0710 END                                                                END
0711 *T25755 ^                                                       |  *T23499 ^

0711 *T25755 ^                                                       |  *T23499 ^
0712 END CASE                                                           END CASE
0713 WHILE PTR DO                                                       WHILE PTR DO
0714 REPEAT                                                             REPEAT
0715 END                                                                END
0716                                                                 >  *T24135 v
0717                                                                 >  *  IF TVO.PO.TYPE = "M" THEN
0718                                                                 >  *   TCNT = COUNT(VPS.SEQ.NO,VM) + (VPS.SEQ.NO # "")
0719                                                                 >  *  END ELSE
0720                                                                 >  *   TCNT = COUNT(VPS.PROD,VM) + (VPS.PROD # "")

0721                                                                 >  *  END
0722                                                                 >  *  FOR TR = 1 TO TCNT
0723                                                                 >  *T24135 ^
0724 IF TVO.PO.TYPE = "M" THEN                                          IF TVO.PO.TYPE = "M" THEN
0725 VPDS.KEY = VPS.KEY:"!":VPS.SEQ.NO<1,LN>:"!":VPS.WHSE<1,LN>         VPDS.KEY = VPS.KEY:"!":VPS.SEQ.NO<1,LN>:"!":VPS.WHSE<1,LN>
0726 END ELSE                                                           END ELSE
0727 VPDS.KEY = VPS.KEY:"!":VPS.PROD<1,LN>:"!":VPS.WHSE<1,LN>           VPDS.KEY = VPS.KEY:"!":VPS.PROD<1,LN>:"!":VPS.WHSE<1,LN>

0751 FOR TRP = 1 TO PDLN.CNT                                            FOR TRP = 1 TO PDLN.CNT
0752 IF ECD.RET.VALUE = "O" THEN                                        IF ECD.RET.VALUE = "O" THEN
0753 REV.QTY = VPDS.ORD.QTY<1,TRP>                                      REV.QTY = VPDS.ORD.QTY<1,TRP>
0754 REV.AMT = VPDS.ORD.UN.COST<1,TRP>                                  REV.AMT = VPDS.ORD.UN.COST<1,TRP>
0755 END ELSE                                                           END ELSE
0756                                                                 >  *        REV.QTY = VPS.REC.QTY<1,LN,TRP> - VPS.VOU.QTY<1,LN,
0757 REV.QTY = VPDS.REC.QTY<1,TRP>                                      REV.QTY = VPDS.REC.QTY<1,TRP>
0758                                                                 >  IF TRP = 1 THEN
0759                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,LN>,1 SETTING VFND THEN
0760                                                                 >  VPS.UNPOST.VOU.QTY<1,LN,VFND> = 0

0761                                                                 >  END
0762                                                                 >  REV.QTY -= SUM(VPS.UNPOST.VOU.QTY<1,LN>)
0763                                                                 >  END
0764 REV.AMT = VPDS.REC.UN.COST<1,TRP>                                  REV.AMT = VPDS.REC.UN.COST<1,TRP>
0765 END                                                                END
0766                                                                 >  *
0767 REV.UN.COST = REV.AMT                                              REV.UN.COST = REV.AMT

0768                                                                 >  MFACTOR=1
0769 *CSF 24954 v                                                       *CSF 24954 v
0770 * IF VPS.U.M<1,LN> = 'M' AND (TVO.PO.TYPE='M' OR TVO.PO.TYPE='     * IF VPS.U.M<1,LN> = 'M' AND (TVO.PO.TYPE='M' OR TVO.PO.TYPE
0771 *T23319* IF VPS.U.M<1,LN> = 'M' AND TVO.PO.TYPE='O' THEN        |  *      IF VPS.U.M<1,LN> = 'M' AND TVO.PO.TYPE='O' THEN
0772 *CSF 24954 ^                                                       *CSF 24954 ^
0773                                                                 >  IF TVO.PO.TYPE = 'O' THEN
0774 *T23319 v                                                          *T23319 v

0775 BEGIN CASE                                                         BEGIN CASE
0776 CASE VPS.U.M<1,LN> = 'M' AND TVO.PO.TYPE = 'O'                  |  CASE VPS.U.M<1,LN> = 'M'
0777 MFACTOR=1000                                                       MFACTOR=1000
0778 CASE VPS.U.M<1,LN> = 'C' AND TVO.PO.TYPE = 'O'                  |  CASE VPS.U.M<1,LN> = 'C'
0779 MFACTOR=100                                                     |  MFACTOR = 100
0780 CASE 1                                                          <  
0781 MFACTOR=1                                                       <  
0782 END CASE                                                        <  

0783 * END ELSE                                                         *      END ELSE
0784 *   MFACTOR=1                                                   <  
0785 * END                                                              *      END
0786                                                                 >  END CASE
0787                                                                 >  END
0788 *T23319 ^                                                          *T23319 ^
0789 IF TVO.PO.TYPE = "M" THEN     ;*  Task 17919                    |  IF TVO.PO.TYPE = "M" THEN;*  Task 17919
0790 IF REV.QTY+0 < 0 THEN ROND=-.5 ELSE ROND=.5                        IF REV.QTY+0 < 0 THEN ROND=-.5 ELSE ROND=.5

0790 IF REV.QTY+0 < 0 THEN ROND=-.5 ELSE ROND=.5                        IF REV.QTY+0 < 0 THEN ROND=-.5 ELSE ROND=.5
0791 REV.AMT = INT(((REV.UN.COST/100) * (REV.QTY/(SAVE.INV.COST.WT<     REV.AMT = INT(((REV.UN.COST/100) * (REV.QTY/(SAVE.INV.COST.W
0792 END ELSE                                                           END ELSE
0793 REV.AMT = INT(((REV.UN.COST/100) * (REV.QTY/(SAVE.INV.COST.WT<     REV.AMT = INT(((REV.UN.COST/100) * (REV.QTY/(SAVE.INV.COST.W
0794 END                                                                END
0795                                                                 >  *
0796                                                                 >  *
0797                                                                 >  *         BEGIN CASE
0798                                                                 >  *         CASE TVO.PO.TYPE = "O"
0799                                                                 >  **           REV.UN.COST = INT(((REV.AMT * 100)/ REV.QTY) * 

0800                                                                 >  *            REV.UN.COST = REV.AMT
0801                                                                 >  *            REV.AMT =  INT(((REV.AMT * REV.QTY) / 10000) + 
0802                                                                 >  *         CASE TVO.PO.TYPE = "R"
0803                                                                 >  *            REV.UN.COST = REV.AMT
0804                                                                 >  ** REV.AMT = INT((REV.UN.COST / 10000)*REV.QTY +.5)
0805                                                                 >  *            REV.AMT = INT(((REV.UN.COST/100) * (REV.QTY/(SA
0806                                                                 >  *         CASE 1

0807                                                                 >  *            REV.UN.COST = REV.AMT
0808                                                                 >  *            IF REV.QTY+0 < 0 THEN ROND=-.5 ELSE ROND=.5
0809                                                                 >  *            REV.AMT = INT(((REV.UN.COST/10000) * (REV.QTY/(
0810                                                                 >  *         END CASE
0811                                                                 >  *
0812                                                                 >  *
0813 *T20602 v                                                          *T20602 v

0838 REV.AMT = REV.AMT - INT(((VPDS.UN.COST<1,VOFND> / 100) * (VPDS     REV.AMT = REV.AMT - INT(((VPDS.UN.COST<1,VOFND> / 100) * (VP
0839 SAVE.PTR<1,VOFND> = "U"                                            SAVE.PTR<1,VOFND> = "U"
0840 END CASE                                                           END CASE
0841 NEXT VOFND                                                         NEXT VOFND
0842 *T20602 ^                                                          *T20602 ^
0843                                                                 >  ***         IF REV.AMT + 0 <= 0 THEN GOTO 7199
0844 TVO.GRS.AMT = TVO.GRS.AMT + REV.AMT                                TVO.GRS.AMT = TVO.GRS.AMT + REV.AMT
0845 TVO.MER.AMT = TVO.MER.AMT + REV.AMT                                TVO.MER.AMT = TVO.MER.AMT + REV.AMT
0846 IF TEMP.ACCT # "" THEN                                             IF TEMP.ACCT # "" THEN
0847 TEMP.ACCT = TEMP.ACCT : STR("0",IN.ACCT.LEN-LEN(TEMP.ACCT))        TEMP.ACCT = TEMP.ACCT : STR("0",IN.ACCT.LEN-LEN(TEMP.ACCT))

0880 TVO.DIV<1,AFND> = MPO.MISC.DIV<1,CURR.OFFSET>                      TVO.DIV<1,AFND> = MPO.MISC.DIV<1,CURR.OFFSET>
0881 TVO.DEPT<1,AFND> = MPO.MISC.DEPT<1,CURR.OFFSET>                    TVO.DEPT<1,AFND> = MPO.MISC.DEPT<1,CURR.OFFSET>
0882 TVO.CCTR<1,AFND> = MPO.MISC.CCTR<1,CURR.OFFSET>                    TVO.CCTR<1,AFND> = MPO.MISC.CCTR<1,CURR.OFFSET>
0883 IF MPO.ACCRUE = 'Y' THEN TVO.ACCT.FLG<1,AFND> = 'P' ELSE TVO.A     IF MPO.ACCRUE = 'Y' THEN TVO.ACCT.FLG<1,AFND> = 'P' ELSE TVO
0884 CASE 1                                                             CASE 1
0885 IF WORK.DIV = '' THEN WORK.DIV=GEN.DIV ;*T20016                 |  IF WORK.DIV = '' THEN WORK.DIV=GEN.DIV;*T20016
0886 TVO.DIV<1,AFND> = WORK.DIV  ;*T20016                            |  TVO.DIV<1,AFND> = WORK.DIV;*T20016
0887 TVO.DEPT<1,AFND> = GEN.DEPT                                        TVO.DEPT<1,AFND> = GEN.DEPT
0888 TVO.CCTR<1,AFND> = GEN.CCTR                                        TVO.CCTR<1,AFND> = GEN.CCTR
0889 IF PO.ACCRUE = 'Y' THEN TVO.ACCT.FLG<1,AFND> = 'P' ELSE TVO.AC     IF PO.ACCRUE = 'Y' THEN TVO.ACCT.FLG<1,AFND> = 'P' ELSE TVO.

0913 PTR=AFND+1                                                         PTR=AFND+1
0914 END                                                                END
0915 END ELSE                                                           END ELSE
0916 TVO.AP.ACCT<1,AFND> = AP.ACCT                                      TVO.AP.ACCT<1,AFND> = AP.ACCT
0917 TVO.AP.AMT<1,AFND> = 0                                             TVO.AP.AMT<1,AFND> = 0
0918                                                                 >  *       TVO.AP.FLG<1,AFND> = 'P'
0919 BEGIN CASE                                                         BEGIN CASE
0920 CASE TVO.PO.TYPE = 'O'                                             CASE TVO.PO.TYPE = 'O'
0921 IF OPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.AP.     IF OPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.A
0922 *T25747 v                                                       |  *25747 v

0921 IF OPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.AP.     IF OPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.A
0922 *T25747 v                                                       |  *25747 v
0923 TVO.AP.DIV<1,AFND>=TEMP.DIV                                        TVO.AP.DIV<1,AFND>=TEMP.DIV
0924 TVO.AP.DEPT<1,AFND>=TEMP.DEPT                                      TVO.AP.DEPT<1,AFND>=TEMP.DEPT
0925 TVO.AP.CCTR<1,AFND>=TEMP.CCTR                                      TVO.AP.CCTR<1,AFND>=TEMP.CCTR
0926 *T25747 ^                                                       |  *25747 ^
0927 CASE TVO.PO.TYPE = 'M'                                             CASE TVO.PO.TYPE = 'M'
0928 IF MPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.AP.     IF MPO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.A
0929 *T25747 v                                                       |  *25747 v
0930 TVO.AP.DIV<1,AFND>=AP.DIV   ;*T21348 v                          |  TVO.AP.DIV<1,AFND>=AP.DIV;*T21348 v

0931 TVO.AP.DEPT<1,AFND>=AP.DEPT                                        TVO.AP.DEPT<1,AFND>=AP.DEPT
0932 TVO.AP.CCTR<1,AFND>=AP.CCTR                                        TVO.AP.CCTR<1,AFND>=AP.CCTR
0933 *T25747 ^                                                       |  *25747 ^
0934 CASE 1                                                             CASE 1
0935 IF PO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.AP.F     IF PO.ACCRUE = 'Y' THEN TVO.AP.FLG<1,AFND> = 'P' ELSE TVO.AP
0936 *T25747 v                                                       |  *25747 v
0937 IF WORK.DIV = "" THEN WORK.DIV = GEN.DIV                           IF WORK.DIV = "" THEN WORK.DIV = GEN.DIV
0938 TVO.AP.DIV<1,AFND>=WORK.DIV                                        TVO.AP.DIV<1,AFND>=WORK.DIV
0939 TVO.AP.DEPT<1,AFND>=GEN.DEPT                                       TVO.AP.DEPT<1,AFND>=GEN.DEPT

0940 TVO.AP.CCTR<1,AFND>=GEN.CCTR                                       TVO.AP.CCTR<1,AFND>=GEN.CCTR
0941 *T25747 ^                                                       |  *25747 ^
0942 END CASE                                                           END CASE
0943 *CSF 25150 ^                                                       *CSF 25150 ^
0944 *T19149 v                                                          *T19149 v
0945 *T20016 v                                                          *T20016 v
0946 *         IF WORK.DIV = "" THEN WORK.DIV = GEN.DIV                 *         IF WORK.DIV = "" THEN WORK.DIV = GEN.DIV
0947 *         TVO.AP.DIV<1,AFND>=WORK.DIV                              *         TVO.AP.DIV<1,AFND>=WORK.DIV

0963 LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE     LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING FND EL
0964 BEGIN CASE                                                         BEGIN CASE
0965 CASE PTR = 0                                                       CASE PTR = 0
0966 TVO.PO.NOS<1,FND> = VSTAT.PO<1,VM.NO>                              TVO.PO.NOS<1,FND> = VSTAT.PO<1,VM.NO>
0967 TVO.PO.PROD<1,FND> = VPS.PROD<1,LN>                                TVO.PO.PROD<1,FND> = VPS.PROD<1,LN>
0968 *T25755 v                                                       |  *T23499 v
0969 *              TVO.PO.WHSE<1,FND> = VPS.WHSE<1,LN>              |  ***             TVO.PO.WHSE<1,FND> = VPS.WHSE<1,LN>
0970 TVO.PO.WHSE<1,FND> = FIELD(VPS.WHSE<1,LN>,'@',1)                |  TVO.PO.WHSE<1,FND> = FIELD(VPS.WHSE<1,LN>,"@",1)
0971 *T25755 ^                                                       |  *T23499 ^
0972 TVO.PO.UM<1,FND> = VPS.U.M<1,LN>                                   TVO.PO.UM<1,FND> = VPS.U.M<1,LN>

0977 TVO.SEQ.NO<1,FND> = VPS.SEQ.NO<1,LN>                               TVO.SEQ.NO<1,FND> = VPS.SEQ.NO<1,LN>
0978 TVO.ENT.FLG<1,FND> = LN                                            TVO.ENT.FLG<1,FND> = LN
0979 IF TVO.PO.TYPE = 'M' THEN                                          IF TVO.PO.TYPE = 'M' THEN
0980 TVO.MISC.CAT<1,FND> = MPO.MISC.CAT<1,CURR.OFFSET>                  TVO.MISC.CAT<1,FND> = MPO.MISC.CAT<1,CURR.OFFSET>
0981 END                                                                END
0982 *T25755 v                                                       |  *T23499 v
0983 *T28779        IF TVO.PO.TYPE = 'O' THEN                        |  IF TVO.PO.TYPE = 'O' THEN
0984 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  |  TVO.PO.SEQ<1,FND> = FIELD(VPS.WHSE<1,LN>,"@",2)
0985 TVO.PO.SEQ<1,FND> = FIELD(VPS.WHSE<1,LN>,'@',2)                 <  
0986 END                                                                END

0987 *T25755 ^                                                       |  *T23499 ^             
0988 CASE TVO.ENT.FLG<1,FND> = "E"                                      CASE TVO.ENT.FLG<1,FND> = "E"
0989 PTR = FND + 1                                                      PTR = FND + 1
0990 CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>                           CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,LN>
0991 PTR = FND + 1                                                      PTR = FND + 1
0992 *T25755 v                                                       |  *T23499 v
0993 *           CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN>            |  CASE TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VPS.WHSE<1,L

0994 *              PTR = FND + 1                                    <  
0995 *T28779     CASE TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> # VP  <  
0996 CASE (TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> # VPS.WHSE<1,LN  <  
0997 PTR = FND + 1                                                      PTR = FND + 1
0998 *T28779     CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.P  |  CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND TVO.PO.TYPE # "
0999 CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,LN> AND (TVO.PO.TYPE # 'O  |  *T23499 ^
1000 PTR = FND + 1                                                      PTR = FND + 1

1001 *T25755 ^                                                       <  
1002 *T20681 v                                                          *T20681 v
1003 *           CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>                  *   CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN>
1004 CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""       CASE TVO.PO.UM<1,FND> # VPS.U.M<1,LN> AND VPS.U.M<1,LN> # ""
1005 *T20681 ^                                                          *T20681 ^
1006 PTR = FND + 1                                                      PTR = FND + 1
1007 CASE TVO.PO.U.COST<1,FND> # REV.UN.COST                            CASE TVO.PO.U.COST<1,FND> # REV.UN.COST

1015 REPEAT                                                             REPEAT
1016 TVO.PO.QTY<1,FND> = TVO.PO.QTY<1,FND> + REV.QTY                    TVO.PO.QTY<1,FND> = TVO.PO.QTY<1,FND> + REV.QTY
1017 TVO.PO.VOUCH<1,FND> = TVO.PO.VOUCH<1,FND> + REV.AMT                TVO.PO.VOUCH<1,FND> = TVO.PO.VOUCH<1,FND> + REV.AMT
1018 7199*                                                              7199* 
1019 NEXT TRP                                                           NEXT TRP
1020                                                                 >  *T24135 v
1021                                                                 >  *  NEXT TR
1022                                                                 >  *T24135 ^
1023 PAY.VALUES = "P"                                                   PAY.VALUES = "P"
1024 PAY.VALUES<2> = "P"                                                PAY.VALUES<2> = "P"

1034 IF START.LINE=OLD.START.LINE THEN GOTO 10001                       IF START.LINE=OLD.START.LINE THEN GOTO 10001
1035 OLD.START.LINE=START.LINE                                          OLD.START.LINE=START.LINE
1036 CNT=1                                                              CNT=1
1037 FOR N=START.LINE TO LAST.LINE                                      FOR N=START.LINE TO LAST.LINE
1038 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
1039 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""           |  P_X  = 0;P_Y = SLN;P_VALUE = N "L#3";P_OPT = ""
1040 P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:VPS.PROD<1,N> "L#  |  P_X  := AM:4;P_Y := AM:SLN;P_VALUE := AM:VPS.PROD<1,N> "L#15
1041 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1042 IF TVO.PO.TYPE = "O" THEN                                          IF TVO.PO.TYPE = "O" THEN
1043 *T25755 v                                                       |  *T23499 v

1044 *        P_X=33;P_Y=SLN;P_VALUE=VPS.WHSE<1,N> "L#8";P_OPT=""    |  ***         P_X  = 33;P_Y = SLN;P_VALUE = VPS.WHSE<1,N> "L#8
1045 P_X=33;P_Y=SLN;P_VALUE=FIELD(VPS.WHSE<1,N>,'@',1) "L#8";P_OPT=  |  P_X  = 33;P_Y = SLN;P_VALUE = FIELD(VPS.WHSE<1,N>,"@",1) "L#
1046 *T25755 ^                                                       |  *T23499 ^
1047 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1048 END ELSE                                                           END ELSE
1049 IF TVO.PO.TYPE = 'M' THEN                                          IF TVO.PO.TYPE = 'M' THEN
1050 LOCATE VPS.PROD<1,N> IN MPO.PROD.NUM<1>,1 SETTING TOFFSET THEN     LOCATE VPS.PROD<1,N> IN MPO.PROD.NUM<1>,1 SETTING TOFFSET TH

1050 LOCATE VPS.PROD<1,N> IN MPO.PROD.NUM<1>,1 SETTING TOFFSET THEN     LOCATE VPS.PROD<1,N> IN MPO.PROD.NUM<1>,1 SETTING TOFFSET TH
1051 TCAT=MPO.CAT.LIST<1,TOFFSET>                                       TCAT=MPO.CAT.LIST<1,TOFFSET>
1052 END ELSE                                                           END ELSE
1053 TCAT=''                                                            TCAT=''
1054 END                                                                END
1055 P_X  = 33 ; P_Y = SLN ; P_VALUE = TCAT"L#6" ; P_OPT = ""        |  P_X  = 33;P_Y = SLN;P_VALUE = TCAT"L#6";P_OPT = ""
1056 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1057 END ELSE                                                           END ELSE
1058 *T28779 v                                                       |  *T23499 v
1059 *           P_X=33;P_Y=SLN;P_VALUE=VPS.WHSE<1,N> "L#4";P_OPT="  |  ***           P_X  = 33;P_Y = SLN;P_VALUE = VPS.WHSE<1,N> "L

1060 P_X=33;P_Y=SLN;P_VALUE=FIELD(VPS.WHSE<1,N>,'@',1) "L#4";P_OPT=  |  P_X  = 33;P_Y = SLN;P_VALUE = FIELD(VPS.WHSE<1,N>,"@",1) "L#
1061 *T28779 ^                                                       |  *T23499 ^
1062 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1063 END                                                                END
1064 END ;*T28143                                                    |  END ;*C43504
1065 P_X  = 41 ; P_Y = SLN ; P_VALUE = VPS.U.M<1,N> "L#3" ; P_OPT =  |  P_X  = 41;P_Y = SLN;P_VALUE = VPS.U.M<1,N> "L#3";P_OPT = ""
1066 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1067 *T28143 END                                                     |  *C43504END
1068 IF ICR.CNV<N> = "MD0" THEN                                         IF ICR.CNV<N> = "MD0" THEN
1069 TEMP = INT(((VPS.ORD.QTY<1,N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<     TEMP = INT(((VPS.ORD.QTY<1,N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV
1070 P_X  = 45 ; P_Y = SLN ; P_VALUE = TEMP "R#10" ; P_OPT = ""      |  P_X  = 45;P_Y = SLN;P_VALUE = TEMP "R#10";P_OPT = ""
1071 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1072 TEMP = INT(((VPS.REC.QTY<1,N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<     TEMP = INT(((VPS.REC.QTY<1,N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV
1073 IF TEMP + 0 = 0 THEN TEMP = ""                                  |  P_X  = 56;P_Y = SLN;P_VALUE = TEMP "R#10";P_OPT = ""

1074 P_X  = 56 ; P_Y = SLN ; P_VALUE = TEMP "R#10" ; P_OPT = ""      <  
1075 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1076 TEMP = INT(((LINE.QTY<N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> +      TEMP = INT(((LINE.QTY<N>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> 
1077 IF TEMP + 0 = 0 THEN TEMP = ""                                  |  P_X  = 67;P_Y = SLN;P_VALUE = TEMP "R#10";P_OPT = ""
1078 P_X  = 67 ; P_Y = SLN ; P_VALUE = TEMP "R#10" ; P_OPT = ""      <  
1079 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1080 END ELSE                                                           END ELSE

1081 P_X  = 45 ; P_Y = SLN ; P_VALUE = OCONV(VPS.ORD.QTY<1,N>, "MD2  |  P_X  = 45;P_Y = SLN;P_VALUE = OCONV(VPS.ORD.QTY<1,N>, "MD2")
1082 P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(VPS.REC.QT  |  P_X  := AM:56;P_Y := AM:SLN;P_VALUE := AM:OCONV(VPS.REC.QTY<
1083 P_X  := AM:67 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.QTY<N  |  P_X  := AM:67;P_Y := AM:SLN;P_VALUE := AM:OCONV(LINE.QTY<N>,
1084 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1085 END                                                                END
1086 P_X  = 77 ; P_Y = SLN ; P_VALUE = LINE.FLAG<N> "L#3" ; P_OPT =  |  P_X  = 77;P_Y = SLN;P_VALUE = LINE.FLAG<N> "L#3";P_OPT = ""
1087 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1088 P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = VPS.PROD.DESC<1,N> "L#40" ;  |  P_X  = 4;P_Y = SLN+1;P_VALUE = VPS.PROD.DESC<1,N> "L#40";P_O
1089 P_X  := AM:45 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(VPS.ORD.  |  P_X  := AM:45;P_Y := AM:SLN+1;P_VALUE := AM:OCONV(VPS.ORD.AM
1090 P_X  := AM:56 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(VPS.REC.  |  P_X  := AM:56;P_Y := AM:SLN+1;P_VALUE := AM:OCONV(VPS.REC.AM
1091 P_X  := AM:67 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(LINE.VOU  |  P_X  := AM:67;P_Y := AM:SLN+1;P_VALUE := AM:OCONV(LINE.VOUCH
1092 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1093 CNT=CNT + 1                                                        CNT=CNT + 1
1094 NEXT N                                                             NEXT N

1095 FOR M=CNT TO PAGE.SIZE                                             FOR M=CNT TO PAGE.SIZE
1096 SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
1097 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"              |  P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
1098 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1099 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"            |  P_X  = 0;P_Y = SLN+1;P_VALUE = "";P_OPT = "CL"
1100 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1101 NEXT M                                                             NEXT M
1102 10001*                                                             10001* 
1103 RETURN                                                             RETURN

1102 10001*                                                             10001* 
1103 RETURN                                                             RETURN
1104 *** CHOOSE ITEMS TO PAY                                            *** CHOOSE ITEMS TO PAY
1105 70000*                                                             70000* 
1106 GOSUB 10000                                                        GOSUB 10000
1107 ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""                |  ECD.NUM = 27;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
1108 ECD.ACTION = 4; CALL SCRN.EDIT                                  |  ECD.ACTION = 4;CALL SCRN.EDIT
1109 BEGIN CASE                                                         BEGIN CASE
1110 CASE ECD.RET.VALUE='I'                                             CASE ECD.RET.VALUE='I'
1111 ECD.MINV = OLD.START.LINE                                          ECD.MINV = OLD.START.LINE

1137 ITEMS(I)=LN.NO                                                     ITEMS(I)=LN.NO
1138 LN.NO=LN.NO+1                                                      LN.NO=LN.NO+1
1139 NEXT I                                                             NEXT I
1140 END                                                                END
1141 CASE ECD.RET.VALUE='C'                                             CASE ECD.RET.VALUE='C'
1142 X=0; Y=21; MAXL=40 ; TYP=11 ; O.R="O"                           |  X=0;Y=21;MAXL=40;TYP=11;O.R="O"
1143 PMSG = "Enter line numbers separated by commas"                    PMSG = "Enter line numbers separated by commas"
1144 HMSG = "Enter line numbers you wish to pay separated by commas     HMSG = "Enter line numbers you wish to pay separated by comm
1145 CALL EDIT.SUB                                                      CALL EDIT.SUB
1146 ECD.RET.VALUE = VALUE                                              ECD.RET.VALUE = VALUE

1201 IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,LN>                     IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,LN>
1202 IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,LN>                     IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,LN>
1203 IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,LN>                        IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,LN>
1204 *T21348 ^                                                          *T21348 ^
1205 RETURN                                                             RETURN
1206 *T25755 v                                                       |  *
1207 85000*                                                             85000*
1208 XLNS = DCOUNT(VPS.WHSE,VM)                                         XLNS = DCOUNT(VPS.WHSE,VM)
1209 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VSTAT.PO<1,VM.NO> ELSE M     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VSTAT.PO<1,VM.NO> ELSE
1210 FOR XX = 1 TO XLNS                                                 FOR XX = 1 TO XLNS

1211 CURR.PROD = VPS.PROD<1,XX>                                         CURR.PROD = VPS.PROD<1,XX>
1212 CURR.CAT  = FIELD(VPS.WHSE<1,XX>,"@",1)                            CURR.CAT  = FIELD(VPS.WHSE<1,XX>,"@",1)
1213                                                                 >  CURR.LINE = FIELD(VPS.WHSE<1,XX>,"@",2)
1214 CURR.OFFSET=0                                                      CURR.OFFSET=0
1215 CURR.SEQ = FIELD(VPS.WHSE<1,XX>,"@",2) ;*T28143                 <  
1216 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
1217 *T28143 vIF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN            |  *C43504 IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN
1218 IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CURR  |  IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT AND CURR.LINE = OPO.P
1219 * this is the loc for the div,dept,cctr                            * this is the loc for the div,dept,cctr

1221 END ELSE                                                           END ELSE
1222 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
1223 DO.CONTINUE=1                                                      DO.CONTINUE=1
1224 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
1225 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
1226 *T28143 v         IF OPO.PROD.LINE<1,III> = CURR.CAT THEN       |  *C43504    IF OPO.PROD.LINE<1,III> = CURR.CAT THEN
1227 IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"@"  |  IF OPO.PROD.LINE<1,III> = CURR.CAT AND CURR.LINE =OPO.PROD.S
1228 CURR.OFFSET=III                                                    CURR.OFFSET=III
1229 DO.CONTINUE=0                                                      DO.CONTINUE=0
1230 END                                                                END

1233 END                                                                END
1234 END                                                                END
1235 IF CURR.OFFSET=0 THEN                                              IF CURR.OFFSET=0 THEN 
1236 CURR.OFFSET=PRODOFF                                                CURR.OFFSET=PRODOFF
1237 END                                                                END
1238 *T28143 VPS.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,1>                |  *C43504 VPS.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,1>
1239 VPS.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,CURR.OFFSET,1>               VPS.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,CURR.OFFSET,1>
1240 NEXT XX                                                            NEXT XX
1241 RETURN                                                             RETURN
1242 *T25755 ^                                                       |  *

1243 ***** CALLS FOR SYSCOM                                             ***** CALLS FOR SYSCOM
1244 91000*                                                             91000* 
1245 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
1246 RETURN                                                             RETURN
1247 92000*                                                             92000* 
1248 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
1249 RETURN                                                             RETURN
1250 93000*                                                             93000* 
1251 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)


APSBP/POST.OSP.SUB                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.OSP.SUB
Printed for thompson at 06/28/2006 04:09:03PM

0007 *COPY>PMC.CPYLIB>COM.COMPANY                                       *COPY>PMC.CPYLIB>COM.COMPANY
0008 **************************************************************     ************************************************************
0009 * REVISION    - [08.0][9.0]                                        * REVISION    - [08.0][9.0]
0010 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0011 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0012 * SOURCE      - JCSBP                                           |  * SOURCE      - COM.BP
0013 * PROGRAM     - POST.OSP.SUB                                       * PROGRAM     - POST.OSP.SUB
0014 * BY          - JIHAD YAMOUT , C.B.A                               * BY          - JIHAD YAMOUT , C.B.A
0015 * DESCRIPTION - THIS SUBROUTINE IS USED IN VOUCHER POSTING (VO  |  * DESCRIPTION - THIS SUBROUTINE IS USED IN COM.BP POST.OSP
0016                                                                 >  *               ALSO USED IN COM.BP VOUCHER.POST

0017 *                                                                  *
0018                                                                 >  ******          CHANGES MADE BY MARLA TRUITT 4/88 TO POST TO
0019                                                                 >  ******          PROFITABILITY * ALL LINES HAVE *** MTT AFTER
0020 *                                                                  *
0021                                                                 >  * Modification  - S.L.Fritz
0022                                                                 >  * Date          - 06/01/93
0023                                                                 >  * Upgrade       - From 8.0 to 9.0
0024                                                                 >  *

0023                                                                 >  * Upgrade       - From 8.0 to 9.0
0024                                                                 >  *
0025 *T23086 renee 01/28/1998 * Automatically post the transaction      *T23086 renee 01/28/1998 * Automatically post the transactio
0026 *                          when the voucher is posting.            *                          when the voucher is posting.
0027 *T23080 cindy 02/23/1999 * upgrade to rev11 buttons                *T23080 cindy 02/23/1999 * upgrade to rev11 buttons
0028 *T25824 cmykleb 05/29/2002 * Post Non-PRIMAC outside PO's duri  |  *T24137 lanny 04/26/2000 * Post Non-PRIMAC outside PO's duri
0029 *                            posting.                              *                          posting.
0030 *T28171 thompson 06/29/2004 * Read cost cntr to get proper dep  <  
0031 *                             for accounting.                   <  
0032 *T28171 lross 07/06/2004 * Remove mod 6/29/04 and correct logi  <  

0033 *                          not IN-PROCESS.                      <  
0034 *T28326 lross 11/10/2004 * Use same method for Fiscal period a  <  
0035 *                          OSP Posting.                         <  
0036 *T28678 lross 09/23/2005 * Negative rounding problem.           <  
0037 **************************************************************     ************************************************************
0038 *                                                                  *
0039 *---- FILE EQUATE                                                  *---- FILE EQUATE

0041 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0042 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0043 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0044 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0045 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0046                                                                 >  ******COPY>PROFIT.CPYLIB>JOB.COST ; *** MTT
0047                                                                 >  ******COPY>PROFIT.CPYLIB>JOB.STUFF ; *** MTT
0048 *COPY>JCS.CPYLIB>JOB.CUTOFF.NO                                     *COPY>JCS.CPYLIB>JOB.CUTOFF.NO
0049 *COPY>JCS.CPYLIB>DAILY.OSP                                         *COPY>JCS.CPYLIB>DAILY.OSP
0050 *COPY>JCS.CPYLIB>JOB.OSP                                           *COPY>JCS.CPYLIB>JOB.OSP

0063 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0064 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0065 *                                                                  *
0066 *---- FILE OPEN                                                    *---- FILE OPEN
0067 *                                                                  *
0068                                                                 >  *****OPEN '','JOB.COST' TO JOB.COST ELSE ERRMSG = 'JOB.COST 
0069                                                                 >  *****OPEN '','JOB.STUFF' TO JOB.STUFF ELSE ERRMSG = 'JOB.ST
U
0070 *                                                                  *
0071 *--- INIT                                                          *--- INIT
0072 *                                                                  *

0092 DOS.STATUS = 'OUTSIDE PO (':DOS.PO:') BELONGS TO JOB # (':OPO.     DOS.STATUS = 'OUTSIDE PO (':DOS.PO:') BELONGS TO JOB # (':OP
0093 GOTO 2899                                                          GOTO 2899
0094 END CASE                                                           END CASE
0095 END                                                                END
0096 END                                                                END
0097 *T28326 v                                                       <  
0098 DIV.CODE = DOS.DIV                                              <  
0099 READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE        <  
0100 DOS.STATUS = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"    <  
0101 GOTO 2899                                                       <  

0102 END                                                             <  
0103 READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE           <  
0104 DOS.STATUS = "CANNOT LOCATE CONTROL, DIVISIONS"                 <  
0105 GOTO 2899                                                       <  
0106 END                                                             <  
0107 IF SECURITY.REC<1> = "Y" THEN                                   <  
0108 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         <  

0109 IF DIV.CODE = "" THEN POS = 1 ; GOTO 80                         <  
0110 IF DIV.CODE = 'ALL' OR DIV.CODE = '00' THEN                     <  
0111 DOS.STATUS='DIV "ALL" OR "00" INVALID WHEN DIVISION-LEVEL CLOS  <  
0112 GOTO 2899                                                       <  
0113 END                                                             <  
0114 LOCATE DIV.CODE IN DIVISION.REC<1> SETTING POS ELSE             <  
0115 DOS.STATUS = "MISSING DIV CODE ":DIV.CODE:" IN DIVISION.REC"    <  

0116 GOTO 2899                                                       <  
0117 END                                                             <  
0118 END ELSE                                                        <  
0119 POS = 1                                                         <  
0120 END                                                             <  
0121 END ELSE                                                        <  
0122 POS = 1                                                         <  

0123 END                                                             <  
0124 80 *                                                            <  
0125 READ FISCAL.PERIODS FROM CONTROL, CONO:"JCFISCAL" ELSE DOS.STA  <  
0126 POSTING.MON = FISCAL.PERIODS<1,POS>                             <  
0127 IF POSTING.MON = "END" OR POSTING.MON = '' THEN                 <  
0128 DOS.STATUS = 'Cannot determine FISCAL PERIOD'                   <  
0129 GOTO 2899                                                       <  

0130 END                                                             <  
0131 *T28326 ^                                                       <  
0132 MATREAD CAOS.REC FROM CATEGORY.OSP , CONO:DOS.PRD.LINE ELSE        MATREAD CAOS.REC FROM CATEGORY.OSP , CONO:DOS.PRD.LINE ELSE
0133 DOS.STATUS = "CATEGORY.OSP # (":DOS.PRD.LINE:") NOT ON FILE"       DOS.STATUS = "CATEGORY.OSP # (":DOS.PRD.LINE:") NOT ON FILE"
0134 GOTO 2899                                                          GOTO 2899
0135 END                                                                END
0136 BEGIN CASE                                                         BEGIN CASE

0143 CASE JOB.STATUS<1,1> = 8                                           CASE JOB.STATUS<1,1> = 8
0144 DOS.STATUS = 'JOB # ':DOS.JOB:' IS PURGED'                         DOS.STATUS = 'JOB # ':DOS.JOB:' IS PURGED'
0145 GOTO 2899                                                          GOTO 2899
0146 END CASE                                                           END CASE
0147 IF JOB.TYPE # "R" AND JOB.TYPE # DOS.TYPE THEN                     IF JOB.TYPE # "R" AND JOB.TYPE # DOS.TYPE THEN
0148 DOS.STATUS = "JOB BELONGS TO A DIFFERENT TYPE"                  |  DOS.STATUS = "JOB BELONG TO A DIFFERENT TYPE"
0149 GOTO 2899                                                          GOTO 2899
0150 END                                                                END
0151 IF JOB.DIV # DOS.DIV THEN                                          IF JOB.DIV # DOS.DIV THEN
0152 DOS.STATUS = "JOB BELONGS TO DIFFERENT DIVISION"                |  DOS.STATUS = "JOB BELONG TO DIFFERENT DIVISION"

0151 IF JOB.DIV # DOS.DIV THEN                                          IF JOB.DIV # DOS.DIV THEN
0152 DOS.STATUS = "JOB BELONGS TO DIFFERENT DIVISION"                |  DOS.STATUS = "JOB BELONG TO DIFFERENT DIVISION"
0153 GOTO 2899                                                          GOTO 2899
0154 END                                                                END
0155 IF JOB.DEPT # DOS.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DOS.DEPT[1,LEN(JOB.DEPT)] THEN
0156 DOS.STATUS = "JOB BELONGS TO DIFFERENT DEPARTMENT"              |  DOS.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"
0157 GOTO 2899                                                          GOTO 2899
0158 END                                                                END
0159 *T28171 v IF JOB.STATUS<1,1> > 1 OR JOB.TRACK.DATE<1,7> # "" O  |  IF JOB.STATUS<1,1> > 1 OR JOB.TRACK.DATE<1,7> # "" OR JOB.TR
0160 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.  <  

0182 END                                                                END
0183 MATREAD CCTR.REC FROM COST.CNTR, CONO : DOS.CCTR ELSE              MATREAD CCTR.REC FROM COST.CNTR, CONO : DOS.CCTR ELSE
0184 DOS.STATUS = 'CCTR # ':DOS.CCTR:' IS MISSING'                      DOS.STATUS = 'CCTR # ':DOS.CCTR:' IS MISSING'
0185 GOTO 2899                                                          GOTO 2899
0186 END                                                                END
0187 * T28171                                                        <  
0188 *IF @LOGNAME = 'thompson' THEN DEBUG                            <  
0189 *  DOS.DEPT = CCTR.DEPT                                         <  
0190 *T28171                                                         <  
0191 IF CCTR.DEPT # DOS.DEPT THEN                                       IF CCTR.DEPT # DOS.DEPT THEN

0238 JOS.DUE.DATE = DOS.DUE.DATE                                        JOS.DUE.DATE = DOS.DUE.DATE
0239 JOS.DATE = DOS.DATE                                                JOS.DATE = DOS.DATE
0240 JOS.VEND = DOS.VEND                                                JOS.VEND = DOS.VEND
0241 JOS.PO = DOS.PO                                                    JOS.PO = DOS.PO
0242 JOS.QTY = DOS.QTY                                                  JOS.QTY = DOS.QTY
0243 IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678  <  
0244 *T28326v JOS.MON = POSTING.MON<1,JOS.DIV>                       <  
0245 JOS.MON = POSTING.MON                                              JOS.MON = POSTING.MON
0246 JOS.INV = DOS.INV                                                  JOS.INV = DOS.INV
0247 JOS.DESC = DOS.DESC                                                JOS.DESC = DOS.DESC

0278 REPEAT                                                             REPEAT
0279 BEGIN CASE                                                         BEGIN CASE
0280 CASE WLR.OS.COST < 2                                               CASE WLR.OS.COST < 2
0281 JOS.COST = JOS.DCOST                                               JOS.COST = JOS.DCOST
0282 CASE NUM(CAOS.FOH.PCT)                                             CASE NUM(CAOS.FOH.PCT)
0283 *T28678        JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/100  |  JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/10000)) + .5)
0284 JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/10000)) + ROND)     <  
0285 CASE 1                                                             CASE 1
0286 MATREAD FTR.REC FROM FOH.TABLE, CONO : CAOS.FOH.PCT ELSE           MATREAD FTR.REC FROM FOH.TABLE, CONO : CAOS.FOH.PCT ELSE
0287 MAT FTR.REC = ''                                                   MAT FTR.REC = ''

0306 FOH.PCT = 0                                                        FOH.PCT = 0
0307 FOR FTR = 1 TO FTR.CNT WHILE FOH.PCT = 0                           FOR FTR = 1 TO FTR.CNT WHILE FOH.PCT = 0
0308 IF TOT.DCOST <= FTR.QTY<1,FTR> THEN                                IF TOT.DCOST <= FTR.QTY<1,FTR> THEN
0309 FOH.PCT = FTR.PCT<1,FTR>                                           FOH.PCT = FTR.PCT<1,FTR>
0310 END                                                                END
0311 NEXT FTR                                                        |  NEXT FPR
0312 END                                                                END
0313 END                                                                END
0314 *T28678        JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)  |  JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)) + .5) - TOT
0315 JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)) + ROND) - TOT  <  

0316 END CASE                                                           END CASE
0317                                                                 >  *****   MATREADU JOB.COST.REC FROM JOB.COST , CONO:DOS.JOB E
0318                                                                 >  *****      MAT JOB.COST.REC = "" ; *** MTT
0319                                                                 >  *****      JOB.COST.ID = CONO:DOS.JOB ; *** MTT
0320                                                                 >  *****   END ; *** MTT
0321                                                                 >  *****   MATREAD JOB.STUFF.REC FROM JOB.STUFF , CONO:DOS.JOB 
0322                                                                 >  *****      MAT JOB.STUFF.REC = "" ; *** MTT
0323                                                                 >  *****   END ; *** MTT

0422 IF CFND # 0 THEN                                                   IF CFND # 0 THEN
0423 IF DOS.PRD.LINE = OPO.PROD.LINE<1,CFND> THEN CFND= CFND ELSE C     IF DOS.PRD.LINE = OPO.PROD.LINE<1,CFND> THEN CFND= CFND ELSE
0424 END                                                                END
0425 PTR = PTR + 1                                                      PTR = PTR + 1
0426 REPEAT                                                             REPEAT
0427                                                                 >  *     IF OPO.JOB.NO # '' THEN
0428 IF CFND # 0 THEN                                                   IF CFND # 0 THEN
0429 OPO.QTY.RECVD<1,CFND> = OPO.QTY.RECVD<1,CFND> + DOS.QTY            OPO.QTY.RECVD<1,CFND> = OPO.QTY.RECVD<1,CFND> + DOS.QTY
0430                                                                 >  * CSF 23044 LMR
0431 OPO.TOT.OPEN<1,CFND> = OPO.TOT.OPEN<1,CFND> - DOS.QTY              OPO.TOT.OPEN<1,CFND> = OPO.TOT.OPEN<1,CFND> - DOS.QTY

0432 IF OPO.TOT.OPEN<1,CFND> < 0 THEN OPO.TOT.OPEN<1,CFND> = 0          IF OPO.TOT.OPEN<1,CFND> < 0 THEN OPO.TOT.OPEN<1,CFND> = 0
0433                                                                 >  *
0434 OPO.DATE.RECVD<1,CFND> = DOS.DATE                                  OPO.DATE.RECVD<1,CFND> = DOS.DATE
0435 OPO.INV.NO<1,CFND> = DOS.INV                                       OPO.INV.NO<1,CFND> = DOS.INV
0436 OPO.AMT.RECVD<1,CFND> = OPO.AMT.RECVD<1,CFND> + DOS.GRS.AMT        OPO.AMT.RECVD<1,CFND> = OPO.AMT.RECVD<1,CFND> + DOS.GRS.AMT
0437 IF OPO.EST.COST<1,CFND> # OPO.AMT.RECVD<1,CFND> THEN               IF OPO.EST.COST<1,CFND> # OPO.AMT.RECVD<1,CFND> THEN
0438 OPO.STATUS = 1                                                     OPO.STATUS = 1
0439 END                                                                END

0456 ALH.REF = "O*":JOS.PO:"*":DOS.JOB                                  ALH.REF = "O*":JOS.PO:"*":DOS.JOB
0457 ALH.SRC = "OR"                                                     ALH.SRC = "OR"
0458 ALH.MON = JOS.MON                                                  ALH.MON = JOS.MON
0459 ALH.AMT = 0 - DOS.GRS.AMT                                          ALH.AMT = 0 - DOS.GRS.AMT
0460 ALH.ACCT = CAOS.ACCRU.LIAB                                         ALH.ACCT = CAOS.ACCRU.LIAB
0461                                                                 >  * TASK 20080 v
0462 ALH.DV.DP.CC = DOS.DIV:DOS.DEPT:DOS.CCTR                           ALH.DV.DP.CC = DOS.DIV:DOS.DEPT:DOS.CCTR
0463                                                                 >  * TASK 20080 ^
0464 MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID                       MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID
0465 END                                                                END

0465 END                                                                END
0466 END ELSE                                                           END ELSE
0467 RELEASE OUTSIDE.PO, CONO:DOS.PO                                    RELEASE OUTSIDE.PO, CONO:DOS.PO
0468 END                                                                END
0469 END                                                                END
0470                                                                 >  *****   SLSM = JOB.SLSMN ; *** MTT
0471                                                                 >  *****   CUST = JOB.CUST ; *** MTT
0472                                                                 >  *****   JOB.COST.DESC = JOB.DESC ; *** MTT
0473                                                                 >  *****   EST.COST = JOB.EST.COST ; *** MTT
0474                                                                 >  *****   EST.SALE = JOB.EST.SALE ; *** MTT

0475                                                                 >  *****   QUOTE = JOB.CONF.AMT ; *** MTT
0476                                                                 >  *****   MARKUP = JOB.MARKUP ; *** MTT
0477                                                                 >  *****   PRIOR.JOB = JOB.PRIOR.JOB ; *** MTT
0478                                                                 >  *****   TYPE = JOB.TYPE ; *** MTT
0479                                                                 >  *****   SHIP.BY = JOB.SHIP.VIA ; *** MTT
0480                                                                 >  *****   EST.ID = JOB.EST ; *** MTT
0481                                                                 >  *****   EST.TYPE = JOB.EST.TYPE ; *** MTT

0482                                                                 >  *****   QTY = JOB.QTY ; *** MTT
0483                                                                 >  *****   PRICE.PER.THOU = COST.PER.THOUSAND ; *** MTT
0484                                                                 >  *****   OS.COST<1,JOS.MON[5,2]> = OS.COST<1,JOS.MON[5,2]> + 
0485                                                                 >  *****   OS.WIP = OS.WIP + SUMMATION(JOS.WIP<1,1>) ; *** MTT
0486                                                                 >  *****   WIP = WIP + SUMMATION(JOS.WIP<1,1>) ; *** MTT
0487                                                                 >  *****   TOTAL.COST<1,JOS.MON[5,2]> = TOTAL.COST<1,JOS.MON[5,
0488                                                                 >  *****   FULL.COST = FULL.COST + JOS.COST ; *** MTT

0489 MATWRITE JOB.REC ON JOB, CONO : DOS.JOB                            MATWRITE JOB.REC ON JOB, CONO : DOS.JOB
0490                                                                 >  *****   MATWRITE JOB.COST.REC ON JOB.COST , CONO:DOS.JOB ; *
0491 MATWRITE JOS.REC ON JOB.OSP, JOS.ID                                MATWRITE JOS.REC ON JOB.OSP, JOS.ID
0492 CASE 1                                                             CASE 1
0493 MAT OJOS.REC = ""                                                  MAT OJOS.REC = ""
0494 OJOS.JOB = DOS.JOB                                                 OJOS.JOB = DOS.JOB
0495 OJOS.TYPE = DOS.TYPE                                               OJOS.TYPE = DOS.TYPE
0496 OJOS.SPOIL.CODE = DOS.SPOIL.CODE                                   OJOS.SPOIL.CODE = DOS.SPOIL.CODE


APSBP/PURGE.VEND.VOUCH                                             /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/PURGE.VEND.VOUCH
Printed for thompson at 06/28/2006 04:09:03PM

0005 * SOURCE      - APSBP                                              * SOURCE      - APSBP
0006 * PROGRAM     - PURGE.VEND.VOUCH                                   * PROGRAM     - PURGE.VEND.VOUCH
0007 * BY          - WALID YAMOUT,COMPUTER BUSINESS ASSOCIATES          * BY          - WALID YAMOUT,COMPUTER BUSINESS ASSOCIATES 
0008 * DATE        - 02/27/86                                           * DATE        - 02/27/86
0009 * DESCRIPTION - This program purge items from VEND.VOUCH.STATS     * DESCRIPTION - This program purge items from VEND.VOUCH.STA
0010 *T25669 lanny 03/05/2001 * May be multilple PO's for given rec  |  *T23499 rick 08/30/1999 * Modify pgm to recognize new Outsid
0011 *                          VSTAT.PO.VOU field not cleared.      |  *                         with seq numbers
0012 *T25755 cm 04/19/2001 * Modify pgm to recognize new OUTSIDE.PO  <  
0013 *                       with seq numbers.                       <  
0014 *ENDDOC                                                            *ENDDOC

0014 *ENDDOC                                                            *ENDDOC
0015 ******************************************************             ******************************************************
0016 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0017 *COPY>APS.CPYLIB>VEND.VOUCH.STATS                                  *COPY>APS.CPYLIB>VEND.VOUCH.STATS
0018 *COPY>APS.CPYLIB>VEND.PROD.STATS                                   *COPY>APS.CPYLIB>VEND.PROD.STATS
0019 *COPY>APS.CPYLIB>VEND.STATS ;*T25669                            <  
0020 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0021 *                                                                  *
0022 **** READ PROC VALUES                                              **** READ PROC VALUES
0023 *                                                                  *

0025 PROCREAD LINE ELSE                                                 PROCREAD LINE ELSE
0026 PRINT @(0,23):"THIS PROGRAM MUST RUN FROM A PROC":;INPUT X,1:      PRINT @(0,23):"THIS PROGRAM MUST RUN FROM A PROC":;INPUT X,1
0027 GOTO 99999                                                         GOTO 99999
0028 END                                                                END
0029 CONO = LINE<1>                                                     CONO = LINE<1>
0030 PO.TYPE = LINE<7> ;*T25669                                      <  
0031 *                                                                  *
0032 **** OPEN FILE                                                     **** OPEN FILE
0033 *                                                                  *
0034 OPEN "","VEND.VOUCH.STATS" TO VEND.VOUCH.STATS ELSE                OPEN "","VEND.VOUCH.STATS" TO VEND.VOUCH.STATS ELSE 

0037 END                                                                END
0038 OPEN "","VEND.PROD.STATS" TO VEND.PROD.STATS ELSE                  OPEN "","VEND.PROD.STATS" TO VEND.PROD.STATS ELSE 
0039 ERRMSG = "VEND.PROD.STATS FILE IS MISSING"                         ERRMSG = "VEND.PROD.STATS FILE IS MISSING"
0040 GOTO 88888                                                         GOTO 88888
0041 END                                                                END
0042 *T25669 v                                                       <  
0043 OPEN "","VEND.STATS" TO VEND.STATS ELSE                         <  
0044 ERRMSG = "VEND.STATS FILE IS MISSING"                           <  
0045 GOTO 88888                                                      <  
0046 END                                                             <  

0047 *T25669 ^                                                       <  
0048 OPEN "","COMPANY" TO COMPANY ELSE                                  OPEN "","COMPANY" TO COMPANY ELSE 
0049 ERRMSG = "COMPANY FILE IS MISSING"                                 ERRMSG = "COMPANY FILE IS MISSING"
0050 GOTO 88888                                                         GOTO 88888
0051 END                                                                END
0052 MATREAD COMP.REC FROM COMPANY, CONO ELSE                           MATREAD COMP.REC FROM COMPANY, CONO ELSE
0053 ERRMSG = "COMPANY RECORD IS MISSING"                               ERRMSG = "COMPANY RECORD IS MISSING"

0052 MATREAD COMP.REC FROM COMPANY, CONO ELSE                           MATREAD COMP.REC FROM COMPANY, CONO ELSE
0053 ERRMSG = "COMPANY RECORD IS MISSING"                               ERRMSG = "COMPANY RECORD IS MISSING"
0054 GOTO 88888                                                         GOTO 88888
0055 END                                                                END
0056 *                                                                  *
0057 DEL.PO='' ; NODEL.PO='' ;*T25669                                <  
0058 *                                                               <  
0059 **** MAIN PROCESS                                                  **** MAIN PROCESS
0060 *                                                                  *
0061 DATA = 1                                                           DATA = 1

0064 WHILE DATA = 1 DO                                                  WHILE DATA = 1 DO
0065 IF CONO # ID[1,3] THEN GOTO 1999                                   IF CONO # ID[1,3] THEN GOTO 1999
0066 MATREADU VVOS.REC FROM VEND.VOUCH.STATS, ID ELSE GOTO 1888         MATREADU VVOS.REC FROM VEND.VOUCH.STATS, ID ELSE GOTO 1888
0067 VEND.NO = FIELD(ID,"!",1)[4,8]                                     VEND.NO = FIELD(ID,"!",1)[4,8]
0068 VOUCH.NO = FIELD(ID,"!",2)                                         VOUCH.NO = FIELD(ID,"!",2)
0069 MATREADU VSTAT.REC FROM VEND.STATS,CONO:VEND.NO:"!":PO.TYPE EL  <  
0070 BLK = 0                                                            BLK = 0
0071 CNT = COUNT(VVOS.PO.NO,VM) + (VVOS.PO.NO # "")                     CNT = COUNT(VVOS.PO.NO,VM) + (VVOS.PO.NO # "")
0072 *T25669 FOR TR = 1 TO CNT UNTIL BLK                             |  FOR TR = 1 TO CNT UNTIL BLK
0073 FOR TR = CNT TO 1 STEP -1 ;*T25669                              |  VPDS.KEY = CONO : VEND.NO : "!" : VVOS.PO.TYPE<1,1> : "!" : 

0074 BLK = 0                                                         |  IF VVOS.PO.TYPE<1,1> = "M" THEN
0075 *     VPDS.KEY = CONO : VEND.NO : "!" : VVOS.PO.TYPE<1,1> : "!  <  
0076 VPDS.KEY = CONO : VEND.NO : "!" : PO.TYPE : "!" : VVOS.PO.NO<1  <  
0077 *     IF VVOS.PO.TYPE<1,1> = "M" THEN                           <  
0078 IF PO.TYPE = "M" THEN                                           <  
0079 VPDS.KEY = VPDS.KEY : VVOS.SEQ.NO<1,TR>                            VPDS.KEY = VPDS.KEY : VVOS.SEQ.NO<1,TR>
0080 END ELSE                                                           END ELSE

0081 VPDS.KEY = VPDS.KEY : VVOS.PROD<1,TR>                              VPDS.KEY = VPDS.KEY : VVOS.PROD<1,TR>
0082 END                                                                END
0083 *T25755 v                                                       |  *T23499 v
0084 *        VPDS.KEY = VPDS.KEY : "!" : VVOS.WHSE<1,TR>            |  IF VVOS.PO.TYPE<1,1> = "O" THEN
0085 IF VVOS.PO.TYPE<1,1> = 'O' THEN                                 |  VPDS.KEY = VPDS.KEY : "!" : VVOS.WHSE<1,TR>:"@":VVOS.PO.SEQ<
0086 VPDS.KEY = VPDS.KEY:'!':VVOS.WHSE<1,TR>:'@':VVOS.PO.SEQ<1,TR>   <  
0087 END ELSE                                                           END ELSE
0088 VPDS.KEY = VPDS.KEY : "!" : VVOS.WHSE<1,TR>                        VPDS.KEY = VPDS.KEY : "!" : VVOS.WHSE<1,TR>
0089 END                                                                END

0090 *T25755 ^                                                       |  *T23499 ^       
0091 MATREAD VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPDS.     MATREAD VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPD
0092 LOCATE VOUCH.NO IN VPDS.VOU.NO<1>,1 SETTING BLK ELSE BLK = 0       LOCATE VOUCH.NO IN VPDS.VOU.NO<1>,1 SETTING BLK ELSE BLK = 0
0093 *T25669 v                                                       <  
0094 IF BLK = 0 THEN                                                 <  
0095 LOCATE VVOS.PO.NO<1,TR> IN DEL.PO<1>,1 SETTING DP ELSE          <  
0096 DEL.PO<1,DP> = VVOS.PO.NO<1,TR>                                 <  

0097 END                                                             <  
0098 VVOS.TOT.COST -= VVOS.PROD.COST<1,TR>                           <  
0099 DEL VVOS.PO.NO<1,TR>                                            <  
0100 DEL VVOS.PO.TYPE<1,TR>                                          <  
0101 DEL VVOS.PROD<1,TR>                                             <  
0102 DEL VVOS.PROD.DESC<1,TR>                                        <  
0103 DEL VVOS.U.M<1,TR>                                              <  

0104 DEL VVOS.WHSE<1,TR>                                             <  
0105 DEL VVOS.VOU.QTY<1,TR>                                          <  
0106 DEL VVOS.VOU.UN.COST<1,TR>                                      <  
0107 DEL VVOS.PROD.COST<1,TR>                                        <  
0108 DEL VVOS.SEQ.NO<1,TR>                                           <  
0109 DEL VVOS.MISC.CATG<1,TR>                                        <  
0110 DEL VVOS.PO.SEQ<1,TR>                                           <  

0111 END ELSE                                                        <  
0112 LOCATE VVOS.PO.NO<1,TR> IN NODEL.PO<1>,1 SETTING DP ELSE        <  
0113 NODEL.PO<1,DP> = VVOS.PO.NO<1,TR>                               <  
0114 END                                                             <  
0115 END                                                             <  
0116 *T25669 ^                                                       <  
0117 NEXT TR                                                            NEXT TR

0118 *T25669 v                                                       |  IF BLK THEN GOTO 1888
0119 *  IF BLK THEN GOTO 1888                                        <  
0120 *  DELETE VEND.VOUCH.STATS, ID                                  <  
0121 IF VVOS.PO.NO = '' THEN                                         <  
0122 DELETE VEND.VOUCH.STATS, ID                                        DELETE VEND.VOUCH.STATS, ID
0123 END ELSE                                                        <  
0124 MATWRITE VVOS.REC ON VEND.VOUCH.STATS, ID                       <  

0125 END                                                             <  
0126 IF NODEL.PO # '' THEN                                           <  
0127 FOR I = DCOUNT(NODEL.PO,VM) TO 1 STEP -1                        <  
0128 LOCATE NODEL.PO<1,I> IN DEL.PO<1>,1 SETTING FND THEN            <  
0129 DEL DEL.PO<1,FND>                                               <  
0130 END                                                             <  
0131 NEXT I                                                          <  

0132 END                                                             <  
0133 IF DEL.PO # '' THEN                                             <  
0134 FOR I = DCOUNT(DEL.PO,VM) TO 1 STEP -1                          <  
0135 LOCATE DEL.PO<1,I> IN VSTAT.PO<1>,1 SETTING POFND THEN          <  
0136 LOCATE VOUCH.NO IN VSTAT.VOUCH.NOS<1,POFND>,1 SETTING VFND THE  <  
0137 DEL VSTAT.VOUCH.NOS<1,POFND,VFND>                               <  
0138 END                                                             <  

0139 END                                                             <  
0140 NEXT I                                                          <  
0141 END                                                             <  
0142 IF VSTAT.PO # '' THEN MATWRITE VSTAT.REC ON VEND.STATS, CONO:V  <  
0143 *T25669 ^                                                       <  
0144 GOTO 1999                                                          GOTO 1999
0145 1888*                                                              1888*


APSBP/VEND.HISTORY                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VEND.HISTORY
Printed for thompson at 06/28/2006 04:09:03PM

0007 * DATE        - 10/19/88                                           * DATE        - 10/19/88
0008 * DESCRIPTION - Scrolling Forward and Backward                     * DESCRIPTION - Scrolling Forward and Backward
0009 * TASK 15943 - CHECK REVERSAL - PRINT LAST CHECK# ONLY             * TASK 15943 - CHECK REVERSAL - PRINT LAST CHECK# ONLY
0010 *T22950 lanny 05/29/1998 * Deleted Vouchers should show Zero b     *T22950 lanny 05/29/1998 * Deleted Vouchers should show Zero
0011 *                          open.                                   *                          open.
0012 *T26580 adelgado 05/08/2002 * Mod to allow multi-users to acce  |  *T26245 ajibaly 12/07/2001 * REPLACE DUE DATE WITH CHECK DAT
0013 *                             same vendor.                      |  *                            PROCESSED
0014 *C40418 cmykleb 07/24/2002 * Change pgm to not use the proc.    <  
0015 **********************************************                     **********************************************
0016 *                                                                  *

0017 *-- EQUATE CPYLIB                                                  *-- EQUATE CPYLIB
0018 *                                                                  *
0019 *COPY>PMC.CPYLIB>COMPANY                                        <  
0020 *COPY>PMC.CPYLIB>VEND                                           <  
0021 *COPY>APS.CPYLIB>SQV                                               *COPY>APS.CPYLIB>SQV
0022 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0023 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0024 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0025 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM

0028 *-- SYSCOM CALL                                                    *-- SYSCOM CALL
0029 *                                                                  *
0030 SYS.TYPE=1                                                         SYS.TYPE=1
0031 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0032 *                                                                  *
0033                                                                 >  *-- PROC READ
0034                                                                 >  *
0035                                                                 >  PROCREAD BUFF ELSE ERRMSG = "MUST RUN FROM PROC"; GOTO 93000
0036                                                                 >  CONO = BUFF<1>
0037                                                                 >  VEND.NO = BUFF<3>

0038                                                                 >  VEND.NAME = BUFF<5>
0039                                                                 >  VEND.STAT = BUFF<6>
0040                                                                 >  *
0041 *-- OPEN FILES                                                     *-- OPEN FILES
0042 *                                                                  *
0043 MAT FILE.VARS = ""                                                 MAT FILE.VARS = ""
0044 OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MI  |  *T26245 v

0045 OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MI  |  *    OPEN "","APS.SCREENS" TO M.SCREENS ELSE ERRMSG = "APS.S
0046 OPEN "","APS.SCREENS" TO M.SCREENS ELSE ERRMSG = "APS.SCREENS   |  OPEN "","CBN.SCREENS" TO M.SCREENS ELSE ERRMSG = "CBN.SCREEN
0047                                                                 >  *T26245 ^
0048 OPEN "","SQV" TO SQV ELSE ERRMSG = "SQV FILE IS MISSING" ; GOS     OPEN "","SQV" TO SQV ELSE ERRMSG = "SQV FILE IS MISSING" ; G
0049 OPEN "","VEND" TO VEND ELSE ERRMSG = "VEND FILE IS MISSING" ;   <  
0050 *                                                                  *
0051 *-- GET COMPANY                                                 |  *-- READ SELECT LIST

0052 *                                                                  *
0053 MAT COMP.REC = ""                                               |  READLIST KEY FROM CONO:"VLINQ" ELSE KEY = ""
0054 CONO = ""                                                       <  
0055 CALL GET.CONO(CONO, MAT COMP.REC)                               <  
0056 *                                                                  *
0057 *-- INITIALIZATION                                                 *-- INITIALIZATION
0058 *                                                                  *
0059 MAT EDIT.COM.DRIVER = ""                                           MAT EDIT.COM.DRIVER = ""

0060 ECD.SCRN.CNT = 1                                                   ECD.SCRN.CNT = 1
0061 ECD.SCRN.NAME = "VEND.HISTORY"                                  |  ECD.SCRN.NAME<1> = "VEND.HISTORY"
0062 ECD.ACTION = 1; CALL SCRN.EDIT                                     ECD.ACTION = 1; CALL SCRN.EDIT
0063 1 *                                                             |  ECD.SCRN.NO = 1
0064                                                                 >  *   MAT EDIT.COM = ""
0065                                                                 >  *   TYP = 0
0066                                                                 >  *   CALL EDIT.SUB
0067 FILL = "#"                                                         FILL = "#"

0066                                                                 >  *   CALL EDIT.SUB
0067 FILL = "#"                                                         FILL = "#"
0068 LINE.SPACE = 1                                                     LINE.SPACE = 1
0069 OLD.LINES = 0                                                      OLD.LINES = 0
0070 PAGE.SIZE = 14 ; BEGIN.PAGE = 6                                    PAGE.SIZE = 14 ; BEGIN.PAGE = 6
0071 ECD.SCRN.NO = 1                                                 |  1*
0072 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0073 ECD.ACTION = 6; CALL SCRN.EDIT                                     ECD.ACTION = 6; CALL SCRN.EDIT
0074                                                                 >  SCV.REC(1)<ECD.SCRN.NO> = VEND.NO
0075                                                                 >  SCV.REC(2)<ECD.SCRN.NO> = VEND.NAME

0076                                                                 >  SCV.REC(3)<ECD.SCRN.NO> = VEND.STAT
0077                                                                 >  ECD.ACTION = 3; CALL SCRN.EDIT
0078 *                                                                  *
0079 *-- ENTER VENDOR #                                              <  
0080 *                                                               <  
0081 ECD.NUM = 1                                                     <  
0082 ECD.ACTION = 4; CALL SCRN.EDIT                                  <  

0083 BEGIN CASE                                                      <  
0084 CASE ECD.RET.VALUE = "END"                                      <  
0085 GOTO 99999                                                      <  
0086 CASE ECD.RET.VALUE # ""                                         <  
0087 MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE             <  
0088 ERRMSG = "VENDOR # NOT ON FILE"                                 <  
0089 GOSUB 91000                                                     <  

0090 GOTO 1                                                          <  
0091 END                                                             <  
0092 VNO = ECD.RET.VALUE                                             <  
0093 CMD = 'SSELECT SQV WITH CONO = "':CONO:'" AND WITH VEND_ = "':  <  
0094 UDTEXECUTE CMD CAPTURING TRASH                                  <  
0095 DONE = 1                                                        <  
0096 KEY = ""                                                        <  

0097 LOOP UNTIL DONE = 0                                             <  
0098 READNEXT ID ELSE DONE = 0                                       <  
0099 IF DONE # 0 THEN KEY<-1> = ID                                   <  
0100 REPEAT                                                          <  
0101 SCV.REC(2) = VEND.DESC                                          <  
0102 SCV.REC(3) = VEND.STATUS                                        <  
0103 ECD.NUM = 2 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                   <  

0104 ECD.NUM = 3 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                   <  
0105 CASE 1                                                          <  
0106 GOTO 1                                                          <  
0107 END CASE                                                        <  
0108 *                                                               <  
0109 ***                                                                ***
0110 *                                                                  *

0120 ECD.ACTION=4; CALL SCRN.EDIT                                       ECD.ACTION=4; CALL SCRN.EDIT
0121 OPT=ECD.RET.VALUE                                                  OPT=ECD.RET.VALUE
0122 BEGIN CASE                                                         BEGIN CASE
0123 CASE OPT="" OR OPT="E" OR OPT="END"                                CASE OPT="" OR OPT="E" OR OPT="END"
0124 MORE=0                                                             MORE=0
0125 CASE OPT="F" OR OPT = "S"                                       |  CASE OPT="F"
0126 LN=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE               LN=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0127 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
0128 GOSUB 100                                                          GOSUB 100
0129 CASE OPT="B" OR OPT = "SR"                                      |  CASE OPT="B"

0136 CASE OPT="SB"                                                      CASE OPT="SB"
0137 LN = LINES                                                         LN = LINES
0138 GOSUB 100                                                          GOSUB 100
0139 END CASE                                                           END CASE
0140 WHILE MORE DO REPEAT                                               WHILE MORE DO REPEAT
0141 GO 1                                                            |  GOTO 99999
0142 *                                                                  *
0143 *-- SCROLLING ROUTINE                                              *-- SCROLLING ROUTINE
0144 *                                                                  *
0145 100*                                                               100*

0151 CNT=1                                                              CNT=1
0152 FOR N=START.LINE TO LAST.LINE                                      FOR N=START.LINE TO LAST.LINE
0153 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0154 MATREAD SQV.REC FROM SQV,KEY<N> ELSE MAT SQV.REC = ""              MATREAD SQV.REC FROM SQV,KEY<N> ELSE MAT SQV.REC = ""
0155 VAL.CNT = DCOUNT(SQV.CHK.NO,VM)                                    VAL.CNT = DCOUNT(SQV.CHK.NO,VM)
0156                                                                 >  *T26245 v
0157                                                                 >  * NOTE: SQV.DUE.PD IS NOT IN A CPYLIB
0158                                                                 >  *C40780IF NUM(SQV.CHK.NO) AND SQV.CHK.NO # '' THEN
0159                                                                 >  IF NUM(SQV.CHK.NO<1,VAL.CNT>) AND SQV.CHK.NO<1,VAL.CNT> # ''
0160                                                                 >  *C40780  SQV.DUE.PD = SQV.PAID.DATE

0161                                                                 >  SQV.DUE.PD = SQV.PAID.DATE<1,VAL.CNT>
0162                                                                 >  END ELSE
0163                                                                 >  SQV.DUE.PD = SQV.DUE.DATE
0164                                                                 >  END
0165                                                                 >  *T26245 ^
0166 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#4" ; P_OPT = ""              P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#4" ; P_OPT = ""
0167 P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:KEY<N>[4,6] "L#6"     P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:KEY<N>[4,6] "L#

0168 P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.INV "L#10"       P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.INV "L#10"
0169 P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.INV.DA     P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.INV.
0170 P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DUE.DA  |  *T26245 v
0171                                                                 >  * P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DU
0172                                                                 >  P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DUE.
0173                                                                 >  *T26245 ^
0174 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0175 IF SQV.DUE.DATE = "ADVANCE" THEN                                   IF SQV.DUE.DATE = "ADVANCE" THEN
0176 P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(SQV.GRS.AMT * (-1), "M     P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(SQV.GRS.AMT * (-1), 

0211 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
0212 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0213 NEXT N                                                             NEXT N
0214 RETURN                                                             RETURN
0215 *                                                                  *
0216 *-- ERROR MSGS                                                  |  *-- ERROR MESSG
0217 *                                                                  *
0218 91000*                                                          <  
0219 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC);RETURN                <  
0220 93000*                                                             93000*

0221 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                          ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
0222 *                                                                  *
0223 *-- END OF JOB                                                     *-- END OF JOB
0224 *                                                                  *
0225 99999*                                                             99999*
0226 ECD.ACTION = 99; CALL SCRN.EDIT                                 |  *     PRINT @(-1)
0227                                                                 >  ECD.ACTION = "99"; CALL SCRN.EDIT
0228 END                                                                END
0229 


APSBP/VEND.PO.INQ                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VEND.PO.INQ
Printed for thompson at 06/28/2006 04:09:04PM

0001 SUBROUTINE VEND.PO.INQ(PAY.VALUES)                              |  SUBROUTINE VEND.PO.INQ(PAY.VALUES,V.CODE)
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>PMC.CPYLIB>COM.COMPANY                                       *COPY>PMC.CPYLIB>COM.COMPANY
0004 *COPY>POS.CPYLIB>COM.MPO                                           *COPY>POS.CPYLIB>COM.MPO
0005 *COPY>APS.CPYLIB>COM.APS.FILE.VARS                                 *COPY>APS.CPYLIB>COM.APS.FILE.VARS
0006 *COPY>APS.CPYLIB>COM.TEMP.VOUCHERS                                 *COPY>APS.CPYLIB>COM.TEMP.VOUCHERS
0007 *COPY>APS.CPYLIB>COM.VOUCHER.MAINT                                 *COPY>APS.CPYLIB>COM.VOUCHER.MAINT

0026 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0027 *T22369 rick 11/21/1997 * Add scrolling options SF, ST, SB, SR     *T22369 rick 11/21/1997 * Add scrolling options SF, ST, SB, 
0028 *T22473 stefanie 02/02/1998 * Need to enter "R"eceipts multi t     *T22473 stefanie 02/02/1998 * Need to enter "R"eceipts multi
0029 *                             before it takes it.                  *                             before it takes it.
0030 *T23014 renee 06/25/1998 * Selecting POs by range isn't workin     *T23014 renee 06/25/1998 * Selecting POs by range isn't work
0031 *T25755 cm 04/19/2001 * Modify pgm to work with OUTSIDE.PO fil  |  *T23499 rick 08/30/1999 * Modify pgm to work with Outside.PO
0032 *                       changes for sequence #.                 |  *                         changes for sequence #
0033 *T26652 cmykleb 06/05/2002 * Correct problem with default amou  |  *T24135 jamesf 02/24/2000 * Defaulting pay option to 'R' so 
0034 *                            multiple payments are made on the  |  *                           vouchered can only be as much as
0035 *                            po.                                |  *                           received.

0036 *T28379 lross 01/05/2005 * Expand lines to 9999.                <  
0037 *T28410 lross 01/20/2005 * "P" Option should work only in VOUC  <  
0038 *T28779 lross 02/07/2006 * Retain identity of multiple same Pr  <  
0039 *                          lines.                               <  
0040 **************************************************************     ************************************************************
0041 *                                                                  *
0042 **** INSERT FILE EQUATES                                           **** INSERT FILE EQUATES

0166 CASE OPTION = "SB"                                                 CASE OPTION = "SB"
0167 LN = LINES                                                         LN = LINES
0168 IF LN < 0 THEN LN = 1                                              IF LN < 0 THEN LN = 1
0169 GOSUB 10000                                                        GOSUB 10000
0170 *T22369 ^^^                                                        *T22369 ^^^
0171 *T28410  CASE OPTION = "P"                                      |  CASE OPTION = "P"
0172 CASE OPTION = "P" AND MENU # "I"                                <  
0173 GOSUB 70000                                                        GOSUB 70000
0174 FOR I = 1 TO NUM.ITEMS                                             FOR I = 1 TO NUM.ITEMS
0175 LNO=ITEMS(I)                                                       LNO=ITEMS(I)

0240 END CASE                                                           END CASE
0241 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0242 PAY.VALUES<2> = ""                                                 PAY.VALUES<2> = ""
0243 SAVE.LN=LN                                                         SAVE.LN=LN
0244 LOCATE NVSTAT.PO<1,LN> IN VSTAT.PO<1>,1 SETTING LN ELSE LN=1       LOCATE NVSTAT.PO<1,LN> IN VSTAT.PO<1>,1 SETTING LN ELSE LN=1
0245 CALL PO.ACT.INQ(LN,PAY.VALUES)                                  |  CALL PO.ACT.INQ(LN,PAY.VALUES,V.CODE)   ;*T24135
0246 LN=SAVE.LN                                                         LN=SAVE.LN
0247 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0248 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0249 GOSUB 1000                                                         GOSUB 1000

0355 PTR = 1                                                            PTR = 1
0356 LOOP                                                               LOOP
0357 LOCATE NVSTAT.PO<1,N> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE PT     LOCATE NVSTAT.PO<1,N> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE 
0358 WHILE PTR DO                                                       WHILE PTR DO
0359 IF TVO.ENT.FLG<1,FND> # "E" THEN                                   IF TVO.ENT.FLG<1,FND> # "E" THEN
0360 *T28379v       LINE.FLAG<POSPTR> = "<=="                        |  LINE.FLAG<POSPTR> = "<=="
0361 LINE.FLAG<POSPTR> = "<="                                        <  
0362 LINE.VOUCH<POSPTR> = LINE.VOUCH<POSPTR> + TVO.PO.VOUCH<1,FND>      LINE.VOUCH<POSPTR> = LINE.VOUCH<POSPTR> + TVO.PO.VOUCH<1,FN
D
0363 END                                                                END
0364 PTR = FND + 1                                                      PTR = FND + 1

0368 RETURN                                                             RETURN
0369 *                                                                  *
0370 *--- UPDATE TEMP.VOUCHERS                                          *--- UPDATE TEMP.VOUCHERS
0371 *                                                                  *
0372 7000 *                                                             7000 *
0373                                                                 >  *T24135 v
0374 ORD.BAL = LINE.ORD<LN> - LINE.VOUCH<LN>                            ORD.BAL = LINE.ORD<LN> - LINE.VOUCH<LN>
0375 IF ORD.BAL < 0 THEN ORD.BAL = 0                                    IF ORD.BAL < 0 THEN ORD.BAL = 0
0376 REC.BAL = LINE.REC<LN> - LINE.VOUCH<LN>                            REC.BAL = LINE.REC<LN> - LINE.VOUCH<LN>
0377 IF REC.BAL < 0 THEN REC.BAL = 0                                    IF REC.BAL < 0 THEN REC.BAL = 0

0378 BEGIN CASE                                                         BEGIN CASE
0379 CASE ORD.BAL = 0 AND REC.BAL = 0                                |  *T24135 CASE ORD.BAL = 0 AND REC.BAL = 0
0380                                                                 >  CASE REC.BAL = 0
0381 GOTO 7999                                                          GOTO 7999
0382 CASE ORD.BAL > 0 AND REC.BAL = 0                                |  *  CASE ORD.BAL > 0 AND REC.BAL = 0
0383 ECD.RET.VALUE = "O"                                             |  *    ECD.RET.VALUE = "O"
0384 CASE REC.BAL > 0 AND ORD.BAL = 0                                |  *  CASE REC.BAL > 0 AND ORD.BAL = 0
0385 ECD.RET.VALUE = "R"                                             |  *    ECD.RET.VALUE = "R"

0386 CASE REC.BAL = ORD.BAL                                          |  *  CASE REC.BAL = ORD.BAL
0387 ECD.RET.VALUE = "O"                                             |  *    ECD.RET.VALUE = "O"
0388 CASE 1                                                          |  *  CASE 1
0389                                                                 >  END CASE
0390 * T23014 v Moved logic for T22473 from above to here               * T23014 v Moved logic for T22473 from above to here
0391 IF TEMP.PAY = '' THEN      ;* T22473 <                          |  ECD.RET.VALUE = "R"
0392                                                                 >  *    IF TEMP.PAY = '' THEN      ;* T22473 <

0393 * T23014 ^                                                         * T23014 ^
0394 ECD.NUM = 15; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""                |  *      ECD.NUM = 15; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
0395 ECD.ACTION = 4; CALL SCRN.EDIT                                  |  *      ECD.ACTION = 4; CALL SCRN.EDIT
0396 IF ECD.RET.VALUE = "END" THEN GOTO 7999                         |  *      IF ECD.RET.VALUE = "END" THEN GOTO 7999
0397 TEMP.PAY = ECD.RET.VALUE        ;* T22473 <                        TEMP.PAY = ECD.RET.VALUE        ;* T22473 <
0398 END                        ;* T22473 <  ; * T23014 moved        |  *    END                        ;* T22473 <  ; * T23014 move
0399 END CASE                                                        |  *END CASE
0400                                                                 >  *T24135 ^

0533 TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,FND,0)                            TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,FND,0)
0534 TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,FND,0)                          TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,FND,0)
0535 IF TVO.PO.TYPE = 'M' THEN                                          IF TVO.PO.TYPE = 'M' THEN
0536 TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,FND,0)                        TVO.MISC.CAT = DELETE(TVO.MISC.CAT,1,FND,0)
0537 END                                                                END
0538 *T25755 v T28779                                                |  *T23499 v
0539 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  |  IF TVO.PO.TYPE = "O" THEN
0540 TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,FND,0)                            TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,FND,0)
0541 END                                                                END
0542 *T25755 ^                                                       |  *T23499 ^     

0561 CASE 1                                                             CASE 1
0562 VPDS.KEY = VPS.KEY:"!":VPS.PROD<1,TR>:"!":VPS.WHSE<1,TR>           VPDS.KEY = VPS.KEY:"!":VPS.PROD<1,TR>:"!":VPS.WHSE<1,TR>
0563 MAT INV.REC = ""                                                   MAT INV.REC = ""
0564 END CASE                                                           END CASE
0565 MATREAD VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPDS.     MATREAD VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPD
0566 IF ECD.RET.VALUE = "O" THEN                                     |  *T24135 v
0567 PDLN.CNT = COUNT(VPDS.ORD.DATE,VM) + (VPDS.ORD.DATE # "")       |  SVPDS.QTY = ''
0568 END ELSE                                                        |  SVPDS.UN.COST = ''
0569 PDLN.CNT = COUNT(VPDS.REC.DATE,VM) + (VPDS.REC.DATE # "")       <  
0570 END                                                             <  

0571 IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100                   <  
0572 SAVE.PTR = ""                                                   <  
0573 *T26652 v                                                       <  
0574 SVPDS.QTY=''                                                    <  
0575 SVPDS.UN.COST=''                                                <  
0576 FOR SV1 = 1 TO DCOUNT(VPDS.QTY<1>,VM)                              FOR SV1 = 1 TO DCOUNT(VPDS.QTY<1>,VM)
0577 FOR SV2 = 1 TO DCOUNT(VPDS.QTY<1,SV1>,SVM)                         FOR SV2 = 1 TO DCOUNT(VPDS.QTY<1,SV1>,SVM)

0582 SVPDS.QTY<1,SVFND> = SVPDS.QTY<1,SVFND> + VPDS.QTY<1,SV1,SV2>      SVPDS.QTY<1,SVFND> = SVPDS.QTY<1,SVFND> + VPDS.QTY<1,SV1,SV2
0583 NEXT SV2                                                           NEXT SV2
0584 NEXT SV1                                                           NEXT SV1
0585 VPDS.QTY = SVPDS.QTY                                               VPDS.QTY = SVPDS.QTY
0586 VPDS.UN.COST = SVPDS.UN.COST                                       VPDS.UN.COST = SVPDS.UN.COST
0587 *T26652 ^                                                       |  IF VPS.REC.QTY<1,TR> - VPS.VOU.QTY<1,TR> - SUM(VPS.UNPOST.VO
0588                                                                 >  *T24135 ^
0589                                                                 >  IF ECD.RET.VALUE = "O" THEN
0590                                                                 >  PDLN.CNT = COUNT(VPDS.ORD.DATE,VM) + (VPDS.ORD.DATE # "")
0591                                                                 >  END ELSE

0592                                                                 >  PDLN.CNT = COUNT(VPDS.REC.DATE,VM) + (VPDS.REC.DATE # "")
0593                                                                 >  END
0594                                                                 >  IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
0595                                                                 >  SAVE.PTR = ""
0596 FOR TRP = 1 TO PDLN.CNT                                            FOR TRP = 1 TO PDLN.CNT
0597 IF ECD.RET.VALUE = "O" THEN                                        IF ECD.RET.VALUE = "O" THEN
0598 REV.QTY = VPDS.ORD.QTY<1,TRP>                                      REV.QTY = VPDS.ORD.QTY<1,TRP>

0599 REV.AMT = VPDS.ORD.UN.COST<1,TRP>                                  REV.AMT = VPDS.ORD.UN.COST<1,TRP>
0600 END ELSE                                                           END ELSE
0601                                                                 >  *T24135 v
0602 REV.QTY = VPDS.REC.QTY<1,TRP>                                      REV.QTY = VPDS.REC.QTY<1,TRP>
0603                                                                 >  IF TRP = 1 THEN
0604                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,TR>,1 SETTING VFND THEN
0605                                                                 >  VPS.UNPOST.VOU.QTY<1,TR,VFND> = 0
0606                                                                 >  END
0607                                                                 >  REV.QTY -= SUM(VPS.UNPOST.VOU.QTY<1,TR>)

0608                                                                 >  END
0609                                                                 >  *      REV.QTY = VPS.REC.QTY<1,TR> - VPS.VOU.QTY<1,TR> - VPS
0610                                                                 >  *      VPS.UNPOST.VOU.QTY<1,TR> = VPS.UNPOST.VOU.QTY<1,TR> +
0611                                                                 >  *T24135 ^
0612 REV.AMT = VPDS.REC.UN.COST<1,TRP>                                  REV.AMT = VPDS.REC.UN.COST<1,TRP>
0613 END                                                                END
0614 *18746            IF TVO.PO.TYPE = "O" THEN                        *18746            IF TVO.PO.TYPE = "O" THEN

0617 *18746               END ELSE                                      *18746               END ELSE
0618 *18746                  REV.UN.COST = INT(((REV.AMT * 100)/ RE     *18746                  REV.UN.COST = INT(((REV.AMT * 100)/ 
0619 *18746               END                                           *18746               END
0620 *18746            END ELSE                                         *18746            END ELSE
0621 REV.UN.COST = REV.AMT                                              REV.UN.COST = REV.AMT
0622 *               MFACTOR=1                                       |  MFACTOR=1
0623 *20154 v                                                           *20154 v
0624 *           IF VPS.U.M<1,TR> = 'M' AND (TVO.PO.TYPE='M' OR TVO     *           IF VPS.U.M<1,TR> = 'M' AND (TVO.PO.TYPE='M' OR T
0625 IF VPS.U.M<1,TR> = 'M' AND  TVO.PO.TYPE='O' THEN                   IF VPS.U.M<1,TR> = 'M' AND  TVO.PO.TYPE='O' THEN
0626 MFACTOR=1000                                                       MFACTOR=1000

0627 END ELSE                                                           END ELSE
0628 MFACTOR=1                                                       |  *T23319 v
0629                                                                 >  *              MFACTOR=1
0630                                                                 >  IF VPS.U.M<1,TR> = 'C' AND TVO.PO.TYPE = 'O' THEN
0631                                                                 >  MFACTOR = 100
0632 END                                                                END
0633                                                                 >  *T23319 ^
0634                                                                 >  END

0695 END ELSE                                                           END ELSE
0696 TEMP.ACCT = CATG.INV                                               TEMP.ACCT = CATG.INV
0697 AP.ACCT = CATG.AP.ACCT                                             AP.ACCT = CATG.AP.ACCT
0698 END                                                                END
0699 *T20016 v                                                          *T20016 v
0700 *T28779        WORK.WHSE = VPS.WHSE<1,TR>                       |  WORK.WHSE = VPS.WHSE<1,TR>
0701 WORK.WHSE = FIELD(VPS.WHSE<1,TR>,"@",1)                         <  
0702 MATREAD WHSE.REC FROM WAREHOUSE,CONO:WORK.WHSE THEN                MATREAD WHSE.REC FROM WAREHOUSE,CONO:WORK.WHSE THEN
0703 WORK.DIV = WHS.DIV                                                 WORK.DIV = WHS.DIV
0704 END ELSE                                                           END ELSE

0706 END                                                                END
0707 WORK.DEPT = GEN.DEPT                                               WORK.DEPT = GEN.DEPT
0708 WORK.CCTR = GEN.CCTR                                               WORK.CCTR = GEN.CCTR
0709 *T20016 ^                                                          *T20016 ^
0710 CASE TVO.PO.TYPE = "O"                                             CASE TVO.PO.TYPE = "O"
0711 *T25755 v                                                       |  MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,
0712 *              MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : VPS.  <  
0713 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,TR  <  
0714 *T25755 ^                                                       <  
0715 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:NVSTAT.PO<1,LN> ELSE MAT     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:NVSTAT.PO<1,LN> ELSE M

0716 CURR.PROD = VPS.PROD<1,TR>                                         CURR.PROD = VPS.PROD<1,TR>
0717 CURR.CAT  = VPS.WHSE<1,TR>                                         CURR.CAT  = VPS.WHSE<1,TR>
0718                                                                 >  *T23499 v
0719                                                                 >  CURR.SEQ = FIELD(CURR.CAT,"@",2)
0720                                                                 >  CURR.CAT = FIELD(CURR.CAT,"@",1)
0721                                                                 >  *T23499 ^
0722 CURR.OFFSET=0                                                      CURR.OFFSET=0
0723 *T25755 v                                                       <  
0724 CURR.SEQ = FIELD(CURR.CAT,'@',2)                                <  

0725 CURR.CAT = FIELD(CURR.CAT,'@',1)                                <  
0726 *T25755 ^                                                       <  
0727 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
0728 *T25755 v                                                       |  *T23499 v
0729 *                 IF OPO.WHSE<1,PRODOFF> = CURR.CAT THEN        |  ***           IF OPO.WHSE<1,PRODOFF> = CURR.CAT THEN
0730 IF OPO.PROD.SEQ<1,PRODOFF> = CURR.SEQ THEN                         IF OPO.PROD.SEQ<1,PRODOFF> = CURR.SEQ THEN
0731 *T25755 ^                                                       |  *T23499 ^

0734 END ELSE                                                           END ELSE
0735 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
0736 DO.CONTINUE=1                                                      DO.CONTINUE=1
0737 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
0738 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
0739 *T25755 v                                                       |  *T23499 v
0740 *                          IF OPO.WHSE<1,III> = CURR.CAT THEN   |  ***                 IF OPO.WHSE<1,III> = CURR.CAT THEN
0741 IF OPO.PROD.SEQ<1,III> = CURR.SEQ THEN                             IF OPO.PROD.SEQ<1,III> = CURR.SEQ THEN
0742 *T25755 ^                                                       |  *T23499 ^
0743 CURR.OFFSET=III                                                    CURR.OFFSET=III

0908 LOCATE NVSTAT.PO<1,LN> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE P     LOCATE NVSTAT.PO<1,LN> IN TVO.PO.NOS<1>,PTR SETTING FND ELSE
0909 BEGIN CASE                                                         BEGIN CASE
0910 CASE PTR = 0                                                       CASE PTR = 0
0911 TVO.PO.NOS<1,FND> = NVSTAT.PO<1,LN>                                TVO.PO.NOS<1,FND> = NVSTAT.PO<1,LN>
0912 TVO.PO.PROD<1,FND> = VPS.PROD<1,TR>                                TVO.PO.PROD<1,FND> = VPS.PROD<1,TR>
0913 *T25755 v                                                       |  *T23499 v
0914 *                 TVO.PO.WHSE<1,FND> = VPS.WHSE<1,TR>           |  IF TVO.PO.TYPE="O" THEN
0915 *T28779           IF TVO.PO.TYPE = 'O' THEN                     |  TVO.PO.WHSE<1,FND>=FIELD(VPS.WHSE<1,TR>,"@",1)
0916 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  |  TVO.PO.SEQ<1,FND>=FIELD(VPS.WHSE<1,TR>,"@",2)
0917 TVO.PO.WHSE<1,FND> = FIELD(VPS.WHSE<1,TR>,'@',1)                <  

0918 TVO.PO.SEQ<1,FND> = FIELD(VPS.WHSE<1,TR>,'@',2)                 <  
0919 END ELSE                                                           END ELSE
0920 TVO.PO.WHSE<1,FND> = VPS.WHSE<1,TR>                                TVO.PO.WHSE<1,FND> = VPS.WHSE<1,TR>
0921 END                                                                END
0922 *T25755 ^                                                       |  *T23499 ^
0923 TVO.PO.UM<1,FND> = VPS.U.M<1,TR>                                   TVO.PO.UM<1,FND> = VPS.U.M<1,TR>
0924 TVO.PO.QTY<1,FND> = 0                                              TVO.PO.QTY<1,FND> = 0

0932 END                                                                END 
0933 CASE TVO.ENT.FLG<1,FND> = "E"                                      CASE TVO.ENT.FLG<1,FND> = "E"
0934 PTR = FND + 1                                                      PTR = FND + 1
0935 CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,TR>                           CASE TVO.PO.PROD<1,FND> # VPS.PROD<1,TR>
0936 PTR = FND + 1                                                      PTR = FND + 1
0937 *T25755 v                                                       |  *T23499 v
0938 *              CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,TR>         |  CASE TVO.PO.WHSE<1,FND>:"@":TVO.PO.SEQ<1,FND> # VPS.WHSE<1,T
0939 *                 PTR = FND + 1                                 <  
0940 *T28779        CASE TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> #  <  
0941 CASE (TVO.PO.WHSE<1,FND>:'@':TVO.PO.SEQ<1,FND> # VPS.WHSE<1,TR  <  

0942 PTR = FND + 1                                                      PTR = FND + 1
0943 *T28779        CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,TR> AND TV  |  CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,TR> AND TVO.PO.TYPE # "
0944 CASE TVO.PO.WHSE<1,FND> # VPS.WHSE<1,TR> AND (TVO.PO.TYPE # 'O  |  *T23499 ^
0945 PTR = FND + 1                                                      PTR = FND + 1
0946 *T25755 ^                                                       <  
0947 CASE TVO.PO.UM<1,FND> # VPS.U.M<1,TR>                              CASE TVO.PO.UM<1,FND> # VPS.U.M<1,TR>
0948 PTR = FND + 1                                                      PTR = FND + 1
0949 CASE TVO.PO.U.COST<1,FND> # REV.UN.COST                            CASE TVO.PO.U.COST<1,FND> # REV.UN.COST

0957 END CASE                                                           END CASE
0958 WHILE PTR DO                                                       WHILE PTR DO
0959 REPEAT                                                             REPEAT
0960 TVO.PO.QTY<1,FND> = TVO.PO.QTY<1,FND> + REV.QTY                    TVO.PO.QTY<1,FND> = TVO.PO.QTY<1,FND> + REV.QTY
0961 TVO.PO.VOUCH<1,FND> = TVO.PO.VOUCH<1,FND> + REV.AMT                TVO.PO.VOUCH<1,FND> = TVO.PO.VOUCH<1,FND> + REV.AMT
0962                                                                 >  *T24135 v
0963 7199 *                                                             7199 *
0964 NEXT TRP                                                           NEXT TRP
0965                                                                 >  7299 *
0966 NEXT TR                                                            NEXT TR

0979 CNT=1                                                              CNT=1
0980 POSPTR=0                                                           POSPTR=0
0981 FOR N=START.LINE TO LAST.LINE                                      FOR N=START.LINE TO LAST.LINE
0982 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0983 *CSF 11-11-97   P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#4" ; P_O     *CSF 11-11-97   P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#4" ; P
0984 *T28379 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""   |  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""
0985 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#4" ; P_OPT = ""           |  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:NVSTAT.PO<1,N> 
0986 *T28379 P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:NVSTAT.PO  <  
0987 P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:NVSTAT.PO<1,N> "L  <  
0988 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0989 L.CNT = COUNT(NVSTAT.VOUCH.NOS<1,N>, SVM) + (NVSTAT.VOUCH.NOS<     L.CNT = COUNT(NVSTAT.VOUCH.NOS<1,N>, SVM) + (NVSTAT.VOUCH.N
O
0990 *T28379 P_X  = 14 ; P_Y = SLN ; P_VALUE = NVSTAT.VOUCH.NOS<1,N  |  P_X  = 14 ; P_Y = SLN ; P_VALUE = NVSTAT.VOUCH.NOS<1,N,L.CNT
0991 P_X  = 15 ; P_Y = SLN ; P_VALUE = NVSTAT.VOUCH.NOS<1,N,L.CNT>   |  P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(NVSTAT.P
0992 *T28379 P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(NV  <  
0993 P_X  := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(NVSTAT.PO.  <  
0994 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0995 TEMPQTY=''                                                         TEMPQTY=''
0996 IF NVSTAT.PO.RECV<1,N> = "" THEN                                   IF NVSTAT.PO.RECV<1,N> = "" THEN

1006 TEMPQTY="{":OCONV(ADDON+NVSTAT.PO.RECV<1,N>,"MD2"):"}"             TEMPQTY="{":OCONV(ADDON+NVSTAT.PO.RECV<1,N>,"MD2"):"}"
1007 END ELSE                                                           END ELSE
1008 TEMPQTY=OCONV(NVSTAT.PO.RECV<1,N>,"MD2")                           TEMPQTY=OCONV(NVSTAT.PO.RECV<1,N>,"MD2")
1009 END                                                                END
1010 END                                                                END
1011 *T28379 P_X  = 34 ; P_Y = SLN ; P_VALUE = TEMPQTY "R#10" ; P_O  |  P_X  = 34 ; P_Y = SLN ; P_VALUE = TEMPQTY "R#10" ; P_OPT = "
1012 P_X  = 35 ; P_Y = SLN ; P_VALUE = TEMPQTY "R#10" ; P_OPT = ""   |  P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.VOU
1013 *T28379 P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LI  <  
1014 P_X  := AM:46 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(LINE.VOUCH  <  
1015 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1016 ORD.BAL = LINE.ORD<N> - LINE.VOUCH<N>                              ORD.BAL = LINE.ORD<N> - LINE.VOUCH<N>
1017 IF ORD.BAL < 0 THEN ORD.BAL = 0                                    IF ORD.BAL < 0 THEN ORD.BAL = 0
1018 *T28379 P_X  = 56 ; P_Y = SLN ; P_VALUE = OCONV(ORD.BAL , "MD2  |  P_X  = 56 ; P_Y = SLN ; P_VALUE = OCONV(ORD.BAL , "MD2") "R#
1019 P_X  = 57 ; P_Y = SLN ; P_VALUE = OCONV(ORD.BAL , "MD2") "R#10  <  
1020 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1021 REC.BAL = LINE.REC<N> - LINE.VOUCH<N>                              REC.BAL = LINE.REC<N> - LINE.VOUCH<N>
1022 IF REC.BAL < 0 THEN REC.BAL = 0                                    IF REC.BAL < 0 THEN REC.BAL = 0
1023 *T28379 P_X  = 67 ; P_Y = SLN ; P_VALUE = OCONV(REC.BAL , "MD2  |  P_X  = 67 ; P_Y = SLN ; P_VALUE = OCONV(REC.BAL , "MD2") "R#
1024 P_X  = 68 ; P_Y = SLN ; P_VALUE = OCONV(REC.BAL , "MD2") "R#10  |  P_X  := AM:77 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.FLAG<N> "

1025 *T28379 P_X  := AM:77 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.FLA  <  
1026 P_X  := AM:78 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.FLAG<N> "L#  <  
1027 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1028 CNT=CNT + 1                                                        CNT=CNT + 1
1029 NEXT N                                                             NEXT N
1030 FOR N=CNT TO PAGE.SIZE                                             FOR N=CNT TO PAGE.SIZE
1031 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)

1122 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                          ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
1123 99999 *                                                            99999 *
1124 ECD.ACTION=99;CALL SCRN.EDIT                                       ECD.ACTION=99;CALL SCRN.EDIT
1125 RETURN                                                             RETURN
1126 END                                                                END
1127                                                                 >  
1128                                                                 >  
1129 


APSBP/VOUCHER.DEL.MAINT                                            /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.DEL.MAINT
Printed for thompson at 06/28/2006 04:09:04PM

0013 * 10/14/94 CLW Task 17919 - Accrual accouting                      * 10/14/94 CLW Task 17919 - Accrual accouting
0014 * T19149 RKB 05/01/95 add support for ap div,dept,cctr fields      * T19149 RKB 05/01/95 add support for ap div,dept,cctr field
0015 * T19406 Bob Sherer 10/11/95 Display owning division               * T19406 Bob Sherer 10/11/95 Display owning division
0016 *T23278 markt 11/24/1998 * Add check for divisional security.      *T23278 markt 11/24/1998 * Add check for divisional security
0017 *                          Make fiscal data multi-value by div     *                          Make fiscal data multi-value by d
0018                                                                 >  *T23499 rick 08/30/1999 * Modify pgm to work with new seq nu
0019                                                                 >  *                         Outside.PO file
0020 *T25632 lanny 02/13/2001 * Voucher Numbers are Sub-valued in V     *T25632 lanny 02/13/2001 * Voucher Numbers are Sub-valued in
0021 *T25755 cm 04/19/2001 * Modify pgm to work with new seq # in t  |  *T26249 lanny 10/31/2001 * DV/DP/CC left off Accrued.liab.hi
0022 *                       OUTSIDE.PO file.                        |  *                          task 24522

0023 *T26249 lanny 10/31/2001 * DV/DP/CC left off Accrued Liab Hist  <  
0024 *                          See Task 24522                       <  
0025 *T26126 adelgado 02/25/2002 * Implement the LOCKED clause for   <  
0026 *T23880 lross 10/16/2002 * Include offset acct in ALH record f     *T23880 lross 10/16/2002 * Include offset acct in ALH record
0027 *                          PO's.                                   *                          PO's.
0028 *T27646 thompson 08/19/2003 * MODIFY FOR MULTI PLATFORM ISSUE   <  
0029 *T28779 lross 02/07/2006 * Retain identity of multiple same Pr  <  

0030 *                          lines.                               <  
0031 *ENDDOC                                                            *ENDDOC
0032 **************************************************************     ************************************************************
0033 **** INSERT FILE EQUATES                                           **** INSERT FILE EQUATES
0034 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0035 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0036 *COPY>APS.CPYLIB>OAP                                               *COPY>APS.CPYLIB>OAP

0063 *COPY>ICS.CPYLIB>CATEGORY.MISC                                     *COPY>ICS.CPYLIB>CATEGORY.MISC
0064 *COPY>JCS.CPYLIB>CATEGORY.OSP                                      *COPY>JCS.CPYLIB>CATEGORY.OSP
0065 *COPY>PMC.CPYLIB>PO                                                *COPY>PMC.CPYLIB>PO
0066 *COPY>POS.CPYLIB>MISC.PO                                           *COPY>POS.CPYLIB>MISC.PO
0067 *COPY>POS.CPYLIB>ACCRUED.LIAB.HIST                                 *COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
0068 *COPY>ICS.CPYLIB>WAREHOUSE            ; * T26249                |  *COPY>ICS.CPYLIB>WAREHOUSE   ;*** T26249
0069 DIM SVEND.REC(50)                                                  DIM SVEND.REC(50)
0070 EQU SVEND.DESC TO SVEND.REC(1)                                     EQU SVEND.DESC TO SVEND.REC(1)
0071 EQU SVEND.ADDR1 TO SVEND.REC(2)                                    EQU SVEND.ADDR1 TO SVEND.REC(2)
0072 EQU SVEND.CT.ST TO SVEND.REC(4)                                    EQU SVEND.CT.ST TO SVEND.REC(4)

0101 OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING'     OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSIN
0102 OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE     OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FI
0103 OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MISSI     OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MIS
0104 OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGORY.     OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGOR
0105 OPEN 'CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OS     OPEN 'CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.
0106 *T26249 v                                                       |  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FI
0107 OPEN 'WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE MI  <  
0108 *T26249 ^                                                       <  
0109 ***** GET COMPANY NAME                                             ***** GET COMPANY NAME
0110 MAT COMP.REC = ''                                                  MAT COMP.REC = ''

0132 OPEN '','OPOAPS.XREF' TO OPOAPS.XREF ELSE ERRMSG = 'OPOAPS.XRE     OPEN '','OPOAPS.XREF' TO OPOAPS.XREF ELSE ERRMSG = 'OPOAPS.X
0133 OPEN 'PO' TO PO ELSE ERRMSG = 'PO FILE MISSING' ; GOTO 93000       OPEN 'PO' TO PO ELSE ERRMSG = 'PO FILE MISSING' ; GOTO 93000
0134 OPEN 'MISC.PO' TO MISC.PO ELSE ERRMSG = 'MISC.PO FILE MISSING'     OPEN 'MISC.PO' TO MISC.PO ELSE ERRMSG = 'MISC.PO FILE MISSIN
0135 OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 'A     OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 
0136 END                                                                END
0137                                                                 >  *T23499 v
0138 ***** T23278 v                                                     ***** T23278 v
0139 READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE           |  *  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
0140 ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"                  |  *      ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
0141 GOTO 93000                                                      |  *      GOTO 93000

0142 END                                                             |  *  END
0143 READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE        |  *  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
0144 ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"               |  *      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"
0145 GOTO 93000                                                      |  *      GOTO 93000
0146 END                                                             |  *  END
0147 ***** T23278 ^                                                  |  ****** T23278 ^
0148 *T26249 v                                                       |  *T23499 ^

0149 GEN.DIV = '00' ; GEN.DEPT = '00' ; GEN.CCTR = '000'             |  GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000' ;*T26249
0150 *T26249 ^                                                       |  ACCRUE.OFFACCT='' ;*T23880
0151 ***** MAIN PROCESSING                                              ***** MAIN PROCESSING
0152 LOGNAME = 'LOGNAME'; CALL SYSVARS.SUB(LOGNAME) ; *T27646        |  * MAT EDIT.COM = ''
0153 MAT EDIT.COM.DRIVER = '' ; MAT GEN.XREF.REC = ''                   MAT EDIT.COM.DRIVER = '' ; MAT GEN.XREF.REC = ''
0154 * TYP = 0 ;CALL EDIT.SUB                                           * TYP = 0 ;CALL EDIT.SUB
0155 FILL = "#"                                                         FILL = "#"

0158 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0159 **** PRINT SCREEN                                                  **** PRINT SCREEN
0160 1 *                                                                1 *
0161 MAT OAP.REC = '' ;MAT HDCK.REC = '' ;MAT SQV.REC = '' ; MAT AP     MAT OAP.REC = '' ;MAT HDCK.REC = '' ;MAT SQV.REC = '' ; MAT 
0162 MAT JOS.REC = ''                                                   MAT JOS.REC = ''
0163 ACCRUE.OFFACCT = '' ;*T23880                                    <  
0164 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0165 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0166 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0167 *                                                                  *

0168 **** GET VOUCHERS FISCAL PERIOD                                    **** GET VOUCHERS FISCAL PERIOD
0169 *                                                                  *
0170 READ FIS.REC FROM CONTROL , CONO:"APVFISCAL" ELSE                  READ FIS.REC FROM CONTROL , CONO:"APVFISCAL" ELSE
0171 ERRMSG = "Vouchers fiscal record is missing from control" ; GO     ERRMSG = "Vouchers fiscal record is missing from control" ; 
0172 END                                                                END
0173 *  VOUCH.MON = FIS.REC<1>;* T23278                              |  VOUCH.MON = FIS.REC<1>;* T23278 23499 added line back in
0174 ***** ENTER VOUCHER NUMBER                                         ***** ENTER VOUCHER NUMBER
0175 5 *                                                                5 *
0176 PAY.FLG = 0 ; SQV.FLG = 0 ; JOB.NUMBER = ''                        PAY.FLG = 0 ; SQV.FLG = 0 ; JOB.NUMBER = ''
0177 RELEASE                                                            RELEASE

0180 V.CODE = ECD.RET.VALUE                                             V.CODE = ECD.RET.VALUE
0181 BEGIN CASE                                                         BEGIN CASE
0182 CASE ECD.RET.VALUE = 'END'                                         CASE ECD.RET.VALUE = 'END'
0183 GOTO 99999                                                         GOTO 99999
0184 CASE ECD.RET.VALUE # ''                                            CASE ECD.RET.VALUE # ''
0185 * T26126 v                                                      |  MATREADU OAP.REC FROM OAP , CONO:V.CODE ELSE
0186 MATREADU OAP.REC FROM OAP , CONO:V.CODE LOCKED                  |  MATREADU OAP.REC FROM HDCH , CONO:V.CODE ELSE
0187 ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STA  <  
0188 GOSUB 91000;GOTO 5                                              <  
0189 END ELSE                                                        <  

0190 MATREADU OAP.REC FROM HDCH , CONO:V.CODE LOCKED                 <  
0191 ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STA  <  
0192 GOSUB 91000;GOTO 5                                              <  
0193 END ELSE                                                        <  
0194 * T26126 ^                                                      <  
0195 ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE" ; GOSUB 910     ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE" ; GOSUB 9
0196 END                                                                END

0197 PAY.FLG = 1                                                        PAY.FLG = 1
0198 END                                                                END
0199 *T23278 v                                                       |  *T23499 V
0200 DIV.CODE = OAP.DIV.OWNER; USER.ID = UPCASE(LOGNAME); ERRMSG =   |  **T23278 v
0201 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               |  *          DIV.CODE = OAP.DIV.OWNER; USER.ID = UPCASE(@LOGNA
0202 IF ERRMSG # '' THEN                                             |  *          CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0203 GOSUB 91000; GOTO 5                                             |  *          IF ERRMSG # '' THEN
0204 END                                                             |  *              GOSUB 91000; GOTO 5
0205 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         |  *          END

0206 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN                     |  *          IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y
0207 ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING &  |  *              IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
0208 GOSUB 91000; GOTO 5                                             |  *                  ERRMSG = " 'ALL' OR '00' INVALID WHEN DIV
0209 END                                                             |  *                  GOSUB 91000; GOTO 5
0210 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE           |  *              END
0211 ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVI  |  *              LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING 
0212 GOTO 93000                                                      |  *                  ERRMSG = "Division ":DIV.CODE:" not found

0213 END                                                             |  *                  GOTO 93000
0214 END ELSE                                                        |  *              END
0215 POS = 1                                                         |  *          END ELSE
0216 END                                                             |  *              POS = 1
0217 VOUCH.MON = FIS.REC<1,POS>                                      |  *          END
0218 *T23278 ^                                                       |  *          VOUCH.MON = FIS.REC<1,POS>
0219                                                                 >  **T23278 ^

0220                                                                 >  *T23499 ^
0221 SCH.FLG = 0                                                        SCH.FLG = 0
0222 MATREAD CKP.REC FROM CKP , CONO:V.CODE ELSE SCH.FLG = 1            MATREAD CKP.REC FROM CKP , CONO:V.CODE ELSE SCH.FLG = 1
0223 IF SCH.FLG = 0 THEN                                                IF SCH.FLG = 0 THEN
0224 ERRMSG = "THIS VOUCHER IS SELECTED TO BE PAID CAN'T DELETE" ;      ERRMSG = "THIS VOUCHER IS SELECTED TO BE PAID CAN'T DELETE" 
0225 END                                                                END
0226 IF OAP.DUE.DATE = "ADVANCE" THEN                                   IF OAP.DUE.DATE = "ADVANCE" THEN

0227 * T26126 v                                                      |  MATREADU OAP.REC FROM HDCH , CONO:V.CODE ELSE
0228 MATREADU OAP.REC FROM HDCH , CONO:V.CODE LOCKED                 <  
0229 ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STA  <  
0230 GOSUB 91000;GOTO 5                                              <  
0231 END ELSE                                                        <  
0232 * T26126 ^                                                      <  
0233 ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE";GOSUB 91000     ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE";GOSUB 910

0232 * T26126 ^                                                      <  
0233 ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE";GOSUB 91000     ERRMSG = "VOUCHER NUMBER (":V.CODE:") NOT ON FILE";GOSUB 910
0234 END                                                                END
0235 END                                                                END
0236 IF PAY.FLG = 0 THEN                                                IF PAY.FLG = 0 THEN
0237 * T26126 v                                                      |  MATREADU SQV.REC FROM SQV , CONO:V.CODE ELSE
0238 MATREADU SQV.REC FROM SQV , CONO:V.CODE LOCKED                  <  
0239 ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STA  <  
0240 GOSUB 91000;GOTO 5                                              <  
0241 END ELSE                                                        <  

0242 * T26126 ^                                                      <  
0243 SQV.FLG = 1                                                        SQV.FLG = 1
0244 END                                                                END
0245 END                                                                END
0246 GOSUB 1000                                                         GOSUB 1000
0247 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0248 END CASE                                                           END CASE

0480 MATREADU VVOS.REC FROM VEND.VOUCH.STATS, VVOS.KEY ELSE MAT VVO     MATREADU VVOS.REC FROM VEND.VOUCH.STATS, VVOS.KEY ELSE MAT V
0481 IF VVOS.PO.NO # "" THEN                                            IF VVOS.PO.NO # "" THEN
0482 PO.CNT = COUNT(VVOS.PO.NO, VM) + (VVOS.PO.NO # "")                 PO.CNT = COUNT(VVOS.PO.NO, VM) + (VVOS.PO.NO # "")
0483 FOR UA = PO.CNT TO 1 STEP -1                                       FOR UA = PO.CNT TO 1 STEP -1
0484 * Task 17919                                                       * Task 17919
0485 * Update Accrued Liability History                              |  * Upate Accrued Liability History
0486 *T26249 v                                                       |  ***T26249 v
0487 ACC.WORK.DIV = GEN.DIV                                          |  ACC.WORK.DIV=GEN.DIV ; ACC.WORK.DEPT=GEN.DEPT ; ACC.WORK.CCT
0488 ACC.WORK.DEPT = GEN.DEPT                                        <  
0489 ACC.WORK.CCTR = GEN.CCTR                                        <  

0490 *T26249 ^                                                       <  
0491 BEGIN CASE                                                         BEGIN CASE
0492 CASE VVOS.PO.TYPE<1,UA> = "R"                                      CASE VVOS.PO.TYPE<1,UA> = "R"
0493 MATREAD PO.REC FROM PO, CONO:VVOS.PO.NO<1,UA> ELSE MAT PO.REC=     MATREAD PO.REC FROM PO, CONO:VVOS.PO.NO<1,UA> ELSE MAT PO.RE
0494 MATREAD INV.REC FROM INVENTORY, CONO:VVOS.PROD<1,UA> ELSE MAT      MATREAD INV.REC FROM INVENTORY, CONO:VVOS.PROD<1,UA> ELSE MA
0495 MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.RE     MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.
0496 *T26249 v                                                       |  *** T26249 v

0497 MATREAD WHSE.REC FROM WAREHOUSE, CONO:VVOS.WHSE<1,UA> ELSE MAT  |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:VVOS.WHSE<1,UA> ELSE MA
0498 ACC.WORK.DIV = WHS.DIV                                             ACC.WORK.DIV = WHS.DIV
0499 ACC.WORK.DEPT = GEN.DEPT                                           ACC.WORK.DEPT = GEN.DEPT
0500 ACC.WORK.CCTR = GEN.CCTR                                           ACC.WORK.CCTR = GEN.CCTR
0501 *T26249 ^                                                       |  *** T26249^
0502 ACCRUE.FLAG = PO.ACCRUE                                            ACCRUE.FLAG = PO.ACCRUE
0503 ACCRUE.REF = "R*":VVOS.PO.NO<1,UA>:"*":VVOS.PROD<1,UA>             ACCRUE.REF = "R*":VVOS.PO.NO<1,UA>:"*":VVOS.PROD<1,UA>

0505 ACCRUE.ACCT = CATG.ACCRU.LIAB                                      ACCRUE.ACCT = CATG.ACCRU.LIAB
0506 CASE VVOS.PO.TYPE<1,UA> = "M"                                      CASE VVOS.PO.TYPE<1,UA> = "M"
0507 MATREAD MPO.REC FROM MISC.PO, CONO:VVOS.PO.NO<1,UA> ELSE MAT M     MATREAD MPO.REC FROM MISC.PO, CONO:VVOS.PO.NO<1,UA> ELSE MAT
0508 LOCATE VVOS.SEQ.NO<1,UA> IN MPO.SEQ.NO<1>,1 SETTING POFND ELSE     LOCATE VVOS.SEQ.NO<1,UA> IN MPO.SEQ.NO<1>,1 SETTING POFND EL
0509 MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,POF     MATREAD CAMISC.REC FROM CATEGORY.MISC, CONO:MPO.MISC.CAT<1,P
0510 *T26249 v                                                       |  *** T26249 v
0511 ACC.WORK.DIV = MPO.MISC.DIV<1,POFND>                               ACC.WORK.DIV = MPO.MISC.DIV<1,POFND>
0512 ACC.WORK.DEPT = MPO.MISC.DEPT<1,POFND>                             ACC.WORK.DEPT = MPO.MISC.DEPT<1,POFND>
0513 ACC.WORK.CCTR = MPO.MISC.CCTR<1,POFND>                             ACC.WORK.CCTR = MPO.MISC.CCTR<1,POFND>
0514 *T26249 ^                                                       |  ** T26249^

0519 CASE 1                                                             CASE 1
0520 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VVOS.PO.NO<1,UA> ELSE MA     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:VVOS.PO.NO<1,UA> ELSE 
0521 POPTR = 1                                                          POPTR = 1
0522 LOOP                                                               LOOP
0523 LOCATE VVOS.PROD<1,UA> IN OPO.JOB.NO<1>,POPTR SETTING POFND TH     LOCATE VVOS.PROD<1,UA> IN OPO.JOB.NO<1>,POPTR SETTING POFND 
0524 *T25755 v                                                       |  *T23499 v
0525 *                             IF VVOS.WHSE<1,UA> = OPO.PROD.LI  |  ***                                      IF VVOS.WHSE<1,UA> 
0526 IF VVOS.PO.SEQ<1,UA> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0        IF VVOS.PO.SEQ<1,UA> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
0527 *T25755 ^                                                       |  *T23499 ^
0528 END ELSE                                                           END ELSE

0530 END                                                                END
0531 WHILE POPTR DO                                                     WHILE POPTR DO
0532 POPTR = POFND + 1                                                  POPTR = POFND + 1
0533 REPEAT                                                             REPEAT
0534 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POFND     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POF
0535 *T26249 v                                                       |  *** T26249 v
0536 ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>                               ACC.WORK.DIV = OPO.DVDPCC<1,1,POFND>
0537 ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>                              ACC.WORK.DEPT = OPO.DVDPCC<1,2,POFND>
0538 ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>                              ACC.WORK.CCTR = OPO.DVDPCC<1,3,POFND>
0539 *T26249 ^                                                       |  *** T26249^

0554 ALH.REF = ACCRUE.REF                                               ALH.REF = ACCRUE.REF
0555 ALH.SRC = ACCRUE.SRC                                               ALH.SRC = ACCRUE.SRC
0556 ALH.MON = VOUCH.MON                                                ALH.MON = VOUCH.MON
0557 ALH.AMT = 0 - VVOS.PROD.COST<1,UA>                                 ALH.AMT = 0 - VVOS.PROD.COST<1,UA>
0558 ALH.ACCT = ACCRUE.ACCT                                             ALH.ACCT = ACCRUE.ACCT
0559 *T26249 v                                                       |  *** T26249 v
0560 ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK.C     ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK
0561 *T26249 ^                                                       <  
0562 ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880                             ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880
0563 MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID                       MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID

0580 LOOP                                                               LOOP
0581 LOCATE VVOS.PROD<1,UA> IN VPS.PROD<1>,PTR SETTING VPFND ELSE V     LOCATE VVOS.PROD<1,UA> IN VPS.PROD<1>,PTR SETTING VPFND ELSE
0582 BEGIN CASE                                                         BEGIN CASE
0583 CASE VPFND = 0                                                     CASE VPFND = 0
0584 PTR = 0                                                            PTR = 0
0585 *T25755 v                                                       |  *T23499 v
0586 *T28779           CASE VVOS.U.M<1,UA> = VPS.U.M<1,VPFND> AND V  |  CASE VVOS.U.M<1,UA> = VPS.U.M<1,VPFND> AND VVOS.WHSE<1,UA>:"
0587 CASE VVOS.U.M<1,UA> = VPS.U.M<1,VPFND> AND VVOS.WHSE<1,UA>:"@"  <  
0588 PTR = 0                                                            PTR = 0
0589 *T25755 ^                                                       <  

0590 CASE VVOS.U.M<1,UA> = VPS.U.M<1,VPFND> AND VVOS.WHSE<1,UA> = V     CASE VVOS.U.M<1,UA> = VPS.U.M<1,VPFND> AND VVOS.WHSE<1,UA> =
0591 PTR = 0                                                            PTR = 0
0592                                                                 >  *T23499 ^
0593 CASE 1                                                             CASE 1
0594 PTR = VPFND + 1                                                    PTR = VPFND + 1
0595 END CASE                                                           END CASE
0596 WHILE PTR DO                                                       WHILE PTR DO
0597 REPEAT                                                             REPEAT
0598 END                                                                END

0604 VPS.VOU.NO = DELETE(VPS.VOU.NO,1,VPFND,VPVFND)                     VPS.VOU.NO = DELETE(VPS.VOU.NO,1,VPFND,VPVFND)
0605 END                                                                END
0606 IF VVOS.PO.TYPE<1,UA> = "M" THEN                                   IF VVOS.PO.TYPE<1,UA> = "M" THEN
0607 VPDS.KEY = VPS.KEY:"!":VVOS.SEQ.NO<1,UA>:"!":VVOS.WHSE<1,UA>       VPDS.KEY = VPS.KEY:"!":VVOS.SEQ.NO<1,UA>:"!":VVOS.WHSE<1,UA>
0608 END ELSE                                                           END ELSE
0609 *T25755 v                                                       |  *T23499 v
0610 *                          VPDS.KEY = VPS.KEY:"!":VVOS.PROD<1,  |  IF VVOS.PO.TYPE<1,UA> = "O" THEN
0611 *T28779         IF VVOS.PO.TYPE<1,UA> = 'O' THEN                |  VPDS.KEY = VPS.KEY:"!":VVOS.PROD<1,UA>:"!":VVOS.WHSE<1,UA>:"
0612 IF VVOS.PO.TYPE<1,UA> = 'O' OR VVOS.PO.TYPE<1,UA> = 'R' THEN    <  
0613 VPDS.KEY = VPS.KEY:'!':VVOS.PROD<1,UA>:'!':VVOS.WHSE<1,UA>:'@'  <  

0612 IF VVOS.PO.TYPE<1,UA> = 'O' OR VVOS.PO.TYPE<1,UA> = 'R' THEN    <  
0613 VPDS.KEY = VPS.KEY:'!':VVOS.PROD<1,UA>:'!':VVOS.WHSE<1,UA>:'@'  <  
0614 END ELSE                                                           END ELSE
0615 VPDS.KEY = VPS.KEY:"!":VVOS.PROD<1,UA>:"!":VVOS.WHSE<1,UA>         VPDS.KEY = VPS.KEY:"!":VVOS.PROD<1,UA>:"!":VVOS.WHSE<1,UA>
0616 END                                                                END
0617 *T25755 ^                                                       |  *T23499 ^
0618 END                                                                END
0619 MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPDS     MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VP
0620 *T25632 v                                                          *T25632 v
0621 FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1                   FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1

0620 *T25632 v                                                          *T25632 v
0621 FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1                   FOR VVV = DCOUNT(VPDS.VOU.NO<1>,VM) TO 1 STEP -1
0622 *                          LOCATE V.CODE IN VPDS.VOU.NO<1>,1 S     *                               LOCATE V.CODE IN VPDS.VOU.NO
0623 LOCATE V.CODE IN VPDS.VOU.NO<1,VVV>,1 SETTING VPSFND ELSE VPSF     LOCATE V.CODE IN VPDS.VOU.NO<1,VVV>,1 SETTING VPSFND ELSE VP
0624 IF VPSFND # 0 THEN                                                 IF VPSFND # 0 THEN
0625                                                                 >  *                                   VPDS.VOU.NO = DELETE(VPD
0626 VPDS.VOU.NO = DELETE(VPDS.VOU.NO,1,VVV,VPSFND)                     VPDS.VOU.NO = DELETE(VPDS.VOU.NO,1,VVV,VPSFND)
0627                                                                 >  *                                   VPDS.VOU.DATE = DELETE(V
0628 VPDS.VOU.DATE = DELETE(VPDS.VOU.DATE,1,VVV,VPSFND)                 VPDS.VOU.DATE = DELETE(VPDS.VOU.DATE,1,VVV,VPSFND)
0629                                                                 >  *                                   VPDS.INV.NO = DELETE(VPD

0630 VPDS.INV.NO = DELETE(VPDS.INV.NO,1,VVV,VPSFND)                     VPDS.INV.NO = DELETE(VPDS.INV.NO,1,VVV,VPSFND)
0631                                                                 >  *                                   VPDS.INV.DATE = DELETE(V
0632 VPDS.INV.DATE = DELETE(VPDS.INV.DATE,1,VVV,VPSFND)                 VPDS.INV.DATE = DELETE(VPDS.INV.DATE,1,VVV,VPSFND)
0633                                                                 >  *                                   VPDS.QTY = DELETE(VPDS.Q
0634 VPDS.QTY = DELETE(VPDS.QTY,1,VVV,VPSFND)                           VPDS.QTY = DELETE(VPDS.QTY,1,VVV,VPSFND)
0635                                                                 >  *                                   VPDS.UN.COST = DELETE(VP
0636 VPDS.UN.COST = DELETE(VPDS.UN.COST,1,VVV,VPSFND)                   VPDS.UN.COST = DELETE(VPDS.UN.COST,1,VVV,VPSFND)
0637                                                                 >  *                                   VPDS.PERIOD = DELETE(VPD

0683 VVOS.WHSE = DELETE(VVOS.WHSE,1,UA,0)                               VVOS.WHSE = DELETE(VVOS.WHSE,1,UA,0)
0684 VVOS.VOU.QTY = DELETE(VVOS.VOU.QTY,1,UA,0)                         VVOS.VOU.QTY = DELETE(VVOS.VOU.QTY,1,UA,0)
0685 VVOS.VOU.UN.COST = DELETE(VVOS.VOU.UN.COST,1,UA,0)                 VVOS.VOU.UN.COST = DELETE(VVOS.VOU.UN.COST,1,UA,0)
0686 VVOS.PROD.COST = DELETE(VVOS.PROD.COST,1,UA,0)                     VVOS.PROD.COST = DELETE(VVOS.PROD.COST,1,UA,0)
0687 VVOS.SEQ.NO = DELETE(VVOS.SEQ.NO,1,UA,0)                           VVOS.SEQ.NO = DELETE(VVOS.SEQ.NO,1,UA,0)
0688 VVOS.PO.SEQ = DELETE(VVOS.PO.SEQ,1,UA,0) ; * T25755             |  *T23499 v
0689                                                                 >  VVOS.PO.SEQ = DELETE(VVOS.PO.SEQ,1,UA,0)
0690                                                                 >  *T23499 ^
0691 END                                                                END
0692 END                                                                END


APSBP/VOUCHER.DRIVER                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.DRIVER
Printed for thompson at 06/28/2006 04:09:05PM

0014 * DESCRIPTION -                                                    * DESCRIPTION -
0015 * This program open all files and call voucher maintenance.        * This program open all files and call voucher maintenance.
0016 * 06/06/91 TASK 15965 ALLOW SELECTION OF LINE ITEMS TO PAY         * 06/06/91 TASK 15965 ALLOW SELECTION OF LINE ITEMS TO PAY
0017 * 10/08/94 CLW Task 17919 - Accrual accounts                       * 10/08/94 CLW Task 17919 - Accrual accounts
0018 *T20016 RICK 01/29/96 * add ability to open warehouse.             *T20016 RICK 01/29/96 * add ability to open warehouse.
0019 *T25759 edwin 04/19/2001 * Add remittance comments 'VOUCHER.MA  |  *T24137 lanny 04/24/2000 * Add new screen VOUCHER.NP.PO
0020 **************************************************************     ************************************************************
0021 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0022 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0023 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER

0037 OPEN '','INV.XREF' TO INV.XREF ELSE ERRMSG = 'INV.XREF FILE MI     OPEN '','INV.XREF' TO INV.XREF ELSE ERRMSG = 'INV.XREF FILE 
0038 OPEN '','TEMP.VOUCHERS' TO TEMP.VOUCHERS ELSE ERRMSG = 'TEMP.V     OPEN '','TEMP.VOUCHERS' TO TEMP.VOUCHERS ELSE ERRMSG = 'TEMP
0039 OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOTO      OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOT
0040 OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = 'APCHECK FILE MISSI     OPEN '','APCHECK' TO APCHECK ELSE ERRMSG = 'APCHECK FILE MIS
0041 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS      OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREEN
0042                                                                 >  OPEN '','CBN.SCREENS' TO SECOND.SCREENS ELSE ERRMSG = 'CBN.S
0043 OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG = 'VENDOR.XRE     OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG = 'VENDOR.X
0044 OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING'     OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSIN
0045 OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GOTO     OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GO
0046 OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MI     OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE 

0046 OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MI     OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE 
0047 OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE MISSING' ;GOTO 93     OPEN '','OAP' TO OAP ELSE ERRMSG = 'OAP FILE MISSING' ;GOTO 
0048 OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE MISSING' ; GOTO 9     OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE MISSING' ; GOTO
0049 OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT F     OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT
0050 OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE     OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FI
0051 OPEN '','OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FILE  |  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FI
0052 *** GET COMPANY NAME                                               *** GET COMPANY NAME
0053 MAT COMP.REC = ''                                                  MAT COMP.REC = ''
0054 CONO = ''                                                          CONO = ''
0055 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)

0097 ECD.SCRN.NAME<7> = 'PO.PROD.REC.ACT'                               ECD.SCRN.NAME<7> = 'PO.PROD.REC.ACT'
0098 ECD.SCRN.NAME<8> = 'VOUCHER.PO.INQ'                                ECD.SCRN.NAME<8> = 'VOUCHER.PO.INQ'
0099 ECD.SCRN.NAME<9> = "VOUCHER.OS.PO"                                 ECD.SCRN.NAME<9> = "VOUCHER.OS.PO"
0100 ECD.SCRN.NAME<10> = "VOUCHER.MISC.PO"                              ECD.SCRN.NAME<10> = "VOUCHER.MISC.PO"
0101 ECD.SCRN.NAME<11> = "VOUCHER.OS.PO.REC"                            ECD.SCRN.NAME<11> = "VOUCHER.OS.PO.REC"
0102 ECD.SCRN.NAME<12> = "VOUCHER.NP.PO"                             |  ECD.SCRN.NAME<12> = "VOUCHER.NP.PO"   ;*T24137
0103                                                                 >  ECD.SCRN.FLAG<12> = 2                 ;*T24137
0104 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0105 MENU = "M"                                                         MENU = "M"
0106 CALL VOUCHER.MAINT                                                 CALL VOUCHER.MAINT

0107 GOTO 99999                                                         GOTO 99999
0108 *** CALLS FOR SYSCOM                                               *** CALLS FOR SYSCOM
0109 91000 ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)                  |  91000ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
0110 RETURN                                                             RETURN
0111 92000 ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)                  |  92000ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
0112 RETURN                                                             RETURN
0113 93000 ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)                  |  93000ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
0114 99999 * PRINT @(-1)                                                99999 * PRINT @(-1)
0115 END                                                                END


APSBP/VOUCHER.MAINT                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.MAINT
Printed for thompson at 06/28/2006 04:09:05PM

0032 *T22394 lanny 12/02/1997 * Error msg using wrong G/L Acct.         *T22394 lanny 12/02/1997 * Error msg using wrong G/L Acct.
0033 *T22473 stefanie 02/05/1998 * Merch amount being zeroed out.       *T22473 stefanie 02/05/1998 * Merch amount being zeroed out.
0034 *T23278 markt 10/13/1998 * Add division security check             *T23278 markt 10/13/1998 * Add division security check
0035 *T23541 markt 12/21/98 * 'Voucher # xxx has been entered' warn     *T23541 markt 12/21/98 * 'Voucher # xxx has been entered' wa
0036 *                         causes the screen to wrap.               *                         causes the screen to wrap.
0037 *T25759 edwin 04/19/2001 * Added remittance comments.           |  *T24135 jamesf 11/29/1999 * Update VEND.PO.STATS with the un
0038 *T25769 edwin 05/10/2001 * Enter PO# then display Vendor info   |  *                           vouchered qtys and voucher # by 
0039                                                                 >  *                           (F)iled.
0040                                                                 >  *T24137 lanny 04/21/2000 * Add new PO Type 'N' for PO's name
0041 *T26365 cmykleb 01/08/2002 * When a user changes the gross dol     *T26365 cmykleb 01/08/2002 * When a user changes the gross d

0043 *                            credit side account # then the pg     *                            credit side account # then the 
0044 *                            automatically update the amount o     *                            automatically update the amount
0045 *                            credit side with the new amount e     *                            credit side with the new amount
0046 *T26374 lross 01/10/2002 * Div security is cheking TVO.DIV, sh     *T26374 lross 01/10/2002 * Div security is cheking TVO.DIV, 
0047 *                          TVO.DIV.OWNER.                          *                          TVO.DIV.OWNER.
0048 *T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,  <  
0049 *T26126 adelgado 02/25/2002 * Implement the LOCKED clause for   <  
0050 *T26556 cmykleb 05/20/2002 * Rev12 corrections.                 <  
0051 *T25824 cmykleb 06/03/2002 * Allow for non-Primac po's to post  <  
0052 *                            using "JOB" as the po #.           <  

0053 *T26685 cmykleb 08/20/2002 * Division security                  <  
0054 *T27549 lross 07/10/2003 * If PO exists, do not allow Merch Am  <  
0055 *                          unequal to sum of vouchered lines o  <  
0056 *T28290 lross 10/07/2004 * Update INV.XREF with current VOUCHE  <  
0057 *T28292 lross 10/07/2004 * Fiscal period diff test on "JOB" ty  <  
0058 *                          flawed.                              <  
0059 *T28331 lross 11/11/2004 * Error when accessing existing "JOB"  <  

0060 *T28388 lross 01/07/2005 * "JOB" type error due to 2-digit per  <  
0061 *                          compare.                             <  
0062 **************************************************************     ************************************************************
0063 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0064 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0065 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0066 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR

0080 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0081 *COPY>APS.CPYLIB>APS.FILE.VARS                                     *COPY>APS.CPYLIB>APS.FILE.VARS
0082 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0083 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0084 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0085 DIM VOU.NOS(52)  ;*C37434                                       |  *COPY>APS.CPYLIB>VEND.PO.STATS
0086                                                                 >  DIM VOU.NOS(20)
0087 MAT VOU.NOS = ''                                                   MAT VOU.NOS = ''
0088 DIM SVEND.REC(50)                                                  DIM SVEND.REC(50)
0089 EQU SVEND.DESC TO SVEND.REC(1)                                     EQU SVEND.DESC TO SVEND.REC(1)

0094 DIM L.VOU(2)                                                       DIM L.VOU(2)
0095 EQU VOU.NO TO L.VOU(1)                                             EQU VOU.NO TO L.VOU(1)
0096 EQU VOU.DATE TO L.VOU(2)                                           EQU VOU.DATE TO L.VOU(2)
0097 *** SETUP                                                          *** SETUP
0098 VOUCHER.ACCT.ACCRUE='' ;*T20016.1                                  VOUCHER.ACCT.ACCRUE='' ;*T20016.1
0099                                                                 >  CHANGE.UNPOST.PO = '' ;*T24135
0100 SYS.TYPE = 1                                                       SYS.TYPE = 1
0101 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0102 IN.ACCT.LEN = LEN(CO.ACCT.PIC)                                     IN.ACCT.LEN = LEN(CO.ACCT.PIC)
0103 MATREAD GLTABLE.REC FROM CONTROL ,CONO:"GLTABLE" ELSE              MATREAD GLTABLE.REC FROM CONTROL ,CONO:"GLTABLE" ELSE

0109 END                                                                END
0110 NUM.PERIODS = PERIOD.REC<1>                                        NUM.PERIODS = PERIOD.REC<1>
0111 MATREAD FISCAL.REC FROM CONTROL, CONO:"APVFISCAL" ELSE             MATREAD FISCAL.REC FROM CONTROL, CONO:"APVFISCAL" ELSE
0112 ERRMSG = "CONTROL RECORD APVFISCAL IS MISSING";GOTO 93000          ERRMSG = "CONTROL RECORD APVFISCAL IS MISSING";GOTO 93000
0113 END                                                                END
0114 *T28331 v                                                       <  
0115 READ JCFDATA FROM CONTROL, CONO:"JCFISCAL" ELSE                 <  
0116 ERRMSG = "CONTROL RECORD JCFISCAL IS MISSING";GOTO 93000        <  
0117 END                                                             <  
0118 *T28331 ^                                                       <  

0135 *** SET UP GEN.XREF.REC                                            *** SET UP GEN.XREF.REC
0136 MAT GEN.XREF.REC = ""                                              MAT GEN.XREF.REC = ""
0137 GXR.CO = CONO                                                      GXR.CO = CONO
0138 GXR.HEADING<1,2> = 'DESCRIPTION'                                   GXR.HEADING<1,2> = 'DESCRIPTION'
0139 GXR.ATT<1,1> = 0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 10;GXR.LEN<1,     GXR.ATT<1,1> = 0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 10;GXR.LEN<
0140 BEGIN.PAGE = 17;PAGE.SIZE = 3;LINE.SPACE = 1                    |  BEGIN.PAGE = 16;PAGE.SIZE = 3;LINE.SPACE = 1
0141 GEN.DIV='00';GEN.DEPT='00';GEN.CCTR='000'                          GEN.DIV='00';GEN.DEPT='00';GEN.CCTR='000'
0142 *** MAIN PROCESSING                                                *** MAIN PROCESSING
0143 SAVE.VEND = ""                                                     SAVE.VEND = ""
0144 LV.FLG = 0                                                         LV.FLG = 0

0152 OPTION = '';REQUEST = ''                                           OPTION = '';REQUEST = ''
0153 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0154 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0155 MAT TVO.REC = '' ;*T21177                                          MAT TVO.REC = '' ;*T21177
0156 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0157 P_X  = 60 ; P_Y = 15 ; P_VALUE = " Amount" ; P_OPT = ""         |  P_X  = 60 ; P_Y = 14 ; P_VALUE = " Amount" ; P_OPT = ""
0158 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0159 *** ENTER VOUCHER NUMBER                                           *** ENTER VOUCHER NUMBER
0160 5*                                                                 5*
0161 RELEASE                                                            RELEASE

0162 FPO = 0 ; * T27549                                              <  
0163 DIST.BAL.FLG = 0                                                   DIST.BAL.FLG = 0
0164 VOUCHER.ACCRUE.FLAG = '' ;* CSF26602                               VOUCHER.ACCRUE.FLAG = '' ;* CSF26602
0165 ECD.NUM = 5                                                        ECD.NUM = 5
0166 ECD.VALDAT.CODE = '2'                                              ECD.VALDAT.CODE = '2'
0167 ECD.VALDAT.FILE = TEMP.VOUCHERS                                    ECD.VALDAT.FILE = TEMP.VOUCHERS
0168 ECD.PREFIX.ID = CONO                                               ECD.PREFIX.ID = CONO

0175 STATUS = '0'                                                       STATUS = '0'
0176 * CSF 19799                                                        * CSF 19799
0177 *     FOR I = 1 TO TVO.REC.SIZE                                    *     FOR I = 1 TO TVO.REC.SIZE
0178 *        TVO.REC(I) = ECD.VALDAT.ITEM<I>                           *        TVO.REC(I) = ECD.VALDAT.ITEM<I>
0179 *     NEXT I                                                       *     NEXT I
0180 * T26126 v                                                      |  MATREADU TVO.REC FROM TEMP.VOUCHERS, CONO:V.CODE ELSE
0181 MATREADU TVO.REC FROM TEMP.VOUCHERS, CONO:V.CODE LOCKED         <  
0182 ERRMSG = 'VOUCHER record is locked by user - ':GETUSERNAME(STA  <  
0183 GOSUB 91000;GOTO 5                                              <  
0184 END ELSE                                                        <  

0185 * T26126 ^                                                      <  
0186 RELEASE TEMP.VOUCHERS, CONO:V.CODE                                 RELEASE TEMP.VOUCHERS, CONO:V.CODE
0187 GOTO 1                                                             GOTO 1
0188 END                                                                END
0189                                                                 >  *T24135 v
0190                                                                 >  CHANGE.UNPOST.PO = TVO.PO.NOS<1,1>
0191                                                                 >  FOR U = 2 TO DCOUNT(TVO.PO.NOS,VM)

0192                                                                 >  LOCATE TVO.PO.NOS<1,U> IN CHANGE.UNPOST.PO<1>,1 SETTING UFND
0193                                                                 >  INS TVO.PO.NOS<1,U> BEFORE CHANGE.UNPOST.PO<1,UFND>
0194                                                                 >  END
0195                                                                 >  NEXT U
0196                                                                 >  *T24135 ^
0197 *T23278 v                                                          *T23278 v
0198 *T26374 v                                                          *T26374 v

0202 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN            IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
0203 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN                        IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
0204 ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING &     ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING
0205 GOSUB 91000; GOTO 5                                                GOSUB 91000; GOTO 5
0206 END                                                                END
0207 *T28331 v                                                       <  
0208 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE           <  
0209 ERRMSG = "Division ":DIV.CODE:"  not found in Control File DIV  <  
0210 GOTO 93000                                                      <  
0211 END                                                                END

0212 END ELSE                                                        <  
0213 POS = 1                                                         <  
0214 END                                                             <  
0215 JCS.PERIOD = JCFDATA<1,POS>                                     <  
0216 *T28331 ^                                                       <  
0217 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)                  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0218 IF ERRMSG # '' THEN                                                IF ERRMSG # '' THEN

0225 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0226 GOSUB 150                                                          GOSUB 150
0227 CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''                   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
0228 IF ECD.RET.VALUE # "N" THEN GOTO 1                                 IF ECD.RET.VALUE # "N" THEN GOTO 1
0229 STATUS = '1'                                                       STATUS = '1'
0230 FOR S = 1 TO 3                                                  |  FOR S = 1 TO 15
0231 ON S GOSUB 160,10,15                                            |  *              ON S GOSUB 10,160,20,30,50,60,70,40,80,90,100
0232                                                                 >  ON S GOSUB 160,10,20,30,50,60,70,40,80,90,100,120,130,140,15
0233 IF ECD.RET.VALUE = 'END' THEN GOTO 1                               IF ECD.RET.VALUE = 'END' THEN GOTO 1
0234 NEXT S                                                             NEXT S

0235 FOR S = 1 TO 13                                                 <  
0236 ON S GOSUB 30,50,60,70,40,80,90,100,120,130,140,150,145         <  
0237 IF ECD.RET.VALUE = 'END' THEN GOTO 1                            <  
0238 NEXT S                                                          <  
0239 SAVE.VEND = TVO.VEND                                               SAVE.VEND = TVO.VEND
0240 END CASE                                                           END CASE
0241 *CSF 23564 v                                                       *CSF 23564 v

0259 TVO.AP.DEPT = GEN.DEPT                                             TVO.AP.DEPT = GEN.DEPT
0260 TVO.AP.CCTR = GEN.CCTR                                             TVO.AP.CCTR = GEN.CCTR
0261 END                                                                END
0262 *CSF 23564 ^                                                       *CSF 23564 ^
0263 GOSUB 60000                                                        GOSUB 60000
0264 P_X  = 45 ; P_Y = 20 ; P_VALUE = SPACE(10) ; P_OPT = ""         |  P_X  = 45 ; P_Y = 19 ; P_VALUE = SPACE(10) ; P_OPT = ""
0265 P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:SPACE(10)          |  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:SPACE(10)
0266 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0267 GOTO 1                                                             GOTO 1
0268 *** ENTER FISCAL MONTH                                             *** ENTER FISCAL MONTH

0294 IF PFND = 0 THEN                                                   IF PFND = 0 THEN
0295 ERRMSG = S.HMSG; GOSUB 91000; GOTO 10                              ERRMSG = S.HMSG; GOSUB 91000; GOTO 10
0296 END                                                                END
0297 IF MONTH # ECD.RET.VALUE THEN                                      IF MONTH # ECD.RET.VALUE THEN
0298 X=0;Y=23;TYP=18;MINL=1;MAXL=1                                      X=0;Y=23;TYP=18;MINL=1;MAXL=1
0299 PMSG='Fiscal month ':MONTH:' is the current month. Is ':ECD.RE  |  PMSG='FISCAL MONTH ':MONTH:' IS THE CURRENT MONTH. IS ':ECD.
0300 CALL EDIT.SUB                                                      CALL EDIT.SUB
0301 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0302 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0303 IF VALUE = 'N' OR VALUE = 'END' THEN GOTO 10                       IF VALUE = 'N' OR VALUE = 'END' THEN GOTO 10

0309 TVO.MON = YEAR                                                     TVO.MON = YEAR
0310 END                                                                END
0311 TVO.MON = TVO.MON : STR("0",2-LEN(MON)) : MON                      TVO.MON = TVO.MON : STR("0",2-LEN(MON)) : MON
0312 END                                                                END
0313 RETURN                                                             RETURN
0314 *** ROUTINE TO LOAD VENDOR INFORMATION                          <  
0315 15*                                                             <  
0316 ECD.NUM = 12                                                    <  
0317 ECD.ACTION = 4 ; CALL SCRN.EDIT                                 <  
0318 IF ECD.RET.VALUE="MULTI" OR ECD.RET.VALUE="JOB" OR ECD.RET.VAL  <  

0319 IF ECD.RET.VALUE="END" THEN RETURN                              <  
0320 TVO.PO = ECD.RET.VALUE                                          <  
0321 ECD.NUM = 54                                                    <  
0322 ECD.ACTION = 4 ; CALL SCRN.EDIT                                 <  
0323 TVO.PO.TYPE = ECD.RET.VALUE                                     <  
0324 IF ECD.RET.VALUE = "END" THEN RETURN                            <  
0325 *                                                               <  

0326 FPO = 0                                                         <  
0327 BEGIN CASE                                                      <  
0328 CASE TVO.PO.TYPE = "R"                                          <  
0329 MATREAD PO.REC FROM PO,CONO:TVO.PO THEN                         <  
0330 IF PO.DIV.OWNER # TVO.DIV.OWNER AND TVO.DIV.OWNER # "00" THEN   <  
0331 ERRMSG = "PO and Voucher must have the same Owning Division"    <  
0332 GOSUB 91000                                                     <  

0333 GOTO 15                                                         <  
0334 END ELSE TVO.VEND = PO.VEND.NO                                  <  
0335 END ELSE FPO = 1                                                <  
0336 CASE TVO.PO.TYPE = "O"                                          <  
0337 MATREAD OPO.REC FROM OUTSIDE.PO,CONO:TVO.PO THEN                <  
0338 IF OPO.DIV.OWNER # TVO.DIV.OWNER AND TVO.DIV.OWNER # "00" THEN  <  
0339 ERRMSG = "PO and Voucher must have the same Owning Division"    <  

0340 GOSUB 91000                                                     <  
0341 GOTO 15                                                         <  
0342 END ELSE TVO.VEND = OPO.VEND.NO                                 <  
0343 END ELSE FPO = 1                                                <  
0344 CASE TVO.PO.TYPE = "M"                                          <  
0345 MATREAD MPO.REC FROM MISC.PO,CONO:TVO.PO THEN                   <  
0346 IF MPO.DIV.OWNER # TVO.DIV.OWNER AND TVO.DIV.OWNER # "00" THEN  <  

0347 ERRMSG = "PO and Voucher must have the same Owning Division"    <  
0348 GOSUB 91000                                                     <  
0349 GOTO 15                                                         <  
0350 END ELSE TVO.VEND = MPO.VEND.NO                                 <  
0351 END ELSE FPO = 1                                                <  
0352 *T26556 v                                                       <  
0353 CASE TVO.PO.TYPE = "N"                                          <  

0354 GOTO 20                                                         <  
0355 *T26556 ^                                                       <  
0356 END CASE                                                        <  
0357 *                                                               <  
0358 IF FPO THEN                                                     <  
0359 X=0 ; Y=23 ; TYP=18 ; PMSG ='This PO is not setup.  Ok to use?  <  
0360 CALL EDIT.SUB                                                   <  

0361 P_X = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                <  
0362 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
0363 IF VALUE = "END" THEN RETURN                                    <  
0364 IF VALUE = "N" THEN                                             <  
0365 ECD.NUM = 12 ; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""               <  
0366 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0367 ECD.NUM = 54 ; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""               <  

0368 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0369 END                                                             <  
0370 GOTO 20                                                         <  
0371 END ELSE                                                        <  
0372 MATREAD VEND.REC FROM VEND,CONO:TVO.VEND THEN                   <  
0373 SCV.REC(10)<ECD.SCRN.NO> = TVO.VEND                             <  
0374 SCV.REC(11)<ECD.SCRN.NO> = VEND.DESC                            <  

0375 SCV.REC(13)<ECD.SCRN.NO> = VEND.ADDR1                           <  
0376 SCV.REC(16)<ECD.SCRN.NO> = VEND.CT.ST[1,19]                     <  
0377 SCV.REC(53)<ECD.SCRN.NO> = VEND.ZIP                             <  
0378 SCV.REC(17)<ECD.SCRN.NO> = VEND.TERMS<1,2>                      <  
0379 SCV.REC(47)<ECD.SCRN.NO> = VEND.TERMS<1,1>[1,4]                 <  
0380 SCV.REC(48)<ECD.SCRN.NO> = VEND.TERMS<1,1>[5,2]                 <  
0381 IF TVO.VEND<1,1>[6,1] = "-" THEN GOSUB 1200                     <  

0382 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 <  
0383 LINES = DCOUNT(TVO.ACCT,VM)                                     <  
0384 LN = 1                                                          <  
0385 OLD.START.LINE = 0                                              <  
0386 IF DIST.BAL.FLG THEN                                            <  
0387 GOSUB 1100                                                      <  
0388 GOSUB 150                                                       <  

0389 END                                                             <  
0390 END ELSE                                                        <  
0391 ERRMSG = TVO.VEND:" Is Not On File"                             <  
0392 GOSUB 91000                                                     <  
0393 GOTO 20                                                         <  
0394 END                                                             <  
0395 END                                                             <  

0396 RETURN                                                          <  
0397 *                                                               <  
0398 *                                                               <  
0399 *** ENTER VEND CODE AND PRINT VEND INFORMATION                     *** ENTER VEND CODE AND PRINT VEND INFORMATION
0400 20*                                                                20*
0401 * IF VEND.NO # "" THEN GOTO 29                                  <  
0402 ECD.NUM = 10                                                       ECD.NUM = 10

0540 IF ECD.RET.VALUE = "END" THEN GOTO 40                              IF ECD.RET.VALUE = "END" THEN GOTO 40
0541 TVO.PO.TYPE = ECD.RET.VALUE                                        TVO.PO.TYPE = ECD.RET.VALUE
0542 TVO.PO.DETAIL = "Y"                                                TVO.PO.DETAIL = "Y"
0543 IF TVO.PO.TYPE = "N" THEN TVO.PO.DETAIL = ""                       IF TVO.PO.TYPE = "N" THEN TVO.PO.DETAIL = ""
0544 END                                                                END
0545 *T25824 v                                                       |  *T24137 v
0546 CASE ECD.RET.VALUE = "JOB"                                         CASE ECD.RET.VALUE = "JOB"
0547 *T28388 v All we need to do here is compare the full 6-digit p  <  
0548 *T28292 v                                                       <  
0549 APFISCAL = TVO.MON; JCFISCAL = JCS.PERIOD                       <  

0550 *        BEGIN CASE                                             <  
0551 *        CASE APFISCAL[1,4] = JCFISCAL[1,4]                     <  
0552 *        CASE APFISCAL[1,4] > JCFISCAL[1,4]                     <  
0553 *          XX=APFISCAL[5,2] + NUM.PERIODS                       <  
0554 *          APFISCAL = APFISCAL[1,4]:XX                          <  
0555 *        END CASE                                               <  
0556 *        IF TVO.MON[5,2] GT JCS.PERIOD[5,2] THEN                <  

0557 IF TVO.MON > JCS.PERIOD THEN                                    <  
0558 IF TVO.MON[1,4] > JCS.PERIOD[1,4] THEN                          <  
0559 APFISCAL += NUM.PERIODS                                         <  
0560 END                                                             <  
0561 IF APFISCAL[5,2] > JCFISCAL[5,2] THEN                           <  
0562 *            DIFF = TVO.MON[5,2] - JCS.PERIOD[5,2]              <  
0563 DIFF = APFISCAL[5,2] - JCFISCAL[5,2]                            <  

0564 *T28292 ^                                                       <  
0565 IF DIFF > 2 THEN                                                <  
0566 ERRMSG = "Period cannot be more than 2 periods ahead of the JC  <  
0567 GOSUB 91000                                                     <  
0568 GOTO 40                                                         <  
0569 END                                                             <  
0570 END                                                             <  

0571 END                                                             <  
0572 *T28388 ^                                                       <  
0573 *T28292 v                                                       <  
0574 *        IF TVO.MON[5,2] LT JCS.PERIOD[5,2] THEN                <  
0575 IF TVO.MON LT JCS.PERIOD THEN                                   <  
0576 *           ERRMSG = "Period cannot be less than the current J  <  
0577 ERRMSG = "Period cannot be less than the JCS period of ":JCS.P  <  

0578 *T28292 ^                                                       <  
0579 GOSUB 91000                                                     <  
0580 GOTO 40                                                         <  
0581 END                                                             <  
0582 TVO.PO = ECD.RET.VALUE                                             TVO.PO = ECD.RET.VALUE
0583 RET.VALUE = ECD.RET.VALUE                                          RET.VALUE = ECD.RET.VALUE
0584 ECD.NUM=54                                                      |  ECD.NUM = 54; ECD.RET.VALUE = 'N';ECD.ACTION = 5; CALL SCRN.

0585 TVO.PO.TYPE = "N"                                               |  TVO.PO.TYPE = 'N'; TVO.PO.DETAIL = 'Y'
0586 TVO.PO.DETAIL = "Y"                                             |  *T24137 ^
0587 SCV.REC(54)<ECD.SCRN.NO> = TVO.PO.TYPE                          <  
0588 ECD.ACTION=5 ; CALL SCRN.EDIT                                   <  
0589 *T25824 ^                                                       <  
0590 CASE 1                                                             CASE 1
0591 IF TVO.PO.NOS = "" THEN                                            IF TVO.PO.NOS = "" THEN

0683 IF GUIFORM THEN                                                    IF GUIFORM THEN
0684 P_TITLE = SCV.REC(18)<ECD.SCRN.NO>                                 P_TITLE = SCV.REC(18)<ECD.SCRN.NO>
0685 CALL VSI_PTITLE(P_TITLE,ERROR)                                     CALL VSI_PTITLE(P_TITLE,ERROR)
0686 END                                                                END
0687 CALL VOUCHER.OS.PO(V.CODE,RET.VALUE)                               CALL VOUCHER.OS.PO(V.CODE,RET.VALUE)
0688 *T25824 v                                                       |  *T24137 v
0689 CASE TVO.PO.TYPE = "N"                                             CASE TVO.PO.TYPE = "N"
0690 ECD.SCRN.NO = 12                                                   ECD.SCRN.NO = 12
0691 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>                            SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
0692 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC

0693 SCV.REC(16)<ECD.SCRN.NO> = V.CODE                                  SCV.REC(16)<ECD.SCRN.NO> = V.CODE
0694 SCV.REC(18)<ECD.SCRN.NO> = " V O U C H E R   N O N   P R I M A     SCV.REC(18)<ECD.SCRN.NO> = "  V O U C H E R   N O N  P R I M
0695 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 3; CALL SCRN.EDIT
0696 IF GUIFORM THEN                                                    IF GUIFORM THEN
0697 P_TITLE = SCV.REC(18)<ECD.SCRN.NO>                                 P_TITLE = SCV.REC(18)<ECD.SCRN.NO>
0698 CALL VSI_PTITLE(P_TITLE,ERROR)                                     CALL VSI_PTITLE(P_TITLE,ERROR)
0699 END                                                                END
0700 CALL VOUCHER.NP.PO(V.CODE,RET.VALUE)                               CALL VOUCHER.NP.PO(V.CODE,RET.VALUE)
0701 *T25824 ^                                                       |  *T24137 ^

0781 END                                                                END
0782 IF OPTION # "" THEN GOSUB 70                                       IF OPTION # "" THEN GOSUB 70
0783 RETURN                                                             RETURN
0784 *** CALCULATE DUE DATE                                             *** CALCULATE DUE DATE
0785 70*                                                                70*
0786 *T22288 v on next two lines change to 4 digit year              |  *T22288 v on next two lines change ot 4 digit year
0787 DATE.INV = OCONV(TVO.INV.DATE, "D4/")                              DATE.INV = OCONV(TVO.INV.DATE, "D4/")
0788 MM = DATE.INV[1,2];DD = DATE.INV[4,2];YY = DATE.INV[7,4]           MM = DATE.INV[1,2];DD = DATE.INV[4,2];YY = DATE.INV[7,4]
0789 *T22288 ^                                                          *T22288 ^      
0790 TRM.DAYS = TVO.TERMS<1,2>                                          TRM.DAYS = TVO.TERMS<1,2>

0917 IF ECD.RET.VALUE # SUM(SUM(TVO.PO.VOUCH)) THEN                     IF ECD.RET.VALUE # SUM(SUM(TVO.PO.VOUCH)) THEN
0918 ERRMSG = "Must change PO vouchered amounts first."                 ERRMSG = "Must change PO vouchered amounts first."
0919 GOSUB 91000                                                        GOSUB 91000
0920 *T22473 >                  ECD.NUM = 46; SCV.REC(ECD.NUM)<ECD.     *T22473 >                  ECD.NUM = 46; SCV.REC(ECD.NUM)<EC
0921 ECD.NUM = 46; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = SUM(SUM(TVO.PO.V     ECD.NUM = 46; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = SUM(SUM(TVO.PO
0922 ECD.RET.VALUE = SCV.REC(ECD.NUM)<ECD.SCRN.NO> ;*T27549          <  
0923 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0924 END ELSE                                                           END ELSE
0925 TVO.MER.AMT = ECD.RET.VALUE                                        TVO.MER.AMT = ECD.RET.VALUE
0926 END                                                                END

0974 TVO.DSC.AMT = ECD.RET.VALUE                                        TVO.DSC.AMT = ECD.RET.VALUE
0975 END                                                                END
0976 *** CALCULATE NET AMT                                              *** CALCULATE NET AMT
0977 110*                                                               110*
0978 ECD.NUM = 25;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TVO.GRS.AMT - TVO     ECD.NUM = 25;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TVO.GRS.AMT - T
0979 P_X  = 45 ; P_Y = 20 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") "L  |  P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") 
0980 P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:OCONV(DIST.BAL ,   |  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(DIST.BAL 
0981 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0982 DIST.BAL.FLG = 1                                                   DIST.BAL.FLG = 1
0983 RETURN                                                             RETURN

1018 CASE APCK.CODE # "P"                                               CASE APCK.CODE # "P"
1019 ERRMSG = "THIS CHECK IS NOT A HAND CHECK OR IT WAS CANCELLED";     ERRMSG = "THIS CHECK IS NOT A HAND CHECK OR IT WAS CANCELLED
1020 CASE APCK.VEND<1,1> # TVO.VEND<1,1>                                CASE APCK.VEND<1,1> # TVO.VEND<1,1>
1021 ERRMSG = "THIS CHECK WAS ASSIGNED TO DIFFERENT VENDOR CAN'T US     ERRMSG = "THIS CHECK WAS ASSIGNED TO DIFFERENT VENDOR CAN'T 
1022 CASE 1                                                             CASE 1
1023 X = 0; Y = 23; PMSG = "CHECK # (":TVO.CHK.NO:") HAS BEEN ASSIG  |  X = 0; Y = 23; PMSG = "CHECK # (":TVO.CHK.NO:") HAS BEEN ASS
1024 CALL EDIT.SUB                                                      CALL EDIT.SUB
1025 IF VALUE = "END" OR VALUE = "N" THEN GOTO 130                      IF VALUE = "END" OR VALUE = "N" THEN GOTO 130
1026 END CASE                                                           END CASE
1027 END                                                                END

1056 TVO.CCTR = ""                                                      TVO.CCTR = ""
1057 TVO.ASSET.ID = ""                                                  TVO.ASSET.ID = ""
1058 IF OPTION = 5 THEN                                                 IF OPTION = 5 THEN
1059 LINES = 0                                                          LINES = 0
1060 DIST.BAL = TVO.GRS.AMT                                             DIST.BAL = TVO.GRS.AMT
1061 P_X  = 45 ; P_Y = 20 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") "R  |  P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") 
1062 P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:OCONV(DIST.BAL ,   |  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(DIST.BAL 
1063 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1064 OLD.START.LINE = 0; GOSUB 150                                      OLD.START.LINE = 0; GOSUB 150
1065 END                                                                END

1066 END                                                                END
1067 RETURN                                                             RETURN
1068 * T25759 v                                                      <  
1069 *                                                               <  
1070 *** ENTER REMIT COMMENTS ***                                    <  
1071 145 *                                                           <  
1072 ECD.NUM = 59 ; ECD.ACTION = 4                                   <  
1073 IF TVO.REM.COMM # '' THEN ECD.DEFAULT = TVO.REM.COMM            <  
1074 CALL SCRN.EDIT                                                  <  

1075 IF ECD.RET.VALUE # 'END' THEN                                   <  
1076 TVO.REM.COMM = ECD.RET.VALUE                                    <  
1077 END                                                             <  
1078 RETURN                                                          <  
1079 * T25759 ^                                                      <  
1080 *** ENTER ACCOUNT DISTR                                            *** ENTER ACCOUNT DISTR
1081 150*                                                               150*

1146 END                                                                END
1147 END ELSE                                                           END ELSE
1148 POS = 1                                                            POS = 1
1149 END                                                                END
1150 *T23278 ^                                                          *T23278 ^
1151 *T25824 v                                                       <  
1152 READ JCFDATA FROM CONTROL, CONO:'JCFISCAL' ELSE JCFDATA = ""    <  
1153 JCS.PERIOD = JCFDATA<1,POS>                                     <  
1154 *T25824 ^                                                       <  
1155 END                                                                END

1453 **************************************************************     ************************************************************
1454 *** ENTER DIST AMT                                                 *** ENTER DIST AMT
1455 202*                                                               202*
1456 IF DB.CR = 'D' AND TVO.DIST.AMT<1,LN> > 0 THEN        ;* Task      IF DB.CR = 'D' AND TVO.DIST.AMT<1,LN> > 0 THEN        ;* Tas
1457 DIST.BAL = DIST.BAL + TVO.DIST.AMT<1,LN>                           DIST.BAL = DIST.BAL + TVO.DIST.AMT<1,LN>
1458 P_X  = 68 ; P_Y = 20 ; P_VALUE = OCONV(DIST.BAL, "MD2") "R#10"  |  P_X  = 68 ; P_Y = 19 ; P_VALUE = OCONV(DIST.BAL, "MD2") "R#1
1459 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1460 END                                                                END
1461 X=60;Y=SLN;TYP=4;SCALER=2;MAXL=10                                  X=60;Y=SLN;TYP=4;SCALER=2;MAXL=10
1462 IF DB.CR='D' THEN        ;* Task 17919                             IF DB.CR='D' THEN        ;* Task 17919

1530 DIST.BAL = 0                                                       DIST.BAL = 0
1531 FOR AA = 1 TO LINES                                                FOR AA = 1 TO LINES
1532 DIST.BAL = DIST.BAL + TVO.DIST.AMT<1,AA>                           DIST.BAL = DIST.BAL + TVO.DIST.AMT<1,AA>
1533 NEXT AA                                                            NEXT AA
1534 DIST.BAL = TVO.GRS.AMT - DIST.BAL                                  DIST.BAL = TVO.GRS.AMT - DIST.BAL
1535 P_X  = 45 ; P_Y = 20 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") "R  |  P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(TVO.GRS.AMT , "MD2") 
1536 P_X  := AM:68 ; P_Y := AM:20 ; P_VALUE := AM:OCONV(DIST.BAL, "  |  P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(DIST.BAL
,
1537 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1538 RETURN                                                             RETURN
1539 *** ENTER A MISC. VEND                                             *** ENTER A MISC. VEND

1611 SCV.REC(25)<ECD.SCRN.NO> = TVO.GRS.AMT - TVO.DSC.AMT               SCV.REC(25)<ECD.SCRN.NO> = TVO.GRS.AMT - TVO.DSC.AMT
1612 SCV.REC(50)<ECD.SCRN.NO> = TVO.DISB.ACCT CO.ACCT.MASK              SCV.REC(50)<ECD.SCRN.NO> = TVO.DISB.ACCT CO.ACCT.MASK
1613 SCV.REC(51)<ECD.SCRN.NO> = TVO.CHK.NO                              SCV.REC(51)<ECD.SCRN.NO> = TVO.CHK.NO
1614 SCV.REC(52)<ECD.SCRN.NO> = TVO.PAID.DATE                           SCV.REC(52)<ECD.SCRN.NO> = TVO.PAID.DATE
1615 SCV.REC(56)<ECD.SCRN.NO> = TVO.DIV.OWNER                           SCV.REC(56)<ECD.SCRN.NO> = TVO.DIV.OWNER
1616 SCV.REC(59)<ECD.SCRN.NO> = TVO.REM.COMM ; *T25759               <  
1617 * T22269 v  Read this file at this point so APCK.REC will be d     * T22269 v  Read this file at this point so APCK.REC will be
1618 *           without having to go to block 130 (Enter a check n     *           without having to go to block 130 (Enter a check
1619 MATREAD APCK.REC FROM APCHECK , CONO:TVO.DISB.ACCT:TVO.CHK.NO      MATREAD APCK.REC FROM APCHECK , CONO:TVO.DISB.ACCT:TVO.CHK.N
1620 MAT APCK.REC = ''                                                  MAT APCK.REC = ''

1622 * T22269 ^                                                         * T22269 ^ 
1623 RETURN                                                             RETURN
1624 *** SCROLL ACCOUNT DIST                                            *** SCROLL ACCOUNT DIST
1625 1100*                                                              1100*
1626 IF DB.CR = 'D' THEN                                                IF DB.CR = 'D' THEN
1627 P_X  = 60 ; P_Y = 15 ; P_VALUE = "Debits " ; P_OPT = ""         |  P_X  = 60 ; P_Y = 14 ; P_VALUE = "Debits " ; P_OPT = ""
1628 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1629 NO.LINES = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")                    NO.LINES = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
1630 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE                 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
1631 *     IF START.LINE = OLD.START.LINE THEN GOTO 1199                *     IF START.LINE = OLD.START.LINE THEN GOTO 1199

1655 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
1656 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
1657 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1658 NEXT N                                                             NEXT N
1659 END ELSE                                                           END ELSE
1660 P_X  = 60 ; P_Y = 15 ; P_VALUE = "Credits" ; P_OPT = ""         |  P_X  = 60 ; P_Y = 14 ; P_VALUE = "Credits" ; P_OPT = ""
1661 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1662 CR.LINES = COUNT(TVO.AP.ACCT,VM) + (TVO.AP.ACCT # "")              CR.LINES = COUNT(TVO.AP.ACCT,VM) + (TVO.AP.ACCT # "")
1663 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE                 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
1664 OLD.START.LINE = START.LINE                                        OLD.START.LINE = START.LINE

1834 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
1835 END ELSE                                                           END ELSE
1836 IF LN > CR.LINES THEN LN=1                                         IF LN > CR.LINES THEN LN=1
1837 END                                                                END
1838 GOSUB 1100                                                         GOSUB 1100
1839 * T25978 v                                                      <  
1840 CASE REQUEST = 'SR'                                             <  
1841 LN -= PAGE.SIZE                                                 <  
1842 IF LN < 1 THEN LN = 1                                           <  
1843 GOSUB 1100                                                      <  

1844 CASE REQUEST = 'ST'                                             <  
1845 LN = 1                                                          <  
1846 GOSUB 1100                                                      <  
1847 CASE REQUEST = 'SB'                                             <  
1848 IF DB.CR='D' THEN LN = LINES ELSE LN = CR.LINES                 <  
1849 GOSUB 1100                                                      <  
1850 * T25978 ^                                                      <  

1862 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE
1863 BEGIN CASE                                                         BEGIN CASE
1864 CASE OPTION = 'END' OR OPTION = 'E'                                CASE OPTION = 'END' OR OPTION = 'E'
1865 MORE = 1                                                           MORE = 1
1866 CASE NUM(OPTION)                                                   CASE NUM(OPTION)
1867 * T25759 v                                                      |  ON OPTION GOSUB 20,30,50,60,70,40,80,90,100,120,130,140
1868 *             ON OPTION GOSUB 20,30,50,60,70,40,80,90,100,120,  <  
1869 ON OPTION GOSUB 20,30,50,60,70,40,80,90,100,120,130,140,145     <  
1870 * T25759 ^                                                      <  
1871 CASE OPTION = 'AD'                                                 CASE OPTION = 'AD'

1871 CASE OPTION = 'AD'                                                 CASE OPTION = 'AD'
1872 GOSUB 50000                                                        GOSUB 50000
1873 DB.CR='D'        ;* Task 17919                                     DB.CR='D'        ;* Task 17919
1874 GOSUB 1100                                                         GOSUB 1100
1875 CASE OPTION = 'F'                                                  CASE OPTION = 'F'
1876                                                                 >  GOSUB 300
1877 IF DIST.BAL # "0" THEN                                             IF DIST.BAL # "0" THEN
1878 ERRMSG = "CAN'T FILE WHEN DIST. BALANCE NOT EQUAL ZERO";GOSUB      ERRMSG = "CAN'T FILE WHEN DIST. BALANCE NOT EQUAL ZERO";GOSU
1879 END                                                                END
1880 *                                                                  *

1917 GOSUB 91000                                                        GOSUB 91000
1918 GOTO 60000                                                         GOTO 60000
1919 END                                                                END
1920 * CSF 25838 ^                                                      * CSF 25838 ^
1921 *                                                                  *
1922 *T27549 v                                                       <  
1923 IF FPO AND VOUCHER.ACCRUE.FLAG AND TVO.GRS.AMT > 0 AND TVO.MER  <  
1924 ERRMSG='Merch Amount cannot be Zero - Change PO lines'          <  
1925 GOSUB 91000                                                     <  
1926 GOTO 60000                                                      <  

1927 END                                                             <  
1928 *T27549 ^                                                       <  
1929 IF STATUS = 1 THEN                                                 IF STATUS = 1 THEN
1930 MATREADU VOU.NOS FROM CONTROL , CONO:"VOUNUMBERS" ELSE             MATREADU VOU.NOS FROM CONTROL , CONO:"VOUNUMBERS" ELSE
1931 MAT VOU.NOS = 0                                                    MAT VOU.NOS = 0
1932 END                                                                END
1933 LOOP                                                               LOOP

1960 TVO.CTR = COUNT(TVO.DIST.AMT, VM) + (TVO.DIST.AMT # "")            TVO.CTR = COUNT(TVO.DIST.AMT, VM) + (TVO.DIST.AMT # "")
1961 IF LV.FLG THEN                                                     IF LV.FLG THEN
1962 DELETE INV.XREF, CONO:STR('0',10-LEN(ORIG.INV)):ORIG.INV:TVO.V     DELETE INV.XREF, CONO:STR('0',10-LEN(ORIG.INV)):ORIG.INV:TVO
1963 LV.FLG = 0                                                         LV.FLG = 0
1964 END                                                                END
1965                                                                 >  *T24135 v
1966                                                                 >  IF STATUS = 0 THEN GOSUB 85000
1967                                                                 >  NO.OF.POS = DCOUNT(TVO.PO.NOS,@VM)
1968                                                                 >  FOR X1 = 1 TO NO.OF.POS
1969                                                                 >  IF TVO.PO.QTY<1,X1>+0 # 0 THEN

1970                                                                 >  VEND.PO.KEY = CONO:TVO.VEND:"!":TVO.PO.TYPE:"!":TVO.PO.NOS<1
1971                                                                 >  MATREADU VPS.REC FROM VEND.PO.STATS,VEND.PO.KEY ELSE MAT VPS
1972                                                                 >  PTR = 1
1973                                                                 >  LOOP
1974                                                                 >  BEGIN CASE
1975                                                                 >  CASE TVO.PO.TYPE = "M"
1976                                                                 >  IF TVO.SEQ.NO<1,X1> # "" THEN

1977                                                                 >  LOCATE TVO.SEQ.NO<1,X1> IN VPS.SEQ.NO<1>,PTR SETTING PRFND E
1978                                                                 >  VPS.PROD<1,PRFND> = TVO.PO.PROD<1,X1>
1979                                                                 >  VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,X1>
1980                                                                 >  VPS.U.M<1,PRFND> = TVO.PO.UM<1,X1>
1981                                                                 >  VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,X1>
1982                                                                 >  VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,X1>
1983                                                                 >  END

1984                                                                 >  END ELSE
1985                                                                 >  LOCATE TVO.PROD.DESC<1,X1> IN VPS.PROD.DESC<1>,PTR SETTING P
1986                                                                 >  VPS.PROD<1,PRFND> = TVO.PO.PROD<1,X1>
1987                                                                 >  VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,X1>
1988                                                                 >  VPS.U.M<1,PRFND> = TVO.PO.UM<1,X1>
1989                                                                 >  VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,X1>
1990                                                                 >  VPS.SEQ.NO<1,PRFND> = V.CODE:X1

1991                                                                 >  TVO.SEQ.NO<1,X1> = V.CODE:X1
1992                                                                 >  END
1993                                                                 >  END
1994                                                                 >  CASE 1
1995                                                                 >  LOCATE TVO.PO.PROD<1,X1> IN VPS.PROD<1>,PTR SETTING PRFND EL
1996                                                                 >  VPS.PROD<1,PRFND> = TVO.PO.PROD<1,X1>
1997                                                                 >  VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,X1>

1998                                                                 >  VPS.U.M<1,PRFND> = TVO.PO.UM<1,X1>
1999                                                                 >  *T23499 v
2000                                                                 >  IF TVO.PO.TYPE = "O" THEN
2001                                                                 >  VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,X1>:"@":TVO.PO.SEQ<1,X1>
2002                                                                 >  END ELSE
2003                                                                 >  VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,X1>
2004                                                                 >  END

2005                                                                 >  *T23499 ^
2006                                                                 >  VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,X1>
2007                                                                 >  END
2008                                                                 >  END CASE
2009                                                                 >  *T23499 v
2010                                                                 >  BUMP.PTR=1
2011                                                                 >  IF TVO.PO.TYPE = "O" THEN

2012                                                                 >  IF TVO.PO.WHSE<1,X1>:"@":TVO.PO.SEQ<1,X1> = VPS.WHSE<1,PRFND
2013                                                                 >  BUMP.PTR=0
2014                                                                 >  END
2015                                                                 >  END ELSE
2016                                                                 >  IF TVO.PO.WHSE<1,X1> = VPS.WHSE<1,PRFND> AND VPS.PROD.DESC<1
2017                                                                 >  BUMP.PTR=0
2018                                                                 >  END

2019                                                                 >  END
2020                                                                 >  IF NOT(BUMP.PTR) THEN
2021                                                                 >  *T23499 ^
2022                                                                 >  PTR = 0
2023                                                                 >  END ELSE
2024                                                                 >  PTR = PRFND + 1
2025                                                                 >  END

2026                                                                 >  WHILE PTR DO
2027                                                                 >  REPEAT
2028                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,PRFND>,1 SETTING VFND E
2029                                                                 >  VPS.UNPOST.VOU.NO<1,PRFND,VFND> = V.CODE
2030                                                                 >  *                   VPS.UNPOST.VOU.QTY<1,PRFND,VFND> = 0
2031                                                                 >  END
2032                                                                 >  VPS.UNPOST.VOU.QTY<1,PRFND,VFND> = TVO.PO.QTY<1,X1>

2033                                                                 >  MATWRITE VPS.REC ON VEND.PO.STATS, VEND.PO.KEY
2034                                                                 >  END
2035                                                                 >  NEXT X1
2036                                                                 >  *T24135 ^
2037 MATWRITE TVO.REC ON TEMP.VOUCHERS , CONO:V.CODE                    MATWRITE TVO.REC ON TEMP.VOUCHERS , CONO:V.CODE
2038 IF TVO.INV # "" THEN                                               IF TVO.INV # "" THEN
2039 *T28290        MATREAD L.VOU FROM INV.XREF , CONO:STR("0",10-L  |  MATREAD L.VOU FROM INV.XREF , CONO:STR("0",10-LEN(TVO.INV)):

2040 MATREADU L.VOU FROM INV.XREF , CONO:STR("0",10-LEN(TVO.INV)):T  <  
2041 VOU.NO = V.CODE                                                    VOU.NO = V.CODE
2042 VOU.DATE = DATE()                                                  VOU.DATE = DATE()
2043 MATWRITE L.VOU ON INV.XREF , CONO:STR("0",10-LEN(TVO.INV)):TVO     MATWRITE L.VOU ON INV.XREF , CONO:STR("0",10-LEN(TVO.INV)):T
2044 *T28290        END                                              <  
2045 END                                                                END
2046                                                                 >  END

2051 CALL EDIT.SUB                                                      CALL EDIT.SUB
2052 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
2053 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2054 IF VALUE = 'Y' THEN                                                IF VALUE = 'Y' THEN
2055 DELETE INV.XREF ,CONO:STR("0",10-LEN(TVO.INV)):TVO.INV:TVO.VEN     DELETE INV.XREF ,CONO:STR("0",10-LEN(TVO.INV)):TVO.INV:TVO.V
2056                                                                 >  GOSUB 85000   ;*T24135
2057 DELETE TEMP.VOUCHERS , CONO:V.CODE                                 DELETE TEMP.VOUCHERS , CONO:V.CODE
2058 MORE = 1                                                           MORE = 1
2059 END                                                                END
2060 END CASE                                                           END CASE

2061 WHILE MORE = 0 DO                                                  WHILE MORE = 0 DO
2062 REPEAT                                                             REPEAT
2063                                                                 >  RELEASE
2064 RETURN                                                             RETURN
2065 *** ENTER LINE NUMBER                                              *** ENTER LINE NUMBER
2066 80000*                                                             80000*
2067 GOSUB 1100                                                         GOSUB 1100
2068 ECD.NUM = 58                                                       ECD.NUM = 58
2069 ECD.MINV = OLD.START.LINE                                          ECD.MINV = OLD.START.LINE

2075 ECD.ACTION = 4                                                     ECD.ACTION = 4
2076 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
2077 LNO = ECD.RET.VALUE                                                LNO = ECD.RET.VALUE
2078 IF LNO = '' OR LNO = 'END' THEN LNO = 0                            IF LNO = '' OR LNO = 'END' THEN LNO = 0
2079 RETURN                                                             RETURN
2080                                                                 >  *
2081                                                                 >  *  Delete unposted vouchers from vend.po.stats
2082                                                                 >  85000 *
2083                                                                 >  *T24135 v
2084                                                                 >  NO.OF.POS = DCOUNT(CHANGE.UNPOST.PO,@VM)

2085                                                                 >  FOR X1 = 1 TO NO.OF.POS
2086                                                                 >  VEND.PO.KEY = CONO:TVO.VEND:"!":TVO.PO.TYPE:"!":CHANGE.UNPOS
2087                                                                 >  MATREADU VPS.REC FROM VEND.PO.STATS,VEND.PO.KEY THEN
2088                                                                 >  FOR PRFND = 1 TO DCOUNT(VPS.UNPOST.VOU.NO,VM)
2089                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,PRFND>,1 SETTING VFND T
2090                                                                 >  DEL VPS.UNPOST.VOU.NO<1,PRFND,VFND>
2091                                                                 >  DEL VPS.UNPOST.VOU.QTY<1,PRFND,VFND>

2092                                                                 >  END
2093                                                                 >  NEXT PRFND
2094                                                                 >  MATWRITE VPS.REC ON VEND.PO.STATS, VEND.PO.KEY
2095                                                                 >  END
2096                                                                 >  NEXT X1
2097                                                                 >  RETURN
2098                                                                 >  *T24135 ^

2099                                                                 >  *
2100 *** CALLS FOR SYSCOM                                               *** CALLS FOR SYSCOM
2101 91000*                                                             91000*
2102 ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)                           ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
2103 RETURN                                                             RETURN
2104 92000*                                                             92000*
2105 ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)                           ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)


APSBP/VOUCHER.MISC.PO                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.MISC.PO
Printed for thompson at 06/28/2006 04:09:07PM

0029 *                          PO, the PO line and the voucher are     *                          PO, the PO line and the voucher a
0030 *                          division 01's. But, when selecting      *                          division 01's. But, when selectin
0031 *                          ??? list, then the division is 01.      *                          ??? list, then the division is 01
0032 *T23776 diane 03/17/1999 * FIX DIV,DEPT,CCTR AND ACCOUNT DISTR     *T23776 diane 03/17/1999 * FIX DIV,DEPT,CCTR AND ACCOUNT DIS
0033 *C33616 markt 06/24/1999 * NEED TO INITIALIZE AP.CCTR, AP.DEPT     *C33616 markt 06/24/1999 * NEED TO INITIALIZE AP.CCTR, AP.DE
0034 *T24839 gil 03/06/2000 * If changes are made to PO information  |  *T24135 jamesf 11/11/1999 * Adding code to lock the VEND.PO.
0035 *                        gets an error message that debits and  |  *                           records to be released in the ca
0036 *                        not equal when filing voucher.         |  *                           routine.  Also disallowing the u
0037 *T25039 alex 04/14/2000 * TVO.SEQ.NO is set incorrectly when m  |  *                           ability to change the unit price
0038 *                         products share the same description.  |  *                           the qty entered against the qty 

0039 *T26233 gat 10/24/2001 * DEFAULT "EA" AS UNIT OF MEASURE        |  *                           minus the qty vouchered minus th
0040 *T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,  |  *                           vouchered but not posted.  The q
0041 *T26512 lross 03/27/2002 * When non-existent PO is entered the  |  *                           cannot be larger than the sum of
0042 *                          side DIV should default to DIV.OWNE  |  *                           totals.
0043 *T28042 thompson 03/31/2004 * ADD CONDIONAL STATEMENT TO CHECK  <  
0044 *                             NULL AND NOT CHANGE PREVIOUS ENT  <  
0045 *                             REAL POS                          <  

0072 LINES = 0                                                          LINES = 0
0073 LN = 0                                                             LN = 0
0074 OLD.START.LINE=0                                                   OLD.START.LINE=0
0075 TOTAL.VOUCH = 0                                                    TOTAL.VOUCH = 0
0076 PAY.VALUES = ""                                                    PAY.VALUES = ""
0077                                                                 >  UNPOST.PTR = 1
0078 MAT INV.CNV.REC = ""                                               MAT INV.CNV.REC = ""
0079 OPTION = ""                                                        OPTION = ""
0080 TEMP.ACCT.ACCRUE=0 ;*T20016.1                                      TEMP.ACCT.ACCRUE=0 ;*T20016.1
0081 *                                                                  *

0131 MORE = 0                                                           MORE = 0
0132 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0133 LN = START.LINE + PAGE.SIZE                                        LN = START.LINE + PAGE.SIZE
0134 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0135 GOSUB 10000                                                        GOSUB 10000
0136 * T25978 v                                                      <  
0137 CASE OPTION = 'SR'                                              <  
0138 LN -= PAGE.SIZE                                                 <  
0139 IF LN < 1 THEN LN = 1                                           <  
0140 GOSUB 10000                                                     <  

0141 CASE OPTION = 'ST'                                              <  
0142 LN = 1                                                          <  
0143 GOSUB 10000                                                     <  
0144 CASE OPTION = 'SB'                                              <  
0145 LN = LINES                                                      <  
0146 GOSUB 10000                                                     <  
0147 * T25978 ^                                                      <  

0263 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>                            SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
0264 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0265 SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"                         SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"
0266 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0267 PAY.VALUES = ""                                                    PAY.VALUES = ""
0268 CALL VEND.PO.INQ(PAY.VALUES)                                    |  CALL VEND.PO.INQ(PAY.VALUES,V.CODE)
0269 ECD.SCRN.NO = 10; ECD.ACTION = 3; CALL SCRN.EDIT                   ECD.SCRN.NO = 10; ECD.ACTION = 3; CALL SCRN.EDIT
0270 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0271 IF PAY.VALUES<1> = "" THEN                                         IF PAY.VALUES<1> = "" THEN
0272 GOSUB 10000                                                        GOSUB 10000 

0309 IF FNDP = 0 AND VALUE # TEMP.VALUES<1> THEN                        IF FNDP = 0 AND VALUE # TEMP.VALUES<1> THEN
0310 QUESTION = "This PO is not setup.  Ok to use? (Y/N)"; GOSUB 11     QUESTION = "This PO is not setup.  Ok to use? (Y/N)"; GOSUB 
0311 IF REPLY = "N" THEN GOTO 1000                                      IF REPLY = "N" THEN GOTO 1000
0312 CHECK.FLG = ""                                                     CHECK.FLG = ""
0313 END                                                                END
0314 MATREAD VPS.REC FROM VEND.PO.STATS , CONO:TVO.VEND:"!":TVO.PO.  |  *T24135 v
0315                                                                 >  VEND.PO.STATS.KEY = CONO:TVO.VEND:"!":TVO.PO.TYPE:"!":VALUE
0316                                                                 >  MATREADU VPS.REC FROM VEND.PO.STATS , CONO:TVO.VEND:"!":TVO.
0317                                                                 >  *T24135 ^
0318 IF CHECK.FLG = "P" AND VALUE # TEMP.VALUES<1> THEN                 IF CHECK.FLG = "P" AND VALUE # TEMP.VALUES<1> THEN

0378 * T23776 ^                                                         * T23776 ^
0379 * CSF 22882 MPO.OFFSET WILL ONLY BE SET IF MPO.PROD.NUM NOT NU     * CSF 22882 MPO.OFFSET WILL ONLY BE SET IF MPO.PROD.NUM NOT 
0380 END ELSE MPO.OFFSET = 1                                            END ELSE MPO.OFFSET = 1
0381 *                                                                  *
0382 IF VPS.PROD.DESC # "" THEN                                         IF VPS.PROD.DESC # "" THEN
0383 IF TVO.MISC.CAT='' THEN TVO.MISC.CAT=MPO.MISC.CAT<1,LN>         |  *C42798  IF TVO.MISC.CAT='' THEN TVO.MISC.CAT=MPO.MISC.CAT<1
0384                                                                 >  IF TVO.MISC.CAT='' THEN TVO.MISC.CAT=MPO.MISC.CAT<1,MPO.OFFS
0385 *      IF MPO.MISC.CAT<1,LN> # TVO.MISC.CAT<1,LN> THEN             *      IF MPO.MISC.CAT<1,LN> # TVO.MISC.CAT<1,LN> THEN
0386 *         ERRMSG = "PO category (":MPO.MISC.CAT<1,LN>:") does      *         ERRMSG = "PO category (":MPO.MISC.CAT<1,LN>:") doe
0387 *         GOSUB 91000                                              *         GOSUB 91000

0407 IF VALUE = "END" THEN GOTO 1010                                    IF VALUE = "END" THEN GOTO 1010
0408 END                                                                END
0409 END CASE                                                           END CASE
0410 P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = VALUE<1,1,1> "L#30" ; P_OP     P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = VALUE<1,1,1> "L#30" ; P_
0411 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0412 LOCATE VALUE IN VPS.PROD.DESC<1>,1 SETTING FNDPD ELSE FNDPD =   |  *C42798 v
0413                                                                 >  DPTR=1
0414                                                                 >  LOOP
0415                                                                 >  *       LOCATE VALUE IN VPS.PROD.DESC<1>,1 SETTING FNDPD ELS
0416                                                                 >  LOCATE VALUE IN VPS.PROD.DESC<1>,DPTR SETTING FNDPD ELSE FND

0417                                                                 >  BEGIN CASE
0418                                                                 >  CASE FNDPD = 0
0419                                                                 >  DPTR = 0
0420                                                                 >  CASE TEMP.VALUES<9> # '' AND TEMP.VALUES<9> # VPS.SEQ.NO<1,F
0421                                                                 >  DPTR = FNDPD+1
0422                                                                 >  CASE TEMP.VALUES<9> = '' AND MPO.SEQ.NO<1,MPO.OFFSET> # VPS.
0423                                                                 >  DPTR = FNDPD+1

0424                                                                 >  CASE 1
0425                                                                 >  DPTR = 0
0426                                                                 >  END CASE
0427                                                                 >  WHILE DPTR DO
0428                                                                 >  REPEAT
0429                                                                 >  *C42798 ^
0430 IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<3> TH     IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<3> 

0430 IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<3> TH     IF FNDPD = 0 AND CHECK.FLG = "P" AND VALUE # TEMP.VALUES<3> 
0431 QUESTION = "This product is not setup for this PO.  Ok to use?     QUESTION = "This product is not setup for this PO.  Ok to us
0432 IF REPLY = "N" THEN GOTO 1020                                      IF REPLY = "N" THEN GOTO 1020
0433 END                                                                END
0434 TEMP.VALUES<3> = VALUE                                             TEMP.VALUES<3> = VALUE
0435 *T25039 v * Used MPO.OFFSET to find seq # since misc. po's doe  |  IF FNDPD # "0" THEN TEMP.VALUES<9> = VPS.SEQ.NO<1,FNDPD> ELS
0436 *           allow the user enter in duplicate products.         <  
0437 * IF FNDPD # "0" THEN TEMP.VALUES<9> = VPS.SEQ.NO<1,FNDPD> ELS  <  
0438 TEMP.VALUES<9> = MPO.SEQ.NO<1,MPO.OFFSET>                       <  
0439 *T25039 ^                                                       <  

0485 BEGIN CASE                                                         BEGIN CASE
0486 CASE TVO.PO.UM<1,LN> # ""                                          CASE TVO.PO.UM<1,LN> # ""
0487 DEFAULT = TVO.PO.UM<1,LN>; O.R = "O"                               DEFAULT = TVO.PO.UM<1,LN>; O.R = "O"
0488 CASE TEMP.VALUES<5> # ""                                           CASE TEMP.VALUES<5> # ""
0489 DEFAULT = TEMP.VALUES<5>; O.R = "O"                                DEFAULT = TEMP.VALUES<5>; O.R = "O"
0490 CASE 1 ; * T25663 - PF11-511                                    <  
0491 DEFAULT = "EA"; O.R = 'O' ; * T25663 - PF11-511                 <  
0492 END CASE                                                           END CASE
0493 CALL EDIT.SUB                                                      CALL EDIT.SUB
0494 IF VALUE = "END" THEN GOTO 1010                                    IF VALUE = "END" THEN GOTO 1010

0506 *                                                                  *
0507 **** ENTER VOUCHERED QUANTITY                                      **** ENTER VOUCHERED QUANTITY
0508 *                                                                  *
0509 1050*                                                              1050*
0510 X = 40; Y = SLN; MAXL = 10; O.R = 'R'; VALDAT = ''; MSG = "Ent     X = 40; Y = SLN; MAXL = 10; O.R = 'R'; VALDAT = ''; MSG = "E
0511 IF TEMP.CNV<2> = "MDO" THEN                                     |  IF TEMP.CNV<2> = "MD0" THEN
0512 TYP = 3                                                            TYP = 3
0513 BEGIN CASE                                                         BEGIN CASE
0514 CASE TVO.PO.QTY<1,LN> # ""                                         CASE TVO.PO.QTY<1,LN> # ""
0515 DEFAULT = INT(((TVO.PO.QTY<1,LN>/TEMP.DV1<2>)*TEMP.MT1<2>)/TEM     DEFAULT = INT(((TVO.PO.QTY<1,LN>/TEMP.DV1<2>)*TEMP.MT1<2>)/T

0529 O.R = "O"                                                          O.R = "O"
0530 END CASE                                                           END CASE
0531 END                                                                END
0532 CALL EDIT.SUB                                                      CALL EDIT.SUB
0533 IF VALUE = "END" THEN GOTO 1010                                    IF VALUE = "END" THEN GOTO 1010
0534 IF TEMP.CNV<2> = "MDO" THEN                                     |  IF TEMP.CNV<2> = "MD0" THEN
0535 VALUE = INT(((VALUE/TEMP.MT1<2>)*TEMP.DV1<2>)*TEMP.DV2<2>+.5)      VALUE = INT(((VALUE/TEMP.MT1<2>)*TEMP.DV1<2>)*TEMP.DV2<2>+.5
0536 END ELSE                                                           END ELSE
0537 VALUE = VALUE * TEMP.MT1<2>                                        VALUE = VALUE * TEMP.MT1<2>
0538 END                                                                END

0539                                                                 >  *T24135 v
0540                                                                 >  IF FNDPD THEN
0541                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,FNDPD>,1 SETTING VFND T
0542                                                                 >  VPS.UNPOST.VOU.QTY<1,FNDPD,VFND> -= TVO.PO.QTY<1,LN>
0543                                                                 >  END
0544                                                                 >  END
0545                                                                 >  IF FNDPD AND VALUE GT VPS.REC.QTY<1,FNDPD> - VPS.VOU.QTY<1,F

0546                                                                 >  ERRMSG = "Quantity entered cannot be greater than qty receiv
0547                                                                 >  GOSUB 91000
0548                                                                 >  GOTO 1050
0549                                                                 >  END
0550                                                                 >  *T24135 ^
0551 TEMP.VALUES<6> = VALUE                                             TEMP.VALUES<6> = VALUE
0552 *                                                                  *

0553 **** ENTER VOUCHERED UNIT OF PRICE                                 **** ENTER VOUCHERED UNIT OF PRICE
0554 *                                                                  *
0555 1060*                                                              1060*
0556 X = 51; Y = SLN; TYP = 4; SCALER = 4; MAXL = 12; O.R = "R"         X = 51; Y = SLN; TYP = 4; SCALER = 4; MAXL = 12; O.R = "R"
0557 VALDAT = ""; HMSG = "Enter vouchered unit price"                   VALDAT = ""; HMSG = "Enter vouchered unit price"
0558 BEGIN CASE                                                      |  *T24135 v
0559 CASE TVO.PO.U.COST<1,LN> # ""                                   |  *     IF OPTION = "C" THEN
0560 DEFAULT = OCONV(TVO.PO.U.COST<1,LN>, "MD4")                     |  P_X = 51; P_Y = SLN
0561 O.R = 'O'                                                       |  P_VAL = OCONV(TVO.PO.U.COST<1,LN>, "MD4") "R#9"
0562 CASE TEMP.VALUES<7> # ""                                        |  CALL VSI_PLINE(P_X,P_Y,P_VAL,P_OPT)

0563 DEFAULT = OCONV(TEMP.VALUES<7>, "MD4")                          |  *     END ELSE
0564 O.R = 'O'                                                       |  *T24135 ^
0565 END CASE                                                        |  *       BEGIN CASE
0566 CALL EDIT.SUB                                                   |  *          CASE TVO.PO.U.COST<1,LN> # ""
0567 IF VALUE = "END" THEN GOTO 1010                                 |  *             DEFAULT = OCONV(TVO.PO.U.COST<1,LN>, "MD4")
0568                                                                 >  *             O.R = 'O'
0569                                                                 >  *          CASE TEMP.VALUES<7> # ""

0570                                                                 >  *             DEFAULT = OCONV(TEMP.VALUES<7>, "MD4")
0571                                                                 >  *             O.R = 'O'
0572                                                                 >  *       END CASE
0573                                                                 >  *       CALL EDIT.SUB
0574                                                                 >  *       IF VALUE = "END" THEN GOTO 1010
0575 
0576 IF VALUE # TVO.PO.U.COST<1,LN> OR TEMP.VALUES<1> # TVO.PO.NOS<  |  *       IF VALUE # TVO.PO.U.COST<1,LN> OR TEMP.VALUES<1> # T

0577 TVO.ENT.FLG<1,LN> = "E"                                         |  *          TVO.ENT.FLG<1,LN> = "E"
0578 END                                                             |  *       END
0579 IF TEMP.CNV<2> = "MD4" THEN                                     |  *       IF TEMP.CNV<2> = "MD4" THEN
0580 TVO.PO.U.COST<1,LN> = INT(VALUE/TEMP.MT1<2>)                    |  *          TVO.PO.U.COST<1,LN> = INT(VALUE/TEMP.MT1<2>)
0581 END ELSE                                                        |  *       END ELSE
0582 TVO.PO.U.COST<1,LN> = VALUE                                     |  *          TVO.PO.U.COST<1,LN> = VALUE
0583 END                                                             |  *       END

0584                                                                 >  *T24135 v
0585                                                                 >  *     END
0586                                                                 >  *T24135 ^
0587 * ADDED DLG 06/03/92                                               * ADDED DLG 06/03/92
0588 TEMP.VALUES<7> = TVO.PO.U.COST<1,LN>                               TEMP.VALUES<7> = TVO.PO.U.COST<1,LN>
0589 TVO.PO.NOS<1,LN> = TEMP.VALUES<1>                                  TVO.PO.NOS<1,LN> = TEMP.VALUES<1>
0590 TVO.PO.PROD<1,LN> = TEMP.VALUES<2>                                 TVO.PO.PROD<1,LN> = TEMP.VALUES<2>

0645 END                                                                END
0646 END ELSE                                                           END ELSE
0647 PTR = FND + 1                                                      PTR = FND + 1
0648 END                                                                END
0649 END ELSE                                                           END ELSE
0650 TVO.DIST.AMT = 0 ; *T24839                                      <  
0651 PTR = 0                                                            PTR = 0
0652 END                                                                END
0653 WHILE PTR DO REPEAT                                                WHILE PTR DO REPEAT
0654 END                                                                END

0675 AP.ACCT=CAMISC.AP.ACCT                                             AP.ACCT=CAMISC.AP.ACCT
0676 END                                                                END
0677 GOSUB 75000      ;* T23776                                         GOSUB 75000      ;* T23776
0678 * T23776 v Moved here from above                                   * T23776 v Moved here from above
0679 * T22934 v Pull in Div/dept/cctr from the Misc PO when PO num      * T22934 v Pull in Div/dept/cctr from the Misc PO when PO nu
0680 *T28042                                                         <  
0681 IF OLD.AP.DV = "" THEN                                          <  
0682 OLD.AP.DV = MPO.MISC.DIV<1,MPO.OFFSET>                             OLD.AP.DV = MPO.MISC.DIV<1,MPO.OFFSET>
0683 OLD.AP.DP = MPO.MISC.DEPT<1,MPO.OFFSET>                            OLD.AP.DP = MPO.MISC.DEPT<1,MPO.OFFSET>
0684 OLD.AP.CC = MPO.MISC.CCTR<1,MPO.OFFSET>                            OLD.AP.CC = MPO.MISC.CCTR<1,MPO.OFFSET>

0685 END                                                             <  
0686 *T28042                                                         <  
0687 * T22934 ^                                                         * T22934 ^
0688 * T23776 ^                                                         * T23776 ^
0689 LOCATE TEMP.VALUES<2> IN MPO.PROD.NUM<1>,1 SETTING POSIT THEN      LOCATE TEMP.VALUES<2> IN MPO.PROD.NUM<1>,1 SETTING POSIT THE
0690 OLD.DV = MPO.MISC.DIV<1,POSIT>                                     OLD.DV = MPO.MISC.DIV<1,POSIT>
0691 OLD.DP = MPO.MISC.DEPT<1,POSIT>                                    OLD.DP = MPO.MISC.DEPT<1,POSIT>

0692 OLD.CC = MPO.MISC.CCTR<1,POSIT>                                    OLD.CC = MPO.MISC.CCTR<1,POSIT>
0693 END ELSE                                                           END ELSE
0694 *T26512 OLD.DV = GEN.DIV                                        |  OLD.DV = GEN.DIV
0695 OLD.DV = TVO.DIV.OWNER                                          <  
0696 OLD.DP = GEN.DEPT                                                  OLD.DP = GEN.DEPT
0697 OLD.CC = GEN.CCTR                                                  OLD.CC = GEN.CCTR
0698 END                                                                END
0699 IF OLD.ACCT # "" THEN                                              IF OLD.ACCT # "" THEN
0700 OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))           OLD.ACCT = OLD.ACCT : STR("0",IN.ACCT.LEN-LEN(OLD.ACCT))

0916 END ELSE                                                           END ELSE
0917 SCV.REC(20)<ECD.SCRN.NO> = "MISCELLANEOUS"                         SCV.REC(20)<ECD.SCRN.NO> = "MISCELLANEOUS"
0918 END                                                                END
0919 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0920 PAY.VALUES<2> = ""                                                 PAY.VALUES<2> = ""
0921 CALL PO.ACT.INQ(FNDP,PAY.VALUES)                                |  CALL PO.ACT.INQ(FNDP,PAY.VALUES,V.CODE)
0922 *T24839 v                                                       <  
0923 *T25039 v ; Commented out the following codes from task #24839  <  
0924 *           re-initializing the variable to null was causing t  <  
0925 *           and credit to not offset each other.                <  

0926 *  TVO.AP.ACCT = '' ; TVO.AP.DIV = '' ; TVO.AP.DEPT = ''        <  
0927 *  TVO.AP.CCTR = '' ; TVO.AP.AMT = ''                           <  
0928 *T25039 ^                                                       <  
0929 *T24839 ^                                                       <  
0930 ECD.SCRN.NO = 10                                                   ECD.SCRN.NO = 10
0931 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0932 OLD.START.LINE = 0                                                 OLD.START.LINE = 0

1169 IF LNO = "" OR LNO = "END" THEN LNO = 0                            IF LNO = "" OR LNO = "END" THEN LNO = 0
1170 RETURN                                                             RETURN
1171 *                                                                  *
1172 * T23776 v                                                         * T23776 v
1173 75000 *                                                            75000 *
1174 IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,MPO.OFFSET>          <  
1175 IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,MPO.OFFSET>          <  
1176 IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,MPO.OFFSET>             <  
1177 MATREAD COA.REC FROM COA, CONO:AP.ACCT THEN                        MATREAD COA.REC FROM COA, CONO:AP.ACCT THEN
1178 IF COA.LEVEL < 3 THEN                                              IF COA.LEVEL < 3 THEN

1194 END                                                                END
1195 IF COA.LEVEL < 1 THEN                                              IF COA.LEVEL < 1 THEN
1196 MPO.MISC.DIV<1,MPO.OFFSET> = GEN.DIV                               MPO.MISC.DIV<1,MPO.OFFSET> = GEN.DIV
1197 END                                                                END
1198 END                                                                END
1199 *C33616  IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,MPO.OFFSET  |  IF AP.CCTR='' THEN AP.CCTR=MPO.MISC.CCTR<1,MPO.OFFSET>
1200 *C33616  IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,MPO.OFFSET  |  IF AP.DEPT='' THEN AP.DEPT=MPO.MISC.DEPT<1,MPO.OFFSET>
1201 *C33616  IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,MPO.OFFSET>    |  IF AP.DIV='' THEN AP.DIV=MPO.MISC.DIV<1,MPO.OFFSET>
1202 RETURN                                                             RETURN
1203 * T23776 ^                                                         * T23776 ^

1213 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                          ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
1214 99999*                                                             99999*
1215 ECD.ACTION = 99 ; CALL SCRN.EDIT                                   ECD.ACTION = 99 ; CALL SCRN.EDIT
1216 RETURN                                                             RETURN
1217 END                                                                END
1218                                                                 >  
1219                                                                 >  
1220 


APSBP/VOUCHER.NP.PO                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.NP.PO
Printed for thompson at 06/28/2006 04:09:08PM

0013 * BY          - jamesf                                             * BY          - jamesf
0014 * DATE        - 12/30/99                                           * DATE        - 12/30/99
0015 * DESCRIPTION                                                      * DESCRIPTION
0016 *  This Program is used to enter all non-primac PO's and produ     *  This Program is used to enter all non-primac PO's and pro
0017 *T24137 lanny 04/24/2000 * New screen                              *T24137 lanny 04/24/2000 * New screen
0018 *T25824 hlehr 07/31/2001* upgrage to rev12                      <  
0019 *T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,  <  
0020 *T26556 cmykleb 06/11/2002 * Correct problem with new mod.      <  
0021 *C40187 ajibaly 06/18/2002 * Correct display of of an extra li     *C40187 ajibaly 06/18/2002 * Correct display of of an extra 
0022 *T28171 lross 07/06/2004 * Dept for acct'ng use only 1st 2 dig  <  

0023 *T28209 lross 08/03/2004 * Wait until line-item complete to re  <  
0024 **************************************************************     ************************************************************
0025 *                                                                  *
0026 **** INSERT FILE EQUATES                                           **** INSERT FILE EQUATES
0027 *                                                                  *
0028 *COPY>APS.CPYLIB>TEMP.VOUCHERS                                     *COPY>APS.CPYLIB>TEMP.VOUCHERS
0029 *COPY>APS.CPYLIB>VEND.STATS                                        *COPY>APS.CPYLIB>VEND.STATS

0041 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0042 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0043 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0044 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0045 *COPY>CPYLIB>GEN.XREF.SUB                                          *COPY>CPYLIB>GEN.XREF.SUB
0046                                                                 >  *** INT
0047 *                                                                  *
0048 **** INITIALIZATION                                             <  
0049 *                                                               <  
0050 OPEN '','XREF.DATA' TO XREF.DATA ELSE                              OPEN '','XREF.DATA' TO XREF.DATA ELSE

0096 GOSUB 1000                                                         GOSUB 1000
0097 WHILE LINES > OLD.LINES DO                                         WHILE LINES > OLD.LINES DO
0098 REPEAT                                                             REPEAT
0099 LN = LINES                                                         LN = LINES
0100 END ELSE                                                           END ELSE
0101 LINES = DCOUNT(TVO.PO.NOS, VM)                                  |  LINES = COUNT(TVO.PO.NOS, VM) + (TVO.PO.NOS # "")
0102 LN = 1                                                             LN = 1
0103 GOSUB 3000    ;* Accumulate total vouchered                        GOSUB 3000    ;* Accumulate total vouchered
0104 END                                                                END
0105 GOSUB 10000                                                        GOSUB 10000

0119 MORE = 0                                                           MORE = 0
0120 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0121 LN = START.LINE + PAGE.SIZE                                        LN = START.LINE + PAGE.SIZE
0122 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0123 GOSUB 10000                                                        GOSUB 10000
0124 * T25978 v                                                      <  
0125 CASE OPTION = 'SR'                                              <  
0126 LN -= PAGE.SIZE                                                 <  
0127 IF LN < 1 THEN LN = 1                                           <  
0128 GOSUB 10000                                                     <  

0129 CASE OPTION = 'ST'                                              <  
0130 LN = 1                                                          <  
0131 GOSUB 10000                                                     <  
0132 CASE OPTION = 'SB'                                              <  
0133 LN = LINES                                                      <  
0134 GOSUB 10000                                                     <  
0135 * T25978 ^                                                      <  

0156 GOSUB 80000                                                        GOSUB 80000
0157 TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>                     TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>
0158 ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH               ECD.NUM = 13; SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
0159 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0160 GOSUB 5000                                                         GOSUB 5000
0161 LINES = DCOUNT(TVO.PO.NOS,VM)                                   |  LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
0162 IF LN > 1 AND LN > LINES THEN LN = LN - 1                          IF LN > 1 AND LN > LINES THEN LN = LN - 1
0163 IF LN < 1 THEN LN = 1                                              IF LN < 1 THEN LN = 1
0164 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0165 END                                                                END

0198 **** ENTER JOB NUMBER                                              **** ENTER JOB NUMBER
0199 *                                                                  *
0200 1020*                                                              1020*
0201 CURR.VOUCH=TVO.PO.VOUCH<1,LN>                                      CURR.VOUCH=TVO.PO.VOUCH<1,LN>
0202 *  X = 6; Y = SLN; MAXL = 8; TYP = 1; O.R = "R"; VALDAT = "";      *  X = 6; Y = SLN; MAXL = 8; TYP = 1; O.R = "R"; VALDAT = ""
0203 *T28209 v The following code relating to VPS.REC is irrelevant  |  IF OPTION = 'A' THEN
0204 *         NXTPO number is bumped for every line-item entered,   |  READU NP.PONO FROM CONTROL, CONO:"NEXT.NP.PO.NUM" ELSE
0205 *         will be a unique PO Code therefore it will never rea  |  NP.PONO = 1000
0206 *         VPS record. This code was probably included from the  |  END
0207 *         VOUCHER.OS.PO from which this program was cloned.     |  NXTPO = NP.PONO + 1

0208 *         Move the READ for NXTPO to just prior to the WRITE.   |  IF NXTPO > 999999 THEN NXTPO = 1000
0209 * IF OPTION = 'A' THEN                                          |  ;* C40187 v
0210 *   READU NP.PONO FROM CONTROL, CONO:"NEXT.NP.PO.NUM" ELSE      |  TVO.PO.NOS<1,LN> = "NP":NXTPO
0211 *     NP.PONO = 1000                                            |  ;* VPS.KEY=VSTAT.KEY:"!NP":NXTPO
0212 *   END                                                         |  END
0213 *   NXTPO = NP.PONO + 1                                         |  VPS.KEY=VSTAT.KEY:"!":TVO.PO.NOS<1,LN>
0214 *   IF NXTPO > 999999 THEN NXTPO = 1000                         |  ;* C40187 ^

0215 *   TVO.PO.NOS<1,LN> = "NP":NXTPO ;* C40187                     |  MATREAD VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC
0216 * END                                                           <  
0217 * VPS.KEY=VSTAT.KEY:"!":TVO.PO.NOS<1,LN> ;* C40187              <  
0218 * MATREAD VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC  <  
0219 MAT VPS.REC = ''                                                <  
0220 *T28209 ^                                                       <  
0221 LIST.O.JOBS='' ; OTH.DEFAULT=''                                    LIST.O.JOBS='' ; OTH.DEFAULT=''

0274 END                                                                END
0275 TEMP.VALUES<2> = VALUE                                             TEMP.VALUES<2> = VALUE
0276 TEMP.VALUES<3> = JOB.DESC<1,1>                                     TEMP.VALUES<3> = JOB.DESC<1,1>
0277 P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; P_     P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; 
0278 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0279 *T26556  TVO.JOB = VALUE                                        <  
0280 *                                                                  *
0281 **** ENTER OSP CATEGORY                                            **** ENTER OSP CATEGORY
0282 *                                                                  *
0283 1030*                                                              1030*

0285 BEGIN CASE                                                         BEGIN CASE
0286 CASE TVO.PO.WHSE<1,LN> # ""                                        CASE TVO.PO.WHSE<1,LN> # ""
0287 DEFAULT = TVO.PO.WHSE<1,LN>; O.R = 'O'                             DEFAULT = TVO.PO.WHSE<1,LN>; O.R = 'O'
0288 CASE TEMP.VALUES<4> # ""                                           CASE TEMP.VALUES<4> # ""
0289 DEFAULT = TEMP.VALUES<4>; O.R = 'O'                                DEFAULT = TEMP.VALUES<4>; O.R = 'O'
0290 CASE VPS.WHSE<1,FNDPD> # ''                                     |  CASE FNDPD > 0 AND VPS.WHSE<1,FNDPD> # ''
0291 DEFAULT = VPS.WHSE<1,FNDPD> ; O.R = 'O'                            DEFAULT = VPS.WHSE<1,FNDPD> ; O.R = 'O'
0292 END CASE                                                           END CASE
0293 IF DEFAULT # '' THEN                                               IF DEFAULT # '' THEN
0294 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DEFAULT ELSE              MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DEFAULT ELSE

0314 CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)               CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0315 ECD.ACTION = 2;CALL SCRN.EDIT                                      ECD.ACTION = 2;CALL SCRN.EDIT
0316 ECD.ACTION = 3;CALL SCRN.EDIT                                      ECD.ACTION = 3;CALL SCRN.EDIT
0317 SAVE.LN = LN                                                       SAVE.LN = LN
0318 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0319 IF OPTION = 'A' THEN LINES += 1 ;* C40187                       |  ;*
0320                                                                 >  ;* C40187 Only increment lines if you're in ADD mode
0321                                                                 >  ;*
0322                                                                 >  IF OPTION = "A" THEN LINES +=1
0323 GOSUB 10000                                                        GOSUB 10000

0324 IF OPTION = 'A' THEN LINES -= 1 ;* C40187                       |  IF OPTION = "A" THEN LINES -=1
0325 LN = SAVE.LN                                                       LN = SAVE.LN
0326 IF GXR.ID = '' THEN                                                IF GXR.ID = '' THEN
0327 GOTO 1030                                                          GOTO 1030
0328 END ELSE                                                           END ELSE 
0329 VALUE = GXR.ID                                                     VALUE = GXR.ID
0330 P_X = 18; P_Y = SLN; P_VALUE = VALUE; P_OPT = ''                   P_X = 18; P_Y = SLN; P_VALUE = VALUE; P_OPT = ''

0352 TEMP.VALUES<4> = VALUE                                             TEMP.VALUES<4> = VALUE
0353 *                                                                  *
0354 *** Enter Department                                               *** Enter Department
0355 *                                                                  *
0356 1040*                                                              1040*
0357 *T28171  X = 29; Y = SLN; MAXL = 2; O.R = 'R'; VALDATE = ''; T  |  X = 29; Y = SLN; MAXL = 2; O.R = 'R'; VALDATE = ''; TYP=3; M
0358 X = 28; Y = SLN; MAXL = 5; O.R = 'R'; VALDATE = ''; TYP=7; MIN  <  
0359 PATRN='2N':VM:'2N-2N'                                           <  
0360 HMSG = "Enter Department"                                          HMSG = "Enter Department"
0361 BEGIN CASE                                                         BEGIN CASE

0399 ERRMSG = "Cost Center is not on file..."                           ERRMSG = "Cost Center is not on file..."
0400 GOSUB 91000; GOTO 1050                                             GOSUB 91000; GOTO 1050
0401 END                                                                END
0402 *                                                                  *
0403 TEMP.VALUES<8> = VALUE                                             TEMP.VALUES<8> = VALUE
0404 *T28171 v                                                       <  
0405 IF TEMP.VALUES<7> # CCTR.DEPT THEN                              <  
0406 TEMP.VALUES<7> = CCTR.DEPT                                      <  
0407 P_X=28; P_Y=SLN; P_VALUE=CCTR.DEPT; P_OPT=""; CALL VSI_PLINE(P  <  
0408 END                                                             <  

0409 *T28171 ^                                                       <  
0410 *                                                                  *
0411 *** Enter Operation                                                *** Enter Operation
0412 *                                                                  *
0413 1060*                                                              1060*
0414 X = 40; Y = SLN; MAXL = 4; O.R = 'R'; VALDATE = ''                 X = 40; Y = SLN; MAXL = 4; O.R = 'R'; VALDATE = ''
0415 HMSG = "Enter Operation"                                           HMSG = "Enter Operation"

0523 IF TEMP.ACCT.ACCRUE THEN                                           IF TEMP.ACCT.ACCRUE THEN
0524 VOUCHER.ACCRUE.FLAG<1,FND>=1                                       VOUCHER.ACCRUE.FLAG<1,FND>=1
0525 END                                                                END
0526 TVO.DIST.AMT<1,FND> = 0                                            TVO.DIST.AMT<1,FND> = 0
0527 TVO.ASSET.ID<1,FND> = ""                                           TVO.ASSET.ID<1,FND> = ""
0528                                                                 >  **** NEED TO GET THESE v
0529                                                                 >  *       TVO.DIV<1,FND> = GEN.DIV
0530 TVO.DIV<1,FND> = JOB.DIV                                           TVO.DIV<1,FND> = JOB.DIV
0531 *T28171 v TVO.DEPT<1,FND> = TEMP.VALUES<7>                      |  *       TVO.DEPT<1,FND> = GEN.DEPT
0532 TVO.DEPT<1,FND> = TEMP.VALUES<7>[1,2]                           |  TVO.DEPT<1,FND> = TEMP.VALUES<7>

0533                                                                 >  *       TVO.CCTR<1,FND> = GEN.CCTR
0534 TVO.CCTR<1,FND> = TEMP.VALUES<8>                                   TVO.CCTR<1,FND> = TEMP.VALUES<8>
0535                                                                 >  *       TVO.PO.OPER<1,FND> = "" ;* T23499
0536 TVO.ACCT.FLG<1,FND> = ''                                           TVO.ACCT.FLG<1,FND> = ''
0537 PTR = 0                                                            PTR = 0
0538 END                                                                END
0539 WHILE PTR DO REPEAT                                                WHILE PTR DO REPEAT

0540 TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,LN>     TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,L
0541 TVO.CTR = DCOUNT(TVO.ACCT,VM)                                   |  TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
0542 TOTAL.VOUCH = TOTAL.VOUCH - CURR.VOUCH + TVO.PO.VOUCH<1,LN>        TOTAL.VOUCH = TOTAL.VOUCH - CURR.VOUCH + TVO.PO.VOUCH<1,LN>
0543 SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH                             SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
0544 ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT                       ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
0545 IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE ADJVAL = 100      IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE ADJVAL = 10
0546 IF TVO.PO.QTY<1,LN>+0 # 0 AND TVO.PO.VOUCH<1,LN>+0 # 0 THEN        IF TVO.PO.QTY<1,LN>+0 # 0 AND TVO.PO.VOUCH<1,LN>+0 # 0 THEN
0547 TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.PO     TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.

0547 TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.PO     TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.
0548 END ELSE                                                           END ELSE
0549 TVO.PO.U.COST<1,LN> = TVO.PO.VOUCH<1,LN> * 100                     TVO.PO.U.COST<1,LN> = TVO.PO.VOUCH<1,LN> * 100
0550 END                                                                END
0551 ;* C40187 TVO.PO.NOS<1,LN> = "NP":NXTPO                            ;* C40187 TVO.PO.NOS<1,LN> = "NP":NXTPO
0552 *T28209v  LINES = DCOUNT(TVO.PO.NOS,VM)                         |  LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
0553 LINES = DCOUNT(TVO.PO.PROD,VM)                                  <  
0554 *                                                                  *
0555 * Calculate AP account Distribution Amounts                        * Calculate AP account Distribution Amounts
0556 *                                                                  *

0607 TVO.AP.CCTR<1,FND>=OPO.DVDPCC<1,3,CURR.OFFSET>                     TVO.AP.CCTR<1,FND>=OPO.DVDPCC<1,3,CURR.OFFSET>
0608 END ELSE                                                           END ELSE
0609 *           TVO.AP.DIV<1,FND> = GEN.DIV                            *           TVO.AP.DIV<1,FND> = GEN.DIV
0610 TVO.AP.DIV<1,FND> = JOB.DIV                                        TVO.AP.DIV<1,FND> = JOB.DIV
0611 *           TVO.AP.DEPT<1,FND> = GEN.DEPT                          *           TVO.AP.DEPT<1,FND> = GEN.DEPT
0612 *T28171 v  TVO.AP.DEPT<1,FND> = TEMP.VALUES<7>                  |  TVO.AP.DEPT<1,FND> = TEMP.VALUES<7>
0613 TVO.AP.DEPT<1,FND> = TEMP.VALUES<7>[1,2]                        <  
0614 *           TVO.AP.CCTR<1,FND> = GEN.CCTR                          *           TVO.AP.CCTR<1,FND> = GEN.CCTR
0615 TVO.AP.CCTR<1,FND> = TEMP.VALUES<8>                                TVO.AP.CCTR<1,FND> = TEMP.VALUES<8>
0616 END                                                                END

0637 OLD.START.LINE=0                                                   OLD.START.LINE=0
0638 GOSUB 10000                                                        GOSUB 10000
0639 END CASE                                                           END CASE
0640 END                                                                END
0641 IF OPTION = 'A' AND VALUE # 'END' THEN                             IF OPTION = 'A' AND VALUE # 'END' THEN
0642 *T28209 v                                                       <  
0643 READU NP.PONO FROM CONTROL, CONO:"NEXT.NP.PO.NUM" ELSE          <  
0644 NP.PONO = 1000                                                  <  
0645 END                                                             <  
0646 NXTPO = NP.PONO + 1                                             <  

0647 IF NXTPO > 999999 THEN NXTPO = 1000                             <  
0648 TVO.PO.NOS<1,LN> = "NP":NXTPO ;* C40187                         <  
0649 *T28209 ^                                                       <  
0650 WRITEV NXTPO ON CONTROL, CONO:"NEXT.NP.PO.NUM",1                   WRITEV NXTPO ON CONTROL, CONO:"NEXT.NP.PO.NUM",1
0651 END                                                                END
0652 RETURN                                                             RETURN
0653 *                                                                  *

0722 TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)                        TVO.ASSET.ID = DELETE(TVO.ASSET.ID,1,FND,0)
0723 TVO.DIV = DELETE(TVO.DIV,1,FND,0)                                  TVO.DIV = DELETE(TVO.DIV,1,FND,0)
0724 TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)                                TVO.DEPT = DELETE(TVO.DEPT,1,FND,0)
0725 TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)                                TVO.CCTR = DELETE(TVO.CCTR,1,FND,0)
0726 TVO.ACCT.FLG = DELETE(TVO.ACCT.FLAG,1,FND,0)                       TVO.ACCT.FLG = DELETE(TVO.ACCT.FLAG,1,FND,0)
0727 TVO.CTR = DCOUNT(TVO.ACCT,VM)                                   |  TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
0728 VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) ;* T20     VOUCHER.ACCRUE.FLAG=DELETE(VOUCHER.ACCRUE.FLAG,1,FND,0) ;* T
0729 END                                                                END
0730 IF REV.AMT # 0 THEN                                                IF REV.AMT # 0 THEN
0731 PTR = FND + 1                                                      PTR = FND + 1

0828 P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.PROD<1,N     P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.PROD<1
0829 END ELSE                                                           END ELSE
0830 P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TEMP.VALUES<2>      P_X  := AM:6 ; P_Y := AM:S.SLN ; P_VALUE := AM:TEMP.VALUES<2
0831 END                                                                END
0832 P_X  := AM:18 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.WHSE<1,     P_X  := AM:18 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.WHSE<
0833 *T28171 P_X  := AM:29 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO  |  P_X  := AM:29 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.DEPT<
0834 P_X  := AM:28 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.DEPT<1,  <  
0835 P_X  := AM:35 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.CCTR<1,     P_X  := AM:35 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.CCTR<
0836 P_X  := AM:40 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.OPER<1,     P_X  := AM:40 ; P_Y := AM:S.SLN ; P_VALUE := AM:TVO.PO.OPER<
0837 P_X  := AM:57 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO.V     P_X  := AM:57 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO


APSBP/VOUCHER.OS.PO                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.OS.PO
Printed for thompson at 06/28/2006 04:09:09PM

0024 *                      po records.                                 *                      po records.
0025 *T20924 lanny 08/29/1996 * If voucher amt changed on this scre     *T20924 lanny 08/29/1996 * If voucher amt changed on this sc
0026 *                          OS receipt made then carry the modi     *                          OS receipt made then carry the mo
0027 *                          to JCS thru TVO.JOB.AMT field.          *                          to JCS thru TVO.JOB.AMT field.
0028 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0029 *T23319 alex 04/11/2000 * Fix calculation of UOM Type "C"; it   |  *T23499 rick 08/26/1999 * Modify pgm to work with new format
0030 *                         defaulting as an "EA" Type.           |  *                         OutsidePO with seq numbers
0031 *T25755 cm 04/19/2001 * Modify pgm to work with the new format  |  *T24135 jamesf 11/11/1999 * Adding code to lock the VEND.PO.
0032 *                       OUTSIDE.PO with seq #.                  |  *                           records to be released in the ca
0033 *T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,  |  *                           routine. Also disallowing the us

0034 *T28143 lross 05/25/2004 * Errors in OUTSIDE.PO handling.       |  *                           ability to change the unit price
0035                                                                 >  *                           Checking the quantity entered ag
0036                                                                 >  *                           the quantity received minus the 
0037                                                                 >  *                           vouchered minus the qty vouchere
0038                                                                 >  *                           not posted. The qty entered cann
0039                                                                 >  *                           larger that the sum of the three
0040 **************************************************************     ************************************************************

0120 MORE = 0                                                           MORE = 0
0121 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0122 LN = START.LINE + PAGE.SIZE                                        LN = START.LINE + PAGE.SIZE
0123 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0124 GOSUB 10000                                                        GOSUB 10000
0125 * T25978 v                                                      <  
0126 CASE OPTION = 'SR'                                              <  
0127 LN -= PAGE.SIZE                                                 <  
0128 IF LN < 1 THEN LN = 1                                           <  
0129 GOSUB 10000                                                     <  

0130 CASE OPTION = 'ST'                                              <  
0131 LN = 1                                                          <  
0132 GOSUB 10000                                                     <  
0133 CASE OPTION = 'SB'                                              <  
0134 LN = LINES                                                      <  
0135 GOSUB 10000                                                     <  
0136 * T25978 ^                                                      <  

0231 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>                            SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>
0232 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0233 SCV.REC(14)<ECD.SCRN.NO> = "OUTSIDE"                               SCV.REC(14)<ECD.SCRN.NO> = "OUTSIDE"
0234 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0235 PAY.VALUES = ""                                                    PAY.VALUES = ""
0236 CALL VEND.PO.INQ(PAY.VALUES)                                    |  CALL VEND.PO.INQ(PAY.VALUES,V.CODE)
0237 ECD.SCRN.NO = 9                                                    ECD.SCRN.NO = 9
0238 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0239 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0240 IF PAY.VALUES<1> = "" THEN                                         IF PAY.VALUES<1> = "" THEN

0281 QUESTION = "This PO is not setup. Ok to use? (Y/N)"                QUESTION = "This PO is not setup. Ok to use? (Y/N)"
0282 GOSUB 11000                                                        GOSUB 11000
0283 IF REPLY = "N" THEN GOTO 1000                                      IF REPLY = "N" THEN GOTO 1000
0284 CHECK.FLG = ""                                                     CHECK.FLG = ""
0285 END                                                                END
0286 MATREAD VPS.REC FROM VEND.PO.STATS , VSTAT.KEY :"!": VALUE ELS  |  *T24135 v
0287                                                                 >  VEND.PO.STATS.KEY = VSTAT.KEY :"!": VALUE
0288                                                                 >  MATREADU VPS.REC FROM VEND.PO.STATS, VEND.PO.STATS.KEY ELSE
0289                                                                 >  *  MATREADU VPS.REC FROM VEND.PO.STATS , VSTAT.KEY :"!": VAL
0290                                                                 >  *T24135 ^

0300 MATREAD OPO.REC FROM OUTSIDE.PO,CONO:VALUE ELSE MAT OPO.REC=''     MATREAD OPO.REC FROM OUTSIDE.PO,CONO:VALUE ELSE MAT OPO.REC=
0301 PCNT = COUNT(VPS.PROD,VM) + (VPS.PROD # "")                        PCNT = COUNT(VPS.PROD,VM) + (VPS.PROD # "")
0302 IF PCNT = 1 THEN                                                   IF PCNT = 1 THEN
0303 TEMP.VALUES<2> = VPS.PROD<1,1>                                     TEMP.VALUES<2> = VPS.PROD<1,1>
0304 TEMP.VALUES<3> = VPS.PROD.DESC<1,1>                                TEMP.VALUES<3> = VPS.PROD.DESC<1,1>
0305 *T25755 v                                                       <  
0306 *   TEMP.VALUES<4> = VPS.WHSE<1,1>                              <  
0307 *   GOSUB 2500                                                  <  
0308 *   MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : VPS.WHSE<1,1> E  <  
0309 TEMP.VALUES<4> = FIELD(VPS.WHSE<1,1>,"@",1)                        TEMP.VALUES<4> = FIELD(VPS.WHSE<1,1>,"@",1)

0310 GOSUB 2500                                                         GOSUB 2500
0311 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,1>     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : FIELD(VPS.WHSE<1,
0312 *T25755 ^                                                       <  
0313 ERRMSG = "Invalid Category !"                                      ERRMSG = "Invalid Category !"
0314 GOSUB 91000                                                        GOSUB 91000
0315 GOTO 1000                                                          GOTO 1000
0316 END                                                                END
0317 IF CAOS.ACCRU.LIAB = "" OR CAOS.AP.ACCT = "" THEN  ;* Task 179     IF CAOS.ACCRU.LIAB = "" OR CAOS.AP.ACCT = "" THEN  ;* Task 1
0318 ERRMSG = "Invalid Account on Category !"                           ERRMSG = "Invalid Account on Category !"

0346 CASE TVO.PO.PROD<1,LN> # ""                                        CASE TVO.PO.PROD<1,LN> # ""
0347 DEFAULT = TVO.PO.PROD<1,LN>; O.R = "O"                             DEFAULT = TVO.PO.PROD<1,LN>; O.R = "O"
0348 CASE TEMP.VALUES<2> # ""                                           CASE TEMP.VALUES<2> # ""
0349 DEFAULT = TEMP.VALUES<2>; O.R = "O"                                DEFAULT = TEMP.VALUES<2>; O.R = "O"
0350 CASE OTH.DEFAULT # ""                                              CASE OTH.DEFAULT # "" 
0351 DEFAULT = OTH.DEFAULT ; O.R='O'                                 |  DEFAULT = OTH.DEFAULT; O.R='O'
0352 END CASE                                                           END CASE
0353 IF DEFAULT = "" AND LIST.O.JOBS # "" THEN                          IF DEFAULT = "" AND LIST.O.JOBS # "" THEN
0354 HMSG=HMSG:" (":LIST.O.JOBS:")"                                     HMSG=HMSG:" (":LIST.O.JOBS:")"
0355 IF LEN(HMSG) > 70 THEN                                             IF LEN(HMSG) > 70 THEN

0367 SCV.REC(3)<ECD.SCRN.NO> = TEMP.VALUES<1>                           SCV.REC(3)<ECD.SCRN.NO> = TEMP.VALUES<1>
0368 SCV.REC(19)<ECD.SCRN.NO> = TVO.PO.TYPE                             SCV.REC(19)<ECD.SCRN.NO> = TVO.PO.TYPE
0369 SCV.REC(20)<ECD.SCRN.NO> = "OUTSIDE"                               SCV.REC(20)<ECD.SCRN.NO> = "OUTSIDE"
0370 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0371 PAY.VALUES<2> = ""                                                 PAY.VALUES<2> = ""
0372 CALL PO.ACT.INQ(FNDP,PAY.VALUES)                                |  CALL PO.ACT.INQ(FNDP,PAY.VALUES,V.CODE)
0373 ECD.SCRN.NO = 9                                                    ECD.SCRN.NO = 9
0374 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0375 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0376 IF PAY.VALUES<2> = "" THEN                                         IF PAY.VALUES<2> = "" THEN

0415 NUM.PROD=DCOUNT(VPS.PROD,VM)                                       NUM.PROD=DCOUNT(VPS.PROD,VM)
0416 PROD.OFFSET=''                                                     PROD.OFFSET=''
0417 FOR KK = 1 TO NUM.PROD                                             FOR KK = 1 TO NUM.PROD
0418 IF VPS.PROD<1,KK> = TEMP.VALUES<2> THEN                            IF VPS.PROD<1,KK> = TEMP.VALUES<2> THEN
0419 NUM.THIS.PROD = NUM.THIS.PROD+1                                    NUM.THIS.PROD = NUM.THIS.PROD+1
0420 *T25755 v                                                       <  
0421 *       OTH.DEFAULT<1,NUM.THIS.PROD>=VPS.WHSE<1,KK>             <  
0422 OTH.DEFAULT<1,NUM.THIS.PROD>=FIELD(VPS.WHSE<1,KK>,"@",1)           OTH.DEFAULT<1,NUM.THIS.PROD>=FIELD(VPS.WHSE<1,KK>,"@",1)
0423 *T25755 ^                                                       <  
0424 PROD.OFFSET<1,NUM.THIS.PROD>=KK                                    PROD.OFFSET<1,NUM.THIS.PROD>=KK

0426 NEXT KK                                                            NEXT KK
0427 IF NUM.THIS.PROD>1 THEN                                            IF NUM.THIS.PROD>1 THEN
0428 FOR KK=1 TO NUM.THIS.PROD                                          FOR KK=1 TO NUM.THIS.PROD
0429 OFF.PTR=PROD.OFFSET<1,KK>                                          OFF.PTR=PROD.OFFSET<1,KK>
0430 IF KK=1 THEN                                                       IF KK=1 THEN
0431 *T28143   LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>                    |  *C43504    LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>
0432 LIST.O.JOBS=OTH.DEFAULT<1,KK>                                      LIST.O.JOBS=OTH.DEFAULT<1,KK>
0433 END ELSE                                                           END ELSE
0434 *T28143   LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.PTR>   |  *C43504    LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.PT
0435 LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,KK>                     LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,KK>

0465 GOTO 1030                                                          GOTO 1030
0466 END                                                                END
0467 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TEMP.VALUES<1> ELSE MAT      MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TEMP.VALUES<1> ELSE MA
0468 CURR.PROD = TEMP.VALUES<2>                                         CURR.PROD = TEMP.VALUES<2>
0469 CURR.CAT  = VALUE                                                  CURR.CAT  = VALUE
0470 CURR.SEQ = TVO.PO.SEQ<1,LN> ;*T28143                            |  CURR.SEQ = TVO.PO.SEQ<1,LN>
0471 CURR.OFFSET=0                                                      CURR.OFFSET=0
0472 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
0473 *T28143 IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN             |  *    IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN
0474 IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CURR     IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CU

0477 END ELSE                                                           END ELSE
0478 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
0479 DO.CONTINUE=1                                                      DO.CONTINUE=1
0480 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
0481 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
0482 *T28143   IF OPO.PROD.LINE<1,III> = CURR.CAT THEN               |  *          IF OPO.PROD.LINE<1,III> = CURR.CAT THEN
0483 IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"@"     IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"
0484 CURR.OFFSET=III                                                    CURR.OFFSET=III
0485 DO.CONTINUE=0                                                      DO.CONTINUE=0
0486 END                                                                END

0500 AP.ACCT = CAOS.AP.ACCT                                             AP.ACCT = CAOS.AP.ACCT
0501 END                                                                END
0502 OLD.DV=OPO.DVDPCC<1,1,CURR.OFFSET>                                 OLD.DV=OPO.DVDPCC<1,1,CURR.OFFSET>
0503 OLD.DP=OPO.DVDPCC<1,2,CURR.OFFSET>                                 OLD.DP=OPO.DVDPCC<1,2,CURR.OFFSET>
0504 OLD.CC=OPO.DVDPCC<1,3,CURR.OFFSET>                                 OLD.CC=OPO.DVDPCC<1,3,CURR.OFFSET>
0505 OLD.OPER=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T25755                |  OLD.OPER=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T23499
0506 TEMP.VALUES<4> = VALUE                                             TEMP.VALUES<4> = VALUE
0507 *                                                                  *
0508 *   Enter Unit of Measure                                          *   Enter Unit of Measure
0509 *                                                                  *

0509 *                                                                  *
0510 * 18746 v   new field of entry for UM                              * 18746 v   new field of entry for UM
0511 1040 *                                                             1040 *
0512 *                                                                  *
0513 NUM.THIS.PROD=0 ; OTH.DEFAULT='' ; LIST.O.JOBS='' ; POS.DEF.OF     NUM.THIS.PROD=0 ; OTH.DEFAULT='' ; LIST.O.JOBS='' ; POS.DEF.
0514 HMSG="Enter Unit of Measure" ;*T28143                           |  HMSG="Enter Unit of Measure" ;*C43504
0515 IF TVO.PO.PROD<1,LN> = "" AND TVO.PO.WHSE<1,LN> = "" THEN          IF TVO.PO.PROD<1,LN> = "" AND TVO.PO.WHSE<1,LN> = "" THEN
0516 * calculate the um from what has been entered                      * calculate the um from what has been entered
0517 LOCATE TEMP.VALUES<2> IN VPS.PROD<1>,1 SETTING FPOS THEN           LOCATE TEMP.VALUES<2> IN VPS.PROD<1>,1 SETTING FPOS THEN
0518 NUM.PROD=DCOUNT(VPS.PROD<1>,VM)                                    NUM.PROD=DCOUNT(VPS.PROD<1>,VM)

0527 NEXT KK                                                            NEXT KK
0528 IF NUM.THIS.PROD>1 THEN                                            IF NUM.THIS.PROD>1 THEN
0529 FOR KK=1 TO NUM.THIS.PROD                                          FOR KK=1 TO NUM.THIS.PROD
0530 OFF.PTR=PROD.OFFSET<1,KK>                                          OFF.PTR=PROD.OFFSET<1,KK>
0531 IF KK=1 THEN                                                       IF KK=1 THEN
0532 *T28143     LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>                  |  *C43504      LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>
0533 LIST.O.JOBS=OTH.DEFAULT<1,KK>                                      LIST.O.JOBS=OTH.DEFAULT<1,KK>
0534 END ELSE                                                           END ELSE
0535 *T28143     LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.PTR  |  *C43504      LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.
0536 LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,KK>                     LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,KK>

0556 IF SET.VALUES # "" THEN                                            IF SET.VALUES # "" THEN
0557 P_X  = X ; P_Y = Y ; P_VALUE = SET.VALUES"L#3" ; P_OPT = ""        P_X  = X ; P_Y = Y ; P_VALUE = SET.VALUES"L#3" ; P_OPT = ""
0558 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0559 VALUE=SET.VALUES                                                   VALUE=SET.VALUES
0560 END ELSE                                                           END ELSE
0561 *T28143 HMSG="Enter Unit of Measure"                            |  *C43504 HMSG="Enter Unit of Measure"
0562 BEGIN CASE                                                         BEGIN CASE
0563 CASE TVO.PO.UM<1,LN>#""                                            CASE TVO.PO.UM<1,LN>#""
0564 DEFAULT = TVO.PO.UM<1,LN>                                          DEFAULT = TVO.PO.UM<1,LN>
0565 CASE TEMP.VALUES<7>#""                                             CASE TEMP.VALUES<7>#"" 

0588 O.R = "O"                                                          O.R = "O"
0589 CASE POS.DEF.OFFSET # 0                                            CASE POS.DEF.OFFSET # 0
0590 IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QTY<1,POS.DEF     IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QTY<1,POS.D
0591 *      IF VPS.REC.QTY<1,POS.DEF.OFFSET>  > 0 THEN                  *        IF VPS.REC.QTY<1,POS.DEF.OFFSET>  > 0 THEN
0592 * determine for default                                            * determine for default   
0593 DEFAULT = OCONV(VPS.REC.QTY<1,POS.DEF.OFFSET>,"MD2") ; O.R = '  |  *24135   DEFAULT = OCONV(VPS.REC.QTY<1,POS.DEF.OFFSET>,"MD2"
0594 END ELSE                                                        |  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,POS.DEF.OFFSET>,1 SETTI
0595 IF VPS.ORD.QTY<1,POS.DEF.OFFSET> > 0 THEN                       |  VPS.UNPOST.VOU.QTY<1,POS.DEF.OFFSET,VFND> -= TVO.PO.QTY<1,LN
0596 DEFAULT = OCONV(VPS.ORD.QTY<1,POS.DEF.OFFSET>,"MD2") ; O.R = '  <  
0597 END                                                                END

0598                                                                 >  DEFAULT = OCONV(VPS.REC.QTY<1,POS.DEF.OFFSET> - VPS.VOU.QTY<
0599                                                                 >  *24135 END ELSE
0600                                                                 >  *24135   IF VPS.ORD.QTY<1,POS.DEF.OFFSET> > 0 THEN
0601                                                                 >  *24135     DEFAULT = OCONV(VPS.ORD.QTY<1,POS.DEF.OFFSET>,"MD
0602                                                                 >  *24135   END
0603 END                                                                END
0604 END CASE                                                           END CASE

0605 CALL EDIT.SUB                                                      CALL EDIT.SUB
0606 IF VALUE = "END" THEN GOTO 1010                                    IF VALUE = "END" THEN GOTO 1010
0607                                                                 >  *T24135 v
0608                                                                 >  *IF @LOGNAME='lross' THEN DEBUG
0609                                                                 >  IF VPS.REC.QTY<1,CURR.OFFSET> # "" OR VPS.REC.QTY<1,CURR.OFF
0610                                                                 >  IF VALUE GT ((VPS.REC.QTY<1,CURR.OFFSET> - VPS.VOU.QTY<1,CUR
0611                                                                 >  ERRMSG = "Cannot request qty greater then what has been rece
0612                                                                 >  GOSUB 91000
0613                                                                 >  GOTO 1050

0614                                                                 >  END ELSE
0615 TEMP.VALUES<5> = VALUE                                             TEMP.VALUES<5> = VALUE
0616                                                                 >  END
0617                                                                 >  *T24135 ^
0618 *                                                                  *
0619 *18746  v  new field for entry of unit price                       *18746  v  new field for entry of unit price
0620 *   ENTER UNIT PRICE                                               *   ENTER UNIT PRICE

0621 *                                                                  *
0622 1055 *                                                             1055 *
0623 *                                                                  *
0624 X=49; Y=SLN; MAXL=9; O.R='R'; HMSG="Enter Unit Price."             X=49; Y=SLN; MAXL=9; O.R='R'; HMSG="Enter Unit Price."
0625 SCALER=4 ; TYP=4                                                   SCALER=4 ; TYP=4
0626 BEGIN CASE                                                      |  *T24135 v
0627 CASE TVO.PO.U.COST<1,LN>#""                                     |  *  IF OPTION = "C" THEN
0628 DEFAULT=OCONV(TVO.PO.U.COST<1,LN>,"MD4")                        |  P_X = 49; P_Y = SLN
0629 O.R = 'O'                                                       |  P_VAL = OCONV(TVO.PO.U.COST<1,LN>, "MD4") "R#9"
0630 CASE TEMP.VALUES<8>#""                                          |  CALL VSI_PLINE(P_X,P_Y,P_VAL,P_OPT)

0631 DEFAULT=OCONV(TEMP.VALUES<8>,"MD4")                             |  *  END ELSE
0632 O.R = 'O'                                                       |  *    BEGIN CASE
0633 CASE POS.DEF.OFFSET # 0                                         |  *      CASE TVO.PO.U.COST<1,LN>#"" 
0634 *T23319 v                                                       |  *        DEFAULT=OCONV(TVO.PO.U.COST<1,LN>,"MD4")
0635 BEGIN CASE                                                      |  *        O.R = 'O'
0636 CASE TEMP.VALUES<7> = 'M' ; ADJVAL = 100000                     |  *      CASE TEMP.VALUES<8>#""
0637 CASE TEMP.VALUES<7> = 'C' ; ADJVAL = 10000                      |  *        DEFAULT=OCONV(TEMP.VALUES<8>,"MD4")

0638 CASE 1 ; ADJVAL = 100                                           |  *        O.R = 'O'
0639 END CASE                                                        |  *      CASE POS.DEF.OFFSET # 0
0640 *T23319 ^                                                       |  **         IF VPS.REC.AMT<1,POS.DEF.OFFSET> # "" AND VPS.REC
0641 *      IF VPS.REC.AMT<1,POS.DEF.OFFSET> # "" AND VPS.REC.AMT<1  |  *        IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QT
0642 IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QTY<1,POS.DEF  <  
0643 * determine for default                                            * determine for default     
0644 *T23319* IF TEMP.VALUES<7> = 'M' THEN ADJVAL = 100000 ELSE ADJ  |  *          IF TEMP.VALUES<7> = 'M' THEN ADJVAL = 100000 ELSE

0645 *CSF 25893 v                                                       *CSF 25893 v
0646 *      NVAL = VPS.REC.AMT<1,POS.DEF.OFFSET> / VPS.REC.QTY<1,PO     *          NVAL = VPS.REC.AMT<1,POS.DEF.OFFSET> / VPS.REC.QT
0647 NVAL = VPS.REC.AMT<1,POS.DEF.OFFSET> / VPS.REC.QTY<1,POS.DEF.O  |  *          NVAL = VPS.REC.AMT<1,POS.DEF.OFFSET> / VPS.REC.QT
0648 *T20159 v correct default value                                    *T20159 v correct default value
0649 *       DEFAULT = OCONV(NVAL*100,"MD2") ; O.R = 'O'                *           DEFAULT = OCONV(NVAL*100,"MD2") ; O.R = 'O'
0650 *      DEFAULT = OCONV(NVAL,"MD2") ; O.R = 'O'                     *          DEFAULT = OCONV(NVAL,"MD2") ; O.R = 'O'
0651 DEFAULT = OCONV(NVAL,"MD4") ; O.R = 'O'                         |  *          DEFAULT = OCONV(NVAL,"MD4") ; O.R = 'O'
0652 *T20159 ^                                                          *T20159 ^
0653 *C24374 v below adj calc                                           *C24374 v below adj calc

0654 END ELSE                                                        |  *        END ELSE
0655 IF VPS.ORD.AMT<1,POS.DEF.OFFSET> # "" THEN                      |  *          IF VPS.ORD.AMT<1,POS.DEF.OFFSET> # "" THEN
0656 *T23319* IF TEMP.VALUES<7> = 'M' THEN ADJVAL = 100000 ELSE ADJ  |  *            IF TEMP.VALUES<7> = 'M' THEN ADJVAL = 100000 EL
0657 *        NVAL = VPS.ORD.AMT<1,POS.DEF.OFFSET>  / VPS.ORD.QTY<1  |  **           NVAL = VPS.ORD.AMT<1,POS.DEF.OFFSET>  / VPS.ORD
0658 NVAL = VPS.ORD.AMT<1,POS.DEF.OFFSET>  / VPS.ORD.QTY<1,POS.DEF.  |  *            NVAL = VPS.ORD.AMT<1,POS.DEF.OFFSET>  / VPS.ORD
0659 *T20159 v correct default value                                    *T20159 v correct default value
0660 *         DEFAULT = OCONV(NVAL*100,"MD2") ; O.R = 'O'           |  **           DEFAULT = OCONV(NVAL*100,"MD2") ; O.R = 'O'

0661 *        DEFAULT = OCONV(NVAL,"MD2") ; O.R = 'O'                |  **           DEFAULT = OCONV(NVAL,"MD2") ; O.R = 'O'
0662 DEFAULT = OCONV(NVAL,"MD4") ; O.R = 'O'                         |  *            DEFAULT = OCONV(NVAL,"MD4") ; O.R = 'O'
0663 *T20159 ^                                                          *T20159 ^
0664 *CSF 25893 ^                                                       *CSF 25893 ^
0665 *C24374 v below adj calc                                           *C24374 v below adj calc
0666 END                                                             |  *          END
0667 END                                                             |  *        END

0668 CASE 1                                                          |  *      CASE 1
0669 DEFAULT=''                                                      |  *        DEFAULT=''
0670 END CASE                                                        |  *    END CASE
0671 CALL EDIT.SUB                                                   |  *    CALL EDIT.SUB
0672 IF VALUE = 'END' THEN GOTO 1010                                 |  *    IF VALUE = 'END' THEN GOTO 1010
0673 TEMP.VALUES<8>=VALUE                                            |  TEMP.VALUES<8>=TVO.PO.U.COST<1,LN>
0674 *                                                               |  * END

0675                                                                 >  *T24135 ^
0676 *18746  ^                                                          *18746  ^
0677 *                                                                  *
0678 **** VOUCHERED COST                                                **** VOUCHERED COST
0679 *                                                                  *
0680 1060*                                                              1060*
0681 X = 59; Y = SLN; TYP = 4; SCALER = 2; MAXL = 10; O.R = "R"         X = 59; Y = SLN; TYP = 4; SCALER = 2; MAXL = 10; O.R = "R"

0682 *T23319 v                                                       |  *  IF TEMP.VALUES<7> = "M" THEN
0683 BEGIN CASE                                                         BEGIN CASE
0684 CASE TEMP.VALUES<7> = 'M'                                          CASE TEMP.VALUES<7> = 'M'
0685 * the quantity to be used is 1000 time the quantity shown          * the quantity to be used is 1000 time the quantity shown
0686 EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 100000 +      EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 100000 
0687 CASE TEMP.VALUES<7> = 'C'                                          CASE TEMP.VALUES<7> = 'C'
0688 * the quantity to be used is 100 time the quantity shown        <  

0689 EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 10000 + .     EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 10000 +
0690                                                                 >  *  END ELSE
0691 CASE 1                                                             CASE 1
0692 EXTENDED.AMT = INT(TEMP.VALUES<8>/100 * TEMP.VALUES<5> + .5)       EXTENDED.AMT = INT(TEMP.VALUES<8>/100 * TEMP.VALUES<5> + .5)
0693 END CASE                                                        <  
0694 * IF TEMP.VALUES<7> = "M" THEN                                  <  
0695 *   EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 10000  <  
0696 * END ELSE                                                      <  

0697 *   EXTENDED.AMT = INT(TEMP.VALUES<8>/100 * TEMP.VALUES<5> + .  <  
0698 * END                                                              *  END
0699 *T23319 ^                                                       |  END CASE
0700 EXTENDED.AMT = INT(EXTENDED.AMT/100+.5)                            EXTENDED.AMT = INT(EXTENDED.AMT/100+.5)
0701 P_X  = X ; P_Y = Y ; P_VALUE = OCONV(EXTENDED.AMT,"MD2")"R#10"     P_X  = X ; P_Y = Y ; P_VALUE = OCONV(EXTENDED.AMT,"MD2")"R#1
0702 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0703 VALUE = EXTENDED.AMT                                               VALUE = EXTENDED.AMT

0833 TVO.ASSET.ID<1,FND> = ""                                           TVO.ASSET.ID<1,FND> = ""
0834 IF CURR.OFFSET # 0 THEN                                            IF CURR.OFFSET # 0 THEN
0835 TVO.DIV<1,FND>=OPO.DVDPCC<1,1,CURR.OFFSET>                         TVO.DIV<1,FND>=OPO.DVDPCC<1,1,CURR.OFFSET>
0836 TVO.DEPT<1,FND>=OPO.DVDPCC<1,2,CURR.OFFSET>                        TVO.DEPT<1,FND>=OPO.DVDPCC<1,2,CURR.OFFSET>
0837 TVO.CCTR<1,FND>=OPO.DVDPCC<1,3,CURR.OFFSET>                        TVO.CCTR<1,FND>=OPO.DVDPCC<1,3,CURR.OFFSET>
0838 TVO.PO.OPER<1,FND>=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T25755      |  TVO.PO.OPER<1,FND>=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T23499
0839 END ELSE                                                           END ELSE
0840 TVO.DIV<1,FND> = GEN.DIV                                           TVO.DIV<1,FND> = GEN.DIV
0841 TVO.DEPT<1,FND> = GEN.DEPT                                         TVO.DEPT<1,FND> = GEN.DEPT
0842 TVO.CCTR<1,FND> = GEN.CCTR                                         TVO.CCTR<1,FND> = GEN.CCTR

0843 TVO.PO.OPER<1,FND> = "" ;* T25755                               |  TVO.PO.OPER<1,FND> = "" ;* T23499
0844 END                                                                END
0845 *CSF 25150 v                                                       *CSF 25150 v
0846 IF OPO.ACCRUE = 'Y' THEN                                           IF OPO.ACCRUE = 'Y' THEN
0847 TVO.ACCT.FLG<1,FND> = 'P'                                          TVO.ACCT.FLG<1,FND> = 'P'
0848 END ELSE TVO.ACCT.FLG<1,FND> = ''                                  END ELSE TVO.ACCT.FLG<1,FND> = ''
0849 *CSF 25150 ^                                                       *CSF 25150 ^

0853 TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,LN>     TVO.DIST.AMT<1,FND> = TVO.DIST.AMT<1,FND> + TVO.PO.VOUCH<1,L
0854 TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")                     TVO.CTR = COUNT(TVO.ACCT,VM) + (TVO.ACCT # "")
0855 TOTAL.VOUCH = TOTAL.VOUCH - CURR.VOUCH + TVO.PO.VOUCH<1,LN>        TOTAL.VOUCH = TOTAL.VOUCH - CURR.VOUCH + TVO.PO.VOUCH<1,LN>
0856 SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH                             SCV.REC(13)<ECD.SCRN.NO> = TOTAL.VOUCH
0857 ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT                       ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
0858 *T23319 v                                                       |  IF TVO.PO.U.COST<1,LN> # TEMP.VALUES<8> THEN      ;*T24135
0859 BEGIN CASE                                                      <  
0860 CASE TVO.PO.UM<1,LN> = "M" ; ADJVAL = 100000                    <  
0861 CASE TVO.PO.UM<1,LN> = "C" ; ADJVAL = 10000                     <  
0862 CASE 1 ; ADJVAL = 100                                           <  

0863 END CASE                                                        <  
0864 * IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE ADJVAL = 10     *      IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE ADJV
0865 *T23319 ^                                                       |  IF TVO.PO.UM<1,LN>="M" THEN ADJVAL = 100000 ELSE IF TVO.PO.U
0866 IF TVO.PO.QTY<1,LN>+0 # 0 AND TVO.PO.VOUCH<1,LN>+0 # 0 THEN        IF TVO.PO.QTY<1,LN>+0 # 0 AND TVO.PO.VOUCH<1,LN>+0 # 0 THEN
0867 *T21177       TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> *     *T21177       TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN
>
0868 TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.PO     TVO.PO.U.COST<1,LN> = INT(((TVO.PO.VOUCH<1,LN> * 100) / TVO.
0869 END ELSE                                                           END ELSE

0870 TVO.PO.U.COST<1,LN> = TVO.PO.VOUCH<1,LN> * 100                     TVO.PO.U.COST<1,LN> = TVO.PO.VOUCH<1,LN> * 100
0871 END                                                                END
0872                                                                 >  END
0873 LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")                   LINES = COUNT(TVO.PO.NOS,VM) + (TVO.PO.NOS # "")
0874 END                                                                END
0875 *                                                                  *
0876 * Calculate AP account Distribution Amounts                        * Calculate AP account Distribution Amounts
0877 *                                                                  *
0878 IF AP.ACCT # "" THEN                                               IF AP.ACCT # "" THEN

1116 TVO.PO.QTY = DELETE(TVO.PO.QTY,1,LN,0)                             TVO.PO.QTY = DELETE(TVO.PO.QTY,1,LN,0)
1117 TVO.PO.U.COST = DELETE(TVO.PO.U.COST,1,LN,0)                       TVO.PO.U.COST = DELETE(TVO.PO.U.COST,1,LN,0)
1118 TVO.PO.VOUCH = DELETE(TVO.PO.VOUCH,1,LN,0)                         TVO.PO.VOUCH = DELETE(TVO.PO.VOUCH,1,LN,0)
1119 TVO.PROD.DESC = DELETE(TVO.PROD.DESC,1,LN,0)                       TVO.PROD.DESC = DELETE(TVO.PROD.DESC,1,LN,0)
1120 TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,LN,0)                             TVO.SEQ.NO = DELETE(TVO.SEQ.NO,1,LN,0)
1121 TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,LN,0) ;*T28143                 |  TVO.PO.SEQ = DELETE(TVO.PO.SEQ,1,LN,0) ;*C43504
1122 TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,LN,0)                           TVO.ENT.FLG = DELETE(TVO.ENT.FLG,1,LN,0)
1123 RETURN                                                             RETURN
1124 *                                                                  *
1125 *   ** Break HMSG IN TO MULTI LINES                                *   ** Break HMSG IN TO MULTI LINES

1144 RETURN                                                             RETURN
1145 *                                                                  *
1146 ***** SCROLL ROUTINE                                               ***** SCROLL ROUTINE
1147 *                                                                  *
1148 10000*                                                             10000*
1149 IF TVO.PO.NOS # "" THEN GOSUB 85000  ;*T25755                   |  IF TVO.PO.NOS # "" THEN GOSUB 85000  ;*T23499
1150 START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE                   START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
1151 LAST.LINE=START.LINE + PAGE.SIZE - 1                               LAST.LINE=START.LINE + PAGE.SIZE - 1
1152 IF LAST.LINE > LINES THEN LAST.LINE = LINES                        IF LAST.LINE > LINES THEN LAST.LINE = LINES
1153 IF START.LINE=OLD.START.LINE THEN GOTO 10001                       IF START.LINE=OLD.START.LINE THEN GOTO 10001

1211 END ELSE                                                           END ELSE
1212 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : TVO.PO.WHSE<1,LN> E     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : TVO.PO.WHSE<1,LN>
1213 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,LN> ELSE MA     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,LN> ELSE 
1214 CURR.PROD = TVO.PO.PROD<1,LN>                                      CURR.PROD = TVO.PO.PROD<1,LN>
1215 CURR.CAT  = TVO.PO.WHSE<1,LN>                                      CURR.CAT  = TVO.PO.WHSE<1,LN>
1216 CURR.SEQ = TVO.PO.SEQ<1,LN> ;*T28143                            |  CURR.SEQ  = TVO.PO.SEQ<1,LN> ;*C43504
1217 CURR.OFFSET=0                                                      CURR.OFFSET=0
1218 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
1219 *T28143 IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN             |  *      IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN
1220 IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CURR     IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CU

1223 END ELSE                                                           END ELSE
1224 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
1225 DO.CONTINUE=1                                                      DO.CONTINUE=1
1226 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
1227 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
1228 *T28143     IF OPO.PROD.LINE<1,III> = CURR.CAT THEN             |  *            IF OPO.PROD.LINE<1,III> = CURR.CAT THEN
1229 IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"@"     IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"
1230 CURR.OFFSET=III                                                    CURR.OFFSET=III
1231 DO.CONTINUE=0                                                      DO.CONTINUE=0
1232 END                                                                END

1240 IF OPO.ACCRUE = "Y" THEN                                           IF OPO.ACCRUE = "Y" THEN
1241 OLD.ACCT = CAOS.ACCRU.LIAB                                         OLD.ACCT = CAOS.ACCRU.LIAB
1242 TEMP.ACCT.ACCRUE=1 ;*T20016.1                                      TEMP.ACCT.ACCRUE=1 ;*T20016.1
1243 AP.ACCT = CAOS.AP.ACCT                    ;* Task 17919            AP.ACCT = CAOS.AP.ACCT                    ;* Task 17919
1244 END ELSE                                                           END ELSE
1245 TOLD.ACCT = CAOS.APL                                            |  OLD.ACCT = CAOS.APL
1246 AP.ACCT = CAOS.AP.ACCT                                             AP.ACCT = CAOS.AP.ACCT
1247 END                                                                END
1248 OLD.DV=OPO.DVDPCC<1,1,CURR.OFFSET>                                 OLD.DV=OPO.DVDPCC<1,1,CURR.OFFSET>
1249 OLD.DP=OPO.DVDPCC<1,2,CURR.OFFSET>                                 OLD.DP=OPO.DVDPCC<1,2,CURR.OFFSET>

1250 OLD.CC=OPO.DVDPCC<1,3,CURR.OFFSET>                                 OLD.CC=OPO.DVDPCC<1,3,CURR.OFFSET>
1251 OLD.OPER=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T25755                |  OLD.OPER=OPO.OPER.CODE<1,1,CURR.OFFSET> ;*T23499
1252 END                                                                END
1253 RETURN                                                             RETURN
1254 *T25755 v                                                       <  
1255 85000*                                                             85000*
1256 XLNS = DCOUNT(TVO.PO.NOS,VM)                                       XLNS = DCOUNT(TVO.PO.NOS,VM)
1257 FOR XX = 1 TO XLNS                                                 FOR XX = 1 TO XLNS

1256 XLNS = DCOUNT(TVO.PO.NOS,VM)                                       XLNS = DCOUNT(TVO.PO.NOS,VM)
1257 FOR XX = 1 TO XLNS                                                 FOR XX = 1 TO XLNS
1258 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,XX> ELSE MA     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,XX> ELSE 
1259 CURR.PROD = TVO.PO.PROD<1,XX>                                      CURR.PROD = TVO.PO.PROD<1,XX>
1260 CURR.CAT  = TVO.PO.WHSE<1,XX>                                      CURR.CAT  = TVO.PO.WHSE<1,XX>
1261 CURR.SEQ = TVO.PO.SEQ<1,LN> ;*T28143                            |  CURR.SEQ  = TVO.PO.SEQ<1,XX> ;*C43504
1262 CURR.OFFSET=0                                                      CURR.OFFSET=0
1263 LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN           LOCATE CURR.PROD IN OPO.JOB.NO<1>,1 SETTING PRODOFF THEN
1264 *T28143 IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN             |  *    IF OPO.PROD.LINE<1,PRODOFF> = CURR.CAT THEN
1265 IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CURR     IF OPO.PROD.LINE<1,PRODOFF>:"@":OPO.PROD.SEQ<1,PRODOFF> = CU

1268 END ELSE                                                           END ELSE
1269 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)                                 NUM.T.PROD = DCOUNT(OPO.JOB.NO,VM)
1270 DO.CONTINUE=1                                                      DO.CONTINUE=1
1271 FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE                FOR III = PRODOFF+1 TO NUM.T.PROD WHILE DO.CONTINUE
1272 IF OPO.JOB.NO<1,III> = CURR.PROD THEN                              IF OPO.JOB.NO<1,III> = CURR.PROD THEN
1273 *T28143     IF OPO.PROD.LINE<1,III> = CURR.CAT THEN             |  *          IF OPO.PROD.LINE<1,III> = CURR.CAT THEN
1274 IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"@"     IF OPO.PROD.LINE<1,III>:"@":OPO.PROD.SEQ<1,III> = CURR.CAT:"
1275 CURR.OFFSET=III                                                    CURR.OFFSET=III
1276 DO.CONTINUE=0                                                      DO.CONTINUE=0
1277 END                                                                END

1280 END                                                                END
1281 END                                                                END
1282 IF CURR.OFFSET=0 THEN                                              IF CURR.OFFSET=0 THEN 
1283 CURR.OFFSET=PRODOFF                                                CURR.OFFSET=PRODOFF
1284 END                                                                END
1285 *T28143 TVO.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,1>                |  *C43504 TVO.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,1>
1286 TVO.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,CURR.OFFSET,1>               TVO.PROD.DESC<1,XX> = OPO.ITEM.COMM<1,CURR.OFFSET,1>
1287 NEXT XX                                                            NEXT XX
1288 RETURN                                                             RETURN
1289 *T25755 ^                                                       |  *


APSBP/VOUCHER.OS.PO.REC                                            /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.OS.PO.REC
Printed for thompson at 06/28/2006 04:09:10PM

0024 *T20016.1 RKB 2/6/96 * add restriction on modify to accrual ac     *T20016.1 RKB 2/6/96 * add restriction on modify to accrual 
0025 *                      code , div,dept,cctr on acct lines crea     *                      code , div,dept,cctr on acct lines cr
0026 *                      a po with accrual set to yes                *                      a po with accrual set to yes
0027 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0028 *T21177 diane 05/11/1998 * REMOVE CALL TO EDIT.SUB TYP=0           *T21177 diane 05/11/1998 * REMOVE CALL TO EDIT.SUB TYP=0
0029 *T24605 gil 12/09/1999 * CORRECTING THE OUTSIDE PO VIA VOUCHER  |  *T23499 rick 08/30/1999 * Modify pgm to work with new OUTSID
0030 *                      * Fix page size                          |  *                         with OPO.PROD.SEQ attribute
0031 *T23319 alex 04/11/2000 * Fix calculation for a UOM Type "C";   <  
0032 *                         defaulting as an "EA" Type.           <  
0033 *C38073 cm 03/23/2001 * Category field does not display in GUI  <  

0034 *T25755 cm 04/19/2001 * Modify pgm to work with new format of   <  
0035 *                       file with seq numbers.                  <  
0036 *T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,  <  
0037 **************************************************************     ************************************************************
0038 *                                                                  *
0039 **** INSERT FILE EQUATES                                           **** INSERT FILE EQUATES
0040 *                                                                  *

0061 *COPY>JCS.CPYLIB>OPERATION                                         *COPY>JCS.CPYLIB>OPERATION
0062 *COPY>POS.CPYLIB>OUTSIDE.PO                                        *COPY>POS.CPYLIB>OUTSIDE.PO
0063 *COPY>JCS.CPYLIB>JOB.CUTOFF.NO                                     *COPY>JCS.CPYLIB>JOB.CUTOFF.NO
0064 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0065 *                                                                  *
0066 *                                                               <  
0067 **** SETUP FOR SYSTEM ERRMSGS                                      **** SETUP FOR SYSTEM ERRMSGS
0068 *                                                                  *
0069 SYS.TYPE = 1                                                       SYS.TYPE = 1
0070 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

0071 MAT DIV.REC = ''; MAT DEPT.REC = ''; MAT OPER.REC = ''; MAT CC  |  MAT DIV.REC = '';MAT DEPT.REC = '';MAT OPER.REC = '';MAT CCT
0072 MAT GEN.XREF.REC = ''                                              MAT GEN.XREF.REC = ''
0073 MAT DOS.REC = ''                                                   MAT DOS.REC = ''
0074 *                                                                  *
0075 * OPEN FILE(S)                                                     * OPEN FILE(S)
0076 *                                                                  *
0077 OPEN 'JOB' TO JOB ELSE                                             OPEN 'JOB' TO JOB ELSE

0107 *                                                                  *
0108 GXR.CO=CONO                                                        GXR.CO=CONO
0109 GXR.HEADING<1,2>='DESCRIPTION'                                     GXR.HEADING<1,2>='DESCRIPTION'
0110 GXR.ATT<1,1>=0;GXR.ATT<1,2>=2;GXR.LEN<1,1>=5;GXR.LEN<1,2>=30       GXR.ATT<1,1>=0;GXR.ATT<1,2>=2;GXR.LEN<1,1>=5;GXR.LEN<1,2>=30
0111 BEGIN.PAGE = 8                                                     BEGIN.PAGE = 8
0112 *T2460 5PAGE.SIZE = 11                                          |  PAGE.SIZE = 11
0113 PAGE.SIZE = 6      ;*T24605                                     <  
0114 LINE.SPACE = 2                                                     LINE.SPACE = 2
0115 LN = 0                                                             LN = 0
0116 LNO = 0                                                            LNO = 0

0119 VSTAT.KEY = CONO : TVO.VEND :"!": TVO.PO.TYPE                      VSTAT.KEY = CONO : TVO.VEND :"!": TVO.PO.TYPE
0120 VPS.KEY = VSTAT.KEY :"!": VSTAT.PO<1,VM.NO>                        VPS.KEY = VSTAT.KEY :"!": VSTAT.PO<1,VM.NO>
0121 VOUCH.NUMBERS = ''                                                 VOUCH.NUMBERS = ''
0122 NEWPASS1=1                                                         NEWPASS1=1
0123 CHANGE.LN=''                                                       CHANGE.LN=''
0124 TEMP.ACCT.ACCRUE=0 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=0;*T20016.1
0125 *VOUCH.NUMBERS<1>=VOUCHERED QTY, <2>=VOUCHERED AMT, <3>=WAS TA     *VOUCH.NUMBERS<1>=VOUCHERED QTY, <2>=VOUCHERED AMT, <3>=WAS 
0126 *<4>=WAS TAXABLE FLAG ,<5>=NEW RECEIVED QTY ,<6>=OPERATION PER     *<4>=WAS TAXABLE FLAG ,<5>=NEW RECEIVED QTY ,<6>=OPERATION 
P
0127 *                                                                  *
0128 *--- PRINT HEADINGS                                                *--- PRINT HEADINGS

0129 *                                                                  *
0130 ECD.ACTION=2 ; CALL SCRN.EDIT                                   |  ECD.ACTION=2;CALL SCRN.EDIT
0131 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>;ECD.NUM=1;ECD.ACTION=5     SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND<1,1>;ECD.NUM=1;ECD.ACTION
0132 READV VEND.NAME FROM VEND,CONO:TVO.VEND,1 ELSE VEND.NAME = "UN     READV VEND.NAME FROM VEND,CONO:TVO.VEND,1 ELSE VEND.NAME = "
0133 SCV.REC(2)<ECD.SCRN.NO> = VEND.NAME;ECD.NUM=2;ECD.ACTION=5;CAL     SCV.REC(2)<ECD.SCRN.NO> = VEND.NAME;ECD.NUM=2;ECD.ACTION=5;C
0134 SCV.REC(25)<ECD.SCRN.NO>=VSTAT.PO<1,VM.NO>;ECD.NUM=25;ECD.ACTI     SCV.REC(25)<ECD.SCRN.NO>=VSTAT.PO<1,VM.NO>;ECD.NUM=25;ECD.AC
0135 HDG.PONUM=VSTAT.PO<1,VM.NO>                                        HDG.PONUM=VSTAT.PO<1,VM.NO>
0136 OPO.FND = 1                                                        OPO.FND = 1

0162 GOTO 99999                                                         GOTO 99999
0163 *                                                                  *
0164 *                                                                  *
0165 100                                                                100 
0166 BEFORE.AMOUNT=VOUCH.NUMBERS<5,LN>                                  BEFORE.AMOUNT=VOUCH.NUMBERS<5,LN>
0167 *T25755 v                                                       |  *T23499 v
0168 *  MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.N  |  **MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.
0169 MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO<1     MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO
0170 *T25755 ^                                                       |  *T23499 ^
0171 ECD.NUM=26                                                         ECD.NUM=26

0194 END                                                                END
0195 *                                                                  *
0196 *18746                                                             *18746
0197 BEFORE.PAY = PAY.FLAG                                              BEFORE.PAY = PAY.FLAG
0198 IF BEFORE.AMOUNT # VOUCH.NUMBERS<5,LN> THEN                        IF BEFORE.AMOUNT # VOUCH.NUMBERS<5,LN> THEN
0199 ECD.NUM=17 ; ECD.ACTION=4 ; CALL SCRN.EDIT                      |  ECD.NUM=17;ECD.ACTION=4;CALL SCRN.EDIT
0200 IF ECD.RET.VALUE = 'E' OR ECD.RET.VALUE='END' THEN                 IF ECD.RET.VALUE = 'E' OR ECD.RET.VALUE='END' THEN
0201 GOTO 100 ;* START OVER                                          |  GOTO 100;* START OVER
0202 END ELSE                                                           END ELSE
0203 ECD.NUM = 8                                                        ECD.NUM = 8

0207 END                                                                END
0208 END                                                                END
0209 *                                                                  *
0210 101                                                                101 
0211 *                                                                  *
0212 *T25755 v                                                       |  *T23499 v
0213 IF VOUCH.NUMBERS<6,LN> # '' THEN                                |  IF VOUCH.NUMBERS<6,LN> # "" THEN
0214 ECD.RET.VALUE = VOUCH.NUMBERS<6,LN>                                ECD.RET.VALUE = VOUCH.NUMBERS<6,LN>
0215 END ELSE                                                           END ELSE
0216 *T25755 ^                                                       |  *T23499 ^

0217 IF VOUCH.NUMBERS<5,LN> > 0 AND VPDS.OPER.PERF = '' THEN            IF VOUCH.NUMBERS<5,LN> > 0 AND VPDS.OPER.PERF = '' THEN
0218 MATREAD CCTR.REC FROM COST.CNTR, CONO:VPDS.PO.CCTR<1,1> ELSE C     MATREAD CCTR.REC FROM COST.CNTR, CONO:VPDS.PO.CCTR<1,1> ELSE
0219 ECD.NUM = 24; ECD.SUB.NUM = LN;ECD.VALDAT.CODE = 2              |  ECD.NUM = 24;ECD.SUB.NUM = LN;ECD.VALDAT.CODE = 2
0220 ECD.VALDAT.FILE = OPERATION; ECD.PREFIX.ID = CONO               |  ECD.VALDAT.FILE = OPERATION;ECD.PREFIX.ID = CONO
0221 ECD.ACTION=4; CALL SCRN.EDIT                                    |  *T23499 v
0222 IF @LOGNAME = 'cmykleb' THEN DEBUG                              |  IF VOUCH.NUMBERS<6,LN> # "" THEN
0223                                                                 >  ECD.DEFAULT = VOUCH.NUMBERS<6,LN>
0224                                                                 >  END
0225                                                                 >  *T23499 ^

0226                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0227 BEGIN CASE                                                         BEGIN CASE
0228 CASE ECD.RET.VALUE='END'                                           CASE ECD.RET.VALUE='END'
0229 SCV.REC(24)<ECD.SCRN.NO>=VPDS.OPER.PERF                            SCV.REC(24)<ECD.SCRN.NO>=VPDS.OPER.PERF
0230 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
0231 PAY.FLAG = BEFORE.PAY                                              PAY.FLAG = BEFORE.PAY
0232 VOUCH.NUMBERS<5,LN> = BEFORE.AMOUNT                                VOUCH.NUMBERS<5,LN> = BEFORE.AMOUNT

0236 CASE ECD.VALDAT.ITEM # ''                                          CASE ECD.VALDAT.ITEM # ''
0237 LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE              LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE
0238 ERRMSG='OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR #      ERRMSG='OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR 
0239 GOSUB 91000;GOTO 101                                               GOSUB 91000;GOTO 101
0240 END                                                                END
0241                                                                 >  ***********FOR K=1 TO OPER.REC.SIZE
0242                                                                 >  *************OPER.REC(K)=ECD.VALDAT.ITEM<K>
0243                                                                 >  ***********NEXT K
0244 VOUCH.NUMBERS<6,LN>=ECD.RET.VALUE                                  VOUCH.NUMBERS<6,LN>=ECD.RET.VALUE
0245 CASE ECD.RET.VALUE='???'                                           CASE ECD.RET.VALUE='???'

0275 CASE 1                                                             CASE 1
0276 GOTO 101                                                           GOTO 101
0277 END CASE                                                           END CASE
0278 VOUCH.NUMBERS<6,LN>=ECD.RET.VALUE                                  VOUCH.NUMBERS<6,LN>=ECD.RET.VALUE
0279 END                                                                END
0280 END ; * T25755                                                  |  END
0281 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0282 GOSUB 10000                                                        GOSUB 10000
0283 RETURN                                                             RETURN
0284 200                                                                200 

0312 *                                                                  *
0313 * GET TAXABLE FLAG IF TAXABLE PO                                   * GET TAXABLE FLAG IF TAXABLE PO
0314 300*                                                               300* 
0315 * ECD.NUM = 34                                                     * ECD.NUM = 34
0316 * ECD.SUB.NUM=LN                                                   * ECD.SUB.NUM=LN
0317 * ECD.ACTION = 4; CALL SCRN.EDIT                                |  * ECD.ACTION = 4;CALL SCRN.EDIT
0318 * IF ECD.RET.VALUE NE "E" THEN                                     * IF ECD.RET.VALUE NE "E" THEN
0319 *   VOUCH.NUMBERS<3,LN> = ECD.RET.VALUE                            *   VOUCH.NUMBERS<3,LN> = ECD.RET.VALUE
0320 * END                                                              * END
0321 * RETURN                                                           * RETURN

0341 LOOP                                                               LOOP
0342 IF NOT(NEWPASS1) THEN GOSUB 10000                                  IF NOT(NEWPASS1) THEN GOSUB 10000
0343 NEWPASS1=0                                                         NEWPASS1=0
0344 ECD.NUM = 14                                                       ECD.NUM = 14
0345 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''                                 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
0346 ECD.ACTION = 4 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 4;CALL SCRN.EDIT
0347 ECD.VALDAT = ""                                                    ECD.VALDAT = ""
0348 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE
0349 BEGIN CASE                                                         BEGIN CASE
0350 CASE OPTION = 'E' OR OPTION = 'END' OR OPTION = ""                 CASE OPTION = 'E' OR OPTION = 'END' OR OPTION = ""

0351 MORE = 0                                                           MORE = 0
0352 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0353 LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE             LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0354 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0355 GOSUB 10000                                                        GOSUB 10000
0356 * T25978 v                                                      <  
0357 CASE OPTION = 'SR'                                              <  
0358 LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE          <  
0359 IF LN < 1 THEN LN = 1                                           <  
0360 GOSUB 10000                                                     <  

0361 CASE OPTION = 'ST'                                              <  
0362 LN = 1                                                          <  
0363 GOSUB 10000                                                     <  
0364 CASE OPTION = 'SB'                                              <  
0365 LN = LINES                                                      <  
0366 GOSUB 10000                                                     <  
0367 * T25978 ^                                                      <  

0394 IF LNO THEN                                                        IF LNO THEN
0395 LN = I                                                             LN = I
0396 GOSUB 7100                                                         GOSUB 7100
0397 END                                                                END
0398 NEXT I                                                             NEXT I
0399 RETURN   ;*TESTING                                              |  GOTO 99999
0400 *TESTING GOTO 99999                                             <  
0401 *                                                                  *
0402 *--- UPDATE TEMP.VOUCHERS                                          *--- UPDATE TEMP.VOUCHERS
0403 *                                                                  *

0433 * CSF 24232 ^                                                      * CSF 24232 ^
0434 *                                                                  *
0435 JPTR=1                                                             JPTR=1
0436 LOOP                                                               LOOP
0437 LOCATE OPO.JOB.NO<1,LNO> IN VPS.PROD<1>,JPTR SETTING PO.PROD.L     LOCATE OPO.JOB.NO<1,LNO> IN VPS.PROD<1>,JPTR SETTING PO.PROD
0438 *T25755 v                                                       |  *T23499 v
0439 *        IF OPO.PROD.LINE<1,LNO>=VPS.WHSE<1,PO.PROD.LN> THEN    |  ***    IF OPO.PROD.LINE<1,LNO>=VPS.WHSE<1,PO.PROD.LN> THEN
0440 IF OPO.PROD.LINE<1,LNO>:'@':OPO.PROD.SEQ<1,LNO>=VPS.WHSE<1,PO.  |  IF OPO.PROD.LINE<1,LNO>:"@":OPO.PROD.SEQ<1,LNO>=VPS.WHSE<1,P
0441 *T25755 ^                                                       |  *T23499 ^
0442 JPTR=0                                                             JPTR=0

0452 *                                                                  *
0453 *     SET UP FOR DIV, DEPT, AND CCTR                               *     SET UP FOR DIV, DEPT, AND CCTR
0454 PODIV=OPO.DVDPCC<1,1,LNO>                                          PODIV=OPO.DVDPCC<1,1,LNO>
0455 PODEPT=OPO.DVDPCC<1,2,LNO>                                         PODEPT=OPO.DVDPCC<1,2,LNO>
0456 POCCTR=OPO.DVDPCC<1,3,LNO>                                         POCCTR=OPO.DVDPCC<1,3,LNO>
0457 POOPER=OPO.OPER.CODE<1,1,LNO> ; * T25755                        |  *T23499 v
0458                                                                 >  POOPER=OPO.OPER.CODE<1,1,LNO>
0459                                                                 >  *T23499 ^
0460 *                                                                  *
0461 MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE NULL           MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE NULL

0462 *CSF 24232 v (COMMENT - INSERTION MADE HERE.)                      *CSF 24232 v (COMMENT - INSERTION MADE HERE.)
0463 *CSF 23566                                                         *CSF 23566
0464 *T23319 v                                                       |  IF VPS.U.M<1,PO.PROD.LN> = "M" THEN ADJVAL = 10000000 ELSE A
0465 BEGIN CASE                                                      <  
0466 CASE VPS.U.M<1,PO.PROD.LN> = "M" ; ADJVAL = 10000000            <  
0467 CASE VPS.U.M<1,PO.PROD.LN> = "C" ; ADJVAL = 1000000             <  
0468 CASE 1 ; ADJVAL = 10000                                         <  
0469 END CASE                                                        <  
0470 * IF VPS.U.M<1,PO.PROD.LN> = "M" THEN ADJVAL = 10000000 ELSE A  <  

0471 *T23319 ^                                                       <  
0472 IF PAY.FLAG # 'O' THEN VPDS.ORD.UN.COST<1,1> = VPDS.REC.UN.COS     IF PAY.FLAG # 'O' THEN VPDS.ORD.UN.COST<1,1> = VPDS.REC.UN.C
0473 IF VPDS.ORD.UN.COST<1,1>+0 # 0 THEN                                IF VPDS.ORD.UN.COST<1,1>+0 # 0 THEN
0474 REV.UN.COST = VPDS.ORD.UN.COST<1,1>                                REV.UN.COST = VPDS.ORD.UN.COST<1,1>
0475 END ELSE                                                           END ELSE
0476 BEGIN CASE                                                         BEGIN CASE
0477 CASE REV.QTY > 0                                                   CASE REV.QTY > 0

0478 *    REV.UN.COST = INT(REV.AMT / REV.QTY + .5) *10000              *    REV.UN.COST = INT(REV.AMT / REV.QTY + .5) *10000
0479 *T21177    REV.UN.COST = INT(REV.AMT / REV.QTY * 10000 +.5)        *T21177    REV.UN.COST = INT(REV.AMT / REV.QTY * 10000 +.5)
0480 REV.UN.COST = INT(REV.AMT / REV.QTY * ADJVAL +.5)  ;*T21177     |  REV.UN.COST = INT(REV.AMT / REV.QTY * ADJVAL +.5);*T21177
0481 CASE REV.QTY < 0                                                   CASE REV.QTY < 0
0482 *    REV.UN.COST = INT(REV.AMT / REV.QTY - .5)*10000               *    REV.UN.COST = INT(REV.AMT / REV.QTY - .5)*10000
0483 *T21177    REV.UN.COST = INT(REV.AMT / REV.QTY * 10000 -.5)        *T21177    REV.UN.COST = INT(REV.AMT / REV.QTY * 10000 -.5)
0484 REV.UN.COST = INT(REV.AMT / REV.QTY * ADJVAL -.5)  ;*T21177     |  REV.UN.COST = INT(REV.AMT / REV.QTY * ADJVAL -.5);*T21177
0485 CASE  1                                                            CASE  1
0486 REV.UN.COST = 0                                                    REV.UN.COST = 0

0495 DONE = 0                                                           DONE = 0
0496 LOOP                                                               LOOP
0497 UNTIL PTR > MAXL OR DONE = 1 DO                                    UNTIL PTR > MAXL OR DONE = 1 DO
0498 LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING PO.FND E     LOCATE VSTAT.PO<1,VM.NO> IN TVO.PO.NOS<1>,PTR SETTING PO.FND
0499 IF FND THEN                                                        IF FND THEN
0500 *T25755 v                                                       |  *T23499 v
0501 *        TVO.FND.ID = CONO:TVO.PO.NOS<1,PO.FND>:TVO.PO.PROD<1,  |  ***    TVO.FND.ID = CONO:TVO.PO.NOS<1,PO.FND>:TVO.PO.PROD<1,
0502 *        OPO.FND.ID = CONO:VSTAT.PO<1,VM.NO>:OPO.JOB.NO<1,LNO>  |  ***    OPO.FND.ID = CONO:VSTAT.PO<1,VM.NO>:OPO.JOB.NO<1,LNO>
0503 TVO.FND.ID = CONO:TVO.PO.NOS<1,PO.FND>:TVO.PO.PROD<1,PO.FND>:T     TVO.FND.ID = CONO:TVO.PO.NOS<1,PO.FND>:TVO.PO.PROD<1,PO.FND>
0504 OPO.FND.ID = CONO:VSTAT.PO<1,VM.NO>:OPO.JOB.NO<1,LNO>:OPO.PROD     OPO.FND.ID = CONO:VSTAT.PO<1,VM.NO>:OPO.JOB.NO<1,LNO>:OPO.PR

0505 *T25755 ^                                                       |  *T23499 ^
0506 IF TVO.FND.ID = OPO.FND.ID THEN                                    IF TVO.FND.ID = OPO.FND.ID THEN
0507 DONE = 1                                                           DONE = 1
0508 END ELSE                                                           END ELSE
0509 PTR = PO.FND + 1                                                   PTR = PO.FND + 1
0510 DONE = 0                                                           DONE = 0
0511 END                                                                END

0533 END                                                                END
0534 REPEAT                                                             REPEAT
0535 IF XX = 0 THEN LOC = PTR                                           IF XX = 0 THEN LOC = PTR
0536 END                                                                END
0537 *                                                                  *
0538 ACCT.NO = '' ; AP.ACCT=''                                       |  ACCT.NO = '';AP.ACCT=''
0539 MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:OPO.PROD.LINE<1,LNO> T     MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:OPO.PROD.LINE<1,LNO>
0540 IF OPO.ACCRUE = "Y" THEN                                           IF OPO.ACCRUE = "Y" THEN
0541 TEMP.ACCT.ACCRUE=1 ;*T20016.1                                   |  TEMP.ACCT.ACCRUE=1;*T20016.1
0542 ACCT.NO = CAOS.ACCRU.LIAB                                          ACCT.NO = CAOS.ACCRU.LIAB

0543 AP.ACCT = CAOS.AP.ACCT                                             AP.ACCT = CAOS.AP.ACCT
0544 END ELSE                                                           END ELSE
0545 TEMP.ACCT.ACCRUE=0 ;* T20016.1                                  |  TEMP.ACCT.ACCRUE=0;* T20016.1
0546 ACCT.NO = CAOS.APL                                                 ACCT.NO = CAOS.APL
0547 AP.ACCT=CAOS.AP.ACCT                                               AP.ACCT=CAOS.AP.ACCT
0548 END                                                                END
0549 END                                                                END
0550 TVO.PO.DIV<1,LOC> = VPDS.PO.DIV<1,1>                               TVO.PO.DIV<1,LOC> = VPDS.PO.DIV<1,1>
0551 TVO.PO.DEPT<1,LOC> = VPDS.PO.DEPT<1,1>                             TVO.PO.DEPT<1,LOC> = VPDS.PO.DEPT<1,1>

0659 TVO.PO.QTY<1,LOC> = REV.QTY                                        TVO.PO.QTY<1,LOC> = REV.QTY
0660 TVO.PO.VOUCH<1,LOC> = REV.AMT                                      TVO.PO.VOUCH<1,LOC> = REV.AMT
0661 TVO.PO.REC.COUNT<1,LOC> = 1                                        TVO.PO.REC.COUNT<1,LOC> = 1
0662 TVO.AD.TAX.FLG<1,LOC> = VOUCH.NUMBERS<3,LN>                        TVO.AD.TAX.FLG<1,LOC> = VOUCH.NUMBERS<3,LN>
0663 TVO.TAXABLE<1,LOC> = VOUCH.NUMBERS<4,LN>                           TVO.TAXABLE<1,LOC> = VOUCH.NUMBERS<4,LN>
0664 TVO.PO.SEQ<1,LOC> = OPO.PROD.SEQ<1,LNO> ; * T25755              |  *T23499 v
0665                                                                 >  TVO.PO.SEQ<1,LOC> = OPO.PROD.SEQ<1,LNO>
0666                                                                 >  *T23499 ^
0667 PAY.VALUES = "P"                                                   PAY.VALUES = "P"
0668 PAY.VALUES<2> = "P"                                                PAY.VALUES<2> = "P"

0681 OLD.START.LINE=START.LINE                                          OLD.START.LINE=START.LINE
0682 CNT=1                                                              CNT=1
0683 FOR N=START.LINE TO LAST.LINE                                      FOR N=START.LINE TO LAST.LINE
0684 IP=ITEMS(N)                                                        IP=ITEMS(N)
0685 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0686 *T25755 v                                                       |  *T23499 v
0687 *     MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JO  |  **MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.
0688 MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO<1     MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO
0689 *T25755 ^                                                       |  *T23499 ^
0690 MAT VPDS.REC = ''                                                  MAT VPDS.REC = ''

0690 MAT VPDS.REC = ''                                                  MAT VPDS.REC = ''
0691 END                                                                END
0692 MATREAD JOB.REC FROM JOB,CONO:OPO.JOB.NO<1,IP> ELSE                MATREAD JOB.REC FROM JOB,CONO:OPO.JOB.NO<1,IP> ELSE
0693 MAT JOB.REC = ''                                                   MAT JOB.REC = ''
0694 END                                                                END
0695 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "L#3" ; P_OPT = ""           |  P_X  = 0;P_Y = SLN;P_VALUE = N "L#3";P_OPT = ""
0696 P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.JOB.NO<1,IP>   |  P_X  := AM:4;P_Y := AM:SLN;P_VALUE := AM:OPO.JOB.NO<1,IP> "L
0697 *C38073 v                                                       |  P_X  := AM:14;P_Y := AM:SLN;P_VALUE := AM:OPO.PROD.LINE<1,IP
0698 *     P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.PROD.L  |  P_X  := AM:22;P_Y := AM:SLN;P_VALUE := AM:OPO.DVDPCC<1,1,IP>
0699 P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.PROD.LINE<1,  |  P_X  := AM:25;P_Y := AM:SLN;P_VALUE := AM:OPO.DVDPCC<1,2,IP>

0700 *C38073 ^                                                       |  P_X  := AM:28;P_Y := AM:SLN;P_VALUE := AM:OPO.DVDPCC<1,3,IP>
0701 P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.DVDPCC<1,1,I  |  *T23499 v
0702 P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.DVDPCC<1,2,I  |  *P_X  := AM:33;P_Y := AM:SLN;P_VALUE := AM:OPO.OPER.CODE<1,1
0703 P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.DVDPCC<1,3,I  |  *T23499 ^
0704 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0705 IF VOUCH.NUMBERS<6,N> # '' THEN                                    IF VOUCH.NUMBERS<6,N> # '' THEN
0706 P_X  = 33 ; P_Y = SLN ; P_VALUE = VOUCH.NUMBERS<6,N> "L#4" ; P  |  P_X  = 33;P_Y = SLN;P_VALUE = VOUCH.NUMBERS<6,N> "L#4";P_OPT

0705 IF VOUCH.NUMBERS<6,N> # '' THEN                                    IF VOUCH.NUMBERS<6,N> # '' THEN
0706 P_X  = 33 ; P_Y = SLN ; P_VALUE = VOUCH.NUMBERS<6,N> "L#4" ; P  |  P_X  = 33;P_Y = SLN;P_VALUE = VOUCH.NUMBERS<6,N> "L#4";P_OPT
0707 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0708 END ELSE                                                           END ELSE
0709 IF TVO.PO.OPER<1,N> # "" THEN                                      IF TVO.PO.OPER<1,N> # "" THEN
0710 P_X  = 33 ; P_Y = SLN ; P_VALUE = TVO.PO.OPER<1,N>"L#4" ; P_OP  |  P_X  = 33;P_Y = SLN;P_VALUE = TVO.PO.OPER<1,N>"L#4";P_OPT = 
0711 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0712 VOUCH.NUMBERS<6,N>=TVO.PO.OPER<1,N>                                VOUCH.NUMBERS<6,N>=TVO.PO.OPER<1,N>
0713 END ELSE                                                           END ELSE
0714 *T25755 v                                                       |  *T23499 v

0715 *           P_X  = 33 ; P_Y = SLN ; P_VALUE = VPDS.OPER.PERF "  <  
0716 *           CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)               <  
0717 *           VOUCH.NUMBERS<6,N>=VPDS.OPER.PERF                   <  
0718 IF VPDS.OPER.PERF # "" THEN                                        IF VPDS.OPER.PERF # "" THEN
0719 P_X  = 33;P_Y = SLN;P_VALUE = VPDS.OPER.PERF "L#4";P_OPT = ""      P_X  = 33;P_Y = SLN;P_VALUE = VPDS.OPER.PERF "L#4";P_OPT = "
0720 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0721 VOUCH.NUMBERS<6,N>=VPDS.OPER.PERF                                  VOUCH.NUMBERS<6,N>=VPDS.OPER.PERF

0725 VOUCH.NUMBERS<6,N>=OPO.OPER.CODE<1,1,IP>                           VOUCH.NUMBERS<6,N>=OPO.OPER.CODE<1,1,IP>
0726 END                                                                END
0727 *T23499 ^                                                          *T23499 ^
0728 END                                                                END
0729 END                                                                END
0730 P_X  = 39 ; P_Y = SLN ; P_VALUE = OCONV(VPDS.REC.DATE<1,DCOUNT  |  P_X  = 39;P_Y = SLN;P_VALUE = OCONV(VPDS.REC.DATE<1,DCOUNT(V
0731 P_X  := AM:49 ; P_Y := AM:SLN ; P_VALUE := AM:OPO.UOM<1,IP> "R  |  P_X  := AM:49;P_Y := AM:SLN;P_VALUE := AM:OPO.UOM<1,IP> "R#3
0732 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0733 IF VOUCH.NUMBERS<5,N>+0 # 0 THEN                                   IF VOUCH.NUMBERS<5,N>+0 # 0 THEN
0734 P_X  = 54 ; P_Y = SLN ; P_VALUE = OCONV(VOUCH.NUMBERS<5,N>,"MD  |  P_X  = 54;P_Y = SLN;P_VALUE = OCONV(VOUCH.NUMBERS<5,N>,"MD2"

0735 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0736 END ELSE                                                           END ELSE
0737 P_X  = 54 ; P_Y = SLN ; P_VALUE = OCONV("0","MD2") "R#10" ; P_  |  P_X  = 54;P_Y = SLN;P_VALUE = OCONV("0","MD2") "R#10";P_OPT 
0738 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0739 END                                                                END
0740 *CSF 24232 v                                                       *CSF 24232 v
0741 IF FIRST.DISPLAY OR CHANGE.LN = N THEN                             IF FIRST.DISPLAY OR CHANGE.LN = N THEN
0742 IF PAY.FLAG = "O" THEN                                             IF PAY.FLAG = "O" THEN
0743 *CSF 25430 v                                                       *CSF 25430 v

0751 VOUCH.NUMBERS<1,N> = SUM(VPDS.REC.QTY)+VOUCH.NUMBERS<5,N>-SUM(     VOUCH.NUMBERS<1,N> = SUM(VPDS.REC.QTY)+VOUCH.NUMBERS<5,N>-SU
0752 *CSF 24232 v                                                       *CSF 24232 v
0753 IF VPDS.REC.UN.COST<1,1>+0 = 0 THEN VPDS.REC.UN.COST<1,1> = VP     IF VPDS.REC.UN.COST<1,1>+0 = 0 THEN VPDS.REC.UN.COST<1,1> = 
0754 IF VPDS.REC.UN.COST<1,1>+0 = 0 THEN                                IF VPDS.REC.UN.COST<1,1>+0 = 0 THEN
0755 PMSG = 'Enter Unit Cost : '                                        PMSG = 'Enter Unit Cost : '
0756 X=0; Y=22; TYP = 4; SCALER = 4; DEFAULT = OCONV(VPDS.ORD.UN.CO  |  X=0;Y=22;TYP = 4;SCALER = 4;DEFAULT = OCONV(VPDS.ORD.UN.COST
0757 MAXL=9; O.R = 'O'; MAXV="99999999"; MINV = 0; VALDAT = ''       |  MAXL=9;O.R = 'O';MAXV="99999999";MINV = 0;VALDAT = ''
0758 CALL EDIT.SUB                                                      CALL EDIT.SUB
0759 IF VALUE # 'END' THEN VPDS.REC.UN.COST = VALUE                     IF VALUE # 'END' THEN VPDS.REC.UN.COST = VALUE
0760 P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"               |  P_X  = 0;P_Y = 22;P_VALUE = "";P_OPT = "CL"

0770 *         VOUCH.NUMBERS<2,N> = VOUCH.NUMBERS<1,N>*U.PRICE          *         VOUCH.NUMBERS<2,N> = VOUCH.NUMBERS<1,N>*U.PRICE
0771 *CSF 24232 v                                                       *CSF 24232 v
0772 **    DESC.PRICE = VPDS.ORD.UN.COST<1,1>                           **    DESC.PRICE = VPDS.ORD.UN.COST<1,1>
0773 *CSF 24232 ^                                                       *CSF 24232 ^
0774 *         END                                                      *         END
0775 *T23319 v                                                       |  IF OPO.UOM<1,IP> = "M" THEN
0776 BEGIN CASE                                                      <  
0777 CASE OPO.UOM<1,IP> = "M"                                        <  
0778 VOUCH.NUMBERS<2,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<1,N     VOUCH.NUMBERS<2,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<1
0779 VOUCH.NUMBERS<7,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<5,N     VOUCH.NUMBERS<7,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<5

0780 CASE OPO.UOM<1,IP> = "C"                                        |  END ELSE
0781 VOUCH.NUMBERS<2,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<1,N  <  
0782 VOUCH.NUMBERS<7,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS<5,N  <  
0783 CASE 1                                                          <  
0784 VOUCH.NUMBERS<2,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS<1,N     VOUCH.NUMBERS<2,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS<1
0785 VOUCH.NUMBERS<7,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS<5,N     VOUCH.NUMBERS<7,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS<5
0786 END CASE                                                        <  

0787 * IF OPO.UOM<1,IP> = "M" THEN                                   <  
0788 *   VOUCH.NUMBERS<2,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS  <  
0789 *   VOUCH.NUMBERS<7,N> = INT(((DESC.PRICE/1000)*(VOUCH.NUMBERS  <  
0790 * END ELSE                                                      <  
0791 *   VOUCH.NUMBERS<2,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS  <  
0792 *   VOUCH.NUMBERS<7,N> = INT((DESC.PRICE/100) * (VOUCH.NUMBERS  <  
0793 * END                                                           <  

0794 *T23319 ^                                                       <  
0795 END                                                                END
0796                                                                 >  END
0797 *CSF 24232 ^                                                       *CSF 24232 ^
0798 P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(VOUCH.NUMBERS<1,N>,"MD  |  P_X  = 64;P_Y = SLN;P_VALUE = OCONV(VOUCH.NUMBERS<1,N>,"MD2"
0799 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0800 P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = JOB.DESC<1> "L#45" ; P_OPT   |  P_X  = 4;P_Y = SLN+1;P_VALUE = JOB.DESC<1> "L#45";P_OPT = ""

0801 P_X  := AM:66 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(VOUCH.NU  |  P_X  := AM:64;P_Y := AM:SLN+1;P_VALUE := AM:OCONV(VOUCH.NUMB
0802 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0803 CNT=CNT + 1                                                        CNT=CNT + 1
0804 NEXT N                                                             NEXT N
0805 FOR M=CNT TO PAGE.SIZE                                             FOR M=CNT TO PAGE.SIZE
0806 SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
0807 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ;  P_OPT = "CL"   ; *T2460  |  P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"

0808 P_X<2> = 0; P_Y<2> = SLN+1 ; * T24605                           <  
0809 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0810 NEXT M                                                             NEXT M
0811 *                                                                  *
0812 10001                                                              10001 
0813 IF FIRST.DISPLAY THEN                                              IF FIRST.DISPLAY THEN
0814 GOSUB 11000 ;* BUILD ARRAY OF QTY AND AMTS                      |  GOSUB 11000;* BUILD ARRAY OF QTY AND AMTS

0821 *                                                                  *
0822 ***** CALC ORIG AMTS                                               ***** CALC ORIG AMTS
0823 *                                                                  *
0824 11000*                                                             11000* 
0825 *                                                                  *
0826 QTY.ARRAY='' ; AMT.ARRAY=''                                     |  QTY.ARRAY='';AMT.ARRAY=''
0827 FOR N=1 TO LINES                                                   FOR N=1 TO LINES
0828 IP=ITEMS(N)                                                        IP=ITEMS(N)
0829 *T25755 v                                                       |  *T23499 v
0830 *     MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JO  |  **MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.

0831 MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO<1     MATREAD VPDS.REC FROM VEND.PROD.STATS,VPS.KEY:"!":OPO.JOB.NO
0832 *T25755 ^                                                       |  *T23499 ^
0833 MAT VPDS.REC = ''                                                  MAT VPDS.REC = ''
0834 END                                                                END
0835 MATREAD JOB.REC FROM JOB,CONO:OPO.JOB.NO<1,IP> ELSE                MATREAD JOB.REC FROM JOB,CONO:OPO.JOB.NO<1,IP> ELSE
0836 MAT JOB.REC = ''                                                   MAT JOB.REC = ''
0837 END                                                                END
0838 IF PAY.FLAG = "O" THEN                                             IF PAY.FLAG = "O" THEN

0847 *CSF 24232 ^                                                       *CSF 24232 ^
0848 END                                                                END
0849 *CSF 24232 v                                                       *CSF 24232 v
0850 **    DESC.PRICE = VPDS.ORD.UN.COST<1,1>                           **    DESC.PRICE = VPDS.ORD.UN.COST<1,1>
0851 *CSF 24232 ^                                                       *CSF 24232 ^
0852 *T23319 v                                                       |  IF OPO.UOM<1,IP> = "M" THEN
0853 BEGIN CASE                                                      <  
0854 CASE OPO.UOM<1,IP> = "M"                                        <  
0855 AMT.ARRAY<1,N> = INT(((DESC.PRICE/1000)*(QTY.ARRAY<1,N>/100)/1     AMT.ARRAY<1,N> = INT(((DESC.PRICE/1000)*(QTY.ARRAY<1,N>/100)
0856 CASE OPO.UOM<1,IP> = "C"                                        |  END ELSE

0857 AMT.ARRAY<1,N> = INT(((DESC.PRICE/1000)*(QTY.ARRAY<1,N>/100)/1  <  
0858 CASE 1                                                          <  
0859 AMT.ARRAY<1,N> = INT((DESC.PRICE/100) * (QTY.ARRAY<1,N>/100)+.     AMT.ARRAY<1,N> = INT((DESC.PRICE/100) * (QTY.ARRAY<1,N>/100)
0860 END CASE                                                        |  END
0861 * IF OPO.UOM<1,IP> = "M" THEN                                   <  
0862 *  AMT.ARRAY<1,N> = INT(((DESC.PRICE/1000)*(QTY.ARRAY<1,N>/100  <  
0863 * END ELSE                                                      <  

0864 *  AMT.ARRAY<1,N> = INT((DESC.PRICE/100) * (QTY.ARRAY<1,N>/100  <  
0865 * END                                                           <  
0866 *T23319 ^                                                       <  
0867 NEXT N                                                             NEXT N
0868 
0869 *                                                                  *
0870 *                                                                  *

0871 RETURN                                                             RETURN
0872 *                                                                  *
0873 *** ENTER LINE NUMBER                                              *** ENTER LINE NUMBER
0874 70000*                                                             70000* 
0875 GOSUB 10000                                                        GOSUB 10000
0876 ECD.NUM = 15; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""                |  ECD.NUM = 15;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
0877 ECD.ACTION = 4; CALL SCRN.EDIT                                  |  ECD.ACTION = 4;CALL SCRN.EDIT
0878 RETURN                                                             RETURN
0879 ***** CALLS FOR SYSCOM                                             ***** CALLS FOR SYSCOM
0880 91000*                                                             91000* 

0881 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
0882 RETURN                                                             RETURN
0883 92000*                                                             92000* 
0884 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
0885 RETURN                                                             RETURN
0886 93000*                                                             93000* 
0887 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)

0887 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                       |  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
0888 99999*                                                             99999* 
0889 FOR X = 1 TO 75                                                    FOR X = 1 TO 75
0890 SCV.REC(X)<ECD.SCRN.NO> = ""                                       SCV.REC(X)<ECD.SCRN.NO> = ""
0891 NEXT X                                                             NEXT X
0892 ECD.ACTION=99; CALL SCRN.EDIT                                   |  ECD.ACTION=99;CALL SCRN.EDIT
0893 RETURN                                                             RETURN
0894 END                                                                END
0895 
0896 


APSBP/VOUCHER.POST                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.POST
Printed for thompson at 06/28/2006 04:09:10PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JOB           ; *T25824 v                  |  *T24137 v
0003                                                                 >  *COPY>JCS.CPYLIB>COM.JOB
0004 *COPY>JCS.CPYLIB>COM.DAILY.OSP                                     *COPY>JCS.CPYLIB>COM.DAILY.OSP
0005 *COPY>JCS.CPYLIB>COM.JOB.CUTOFF.NO                                 *COPY>JCS.CPYLIB>COM.JOB.CUTOFF.NO
0006 *COPY>JCS.CPYLIB>COM.WIP.LEVEL                                     *COPY>JCS.CPYLIB>COM.WIP.LEVEL
0007 *COPY>PMC.CPYLIB>COM.COMPANY       ; *T25824 ^                  |  *COPY>PMC.CPYLIB>COM.COMPANY
0008                                                                 >  *T24137 ^

0029 * 10/11/95 Bob Sherer TASK 19406 - ADD OWNING DIVISION TO VOUC     * 10/11/95 Bob Sherer TASK 19406 - ADD OWNING DIVISION TO VO
0030 * C25587 GAT 04/26/96 * ALLOW FOR MISC PO ON THE FLY.              * C25587 GAT 04/26/96 * ALLOW FOR MISC PO ON THE FLY.
0031 *T20924 lanny 08/29/1996 * Pass to JCS the unit-cost assoc wit     *T20924 lanny 08/29/1996 * Pass to JCS the unit-cost assoc w
0032 *                          receipt.                                *                          receipt.
0033 *T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS A      *T23175 gat 08/12/1998 * FIX "AS" NOW RESERVED WORD USED AS 
0034 *T23319 alex 08/14/2000 * Fix calculation of UOM Type' "C", it  |  *T23499 rick 08/26/1999 * Modify pgm to work with new Outsid
0035 *                         defaulting to a type "EA" for outsid  |  *T24135 jamesf 11/16/1999 * Adding code to decrease vps.unpo
0036 *T25755 cm 04/19/2001 * Modify pgm to work with new OUTSIDE.PO  |  *                           in VEND.PO.STATS by the same amo
0037 *T25759 edwin 05/15/2001 * Added remittance comments.           |  *                           added to vps.vou.qty.  This keep
0038 *T25824 edwin 06/10/2001 * Added Vouchering for Non-Primac POs  |  *                           total of posted and unposted qua

0039 *T26322 cmykleb 12/04/2001 * Manual pay uses 00 (GEN.DIV) as t  |  *                           have been allocated.
0040 *                            number and it should use the divi  |  *T24137 lanny 04/25/2000 * Post NON-PRIMAC PO's
0041 *                            from the voucher TVO.DIV.OWNER.    <  
0042 *T23880 lross 10/16/2002 * Include offset acct in ALH record f     *T23880 lross 10/16/2002 * Include offset acct in ALH record
0043 *                          PO's.                                   *                          PO's.
0044 *T28678 lross 09/23/2005 * Rounding problem on OSP.             <  
0045 *T28786 lross 02/02/2006 * Multiple acct dist lines for Accrue  <  

0046 *                          Acct should update file.             <  
0047 *T28779 lross 02/07/2006 * Retain identity of multiple same Pr  <  
0048 *                          lines.                               <  
0049 **************************************************************     ************************************************************
0050 *                                                                  *
0051 *--- INSERT FILES EQUATES                                          *--- INSERT FILES EQUATES
0052 *                                                                  *

0133 OPEN 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE     OPEN 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FI
0134 OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MISSI     OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE MIS
0135 OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGORY.     OPEN 'CATEGORY.MISC' TO CATEGORY.MISC ELSE ERRMSG = 'CATEGOR
0136 OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 'A     OPEN 'ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 
0137 OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS M     OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS
0138 *T25824 v                                                       |  * T24137 v Open Files that are needed for this mod
0139 OPEN "DIVISION" TO DIVISION ELSE ERRMSG = "DIVISION FILE MISSI  |  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE 
0140 OPEN "DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "DEPARTMENT FILE  |  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT
0141 OPEN "COST.CNTR" TO COST.CNTR ELSE ERRMSG = "COST.CNTR FILE MI  |  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FI
0142 OPEN "OPERATION" TO OPERATION ELSE ERRMSG = "OPERATION FILE MI  |  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FI

0143 OPEN "COST.CNTR.WIP" TO COST.CNTR.WIP ELSE ERRMSG = "COST.CNTR  |  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST
0144 OPEN "FOH.TABLE" TO FOH.TABLE ELSE ERRMSG = "FOH.TABLE FILE MI  |  OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG = 'FOH.TABLE FI
0145 OPEN "PROD.STATS" TO PROD.STATS ELSE ERRMSG = "PROD.STATS FILE  |  OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG = 'PROD.STATS
0146 OPEN "SPOIL.STATS" TO SPOIL.STATS ELSE ERRMSG = "SPOIL.STATS F  |  OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG = 'SPOIL.ST
0147 OPEN "JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG = "JOB.STAT.  |  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.
0148 *T25824 ^                                                       |  *T24137 ^
0149 *                                                                  *

0150 *                                                               <  
0151 *--- INIT                                                          *--- INIT
0152 *                                                                  *
0153 MAT VEND.REC = '' ; MAT VCH.REC = '' ; MAT OAP.REC = '' ; MAT      MAT VEND.REC = '' ; MAT VCH.REC = '' ; MAT OAP.REC = '' ; MA
0154 MAT HDCK.REC = '' ; MAT APCK.REC = ''; MAT RPR.REC = '' ; MAT      MAT HDCK.REC = '' ; MAT APCK.REC = ''; MAT RPR.REC = '' ; MA
0155 GEN.DIV = "00"; GEN.DEPT = "00"; GEN.CCTR = "000"                  GEN.DIV = "00"; GEN.DEPT = "00"; GEN.CCTR = "000"
0156 TODAY = DATE()                                                     TODAY = DATE()

0157                                                                 >  UNPOST.CNT = "" ;     * T24137
0158                                                                 >  REJECT.LIST = "";     * T24137
0159 ACCRUE.OFFACCT='' ;*T23880                                         ACCRUE.OFFACCT='' ;*T23880
0160 *T25824 v                                                       <  
0161 UNPOST.CNT = ""                                                 <  
0162 REJECT.LIST = ""                                                <  
0163 *T25824 ^                                                       <  

0167 READNEXT VOU.ID ELSE GOTO 99999                                    READNEXT VOU.ID ELSE GOTO 99999
0168 CONO = VOU.ID[1,3]                                                 CONO = VOU.ID[1,3]
0169 MATREAD GLTABLE.REC FROM CONTROL , CONO:"GLTABLE" ELSE             MATREAD GLTABLE.REC FROM CONTROL , CONO:"GLTABLE" ELSE
0170 ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE" ; GOTO 93000       ERRMSG = "GLTABLE IS MISSING FROM CONTROL FILE" ; GOTO 93000
0171 END                                                                END
0172 VOU.NO = VOU.ID[4,99]                                           |  *T24137 v
0173 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999             |  MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" EL
0174 IF CO.FAS = "Y" THEN                                            <  
0175 OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE I  <  
0176 OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSING  <  

0177 END                                                             <  
0178 *T25824 v                                                       <  
0179 MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELSE   <  
0180 MAT JOB.CUTOFF.REC = ''                                            MAT JOB.CUTOFF.REC = ''
0181 J.CUTOFF.NUM = 0                                                   J.CUTOFF.NUM = 0
0182 END                                                                END
0183 MATREAD WIP.LEVEL.REC FROM CONTROL,CONO:"WIP.LEVEL" ELSE        |  MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE

0184 MAT WIP.LEVEL.REC = ""                                             MAT WIP.LEVEL.REC = ""
0185 WLR.OS.COST = 2 ; WLR.OS.WIP = 2                                |  WLR.OS.COST = 2; WLR.OS.WIP = 2
0186 END                                                                END
0187 READV POSTING.MON FROM CONTROL,CONO:"APVFISCAL",1 ELSE          |  READV POSTING.MON FROM CONTROL, CONO:"APVFISCAL",1 ELSE
0188 ERRMSG = "CANNOT LOCATE CONTROL FISCAL RECORD"                  |  ERRMSG='CANNOT LOCATE CONTROL FISCAL RECORD'
0189 GOTO 93000                                                         GOTO 93000
0190 END                                                                END
0191 *T25824 ^                                                       |  *T24137 ^

0192                                                                 >  VOU.NO = VOU.ID[4,99]
0193                                                                 >  MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
0194                                                                 >  IF CO.FAS = "Y" THEN
0195                                                                 >  OPEN '','EQUIP.FILE' TO EQUIP.FILE ELSE ERRMSG = 'EQUIP.FILE
0196                                                                 >  OPEN '','REPAIRS' TO REPAIRS ELSE ERRMSG = 'REPAIRS IS MISSI
0197                                                                 >  END
0198 GOSUB 1000                                                         GOSUB 1000

0271 MAT APCK.REC = ""                                                  MAT APCK.REC = ""
0272 APCK.VEND = TVO.VEND                                               APCK.VEND = TVO.VEND
0273 APCK.DATE = TVO.PAID.DATE                                          APCK.DATE = TVO.PAID.DATE
0274 APCK.AMT = 0                                                       APCK.AMT = 0
0275 APCK.CODE = "P"                                                    APCK.CODE = "P"
0276 *T26322 v                                                       |  APCK.DIV = GEN.DIV
0277 *        APCK.DIV = GEN.DIV                                     <  
0278 APCK.DIV = TVO.DIV.OWNER                                        <  
0279 *T26322 ^                                                       <  
0280 APCK.DEPT = GEN.DEPT                                               APCK.DEPT = GEN.DEPT

0548 * TASK 17180                                                       * TASK 17180
0549 OAP.DSC = TVO.DSC.AMT                                              OAP.DSC = TVO.DSC.AMT
0550 OAP.FRT = TVO.FRT.AMT                                              OAP.FRT = TVO.FRT.AMT
0551 OAP.TAX = TVO.TAX.AMT                                              OAP.TAX = TVO.TAX.AMT
0552 OAP.MSC = TVO.MSC.AMT                                              OAP.MSC = TVO.MSC.AMT
0553 OAP.REM.COMM = TVO.REM.COMM ; *T25759                           <  
0554 * TASK 17919                                                       * TASK 17919
0555 OAP.AP.ACCT = TVO.AP.ACCT                                          OAP.AP.ACCT = TVO.AP.ACCT
0556 ACNT=DCOUNT(TVO.AP.ACCT,VM)                                        ACNT=DCOUNT(TVO.AP.ACCT,VM)
0557 FOR AA=1 TO ACNT                                                   FOR AA=1 TO ACNT

0742 VVOS.PO.NO = TVO.PO.NOS                                            VVOS.PO.NO = TVO.PO.NOS
0743 VVOS.PROD = TVO.PO.PROD                                            VVOS.PROD = TVO.PO.PROD
0744 VVOS.PROD.DESC = TVO.PROD.DESC                                     VVOS.PROD.DESC = TVO.PROD.DESC
0745 VVOS.U.M = TVO.PO.UM                                               VVOS.U.M = TVO.PO.UM
0746 VVOS.WHSE = TVO.PO.WHSE                                            VVOS.WHSE = TVO.PO.WHSE
0747 *T25755 v                                                       |  *T23499 v
0748 *T28779 IF TVO.PO.TYPE = "O" THEN                               |  IF TVO.PO.TYPE = "O" THEN
0749 IF TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R' THEN                  <  
0750 VVOS.PO.SEQ = TVO.PO.SEQ                                           VVOS.PO.SEQ = TVO.PO.SEQ
0751 END                                                                END

0752 *T25755 ^                                                       |  *T23499 ^
0753 VVOS.VOU.QTY = TVO.PO.QTY                                          VVOS.VOU.QTY = TVO.PO.QTY
0754 * 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTSID     * 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTS
0755 VVOS.VOU.UN.COST = TVO.PO.U.COST                                   VVOS.VOU.UN.COST = TVO.PO.U.COST
0756 VVOS.PROD.COST = TVO.PO.VOUCH                                      VVOS.PROD.COST = TVO.PO.VOUCH
0757 VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE                     VSTAT.KEY = CONO:TVO.VEND<1,1>:"!":TVO.PO.TYPE
0758 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.R     MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT

0841 CASE 1                                                             CASE 1
0842 LOCATE TVO.PO.PROD<1,UA> IN VPS.PROD<1>,PTR SETTING PRFND ELSE     LOCATE TVO.PO.PROD<1,UA> IN VPS.PROD<1>,PTR SETTING PRFND EL
0843 VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA>                              VPS.PROD<1,PRFND> = TVO.PO.PROD<1,UA>
0844 VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA>                       VPS.PROD.DESC<1,PRFND> = TVO.PROD.DESC<1,UA>
0845 VPS.U.M<1,PRFND> = TVO.PO.UM<1,UA>                                 VPS.U.M<1,PRFND> = TVO.PO.UM<1,UA>
0846 *T25755 v                                                       |  *T23499 v
0847 *                       VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>   |  IF TVO.PO.TYPE = "O" THEN
0848 *T28779       IF TVO.PO.TYPE = 'O' THEN                         <  
0849 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  <  
0850 VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>         VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>

0849 IF TVO.PO.TYPE = 'O' OR TVO.PO.TYPE = 'R' THEN                  <  
0850 VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>         VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA>
0851 END ELSE                                                           END ELSE
0852 VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>                              VPS.WHSE<1,PRFND> = TVO.PO.WHSE<1,UA>
0853 END                                                                END
0854 *T25755 ^                                                       |  *T23499 ^
0855 VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA>                             VPS.SEQ.NO<1,PRFND> = TVO.SEQ.NO<1,UA>
0856 END                                                                END
0857 END CASE                                                           END CASE
0858 *T25755 v                                                       |  *T23499 v

0859 *              IF TVO.PO.WHSE<1,UA> = VPS.WHSE<1,PRFND> AND VP  <  
0860 BUMP.PTR=1                                                         BUMP.PTR=1
0861 *T28779 IF TVO.PO.TYPE = "O" THEN                               |  IF TVO.PO.TYPE = "O" THEN
0862 IF TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R' THEN                  <  
0863 IF TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA> = VPS.WHSE<1,PRFND>      IF TVO.PO.WHSE<1,UA>:"@":TVO.PO.SEQ<1,UA> = VPS.WHSE<1,PRFND
0864 BUMP.PTR=0                                                         BUMP.PTR=0
0865 END                                                                END

0867 IF TVO.PO.WHSE<1,UA> = VPS.WHSE<1,PRFND> AND VPS.PROD.DESC<1,P     IF TVO.PO.WHSE<1,UA> = VPS.WHSE<1,PRFND> AND VPS.PROD.DESC<1
0868 BUMP.PTR=0                                                         BUMP.PTR=0
0869 END                                                                END
0870 END                                                                END
0871 IF NOT(BUMP.PTR) THEN                                              IF NOT(BUMP.PTR) THEN
0872 *T25755 ^                                                       |  *T23499 ^
0873 PTR = 0                                                            PTR = 0
0874 END ELSE                                                           END ELSE
0875 PTR = PRFND + 1                                                    PTR = PRFND + 1
0876 END                                                                END

0875 PTR = PRFND + 1                                                    PTR = PRFND + 1
0876 END                                                                END
0877 WHILE PTR DO                                                       WHILE PTR DO
0878 REPEAT                                                             REPEAT
0879 VPS.VOU.QTY<1,PRFND> = VPS.VOU.QTY<1,PRFND> + TVO.PO.QTY<1,UA>     VPS.VOU.QTY<1,PRFND> = VPS.VOU.QTY<1,PRFND> + TVO.PO.QTY<1,U
0880                                                                 >  *T24135 v
0881                                                                 >  LOCATE VOU.NO IN VPS.UNPOST.VOU.NO<1,PRFND>,1 SETTING VFND T
0882                                                                 >  DEL VPS.UNPOST.VOU.NO<1,PRFND,VFND>
0883                                                                 >  DEL VPS.UNPOST.VOU.QTY<1,PRFND,VFND>
0884                                                                 >  END

0885                                                                 >  *T24135 ^
0886 VPS.VOU.AMT<1,PRFND> = VPS.VOU.AMT<1,PRFND> + TVO.PO.VOUCH<1,U     VPS.VOU.AMT<1,PRFND> = VPS.VOU.AMT<1,PRFND> + TVO.PO.VOUCH<1
0887 * 16414 *                                                          * 16414 *
0888 * DLG 05/01/92 - WE WILL ADD ALL VOUCHER $ FOR RECEIPTS TO REC     * DLG 05/01/92 - WE WILL ADD ALL VOUCHER $ FOR RECEIPTS TO R
0889 * (BUT NOT THE QUANTITY - IT WAS ALREADY POSTED IN JCS FOR PRE     * (BUT NOT THE QUANTITY - IT WAS ALREADY POSTED IN JCS FOR P
0890 IF TVO.PO.TYPE = "O" THEN                                          IF TVO.PO.TYPE = "O" THEN
0891 *CLS 2/95 - REC AMT SHOULD BE CALC INSTEAD OF ASSUMING VOUCHER     *CLS 2/95 - REC AMT SHOULD BE CALC INSTEAD OF ASSUMING VOUCH

0894 *        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.VO     *        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.
0895 *      END ELSE                                                    *      END ELSE
0896 *        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.VO     *        VPS.REC.AMT<1,PRFND>=VPS.REC.AMT<1,PRFND> + TVO.PO.
0897 END                                                                END
0898 IF TVO.PO.TYPE = "O" THEN                                          IF TVO.PO.TYPE = "O" THEN
0899 *T23319 v                                                       |  IF TVO.PO.UM<1,UA> = "M" THEN
0900 BEGIN CASE                                                      <  
0901 CASE TVO.PO.UM<1,UA> = "M"                                      <  
0902 ADJVAL = 10000000                                                  ADJVAL = 10000000
0903 CASE TVO.PO.UM<1,UA> = "C"                                      |  END ELSE

0904 ADJVAL = 1000000                                                <  
0905 CASE 1                                                          <  
0906 ADJVAL = 10000                                                     ADJVAL = 10000
0907 END CASE                                                        |  END
0908 * IF TVO.PO.UM<1,UA> = "M" THEN                                 <  
0909 *   ADJVAL = 10000000                                           <  
0910 * END ELSE                                                      <  

0911 *   ADJVAL = 10000                                              <  
0912 * END                                                           <  
0913 *T23319 ^                                                       <  
0914 END ELSE ADJVAL = 10000                                            END ELSE ADJVAL = 10000
0915 *     REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA>/     *     REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA
0916 REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA>/ADJVAL     REC.AMT = ((TVO.REC.QTY<1,UA>/100)*(TVO.PO.U.COST<1,UA>/ADJV
0917 VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + REC.AMT              VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + REC.AMT

0917 VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + REC.AMT              VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + REC.AMT
0918 END                                                                END
0919 LOCATE VOU.ID[4,99] IN VPS.VOU.NO<1,PRFND>,1 SETTING VVFND ELS     LOCATE VOU.ID[4,99] IN VPS.VOU.NO<1,PRFND>,1 SETTING VVFND E
0920 VPS.VOU.NO<1,PRFND,VVFND> = VOU.ID[4,99]                           VPS.VOU.NO<1,PRFND,VVFND> = VOU.ID[4,99]
0921 END                                                                END
0922 *T25755 v                                                       |  IF TVO.PO.TYPE = "M" THEN
0923 *           IF TVO.PO.TYPE = "M" THEN                           <  
0924 *              VPDS.KEY = VPS.KEY:"!":TVO.SEQ.NO<1,UA>:"!":TVO  <  
0925 *           END ELSE                                            <  
0926 *              VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TV  <  

0927 *           END                                                 <  
0928 BEGIN CASE                                                      <  
0929 CASE TVO.PO.TYPE = "M"                                          <  
0930 VPDS.KEY = VPS.KEY:"!":TVO.SEQ.NO<1,UA>:"!":TVO.PO.WHSE<1,UA>      VPDS.KEY = VPS.KEY:"!":TVO.SEQ.NO<1,UA>:"!":TVO.PO.WHSE<1,UA
0931 *T28779 CASE TVO.PO.TYPE = "O"                                  |  END ELSE
0932 CASE TVO.PO.TYPE = "O" OR TVO.PO.TYPE = 'R'                     |  *T23499 v
0933                                                                 >  IF TVO.PO.TYPE = "O" THEN

0934 VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,UA>     VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,U
0935 CASE 1                                                          |  END ELSE
0936                                                                 >  *T23499 ^
0937 VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,UA>     VPDS.KEY = VPS.KEY:"!":TVO.PO.PROD<1,UA>:"!":TVO.PO.WHSE<1,U
0938 END CASE                                                        |  END
0939 *T25755 ^                                                       |  END
0940 MATREADU VPDS.REC FROM VEND.PROD.STATS , VPDS.KEY ELSE MAT VPD     MATREADU VPDS.REC FROM VEND.PROD.STATS , VPDS.KEY ELSE MAT V
0941 *CSF 24232 v MOVE FOLLOWING LINES TO BEFORE VOU DATA BELOW.        *CSF 24232 v MOVE FOLLOWING LINES TO BEFORE VOU DATA BELOW.

0969 * 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTSID     * 16414 - DLG 04/29/92 TO MAKE UN.COST TOTAL AMOUNT FOR OUTS
0970 VPDS.UN.COST<1,VPFND,VOU.LOC> = TVO.PO.U.COST<1,UA>                VPDS.UN.COST<1,VPFND,VOU.LOC> = TVO.PO.U.COST<1,UA>
0971 VPDS.PERIOD<1,VPFND,VOU.LOC> = TVO.MON                             VPDS.PERIOD<1,VPFND,VOU.LOC> = TVO.MON
0972 VPDS.ENT.FLG<1,VPFND,VOU.LOC> = TVO.ENT.FLG<1,UA>                  VPDS.ENT.FLG<1,VPFND,VOU.LOC> = TVO.ENT.FLG<1,UA>
0973 VPDS.QTY<1,VPFND,VOU.LOC> = VPDS.QTY<1,VPFND,VOU.LOC> + TVO.PO     VPDS.QTY<1,VPFND,VOU.LOC> = VPDS.QTY<1,VPFND,VOU.LOC> + TVO.
0974 *T25824 v                                                       <  
0975 IF TVO.PO.TYPE = 'N' THEN GOSUB 2000                               IF TVO.PO.TYPE = 'N' THEN GOSUB 2000
0976 *T25824 ^                                                       |  IF @LOGNAME = 'cmykleb' THEN DEBUG
0977                                                                 >  *
0978 MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY                         MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY

0996 DOS.PO = TVO.PO.NOS<1,UA>                                          DOS.PO = TVO.PO.NOS<1,UA>
0997 DOS.INV = TVO.INV                                                  DOS.INV = TVO.INV
0998 DOS.INV.DATE = TVO.INV.DATE                                        DOS.INV.DATE = TVO.INV.DATE
0999 DOS.DUE.DATE = TVO.DUE.DATE                                        DOS.DUE.DATE = TVO.DUE.DATE
1000 DOS.DATE = TODAY                                                   DOS.DATE = TODAY
1001 DOS.QTY = TVO.REC.QTY<1,UA>                                     |  *T24135 v
1002                                                                 >  *     DOS.QTY = TVO.REC.QTY<1,UA>
1003                                                                 >  *T24135 ^
1004 DOS.GRS.AMT = TVO.JOB.AMT<1,UA,J>                                  DOS.GRS.AMT = TVO.JOB.AMT<1,UA,J>
1005 *T20924 v                                                          *T20924 v

1006 DOS.UOM = TVO.PO.UM<1,UA>                                          DOS.UOM = TVO.PO.UM<1,UA>
1007 IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678  <  
1008 IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN                        IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN
1009 *T23319 v                                                       |  IF DOS.UOM = 'M' THEN
1010 BEGIN CASE                                                      |  DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
1011 CASE DOS.UOM = 'M'                                              |  END ELSE
1012 *T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000  |  DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
1013 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + ROND)    <  

1014 CASE DOS.UOM = 'C'                                              <  
1015 *T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000  <  
1016 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + ROND)     <  
1017 CASE 1                                                          <  
1018 *T28678       DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000  <  
1019 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + ROND)       <  
1020 END CASE                                                        <  

1021 * IF DOS.UOM = 'M' THEN                                         <  
1022 *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)  <  
1023 * END ELSE                                                      <  
1024 *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)     <  
1025 * END                                                           <  
1026 *T23319 ^                                                       <  
1027 END                                                                END

1028                                                                 >  END
1029 *T20924 ^                                                          *T20924 ^
1030 DOS.MER.AMT = TVO.JOB.AMT<1,UA,J>                                  DOS.MER.AMT = TVO.JOB.AMT<1,UA,J>
1031 DOS.DSC.AMT = 0                                                    DOS.DSC.AMT = 0
1032 DOS.DESC = ''                                                      DOS.DESC = ''
1033 DOS.PRD.LINE = TVO.PO.PRD.LINE<1,UA>                               DOS.PRD.LINE = TVO.PO.PRD.LINE<1,UA>
1034 DOS.INIT = ''                                                      DOS.INIT = ''

1035 DOS.SALE.AMT = 0                                                   DOS.SALE.AMT = 0
1036 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.PRD.LINE<1,UA>     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.PRD.LINE<1,U
1037 MAT CAOS.REC = ''                                                  MAT CAOS.REC = ''
1038 END                                                                END
1039 IF NUM(CAOS.FOH.PCT) THEN                                          IF NUM(CAOS.FOH.PCT) THEN
1040 *T28678   DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/100  |  DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + .
1041 DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + RON  |  DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + 
1042 *T28678   DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE  <  
1043 DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + RO  <  
1044 END                                                                END

1055 OSP.ENT.SEQ=OSP.ENT.SEQ + 1                                        OSP.ENT.SEQ=OSP.ENT.SEQ + 1
1056 WRITE OSP.ENT.SEQ ON CONTROL , CONO:"DAILY.OSP"                    WRITE OSP.ENT.SEQ ON CONTROL , CONO:"DAILY.OSP"
1057 MATWRITE DOS.REC ON DAILY.OSP, CONO:DOS.SEQ.NO                     MATWRITE DOS.REC ON DAILY.OSP, CONO:DOS.SEQ.NO
1058 NEXT J                                                             NEXT J
1059 * Task 17919                                                       * Task 17919
1060 * Update Accrued Liability History                              |  * Upate Accrued Liability History
1061 ACC.WORK.DIV=GEN.DIV ; ACC.WORK.DEPT=GEN.DEPT ; ACC.WORK.CCTR=     ACC.WORK.DIV=GEN.DIV ; ACC.WORK.DEPT=GEN.DEPT ; ACC.WORK.CCT
1062 BEGIN CASE                                                         BEGIN CASE
1063 CASE TVO.PO.TYPE = "R"                                             CASE TVO.PO.TYPE = "R"
1064 MATREAD PO.REC FROM PO, CONO:TVO.PO.NOS<1,UA> ELSE MAT PO.REC=     MATREAD PO.REC FROM PO, CONO:TVO.PO.NOS<1,UA> ELSE MAT PO.RE

1086 CASE 1                                                             CASE 1
1087 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,UA> ELSE MA     MATREAD OPO.REC FROM OUTSIDE.PO, CONO:TVO.PO.NOS<1,UA> ELSE 
1088 POPTR = 1                                                          POPTR = 1
1089 LOOP                                                               LOOP
1090 LOCATE TVO.PO.PROD<1,UA> IN OPO.JOB.NO<1>,POPTR SETTING POFND      LOCATE TVO.PO.PROD<1,UA> IN OPO.JOB.NO<1>,POPTR SETTING POFN
1091 *T25755 v                                                       |  *T23499 v
1092 *                       IF TVO.PO.WHSE<1,UA> = OPO.PROD.LINE<1  |  ***          IF TVO.PO.WHSE<1,UA> = OPO.PROD.LINE<1,POFND> T
1093 IF TVO.PO.SEQ<1,UA> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0         IF TVO.PO.SEQ<1,UA> = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
1094 *T25755 ^                                                       |  *T23499 ^
1095 END ELSE                                                           END ELSE

1117 ALH.ID = CONO:STR("0",6-LEN(ALH.CT)):ALH.CT                        ALH.ID = CONO:STR("0",6-LEN(ALH.CT)):ALH.CT
1118 ALH.DATE = TODAY                                                   ALH.DATE = TODAY
1119 ALH.REF = ACCRUE.REF                                               ALH.REF = ACCRUE.REF
1120 ALH.SRC = ACCRUE.SRC                                               ALH.SRC = ACCRUE.SRC
1121 ALH.MON = TVO.MON                                                  ALH.MON = TVO.MON
1122 *T28786 v                                                       |  ALH.AMT = TVO.PO.VOUCH<1,UA>
1123 *       ALH.AMT = TVO.PO.VOUCH<1,UA>                            <  
1124 FOR AC = 1 TO TVO.CTR                                           <  
1125 IF TVO.ACCT<1,AC> = ACCRUE.ACCT THEN                            <  
1126 ALH.AMT += TVO.DIST.AMT<1,AC>                                   <  

1127 END                                                             <  
1128 NEXT AC                                                         <  
1129 *T28786 ^                                                       <  
1130 ALH.ACCT = ACCRUE.ACCT                                             ALH.ACCT = ACCRUE.ACCT
1131 ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK.C     ALH.DV.DP.CC = ACC.WORK.DIV"R%2":ACC.WORK.DEPT"R%2":ACC.WORK
1132 ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880                             ALH.OFF.ACCT = ACCRUE.OFFACCT ;*T23880
1133 MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID                       MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID

1153 DELETE TEMP.VOUCHERS , VOU.ID                                      DELETE TEMP.VOUCHERS , VOU.ID
1154 * 16414                                                            * 16414
1155 *     DELETE ADD.TEMP.VOUCHER.INFO, VOU.ID                         *     DELETE ADD.TEMP.VOUCHER.INFO, VOU.ID
1156 1999                                                               1999 
1157 RETURN                                                             RETURN
1158 *T25824 v                                                       |  *T24137 v
1159 **********************************                                 **********************************
1160 2000 * Udpate job for Outside PO *                                 2000 * Udpate job for Outside PO *
1161 **********************************                                 **********************************
1162 *                                                                  *

1191 DOS.PO = TVO.PO.NOS<1,UA>                                          DOS.PO = TVO.PO.NOS<1,UA>
1192 DOS.INV = TVO.INV                                                  DOS.INV = TVO.INV
1193 DOS.INV.DATE = TVO.INV.DATE                                        DOS.INV.DATE = TVO.INV.DATE
1194 DOS.DUE.DATE = TVO.DUE.DATE                                        DOS.DUE.DATE = TVO.DUE.DATE
1195 DOS.DATE = TODAY                                                   DOS.DATE = TODAY
1196 IF @LOGNAME='lross' THEN DEBUG                                  <  
1197 DOS.QTY = TVO.PO.QTY<1,UA>   ; * T24137 changed from REC.QTY t     DOS.QTY = TVO.PO.QTY<1,UA>   ; * T24137 changed from REC.QTY
1198 DOS.GRS.AMT = TVO.PO.VOUCH<1,UA>                                   DOS.GRS.AMT = TVO.PO.VOUCH<1,UA>
1199 IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678  <  
1200 DOS.UOM = TVO.PO.UM<1,UA>                                          DOS.UOM = TVO.PO.UM<1,UA>

1201 IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN                        IF DOS.GRS.AMT+0 # 0 AND DOS.QTY+0 # 0 THEN
1202 *T28678 *T23319 v                                               |  IF DOS.UOM = 'M' THEN
1203 BEGIN CASE                                                      |  DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
1204 CASE DOS.UOM = 'M'                                              |  END ELSE
1205 *T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) +   |  DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
1206 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + ROND)    <  
1207 CASE DOS.UOM = 'C'                                              <  
1208 *T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + .  <  

1209 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + ROND)     <  
1210 CASE 1                                                          <  
1211 *T28678DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)  <  
1212 DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + ROND)       <  
1213 END CASE                                                        <  
1214 * IF DOS.UOM = 'M' THEN                                         <  
1215 *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)  <  

1216 * END ELSE                                                      <  
1217 *   DOS.U.PRICE = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)     <  
1218 * END                                                           <  
1219 *T28678 ^                                                       <  
1220 END                                                                END
1221                                                                 >  END
1222                                                                 >  * PO.LINE.NO = TVO.SEQ.NO<1,UA>

1229 DOS.SALE.AMT = 0                                                   DOS.SALE.AMT = 0
1230 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.WHSE<1,UA> ELS     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:TVO.PO.WHSE<1,UA> E
1231 MAT CAOS.REC = ''                                                  MAT CAOS.REC = ''
1232 END                                                                END
1233 IF NUM(CAOS.FOH.PCT) THEN                                          IF NUM(CAOS.FOH.PCT) THEN
1234 *T28678  DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/1000  |  DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + .
1235 DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + RON  |  DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + 
1236 *T28678  DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.  <  
1237 DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + RO  <  
1238 END                                                                END

1262 VPDS.REC.DATE<1,JFND> = DOS.DATE                                   VPDS.REC.DATE<1,JFND> = DOS.DATE
1263 VPDS.REC.QTY<1,JFND> = 0                                           VPDS.REC.QTY<1,JFND> = 0
1264 VPDS.REC.UN.COST<1,JFND> = 0                                       VPDS.REC.UN.COST<1,JFND> = 0
1265 END                                                                END
1266 VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + DOS.QTY              VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + DOS.QTY
1267                                                                 >  *LMR  VPDS.REC.UN.COST<1,JFND> = VPDS.REC.UN.COST<1,JFND> + 
1268 VPDS.REC.UN.COST<1,JFND> = VPDS.REC.UN.COST<1,JFND> + DOS.U.PR     VPDS.REC.UN.COST<1,JFND> = VPDS.REC.UN.COST<1,JFND> + DOS.U.
1269 VPS.REC.QTY<1,PRFND> = VPS.REC.QTY<1,PRFND> + DOS.QTY              VPS.REC.QTY<1,PRFND> = VPS.REC.QTY<1,PRFND> + DOS.QTY
1270 VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + DOS.GRS.AMT          VPS.REC.AMT<1,PRFND> = VPS.REC.AMT<1,PRFND> + DOS.GRS.AMT
1271 VSTAT.PO.RECV<1,POFND> = VSTAT.PO.RECV<1,POFND> + DOS.GRS.AMT      VSTAT.PO.RECV<1,POFND> = VSTAT.PO.RECV<1,POFND> + DOS.GRS.AM

1294 PRINT;PRINT                                                        PRINT;PRINT
1295 NEXT I                                                             NEXT I
1296 PRINTER OFF                                                        PRINTER OFF
1297 PRINTER CLOSE                                                      PRINTER CLOSE
1298 RETURN                                                             RETURN
1299 *T25824 ^                                                       |  *T24137 ^
1300 *                                                                  *
1301 91000*                                                             91000*
1302 ERR.TYPE = 1                                                       ERR.TYPE = 1
1303 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

1309 93000*                                                             93000*
1310 ERR.TYPE = 3                                                       ERR.TYPE = 3
1311 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
1312 *** END OF PROCESS                                                 *** END OF PROCESS
1313 99999*                                                             99999*
1314 *T25824 v    Print reject listing for job transactions that di  |  * T24137 v Print reject listing for job transactions that di
1315 IF REJECT.LIST NE "" THEN GOSUB 5000                               IF REJECT.LIST NE "" THEN GOSUB 5000
1316 *T25824 ^                                                       |  * T24137 ^
1317 END                                                                END
1318 


APSBP/VOUCHER.REG.PO                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VOUCHER.REG.PO
Printed for thompson at 06/28/2006 04:09:11PM

0018 * T19149 RKB 05/01/95 add support for credit div,dept,cctr         * T19149 RKB 05/01/95 add support for credit div,dept,cctr
0019 * T19406 CT6 11/03/95 divisionalize, POs must have same div as     * T19406 CT6 11/03/95 divisionalize, POs must have same div 
0020 *T20016 RKB 01/29/96 add support to get div from po line wareh     *T20016 RKB 01/29/96 add support to get div from po line war
0021 *T20016.1 RKB 02/06/96 add restriction to edit of accr acct ac     *T20016.1 RKB 02/06/96 add restriction to edit of accr acct 
0022 *                      cctr.                                       *                      cctr.
0023 *FIX001 RKB 04/16/96 Fix reference to CATG.INV change to OLD.A  |  *FIX001 RKB 04/16/96 FIX REFERENCE TO CATG.INV CHG TO OLD.AC
0024 *                    problem was causing the credit side of th  |  *          was causing the credit side of the accounting to 
0025 *                    distribution to get out of whack.          |  *          wack.
0026 *T21137 gat 10/24/1996 * Fix undefined variable on line 707.    |  *T21137 gat 10/24/1996 * FIX UNDEFINED VARIABLE ON LINE 707
0027 *T21177 diane 11/06/1996 * Rev11 upgrade.                       |  *T21177 diane 11/06/1996 * REV11 UPG

0028 *T23803 gat 03/24/1999 * Fix reg po owner div to test whse div  |  *T23803 gat 03/24/1999 * FIX REG PO OWNER DIV TO TEST WHSE D
0029 *T25978 adelgado 01/31/2002 * Add the use of prompts (S,SR,SB,  |  *T24135 jamesf 11/11/1999 * Adding code to lock the VEND.PO.
0030 *T27752 cmykleb 10/13/2003 * If the div # is not the same as t  |  *                           records to be released in the ca
0031 *                            div # the account distribution wa  |  *                           routine.  Also disallowing the u
0032 *                            updating correctly.                |  *                           ability to change the unit price
0033                                                                 >  *                           the qty entered against the qty 
0034                                                                 >  *                           minus the vouchered qty minus th

0035                                                                 >  *                           qty that has not been posted.  T
0036                                                                 >  *                           entered cannot be larger than th
0037                                                                 >  *                           of the three totals.
0038 **************************************************************     ************************************************************
0039 *                                                                  *
0040 **** INSERT FILE EQUATES                                           **** INSERT FILE EQUATES
0041 *                                                                  *

0122 MORE = 0                                                           MORE = 0
0123 CASE OPTION = 'S'                                                  CASE OPTION = 'S'
0124 LN = START.LINE + PAGE.SIZE                                        LN = START.LINE + PAGE.SIZE
0125 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0126 GOSUB 10000                                                        GOSUB 10000
0127 * T25978 v                                                      <  
0128 CASE OPTION = 'SR'                                              <  
0129 LN -= PAGE.SIZE                                                 <  
0130 IF LN < 1 THEN LN = 1                                           <  
0131 GOSUB 10000                                                     <  

0132 CASE OPTION = 'ST'                                              <  
0133 LN = 1                                                          <  
0134 GOSUB 10000                                                     <  
0135 CASE OPTION = 'SB'                                              <  
0136 LN = LINES                                                      <  
0137 GOSUB 10000                                                     <  
0138 * T25978 ^                                                      <  

0278 END ELSE                                                           END ELSE
0279 SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"                         SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"
0280 END                                                                END
0281 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0282 PAY.VALUES = ""                                                    PAY.VALUES = ""
0283 CALL VEND.PO.INQ(PAY.VALUES)                                    |  CALL VEND.PO.INQ(PAY.VALUES,V.CODE)
0284 ECD.SCRN.NO = 3; ECD.ACTION = 3; CALL SCRN.EDIT                    ECD.SCRN.NO = 3; ECD.ACTION = 3; CALL SCRN.EDIT
0285 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0286 IF PAY.VALUES<1> = "" THEN                                         IF PAY.VALUES<1> = "" THEN
0287 GOSUB 10000                                                        GOSUB 10000

0339 IF TVO.PO.TYPE="M" AND TVO.MISC.CAT = '' THEN                      IF TVO.PO.TYPE="M" AND TVO.MISC.CAT = '' THEN
0340 GOSUB 7000                                                         GOSUB 7000
0341 IF MCAT='' OR MCAT='E' OR MCAT='END' THEN GOTO 1000                IF MCAT='' OR MCAT='E' OR MCAT='END' THEN GOTO 1000
0342 END                                                                END
0343 END                                                                END
0344 MATREAD VPS.REC FROM VEND.PO.STATS , CONO:TVO.VEND:"!":TVO.PO.  |  *T24135 v
0345                                                                 >  VEND.PO.STATS.KEY = CONO:TVO.VEND:"!":TVO.PO.TYPE:"!":VALUE
0346                                                                 >  MATREADU VPS.REC FROM VEND.PO.STATS , VEND.PO.STATS.KEY ELSE
0347                                                                 >  *     MATREADU VPS.REC FROM VEND.PO.STATS , CONO:TVO.VEND:"!
0348                                                                 >  *T24135 ^

0612 IF TEMP.CNV<2> = "MD0" THEN                                        IF TEMP.CNV<2> = "MD0" THEN
0613 VALUE = INT(((VALUE/TEMP.MT1<2>)*TEMP.DV1<2>)*TEMP.DV2<2>+.5)      VALUE = INT(((VALUE/TEMP.MT1<2>)*TEMP.DV1<2>)*TEMP.DV2<2>+.5
0614 END ELSE                                                           END ELSE
0615 VALUE = VALUE * TEMP.MT1<2>                                        VALUE = VALUE * TEMP.MT1<2>
0616 END                                                                END
0617                                                                 >  *T24135 v
0618                                                                 >  IF FNDPD THEN
0619                                                                 >  LOCATE V.CODE IN VPS.UNPOST.VOU.NO<1,FNDPD>,1 SETTING VFND T
0620                                                                 >  VPS.UNPOST.VOU.QTY<1,FNDPD,VFND> -= TVO.PO.QTY<1,LN>
0621                                                                 >  END

0622                                                                 >  END
0623                                                                 >  IF FNDPD AND VALUE GT ((VPS.REC.QTY<1,FNDPD> - VPS.VOU.QTY<1
0624                                                                 >  ERRMSG = "Quantity entered cannot be greater than qty receiv
0625                                                                 >  GOSUB 91000
0626                                                                 >  GOTO 1050
0627                                                                 >  END ELSE
0628 TEMP.VALUES<6> = VALUE                                             TEMP.VALUES<6> = VALUE

0629                                                                 >  END
0630                                                                 >  *T24135 ^
0631 *                                                                  *
0632 **** ENTER VOUCHERED UNIT OF PRICE                                 **** ENTER VOUCHERED UNIT OF PRICE
0633 *                                                                  *
0634 1060*                                                              1060*
0635 X = 49; Y = SLN; TYP = 4; SCALER = 4; MAXL = 9; O.R = "R"          X = 49; Y = SLN; TYP = 4; SCALER = 4; MAXL = 9; O.R = "R"

0636 VALDAT = ""; HMSG = "Enter vouchered unit price"                   VALDAT = ""; HMSG = "Enter vouchered unit price"
0637 BEGIN CASE                                                      |  *T24135 v
0638 CASE TVO.PO.U.COST<1,LN> # ""                                   |  *     IF OPTION = "C" THEN
0639 DEFAULT = OCONV(TVO.PO.U.COST<1,LN>, "MD4")                     |  P_X = 49; P_Y = SLN
0640 O.R = 'O'                                                       |  P_VAL = OCONV(TVO.PO.U.COST<1,LN>, "MD4") "R#9"
0641 CASE TEMP.VALUES<7> # ""                                        |  CALL VSI_PLINE(P_X,P_Y,P_VAL,P_OPT)
0642 DEFAULT = OCONV(TEMP.VALUES<7>, "MD4")                          |  *     END ELSE
0643 O.R = 'O'                                                       |  *T24135 ^

0644 END CASE                                                        |  *       BEGIN CASE
0645 CALL EDIT.SUB                                                   |  *          CASE TVO.PO.U.COST<1,LN> # ""
0646 IF VALUE = "END" THEN GOTO 1010                                 |  *             DEFAULT = OCONV(TVO.PO.U.COST<1,LN>, "MD4")
0647 IF VALUE # TVO.PO.U.COST<1,LN> OR TEMP.VALUES<1> # TVO.PO.NOS<  |  *             O.R = 'O'
0648 TVO.ENT.FLG<1,LN> = "E"                                         |  *          CASE TEMP.VALUES<7> # ""
0649 END                                                             |  *             DEFAULT = OCONV(TEMP.VALUES<7>, "MD4")
0650 IF TEMP.CNV<2> = "MD2" THEN                                     |  *             O.R = 'O'

0651 TVO.PO.U.COST<1,LN> = INT(VALUE/TEMP.MT1<2>)                    |  *       END CASE
0652 END ELSE                                                        |  *       CALL EDIT.SUB
0653 TVO.PO.U.COST<1,LN> = VALUE                                     |  *       IF VALUE = "END" THEN GOTO 1010
0654 END                                                             |  *       IF VALUE # TVO.PO.U.COST<1,LN> OR TEMP.VALUES<1> # T
0655                                                                 >  *          TVO.ENT.FLG<1,LN> = "E"
0656                                                                 >  *       END
0657                                                                 >  *       IF TEMP.CNV<2> = "MD2" THEN

0658                                                                 >  *          TVO.PO.U.COST<1,LN> = INT(VALUE/TEMP.MT1<2>)
0659                                                                 >  *       END ELSE
0660                                                                 >  *          TVO.PO.U.COST<1,LN> = VALUE
0661                                                                 >  *       END
0662                                                                 >  *T24135 v
0663                                                                 >  *     END
0664                                                                 >  *T24135 ^

0720 PTR = 0                                                            PTR = 0
0721 END                                                                END
0722 WHILE PTR DO                                                       WHILE PTR DO
0723 REPEAT                                                             REPEAT
0724 END                                                                END
0725                                                                 >  IF @LOGNAME = "edvard" THEN DEBUG
0726 TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>                     TOTAL.VOUCH = TOTAL.VOUCH - TVO.PO.VOUCH<1,LN>
0727 TEMP1 = TVO.PO.QTY<1,LN>                                           TEMP1 = TVO.PO.QTY<1,LN>
0728 TVO.PO.VOUCH<1,LN> = INT(((TVO.PO.U.COST<1,LN> / 100) * (TEMP1     TVO.PO.VOUCH<1,LN> = INT(((TVO.PO.U.COST<1,LN> / 100) * (TEM
0729 GOSUB 2000                                                         GOSUB 2000

0870 END ELSE                                                           END ELSE
0871 P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,LN>, "MD2     P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,LN>, "M
0872 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0873 END                                                                END
0874 P_X  = 49 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,LN>, "     P_X  = 49 ; P_Y = SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,LN>,
0875 P_X  := AM:60 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TVO.PO.VOU  |  P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TVO.PO.V
0876 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0877 P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TVO.PROD.DESC<1,LN> "L#45"     P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TVO.PROD.DESC<1,LN> "L#4
0878 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0879 RETURN                                                             RETURN

0893 END ELSE                                                           END ELSE
0894 P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<6>, "MD2")     P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<6>, "MD2
0895 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0896 END                                                                END
0897 P_X  = 49 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<7>, "MD4")     P_X  = 49 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.VALUES<7>, "MD4
0898 P_X  := AM:60 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.VALUE  |  P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.VAL
0899 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0900 P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; P_     P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = TEMP.VALUES<3> "L#45" ; 
0901 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0902 RETURN                                                             RETURN

0958 END ELSE                                                           END ELSE
0959 SCV.REC(20)<ECD.SCRN.NO> = "MISCELLANEOUS"                         SCV.REC(20)<ECD.SCRN.NO> = "MISCELLANEOUS"
0960 END                                                                END
0961 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0962 PAY.VALUES<2> = ""                                                 PAY.VALUES<2> = ""
0963 CALL PO.ACT.INQ(FNDP,PAY.VALUES)                                |  CALL PO.ACT.INQ(FNDP,PAY.VALUES,V.CODE)
0964 ECD.SCRN.NO = 3                                                    ECD.SCRN.NO = 3
0965 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0966 OLD.START.LINE = 0                                                 OLD.START.LINE = 0
0967 IF PAY.VALUES<2> = "" THEN                                         IF PAY.VALUES<2> = "" THEN

0988 OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]                                 OLD.ACCT = OLD.ACCT[1,IN.ACCT.LEN]
0989 REV.AMT = TVO.PO.VOUCH<1,LN>                                       REV.AMT = TVO.PO.VOUCH<1,LN>
0990 PTR = 1                                                            PTR = 1
0991 LOOP                                                               LOOP
0992 LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN                LOCATE OLD.ACCT IN TVO.ACCT<1>,PTR SETTING FND THEN
0993 *T27752 v                                                       |  IF TVO.DIV<1,FND> = WORK.DIV THEN
0994 *        IF TVO.DIV<1,FND> = WORK.DIV THEN                      <  
0995 IF TVO.DIV<1,FND> = WORK.DIV OR TVO.DIV<1,FND> = '00' THEN      <  
0996 *T27752 ^                                                       <  
0997 IF REV.AMT > TVO.DIST.AMT<1,FND> THEN                              IF REV.AMT > TVO.DIST.AMT<1,FND> THEN

1157 END ELSE                                                           END ELSE
1158 P_X  = 38 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,N>, "MD     P_X  = 38 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.QTY<1,N>, "
1159 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1160 END                                                                END
1161 P_X  = 49 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,N>,      P_X  = 49 ; P_Y = S.SLN ; P_VALUE = OCONV(TVO.PO.U.COST<1,N>
1162 P_X  := AM:60 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO.V  |  P_X  := AM:59 ; P_Y := AM:S.SLN ; P_VALUE := AM:OCONV(TVO.PO
1163 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1164 P_X  = 13 ; P_Y = S.SLN+1 ; P_VALUE = TVO.PROD.DESC<1,N> "L#45     P_X  = 13 ; P_Y = S.SLN+1 ; P_VALUE = TVO.PROD.DESC<1,N> "L#
1165 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1166 CNT=CNT + 1                                                        CNT=CNT + 1


