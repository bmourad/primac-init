%!PS-Adobe-3.0%%Creator: PRIMAC
/Courier findfont [ 9 0 0 
9 0 0 ] makefont setfont
/showline { gsave show grestore 0 -9  rmoveto } def
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(POSBP/PO.DET.MAINT                                                 /usr/ud/primac/rev11/base/CBA-REV11/POSBP/PO.DET.MAINT) showline
(Printed for wvaughan at 07/26/2006 11:18:45AM) showline
() showline
(0001 SUBROUTINE PO.DET.MAINT\(CONO,PO.CODE,LNP,NEW\)                   |  SUBROUTINE PO.DET.MAINT\(CONO,PO.CODE,LNP\)) showline
(0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1) showline
(0003 *COPY>POS.CPYLIB>COM.PO                                            *COPY>POS.CPYLIB>COM.PO) showline
(0004 *COPY>POS.CPYLIB>COM.PO.INTRF                                      *COPY>POS.CPYLIB>COM.PO.INTRF) showline
(0005 **************************************************************     ************************************************************) showline
(0006 * REVISION    - [08.0]                                             * REVISION    - [08.0]) showline
(0007 * Copyright 1982 by Computer Business Associates \(Vercom Softw     * Copyright 1982 by Computer Business Associates \(Vercom Sof) showline
(0008 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC) showline
(0009 * SOURCE      - POSBP                                              * SOURCE      - POSBP) showline
(0010 * PROGRAM     - PO.DET.MAINT                                       * PROGRAM     - PO.DET.MAINT) showline
(0011 * BY          - JIHAD YAMOUT ,C.B.A                                * BY          - JIHAD YAMOUT ,C.B.A) showline
(0012 * DATE        - 02/04/84                                           * DATE        - 02/04/84) showline
(0013 * MODIFIED    - NLB                                                * MODIFIED    - NLB) showline
(0014 * DATE MOD    - 10/20/88                                           * DATE MOD    - 10/20/88) showline
(0015 * COMMENTS    - ADDED CUST INVENTORY CHECK                         * COMMENTS    - ADDED CUST INVENTORY CHECK) showline
(0016 * DESCRIPTION - THIS PROGRAM INPUT JOB AND DISC AND QTY ORDER      * DESCRIPTION - THIS PROGRAM INPUT JOB AND DISC AND QTY ORDE) showline
(0017 * MOD         - task 14705 \(csf10622\) RWW 2.12.90, cmp jobs ma     * MOD         - task 14705 \(csf10622\) RWW 2.12.90, cmp jobs ) showline
(0018 *             - their respective outstanding allocation and le     *             - their respective outstanding allocation and ) showline
(0019 *             - zero their on order                                *             - zero their on order) showline
(0020 * TASK 20129 JR FIX JOB DELETE                                     * TASK 20129 JR FIX JOB DELETE) showline
(0021 *T23256 lanny 09/11/1998 * Allow ALLOC to Re-opened Jobs.          *T23256 lanny 09/11/1998 * Allow ALLOC to Re-opened Jobs.) showline
(0022 *pss    Doug  01/12/1999 * Add entry for Dept & Cctr, used in   <  ) showline
(0023 *T24231 edvard 08/24/1999 * Add logic for requisitions.         <  ) showline
(0024 *T25855 edwin 09/21/2001 * Added PO Inquiry function.           <  ) showline
(0025 *T25978 adelgado 02/07/2002 * Add the use of prompts \(S,SR,SB,  <  ) showline
(0026 *T25740 epitka 03/22/2002 * REV12                               <  ) showline
(0027 *T25740 thompson 05/08/2002 * Add dept and cctr for product sc  <  ) showline
(0028 *T27687 cmykleb 11/12/2003 * \(1\) On a new requistion entry the  <  ) showline
(0029 *                            prompted to allow for changes/cor  <  ) showline
(0030 *                            \(2\) When using the dept and cctr   <  ) showline
(0031 *                            the user does not choose a dept o  <  ) showline
(0032 *                            the list, when the process return  <  ) showline
(0033 *                            entry screen the line #, job #, d  <  ) showline
(0034 *                            fields are blanked.                <  ) showline
(0035 *                            \(3\) When ending out of a line the  <  ) showline
(0036 *                            go to the next line and allow inp  <  ) showline
(0037 *                            the user did not enter anything i  <  ) showline
(0038 *                            above.                             <  ) showline
(0039 *T27974 lross 02/27/2004 * Rounding problem.                    <  ) showline
(0040 *T28060 thompson 04/08/2004 * For scheduling allow for a Maste  <  ) showline
(0041 *                             number to associate with a routi  <  ) showline
(0042 *                             center                            <  ) showline
(0043 *T28644 lross 08/09/2005 * Due Date test should be less than    <  ) showline
(0044 *                          PO.DEL.DATE.                         <  ) showline
(0045 **************************************************************     ************************************************************) showline
(0046 *ENDDOC                                                            *ENDDOC) showline
(0047 *                                                                  *) showline
(0048 *---- FILE EQUATES                                                 *---- FILE EQUATES) showline
(0049 *                                                                  *) showline
(0050 *COPY>PMC.CPYLIB>PO                                                *COPY>PMC.CPYLIB>PO) showline
(0051 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB) showline
(0052 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER) showline
(0053 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY) showline
(0054 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM) showline
(0055 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0056 *COPY>ICS.CPYLIB>INV.CNV                                           *COPY>ICS.CPYLIB>INV.CNV) showline
(0057 *COPY>PMC.CPYLIB>VEND                                              *COPY>PMC.CPYLIB>VEND) showline
(0058 *COPY>ICS.CPYLIB>WAREHOUSE                                         *COPY>ICS.CPYLIB>WAREHOUSE) showline
(0059 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION) showline
(0060 *COPY>PMC.CPYLIB>DEPARTMENT ;*pss                               <  ) showline
(0061 *COPY>PMC.CPYLIB>COST.CNTR ;*pss                                <  ) showline
(0062 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS) showline
(0063 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR) showline
(0064 *COPY>CPYLIB>GEN.XREF.SUB                                       <  ) showline
(0065 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM) showline
(0066 *24231 v                                                        <  ) showline
(0067 *COPY>POS.CPYLIB>APP.REQ                                        <  ) showline
(0068 PROCREAD BUFFER ELSE                                            <  ) showline
(0069 ERRMSG = "MUST BE RUN FROM PROC"                                <  ) showline
(0070 GOSUB 91000                                                     <  ) showline
(0071 END                                                             <  ) showline
(0072 * T25855 v                                                      <  ) showline
(0073 IF BUFFER<5> = "I" THEN POS.INQ = 1 ELSE POS.INQ = 0            <  ) showline
(0074 * T25855 ^                                                      <  ) showline
(0075 IF BUFFER<1> = "R" THEN                                         <  ) showline
(0076 OPEN 'APP.REQ' TO APP.REQ ELSE                                  <  ) showline
(0077 ERRMSG = "Cannot open APP.REQ"                                  <  ) showline
(0078 GOSUB 91000                                                     <  ) showline
(0079 GOSUB 99999                                                     <  ) showline
(0080 END                                                             <  ) showline
(0081 USER.ID = UPCASE\(@LOGNAME\)                                      <  ) showline
(0082 MATREAD APP.REQ.REC FROM APP.REQ,CONO:USER.ID:"!":PO.DIV.OWNER  <  ) showline
(0083 MAT APP.REQ.REC = ""                                            <  ) showline
(0084 END                                                             <  ) showline
(0085 END                                                             <  ) showline
(0086 PSS.FLAG = BUFFER<6>                                            <  ) showline
(0087 ERROR = ""                                                      <  ) showline
(0088 * 24231^                                                        <  ) showline
(0089 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2) showline
(0090 ***** INT                                                          ***** INT) showline
(0091 BEGIN.PAGE = 7                                                     BEGIN.PAGE = 7) showline
(0092 PAGE.SIZE = 4                                                      PAGE.SIZE = 4) showline
(0093 LINE.SPACE = 2                                                     LINE.SPACE = 2) showline
(0094 ERRMSG = ""                                                        ERRMSG = "") showline
(0095 UNKNOWN = "??????????"                                             UNKNOWN = "??????????") showline
(0096 MAT INV.CNV.REC = ""                                               MAT INV.CNV.REC = "") showline
(0097 MAT GEN.XREF.REC = ""                                           <  ) showline
(0098 DESC.LINE = ""                                                     DESC.LINE = "") showline
(0099 LINE.CUST = ""                                                     LINE.CUST = "") showline
(0100 ECD.SCRN.NO = 3                                                    ECD.SCRN.NO = 3) showline
(0101 LINES = 0                                                          LINES = 0) showline
(0102 OLD.START.LINE = 0                                                 OLD.START.LINE = 0) showline
(0103 BAL.ORD = 0 ; BAL.REC = 0 ; BAL.OPEN = 0                           BAL.ORD = 0 ; BAL.REC = 0 ; BAL.OPEN = 0) showline
(0104 TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0                           TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0) showline
(0105 **** MAIN PROCESSING                                               **** MAIN PROCESSING) showline
(0106 *24231 v                                                        <  ) showline
(0107 IF BUFFER<1> = "R" THEN                                         <  ) showline
(0108 HEADING = "REQUISITION JOB ALLOCATION ENTRY"                    <  ) showline
(0109 CAPTION36 = "Req #"                                             <  ) showline
(0110 IF GUIFORM THEN                                                 <  ) showline
(0111 CALL VSI_SETATTR\("_pmc36","border_style","raised",ERROR\)        <  ) showline
(0112 END                                                             <  ) showline
(0113 END ELSE                                                        <  ) showline
(0114 HEADING = "J O B  A L L O C A T I O N  E N T R Y"               <  ) showline
(0115 CAPTION36 = "Po #"                                              <  ) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0116 IF GUIFORM THEN                                                 <  ) showline
(0117 CALL VSI_SETATTR\("_pmc36","border_style","raised",ERROR\)        <  ) showline
(0118 END                                                             <  ) showline
(0119 END                                                             <  ) showline
(0120 * T25855 v                                                      <  ) showline
(0121 IF POS.INQ THEN HEADING = 'JOB ALLOCATION INQUIRY'              <  ) showline
(0122 * T25855 ^                                                      <  ) showline
(0123 SCV.REC\(26\)<ECD.SCRN.NO> = HEADING                              <  ) showline
(0124 SCV.REC\(36\)<ECD.SCRN.NO> = CAPTION36                            <  ) showline
(0125 *24231 ^                                                        <  ) showline
(0126 SCV.REC\(1\)<ECD.SCRN.NO> = PO.VEND.NO                               SCV.REC\(1\)<ECD.SCRN.NO> = PO.VEND.NO) showline
(0127 SCV.REC\(2\)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC\(2\)<ECD.SCRN.NO> = VEND.DESC) showline
(0128 SCV.REC\(3\)<ECD.SCRN.NO> = PO.CODE                                  SCV.REC\(3\)<ECD.SCRN.NO> = PO.CODE) showline
(0129 SCV.REC\(4\)<ECD.SCRN.NO> = PO.PROD.NUM<1,LNP>                       SCV.REC\(4\)<ECD.SCRN.NO> = PO.PROD.NUM<1,LNP>) showline
(0130 SCV.REC\(5\)<ECD.SCRN.NO> = INV.FULL.DESC                            SCV.REC\(5\)<ECD.SCRN.NO> = INV.FULL.DESC) showline
(0131 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT) showline
(0132 *24231 v                                                        <  ) showline
(0133 IF GUIFORM THEN                                                 <  ) showline
(0134 CALL VSI_PTITLE\(HEADING, ERROR\)                                 <  ) showline
(0135 END                                                             <  ) showline
(0136 *24231 ^                                                        <  ) showline
(0137 OPEN.QTY = PO.QTY.OPEN<1,LNP>                                      OPEN.QTY = PO.QTY.OPEN<1,LNP>) showline
(0138 BEGIN CASE                                                         BEGIN CASE) showline
(0139 CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"               CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS") showline
(0140 ICR.CNV = "MD0"; ICR.DV2 = 1                                       ICR.CNV = "MD0"; ICR.DV2 = 1) showline
(0141 ICR.DV1 = INV.M.WT; ICR.MT1 = 1                                    ICR.DV1 = INV.M.WT; ICR.MT1 = 1) showline
(0142 CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"                CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI") showline
(0143 ICR.CNV = "MD0"; ICR.DV2 = 1                                       ICR.CNV = "MD0"; ICR.DV2 = 1) showline
(0144 ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10                          ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10) showline
(0145 CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"                CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI") showline
(0146 ICR.CNV = "MD0"; ICR.DV2 = 12                                      ICR.CNV = "MD0"; ICR.DV2 = 12) showline
(0147 ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100                         ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100) showline
(0148 CASE 1                                                             CASE 1) showline
(0149 ICR.CNV = "MD2"; ICR.DV2 = 1                                       ICR.CNV = "MD2"; ICR.DV2 = 1) showline
(0150 ICR.DV1 = 10; ICR.MT1 = 1                                          ICR.DV1 = 10; ICR.MT1 = 1) showline
(0151 END CASE                                                           END CASE) showline
(0152 IF PO.JOB.NO<1,LNP> = "" AND NOT\(POS.INQ\) THEN       ; * T2585  |  IF PO.JOB.NO<1,LNP> = "" THEN) showline
(0153 *24231 v                                                        <  ) showline
(0154 IF BUFFER<1> = "R" THEN                                         <  ) showline
(0155 BEGIN CASE                                                      <  ) showline
(0156 CASE PO.APP.LEVEL = ""                                          <  ) showline
(0157 GO.BACK = 0                                                     <  ) showline
(0158 CASE PO.APP.LEVEL < APP.PO.LEVEL                                <  ) showline
(0159 GO.BACK = 1                                                     <  ) showline
(0160 CASE PO.APP.LEVEL = "C"                                         <  ) showline
(0161 GO.BACK = 1                                                     <  ) showline
(0162 CASE 1                                                          <  ) showline
(0163 GO.BACK = 0                                                     <  ) showline
(0164 END CASE                                                        <  ) showline
(0165 END ELSE                                                        <  ) showline
(0166 GO.BACK = 0                                                     <  ) showline
(0167 END                                                             <  ) showline
(0168 IF \(GO.BACK\) THEN                                               <  ) showline
(0169 ERRMSG = "There are no jobs to be displayed."                   <  ) showline
(0170 GOSUB 91000                                                     <  ) showline
(0171 GOTO 99999                                                      <  ) showline
(0172 END ELSE                                                        <  ) showline
(0173 *24231 ^                                                        <  ) showline
(0174 GOSUB 1030                                                         GOSUB 1030) showline
(0175 LOOP                                                               LOOP) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0176 OPTION = 'A'                                                       OPTION = 'A') showline
(0177 LNJ = LINES + 1                                                    LNJ = LINES + 1) showline
(0178 OLD.LINES = LINES                                                  OLD.LINES = LINES) showline
(0179 GOSUB 1000                                                         GOSUB 1000) showline
(0180 WHILE LINES > OLD.LINES DO REPEAT                                  WHILE LINES > OLD.LINES DO REPEAT) showline
(0181 LNJ = LINES                                                        LNJ = LINES) showline
(0182 *24231 v                                                        <  ) showline
(0183 END                                                             <  ) showline
(0184 *24231 ^                                                        <  ) showline
(0185 END ELSE                                                           END ELSE) showline
(0186 LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # ""\)      LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # "") showline
(0187 FOR LNJ = 1 TO LINES                                               FOR LNJ = 1 TO LINES) showline
(0188 MATREAD JOB.REC FROM JOB, CONO:PO.JOB.NO<1,LNP,LNJ> ELSE MAT J     MATREAD JOB.REC FROM JOB, CONO:PO.JOB.NO<1,LNP,LNJ> ELSE MAT) showline
(0189 MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE                 MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE) showline
(0190 MAT CUST.REC = ""                                                  MAT CUST.REC = "") showline
(0191 CUST.NAME = UNKNOWN                                                CUST.NAME = UNKNOWN) showline
(0192 END                                                                END) showline
(0193 LINE.CUST<1,LNJ> = JOB.CUST                                        LINE.CUST<1,LNJ> = JOB.CUST) showline
(0194 DESC.LINE<1,LNJ> = CUST.NAME                                       DESC.LINE<1,LNJ> = CUST.NAME) showline
(0195 NEXT LNJ                                                           NEXT LNJ) showline
(0196 LNJ = 1                                                            LNJ = 1) showline
(0197 END                                                                END) showline
(0198 GOSUB 10000                                                        GOSUB 10000) showline
(0199 GOSUB 1020                                                         GOSUB 1020) showline
(0200 **** ENTER OPTION                                                  **** ENTER OPTION) showline
(0201 500*                                                               500*) showline
(0202 *24231 v                                                        |  ECD.NUM = 6; SCV.REC\(6\)<ECD.SCRN.NO> = "") showline
(0203 IF BUFFER<1> = "R" THEN                                         <  ) showline
(0204 BEGIN CASE                                                      <  ) showline
(0205 CASE NEW = 1 ; * T27687                                         <  ) showline
(0206 ECD.NUM = 6 ; * T27687                                          <  ) showline
(0207 CASE PO.APP.LEVEL = "C"                                         <  ) showline
(0208 ECD.NUM = 25                                                    <  ) showline
(0209 CASE PO.APP.LEVEL < APP.PO.LEVEL                                <  ) showline
(0210 ECD.NUM = 25                                                    <  ) showline
(0211 CASE 1                                                          <  ) showline
(0212 ECD.NUM = 6                                                     <  ) showline
(0213 END CASE                                                        <  ) showline
(0214 END ELSE                                                        <  ) showline
(0215 IF POS.INQ THEN ECD.NUM = 25 ELSE ECD.NUM = 6; * T25855         <  ) showline
(0216 END                                                             <  ) showline
(0217 SCV.REC\(6\)<ECD.SCRN.NO> = ""                                    <  ) showline
(0218 *24231 ^                                                        <  ) showline
(0219 *ECD.NUM = 6; SCV.REC\(6\)<ECD.SCRN.NO> = ""                      <  ) showline
(0220 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT) showline
(0221 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE) showline
(0222 BEGIN CASE                                                         BEGIN CASE) showline
(0223 CASE OPTION = 'E' OR OPTION = 'END'                                CASE OPTION = 'E' OR OPTION = 'END') showline
(0224 GOTO 99999                                                         GOTO 99999) showline
(0225 CASE OPTION = 'A'                                                  CASE OPTION = 'A') showline
(0226 LOOP                                                               LOOP) showline
(0227 LNJ = LINES + 1                                                    LNJ = LINES + 1) showline
(0228 OLD.LINES = LINES                                                  OLD.LINES = LINES) showline
(0229 GOSUB 1000                                                         GOSUB 1000) showline
(0230 WHILE LINES > OLD.LINES DO REPEAT                                  WHILE LINES > OLD.LINES DO REPEAT) showline
(0231 LNJ = LINES                                                        LNJ = LINES) showline
(0232 CASE OPTION = 'C'                                                  CASE OPTION = 'C') showline
(0233 GOSUB 60000                                                        GOSUB 60000) showline
(0234 IF LNO THEN                                                        IF LNO THEN) showline
(0235 LNJ = LNO                                                          LNJ = LNO) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0236 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)             SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)) showline
(0237 GOSUB 1001                                                         GOSUB 1001) showline
(0238 END                                                                END) showline
(0239 IF PO.JB.RECEVED<1,LNP,LNJ> * 1 = 0 AND PO.JB.ONORD<1,LNP,LNJ>     IF PO.JB.RECEVED<1,LNP,LNJ> * 1 = 0 AND PO.JB.ONORD<1,LNP,LN) showline
(0240 PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)                            PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)) showline
(0241                                                                 >  * TASK 20129) showline
(0242                                                                 >  *            PO.JB.UNITS = DELETE\(PO.JB.UNITS,1,LNP,LNJ\)) showline
(0243                                                                 >  * TASK 20129) showline
(0244 PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)                        PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)) showline
(0245 PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)                    PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)) showline
(0246 PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)                          PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)) showline
(0247 PO.JB.DEPT = DELETE\(PO.JB.DEPT,1,LNP,LNJ\);*pss                  <  ) showline
(0248 PO.JB.CCTR = DELETE\(PO.JB.CCTR,1,LNP,LNJ\);*pss                  <  ) showline
(0249 LINE.CUST = DELETE\(LINE.CUST,1,LNJ,0\)                              LINE.CUST = DELETE\(LINE.CUST,1,LNJ,0\)) showline
(0250 DESC.LINE = DELETE\(DESC.LINE,1,LNJ,0\)                              DESC.LINE = DELETE\(DESC.LINE,1,LNJ,0\)) showline
(0251 LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # ""\)      LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # "") showline
(0252 GOSUB 1020                                                         GOSUB 1020) showline
(0253 IF LNJ > 1 AND LNJ > LINES THEN LNJ = LNJ - 1                      IF LNJ > 1 AND LNJ > LINES THEN LNJ = LNJ - 1) showline
(0254 IF LNJ < 1 THEN LNJ = 1                                            IF LNJ < 1 THEN LNJ = 1) showline
(0255 OLD.START.LINE = 0                                                 OLD.START.LINE = 0) showline
(0256 END                                                                END) showline
(0257 CASE OPTION = 'D'                                                  CASE OPTION = 'D') showline
(0258 GOSUB 60000                                                        GOSUB 60000) showline
(0259 IF LNO THEN                                                        IF LNO THEN) showline
(0260 LNJ = LNO                                                          LNJ = LNO) showline
(0261 IF PO.JB.RECEVED<1,LNP,LNJ> * 1 = 0 THEN                           IF PO.JB.RECEVED<1,LNP,LNJ> * 1 = 0 THEN) showline
(0262 PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)                            PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)) showline
(0263                                                                 >  * TASK 20129) showline
(0264                                                                 >  *            PO.JB.UNITS = DELETE\(PO.JB.UNITS,1,LNP,LNJ\)) showline
(0265                                                                 >  * TASK 20129) showline
(0266 PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)                        PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)) showline
(0267 PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)                    PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)) showline
(0268 PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)                          PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)) showline
(0269 PO.JB.DEPT = DELETE\(PO.JB.DEPT,1,LNP,LNJ\);*pss                  <  ) showline
(0270 PO.JB.CCTR = DELETE\(PO.JB.CCTR,1,LNP,LNJ\);*pss                  <  ) showline
(0271 LINE.CUST = DELETE\(LINE.CUST,1,LNJ,0\)                              LINE.CUST = DELETE\(LINE.CUST,1,LNJ,0\)) showline
(0272 DESC.LINE = DELETE\(DESC.LINE,1,LNJ,0\)                              DESC.LINE = DELETE\(DESC.LINE,1,LNJ,0\)) showline
(0273 LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # ""\)      LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # "") showline
(0274 GOSUB 1020                                                         GOSUB 1020) showline
(0275 IF LNJ > 1 AND LNJ > LINES THEN LNJ = LNJ - 1                      IF LNJ > 1 AND LNJ > LINES THEN LNJ = LNJ - 1) showline
(0276 IF LNJ < 1 THEN LNJ = 1                                            IF LNJ < 1 THEN LNJ = 1) showline
(0277 OLD.START.LINE = 0                                                 OLD.START.LINE = 0) showline
(0278 END ELSE                                                           END ELSE) showline
(0279 ERRMSG = "ITEM THAT HAS BEEN UPDATED CAN'T BE DELETED"             ERRMSG = "ITEM THAT HAS BEEN UPDATED CAN'T BE DELETED") showline
(0280 GOSUB 91000                                                        GOSUB 91000) showline
(0281 END                                                                END) showline
(0282 END                                                                END) showline
(0283 CASE OPTION = 'S'                                                  CASE OPTION = 'S') showline
(0284 LNJ = LNJ + PAGE.SIZE                                              LNJ = LNJ + PAGE.SIZE) showline
(0285 IF LNJ > LINES THEN LNJ = 1                                        IF LNJ > LINES THEN LNJ = 1) showline
(0286 * T25978 v                                                      <  ) showline
(0287 CASE OPTION = 'SR'                                              <  ) showline
(0288 LNJ -= PAGE.SIZE                                                <  ) showline
(0289 IF LNJ < 1 THEN LNJ = 1                                         <  ) showline
(0290 CASE OPTION = 'ST'                                              <  ) showline
(0291 LNJ = 1                                                         <  ) showline
(0292 CASE OPTION = 'SB'                                              <  ) showline
(0293 LNJ = LINES                                                     <  ) showline
(0294 * T25978 ^                                                      <  ) showline
(0295 END CASE                                                           END CASE) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0296 GOSUB 10000                                                        GOSUB 10000) showline
(0297 GOTO 500                                                           GOTO 500) showline
(0298 **** ENTER JOB INFORMATION                                         **** ENTER JOB INFORMATION) showline
(0299 1000*                                                              1000*) showline
(0300 IF BAL.ORD <= 0 THEN GOTO 1999                                     IF BAL.ORD <= 0 THEN GOTO 1999) showline
(0301 GOSUB 10000                                                        GOSUB 10000) showline
(0302 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)             SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)) showline
(0303 P_X  = 0 ; P_Y = SLN ; P_VALUE = LNJ "R#3" ; P_OPT = "CL"          P_X  = 0 ; P_Y = SLN ; P_VALUE = LNJ "R#3" ; P_OPT = "CL") showline
(0304 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0305 **** ENTER JOB NUMBER AND PRINT DESCRIPTION                        **** ENTER JOB NUMBER AND PRINT DESCRIPTION) showline
(0306 1001 X = 4 ; Y = SLN ; TYP = 1 ; MAXL = 8 ; O.R = 'R' ; VALDAT  |  1001X = 4 ; Y = SLN ; TYP = 1 ; MAXL = 8 ; O.R = 'R' ; VALDA) showline
(0307 IF PO.JOB.NO<1,LNP,LNJ> # "" THEN                                  IF PO.JOB.NO<1,LNP,LNJ> # "" THEN) showline
(0308 DEFAULT = PO.JOB.NO<1,LNP,LNJ> ; O.R = 'O'                         DEFAULT = PO.JOB.NO<1,LNP,LNJ> ; O.R = 'O') showline
(0309 END                                                                END) showline
(0310 CALL EDIT.SUB                                                      CALL EDIT.SUB) showline
(0311 IF VALUE = 'END' AND OPTION = 'A' THEN                             IF VALUE = 'END' AND OPTION = 'A' THEN) showline
(0312 PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)                            PO.JOB.NO = DELETE\(PO.JOB.NO,1,LNP,LNJ\)) showline
(0313 PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)                        PO.JB.ONORD = DELETE\(PO.JB.ONORD,1,LNP,LNJ\)) showline
(0314 PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)                    PO.JB.RECEVED = DELETE\(PO.JB.RECEVED,1,LNP,LNJ\)) showline
(0315 PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)                          PO.JB.OPEN = DELETE\(PO.JB.OPEN,1,LNP,LNJ\)) showline
(0316 PO.JB.DEPT = DELETE\(PO.JB.DEPT,1,LNP,LNJ\);*pss                  <  ) showline
(0317 PO.JB.CCTR = DELETE\(PO.JB.CCTR,1,LNP,LNJ\);*pss                  <  ) showline
(0318 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL") showline
(0319 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0320 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"               P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL") showline
(0321 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0322 IF LINES GT 0 THEN LINES = LINES - 1 ; * T27687                 <  ) showline
(0323 GOTO 1999                                                          GOTO 1999) showline
(0324 END                                                                END) showline
(0325 IF VALUE = 'END' AND OPTION = 'C' THEN                             IF VALUE = 'END' AND OPTION = 'C' THEN) showline
(0326 P_X  = 4 ; P_Y = SLN ; P_VALUE = PO.JOB.NO<1,LNP,LNJ> "L#8" ;      P_X  = 4 ; P_Y = SLN ; P_VALUE = PO.JOB.NO<1,LNP,LNJ> "L#8" ) showline
(0327 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0328 GOTO 1999                                                          GOTO 1999) showline
(0329 END ELSE                                                           END ELSE) showline
(0330 LOCATE VALUE IN PO.JOB.NO<1,LNP>,1 SETTING FND ELSE FND = 0        LOCATE VALUE IN PO.JOB.NO<1,LNP>,1 SETTING FND ELSE FND = 0) showline
(0331 IF FND AND FND # LNJ THEN                                          IF FND AND FND # LNJ THEN) showline
(0332 ERRMSG = "JOB ":VALUE:" IS ALREADY ENTERED ON LINE ":FND           ERRMSG = "JOB ":VALUE:" IS ALREADY ENTERED ON LINE ":FND) showline
(0333 GOSUB 91000; GOTO 1001                                             GOSUB 91000; GOTO 1001) showline
(0334 END                                                                END) showline
(0335 MATREAD JOB.REC FROM JOB , CONO:VALUE ELSE                         MATREAD JOB.REC FROM JOB , CONO:VALUE ELSE) showline
(0336 ERRMSG = "JOB NUMBER \(":VALUE:"\) NOT ON FILE" ;GOSUB 91000 ; G     ERRMSG = "JOB NUMBER \(":VALUE:"\) NOT ON FILE" ;GOSUB 91000 ;) showline
(0337 END                                                                END) showline
(0338 *TASK 18828 ; *CLS 3/95                                            *TASK 18828 ; *CLS 3/95) showline
(0339 MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE<1,LNP> ELSE MAT      MATREAD WHSE.REC FROM WAREHOUSE, CONO:PO.WHSE<1,LNP> ELSE MA) showline
(0340 IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN                       IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN ) showline
(0341 ERRMSG = "JOB ":VALUE:" HAS A DIFFERENT DIVISION THAN THE PROD     ERRMSG = "JOB ":VALUE:" HAS A DIFFERENT DIVISION THAN THE PR) showline
(0342 GOSUB 91000                                                        GOSUB 91000) showline
(0343 GOTO 1001                                                          GOTO 1001) showline
(0344 END                                                                END) showline
(0345 *T28644 v                                                       |  *) showline
(0346 *     IF JOB.TRACK.DATE<1,4> <= PO.DEL.DATE<1,LNP> THEN         |  IF JOB.TRACK.DATE<1,4> <= PO.DEL.DATE<1,LNP> THEN) showline
(0347 IF JOB.TRACK.DATE<1,4> < PO.DEL.DATE<1,LNP> THEN                <  ) showline
(0348 ERRMSG = "JOB DUE DATE HAS ALREADY PASSED"                         ERRMSG = "JOB DUE DATE HAS ALREADY PASSED") showline
(0349 GOSUB 91000                                                        GOSUB 91000) showline
(0350 GOTO 1001                                                          GOTO 1001) showline
(0351 END                                                                END) showline
(0352                                                                 >  *) showline
(0353 IF INV.CUST # "" THEN                                              IF INV.CUST # "" THEN) showline
(0354 IF "X":JOB.CUST # "X":INV.CUST THEN                                IF "X":JOB.CUST # "X":INV.CUST THEN) showline
(0355 ERRMSG = "THIS INVENTORY IS OWNED BY CUSTOMER ":INV.CUST           ERRMSG = "THIS INVENTORY IS OWNED BY CUSTOMER ":INV.CUST) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0356 GOSUB 91000                                                        GOSUB 91000) showline
(0357 GOTO 1001                                                          GOTO 1001) showline
(0358 END                                                                END) showline
(0359 END                                                                END) showline
(0360 1002*                                                              1002*) showline
(0361                                                                 >  *) showline
(0362                                                                 >  * commented out per task 14705) showline
(0363                                                                 >  *) showline
(0364                                                                 >  *===========================================================) showline
(0365                                                                 >  *      IF JOB.STATUS<1,1> > 3 THEN) showline
(0366                                                                 >  *         X = 43; Y = SLN;MAXL = 11) showline
(0367                                                                 >  *         IF ICR.CNV = "MD0" THEN) showline
(0368                                                                 >  *            TYP = 3) showline
(0369                                                                 >  *            DEFAULT = INT\(\(\(PO.JB.ONORD<1,LNP,LNJ>/ICR.DV1\)) showline
(0370                                                                 >  *            O.R = "O") showline
(0371                                                                 >  *         END ELSE) showline
(0372                                                                 >  *            TYP = 4; SCALER = 2) showline
(0373                                                                 >  *            PO.JB.RECEVED<1,LNP,LNJ> = PO.JB.RECEVED<1,LNP,) showline
(0374                                                                 >  *            PO.JB.ONORD<1,LNP,LNJ> =PO.JB.ONORD<1,LNP,LNJ> ) showline
(0375                                                                 >  *            DEFAULT = OCONV\(INT\(PO.JB.ONORD<1,LNP,LNJ>/10\),) showline
(0376                                                                 >  *            O.R = "O") showline
(0377                                                                 >  *         END) showline
(0378                                                                 >  *         CALL EDIT.SUB) showline
(0379                                                                 >  *         IF VALUE = "END" THEN OLD.START.LINE = 0; GOTO 199) showline
(0380                                                                 >  *         IF ICR.CNV = "MD0" THEN) showline
(0381                                                                 >  *            VALUE = INT\(\(\(VALUE/ICR.MT1\)*ICR.DV1\)*ICR.DV2 +) showline
(0382                                                                 >  *         END ELSE) showline
(0383                                                                 >  *            VALUE = VALUE * 10) showline
(0384                                                                 >  *         END) showline
(0385                                                                 >  *         IF VALUE = PO.JB.RECEVED<1,LNP,LNJ> OR VALUE = PO.) showline
(0386                                                                 >  *            NULL) showline
(0387                                                                 >  *         END ELSE) showline
(0388                                                                 >  *            ERRMSG = "TOTAL QUANTITY ALLOCATED MUST EITHER ) showline
(0389                                                                 >  *         END) showline
(0390                                                                 >  *         PO.JB.ONORD<1,LNP,LNJ>= VALUE) showline
(0391                                                                 >  *         OLD.START.LINE = 0; GOTO 1999) showline
(0392                                                                 >  *      END) showline
(0393                                                                 >  *===========================================================) showline
(0394                                                                 >  *) showline
(0395 PO.JOB.NO<1,LNP,LNJ> = VALUE                                       PO.JOB.NO<1,LNP,LNJ> = VALUE) showline
(0396 MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE                MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE) showline
(0397 CUST.NAME = UNKNOWN                                                CUST.NAME = UNKNOWN) showline
(0398 END                                                                END) showline
(0399 END                                                                END) showline
(0400 P_X  = 13 ; P_Y = SLN ; P_VALUE = JOB.CUST "L#6" ; P_OPT = ""      P_X  = 13 ; P_Y = SLN ; P_VALUE = JOB.CUST "L#6" ; P_OPT = ") showline
(0401 P_X  := AM:13 ; P_Y := AM:SLN+1 ; P_VALUE := AM:CUST.NAME "L#2     P_X  := AM:13 ; P_Y := AM:SLN+1 ; P_VALUE := AM:CUST.NAME "L) showline
(0402 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0403 LINE.CUST<1,LNJ> = JOB.CUST                                        LINE.CUST<1,LNJ> = JOB.CUST) showline
(0404 DESC.LINE<1,LNJ> = CUST.NAME                                       DESC.LINE<1,LNJ> = CUST.NAME) showline
(0405 * pss v                                                         <  ) showline
(0406 IF PSS.FLAG = "Y" THEN                                          <  ) showline
(0407 **** INPUT DEPARTMENT                                           <  ) showline
(0408 1004*                                                           <  ) showline
(0409 X = 28 ; Y = SLN ; TYP = 1 ; MAXL = 2 ; O.R = 'R' ; VALDAT = '  <  ) showline
(0410 IF PO.JB.DEPT<1,LNP,LNJ> # '' THEN                              <  ) showline
(0411 DEFAULT = PO.JB.DEPT<1,LNP,LNJ>                                 <  ) showline
(0412 O.R='O'                                                         <  ) showline
(0413 END                                                             <  ) showline
(0414 CALL EDIT.SUB                                                   <  ) showline
(0415 BEGIN CASE                                                      <  ) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0416 CASE VALUE = "END" AND OPTION = "A"                             <  ) showline
(0417 GOTO 1001                                                       <  ) showline
(0418 CASE VALUE = "END"                                              <  ) showline
(0419 OLD.START.LINE = 0                                              <  ) showline
(0420 GOTO 1999                                                       <  ) showline
(0421 CASE VALUE = '??'                                               <  ) showline
(0422 GXR.NAME = 'DEPARTMENT'                                         <  ) showline
(0423 GXR.CO = CONO                                                   <  ) showline
(0424 GXR.XREF=DIVISION                                               <  ) showline
(0425 GXR.FILE=DEPARTMENT                                             <  ) showline
(0426 GXR.ID=''                                                       <  ) showline
(0427 GXR.SRCH.ID=JOB.DIV                                             <  ) showline
(0428 CALL GEN.XREF.SUB\(MAT GEN.XREF.REC,PREFIX,XREF.DATA\)            <  ) showline
(0429 ECD.ACTION=2;CALL SCRN.EDIT                                     <  ) showline
(0430 ECD.ACTION=3;CALL SCRN.EDIT                                     <  ) showline
(0431 *T27687 v                                                       <  ) showline
(0432 *           IF GXR.ID='' THEN GOTO 1004                         <  ) showline
(0433 IF GXR.ID = '' THEN                                             <  ) showline
(0434 OLD.SLN = SLN                                                   <  ) showline
(0435 LINES = LNJ                                                     <  ) showline
(0436 OLD.START.LINE=0; GOSUB 10000                                   <  ) showline
(0437 SLN = OLD.SLN                                                   <  ) showline
(0438 GOTO 1004                                                       <  ) showline
(0439 END ELSE                                                        <  ) showline
(0440 *T27687 ^                                                       <  ) showline
(0441 PO.JB.DEPT<1,LNP,LNJ> = GXR.ID                                  <  ) showline
(0442 LINES = LNJ                                                     <  ) showline
(0443 OLD.START.LINE=0; GOSUB 10000                                   <  ) showline
(0444 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)          <  ) showline
(0445 VALUE=GXR.ID                                                    <  ) showline
(0446 END ; * T27687                                                  <  ) showline
(0447 END CASE                                                        <  ) showline
(0448 IF VALUE # '' THEN                                              <  ) showline
(0449 MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE               <  ) showline
(0450 ERRMSG='DEPARTMENT ':VALUE:' IS INVALID'                        <  ) showline
(0451 GOSUB 91000;GOTO 1004                                           <  ) showline
(0452 END                                                             <  ) showline
(0453 LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING FDDV ELSE FDDV = 0      <  ) showline
(0454 IF FDDV = 0 THEN                                                <  ) showline
(0455 ERRMSG='DEPARTMENT NOT VALID FOR JOB DIVISION'                  <  ) showline
(0456 GOSUB 91000; GOTO 1004                                          <  ) showline
(0457 END                                                             <  ) showline
(0458 END                                                             <  ) showline
(0459 PO.JB.DEPT<1,LNP,LNJ> = VALUE                                   <  ) showline
(0460 **** INPUT COST CENTER                                          <  ) showline
(0461 1005*                                                           <  ) showline
(0462 IF PO.JB.DEPT<1,LNP,LNJ> = '' THEN                              <  ) showline
(0463 PO.JB.CCTR<1,LNP,LNJ> = ''                                      <  ) showline
(0464 LINES = LNJ                                                     <  ) showline
(0465 OLD.START.LINE=0; GOSUB 10000                                   <  ) showline
(0466 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)          <  ) showline
(0467 VALUE = ''                                                      <  ) showline
(0468 END ELSE                                                        <  ) showline
(0469 X = 33 ; Y = SLN ; TYP = 1 ; MAXL = 3 ; O.R = 'R' ; VALDAT = '  <  ) showline
(0470 IF PO.JB.CCTR<1,LNP,LNJ> # '' THEN                              <  ) showline
(0471 DEFAULT = PO.JB.CCTR<1,LNP,LNJ>                                 <  ) showline
(0472 O.R = 'O'                                                       <  ) showline
(0473 END                                                             <  ) showline
(0474 CALL EDIT.SUB                                                   <  ) showline
(0475 BEGIN CASE                                                      <  ) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0476 CASE VALUE = "END" AND OPTION = "A"                             <  ) showline
(0477 GOTO 1001                                                       <  ) showline
(0478 CASE VALUE = "END"                                              <  ) showline
(0479 OLD.START.LINE = 0                                              <  ) showline
(0480 GOTO 1999                                                       <  ) showline
(0481 CASE VALUE = "???"                                              <  ) showline
(0482 GXR.CO = CONO                                                   <  ) showline
(0483 GXR.NAME = 'CCTR.DEPT'                                          <  ) showline
(0484 GXR.XREF=DEPARTMENT                                             <  ) showline
(0485 GXR.FILE=COST.CNTR                                              <  ) showline
(0486 GXR.ID=''                                                       <  ) showline
(0487 GXR.SRCH.ID=PO.JB.DEPT<1,LNP,LNJ>                               <  ) showline
(0488 CALL GEN.XREF.SUB\(MAT GEN.XREF.REC,PREFIX,XREF.DATA\)            <  ) showline
(0489 ECD.ACTION=2;CALL SCRN.EDIT                                     <  ) showline
(0490 ECD.ACTION = 3;CALL SCRN.EDIT                                   <  ) showline
(0491 *T27687 v                                                       <  ) showline
(0492 *              IF GXR.ID='' THEN GOTO 1005                      <  ) showline
(0493 IF GXR.ID = '' THEN                                             <  ) showline
(0494 OLD.SLN = SLN                                                   <  ) showline
(0495 LINES = LNJ                                                     <  ) showline
(0496 OLD.START.LINE=0; GOSUB 10000                                   <  ) showline
(0497 SLN = OLD.SLN                                                   <  ) showline
(0498 GOTO 1005                                                       <  ) showline
(0499 END ELSE                                                        <  ) showline
(0500 *T27687 ^                                                       <  ) showline
(0501 PO.JB.CCTR<1,LNP,LNJ> = GXR.ID                                  <  ) showline
(0502 LINES = LNJ                                                     <  ) showline
(0503 OLD.START.LINE=0; GOSUB 10000                                   <  ) showline
(0504 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(LNJ - 1,PAGE.SIZE\)          <  ) showline
(0505 VALUE=GXR.ID                                                    <  ) showline
(0506 END ; * T27687                                                  <  ) showline
(0507 END CASE                                                        <  ) showline
(0508 IF VALUE # '' THEN                                              <  ) showline
(0509 MATREAD CCTR.REC FROM COST.CNTR, CONO:VALUE ELSE                <  ) showline
(0510 ERRMSG='COST.CNTR ':VALUE:' IS INVALID'                         <  ) showline
(0511 GOSUB 91000;GOTO 1005                                           <  ) showline
(0512 END                                                             <  ) showline
(0513 *T28060                                                         <  ) showline
(0514 IF CCTR.DEPT[1,2] # PO.JB.DEPT<1,LNP,LNJ> THEN                  <  ) showline
(0515 *T28060                                                         <  ) showline
(0516 ERRMSG='INCORRECT DEPARTMENT FOR COST CENTER ':VALUE            <  ) showline
(0517 GOSUB 91000;GOTO 1005                                           <  ) showline
(0518 END                                                             <  ) showline
(0519 END                                                             <  ) showline
(0520 END                                                             <  ) showline
(0521 PO.JB.CCTR<1,LNP,LNJ> = VALUE                                   <  ) showline
(0522 * pss ^                                                         <  ) showline
(0523 END                                                             <  ) showline
(0524 **** INPUT UNITS                                                   **** INPUT UNITS) showline
(0525 1006*                                                              1006*) showline
(0526 P_X  = 38 ; P_Y = SLN ; P_VALUE = PO.JB.UNITS<1,LNP> "L#3" ; P     P_X  = 38 ; P_Y = SLN ; P_VALUE = PO.JB.UNITS<1,LNP> "L#3" ;) showline
(0527 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0528 **** INPUT QTY ORDERD                                              **** INPUT QTY ORDERD) showline
(0529 1007*                                                              1007*) showline
(0530 X = 43; Y = SLN; O.R = "R"; MAXL = 11; MINV = 0; MAXV = 999999     X = 43; Y = SLN; O.R = "R"; MAXL = 11; MINV = 0; MAXV = 9999) showline
(0531 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0532 TYP = 3                                                            TYP = 3) showline
(0533 IF PO.JB.ONORD<1,LNP,LNJ> # "" THEN                                IF PO.JB.ONORD<1,LNP,LNJ> # "" THEN) showline
(0534 DEFAULT = INT\(\(\(PO.JB.ONORD<1,LNP,LNJ>/ICR.DV1\)*ICR.MT1\)/ICR.D     DEFAULT = INT\(\(\(PO.JB.ONORD<1,LNP,LNJ>/ICR.DV1\)*ICR.MT1\)/ICR) showline
(0535 O.R = "O"                                                          O.R = "O") showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0536 END                                                                END) showline
(0537 END ELSE                                                           END ELSE) showline
(0538 TYP = 4; SCALER = 2                                                TYP = 4; SCALER = 2) showline
(0539 IF PO.JB.ONORD<1,LNP,LNJ> # "" THEN                                IF PO.JB.ONORD<1,LNP,LNJ> # "" THEN) showline
(0540 DEFAULT = OCONV\(INT\(PO.JB.ONORD<1,LNP,LNJ>/10\), "MD2"\)             DEFAULT = OCONV\(INT\(PO.JB.ONORD<1,LNP,LNJ>/10\), "MD2"\)) showline
(0541 O.R = "O"                                                          O.R = "O") showline
(0542 END                                                                END) showline
(0543 END                                                                END) showline
(0544                                                                 >  *TASK14705) showline
(0545 CCNV = "MD0"                                                       CCNV = "MD0") showline
(0546 IF ICR.CNV # "" THEN CCNV = ICR.CNV                                IF ICR.CNV # "" THEN CCNV = ICR.CNV) showline
(0547 DFLT = ICONV\(DEFAULT,CCNV\)                                         DFLT = ICONV\(DEFAULT,CCNV\)) showline
(0548                                                                 >  *) showline
(0549 CALL EDIT.SUB                                                      CALL EDIT.SUB) showline
(0550 IF VALUE = "END" AND OPTION = "A" THEN GOTO 1001                   IF VALUE = "END" AND OPTION = "A" THEN GOTO 1001) showline
(0551 IF VALUE = "END" THEN OLD.START.LINE = 0; GOTO 1999                IF VALUE = "END" THEN OLD.START.LINE = 0; GOTO 1999) showline
(0552                                                                 >  *TASK14705) showline
(0553 *T23256 v                                                          *T23256 v) showline
(0554                                                                 >  *     IF JOB.STATUS<1,1> > 3 AND VALUE GT DFLT THEN) showline
(0555 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 AND VALUE GT DF     IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 AND VALUE GT ) showline
(0556 *T23256 ^                                                          *T23256 ^) showline
(0557 ERRMSG = "YOU MAY NOT INCREASE ALLOCATED AMT ON COMPLETED JOBS     ERRMSG = "YOU MAY NOT INCREASE ALLOCATED AMT ON COMPLETED JO) showline
(0558 GOSUB 91000                                                        GOSUB 91000) showline
(0559 GOTO 1007                                                          GOTO 1007) showline
(0560 END                                                                END) showline
(0561 *                                                                  *) showline
(0562 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0563 VALUE = INT\(\(\(VALUE/ICR.MT1\)*ICR.DV1\)*ICR.DV2 + .5\)                VALUE = INT\(\(\(VALUE/ICR.MT1\)*ICR.DV1\)*ICR.DV2 + .5\)) showline
(0564 *      VALUE=INT\(\(VALUE/100\)+.5\)                                |  VALUE=INT\(\(VALUE/100\)+.5\)                           ) showline
(0565 *      VALUE=VALUE*100                                          |  VALUE=VALUE*100                                     ) showline
(0566 END ELSE                                                           END ELSE) showline
(0567 VALUE = VALUE * 10                                                 VALUE = VALUE * 10) showline
(0568 END                                                                END) showline
(0569 *T27974 v                                                       <  ) showline
(0570 DIFF.QTY = ABS\(VALUE-PO.JB.RECEVED<1,LNP,LNJ>\)                  <  ) showline
(0571 IF \(INV.UNIT<1,3> = 'MSI' AND DIFF.QTY <= 50\) OR DIFF.QTY <= 9  <  ) showline
(0572 VALUE = PO.JB.RECEVED<1,LNP,LNJ>                                <  ) showline
(0573 END                                                             <  ) showline
(0574 *T27974 ^                                                       <  ) showline
(0575 IF VALUE < PO.JB.RECEVED<1,LNP,LNJ> AND PO.JB.RECEVED<1,LNP,LN     IF VALUE < PO.JB.RECEVED<1,LNP,LNJ> AND PO.JB.RECEVED<1,LNP,) showline
(0576 ERRMSG = "TOTAL QUANTITY ALLOCATED CAN'T BE LESS THAN QUANTITY     ERRMSG = "TOTAL QUANTITY ALLOCATED CAN'T BE LESS THAN QUANTI) showline
(0577 END                                                                END) showline
(0578 IF VALUE - PO.JB.RECEVED<1,LNP,LNJ> > BAL.OPEN + \(PO.JB.ONORD<     IF VALUE - PO.JB.RECEVED<1,LNP,LNJ> > BAL.OPEN + \(PO.JB.ONOR) showline
(0579 ERRMSG = "QUANTITY ALLOCATED CAN'T BE MORE THAN QUANTITY ORDER     ERRMSG = "QUANTITY ALLOCATED CAN'T BE MORE THAN QUANTITY ORD) showline
(0580 END                                                                END) showline
(0581 PO.JB.ONORD<1,LNP,LNJ> = VALUE                                     PO.JB.ONORD<1,LNP,LNJ> = VALUE) showline
(0582 **** PRINT QTY RECEVED                                          |  **** INPUT QTY RECEVED) showline
(0583 1008*                                                              1008*) showline
(0584 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0585 P_X  = 56 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.RECEVED<1,LNP,LN     P_X  = 56 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.RECEVED<1,LNP,) showline
(0586 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0587 END ELSE                                                           END ELSE) showline
(0588 P_X  = 56 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.RECEVED<1,LN     P_X  = 56 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.RECEVED<1,) showline
(0589 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0590 END                                                                END) showline
(0591 **** PRINT OPEN QTYS                                               **** PRINT OPEN QTYS) showline
(0592 1009*                                                              1009*) showline
(0593 PO.JB.OPEN<1,LNP,LNJ> = PO.JB.ONORD<1,LNP,LNJ> - PO.JB.RECEVED     PO.JB.OPEN<1,LNP,LNJ> = PO.JB.ONORD<1,LNP,LNJ> - PO.JB.RECEV) showline
(0594 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0595 P_X  = 69 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.OPEN<1,LNP,LNJ>/     P_X  = 69 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.OPEN<1,LNP,LNJ) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0596 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0597 END ELSE                                                           END ELSE) showline
(0598 P_X  = 69 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.OPEN<1,LNP,L     P_X  = 69 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.OPEN<1,LNP) showline
(0599 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0600 END                                                                END) showline
(0601 LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # ""\)      LINES = COUNT\(PO.JOB.NO<1,LNP>,SVM\) + \(PO.JOB.NO<1,LNP> # "") showline
(0602 GOSUB 1020                                                         GOSUB 1020) showline
(0603 1999*                                                              1999*) showline
(0604 RETURN                                                             RETURN) showline
(0605 **** PRINT TOTALS                                                  **** PRINT TOTALS) showline
(0606 1020*                                                              1020*) showline
(0607 TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0                           TOT.ORD = 0 ; TOT.REC = 0 ; TOT.OPEN = 0) showline
(0608 FOR AD = 1 TO LINES                                                FOR AD = 1 TO LINES) showline
(0609 TOT.ORD = TOT.ORD + PO.JB.ONORD<1,LNP,AD>                          TOT.ORD = TOT.ORD + PO.JB.ONORD<1,LNP,AD>) showline
(0610 TOT.REC = TOT.REC + PO.JB.RECEVED<1,LNP,AD>                        TOT.REC = TOT.REC + PO.JB.RECEVED<1,LNP,AD>) showline
(0611 TOT.OPEN = TOT.OPEN + PO.JB.OPEN<1,LNP,AD>                         TOT.OPEN = TOT.OPEN + PO.JB.OPEN<1,LNP,AD>) showline
(0612 NEXT AD                                                            NEXT AD) showline
(0613 1030*                                                              1030*) showline
(0614 BAL.ORD = PO.TOT.ONORD<1,LNP> - PO.TOT.CANCEL<1,LNP> - TOT.ORD     BAL.ORD = PO.TOT.ONORD<1,LNP> - PO.TOT.CANCEL<1,LNP> - TOT.O) showline
(0615 BAL.REC = \(PO.TOT.RECEVED<1,LNP> + PO.PREV.RECEVED<1,LNP>\) - T     BAL.REC = \(PO.TOT.RECEVED<1,LNP> + PO.PREV.RECEVED<1,LNP>\) -) showline
(0616 BAL.OPEN = PO.QTY.OPEN<1,LNP> - TOT.OPEN                           BAL.OPEN = PO.QTY.OPEN<1,LNP> - TOT.OPEN) showline
(0617 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0618 P_X  = 42 ; P_Y = 17 ; P_VALUE = INT\(\(\(TOT.ORD/ICR.DV1\)*ICR.MT     P_X  = 42 ; P_Y = 17 ; P_VALUE = INT\(\(\(TOT.ORD/ICR.DV1\)*ICR.) showline
(0619 P_X  := AM:55 ; P_Y := AM:17 ; P_VALUE := AM:INT\(\(\(TOT.REC/ICR     P_X  := AM:55 ; P_Y := AM:17 ; P_VALUE := AM:INT\(\(\(TOT.REC/I) showline
(0620 P_X  := AM:68 ; P_Y := AM:17 ; P_VALUE := AM:INT\(\(\(TOT.OPEN/IC     P_X  := AM:68 ; P_Y := AM:17 ; P_VALUE := AM:INT\(\(\(TOT.OPEN/) showline
(0621 P_X  := AM:42 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.ORD/ICR     P_X  := AM:42 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.ORD/I) showline
(0622 P_X  := AM:55 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.REC/ICR     P_X  := AM:55 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.REC/I) showline
(0623 P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.OPEN/IC     P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:INT\(\(\(BAL.OPEN/) showline
(0624 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0625 END ELSE                                                           END ELSE) showline
(0626 P_X  = 42 ; P_Y = 17 ; P_VALUE = OCONV\(INT\(TOT.ORD/10\), "MD2"\)     P_X  = 42 ; P_Y = 17 ; P_VALUE = OCONV\(INT\(TOT.ORD/10\), "MD2) showline
(0627 P_X  := AM:55 ; P_Y := AM:17 ; P_VALUE := AM:OCONV\(INT\(TOT.REC     P_X  := AM:55 ; P_Y := AM:17 ; P_VALUE := AM:OCONV\(INT\(TOT.R) showline
(0628 P_X  := AM:68 ; P_Y := AM:17 ; P_VALUE := AM:OCONV\(INT\(TOT.OPE     P_X  := AM:68 ; P_Y := AM:17 ; P_VALUE := AM:OCONV\(INT\(TOT.O) showline
(0629 P_X  := AM:42 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.ORD     P_X  := AM:42 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.O) showline
(0630 P_X  := AM:55 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.REC     P_X  := AM:55 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.R) showline
(0631 P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.OPE     P_X  := AM:68 ; P_Y := AM:19 ; P_VALUE := AM:OCONV\(INT\(BAL.O) showline
(0632 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0633 END                                                                END) showline
(0634 RETURN                                                             RETURN) showline
(0635 **** SCROLL ROUTINE FOR JOBS                                       **** SCROLL ROUTINE FOR JOBS) showline
(0636 10000*                                                             10000*) showline
(0637 START.LINE = 1 + INT\(\(LNJ-1\)/PAGE.SIZE\) * PAGE.SIZE                START.LINE = 1 + INT\(\(LNJ-1\)/PAGE.SIZE\) * PAGE.SIZE) showline
(0638 IF START.LINE = OLD.START.LINE THEN GOTO 10001                     IF START.LINE = OLD.START.LINE THEN GOTO 10001) showline
(0639 OLD.START.LINE = START.LINE                                        OLD.START.LINE = START.LINE) showline
(0640 LAST.LINE = START.LINE + PAGE.SIZE - 1                             LAST.LINE = START.LINE + PAGE.SIZE - 1) showline
(0641 CNT = 1                                                            CNT = 1) showline
(0642 FOR N = START.LINE TO LAST.LINE UNTIL N > LINES                    FOR N = START.LINE TO LAST.LINE UNTIL N > LINES) showline
(0643 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(N-1,PAGE.SIZE\)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(N-1,PAGE.SIZE\)) showline
(0644 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL") showline
(0645 P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#3"               P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:N "R#3") showline
(0646 P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JOB.NO<1,LNP,N     P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JOB.NO<1,LNP) showline
(0647 P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.CUST<1,N> "     P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.CUST<1,N>) showline
(0648 IF PSS.FLAG = "Y" THEN ; * pss                                  <  ) showline
(0649 P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JB.DEPT<1,LNP  <  ) showline
(0650 P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JB.CCTR<1,LNP  <  ) showline
(0651 END ; * pss                                                     <  ) showline
(0652 P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JB.UNITS<1,LN     P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:PO.JB.UNITS<1,) showline
(0653 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0654 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"               P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL") showline
(0655 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
showpage
<< /PageSize  [792 612] /Duplex true >> setpagedevice

36 576 moveto
(0656 IF ICR.CNV = "MD0" THEN                                            IF ICR.CNV = "MD0" THEN) showline
(0657 P_X  = 43 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.ONORD<1,LNP,N>/I     P_X  = 43 ; P_Y = SLN ; P_VALUE = INT\(\(\(PO.JB.ONORD<1,LNP,N>) showline
(0658 P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:INT\(\(\(PO.JB.RECE     P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:INT\(\(\(PO.JB.RE) showline
(0659 P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:INT\(\(\(PO.JB.OPEN     P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:INT\(\(\(PO.JB.OP) showline
(0660 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0661 END ELSE                                                           END ELSE) showline
(0662 P_X  = 43 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.ONORD<1,LNP,     P_X  = 43 ; P_Y = SLN ; P_VALUE = OCONV\(INT\(PO.JB.ONORD<1,LN) showline
(0663 P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV\(INT\(PO.JB.     P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV\(INT\(PO.J) showline
(0664 P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV\(INT\(PO.JB.     P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV\(INT\(PO.J) showline
(0665 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0666 END                                                                END) showline
(0667 P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = DESC.LINE<1,N> "L#24" ; P_     P_X  = 13 ; P_Y = SLN+1 ; P_VALUE = DESC.LINE<1,N> "L#24" ; ) showline
(0668 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0669 CNT = CNT + 1                                                      CNT = CNT + 1) showline
(0670 NEXT N                                                             NEXT N) showline
(0671 FOR M = CNT TO PAGE.SIZE                                           FOR M = CNT TO PAGE.SIZE) showline
(0672 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(M-1,PAGE.SIZE\)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD\(M-1,PAGE.SIZE\)) showline
(0673 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL") showline
(0674 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0675 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"               P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL") showline
(0676 CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)                              CALL VSI_PLINE\(P_X,P_Y,P_VALUE,P_OPT\)) showline
(0677 NEXT M                                                             NEXT M) showline
(0678 10001*                                                             10001*) showline
(0679 RETURN                                                             RETURN) showline
(0680 **** ENTER LINE NUMBER                                             **** ENTER LINE NUMBER) showline
(0681 60000*                                                             60000*) showline
(0682 GOSUB 10000                                                        GOSUB 10000) showline
(0683 ECD.NUM = 7; SCV.REC\(7\)<ECD.SCRN.NO> = ""                          ECD.NUM = 7; SCV.REC\(7\)<ECD.SCRN.NO> = "") showline
(0684 ECD.MINV = OLD.START.LINE                                          ECD.MINV = OLD.START.LINE) showline
(0685 IF LAST.LINE < LINES THEN                                          IF LAST.LINE < LINES THEN) showline
(0686 ECD.MAXV = LAST.LINE                                               ECD.MAXV = LAST.LINE) showline
(0687 END ELSE                                                           END ELSE) showline
(0688 ECD.MAXV = LINES                                                   ECD.MAXV = LINES) showline
(0689 END                                                                END) showline
(0690 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT) showline
(0691 LNO = ECD.RET.VALUE                                                LNO = ECD.RET.VALUE) showline
(0692 IF LNO = '' OR LNO = 'END' THEN LNO = 0                            IF LNO = '' OR LNO = 'END' THEN LNO = 0) showline
(0693 RETURN                                                             RETURN) showline
(0694 **** CALLS FOR SYSCOM                                              **** CALLS FOR SYSCOM) showline
(0695 91000 ERR.TYPE=1;CALL SYSCOM\(MAT SYSCOM.REC\);RETURN                91000 ERR.TYPE=1;CALL SYSCOM\(MAT SYSCOM.REC\);RETURN) showline
(0696                                                                 >  * 91000*) showline
(0697                                                                 >  *     PRINT @\(0,23\): CL : ERRMSG :) showline
(0698                                                                 >  *     INPUT REPLY,1 :) showline
(0699                                                                 >  *     PRINT @\(0,23\) : CL :) showline
(0700                                                                 >  *     RETURN) showline
(0701 99999*                                                             99999*) showline
(0702                                                                 >  *     PRINT @\(-1\) :) showline
(0703 ECD.ACTION=99;CALL SCRN.EDIT                                       ECD.ACTION=99;CALL SCRN.EDIT) showline
(0704 RETURN                                                             RETURN) showline
(0705 END                                                                END) showline
(0706 ) showline
showpage