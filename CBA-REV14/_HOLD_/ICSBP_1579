









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:30:53 CDT 2006
  ###    #####   #####  ######  ######
   #    #     # #     # #     # #     #
   #    #       #       #     # #     #
   #    #        #####  ######  ######
   #    #             # #     # #
   #    #     # #     # #     # #
  ###    #####   #####  ######  #

ICSBP/POST.MATL                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.MATL
Printed for thompson at 06/28/2006 04:30:52PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   |  *COPY>JCS.CPYLIB>COM.JOB
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   |  *COPY>JCS.CPYLIB>COM.JOB.MATL
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 **************************************************************     ************************************************************
0007 * REVISION   -[08.0B]                                           |  * REVISION    - [08.0B]
0008 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof

0009 * SYSTEM     -PRIMAC                                            |  * SYSTEM      - PRIMAC
0010 * SOURCE     -JCSBP                                             |  * SOURCE      - JCSBP
0011 * PROGRAM    -POST.MATL                                         |  * PROGRAM     - POST.MATL
0012 * AUTHOR     -ZIAD YAMOUT, C.B.A                                |  * AUTHOR      - ZIAD YAMOUT, C.B.A
0013 * DESCRIPTION                                                      * DESCRIPTION
0014 * This program posts DAILY.MATL record to JOB and JOB.MATL fil     * This program posts DAILY.MATL record to JOB and JOB.MATL f
0015 * The DAILY.MATL record is deleted.                                * The DAILY.MATL record is deleted.

0015 * The DAILY.MATL record is deleted.                                * The DAILY.MATL record is deleted.
0016 ******* renee 08/18/1997 * Putting changes Julie made in REV10     ******* renee 08/18/1997 * Putting changes Julie made in REV
0017 *                          REV11 for T21523 and C25667. (see b     *                          REV11 for T21523 and C25667. (see
0018 *C25667 GAT   05/09/1996 * CORRECT PC/MSI POST ON MINUTE CALC      *C25667 GAT   05/09/1996 * CORRECT PC/MSI POST ON MINUTE CAL
0019 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID NOT     *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID N
0020                                                                 >  *C31949 Add 'X' to RSID compare.
0021 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.     *T23278 markt 11/20/1998 * Accumulate fiscal data by divisio
0022 *T26334 epitka 12/12/2001 * REV12                               |  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0023 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  |  *                             needing a authorization.
0024 *                             Whse.                             <  

0025 *T26334 epitka 04/04/2002 * R                                   <  
0026 *T26556 adelgado 05/10/2002 * Add validation for period checki  <  
0027 *                             serial level.                     <  
0028 *T26665 adelgado 07/05/2002 * Mods to recalculate Average cost  <  
0029 *                             posting to a future period.       <  
0030 *T26505 epitka 08/29/2002 * Force location from serial.         <  
0031 *T25740 epitka 01/17/2003 * fix 41358 csf                       <  

0032 *T27341 lross 03/17/2003 * PERIOD check will only work if DMT.  <  
0033 *                          ISTK.WHSE (or LOC diff).             <  
0034 *T27990 lross 03/17/2004 * Include check for qty adj in future  <  
0035 **************************************************************     ************************************************************
0036 *                                                                  *
0037 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0038 *                                                                  *

0046 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY
0047 *COPY>ICS.CPYLIB>INV.WHSE.LOC                                      *COPY>ICS.CPYLIB>INV.WHSE.LOC
0048 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0049 *COPY>ICS.CPYLIB>INV.STATS                                         *COPY>ICS.CPYLIB>INV.STATS
0050 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0051 *COPY>ICS.CPYLIB>INV_AUDIT_HIST                                 |  *COPY>ICS.CPYLIB>INV.TRAN.HIST
0052 *COPY>ICS.CPYLIB>INV.HIST                                          *COPY>ICS.CPYLIB>INV.HIST
0053 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0054 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0055 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT

0056 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0057 *COPY>ICS.CPYLIB>WAREHOUSE                                         *COPY>ICS.CPYLIB>WAREHOUSE
0058 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  * T21523
0059 *COPY>ICS.CPYLIB>INV.CNV                                        |  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0060                                                                 >  * T21523
0061 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0062 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0063 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0064 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR

0063 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0064 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0065 *                                                                  *
0066 *---- INTITIALIZATION                                              *---- INTITIALIZATION
0067 *                                                                  *
0068 *DIM ORG.IWH.REC(80) ; MAT ORG.IWH.REC=''                       |  MAT FILE.VARS = ''
0069 MAT FILE.VARS=''                                                |  MAT EDIT.COM.DRIVER = ''
0070 MAT EDIT.COM.DRIVER=''                                          |  MAT COMP.REC = ''
0071 MAT COMP.REC=''                                                 |  MAT JSI.REC = ""
0072 MAT JSI.REC=""                                                  |  MAT IH.REC = ""

0073 MAT IH.REC=""                                                   <  
0074 GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000"                 <  
0075 *                                                                  *
0076 *---- SETUP ERRMSG ROUTINE                                         *---- SETUP ERRMSG ROUTINE
0077 *                                                                  *
0078 SYS.TYPE=1                                                      |  SYS.TYPE = 1
0079 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

0080 *                                                                  *
0081 PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM A PROC";GOTO 93000    |  ***** T23278 v
0082 DIV.CODE=XX<5>                                                  <  
0083 *                                                                  *
0084                                                                 >  PROCREAD XX ELSE ERRMSG = "MUST BE RUN FROM A PROC"; GOTO 93
0085                                                                 >  DIV.CODE = XX<5>
0086                                                                 >  *
0087                                                                 >  ***** T23278 ^

0088                                                                 >  *
0089 *---- OPEN FILES                                                   *---- OPEN FILES
0090 *                                                                  *
0091 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISS  |  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS 
0092 OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93  |  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GO
0093 OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG='SPOIL.STATS   |  OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG = 'SPOIL.ST
0094 OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG='DAILY.MATL FIL  |  OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG = 'DAILY.MATL

0095 OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG='JOB.MATL FILE IS M  |  OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE 
0096 OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG='PROD.STATS FIL  |  OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG = 'PROD.STATS
0097 OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG='COST.CNT  |  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST
0098 OPEN '','OJOB.MATL' TO OJOB.MATL ELSE ERRMSG='OJOB.MATL FILE I  |  OPEN '','OJOB.MATL' TO OJOB.MATL ELSE ERRMSG = 'OJOB.MATL FI
0099 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISS  |  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS 
0100 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS M  |  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE 
0101 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FI  |  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREEN

0102 OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS   |  OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE
0103 OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FI  |  OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMEN
0104 OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE   |  OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR F
0105 OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS M  |  OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE 
0106 OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE I  |  OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FI
0107 OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE I  |  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FI
0108 OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS M  |  OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE 

0109 OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG='INV.HIST FILE IS M  |  OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG = 'INV.HIST FILE 
0110 OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.L  |  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WH
0111 OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE ERRMSG='  |  OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FI
0112 OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG='INV.STATS FILE I  |  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.
0113 OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG='INV.JOB.  |  OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG = 'FOH.TABLE FI
0114 OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG='FOH.TABLE FILE I  |  OPEN '','INV.TRAN.HIST' TO INV.TRAN.HIST ELSE ERRMSG = 'INV.
0115 OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG='INV_AU  |  OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB

0116 OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STA  |  * T21523
0117 OPEN '', 'INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FI  |  OPEN '', 'ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG = 'R
0118 OPEN '', 'INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV  |  * T21523
0119 GANG.PRESENT=1                                                  |  ** TASK 16796 ************
0120 OPEN '','GANG.JOB' TO GANG.JOB ELSE GANG.PRESENT=0              |  GANG.PRESENT = 1
0121 OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE GANG.PRESENT=0          |  OPEN '','GANG.JOB' TO GANG.JOB ELSE GANG.PRESENT = 0
0122                                                                 >  OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE GANG.PRESENT = 0

0123                                                                 >  **************************
0124 *                                                                  *
0125 *---- SETUP VALUES FROM JCS.SCREENS                                *---- SETUP VALUES FROM JCS.SCREENS
0126 *                                                                  *
0127 ECD.ACTION=1                                                    |  ECD.ACTION = 1
0128 ECD.SCRN.CNT=1                                                  |  ECD.SCRN.CNT = 1
0129 ECD.SCRN.NAME='GET.FISCAL.MONTH'                                |  ECD.SCRN.NAME = 'GET.FISCAL.MONTH'

0130 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0131 ECD.SCRN.NO=1                                                   |  ECD.SCRN.NO = 1
0132 *                                                                  *
0133 *---- INTITIALIZATION                                              *---- INTITIALIZATION
0134 *                                                                  *
0135 MAT SCV.REC=""                                                  |  MAT SCV.REC = ""
0136 ECD.ACTION=2                                                    |  ECD.ACTION = 2
0137 CALL SCRN.EDIT                                                     CALL SCRN.EDIT

0138 DCNT=0                                                          |  DCNT = 0
0139 SAVE.ID=""                                                      |  SAVE.ID = ""
0140 SAVE.QTY=""                                                     |  SAVE.QTY = ""
0141 SAVE.STATUS=""                                                  |  SAVE.STATUS = ""
0142 EDIT.ERROR=0                                                    |  EDIT.ERROR = 0
0143 QTY.ERROR=0                                                     |  QTY.ERROR = 0
0144 PREV.PROD="!@#$%"                                               |  PREV.PROD = "!@#$%"

0145 PREV.WHSE="!@#$%"                                               |  PREV.WHSE = "!@#$%"
0146 PREV.LOC ="!@#$%"                                               |  PREV.LOC  = "!@#$%"
0147 PREV.SERIAL="!@#$%"                                             |  PREV.RSID = "!@#$%"
0148 *                                                                  *
0149 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0150 *                                                                  *
0151 READNEXT DMT.ID ELSE GOTO 99999                                    READNEXT DMT.ID ELSE GOTO 99999

0152 TODAY=DATE()                                                    |  TODAY = DATE()
0153 CONO=DMT.ID[1,3]                                                |  CONO = DMT.ID[1,3]
0154 JMT.ID=DMT.ID[4,99]                                             |  * T21523
0155                                                                 >  READ BCI FROM CONTROL,CONO:"RL.SK.CONTROL" ELSE BCI=""
0156                                                                 >  * T21523
0157                                                                 >  JMT.ID = DMT.ID[4,99]
0158 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999                MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999

0159 MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE        MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
0160 MAT WIP.LEVEL.REC=""                                            |  MAT WIP.LEVEL.REC = ""
0161 WLR.MT.COST=2;WLR.MT.WIP=2                                      |  WLR.MT.COST = 2; WLR.MT.WIP = 2
0162 END                                                                END
0163                                                                 >  *      CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POST
0164 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POSTING P     CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POSTING
0165 IF POSTING.MON="END" THEN GOTO 99999                            |  IF POSTING.MON = "END" THEN GOTO 99999
0166 MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE     MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" EL

0167 MAT JOB.CUTOFF.REC=''                                           |  MAT JOB.CUTOFF.REC = ''
0168 J.CUTOFF.NUM=0                                                  |  J.CUTOFF.NUM = 0
0169 END                                                                END
0170 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0171 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0172 GOTO 99999                                                         GOTO 99999
0173 END                                                                END

0174 GOSUB CHECK.DMT.REC                                             |  GOSUB 1000
0175 IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL                        |  IF DMT.STATUS = "" THEN GOSUB 1800; * T21523
0176 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0177 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0178 END ELSE                                                           END ELSE
0179 GOSUB CHECK.INVENTORY                                           |  GOSUB 1200
0180 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN

0181 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0182 END ELSE                                                           END ELSE
0183 GOSUB CHECK.QTY                                                 |  GOSUB 1500
0184 IF DMT.STATUS # "" THEN QTY.ERROR=1                             |  IF DMT.STATUS # "" THEN QTY.ERROR = 1
0185 END                                                                END
0186 END                                                                END
0187 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000

0188 PREV.PROD=DMT.PROD                                              |  PREV.PROD = DMT.PROD
0189 PREV.WHSE=DMT.WHSE                                              |  PREV.WHSE = DMT.WHSE
0190 PREV.LOC =DMT.LOC                                               |  PREV.LOC  = DMT.LOC
0191 PREV.SERIAL=DMT.SERIAL                                          |  PREV.RSID = DMT.R.S.ID
0192 RELEASE                                                            RELEASE
0193 *                                                                  *
0194 DATA=1                                                          |  DATA = 1

0195 LOOP                                                               LOOP
0196 READNEXT DMT.ID ELSE DATA=0                                     |  READNEXT DMT.ID ELSE DATA = 0
0197 WHILE DATA DO                                                      WHILE DATA DO
0198 IF DMT.ID[1,3] = CONO THEN                                      |  IF DMT.ID[1,3] # CONO THEN GOTO 999
0199 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                   |  MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0200 IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR DMT.LOC # P  |  RELEASE DAILY.MATL, DMT.ID
0201 SAVE.DMT.ID=DMT.ID                                              |  GOTO 999
0202 IF DCNT>0 THEN                                                  <  

0203 IF EDIT.ERROR OR QTY.ERROR THEN                                 <  
0204 GOSUB PROCESS.REJECTS                                           <  
0205 END ELSE                                                        <  
0206 GOSUB POST.SAVED.DATA                                           <  
0207 END                                                                END
0208 DMT.ID=SAVE.DMT.ID                                              |  *C31949 v Add 'X' to RSID compare
0209 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                   |  *        IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR 

0210 JMT.ID=DMT.ID[4,99]                                             |  IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR DMT.LOC #
0211 DCNT=0                                                          |  *C31949 ^
0212 SAVE.ID=""                                                      |  SAVE.DMT.ID = DMT.ID
0213 SAVE.QTY=""                                                     |  BEGIN CASE
0214 SAVE.STATUS=""                                                  |  CASE DCNT = 0
0215 QTY.ERROR=0                                                     |  GOTO 900
0216 EDIT.ERROR=0                                                    |  CASE EDIT.ERROR OR QTY.ERROR

0217 PREV.PROD=DMT.PROD                                              |  GOSUB 2500
0218 PREV.WHSE=DMT.WHSE                                              |  CASE 1
0219 PREV.LOC =DMT.LOC                                               |  GOSUB 3000                  ;* POST SAVED DATA
0220 PREV.SERIAL=DMT.SERIAL                                          |  END CASE
0221 END ELSE                                                        |  DMT.ID = SAVE.DMT.ID
0222                                                                 >  MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0223 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID

0224 PREV.PROD="!@#$%"                                               |  PREV.PROD = "!@#$%"
0225 PREV.WHSE="!@#$%"                                               |  PREV.WHSE = "!@#$%"
0226 PREV.LOC ="!@#$%"                                               |  PREV.LOC  = "!@#$%"
0227 PREV.SERIAL="!@#$%"                                             |  PREV.RSID = "!@#$%"
0228 DMT.STATUS="Cannot re-access DAILY.MATL, ":DMT.ID               |  DMT.STATUS = "Cannot re-access DAILY.MATL, ":DMT.ID
0229 DCNT=0                                                          |  DCNT = 0
0230 SAVE.ID=""                                                      |  SAVE.ID = ""

0231 SAVE.QTY=""                                                     |  SAVE.QTY = ""
0232 SAVE.STATUS=""                                                  |  SAVE.STATUS = ""
0233 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0234 QTY.ERROR=0                                                     |  QTY.ERROR = 0
0235 QTY.USED=""                                                     |  QTY.USED = ""
0236 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000
0237                                                                 >  GOTO 999

0238 END                                                                END
0239                                                                 >  900 *
0240                                                                 >  JMT.ID = DMT.ID[4,99]
0241                                                                 >  DCNT = 0
0242                                                                 >  SAVE.ID = ""
0243                                                                 >  SAVE.QTY = ""
0244                                                                 >  SAVE.STATUS = ""
0245                                                                 >  QTY.ERROR = 0

0246                                                                 >  EDIT.ERROR = 0
0247                                                                 >  PREV.PROD = DMT.PROD
0248                                                                 >  PREV.WHSE = DMT.WHSE
0249                                                                 >  PREV.LOC  = DMT.LOC
0250                                                                 >  PREV.RSID = DMT.R.S.ID
0251 END                                                                END
0252 END                                                             |  GOSUB 1000

0253 IF NOT(EDIT.ERROR) THEN                                         |  IF DMT.STATUS = "" THEN GOSUB 1800; * T21523
0254 GOSUB CHECK.DMT.REC                                             <  
0255 IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL                        <  
0256 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0257 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0258 END ELSE                                                           END ELSE
0259 GOSUB CHECK.INVENTORY                                           |  GOSUB 1200

0260 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0261 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0262 END ELSE                                                           END ELSE
0263 GOSUB CHECK.QTY                                                 |  GOSUB 1500
0264 IF DMT.STATUS # "" THEN QTY.ERROR=1                             |  IF DMT.STATUS # "" THEN QTY.ERROR = 1
0265 END                                                                END
0266 END                                                                END
0267 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000

0268 RELEASE                                                         |  990 RELEASE
0269 END                                                             |  999 REPEAT
0270 END ELSE                                                        <  
0271 RELEASE DAILY.MATL, DMT.ID                                      <  
0272 END                                                             <  
0273 END                                                             <  
0274 RELEASE                                                         <  

0275 REPEAT                                                          <  
0276 *                                                                  *
0277 BEGIN CASE                                                         BEGIN CASE
0278 CASE DCNT=0                                                     |  CASE DCNT = 0
0279 NULL                                                               NULL
0280 CASE EDIT.ERROR OR QTY.ERROR                                       CASE EDIT.ERROR OR QTY.ERROR
0281 GOSUB PROCESS.REJECTS                                           |  GOSUB 2500

0282 CASE 1                                                             CASE 1
0283 GOSUB POST.SAVED.DATA                                           |  GOSUB 3000
0284 END CASE                                                           END CASE
0285 *                                                               <  
0286 GOTO 99999                                                         GOTO 99999
0287 *                                                                  *
0288 **************************************************************  |  *---- EDIT DAILY.MATL RECORD
0289 **** S U B R O U T I N E S ***********************************  <  

0290 **************************************************************  <  
0291 *                                                                  *
0292 ***************                                                 <  
0293 CHECK.DMT.REC:                                                  <  
0294 ***************                                                 <  
0295 *                                                               <  
0296 ERR=0                                                           <  

0297 1000 *                                                             1000 *
0298 POST.OSJ=0;DMT.STATUS='';QTY.USED=""                            |  POST.OSJ = 0; DMT.STATUS = ''; QTY.USED = ""
0299 MATREADU JOB.REC FROM JOB, CONO : DMT.JOB ELSE                     MATREADU JOB.REC FROM JOB, CONO : DMT.JOB ELSE
0300 MAT JOB.REC=''                                                  |  MAT JOB.REC = ''
0301 FND=0                                                           |  FND = 0
0302 IF NUM(DMT.JOB) THEN                                               IF NUM(DMT.JOB) THEN
0303 IF DMT.JOB < J.CUTOFF.NUM THEN FND=1                            |  IF DMT.JOB < J.CUTOFF.NUM THEN FND = 1
0304 END ELSE                                                           END ELSE

0305 JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)                               |  JC.CNT = DCOUNT(J.CUTOFF.PREFIX,VM)
0306 FOR L=1 TO JC.CNT WHILE FND=0                                   |  FOR L = 1 TO JC.CNT WHILE FND = 0
0307 PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)                             |  PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)
0308 IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN               |  IF J.CUTOFF.PREFIX<1,L> = DMT.JOB[1,PREFX.LEN] THEN
0309 CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]           |  CHK.VALUE = DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
0310 IF NUM(CHK.VALUE) THEN                                             IF NUM(CHK.VALUE) THEN
0311 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1

0311 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1
0312 END                                                                END
0313 END                                                                END
0314 NEXT L                                                             NEXT L
0315 END                                                                END
0316 IF FND=1 THEN                                                   |  IF FND = 1 THEN
0317 POST.OSJ=1                                                      |  POST.OSJ = 1
0318 JOB.DIV=DMT.DIV                                                 |  JOB.DIV = DMT.DIV
0319 JOB.TYPE=DMT.TYPE                                               |  JOB.TYPE = DMT.TYPE
0320 END ELSE                                                           END ELSE

0321 DMT.STATUS='JOB #':DMT.JOB:' MISSING';ERR=1                     |  DMT.STATUS = 'JOB #':DMT.JOB:' MISSING'; GOTO 1099
0322 END                                                                END
0323 END                                                                END
0324 IF NOT(ERR) THEN                                                <  
0325 BEGIN CASE                                                         BEGIN CASE
0326 CASE JOB.STATUS<1,1>=9                                          |  CASE JOB.STATUS<1,1> = 9
0327 DMT.STATUS="JOB #":DMT.JOB:" CANCELLED";ERR=1                   |  DMT.STATUS = "JOB #":DMT.JOB:" CANCELLED"; GOTO 1099

0328 CASE JOB.STATUS<1,1>=7                                          |  CASE JOB.STATUS<1,1> = 7
0329 DMT.STATUS="JOB #":DMT.JOB:" READY TO PURGE";ERR=1              |  DMT.STATUS = "JOB #":DMT.JOB:" READY TO PURGE"; GOTO 1099
0330 CASE JOB.STATUS<1,1>=8                                          |  CASE JOB.STATUS<1,1> = 8
0331 DMT.STATUS="JOB #":DMT.JOB:" IS PURGED";ERR=1                   |  DMT.STATUS = "JOB #":DMT.JOB:" IS PURGED"; GOTO 1099
0332                                                                 >  CASE JOB.STATUS<1,1> = 3              ;* T26942
0333 CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC     CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TR
0334 IF DMT.INIT="" THEN                                             |  IF DMT.INIT = "" THEN

0335 DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUT  |  DMT.STATUS = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS.
0336 ERR=1                                                           |  GOTO 1099
0337 END ELSE                                                           END ELSE
0338 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE
0339 DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUT  |  DMT.STATUS = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS.
0340 ERR=1                                                           |  GOTO 1099
0341 END                                                                END

0342 END                                                                END
0343 END CASE                                                           END CASE
0344 END                                                             <  
0345 IF NOT(ERR) THEN                                                <  
0346 IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN                     IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
0347 DMT.STATUS="JOB/TYPE MISMATCH"                                  |  DMT.STATUS = "JOB/TYPE MISMATCH"; GOTO 1099
0348 END ELSE                                                        |  END
0349 IF JOB.DIV # DMT.DIV THEN                                          IF JOB.DIV # DMT.DIV THEN
0350 DMT.STATUS='JOB/DIV MISMATCH'                                   |  DMT.STATUS = 'JOB/DIV MISMATCH'; GOTO 1099

0351 END ELSE                                                        |  END
0352 * T26497 v                                                      |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.
0353 IF DMT.WHSE = CO.INTR.WHSE AND CO.INTR.WHSE # '' THEN           <  
0354 DMT.STATUS = 'UNABLE TO USE MATERIAL FROM INTER-DIVISIONAL WAR  <  
0355 END ELSE                                                        <  
0356 * T26497 ^                                                      <  
0357 MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.RE  <  

0358 IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN                       IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN
0359 DMT.STATUS='JOB/WHS DIV MISMATCH'                               |  DMT.STATUS = 'JOB/WHS DIV MISMATCH' ; GOTO 1099
0360 END ELSE                                                        |  END
0361 IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
0362 DMT.STATUS='JOB/DEPT MISMATCH'                                  |  DMT.STATUS = 'JOB/DEPT MISMATCH'; GOTO 1099
0363 END ELSE                                                        <  
0364 MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV THEN              <  
0365 MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT THEN          <  

0366 LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT THEN          <  
0367 MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR THEN           <  
0368 IF CCTR.DEPT = DMT.DEPT THEN                                    <  
0369 IF CCTR.TYPE#'F' THEN                                           <  
0370 LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE        <  
0371 DMT.STATUS='DEPT/CCTR MISMATCH'                                 <  
0372 END                                                                END

0373 END ELSE                                                        |  MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV ELSE
0374 DMT.STATUS='CCTR ':DMT.CCTR:' IS FROZEN'                        |  DMT.STATUS = 'DIV ':DMT.DIV:' MISSING'; GOTO 1099
0375 END                                                                END
0376 END ELSE                                                        |  MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT ELSE
0377 DMT.STATUS='DEPT/CCTR MISMATCH'                                 |  DMT.STATUS = 'DEPT ':DMT.DEPT:' MISSING'; GOTO 1099
0378 END                                                                END
0379 END ELSE                                                        |  LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE

0380 DMT.STATUS='CCTR ':DMT.CCTR:' MISSING'                          |  DMT.STATUS = 'DIV/DEPT MISMATCH'; GOTO 1099
0381 END                                                                END
0382 END ELSE                                                        |  MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR ELSE
0383 DMT.STATUS='DIV/DEPT MISMATCH'                                  |  DMT.STATUS = 'CCTR ':DMT.CCTR:' MISSING'; GOTO 1099
0384 END                                                                END
0385 END ELSE                                                        |  IF CCTR.DEPT # DMT.DEPT THEN
0386 DMT.STATUS='DEPT ':DMT.DEPT:' MISSING'                          |  DMT.STATUS = 'DEPT/CCTR MISMATCH'; GOTO 1099

0387 END                                                                END
0388 END ELSE                                                        |  IF CCTR.TYPE = 'F' THEN
0389 DMT.STATUS='DIV ':DMT.DIV:' MISSING'                            |  DMT.STATUS='CCTR ':DMT.CCTR:' IS FROZEN'; GOTO 1099
0390 END                                                                END
0391                                                                 >  LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
0392                                                                 >  DMT.STATUS = 'DEPT/CCTR MISMATCH'; GOTO 1099
0393 END                                                                END
0394 END                                                             |  1099 RETURN

0395 END     ;* T26497                                               <  
0396 END                                                             <  
0397 END                                                             <  
0398 END                                                             <  
0399 RETURN                                                          <  
0400 *                                                                  *
0401 *****************                                               |  *---- EDIT INVENTORY DATA

0402 CHECK.INVENTORY:                                                <  
0403 *****************                                               <  
0404 *                                                                  *
0405 HOLD.QTY=DMT.QTY                                                |  1200 *
0406 HOLD.STK.QTY=DMT.STK.QTY                                        |  HOLD.QTY = DMT.QTY
0407 DMT.QTY=0                                                       |  HOLD.SHEET = DMT.SHEET
0408 DMT.STK.QTY=0                                                   |  DMT.QTY = 0

0409                                                                 >  DMT.SHEET = 0
0410 JWPTR=''                                                           JWPTR=''
0411 MAT INAH.REC=''                                                 |  CALL POST.MATL.SUB ("P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.N
0412 * T26665 v                                                      |  DMT.QTY = HOLD.QTY
0413 * CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,  |  DMT.SHEET = HOLD.SHEET
0414 CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WL  <  
0415 * T26665 ^                                                      <  

0416 DMT.QTY=HOLD.QTY                                                <  
0417 DMT.STK.QTY=HOLD.STK.QTY                                        <  
0418 RETURN                                                             RETURN
0419 *                                                                  *
0420 ******************                                              |  *---- EDIT CUMULATIVE QUANTITY
0421 CHECK.QTY:                                                      <  
0422 ******************                                              <  

0423 *                                                                  *
0424 GOSUB GET.INV.UM.CNV                                            |  1500 *
0425 IF DMT.SERIAL="" OR IWLO.SERIAL="" THEN                         |  BEGIN CASE
0426 QTY.ON.HAND=IWLO.LOC.ON.HAND                                    |  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
0427                                                                 >  ICR.CNV = "MD0"
0428                                                                 >  ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
0429                                                                 >  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
0430                                                                 >  ICR.CNV = "MD0"

0431                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 10
0432                                                                 >  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
0433                                                                 >  ICR.CNV = "MD0"
0434                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
0435                                                                 >  END CASE
0436                                                                 >  IF DMT.R.S.ID = "" OR IWLO.R.S.ID = "" THEN
0437                                                                 >  WGT.ON.HAND = IWLO.LOC.ON.HAND

0438 END ELSE                                                           END ELSE
0439 LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE         |  LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE
0440 RLOC=1                                                          |  RLOC = 1
0441 END                                                                END
0442 *  QTY.ON.HAND=IWLO.CURR.WT<1,RLOC>                             |  WGT.ON.HAND = IWLO.CURR.WT<1,RLOC>
0443 QTY.ON.HAND=ISTK.CUR.QTY                                        <  
0444 END                                                                END
0445 BEGIN CASE                                                         BEGIN CASE

0446 CASE DMT.RS.QTYPE=""                                            |  CASE DMT.RS.QTYPE = ""
0447 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0448 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0449 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0450 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0451 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0452 END ELSE                                                           END ELSE

0453 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0454 END                                                                END
0455 CASE DMT.RS.QTYPE="WU"                                          |  CASE DMT.RS.QTYPE = "WU"
0456 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0457 *T27341 v insert                                                |  QTY.USED = DMT.QTY
0458 IF ABS(QTY.REM-DMT.QTY) <= 9 THEN                               |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0459 DMT.QTY=QTY.REM                                                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"

0460                                                                 >  CASE DMT.RS.QTYPE = "WR"
0461                                                                 >  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0462                                                                 >  QTY.USED = QTY.REM - DMT.QTY
0463                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0464                                                                 >  *PRINT "*** DMT.ID = ":DMT.ID:" ***": 
0465                                                                 >  *PRINT "*** QTY.USED = ":QTY.USED:" ***": 
0466                                                                 >  *PRINT "*** QTY.REM = ":QTY.REM:" ***": 

0467                                                                 >  *PRINT "*** DMT.QTY = ":DMT.QTY:" ***": 
0468                                                                 >  CASE DMT.RS.QTYPE = "SU"
0469                                                                 >  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0470                                                                 >  IF ABS(QTY.REM - DMT.QTY) <= 50 THEN
0471                                                                 >  DMT.QTY = QTY.REM
0472 END                                                                END
0473 *T27341 ^                                                       |  QTY.USED = DMT.QTY

0474 QTY.USED=DMT.QTY                                                |  *        C25667
0475 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            <  
0476 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 <  
0477 CASE DMT.RS.QTYPE="WR"                                          <  
0478 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               <  
0479 QTY.USED=QTY.REM-DMT.QTY                                        <  
0480 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 <  

0481 CASE DMT.RS.QTYPE="SU"                                          <  
0482 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               <  
0483 IF ABS(QTY.REM-DMT.QTY) <= 50 THEN                              <  
0484 DMT.QTY=QTY.REM                                                 <  
0485 END                                                             <  
0486 QTY.USED=DMT.QTY                                                <  
0487 BEGIN CASE                                                         BEGIN CASE

0488 CASE INV.UNIT<1,3>="MSI"                                        |  CASE INV.UNIT<1,3> = "MSI"
0489 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  *                IF ABS(QTY.REM - DMT.QTY) <= 50 THEN
0490 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  *                    DMT.QTY = QTY.REM
0491                                                                 >  *                    QTY.USED = DMT.QTY
0492                                                                 >  *                END ELSE
0493                                                                 >  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0494                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"

0495                                                                 >  *                END
0496 CASE 1                                                             CASE 1
0497 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0498 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0499 END CASE                                                           END CASE
0500 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  *        C25667  ^
0501 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"

0502 CASE DMT.RS.QTYPE="SR"                                          |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0503 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  CASE DMT.RS.QTYPE = "SR"
0504 QTY.USED=QTY.REM-DMT.QTY                                        |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0505 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  QTY.USED = QTY.REM - DMT.QTY
0506 CASE DMT.RS.QTYPE="DR"                                          |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0507 QTY=(((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100*INV.CORE.D  |  CASE DMT.RS.QTYPE = "DR"
0508                                                                 >  *PRINT '*** DMT.QTY = ': DMT.QTY: ' ***':

0509                                                                 >  QTY = (((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100*INV.CO
0510 BEGIN CASE                                                         BEGIN CASE
0511 CASE QTY <= 0                                                      CASE QTY <= 0
0512 QTY=0                                                           |  QTY = 0
0513 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0514 QTY.USED=QTY.REM                                                |  QTY.USED = QTY.REM
0515 CASE INV.PAP.TYPE="ROLL"                                        |  CASE INV.PAP.TYPE = "ROLL"

0516 QTY=INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000)/10  |  QTY = INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000
0517 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0518 QTY.USED=QTY.REM-QTY                                            |  QTY.USED = QTY.REM - QTY
0519 CASE INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"               |  CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
0520 BEGIN CASE                                                         BEGIN CASE
0521 CASE INV.UNIT<1,2>="FT"                                         |  CASE INV.UNIT<1,2> = "FT"
0522 QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/12+0.5)         |  QTY = INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/12+0.5)

0523 CASE INV.UNIT<1,2>="PC"                                         |  CASE INV.UNIT<1,2> = "PC"
0524 QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/10+0.5)         |  QTY = INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/10+0.5)
0525 END CASE                                                           END CASE
0526 QTY=INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)                    |  QTY = INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
0527 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0528 QTY.USED=QTY.REM-QTY                                            |  QTY.USED = QTY.REM - QTY
0529 END CASE                                                           END CASE

0530 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  *PRINT '*** QTY.REM = ': QTY.REM: ' ***':
0531                                                                 >  *PRINT '*** QTY.USED = ': QTY.USED: ' ***':
0532                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0533 CASE 1                                                             CASE 1
0534 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0535 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0536 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY

0537 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0538 END ELSE                                                           END ELSE
0539 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0540 END                                                                END
0541 END CASE                                                           END CASE
0542 RETURN                                                             RETURN
0543 *                                                                  *

0544 **************                                                  |  *---- CHECK ROLL.SKID RECORD
0545 CHECK.SERIAL:                                                   <  
0546 **************                                                  <  
0547 *                                                                  *
0548 IF DMT.SERIAL # '' THEN                                         |  1800 *
0549 MATREAD ISTK.REC FROM INV_SERIAL, CONO:DMT.SERIAL THEN          |  * T21523
0550 IF ISTK.POST.DATE="" THEN                                       |  IF (BCI<3> = "Y" OR BCI<4> = "Y") AND (DMT.R.S.ID # "") THEN

0551 DMT.STATUS="SERIAL NOT RECVD"                                   |  MATREAD RSKI.REC FROM ROLL.SKID.INFO, CONO:DMT.R.S.ID THEN
0552 END ELSE                                                        |  IF RSKI.POST.DATE = "" THEN
0553 IF ISTK.WHSE # DMT.WHSE OR ISTK.LOC#DMT.LOC THEN                |  DMT.STATUS = "ROLL/SKID NOT RECVD"
0554 IF ISTK.WHSE # DMT.WHSE THEN                                    <  
0555 DMT.STATUS ='Serial is in different warehouse.'                 <  
0556 END                                                                END
0557 IF ISTK.LOC# DMT.LOC THEN DMT.LOC=ISTK.LOC                      <  

0558 *T27341 ;* T26556 v                                             <  
0559 *       IF ISTK.RECP.PERIOD GT POSTING.MON THEN                 <  
0560 *         DMT.STATUS = 'Serial was received after the posting   <  
0561 *       END                                                     <  
0562 ;* T26556 ^                                                     <  
0563 END                                                                END
0564 *T27341 v Moved outside of "IF" above.                          <  

0565 IF ISTK.RECP.PERIOD GT POSTING.MON THEN                         <  
0566 DMT.STATUS = 'Serial was received after the posting period'     <  
0567 END                                                                END
0568 *T27990 v                                                       <  
0569 IF ISTK.FUTR.AUDIT.NO # '' THEN                                 <  
0570 FOR FF = 1 TO DCOUNT(ISTK.FUTR.AUDIT.NO,VM)                     <  
0571 MATREAD INAH.REC FROM INV_AUDIT_HIST,CONO:ISTK.FUTR.AUDIT.NO<1  <  

0572 IF INAH.PERIOD > POSTING.MON THEN                               <  
0573 ISTK.CUR.QTY -= INAH.QTY                                        <  
0574 ISTK.RSVB.QTY -= INAH.QTY                                       <  
0575 END                                                             <  
0576 END                                                             <  
0577 NEXT FF                                                         <  
0578 IF ISTK.CUR.QTY <= 0 THEN                                       <  

0579 DMT.STATUS='No serial quantity available in current period'     <  
0580 END                                                             <  
0581 END                                                             <  
0582 *T27990 ^                                                       <  
0583 END                                                             <  
0584 END                                                             <  
0585 END                                                             <  

0586 RETURN                                                             RETURN
0587                                                                 >  * T21523
0588 *                                                                  *
0589 ****************                                                |  *---- SAVE RELEVENT DATA FOR SUBSEQUENT PROCESSING
0590 SET.SAVE.DATA:                                                  <  
0591 ****************                                                <  
0592 *                                                                  *
0593 DCNT=DCNT+1                                                     |  2000 *

0594 SAVE.ID<DCNT>=DMT.ID                                            |  DCNT = DCNT + 1
0595 SAVE.QTY<DCNT>=QTY.USED                                         |  SAVE.ID<DCNT> = DMT.ID
0596 SAVE.STATUS<DCNT>=DMT.STATUS                                    |  SAVE.QTY<DCNT> = QTY.USED
0597                                                                 >  SAVE.STATUS<DCNT> = DMT.STATUS
0598 RETURN                                                             RETURN
0599 *                                                                  *
0600 ****************                                                |  *---- PROCESS REJECTS

0601 PROCESS.REJECTS:                                                <  
0602 ****************                                                <  
0603 *                                                                  *
0604 FOR DPTR=1 TO DCNT                                              |  2500 *
0605 DMT.ID=SAVE.ID<DPTR>                                            |  FOR DPTR = 1 TO DCNT
0606                                                                 >  DMT.ID = SAVE.ID<DPTR>
0607 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN

0608 STATUS=SAVE.STATUS<DPTR>                                        |  STATUS = SAVE.STATUS<DPTR>
0609 BEGIN CASE                                                         BEGIN CASE
0610 CASE STATUS # ""                                                   CASE STATUS # ""
0611 DMT.STATUS=STATUS                                               |  DMT.STATUS = STATUS
0612 CASE EDIT.ERROR                                                    CASE EDIT.ERROR
0613 DMT.STATUS="PRODUCT HOLD"                                       |  DMT.STATUS = "PRODUCT HOLD"
0614 CASE QTY.ERROR                                                     CASE QTY.ERROR

0615 DMT.STATUS="QUANTITY ???"                                       |  DMT.STATUS = "QUANTITY ???"
0616 END CASE                                                           END CASE
0617 MATWRITE DMT.REC ON DAILY.MATL, DMT.ID                             MATWRITE DMT.REC ON DAILY.MATL, DMT.ID
0618 END ELSE                                                           END ELSE
0619 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0620 END                                                                END
0621 NEXT DPTR                                                       |  2599 NEXT DPTR

0622 RETURN                                                             RETURN
0623 *                                                                  *
0624 *****************                                               |  *---- POST PREVIOUSLY SAVED DATA
0625 POST.SAVED.DATA:                                                <  
0626 *****************                                               <  
0627 *                                                                  *
0628 ERRFLG=0                                                        |  3000 *
0629 FOR DPTR=1 TO DCNT UNTIL ERRFLG                                 |  ERRFLG = 0
0630 DMT.ID=SAVE.ID<1>                                               |  FOR DPTR = 1 TO DCNT UNTIL ERRFLG

0631 JMT.ID=DMT.ID[4,99]                                             |  DMT.ID = SAVE.ID<1>
0632                                                                 >  JMT.ID = DMT.ID[4,99]
0633 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0634 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0635 SAVE.STATUS<1>="Cannot re-access DAILY.MATL, ":DMT.ID           |  SAVE.STATUS<1> = "Cannot re-access DAILY.MATL, ":DMT.ID
0636 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0637 END                                                                END

0638 GOSUB CHECK.DMT.REC                                             |  GOSUB 1000
0639 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0640 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0641 SAVE.STATUS<1>="Posting failure for DAILY.MATL, ":DMT.ID        |  SAVE.STATUS<1> = "Posting failure for DAILY.MATL, ":DMT.ID
0642 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0643 END                                                                END
0644 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE                 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE

0645 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0646 SAVE.STATUS<1>="Cannot re-access INVENTORY, ":DMT.PROD          |  SAVE.STATUS<1> = "Cannot re-access INVENTORY, ":DMT.PROD
0647 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0648 END                                                                END
0649 DMT.QTY=SAVE.QTY<1>                                             |  DMT.QTY = SAVE.QTY<1>
0650 GOSUB GET.INV.UM.CNV                                            |  BEGIN CASE
0651 DMT.STK.QTY=INT(((DMT.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2+0.5)      |  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
0652                                                                 >  ICR.CNV = "MD0"

0653                                                                 >  ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
0654                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0655                                                                 >  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
0656                                                                 >  ICR.CNV = "MD0"
0657                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 10
0658                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0659                                                                 >  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"

0660                                                                 >  ICR.CNV = "MD0"
0661                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
0662                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0663                                                                 >  END CASE
0664 JWPTR=''                                                           JWPTR=''
0665 MAT INAH.REC=''                                                 |  CALL POST.MATL.SUB ("F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.N
0666 * T26665 v                                                      <  

0667 * CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,  <  
0668 CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WL  <  
0669 * T26665 ^                                                      <  
0670 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0671 RELEASE                                                            RELEASE
0672 SAVE.STATUS<1>=DMT.STATUS                                       |  SAVE.STATUS<1> = DMT.STATUS
0673 QTY.ERROR=1;ERRFLG=1;GOTO 3099                                  |  QTY.ERROR = 1; ERRFLG = 1; GOTO 3099

0674 END                                                                END
0675 GOSUB POST.MATL                                                 |  GOSUB 4000
0676 SAVE.ID=DELETE(SAVE.ID,1,0,0)                                   |  SAVE.ID = DELETE(SAVE.ID,1,0,0)
0677 SAVE.QTY=DELETE(SAVE.QTY,1,0,0)                                 |  SAVE.QTY = DELETE(SAVE.QTY,1,0,0)
0678 SAVE.STATUS=DELETE(SAVE.STATUS,1,0,0)                           |  SAVE.STATUS = DELETE(SAVE.STATUS,1,0,0)
0679 3099 NEXT DPTR                                                     3099 NEXT DPTR
0680 IF ERRFLG THEN                                                     IF ERRFLG THEN
0681 DCNT=DCOUNT(SAVE.ID,AM)                                         |  DCNT = DCOUNT(SAVE.ID,AM)

0682 GOSUB PROCESS.REJECTS                                           |  GOSUB 2500
0683 END                                                                END
0684 RETURN                                                             RETURN
0685 *                                                                  *
0686 ***************                                                 |  *---- POST MATERIAL ENTRY
0687 POST.MATL:                                                      <  
0688 ***************                                                 <  

0689 *                                                                  *
0690                                                                 >  4000 *
0691 BEGIN CASE                                                         BEGIN CASE
0692 CASE POST.OSJ=0                                                 |  CASE POST.OSJ = 0
0693                                                                 >  MATWRITE JMT.REC ON JOB.MATL, JMT.ID
0694 MATWRITE JOB.REC ON JOB, CONO : DMT.JOB                            MATWRITE JOB.REC ON JOB, CONO : DMT.JOB
0695 MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD                     MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
0696 IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE                         |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE

0697 IH.ID=CONO : DMT.PROD                                           |  IH.ID = CONO : DMT.PROD
0698 IF ISTAT.JOB="" AND ISTAT.PO="" THEN                            |  IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
0699 DELETE INV.STATS, IWH.ID                                           DELETE INV.STATS, IWH.ID
0700 END ELSE                                                           END ELSE
0701 MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID                         MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
0702 END                                                                END
0703 IF IJS.JOB.QTY+IJS.JOB.ALOC+IJS.REQ.QTY=0 AND IJS.JMT.SEQ="" T  |  IF IJS.JOB.QTY+IJS.JOB.ALOC+IJS.REQ.QTY = 0 AND IJS.JMT.SEQ 

0710 MATWRITE SSR.REC ON SPOIL.STATS, SSR.ID                            MATWRITE SSR.REC ON SPOIL.STATS, SSR.ID
0711 END                                                                END
0712 IF CCW.ID # "" THEN                                                IF CCW.ID # "" THEN
0713 MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID                          MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
0714 END                                                                END
0715 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0716 GOSUB SET.INAH                                                  |  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
0717 ACTION=4                                                        <  
0718 JOB.ID=CONO:DMT.JOB                                             <  
0719 PERIOD=POSTING.MON                                              <  

0720 BEGIN CASE                                                      <  
0721 CASE CATG.TRK.LVL='S'                                           <  
0722 TMP.ARR= DMT.SERIAL                                             <  
0723 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0724 CASE CATG.TRK.LVL='G'                                           <  
0725 TMP.ARR=DMT.LOC                                                 <  
0726 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  

0727 END CASE                                                        <  
0728 MATWRITE IH.REC ON INV.HIST, IH.ID                                 MATWRITE IH.REC ON INV.HIST, IH.ID
0729                                                                 >  MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":DMT.LOC
0730                                                                 >  PTR = 0; ITH.ID = IWH.ID : '!' : TODAY
0731                                                                 >  MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
0732                                                                 >  MAT ITH.REC = ''; PTR = 1
0733 END                                                                END

0734 MATWRITE JMT.REC ON JOB.MATL, JMT.ID                            |  IF PTR = 0 THEN PTR = DCOUNT(ITH.TYPE,VM) + 1
0735                                                                 >  ITH.TYPE<1,PTR> = 'S'; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0736                                                                 >  ITH.TRAN<1,PTR> = JMT.SEQ; ITH.JOB<1,PTR> = DMT.JOB
0737                                                                 >  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS
0738                                                                 >  MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
0739                                                                 >  END
0740 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID

0741                                                                 >  ** TASK 16796 ************
0742 IF GANG.PRESENT THEN                                               IF GANG.PRESENT THEN
0743 READV REC FROM GANG.JOB,CONO:DMT.JOB,1 THEN                        READV REC FROM GANG.JOB,CONO:DMT.JOB,1 THEN
0744 MTL.ID=JMT.ID[4,99]                                                MTL.ID=JMT.ID[4,99]
0745 JDPTR=DCOUNT(JMT.DCOST,VM)                                         JDPTR=DCOUNT(JMT.DCOST,VM)
0746 STATUS=""                                                          STATUS=""
0747 CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,
G

0748 IF STATUS # "" THEN                                                IF STATUS # "" THEN
0749 P_X =0;P_Y=23;P_VALUE=@(-4):STATUS;P_OPT=""                     |  P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4):STATUS ; P_OPT = ""
0750 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0751 INPUT REPLY,1:                                                     INPUT REPLY,1:
0752 P_X =0;P_Y=23;P_VALUE=@(-4);P_OPT=""                            |  P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4) ; P_OPT = ""
0753 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0754 END                                                                END
0755 END                                                                END

0756 END                                                                END
0757                                                                 >  **************************
0758 CASE 1                                                             CASE 1
0759 MAT OJMT.REC=''                                                 |  MAT OJMT.REC = ''
0760 OJMT.JOB=DMT.JOB                                                |  OJMT.JOB = DMT.JOB
0761 OJMT.TYPE=JMT.TYPE                                              |  OJMT.TYPE = JMT.TYPE
0762 OJMT.SPOIL.CODE=JMT.SPOIL.CODE                                  |  OJMT.SPOIL.CODE = JMT.SPOIL.CODE
0763 OJMT.DIV=JMT.DIV                                                |  OJMT.DIV = JMT.DIV

0764 OJMT.DEPT=DMT.DEPT                                              |  OJMT.DEPT = DMT.DEPT
0765 OJMT.CCTR=DMT.CCTR                                              |  OJMT.CCTR = DMT.CCTR
0766 OJMT.PROD=DMT.PROD                                              |  OJMT.PROD = DMT.PROD
0767 OJMT.WHSE=DMT.WHSE                                              |  OJMT.WHSE = DMT.WHSE
0768 OJMT.LOC=JMT.LOC                                                |  OJMT.LOC = JMT.LOC
0769 OJMT.DATE=JMT.DATE                                              |  OJMT.DATE = JMT.DATE
0770 OJMT.MON=POSTING.MON                                            |  OJMT.MON = POSTING.MON

0771 OJMT.QTY=JMT.QTY                                                |  OJMT.QTY = JMT.QTY
0772 OJMT.DIAM=JMT.DIAM                                              |  OJMT.DIAM = JMT.DIAM
0773 OJMT.SHEET=JMT.SHEET                                            |  OJMT.SHEET = JMT.SHEET
0774 OJMT.R.S.ID=JMT.R.S.ID                                          |  OJMT.R.S.ID = JMT.R.S.ID
0775 OJMT.PTR=JMT.PTR                                                |  OJMT.PTR = JMT.PTR
0776 OJMT.COST=JMT.COST                                              |  OJMT.COST = JMT.COST
0777 OJMT.SALE=JMT.SALE                                              |  OJMT.SALE = JMT.SALE

0778 MATWRITE OJMT.REC ON OJOB.MATL, DMT.ID                             MATWRITE OJMT.REC ON OJOB.MATL, DMT.ID
0779 MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD                     MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
0780 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0781 IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE                         |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE
0782 GOSUB SET.INAH                                                  |  IH.ID = CONO : DMT.PROD
0783 ACTION=4                                                        |  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
0784 JOB.ID=CONO:DMT.JOB                                             <  
0785 PERIOD=POSTING.MON                                              <  
0786 BEGIN CASE                                                      <  

0787 CASE CATG.TRK.LVL='S'                                           <  
0788 TMP.ARR= DMT.SERIAL                                             <  
0789 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0790 CASE CATG.TRK.LVL='G'                                           <  
0791 TMP.ARR=DMT.LOC                                                 <  
0792 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0793 END CASE                                                        <  

0794 IH.ID=CONO : DMT.PROD                                           <  
0795 MATWRITE IH.REC ON INV.HIST, IH.ID                                 MATWRITE IH.REC ON INV.HIST, IH.ID
0796                                                                 >  MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":DMT.LOC
0797                                                                 >  PTR = 0; ITH.ID = IWH.ID : '!' : TODAY
0798                                                                 >  MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
0799                                                                 >  MAT ITH.REC = ''; PTR = 1
0800 END                                                                END

0801                                                                 >  IF PTR = 0 THEN PTR = DCOUNT(ITH.TYPE,VM) + 1
0802                                                                 >  ITH.TYPE<1,PTR> = 'S'; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0803                                                                 >  ITH.TRAN<1,PTR> = JMT.SEQ; ITH.JOB<1,PTR> = DMT.JOB
0804                                                                 >  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS
0805                                                                 >  MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
0806                                                                 >  END
0807 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID

0806                                                                 >  END
0807 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID
0808 END CASE                                                           END CASE
0809 RETURN                                                             RETURN
0810 *                                                                  *
0811 ***************                                                 <  
0812 SET.INAH:                                                       <  
0813 ***************                                                 <  
0814 *                                                               <  
0815 IF WHS.DIV='' THEN WHS.DIV=GEN.DIV                              <  

0816 INAH.PROD=DMT.PROD                                              <  
0817 INAH.WHSE=DMT.WHSE                                              <  
0818 INAH.TYPE='S'                                                   <  
0819 INAH.SRC='U'                                                    <  
0820 INAH.DATE=DMT.DATE                                              <  
0821 INAH.PERIOD=POSTING.MON                                         <  
0822 INAH.JOB=DMT.JOB                                                <  

0823 INAH.RECP.NO=ISTK.RECP                                          <  
0824 INAH.LOC=DMT.LOC                                                <  
0825 INAH.TRAN=DMT.JOB                                               <  
0826 INAH.SERIAL=DMT.SERIAL                                          <  
0827 INAH.QTY = INAH.NEW.QTY - INAH.CUR.QTY                          <  
0828 INAH.DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR                       <  
0829 RETURN                                                          <  

0830 *                                                               <  
0831 ****************                                                <  
0832 GET.INV.UM.CNV:                                                 <  
0833 ****************                                                <  
0834 *                                                               <  
0835 *COPY>ICSBP>INV.UM.CNV                                          <  
0836 RETURN                                                          <  

0837 *                                                               <  
0838 *                                                               <  
0839 *---- ERROR ROUTINES                                               *---- ERROR ROUTINES
0840 *                                                                  *
0841 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                       93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
0842                                                                 >  * 93000 ERR.TYPE = 3
0843                                                                 >  *       CALL SYSCOM(MAT SYSCOM.REC)

0844                                                                 >  *
0845 *---- END OF PROGRAM                                               *---- END OF PROGRAM
0846 *                                                                  *
0847 99999 *                                                            99999 *
0848 END                                                                END
0849 

