









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:41:44 CDT 2006
      #  #####   #####  ######  ######
      # #     # #     # #     # #     #
      # #       #       #     # #     #
      # #        #####  ######  ######
#     # #             # #     # #
#     # #     # #     # #     # #
 #####   #####   #####  ######  #

JCSBP/CCTR.PERFORM.RPT                                             /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CCTR.PERFORM.RPT
Printed for thompson at 06/28/2006 04:41:44PM

0010 * MODIFIED    - 07/01/88 BY KERRY WILSON                           * MODIFIED    - 07/01/88 BY KERRY WILSON
0011 * MOD         - 10/05/94 TASK 18439 (LMR)                          * MOD         - 10/05/94 TASK 18439 (LMR)
0012 * DESCRIPTION:                                                     * DESCRIPTION:
0013 * This program prints the Detail Cost Center Performance repor     * This program prints the Detail Cost Center Performance rep
0014 *                                                                  *
0015 *T22007 stefanie 08/26/1997 * Add Division to the heading.      |  * T22007 stefanie 08/26/1997 * Add Division to the heading.
0016 *T24400 lanny 09/21/1999 * Error made on Task 18439 which shou     *T24400 lanny 09/21/1999 * Error made on Task 18439 which sh
0017 *                          been for Ganged Jobs only.              *                          been for Ganged Jobs only.
0018 *T24769 edvard 02/21/2000 * FIX THE HANDLING OF A 'U' TYPE OPE  |  *T25496 aron 12/20/2000 * Modify the selection criteria to p
0019 *                           MERGE THE CHANGES DONE AT SALTLAKE  |  *                         Dept. and "1,some,range,all" Cost-

0020 *T26493 cmykleb 03/22/2002 * Change report to use rpt # from p  |  *                         option to to summerize operations.
0021                                                                 >  *                         also removes the selection logic f
0022                                                                 >  *                         PROC.
0023                                                                 >  *C39152 lanny 11/16/2001 * Allow up to 2 periods in the futu
0024                                                                 >  *T26330 ajibaly 12/12/2001 * Put totals on actual qty.
0025                                                                 >  *T26575 cmykleb 05/01/2002 * Allow ALL as a valid date entry
0026                                                                 >  *                            the appropriate changes to the 

0027                                                                 >  *                            this.
0028                                                                 >  *T27070 cmykleb 12/10/2002 * Remove some columns and add som
0029                                                                 >  *                            columns to the report.
0030                                                                 >  *ENDDOC
0031 **************************************************************     ************************************************************
0032 *COPY>JCS.CPYLIB>JOB.TIME                                          *COPY>JCS.CPYLIB>JOB.TIME
0033 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR

0033 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0034 *COPY>PMC.CPYLIB>EMPLOYEE                                          *COPY>PMC.CPYLIB>EMPLOYEE
0035 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0036 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0037 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0038                                                                 >  *T25496 v
0039                                                                 >  *COPY>CPYLIB>EDIT.COM.DRIVER
0040                                                                 >  *COPY>PMC.CPYLIB>FISCAL
0041                                                                 >  *T25496 ^
0042 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2

0053 END                                                                END
0054 OPEN 'EMPLOYEE' TO EMPLOYEE ELSE                                   OPEN 'EMPLOYEE' TO EMPLOYEE ELSE
0055 ERRMSG = 'EMPLOYEE FILE IS MISSING'                                ERRMSG = 'EMPLOYEE FILE IS MISSING'
0056 GOSUB 91000;GOTO 99999                                             GOSUB 91000;GOTO 99999
0057 END                                                                END
0058 *                                                               |  *T25496 v
0059 **** READ PROC VALUES                                           |  OPEN 'CONTROL' TO CONTROL ELSE
0060 *                                                               |  ERRMSG = 'CONTROL FILE IS MISSING'
0061                                                                 >  GOSUB 91000;GOTO 99999
0062                                                                 >  END

0063 PROCREAD ID ELSE                                                   PROCREAD ID ELSE
0064 ERRMSG = 'CANNOT PERFORM PROCREAD'                                 ERRMSG = 'CANNOT PERFORM PROCREAD'
0065 GOSUB 91000;GOTO 99999                                             GOSUB 91000;GOTO 99999
0066 END                                                                END
0067 CONO = ID<1>                                                       CONO = ID<1>
0068 *T26493 v                                                       |  CONO.NAME = ID<2>
0069                                                                 >  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
0070                                                                 >  ERRMSG='Cannot read JCFISCAL record from CONTROL file!'
0071                                                                 >  GOTO 91000; GOTO 99999
0072                                                                 >  END

0073                                                                 >  POS = 1; START.DEPT=''; END.DEPT=''; START.CCNT=''; END.CCNT
0074                                                                 >  START.PER=''; END.PER=''; ZERO.FLAG=''; STANDARDS.FLAG=''; D
0075                                                                 >  START.DATE=''; END.DATE=''; SUMMARIZE.FLAG=''
0076                                                                 >  *C39152 v
0077                                                                 >  READ NUM.PERIODS FROM CONTROL, CONO:'ACCT.PERIODS' ELSE NUM.
0078                                                                 >  CUR.YR=FR.CURR.PER<1,POS>[1,4]
0079                                                                 >  CUR.MO=FR.CURR.PER<1,POS>[5,2]

0080                                                                 >  IF CUR.MO+2 <= NUM.PERIODS THEN
0081                                                                 >  MAX.PER = CUR.YR:(CUR.MO+2)'R%2'
0082                                                                 >  END ELSE
0083                                                                 >  MAX.PER = CUR.YR+1:(CUR.MO+2-NUM.PERIODS)'R%2'
0084                                                                 >  END
0085                                                                 >  *C39152 ^
0086                                                                 >  OPEN 'CBN.SCREENS' TO M.SCREENS ELSE

0087                                                                 >  ERRMSG = 'CBN.SCREENS FILE IS MISSING'
0088                                                                 >  GOSUB 91000;GOTO 99999
0089                                                                 >  END
0090                                                                 >  SCROLL.SIZE = 10
0091                                                                 >  CURRENT.POS = 1
0092                                                                 >  GOSUB 5000 ;*INITIALIZE SCREENS
0093                                                                 >  GOSUB 5100 ;*DISPLAY MAIN SCREEN

0094                                                                 >  FOR PROMPT.NO = 1 TO 10 
0095                                                                 >  ON PROMPT.NO GOSUB 6100,6200,6300,6400,6500,6600,6700,6800,6
0096                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
0097                                                                 >  NEXT PROMPT.NO
0098                                                                 >  LOOP.FLAG = 0
0099                                                                 >  LOOP WHILE LOOP.FLAG = 0 DO
0100                                                                 >  ECD.NUM = 10

0101                                                                 >  ECD.ACTION = 4
0102                                                                 >  CALL SCRN.EDIT
0103                                                                 >  BEGIN CASE
0104                                                                 >  CASE ECD.RET.VALUE = "END"
0105                                                                 >  GOTO 99999
0106                                                                 >  CASE ECD.RET.VALUE = "E"
0107                                                                 >  GOTO 99999

0108                                                                 >  CASE ECD.RET.VALUE = 1
0109                                                                 >  GOSUB 6100
0110                                                                 >  CASE ECD.RET.VALUE = 2
0111                                                                 >  GOSUB 6200
0112                                                                 >  CASE ECD.RET.VALUE = 3
0113                                                                 >  GOSUB 6300
0114                                                                 >  CASE ECD.RET.VALUE = 4

0115                                                                 >  GOSUB 6400
0116                                                                 >  CASE ECD.RET.VALUE = 5
0117                                                                 >  GOSUB 6500
0118                                                                 >  CASE ECD.RET.VALUE = 6
0119                                                                 >  GOSUB 6600
0120                                                                 >  CASE ECD.RET.VALUE = 7
0121                                                                 >  GOSUB 6700

0122                                                                 >  CASE ECD.RET.VALUE = 8
0123                                                                 >  GOSUB 6800
0124                                                                 >  CASE ECD.RET.VALUE = 9
0125                                                                 >  GOSUB 6900
0126                                                                 >  CASE ECD.RET.VALUE = 10
0127                                                                 >  GOSUB 7000
0128                                                                 >  CASE ECD.RET.VALUE = "F"

0129                                                                 >  LOOP.FLAG = 1
0130                                                                 >  *SELECTION STATEMENTS
0131                                                                 >  END CASE
0132                                                                 >  REPEAT
0133                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
0134                                                                 >  GOSUB 8950 ;* SELECT THE JOB.TIME FILE
0135                                                                 >  REPORT.NAME = "COST.CENTER.PERFORMANCE.DETAIL"

0136                                                                 >  REPORT.NUMBER = "XXXX"
0137                                                                 >  REPORT.DATE = DATE()
0138                                                                 >  XXX = 0
0139                                                                 >  HD1 = ""
0140                                                                 >  HD2 = ""
0141                                                                 >  CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,
0142                                                                 >  ST.DATE = START.DATE

0143                                                                 >  EN.DATE = END.DATE
0144                                                                 >  ST.PER = START.PER
0145                                                                 >  EN.PER = END.PER
0146                                                                 >  STD.FLG = ZERO.FLAG
0147                                                                 >  FILE.FLG = STANDARDS.FLAG
0148                                                                 >  DIVISION = DIV.CODE
0149                                                                 >  *T25496 ^

0150                                                                 >  *
0151                                                                 >  *T25496 v COMMENTED OUT
0152                                                                 >  **** READ PROC VALUES
0153                                                                 >  *
0154                                                                 >  *     PROCREAD ID ELSE
0155                                                                 >  *        ERRMSG = 'CANNOT PERFORM PROCREAD'
0156                                                                 >  *        GOSUB 91000;GOTO 99999

0157                                                                 >  *     END
0158                                                                 >  *     CONO = ID<1>
0159 *  CONO.NAME = ID<2>                                               *     CONO.NAME = ID<2>
0160 *  REPORT.NAME = "COST.CENTER.PERFORMANCE.DETAIL"                  *     REPORT.NAME = "COST.CENTER.PERFORMANCE.DETAIL"
0161 *  REPORT.NUMBER = "XXXX"                                          *     REPORT.NUMBER = "XXXX"
0162 CONO.NAME= ""                                                   |  *     REPORT.DATE = DATE()
0163 REPORT.NAME = ""                                                |  *     HD1 = "" ; HD2 = ""

0164 REPORT.NUMBER = ID<2>                                           |  *     CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.N
0165 *T26493 ^                                                       |  *     ST.DATE = ID<4>
0166 REPORT.DATE = DATE()                                            |  *     EN.DATE = ID<5>
0167 HD1 = "" ; HD2 = ""                                             |  *     ST.PER = ID<6>
0168 CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,RE  |  *     EN.PER = ID<7>
0169 ST.DATE = ID<4>                                                 |  *     STD.FLG = ID<8>
0170 EN.DATE = ID<5>                                                 |  *     FILE.FLG = ID<9>

0171 ST.PER = ID<6>                                                  |  *     DIVISION = ID<10>      ;* T22007 <
0172 EN.PER = ID<7>                                                  |  *T25496 ^
0173 STD.FLG = ID<8>                                                 <  
0174 FILE.FLG = ID<9>                                                <  
0175 DIVISION = ID<10>      ;* T22007 <                              <  
0176 *                                                                  *
0177 **** INITIALIZATION                                                **** INITIALIZATION

0177 **** INITIALIZATION                                                **** INITIALIZATION
0178 *                                                                  *
0179 LINE.COUNT = 99                                                    LINE.COUNT = 99
0180 PAGE.NO = 0                                                        PAGE.NO = 0
0181 PRT.FLG = 1                                                        PRT.FLG = 1
0182                                                                 >  *T27070 v
0183                                                                 >  *  HH.LINE1 = "                                             
0184                                                                 >  *  HH.LINE1 = HH.LINE1:"   ACT     STD      %    CNCR    ACT
0185                                                                 >  *  HH.LINE2 = "DV DEPT  CTR OPER FC         EMPLOYEE NAME   
0186                                                                 >  *  HH.LINE2 = HH.LINE2:"  HOURS   HOURS    EFF   HOURS  QUAN

0187                                                                 >  *  UH.LINE  = "-- ----- --- ---- -- ------------------------
0188                                                                 >  *  UH.LINE  = UH.LINE :" ------- ------- ------ ------ -----
0189 HH.LINE1 = "                                                       HH.LINE1 = "                                              DA
0190 HH.LINE2 = "DV DEPT  CTR OPER FC         EMPLOYEE NAME          |  HH.LINE1 = HH.LINE1:"   ACT     STD      %    CNCR    ACTUAL
0191 UH.LINE  = "-- ----- --- ---- -- -----------------------------  |  HH.LINE2 = "DV DEPT  CTR OPER       EMPLOYEE NAME        WOR
0192                                                                 >  HH.LINE2 = HH.LINE2:"  HOURS   HOURS    EFF   HOURS  QUANTIT
0193                                                                 >  UH.LINE  = "-- ----- --- ---- ------------------------- ----

0194                                                                 >  UH.LINE  = UH.LINE :" ------- ------- ------ ------ --------
0195                                                                 >  *T27070 ^
0196 UT.LINE  = "                                                       UT.LINE  = "                                                
0197                                                                 >  *T27070 v
0198                                                                 >  *  UT.LINE  = UT.LINE :" ------- ------- ------ ------ -----
0199                                                                 >  UT.LINE  = UT.LINE :" ------- ------- ------ ------ --------
0200                                                                 >  *T27070 ^

0201 UT.LINE1 = "                                                       UT.LINE1 = "                                                
0202 HH.LINE1 = HH.LINE1:"   ACT     STD      %    CNCR    ACTUAL    |  *T27070 v
0203 HH.LINE2 = HH.LINE2:"  HOURS   HOURS    EFF   HOURS  QUANTITY   |  *  UT.LINE1 = UT.LINE1:" ------- ------- ------ ------ -----
0204 UH.LINE  = UH.LINE :" ------- ------- ------ ------ ----------  |  UT.LINE1 = UT.LINE1:" ------- ------- ------ ------ --------
0205 UT.LINE  = UT.LINE :" ------- ------- ------ ------             |  *T27070 ^
0206 UT.LINE1 = UT.LINE1:" ------- ------- ------ ------ ----------  <  
0207 *                                                                  *
0208 ***** TOTAL TABLE FOR DIV                                          ***** TOTAL TABLE FOR DIV

0209 *                                                                  *
0210 DIM TOT.DIV(7)                                                  |  DIM TOT.DIV(9)
0211 EQU DIV.TIME        TO TOT.DIV(1)                                  EQU DIV.TIME        TO TOT.DIV(1)
0212 EQU DIV.CNCR.TIME   TO TOT.DIV(2)                                  EQU DIV.CNCR.TIME   TO TOT.DIV(2)
0213 EQU DIV.IMP         TO TOT.DIV(3)                                  EQU DIV.IMP         TO TOT.DIV(3)
0214 EQU DIV.CNT         TO TOT.DIV(4)                                  EQU DIV.CNT         TO TOT.DIV(4)
0215 EQU DIV.STD.HRS     TO TOT.DIV(5)                                  EQU DIV.STD.HRS     TO TOT.DIV(5)
0216 EQU DIV.STD.IMP     TO TOT.DIV(6)                                  EQU DIV.STD.IMP     TO TOT.DIV(6)

0217 EQU DIV.IMP.HRS     TO TOT.DIV(7)                                  EQU DIV.IMP.HRS     TO TOT.DIV(7)
0218                                                                 >  EQU DIV.ACT.COST    TO TOT.DIV(8) ; * T27070
0219                                                                 >  EQU DIV.STD.COST    TO TOT.DIV(9) ; * T27070
0220 MAT TOT.DIV = 0                                                    MAT TOT.DIV = 0
0221 *                                                                  *
0222 ***** TOTAL TABLE FOR DEPT                                         ***** TOTAL TABLE FOR DEPT
0223 *                                                                  *
0224 DIM TOT.DEPT(7)                                                 |  DIM TOT.DEPT(9)

0227 EQU DEPT.IMP         TO TOT.DEPT(3)                                EQU DEPT.IMP         TO TOT.DEPT(3)
0228 EQU DEPT.CNT         TO TOT.DEPT(4)                                EQU DEPT.CNT         TO TOT.DEPT(4)
0229 EQU DEPT.STD.HRS     TO TOT.DEPT(5)                                EQU DEPT.STD.HRS     TO TOT.DEPT(5)
0230 EQU DEPT.STD.IMP     TO TOT.DEPT(6)                                EQU DEPT.STD.IMP     TO TOT.DEPT(6)
0231 EQU DEPT.IMP.HRS     TO TOT.DEPT(7)                                EQU DEPT.IMP.HRS     TO TOT.DEPT(7)
0232                                                                 >  EQU DEPT.ACT.COST    TO TOT.DEPT(8) ; * T27070
0233                                                                 >  EQU DEPT.STD.COST    TO TOT.DEPT(9) ; * T27070
0234 MAT TOT.DEPT = 0                                                   MAT TOT.DEPT = 0
0235 *                                                                  *
0236 ***** TOTAL TABLE FOR CCTR                                         ***** TOTAL TABLE FOR CCTR

0237 *                                                                  *
0238 DIM TOT.CCTR(7)                                                 |  DIM TOT.CCTR(9)
0239 EQU CCTR.TIME        TO TOT.CCTR(1)                                EQU CCTR.TIME        TO TOT.CCTR(1)
0240 EQU CCTR.CNCR.TIME   TO TOT.CCTR(2)                                EQU CCTR.CNCR.TIME   TO TOT.CCTR(2)
0241 EQU CCTR.IMP         TO TOT.CCTR(3)                                EQU CCTR.IMP         TO TOT.CCTR(3)
0242 EQU CCTR.CNT         TO TOT.CCTR(4)                                EQU CCTR.CNT         TO TOT.CCTR(4)
0243 EQU CCTR.STD.HRS     TO TOT.CCTR(5)                                EQU CCTR.STD.HRS     TO TOT.CCTR(5)
0244 EQU CCTR.STD.IMP     TO TOT.CCTR(6)                                EQU CCTR.STD.IMP     TO TOT.CCTR(6)

0245 EQU CCTR.IMP.HRS     TO TOT.CCTR(7)                                EQU CCTR.IMP.HRS     TO TOT.CCTR(7)
0246                                                                 >  EQU CCTR.ACT.COST    TO TOT.CCTR(8) ; * T27070
0247                                                                 >  EQU CCTR.STD.COST    TO TOT.CCTR(9) ; * T27070
0248 MAT TOT.CCTR = 0                                                   MAT TOT.CCTR = 0
0249 *                                                                  *
0250 ***** TOTAL TABLE FOR OPER                                         ***** TOTAL TABLE FOR OPER
0251 *                                                                  *
0252 DIM TOT.OPER(7)                                                 |  DIM TOT.OPER(9)

0255 EQU OPER.IMP         TO TOT.OPER(3)                                EQU OPER.IMP         TO TOT.OPER(3)
0256 EQU OPER.CNT         TO TOT.OPER(4)                                EQU OPER.CNT         TO TOT.OPER(4)
0257 EQU OPER.STD.HRS     TO TOT.OPER(5)                                EQU OPER.STD.HRS     TO TOT.OPER(5)
0258 EQU OPER.STD.IMP     TO TOT.OPER(6)                                EQU OPER.STD.IMP     TO TOT.OPER(6)
0259 EQU OPER.IMP.HRS     TO TOT.OPER(7)                                EQU OPER.IMP.HRS     TO TOT.OPER(7)
0260                                                                 >  EQU OPER.ACT.COST    TO TOT.OPER(8) ; * T27070
0261                                                                 >  EQU OPER.STD.COST    TO TOT.OPER(9) ; * T27070
0262 MAT TOT.OPER = 0                                                   MAT TOT.OPER = 0
0263 *                                                                  *
0264 ***** READ AND PROCESS FIRST RECORD                                ***** READ AND PROCESS FIRST RECORD

0315 IF STD.FLG = 'N' THEN                                              IF STD.FLG = 'N' THEN
0316 IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN GOTO 100           IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN GOTO 100
0317 END                                                                END
0318 HRS.STD = JLB.HRS.STD + 0                                          HRS.STD = JLB.HRS.STD + 0
0319 IMP.STD = CCTR.OPER.STD.IMP<1,PP> + 0                              IMP.STD = CCTR.OPER.STD.IMP<1,PP> + 0
0320 *        IMP.STD = JLB.IMP.STD                                  <  
0321 END                                                                END
0322 GOSUB 1000                                                         GOSUB 1000
0323 GOSUB 2000                                                         GOSUB 2000
0324 *                                                                  *

0365 IF STD.FLG = 'N' THEN                                              IF STD.FLG = 'N' THEN
0366 IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN GOTO 111           IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN GOTO 111
0367 END                                                                END
0368 HRS.STD = JLB.HRS.STD + 0                                          HRS.STD = JLB.HRS.STD + 0
0369 IMP.STD = CCTR.OPER.STD.IMP<1,PP> + 0                              IMP.STD = CCTR.OPER.STD.IMP<1,PP> + 0
0370 *        IMP.STD = JLB.IMP.STD                                  <  
0371 END                                                                END
0372 GOSUB 400                                                          GOSUB 400
0373 GOSUB 1000                                                         GOSUB 1000
0374 GOSUB 2000                                                         GOSUB 2000

0405 PRINT                                                              PRINT
0406 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0407 PRT.FLG = 1                                                        PRT.FLG = 1
0408 CASE PREV.OPER # JLB.OPER                                          CASE PREV.OPER # JLB.OPER
0409 GOSUB 4002                                                         GOSUB 4002
0410                                                                 >  *T25496 v
0411                                                                 >  IF SUMMARIZE.FLAG # 'Y' THEN
0412 PRINT                                                              PRINT
0413 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0414 PRT.FLG = 1                                                        PRT.FLG = 1

0415                                                                 >  END
0416                                                                 >  *T25496 ^
0417 END CASE                                                           END CASE
0418 RETURN                                                             RETURN
0419 *                                                                  *
0420 **** ADD UP ALL TOTALS                                             **** ADD UP ALL TOTALS
0421 *                                                                  *

0452 IF FILE.FLG = "C" THEN                                             IF FILE.FLG = "C" THEN
0453 BEGIN CASE                                                         BEGIN CASE
0454 CASE CCTR.OPER.TYPE<1,PP> = "U"                                    CASE CCTR.OPER.TYPE<1,PP> = "U"
0455 BEGIN CASE                                                         BEGIN CASE
0456 CASE HRS.STD+0 # 0                                                 CASE HRS.STD+0 # 0
0457 *T24769 v                                                       |  STD.HRS = INT(JLB.IMP * HRS.STD / 100)
0458 *               STD.HRS = INT(JLB.IMP * HRS.STD / 100)          <  
0459 STD.HRS = INT(JLB.IMP * HRS.STD / 100)/100                      <  
0460 *T24769 ^                                                       <  
0461 STD.IMP = INT(100 / HRS.STD)                                       STD.IMP = INT(100 / HRS.STD)

0462 CASE IMP.STD+0 # 0                                                 CASE IMP.STD+0 # 0
0463 *T24769 v                                                       |  STD.HRS = INT(JLB.IMP / IMP.STD)
0464 *               STD.HRS = INT(JLB.IMP / IMP.STD)                <  
0465 STD.HRS = INT(JLB.IMP / IMP.STD)/100                            <  
0466 *T24769 ^                                                       <  
0467 STD.IMP = IMP.STD                                                  STD.IMP = IMP.STD
0468 CASE 1                                                             CASE 1
0469 STD.HRS = 0                                                        STD.HRS = 0

0488 IF JLB.HRS+0 # 0 THEN                                              IF JLB.HRS+0 # 0 THEN
0489 EFF.HRS = INT(STD.HRS * 100 / JLB.HRS * 100)                       EFF.HRS = INT(STD.HRS * 100 / JLB.HRS * 100)
0490 END ELSE                                                           END ELSE
0491 EFF.HRS = 0                                                        EFF.HRS = 0
0492 END                                                                END
0493                                                                 >  *T27070 v
0494                                                                 >  ACT.COST = INT(OCONV(JLB.DCOST<1,1>,'MD2') + .5)
0495                                                                 >  SHRS = OCONV(STD.HRS,'MD2')
0496                                                                 >  SCST = OCONV(CCTR.OPER.HR.RATE<1,PP>,'MD2')
0497                                                                 >  STD.COST = INT((SHRS * SCST) + .5)

0498                                                                 >  *T27070 ^
0499 *                                                                  *
0500 ***** ADD TOTAL FOR OPER                                           ***** ADD TOTAL FOR OPER
0501 *                                                                  *
0502 OPER.TIME = OPER.TIME + JLB.HRS                                    OPER.TIME = OPER.TIME + JLB.HRS
0503 OPER.STD.HRS = OPER.STD.HRS + STD.HRS                              OPER.STD.HRS = OPER.STD.HRS + STD.HRS
0504 OPER.CNCR.TIME = OPER.CNCR.TIME + JLB.CNCR                         OPER.CNCR.TIME = OPER.CNCR.TIME + JLB.CNCR

0504 OPER.CNCR.TIME = OPER.CNCR.TIME + JLB.CNCR                         OPER.CNCR.TIME = OPER.CNCR.TIME + JLB.CNCR
0505 OPER.IMP = OPER.IMP + JLB.IMP                                      OPER.IMP = OPER.IMP + JLB.IMP
0506 OPER.CNT = OPER.CNT + 1                                            OPER.CNT = OPER.CNT + 1
0507 OPER.STD.IMP = OPER.STD.IMP + STD.IMP                              OPER.STD.IMP = OPER.STD.IMP + STD.IMP
0508 OPER.IMP.HRS = OPER.IMP.HRS + IMP.HRS                              OPER.IMP.HRS = OPER.IMP.HRS + IMP.HRS
0509                                                                 >  OPER.STD.COST = OPER.STD.COST + STD.COST ; * T27070
0510                                                                 >  OPER.ACT.COST = OPER.ACT.COST + ACT.COST ; * T27070
0511 *                                                                  *
0512 **** ADD TOTAL FOR CCTR                                            **** ADD TOTAL FOR CCTR
0513 *                                                                  *

0516 CCTR.CNCR.TIME = CCTR.CNCR.TIME + JLB.CNCR                         CCTR.CNCR.TIME = CCTR.CNCR.TIME + JLB.CNCR
0517 CCTR.IMP = CCTR.IMP + JLB.IMP                                      CCTR.IMP = CCTR.IMP + JLB.IMP
0518 CCTR.CNT = CCTR.CNT + 1                                            CCTR.CNT = CCTR.CNT + 1
0519 CCTR.STD.IMP = CCTR.STD.IMP + STD.IMP                              CCTR.STD.IMP = CCTR.STD.IMP + STD.IMP
0520 CCTR.IMP.HRS = CCTR.IMP.HRS + IMP.HRS                              CCTR.IMP.HRS = CCTR.IMP.HRS + IMP.HRS
0521                                                                 >  CCTR.STD.COST = CCTR.STD.COST + STD.COST ; * T27070
0522                                                                 >  CCTR.ACT.COST = CCTR.ACT.COST + ACT.COST ; * T27070
0523 *                                                                  *
0524 **** ADD TOTAL FOR DEPT                                            **** ADD TOTAL FOR DEPT
0525 *                                                                  *

0528 DEPT.CNCR.TIME = DEPT.CNCR.TIME + JLB.CNCR                         DEPT.CNCR.TIME = DEPT.CNCR.TIME + JLB.CNCR
0529 DEPT.IMP = DEPT.IMP + JLB.IMP                                      DEPT.IMP = DEPT.IMP + JLB.IMP
0530 DEPT.CNT = DEPT.CNT + 1                                            DEPT.CNT = DEPT.CNT + 1
0531 DEPT.STD.IMP = DEPT.STD.IMP + STD.IMP                              DEPT.STD.IMP = DEPT.STD.IMP + STD.IMP
0532 DEPT.IMP.HRS = DEPT.IMP.HRS + IMP.HRS                              DEPT.IMP.HRS = DEPT.IMP.HRS + IMP.HRS
0533                                                                 >  DEPT.STD.COST = DEPT.STD.COST + STD.COST ; * T27070
0534                                                                 >  DEPT.ACT.COST = DEPT.ACT.COST + ACT.COST ; * T27070
0535 *                                                                  *
0536 **** ADD TOTAL FOR DIV                                             **** ADD TOTAL FOR DIV
0537 *                                                                  *

0540 DIV.CNCR.TIME = DIV.CNCR.TIME + JLB.CNCR                           DIV.CNCR.TIME = DIV.CNCR.TIME + JLB.CNCR
0541 DIV.IMP = DIV.IMP + JLB.IMP                                        DIV.IMP = DIV.IMP + JLB.IMP
0542 DIV.CNT = DIV.CNT + 1                                              DIV.CNT = DIV.CNT + 1
0543 DIV.STD.IMP = DIV.STD.IMP + STD.IMP                                DIV.STD.IMP = DIV.STD.IMP + STD.IMP
0544 DIV.IMP.HRS = DIV.IMP.HRS + IMP.HRS                                DIV.IMP.HRS = DIV.IMP.HRS + IMP.HRS
0545                                                                 >  DIV.STD.COST = DIV.STD.COST + STD.COST ; * T27070
0546                                                                 >  DIV.ACT.COST = DIV.ACT.COST + ACT.COST ; * T27070
0547 1001*                                                              1001*
0548 RETURN                                                             RETURN
0549 *                                                                  *

0548 RETURN                                                             RETURN
0549 *                                                                  *
0550 ***** PRINT DETAIL LINE                                            ***** PRINT DETAIL LINE
0551 *                                                                  *
0552 2000*                                                              2000*
0553                                                                 >  IF SUMMARIZE.FLAG # 'Y' THEN ;*C40807
0554 IF LINE.COUNT > 50 THEN                                            IF LINE.COUNT > 50 THEN
0555 GOSUB 9000                                                         GOSUB 9000
0556 PRT.FLG = 1                                                        PRT.FLG = 1
0557 END                                                                END

0557 END                                                                END
0558 IF PRT.FLG = 1 THEN                                                IF PRT.FLG = 1 THEN
0559 PRT.FLG = 0                                                        PRT.FLG = 0
0560 DET.LINE = ''                                                      DET.LINE = ''
0561 DET.LINE = DET.LINE :JLB.DIV "L#2":' ':DPNO "L#5":' '              DET.LINE = DET.LINE :JLB.DIV "L#2":' ':DPNO "L#5":' '
0562 DET.LINE = DET.LINE :CCNO "L#3":' ':JLB.OPER "L#4":' '          |  *T25496 v  DET.LINE = DET.LINE :CCNO "L#3":' ':JLB.OPER "L#4
0563                                                                 >  DET.LINE = DET.LINE :CCNO "L#3":' '
0564                                                                 >  IF SUMMARIZE.FLAG # 'Y' THEN
0565                                                                 >  DET.LINE := JLB.OPER "L#4":' '
0566                                                                 >  END ELSE DET.LINE := SPACE(5)

0567                                                                 >  *T25496 ^
0568 END ELSE                                                           END ELSE
0569 DET.LINE = SPACE(18)                                               DET.LINE = SPACE(18)
0570 END                                                                END
0571 DET.LINE = DET.LINE :JLB.FCTR "L#2":' '                         |  *T27070 v
0572 DET.LINE = DET.LINE :EMP.NAME "L#29":' '                        |  *     DET.LINE = DET.LINE :JLB.FCTR "L#2":' '
0573                                                                 >  *     DET.LINE = DET.LINE :EMP.NAME "L#29":' '

0574                                                                 >  DET.LINE = DET.LINE :EMP.NAME "L#25":' '
0575                                                                 >  *T27070 ^
0576 DET.LINE = DET.LINE :OCONV(JLB.DATE,"D2/") "L#8":' '               DET.LINE = DET.LINE :OCONV(JLB.DATE,"D2/") "L#8":' '
0577 DET.LINE = DET.LINE :JOBNO "L#8"                                   DET.LINE = DET.LINE :JOBNO "L#8"
0578 DET.LINE = DET.LINE :OCONV(JLB.HRS,"MD2") "R#8"                    DET.LINE = DET.LINE :OCONV(JLB.HRS,"MD2") "R#8"
0579 DET.LINE = DET.LINE :OCONV(STD.HRS,"MD2") "R#8"                    DET.LINE = DET.LINE :OCONV(STD.HRS,"MD2") "R#8"
0580 DET.LINE = DET.LINE :OCONV(EFF.HRS,"MD2") "R#7"                    DET.LINE = DET.LINE :OCONV(EFF.HRS,"MD2") "R#7"

0580 DET.LINE = DET.LINE :OCONV(EFF.HRS,"MD2") "R#7"                    DET.LINE = DET.LINE :OCONV(EFF.HRS,"MD2") "R#7"
0581 DET.LINE = DET.LINE :OCONV(JLB.CNCR,"MD2") "R#7"                   DET.LINE = DET.LINE :OCONV(JLB.CNCR,"MD2") "R#7"
0582 DET.LINE = DET.LINE :OCONV(JLB.IMP,"MD2") "R#11"                   DET.LINE = DET.LINE :OCONV(JLB.IMP,"MD2") "R#11"
0583 DET.LINE = DET.LINE :IMP.HRS "R#7"                                 DET.LINE = DET.LINE :IMP.HRS "R#7"
0584 DET.LINE = DET.LINE :STD.IMP "R#7"                                 DET.LINE = DET.LINE :STD.IMP "R#7"
0585 DET.LINE = DET.LINE :CNT "R#6"                                  |  *T27070 v
0586                                                                 >  *     DET.LINE = DET.LINE :CNT "R#6"
0587                                                                 >  DET.LINE = DET.LINE :SPACE(1):OCONV(ACT.COST,"MD0,")"R#7"
0588                                                                 >  DET.LINE = DET.LINE :SPACE(1):OCONV(STD.COST,"MD0,")"R#7"
0589                                                                 >  *T27070 ^

0590 PRINT DET.LINE                                                     PRINT DET.LINE
0591 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0592                                                                 >  END ;*C40807
0593 RETURN                                                             RETURN
0594 *                                                                  *
0595 **** PRINT TOTAL FOR OPER                                          **** PRINT TOTAL FOR OPER
0596 *                                                                  *
0597 4002*                                                              4002*
0598                                                                 >  *T25496 v

0599                                                                 >  *C40807   IF SUMMARIZE.FLAG # "Y" THEN
0600 IF LINE.COUNT > 50 THEN                                            IF LINE.COUNT > 50 THEN
0601 GOSUB 9000                                                         GOSUB 9000
0602 END                                                                END
0603                                                                 >  *C40807 v    GOSUB 4008
0604                                                                 >  IF SUMMARIZE.FLAG # 'Y' THEN
0605 GOSUB 4008                                                         GOSUB 4008

0606 OP.LINE = ''                                                    |  *     OP.LINE = '' ;*C40807
0607                                                                 >  OP.LINE = SPACE(19)
0608                                                                 >  END ELSE
0609                                                                 >  OP.LINE = PREV.DIV 'L#3':PREV.DEPT 'L#6':PREV.CCTR 'L#4':PRE
0610                                                                 >  END
0611                                                                 >  *C40807 ^
0612 OPER.KEY = CONO:PREV.OPER                                          OPER.KEY = CONO:PREV.OPER

0613 OP.LINE = OP.LINE :SPACE(19):OCONV(OPER.KEY,"TOPERATION;X;1;1"  |  *C40807 v OP.LINE = OP.LINE :SPACE(19):OCONV(OPER.KEY,"TOPER
0614                                                                 >  OP.LINE = OP.LINE :OCONV(OPER.KEY,"TOPERATION;X;1;1") "R#23"
0615 OP.LINE = OP.LINE :OCONV(OPER.TIME,"MD2") "R#8"                    OP.LINE = OP.LINE :OCONV(OPER.TIME,"MD2") "R#8"
0616 OP.LINE = OP.LINE :OCONV(OPER.STD.HRS,"MD2") "R#8"                 OP.LINE = OP.LINE :OCONV(OPER.STD.HRS,"MD2") "R#8"
0617 IF OPER.TIME > 0 THEN                                              IF OPER.TIME > 0 THEN
0618 OPER.EFF.HRS = INT(OPER.STD.HRS / OPER.TIME * 10000)               OPER.EFF.HRS = INT(OPER.STD.HRS / OPER.TIME * 10000)
0619 END ELSE                                                           END ELSE

0623 OP.LINE = OP.LINE :OCONV(OPER.CNCR.TIME,"MD2") "R#7"               OP.LINE = OP.LINE :OCONV(OPER.CNCR.TIME,"MD2") "R#7"
0624 OP.LINE = OP.LINE :OCONV(OPER.IMP,"MD2") "R#11"                    OP.LINE = OP.LINE :OCONV(OPER.IMP,"MD2") "R#11"
0625 IF OPER.TIME+0 > 0 THEN                                            IF OPER.TIME+0 > 0 THEN
0626 OP.LINE = OP.LINE :INT(OPER.IMP/OPER.TIME) "R#7"                   OP.LINE = OP.LINE :INT(OPER.IMP/OPER.TIME) "R#7"
0627 END ELSE                                                           END ELSE
0628 OP.LINE = SPACE(7)                                              |  OP.LINE = OP.LINE :SPACE(7)
0629 END                                                                END
0630 OP.LINE = OP.LINE :SPACE(7)                                        OP.LINE = OP.LINE :SPACE(7)
0631 OP.LINE = OP.LINE :OPER.CNT "R#6"                               |  *T27070 v
0632                                                                 >  *  OP.LINE = OP.LINE :OPER.CNT "R#6"

0633                                                                 >  OP.LINE = OP.LINE :SPACE(1):OCONV(OPER.ACT.COST,"MD0,")"R#7"
0634                                                                 >  OP.LINE = OP.LINE :SPACE(1):OCONV(OPER.STD.COST,"MD0,")"R#7"
0635                                                                 >  *T27070 ^
0636 PRINT OP.LINE                                                      PRINT OP.LINE
0637 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0638                                                                 >  *C40807 ^ END
0639                                                                 >  *T25496 ^

0650 GOSUB 9000                                                         GOSUB 9000
0651 END                                                                END
0652 GOSUB 4009                                                         GOSUB 4009
0653 CCTR.KEY = CONO:PREV.CCTR                                          CCTR.KEY = CONO:PREV.CCTR
0654 CC.LINE = ''                                                       CC.LINE = ''
0655 CC.LINE = CC.LINE :SPACE(19):OCONV(CCTR.KEY,"TCOST.CNTR;X;1;1"  |  CC.LINE = CC.LINE :SPACE(19):OCONV(CCTR.KEY,"TCOST.CNTR;X;1;
0656 CC.LINE = CC.LINE :OCONV(CCTR.TIME,"MD2") "R#8"                    CC.LINE = CC.LINE :OCONV(CCTR.TIME,"MD2") "R#8"
0657 CC.LINE = CC.LINE :OCONV(CCTR.STD.HRS,"MD2") "R#8"                 CC.LINE = CC.LINE :OCONV(CCTR.STD.HRS,"MD2") "R#8"
0658 IF CCTR.TIME > 0 THEN                                              IF CCTR.TIME > 0 THEN
0659 CCTR.EFF.HRS = INT(CCTR.STD.HRS / CCTR.TIME * 10000)               CCTR.EFF.HRS = INT(CCTR.STD.HRS / CCTR.TIME * 10000)

0660 END ELSE                                                           END ELSE
0661 CCTR.EFF.HRS = 0                                                   CCTR.EFF.HRS = 0
0662 END                                                                END
0663 CC.LINE = CC.LINE :OCONV(CCTR.EFF.HRS,"MD2") "R#7"                 CC.LINE = CC.LINE :OCONV(CCTR.EFF.HRS,"MD2") "R#7"
0664 CC.LINE = CC.LINE :OCONV(CCTR.CNCR.TIME,"MD2") "R#7"               CC.LINE = CC.LINE :OCONV(CCTR.CNCR.TIME,"MD2") "R#7"
0665 CC.LINE = CC.LINE :SPACE(25)                                    |  *T26330 v
0666 CC.LINE = CC.LINE :CCTR.CNT "R#6"                               |  CC.LINE = CC.LINE :OCONV(CCTR.IMP,"MD2") "R#11"
0667                                                                 >  CC.LINE = CC.LINE :SPACE(14)
0668                                                                 >  *T26330 ^
0669                                                                 >  *T27070 v

0670                                                                 >  *  CC.LINE = CC.LINE :CCTR.CNT "R#6"
0671                                                                 >  CC.LINE = CC.LINE :SPACE(1):OCONV(CCTR.ACT.COST,"MD0,")"R#7"
0672                                                                 >  CC.LINE = CC.LINE :SPACE(1):OCONV(CCTR.STD.COST,"MD0,")"R#7"
0673                                                                 >  *T27070 ^
0674 PRINT CC.LINE                                                      PRINT CC.LINE
0675 CCTR.CNT = 0                                                       CCTR.CNT = 0
0676 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1

0685 GOSUB 9000                                                         GOSUB 9000
0686 END                                                                END
0687 GOSUB 4009                                                         GOSUB 4009
0688 DEPT.KEY = CONO:PREV.DEPT                                          DEPT.KEY = CONO:PREV.DEPT
0689 DE.LINE = ''                                                       DE.LINE = ''
0690 DE.LINE = DE.LINE :SPACE(19):OCONV(DEPT.KEY,"TDEPARTMENT;X;2;2  |  DE.LINE = DE.LINE :SPACE(19):OCONV(DEPT.KEY,"TDEPARTMENT;X;2
0691 DE.LINE = DE.LINE :OCONV(DEPT.TIME,"MD2") "R#8"                    DE.LINE = DE.LINE :OCONV(DEPT.TIME,"MD2") "R#8"
0692 DE.LINE = DE.LINE :OCONV(DEPT.STD.HRS,"MD2") "R#8"                 DE.LINE = DE.LINE :OCONV(DEPT.STD.HRS,"MD2") "R#8"
0693 IF DEPT.TIME > 0 THEN                                              IF DEPT.TIME > 0 THEN
0694 DEPT.EFF.HRS = INT(DEPT.STD.HRS / DEPT.TIME * 10000)               DEPT.EFF.HRS = INT(DEPT.STD.HRS / DEPT.TIME * 10000)

0695 END ELSE                                                           END ELSE
0696 DEPT.EFF.HRS = 0                                                   DEPT.EFF.HRS = 0
0697 END                                                                END
0698 DE.LINE = DE.LINE :OCONV(DEPT.EFF.HRS,"MD2") "R#7"                 DE.LINE = DE.LINE :OCONV(DEPT.EFF.HRS,"MD2") "R#7"
0699 DE.LINE = DE.LINE :OCONV(DEPT.CNCR.TIME,"MD2") "R#7"               DE.LINE = DE.LINE :OCONV(DEPT.CNCR.TIME,"MD2") "R#7"
0700 DE.LINE = DE.LINE :SPACE(25)                                    |  *T26330 v
0701 DE.LINE = DE.LINE :DEPT.CNT "R#6"                               |  DE.LINE = DE.LINE :OCONV(DEPT.IMP,"MD2") "R#11"
0702                                                                 >  DE.LINE = DE.LINE :SPACE(14)
0703                                                                 >  *T26330 ^
0704                                                                 >  *T27070 v

0705                                                                 >  *  DE.LINE = DE.LINE :DEPT.CNT "R#6"
0706                                                                 >  DE.LINE = DE.LINE :SPACE(1):OCONV(DEPT.ACT.COST,"MD0,")"R#7"
0707                                                                 >  DE.LINE = DE.LINE :SPACE(1):OCONV(DEPT.STD.COST,"MD0,")"R#7"
0708                                                                 >  *T27070 ^
0709 PRINT DE.LINE                                                      PRINT DE.LINE
0710 DEPT.CNT = 0                                                       DEPT.CNT = 0
0711 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1

0720 GOSUB 9000                                                         GOSUB 9000
0721 END                                                                END
0722 GOSUB 4009                                                         GOSUB 4009
0723 DIV.KEY = CONO:PREV.DIV                                            DIV.KEY = CONO:PREV.DIV
0724 DI.LINE = ''                                                       DI.LINE = ''
0725 DI.LINE = DI.LINE :SPACE(19):OCONV(DIV.KEY,"TDIVISION;X;1;1")   |  DI.LINE = DI.LINE :SPACE(19):OCONV(DIV.KEY,"TDIVISION;X;1;1"
0726 DI.LINE = DI.LINE :OCONV(DIV.TIME,"MD2") "R#8"                     DI.LINE = DI.LINE :OCONV(DIV.TIME,"MD2") "R#8"
0727 DI.LINE = DI.LINE :OCONV(DIV.STD.HRS,"MD2") "R#8"                  DI.LINE = DI.LINE :OCONV(DIV.STD.HRS,"MD2") "R#8"
0728 IF DIV.TIME > 0 THEN                                               IF DIV.TIME > 0 THEN
0729 DIV.EFF.HRS = INT(DIV.STD.HRS / DIV.TIME * 10000)                  DIV.EFF.HRS = INT(DIV.STD.HRS / DIV.TIME * 10000)

0730 END ELSE                                                           END ELSE
0731 DIV.EFF.HRS = 0                                                    DIV.EFF.HRS = 0
0732 END                                                                END
0733 DI.LINE = DI.LINE :OCONV(DIV.EFF.HRS,"MD2") "R#7"                  DI.LINE = DI.LINE :OCONV(DIV.EFF.HRS,"MD2") "R#7"
0734 DI.LINE = DI.LINE :OCONV(DIV.CNCR.TIME,"MD2") "R#7"                DI.LINE = DI.LINE :OCONV(DIV.CNCR.TIME,"MD2") "R#7"
0735 DI.LINE = DI.LINE :SPACE(25)                                    |  *T26330 v
0736 DI.LINE = DI.LINE :DIV.CNT "R#6"                                |  DI.LINE = DI.LINE :OCONV(DIV.IMP,"MD2") "R#11"
0737                                                                 >  DI.LINE = DI.LINE :SPACE(14)
0738                                                                 >  *T26330 ^
0739                                                                 >  *T27070 v

0740                                                                 >  *  DI.LINE = DI.LINE :DIV.CNT "R#6"
0741                                                                 >  DI.LINE = DI.LINE :SPACE(1):OCONV(DIV.ACT.COST,"MD0,")"R#7"
0742                                                                 >  DI.LINE = DI.LINE :SPACE(1):OCONV(DIV.STD.COST,"MD0,")"R#7"
0743                                                                 >  *T27070 ^
0744 PRINT DI.LINE                                                      PRINT DI.LINE
0745 DIV.CNT = 0                                                        DIV.CNT = 0
0746 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1

0760 4009*                                                              4009*
0761 PRINT UT.LINE                                                      PRINT UT.LINE
0762 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0763 RETURN                                                             RETURN
0764 *                                                                  *
0765                                                                 >  *T25496 v  INITIALIZE SCREEN
0766                                                                 >  5000 *
0767                                                                 >  MAT SCV.REC = ""
0768                                                                 >  MAT EDIT.COM.DRIVER = ""
0769                                                                 >  ECD.SCRN.CNT = 3

0770                                                                 >  ECD.SCRN.FLAG = 1
0771                                                                 >  ECD.SCRN.NAME = 'CCTR.PERFORM.RPT'
0772                                                                 >  ECD.SCRN.NAME<2> = 'DEPT.CCTR.RANGE.SEL'
0773                                                                 >  ECD.SCRN.NAME<3> = 'DEPT.CCTR.SOME.SEL'
0774                                                                 >  RETURN
0775                                                                 >  5100 * DISPLAY MAIN SCREEN
0776                                                                 >  ECD.SCRN.NO = 1

0777                                                                 >  ECD.ACTION = 1
0778                                                                 >  CALL SCRN.EDIT
0779                                                                 >  ECD.ACTION = 2
0780                                                                 >  CALL SCRN.EDIT
0781                                                                 >  SCV.REC(2)<ECD.SCRN.NO> = OCONV(DATE(),"D2/")
0782                                                                 >  ECD.ACTION = 3
0783                                                                 >  CALL SCRN.EDIT

0784                                                                 >  RETURN
0785                                                                 >  6100 * ENTER DEPT#
0786                                                                 >  SOURCE.FLAG = "D"
0787                                                                 >  ECD.NUM = 11
0788                                                                 >  ECD.ACTION = 4
0789                                                                 >  CALL SCRN.EDIT
0790                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999

0791                                                                 >  DEPT.NUM = ECD.RET.VALUE
0792                                                                 >  BEGIN CASE
0793                                                                 >  CASE DEPT.NUM = "R"
0794                                                                 >  SCV.REC(1)<2> = OCONV(DATE(),"D2/")
0795                                                                 >  SCV.REC(5)<2> = "Beginning department#"
0796                                                                 >  SCV.REC(6)<2> = "Ending department#"
0797                                                                 >  SCV.REC(3)<2> = START.DEPT

0798                                                                 >  SCV.REC(4)<2> = END.DEPT
0799                                                                 >  GOSUB 7500
0800                                                                 >  REPEAT.FLAG = 0
0801                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0802                                                                 >  ECD.ACTION = 99
0803                                                                 >  CALL SCRN.EDIT
0804                                                                 >  SCV.REC(3)<2> = ""

0805                                                                 >  SCV.REC(4)<2> = ""
0806                                                                 >  GOSUB 5100 ;* MAIN SCREEN
0807                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6100
0808                                                                 >  CASE DEPT.NUM = "S"
0809                                                                 >  SCV.REC(1)<3> = OCONV(DATE(),"D2/")
0810                                                                 >  SCV.REC(2)<3> = "Department numbers"
0811                                                                 >  SCV.REC(4)<3> = ""

0812                                                                 >  SCV.REC(5)<3> = ""
0813                                                                 >  ID.LIST = ""
0814                                                                 >  DEPT.LIST = ""
0815                                                                 >  GOSUB 7800
0816                                                                 >  REPEAT.FLAG = 0
0817                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0818                                                                 >  ECD.ACTION = 99

0819                                                                 >  CALL SCRN.EDIT
0820                                                                 >  GOSUB 5100 ;* MAIN SCREEN
0821                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6100
0822                                                                 >  CASE DEPT.NUM = "ALL"
0823                                                                 >  CASE LEN(DEPT.NUM) # 2 
0824                                                                 >  ERRMSG='Must enter 2 digits'
0825                                                                 >  GOSUB 91000

0826                                                                 >  GOTO 6100
0827                                                                 >  CASE 1
0828                                                                 >  END CASE
0829                                                                 >  SCV.REC(11)<1> = DEPT.NUM
0830                                                                 >  RETURN
0831                                                                 >  6200 * ENTER COSTCENTER
0832                                                                 >  SOURCE.FLAG = "C"

0833                                                                 >  ECD.NUM = 12
0834                                                                 >  ECD.ACTION = 4
0835                                                                 >  CALL SCRN.EDIT
0836                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
0837                                                                 >  CCNT.NUM = ECD.RET.VALUE
0838                                                                 >  BEGIN CASE
0839                                                                 >  CASE CCNT.NUM = "R"

0840                                                                 >  SCV.REC(1)<2> = OCONV(DATE(),"D2/")
0841                                                                 >  SCV.REC(5)<2> = "Beginning cost-center#"
0842                                                                 >  SCV.REC(6)<2> = "Ending cost-center#"
0843                                                                 >  SCV.REC(3)<2> = START.CCNT
0844                                                                 >  SCV.REC(4)<2> = END.CCNT
0845                                                                 >  GOSUB 7700
0846                                                                 >  REPEAT.FLAG = 0

0847                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0848                                                                 >  ECD.ACTION = 99
0849                                                                 >  CALL SCRN.EDIT
0850                                                                 >  SCV.REC(3)<2> = ""
0851                                                                 >  SCV.REC(4)<2> = ""
0852                                                                 >  GOSUB 5100 ;* MAIN SCREEN
0853                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6200

0854                                                                 >  CASE CCNT.NUM = "S"
0855                                                                 >  SCV.REC(1)<3> = OCONV(DATE(),"D2/")
0856                                                                 >  SCV.REC(2)<3> = "Cost-center numbers"
0857                                                                 >  SCV.REC(4)<3> = ""
0858                                                                 >  SCV.REC(5)<3> = ""
0859                                                                 >  ID.LIST = ""
0860                                                                 >  CCNT.LIST = ""

0861                                                                 >  GOSUB 7900
0862                                                                 >  REPEAT.FLAG = 0
0863                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0864                                                                 >  ECD.ACTION = 99
0865                                                                 >  CALL SCRN.EDIT
0866                                                                 >  GOSUB 5100 ;* MAIN SCREEN
0867                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6200

0868                                                                 >  CASE CCNT.NUM = "ALL"
0869                                                                 >  CASE LEN(CCNT.NUM) # 3 
0870                                                                 >  ERRMSG='Must enter 3 digits'
0871                                                                 >  GOSUB 91000
0872                                                                 >  GOTO 6200
0873                                                                 >  CASE 1
0874                                                                 >  END CASE

0875                                                                 >  SCV.REC(12)<1> = CCNT.NUM
0876                                                                 >  RETURN
0877                                                                 >  6300 * ENTER START DATE
0878                                                                 >  ECD.NUM = 13
0879                                                                 >  ECD.ACTION = 4
0880                                                                 >  CALL SCRN.EDIT
0881                                                                 >  IF ECD.RET.VALUE # 'END' THEN

0882                                                                 >  IF END.DATE # '' THEN
0883                                                                 >  IF ECD.RET.VALUE > END.DATE THEN
0884                                                                 >  ERRMSG='Cannot be greater than END date'; GOSUB 91000; GOTO 
0885                                                                 >  END
0886                                                                 >  END
0887                                                                 >  START.DATE = ECD.RET.VALUE
0888                                                                 >  SCV.REC(13)<1> = START.DATE

0889                                                                 >  END
0890                                                                 >  RETURN
0891                                                                 >  6400 * ENTER END DATE
0892                                                                 >  ECD.NUM = 14
0893                                                                 >  ECD.ACTION = 4
0894                                                                 >  *T26575 v
0895                                                                 >  IF START.DATE = "ALL" THEN

0896                                                                 >  END.DATE = "ALL"
0897                                                                 >  SCV.REC(14)<1> = END.DATE
0898                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0899                                                                 >  RETURN
0900                                                                 >  END
0901                                                                 >  *T26575 ^
0902                                                                 >  CALL SCRN.EDIT

0903                                                                 >  *T26575 v
0904                                                                 >  *  IF ECD.RET.VALUE # 'END' THEN
0905                                                                 >  IF ECD.RET.VALUE = "ALL" AND START.DATE # "ALL" THEN
0906                                                                 >  START.DATE = "ALL"
0907                                                                 >  ECD.NUM = 13
0908                                                                 >  SCV.REC(13)<1> = START.DATE
0909                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0910                                                                 >  END
0911                                                                 >  IF ECD.RET.VALUE # 'END' AND ECD.RET.VALUE # "ALL" THEN
0912                                                                 >  *T26575 ^
0913                                                                 >  IF ECD.RET.VALUE < START.DATE THEN
0914                                                                 >  ERRMSG='Cannot be less than START date'; GOSUB 91000; GOTO 6
0915                                                                 >  END
0916                                                                 >  END.DATE = ECD.RET.VALUE

0917                                                                 >  SCV.REC(14)<1> = END.DATE
0918                                                                 >  END
0919                                                                 >  RETURN
0920                                                                 >  6500 * ENTER START PERIOD
0921                                                                 >  ECD.NUM = 15
0922                                                                 >  ECD.ACTION = 4
0923                                                                 >  CALL SCRN.EDIT

0924                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0925                                                                 >  *C39152 IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN
0926                                                                 >  IF ECD.RET.VALUE > MAX.PER THEN
0927                                                                 >  ERRMSG='Cannot greater than ':MAX.PER; GOSUB 91000
0928                                                                 >  GOTO 6500
0929                                                                 >  END ELSE
0930                                                                 >  START.PER = ECD.RET.VALUE

0931                                                                 >  SCV.REC(15)<1> = START.PER
0932                                                                 >  END
0933                                                                 >  END
0934                                                                 >  RETURN
0935                                                                 >  6600 * ENTER END PERIOD
0936                                                                 >  ECD.NUM = 16
0937                                                                 >  ECD.ACTION = 4

0938                                                                 >  CALL SCRN.EDIT
0939                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0940                                                                 >  IF ECD.RET.VALUE < START.PER THEN
0941                                                                 >  ERRMSG='Must not be less than Start Period'; GOSUB 91000; GO
0942                                                                 >  END ELSE
0943                                                                 >  *C39152   IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN
0944                                                                 >  IF ECD.RET.VALUE > MAX.PER THEN

0945                                                                 >  ERRMSG='Cannot greater than ':MAX.PER; GOSUB 91000
0946                                                                 >  GOTO 6600
0947                                                                 >  END
0948                                                                 >  END
0949                                                                 >  END.PER = ECD.RET.VALUE
0950                                                                 >  SCV.REC(16)<1> = END.PER
0951                                                                 >  END

0952                                                                 >  RETURN
0953                                                                 >  6700 * ENTER ENTER ZERO STANDARDS
0954                                                                 >  ECD.NUM = 17
0955                                                                 >  ECD.ACTION = 4
0956                                                                 >  CALL SCRN.EDIT
0957                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0958                                                                 >  ZERO.FLAG = ECD.RET.VALUE

0959                                                                 >  SCV.REC(17)<1> = ZERO.FLAG
0960                                                                 >  END
0961                                                                 >  RETURN
0962                                                                 >  6800 * ENTER SUMMARIZE FLAG
0963                                                                 >  ECD.NUM = 18 
0964                                                                 >  ECD.ACTION = 4
0965                                                                 >  CALL SCRN.EDIT

0966                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0967                                                                 >  SUMMARIZE.FLAG = ECD.RET.VALUE
0968                                                                 >  SCV.REC(18)<1> = SUMMARIZE.FLAG
0969                                                                 >  END
0970                                                                 >  RETURN
0971                                                                 >  6900 * ENTER STANDARDS DETAIL/CCTR.
0972                                                                 >  ECD.NUM = 19

0973                                                                 >  ECD.ACTION = 4
0974                                                                 >  CALL SCRN.EDIT
0975                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0976                                                                 >  STANDARDS.FLAG = ECD.RET.VALUE
0977                                                                 >  SCV.REC(19)<1> = STANDARDS.FLAG
0978                                                                 >  END
0979                                                                 >  RETURN

0980                                                                 >  7000 * ENTER DIVISION CODE
0981                                                                 >  ECD.NUM = 20
0982                                                                 >  ECD.ACTION = 4
0983                                                                 >  CALL SCRN.EDIT
0984                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0985                                                                 >  SCV.REC(20)<1> = ECD.RET.VALUE
0986                                                                 >  DIV.CODE = ECD.RET.VALUE

0987                                                                 >  END
0988                                                                 >  RETURN
0989                                                                 >  7500 * RANGE OF DEPT.
0990                                                                 >  ECD.ACTION = 99
0991                                                                 >  CALL SCRN.EDIT
0992                                                                 >  ECD.SCRN.NO = 2 
0993                                                                 >  *     ECD.ACTION = 1

0994                                                                 >  *     CALL SCRN.EDIT
0995                                                                 >  ECD.ACTION = 2
0996                                                                 >  CALL SCRN.EDIT
0997                                                                 >  SCV.REC(9)<2>=SPACE(10):'DEPARTMENT RANGE SELECTOR'
0998                                                                 >  ECD.ACTION = 3
0999                                                                 >  CALL SCRN.EDIT
1000                                                                 >  SCV.REC(3)<2>=START.DEPT

1001                                                                 >  GOSUB 7550
1002                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1003                                                                 >  SCV.REC(4)<2>=END.DEPT
1004                                                                 >  GOSUB 7600
1005                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1006                                                                 >  DONE.FLAG = 0
1007                                                                 >  LOOP WHILE DONE.FLAG = 0 DO

1008                                                                 >  ECD.NUM = 2
1009                                                                 >  ECD.ACTION = 4
1010                                                                 >  END.DATE = ECD.RET.VALUE
1011                                                                 >  SCV.REC(14)<1> = ECD.RET.VALUE
1012                                                                 >  CALL SCRN.EDIT
1013                                                                 >  BEGIN CASE
1014                                                                 >  CASE ECD.RET.VALUE = "E"

1015                                                                 >  ECD.RET.VALUE = "END"
1016                                                                 >  RETURN
1017                                                                 >  CASE ECD.RET.VALUE = 1
1018                                                                 >  SCV.REC(3)<2>=START.DEPT
1019                                                                 >  GOSUB 7550
1020                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1021                                                                 >  CASE ECD.RET.VALUE = 2

1022                                                                 >  SCV.REC(4)<2>=END.DEPT
1023                                                                 >  GOSUB 7600
1024                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1025                                                                 >  CASE ECD.RET.VALUE = "F"
1026                                                                 >  DONE.FLAG = 1
1027                                                                 >  END CASE
1028                                                                 >  REPEAT

1029                                                                 >  RETURN
1030                                                                 >  7550 * ENTER BEGINNING OF RANGE
1031                                                                 >  ECD.NUM = 3
1032                                                                 >  ECD.ACTION = 4
1033                                                                 >  CALL SCRN.EDIT
1034                                                                 >  IF SOURCE.FLAG = "D" THEN
1035                                                                 >  BEGIN CASE

1036                                                                 >  CASE ECD.RET.VALUE = 'END'
1037                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1038                                                                 >  ERRMSG = "Must enter 2 digits"
1039                                                                 >  GOSUB 91000
1040                                                                 >  GO 7550
1041                                                                 >  CASE END.DEPT # '' AND ECD.RET.VALUE > END.DEPT
1042                                                                 >  ERRMSG='Cannot be greater than End Dept.'

1043                                                                 >  GOSUB 91000
1044                                                                 >  SCV.REC(3)<2>=START.DEPT
1045                                                                 >  GOTO 7550
1046                                                                 >  CASE 1
1047                                                                 >  START.DEPT = ECD.RET.VALUE
1048                                                                 >  END CASE
1049                                                                 >  END

1050                                                                 >  RETURN
1051                                                                 >  7600 * ENTER ENDING OF RANGE
1052                                                                 >  ECD.NUM = 4
1053                                                                 >  ECD.ACTION = 4 
1054                                                                 >  CALL SCRN.EDIT
1055                                                                 >  IF SOURCE.FLAG = "D" THEN
1056                                                                 >  BEGIN CASE

1057                                                                 >  CASE ECD.RET.VALUE = 'END'
1058                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1059                                                                 >  ERRMSG = "Must enter 2 digits"
1060                                                                 >  GOSUB 91000
1061                                                                 >  GO 7600
1062                                                                 >  CASE ECD.RET.VALUE < START.DEPT
1063                                                                 >  ERRMSG='Cannot be less than Start Dept.'

1064                                                                 >  GOSUB 91000
1065                                                                 >  SCV.REC(4)<2>=END.DEPT
1066                                                                 >  GOTO 7600
1067                                                                 >  CASE 1
1068                                                                 >  END.DEPT = ECD.RET.VALUE
1069                                                                 >  END CASE
1070                                                                 >  END

1071                                                                 >  RETURN
1072                                                                 >  7700 * RANGE OF COST-CENTER 
1073                                                                 >  ECD.ACTION = 99
1074                                                                 >  CALL SCRN.EDIT
1075                                                                 >  ECD.SCRN.NO = 2 
1076                                                                 >  *     ECD.ACTION = 1
1077                                                                 >  *     CALL SCRN.EDIT

1078                                                                 >  ECD.ACTION = 2
1079                                                                 >  CALL SCRN.EDIT
1080                                                                 >  SCV.REC(9)<2>=SPACE(10):'COST CENTER RANGE SELECTOR'
1081                                                                 >  ECD.ACTION = 3
1082                                                                 >  CALL SCRN.EDIT
1083                                                                 >  *     GOSUB 7550
1084                                                                 >  GOSUB 7710

1085                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1086                                                                 >  *     GOSUB 7600
1087                                                                 >  GOSUB 7720
1088                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1089                                                                 >  DONE.FLAG = 0
1090                                                                 >  LOOP WHILE DONE.FLAG = 0 DO
1091                                                                 >  ECD.NUM = 2

1092                                                                 >  ECD.ACTION = 4
1093                                                                 >  CALL SCRN.EDIT
1094                                                                 >  BEGIN CASE
1095                                                                 >  CASE ECD.RET.VALUE = "E"
1096                                                                 >  ECD.RET.VALUE = "END"
1097                                                                 >  RETURN
1098                                                                 >  CASE ECD.RET.VALUE = 1

1099                                                                 >  *             GOSUB 7550
1100                                                                 >  GOSUB 7710
1101                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1102                                                                 >  CASE ECD.RET.VALUE = 2
1103                                                                 >  *             GOSUB 7600
1104                                                                 >  GOSUB 7720
1105                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN

1106                                                                 >  CASE ECD.RET.VALUE = "F"
1107                                                                 >  DONE.FLAG = 1
1108                                                                 >  END CASE
1109                                                                 >  REPEAT
1110                                                                 >  RETURN
1111                                                                 >  7710 * GET START COST CENTER
1112                                                                 >  LOOP

1113                                                                 >  ERRMSG=''
1114                                                                 >  SCV.REC(3)<2>=START.CCNT
1115                                                                 >  GOSUB 7550
1116                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1117                                                                 >  IF END.CCNT # '' THEN
1118                                                                 >  IF ECD.RET.VALUE > END.CCNT THEN
1119                                                                 >  ERRMSG='Must not be greater than END Cost Center'; GOSUB 910

1120                                                                 >  SCV.REC(3)<2>=START.CCNT
1121                                                                 >  END
1122                                                                 >  END
1123                                                                 >  IF LEN(ECD.RET.VALUE) # 3 THEN
1124                                                                 >  ERRMSG='Minimum length = 3'; GOSUB 91000
1125                                                                 >  SCV.REC(3)<2>=START.CCNT
1126                                                                 >  END

1127                                                                 >  WHILE ERRMSG # '' DO
1128                                                                 >  REPEAT
1129                                                                 >  START.CCNT = ECD.RET.VALUE
1130                                                                 >  RETURN
1131                                                                 >  7720 * GET END COST CENTER
1132                                                                 >  LOOP
1133                                                                 >  ERRMSG=''

1134                                                                 >  SCV.REC(4)<2>=END.CCNT
1135                                                                 >  GOSUB 7600
1136                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1137                                                                 >  IF ECD.RET.VALUE < START.CCNT THEN
1138                                                                 >  ERRMSG='Must not be less than START Cost Center'; GOSUB 9100
1139                                                                 >  SCV.REC(4)<2>=END.CCNT
1140                                                                 >  END

1141                                                                 >  IF LEN(ECD.RET.VALUE) # 3 THEN
1142                                                                 >  ERRMSG='Minimum length = 3'; GOSUB 91000
1143                                                                 >  SCV.REC(3)<2>=END.CCNT
1144                                                                 >  END
1145                                                                 >  WHILE ERRMSG # '' DO
1146                                                                 >  REPEAT
1147                                                                 >  END.CCNT = ECD.RET.VALUE

1148                                                                 >  RETURN
1149                                                                 >  7800 * LIST OF DEPT.
1150                                                                 >  ECD.ACTION = 99
1151                                                                 >  CALL SCRN.EDIT
1152                                                                 >  ECD.SCRN.NO = 3 
1153                                                                 >  *     ECD.ACTION = 1
1154                                                                 >  *     CALL SCRN.EDIT

1155                                                                 >  ECD.ACTION = 2
1156                                                                 >  CALL SCRN.EDIT
1157                                                                 >  SCV.REC(9)<3>=SPACE(10):'DEPARTMENT LIST SELECTOR'
1158                                                                 >  ECD.ACTION = 3
1159                                                                 >  CALL SCRN.EDIT
1160                                                                 >  CURRENT.POS = 1
1161                                                                 >  ID.LIST = ""

1162                                                                 >  ID.COUNT = 0
1163                                                                 >  GOSUB 8000 
1164                                                                 >  *     LOOP WHILE ECD.RET.VALUE # "END" DO
1165                                                                 >  ECD.SUB.NUM=0
1166                                                                 >  LOOP
1167                                                                 >  GOSUB 8200 ;* ADD AN ID
1168                                                                 >  WHILE ECD.RET.VALUE # 'END' DO

1169                                                                 >  REPEAT
1170                                                                 >  LOOP.FLAG1=0
1171                                                                 >  LOOP WHILE LOOP.FLAG1 = 0 DO
1172                                                                 >  ECD.NUM = 6
1173                                                                 >  ECD.ACTION = 4
1174                                                                 >  CALL SCRN.EDIT
1175                                                                 >  BEGIN CASE

1176                                                                 >  CASE ECD.RET.VALUE = "A"
1177                                                                 >  GOSUB 8200
1178                                                                 >  CASE ECD.RET.VALUE = "C"
1179                                                                 >  GOSUB 8400
1180                                                                 >  CASE ECD.RET.VALUE = "D"
1181                                                                 >  GOSUB 8600
1182                                                                 >  CASE ECD.RET.VALUE = "SF"

1183                                                                 >  GOSUB 8800
1184                                                                 >  CASE ECD.RET.VALUE = "SR"
1185                                                                 >  GOSUB 8900
1186                                                                 >  CASE ECD.RET.VALUE = "F"
1187                                                                 >  LOOP.FLAG1 = 1 
1188                                                                 >  DEPT.LIST = ""
1189                                                                 >  ID.COUNT = DCOUNT(ID.LIST,VM)

1190                                                                 >  FOR ID.INDX = 1 TO ID.COUNT 
1191                                                                 >  DEPT.LIST = DEPT.LIST:' "':ID.LIST<1,ID.INDX>:'"'
1192                                                                 >  NEXT ID.INDX
1193                                                                 >  CASE ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'E'
1194                                                                 >  LOOP.FLAG1 = 1
1195                                                                 >  END CASE
1196                                                                 >  REPEAT

1197                                                                 >  RETURN
1198                                                                 >  7900 * LIST OF COST-CENTERS
1199                                                                 >  ECD.ACTION = 99
1200                                                                 >  CALL SCRN.EDIT
1201                                                                 >  ECD.SCRN.NO = 3 
1202                                                                 >  *     ECD.ACTION = 1
1203                                                                 >  *     CALL SCRN.EDIT

1204                                                                 >  ECD.ACTION = 2
1205                                                                 >  CALL SCRN.EDIT
1206                                                                 >  SCV.REC(9)<3>=SPACE(10):'COST CENTER LIST SELECTOR'
1207                                                                 >  ECD.ACTION = 3
1208                                                                 >  CALL SCRN.EDIT
1209                                                                 >  CURRENT.POS = 1
1210                                                                 >  ID.LIST = ""

1211                                                                 >  ID.COUNT = 0
1212                                                                 >  GOSUB 8000 
1213                                                                 >  LOOP WHILE ECD.RET.VALUE # "END" DO
1214                                                                 >  GOSUB 8200 ;* ADD AN ID
1215                                                                 >  REPEAT
1216                                                                 >  LOOP.FLAG1=0
1217                                                                 >  LOOP WHILE LOOP.FLAG1 = 0 DO

1218                                                                 >  ECD.NUM = 6
1219                                                                 >  ECD.ACTION = 4
1220                                                                 >  CALL SCRN.EDIT
1221                                                                 >  BEGIN CASE
1222                                                                 >  CASE ECD.RET.VALUE = "A"
1223                                                                 >  GOSUB 8200
1224                                                                 >  CASE ECD.RET.VALUE = "C"

1225                                                                 >  GOSUB 8400
1226                                                                 >  CASE ECD.RET.VALUE = "D"
1227                                                                 >  GOSUB 8600
1228                                                                 >  CASE ECD.RET.VALUE = "SF"
1229                                                                 >  GOSUB 8800
1230                                                                 >  CASE ECD.RET.VALUE = "SR"
1231                                                                 >  GOSUB 8900

1232                                                                 >  CASE ECD.RET.VALUE = "F"
1233                                                                 >  LOOP.FLAG1 = 1 
1234                                                                 >  CCNT.LIST = ""
1235                                                                 >  ID.COUNT = DCOUNT(ID.LIST,VM)
1236                                                                 >  FOR ID.INDX = 1 TO ID.COUNT 
1237                                                                 >  CCNT.LIST = CCNT.LIST:' "':ID.LIST<1,ID.INDX>:'"'
1238                                                                 >  NEXT ID.INDX

1239                                                                 >  CASE ECD.RET.VALUE = 'E'
1240                                                                 >  LOOP.FLAG1 = 1
1241                                                                 >  END CASE
1242                                                                 >  REPEAT
1243                                                                 >  RETURN
1244                                                                 >  8000 * DISPLAY LIST OF ID's
1245                                                                 >  ECD.ACTION = 6

1246                                                                 >  CALL SCRN.EDIT
1247                                                                 >  SCV.REC(3)<3> = ""
1248                                                                 >  SCV.REC(4)<3> = ""
1249                                                                 >  SCV.REC(5)<3> = ""
1250                                                                 >  FOR DISPLAY.INDEX = 1 TO SCROLL.SIZE
1251                                                                 >  LIST.INDEX = CURRENT.POS + DISPLAY.INDEX -1
1252                                                                 >  IF ID.LIST<1,LIST.INDEX> # "" THEN

1253                                                                 >  SCV.REC(4)<3,DISPLAY.INDEX> = LIST.INDEX
1254                                                                 >  SCV.REC(5)<3,DISPLAY.INDEX> = ID.LIST<1,LIST.INDEX>
1255                                                                 >  END ELSE
1256                                                                 >  *         SCV.REC(4)<3,DISPLAY.INDEX> = ""
1257                                                                 >  *         SCV.REC(5)<3,DISPLAY.INDEX> = ""
1258                                                                 >  END
1259                                                                 >  NEXT DISPLAY.INDEX

1260                                                                 >  ECD.ACTION = 3
1261                                                                 >  CALL SCRN.EDIT
1262                                                                 >  RETURN
1263                                                                 >  8200 * ADD AN ID TO THE END OF THE LIST
1264                                                                 >  LOOP.FLAG3 = 0
1265                                                                 >  LOOP
1266                                                                 >  ECD.RET.VALUE=''; ECD.DEFAULT=''

1267                                                                 >  ECD.NUM = 3
1268                                                                 >  ECD.ACTION = 4
1269                                                                 >  CALL SCRN.EDIT
1270                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1271                                                                 >  BEGIN CASE
1272                                                                 >  CASE SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2 
1273                                                                 >  ERRMSG='Must enter 2 digits'

1274                                                                 >  GOSUB 91000
1275                                                                 >  CASE SOURCE.FLAG = 'C' AND LEN(ECD.RET.VALUE) # 3
1276                                                                 >  ERRMSG='Must enter 3 digits'
1277                                                                 >  GOSUB 91000
1278                                                                 >  CASE 1
1279                                                                 >  LOOP.FLAG3 = 1
1280                                                                 >  END CASE

1281                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1282                                                                 >  REPEAT
1283                                                                 >  ID.COUNT = ID.COUNT + 1
1284                                                                 >  IF ID.LIST = "" THEN
1285                                                                 >  ID.LIST = ECD.RET.VALUE
1286                                                                 >  END ELSE
1287                                                                 >  ID.LIST = ID.LIST:VM:ECD.RET.VALUE

1288                                                                 >  END
1289                                                                 >  IF ID.COUNT > (CURRENT.POS + SCROLL.SIZE - 1) THEN  
1290                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE
1291                                                                 >  END
1292                                                                 >  GOSUB 8000
1293                                                                 >  RETURN
1294                                                                 >  8400 * CHANGE AN ID

1295                                                                 >  ECD.NUM = 8
1296                                                                 >  ECD.ACTION = 4
1297                                                                 >  CALL SCRN.EDIT
1298                                                                 >  BEGIN CASE
1299                                                                 >  CASE ECD.RET.VALUE = "" 
1300                                                                 >  RETURN
1301                                                                 >  CASE ECD.RET.VALUE = "SF"

1302                                                                 >  GOSUB 8800
1303                                                                 >  CASE ECD.RET.VALUE = "SR"
1304                                                                 >  GOSUB 8900
1305                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1
1306                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1307                                                                 >  CHANGE.POS = ECD.RET.VALUE
1308                                                                 >  LOOP.FLAG3 = 0

1309                                                                 >  LOOP
1310                                                                 >  ECD.NUM = 3
1311                                                                 >  ECD.ACTION = 4
1312                                                                 >  CALL SCRN.EDIT
1313                                                                 >  IF ECD.RET.VALUE = "" THEN RETURN
1314                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1315                                                                 >  BEGIN CASE

1316                                                                 >  CASE SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2
1317                                                                 >  ERRMSG='Must enter 2 digits'
1318                                                                 >  GOSUB 91000
1319                                                                 >  CASE SOURCE.FLAG = 'C' AND LEN(ECD.RET.VALUE) # 3
1320                                                                 >  ERRMSG='Must enter 3 digits'
1321                                                                 >  GOSUB 91000
1322                                                                 >  CASE 1

1323                                                                 >  LOOP.FLAG3 = 1
1324                                                                 >  END CASE
1325                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1326                                                                 >  REPEAT
1327                                                                 >  ID.LIST<1,CHANGE.POS> = ECD.RET.VALUE
1328                                                                 >  GOSUB 8000
1329                                                                 >  END ELSE GOSUB 8400

1330                                                                 >  END CASE
1331                                                                 >  RETURN
1332                                                                 >  8600 * DELETE AN ID
1333                                                                 >  ECD.NUM = 7
1334                                                                 >  ECD.ACTION = 4
1335                                                                 >  CALL SCRN.EDIT
1336                                                                 >  BEGIN CASE

1337                                                                 >  CASE ECD.RET.VALUE = "" 
1338                                                                 >  RETURN
1339                                                                 >  CASE ECD.RET.VALUE = "SF"
1340                                                                 >  GOSUB 8800
1341                                                                 >  CASE ECD.RET.VALUE = "SR"
1342                                                                 >  GOSUB 8900
1343                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1

1344                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1345                                                                 >  DEL ID.LIST<1,ECD.RET.VALUE>
1346                                                                 >  GOSUB 8000
1347                                                                 >  END ELSE GOSUB 8600
1348                                                                 >  CASE 1
1349                                                                 >  GOSUB 8600
1350                                                                 >  END CASE

1351                                                                 >  RETURN
1352                                                                 >  8800 * SCROLL FORWARD
1353                                                                 >  IF CURRENT.POS + SCROLL.SIZE > ID.COUNT THEN
1354                                                                 >  CURRENT.POS = 1
1355                                                                 >  END ELSE
1356                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE
1357                                                                 >  END

1358                                                                 >  GOSUB 8000 ;* REFRESH DATA
1359                                                                 >  RETURN
1360                                                                 >  8900 * SCROLL REVERSE
1361                                                                 >  IF CURRENT.POS - SCROLL.SIZE < 1 THEN
1362                                                                 >  CURRENT.POS = 1
1363                                                                 >  END ELSE
1364                                                                 >  CURRENT.POS = CURRENT.POS - SCROLL.SIZE

1365                                                                 >  END
1366                                                                 >  GOSUB 8000 ;* REFRESH DATA
1367                                                                 >  RETURN
1368                                                                 >  8950 * BUILD SELECT STATEMENT
1369                                                                 >  SLINE = 'SSELECT JOB.TIME BY JLB.DIV BY JLB.DEPT BY MCCTR BY
1370                                                                 >  BEGIN CASE
1371                                                                 >  CASE DEPT.NUM = "R"

1372                                                                 >  SLINE = SLINE:' AND WITH DEPT >= "':START.DEPT:'"'
1373                                                                 >  SLINE = SLINE:' AND WITH DEPT <= "':END.DEPT:'"'
1374                                                                 >  CASE DEPT.NUM = "S"
1375                                                                 >  SLINE = SLINE:' AND WITH DEPT =':DEPT.LIST
1376                                                                 >  CASE DEPT.NUM = "ALL"
1377                                                                 >  CASE 1
1378                                                                 >  SLINE = SLINE:' AND WITH DEPT = "':DEPT.NUM:'"'

1379                                                                 >  END CASE
1380                                                                 >  BEGIN CASE
1381                                                                 >  CASE CCNT.NUM = "R"
1382                                                                 >  SLINE = SLINE:' AND WITH MCCTR >= "':START.CCNT:'"'
1383                                                                 >  SLINE = SLINE:' AND WITH MCCTR <= "':END.CCNT:'"'
1384                                                                 >  CASE CCNT.NUM = "S"
1385                                                                 >  SLINE = SLINE:' AND WITH MCCTR =':CCNT.LIST

1386                                                                 >  CASE CCNT.NUM = "ALL"
1387                                                                 >  CASE 1
1388                                                                 >  SLINE = SLINE:' AND WITH MCCTR = "':CCNT.NUM:'"'
1389                                                                 >  END CASE
1390                                                                 >  IF START.DATE # "ALL" THEN ; * T26575
1391                                                                 >  SLINE = SLINE:' AND WITH JLB.DATE GE "':OCONV(START.DATE,"D2
1392                                                                 >  SLINE = SLINE:' AND WITH JLB.DATE LE "':OCONV(END.DATE,"D2/"

1393                                                                 >  END ; * T26575
1394                                                                 >  SLINE = SLINE:' AND WITH PERIOD GE "':START.PER:'"'
1395                                                                 >  SLINE = SLINE:' AND WITH PERIOD LE "':END.PER:'"'
1396                                                                 >  IF DIV.CODE = "ALL" THEN
1397                                                                 >  END ELSE
1398                                                                 >  SLINE = SLINE:' AND WITH JLB.DIV = "':DIV.CODE:'"'
1399                                                                 >  END

1400                                                                 >  UDTEXECUTE SLINE CAPTURING RESPONSEMSGS
1401                                                                 >  ECD.ACTION = 99
1402                                                                 >  CALL SCRN.EDIT
1403                                                                 >  RETURN
1404                                                                 >  *T25496 ^
1405 ***** PRINT HEADINGS                                               ***** PRINT HEADINGS
1406 *                                                                  *

1410 PRINT HD1:PAGE.NO                                                  PRINT HD1:PAGE.NO
1411 PRINT HD2                                                          PRINT HD2
1412 * T22007 v                                                         * T22007 v
1413 H.LINE = 'DIVISION : ':DIVISION                                    H.LINE = 'DIVISION : ':DIVISION
1414 *  H.LINE = H.LINE :SPACE(60):"FOR PERIOD ":ST.PER:" THROUGH "     *           H.LINE = H.LINE :SPACE(60):"FOR PERIOD ":ST.PER:
1415 H.LINE = H.LINE :SPACE(46):"FOR PERIOD ":ST.PER:" THROUGH ":EN  |  H.LINE = H.LINE :SPACE(49):"FOR PERIOD ":ST.PER:" THROUGH ":
1416 * T22007 ^                                                         * T22007 ^
1417 PRINT H.LINE                                                       PRINT H.LINE
1418 PRINT SPACE(63):"FROM ":OCONV(ST.DATE,"D2/"):" TO ":OCONV(EN.D     PRINT SPACE(63):"FROM ":OCONV(ST.DATE,"D2/"):" TO ":OCONV(EN
1419 PRINT                                                              PRINT


JCSBP/CCTR.PERFORM.STATS.RPT                                       /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CCTR.PERFORM.STATS.RPT
Printed for thompson at 06/28/2006 04:41:45PM

0002 *                                                                  *
0003 **********************************************                     **********************************************
0004 * REVISION    - [XX.X]                                             * REVISION    - [XX.X]
0005 * Copyright 1995 by Computer Business Associates (Vercom Softw     * Copyright 1995 by Computer Business Associates (Vercom Sof
0006 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0007 * SOURCE      - JCSBP                                           |  * SOURCE      - LITHOBP
0008 * PROGRAM     - CCTR.PERFORM.STATS.RPT                             * PROGRAM     - CCTR.PERFORM.STATS.RPT
0009 * BY          - rick;CBA                                           * BY          - rick;CBA
0010 * DATE        - 02/02/1999                                         * DATE        - 02/02/1999
0011 * DESCRIPTION -                                                    * DESCRIPTION -

0011 * DESCRIPTION -                                                    * DESCRIPTION -
0012 *                                                                  *
0013 *T23179 rick 02/02/1999 * New report to simulate the cctr perf     *T23179 rick 02/02/1999 * New report to simulate the cctr pe
0014 *                         report but instead of using the PERF     *                         report but instead of using the PE
0015 *                         file use the JOB.TIME file. 	           *                         file use the JOB.TIME file. 	
0016 *T26493 cmykleb 03/22/2002 * Change report to use rpt # from p  |  *T25495 aron 01/12/2001 * Modify the selection criteria to p
0017 *T26800 lross 08/13/2002 * Rpt heading needs to be unique & pa  |  *                         Dept. and "1,some,range,all" Cost-
0018 *                          prob.                                |  *                         This mod also removes the selectio
0019 *T26827 lross 08/27/2002 * Several differences vs Detail Repor  |  *                         the PROC.
0020                                                                 >  *C39152 lanny 11/16/2001 * Allow up to 2 periods in the futu

0028 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0029 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0030 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0031 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0032 *COPY>JCS.CPYLIB>JOB.TIME                                          *COPY>JCS.CPYLIB>JOB.TIME
0033                                                                 >  *T25495 v
0034                                                                 >  *COPY>CPYLIB>EDIT.COM.DRIVER
0035                                                                 >  *COPY>PMC.CPYLIB>FISCAL
0036                                                                 >  *T25495 ^
0037 *                                                                  *

0038 **** SETUP ERRMSG ROUTINE                                          **** SETUP ERRMSG ROUTINE
0039 *                                                                  *
0040 SYS.TYPE = 1                                                       SYS.TYPE = 1
0041 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0042 *                                                                  *
0043                                                                 >  PROCREAD ID ELSE
0044                                                                 >  ERRMSG = 'CANNOT PERFORM PROCREAD'
0045                                                                 >  GOSUB 91000;GOTO 99999
0046                                                                 >  END
0047                                                                 >  CONO = ID<1>

0048                                                                 >  CONO.NAME = ID<2>
0049 ***** OPEN FILES                                                   ***** OPEN FILES
0050 *                                                                  *
0051 OPEN "JOB.TIME" TO JOB.TIME ELSE                                   OPEN "JOB.TIME" TO JOB.TIME ELSE
0052 ERRMSG = "JOB.TIME FILE IS MISSING"                                ERRMSG = "JOB.TIME FILE IS MISSING"
0053 GOTO 93000                                                         GOTO 93000
0054 END                                                                END

0058 END                                                                END
0059 OPEN '','COST.CNTR' TO COST.CNTR ELSE                              OPEN '','COST.CNTR' TO COST.CNTR ELSE
0060 ERRMSG = 'COST.CNTR FILE IS MISSING'                               ERRMSG = 'COST.CNTR FILE IS MISSING'
0061 GOTO 93000                                                         GOTO 93000
0062 END                                                                END
0063                                                                 >  *T25495 v
0064                                                                 >  OPEN 'CBN.SCREENS' TO M.SCREENS ELSE
0065                                                                 >  ERRMSG = 'CBN.SCREENS FILE IS MISSING'
0066                                                                 >  GOSUB 91000;GOTO 99999
0067                                                                 >  END

0068                                                                 >  OPEN 'CONTROL' TO CONTROL ELSE
0069                                                                 >  ERRMSG = 'CONTROL FILE IS MISSING'
0070                                                                 >  GOSUB 91000;GOTO 99999
0071                                                                 >  END
0072                                                                 >  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
0073                                                                 >  ERRMSG='Cannot read JCFiscal Control record'
0074                                                                 >  GOSUB 91000;GOTO 99999

0075                                                                 >  END
0076                                                                 >  POS = 1; START.DEPT=''; END.DEPT=''; START.CCNT=''; END.CCNT
0077                                                                 >  START.PER=''; END.PER=''; ZERO.FLAG=''; STANDARDS.FLAG=''; D
0078                                                                 >  START.DATE=''; END.DATE=''
0079                                                                 >  *C39152 v
0080                                                                 >  READ NUM.PERIODS FROM CONTROL, CONO:'ACCT.PERIODS' ELSE NUM.
0081                                                                 >  CUR.YR=FR.CURR.PER<1,POS>[1,4]

0082                                                                 >  CUR.MO=FR.CURR.PER<1,POS>[5,2]
0083                                                                 >  IF CUR.MO+2 <= NUM.PERIODS THEN
0084                                                                 >  MAX.PER = CUR.YR:(CUR.MO+2)'R%2'
0085                                                                 >  END ELSE
0086                                                                 >  MAX.PER = CUR.YR+1:(CUR.MO+2-NUM.PERIODS)'R%2'
0087                                                                 >  END
0088                                                                 >  *C39152 ^

0089                                                                 >  SCROLL.SIZE = 10
0090                                                                 >  CURRENT.POS = 1
0091                                                                 >  GOSUB 5000 ;*INITIALIZE SCREENS
0092                                                                 >  GOSUB 5100 ;*DISPLAY MAIN SCREEN
0093                                                                 >  FOR PROMPT.NO = 1 TO 9 
0094                                                                 >  ON PROMPT.NO GOSUB 6100,6200,6300,6400,6500,6600,6700,6900,7
0095                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999

0096                                                                 >  NEXT PROMPT.NO
0097                                                                 >  LOOP.FLAG = 0
0098                                                                 >  LOOP WHILE LOOP.FLAG = 0 DO
0099                                                                 >  ECD.NUM = 10
0100                                                                 >  ECD.ACTION = 4
0101                                                                 >  CALL SCRN.EDIT
0102                                                                 >  BEGIN CASE

0103                                                                 >  CASE ECD.RET.VALUE = "END"
0104                                                                 >  GOTO 99999
0105                                                                 >  CASE ECD.RET.VALUE = "E"
0106                                                                 >  GOTO 99999
0107                                                                 >  CASE ECD.RET.VALUE = 1
0108                                                                 >  GOSUB 6100
0109                                                                 >  CASE ECD.RET.VALUE = 2

0110                                                                 >  GOSUB 6200
0111                                                                 >  CASE ECD.RET.VALUE = 3
0112                                                                 >  GOSUB 6300
0113                                                                 >  CASE ECD.RET.VALUE = 4
0114                                                                 >  GOSUB 6400
0115                                                                 >  CASE ECD.RET.VALUE = 5
0116                                                                 >  GOSUB 6500

0117                                                                 >  CASE ECD.RET.VALUE = 6
0118                                                                 >  GOSUB 6600
0119                                                                 >  CASE ECD.RET.VALUE = 7
0120                                                                 >  GOSUB 6700
0121                                                                 >  CASE ECD.RET.VALUE = 8
0122                                                                 >  GOSUB 6900
0123                                                                 >  CASE ECD.RET.VALUE = 9

0124                                                                 >  GOSUB 7000
0125                                                                 >  CASE ECD.RET.VALUE = "F"
0126                                                                 >  LOOP.FLAG = 1
0127                                                                 >  *SELECTION STATEMENTS
0128                                                                 >  END CASE
0129                                                                 >  REPEAT
0130                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999

0131                                                                 >  GOSUB 8950 ;* SELECT THE JOB.TIME FILE
0132                                                                 >  REPORT.NAME = "COST CNTR-DEPARTMENT PERFORMANCE SUMMARY"
0133                                                                 >  REPORT.NUMBER = "XXXX"
0134                                                                 >  REPORT.DATE = DATE()
0135                                                                 >  THD1 = ""
0136                                                                 >  THD2 = ""
0137                                                                 >  CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,

0138                                                                 >  ST.DATE = OCONV(START.DATE,'D4/')
0139                                                                 >  EN.DATE = OCONV(END.DATE,'D4/')
0140                                                                 >  ST.PER = START.PER
0141                                                                 >  EN.PER = END.PER
0142                                                                 >  STD.FLG = ZERO.FLAG
0143                                                                 >  FILE.FLG = STANDARDS.FLAG
0144                                                                 >  DIVISION = DIV.CODE

0145                                                                 >  *T25495 ^
0146 *                                                                  *
0147                                                                 >  *T25495 v COMMENTED OUT
0148 **** READ PROC VALUES                                              **** READ PROC VALUES
0149 *                                                                  *
0150 PROCREAD ID ELSE                                                |  *     PROCREAD ID ELSE
0151 ERRMSG = 'CANNOT PERFORM PROCREAD'                              |  *       ERRMSG = 'CANNOT PERFORM PROCREAD'

0152 GOTO 93000                                                      |  *       GOTO 93000
0153 END                                                             |  *     END
0154 CONO          = ID<1>                                           |  *     CONO          = ID<1>
0155 *T26493 v                                                       <  
0156 *    CONO.NAME     = ID<2>                                         *     CONO.NAME     = ID<2>
0157 *    REPORT.NAME   = "COST CNTR-DEPARTMENT PERFORMANCE SUMMARY     *     REPORT.NAME   = "COST CNTR-DEPARTMENT PERFORMANCE SUMM
0158 *    REPORT.NUMBER = "XXXX"                                        *     REPORT.NUMBER = "XXXX"

0159 CONO.NAME = ""                                                  |  *     REPORT.DATE   = DATE()
0160 REPORT.NAME = ""                                                |  *     THD1 = "";THD2 = ""
0161 REPORT.NUMBER = ID<2>                                           |  *     CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.N
0162 *T26493 ^                                                       |  *     ST.DATE  = ID<4>
0163 REPORT.DATE   = DATE()                                          |  *     EN.DATE  = ID<5>
0164 THD1 = "";THD2 = ""                                             |  *     ST.PER = ID<6>
0165 CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,RE  |  *     EN.PER = ID<7>

0166 ST.DATE  = ID<4>                                                |  *     STD.FLG = ID<8>
0167 EN.DATE  = ID<5>                                                |  *     FILE.FLG = ID<9>
0168 ST.PER = ID<6>                                                  |  *     DIVISION = ID<10>
0169 EN.PER = ID<7>                                                  |  *     ST.PER  = ST.PER[5,2]:'/':ST.PER[1,4]
0170 STD.FLG = ID<8>                                                 |  *     EN.PER  = EN.PER[5,2]:'/':EN.PER[1,4]
0171 FILE.FLG = ID<9>                                                |  *     XX = ICONV(ST.DATE,"D")
0172 DIVISION = ID<10>                                               |  *     ST.DATE = OCONV(XX,"D4/")

0173 ST.PER  = ST.PER[5,2]:'/':ST.PER[1,4]                           |  *     XX = ICONV(EN.DATE,"D")
0174 EN.PER  = EN.PER[5,2]:'/':EN.PER[1,4]                           |  *     EN.DATE = OCONV(XX,"D4/")
0175 XX = ICONV(ST.DATE,"D")                                         <  
0176 ST.DATE = OCONV(XX,"D4/")                                       <  
0177 XX = ICONV(EN.DATE,"D")                                         <  
0178 EN.DATE = OCONV(XX,"D4/")                                       <  
0179 *                                                                  *

0180                                                                 >  *T25495 ^ 
0181 **** INITIALIZATION                                                **** INITIALIZATION
0182 *                                                                  *
0183 LINE.COUNT = 99                                                    LINE.COUNT = 99
0184 PAGE.NO = 0                                                        PAGE.NO = 0
0185 PRT.FLG = 1                                                        PRT.FLG = 1
0186 DE = 1                                                             DE = 1

0353 *                                                                  *
0354 1000*                                                              1000*
0355 DO.BAIL = 0                                                        DO.BAIL = 0
0356 CNC.HRS = 0                                                        CNC.HRS = 0
0357 CNC.IMP = 0                                                        CNC.IMP = 0
0358 *T26827 v                                                       |  IF JLB.CNCR <> 0 THEN
0359 STD.HRS = 0                                                     <  
0360 EFF.HRS = 0                                                     <  
0361 IMP.HRS = 0                                                     <  
0362 STD.IMP = 0                                                     <  

0363 EFF.IMP = 0                                                     <  
0364 IF NOT(NUM(JLB.CNCR)) THEN JLB.CNCR = 0                         <  
0365 IF STD.FLG = 'N' THEN                                           <  
0366 IF FILE.FLG = 'C' THEN                                          <  
0367 IF CCTR.OPER.STD.HRS<1,SI>+0 = 0 AND CCTR.OPER.STD.IMP<1,SI>+0  <  
0368 END ELSE                                                        <  
0369 IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN GOTO 1099       <  

0370 END                                                             <  
0371 END                                                             <  
0372 *T26827 ^                                                       <  
0373 IF JLB.CNCR+0 <> 0 THEN                                         <  
0374 *T24400 v                                                       <  
0375 IF JLB.CNCR = JLB.HRS AND JLB.RC.DESC = 'GANG ALLOC' THEN       <  
0376 JLB.HRS = 0                                                     <  

0377 JLB.IMP = 0                                                     <  
0378 JLB.HRS.STD = 0                                                 <  
0379 JLB.IMP.STD = 0                                                 <  
0380 CCTR.OPER.STD.HRS<1,SI> = 0                                     <  
0381 CCTR.OPER.STD.IMP<1,SI> = 0                                     <  
0382 END                                                             <  
0383 *T24400 ^                                                       <  

0383 *T24400 ^                                                       <  
0384 CNC.HRS = JLB.CNCR                                                 CNC.HRS = JLB.CNCR
0385 IF JLB.CNCR = JLB.HRS THEN                                         IF JLB.CNCR = JLB.HRS THEN
0386 CNC.IMP = JLB.IMP                                                  CNC.IMP = JLB.IMP
0387 END ELSE                                                           END ELSE
0388 IF JLB.HRS+0 # 0 THEN                                           <  
0389 PCT = JLB.CNCR / (JLB.HRS / 1000)                                  PCT = JLB.CNCR / (JLB.HRS / 1000)
0390 END ELSE PCT = 1000                                             <  
0391 CNC.IMP = INT((JLB.IMP / 1000) * PCT + .5)                         CNC.IMP = INT((JLB.IMP / 1000) * PCT + .5)
0392 END                                                                END

0393 END                                                                END
0394 ** Below merged from lines 345-381.                             <  
0395 IF FILE.FLG = 'C' THEN                                          <  
0396 *       STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0                   <  
0397 IMP.STD = CCTR.OPER.STD.IMP<1,SI> + 0                           <  
0398 HRS.STD = CCTR.OPER.STD.HRS<1,SI> + 0                           <  
0399 END ELSE                                                        <  
0400 *       STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0                   <  

0401 IMP.STD = CCTR.OPER.STD.IMP<1,SI> + 0                           <  
0402 HRS.STD = JLB.HRS.STD + 0                                       <  
0403 END                                                             <  
0404 *T18439 v From CCTR.PERFORM.RPT                                 <  
0405 IF JLB.HRS + 0 = 0 THEN                                         <  
0406 HRS.STD = 0                                                     <  
0407 IMP.STD = 0                                                     <  

0408 END                                                             <  
0409 IF JLB.HRS+0 >= 0 THEN SIGN = 1 ELSE SIGN = (-1)                <  
0410 IF CCTR.OPER.TYPE<1,SI> = 'V' OR CCTR.OPER.TYPE<1,SI> = 'U' TH  <  
0411 IF JLB.HRS+0 # 0 THEN                                           <  
0412 IMP.HRS = INT(JLB.IMP / JLB.HRS)                                <  
0413 IMP.HRS = IMP.HRS * SIGN                                        <  
0414 END                                                             <  

0415 END                                                             <  
0416 IF FILE.FLG = "C" THEN                                          <  
0417 BEGIN CASE                                                      <  
0418 CASE CCTR.OPER.TYPE<1,SI> = "U"                                 <  
0419 BEGIN CASE                                                      <  
0420 CASE HRS.STD+0 # 0                                              <  
0421 *T24769 v                                                       <  

0422 *               STD.HRS = INT(JLB.IMP * HRS.STD / 100)          <  
0423 STD.HRS = INT(JLB.IMP * HRS.STD / 100)/100                      <  
0424 *T24769 ^                                                       <  
0425 STD.IMP = INT(100 / HRS.STD)                                    <  
0426 CASE IMP.STD+0 # 0                                              <  
0427 *T24769 v                                                       <  
0428 *               STD.HRS = INT(JLB.IMP / IMP.STD)                <  

0429 STD.HRS = INT(JLB.IMP / IMP.STD)/100                            <  
0430 *T24769 ^                                                       <  
0431 STD.IMP = IMP.STD                                               <  
0432 CASE 1                                                          <  
0433 STD.HRS = 0                                                     <  
0434 STD.IMP = 0                                                     <  
0435 END CASE                                                        <  

0436 CASE CCTR.OPER.TYPE<1,SI> = "V"                                 <  
0437 IF IMP.STD+0 # 0 THEN                                           <  
0438 STD.HRS = INT(JLB.IMP / IMP.STD)                                <  
0439 STD.IMP = IMP.STD                                               <  
0440 END ELSE                                                        <  
0441 STD.HRS = 0                                                     <  
0442 STD.IMP = 0                                                     <  

0443 END                                                             <  
0444 CASE 1                                                          <  
0445 STD.HRS = HRS.STD + 0                                           <  
0446 STD.IMP = 0                                                     <  
0447 END CASE                                                        <  
0448 END ELSE                                                        <  
0449 STD.HRS = HRS.STD + 0                                           <  

0450 STD.IMP = IMP.STD + 0                                           <  
0451 END                                                             <  
0452 *T26827 ^                                                       <  
0453 CCTR.CNC.HRS = CCTR.CNC.HRS + CNC.HRS + 0                          CCTR.CNC.HRS = CCTR.CNC.HRS + CNC.HRS + 0
0454 N.C.HRS = 0;N.C.IMP = 0                                            N.C.HRS = 0;N.C.IMP = 0
0455 CHG.HRS = 0;CHG.IMP = 0                                            CHG.HRS = 0;CHG.IMP = 0
0456 O.T.HRS = 0;D.T.HRS = 0                                            O.T.HRS = 0;D.T.HRS = 0

0457 *    STD.IMP = 0                                                |  STD.IMP = 0
0458 *T26827 v CNCR does not mean NON-CHG per SC                     |  IF JLB.CNCR + 0 = 0 THEN
0459 *    IF JLB.CNCR + 0 = 0 THEN                                   <  
0460 BEGIN CASE                                                         BEGIN CASE
0461 CASE JLB.TYPE = "N" OR JLB.TYPE = "S"                              CASE JLB.TYPE = "N" OR JLB.TYPE = "S"
0462 N.C.HRS = JLB.HRS                                                  N.C.HRS = JLB.HRS
0463 N.C.IMP = JLB.IMP                                                  N.C.IMP = JLB.IMP

0473 CASE JLB.FCTR = "02"                                               CASE JLB.FCTR = "02"
0474 O.T.HRS = JLB.HRS                                                  O.T.HRS = JLB.HRS
0475 CASE JLB.FCTR = "03"                                               CASE JLB.FCTR = "03"
0476 DT.HRS = JLB.HRS                                                   DT.HRS = JLB.HRS
0477 END CASE                                                           END CASE
0478 *    END                                                        |  END
0479 *T26827 ^                                                       |  IF JLB.HRS.STD + JLB.IMP.STD <> 0 THEN
0480 *T26827 IF JLB.HRS.STD + JLB.IMP.STD <> 0 THEN                  |  LOCATE OPER IN CCTR.OPER<1>,1 SETTING SI ELSE
0481 ** Below performed after read - redundant.                      |  STD.IMP = 0
0482 *      LOCATE OPER IN CCTR.OPER<1>,1 SETTING SI ELSE            |  GOTO 1010

0483 *        STD.IMP = 0                                            |  END
0484 *        GOTO 1010                                              <  
0485 *      END                                                      <  
0486 *T26827 ^                                                       <  
0487 *       IF CCTR.OPER.TYPE<1,SI> = 'U' THEN                         *       IF CCTR.OPER.TYPE<1,SI> = 'U' THEN
0488 *         IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN                  *         IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN
0489 *           STD.IMP = CCTR.OPER.STD.IMP<1,SI>                      *           STD.IMP = CCTR.OPER.STD.IMP<1,SI>

0491 *           STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)             *           STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)
0492 *         END                                                      *         END
0493 *       END ELSE                                                   *       END ELSE
0494 *         STD.IMP = CCTR.OPER.STD.IMP<1,SI>                        *         STD.IMP = CCTR.OPER.STD.IMP<1,SI>
0495 *       END                                                        *       END
0496 *T26827 v Moved to above ^                                      |  IF FILE.FLG = 'C' THEN
0497 *      IF FILE.FLG = 'C' THEN                                   |  IF STD.FLG = 'N' THEN
0498 *        IF STD.FLG = 'N' THEN                                  |  IF CCTR.OPER.STD.HRS<1,SI>+0 = 0 AND CCTR.OPER.STD.IMP<1,SI>
0499 *          IF CCTR.OPER.STD.HRS<1,SI>+0 = 0 AND CCTR.OPER.STD.  |  DO.BAIL = 1
0500 *            DO.BAIL = 1                                        |  GOTO 1099

0501 *            GOTO 1099                                          |  END
0502 *          END                                                  |  END
0503 *        END                                                    |  IF CCTR.OPER.TYPE<1,SI> = 'U' THEN
0504 *        IF CCTR.OPER.TYPE<1,SI> = 'U' THEN                     |  IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN
0505 *          IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN              |  STD.IMP = CCTR.OPER.STD.IMP<1,SI>
0506 *            STD.IMP = CCTR.OPER.STD.IMP<1,SI>                  |  END ELSE
0507 *          END ELSE                                             |  STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)

0508 *            STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)         |  END
0509 *          END                                                  |  END ELSE
0510 *        END ELSE                                               |  STD.IMP = CCTR.OPER.STD.IMP<1,SI>
0511 *          STD.IMP = CCTR.OPER.STD.IMP<1,SI>                    |  END
0512 *        END                                                    |  HRS.STD = CCTR.OPER.STD.HRS<1,SI> + 0
0513 *        HRS.STD = CCTR.OPER.STD.HRS<1,SI> + 0                  |  *         STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0
0514 **        STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0                 |  END ELSE

0515 *      END ELSE                                                 |  IF STD.FLG = 'N' THEN
0516 *        IF STD.FLG = 'N' THEN                                  |  IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN
0517 *          IF JLB.HRS.STD+0 = 0 AND JLB.IMP.STD+0 = 0 THEN      |  GOTO 1099
0518 *            GOTO 1099                                          |  END
0519 *          END                                                  |  END
0520 *        END                                                    |  IF CCTR.OPER.TYPE<1,SI> = 'U' THEN
0521 *        IF CCTR.OPER.TYPE<1,SI> = 'U' THEN                     |  IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN

0522 *          IF CCTR.OPER.STD.HRS<1,SI> + 0 = 0 THEN              |  STD.IMP = CCTR.OPER.STD.IMP<1,SI>
0523 *            STD.IMP = CCTR.OPER.STD.IMP<1,SI>                  |  END ELSE
0524 *          END ELSE                                             |  STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)
0525 *            STD.IMP = INT(100/CCTR.OPER.STD.HRS<1,SI>)         |  END
0526 *          END                                                  |  END ELSE
0527 *        END ELSE                                               |  STD.IMP = CCTR.OPER.STD.IMP<1,SI>
0528 *          STD.IMP = CCTR.OPER.STD.IMP<1,SI>                    |  END

0529 *        END                                                    |  HRS.STD = JLB.HRS.STD + 0
0530 *        HRS.STD = JLB.HRS.STD + 0                              |  *         STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0
0531 **        STD.IMP = CCTR.OPER.STD.IMP<1,SI> + 0                 |  END
0532 *      END                                                      <  
0533 *T26827 ^                                                       <  
0534 CCTR.ACT.HRS = CCTR.ACT.HRS + JLB.HRS + 0                          CCTR.ACT.HRS = CCTR.ACT.HRS + JLB.HRS + 0
0535 *      CCTR.STD.HRS = CCTR.STD.HRS + HRS.STD + 0                |  CCTR.STD.HRS = CCTR.STD.HRS + HRS.STD + 0

0536 CCTR.STD.HRS = CCTR.STD.HRS + STD.HRS + 0                       <  
0537 CCTR.ACT.IMP = CCTR.ACT.IMP + JLB.IMP + 0                          CCTR.ACT.IMP = CCTR.ACT.IMP + JLB.IMP + 0
0538 *T26827 END                                                     |  END
0539 CCTR.CHG.HRS = CCTR.CHG.HRS + CHG.HRS + 0                          CCTR.CHG.HRS = CCTR.CHG.HRS + CHG.HRS + 0
0540 CCTR.N.C.HRS = CCTR.N.C.HRS + N.C.HRS + 0                          CCTR.N.C.HRS = CCTR.N.C.HRS + N.C.HRS + 0
0541 CCTR.O.T.HRS = CCTR.O.T.HRS + O.T.HRS + 0                          CCTR.O.T.HRS = CCTR.O.T.HRS + O.T.HRS + 0
0542 CCTR.D.T.HRS = CCTR.D.T.HRS + D.T.HRS + 0                          CCTR.D.T.HRS = CCTR.D.T.HRS + D.T.HRS + 0

0603 RETURN                                                             RETURN
0604 *                                                                  *
0605 **** PRINT TOTAL FOR CCTR                                          **** PRINT TOTAL FOR CCTR
0606 *                                                                  *
0607 4002*                                                              4002* 
0608 GOSUB 1001                                                      <  
0609 CCTR.ACT.HRS = INT(CCTR.ACT.HRS / 10)                              CCTR.ACT.HRS = INT(CCTR.ACT.HRS / 10)
0610 CCTR.STD.HRS = INT(CCTR.STD.HRS / 10)                              CCTR.STD.HRS = INT(CCTR.STD.HRS / 10)
0611 CCTR.CNC.HRS = INT(CCTR.CNC.HRS / 10)                              CCTR.CNC.HRS = INT(CCTR.CNC.HRS / 10)
0612 CCTR.CHG.HRS = INT(CCTR.CHG.HRS / 10)                              CCTR.CHG.HRS = INT(CCTR.CHG.HRS / 10)

0669 END ELSE                                                           END ELSE
0670 CCTR.CHG.PER = 0                                                   CCTR.CHG.PER = 0
0671 END                                                                END
0672 CC.LINE = CC.LINE :OCONV(CCTR.CHG.PER, "MD1") "R#6":' '            CC.LINE = CC.LINE :OCONV(CCTR.CHG.PER, "MD1") "R#6":' '
0673 CC.LINE = CC.LINE :OCONV(CCTR.O.T.HRS, "MD1") "R#7":' '            CC.LINE = CC.LINE :OCONV(CCTR.O.T.HRS, "MD1") "R#7":' '
0674 *T26800 CC.LINE = CC.LINE :OCONV(CCTR.D.T.HRS, "MD1") "R#7":'   |  CC.LINE = CC.LINE :OCONV(CCTR.D.T.HRS, "MD1") "R#7":' '
0675 CC.LINE = CC.LINE :OCONV(CCTR.D.T.HRS, "MD1") "R#7"             <  
0676 PRINT CC.LINE                                                      PRINT CC.LINE
0677 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0678 PREV.CCTR = CCTR                                                   PREV.CCTR = CCTR

0679 *    GOSUB 1001                                                 |  GOSUB 1001
0680 MAT TOT.CCTR = ''                                                  MAT TOT.CCTR = ''
0681 RETURN                                                             RETURN
0682 *                                                                  *
0683 **** PRINT TOTAL FOR DEPT                                          **** PRINT TOTAL FOR DEPT
0684 *                                                                  *
0685 4003*                                                              4003* 

0687 *        LINE.COUNT = 0                                            *        LINE.COUNT = 0
0688 *        DESC1 = HD1;DESC2 = HD2                                   *        DESC1 = HD1;DESC2 = HD2
0689 *        DESC3 = ""                                                *        DESC3 = ""
0690 *        GOSUB 9000                                                *        GOSUB 9000
0691 *     END                                                          *     END
0692 GOSUB 1002                                                      <  
0693 U.LINE = ''                                                        U.LINE = ''
0694 U.LINE = SPACE(39):UNDER.LINE2                                     U.LINE = SPACE(39):UNDER.LINE2
0695 DEP.ACT.HRS<1,DI,DE> = INT(DEP.ACT.HRS<1,DI,DE> / 10)           <  
0696 DEP.STD.HRS<1,DI,DE> = INT(DEP.STD.HRS<1,DI,DE> / 10)           <  

0697 DEP.CNC.HRS<1,DI,DE> = INT(DEP.CNC.HRS<1,DI,DE> / 10)           <  
0698 DEP.CHG.HRS<1,DI,DE> = INT(DEP.CHG.HRS<1,DI,DE> / 10)           <  
0699 DEP.N.C.HRS<1,DI,DE> = INT(DEP.N.C.HRS<1,DI,DE> / 10)           <  
0700 DEP.O.T.HRS<1,DI,DE> = INT(DEP.O.T.HRS<1,DI,DE> / 10)           <  
0701 DEP.D.T.HRS<1,DI,DE> = INT(DEP.D.T.HRS<1,DI,DE> / 10)           <  
0702 PRINT U.LINE                                                       PRINT U.LINE
0703 *     DEPT.KEY = CONO:PREV.DEPT                                    *     DEPT.KEY = CONO:PREV.DEPT

0740 END ELSE                                                           END ELSE
0741 DEP.CHG.PER = 0                                                    DEP.CHG.PER = 0
0742 END                                                                END
0743 DE.LINE = DE.LINE :OCONV(DEP.CHG.PER, "MD1") "R#6":' '             DE.LINE = DE.LINE :OCONV(DEP.CHG.PER, "MD1") "R#6":' '
0744 DE.LINE = DE.LINE :OCONV(DEP.O.T.HRS<1,DI,DE>, "MD1") "R#7":'      DE.LINE = DE.LINE :OCONV(DEP.O.T.HRS<1,DI,DE>, "MD1") "R#7":
0745 *T26800 DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DE>, "MD1")   |  DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DE>, "MD1") "R#7":
0746 DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DE>, "MD1") "R#7"     <  
0747 PRINT DE.LINE                                                      PRINT DE.LINE
0748 PRINT                                                              PRINT
0749 LINE.COUNT = LINE.COUNT + 3                                        LINE.COUNT = LINE.COUNT + 3

0750 *    GOSUB 1002                                                 |  GOSUB 1002
0751 PREV.DEPT = DEPT                                                   PREV.DEPT = DEPT
0752 DEPT.PRT.FLG = 1                                                   DEPT.PRT.FLG = 1
0753 DE = DE + 1                                                        DE = DE + 1
0754 RETURN                                                             RETURN
0755 *                                                                  *
0756 **** PRINT TOTAL FOR ALL DEPT'S                                    **** PRINT TOTAL FOR ALL DEPT'S

0757 *                                                                  *
0758 4004*                                                              4004* 
0759 GOSUB 1003                                                      <  
0760 DEP.CNT = COUNT(DEP.NO<1,DI>, SVM) + (DEP.NO # "")                 DEP.CNT = COUNT(DEP.NO<1,DI>, SVM) + (DEP.NO # "")
0761 LINE.COUNT = 99                                                    LINE.COUNT = 99
0762 FOR DX = 1 TO DEP.CNT                                              FOR DX = 1 TO DEP.CNT
0763 IF LINE.COUNT > 55 THEN                                            IF LINE.COUNT > 55 THEN
0764 LINE.COUNT = 0                                                     LINE.COUNT = 0
0765 DESC1 = HD3;DESC2 = HD4                                            DESC1 = HD3;DESC2 = HD4

0813 END ELSE                                                           END ELSE
0814 DEP.CHG.PER = 0                                                    DEP.CHG.PER = 0
0815 END                                                                END
0816 DE.LINE = DE.LINE :OCONV(DEP.CHG.PER, "MD1") "R#6":' '             DE.LINE = DE.LINE :OCONV(DEP.CHG.PER, "MD1") "R#6":' '
0817 DE.LINE = DE.LINE :OCONV(DEP.O.T.HRS<1,DI,DX>, "MD1") "R#7":'      DE.LINE = DE.LINE :OCONV(DEP.O.T.HRS<1,DI,DX>, "MD1") "R#7":
0818 *T26800 DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DX>, "MD1")   |  DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DX>, "MD1") "R#7":
0819 DE.LINE = DE.LINE :OCONV(DEP.D.T.HRS<1,DI,DX>, "MD1") "R#7"     <  
0820 PRINT DE.LINE                                                      PRINT DE.LINE
0821 PRINT                                                              PRINT
0822 LINE.COUNT = LINE.COUNT + 2                                        LINE.COUNT = LINE.COUNT + 2

0830 *     END                                                          *     END
0831 U.LINE = ""                                                        U.LINE = ""
0832 U.LINE = U.LINE :SPACE(39)                                         U.LINE = U.LINE :SPACE(39)
0833 U.LINE = U.LINE :UNDER.LINE3                                       U.LINE = U.LINE :UNDER.LINE3
0834 PRINT U.LINE                                                       PRINT U.LINE
0835 DIV.ACT.HRS<1,DI> = INT(DIV.ACT.HRS<1,DI> / 10)                 <  
0836 DIV.STD.HRS<1,DI> = INT(DIV.STD.HRS<1,DI> / 10)                 <  
0837 DIV.CNC.HRS<1,DI> = INT(DIV.CNC.HRS<1,DI> / 10)                 <  
0838 DIV.CHG.HRS<1,DI> = INT(DIV.CHG.HRS<1,DI> / 10)                 <  
0839 DIV.N.C.HRS<1,DI> = INT(DIV.N.C.HRS<1,DI> / 10)                 <  

0840 DIV.O.T.HRS<1,DI> = INT(DIV.O.T.HRS<1,DI> / 10)                 <  
0841 DIV.D.T.HRS<1,DI> = INT(DIV.D.T.HRS<1,DI> / 10)                 <  
0842 *     DIV.KEY = CONO:DIV.NO<1,DI>                                  *     DIV.KEY = CONO:DIV.NO<1,DI>
0843 *     DIV.PRT.DESC = DIV.NO<1,DI>:"  ":OCONV(DIV.KEY,"TDIVISIO     *     DIV.PRT.DESC = DIV.NO<1,DI>:"  ":OCONV(DIV.KEY,"TDIVIS
0844 DIV.PRT.DESC = "DIVISION TOTAL"                                    DIV.PRT.DESC = "DIVISION TOTAL"
0845 DV.LINE = ''                                                       DV.LINE = ''
0846 DV.LINE = DV.LINE :DIV.PRT.DESC "R#38":" "                         DV.LINE = DV.LINE :DIV.PRT.DESC "R#38":" "

0876 END ELSE                                                           END ELSE
0877 DIV.CHG.PER = 0                                                    DIV.CHG.PER = 0
0878 END                                                                END
0879 DV.LINE = DV.LINE : OCONV(DIV.CHG.PER, "MD1") "R#6":' '            DV.LINE = DV.LINE : OCONV(DIV.CHG.PER, "MD1") "R#6":' '
0880 DV.LINE = DV.LINE :OCONV(DIV.O.T.HRS<1,DI>, "MD1") "R#7":' '       DV.LINE = DV.LINE :OCONV(DIV.O.T.HRS<1,DI>, "MD1") "R#7":' '
0881 *T26800 DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DI>, "MD1") "R#  |  DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DI>, "MD1") "R#7":' '
0882 DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DI>, "MD1") "R#7"        <  
0883 PRINT DV.LINE                                                      PRINT DV.LINE
0884 *    GOSUB 1003                                                 |  GOSUB 1003
0885 LINE.COUNT = 99                                                    LINE.COUNT = 99

0936 END ELSE                                                           END ELSE
0937 DIV.CHG.PER = 0                                                    DIV.CHG.PER = 0
0938 END                                                                END
0939 DV.LINE = DV.LINE : OCONV(DIV.CHG.PER, "MD1") "R#6":' '            DV.LINE = DV.LINE : OCONV(DIV.CHG.PER, "MD1") "R#6":' '
0940 DV.LINE = DV.LINE :OCONV(DIV.O.T.HRS<1,DX>, "MD1") "R#7":' '       DV.LINE = DV.LINE :OCONV(DIV.O.T.HRS<1,DX>, "MD1") "R#7":' '
0941 *T26800 DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DX>, "MD1") "R#  |  DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DX>, "MD1") "R#7":' '
0942 DV.LINE = DV.LINE :OCONV(DIV.D.T.HRS<1,DX>, "MD1") "R#7"        <  
0943 PRINT DV.LINE                                                      PRINT DV.LINE
0944 PRINT                                                              PRINT
0945 LINE.COUNT = LINE.COUNT + 2                                        LINE.COUNT = LINE.COUNT + 2

0955 *     END                                                          *     END
0956 U.LINE = ""                                                        U.LINE = ""
0957 U.LINE = U.LINE :SPACE(39)                                         U.LINE = U.LINE :SPACE(39)
0958 U.LINE = U.LINE :UNDER.LINE3                                       U.LINE = U.LINE :UNDER.LINE3
0959 PRINT U.LINE                                                       PRINT U.LINE
0960 COMP.ACT.HRS = INT(COMP.ACT.HRS / 10)                           <  
0961 COMP.STD.HRS = INT(COMP.STD.HRS / 10)                           <  
0962 COMP.CNC.HRS = INT(COMP.CNC.HRS / 10)                           <  
0963 COMP.CHG.HRS = INT(COMP.CHG.HRS / 10)                           <  
0964 COMP.N.C.HRS = INT(COMP.N.C.HRS / 10)                           <  

0965 COMP.O.T.HRS = INT(COMP.O.T.HRS / 10)                           <  
0966 COMP.D.T.HRS = INT(COMP.D.T.HRS / 10)                           <  
0967 COMP.PRT.DESC = "COMPANY TOTAL"                                    COMP.PRT.DESC = "COMPANY TOTAL"
0968 CO.LINE = ''                                                       CO.LINE = ''
0969 CO.LINE = CO.LINE :COMP.PRT.DESC "R#38":" "                        CO.LINE = CO.LINE :COMP.PRT.DESC "R#38":" "
0970 CO.LINE = CO.LINE :OCONV(COMP.ACT.HRS, "MD1") "R#7":' '            CO.LINE = CO.LINE :OCONV(COMP.ACT.HRS, "MD1") "R#7":' '
0971 CO.LINE = CO.LINE :OCONV(COMP.STD.HRS, "MD1") "R#7":' '            CO.LINE = CO.LINE :OCONV(COMP.STD.HRS, "MD1") "R#7":' '

0999 END ELSE                                                           END ELSE
1000 COMP.CHG.PER = 0                                                   COMP.CHG.PER = 0
1001 END                                                                END
1002 CO.LINE = CO.LINE :OCONV(COMP.CHG.PER, "MD1") "R#6":' '            CO.LINE = CO.LINE :OCONV(COMP.CHG.PER, "MD1") "R#6":' '
1003 CO.LINE = CO.LINE :OCONV(COMP.O.T.HRS, "MD1") "R#7":' '            CO.LINE = CO.LINE :OCONV(COMP.O.T.HRS, "MD1") "R#7":' '
1004 *T26800 CO.LINE = CO.LINE :OCONV(COMP.D.T.HRS, "MD1") "R#7":'   |  CO.LINE = CO.LINE :OCONV(COMP.D.T.HRS, "MD1") "R#7":' '
1005 CO.LINE = CO.LINE :OCONV(COMP.D.T.HRS, "MD1") "R#7"             <  
1006 PRINT CO.LINE                                                      PRINT CO.LINE
1007 RETURN                                                             RETURN
1008 *                                                                  *

1014 PRINT THD1:PAGE.NO                                                 PRINT THD1:PAGE.NO
1015 PRINT THD2                                                         PRINT THD2
1016 H.LINE = 'DIVISION : ':DIVISION                                    H.LINE = 'DIVISION : ':DIVISION
1017 H.LINE = H.LINE :SPACE(37):"FOR PERIOD ":ST.PER:" THROUGH ":EN     H.LINE = H.LINE :SPACE(37):"FOR PERIOD ":ST.PER:" THROUGH ":
1018 PRINT H.LINE                                                       PRINT H.LINE
1019 H.LINE = SPACE(49):"FOR DATES ":ST.DATE:" THROUGH ":EN.DATE     |  H.LINE = SPACE(46):"FOR DATES ":ST.DATE:" THROUGH ":EN.DATE
1020 PRINT H.LINE                                                       PRINT H.LINE
1021 IF DESC3 # "" THEN                                                 IF DESC3 # "" THEN
1022 H.LINE = ""                                                        H.LINE = ""
1023 LEN.DESC = LEN(DESC3)                                              LEN.DESC = LEN(DESC3)

1038 H.LINE = ''                                                        H.LINE = ''
1039 H.LINE = H.LINE :UNDER.LINE1:UNDER.LINE2                           H.LINE = H.LINE :UNDER.LINE1:UNDER.LINE2
1040 PRINT H.LINE                                                       PRINT H.LINE
1041 LINE.COUNT = LINE.COUNT + 10                                       LINE.COUNT = LINE.COUNT + 10
1042 RETURN                                                             RETURN
1043                                                                 >  *
1044                                                                 >  *T25495 v  INITIALIZE SCREEN
1045                                                                 >  5000 *
1046                                                                 >  MAT SCV.REC = ""
1047                                                                 >  MAT EDIT.COM.DRIVER = ""

1048                                                                 >  ECD.SCRN.CNT = 3
1049                                                                 >  ECD.SCRN.FLAG = 1
1050                                                                 >  ECD.SCRN.NAME = 'CCTR.PERFORM.STATS.RPT'
1051                                                                 >  ECD.SCRN.NAME<2> = 'DEPT.CCTR.RANGE.SEL'
1052                                                                 >  ECD.SCRN.NAME<3> = 'DEPT.CCTR.SOME.SEL'
1053                                                                 >  RETURN
1054                                                                 >  5100 * DISPLAY MAIN SCREEN

1055                                                                 >  ECD.SCRN.NO = 1
1056                                                                 >  ECD.ACTION = 1
1057                                                                 >  CALL SCRN.EDIT
1058                                                                 >  ECD.ACTION = 2
1059                                                                 >  CALL SCRN.EDIT
1060                                                                 >  SCV.REC(2)<ECD.SCRN.NO> = OCONV(DATE(),"D2/")
1061                                                                 >  ECD.ACTION = 3

1062                                                                 >  CALL SCRN.EDIT
1063                                                                 >  RETURN
1064                                                                 >  6100 * ENTER DEPT#
1065                                                                 >  SOURCE.FLAG = "D"
1066                                                                 >  ECD.NUM = 11
1067                                                                 >  ECD.ACTION = 4
1068                                                                 >  CALL SCRN.EDIT

1069                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
1070                                                                 >  DEPT.NUM = ECD.RET.VALUE
1071                                                                 >  BEGIN CASE
1072                                                                 >  CASE DEPT.NUM = "R"
1073                                                                 >  SCV.REC(1)<2> = OCONV(DATE(),"D2/")
1074                                                                 >  SCV.REC(5)<2> = "Beginning department#"
1075                                                                 >  SCV.REC(6)<2> = "Ending department#"

1076                                                                 >  SCV.REC(3)<2> = START.DEPT
1077                                                                 >  SCV.REC(4)<2> = END.DEPT
1078                                                                 >  GOSUB 7500
1079                                                                 >  REPEAT.FLAG = 0
1080                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
1081                                                                 >  ECD.ACTION = 99
1082                                                                 >  CALL SCRN.EDIT

1083                                                                 >  SCV.REC(3)<2> = ""
1084                                                                 >  SCV.REC(4)<2> = ""
1085                                                                 >  GOSUB 5100 ;* MAIN SCREEN
1086                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6100
1087                                                                 >  CASE DEPT.NUM = "S"
1088                                                                 >  SCV.REC(1)<3> = OCONV(DATE(),"D2/")
1089                                                                 >  SCV.REC(2)<3> = "Department numbers"

1090                                                                 >  SCV.REC(4)<3> = ""
1091                                                                 >  SCV.REC(5)<3> = ""
1092                                                                 >  ID.LIST = ""
1093                                                                 >  DEPT.LIST = ""
1094                                                                 >  GOSUB 7800
1095                                                                 >  REPEAT.FLAG = 0
1096                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.

1097                                                                 >  ECD.ACTION = 99
1098                                                                 >  CALL SCRN.EDIT
1099                                                                 >  GOSUB 5100 ;* MAIN SCREEN
1100                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6100
1101                                                                 >  CASE DEPT.NUM = "ALL"
1102                                                                 >  CASE LEN(DEPT.NUM) # 2 
1103                                                                 >  ERRMSG='Must enter 2 digits'

1104                                                                 >  GOSUB 91000
1105                                                                 >  GOTO 6100
1106                                                                 >  CASE 1
1107                                                                 >  END CASE
1108                                                                 >  SCV.REC(11)<1> = DEPT.NUM
1109                                                                 >  RETURN
1110                                                                 >  6200 * ENTER COSTCENTER

1111                                                                 >  SOURCE.FLAG = "C"
1112                                                                 >  ECD.NUM = 12
1113                                                                 >  ECD.ACTION = 4
1114                                                                 >  CALL SCRN.EDIT
1115                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
1116                                                                 >  CCNT.NUM = ECD.RET.VALUE
1117                                                                 >  BEGIN CASE

1118                                                                 >  CASE CCNT.NUM = "R"
1119                                                                 >  SCV.REC(1)<2> = OCONV(DATE(),"D2/")
1120                                                                 >  SCV.REC(5)<2> = "Beginning cost-center#"
1121                                                                 >  SCV.REC(6)<2> = "Ending cost-center#"
1122                                                                 >  SCV.REC(3)<2> = START.CCNT
1123                                                                 >  SCV.REC(4)<2> = END.CCNT
1124                                                                 >  GOSUB 7700

1125                                                                 >  REPEAT.FLAG = 0
1126                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
1127                                                                 >  ECD.ACTION = 99
1128                                                                 >  CALL SCRN.EDIT
1129                                                                 >  SCV.REC(3)<2> = ""
1130                                                                 >  SCV.REC(4)<2> = ""
1131                                                                 >  GOSUB 5100 ;* MAIN SCREEN

1132                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6200
1133                                                                 >  CASE CCNT.NUM = "S"
1134                                                                 >  SCV.REC(1)<3> = OCONV(DATE(),"D2/")
1135                                                                 >  SCV.REC(2)<3> = "Cost-center numbers"
1136                                                                 >  SCV.REC(4)<3> = ""
1137                                                                 >  SCV.REC(5)<3> = ""
1138                                                                 >  ID.LIST = ""

1139                                                                 >  CCNT.LIST = ""
1140                                                                 >  GOSUB 7900
1141                                                                 >  REPEAT.FLAG = 0
1142                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
1143                                                                 >  ECD.ACTION = 99
1144                                                                 >  CALL SCRN.EDIT
1145                                                                 >  GOSUB 5100 ;* MAIN SCREEN

1146                                                                 >  IF REPEAT.FLAG = 1 THEN GOTO 6200
1147                                                                 >  CASE CCNT.NUM = "ALL"
1148                                                                 >  CASE LEN(CCNT.NUM) # 3 
1149                                                                 >  ERRMSG='Must enter 3 digits'
1150                                                                 >  GOSUB 91000
1151                                                                 >  GOTO 6200
1152                                                                 >  CASE 1

1153                                                                 >  END CASE
1154                                                                 >  SCV.REC(12)<1> = CCNT.NUM
1155                                                                 >  RETURN
1156                                                                 >  6300 * ENTER START DATE
1157                                                                 >  ECD.NUM = 13
1158                                                                 >  ECD.ACTION = 4
1159                                                                 >  CALL SCRN.EDIT

1160                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1161                                                                 >  IF END.DATE # '' THEN
1162                                                                 >  IF ECD.RET.VALUE > END.DATE THEN
1163                                                                 >  ERRMSG='Cannot be greater than END date'; GOSUB 91000; GOTO 
1164                                                                 >  END
1165                                                                 >  END
1166                                                                 >  START.DATE = ECD.RET.VALUE

1167                                                                 >  SCV.REC(13)<1> = START.DATE
1168                                                                 >  END
1169                                                                 >  RETURN
1170                                                                 >  6400 * ENTER END DATE
1171                                                                 >  ECD.NUM = 14
1172                                                                 >  ECD.ACTION = 4
1173                                                                 >  CALL SCRN.EDIT

1174                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1175                                                                 >  IF ECD.RET.VALUE < START.DATE THEN
1176                                                                 >  ERRMSG='Cannot be less than START date'; GOSUB 91000; GOTO 6
1177                                                                 >  END
1178                                                                 >  END.DATE = ECD.RET.VALUE
1179                                                                 >  SCV.REC(14)<1> = END.DATE
1180                                                                 >  END

1181                                                                 >  RETURN
1182                                                                 >  6500 * ENTER START PERIOD
1183                                                                 >  ECD.NUM = 15
1184                                                                 >  ECD.ACTION = 4
1185                                                                 >  CALL SCRN.EDIT
1186                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1187                                                                 >  *C39152 IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN

1188                                                                 >  IF ECD.RET.VALUE > MAX.PER THEN
1189                                                                 >  ERRMSG='Cannot greater than ':MAX.PER; GOSUB 91000
1190                                                                 >  GOTO 6500
1191                                                                 >  END ELSE
1192                                                                 >  START.PER = ECD.RET.VALUE
1193                                                                 >  SCV.REC(15)<1> = START.PER
1194                                                                 >  END

1195                                                                 >  END
1196                                                                 >  RETURN
1197                                                                 >  6600 * ENTER END PERIOD
1198                                                                 >  ECD.NUM = 16
1199                                                                 >  ECD.ACTION = 4
1200                                                                 >  CALL SCRN.EDIT
1201                                                                 >  IF ECD.RET.VALUE # 'END' THEN

1202                                                                 >  IF ECD.RET.VALUE < START.PER THEN
1203                                                                 >  ERRMSG='Must not be less than Start Period'; GOSUB 91000; GO
1204                                                                 >  END ELSE
1205                                                                 >  *C39152   IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN
1206                                                                 >  IF ECD.RET.VALUE > MAX.PER THEN
1207                                                                 >  ERRMSG='Cannot greater than ':MAX.PER; GOSUB 91000
1208                                                                 >  GOTO 6600

1209                                                                 >  END
1210                                                                 >  END
1211                                                                 >  END.PER = ECD.RET.VALUE
1212                                                                 >  SCV.REC(16)<1> = END.PER
1213                                                                 >  END
1214                                                                 >  RETURN
1215                                                                 >  6700 * ENTER ENTER ZERO STANDARDS

1216                                                                 >  ECD.NUM = 17
1217                                                                 >  ECD.ACTION = 4
1218                                                                 >  CALL SCRN.EDIT
1219                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1220                                                                 >  ZERO.FLAG = ECD.RET.VALUE
1221                                                                 >  SCV.REC(17)<1> = ZERO.FLAG
1222                                                                 >  END

1223                                                                 >  RETURN
1224                                                                 >  6900 * ENTER STANDARDS DETAIL/CCTR.
1225                                                                 >  ECD.NUM = 19
1226                                                                 >  ECD.ACTION = 4
1227                                                                 >  CALL SCRN.EDIT
1228                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1229                                                                 >  STANDARDS.FLAG = ECD.RET.VALUE

1230                                                                 >  SCV.REC(19)<1> = STANDARDS.FLAG
1231                                                                 >  END
1232                                                                 >  RETURN
1233                                                                 >  7000 * ENTER DIVISION CODE
1234                                                                 >  ECD.NUM = 20
1235                                                                 >  ECD.ACTION = 4
1236                                                                 >  CALL SCRN.EDIT

1237                                                                 >  IF ECD.RET.VALUE # 'END' THEN
1238                                                                 >  SCV.REC(20)<1> = ECD.RET.VALUE
1239                                                                 >  DIV.CODE = ECD.RET.VALUE
1240                                                                 >  END
1241                                                                 >  RETURN
1242                                                                 >  7500 * RANGE OF DEPT.
1243                                                                 >  ECD.ACTION = 99

1244                                                                 >  CALL SCRN.EDIT
1245                                                                 >  ECD.SCRN.NO = 2 
1246                                                                 >  *     ECD.ACTION = 1
1247                                                                 >  *     CALL SCRN.EDIT
1248                                                                 >  ECD.ACTION = 2
1249                                                                 >  CALL SCRN.EDIT
1250                                                                 >  SCV.REC(9)<2>=SPACE(10):'DEPARTMENT RANGE SELECTOR'

1251                                                                 >  ECD.ACTION = 3
1252                                                                 >  CALL SCRN.EDIT
1253                                                                 >  SCV.REC(3)<2>=START.DEPT
1254                                                                 >  GOSUB 7550
1255                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1256                                                                 >  SCV.REC(4)<2>=END.DEPT
1257                                                                 >  GOSUB 7600

1258                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1259                                                                 >  DONE.FLAG = 0
1260                                                                 >  LOOP WHILE DONE.FLAG = 0 DO
1261                                                                 >  ECD.NUM = 2
1262                                                                 >  ECD.ACTION = 4
1263                                                                 >  CALL SCRN.EDIT
1264                                                                 >  BEGIN CASE

1265                                                                 >  CASE ECD.RET.VALUE = "E"
1266                                                                 >  ECD.RET.VALUE = "END"
1267                                                                 >  RETURN
1268                                                                 >  CASE ECD.RET.VALUE = 1
1269                                                                 >  SCV.REC(3)<2>=START.DEPT
1270                                                                 >  GOSUB 7550
1271                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN

1272                                                                 >  CASE ECD.RET.VALUE = 2
1273                                                                 >  SCV.REC(4)<2>=END.DEPT
1274                                                                 >  GOSUB 7600
1275                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1276                                                                 >  CASE ECD.RET.VALUE = "F"
1277                                                                 >  DONE.FLAG = 1
1278                                                                 >  END CASE

1279                                                                 >  REPEAT
1280                                                                 >  RETURN
1281                                                                 >  7550 * ENTER BEGINNING OF RANGE
1282                                                                 >  ECD.NUM = 3
1283                                                                 >  ECD.ACTION = 4
1284                                                                 >  CALL SCRN.EDIT
1285                                                                 >  IF SOURCE.FLAG = "D" THEN

1286                                                                 >  BEGIN CASE
1287                                                                 >  CASE ECD.RET.VALUE = 'END'
1288                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1289                                                                 >  ERRMSG = "Must enter 2 digits"
1290                                                                 >  GOSUB 91000
1291                                                                 >  GO 7550
1292                                                                 >  CASE END.DEPT # '' AND ECD.RET.VALUE > END.DEPT

1293                                                                 >  ERRMSG='Cannot be greater than End Dept.'
1294                                                                 >  GOSUB 91000
1295                                                                 >  SCV.REC(3)<2>=START.DEPT
1296                                                                 >  GOTO 7550
1297                                                                 >  CASE 1
1298                                                                 >  START.DEPT = ECD.RET.VALUE
1299                                                                 >  END CASE

1300                                                                 >  END
1301                                                                 >  RETURN
1302                                                                 >  7600 * ENTER ENDING OF RANGE
1303                                                                 >  ECD.NUM = 4
1304                                                                 >  ECD.ACTION = 4 
1305                                                                 >  CALL SCRN.EDIT
1306                                                                 >  IF SOURCE.FLAG = "D" THEN

1307                                                                 >  BEGIN CASE
1308                                                                 >  CASE ECD.RET.VALUE = 'END'
1309                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1310                                                                 >  ERRMSG = "Must enter 2 digits"
1311                                                                 >  GOSUB 91000
1312                                                                 >  GO 7600
1313                                                                 >  CASE ECD.RET.VALUE < START.DEPT

1314                                                                 >  ERRMSG='Cannot be less than Start Dept.'
1315                                                                 >  GOSUB 91000
1316                                                                 >  SCV.REC(4)<2>=END.DEPT
1317                                                                 >  GOTO 7600
1318                                                                 >  CASE 1
1319                                                                 >  END.DEPT = ECD.RET.VALUE
1320                                                                 >  END CASE

1321                                                                 >  END
1322                                                                 >  RETURN
1323                                                                 >  7700 * RANGE OF COST-CENTER 
1324                                                                 >  ECD.ACTION = 99
1325                                                                 >  CALL SCRN.EDIT
1326                                                                 >  ECD.SCRN.NO = 2 
1327                                                                 >  *     ECD.ACTION = 1

1328                                                                 >  *     CALL SCRN.EDIT
1329                                                                 >  ECD.ACTION = 2
1330                                                                 >  CALL SCRN.EDIT
1331                                                                 >  SCV.REC(9)<2>=SPACE(10):'COST CENTER RANGE SELECTOR'
1332                                                                 >  ECD.ACTION = 3
1333                                                                 >  CALL SCRN.EDIT
1334                                                                 >  *     GOSUB 7550

1335                                                                 >  GOSUB 7710
1336                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1337                                                                 >  *     GOSUB 7600
1338                                                                 >  GOSUB 7720
1339                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1340                                                                 >  DONE.FLAG = 0
1341                                                                 >  LOOP WHILE DONE.FLAG = 0 DO

1342                                                                 >  ECD.NUM = 2
1343                                                                 >  ECD.ACTION = 4
1344                                                                 >  CALL SCRN.EDIT
1345                                                                 >  BEGIN CASE
1346                                                                 >  CASE ECD.RET.VALUE = "E"
1347                                                                 >  ECD.RET.VALUE = "END"
1348                                                                 >  RETURN

1349                                                                 >  CASE ECD.RET.VALUE = 1
1350                                                                 >  *             GOSUB 7550
1351                                                                 >  GOSUB 7710
1352                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1353                                                                 >  CASE ECD.RET.VALUE = 2
1354                                                                 >  *             GOSUB 7600
1355                                                                 >  GOSUB 7720

1356                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1357                                                                 >  CASE ECD.RET.VALUE = "F"
1358                                                                 >  DONE.FLAG = 1
1359                                                                 >  END CASE
1360                                                                 >  REPEAT
1361                                                                 >  RETURN
1362                                                                 >  7710 * GET START COST CENTER

1363                                                                 >  LOOP
1364                                                                 >  ERRMSG=''
1365                                                                 >  SCV.REC(3)<2>=START.CCNT
1366                                                                 >  GOSUB 7550
1367                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1368                                                                 >  IF END.CCNT # '' THEN
1369                                                                 >  IF ECD.RET.VALUE > END.CCNT THEN

1370                                                                 >  ERRMSG='Must not be greater than END Cost Center'; GOSUB 910
1371                                                                 >  SCV.REC(3)<2>=START.CCNT
1372                                                                 >  END
1373                                                                 >  END
1374                                                                 >  IF LEN(ECD.RET.VALUE) # 3 THEN
1375                                                                 >  ERRMSG='Minimum length = 3'; GOSUB 91000
1376                                                                 >  SCV.REC(3)<2>=START.CCNT

1377                                                                 >  END
1378                                                                 >  WHILE ERRMSG # '' DO
1379                                                                 >  REPEAT
1380                                                                 >  START.CCNT = ECD.RET.VALUE
1381                                                                 >  RETURN
1382                                                                 >  7720 * GET END COST CENTER
1383                                                                 >  LOOP

1384                                                                 >  ERRMSG=''
1385                                                                 >  SCV.REC(4)<2>=END.CCNT
1386                                                                 >  GOSUB 7600
1387                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1388                                                                 >  IF ECD.RET.VALUE < START.CCNT THEN
1389                                                                 >  ERRMSG='Must not be less than START Cost Center'; GOSUB 9100
1390                                                                 >  SCV.REC(4)<2>=END.CCNT

1391                                                                 >  END
1392                                                                 >  IF LEN(ECD.RET.VALUE) # 3 THEN
1393                                                                 >  ERRMSG='Minimum length = 3'; GOSUB 91000
1394                                                                 >  SCV.REC(3)<2>=END.CCNT
1395                                                                 >  END
1396                                                                 >  WHILE ERRMSG # '' DO
1397                                                                 >  REPEAT

1398                                                                 >  END.CCNT = ECD.RET.VALUE
1399                                                                 >  RETURN
1400                                                                 >  7800 * LIST OF DEPT.
1401                                                                 >  ECD.ACTION = 99
1402                                                                 >  CALL SCRN.EDIT
1403                                                                 >  ECD.SCRN.NO = 3 
1404                                                                 >  *     ECD.ACTION = 1

1405                                                                 >  *     CALL SCRN.EDIT
1406                                                                 >  ECD.ACTION = 2
1407                                                                 >  CALL SCRN.EDIT
1408                                                                 >  SCV.REC(9)<3>=SPACE(10):'DEPARTMENT LIST SELECTOR'
1409                                                                 >  ECD.ACTION = 3
1410                                                                 >  CALL SCRN.EDIT
1411                                                                 >  CURRENT.POS = 1

1412                                                                 >  ID.LIST = ""
1413                                                                 >  ID.COUNT = 0
1414                                                                 >  GOSUB 8000 
1415                                                                 >  *     LOOP WHILE ECD.RET.VALUE # "END" DO
1416                                                                 >  ECD.SUB.NUM=0
1417                                                                 >  LOOP
1418                                                                 >  GOSUB 8200 ;* ADD AN ID

1419                                                                 >  WHILE ECD.RET.VALUE # 'END' DO
1420                                                                 >  REPEAT
1421                                                                 >  LOOP.FLAG1=0
1422                                                                 >  LOOP WHILE LOOP.FLAG1 = 0 DO
1423                                                                 >  ECD.NUM = 6
1424                                                                 >  ECD.ACTION = 4
1425                                                                 >  CALL SCRN.EDIT

1426                                                                 >  BEGIN CASE
1427                                                                 >  CASE ECD.RET.VALUE = "A"
1428                                                                 >  GOSUB 8200
1429                                                                 >  CASE ECD.RET.VALUE = "C"
1430                                                                 >  GOSUB 8400
1431                                                                 >  CASE ECD.RET.VALUE = "D"
1432                                                                 >  GOSUB 8600

1433                                                                 >  CASE ECD.RET.VALUE = "SF"
1434                                                                 >  GOSUB 8800
1435                                                                 >  CASE ECD.RET.VALUE = "SR"
1436                                                                 >  GOSUB 8900
1437                                                                 >  CASE ECD.RET.VALUE = "F"
1438                                                                 >  LOOP.FLAG1 = 1 
1439                                                                 >  DEPT.LIST = ""

1440                                                                 >  ID.COUNT = DCOUNT(ID.LIST,VM)
1441                                                                 >  FOR ID.INDX = 1 TO ID.COUNT 
1442                                                                 >  DEPT.LIST = DEPT.LIST:' "':ID.LIST<1,ID.INDX>:'"'
1443                                                                 >  NEXT ID.INDX
1444                                                                 >  CASE ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'E'
1445                                                                 >  LOOP.FLAG1 = 1
1446                                                                 >  END CASE

1447                                                                 >  REPEAT
1448                                                                 >  RETURN
1449                                                                 >  7900 * LIST OF COST-CENTERS
1450                                                                 >  ECD.ACTION = 99
1451                                                                 >  CALL SCRN.EDIT
1452                                                                 >  ECD.SCRN.NO = 3 
1453                                                                 >  *     ECD.ACTION = 1

1454                                                                 >  *     CALL SCRN.EDIT
1455                                                                 >  ECD.ACTION = 2
1456                                                                 >  CALL SCRN.EDIT
1457                                                                 >  SCV.REC(9)<3>=SPACE(10):'COST CENTER LIST SELECTOR'
1458                                                                 >  ECD.ACTION = 3
1459                                                                 >  CALL SCRN.EDIT
1460                                                                 >  CURRENT.POS = 1

1461                                                                 >  ID.LIST = ""
1462                                                                 >  ID.COUNT = 0
1463                                                                 >  GOSUB 8000 
1464                                                                 >  LOOP WHILE ECD.RET.VALUE # "END" DO
1465                                                                 >  GOSUB 8200 ;* ADD AN ID
1466                                                                 >  REPEAT
1467                                                                 >  LOOP.FLAG1=0

1468                                                                 >  LOOP WHILE LOOP.FLAG1 = 0 DO
1469                                                                 >  ECD.NUM = 6
1470                                                                 >  ECD.ACTION = 4
1471                                                                 >  CALL SCRN.EDIT
1472                                                                 >  BEGIN CASE
1473                                                                 >  CASE ECD.RET.VALUE = "A"
1474                                                                 >  GOSUB 8200

1475                                                                 >  CASE ECD.RET.VALUE = "C"
1476                                                                 >  GOSUB 8400
1477                                                                 >  CASE ECD.RET.VALUE = "D"
1478                                                                 >  GOSUB 8600
1479                                                                 >  CASE ECD.RET.VALUE = "SF"
1480                                                                 >  GOSUB 8800
1481                                                                 >  CASE ECD.RET.VALUE = "SR"

1482                                                                 >  GOSUB 8900
1483                                                                 >  CASE ECD.RET.VALUE = "F"
1484                                                                 >  LOOP.FLAG1 = 1 
1485                                                                 >  CCNT.LIST = ""
1486                                                                 >  ID.COUNT = DCOUNT(ID.LIST,VM)
1487                                                                 >  FOR ID.INDX = 1 TO ID.COUNT 
1488                                                                 >  CCNT.LIST = CCNT.LIST:' "':ID.LIST<1,ID.INDX>:'"'

1489                                                                 >  NEXT ID.INDX
1490                                                                 >  CASE ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'E'
1491                                                                 >  LOOP.FLAG1 = 1
1492                                                                 >  END CASE
1493                                                                 >  REPEAT
1494                                                                 >  RETURN
1495                                                                 >  8000 * DISPLAY LIST OF ID's

1496                                                                 >  ECD.ACTION = 6
1497                                                                 >  CALL SCRN.EDIT
1498                                                                 >  SCV.REC(3)<3> = ""
1499                                                                 >  SCV.REC(4)<3> = ""
1500                                                                 >  SCV.REC(5)<3> = ""
1501                                                                 >  FOR DISPLAY.INDEX = 1 TO SCROLL.SIZE
1502                                                                 >  LIST.INDEX = CURRENT.POS + DISPLAY.INDEX -1

1503                                                                 >  IF ID.LIST<1,LIST.INDEX> # "" THEN
1504                                                                 >  SCV.REC(4)<3,DISPLAY.INDEX> = LIST.INDEX
1505                                                                 >  SCV.REC(5)<3,DISPLAY.INDEX> = ID.LIST<1,LIST.INDEX>
1506                                                                 >  END ELSE
1507                                                                 >  *         SCV.REC(4)<3,DISPLAY.INDEX> = ""
1508                                                                 >  *         SCV.REC(5)<3,DISPLAY.INDEX> = ""
1509                                                                 >  END

1510                                                                 >  NEXT DISPLAY.INDEX
1511                                                                 >  ECD.ACTION = 3
1512                                                                 >  CALL SCRN.EDIT
1513                                                                 >  RETURN
1514                                                                 >  8200 * ADD AN ID TO THE END OF THE LIST
1515                                                                 >  LOOP.FLAG3 = 0
1516                                                                 >  LOOP

1517                                                                 >  ECD.RET.VALUE=''; ECD.DEFAULT=''
1518                                                                 >  ECD.NUM = 3
1519                                                                 >  ECD.ACTION = 4
1520                                                                 >  CALL SCRN.EDIT
1521                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1522                                                                 >  BEGIN CASE
1523                                                                 >  CASE SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2 

1524                                                                 >  ERRMSG='Must enter 2 digits'
1525                                                                 >  GOSUB 91000
1526                                                                 >  CASE SOURCE.FLAG = 'C' AND LEN(ECD.RET.VALUE) # 3
1527                                                                 >  ERRMSG='Must enter 3 digits'
1528                                                                 >  GOSUB 91000
1529                                                                 >  CASE 1
1530                                                                 >  LOOP.FLAG3 = 1

1531                                                                 >  END CASE
1532                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1533                                                                 >  REPEAT
1534                                                                 >  ID.COUNT = ID.COUNT + 1
1535                                                                 >  IF ID.LIST = "" THEN
1536                                                                 >  ID.LIST = ECD.RET.VALUE
1537                                                                 >  END ELSE

1538                                                                 >  ID.LIST = ID.LIST:VM:ECD.RET.VALUE
1539                                                                 >  END
1540                                                                 >  IF ID.COUNT > (CURRENT.POS + SCROLL.SIZE - 1) THEN  
1541                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE
1542                                                                 >  END
1543                                                                 >  GOSUB 8000
1544                                                                 >  RETURN

1545                                                                 >  8400 * CHANGE AN ID
1546                                                                 >  ECD.NUM = 8
1547                                                                 >  ECD.ACTION = 4
1548                                                                 >  CALL SCRN.EDIT
1549                                                                 >  BEGIN CASE
1550                                                                 >  CASE ECD.RET.VALUE = "" 
1551                                                                 >  RETURN

1552                                                                 >  CASE ECD.RET.VALUE = "SF"
1553                                                                 >  GOSUB 8800
1554                                                                 >  CASE ECD.RET.VALUE = "SR"
1555                                                                 >  GOSUB 8900
1556                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1
1557                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1558                                                                 >  CHANGE.POS = ECD.RET.VALUE

1559                                                                 >  LOOP.FLAG3 = 0
1560                                                                 >  LOOP
1561                                                                 >  ECD.NUM = 3
1562                                                                 >  ECD.ACTION = 4
1563                                                                 >  CALL SCRN.EDIT
1564                                                                 >  IF ECD.RET.VALUE = "" THEN RETURN
1565                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN

1566                                                                 >  BEGIN CASE
1567                                                                 >  CASE SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2
1568                                                                 >  ERRMSG='Must enter 2 digits'
1569                                                                 >  GOSUB 91000
1570                                                                 >  CASE SOURCE.FLAG = 'C' AND LEN(ECD.RET.VALUE) # 3
1571                                                                 >  ERRMSG='Must enter 3 digits'
1572                                                                 >  GOSUB 91000

1573                                                                 >  CASE 1
1574                                                                 >  LOOP.FLAG3 = 1
1575                                                                 >  END CASE
1576                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1577                                                                 >  REPEAT
1578                                                                 >  ID.LIST<1,CHANGE.POS> = ECD.RET.VALUE
1579                                                                 >  GOSUB 8000

1580                                                                 >  END ELSE GOSUB 8400
1581                                                                 >  END CASE
1582                                                                 >  RETURN
1583                                                                 >  8600 * DELETE AN ID
1584                                                                 >  ECD.NUM = 7
1585                                                                 >  ECD.ACTION = 4
1586                                                                 >  CALL SCRN.EDIT

1587                                                                 >  BEGIN CASE
1588                                                                 >  CASE ECD.RET.VALUE = "" 
1589                                                                 >  RETURN
1590                                                                 >  CASE ECD.RET.VALUE = "SF"
1591                                                                 >  GOSUB 8800
1592                                                                 >  CASE ECD.RET.VALUE = "SR"
1593                                                                 >  GOSUB 8900

1594                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1
1595                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1596                                                                 >  DEL ID.LIST<1,ECD.RET.VALUE>
1597                                                                 >  GOSUB 8000
1598                                                                 >  END ELSE GOSUB 8600
1599                                                                 >  CASE 1
1600                                                                 >  GOSUB 8600

1601                                                                 >  END CASE
1602                                                                 >  RETURN
1603                                                                 >  8800 * SCROLL FORWARD
1604                                                                 >  IF CURRENT.POS + SCROLL.SIZE > ID.COUNT THEN
1605                                                                 >  CURRENT.POS = 1
1606                                                                 >  END ELSE
1607                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE

1608                                                                 >  END
1609                                                                 >  GOSUB 8000 ;* REFRESH DATA
1610                                                                 >  RETURN
1611                                                                 >  8900 * SCROLL REVERSE
1612                                                                 >  IF CURRENT.POS - SCROLL.SIZE < 1 THEN
1613                                                                 >  CURRENT.POS = 1
1614                                                                 >  END ELSE

1615                                                                 >  CURRENT.POS = CURRENT.POS - SCROLL.SIZE
1616                                                                 >  END
1617                                                                 >  GOSUB 8000 ;* REFRESH DATA
1618                                                                 >  RETURN
1619                                                                 >  8950 * BUILD SELECT STATEMENT
1620                                                                 >  SLINE = 'SSELECT JOB.TIME BY JLB.DIV BY JLB.DEPT BY MCCTR BY
1621                                                                 >  BEGIN CASE

1622                                                                 >  CASE DEPT.NUM = "R"
1623                                                                 >  SLINE = SLINE:' AND WITH DEPT >= "':START.DEPT:'"'
1624                                                                 >  SLINE = SLINE:' AND WITH DEPT <= "':END.DEPT:'"'
1625                                                                 >  CASE DEPT.NUM = "S"
1626                                                                 >  SLINE = SLINE:' AND WITH DEPT =':DEPT.LIST
1627                                                                 >  CASE DEPT.NUM = "ALL"
1628                                                                 >  CASE 1

1629                                                                 >  SLINE = SLINE:' AND WITH DEPT = "':DEPT.NUM:'"'
1630                                                                 >  END CASE
1631                                                                 >  BEGIN CASE
1632                                                                 >  CASE CCNT.NUM = "R"
1633                                                                 >  SLINE = SLINE:' AND WITH MCCTR >= "':START.CCNT:'"'
1634                                                                 >  SLINE = SLINE:' AND WITH MCCTR <= "':END.CCNT:'"'
1635                                                                 >  CASE CCNT.NUM = "S"

1636                                                                 >  SLINE = SLINE:' AND WITH MCCTR =':CCNT.LIST
1637                                                                 >  CASE CCNT.NUM = "ALL"
1638                                                                 >  CASE 1
1639                                                                 >  SLINE = SLINE:' AND WITH MCCTR = "':CCNT.NUM:'"'
1640                                                                 >  END CASE
1641                                                                 >  SLINE = SLINE:' AND WITH JLB.DATE GE "':OCONV(START.DATE,"D2
1642                                                                 >  SLINE = SLINE:' AND WITH JLB.DATE LE "':OCONV(END.DATE,"D2/"

1643                                                                 >  SLINE = SLINE:' AND WITH PERIOD GE "':START.PER:'"'
1644                                                                 >  SLINE = SLINE:' AND WITH PERIOD LE "':END.PER:'"'
1645                                                                 >  IF DIV.CODE = "ALL" THEN
1646                                                                 >  END ELSE
1647                                                                 >  SLINE = SLINE:' AND WITH JLB.DIV = "':DIV.CODE:'"'
1648                                                                 >  END
1649                                                                 >  UDTEXECUTE SLINE CAPTURING RESPONSEMSGS

1650                                                                 >  ECD.ACTION = 99
1651                                                                 >  CALL SCRN.EDIT
1652                                                                 >  RETURN
1653                                                                 >  *T25496 ^
1654 *                                                                  *
1655 ***** CALL SYSCOM(MAT SYSCOM.REC)                                  ***** CALL SYSCOM(MAT SYSCOM.REC)
1656 *                                                                  *


JCSBP/CHANGE.JOB.CUST                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CHANGE.JOB.CUST
Printed for thompson at 06/28/2006 04:41:46PM

0010 * DESCRIPTION - CHANGE CUSTOMER ON JOB FILE AND ASSOCIATED DAT     * DESCRIPTION - CHANGE CUSTOMER ON JOB FILE AND ASSOCIATED D
0011 *               JOBS NOT INVOICED                                  *               JOBS NOT INVOICED
0012 *                                                                  *
0013 * CAF  21174  GAT USER REPORTED CHANGING CUSTOMER WITHOUT SYST     * CAF  21174  GAT USER REPORTED CHANGING CUSTOMER WITHOUT SY
0014 *             OTHER JOBS IN FAMILY ON STATUS                       *             OTHER JOBS IN FAMILY ON STATUS
0015 * T23278 markt 10/13/1998 * Add division security check         <  
0016 * EP  23670   Mod. to allow change of customer only on master      * EP  23670   Mod. to allow change of customer only on maste
0017 *              Sub jobs are updated automaticaly.                  *              Sub jobs are updated automaticaly.
0018 *T26126 adelgado 03/07/2002 * Implement the LOCKED clause for   |  *T24091 rick 07/05/1999 * Modify pgm to look at job and if a
0019                                                                 >  *                         all of the sub-jobs need to have t

0020                                                                 >  *                         changed.
0021 **********************************************                     **********************************************
0022 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0023 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0024 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0025 *COPY>PMC.CPYLIB>COMP.OPS                                          *COPY>PMC.CPYLIB>COMP.OPS
0026 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER

0063 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0064 MAT JOB.MAST.REC = ""                                              MAT JOB.MAST.REC = ""
0065 MAT JOB.SUB.REC = ""                                               MAT JOB.SUB.REC = ""
0066 ECD.ACTION = 6; CALL SCRN.EDIT                                     ECD.ACTION = 6; CALL SCRN.EDIT
0067 ECD.NUM=1                                                          ECD.NUM=1
0068 ECD.VALDAT.CODE='5';ECD.VALDAT.FILE=JOB;ECD.PREFIX.ID=CONO  ;*  |  ECD.VALDAT.CODE='1';ECD.VALDAT.FILE=JOB;ECD.PREFIX.ID=CONO
0069 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0070 BEGIN CASE                                                         BEGIN CASE
0071 CASE ECD.RET.VALUE = "END"                                         CASE ECD.RET.VALUE = "END"
0072 GOTO 99990                                                         GOTO 99990

0073 CASE ECD.VALDAT.ITEM  # ''                                         CASE ECD.VALDAT.ITEM  # ''
0074 MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE MAT JOB.REC     MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE MAT JOB.R
0075 *T23278 v                                                       <  
0076 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0077 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0078 IF ERRMSG # '' THEN                                             <  
0079 GOSUB 91000; GOTO 100                                           <  
0080 END                                                             <  
0081 *T23278 ^                                                       <  

0198 *                                                                  *
0199 JOB.ARR = INSERT(JOB.SUBS,1,1,0,JOB.MASTER)                        JOB.ARR = INSERT(JOB.SUBS,1,1,0,JOB.MASTER)
0200 NBR.LPS = DCOUNT(JOB.ARR,VM)                                       NBR.LPS = DCOUNT(JOB.ARR,VM)
0201 FOR XX = 1 TO NBR.LPS                                              FOR XX = 1 TO NBR.LPS
0202 MATREADU JOB.REC FROM JOB, CONO:JOB.ARR<1,XX> ELSE MAT JOB.REC     MATREADU JOB.REC FROM JOB, CONO:JOB.ARR<1,XX> ELSE MAT JOB.R
0203 *C34042 v Need to get original cust rec for sub-job             |  *C34042 v Customer record in memory after 1st loop XX will b
0204 MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE MAT CUST.RE  |  *         Need to get Old Cust back in memory.
0205                                                                 >  MATREADU CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE MAT CUST
0206 *C34042 ^                                                          *C34042 ^
0207 *LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = 0            *LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = 0

0215 END ELSE                                                           END ELSE
0216 QUOTED.AMT = 0                                                     QUOTED.AMT = 0
0217 RELEASE CUSTOMER, CONO : JOB.CUST                                  RELEASE CUSTOMER, CONO : JOB.CUST
0218 END                                                                END
0219 FND = 1                                                            FND = 1
0220 MATREAD CUST.REC FROM CUSTOMER, CONO : NEW.CUST ELSE FND = 0    |  MATREADU CUST.REC FROM CUSTOMER, CONO : NEW.CUST ELSE FND =
 
0221 IF FND THEN                                                        IF FND THEN
0222 **23670 v                                                          **23670 v
0223 *LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = -1           *LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = -1
0224 LOCATE JOB.ARR<1,XX> IN CUST.JOB<1>,1 SETTING FND ELSE FND = -     LOCATE JOB.ARR<1,XX> IN CUST.JOB<1>,1 SETTING FND ELSE FND =

0273 MATREAD JOB.MAST.REC FROM JOB,CONO:JOB.MASTER ELSE                 MATREAD JOB.MAST.REC FROM JOB,CONO:JOB.MASTER ELSE
0274 ERRMSG = "Master job does not exist for this job"                  ERRMSG = "Master job does not exist for this job"
0275 GOSUB 91000                                                        GOSUB 91000
0276 GOTO 100                                                           GOTO 100
0277 END                                                                END
0278                                                                 >  *T24091 v
0279                                                                 >  *    this is a controlled field.  Since we are in a Sub Job 
0280                                                                 >  *    this subroutine then logic should prevail that the cust
0281                                                                 >  *    not changable on the sub job 
0282                                                                 >  *

0283                                                                 >  * C34042 Above comment is incorrect. With T23670 only Master
0284                                                                 >  *        reach this point. LMR
0285                                                                 >  *ERRMSG="Unable to change the Customer on Sub-Jobs"
0286                                                                 >  *GOSUB 91000
0287                                                                 >  *GOTO 100
0288                                                                 >  *
0289                                                                 >  *T24091 ^

0290 IF JOB.MAST.REC(40) # "" THEN                                      IF JOB.MAST.REC(40) # "" THEN
0291 ERRMSG = "Master job has been invoiced you cannot change custo  |  ERRMSG = "Master job has been invoiced, you cannot change cu
0292 GOSUB 91000                                                        GOSUB 91000
0293 GOTO 100                                                           GOTO 100
0294 END ELSE                                                        <  
0295 RETURN                                                          <  
0296 END                                                                END
0297 RETURN                                                             RETURN

0305 ERRMSG= "Cannot find sub job in job file"                          ERRMSG= "Cannot find sub job in job file"
0306 GOSUB 91000                                                        GOSUB 91000
0307 GOTO 100                                                           GOTO 100
0308 END                                                                END
0309 IF JOB.SUB.REC(40) # "" THEN                                       IF JOB.SUB.REC(40) # "" THEN
0310 ERRMSG = "Sub jobs have been invoiced. Change customer at your  |  ERRMSG = "Sub job ":SUB.JOB.NO[4,99]:" has been invoiced. Ch
0311 GOSUB 91000                                                        GOSUB 91000
0312 END ELSE                                                        |  * END ELSE  ;* C34042 ????
0313 RETURN                                                          |  *   RETURN
0314 END                                                                END

0372 *                                                                  *
0373 99990 *                                                            99990 *
0374 ECD.ACTION = 99 ; CALL SCRN.EDIT                                   ECD.ACTION = 99 ; CALL SCRN.EDIT
0375 99999 PRINT @(-1)                                                  99999 PRINT @(-1)
0376 END                                                                END
0377                                                                 <  
0378 


JCSBP/DAILY.TIME.MATL.PRT                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/DAILY.TIME.MATL.PRT
Printed for thompson at 06/28/2006 04:41:46PM

0011 * This report is used for reporting DAILY.TIME.MATL records.       * This report is used for reporting DAILY.TIME.MATL records.
0012 * MOD TASK 19393  CLS 7/95  ADD DIVISION TO TITLE                  * MOD TASK 19393  CLS 7/95  ADD DIVISION TO TITLE
0013 *                                                                  *
0014 *T21847 lanny 04/25/1997 * Stacked error status print.             *T21847 lanny 04/25/1997 * Stacked error status print.
0015 *T22378 stefanie 12/19/1997 * Add Additional Prompts & Respons     *T22378 stefanie 12/19/1997 * Add Additional Prompts & Respo
0016 *T26493 cmykleb 03/28/2002 * Change pgm to get report # from p  |  *T24102 markt 10/12/1999 * Expand the shift code to 2 digits
0017                                                                 >  *T25228 alex 06/27/2000 * Mods to the program to not do a pa
0018                                                                 >  *                         shift.
0019                                                                 >  *T25146 aron 06/29/2000 * Add attendance code info.
0020                                                                 >  *C41810 thompson 04/17/2003 * EXPAND GRAND TOTAL FIELD

0029 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0030 *COPY>PRS.CPYLIB>WORK.SHIFT                                        *COPY>PRS.CPYLIB>WORK.SHIFT
0031 ***T22378 v Added SF.PROMPT cpylib below                           ***T22378 v Added SF.PROMPT cpylib below
0032 *COPY>JCS.CPYLIB>SF.PROMPT                                         *COPY>JCS.CPYLIB>SF.PROMPT
0033 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0034                                                                 >  *T25146 v
0035                                                                 >  *COPY>PRS.CPYLIB>ATTEND.CODE
0036                                                                 >  *T25146 ^
0037 *----   INITIALIZATION                                             *----   INITIALIZATION
0038 LINE.COUNT = 99                                                    LINE.COUNT = 99

0074 OPEN '','SF.PROMPT' TO SF.PROMPT ELSE                              OPEN '','SF.PROMPT' TO SF.PROMPT ELSE
0075 ERRMSG = 'SF.PROMPT FILE IS MISSING'                               ERRMSG = 'SF.PROMPT FILE IS MISSING'
0076 GOTO 93000                                                         GOTO 93000
0077 END                                                                END
0078 *T22378 ^                                                          *T22378 ^
0079                                                                 >  *T25146 v
0080                                                                 >  OPEN "","ATTEND.CODE" TO ATTEND.CODE ELSE
0081                                                                 >  ERRMSG='ATTEND.CODE FILE IS MISSING'
0082                                                                 >  GOTO 93000
0083                                                                 >  END

0084                                                                 >  *T25146 ^
0085 *---- READ COMPANY NAME                                            *---- READ COMPANY NAME 
0086 PROCREAD ID ELSE                                                   PROCREAD ID ELSE
0087 ERRMSG = ' CANNOT PERFORM PROCREAD'                                ERRMSG = ' CANNOT PERFORM PROCREAD'
0088 GOTO 93000                                                         GOTO 93000
0089 END                                                                END
0090 CONO = ID<1>                                                       CONO = ID<1>

0091 CONO.NAME = ID<2>                                                  CONO.NAME = ID<2>
0092 TYPE.RPT = ID<8>                                                   TYPE.RPT = ID<8>
0093 ST.DATE = ID<3>                                                    ST.DATE = ID<3>
0094 ED.DATE = ID<4>                                                    ED.DATE = ID<4>
0095 PROC.DIV = ID<5>                                                   PROC.DIV = ID<5>
0096 PRINT.FLAG = ID<8> ; * T26493                                   <  
0097 MATREAD COMP.REC FROM COMPANY,CONO ELSE                            MATREAD COMP.REC FROM COMPANY,CONO ELSE
0098 ERRMSG = "CANNOT READ COMPANY RECORD FROM PROGRAM - DAILY.TIME     ERRMSG = "CANNOT READ COMPANY RECORD FROM PROGRAM - DAILY.TI
0099 GOTO 93000                                                         GOTO 93000
0100 END                                                                END

0103 OPEN '','WORK.SHIFT' TO WORK.SHIFT ELSE                            OPEN '','WORK.SHIFT' TO WORK.SHIFT ELSE
0104 ERRMSG = 'CANNOT OPEN WORK.SHIFT FILE FROM PROGRAM - DAILY.TIM     ERRMSG = 'CANNOT OPEN WORK.SHIFT FILE FROM PROGRAM - DAILY.T
0105 GOTO 93000                                                         GOTO 93000
0106 END                                                                END
0107 END                                                                END
0108 *T26493 v                                                       |  IF TYPE.RPT = "(REJECT)" THEN
0109 *  IF TYPE.RPT = "(REJECT)" THEN                                |  REPORT.NAME = "TIME.&.MATERIAL.EDIT.LISTING.(REJECT)"
0110 *     REPORT.NAME = "TIME.&.MATERIAL.EDIT.LISTING.(REJECT)"     |  END ELSE
0111 *  END ELSE                                                     |  REPORT.NAME = "TIME.&.MATERIAL.EDIT.LISTING"
0112 *     REPORT.NAME = "TIME.&.MATERIAL.EDIT.LISTING"              |  END

0113 *  END                                                          |  REPORT.NUMBER = "XXXX"
0114 *  REPORT.NUMBER = "XXXX"                                       <  
0115 CONO.NAME = ""                                                  <  
0116 REPORT.NAME = ""                                                <  
0117 REPORT.NUMBER = ID<2>                                           <  
0118 *T26493 ^                                                       <  
0119 REPORT.DATE = DATE()                                               REPORT.DATE = DATE()

0190 GOSUB 27000                                                        GOSUB 27000
0191 LINE.COUNT = 99                                                    LINE.COUNT = 99
0192 CASE PREV.SHIFT # SHIFT                                            CASE PREV.SHIFT # SHIFT
0193 GOSUB 25000                                                        GOSUB 25000
0194 GOSUB 26000                                                        GOSUB 26000
0195 LINE.COUNT = 99                                                 |  * T25228 v
0196                                                                 >  * LINE.COUNT = 99
0197                                                                 >  * T25228 ^
0198 CASE PREV.EMP # EMP                                                CASE PREV.EMP # EMP
0199 GOSUB 25000                                                        GOSUB 25000

0242 FOR TT = 1 TO T.CNT                                                FOR TT = 1 TO T.CNT
0243 GOSUB 10000                                                        GOSUB 10000
0244 GOSUB 20000                                                        GOSUB 20000
0245 NEXT TT                                                            NEXT TT
0246 IF DTM.PRT.DATE = "" THEN DTM.PRT.DATE = REPORT.DATE               IF DTM.PRT.DATE = "" THEN DTM.PRT.DATE = REPORT.DATE
0247 IF PRINT.FLAG = "V" THEN RETURN ; * T26493                      <  
0248 MATWRITE DTM.REC ON DAILY.TIME.MATL, KEY                           MATWRITE DTM.REC ON DAILY.TIME.MATL, KEY
0249 RETURN                                                             RETURN
0250 *---- READ FILES & INV.CNV                                         *---- READ FILES & INV.CNV
0251 10000 MATREAD CUST.REC FROM CUSTOMER,CONO:DTM.CUST<1,TT> ELSE      10000 MATREAD CUST.REC FROM CUSTOMER,CONO:DTM.CUST<1,TT> ELS

0318 CUST.SC = CUST.NAME "L#30"                                         CUST.SC = CUST.NAME "L#30"
0319 END                                                                END
0320 *     H.LINE = SPACE(18):CUST.SC "L#36":INV.FULL.DESC "L#35":S     *     H.LINE = SPACE(18):CUST.SC "L#36":INV.FULL.DESC "L#35"
0321 H.LINE = SPACE(18):CUST.SC "L#36":INV.FULL.DESC "L#35":SPACE(1     H.LINE = SPACE(18):CUST.SC "L#36":INV.FULL.DESC "L#35":SPACE
0322 PRINT H.LINE                                                       PRINT H.LINE
0323                                                                 >  *T25146 v
0324                                                                 >  IF DTM.TYPE<1,TT> = "N" THEN
0325                                                                 >  MATREAD ATT.REC FROM ATTEND.CODE,CONO:DTM.SPEC.CODE<1,TT> EL
0326                                                                 >  PRINT SPACE(18):"ATTENDANCE CODE | ":DTM.SPEC.CODE<1,TT>:" "
0327                                                                 >  END

0328                                                                 >  *T25146 ^
0329 FOR XD = 3 TO DCOUNT(NEW.DESC,VM)                                  FOR XD = 3 TO DCOUNT(NEW.DESC,VM)
0330 PRINT SPACE(116):NEW.DESC<1,XD>                                    PRINT SPACE(116):NEW.DESC<1,XD>
0331 GOSUB 70000                                                        GOSUB 70000
0332 NEXT XD                                                            NEXT XD
0333 *T21847 ^                                                          *T21847 ^
0334 *T22378 v                                                          *T22378 v

0403 RETURN                                                             RETURN
0404 *---- PRINT TOTAL FOR SHIFT                                        *---- PRINT TOTAL FOR SHIFT
0405 26000 IF LINE.COUNT + 2 >= 54 THEN GOSUB 80000                     26000 IF LINE.COUNT + 2 >= 54 THEN GOSUB 80000 
0406 LINE.COUNT = LINE.COUNT + 2                                        LINE.COUNT = LINE.COUNT + 2
0407 PRINT DH1.LINE                                                     PRINT DH1.LINE
0408 TTL.LINE = "TOTALS FOR SHIFT ":PREV.SHIFT "L#1":" :   "         |  * T24102 v
0409                                                                 >  *      TTL.LINE = "TOTALS FOR SHIFT ":PREV.SHIFT "L#1":" :  
0410                                                                 >  TTL.LINE = "TOTALS FOR SHIFT ":PREV.SHIFT "L#2":" :   "
0411                                                                 >  *T24102 ^
0412 T.LINE = TTL.LINE"R#72"                                            T.LINE = TTL.LINE"R#72"

0428 27000 IF LINE.COUNT + 2 >= 54 THEN GOSUB 80000                     27000 IF LINE.COUNT + 2 >= 54 THEN GOSUB 80000 
0429 LINE.COUNT = LINE.COUNT + 2                                        LINE.COUNT = LINE.COUNT + 2
0430 PRINT DH1.LINE                                                     PRINT DH1.LINE
0431 TTL.LINE = "TOTALS FOR TRANS DATE ":OCONV(PREV.TDATE,"D2/")"L#     TTL.LINE = "TOTALS FOR TRANS DATE ":OCONV(PREV.TDATE,"D2/")"
0432 T.LINE = TTL.LINE"R#72"                                            T.LINE = TTL.LINE"R#72"
0433 T.LINE = T.LINE:"JCS UNITS ":OCONV(TOT.TD<1,5>,"MD2")"R#6":SP1  |  *      T.LINE = T.LINE:"JCS UNITS ":OCONV(TOT.TD<1,5>,"MD2")
0434 T.LINE = T.LINE:OCONV(TOT.TD<1,1>,"MD2")"R#5":SP1               |  T.LINE = T.LINE:"JCS UNITS ":OCONV(TOT.TD<1,5>,"MD2")"R#6"; 
0435                                                                 >  T.LINE = T.LINE:OCONV(TOT.TD<1,1>,"MD2")"R#6":SP1; *C41810
0436                                                                 >  *      T.LINE = T.LINE:OCONV(TOT.TD<1,1>,"MD2")"R#5":SP1
0437 T.LINE = T.LINE:OCONV(TOT.TD<1,2>,"MD2")"R#5":SP1                  T.LINE = T.LINE:OCONV(TOT.TD<1,2>,"MD2")"R#5":SP1

0438 T.LINE = T.LINE:OCONV(TOT.TD<1,3>,"MD2")"R#5":SP1               |  *      T.LINE = T.LINE:OCONV(TOT.TD<1,3>,"MD2")"R#5":SP1
0439 T.LINE = T.LINE:OCONV(TOT.TD<1,4>,"MD2")"R#5"                   |  T.LINE = T.LINE:OCONV(TOT.TD<1,3>,"MD2")"R#5"; *C41810
0440                                                                 >  T.LINE = T.LINE:OCONV(TOT.TD<1,4>,"MD2")"R#6"; *C41810
0441 PRINT T.LINE                                                       PRINT T.LINE
0442 PRINT                                                              PRINT
0443 LINE.COUNT = LINE.COUNT + 1                                        LINE.COUNT = LINE.COUNT + 1
0444 PREV.TDATE = TDATE                                                 PREV.TDATE = TDATE


JCSBP/EDIT.TIME.MATL                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EDIT.TIME.MATL
Printed for thompson at 06/28/2006 04:41:46PM

0010 * This program edits the time and material entries and flags e     * This program edits the time and material entries and flags
0011 * accordingly by placing the appropriate message in DTM.STATUS     * accordingly by placing the appropriate message in DTM.STAT
0012 * MODIFIED - CK 7.11.89. CSF 9277 CHECK FOR VALID PROD LINE        * MODIFIED - CK 7.11.89. CSF 9277 CHECK FOR VALID PROD LINE
0013 * - CK 8.22.89. MERGE CHANGE ABOVE WITH NA MOD FOR ROLL SKID       * - CK 8.22.89. MERGE CHANGE ABOVE WITH NA MOD FOR ROLL SKID
0014 * - MODIFICATIONS FOR EPS PAYROLL - BY SFC - FEB 1990              * - MODIFICATIONS FOR EPS PAYROLL - BY SFC - FEB 1990
0015 * - ADDITIONAL MOD FOR EPS - BY SFC - APR 1990 MORE EDITING FO  |  * - ADDITIONAL MODIFICATION FOR EPS - BY SFC - APR 1990 MORE
0016 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR SERIAL NOT RE  |  *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID N
0017 *T21847 lanny 04/24/1997 * Make DTM.STATUS accumulate errors f     *T21847 lanny 04/24/1997 * Make DTM.STATUS accumulate errors
0018 *T22837 rik 05/07/1998 * ASSIGN INVENTORY, CATEGORY & WAREHOUS  |  *T23466 lanny 04/20/99 * Reject if no authorization initials
0019 *                        TO NULL IF NOT FOUND.                  |  *T24092 rick 07/14/1999 * Modify all transactions to match c

0020 *T23174 markt 08/12/1998 * Initialize DIV, DEPT and CCTR recs   |  *                         Job.Type in the DTM.JOB.TYPE field
0021 *                          not found.                           |  *T25044 edvard 04/26/2000 * IF START EQUALS TO END TIME DON'
0022                                                                 >  *                           ERROR.
0023 *T25837 lanny 05/15/2001 * JOBNO needs test for NULL.              *T25837 lanny 05/15/2001 * JOBNO needs test for NULL.
0024 *T26093 lanny 08/16/2001 * SIS_LOG File should be opened only   <  
0025 *                          has SIS.                             <  
0026 *T26207 lanny 10/03/2001 * Do not allow more than 24 hours in      *T26207 lanny 10/03/2001 * Do not allow more than 24 hours i

0027 *T26334 epitka 12/17/2001 * REV12                               <  
0028 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  <  
0029 *                             Whse.                             <  
0030 **************************************************************     ************************************************************
0031 *                                                                  *
0032 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0033 *                                                                  *

0034 *COPY>JCS.CPYLIB>PNP.LOG                                           *COPY>JCS.CPYLIB>PNP.LOG
0035 *SFIS^                                                          <  
0036 *COPY>SIS.CPYLIB>SIS_LOG                                        <  
0037 *SFISv                                                          <  
0038 *COPY>JCS.CPYLIB>DAILY.TIME.MATL                                   *COPY>JCS.CPYLIB>DAILY.TIME.MATL
0039 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0040 *COPY>JCS.CPYLIB>OPERATION                                         *COPY>JCS.CPYLIB>OPERATION
0041 *COPY>JCS.CPYLIB>FACTOR                                            *COPY>JCS.CPYLIB>FACTOR

0054 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0055 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0056 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0057 *COPY>PRS.CPYLIB>WORK.SHIFT                                        *COPY>PRS.CPYLIB>WORK.SHIFT
0058 *COPY>ICS.CPYLIB>WAREHOUSE                                         *COPY>ICS.CPYLIB>WAREHOUSE
0059 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0060 *                                                                  *
0061 *---- DEFINE DIMENSIONED VARIABLES                                 *---- DEFINE DIMENSIONED VARIABLES
0062 *                                                                  *
0063 DIM SAVE.REC(10)                                                   DIM SAVE.REC(10)

0097 OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT     OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.ST
0098 OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILA     OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOI
0099 OPEN '','PNP.LOG' TO PNP.LOG ELSE ERRMSG='PNP.LOG FILE IS MISS     OPEN '','PNP.LOG' TO PNP.LOG ELSE ERRMSG='PNP.LOG FILE IS MI
0100 OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='SF.PROMPT FILE I     OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='SF.PROMPT FILE
0101 OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS M     OPEN "WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS
0102 OPEN "INV_SERIAL" TO INV_SERIAL ELSE ERRMSG="INV_SERIAL FILE I  |  OPEN "ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE ERRMSG="ROLL.SK
0103 *                                                                  *
0104 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING          
0105 *                                                                  *
0106 READNEXT DTM.ID ELSE GOTO 99999                                    READNEXT DTM.ID ELSE GOTO 99999

0105 *                                                                  *
0106 READNEXT DTM.ID ELSE GOTO 99999                                    READNEXT DTM.ID ELSE GOTO 99999
0107 CONO=DTM.ID[1,3]                                                   CONO=DTM.ID[1,3]
0108 TODAY=DATE()                                                       TODAY=DATE()
0109 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999                MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
0110                                                                 >  * T21523
0111                                                                 >  READ BCI FROM CONTROL, CONO:"RL.SK.CONTROL" ELSE BCI = ""
0112                                                                 >  * T21523
0113 *                                                                  *
0114 IF CO.PRS = "E" THEN                                               IF CO.PRS = "E" THEN

0115 OPEN '','WORK.SHIFT' TO WORK.SHIFT ELSE ERRMSG='WORK.SHIFT.SCH     OPEN '','WORK.SHIFT' TO WORK.SHIFT ELSE ERRMSG='WORK.SHIFT.S
0116 END                                                                END
0117 SISLIVE = 1                                                     <  
0118 READ DUMMY FROM CONTROL, CONO:"SISLIVE" ELSE SISLIVE = 0        <  
0119 DUMMY = ""                                                      <  
0120 IF SISLIVE THEN                                                 <  
0121 OPEN '','SIS_LOG' TO SIS_LOG ELSE ERRMSG='SIS_LOG FILE IS MISS  <  
0122 END                                                             <  
0123 *                                                                  *

0151 SC = 1                                                             SC = 1
0152 MATREAD EMP.REC FROM EMPLOYEE, CONO : DTM.EMP ELSE                 MATREAD EMP.REC FROM EMPLOYEE, CONO : DTM.EMP ELSE
0153 DTM.ERR = "INVALID EMPLOYEE"                                       DTM.ERR = "INVALID EMPLOYEE"
0154 GOSUB 3000                                                         GOSUB 3000
0155 END                                                                END
0156 IF SISLIVE THEN                                                 <  
0157 MATREAD SISLOG_REC FROM SIS_LOG, CONO:DTM.EMP THEN              <  
0158 IF SISLOG_OFF.FLAG = "" AND DTM.DATE = SISLOG_DATE AND SHIFT =  <  
0159 DTM.ERR="LOGGED ON (SFIS)"                                      <  
0160 GOSUB 3000                                                      <  

0161 END                                                             <  
0162 END ELSE                                                        <  
0163 MAT SISLOG_REC = ""                                             <  
0164 END                                                             <  
0165 END ELSE                                                        <  
0166 LOGGED.ON = 1                                                      LOGGED.ON = 1
0167 MATREAD PNPL.REC FROM PNP.LOG, CONO:DTM.EMP ELSE LOGGED.ON = 0     MATREAD PNPL.REC FROM PNP.LOG, CONO:DTM.EMP ELSE LOGGED.ON =

0169 IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND SH     IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND 
0170 DTM.ERR = "LOGGED ON"                                              DTM.ERR = "LOGGED ON"
0171 GOSUB 3000                                                         GOSUB 3000
0172 END                                                                END
0173 END                                                                END
0174 END                                                             |  * DTM.STATUS=""
0175 MAT SAVE.REC=""                                                    MAT SAVE.REC=""
0176 *---- CALCULATE CONCURRENT TIME                                    *---- CALCULATE CONCURRENT TIME
0177 TTYPE=DTM.TYPE                                                     TTYPE=DTM.TYPE
0178 STIME=DTM.TIME.ST                                                  STIME=DTM.TIME.ST

0181 ESTAT=""                                                           ESTAT=""
0182 CALL CALC.CONC.TIME (TTYPE, STIME, ETIME, CTIME, ESTAT)            CALL CALC.CONC.TIME (TTYPE, STIME, ETIME, CTIME, ESTAT)
0183 DTM.CONC.TIME=CTIME                                                DTM.CONC.TIME=CTIME
0184 TYPE.CNT=COUNT(DTM.TYPE, VM) + (DTM.TYPE # '')                     TYPE.CNT=COUNT(DTM.TYPE, VM) + (DTM.TYPE # '')
0185 FOR SC = 1 TO TYPE.CNT                                             FOR SC = 1 TO TYPE.CNT
0186                                                                 >  *T21256 v
0187 IF DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> # "" THEN GOTO 1     IF DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> # "" THEN GOTO
0188                                                                 >  *T21256 ^
0189 IF DTM.TYPE<1,SC>="L" OR DTM.TYPE<1,SC>="I" THEN                   IF DTM.TYPE<1,SC>="L" OR DTM.TYPE<1,SC>="I" THEN
0190 IF DTM.CONC.TIME<1,SC>+0 > 0 THEN                                  IF DTM.CONC.TIME<1,SC>+0 > 0 THEN

0194 END                                                                END
0195 S.OSJ<1,SC>=0                                                      S.OSJ<1,SC>=0
0196 MATREAD JOB.REC FROM JOB, CONO: DTM.JOB<1,SC> ELSE                 MATREAD JOB.REC FROM JOB, CONO: DTM.JOB<1,SC> ELSE
0197 MAT JOB.REC=''                                                     MAT JOB.REC=''
0198 FND=0                                                              FND=0
0199                                                                 >  *T25837 v
0200                                                                 >  *           IF NUM(DTM.JOB<1,SC>) THEN
0201 IF NUM(DTM.JOB<1,SC>) AND DTM.JOB<1,SC> # "" THEN                  IF NUM(DTM.JOB<1,SC>) AND DTM.JOB<1,SC> # "" THEN
0202 IF DTM.JOB<1,SC> < J.CUTOFF.NUM THEN FND=1                         IF DTM.JOB<1,SC> < J.CUTOFF.NUM THEN FND=1
0203 END ELSE                                                           END ELSE

0216 IF DTM.DIV<1,SC> = "" THEN                                         IF DTM.DIV<1,SC> = "" THEN
0217 DTM.ERR="INVALID DIVISION";GOSUB 3000                              DTM.ERR="INVALID DIVISION";GOSUB 3000
0218 END                                                                END
0219 S.OSJ<1,SC>=1                                                      S.OSJ<1,SC>=1
0220 JOB.DIV=DTM.DIV<1,SC>                                              JOB.DIV=DTM.DIV<1,SC>
0221 JOB.TYPE=DTM.JOB.TYPE<1,SC>                                     |  *T24092               JOB.TYPE=DTM.JOB.TYPE<1,SC>
0222 END ELSE                                                           END ELSE
0223 DTM.ERR="INVALID JOB #";GOSUB 3000                                 DTM.ERR="INVALID JOB #";GOSUB 3000
0224 END                                                                END
0225 END                                                                END

0226                                                                 >  *T24092 v
0227                                                                 >  IF DTM.JOB.TYPE<1,SC> # JOB.TYPE THEN
0228                                                                 >  DTM.JOB.TYPE<1,SC> = JOB.TYPE
0229                                                                 >  END
0230                                                                 >  *T24092 ^         
0231 IF DTM.DIV<1,SC> = "" THEN DTM.DIV<1,SC> = JOB.DIV                 IF DTM.DIV<1,SC> = "" THEN DTM.DIV<1,SC> = JOB.DIV
0232 MATREAD DIV.REC FROM DIVISION, CONO : DTM.DIV<1,SC> ELSE           MATREAD DIV.REC FROM DIVISION, CONO : DTM.DIV<1,SC> ELSE

0233 MAT DIV.REC=""; *T23174                                         <  
0234 DTM.ERR="INVALID DIVISION";GOSUB 3000                              DTM.ERR="INVALID DIVISION";GOSUB 3000
0235 END                                                                END
0236 MATREAD DEPT.REC FROM DEPARTMENT, CONO : DTM.DEPT<1,SC> ELSE       MATREAD DEPT.REC FROM DEPARTMENT, CONO : DTM.DEPT<1,SC> ELSE
0237 MAT DEPT.REC=""; *T23174                                        <  
0238 DTM.ERR="INVALID DEPARTMENT";GOSUB 3000                            DTM.ERR="INVALID DEPARTMENT";GOSUB 3000
0239 END                                                                END

0240 LOCATE DTM.DEPT<1,SC> IN DIV.DEPT<1>,1 SETTING DLOC ELSE           LOCATE DTM.DEPT<1,SC> IN DIV.DEPT<1>,1 SETTING DLOC ELSE
0241 DTM.ERR="DIV/DEPT MISMATCH"                                        DTM.ERR="DIV/DEPT MISMATCH"
0242 GOSUB 3000                                                         GOSUB 3000
0243 END                                                                END
0244 MATREAD CCTR.REC FROM COST.CNTR, CONO : DTM.CCTR<1,SC> ELSE        MATREAD CCTR.REC FROM COST.CNTR, CONO : DTM.CCTR<1,SC> ELSE
0245 MAT CCTR.REC=""; *T23174                                        <  
0246 DTM.ERR="INVALID COST CENTER";GOSUB 3000                           DTM.ERR="INVALID COST CENTER";GOSUB 3000
0247 END                                                                END
0248 *                                                               <  
0249 IF CCTR.DEPT # DTM.DEPT<1,SC> THEN                                 IF CCTR.DEPT # DTM.DEPT<1,SC> THEN

0266 WORK.WHSE=''                                                       WORK.WHSE=''
0267 IF DTM.PROD<1,SC> # "" THEN                                        IF DTM.PROD<1,SC> # "" THEN
0268 * this is a prod chk whse / div against job div                    * this is a prod chk whse / div against job div
0269 WORK.WHSE=DTM.WHSE<1,SC>                                           WORK.WHSE=DTM.WHSE<1,SC>
0270 END ELSE                                                           END ELSE
0271 IF DTM.SERIAL<1,SC> # "" THEN                                   |  IF DTM.R.S.ID<1,SC> # "" THEN
0272 MATREAD ISTK.REC FROM INV_SERIAL,CONO:DTM.SERIAL<1,SC> THEN     |  MATREAD RSKI.REC FROM ROLL.SKID.INFO,CONO:DTM.R.S.ID<1,SC> T
0273 IF ISTK.POST.DATE = "" THEN                                     |  * T21523
0274 DTM.ERR = "SERIAL NOT RECEIVED"                                 |  IF RSKI.POST.DATE = "" THEN
0275                                                                 >  DTM.ERR = "ROLL/SKID NOT RECEIVED"

0276 GOSUB 3000                                                         GOSUB 3000
0277 END ELSE                                                        <  
0278 IF ISTK.WHSE # DTM.WHSE OR ISTK.LOC#DTM.LOC THEN                <  
0279 DTM.STATUS ='Serial is in different whse/loc.'                  <  
0280 GOSUB 3000                                                      <  
0281 END                                                                END
0282                                                                 >  * T21523
0283                                                                 >  WORK.WHSE=RSKI.WHSE

0284 END                                                                END
0285 WORK.WHSE=ISTK.WHSE                                             <  
0286 END                                                                END
0287 END                                                                END
0288 END                                                             <  
0289 * T26497 v                                                      <  
0290 IF WORK.WHSE # '' THEN                                          <  
0291 IF CO.INTR.WHSE # '' AND CO.INTR.WHSE = WORK.WHSE THEN          <  

0292 DTM.ERR = 'CANNOT USE MATERIAL FROM AN INTER-DIVISIONAL WHSE'   <  
0293 GOSUB 3000                                                      <  
0294 END                                                             <  
0295 END                                                             <  
0296 * T26497 ^                                                      <  
0297 IF WORK.WHSE # "" AND JOB.DIV # "" THEN                            IF WORK.WHSE # "" AND JOB.DIV # "" THEN
0298 MATREAD WHSE.REC FROM WAREHOUSE,CONO:WORK.WHSE THEN                MATREAD WHSE.REC FROM WAREHOUSE,CONO:WORK.WHSE THEN

0320 END                                                                END
0321 END                                                                END
0322 IF JOB.STATUS<1,1>=9 THEN                                          IF JOB.STATUS<1,1>=9 THEN
0323 DTM.ERR="JOB IS CANCELLED";GOSUB 3000                              DTM.ERR="JOB IS CANCELLED";GOSUB 3000
0324 END                                                                END
0325 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5 ) OR JOB.TRACK  |  *         IF JOB.STATUS<1,1> # 5 THEN
0326                                                                 >  *T23466 v
0327                                                                 >  *           IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5 
0328                                                                 >  IF JOB.STATUS<1,1> = 4 OR JOB.TRACK.DATE<1,7> # "" OR JOB.TR
0329                                                                 >  *T23466 ^

0333 MATREAD JSI.REC FROM JOB.STAT.CODE, CONO:DTM.INIT<1,SC> ELSE       MATREAD JSI.REC FROM JOB.STAT.CODE, CONO:DTM.INIT<1,SC> ELSE
0334 DTM.ERR="INVALID AUTHORIZATION";GOSUB 3000                         DTM.ERR="INVALID AUTHORIZATION";GOSUB 3000
0335 END                                                                END
0336 END                                                                END
0337 END                                                                END
0338                                                                 >  *         END
0339 IF JOB.TYPE # "R" AND JOB.TYPE # DTM.JOB.TYPE<1,SC> THEN           IF JOB.TYPE # "R" AND JOB.TYPE # DTM.JOB.TYPE<1,SC> THEN
0340 DTM.ERR="INVALID JOB TYPE";GOSUB 3000                              DTM.ERR="INVALID JOB TYPE";GOSUB 3000
0341 END                                                                END
0342 IF JOB.DIV # DTM.DIV<1,SC> THEN                                    IF JOB.DIV # DTM.DIV<1,SC> THEN

0351 END                                                                END
0352 READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:DTM.SPOIL.CODE<     READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:DTM.SPOIL.COD
0353 DTM.ERR="INVALID SPOILAGE CODE";GOSUB 3000                         DTM.ERR="INVALID SPOILAGE CODE";GOSUB 3000
0354 END                                                                END
0355 END                                                                END
0356                                                                 >  * S.HRS<1,SC>=DTM.TIME<1,SC> - DTM.TIME.ST<1,SC>
0357 IF DTM.TYPE<1,SC>="M" THEN GOTO 1080                               IF DTM.TYPE<1,SC>="M" THEN GOTO 1080
0358 IF DTM.TIME.ST<1,SC>="" THEN                                       IF DTM.TIME.ST<1,SC>="" THEN
0359 DTM.ERR="START TIME";GOSUB 3000                                    DTM.ERR="START TIME";GOSUB 3000
0360 END                                                                END

0361 STIME=DTM.TIME.ST<1,SC>                                            STIME=DTM.TIME.ST<1,SC>
0362 ETIME=DTM.TIME<1,SC>                                               ETIME=DTM.TIME<1,SC>
0363 IF ETIME = STIME THEN                                           |  *T25044 v
0364 DTM.ERR = "START TIME CANNOT EQUAL END TIME"; GOSUB 3000        |  *         IF ETIME = STIME THEN
0365 END                                                             |  *           DTM.ERR = "START TIME CANNOT EQUAL END TIME"; GO
0366                                                                 >  *         END
0367                                                                 >  *25044 ^
0368 IF ETIME < STIME THEN ETIME=ETIME+2400                             IF ETIME < STIME THEN ETIME=ETIME+2400
0369 ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*60     ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*

0370 S.HRS=INT(ELAP.MIN/60*100+0.5)                                     S.HRS=INT(ELAP.MIN/60*100+0.5)
0371 BEGIN CASE                                                         BEGIN CASE
0372                                                                 >  *T18522
0373                                                                 >  *        CASE CCTR.OPER.TYPE<1,OLOC>='V' AND DTM.IMP<1,SC> +
0374 CASE CCTR.OPER.TYPE<1,OLOC>='V' AND DTM.IMP<1,SC> = '' AND DTM     CASE CCTR.OPER.TYPE<1,OLOC>='V' AND DTM.IMP<1,SC> = '' AND D
0375 DTM.ERR="PRODUCTION QUANTITY REQUIRED";GOSUB 3000                  DTM.ERR="PRODUCTION QUANTITY REQUIRED";GOSUB 3000
0376                                                                 >  *        CASE CCTR.OPER.TYPE<1,OLOC>='U' AND DTM.IMP<1,SC> +
0377 CASE CCTR.OPER.TYPE<1,OLOC>='U' AND DTM.IMP<1,SC> = '' AND DTM     CASE CCTR.OPER.TYPE<1,OLOC>='U' AND DTM.IMP<1,SC> = '' AND D
0378 DTM.ERR="PRODUCTION QUANTITY REQUIRED";GOSUB 3000                  DTM.ERR="PRODUCTION QUANTITY REQUIRED";GOSUB 3000

0379                                                                 >  **
0380 CASE CCTR.OPER.TYPE<1,OLOC> # 'V' AND CCTR.OPER.TYPE<1,OLOC> #     CASE CCTR.OPER.TYPE<1,OLOC> # 'V' AND CCTR.OPER.TYPE<1,OLOC>
0381 DTM.ERR="INVALID PRODUCTION QUANTITY";GOSUB 3000                   DTM.ERR="INVALID PRODUCTION QUANTITY";GOSUB 3000
0382 CASE CCTR.OPER.HR.RATE<1,OLOC> > 0                                 CASE CCTR.OPER.HR.RATE<1,OLOC> > 0
0383 CASE DTM.JOB.TYPE<1,SC>="N"                                        CASE DTM.JOB.TYPE<1,SC>="N"
0384 CASE 1                                                             CASE 1
0385 DTM.ERR="INVALID COST";GOSUB 3000                                  DTM.ERR="INVALID COST";GOSUB 3000

0390 CASE (DTM.TYPE<1,SC>="T" OR DTM.TYPE<1,SC>="C") AND DTM.PROD<1     CASE (DTM.TYPE<1,SC>="T" OR DTM.TYPE<1,SC>="C") AND DTM.PROD
0391 IF DTM.PROD<1,SC> # "0" THEN                                       IF DTM.PROD<1,SC> # "0" THEN
0392 GOSUB 2000                                                         GOSUB 2000
0393 END                                                                END
0394 END CASE                                                           END CASE
0395                                                                 >  * EDIT FEATURES FOR EPS PAYROLL
0396 IF CO.PRS = "E" THEN                                               IF CO.PRS = "E" THEN
0397 BEGIN CASE                                                         BEGIN CASE
0398                                                                 >  * MOD FOR EPS PAYROLL EMPLOYEE 3/11/94 (LMR)
0399                                                                 >  *           CASE EMP.WRK.SCHD<1,SHIFT> = ''

0405 CASE DTM.CLASS.CD<1,SC>='' AND DTM.RATE<1,SC>=''                   CASE DTM.CLASS.CD<1,SC>='' AND DTM.RATE<1,SC>=''
0406 DTM.CLASS.CD<1,SC>=EMP.JOB.CLASS                                   DTM.CLASS.CD<1,SC>=EMP.JOB.CLASS
0407 DTM.RATE<1,SC>=EMP.JOB.CL.RATE                                     DTM.RATE<1,SC>=EMP.JOB.CL.RATE
0408 CASE DTM.CLASS.CD<1,SC>=EMP.JOB.CLASS                              CASE DTM.CLASS.CD<1,SC>=EMP.JOB.CLASS
0409 IF DTM.RATE<1,SC>='' THEN DTM.RATE<1,SC>=EMP.JOB.CL.RATE           IF DTM.RATE<1,SC>='' THEN DTM.RATE<1,SC>=EMP.JOB.CL.RATE
0410                                                                 >  * SEE ABOVE (LMR) 3/15/94
0411                                                                 >  *              CASE DTM.CLASS.CD<1,SC> # EMP.JOB.CLASS
0412 CASE DTM.CLASS.CD<1,SC> # EMP.JOB.CLASS AND EMP.SOC.SEC # ''       CASE DTM.CLASS.CD<1,SC> # EMP.JOB.CLASS AND EMP.SOC.SEC # ''
0413 LOCATE DTM.CLASS.CD<1,SC> IN EMP.VALID.CLASS<1> SETTING VC ELS     LOCATE DTM.CLASS.CD<1,SC> IN EMP.VALID.CLASS<1> SETTING VC E
0414 DTM.ERR="UNAUTHORIZED JOB CLASS"                                   DTM.ERR="UNAUTHORIZED JOB CLASS"

0490 GOSUB 3000                                                         GOSUB 3000
0491 END                                                                END
0492 END                                                                END
0493 NEXT I                                                             NEXT I
0494 1099 NEXT SC                                                       1099  NEXT SC
0495                                                                 >  *T26207 v
0496 IF SUM(DTM.LAPS.TIME) > 2400 THEN                                  IF SUM(DTM.LAPS.TIME) > 2400 THEN
0497 DTM.ERR="Total hours exceeds 24.00"                                DTM.ERR="Total hours exceeds 24.00"
0498 SC = TYPE.CNT                                                      SC = TYPE.CNT
0499 GOSUB 3000                                                         GOSUB 3000

0500 END                                                                END
0501                                                                 >  *T26207 ^
0502 MATWRITE DTM.REC ON DAILY.TIME.MATL, DTM.ID                        MATWRITE DTM.REC ON DAILY.TIME.MATL, DTM.ID
0503 1999 RETURN                                                        1999  RETURN
0504 *                                                                  *
0505 *---- EDIT MATERIAL                                                *---- EDIT MATERIAL
0506 *                                                                  *
0507 2000 MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> ELSE      2000  MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> EL

0508 DTM.ERR="INVALID PRODUCT";GOSUB 3000                               DTM.ERR="INVALID PRODUCT";GOSUB 3000
0509 MAT INV.REC = ''   ;*T22837                                     <  
0510 END                                                                END
0511                                                                 >  * WHSE.CNT=COUNT(INV.WHSE.CODE, VM) + (INV.WHSE.CODE # '')
0512                                                                 >  * IF WHSE.CNT > 1 THEN
0513                                                                 >  * DTM.STATUS<1,SC>='MORE THEN ONE WAREHOUSE';GOTO 2099
0514                                                                 >  * END
0515                                                                 >  * DTM.WHSE<1,SC>=INV.WHSE.CODE<1,1>

0516 MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE               MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
0517 DTM.ERR="CANNOT LOCATE PRODUCT.LINE ":INV.LINE;GOSUB 3000          DTM.ERR="CANNOT LOCATE PRODUCT.LINE ":INV.LINE;GOSUB 3000
0518 MAT CATG.REC = ''     ;*T22837                                  <  
0519 END                                                                END
0520 IF DTM.OPER<1,SC>#'' AND OPER.PLINE#'' THEN                        IF DTM.OPER<1,SC>#'' AND OPER.PLINE#'' THEN
0521 LOCATE(INV.LINE,OPER.PLINE,1;POS) ELSE POS = 0                     LOCATE(INV.LINE,OPER.PLINE,1;POS) ELSE POS = 0
0522 IF POS < 1 THEN                                                    IF POS < 1 THEN
0523 DTM.ERR='INVALID PRODUCT LINE FOR OPERATION'                       DTM.ERR='INVALID PRODUCT LINE FOR OPERATION'
0524 GOSUB 3000                                                         GOSUB 3000

0530 GOSUB 3000                                                         GOSUB 3000
0531 END                                                                END
0532 END                                                                END
0533 MATREAD IWH.REC FROM INV.WHSE, CONO:DTM.PROD<1,SC>:'!':DTM.WHS     MATREAD IWH.REC FROM INV.WHSE, CONO:DTM.PROD<1,SC>:'!':DTM.W
0534 DTM.ERR='WAREHOUSE IS MISSING';GOSUB 3000                          DTM.ERR='WAREHOUSE IS MISSING';GOSUB 3000
0535 MAT IWH.REC = ''   ;*T22837                                     <  
0536 END                                                                END
0537                                                                 >  * LOC.CNT=COUNT(IWH.LOC, VM) + (IWH.LOC # '')
0538                                                                 >  * IF LOC.CNT > 1 THEN
0539                                                                 >  * DTM.STATUS<1,SC>='MORE THEN ONE LOCATION';GOTO 2099

0540                                                                 >  * END
0541                                                                 >  * DTM.LOC<1,SC>=IWH.LOC<1,1>
0542 MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DTM.PROD<1,SC>:"!":DT     MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DTM.PROD<1,SC>:"!":
0543 IF CATG.TRACK.QOH="Y" THEN                                         IF CATG.TRACK.QOH="Y" THEN
0544 DTM.ERR="LOCATION RECORD IS MISSING";GOSUB 3000                    DTM.ERR="LOCATION RECORD IS MISSING";GOSUB 3000
0545 END                                                                END
0546 MAT IWLO.REC=""                                                    MAT IWLO.REC=""

0547 END                                                                END
0548 SERIAL=DTM.SERIAL<1,SC>                                         |  RSID=DTM.R.S.ID<1,SC>
0549 BEGIN CASE                                                         BEGIN CASE
0550 CASE SERIAL# ""                                                 |  * T21523
0551 MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL THEN              |  CASE RSID# "" AND (BCI<3> = "Y" OR BCI<4> = "Y")
0552 IF ISTK.POST.DATE = "" THEN                                     |  MATREAD RSKI.REC FROM ROLL.SKID.INFO, CONO:RSID THEN
0553 DTM.ERR = "SERIAL NOT RECEIVED"; GOSUB 3000                     |  IF RSKI.POST.DATE = "" THEN
0554                                                                 >  DTM.ERR = "ROLL/SKID NOT RECEIVED"; GOSUB 3000

0555 END                                                                END
0556 END                                                                END
0557 CASE SERIAL="" AND IWLO.SERIAL # ""                             |  * T21523
0558 IF CATG.TRK.LVL='S' THEN                                        |  CASE RSID="" AND IWLO.R.S.ID # ""
0559 DTM.ERR="SERIAL # MISSING";GOSUB 3000                           |  DTM.ERR="ROLL/SKID # MISSING";GOSUB 3000
0560                                                                 >  CASE RSID # ""
0561                                                                 >  LOCATE RSID IN IWLO.R.S.ID<1>,1 SETTING P ELSE
0562                                                                 >  DTM.ERR="INVALID ROLL/SKID";GOSUB 3000
0563 END                                                                END

0564 CASE SERIAL # ""                                                <  
0565 LOCATE SERIAL IN IWLO.SERIAL<1>,1 SETTING P ELSE                <  
0566 DTM.ERR="INVALID SERIAL";GOSUB 3000                             <  
0567 END                                                             <  
0568 END CASE                                                           END CASE
0569 BEGIN CASE                                                         BEGIN CASE
0570 CASE DTM.RS.QTYPE<1,SC>=""                                         CASE DTM.RS.QTYPE<1,SC>=""

0579 CASE 1                                                             CASE 1
0580 DTM.ERR="INVALID QUANTITY TYPE";GOSUB 3000                         DTM.ERR="INVALID QUANTITY TYPE";GOSUB 3000
0581 END CASE                                                           END CASE
0582 BARCODE.FLAG=1                                                     BARCODE.FLAG=1
0583 MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> ELSE MAT I     MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> ELSE MAT
0584 IF CATG.BARCODE = "Y" THEN BARCODE.FLAG = 1 ELSE BARCODE.FLAG   |  BEGIN CASE
0585                                                                 >  CASE INV.PAP.TYPE = "ROLL" AND BCI<3> = "Y"
0586                                                                 >  CASE INV.PAP.TYPE = "LROLL" AND BCI<3> = "Y"
0587                                                                 >  CASE INV.PAP.TYPE = "PCOAT" AND BCI<3> = "Y"
0588                                                                 >  CASE INV.PAP.TYPE = "SHEET" AND BCI<4> = "Y"

0589                                                                 >  CASE 1
0590                                                                 >  BARCODE.FLAG=0
0591                                                                 >  END CASE
0592 IF NOT(BARCODE.FLAG) THEN                                          IF NOT(BARCODE.FLAG) THEN
0593 BEGIN CASE                                                         BEGIN CASE
0594 CASE DTM.QTY<1,SC> <= 0 AND DTM.RS.QTYPE<1,SC>[2,1] # "R"          CASE DTM.QTY<1,SC> <= 0 AND DTM.RS.QTYPE<1,SC>[2,1] # "R"
0595 DTM.ERR = 'MUST HAVE A POSITIVE QUANTITY';GOSUB 3000               DTM.ERR = 'MUST HAVE A POSITIVE QUANTITY';GOSUB 3000


JCSBP/EPS.TIME.MATL.MAINT                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EPS.TIME.MATL.MAINT
Printed for thompson at 06/28/2006 04:41:47PM

0015 *             - 2/17/94 DEG ROUNDING OF IN, LUNCH, AND OUT TIM     *             - 2/17/94 DEG ROUNDING OF IN, LUNCH, AND OUT T
0016 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID NOT     *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID N
0017 *T22074 lanny 07/14/1997 * Oper Matl Reqd may be null, Y or N.     *T22074 lanny 07/14/1997 * Oper Matl Reqd may be null, Y or 
0018 *T22485 stefanie 02/10/1998 * Allow entry of time & mat'l for      *T22485 stefanie 02/10/1998 * Allow entry of time & mat'l fo
0019 *                             of company file.                     *                             of company file.
0020 *T22689 renee 03/27/1998 * Make factor codes other than 01, 02  <  
0021 *                          do what 01 does.                     <  
0022 *T23274 gat 09/18/1998 * FIX PLACE OF QTY PROMPT                   *T23274 gat 09/18/1998 * FIX PLACE OF QTY PROMPT
0023 *T23278 markt 09/30/98 * Check for divisional security          |  *T23466 rik 11/25/1998 * DON'T PROMPT FOR JOB AUTHORIZATION.
0024 *T25688 alex 03/22/2001 * Allow calculation of elapse time for  |  *C32334 gat 01/06/1999 * ALLOW FOR INPUT OF CLASS ON LUNCH T

0025 *                         entry. HNP400 calculates lunches.     |  *T23578 ct11 02/11/1999 * Do not display rate for any employ
0026                                                                 >  *T22746 cindy 03/08/1999 * upgrade to 11 buttons
0027                                                                 >  *T24092 rick 07/22/1999 * Modify pgm to use JOB.TYPE rather 
0028                                                                 >  *                         DTM.JOB.TYPE
0029                                                                 >  *T24102 markt 10/12/1999 * Expand the shift code to 2 digits
0030                                                                 >  *T25142 cm 06/28/2000 * Check for rate changes and change wh
0031                                                                 >  *                       appropriate.

0032                                                                 >  *T25146 aron 07/19/2000 * ADD TYPE "N" FOR ATTENDENCE.
0033                                                                 >  *C37621 cm 01/15/2001 * The DTM.SPEC.CODE field needs to be 
0034                                                                 >  *                       every new line entered.
0035 *T26097 lanny 08/17/2001 * If Operation is chg'd and has Add'l     *T26097 lanny 08/17/2001 * If Operation is chg'd and has Add
0036 *                          the orig prompt data is not cleared     *                          the orig prompt data is not clear
0037 *                          defaults for new prompts may be of      *                          defaults for new prompts may be o
0038 *                          types.                                  *                          types.

0039 *T26207 lanny 10/03/2001 * Do not allow more than 24 hours in      *T26207 lanny 10/03/2001 * Do not allow more than 24 hours i
0040 *T26334 epitka 12/18/2001 * REV12                               |  *T26544 cmykleb 05/16/2002 * Change pgm to prompt for Author
0041 *T26415 lross 01/31/2002 * Do not include lunch in DTM.REG.TIM  |  *                            the code "PSP" does not exist i
0042 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  |  *                            JOB.STAT.CODE file.
0043 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *T26940 adelgado 10/25/2002 * Hard code Factor Field with '0
0044 *T26661 cmykleb 06/12/2002 * If date field (#1) is changed in   |  *T26941 adelgado 10/28/2002 * For 'N' type entry, only allow
0045 *                            error occurs.                      |  *                             codes 410 - 417.
0046                                                                 >  *T26941 adelgado 11/01/2002 * Correction to the task due to 

0047 **************************************************************     ************************************************************
0048 *-- FILE COPY STATEMENTS                                        |  *-----------------------------------------------------------
0049                                                                 >  * FILE COPY STATEMENTS
0050                                                                 >  *-----------------------------------------------------------
0051 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0052 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0053 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0054 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR

0067 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0068 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0069 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0070 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0071 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0072                                                                 >  *T25146 v
0073                                                                 >  *COPY>PRS.CPYLIB>ATTEND.CODE
0074                                                                 >  *T25146 ^
0075                                                                 >  *-----------------------------------------------------------
0076 *-- SYSTEM ERROR MSG                                               *-- SYSTEM ERROR MSG

0077                                                                 >  *----------------------------------------------------------
-
0078 SYS.TYPE=1                                                         SYS.TYPE=1
0079 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0080                                                                 >  *-----------------------------------------------------------
0081 *-- DEFINE DIMENSIONED VARIABLES                                   *-- DEFINE DIMENSIONED VARIABLES
0082                                                                 >  *-----------------------------------------------------------
0083 DIM TEMP.REC(35)                                                   DIM TEMP.REC(35)

0094 EQU STPT        TO TEMP.REC(11)                                    EQU STPT TO TEMP.REC(11)
0095 EQU IMP         TO TEMP.REC(12)                                    EQU IMP TO TEMP.REC(12)
0096 EQU PROD        TO TEMP.REC(13)                                    EQU PROD TO TEMP.REC(13)
0097 EQU WHSE        TO TEMP.REC(14)                                    EQU WHSE TO TEMP.REC(14)
0098 EQU LOCAT       TO TEMP.REC(15)                                    EQU LOCAT TO TEMP.REC(15)
0099 EQU SERIAL      TO TEMP.REC(16)                                 |  EQU R.S.ID TO TEMP.REC(16)
0100 EQU ED.LS.FLG   TO TEMP.REC(17)                                    EQU ED.LS.FLG TO TEMP.REC(17)
0101 EQU TMP.STATUS      TO TEMP.REC(18)                             |  EQU STATUS TO TEMP.REC(18)
0102 EQU QTY         TO TEMP.REC(19)                                    EQU QTY TO TEMP.REC(19)
0103 EQU SHEET       TO TEMP.REC(20)                                    EQU SHEET TO TEMP.REC(20)

0105 EQU QTYPE       TO TEMP.REC(22)                                    EQU QTYPE TO TEMP.REC(22)
0106 EQU DATE.USED   TO TEMP.REC(23)                                    EQU DATE.USED TO TEMP.REC(23)
0107 EQU TIME.USED   TO TEMP.REC(24)                                    EQU TIME.USED TO TEMP.REC(24)
0108 EQU JOBCL       TO TEMP.REC(25)                                    EQU JOBCL TO TEMP.REC(25)
0109 EQU JOBRATE     TO TEMP.REC(26)                                    EQU JOBRATE TO TEMP.REC(26)
0110 ************                                                    |  *-----------------------------------------------------------
0111 *-- OPEN ALL FILES                                                 *-- OPEN ALL FILES
0112 OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN JC  |  *-----------------------------------------------------------
0113 OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY   |  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN 
0114 OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL   |  OPEN "","CBN.SCREENS" TO SECOND.SCREENS ELSE ERRMSG="CANNOT 

0115 OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX FIL  |  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPAN
0116 OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="CANNOT OPEN DIVISI  |  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTRO
0117 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="CANNOT OPEN DE  |  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX F
0118 OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="CANNOT OPEN COST  |  OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="CANNOT OPEN DIVI
0119 OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CANNOT OPEN CUSTOM  |  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="CANNOT OPEN 
0120 OPEN "","EMPLOYEE" TO EMPLOYEE ELSE ERRMSG="CANNOT OPEN EMPLOY  |  OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="CANNOT OPEN CO
0121 OPEN "","EMPLOYEE.XREF" TO EMPLOYEE.XREF ELSE ERRMSG="CANNOT O  |  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CANNOT OPEN CUST

0122 OPEN "","WORK.SHIFT" TO WORK.SHIFT ELSE ERRMSG="CANNOT OPEN WO  |  OPEN "","EMPLOYEE" TO EMPLOYEE ELSE ERRMSG="CANNOT OPEN EMPL
0123 OPEN "","OPERATION" TO OPERATION ELSE ERRMSG="CANNOT OPEN OPER  |  OPEN "","EMPLOYEE.XREF" TO EMPLOYEE.XREF ELSE ERRMSG="CANNOT
0124 OPEN "","JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE";GOSUB   |  OPEN "","WORK.SHIFT" TO WORK.SHIFT ELSE ERRMSG="CANNOT OPEN 
0125 OPEN "","JOB.TIME" TO JOB.TIME ELSE ERRMSG="CANNOT OPEN JOB.TI  |  OPEN "","OPERATION" TO OPERATION ELSE ERRMSG="CANNOT OPEN OP
0126 OPEN "","DAILY.TIME.MATL" TO DAILY.TIME.MATL ELSE ERRMSG="CANN  |  OPEN "","JOB" TO JOB ELSE ERRMSG="CANNOT OPEN JOB FILE"; GOS
0127 OPEN "","FACTOR" TO FACTOR ELSE ERRMSG="CANNOT OPEN FACTOR FIL  |  OPEN "","JOB.TIME" TO JOB.TIME ELSE ERRMSG="CANNOT OPEN JOB.
0128 OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG="CANNOT O  |  OPEN "","DAILY.TIME.MATL" TO DAILY.TIME.MATL ELSE ERRMSG="CA

0129 OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE ERRMSG="CANNOT  |  OPEN "","FACTOR" TO FACTOR ELSE ERRMSG="CANNOT OPEN FACTOR F
0130 OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="CANNOT OPEN INVE  |  OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG="CANNOT
0131 OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="CANNOT OPEN INV.WH  |  OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE ERRMSG="CANN
0132 OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="CANNOT OPE  |  OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="CANNOT OPEN IN
0133 OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CANNOT OPEN CATEGO  |  OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="CANNOT OPEN INV.
0134 OPEN "","JOB.TRANS" TO JOB.TRANS ELSE ERRMSG="CANNOT OPEN JOB.  |  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="CANNOT O
0135 OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='CANNOT OPEN IN  |  OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CANNOT OPEN CATE

0136 OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='CANNOT OPEN SF.P  |  OPEN "","JOB.TRANS" TO JOB.TRANS ELSE ERRMSG="CANNOT OPEN JO
0137                                                                 >  OPEN '','ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG='CANN
0138                                                                 >  OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='CANNOT OPEN SF
0139                                                                 >  *T25146 v
0140                                                                 >  OPEN "","ATTEND.CODE" TO ATTEND.CODE ELSE ERRMSG='CANNOT OPE
0141                                                                 >  *T25146 ^
0142                                                                 >  *----------------------------------------------------------
-

0143 *-- GET COMPANY                                                    *-- GET COMPANY
0144                                                                 >  *-----------------------------------------------------------
0145 MAT COMP.REC=""                                                    MAT COMP.REC=""
0146 CONO=""                                                            CONO=""
0147 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0148 IF CONO='END' THEN GOTO 99999                                      IF CONO='END' THEN GOTO 99999
0149                                                                 >  *-----------------------------------------------------------
0150 *-- INITIALIZATION                                                 *-- INITIALIZATION

0151 SHEET.OK=1       ;*** 1=ALLOW SHEET PAPER ENTRY ***             |  *-----------------------------------------------------------
0152                                                                 >  SHEET.OK=1; *** 1=ALLOW SHEET PAPER ENTRY ***
0153 MAT EDIT.COM.DRIVER=''                                             MAT EDIT.COM.DRIVER=''
0154 ECD.SCRN.CNT=2                                                     ECD.SCRN.CNT=2
0155 ECD.SCRN.NAME<1>='EPS.TIME.MATL.MAINT'                             ECD.SCRN.NAME<1>='EPS.TIME.MATL.MAINT'
0156                                                                 >  ECD.SCRN.FLAG<1> = 2 ;* T24102
0157 ECD.SCRN.NAME<2>='TIME.MATL.DET'                                   ECD.SCRN.NAME<2>='TIME.MATL.DET'

0158 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0159 ECD.ACTION=1;CALL SCRN.EDIT                                     |  ECD.ACTION=1; CALL SCRN.EDIT
0160 PAGE.SIZE=5;BEGIN.PAGE=8;LINE.SPACE=2                           |  PAGE.SIZE=5; BEGIN.PAGE=8; LINE.SPACE=2
0161 MAT JOB.REC="";MAT DIV.REC="";MAT DEPT.REC="";MAT CCTR.REC="";  |  MAT JOB.REC=""; MAT DIV.REC=""; MAT DEPT.REC=""; MAT CCTR.RE
0162 DATE.WORKED="";TEST.REC=""                                      |  DATE.WORKED=""; TEST.REC=""
0163 MAT GEN.XREF.REC=""                                                MAT GEN.XREF.REC=""
0164 GXR.CO=CONO                                                        GXR.CO=CONO
0165 GXR.HEADING<1,2>="DESCRIPTION"                                     GXR.HEADING<1,2>="DESCRIPTION"

0173 DEPT.WHSE=""                                                       DEPT.WHSE=""
0174 END                                                                END
0175 END ELSE                                                           END ELSE
0176 DEPT.WHSE=""                                                       DEPT.WHSE=""
0177 END                                                                END
0178                                                                 >  *-----------------------------------------------------------
0179 *-- MAIN PROCESSING                                                *-- MAIN PROCESSING
0180 100 *                                                           |  *-----------------------------------------------------------
0181 RELEASE                                                         |  100 RELEASE
0182 MAT DTM.REC="";OPT=""                                           |  MAT DTM.REC=""; OPT=""

0183 MAT SCV.REC="";ECD.ACTION=6;CALL SCRN.EDIT                      |  MAT SCV.REC=""; ECD.ACTION=6; CALL SCRN.EDIT
0184 110 *                                                           |  110 DEL.JOB = ""; DEL.SEQ = ""
0185 DEL.JOB = "" ; DEL.SEQ = ""                                     |  EMP=""; SHIFT=""
0186 EMP="";SHIFT=""                                                 <  
0187 SCV.REC(1)<1>=DATE()                                               SCV.REC(1)<1>=DATE()
0188 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                           |  ATTEND.NUM = "" ; * T25146
0189                                                                 >  ECD.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT

0196 NEXT REQUEST                                                       NEXT REQUEST
0197 NEW.REC=0                                                          NEW.REC=0
0198 DTM.KEY=EMP:"*":DATE.WORKED:"*":SHIFT                              DTM.KEY=EMP:"*":DATE.WORKED:"*":SHIFT
0199 OLD.KEY = DTM.KEY                                                  OLD.KEY = DTM.KEY
0200 NEW.KEY = DTM.KEY                                                  NEW.KEY = DTM.KEY
0201 * T26126 v                                                      |  MATREADU DTM.REC FROM DAILY.TIME.MATL,CONO:DTM.KEY ELSE
0202 MATREADU DTM.REC FROM DAILY.TIME.MATL,CONO:DTM.KEY LOCKED       <  
0203 ERRMSG = 'TIME & MATL Record is locked by user - ':GETUSERNAME  <  
0204 GOSUB 91000;GOTO 100                                            <  
0205 END ELSE                                                        <  

0206 * T26126 ^                                                      <  
0207 MAT DTM.REC=""                                                     MAT DTM.REC=""
0208 NEW.REC=1                                                          NEW.REC=1
0209 END                                                                END
0210 IF NEW.REC THEN                                                    IF NEW.REC THEN
0211 CNT=0                                                              CNT=0
0212 REF=0                                                              REF=0

0218 FOR REF = 1 TO CNT                                                 FOR REF = 1 TO CNT
0219 GOSUB 650                                                          GOSUB 650
0220 NEXT REF                                                           NEXT REF
0221 REF=1                                                              REF=1
0222 CURR.REF.NO=""                                                     CURR.REF.NO=""
0223                                                                 >  *T24092 v         
0224                                                                 >  GOSUB FIX.JOB.TYPE
0225                                                                 >  *T24092 ^         
0226 GOSUB 70000                                                        GOSUB 70000
0227 GOSUB 50000                                                        GOSUB 50000

0228 END                                                                END
0229                                                                 >  *-----------------------------------------------------------
0230 *-- GET OPERATOR REPLY                                             *-- GET OPERATOR REPLY
0231 500 *                                                           |  *-----------------------------------------------------------
0232 ECD.NUM=31                                                      |  500 ECD.NUM=31
0233 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0234 OPT=ECD.RET.VALUE                                                  OPT=ECD.RET.VALUE
0235 510 *                                                           |  510 BEGIN CASE

0236 BEGIN CASE                                                      <  
0237 CASE OPT="E" OR OPT="END"                                          CASE OPT="E" OR OPT="END"
0238 GOTO 100                                                           GOTO 100
0239 CASE OPT="A" AND CNT < 99                                          CASE OPT="A" AND CNT < 99
0240 MODE="A"                                                           MODE="A"
0241 DONE=0                                                             DONE=0
0242 FOR REF=CNT+1 TO 99 UNTIL DONE                                     FOR REF=CNT+1 TO 99 UNTIL DONE

0300 CURR.REF.NO=""                                                     CURR.REF.NO=""
0301 GOSUB 50000                                                        GOSUB 50000
0302 GOSUB 70000                                                        GOSUB 70000
0303 END                                                                END
0304 CASE NUM(OPT)                                                      CASE NUM(OPT)
0305 *T26661 v                                                       <  
0306 IF OPT = 1 THEN                                                 <  
0307 511 *                                                           <  
0308 X=17;Y=2;TYP=6;O.R='O';FILL='#'                                 <  
0309 DEFAULT = OCONV(DATE.WORKED, "D2/")                             <  

0310 PVALUE = DEFAULT                                                <  
0311 MAXL = 8                                                        <  
0312 ODATE = DATE.WORKED                                             <  
0313 CALL EDIT.SUB                                                   <  
0314 IF VALUE # "END" THEN                                           <  
0315 DATE.WORKED = VALUE                                             <  
0316 ECD.RET.VALUE = VALUE                                           <  

0317 GOSUB 1101                                                      <  
0318 IF TEST.REC # "" THEN DATE.WORKED = ODATE                       <  
0319 END                                                             <  
0320 ECD.NUM = 2                                                     <  
0321 SCV.REC(2)<ECD.SCRN.NO> = DATE.WORKED                           <  
0322 ECD.ACTION=5;CALL SCRN.EDIT                                     <  
0323 IF TEST.REC # "" THEN TEST.REC="";GOTO 511                      <  

0324 END ELSE                                                        <  
0325 *T26661 ^                                                       <  
0326 IF OPT > 0 AND OPT < 4 THEN                                        IF OPT > 0 AND OPT < 4 THEN
0327 ON OPT GOSUB 1100,1200,1300                                        ON OPT GOSUB 1100,1200,1300
0328 END                                                                END
0329 END ; * T26661                                                  <  
0330 CASE OPT="R" AND CNT > 0                                           CASE OPT="R" AND CNT > 0

0333 IF VALUE # "" AND VALUE # "END" THEN                               IF VALUE # "" AND VALUE # "END" THEN
0334 REF=VALUE                                                          REF=VALUE
0335 MATREAD CCTR.REC FROM COST.CNTR,CONO:DTM.CCTR<1,REF> ELSE MAT      MATREAD CCTR.REC FROM COST.CNTR,CONO:DTM.CCTR<1,REF> ELSE MA
0336 MATREAD OPER.REC FROM OPERATION,CONO:DTM.OPER<1,REF> ELSE MAT      MATREAD OPER.REC FROM OPERATION,CONO:DTM.OPER<1,REF> ELSE MA
0337 ECD.SCRN.NO=2                                                      ECD.SCRN.NO=2
0338 ECD.ACTION=2;CALL SCRN.EDIT                                     |  ECD.ACTION=2; CALL SCRN.EDIT
0339 TYPE=DTM.TYPE<1,REF>                                               TYPE=DTM.TYPE<1,REF>
0340 CALL EPS.TIME.MATL.DET (MODE,CONO,REF,MAT TEMP.REC,SHEET.OK,DE     CALL EPS.TIME.MATL.DET (MODE,CONO,REF,MAT TEMP.REC,SHEET.OK,
0341 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0342 ECD.ACTION=2;CALL SCRN.EDIT                                     |  ECD.ACTION=2; CALL SCRN.EDIT

0341 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0342 ECD.ACTION=2;CALL SCRN.EDIT                                     |  ECD.ACTION=2; CALL SCRN.EDIT
0343 DTM.PROD<1,REF>=PROD                                               DTM.PROD<1,REF>=PROD
0344 DTM.WHSE<1,REF>=WHSE                                               DTM.WHSE<1,REF>=WHSE
0345 DTM.LOC<1,REF>=LOCAT                                               DTM.LOC<1,REF>=LOCAT
0346 DTM.SERIAL<1,REF>=SERIAL                                        |  DTM.R.S.ID<1,REF>=R.S.ID
0347 DTM.ED.LS.FLG<1,REF>=ED.LS.FLG                                     DTM.ED.LS.FLG<1,REF>=ED.LS.FLG
0348 DTM.STATUS<1,REF>=TMP.STATUS                                    |  DTM.STATUS<1,REF>=STATUS
0349 DTM.QTY<1,REF>=QTY                                                 DTM.QTY<1,REF>=QTY
0350 DTM.SHEET<1,REF>=SHEET                                             DTM.SHEET<1,REF>=SHEET

0352 IF DATE.USED # "" THEN                                             IF DATE.USED # "" THEN
0353 DTM.TIME.STAMP<1,REF>=DATE.USED*100000+TIME.USED                   DTM.TIME.STAMP<1,REF>=DATE.USED*100000+TIME.USED
0354 END                                                                END
0355 SCV.REC(29)<1>=""                                                  SCV.REC(29)<1>=""
0356 SCV.REC(30)<1>=""                                                  SCV.REC(30)<1>=""
0357 ECD.ACTION=3;CALL SCRN.EDIT                                     |  ECD.ACTION=3; CALL SCRN.EDIT
0358 CURR.REF.NO=""                                                     CURR.REF.NO=""
0359 GOSUB 50000                                                        GOSUB 50000
0360 END                                                                END
0361 CASE OPT="P"                                                       CASE OPT="P"

0362 IF DTM.PMT.FLG="" OR DTM.PMT.FLG=STR(VM,LEN(DTM.PMT.FLG)) THEN     IF DTM.PMT.FLG="" OR DTM.PMT.FLG=STR(VM,LEN(DTM.PMT.FLG)) TH
0363 ECD.NUM=35                                                         ECD.NUM=35
0364 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0365 IF ECD.RET.VALUE="Y" THEN                                          IF ECD.RET.VALUE="Y" THEN
0366 CNT=COUNT(DTM.TYPE,VM)+(DTM.TYPE # "")                             CNT=COUNT(DTM.TYPE,VM)+(DTM.TYPE # "")
0367 DELETE DAILY.TIME.MATL,CONO:DTM.KEY                                DELETE DAILY.TIME.MATL,CONO:DTM.KEY
0368 MAT DTM.REC = ""                                                   MAT DTM.REC = ""
0369 GOSUB 800                                                          GOSUB 800
0370 GOTO 100                                                           GOTO 100

0375 END                                                                END
0376 CASE OPT="S"                                                       CASE OPT="S"
0377 REF=CURR.REF.NO+PAGE.SIZE                                          REF=CURR.REF.NO+PAGE.SIZE
0378 IF REF > CNT THEN REF=1                                            IF REF > CNT THEN REF=1
0379 GOSUB 50000                                                        GOSUB 50000
0380 * T25978 v                                                      <  
0381 CASE OPT = 'SR'                                                 <  
0382 REF = CURR.REF.NO - PAGE.SIZE                                   <  
0383 IF REF < 1 THEN REF = 1                                         <  
0384 GOSUB 50000                                                     <  

0385 CASE OPT = 'ST'                                                 <  
0386 REF = 1                                                         <  
0387 GOSUB 50000                                                     <  
0388 CASE OPT = 'SB'                                                 <  
0389 REF = CNT                                                       <  
0390 GOSUB 50000                                                     <  
0391 * T25978 ^                                                      <  

0471 CASE 1                                                             CASE 1
0472 ERRMSG="Invalid request. Try again! "                              ERRMSG="Invalid request. Try again! "
0473 GOSUB 91000                                                        GOSUB 91000
0474 END CASE                                                           END CASE
0475 GOTO 500                                                           GOTO 500
0476                                                                 >  *-----------------------------------------------------------
0477 *-- DELETE MULTI-LINE DATA                                         *-- DELETE MULTI-LINE DATA
0478 600 *                                                           |  *-----------------------------------------------------------
0479 AC=COUNT(DTM.A1A,",")+(DTM.A1A # "")                            |  600 AC=COUNT(DTM.A1A,",")+(DTM.A1A # "")
0480 FOR AP=1 TO AC                                                     FOR AP=1 TO AC

0486 DTM.REC(AAP)=DELETE(DTM.REC(AAP),1,REF,0)                          DTM.REC(AAP)=DELETE(DTM.REC(AAP),1,REF,0)
0487 NEXT AAP                                                           NEXT AAP
0488 NEXT AP                                                            NEXT AP
0489 CNT=CNT-1                                                          CNT=CNT-1
0490 RETURN                                                             RETURN
0491                                                                 >  *-----------------------------------------------------------
0492 *-- BUILD DEL.JOB                                                  *-- BUILD DEL.JOB
0493 650 *                                                           |  *-----------------------------------------------------------
0494 IF DTM.SEQ<1,REF> # "" AND DTM.JOB<1,REF> # "" THEN             |  650 IF DTM.SEQ<1,REF> # "" AND DTM.JOB<1,REF> # "" THEN
0495 LOCATE DTM.JOB<1,REF> IN DEL.JOB,1 SETTING XFND ELSE               LOCATE DTM.JOB<1,REF> IN DEL.JOB,1 SETTING XFND ELSE

0499 LOCATE DTM.SEQ<1,REF> IN DEL.SEQ<XFND>,1 SETTING YFND ELSE         LOCATE DTM.SEQ<1,REF> IN DEL.SEQ<XFND>,1 SETTING YFND ELSE
0500 DEL.SEQ<XFND,YFND> = DTM.SEQ<1,REF>                                DEL.SEQ<XFND,YFND> = DTM.SEQ<1,REF>
0501 END                                                                END
0502 END                                                                END
0503 RETURN                                                             RETURN
0504                                                                 >  *-----------------------------------------------------------
0505 *-- INSERT MULTI-LINE DATA                                         *-- INSERT MULTI-LINE DATA
0506 700 *                                                           |  *-----------------------------------------------------------
0507 AC=COUNT(DTM.A1A,",")+(DTM.A1A # "")                            |  700 AC=COUNT(DTM.A1A,",")+(DTM.A1A # "")
0508 FOR AP=1 TO AC                                                     FOR AP=1 TO AC

0514 DTM.REC(AAP)=INSERT(DTM.REC(AAP),1,REF,0,"")                       DTM.REC(AAP)=INSERT(DTM.REC(AAP),1,REF,0,"")
0515 NEXT AAP                                                           NEXT AAP
0516 NEXT AP                                                            NEXT AP
0517 CNT=CNT+1                                                          CNT=CNT+1
0518 RETURN                                                             RETURN
0519                                                                 >  *-----------------------------------------------------------
0520 *--- UPDATE JOB.TRANS                                              *--- UPDATE JOB.TRANS
0521 800 *                                                           |  *-----------------------------------------------------------
0522 CNT = DCOUNT(DEL.JOB,AM)                                        |  800 CNT = DCOUNT(DEL.JOB,AM)
0523 FOR REF = 1 TO CNT                                                 FOR REF = 1 TO CNT

0553 DEL JTRN.SHIFT<1,XFND>                                             DEL JTRN.SHIFT<1,XFND>
0554 DEL JTRN.CMP.FLG<1,XFND>                                           DEL JTRN.CMP.FLG<1,XFND>
0555 DEL JTRN.OPER.TYPE<1,XFND>                                         DEL JTRN.OPER.TYPE<1,XFND>
0556 DEL JTRN.POST.FLAG<1,XFND>                                         DEL JTRN.POST.FLAG<1,XFND>
0557 END                                                                END
0558 809 *                                                           |  809 NEXT II
0559 NEXT II                                                         <  
0560 IF JTRN.TRANS = "" THEN                                            IF JTRN.TRANS = "" THEN
0561 DELETE JOB.TRANS, CONO:DEL.JOB<REF>                                DELETE JOB.TRANS, CONO:DEL.JOB<REF>
0562 END ELSE                                                           END ELSE

0562 END ELSE                                                           END ELSE
0563 MATWRITE JTRN.REC ON JOB.TRANS, CONO:DEL.JOB<REF>                  MATWRITE JTRN.REC ON JOB.TRANS, CONO:DEL.JOB<REF>
0564 END                                                                END
0565 NEXT REF                                                           NEXT REF
0566 RETURN                                                             RETURN
0567                                                                 >  *-----------------------------------------------------------
0568 *-- GET DATE WORKED                                                *-- GET DATE WORKED
0569 1100 *                                                          |  *-----------------------------------------------------------
0570 ECD.NUM=2                                                       |  1100 ECD.NUM=2
0571 *T22485 >   ECD.MINV = DATE() - 7                                  *T22485 >   ECD.MINV = DATE() - 7

0574 IF DATE.WORKED # "" THEN                                           IF DATE.WORKED # "" THEN
0575 ECD.O.R="O"; ECD.DEFAULT=DATE.WORKED                               ECD.O.R="O"; ECD.DEFAULT=DATE.WORKED
0576 END ELSE                                                           END ELSE
0577 ECD.O.R = "R"                                                      ECD.O.R = "R"
0578 END                                                                END
0579 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0580 1101 *                                                          <  
0581 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
0582 IF OPT = 1 THEN                                                    IF OPT = 1 THEN
0583 IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.     IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TER

0583 IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.     IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TER
0584 ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":OC     ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":
0585 GOSUB 91000                                                        GOSUB 91000
0586 END                                                                END
0587 GOSUB 1400                                                         GOSUB 1400
0588 *T26661 v                                                       |  IF TEST.REC # "" THEN
0589 *        IF TEST.REC # "" THEN                                  |  SCV.REC(2)<ECD.SCRN.NO> = DATE.WORKED; TEST.REC = ""; GOTO 1
0590 *           SCV.REC(2)<ECD.SCRN.NO>=DATE.WORKED;TEST.REC="" ;   <  
0591 *        END                                                    <  
0592 RETURN                                                          <  

0593 *T26661 ^                                                       <  
0594 END                                                                END
0595                                                                 >  END
0596 DATE.WORKED = ECD.RET.VALUE                                        DATE.WORKED = ECD.RET.VALUE
0597 END                                                                END
0598 1199 RETURN                                                        1199 RETURN
0599                                                                 >  *-----------------------------------------------------------

0600 *-- GET EMPLOYEE ID                                                *-- GET EMPLOYEE ID
0601 1200 *                                                          |  *-----------------------------------------------------------
0602 SCV.REC(3)<1>=EMP                                               |  1200 SCV.REC(3)<1>=EMP
0603 ECD.NUM=3                                                          ECD.NUM=3
0604 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0605 BEGIN CASE                                                         BEGIN CASE
0606 CASE ECD.RET.VALUE = "END"                                         CASE ECD.RET.VALUE = "END"
0607 GOTO 1299                                                          GOTO 1299

0608 CASE ECD.RET.VALUE=""                                              CASE ECD.RET.VALUE=""
0609 ECD.NUM=4                                                          ECD.NUM=4
0610 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0611 IF ECD.RET.VALUE="" OR ECD.RET.VALUE="END" THEN GOTO 1200          IF ECD.RET.VALUE="" OR ECD.RET.VALUE="END" THEN GOTO 1200
0612 GXR.XREF=EMPLOYEE.XREF;GXR.FILE=EMPLOYEE;GXR.LOC=1;GXR.TOP.LIN  |  GXR.XREF=EMPLOYEE.XREF; GXR.FILE=EMPLOYEE; GXR.LOC=1; GXR.T
O
0613 GXR.ATT<1,2>=4;GXR.ATT<1,3>=5;GXR.HEADING<1,2>="LAST NAME";GXR  |  GXR.ATT<1,2>=4; GXR.ATT<1,3>=5; GXR.HEADING<1,2>="LAST NAME"
0614 GXR.SRCH.ID=ECD.RET.VALUE;GXR.ID=""                             |  GXR.SRCH.ID=ECD.RET.VALUE; GXR.ID=""
0615 CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)                             CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0616 IF GXR.ID # "X" THEN                                               IF GXR.ID # "X" THEN

0617 ECD.ACTION=2;CALL SCRN.EDIT                                     |  ECD.ACTION=2; CALL SCRN.EDIT
0618 ECD.ACTION=3;CALL SCRN.EDIT                                     |  ECD.ACTION=3; CALL SCRN.EDIT
0619 END                                                                END
0620 IF GXR.ID="" THEN GOTO 1200                                        IF GXR.ID="" THEN GOTO 1200
0621 ECD.RET.VALUE=GXR.ID                                               ECD.RET.VALUE=GXR.ID
0622 ECD.NUM=3                                                          ECD.NUM=3
0623 SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE                        SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE

0627 MATREAD EMP.REC FROM EMPLOYEE,CONO:ECD.RET.VALUE ELSE              MATREAD EMP.REC FROM EMPLOYEE,CONO:ECD.RET.VALUE ELSE
0628 ERRMSG="Invalid employee ID. Try again! "                          ERRMSG="Invalid employee ID. Try again! "
0629 GOSUB 91000                                                        GOSUB 91000
0630 GOTO 1200                                                          GOTO 1200
0631 END                                                                END
0632 *T23278 v                                                       |  EMP.ID = CONO:ECD.RET.VALUE ; * T25142
0633 DIV.CODE = EMP.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0634 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0635 IF ERRMSG # '' THEN                                             <  
0636 GOSUB 91000; GOTO 1200                                          <  

0637 END                                                             <  
0638 *T23278 ^                                                       <  
0639 IF DATE.WORKED > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.DA     IF DATE.WORKED > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.
0640 ERRMSG="WARNING : Employee ":ECD.RET.VALUE:" has been terminat     ERRMSG="WARNING : Employee ":ECD.RET.VALUE:" has been termin
0641 GOSUB 91000                                                        GOSUB 91000
0642 END                                                                END
0643 SCV.REC(4)<1>=EMP.LAST.NAME:", ":EMP.FRST.NAME                     SCV.REC(4)<1>=EMP.LAST.NAME:", ":EMP.FRST.NAME

0644 ECD.NUM=4;ECD.ACTION=5;CALL SCRN.EDIT                           |  ECD.NUM=4; ECD.ACTION=5; CALL SCRN.EDIT
0645 IF EMP # "" THEN                                                   IF EMP # "" THEN
0646 GOSUB 1400                                                         GOSUB 1400
0647 IF TEST.REC # "" THEN                                              IF TEST.REC # "" THEN
0648 SCV.REC(3)<ECD.SCRN.NO> = EMP;TEST.REC = "" ; GOTO 1200         |  SCV.REC(3)<ECD.SCRN.NO> = EMP; TEST.REC = ""; GOTO 1200
0649 END                                                                END
0650 END                                                                END

0651 EMP = ECD.RET.VALUE                                                EMP = ECD.RET.VALUE
0652 IF EMP.STATUS = 'H' THEN RPIC = 'MD4' ELSE RPIC = 'MD2'            IF EMP.STATUS = 'H' THEN RPIC = 'MD4' ELSE RPIC = 'MD2'
0653 1299 *                                                          |  1299 RETURN
0654 RETURN                                                          |  *-----------------------------------------------------------
0655 *-- GET SHIFT WORKED                                               *-- GET SHIFT WORKED
0656 1300 *                                                          |  *-----------------------------------------------------------
0657 ECD.NUM=5                                                       |  1300 ECD.NUM=5
0658 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0659 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN

0658 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0659 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
0660 IF SHIFT # "" THEN                                                 IF SHIFT # "" THEN
0661 GOSUB 1400                                                         GOSUB 1400
0662 IF TEST.REC # "" THEN                                              IF TEST.REC # "" THEN
0663 SCV.REC(5)<ECD.SCRN.NO> = SHIFT;TEST.REC = "" ; GOTO 1300       |  SCV.REC(5)<ECD.SCRN.NO> = SHIFT; TEST.REC = ""; GOTO 1300
0664 END                                                                END
0665 END                                                                END
0666 *CSF 26082  SHIFT = ECD.RET.VALUE Moved down 10 lines.             *CSF 26082  SHIFT = ECD.RET.VALUE Moved down 10 lines.
0667 * MOD 2/18/94 (LMR) FOR EPS EMPLOYEE ONLY                          * MOD 2/18/94 (LMR) FOR EPS EMPLOYEE ONLY

0668 IF EMP.STATUS # "" THEN                                            IF EMP.STATUS # "" THEN
0669 IF EMP.WRK.SCHD<1,ECD.RET.VALUE> = '' THEN                         IF EMP.WRK.SCHD<1,ECD.RET.VALUE> = '' THEN
0670 ERRMSG='Employee not authorized for this shift';GOSUB 91000;GO  |  ERRMSG='Employee not authorized for this shift'; GOSUB 91000
0671 END                                                                END
0672 MATREAD WSS.REC FROM WORK.SHIFT,CONO:"!":EMP.WRK.SCHD<1,ECD.RE     MATREAD WSS.REC FROM WORK.SHIFT,CONO:"!":EMP.WRK.SCHD<1,ECD.
0673 ERRMSG='Invalid work shift schedule code for this employee and  |  ERRMSG='Invalid work shift schedule code for this employee a
0674 END                                                                END
0675 END                                                                END
0676 SHIFT = ECD.RET.VALUE                                              SHIFT = ECD.RET.VALUE

0677 *                                                               <  
0678 END                                                                END
0679 1399 RETURN                                                        1399 RETURN
0680                                                                 >  *-----------------------------------------------------------
0681 *-- CHECK IF FIELD 1,2,3 CHANGED                                   *-- CHECK IF FIELD 1,2,3 CHANGED
0682 1400 *                                                          |  *-----------------------------------------------------------
0683 BEGIN CASE                                                      |  1400 BEGIN CASE

0686 CASE OPT = 2                                                       CASE OPT = 2
0687 TEST.KEY = ECD.RET.VALUE:"*":DATE.WORKED:"*":SHIFT                 TEST.KEY = ECD.RET.VALUE:"*":DATE.WORKED:"*":SHIFT
0688 CASE OPT = 3                                                       CASE OPT = 3
0689 TEST.KEY = EMP:"*":DATE.WORKED:"*":ECD.RET.VALUE                   TEST.KEY = EMP:"*":DATE.WORKED:"*":ECD.RET.VALUE
0690 CASE 1                                                             CASE 1
0691 ERRMSG = "Bad option try again" ; GOSUB 91000 ; GOTO 1499       |  ERRMSG = "Bad option try again"; GOSUB 91000; GOTO 1499
0692 END CASE                                                           END CASE
0693 IF TEST.KEY # NEW.KEY THEN                                         IF TEST.KEY # NEW.KEY THEN
0694 READU TEST.REC FROM DAILY.TIME.MATL,CONO:TEST.KEY ELSE TEST.RE     READU TEST.REC FROM DAILY.TIME.MATL,CONO:TEST.KEY ELSE TEST.
0695 IF TEST.REC # "" THEN                                              IF TEST.REC # "" THEN

0702 END                                                                END
0703 NEW.KEY = TEST.KEY                                                 NEW.KEY = TEST.KEY
0704 END                                                                END
0705 END                                                                END
0706 1499 RETURN                                                        1499 RETURN
0707                                                                 >  *-----------------------------------------------------------
0708 *-- GET MULTI-LINE DATA                                            *-- GET MULTI-LINE DATA
0709 10000 *                                                         |  *-----------------------------------------------------------
0710 GOSUB 50000                                                     |  10000 GOSUB 50000
0711 MAT TEMP.REC=""                                                    MAT TEMP.REC=""

0712                                                                 >  ATTEND.NUM = "" ; * C37621
0713 SLN=BEGIN.PAGE + LINE.SPACE * MOD(REF-1,PAGE.SIZE)                 SLN=BEGIN.PAGE + LINE.SPACE * MOD(REF-1,PAGE.SIZE)
0714 IF MODE # "C" THEN                                                 IF MODE # "C" THEN
0715 P_X  = 0 ; P_Y = SLN ; P_VALUE = REF "R#2" ; P_OPT = "CL"       |  P_X = 0; P_Y = SLN; P_VALUE = REF "R#2"; P_OPT = "CL"
0716 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0717 END                                                                END
0718 IF DTM.STATUS<1,REF> # "" THEN                                     IF DTM.STATUS<1,REF> # "" THEN

0719 SCV.REC(29)<1>="Status:"                                           SCV.REC(29)<1>="Status:"
0720 SCV.REC(30)<1>=DTM.STATUS<1,REF>                                   SCV.REC(30)<1>=DTM.STATUS<1,REF>
0721 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
0722 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
0723 END                                                                END
0724 IF MODE = "C" AND DTM.PMT.FLG<1,REF> # "" THEN PMT.FLG = 1 ELS     IF MODE = "C" AND DTM.PMT.FLG<1,REF> # "" THEN PMT.FLG = 1 E
0725                                                                 >  *-----------------------------------------------------------
0726 *-- GET TRANSACTION TYPE                                           *-- GET TRANSACTION TYPE
0727 10010 *                                                         |  *-----------------------------------------------------------

0728 X=3;Y=SLN;TYP=1;MAXL=1;O.R='O'                                  |  10010 X=3; Y=SLN; TYP=1; MAXL=1; O.R='O'
0729 IF PMT.FLG THEN VALDAT = DTM.TYPE<1,REF> ELSE VALDAT="T":VM:"M  |  *T25146 v
0730 HMSG="Enter (T)ime,(M)aterial,(C)oncurrent jobs,(L)unch & (I)d  |  *  IF PMT.FLG THEN VALDAT = DTM.TYPE<1,REF> ELSE VALDAT="T":
0731                                                                 >  IF PMT.FLG THEN VALDAT = DTM.TYPE<1,REF> ELSE VALDAT="T":VM:
0732                                                                 >  *T25146 ^
0733                                                                 >  *  HMSG="Enter (T)ime,(M)aterial,(C)oncurrent jobs,(L)unch &
0734                                                                 >  HMSG="Enter (T)ime,(M)aterial,(C)oncurrent jobs,(N)on chg,(L

0739 END                                                                END
0740 CALL EDIT.SUB                                                      CALL EDIT.SUB
0741 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
0742 IF VALUE = "C" THEN                                                IF VALUE = "C" THEN
0743 IF DTM.TYPE<1,REF -1> # "T" AND DTM.TYPE<1,REF -1> # "C" THEN      IF DTM.TYPE<1,REF -1> # "T" AND DTM.TYPE<1,REF -1> # "C" THE
0744 ERRMSG = "Concurrent entry must be entered after time entry or  |  ERRMSG = "Concurrent entry must be entered after time entry 
0745 END                                                                END
0746 END                                                                END
0747 TYPE=VALUE                                                         TYPE=VALUE
0748                                                                 >  *T25146 v     PROMPT FOR ATTENDANCE CODE AND VALIDATE

0749                                                                 >  * GET ATTENDANCE CODE FOR TYPE "N"
0750                                                                 >  10015 *
0751                                                                 >  IF TYPE = "N" THEN
0752                                                                 >  ECD.NUM = 59
0753                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0754                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 10010
0755                                                                 >  ATTEND.NUM = ECD.RET.VALUE

0756                                                                 >  MATREAD ATT.REC FROM ATTEND.CODE,CONO:ATTEND.NUM ELSE
0757                                                                 >  ERRMSG = "Attendance Code ":ATTEND.NUM:" not found. Try agai
0758                                                                 >  GOSUB 91000
0759                                                                 >  GOTO 10015
0760                                                                 >  END
0761                                                                 >  END 
0762                                                                 >  *T25146 ^

0763                                                                 >  *-----------------------------------------------------------
0764 *-- GET JOB NUMBER                                                 *-- GET JOB NUMBER
0765 10020 *                                                         |  *-----------------------------------------------------------
0766 BEGIN CASE                                                      |  10020 BEGIN CASE
0767 CASE TYPE="L" OR TYPE="I"                                          CASE TYPE="L" OR TYPE="I"
0768 JOB.NO=""                                                          JOB.NO=""
0769 MAT JOB.REC=""                                                     MAT JOB.REC=""

0769 MAT JOB.REC=""                                                     MAT JOB.REC=""
0770 MAT CUST.REC=""                                                    MAT CUST.REC=""
0771 OSJ.FLG=""                                                         OSJ.FLG=""
0772 JINIT=""                                                           JINIT=""
0773 IF MODE="C" THEN                                                   IF MODE="C" THEN
0774 P_X  = 5 ; P_Y = SLN ; P_VALUE = JOB.NO "L#8" ; P_OPT = ""      |  P_X = 5; P_Y = SLN; P_VALUE = JOB.NO "L#8"; P_OPT = ""
0775 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0776 END                                                                END
0777 CASE 1                                                             CASE 1
0778 X=5;Y=SLN;TYP=1;MAXL=8;O.R='R';HMSG="Enter Job number"          |  X=5; Y=SLN; TYP=1; MAXL=8; O.R='R'; HMSG="Enter Job number"

0779 IF PMT.FLG THEN VALDAT = DTM.JOB<1,REF>                            IF PMT.FLG THEN VALDAT = DTM.JOB<1,REF>
0780 IF DTM.JOB<1,REF> # "" THEN                                        IF DTM.JOB<1,REF> # "" THEN
0781 O.R='O';DEFAULT=DTM.JOB<1,REF>                                  |  O.R='O'; DEFAULT=DTM.JOB<1,REF>
0782 END                                                                END
0783 CALL EDIT.SUB                                                      CALL EDIT.SUB
0784 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
0785 IF TYPE = "C" AND VALUE = DTM.JOB<1,REF-1> THEN                    IF TYPE = "C" AND VALUE = DTM.JOB<1,REF-1> THEN
0786 ERRMSG = "Concurrent must be entered for two different jobs" ;  |  ERRMSG = "Concurrent must be entered for two different jobs"
0787 END                                                                END

0788                                                                 >  *T25146 v
0789                                                                 >  IF TYPE = "N" AND VALUE[1,1] # "X" THEN
0790                                                                 >  ERRMSG = 'Please enter an "X" job number'; GOSUB 91000; GOTO
0791                                                                 >  END
0792                                                                 >  *T25146 ^
0793 JOB.NO=VALUE                                                       JOB.NO=VALUE
0794 OSJ.FLG=""                                                         OSJ.FLG=""

0816 GOTO 10020                                                         GOTO 10020
0817 END                                                                END
0818 END                                                                END
0819 BEGIN CASE                                                         BEGIN CASE
0820 CASE JOB.STATUS<1,1>=9                                             CASE JOB.STATUS<1,1>=9
0821 ERRMSG="Job is cancelled. Try again! ";GOSUB 91000;GOTO 10020   |  ERRMSG="Job is cancelled. Try again! "; GOSUB 91000; GOTO 10
0822 CASE JOB.STATUS<1,1>=7                                             CASE JOB.STATUS<1,1>=7
0823 ERRMSG="Job is ready to purge. Try again! ";GOSUB 91000;GOTO 1  |  ERRMSG="Job is ready to purge. Try again! "; GOSUB 91000; GO
0824 CASE JOB.STATUS<1,1>=8                                             CASE JOB.STATUS<1,1>=8
0825 ERRMSG="Job is purged. Try again! ";GOSUB 91000;GOTO 10020      |  ERRMSG="Job is purged. Try again! "; GOSUB 91000; GOTO 10020

0831 MAT CUST.REC=""                                                    MAT CUST.REC=""
0832 CUST.NAME="???????????????"                                        CUST.NAME="???????????????"
0833 END                                                                END
0834 SCV.REC(29)<1>="Customer:"                                         SCV.REC(29)<1>="Customer:"
0835 SCV.REC(30)<1>=CUST.NAME                                           SCV.REC(30)<1>=CUST.NAME
0836 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
0837 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
0838 END                                                                END
0839 END CASE                                                           END CASE
0840                                                                 >  *-----------------------------------------------------------

0841 *-- GET COST CENTER                                                *-- GET COST CENTER
0842 10030 *                                                         |  *-----------------------------------------------------------
0843 BEGIN CASE                                                      |  10030 BEGIN CASE
0844 CASE TYPE="L" OR TYPE="I"                                          CASE TYPE="L" OR TYPE="I"
0845 CCTR=""                                                            CCTR=""
0846 MAT CCTR.REC=""                                                    MAT CCTR.REC=""
0847 MAT DEPT.REC=""                                                    MAT DEPT.REC=""
0848 MAT DIV.REC=""                                                     MAT DIV.REC=""

0849 IF MODE="C" THEN                                                   IF MODE="C" THEN
0850 P_X  = 14 ; P_Y = SLN ; P_VALUE = CCTR "L#3" ; P_OPT = ""       |  P_X = 14; P_Y = SLN; P_VALUE = CCTR "L#3"; P_OPT = ""
0851 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0852 END                                                                END
0853 CASE 1                                                             CASE 1
0854 BEGIN CASE                                                         BEGIN CASE
0855 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
0856 CCTR=DTM.CCTR<1,REF-1>                                             CCTR=DTM.CCTR<1,REF-1>

0857 P_X  = 14 ; P_Y = SLN ; P_VALUE = CCTR "L#3" ; P_OPT = ""       |  P_X = 14; P_Y = SLN; P_VALUE = CCTR "L#3"; P_OPT = ""
0858 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0859 CASE 1                                                             CASE 1
0860 X=14;Y=SLN;TYP=1;MAXL=3;O.R='R';HMSG="Enter Cost Center worked  |  X=14; Y=SLN; TYP=1; MAXL=3; O.R='R'; HMSG="Enter Cost Center
0861 IF PMT.FLG THEN VALDAT = DTM.CCTR<1,REF>                           IF PMT.FLG THEN VALDAT = DTM.CCTR<1,REF>
0862 IF DTM.CCTR<1,REF> # "" THEN                                       IF DTM.CCTR<1,REF> # "" THEN
0863 O.R='O';DEFAULT=DTM.CCTR<1,REF>                                 |  O.R='O'; DEFAULT=DTM.CCTR<1,REF>

0903 FOR DV=2 TO DCNT                                                   FOR DV=2 TO DCNT
0904 ECD.VALDAT=ECD.VALDAT:",":DEPT.DIV<1,DV>                           ECD.VALDAT=ECD.VALDAT:",":DEPT.DIV<1,DV>
0905 IF LEN(ECD.HMSG<1,1,DVS>) > 70 THEN DVS=DVS+1                      IF LEN(ECD.HMSG<1,1,DVS>) > 70 THEN DVS=DVS+1
0906 ECD.HMSG<1,1,DVS>=ECD.HMSG<1,1,DVS>:", ":DEPT.DIV<1,DV>            ECD.HMSG<1,1,DVS>=ECD.HMSG<1,1,DVS>:", ":DEPT.DIV<1,DV>
0907 NEXT DV                                                            NEXT DV
0908 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
0909 IF ECD.RET.VALUE="END" THEN GOTO 10030                             IF ECD.RET.VALUE="END" THEN GOTO 10030
0910 JOB.DIV=ECD.RET.VALUE                                              JOB.DIV=ECD.RET.VALUE
0911 END CASE                                                           END CASE
0912 END                                                                END

0920 GOSUB 91000                                                        GOSUB 91000
0921 GOTO 10030                                                         GOTO 10030
0922 END                                                                END
0923 SCV.REC(29)<1>="Cost Center:"                                      SCV.REC(29)<1>="Cost Center:"
0924 SCV.REC(30)<1>=CCTR.DESC                                           SCV.REC(30)<1>=CCTR.DESC
0925 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
0926 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
0927 END CASE                                                           END CASE
0928                                                                 >  *-----------------------------------------------------------
0929 *-- GET OPERATION                                                  *-- GET OPERATION

0930                                                                 >  *-----------------------------------------------------------
0931 10040 *                                                            10040 *
0932 ORIG.OPER = DTM.OPER<1,REF> ;*T26097                               ORIG.OPER = DTM.OPER<1,REF> ;*T26097
0933 BEGIN CASE                                                         BEGIN CASE
0934 CASE TYPE="M" OR TYPE="L" OR TYPE="I"                              CASE TYPE="M" OR TYPE="L" OR TYPE="I"
0935 OPER=""                                                            OPER=""
0936 MAT OPER.REC=""                                                    MAT OPER.REC=""

0937 IF MODE="C" THEN                                                   IF MODE="C" THEN
0938 P_X  = 18 ; P_Y = SLN ; P_VALUE = OPER "L#4" ; P_OPT = ""       |  P_X = 18; P_Y = SLN; P_VALUE = OPER "L#4"; P_OPT = ""
0939 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0940 END                                                                END
0941 CASE 1                                                             CASE 1
0942 BEGIN CASE                                                         BEGIN CASE
0943 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
0944 OPER=DTM.OPER<1,REF-1>                                             OPER=DTM.OPER<1,REF-1>

0945 P_X  = 18 ; P_Y = SLN ; P_VALUE = OPER "L#4" ; P_OPT = ""       |  P_X = 18; P_Y = SLN; P_VALUE = OPER "L#4"; P_OPT = ""
0946 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0947 CASE 1                                                             CASE 1
0948 X=18;Y=SLN;TYP=1;MAXL=4;O.R='R';HMSG="Enter Operation worked."  |  X=18; Y=SLN; TYP=1; MAXL=4; O.R='R'; HMSG="Enter Operation w
0949 IF PMT.FLG THEN VALDAT = DTM.OPER<1,REF>                           IF PMT.FLG THEN VALDAT = DTM.OPER<1,REF>
0950 IF DTM.OPER<1,REF> # "" THEN                                       IF DTM.OPER<1,REF> # "" THEN
0951 O.R='O';DEFAULT=DTM.OPER<1,REF>                                 |  O.R='O'; DEFAULT=DTM.OPER<1,REF>

0960 * CASE 1                                                           * CASE 1
0961 * ERRMSG="Invalid operation for specified job. Try again! "        * ERRMSG="Invalid operation for specified job. Try again! "
0962 * GOSUB 91000                                                      * GOSUB 91000
0963 * GOTO 10040                                                       * GOTO 10040
0964 * END CASE                                                         * END CASE
0965                                                                 >  * T26941 v
0966                                                                 >  IF TYPE = 'T' AND (OPER GE '410' AND OPER LE '417') THEN
0967                                                                 >  IF OPER # '416' THEN
0968                                                                 >  ERRMSG = 'Cannot associate this operation with a Time transa
0969                                                                 >  GOSUB 91000

0970                                                                 >  GOTO 10040
0971                                                                 >  END
0972                                                                 >  END
0973                                                                 >  IF TYPE = 'N' AND (OPER LT '400' OR OPER GT '417') THEN
0974                                                                 >  ERRMSG = 'Cannot associate this operation with a Non-Chargea
0975                                                                 >  GOSUB 91000
0976                                                                 >  GOTO 10040

0977                                                                 >  END
0978                                                                 >  * T26941 ^
0979 LOCATE OPER IN CCTR.OPER<1>,1 SETTING OP ELSE                      LOCATE OPER IN CCTR.OPER<1>,1 SETTING OP ELSE
0980 ERRMSG="Invalid operation for specified cost center. Try again     ERRMSG="Invalid operation for specified cost center. Try aga
0981 GOSUB 91000                                                        GOSUB 91000
0982 GOTO 10040                                                         GOTO 10040
0983 END                                                                END

0986 GOSUB 91000                                                        GOSUB 91000
0987 GOTO 10040                                                         GOTO 10040
0988 END                                                                END
0989 SCV.REC(29)<1>="Operation:"                                        SCV.REC(29)<1>="Operation:"
0990 SCV.REC(30)<1>=OPER.DESC                                           SCV.REC(30)<1>=OPER.DESC
0991 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
0992 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
0993 END CASE                                                           END CASE
0994 AP.FLG=""                                                          AP.FLG=""
0995 IF OPER.SF.PROMPT<1,1>='N' OR OPER.SF.PROMPT<1>='' THEN AP.FLG     IF OPER.SF.PROMPT<1,1>='N' OR OPER.SF.PROMPT<1>='' THEN AP.F

0996 SCV.REC(24)<1,REF>=AP.FLG<1,REF>                                   SCV.REC(24)<1,REF>=AP.FLG<1,REF>
0997 ECD.NUM=24;ECD.SUB.NUM=REF;ECD.ACTION=5;CALL SCRN.EDIT          |  ECD.NUM=24; ECD.SUB.NUM=REF; ECD.ACTION=5; CALL SCRN.EDIT
0998 *T26097 v                                                          *T26097 v
0999 IF ORIG.OPER # '' AND OPER # ORIG.OPER THEN                        IF ORIG.OPER # '' AND OPER # ORIG.OPER THEN
1000 DTM.ADD.PRMPT.CD<1,REF> = ''                                       DTM.ADD.PRMPT.CD<1,REF> = ''
1001 DTM.ADD.RESP<1,REF> = ''                                           DTM.ADD.RESP<1,REF> = ''
1002 END                                                                END
1003 *T26097 ^                                                          *T26097 ^

1004                                                                 >  *-----------------------------------------------------------
1005 *-- GET JOB CLASS                                                  *-- GET JOB CLASS
1006 10045 *                                                         |  *-----------------------------------------------------------
1007 JOBCL=""                                                        |  10045 JOBCL=""
1008 JOBRATE=""                                                         JOBRATE=""
1009 BEGIN CASE                                                         BEGIN CASE
1010 CASE TYPE="M"                                                      CASE TYPE="M"

1011 GOTO 10050                                                         GOTO 10050
1012 CASE TYPE="L" OR TYPE="I"                                       |  * C32334
1013                                                                 >  *         CASE TYPE="L" OR TYPE="I"
1014                                                                 >  CASE TYPE = "I"
1015 JOBCL=EMP.JOB.CLASS                                                JOBCL=EMP.JOB.CLASS
1016 *  CASE TYPE="T" OR TYPE="C"                                       *       CASE TYPE="T" OR TYPE="C"
1017 CASE TYPE="T" OR TYPE="C" AND EMP.STATUS # ""                   |  *C32334 CASE TYPE="T" OR TYPE="C" AND EMP.STATUS # ""
1018 X=23;Y=SLN;TYP=3;MAXL=3;MINL=1;FILL.CHR=0;O.R='O';HMSG="Enter   |  *T25146 v

1019 IF DTM.CLASS.CD<1,REF> # '' THEN O.R='O';DEFAULT=DTM.CLASS.CD<  |  *     CASE TYPE="L" OR TYPE="T" OR TYPE="C" AND EMP.STATUS #
1020                                                                 >  CASE TYPE="L" OR TYPE="T" OR TYPE="N" OR TYPE="C" AND EMP.ST
1021                                                                 >  *T25146 ^
1022                                                                 >  *C32334
1023                                                                 >  X=23; Y=SLN; TYP=3; MAXL=3; MINL=1; FILL.CHR=0; O.R='O'; HMS
1024                                                                 >  IF DTM.CLASS.CD<1,REF> # '' THEN O.R='O'; DEFAULT=DTM.CLASS.
1025 CALL EDIT.SUB                                                      CALL EDIT.SUB

1024                                                                 >  IF DTM.CLASS.CD<1,REF> # '' THEN O.R='O'; DEFAULT=DTM.CLASS.
1025 CALL EDIT.SUB                                                      CALL EDIT.SUB
1026 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1027 JOBCL=VALUE                                                        JOBCL=VALUE
1028 END CASE                                                           END CASE
1029 P_X  = 23 ; P_Y = SLN ; P_VALUE = JOBCL'L#3' ; P_OPT = ""       |  P_X = 23; P_Y = SLN; P_VALUE = JOBCL'L#3'; P_OPT = ""
1030 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1031                                                                 >  *T25142 v
1032                                                                 >  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,EMP.ID,DATE.WORKED,JO
1033                                                                 >  *T25142 ^

1032                                                                 >  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,EMP.ID,DATE.WORKED,JO
1033                                                                 >  *T25142 ^
1034 BEGIN CASE                                                         BEGIN CASE
1035 CASE JOBCL = EMP.JOB.CLASS                                         CASE JOBCL = EMP.JOB.CLASS
1036 JOBRATE=EMP.JOB.CL.RATE                                            JOBRATE=EMP.JOB.CL.RATE
1037 *   PRINT @(27,SLN):OCONV(JOBRATE,'MD4')'R#7'                   |  *T25142 v
1038 IF RPIC = 'MD4' THEN                                            |  *        GOTO 10050
1039 P_VALUE = OCONV(JOBRATE,'MD4')'R#7'                             |  GOTO 10046
1040 END ELSE                                                        |  *T25142 ^
1041 P_VALUE = OCONV(JOBRATE/100,RPIC)'R#7'                          <  

1042 END                                                             <  
1043 P_X  = 27 ; P_Y = SLN; P_OPT = ""                               <  
1044 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
1045 *   IF EMP.STATUS='S' THEN P_VALUE = OCONV(JOBRATE/100,'MD2')'  <  
1046 GOTO 10050                                                      <  
1047 CASE 1                                                             CASE 1
1048 LOCATE JOBCL IN EMP.VALID.CLASS<1>,1 SETTING SFC ELSE              LOCATE JOBCL IN EMP.VALID.CLASS<1>,1 SETTING SFC ELSE

1049 ERRMSG="Unauthorized job classification code"                      ERRMSG="Unauthorized job classification code"
1050 GOSUB 91000                                                        GOSUB 91000
1051 GOTO 10045                                                         GOTO 10045
1052 END                                                                END
1053 JOBRATE=EMP.VAL.CL.RATE<1,SFC>                                     JOBRATE=EMP.VAL.CL.RATE<1,SFC>
1054 *   PRINT @(27,SLN):OCONV(JOBRATE,'MD4')'R#7'                   |  IF EMP.STATUS='S' THEN P_VALUE = OCONV(JOBRATE/100,'MD2')'R#
1055 IF RPIC = 'MD4' THEN                                            <  
1056 P_VALUE = OCONV(JOBRATE,'MD4')'R#7'                             <  
1057 END ELSE                                                        <  
1058 P_VALUE = OCONV(JOBRATE/100,RPIC)'R#7'                          <  

1059 END                                                             <  
1060 P_X  = 27 ; P_Y = SLN; P_OPT = ""                               <  
1061 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
1062 *   IF EMP.STATUS='S' THEN P_VALUE = OCONV(JOBRATE/100,'MD2')'  <  
1063 BEGIN CASE                                                         BEGIN CASE
1064 CASE WSS.TRN.LOW="N" AND JOBRATE < EMP.JOB.CL.RATE                 CASE WSS.TRN.LOW="N" AND JOBRATE < EMP.JOB.CL.RATE
1065 ERRMSG="Employee can not work at lower job class";GOSUB 91000   |  ERRMSG="Employee can not work at lower job class"; GOSUB 910

1066 GOTO 10045                                                         GOTO 10045
1067 CASE WSS.TRN.LPAY="N" AND JOBRATE < EMP.JOB.CL.RATE                CASE WSS.TRN.LPAY="N" AND JOBRATE < EMP.JOB.CL.RATE
1068 ERRMSG="Employee can work at lower job class but be paid to ho  |  ERRMSG="Employee can work at lower job class but be paid to 
1069 JOBRATE=EMP.JOB.CL.RATE                                            JOBRATE=EMP.JOB.CL.RATE
1070 CASE WSS.TRN.HGH="N" AND JOBRATE > EMP.JOB.CL.RATE                 CASE WSS.TRN.HGH="N" AND JOBRATE > EMP.JOB.CL.RATE
1071 ERRMSG="Employee can not work at higher job class";GOSUB 91000  |  ERRMSG="Employee can not work at higher job class"; GOSUB 91
1072 CASE WSS.TRN.HPAY="N" AND JOBRATE > EMP.JOB.CL.RATE                CASE WSS.TRN.HPAY="N" AND JOBRATE > EMP.JOB.CL.RATE
1073 ERRMSG="Employee may work at higher job class but be paid at h  |  ERRMSG="Employee may work at higher job class but be paid at
1074 JOBRATE=EMP.JOB.CL.RATE                                            JOBRATE=EMP.JOB.CL.RATE

1075 END CASE                                                           END CASE
1076 *   PRINT @(27,SLN):OCONV(JOBRATE,'MD4')'R#7'                   <  
1077 IF RPIC = 'MD4' THEN                                            <  
1078 P_VALUE = OCONV(JOBRATE,'MD4')'R#7'                             <  
1079 END ELSE                                                        <  
1080 P_VALUE = OCONV(JOBRATE/100,RPIC)'R#7'                          <  
1081 END                                                             <  
1082 P_X  = 27 ; P_Y = SLN; P_OPT = ""                               <  

1083 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
1084 *   IF EMP.STATUS='S' THEN P_VALUE = OCONV(JOBRATE/100,'MD2')'  <  
1085 END CASE                                                           END CASE
1086                                                                 >  *T25142 v
1087                                                                 >  10046 *
1088                                                                 >  *   SCV.REC(55)<1>=JOBRATE
1089                                                                 >  *   ECD.NUM=55; ECD.ACTION=5; CALL SCRN.EDIT

1090                                                                 >  *T25142 ^
1091                                                                 >  *-----------------------------------------------------------
1092 *-- GET TIME CODE                                                  *-- GET TIME CODE
1093 10050 *                                                         |  *-----------------------------------------------------------
1094 BEGIN CASE                                                      |  10050 BEGIN CASE
1095 CASE TYPE="M" OR TYPE="L" OR TYPE="I"                              CASE TYPE="M" OR TYPE="L" OR TYPE="I"
1096 TCODE=""                                                           TCODE=""

1097 P_X  = 35 ; P_Y = SLN ; P_VALUE = TCODE "L#2" ; P_OPT = ""      |  P_X = 35; P_Y = SLN; P_VALUE = TCODE "L#2"; P_OPT = ""
1098 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1099 CASE 1                                                             CASE 1
1100 BEGIN CASE                                                         BEGIN CASE
1101 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
1102 TCODE=DTM.TIME.CODE<1,REF-1>                                       TCODE=DTM.TIME.CODE<1,REF-1>
1103 P_X  = 35 ; P_Y = SLN ; P_VALUE = TCODE "L#2" ; P_OPT = ""      |  P_X = 35; P_Y = SLN; P_VALUE = TCODE "L#2"; P_OPT = ""

1104 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1105 CASE 1                                                             CASE 1
1106 X=35;Y=SLN;TYP=1;MAXL=2;O.R='O';HMSG="Enter Time Code: 01 = Re  |  * T26940 v
1107 IF DTM.TIME.CODE<1,REF> # "" THEN                               |  *              X=35; Y=SLN; TYP=1; MAXL=2; O.R='O'; HMSG="En
1108 DEFAULT=DTM.TIME.CODE<1,REF>                                    |  *              IF DTM.TIME.CODE<1,REF> # "" THEN
1109 END ELSE                                                        |  *                 DEFAULT=DTM.TIME.CODE<1,REF>
1110 DEFAULT="01"                                                    |  *              END ELSE
1111 END                                                             |  *                 DEFAULT="01"
1112 CALL EDIT.SUB                                                   |  *              END

1113 IF VALUE='END' THEN GOTO 10990                                  |  *              CALL EDIT.SUB
1114 TCODE=VALUE                                                     |  *              IF VALUE='END' THEN GOTO 10990
1115                                                                 >  *              TCODE=VALUE
1116                                                                 >  TCODE = '01'
1117                                                                 >  P_X = 35; P_Y = SLN; P_VALUE = TCODE "L#2"; P_OPT = ""
1118                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1119                                                                 >  * T26940 ^

1122 ERRMSG="Invalid time code. Try again! "                            ERRMSG="Invalid time code. Try again! "
1123 GOSUB 91000                                                        GOSUB 91000
1124 GOTO 10050                                                         GOTO 10050
1125 END                                                                END
1126 END CASE                                                           END CASE
1127                                                                 >  *-----------------------------------------------------------
1128 *-- GET JOB TYPE                                                   *-- GET JOB TYPE
1129 10060 *                                                         |  *-----------------------------------------------------------
1130 BEGIN CASE                                                      |  10060 BEGIN CASE
1131 CASE TYPE="L" OR TYPE="I"                                          CASE TYPE="L" OR TYPE="I"

1130 BEGIN CASE                                                      |  10060 BEGIN CASE
1131 CASE TYPE="L" OR TYPE="I"                                          CASE TYPE="L" OR TYPE="I"
1132 JTYPE=""                                                           JTYPE=""
1133 SPOIL.CODE=""                                                      SPOIL.CODE=""
1134 IF MODE="C" THEN                                                   IF MODE="C" THEN
1135 P_X  = 38 ; P_Y = SLN ; P_VALUE = JTYPE "L#1" ; P_OPT = ""      |  P_X = 38; P_Y = SLN; P_VALUE = JTYPE "L#1"; P_OPT = ""
1136 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1137 END                                                                END
1138 CASE 1                                                             CASE 1
1139 SPOIL.CODE=""                                                      SPOIL.CODE=""

1138 CASE 1                                                             CASE 1
1139 SPOIL.CODE=""                                                      SPOIL.CODE=""
1140 BEGIN CASE                                                         BEGIN CASE
1141 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
1142 JTYPE=DTM.JOB.TYPE<1,REF-1>                                        JTYPE=DTM.JOB.TYPE<1,REF-1>
1143 P_X  = 38 ; P_Y = SLN ; P_VALUE = JTYPE "L#1" ; P_OPT = ""      |  P_X = 38; P_Y = SLN; P_VALUE = JTYPE "L#1"; P_OPT = ""
1144 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1145 *CASE OPER[1,1]="9"                                                *CASE OPER[1,1]="9"
1146 * JTYPE="N"                                                        * JTYPE="N"
1147 * PRINT @(38,SLN):JTYPE "L#1"                                      * PRINT @(38,SLN):JTYPE "L#1"

1148 CASE 1                                                             CASE 1
1149 X=38;Y=SLN;TYP=1;MAXL=1;O.R='O';HMSG="Enter Job Type: (R)eg, (  |  *T24092 v
1150 IF PMT.FLG THEN VALDAT = DTM.JOB.TYPE<1,REF> ELSE VALDAT = "R"  |  *               X=38; Y=SLN; TYP=1; MAXL=1; O.R='O'; HMSG="E
1151 IF DTM.JOB.TYPE<1,REF> # "" THEN                                |  *               IF PMT.FLG THEN VALDAT = DTM.JOB.TYPE<1,REF>
1152 DEFAULT = DTM.JOB.TYPE<1,REF>                                   |  *               IF DTM.JOB.TYPE<1,REF> # "" THEN
1153 END ELSE                                                        |  *                  DEFAULT = DTM.JOB.TYPE<1,REF>
1154 IF JOB.TYPE # "" THEN                                           |  *               END ELSE
1155 DEFAULT=JOB.TYPE                                                |  *                  IF JOB.TYPE # "" THEN

1156 END ELSE                                                        |  *                     DEFAULT=JOB.TYPE
1157 DEFAULT="R"                                                     |  *                  END ELSE
1158 END                                                             |  *                     DEFAULT="R"
1159 END                                                             |  *                  END
1160 CALL EDIT.SUB                                                   |  *               END
1161                                                                 >  *                CALL EDIT.SUB
1162                                                                 >  *

1163                                                                 >  VALUE=JOB.TYPE
1164                                                                 >  P_X = 38; P_Y = SLN; P_VALUE = VALUE "L#1"; P_OPT = ""
1165                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1166                                                                 >  *T24092 ^                  
1167 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1168 JTYPE=VALUE                                                        JTYPE=VALUE
1169 END CASE                                                           END CASE

1174 GOTO 10020                                                         GOTO 10020
1175 END ELSE                                                           END ELSE
1176 GOTO 10060                                                         GOTO 10060
1177 END                                                                END
1178 END                                                                END
1179                                                                 >  *-----------------------------------------------------------
1180 *-- GET SPOILAGE CODE                                              *-- GET SPOILAGE CODE
1181 10065 *                                                         |  *-----------------------------------------------------------
1182 IF JTYPE="S" AND CO.SPOIL.FLG="Y" THEN                          |  10065 IF JTYPE="S" AND CO.SPOIL.FLG="Y" THEN
1183 ECD.NUM=34                                                         ECD.NUM=34

1182 IF JTYPE="S" AND CO.SPOIL.FLG="Y" THEN                          |  10065 IF JTYPE="S" AND CO.SPOIL.FLG="Y" THEN
1183 ECD.NUM=34                                                         ECD.NUM=34
1184 IF DTM.SPOIL.CODE<1,REF> # "" THEN                                 IF DTM.SPOIL.CODE<1,REF> # "" THEN
1185 ECD.O.R="O"; ECD.DEFAULT=DTM.SPOIL.CODE<1,REF>                     ECD.O.R="O"; ECD.DEFAULT=DTM.SPOIL.CODE<1,REF>
1186 END                                                                END
1187 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
1188 IF ECD.RET.VALUE="END" THEN GOTO 10060                             IF ECD.RET.VALUE="END" THEN GOTO 10060
1189 SPOIL.CODE=ECD.RET.VALUE                                           SPOIL.CODE=ECD.RET.VALUE
1190 READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:SPOIL.CODE ELSE      READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:SPOIL.CODE ELS
1191 ERRMSG="Invalid spoilage code. Try again! "                        ERRMSG="Invalid spoilage code. Try again! "

1192 GOSUB 91000                                                        GOSUB 91000
1193 GOTO 10065                                                         GOTO 10065
1194 END                                                                END
1195 SCV.REC(29)<1>="Spoilage Cd:"                                      SCV.REC(29)<1>="Spoilage Cd:"
1196 SCV.REC(30)<1>=SPOIL.CODE:" - ":SPOIL.CODE.DESC                    SCV.REC(30)<1>=SPOIL.CODE:" - ":SPOIL.CODE.DESC
1197 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
1198 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
1199 P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"               |  P_X = 0; P_Y = 21; P_VALUE = ""; P_OPT = "CL"
1200 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1201 END                                                                END

1202 END CASE                                                           END CASE
1203                                                                 >  *-----------------------------------------------------------
1204 *-- GET START TIME                                                 *-- GET START TIME
1205                                                                 >  *-----------------------------------------------------------
1206 10070 *                                                            10070 *
1207 BEGIN CASE                                                         BEGIN CASE
1208 CASE TYPE="M"                                                      CASE TYPE="M"
1209 STRT=""                                                            STRT=""

1210 IF MODE="C" THEN                                                   IF MODE="C" THEN
1211 P_X  = 40 ; P_Y = SLN ; P_VALUE = STRT "R#4" ; P_OPT = ""       |  P_X = 40; P_Y = SLN; P_VALUE = STRT "R#4"; P_OPT = ""
1212 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1213 END                                                                END
1214 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
1215 STRT=DTM.TIME.ST<1,REF-1>                                          STRT=DTM.TIME.ST<1,REF-1>
1216 P_X  = 40 ; P_Y = SLN ; P_VALUE = STRT "R#4" ; P_OPT = ""       |  P_X = 40; P_Y = SLN; P_VALUE = STRT "R#4"; P_OPT = ""
1217 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1218 CASE 1                                                             CASE 1
1219 X=40;Y=SLN;TYP=3;MINL=3;MAXL=4;O.R='R';MINV="0000";MAXV="2359"  |  X=40; Y=SLN; TYP=3; MINL=3; MAXL=4; O.R='R'; MINV="0000"; MA
1220 HMSG="Enter operation start time HHMM."                            HMSG="Enter operation start time HHMM."
1221 IF DTM.TIME.ST<1,REF>='' AND DTM.TIME<1,REF-1> # '' THEN           IF DTM.TIME.ST<1,REF>='' AND DTM.TIME<1,REF-1> # '' THEN
1222 DEFAULT=DTM.TIME<1,REF-1>; O.R = 'O'                               DEFAULT=DTM.TIME<1,REF-1>; O.R = 'O'
1223 END ELSE                                                           END ELSE
1224 DEFAULT='' ; O.R = 'R'                                          |  DEFAULT=''; O.R = 'R'
1225 END                                                                END

1226 IF DTM.TIME.ST<1,REF> # "" THEN                                    IF DTM.TIME.ST<1,REF> # "" THEN
1227 O.R='O';DEFAULT=DTM.TIME.ST<1,REF>                              |  O.R='O'; DEFAULT=DTM.TIME.ST<1,REF>
1228 END                                                                END
1229 CALL EDIT.SUB                                                      CALL EDIT.SUB
1230 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1231 STRT=VALUE                                                         STRT=VALUE
1232 IF MOD(STRT,100) > 59 THEN                                         IF MOD(STRT,100) > 59 THEN
1233 ERRMSG="Invalid format. Try again! "                               ERRMSG="Invalid format. Try again! "

1233 ERRMSG="Invalid format. Try again! "                               ERRMSG="Invalid format. Try again! "
1234 GOSUB 91000                                                        GOSUB 91000
1235 GOTO 10070                                                         GOTO 10070
1236 END                                                                END
1237 END CASE                                                           END CASE
1238                                                                 >  *-----------------------------------------------------------
1239 *-- GET STOP TIME                                                  *-- GET STOP TIME
1240 10080 *                                                         |  *-----------------------------------------------------------
1241 OPCMP=''                                                        |  10080 OPCMP=''
1242 BEGIN CASE                                                         BEGIN CASE

1241 OPCMP=''                                                        |  10080 OPCMP=''
1242 BEGIN CASE                                                         BEGIN CASE
1243 CASE TYPE="M"                                                      CASE TYPE="M"
1244 STPT=""                                                            STPT=""
1245 IF MODE="C" THEN                                                   IF MODE="C" THEN
1246 P_X  = 45 ; P_Y = SLN ; P_VALUE = STPT "R#4" ; P_OPT = ""       |  P_X = 45; P_Y = SLN; P_VALUE = STPT "R#4"; P_OPT = ""
1247 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1248 END                                                                END
1249 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
1250 STPT=DTM.TIME<1,REF-1>                                             STPT=DTM.TIME<1,REF-1>

1251 P_X  = 45 ; P_Y = SLN ; P_VALUE = STPT "R#4" ; P_OPT = ""       |  P_X = 45; P_Y = SLN; P_VALUE = STPT "R#4"; P_OPT = ""
1252 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1253 CASE 1                                                             CASE 1
1254 X=45;Y=SLN;TYP=3;MINL=3;MAXL=4;MINV="0000";MAXV="2359";O.R='R'  |  X=45; Y=SLN; TYP=3; MINL=3; MAXL=4; MINV="0000"; MAXV="2359"
1255 HMSG="Enter operation stop time HHMM."                             HMSG="Enter operation stop time HHMM."
1256 IF DTM.TIME<1,REF> # "" THEN                                       IF DTM.TIME<1,REF> # "" THEN
1257 O.R='O';DEFAULT=DTM.TIME<1,REF>                                 |  O.R='O'; DEFAULT=DTM.TIME<1,REF>

1263 ERRMSG="Invalid format. Try again! "                               ERRMSG="Invalid format. Try again! "
1264 GOSUB 91000                                                        GOSUB 91000
1265 GOTO 10080                                                         GOTO 10080
1266 END                                                                END
1267 IF CO.PSS="Y" OR CO.PSS="T" THEN                                   IF CO.PSS="Y" OR CO.PSS="T" THEN
1268 X=50;Y=SLN;TYP=8                                                |  X=50; Y=SLN; TYP=8
1269 HMSG="Operation complete (Y/N)."                                   HMSG="Operation complete (Y/N)."
1270 DEFAULT=DTM.OPER.COMPLETE<1,REF>                                   DEFAULT=DTM.OPER.COMPLETE<1,REF>
1271 IF DEFAULT="Y" OR DEFAULT="N" THEN O.R='O'                         IF DEFAULT="Y" OR DEFAULT="N" THEN O.R='O'
1272 CALL EDIT.SUB                                                      CALL EDIT.SUB

1272 CALL EDIT.SUB                                                      CALL EDIT.SUB
1273 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1274 OPCMP=VALUE                                                        OPCMP=VALUE
1275 END                                                                END
1276 END CASE                                                           END CASE
1277 *                                                               |  *-----------------------------------------------------------
1278 *---- GET ADDITIONAL PROMPT FOR OPERATION                       |  *-- GET ADDITIONAL PROMPT FOR OPERATION
1279 *                                                               |  *-----------------------------------------------------------
1280 10085 *                                                         |  10085 START.CNT=''; STOP.CNT=''; WIDTH=''
1281 START.CNT='';STOP.CNT='';WIDTH=''                               |  AP.RESP=''; AP.CODES=''

1282 AP.RESP='';AP.CODES=''                                          |  LVL=''; PART=1; FND=0
1283 LVL='';PART=1;FND=0                                             <  
1284 IF AP.FLG<1,REF>='Y' THEN                                          IF AP.FLG<1,REF>='Y' THEN
1285 AP.RESP='';AP.CODES=''                                          |  AP.RESP=''; AP.CODES=''
1286 LVL='';PART=1;FND=0                                             |  LVL=''; PART=1; FND=0
1287 AP.CNT=DCOUNT(OPER.SF.PROMPT<1>,VM)                                AP.CNT=DCOUNT(OPER.SF.PROMPT<1>,VM)
1288 FOR AP=1 TO AP.CNT                                                 FOR AP=1 TO AP.CNT

1290 MAT SFP.REC=''                                                     MAT SFP.REC=''
1291 ERRMSG = 'ADDITIONAL PROMPT ':OPER.SF.PROMPT<1,AP>:' DOESNOT E     ERRMSG = 'ADDITIONAL PROMPT ':OPER.SF.PROMPT<1,AP>:' DOESNOT
1292 GOSUB 91000                                                        GOSUB 91000
1293 GOTO 10087                                                         GOTO 10087
1294 END                                                                END
1295 P_X  = 0 ; P_Y = 19 ; P_VALUE = "" ; P_OPT = "CL"               |  P_X = 0; P_Y = 19; P_VALUE = ""; P_OPT = "CL"
1296 P_X  := AM:0 ; P_Y := AM:19 ; P_VALUE := AM:SFP.PROMPT          |  P_X := AM:0; P_Y := AM:19; P_VALUE := AM:SFP.PROMPT
1297 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1298 *                                                                  *
1299 TYP=SFP.RESP.TYPE                                                  TYP=SFP.RESP.TYPE

1314 END                                                                END
1315 END ELSE                                                           END ELSE
1316 O.R='R'                                                            O.R='R'
1317 DEFAULT=''                                                         DEFAULT=''
1318 END                                                                END
1319 X=23;Y=19                                                       |  X=23; Y=19
1320 CALL EDIT.SUB                                                      CALL EDIT.SUB
1321 IF TYP > 0 AND TYP < 4 THEN                                        IF TYP > 0 AND TYP < 4 THEN
1322 IF VALUE NE "END" THEN                                             IF VALUE NE "END" THEN
1323 IF LEN(VALUE) > SFP.RESP.LEN THEN                                  IF LEN(VALUE) > SFP.RESP.LEN THEN

1328 END                                                                END
1329 END                                                                END
1330 END                                                                END
1331 IF VALUE NE "END" THEN AP.RESP<1,REF,AP>=VALUE ELSE GOTO 10990     IF VALUE NE "END" THEN AP.RESP<1,REF,AP>=VALUE ELSE GOTO 109
1332 AP.CODES<1,REF,AP>=OPER.SF.PROMPT<1,AP>                            AP.CODES<1,REF,AP>=OPER.SF.PROMPT<1,AP>
1333 *                                                               |  10087 NEXT AP
1334 10087 *                                                         |  P_X = 0; P_Y = 19; P_VALUE = ""; P_OPT = "CL"
1335 *                                                               <  
1336 NEXT AP                                                         <  
1337 P_X  = 0 ; P_Y = 19 ; P_VALUE = "" ; P_OPT = "CL"               <  

1338 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1339 END                                                                END
1340                                                                 >  *-----------------------------------------------------------
1341 *-- GET PRODUCTION QUANTITY                                        *-- GET PRODUCTION QUANTITY
1342 10090 *                                                         |  *-----------------------------------------------------------
1343 BEGIN CASE                                                      |  10090 BEGIN CASE
1344 CASE TYPE="M" OR TYPE="L" OR TYPE="I"                              CASE TYPE="M" OR TYPE="L" OR TYPE="I"
1345 IMP=""                                                             IMP=""
1346 IF MODE="C" THEN                                                   IF MODE="C" THEN

1347 P_X  = 52 ; P_Y = SLN ; P_VALUE = IMP "R#8" ; P_OPT = ""        |  P_X = 52; P_Y = SLN; P_VALUE = IMP "R#8"; P_OPT = ""
1348 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1349 END                                                                END
1350 CASE CCTR.OPER.TYPE<1,OP>="V"                                      CASE CCTR.OPER.TYPE<1,OP>="V"
1351 X=52;Y=SLN;TYP=3;MAXL=8;JUSTIFY='R';MINV=0;MAXV=99999999        |  X=52; Y=SLN; TYP=3; MAXL=8; JUSTIFY='R'; MINV=0; MAXV=999999
1352 HMSG="Enter quantity produced."                                    HMSG="Enter quantity produced."
1353 IF TYPE = "C" THEN O.R="O"                                         IF TYPE = "C" THEN O.R="O"

1354 IF DTM.IMP<1,REF> # "" THEN                                        IF DTM.IMP<1,REF> # "" THEN
1355 O.R='O';DEFAULT=DTM.IMP<1,REF>/100                              |  O.R='O'; DEFAULT=DTM.IMP<1,REF>/100
1356 END                                                                END
1357 CALL EDIT.SUB                                                      CALL EDIT.SUB
1358 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1359 IMP=VALUE                                                          IMP=VALUE
1360 CASE CCTR.OPER.TYPE<1,OP>="U"                                      CASE CCTR.OPER.TYPE<1,OP>="U"
1361 X=54;Y=SLN;TYP=4;MAXL=8;SCALER=2;JUSTIFY='R';MINV=0;MAXV=99999  |  X=54; Y=SLN; TYP=4; MAXL=8; SCALER=2; JUSTIFY='R'; MINV=0; M

1360 CASE CCTR.OPER.TYPE<1,OP>="U"                                      CASE CCTR.OPER.TYPE<1,OP>="U"
1361 X=54;Y=SLN;TYP=4;MAXL=8;SCALER=2;JUSTIFY='R';MINV=0;MAXV=99999  |  X=54; Y=SLN; TYP=4; MAXL=8; SCALER=2; JUSTIFY='R'; MINV=0; M
1362 HMSG="Enter quantity produced."                                    HMSG="Enter quantity produced."
1363 IF TYPE = "C" THEN O.R="O"                                         IF TYPE = "C" THEN O.R="O"
1364 IF DTM.IMP<1,REF> # "" THEN                                        IF DTM.IMP<1,REF> # "" THEN
1365 O.R='O';DEFAULT=OCONV(DTM.IMP<1,REF>,"MD2")                     |  O.R='O'; DEFAULT=OCONV(DTM.IMP<1,REF>,"MD2")
1366 END                                                                END
1367 CALL EDIT.SUB                                                      CALL EDIT.SUB
1368 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1369 IMP=VALUE                                                          IMP=VALUE

1368 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990
1369 IMP=VALUE                                                          IMP=VALUE
1370 CASE 1                                                             CASE 1
1371 IMP=""                                                             IMP=""
1372 IF MODE="C" THEN                                                   IF MODE="C" THEN
1373 P_X  = 52 ; P_Y = SLN ; P_VALUE = IMP "R#8" ; P_OPT = ""        |  P_X = 52; P_Y = SLN; P_VALUE = IMP "R#8"; P_OPT = ""
1374 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1375 END                                                                END
1376 END CASE                                                           END CASE
1377                                                                 >  *-----------------------------------------------------------

1378 *-- GET MATERIAL ID                                                *-- GET MATERIAL ID
1379 10100 *                                                         |  *-----------------------------------------------------------
1380 BEGIN CASE                                                      |  10100 BEGIN CASE
1381 CASE PMT.FLG                                                       CASE PMT.FLG
1382 PROD=DTM.PROD<1,REF>                                               PROD=DTM.PROD<1,REF>
1383 WHSE=DTM.WHSE<1,REF>                                               WHSE=DTM.WHSE<1,REF>
1384 LOCAT=DTM.LOC<1,REF>                                               LOCAT=DTM.LOC<1,REF>
1385 SERIAL=DTM.SERIAL<1,REF>                                        |  R.S.ID=DTM.R.S.ID<1,REF>

1386 QTY=DTM.QTY<1,REF>                                                 QTY=DTM.QTY<1,REF>
1387 SHEET=DTM.SHEET<1,REF>                                             SHEET=DTM.SHEET<1,REF>
1388 QTYPE=DTM.RS.QTYPE<1,REF>                                          QTYPE=DTM.RS.QTYPE<1,REF>
1389 TS=DTM.TIME.STAMP<1,REF>                                           TS=DTM.TIME.STAMP<1,REF>
1390 IF TS="" THEN                                                      IF TS="" THEN
1391 DATE.USED="";TIME.USED=""                                       |  DATE.USED=""; TIME.USED=""
1392 END ELSE                                                           END ELSE
1393 DATE.USED=INT(TS/100000);TIME.USED=MOD(TS,10000)                |  DATE.USED=INT(TS/100000); TIME.USED=MOD(TS,10000)
1394 END                                                                END
1395 ED.LS.FLG=DTM.ED.LS.FLG<1,REF>                                     ED.LS.FLG=DTM.ED.LS.FLG<1,REF>

1396 TMP.STATUS=""                                                   |  STATUS=""
1397 *T22074 v                                                          *T22074 v
1398 CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MATL.REQ="  |  *T25146 CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.
1399                                                                 >  CASE (TYPE="L") OR (TYPE="I") OR (TYPE="N") OR (TYPE="T" AND
1400 *      CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MAT     *       CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.
1401 *T22074 ^                                                          *T22074 ^
1402 PROD=""                                                            PROD=""

1403 WHSE=""                                                            WHSE=""
1404 LOCAT=""                                                           LOCAT=""
1405 SERIAL=""                                                       |  R.S.ID=""
1406 QTY=""                                                             QTY=""
1407 SHEET=""                                                           SHEET=""
1408 ED.LS.FLG=""                                                       ED.LS.FLG=""
1409 TMP.STATUS=""                                                   |  STATUS=""
1410 IF MODE="C" THEN                                                   IF MODE="C" THEN
1411 P_X  = 63 ; P_Y = SLN ; P_VALUE = PROD "L#15" ; P_OPT = ""      |  P_X = 63; P_Y = SLN; P_VALUE = PROD "L#15"; P_OPT = ""

1412 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1413 P_X  = 63 ; P_Y = SLN+1 ; P_VALUE = QTY "R#8" ; P_OPT = ""      |  P_X = 63; P_Y = SLN+1; P_VALUE = QTY "R#8"; P_OPT = ""
1414 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1415 END                                                                END
1416 CASE 1                                                             CASE 1
1417 ESTAT=""                                                           ESTAT=""
1418 IF DATE.USED = "" THEN DATE.USED = DATE.WORKED ; * T26661       <  
1419 CALL EPS.TIME.MATL.SUB (CONO, REF, SLN, MAT TEMP.REC, SHEET.OK     CALL EPS.TIME.MATL.SUB (CONO, REF, SLN, MAT TEMP.REC, SHEET.

1420 IF ESTAT="END" THEN GOTO 10990                                     IF ESTAT="END" THEN GOTO 10990
1421 END CASE                                                           END CASE
1422                                                                 >  *-----------------------------------------------------------
1423 *-- CHECK ERROR STATUS                                             *-- CHECK ERROR STATUS
1424 10120 *                                                         |  *-----------------------------------------------------------
1425 IF TMP.STATUS="" THEN                                           |  10120 IF STATUS="" THEN
1426 P_X  = 79 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""              |  P_X = 79; P_Y = SLN; P_VALUE = " "; P_OPT = ""
1427 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1428 END ELSE                                                           END ELSE

1429 P_X  = 79 ; P_Y = SLN ; P_VALUE = "*" ; P_OPT = ""              |  P_X = 79; P_Y = SLN; P_VALUE = "*"; P_OPT = ""
1430 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1431 END                                                                END
1432                                                                 >  *-----------------------------------------------------------
1433 *-- LOAD DATA ITEM WITH MULTI-LINE VALUES                          *-- LOAD DATA ITEM WITH MULTI-LINE VALUES
1434 10900 *                                                         |  *-----------------------------------------------------------
1435 DTM.TYPE<1,REF>=TYPE                                            |  10900 DTM.TYPE<1,REF>=TYPE

1446 DTM.JOB.TYPE<1,REF>=JTYPE                                          DTM.JOB.TYPE<1,REF>=JTYPE
1447 DTM.SPOIL.CODE<1,REF>=SPOIL.CODE                                   DTM.SPOIL.CODE<1,REF>=SPOIL.CODE
1448 DTM.TIME.ST<1,REF>=STRT                                            DTM.TIME.ST<1,REF>=STRT
1449 DTM.TIME<1,REF>=STPT                                               DTM.TIME<1,REF>=STPT
1450 DTM.OPER.COMPLETE<1,REF>=OPCMP                                     DTM.OPER.COMPLETE<1,REF>=OPCMP
1451                                                                 >  *T25146 v
1452                                                                 >  DTM.SPEC.CODE<1,REF>=ATTEND.NUM
1453                                                                 >  *T25146 ^
1454 BEGIN CASE                                                         BEGIN CASE
1455 CASE IMP=""                                                        CASE IMP=""

1460 DTM.IMP<1,REF>=IMP                                                 DTM.IMP<1,REF>=IMP
1461 END CASE                                                           END CASE
1462 DTM.PROD<1,REF>=PROD                                               DTM.PROD<1,REF>=PROD
1463 DTM.WHSE<1,REF>=WHSE                                               DTM.WHSE<1,REF>=WHSE
1464 DTM.LOC<1,REF>=LOCAT                                               DTM.LOC<1,REF>=LOCAT
1465 DTM.SERIAL<1,REF>=SERIAL                                        |  DTM.R.S.ID<1,REF>=R.S.ID
1466 DTM.ED.LS.FLG<1,REF>=ED.LS.FLG                                     DTM.ED.LS.FLG<1,REF>=ED.LS.FLG
1467 DTM.STATUS<1,REF>=TMP.STATUS                                    |  DTM.STATUS<1,REF>=STATUS
1468 DTM.QTY<1,REF>=QTY                                                 DTM.QTY<1,REF>=QTY
1469 DTM.SHEET<1,REF>=SHEET                                             DTM.SHEET<1,REF>=SHEET

1472 DTM.TIME.STAMP<1,REF> = DATE.USED * 100000 + TIME.USED             DTM.TIME.STAMP<1,REF> = DATE.USED * 100000 + TIME.USED
1473 END                                                                END
1474 DTM.ADD.PRMPT.CD<1,REF>=AP.CODES<1,REF>                            DTM.ADD.PRMPT.CD<1,REF>=AP.CODES<1,REF>
1475 DTM.ADD.RESP<1,REF>=AP.RESP<1,REF>                                 DTM.ADD.RESP<1,REF>=AP.RESP<1,REF>
1476 GOTO 10999                                                         GOTO 10999
1477                                                                 >  *-----------------------------------------------------------
1478 *-- BACKOUT ENTERED DATA                                           *-- BACKOUT ENTERED DATA
1479 10990 *                                                         |  *-----------------------------------------------------------
1480 MAT TEMP.REC=""                                                 |  10990 MAT TEMP.REC=""
1481 10999 *                                                         |  10999 SCV.REC(29)<1>=""

1482 SCV.REC(29)<1>=""                                               <  
1483 SCV.REC(30)<1>=""                                                  SCV.REC(30)<1>=""
1484 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
1485 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=30; ECD.ACTION=5; CALL SCRN.EDIT
1486 RETURN                                                             RETURN
1487                                                                 >  *-----------------------------------------------------------
1488 *-- GET LINE REFERENCE NUMBER                                      *-- GET LINE REFERENCE NUMBER

1489 30000 *                                                         |  *-----------------------------------------------------------
1490 ECD.NUM=32                                                      |  30000 ECD.NUM=32
1491 ECD.MINV=CURR.REF.NO                                               ECD.MINV=CURR.REF.NO
1492 ECD.MAXV=ECD.MINV+PAGE.SIZE-1                                      ECD.MAXV=ECD.MINV+PAGE.SIZE-1
1493 IF ECD.MAXV > CNT THEN ECD.MAXV=CNT                                IF ECD.MAXV > CNT THEN ECD.MAXV=CNT
1494 ECD.ACTION=4;CALL SCRN.EDIT                                     |  ECD.ACTION=4; CALL SCRN.EDIT
1495 VALUE = ECD.RET.VALUE                                              VALUE = ECD.RET.VALUE

1496 RETURN                                                             RETURN
1497                                                                 >  *-----------------------------------------------------------
1498 *-- DISPLAY MULTI-LINE DATA                                        *-- DISPLAY MULTI-LINE DATA
1499 50000 *                                                         |  *-----------------------------------------------------------
1500 START.REF.NO=1+INT((REF-1)/PAGE.SIZE)*PAGE.SIZE                 |  50000 START.REF.NO=1+INT((REF-1)/PAGE.SIZE)*PAGE.SIZE
1501 LAST.LINE=START.REF.NO + PAGE.SIZE - 1                             LAST.LINE=START.REF.NO + PAGE.SIZE - 1
1502 IF LAST.LINE > CNT THEN LAST.LINE = CNT                            IF LAST.LINE > CNT THEN LAST.LINE = CNT
1503 IF START.REF.NO=CURR.REF.NO THEN GOTO 59999                        IF START.REF.NO=CURR.REF.NO THEN GOTO 59999

1524 CASE 1                                                             CASE 1
1525 TM.QTY=OCONV(INT(DTM.QTY<1,N>/10),"MD2")                           TM.QTY=OCONV(INT(DTM.QTY<1,N>/10),"MD2")
1526 END CASE                                                           END CASE
1527 IF DTM.STATUS<1,N> # "" THEN TM.STATUS="*" ELSE TM.STATUS=" "      IF DTM.STATUS<1,N> # "" THEN TM.STATUS="*" ELSE TM.STATUS=" 
1528 IF EMP.STATUS='S' THEN PRATE = OCONV(DTM.RATE<1,N>/100,'MD2')      IF EMP.STATUS='S' THEN PRATE = OCONV(DTM.RATE<1,N>/100,'MD2'
1529 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""           |  P_X = 0; P_Y = SLN; P_VALUE = N "R#2"; P_OPT = ""
1530 P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TYPE<1,N> "L#  |  P_X := AM:3; P_Y := AM:SLN; P_VALUE := AM:DTM.TYPE<1,N> "L#1
1531 P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB<1,N> "L#8  |  P_X := AM:5; P_Y := AM:SLN; P_VALUE := AM:DTM.JOB<1,N> "L#8"
1532 P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.CCTR<1,N> "L  |  P_X := AM:14; P_Y := AM:SLN; P_VALUE := AM:DTM.CCTR<1,N> "L#
1533 P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.OPER<1,N> "L  |  P_X := AM:18; P_Y := AM:SLN; P_VALUE := AM:DTM.OPER<1,N> "L#

1534 P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.CLASS.CD<1,N  |  P_X := AM:23; P_Y := AM:SLN; P_VALUE := AM:DTM.CLASS.CD<1,N>
1535 *P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DTM.RATE<  |  *       P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(
1536 P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:PRATE'L#7'        |  *T23578 P_X := AM:27; P_Y := AM:SLN; P_VALUE := AM:PRATE'L#7
1537 P_X  := AM:35 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TIME.CODE<1,  |  P_X := AM:35; P_Y := AM:SLN; P_VALUE := AM:DTM.TIME.CODE<1,N
1538 P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB.TYPE<1,N  |  P_X := AM:38; P_Y := AM:SLN; P_VALUE := AM:DTM.JOB.TYPE<1,N>
1539 P_X  := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TIME.ST<1,N>  |  P_X := AM:40; P_Y := AM:SLN; P_VALUE := AM:DTM.TIME.ST<1,N> 
1540 P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TIME<1,N> "R  |  P_X := AM:45; P_Y := AM:SLN; P_VALUE := AM:DTM.TIME<1,N> "R#

1541 P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.OPER.COMPLET  |  P_X := AM:50; P_Y := AM:SLN; P_VALUE := AM:DTM.OPER.COMPLETE
1542 P_X  := AM:52 ; P_Y := AM:SLN ; P_VALUE := AM:TM.IMP "R#8"      |  P_X := AM:52; P_Y := AM:SLN; P_VALUE := AM:TM.IMP "R#8"
1543 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1544 FLAG=''                                                            FLAG=''
1545 IF OPER.SF.PROMPT<1,1>='N' OR OPER.SF.PROMPT<1,1>='' THEN FLAG     IF OPER.SF.PROMPT<1,1>='N' OR OPER.SF.PROMPT<1,1>='' THEN FL
1546 P_X  = 61 ; P_Y = SLN ; P_VALUE = FLAG "L#1" ; P_OPT = ""       |  P_X = 61; P_Y = SLN; P_VALUE = FLAG "L#1"; P_OPT = ""
1547 P_X  := AM:63 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.PROD<1,N> "L  |  P_X := AM:63; P_Y := AM:SLN; P_VALUE := AM:DTM.PROD<1,N> "L#

1548 P_X  := AM:79 ; P_Y := AM:SLN ; P_VALUE := AM:TM.STATUS "L#1"   |  P_X := AM:79; P_Y := AM:SLN; P_VALUE := AM:TM.STATUS "L#1"
1549 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1550 P_X  = 63 ; P_Y = SLN+1 ; P_VALUE = TM.QTY "R#8" ; P_OPT = ""   |  P_X = 63; P_Y = SLN+1; P_VALUE = TM.QTY "R#8"; P_OPT = ""
1551 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1552 LCNT = LCNT + 1                                                    LCNT = LCNT + 1
1553 NEXT N                                                             NEXT N
1554 FOR M = LCNT TO PAGE.SIZE                                          FOR M = LCNT TO PAGE.SIZE

1555 SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
1556 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"              |  P_X = 0; P_Y = SLN; P_VALUE = ""; P_OPT = "CL"
1557 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1558 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"            |  P_X = 0; P_Y = SLN+1; P_VALUE = ""; P_OPT = "CL"
1559 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1560 NEXT M                                                             NEXT M
1561 59999 *                                                         |  59999 RETURN
1562 RETURN                                                          |  *-----------------------------------------------------------

1563 *-- CALCULATE TIME DATA                                            *-- CALCULATE TIME DATA
1564 70000 *                                                         |  *-----------------------------------------------------------
1565 DTM.REG.TIME=""                                                 |  70000 DTM.REG.TIME=""
1566 DTM.OVR.TIME=""                                                    DTM.OVR.TIME=""
1567 DTM.DUB.TIME=""                                                    DTM.DUB.TIME=""
1568 DTM.LAPS.TIME=""                                                   DTM.LAPS.TIME=""
1569 FOR LP=1 TO CNT                                                    FOR LP=1 TO CNT
1570 TYPE=DTM.TYPE<1,LP>                                                TYPE=DTM.TYPE<1,LP>

1571 BEGIN CASE                                                         BEGIN CASE
1572 *         CASE TYPE="L"  ;*T25688                               |  CASE TYPE="L"
1573 CASE TYPE="M"                                                      CASE TYPE="M"
1574 CASE 1                                                             CASE 1
1575 STIME=DTM.TIME.ST<1,LP>                                            STIME=DTM.TIME.ST<1,LP>
1576 ETIME=DTM.TIME<1,LP>                                               ETIME=DTM.TIME<1,LP>
1577 IF ETIME < STIME THEN ETIME=ETIME+2400                             IF ETIME < STIME THEN ETIME=ETIME+2400
1578 ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*60     ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*

1583 DTM.REG.TIME<1,LP>=ELAP.HRS                                        DTM.REG.TIME<1,LP>=ELAP.HRS
1584 CASE TC="02"                                                       CASE TC="02"
1585 DTM.OVR.TIME<1,LP>=ELAP.HRS                                        DTM.OVR.TIME<1,LP>=ELAP.HRS
1586 CASE TC="03"                                                       CASE TC="03"
1587 DTM.DUB.TIME<1,LP>=ELAP.HRS                                        DTM.DUB.TIME<1,LP>=ELAP.HRS
1588 CASE 1                              ; * T22689 Added this line  <  
1589 *T26415 v             DTM.REG.TIME<1,LP>=ELAP.HRS       ; * T2  <  
1590 IF TYPE # 'L' THEN DTM.REG.TIME<1,LP>=ELAP.HRS       ; * T2268  <  
1591 END CASE                                                           END CASE
1592 DTM.LAPS.TIME<1,LP>=ELAP.HRS                                       DTM.LAPS.TIME<1,LP>=ELAP.HRS

1593 END CASE                                                           END CASE
1594 NEXT LP                                                            NEXT LP
1595                                                                 >  *-----------------------------------------------------------
1596 *-- CALCULATE ACTIVE, IDLE AND TOTAL TIME                          *-- CALCULATE ACTIVE, IDLE AND TOTAL TIME
1597                                                                 >  *-----------------------------------------------------------
1598 TTYPE=DTM.TYPE                                                     TTYPE=DTM.TYPE
1599 STIME=DTM.TIME.ST                                                  STIME=DTM.TIME.ST
1600 ETIME=DTM.TIME                                                     ETIME=DTM.TIME
1601 ATIME=0                                                            ATIME=0

1604 OVERLAP=0                                                          OVERLAP=0
1605 CALL CALC.EMP.TIME (TTYPE, STIME, ETIME, ATIME, ITIME, TTIME,      CALL CALC.EMP.TIME (TTYPE, STIME, ETIME, ATIME, ITIME, TTIME
1606 SCV.REC(41)<1>=OCONV(ATIME,"MD0Z")                                 SCV.REC(41)<1>=OCONV(ATIME,"MD0Z")
1607 SCV.REC(42)<1>=OCONV(ITIME,"MD0Z")                                 SCV.REC(42)<1>=OCONV(ITIME,"MD0Z")
1608 SCV.REC(43)<1>=OCONV(TTIME,"MD0Z")                                 SCV.REC(43)<1>=OCONV(TTIME,"MD0Z")
1609 ECD.NUM=41;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=41; ECD.ACTION=5; CALL SCRN.EDIT
1610 ECD.NUM=42;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=42; ECD.ACTION=5; CALL SCRN.EDIT
1611 ECD.NUM=43;ECD.ACTION=5;CALL SCRN.EDIT                          |  ECD.NUM=43; ECD.ACTION=5; CALL SCRN.EDIT
1612 IF NOT(OVERLAP) THEN                                               IF NOT(OVERLAP) THEN
1613 DTM.CONC.TIME=""                                                   DTM.CONC.TIME=""

1614 RETURN                                                             RETURN
1615 END                                                                END
1616                                                                 >  *-----------------------------------------------------------
1617 *-- CALCULATE CONCURRENT TIME                                      *-- CALCULATE CONCURRENT TIME
1618                                                                 >  *-----------------------------------------------------------
1619 TTYPE=DTM.TYPE                                                     TTYPE=DTM.TYPE
1620 STIME=DTM.TIME.ST                                                  STIME=DTM.TIME.ST
1621 ETIME=DTM.TIME                                                     ETIME=DTM.TIME
1622 CTIME=""                                                           CTIME=""

1639 IF DFLG THEN                                                       IF DFLG THEN
1640 CURR.REF.NO=""                                                     CURR.REF.NO=""
1641 GOSUB 50000                                                        GOSUB 50000
1642 END                                                                END
1643 RETURN                                                             RETURN
1644                                                                 >  *-----------------------------------------------------------
1645 *-- LOAD MULTI LINE DATA                                           *-- LOAD MULTI LINE DATA
1646 80000 *                                                         |  *-----------------------------------------------------------
1647 SCV.REC(12)<1>=DTM.TYPE                                         |  80000 SCV.REC(12)<1>=DTM.TYPE
1648 SCV.REC(54)<1>=DTM.JOB                                             SCV.REC(54)<1>=DTM.JOB

1675 IF DTM.STATUS<1,REF> # "" THEN                                     IF DTM.STATUS<1,REF> # "" THEN
1676 SCV.REC(23)<1,REF>="*"                                             SCV.REC(23)<1,REF>="*"
1677 END                                                                END
1678 NEXT REF                                                           NEXT REF
1679 RETURN                                                             RETURN
1680                                                                 >  *-----------------------------------------------------------
1681 *-- GET AUTHORIZATION INITIALS                                     *-- GET AUTHORIZATION INITIALS
1682 85000 *                                                         |  *-----------------------------------------------------------
1683 ECD.RET.VALUE = ""                                              |  85000 ECD.RET.VALUE = ""
1684 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC

1685 85010 *                                                            85010 *
1686                                                                 >  *T23466 v
1687                                                                 >  *       ECD.NUM=33
1688                                                                 >  *       IF DTM.INIT<1,REF> # "" THEN
1689                                                                 >  *          ECD.O.R="O"; ECD.DEFAULT=DTM.INIT<1,REF>
1690                                                                 >  *       END
1691                                                                 >  *       ECD.ACTION=4;CALL SCRN.EDIT
1692                                                                 >  *       IF ECD.RET.VALUE="END" THEN GOTO 85999

1693                                                                 >  ECD.RET.VALUE = "PRP"
1694                                                                 >  *T23466 ^
1695                                                                 >  *T6544 v
1696                                                                 >  *     MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VALUE 
1697                                                                 >  *        ERRMSG="Invalid authorization. Try again."
1698                                                                 >  *        GOSUB 91000
1699                                                                 >  *        GOTO 85010

1700                                                                 >  *     END
1701                                                                 >  *     JINIT = ECD.RET.VALUE
1702                                                                 >  MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VALUE THEN
1703                                                                 >  JINIT = ECD.RET.VALUE
1704                                                                 >  END ELSE
1705 ECD.NUM=33                                                         ECD.NUM=33
1706 IF DTM.INIT<1,REF> # "" THEN                                       IF DTM.INIT<1,REF> # "" THEN

1707 ECD.O.R="O"; ECD.DEFAULT=DTM.INIT<1,REF>                        |  ECD.O.R="O" ; ECD.DEFAULT=DTM.INIT<1,REF>
1708 END                                                                END
1709 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1710 IF ECD.RET.VALUE="END" THEN GOTO 85999                             IF ECD.RET.VALUE="END" THEN GOTO 85999
1711 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VALUE ELSE         MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VALUE ELSE
1712 ERRMSG="Invalid authorization. Try again."                      |  ERRMSG = "Invalid authorization.  Try again."
1713 GOSUB 91000                                                        GOSUB 91000

1713 GOSUB 91000                                                        GOSUB 91000
1714 GOTO 85010                                                         GOTO 85010
1715 END                                                                END
1716 JINIT = ECD.RET.VALUE                                              JINIT = ECD.RET.VALUE
1717 END                                                                END
1718 85999 *                                                         |  *T26554 ^
1719 P_X=0 ; P_Y=21 ; P_VALUE='' ; P_OPT='CL'                        |  END
1720 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  85999 RETURN
1721                                                                 >  *T24092 v
1722                                                                 >  *

1723                                                                 >  FIX.JOB.TYPE: 
1724                                                                 >  *
1725                                                                 >  NUM.PTR = DCOUNT(DTM.TYPE,@VM)
1726                                                                 >  FOR II.PTR = 1 TO NUM.PTR
1727                                                                 >  IF DTM.JOB<1,II.PTR> # "" THEN
1728                                                                 >  MATREAD JOB.REC FROM JOB,CONO:DTM.JOB<1,II.PTR> THEN
1729                                                                 >  IF JOB.TYPE<1,1> # "" THEN

1730                                                                 >  DTM.JOB.TYPE<1,II.PTR>=JOB.TYPE<1,1>
1731                                                                 >  END 
1732                                                                 >  END
1733                                                                 >  END
1734                                                                 >  NEXT II.PTR
1735                                                                 >  *
1736 RETURN                                                             RETURN

1737                                                                 >  *
1738                                                                 >  *T24092 ^
1739                                                                 >  *-----------------------------------------------------------
1740 *-- ERROR ROUTINE                                                  *-- ERROR ROUTINE
1741 91000 *                                                         |  *-----------------------------------------------------------
1742 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                   |  91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
1743 93000 *                                                         |  93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)

1744 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                          |  *-----------------------------------------------------------
1745 *-- END OF PROGRAM                                                 *-- END OF PROGRAM
1746                                                                 >  *-----------------------------------------------------------
1747 99999 *                                                            99999 *
1748 * PRINT @(-1)                                                      * PRINT @(-1)
1749 END                                                                END
1750 


JCSBP/INVOICE.MAINT.F4                                             /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/INVOICE.MAINT.F4
Printed for thompson at 06/28/2006 04:41:48PM

0020 *                          field is left as is and new invoice     *                          field is left as is and new invoi
0021 *                          never process at EOM.                   *                          never process at EOM.
0022 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0023 * T20782 UPDATE INVOICE.SALES.STATS FILE                           * T20782 UPDATE INVOICE.SALES.STATS FILE
0024 * T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match probl     * T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match pro
0025 * T23278 markt 10/13/1998 * Add division security check         |  *T24584 edvard 07/12/2000 * CHANGE FOR NEW WIP REVERSAL PROC
0026 *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since t  |  *T25372 alex 08/23/2000 * Mods to screen, INVOICE.MAINT.SUB.
0027                                                                 >  *                         CBN.SCREENS.
0028                                                                 >  *C37366 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since
0029 *                         COUNTRY.CODE file can hold multiple      *                         COUNTRY.CODE file can hold multipl

0030 *                         of data.                                 *                         of data.                          
0031 *T25947 cm 07/12/2001 * Allow duplication of invoices across j  |  *T26605 lhelms 12/03/2002 * WIP REVERSAL ADD PERIOD TO POST
0032 *                       customers.                              |  *C42055 thompson 06/20/2003 * FIX PROBLEM WITH NEG WIP ON FI
0033 *T25764 renee 07/19/2001 * Add "Terms code" field that default  |  *C43357 thompson 04/15/2004 * Fix problem with dispaly of pe
0034 *                          customer record but allows edit. Ad  <  
0035 *                          number of days stored in the terms   <  
0036 *                          the invoice date to come up with th  <  
0037 *                          due date.                            <  

0038 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   <  
0039 *T28645 lross 08/10/2005 * Need to blank out IVC.LIST.DATE whe  <  
0040 *                          Duplicating.                         <  
0041 *T28826 wvaughan 05/09/2006 * Additional Prompt to CM entry fo  <  
0042 *                             Invoice                           <  
0043 **************************************************************     ************************************************************
0044 *                                                                  *

0047 *COPY>JCS.CPYLIB>INVOICE                                           *COPY>JCS.CPYLIB>INVOICE
0048 *COPY>PMC.CPYLIB>INVOICE.CODE                                      *COPY>PMC.CPYLIB>INVOICE.CODE
0049 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0050 *COPY>OPS.CPYLIB>JOB.FNGD.STATS                                    *COPY>OPS.CPYLIB>JOB.FNGD.STATS
0051 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0052                                                                 >  *COPY>PMC.CPYLIB>FISCAL
0053 *COPY>PMC.CPYLIB>SALESMAN                                          *COPY>PMC.CPYLIB>SALESMAN
0054 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0055 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0056 *COPY>JES.CPYLIB>JES.FILE.VARS                                     *COPY>JES.CPYLIB>JES.FILE.VARS

0062 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0063 *COPY>PMC.CPYLIB>JOB.SALES.STATS                                   *COPY>PMC.CPYLIB>JOB.SALES.STATS
0064 *COPY>JES.CPYLIB>ESTIMATE.JOB                                      *COPY>JES.CPYLIB>ESTIMATE.JOB
0065 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0066 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0067 *COPY>PMC.CPYLIB>COUNTRY.CODE         ;*T25159                  |  *COPY>PMC.CPYLIB>COUNTRY.CODE         ;*C37366
0068 *                                                                  *
0069 *---- DIMENSIONED VARIABLES                                        *---- DIMENSIONED VARIABLES
0070 *                                                                  *
0071                                                                 >  * T21796      DIM SAVE.CUST(75)

0077 SYS.TYPE = 1                                                       SYS.TYPE = 1
0078 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0079 *                                                                  *
0080 *--- OPEN ALL FILES                                                *--- OPEN ALL FILES
0081 *                                                                  *
0082 OPEN "","JCS.SCREENS" TO M.SCREENS ELSE                         |  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="JCS.SCREENS 
0083 ERRMSG="JCS.SCREENS FILE IS MISSING"; GOTO 93000                |  *24584 v
0084 END                                                             |  OPEN "","CBN.SCREENS" TO SECOND.SCREENS ELSE ERRMSG="CBN.SCR
0085 OPEN "","CONTROL" TO CONTROL ELSE                               |  *24584 ^
0086 ERRMSG="CONTROL FILE IS MISSING"; GOTO 93000                    |  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CONTROL FILE IS MI

0087 END                                                             |  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE IS MI
0088 OPEN "","COMPANY" TO COMPANY ELSE                               |  OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING"; GOTO
0089 ERRMSG="COMPANY FILE IS MISSING"; GOTO 93000                    |  OPEN "","INVOICE" TO INVOICE ELSE ERRMSG="INVOICE FILE IS MI
0090 END                                                             |  OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE ERRMSG="DAILY.
0091 OPEN "","JOB" TO JOB ELSE                                       |  OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE ERRMSG="INVOICE.
0092 ERRMSG="JOB FILE IS MISSING"; GOTO 93000                        |  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS
0093 END                                                             |  OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG="SALESMAN FILE IS

0094 OPEN "","INVOICE" TO INVOICE ELSE                               |  OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="DIVISION FILE IS
0095 ERRMSG="INVOICE FILE IS MISSING"; GOTO 93000                    |  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="DEPARTMENT F
0096 END                                                             |  OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="COST.CNTR FILE
0097 OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE                   |  OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG="JOB.CATE
0098 ERRMSG="DAILY.INVOICE FILE IS MISSING"; GOTO 93000              |  OPEN "","JOB.SHIP" TO JOB.SHIP ELSE ERRMSG="JOB.SHIP FILE IS
0099 END                                                             |  OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG="SALES.CODE F
0100 OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE                     |  OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING"; GOTO

0101 ERRMSG="INVOICE.CODE FILE IS MISSING"; GOTO 93000               |  OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP-VIA FILE IS
0102 END                                                             |  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="PREFIX FILE IS MISSI
0103 OPEN "","CUSTOMER" TO CUSTOMER ELSE                             |  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG="CUSTOM
0104 ERRMSG="CUSTOMER FILE IS MISSING"; GOTO 93000                   |  OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE ERRMSG="VOID.I
0105 END                                                             |  *T22154 v
0106 OPEN "","SALESMAN" TO SALESMAN ELSE                             |  OPEN "","COUNTRY.CODE" TO COUNTRY.CODE ELSE ERRMSG="COUNTRY.
0107 ERRMSG="SALESMAN FILE IS MISSING"; GOTO 93000                   |  *T22154 ^

0108 END                                                             |  *24584 v
0109 OPEN "","DIVISION" TO DIVISION ELSE                             |  OPEN '','ESTIMATE' TO ESTIMATE ELSE ERRMSG = "ESTIMATE FILE 
0110 ERRMSG="DIVISION FILE IS MISSING"; GOTO 93000                   |  OPEN '','ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE ERRMSG = "ESTI
0111 END                                                             <  
0112 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE                         <  
0113 ERRMSG="DEPARTMENT FILE IS MISSING"; GOTO 93000                 <  
0114 END                                                             <  

0115 OPEN "","COST.CNTR" TO COST.CNTR ELSE                           <  
0116 ERRMSG="COST.CNTR FILE IS MISSING"; GOTO 93000                  <  
0117 END                                                             <  
0118 OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE                     <  
0119 ERRMSG="JOB.CATEGORY FILE IS MISSING"; GOTO 93000               <  
0120 END                                                             <  
0121 OPEN "","JOB.SHIP" TO JOB.SHIP ELSE                             <  

0122 ERRMSG="JOB.SHIP FILE IS MISSING"; GOTO 93000                   <  
0123 END                                                             <  
0124 OPEN "","SALES.CODE" TO SALES.CODE ELSE                         <  
0125 ERRMSG="SALES.CODE FILE IS MISSING"; GOTO 93000                 <  
0126 END                                                             <  
0127 OPEN "","TAX" TO TAX ELSE                                       <  
0128 ERRMSG="TAX FILE IS MISSING"; GOTO 93000                        <  

0129 END                                                             <  
0130 OPEN "","SHIP.VIA" TO SHIP.VIA ELSE                             <  
0131 ERRMSG="SHIP-VIA FILE IS MISSING"; GOTO 93000                   <  
0132 END                                                             <  
0133 OPEN "","PREFIX" TO PREFIX ELSE                                 <  
0134 ERRMSG="PREFIX FILE IS MISSING"; GOTO 93000                     <  
0135 END                                                             <  

0136 OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE                   <  
0137 ERRMSG="CUSTOMER.XREF FILE IS MISSING"; GOTO 93000              <  
0138 END                                                             <  
0139 OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE                   <  
0140 ERRMSG="VOID.INVOICES FILE IS MISSING"; GOTO 93000              <  
0141 END                                                             <  
0142 OPEN "","COUNTRY.CODE" TO COUNTRY.CODE ELSE                     <  

0143 ERRMSG="COUNTRY.CODE FILE IS MISSING"; GOTO 93000               <  
0144 END                                                             <  
0145 OPEN "","TERMS" TO TERMS ELSE                                   <  
0146 ERRMSG="TERMS FILE IS MISSING"; GOTO 93000                      <  
0147 END                                                             <  
0148 *                                                                  *
0149                                                                 >  *

0151 *                                                                  *
0152 MAT COMP.REC = ""                                                  MAT COMP.REC = ""
0153 CONO = ""                                                          CONO = ""
0154 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0155 IF CONO = "END" THEN GOTO 999999                                   IF CONO = "END" THEN GOTO 999999
0156 IF CO.ARS = "Y" THEN OPEN "","OPEN.RECV" TO OPEN.RECV ELSE      |  IF CO.ARS = "Y" THEN OPEN "","OPEN.RECV" TO OPEN.RECV ELSE E
0157 ERRMSG="OPEN.RECV FILE IS MISSING"; GOTO 93000                  |  *T20782      IF CO.SAS = "Y" AND CO.SAS.INVOICE # "N" THEN O
0158 END                                                             |  *T20782
0159 IF CO.SAS = "Y" AND CO.SAS.INVOICE # "N" THEN                      IF CO.SAS = "Y" AND CO.SAS.INVOICE # "N" THEN
0160 OPEN "","JOB.SALES.STATS" TO JOB.SALES.STATS ELSE                  OPEN "","JOB.SALES.STATS" TO JOB.SALES.STATS ELSE

0162 END                                                                END
0163 OPEN "","INVOICE.SALES.STATS" TO INVOICE.SALES.STATS ELSE          OPEN "","INVOICE.SALES.STATS" TO INVOICE.SALES.STATS ELSE
0164 ERRMSG="INVOICE.SALES.STATS FILE IS MISSING"; GOTO 93000           ERRMSG="INVOICE.SALES.STATS FILE IS MISSING"; GOTO 93000
0165 END                                                                END
0166 END                                                                END
0167                                                                 >  *T20782
0168 IF CO.OPS = "Y" THEN                                               IF CO.OPS = "Y" THEN
0169 OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE                    OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
0170 ERRMSG = "Cannot locate the JOB.FNGD.STATS file"                   ERRMSG = "Cannot locate the JOB.FNGD.STATS file"
0171 GOTO 93000                                                         GOTO 93000

0172 END                                                                END
0173 OPS.ONFILE = 1                                                     OPS.ONFILE = 1
0174 END ELSE                                                           END ELSE
0175 OPS.ONFILE = 0                                                     OPS.ONFILE = 0
0176 END                                                                END
0177                                                                 >  *17927
0178 IF CO.ALLOC.FLG = "Y" THEN                                         IF CO.ALLOC.FLG = "Y" THEN
0179 OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE                        OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE
0180 ERRMSG = "Cannot locate the ESTIMATE.JOB file"                     ERRMSG = "Cannot locate the ESTIMATE.JOB file"
0181 GOTO 93000                                                         GOTO 93000

0182 END                                                                END
0183 OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93     OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 
0184 OPEN '','SALES.CODE' TO SALES.CODE ELSE                         |  OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG='SALES.CODE F
0185 ERRMSG='SALES.CODE FILE IS MISSING';GOTO 93000                  <  
0186 END                                                                END
0187                                                                 >  *
0188                                                                 >  * T26605 
0189                                                                 >  READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
0190                                                                 >  PERIOD.REC = ""

0191                                                                 >  PERIOD.REC<1> = 12
0192 END                                                                END
0193                                                                 >  NUM.PERIODS = PERIOD.REC<1>
0194 *                                                                  *
0195                                                                 >  *
0196                                                                 >  *--- GET CURRENT FISCAL PERIOD
0197                                                                 >  *

0198                                                                 >  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
0199                                                                 >  ERRMSG = "JCFISCAL IS NOT ON CONTROL FILE"
0200                                                                 >  GOSUB 91000; GOTO 999999
0201                                                                 >  END
0202                                                                 >  *
0203                                                                 >  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
0204                                                                 >  ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"

0205                                                                 >  GOSUB 91000; GOTO 999999
0206                                                                 >  END
0207                                                                 >  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
0208                                                                 >  ERRMSG = "DIVISIONS SECURITY CONTROL RECORD IS MISSING"
0209                                                                 >  GOSUB 91000; GOTO 999999
0210                                                                 >  END
0211                                                                 >  *

0212                                                                 >  *
0213 *--- GET MENU SELECTION                                            *--- GET MENU SELECTION
0214 *                                                                  *
0215 PROCREAD ID ELSE ERRMSG = "MUST RUN FROM MENU"; GOTO 93000         PROCREAD ID ELSE ERRMSG = "MUST RUN FROM MENU"; GOTO 93000
0216 MENU = ID<1>                                                       MENU = ID<1>
0217 *                                                                  *
0218 *--- INITIALIZATION                                                *--- INITIALIZATION

0221 MAT EDIT.COM.DRIVER = ""                                           MAT EDIT.COM.DRIVER = ""
0222 ECD.SCRN.CNT = 2                                                   ECD.SCRN.CNT = 2
0223 BEGIN CASE                                                         BEGIN CASE
0224 CASE MENU = "INVOICE"                                              CASE MENU = "INVOICE"
0225 ECD.SCRN.NAME<1> = "INVOICE.MAINT"                                 ECD.SCRN.NAME<1> = "INVOICE.MAINT"
0226                                                                 >  * T26605
0227                                                                 >  ECD.SCRN.FLAG<1> = 2
0228 ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"                          ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"
0229 ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"                            |  ECD.SCRN.FLAG<2> = 2      ;* T25372
0230                                                                 >  *24584 v

0231                                                                 >  *            ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"
0232                                                                 >  *   ECD.SCRN.NAME<3> = "CBN.INVOICE.WIP.SUB"
0233                                                                 >  ECD.SCRN.NAME<3> = "INVOICE.WIP.PROCESS.1"
0234                                                                 >  ECD.SCRN.FLAG<3> = 2
0235                                                                 >  *   ECD.SCRN.NAME<4> = "CBN.INVOICE.WIP.SUB.1"
0236                                                                 >  *   ECD.SCRN.FLAG<4> = 2
0237                                                                 >  *24584            ECD.SCRN.CNT = 3

0238                                                                 >  *T26605
0239 ECD.SCRN.CNT = 3                                                   ECD.SCRN.CNT = 3
0240                                                                 >  *24584 ^
0241 IF CO.SAS.INVOICE # "N" THEN                                       IF CO.SAS.INVOICE # "N" THEN
0242                                                                 >  *24584 v               ECD.SCRN.NAME<4> = "JOB.SALES.MAINT"
0243 ECD.SCRN.NAME<4> = "JOB.SALES.MAINT"                               ECD.SCRN.NAME<4> = "JOB.SALES.MAINT"
0244                                                                 >  *24584               ECD.SCRN.CNT = 4

0245 ECD.SCRN.CNT = 4                                                   ECD.SCRN.CNT = 4
0246                                                                 >  *24584 ^
0247 END                                                                END
0248 GOSUB 50                                                           GOSUB 50
0249 CASE MENU = "DEBIT"                                                CASE MENU = "DEBIT"
0250 ECD.SCRN.NAME<1> = "DEBIT.MEMO"                                    ECD.SCRN.NAME<1> = "DEBIT.MEMO"
0251                                                                 >  ECD.SCRN.FLAG<1> = 2
0252 ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"                             ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"

0251                                                                 >  ECD.SCRN.FLAG<1> = 2
0252 ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"                             ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"
0253 GOSUB 50                                                           GOSUB 50
0254 CASE MENU = "CREDIT"                                               CASE MENU = "CREDIT"
0255 ECD.SCRN.NAME<1> = "CREDIT.MEMO"                                   ECD.SCRN.NAME<1> = "CREDIT.MEMO"
0256                                                                 >  ECD.SCRN.FLAG<1> = 2
0257 ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB.F4"                            ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB.F4"
0258 		ECD.SCRN.NAME<2> = "INVOICE.WIP.SUB"            <  
0259 GOSUB 50                                                           GOSUB 50
0260 CASE 1                                                             CASE 1

0275 RETURN                                                             RETURN
0276 *                                                                  *
0277 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0278 *                                                                  *
0279 100*                                                               100*
0280                                                                 >  FILE.OPTION = ""
0281 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0282 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0283 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0284 GOTO 150                                                           GOTO 150

0299 JOB.NO = ECD.RET.VALUE                                             JOB.NO = ECD.RET.VALUE
0300 MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE                         MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
0301 ERRMSG = "Cannot locate Job record - ":JOB.NO; GOSUB 91000         ERRMSG = "Cannot locate Job record - ":JOB.NO; GOSUB 91000
0302 GOTO 120                                                           GOTO 120
0303 END                                                                END
0304 *T23278 v                                                       <  
0305 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0306 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0307 IF ERRMSG # '' THEN                                             <  
0308 GOSUB 91000; GOTO 120                                           <  

0309 END                                                             <  
0310 *T23278 ^                                                       <  
0311 IF OPS.ONFILE THEN                                                 IF OPS.ONFILE THEN
0312 MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NO THEN              MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NO THEN
0313 IF JFS.PROD # "" THEN                                              IF JFS.PROD # "" THEN
0314 ERRMSG = "Cannot Invoice a Finished Goods JOB"                     ERRMSG = "Cannot Invoice a Finished Goods JOB"
0315 GOSUB 91000; GOTO 120                                              GOSUB 91000; GOTO 120

0433 SCV.REC(24)<1>="UNKNOWN"                                           SCV.REC(24)<1>="UNKNOWN"
0434 END CASE                                                           END CASE
0435 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0436 CREF.NO=1;DREF.NO=1                                                CREF.NO=1;DREF.NO=1
0437 *                                                                  *
0438                                                                 >  DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
0439                                                                 >  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0440                                                                 >  IF ERRMSG # '' THEN
0441                                                                 >  GOSUB 91000; GOTO 120
0442                                                                 >  END

0443                                                                 >  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN 
0444                                                                 >  IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
0445                                                                 >  ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING
0446                                                                 >  GOSUB 91000; GOTO 120
0447                                                                 >  END
0448                                                                 >  LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
0449                                                                 >  ERRMSG = "Division ":DIV.CODE:" not found in Control File DI

0450                                                                 >  GOSUB 91000; GOTO 999999
0451                                                                 >  END
0452                                                                 >  END ELSE
0453                                                                 >  POS = 1
0454                                                                 >  END
0455                                                                 >  *
0456                                                                 >  IF LEN(FR.CURR.PER<1,POS>) # 6 THEN

0457                                                                 >  ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER<1,POS>
0458                                                                 >  GOSUB 91000; GOTO 999999
0459                                                                 >  END
0460                                                                 >  IF FR.CURR.PER<1,POS>[5,2] < 1 OR FR.CURR.PER<1,POS>[5,2] > 
0461                                                                 >  ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER<1,POS>
0462                                                                 >  GOSUB 91000; GOTO 999999
0463                                                                 >  END

0464                                                                 >  CURR = FR.CURR.PER<1,POS>[5,2]
0465                                                                 >  YEAR = FR.CURR.PER<1,POS>[1,4]
0466                                                                 >  *
0467 *---- GET OPERATOR INPUT                                           *---- GET OPERATOR INPUT
0468 *                                                                  *
0469 200*                                                               200*
0470 MAT IVC.REC = ""                                                   MAT IVC.REC = ""

0471 IVC.NO = ""                                                        IVC.NO = ""
0472 MODE = ""                                                          MODE = ""
0473                                                                 >  *
0474 IF MENU = "INVOICE" THEN                                           IF MENU = "INVOICE" THEN
0475 ECD.NUM=18;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=18;ECD.ACTION=4;CALL SCRN.EDIT
0476 IF ECD.RET.VALUE = "END" THEN GOTO 120                             IF ECD.RET.VALUE = "END" THEN GOTO 120
0477 PRE.BILL = ECD.RET.VALUE                                           PRE.BILL = ECD.RET.VALUE
0478 END ELSE                                                           END ELSE
0479 PRE.BILL = ""                                                      PRE.BILL = ""

0486 IF JOB.STATUS<1,1> > 6 THEN                                        IF JOB.STATUS<1,1> > 6 THEN
0487 ERRMSG = "Cannot add new invoices to job because of status"        ERRMSG = "Cannot add new invoices to job because of status"
0488 GOSUB 91000; GOTO 200                                              GOSUB 91000; GOTO 200
0489 END                                                                END
0490 GOSUB 1000                                                         GOSUB 1000
0491 MODE = "NEW"                                                    <  
0492 IVC.NO = ECD.RET.VALUE                                             IVC.NO = ECD.RET.VALUE
0493                                                                 >  GOSUB 1500
0494                                                                 >  IF ECD.RET.VALUE = "END" THEN
0495                                                                 >  GOTO 120

0496                                                                 >  END
0497                                                                 >  MODE = "NEW"
0498 CASE ECD.RET.VALUE = "D"                                           CASE ECD.RET.VALUE = "D"
0499 210 * T25947                                                    <  
0500 ECD.NUM=26;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=26;ECD.ACTION=4;CALL SCRN.EDIT
0501 IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "" THEN GOTO 200       IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "" THEN GOTO 200
0502 DUP.INVOICE = ECD.RET.VALUE                                        DUP.INVOICE = ECD.RET.VALUE

0502 DUP.INVOICE = ECD.RET.VALUE                                        DUP.INVOICE = ECD.RET.VALUE
0503 MATREAD IVC.REC FROM INVOICE, CONO:DUP.INVOICE ELSE                MATREAD IVC.REC FROM INVOICE, CONO:DUP.INVOICE ELSE
0504 ERRMSG = "Cannot locate specified item"                            ERRMSG = "Cannot locate specified item"
0505 GOSUB 91000; GOTO 200                                              GOSUB 91000; GOTO 200
0506 END                                                                END
0507 READ TEMP.JOB.REC FROM JOB,CONO:IVC.JOB.NO ELSE TEMP.JOB.REC =  |  IF IVC.JOB.NO # JOB.NO THEN
0508 IF TEMP.JOB.REC<6> # JOB.DIV THEN                               |  ERRMSG = "Cannot duplicate item from another job"
0509 ERRMSG = 'Cannot duplicate from that invoice.  Job Division on  <  
0510 GOSUB 91000;GOTO 200                                            <  
0511 END                                                             <  

0512 MATREAD CUST.REC FROM CUSTOMER, CONO:IVC.CUST.NO ELSE           <  
0513 ERRMSG = 'Cannot locate customer record - ':IVC.CUST.NO         <  
0514 GOSUB 91000; GOTO 200                                              GOSUB 91000; GOTO 200
0515 END                                                                END
0516 X = 0 ; Y = 23 ; TYP = 18 ; MAXL = 1 ; O.R = 'R' ; MINL = 1     <  
0517 PMSG = 'This invoice was for job ':IVC.JOB.NO:', ':CUST.NAME:'  <  
0518 CALL EDIT.SUB                                                   <  

0519 P_X = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = 'CL'                <  
0520 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
0521 IF VALUE = 'END' THEN MOD = 'END' ; GOTO 2999                   <  
0522 IF VALUE = 'N' THEN GOTO 210                                    <  
0523 IF (MENU = "CREDIT" OR MENU = "DEBIT") AND IVC.JOB.NO # JOB.NO  <  
0524 ERRMSG = "Cannot duplicate item from another job"               <  
0525 GOSUB 91000                                                     <  

0526 GOTO 200                                                        <  
0527 END                                                             <  
0528 IF DUP.INVOICE[LEN(DUP.INVOICE)-1,2] = "CM" THEN                   IF DUP.INVOICE[LEN(DUP.INVOICE)-1,2] = "CM" THEN
0529 N2 = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")                  N2 = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
0530 FOR N = 1 TO N2                                                    FOR N = 1 TO N2
0531 IF IVC.AMOUNT<1,N>+0 # 0 THEN                                      IF IVC.AMOUNT<1,N>+0 # 0 THEN
0532 IVC.AMOUNT<1,N> = IVC.AMOUNT<1,N> * (-1)                           IVC.AMOUNT<1,N> = IVC.AMOUNT<1,N> * (-1)

0576 IF FND THEN                                                        IF FND THEN
0577 ERRMSG = "Item exists on VOID INVOICES file"; GOSUB 91000          ERRMSG = "Item exists on VOID INVOICES file"; GOSUB 91000
0578 GOTO 200                                                           GOTO 200
0579 END                                                                END
0580 FND = 1                                                            FND = 1
0581 * T26126 v                                                      |  READU REC FROM DAILY.INVOICE, CONO : ECD.RET.VALUE ELSE FND 
0582 READU REC FROM DAILY.INVOICE, CONO : ECD.RET.VALUE LOCKED       <  
0583 ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STA  <  
0584 GOSUB 91000;GOTO 200                                            <  
0585 END ELSE                                                        <  

0586 FND = 0                                                         <  
0587 END                                                             <  
0588 * T26126 ^                                                      <  
0589 IF FND THEN                                                        IF FND THEN
0590 RELEASE DAILY.INVOICE, CONO : ECD.RET.VALUE                        RELEASE DAILY.INVOICE, CONO : ECD.RET.VALUE
0591 ERRMSG = "Item exists on DAILY.INVOICE file"; GOSUB 91000          ERRMSG = "Item exists on DAILY.INVOICE file"; GOSUB 91000
0592 GOTO 200                                                           GOTO 200

0593 END                                                                END
0594 END CASE                                                           END CASE
0595 FOR J = 1 TO DCOUNT(IVC.CHG.JOB,VM)                             <  
0596 IF IVC.CHG.JOB<1,J> # '' THEN IVC.CHG.JOB<1,J> = JOB.NO         <  
0597 NEXT J                                                          <  
0598 IVC.JOB.NO = JOB.NO;* SINCE CAN DUP FROM ANOTHER JOB            <  
0599 MATREAD JOB.REC FROM JOB, CONO:IVC.JOB.NO ELSE                  <  
0600 MAT JOB.REC = ''                                                <  
0601 END                                                             <  

0602 IVC.CUST.NO = JOB.CUST                                          <  
0603 IVC.TERMS = JOB.TERMS                                           <  
0604 IF IVC.TERMS = "" THEN IVC.TERMS = CUST.TERMS                   <  
0605 IVC.NO = ECD.RET.VALUE                                             IVC.NO = ECD.RET.VALUE
0606 IVC.DATE = DATE()                                                  IVC.DATE = DATE()
0607 IVC.PROC.DATE = ""                                                 IVC.PROC.DATE = ""
0608 IVC.PRT.DATE = ""                                                  IVC.PRT.DATE = ""

0612 IVC.WIP.DATE = ""                                                  IVC.WIP.DATE = ""
0613 IVC.WIP.PRCNT = ""                                                 IVC.WIP.PRCNT = ""
0614 IVC.PRE.BILL = ""                                                  IVC.PRE.BILL = ""
0615 IVC.PRE.BILL.MON = ""                                              IVC.PRE.BILL.MON = ""
0616 IVC.GLA.DATE = '' ;* T20828                                        IVC.GLA.DATE = '' ;* T20828
0617 IVC.LIST.DATE = '' ;*T28645                                     |  GOSUB 1500 ;* T26605
0618 GOSUB 1000 ; * T25947                                           <  
0619 MODE = "NEW"                                                       MODE = "NEW"
0620 CASE ECD.RET.VALUE # ""                                            CASE ECD.RET.VALUE # ""
0621 ECD.RET.VALUE = STR("0",6-LEN(ECD.RET.VALUE)):ECD.RET.VALUE        ECD.RET.VALUE = STR("0",6-LEN(ECD.RET.VALUE)):ECD.RET.VALUE

0626 CASE MENU = "DEBIT"                                                CASE MENU = "DEBIT"
0627 ECD.RET.VALUE = ECD.RET.VALUE:"DM"                                 ECD.RET.VALUE = ECD.RET.VALUE:"DM"
0628 CASE PRE.BILL = "Y"                                                CASE PRE.BILL = "Y"
0629 ECD.RET.VALUE = ECD.RET.VALUE:"PB"                                 ECD.RET.VALUE = ECD.RET.VALUE:"PB"
0630 END CASE                                                           END CASE
0631                                                                 >  FLAG = ""
0632 IF CO.ARS = "Y" THEN GOSUB 2000 ELSE GOSUB 3000                    IF CO.ARS = "Y" THEN GOSUB 2000 ELSE GOSUB 3000
0633 IF MODE = "ERROR" OR MODE = "END" THEN RELEASE DAILY.INVOICE,      IF MODE = "ERROR" OR MODE = "END" THEN RELEASE DAILY.INVOICE
0634 IF MODE = "ERROR" THEN GOTO 200                                    IF MODE = "ERROR" THEN GOTO 200
0635 IF MODE = "END" THEN GOTO 120                                      IF MODE = "END" THEN GOTO 120

0636 IF JOB.NO # IVC.JOB.NO THEN                                        IF JOB.NO # IVC.JOB.NO THEN
0637 RELEASE DAILY.INVOICE, CONO:ECD.RET.VALUE                          RELEASE DAILY.INVOICE, CONO:ECD.RET.VALUE
0638 ERRMSG = "Invoice # ":ECD.RET.VALUE:" is for job # ":IVC.JOB.N     ERRMSG = "Invoice # ":ECD.RET.VALUE:" is for job # ":IVC.JOB
0639 GOSUB 91000; GOTO 200                                              GOSUB 91000; GOTO 200
0640 END                                                                END
0641 IVC.NO = ECD.RET.VALUE                                          |  *   IVC.NO = ECD.RET.VALUE
0642                                                                 >  IF TRIM(REC) # "" AND FLAG<1,2> = "" THEN
0643                                                                 >  SCV.REC(30)<1> = REC<66>; ECD.NUM = 30; ECD.ACTION = 5; CALL
0644                                                                 >  END ELSE
0645                                                                 >  SCV.REC(30)<1> = IVC.REC(66); ECD.NUM = 30; ECD.ACTION = 5; 

0646                                                                 >  END
0647 CASE 1                                                             CASE 1
0648 ERRMSG = "*** Invalid invoice number ***";GOSUB 91000; GOTO 20     ERRMSG = "*** Invalid invoice number ***";GOSUB 91000; GOTO 
0649 END CASE                                                           END CASE
0650 *                                                                  *
0651 *---- GET OPERATOR REQUEST                                         *---- GET OPERATOR REQUEST
0652 *                                                                  *

0665 ECD.NUM=21;ECD.SUB.NUM=DREF.NO;ECD.ACTION=7;CALL SCRN.EDIT         ECD.NUM=21;ECD.SUB.NUM=DREF.NO;ECD.ACTION=7;CALL SCRN.EDIT
0666 GOTO 300                                                           GOTO 300
0667 CASE OPTION = "E" OR OPTION = "END"                                CASE OPTION = "E" OR OPTION = "END"
0668 RELEASE DAILY.INVOICE, CONO:IVC.NO                                 RELEASE DAILY.INVOICE, CONO:IVC.NO
0669 GOTO 120                                                           GOTO 120
0670                                                                 >  CASE OPTION = 'P' ;*C42659
0671                                                                 >  GOSUB 1500
0672                                                                 >  GOTO 300
0673 END CASE                                                           END CASE
0674 SAVE.IVC.LAST=IVC.LAST                                             SAVE.IVC.LAST=IVC.LAST

0675 IF PRE.BILL = "Y" THEN                                             IF PRE.BILL = "Y" THEN
0676 CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NO,IVC.NO,"PREBILL","")      |  CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NO,IVC.NO,"PREBILL","",FI
0677 END ELSE                                                           END ELSE
0678 CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NO,IVC.NO,MENU,"")           |  CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NO,IVC.NO,MENU,"",FILE.OP
0679 END                                                                END
0680                                                                 >  ESN = 1
0681                                                                 >  ECD.SCRN.NO = 1
0682                                                                 >  IF FILE.OPTION = "F" THEN GOTO 100

0683                                                                 >  SCV.REC(2)<1> = IVC.NO
0684                                                                 >  ECD.ACTION = 3; CALL SCRN.EDIT
0685                                                                 >  CREF.NO = 1; DREF.NO = 1
0686                                                                 >  GOTO 300
0687                                                                 >  *
0688 RELEASE DAILY.INVOICE, CONO:IVC.NO                                 RELEASE DAILY.INVOICE, CONO:IVC.NO
0689 IF CO.SAS = "Y" AND CO.SAS.INVOICE # "N" AND SAVE.IVC.LAST # I     IF CO.SAS = "Y" AND CO.SAS.INVOICE # "N" AND SAVE.IVC.LAST #

0690 MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE MAT JOB.REC = ""        MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE MAT JOB.REC = ""
0691 CALL JOB.SALES.MAINT(CONO,JOB.NO,IVC.NO,4,MAT JSS.REC)          |  *24584  CALL JOB.SALES.MAINT(CONO,JOB.NO,IVC.NO,4,MAT JSS.RE
0692                                                                 >  CALL JOB.SALES.MAINT(CONO,JOB.NO,IVC.NO,5,MAT JSS.REC) ; * 2
0693 END                                                                END
0694 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0695 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0696 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0697 *      GOTO 100                                                    *      GOTO 100

0702 1000*                                                              1000*
0703 IVC.JOB.NO = JOB.NO                                                IVC.JOB.NO = JOB.NO
0704 IVC.DATE = DATE()                                                  IVC.DATE = DATE()
0705 IF CUST.ACCT = "" THEN                                             IF CUST.ACCT = "" THEN
0706 IVC.CUST.NO = JOB.CUST                                             IVC.CUST.NO = JOB.CUST
0707 *T25947 v                                                       <  
0708 MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE              <  
0709 CUST.NAME = UNKNOWN                                             <  
0710 CUST.ACCT = ''                                                  <  
0711 END                                                             <  

0712 *T25947 ^                                                       <  
0713 END ELSE                                                           END ELSE
0714 MAT SAVE.CUST = MAT CUST.REC                                       MAT SAVE.CUST = MAT CUST.REC
0715 MAST.CUST = CUST.ACCT                                              MAST.CUST = CUST.ACCT
0716 MATREAD CUST.REC FROM CUSTOMER, CONO:MAST.CUST ELSE                MATREAD CUST.REC FROM CUSTOMER, CONO:MAST.CUST ELSE
0717 MAT CUST.REC = MAT SAVE.CUST                                       MAT CUST.REC = MAT SAVE.CUST
0718 IVC.CUST.NO = JOB.CUST                                             IVC.CUST.NO = JOB.CUST

0723 1100*                                                              1100*
0724 IVC.CUST.NAME = CUST.NAME                                          IVC.CUST.NAME = CUST.NAME
0725 IVC.ADDR1 = CUST.ADDR1                                             IVC.ADDR1 = CUST.ADDR1
0726 IVC.ADDR2 = CUST.ADDR2                                             IVC.ADDR2 = CUST.ADDR2
0727 IVC.ADDR3 = CUST.ADDR3                                             IVC.ADDR3 = CUST.ADDR3
0728 * T25764 v                                                      <  
0729 IVC.TERMS = JOB.TERMS                                           <  
0730 IF IVC.TERMS = "" THEN IVC.TERMS = CUST.TERMS                   <  
0731 * T25764 ^                                                      <  
0732 *T22154 v                                                          *T22154 v

0733 SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>                                  SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
0734 *T25159  v                                                      |  *C37366 v
0735 * READ COUNTRY FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY THEN           * READ COUNTRY FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY THEN
0736 *     SHIP.TO.CNTY = COUNTRY                                       *   SHIP.TO.CNTY = COUNTRY
0737 * END ELSE                                                         * END ELSE
0738 *     SHIP.TO.CNTY = ''                                            *   SHIP.TO.CNTY = ''
0739 * END                                                              * END
0740 MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT      MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MA

0741 SHIP.TO.CNTY = CTY.DESC                                            SHIP.TO.CNTY = CTY.DESC
0742 *T25159 ^                                                       |  *C37366 ^
0743 *      IVC.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP                        *      IVC.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP
0744 IVC.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP:"  ":SHIP.TO.CNTY             IVC.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP:"  ":SHIP.TO.CNTY
0745 *T22154 ^                                                          *T22154 ^
0746 IVC.ATTENTION = CUST.ATTENTION                                     IVC.ATTENTION = CUST.ATTENTION
0747 RETURN                                                             RETURN
0748 *                                                                  *

0749                                                                 >  *---- PROMPT FOR PERIOD TO POST INVOICE 
0750                                                                 >  *
0751                                                                 >  * T26605
0752                                                                 >  1500*
0753                                                                 >  *
0754                                                                 >  ECD.NUM = 30; IVALUE = SCV.REC(ECD.NUM)
0755                                                                 >  SCV.REC(ECD.NUM) = ""; ECD.ACTION = 5; CALL SCRN.EDIT

0756                                                                 >  IF LEN(IVALUE) > 2 THEN
0757                                                                 >  SCV.REC(ECD.NUM) = IVALUE[5,2]
0758                                                                 >  END ELSE
0759                                                                 >  SCV.REC(ECD.NUM) = IVALUE
0760                                                                 >  END
0761                                                                 >  BEGIN CASE
0762                                                                 >  CASE CURR < (NUM.PERIODS - 1)

0763                                                                 >  ECD.VALDAT = STR("0",(2-LEN(CURR))):CURR:","
0764                                                                 >  ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+1))):(CURR+1):",
0765                                                                 >  ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+2))):(CURR+2)
0766                                                                 >  CASE CURR = (NUM.PERIODS - 1)
0767                                                                 >  ECD.VALDAT = (NUM.PERIODS - 1):",":NUM.PERIODS:",01"
0768                                                                 >  CASE 1
0769                                                                 >  ECD.VALDAT = NUM.PERIODS:",01,02"

0770                                                                 >  END CASE
0771                                                                 >  ECD.HMSG = "Valid Periods - ":ECD.VALDAT
0772                                                                 >  ECD.DEFAULT = CURR
0773                                                                 >  ECD.MAXL = 2; ECD.ACTION = 4; CALL SCRN.EDIT
0774                                                                 >  BEGIN CASE
0775                                                                 >  CASE ECD.RET.VALUE = "END"
0776                                                                 >  CASE NOT(NUM(ECD.RET.VALUE))

0777                                                                 >  ERRMSG = "*** INVALID PERIOD ***"
0778                                                                 >  GOSUB 91000; GOTO 1500
0779                                                                 >  CASE ECD.RET.VALUE < 1 OR ECD.RET.VALUE > NUM.PERIODS
0780                                                                 >  ERRMSG = "*** INVALID PERIOD ***"
0781                                                                 >  GOSUB 91000; GOTO 1500
0782                                                                 >  CASE CURR > (NUM.PERIODS - 2) AND ECD.RET.VALUE < 3
0783                                                                 >  IVC.PERIOD.POST = (YEAR + 1) : STR("0",(2-LEN(ECD.RET.VALUE)

0784                                                                 >  CASE 1
0785                                                                 >  IVC.PERIOD.POST = YEAR : STR("0",(2-LEN(ECD.RET.VALUE))) : 
E
0786                                                                 >  END CASE
0787                                                                 >  ECD.MAXL = 6
0788                                                                 >  ECD.NUM = 30; SCV.REC(ECD.NUM)<1> = IVC.PERIOD.POST
0789                                                                 >  ECD.ACTION = 5
0790                                                                 >  CALL SCRN.EDIT

0791                                                                 >  *
0792                                                                 >  RETURN
0793                                                                 >  *
0794 *---- EDIT INVOICE NUMBER ENTERED                                  *---- EDIT INVOICE NUMBER ENTERED
0795 *                                                                  *
0796 2000*                                                              2000*
0797 FLAG = ""                                                          FLAG = ""

0807 ERRMSG = "This is a manual invoice"; GOSUB 91000; MODE = "ERRO     ERRMSG = "This is a manual invoice"; GOSUB 91000; MODE = "ER
0808 CASE FLAG<1,1> # "N" AND FLAG<1,2> = "N" AND FLAG<1,3> # "N"       CASE FLAG<1,1> # "N" AND FLAG<1,2> = "N" AND FLAG<1,3> # "N"
0809 MODE = "OLD"                                                       MODE = "OLD"
0810 CASE FLAG<1,1> = "N" AND FLAG<1,3> = "N"                           CASE FLAG<1,1> = "N" AND FLAG<1,3> = "N"
0811 MODE = ""                                                          MODE = ""
0812 * T26126 v                                                      |  MATREADU IVC.REC FROM DAILY.INVOICE, CONO:ECD.RET.VALUE THEN
0813 MATREADU IVC.REC FROM DAILY.INVOICE, CONO:ECD.RET.VALUE LOCKED  |  IVC.NO = ECD.RET.VALUE
0814 ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STA  <  
0815 GOSUB 91000; MODE = "ERROR"; GOTO 2999                          <  
0816 END ELSE                                                           END ELSE

0817 * T26126 ^                                                      <  
0818 IF JOB.STATUS<1,1> > 6 THEN                                        IF JOB.STATUS<1,1> > 6 THEN
0819 ERRMSG = "Cannot add new invoices to job because of status"        ERRMSG = "Cannot add new invoices to job because of status"
0820 GOSUB 91000; MODE = "ERROR"; GOTO 2999                             GOSUB 91000; MODE = "ERROR"; GOTO 2999
0821 END                                                                END
0822 X = 0; Y = 23; TYP = 18; MAXL = 1; O.R = "R"; MINL =1              X = 0; Y = 23; TYP = 18; MAXL = 1; O.R = "R"; MINL =1
0823 PMSG = "Record is not on file, do you wish to add (Y/N)"           PMSG = "Record is not on file, do you wish to add (Y/N)"

0823 PMSG = "Record is not on file, do you wish to add (Y/N)"           PMSG = "Record is not on file, do you wish to add (Y/N)"
0824 CALL EDIT.SUB                                                      CALL EDIT.SUB
0825 IF VALUE = "END" THEN MODE = "END"; GOTO 2999                      IF VALUE = "END" THEN MODE = "END"; GOTO 2999
0826 IF VALUE = "Y" THEN                                                IF VALUE = "Y" THEN
0827 GOSUB 1000                                                         GOSUB 1000
0828                                                                 >  IVC.NO = ECD.RET.VALUE
0829                                                                 >  GOSUB 1500  ;* T26605
0830                                                                 >  IF ECD.RET.VALUE = "END" THEN
0831                                                                 >  MODE = "END"
0832                                                                 >  END ELSE

0833 MODE = "NEW"                                                       MODE = "NEW"
0834                                                                 >  END
0835 END ELSE                                                           END ELSE
0836 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0837 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0838 MODE = "ERROR"; GOTO 2999                                          MODE = "ERROR"; GOTO 2999
0839 END                                                                END
0840 END                                                                END

0845 RETURN                                                             RETURN
0846 *                                                                  *
0847 *---- ENTER INVOICE NUMBER ENTERED                                 *---- ENTER INVOICE NUMBER ENTERED
0848 *                                                                  *
0849 3000*                                                              3000*
0850 MATREAD IVC.REC FROM INVOICE, CONO:ECD.RET.VALUE ELSE           |  MATREAD IVC.REC FROM INVOICE, CONO:ECD.RET.VALUE THEN
0851 MATREADU IVC.REC FROM DAILY.INVOICE, CONO:ECD.RET.VALUE ELSE    |  IVC.NO = ECD.RET.VALUE
0852                                                                 >  END ELSE
0853                                                                 >  MATREADU IVC.REC FROM DAILY.INVOICE, CONO:ECD.RET.VALUE THEN
0854                                                                 >  IVC.NO = ECD.RET.VALUE

0855                                                                 >  END ELSE
0856 IF JOB.STATUS<1,1> > 6 THEN                                        IF JOB.STATUS<1,1> > 6 THEN
0857 ERRMSG = "Cannot add new invoices to job because of status"        ERRMSG = "Cannot add new invoices to job because of status"
0858 GOSUB 91000; MODE = "ERROR"; GOTO 3999                             GOSUB 91000; MODE = "ERROR"; GOTO 3999
0859 END                                                                END
0860 X = 0; Y = 23; TYP = 18; MAXL = 1; O.R = "R"                       X = 0; Y = 23; TYP = 18; MAXL = 1; O.R = "R"
0861 PMSG = "Record is not on file, do you wish to add (Y/N)"           PMSG = "Record is not on file, do you wish to add (Y/N)"

0861 PMSG = "Record is not on file, do you wish to add (Y/N)"           PMSG = "Record is not on file, do you wish to add (Y/N)"
0862 CALL EDIT.SUB                                                      CALL EDIT.SUB
0863 IF VALUE = "END" THEN MODE = "END"; GOTO 3999                      IF VALUE = "END" THEN MODE = "END"; GOTO 3999
0864 IF VALUE = "Y" THEN                                                IF VALUE = "Y" THEN
0865 GOSUB 1000                                                         GOSUB 1000
0866                                                                 >  IVC.NO = ECD.RET.VALUE
0867                                                                 >  GOSUB 1500  ;* T26605
0868                                                                 >  IF ECD.RET.VALUE = "END" THEN
0869                                                                 >  MODE = "END"
0870                                                                 >  END ELSE

0871                                                                 >  MODE = "NEW"
0872                                                                 >  END
0873 MODE = "NEW"                                                       MODE = "NEW"
0874 END ELSE                                                           END ELSE
0875 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0876 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0877 MODE = "ERROR"; GOTO 3999                                          MODE = "ERROR"; GOTO 3999


JCSBP/INVOICE.MAINT.SUB                                            /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/INVOICE.MAINT.SUB
Printed for thompson at 06/28/2006 04:41:49PM

0010 * AUTHOR      - NICK AMENDOLA, C.B.A                               * AUTHOR      - NICK AMENDOLA, C.B.A
0011 * DATE        - 10/17/85                                           * DATE        - 10/17/85
0012 * DESCRIPTION                                                      * DESCRIPTION
0013 * This program is used to create and maintain job related invo     * This program is used to create and maintain job related in
0014 *T22713 diane 05/12/1998 * REMOVE CALL TO EDIT.SUB TYP=0           *T22713 diane 05/12/1998 * REMOVE CALL TO EDIT.SUB TYP=0
0015 *T25740 epitka 08/14/2002 * add email                           <  
0016 **************************************************************     ************************************************************
0017 *COPY>JCS.CPYLIB>INVOICE                                           *COPY>JCS.CPYLIB>INVOICE
0018 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0019 *COPY>JCS.CPYLIB>JOB.SHIP                                          *COPY>JCS.CPYLIB>JOB.SHIP

0067 500*                                                               500*
0068 GOSUB 5000                                                         GOSUB 5000
0069 ACTION=ECD.RET.VALUE                                               ACTION=ECD.RET.VALUE
0070 502*                                                               502*
0071 BEGIN CASE                                                         BEGIN CASE
0072 CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 6                |  CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 5
0073 N=ACTION                                                           N=ACTION
0074 ON N GOSUB 1100,1200,1300,1400,1500,1600                        |  ON N GOSUB 1100,1200,1300,1400,1500
0075 CASE ACTION="A"                                                    CASE ACTION="A"
0076 MODE="A"                                                           MODE="A"

0079 IF REF.CNT > 0 THEN GOSUB 10000                                    IF REF.CNT > 0 THEN GOSUB 10000
0080 GOSUB 6000                                                         GOSUB 6000
0081 IF ECD.RET.VALUE="END" THEN                                        IF ECD.RET.VALUE="END" THEN
0082 REF.CNT=REF.NO - 1                                                 REF.CNT=REF.NO - 1
0083 AREF=REF.NO                                                        AREF=REF.NO
0084 AREF.CNT=DCOUNT(IVC.CHG.CODE,VM)                                |  AREF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
0085 FOR REF.NO=AREF.CNT TO AREF STEP -1                                FOR REF.NO=AREF.CNT TO AREF STEP -1
0086 GOSUB 600                                                          GOSUB 600
0087 NEXT REF.NO                                                        NEXT REF.NO
0088 DONE=1                                                             DONE=1

0463 1500*                                                              1500*
0464 ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
0465 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0466 IVC.DATE=ECD.RET.VALUE                                             IVC.DATE=ECD.RET.VALUE
0467 RETURN                                                             RETURN
0468 *- GET MAIL FLAG                                                <  
0469 1600*                                                           <  
0470 ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0471 IF ECD.RET.VALUE='END' THEN RETURN                              <  
0472 IVC.PRT.FLG<1,1>='Y' ; * hardcoded for print                    <  

0473 IVC.PRT.FLG<1,2>=ECD.RET.VALUE                                  <  
0474 RETURN                                                          <  
0475 *- GET OPERATOR REQUEST                                            *- GET OPERATOR REQUEST
0476 5000*                                                              5000*
0477 IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN                          IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
0478 ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
0479 END ELSE                                                           END ELSE

0873 SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4                                SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
0874 SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION                             SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
0875 SCV.REC(6)<ECD.SCRN.NO>=IVC.JOB.NO                                 SCV.REC(6)<ECD.SCRN.NO>=IVC.JOB.NO
0876 SCV.REC(7)<ECD.SCRN.NO>=IVC.NO                                     SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
0877 SCV.REC(8)<ECD.SCRN.NO>=IVC.DATE                                   SCV.REC(8)<ECD.SCRN.NO>=IVC.DATE
0878 SCV.REC(29)<ECD.SCRN.NO>=IVC.PRT.FLG                            <  
0879 IF IVC.PO.NO="" THEN IVC.PO.NO = JOB.CUST.PO                       IF IVC.PO.NO="" THEN IVC.PO.NO = JOB.CUST.PO
0880 SCV.REC(9)<ECD.SCRN.NO>=IVC.PO.NO                                  SCV.REC(9)<ECD.SCRN.NO>=IVC.PO.NO
0881 IF IVC.PROC.DATE="" THEN                                           IF IVC.PROC.DATE="" THEN
0882 IF IVC.PRT.DATE # "" THEN                                          IF IVC.PRT.DATE # "" THEN


JCSBP/INVOICE.MAINT.SUB.F4                                         /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/INVOICE.MAINT.SUB.F4
Printed for thompson at 06/28/2006 04:41:50PM

0001 SUBROUTINE INVOICE.MAINT.SUB.F4 (CONO, JOB.NO, IVC.NO, MENU, P  |  SUBROUTINE INVOICE.MAINT.SUB.F4 (CONO, JOB.NO, IVC.NO, MENU,
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.INVOICE                                       *COPY>JCS.CPYLIB>COM.INVOICE
0004 **************************************************************     ************************************************************
0005 * REVISION - [08.0]                                                * REVISION - [08.0]
0006 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0007 * SOURCE   - JCSBP                                                 * SOURCE   - JCSBP

0033 *T23525 markt 12/16/1998 * Modify to display correct default i     *T23525 markt 12/16/1998 * Modify to display correct default
0034 *                          jurisidiction changes requiring a r     *                          jurisidiction changes requiring a
0035 *                          tax amount when TAX invoice code is     *                          tax amount when TAX invoice code 
0036 *T23546 lanny 12/22/1998 * Inchange mode if INV CODE ch'gd doe     *T23546 lanny 12/22/1998 * Inchange mode if INV CODE ch'gd d
0037 *                          DESC.                                   *                          DESC.
0038 *T23278 markt 02/03/1999 * Add check for divisional security.   <  
0039 *T24705 cm 01/20/2000 * If a line has an amount and also reven  <  
0040 *                       allocation, then if the line code is c  <  
0041 *                       the amount is zero'd the allocation is  <  
0042 *                       always zeroing out also.                <  

0043 *T24939 lanny 03/15/2000 * If Divisional Security is not in ef  <  
0044 *                          sub-jobs of different divisions sho  <  
0045 *                          allowed on master job invoice.       <  
0046 *T25089 edvard 04/18/2000 * Comment lines should be disregarde  <  
0047 *                           checking hidden lines.  If the fir  <  
0048 *                           is a comment line, it allows the n  <  
0049 *                           to be a hidden line.  In this case  <  

0050 *                           nothing to roll the amount from th  <  
0051 *                           line to.  There are some other rul  <  
0052 *                           a look at the task.                 <  
0053 *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since t     *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since
0054 *                         COUNTRY.CODE file can hold multiple      *                         COUNTRY.CODE file can hold multipl
0055 *                         of data.                                 *                         of data.                          
0056 *T25410 alex 08/29/2000 * Fix display of invoice line items wh  |  *T24584 edvard 07/12/2000 * COMPLETELY REWRITE WIP REVERSAL 

0057 *                         entering at line #10.                 |  *                           ACCORDING TO THE SPEC
0058 *T25423 cm 09/12/2000 * When returning from allocation screen   |  *T25372 alex 08/23/2000 * Mods to the sub invoice screen to 
0059 *                       <ESC> the invoice line is removed. <ES  |  *                         the extended amount if the unit of
0060 *                       act just like (E)nd.                    |  *                         unit price are not entered.
0061 *T25764 renee 06/10/1998 * Add "Terms code" field that default  |  *T26605 lhelms 12/04/2002 * CHANGE WIP REVERSAL, COMBINE SCR
0062 *                          customer record but allows edit. Ad  |  *                           USE A (N)EXT TO GET TO WIP SCREE
0063 *                          number of days stored in the terms   |  *C42055 thompson 06/20/2003 * FIX PROBLEM WITH NEG WIP

0064 *                          the invoice date to come up with th  <  
0065 *                          due date.                            <  
0066 *T25946 cmykleb 01/22/2002 * Add X-ref inquires during invoici  <  
0067 *T26556 adelgado 05/20/2002 * Fix to redisplay code after doin  <  
0068 *                             reference.                        <  
0069 *T26805 epitka 08/15/2002 * add email capability NE             <  
0070 *T27232 adelgado 01/20/2003 * Allow to display invoice detail   <  

0071 *                             Master or Sub-Job level.          <  
0072 *T27851 thompson 12/18/2003 * Fix scrolling and display proble  <  
0073 *                             Xref files.                       <  
0074 *T27866 cmykleb 12/31/2003 * If the (R)evenue Dist. option is   <  
0075 *                            read the INC.REC record for the l  <  
0076 *                            else an error message may occur.   <  
0077 *T27865 cmykleb 02/12/2004 * If an invoice has a hidden line a  <  

0078 *                            tries to delete any line above th  <  
0079 *                            line, an errmsg comes up saying t  <  
0080 *                            the hidden line first.  This shou  <  
0081 *                            occur on the line right above the  <  
0082 *                            line.                              <  
0083 *T28085 thompson 04/26/2004 * Expand display for COA.LEVEL 3 f  <  
0084 *                             Allocation                        <  

0085 *T28237 lross 08/25/2004 * Error in DESC when using "JOB" or "  <  
0086 *T28274 thompson 09/24/2004 * Correct problem with change on l  <  
0087 *                             out manually entered description  <  
0088 *T28511 thompson 03/31/2005 * Correction of problem when "END"  <  
0089 *                             and wipes out following lines on  <  
0090 *                             invoice.                          <  
0091 *T28610 thompson 07/01/2005 * Do not allow a zero line item to  <  

0092 *                             distribution.                     <  
0093 *T28664 lross 09/08/2005 * If TERMS NULL DO NOT DISPALY ??? FO  <  
0094 *                          DESC.                                <  
0095 **************************************************************     ************************************************************
0096 *                                                                  *
0097 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0098 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER

0097 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0098 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0099 *COPY>JCS.CPYLIB>INVOICE                                           *COPY>JCS.CPYLIB>INVOICE
0100 *COPY>PMC.CPYLIB>INVOICE.CODE                                      *COPY>PMC.CPYLIB>INVOICE.CODE
0101 *COPY>PMC.CPYLIB>TAX                                               *COPY>PMC.CPYLIB>TAX
0102 *COPY>PMC.CPYLIB>TERMS   ; * T25764                             <  
0103 *COPY>PMC.CPYLIB>VOID.INVOICES                                     *COPY>PMC.CPYLIB>VOID.INVOICES
0104 *COPY>PMC.CPYLIB>SALES.CODE                                        *COPY>PMC.CPYLIB>SALES.CODE
0105 *COPY>PMC.CPYLIB>SHIP.VIA                                          *COPY>PMC.CPYLIB>SHIP.VIA
0106 *COPY>CPYLIB>GEN.XREF.SUB                                       |  *COPY>CPYLIB>GEN.XREF

0110 *COPY>JCS.CPYLIB>JOB.SHIP                                          *COPY>JCS.CPYLIB>JOB.SHIP
0111 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0112 *COPY>JES.CPYLIB>JES.FILE.VARS                                     *COPY>JES.CPYLIB>JES.FILE.VARS
0113 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0114 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0115                                                                 >  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0116 *COPY>JES.CPYLIB>ESTIMATE.JOB                                      *COPY>JES.CPYLIB>ESTIMATE.JOB
0117 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0118 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0119 *COPY>PMC.CPYLIB>COUNTRY.CODE       ;*T25159                       *COPY>PMC.CPYLIB>COUNTRY.CODE       ;*T25159

0120 *                                                                  *
0121 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                              <  
0122 *                                                               <  
0123 *---- INITIALIZATION                                               *---- INITIALIZATION
0124 *                                                                  *
0125 * T27232 v                                                      <  
0126 ADD.SUBS = PROG.FLAG[2,1]                                       <  
0127 PROG.FLAG = PROG.FLAG[1,1]                                      <  

0128 TOGGLE.FLAG = 0                                                 <  
0129 IF PROG.FLAG = 'I' AND ADD.SUBS = 0 THEN                        <  
0130 REF.CNT = DCOUNT(IVC.CHG.CODE, VM)                              <  
0131 FOR XX = 1 TO REF.CNT                                           <  
0132 IF IVC.CHG.JOB<1,XX> # '' AND IVC.CHG.JOB<1,XX> # JOB.NO THEN   <  
0133 NEXT XX                                                         <  
0134 END                                                             <  

0135 * T27232 ^                                                      <  
0136 ;*T25946 v                                                      <  
0137 OPEN 'XREF.DATA' TO XREF.DATA ELSE                              <  
0138 ERRMSG = 'XREF.DATA FILE IS MISSING'                            <  
0139 GOTO 90000                                                      <  
0140 END                                                             <  
0141 ;*T25946 ^                                                      <  

0150 BAL.FLG = ""                                                       BAL.FLG = ""
0151 BAL.PTR = 0                                                        BAL.PTR = 0
0152 LINE.COUNT=7                                                       LINE.COUNT=7
0153 INVOICE.TOTAL=0                                                    INVOICE.TOTAL=0
0154 N.IVC.NO=""                                                        N.IVC.NO=""
0155                                                                 >  *      MAT EDIT.COM=""
0156 MAT GEN.XREF.REC = ""                                              MAT GEN.XREF.REC = ""
0157 ERRMSG=""                                                          ERRMSG=""
0158 MODE=""                                                            MODE=""
0159 TMP.TAX.RATE=""                                                    TMP.TAX.RATE=""

0160 TMP.TAX.CALC=""                                                    TMP.TAX.CALC=""
0161 CURR.JOB.NO=JOB.NO                                                 CURR.JOB.NO=JOB.NO
0162 *T28237   DESC.LEN=39               ;**********  SCREEN DEPEND  |  *C40020 v
0163 DESC.LEN=35                                                     |  IF PROG.FLAG='I' THEN MATREAD JOB.REC FROM JOB, CONO:JOB.NO 
0164                                                                 >  *C40020 ^
0165                                                                 >  DESC.LEN=39               ;**********  SCREEN DEPENDENT  ***
0166 MULTI.JOB="Y"             ;**********  TEMPORARY  **********       MULTI.JOB="Y"             ;**********  TEMPORARY  **********
0167 SAVE.JOB.SUBS = JOB.SUBS                                           SAVE.JOB.SUBS = JOB.SUBS
0168 IF PROG.FLAG # "I" THEN GOSUB 21000                                IF PROG.FLAG # "I" THEN GOSUB 21000

0169                                                                 >  *17927
0170 MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE              MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
0171                                                                 >  *   RELEASE CONTROL, CONO:SYS.FISCAL
0172 ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'                          ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
0173 GOTO 90000                                                         GOTO 90000
0174 END                                                                END
0175 MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE                      <  

0176 ERRMSG = "CANNOT LOCATE JOB FILE"                               <  
0177 GOTO 90000                                                      <  
0178 END                                                             <  
0179 SAVE.JOB.DIV = JOB.DIV                                          <  
0180 READ DIV.SEC.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE     ;*  <  
0181 DIV.SEC.REC='N'                                                 <  
0182 DIV.SEC.REC<2>='N'                                              <  

0183 END                                                             <  
0184 *                                                                  *
0185 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0186 *                                                                  *
0187 100*                                                               100*
0188 SCV.REC(27)<ECD.SCRN.NO>=DATE()                                    SCV.REC(27)<ECD.SCRN.NO>=DATE()
0189 ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT

0190 GOSUB 9000                                                         GOSUB 9000
0191 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0192 REF.NO=1                                                           REF.NO=1
0193 CURR.REF.NO=1                                                      CURR.REF.NO=1
0194 IF REF.CNT > 0 THEN GOSUB 6200                                     IF REF.CNT > 0 THEN GOSUB 6200
0195 IF IVC.NO='N' AND  IVC.PRT.FLG<1,2>='' THEN                     <  
0196 ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0197 IF ECD.RET.VALUE#'END' THEN                                     <  
0198 IVC.PRT.FLG<1,1>='Y' ; IVC.PRT.FLG<1,2>=ECD.RET.VALUE           <  
0199 END                                                             <  

0200 END                                                             <  
0201 *                                                                  *
0202 *---- GET OPERATOR REQUEST                                         *---- GET OPERATOR REQUEST
0203 *                                                                  *
0204 500*                                                               500*
0205 GOSUB 5000                                                         GOSUB 5000
0206 ACTION=ECD.RET.VALUE                                               ACTION=ECD.RET.VALUE

0207 502*                                                               502*
0208 BEGIN CASE                                                         BEGIN CASE
0209 CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 7                |  CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 5
0210 N=ACTION                                                           N=ACTION
0211 ON N GOSUB 1100,1200,1300,1700,1400,1500,1600                   |  ON N GOSUB 1100,1200,1300,1400,1500
0212 * T27232 v                                                      <  
0213 CASE ACTION = 'T'                                               <  
0214 IF ADD.SUBS = 1 THEN ADD.SUBS = 0 ELSE ADD.SUBS = 1             <  
0215 SCV.REC(13)<ECD.SCRN.NO> = ''                                   <  

0216 SCV.REC(14)<ECD.SCRN.NO> = ''                                   <  
0217 SCV.REC(15)<ECD.SCRN.NO> = ''                                   <  
0218 SCV.REC(17)<ECD.SCRN.NO> = ''                                   <  
0219 SCV.REC(30)<ECD.SCRN.NO> = ''                                   <  
0220 SCV.REC(31)<ECD.SCRN.NO> = ''                                   <  
0221 GOSUB SET.LINE.ITEMS                                            <  
0222 GOSUB 6200                                                      <  

0223 REF.NO = 1                                                      <  
0224 GOSUB 10000                                                     <  
0225 * T27232 ^                                                      <  
0226 CASE ACTION="A"                                                    CASE ACTION="A"
0227 MODE="A"                                                           MODE="A"
0228 DONE=0                                                             DONE=0
0229 FOR REF.NO=REF.CNT + 1 TO 99 UNTIL DONE                            FOR REF.NO=REF.CNT + 1 TO 99 UNTIL DONE

0257 CASE ACTION="D" AND REF.CNT > 0                                    CASE ACTION="D" AND REF.CNT > 0
0258 MODE="D"                                                           MODE="D"
0259 GOSUB 5100                                                         GOSUB 5100
0260 IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN                  IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
0261 REF.NO=ECD.RET.VALUE                                               REF.NO=ECD.RET.VALUE
0262 *T25089 v                                                       <  
0263 FOUND = 0                                                       <  
0264 IF IVC.HIDDEN<1,REF.NO> ="Y" OR IVC.CHG.CODE<1,REF.NO>="SUB" O  <  
0265 NULL                                                            <  
0266 END ELSE                                                        <  

0267 *T27865 v                                                       <  
0268 *              LINE.CNT = DCOUNT(IVC.CHG.CODE,VM)               <  
0269 *              FOR LINE.NBR = REF.NO TO LINE.CNT UNTIL FOUND    <  
0270 *                 IF IVC.CHG.CODE<1,LINE.NBR>="SUB" OR IVC.CHG  <  
0271 *                    CONTINUE                                   <  
0272 *                 END ELSE                                      <  
0273 *                    IF IVC.HIDDEN<1,LINE.NBR> = "Y"  THEN      <  

0274 *                       FOUND = 1                               <  
0275 *                       ERRMSG = "Please delete associated hid  <  
0276 *                       GOSUB 90000                             <  
0277 *                    END                                        <  
0278 *                 END                                           <  
0279 *              NEXT LINE.NBR                                    <  
0280 *** CHECK TO SEE IF THE NEXT LINE IS A HIDDEN LINE ***          <  

0281 IF IVC.HIDDEN<1,REF.NO+1> = "Y" THEN                            <  
0282 IF REF.NO = 1 THEN                                              <  
0283 FOUND = 1                                                       <  
0284 ERRMSG = "Please delete associated hidden line ":REF.NO+1:" fi  <  
0285 GOSUB 90000                                                     <  
0286 END                                                             <  
0287 IF IVC.CHG.CODE<1,REF.NO-1> = 'TOT' OR IVC.CHG.CODE<1,REF.NO-1  <  

0288 FOUND = 1                                                       <  
0289 ERRMSG = "Please delete associated hidden line ":REF.NO+1:" fi  <  
0290 GOSUB 90000                                                     <  
0291 END                                                             <  
0292 END                                                             <  
0293 *T27865 ^                                                       <  
0294 END                                                             <  

0295 IF NOT(FOUND) THEN                                              <  
0296 *T25089 ^                                                       <  
0297 GOSUB 600                                                          GOSUB 600
0298 GOSUB 6200                                                         GOSUB 6200
0299 REF.CNT=REF.CNT - 1                                                REF.CNT=REF.CNT - 1
0300 IF REF.NO > 1 THEN REF.NO=REF.NO - 1                               IF REF.NO > 1 THEN REF.NO=REF.NO - 1
0301 CURR.REF.NO=""                                                     CURR.REF.NO=""

0302 GOSUB 10000                                                        GOSUB 10000
0303 END ; *T25089                                                   <  
0304 END                                                                END
0305 CASE ACTION="I" AND REF.CNT > 0                                    CASE ACTION="I" AND REF.CNT > 0
0306 MODE="I"                                                           MODE="I"
0307 GOSUB 5100                                                         GOSUB 5100
0308 IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN                  IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
0309 REF.NO=ECD.RET.VALUE                                               REF.NO=ECD.RET.VALUE

0361 IF REF.NO < 1 THEN REF.NO=1                                        IF REF.NO < 1 THEN REF.NO=1
0362 GOSUB 10000                                                        GOSUB 10000
0363 CASE ACTION="SB" AND REF.CNT > 0                                   CASE ACTION="SB" AND REF.CNT > 0
0364 REF.NO=REF.CNT                                                     REF.NO=REF.CNT
0365 GOSUB 10000                                                        GOSUB 10000
0366 CASE ACTION="N"                                                 |  CASE ACTION = "B"
0367 CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)   |  GOTO 99999
0368 ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT                     |  * CASE ACTION="N"
0369                                                                 >  CASE ACTION="N" AND MENU = 'INVOICE'
0370                                                                 >  

0371                                                                 >  CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG
0372                                                                 >  GOSUB 10000
0373                                                                 >  ECD.SCRN.NO=2
0374                                                                 >  SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
0375                                                                 >  ECD.ACTION=3; CALL SCRN.EDIT
0376                                                                 >  IF FILE.OPTION = "F" THEN GOTO 99999
0377 CASE ACTION="P"                                                    CASE ACTION="P"

0419 CASE ACTION="E" OR ACTION="END"                                    CASE ACTION="E" OR ACTION="END"
0420 GOTO 99999                                                         GOTO 99999
0421 * 17297                                                            * 17297
0422 CASE ACTION="R"                                                    CASE ACTION="R"
0423 GOSUB 5100                                                         GOSUB 5100
0424 * T27232 v                                                      <  
0425 IF (TOGGLE.FLAG) AND NUM(ECD.RET.VALUE) THEN                    <  
0426 TMP.JUNK = MATCH.ARR<1,ECD.RET.VALUE>                           <  
0427 IF TMP.JUNK = '' THEN TMP.JUNK = ECD.RET.VALUE                  <  
0428 ECD.RET.VALUE = TMP.JUNK                                        <  

0429 END                                                             <  
0430 * T27232 ^                                                      <  
0431 IF NUM(ECD.RET.VALUE) THEN                                         IF NUM(ECD.RET.VALUE) THEN
0432 IF IVC.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN                       IF IVC.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN
0433 ERRMSG = "No revenue allocation for this line ":VALUE              ERRMSG = "No revenue allocation for this line ":VALUE
0434 GOSUB 90000                                                        GOSUB 90000
0435 ECD.RET.VALUE = ""                                                 ECD.RET.VALUE = ""

0435 ECD.RET.VALUE = ""                                                 ECD.RET.VALUE = ""
0436 END                                                                END
0437 END                                                                END
0438 IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN                  IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
0439 REF.NO = ECD.RET.VALUE                                             REF.NO = ECD.RET.VALUE
0440 *T27866 v                                                       <  
0441 ICODE = CONO:IVC.CHG.CODE<1,REF.NO>                             <  
0442 MATREAD INC.REC FROM INVOICE.CODE,ICODE ELSE                    <  
0443 MAT INC.REC = ''                                                <  
0444 END                                                             <  

0445 *T27866 ^                                                       <  
0446 GOSUB 7000                                                         GOSUB 7000
0447 END                                                                END
0448 GOSUB 10000                                                        GOSUB 10000
0449                                                                 >  *
0450                                                                 >  *C42743 v Forgot about PREBILLS, CREDIT/DEBIT MEMOS - they d
0451                                                                 >  *         must leave 'F' option in for them.

0452                                                                 >  * T26605 COMMENT OUT AND MOVED TO INVOICE.WIP.SUB
0453                                                                 >  *
0454                                                                 >  CASE MENU # 'INVOICE'
0455                                                                 >  BEGIN CASE
0456 CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0           CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0
0457 ERRMSG = "Allocation of line item on invoice does not balance"     ERRMSG = "Allocation of line item on invoice does not balanc
0458 GOSUB 90000                                                        GOSUB 90000

0459 GOTO 500                                                           GOTO 500
0460                                                                 >  *
0461 CASE ACTION="F" AND INVOICE.TOTAL < 0                              CASE ACTION="F" AND INVOICE.TOTAL < 0
0462 ERRMSG="Invalid Total Amount - Must be positive"                   ERRMSG="Invalid Total Amount - Must be positive"
0463 GOSUB 90000                                                        GOSUB 90000
0464 CASE ACTION="F" AND IVC.PROC.DATE=""                               CASE ACTION="F" AND IVC.PROC.DATE=""
0465 * T22154 v                                                         * T22154 v
0466 FOR X = 1 TO DCOUNT(IVC.UM,VM)                                     FOR X = 1 TO DCOUNT(IVC.UM,VM)

0467 IF IVC.HIDDEN<1,X> # 'Y' THEN                                      IF IVC.HIDDEN<1,X> # 'Y' THEN
0468 *T25089 v                                                       <  
0469 IF IVC.CHG.CAT <1,X> # "CMT" AND IVC.CHG.CAT<1,X> # "TAX" AND   <  
0470 * T25089 ^                                                      <  
0471 DONE = 0                                                           DONE = 0
0472 FOR Z = X + 1 TO DCOUNT(IVC.UM,VM) UNTIL DONE                      FOR Z = X + 1 TO DCOUNT(IVC.UM,VM) UNTIL DONE
0473 IF IVC.HIDDEN<1,Z> = 'Y' THEN                                      IF IVC.HIDDEN<1,Z> = 'Y' THEN
0474 IF IVC.UM<1,Z> # IVC.UM<1,X> THEN                                  IF IVC.UM<1,Z> # IVC.UM<1,X> THEN

0479 END                                                                END
0480 END ELSE                                                           END ELSE
0481 DONE = 1                                                           DONE = 1
0482 END                                                                END
0483 NEXT Z                                                             NEXT Z
0484 END ; *T25089                                                   <  
0485 END                                                                END
0486 NEXT X                                                             NEXT X
0487 * T22154 ^                                                         * T22154 ^
0488 REF.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")             REF.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")

0500 CASE MENU="PREBILL"                                                CASE MENU="PREBILL"
0501 IVC.LAST="N"                                                       IVC.LAST="N"
0502 CASE 1                                                             CASE 1
0503 GOSUB 21000; GOSUB 22000                                           GOSUB 21000; GOSUB 22000
0504 IF MATCH.ERROR THEN                                                IF MATCH.ERROR THEN
0505 * T25764 v Have to move prompt messages to line 22              |  X=0;Y=21;TYP=8;MINL=1
0506 *                 X=0;Y=21;TYP=8                                <  
0507 X=0;Y=22;TYP=8                                                  <  
0508 * T25764 ^                                                      <  
0509 PMSG="Continue (Y/N)"                                              PMSG="Continue (Y/N)"

0508 * T25764 ^                                                      <  
0509 PMSG="Continue (Y/N)"                                              PMSG="Continue (Y/N)"
0510 CALL EDIT.SUB                                                      CALL EDIT.SUB
0511 IF VALUE="N" THEN GOTO 500                                         IF VALUE="N" THEN GOTO 500
0512 END                                                                END
0513 ;*T25946 v                                                      |  X=0;Y=21;TYP=8; MINL =1
0514 *              X=0;Y=21;TYP=8; MINL =1                          <  
0515 X=0;Y=22;TYP=8; MINL =1                                         <  
0516 ;*T25946 ^                                                      <  
0517 PMSG="Is this the last invoice (Y/N)"                              PMSG="Is this the last invoice (Y/N)"

0544 LOCATE JB IN JJOBS<1>,1 SETTING FND ELSE FND=0                     LOCATE JB IN JJOBS<1>,1 SETTING FND ELSE FND=0
0545 IF FND AND PRE.BILL.BAL<1,FND>="Y" THEN PRE.BILL.PRESENT=1         IF FND AND PRE.BILL.BAL<1,FND>="Y" THEN PRE.BILL.PRESENT=1
0546 END                                                                END
0547 NEXT I                                                             NEXT I
0548 IF PRE.BILL.PRESENT THEN                                           IF PRE.BILL.PRESENT THEN
0549 ;*T25946 v                                                      |  X=0;Y=21;TYP=8
0550 *                 X=0;Y=21;TYP=8                                <  
0551 X=0;Y=22;TYP=8                                                  <  
0552 ;*T25946 ^                                                      <  
0553 PMSG="Credit sales for pre-bills (Y/N)"                            PMSG="Credit sales for pre-bills (Y/N)"

0555 IF VALUE="END" THEN GOTO 500                                       IF VALUE="END" THEN GOTO 500
0556 IVC.PRE.BILL=VALUE                                                 IVC.PRE.BILL=VALUE
0557 END ELSE                                                           END ELSE
0558 IVC.PRE.BILL="N"                                                   IVC.PRE.BILL="N"
0559 END                                                                END
0560 CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)   |  CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG
0561                                                                 >  *T22672           IF WIP.FLAG = "END" OR IVC.NO = "N" THEN
0562 ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT                        ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT
0563 *T27820        IF WIP.FLAG = "END" THEN GOTO 500                |  *T22672           END
0564                                                                 >  * WIP.FLAG causes error message, fix later .

0565                                                                 >  IF WIP.FLAG = "END" THEN GOTO 500
0566 END CASE                                                           END CASE
0567 IF IVC.NO="N" THEN                                                 IF IVC.NO="N" THEN
0568 550         READU          IVC.NO FROM CONTROL, CONO:"NEXT.INV     550            READU          IVC.NO FROM CONTROL, CONO:"NEX
0569 N.IVC.NO=IVC.NO + 1                                                N.IVC.NO=IVC.NO + 1
0570 IVC.NO=STR("0",6-LEN(IVC.NO)):IVC.NO                               IVC.NO=STR("0",6-LEN(IVC.NO)):IVC.NO
0571 WRITE N.IVC.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"                  WRITE N.IVC.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"

0604 JOB.INV.NO<1,PTR>=IVC.NO                                           JOB.INV.NO<1,PTR>=IVC.NO
0605 END                                                                END
0606 MATWRITE JOB.REC ON JOB, CONO:IVC.CHG.JOB<1,J>                     MATWRITE JOB.REC ON JOB, CONO:IVC.CHG.JOB<1,J>
0607 END                                                                END
0608 590      NEXT        J                                             590         NEXT        J
0609 ;*T24705 v                                                      <  
0610 FOR X = 1 TO DCOUNT(IVC.AMOUNT,VM)                              <  
0611 IF (IVC.AMOUNT<1,X> + 0) = 0 THEN                               <  
0612 IVC.ALLOC.DIV<1,X> = ''                                         <  
0613 IVC.ALLOC.AMT<1,X> = ''                                         <  

0614 END                                                             <  
0615 NEXT X                                                          <  
0616 ;*T24705 ^                                                      <  
0617 MATWRITE IVC.REC ON DAILY.INVOICE, CONO:IVC.NO                     MATWRITE IVC.REC ON DAILY.INVOICE, CONO:IVC.NO
0618                                                                 >  FILE.OPTION = 'F'
0619 GOTO 99999                                                         GOTO 99999
0620                                                                 >  END CASE

0621                                                                 >  *C42743 ^
0622 599*                                                               599*
0623 END CASE                                                           END CASE
0624 GOTO 500                                                           GOTO 500
0625 *                                                                  *
0626 *---- DELETE SPECIFIC LINE                                         *---- DELETE SPECIFIC LINE
0627 *                                                                  *

0659 ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
0660 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0661 IF ECD.RET.VALUE="???" THEN                                        IF ECD.RET.VALUE="???" THEN
0662 ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT                ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
0663 IF ECD.RET.VALUE = 'END' THEN GOTO 1100                            IF ECD.RET.VALUE = 'END' THEN GOTO 1100
0664                                                                 >  MAT GEN.XREF.REC = ""
0665 GXR.CO = CONO                                                      GXR.CO = CONO
0666 GXR.XREF = CUSTOMER.XREF                                        |  GXR.HEADING<1,1>="CUST ID"
0667 GXR.NAME = "CUSTOMER"                                           |  GXR.HEADING<1,2>=" CUSTOMER NAME"
0668 GXR.FILE = CUSTOMER                                             |  GXR.HEADING<1,3>=" CITY ,STATE"

0669 GXR.TOP.LINE = "CUSTOMER XREF SEARCH"                           |  GXR.HEADING<1,4>="ZIP CODE"
0670 GXR.HEADING = "CUSTOMER"                                        |  GXR.ATT<1,1>=0
0671 GXR.ID = ""                                                     |  GXR.ATT<1,2>=1
0672 GXR.SRCH.ID = ECD.RET.VALUE                                     |  GXR.ATT<1,3>=5
0673 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          |  GXR.ATT<1,4>=6
0674 ECD.ACTION = 2; CALL SCRN.EDIT                                  |  GXR.LEN<1,1>=7
0675 ECD.ACTION = 3; CALL SCRN.EDIT                                  |  GXR.LEN<1,2>=30

0676 *T27851 v                                                       |  GXR.LEN<1,3>=21
0677 CURR.REF.NO = ""                                                |  GXR.LEN<1,4>=10
0678 GOSUB 10000                                                     |  GXR.XREF=CUSTOMER.XREF
0679 *T27851 ^                                                       |  GXR.FILE=CUSTOMER
0680 ;*T25946 ^                                                      |  GXR.LOC=1
0681                                                                 >  GXR.TOP.LINE<1,1>="CUSTOMER XREF SEARCH"
0682                                                                 >  GXR.TOP.LINE<1,2>="SEARCH FOR = ":ECD.RET.VALUE

0683                                                                 >  GXR.ID=""
0684                                                                 >  GXR.SRCH.ID=ECD.RET.VALUE
0685                                                                 >  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0686                                                                 >  IF GXR.ACTION # "X" THEN
0687                                                                 >  ECD.ACTION= 2 ; CALL SCRN.EDIT
0688                                                                 >  ECD.ACTION= 3 ; CALL SCRN.EDIT
0689                                                                 >  END

0706 IVC.ADDR1=CUST.ADDR1                                               IVC.ADDR1=CUST.ADDR1
0707 IVC.ADDR2=CUST.ADDR2                                               IVC.ADDR2=CUST.ADDR2
0708 IVC.ADDR3=CUST.ADDR3                                               IVC.ADDR3=CUST.ADDR3
0709 * T22154 v                                                         * T22154 v
0710 SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>                                  SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
0711 ;*T25159 v                                                      |  *T25159 v
0712                                                                 >  * READ COUNTRY FROM COUNTRY.CODE,CONO:SHIP.TO.CNTY THEN
0713                                                                 >  *   SHIP.TO.CNTY = COUNTRY
0714                                                                 >  * END ELSE
0715                                                                 >  *   SHIP.TO.CNTY = ''

0716                                                                 >  * END
0717 MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT      MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MA
0718 SHIP.TO.CNTY = CTY.DESC                                            SHIP.TO.CNTY = CTY.DESC
0719 ;*T25159 ^                                                      |  *T25159 ^
0720 *      IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP                           *      IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP
0721 IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP:"  ":SHIP.TO.CNTY                IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP:"  ":SHIP.TO.CNTY
0722 * T22154 ^                                                         * T22154 ^

0726 SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1                                SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1
0727 SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2                                SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2
0728 SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3                                SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3
0729 SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4                                SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
0730 SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION                             SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
0731 IF IVC.PRT.FLG<1,2>='' THEN IVC.PRT.FLG<1,2>='N'                <  
0732 SCV.REC(43)<ECD.SCRN.NO>=IVC.PRT.FLG<1,2>                       <  
0733 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0734 ECD.NUM=2; ECD.SUB.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT             ECD.NUM=2; ECD.SUB.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
0735 ;*T25946 v                                                      <  

0736 ECD.NUM=2; ECD.SUB.NUM=2; ECD.ACTION=5; CALL SCRN.EDIT          <  
0737 ECD.NUM=2; ECD.SUB.NUM=3; ECD.ACTION=5; CALL SCRN.EDIT          <  
0738 ECD.NUM=2; ECD.SUB.NUM=4; ECD.ACTION=5; CALL SCRN.EDIT          <  
0739 ECD.NUM=2; ECD.SUB.NUM=5; ECD.ACTION=5; CALL SCRN.EDIT          <  
0740 ;*T25946 ^                                                      <  
0741 ECD.NUM=28;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=28;ECD.ACTION=5;CALL SCRN.EDIT
0742 RETURN                                                             RETURN

0783 1500*                                                              1500*
0784 * ECD.MINV=DATE()-365                                              * ECD.MINV=DATE()-365
0785 ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
0786 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0787 IVC.DATE=ECD.RET.VALUE                                             IVC.DATE=ECD.RET.VALUE
0788 * T25764 v If date changes, then update due date.               <  
0789 IF IVC.TERMS # "" THEN                                          <  
0790 MATREAD TERMS.REC FROM TERMS, CONO : IVC.TERMS THEN             <  
0791 IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS                        <  
0792 ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = IVC.DUE.DATE       <  

0793 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0794 END                                                             <  
0795 END                                                             <  
0796 * T25764 ^                                                      <  
0797 RETURN                                                             RETURN
0798 * T25764 v Enter TERMS CODE                                     <  
0799 *                                                                  *

0800 *-- GET TERMS CODE                                              <  
0801 *                                                               <  
0802 1600*                                                           <  
0803 IF IVC.TERMS = "" THEN IVC.TERMS = CUST.TERMS                   <  
0804 ECD.DEFAULT = IVC.TERMS                                         <  
0805 ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0806 IF ECD.RET.VALUE="END" THEN RETURN                              <  

0807 IF ECD.RET.VALUE = "???" THEN                                   <  
0808 GXR.CO = CONO                                                   <  
0809 GXR.NAME = "TERMS"                                              <  
0810 GXR.FILE = TERMS                                                <  
0811 GXR.SORT.FILE = TERMS                                           <  
0812 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
0813 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  

0814 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
0815 *T27851 v                                                       <  
0816 CURR.REF.NO = ""                                                <  
0817 GOSUB 10000                                                     <  
0818 *T27851 ^                                                       <  
0819 IF GXR.ID = "" THEN GOTO 1600                                   <  
0820 ECD.NUM = 40 ; SCV.REC(40)<ECD.SCRN.NO> = GXR.ID                <  

0821 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0822 ECD.RET.VALUE = GXR.ID                                          <  
0823 END                                                             <  
0824 IF ECD.RET.VALUE # "" THEN                                      <  
0825 MATREAD TERMS.REC FROM TERMS, CONO : ECD.RET.VALUE ELSE         <  
0826 ERRMSG="Invalid Terms Code";GOSUB 90000;GOTO 1600               <  
0827 END                                                             <  

0828 END                                                             <  
0829 IVC.TERMS=ECD.RET.VALUE                                         <  
0830 IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS                        <  
0831 ECD.NUM = 41;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TERMS.DESC         <  
0832 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0833 ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = IVC.DUE.DATE       <  
0834 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  

0835 RETURN                                                          <  
0836 *                                                               <  
0837 *---- GET EMAIL FLAG                                            <  
0838 *                                                               <  
0839 1700                                                            <  
0840 ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0841 IF ECD.RET.VALUE="END" THEN RETURN                              <  

0842 IVC.PRT.FLG<1,1>='Y'; * always print                            <  
0843 IVC.PRT.FLG<1,2>=ECD.RET.VALUE                                  <  
0844 RETURN                                                          <  
0845 *                                                               <  
0846 *---- GET OPERATOR REQUEST                                         *---- GET OPERATOR REQUEST
0847 *                                                                  *
0848 5000*                                                              5000*

0847 *                                                                  *
0848 5000*                                                              5000*
0849 * 17927                                                            * 17927
0850 IF CO.ALLOC.FLG # "Y" THEN                                         IF CO.ALLOC.FLG # "Y" THEN
0851 IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN                          IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
0852 * T27232 v                                                      <  
0853 IF PROG.FLAG = 'I' AND (TOGGLE.FLAG) THEN                       <  
0854 ECD.NUM=44;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0855 END ELSE                                                        <  
0856 ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT

0857 END                                                             |  *C42743 v
0858 * T27232 ^                                                      <  
0859 END ELSE                                                           END ELSE
0860                                                                 >  IF MENU = 'PREBILL' THEN
0861                                                                 >  ECD.NUM=26;ECD.ACTION=4;CALL SCRN.EDIT
0862                                                                 >  END ELSE
0863 ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT

0864 END                                                                END
0865                                                                 >  END
0866 END ELSE                                                           END ELSE
0867 IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN                          IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
0868 * T27232 v                                                      <  
0869 IF PROG.FLAG = 'I' AND (TOGGLE.FLAG) THEN                       <  
0870 ECD.NUM=45;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0871 END ELSE                                                        <  

0872 ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT
0873 END                                                             <  
0874 * T27232 ^                                                      <  
0875 END ELSE                                                           END ELSE
0876                                                                 >  IF MENU = 'PREBILL' THEN
0877                                                                 >  ECD.NUM=35;ECD.ACTION=4;CALL SCRN.EDIT
0878                                                                 >  END ELSE
0879                                                                 >  *C42743 ^

0878                                                                 >  END ELSE
0879                                                                 >  *C42743 ^
0880 ECD.NUM=33;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=33;ECD.ACTION=4;CALL SCRN.EDIT
0881 END                                                                END
0882 END                                                                END
0883                                                                 >  END
0884 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0885 RETURN                                                             RETURN
0886 *                                                                  *
0887 *---- GET LINE NUMBER                                              *---- GET LINE NUMBER

0908 END                                                                END
0909 *---- GET INVOICE CODE                                             *---- GET INVOICE CODE
0910 6010*                                                              6010*
0911 SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>             SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>
0912 ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
0913 *T28511 v                                                       |  IF ECD.RET.VALUE="END" THEN RETURN
0914 *   IF ECD.RET.VALUE="END" THEN RETURN                          |  ICODE=ECD.RET.VALUE
0915 *   ICODE=ECD.RET.VALUE                                         <  
0916 IF ECD.RET.VALUE='END' AND IVC.CHG.CODE<1,REF.NO> = '' THEN     <  
0917 RETURN                                                          <  

0918 END ELSE                                                        <  
0919 PAGE.SIZE=7; BEGIN.PAGE=13; LINE.SPACE=1                        <  
0920 SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)         <  
0921 P_X  = 7 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"              <  
0922 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
0923 IF ECD.RET.VALUE # 'END' THEN                                   <  
0924 SCV.REC(13)<ECD.SCRN.NO,REF.NO>=ECD.RET.VALUE                   <  

0925 ICODE = ECD.RET.VALUE                                           <  
0926 END ELSE                                                        <  
0927 SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>          <  
0928 ICODE = IVC.CHG.CODE<1,REF.NO>                                  <  
0929 END                                                             <  
0930 ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT       <  
0931 END                                                             <  

0932 *T28511^                                                        <  
0933 BEGIN CASE                                                         BEGIN CASE
0934 CASE ICODE="JOB1" OR ICODE="JOB"                                   CASE ICODE="JOB1" OR ICODE="JOB"
0935 LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999         LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
0936 IF FND < REF.NO THEN                                               IF FND < REF.NO THEN
0937 ERRMSG="Only comment lines may be entered after total line"        ERRMSG="Only comment lines may be entered after total line"
0938 GOSUB 90000; GOTO 6010                                             GOSUB 90000; GOTO 6010

0966 CASE 1                                                             CASE 1
0967 MATREAD INC.REC FROM INVOICE.CODE, CONO:ICODE ELSE                 MATREAD INC.REC FROM INVOICE.CODE, CONO:ICODE ELSE
0968 ERRMSG="Invalid code"                                              ERRMSG="Invalid code"
0969 GOSUB 90000; GOTO 6010                                             GOSUB 90000; GOTO 6010
0970 END                                                                END
0971 *T28274                                                         <  
0972 IF SCV.REC(13)<ECD.SCRN.NO,REF.NO> # ICODE THEN                 <  
0973 IF INC.HIDDEN="Y" AND REF.NO=1 THEN                                IF INC.HIDDEN="Y" AND REF.NO=1 THEN
0974 ERRMSG="Hidden line cannot be first line entered"                  ERRMSG="Hidden line cannot be first line entered"
0975 GOSUB 90000; GOTO 6010                                             GOSUB 90000; GOTO 6010

0976 END                                                                END
0977 *T25089 v                                                       <  
0978 IF INC.HIDDEN = "Y" AND (IVC.CHG.CAT<1,REF.NO-1>= "CMT" OR IVC  <  
0979 ERRMSG = "Hidden line cannot follow CMT,TAX,SUB, or SUBT line"  <  
0980 GOSUB 90000 ; GOTO 6010                                         <  
0981 END                                                             <  
0982 *T25089 ^                                                       <  
0983 IF INC.CATEGORY # "CMT" THEN                                       IF INC.CATEGORY # "CMT" THEN

0985 IF FND < REF.NO THEN                                               IF FND < REF.NO THEN
0986 ERRMSG="Only comment lines may be entered after total line"        ERRMSG="Only comment lines may be entered after total line"
0987 GOSUB 90000; GOTO 6010                                             GOSUB 90000; GOTO 6010
0988 END                                                                END
0989 END                                                                END
0990 END                                                             <  
0991 * T28274                                                        <  
0992 END CASE                                                           END CASE
0993 IVC.CHG.CODE<1,REF.NO>=ICODE                                       IVC.CHG.CODE<1,REF.NO>=ICODE
0994 IVC.CHG.CAT<1,REF.NO>=INC.CATEGORY                                 IVC.CHG.CAT<1,REF.NO>=INC.CATEGORY

1032 MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE                  MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
1033 ERRMSG="Invalid job number"                                        ERRMSG="Invalid job number"
1034 GOSUB 90000                                                        GOSUB 90000
1035 GOTO 6012                                                          GOTO 6012
1036 END                                                                END
1037 ;*T23278 v 24939 v                                              <  
1038 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
1039 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
1040 IF ERRMSG # '' THEN                                             <  
1041 GOSUB 90000                                                     <  

1042 SCV.REC(23)<ECD.SCRN.NO>=""; CURR.JOB.NO = ""                   <  
1043 GOTO 6012                                                       <  
1044 END                                                                END
1045 ;*T24939       IF JOB.DIV # SAVE.JOB.DIV THEN                   <  
1046 IF DIV.SEC.REC<2> = 'Y' AND JOB.DIV # SAVE.JOB.DIV THEN         <  
1047 ERRMSG = "JOB DIVISION MISMATCH"                                <  
1048 GOSUB 90000                                                     <  

1049 SCV.REC(23)<ECD.SCRN.NO>=""; CURR.JOB.NO = ""                   <  
1050 GOTO 6012                                                       <  
1051 END                                                             <  
1052 ;*T23278 ^                                                      <  
1053 END                                                             <  
1054 IVC.CHG.JOB<1,REF.NO>=ECD.RET.VALUE                                IVC.CHG.JOB<1,REF.NO>=ECD.RET.VALUE
1055 SCV.REC(25)<ECD.SCRN.NO>=""                                        SCV.REC(25)<ECD.SCRN.NO>=""

1061 CASE ICODE = "JOB1"                                                CASE ICODE = "JOB1"
1062 INC.DESC=JOB.DESC<1,1>[1,DESC.LEN]                                 INC.DESC=JOB.DESC<1,1>[1,DESC.LEN]
1063 CASE ICODE = "JOB"                                                 CASE ICODE = "JOB"
1064 NEW.DESC=""                                                        NEW.DESC=""
1065 SAVE.DESC.LEN = DESC.LEN ; DESC.LEN = 35  ; * T22137               SAVE.DESC.LEN = DESC.LEN ; DESC.LEN = 35  ; * T22137
1066 *T28237  CALL DESC.REFORMAT (JOB.DESC, DESC.LEN, NEW.DESC)      |  CALL DESC.REFORMAT (JOB.DESC, DESC.LEN, NEW.DESC)
1067 CALL DESC.REFORMAT.2 (JOB.DESC, DESC.LEN, NEW.DESC)             <  
1068 DESC.LEN = SAVE.DESC.LEN                  ; * T22137               DESC.LEN = SAVE.DESC.LEN                  ; * T22137
1069 MAT INC.REC=""                                                     MAT INC.REC=""
1070 INC.CATEGORY="OTH"                                                 INC.CATEGORY="OTH"

1089 SCV.REC(25)<ECD.SCRN.NO>="Tax Jur :"                               SCV.REC(25)<ECD.SCRN.NO>="Tax Jur :"
1090 ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
1091 SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>                    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
1092 SCV.REC(24)<ECD.SCRN.NO>=""                                        SCV.REC(24)<ECD.SCRN.NO>=""
1093 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1094 ;*T25946 v                                                      <  
1095 IF IVC.TAX.JURS<1,REF.NO> = '' THEN                             <  
1096 ECD.DEFAULT = CUST.TAX.JUR<1,1>                                 <  
1097 END                                                             <  
1098 ;*T25946 ^                                                      <  

1099 ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
1100 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
1101 ;*T25946 v                                                      <  
1102 IF ECD.RET.VALUE = "???" THEN                                   <  
1103 GXR.CO = CONO                                                   <  
1104 GXR.NAME = "TAX"                                                <  
1105 GXR.FILE = TAX                                                  <  
1106 GXR.SORT.FILE = TAX                                             <  
1107 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

1108 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  
1109 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
1110 *T27851 v                                                       <  
1111 CURR.REF.NO = ""                                                <  
1112 GOSUB 10000                                                     <  
1113 *T27851 ^                                                       <  
1114 IF GXR.ID = "" THEN GOTO 6015                                   <  

1115 ECD.RET.VALUE = GXR.ID                                          <  
1116 END                                                             <  
1117 ;*T25946 ^                                                      <  
1118 MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE                  MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
1119 ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"             ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
1120 GOSUB 90000                                                        GOSUB 90000
1121 GOTO 6015                                                          GOTO 6015

1126 GOSUB 90000                                                        GOSUB 90000
1127 END                                                                END
1128 IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE                               IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
1129 TMP.TAX.RATE<1,REF.NO>=TAX.RATE                                    TMP.TAX.RATE<1,REF.NO>=TAX.RATE
1130 TMP.TAX.CALC<1,REF.NO>=""                                          TMP.TAX.CALC<1,REF.NO>=""
1131 SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556          <  
1132 ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556          <  
1133 SCV.REC(24)<ECD.SCRN.NO>=TAX.JUR                                   SCV.REC(24)<ECD.SCRN.NO>=TAX.JUR
1134 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1135 CASE IVC.CHG.CAT<1,REF.NO>="SHP"                                   CASE IVC.CHG.CAT<1,REF.NO>="SHP"

1138 SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>                    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
1139 SCV.REC(24)<ECD.SCRN.NO>=""                                        SCV.REC(24)<ECD.SCRN.NO>=""
1140 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1141 ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
1142 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
1143 ;*T25946 v                                                      <  
1144 IF ECD.RET.VALUE = "???" THEN                                   <  
1145 GXR.CO = CONO                                                   <  
1146 GXR.NAME = "SHIP.VIA"                                           <  
1147 GXR.FILE = SHIP.VIA                                             <  

1148 GXR.SORT.FILE = SHIP.VIA                                        <  
1149 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
1150 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  
1151 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
1152 *T27851 v                                                       <  
1153 CURR.REF.NO = ""                                                <  
1154 GOSUB 10000                                                     <  

1155 *T27851 ^                                                       <  
1156 IF GXR.ID = "" THEN GOTO 6015                                   <  
1157 ECD.RET.VALUE = GXR.ID                                          <  
1158 END                                                             <  
1159 ;*T25946 ^                                                      <  
1160 MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE        MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
1161 ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"                 ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"

1169 END                                                                END
1170 IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE                               IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
1171 IVC.TAXABLE<1,REF.NO>=""                                           IVC.TAXABLE<1,REF.NO>=""
1172 TMP.TAX.RATE<1,REF.NO>=""                                          TMP.TAX.RATE<1,REF.NO>=""
1173 TMP.TAX.CALC<1,REF.NO>=""                                          TMP.TAX.CALC<1,REF.NO>=""
1174 SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556          <  
1175 ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556          <  
1176 SCV.REC(24)<ECD.SCRN.NO>=SHPV.DESC                                 SCV.REC(24)<ECD.SCRN.NO>=SHPV.DESC
1177 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1178 * T20298                                                           * T20298

1184 SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>                    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
1185 SCV.REC(24)<ECD.SCRN.NO>=""                                        SCV.REC(24)<ECD.SCRN.NO>=""
1186 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1187 ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
1188 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
1189 ;*T25946 v                                                      <  
1190 IF ECD.RET.VALUE = "???" THEN                                   <  
1191 GXR.CO = CONO                                                   <  
1192 GXR.NAME = "SALES.CODE2"                                        <  
1193 GXR.FILE = SALES.CODE                                           <  

1194 GXR.SORT.FILE = SALES.CODE                                      <  
1195 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
1196 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  
1197 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
1198 *T27851 v                                                       <  
1199 CURR.REF.NO = ""                                                <  
1200 GOSUB 10000                                                     <  

1201 *T27851 ^                                                       <  
1202 IF GXR.ID = "" THEN GOTO 6015                                   <  
1203 ECD.RET.VALUE = GXR.ID                                          <  
1204 END                                                             <  
1205 ;*T25946 ^                                                      <  
1206 MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE           MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
1207 ERRMSG="Sales Code ":ECD.RET.VALUE:" is not on file"               ERRMSG="Sales Code ":ECD.RET.VALUE:" is not on file"

1210 END                                                                END
1211 IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE                               IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
1212 IVC.TAXABLE<1,REF.NO>=""                                           IVC.TAXABLE<1,REF.NO>=""
1213 TMP.TAX.RATE<1,REF.NO>=""                                          TMP.TAX.RATE<1,REF.NO>=""
1214 TMP.TAX.CALC<1,REF.NO>=""                                          TMP.TAX.CALC<1,REF.NO>=""
1215 SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556          <  
1216 SCV.REC(24)<ECD.SCRN.NO>= ""                                    <  
1217 ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556          <  
1218 ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
1219 CASE 1                                                             CASE 1

1220 IVC.TAX.JURS<1,REF.NO>=""                                          IVC.TAX.JURS<1,REF.NO>=""
1221 IVC.TAXABLE<1,REF.NO>=""                                           IVC.TAXABLE<1,REF.NO>=""
1222 TMP.TAX.RATE<1,REF.NO>=""                                          TMP.TAX.RATE<1,REF.NO>=""
1223 TMP.TAX.CALC<1,REF.NO>=""                                          TMP.TAX.CALC<1,REF.NO>=""
1224 END CASE                                                           END CASE
1225 ;*T23546 v                                                      |  *T23546 v
1226 IF MODE="A" AND INC.DESC # "" THEN                              |  * IF MODE="A" AND INC.DESC # "" THEN
1227 *   IF (MODE="A" OR MODE = "C") AND INC.DESC # "" THEN          |  IF (MODE="A" OR MODE = "C") AND INC.DESC # "" THEN
1228 ;*T23546 ^ REMOVED BY T28274                                    |  *T23546 ^
1229 SCV.REC(15)<ECD.SCRN.NO,REF.NO>=INC.DESC                           SCV.REC(15)<ECD.SCRN.NO,REF.NO>=INC.DESC

1252 SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""                                 SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""
1253 ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1254 END CASE                                                           END CASE
1255 * T22154 v                                                         * T22154 v
1256 IF IVC.HIDDEN<1,REF.NO> = 'Y' THEN                                 IF IVC.HIDDEN<1,REF.NO> = 'Y' THEN
1257 ;*T22759 CHG DONE TO XDONE v                                    |  *T22759 CHG DONE TO XDONE v
1258 XDONE = 0                                                          XDONE = 0
1259 FOR X = REF.NO - 1 TO 1 STEP -1 UNTIL XDONE                        FOR X = REF.NO - 1 TO 1 STEP -1 UNTIL XDONE
1260 *T25089 v                                                       <  
1261 IF IVC.HIDDEN<1,X> # 'Y' THEN                                      IF IVC.HIDDEN<1,X> # 'Y' THEN

1262 IF IVC.CHG.CAT <1,X> # "CMT" AND IVC.CHG.CAT<1,X> # "TAX" AND   <  
1263 *T25089 ^                                                       <  
1264 IF IVC.UM<1,X> # ECD.RET.VALUE THEN                                IF IVC.UM<1,X> # ECD.RET.VALUE THEN
1265 ERRMSG = 'UM must match the associated detail line ':X             ERRMSG = 'UM must match the associated detail line ':X
1266 GOSUB 90000                                                        GOSUB 90000
1267 ;*T22747       GOTO 6025                                        |  *T22747       GOTO 6025
1268 GOTO 6000                                                          GOTO 6000

1267 ;*T22747       GOTO 6025                                        |  *T22747       GOTO 6025
1268 GOTO 6000                                                          GOTO 6000
1269 END                                                                END
1270 XDONE = 1                                                          XDONE = 1
1271 END                                                                END
1272 END ; *T25089                                                   <  
1273 NEXT X                                                             NEXT X
1274 END ELSE                                                           END ELSE
1275 IF IVC.HIDDEN<1,REF.NO + 1> = 'Y' THEN                             IF IVC.HIDDEN<1,REF.NO + 1> = 'Y' THEN
1276 IF IVC.UM<1,REF.NO + 1> # ECD.RET.VALUE THEN                       IF IVC.UM<1,REF.NO + 1> # ECD.RET.VALUE THEN

1287 ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1288 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
1289 IVC.DESC<1,REF.NO>=ECD.RET.VALUE                                   IVC.DESC<1,REF.NO>=ECD.RET.VALUE
1290 *---- GET AMOUNT                                                   *---- GET AMOUNT
1291 6040*                                                              6040*
1292 IF IVC.QUANTITY<1,REF.NO>="" OR IVC.UM<1,REF.NO>="" THEN        |  *T25372 v
1293                                                                 >  * IF IVC.QUANTITY<1,REF.NO>="" OR IVC.UM<1,REF.NO>="" THEN
1294                                                                 >  IF IVC.QUANTITY<1,REF.NO>="" THEN
1295                                                                 >  *T25372 ^
1296 SCV.REC(31)<ECD.SCRN.NO,REF.NO>=""                                 SCV.REC(31)<ECD.SCRN.NO,REF.NO>=""

1297 ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1298 IVC.UNIT.PRICE<1,REF.NO>=""                                        IVC.UNIT.PRICE<1,REF.NO>=""
1299 END                                                                END
1300 BEGIN CASE                                                         BEGIN CASE
1301 CASE IVC.QUANTITY<1,REF.NO> # ""                                   CASE IVC.QUANTITY<1,REF.NO> # ""
1302 IF IVC.UM<1,REF.NO>="" THEN                                     |  *T25372 v
1303 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  *         IF IVC.UM<1,REF.NO>="" THEN
1304 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT       |  *             ECD.MINV = "-99999999.99"; ECD.MAXV = "9999999
1305                                                                 >  *             ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CAL
1306 * CSF 22071                                                        * CSF 22071

1307 IF ECD.RET.VALUE # 'END' THEN                                   |  *             IF ECD.RET.VALUE # 'END' THEN
1308 *                                                                  *
1309 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE                              |  *                 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1310 * CSF 22071                                                        * CSF 22071
1311 END                                                             |  *             END
1312 *                                                                  *
1313 END ELSE                                                        |  *         END ELSE

1314                                                                 >  IF IVC.UM<1,REF.NO> # '' AND IVC.QUANTITY<1,REF.NO> # '' THE
1315                                                                 >  *T25372 ^
1316 ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1317 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
1318 IVC.UNIT.PRICE<1,REF.NO>=ECD.RET.VALUE                             IVC.UNIT.PRICE<1,REF.NO>=ECD.RET.VALUE
1319 BEGIN CASE                                                         BEGIN CASE
1320 CASE IVC.UNIT.PRICE<1,REF.NO>=""                                |  *T25372 v

1321 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  * CASE IVC.UNIT.PRICE<1,REF.NO>=""
1322                                                                 >  CASE IVC.UNIT.PRICE<1,REF.NO>="" AND IVC.UM<1,REF.NO> = ''
1323                                                                 >  *T25372 ^
1324                                                                 >  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1325 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1326 * CSF 22071                                                        * CSF 22071
1327 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN

1346 IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10+0.5)              IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10+0.5)
1347 END ELSE                                                           END ELSE
1348 IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10-0.5)              IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10-0.5)
1349 END                                                                END
1350 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=IVC.AMOUNT<1,REF.NO>               SCV.REC(17)<ECD.SCRN.NO,REF.NO>=IVC.AMOUNT<1,REF.NO>
1351 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1352 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1353 END                                                                END
1354 END                                                                END
1355 END                                                             |  *T25372   END

1357 CASE INC.CATEGORY="TAX"                                            CASE INC.CATEGORY="TAX"
1358 TAX.REF=REF.NO                                                     TAX.REF=REF.NO
1359 GOSUB 6400                                                         GOSUB 6400
1360 ECD.O.R="O";ECD.DEFAULT=TAMT                                       ECD.O.R="O";ECD.DEFAULT=TAMT
1361 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=TAMT;* T23525                      SCV.REC(17)<ECD.SCRN.NO,REF.NO>=TAMT;* T23525
1362 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1363 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1364 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
1365 IF ECD.RET.VALUE="" THEN                                           IF ECD.RET.VALUE="" THEN
1366 ECD.RET.VALUE=TAMT                                                 ECD.RET.VALUE=TAMT

1378 AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000     AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/10
1379 CASE 1                                                             CASE 1
1380 AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000     AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/10
1381 END CASE                                                           END CASE
1382 6045           DEFAULT=OCONV(AMT.TAX, "MD2"); O.R="O"              6045        DEFAULT=OCONV(AMT.TAX, "MD2"); O.R="O"
1383 ;*T25946 v                                                      |  X=0; Y=21; TYP=4; SCALER=2; MINV=0; MAXV=999999999
1384 *              X=0; Y=21; TYP=4; SCALER=2; MINV=0; MAXV=999999  <  
1385 X=0; Y=22; TYP=4; SCALER=2; MINV=0; MAXV=999999999              <  
1386 ;*T25946 ^                                                      <  
1387 * T20532                                                           * T20532

1387 * T20532                                                           * T20532
1388 *              MAXL=10; PMSG="Enter Taxable amount : "             *              MAXL=10; PMSG="Enter Taxable amount : "
1389 MAXL=12; PMSG="Enter Taxable amount : "                            MAXL=12; PMSG="Enter Taxable amount : "
1390 * T20532                                                           * T20532
1391 CALL EDIT.SUB                                                      CALL EDIT.SUB
1392 * T25764 v Have to move prompt messages to line 22              |  P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
1393 *              P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "C  <  
1394 P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"               <  
1395 * T25764 ^                                                      <  
1396 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1408 END                                                                END
1409 CASE IVC.CHG.CODE<1,REF.NO>="SUB"                                  CASE IVC.CHG.CODE<1,REF.NO>="SUB"
1410 GOSUB 6200                                                         GOSUB 6200
1411 ECD.RET.VALUE=AMT.SUB                                              ECD.RET.VALUE=AMT.SUB
1412 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.SUB                            SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.SUB
1413 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1414 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1415 * CSF 22071                                                        * CSF 22071
1416 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1417 *                                                                  *

1420 END                                                                END
1421 *                                                                  *
1422 CASE IVC.CHG.CODE<1,REF.NO>="SUBT"                                 CASE IVC.CHG.CODE<1,REF.NO>="SUBT"
1423 GOSUB 6200                                                         GOSUB 6200
1424 ECD.RET.VALUE=IVC.AMOUNT<1,REF.NO>                                 ECD.RET.VALUE=IVC.AMOUNT<1,REF.NO>
1425 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1426 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1427 CASE IVC.CHG.CODE<1,REF.NO>="TOT"                                  CASE IVC.CHG.CODE<1,REF.NO>="TOT"
1428 GOSUB 6200                                                         GOSUB 6200
1429 ECD.RET.VALUE=AMT.TOT                                              ECD.RET.VALUE=AMT.TOT

1430 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.TOT                            SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.TOT
1431 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1432 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1433 * CSF 22071                                                        * CSF 22071
1434 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1435 *                                                                  *
1436 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE                                 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1437 * CSF 22071                                                        * CSF 22071

1438 END                                                                END
1439 *                                                                  *
1440 CASE INC.CATEGORY="CMT"                                            CASE INC.CATEGORY="CMT"
1441 ECD.RET.VALUE=""                                                   ECD.RET.VALUE=""
1442 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=""                                 SCV.REC(17)<ECD.SCRN.NO,REF.NO>=""
1443 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1444 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
1445 * CSF 22071                                                        * CSF 22071
1446 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1447 *                                                                  *

1448 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE                                 IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1449 * CSF 22071                                                        * CSF 22071
1450 END                                                                END
1451 *                                                                  *
1452 CASE 1                                                             CASE 1
1453 ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532     |  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99"; *T20532
1454 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1455 * CSF 22071                                                        * CSF 22071
1456 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1457 *                                                                  *

1496 *                                                                  *
1497 6200*                                                              6200*
1498 AMT.SUB=0                                                          AMT.SUB=0
1499 AMT.TOT=0                                                          AMT.TOT=0
1500 AMT.SUBT=0                                                         AMT.SUBT=0
1501 * T27232 v                                                      |  FOR REF=1 TO REF.CNT + 1
1502 INV.CNT = DCOUNT(IVC.CHG.CODE<1>, VM)                           <  
1503 FOR REF=1 TO INV.CNT + 1                                        <  
1504 IF TOGGLE.FLAG = 1 AND ADD.SUBS = 0 THEN                        <  
1505 IF IVC.CHG.CODE<1,REF> # 'CMT' AND IVC.CHG.JOB<1,REF> # JOB.NO  <  

1506 END                                                             <  
1507 * T27232 ^                                                      <  
1508 CODE=IVC.CHG.CODE<1,REF>                                           CODE=IVC.CHG.CODE<1,REF>
1509 CATG=IVC.CHG.CAT<1,REF>                                            CATG=IVC.CHG.CAT<1,REF>
1510 AMT=IVC.AMOUNT<1,REF>                                              AMT=IVC.AMOUNT<1,REF>
1511 BEGIN CASE                                                         BEGIN CASE
1512 CASE CODE="SUB"                                                    CASE CODE="SUB"

1586 RETURN                                                             RETURN
1587 *                                                                  *
1588 7000* INV ALLOC                                                    7000* INV ALLOC
1589 * 17927                                                            * 17927
1590 IF PROG.FLAG = "I" AND IVC.ALLOC.DIV<1,REF.NO> # "" THEN           IF PROG.FLAG = "I" AND IVC.ALLOC.DIV<1,REF.NO> # "" THEN
1591 *T28085      COA.LEVEL = 2                                      |  COA.LEVEL = 2
1592 COA.LEVEL = 3 ;*T28085                                          <  
1593 END ELSE                                                           END ELSE
1594 COA.LEVEL = 0                                                      COA.LEVEL = 0
1595 END                                                                END

1644 END ELSE                                                           END ELSE
1645 MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0       MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
1646 END                                                                END
1647 END CASE                                                           END CASE
1648 IF COA.LEVEL < 1 THEN RETURN                                       IF COA.LEVEL < 1 THEN RETURN
1649 *T28610                                                         <  
1650 IF IVC.AMOUNT<1,REF.NO> = 0 THEN                                <  
1651 IVC.ALLOC.DIV<1,REF.NO> = ""                                    <  
1652 IVC.ALLOC.AMT<1,REF.NO> = ""                                    <  
1653 RETURN                                                          <  

1654 END                                                             <  
1655 *T28610                                                         <  
1656 CALL INV.ALLOC.MAINT(CONO, BAL.FLG, IVC.NO, JOBNO, MENU, PROG.     CALL INV.ALLOC.MAINT(CONO, BAL.FLG, IVC.NO, JOBNO, MENU, PRO
1657 IF ECD.RET.VALUE = 'END' THEN ECD.RET.VALUE = 'E' ;*T25423      <  
1658 ECD.SCRN.NO = 2                                                    ECD.SCRN.NO = 2
1659 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
1660                                                                 >  *CSF 24840 v

1661                                                                 >  *           GOSUB 9000
1662                                                                 >  *CSF 24840 ^
1663 IF BAL.FLG = "P" OR BAL.FLG = "N" THEN                             IF BAL.FLG = "P" OR BAL.FLG = "N" THEN
1664 SCV.REC(34)<ECD.SCRN.NO,REF.NO> = "*"                              SCV.REC(34)<ECD.SCRN.NO,REF.NO> = "*"
1665 END                                                                END
1666 IF BAL.FLG = "Y" THEN                                              IF BAL.FLG = "Y" THEN
1667 SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""                               SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""

1666 IF BAL.FLG = "Y" THEN                                              IF BAL.FLG = "Y" THEN
1667 SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""                               SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""
1668 END                                                                END
1669 LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE BA     LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE 
1670 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
1671 ;*T25410 v *Reset var to null to redisplay the screen at start  |  CURR.REF.NO = REF.NO - 1
1672 * CURR.REF.NO = REF.NO - 1                                      <  
1673 CURR.REF.NO = ''                                                <  
1674 * T25410 ^                                                      <  
1675 GOSUB 10000                                                        GOSUB 10000

1706 END                                                                END
1707 END ELSE                                                           END ELSE
1708 SCV.REC(10)<ECD.SCRN.NO>="PROCESSED"                               SCV.REC(10)<ECD.SCRN.NO>="PROCESSED"
1709 SCV.REC(11)<ECD.SCRN.NO>=IVC.PROC.DATE                             SCV.REC(11)<ECD.SCRN.NO>=IVC.PROC.DATE
1710 END                                                                END
1711 GOSUB SET.LINE.ITEMS        ;* T27232                           |  REF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
1712 SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL                          |  FOR REF=1 TO REF.CNT
1713 * T25764 v Define screen                                        |  SCV.REC(13)<ECD.SCRN.NO,REF>=IVC.CHG.CODE<1,REF>
1714 *T28664 v                                                       |  SCV.REC(14)<ECD.SCRN.NO,REF>=IVC.QUANTITY<1,REF>
1715 MAT TERMS.REC = ''                                              |  SCV.REC(30)<ECD.SCRN.NO,REF>=IVC.UM<1,REF>

1716 IF IVC.TERMS # "" THEN                                          |  SCV.REC(15)<ECD.SCRN.NO,REF>=IVC.DESC<1,REF>
1717 MATREAD TERMS.REC FROM TERMS,CONO:IVC.TERMS ELSE                |  SCV.REC(31)<ECD.SCRN.NO,REF>=IVC.UNIT.PRICE<1,REF>
1718 *       MAT TERMS.REC = ""                                      |  SCV.REC(17)<ECD.SCRN.NO,REF>=IVC.AMOUNT<1,REF>
1719 TERMS.DESC = "???????????"                                      |  IF IVC.CHG.CAT<1,REF>="TAX" THEN
1720                                                                 >  MATREAD TAX.REC FROM TAX, CONO:IVC.TAX.JURS<1,REF> ELSE
1721                                                                 >  MAT TAX.REC=""
1722                                                                 >  ERRMSG="CANNOT LOCATE TAX JURISDICTION - ":IVC.TAX.JURS

1723                                                                 >  GOSUB 90000
1724 END                                                                END
1725 END ELSE TERMS.DESC = ''                                        |  TMP.TAX.RATE<1,REF>=TAX.RATE
1726 *T28664 ^                                                       |  TAX.REF=REF
1727 SCV.REC(40)<ECD.SCRN.NO>=IVC.TERMS                              |  GOSUB 6400
1728 SCV.REC(41)<ECD.SCRN.NO>=TERMS.DESC                             |  IF IVC.AMOUNT<1,REF>=TAMT THEN
1729 IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS                        |  TMP.TAX.CALC<1,REF>="C"

1730 SCV.REC(42)<ECD.SCRN.NO>=IVC.DUE.DATE                           |  END ELSE
1731 SCV.REC(43)<ECD.SCRN.NO>=IVC.PRT.FLG<1,2>                       |  TMP.TAX.CALC<1,REF>="E"
1732 * T25764 ^                                                      |  END
1733                                                                 >  END
1734                                                                 >  NEXT REF
1735                                                                 >  SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL
1736 RETURN                                                             RETURN

1737 *                                                                  *
1738 *---- DISPLAY MULTI-LINE FIELDS                                    *---- DISPLAY MULTI-LINE FIELDS
1739 *                                                                  *
1740 10000*                                                             10000*
1741 START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT             START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
1742 * IF START.REF.NO=CURR.REF.NO THEN RETURN                       |  IF START.REF.NO=CURR.REF.NO THEN RETURN
1743 CURR.REF.NO=START.REF.NO                                           CURR.REF.NO=START.REF.NO
1744 ECD.NUM=12;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=12;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E
1745 ECD.NUM=13;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=13;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E
1746 ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E

1854 MATCH.ERROR=1                                                      MATCH.ERROR=1
1855 ERRMSG="WIP exceeds shipping charges entered by ":OCONV((SHIP.     ERRMSG="WIP exceeds shipping charges entered by ":OCONV((SHI
1856 GOSUB 90000                                                        GOSUB 90000
1857 END                                                                END
1858 RETURN                                                             RETURN
1859 * T27232 v                                                      <  
1860 *                                                                  *
1861 SET.LINE.ITEMS:                                                 <  
1862 *                                                               <  
1863 TCNT = 0 ; MATCH.ARR = ''                                       <  

1864 REF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")            <  
1865 FOR REF=1 TO REF.CNT                                            <  
1866 IF TOGGLE.FLAG = 1 AND ADD.SUBS = 0 THEN                        <  
1867 IF IVC.CHG.CODE<1,REF> # 'CMT' AND IVC.CHG.JOB<1,REF> # JOB.NO  <  
1868 END                                                             <  
1869 TCNT += 1                                                       <  
1870 MATCH.ARR<1,TCNT> = REF                                         <  

1871 SCV.REC(13)<ECD.SCRN.NO,TCNT>=IVC.CHG.CODE<1,REF>               <  
1872 SCV.REC(14)<ECD.SCRN.NO,TCNT>=IVC.QUANTITY<1,REF>               <  
1873 SCV.REC(30)<ECD.SCRN.NO,TCNT>=IVC.UM<1,REF>                     <  
1874 SCV.REC(15)<ECD.SCRN.NO,TCNT>=IVC.DESC<1,REF>                   <  
1875 SCV.REC(31)<ECD.SCRN.NO,TCNT>=IVC.UNIT.PRICE<1,REF>             <  
1876 SCV.REC(17)<ECD.SCRN.NO,TCNT>=IVC.AMOUNT<1,REF>                 <  
1877 IF IVC.CHG.CAT<1,REF>="TAX" THEN                                <  

1878 MATREAD TAX.REC FROM TAX, CONO:IVC.TAX.JURS<1,REF> ELSE         <  
1879 MAT TAX.REC=""                                                  <  
1880 ERRMSG="CANNOT LOCATE TAX JURISDICTION - ":IVC.TAX.JURS         <  
1881 GOSUB 90000                                                     <  
1882 END                                                             <  
1883 TMP.TAX.RATE<1,TCNT>=TAX.RATE                                   <  
1884 TAX.REF=REF                                                     <  

1885 GOSUB 6400                                                      <  
1886 IF IVC.AMOUNT<1,REF>=TAMT THEN                                  <  
1887 TMP.TAX.CALC<1,TCNT>="C"                                        <  
1888 END ELSE                                                        <  
1889 TMP.TAX.CALC<1,TCNT>="E"                                        <  
1890 END                                                             <  
1891 END                                                             <  

1892 NEXT REF                                                        <  
1893 IF (TOGGLE.FLAG) THEN REF.CNT = DCOUNT(SCV.REC(13)<ECD.SCRN.NO  <  
1894 *                                                               <  
1895 RETURN                                                          <  
1896 * T27232 ^                                                      <  
1897 *                                                               <  
1898 *---- ERROR ROUTINE                                                *---- ERROR ROUTINE

1899 *                                                                  *
1900 90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1901                                                                 >  * 90000*
1902                                                                 >  *          PRINT @(0,23):CL:ERRMSG:
1903                                                                 >  *          INPUT REPLY,1:
1904                                                                 >  *          PRINT @(0,23):CL:
1905                                                                 >  *          RETURN
1906 *                                                                  *
1907 *---- END OF PROGRAM                                               *---- END OF PROGRAM


JCSBP/INVOICE.WIP.SUB                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/INVOICE.WIP.SUB
Printed for thompson at 06/28/2006 04:41:51PM

0001 SUBROUTINE INVOICE.WIP.SUB (CONO, ACTION, IVC.NO, MENU, PROG.F  |  SUBROUTINE INVOICE.WIP.SUB (CONO, ACTION, IVC.NO, MENU, PROG
0002 **************************************************************     ************************************************************
0003 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0004 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0005 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0006 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP
0007 * PROGRAM     - INVOICE.WIP.SUB                                    * PROGRAM     - INVOICE.WIP.SUB

0008 * AUTHOR      - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES      |  * AUTHOR      - EDVARD PITKA, COMPUTER BUSINESS ASSOCIATES
0009 * DATE        - 10/17/85                                        |  * DATE        - 08/01/00
0010 * DESCRIPTION                                                      * DESCRIPTION
0011 * This program is used to load data to reverse wip                 * This program is used to load data to reverse wip
0012 *T22726 renee 04/07/1998 * Need to set ACTION to END in order   |  *T24584 edvard 07/12/2000 * COMPLETELY REWRITE REVERSAL PROC
0013 *                          problems when returning back to      |  *                           TO THE SPECFICATION 24583
0014 *                          INVOICE.SUB.MAINT.F4                 |  *C37366 alex 11/09/2000 * Fix prgm, showing division by zero

0015 *T23244 markt 09/09/1998 * Adjust alignment of WIP percent fie  |  *                         message.
0016 *                          position of field on screen          |  *C39205 lhelms 12/05/2001 * DIRECT LABOR IS BEING CALCULATED
0017 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  |  *                           OVERHEAD
0018 *T28826 wvaughan 05/10/2006 * Addition to the Credit Memo of t  |  *T26605 lhelms 12/05/2002 * COMBINE WIP SCREENS 1 AND 2 AND 
0019 *                             invoice prompt                    |  *                           INVOICE PERIOD POST
0020                                                                 >  *C42056 lross 06/24/2003 * OVH not showing, prompts not work
0021 *ENDDOC                                                            *ENDDOC

0021 *ENDDOC                                                            *ENDDOC
0022 **************************************************************     ************************************************************
0023 *                                                                  *
0024 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0025 *COPY>JCS.CPYLIB>COM.INVOICE                                       *COPY>JCS.CPYLIB>COM.INVOICE
0026                                                                 >  *COPY>CBN.CPYLIB>COM.INVOICE.WIP.SUB
0027 *COPY>JCS.CPYLIB>INVOICE                                           *COPY>JCS.CPYLIB>INVOICE
0028                                                                 >  *COPY>PMC.CPYLIB>COMPANY
0029                                                                 >  **   *COPY>JES.CPYLIB>COM.ESTIMATE
0030 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER

0030 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0031 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0032 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0033 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0034 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0035 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                              |  *24584 v
0036                                                                 >  *COPY>JES.CPYLIB>ESTIMATE
0037                                                                 >  *COPY>JES.CPYLIB>EST.COST.TYPE.SUM
0038                                                                 >  *COPY>JCS.CPYLIB>JOB
0039                                                                 >  *COPY>JCS.CPYLIB>JOB.TIME

0040                                                                 >  *COPY>JCS.CPYLIB>JOB.MATL
0041                                                                 >  *COPY>JCS.CPYLIB>JOB.OSP
0042                                                                 >  *COPY>JCS.CPYLIB>JOB.SHIP
0043                                                                 >  *COPY>JCS.CPYLIB>JOB.MISC
0044                                                                 >  **COPY>CBN.CPYLIB>COM.INVOICE.WIP.SUB
0045                                                                 >  *COPY>CBN.CPYLIB>CBN.INVOICE.WIP.SUB
0046 *                                                                  *

0047                                                                 >  *
0048                                                                 >  *---- OPEN
0049                                                                 >  OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG = "JOB.TIME FILE
 
0050                                                                 >  OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = "JOB.MATL FILE 
0051                                                                 >  OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG = "JOB.OSP FILE IS 
0052                                                                 >  OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG = "JOB.SHIP FILE 
0053                                                                 >  OPEN '','JOB.MISC' TO JOB.MISC ELSE ERRMSG = "JOB.MISC FILE 

0054                                                                 >  *
0055                                                                 >  *
0056 *---- INITIALIZATION                                               *---- INITIALIZATION
0057 *                                                                  *
0058                                                                 >  *value positions in the array corespond with positions of th
0059                                                                 >  *MATRX array. This makes possible to use one prompt subrouti
0060                                                                 >  * input fields ( 5 in each column).

0061                                                                 >  *
0062                                                                 >  PRMPT.ARR = "L":VM:"M":VM:"O":VM:"SH":VM:"MI"
0063                                                                 >  *
0064                                                                 >  ************************************************************
0065                                                                 >  *
0066                                                                 >  100:*
0067                                                                 >  *

0068                                                                 >  MAT MATRX = ""
0069                                                                 >  *
0070                                                                 >  *       1. IN 2. OUT 3. WIP 4. REV.$ 5. REV% 6. WIP.AFT 7.OU
0071                                                                 >  * 1. DL
0072                                                                 >  * 2. DM
0073                                                                 >  * 3. OSP
0074                                                                 >  * 4. SHP

0075                                                                 >  * 5. MSC
0076                                                                 >  * 6. TOT.DIR
0077                                                                 >  * 7. VOH
0078                                                                 >  * 8. FOH
0079                                                                 >  * 9. S&A
0080                                                                 >  *10. TOT.OVR.
0081                                                                 >  *

0082                                                                 >  * BOTTOM HALF OF SCREEN
0083                                                                 >  *  TO CALC SUGGESTED OVERHEAD PER MATRX(5,DD) FOR EACH CATEG
0084                                                                 >  *
0085                                                                 >  * 
0086                                                                 >  OVH.MATRX = ""
0087                                                                 >  FOR M = 1 TO 15; OVH.MATRX<M>=0; NEXT M
0088                                                                 >  *

0089                                                                 >  * IN COL 1
0090                                                                 >  * OVH.MATRX<1> - DL   1,1 FIXED, 1,2 VARIABLE, 1,3 S&A
0091                                                                 >  * OVH.MATRX<2> - DM   2,1 FIXED, 2,2 VARIABLE
0092                                                                 >  * OVH.MATRX<3> - OSP  3,1 FIXED
0093                                                                 >  * OVH.MATRX<4> - SHP  4,1 FIXED
0094                                                                 >  * OVH.MATRX<5> - MISC 5,1 FIXED
0095                                                                 >  * OUT COL 2

0096                                                                 >  * OVH.MATRX<6> - DL   1,1 FIXED, 1,2 VARIABLE, 1,3 S&A
0097                                                                 >  * OVH.MATRX<7> - DM   2,1 FIXED, 2,2 VARIABLE
0098                                                                 >  * OVH.MATRX<8> - OSP  3,1 FIXED
0099                                                                 >  * OVH.MATRX<9> - SHP  4,1 FIXED
0100                                                                 >  * OVH.MATRX<10> - MISC 5,1 FIXED
0101                                                                 >  * WIP COL 3
0102                                                                 >  * OVH.MATRX<11> - DL   1,1 FIXED, 1,2 VARIABLE, 1,3 S&A

0103                                                                 >  * OVH.MATRX<12> - DM   2,1 FIXED, 2,2 VARIABLE
0104                                                                 >  * OVH.MATRX<13> - OSP  3,1 FIXED
0105                                                                 >  * OVH.MATRX<14> - SHP  4,1 FIXED
0106                                                                 >  * OVH.MATRX<15> - MISC 5,1 FIXED
0107                                                                 >  *
0108                                                                 >  *
0109                                                                 >  INVOICE.AMT="" ; INV.JTD.AMT = ""

0110                                                                 >  INV.JTD.QTY = ""
0111                                                                 >  FUTURE.WIP = ""
0112                                                                 >  DIM HOLD.IVC.REC(70)
0113                                                                 >  MAT HOLD.IVC.REC = ""
0114                                                                 >  DIM HOLD.JOB.REC(200)
0115                                                                 >  MAT HOLD.JOB.REC = ""
0116                                                                 >  *

0117                                                                 >  *
0118                                                                 >  *
0119                                                                 >  ************************************************************
0120                                                                 >  *
0121                                                                 >  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0122 ECD.SCRN.NO=3                                                      ECD.SCRN.NO=3
0123                                                                 >  ESN = ECD.SCRN.NO

0124 FOR SCV = 1 TO SCV.REC.SIZE                                        FOR SCV = 1 TO SCV.REC.SIZE
0125 SCV.REC(SCV)<ECD.SCRN.NO>=""                                    |  SCV.REC(SCV)<ESN>=""
0126 NEXT SCV                                                           NEXT SCV
0127 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0128 ERRMSG=""                                                          ERRMSG=""
0129 PAGE.SIZE = 5                                                   <  
0130 BEGIN.PAGE = 10                                                 <  
0131 LINE.SPACE = 1                                                  <  

0132 LINES = 0                                                       <  
0133 LN = 1                                                          <  
0134 OLD.START.LINE = 0                                              <  
0135 ALL.TYPE = "LB"                                                 <  
0136 ALL.TYPE<1,2> = "MT"                                            <  
0137 ALL.TYPE<1,3> = "OS"                                            <  
0138 ALL.TYPE<1,4> = "SP"                                            <  

0139 ALL.TYPE<1,5> = "MS"                                            <  
0140 LINE.DESC = ""                                                  <  
0141 MAIN.DESC = "OTHER - "                                          <  
0142 *                                                                  *
0143                                                                 >  SCV.REC(1)<ESN> = IVC.NO
0144                                                                 >  SCV.REC(4)<ESN> = IVC.JOB.NO
0145                                                                 >  SCV.REC(6)<ESN> = JOB.EST

0146                                                                 >  SCV.REC(5)<ESN> = JOB.DESC
0147                                                                 >  ECD.ACTION = 3
0148                                                                 >  CALL SCRN.EDIT
0149                                                                 >  *
0150                                                                 >  INVOICE.DESC = ""
0151                                                                 >  INVOICE.DESC<1> = "F":VM:"P":VM:"M":VM:"E":VM:"Q"
0152                                                                 >  INVOICE.DESC<2> = "FINAL":VM:"PARTIAL":VM:"MONTHLY"

0153                                                                 >  *
0154                                                                 >  * T26605
0155                                                                 >  * GET TYPE FIELD F-FINAL, M-MONTHLY, P-PARTIAL
0156                                                                 >  *
0157                                                                 >  ECD.NUM = 2;ECD.ACTION = 4; CALL SCRN.EDIT
0158                                                                 >  IF ECD.RET.VALUE = "E" THEN GOTO 99999
0159                                                                 >  IF ECD.RET.VALUE = "Q" THEN GOTO 99999

0160                                                                 >  TYPE.INVOICE = ECD.RET.VALUE
0161                                                                 >  IVC.INVOICE.TYPE = ECD.RET.VALUE
0162                                                                 >  *
0163                                                                 >  LOCATE TYPE.INVOICE IN INVOICE.DESC<1>,1 SETTING IINDEX THEN
0164                                                                 >  INVOICE.SCRN.DESC = INVOICE.DESC<2,IINDEX>
0165                                                                 >  ECD.NUM = 3
0166                                                                 >  SCV.REC(3)<ESN> = INVOICE.SCRN.DESC

0167                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0168                                                                 >  END ELSE
0169                                                                 >  TYPE.INVOICE = ""
0170                                                                 >  INVOICE.SCRN.DESC = ""
0171                                                                 >  RETURN
0172                                                                 >  END
0173                                                                 >  *

0174                                                                 >  *
0175                                                                 >  *
0176 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0177 *                                                                  *
0178 SCV.REC(4)<ECD.SCRN.NO> = IVC.NO                                |  FUTURE.WIP = ""
0179 SCV.REC(5)<ECD.SCRN.NO> = IVC.JOB.NO                            |  MATREAD EST.REC FROM ESTIMATE,CONO:JOB.EST ELSE MAT EST.REC 
0180 SCV.REC(6)<ECD.SCRN.NO> = IVC.CUST.NO                           |  *;master job

0181 SCV.REC(7)<ECD.SCRN.NO> = IVC.CUST.NAME                         |  IF TYPE.INVOICE = "F" THEN
0182                                                                 >  GOSUB GET.DIR.WIP.OUT
0183                                                                 >  GOSUB GET.OVH.OUT
0184                                                                 >  GOSUB GET.EST.COSTS
0185                                                                 >  GOSUB GET.OVR.WIP.OUT
0186                                                                 >  *
0187                                                                 >  * CALC FUTURE WIP

0188                                                                 >  *
0189                                                                 >  TEMP.JOB.NO = CONO:CURR.JOB.NO
0190                                                                 >  GOSUB GET.COST.PERIOD
0191                                                                 >  END ELSE
0192                                                                 >  TEMP.JOB.NO = CONO:CURR.JOB.NO
0193                                                                 >  GOSUB GET.OVH.OUT
0194                                                                 >  GOSUB GET.COST.PERIOD

0195                                                                 >  GOSUB GET.EST.COSTS
0196                                                                 >  END
0197                                                                 >  ;*subjobs
0198                                                                 >  SAVE.JOB.SUBS =  ""
0199                                                                 >  IF JOB.SUBS # "" THEN
0200                                                                 >  SUB.JOBS = JOB.SUBS
0201                                                                 >  SAVE.JOB.SUBS = JOB.SUBS

0202                                                                 >  MAT HOLD.JOB.REC = MAT JOB.REC 
0203                                                                 >  SUB.NUM = DCOUNT(SUB.JOBS<1>,VM)
0204                                                                 >  FOR KK = 1 TO SUB.NUM
0205                                                                 >  MATREAD JOB.REC FROM JOB, CONO:SUB.JOBS<1,KK> THEN
0206                                                                 >  TEMP.JOB.NO = CONO:SUB.JOBS<1,KK>
0207                                                                 >  IF TYPE.INVOICE = "F" THEN
0208                                                                 >  GOSUB GET.DIR.WIP.OUT

0209                                                                 >  GOSUB GET.OVH.OUT
0210                                                                 >  GOSUB GET.EST.COSTS
0211                                                                 >  GOSUB GET.OVR.WIP.OUT   
0212                                                                 >  *
0213                                                                 >  * CALC FUTURE WIP
0214                                                                 >  *
0215                                                                 >  TEMP.JOB.NO = CONO:SUB.JOBS<1,KK>

0216                                                                 >  GOSUB GET.COST.PERIOD
0217                                                                 >  END ELSE
0218                                                                 >  TEMP.JOB.NO = CONO:SUB.JOBS<1,KK>
0219                                                                 >  GOSUB GET.OVH.OUT
0220                                                                 >  GOSUB GET.COST.PERIOD
0221                                                                 >  END
0222                                                                 >  END ELSE

0223                                                                 >  MAT JOB.REC = ""
0224                                                                 >  END
0225                                                                 >  NEXT KK
0226                                                                 >  MAT JOB.REC = MAT HOLD.JOB.REC
0227                                                                 >  END
0228                                                                 >  IF TYPE.INVOICE = "F" THEN
0229                                                                 >  DL.IN += DL.WIP + DL.OUT

0230                                                                 >  DM.IN += DM.WIP + DM.OUT
0231                                                                 >  OSP.IN += OSP.WIP + OSP.OUT
0232                                                                 >  SHP.IN += SHP.WIP + SHP.OUT
0233                                                                 >  MSC.IN += MSC.WIP + MSC.OUT
0234                                                                 >  END ELSE
0235                                                                 >  IF TYPE.INVOICE # "F" THEN
0236                                                                 >  DL.WIP = DL.IN + DL.OUT

0237                                                                 >  DL.OUT = DL.OUT * -1
0238                                                                 >  DM.WIP = DM.IN + DM.OUT
0239                                                                 >  DM.OUT = DM.OUT * -1
0240                                                                 >  OSP.WIP = OSP.IN + OSP.OUT
0241                                                                 >  OSP.OUT = OSP.OUT * -1
0242                                                                 >  SHP.WIP = SHP.IN + SHP.OUT
0243                                                                 >  SHP.OUT = SHP.OUT * -1

0244                                                                 >  MSC.WIP = MSC.IN + MSC.OUT
0245                                                                 >  MSC.OUT = MSC.OUT * -1
0246                                                                 >  FOH.WIP = FOH.IN + FOH.OUT
0247                                                                 >  FOH.OUT = FOH.OUT * -1
0248                                                                 >  VOH.WIP = VOH.IN + VOH.OUT
0249                                                                 >  VOH.OUT = VOH.OUT * -1
0250                                                                 >  SA.WIP  = SA.IN + SA.OUT

0251                                                                 >  SA.OUT  = SA.OUT * -1
0252                                                                 >  END
0253                                                                 >  END
0254                                                                 >  GOSUB CALC.TOTALS
0255                                                                 >  GOSUB CALC.OVR.REV.AMOUNTS
0256                                                                 >  GOSUB GET.INVOICE.AMT
0257                                                                 >  GOSUB GET.JTD.INV.AMT.QTY

0258                                                                 >  IF INV.JTD.AMT = INVOICE.AMT THEN
0259                                                                 >  SALES.OUT = INVOICE.AMT
0260                                                                 >  END ELSE
0261                                                                 >  SALES.OUT = INV.JTD.AMT - INVOICE.AMT
0262                                                                 >  END
0263                                                                 >  IF TYPE.INVOICE # "P" THEN
0264                                                                 >  GOSUB CALC.SUG.REV

0265                                                                 >  END ELSE
0266                                                                 >  IF JOB.EST # "" THEN
0267                                                                 >  GOSUB CALC.SUG.REV.PARTIAL
0268                                                                 >  END
0269                                                                 >  END
0270                                                                 >  * T26605
0271                                                                 >  GOSUB GET.STATISTIC

0272                                                                 >  GOSUB BUILD.SCRN.REC
0273                                                                 >  SCV.REC(2)<ECD.SCRN.NO> = TYPE.INVOICE
0274                                                                 >  SCV.REC(3)<ECD.SCRN.NO> = INVOICE.SCRN.DESC
0275                                                                 >  SCV.REC(7)<ECD.SCRN.NO> =INT(FUTURE.WIP/100+0.5)
0276 ECD.ACTION = 3                                                     ECD.ACTION = 3
0277 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0278 READ CTL.WIP.TYPE FROM CONTROL, CONO : "WIP.DEFAULT" ELSE CTL.  |  *

0279 IF CTL.WIP.TYPE = "" THEN CTL.WIP.TYPE = "ALL"                  |  IF TYPE.INVOICE = "F" AND (FUTURE.WIP +0) > 0 THEN
0280 IF PROG.FLAG = "I" OR IVC.PROC.DATE # "" OR IVC.WIP.DATE # ""   |  ERRMSG = "Future WIP exists"
0281 LINES = COUNT(IVC.WIP.DATE,VM) + (IVC.WIP.DATE # "")            |  GOSUB 90000
0282 IF LINES = 1 AND IVC.WIP.TYPE = "" THEN                         <  
0283 IVC.WIP.TYPE = "ALL"                                            <  
0284 END                                                                END
0285 FOR LN = 1 TO LINES                                             |  *

0286                                                                 >  *** main prompt
0287                                                                 >  *
0288                                                                 >  500:*
0289                                                                 >  DONE = 0
0290                                                                 >  LOOP
0291                                                                 >  *C37366 v
0292                                                                 >  IF PROG.FLAG = 'I' THEN

0293                                                                 >  ECD.NUM = 57 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
0294                                                                 >  END ELSE
0295                                                                 >  ECD.NUM = 56 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
0296                                                                 >  END
0297                                                                 >  *C37366 ^
0298 BEGIN CASE                                                         BEGIN CASE
0299 CASE IVC.WIP.TYPE<1,LN> = "LB"                                  |  CASE NUM(TRIM(ECD.RET.VALUE))

0300 LINE.DESC<1,LN> = "LABOR"                                       |  IF ECD.RET.VALUE = 1 THEN GOTO 100
0301 CASE IVC.WIP.TYPE<1,LN> = "MT"                                  |  IF ECD.RET.VALUE = 2 THEN
0302 LINE.DESC<1,LN> = "MATERIAL"                                    |  IF TYPE.INVOICE # "F" THEN
0303 CASE IVC.WIP.TYPE<1,LN> = "OS"                                  |  GOSUB CHG.SUG.$
0304 LINE.DESC<1,LN> = "OUTSIDE PURCHASE"                            |  END ELSE
0305 CASE IVC.WIP.TYPE<1,LN> = "SP"                                  |  ERRMSG = "Invalid for a FINAL invoice"
0306 LINE.DESC<1,LN> = "SHIPPING"                                    |  GOSUB 90000

0307 CASE IVC.WIP.TYPE<1,LN> = "MS"                                  <  
0308 LINE.DESC<1,LN> = "MISCELLANEOUS"                               <  
0309 CASE IVC.WIP.TYPE<1,LN> = "OTH"                                 <  
0310 LINE.DESC<1,LN> = MAIN.DESC                                     <  
0311 FOR XX = 1 TO 5                                                 <  
0312 LOCATE ALL.TYPE<1,XX> IN IVC.WIP.TYPE<1>,1 SETTING FND ELSE     <  
0313 IF LINE.DESC<1,LN> # MAIN.DESC THEN                             <  

0314 LINE.DESC<1,LN> = LINE.DESC<1,LN> : ","                         <  
0315 END                                                                END
0316 LINE.DESC<1,LN> = LINE.DESC<1,LN> : ALL.TYPE<1,XX>              <  
0317 END                                                                END
0318 NEXT XX                                                         |  IF ECD.RET.VALUE = 3 THEN
0319 CASE 1                                                          |  IF TYPE.INVOICE # "F" THEN
0320 LINE.DESC<1,LN> = "ALL"                                         |  GOSUB CHG.SUG.PRCNT

0321 END CASE                                                        <  
0322 NEXT LN                                                         <  
0323 LN = 1                                                          <  
0324 END ELSE                                                           END ELSE
0325 IVC.WIP.TYPE = CTL.WIP.TYPE                                     |  ERRMSG = "Invalid for a FINAL invoice"
0326 LINES = COUNT(IVC.WIP.TYPE,VM) + (IVC.WIP.TYPE # "")            |  GOSUB 90000
0327 IF CTL.WIP.TYPE # "ALL" AND LINES < 5 THEN                      <  

0328 LOCATE "OTH" IN IVC.WIP.TYPE<1>,1 SETTING FND ELSE              <  
0329 LINES = LINES + 1                                               <  
0330 IVC.WIP.TYPE<1,LINES> = "OTH"                                   <  
0331 END                                                                END
0332 END                                                                END
0333 FOR LN = 1 TO LINES                                             |  CASE ECD.RET.VALUE = "B"
0334 BEGIN CASE                                                      |  DONE = 1

0335 CASE IVC.WIP.TYPE<1,LN> = "LB"                                  |  ACTION = ECD.RET.VALUE
0336 LINE.DESC<1,LN> = "LABOR"                                       |  CASE ECD.RET.VALUE="END" OR ECD.RET.VALUE = "E"
0337 CASE IVC.WIP.TYPE<1,LN> = "MT"                                  |  DONE = 1
0338 LINE.DESC<1,LN> = "MATERIAL"                                    |  ACTION = ECD.RET.VALUE
0339 CASE IVC.WIP.TYPE<1,LN> = "OS"                                  |  CASE ECD.RET.VALUE = "F" AND INVOICE.TOTAL < 0
0340 LINE.DESC<1,LN> = "OUTSIDE PURCHASE"                            |  ERRMSG="Invalid Total Amount - Must be positive"
0341 CASE IVC.WIP.TYPE<1,LN> = "SP"                                  |  GOSUB 90000

0342 LINE.DESC<1,LN> = "SHIPPING"                                    |  CASE ECD.RET.VALUE="F" AND IVC.PROC.DATE=""
0343 CASE IVC.WIP.TYPE<1,LN> = "MS"                                  |  NEG.WIP.AMT.FLAG = 0
0344 LINE.DESC<1,LN> = "MISCELLANEOUS"                               |  FOR DD = 1 TO 5
0345 CASE IVC.WIP.TYPE<1,LN> = "OTH"                                 |  IF (MATRX(4,DD) + 0) < 0 THEN
0346 LINE.DESC<1,LN> = MAIN.DESC                                     |  MATRX(4,DD) = 0  ; *T25606
0347 FOR XX = 1 TO 5                                                 |  NEG.WIP.AMT.FLAG = 1
0348 LOCATE ALL.TYPE<1,XX> IN IVC.WIP.TYPE<1>,1 SETTING FND ELSE     |  ERRMSG = "Cannot have Suggested Negative Wip Amount (2)"

0349 IF LINE.DESC<1,LN> # MAIN.DESC THEN                             |  GOSUB 90000; GOTO 599
0350 LINE.DESC<1,LN> = LINE.DESC<1,LN> : ","                         |  DD = 7
0351 END                                                                END
0352 LINE.DESC<1,LN> = LINE.DESC<1,LN> : ALL.TYPE<1,XX>              |  NEXT DD
0353                                                                 >  FOR DD = 1 TO 5
0354                                                                 >  IF MATRX(4,DD) > MATRX(3,DD) THEN
0355                                                                 >  ERRMSG = "Cannot Reverse more than Wip Remaining"

0356                                                                 >  GOSUB 90000; GOTO 599
0357 END                                                                END
0358 NEXT XX                                                         |  NEXT DD
0359                                                                 >  * T22154 v
0360                                                                 >  FOR X = 1 TO DCOUNT(IVC.UM,VM)
0361                                                                 >  IF IVC.HIDDEN<1,X> # 'Y' THEN
0362                                                                 >  DONE = 0

0363                                                                 >  FOR Z = X + 1 TO DCOUNT(IVC.UM,VM) UNTIL DONE
0364                                                                 >  IF IVC.HIDDEN<1,Z> = 'Y' THEN
0365                                                                 >  IF IVC.UM<1,Z> # IVC.UM<1,X> THEN
0366                                                                 >  ERRMSG = 'UM for hidden line ':Z:' does not match detail lin
0367                                                                 >  GOSUB 90000
0368                                                                 >  ECD.RET.VALUE = ''
0369                                                                 >  GOTO 500

0370                                                                 >  END
0371                                                                 >  END ELSE
0372                                                                 >  DONE = 1
0373                                                                 >  END
0374                                                                 >  NEXT Z
0375                                                                 >  END
0376                                                                 >  NEXT X

0377                                                                 >  * T22154 ^
0378                                                                 >  REF.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
0379                                                                 >  BLK = 0
0380                                                                 >  FOR I = 1 TO REF.CNT UNTIL BLK
0381                                                                 >  IF IVC.CHG.CAT<1,I> # "CMT" THEN BLK = 1
0382                                                                 >  NEXT I
0383                                                                 >  IF BLK = 0 THEN

0384                                                                 >  ERRMSG = "One Valid Invoice Line Entry is Required Before Fi
0385                                                                 >  GOSUB 90000; GOTO 599
0386                                                                 >  END
0387                                                                 >  BEGIN CASE
0388                                                                 >  CASE MENU="CREDIT" OR MENU="DEBIT"
0389                                                                 >  IVC.LAST="N"
0390                                                                 >  CASE MENU="PREBILL"

0391                                                                 >  IVC.LAST="N"
0392 CASE 1                                                             CASE 1
0393 LINE.DESC<1,LN> = "ALL"                                         |  GOSUB 21000; GOSUB 22000
0394                                                                 >  IF MATCH.ERROR THEN
0395                                                                 >  X=0;Y=22;TYP=8;MINL=1
0396                                                                 >  PMSG="Continue (Y/N)"
0397                                                                 >  CALL EDIT.SUB

0398                                                                 >  IF VALUE="N" THEN GOTO 500
0399                                                                 >  END
0400                                                                 >  IF TYPE.INVOICE = "F" THEN
0401                                                                 >  IVC.LAST="Y"
0402                                                                 >  END ELSE
0403                                                                 >  IVC.LAST = ""
0404                                                                 >  END

0405 END CASE                                                           END CASE
0406 IVC.WIP.DATE<1,LN> = "ALL"                                      |  IVC.WIP.TYPE="LB":VM:"MT":VM:"OS":VM:"SP":VM:"MS"
0407 IVC.WIP.PRCNT<1,LN> = 10000                                     |  FOR X = 1 TO 5
0408 NEXT LN                                                         |  IVC.WIP.DATE<1,X> = DATE()
0409 LN = 1                                                          |  NEXT X
0410                                                                 >  GOSUB CALC.PASSING.PRCNT
0411                                                                 >  BEGIN CASE
0412                                                                 >  CASE MENU="CREDIT" OR MENU="DEBIT"

0413                                                                 >  IVC.PRE.BILL="N"
0414                                                                 >  IVC.WIP.TYPE = "ALL"
0415                                                                 >  IVC.WIP.DATE="ALL"
0416                                                                 >  IVC.WIP.PRCNT=0
0417                                                                 >  CASE MENU="PREBILL"
0418                                                                 >  IVC.PRE.BILL="N"
0419                                                                 >  IVC.WIP.TYPE = "ALL"

0420                                                                 >  IVC.WIP.DATE="ALL"
0421                                                                 >  IVC.WIP.PRCNT=0
0422                                                                 >  CASE IVC.LAST="Y"
0423                                                                 >  IVC.PRE.BILL="Y"
0424                                                                 >  IVC.WIP.TYPE = "ALL"
0425                                                                 >  IVC.WIP.DATE="ALL"
0426                                                                 >  IVC.WIP.PRCNT=10000

0427                                                                 >  CASE 1
0428                                                                 >  PRE.BILL.PRESENT=0
0429                                                                 >  ICNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
0430                                                                 >  FOR I=1 TO ICNT UNTIL PRE.BILL.PRESENT
0431                                                                 >  JB=IVC.CHG.JOB<1,I>
0432                                                                 >  IF JB # "" THEN
0433                                                                 >  LOCATE JB IN JJOBS<1>,1 SETTING FND ELSE FND=0

0434                                                                 >  IF FND AND PRE.BILL.BAL<1,FND>="Y" THEN PRE.BILL.PRESENT=1
0435 END                                                                END
0436 GOSUB 10000                                                     |  NEXT I
0437 *                                                               |  IF PRE.BILL.PRESENT THEN
0438 *---- GET OPERATOR REQUEST                                      |  X=0;Y=22;TYP=8
0439 *                                                               |  PMSG="Credit sales for pre-bills (Y/N)"
0440 500*                                                            |  CALL EDIT.SUB

0441 IF PROG.FLAG = "I" OR IVC.PROC.DATE # "" THEN                   |  IF VALUE="END" THEN GOTO 500
0442 ECD.NUM = 3                                                     |  IVC.PRE.BILL=VALUE
0443 END ELSE                                                           END ELSE
0444 ECD.NUM = 1                                                     |  IVC.PRE.BILL="N"
0445 END                                                                END
0446 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""                              |  END CASE
0447 ECD.ACTION = 4                                                  |  IF IVC.NO="N" THEN

0448 CALL SCRN.EDIT                                                  |  550     READU          IVC.NO FROM CONTROL, CONO:"NEXT.INVOI
0449 ACTION=ECD.RET.VALUE                                            |  N.IVC.NO=IVC.NO + 1
0450                                                                 >  IVC.NO=STR("0",6-LEN(IVC.NO)):IVC.NO
0451                                                                 >  WRITE N.IVC.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"
0452 BEGIN CASE                                                         BEGIN CASE
0453 CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= LINES AND PROG.  |  CASE MENU="CREDIT"
0454 LN = ACTION                                                     |  IVC.NO=IVC.NO:"CM"

0455 GOSUB 1000                                                      |  CASE MENU="DEBIT"
0456 CASE ACTION="S" AND LINES > 0                                   |  IVC.NO=IVC.NO:"DM"
0457 LN += PAGE.SIZE    ; *T25978                                    |  CASE MENU="PREBILL"
0458 GOSUB 10000                                                     |  IVC.NO=IVC.NO:"PB"
0459 * T25978 v                                                      |  END CASE
0460 CASE ACTION = 'SR' AND LINES > 0                                |  READ REC FROM DAILY.INVOICE,CONO:IVC.NO ELSE GOTO 560
0461 LN -= PAGE.SIZE                                                 |  GOTO 550

0462 IF LN < 1 THEN LN = 1                                           |  560     READ           REC FROM INVOICE,CONO:IVC.NO ELSE GOT
0463 GOSUB 10000                                                     |  GOTO 550
0464 CASE ACTION = 'ST' AND LINES > 0                                |  565     READ REC FROM VOID.INVOICES,CONO:IVC.NO ELSE GOTO 57
0465 LN = 1                                                          |  GOTO 550
0466 GOSUB 10000                                                     |  570     IF             CO.ARS="Y" THEN
0467 CASE ACTION = 'SB' AND LINES > 0                                |  READ REC FROM OPEN.RECV,CONO:IVC.NO ELSE GOTO 580
0468 LN = LINES                                                      |  GOTO 550

0469 GOSUB 10000                                                     |  580     END
0470 * T25978 ^                                                      |  * T26605 v
0471 CASE ACTION = "E" OR ACTION = "END" OR ACTION = ""              |  *       ECD.NUM=7;SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
0472 *           ACTION = "END";* T22726 Needed for when returning   |  *       ECD.ACTION=5;CALL SCRN.EDIT
0473                                                                 >  ERRMSG="Please make note of new number ":IVC.NO
0474                                                                 >  GOSUB 90000
0475                                                                 >  END

0476                                                                 >  JCNT=COUNT(IVC.CHG.JOB,VM) + (IVC.CHG.JOB # "")
0477                                                                 >  FOR J=1 TO JCNT
0478                                                                 >  IF IVC.CHG.JOB<1,J> # "" THEN
0479                                                                 >  MATREADU JOB.REC FROM JOB, CONO:IVC.CHG.JOB<1,J> ELSE
0480                                                                 >  RELEASE JOB, IVC.CHG.JOB<1,J>
0481                                                                 >  ERRMSG="CANNOT LOCATE JOB RECORD - ":IVC.CHG.JOB<1,J>
0482                                                                 >  GOSUB 90000; GOTO 590

0483                                                                 >  END
0484                                                                 >  LOCATE IVC.NO IN JOB.INV.NO<1>,1 SETTING PTR ELSE
0485                                                                 >  PTR=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "") + 1
0486                                                                 >  JOB.INV.NO<1,PTR>=IVC.NO
0487                                                                 >  END
0488                                                                 >  MATWRITE JOB.REC ON JOB, CONO:IVC.CHG.JOB<1,J>
0489                                                                 >  END

0490                                                                 >  590   NEXT        J
0491                                                                 >  MATWRITE IVC.REC ON DAILY.INVOICE, CONO:IVC.NO
0492                                                                 >  FILE.OPTION = "F"
0493 GOTO 99999                                                         GOTO 99999
0494                                                                 >  599*
0495 END CASE                                                           END CASE
0496 GOTO 500                                                        |  UNTIL DONE DO REPEAT

0497                                                                 >  GOTO 99999
0498                                                                 >  *
0499                                                                 >  *
0500 *-----------------------*                                          *-----------------------*
0501 *---   SUBROUTINES   ---*                                          *---   SUBROUTINES   ---*
0502 *-----------------------*                                          *-----------------------*
0503 *                                                                  *

0504 *--- GET LINE DATA                                              |  **********************
0505                                                                 >  CALC.PASSING.PRCNT: 
0506                                                                 >  **********************
0507 *                                                                  *
0508 1000*                                                           |  *this sub. takes the suggested reversal amounts and calculat
0509 SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)           |  *of the incurred (WIP) cost to pass into DAILY.INVOICE.
0510                                                                 >  *This needs to be done because the percents on the screen ar

0511                                                                 >  *the reversal amount in estimate per cost type. For reversal
0512                                                                 >  *we need to know how much percent the reversal amount is in 
0513                                                                 >  * and not reversed cost per cost and overhead type. 
0514 *                                                                  *
0515 *--- GET WIP PERCENT                                            |  * get direct percents for every cost type:LB,MT,OS,SP,MS
0516 *                                                                  *
0517 1010*                                                           |  IVC.WIP.PRCNT = ""

0518 *     X = 37;* T23244                                           |  *
0519 X = 36;* T23244                                                 |  FOR POS = 1 TO 5
0520 Y = SLN                                                         |  IF MATRX(3,POS) >0 THEN
0521 TYP = 4                                                         |  IVC.WIP.PRCNT<1,POS,1> =ICONV(MATRX(4,POS)/MATRX(3,POS)*100,
0522 SCALER = 2                                                      <  
0523 MAXL = 6                                                        <  
0524 MINV = 0                                                        <  

0525 MAXV = 10000                                                    <  
0526 O.R = "O"                                                       <  
0527 DEFAULT = OCONV(IVC.WIP.PRCNT<1,LN>, "MD2")                     <  
0528 CALL EDIT.SUB                                                   <  
0529 BEGIN CASE                                                         BEGIN CASE
0530 CASE VALUE = "END"                                              |  CASE POS = 1
0531 GOTO 1999                                                       |  IVC.WIP.PRCNT<1,POS,2>=IVC.WIP.PRCNT<1,POS,1>

0532 CASE VALUE = ""                                                 |  IVC.WIP.PRCNT<1,POS,3>=IVC.WIP.PRCNT<1,POS,1>
0533 GOTO 1010                                                       |  IVC.WIP.PRCNT<1,POS,4>=IVC.WIP.PRCNT<1,POS,1>
0534 CASE 1                                                          |  CASE POS = 2
0535 IVC.WIP.PRCNT<1,LN> = VALUE                                     |  IVC.WIP.PRCNT<1,POS,2>=IVC.WIP.PRCNT<1,POS,1>
0536                                                                 >  IVC.WIP.PRCNT<1,POS,3>=IVC.WIP.PRCNT<1,POS,1>
0537                                                                 >  CASE POS = 3
0538                                                                 >  IVC.WIP.PRCNT<1,POS,2>=IVC.WIP.PRCNT<1,POS,1>

0539                                                                 >  CASE POS = 4
0540                                                                 >  IVC.WIP.PRCNT<1,POS,2>=IVC.WIP.PRCNT<1,POS,1>
0541                                                                 >  CASE POS = 5
0542                                                                 >  IVC.WIP.PRCNT<1,POS,2>=IVC.WIP.PRCNT<1,POS,1>
0543 END CASE                                                           END CASE
0544 *                                                               <  
0545 *--- GET WIP DATE                                               <  

0546 *                                                               <  
0547 1020*                                                           <  
0548 X = 45                                                          <  
0549 Y = SLN                                                         <  
0550 TYP = 1                                                         <  
0551 MAXL = 8                                                        <  
0552 O.R = "O"                                                       <  

0553 IF IVC.WIP.DATE<1,LN> = "ALL" THEN                              <  
0554 DEFAULT = IVC.WIP.DATE<1,LN>                                    <  
0555 END ELSE                                                           END ELSE
0556 DEFAULT = OCONV(IVC.WIP.DATE<1,LN>, "D2/")                      |  IVC.WIP.PRCNT<1,POS,1> = 0
0557 END                                                                END
0558 CALL EDIT.SUB                                                   |  NEXT POS
0559                                                                 >  *

0560                                                                 >  *get overhead percents
0561                                                                 >  *
0562                                                                 >  *
0563                                                                 >  *C37366 v
0564                                                                 >  * IF SUM(VOH.WIP) = 0 THEN
0565                                                                 >  *   VFOH.PRCNT = 0
0566                                                                 >  * END ELSE

0567                                                                 >  *   VFOH.PRCNT=ICONV(VOH.REV.$/VOH.WIP*100,"MD2")
0568                                                                 >  * END
0569                                                                 >  * IF SUM(FOH.WIP) = 0 THEN
0570                                                                 >  *   FFOH.PRCNT = 0
0571                                                                 >  * END ELSE
0572                                                                 >  *   FFOH.PRCNT=ICONV(FOH.REV.$/FOH.WIP*100,"MD2")
0573                                                                 >  * END

0574                                                                 >  * IF SUM(SA.WIP) = 0 THEN
0575                                                                 >  *   SA.PRCNT = 0
0576                                                                 >  * END ELSE
0577                                                                 >  *   SA.PRCNT=ICONV(SA.REV.$/SA.WIP*100,"MD2")
0578                                                                 >  * END
0579                                                                 >  * *C37366 ^
0580                                                                 >  * *

0581                                                                 >  * * add overhead percents to cost type 
0582                                                                 >  * *
0583                                                                 >  * ;*LB
0584                                                                 >  * IVC.WIP.PRCNT<1,1,2>=FFOH.PRCNT
0585                                                                 >  * IVC.WIP.PRCNT<1,1,3>=VFOH.PRCNT
0586                                                                 >  * IVC.WIP.PRCNT<1,1,4>=SA.PRCNT
0587                                                                 >  * ;*MT

0588                                                                 >  * IVC.WIP.PRCNT<1,2,2>=FFOH.PRCNT
0589                                                                 >  * IVC.WIP.PRCNT<1,2,3>=VFOH.PRCNT
0590                                                                 >  * ;*OS
0591                                                                 >  * IVC.WIP.PRCNT<1,3,2>=FFOH.PRCNT
0592                                                                 >  * ;*SP
0593                                                                 >  * IVC.WIP.PRCNT<1,4,2>=FFOH.PRCNT
0594                                                                 >  ;*MS

0595                                                                 >  * IVC.WIP.PRCNT<1,5,2>=FFOH.PRCNT
0596                                                                 >  RETURN
0597                                                                 >  * *
0598                                                                 >  * *
0599                                                                 >  * ****************
0600                                                                 >  CHG.SUG.$: 
0601                                                                 >  ****************

0602                                                                 >  *
0603                                                                 >  * prompt for change of suggested reversal amounts for every 
0604                                                                 >  *
0605                                                                 >  *42056 v
0606                                                                 >  *EOI = 0
0607                                                                 >  *LOOP
0608                                                                 >  *  ECD.NUM = 58 ; ECD.ACTION = 4 ; CALL SCRN.EDIT

0609                                                                 >  *  BEGIN CASE 
0610                                                                 >  *    CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E"
0611                                                                 >  *      EOI = 1
0612                                                                 >  *    CASE ECD.RET.VALUE # ""
0613                                                                 >  *      LOCATE ECD.RET.VALUE IN PRMPT.ARR<1>,1 SETTING POS TH
0614                                                                 >  REDO=0
0615                                                                 >  FOR POS = 1 TO 5 WHILE ECD.RET.VALUE # 'END'

0616                                                                 >  ECD.NUM=19 ; ECD.SUB.NUM=POS
0617                                                                 >  ECD.ACTION=4 ; CALL SCRN.EDIT
0618 BEGIN CASE                                                         BEGIN CASE
0619 CASE VALUE = "END"                                              |  CASE ECD.RET.VALUE = 'END'
0620 GOTO 1010                                                       |  *        IF INT(OCONV(MATRX(3,POS),"MD2")+.5)<ECD.RET.VALUE 
0621 CASE VALUE = ""                                                 |  CASE INT(OCONV(MATRX(3,POS),"MD2")+.5)<ECD.RET.VALUE 
0622 GOTO 1020                                                       |  ERRMSG = "Cannot reverse more WIP than incurred."

0623 CASE VALUE = "ALL"                                              |  GOSUB 91000
0624 IVC.WIP.DATE<1,LN> = VALUE                                      |  ECD.NUM=19; ECD.SUB.NUM=POS
0625                                                                 >  SCV.REC(19)<ESN,POS>=INT(MATRX(4,POS)/100+0.5)
0626                                                                 >  ECD.ACTION=5;CALL SCRN.EDIT
0627                                                                 >  REDO = 1
0628                                                                 >  CASE ECD.RET.VALUE < 0 
0629                                                                 >  ERRMSG = 'Cannot enter negative WIP'

0630                                                                 >  GOSUB 91000
0631                                                                 >  ECD.NUM=19; ECD.SUB.NUM = POS
0632                                                                 >  MATRX(4,POS) = 0
0633                                                                 >  SCV.REC(19)<ESN,POS>=INT(MATRX(4,POS)/100+0.5)
0634                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0635                                                                 >  REDO = 1
0636                                                                 >  *        END ELSE

0637 CASE 1                                                             CASE 1
0638 IVALUE = ICONV(VALUE, "D2/")                                    |  ;*if same use internal value
0639 IF IVALUE = VALUE OR IVALUE = "" THEN                           |  IF INT(OCONV(MATRX(3,POS),"MD2")+.5)=ECD.RET.VALUE THEN
0640 ERRMSG = "*** INVALID DATE ***"                                 |  MATRX(4,POS) = MATRX(3,POS)
0641 GOSUB 90000                                                     |  END ELSE
0642 GOTO 1020                                                       |  MATRX(4,POS)=ICONV(ECD.RET.VALUE,"MD2")
0643 END                                                                END
0644 IVC.WIP.DATE<1,LN> = IVALUE                                     |  IF MATRX(8,POS)=0 THEN 

0645                                                                 >  NULL
0646                                                                 >  ;*percent stays zero since estimate= 0
0647                                                                 >  END ELSE
0648                                                                 >  *           MATRX(5,POS)=MATRX(4,POS)/MATRX(8,POS)*100
0649                                                                 >  MATRX(5,POS) = ICONV(MATRX(4,POS) / MATRX(8,POS)*100,"MD2")
0650                                                                 >  END
0651 END CASE                                                           END CASE

0652 1999*                                                           |  IF REDO THEN REDO = 0; POS -= 1
0653 P_X  = 36 ; P_Y = SLN ; P_VALUE = OCONV(IVC.WIP.PRCNT<1,LN>, "  |  NEXT POS
0654 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  *42056 ^
0655 IF IVC.WIP.DATE<1,LN> = "ALL" THEN                              |  ;*recalc amount and total reversal prcnt. 
0656 P_X  = 45 ; P_Y = SLN ; P_VALUE = IVC.WIP.DATE<1,LN> "L#8" ; P  |  GOSUB CALC.DIRECT.REV.AMOUNTS             
0657 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  ;*line below because overheads are base on DL %
0658                                                                 >  *         IF POS = 1 THEN GOSUB CALC.OVR.REV.AMOUNTS 

0659                                                                 >  GOSUB CALC.OVR.REV.AMOUNTS 
0660                                                                 >  GOSUB GET.STATISTIC
0661                                                                 >  GOSUB CALC.TOT.REV.PRCNT                  
0662                                                                 >  ;*redisplay the fields                    
0663                                                                 >  GOSUB BUILD.SCRN.REC                      
0664                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT 
0665                                                                 >  *       EOI = 1                         

0666                                                                 >  *      END
0667                                                                 >  *   END ELSE
0668                                                                 >  *   END
0669                                                                 >  *END CASE
0670                                                                 >  *UNTIL EOI DO REPEAT
0671                                                                 >  *42056 ^
0672                                                                 >  RETURN

0673                                                                 >  *
0674                                                                 >  ****************
0675                                                                 >  CHG.SUG.PRCNT: 
0676                                                                 >  ****************
0677                                                                 >  *
0678                                                                 >  * prompt for change of suggested reversal percents for every
0679                                                                 >  *

0680                                                                 >  *42056 v
0681                                                                 >  *EOI = 0                                                    
0682                                                                 >  *LOOP                                                       
0683                                                                 >  *  ECD.NUM = 58 ; ECD.ACTION = 4 ; CALL SCRN.EDIT           
0684                                                                 >  *  BEGIN CASE                                               
0685                                                                 >  *    CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E"      
0686                                                                 >  *      EOI = 1                                              

0687                                                                 >  *    CASE ECD.RET.VALUE # ""                                
0688                                                                 >  *      LOCATE ECD.RET.VALUE IN PRMPT.ARR<1>,1 SETTING POS TH
0689                                                                 >  REDO=0
0690                                                                 >  FOR POS = 1 TO 5 WHILE ECD.RET.VALUE # 'END'
0691                                                                 >  IF MATRX(8,POS)=0 THEN
0692                                                                 >  ERRMSG = "Cannot calculate percent since estimate is 0. Chan
0693                                                                 >  GOSUB 91000

0694 END ELSE                                                           END ELSE
0695 P_X  = 45 ; P_Y = SLN ; P_VALUE = OCONV(IVC.WIP.DATE<1,LN>, "D  |  ECD.NUM=20 ; ECD.SUB.NUM=POS 
0696 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  ECD.ACTION=4 ; CALL SCRN.EDIT 
0697                                                                 >  ;* check if percent can be reversed
0698                                                                 >  IF MATRX(3,POS) < MATRX(8,POS)*ECD.RET.VALUE/100 THEN
0699                                                                 >  MAX.PRCNT = ICONV(MATRX(3,POS) / MATRX(8,POS)*100,"MR2")
0700                                                                 >  MAX.PRCNT = OCONV(MAX.PRCNT,"MR2")
0701                                                                 >  ERRMSG = "Maximum reversible percent for this cost type is "

0702                                                                 >  GOSUB 91000
0703                                                                 >  REDO=1
0704                                                                 >  ECD.NUM=20;ECD.SUB.NUM=POS
0705                                                                 >  TEMP.MATRX = INT(MATRX(5,POS) / 10)
0706                                                                 >  SCV.REC(ECD.NUM)<ESN,POS> = OCONV(TEMP.MATRX,"MD1")
0707                                                                 >  ECD.ACTION=5;CALL SCRN.EDIT
0708                                                                 >  END ELSE

0709                                                                 >  MATRX(5,POS) = ECD.RET.VALUE * 100
0710                                                                 >  ;*recalc amount and total reversal prcnt.
0711                                                                 >  * Move following GOSUBS to below NEXT.
0712                                                                 >  *           GOSUB CALC.DIRECT.REV.AMOUNTS
0713                                                                 >  ;*line below because overheads are base on DL % 
0714                                                                 >  *           IF POS = 1 THEN GOSUB CALC.OVR.REV.AMOUNTS      
0715                                                                 >  *           GOSUB CALC.OVR.REV.AMOUNTS       

0716                                                                 >  *           GOSUB GET.STATISTIC
0717                                                                 >  *           GOSUB CALC.TOT.REV.PRCNT
0718                                                                 >  ;*redisplay the fields 
0719                                                                 >  *           GOSUB BUILD.SCRN.REC
0720                                                                 >  *           ECD.ACTION = 3 ; CALL SCRN.EDIT
0721                                                                 >  *           EOI = 1
0722 END                                                                END

0723                                                                 >  END
0724                                                                 >  IF REDO THEN REDO = 0; POS -= 1
0725                                                                 >  NEXT POS
0726                                                                 >  GOSUB CALC.DIRECT.REV.AMOUNTS
0727                                                                 >  GOSUB CALC.OVR.REV.AMOUNTS       
0728                                                                 >  GOSUB GET.STATISTIC
0729                                                                 >  GOSUB CALC.TOT.REV.PRCNT

0730                                                                 >  GOSUB BUILD.SCRN.REC
0731                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0732                                                                 >  *42056 ^
0733                                                                 >  *     END
0734                                                                 >  * END CASE                                                  
0735                                                                 >  *UNTIL EOI DO REPEAT
0736 RETURN                                                             RETURN                                                      

0737 *                                                                  *
0738 *--- SCROLL ROUTINE                                             <  
0739 *                                                                  *
0740 10000*                                                          |  *******************
0741 START.LINE = 1 + INT((LN - 1) / PAGE.SIZE) * PAGE.SIZE          |  GET.DIR.WIP.OUT: 
0742 LAST.LINE = START.LINE + PAGE.SIZE - 1                          |  *******************
0743 IF LAST.LINE > LINES THEN LAST.LINE = LINES                     |  *
0744 IF START.LINE = OLD.START.LINE THEN RETURN                      |  * get only applied but not reversed direct cost 

0745 OLD.START.LINE = START.LINE                                     |  *
0746 CNT = 1                                                         |  DL.WIP += JOB.LB.WIP<1,2,1>
0747 FOR N = START.LINE TO LAST.LINE                                 |  DM.WIP += JOB.MT.WIP<1,2,1>
0748 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N - 1,PAGE.SIZE)            |  OSP.WIP += JOB.OS.WIP<1,2,1>
0749 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""           |  SHP.WIP += JOB.SP.WIP<1,2,1>
0750 P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:IVC.WIP.TYPE<1,N>  |  MSC.WIP += JOB.MS.WIP<1,2,1>
0751 P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.DESC<1,N> "  |  * 

0752 P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(IVC.WIP.PR  |  *
0753 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  * get only  reversed direct cost
0754 IF IVC.WIP.DATE<1,N> = "ALL" THEN                               |  *
0755 P_X  = 45 ; P_Y = SLN ; P_VALUE = IVC.WIP.DATE<1,N> "L#8" ; P_  |  DL.OUT += JOB.LB.WIP<1,3,1>
0756 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  DM.OUT += JOB.MT.WIP<1,3,1>
0757                                                                 >  OSP.OUT += JOB.OS.WIP<1,3,1>
0758                                                                 >  SHP.OUT+= JOB.SP.WIP<1,3,1>

0759                                                                 >  MSC.OUT+= JOB.MS.WIP<1,3,1>
0760                                                                 >  *
0761                                                                 >  *
0762                                                                 >  *
0763                                                                 >  RETURN
0764                                                                 >  *
0765                                                                 >  ***************

0766                                                                 >  GET.OVH.OUT: 
0767                                                                 >  ***************
0768                                                                 >  *
0769                                                                 >  * CLOSED (2)
0770                                                                 >  OVH.MATRX<6,1> += JOB.LB.WIP<1,3,2>
0771                                                                 >  OVH.MATRX<6,2> += JOB.LB.WIP<1,3,3>
0772                                                                 >  OVH.MATRX<6,3> += JOB.LB.WIP<1,3,4>

0773                                                                 >  OVH.MATRX<7,1> += JOB.MT.WIP<1,3,2>
0774                                                                 >  OVH.MATRX<7,2> += JOB.MT.WIP<1,3,3>
0775                                                                 >  OVH.MATRX<8,1> += JOB.OS.WIP<1,3,2>
0776                                                                 >  OVH.MATRX<9,1> += JOB.SP.WIP<1,3,2>
0777                                                                 >  OVH.MATRX<10,1> += JOB.MS.WIP<1,3,2>
0778                                                                 >  *
0779                                                                 >  * WIP (3)

0780                                                                 >  *42056 ^ OVH.MATRX<10,1> = JOB.MS.WIP<1,2,2>
0781                                                                 >  OVH.MATRX<11,1> += JOB.LB.WIP<1,2,2>
0782                                                                 >  OVH.MATRX<11,2> += JOB.LB.WIP<1,2,3>
0783                                                                 >  OVH.MATRX<11,3> += JOB.LB.WIP<1,2,4>
0784                                                                 >  OVH.MATRX<12,1> += JOB.MT.WIP<1,2,2>
0785                                                                 >  OVH.MATRX<12,2> += JOB.MT.WIP<1,2,3>
0786                                                                 >  OVH.MATRX<13,1> += JOB.OS.WIP<1,2,2>

0787                                                                 >  OVH.MATRX<14,1> += JOB.SP.WIP<1,2,2>
0788                                                                 >  OVH.MATRX<15,1> += JOB.MS.WIP<1,2,2>
0789                                                                 >  *
0790                                                                 >  * INCURRED (1)
0791                                                                 >  OVH.MATRX<1,1> = OVH.MATRX<6,1> + OVH.MATRX<11,1>
0792                                                                 >  OVH.MATRX<1,2> = OVH.MATRX<6,2> + OVH.MATRX<11,2>
0793                                                                 >  OVH.MATRX<1,3> = OVH.MATRX<6,3> + OVH.MATRX<11,3>

0794                                                                 >  OVH.MATRX<2,1> = OVH.MATRX<7,1> + OVH.MATRX<12,1>
0795                                                                 >  OVH.MATRX<2,2> = OVH.MATRX<7,2> + OVH.MATRX<12,2>
0796                                                                 >  OVH.MATRX<3,1> = OVH.MATRX<8,1> + OVH.MATRX<13,1>
0797                                                                 >  OVH.MATRX<4,1> = OVH.MATRX<9,1> + OVH.MATRX<14,1>
0798                                                                 >  OVH.MATRX<5,1> = OVH.MATRX<10,1> + OVH.MATRX<15,1>
0799                                                                 >  *
0800                                                                 >  RETURN

0801                                                                 >  *
0802                                                                 >  *****************
0803                                                                 >  GET.EST.COSTS: 
0804                                                                 >  *****************
0805                                                                 >  *
0806                                                                 >  EST.KEY = JOB.EST
0807                                                                 >  MAT CSUM.REC= ""

0808                                                                 >  CALL CALC.EST.COST.BY.TYPE(CONO,EST.KEY,MAT CSUM.REC,CURR.JO
0809                                                                 >  *
0810                                                                 >  * total estimated direct costs
0811                                                                 >  *
0812                                                                 >  * CSF 39205 v
0813                                                                 >  * DL.EST += CSUM.LB.COST+0
0814                                                                 >  DL.EST += CSUM.LB.DCOST+0

0815                                                                 >  * DM.EST += CSUM.MT.COST+0
0816                                                                 >  DM.EST += CSUM.MT.DCOST+0
0817                                                                 >  * OSP.EST += CSUM.OS.COST+0
0818                                                                 >  OSP.EST += CSUM.OS.DCOST+0
0819                                                                 >  * SHP.EST += CSUM.SP.COST+0
0820                                                                 >  SHP.EST += CSUM.SP.DCOST+0
0821                                                                 >  * MSC.EST += CSUM.MS.COST+0

0822                                                                 >  MSC.EST += CSUM.MS.DCOST+0
0823                                                                 >  *
0824                                                                 >  * total estimated overhead                                  
0825                                                                 >  *                                                           
0826                                                                 >  VOH.EST += CSUM.VFOH.TOT                               
0827                                                                 >  FOH.EST += CSUM.FFOH.TOT                               
0828                                                                 >  SA.EST += CSUM.SA.TOT                         

0829                                                                 >  *
0830                                                                 >  RETURN
0831                                                                 >  *
0832                                                                 >  *****************                        
0833                                                                 >  GET.OVR.WIP.OUT: 
0834                                                                 >  *****************                        
0835                                                                 >  *                                        

0836                                                                 >  *overhead incurred costs (WIP)
0837                                                                 >  *                                        
0838                                                                 >  FOH.WIP += JOB.WIP<1,2,2>            
0839                                                                 >  VOH.WIP += JOB.WIP<1,2,3>            
0840                                                                 >  SA.WIP += JOB.WIP<1,2,4>             
0841                                                                 >  *                                        
0842                                                                 >  *overhead out costs (COS)                

0843                                                                 >  *                                        
0844                                                                 >  FOH.OUT += JOB.WIP<1,3,2>           
0845                                                                 >  VOH.OUT += JOB.WIP<1,3,3>           
0846                                                                 >  SA.OUT += JOB.WIP <1,3,4>           
0847                                                                 >  *
0848                                                                 >  RETURN                                       
0849                                                                 >  *

0850                                                                 >  *
0851                                                                 >  * T26605 v
0852                                                                 >  *****************
0853                                                                 >  GET.COST.PERIOD: 
0854                                                                 >  *****************
0855                                                                 >  4010*
0856                                                                 >  CNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")

0857                                                                 >  FOR I = 1 TO CNT
0858                                                                 >  LB.ID = TEMP.JOB.NO:"!":JOB.LB.DEPT<1,I>:"!":JOB.LB.CCTR<1,I
0859                                                                 >  SEQ.CNT = JOB.LB.SEQ<1,I>
0860                                                                 >  FOR II = SEQ.CNT TO 1 STEP -1
0861                                                                 >  MATREAD JLB.REC FROM JOB.TIME, LB.ID:II ELSE GOTO 4015
0862                                                                 >  IF TYPE.INVOICE # "F" THEN
0863                                                                 >  IF JLB.MON<1,1,1> <= IVC.PERIOD.POST THEN

0864                                                                 >  DL.IN += JLB.WIP<1,1,1>
0865                                                                 >  FOH.IN += JLB.WIP<1,1,2>
0866                                                                 >  VOH.IN += JLB.WIP<1,1,3>
0867                                                                 >  SA.IN  += JLB.WIP<1,1,4>
0868                                                                 >  END
0869 END ELSE                                                           END ELSE
0870 P_X  = 45 ; P_Y = SLN ; P_VALUE = OCONV(IVC.WIP.DATE<1,N>, "D2  |  IF JLB.MON<1,1,1> > IVC.PERIOD.POST THEN

0871 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  *       FUTURE.WIP += JLB.WIP<1,1,1> + JLB.WIP<1,1,2> + JLB.
0872                                                                 >  FUTURE.WIP += JLB.WIP<1,1,1> 
0873 END                                                                END
0874 CNT = CNT + 1                                                   |  END
0875 NEXT N                                                          |  III = 2
0876 FOR N = CNT TO PAGE.SIZE                                        |  LOOP WHILE JLB.WIP<1,III> # "" DO
0877 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N - 1,PAGE.SIZE)            |  IF TYPE.INVOICE # "F" THEN

0878 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"              |  IF JLB.MON<1,III> <= IVC.PERIOD.POST THEN
0879 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  DL.OUT = DL.OUT + JLB.WIP<1,III,1>
0880 NEXT N                                                          |  FOH.OUT = FOH.OUT + JLB.WIP<1,III,2>
0881                                                                 >  VOH.OUT = VOH.OUT + JLB.WIP<1,III,3>
0882                                                                 >  SA.OUT  = SA.OUT  + JLB.WIP<1,III,4>
0883                                                                 >  END
0884                                                                 >  END ELSE

0885                                                                 >  IF JLB.MON<1,III> > IVC.PERIOD.POST THEN
0886                                                                 >  *         FUTURE.WIP = FUTURE.WIP + JLB.WIP<1,III,1> + JLB.W
0887                                                                 >  FUTURE.WIP = FUTURE.WIP + JLB.WIP<1,III,1>
0888                                                                 >  END
0889                                                                 >  END
0890                                                                 >  III = III + 1
0891                                                                 >  REPEAT

0892                                                                 >  4015 NEXT II
0893                                                                 >  NEXT I
0894                                                                 >  4020*
0895                                                                 >  CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
0896                                                                 >  FOR I = 1 TO CNT
0897                                                                 >  MT.ID = TEMP.JOB.NO:"!":JOB.MT.DEPT<1,I>:"!":JOB.MT.CCTR<1,I
0898                                                                 >  SEQ.CNT = JOB.MT.SEQ<1,I>

0899                                                                 >  FOR II = SEQ.CNT TO 1 STEP -1
0900                                                                 >  MATREAD JMT.REC FROM JOB.MATL, MT.ID:II ELSE GOTO 4025
0901                                                                 >  IF TYPE.INVOICE # "F" THEN
0902                                                                 >  IF JMT.MON<1,1,1> <= IVC.PERIOD.POST THEN
0903                                                                 >  DM.IN += JMT.WIP<1,1,1>
0904                                                                 >  FOH.IN += JMT.WIP<1,1,2>
0905                                                                 >  VOH.IN += JMT.WIP<1,1,3>

0906                                                                 >  END
0907                                                                 >  END ELSE
0908                                                                 >  IF JMT.MON<1,1,1> > IVC.PERIOD.POST THEN
0909                                                                 >  *       FUTURE.WIP += JMT.WIP<1,1,1> + JMT.WIP<1,1,2> + JMT.
0910                                                                 >  FUTURE.WIP += JMT.WIP<1,1,1>
0911                                                                 >  END
0912                                                                 >  END

0913                                                                 >  III = 2
0914                                                                 >  LOOP WHILE JMT.WIP<1,III> # "" DO
0915                                                                 >  IF TYPE.INVOICE # "F" THEN
0916                                                                 >  IF JMT.MON<1,III> <= IVC.PERIOD.POST THEN
0917                                                                 >  DM.OUT = DM.OUT + JMT.WIP<1,III,1>
0918                                                                 >  FOH.OUT = FOH.OUT + JMT.WIP<1,III,2>
0919                                                                 >  VOH.OUT = VOH.OUT + JMT.WIP<1,III,3>

0920                                                                 >  END
0921                                                                 >  END ELSE
0922                                                                 >  IF JMT.MON<1,III> > IVC.PERIOD.POST THEN
0923                                                                 >  FUTURE.WIP = FUTURE.WIP + JMT.WIP<1,III,1>
0924                                                                 >  *         FUTURE.WIP = FUTURE.WIP + JMT.WIP<1,III,1> + JMT.W
0925                                                                 >  END
0926                                                                 >  END

0927                                                                 >  III = III + 1
0928                                                                 >  REPEAT
0929                                                                 >  4025 NEXT II
0930                                                                 >  NEXT I
0931                                                                 >  4030*
0932                                                                 >  CNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
0933                                                                 >  FOR I = 1 TO CNT

0934                                                                 >  OS.ID = TEMP.JOB.NO:"!":JOB.OS.DEPT<1,I>:"!":JOB.OS.CCTR<1,I
0935                                                                 >  SEQ.CNT = JOB.OS.SEQ<1,I>
0936                                                                 >  FOR II = SEQ.CNT TO 1 STEP -1
0937                                                                 >  MATREAD JOS.REC FROM JOB.OSP, OS.ID:II ELSE GOTO 4035
0938                                                                 >  IF TYPE.INVOICE # "F" THEN
0939                                                                 >  IF JOS.MON<1,1,1> <= IVC.PERIOD.POST THEN
0940                                                                 >  OSP.IN += JOS.WIP<1,1,1>

0941                                                                 >  FOH.IN += JOS.WIP<1,1,2>
0942                                                                 >  END
0943                                                                 >  END ELSE
0944                                                                 >  IF JOS.MON<1,1,1> > IVC.PERIOD.POST THEN
0945                                                                 >  *       FUTURE.WIP += JOS.WIP<1,1,1> + JOS.WIP<1,1,2>
0946                                                                 >  FUTURE.WIP += JOS.WIP<1,1,1>
0947                                                                 >  END

0948                                                                 >  END
0949                                                                 >  III = 2
0950                                                                 >  LOOP WHILE JOS.WIP<1,III> # "" DO
0951                                                                 >  IF TYPE.INVOICE # "F" THEN
0952                                                                 >  IF JOS.MON<1,III> <= IVC.PERIOD.POST THEN
0953                                                                 >  OSP.OUT = OSP.OUT + JOS.WIP<1,III,1>
0954                                                                 >  FOH.OUT = FOH.OUT + JOS.WIP<1,III,2>

0955                                                                 >  END
0956                                                                 >  END ELSE
0957                                                                 >  IF JOS.MON<1,II> > IVC.PERIOD.POST THEN
0958                                                                 >  *         FUTURE.WIP = FUTURE.WIP + JOS.WIP<1,III,1> + JOS.W
0959                                                                 >  FUTURE.WIP = FUTURE.WIP + JOS.WIP<1,III,1>
0960                                                                 >  END
0961                                                                 >  END

0962                                                                 >  III = III + 1
0963                                                                 >  REPEAT
0964                                                                 >  4035 NEXT II
0965                                                                 >  NEXT I
0966                                                                 >  4040*
0967                                                                 >  CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
0968                                                                 >  FOR I = 1 TO CNT

0969                                                                 >  SP.ID = TEMP.JOB.NO:"!":JOB.SP.DEPT<1,I>:"!":JOB.SP.CCTR<1,I
0970                                                                 >  SEQ.CNT = JOB.SP.SEQ<1,I>
0971                                                                 >  FOR II = SEQ.CNT TO 1 STEP -1
0972                                                                 >  MATREAD JSP.REC FROM JOB.SHIP, SP.ID:II ELSE GOTO 4045
0973                                                                 >  IF TYPE.INVOICE # "F" THEN
0974                                                                 >  IF JSP.MON<1,1,1> <= IVC.PERIOD.POST THEN
0975                                                                 >  SHP.IN += JSP.WIP<1,1,1>

0976                                                                 >  FOH.IN += JSP.WIP<1,1,2>
0977                                                                 >  END 
0978                                                                 >  END ELSE
0979                                                                 >  IF JSP.MON<1,1,1> > IVC.PERIOD.POST THEN
0980                                                                 >  *       FUTURE.WIP += JSP.WIP<1,1,1> + JSP.WIP<1,1,2>
0981                                                                 >  FUTURE.WIP += JSP.WIP<1,1,1>
0982                                                                 >  END

0983                                                                 >  END
0984                                                                 >  III = 2
0985                                                                 >  LOOP WHILE JSP.WIP<1,III> # "" DO
0986                                                                 >  IF TYPE.INVOICE # "F" THEN
0987                                                                 >  IF JSP.MON<1,III> <= IVC.PERIOD.POST THEN
0988                                                                 >  SHP.OUT = SHP.OUT + JSP.WIP<1,III,1>
0989                                                                 >  FOH.OUT = FOH.OUT + JSP.WIP<1,III,2>

0990                                                                 >  END
0991                                                                 >  END ELSE
0992                                                                 >  IF JSP.MON<1,III> > IVC.PERIOD.POST THEN 
0993                                                                 >  *         FUTURE.WIP = FUTURE.WIP + JSP.WIP<1,III,1> + JSP.W
0994                                                                 >  FUTURE.WIP = FUTURE.WIP + JSP.WIP<1,III,1>
0995                                                                 >  END
0996                                                                 >  END

0997                                                                 >  III = III + 1
0998                                                                 >  REPEAT
0999                                                                 >  4045 NEXT II
1000                                                                 >  NEXT I
1001                                                                 >  4050*
1002                                                                 >  CNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
1003                                                                 >  FOR I = 1 TO CNT

1004                                                                 >  MS.ID = TEMP.JOB.NO:"!":JOB.MS.DEPT<1,I>:"!":JOB.MS.CCTR<1,I
1005                                                                 >  SEQ.CNT = JOB.MS.SEQ<1,I>
1006                                                                 >  FOR II = SEQ.CNT TO 1 STEP -1
1007                                                                 >  MATREAD JMS.REC FROM JOB.MISC, MS.ID:II ELSE GOTO 4055
1008                                                                 >  IF TYPE.INVOICE # "F" THEN
1009                                                                 >  IF JMS.MON<1,1,1> <= IVC.PERIOD.POST THEN
1010                                                                 >  MSC.IN += JMS.WIP<1,1,1>

1011                                                                 >  FOH.IN += JMS.WIP<1,1,2>
1012                                                                 >  END
1013                                                                 >  END ELSE
1014                                                                 >  IF JMS.MON<1,1,1> > IVC.PERIOD.POST THEN
1015                                                                 >  *       FUTURE.WIP = FUTURE.WIP + JMS.WIP<1,1,1> + JMS.WIP<1
1016                                                                 >  FUTURE.WIP = FUTURE.WIP + JMS.WIP<1,1,1>
1017                                                                 >  END

1018                                                                 >  END
1019                                                                 >  III = 2
1020                                                                 >  LOOP WHILE JMS.WIP<1,III> # "" DO
1021                                                                 >  IF TYPE.INVOICE # "F" THEN
1022                                                                 >  IF JMS.MON<1,III> <= IVC.PERIOD.POST THEN
1023                                                                 >  MSC.OUT = MSC.OUT + JMS.WIP<1,III,1>
1024                                                                 >  FOH.OUT = FOH.OUT + JMS.WIP<1,III,2>

1025                                                                 >  END
1026                                                                 >  END ELSE
1027                                                                 >  IF JMS.MON<1,III> > IVC.PERIOD.POST THEN
1028                                                                 >  *       FUTURE.WIP = FUTURE.WIP + JMS.WIP<1,III,1> + JMS.WIP
1029                                                                 >  FUTURE.WIP = FUTURE.WIP + JMS.WIP<1,III,1>
1030                                                                 >  END
1031                                                                 >  END

1032                                                                 >  III = III + 1
1033                                                                 >  REPEAT
1034                                                                 >  4055 NEXT II
1035                                                                 >  NEXT I
1036                                                                 >  *
1037                                                                 >  4100: 
1038                                                                 >  *

1039                                                                 >  *
1040 RETURN                                                             RETURN
1041 *                                                                  *
1042                                                                 >  * T26605 ^
1043                                                                 >  *
1044                                                                 >  ********************
1045                                                                 >  CALC.TOTALS: 

1046                                                                 >  ********************
1047                                                                 >  *
1048                                                                 >  * get total applied direct cost (reversed and not reversed)
1049                                                                 >  *
1050                                                                 >  * T26605
1051                                                                 >  *
1052                                                                 >  FOR XX=1 TO 5

1053                                                                 >  TOT.DIR.IN += MATRX(1,XX)
1054                                                                 >  NEXT XX
1055                                                                 >  *
1056                                                                 >  FOR XX = 1 TO 5
1057                                                                 >  TOT.DIR.OUT +=MATRX(2,XX)
1058                                                                 >  NEXT XX
1059                                                                 >  *

1060                                                                 >  FOR XX = 1 TO 5
1061                                                                 >  TOT.DIR.WIP +=MATRX(3,XX)
1062                                                                 >  NEXT XX
1063                                                                 >  *
1064                                                                 >  *                                        
1065                                                                 >  * overhead total WIP cost (IN = WIP+OUT)       
1066                                                                 >  *                                        

1067                                                                 >  *42056 v Only if invoice type = "F" - non-F's already calcul
1068                                                                 >  IF TYPE.INVOICE = 'F' THEN
1069                                                                 >  FOH.IN += FOH.WIP+FOH.OUT                              
1070                                                                 >  VOH.IN += VOH.WIP+VOH.OUT                              
1071                                                                 >  SA.IN += SA.WIP+SA.OUT                                 
1072                                                                 >  END
1073                                                                 >  *42056 ^

1074                                                                 >  TOT.OVR.IN += FOH.IN+VOH.IN+SA.IN                  
1075                                                                 >  ORG.OVR.IN = TOT.OVR.IN
1076                                                                 >  *                                                           
1077                                                                 >  TOT.OVR.WIP += VOH.WIP+FOH.WIP+SA.WIP   
1078                                                                 >  ORG.OVR.WIP = TOT.OVR.WIP
1079                                                                 >  TOT.OVR.OUT += FOH.OUT+VOH.OUT+SA.OUT     
1080                                                                 >  ORG.OVR.OUT = TOT.OVR.OUT

1081                                                                 >  *42056 ^
1082                                                                 >  TOT.OVR.EST += VOH.EST + FOH.EST + SA.EST     
1083                                                                 >  *
1084                                                                 >  FOR XX = 1 TO 5
1085                                                                 >  TOT.DIR.EST += MATRX(8,XX)
1086                                                                 >  NEXT XX
1087                                                                 >  *

1088                                                                 >  RETURN
1089                                                                 >  *
1090                                                                 >  ***************
1091                                                                 >  CALC.SUG.REV: 
1092                                                                 >  ***************
1093                                                                 >  *
1094                                                                 >  *C42659 v

1095                                                                 >  IF TYPE.INVOICE # 'F' THEN
1096                                                                 >  IF (JOB.QTY<1,1> +0) # 0 THEN
1097                                                                 >  REV.PRCNT =  ICONV((SUM(IVC.QUANTITY)/JOB.QTY<1,1>)* 100,"MD
1098                                                                 >  END ELSE
1099                                                                 >  REV.PRCNT = 0
1100                                                                 >  END
1101                                                                 >  END ELSE REV.PRCNT = 100

1102                                                                 >  *
1103                                                                 >  * check if all direct costs can be reversed for suggested % 
1104                                                                 >  * reduce suggested percent.
1105                                                                 >  *
1106                                                                 >  FOR DD = 1 TO 5
1107                                                                 >  MATRX(4,DD) = MATRX(3,DD)
1108                                                                 >  IF MATRX(8,DD)>0 THEN

1109                                                                 >  MATRX(5,DD) = ICONV(MATRX(3,DD) / MATRX(8,DD)*100,"MD2")
1110                                                                 >  END ELSE
1111                                                                 >  IF MATRX(3,DD)>0 THEN  ;*C42569
1112                                                                 >  MATRX(5,DD) = ICONV(MATRX(4,DD) / MATRX(3,DD)*100,"MD2")
1113                                                                 >  END ELSE MATRX(5,DD) = 0
1114                                                                 >  END
1115                                                                 >  TOT.DIR.REV.AMT += MATRX(4,DD)

1116                                                                 >  MATRX(6,DD) = MATRX(3,DD)-MATRX(4,DD) ;*wip cost after rever
1117                                                                 >  TOT.DIR.WIP.AFT +=MATRX(6,DD)
1118                                                                 >  MATRX(7,DD) = MATRX(2,DD)+MATRX(4,DD) ;*wip reversed cost af
1119                                                                 >  TOT.DIR.OUT.AFT +=MATRX(7,DD)
1120                                                                 >  NEXT DD
1121                                                                 >  *
1122                                                                 >  ;* calculate direct reversal amounts

1123                                                                 >  GOSUB CALC.DIRECT.REV.AMOUNTS
1124                                                                 >  *
1125                                                                 >  * calculate overhead reversal amounts
1126                                                                 >  GOSUB CALC.OVR.REV.AMOUNTS
1127                                                                 >  *
1128                                                                 >  *
1129                                                                 >  ;* calculate the total reversal % based on 

1130                                                                 >  ;*calculated amounts for every
1131                                                                 >  ;* cost and overhead type
1132                                                                 >  *
1133                                                                 >  GOSUB CALC.TOT.REV.PRCNT
1134                                                                 >  RETURN
1135                                                                 >  *
1136                                                                 >  *************************

1137                                                                 >  CALC.DIRECT.REV.AMOUNTS: 
1138                                                                 >  *************************
1139                                                                 >  *
1140                                                                 >  TOT.DIR.REV.AMT="" ; TOT.DIR.WIP.AFT="" ; TOT.DIR.OUT.AFT=""
1141                                                                 >  *
1142                                                                 >  FOR DD = 1 TO 5
1143                                                                 >  TOT.DIR.REV.AMT += MATRX(4,DD)

1144                                                                 >  MATRX(6,DD) = MATRX(3,DD)-MATRX(4,DD) ;*wip cost after rever
1145                                                                 >  TOT.DIR.WIP.AFT +=MATRX(6,DD)
1146                                                                 >  MATRX(7,DD) = MATRX(2,DD)+MATRX(4,DD) ;*wip reversed cost af
1147                                                                 >  TOT.DIR.OUT.AFT +=MATRX(7,DD)
1148                                                                 >  NEXT DD
1149                                                                 >  RETURN
1150                                                                 >  *

1151                                                                 >  ********************
1152                                                                 >  CALC.OVR.REV.AMOUNTS: 
1153                                                                 >  *********************
1154                                                                 >  *
1155                                                                 >  *42056 v TOT.OVR.REV.AMT="" ; TOT.OVR.WIP.AFT=""; TOT.OVR.OU
1156                                                                 >  TOT.OVR.REV.AMT="" ; TOT.OVR.WIP.AFT=""; TOT.OVR.OUT.AFT=""
1157                                                                 >  TOT.OVR.WIP = ORG.OVR.WIP; TOT.OVR.OUT = ORG.OVR.OUT; TOT.OV

1158                                                                 >  *
1159                                                                 >  *
1160                                                                 >  * check if overheads can be reversed for calculated direct l
1161                                                                 >  *
1162                                                                 >  *
1163                                                                 >  FOR DD = 1 TO 4
1164                                                                 >  TEMP.OVH = 0

1165                                                                 >  TEMP.OVH.CLOSED = 0
1166                                                                 >  TEMP.OVH.SUGG = 0
1167                                                                 >  IF DD = 1 THEN
1168                                                                 >  TEMP.OVH.SUGG = OVH.MATRX<11,1> + OVH.MATRX<11,2> + OVH.MATR
1169                                                                 >  TEMP.OVH.CLOSED = OVH.MATRX<6,1> + OVH.MATRX<6,2> + OVH.MATR
1170                                                                 >  END
1171                                                                 >  IF DD = 2 THEN

1172                                                                 >  TEMP.OVH.SUGG = OVH.MATRX<12,1> + OVH.MATRX<12,2> + OVH.MATR
1173                                                                 >  TEMP.OVH.CLOSED = OVH.MATRX<7,1> + OVH.MATRX<7,2> + OVH.MATR
1174                                                                 >  END
1175                                                                 >  IF DD = 3 THEN
1176                                                                 >  TEMP.OVH.SUGG = OVH.MATRX<13,1> + OVH.MATRX<13,2> + OVH.MATR
1177                                                                 >  TEMP.OVH.CLOSED = OVH.MATRX<8,1> + OVH.MATRX<8,2> + OVH.MATR
1178                                                                 >  END

1179                                                                 >  IF DD = 4 THEN
1180                                                                 >  *42056 v TEMP.OVH.SUGG = OVH.MATRX<14,1> + OVH.MATRX<11,2> +
1181                                                                 >  TEMP.OVH.SUGG = OVH.MATRX<14,1> + OVH.MATRX<14,2> + OVH.MATR
1182                                                                 >  TEMP.OVH.CLOSED = OVH.MATRX<9,1> + OVH.MATRX<9,2> + OVH.MATR
1183                                                                 >  END
1184                                                                 >  IF MATRX(3,DD) > 0  THEN
1185                                                                 >  TEMP.OVH = INT(((MATRX(4,DD) / MATRX(3,DD)) * TEMP.OVH.SUGG)

1186                                                                 >  END
1187                                                                 >  TOT.OVR.REV.AMT += TEMP.OVH
1188                                                                 >  * TOT.OVR.OUT += TEMP.OVH.CLOSED
1189                                                                 >  * TOT.OVR.WIP += TEMP.OVH.SUGG
1190                                                                 >  NEXT DD
1191                                                                 >  TOT.OVR.OUT.AFT = (TOT.OVR.REV.AMT + TOT.OVR.OUT)
1192                                                                 >  * FOR DD = 7 TO 9

1193                                                                 >  *   IF MATRX(8,DD) > 0 AND DL.REV.PRCNT>0 THEN
1194                                                                 >  *     IF MATRX(3,DD)<MATRX(8,DD)*DL.REV.PRCNT/100 THEN
1195                                                                 >  *       MATRX(5,DD) = MATRX(3,DD)*100/MATRX(8,DD)
1196                                                                 >  *     END ELSE
1197                                                                 >  *       MATRX(5,DD) = DL.REV.PRCNT
1198                                                                 >  *     END
1199                                                                 >  *   END ELSE

1200                                                                 >  *     ;* since there is no estimate for labor amount cannot 
1201                                                                 >  *     ;* we don't give them an option to change overheads am
1202                                                                 >  *     ;* so we calculate percent of reversal lb amount in wi
1203                                                                 >  *     ;* use this percent to calculate overhead amounts.
1204                                                                 >  *     IF MATRX(3,DD)>0 AND DL.WIP>0 THEN
1205                                                                 >  *       LB.PRCNT = (DL.REV.$/DL.WIP)*100
1206                                                                 >  *       MATRX(4,DD)=MATRX(3,DD)*LB.PRCNT/100

1207                                                                 >  *       MATRX(5,DD) = ""
1208                                                                 >  *     END
1209                                                                 >  *   END
1210                                                                 >  * NEXT DD
1211                                                                 >  * *
1212                                                                 >  * calculate overhead reversal amounts
1213                                                                 >  *

1214                                                                 >  * FOR DD = 7 TO 9
1215                                                                 >  *   IF MATRX(8,DD) > 0 AND DL.REV.PRCNT>0 THEN
1216                                                                 >  *     MATRX(4,DD) = (MATRX(8,DD)*OCONV(MATRX(5,DD),"MD2"))/1
1217                                                                 >  *     MATRX(4,DD) = ICONV(MATRX(4,DD),"MD2")
1218                                                                 >  *   END
1219                                                                 >  *   TOT.OVR.REV.AMT +=MATRX(4,DD)
1220                                                                 >  *   MATRX(6,DD) = MATRX(3,DD)-MATRX(4,DD)

1221                                                                 >  *   TOT.OVR.WIP.AFT +=MATRX(6,DD)
1222                                                                 >  *   MATRX(7,DD) = MATRX(2,DD)+MATRX(4,DD)
1223                                                                 >  *   TOT.OVR.OUT.AFT += MATRX(7,DD) ;*C37599
1224                                                                 >  * NEXT DD
1225                                                                 >  *
1226                                                                 >  RETURN
1227                                                                 >  *

1228                                                                 >  *******************
1229                                                                 >  CALC.TOT.REV.PRCNT: 
1230                                                                 >  *******************
1231                                                                 >  ;* calculate the total reversal % based on 
1232                                                                 >  ;*calculated amounts for every
1233                                                                 >  ;* cost and overhead type
1234                                                                 >  *

1235                                                                 >  IF JOB.EST # "" THEN
1236                                                                 >  IF TOT.DIR.EST > 0 THEN
1237                                                                 >  *   TOT.DIR.REV.PRCNT = TOT.DIR.REV.AMT*100/TOT.DIR.EST
1238                                                                 >  TOT.DIR.REV.PRCNT = TOT.DIR.REV.AMT/TOT.DIR.EST
1239                                                                 >  END
1240                                                                 >  IF TOT.OVR.EST > 0 THEN
1241                                                                 >  TOT.OVR.REV.PRCNT = TOT.OVR.REV.AMT*100/TOT.OVR.EST

1242                                                                 >  END
1243                                                                 >  SCV.REC(47)<ESN> = REV.PRCNT
1244                                                                 >  END
1245                                                                 >  RETURN
1246                                                                 >  *
1247                                                                 >  *****************
1248                                                                 >  GET.INVOICE.AMT: 

1249                                                                 >  *****************
1250                                                                 >  *
1251                                                                 >  *invoiced amount must not include tax,shp, or cmt category a
1252                                                                 >  *sub,subt,tot, code amounts.
1253                                                                 >  *
1254                                                                 >  CHG.CNT = DCOUNT(IVC.CHG.CAT,VM)
1255                                                                 >  FOR L = 1 TO CHG.CNT

1256                                                                 >  CATG = IVC.CHG.CAT<1,L>
1257                                                                 >  CODE = IVC.CHG.CODE<1,L>
1258                                                                 >  IF CATG="TAX" OR CATG="SHP" OR CATG="CMT" OR  CODE="SUB" OR 
1259                                                                 >  NULL
1260                                                                 >  END ELSE
1261                                                                 >  INVOICE.AMT +=IVC.AMOUNT<1,L>
1262                                                                 >  END

1263                                                                 >  NEXT L
1264                                                                 >  RETURN
1265                                                                 >  *
1266                                                                 >  **********************
1267                                                                 >  GET.JTD.INV.AMT.QTY: 
1268                                                                 >  **********************
1269                                                                 >  *

1270                                                                 >  *this sub. calculates job-to-date invoiced amount and qty.
1271                                                                 >  *invoiced amount must not include tax,shp, or cmt category a
1272                                                                 >  *sub,subt,tot, code amounts.                                
1273                                                                 >  * quantity is added to a total quantity for every line that 
1274                                                                 >  * field on the invoice populated.
1275                                                                 >  *
1276                                                                 >  MAT HOLD.IVC.REC = MAT IVC.REC

1277                                                                 >  INV.JTD.QTY = "" ; INV.JTD.AMT = ""
1278                                                                 >  *
1279                                                                 >  CNT = DCOUNT(JOB.INV.NO,VM)
1280                                                                 >  FOR X = 1 TO CNT
1281                                                                 >  MATREAD IVC.REC FROM INVOICE,CONO:JOB.INV.NO<1,X> THEN
1282                                                                 >  CHG.CNT = DCOUNT(IVC.CHG.CAT,VM)
1283                                                                 >  FOR L = 1 TO CHG.CNT

1284                                                                 >  INV.JTD.QTY += IVC.QUANTITY<1,L>
1285                                                                 >  CATG = IVC.CHG.CAT<1,L>
1286                                                                 >  CODE = IVC.CHG.CODE<1,L>
1287                                                                 >  IF CATG="TAX" OR CATG="SHP" OR CATG="CMT" OR  CODE="SUB" OR 
1288                                                                 >  NULL
1289                                                                 >  END ELSE
1290                                                                 >  INV.JTD.AMT +=IVC.AMOUNT<1,L>

1291                                                                 >  END
1292                                                                 >  NEXT L
1293                                                                 >  END
1294                                                                 >  NEXT X
1295                                                                 >  *
1296                                                                 >  MAT IVC.REC = MAT HOLD.IVC.REC
1297                                                                 >  *

1298                                                                 >  INV.JTD.AMT += INVOICE.AMT
1299                                                                 >  INV.JTD.QTY += SUM(IVC.QUANTITY)
1300                                                                 >  RETURN
1301                                                                 >  *
1302                                                                 >  **********************
1303                                                                 >  CALC.SUG.REV.PARTIAL: 
1304                                                                 >  **********************

1305                                                                 >  *
1306                                                                 >  IF (JOB.QTY<1,1> +0) # 0 THEN
1307                                                                 >  REV.PRCNT =  (SUM(IVC.QUANTITY)/JOB.QTY<1,1>)* 100
1308                                                                 >  END ELSE
1309                                                                 >  REV.PRCNT = 0
1310                                                                 >  END
1311                                                                 >  EST.QTY = JOB.QTY<1,1>

1312                                                                 >  TOT.DIR.REV.AMT="" ; TOT.DIR.WIP.AFT="" ; TOT.DIR.OUT.AFT=""
1313                                                                 >  FOR DD = 1 TO 5 
1314                                                                 >  IF MATRX(8,DD)=0 THEN
1315                                                                 >  ;* amount stays the same
1316                                                                 >  END ELSE
1317                                                                 >  IF (MATRX(1,DD) + 0) > 0 THEN
1318                                                                 >  EDL = INT(MATRX(8,DD)/100+0.5)

1319                                                                 >  ARYTD = INT(MATRX(2,DD)/100+0.5)
1320                                                                 >  IF (EST.QTY +0) # 0 THEN
1321                                                                 >  MATRX(4,DD) = ((INV.JTD.QTY / EST.QTY) * EDL) - ARYTD
1322                                                                 >  *T25605
1323                                                                 >  IF MATRX(4,DD) < 0 THEN
1324                                                                 >  MATRX(4,DD) = 0
1325                                                                 >  END

1326                                                                 >  *T25605
1327                                                                 >  MATRX(4,DD) = MATRX(4,DD) * 100
1328                                                                 >  END ELSE
1329                                                                 >  MATRX(4,DD) = 0
1330                                                                 >  END
1331                                                                 >  END
1332                                                                 >  END

1333                                                                 >  IF MATRX(4,DD) > MATRX(3,DD) THEN MATRX(4,DD) = MATRX(3,DD)
1334                                                                 >  * TOT.DIR.REV.AMT += MATRX(4,DD)
1335                                                                 >  * MATRX(6,DD) = MATRX(3,DD)-MATRX(4,DD) ;*wip cost after rev
1336                                                                 >  * TOT.DIR.WIP.AFT +=MATRX(6,DD)
1337                                                                 >  * MATRX(7,DD) = MATRX(2,DD)+MATRX(4,DD) ;*wip reversed cost 
1338                                                                 >  * TOT.DIR.OUT.AFT +=MATRX(7,DD)
1339                                                                 >  NEXT DD

1340                                                                 >  FOR DD = 1 TO 5
1341                                                                 >  IF MATRX(8,DD) > 0 THEN
1342                                                                 >  MATRX(5,DD) = ICONV(MATRX(4,DD) / MATRX(8,DD)*100,"MD2")
1343                                                                 >  END ELSE
1344                                                                 >  MATRX(5,DD) = 0
1345                                                                 >  END
1346                                                                 >  NEXT DD

1347                                                                 >  *
1348                                                                 >  GOSUB CALC.DIRECT.REV.AMOUNTS
1349                                                                 >  *
1350                                                                 >  GOSUB CALC.OVR.REV.AMOUNTS
1351                                                                 >  *
1352                                                                 >  GOSUB CALC.TOT.REV.PRCNT
1353                                                                 >  *

1354                                                                 >  RETURN
1355                                                                 >  *
1356                                                                 >  ****************
1357                                                                 >  GET.STATISTIC: 
1358                                                                 >  ****************
1359                                                                 >  *
1360                                                                 >  *column 2 (COS)

1361                                                                 >  *
1362                                                                 >  CM.$.OUT = SALES.OUT - MATRX(2,6)
1363                                                                 >  IF SALES.OUT > 0 THEN
1364                                                                 >  CM.PRCNT.OUT = (CM.$.OUT/SALES.OUT)*100
1365                                                                 >  END ELSE
1366                                                                 >  CM.PRCNT.OUT = ""
1367                                                                 >  END

1368                                                                 >  IF MATRX(2,1) > 0 THEN
1369                                                                 >  V.A.OUT = (SALES.OUT-(MATRX(2,2)+MATRX(2,3)+MATRX(2,4)+MATRX
1370                                                                 >  END ELSE
1371                                                                 >  V.A.OUT = ""
1372                                                                 >  END
1373                                                                 >  GP.$.OUT = CM.$.OUT-MATRX(2,10)
1374                                                                 >  IF SALES.OUT > 0 THEN

1375                                                                 >  GP.PRCNT.OUT = (GP.$.OUT/SALES.OUT)*100
1376                                                                 >  END ELSE
1377                                                                 >  GP.PRCNT.OUT = ""
1378                                                                 >  END
1379                                                                 >  *
1380                                                                 >  *column 4
1381                                                                 >  *

1382                                                                 >  CM.REV.$ = INVOICE.AMT - TOT.DIR.REV.AMT
1383                                                                 >  IF INVOICE.AMT > 0 THEN
1384                                                                 >  CM.REV.PRCNT = (CM.REV.$ /INVOICE.AMT)*100  
1385                                                                 >  END ELSE
1386                                                                 >  CM.REV.PRCNT = ""
1387                                                                 >  END
1388                                                                 >  IF DL.REV.$ > 0 THEN

1389                                                                 >  V.A.REV = (INVOICE.AMT-(DM.REV.$+OSP.REV.$+SHP.REV.$+MSC.REV
1390                                                                 >  END ELSE
1391                                                                 >  V.A.REV = ""
1392                                                                 >  END
1393                                                                 >  GP.REV.$ = CM.REV.$-TOT.OVR.REV.AMT
1394                                                                 >  IF INVOICE.AMT > 0 THEN 
1395                                                                 >  GP.REV.PRCNT = (GP.REV.$/INVOICE.AMT)*100

1396                                                                 >  END ELSE
1397                                                                 >  GP.REV.PRCNT = ""
1398                                                                 >  END
1399                                                                 >  *
1400                                                                 >  *column 7
1401                                                                 >  *
1402                                                                 >  CM.OUT.$ = INV.JTD.AMT - TOT.DIR.OUT.AFT

1403                                                                 >  IF INV.JTD.AMT > 0 THEN
1404                                                                 >  CM.OUT.PRCNT = (CM.OUT.$/INV.JTD.AMT)*100
1405                                                                 >  END ELSE
1406                                                                 >  CM.OUT.PRCNT = ""
1407                                                                 >  END
1408                                                                 >  IF DL.OUT.AFT > 0 THEN
1409                                                                 >  V.A.AFT = (INV.JTD.AMT-(DM.OUT.AFT+OSP.OUT.AFT+SHP.OUT.AFT+M

1410                                                                 >  END ELSE
1411                                                                 >  V.A.AFT = ""
1412                                                                 >  END
1413                                                                 >  GP.OUT.$ = CM.OUT.$-TOT.OVR.OUT.AFT
1414                                                                 >  IF INV.JTD.AMT > 0 THEN
1415                                                                 >  GP.OUT.PRCNT = (GP.OUT.$/INV.JTD.AMT)*100
1416                                                                 >  END ELSE

1417                                                                 >  GP.OUT.PRCNT = ""
1418                                                                 >  END
1419                                                                 >  *
1420                                                                 >  *column 8
1421                                                                 >  *
1422                                                                 >  CM.EST.$ = JOB.CONF.AMT-TOT.DIR.EST
1423                                                                 >  IF JOB.CONF.AMT > 0 THEN

1424                                                                 >  CM.EST.PRCNT = (CM.EST.$/JOB.CONF.AMT)*100
1425                                                                 >  END ELSE
1426                                                                 >  CM.EST.PRCNT = ""
1427                                                                 >  END
1428                                                                 >  IF DL.EST > 0 THEN
1429                                                                 >  V.A.EST = (JOB.CONF.AMT-(DM.EST+OSP.EST+SHP.EST+MSC.EST))/DL
1430                                                                 >  END ELSE

1431                                                                 >  V.A.EST = ""
1432                                                                 >  END
1433                                                                 >  GP.EST.$ = CM.EST.$ - TOT.OVR.EST
1434                                                                 >  IF JOB.CONF.AMT > 0 THEN
1435                                                                 >  GP.EST.PRCNT = (GP.EST.$/JOB.CONF.AMT)*100
1436                                                                 >  END ELSE
1437                                                                 >  GP.EST.PRCNT = ""

1438                                                                 >  END
1439                                                                 >  *
1440                                                                 >  *bottom row of %
1441                                                                 >  *
1442                                                                 >  IF JOB.QTY<1,1> > 0 THEN
1443                                                                 >  COMPL.PRCNT = (INV.JTD.QTY/JOB.QTY<1,1>)*100
1444                                                                 >  END ELSE

1445                                                                 >  COMPL.PRCNT = ""
1446                                                                 >  END
1447                                                                 >  IF TOT.DIR.EST+TOT.OVR.EST > 0 THEN
1448                                                                 >  COST.IN.PRCNT = ((TOT.DIR.IN+TOT.OVR.IN)/(TOT.DIR.EST+TOT.OV
1449                                                                 >  CLOSED.PRCNT = ((TOT.DIR.OUT.AFT+TOT.OVR.OUT.AFT)/(TOT.DIR.E
1450                                                                 >  END ELSE
1451                                                                 >  COST.IN.PRCNT = ""

1452                                                                 >  CLOSED.PRCNT = ""
1453                                                                 >  END
1454                                                                 >  RETURN
1455                                                                 >  *
1456                                                                 >  ****************
1457                                                                 >  BUILD.SCRN.REC: 
1458                                                                 >  ****************

1459                                                                 >  *
1460                                                                 >  SCV.REC(1)<ESN> = IVC.NO
1461                                                                 >  SCV.REC(4)<ESN> = IVC.JOB.NO
1462                                                                 >  SCV.REC(6)<ESN> = JOB.EST
1463                                                                 >  SCV.REC(5)<ESN> = JOB.DESC
1464                                                                 >  *
1465                                                                 >  * IF INV.JTD.QTY = SUM(IVC.QUANTITY) THEN

1466                                                                 >  *   SCV.REC(8)<ESN>=0
1467                                                                 >  *   SCV.REC(12)<ESN>=0
1468                                                                 >  * END ELSE
1469                                                                 >  SCV.REC(8)<ESN> = INV.JTD.QTY - SUM(IVC.QUANTITY)
1470                                                                 >  SCV.REC(12)<ESN> = INT(OCONV(SALES.OUT,"MD2")+.5)
1471                                                                 >  * END
1472                                                                 >  SCV.REC(9)<ESN> = SUM(IVC.QUANTITY)

1473                                                                 >  SCV.REC(10)<ESN> = INV.JTD.QTY
1474                                                                 >  SCV.REC(11)<ESN> = JOB.QTY<1,1>
1475                                                                 >  SCV.REC(13)<ESN> = INT(OCONV(INVOICE.AMT,"MD2")+.5)
1476                                                                 >  SCV.REC(14)<ESN> = INT(OCONV(INV.JTD.AMT,"MD2")+.5)
1477                                                                 >  SCV.REC(15)<ESN> = INT(OCONV(JOB.CONF.AMT,"MD2")+.05)
1478                                                                 >  *
1479                                                                 >  SCV.REC(30)<ESN> = INT(OCONV(JOB.CONF.AMT,"MD2") +.05)

1480                                                                 >  SCV.REC(31)<ESN> = JOB.QTY<1,1>
1481                                                                 >  SCV.REC(32)<ESN> = OCONV(INVOICE.AMT,"MD2")
1482                                                                 >  SCV.REC(33)<ESN> = SUM(IVC.QUANTITY)
1483                                                                 >  SCV.REC(34)<ESN> = OCONV(INV.JTD.AMT,"MD2")
1484                                                                 >  SCV.REC(35)<ESN> = INV.JTD.QTY
1485                                                                 >  *
1486                                                                 >  * T26605

1487                                                                 >  *
1488                                                                 >  FOR XX = 1 TO 5
1489                                                                 >  SCV.REC(16)<ESN,XX> = INT(MATRX(1,XX)/100+0.5)
1490                                                                 >  SCV.REC(17)<ESN,XX> = INT(MATRX(2,XX)/100+0.5)
1491                                                                 >  SCV.REC(18)<ESN,XX> = INT(MATRX(3,XX)/100+0.5)
1492                                                                 >  SCV.REC(19)<ESN,XX> = INT(MATRX(4,XX)/100+0.5)
1493                                                                 >  TEMP.MATRX = INT(MATRX(5,XX) / 10)

1494                                                                 >  SCV.REC(20)<ESN,XX> = OCONV(TEMP.MATRX,"MD1")
1495                                                                 >  SCV.REC(21)<ESN,XX> = INT(MATRX(6,XX)/100+0.5)
1496                                                                 >  SCV.REC(22)<ESN,XX> = INT(MATRX(7,XX)/100+0.5)
1497                                                                 >  SCV.REC(23)<ESN,XX> = INT(MATRX(8,XX)/100+0.5)
1498                                                                 >  NEXT XX
1499                                                                 >  SCV.REC(24)<ESN> = INT(TOT.DIR.IN/100+0.5)
1500                                                                 >  SCV.REC(25)<ESN> = INT(TOT.DIR.OUT/100+0.5)

1501                                                                 >  SCV.REC(26)<ESN> = INT(TOT.DIR.WIP/100+0.5)
1502                                                                 >  SCV.REC(27)<ESN> = INT(TOT.DIR.REV.AMT/100+0.5)
1503                                                                 >  TEMP = ICONV(TOT.DIR.REV.PRCNT,"MD2")
1504                                                                 >  TEMP = TEMP *10
1505                                                                 >  *SCV.REC(28)<ESN> = OCONV(ICONV(TOT.DIR.REV.PRCNT,"MD1"),"MD
1506                                                                 >  SCV.REC(28)<ESN> = OCONV(TEMP,"MD1")
1507                                                                 >  SCV.REC(29)<ESN> = INT(TOT.DIR.WIP.AFT/100+0.5)

1508                                                                 >  SCV.REC(30)<ESN> = INT(TOT.DIR.OUT.AFT/100+0.5)
1509                                                                 >  SCV.REC(31)<ESN> = INT(TOT.DIR.EST/100+0.5)
1510                                                                 >  *
1511                                                                 >  * T26605 FROM SCREEN 2 NOW ALL ON SCREEN 1
1512                                                                 >  *
1513                                                                 >  *
1514                                                                 >  *total overheads

1515                                                                 >  *
1516                                                                 >  *
1517                                                                 >  * 
1518                                                                 >  *
1519                                                                 >  SCV.REC(32)<ESN> = INT(OCONV(CM.$.OUT,"MD2")+.5)
1520                                                                 >  SCV.REC(36)<ESN> = OCONV(ICONV(CM.PRCNT.OUT,"MD1"),"MD1")
1521                                                                 >  SCV.REC(40)<ESN> =OCONV(ICONV(V.A.OUT,"MD1"),"MD1")

1522                                                                 >  SCV.REC(44)<ESN> = INT(MATRX(2,10)/100+0.5)
1523                                                                 >  SCV.REC(48)<ESN> = INT(OCONV(GP.$.OUT,"MD2")+.5)
1524                                                                 >  SCV.REC(52)<ESN> = OCONV(ICONV(GP.PRCNT.OUT,"MD1"),"MD1")
1525                                                                 >  *
1526                                                                 >  * statistics column 4
1527                                                                 >  *
1528                                                                 >  *C42056 v

1529                                                                 >  *SCV.REC(33)<ESN> = INT(OCONV(CM.REV.$,"MD2")+.5)
1530                                                                 >  SCV.REC(33)<ESN> = ICONV(OCONV(CM.REV.$,"MD2"),'MD0')
1531                                                                 >  SCV.REC(37)<ESN> = OCONV(ICONV(CM.REV.PRCNT,"MD1"),"MD1")
1532                                                                 >  SCV.REC(41)<ESN> =OCONV(ICONV(V.A.REV,"MD1"),"MD1")
1533                                                                 >  SCV.REC(45)<ESN> = INT(MATRX(4,10)/100+0.5)
1534                                                                 >  *SCV.REC(49)<ESN> = INT(OCONV(GP.REV.$,"MD2")+.5)
1535                                                                 >  SCV.REC(49)<ESN> = ICONV(OCONV(GP.REV.$,"MD2"),'MD0')

1536                                                                 >  SCV.REC(53)<ESN> = OCONV(ICONV(GP.REV.PRCNT,"MD1"),"MD1")
1537                                                                 >  *
1538                                                                 >  * statistics column 7
1539                                                                 >  *
1540                                                                 >  *SCV.REC(34)<ESN> = INT(OCONV(CM.OUT.$,"MD2")+.5)
1541                                                                 >  SCV.REC(34)<ESN> = ICONV(OCONV(CM.OUT.$,"MD2"),'MD0')
1542                                                                 >  SCV.REC(38)<ESN> = OCONV(ICONV(CM.OUT.PRCNT,"MD1"),"MD1")

1543                                                                 >  SCV.REC(42)<ESN> =OCONV(ICONV(V.A.AFT,"MD1"),"MD1")
1544                                                                 >  SCV.REC(46)<ESN> = INT(MATRX(7,10)/100+0.5)
1545                                                                 >  *SCV.REC(50)<ESN> = INT(OCONV(GP.OUT.$,"MD2")+.5)
1546                                                                 >  SCV.REC(50)<ESN> = ICONV(OCONV(GP.OUT.$,"MD2"),'MD0')
1547                                                                 >  *C42056 ^
1548                                                                 >  SCV.REC(54)<ESN> = OCONV(ICONV(GP.OUT.PRCNT,"MD1"),"MD1")
1549                                                                 >  *

1550                                                                 >  * statistics column 8
1551                                                                 >  *
1552                                                                 >  SCV.REC(35)<ESN> = INT(OCONV(CM.EST.$,"MD2")+.5)
1553                                                                 >  SCV.REC(39)<ESN> = OCONV(ICONV(CM.EST.PRCNT,"MD1"),"MD1")
1554                                                                 >  SCV.REC(43)<ESN> =OCONV(ICONV(V.A.EST,"MD1"),"MD1")
1555                                                                 >  SCV.REC(47)<ESN> = INT(MATRX(8,10)/100+0.5)
1556                                                                 >  SCV.REC(51)<ESN> = INT(OCONV(GP.EST.$,"MD2")+.5)

1557                                                                 >  SCV.REC(55)<ESN> = OCONV(ICONV(GP.EST.PRCNT,"MD1"),"MD1")
1558                                                                 >  *
1559                                                                 >  *24584 ^
1560                                                                 >  RETURN
1561                                                                 >  *
1562                                                                 >  * T26605
1563                                                                 >  *

1564                                                                 >  21000*
1565                                                                 >  JJURS=""; JSHIP=""; JCOST=""; JSALE=""
1566                                                                 >  JJCNT=0; JSCNT=0
1567                                                                 >  * T26605
1568                                                                 >  * IF SAVE.JOB.SUBS="" THEN JJOBS=JOB.NO ELSE JJOBS=SAVE.JOB.
1569                                                                 >  IF SAVE.JOB.SUBS="" THEN JJOBS=CURR.JOB.NO ELSE JJOBS=SAVE.J
1570                                                                 >  PRE.BILL.BAL=""

1571                                                                 >  SHIP.WIP=0
1572                                                                 >  JCNT=COUNT(JJOBS,VM) + (JJOBS # "")
1573                                                                 >  FOR J=1 TO JCNT
1574                                                                 >  JB=JJOBS<1,J>
1575                                                                 >  CURR.JOB.NO=JB
1576                                                                 >  MATREAD JOB.REC FROM JOB, CONO:JB ELSE GOTO 21080
1577                                                                 >  ICNT=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")

1578                                                                 >  FOR IP=1 TO ICNT
1579                                                                 >  IF JOB.INV.NO<1,IP>[7,2]="PB" THEN
1580                                                                 >  PRE.BILL.BAL<1,J>="Y"
1581                                                                 >  END
1582                                                                 >  NEXT IP
1583                                                                 >  SHIP.WIP=SHIP.WIP + JOB.SP.WIP<1,2,1>
1584                                                                 >  DCNT=COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")

1585                                                                 >  FOR D=1 TO DCNT
1586                                                                 >  SP.ID = CONO:JB:"!":JOB.SP.DEPT<1,D>:"!":JOB.SP.CCTR<1,D>:"!
1587                                                                 >  FOR DS=1 TO JOB.SP.SEQ<1,D>
1588                                                                 >  MATREAD JSP.REC FROM JOB.SHIP, SP.ID:DS ELSE GOTO 21070
1589                                                                 >  LOCATE JSP.JURS IN JJURS<1>,1 SETTING FND ELSE FND=0
1590                                                                 >  IF FND=0 THEN
1591                                                                 >  JJCNT=JJCNT + 1

1592                                                                 >  JJURS<1,JJCNT>=JSP.JURS
1593                                                                 >  END
1594                                                                 >  LOCATE JSP.VIA IN JSHIP<1>,1 SETTING FND ELSE FND=0
1595                                                                 >  IF FND=0 THEN
1596                                                                 >  JSCNT=JSCNT + 1
1597                                                                 >  JSHIP<1,JSCNT>=JSP.VIA
1598                                                                 >  JCOST<1,JSCNT>=JSP.COST

1599                                                                 >  JSALE<1,JSCNT>=JSP.SALE
1600                                                                 >  END ELSE
1601                                                                 >  JCOST<1,FND>=JCOST<1,FND> + JSP.COST
1602                                                                 >  JSALE<1,FND>=JSALE<1,FND> + JSP.SALE
1603                                                                 >  END
1604                                                                 >  21070 NEXT            DS
1605                                                                 >  NEXT D

1606                                                                 >  21080 NEXT         J
1607                                                                 >  RETURN
1608                                                                 >  *
1609                                                                 >  *---- MATCH TAX JURISDICTIONS
1610                                                                 >  *
1611                                                                 >  22000*
1612                                                                 >  SHIP.AMT=0

1613                                                                 >  JJMAT=""; JSMAT=""
1614                                                                 >  LCNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
1615                                                                 >  FOR L=1 TO LCNT
1616                                                                 >  CATG=IVC.CHG.CAT<1,L>
1617                                                                 >  BEGIN CASE
1618                                                                 >  CASE CATG="TAX"
1619                                                                 >  J=IVC.TAX.JURS<1,L>

1620                                                                 >  LOCATE J IN JJURS<1>,1 SETTING FND ELSE FND=0
1621                                                                 >  IF FND > 0 THEN JJMAT<1,FND>="X"
1622                                                                 >  CASE CATG="SHP"
1623                                                                 >  SHIP.AMT=SHIP.AMT + IVC.AMOUNT<1,L>
1624                                                                 >  S=IVC.TAX.JURS<1,L>
1625                                                                 >  LOCATE S IN JSHIP<1>,1 SETTING FND ELSE FND=0
1626                                                                 >  IF FND > 0 THEN JSMAT<1,FND>="X"

1627                                                                 >  END CASE
1628                                                                 >  NEXT L
1629                                                                 >  *
1630                                                                 >  MATCH.ERROR=0
1631                                                                 >  ERR=0
1632                                                                 >  FOR J=1 TO JJCNT UNTIL ERR
1633                                                                 >  IF JJMAT<1,J>="" THEN

1634                                                                 >  ERR=1
1635                                                                 >  MATCH.ERROR=1
1636                                                                 >  ERRMSG="Taxes not entered for all tax jurisdictions on job"
1637                                                                 >  GOSUB 90000
1638                                                                 >  END
1639                                                                 >  NEXT J
1640                                                                 >  ERR=0

1641                                                                 >  FOR S=1 TO JSCNT UNTIL ERR
1642                                                                 >  IF JSMAT<1,S>="" THEN
1643                                                                 >  ERR=1
1644                                                                 >  MATCH.ERROR=1
1645                                                                 >  ERRMSG="Shipping charges not entered for all carriers used o
1646                                                                 >  GOSUB 90000
1647                                                                 >  END

1648                                                                 >  NEXT S
1649                                                                 >  *
1650                                                                 >  IF SHIP.AMT > SHIP.WIP THEN
1651                                                                 >  MATCH.ERROR=1
1652                                                                 >  ERRMSG="Shipping charges entered exceeds WIP by ":OCONV((SHI
1653                                                                 >  GOSUB 90000
1654                                                                 >  END

1655                                                                 >  IF SHIP.WIP > SHIP.AMT THEN
1656                                                                 >  MATCH.ERROR=1
1657                                                                 >  ERRMSG="WIP exceeds shipping charges entered by ":OCONV((SHI
1658                                                                 >  GOSUB 90000
1659                                                                 >  END
1660                                                                 >  RETURN
1661                                                                 >  *

1662 *---- ERROR ROUTINE                                                *---- ERROR ROUTINE
1663 *                                                                  *
1664 90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN             |  90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
1665 * 90000*                                                        |  RETURN
1666 *    PRINT @(0,23):CL:ERRMSG:                                   |  91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
1667 *    INPUT REPLY,1:                                             |  RETURN                                       
1668 *    PRINT @(0,23):CL:                                          |  92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
1669 *    RETURN                                                     |  RETURN                                       
1670                                                                 >  93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)

1671                                                                 >  *
1672                                                                 >  * T26605 ^
1673 *                                                                  *
1674 *---- END OF PROGRAM                                               *---- END OF PROGRAM
1675 *                                                                  *
1676 99999*                                                             99999*
1677 ECD.ACTION=99;CALL SCRN.EDIT                                       ECD.ACTION=99;CALL SCRN.EDIT


JCSBP/JCS.EOM.POST                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JCS.EOM.POST
Printed for thompson at 06/28/2006 04:41:53PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0007 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0008                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0009 *COPY>JCS.CPYLIB>COM.JCS.EOM.POST                                  *COPY>JCS.CPYLIB>COM.JCS.EOM.POST
0010 *COPY>PMC.CPYLIB>COM.COMPANY                                       *COPY>PMC.CPYLIB>COM.COMPANY
0011                                                                 >  *T23437 v add cpylib for job category.add
0012                                                                 >  *COPY>CBN.CPYLIB>JOB.CATEGORY.ADD
0013 **************************************************************     ************************************************************
0014 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0015 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0016 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0017 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP

0027 * 18573 5/95 LLH - 1-52 ACCOUNTING PERIODS                         * 18573 5/95 LLH - 1-52 ACCOUNTING PERIODS
0028 *                                                                  *
0029 *T21177 diane 12/19/1996 * Add close for GUI                       *T21177 diane 12/19/1996 * Add close for GUI
0030 *T21177 diane 12/19/1996 * Move processing message for GUI         *T21177 diane 12/19/1996 * Move processing message for GUI
0031 *T23200 cindy 08/24/1998 * prompt after cont not gui'd             *T23200 cindy 08/24/1998 * prompt after cont not gui'd
0032 *T23278 markt 11/23/1998 * Allow closing/posting by division.   |  *T23473 rick 04/22/1999 * Modify pgm to use account codes fr
0033 *T22367 renee 01/02/1998 * Adding open statement for JOB.FNGD.  |  *                         Category new acct codes
0034 *T24118 cm 08/03/1999 * Correct posting problem where X-Jobs a     *T24118 cm 08/03/1999 * Correct posting problem where X-Jobs
0035 *                       posting in the correct fiscal period       *                       posting in the correct fiscal period
0036 *T25389 lanny 08/18/2000 * WEEK SEQ # NOT ALWAYS DETERMINED CO  |  *C45276 lross 01/05/2006 * Error in task 23437 - Acct Level 

0037 *                          FOR XJOBS.                           <  
0038 *T25648 lanny 02/23/2001 * XJOBS should be completed when proc  <  
0039 *T26334 epitka 12/19/2001 * REV12                               <  
0040 *T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY             <  
0041 *T27655 lross 09/12/2003 * Clear WIP.SALES.STATS at beginning.  <  
0042 *T28473 lross 03/16/2005 * Close 'X' Jobs only once.            <  
0043 *T28562 lross 05/24/2005 * Move Closing of XJOB's to EOM Closi  <  

0123 OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE IS M     OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE IS
0124 OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG='OUTSIDE.PO FIL     OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG='OUTSIDE.PO F
0125 OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE MI     OPEN '',INBUFF<3> TO EOM.TRANS ELSE ERRMSG=INBUFF<3>:' FILE 
0126 OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FILE     OPEN '',INBUFF<4> TO POST.REJECTS ELSE ERRMSG=INBUFF<4>:' FI
0127 OPEN '',INBUFF<6> TO WIP.SALES.STATS ELSE ERRMSG=INBUFF<6>:' F     OPEN '',INBUFF<6> TO WIP.SALES.STATS ELSE ERRMSG=INBUFF<6>:'
0128                                                                 >  *T23473 v
0129                                                                 >  OPEN '','JOB.CATEGORY.ADD' TO JOB.CATEGORY.ADD ELSE ERRMSG='
0130                                                                 >  *T23473 ^
0131 *                                                                  *
0132 ***** GET CONO                                                     ***** GET CONO

0142 NUM.PERIODS = PERIOD.REC<1>                                        NUM.PERIODS = PERIOD.REC<1>
0143 IF CO.ARS = "Y" THEN                                               IF CO.ARS = "Y" THEN
0144 OPEN '','OPEN.RECV' TO OPEN.RECV ELSE ERRMSG='OPEN.RECV FILE M     OPEN '','OPEN.RECV' TO OPEN.RECV ELSE ERRMSG='OPEN.RECV FILE
0145 END                                                                END
0146 IF CO.OPS = 'Y' THEN                                               IF CO.OPS = 'Y' THEN
0147 IF FILEINFO(INV_RECEIPTS,0)=0 THEN                              |  OPEN '','PALLET' TO PALLET ELSE ERRMSG='PALLET FILE IS MISSI
0148 OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE                     |  OPEN '','FNGD.RECEIPT.HIST' TO FNGD.RECEIPT.HIST ELSE ERRMSG
0149 ERRMSG="INV_RECEIPTS FILE IS MISSING";GOTO 93000                <  
0150 END                                                             <  
0151 END                                                             <  

0152 OPEN '','FNGD.WIP.HIST' TO FNGD.WIP.HIST ELSE ERRMSG='FNGD.WIP     OPEN '','FNGD.WIP.HIST' TO FNGD.WIP.HIST ELSE ERRMSG='FNGD.W
0153 OPEN '','FNGD_WIP_HIST_TAG' TO FNGD_WIP_HIST_TAG ELSE ERRMSG='     OPEN '','FNGD_WIP_HIST_TAG' TO FNGD_WIP_HIST_TAG ELSE ERRMSG
0154 OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG='JOB.FN  <  
0155 END                                                                END
0156 SYS.FISCAL = "JCFISCAL"                                            SYS.FISCAL = "JCFISCAL"
0157 STMT.HEAD = "SALES & JOB COST"                                     STMT.HEAD = "SALES & JOB COST"
0158 *                                                               <  
0159 *---- Load Screen                                               <  
0160 *                                                               <  

0161 *COPY>PMCBP>EOD.POST                                            <  
0162 IF ECD.RET.VALUE = "END" THEN                                   <  
0163 ECD.ACTION = 99 ; CALL SCRN.EDIT                                <  
0164 GOTO 99000                                                      <  
0165 END                                                             <  
0166 *T24118 v                                                          *T24118 v
0167 MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE              MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE

0166 *T24118 v                                                          *T24118 v
0167 MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE              MATREAD FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
0168 ERRMSG = "Cannot locate CONTROL ":SYS.FISCAL                       ERRMSG = "Cannot locate CONTROL ":SYS.FISCAL
0169 GOTO 93000                                                         GOTO 93000
0170 END                                                                END
0171 FISCAL.YR = FR.CURR.PER<1,POS>[1,4]                             |  FISCAL.YR = FR.CURR.PER[1,4]
0172 FISCAL.PER = FR.CURR.PER<1,POS>[5,2]                            |  FISCAL.PER = FR.CURR.PER[5,2]
0173 LFISCAL.YR = FISCAL.YR                                             LFISCAL.YR = FISCAL.YR
0174 LFISCAL.PER = FISCAL.PER -1                                        LFISCAL.PER = FISCAL.PER -1
0175 IF LFISCAL.PER = 0 THEN                                            IF LFISCAL.PER = 0 THEN

0180 READ PRODUCTION.REC FROM CONTROL,CONO:FISCAL.YR:'PRODUCTION.WE     READ PRODUCTION.REC FROM CONTROL,CONO:FISCAL.YR:'PRODUCTION.
0181 ERRMSG=FISCAL.YR:'PRODUCTION.WEEKS CONTROL RECORD IS MISSING'      ERRMSG=FISCAL.YR:'PRODUCTION.WEEKS CONTROL RECORD IS MISSING
0182 GOTO 93000                                                         GOTO 93000
0183 END                                                                END
0184 *T24118 ^                                                          *T24118 ^
0185                                                                 >  *
0186                                                                 >  *
0187                                                                 >  *---- Load Screen
0188                                                                 >  *
0189                                                                 >  *COPY>PMCBP>EOD.POST

0190                                                                 >  IF ECD.RET.VALUE = "END" THEN
0191                                                                 >  ECD.ACTION = 99 ; CALL SCRN.EDIT
0192                                                                 >  GOTO 99000
0193                                                                 >  END
0194 LOOP                                                               LOOP
0195                                                                 >  *T23200 v
0196                                                                 >  * TYP = 18; X = 0; Y = 21

0197                                                                 >  * PMSG = "Do You Want To Print JOB Detail Records (Y/N) :"
0198                                                                 >  * CALL EDIT.SUB
0199 ECD.NUM = 20                                                       ECD.NUM = 20
0200 ECD.ACTION = 4                                                     ECD.ACTION = 4
0201 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0202 VALUE = ECD.RET.VALUE                                              VALUE = ECD.RET.VALUE
0203                                                                 >  *T23200 ^

0211 END CASE                                                           END CASE
0212 WHILE VALUE = "END" DO                                             WHILE VALUE = "END" DO
0213 REPEAT                                                             REPEAT
0214 CLEARFILE EOM.TRANS                                                CLEARFILE EOM.TRANS
0215 CLEARFILE POST.REJECTS                                             CLEARFILE POST.REJECTS
0216 CLEARFILE WIP.SALES.STATS ;*T27655                              <  
0217 PRR.SEQ = 10000                                                    PRR.SEQ = 10000
0218 MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0     MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL =
0219 SA.SAL.ACCT = GLTB.SALES                                           SA.SAL.ACCT = GLTB.SALES
0220 SA.SAL.LEVEL = COA.LEVEL                                           SA.SAL.LEVEL = COA.LEVEL

0342 MS.APL.ACCT<2> = GLTB.MS.FOH.APL                                   MS.APL.ACCT<2> = GLTB.MS.FOH.APL
0343 FOR W = 1 TO 2                                                     FOR W = 1 TO 2
0344 MATREAD COA.REC FROM COA, CONO : MS.APL.ACCT<W> ELSE COA.LEVEL     MATREAD COA.REC FROM COA, CONO : MS.APL.ACCT<W> ELSE COA.LEV
0345 MS.APL.LEVEL<W> = COA.LEVEL                                        MS.APL.LEVEL<W> = COA.LEVEL
0346 NEXT W                                                             NEXT W
0347                                                                 >  *T23473 v
0348                                                                 >  GOSUB SAVE.ACCT.CODES
0349                                                                 >  *T23473 ^
0350 CAL.PER = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[1,2]     CAL.PER = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[1,
0351 CAL.YEAR = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[7,2     CAL.YEAR = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[7

0352                                                                 >  *T24118 v
0353                                                                 >  *IF DATE() < SALESDATES.REC(PERIOD[5,2]+1)<1,1> THEN
0354                                                                 >  *  CAL.DAY = OCONV(DATE(),"D2/")[4,2]
0355                                                                 >  *END ELSE
0356                                                                 >  *  CAL.DAY = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")
0357                                                                 >  *END
0358                                                                 >  *BEGIN CASE

0359                                                                 >  *  CASE CAL.DAY >= 1 AND CAL.DAY < 8
0360                                                                 >  *    SEQ = 1
0361                                                                 >  *  CASE CAL.DAY >= 8 AND CAL.DAY < 15
0362                                                                 >  *    SEQ = 2
0363                                                                 >  *  CASE CAL.DAY >= 15 AND CAL.DAY < 22
0364                                                                 >  *    SEQ = 3
0365                                                                 >  *  CASE CAL.DAY >= 22 AND CAL.DAY < 29

0366                                                                 >  *    SEQ = 4
0367                                                                 >  *  CASE CAL.DAY >= 29
0368                                                                 >  *    SEQ = 5
0369                                                                 >  *END CASE
0370 IF DATE() < SALESDATES.REC(PERIOD[5,2]+1)<1,1> THEN                IF DATE() < SALESDATES.REC(PERIOD[5,2]+1)<1,1> THEN
0371 CAL.DAY=DATE()                                                     CAL.DAY=DATE()
0372 END ELSE                                                           END ELSE

0372 END ELSE                                                           END ELSE
0373 CAL.DAY=SALESDATES.REC(PERIOD[5,2]+1)<1,1>                         CAL.DAY=SALESDATES.REC(PERIOD[5,2]+1)<1,1>
0374 END                                                                END
0375 LOCATE CAL.DAY IN PRODUCTION.REC<1>,1 BY 'AR' SETTING PW ELSE      LOCATE CAL.DAY IN PRODUCTION.REC<1>,1 BY 'AR' SETTING PW ELS
0376 IF PW > 53 THEN PW = 53                                            IF PW > 53 THEN PW = 53
0377 IF CAL.DAY < PRODUCTION.REC<1,PW> THEN                          <  
0378 IF PRODUCTION.REC<2,PW> > FISCAL.PER AND PRODUCTION.REC<2,PW-1  <  
0379 END                                                             <  
0380 *25389 ^                                                        <  
0381 LOCATE PRODUCTION.REC<2,PW> IN PRODUCTION.REC<2>,1 BY 'AR' SET     LOCATE PRODUCTION.REC<2,PW> IN PRODUCTION.REC<2>,1 BY 'AR' S

0381 LOCATE PRODUCTION.REC<2,PW> IN PRODUCTION.REC<2>,1 BY 'AR' SET     LOCATE PRODUCTION.REC<2,PW> IN PRODUCTION.REC<2>,1 BY 'AR' S
0382 SEQ = PW - STRT + 1                                                SEQ = PW - STRT + 1
0383 END ELSE                                                           END ELSE
0384 SEQ = 1                                                            SEQ = 1
0385 END                                                                END
0386                                                                 >  *T24118 ^
0387 READ DIV.NUMS FROM CONTROL, CONO:"DIVISIONS" ELSE DIV.NUMS = "     READ DIV.NUMS FROM CONTROL, CONO:"DIVISIONS" ELSE DIV.NUMS =
0388 DATA = 1                                                           DATA = 1
0389 LOOP                                                               LOOP
0390 READNEXT JOB.ID ELSE DATA = 0                                      READNEXT JOB.ID ELSE DATA = 0

0398 PRR.ERR = 'CANNOT LOCATE'                                          PRR.ERR = 'CANNOT LOCATE'
0399 PRR.SEQ = PRR.SEQ + 1                                              PRR.SEQ = PRR.SEQ + 1
0400 MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ                          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
0401 GOTO 999                                                           GOTO 999
0402 END                                                                END
0403                                                                 >  *T23473 v
0404                                                                 >  GOSUB LOAD.ACCT.CODES
0405                                                                 >  *T23473 ^  
0406                                                                 >  * BEGIN CASE
0407                                                                 >  * CASE JOB.WIP<1,5> < PERIOD

0408                                                                 >  * CASE JOB.WIP<1,4> > PERIOD
0409                                                                 >  * CASE 1
0410 P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING JOB NUMBER - '     P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING JOB NUMBER -
0411 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0412 *                                                                  *
0413 *---- CHECK AND POST N/C JOBS                                      *---- CHECK AND POST N/C JOBS
0414 *                                                                  *

0415                                                                 >  *T24118 v
0416                                                                 >  * IF (JOBNO[1,5] = "X":CAL.YEAR:CAL.PER OR JOBNO[1,5] = "X":
0417 IF (JOBNO[1,5]='X':FISCAL.YR[3,2]:FISCAL.PER OR JOBNO[1,5]='X'     IF (JOBNO[1,5]='X':FISCAL.YR[3,2]:FISCAL.PER OR JOBNO[1,5]='
0418                                                                 >  *T24118 ^
0419 IF DIV.NUMS # "" THEN                                              IF DIV.NUMS # "" THEN
0420 LOCATE JOBNO[6,2] IN DIV.NUMS<1>,1 SETTING FND ELSE FND = 0        LOCATE JOBNO[6,2] IN DIV.NUMS<1>,1 SETTING FND ELSE FND = 0
0421 IF FND > 0 THEN                                                    IF FND > 0 THEN

0422 IF (JOBNO[4,2] = FISCAL.PER AND JOBNO[8,1]<SEQ) OR (JOBNO[4,2]  |  *T24118 v
0423                                                                 >  *       IF (JOBNO[4,2] = CAL.PER AND JOBNO[8,1]<SEQ) OR (JOB
0424                                                                 >  IF (JOBNO[4,2] = FISCAL.PER AND JOBNO[8,1]<SEQ) OR (JOBNO[4,
0425 *T24118 ^                                                          *T24118 ^
0426 WIP.TYPE = "ALL"                                                   WIP.TYPE = "ALL"
0427 WIP.PERCENT = "10000"                                              WIP.PERCENT = "10000"
0428 WIP.DATE = "ALL"                                                   WIP.DATE = "ALL"

0428 WIP.DATE = "ALL"                                                   WIP.DATE = "ALL"
0429 WIP.PERIOD = "ALL"                                                 WIP.PERIOD = "ALL"
0430 CALL REVERSE.JOB.WIP(CONO,JOBNO,WIP.TYPE,WIP.PERCENT,WIP.DATE,     CALL REVERSE.JOB.WIP(CONO,JOBNO,WIP.TYPE,WIP.PERCENT,WIP.DAT
0431 RESV.ACTION = "D"                                                  RESV.ACTION = "D"
0432 RESV.LOC = 0                                                       RESV.LOC = 0
0433 CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,JOBNO)              |  CALL JOB.RESV.SUB(RESV.ACTION,RESV.LOC,CONO,JOBNO)
0434 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0435 FOR M = MCNT TO 1 STEP - 1                                         FOR M = MCNT TO 1 STEP - 1
0436 IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> =     IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M>
0437 JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB

0446 JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)                          JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
0447 JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)                          JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
0448 END                                                                END
0449 END                                                                END
0450 NEXT M                                                             NEXT M
0451 *T28562 v                                                       |  JOB.TRACK.DATE<1,10> = DATE()
0452 *T28473 v                                                       <  
0453 *         IF JOB.STATUS<1,1> # 4 AND JOB.STATUS<1,1> < 6 THEN   <  
0454 *           JOB.TRACK.DATE<1,10> = DATE()                       <  
0455 *           INS '4' BEFORE JOB.STATUS<1,1>                      <  

0456 *           INS DATE() BEFORE JOB.STAT.DATE<1,1>                <  
0457 *         END                                                   <  
0458 *T28473 ^                                                       <  
0459 *T28562 ^                                                       <  
0460 CFND = 1                                                           CFND = 1
0461 MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CFND = 0        MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CFND = 0
0462 IF CFND THEN                                                       IF CFND THEN

0468 MATWRITE CUST.REC ON CUSTOMER,CONO:JOB.CUST                        MATWRITE CUST.REC ON CUSTOMER,CONO:JOB.CUST
0469 END                                                                END
0470 END                                                                END
0471 END                                                                END
0472 END                                                                END
0473                                                                 >  *
0474                                                                 >  *
0475 IF JOB.INV.NO # '' THEN                                            IF JOB.INV.NO # '' THEN
0476 P_X  = 43 ; P_Y = 23 ; P_VALUE = 'INVOICES' ; P_OPT = "CL"         P_X  = 43 ; P_Y = 23 ; P_VALUE = 'INVOICES' ; P_OPT = "CL"
0477 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0517 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0518 CALL JCS.EOM.POST.MS                                               CALL JCS.EOM.POST.MS
0519 END CASE                                                           END CASE
0520 * END CASE                                                         * END CASE
0521 999MATWRITE JOB.REC ON JOB, JOB.ID                                 999MATWRITE JOB.REC ON JOB, JOB.ID
0522                                                                 >  *T23473 v
0523                                                                 >  GOSUB RESTORE.ACCT.CODES
0524                                                                 >  *T23473 ^
0525 REPEAT                                                             REPEAT
0526 IF CO.OPS = 'Y' THEN                                               IF CO.OPS = 'Y' THEN

0527 CALL JCS.EOM.POST.FG(FNGD.WIP.HIST,FNGD_WIP_HIST_TAG,INV_RECEI  |  CALL JCS.EOM.POST.FG(FNGD.WIP.HIST,FNGD_WIP_HIST_TAG,FNGD.RE
0528 END                                                                END
0529                                                                 >  * 
0530                                                                 >  *  THE NONCHARGEABLE JOBS ARE CREATED ONE TIME AT THE END OF
0531                                                                 >  *  AT THE COMPANY SETUP TIME - PRODUCTION WEEKS
0532                                                                 >  *
0533                                                                 >  *** MM = CAL.PER; YY = CAL.YEAR

0534                                                                 >  *** FOR MONS = 1 TO 3
0535                                                                 >  ***   MM = MM + 1
0536                                                                 >  ***   IF MM > NUM.PERIODS THEN
0537                                                                 >  ***     MM = 1; YY = YY + 1
0538                                                                 >  ***   END
0539                                                                 >  ***   IF LEN(MM) = 1 THEN MM = "0":MM
0540                                                                 >  ***   PRINT @(0,20):CL:

0541                                                                 >  ***   CNT.DIV = COUNT(DIV.NUMS,VM) + (DIV.NUMS # "")
0542                                                                 >  ***   FOR DIV = 1 TO CNT.DIV
0543                                                                 >  ***     FOR RECD = 1 TO 5
0544                                                                 >  ***       MATREAD JOB.REC FROM JOB, CONO:"X":CAL.YEAR:CAL.PE
0545                                                                 >  ***       IF JOB.TYPE # "N" THEN GOTO 1999
0546                                                                 >  ***       CREATE = 0
0547                                                                 >  ***       SAVE.SLSMN = JOB.SLSMN

0548                                                                 >  ***       SAVE.CUST = JOB.CUST
0549                                                                 >  ***       SAVE.DIV = JOB.DIV
0550                                                                 >  ***       SAVE.MARKUP = JOB.MARKUP
0551                                                                 >  ***       SAVE.COLORS = JOB.COLORS
0552                                                                 >  ***       SAVE.CONF.AMT = JOB.CONF.AMT
0553                                                                 >  ***       SAVE.SHIP.VIA = JOB.SHIP.VIA
0554                                                                 >  ***       SAVE.CUST.PO = JOB.CUST.PO

0555                                                                 >  ***       SAVE.DESC = JOB.DESC
0556                                                                 >  ***       SAVE.COMMENTS = JOB.COMMENTS
0557                                                                 >  ***       SAVE.EST = JOB.EST
0558                                                                 >  ***       SAVE.EST.TYPE = JOB.EST.TYPE
0559                                                                 >  ***       SAVE.EST.COST = JOB.EST.COST
0560                                                                 >  ***       SAVE.EST.SALE = JOB.EST.SALE
0561                                                                 >  ***       SAVE.QTY = JOB.QTY

0562                                                                 >  ***       SAVE.CATG = JOB.CATG
0563                                                                 >  ***       SAVE.SALES.CODE = JOB.SALES.CODE
0564                                                                 >  ***       NEW.JOB.KEY=CONO:"X":YY:MM:DIV.NUMS<1,DIV>:RECD
0565                                                                 >  ***       MATREADU JOB.REC FROM JOB, NEW.JOB.KEY ELSE CREATE
0566                                                                 >  ***       IF CREATE THEN
0567                                                                 >  ***         MAT JOB.REC = ""
0568                                                                 >  ***         JOB.MASTER = NEW.JOB.KEY[4,8]

0569                                                                 >  ***         JOB.STAT.DATE<1,1> = DATE()
0570                                                                 >  ***         JOB.SLSMN = SAVE.SLSMN
0571                                                                 >  ***         JOB.CUST = SAVE.CUST
0572                                                                 >  ***         JOB.DIV = SAVE.DIV
0573                                                                 >  ***         JOB.MARKUP = SAVE.MARKUP
0574                                                                 >  ***         JOB.COLORS = SAVE.COLORS
0575                                                                 >  ***         JOB.CONF.AMT = SAVE.CONF.AMT

0576                                                                 >  ***         JOB.TRACK.DATE<1,1> = DATE()
0577                                                                 >  ***         JOB.TRACK.DATE<1,2> = DATE()
0578                                                                 >  ***         JOB.TRACK.DATE<1,3> = DATE()
0579                                                                 >  ***         JOB.TYPE = "N"
0580                                                                 >  ***         JOB.SHIP.VIA = SAVE.SHIP.VIA
0581                                                                 >  ***         JOB.CUST.PO = SAVE.CUST.PO
0582                                                                 >  ***         JOB.DESC = SAVE.DESC

0583                                                                 >  ***         JOB.COMMENTS = SAVE.COMMENTS
0584                                                                 >  ***         JOB.EST = SAVE.EST
0585                                                                 >  ***         JOB.EST.TYPE = SAVE.EST.TYPE
0586                                                                 >  ***         JOB.EST.COST = SAVE.EST.COST
0587                                                                 >  ***         JOB.EST.SALE = SAVE.EST.SALE
0588                                                                 >  ***         JOB.QTY = SAVE.QTY
0589                                                                 >  ***         JOB.CATG = SAVE.CATG

0590                                                                 >  ***         JOB.SALES.CODE = SAVE.SALES.CODE
0591                                                                 >  ***         CFND = 1
0592                                                                 >  ***         MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST EL
0593                                                                 >  ***         IF CFND THEN
0594                                                                 >  ***           LOCATE NEW.JOB.KEY[4,8] IN CUST.JOB<1>,1 SETTI
0595                                                                 >  ***           CUST.JOB.BAL<1,JFND> = JOB.CONF.AMT
0596                                                                 >  ***           CUST.JOB<1,JFND> = NEW.JOB.KEY[4,8]

0597                                                                 >  ***         END
0598                                                                 >  ***         MATWRITE CUST.REC ON CUSTOMER,CONO:JOB.CUST
0599                                                                 >  ***         MATWRITE JOB.REC ON JOB, NEW.JOB.KEY
0600                                                                 >  ***       END ELSE
0601                                                                 >  ***         RELEASE JOB, NEW.JOB.KEY
0602                                                                 >  ***       END
0603                                                                 >  *** 1999NEXT RECD

0604                                                                 >  ***     NEXT DIV
0605                                                                 >  ***   NEXT MONS
0606 ECD.ACTION = 99 ; CALL SCRN.EDIT                                   ECD.ACTION = 99 ; CALL SCRN.EDIT
0607 GOTO 99999                                                         GOTO 99999
0608 **************************************************************     ************************************************************
0609                                                                 |  *T23473 v
0610                                                                 >  SAVE.ACCT.CODES: 

0611                                                                 >  *
0612                                                                 >  O.LB.COG.ACCT.1=LB.COG.ACCT<1>
0613                                                                 >  O.LB.COG.ACCT.2=LB.COG.ACCT<2>
0614                                                                 >  O.LB.COG.ACCT.3=LB.COG.ACCT<3>
0615                                                                 >  O.LB.COG.ACCT.4=LB.COG.ACCT<4>
0616                                                                 >  O.MT.COG.ACCT.1=MT.COG.ACCT<1>
0617                                                                 >  O.MT.COG.ACCT.2=MT.COG.ACCT<2>

0618                                                                 >  O.MT.COG.ACCT.3=MT.COG.ACCT<3>
0619                                                                 >  O.OS.COG.ACCT.1=OS.COG.ACCT<1>
0620                                                                 >  O.OS.COG.ACCT.2=OS.COG.ACCT<2>
0621                                                                 >  O.SP.COG.ACCT.1=SP.COG.ACCT<1>
0622                                                                 >  O.SP.COG.ACCT.2=SP.COG.ACCT<2>
0623                                                                 >  O.MS.COG.ACCT.1=MS.COG.ACCT<1>
0624                                                                 >  O.MS.COG.ACCT.2=MS.COG.ACCT<2>

0625                                                                 >  *C45276 v
0626                                                                 >  O.LB.COG.LEVEL = LB.COG.LEVEL<1>
0627                                                                 >  FOR I = 2 TO 4
0628                                                                 >  O.LB.COG.LEVEL<I> = LB.COG.LEVEL<I>
0629                                                                 >  NEXT I
0630                                                                 >  O.MT.COG.LEVEL = MT.COG.LEVEL<1>
0631                                                                 >  FOR I = 2 TO 3

0632                                                                 >  O.MT.COG.LEVEL<I> = MT.COG.LEVEL<I>
0633                                                                 >  NEXT I
0634                                                                 >  O.OS.COG.LEVEL = OS.COG.LEVEL<1>
0635                                                                 >  O.OS.COG.LEVEL<2> = OS.COG.LEVEL<2>
0636                                                                 >  O.SP.COG.LEVEL = SP.COG.LEVEL<1>
0637                                                                 >  O.SP.COG.LEVEL<2> = SP.COG.LEVEL<2>
0638                                                                 >  O.MS.COG.LEVEL = MS.COG.LEVEL<1>

0639                                                                 >  O.MS.COG.LEVEL<2> = MS.COG.LEVEL<2>
0640                                                                 >  *C45276 ^
0641                                                                 >  *
0642                                                                 >  RETURN
0643                                                                 >  *
0644                                                                 >  *
0645                                                                 >  LOAD.ACCT.CODES: 

0646                                                                 >  *
0647                                                                 >  MATREAD JCATG.ADD.REC FROM JOB.CATEGORY.ADD,CONO:JOB.CATG TH
0648                                                                 >  IF JCATG.ADD.DCOGS.LB # "" THEN
0649                                                                 >  LB.COG.ACCT<1> = JCATG.ADD.DCOGS.LB
0650                                                                 >  *C45276 v
0651                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.LB THEN
0652                                                                 >  LB.COG.LEVEL<1> = COA.LEVEL

0653                                                                 >  END
0654                                                                 >  END
0655                                                                 >  IF JCATG.ADD.DCOGS.MT # "" THEN
0656                                                                 >  MT.COG.ACCT<1> = JCATG.ADD.DCOGS.MT
0657                                                                 >  *C45276 v
0658                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.MT THEN
0659                                                                 >  MT.COG.LEVEL<1> = COA.LEVEL

0660                                                                 >  END
0661                                                                 >  END
0662                                                                 >  IF JCATG.ADD.DCOGS.OP # "" THEN
0663                                                                 >  OS.COG.ACCT<1> = JCATG.ADD.DCOGS.OP
0664                                                                 >  *C45276 v
0665                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.OP THEN
0666                                                                 >  OS.COG.LEVEL<1> = COA.LEVEL

0667                                                                 >  END
0668                                                                 >  END
0669                                                                 >  IF JCATG.ADD.DCOGS.SP # "" THEN
0670                                                                 >  SP.COG.ACCT<1> = JCATG.ADD.DCOGS.SP
0671                                                                 >  *C45276 v
0672                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.SP THEN
0673                                                                 >  SP.COG.LEVEL<1> = COA.LEVEL

0674                                                                 >  END
0675                                                                 >  END
0676                                                                 >  IF JCATG.ADD.DCOGS.MI # "" THEN
0677                                                                 >  MS.COG.ACCT<1> = JCATG.ADD.DCOGS.MI
0678                                                                 >  *C45276 v
0679                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.MI THEN
0680                                                                 >  MS.COG.LEVEL<1> = COA.LEVEL

0681                                                                 >  END
0682                                                                 >  END
0683                                                                 >  IF JCATG.ADD.FOH # "" THEN
0684                                                                 >  LB.COG.ACCT<2> = JCATG.ADD.FOH
0685                                                                 >  MT.COG.ACCT<2> = JCATG.ADD.FOH
0686                                                                 >  OS.COG.ACCT<2> = JCATG.ADD.FOH
0687                                                                 >  SP.COG.ACCT<2> = JCATG.ADD.FOH

0688                                                                 >  MS.COG.ACCT<2> = JCATG.ADD.FOH
0689                                                                 >  *C45276 v
0690                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.FOH THEN
0691                                                                 >  LB.COG.LEVEL<2> = COA.LEVEL
0692                                                                 >  MT.COG.LEVEL<2> = COA.LEVEL
0693                                                                 >  OS.COG.LEVEL<2> = COA.LEVEL
0694                                                                 >  SP.COG.LEVEL<2> = COA.LEVEL

0695                                                                 >  MS.COG.LEVEL<2> = COA.LEVEL
0696                                                                 >  END
0697                                                                 >  END
0698                                                                 >  IF JCATG.ADD.VOH # "" THEN
0699                                                                 >  LB.COG.ACCT<3> = JCATG.ADD.VOH
0700                                                                 >  MT.COG.ACCT<3> = JCATG.ADD.VOH
0701                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.VOH THEN

0702                                                                 >  LB.COG.LEVEL<3> = COA.LEVEL
0703                                                                 >  MT.COG.LEVEL<3> = COA.LEVEL
0704                                                                 >  END
0705                                                                 >  END
0706                                                                 >  IF JCATG.ADD.SA # "" THEN
0707                                                                 >  LB.COG.ACCT<4> = JCATG.ADD.SA
0708                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.SA THEN

0709                                                                 >  LB.COG.LEVEL<4> = COA.LEVEL
0710                                                                 >  END
0711                                                                 >  *C45276 ^
0712                                                                 >  END
0713                                                                 >  END
0714                                                                 >  *
0715                                                                 >  RETURN

0716                                                                 >  *
0717                                                                 >  *
0718                                                                 >  RESTORE.ACCT.CODES: 
0719                                                                 >  *
0720                                                                 >  LB.COG.ACCT<1>=O.LB.COG.ACCT.1
0721                                                                 >  LB.COG.ACCT<2>=O.LB.COG.ACCT.2
0722                                                                 >  LB.COG.ACCT<3>=O.LB.COG.ACCT.3

0723                                                                 >  LB.COG.ACCT<4>=O.LB.COG.ACCT.4
0724                                                                 >  MT.COG.ACCT<1>=O.MT.COG.ACCT.1
0725                                                                 >  MT.COG.ACCT<2>=O.MT.COG.ACCT.2
0726                                                                 >  MT.COG.ACCT<3>=O.MT.COG.ACCT.3
0727                                                                 >  OS.COG.ACCT<1>=O.OS.COG.ACCT.1
0728                                                                 >  OS.COG.ACCT<2>=O.OS.COG.ACCT.2
0729                                                                 >  SP.COG.ACCT<1>=O.SP.COG.ACCT.1

0730                                                                 >  SP.COG.ACCT<2>=O.SP.COG.ACCT.2
0731                                                                 >  MS.COG.ACCT<1>=O.MS.COG.ACCT.1
0732                                                                 >  MS.COG.ACCT<2>=O.MS.COG.ACCT.2
0733                                                                 >  *C45276 v
0734                                                                 >  FOR I = 1 TO 2
0735                                                                 >  LB.COG.LEVEL<I> = O.LB.COG.LEVEL<I>
0736                                                                 >  MT.COG.LEVEL<I> = O.MT.COG.LEVEL<I>

0737                                                                 >  OS.COG.LEVEL<I> = O.OS.COG.LEVEL<I>
0738                                                                 >  SP.COG.LEVEL<I> = O.SP.COG.LEVEL<I>
0739                                                                 >  MS.COG.LEVEL<I> = O.MS.COG.LEVEL<I>
0740                                                                 >  NEXT I
0741                                                                 >  LB.COG.LEVEL<3> = O.LB.COG.LEVEL<3>
0742                                                                 >  MT.COG.LEVEL<3> = O.MT.COG.LEVEL<3>
0743                                                                 >  LB.COG.LEVEL<4> = O.LB.COG.LEVEL<4>

0744                                                                 >  *C45276 ^
0745                                                                 >  *
0746                                                                 >  RETURN
0747                                                                 >  *
0748                                                                 >  *T23473 ^
0749 91000ERR.TYPE = 1                                                  91000ERR.TYPE = 1
0750 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)


JCSBP/JCS.EOM.POST.MT                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JCS.EOM.POST.MT
Printed for thompson at 06/28/2006 04:41:53PM

0001 SUBROUTINE JCS.EOM.POST.MT                                         SUBROUTINE JCS.EOM.POST.MT
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0018 * DATE        - 02/28/87                                           * DATE        - 02/28/87
0019 *                                                                  * 
0020 * TASK                                                             * TASK
0021 *     19256 10/12/95 LLH - EOD PROCESS                             *     19256 10/12/95 LLH - EOD PROCESS
0022 * DESCRIPTION -                                                    * DESCRIPTION -
0023                                                                 >  *T23473 rick 04/22/1999 * Modify pgm to get acct codes from
0024                                                                 >  *                         job.category.add record
0025 **************************************************************     ************************************************************
0026 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0027 *COPY>JCS.CPYLIB>EOM.ACCT                                          *COPY>JCS.CPYLIB>EOM.ACCT

0033 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY
0034 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0035 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0036 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0037 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0038                                                                 >  *T23437 v
0039                                                                 >  *COPY>CBN.CPYLIB>JOB.CATEGORY.ADD
0040                                                                 >  *
0041                                                                 >  JOB.CAT.OPEN =1
0042                                                                 >  OPEN "JOB.CATEGORY.ADD" TO JOB.CATEGORY.ADD ELSE

0043                                                                 >  JOB.CAT.OPEN =0
0044                                                                 >  END
0045                                                                 >  *T23437 ^
0046 MAT ETR.REC = ''                                                   MAT ETR.REC = ''
0047 MCNT = COUNT(JOB.MT.SEQ,VM) + (JOB.MT.SEQ # '')                    MCNT = COUNT(JOB.MT.SEQ,VM) + (JOB.MT.SEQ # '')
0048 CHECK.WIP = 0; NEW.REC = 0                                         CHECK.WIP = 0; NEW.REC = 0
0049 FOR M = 1 TO MCNT                                                  FOR M = 1 TO MCNT

0181 CASE 1                                                             CASE 1
0182 MATREAD COA.REC FROM COA, CONO : GLTB.MT.VOH.COG ELSE COA.LEVE     MATREAD COA.REC FROM COA, CONO : GLTB.MT.VOH.COG ELSE COA.LE
0183 MT.COG.ACCT<3> = GLTB.MT.VOH.COG                                   MT.COG.ACCT<3> = GLTB.MT.VOH.COG
0184 MT.COG.LEVEL<3> = COA.LEVEL                                        MT.COG.LEVEL<3> = COA.LEVEL
0185 END CASE                                                           END CASE
0186                                                                 >  *T23473 v
0187                                                                 >  GOSUB SAVE.ACCT.CODES
0188                                                                 >  *T23473 ^      
0189 FOR S = 1 TO JOB.MT.SEQ<1,M>                                       FOR S = 1 TO JOB.MT.SEQ<1,M>
0190 MATREADU JMT.REC FROM JOB.MATL, MT.ID:S ELSE                       MATREADU JMT.REC FROM JOB.MATL, MT.ID:S ELSE

0195 PRR.ERR = 'CANNOT LOCATE'                                          PRR.ERR = 'CANNOT LOCATE'
0196 PRR.SEQ = PRR.SEQ + 1                                              PRR.SEQ = PRR.SEQ + 1
0197 MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ                          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
0198 GOTO 800                                                           GOTO 800
0199 END                                                                END
0200                                                                 >  *T23437 v
0201                                                                 >  GOSUB LOAD.ACCT.CODES
0202                                                                 >  *T23437 ^         
0203 WIP.COST = JMT.WIP                                                 WIP.COST = JMT.WIP
0204 BEGIN CASE                                                         BEGIN CASE

0336 JMT.GLA.DATE<1,I> = "P"                                            JMT.GLA.DATE<1,I> = "P"
0337 NEXT W                                                             NEXT W
0338 700      NEXT I                                                    700      NEXT I
0339 MATWRITE JMT.REC ON JOB.MATL, MT.ID:S                              MATWRITE JMT.REC ON JOB.MATL, MT.ID:S
0340 800      RELEASE JOB.MATL, MT.ID:S                                 800      RELEASE JOB.MATL, MT.ID:S
0341                                                                 >  *T23437 v
0342                                                                 >  GOSUB RESTORE.ACCT.CODES
0343                                                                 >  *T23437 ^         
0344 NEXT S                                                             NEXT S
0345 NEXT M                                                             NEXT M

0428 WSS.MASTER = JOB.MASTER                                            WSS.MASTER = JOB.MASTER
0429 WSS.NO.COLORS = JOB.COLORS                                         WSS.NO.COLORS = JOB.COLORS
0430 WSS.POSTING.MONTH = PERIOD                                         WSS.POSTING.MONTH = PERIOD
0431 MATWRITE WSS.REC ON WIP.SALES.STATS, WSS.KEY                       MATWRITE WSS.REC ON WIP.SALES.STATS, WSS.KEY
0432 9999 RETURN                                                        9999 RETURN
0433                                                                 >  *
0434                                                                 >  *T23473 v
0435                                                                 >  *
0436                                                                 >  SAVE.ACCT.CODES:
0437                                                                 >  *

0438                                                                 >  O.MT.COG.ACCT.1=MT.COG.ACCT<1>
0439                                                                 >  *O.MT.INV.ACCT.3=MT.INV.ACCT<3>
0440                                                                 >  O.MT.COG.ACCT.3=MT.COG.ACCT<3>
0441                                                                 >  *O.MT.INV.ACCT.2=MT.INV.ACCT<2>
0442                                                                 >  O.MT.COG.ACCT.2=MT.COG.ACCT<2>
0443                                                                 >  *
0444                                                                 >  *C45276 v

0445                                                                 >  O.MT.COG.LEVEL=MT.COG.LEVEL<1>
0446                                                                 >  FOR I = 2 TO 3
0447                                                                 >  O.MT.COG.LEVEL<I>=MT.COG.LEVEL<I>
0448                                                                 >  NEXT I
0449                                                                 >  *C45276 ^
0450                                                                 >  RETURN
0451                                                                 >  *

0452                                                                 >  LOAD.ACCT.CODES:
0453                                                                 >  *
0454                                                                 >  IF JOB.CAT.OPEN THEN
0455                                                                 >  MATREAD JCATG.ADD.REC FROM JOB.CATEGORY.ADD,CONO:JOB.CATG TH
0456                                                                 >  IF JCATG.ADD.DCOGS.MT # "" THEN
0457                                                                 >  MT.COG.ACCT<1> = JCATG.ADD.DCOGS.MT
0458                                                                 >  *C45276 v

0459                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.MT THEN
0460                                                                 >  MT.COG.LEVEL<1>=COA.LEVEL
0461                                                                 >  END
0462                                                                 >  END
0463                                                                 >  IF JCATG.ADD.FOH # "" THEN
0464                                                                 >  *     MT.INV.ACCT<2> = JCATG.ADD.FOH
0465                                                                 >  MT.COG.ACCT<2> = JCATG.ADD.FOH

0466                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.FOH THEN
0467                                                                 >  MT.COG.LEVEL<2>=COA.LEVEL
0468                                                                 >  END
0469                                                                 >  END
0470                                                                 >  IF JCATG.ADD.VOH # "" THEN
0471                                                                 >  *     MT.INV.ACCT<3> = JCATG.ADD.VOH
0472                                                                 >  MT.COG.ACCT<3> = JCATG.ADD.VOH

0473                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.VOH THEN
0474                                                                 >  MT.COG.LEVEL<3>=COA.LEVEL
0475                                                                 >  END
0476                                                                 >  END
0477                                                                 >  END
0478                                                                 >  END
0479                                                                 >  *

0480                                                                 >  RETURN
0481                                                                 >  *
0482                                                                 >  RESTORE.ACCT.CODES:
0483                                                                 >  *
0484                                                                 >  MT.COG.ACCT<1>=O.MT.COG.ACCT.1
0485                                                                 >  *MT.INV.ACCT<3>=O.MT.INV.ACCT.3
0486                                                                 >  MT.COG.ACCT<3>=O.MT.COG.ACCT.3

0487                                                                 >  *MT.INV.ACCT<2>=O.MT.INV.ACCT.2
0488                                                                 >  MT.COG.ACCT<2>=O.MT.COG.ACCT.2
0489                                                                 >  *
0490                                                                 >  *C45276 v
0491                                                                 >  MT.COG.LEVEL<1>=O.MT.COG.LEVEL<1>
0492                                                                 >  MT.COG.LEVEL<2>=O.MT.COG.LEVEL<2>
0493                                                                 >  MT.COG.LEVEL<3>=O.MT.COG.LEVEL<3>

0494                                                                 >  RETURN
0495                                                                 >  *
0496                                                                 >  *T23473 ^
0497 END                                                                END
0498 **************************************************************     ************************************************************
0499 **************************************************************     ************************************************************
0500 ***************************** EOP ****************************     ***************************** EOP **************************


JCSBP/JCS.EOM.POST.OS                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JCS.EOM.POST.OS
Printed for thompson at 06/28/2006 04:41:53PM

0001 SUBROUTINE JCS.EOM.POST.OS                                         SUBROUTINE JCS.EOM.POST.OS
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0019 * DATE        - 02/28/87                                           * DATE        - 02/28/87
0020 * DESCRIPTION -                                                    * DESCRIPTION -
0021 * MOD CLW 10/02/94 Task 17919 - use CAOS.ACCRU.LIAB not CAOS.A     * MOD CLW 10/02/94 Task 17919 - use CAOS.ACCRU.LIAB not CAOS
0022 *     LLH 10/11/95      19256 - EOD PROCESSS                       *     LLH 10/11/95      19256 - EOD PROCESSS
0023 *   debit to wip                                                   *   debit to wip
0024 *T26334 epitka 12/19/2001 * REV12                               |  *T23473 rick 04/22/1999 * Modify pgm to use acct codes from 
0025                                                                 >  *                         JOB.CATEGORY.ADD record
0026 **************************************************************     ************************************************************
0027 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0028 *COPY>PMC.CPYLIB>POST.REJECTS                                      *COPY>PMC.CPYLIB>POST.REJECTS

0034 *COPY>JCS.CPYLIB>CATEGORY.OSP                                      *COPY>JCS.CPYLIB>CATEGORY.OSP
0035 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0036 *COPY>POS.CPYLIB>OUTSIDE.PO                                        *COPY>POS.CPYLIB>OUTSIDE.PO
0037 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0038 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0039                                                                 >  *T23473 v
0040                                                                 >  *COPY>CBN.CPYLIB>JOB.CATEGORY.ADD
0041                                                                 >  JOB.CAT.OPEN=1
0042                                                                 >  OPEN "JOB.CATEGORY.ADD" TO JOB.CATEGORY.ADD ELSE
0043                                                                 >  JOB.CAT.OPEN =0

0044                                                                 >  END
0045                                                                 >  *T23473 ^
0046 MAT ETR.REC = ''                                                   MAT ETR.REC = ''
0047 MCNT = COUNT(JOB.OS.SEQ,VM) + (JOB.OS.SEQ # '')                    MCNT = COUNT(JOB.OS.SEQ,VM) + (JOB.OS.SEQ # '')
0048 CHECK.WIP = 0; NEW.REC = 0                                         CHECK.WIP = 0; NEW.REC = 0
0049 FOR M = 1 TO MCNT                                                  FOR M = 1 TO MCNT
0050 DPNO = JOB.OS.DEPT<1,M>; CCNO = JOB.OS.CCTR<1,M>                   DPNO = JOB.OS.DEPT<1,M>; CCNO = JOB.OS.CCTR<1,M>

0119 CASE 1                                                             CASE 1
0120 MATREAD COA.REC FROM COA, CONO : GLTB.OS.FOH.COG ELSE COA.LEVE     MATREAD COA.REC FROM COA, CONO : GLTB.OS.FOH.COG ELSE COA.LE
0121 OS.COG.ACCT<2> = GLTB.OS.FOH.COG                                   OS.COG.ACCT<2> = GLTB.OS.FOH.COG
0122 OS.COG.LEVEL<2> = COA.LEVEL                                        OS.COG.LEVEL<2> = COA.LEVEL
0123 END CASE                                                           END CASE
0124                                                                 >  *T23473 v
0125                                                                 >  GOSUB SAVE.ACCT.CODES
0126                                                                 >  *T23473 ^
0127 FOR S = 1 TO JOB.OS.SEQ<1,M>                                       FOR S = 1 TO JOB.OS.SEQ<1,M>
0128 MATREADU JOS.REC FROM JOB.OSP, OS.ID:S ELSE                        MATREADU JOS.REC FROM JOB.OSP, OS.ID:S ELSE

0133 PRR.ERR = 'CANNOT LOCATE'                                          PRR.ERR = 'CANNOT LOCATE'
0134 PRR.SEQ = PRR.SEQ + 1                                              PRR.SEQ = PRR.SEQ + 1
0135 MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ                          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
0136 GOTO 800                                                           GOTO 800
0137 END                                                                END
0138                                                                 >  *T23473 v
0139                                                                 >  GOSUB LOAD.ACCT.CODES
0140                                                                 >  *T23473 ^
0141 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JOS.PO ELSE                  MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JOS.PO ELSE
0142 MAT OPO.REC = ''                                                   MAT OPO.REC = ''

0313 JOS.GLA.DATE<1,I> = "P"                                            JOS.GLA.DATE<1,I> = "P"
0314 NEXT W                                                             NEXT W
0315 700      NEXT I                                                    700      NEXT I
0316 MATWRITE JOS.REC ON JOB.OSP, OS.ID:S                               MATWRITE JOS.REC ON JOB.OSP, OS.ID:S
0317 800      RELEASE JOB.OSP, OS.ID:S                                  800      RELEASE JOB.OSP, OS.ID:S
0318                                                                 >  *T23473 v
0319                                                                 >  GOSUB RESTORE.ACCT.CODES
0320                                                                 >  *T23473 ^
0321 NEXT S                                                             NEXT S
0322 NEXT M                                                             NEXT M

0403 WSS.MASTER = JOB.MASTER                                            WSS.MASTER = JOB.MASTER
0404 WSS.NO.COLORS = JOB.COLORS                                         WSS.NO.COLORS = JOB.COLORS
0405 WSS.POSTING.MONTH = PERIOD                                         WSS.POSTING.MONTH = PERIOD
0406 MATWRITE WSS.REC ON WIP.SALES.STATS, WSS.KEY                       MATWRITE WSS.REC ON WIP.SALES.STATS, WSS.KEY
0407 9999 RETURN                                                        9999 RETURN
0408                                                                 >  *T23473 v
0409                                                                 >  *
0410                                                                 >  SAVE.ACCT.CODES:
0411                                                                 >  *
0412                                                                 >  O.OS.COG.ACCT.1 = OS.COG.ACCT<1>

0413                                                                 >  *O.OS.APL.ACCT.2 = OS.APL.ACCT<2>
0414                                                                 >  O.OS.COG.ACCT.2 = OS.COG.ACCT<2>
0415                                                                 >  *
0416                                                                 >  *C45276 v
0417                                                                 >  O.OS.COG.LEVEL=OS.COG.LEVEL<1>
0418                                                                 >  O.OS.COG.LEVEL<2>=OS.COG.LEVEL<2>
0419                                                                 >  RETURN

0420                                                                 >  *
0421                                                                 >  LOAD.ACCT.CODES:
0422                                                                 >  *
0423                                                                 >  IF JOB.CAT.OPEN THEN
0424                                                                 >  MATREAD JCATG.ADD.REC FROM JOB.CATEGORY.ADD,CONO:JOB.CATG TH
0425                                                                 >  IF JCATG.ADD.DCOGS.OP # "" THEN
0426                                                                 >  OS.COG.ACCT<1> = JCATG.ADD.DCOGS.OP

0427                                                                 >  *C45276 v
0428                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.OP THEN
0429                                                                 >  OS.COG.LEVEL<1>=COA.LEVEL
0430                                                                 >  END
0431                                                                 >  END
0432                                                                 >  IF JCATG.ADD.FOH # "" THEN
0433                                                                 >  *     OS.INV.ACCT<2> = JCATG.ADD.FOH

0434                                                                 >  OS.COG.ACCT<2> = JCATG.ADD.FOH
0435                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.FOH THEN
0436                                                                 >  OS.COG.LEVEL<2>=COA.LEVEL
0437                                                                 >  END
0438                                                                 >  END
0439                                                                 >  END
0440                                                                 >  END

0441                                                                 >  *
0442                                                                 >  RETURN
0443                                                                 >  *
0444                                                                 >  RESTORE.ACCT.CODES:
0445                                                                 >  *
0446                                                                 >  OS.COG.ACCT<1>=O.OS.COG.ACCT.1
0447                                                                 >  *OS.APL.ACCT<2>=O.OS.APL.ACCT.2

0448                                                                 >  OS.COG.ACCT<2>=O.OS.COG.ACCT.2
0449                                                                 >  *
0450                                                                 >  *C45276 v
0451                                                                 >  OS.COG.LEVEL<1>=O.OS.COG.LEVEL<1>
0452                                                                 >  OS.COG.LEVEL<2>=O.OS.COG.LEVEL<2>
0453                                                                 >  RETURN
0454                                                                 >  *

0455                                                                 >  *T23473 ^
0456 END                                                                END
0457 **************************************************************     ************************************************************
0458 **************************************************************     ************************************************************
0459 ****************************** EOP ***************************     ****************************** EOP *************************
0460 **************************************************************     ************************************************************
0461 **************************************************************     ************************************************************


JCSBP/JOB.BOOK.SUB                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.BOOK.SUB
Printed for thompson at 06/28/2006 04:41:53PM

0001 SUBROUTINE JOB.BOOK.SUB (CONO,ACTION,JOB.NO,OLD.EST,NEW.EST,MA     SUBROUTINE JOB.BOOK.SUB (CONO,ACTION,JOB.NO,OLD.EST,NEW.EST,
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0038 * T21710 doug 03/31/1997 * Add subroutine call to update EST.J     * T21710 doug 03/31/1997 * Add subroutine call to update EST
0039 *                          for PowerBuilder                        *                          for PowerBuilder
0040 * T21961 gat 05/29/1997 * Est Price/1000 incorrect if you book     * T21961 gat 05/29/1997 * Est Price/1000 incorrect if you bo
0041 *                         components                               *                         components
0042 * T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match probl     * T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match pro
0043 * T22332 rick 10/28/1997 * Fix to valdat for y/n fields         |  *T22332 rick 10/28/1997 * Fix to valdat for y/n fields
0044 * T22896 LLH 05/12/1998  * SET FLAG FOR JOB.SCHED RECORD TO "P  |  *T22896 LLH 05/12/1998  * SET FLAG FOR JOB.SCHED RECORD TO "
0045 *                          JOB IS FIRST BOOKED                     *                         JOB IS FIRST BOOKED
0046 *T24675 markt 12/23/1999 * Require the user to key in a Matl R     *T24675 markt 12/23/1999 * Require the user to key in a Matl
0047 *                          rather then defaulting tomorrow's d     *                          rather then defaulting tomorrow's

0047 *                          rather then defaulting tomorrow's d     *                          rather then defaulting tomorrow's
0048 *T25639 gat 02/22/2001 * FIX CLASS EXTRACT NEEDED FOR EXPLORE      *T25639 gat 02/22/2001 * FIX CLASS EXTRACT NEEDED FOR EXPLOR
0049 *T25623 cm 02/27/2001 * Correct multiple material problem.         *T25623 cm 02/27/2001 * Correct multiple material problem.
0050 *C37319 brm 03/26/2001 * Do not allow an estimate with one com     *C37319 brm 03/26/2001 * Do not allow an estimate with one c
0051 *                        booked to more than one job.              *                        booked to more than one job.
0052 *T26138 cm 11/05/2001 * Expand qty field from 8 to 9 digits.    |  *T26870 lross 09/20/2002 * Update JOB.COMMENTS when JOB is m
0053 *T26334 epitka 12/10/2001 * Rev12                               <  
0054 *T26372 adelgado 01/23/2002 * Merge Rev11 into Rev12            <  
0055 *T25916 cmykleb 05/09/2002 * Change xref to allow user to choo  <  
0056 *                            from xref list.                    <  

0057 *C40294 cmykleb 07/10/2002 * Fix uninitalized variable.         <  
0058 *T26929 cmykleb 10/21/2002 * Update JOB.COMMENTS when JOB is m  <  
0059 *                            after initial creation.               *                          after initial creation.
0060 *T26932 cmykleb 10/21/2002 * Do not prompt for component # whe  |  *T27413 cmykleb 05/09/2003 * IF an estimate # is removed and
0061 *                            estimate is a roll label estimate  |  *                            back so a new qty can be loaded
0062 *                            there is only one component for r  |  *                            estimate. The user needs to be 
0063 *                            estimates.                         |  *                            with the "Extract to Scheduling

0064 *T27115 epitka 12/17/2002 * Remove "Update Job Schedule List"   |  *T27718 cmykleb 09/30/2003 * Allow for customer to use both 
0065 *T27914 cmykleb 01/30/2004 * If a job is re-filed, the estimat  |  *                            scheduling.
0066 *                            being blanked out in ESTIMATE.JOB  <  
0067 **************************************************************     ************************************************************
0068 *                                                                  *
0069 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0070 *                                                                  *

0084 *COPY>PSS.CPYLIB>JOB.SCHED                                         *COPY>PSS.CPYLIB>JOB.SCHED
0085 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0086 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0087 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0088 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0089 *COPY>CPYLIB>XREF.DATA             ; * T25916                   <  
0090 *COPY>CPYLIB>GEN.XREF.SUB          ; * T25916                   <  
0091 MAT SYSCOM.REC =  "";SYS.TYPE = 2                                  MAT SYSCOM.REC =  "";SYS.TYPE = 2
0092 *                                                                  *
0093 *---- DIMENSIONED VARIABLES                                        *---- DIMENSIONED VARIABLES

0096 EQU EST.PAR.QTY    TO EST.PAR(1)                                   EQU EST.PAR.QTY    TO EST.PAR(1)
0097 EQU EST.PAR.COMP   TO EST.PAR(2)                                   EQU EST.PAR.COMP   TO EST.PAR(2)
0098 EQU EST.PAR.DEPT   TO EST.PAR(3)                                   EQU EST.PAR.DEPT   TO EST.PAR(3)
0099 EQU EST.PAR.UPDM   TO EST.PAR(4)                                   EQU EST.PAR.UPDM   TO EST.PAR(4)
0100 EQU EST.PAR.MATL   TO EST.PAR(5)                                   EQU EST.PAR.MATL   TO EST.PAR(5)
0101                                                                 >  EQU EST.PAR.CHG    TO EST.PAR(6) ; * T27413
0102                                                                 >  RE.SCHEDULE = EST.PAR.CHG ; * T27413
0103 DIM OLD.EST.PAR(10)                                                DIM OLD.EST.PAR(10)
0104 MAT OLD.EST.PAR = ''                                               MAT OLD.EST.PAR = ''
0105 DIM NEW.EST.PAR(10)                                                DIM NEW.EST.PAR(10)

0105 DIM NEW.EST.PAR(10)                                                DIM NEW.EST.PAR(10)
0106 MAT NEW.EST.PAR = ''                                               MAT NEW.EST.PAR = ''
0107 *                                                                  *
0108 *---- PRE-INITIALIZATION                                           *---- PRE-INITIALIZATION
0109 *                                                                  *
0110                                                                 >  *T22154 v
0111 MATREAD COMP.REC FROM COMPANY, CONO ELSE                           MATREAD COMP.REC FROM COMPANY, CONO ELSE
0112 ERRMSG = 'Cannot read company ':CONO:' record.'                    ERRMSG = 'Cannot read company ':CONO:' record.'
0113 GOSUB 90000                                                        GOSUB 90000
0114 GOTO 99001                                                         GOTO 99001

0115 END                                                                END
0116                                                                 >  *T22154 ^
0117 TODAY = DATE()                                                     TODAY = DATE()
0118 IF ESTAT THEN GOTO 99999;*T22154 <                                 IF ESTAT THEN GOTO 99999;*T22154 <
0119 ESTAT = 0                                                          ESTAT = 0
0120 MAT GEN.XREF.REC = "" ; * T25916                                <  
0121 GXR.CO = CONO ; * T25916                                        <  
0122 * T22896 v                                                         * T22896 v

0125 ERRMSG = "CANNOT OPEN JOB.SCHED FILE"                              ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
0126 GOSUB 90000                                                        GOSUB 90000
0127 GOTO 99001                                                         GOTO 99001
0128 END                                                                END
0129 END                                                                END
0130 JOB.FLAG = ""                                                   <  
0131 IF ACTION = "3" AND EST.PAR.QTY = "" AND OLD.EST = NEW.EST THE     IF ACTION = "3" AND EST.PAR.QTY = "" AND OLD.EST = NEW.EST T
0132 IF CO.PSS = "Y" THEN                                               IF CO.PSS = "Y" THEN
0133 IF NEW.EST # "" THEN                                               IF NEW.EST # "" THEN
0134 MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE                   MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE

0137 GOSUB 3500;*T20925                                                 GOSUB 3500;*T20925
0138 END                                                                END
0139 END                                                                END
0140 RETURN                                                             RETURN
0141 END                                                                END
0142 RETURN ; * T27914                                               <  
0143 END                                                                END
0144 *                                                                  *
0145 *T22896                                                            *T22896
0146 *---- OPEN ALL FILES                                               *---- OPEN ALL FILES

0168 OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE                        OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
0169 ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"                           ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
0170 GOSUB 90000                                                        GOSUB 90000
0171 GOTO 99001                                                         GOTO 99001
0172 END                                                                END
0173                                                                 >  * T21710 v
0174 EST.ACT.FLG = 0                                                    EST.ACT.FLG = 0
0175 OPEN "","EST.JOB.ACT" TO EST.JOB.ACT THEN EST.ACT.FLG = 1          OPEN "","EST.JOB.ACT" TO EST.JOB.ACT THEN EST.ACT.FLG = 1
0176                                                                 >  * T21710 ^
0177                                                                 >  *** TASK 18828

0178 OPEN "","WAREHOUSE" TO WAREHOUSE ELSE                              OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
0179 ERRMSG = "CANNOT OPEN WAREHOUSE FILE"                              ERRMSG = "CANNOT OPEN WAREHOUSE FILE"
0180 GOSUB 90000                                                        GOSUB 90000
0181 GOTO 99001                                                         GOTO 99001
0182 END                                                                END
0183 *T25916 v                                                       <  
0184 OPEN "","XREF.DATA" TO XREF.DATA ELSE                           <  
0185 ERRMSG = "CANNOT OPEN XREF.DATA FILE"                           <  
0186 GOSUB 90000                                                     <  
0187 GOTO 99001                                                      <  

0188 END                                                             <  
0189 *T25916 ^                                                       <  
0190 ***                                                                ***
0191                                                                 >  *   END
0192 *                                                                  *
0193 *---- INITIALIZATION                                               *---- INITIALIZATION
0194 *                                                                  *

0243 JOB.FLAG = 'U'                                                     JOB.FLAG = 'U'
0244 GOSUB 3500                                                         GOSUB 3500
0245 CASE OLD.EST # NEW.EST                                             CASE OLD.EST # NEW.EST
0246 JOB.FLAG = 'R'                                                     JOB.FLAG = 'R'
0247 GOSUB 3500                                                         GOSUB 3500
0248                                                                 >  *T27413 v
0249                                                                 >  CASE OLD.EST = NEW.EST AND RE.SCHEDULE = 'Y'
0250                                                                 >  JOB.FLAG = 'R'
0251                                                                 >  GOSUB 3500
0252                                                                 >  *T27413 ^

0301 *---- GET ESTIMATE                                                 *---- GET ESTIMATE
0302 *                                                                  *
0303 200 *                                                              200 *
0304 TYP=1;X=0;Y=21;MAXL=11;O.R="O";DEFAULT=""                          TYP=1;X=0;Y=21;MAXL=11;O.R="O";DEFAULT=""
0305 PMSG="Estimate ID - "                                              PMSG="Estimate ID - "
0306                                                                 >  *DT   CALL EDIT.SUB1(MAT EDIT.COM)
0307 CALL EDIT.SUB                                                      CALL EDIT.SUB
0308 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                        P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0309 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0310 IF VALUE = "END" THEN GOTO 99002                                   IF VALUE = "END" THEN GOTO 99002

0338 RETURN                                                             RETURN
0339 CASE ECNT = 1                                                      CASE ECNT = 1
0340 EST.PAR.QTY = EST.QTY                                              EST.PAR.QTY = EST.QTY
0341 QP = 1;*T22154 <                                                   QP = 1;*T22154 <
0342 CASE 1                                                             CASE 1
0343 *T25916 v                                                       |  TYP=3;X=0;Y=21;MAXL=8
0344 *        TYP=3;X=0;Y=21;MAXL=9                                  <  
0345 TYP=1;X=0;Y=21;MAXL=9                                           <  
0346 *T25916 ^                                                       <  
0347 PMSG="Estimate Quantity - "                                        PMSG="Estimate Quantity - "

0348 IF EST.BOOK.QTY+0 > 0 THEN                                         IF EST.BOOK.QTY+0 > 0 THEN
0349 O.R = "O"                                                          O.R = "O"
0350 DEFAULT = EST.BOOK.QTY                                             DEFAULT = EST.BOOK.QTY
0351 PMSG="Estimate Quantity (Default=":DEFAULT:") - "                  PMSG="Estimate Quantity (Default=":DEFAULT:") - "
0352 END                                                                END
0353                                                                 >  *DT      CALL EDIT.SUB1(MAT EDIT.COM)
0354 CALL EDIT.SUB                                                      CALL EDIT.SUB
0355 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                        P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0356 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0357 IF VALUE = "END" THEN RETURN                                       IF VALUE = "END" THEN RETURN

0358 *T25916 v                                                       <  
0359 IF VALUE = "???" THEN                                           <  
0360 GXR.ID = ""                                                     <  
0361 GXR.NAME = "EST.QTY.SEL"                                        <  
0362 GXR.XREF = ESTIMATE                                             <  
0363 GXR.SRCH.ID = EST.NO                                            <  
0364 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

0365 IF GXR.ID = "" OR GXR.ID = "END" THEN                           <  
0366 GOTO 210                                                        <  
0367 END                                                             <  
0368 IF GXR.ID # "" THEN VALUE = EST.QTY<1,GXR.ID>                   <  
0369 END                                                             <  
0370 IF VALUE MATCHES "0N" THEN NULL ELSE                            <  
0371 ERRMSG = "** NUMERIC REQUIRED **"                               <  

0372 GOSUB 90000                                                     <  
0373 GOTO 210                                                        <  
0374 END                                                             <  
0375 *T25916 ^                                                       <  
0376 LOCATE VALUE IN EST.QTY<1>,1 SETTING QP ELSE                       LOCATE VALUE IN EST.QTY<1>,1 SETTING QP ELSE
0377 ERRMSG = "Invalid quantity. Try again! "                           ERRMSG = "Invalid quantity. Try again! "
0378 GOSUB 90000                                                        GOSUB 90000

0397 220 *                                                              220 *
0398 BEGIN CASE                                                         BEGIN CASE
0399 CASE EST.COMPONENT.CNT+0 = 0                                       CASE EST.COMPONENT.CNT+0 = 0
0400 EST.PAR.COMP = ""                                                  EST.PAR.COMP = ""
0401 SAVE.COMP.CNT = 0                                                  SAVE.COMP.CNT = 0
0402                                                                 >  *37319      CASE EST.COMPONENT.CNT = 1
0403                                                                 >  *37319         EST.PAR.COMP = 1
0404                                                                 >  *37319         SAVE.COMP.CNT = 1
0405 CASE ACTION = ''                                                   CASE ACTION = ''
0406 CASE 1                                                             CASE 1

0424 CC = COUNT(CDEFAULT,SM)+1                                          CC = COUNT(CDEFAULT,SM)+1
0425 FOR CP = 2 TO CC                                                   FOR CP = 2 TO CC
0426 DEFAULT = DEFAULT:",":CDEFAULT<1,1,CP>                             DEFAULT = DEFAULT:",":CDEFAULT<1,1,CP>
0427 NEXT CP                                                            NEXT CP
0428 END                                                                END
0429 *T26932 v                                                       <  
0430 IF EST.PDEF.TYPE # "RL" THEN                                    <  
0431 *T26932 ^                                                       <  
0432 PMSG="Components (Default=":DEFAULT:") - "                         PMSG="Components (Default=":DEFAULT:") - "
0433                                                                 >  *DT      CALL EDIT.SUB1(MAT EDIT.COM)

0432 PMSG="Components (Default=":DEFAULT:") - "                         PMSG="Components (Default=":DEFAULT:") - "
0433                                                                 >  *DT      CALL EDIT.SUB1(MAT EDIT.COM)
0434 CALL EDIT.SUB                                                      CALL EDIT.SUB
0435 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                        P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0436 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0437 *T26932 v                                                       <  
0438 END ELSE                                                        <  
0439 VALUE = "ALL"                                                   <  
0440 *           PMSG = "" ; * C42858                                <  
0441 END                                                             <  

0442 *T26932 ^                                                       <  
0443 IF VALUE = "END" THEN GOTO 99002                                   IF VALUE = "END" THEN GOTO 99002
0444 NUM.JOBS=DCOUNT(EST.BOOK.JOB,VM)                                   NUM.JOBS=DCOUNT(EST.BOOK.JOB,VM)
0445 IF VALUE = "ALL" THEN                                              IF VALUE = "ALL" THEN
0446 JFND=0                                                             JFND=0
0447 FOR NJ = 1 TO NUM.JOBS WHILE JFND = 0                              FOR NJ = 1 TO NUM.JOBS WHILE JFND = 0
0448 IF EST.BOOK.JOB<1,NJ> # JOB.NO THEN JFND = NJ                      IF EST.BOOK.JOB<1,NJ> # JOB.NO THEN JFND = NJ

0448 IF EST.BOOK.JOB<1,NJ> # JOB.NO THEN JFND = NJ                      IF EST.BOOK.JOB<1,NJ> # JOB.NO THEN JFND = NJ
0449 NEXT NJ                                                            NEXT NJ
0450 IF JFND > 0 THEN                                                   IF JFND > 0 THEN
0451 ERRMSG="One or more components have been booked to Job# ":EST.     ERRMSG="One or more components have been booked to Job# ":ES
0452 GOSUB 90000                                                        GOSUB 90000
0453 *T26932 v                                                       <  
0454 IF EST.PDEF.TYPE = "RL" THEN                                    <  
0455 VALUE = "END"                                                   <  
0456 GOTO 99002                                                      <  
0457 END                                                             <  

0458 *T26932 ^                                                       <  
0459 GOTO 220                                                           GOTO 220
0460 END                                                                END
0461                                                                 >  *C37319 v
0462 IF EST.COMPONENT.CNT = 1 THEN                                      IF EST.COMPONENT.CNT = 1 THEN
0463 EST.PAR.COMP = 1                                                   EST.PAR.COMP = 1
0464 SAVE.COMP.CNT = 1                                                  SAVE.COMP.CNT = 1

0463 EST.PAR.COMP = 1                                                   EST.PAR.COMP = 1
0464 SAVE.COMP.CNT = 1                                                  SAVE.COMP.CNT = 1
0465 END ELSE                                                           END ELSE
0466 EST.PAR.COMP = "ALL"                                               EST.PAR.COMP = "ALL"
0467 END                                                                END
0468                                                                 >  *C37319 ^
0469 END ELSE                                                           END ELSE
0470 COMPS = ""                                                         COMPS = ""
0471 C2 = COUNT(VALUE,",") + 1                                          C2 = COUNT(VALUE,",") + 1
0472 FOR C = 1 TO C2                                                    FOR C = 1 TO C2

0487 GOSUB 90000                                                        GOSUB 90000
0488 GOTO 220                                                           GOTO 220
0489 END                                                                END
0490 COMPS<1,1,C> = CX                                                  COMPS<1,1,C> = CX
0491 NEXT C                                                             NEXT C
0492                                                                 >  *C37319 v
0493 IF EST.COMPONENT.CNT = 1 THEN                                      IF EST.COMPONENT.CNT = 1 THEN
0494 EST.PAR.COMP = 1                                                   EST.PAR.COMP = 1
0495 SAVE.COMP.CNT = 1                                                  SAVE.COMP.CNT = 1
0496 END ELSE                                                           END ELSE

0495 SAVE.COMP.CNT = 1                                                  SAVE.COMP.CNT = 1
0496 END ELSE                                                           END ELSE
0497 EST.PAR.COMP = COMPS                                               EST.PAR.COMP = COMPS
0498 SAVE.COMP.CNT = C2                                                 SAVE.COMP.CNT = C2
0499 END                                                                END
0500                                                                 >  *C37319 ^
0501 END                                                                END
0502 END CASE                                                           END CASE
0503 RETURN                                                             RETURN
0504 *                                                                  *

0506 *                                                                  *
0507 230 *                                                              230 *
0508 TYP=1;X=0;Y=21;MAXL=1                                              TYP=1;X=0;Y=21;MAXL=1
0509 VALDAT = 'Y':VM:'N'                                                VALDAT = 'Y':VM:'N'
0510 PMSG="Update Job Required Materials - "                            PMSG="Update Job Required Materials - "
0511                                                                 >  *DT   CALL EDIT.SUB1(MAT EDIT.COM)
0512 CALL EDIT.SUB                                                      CALL EDIT.SUB
0513 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                        P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0514 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0515 IF VALUE = "END" THEN GOTO 99002                                   IF VALUE = "END" THEN GOTO 99002

0530 IF JOB.TYPE = "" THEN JOB.TYPE = EST.TYPE                          IF JOB.TYPE = "" THEN JOB.TYPE = EST.TYPE
0531 JOB.EST = EST.NO                                                   JOB.EST = EST.NO
0532 JOB.EST.TYPE = EST.TYPE                                            JOB.EST.TYPE = EST.TYPE
0533 IF JOB.CATG = "" THEN JOB.CATG = EST.CATG                          IF JOB.CATG = "" THEN JOB.CATG = EST.CATG
0534 IF JOB.SALES.CODE = "" THEN JOB.SALES.CODE = EST.SALES.CODE        IF JOB.SALES.CODE = "" THEN JOB.SALES.CODE = EST.SALES.CODE
0535                                                                 >  *T22154 v
0536 IF JOB.CUST.PO = "" THEN JOB.CUST.PO = EST.CUST.PO                 IF JOB.CUST.PO = "" THEN JOB.CUST.PO = EST.CUST.PO
0537                                                                 >  *T22154 ^
0538 LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0          LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
0539 IF QP > 0 THEN                                                     IF QP > 0 THEN

0540 JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>                          JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>
0541                                                                 >  **   GOSUB 61000
0542 END                                                                END
0543 CPT = 0                                                            CPT = 0
0544 DPT = 0                                                            DPT = 0
0545 CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1                             CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1
0546 CCNT2 = COUNT(EST.COMMENTS,VM) + 1                                 CCNT2 = COUNT(EST.COMMENTS,VM) + 1
0547 IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1               IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1

0554 RETURN                                                             RETURN
0555 *                                                                  *
0556 *---- GET JOB INFO                                                 *---- GET JOB INFO
0557 *                                                                  *
0558 2000 *                                                             2000 *
0559                                                                 >  * JOB.CUST = EST.CUST
0560                                                                 >  * JOB.SLSMN = EST.SALESMAN
0561                                                                 >  * JOB.DIV = FIELD(EST.DIV,"-",1)
0562                                                                 >  * JOB.DEPT = DEPT
0563                                                                 >  * JOB.MARKUP = EST.MARKUP<1,1>

0564                                                                 >  * JOB.TRACK.DATE<1,2> = DATE()
0565                                                                 >  * JOB.TYPE = EST.TYPE
0566                                                                 >  *CSF 19549
0567                                                                 >  *IF JOB.QTY<1,1> = "" THEN JOB.QTY<1,1> = EST.PAR.QTY
0568                                                                 >  * JOB.CATG = EST.CATG
0569                                                                 >  * JOB.SALES.CODE = EST.SALES.CODE
0570 JOB.TRACK.DATE<1,1> = EST.DATE.ENTERED                             JOB.TRACK.DATE<1,1> = EST.DATE.ENTERED

0573 JOB.QTY<1,1> = EST.PAR.QTY                                         JOB.QTY<1,1> = EST.PAR.QTY
0574 IF JOB.MASTER = "" THEN JOB.MASTER = EST.JOB                       IF JOB.MASTER = "" THEN JOB.MASTER = EST.JOB
0575 LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0          LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
0576 IF QP > 0 THEN                                                     IF QP > 0 THEN
0577 JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>                          JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>
0578                                                                 >  **      GOSUB 61000
0579 END                                                                END
0580 JOB.EST.COST = ""                                                  JOB.EST.COST = ""
0581 JOB.EST.SALE = ""                                                  JOB.EST.SALE = ""
0582 DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")            DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")

0592 END                                                                END
0593 END                                                                END
0594 NEXT LN                                                            NEXT LN
0595 JOB.EST.SALE = JOB.EST.SALE + (INT(OCONV(JOB.EST.SALE,'MD2') *     JOB.EST.SALE = JOB.EST.SALE + (INT(OCONV(JOB.EST.SALE,'MD2')
0596 CPT = 0                                                            CPT = 0
0597                                                                 >  *T21961 v
0598 TOTAL.VSALE = TOTAL.VSALE + (INT(OCONV(TOTAL.VSALE,'MD2') * OC     TOTAL.VSALE = TOTAL.VSALE + (INT(OCONV(TOTAL.VSALE,'MD2') * 
0599 IF EST.PAR.COMP # 'ALL' THEN                                       IF EST.PAR.COMP # 'ALL' THEN
0600 JOB.PRICE.PER.THOU = INT(TOTAL.VSALE / (EST.PAR.QTY/1000) + .5     JOB.PRICE.PER.THOU = INT(TOTAL.VSALE / (EST.PAR.QTY/1000) + 
0601 END                                                                END

0602 DPT = 0                                                         |  *T21961 ^
0603 *T26929 v                                                       |  *T26870 v
0604 *  CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1                       <  
0605 *  CCNT2 = COUNT(EST.COMMENTS,VM) + 1                           <  
0606 *  IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1         <  
0607 CPT = 0                                                            CPT = 0
0608 CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1                             CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1

0614 IF JOB.COMMENTS<1,CPT> = '' THEN                                   IF JOB.COMMENTS<1,CPT> = '' THEN
0615 JOB.COMMENTS<1,CPT> = EST.COMMENTS<1,CP>                           JOB.COMMENTS<1,CPT> = EST.COMMENTS<1,CP>
0616 END                                                                END
0617 END                                                                END
0618 NEXT CP                                                            NEXT CP
0619 *T26929 ^                                                       |  DPT = 0
0620                                                                 >  *  CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1
0621                                                                 >  *  CCNT2 = COUNT(EST.COMMENTS,VM) + 1
0622                                                                 >  *  IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1
0623                                                                 >  *T26870 ^

0646 ROLL.LABEL = ''                                                    ROLL.LABEL = ''
0647 END                                                                END
0648 JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")           JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0649 FOR JM = 1 TO JRM.CNT                                              FOR JM = 1 TO JRM.CNT
0650 IF SAVE.INV.JS.REC<JM> = '' THEN                                   IF SAVE.INV.JS.REC<JM> = '' THEN
0651                                                                 >  *TASK 18828  CLS 3/95
0652 MATREAD WHSE.REC FROM WAREHOUSE,CONO:JOB.RESV.WHSE<1,JM> ELSE      MATREAD WHSE.REC FROM WAREHOUSE,CONO:JOB.RESV.WHSE<1,JM> ELS
0653 IF WHS.DIV = JOB.DIV OR WHS.DIV = "00" THEN                        IF WHS.DIV = JOB.DIV OR WHS.DIV = "00" THEN
0654 JSTAT.ID = JOB.RESV.MATL<1,JM>:"!":JOB.RESV.WHSE<1,JM>:"!":JOB     JSTAT.ID = JOB.RESV.MATL<1,JM>:"!":JOB.RESV.WHSE<1,JM>:"!":J
0655 MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE           MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE

0686 EST.QTYS<1,X> = EST.QTYS<1,X> + QTY                                EST.QTYS<1,X> = EST.QTYS<1,X> + QTY
0687 END                                                                END
0688 NEXT WB                                                            NEXT WB
0689 NEXT CP                                                            NEXT CP
0690 IF ROLL.LABEL THEN                                                 IF ROLL.LABEL THEN
0691                                                                 >  *        IF EST.RL.LAM = 'Y' THEN
0692                                                                 >  *           IF EST.RL.LAM.INV # "" THEN
0693                                                                 >  *              PROD = EST.RL.LAM.INV
0694                                                                 >  *              QTY = FIELD(EST.RL.LAM.MSI,"!",QP)
0695                                                                 >  *              WIDTH = EST.RL.LAM.WIDTH

0696                                                                 >  *              GOSUB 70000
0697                                                                 >  *              LOCATE PROD IN EST.PRODS<1>,1 SETTING X ELSE 
0698                                                                 >  *              EST.PRODS<1,X> = PROD
0699                                                                 >  *              EST.QTYS<1,X> = EST.QTYS<1,X> + QTY
0700                                                                 >  *           END
0701                                                                 >  *        END
0702 END                                                                END

0704 FOR I = 1 TO PROD.CNT                                              FOR I = 1 TO PROD.CNT
0705 MATREAD INV.REC FROM INVENTORY,CONO:EST.PRODS<1,I> ELSE MAT IN     MATREAD INV.REC FROM INVENTORY,CONO:EST.PRODS<1,I> ELSE MAT 
0706 GOSUB 80000                                                        GOSUB 80000
0707 IF CASE1.FLAG THEN EST.QTYS<1,I> = EST.QTYS<1,I> * 100             IF CASE1.FLAG THEN EST.QTYS<1,I> = EST.QTYS<1,I> * 100
0708 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC     MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.R
0709                                                                 >  *        WHSE = INV.WHSE.CODE<1,1>
0710                                                                 >  *TASK 18828  CLS 3/95
0711                                                                 >  *T22154 v
0712                                                                 >  *         GOOD.WHSE = 0
0713                                                                 >  *         FOR C = 1 TO DCOUNT(INV.WHSE.CODE<1>,VM) UNTIL GOO

0714                                                                 >  *            WHSE = INV.WHSE.CODE<1,C>
0715                                                                 >  *            MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE ELSE 
0716                                                                 >  *            IF WHS.DIV = JOB.DIV OR WHS.DIV = "00" THEN
0717                                                                 >  *               GOOD.WHSE = 1
0718                                                                 >  *            END
0719                                                                 >  *         NEXT C
0720                                                                 >  *         IF GOOD.WHSE THEN

0750 CASE 1                                                             CASE 1
0751 DISP.PROD = EST.PRODS<1,I>                                         DISP.PROD = EST.PRODS<1,I>
0752 GOSUB 85000                                                        GOSUB 85000
0753 IF ESTAT THEN GOTO 99001                                           IF ESTAT THEN GOTO 99001
0754 END CASE                                                           END CASE
0755                                                                 >  *T22154 ^
0756 IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN                          IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
0757 IWH.ID=CONO:EST.PRODS<1,I>:"!":WHSE                             |  MATREAD IWH.REC FROM INV.WHSE,CONO:EST.PRODS<1,I>:"!":WHSE E
0758 GOSUB GET.UNIT.PR                                               |  CST.CNT = COUNT(IWH.COST.FI,VM) + (IWH.COST.FI # '')
0759                                                                 >  BEGIN CASE

0760                                                                 >  *T22154 v
0761                                                                 >  *        CASE CATG.COST.TYPE = 'FI'
0762                                                                 >  *          UNIT.PR = IWH.COST.FI<1,CST.CNT>
0763                                                                 >  *        CASE CATG.COST.TYPE = 'LC'
0764                                                                 >  CASE CO.JES.PARAM<1,11> = 'R'
0765                                                                 >  *T22154 ^
0766                                                                 >  UNIT.PR = IWH.COST.FI<1,CST.CNT>

0767                                                                 >  *T22154 v        CASE CATG.COST.TYPE = 'SD'
0768                                                                 >  CASE CO.JES.PARAM<1,11> = 'S'
0769                                                                 >  UNIT.PR = IWH.STD.COST
0770                                                                 >  *T22154 v        CASE CATG.COST.TYPE = 'AV'
0771                                                                 >  CASE CO.JES.PARAM<1,11> = 'A'
0772                                                                 >  UNIT.PR = IWH.AVG.COST
0773                                                                 >  *T22154 v        CASE CATG.COST.TYPE = 'LT'

0774                                                                 >  CASE CO.JES.PARAM<1,11> = 'L'
0775                                                                 >  UNIT.PR = IWH.LIST.COST
0776                                                                 >  CASE 1
0777                                                                 >  UNIT.PR = 0
0778                                                                 >  END CASE
0779 JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")           JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0780 FND = 0                                                            FND = 0

0781 FOR JM = 1 TO JRM.CNT UNTIL FND                                    FOR JM = 1 TO JRM.CNT UNTIL FND
0782 IF JOB.RESV.MATL<1,JM> = EST.PRODS<1,I> AND JOB.RESV.WHSE<1,JM     IF JOB.RESV.MATL<1,JM> = EST.PRODS<1,I> AND JOB.RESV.WHSE<1,
0783 SAVE.INV.JS.REC<JM,2> = UNIT.PR                                    SAVE.INV.JS.REC<JM,2> = UNIT.PR
0784 YEOW.QTY = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)     YEOW.QTY = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .
0785 SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY           SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY
0786                                                                 >  *** IF ICR.CNV = "MD0" THEN
0787                                                                 >  *** SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + INT(((ES
0788                                                                 >  *** END ELSE
0789                                                                 >  *** SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + INT((((E
0790                                                                 >  *** END

0802 JOB.RESV.AMT<1,JRM.CNT> = 0                                        JOB.RESV.AMT<1,JRM.CNT> = 0
0803 JOB.USED.AMT<1,JRM.CNT> = 0                                        JOB.USED.AMT<1,JRM.CNT> = 0
0804 *             SAVE.INV.JS.REC<JRM.CNT,1> = TODAY + 1 ;* T24675     *             SAVE.INV.JS.REC<JRM.CNT,1> = TODAY + 1 ;* T246
0805 SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR                               SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR
0806 SAVE.INV.JS.REC<JRM.CNT,3> = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.     SAVE.INV.JS.REC<JRM.CNT,3> = INT(((EST.QTYS<1,I>/ICR.MT1)*IC
0807                                                                 >  *** IF ICR.CNV = "MD0" THEN
0808                                                                 >  *** SAVE.INV.JS.REC<JRM.CNT,3> = INT(((EST.QTYS<1,I>/ICR.MT1
0809                                                                 >  *** END ELSE
0810                                                                 >  *** SAVE.INV.JS.REC<JRM.CNT,3> = INT((((EST.QTYS<1,I>*100)/I
0811                                                                 >  *** END

0812 END                                                                END
0813 END                                                                END
0814                                                                 >  *T22154 v
0815                                                                 >  *         END ELSE
0816                                                                 >  *            ERRMSG = EST.PRODS<1,I> :" WAREHOUSE DIVISION D
0817                                                                 >  *            GOSUB 90000
0818                                                                 >  *         END
0819                                                                 >  *T22154 ^
0820 NEXT I                                                             NEXT I

0890 END ELSE                                                           END ELSE
0891 RELEASE ESTIMATE, CONO:EST.NO                                      RELEASE ESTIMATE, CONO:EST.NO
0892 END                                                                END
0893 END                                                                END
0894 MAT EST.PAR = ""                                                   MAT EST.PAR = ""
0895                                                                 >  RETURN
0896 *                                                                  *
0897 *---- EXTRACT JOB FOR SCHEDULING                                   *---- EXTRACT JOB FOR SCHEDULING
0898 *                                                                  *
0899 3500 *                                                             3500 *

0899 3500 *                                                             3500 *
0900 IF EST.NO # "" THEN                                                IF EST.NO # "" THEN
0901 MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""         MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
0902 IF CO.PSS = "Y" THEN                                               IF CO.PSS = "Y" THEN
0903 OPEN "","JOB.SCHED" TO JOB.SCHED THEN                              OPEN "","JOB.SCHED" TO JOB.SCHED THEN
0904                                                                 >  *T27413 v
0905                                                                 >  BEGIN CASE
0906                                                                 >  CASE RE.SCHEDULE = 'Y'
0907                                                                 >  TYP=8;X=0;Y=21;MAXL=1
0908                                                                 >  VALDAT = 'Y':VM:'N'

0909                                                                 >  PMSG = "Re-extract this job for scheduling (Y/N):"
0910                                                                 >  CALL EDIT.SUB
0911                                                                 >  P_X = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0912                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0913                                                                 >  IF VALUE = "Y" THEN
0914                                                                 >  PARAM = ""
0915                                                                 >  PARAM<1,1> = CONO

0916                                                                 >  PARAM<1,2> = JOB.NO
0917                                                                 >  PARAM<1,3> = "N"
0918                                                                 >  PARAM<1,4> = "R"
0919                                                                 >  CALL PERFORM.PROG("JOB.SCHED.EXTRACT",PARAM)
0920                                                                 >  END
0921                                                                 >  CASE 1
0922                                                                 >  *T27413 ^

0923 MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE                   MATREAD JBS.REC FROM JOB.SCHED, CONO:JOB.NO ELSE
0924 * T22896                                                        <  
0925 BEGIN CASE                                                         BEGIN CASE 
0926 CASE JOB.FLAG = "P"                                                CASE JOB.FLAG = "P"
0927 TYP=8;X=0;Y=21;MAXL=1;DEFAULT=""                                |  TYP=8;X=0;Y=21;MAXL=1
0928 VALDAT = 'Y':VM:'N'   ;*T22332                                     VALDAT = 'Y':VM:'N'   ;*T22332
0929 PMSG="Extract this job for scheduling (Y/N):"                      PMSG="Extract this job for scheduling (Y/N):"
0930 CALL EDIT.SUB                                                      CALL EDIT.SUB

0933 IF VALUE = "Y" THEN                                                IF VALUE = "Y" THEN
0934 PARAM = ""                                                         PARAM = ""
0935 PARAM<1,1> = CONO                                                  PARAM<1,1> = CONO
0936 PARAM<1,2> = JOB.NO                                                PARAM<1,2> = JOB.NO
0937 PARAM<1,4> = JOB.FLAG ;* JOB.SCH.FLAG                              PARAM<1,4> = JOB.FLAG ;* JOB.SCH.FLAG
0938 ;*T27115  TYP = 8;X = 0;Y = 21                                  <  
0939 ;*T27115  VALDAT = 'Y':VM:'N' ;*T22332                          <  
0940 ;*T27115  PMSG = "Update job schedule list (Y/N) "              <  
0941 ;*T27115  CALL EDIT.SUB                                         <  
0942 ;*T27115  P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"           <  

0943 ;*T27115  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                 <  
0944 ;*T27115  PARAM<1,3> = VALUE                                    <  
0945 PARAM<1,5> = GUIFORM;* T21177                                      PARAM<1,5> = GUIFORM;* T21177
0946                                                                 >  *T27718 v
0947                                                                 >  TYP = 8 ; X = 0 ; Y = 21
0948                                                                 >  VALDAT = 'Y':VM:'N'
0949                                                                 >  PMSG = "Update job schedule list (Y/N) "

0950                                                                 >  CALL EDIT.SUB
0951                                                                 >  P_X = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
0952                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0953                                                                 >  PARAM<1,3> = VALUE
0954                                                                 >  *T27718 ^
0955 CALL PERFORM.PROG("JOB.SCHED.EXTRACT",PARAM)                       CALL PERFORM.PROG("JOB.SCHED.EXTRACT",PARAM)
0956 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                        P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"

0970 MATWRITE JBS.REC ON JOB.SCHED, CONO:JOB.NO                         MATWRITE JBS.REC ON JOB.SCHED, CONO:JOB.NO
0971 END ELSE                                                           END ELSE
0972 RELEASE JOB.SCHED, CONO:JOB.NO                                     RELEASE JOB.SCHED, CONO:JOB.NO
0973 END                                                                END
0974 END CASE                                                           END CASE
0975 *T22896                                                         <  
0976 END                                                                END
0977                                                                 >  *T27413 v
0978                                                                 >  END CASE
0979                                                                 >  *T27413 ^

1042 FOR I = 1 TO PROD.CNT                                              FOR I = 1 TO PROD.CNT
1043 MATREAD INV.REC FROM INVENTORY,CONO:OLD.PRODS<1,I> ELSE MAT IN     MATREAD INV.REC FROM INVENTORY,CONO:OLD.PRODS<1,I> ELSE MAT
 
1044 GOSUB 80000                                                        GOSUB 80000
1045 IF CASE1.FLAG THEN OLD.QTYS<1,I> = OLD.QTYS<1,I> * 100             IF CASE1.FLAG THEN OLD.QTYS<1,I> = OLD.QTYS<1,I> * 100
1046 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC     MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.R
1047                                                                 >  *T22154 v
1048                                                                 >  *  WHSE = INV.WHSE.CODE<1,1>
1049 MLOC = 0     ;*C33301                                              MLOC = 0     ;*C33301
1050 IF INDEX(JOB.RESV.MATL,OLD.PRODS<1,I>,1) = 1 THEN                  IF INDEX(JOB.RESV.MATL,OLD.PRODS<1,I>,1) = 1 THEN
1051 LOCATE OLD.PRODS<1,I> IN JOB.RESV.MATL<1>,1 SETTING MLOC THEN      LOCATE OLD.PRODS<1,I> IN JOB.RESV.MATL<1>,1 SETTING MLOC THE

1086 DISP.PROD = OLD.PRODS<1,I>                                         DISP.PROD = OLD.PRODS<1,I>
1087 GOSUB 85000                                                        GOSUB 85000
1088 IF ESTAT THEN GOTO 99001                                           IF ESTAT THEN GOTO 99001
1089 END CASE                                                           END CASE
1090 END                                                                END
1091                                                                 >  *T22154 ^
1092 IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN                          IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
1093 IWH.ID=CONO:OLD.PRODS<1,I>:"!":WHSE                             |  MATREAD IWH.REC FROM INV.WHSE,CONO:OLD.PRODS<1,I>:"!":WHSE E
1094 GOSUB GET.UNIT.PR                                               |  CST.CNT = COUNT(IWH.COST.FI,VM) + (IWH.COST.FI # '')
1095                                                                 >  BEGIN CASE

1096                                                                 >  *T22154 v
1097                                                                 >  *      CASE CATG.COST.TYPE = 'FI'
1098                                                                 >  *        UNIT.PR = IWH.COST.FI<1,CST.CNT>
1099                                                                 >  *      CASE CATG.COST.TYPE = 'LC'
1100                                                                 >  CASE CO.JES.PARAM<1,11> = 'R'
1101                                                                 >  *T22154 ^
1102                                                                 >  UNIT.PR = IWH.COST.FI<1,CST.CNT>

1103                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'SD'
1104                                                                 >  CASE CO.JES.PARAM<1,11> = 'S'
1105                                                                 >  UNIT.PR = IWH.STD.COST
1106                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'AV'
1107                                                                 >  CASE CO.JES.PARAM<1,11> = 'A'
1108                                                                 >  UNIT.PR = IWH.AVG.COST
1109                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'LT'

1110                                                                 >  CASE CO.JES.PARAM<1,11> = 'L'
1111                                                                 >  UNIT.PR = IWH.LIST.COST
1112                                                                 >  CASE 1
1113                                                                 >  UNIT.PR = 0
1114                                                                 >  END CASE
1115 JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")           JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
1116 FND = 0                                                            FND = 0

1117 FOR JM = 1 TO JRM.CNT UNTIL FND                                    FOR JM = 1 TO JRM.CNT UNTIL FND
1118 IF JOB.RESV.MATL<1,JM> = OLD.PRODS<1,I> AND JOB.RESV.WHSE<1,JM     IF JOB.RESV.MATL<1,JM> = OLD.PRODS<1,I> AND JOB.RESV.WHSE<1,
1119                                                                 >  *                  IF JOB.RESV.QTY<1,JM> = 0 AND JOB.USED.QT
1120 SAVE.INV.JS.REC<JM,2> = UNIT.PR                                    SAVE.INV.JS.REC<JM,2> = UNIT.PR
1121 YEOW.QTY = INT(((OLD.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)     YEOW.QTY = INT(((OLD.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .
1122 IF SAVE.INV.JS.REC<JM,3> GE YEOW.QTY THEN                          IF SAVE.INV.JS.REC<JM,3> GE YEOW.QTY THEN
1123 SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> - YEOW.QTY           SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> - YEOW.QTY
1124 END ELSE                                                           END ELSE
1125 SAVE.INV.JS.REC<JM,3> = 0                                          SAVE.INV.JS.REC<JM,3> = 0

1126 END                                                                END
1127                                                                 >  *                  END
1128 FND = 1                                                            FND = 1
1129 END                                                                END
1130 NEXT JM                                                            NEXT JM
1131 END                                                                END
1132 NEXT I                                                             NEXT I
1133 RETURN                                                             RETURN

1183 NEW.QTYS<1,X> = NEW.QTYS<1,X> + QTY                                NEW.QTYS<1,X> = NEW.QTYS<1,X> + QTY
1184 END                                                                END
1185 NEXT WB                                                            NEXT WB
1186 NEXT CP                                                            NEXT CP
1187 IF ROLL.LABEL THEN                                                 IF ROLL.LABEL THEN
1188                                                                 >  *     IF EST.RL.LAM = 'Y' THEN
1189                                                                 >  *        IF EST.RL.LAM.INV # "" THEN
1190                                                                 >  *           PROD = EST.RL.LAM.INV
1191                                                                 >  *           QTY = FIELD(EST.RL.LAM.MSI,"!",QP)
1192                                                                 >  *           WIDTH = EST.RL.LAM.WIDTH

1193                                                                 >  *           GOSUB 70000
1194                                                                 >  *           LOCATE PROD IN NEW.PRODS<1>,1 SETTING X ELSE NUL
1195                                                                 >  *           NEW.PRODS<1,X> = PROD
1196                                                                 >  *           NEW.QTYS<1,X> = NEW.QTYS<1,X> + QTY
1197                                                                 >  *        END
1198                                                                 >  *     END
1199 END                                                                END

1201 FOR I = 1 TO PROD.CNT                                              FOR I = 1 TO PROD.CNT
1202 MATREAD INV.REC FROM INVENTORY,CONO:NEW.PRODS<1,I> ELSE MAT IN     MATREAD INV.REC FROM INVENTORY,CONO:NEW.PRODS<1,I> ELSE MAT 
1203 GOSUB 80000                                                        GOSUB 80000
1204 IF CASE1.FLAG THEN NEW.QTYS<1,I> = NEW.QTYS<1,I> * 100             IF CASE1.FLAG THEN NEW.QTYS<1,I> = NEW.QTYS<1,I> * 100
1205 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC     MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.R
1206                                                                 >  *T22154 v
1207                                                                 >  *  WHSE = INV.WHSE.CODE<1,1>
1208 WCNT = DCOUNT(INV.WHSE.CODE,VM)                                    WCNT = DCOUNT(INV.WHSE.CODE,VM)
1209 DVCNT=0;WPTR=0                                                     DVCNT=0;WPTR=0
1210 GNCNT=0;GPTR=0                                                     GNCNT=0;GPTR=0

1237 CASE 1                                                             CASE 1
1238 DISP.PROD = NEW.PRODS<1,I>                                         DISP.PROD = NEW.PRODS<1,I>
1239 GOSUB 85000                                                        GOSUB 85000
1240 IF ESTAT THEN GOTO 99001                                           IF ESTAT THEN GOTO 99001
1241 END CASE                                                           END CASE
1242                                                                 >  *T22154 ^
1243 IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN                          IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
1244 IWH.ID=CONO:NEW.PRODS<1,I>:"!":WHSE                             |  MATREAD IWH.REC FROM INV.WHSE,CONO:NEW.PRODS<1,I>:"!":WHSE E
1245 GOSUB GET.UNIT.PR                                               |  CST.CNT = COUNT(IWH.COST.FI,VM) + (IWH.COST.FI # '')
1246                                                                 >  BEGIN CASE

1247                                                                 >  *T22154 v
1248                                                                 >  *      CASE CATG.COST.TYPE = 'FI'
1249                                                                 >  *        UNIT.PR = IWH.COST.FI<1,CST.CNT>
1250                                                                 >  *      CASE CATG.COST.TYPE = 'LC'
1251                                                                 >  CASE CO.JES.PARAM<1,11> = 'R'
1252                                                                 >  *T22154 ^
1253                                                                 >  UNIT.PR = IWH.COST.FI<1,CST.CNT>

1254                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'SD'
1255                                                                 >  CASE CO.JES.PARAM<1,11> = 'S'
1256                                                                 >  UNIT.PR = IWH.STD.COST
1257                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'AV'
1258                                                                 >  CASE CO.JES.PARAM<1,11> = 'A'
1259                                                                 >  UNIT.PR = IWH.AVG.COST
1260                                                                 >  *T22154 v      CASE CATG.COST.TYPE = 'LT'

1261                                                                 >  CASE CO.JES.PARAM<1,11> = 'L'
1262                                                                 >  UNIT.PR = IWH.LIST.COST
1263                                                                 >  CASE 1
1264                                                                 >  UNIT.PR = 0
1265                                                                 >  END CASE
1266 JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")           JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
1267 FND = 0                                                            FND = 0

1268 FOR JM = 1 TO JRM.CNT UNTIL FND                                    FOR JM = 1 TO JRM.CNT UNTIL FND
1269 IF JOB.RESV.MATL<1,JM> = NEW.PRODS<1,I> AND JOB.RESV.WHSE<1,JM     IF JOB.RESV.MATL<1,JM> = NEW.PRODS<1,I> AND JOB.RESV.WHSE<1,
1270                                                                 >  *                  IF JOB.RESV.QTY<1,JM> = 0 AND JOB.USED.QT
1271 SAVE.INV.JS.REC<JM,2> = UNIT.PR                                    SAVE.INV.JS.REC<JM,2> = UNIT.PR
1272 YEOW.QTY = INT(((NEW.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)     YEOW.QTY = INT(((NEW.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .
1273 SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY           SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY
1274                                                                 >  *                  END
1275 FND = 1                                                            FND = 1
1276 END                                                                END

1283 JOB.RESV.QTY<1,JRM.CNT> = 0                                        JOB.RESV.QTY<1,JRM.CNT> = 0
1284 JOB.USED.QTY<1,JRM.CNT> = 0                                        JOB.USED.QTY<1,JRM.CNT> = 0
1285 JOB.ALOC.AMT<1,JRM.CNT> = 0                                        JOB.ALOC.AMT<1,JRM.CNT> = 0
1286 JOB.RESV.AMT<1,JRM.CNT> = 0                                        JOB.RESV.AMT<1,JRM.CNT> = 0
1287 JOB.USED.AMT<1,JRM.CNT> = 0                                        JOB.USED.AMT<1,JRM.CNT> = 0
1288                                                                 >  *           SAVE.INV.JS.REC<JRM.CNT,1> = TODAY + 1 ;* T24675
1289 SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR                               SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR
1290 SAVE.INV.JS.REC<JRM.CNT,3> = INT(((NEW.QTYS<1,I>/ICR.MT1)*ICR.     SAVE.INV.JS.REC<JRM.CNT,3> = INT(((NEW.QTYS<1,I>/ICR.MT1)*IC
1291 END                                                                END
1292 END                                                                END

1314 OPV = ESTD.OPV<1,T>                                                OPV = ESTD.OPV<1,T>
1315 PROD = ESTD.OPV<1,T>                                               PROD = ESTD.OPV<1,T>
1316 IF MT.TYPE="S" OR MT.TYPE = "R" OR MT.TYPE = "L" THEN              IF MT.TYPE="S" OR MT.TYPE = "R" OR MT.TYPE = "L" THEN
1317 WCNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1                      WCNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1
1318 FOR WP = 1 TO WCNT                                                 FOR WP = 1 TO WCNT
1319                                                                 >  *T25623 v
1320                                                                 >  *                 IF PROD = EST.PROD.OS.PROD<1,COMP,WP> AND 
1321 IF ESTD.DESC<1,T> = EST.PROD.OS.DESC<1,COMP,WP> AND EST.PROD.I     IF ESTD.DESC<1,T> = EST.PROD.OS.DESC<1,COMP,WP> AND EST.PROD
1322                                                                 >  *T25623 ^
1323 PROD = EST.PROD.INV.ID<1,COMP,WP>                                  PROD = EST.PROD.INV.ID<1,COMP,WP>

1440 ESTJ.MT.QTY = INSERT(ESTJ.MT.QTY,1,DFND,0,"")                      ESTJ.MT.QTY = INSERT(ESTJ.MT.QTY,1,DFND,0,"")
1441 ESTJ.MT.TYPE = INSERT(ESTJ.MT.TYPE,1,DFND,0,"")                    ESTJ.MT.TYPE = INSERT(ESTJ.MT.TYPE,1,DFND,0,"")
1442 ESTJ.MT.DCOST = INSERT(ESTJ.MT.DCOST,1,DFND,0,"")                  ESTJ.MT.DCOST = INSERT(ESTJ.MT.DCOST,1,DFND,0,"")
1443 ESTJ.MT.COST = INSERT(ESTJ.MT.COST,1,DFND,0,"")                    ESTJ.MT.COST = INSERT(ESTJ.MT.COST,1,DFND,0,"")
1444 ESTJ.MT.SALE = INSERT(ESTJ.MT.SALE,1,DFND,0,"")                    ESTJ.MT.SALE = INSERT(ESTJ.MT.SALE,1,DFND,0,"")
1445                                                                 >  *T25629
1446 ESTJ.MT.PROD.CLS = INSERT(ESTJ.MT.PROD.CLS,1,DFND,0,"")            ESTJ.MT.PROD.CLS = INSERT(ESTJ.MT.PROD.CLS,1,DFND,0,"")
1447                                                                 >  *T25629
1448 END                                                                END
1449 ESTJ.MT.DEPT<1,DFND> = CCTR.DEPT                                   ESTJ.MT.DEPT<1,DFND> = CCTR.DEPT

1450 ESTJ.MT.CCTR<1,DFND> = ESTD.CCTR<1,T>                              ESTJ.MT.CCTR<1,DFND> = ESTD.CCTR<1,T>
1451 ESTJ.MT.OPER<1,DFND> = OPV                                         ESTJ.MT.OPER<1,DFND> = OPV
1452 ESTJ.MT.PROD<1,DFND> = PROD                                        ESTJ.MT.PROD<1,DFND> = PROD
1453 ESTJ.MT.DESC<1,DFND> = ESTD.DESC<1,T>                              ESTJ.MT.DESC<1,DFND> = ESTD.DESC<1,T>
1454 ESTJ.MT.PLINE<1,DFND> = ESTD.CODE<1,T>                             ESTJ.MT.PLINE<1,DFND> = ESTD.CODE<1,T>
1455                                                                 >  *T25639
1456 ESTJ.MT.PROD.CLS<1,DFND> = ESTD.TYPE<1,T>                          ESTJ.MT.PROD.CLS<1,DFND> = ESTD.TYPE<1,T>
1457                                                                 >  *T25639
1458 MATREAD CATG.REC FROM CATEGORY, CONO:ESTD.CODE<1,T> ELSE MAT C     MATREAD CATG.REC FROM CATEGORY, CONO:ESTD.CODE<1,T> ELSE MA
T
1459 ESTJ.MT.MLINE<1,DFND> = CATG.MAJ.LINE                              ESTJ.MT.MLINE<1,DFND> = CATG.MAJ.LINE

1471 ESTJ.MT.TYPE<1,DFND> = "EA"                                        ESTJ.MT.TYPE<1,DFND> = "EA"
1472 CASE MT.TYPE = "B" OR MT.TYPE = "X"                                CASE MT.TYPE = "B" OR MT.TYPE = "X"
1473 ESTJ.MT.TYPE<1,DFND> = "EA"                                        ESTJ.MT.TYPE<1,DFND> = "EA"
1474 CASE CATG.TYPE = "I" OR MT.TYPE = "I"                              CASE CATG.TYPE = "I" OR MT.TYPE = "I"
1475 ESTJ.MT.TYPE<1,DFND> = "LBS"                                       ESTJ.MT.TYPE<1,DFND> = "LBS"
1476                                                                 >  *T21132
1477 CASE CATG.TYPE = "PC"                                              CASE CATG.TYPE = "PC"
1478 ESTJ.MT.TYPE<1,DFND> = "MSI"                                       ESTJ.MT.TYPE<1,DFND> = "MSI"
1479                                                                 >  *T21132
1480 CASE CATG.TYPE = "L" OR MT.TYPE = "R"                              CASE CATG.TYPE = "L" OR MT.TYPE = "R"

1681 *---- CONVERT ROLL LABEL MSI TO STOCKING UNIT                      *---- CONVERT ROLL LABEL MSI TO STOCKING UNIT
1682 *                                                                  *
1683 70000 *                                                            70000 *
1684 MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = ''     MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = 
1685 GOSUB 80000                                                        GOSUB 80000
1686                                                                 >  *   IF INV.PAP.TYPE = "REGULAR" THEN
1687                                                                 >  *     NQTY = QTY*10
1688                                                                 >  *   END ELSE
1689 NQTY = QTY                                                         NQTY = QTY
1690                                                                 >  *     NQTY = INT(NQTY/1000 + .5) * 1000

1691                                                                 >  *   END
1692 ***************                                                    ***************
1693 ***************   NEED TO USE EST WIDTH FROM PROD DEF SCREEN       ***************   NEED TO USE EST WIDTH FROM PROD DEF SCREEN
1694 *                                                                  *
1695 BEGIN CASE                                                         BEGIN CASE
1696 CASE INV.UNIT<1,2> = "MSI"                                         CASE INV.UNIT<1,2> = "MSI"
1697 CASE INV.UNIT<1,2> = "FT"                                          CASE INV.UNIT<1,2> = "FT"

1698                                                                 >  *        IF INV.PAP.WIDTH + 0 # 0 THEN
1699                                                                 >  *           NQTY = (NQTY * 1000) / (12 * OCONV(INV.PAP.WIDTH
1700 IF WIDTH + 0 # 0 THEN                                              IF WIDTH + 0 # 0 THEN
1701 NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))                   NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))
1702 END ELSE                                                           END ELSE
1703 NQTY = 0                                                           NQTY = 0
1704 END                                                                END

1705 CASE INV.UNIT<1,2> = "PC"                                          CASE INV.UNIT<1,2> = "PC"
1706                                                                 >  *        IF INV.PAP.WIDTH + 0 # 0 THEN
1707                                                                 >  *           NQTY = (NQTY * 1000) / (10 * OCONV(INV.PAP.WIDTH
1708 IF WIDTH + 0 # 0 THEN                                              IF WIDTH + 0 # 0 THEN
1709 NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))                   NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))
1710 END ELSE                                                           END ELSE
1711 NQTY = 0                                                           NQTY = 0
1712 END                                                                END

1731 ICR.DV1 = INV.PAP.WIDTH/100                                        ICR.DV1 = INV.PAP.WIDTH/100
1732 ICR.MT1 = 100                                                      ICR.MT1 = 100
1733 ICR.DV2 = 12                                                       ICR.DV2 = 12
1734 ICR.CNV = "MD0"                                                    ICR.CNV = "MD0"
1735 CASE 1                                                             CASE 1
1736                                                                 >  *        ICR.DV1 = 1000
1737 ICR.DV1 = 10                                                       ICR.DV1 = 10
1738 ICR.MT1 = 1                                                        ICR.MT1 = 1
1739 ICR.DV2 = 1                                                        ICR.DV2 = 1
1740 ICR.CNV = "MD2"                                                    ICR.CNV = "MD2"

1739 ICR.DV2 = 1                                                        ICR.DV2 = 1
1740 ICR.CNV = "MD2"                                                    ICR.CNV = "MD2"
1741 CASE1.FLAG = "Y"                                                   CASE1.FLAG = "Y"
1742 END CASE                                                           END CASE
1743 RETURN                                                             RETURN
1744                                                                 >  *T22154 v
1745 *                                                                  *
1746 *---- GET WAREHOUSE                                                *---- GET WAREHOUSE
1747 *                                                                  *
1748 85000 *                                                            85000 *

1774 END                                                                END
1775 WHSE = VALUE                                                       WHSE = VALUE
1776 85999*                                                             85999* 
1777 RETURN                                                             RETURN
1778 *                                                                  *
1779 *****************                                               <  
1780 GET.UNIT.PR:                                                    <  
1781 *****************                                               <  
1782 *                                                               <  
1783 MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE  MAT IWH.REC=''       <  

1784 BEGIN CASE                                                      <  
1785 CASE CO.JES.PARAM<1,11> = 'R'                                   <  
1786 DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''                      <  
1787 ERR.FLG='';ERRMSG=''                                            <  
1788 CALL GET.LAST.COST (IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.F  <  
1789 IF ERR.FLG='' THEN                                              <  
1790 UNIT.PR=LAST.PRICE                                              <  

1791 END ELSE                                                        <  
1792 *C40294 v                                                       <  
1793 *           GOSUB 90000                                         <  
1794 *           GOTO 99001                                          <  
1795 UNIT.PR = 0                                                     <  
1796 *C40294 ^                                                       <  
1797 END                                                             <  

1798 CASE CO.JES.PARAM<1,11> = 'S'                                   <  
1799 UNIT.PR = IWH.STD.COST                                          <  
1800 CASE CO.JES.PARAM<1,11> = 'A'                                   <  
1801 UNIT.PR = IWH.AVG.COST                                          <  
1802 CASE CO.JES.PARAM<1,11> = 'L'                                   <  
1803 UNIT.PR = IWH.LIST.COST                                         <  
1804 CASE 1                                                          <  

1805 UNIT.PR = 0                                                     <  
1806 END CASE                                                        <  
1807 RETURN                                                          <  
1808 *                                                               <  
1809 *---- ERROR ROUTINE                                                *---- ERROR ROUTINE
1810 *                                                                  *
1811 90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN

1812                                                                 >  * 90000 *
1813                                                                 >  *    PRINT @(0,23):CL:ERRMSG:
1814                                                                 >  *    INPUT REPLY,1:
1815                                                                 >  *    PRINT @(0,23):CL:
1816                                                                 >  *    RETURN
1817                                                                 >  *
1818 *---- END OF PROGRAM                                               *---- END OF PROGRAM


JCSBP/JOB.CATEGORY.MAINT                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.CATEGORY.MAINT
Printed for thompson at 06/28/2006 04:41:55PM

0003 *   SYSTEM       - CBA                                             *   SYSTEM       - CBA
0004 *   PROGRAM      - JOB.CATEGORY.MAINT                              *   PROGRAM      - JOB.CATEGORY.MAINT
0005 *   BY           - DIANE TOVAR                                     *   BY           - DIANE TOVAR
0006 *   DATE         - 05/7/96                                         *   DATE         - 05/7/96
0007 *   DESCRIPTION  - JOB CATEGORY MAINTENANCE                        *   DESCRIPTION  - JOB CATEGORY MAINTENANCE
0008 *T26126 adelgado 03/07/2002 * Implement the LOCKED clause for   |  *T23473 rick 04/07/1999 * Modify screen to allow tracking of
0009                                                                 >  *                         and DCOGS acct numbers for
0010                                                                 >  *                         Labor,Matl,OSP,Shipping,Misc and a
0011                                                                 >  *                         for VOH,FOH and S&A acct numbers t
0012                                                                 >  *                         new fields on the screen

0013                                                                 >  *T25131 alex 05/15/2000 * Mods to add a field for Plant Code
0014 *ENDDOC                                                            *ENDDOC
0015 **************************************************************     ************************************************************
0016 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0017 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0018 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0019 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM

0020 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0021 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0022                                                                 >  *COPY>PMC.CPYLIB>PLANT.CODE           ;*T25131
0023                                                                 >  *T23743 v
0024                                                                 >  *COPY>PMC.CPYLIB>COA
0025                                                                 >  *COPY>PMC.CPYLIB>SALES.CODE
0026                                                                 >  *COPY>CPYLIB>GEN.XREF.SUB
0027                                                                 >  *COPY>JCS.CPYLIB>JOB.CATEGORY
0028                                                                 >  *COPY>CBN.CPYLIB>JOB.CATEGORY.ADD

0029                                                                 >  *T23473 ^ add two cpylibs to control data for JOB.CATEGORY a
0030                                                                 >  *         files
0031                                                                 >  *
0032 SYS.TYPE = 1                                                       SYS.TYPE = 1
0033 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0034 MAT FILE.VARS = ''                                                 MAT FILE.VARS = ''
0035 ***  OPEN FILES                                                    ***  OPEN FILES

0034 MAT FILE.VARS = ''                                                 MAT FILE.VARS = ''
0035 ***  OPEN FILES                                                    ***  OPEN FILES
0036 OPEN '','JOB.CATEGORY' TO JOB.CATEGORY ELSE ERRMSG = 'JOB.CATE     OPEN '','JOB.CATEGORY' TO JOB.CATEGORY ELSE ERRMSG = 'JOB.CA
0037 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSI     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MIS
0038 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSI     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MIS
0039 OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS   |  *T23473      OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG 
0040                                                                 >  *T23473 v
0041                                                                 >  OPEN "JOB.CATEGORY.ADD" TO JOB.CATEGORY.ADD ELSE
0042                                                                 >  ERRMSG = "JOB.CATEGORY.ADD FILE IS MISSING";GOTO 93000
0043                                                                 >  END

0044                                                                 >  OPEN "COA" TO COA ELSE
0045                                                                 >  ERRMSG = "COA FILE IS MISSING";GOTO 93000
0046                                                                 >  END
0047                                                                 >  OPEN "SALES.CODE" TO SALES.CODE ELSE
0048                                                                 >  ERRMSG = "SALES.CODE FILE IS MISSING";GOTO 93000
0049                                                                 >  END
0050                                                                 >  *T25131 v

0051                                                                 >  OPEN "PLANT.CODE" TO PLANT.CODE ELSE
0052                                                                 >  ERRMSG = "PLANT.CODE FILE IS MISSING";GOTO 93000
0053                                                                 >  END
0054                                                                 >  OPEN "PLANT.CODE.XREF" TO PLANT.CODE.XREF ELSE
0055                                                                 >  ERRMSG = "PLANT.CODE.XREF FILE IS MISSING";GOTO 93000
0056                                                                 >  END
0057                                                                 >  *T25131 ^

0058                                                                 >  OPEN '','CBN.SCREENS' TO M.SCREENS ELSE ERRMSG = 'CBN.SCREEN
0059                                                                 >  OPEN "PREFIX" TO PREFIX ELSE
0060                                                                 >  ERRMSG = "PREFIX FILE IS MISSING";GOTO 93000
0061                                                                 >  END
0062                                                                 >  OPEN "XREF.DATA" TO XREF.DATA ELSE
0063                                                                 >  ERRMSG = "XREF.DATA FILE IS MISSING";GOTO 93000
0064                                                                 >  END

0065                                                                 >  
0066                                                                 >  *T23473 ^      
0067 *---- GET COMPANY NUMBER                                           *---- GET COMPANY NUMBER
0068 *                                                                  *
0069 CONO = ''                                                          CONO = ''
0070 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0071 IF CONO = 'END' THEN GOTO 99999                                    IF CONO = 'END' THEN GOTO 99999

0072 *                                                                  *
0073                                                                 >  UNK= "Unknown"  ;*T23473
0074 EQU CODE.DESC TO CODE.REC<1>                                       EQU CODE.DESC TO CODE.REC<1>
0075 MAT EDIT.COM.DRIVER = ''                                           MAT EDIT.COM.DRIVER = ''
0076                                                                 >  MAT GEN.XREF.REC = ""
0077                                                                 >  GXR.CO = CONO
0078 ECD.SCRN.CNT = 1                                                   ECD.SCRN.CNT = 1
0079 ECD.SCRN.NAME<1> = 'JOB.CATEGORY.MAINT'                            ECD.SCRN.NAME<1> = 'JOB.CATEGORY.MAINT'

0091 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0092 BEGIN CASE                                                         BEGIN CASE
0093 CASE ECD.RET.VALUE = 'END'                                         CASE ECD.RET.VALUE = 'END'
0094 MORE = 0                                                           MORE = 0
0095 CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''                   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
0096 * T26126 v                                                      <  
0097 READU DUMMY FROM JOB.CATEGORY, CONO:ECD.RET.VALUE LOCKED        <  
0098 ERRMSG = 'JOB CATEGORY record is locked by user - ':GETUSERNAM  <  
0099 GOSUB 91000;MORE = 2;CONTINUE                                   <  
0100 END ELSE NULL                                                   <  

0101 * T26126 ^                                                      <  
0102 JOB.CATG.ID = ECD.RET.VALUE                                        JOB.CATG.ID = ECD.RET.VALUE
0103 CODE.REC = ECD.VALDAT.ITEM                                         CODE.REC = ECD.VALDAT.ITEM
0104 SCV.REC(2) = CODE.DESC                                             SCV.REC(2) = CODE.DESC
0105                                                                 >  *T23473 v
0106                                                                 >  MATREADU JCATG.ADD.REC FROM JOB.CATEGORY.ADD,CONO:JOB.CATG.I
0107                                                                 >  MAT JCATG.ADD.REC = ""

0108                                                                 >  END
0109                                                                 >  GOSUB STUFF.FIELDS.IN.SCREEN
0110                                                                 >  *T23473 ^
0111 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0112 CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''                   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
0113 JOB.CATG.ID = ECD.RET.VALUE                                        JOB.CATG.ID = ECD.RET.VALUE
0114 GOSUB 1100                                                      |  *T23473 v

0115 IF ECD.RET.VALUE = 'END' THEN MORE = 2                          |  *               GOSUB 1100
0116                                                                 >  *               IF ECD.RET.VALUE = 'END' THEN MORE = 2
0117                                                                 >  *                    walk thru each of the fields
0118                                                                 >  PTR = 1
0119                                                                 >  LOOP
0120                                                                 >  *T25131 v
0121                                                                 >  * UNTIL PTR > 11 DO

0122                                                                 >  * ON PTR GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,
0123                                                                 >  UNTIL PTR > 12 DO
0124                                                                 >  ON PTR GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900,20
0125                                                                 >  *T25131 ^
0126                                                                 >  PTR = PTR + 1
0127                                                                 >  IF ECD.RET.VALUE = "END" THEN 
0128                                                                 >  MORE = 2

0129                                                                 >  PTR = 99
0130                                                                 >  END
0131                                                                 >  REPEAT
0132                                                                 >  *T23473 ^
0133 END CASE                                                           END CASE
0134 LOOP WHILE MORE = 1 DO                                             LOOP WHILE MORE = 1 DO
0135 ECD.NUM = 3                                                        ECD.NUM = 3

0135 ECD.NUM = 3                                                        ECD.NUM = 3
0136 SCV.REC(ECD.NUM) = ''                                              SCV.REC(ECD.NUM) = ''
0137 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0138 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE
0139 BEGIN CASE                                                         BEGIN CASE
0140                                                                 >  *T23473 v
0141 CASE OPTION = 'E' OR OPTION = 'END'                                CASE OPTION = 'E' OR OPTION = 'END'
0142 RELEASE        ;* T26126                                        |  RELEASE JOB.CATEGORY.ADD,CONO:JOB.CATG.ID
0143 MORE = 2                                                           MORE = 2
0144 CASE OPTION = 1                                                 |  *T25131 v

0145 GOSUB 1100                                                      |  * CASE OPTION >= 1 AND OPTION <= 10
0146                                                                 >  CASE OPTION >= 1 AND OPTION <= 11
0147                                                                 >  * ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,19
0148                                                                 >  ON OPTION GOSUB 1100,1200,1300,1400,1500,1600,1700,1800,1900
0149                                                                 >  *T25131 ^
0150 CASE OPTION = 'F'                                                  CASE OPTION = 'F'
0151 WRITE CODE.REC ON JOB.CATEGORY, CONO:JOB.CATG.ID                   WRITE CODE.REC ON JOB.CATEGORY, CONO:JOB.CATG.ID

0152                                                                 >  MATWRITE JCATG.ADD.REC ON JOB.CATEGORY.ADD,CONO:JOB.CATG.ID
0153                                                                 >  *T23473 ^
0154 MORE = 2                                                           MORE = 2
0155 END CASE                                                           END CASE
0156 REPEAT                                                             REPEAT
0157 WHILE MORE DO REPEAT                                               WHILE MORE DO REPEAT
0158 GOTO 99999                                                         GOTO 99999

0158 GOTO 99999                                                         GOTO 99999
0159 1100 ECD.NUM = 2                                                   1100 ECD.NUM = 2
0160 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0161 IF ECD.RET.VALUE # 'END' THEN CODE.DESC = ECD.RET.VALUE            IF ECD.RET.VALUE # 'END' THEN CODE.DESC = ECD.RET.VALUE
0162 RETURN                                                             RETURN
0163                                                                 >  *T23473 v
0164                                                                 >  *
0165                                                                 >  1200 *
0166                                                                 >  *
0167                                                                 >  ECD.NUM = 4

0168                                                                 >  VAL.RESP=0
0169                                                                 >  LOOP
0170                                                                 >  UNTIL VAL.RESP DO
0171                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0172                                                                 >  RESP = ECD.RET.VALUE
0173                                                                 >  BEGIN CASE
0174                                                                 >  CASE RESP = "END"

0175                                                                 >  VAL.RESP = 1
0176                                                                 >  CASE RESP = "" 
0177                                                                 >  *          should not happen field is required
0178                                                                 >  CASE RESP = "???"
0179                                                                 >  *          user is asking for help call the xref
0180                                                                 >  GXR.SORT.FILE = "SALES.CODE" ; GXR.FILE = SALES.CODE
0181                                                                 >  GXR.NAME = "GEN.CODE.0"  

0182                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0183                                                                 >  SCV.REC(4) = "" ; ERRMSG = ''
0184                                                                 >  ECD.ACTION = 2 ; CALL SCRN.EDIT
0185                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0186                                                                 >  IF GXR.ID = "" OR GXR.ID = "END" THEN
0187                                                                 >  ERRMSG = "Sales Code field required"
0188                                                                 >  GOSUB 91000

0189                                                                 >  END ELSE
0190                                                                 >  SCV.REC(4) = GXR.ID
0191                                                                 >  ECD.NUM = 4
0192                                                                 >  ECD.RETURN.VALUE = GXR.ID
0193                                                                 >  MATREAD SLC.REC FROM SALES.CODE,CONO:GXR.ID THEN
0194                                                                 >  VAL.RESP = 1
0195                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0196                                                                 >  JCATG.ADD.SLS = GXR.ID
0197                                                                 >  END ELSE
0198                                                                 >  ERRMSG = GXR.ID:" is not a valid Sales Code"
0199                                                                 >  GOSUB 91000
0200                                                                 >  END
0201                                                                 >  END
0202                                                                 >  CASE 1

0203                                                                 >  MATREAD SLC.REC FROM SALES.CODE,CONO:RESP THEN
0204                                                                 >  SCV.REC(4) = RESP
0205                                                                 >  VAL.RESP = 1
0206                                                                 >  JCATG.ADD.SLS = RESP
0207                                                                 >  END ELSE
0208                                                                 >  ERRMSG = RESP[1,40]:" is not a valid sales code try ???"
0209                                                                 >  GOSUB 91000

0210                                                                 >  END
0211                                                                 >  END CASE
0212                                                                 >  REPEAT
0213                                                                 >  *
0214                                                                 >  RETURN
0215                                                                 >  *
0216                                                                 >  1300 *

0217                                                                 >  *
0218                                                                 >  USE.NUM = 5
0219                                                                 >  GOSUB PROCESS.ACCT.NUM
0220                                                                 >  *
0221                                                                 >  RETURN
0222                                                                 >  *
0223                                                                 >  1400 *

0224                                                                 >  *
0225                                                                 >  USE.NUM = 6
0226                                                                 >  GOSUB PROCESS.ACCT.NUM
0227                                                                 >  *
0228                                                                 >  RETURN
0229                                                                 >  *
0230                                                                 >  1500 *

0231                                                                 >  *
0232                                                                 >  USE.NUM = 7
0233                                                                 >  GOSUB PROCESS.ACCT.NUM
0234                                                                 >  *
0235                                                                 >  RETURN
0236                                                                 >  *
0237                                                                 >  1600 *

0238                                                                 >  *
0239                                                                 >  USE.NUM = 8
0240                                                                 >  GOSUB PROCESS.ACCT.NUM
0241                                                                 >  *
0242                                                                 >  RETURN
0243                                                                 >  *
0244                                                                 >  1700 *

0245                                                                 >  *
0246                                                                 >  USE.NUM = 9
0247                                                                 >  GOSUB PROCESS.ACCT.NUM
0248                                                                 >  *
0249                                                                 >  RETURN
0250                                                                 >  *
0251                                                                 >  1800 *

0252                                                                 >  *
0253                                                                 >  USE.NUM = 10
0254                                                                 >  GOSUB PROCESS.ACCT.NUM
0255                                                                 >  *
0256                                                                 >  RETURN
0257                                                                 >  *
0258                                                                 >  1900 *

0259                                                                 >  *
0260                                                                 >  USE.NUM = 11
0261                                                                 >  GOSUB PROCESS.ACCT.NUM
0262                                                                 >  *
0263                                                                 >  RETURN
0264                                                                 >  *
0265                                                                 >  2000 *

0266                                                                 >  *
0267                                                                 >  USE.NUM = 12
0268                                                                 >  GOSUB PROCESS.ACCT.NUM
0269                                                                 >  *
0270                                                                 >  RETURN
0271                                                                 >  *
0272                                                                 >  *

0273                                                                 >  2100 *
0274                                                                 >  *
0275                                                                 >  LOOP
0276                                                                 >  ECD.NUM = 23
0277                                                                 >  VAL.RESP=0
0278                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0279                                                                 >  RESP = ECD.RET.VALUE

0280                                                                 >  BEGIN CASE
0281                                                                 >  CASE RESP = "END"
0282                                                                 >  VAL.RESP = 1
0283                                                                 >  CASE RESP = "" 
0284                                                                 >  GOSUB GET.PLT.DESC
0285                                                                 >  CASE RESP = "???"
0286                                                                 >  *          user is asking for help call the xref

0287                                                                 >  GXR.SORT.FILE = "PLANT.CODE" ; GXR.FILE = PLANT.CODE
0288                                                                 >  GXR.NAME = "GEN.CODE"  
0289                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0290                                                                 >  ECD.ACTION = 2 ; CALL SCRN.EDIT
0291                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0292                                                                 >  IF GXR.ID = "" OR GXR.ID = "END" ELSE
0293                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE,CONO:GXR.ID THEN

0294                                                                 >  ECD.NUM = 23
0295                                                                 >  SCV.REC(ECD.NUM) = GXR.ID
0296                                                                 >  JCATG.ADD.PLANT = GXR.ID
0297                                                                 >  VAL.RESP = 1
0298                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0299                                                                 >  ECD.NUM = 24
0300                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC

0301                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0302                                                                 >  END ELSE
0303                                                                 >  ERRMSG = GXR.ID:" is not a valid Plant Code"
0304                                                                 >  GOSUB 91000
0305                                                                 >  END
0306                                                                 >  END
0307                                                                 >  CASE NOT(NUM(RESP))

0308                                                                 >  ERRMSG = 'Numeric Id only.'
0309                                                                 >  GOSUB 91000
0310                                                                 >  CASE 1
0311                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE,CONO:RESP THEN
0312                                                                 >  SCV.REC(ECD.NUM) = RESP
0313                                                                 >  JCATG.ADD.PLANT = RESP
0314                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0315                                                                 >  ECD.NUM = 24
0316                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC
0317                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0318                                                                 >  VAL.RESP = 1
0319                                                                 >  END ELSE
0320                                                                 >  ERRMSG = RESP[1,40]:" is not a valid Plant code try ???"
0321                                                                 >  GOSUB 91000

0322                                                                 >  END
0323                                                                 >  END CASE
0324                                                                 >  UNTIL VAL.RESP DO REPEAT
0325                                                                 >  *
0326                                                                 >  RETURN
0327                                                                 >  *
0328                                                                 >  GET.PLT.DESC: 

0329                                                                 >  *
0330                                                                 >  ECD.NUM = 24
0331                                                                 >  ECD.ACTION = 4 ; CALL SCRN.EDIT
0332                                                                 >  BEGIN CASE
0333                                                                 >  CASE ECD.RET.VALUE = "END"
0334                                                                 >  CASE ECD.RET.VALUE = ""
0335                                                                 >  CASE 1

0336                                                                 >  GXR.NAME = "PLANT.CODE.XREF"
0337                                                                 >  GXR.XREF = PLANT.CODE.XREF
0338                                                                 >  GXR.FILE = PLANT.CODE
0339                                                                 >  GXR.SRCH.ID = ECD.RET.VALUE
0340                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0341                                                                 >  ECD.ACTION = 2; CALL SCRN.EDIT
0342                                                                 >  ECD.ACTION = 3; CALL SCRN.EDIT

0343                                                                 >  IF GXR.ID = "" THEN
0344                                                                 >  ECD.NUM = 24; SCV.REC(ECD.NUM) = ""
0345                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0346                                                                 >  END ELSE
0347                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE, CONO:GXR.ID THEN
0348                                                                 >  ECD.NUM = 23
0349                                                                 >  SCV.REC(ECD.NUM) = GXR.ID

0350                                                                 >  JCATG.ADD.PLANT = GXR.ID
0351                                                                 >  VAL.RESP = 1
0352                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0353                                                                 >  ECD.NUM = 24
0354                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC
0355                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0356                                                                 >  END ELSE

0357                                                                 >  ECD.NUM = 24; SCV.REC(ECD.NUM) = ""
0358                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0359                                                                 >  ERRMSG = "Cannot locate Plant # ":GXR.ID
0360                                                                 >  GOSUB 91000
0361                                                                 >  END
0362                                                                 >  END
0363                                                                 >  END CASE

0364                                                                 >  *
0365                                                                 >  RETURN
0366                                                                 >  PROCESS.ACCT.NUM: 
0367                                                                 >  ECD.NUM = USE.NUM    
0368                                                                 >  VAL.RESP=0
0369                                                                 >  LOOP
0370                                                                 >  UNTIL VAL.RESP DO

0371                                                                 >  *  ECD.PATRN = CO.ACCT.MASK
0372                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0373                                                                 >  RESP = ECD.RET.VALUE
0374                                                                 >  BEGIN CASE
0375                                                                 >  CASE RESP = "END"
0376                                                                 >  VAL.RESP = 1
0377                                                                 >  CASE RESP = "" 

0378                                                                 >  *          should not happen field is required
0379                                                                 >  CASE RESP = "???"
0380                                                                 >  *          user is asking for help call the xref
0381                                                                 >  GXR.SORT.FILE = "COA" ; GXR.FILE = COA
0382                                                                 >  GXR.NAME = "COA"  
0383                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0384                                                                 >  SCV.REC(USE.NUM) = "" ; ERRMSG = ''

0385                                                                 >  ECD.ACTION = 2 ; CALL SCRN.EDIT
0386                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0387                                                                 >  IF GXR.ID = "" OR GXR.ID = "END" THEN
0388                                                                 >  ERRMSG = "Account Code required"
0389                                                                 >  GOSUB 91000
0390                                                                 >  END ELSE
0391                                                                 >  ECD.NUM = USE.NUM

0392                                                                 >  *        ECD.PATRN = CO.ACCT.MASK
0393                                                                 >  SCV.REC(USE.NUM) = GXR.ID CO.ACCT.MASK
0394                                                                 >  RESP = GXR.ID
0395                                                                 >  BEGIN CASE
0396                                                                 >  CASE USE.NUM = 5
0397                                                                 >  JCATG.ADD.DCOGS.LB = RESP
0398                                                                 >  CASE USE.NUM = 6

0399                                                                 >  JCATG.ADD.DCOGS.MT = RESP
0400                                                                 >  CASE USE.NUM = 7
0401                                                                 >  JCATG.ADD.DCOGS.OP = RESP
0402                                                                 >  CASE USE.NUM = 8
0403                                                                 >  JCATG.ADD.DCOGS.SP = RESP
0404                                                                 >  CASE USE.NUM = 9
0405                                                                 >  JCATG.ADD.DCOGS.MI = RESP

0406                                                                 >  CASE USE.NUM = 10
0407                                                                 >  JCATG.ADD.VOH = RESP
0408                                                                 >  CASE USE.NUM = 11
0409                                                                 >  JCATG.ADD.FOH = RESP
0410                                                                 >  CASE USE.NUM = 12
0411                                                                 >  JCATG.ADD.SA = RESP
0412                                                                 >  CASE 1

0413                                                                 >  ERRMSG = "Contact Tech support 'JOB.CATEGORY.MAINT Msg#101'"
0414                                                                 >  GOSUB 93000
0415                                                                 >  END CASE
0416                                                                 >  ECD.RETURN.VALUE = GXR.ID
0417                                                                 >  MATREAD COA.REC FROM COA,CONO:GXR.ID THEN
0418                                                                 >  VAL.RESP = 1
0419                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0420                                                                 >  ECD.NUM = USE.NUM + 10
0421                                                                 >  SCV.REC(USE.NUM+10) = COA.DESC
0422                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0423                                                                 >  END ELSE
0424                                                                 >  ERRMSG = GXR.ID:" is not a valid Account Code"
0425                                                                 >  GOSUB 91000
0426                                                                 >  END

0427                                                                 >  END
0428                                                                 >  CASE 1
0429                                                                 >  MATREAD COA.REC FROM COA,CONO:RESP THEN
0430                                                                 >  SCV.REC(USE.NUM) =RESP CO.ACCT.MASK
0431                                                                 >  ECD.NUM = USE.NUM
0432                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0433                                                                 >  BEGIN CASE

0434                                                                 >  CASE USE.NUM = 5
0435                                                                 >  JCATG.ADD.DCOGS.LB = RESP
0436                                                                 >  CASE USE.NUM = 6
0437                                                                 >  JCATG.ADD.DCOGS.MT = RESP
0438                                                                 >  CASE USE.NUM = 7
0439                                                                 >  JCATG.ADD.DCOGS.OP = RESP
0440                                                                 >  CASE USE.NUM = 8

0441                                                                 >  JCATG.ADD.DCOGS.SP = RESP
0442                                                                 >  CASE USE.NUM = 9
0443                                                                 >  JCATG.ADD.DCOGS.MI = RESP
0444                                                                 >  CASE USE.NUM = 10
0445                                                                 >  JCATG.ADD.VOH = RESP
0446                                                                 >  CASE USE.NUM = 11
0447                                                                 >  JCATG.ADD.FOH = RESP

0448                                                                 >  CASE USE.NUM = 12
0449                                                                 >  JCATG.ADD.SA = RESP
0450                                                                 >  CASE 1
0451                                                                 >  ERRMSG = "Contact Tech support 'JOB.CATEGORY.MAINT Msg#101'"
0452                                                                 >  GOSUB 93000
0453                                                                 >  END CASE
0454                                                                 >  VAL.RESP = 1

0455                                                                 >  SCV.REC(USE.NUM+10) = COA.DESC
0456                                                                 >  ECD.NUM = USE.NUM+10
0457                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0458                                                                 >  END ELSE
0459                                                                 >  ERRMSG = RESP[1,40]:" is not a valid Account code try ???"
0460                                                                 >  GOSUB 91000
0461                                                                 >  END

0462                                                                 >  END CASE
0463                                                                 >  REPEAT
0464                                                                 >  *
0465                                                                 >  RETURN
0466                                                                 >  *
0467                                                                 >  *
0468                                                                 >  STUFF.FIELDS.IN.SCREEN: 

0469                                                                 >  *
0470                                                                 >  SCV.REC(4) = JCATG.ADD.SLS
0471                                                                 >  SCV.REC(5) = JCATG.ADD.DCOGS.LB CO.ACCT.MASK
0472                                                                 >  SCV.REC(6) = JCATG.ADD.DCOGS.MT CO.ACCT.MASK
0473                                                                 >  SCV.REC(7) = JCATG.ADD.DCOGS.OP CO.ACCT.MASK
0474                                                                 >  SCV.REC(8) = JCATG.ADD.DCOGS.SP CO.ACCT.MASK
0475                                                                 >  SCV.REC(9) = JCATG.ADD.DCOGS.MI CO.ACCT.MASK

0476                                                                 >  SCV.REC(10) = JCATG.ADD.VOH CO.ACCT.MASK
0477                                                                 >  SCV.REC(11) = JCATG.ADD.FOH CO.ACCT.MASK
0478                                                                 >  SCV.REC(12) = JCATG.ADD.SA CO.ACCT.MASK
0479                                                                 >  *
0480                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.LB THEN
0481                                                                 >  DESC = COA.DESC 
0482                                                                 >  END ELSE

0483                                                                 >  DESC = UNK
0484                                                                 >  END
0485                                                                 >  SCV.REC(15) = DESC
0486                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.MT THEN
0487                                                                 >  DESC = COA.DESC 
0488                                                                 >  END ELSE
0489                                                                 >  DESC = UNK

0490                                                                 >  END
0491                                                                 >  SCV.REC(16) = DESC
0492                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.OP THEN
0493                                                                 >  DESC = COA.DESC 
0494                                                                 >  END ELSE
0495                                                                 >  DESC = UNK
0496                                                                 >  END

0497                                                                 >  SCV.REC(17) = DESC
0498                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.SP THEN
0499                                                                 >  DESC = COA.DESC 
0500                                                                 >  END ELSE
0501                                                                 >  DESC = UNK
0502                                                                 >  END
0503                                                                 >  SCV.REC(18) = DESC

0504                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.DCOGS.MI THEN
0505                                                                 >  DESC = COA.DESC 
0506                                                                 >  END ELSE
0507                                                                 >  DESC = UNK
0508                                                                 >  END
0509                                                                 >  SCV.REC(19) = DESC
0510                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.VOH THEN

0511                                                                 >  DESC = COA.DESC 
0512                                                                 >  END ELSE
0513                                                                 >  DESC = UNK
0514                                                                 >  END
0515                                                                 >  SCV.REC(20) = DESC
0516                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.FOH THEN
0517                                                                 >  DESC = COA.DESC 

0518                                                                 >  END ELSE
0519                                                                 >  DESC = UNK
0520                                                                 >  END
0521                                                                 >  SCV.REC(21) = DESC
0522                                                                 >  MATREAD COA.REC FROM COA,CONO:JCATG.ADD.SA THEN
0523                                                                 >  DESC = COA.DESC 
0524                                                                 >  END ELSE

0525                                                                 >  DESC = UNK
0526                                                                 >  END
0527                                                                 >  SCV.REC(22) = DESC
0528                                                                 >  *T25131 v
0529                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE, CONO:JCATG.ADD.PLANT ELSE 
0530                                                                 >  SCV.REC(23) = JCATG.ADD.PLANT
0531                                                                 >  SCV.REC(24) = PLTC.DESC

0532                                                                 >  *T25131 ^
0533                                                                 >  *
0534                                                                 >  RETURN
0535                                                                 >  *
0536                                                                 >  *T23473 ^
0537                                                                 >  *
0538 91000 ERR.TYPE = 1                                                 91000 ERR.TYPE = 1


JCSBP/JOB.INQUIRY                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.INQUIRY
Printed for thompson at 06/28/2006 04:41:55PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0007 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0008                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0009 *COPY>JCS.CPYLIB>COM.JOB.INQ                                       *COPY>JCS.CPYLIB>COM.JOB.INQ
0010                                                                 >  *COPY>ICS.CPYLIB>COM.INV.INQ
0011 ********************************************************           ********************************************************
0012 * REVISION    - [08.1]                                             * REVISION    - [08.1]
0013 * COPYRIGHT   - 1982 by C.B.A    (Vercom Software, Inc.)           * COPYRIGHT   - 1982 by C.B.A    (Vercom Software, Inc.)
0014 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0015 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP
0016 * PROGRAM     - JOB.INQUIRY                                        * PROGRAM     - JOB.INQUIRY

0021 * - Task #12907 (RRG)                                              * - Task #12907 (RRG)
0022 * MOD TASK 18262 DMT 7/24/94 INCREASE ESTIMATE QUANTITIES TO 9     * MOD TASK 18262 DMT 7/24/94 INCREASE ESTIMATE QUANTITIES TO
0023 *ENDOC                                                             *ENDOC
0024 *T22417 lanny 12/10/1997 * For Master/Sub Job always prompt fo     *T22417 lanny 12/10/1997 * For Master/Sub Job always prompt 
0025 *                          inclusion of subs.                      *                          inclusion of subs.
0026 *T23278 markt 12/22/1998 * Add check for divisional security.   |  *T23473 rick 04/11/1999 * Modify order of sales code and cat
0027 *T24007 cm 06/28/1999 * Job status not showing completed after     *T24007 cm 06/28/1999 * Job status not showing completed aft
0028 *                       date is entered and record is filed.       *                       date is entered and record is filed.
0029 *T25682 lanny 03/12/2001 * When Filing a master job, if sub-jo     *T25682 lanny 03/12/2001 * When Filing a master job, if sub-
0030 *                          included, it combines the sub data      *                          included, it combines the sub dat

0031 *                          master job record.                      *                          master job record.
0032 *T25950 edwin 07/24/2001 * Add prompt for authorization to can  <  
0033 *                          based on its' status.                <  
0034 *T25967 ajibaly 07/25/2001 * View memos                         <  
0035 *T26334 epitka 12/19/2001 * Rev12                               <  
0036 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  <  
0037 *T26606 cmykleb 07/01/2002 * Add a Serial Reserve Inquiry scre  <  
0038 *T26731 adelgado 07/08/2002 * Allow to view multiple CSR Memo   <  

0039 *                             job.                              <  
0040 *T26909 cmykleb 10/14/2002 * Include logic from POST.INVOICE f  <  
0041 *                            completing a job.                  <  
0042 *T26973 adelgado 11/01/2002 * Add Sales Code description field  <  
0043 *T27885 cmykleb 06/23/2004 * Do not display the credit authori  <  
0044 *                            code. This is supposed to be a se  <  
0045 *                            field.                             <  

0056 *COPY>JCS.CPYLIB>JOB.STATS                                         *COPY>JCS.CPYLIB>JOB.STATS
0057 *COPY>JCS.CPYLIB>GANG.JOB                                          *COPY>JCS.CPYLIB>GANG.JOB
0058 *COPY>POS.CPYLIB>OUTSIDE.PO                                        *COPY>POS.CPYLIB>OUTSIDE.PO
0059 *COPY>JCS.CPYLIB>JOB.TOT.REC                                       *COPY>JCS.CPYLIB>JOB.TOT.REC
0060 *COPY>PMC.CPYLIB>SHIP.VIA                                          *COPY>PMC.CPYLIB>SHIP.VIA
0061 *COPY>PMC.CPYLIB>SALES.CODE             ;* T26973               <  
0062 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0063 *COPY>OPS.CPYLIB>JOB.FNGD.STATS                                    *COPY>OPS.CPYLIB>JOB.FNGD.STATS
0064 *COPY>JIS.CPYLIB>SYS_TKT_DEF                                       *COPY>JIS.CPYLIB>SYS_TKT_DEF
0065 *COPY>JIS.CPYLIB>SYS_SCN_DEF                                       *COPY>JIS.CPYLIB>SYS_SCN_DEF

0068 *COPY>CPYLIB>GEN.XREF.SUB                                          *COPY>CPYLIB>GEN.XREF.SUB
0069 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0070 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0071 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0072 *COPY>PMC.CPYLIB>CSR.CODE                                          *COPY>PMC.CPYLIB>CSR.CODE
0073 *COPY>PMC.CPYLIB>CSR.MEMO.TRACK ;* T25967                       <  
0074 *                                                                  *
0075 EQU TRUE  TO 1  ; *25950                                        <  
0076 EQU FALSE TO 0  ; *25950                                        <  
0077 *                                                               <  

0091 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS     OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE 
0092 OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG = 'CUSTOM     OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG = 'CUST
0093 OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = 'SALESMAN FILE IS     OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = 'SALESMAN FILE 
0094 OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS      OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREEN
0095 OPEN '','OPS.SCREENS' TO SECOND.SCREENS ELSE ERRMSG = 'OPS.SCR     OPEN '','OPS.SCREENS' TO SECOND.SCREENS ELSE ERRMSG = 'OPS.S
0096 *T25967 v                                                       <  
0097 OPEN 'CSR.MEMO.TRACK' TO CSR.MEMO.TRACK ELSE ERRMSG = 'CSR.MEM  <  
0098 *T25967 ^                                                       <  
0099 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MI     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS 
0100 OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS     OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE 

0106 OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY     OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGO
0107 OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSI     OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MIS
0108 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MI     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS 
0109 OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS     OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE 
0110 OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS     OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE 
0111 OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG = 'SALES.CODE F  <  
0112 OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT      OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMEN
0113 OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FIL     OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR F
0114 OPEN '', 'JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE I     OPEN '', 'JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE
0115 OPEN '', 'JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE I     OPEN '', 'JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE

0133 OPEN '', 'SYS_FILES' TO SYS_FILES ELSE ERRMSG = 'SYS_FILES FIL     OPEN '', 'SYS_FILES' TO SYS_FILES ELSE ERRMSG = 'SYS_FILES F
0134 OPEN '', 'PFX_FILES' TO PFX_FILES ELSE ERRMSG = 'PFX_FILES FIL     OPEN '', 'PFX_FILES' TO PFX_FILES ELSE ERRMSG = 'PFX_FILES F
0135 OPEN '', 'SYS_FIELDS' TO SYS_FIELDS ELSE ERRMSG = 'SYS_FIELDS      OPEN '', 'SYS_FIELDS' TO SYS_FIELDS ELSE ERRMSG = 'SYS_FIELD
0136 OPEN '', 'SYS_FLD_HMSG' TO SYS_FLD_HMSG ELSE ERRMSG = 'SYS_FLD     OPEN '', 'SYS_FLD_HMSG' TO SYS_FLD_HMSG ELSE ERRMSG = 'SYS_F
0137 OPEN '', 'CPYLIB' TO CPYLIB ELSE ERRMSG = 'CPYLIB FILE IS MISS     OPEN '', 'CPYLIB' TO CPYLIB ELSE ERRMSG = 'CPYLIB FILE IS MI
0138 OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.S  |  *T23473 v
0139 *                                                               |  OPEN "CBN.SCREENS" TO THIRD.SCREENS ELSE ERRMSG="CBN.SCREENS
0140                                                                 >  *T23473 ^
0141 *-- GET COMPANY                                                    *-- GET COMPANY
0142 MAT COMP.REC = ''                                                  MAT COMP.REC = ''

0151 TYP = 0; CALL EDIT.SUB; FILL = "#"                                 TYP = 0; CALL EDIT.SUB; FILL = "#"
0152 INQUIRE = 1                                                        INQUIRE = 1
0153 MAT EDIT.COM.DRIVER = ''                                           MAT EDIT.COM.DRIVER = ''
0154 MAT GEN.XREF.REC = ''                                              MAT GEN.XREF.REC = ''
0155 MAT FISCAL.REC = ""                                                MAT FISCAL.REC = ""
0156 DIM TMP.REC(1) ; MAT TMP.REC = ""   ; * 25950                   <  
0157 DASHES = STR('-',80)                                               DASHES = STR('-',80)
0158 ERRMSG = ''                                                        ERRMSG = ''
0159 UNKNOWN = '????????????????????'                                   UNKNOWN = '????????????????????'
0160 GXR.CO = CONO                                                      GXR.CO = CONO

0163 *     GXR.ATT<1,2> = 1                                             *     GXR.ATT<1,2> = 1
0164 *     GXR.LEN<1,1> = 10                                            *     GXR.LEN<1,1> = 10
0165 *     GXR.LEN<1,2> = 60                                            *     GXR.LEN<1,2> = 60
0166 BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1; SUB.FLAG = 0       BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1; SUB.FLAG = 0
0167 *-- MAIN PROCESSING                                                *-- MAIN PROCESSING
0168 ECD.SCRN.CNT = 23                                               |  ECD.SCRN.CNT = 21
0169 ECD.SCRN.NAME<1> = 'JOB.MAINT'                                     ECD.SCRN.NAME<1> = 'JOB.MAINT'
0170                                                                 >  ECD.SCRN.FLAG<1> = 3 ;*T23473
0171 ECD.SCRN.NAME<2> = 'JOB.DEPT.COST.SUB'                             ECD.SCRN.NAME<2> = 'JOB.DEPT.COST.SUB'
0172 ECD.SCRN.NAME<3> = 'JOB.MATL.SUB'                                  ECD.SCRN.NAME<3> = 'JOB.MATL.SUB'

0183 ECD.SCRN.NAME<14> = "JOB.TRACK.MAINT"                              ECD.SCRN.NAME<14> = "JOB.TRACK.MAINT"
0184 ECD.SCRN.NAME<15> = "JOB.DEPT.SALE.SUB"                            ECD.SCRN.NAME<15> = "JOB.DEPT.SALE.SUB"
0185 ECD.SCRN.NAME<16> = 'JOB.REQD.SUB'                                 ECD.SCRN.NAME<16> = 'JOB.REQD.SUB'
0186 ECD.SCRN.NAME<17> = 'JOB.OSP.INQ'                                  ECD.SCRN.NAME<17> = 'JOB.OSP.INQ'
0187 ECD.SCRN.NAME<18> = 'JOB.FNGD.SUB'                                 ECD.SCRN.NAME<18> = 'JOB.FNGD.SUB'
0188                                                                 >  *      ECD.SCRN.FLAG<18> = 2
0189 ECD.SCRN.NAME<19> = 'JOB.ADDL.CHG'                                 ECD.SCRN.NAME<19> = 'JOB.ADDL.CHG'
0190 ECD.SCRN.FLAG<19> = 2                                              ECD.SCRN.FLAG<19> = 2
0191 ECD.SCRN.NAME<20> = 'GANG.JOB.SUB'                                 ECD.SCRN.NAME<20> = 'GANG.JOB.SUB'
0192 ECD.SCRN.NAME<21> = 'GANG.JOB.ALLOC'                               ECD.SCRN.NAME<21> = 'GANG.JOB.ALLOC'

0193 ECD.SCRN.NAME<22> = 'JOB.CSR.MEMO.INQ' ; * T25967               <  
0194 ECD.SCRN.NAME<23> = 'SERIAL.RESERVE.INQ' ; * T26606             <  
0195 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0196 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0197 100 *                                                              100 *
0198 LINES = 0                                                          LINES = 0
0199 MAT JOB.REC = ''                                                   MAT JOB.REC = ''

0212 GOTO 99999                                                         GOTO 99999
0213 CASE ECD.VALDAT.ITEM # ''                                          CASE ECD.VALDAT.ITEM # ''
0214 FOR I = 1 TO JOB.REC.SIZE                                          FOR I = 1 TO JOB.REC.SIZE
0215 JOB.REC(I) = ECD.VALDAT.ITEM<I>                                    JOB.REC(I) = ECD.VALDAT.ITEM<I>
0216 NEXT I                                                             NEXT I
0217 *T23278 v                                                       <  
0218 IF PROG.FLAG = "R" THEN                                         <  
0219 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0220 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0221 IF ERRMSG # '' THEN                                             <  

0222 GOSUB 91000; GOTO 100                                           <  
0223 END                                                             <  
0224 END                                                             <  
0225 *T23278 ^                                                       <  
0226 JOB.NUM = ECD.RET.VALUE                                            JOB.NUM = ECD.RET.VALUE
0227 ECD.NUM = 8                                                        ECD.NUM = 8
0228 GOSUB 20000                                                        GOSUB 20000

0230 CASE ECD.RET.VALUE = ''                                            CASE ECD.RET.VALUE = ''
0231 MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""              MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
0232 JOB.NUM = ''                                                       JOB.NUM = ''
0233 GOSUB 1000                                                         GOSUB 1000
0234 IF ECD.RET.VALUE = "END" THEN GOTO 100                             IF ECD.RET.VALUE = "END" THEN GOTO 100
0235 *T26820 v                                                       <  
0236 *        GXR.NAME = "JOB"                                       <  
0237 CALL GET.CRTMODE(CRTMODE)                                       <  
0238 IF CRTMODE = 'termulator' THEN                                  <  
0239 GXR.NAME = "JOB.GUI"                                            <  

0240 END ELSE                                                        <  
0241 GXR.NAME = "JOB"                                                   GXR.NAME = "JOB"
0242 END                                                             <  
0243 *T26820 ^                                                       <  
0244 GXR.XREF = CUSTOMER                                                GXR.XREF = CUSTOMER
0245 GXR.FILE = JOB                                                     GXR.FILE = JOB
0246 GXR.SRCH.ID = JOB.CUST                                             GXR.SRCH.ID = JOB.CUST

0298 ANCORE = 0                                                         ANCORE = 0
0299 CASE ACTION = 'S'                                                  CASE ACTION = 'S'
0300 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0301 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0302 GOSUB 1400                                                         GOSUB 1400
0303 * T25978 v                                                      <  
0304 CASE ACTION = 'SR'                                              <  
0305 LN -= PAGE.SIZE                                                 <  
0306 IF LN < 1 THEN LN = 1                                           <  
0307 GOSUB 1400                                                      <  

0308 CASE ACTION = 'ST'                                              <  
0309 LN = 1                                                          <  
0310 GOSUB 1400                                                      <  
0311 CASE ACTION = 'SB'                                              <  
0312 LN = LINES                                                      <  
0313 GOSUB 1400                                                      <  
0314 * T25978 ^                                                      <  

0317 CASE REQUEST = "TR"                                                CASE REQUEST = "TR"
0318 ECD.SCRN.NO = 14                                                   ECD.SCRN.NO = 14
0319 ECD.ACTION = 2 ; CALL SCRN.EDIT                                    ECD.ACTION = 2 ; CALL SCRN.EDIT
0320 HOLD.PROG.FLAG = PROG.FLAG ;*T25682                                HOLD.PROG.FLAG = PROG.FLAG ;*T25682
0321 IF MAST.SUB.FLAG THEN PROG.FLAG = 'I' ;*T25682                     IF MAST.SUB.FLAG THEN PROG.FLAG = 'I' ;*T25682
0322 *T26909 v                                                       <  
0323 *           CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG)       <  
0324 CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG,CONO,CO.POS)          CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG,CONO,CO.POS)
0325 *T26909 ^                                                       <  
0326 PROG.FLAG = HOLD.PROG.FLAG ;*T25682                                PROG.FLAG = HOLD.PROG.FLAG ;*T25682

0527 GOSUB 91000                                                        GOSUB 91000
0528 CASE REQUEST = 'SP'                                                CASE REQUEST = 'SP'
0529 ECD.SCRN.NO = 7; ECD.ACTION=3;CALL SCRN.EDIT                       ECD.SCRN.NO = 7; ECD.ACTION=3;CALL SCRN.EDIT
0530 CALL JOB.SP.SUB(CONO,JOB.NUM,SUB.CNT)                              CALL JOB.SP.SUB(CONO,JOB.NUM,SUB.CNT)
0531 ECD.SCRN.NO = 1; GOSUB 35000                                       ECD.SCRN.NO = 1; GOSUB 35000
0532 *T25967 v                                                       <  
0533 * T26731 v                                                      <  
0534 * CASE REQUEST = "MM" AND CSR.JOB.NUM = ''                      <  
0535 CASE REQUEST = "MM" AND JOB.CSR.MEMO = ''                       <  
0536 * T26731 ^                                                      <  

0537 ERRMSG = 'NO CSR MEMO TRACK RECORD FOR THIS JOB YET..'          <  
0538 GOSUB 91000                                                     <  
0539 CASE REQUEST = "MM"                                             <  
0540 ECD.SCRN.NO = 22; ECD.ACTION=3; CALL SCRN.EDIT                  <  
0541 CALL JOB.CSR.MEMO.INQ(CONO,JOB.NUM,MAT JOB.REC)                 <  
0542 ECD.SCRN.NO = 1; GOSUB 35000                                    <  
0543 *T25967 ^                                                       <  

0573 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0574 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0575 GOTO 502                                                           GOTO 502
0576 END                                                                END
0577 *T25682 ^                                                          *T25682 ^
0578 *T25950 v                                                       |  X = 0; Y = 23; TYP = 18; MAXL = 1
0579 REVISE.RELEASE.CANCEL = FALSE                                   |  PMSG = "DO YOU WANT TO REVERSE WIP, RELEASE INVENTORY AND CA
0580 AUTHORIZATION.REQUIRED = INDEX('1,2,3,5',JOB.STATUS<1,1>,1)     |  CALL EDIT.SUB
0581 IF AUTHORIZATION.REQUIRED THEN                                  |  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0582 ECD.NUM = 4 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   |  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0583 MATREAD TMP.REC FROM JOB.STAT.CODE, CONO:ECD.RET.VALUE THEN     |  IF VALUE # "Y" THEN GOTO 502
0584 ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   <  
0585 IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE        <  
0586 END ELSE                                                        <  
0587 ERRMSG = "INVALID AUTHORIZATION CODE"                           <  
0588 GOSUB 91000                                                     <  
0589 GOTO 502                                                        <  

0590 END                                                             <  
0591 END ELSE                                                        <  
0592 ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   <  
0593 IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE        <  
0594 END                                                             <  
0595 IF NOT(REVISE.RELEASE.CANCEL) THEN GOTO 502                     <  
0596 *T25950 ^                                                       <  

0616 WIP.TYPE = "ALL"; WIP.DATE = "ALL"; WIP.PER = "ALL"                WIP.TYPE = "ALL"; WIP.DATE = "ALL"; WIP.PER = "ALL"
0617 WIP.PERCENT = 10000                                                WIP.PERCENT = 10000
0618 CALL REVERSE.JOB.WIP(CONO,JOB.NUM,WIP.TYPE,WIP.PERCENT,WIP.DAT     CALL REVERSE.JOB.WIP(CONO,JOB.NUM,WIP.TYPE,WIP.PERCENT,WIP.D
0619 END                                                                END
0620 RESV.ACTION = 'D'; RESV.LOC = 0                                    RESV.ACTION = 'D'; RESV.LOC = 0
0621 CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,JOB.NUM)            |  CALL JOB.RESV.SUB(RESV.ACTION,RESV.LOC,CONO,JOB.NUM)
0622 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0623 FOR M = MCNT TO 1 STEP -1                                          FOR M = MCNT TO 1 STEP -1
0624 IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> =     IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M>
0625 JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.N     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB

0807 SHPV.DESC = UNKNOWN                                                SHPV.DESC = UNKNOWN
0808 END                                                                END
0809 MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NUM ELSE             MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NUM ELSE
0810 MAT JFS.REC = ""                                                   MAT JFS.REC = ""
0811 END                                                                END
0812 *T25967 v                                                       <  
0813 * T26731  MATREAD CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK,CONO:  <  
0814 * T26731     MAT CSR.MEMO.TRACK.REC = ''                        <  
0815 * T26731  END                                                   <  
0816 *T25967 ^                                                       <  

0874 IF JFS.PROD # "" THEN                                              IF JFS.PROD # "" THEN
0875 JOB.QTY<1,3> = SUM(JFS.S.QTY)/1000                                 JOB.QTY<1,3> = SUM(JFS.S.QTY)/1000
0876 END                                                                END
0877 SCV.REC(38)<1> = JOB.QTY<1,3>                                      SCV.REC(38)<1> = JOB.QTY<1,3>
0878 SCV.REC(39)<1> = JOB.SALES.CODE                                    SCV.REC(39)<1> = JOB.SALES.CODE
0879 * T26973 v                                                      <  
0880 MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE       <  
0881 MAT SLC.REC = ''                                                <  
0882 END                                                             <  
0883 SCV.REC(40)<1> = SLC.DESC                                       <  

0884 * T26973 ^                                                      <  
0885 SCV.REC(41)<1> = JOB.CATG                                          SCV.REC(41)<1> = JOB.CATG
0886 SCV.REC(1)<1> = JOB.PRIOR.JOB                                      SCV.REC(1)<1> = JOB.PRIOR.JOB
0887 SCV.REC(2)<1> = JOB.PRICE.PER.THOU                                 SCV.REC(2)<1> = JOB.PRICE.PER.THOU
0888 *T27885  SCV.REC(3)<1> = JOB.CREDIT                             |  SCV.REC(3)<1> = JOB.CREDIT
0889 IF JOB.CATG # "" THEN                                              IF JOB.CATG # "" THEN
0890 REC = ""                                                           REC = ""


JCSBP/JOB.INVOICE.SUMMARY.F4                                       /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.INVOICE.SUMMARY.F4
Printed for thompson at 06/28/2006 04:41:56PM

0022 *                           34759                                  *                           34759
0023 *                           FIX IS ACTUALY IN SCRN.EDIT PROGRA     *                           FIX IS ACTUALY IN SCRN.EDIT PROG
0024 *T25016 edvard 04/04/2000 * SIMILAR PROBLEM AS THE ON ABOVE. I     *T25016 edvard 04/04/2000 * SIMILAR PROBLEM AS THE ON ABOVE.
0025 *                           TO "RI" THEN ERROR MSG "OUT OF RAN     *                           TO "RI" THEN ERROR MSG "OUT OF R
0026 *                           POPS UP                                *                           POPS UP
0027 *T25764 renee 07/26/2001 * Need to open TERMS file for          |  *C37366 alex 11/16/2000 * Add the mods to Task #24584, progr
0028 *                          INVOICE.MAINT.SUB.F4.                |  *                         overlooked.
0029 *T27139 epitka 12/26/2002 * CROSS CHECK JOB NO ON INVOICE       <  
0030 *T27236 adelgado 01/20/2003 * Fix to allow to view invoices wi  <  
0031 *                             and not get an error. Redo T2713  <  

0032 *T27232 adelgado 01/20/2003 * Allow to display invoice detail   <  
0033 *                             Master or Sub-Job level.          <  
0034 **************************************************************     ************************************************************
0035 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0036 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0037 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0038 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER

0045 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0046 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0047 *COPY>PMC.CPYLIB>SALES.CODE                                        *COPY>PMC.CPYLIB>SALES.CODE
0048 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0049 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0050 *COPY>JCS.CPYLIB>MASTER.TOT.REC          ;* T27236              <  
0051 DIM MASTER.REC(JOB.REC.SIZE)           ;* T27236                <  
0052 *                                                                  *
0053 SYS.TYPE = 1                                                       SYS.TYPE = 1
0054 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

0055 MAT FILE.VARS = ""                                                 MAT FILE.VARS = ""
0056 OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING"; GOTO     OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING"; GO
0057 OPEN "","CUSTOMER" TO CUSTOMER ELSE                             |  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE 
0058 ERRMSG = "CUSTOMER FILE IS MISSING"; GOTO 93000                 |  OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="DIVISION FILE IS
0059 END                                                             |  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="DEPARTMENT F
0060 OPEN "","DIVISION" TO DIVISION ELSE                             |  OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="COST.CNTR FILE
0061 ERRMSG="DIVISION FILE IS MISSING"; GOTO 93000                   |  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG = "CUST
0062 END                                                             |  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="JCS.SCREENS 
0063 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE                         |  *C37366 v

0064 ERRMSG="DEPARTMENT FILE IS MISSING"; GOTO 93000                 |  OPEN "","CBN.SCREENS" TO SECOND.SCREENS ELSE ERRMSG="JCS.SCR
0065 END                                                             |  *C37366 ^
0066 OPEN "","COST.CNTR" TO COST.CNTR ELSE                           |  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS 
0067 ERRMSG="COST.CNTR FILE IS MISSING"; GOTO 93000                  |  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG = "PREFIX FILE IS MIS
0068 END                                                             |  OPEN "","XREF.DATA" TO XREF.DATA ELSE ERRMSG = "XREF.DATA FI
0069 OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE                   |  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS 
0070 ERRMSG = "CUSTOMER.XREF FILE IS MISSING"; GOTO 93000            |  OPEN "","JOB.SHIP" TO JOB.SHIP ELSE ERRMSG = "JOB.SHIP FILE 

0071 END                                                             |  OPEN "","INVOICE" TO INVOICE ELSE ERRMSG = "INVOICE FILE IS 
0072 OPEN "","JCS.SCREENS" TO M.SCREENS ELSE                         |  OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE ERRMSG = "DAIL
0073 ERRMSG="JCS.SCREENS FILE IS MISSING"; GOTO 93000                |  OPEN "","TAX" TO TAX ELSE ERRMSG = "TAX FILE IS MISSING"; GO
0074 END                                                             |  OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "SHIP.VIA FILE 
0075 OPEN "","COMPANY" TO COMPANY ELSE                               |  OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE ERRMSG = "INVOIC
0076 ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000                  |  OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE ERRMSG = "INV.
0077 END                                                             |  OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG = "SALES.CODE

0078 OPEN "","PREFIX" TO PREFIX ELSE                                 |  OPEN "","COA" TO COA ELSE ERRMSG = "COA FILE IS MISSING"; G
O
0079 ERRMSG = "PREFIX FILE IS MISSING"; GOTO 93000                   |  *C37366 v
0080 END                                                             |  OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "ESTIMATE FILE 
0081 OPEN "","XREF.DATA" TO XREF.DATA ELSE                           |  OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE ERRMSG = "ESTI
0082 ERRMSG = "XREF.DATA FILE IS MISSING"; GOTO 93000                |  *C37366 ^
0083 END                                                             <  
0084 OPEN "","CONTROL" TO CONTROL ELSE                               <  

0085 ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000                  <  
0086 END                                                             <  
0087 OPEN "","JOB.SHIP" TO JOB.SHIP ELSE                             <  
0088 ERRMSG = "JOB.SHIP FILE IS MISSING"; GOTO 93000                 <  
0089 END                                                             <  
0090 OPEN "","INVOICE" TO INVOICE ELSE                               <  
0091 ERRMSG = "INVOICE FILE IS MISSING"; GOTO 93000                  <  

0092 END                                                             <  
0093 OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE                   <  
0094 ERRMSG = "DAILY.INVOICE FILE IS MISSING"; GOTO 93000            <  
0095 END                                                             <  
0096 OPEN "","TAX" TO TAX ELSE                                       <  
0097 ERRMSG = "TAX FILE IS MISSING"; GOTO 93000                      <  
0098 END                                                             <  

0099 OPEN "","SHIP.VIA" TO SHIP.VIA ELSE                             <  
0100 ERRMSG = "SHIP.VIA FILE IS MISSING"; GOTO 93000                 <  
0101 END                                                             <  
0102 OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE                     <  
0103 ERRMSG = "INVOICE.CODE FILE IS MISSING"; GOTO 93000             <  
0104 END                                                             <  
0105 OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE                   <  

0106 ERRMSG = "INV.JOB.STATS FILE IS MISSING"; GOTO 93000            <  
0107 END                                                             <  
0108 OPEN "","SALES.CODE" TO SALES.CODE ELSE                         <  
0109 ERRMSG = "SALES.CODE FILE IS MISSING"; GOTO 93000               <  
0110 END                                                             <  
0111 OPEN "","COA" TO COA ELSE                                       <  
0112 ERRMSG = "COA FILE IS MISSING"; GOTO 93000                      <  

0113 END                                                             <  
0114 OPEN "","COA" TO COA ELSE                                       <  
0115 ERRMSG = "COA FILE IS MISSING"; GOTO 93000                      <  
0116 END                                                             <  
0117 * T25764 v Open TERMS and SHERIDAN.SCREENS                      <  
0118 OPEN "","TERMS" TO TERMS ELSE ERRMSG = "TERMS FILE IS MISSING"  <  
0119 * T25764 ^                                                      <  

0133 IVC.NO = ""                                                        IVC.NO = ""
0134 GXR.CO = CONO                                                      GXR.CO = CONO
0135 ECD.SCRN.CNT = 5                                                   ECD.SCRN.CNT = 5
0136 ECD.SCRN.NAME<1> = "JOB.INVOICE.SUMMARY"                           ECD.SCRN.NAME<1> = "JOB.INVOICE.SUMMARY"
0137 ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"                          ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"
0138 ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"                            |  *C37366 v
0139                                                                 >  ECD.SCRN.FLAG<2> = 2
0140                                                                 >  * ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"
0141                                                                 >  * ECD.SCRN.NAME<3> = "CBN.INVOICE.WIP.SUB"
0142                                                                 >  * ECD.SCRN.FLAG<3> = 2

0143                                                                 >  *C42659  ECD.SCRN.NAME<4> = "CBN.INVOICE.WIP.SUB.1"
0144                                                                 >  ECD.SCRN.NAME<4> = "INVOICE.WIP.PROCESS.1"
0145                                                                 >  ECD.SCRN.FLAG<4> = 2
0146                                                                 >  *C37366 ^
0147 ECD.SCRN.NAME<5> = "INV.ALLOC.MAINT"                               ECD.SCRN.NAME<5> = "INV.ALLOC.MAINT"
0148 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0149 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1

0150                                                                 >  *      TYP = 0 ;CALL EDIT.SUB ; FILL = "#"
0151 100 MAT JOB.REC = ""                                               100 MAT JOB.REC = ""
0152 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0153 SAVE.INV.JS.REC = ""                                               SAVE.INV.JS.REC = ""
0154 ADD.SUBS = 0                                                       ADD.SUBS = 0
0155 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0156 ECD.NUM = 1                                                        ECD.NUM = 1

0196 GOSUB 3000                                                         GOSUB 3000
0197 CASE REQUEST = "SI" AND IVC.CNT                                    CASE REQUEST = "SI" AND IVC.CNT
0198 IF IVC.CNT > 2 THEN                                                IF IVC.CNT > 2 THEN
0199 IVC.START = IVC.START + 2                                          IVC.START = IVC.START + 2
0200 IF IVC.START > IVC.CNT THEN IVC.START = 1                          IF IVC.START > IVC.CNT THEN IVC.START = 1
0201 ECD.NUM = 15;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 15 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0202 ECD.NUM = 16;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 16 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0203 ECD.NUM = 17;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 17 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0204 ECD.NUM = 18;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 18 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0205 ECD.NUM = 19;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 19 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA

0206 ECD.NUM = 20;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 20 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0207 ECD.NUM = 21;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 21 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0208 ECD.NUM = 22;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 22 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0209 ECD.NUM = 23;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 23 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0210 ECD.NUM = 30;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.  |  ECD.NUM = 30 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CA
0211 END                                                                END
0212 END CASE                                                           END CASE

0257 IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 3999      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 399
0258 IF JOB.INV.CAT<1,ECD.RET.VALUE,1> = "PP" THEN                      IF JOB.INV.CAT<1,ECD.RET.VALUE,1> = "PP" THEN
0259 ERRMSG = "This is a prepayment"; GOSUB 91000; GOTO 3999            ERRMSG = "This is a prepayment"; GOSUB 91000; GOTO 3999
0260 END                                                                END
0261 MAT IVC.REC = ""                                                   MAT IVC.REC = ""
0262 IVC.NO = JOB.INV.NO<1,ECD.RET.VALUE>                            <  
0263 IVC.ID=CONO:IVC.NO                                              <  
0264 IF JOB.INV.DATE<1,ECD.RET.VALUE> = "" THEN                         IF JOB.INV.DATE<1,ECD.RET.VALUE> = "" THEN
0265 MATREAD IVC.REC FROM DAILY.INVOICE,IVC.ID ELSE                  |  MATREAD IVC.REC FROM DAILY.INVOICE, CONO:JOB.INV.NO<1,ECD.RE
0266 ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"             ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"

0266 ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"             ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"
0267 GOSUB 91000                                                        GOSUB 91000
0268 GOTO 3999                                                          GOTO 3999
0269 END                                                                END
0270 END ELSE                                                           END ELSE
0271 MATREAD IVC.REC FROM INVOICE,IVC.ID THEN                        |  MATREAD IVC.REC FROM INVOICE, CONO:JOB.INV.NO<1,ECD.RET.VALU
0272 * T27236 v   Redo logic, Must check if the job or sub-jobs are  |  ERRMSG = "Cannot locate invoice on INVOICE file";GOSUB 91000
0273 *            associated to the invoice.                         <  
0274 BAD.IVC = 1                                                     <  
0275 IF IVC.JOB.NO = JOB.NUM THEN                                    <  

0276 BAD.IVC = 0                                                     <  
0277 END ELSE                                                        <  
0278 LOCATE JOB.NUM IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN            <  
0279 BAD.IVC = 0                                                     <  
0280 END ELSE                                                        <  
0281 J.CNT = DCOUNT(JOB.SUBS<1>, VM)                                 <  
0282 FOR JJ = 1 TO J.CNT UNTIL BAD.IVC = 0                           <  

0283 TMP.JOB = JOB.SUBS<1,JJ>                                        <  
0284 IF IVC.JOB.NO = TMP.JOB THEN                                    <  
0285 BAD.IVC = 0                                                     <  
0286 END ELSE                                                        <  
0287 LOCATE TMP.JOB IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN            <  
0288 BAD.IVC = 0                                                     <  
0289 END                                                                END

0290 END                                                                END
0291 NEXT JJ                                                         |  IVC.NO = JOB.INV.NO<1,ECD.RET.VALUE>
0292 END                                                             <  
0293 END                                                             <  
0294 IF BAD.IVC = 1 THEN                                             <  
0295 * T27236 ^                                                      <  
0296 MAT IVC.REC=''                                                  <  
0297 ERRMSG='This invoice number has been reused for a different jo  <  

0298 GOSUB 91000 ; GOTO 3999                                         <  
0299 END                                                             <  
0300 END ELSE                                                        <  
0301 ERRMSG = "Cannot locate invoice on INVOICE file"                <  
0302 GOSUB 91000;GOTO 3999                                           <  
0303 END                                                             <  
0304 END                                                             <  

0304 END                                                             <  
0305 BEGIN CASE                                                         BEGIN CASE
0306 CASE IVC.NO[7,2] = "CM"                                            CASE IVC.NO[7,2] = "CM"
0307 MENU = "CREDIT"                                                    MENU = "CREDIT"
0308 ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB.F4"                            ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB.F4"
0309                                                                 >  ECD.SCRN.FLAG<2> = 1
0310 CASE IVC.NO[7,2] = "DM"                                            CASE IVC.NO[7,2] = "DM"
0311 MENU = "DEBIT"                                                     MENU = "DEBIT"
0312 ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"                             ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"
0313                                                                 >  ECD.SCRN.FLAG<2> = 1

0314 CASE 1                                                             CASE 1
0315 MENU = "INVOICE"                                                   MENU = "INVOICE"
0316 ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"                          ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"
0317 END CASE                                                           END CASE
0318 IF IVC.NO[7,2] = "PB" THEN                                         IF IVC.NO[7,2] = "PB" THEN
0319 * T27232 v   The var. ADD.SUBS will piggy back on the var. PRO  |  CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,"PREBILL","I",
0320 CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,"PREBILL","I":AD  <  
0321 END ELSE                                                           END ELSE
0322 CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,MENU,"I":ADD.SUB  |  CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,MENU,"I","")
0323 * T27232 ^                                                      <  

0324 END                                                                END
0325 IF (ADD.SUBS) THEN MAT JOB.REC = MAT MASTER.REC           ;* T  <  
0326 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0327 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0328 IF IVC.NO = "" THEN GOSUB 30001 ELSE ECD.ACTION = 3 ; CALL SCR     IF IVC.NO = "" THEN GOSUB 30001 ELSE ECD.ACTION = 3 ; CALL S
0329 IVC.START = 1                                                      IVC.START = 1
0330 3999 RETURN                                                        3999 RETURN
0331                                                                 >  * 10000 GXR.XREF = CUSTOMER

0332                                                                 >  *       GXR.FILE = JOB
0333                                                                 >  *       GXR.LOC = 34
0334                                                                 >  *       GXR.ATT<1,2> = 16
0335                                                                 >  *       GXR.LEN<1,2> = 60
0336                                                                 >  *       GXR.TOP.LINE<1,1> = "JOB XREF SEARCH"
0337                                                                 >  *       GXR.TOP.LINE<1,2> = "FOR CUSTOMER : ":CUST.NAME
0338                                                                 >  *       GXR.HEADING<1,1> = "JOB"

0339                                                                 >  *       GXR.ID = ""
0340                                                                 >  *       GXR.SRCH.ID = JOB.CUST
0341 10000*                                                             10000*
0342 GXR.NAME = "JOB"                                                   GXR.NAME = "JOB"
0343 GXR.XREF = CUSTOMER                                                GXR.XREF = CUSTOMER
0344 GXR.FILE = JOB                                                     GXR.FILE = JOB
0345 GXR.SRCH.ID = JOB.CUST                                             GXR.SRCH.ID = JOB.CUST

0401 END CASE                                                           END CASE
0402 RETURN                                                             RETURN
0403 30000*                                                             30000*
0404 ADD.SUBS = 0                                                       ADD.SUBS = 0
0405 IF JOB.SUBS # "" THEN                                              IF JOB.SUBS # "" THEN
0406                                                                 >  * T22417 v
0407                                                                 >  *        IF JOB.WIP = "" THEN
0408                                                                 >  *           CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.J
0409                                                                 >  *           ADD.SUBS = 1
0410                                                                 >  *        END ELSE

0411 ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT                       ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
0412 IF ECD.RET.VALUE = "Y" THEN                                        IF ECD.RET.VALUE = "Y" THEN
0413 CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.JS.REC)             CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.JS.REC)
0414 ADD.SUBS = 1                                                       ADD.SUBS = 1
0415 END                                                                END
0416                                                                 >  *        END
0417                                                                 >  * T22417 ^
0418 END                                                                END
0419 MAT MASTER.REC = MAT JOB.REC           ;* T27236                <  
0420 MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE                 MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE

0434 DESC.CNT = COUNT(JOB.DESC,VM) + (JOB.DESC # "")                    DESC.CNT = COUNT(JOB.DESC,VM) + (JOB.DESC # "")
0435 IF DESC.CNT THEN                                                   IF DESC.CNT THEN
0436 FOR I = 1 TO DESC.CNT ; SCV.REC(14)<1,I> = JOB.DESC<1,I> ; NEX     FOR I = 1 TO DESC.CNT ; SCV.REC(14)<1,I> = JOB.DESC<1,I> ; N
0437 END                                                                END
0438 30001*                                                             30001*
0439 IVC.CNT = DCOUNT(JOB.INV.NO,VM)                                 |  IVC.CNT = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
0440 SCV.REC(15)<1> = ""                                                SCV.REC(15)<1> = ""
0441 SCV.REC(16)<1> = ""                                                SCV.REC(16)<1> = ""
0442 SCV.REC(17)<1> = ""                                                SCV.REC(17)<1> = ""
0443 SCV.REC(18)<1> = ""                                                SCV.REC(18)<1> = ""

0456 INV.AMT = ""                                                       INV.AMT = ""
0457 PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>                              PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>
0458 PRE.PAID = PRE.PAID + JOB.INV.BAL<1,I>                             PRE.PAID = PRE.PAID + JOB.INV.BAL<1,I>
0459 GOTO 30005                                                         GOTO 30005
0460 END                                                                END
0461 IVC.ID=CONO:JOB.INV.NO<1,I>                                     <  
0462 IF JOB.INV.DATE<1,I> = "" THEN                                     IF JOB.INV.DATE<1,I> = "" THEN
0463 MATREAD IVC.REC FROM DAILY.INVOICE,IVC.ID ELSE NULL             |  MATREAD IVC.REC FROM DAILY.INVOICE, CONO:JOB.INV.NO<1,I> ELS
0464 GOSUB 40000                                                        GOSUB 40000
0465 END ELSE                                                           END ELSE

0466 MATREAD IVC.REC FROM INVOICE,IVC.ID THEN                        |  MATREAD IVC.REC FROM INVOICE,CONO:JOB.INV.NO<1,I> ELSE
0467 * T27236 v   Redo logic, Must check if the job or sub-jobs are  <  
0468 *            associated to the invoice.                         <  
0469 BAD.IVC = 1                                                     <  
0470 IF IVC.JOB.NO = JOB.NUM THEN                                    <  
0471 BAD.IVC = 0                                                     <  
0472 END ELSE                                                        <  

0473 LOCATE JOB.NUM IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN            <  
0474 BAD.IVC = 0                                                     <  
0475 END ELSE                                                        <  
0476 J.CNT = DCOUNT(JOB.SUBS<1>, VM)                                 <  
0477 FOR JJ = 1 TO J.CNT UNTIL BAD.IVC = 0                           <  
0478 TMP.JOB = JOB.SUBS<1,JJ>                                        <  
0479 IF IVC.JOB.NO = TMP.JOB THEN                                    <  

0480 BAD.IVC = 0                                                     <  
0481 END ELSE                                                        <  
0482 LOCATE TMP.JOB IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN            <  
0483 BAD.IVC = 0                                                     <  
0484 END                                                             <  
0485 END                                                             <  
0486 NEXT JJ                                                         <  

0487 END                                                             <  
0488 END                                                             <  
0489 IF BAD.IVC = 1 THEN                                             <  
0490 * T27236 ^                                                      <  
0491 MAT IVC.REC=''                                                  <  
0492 IVC.PRT.DATE="PURGED"                                           <  
0493 END                                                             <  

0494 END ELSE                                                        <  
0495 IVC.PRT.DATE = "PURGED"                                            IVC.PRT.DATE = "PURGED"
0496 END                                                                END
0497 GOSUB 50000                                                        GOSUB 50000
0498 END                                                                END
0499 30005*                                                             30005*
0500 SCV.REC(15)<1,I> = I                                               SCV.REC(15)<1,I> = I


JCSBP/JOB.MAINT                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.MAINT
Printed for thompson at 06/28/2006 04:41:56PM

0001 SUBROUTINE JOB.MAINT(CONO,ORDNO,JOBNUM,MAT COMP.REC)            |  SUBROUTINE JOB.MAINT(CONO,ORDNO,JOBNUM,CO.JES,CO.POS,CO.OPS,
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST

0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB
0010                                                                 >  *COPY>ICS.CPYLIB>COM.INV.INQ
0011 **********************************************                     **********************************************
0012 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0013 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0014 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0015 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP

0041 *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match proble     *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match prob
0042 *T22698 renee 03/26/1998 * Use the Salesman2 xref table instea     *T22698 renee 03/26/1998 * Use the Salesman2 xref table inst
0043 *                          Gen.Code for the salesrep cross ref     *                          Gen.Code for the salesrep cross r
0044 *                          displays the terminology "salesrep"     *                          displays the terminology "salesre
0045 *                          "salesman". (See C30656)                *                          "salesman". (See C30656)
0046 *T23278 markt 10/13/1998 * Add division security check          <  
0047 *T23723 markt 02/26/1999 * Move prompt from line 23 to 21.         *T23723 markt 02/26/1999 * Move prompt from line 23 to 21.
0048 *T24035 markt 06/10/1999 * When Est # is cleared, Estimate $ a  |  *T23473 rick 04/11/1999 * Modify screen to have the category
0049                                                                 >  *                         the sales code and make the sales 
0050                                                                 >  *                         from the JOB.CATEGORY.ADD file and

0051                                                                 >  *                         field in- accessable (sales.code) 
0052                                                                 >  *                         renumber the other fields.
0053                                                                 >  *T24091 rick 07/04/1999 * Modify to allow master jobs to con
0054                                                                 >  *                         four fields (Cust, categ, sales.co
0055                                                                 >  *                         type) for all sub-jobs. Changes to
0056                                                                 >  *                         fields in the master job will upon
0057                                                                 >  *                         the changes to all sub jobs (for n

0058                                                                 >  *                         jobs). When a sub-job is created t
0059                                                                 >  *                         fields will be brought in from the
0060                                                                 >  *                         and will be the defaults. This is 
0061                                                                 >  *                         work on sub-jobs when the user ent
0062                                                                 >  *                         job number different than the job 
0063                                                                 >  *                         created the pgm will replace the C
0064                                                                 >  *                         type fields already entered and wi

0065                                                                 >  *                         categ and sales code from the mast
0066                                                                 >  *                         categ and sales code on the curren
0067                                                                 >  *                         The pgm will also allow the user t
0068                                                                 >  *                         job type to differ from the master
0069                                                                 >  *                         accomodate spoilage jobs.
0070                                                                 >  *rkb 7/5/99 Note - New field in Job Rec JOB.HAS.MASTER this 
0071                                                                 >  *                   three states - original is "0" or blank 

0072                                                                 >  *                   job or a stand alone job. "1" indicates 
0073                                                                 >  *                   job and has a master.  "-1" indicates th
0074                                                                 >  *                   Master job but at least one of the four 
0075                                                                 >  *                   (categ, sales.code,cust,type) has change
0076                                                                 >  *                   updated in the Sub-Jobs.
0077                                                                 >  *
0078                                                                 >  *C35130 edvard 12/23/99  *  When Est # is cleared, Estimate 

0079 *                          fields (12 & 13) should also be cle     *                        fields (12 & 13) should also be cle
0080 *T24530 edvard 11/01/1999 * Fixed to not allow space in a key.  |  *T26706 cmykleb 06/26/2002 * Have the salesman code and csr 
0081 *T24829 edvard 02/15/2000 * JOB DESCRIPTION DOES NOT ACCEPT EN  |  *                            to the sub-jobs from the master
0082 *                           A MESSAGE *INVALID RESPONE*         |  *                            task # 24091).
0083 *T25174 gat 05/17/2000 * Do no allow change of customer on fil  <  
0084 *T25916 ajibaly 07/03/2001 * Allow ordered qty x-ref to estima  <  
0085 *T25945 edwin 07/17/01 * Validate the credit authorization ent  <  
0086 *T26334 epitka 12/28/2001 * REV12                               <  

0087 *C39402 ajibaly 01/11/2001 * Remove add'l M with removal of es  <  
0088 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  <  
0089 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   <  
0090 *T26421 thompson 03/11/2002 * Allow non-estimate jobs to be sc  <  
0091 *T26773 cmykleb 07/30/2002 * Pass the whole company record to   <  
0092 *                            JOB.FNGD.UPD pgm.                  <  
0093 *T26909 lross 10/17/2002 * See JOB.MAINT.REQUEST below.         <  

0094 *T26929 cmykleb 10/21/2002 * JOB.COMMENT display problem.       <  
0095 *T26973 adelgado 11/01/2002 * Add Sales Code description field  <  
0096 *T27495 cmykleb 06/17/2003 * Clear the data from an estimate w  <  
0097 *                            the estimate is not going to be u  <  
0098 *                            for that job.                      <  
0099 *T27885 cmykleb 06/23/2004 * Do not display the credit authori  <  
0100 *                            during entry or display. This is   <  

0101 *                            to be a secure field.              <  
0102 *T28820 wvaughan 05/10/2006 * Addition of the abilty to uncanc  <  
0103 *ENDDOC                                                            *ENDDOC
0104 **********************************************                     **********************************************
0105 *COPY>PMC.CPYLIB>COMP.OPS                                          *COPY>PMC.CPYLIB>COMP.OPS
0106 *COPY>PMC.CPYLIB>FISCAL                                            *COPY>PMC.CPYLIB>FISCAL
0107 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION

0109 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0110 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0111 *COPY>PMC.CPYLIB>SALESMAN                                          *COPY>PMC.CPYLIB>SALESMAN
0112 *COPY>PMC.CPYLIB>CSR.CODE                                          *COPY>PMC.CPYLIB>CSR.CODE
0113 *COPY>PMC.CPYLIB>SHIP.VIA                                          *COPY>PMC.CPYLIB>SHIP.VIA
0114 *COPY>PMC.CPYLIB>COMPANY           ; * T26773                   <  
0115 *COPY>PMC.CPYLIB>SALES.CODE        ; * T26973                   <  
0116 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0117 *COPY>JCS.CPYLIB>JOB.STATS                                         *COPY>JCS.CPYLIB>JOB.STATS
0118 *COPY>JCS.CPYLIB>JOB.CREDIT.STATS                                  *COPY>JCS.CPYLIB>JOB.CREDIT.STATS

0133 *COPY>POS.CPYLIB>OUTSIDE.PO                                        *COPY>POS.CPYLIB>OUTSIDE.PO
0134 *COPY>JES.CPYLIB>ESTIMATE                                          *COPY>JES.CPYLIB>ESTIMATE
0135 *COPY>JIS.CPYLIB>SYS_TKT_DEF                                       *COPY>JIS.CPYLIB>SYS_TKT_DEF
0136 *COPY>JIS.CPYLIB>SYS_SCN_DEF                                       *COPY>JIS.CPYLIB>SYS_SCN_DEF
0137 *COPY>JIS.CPYLIB>JKT_NOTIFY                                        *COPY>JIS.CPYLIB>JKT_NOTIFY
0138                                                                 >  *T23473 v
0139                                                                 >  *COPY>CBN.CPYLIB>JOB.CATEGORY.ADD
0140                                                                 >  *T23473 ^
0141 * T21796      DIM SAVE.JOB(125)                                    * T21796      DIM SAVE.JOB(125)
0142 DIM SAVE.JOB(JOB.REC.SIZE)                                         DIM SAVE.JOB(JOB.REC.SIZE)

0143 DIM EST.PAR(10)                                                    DIM EST.PAR(10)
0144 **    IMGSIZE = 275                                                **    IMGSIZE = 275
0145 IMGSIZE = 225                                                      IMGSIZE = 225
0146 DIM IMGREC(IMGSIZE)                                                DIM IMGREC(IMGSIZE)
0147 MAT EST.PAR = ""                                                   MAT EST.PAR = ""
0148 MAT EST.REC = ""                                                <  
0149 EQU EST.PAR.MATL TO EST.PAR(5)                                     EQU EST.PAR.MATL TO EST.PAR(5)
0150 PROG.FLAG = "M"                                                    PROG.FLAG = "M"
0151 MAT FISCAL.REC = ""                                                MAT FISCAL.REC = ""
0152 MAT GEN.XREF.REC = ""                                              MAT GEN.XREF.REC = ""

0153 DASHES = STR("-",80)                                               DASHES = STR("-",80)
0154 ERRMSG = ""; UNKNOWN = STR("?",20)                                 ERRMSG = ""; UNKNOWN = STR("?",20)
0155                                                                 >  *T23473 v
0156                                                                 >  OPEN "JOB.CATEGORY.ADD" TO JOB.CATEGORY.ADD ELSE
0157                                                                 >  ERRMSG = "Unable to find JOB.CATEGORY.ADD file."
0158                                                                 >  GOSUB 91000
0159                                                                 >  STOP
0160                                                                 >  END
0161                                                                 >  *T23473 ^

0161                                                                 >  *T23473 ^
0162 FIELDS.ACC = ""                                                    FIELDS.ACC = ""
0163 FIELDS.ACC1 = ""                                                   FIELDS.ACC1 = ""
0164 FIELDS.ACC2 = ""                                                   FIELDS.ACC2 = ""
0165 *CSF 25227 v SHIFT FIELDS DOWN 1 DUE TO CUST.SVC REP NOW #5.       *CSF 25227 v SHIFT FIELDS DOWN 1 DUE TO CUST.SVC REP NOW #5.
0166 FIELDS.ACC1<1,1> = 9                                            |  *T23473 v
0167 FIELDS.ACC1<1,2> = 10                                           |  *      FIELDS.ACC1<1,1> = 9
0168 FIELDS.ACC1<1,3> = 11                                           |  *      FIELDS.ACC1<1,2> = 10
0169 FIELDS.ACC1<1,4> = 15                                           |  *      FIELDS.ACC1<1,3> = 11
0170 FIELDS.ACC1<1,5> = 17                                           |  *      FIELDS.ACC1<1,4> = 15

0171 FIELDS.ACC1<1,6> = 18                                           |  *      FIELDS.ACC1<1,5> = 17
0172 FIELDS.ACC1<1,7> = 20                                           |  *      FIELDS.ACC1<1,6> = 18
0173 FIELDS.ACC1<1,8> = 21                                           |  *      FIELDS.ACC1<1,7> = 20
0174 FIELDS.ACC1<1,9> = 23                                           |  *      FIELDS.ACC1<1,8> = 21
0175 FIELDS.ACC2<1,1> = 11                                           |  *      FIELDS.ACC1<1,9> = 23
0176 FIELDS.ACC2<1,2> = 17                                           |  *      FIELDS.ACC2<1,1> = 11
0177 FIELDS.ACC2<1,3> = 18                                           |  *      FIELDS.ACC2<1,2> = 17

0178 FIELDS.ACC2<1,4> = 23                                           |  *      FIELDS.ACC2<1,3> = 18
0179                                                                 >  *      FIELDS.ACC2<1,4> = 23
0180                                                                 >  FIELDS.ACC1<1,1> = 8
0181                                                                 >  FIELDS.ACC1<1,2> = 11
0182                                                                 >  FIELDS.ACC1<1,3> = 10
0183                                                                 >  FIELDS.ACC1<1,4> = 14
0184                                                                 >  FIELDS.ACC1<1,5> = 16

0185                                                                 >  FIELDS.ACC1<1,6> = 17
0186                                                                 >  FIELDS.ACC1<1,7> = 19
0187                                                                 >  FIELDS.ACC1<1,8> = 20
0188                                                                 >  FIELDS.ACC1<1,9> = 22
0189                                                                 >  FIELDS.ACC2<1,1> = 10
0190                                                                 >  FIELDS.ACC2<1,2> = 16
0191                                                                 >  FIELDS.ACC2<1,3> = 17

0192                                                                 >  FIELDS.ACC2<1,4> = 22
0193                                                                 >  *T23473 ^
0194 *CSF 25227 ^                                                       *CSF 25227 ^
0195 FIELDS.ACC2<1,5> = 1                                               FIELDS.ACC2<1,5> = 1
0196 FSCAL.PER = ""                                                     FSCAL.PER = ""
0197 *     PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)                      *     PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
0198 PORT.NO = 'TTY'                                                    PORT.NO = 'TTY'

0203 GXR.CO = CONO                                                      GXR.CO = CONO
0204 BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1                     BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1
0205 BEGIN.PAG = 7; PAGE.SIZ = 13; LIN.SPACE = 1                        BEGIN.PAG = 7; PAGE.SIZ = 13; LIN.SPACE = 1
0206 ESN = ECD.SCRN.NO                                                  ESN = ECD.SCRN.NO
0207 100 *                                                              100 *
0208 MAT SRESV.REC='' ;* used only SERIAL.RESERVE.SEL                <  
0209 IF JOBNUM = "" THEN RELEASE                                        IF JOBNUM = "" THEN RELEASE
0210 OLD.CUST = ""                                                      OLD.CUST = ""
0211 OLD.MASTER = ""                                                    OLD.MASTER = ""
0212 OLD.EST = ""                                                       OLD.EST = ""

0234 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0235 GOTO 110                                                           GOTO 110
0236 END                                                                END
0237 101*                                                               101*
0238 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0239 ECD.RET.VALUE = TRIM(ECD.RET.VALUE) ; * 24530                   <  
0240 BEGIN CASE                                                         BEGIN CASE
0241 CASE ECD.RET.VALUE = "END"                                         CASE ECD.RET.VALUE = "END"
0242 JOBNO = ""; GOTO 99999                                             JOBNO = ""; GOTO 99999
0243 CASE ECD.RET.VALUE = "INIT"                                        CASE ECD.RET.VALUE = "INIT"

0254 GXR.FILE = JOB                                                     GXR.FILE = JOB
0255 GXR.SRCH.ID = JOB.CUST                                             GXR.SRCH.ID = JOB.CUST
0256 CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)             CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0257 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0258 IF GXR.ID # "" THEN                                                IF GXR.ID # "" THEN
0259 * T26126 v                                                      |  MATREADU JOB.REC FROM JOB,CONO:GXR.ID ELSE
0260 MATREADU JOB.REC FROM JOB,CONO:GXR.ID LOCKED                    <  
0261 ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS(  <  
0262 GOSUB 91000;GOTO 100                                            <  
0263 END ELSE                                                        <  

0264 * T26126 ^                                                      <  
0265 RELEASE JOB, CONO:GXR.ID                                           RELEASE JOB, CONO:GXR.ID
0266 ERRMSG = "JOB ":GXR.ID:" IS MISSING"; GOSUB 91000; GOTO 100        ERRMSG = "JOB ":GXR.ID:" IS MISSING"; GOSUB 91000; GOTO 100
0267 END                                                                END
0268 *T23278 v                                                       <  
0269 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0270 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  

0271 IF ERRMSG # '' THEN                                             <  
0272 GOSUB 91000; GOTO 100                                           <  
0273 END                                                             <  
0274 *T23278 ^                                                       <  
0275 END ELSE                                                           END ELSE
0276 ERRMSG = "NO JOB SELECTION FOR CUSTOMER - ":JOB.CUST               ERRMSG = "NO JOB SELECTION FOR CUSTOMER - ":JOB.CUST
0277 GOSUB 91000; GOTO 100                                              GOSUB 91000; GOTO 100

0285 NEWJOB = 1; JOBNO = ECD.RET.VALUE                                  NEWJOB = 1; JOBNO = ECD.RET.VALUE
0286 MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""              MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
0287 GOSUB 710                                                          GOSUB 710
0288 IF ERR.FLG THEN GOTO 100                                           IF ERR.FLG THEN GOTO 100
0289 END ELSE                                                           END ELSE
0290 * T26126 v                                                      |  MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE THEN
0291 MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE LOCKED            |  JOBNO = ECD.RET.VALUE; GOSUB 700; GOSUB 30000
0292 ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS(  <  
0293 GOSUB 91000;GOTO 100                                            <  
0294 END THEN                                                        <  

0295 * T26126 ^                                                      <  
0296 *T23278 v                                                       <  
0297 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0298 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0299 IF ERRMSG # '' THEN                                             <  
0300 GOSUB 91000; GOTO 100                                           <  
0301 END                                                             <  

0302 *T23278 ^                                                       <  
0303 JOBNO = ECD.RET.VALUE                                           <  
0304 GOSUB 700; GOSUB 30000                                          <  
0305 IF ERRMSG # "" THEN                                                IF ERRMSG # "" THEN
0306 IF JOBNUM = "" THEN                                                IF JOBNUM = "" THEN
0307 GOTO 100                                                           GOTO 100
0308 END ELSE                                                           END ELSE

0311 END                                                                END
0312 END ELSE                                                           END ELSE
0313 RELEASE JOB, CONO:ECD.RET.VALUE                                    RELEASE JOB, CONO:ECD.RET.VALUE
0314 BEGIN CASE                                                         BEGIN CASE
0315 CASE ORDNO = "" OR OPCO.JOB.BLD = "N"                              CASE ORDNO = "" OR OPCO.JOB.BLD = "N"
0316                                                                 >  * T22112
0317                                                                 >  *T22112 MAKE GUI                  X = 0; Y = 23; TYP = 8
0318                                                                 >  ***** T23723 v
0319                                                                 >  *                  X = 0; Y = 23; TYP = 18
0320 X = 0; Y = 21; TYP = 18                                            X = 0; Y = 21; TYP = 18

0321                                                                 >  ***** T23723 ^
0322 PMSG = "Job not on file. Do you want to add (Y/N)?"                PMSG = "Job not on file. Do you want to add (Y/N)?"
0323 CALL EDIT.SUB                                                      CALL EDIT.SUB
0324 BEGIN CASE                                                         BEGIN CASE
0325 CASE VALUE = "Y"                                                   CASE VALUE = "Y" 
0326                                                                 >  *T22112 MAKE GUI                         PRINT @(0,23):CL:
0327 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"

0328 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0329 CASE 1                                                             CASE 1
0330                                                                 >  *T22112 MAKE GUI                         PRINT @(0,23):CL:
0331 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0332 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0333 GOTO 100                                                           GOTO 100
0334 END CASE                                                           END CASE
0335                                                                 >  * T22112
0336 NEWJOB = 1; JOBNO = ECD.RET.VALUE                                  NEWJOB = 1; JOBNO = ECD.RET.VALUE

0343 X = 0; Y = 23; TYP = 18                                            X = 0; Y = 23; TYP = 18
0344 PMSG = "No Back Order quantity for this order. Continue (Y/N)      PMSG = "No Back Order quantity for this order. Continue (Y/N
0345 CALL EDIT.SUB                                                      CALL EDIT.SUB
0346 IF VALUE # "Y" THEN GOTO 99999                                     IF VALUE # "Y" THEN GOTO 99999
0347 END                                                                END
0348 JOBNO = ECD.RET.VALUE                                           |  JOBNO = ECD.RET.VALUE; JB.BLD = 0; EST.BLD = 0
0349 ; JB.BLD = 0; EST.BLD = 0                                       |  CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,CO.JES,CO.POS,CO.O
0350 *T26773 v                                                       <  
0351 *              CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,CO.JE  <  
0352 CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,EST.BLD,MAT COMP.REC  <  

0353 *T26773 ^                                                       <  
0354 GOSUB 700; ERRMSG = ""; GOSUB 30200                                GOSUB 700; ERRMSG = ""; GOSUB 30200
0355 CASE 1                                                             CASE 1
0356 X = 0; Y = 23; TYP = 18                                            X = 0; Y = 23; TYP = 18
0357 PMSG = "Cannot locate Job (":ECD.RET.VALUE:"). Do you want to      PMSG = "Cannot locate Job (":ECD.RET.VALUE:"). Do you want t
0358 CALL EDIT.SUB                                                      CALL EDIT.SUB
0359 BEGIN CASE                                                         BEGIN CASE

0360 CASE VALUE = "Y"                                                   CASE VALUE = "Y"
0361 JOBNO = ECD.RET.VALUE                                           |  JOBNO = ECD.RET.VALUE; JB.BLD = 0; EST.BLD = 0
0362 JB.BLD = 0; EST.BLD = 0                                         |  CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,CO.JES,CO.POS,CO.O
0363 *T26773 v                                                       <  
0364 *                    CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD  <  
0365 CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,EST.BLD,MAT COMP.REC  <  
0366 *T26773 ^                                                       <  
0367 GOSUB 700; ERRMSG = ""; GOSUB 30200                                GOSUB 700; ERRMSG = ""; GOSUB 30200

0378 * ALWAYS CHECK JCSBP JOB.MAINT.REQUEST                             * ALWAYS CHECK JCSBP JOB.MAINT.REQUEST
0379 ****************************************************               ****************************************************
0380 *                                                                  *
0381 *--- REQUEST ROUTINE                                               *--- REQUEST ROUTINE
0382 300*                                                               300*
0383 *COPY>JCSBP>JOB.MAINT.REQUEST                                   |  *COPY>CBNBP>JOB.MAINT.REQUEST
0384 *-----------------------*                                          *-----------------------*
0385 *---   SUBROUTINES   ---*                                          *---   SUBROUTINES   ---*
0386 *-----------------------*                                          *-----------------------*
0387 700*                                                               700*

0388 OLD.CUST = JOB.CUST; OLD.MASTER = JOB.MASTER                       OLD.CUST = JOB.CUST; OLD.MASTER = JOB.MASTER
0389 OLD.EST = JOB.EST; PREV.CRED.AUTH = JOB.CREDIT                     OLD.EST = JOB.EST; PREV.CRED.AUTH = JOB.CREDIT
0390 PRIOR.EST = JOB.EST                                                PRIOR.EST = JOB.EST
0391 MAT EST.PAR = ""                                                   MAT EST.PAR = ""
0392 LINES = DCOUNT(JOB.DESC,VM)                                        LINES = DCOUNT(JOB.DESC,VM)
0393                                                                 >  *T24091 v
0394                                                                 >  IF JOB.HAS.MASTER < 0 THEN JOB.HAS.MASTER=0
0395                                                                 >  *T24091 ^
0396 ECD.NUM = 8; GOSUB 20000                                           ECD.NUM = 8; GOSUB 20000
0397 RETURN                                                             RETURN

0407 IF FLG = "N" THEN                                                  IF FLG = "N" THEN
0408 *TASK 16293                                                        *TASK 16293
0409 IF NEWJOB THEN                                                     IF NEWJOB THEN
0410 *21163 v                                                           *21163 v
0411 IF JOB.EST = "" THEN                                               IF JOB.EST = "" THEN
0412 FOR REQUEST = 1 TO 20                                           |  *T23473v
0413 ON REQUEST GOSUB 1200,1300,1400,1450,1500,1600,1700,1800,1900,  |  ***                  FOR REQUEST = 1 TO 20
0414                                                                 >  *T23473               ON REQUEST GOSUB 1200,1300,1400,1450,1
0415                                                                 >  FOR REQUEST = 1 TO 19
0416                                                                 >  *T23473 ^              

0417                                                                 >  ON REQUEST GOSUB 1200,1300,1400,1450,1500,1600,1800,1900,200
0418 IF ECD.RET.VALUE = "END" THEN                                      IF ECD.RET.VALUE = "END" THEN
0419 ERR.FLG = 1; GOTO 719                                              ERR.FLG = 1; GOTO 719
0420 *                 IF JOBNUM # "" THEN                              *                 IF JOBNUM # "" THEN
0421 *                    GOTO 101                                      *                    GOTO 101
0422 *                 END ELSE                                         *                 END ELSE
0423 *                    GOTO 100                                      *                    GOTO 100

0423 *                    GOTO 100                                      *                    GOTO 100
0424 *                 END                                              *                 END
0425 END                                                                END
0426 NEXT REQUEST                                                       NEXT REQUEST
0427 END ELSE                                                           END ELSE
0428 FOR REQUEST = 1 TO 19                                           |  *T23473 v
0429 ON REQUEST GOSUB 1200,1400,1450,1500,1600,1700,1800,1900,2000,  |  ***            FOR REQUEST = 1 TO 19
0430                                                                 >  ***               ON REQUEST GOSUB 1200,1400,1450,1500,1600,
0431                                                                 >  FOR REQUEST = 1 TO 18
0432                                                                 >  ON REQUEST GOSUB 1200,1400,1450,1500,1600,1800,1900,2000,210

0433                                                                 >  *T23473 ^
0434 IF ECD.RET.VALUE = "END" THEN                                      IF ECD.RET.VALUE = "END" THEN
0435 ERR.FLG = 1; GOTO 719                                              ERR.FLG = 1; GOTO 719
0436 END                                                                END
0437 NEXT REQUEST                                                       NEXT REQUEST
0438 END                                                                END
0439 *T21163 ^                                                          *T21163 ^

0462 719*                                                               719*
0463 RETURN                                                             RETURN
0464 1100*                                                              1100*
0465 IF JOB.EST = '' THEN SCV.REC(25)<ESN> = ''   ;*T22154 <            IF JOB.EST = '' THEN SCV.REC(25)<ESN> = ''   ;*T22154 <
0466 ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT                       ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
0467 1111 *                                                          <  
0468 BEGIN CASE                                                         BEGIN CASE
0469 CASE ECD.RET.VALUE = "END"                                         CASE ECD.RET.VALUE = "END"
0470 SCV.REC(25)<ESN> = JOB.EST                                         SCV.REC(25)<ESN> = JOB.EST
0471 ECD.NUM = 25; ECD.ACTION = 5; CALL SCRN.EDIT                       ECD.NUM = 25; ECD.ACTION = 5; CALL SCRN.EDIT

0472                                                                 >  *     CASE ECD.RET.VALUE = ""
0473                                                                 >  *        JOB.EST = ""
0474 CASE ECD.RET.VALUE = "???"                                         CASE ECD.RET.VALUE = "???"
0475 *C26703 v                                                          *C26703 v
0476 *        PERFORM "EST.XREF"                                        *            PERFORM "EST.XREF"
0477 PARAM = "SELECT"                                                   PARAM = "SELECT"
0478 WRITE PARAM ON CONTROL,"EST.XREF.":PORT.NO                         WRITE PARAM ON CONTROL,"EST.XREF.":PORT.NO

0483 SCV.REC(25)<ESN> = EST.KEY                                         SCV.REC(25)<ESN> = EST.KEY
0484 ECD.DEFAULT = EST.KEY                                              ECD.DEFAULT = EST.KEY
0485 *C26703 ^                                                          *C26703 ^
0486 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0487 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0488 *T28222 v                                                       |  GOTO 1100
0489 *        GOTO 1100                                              <  
0490 GOTO 1111                                                       <  
0491 *T28222 ^                                                       <  
0492 CASE (ECD.RET.VALUE # "" AND CO.JES = "Y") OR (ECD.RET.VALUE =     CASE (ECD.RET.VALUE # "" AND CO.JES = "Y") OR (ECD.RET.VALUE

0502 IF JOB.DIV # CHK.EST.DIV THEN                                      IF JOB.DIV # CHK.EST.DIV THEN
0503 ERRMSG="Est Div of ":CHK.EST.DIV:" does not match Job Div. Ent     ERRMSG="Est Div of ":CHK.EST.DIV:" does not match Job Div. E
0504 GOSUB 91000                                                        GOSUB 91000
0505 GOTO 1100                                                          GOTO 1100
0506 END                                                                END
0507 *T23278 v                                                       <  
0508 DIV.CODE = CHK.EST.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = '  <  
0509 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0510 IF ERRMSG # '' THEN                                             <  
0511 GOSUB 91000; GOTO 1100                                          <  

0512 END                                                                END
0513 *T23278 ^                                                       <  
0514 END                                                             <  
0515 *T20699 ^                                                          *T20699 ^         
0516 *   EST.JOB = ECD.RET.VALUE                                        *   EST.JOB = ECD.RET.VALUE
0517 IF EST.JOB # "" THEN                                               IF EST.JOB # "" THEN
0518 IF JOB.MASTER # "" AND EST.JOB # JOB.MASTER THEN                   IF JOB.MASTER # "" AND EST.JOB # JOB.MASTER THEN
0519 ERRMSG = "Estimate belongs to another Master Job"                  ERRMSG = "Estimate belongs to another Master Job"

0523 IF EST.STATUS<1,1> = "LOST" THEN                                   IF EST.STATUS<1,1> = "LOST" THEN
0524 ERRMSG = "Estimate was defined as lost on ":OCONV(EST.STAT.DAT     ERRMSG = "Estimate was defined as lost on ":OCONV(EST.STAT.D
0525 GOSUB 91000                                                        GOSUB 91000
0526 GOTO 1100                                                          GOTO 1100
0527 END                                                                END
0528 ***** T24035 v                                                  <  
0529 END ELSE                                                           END ELSE
0530                                                                 >  *C35130 v
0531 SCV.REC(26)<ESN> = ''; JOB.EST.COST = ''; JOB.CONF.AMT = ''        SCV.REC(26)<ESN> = ''; JOB.EST.COST = ''; JOB.CONF.AMT = ''
0532 ECD.NUM = 26; ECD.ACTION = 5; CALL SCRN.EDIT                       ECD.NUM = 26; ECD.ACTION = 5; CALL SCRN.EDIT               

0533 SCV.REC(35)<ESN> = ''; JOB.EST.SALE = ''                           SCV.REC(35)<ESN> = ''; JOB.EST.SALE = ''                   
0534 ECD.NUM = 35; ECD.ACTION = 5; CALL SCRN.EDIT                       ECD.NUM = 35; ECD.ACTION = 5; CALL SCRN.EDIT               
0535 *CSF39402 v                                                     |  *C35130
0536 SCV.REC(2)<ESN> = ''; JOB.PRICE.PER.THOU = ''                   <  
0537 ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT                     <  
0538 *CSF39402 ^                                                     <  
0539 ***** T24035 ^                                                  <  
0540 END                                                                END
0541 ESTAT = 0      ;*T22154 <                                          ESTAT = 0      ;*T22154 <

0544 CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST     CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET.VALUE,MAT E
0545 *T21079    IF ESTAT = 0 THEN GOSUB 30000 ELSE GOTO 1100            *T21079    IF ESTAT = 0 THEN GOSUB 30000 ELSE GOTO 1100
0546 IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100;* T21079              IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100;* T21079
0547 NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0                          NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0
0548 CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST     CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,ECD.RET.VALUE,MAT E
0549 *T27495 v                                                       <  
0550 IF ESTAT # 0 THEN                                               <  
0551 MAT JOB.REC = ""                                                <  
0552 FOR I = 1 TO 75                                                 <  
0553 SCV.REC(I)<ESN> = ""                                            <  

0554 NEXT I                                                          <  
0555 ECD.ACTION = 6 ; CALL SCRN.EDIT                                 <  
0556 SCV.REC(7)<ESN> = JOBNO                                         <  
0557 ECD.NUM = 7                                                     <  
0558 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0559 NEW.EST = 1                                                     <  
0560 GOTO 1100                                                       <  

0561 END                                                             <  
0562 *T27495 ^                                                       <  
0563 CASE PRIOR.EST # '' AND ECD.RET.VALUE = ''                         CASE PRIOR.EST # '' AND ECD.RET.VALUE = ''
0564 JOB.EST = ''                                                       JOB.EST = ''
0565 CALL JOB.BOOK.SUB(CONO,"4",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT E     CALL JOB.BOOK.SUB(CONO,"4",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT
0566 CASE PRIOR.EST = ECD.RET.VALUE                                     CASE PRIOR.EST = ECD.RET.VALUE
0567 CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT E     CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT

0566 CASE PRIOR.EST = ECD.RET.VALUE                                     CASE PRIOR.EST = ECD.RET.VALUE
0567 CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT E     CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT
0568 CASE PRIOR.EST # ECD.RET.VALUE                                     CASE PRIOR.EST # ECD.RET.VALUE
0569 CALL JOB.BOOK.SUB(CONO,"6",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT E     CALL JOB.BOOK.SUB(CONO,"6",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT
0570 END CASE                                                           END CASE
0571 GOSUB 30100 ; * T26929                                          |  GOSUB 30100 ;*C40761
0572 *T25916 v                                                       <  
0573 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  
0574 SCV.REC(ECD.NUM)<ESN> = GXR.ID                                  <  
0575 GOSUB 30500                                                     <  

0576 ECD.NUM = 25                                                    <  
0577 SCV.REC(ECD.NUM)<ESN> = JOB.EST                                 <  
0578 ECD.ACTION = 5; CALL SCRN.EDIT                                  <  
0579 *T25916 ^                                                       <  
0580 ******************                                                 ******************
0581 *        IF NEW.EST THEN                                           *        IF NEW.EST THEN
0582 *           CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET.V     *           CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET

0611 JOB.EST = ECD.RET.VALUE                                            JOB.EST = ECD.RET.VALUE
0612 PRIOR.EST = ECD.RET.VALUE                                          PRIOR.EST = ECD.RET.VALUE
0613 END CASE                                                           END CASE
0614 1199 RETURN                                                        1199 RETURN
0615 1200*                                                              1200*
0616                                                                 >  *T24091 v
0617                                                                 >  OLD.JM.CUST=JOB.CUST
0618                                                                 >  *T24091 ^      
0619 BEGIN CASE                                                         BEGIN CASE
0620 CASE JOB.STATUS # ""                                               CASE JOB.STATUS # ""

0627 ERRMSG = "There are orders linked to this job"                     ERRMSG = "There are orders linked to this job"
0628 GOSUB 91000; GOTO 1299                                             GOSUB 91000; GOTO 1299
0629 CASE ORDNO # "" AND OPCO.JOB.BLD # "N"                             CASE ORDNO # "" AND OPCO.JOB.BLD # "N"
0630 ERRMSG = "Customer Must Match Customer On Order"                   ERRMSG = "Customer Must Match Customer On Order"
0631 GOSUB 91000; GOTO 1299                                             GOSUB 91000; GOTO 1299
0632 *T25174                                                         |  *T24091 v
0633 CASE JOB.SUBS # "" AND JOBNO # ""                               |  CASE JOB.HAS.MASTER > 0
0634 ERRMSG = "There are Sub Jobs use Change Job Cust to change Cus  |  ERRMSG="This job has a Master Job and the Customer is defaul
0635 GOSUB 91000; GOTO 1299                                             GOSUB 91000; GOTO 1299
0636 *T25174                                                         |  *T24091 ^

0637 END CASE                                                           END CASE
0638 *CSF 24303 v                                                    <  
0639 ORIG.CUST = JOB.CUST                                            <  
0640 *CSF 24303 ^                                                    <  
0641 ECD.NUM = 9                                                        ECD.NUM = 9
0642 ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = CUSTOMER; ECD.PREFIX.ID     ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = CUSTOMER; ECD.PREFIX.
0643 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0644 BEGIN CASE                                                         BEGIN CASE

0695 MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER ELSE                     MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER ELSE
0696 ERRMSG = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER                  ERRMSG = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER
0697 GOSUB 91000; GOTO 1200                                             GOSUB 91000; GOTO 1200
0698 END                                                                END
0699 MASTER.CUST = JOB.CUST                                             MASTER.CUST = JOB.CUST
0700                                                                 >  *T24091 V New logic to capture/update the four fields catego
0701                                                                 >  *         sales code, type and customer
0702                                                                 >  HOLD.CATG=JOB.CATG
0703                                                                 >  HOLD.SALES.CODE=JOB.SALES.CODE
0704                                                                 >  HOLD.CUST=JOB.CUST

0705                                                                 >  HOLD.TYPE=JOB.TYPE
0706                                                                 >  *T26706 v
0707                                                                 >  HOLD.SLSMN=JOB.SLSMN
0708                                                                 >  HOLD.CSR=JOB.CSR
0709                                                                 >  *T26706 ^
0710                                                                 >  GOSUB LOAD.MASTER.DATA
0711                                                                 >  *T24091 ^         

0712 MAT JOB.REC = MAT SAVE.JOB                                         MAT JOB.REC = MAT SAVE.JOB
0713 IF GXR.ID # MASTER.CUST THEN                                       IF GXR.ID # MASTER.CUST THEN
0714 ERRMSG = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CUST     ERRMSG = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CU
0715 GOSUB 91000; GOTO 1200                                             GOSUB 91000; GOTO 1200
0716 END                                                                END
0717                                                                 >  *T24091 v
0718                                                                 >  IF OLD.JM.CUST # GXR.ID AND JOB.SUBS # "" THEN
0719                                                                 >  JOB.HAS.MASTER = -1
0720 END                                                                END
0721                                                                 >  *T24091 ^         

0722                                                                 >  END
0723 IF CUST.CREDIT = "N" THEN                                          IF CUST.CREDIT = "N" THEN
0724 ERRMSG = "THERE IS NO CREDIT FOR THIS CUSTOMER"                    ERRMSG = "THERE IS NO CREDIT FOR THIS CUSTOMER"
0725 GOSUB 91000; GOTO 1200                                             GOSUB 91000; GOTO 1200
0726 END                                                                END
0727 JOB.CUST = GXR.ID                                                  JOB.CUST = GXR.ID
0728 1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)                               1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)

0777 READV ORD.DIV FROM ORDER, CONO:JOB.ORDER,56 THEN                   READV ORD.DIV FROM ORDER, CONO:JOB.ORDER,56 THEN
0778 MATREAD DIV.REC FROM DIVISION, CONO:ORD.DIV ELSE                   MATREAD DIV.REC FROM DIVISION, CONO:ORD.DIV ELSE
0779 ERRMSG = "DIVISION ":ORD.DIV:" IS MISSING"; GOSUB 91000            ERRMSG = "DIVISION ":ORD.DIV:" IS MISSING"; GOSUB 91000
0780 RETURN                                                             RETURN
0781 END                                                                END
0782 *T23278 v                                                       <  
0783 DIV.CODE = ORD.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0784 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0785 IF ERRMSG # '' THEN                                             <  
0786 GOSUB 91000; RETURN                                             <  

0787 END                                                             <  
0788 *T23278 ^                                                       <  
0789 JOB.DIV = ORD.DIV                                                  JOB.DIV = ORD.DIV
0790 SCV.REC(19)<ESN> = JOB.DIV                                         SCV.REC(19)<ESN> = JOB.DIV
0791 ECD.NUM = 19; SCV.REC(ECD.NUM)<ESN> = JOB.DIV                      ECD.NUM = 19; SCV.REC(ECD.NUM)<ESN> = JOB.DIV
0792 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0793 SCV.REC(20)<ESN> = DIV.DESC                                        SCV.REC(20)<ESN> = DIV.DESC

0811 END ELSE                                                           END ELSE
0812 MATREAD DIV.REC FROM DIVISION, CONO:GXR.ID ELSE                    MATREAD DIV.REC FROM DIVISION, CONO:GXR.ID ELSE
0813 ERRMSG = "DIVISION ":GXR.ID:" IS MISSING"; GOSUB 91000             ERRMSG = "DIVISION ":GXR.ID:" IS MISSING"; GOSUB 91000
0814 GOSUB 30500; GOTO 1300                                             GOSUB 30500; GOTO 1300
0815 END                                                                END
0816 *T23278 v                                                       <  
0817 DIV.CODE = GXR.ID; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''      <  
0818 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0819 IF ERRMSG # '' THEN                                             <  
0820 GOSUB 91000; GOTO 1300                                          <  

0821 END                                                             <  
0822 *T23278 ^                                                       <  
0823 JOB.DIV = GXR.ID                                                   JOB.DIV = GXR.ID
0824 SCV.REC(19)<ESN> = JOB.DIV                                         SCV.REC(19)<ESN> = JOB.DIV
0825 SCV.REC(20)<ESN> = DIV.DESC                                        SCV.REC(20)<ESN> = DIV.DESC
0826 GOSUB 30500                                                        GOSUB 30500
0827 END                                                                END

0830 MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE             MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
0831 ERRMSG = "INVALID DIVISION"                                        ERRMSG = "INVALID DIVISION"
0832 GOSUB 91000                                                        GOSUB 91000
0833 GOTO 1300                                                          GOTO 1300
0834 END                                                                END
0835 *T23278 v                                                       <  
0836 DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG =  <  
0837 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0838 IF ERRMSG # '' THEN                                             <  
0839 GOSUB 91000; GOTO 1300                                          <  

0840 END                                                             <  
0841 *T23278 ^                                                       <  
0842 JOB.DIV = ECD.RET.VALUE                                            JOB.DIV = ECD.RET.VALUE
0843 ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = DIV.DESC                     ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = DIV.DESC
0844 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0845 END                                                                END
0846 END                                                                END

0847 1399 RETURN                                                        1399 RETURN
0848 *                                                                  *
0849 1400 ECD.NUM = 11                                               |  1400 *
0850                                                                 >  *T26706 v
0851                                                                 >  IF JOB.HAS.MASTER GT 0 THEN
0852                                                                 >  ERRMSG = "This job has a Master Job and the Sales Rep is def
0853                                                                 >  GOSUB 91000
0854                                                                 >  RETURN
0855                                                                 >  END

0856                                                                 >  *T26706 ^
0857                                                                 >  ECD.NUM = 11
0858 IF JOB.SLSMN = "" THEN SCV.REC(11)<ESN> = CUST.SALESMAN            IF JOB.SLSMN = "" THEN SCV.REC(11)<ESN> = CUST.SALESMAN
0859 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0860 IF ECD.RET.VALUE = "???" THEN                                      IF ECD.RET.VALUE = "???" THEN
0861 * T22698 v Use SALESMAN2 instead of GEN.CODE                       * T22698 v Use SALESMAN2 instead of GEN.CODE
0862 *        GXR.NAME = "GEN.CODE"                                     *        GXR.NAME = "GEN.CODE"

0880 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0881 END                                                                END
0882 RETURN                                                             RETURN
0883 *                                                                  *
0884 1450 ; * CSR CODE                                                  1450 ; * CSR CODE
0885                                                                 >  *T26706 v
0886                                                                 >  IF JOB.HAS.MASTER GT 0 THEN
0887                                                                 >  ERRMSG = "This job has a Master Job and the CSR is defaulted
0888                                                                 >  GOSUB 91000
0889                                                                 >  RETURN

0890                                                                 >  END
0891                                                                 >  *T26706 ^
0892 IF JOB.CSR = "" THEN ECD.DEFAULT = CUST.CSR.CODE                   IF JOB.CSR = "" THEN ECD.DEFAULT = CUST.CSR.CODE
0893 ECD.NUM = 50; ECD.ACTION = 4; CALL SCRN.EDIT                       ECD.NUM = 50; ECD.ACTION = 4; CALL SCRN.EDIT
0894 BEGIN CASE                                                         BEGIN CASE
0895 CASE ECD.RET.VALUE = "END"                                         CASE ECD.RET.VALUE = "END"
0896 GOTO 1499                                                          GOTO 1499

0916 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0917 *                                                                  *
0918 1499 ;*                                                            1499 ;*
0919 RETURN                                                             RETURN
0920 *                                                                  *
0921 1500 ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT               |  1500  *
0922                                                                 >  *T24091 v
0923                                                                 >  OLD.JM.TYPE=JOB.TYPE  
0924                                                                 >  *T24091 ^
0925                                                                 >  ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT

0926 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
0927 JOB.TYPE = ECD.RET.VALUE                                           JOB.TYPE = ECD.RET.VALUE
0928 GOSUB 40000                                                        GOSUB 40000
0929 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0930 END                                                                END
0931                                                                 >  *T24091 v
0932                                                                 >  IF OLD.JM.TYPE # JOB.TYPE AND JOB.SUBS # "" THEN
0933                                                                 >  JOB.HAS.MASTER = -1
0934                                                                 >  END
0935                                                                 >  *T24091 ^

0936 RETURN                                                             RETURN
0937 *                                                                  *
0938 1600 ECD.NUM = 17                                                  1600 ECD.NUM = 17
0939 IF JOB.SUBS # "" THEN                                              IF JOB.SUBS # "" THEN
0940 JOB.MASTER = JOBNO; SCV.REC(ECD.NUM)<ESN> = JOB.MASTER             JOB.MASTER = JOBNO; SCV.REC(ECD.NUM)<ESN> = JOB.MASTER
0941 ECD.ACTION = 5; CALL SCRN.EDIT; GOTO 1699                       |  ECD.ACTION = 5; CALL SCRN.EDIT
0942                                                                 >  *T24091 v
0943                                                                 >  JOB.HAS.MASTER=0
0944                                                                 >  *T24091 ^
0945                                                                 >  GOTO 1699

0966 GOSUB 91000; GOTO 1600                                             GOSUB 91000; GOTO 1600
0967 END                                                                END
0968 END                                                                END
0969 END                                                                END
0970 JOB.MASTER = JOBNO                                                 JOB.MASTER = JOBNO
0971                                                                 >  *T24091 v
0972                                                                 >  JOB.HAS.MASTER=0
0973                                                                 >  *T24091 ^
0974 GOTO 1699                                                          GOTO 1699
0975 CASE 1                                                             CASE 1

0988 IF JOB.MASTER = "" THEN                                            IF JOB.MASTER = "" THEN
0989 MASTER.JOB = ECD.RET.VALUE                                         MASTER.JOB = ECD.RET.VALUE
0990 END ELSE                                                           END ELSE
0991 MASTER.JOB = JOB.MASTER                                            MASTER.JOB = JOB.MASTER
0992 END                                                                END
0993                                                                 >  *T24091 v New logic to capture and update the four fields ca
0994                                                                 >  *         sales code, type and customer
0995                                                                 >  HOLD.CATG=JOB.CATG
0996                                                                 >  HOLD.SALES.CODE=JOB.SALES.CODE
0997                                                                 >  HOLD.CUST=JOB.CUST

0998                                                                 >  HOLD.TYPE=JOB.TYPE
0999                                                                 >  *T26706 v
1000                                                                 >  HOLD.SLSMN = JOB.SLSMN
1001                                                                 >  HOLD.CSR = JOB.CSR
1002                                                                 >  *T26706 ^
1003 MAT JOB.REC = MAT SAVE.JOB                                         MAT JOB.REC = MAT SAVE.JOB
1004                                                                 >  GOSUB LOAD.MASTER.DATA

1005                                                                 >  *T24091 ^         
1006 IF JOB.CUST # MASTER.CUST THEN                                     IF JOB.CUST # MASTER.CUST THEN
1007 ERRMSG = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.CU     ERRMSG = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.
1008 GOSUB 91000; GOTO 1600                                             GOSUB 91000; GOTO 1600
1009 END                                                                END
1010 IF MASTER.JOB # ECD.RET.VALUE THEN                                 IF MASTER.JOB # ECD.RET.VALUE THEN
1011 ERRMSG = "MASTER JOB CANNOT BE A SUB JOB"                          ERRMSG = "MASTER JOB CANNOT BE A SUB JOB"

1012 GOSUB 91000; GOTO 1600                                             GOSUB 91000; GOTO 1600
1013 END                                                                END
1014 JOB.MASTER = ECD.RET.VALUE                                         JOB.MASTER = ECD.RET.VALUE
1015 END CASE                                                           END CASE
1016 1699 RETURN                                                        1699 RETURN
1017 1700 ECD.NUM = 39; ECD.ACTION = 4; CALL SCRN.EDIT               |  1700  *
1018 IF ECD.RET.VALUE = "END" THEN GOTO 1799                         |  *T24091 v
1019 * T26973 v                                                      |  OLD.JM.SALES.CODE=JOB.SALES.CODE
1020 * IF ECD.RET.VALUE = "" THEN JOB.SALES.CODE = "" ; GOTO 1799    |  IF JOB.HAS.MASTER>0 THEN
1021 IF ECD.RET.VALUE = '' THEN                                      |  *        this field is no longer editable data is defaulted 

1022 JOB.SALES.CODE = ''                                             |  ERRMSG = "This job has a Master Job and the Sales Code is de
1023 ECD.NUM = 40 ; SCV.REC(40)<ESN> = ""                            |  GOSUB 91000
1024 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 |  RETURN
1025 GOTO 1799                                                       <  
1026 END                                                                END
1027 * T26973 ^                                                      |  *T24091 ^
1028                                                                 >  ECD.NUM = 39; ECD.ACTION = 4; CALL SCRN.EDIT

1029                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 1799
1030                                                                 >  IF ECD.RET.VALUE = "" THEN JOB.SALES.CODE = ""; GOTO 1799
1031 IF ECD.RET.VALUE = "???" THEN                                      IF ECD.RET.VALUE = "???" THEN
1032 GXR.SORT.FILE = "SALES.CODE"; GXR.FILE = SALES.CODE                GXR.SORT.FILE = "SALES.CODE"; GXR.FILE = SALES.CODE
1033 GXR.NAME = "SALES.CODE"       ;* T26973                         |  GXR.NAME = "GEN.CODE.0"
1034 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)             CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
1035 SCV.REC(39)<ESN> = ""                                              SCV.REC(39)<ESN> = ""

1045 IF LEN(ECD.RET.VALUE) < 1 OR LEN(ECD.RET.VALUE) > 5 THEN GOTO      IF LEN(ECD.RET.VALUE) < 1 OR LEN(ECD.RET.VALUE) > 5 THEN GOT
1046 IF LEN(ECD.RET.VALUE) = 1 THEN                                     IF LEN(ECD.RET.VALUE) = 1 THEN
1047 IF SALS.COMM.PCT + 0 = 0 THEN ECD.RET.VALUE = ECD.RET.VALUE:"H     IF SALS.COMM.PCT + 0 = 0 THEN ECD.RET.VALUE = ECD.RET.VALUE:
1048 END                                                                END
1049 IF LEN(ECD.RET.VALUE) = 2 THEN ECD.RET.VALUE = ECD.RET.VALUE:C     IF LEN(ECD.RET.VALUE) = 2 THEN ECD.RET.VALUE = ECD.RET.VALUE
1050 MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE    ;*  |  REC = ""
1051                                                                 >  READ REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
1052 ERRMSG = "SALES CODE ":ECD.RET.VALUE:" IS NOT ON FILE"; GOSUB      ERRMSG = "SALES CODE ":ECD.RET.VALUE:" IS NOT ON FILE"; GOSU
1053 END                                                                END
1054 JOB.SALES.CODE = ECD.RET.VALUE                                     JOB.SALES.CODE = ECD.RET.VALUE

1055                                                                 >  *T24091 v
1056                                                                 >  IF JOB.SALES.CODE # HOLD.SALES.CODE AND JOB.SUBS # "" THEN
1057                                                                 >  JOB.HAS.MASTER = -1
1058                                                                 >  END
1059                                                                 >  *T24091 ^
1060 ECD.NUM = 39; SCV.REC(39)<ESN> = JOB.SALES.CODE; ECD.ACTION =      ECD.NUM = 39; SCV.REC(39)<ESN> = JOB.SALES.CODE; ECD.ACTION 
1061 ECD.NUM = 40 ; SCV.REC(40)<ESN> = SLC.DESC       ;* T26973      <  

1062 ECD.ACTION = 5            ; CALL SCRN.EDIT       ;* T26973      <  
1063 1799 RETURN                                                        1799 RETURN
1064 1800 ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT               |  1800  *
1065                                                                 >  *T24091 v
1066                                                                 >  IF JOB.HAS.MASTER>0 THEN
1067                                                                 >  ERRMSG="This job has a Master Job and the Category is defaul
1068                                                                 >  GOSUB 91000 

1069                                                                 >  RETURN
1070                                                                 >  END
1071                                                                 >  OLD.JM.CATG=JOB.CATG
1072                                                                 >  *T24091 ^
1073                                                                 >  ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
1074 IF ECD.RET.VALUE = "???" THEN                                      IF ECD.RET.VALUE = "???" THEN
1075 GXR.NAME = "GEN.CODE"                                              GXR.NAME = "GEN.CODE"

1086 READ REC FROM JOB.CATEGORY, CONO:ECD.RET.VALUE ELSE                READ REC FROM JOB.CATEGORY, CONO:ECD.RET.VALUE ELSE
1087 ERRMSG = "JOB CATEGORY CODE ":ECD.RET.VALUE:" IS NOT ON FILE";     ERRMSG = "JOB CATEGORY CODE ":ECD.RET.VALUE:" IS NOT ON FILE
1088 END                                                                END
1089 JOB.CATG = ECD.RET.VALUE                                           JOB.CATG = ECD.RET.VALUE
1090 ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = REC; ECD.ACTION = 5; CAL     ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = REC; ECD.ACTION = 5; C
1091                                                                 >  *T23473 v
1092                                                                 >  MATREAD JCATG.ADD.REC FROM JOB.CATEGORY.ADD,CONO:JOB.CATG TH
1093                                                                 >  JOB.SALES.CODE = JCATG.ADD.SLS
1094                                                                 >  ECD.NUM = 39;SCV.REC(ECD.NUM)<ESN>=JOB.SALES.CODE;ECD.ACTION
1095 END                                                                END

1096                                                                 >  *T23473 ^         
1097                                                                 >  END
1098                                                                 >  *T24091 v
1099                                                                 >  IF OLD.JM.CATG # JOB.CATG AND JOB.SUBS # "" THEN
1100                                                                 >  JOB.HAS.MASTER = -1
1101                                                                 >  END
1102                                                                 >  *T24091 ^    

1219 END ELSE                                                           END ELSE
1220 QUOTED.AMT = JOB.CONF.AMT                                          QUOTED.AMT = JOB.CONF.AMT
1221 END                                                                END
1222 IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0                              IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
1223 END                                                                END
1224                                                                 >  *CSF 24300 v
1225 IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN                         IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN
1226 GOSUB 1250                                                         GOSUB 1250
1227                                                                 >  *        CUR.JOB.BAL = CUR.JOB.BAL - QUOTED.AMT
1228                                                                 >  *CSF 24300 ^

1238 ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUO     ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+Q
1239 ERRMSG = ERRMSG:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")               ERRMSG = ERRMSG:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")
1240 END ELSE                                                           END ELSE
1241 GOTO 3149                                                          GOTO 3149
1242 END                                                                END
1243                                                                 >  * 18621
1244                                                                 >  *      CASE CUST.CREDIT = "CASH"
1245                                                                 >  *         AVAIL = CUST.AR.BAL + CUR.JOB.BAL + CUR.ORD.BAL + 
1246                                                                 >  *         IF AVAIL > 0 THEN
1247                                                                 >  *            ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")

1248                                                                 >  *            ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+
1249                                                                 >  *            ERRMSG = ERRMSG:"& TOT BAL = ":OCONV(AVAIL,"MD2
1250                                                                 >  *         END ELSE
1251                                                                 >  *            GOTO 3149
1252                                                                 >  *         END
1253 CASE 1                                                             CASE 1
1254 ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")                        ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")

1254 ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")                        ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
1255 ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUO     ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+Q
1256 ERRMSG = ERRMSG:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+CU     ERRMSG = ERRMSG:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL
+
1257 END CASE                                                           END CASE
1258 GOSUB 91000                                                        GOSUB 91000
1259 ECHO OFF ; * T27885                                             <  
1260 ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = ""                            ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = ""
1261 ECD.MAXL = 3; ECD.DEFAULT = FIELD(JOB.CREDIT,"!",1)                ECD.MAXL = 3; ECD.DEFAULT = FIELD(JOB.CREDIT,"!",1)
1262 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
1263 *T27885 v                                                       <  

1264 ECHO ON                                                         <  
1265 ECD.NUM = 3 ; SCV.REC(ECD.NUM)<ESN> = ""                        <  
1266 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
1267 *T27885 ^                                                       <  
1268 *T25945 v                                                       <  
1269 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
1270 READ TREC FROM CREDIT.AUTH.CODE, CONO:ECD.RET.VALUE THEN        <  

1271 JOB.CREDIT = ECD.RET.VALUE:"!":OPER.ID                             JOB.CREDIT = ECD.RET.VALUE:"!":OPER.ID
1272 *T27885  ECD.NUM = 3; SCV.REC(3)<ESN> = JOB.CREDIT              |  ECD.NUM = 3; SCV.REC(3)<ESN> = JOB.CREDIT
1273 *T27885  ECD.ACTION = 5; CALL SCRN.EDIT                         |  ECD.ACTION = 5; CALL SCRN.EDIT
1274 END ELSE                                                        <  
1275 ERRMSG = 'Invalid credit authorization code'                    <  
1276 GOSUB 91000                                                     <  
1277 GOTO 3100                                                       <  
1278 END                                                                END

1279 END                                                             <  
1280 *T25945 ^                                                       <  
1281 3149 RETURN                                                        3149 RETURN
1282 3200 ECD.NUM = 27; ECD.SUB.NUM = 1; ECD.ACTION = 4; CALL SCRN.     3200 ECD.NUM = 27; ECD.SUB.NUM = 1; ECD.ACTION = 4; CALL SCR
1283 IF ECD.RET.VALUE = "END" THEN GOTO 3299                            IF ECD.RET.VALUE = "END" THEN GOTO 3299
1284 JOB.COMMENTS<1,1> = ECD.RET.VALUE                                  JOB.COMMENTS<1,1> = ECD.RET.VALUE
1285 ECD.NUM = 27; ECD.SUB.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT      ECD.NUM = 27; ECD.SUB.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDI

1334 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
1335 IF LN > LINES THEN                                                 IF LN > LINES THEN
1336 IF JOB.DESC<1,LN> = "" THEN LN = 1                                 IF JOB.DESC<1,LN> = "" THEN LN = 1
1337 END                                                                END
1338 GOSUB 4900                                                         GOSUB 4900
1339 * T25978 v                                                      <  
1340 CASE ACTION = 'SR'                                              <  
1341 LN -= PAGE.SIZE                                                 <  
1342 IF LN < 1 THEN LN = 1                                           <  
1343 GOSUB 4900                                                      <  

1344 CASE ACTION = 'ST'                                              <  
1345 LN = 1                                                          <  
1346 GOSUB 4900                                                      <  
1347 CASE ACTION = 'SB'                                              <  
1348 LN = LINES                                                      <  
1349 GOSUB 4900                                                      <  
1350 * T25978 ^                                                      <  

1359 Y = SLN                                                            Y = SLN
1360 TYP = 1                                                            TYP = 1
1361 MAXL = 70                                                          MAXL = 70
1362 O.R = "O"                                                          O.R = "O"
1363 DEFAULT = JOB.DESC<1,LN>                                           DEFAULT = JOB.DESC<1,LN>
1364 VALDAT = "" ;* T24829                                           <  
1365 CALL EDIT.SUB                                                      CALL EDIT.SUB
1366 IF VALUE = "" OR VALUE = "END" THEN                                IF VALUE = "" OR VALUE = "END" THEN
1367 IF ACTION = "A" THEN                                               IF ACTION = "A" THEN
1368 JOB.DESC = DELETE(JOB.DESC,1,LN,0)                                 JOB.DESC = DELETE(JOB.DESC,1,LN,0)

1476 IF JFS.PROD # "" THEN                                              IF JFS.PROD # "" THEN
1477 JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000                               JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
1478 END                                                                END
1479 SCV.REC(38)<ESN> = JOB.QTY<1,3>                                    SCV.REC(38)<ESN> = JOB.QTY<1,3>
1480 SCV.REC(39)<ESN> = JOB.SALES.CODE                                  SCV.REC(39)<ESN> = JOB.SALES.CODE
1481 * T26973 v                                                      <  
1482 MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE       <  
1483 MAT SLC.REC = ''                                                <  
1484 END                                                             <  
1485 SCV.REC(40)<ESN> = SLC.DESC                                     <  

1486 * T26973 ^                                                      <  
1487 SCV.REC(41)<ESN> = JOB.CATG                                        SCV.REC(41)<ESN> = JOB.CATG
1488 SCV.REC(1)<ESN> = JOB.PRIOR.JOB                                    SCV.REC(1)<ESN> = JOB.PRIOR.JOB
1489 SCV.REC(2)<ESN> = JOB.PRICE.PER.THOU                               SCV.REC(2)<ESN> = JOB.PRICE.PER.THOU
1490 *T27885   SCV.REC(3)<ESN> = JOB.CREDIT                          |  SCV.REC(3)<ESN> = JOB.CREDIT
1491 IF JOB.CATG # "" THEN                                              IF JOB.CATG # "" THEN
1492 REC = ""                                                           REC = ""

1521 SCV.REC(ECD.NUM)<ESN> = "NON CHARGABLE"                            SCV.REC(ECD.NUM)<ESN> = "NON CHARGABLE"
1522 CASE 1                                                             CASE 1
1523 SCV.REC(ECD.NUM)<ESN> = UNKNOWN                                    SCV.REC(ECD.NUM)<ESN> = UNKNOWN
1524 END CASE                                                           END CASE
1525 RETURN                                                             RETURN
1526                                                                 >  *T24091 v
1527                                                                 >  LOAD.MASTER.DATA: 
1528                                                                 >  *  this sub will load in the data for cust, categ, sales.cod
1529                                                                 >  *    the master job when specified.  This data will be force
1530                                                                 >  *    and will redisplay each field

1531                                                                 >  *
1532                                                                 >  IF JOB.INV.NO # "" THEN
1533                                                                 >  ERRMSG = "This job has been invoiced, unable to default in f
1534                                                                 >  GOSUB 91000
1535                                                                 >  RETURN
1536                                                                 >  END
1537                                                                 >  *

1538                                                                 >  JOB.SALES.CODE=HOLD.SALES.CODE
1539                                                                 >  JOB.CATG=HOLD.CATG
1540                                                                 >  JOB.TYPE=HOLD.TYPE
1541                                                                 >  JOB.CUST=HOLD.CUST
1542                                                                 >  *T26706 v
1543                                                                 >  JOB.SLSMN=HOLD.SLSMN
1544                                                                 >  JOB.CSR=HOLD.CSR

1545                                                                 >  *T26706 ^
1546                                                                 >  JOB.HAS.MASTER=1
1547                                                                 >  ECD.NUM = 39
1548                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.SALES.CODE
1549                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1550                                                                 >  ECD.NUM = 41
1551                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.CATG

1552                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1553                                                                 >  READ REC FROM JOB.CATEGORY, CONO:HOLD.CATG ELSE
1554                                                                 >  REC=""
1555                                                                 >  END
1556                                                                 >  CATG.DESC = REC<1>
1557                                                                 >  ECD.NUM = 42
1558                                                                 >  SCV.REC(ECD.NUM)<ESN> = CATG.DESC

1559                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1560                                                                 >  ECD.NUM = 15
1561                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.TYPE
1562                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1563                                                                 >  ECD.NUM = 9
1564                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.CUST
1565                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT

1566                                                                 >  MATREAD CUST.REC FROM CUSTOMER,CONO:HOLD.CUST ELSE
1567                                                                 >  CUST.NAME = ""
1568                                                                 >  END
1569                                                                 >  ECD.NUM = 10
1570                                                                 >  SCV.REC(ECD.NUM)<ESN> = CUST.NAME
1571                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1572                                                                 >  *T26706 v

1573                                                                 >  ECD.NUM = 11
1574                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.SLSMN
1575                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1576                                                                 >  MATREAD SALESMAN.REC FROM SALESMAN,CONO:HOLD.SLSMN ELSE
1577                                                                 >  SALS.NAME = ""
1578                                                                 >  END
1579                                                                 >  ECD.NUM = 12

1580                                                                 >  SCV.REC(ECD.NUM)<ESN> = SALS.NAME
1581                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1582                                                                 >  ECD.NUM = 50
1583                                                                 >  SCV.REC(ECD.NUM)<ESN> = HOLD.CSR
1584                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1585                                                                 >  MATREAD CSR.REC FROM CSR.CODE,CONO:HOLD.CSR ELSE
1586                                                                 >  CSR.DESC = ""

1587                                                                 >  END
1588                                                                 >  ECD.NUM = 51
1589                                                                 >  SCV.REC(ECD.NUM)<ESN> = CSR.DESC
1590                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
1591                                                                 >  *T26706 ^
1592                                                                 >  *
1593                                                                 >  RETURN

1594                                                                 >  *
1595                                                                 >  *T24091 ^
1596 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1597 * 91000 PRINT @(0,23):ERRMSG:CL:                                <  
1598 *       INPUT XX:                                               <  
1599 *       PRINT @(0,23):CL:                                       <  
1600 *       RETURN                                                  <  


JCSBP/JOB.MAINT.DRIVER                                             /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.MAINT.DRIVER
Printed for thompson at 06/28/2006 04:41:58PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0007 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0008                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0009                                                                 >  *COPY>ICS.CPYLIB>COM.INV.INQ
0010 **************************************************************     ************************************************************
0011 * REVISION    - [08.1]                                             * REVISION    - [08.1]
0012 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0013 * SOURCE        - OPSBP                                            * SOURCE        - OPSBP
0014 * PROGRAM       - JOB.MAINT.DRIVER                                 * PROGRAM       - JOB.MAINT.DRIVER
0015 * BY            - Ziad Yamout, VERCOM Software Inc.                * BY            - Ziad Yamout, VERCOM Software Inc.

0016 * DATE          - 01/23/90                                         * DATE          - 01/23/90
0017 * DESCRIPTION   -                                                  * DESCRIPTION   -
0018 * P.S           - A work file will be required to replace ORD.     * P.S           - A work file will be required to replace OR
0019 *                                                                  *
0020 * MOD TASK 17918 DMT 8/15/94 ADD BACKMARGIN CALCULATION            * MOD TASK 17918 DMT 8/15/94 ADD BACKMARGIN CALCULATION
0021 *T25945 edwin 07/17/2001 * Validate the credit authorization e  |  *T23473 rick 04/11/1999 * Modify order of sales code and cat
0022 *T26334 epitka 12/19/2001 * REV12                               |  *                         and make sales code display only
0023 *T26421 thompson 03/11/2002 * Allow schedule of non estimate j  <  
0024 *                             pss companies.                    <  
0025 *T26773 cmykleb 07/30/2002 * Pass entire company record to JOB  <  

0052 ERRMSG = "Cannot locate the OPS.SCREENS file"; GOTO 93000          ERRMSG = "Cannot locate the OPS.SCREENS file"; GOTO 93000
0053 END                                                                END
0054 OPEN "","SHIP.TO" TO SHIP.TO ELSE                                  OPEN "","SHIP.TO" TO SHIP.TO ELSE
0055 ERRMSG = "Cannot locate the SHIP.TO file";GOTO 93000               ERRMSG = "Cannot locate the SHIP.TO file";GOTO 93000
0056 END                                                                END
0057 OPEN "","CREDIT.AUTH.CODE" TO CREDIT.AUTH.CODE ELSE             |  *T23473 v
0058 ERRMSG = "Cannot locate the CREDIT.AUTH.CODE file" ; GOTO 9300  |  OPEN "CBN.SCREENS" TO FOURTH.SCREENS ELSE
0059                                                                 >  ERRMSG = "Cannot locate CBN.SCREENS file" ; GOTO 93000
0060 END                                                                END
0061 OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE                   |  *T23473 ^

0062 ERRMSG="Cannot locate the JOS.STAT.CODE file";GOTO 93000        <  
0063 END                                                             <  
0064 *                                                                  *
0065 *---- Get company                                                  *---- Get company
0066 *                                                                  *
0067 CONO = ""; MAT COMP.REC = ""                                       CONO = ""; MAT COMP.REC = ""
0068 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)

0078 *---- Setup SCRN.EDIT & EDIT.SUB                                   *---- Setup SCRN.EDIT & EDIT.SUB
0079 *                                                                  *
0080 *      MAT EDIT.COM = ""                                           *      MAT EDIT.COM = ""
0081 *      TYP = 0; CALL EDIT.SUB                                      *      TYP = 0; CALL EDIT.SUB
0082 MAT EDIT.COM.DRIVER = ""                                           MAT EDIT.COM.DRIVER = ""
0083 ECD.SCRN.CNT = 11                                               |  ECD.SCRN.CNT = 10
0084 ECD.SCRN.NAME = "JOB.MAINT"                                        ECD.SCRN.NAME = "JOB.MAINT"
0085                                                                 >  ECD.SCRN.FLAG = 4;*T23473
0086 ECD.SCRN.NAME<2> = "JOB.MATL.SUB"                                  ECD.SCRN.NAME<2> = "JOB.MATL.SUB"
0087 ECD.SCRN.NAME<3> = "JOB.TRACK.MAINT"                               ECD.SCRN.NAME<3> = "JOB.TRACK.MAINT"

0092 ECD.SCRN.FLAG<7> = 2                                               ECD.SCRN.FLAG<7> = 2
0093 ECD.SCRN.NAME<8> = "JOB.ORDER.SEL"                                 ECD.SCRN.NAME<8> = "JOB.ORDER.SEL"
0094 ECD.SCRN.FLAG<8> = 3                                               ECD.SCRN.FLAG<8> = 3
0095 ECD.SCRN.NAME<9> = "GANG.JOB.SUB"                                  ECD.SCRN.NAME<9> = "GANG.JOB.SUB"
0096 ECD.SCRN.NAME<10>= "GANG.JOB.ALLOC"                                ECD.SCRN.NAME<10>= "GANG.JOB.ALLOC"
0097 ECD.SCRN.NAME<11>="SERIAL.RESERVE.SEL"                          <  
0098 ECD.ACTION = 1; CALL SCRN.EDIT                                     ECD.ACTION = 1; CALL SCRN.EDIT
0099 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0100 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0101 ORDNO = ""; JOBNO = ""                                             ORDNO = ""; JOBNO = ""

0102 *T26421 v                                                       |  CALL JOB.MAINT(CONO,ORDNO,JOBNO,CO.JES,CO.POS,CO.OPS,CO.JIS)
0103 *  CALL JOB.MAINT(CONO,ORDNO,JOBNO,CO.JES,CO.POS,CO.OPS,CO.JIS  <  
0104 IF CO.PSS = "Y" THEN CO.PSS = "Y" ELSE CO.PSS = "N"             <  
0105 *T26773 v                                                       <  
0106 *  CALL JOB.MAINT(CONO,ORDNO,JOBNO,CO.JES,CO.POS,CO.OPS,CO.JIS  <  
0107 CALL JOB.MAINT(CONO,ORDNO,JOBNO,MAT COMP.REC)                   <  
0108 *T26773 ^                                                       <  

0109 *T26421 ^                                                       <  
0110 GOTO 99999                                                         GOTO 99999
0111 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
0112                                                                 >  * 91000 PRINT @(0,23) : ERRMSG : CL :
0113                                                                 >  *       INPUT XX :
0114                                                                 >  *       PRINT @(0,23) : CL :
0115                                                                 >  *       RETURN

0116 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                       93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
0117 99999 END                                                       |  * 93000 PRINT @(0,23) : ERRMSG : CL :
0118                                                                 >  *       INPUT XX :
0119                                                                 >  *       PRINT @(0,23) : CL :
0120                                                                 >  99999END
0121 


JCSBP/JOB.MAINT.REQUEST                                            /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.MAINT.REQUEST
Printed for thompson at 06/28/2006 04:41:58PM

0001 *******************                                                *******************
0002                                                                 >  *T23473 rick 04/11/1999 * Modify screen - swap order or sale
0003                                                                 >  *                         category.code and make sales.code 
0004                                                                 >  *                         derived from the JOB.CATEGORY.ADD 
0005                                                                 >  *                         id as job.category) and remove abi
0006                                                                 >  *                         sales code from job.screen and ren
0007                                                                 >  *                         fields that follow.
0008 * REVISION - [08.0]                                                * REVISION - [08.0]

0009 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0010 *T26334 epitka 12/19/2001 * REV12                               <  
0011 *T25950 edwin 07/24/2001 * Add prompt for authorization for ca  <  
0012 *                          based on status.                     <  
0013 *T26773 cmykleb 07/30/2002 * Pass the entire company record to  <  
0014 *                            JOB.MAINT.UPD                      <  
0015 *T26909 cmykleb 10/14/2002 * Include logic from POST.INVOICE f  <  
0016 *                            completing a job.                  <  

0017 *T28525 lross 04/18/2005 * Add check for "Completed" Status.    <  
0018 *******************                                                *******************
0019 EQU TRUE  TO 1    ; * T25950                                    <  
0020 EQU FALSE TO 0    ; * T25950                                    <  
0021 DIM TMP.REC(1) ; MAT TMP.REC = '' ; * T25950                    <  
0022 LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED.FLAG ELSE INVOI     LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED.FLAG ELSE INV
0023 *T28525 v                                                       <  

0024 LOCATE "4" IN JOB.STATUS<1>,1 SETTING COMPLETED.FLAG ELSE COMP  <  
0025 OJFS.PROD = JFS.PROD; OJFS.WHSE = JFS.WHSE                         OJFS.PROD = JFS.PROD; OJFS.WHSE = JFS.WHSE
0026 OJFS.ORDER = JFS.ORDER; OJFS.ORD.QTY = JFS.ORD.QTY                 OJFS.ORDER = JFS.ORDER; OJFS.ORD.QTY = JFS.ORD.QTY
0027 MORE = 1                                                           MORE = 1
0028 BEGIN CASE                                                         BEGIN CASE
0029 CASE CO.OPS = "Y"                                                  CASE CO.OPS = "Y"
0030 PLNNO = 57                                                         PLNNO = 57

0232 OLD.M.SCREENS = M.SCREENS                                          OLD.M.SCREENS = M.SCREENS
0233 CALL SCREEN_MAINT(PASS_VARS,ID_VARS,M_REC,OLD_M_REC,IMGDEF,IMG     CALL SCREEN_MAINT(PASS_VARS,ID_VARS,M_REC,OLD_M_REC,IMGDEF,I
0234 M.SCREENS = OLD.M.SCREENS                                          M.SCREENS = OLD.M.SCREENS
0235 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0236 GOSUB 30500                                                        GOSUB 30500
0237 CASE NUM(REQUEST) AND REQUEST >=1 AND REQUEST < 24              |  *T23473 v
0238 *T28525 v   IF INVOICED.FLAG THEN                               |  ****      CASE NUM(REQUEST) AND REQUEST >=1 AND REQUEST < 24
0239 IF INVOICED.FLAG OR COMPLETED.FLAG THEN                         |  CASE NUM(REQUEST) AND REQUEST >=1 AND REQUEST < 23
0240                                                                 >  *T23473 ^
0241                                                                 >  IF INVOICED.FLAG THEN

0259 ECD.ACTION=4                                                       ECD.ACTION=4
0260 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0261 IF ECD.RET.VALUE # "Y" THEN GO 500                                 IF ECD.RET.VALUE # "Y" THEN GO 500
0262 END                                                                END
0263 END                                                                END
0264 ON REQUEST GOSUB 1100,1200,1300,1400,1450,1500,1600,1700,1800,  |  *T23473 v
0265                                                                 >  ***         ON REQUEST GOSUB 1100,1200,1300,1400,1450,1500,1
0266                                                                 >  ON REQUEST GOSUB 1100,1200,1300,1400,1450,1500,1600,1800,190
0267                                                                 >  *T23473 ^
0268 500*                                                               500*

0269 CASE REQUEST = "CA" AND JOB.STATUS<1,1> # 9 AND FLG = "O" ; *T  |  CASE REQUEST = "CA" AND JOB.STATUS<1,1> # 9 AND FLG = "O"
0270 REVISE.RELEASE.CANCEL = FALSE                                   |  X = 0
0271 AUTHORIZATION.REQUIRED = INDEX('1,2,3,5',JOB.STATUS<1,1>,1)     |  Y = 23
0272 IF AUTHORIZATION.REQUIRED THEN                                  |  TYP = 8
0273 ECD.NUM = 4 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   |  MAXL = 1
0274 MATREAD TMP.REC FROM JOB.STAT.CODE, CONO:ECD.RET.VALUE THEN     |  PMSG = "DO YOU WANT TO REVERSE WIP, RELEASE INVENTORY AND CA
0275 ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   |  CALL EDIT.SUB

0276 IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE        |  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0277 END ELSE                                                        |  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0278 ERRMSG = "INVALID AUTHORIZATION CODE"                           |  IF VALUE = "Y" THEN
0279 GOSUB 91000                                                     |  CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,CO.JES,CO.POS,CO.
0280 END                                                             <  
0281 END ELSE                                                        <  
0282 ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT                   <  

0283 IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE        <  
0284 END                                                             <  
0285 IF REVISE.RELEASE.CANCEL THEN                                   <  
0286 *T26773 v                                                       <  
0287 *           CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,CO.JES,  <  
0288 CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,OLD.CUST,OLD.MASTER  <  
0289 *T26773 ^                                                       <  

0290 MORE = 0                                                           MORE = 0
0291 END                                                     ; *T25  |  END
0292 CASE REQUEST="F"                                                   CASE REQUEST="F"
0293 IF NOT(RD.DISPLAY) AND JOB.RESV.MATL # "" THEN                     IF NOT(RD.DISPLAY) AND JOB.RESV.MATL # "" THEN
0294 RD.DISPLAY = 1                                                     RD.DISPLAY = 1
0295 ERRMSG = "Must review the required materials for estimate befo     ERRMSG = "Must review the required materials for estimate be
0296 GOSUB 91000                                                        GOSUB 91000
0297 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN              IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN

0313 END                                                                END
0314 IF JOB.STATUS="" THEN                                              IF JOB.STATUS="" THEN
0315 IF JOB.CREDIT = "" THEN GOSUB 3100                                 IF JOB.CREDIT = "" THEN GOSUB 3100
0316 IF ECD.RET.VALUE = "END" THEN GOTO 519                             IF ECD.RET.VALUE = "END" THEN GOTO 519
0317 END                                                                END
0318 *T26773 v                                                       |  CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,CO.JES,CO.POS,CO.
0319 *        CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,CO.JES,CO.  <  
0320 CALL JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,OLD.CUST,OLD.MASTER  <  
0321 *T26773 ^                                                       <  
0322 MORE = 0                                                           MORE = 0

0323 MAT SRESV.REC=''                                                <  
0324 519*                                                               519*
0325 CASE REQUEST="TR"                                                  CASE REQUEST="TR"
0326 ECD.SCRN.NO = ESN + 2                                              ECD.SCRN.NO = ESN + 2
0327 ECD.ACTION=2                                                       ECD.ACTION=2
0328 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0329 SCV.REC(1)<ECD.SCRN.NO>=JOBNO                                      SCV.REC(1)<ECD.SCRN.NO>=JOBNO

0330 SCV.REC(16)<ECD.SCRN.NO>=JOB.DESC<1,1>                             SCV.REC(16)<ECD.SCRN.NO>=JOB.DESC<1,1>
0331 SCV.REC(2)<ECD.SCRN.NO>=JOB.CUST                                   SCV.REC(2)<ECD.SCRN.NO>=JOB.CUST
0332 SCV.REC(3)<ECD.SCRN.NO>=CUST.NAME                                  SCV.REC(3)<ECD.SCRN.NO>=CUST.NAME
0333 SCV.REC(4)<ECD.SCRN.NO>=JOB.SLSMN                                  SCV.REC(4)<ECD.SCRN.NO>=JOB.SLSMN
0334 SCV.REC(5)<ECD.SCRN.NO>=SALS.NAME                                  SCV.REC(5)<ECD.SCRN.NO>=SALS.NAME
0335 *T26909 v                                                       <  
0336 *        CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG)          <  
0337 CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG,CONO,CO.POS)          CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG,CONO,CO.POS)
0338 *T26909 ^                                                       <  
0339 SCV.REC(14)<ESN>=JOB.TRACK.DATE<1,4>                               SCV.REC(14)<ESN>=JOB.TRACK.DATE<1,4>


JCSBP/JOB.MAINT.UPD                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.MAINT.UPD
Printed for thompson at 06/28/2006 04:41:58PM

0001 SUBROUTINE JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,OLD.CUST,OLD.  |  SUBROUTINE JOB.MAINT.UPD(CONO,ORDNO,JOBNUM,JOBNO,CO.JES,CO.P
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST

0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB
0010                                                                 >  *COPY>ICS.CPYLIB>COM.INV.INQ
0011 **********************************************                     **********************************************
0012 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0013 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0014 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0015 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP

0020 *                                                                  *
0021 *T21177 diane 11/20/1996 * CORRECT 90500 ERR.MSG TO ERRMSG         *T21177 diane 11/20/1996 * CORRECT 90500 ERR.MSG TO ERRMSG
0022 *T21177 diane 01/03/1997 * TEST                                    *T21177 diane 01/03/1997 * TEST
0023 *T22040 gat 06/24/1997 * FIX CLEAR ON NEW JOB NUMBER ADVISEMEN     *T22040 gat 06/24/1997 * FIX CLEAR ON NEW JOB NUMBER ADVISEM
0024 *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match proble     *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match prob
0025 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.  |  *T24091 rick 07/05/1999 * Modify pgm to recognize a Master J
0026                                                                 >  *                         saved make sure all sub-jobs match
0027                                                                 >  *                         Customer,Category,Sales Code, and 
0028                                                                 >  *T25977 walid 07/12/2001 * ADD EXTRACT JOB TO SCHEDULING
0029                                                                 >  *T26706 cmykleb 06/26/2002 * When a job has a master job the

0030                                                                 >  *                            that the salesman code and the 
0031                                                                 >  *                            match the master job (see T2409
0032                                                                 >  *C43349 thompson 04/13/2004 * Change job number roll over fo
0033 *T25900 lanny 06/25/2001 * When a JOB is cancelled the PO ALLO     *T25900 lanny 06/25/2001 * When a JOB is cancelled the PO AL
0034 *                          not being cleared.                      *                          not being cleared.
0035 *T26334 epitka 12/19/2001 * Rev12                               <  
0036 *T26372 adelgado 01/22/2002 * Merging                           <  

0037 *T26421 thompson 03/11/2002 * Allow sched of non-sched jobs in  <  
0038 *T26773 cmykleb 07/30/2002 * Passing line above changed to get  <  
0039 *                            company record.                    <  
0040 *T27363 thompson 04/03/2003 * FIX PROBLEM WITH REBOOK OF JOB W  <  
0041 *                             ESTIMATE IF CHANGES               <  
0042 *T28368 lross 12/21/2004 * 'N'ew job# needs to be UP TO 999999  <  
0043 *T28375 lross 12/27/2004 * If FSCAL.PER present POS is never s  <  

0043 *T28375 lross 12/27/2004 * If FSCAL.PER present POS is never s  <  
0044 *ENDDOC                                                            *ENDDOC
0045 **********************************************                     **********************************************
0046 *COPY>PMC.CPYLIB>FISCAL                                            *COPY>PMC.CPYLIB>FISCAL
0047 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0048 *COPY>PMC.CPYLIB>COMPANY          ; * T26773                    <  
0049 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0050 *COPY>JCS.CPYLIB>JOB.STATS                                         *COPY>JCS.CPYLIB>JOB.STATS
0051 *COPY>JCS.CPYLIB>JOB.CREDIT.STATS                                  *COPY>JCS.CPYLIB>JOB.CREDIT.STATS
0052 *COPY>JCS.CPYLIB>GANG.JOB                                          *COPY>JCS.CPYLIB>GANG.JOB

0055 *COPY>OPS.CPYLIB>ORDER.DETAIL.INQ                                  *COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
0056 *COPY>OPS.CPYLIB>JOB.FNGD.STATS                                    *COPY>OPS.CPYLIB>JOB.FNGD.STATS
0057 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0058 *COPY>ICS.CPYLIB>FNGD.STATS                                        *COPY>ICS.CPYLIB>FNGD.STATS
0059 *COPY>ICS.CPYLIB>FNGD.JOB.STATS                                    *COPY>ICS.CPYLIB>FNGD.JOB.STATS
0060 *COPY>PSS.CPYLIB>JOB.SCHED                                      <  
0061 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0062 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0063 *COPY>CPYLIB>GEN.XREF.SUB                                          *COPY>CPYLIB>GEN.XREF.SUB
0064 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0065 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0066 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0067                                                                 >  *T25977 v
0068                                                                 >  *COPY>PSS.CPYLIB>JOB.SCHED
0069                                                                 >  *T25977 ^
0070 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0071 *                                                                  *
0072 * T21796       DIM SAVE.JOB(125)                                   * T21796       DIM SAVE.JOB(125)
0073 DIM SAVE.JOB(JOB.REC.SIZE)                                         DIM SAVE.JOB(JOB.REC.SIZE)

0091 *T25900 v                                                          *T25900 v
0092 IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN                     IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN
0093 CALL CLEAR.JOB.ALLOC(CONO,JOBNO)                                   CALL CLEAR.JOB.ALLOC(CONO,JOBNO)
0094 END                                                                END
0095 *T25900 ^                                                          *T25900 ^
0096 *       IF JOB.WIP<1,1> > 0 THEN                                |  IF JOB.WIP<1,1> > 0 THEN
0097 IF SUM(JOB.WIP<1,2>) > 0 THEN                                   <  
0098 IF FSCAL.PER = "" THEN                                             IF FSCAL.PER = "" THEN
0099 MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE            MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE
0100 ERRMSG = "Cannot locate CONTROL, JCFISCAL"                         ERRMSG = "Cannot locate CONTROL, JCFISCAL"

0099 MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE            MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE
0100 ERRMSG = "Cannot locate CONTROL, JCFISCAL"                         ERRMSG = "Cannot locate CONTROL, JCFISCAL"
0101 GOSUB 91000                                                        GOSUB 91000
0102 GOTO 501                                                           GOTO 501
0103 END                                                                END
0104 ***** T23278 v                                                  |  FSCAL.PER = FR.CURR.PER
0105 READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE           <  
0106 ERRMSG = "Cannot locate CONTROL, DIVISIONS"                     <  
0107 GOSUB 91000                                                     <  
0108 GOTO 501                                                        <  

0109 END                                                                END
0110 READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE        <  
0111 ERRMSG = "Cannot locate CONTROL, DIV.SECURITY"                  <  
0112 GOTO 93000                                                      <  
0113 END                                                             <  
0114 DIV.CODE = JOB.DIV                                              <  
0115 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         <  
0116 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN                     <  

0117 ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING &  <  
0118 GOSUB 91000; GOTO 501                                           <  
0119 END                                                             <  
0120 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE           <  
0121 ERRMSG = "Cannot locate ":DIV.CODE:" in Control File DIVISIONS  <  
0122 GOSUB 91000                                                     <  
0123 GOTO 501                                                        <  

0124 END                                                             <  
0125 END ELSE                                                        <  
0126 POS = 1                                                         <  
0127 END                                                             <  
0128 *                  FSCAL.PER = FR.CURR.PER                      <  
0129 FSCAL.PER = FR.CURR.PER<1,POS>                                  <  
0130 ***** T23278 ^                                                  <  

0131 END                                                             <  
0132 WIP.TYPE = "ALL"                                                   WIP.TYPE = "ALL"
0133 WIP.PERCENT = 10000                                                WIP.PERCENT = 10000
0134 WIP.DATE = "ALL"                                                   WIP.DATE = "ALL"
0135 WIP.PER = "ALL"                                                    WIP.PER = "ALL"
0136 *T28375 v   CALL REVERSE.JOB.WIP(CONO,JOBNO,WIP.TYPE,WIP.PERCE  |  CALL REVERSE.JOB.WIP(CONO,JOBNO,WIP.TYPE,WIP.PERCENT,WIP.DAT
0137 CALL REVERSE.JOB.WIP(CONO,JOBNO,WIP.TYPE,WIP.PERCENT,WIP.DATE,  <  

0161 JOBNO = 10000                                                      JOBNO = 10000
0162 END                                                                END
0163 LOOP                                                               LOOP
0164 FND = 1                                                            FND = 1
0165 JOBNO = JOBNO + 1                                                  JOBNO = JOBNO + 1
0166 *T28368 v                                                       |  IF JOBNO > 9999999 THEN JOBNO = 10000 ;*C43349
0167 *              IF JOBNO > 99999 THEN JOBNO = 1                  <  
0168 IF JOBNO > 999999 THEN JOBNO = 1                                <  
0169 READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0                 READU O.RECORD FROM JOB, CONO : JOBNO ELSE FND = 0
0170 WHILE FND DO                                                       WHILE FND DO

0269 MAT JOB.REC = MAT SAVE.JOB                                         MAT JOB.REC = MAT SAVE.JOB
0270 LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE NULL               LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
0271 CUST.JOB<1,JFND> = JOBNO                                           CUST.JOB<1,JFND> = JOBNO
0272 CUST.JOB.BAL<1,JFND> = QUOTED.AMT                                  CUST.JOB.BAL<1,JFND> = QUOTED.AMT
0273 MATWRITE CUST.REC ON CUSTOMER , CONO : CUR.CUST                    MATWRITE CUST.REC ON CUSTOMER , CONO : CUR.CUST
0274                                                                 >  *T24091 v
0275                                                                 >  *              add logic to process and update sub.jobs if t
0276                                                                 >  *              saved is a master job with sub-jobs and  any 
0277                                                                 >  *              tracked fields have been updated
0278                                                                 >  IF JOB.HAS.MASTER < 0 AND JOB.SUBS # "" AND JOB.MASTER = JOB

0279                                                                 >  GOSUB PROCESS.UPD.SUB.JOBS
0280                                                                 >  JOB.HAS.MASTER=0
0281                                                                 >  END
0282                                                                 >  *T24091 ^
0283 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0284 IF SAVE.INV.JS.REC = "" THEN GOTO 507                              IF SAVE.INV.JS.REC = "" THEN GOTO 507
0285 FOR M = 1 TO MCNT                                                  FOR M = 1 TO MCNT

0329 MATWRITE GJOB.REC ON GANG.JOB, CONO : JOBNO                        MATWRITE GJOB.REC ON GANG.JOB, CONO : JOBNO
0330 END                                                                END
0331 IF JFS.PROD # "" OR OJFS.PROD # "" THEN                            IF JFS.PROD # "" OR OJFS.PROD # "" THEN
0332 GOSUB 670                                                          GOSUB 670
0333 END                                                                END
0334 **T26421 v                                                      |  IF CO.JES = "Y" THEN
0335 IF CO.PSS = "Y" THEN                                            |  ESTAT = 0     ;*T22154
0336 OPEN '','JOB.SCHED' TO JOB.SCHED THEN                           |  CALL JOB.BOOK.SUB (CONO,"3",JOBNO,OLD.EST,JOB.EST,MAT EST.PA
0337 IF JOB.EST = "" THEN                                            <  
0338 *T27363               OPEN '','JOB.SCHED' TO JOB.SCHED THEN     <  

0339 *           MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO ELSE;*   <  
0340 *T26551 v                                                       <  
0341 *           FORCE UPDATE TO JOB.SCHED TO HANDLE THEN CHANGES T  <  
0342 *           SALESMAN, CSR, DESCRIPTION ETC...                   <  
0343 MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN                 <  
0344 IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN                      <  
0345 JBS.DUE.DATE = JOB.TRACK.DATE<1,4>                              <  

0346 END                                                                END
0347 IF JBS.CUST.NAME # CUST.NAME THEN                               |  *T25977 v
0348 JBS.CUST.NAME = CUST.NAME                                       |  IF JOB.EST = "" THEN
0349 END                                                             |  OPEN '','JOB.SCHED' TO JOB.SCHED THEN
0350 IF JBS.DIV # JOB.DIV THEN                                       |  MATREADU JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN
0351 JBS.DIV = JOB.DIV                                               |  RELEASE JOB.SCHED, CONO:JOBNO
0352 END                                                             <  
0353 IF JBS.CUST.ID # JOB.CUST THEN                                  <  

0354 JBS.CUST.ID = JOB.CUST                                          <  
0355 END                                                             <  
0356 IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN                     <  
0357 JBS.JOB.COMMENT = JOB.COMMENTS<1,1>                             <  
0358 END                                                             <  
0359 IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"                   <  
0360 CALL GET.JBS.USER.FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XX  <  

0361 MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO                       <  
0362 END ELSE                                                           END ELSE
0363 VALDAT = 'Y':VM:'N'                                             <  
0364 TYP=8; X=0; Y=21; MAXL=1                                        <  
0365 PMSG="Extract this job for scheduling (Y/N):"                   <  
0366 CALL EDIT.SUB                                                   <  
0367 P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"                     <  

0368 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
0369 IF VALUE = "Y" THEN                                             <  
0370 MAT JBS.REC = ""                                                   MAT JBS.REC = ""
0371 JBS.DUE.DATE = JOB.TRACK.DATE<1,4>                                 JBS.DUE.DATE = JOB.TRACK.DATE<1,4>
0372 JBS.CUST.NAME = CUST.NAME                                          JBS.CUST.NAME = CUST.NAME
0373 JBS.DIV = JOB.DIV                                                  JBS.DIV = JOB.DIV
0374 JBS.SCH.FLAG = "P"                                                 JBS.SCH.FLAG = "P"

0375 JBS.CUST.ID = JOB.CUST                                             JBS.CUST.ID = JOB.CUST
0376 JBS.JOB.COMMENT = JOB.COMMENTS<1,1>                                JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
0377 IF CO.PSS.BACKWARD.FLAG = "Y" THEN                              <  
0378 JBS.SCHED.MODE = "D"                                            <  
0379 JBS.SCHED.DATE = JBS.DUE.DATE                                   <  
0380 END ELSE                                                        <  
0381 JBS.SCHED.MODE = "S"                                               JBS.SCHED.MODE = "S"
0382 JOBS.SCHED.DATE = DATE() + 1                                    |  JBS.SCHED.DATE = DATE() + 1
0383 END                                                             <  

0384 MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO                          MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO
0385 *T26551                                                         <  
0386 CALL GET.JBS.USER.FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XX  <  
0387 MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO                       <  
0388 END                                                                END
0389 END                                                                END
0390 END ELSE                                                        <  
0391 MATREAD JBS.REC FROM JOB.SCHED, CONO:JOBNO THEN                 <  

0392 IF JBS.DUE.DATE # JOB.TRACK.DATE<1,4> THEN                      <  
0393 JBS.DUE.DATE = JOB.TRACK.DATE<1,4>                              <  
0394 END                                                                END
0395 IF JBS.CUST.NAME # CUST.NAME THEN                               |  *T25977 ^
0396 JBS.CUST.NAME = CUST.NAME                                       <  
0397 END                                                             <  
0398 IF JBS.DIV # JOB.DIV THEN                                       <  

0399 JBS.DIV = JOB.DIV                                               <  
0400 END                                                             <  
0401 IF JBS.CUST.ID # JOB.CUST THEN                                  <  
0402 JBS.CUST.ID = JOB.CUST                                          <  
0403 END                                                             <  
0404 IF JBS.JOB.COMMENT # JOB.COMMENTS<1,1> THEN                     <  
0405 JBS.JOB.COMMENT = JOB.COMMENTS<1,1>                             <  

0406 END                                                             <  
0407 IF JBS.SCH.FLAG = "S" THEN JBS.SCH.FLAG = "J"                   <  
0408 CALL GET.JBS.USER.FIELDS(CONO,JOBNO,MAT JOB.REC,MAT JBS.REC,XX  <  
0409 MATWRITE JBS.REC ON JOB.SCHED, CONO:JOBNO                       <  
0410 END                                                             <  
0411 END                                                             <  
0412 END                                                             <  

0413 END                                                             <  
0414 *T26421 ^                                                       <  
0415 IF CO.JES = "Y" THEN                                            <  
0416 ESTAT = 0     ;*T22154                                          <  
0417 CALL JOB.BOOK.SUB (CONO,"3",JOBNO,OLD.EST,JOB.EST,MAT EST.PAR,  <  
0418 END                                                             <  
0419 519*                                                               519*

0419 519*                                                               519*
0420 END CASE                                                           END CASE
0421 GOTO 99999                                                         GOTO 99999
0422 600*                                                               600*
0423 RESV.LOC = 0                                                       RESV.LOC = 0
0424 CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,JOBNO)              |  CALL JOB.RESV.SUB(RESV.ACTION,RESV.LOC,CONO,JOBNO)
0425 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0426 FOR M = MCNT TO 1 STEP -1                                          FOR M = MCNT TO 1 STEP -1
0427 IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> =     IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M>
0428 JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB

0764 O.R = "O"                                                          O.R = "O"
0765 CALL EDIT.SUB                                                      CALL EDIT.SUB
0766 P_X= 0;P_Y= 23;P_VALUE= "";P_OPT= "CL"                             P_X= 0;P_Y= 23;P_VALUE= "";P_OPT= "CL"
0767 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0768 RETURN                                                             RETURN
0769                                                                 >  *
0770                                                                 >  *T24091 v
0771                                                                 >  PROCESS.UPD.SUB.JOBS: 
0772                                                                 >  *
0773                                                                 >  HOLD.CUST = JOB.CUST

0774                                                                 >  HOLD.CATG = JOB.CATG
0775                                                                 >  HOLD.TYPE = JOB.TYPE
0776                                                                 >  HOLD.SALES.CODE = JOB.SALES.CODE
0777                                                                 >  *T26706 v
0778                                                                 >  HOLD.SLSMN = JOB.SLSMN
0779                                                                 >  HOLD.CSR = HOLD.CSR
0780                                                                 >  *T26706 ^

0781                                                                 >  *
0782                                                                 >  MAT SAVE.JOB = MAT JOB.REC
0783                                                                 >  *
0784                                                                 >  JOB.LIST = JOB.SUBS
0785                                                                 >  NUM.JOBS.LIST = DCOUNT(JOB.LIST,@VM)
0786                                                                 >  FOR II = 1 TO NUM.JOBS.LIST
0787                                                                 >  MATREADU JOB.REC FROM JOB,CONO:JOB.LIST<1,II> THEN

0788                                                                 >  IS.CHG=0
0789                                                                 >  IF JOB.CATG # HOLD.CATG THEN
0790                                                                 >  IS.CHG=1
0791                                                                 >  JOB.CATG=HOLD.CATG
0792                                                                 >  END
0793                                                                 >  IF JOB.CUST # HOLD.CUST THEN
0794                                                                 >  IS.CHG=1

0795                                                                 >  JOB.CUST=HOLD.CUST
0796                                                                 >  END
0797                                                                 >  IF JOB.SALES.CODE # HOLD.SALES.CODE THEN
0798                                                                 >  IS.CHG=1
0799                                                                 >  JOB.SALES.CODE = HOLD.SALES.CODE
0800                                                                 >  END
0801                                                                 >  IF JOB.TYPE # HOLD.TYPE THEN

0802                                                                 >  IF JOB.TYPE # "S" THEN
0803                                                                 >  IS.CHG=1
0804                                                                 >  JOB.TYPE=HOLD.TYPE
0805                                                                 >  END
0806                                                                 >  END
0807                                                                 >  *T26706 v
0808                                                                 >  IF JOB.SLSMN # HOLD.SLSMN THEN

0809                                                                 >  IS.CHG=1
0810                                                                 >  JOB.SLSMN = HOLD.SLSMN
0811                                                                 >  END
0812                                                                 >  IF JOB.CSR # HOLD.CSR THEN
0813                                                                 >  IS.CHG=1
0814                                                                 >  JOB.CSR = HOLD.CSR
0815                                                                 >  END

0816                                                                 >  *T26706 ^
0817                                                                 >  END
0818                                                                 >  IF IS.CHG THEN
0819                                                                 >  MATWRITE JOB.REC ON JOB,CONO:JOB.LIST<1,II>
0820                                                                 >  END ELSE
0821                                                                 >  RELEASE JOB,CONO:JOB.LIST<1,II>
0822                                                                 >  END

0823                                                                 >  NEXT II
0824                                                                 >  *
0825                                                                 >  MAT JOB.REC = MAT SAVE.JOB
0826                                                                 >  *
0827                                                                 >  RETURN
0828                                                                 >  *
0829                                                                 >  *T24091 ^

0830                                                                 >  *
0831 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
0832 ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN                   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
0833 92000 *                                                            92000 *
0834 ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN                   ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
0835 93000 *                                                            93000 *
0836 ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)                           ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)


JCSBP/JOB.OSP.INQ                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JOB.OSP.INQ
Printed for thompson at 06/28/2006 04:41:58PM

0001 SUBROUTINE JOB.OSP.INQ(CONO,JOB.NUM,PROG.FLAG,SUB.FLAG)            SUBROUTINE JOB.OSP.INQ(CONO,JOB.NUM,PROG.FLAG,SUB.FLAG)
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0008 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0009                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0022 *T21177 diane 11/06/1996 * REV11 UPG                               *T21177 diane 11/06/1996 * REV11 UPG
0023 *T21282 julie 11/26/1996 * PROGRAM WIPES OUT MASTER SUMMARY IN     *T21282 julie 11/26/1996 * PROGRAM WIPES OUT MASTER SUMMARY 
0024 *T21296 lanny 12/04/1996 * If Job has no subs the PO'S do not      *T21296 lanny 12/04/1996 * If Job has no subs the PO'S do no
0025 *T21317 lanny 12/11/1996 * Duplicate line data when outside po     *T21317 lanny 12/11/1996 * Duplicate line data when outside 
0026 *                          multi-lines for same job.               *                          multi-lines for same job.
0027 *T23319 alex 04/11/2000 * Fix calculation for a UOM Type "C";   |  *T23499 rick 08/24/1999 * Modify pgm to use new format of Ou
0028 *                         defaulting as a "EA" Type.            |  *                         records with new seq number
0029 *T25755 cm 04/16/2001 * Modify pgm to use new format of Outsid  |  *T23319 lanny 04/10/2000 * Fix UOM = C
0030 *                       records with new seq #.                 <  
0031 *T26334 edvard 12/19/01 * REV12                                 <  

0032 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  <  
0033 **************************************************************     ************************************************************
0034 *COPY>JCS.CPYLIB>JOB.STATS                                         *COPY>JCS.CPYLIB>JOB.STATS
0035 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0036 *COPY>POS.CPYLIB>OUTSIDE.PO                                        *COPY>POS.CPYLIB>OUTSIDE.PO
0037 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0038 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER

0074 MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JSTAT.OPO.NO<1,JJ> ELSE      MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JSTAT.OPO.NO<1,JJ> ELS
0075 MAT OPO.REC = ""                                                   MAT OPO.REC = ""
0076 END                                                                END
0077 OJCNT = DCOUNT(OPO.JOB.NO,VM)                                      OJCNT = DCOUNT(OPO.JOB.NO,VM)
0078 FOR OJ = 1 TO OJCNT                                                FOR OJ = 1 TO OJCNT
0079 *T25755 v                                                       |  *T23499 v
0080 *                 IF (JOB.SUBS<1,X> = OPO.JOB.NO<1,OJ>) AND (J  |  ***                     IF (JOB.SUBS<1,X> = OPO.JOB.NO<1,OJ>
0081 IF (JOB.SUBS<1,X> = OPO.JOB.NO<1,OJ>) AND (JSTAT.PROD.LINE<1,J     IF (JOB.SUBS<1,X> = OPO.JOB.NO<1,OJ>) AND (JSTAT.PROD.LINE<1
0082 *T25755 ^                                                       |  *T23499 ^
0083 PCNT = PCNT + 1                                                    PCNT = PCNT + 1

0084 VAR<1,PCNT> = JSTAT.OPO.NO<1,JJ>                                   VAR<1,PCNT> = JSTAT.OPO.NO<1,JJ>
0085 *T25755 v                                                       |  *T23499 v
0086 *                    PLINE<1,PCNT> = JSTAT.PROD.LINE<1,JJ>      |  ***                        PLINE<1,PCNT> = JSTAT.PROD.LINE<1
0087 PLINE<1,PCNT> = FIELD(JSTAT.PROD.LINE<1,JJ>,'@',1)              |  PLINE<1,PCNT> = FIELD(JSTAT.PROD.LINE<1,JJ>,"@",1)
0088 *T25755 ^                                                       |  *T23499 ^
0089 EXP.DATE<1,PCNT> = OPO.EXP.DATE<1,OJ>                              EXP.DATE<1,PCNT> = OPO.EXP.DATE<1,OJ>
0090 OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.C     OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO
0091 IF OPEN.QTY<1,PCNT> < 0 THEN OPEN.QTY<1,PCNT> = 0                  IF OPEN.QTY<1,PCNT> < 0 THEN OPEN.QTY<1,PCNT> = 0

0092 IF OPEN.QTY<1,PCNT> # 0 THEN                                       IF OPEN.QTY<1,PCNT> # 0 THEN
0093 OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.C     OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO
0094 *T21296 v                                                          *T21296 v
0095 DESC.PRICE = INT(OPO.U.PRICE<1,OJ>*((OPO.DISCOUNT<1,OJ>/10000)     DESC.PRICE = INT(OPO.U.PRICE<1,OJ>*((OPO.DISCOUNT<1,OJ>/1000
0096 DESC.PRICE = INT(OPO.U.PRICE<1,OJ> - DESC.PRICE)                   DESC.PRICE = INT(OPO.U.PRICE<1,OJ> - DESC.PRICE)
0097 *T23319 v                                                       |  IF OPO.UOM<1,OJ> = "M" THEN
0098 BEGIN CASE                                                      <  
0099 CASE OPO.UOM<1,OJ> = "M"                                        <  
0100 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/1000     OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/10
0101 CASE OPO.UOM<1,OJ> = "C"                                        |  *T23319 v

0102                                                                 >  END ELSE
0103                                                                 >  IF OPO.UOM<1,OJ> = 'C' THEN
0104 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/1000     OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/10
0105 CASE 1                                                          <  
0106 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT>/10  <  
0107 END CASE                                                        <  
0108 * IF OPO.UOM<1,OJ> = "M" THEN                                   <  

0109 *   OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/  <  
0110 * END ELSE                                                      <  
0111 *   OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT  <  
0112 * END                                                           <  
0113 *T23319 ^                                                          *T23319 ^
0114                                                                 >  END ELSE
0115                                                                 >  OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT>/

0116                                                                 >  END
0117                                                                 >  END
0118 *T21296 ^                                                          *T21296 ^
0119 END ELSE                                                           END ELSE
0120 OPEN.AMT<1,PCNT> = 0                                               OPEN.AMT<1,PCNT> = 0
0121 END                                                                END
0122 IF OPEN.AMT<1,PCNT> < 0 THEN OPEN.AMT<1,PCNT> = 0                  IF OPEN.AMT<1,PCNT> < 0 THEN OPEN.AMT<1,PCNT> = 0

0152 END                                                                END
0153 OJCNT = DCOUNT(OPO.JOB.NO,VM)                                      OJCNT = DCOUNT(OPO.JOB.NO,VM)
0154 FOR OJ = 1 TO OJCNT                                                FOR OJ = 1 TO OJCNT
0155 *T21317 v                                                          *T21317 v
0156 *       IF JOB.NUM = OPO.JOB.NO<1,OJ> THEN                         *                 IF JOB.NUM = OPO.JOB.NO<1,OJ> THEN
0157 *T25755 v                                                       |  *T23499 v
0158 *           IF JOB.NUM = OPO.JOB.NO<1,OJ> AND JSTAT.PROD.LINE<  |  ***                  IF JOB.NUM = OPO.JOB.NO<1,OJ> AND JSTAT
0159 IF JOB.NUM = OPO.JOB.NO<1,OJ> AND JSTAT.PROD.LINE<1,JJ> = OPO.     IF JOB.NUM = OPO.JOB.NO<1,OJ> AND JSTAT.PROD.LINE<1,JJ> = OP
0160 *T25755 ^                                                       |  *T23499 ^
0161 *T21317 ^                                                          *T21317 ^

0162 PCNT = PCNT + 1                                                    PCNT = PCNT + 1
0163 VAR<1,PCNT> = JSTAT.OPO.NO<1,JJ>                                   VAR<1,PCNT> = JSTAT.OPO.NO<1,JJ>
0164 *T25755 v                                                       |  *T23499 v
0165 *              PLINE<1,PCNT> = JSTAT.PROD.LINE<1,JJ>            |  ***                     PLINE<1,PCNT> = JSTAT.PROD.LINE<1,JJ
0166 PLINE<1,PCNT> = FIELD(JSTAT.PROD.LINE<1,JJ>,'@',1)              |  PLINE<1,PCNT> = FIELD(JSTAT.PROD.LINE<1,JJ>,"@",1)
0167 *T25755 ^                                                       |  *T23499 ^
0168 EXP.DATE<1,PCNT> = OPO.EXP.DATE<1,OJ>                              EXP.DATE<1,PCNT> = OPO.EXP.DATE<1,OJ>
0169 OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.C     OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO
0170 IF OPEN.QTY<1,PCNT> < 0 THEN OPEN.QTY<1,PCNT> = 0                  IF OPEN.QTY<1,PCNT> < 0 THEN OPEN.QTY<1,PCNT> = 0

0171 IF OPEN.QTY<1,PCNT> # 0 THEN                                       IF OPEN.QTY<1,PCNT> # 0 THEN
0172 OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO.C     OPEN.QTY<1,PCNT> = OPO.QTY<1,OJ> - OPO.QTY.RECVD<1,OJ> - OPO
0173 *T21296 v                                                          *T21296 v
0174 DESC.PRICE = INT(OPO.U.PRICE<1,OJ>*((OPO.DISCOUNT<1,OJ>/10000)     DESC.PRICE = INT(OPO.U.PRICE<1,OJ>*((OPO.DISCOUNT<1,OJ>/1000
0175 DESC.PRICE = INT(OPO.U.PRICE<1,OJ> - DESC.PRICE)                   DESC.PRICE = INT(OPO.U.PRICE<1,OJ> - DESC.PRICE)
0176 *T23319 v                                                       |  IF OPO.UOM<1,OJ> = "M" THEN
0177 BEGIN CASE                                                      <  
0178 CASE OPO.UOM<1,OJ> = "M"                                        <  
0179 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/1000     OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/10
0180 CASE OPO.UOM<1,OJ> = "C"                                        |  *T23319 v

0181                                                                 >  END ELSE
0182                                                                 >  IF OPO.UOM<1,OJ> = 'C' THEN
0183 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/1000     OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/10
0184 CASE 1                                                          <  
0185 OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT>/10  <  
0186 END CASE                                                        <  
0187 * IF OPO.UOM<1,OJ> = "M" THEN                                   <  

0188 *   OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100)*(OPEN.QTY<1,PCNT>/  <  
0189 * END ELSE                                                      <  
0190 *   OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT  <  
0191 * END                                                           <  
0192 *T23319 ^                                                          *T23319 ^
0193                                                                 >  END ELSE
0194                                                                 >  OPEN.AMT<1,PCNT> = INT((DESC.PRICE/100) * (OPEN.QTY<1,PCNT>/

0195                                                                 >  END
0196                                                                 >  END
0197 *T21296 ^                                                          *T21296 ^
0198 END ELSE                                                           END ELSE
0199 OPEN.AMT<1,PCNT> = 0                                               OPEN.AMT<1,PCNT> = 0
0200 END                                                                END
0201 IF OPEN.AMT<1,PCNT> < 0 THEN OPEN.AMT<1,PCNT> = 0                  IF OPEN.AMT<1,PCNT> < 0 THEN OPEN.AMT<1,PCNT> = 0

0232 CASE ACTION='S'                                                    CASE ACTION='S'
0233 LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE               LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
0234 *           LN=LN + PAGE.SIZE                                      *           LN=LN + PAGE.SIZE
0235 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
0236 GOSUB 30000                                                        GOSUB 30000
0237 * T25978 v                                                      <  
0238 CASE ACTION = 'SR'                                              <  
0239 LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE            <  
0240 IF LN < 1 THEN LN = 1                                           <  
0241 GOSUB 30000                                                     <  

0242 CASE ACTION = 'ST'                                              <  
0243 LN = 1                                                          <  
0244 GOSUB 30000                                                     <  
0245 CASE ACTION = 'SB'                                              <  
0246 LN = LINES                                                      <  
0247 GOSUB 30000                                                     <  
0248 * T25978 ^                                                      <  


JCSBP/JRS.OS.SUM                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/JRS.OS.SUM
Printed for thompson at 06/28/2006 04:41:59PM

0011 * DATE        - 12/05/90                                           * DATE        - 12/05/90
0012 * DESCRIPTION - This program produces a Job Outside Purchases      * DESCRIPTION - This program produces a Job Outside Purchase
0013 * report comparing estimates to actuals on a cost center,          * report comparing estimates to actuals on a cost center, 
0014 * department and total level.                                      * department and total level.
0015 *T21885 gat 05/07/1997 * FIX JOB LENGTH                            *T21885 gat 05/07/1997 * FIX JOB LENGTH
0016 *T26556 ajibaly 05/08/2002 * Use report # and GET.PROG.HEAD.    <  
0017 **************************************************************     ************************************************************
0018 *COPY>PMC.CPYLIB>VEND                                              *COPY>PMC.CPYLIB>VEND
0019 *COPY>JCS.CPYLIB>JOB.OSP                                           *COPY>JCS.CPYLIB>JOB.OSP
0020 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT

0027 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0028 *                                                                  *
0029 *---- INITIALIZATION                                               *---- INITIALIZATION
0030 *                                                                  *
0031 PAGE.NO = 0                                                        PAGE.NO = 0
0032 *T26556 v                                                       |  RPT.NO = 'XXXX'
0033 *     RPT.NO="XXXX"                                             <  
0034 HD1 = ""; HD2 = ""                                              <  
0035 RPT.NAME = ""                                                   <  
0036 RPT.DATE = DATE()                                               <  

0037 CALL GET.PROG.HEAD(CONO,C.CO.NAME,RPT.NAME,RPT.NO,RPT.DATE,HD1  <  
0038 PRINTER ON                                                      <  
0039 *T26556 ^                                                       <  
0040 CCTR.TOT = 0                                                       CCTR.TOT = 0
0041 CCTR.QTY = 0                                                       CCTR.QTY = 0
0042 CCTR.E.R.COST=0                                                    CCTR.E.R.COST=0
0043 CCTR.E.R.QTY=0                                                     CCTR.E.R.QTY=0

0366 *                                                                  *
0367 7000 *---- PRINT HEADINGS                                          7000 *---- PRINT HEADINGS
0368 *                                                                  *
0369 PRINT CHAR(12)                                                     PRINT CHAR(12)
0370 PAGE.NO = PAGE.NO + 1                                              PAGE.NO = PAGE.NO + 1
0371 IF JRSD.CONS = "Y" THEN                                         |  IF JRSD.CONS="Y" THEN
0372 CONSOL = "CONSOLIDATED"                                         |  * T21885
0373                                                                 >  PLINE = '#':JOBNO "L#8":'CONSOLIDATED REPORT NO: ':RPT.NO "L
0374 END ELSE                                                           END ELSE
0375 CONSOL = "            "                                         |  PLINE = '#':JOBNO "L#8":SPACE(11):'REPORT NO: ':RPT.NO "L#4"

0376                                                                 >  * T21885
0377 END                                                                END
0378 PLINE = '#':JOBNO "L#8":CONSOL:' REPORT NO: ':RPT.NO "L#4":SPA  <  
0379 N = SPACE((50-LEN(C.CO.NAME))/2)                                   N = SPACE((50-LEN(C.CO.NAME))/2)
0380 PLINE = PLINE:N:C.CO.NAME:N:SPACE(8):OCONV(DATE(),"D2/")"R#8"      PLINE = PLINE:N:C.CO.NAME:N:SPACE(8):OCONV(DATE(),"D2/")"R#8
0381 PLINE = PLINE:SPACE(12):'PAGE: ':PAGE.NO                           PLINE = PLINE:SPACE(12):'PAGE: ':PAGE.NO
0382 *T26556 v                                                       |  PRINT PLINE

0383 *     PRINT PLINE                                               |  PLINE = JOB.CUST "L#8":SPACE(34):'O U T S I D E   P U R C H 
0384 *     PLINE = JOB.CUST "L#8":SPACE(34):'O U T S I D E   P U R   |  PRINT PLINE
0385 *     PRINT PLINE                                               <  
0386 PRINT HD1:PAGE.NO                                               <  
0387 PRINT HD2                                                       <  
0388 PRINT "Job Number: ":JOBNO "L#8":SPACE(1):CONSOL                <  
0389 PRINT JOB.CUST "L#8"                                            <  

0390 *T26556 ^                                                       <  
0391 PLINE = C.CUST.NAME                                                PLINE = C.CUST.NAME
0392 PRINT PLINE                                                        PRINT PLINE
0393 PLINE = JOB.QTY<1,1>"L#7":SPACE(45):'FOR ITEMS THROUGH: ':OCON     PLINE = JOB.QTY<1,1>"L#7":SPACE(45):'FOR ITEMS THROUGH: ':OC
0394 PRINT PLINE                                                        PRINT PLINE
0395 PLINE = JOB.DESC "L#30":SPACE(22):'DATE LAST ENTRY  : ':OCONV(     PLINE = JOB.DESC "L#30":SPACE(22):'DATE LAST ENTRY  : ':OCON
0396 PRINT PLINE                                                        PRINT PLINE

0403 PLINE = PLINE:'DATE   PO NUM  INV DATE   QTY     COST    QTY       PLINE = PLINE:'DATE   PO NUM  INV DATE   QTY     COST    QTY
0404 PRINT PLINE                                                        PRINT PLINE
0405 PLINE = '---- ---- ---- ':STR('-',59):'    ----- -------- ----     PLINE = '---- ---- ---- ':STR('-',59):'    ----- -------- --
0406 PLINE = PLINE:' -------  ------ ------- ------'                    PLINE = PLINE:' -------  ------ ------- ------'
0407 PRINT PLINE                                                        PRINT PLINE
0408 *T26556 v                                                       |  LINE.COUNT = 9
0409 *     LINE.COUNT = 9                                            <  
0410 LINE.COUNT = 11                                                 <  
0411 *T26556 ^                                                       <  
0412 RETURN                                                             RETURN

0423 LINE.COUNT = LINE.COUNT + 2                                        LINE.COUNT = LINE.COUNT + 2
0424 RETURN                                                             RETURN
0425 *                                                                  *
0426 99999 *                                                            99999 *
0427 *                                                                  *
0428 PRINTER OFF                                                     <  
0429 RETURN                                                             RETURN
0430 END                                                                END
0431 


JCSBP/MATL.ED.LIST.RPT                                             /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/MATL.ED.LIST.RPT
Printed for thompson at 06/28/2006 04:41:59PM

0001 **************************************************************     ************************************************************
0002 * REVISION   -[08.0]                                            |  * REVISION    - [08.0]
0003 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0004 * SYSTEM     -PRIMAC                                            |  * SYSTEM      - PRIMAC
0005 * SOURCE     -JCSBP                                             |  * SOURCE      - JCSBP
0006 * PROGRAM    -MATL.ED.LIST.RPT                                  |  * PROGRAM     - MATL.ED.LIST.RPT
0007 * DATE       -12/29/86                                          |  * DATE        - 12/29/86
0008 * BY         -CURTIS WILLIAMS, C.B.A                            |  * BY          - CURTIS WILLIAMS, C.B.A

0007 * DATE       -12/29/86                                          |  * DATE        - 12/29/86
0008 * BY         -CURTIS WILLIAMS, C.B.A                            |  * BY          - CURTIS WILLIAMS, C.B.A
0009 * DESCRIPTION -                                                    * DESCRIPTION -
0010 *T20868 doug 08/15/1996 * Allow paper type "PC"                    *T20868 doug 08/15/1996 * Allow paper type "PC"
0011 *T20916 gat 08/27/1996 * FIX MATL EDIT PROBLEM WITH WHSE.LOC       *T20916 gat 08/27/1996 * FIX MATL EDIT PROBLEM WITH WHSE.LOC
0012 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR SERIAL NOT RE  |  *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID N
0013 *T21718 lanny 03/18/1997 * Incorrect error checks on qty type.     *T21718 lanny 03/18/1997 * Incorrect error checks on qty typ
0014 *T21758 lanny 03/26/1997 * The errors listed donot include all     *T21758 lanny 03/26/1997 * The errors listed donot include a
0015 *                          existence and error msgs are trunca     *                          existence and error msgs are trun
0016 *T22158 lanny 08/19/1997 * DMT.QTY must=IWLO.CURR.WGHT for rol  |  *T22158 lanny 08/19/1997 * DMT.QTY must = IWLO.CURR.WGHT for

0017 *                          QTYPE=WR or DR AND DMT.QTY=0         |  *                          QTYPE = WR or DR AND DMT.QTY=0
0018 *T23072 gat 07/15/1998 * FIX DMT.RS.QTYPE EDIT                     *T23072 gat 07/15/1998 * FIX DMT.RS.QTYPE EDIT
0019 *T23182 markt 08/14/1998 * Uninitialized variable errors.          *T23182 markt 08/14/1998 * Uninitialized variable errors.
0020 *T25003 gat 03/31/2000 * FIX QTY CONVERSION ON TOTAL LINE          *T25003 gat 03/31/2000 * FIX QTY CONVERSION ON TOTAL LINE
0021 *T26113 lanny 08/24/2001 * Adjust qty for small rounding diffe     *T26113 lanny 08/24/2001 * Adjust qty for small rounding dif
0022 *                          remaining O/H is MSI or LBS.            *                          remaining O/H is MSI or LBS.
0023 *T26156 lanny 09/18/2001 * In reject mode DMT.STATUS is gettin     *T26156 lanny 09/18/2001 * In reject mode DMT.STATUS is gett

0024 *                          Also in GUI the black screen is dis     *                          Also in GUI the black screen is d
0025 *                          issues prompt from FIELD.EDIT progr     *                          issues prompt from FIELD.EDIT pro
0026 *T26334 epitka 12/14/2001 * REV12                               |  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0027 *T26493 cmykleb 03/28/2002 * Change pgm to get report # from p  |  *                             needing a authorization.
0028 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  <  
0029 *                             Whse.                             <  
0030 *T26556 adelgado 05/10/2002 * Fix column heading alignment.     <  
0031 *T26599 epitka 06/18/2002 * ALLOW USE OF NON RESERVED SERIAL O  <  
0032 *                           FOR CATEGORY THAT HAS CATG.RSV.SER  <  

0033 *T26505 epitka 08/23/2002 * FORCE LOCATION FROM THE SERIAL      <  
0034 *T27427 lross 05/13/2003 * Correct total for multi-usage of sa  <  
0035 *                          where last serial is QTY.TYPE ...R   <  
0036 *T27596 lross 07/24/2003 * INV.JOB.STATS record trashed for mu  <  
0037 *                          receipts same prod/whse/job "AC"tua  <  
0038 *C42474 cmykleb 10/03/2003 * Fix uninitialized variable error   <  
0039 *T27622 lross 08/08/2003 * Issue warning for posting of future  <  

0040 *                          availability.                        <  
0041 *T27705 lross 10/24/2003 * Increase length SERIAL to 15.        <  
0042 *T27785 thompson 11/13/2003 * Add time processed to print to h  <  
0043 *                             correct entries on DR usave       <  
0044 *T28064 lross 04/16/2004 * Correct qty shown for QTYPE[2,1]=R.  <  
0045 *T28199 lross 07/21/2004 * Check for missing Spoil Code.        <  
0046 **************************************************************     ************************************************************

0060 *COPY>ICS.CPYLIB>INV.WHSE.LOC                                      *COPY>ICS.CPYLIB>INV.WHSE.LOC
0061 *COPY>ICS.CPYLIB>INV.STATS                                         *COPY>ICS.CPYLIB>INV.STATS
0062 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0063 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0064 *COPY>ICS.CPYLIB>INV.CNV                                           *COPY>ICS.CPYLIB>INV.CNV
0065 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0066 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0067 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0068 *                                                               |  *---- INITIALIZATION
0069 DEFFUN DIVISION.POSITION (CONO,CONTROL.FILE,DIV.CODE)           |  LINE.COUNT = 99;PAGE.NO = 0

0070 DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)    |  SP1 = SPACE(1)
0071 CUR.PERIOD = ''                                                 |  DMT.ERRMSG1 = "JOB IS NOT ON FILE"
0072 DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)           |  DMT.ERRMSG2 = "JOB CANCELLED"
0073 *                                                               |  DMT.ERRMSG3 = "JOB READY TO PURGE"
0074 LINE.COUNT=99;PAGE.NO = 0                                       |  DMT.ERRMSG4 = "JOB PURGED"
0075 SP1=SPACE(1)                                                    |  DMT.ERRMSG5 = "C/N LOCATE PRODUCT"
0076 DMT.ERRMSG1="JOB IS NOT ON FILE"                                |  DMT.ERRMSG6 = "C/N LOCATE PROD LINE"

0077 DMT.ERRMSG2="JOB CANCELLED"                                     |  DMT.ERRMSG7 = "INVALID PRODUCT TYPE"
0078 DMT.ERRMSG3="JOB READY TO PURGE"                                |  DMT.ERRMSG8 = "CUSTOMER OWNS INVNTY"
0079 DMT.ERRMSG4="JOB PURGED"                                        |  DMT.ERRMSG9 = "C/N USE FNGD PROD"
0080 DMT.ERRMSG5="C/N LOCATE PRODUCT"                                |  DMT.ERRMSG10 = "INVALID WHSE CODE"
0081 DMT.ERRMSG6="C/N LOCATE PROD LINE"                              |  DMT.ERRMSG11 = "INVALID WHSE LOC"
0082 DMT.ERRMSG7="INVALID PRODUCT TYPE"                              |  DMT.ERRMSG12 = "C/N READ DEPT RECORD"
0083 DMT.ERRMSG8="CUSTOMER OWNS INVNTY"                              |  DMT.ERRMSG13 = "DEPT/CCTR MISMATCH"

0084 DMT.ERRMSG9="C/N USE FNGD PROD"                                 |  DMT.ERRMSG14 = "CCTR C/N BE FROZEN"
0085 DMT.ERRMSG10="INVALID WHSE CODE"                                |  DMT.ERRMSG15 = "C/N READ CMPY RECORD"
0086 DMT.ERRMSG11="INVALID WHSE LOC"                                 |  DMT.ERRMSG16 = "C/N READ COST CNTR"
0087 DMT.ERRMSG12="C/N READ DEPT RECORD"                             |  DMT.ERRMSG17 = "DIV/DEPT MISMATCH"
0088 DMT.ERRMSG13="DEPT/CCTR MISMATCH"                               |  DMT.ERRMSG18 = "INVNTY QTY NOT AVAIL"
0089 DMT.ERRMSG14="CCTR C/N BE FROZEN"                               |  DMT.ERRMSG19 = "BAD QTY/INV.PAP.TYPE"
0090 DMT.ERRMSG15="C/N READ CMPY RECORD"                             |  DMT.ERRMSG20 = "C/N READ IWLO.REC"

0091 DMT.ERRMSG16="C/N READ COST CNTR"                               |  DMT.ERRMSG21 = "C/N READ DIV RECORD"
0092 DMT.ERRMSG17="DIV/DEPT MISMATCH"                                |  DMT.ERRMSG22 = "JOB/TYPE MISMATCH"
0093 DMT.ERRMSG18="INVNTY QTY NOT AVAIL"                             |  DMT.ERRMSG23 = "JOB/DIV MISMATCH"
0094 DMT.ERRMSG19="BAD QTY/INV.PAP.TYPE"                             |  DMT.ERRMSG24 = "JOB/DEPT MISMATCH"
0095 DMT.ERRMSG20="C/N READ IWLO.REC"                                |  T.LINE = ''
0096 DMT.ERRMSG21="C/N READ DIV RECORD"                              |  T.LINE = "----------"
0097 DMT.ERRMSG22="JOB/TYPE MISMATCH"                                |  D.LINE = ""

0098 DMT.ERRMSG23="JOB/DIV MISMATCH"                                 |  D.LINE = "------ -------- - -------- -- ---- --- -----------
0099 DMT.ERRMSG24="JOB/DEPT MISMATCH"                                |  HDD.LINE = "";HD.LINE = ""
0100 T.LINE=''                                                       |  HDD.LINE = "                                                
0101 T.LINE="----------"                                             |  HD.LINE = "TRANS  JOB NUM  T SP.CODE  DV DEPT CTR   PRODUCT 
0102 D.LINE=""                                                       |  DCNT = 0
0103 D.LINE= "------ -------- - -------- -- ---- --- --------------  |  SAVE.ID = ""
0104 HDD.LINE="";HD.LINE = ""                                        |  SAVE.QTY = ""

0105 *T27785HDD.LINE="                                               |  SAVE.STATUS = ""
0106 HDD.LINE = SPACE(65):"ENTRY":SPACE(2):"SERIAL ID"               |  EDIT.ERROR = 0
0107 *T27705HD.LINE="TRANS  JOB NUM  T SP.CODE  DV DEPT CTR   PRODU  |  QTY.ERROR = 0
0108 HD.LINE="TRANS  JOB NUM  T SP.CODE  DV DEPT CTR   PRODUCT NUM   |  PREV.PROD = "!@#$%"
0109 DCNT=0                                                          |  PREV.WHSE = "!@#$%"
0110 SAVE.ID=""                                                      |  PREV.LOC  = "!@#$%"
0111 SAVE.QTY=""                                                     |  PREV.RSID = "!@#$%"

0112 SAVE.STATUS=""                                                  |  TOT.QTY = ''
0113 EDIT.ERROR=0                                                    |  *---- SET UP FOR SYSCOM
0114 QTY.ERROR=0                                                     |  SYS.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
0115 PREV.PROD="!@#$%"                                               <  
0116 PREV.WHSE="!@#$%"                                               <  
0117 PREV.LOC ="!@#$%"                                               <  
0118 PREV.RSID="!@#$%"                                               <  

0119 TOT.QTY=''                                                      <  
0120 *                                                               <  
0121 SYS.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)                          <  
0122 *---- OPEN FILES                                                   *---- OPEN FILES
0123 OPEN '','DAILY.MATL' TO DAILY.MATL ELSE                         |  OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG = 'DAILY.MATL
0124 ERRMSG='DAILY.MATL FILE IS MISSING';GOTO 93000                  |  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "FILE COMPANY IS 
0125 END                                                             |  OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "FILE DIVISION 

0126 OPEN "","COMPANY" TO COMPANY ELSE                               |  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG = "FILE DEPAR
0127 ERRMSG="FILE COMPANY IS MISSING";GOTO 93000                     |  OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG = "FILE COST.CN
0128 END                                                             |  OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING";GOT
0129 OPEN "","DIVISION" TO DIVISION ELSE                             |  OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB
0130 ERRMSG="FILE DIVISION IS MISSING";GOTO 93000                    |  OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "INVENTORY FI
0131 END                                                             |  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "FILE WAREHOU
0132 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE                         |  OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "INV.WHSE FILE 

0133 ERRMSG="FILE DEPARTMENT IS MISSING";GOTO 93000                  |  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG = "INV.WH
0134 END                                                             |  OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FI
0135 OPEN "","COST.CNTR" TO COST.CNTR ELSE                           |  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.
0136 ERRMSG="FILE COST.CNTR IS MISSING";GOTO 93000                   |  OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CATEGORY FILE 
0137 END                                                             |  OPEN "","ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE ERRMSG = "RO
0138 OPEN "","JOB" TO JOB ELSE                                       |  * T21523
0139 ERRMSG="JOB FILE IS MISSING";GOTO 93000                         |  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS 

0140 END                                                             |  * T21523
0141 OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE                  |  ERRM="THE DIVISIONS ON THE WAREHOUSE AND THE JOB DO NOT MATC
0142 ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000               |  *---- GET PROC VALUES
0143 END                                                             <  
0144 OPEN "","INVENTORY" TO INVENTORY ELSE                           <  
0145 ERRMSG="INVENTORY FILE IS MISSING";GOTO 93000                   <  
0146 END                                                             <  

0147 OPEN "","WAREHOUSE" TO WAREHOUSE ELSE                           <  
0148 ERRMSG="FILE WAREHOUSE IS MISSING";GOTO 93000                   <  
0149 END                                                             <  
0150 OPEN "","INV.WHSE" TO INV.WHSE ELSE                             <  
0151 ERRMSG="INV.WHSE FILE IS MISSING";GOTO 93000                    <  
0152 END                                                             <  
0153 OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE                     <  

0154 ERRMSG="INV.WHSE.LOC FILE IS MISSING";GOTO 93000                <  
0155 END                                                             <  
0156 OPEN '','INV.STATS' TO INV.STATS ELSE                           <  
0157 ERRMSG='INV.STATS FILE IS MISSING';GOTO 93000                   <  
0158 END                                                             <  
0159 OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE                   <  
0160 ERRMSG='INV.JOB.STATS FILE IS MISSING';GOTO 93000               <  

0161 END                                                             <  
0162 OPEN "","CATEGORY" TO CATEGORY ELSE                             <  
0163 ERRMSG="CATEGORY FILE IS MISSING";GOTO 93000                    <  
0164 END                                                             <  
0165 OPEN "","INV_SERIAL" TO INV_SERIAL ELSE                         <  
0166 ERRMSG="INV_SERIAL FILE IS MISSING";GOTO 93000                  <  
0167 END                                                             <  

0168 OPEN "","CONTROL" TO CONTROL ELSE                               <  
0169 ERRMSG="CONTROL FILE IS MISSING";GOTO 93000                     <  
0170 END                                                             <  
0171 *T28199 v                                                       <  
0172 OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE                 <  
0173 ERRMSG="FILE SPOILAGE.CODES IS MISSING";GOTO 93000              <  
0174 END                                                             <  

0175 *T28199 ^                                                       <  
0176 *ERRM="THE DIVISIONS ON THE WAREHOUSE AND THE JOB DO NOT MATCH  <  
0177 *                                                               <  
0178 PROCREAD ID ELSE                                                   PROCREAD ID ELSE
0179 ERRMSG=' CANNOT PERFORM PROCREAD'                               |  ERRMSG = ' CANNOT PERFORM PROCREAD'
0180 GOTO 93000                                                         GOTO 93000
0181 END                                                                END

0182 CONO=ID<1>                                                      |  CONO = ID<1>
0183 *T26493 v                                                       |  CONO.NAME = ID<2>
0184 *  CONO.NAME=ID<2>                                              |  REPORT.NAME = ID<5>
0185 *  REPORT.NAME=ID<5>                                            |  PROC.DIV = ID<6>
0186 *  REPORT.NUMBER="XXXX"                                         |  PMODE = ID<9> ;*T26156
0187 *  PROC.DIV=ID<6>                                               |  REPORT.NUMBER = "XXXX"
0188 PMODE=ID<9>;*T26156                                             |  REPORT.DATE = DATE()

0189 CONO.NAME = ""                                                  |  HD1 = "";HD2 = ""
0190 REPORT.NAME = ""                                                <  
0191 REPORT.NUMBER = ID<2>                                           <  
0192 PROC.DIV=ID<5>                                                  <  
0193 *T26493 ^                                                       <  
0194 REPORT.DATE=DATE()                                              <  
0195 HD1="";HD2 = ""                                                 <  

0196 DMT.ERR=''                                                         DMT.ERR=''
0197 MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = "" ; *  |  * T21523
0198                                                                 >  READ BCI FROM CONTROL, CONO:"RL.SK.CONTROL" ELSE BCI = ""
0199                                                                 >  * T21523
0200 MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE     MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" EL
0201 MAT JOB.CUTOFF.REC=''                                           |  MAT JOB.CUTOFF.REC = ''
0202 J.CUTOFF.NUM=0                                                  |  J.CUTOFF.NUM = 0
0203 END                                                                END

0204 *                                                               |  *---- GET HEADING
0205 CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,RE     CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,
0206 PRINTER ON                                                         PRINTER ON
0207 100* READ AND PROCESS FIRST RECORD                                 100* READ AND PROCESS FIRST RECORD
0208 PRV.SER.USED=0 ;*T27427                                         <  
0209 READNEXT KEY ELSE                                                  READNEXT KEY ELSE
0210 GOSUB 1200                                                      |  GOSUB 1000

0210 GOSUB 1200                                                      |  GOSUB 1000
0211 PRINT "NO ITEMS PRESENT"                                           PRINT "NO ITEMS PRESENT"
0212 GOTO 999999                                                        GOTO 999999
0213 END                                                                END
0214 MATREADU DMT.REC FROM DAILY.MATL, KEY ELSE GOTO 150                MATREADU DMT.REC FROM DAILY.MATL, KEY ELSE GOTO 150
0215 ORIG.DMT.STATUS=DMT.STATUS;* T20109                             |  ORIG.DMT.STATUS=DMT.STATUS ;* T20109
0216 IF PMODE # 'R' THEN DMT.STATUS='' ELSE DMT.ERR.STATUS = DMT.ST  |  *T26156 v DMT.STATUS = ''
0217 MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.REC=  |  IF PMODE # 'R' THEN DMT.STATUS = '' ELSE DMT.ERR.STATUS = DM
0218 PREV.PROD=DMT.PROD                                              |  MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.RE
0219 PRV.SERIAL=DMT.SERIAL ;*T27427                                  |  PREV.PROD = DMT.PROD

0220 RESET.QTY=0                                                        RESET.QTY=0
0221 HOLD.DMT.QTY=0 ;*T28064                                         <  
0222 GOSUB 3000                                                         GOSUB 3000
0223                                                                 >  *T20109 v
0224                                                                 >  *IF ORIG.DMT.STATUS # DMT.STATUS THEN ;*T21758
0225                                                                 >  *T26156 IF ORIG.DMT.STATUS # DMT.ERR.STATUS AND DMT.ERR.STAT
0226 IF PMODE # 'R' THEN                                                IF PMODE # 'R' THEN
0227 DMT.STATUS=DMT.ERR.STATUS                                       |  DMT.STATUS = DMT.ERR.STATUS

0228                                                                 >  *  MATWRITE DMT.REC ON DAILY.MATL,KEY
0229 END                                                                END
0230 *T28064IF RESET.QTY THEN DMT.QTY=0                              |  *T20109 ^
0231 IF RESET.QTY THEN DMT.QTY=HOLD.DMT.QTY                          |  *T22158 & 26113 v
0232 MATWRITE DMT.REC ON DAILY.MATL,KEY;*T26113                      |  IF RESET.QTY THEN DMT.QTY=0
0233                                                                 >  MATWRITE DMT.REC ON DAILY.MATL,KEY ;*T26113
0234                                                                 >  *T22158 & 26113 ^

0235 *---- READ AND PROCESS ALL THE FILES                               *---- READ AND PROCESS ALL THE FILES
0236 150*                                                               150* 
0237 DATA=0                                                          |  DATA = 0
0238 LOOP                                                               LOOP
0239 READNEXT KEY ELSE DATA=1                                        |  READNEXT KEY ELSE DATA = 1
0240 WHILE DATA=0 DO                                                 |  WHILE DATA = 0 DO
0241 MATREADU DMT.REC FROM DAILY.MATL,KEY ELSE GOTO 111                 MATREADU DMT.REC FROM DAILY.MATL,KEY ELSE GOTO 111
0242 ORIG.DMT.STATUS=DMT.STATUS;* 20109                              |  ORIG.DMT.STATUS = DMT.STATUS ;* 20109
0243 IF PMODE # 'R' THEN DMT.STATUS='' ELSE DMT.ERR.STATUS = DMT.ST  |  *T26156 v DMT.STATUS = ''

0244                                                                 >  IF PMODE # 'R' THEN DMT.STATUS = '' ELSE DMT.ERR.STATUS = DM
0245 RESET.QTY=0                                                        RESET.QTY=0
0246 IF DMT.SERIAL#PRV.SERIAL THEN PRV.SER.USED=0 ; PRV.SERIAL=DMT.  <  
0247 GOSUB 3000;* PRINT THE RECORD                                      GOSUB 3000;* PRINT THE RECORD
0248                                                                 >  *T20109 v
0249                                                                 >  * IF ORIG.DMT.STATUS # DMT.STATUS THEN ;*T21758
0250                                                                 >  *T26156 v IF ORIG.DMT.STATUS # DMT.ERR.STATUS AND DMT.ERR.ST

0251 IF PMODE # 'R' THEN                                                IF PMODE # 'R' THEN
0252 DMT.STATUS=DMT.ERR.STATUS                                       |  DMT.STATUS = DMT.ERR.STATUS
0253 END;*T26113                                                     |  *     MATWRITE DMT.REC ON DAILY.MATL,KEY
0254 *T28064  IF RESET.QTY THEN DMT.QTY=0                            |  *  END ELSE RELEASE DAILY.MATL,KEY
0255 IF RESET.QTY THEN DMT.QTY=HOLD.DMT.QTY                          |  END ;*T26113
0256 MATWRITE DMT.REC ON DAILY.MATL,KEY;*T26113                      |  *T20109 ^
0257                                                                 >  *T22158 & 26113 v
0258                                                                 >  IF RESET.QTY THEN DMT.QTY=0

0259                                                                 >  MATWRITE DMT.REC ON DAILY.MATL,KEY ;*T26113
0260                                                                 >  *T22158 & 26113 ^
0261 111*                                                               111* 
0262 REPEAT                                                             REPEAT
0263 GOSUB 4000                                                         GOSUB 4000
0264 *---- END OF JOB                                                   *---- END OF JOB
0265 PRINTER OFF                                                        PRINTER OFF

0266 GOTO 999999                                                        GOTO 999999
0267 1200* PRINT HEADINGS                                            |  1000* PRINT HEADINGS
0268 PRINT CHAR(12)                                                     PRINT CHAR(12)
0269 PAGE.NO=PAGE.NO + 1                                             |  PAGE.NO = PAGE.NO + 1
0270 PRINT HD1:PAGE.NO                                                  PRINT HD1:PAGE.NO
0271 PRINT HD2                                                          PRINT HD2
0272 PRINT "DIVISION : ":PROC.DIV                                    |  PRINT "DIVISION: ":PROC.DIV
0273 PRINT                                                              PRINT

0272 PRINT "DIVISION : ":PROC.DIV                                    |  PRINT "DIVISION: ":PROC.DIV
0273 PRINT                                                              PRINT
0274 PRINT HDD.LINE                                                     PRINT HDD.LINE
0275 PRINT HD.LINE                                                      PRINT HD.LINE
0276 PRINT D.LINE                                                       PRINT D.LINE
0277 LINE.COUNT=10                                                   |  LINE.COUNT = 10
0278 RETURN                                                             RETURN
0279 3000* PRINT THE RECORD                                             3000* PRINT THE RECORD
0280 IF PREV.PROD # DMT.PROD THEN                                       IF PREV.PROD # DMT.PROD THEN
0281 GOSUB 4000                                                         GOSUB 4000

0282 PREV.PROD=DMT.PROD                                              |  PREV.PROD = DMT.PROD
0283 MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.REC=  |  MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.RE
0284 END                                                                END
0285 IWH.ID=CONO:DMT.PROD:'!':DMT.WHSE                               |  *T22158 v
0286 MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN                      |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE
0287 PERIOD='' ; ERR.FLG='' ; ERRMSG=''                              |  MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
0288 OPEN.FLAG=1                                                     |  MAT IWH.REC = ''

0289 *T27427 v No need to call here - see line 420                   <  
0290 * CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,O  <  
0291 END ELSE                                                        <  
0292 MAT IWH.REC=''                                                  <  
0293 END                                                                END
0294 *                                                                  *
0295 IWLO.ID=IWH.ID:"!":DMT.LOC                                      |  IWLO.ID = IWH.ID : "!" : DMT.LOC

0296 MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE                   MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
0297 MAT IWLO.REC=""                                                 |  MAT IWLO.REC = ""
0298 END                                                                END
0299 CUR.QTY.USED=DMT.QTY ;*T27427                                   |  IF IWLO.R.S.ID # '' AND DMT.R.S.ID # '' THEN
0300 MAT ISTK.REC = '' ; * C42474                                    |  LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RLOC THEN
0301 IF DMT.SERIAL#"" THEN                                           |  IF DMT.RS.QTYPE[2,1] = 'R' AND DMT.QTY=0 THEN DMT.QTY = IWLO
0302 *T28199 v Move read above find in LOC.                          <  
0303 ISTK.ID=CONO:DMT.SERIAL                                         <  

0304 MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE NULL              <  
0305 LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC THEN         <  
0306 *   ISTK.ID=CONO:DMT.SERIAL                                     <  
0307 *   MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN               <  
0308 *T27427 v IF DMT.RS.QTYPE[2,1]='R' AND DMT.QTY=0 THEN           <  
0309 IF DMT.RS.QTYPE[2,1]='R' THEN                                   <  
0310 IF DMT.QTY=0 THEN                                               <  

0311 *         DMT.QTY=ISTK.CUR.QTY                                  <  
0312 DMT.QTY=ISTK.CUR.QTY-PRV.SER.USED                               <  
0313 CUR.QTY.USED=DMT.QTY                                            <  
0314 RESET.QTY=1                                                     <  
0315 HOLD.DMT.QTY=0 ;*T28064                                         <  
0316 END ELSE                                                        <  
0317 CUR.QTY.USED=(ISTK.CUR.QTY - PRV.SER.USED -DMT.QTY)             <  

0318 PRV.SER.USED += CUR.QTY.USED                                    <  
0319 HOLD.DMT.QTY=DMT.QTY ;*T28064                                   <  
0320 DMT.QTY=CUR.QTY.USED ;*T28064                                   <  
0321 RESET.QTY=1 ;*T28064                                            <  
0322 END                                                                END
0323 *T27427 ^                                                       <  
0324 END                                                                END

0325 *T28199 END                                                     |  *T22158 ^
0326 END                                                             <  
0327 END                                                             <  
0328 GOSUB 6000                                                         GOSUB 6000
0329 BEGIN CASE                                                         BEGIN CASE
0330 CASE DMT.RS.QTYPE="DR"                                          |  CASE DMT.RS.QTYPE = "DR"
0331 *T28064 v                                                       |  QUANTITY = INT(DMT.QTY/10)

0332 IF NOT(RESET.QTY) THEN                                          <  
0333 QUANTITY=INT(DMT.QTY/10)                                        <  
0334 END ELSE                                                        <  
0335 QUANTITY=INT(HOLD.DMT.QTY/10)                                   <  
0336 END                                                             <  
0337 CASE DMT.QTY >= 0                                                  CASE DMT.QTY >= 0
0338 IF NOT(RESET.QTY) THEN                                          |  QUANTITY = INT((((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) +

0339 QUANTITY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'.5','')          <  
0340 END ELSE                                                        <  
0341 QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.CNV.REC,'.5','')     <  
0342 END                                                             <  
0343 CASE 1                                                             CASE 1
0344 IF NOT(RESET.QTY) THEN                                          |  QUANTITY = INT((((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2) -
0345 QUANTITY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'-.5','')         <  

0346 END ELSE                                                        <  
0347 QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.CNV.REC,'-.5','')    <  
0348 END                                                             <  
0349 *T28064 ^                                                       <  
0350 END CASE                                                           END CASE
0351 *T27427 v TOT.QTY=TOT.QTY + QUANTITY                            |  TOT.QTY = TOT.QTY + QUANTITY
0352 TOT.QTY += CALC.STK.QTY(CUR.QTY.USED,MAT INV.CNV.REC,'.5','')   <  

0353 IF LINE.COUNT + 2 > 53 THEN                                        IF LINE.COUNT + 2 > 53 THEN
0354 GOSUB 1200                                                      |  GOSUB 1000
0355 END                                                                END
0356 LINE.COUNT=LINE.COUNT + 2                                       |  LINE.COUNT = LINE.COUNT + 2
0357 *---- BEGIN ERROR CHECKS                                           *---- BEGIN ERROR CHECKS
0358 IF PMODE='R' THEN GOTO 3099;*T26156                             |  IF PMODE = 'R' THEN GOTO 3099 ;*T26156
0359 DMT.ERR.STATUS=""                                               |  DMT.ERR.STATUS = ""
0360 DMT.ERR=""                                                      |  DMT.ERR = ""

0361 MAT JOB.REC='';MAT INV.REC = '';MAT IWH.REC = '';MAT IWLO.REC   |  MAT JOB.REC = ''; MAT INV.REC = ''; MAT IWH.REC = ''; MAT IW
0362 *---- TEST FOR JOB RELATED ERRORS                                  *---- TEST FOR JOB RELATED ERRORS
0363 MATREAD JOB.REC FROM JOB, CONO:DMT.JOB ELSE                     |  MATREAD JOB.REC FROM JOB, CONO : DMT.JOB ELSE
0364 MAT JOB.REC=''                                                  |  MAT JOB.REC = ''
0365 FND=0                                                           |  FND = 0
0366 IF NUM(DMT.JOB) THEN                                               IF NUM(DMT.JOB) THEN
0367 IF DMT.JOB < J.CUTOFF.NUM THEN FND=1                            |  IF DMT.JOB < J.CUTOFF.NUM THEN FND = 1

0368 END ELSE                                                           END ELSE
0369 JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)                               |  JC.CNT = DCOUNT(J.CUTOFF.PREFIX,VM)
0370 FOR L=1 TO JC.CNT WHILE FND = 0                                 |  FOR L = 1 TO JC.CNT WHILE FND = 0
0371 PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)                             |  PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)
0372 IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN               |  IF J.CUTOFF.PREFIX<1,L> = DMT.JOB[1,PREFX.LEN] THEN
0373 CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]           |  CHK.VALUE = DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
0374 IF NUM(CHK.VALUE) THEN                                             IF NUM(CHK.VALUE) THEN
0375 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1

0375 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1
0376 END                                                                END
0377 END                                                                END
0378 NEXT L                                                             NEXT L
0379 END                                                                END
0380 IF FND=1 THEN                                                   |  IF FND = 1 THEN
0381 JOB.DIV=DMT.DIV                                                 |  JOB.DIV = DMT.DIV
0382 JOB.TYPE=DMT.TYPE                                               |  JOB.TYPE = DMT.TYPE
0383 END ELSE                                                           END ELSE
0384 DMT.ERR='JOB #':DMT.JOB:' MISSING';GOSUB 7000;GOTO 3099         |  DMT.ERR = 'JOB #':DMT.JOB:' MISSING'; GOSUB 7000; GOTO 3099

0383 END ELSE                                                           END ELSE
0384 DMT.ERR='JOB #':DMT.JOB:' MISSING';GOSUB 7000;GOTO 3099         |  DMT.ERR = 'JOB #':DMT.JOB:' MISSING'; GOSUB 7000; GOTO 3099
0385 END                                                                END
0386 END                                                                END
0387 BEGIN CASE                                                         BEGIN CASE
0388 CASE JOB.STATUS<1,1>=9                                          |  CASE JOB.STATUS<1,1> = 9
0389 DMT.ERR="JOB #":DMT.JOB:" CANCELLED";GOSUB 7000;GOTO 3099       |  DMT.ERR = "JOB #":DMT.JOB:" CANCELLED"; GOSUB 7000; GOTO 309
0390 CASE JOB.STATUS<1,1>=7                                          |  CASE JOB.STATUS<1,1> = 7
0391 DMT.ERR="JOB #":DMT.JOB:" READY TO PURGE";GOSUB 7000;GOTO 3099  |  DMT.ERR = "JOB #":DMT.JOB:" READY TO PURGE"; GOSUB 7000; GOT
0392 CASE JOB.STATUS<1,1>=8                                          |  CASE JOB.STATUS<1,1> = 8

0393 DMT.ERR="JOB #":DMT.JOB:" IS PURGED";GOSUB 7000;GOTO 3099       |  DMT.ERR = "JOB #":DMT.JOB:" IS PURGED"; GOSUB 7000; GOTO 309
0394                                                                 >  CASE JOB.STATUS<1,1> = 3             ;* T26942
0395 CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC     CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TR
0396 IF DMT.INIT="" THEN                                             |  IF DMT.INIT = "" THEN
0397 DMT.ERR='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHOR  |  DMT.ERR = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AU
0398 GOSUB 7000                                                         GOSUB 7000
0399 END ELSE                                                           END ELSE

0400 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE
0401 DMT.ERR='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHOR  |  DMT.ERR = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AU
0402 GOSUB 7000                                                         GOSUB 7000
0403 END                                                                END
0404 END                                                                END
0405 END CASE                                                           END CASE
0406 IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN                     IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
0407 DMT.ERR="JOB/TYPE MISMATCH";GOSUB 7000                          |  DMT.ERR = "JOB/TYPE MISMATCH"; GOSUB 7000

0408 END                                                                END
0409 IF JOB.DIV # DMT.DIV THEN                                          IF JOB.DIV # DMT.DIV THEN
0410 DMT.ERR='JOB/DIV MISMATCH';GOSUB 7000                           |  DMT.ERR = 'JOB/DIV MISMATCH'; GOSUB 7000
0411 END                                                                END
0412 * T26497 v                                                      |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.
0413 IF DMT.WHSE = CO.INTR.WHSE AND CO.INTR.WHSE # '' THEN           <  
0414 DMT.ERR = 'UNABLE TO USE MATERIAL FROM INTER-DIVISIONAL WAREHO  <  
0415 GOSUB 7000                                                      <  
0416 END                                                             <  

0417 * T26497 ^                                                      <  
0418 MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.RE  <  
0419 IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN                       IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN
0420 DMT.ERR='JOB/WHS DIV MISMATCH';GOSUB 7000                       |  DMT.ERR = 'JOB/WHS DIV MISMATCH' ; GOSUB 7000
0421 END                                                                END
0422 IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
0423 DMT.ERR='JOB/DEPT MISMATCH';GOSUB 7000                          |  DMT.ERR = 'JOB/DEPT MISMATCH'; GOSUB 7000

0424 END                                                                END
0425 MATREAD DIV.REC FROM DIVISION, CONO:DMT.DIV ELSE                |  MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV ELSE
0426 MAT DIV.REC="";* T23182                                         |  MAT DIV.REC = "";* T23182
0427 DMT.ERR='DIV ':DMT.DIV:' MISSING';GOSUB 7000                    |  DMT.ERR = 'DIV ':DMT.DIV:' MISSING'; GOSUB 7000
0428 END                                                                END
0429 MATREAD DEPT.REC FROM DEPARTMENT, CONO:DMT.DEPT ELSE            |  MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT ELSE
0430 MAT DEPT.REC="";* T23182                                        |  MAT DEPT.REC = "";* T23182
0431 DMT.ERR='DEPT ':DMT.DEPT:' MISSING';GOSUB 7000                  |  DMT.ERR = 'DEPT ':DMT.DEPT:' MISSING'; GOSUB 7000

0432 END                                                                END
0433 LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE             LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
0434 DMT.ERR='DIV/DEPT MISMATCH';GOSUB 7000                          |  DMT.ERR = 'DIV/DEPT MISMATCH'; GOSUB 7000
0435 END                                                                END
0436 MATREAD CCTR.REC FROM COST.CNTR, CONO:DMT.CCTR ELSE             |  MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR ELSE
0437 MAT CCTR.REC="";* T23182                                        |  MAT CCTR.REC = "";* T23182
0438 DMT.ERR='CCTR ':DMT.CCTR:' MISSING';GOSUB 7000                  |  DMT.ERR = 'CCTR ':DMT.CCTR:' MISSING'; GOSUB 7000
0439 END                                                                END
0440 IF CCTR.DEPT # DMT.DEPT THEN                                       IF CCTR.DEPT # DMT.DEPT THEN

0441 DMT.ERR='DEPT/CCTR MISMATCH';GOSUB 7000                         |  DMT.ERR = 'DEPT/CCTR MISMATCH'; GOSUB 7000
0442 END                                                                END
0443 IF CCTR.TYPE='F' THEN                                           |  IF CCTR.TYPE = 'F' THEN
0444 DMT.ERR='CCTR ':DMT.CCTR:' IS FROZEN';GOSUB 7000                |  DMT.ERR='CCTR ':DMT.CCTR:' IS FROZEN'; GOSUB 7000
0445 END                                                                END
0446 LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE           LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
0447 DMT.ERR='DEPT/CCTR MISMATCH';GOSUB 7000                         |  DMT.ERR = 'DEPT/CCTR MISMATCH'; GOSUB 7000

0448 END                                                                END
0449 *T27622 v                                                       |  *vvvvvvv HERE DOWN WERE ORIG EDITS
0450 DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)                 |  *MATREAD JOB.REC FROM JOB, CONO:DMT.JOB THEN
0451 BEGIN CASE                                                      |  *   BEGIN CASE
0452 CASE DIV.POS<1,1>=''                                            |  *      CASE JOB.STATUS = 9
0453 DIV.POS=DIV.POS<1,2>                                            |  *         DMT.ERR = DMT.ERRMSG2
0454 CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"JC")            |  *         GOSUB 7000
0455 IF CUR.PERIOD<1,1>='' THEN                                      |  *         GOTO 3099     ;*T21758

0456 CUR.PERIOD=CUR.PERIOD<1,2>                                      |  *      CASE JOB.STATUS = 7
0457 END ELSE                                                        |  *         DMT.ERR = DMT.ERRMSG3
0458 IF CUR.PERIOD<1,1>='-2' THEN                                    |  *         GOSUB 7000
0459 ERRMSG=CUR.PERIOD<1,2>                                          |  *         GOTO 3099     ;*T21758
0460 DMT.ERR=ERRMSG; GOSUB 7000                                      |  *      CASE JOB.STATUS = 8
0461 END                                                             |  *         DMT.ERR = DMT.ERRMSG4
0462 END                                                             |  *         GOSUB 7000

0463 CASE DIV.POS<1,1>='-1'                                          |  *         GOTO 3099     ;*T21758
0464 ERRMSG=DIV.POS<1,2>                                             |  *   END CASE
0465 DMT.ERR=ERRMSG; GOSUB 7000                                      |  *   IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
0466 CASE DIV.POS<1,1>='-2'                                          |  *      DMT.ERR = DMT.ERRMSG22
0467 ERRMSG=DIV.POS<1,2>                                             |  *      GOSUB 7000
0468 DMT.ERR=ERRMSG; GOSUB 7000                                      |  *      GOTO 3005
0469 END CASE                                                        |  *   END

0470 *T27622 ^                                                       |  *   IF JOB.DIV # DMT.DIV THEN
0471 *T28199 v                                                       |  *      DMT.ERR = DMT.ERRMSG23
0472 IF CO.SPOIL.FLG="Y" AND DMT.TYPE="S" THEN                       |  *      GOSUB 7000
0473 READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:DMT.SPOIL.CODE E  |  *      GOTO 3005
0474 ERRMSG="SPOILAGE CODE (":DMT.SPOIL.CODE:") NOT ON FILE"         |  *   END
0475 DMT.ERR=ERRMSG; GOSUB 7000                                      |  *   IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
0476 END                                                             |  *      DMT.ERR = DMT.ERRMSG24

0477 END                                                             |  *      GOSUB 7000
0478 *T28199 ^                                                       |  *   END
0479                                                                 >  **---- CHECK AUTHORIZATION  T21758 v
0480                                                                 >  **
0481                                                                 >  *   IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.
0482                                                                 >  *      IF DMT.INIT = '' THEN
0483                                                                 >  *         DMT.ERR = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN P

0484                                                                 >  *         GOSUB 7000
0485                                                                 >  *      END
0486                                                                 >  *   END
0487                                                                 >  **T21758 ^
0488                                                                 >  **T20109 v  
0489                                                                 >  *   IF DMT.WHSE # "" THEN
0490                                                                 >  *      MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE THEN

0491                                                                 >  *         IF DMT.DIV = WHS.DIV AND WHS.DIV = "00" THEN
0492                                                                 >  **       IF INDEX(DMT.STATUS,ERRM,1) > 0 THEN
0493                                                                 >  *            IF INDEX(DMT.ERR.STATUS,ERRM,1) > 0 THEN  ;* T2
0494                                                                 >  *          * ALREADY HAS MSG
0495                                                                 >  *            END ELSE
0496                                                                 >  **         IF DMT.STATUS # "" THEN
0497                                                                 >  **           DMT.STATUS = DMT.STATUS:" ":ERRM

0498                                                                 >  **         END ELSE
0499                                                                 >  **           DMT.STATUS = ERRM
0500                                                                 >  **         END
0501                                                                 >  *               DMT.ERR = ERRM
0502                                                                 >  *               GOSUB 7000
0503                                                                 >  *            END
0504                                                                 >  *         END

0505                                                                 >  *      END
0506                                                                 >  *   END
0507                                                                 >  **T20109 ^  
0508                                                                 >  *END
0509 3005*----                                                          3005*---- 
0510 *---- EDIT PROD, WHS, WHS LOC, PROD LN, OWNSHP, FNGD AND INV.P     *---- EDIT PROD, WHS, WHS LOC, PROD LN, OWNSHP, FNGD AND INV
0511 IF DMT.QTY < 0 OR (DMT.QTY=0 AND DMT.RS.QTYPE[2,1] # 'R') THEN  |  IF DMT.QTY < 0 OR (DMT.QTY = 0 AND DMT.RS.QTYPE[2,1] # 'R') 

0512 DMT.ERR='MUST HAVE A POSITIVE QUANTITY'                         |  DMT.ERR = 'MUST HAVE A POSITIVE QUANTITY'
0513 GOSUB 7000                                                         GOSUB 7000
0514 END                                                                END
0515 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE                 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE
0516 MAT INV.REC="";* T23182                                         |  MAT INV.REC = "";* T23182
0517 DMT.ERR='PRODUCT # ':DMT.PROD:' IS MISSING'                     |  DMT.ERR = 'PRODUCT # ':DMT.PROD:' IS MISSING'
0518 GOSUB 7000                                                         GOSUB 7000

0522 DMT.ERR="CUSTOMER ":INV.CUST:" OWNS STOCK"                         DMT.ERR="CUSTOMER ":INV.CUST:" OWNS STOCK"
0523 GOSUB 7000                                                         GOSUB 7000
0524 END                                                                END
0525 END                                                                END
0526 MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE                 MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
0527 MAT CATG.REC="";* T23182                                        |  MAT CATG.REC = "";* T23182
0528 DMT.ERR='CANNOT LOCATE PRODUCT LINE ':INV.LINE                  |  DMT.ERR = 'CANNOT LOCATE PRODUCT LINE ':INV.LINE
0529 GOSUB 7000                                                         GOSUB 7000
0530 END                                                                END
0531 IF CATG.MAJ.LINE="FNGD" THEN                                    |  IF CATG.MAJ.LINE = "FNGD" THEN

0532 DMT.ERR="Cannot utilize a Finished Goods product"               |  DMT.ERR = "Cannot utilize a Finished Goods product"
0533 GOSUB 7000                                                         GOSUB 7000
0534 END                                                                END
0535 LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING FND.WHSE ELSE        LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING FND.WHSE ELSE
0536 DMT.ERR='PRODUCT # ':DMT.PROD:' IS NOT IN WHSE # ':DMT.WHSE     |  DMT.ERR = 'PRODUCT # ':DMT.PROD:' IS NOT IN WHSE # ':DMT.WH
S
0537 GOSUB 7000                                                         GOSUB 7000
0538 END                                                                END

0539 IWH.ID=CONO:DMT.PROD:'!':DMT.WHSE                               |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE
0540 MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN                      |  MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
0541 OPEN.FLAG=1                                                     |  MAT IWH.REC = "";* T23182
0542 PERIOD='' ; ERR.FLG='' ; ERRMSG=''                              |  DMT.ERR = 'WAREHOUSE # ':DMT.WHSE:' IS MISSING FROM PRODUCT 
0543 CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPE  <  
0544 END ELSE                                                        <  
0545 MAT IWH.REC="";* T23182                                         <  

0546 DMT.ERR='WAREHOUSE # ':DMT.WHSE:' IS MISSING FROM PRODUCT # ':  <  
0547 GOSUB 7000                                                         GOSUB 7000
0548 END                                                                END
0549 *                                                                  *
0550 IWLO.ID=IWH.ID:"!":DMT.LOC                                      |  IWLO.ID = IWH.ID : "!" : DMT.LOC
0551 MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE                   MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
0552 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN

0553 DMT.ERR="LOCATION # ":DMT.LOC:" IS MISSING FROM # ":DMT.PROD:"  |  DMT.ERR = "LOCATION # ":DMT.LOC:" IS MISSING FROM # ":DMT.PR
0554 GOSUB 7000                                                         GOSUB 7000
0555 END ELSE                                                           END ELSE
0556 MAT IWLO.REC=""                                                 |  MAT IWLO.REC = ""
0557 END                                                                END
0558 END                                                                END
0559 PTR=1                                                           |  PTR = 1

0560 LOOP                                                               LOOP
0561 LOCATE DMT.PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE          LOCATE DMT.PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE
0562 JOB.RESV.MATL<1,MLOC>=DMT.PROD                                  |  JOB.RESV.MATL<1,MLOC> = DMT.PROD
0563 JOB.RESV.WHSE<1,MLOC>=DMT.WHSE                                  |  JOB.RESV.WHSE<1,MLOC> = DMT.WHSE
0564 JOB.RESV.DATE<1,MLOC>='NOT RESV'                                |  JOB.RESV.DATE<1,MLOC> = 'NOT RESV'
0565 JOB.ALOC.QTY<1,MLOC>=0                                          |  JOB.ALOC.QTY<1,MLOC> = 0
0566 JOB.RESV.QTY<1,MLOC>=0                                          |  JOB.RESV.QTY<1,MLOC> = 0
0567 JOB.USED.QTY<1,MLOC>=0                                          |  JOB.USED.QTY<1,MLOC> = 0
0568 JOB.ALOC.AMT<1,MLOC>=0                                          |  JOB.ALOC.AMT<1,MLOC> = 0

0569 JOB.RESV.AMT<1,MLOC>=0                                          |  JOB.RESV.AMT<1,MLOC> = 0
0570 JOB.USED.AMT<1,MLOC>=0                                          |  JOB.USED.AMT<1,MLOC> = 0
0571 END                                                                END
0572 IF DMT.WHSE=JOB.RESV.WHSE<1,MLOC> THEN                          |  IF DMT.WHSE = JOB.RESV.WHSE<1,MLOC> THEN
0573 PTR=0                                                           |  PTR = 0
0574 END ELSE                                                           END ELSE
0575 PTR=MLOC + 1                                                    |  PTR = MLOC + 1

0574 END ELSE                                                           END ELSE
0575 PTR=MLOC + 1                                                    |  PTR = MLOC + 1
0576 END                                                                END
0577 WHILE PTR DO                                                       WHILE PTR DO
0578 REPEAT                                                             REPEAT
0579 MATREAD INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STAT.  |  MATREAD INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STA
0580 LOCATE DMT.JOB IN ISTAT.JOB<1>,1 SETTING JLOC ELSE                 LOCATE DMT.JOB IN ISTAT.JOB<1>,1 SETTING JLOC ELSE
0581 ISTAT.JOB<1,JLOC>=DMT.JOB                                       |  ISTAT.JOB<1,JLOC> = DMT.JOB
0582 END                                                                END
0583 MATREAD INV.JS.REC FROM INV.JOB.STATS, IWH.ID:"!":DMT.JOB ELSE     MATREAD INV.JS.REC FROM INV.JOB.STATS, IWH.ID:"!":DMT.JOB EL

0584 MAT INV.JS.REC=""                                               |  MAT INV.JS.REC = ""
0585 IJS.JOB.CUST=JOB.CUST                                           |  IJS.JOB.CUST = JOB.CUST
0586 IJS.JOB.DATE="NOT RESV"                                         |  IJS.JOB.DATE = "NOT RESV"
0587 IJS.JOB.ALOC=0                                                  |  IJS.JOB.ALOC = 0
0588 IJS.JOB.QTY=0                                                   |  IJS.JOB.QTY = 0
0589 IJS.JOB.USED=0                                                  |  IJS.JOB.USED = 0
0590 IJS.RECP.NO=""                                                  |  IJS.FI.NO = ""

0591 IJS.FI.ORG=""                                                   |  IJS.FI.ORG = ""
0592 IJS.FI.QTY=""                                                   |  IJS.FI.QTY = ""
0593 IJS.FI.AMT=""                                                   |  IJS.FI.AMT = ""
0594 IJS.JMT.SEQ=""                                                  |  IJS.JMT.SEQ = ""
0595 IJS.JMT.QTY=""                                                  |  IJS.JMT.QTY = ""
0596 END                                                                END
0597 IF INV.COST.WT + 0=0 THEN INV.COST.WT = 100                     |  IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100

0598 IF INV.PAP.TYPE # "REGULAR" THEN                                   IF INV.PAP.TYPE # "REGULAR" THEN
0599 BEGIN CASE                                                         BEGIN CASE
0600 CASE DMT.RS.QTYPE=''                                            |  CASE DMT.RS.QTYPE = ''
0601 CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="W"                 CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="W"
0602 CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="D"                 CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="D"
0603 CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="S"                CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="S"
0604 CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="D"                CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="D"
0605 CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S"                CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S"
0606 CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D"                CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D"

0605 CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S"                CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S"
0606 CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D"                CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D"
0607 CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="S"                CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="S"
0608 CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="D"                CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="D"
0609 CASE 1                                                             CASE 1
0610 DMT.ERR='INVALID QUANTITY TYPE';GOSUB 7000                      |  DMT.ERR = 'INVALID QUANTITY TYPE';GOSUB 7000
0611 END CASE                                                           END CASE
0612 END                                                                END
0613 WQA=CALC.STK.QTY(IWH.ON.HAND,MAT INV.CNV.REC,'.5','')           |  WQA = INT(((IWH.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5
0614 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN

0615 IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY  |  *T26113 v
0616 DMT.QTY=IWH.ON.HAND                                             |  IF DMT.RS.QTYPE = "SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT
0617                                                                 >  DMT.QTY = IWH.ON.HAND
0618 END                                                                END
0619                                                                 >  *T26113 ^
0620 IF DMT.QTY > IWH.ON.HAND THEN                                      IF DMT.QTY > IWH.ON.HAND THEN
0621 DMT.ERR='QTY IS MORE THAN WAREHOUSE QTY ':OCONV(WQA,ICR.CNV)    |  DMT.ERR = 'QTY IS MORE THAN WAREHOUSE QTY ':OCONV(WQA,ICR.CN

0622 GOSUB 7000                                                         GOSUB 7000
0623 END                                                                END
0624 LQA=CALC.STK.QTY(IWLO.LOC.ON.HAND,MAT INV.CNV.REC,'.5','')      |  LQA = INT(((IWLO.LOC.ON.HAND / ICR.DV1) * ICR.MT1) / ICR.DV2
0625 XCNT=DCOUNT(IWLO.SERIAL,VM)                                     |  *        C25667  & T21600
0626                                                                 >  XCNT = DCOUNT(IWLO.R.S.ID,VM)
0627 BEGIN CASE                                                         BEGIN CASE
0628 CASE XCNT # 1                                                      CASE XCNT # 1
0629 CASE 1                                                             CASE 1
0630 IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY  |  *          IF DMT.RS.QTYPE = "SU" AND INV.UNIT<1,3> = "MSI" 

0631 DMT.QTY=IWLO.LOC.ON.HAND                                        |  IF DMT.RS.QTYPE = "SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT
0632                                                                 >  DMT.QTY = IWLO.LOC.ON.HAND
0633 END                                                                END
0634 END CASE                                                           END CASE
0635                                                                 >  *        C25667  & T21600
0636 IF DMT.QTY > IWLO.LOC.ON.HAND THEN                                 IF DMT.QTY > IWLO.LOC.ON.HAND THEN
0637 DMT.ERR='QTY IS MORE THAN LOCATION QTY ':OCONV(LQA,ICR.CNV)     |  DMT.ERR = 'QTY IS MORE THAN LOCATION QTY ':OCONV(LQA,ICR.CNV

0638 GOSUB 7000                                                         GOSUB 7000
0639 END                                                                END
0640 *T27622 v                                                       <  
0641 IF CATG.COST.TYPE = 'AC' THEN                                   <  
0642 IF ISTK.RECP.PERIOD > CUR.PERIOD THEN                           <  
0643 DMT.ERR='Warning - Received in Period ':ISTK.RECP.PERIOD        <  
0644 GOSUB 7000                                                      <  
0645 END                                                             <  
0646 *T28064 v                                                       <  

0647 LOCATE ISTK.RECP IN IWH.RECP.NO<1> SETTING ARFND THEN           <  
0648 IF DMT.QTY > IWH.QTY.FI<1,ARFND> THEN                           <  
0649 DMT.ERR='Not enough qty available in receipt ':IWH.RECP.NO<1,A  <  
0650 GOSUB 7000                                                      <  
0651 END                                                             <  
0652 END                                                             <  
0653 *T28064 ^                                                       <  

0654 END ELSE                                                           END ELSE
0655 CHK.QTY = DMT.QTY                                               |  IF IWH.LOC = "" THEN IWH.LOC = DMT.LOC
0656 *T28064 v IF DMT.QTY > 0 AND DMT.RS.QTYPE[2,1] # 'R' THEN       |  IF DMT.R.S.ID # "" AND IWLO.R.S.ID = "" AND INV.PAP.TYPE # "
0657 * In below IWH.RSV.FI was replaced with IWH.QTY.FI since DMT.Q  <  
0658 * been reserved and IWH.RSV.FI would have been reduced by the   <  
0659 IF DMT.QTY > 0 THEN                                             <  
0660 FOR II = 1 TO DCOUNT(IWH.RSV.FI,VM) WHILE CHK.QTY > 0           <  
0661 IF IWH.QTY.FI<1,II> > 0 THEN                                    <  

0662 IF IWH.QTY.FI<1,II> >= CHK.QTY THEN                             <  
0663 IF IWH.RECP.PERIOD<1,II> <= CUR.PERIOD THEN                     <  
0664 CHK.QTY = 0                                                     <  
0665 END                                                                END
0666 END ELSE                                                        <  
0667 IF IWH.RECP.PERIOD<1,II> <= CUR.PERIOD THEN                     <  
0668 CHK.QTY -= IWH.QTY.FI<1,II>                                     <  

0669 *T28064 ^                                                       <  
0670 END                                                             <  
0671 END                                                             <  
0672 END                                                             <  
0673 NEXT II                                                         <  
0674 IF CHK.QTY > 0 THEN                                             <  
0675 DMT.ERR='Warning - Quantity not all available in current Perio  <  

0676 GOSUB 7000                                                      <  
0677 END                                                             <  
0678 END                                                             <  
0679 END                                                             <  
0680 END ELSE                                                        <  
0681 IF IWH.LOC="" THEN IWH.LOC = DMT.LOC                            <  
0682 END                                                             <  

0683 LOCATE DMT.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE                   LOCATE DMT.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE
0684 DMT.ERR='CANNOT LOCATE LOCATION ':DMT.LOC                       |  DMT.ERR = 'CANNOT LOCATE LOCATION ':DMT.LOC
0685 GOSUB 7000                                                         GOSUB 7000
0686 END                                                                END
0687 IF CATG.TRK.LVL='S' THEN                                        |  IF IWLO.R.S.ID # '' THEN
0688 IF DMT.SERIAL='' THEN                                           |  IF DMT.R.S.ID = '' THEN
0689 DMT.ERR='NEED A SERIAL NUMBER'                                  |  DMT.ERR = 'NEED A SKID/ROLL NUMBER'
0690 GOSUB 7000                                                         GOSUB 7000

0691 END                                                                END
0692 ;*T26599 v                                                      |  LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE
0693 *  IF CATG.RSV.SERIAL='Y' THEN                                  |  DMT.ERR = 'CANNOT LOCATE SKID/ROLL ':DMT.R.S.ID:' IN LOCATIO
0694 *    LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JUNK ELSE            <  
0695 *      DMT.ERR='THIS SERIAL HAS NOT BEEN RESERVED FOR THIS JOB  <  
0696 *      GOSUB 7000                                               <  
0697 *    END                                                        <  
0698 *  END                                                          <  

0699 ;*T26599 ^                                                      <  
0700 LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE         <  
0701 DMT.ERR='CANNOT LOCATE SERIAL ':DMT.SERIAL:' IN LOCATION ':DMT  <  
0702 GOSUB 7000                                                         GOSUB 7000
0703 END                                                                END
0704 RQA=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'.5','')          |  RQA = INT(((IWLO.CURR.WT<1,RLOC> / ICR.DV1) * ICR.MT1) / ICR
0705 IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY  |  *        C25667  & T21600

0706 DMT.QTY=ISTK.CUR.QTY                                            |  IF DMT.RS.QTYPE = "SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT
0707                                                                 >  DMT.QTY = IWLO.CURR.WT<1,RLOC> 
0708 END                                                                END
0709 IF DMT.RS.QTYPE="WU" AND ABS(DMT.QTY-ISTK.CUR.QTY) <= 9  THEN   |  IF DMT.RS.QTYPE = "WU" AND ABS(DMT.QTY - IWLO.CURR.WT<1,RLOC
0710 DMT.QTY=ISTK.CUR.QTY                                            |  DMT.QTY = IWLO.CURR.WT<1,RLOC> 
0711 END                                                                END
0712 IF CATG.TRACK.QOH="Y" AND DMT.QTY > ISTK.CUR.QTY THEN           |  *        C25667  & T21600

0713 DMT.ERR='QTY IS MORE THAN SERIAL QTY ':OCONV(RQA,ICR.CNV)       |  IF CATG.TRACK.QOH = "Y" AND DMT.QTY > IWLO.CURR.WT<1,RLOC> T
0714                                                                 >  DMT.ERR = 'QTY IS MORE THAN SKID/ROLL QTY ':OCONV(RQA,ICR.CN
0715 GOSUB 7000                                                         GOSUB 7000
0716 END                                                                END
0717 END                                                                END
0718 ;*T26599 v T26948                                               |  RESV.QTY = DMT.QTY - JOB.RESV.QTY<1,MLOC>
0719 RESV.ARR=''                                                     |  IF RESV.QTY < 0 THEN RESV.QTY = 0

0720 IF CATG.TRK.LVL='S' THEN                                        |  RRESV.QTY = RESV.QTY
0721 RESV.ARR<4>=1 ;* 1=USAGE                                        <  
0722 IF CATG.RSV.SERIAL='Y' THEN                                     <  
0723 LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JUNK THEN                 <  
0724 RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>                         <  
0725 END ELSE                                                        <  
0726 RESV.QTY=DMT.QTY                                                <  

0727 END                                                             <  
0728 END ELSE                                                        <  
0729 RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>                         <  
0730 END                                                             <  
0731 IF CATG.COST.TYPE='AC' THEN                                     <  
0732 RESV.ARR<1>=ISTK.RECP                                           <  
0733 RESV.ARR<2>=DMT.SERIAL                                          <  

0734 RESV.ARR<3>=RESV.QTY                                            <  
0735 END                                                             <  
0736 END ELSE                                                        <  
0737 RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>                         <  
0738 END                                                             <  
0739 *T27622 v                                                       <  
0740 *IF RESV.QTY < 0 THEN RESV.QTY = 0                              <  

0741 IF RESV.QTY < 0 THEN RESV.QTY = 0; RESV.ARR<3> = 0              <  
0742 ;*T26599 ^ T26948                                               <  
0743 *COPY>JCSBP>FIFO.RESV.SUB                                          *COPY>JCSBP>FIFO.RESV.SUB
0744 IF ERRMSG # '' THEN                                                IF ERRMSG # '' THEN
0745 DMT.ERR=ERRMSG                                                  |  DMT.ERR = ERRMSG
0746 GOSUB 7000                                                         GOSUB 7000
0747 END                                                                END

0748 QTY.LEFT=DMT.QTY                                                |  QTY.LEFT = DMT.QTY
0749 JMT.DCOST=0;JMT.PTR = ""                                        |  JMT.DCOST = 0; JMT.PTR = ""
0750 JMT.MARKUP=IWH.MARKUP + 0                                       |  JMT.MARKUP = IWH.MARKUP + 0
0751 IF STD.PRICE=0 THEN                                             |  IF STD.PRICE = 0 THEN
0752 STD.PRICE=INT((DMT.COST/10000) * ((DMT.QTY/10) / (INV.COST.WT/  |  STD.PRICE = INT((DMT.COST/10000) * ((DMT.QTY/10) / (INV.COST
0753 END ELSE                                                           END ELSE
0754 STD.PRICE=0                                                     |  STD.PRICE = 0

0755 DMT.COST=0                                                      |  DMT.COST = 0
0756 END                                                                END
0757 T.MT.NO="";TPTR = 0                                             |  T.MT.NO = ""; TPTR = 0
0758 ;*T26948 v                                                      |  QCNT = COUNT(IJS.FI.NO, VM) + (IJS.FI.NO # "")
0759 ;* for following scenario                                       |  FOR Q = 1 TO QCNT WHILE QTY.LEFT > 0
0760 ;* reserve is kept only at the warehouse level                  |  FNO = IJS.FI.NO<1,Q>
0761 ;* so we have to create IJS record at the usage time            <  

0762 *T27596 v                                                       <  
0763 IF CATG.TRK.LVL='S' AND CATG.COST.TYPE='AC' AND CATG.RSV.SERIA  <  
0764 LOCATE ISTK.RECP IN IJS.RECP.NO<1>,1 BY 'AR' SETTING RFND ELSE  <  
0765 INS ISTK.RECP BEFORE IJS.RECP.NO<1,RFND>                        <  
0766 INS '' BEFORE IJS.FI.ORG<1,RFND>                                <  
0767 INS '' BEFORE IJS.FI.QTY<1,RFND>                                <  
0768 INS '' BEFORE IJS.FI.AMT<1,RFND>                                <  

0769 INS '' BEFORE IJS.JMT.SEQ<1,RFND>                               <  
0770 INS '' BEFORE IJS.JMT.QTY<1,RFND>                               <  
0771 END                                                             <  
0772 *  IJS.RECP.NO<1>=ISTK.RECP                                     <  
0773 LOCATE ISTK.RECP IN IWH.RECP.NO<1> SETTING RPOS THEN            <  
0774 *     IJS.FI.AMT<1>=IWH.COST.FI<1,RPOS>                         <  
0775 IJS.FI.AMT<1,RFND>=IWH.COST.FI<1,RPOS>                          <  

0776 END                                                             <  
0777 *  IJS.FI.QTY<1>=DMT.QTY                                        <  
0778 IJS.FI.QTY<1,RFND>=DMT.QTY                                      <  
0779 *T27596 ^                                                       <  
0780 END                                                             <  
0781 ;*T26948 ^                                                      <  
0782 QCNT=DCOUNT(IJS.RECP.NO,VM)                                     <  

0783 FOR Q=1 TO QCNT WHILE QTY.LEFT > 0                              <  
0784 LOCATE IJS.RECP.NO<1,Q> IN IWH.RECP.NO<1> SETTING FNO ELSE NUL  <  
0785 *  FNO=IJS.RECP.NO<1,Q>                                         <  
0786 BEGIN CASE                                                         BEGIN CASE
0787 CASE IJS.FI.QTY<1,Q> + 0=0                                      |  CASE IJS.FI.QTY<1,Q> + 0 = 0
0788 GOTO 3007                                                          GOTO 3007
0789 CASE IJS.RECP.NO<1,Q> < 1                                       |  CASE FNO < 1

0790 CHECK.QTY=QTY.LEFT                                              |  CHECK.QTY = QTY.LEFT
0791 CASE QTY.LEFT > IJS.FI.QTY<1,Q>                                    CASE QTY.LEFT > IJS.FI.QTY<1,Q>
0792 CHECK.QTY=IJS.FI.QTY<1,Q>                                       |  CHECK.QTY = IJS.FI.QTY<1,Q>
0793 CASE 1                                                             CASE 1
0794 CHECK.QTY=QTY.LEFT                                              |  CHECK.QTY = QTY.LEFT
0795 END CASE                                                           END CASE
0796 IF IJS.FI.AMT<1,Q>+0=0 AND DMT.COST > 0 THEN                       IF IJS.FI.AMT<1,Q>+0=0 AND DMT.COST > 0 THEN

0797 FLOC=DCOUNT(IJS.RECP.NO,VM)                                     |  FLOC = COUNT(IJS.FI.NO, VM) + (IJS.FI.NO # "")
0798 IF IJS.RECP.NO<1,FLOC>=IWH.RECP.NO<1,FNO> AND IJS.FI.AMT<1,FLO  |  IF IJS.FI.NO<1,FLOC> = FNO AND IJS.FI.AMT<1,FLOC> = DMT.COST
0799 IJS.FI.ORG<1,FLOC>=IJS.FI.ORG<1,FLOC> + CHECK.QTY               |  IJS.FI.ORG<1,FLOC> = IJS.FI.ORG<1,FLOC> + CHECK.QTY
0800 IJS.FI.QTY<1,FLOC>=IJS.FI.QTY<1,FLOC> + CHECK.QTY               |  IJS.FI.QTY<1,FLOC> = IJS.FI.QTY<1,FLOC> + CHECK.QTY
0801 END ELSE                                                           END ELSE
0802 FLOC=FLOC + 1                                                   |  FLOC = FLOC + 1
0803 IJS.RECP.NO<1,FLOC>=IWH.RECP.NO<1,FNO>                          |  IJS.FI.NO<1,FLOC> = FNO

0804 IJS.FI.ORG<1,FLOC>=CHECK.QTY                                    |  IJS.FI.ORG<1,FLOC> = CHECK.QTY
0805 IJS.FI.QTY<1,FLOC>=CHECK.QTY                                    |  IJS.FI.QTY<1,FLOC> = CHECK.QTY
0806 IJS.FI.AMT<1,FLOC>=DMT.COST                                     |  IJS.FI.AMT<1,FLOC> = DMT.COST
0807 END                                                                END
0808 IJS.FI.ORG<1,Q>=IJS.FI.ORG<1,Q>-CHECK.QTY                       |  IJS.FI.ORG<1,Q> = IJS.FI.ORG<1,Q> - CHECK.QTY
0809 IJS.FI.QTY<1,Q>=IJS.FI.QTY<1,Q>-CHECK.QTY                       |  IJS.FI.QTY<1,Q> = IJS.FI.QTY<1,Q> - CHECK.QTY
0810 END ELSE                                                           END ELSE

0811 FLOC=Q                                                          |  FLOC = Q
0812 DCOST=INT((IJS.FI.AMT<1,FLOC>/10000) * ((CHECK.QTY/10) / (INV.  |  DCOST = INT((IJS.FI.AMT<1,FLOC>/10000) * ((CHECK.QTY/10) / (
0813 STD.PRICE=STD.PRICE + DCOST                                     |  STD.PRICE = STD.PRICE + DCOST
0814 END                                                                END
0815 IJS.FI.QTY<1,FLOC>=IJS.FI.QTY<1,FLOC>-CHECK.QTY                 |  IJS.FI.QTY<1,FLOC> = IJS.FI.QTY<1,FLOC> - CHECK.QTY
0816 SEQ.CNT=COUNT(IJS.JMT.QTY<1,FLOC>, SVM) + (IJS.JMT.QTY<1,FLOC>  |  SEQ.CNT = COUNT(IJS.JMT.QTY<1,FLOC>, SVM) + (IJS.JMT.QTY<1,F
0817 TPTR=TPTR + 1                                                   |  TPTR = TPTR + 1

0818 T.MT.NO<TPTR,1>=FLOC;T.MT.NO<TPTR,2> = SEQ.CNT                  |  T.MT.NO<TPTR,1> = FLOC; T.MT.NO<TPTR,2> = SEQ.CNT
0819 IJS.JMT.QTY<1,FLOC,SEQ.CNT>=CHECK.QTY                           |  IJS.JMT.QTY<1,FLOC,SEQ.CNT> = CHECK.QTY
0820 IF IJS.RECP.NO<1,Q> THEN                                        |  IF FNO THEN
0821 FCOST=IWH.COST.FI<1,FNO>                                        |  FCOST = IWH.COST.FI<1,FNO>
0822 JMT.DCOST=JMT.DCOST + INT((FCOST/10000) * ((CHECK.QTY/10) / (I  |  JMT.DCOST = JMT.DCOST + INT((FCOST/10000) * ((CHECK.QTY/10) 
0823 IWH.QTY.FI<1,FNO>=IWH.QTY.FI<1,FNO>-CHECK.QTY                   |  IWH.QTY.FI<1,FNO> = IWH.QTY.FI<1,FNO> - CHECK.QTY
0824 END ELSE                                                           END ELSE

0825 FCOST=0                                                         |  FCOST = 0
0826 END                                                                END
0827 PTR=1                                                           |  PTR = 1
0828 LOOP                                                               LOOP
0829 LOCATE IJS.RECP.NO<1,Q> IN JMT.PTR<1,1>,PTR SETTING TLOC ELSE   |  LOCATE FNO IN JMT.PTR<1,1>,PTR SETTING TLOC ELSE
0830 JMT.PTR<1,1,TLOC>=IJS.RECP.NO<1,Q>                              |  JMT.PTR<1,1,TLOC> = FNO
0831 JMT.PTR<1,3,TLOC>=FCOST                                         |  JMT.PTR<1,3,TLOC> = FCOST

0832 JMT.PTR<1,4,TLOC>=IJS.FI.AMT<1,FLOC>                            |  JMT.PTR<1,4,TLOC> = IJS.FI.AMT<1,FLOC>
0833 PTR=0                                                           |  PTR = 0
0834 END                                                                END
0835 BEGIN CASE                                                         BEGIN CASE
0836 CASE PTR=0                                                      |  CASE PTR = 0
0837 CASE JMT.PTR<1,4,TLOC> <> IJS.FI.AMT<1,FLOC>                       CASE JMT.PTR<1,4,TLOC> <> IJS.FI.AMT<1,FLOC>
0838 CASE JMT.PTR<1,3,TLOC>=FCOST                                    |  CASE JMT.PTR<1,3,TLOC> = FCOST

0839 PTR=0                                                           |  PTR = 0
0840 END CASE                                                           END CASE
0841 WHILE PTR DO                                                       WHILE PTR DO
0842 PTR=TLOC + 1                                                    |  PTR = TLOC + 1
0843 REPEAT                                                             REPEAT
0844 JMT.PTR<1,2,TLOC>=JMT.PTR<1,2,TLOC> + CHECK.QTY                 |  JMT.PTR<1,2,TLOC> = JMT.PTR<1,2,TLOC> + CHECK.QTY
0845 QTY.LEFT=QTY.LEFT-CHECK.QTY                                     |  QTY.LEFT = QTY.LEFT - CHECK.QTY

0846 3007 NEXT Q                                                        3007 NEXT Q
0847 IF QTY.LEFT > 0 THEN                                               IF QTY.LEFT > 0 THEN
0848 QTY.LEFT=CALC.STK.QTY(QTY.LEFT,MAT INV.CNV.REC,'.5','')         |  * CSF 23009
0849 DMT.ERR='CANNOT COMPUTE COST FOR QTY ':OCONV(QTY.LEFT,ICR.CNV)  |  QTY.LEFT = INT(((QTY.LEFT / ICR.DV1) * ICR.MT1) / ICR.DV2 +
 
0850                                                                 >  DMT.ERR = 'CANNOT COMPUTE COST FOR QTY ':OCONV(QTY.LEFT,ICR.
0851 GOSUB 7000                                                         GOSUB 7000
0852 END                                                                END
0853 *                                                                  *
0854                                                                 >  *vvvvvvv BELOW ARE ORIG EDITS

0855                                                                 >  *MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD THEN
0856                                                                 >  *   LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING WHC THEN
0857                                                                 >  *      GOTO 3010
0858                                                                 >  *   END ELSE
0859                                                                 >  *      DMT.ERR = DMT.ERRMSG10
0860                                                                 >  *      GOSUB 7000
0861                                                                 >  *      GOTO 3030

0862                                                                 >  *   END
0863                                                                 >  *3010*---- 
0864                                                                 >  ** T20916
0865                                                                 >  **  MATREAD WHSE.REC FROM WAREHOUSE, CONO:DMT.WHSE THEN
0866                                                                 >  **    LOCATE DMT.LOC IN WHS.LOC<1>,1 SETTING WHL THEN
0867                                                                 >  **      GOTO 3020
0868                                                                 >  **    END ELSE

0869                                                                 >  **      DMT.ERR = DMT.ERRMSG11
0870                                                                 >  **      GOSUB 7000
0871                                                                 >  **      GOTO 3030
0872                                                                 >  **    END
0873                                                                 >  *3020*---- 
0874                                                                 >  *   MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DMT.PROD:"!":DM
0875                                                                 >  *      GOTO 3030

0876                                                                 >  *   END ELSE
0877                                                                 >  *      DMT.ERR = DMT.ERRMSG20
0878                                                                 >  ** T20619
0879                                                                 >  *      MAT IWLO.REC = ""
0880                                                                 >  *      GOSUB 7000
0881                                                                 >  *   END
0882                                                                 >  **  END

0883                                                                 >  *3030*---- 
0884                                                                 >  *   IF INV.CUST # "" THEN
0885                                                                 >  *      IF INV.CUST # JOB.CUST THEN
0886                                                                 >  *         DMT.ERR = DMT.ERRMSG8
0887                                                                 >  *         GOSUB 7000
0888                                                                 >  *      END
0889                                                                 >  *   END

0890                                                                 >  **---- TEST FOR VALID QUANTITY TYPE FOR INV.PAP.TYPE
0891                                                                 >  **T21718 v
0892                                                                 >  **  BEGIN CASE
0893                                                                 >  **    CASE INV.PAP.TYPE = "ROLL"
0894                                                                 >  **      PTT =DMT.RS.QTYPE
0895                                                                 >  **      IF PTT = "WU" OR PTT = "WR" OR PTT = "DR" THEN
0896                                                                 >  **        GOTO 3040

0897                                                                 >  **      END ELSE
0898                                                                 >  **        DMT.ERR = DMT.ERRMSG19
0899                                                                 >  **        GOSUB 7000
0900                                                                 >  **      END
0901                                                                 >  **3040*--- 
0902                                                                 >  **    CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
0903                                                                 >  **      PTT = DMT.RS.QTYPE

0904                                                                 >  **      IF PTT = "SU" OR PTT = "DR" THEN
0905                                                                 >  **        GOTO 3050
0906                                                                 >  **      END ELSE
0907                                                                 >  **        DMT.ERR = DMT.ERRMSG19
0908                                                                 >  **        GOSUB 7000
0909                                                                 >  **      END
0910                                                                 >  **3050*---- 

0911                                                                 >  **    CASE INV.PAP.TYPE = "SHEET"
0912                                                                 >  **      PTT = DMT.RS.QTYPE
0913                                                                 >  **      IF PTT = "SU" OR PTT = "SR" THEN
0914                                                                 >  **        GOTO 3060
0915                                                                 >  **      END ELSE
0916                                                                 >  **        DMT.ERR = DMT.ERRMSG19
0917                                                                 >  **        GOSUB 7000

0918                                                                 >  **      END
0919                                                                 >  **  END CASE
0920                                                                 >  **3060*---- 
0921                                                                 >  *   IF INV.PAP.TYPE # "REGULAR" THEN
0922                                                                 >  *      BEGIN CASE
0923                                                                 >  *         CASE DMT.RS.QTYPE = ''
0924                                                                 >  *         CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="W"

0925                                                                 >  *         CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="D"
0926                                                                 >  *         CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="S
0927                                                                 >  *         CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="D
0928                                                                 >  *         CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S
0929                                                                 >  *         CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D
0930                                                                 >  *         CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="S
0931                                                                 >  *         CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="D

0932                                                                 >  *         CASE 1
0933                                                                 >  *            DMT.ERR = ERRMSG19
0934                                                                 >  *      END CASE
0935                                                                 >  *   END
0936                                                                 >  *   IF DMT.ERR # "" THEN GOSUB 7000
0937                                                                 >  **T21718 ^
0938                                                                 >  *   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN

0939                                                                 >  *      BEGIN CASE
0940                                                                 >  *         CASE CATG.TYPE = "L"
0941                                                                 >  *         CASE CATG.TYPE = "S"
0942                                                                 >  *         CASE CATG.TYPE = "P"
0943                                                                 >  *         CASE CATG.TYPE = "F"
0944                                                                 >  *         CASE CATG.TYPE = "I"
0945                                                                 >  *         CASE CATG.TYPE = "LR"

0946                                                                 >  *         CASE CATG.TYPE = "PC";* T20868
0947                                                                 >  *         CASE CATG.TYPE = "RL";* T20916
0948                                                                 >  *         CASE CATG.TYPE = "O";* T20921
0949                                                                 >  *         CASE 1
0950                                                                 >  *            DMT.ERR = DMT.ERRMSG7
0951                                                                 >  *            GOSUB 7000
0952                                                                 >  *      END CASE

0953                                                                 >  *      MATREAD COMP.REC FROM COMPANY, CONO THEN
0954                                                                 >  *         IF CO.OPS = "Y" AND CATG.MAJ.LINE = "FNGD" THEN
0955                                                                 >  *            DMT.ERR = DMT.ERRMSG9
0956                                                                 >  *            GOSUB 7000
0957                                                                 >  *         END
0958                                                                 >  *      END ELSE
0959                                                                 >  *         DMT.ERR = DMT.ERRMSG15

0960                                                                 >  *         GOSUB 7000
0961                                                                 >  *      END
0962                                                                 >  *   END ELSE
0963                                                                 >  *      DMT.ERR = DMT.ERRMSG6
0964                                                                 >  *      GOSUB 7000
0965                                                                 >  *   END
0966                                                                 >  *END ELSE

0967                                                                 >  *   DMT.ERR = DMT.ERRMSG5
0968                                                                 >  *   GOSUB 7000
0969                                                                 >  *END
0970                                                                 >  **---- TEST FOR DIV, DEPT AND COST CENTER ERRORS
0971                                                                 >  *MATREAD DIV.REC FROM DIVISION, CONO:DMT.DIV ELSE
0972                                                                 >  *   DMT.ERR = DMT.ERRMSG21
0973                                                                 >  *   GOSUB 7000

0974                                                                 >  *   GOTO 3070
0975                                                                 >  *END
0976                                                                 >  *MATREAD DEPT.REC FROM DEPARTMENT, CONO:DMT.DEPT ELSE
0977                                                                 >  *   DMT.ERR = DMT.ERRMSG12
0978                                                                 >  *   GOSUB 7000
0979                                                                 >  *   GOTO 3070
0980                                                                 >  *END

0981                                                                 >  *LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
0982                                                                 >  *   DMT.ERR = DMT.ERRMSG17
0983                                                                 >  *   GOSUB 7000
0984                                                                 >  *   GOTO 3070
0985                                                                 >  *END
0986                                                                 >  *MATREAD CCTR.REC FROM COST.CNTR, CONO:DMT.CCTR ELSE
0987                                                                 >  *   DMT.ERR = DMT.ERRMSG16

0988                                                                 >  *   GOSUB 7000
0989                                                                 >  *   GOTO 3070
0990                                                                 >  *END
0991                                                                 >  *IF CCTR.DEPT # DMT.DEPT THEN
0992                                                                 >  *   DMT.ERR = DMT.ERRMSG13
0993                                                                 >  *   GOSUB 7000
0994                                                                 >  *   GOTO 3070

0995                                                                 >  *END
0996                                                                 >  *IF CCTR.TYPE = "F" THEN
0997                                                                 >  *   DMT.ERR = DMT.ERRMSG14
0998                                                                 >  *   GOSUB 7000
0999                                                                 >  *   GOTO 3070
1000                                                                 >  *END
1001                                                                 >  *LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE

1002                                                                 >  *   DMT.ERR = DMT.ERRMSG13
1003                                                                 >  *   GOSUB 7000
1004                                                                 >  *END
1005                                                                 >  *3070*---- 
1006                                                                 >  **---- TEST TO SEE IF DMT.STATUS IS NULL
1007                                                                 >  *IF DMT.STATUS = "" THEN
1008                                                                 >  *   GOTO 3080

1009                                                                 >  *END ELSE
1010                                                                 >  *   CNT = DCOUNT(DMT.STATUS, VM)
1011                                                                 >  *   FOR I = 1 TO CNT
1012                                                                 >  *      DMT.ERR = DMT.STATUS<1,I> "L#20"
1013                                                                 >  *      GOSUB 7000
1014                                                                 >  *   NEXT I
1015                                                                 >  *END

1016 3080* DMT.STATUS EXIT                                              3080* DMT.STATUS EXIT
1017 *---- TEST FOR CUMULATIVE QTY AND VALID QTY FOR SERIAL NUMBER   |  *---- TEST FOR CUMULATIVE QTY AND VALID QTY FOR ROLL/SKID NU
1018 IF DMT.SERIAL#'' THEN                                           |  *GOSUB 6000
1019 MATREAD ISTK.REC FROM INV_SERIAL, CONO:DMT.SERIAL THEN          |  * T21523
1020 IF ISTK.POST.DATE="" THEN                                       |  IF (BCI<3> = "Y" OR BCI<4> = "Y") AND (DMT.R.S.ID # "") THEN
1021 DMT.ERR="SERIAL NOT RECVD"                                      |  MATREAD RSKI.REC FROM ROLL.SKID.INFO, CONO:DMT.R.S.ID THEN
1022                                                                 >  IF RSKI.POST.DATE = "" THEN
1023                                                                 >  DMT.ERR = "ROLL/SKID NOT RECVD"

1024 GOSUB 7000                                                         GOSUB 7000
1025 END ELSE                                                        <  
1026 IF ISTK.WHSE # DMT.WHSE THEN                                    <  
1027 DMT.STATUS ='Serial is in different whse.'                      <  
1028 GOSUB 7000                                                      <  
1029 END                                                                END
1030 IF DMT.LOC # ISTK.LOC THEN DMT.LOC=ISTK.LOC                     <  
1031 END                                                                END

1032 END                                                                END
1033 END                                                             |  * T21523
1034                                                                 >  *IF DMT.R.S.ID = "" OR IWLO.R.S.ID = "" THEN
1035                                                                 >  *   WGT.ON.HAND = IWLO.LOC.ON.HAND
1036                                                                 >  *END ELSE
1037                                                                 >  *   LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RLOC THEN
1038                                                                 >  *      WGT.ON.HAND = IWLO.CURR.WT<1,RLOC>
1039                                                                 >  *   END ELSE

1040                                                                 >  *      DMT.ERR = 'CANNOT LOCATE SKID/ROLL ':DMT.R.S.ID:' IN 
1041                                                                 >  *      GOSUB 7000
1042                                                                 >  *      WGT.ON.HAND = 0
1043                                                                 >  *   END
1044                                                                 >  **  WGT.ON.HAND = IWLO.CURR.WT<1,RLOC>
1045                                                                 >  *END
1046                                                                 >  *BEGIN CASE

1047                                                                 >  *   CASE DMT.RS.QTYPE = ""
1048                                                                 >  *      IF CATG.TRACK.QOH = "Y" THEN
1049                                                                 >  *         QTY.REM = WGT.ON.HAND
1050                                                                 >  *         QTY.USED = DMT.QTY
1051                                                                 >  *         IF QTY.USED > QTY.REM THEN
1052                                                                 >  *            DMT.ERR = DMT.ERRMSG18
1053                                                                 >  *            GOSUB 7000

1054                                                                 >  *         END
1055                                                                 >  *         IF QTY.USED <= 0 THEN
1056                                                                 >  *            DMT.ERR = DMT.ERRMSG18
1057                                                                 >  *            GOSUB 7000
1058                                                                 >  *         END ELSE
1059                                                                 >  *            QTY.USED = DMT.QTY
1060                                                                 >  *         END

1061                                                                 >  *      END
1062                                                                 >  *   CASE DMT.RS.QTYPE = "WU"
1063                                                                 >  *      QTY.REM = WGT.ON.HAND
1064                                                                 >  *      QTY.USED = DMT.QTY
1065                                                                 >  *      IF QTY.USED > QTY.REM THEN
1066                                                                 >  *         DMT.ERR = DMT.ERRMSG18
1067                                                                 >  *         GOSUB 7000

1068                                                                 >  *      END
1069                                                                 >  *      IF QTY.USED <= 0 THEN
1070                                                                 >  *         DMT.ERR = DMT.ERRMSG18
1071                                                                 >  *         GOSUB 7000
1072                                                                 >  *      END
1073                                                                 >  *   CASE DMT.RS.QTYPE = "WR"
1074                                                                 >  *      QTY.REM = WGT.ON.HAND

1075                                                                 >  *      QTY.USED = QTY.REM - DMT.QTY
1076                                                                 >  *      IF QTY.USED <= 0 THEN
1077                                                                 >  *         DMT.ERR = DMT.ERRMSG18
1078                                                                 >  *         GOSUB 7000
1079                                                                 >  *      END
1080                                                                 >  *   CASE DMT.RS.QTYPE = "SU"
1081                                                                 >  *      QTY.REM = WGT.ON.HAND

1082                                                                 >  *      QTY.USED = DMT.QTY
1083                                                                 >  *      IF QTY.USED > QTY.REM THEN
1084                                                                 >  *         DMT.ERR = DMT.ERRMSG18
1085                                                                 >  *         GOSUB 7000
1086                                                                 >  *      END
1087                                                                 >  *      IF QTY.USED <= 0 THEN
1088                                                                 >  *         DMT.ERR = DMT.ERRMSG18

1089                                                                 >  *         GOSUB 7000
1090                                                                 >  *      END
1091                                                                 >  *   CASE DMT.RS.QTYPE = "SR"
1092                                                                 >  *      QTY.REM = WGT.ON.HAND
1093                                                                 >  *      QTY.USED = QTY.REM - DMT.QTY
1094                                                                 >  *      IF QTY.USED <= 0 THEN
1095                                                                 >  *         DMT.ERR = DMT.ERRMSG18

1096                                                                 >  *         GOSUB 7000
1097                                                                 >  *      END
1098                                                                 >  *   CASE DMT.RS.QTYPE = "DR"
1099                                                                 >  *      QTY = (((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100
1100                                                                 >  *      BEGIN CASE
1101                                                                 >  *         CASE QTY <= 0
1102                                                                 >  *            QTY = 0

1103                                                                 >  *            QTY.REM = WGT.ON.HAND
1104                                                                 >  *            QTY.USED = QTY.REM
1105                                                                 >  *         CASE INV.PAP.TYPE = "ROLL"
1106                                                                 >  *            QTY = INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV
1107                                                                 >  *            QTY.REM = WGT.ON.HAND
1108                                                                 >  *            QTY.USED = QTY.REM - QTY
1109                                                                 >  *         CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCO

1110                                                                 >  *            BEGIN CASE
1111                                                                 >  *               CASE INV.UNIT<1,2> = "FT"
1112                                                                 >  *                  QTY = INT((QTY/1000)*3.1416/4*(100000/IN
V
1113                                                                 >  *               CASE INV.UNIT<1,2> = "PC"
1114                                                                 >  *                  QTY = INT((QTY/1000)*3.1416/4*(100000/INV
1115                                                                 >  *            END CASE
1116                                                                 >  *            QTY = INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)

1117                                                                 >  *            QTY.REM = WGT.ON.HAND
1118                                                                 >  *            QTY.USED = QTY.REM - QTY
1119                                                                 >  *         CASE 1
1120                                                                 >  *            QTY.USED=0; QTY.REM=0
1121                                                                 >  *      END CASE
1122                                                                 >  *      IF QTY.USED <= 0 THEN
1123                                                                 >  *         DMT.ERR = DMT.ERRMSG18

1124                                                                 >  *         GOSUB 7000
1125                                                                 >  *      END
1126                                                                 >  *   CASE 1
1127                                                                 >  *      IF CATG.TRACK.QOH = "Y" THEN
1128                                                                 >  *         QTY.REM = WGT.ON.HAND
1129                                                                 >  *         QTY.USED = DMT.QTY
1130                                                                 >  *         IF QTY.USED > QTY.REM THEN

1131                                                                 >  *            DMT.ERR = DMT.ERRMSG18
1132                                                                 >  *            GOSUB 7000
1133                                                                 >  *         END
1134                                                                 >  *      END ELSE
1135                                                                 >  *         QTY.USED = DMT.QTY
1136                                                                 >  *      END
1137                                                                 >  *END CASE

1138 3099*                                                              3099*
1139                                                                 >  *T25156 C 39078 Do not restore STATUS from original when run
1140                                                                 >  **               edit list mode.
1141                                                                 >  *IF PMODE # 'R' THEN ;*T26156
1142                                                                 >  *  FOR OS = 1 TO DCOUNT(ORIG.DMT.STATUS,VM)
1143                                                                 >  *    IF ORIG.DMT.STATUS<1,OS> = 'QUANTITY ???' OR ORIG.DMT.S
1144                                                                 >  *      DMT.ERR = ORIG.DMT.STATUS<1,OS>
1145                                                                 >  *      GOSUB 7000

1146                                                                 >  *    END
1147                                                                 >  *  NEXT OS
1148                                                                 >  *END ;*T26156
1149 *---- END ERROR CHECKS                                             *---- END ERROR CHECKS
1150 H.LINE=''                                                       |  H.LINE = ''
1151 H.LINE=KEY[4,99]"L#7"                                           |  H.LINE = KEY[4,99]"L#7"
1152 H.LINE=H.LINE:DMT.JOB"L#9"                                      |  H.LINE = H.LINE : DMT.JOB"L#9"

1153 H.LINE=H.LINE:DMT.TYPE "L#2"                                    |  H.LINE = H.LINE : DMT.TYPE "L#2"
1154 H.LINE=H.LINE:DMT.SPOIL.CODE "L#9"                              |  H.LINE = H.LINE : DMT.SPOIL.CODE "L#9"
1155 H.LINE=H.LINE:DMT.DIV "L#3"                                     |  H.LINE = H.LINE : DMT.DIV "L#3"
1156 H.LINE=H.LINE:DMT.DEPT "L#5"                                    |  H.LINE = H.LINE : DMT.DEPT "L#5"
1157 H.LINE=H.LINE:DMT.CCTR "L#4"                                    |  H.LINE = H.LINE : DMT.CCTR "L#4"
1158 H.LINE=H.LINE:DMT.PROD "L#16"                                   |  H.LINE = H.LINE : DMT.PROD "L#16"
1159 H.LINE=H.LINE:DMT.WHSE "L#5"                                    |  H.LINE = H.LINE : DMT.WHSE "L#5"

1160 H.LINE=H.LINE:DMT.LOC "L#5"                                     |  H.LINE = H.LINE : DMT.LOC "L#5"
1161 H.LINE=H.LINE:OCONV(DMT.DATE,"D2/")[1,5] "L#6"                  |  H.LINE = H.LINE : OCONV(DMT.DATE,"D2/")[1,5] "L#6"
1162 *T27705 H.LINE=H.LINE:DMT.SERIAL "L#12"                         |  H.LINE = H.LINE : DMT.R.S.ID "L#12"
1163 H.LINE=H.LINE:DMT.SERIAL "L#16"                                 |  IF RESET.QTY THEN QUANTITY=0
1164 *T28064 IF RESET.QTY THEN QUANTITY=0                            |  IF DMT.RS.QTYPE = "DR" THEN
1165 IF RESET.QTY THEN QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.C  |  H.LINE = H.LINE : OCONV(QUANTITY,"MD2") "R#10"
1166 IF DMT.RS.QTYPE="DR" THEN                                       <  

1167 H.LINE=H.LINE:OCONV(QUANTITY,"MD2") "R#10"                      <  
1168 END ELSE                                                           END ELSE
1169 H.LINE=H.LINE:OCONV(QUANTITY,ICR.CNV) "R#10"                    |  H.LINE = H.LINE : OCONV(QUANTITY,ICR.CNV) "R#10"
1170 END                                                                END
1171 IF DMT.RS.QTYPE='DR' THEN                                       |  IF DMT.RS.QTYPE = 'DR' THEN
1172 H.LINE=H.LINE:SP1:'IN' 'L#4'                                    |  H.LINE = H.LINE: SP1: 'IN' 'L#4'
1173 END ELSE                                                           END ELSE

1174 H.LINE=H.LINE:SP1:INV.UNIT<1,2> "L#4"                           |  H.LINE = H.LINE : SP1: INV.UNIT<1,2> "L#4"
1175 END                                                                END
1176 H.LINE=H.LINE:DMT.RS.QTYPE "L#3"                                |  H.LINE = H.LINE : DMT.RS.QTYPE "L#3"
1177 H.LINE=H.LINE:OCONV(DMT.COST,"MD4") "R#9"                       |  H.LINE = H.LINE : OCONV(DMT.COST,"MD4") "R#9"
1178 *T27705 CALL DESC.REFORMAT.2(DMT.ERR.STATUS,20,NEW.DESC)        |  CALL DESC.REFORMAT.2(DMT.ERR.STATUS,20,NEW.DESC)
1179 CALL DESC.REFORMAT.2(DMT.ERR.STATUS,17,NEW.DESC)                <  
1180 DMT.ERR.STATUS=NEW.DESC                                            DMT.ERR.STATUS=NEW.DESC

1181 *T27705 H.LINE=H.LINE:SP1:DMT.ERR.STATUS<1,1> "L#20"            |  H.LINE = H.LINE : SP1:DMT.ERR.STATUS<1,1> "L#20"
1182 H.LINE=H.LINE:SP1:DMT.ERR.STATUS<1,1> "L#17"                    <  
1183 PRINT H.LINE                                                       PRINT H.LINE
1184 H.LINE=""                                                       |  H.LINE = ""
1185 CNT=DCOUNT(DMT.ERR.STATUS, VM)                                  |  CNT = DCOUNT(DMT.ERR.STATUS, VM)
1186                                                                 >  *T21758 v
1187 IF CNT > 1 THEN                                                    IF CNT > 1 THEN

1188 FOR I=2 TO CNT                                                  |  FOR I = 2 TO CNT
1189 H.LINE=''                                                       |  H.LINE = ''
1190 IF I # CNT THEN                                                    IF I # CNT THEN
1191 *T27705 H.LINE=SPACE(111):DMT.ERR.STATUS<1,I> "L#20"            |  H.LINE = SPACE(111):DMT.ERR.STATUS<1,I> "L#20"
1192 H.LINE=SPACE(115):DMT.ERR.STATUS<1,I> "L#17"                    |  LINE.COUNT = LINE.COUNT + 1
1193 LINE.COUNT=LINE.COUNT + 1                                       <  
1194 END ELSE                                                           END ELSE

1195 H.LINE=SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"          |  H.LINE = SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"
1196 *T27705 H.LINE=H.LINE:SPACE(40):DMT.ERR.STATUS<1,I> "L#20"      |  H.LINE = H.LINE: SPACE(40):DMT.ERR.STATUS<1,I> "L#20"
1197 H.LINE=H.LINE:SPACE(1):OCONV(DMT.USAGE.SEQ[6,99], "MTS") ;*T27  <  
1198 H.LINE=H.LINE:SPACE(35):DMT.ERR.STATUS<1,I> "L#17"              <  
1199 END                                                                END
1200 PRINT H.LINE                                                       PRINT H.LINE
1201                                                                 >  *T21758 ^

1202 NEXT I                                                             NEXT I
1203 END ELSE                                                           END ELSE
1204 H.LINE=SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"          |  H.LINE = SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"
1205 H.LINE=H.LINE:SPACE(1):OCONV(DMT.USAGE.SEQ[6,99], "MTS") ;*T27  <  
1206 PRINT H.LINE                                                       PRINT H.LINE
1207 END                                                                END
1208 RETURN                                                             RETURN
1209 4000* CHECK FOR END OF PAGE                                        4000* CHECK FOR END OF PAGE
1210 MATREAD INV.REC FROM INVENTORY, CONO:PREV.PROD ELSE MAT INV.RE  |  * T25003

1211                                                                 >  MATREAD INV.REC FROM INVENTORY, CONO:PREV.PROD ELSE MAT INV.
1212 GOSUB 6000                                                         GOSUB 6000
1213 IF LINE.COUNT + 3 > 53 THEN GOSUB 1200                          |  * T25003
1214 LINE.COUNT=LINE.COUNT + 3                                       |  IF LINE.COUNT + 3 > 53 THEN GOSUB 1000
1215 H.LINE=""                                                       |  LINE.COUNT = LINE.COUNT + 3
1216 H.LINE=SPACE(25):'TOTAL FOR '                                   |  H.LINE = ""
1217 *T27705 H.LINE=H.LINE:SP1:INV.FULL.DESC "L#45"                  |  H.LINE = SPACE(25):'TOTAL FOR '

1218 H.LINE=H.LINE:INV.FULL.DESC "L#45"                              |  H.LINE = H.LINE :SP1: INV.FULL.DESC "L#45"
1219 *T27705 H.LINE=H.LINE:SP1:OCONV(TOT.QTY,ICR.CNV) "R#11"         |  H.LINE = H.LINE :SP1: OCONV(TOT.QTY,ICR.CNV) "R#11"
1220 H.LINE=H.LINE:SP1:OCONV(TOT.QTY,ICR.CNV) "R#16"                 |  PRINT SPACE(83):T.LINE
1221 *T27705 PRINT SPACE(83):T.LINE                                  <  
1222 PRINT SPACE(87):T.LINE                                          <  
1223 PRINT H.LINE                                                       PRINT H.LINE
1224 PRINT                                                              PRINT

1225 TOT.QTY=0                                                       |  TOT.QTY = 0
1226 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE MAT INV.REC  |  * T25003
1227                                                                 >  MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE MAT INV.R
1228 GOSUB 6000                                                         GOSUB 6000
1229                                                                 >  * T25003
1230 RETURN                                                             RETURN
1231 6000*                                                              6000* 

1232 *COPY>ICSBP>INV.UM.CNV                                          |  MAT INV.CNV.REC = ''
1233                                                                 >  BEGIN CASE
1234                                                                 >  CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
1235                                                                 >  ICR.CNV = "MD0"
1236                                                                 >  ICR.DV1 = INV.M.WT;ICR.MT1 = 1;ICR.DV2 = 1
1237                                                                 >  CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
1238                                                                 >  ICR.CNV = "MD0"

1239                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100;ICR.MT1 = 10;ICR.DV2 = 1
1240                                                                 >  CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
1241                                                                 >  ICR.CNV = "MD0"
1242                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100;ICR.MT1 = 100;ICR.DV2 = 12
1243                                                                 >  CASE 1
1244                                                                 >  ICR.CNV = "MD2"
1245                                                                 >  ICR.DV1 = 10;ICR.MT1 = 1;ICR.DV2 = 1

1246                                                                 >  END CASE
1247 RETURN                                                             RETURN
1248 7000* EDIT ERROR SUBROUTINE                                        7000* EDIT ERROR SUBROUTINE
1249 IF INDEX(DMT.ERR.STATUS,DMT.ERR,1) < 1 THEN                        IF INDEX(DMT.ERR.STATUS,DMT.ERR,1) < 1 THEN
1250 DMT.ERR.STATUS<1,-1>=DMT.ERR                                    |  * DMT.ERR.STATUS = DMT.ERR.STATUS:VM:DMT.ERR
1251                                                                 >  DMT.ERR.STATUS<1,-1> = DMT.ERR
1252 END                                                                END

1253 DMT.ERR=''                                                      |  DMT.ERR = ''
1254 RETURN                                                             RETURN
1255 91000* CALLS FOR SYSCOM                                            91000* CALLS FOR SYSCOM
1256 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)                          |  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC)
1257 RETURN                                                             RETURN
1258 92000*                                                             92000* 
1259 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)                          |  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)

1258 92000*                                                             92000* 
1259 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)                          |  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC)
1260 RETURN                                                             RETURN
1261 93000*                                                             93000* 
1262 PRINTER OFF                                                        PRINTER OFF
1263 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                          |  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
1264 999999*                                                            999999* 
1265 END                                                                END
1266 


JCSBP/MATL.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/MATL.MAINT
Printed for thompson at 06/28/2006 04:42:00PM

0027 *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match proble     *T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match prob
0028 *T23278 markt 09/28/1998 * Check for division security             *T23278 markt 09/28/1998 * Check for division security
0029 *T25468 lanny 10/16/2000 * DMT.USAGE.SEQ may get reset when pu     *T25468 lanny 10/16/2000 * DMT.USAGE.SEQ may get reset when 
0030 *                          record in maint - it should be set      *                          record in maint - it should be se
0031 *                          only once.                              *                          only once.
0032 *T26334 edvard 12/12/2001 * REV12                               |  *T26942 adelgado 10/28/2002 * Change authorization process t
0033 *T26126 adelgado 03/08/2002 * Implement the LOCKED clause for   |  *                             authorization for Jobs that ar
0034 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  |  *                             'Invoiced'.
0035 *                             Whse.                             <  
0036 *T25740 epitka 07/02/2002 * IF QTY ENTERED THEN DEFAULT THAT Q  <  

0037 *                           OF SERIAL QTY.                      <  
0038 *C40373 adelgado 08/12/2002 * Don't prompt for unit cost if no  <  
0039 *                             cost exist in the current period  <  
0040 *                             only for new products.            <  
0041 *T27551 thompson 07/10/2003 * CHECK DAILY MATL SEQ NUMBER TO M  <  
0042 *                           * SIX DIGITS ONLY                   <  
0043 *T27622 lross 08/08/2003 * Issue warning message if entering c  <  

0044 *                          item not available until PERIOD + 1  <  
0045 *T27897 thompson 01/22/2004 * Fix problem with error loop       <  
0046 *T28659 lross 08/31/2005 * Incorrect FIFO cost bucket pointer   <  
0047 *                          Task 27622.                          <  
0048 *T28740 lross 12/05/2005 * If LOC changed QTY DEFAULT disappea  <  
0049 *                          DMT.STK.QTY available. Default in o  <  
0050 *                          qty or INV.WHSE.LOC qty for non-ser  <  

0051 *                          tracked items.                       <  
0052 **************************************************************     ************************************************************
0053 *                                                                  *
0054 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0055 *                                                                  *
0056 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0057 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER

0071 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0072 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0073 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0074 *COPY>JCS.CPYLIB>JOB.STAT.CODE                                     *COPY>JCS.CPYLIB>JOB.STAT.CODE
0075 *COPY>ICS.CPYLIB>WAREHOUSE                                         *COPY>ICS.CPYLIB>WAREHOUSE
0076 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0077 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0078 *                                                                  *
0079 DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)           <  
0080 * C40373 v                                                      <  

0081 DEFFUN DIVISION.POSITION (CONO,CONTROL.FILE,DIV.CODE)           <  
0082 DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)    <  
0083 CUR.PERIOD = ''                                                 <  
0084 * C40373 ^                                                      <  
0085 DEFFUN CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)           <  
0086 OPEN.FLAG=1                                                     <  
0087 *                                                               <  

0091 *                                                                  *
0092 *---- OPEN ALL FILES                                               *---- OPEN ALL FILES
0093 *                                                                  *
0094 MAT FILE.VARS=""                                                   MAT FILE.VARS=""
0095 OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING";GOTO 93     OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING";GOTO 
0096 OPEN "","JOB.MATL" TO JOB.MATL ELSE                             |  OPEN "","JOB.MATL" TO JOB.MATL ELSE ERRMSG="JOB.MATL FILE IS
0097 ERRMSG="JOB.MATL FILE IS MISSING";GOTO 93000                    |  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="FILE M.SCREE
0098 END                                                             |  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="FILE COMPANY IS MI
0099 OPEN "","JCS.SCREENS" TO M.SCREENS ELSE                         |  OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="FILE CUSTOMER IS
0100 ERRMSG="FILE M.SCREENS IS MISSING";GOTO 93000                   |  OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="FILE DIVISION IS

0101 END                                                             |  OPEN "","DAILY.MATL" TO DAILY.MATL ELSE ERRMSG="FILE DAILY.M
0102 OPEN "","COMPANY" TO COMPANY ELSE                               |  OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS
0103 ERRMSG="FILE COMPANY IS MISSING";GOTO 93000                     |  OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="INVENTORY FILE
0104 END                                                             |  OPEN "","INVENTORY.XREF" TO INVENTORY.XREF ELSE ERRMSG="INVE
0105 OPEN "","CUSTOMER" TO CUSTOMER ELSE                             |  OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="INV.WHSE FILE IS
0106 ERRMSG="FILE CUSTOMER IS MISSING";GOTO 93000                    |  OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="INV.WHSE
0107 END                                                             |  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="FILE DEPARTM

0108 OPEN "","DIVISION" TO DIVISION ELSE                             |  OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="FILE COST.CNTR
0109 ERRMSG="FILE DIVISION IS MISSING";GOTO 93000                    |  OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="FILE PREFIX IS MISSI
0110 END                                                             |  OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="FILE CONTROL IS MI
0111 OPEN "","DAILY.MATL" TO DAILY.MATL ELSE                         |  OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE ERRMSG="FILE
0112 ERRMSG="FILE DAILY.MATLX IS MISSING";GOTO 93000                 |  OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG="FILE J
0113 END                                                             |  OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="FILE WAREHOUSE
0114 OPEN "","CATEGORY" TO CATEGORY ELSE                             |  OPEN "","ROLL.SKID.INFO" TO ROLL.SKID.INFO ELSE ERRMSG="FILE

0115 ERRMSG="CATEGORY FILE IS MISSING";GOTO 93000                    <  
0116 END                                                             <  
0117 OPEN "","INVENTORY" TO INVENTORY ELSE                           <  
0118 ERRMSG="INVENTORY FILE IS MISSING";GOTO 93000                   <  
0119 END                                                             <  
0120 OPEN "","INVENTORY.XREF" TO INVENTORY.XREF ELSE                 <  
0121 ERRMSG="INVENTORY.XREF FILE IS MISSING";GOTO 93000              <  

0122 END                                                             <  
0123 OPEN "","INV.WHSE" TO INV.WHSE ELSE                             <  
0124 ERRMSG="INV.WHSE FILE IS MISSING";GOTO 93000                    <  
0125 END                                                             <  
0126 OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE                     <  
0127 ERRMSG="INV.WHSE.LOC FILE IS MISSING";GOTO 93000                <  
0128 END                                                             <  

0129 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE                         <  
0130 ERRMSG="FILE DEPARTMENT IS MISSING";GOTO 93000                  <  
0131 END                                                             <  
0132 OPEN "","COST.CNTR" TO COST.CNTR ELSE                           <  
0133 ERRMSG="FILE COST.CNTR IS MISSING";GOTO 93000                   <  
0134 END                                                             <  
0135 OPEN "","PREFIX" TO PREFIX ELSE                                 <  

0136 ERRMSG="FILE PREFIX IS MISSING";GOTO 93000                      <  
0137 END                                                             <  
0138 OPEN "","CONTROL" TO CONTROL ELSE                               <  
0139 ERRMSG="FILE CONTROL IS MISSING";GOTO 93000                     <  
0140 END                                                             <  
0141 OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE                 <  
0142 ERRMSG="FILE SPOILAGE.CODES IS MISSING";GOTO 93000              <  

0143 END                                                             <  
0144 OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE                   <  
0145 ERRMSG="FILE JOB.STAT.CODE IS MISSING";GOTO 93000               <  
0146 END                                                             <  
0147 OPEN "","WAREHOUSE" TO WAREHOUSE ELSE                           <  
0148 ERRMSG="FILE WAREHOUSE IS MISSING";GOTO 93000                   <  
0149 END                                                             <  

0150 OPEN "","INV_SERIAL" TO INV_SERIAL ELSE                         <  
0151 ERRMSG="FILE INV_SERIAL IS MISSING";GOTO 93000                  <  
0152 END                                                             <  
0153 *                                                                  *
0154 *---- INITIALIZATION                                               *---- INITIALIZATION
0155 *                                                                  *
0156 MAT COMP.REC=""                                                    MAT COMP.REC=""

0155 *                                                                  *
0156 MAT COMP.REC=""                                                    MAT COMP.REC=""
0157 CONO=""                                                            CONO=""
0158 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0159 IF CONO="END" THEN GOTO 99999                                      IF CONO="END" THEN GOTO 99999
0160 SERIAL=""                                                       |  READ BCI FROM CONTROL,CONO:"RL.SK.CONTROL" ELSE BCI=""
0161                                                                 >  RSKI.ID=""
0162 MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELSE      MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELS
0163 MAT JOB.CUTOFF.REC=""                                              MAT JOB.CUTOFF.REC=""
0164 J.CUTOFF.NUM=0                                                     J.CUTOFF.NUM=0

0174 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0175 *                                                                  *
0176 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0177 *                                                                  *
0178 100*                                                               100*
0179 RELEASE      ;* T26126                                          <  
0180 MAT DMT.REC="";MAT SCV.REC=""                                      MAT DMT.REC="";MAT SCV.REC=""
0181 CHECK.COST=0;NEXT.ENTRY=""                                         CHECK.COST=0;NEXT.ENTRY=""
0182 RSI.HMSG=""                                                        RSI.HMSG=""
0183 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT

0184 ECD.NUM=1;ECD.VALDAT.CODE=5;ECD.VALDAT.FILE=DAILY.MATL     ;*   |  ECD.NUM=1;ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=DAILY.MATL
0185 ECD.PREFIX.ID=CONO                                                 ECD.PREFIX.ID=CONO
0186 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0187 BEGIN CASE                                                         BEGIN CASE
0188 CASE ECD.RET.VALUE="END"                                           CASE ECD.RET.VALUE="END"
0189 GOTO 99999                                                         GOTO 99999
0190 CASE ECD.RET.VALUE="N"                                             CASE ECD.RET.VALUE="N"

0194 200*                                                               200*
0195 SCV.REC(2)<1>=DMT.JOB;* T23278                                     SCV.REC(2)<1>=DMT.JOB;* T23278
0196 ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
0197 IF ECD.RET.VALUE="END" THEN GOTO 100                               IF ECD.RET.VALUE="END" THEN GOTO 100
0198 POST.OSJ=0                                                         POST.OSJ=0
0199 JOB.ID=CONO:ECD.RET.VALUE                                       |  MATREAD JOB.REC FROM JOB,CONO:ECD.RET.VALUE ELSE
0200 JOB.NO=ECD.RET.VALUE                                            <  
0201 MATREAD JOB.REC FROM JOB,JOB.ID ELSE                            <  
0202 MAT JOB.REC=""                                                     MAT JOB.REC=""
0203 FND=0                                                              FND=0

0221 END ELSE                                                           END ELSE
0222 ERRMSG="JOB IS NOT ON FILE. TRY AGAIN !!"                          ERRMSG="JOB IS NOT ON FILE. TRY AGAIN !!"
0223 GOSUB 91000;GOTO 200                                               GOSUB 91000;GOTO 200
0224 END                                                                END
0225 END                                                                END
0226                                                                 >  *T23278 v
0227 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''        DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
0228 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)                  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0229 IF ERRMSG # '' THEN                                                IF ERRMSG # '' THEN
0230 GOSUB 91000; GOTO 200                                              GOSUB 91000; GOTO 200

0231 END                                                                END
0232                                                                 >  *T23278 ^
0233 BEGIN CASE                                                         BEGIN CASE
0234 CASE JOB.STATUS<1,1>=9                                             CASE JOB.STATUS<1,1>=9
0235 ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 200          ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 200
0236 CASE JOB.STATUS<1,1>=7                                             CASE JOB.STATUS<1,1>=7
0237 ERRMSG="THIS JOB IS READY TO BE PURGED";GOSUB 91000;GOTO 200       ERRMSG="THIS JOB IS READY TO BE PURGED";GOSUB 91000;GOTO 200
0238 CASE JOB.STATUS<1,1>=8                                             CASE JOB.STATUS<1,1>=8

0239 ERRMSG="THIS JOB HAS BEEN PURGED";GOSUB 91000;GOTO 200             ERRMSG="THIS JOB HAS BEEN PURGED";GOSUB 91000;GOTO 200
0240 END CASE                                                           END CASE
0241 GOSUB 7000                                                         GOSUB 7000
0242 IF VALUE="END" THEN GOTO 200                                       IF VALUE="END" THEN GOTO 200
0243 IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN                         IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN
0244 CUST.ID=CONO:JOB.CUST                                           |  MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE
0245 MATREAD CUST.REC FROM CUSTOMER,CUST.ID ELSE                     <  
0246 CUST.NAME=UNKNOWN                                                  CUST.NAME=UNKNOWN
0247 END                                                                END
0248 JOB.DESC<1,1>=CUST.NAME                                            JOB.DESC<1,1>=CUST.NAME

0250 DMT.JOB=ECD.RET.VALUE                                              DMT.JOB=ECD.RET.VALUE
0251 ECD.NUM=3;SCV.REC(3)<1>=JOB.DESC<1,1>;ECD.ACTION=5;CALL SCRN.E     ECD.NUM=3;SCV.REC(3)<1>=JOB.DESC<1,1>;ECD.ACTION=5;CALL SCRN
0252 IF POST.OSJ=0 THEN                                                 IF POST.OSJ=0 THEN
0253 DMT.DIV=JOB.DIV                                                    DMT.DIV=JOB.DIV
0254 ECD.NUM=4;SCV.REC(4)<1>=DMT.DIV;ECD.ACTION=5;CALL SCRN.EDIT        ECD.NUM=4;SCV.REC(4)<1>=DMT.DIV;ECD.ACTION=5;CALL SCRN.EDIT
0255 DIV.ID=CONO:DMT.DIV                                             |  MATREAD DIV.REC FROM DIVISION,CONO:DMT.DIV ELSE DIV.DESC=UNK
0256 MATREAD DIV.REC FROM DIVISION,DIV.ID ELSE DIV.DESC=UNKNOWN      <  
0257 ECD.NUM=5;SCV.REC(5)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT       ECD.NUM=5;SCV.REC(5)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
0258 END                                                                END
0259 SPTR=1                                                             SPTR=1

0260 FOR REQUEST=1 TO 7 WHILE ECD.RET.VALUE # "END"                     FOR REQUEST=1 TO 7 WHILE ECD.RET.VALUE # "END"
0261 ON REQUEST GOSUB GET.COST.CENTER,EDIT.USAGE.TYPE,ENT.DATE.USED  |  ON REQUEST GOSUB 1000,2000,3000,4000,5000,5500,6000
0262 NEXT REQUEST                                                       NEXT REQUEST
0263 IF ECD.RET.VALUE="END" THEN GOTO 100                               IF ECD.RET.VALUE="END" THEN GOTO 100
0264 CASE ECD.VALDAT.ITEM # ""                                          CASE ECD.VALDAT.ITEM # ""
0265 FOR I=1 TO DMT.REC.SIZE;DMT.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I       FOR I=1 TO DMT.REC.SIZE;DMT.REC(I)=ECD.VALDAT.ITEM<I>;NEXT I
0266                                                                 >  *T23278 v
0267 DIV.CODE = DMT.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''        DIV.CODE = DMT.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''

0267 DIV.CODE = DMT.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''        DIV.CODE = DMT.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
0268 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)                  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0269 IF ERRMSG # '' THEN                                                IF ERRMSG # '' THEN
0270 GOSUB 91000; GOTO 100                                              GOSUB 91000; GOTO 100
0271 END                                                                END
0272                                                                 >  *T23278 ^
0273 DMT.SEQ.NO=ECD.RET.VALUE                                           DMT.SEQ.NO=ECD.RET.VALUE
0274 POST.OSJ=0                                                         POST.OSJ=0
0275 JOB.ID=CONO:DMT.JOB                                             |  MATREAD JOB.REC FROM JOB,CONO:DMT.JOB ELSE
0276 JOB.NO=DMT.JOB                                                  <  

0277 MATREAD JOB.REC FROM JOB,JOB.ID ELSE                            <  
0278 MAT JOB.REC=""                                                     MAT JOB.REC=""
0279 FND=0                                                              FND=0
0280 IF NUM(DMT.JOB) THEN                                               IF NUM(DMT.JOB) THEN
0281 IF DMT.JOB < J.CUTOFF.NUM THEN FND=1                               IF DMT.JOB < J.CUTOFF.NUM THEN FND=1
0282 END ELSE                                                           END ELSE
0283 JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)                                  JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)

0297 END ELSE                                                           END ELSE
0298 JOB.DESC<1,1>=UNKNOWN                                              JOB.DESC<1,1>=UNKNOWN
0299 END                                                                END
0300 END                                                                END
0301 IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN                         IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN
0302 CUST.ID =CONO:JOB.CUST                                          |  MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE
0303 MATREAD CUST.REC FROM CUSTOMER,CUST.ID ELSE                     <  
0304 CUST.NAME=UNKNOWN                                                  CUST.NAME=UNKNOWN
0305 END                                                                END
0306 JOB.DESC<1,1>=CUST.NAME                                            JOB.DESC<1,1>=CUST.NAME

0307 END                                                                END
0308 DIV.ID=CONO:DMT.DIV                                             |  MATREAD DIV.REC FROM DIVISION,CONO:DMT.DIV ELSE
0309 MATREAD DIV.REC FROM DIVISION,DIV.ID ELSE                       <  
0310 MAT DIV.REC="";DIV.DESC=UNKNOWN                                    MAT DIV.REC="";DIV.DESC=UNKNOWN
0311 END                                                                END
0312 DEPT.ID=CONO:DMT.DEPT                                           |  MATREAD DEPT.REC FROM DEPARTMENT,CONO:DMT.DEPT ELSE
0313 MATREAD DEPT.REC FROM DEPARTMENT,DEPT.ID ELSE                   <  
0314 MAT DEPT.REC="";DEPT.DESC=UNKNOWN                                  MAT DEPT.REC="";DEPT.DESC=UNKNOWN

0315 END                                                                END
0316 CCTR.ID=CONO:DMT.CCTR                                           |  MATREAD CCTR.REC FROM COST.CNTR,CONO:DMT.CCTR ELSE
0317 MATREAD CCTR.REC FROM COST.CNTR,CCTR.ID ELSE                    <  
0318 MAT CCTR.REC="";CCTR.DESC=UNKNOWN                                  MAT CCTR.REC="";CCTR.DESC=UNKNOWN
0319 END                                                                END
0320 IF CCTR.TYPE="F" THEN CCTR.DESC="COST CENTER IS FROZEN"            IF CCTR.TYPE="F" THEN CCTR.DESC="COST CENTER IS FROZEN"
0321 INV.ID=CONO:DMT.PROD                                            |  MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE
0322 MATREAD INV.REC FROM INVENTORY,INV.ID ELSE                      <  

0321 INV.ID=CONO:DMT.PROD                                            |  MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE
0322 MATREAD INV.REC FROM INVENTORY,INV.ID ELSE                      <  
0323 MAT INV.REC="";INV.FULL.DESC=UNKNOWN                               MAT INV.REC="";INV.FULL.DESC=UNKNOWN
0324 END                                                                END
0325 LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE WFND=0     LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE WFND
0326 CATG.ID=CONO:INV.LINE                                           |  MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.R
0327 MATREAD CATG.REC FROM CATEGORY,CATG.ID ELSE MAT CATG.REC=''     |  GOSUB 500
0328 GOSUB GET.INV.CNV                                               |  MATREAD IWH.REC FROM INV.WHSE,CONO:DMT.PROD:"!":DMT.WHSE ELS
0329 IWH.ID=CONO:DMT.PROD:"!":DMT.WHSE                               |  GOSUB 9000
0330 MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE MAT IWH.REC=''        <  

0331 ISTK.ID=CONO:DMT.SERIAL                                         <  
0332 MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE MAT ISTK.REC=''   <  
0333 GOSUB CHECK.MATL.RESV                                           <  
0334 SCV.REC(2)<1>=DMT.JOB                                              SCV.REC(2)<1>=DMT.JOB
0335 SCV.REC(3)<1>=JOB.DESC<1,1>                                        SCV.REC(3)<1>=JOB.DESC<1,1>
0336 SCV.REC(4)<1>=DMT.DIV                                              SCV.REC(4)<1>=DMT.DIV
0337 SCV.REC(5)<1>=DIV.DESC                                             SCV.REC(5)<1>=DIV.DESC

0339 SCV.REC(7)<1>=DEPT.DESC                                            SCV.REC(7)<1>=DEPT.DESC
0340 SCV.REC(8)<1>=DMT.CCTR                                             SCV.REC(8)<1>=DMT.CCTR
0341 SCV.REC(9)<1>=CCTR.DESC                                            SCV.REC(9)<1>=CCTR.DESC
0342 SCV.REC(10)<1>=DMT.TYPE                                            SCV.REC(10)<1>=DMT.TYPE
0343 SCV.REC(24)<1>=DMT.SPOIL.CODE                                      SCV.REC(24)<1>=DMT.SPOIL.CODE
0344 GOSUB GET.ENTRY.TYPE                                            |  GOSUB 600
0345 SCV.REC(12)<1>=DMT.DATE                                            SCV.REC(12)<1>=DMT.DATE
0346 SCV.REC(13)<1>=DMT.PROD                                            SCV.REC(13)<1>=DMT.PROD
0347 SCV.REC(14)<1>=INV.FULL.DESC                                       SCV.REC(14)<1>=INV.FULL.DESC
0348 SCV.REC(15)<1>=DMT.WHSE                                            SCV.REC(15)<1>=DMT.WHSE

0349 SCV.REC(16)<1>=DMT.LOC                                             SCV.REC(16)<1>=DMT.LOC
0350 IF CATG.TRK.LVL='S' THEN                                        |  SCV.REC(17)<1>=DMT.R.S.ID
0351 SCV.REC(17)<1>=DMT.SERIAL                                       <  
0352 END                                                             <  
0353 SCV.REC(26)<1>=DMT.RS.QTYPE                                        SCV.REC(26)<1>=DMT.RS.QTYPE
0354 IF DMT.RS.QTYPE="DR" THEN                                          IF DMT.RS.QTYPE="DR" THEN
0355 SCV.REC(19)<1>=OCONV(INT(DMT.QTY/10),"MD2")                        SCV.REC(19)<1>=OCONV(INT(DMT.QTY/10),"MD2")
0356 END ELSE                                                           END ELSE

0357 SCV.REC(19)<1>=OCONV(CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'.5'  |  SCV.REC(19)<1>=OCONV(INT(((DMT.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2
0358                                                                 >  *           SCV.REC(19)<1>=INT(((DMT.QTY/ICR.DV1)*ICR.MT1)/I
0359 END                                                                END
0360 BEGIN CASE                                                         BEGIN CASE
0361 CASE DMT.RS.QTYPE="WU"                                             CASE DMT.RS.QTYPE="WU"
0362 QDESC="Weight used"                                                QDESC="Weight used"
0363 CASE DMT.RS.QTYPE="WR"                                             CASE DMT.RS.QTYPE="WR"

0378 SCV.REC(18)<1>=QDESC                                               SCV.REC(18)<1>=QDESC
0379 SCV.REC(27)<1>=OCONV(DMT.TIME,"MTS")                               SCV.REC(27)<1>=OCONV(DMT.TIME,"MTS")
0380 SCV.REC(22)<1>=DMT.COST                                            SCV.REC(22)<1>=DMT.COST
0381 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0382 LOCATE DMT.LOC IN IWH.LOC<1>,1 SETTING LFND ELSE LFND=0            LOCATE DMT.LOC IN IWH.LOC<1>,1 SETTING LFND ELSE LFND=0
0383 IWLO.ID=CONO:DMT.PROD:"!":DMT.WHSE:"!":DMT.LOC                  |  MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO:DMT.PROD:"!":DMT.WHS
0384 MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC='  |  IF DMT.R.S.ID # "" THEN
0385 IF DMT.SERIAL # "" THEN                                         |  LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RFND ELSE RFND
0386 LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RFND ELSE RFND=0  <  
0387 END ELSE                                                           END ELSE

0407 CASE REQUEST="END" OR REQUEST="E"                                  CASE REQUEST="END" OR REQUEST="E"
0408 MORE=0                                                             MORE=0
0409 CASE NUM(REQUEST)                                                  CASE NUM(REQUEST)
0410 BEGIN CASE                                                         BEGIN CASE
0411 CASE REQUEST >= 1 AND REQUEST <= 3                                 CASE REQUEST >= 1 AND REQUEST <= 3
0412 ON REQUEST GOSUB GET.COST.CENTER,EDIT.USAGE.TYPE,ENT.DATE.USED  |  ON REQUEST GOSUB 1000,2000,3000
0413 CASE REQUEST=4                                                     CASE REQUEST=4
0414 SPTR=1                                                             SPTR=1
0415 GOSUB ENT.PROD.INFO                                             |  GOSUB 4000
0416 GOSUB ENT.QTY.TYPE                                              |  GOSUB 5000

0417 GOSUB ENT.MATERIAL.COST                                         |  GOSUB 6000
0418 CASE REQUEST=5                                                     CASE REQUEST=5
0419 GOSUB ENT.QTY.TYPE                                              |  GOSUB 5000
0420 CASE REQUEST=6                                                     CASE REQUEST=6
0421 GOSUB ENT.TIME.USED                                             |  GOSUB 5500
0422 CASE REQUEST=7                                                     CASE REQUEST=7
0423 GOSUB ENT.MATERIAL.COST                                         |  GOSUB 6000

0426 GOSUB 91000                                                        GOSUB 91000
0427 END                                                                END
0428 END CASE                                                           END CASE
0429 CASE REQUEST="N"                                                   CASE REQUEST="N"
0430 IF DMT.SEQ.NO="N" THEN                                             IF DMT.SEQ.NO="N" THEN
0431 GOSUB GET.SEQ.NO                                                |  GOSUB 400
0432 END                                                                END
0433 MATWRITE DMT.REC ON DAILY.MATL,CONO:DMT.SEQ.NO                     MATWRITE DMT.REC ON DAILY.MATL,CONO:DMT.SEQ.NO
0434 DMT.SEQ.NO="N"                                                     DMT.SEQ.NO="N"
0435 SCV.REC(1)<1>=DMT.SEQ.NO                                           SCV.REC(1)<1>=DMT.SEQ.NO

0436 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0437 DMT.QTY='';DMT.STK.QTY=''                                       |  DMT.QTY=0;DMT.SHEET=0
0438 DMT.SERIAL="";DMT.DESC="";DMT.PRT.DATE=""                       |  * DMT.ODIAM=0;DMT.NDIAM=0
0439                                                                 >  DMT.R.S.ID="";DMT.DESC="";DMT.PRT.DATE=""
0440 DMT.STATUS=""                                                      DMT.STATUS=""
0441 SCV.REC(17)<1>="";ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(17)<1>="";ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT
0442 SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT
0443 SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT

0443 SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
0444 SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
0445 SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
0446 SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT
0447 SPTR=1                                                             SPTR=1
0448                                                                 >  * T20721
0449                                                                 >  *            GOSUB 4000
0450                                                                 >  *            GOSUB 5000
0451                                                                 >  *            GOSUB 6000
0452 XXX = 4; ECD.RET.VALUE = ""                                        XXX = 4; ECD.RET.VALUE = ""

0453 FOR XXXPTR = 1 TO XXX UNTIL ECD.RET.VALUE = "END"                  FOR XXXPTR = 1 TO XXX UNTIL ECD.RET.VALUE = "END"
0454 ON XXXPTR GOSUB ENT.PROD.INFO,ENT.QTY.TYPE,ENT.TIME.USED,ENT.M  |  ON XXXPTR GOSUB 4000,5000,5500,6000
0455 NEXT XXXPTR                                                        NEXT XXXPTR
0456 IF ECD.RET.VALUE = "END" THEN MORE = 0                             IF ECD.RET.VALUE = "END" THEN MORE = 0
0457                                                                 >  * T20721
0458 CASE REQUEST="F"                                                   CASE REQUEST="F"
0459 IF DMT.SEQ.NO="N" THEN                                             IF DMT.SEQ.NO="N" THEN
0460 GOSUB GET.SEQ.NO                                                |  GOSUB 400

0468 END CASE                                                           END CASE
0469 WHILE MORE DO                                                      WHILE MORE DO
0470 REPEAT                                                             REPEAT
0471 GOTO 100                                                           GOTO 100
0472 *                                                                  *
0473 *****************                                               |  *---- GET SEQUENCE NUMBER
0474 GET.SEQ.NO:                                                     <  
0475 *****************                                               <  
0476 *                                                                  *
0477                                                                 >  400*

0481 WHILE CK.FLG # "" DO                                               WHILE CK.FLG # "" DO
0482 MATL.ENT.SEQ=MATL.ENT.SEQ+1                                        MATL.ENT.SEQ=MATL.ENT.SEQ+1
0483 REPEAT                                                             REPEAT
0484 DMT.SEQ.NO=MATL.ENT.SEQ                                            DMT.SEQ.NO=MATL.ENT.SEQ
0485 MATL.ENT.SEQ=MATL.ENT.SEQ+1                                        MATL.ENT.SEQ=MATL.ENT.SEQ+1
0486 IF MATL.ENT.SEQ > 999999 THEN MATL.ENT.SEQ = 10001; * T27551    <  
0487 WRITE MATL.ENT.SEQ ON CONTROL,CONO:"DAILY.MATL"                    WRITE MATL.ENT.SEQ ON CONTROL,CONO:"DAILY.MATL"
0488 SCV.REC(1)<1>=DMT.SEQ.NO                                           SCV.REC(1)<1>=DMT.SEQ.NO
0489 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0490 ERRMSG="Please Note New Sequence Number";GOSUB 91000               ERRMSG="Please Note New Sequence Number";GOSUB 91000

0491 RETURN                                                             RETURN
0492 *                                                                  *
0493 ***************                                                 |  *---- GET CONVERSION FACTOR
0494 GET.INV.CNV:                                                    <  
0495 ***************                                                 <  
0496 *                                                                  *
0497 *COPY>ICSBP>INV.UM.CNV                                          |  500*
0498                                                                 >  MAT INV.CNV.REC=""
0499                                                                 >  QTY.SCALER=""

0500                                                                 >  BEGIN CASE
0501                                                                 >  CASE INV.UNIT<1,2>="SHT" AND INV.UNIT<1,3>="LBS"
0502                                                                 >  ICR.DV1=INV.M.WT;ICR.MT1=1;ICR.DV2=1;ICR.CNV="MD0"
0503                                                                 >  QTY.SCALER=0
0504                                                                 >  CASE INV.UNIT<1,2>="PC" AND INV.UNIT<1,3>="MSI"
0505                                                                 >  ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=10;ICR.DV2=1;ICR.CNV="MD0"
0506                                                                 >  QTY.SCALER=0

0507                                                                 >  CASE INV.UNIT<1,2>="FT" AND INV.UNIT<1,3>="MSI"
0508                                                                 >  ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=100;ICR.DV2=12;ICR.CNV="MD
0509                                                                 >  QTY.SCALER=0
0510                                                                 >  CASE 1
0511                                                                 >  ICR.DV1=10;ICR.MT1=1;ICR.DV2=1;ICR.CNV="MD2"
0512                                                                 >  QTY.SCALER=2
0513                                                                 >  END CASE

0514                                                                 >  *BLD.SCRN(21)<1,6> = QTY.SCALER
0515 RETURN                                                             RETURN
0516 *                                                                  *
0517 ****************                                                |  *---- GET ENTRY TYPE
0518 GET.ENTRY.TYPE:                                                 <  
0519 ****************                                                <  
0520 *                                                                  *

0521                                                                 >  600*
0522 BEGIN CASE                                                         BEGIN CASE
0523 CASE DMT.TYPE="N"                                                  CASE DMT.TYPE="N"
0524 SCV.REC(11)<1>="NON CHARGABLE"                                     SCV.REC(11)<1>="NON CHARGABLE"
0525 CASE DMT.TYPE="C"                                                  CASE DMT.TYPE="C"
0526 SCV.REC(11)<1>="CHANGE ORDER"                                      SCV.REC(11)<1>="CHANGE ORDER"
0527 CASE DMT.TYPE="S"                                                  CASE DMT.TYPE="S"

0535 END ELSE                                                           END ELSE
0536 SCV.REC(25)<1>=""                                                  SCV.REC(25)<1>=""
0537 END                                                                END
0538 RETURN                                                             RETURN
0539 *                                                                  *
0540 ****************                                                |  *---- GET COST CENTER
0541 GET.COST.CENTER:                                                <  
0542 ****************                                                <  
0543 *                                                                  *
0544                                                                 >  1000*

0548 CASE ECD.RET.VALUE="END"                                           CASE ECD.RET.VALUE="END"
0549 GOTO 1999                                                          GOTO 1999
0550 CASE ECD.VALDAT.ITEM # ""                                          CASE ECD.VALDAT.ITEM # ""
0551 FOR K=1 TO CCTR.REC.SIZE;CCTR.REC(K)=ECD.VALDAT.ITEM<K>;NEXT K     FOR K=1 TO CCTR.REC.SIZE;CCTR.REC(K)=ECD.VALDAT.ITEM<K>;NEXT
0552 IF CCTR.TYPE="F" THEN                                              IF CCTR.TYPE="F" THEN
0553 ERRMSG="COST CENTER IS FROZEN";GOSUB 91000;GOTO GET.COST.CENTE  |  ERRMSG="COST CENTER IS FROZEN";GOSUB 91000;GOTO 1000
0554 END                                                                END
0555 DMT.CCTR=ECD.RET.VALUE                                             DMT.CCTR=ECD.RET.VALUE
0556 DMT.DEPT=CCTR.DEPT                                                 DMT.DEPT=CCTR.DEPT
0557 DEPT.ID=CONO:DMT.DEPT                                           |  MATREAD DEPT.REC FROM DEPARTMENT,CONO:DMT.DEPT ELSE

0558 MATREAD DEPT.REC FROM DEPARTMENT,DEPT.ID ELSE                   <  
0559 MAT DEPT.REC="";DEPT.DESC=UNKNOWN                                  MAT DEPT.REC="";DEPT.DESC=UNKNOWN
0560 END                                                                END
0561 ECD.NUM=6;SCV.REC(6)<1>=DMT.DEPT;ECD.ACTION=5;CALL SCRN.EDIT       ECD.NUM=6;SCV.REC(6)<1>=DMT.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
0562 ECD.NUM=7;SCV.REC(7)<1>=DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT      ECD.NUM=7;SCV.REC(7)<1>=DEPT.DESC;ECD.ACTION=5;CALL SCRN.ED
I
0563 ECD.NUM=9;SCV.REC(9)<1>=CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT      ECD.NUM=9;SCV.REC(9)<1>=CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDI
0564 CASE ECD.RET.VALUE="???"                                           CASE ECD.RET.VALUE="???"

0569 GXR.ATT<1,2>=2                                                     GXR.ATT<1,2>=2
0570 GXR.LOC=2                                                          GXR.LOC=2
0571 GXR.ID=""                                                          GXR.ID=""
0572 GXR.SRCH.ID=DMT.DIV                                                GXR.SRCH.ID=DMT.DIV
0573 CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)                             CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0574 IF GXR.ID="" THEN ECD.ACTION=2;CALL SCRN.EDIT;ECD.ACTION=3;CAL  |  IF GXR.ID="" THEN ECD.ACTION=2;CALL SCRN.EDIT;ECD.ACTION=3;C
0575 DEPT.ID=CONO:GXR.ID                                             |  MATREAD DEPT.REC FROM DEPARTMENT,CONO:GXR.ID ELSE
0576 MATREAD DEPT.REC FROM DEPARTMENT,DEPT.ID ELSE                   <  
0577 ERRMSG="DEPARTMENT ":GXR.ID:" IS MISSING"                          ERRMSG="DEPARTMENT ":GXR.ID:" IS MISSING"
0578 GOSUB 91000;ECD.ACTION=2;CALL SCRN.EDIT;ECD.ACTION=3;CALL SCRN  |  GOSUB 91000;ECD.ACTION=2;CALL SCRN.EDIT;ECD.ACTION=3;CALL SC

0588 GXR.ID=""                                                          GXR.ID=""
0589 GXR.SRCH.ID=DMT.DEPT                                               GXR.SRCH.ID=DMT.DEPT
0590 CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)                             CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0591 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0592 IF GXR.ID="" THEN                                                  IF GXR.ID="" THEN
0593 ECD.ACTION=3;CALL SCRN.EDIT;GOTO GET.COST.CENTER                |  ECD.ACTION=3;CALL SCRN.EDIT;GOTO 1000
0594 END ELSE                                                           END ELSE
0595 CCTR.ID=CONO:GXR.ID                                             |  MATREAD CCTR.REC FROM COST.CNTR,CONO:GXR.ID ELSE
0596 MATREAD CCTR.REC FROM COST.CNTR,CCTR.ID ELSE                    <  
0597 ERRMSG="COST.CNTR ":GXR.ID:" IS MISSING"                           ERRMSG="COST.CNTR ":GXR.ID:" IS MISSING"

0598 GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO GET.COST.CENTER    |  GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO 1000
0599 END                                                                END
0600 IF CCTR.DEPT # DMT.DEPT THEN                                       IF CCTR.DEPT # DMT.DEPT THEN
0601 ERRMSG="INCORRECT DEPARTMENT FOR COST CENTER ":GXR.ID              ERRMSG="INCORRECT DEPARTMENT FOR COST CENTER ":GXR.ID
0602 GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO GET.COST.CENTER    |  GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO 1000
0603 END                                                                END
0604 IF CCTR.TYPE="F" THEN                                              IF CCTR.TYPE="F" THEN

0605 ERRMSG="COST CENTER ":GXR.ID:" IS FROZEN";GOSUB 91000              ERRMSG="COST CENTER ":GXR.ID:" IS FROZEN";GOSUB 91000
0606 ECD.ACTION=3;CALL SCRN.EDIT;GOTO GET.COST.CENTER                |  ECD.ACTION=3;CALL SCRN.EDIT;GOTO 1000
0607 END                                                                END
0608 DMT.CCTR=GXR.ID                                                    DMT.CCTR=GXR.ID
0609 SCV.REC(8)<1>=DMT.CCTR                                             SCV.REC(8)<1>=DMT.CCTR
0610 SCV.REC(9)<1>=CCTR.DESC                                            SCV.REC(9)<1>=CCTR.DESC
0611 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0612 END                                                                END

0613 CASE 1                                                             CASE 1
0614 GOTO GET.COST.CENTER                                            |  GOTO 1000
0615 END CASE                                                           END CASE
0616 IF POST.OSJ THEN                                                   IF POST.OSJ THEN
0617 DCNT=DCOUNT(DEPT.DIV,VM)                                           DCNT=DCOUNT(DEPT.DIV,VM)
0618 BEGIN CASE                                                         BEGIN CASE
0619 CASE DCNT < 1                                                      CASE DCNT < 1
0620 ERRMSG="NO DIVISIONS FOR COST CENTER DEPARTMENT"                   ERRMSG="NO DIVISIONS FOR COST CENTER DEPARTMENT"

0621 GOSUB 91000;GOTO GET.COST.CENTER                                |  GOSUB 91000;GOTO 1000
0622 CASE DCNT=1                                                        CASE DCNT=1
0623 ECD.NUM=4;SCV.REC(4)<1>=DEPT.DIV<1,1>;ECD.ACTION=5;CALL SCRN.E     ECD.NUM=4;SCV.REC(4)<1>=DEPT.DIV<1,1>;ECD.ACTION=5;CALL SCRN
0624 DIV.ID=CONO:DEPT.DIV<1,1>                                       |  MATREAD DIV.REC FROM DIVISION,CONO:DEPT.DIV<1,1> ELSE
0625 MATREAD DIV.REC FROM DIVISION,DIV.ID ELSE                       <  
0626 ERRMSG="DEPARTMENT DIVISION IS MISSING"                            ERRMSG="DEPARTMENT DIVISION IS MISSING"
0627 GOSUB 91000;GOTO GET.COST.CENTER                                |  GOSUB 91000;GOTO 1000

0638 ECD.HMSG<1,1,DV>=ECD.HMSG<1,1,DV>:", ":DEPT.DIV<1,K>               ECD.HMSG<1,1,DV>=ECD.HMSG<1,1,DV>:", ":DEPT.DIV<1,K>
0639 NEXT K                                                             NEXT K
0640 ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
0641 BEGIN CASE                                                         BEGIN CASE
0642 CASE ECD.RET.VALUE="END"                                           CASE ECD.RET.VALUE="END"
0643 GOTO GET.COST.CENTER                                            |  GOTO 1000
0644 CASE ECD.RET.VALUE # ""                                            CASE ECD.RET.VALUE # ""
0645 DIV.ID=CONO:ECD.RET.VALUE                                       |  MATREAD DIV.REC FROM DIVISION,CONO:ECD.RET.VALUE ELSE
0646 MATREAD DIV.REC FROM DIVISION,DIV.ID ELSE                       <  
0647 ERRMSG=ECD.RET.VALUE:" IS NOT ON FILE"                             ERRMSG=ECD.RET.VALUE:" IS NOT ON FILE"

0651 CASE 1                                                             CASE 1
0652 GOTO 1050                                                          GOTO 1050
0653 END CASE                                                           END CASE
0654 END CASE                                                           END CASE
0655 ECD.NUM=5;SCV.REC(5)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT       ECD.NUM=5;SCV.REC(5)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
0656                                                                 >  *     END
0657                                                                 >  * CSF 22145
0658 END ELSE                                                           END ELSE
0659 LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING DVFND ELSE                 LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING DVFND ELSE
0660 ERRMSG="Division/Department Mismatch"                              ERRMSG="Division/Department Mismatch"

0661 GOSUB 91000                                                        GOSUB 91000
0662 GOTO GET.COST.CENTER                                            |  GOTO 1000
0663 END                                                                END
0664 END                                                                END
0665 *                                                                  *
0666 1999*                                                              1999*
0667 RETURN                                                             RETURN
0668 *                                                                  *

0669 *****************                                               |  *---- EDIT USAGE TYPE
0670 EDIT.USAGE.TYPE:                                                <  
0671 *****************                                               <  
0672 *                                                                  *
0673                                                                 >  2000*
0674 ECD.NUM=10                                                         ECD.NUM=10
0675 BEGIN CASE                                                         BEGIN CASE

0684 DMT.TYPE=JOB.TYPE                                                  DMT.TYPE=JOB.TYPE
0685 CASE 1                                                             CASE 1
0686 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0687 IF ECD.RET.VALUE # "END" THEN DMT.TYPE=ECD.RET.VALUE               IF ECD.RET.VALUE # "END" THEN DMT.TYPE=ECD.RET.VALUE
0688 END CASE                                                           END CASE
0689 GOSUB GET.ENTRY.TYPE                                            |  GOSUB 600
0690 ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
0691 2001*                                                              2001*
0692 IF CO.SPOIL.FLG="Y" AND DMT.TYPE="S" THEN                          IF CO.SPOIL.FLG="Y" AND DMT.TYPE="S" THEN
0693 ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT

0694 IF ECD.RET.VALUE="END" THEN GOTO EDIT.USAGE.TYPE                |  IF ECD.RET.VALUE="END" THEN GOTO 2000
0695 READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:ECD.RET.VALUE EL     READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:ECD.RET.VALUE 
0696 ERRMSG="SPOILAGE CODE (":ECD.RET.VALUE:") NOT ON FILE"             ERRMSG="SPOILAGE CODE (":ECD.RET.VALUE:") NOT ON FILE"
0697 GOSUB 91000;GOTO 2001                                              GOSUB 91000;GOTO 2001
0698 END                                                                END
0699 DMT.SPOIL.CODE=ECD.RET.VALUE                                       DMT.SPOIL.CODE=ECD.RET.VALUE
0700 END ELSE                                                           END ELSE

0705 END                                                                END
0706 SCV.REC(25)<1>=SPOIL.CODE.DESC                                     SCV.REC(25)<1>=SPOIL.CODE.DESC
0707 ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
0708 RETURN                                                             RETURN
0709 *                                                                  *
0710 **************                                                  |  *---- GET DATE USED
0711 ENT.DATE.USED:                                                  <  
0712 **************                                                  <  
0713 *                                                                  *
0714                                                                 >  3000*

0715 ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
0716 *CSF 24551 v                                                       *CSF 24551 v
0717 *     IF ECD.RET.VALUE # "END" THEN DMT.DATE=ECD.RET.VALUE         *     IF ECD.RET.VALUE # "END" THEN DMT.DATE=ECD.RET.VALUE
0718 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
0719 DMT.DATE=ECD.RET.VALUE                                             DMT.DATE=ECD.RET.VALUE
0720                                                                 >  *T25468 v
0721 IF DMT.SEQ.NO = 'N' THEN                                           IF DMT.SEQ.NO = 'N' THEN
0722 DMT.USAGE.SEQ=ECD.RET.VALUE*100000 + TIME()                        DMT.USAGE.SEQ=ECD.RET.VALUE*100000 + TIME()
0723 END                                                                END
0724                                                                 >  *T25468^

0725 END                                                                END
0726                                                                 >  *CSF 24551^
0727 RETURN                                                             RETURN
0728                                                                 >  **
0729                                                                 >  **---- GET TIME USED
0730                                                                 >  **
0731                                                                 >  *3050 *
0732                                                                 >  *ECD.NUM=27;ECD.ACTION=4;CALL SCRN.EDIT

0733                                                                 >  *IF ECD.RET.VALUE # "END" THEN
0734                                                                 >  *TM=ICONV(ECD.RET.VALUE,"MTS")
0735                                                                 >  *IF NUM(TM) THEN
0736                                                                 >  *DMT.TIME=TM
0737                                                                 >  *SCV.REC(27)<1>=OCONV(DMT.TIME,"MTS")
0738                                                                 >  *ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
0739                                                                 >  *END ELSE

0740                                                                 >  *ERRMSG="Invalid Time. Try again! "
0741                                                                 >  *GOSUB 91000
0742                                                                 >  *GOTO 3050
0743                                                                 >  *END
0744                                                                 >  *END
0745                                                                 >  *RETURN
0746 *                                                                  *

0747 ***************                                                 |  *---- GET PRODUCT INFO
0748 ENT.PROD.INFO:                                                  <  
0749 ***************                                                 <  
0750 *                                                                  *
0751 SCV.REC(17)<1>=DMT.SERIAL                                       |  4000*
0752                                                                 >  IF BCI<3> = "Y"  OR BCI<4> ="Y" THEN
0753                                                                 >  SCV.REC(17)<1>=DMT.R.S.ID

0754 ECD.NUM=17                                                         ECD.NUM=17
0755 ECD.O.R="O"                                                        ECD.O.R="O"
0756 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0757 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0758 IF ECD.RET.VALUE="" THEN                                           IF ECD.RET.VALUE="" THEN
0759 SERIAL=""                                                       |  RSKI.ID=""
0760 MAT ISTK.REC=""                                                 |  MAT RSKI.REC=""
0761 END ELSE                                                           END ELSE
0762 ISTK.ID=CONO:ECD.RET.VALUE                                      |  MATREAD RSKI.REC FROM ROLL.SKID.INFO,CONO:ECD.RET.VALUE ELSE
0763 MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE                   |  ERRMSG="INVALID ROLL/SKID - ":ECD.RET.VALUE

0764 ERRMSG="INVALID SERIAL - ":ECD.RET.VALUE                        <  
0765 GOSUB 91000                                                        GOSUB 91000
0766 PMSG="DO YOU WISH TO ENTER NEW PRODUCT INFO <Y/RET>"               PMSG="DO YOU WISH TO ENTER NEW PRODUCT INFO <Y/RET>"
0767 X=0;Y=21;MAXL=3;TYP=1; O.R = "O"                                   X=0;Y=21;MAXL=3;TYP=1; O.R = "O"
0768 CALL EDIT.SUB                                                      CALL EDIT.SUB
0769 P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"                   P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
0770 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0771 IF VALUE="Y" THEN                                                  IF VALUE="Y" THEN
0772 MAT ISTK.REC=""                                                 |  *               IF XX = "Y" THEN
0773                                                                 >  MAT RSKI.REC=""
0774 GOTO 4050                                                          GOTO 4050
0775 END ELSE                                                           END ELSE
0776 GOTO ENT.PROD.INFO                                              |  GOTO 4000
0777 END                                                                END
0778 END                                                                END

0779 * T26497 v                                                      |  * T22154 v
0780 IF CO.INTR.WHSE # '' AND ISTK.WHSE = CO.INTR.WHSE THEN          |  IF RSKI.POST.DATE = '' THEN
0781 ERRMSG = 'CAN NOT USE SERIAL FROM INTER-DIVISIONAL WAREHOUSE'   |  ERRMSG = 'ROLL/SKID NOT RECEIVED' ; GOSUB 91000 ; GOTO 4000
0782 GOSUB 91000 ; GOTO ENT.PROD.INFO                                <  
0783 END                                                                END
0784 * T26497 ^                                                      |  * T22154 ^
0785 IF ISTK.POST.DATE = '' THEN                                     |  RSKI.ID=ECD.RET.VALUE

0786 ERRMSG = 'SERIAL NOT RECEIVED' ; GOSUB 91000 ; GOTO ENT.PROD.I  <  
0787 END                                                                END
0788 LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JPOS THEN                 <  
0789 RSVBLE=ISTK.RSVB.QTY+ISTK.JRSVD.QTY<1,JPOS>                     <  
0790 END ELSE                                                           END ELSE
0791 RSVBLE=ISTK.RSVB.QTY                                            |  MAT RSKI.REC=""
0792 END                                                                END

0793 IF RSVBLE=0 THEN                                                <  
0794 ERRMSG='NO QUANTITY AVAILABLE ON THE SERIAL';GOSUB 91000;GOTO   <  
0795 END                                                             <  
0796 SERIAL=ECD.RET.VALUE                                            <  
0797 END                                                             <  
0798 4050*                                                              4050*
0799 LOOP                                                               LOOP

0800 ON SPTR GOSUB ENT.PROD.ID,ENT.WHSE,ENT.LOC,ENT.SERIAL           |  ON SPTR GOSUB 4100,4200,4300,4400
0801 IF ECD.RET.VALUE="END" THEN                                        IF ECD.RET.VALUE="END" THEN
0802 SPTR=SPTR-1                                                        SPTR=SPTR-1
0803 END ELSE                                                           END ELSE
0804 SPTR=SPTR+1                                                        SPTR=SPTR+1
0805 END                                                                END
0806 WHILE SPTR >= 1 AND SPTR <= 4 DO REPEAT                         |  WHILE SPTR >= 1 AND SPTR <= 4 DO

0807                                                                 >  REPEAT
0808 RETURN                                                             RETURN
0809 *                                                                  *
0810 **************                                                  |  *---- GET PRODUCT ID
0811 ENT.PROD.ID:                                                    <  
0812 **************                                                  <  
0813 *                                                                  *

0814 IF ISTK.PROD # "" THEN                                          |  4100*
0815 ECD.RET.VALUE=ISTK.PROD                                         |  IF RSKI.INV.NO # "" THEN
0816 SCV.REC(13)<1>=ISTK.PROD                                        |  ECD.RET.VALUE=RSKI.INV.NO
0817                                                                 >  SCV.REC(13)<1>=RSKI.INV.NO
0818 ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
0819 ISTK.PROD=""                                                    |  RSKI.INV.NO=""
0820 END ELSE                                                           END ELSE

0821 MAT ISTK.REC=""                                                 |  MAT RSKI.REC=""
0822 ECD.NUM=13;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=13;ECD.ACTION=4;CALL SCRN.EDIT
0823 END                                                                END
0824 BEGIN CASE                                                         BEGIN CASE
0825 CASE ECD.RET.VALUE="END"                                           CASE ECD.RET.VALUE="END"
0826 GOTO 4199                                                          GOTO 4199
0827 CASE ECD.RET.VALUE=""                                              CASE ECD.RET.VALUE=""

0828 ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT
0829 IF ECD.RET.VALUE="" OR ECD.RET.VALUE="END" THEN GOTO ENT.PROD.  |  IF ECD.RET.VALUE="" OR ECD.RET.VALUE="END" THEN GOTO 4100
0830 GXR.XREF=INVENTORY.XREF                                            GXR.XREF=INVENTORY.XREF
0831 GXR.FILE=INVENTORY                                                 GXR.FILE=INVENTORY
0832 GXR.LOC=1                                                          GXR.LOC=1
0833 GXR.TOP.LINE="INVENTORY XREF SEARCH"                               GXR.TOP.LINE="INVENTORY XREF SEARCH"
0834 GXR.HEADING<1,1>="INVENTORY"                                       GXR.HEADING<1,1>="INVENTORY"
0835 GXR.HEADING<1,2>="FULL DESCRIPTION"                                GXR.HEADING<1,2>="FULL DESCRIPTION"

0844 GXR.LEN<1,2>=30                                                    GXR.LEN<1,2>=30
0845 GXR.CO=CONO                                                        GXR.CO=CONO
0846 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0847 IF GXR.ID="" THEN                                                  IF GXR.ID="" THEN
0848 SCV.REC(14)<1>=""                                                  SCV.REC(14)<1>=""
0849 ECD.ACTION=3;CALL SCRN.EDIT;GOTO ENT.PROD.ID                    |  ECD.ACTION=3;CALL SCRN.EDIT;GOTO 4100
0850 END ELSE                                                           END ELSE
0851 MATREAD INV.REC FROM INVENTORY,CONO:GXR.ID ELSE                    MATREAD INV.REC FROM INVENTORY,CONO:GXR.ID ELSE
0852 ERRMSG="INVENTORY ":GXR.ID:" IS MISSING"                           ERRMSG="INVENTORY ":GXR.ID:" IS MISSING"
0853 SCV.REC(14)<1>=""                                                  SCV.REC(14)<1>=""

0854 GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO ENT.PROD.ID        |  GOSUB 91000;ECD.ACTION=3;CALL SCRN.EDIT;GOTO 4100
0855 END                                                                END
0856 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE                  MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
0857 ERRMSG="CANNOT LOCATE PRODUCT LINE ":INV.LINE                      ERRMSG="CANNOT LOCATE PRODUCT LINE ":INV.LINE
0858 SCV.REC(14)<1> ="";GOSUB 91000                                     SCV.REC(14)<1> ="";GOSUB 91000
0859 ECD.ACTION=3;CALL SCRN.EDIT;GOTO ENT.PROD.ID                    |  ECD.ACTION=3;CALL SCRN.EDIT;GOTO 4100
0860 END                                                                END

0859 ECD.ACTION=3;CALL SCRN.EDIT;GOTO ENT.PROD.ID                    |  ECD.ACTION=3;CALL SCRN.EDIT;GOTO 4100
0860 END                                                                END
0861 IF CO.OPS = "Y" AND CATG.MAJ.LINE = "FNGD" THEN                    IF CO.OPS = "Y" AND CATG.MAJ.LINE = "FNGD" THEN
0862 ERRMSG = "Cannot utilize a Finished Goods product"                 ERRMSG = "Cannot utilize a Finished Goods product"
0863 SCV.REC(14)<1> =''; GOSUB 91000                                    SCV.REC(14)<1> =''; GOSUB 91000
0864 ECD.ACTION = 3; CALL SCRN.EDIT; GOTO ENT.PROD.ID                |  ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 4100
0865 END                                                                END
0866 IF DMT.PROD # "" AND GXR.ID # DMT.PROD THEN                        IF DMT.PROD # "" AND GXR.ID # DMT.PROD THEN
0867 DMT.SERIAL="";DMT.COST=""                                       |  DMT.R.S.ID="";DMT.COST=""
0868                                                                 >  *    T20629

0867 DMT.SERIAL="";DMT.COST=""                                       |  DMT.R.S.ID="";DMT.COST=""
0868                                                                 >  *    T20629
0869 DMT.WHSE=""; DMT.LOC=""                                            DMT.WHSE=""; DMT.LOC=""
0870 SCV.REC(15)<1>="";ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(15)<1>="";ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
0871 SCV.REC(16)<1>="";ECD.NUM=16;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(16)<1>="";ECD.NUM=16;ECD.ACTION=5;CALL SCRN.EDIT
0872                                                                 >  *
0873 SCV.REC(17)<1>="";ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(17)<1>="";ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT
0874 SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT
0875 SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
0876 SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT

0876 SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
0877 SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
0878 SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT
0879 END                                                                END
0880 DMT.PROD=GXR.ID                                                    DMT.PROD=GXR.ID
0881 GOSUB GET.INV.CNV                                               |  GOSUB 500
0882 SCV.REC(13)<1>=DMT.PROD                                            SCV.REC(13)<1>=DMT.PROD
0883 SCV.REC(14)<1>=INV.FULL.DESC                                       SCV.REC(14)<1>=INV.FULL.DESC
0884 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0885 END                                                                END

0885 END                                                                END
0886 CASE 1                                                             CASE 1
0887 MATREAD INV.REC FROM INVENTORY,CONO:ECD.RET.VALUE ELSE             MATREAD INV.REC FROM INVENTORY,CONO:ECD.RET.VALUE ELSE
0888 ERRMSG="CANNOT LOCATE INVENTORY ITEM - ":ECD.RET.VALUE             ERRMSG="CANNOT LOCATE INVENTORY ITEM - ":ECD.RET.VALUE
0889 GOSUB 91000                                                        GOSUB 91000
0890 GOTO ENT.PROD.ID                                                |  GOTO 4100
0891 END                                                                END
0892 IF DMT.PROD # "" AND ECD.RET.VALUE # DMT.PROD THEN                 IF DMT.PROD # "" AND ECD.RET.VALUE # DMT.PROD THEN
0893 DMT.SERIAL="";DMT.COST=""                                       |  DMT.R.S.ID="";DMT.COST=""
0894 SCV.REC(17)<1>=SERIAL;ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT    |  * DMT.ODIAM=0;DMT.NDIAM=0

0895                                                                 >  SCV.REC(17)<1>=RSKI.ID;ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDI
0896 SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(26)<1>="";ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT
0897 SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(19)<1>="";ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
0898 SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(18)<1>="";ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
0899 SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(27)<1>="";ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
0900 SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(22)<1>="";ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT
0901 END                                                                END

0902 DMT.PROD=ECD.RET.VALUE                                             DMT.PROD=ECD.RET.VALUE
0903                                                                 >  * FOR I=1 TO INV.REC.SIZE;INV.REC(I)=ECD.VALDAT.ITEM<I>;NEXT
0904 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE                  MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
0905 ERRMSG="CANNOT LOCATE PRODUCT LINE ":INV.LINE                      ERRMSG="CANNOT LOCATE PRODUCT LINE ":INV.LINE
0906 GOSUB 91000;GOTO ENT.PROD.ID                                    |  GOSUB 91000;GOTO 4100
0907 END                                                                END
0908 IF CO.OPS = "Y" AND CATG.MAJ.LINE = "FNGD" THEN                    IF CO.OPS = "Y" AND CATG.MAJ.LINE = "FNGD" THEN
0909 ERRMSG = "Cannot utilize a Finished Goods product"                 ERRMSG = "Cannot utilize a Finished Goods product"

0910 GOSUB 91000; GOTO ENT.PROD.ID                                   |  GOSUB 91000; GOTO 4100
0911 END                                                                END
0912 GOSUB GET.INV.CNV                                               |  GOSUB 500
0913 ECD.NUM=14;SCV.REC(14)<1>=INV.FULL.DESC;ECD.ACTION=5;CALL SCRN     ECD.NUM=14;SCV.REC(14)<1>=INV.FULL.DESC;ECD.ACTION=5;CALL SC
0914 END CASE                                                           END CASE
0915 *---CHECK CUSTOMER INV# AGAINST JOB INV#                           *---CHECK CUSTOMER INV# AGAINST JOB INV#
0916                                                                 >  4150*

0918 IF "X":INV.CUST # "X":JOB.CUST THEN                                IF "X":INV.CUST # "X":JOB.CUST THEN
0919 ERRMSG="CUSTOMER ":INV.CUST:" OWNS THIS INVENTORY"                 ERRMSG="CUSTOMER ":INV.CUST:" OWNS THIS INVENTORY"
0920 GOSUB 91000                                                        GOSUB 91000
0921 SCV.REC(13)<1>="";ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(13)<1>="";ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
0922 SCV.REC(14)<1>="";ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(14)<1>="";ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
0923 GOTO ENT.PROD.ID                                                |  GOTO 4100
0924 END                                                                END
0925 END                                                                END
0926 4199*                                                              4199*
0927 RETURN                                                             RETURN

0928 *                                                                  *
0929 ****************                                                |  *---- GET WAREHOUSE
0930 ENT.WHSE:                                                       <  
0931 ****************                                                <  
0932 *                                                                  *
0933                                                                 >  4200*
0934 SCV.REC(15)<1>=DMT.WHSE                                            SCV.REC(15)<1>=DMT.WHSE
0935 WCNT=COUNT(INV.WHSE.CODE,VM)+1                                     WCNT=COUNT(INV.WHSE.CODE,VM)+1

0943 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0944 SCV.REC(15)<1>=INV.WHSE.CODE;ECD.ACTION=5;CALL SCRN.EDIT           SCV.REC(15)<1>=INV.WHSE.CODE;ECD.ACTION=5;CALL SCRN.EDIT
0945 ECD.RET.VALUE=INV.WHSE.CODE                                        ECD.RET.VALUE=INV.WHSE.CODE
0946 WFND=1                                                             WFND=1
0947 CASE 1                                                             CASE 1
0948 IF ISTK.WHSE # "" THEN                                          |  IF RSKI.WHSE # "" THEN
0949 ECD.RET.VALUE=ISTK.WHSE                                         |  ECD.RET.VALUE=RSKI.WHSE
0950 SCV.REC(15)<1>=ISTK.WHSE                                        |  SCV.REC(15)<1>=RSKI.WHSE
0951 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0952 ISTK.WHSE = '';*T21673 *C43909                                  |  RKSI.WHSE = '';*T21673

0953 END ELSE                                                           END ELSE
0954 MAT ISTK.REC=""                                                 |  MAT RSKI.REC=""
0955 KK=1                                                               KK=1
0956 ECD.HMSG<1,1,KK>="Warehouse - ":INV.WHSE.CODE<1,1>                 ECD.HMSG<1,1,KK>="Warehouse - ":INV.WHSE.CODE<1,1>
0957 FOR K=2 TO WCNT                                                    FOR K=2 TO WCNT
0958 IF LEN(ECD.HMSG<1,1,KK>) > 65 THEN                                 IF LEN(ECD.HMSG<1,1,KK>) > 65 THEN
0959 KK=KK+1                                                            KK=KK+1
0960 ECD.HMSG<1,1,KK>="Warehouse - ":INV.WHSE.CODE<1,K>                 ECD.HMSG<1,1,KK>="Warehouse - ":INV.WHSE.CODE<1,K>

0965 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0966 IF ECD.RET.VALUE="END" THEN WFND=0;GOTO 4299                       IF ECD.RET.VALUE="END" THEN WFND=0;GOTO 4299
0967 END                                                                END
0968 LOCATE ECD.RET.VALUE IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE       LOCATE ECD.RET.VALUE IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE
0969 ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Produc     ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Prod
0970 GOSUB 91000;GOTO ENT.WHSE                                       |  GOSUB 91000;GOTO 4200
0971 END                                                                END
0972 END CASE                                                           END CASE
0973 *                                                                  *
0974 * T26497 v                                                      |  MATREAD IWH.REC FROM INV.WHSE,CONO:DMT.PROD:"!":ECD.RET.VALU

0975 IF CO.INTR.WHSE # '' AND ECD.RET.VALUE = CO.INTR.WHSE THEN      <  
0976 ERRMSG = 'Cannot use an Inter-Divisional Warehouse'             <  
0977 GOSUB 91000                                                     <  
0978 IF WCNT=1 THEN                                                  <  
0979 WFND=0;ECD.RET.VALUE="END";GOTO 4299                            <  
0980 END ELSE                                                        <  
0981 GOTO ENT.WHSE                                                   <  

0982 END                                                             <  
0983 END                                                             <  
0984 * T26497 ^                                                      <  
0985 IWH.ID=CONO:DMT.PROD:"!":ECD.RET.VALUE                          <  
0986 MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE                       <  
0987 ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Produc     ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Prod
0988 GOSUB 91000                                                        GOSUB 91000

0987 ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Produc     ERRMSG="Cannot Locate Warehouse (":ECD.RET.VALUE:") For Prod
0988 GOSUB 91000                                                        GOSUB 91000
0989 IF WCNT=1 THEN                                                     IF WCNT=1 THEN
0990 WFND=0;ECD.RET.VALUE="END";GOTO 4299                               WFND=0;ECD.RET.VALUE="END";GOTO 4299
0991 END ELSE                                                           END ELSE
0992 GOTO ENT.WHSE                                                   |  GOTO 4200
0993 END                                                                END
0994 END                                                                END
0995 SCV.REC(16)<1>=ISTK.LOC                                         |  GOSUB 9000
0996 ECD.NUM=16; ECD.ACTION=5; CALL SCRN.EDIT                        <  

0997 GOSUB CHECK.MATL.RESV                                           <  
0998 IF CATG.TRACK.QOH="Y" THEN                                         IF CATG.TRACK.QOH="Y" THEN
0999 IF IWH.ON.HAND+RESV.QTY-IWH.RESV < 1 THEN                          IF IWH.ON.HAND+RESV.QTY-IWH.RESV < 1 THEN
1000 ERRMSG="No Quantity Available For Warehouse - ":ECD.RET.VALUE   |  ERRMSG="No Quantity Avaliable For Warehouse - ":ECD.RET.VALU
1001                                                                 >  * CSF 20091 (LMR) COMMENT OUT RS TEST BELOW
1002                                                                 >  *           IF RSKI.WHSE = '' THEN
1003 GOSUB 91000                                                        GOSUB 91000

1004                                                                 >  *           END ELSE
1005                                                                 >  *              ERRMSG = BEL:'Roll/skid not in warehouse - ':
1006                                                                 >  *              GOTO 93000
1007                                                                 >  *           END
1008 IF WCNT=1 THEN                                                     IF WCNT=1 THEN
1009 WFND=0;ECD.RET.VALUE="END"                                      |  WFND=0;ECD.RET.VALUE="END";GOTO 4299
1010 GOTO 4299                                                       <  

1011 END ELSE                                                           END ELSE
1012 *T27897      GOTO ENT.WHSE                                      |  GOTO 4200
1013 GOTO ENT.SERIAL ;*T27897                                        <  
1014 END                                                                END
1015 END                                                                END
1016 END ELSE                                                           END ELSE
1017 IF IWH.LOC="" THEN                                                 IF IWH.LOC="" THEN
1018 WHSE.ID=CONO:ECD.RET.VALUE                                      |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:ECD.RET.VALUE ELSE WHS.

1019 MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID ELSE WHS.LOC=''         <  
1020 IWH.LOC=WHS.LOC<1,1>                                               IWH.LOC=WHS.LOC<1,1>
1021 END                                                                END
1022 END                                                                END
1023 DMT.WHSE=ECD.RET.VALUE                                             DMT.WHSE=ECD.RET.VALUE
1024 WHSE.ID=CONO:ECD.RET.VALUE                                      |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:ECD.RET.VALUE ELSE MAT 
1025 MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID ELSE MAT WHSE.REC=''    <  

1031 SCV.REC(15)='';ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT              SCV.REC(15)='';ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
1032 DMT.WHSE='';DMT.LOC='';DMT.PROD=''                                 DMT.WHSE='';DMT.LOC='';DMT.PROD=''
1033 ECD.RET.VALUE = "END"                                              ECD.RET.VALUE = "END"
1034 GOTO 4299                                                          GOTO 4299
1035 END                                                                END
1036 * C40373 v                                                      |  RSKI.WHSE = DMT.WHSE ;*T21673
1037 ERRMSG = ''                                                     <  
1038 DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)                 <  
1039 BEGIN CASE                                                      <  
1040 CASE DIV.POS<1,1>=''                                            <  

1041 DIV.POS=DIV.POS<1,2>                                            <  
1042 CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"JC")            <  
1043 IF CUR.PERIOD<1,1>='' THEN                                      <  
1044 CUR.PERIOD=CUR.PERIOD<1,2>                                      <  
1045 END ELSE                                                        <  
1046 IF CUR.PERIOD<1,2>='-2' THEN                                    <  
1047 ERRMSG=CUR.PERIOD<1,2>                                          <  

1048 GOSUB 93000                                                     <  
1049 END                                                             <  
1050 END                                                             <  
1051 CASE DIV.POS<1,1>='-1'                                          <  
1052 ERRMSG=DIV.POS<1,2>                                             <  
1053 GOSUB 91000                                                     <  
1054 CASE DIV.POS<1,1>='-2'                                          <  

1055 ERRMSG=DIV.POS<1,2>                                             <  
1056 GOSUB 93000                                                     <  
1057 END CASE                                                        <  
1058 IF ERRMSG # '' THEN                                             <  
1059 SCV.REC(13)='';ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT           <  
1060 SCV.REC(14)='';ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT           <  
1061 SCV.REC(15)='';ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT           <  

1062 DMT.WHSE='';DMT.LOC='';DMT.PROD=''                              <  
1063 ECD.RET.VALUE = "END"                                           <  
1064 GOTO 4299                                                       <  
1065 END                                                             <  
1066 * C40373 ^                                                      <  
1067 ISTK.WHSE = DMT.WHSE ;*T21673                                   <  
1068 4299*                                                              4299*

1069 RETURN                                                             RETURN
1070 *                                                                  *
1071 **************                                                  |  *---- GET WAREHOUSE LOCATION
1072 ENT.LOC:                                                        <  
1073 ***************                                                 <  
1074 *                                                                  *
1075                                                                 >  4300*
1076 SCV.REC(16)<1>=DMT.LOC                                             SCV.REC(16)<1>=DMT.LOC
1077 ECD.NUM=16                                                         ECD.NUM=16

1085 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
1086 SCV.REC(16)<1>=IWH.LOC;ECD.ACTION=5;CALL SCRN.EDIT                 SCV.REC(16)<1>=IWH.LOC;ECD.ACTION=5;CALL SCRN.EDIT
1087 ECD.RET.VALUE=IWH.LOC                                              ECD.RET.VALUE=IWH.LOC
1088 LFND=1                                                             LFND=1
1089 CASE 1                                                             CASE 1
1090 IF ISTK.LOC # "" THEN                                           |  IF RSKI.LOC # "" THEN
1091 ECD.RET.VALUE=ISTK.LOC                                          |  ECD.RET.VALUE=RSKI.LOC
1092 SCV.REC(16)<1>=ISTK.LOC                                         |  SCV.REC(16)<1>=RSKI.LOC
1093 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
1094 ISTK.LOC='' ;*T21673                                            |  RSKI.LOC='' ;*T21673

1095 END ELSE                                                           END ELSE
1096 MAT ISTK.REC=""                                                 |  MAT RSKI.REC=""
1097 KK=1                                                               KK=1
1098 ECD.HMSG<1,1,KK>="Location - ":IWH.LOC<1,1>                        ECD.HMSG<1,1,KK>="Location - ":IWH.LOC<1,1>
1099 FOR K=2 TO LCNT                                                    FOR K=2 TO LCNT
1100 IF LEN(ECD.HMSG<1,1,KK>) > 65 THEN                                 IF LEN(ECD.HMSG<1,1,KK>) > 65 THEN
1101 KK=KK+1                                                            KK=KK+1
1102 ECD.HMSG<1,1,KK>="Location - ":IWH.LOC<1,K>                        ECD.HMSG<1,1,KK>="Location - ":IWH.LOC<1,K>

1107 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1108 IF ECD.RET.VALUE="END" THEN LFND=0;GOTO 4399                       IF ECD.RET.VALUE="END" THEN LFND=0;GOTO 4399
1109 END                                                                END
1110 LOCATE ECD.RET.VALUE IN IWH.LOC<1>,1 SETTING LFND ELSE             LOCATE ECD.RET.VALUE IN IWH.LOC<1>,1 SETTING LFND ELSE
1111 ERRMSG="Cannot locate location (":ECD.RET.VALUE:") for warehou     ERRMSG="Cannot locate location (":ECD.RET.VALUE:") for wareh
1112 GOSUB 91000; ISTK.LOC='';GOTO ENT.LOC                           |  GOSUB 91000; RSKI.LOC='';GOTO 4300
1113 END                                                                END
1114 END CASE                                                           END CASE
1115 *                                                                  *
1116 IWLO.ID=CONO:DMT.PROD:"!":DMT.WHSE:"!":ECD.RET.VALUE            |  MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO:DMT.PROD:"!":DMT.WHS

1117 MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE                 <  
1118 IF CATG.TRACK.QOH="Y" THEN                                         IF CATG.TRACK.QOH="Y" THEN
1119 ERRMSG="Cannot locate INV.WHSE.LOC record (":DMT.PROD:"!":DMT.     ERRMSG="Cannot locate INV.WHSE.LOC record (":DMT.PROD:"!":DM
1120 GOSUB 91000; ISTK.LOC='';GOTO ENT.LOC                           |  GOSUB 91000; RSKI.LOC='';GOTO 4300
1121 END                                                                END
1122 MAT IWLO.REC=""                                                    MAT IWLO.REC=""
1123 IF INV.PAP.TYPE # "REGULAR" AND IWLO.SERIAL ="" THEN            |  IF INV.PAP.TYPE # "REGULAR" AND IWLO.R.S.ID ="" THEN

1124 IWLO.SERIAL<1,1>=IWH.LOC<1,1>                                   |  IWLO.R.S.ID<1,1>=IWH.LOC<1,1>
1125 END                                                                END
1126 END                                                                END
1127 IF CATG.TRACK.QOH="Y" AND IWLO.LOC.ON.HAND < 1 THEN                IF CATG.TRACK.QOH="Y" AND IWLO.LOC.ON.HAND < 1 THEN
1128 ERRMSG="No Quantity Available For Location - ":IWH.LOC<1,LFND>  |  ERRMSG="No Quantity Avaliable For Location - ":IWH.LOC<1,LFN
1129 GOSUB 91000                                                        GOSUB 91000
1130 IF LCNT=1 THEN                                                     IF LCNT=1 THEN

1131 LFND=0;ECD.RET.VALUE="END";GOTO 4399                               LFND=0;ECD.RET.VALUE="END";GOTO 4399
1132 END ELSE                                                           END ELSE
1133 ISTK.LOC=''                                                     |  RSKI.LOC=''
1134 GOTO ENT.LOC                                                    |  GOTO 4300
1135 END                                                                END
1136 END                                                                END
1137 DMT.LOC=ECD.RET.VALUE                                              DMT.LOC=ECD.RET.VALUE
1138 ISTK.LOC = DMT.LOC ;* T21673                                    |  RSKI.LOC = DMT.LOC ;* T21673
1139 4399*                                                              4399*

1140 RETURN                                                             RETURN
1141 *                                                                  *
1142 *************                                                   |  *---- GET ROLL/SKID ID
1143 ENT.SERIAL:                                                     <  
1144 *************                                                   <  
1145 *                                                                  *
1146 IF CATG.TRK.LVL='S' THEN                                        |  4400*
1147 ECD.NUM=17                                                         ECD.NUM=17
1148 RCNT=COUNT(IWLO.SERIAL,VM)+1                                    |  RCNT=COUNT(IWLO.R.S.ID,VM)+1

1149 BEGIN CASE                                                         BEGIN CASE
1150 CASE IWLO.SERIAL=""                                             |  CASE IWLO.R.S.ID=""
1151 RFND=0;GOTO 4499                                                   RFND=0;GOTO 4499
1152 CASE RCNT=1                                                        CASE RCNT=1
1153 RFND=1; ISTK.ID=CONO:IWLO.SERIAL<1,1>                           |  RFND=1;GOTO 4450
1154 GOTO 4450                                                       <  
1155 CASE 1                                                             CASE 1
1156 KK=1                                                               KK=1

1157 RSI.HMSG<1,1,KK>="Serial - ":IWLO.SERIAL<1,1>                   |  RSI.HMSG<1,1,KK>="Roll/Skid - ":IWLO.R.S.ID<1,1>
1158 FOR K=2 TO RCNT                                                    FOR K=2 TO RCNT
1159 IF LEN(RSI.HMSG<1,1,KK>) > 65 THEN                                 IF LEN(RSI.HMSG<1,1,KK>) > 65 THEN
1160 KK=KK+1                                                            KK=KK+1
1161 RSI.HMSG<1,1,KK>="Serial - ":IWLO.SERIAL<1,K>                   |  RSI.HMSG<1,1,KK>="Roll/Skid - ":IWLO.R.S.ID<1,K>
1162 END ELSE                                                           END ELSE
1163 RSI.HMSG<1,1,KK>=RSI.HMSG<1,1,KK>:", ":IWLO.SERIAL<1,K>         |  RSI.HMSG<1,1,KK>=RSI.HMSG<1,1,KK>:", ":IWLO.R.S.ID<1,K>

1162 END ELSE                                                           END ELSE
1163 RSI.HMSG<1,1,KK>=RSI.HMSG<1,1,KK>:", ":IWLO.SERIAL<1,K>         |  RSI.HMSG<1,1,KK>=RSI.HMSG<1,1,KK>:", ":IWLO.R.S.ID<1,K>
1164 END                                                                END
1165 NEXT K                                                             NEXT K
1166 END CASE                                                           END CASE
1167 IF SERIAL # "" THEN                                             |  IF RSKI.ID # "" THEN
1168 ECD.RET.VALUE=SERIAL                                            |  ECD.RET.VALUE=RSKI.ID
1169 SCV.REC(15)<1>=ISTK.WHSE                                        |  SCV.REC(15)<1>=RSKI.WHSE
1170 DMT.WHSE = ISTK.WHSE                                            |  DMT.WHSE = RSKI.WHSE
1171 ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT

1172 SERIAL=""                                                       |  RSKI.ID=""
1173 END ELSE                                                           END ELSE
1174 MAT ISTK.REC=""                                                 |  MAT RSKI.REC=""
1175 ECD.HMSG=RSI.HMSG                                                  ECD.HMSG=RSI.HMSG
1176 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1177 END                                                                END
1178 IF ECD.RET.VALUE="END" THEN RFND=0;GOTO 4499                       IF ECD.RET.VALUE="END" THEN RFND=0;GOTO 4499

1179 LOCATE ECD.RET.VALUE IN IWLO.SERIAL<1>,1 SETTING RFND THEN      |  LOCATE ECD.RET.VALUE IN IWLO.R.S.ID<1>,1 SETTING RFND ELSE
1180 ISTK.ID=CONO:ECD.RET.VALUE                                      |  ERRMSG="Cannot Locate Roll/Skid (":ECD.RET.VALUE:") For Loca
1181 END ELSE                                                        |  GOSUB 91000;GOTO 4400
1182 ERRMSG="Cannot Locate Serial (":ECD.RET.VALUE:") For Location   <  
1183 GOSUB 91000;GOTO ENT.SERIAL                                     <  
1184 END                                                                END
1185 4450*                                                              4450*

1186 MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE MAT ISTK.REC=''   |  IF CATG.TRACK.QOH="Y" AND IWLO.CURR.WT<1,RFND> < 1 THEN
1187 IF CATG.RSV.SERIAL='Y' THEN                                     |  ERRMSG="No Quantity Avaliable For Roll/Skid - ":IWLO.R.S.ID<
1188 LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JUNK ELSE                 <  
1189 ERRMSG='WARNING, This serial has not been reserved for this jo  <  
1190 GOSUB 91000                                                        GOSUB 91000
1191 END                                                             <  
1192 END                                                             <  

1193 IF CATG.TRACK.QOH='Y' AND ISTK.CUR.QTY<1 THEN                   <  
1194 ERRMSG="No Quantity Available For Serial - ":IWLO.SERIAL<1,RFN  <  
1195 GOSUB 91000                                                     <  
1196 IF RCNT=1 THEN                                                     IF RCNT=1 THEN
1197 RFND=0;ECD.RET.VALUE="END";GOTO 4499                               RFND=0;ECD.RET.VALUE="END";GOTO 4499
1198 END ELSE                                                           END ELSE
1199 GOTO ENT.SERIAL                                                 |  GOTO 4400

1200 END                                                                END
1201 END                                                                END
1202 DMT.SERIAL=IWLO.SERIAL<1,RFND>                                  |  DMT.R.S.ID=IWLO.R.S.ID<1,RFND>
1203 4499*                                                              4499*
1204 SCV.REC(17)<1>=DMT.SERIAL                                       |  SCV.REC(17)<1>=DMT.R.S.ID
1205 ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=17;ECD.ACTION=5;CALL SCRN.EDIT
1206 END ELSE                                                        <  
1207 RFND=0                                                          <  
1208 END                                                             <  

1209 RETURN                                                             RETURN
1210 *                                                                  *
1211 *************                                                   |  *---- GET QUANTITY TYPE
1212 ENT.QTY.TYPE:                                                   <  
1213 *************                                                   <  
1214 *                                                                  *
1215                                                                 >  5000*
1216 BEGIN CASE                                                         BEGIN CASE
1217 CASE INV.PAP.TYPE="ROLL"                                           CASE INV.PAP.TYPE="ROLL"

1217 CASE INV.PAP.TYPE="ROLL"                                           CASE INV.PAP.TYPE="ROLL"
1218 ECD.HMSG="WU,WR,DR"                                                ECD.HMSG="WU,WR,DR"
1219 ECD.VALDAT="WU,WR,DR"                                              ECD.VALDAT="WU,WR,DR"
1220 ECD.O.R="O";ECD.DEFAULT="WU"                                       ECD.O.R="O";ECD.DEFAULT="WU"
1221 CASE INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"                  CASE INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"
1222                                                                 >  *CSF25749 LROLL PRODUCT IS  USED IN DIAMETER REMAINING AND S
1223                                                                 >  *         ECD.HMSG="SU,DR"
1224                                                                 >  *         ECD.HMSG="SU,SR"
1225 ECD.HMSG="SU,DR,SR"                                                ECD.HMSG="SU,DR,SR"
1226                                                                 >  *         ECD.VALDAT="SU,DR"

1227                                                                 >  *         ECD.VALDAT="SU,SR"
1228 ECD.VALDAT="SU,DR,SR"                                              ECD.VALDAT="SU,DR,SR"
1229                                                                 >  *CSF26875 ECD.O.R="O";ECD.DEFAULT="DR"
1230 ECD.O.R="O";ECD.DEFAULT="SU"                                       ECD.O.R="O";ECD.DEFAULT="SU"
1231                                                                 >  *** ^
1232 CASE INV.PAP.TYPE="SHEET"                                          CASE INV.PAP.TYPE="SHEET"
1233 ECD.HMSG="SU,SR"                                                   ECD.HMSG="SU,SR"

1260 CASE 1                                                             CASE 1
1261 QDESC= INV.UNIT<1,2>                                               QDESC= INV.UNIT<1,2>
1262 END CASE                                                           END CASE
1263 SCV.REC(18)<1>=QDESC                                               SCV.REC(18)<1>=QDESC
1264 ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
1265 IF DMT.QTY#'' THEN                                              |  *
1266 *T28740 v                                                       |  *---- GET QUANTITY
1267 * ECD.DEFAULT=DMT.STK.QTY                                       |  *
1268 IF CATG.TRACK.QOH = 'Y' THEN                                    |  * BLD.SCRN(21)<1,6>=QTY.SCALER
1269 IF CATG.TRK.LVL # 'S' THEN                                      |  *CSF 23733 REMOVE * ON FOLLOWING 3 LINES 8/30/95 (LMR) v

1270 IF DMT.QTY > IWLO.LOC.ON.HAND THEN DMT.QTY = IWLO.LOC.ON.HAND   |  IF IWLO.R.S.ID # "" AND CATG.R.S.ID # "Y" THEN
1271                                                                 >  ECD.DEFAULT=OCONV(INT(((IWLO.CURR.WT<1,RFND>/ICR.DV1)*ICR.MT
1272 END                                                                END
1273 END                                                             |  * CSF 23733 ^
1274 ECD.DEFAULT = CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,".5","1")    <  
1275 *T28740 ^                                                       <  
1276 ECD.DEFAULT=OCONV(ECD.DEFAULT,ICR.CNV)                          <  

1277 SCV.REC(19)<1>=ECD.DEFAULT                                      <  
1278 END ELSE                                                        <  
1279 IF IWLO.SERIAL#"" AND CATG.TRK.LVL='S' THEN                     <  
1280 BEGIN CASE                                                         BEGIN CASE
1281 CASE DMT.RS.QTYPE="WU"                                          |  CASE DMT.RS.QTYPE[1,1]="W" OR DMT.RS.QTYPE[1,1]="D" OR QTY.S
1282 LOCATE JOB.NO IN ISTK.JOB<1> SETTING JPOS THEN                  <  
1283 ECD.DEFAULT=CALC.STK.QTY(ISTK.JRSVD.QTY<1,JPOS>,MAT INV.CNV.RE  <  

1284 END ELSE                                                        <  
1285 ECD.DEFAULT=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'','')    <  
1286 END                                                             <  
1287 CASE DMT.RS.QTYPE='WR'                                          <  
1288 ECD.DEFAULT=0                                                   <  
1289 CASE 1                                                          <  
1290 ECD.DEFAULT=0                                                   <  

1291 END CASE                                                        <  
1292 ECD.DEFAULT=OCONV(ECD.DEFAULT,ICR.CNV)                          <  
1293 SCV.REC(19)<1>=ECD.DEFAULT                                      <  
1294 END                                                             <  
1295 END                                                             <  
1296 BEGIN CASE                                                      <  
1297 CASE DMT.RS.QTYPE[1,1]="W" OR DMT.RS.QTYPE[1,1]="D" OR ICR.SCA  <  

1296 BEGIN CASE                                                      <  
1297 CASE DMT.RS.QTYPE[1,1]="W" OR DMT.RS.QTYPE[1,1]="D" OR ICR.SCA  <  
1298 ECD.PATRN="0N,0N.1N,0N.2N"                                         ECD.PATRN="0N,0N.1N,0N.2N"
1299 ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
1300 IF ECD.RET.VALUE="END" THEN GOTO 5099                              IF ECD.RET.VALUE="END" THEN GOTO 5099
1301                                                                 >  *T22154 v            ECD.RET.VALUE=ECD.RET.VALUE*100
1302 ECD.RET.VALUE = ICONV(ECD.RET.VALUE,'MD2')                         ECD.RET.VALUE = ICONV(ECD.RET.VALUE,'MD2')
1303                                                                 >  *T22154 ^
1304 CASE 1                                                             CASE 1
1305 ECD.PATRN="0N"                                                     ECD.PATRN="0N"

1304 CASE 1                                                             CASE 1
1305 ECD.PATRN="0N"                                                     ECD.PATRN="0N"
1306 ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
1307 IF ECD.RET.VALUE="END" THEN GOTO 5099                              IF ECD.RET.VALUE="END" THEN GOTO 5099
1308 ECD.PATRN="0N"                                                     ECD.PATRN="0N"
1309                                                                 >  * LMR 12/14/93
1310 IF ICR.CNV = "MD2" THEN ECD.RET.VALUE = ECD.RET.VALUE * 100        IF ICR.CNV = "MD2" THEN ECD.RET.VALUE = ECD.RET.VALUE * 100
1311                                                                 >  *
1312 END CASE                                                           END CASE
1313 IF ECD.RET.VALUE > 9999999999 THEN ERRMSG = "*** OUT OF RANGE   |  IF ECD.RET.VALUE > 9999999999 THEN ERRMSG = "*** OUT OF RANG

1312 END CASE                                                           END CASE
1313 IF ECD.RET.VALUE > 9999999999 THEN ERRMSG = "*** OUT OF RANGE   |  IF ECD.RET.VALUE > 9999999999 THEN ERRMSG = "*** OUT OF RANG
1314 IF CATG.TRACK.QOH # "Y" THEN GOTO 5050                             IF CATG.TRACK.QOH # "Y" THEN GOTO 5050
1315 IF ECD.RET.VALUE = 0 AND DMT.RS.QTYPE[2,1] # "R" THEN              IF ECD.RET.VALUE = 0 AND DMT.RS.QTYPE[2,1] # "R" THEN
1316 ERRMSG="Invalid quantity for specified quantity type! "            ERRMSG="Invalid quantity for specified quantity type! "
1317 GOSUB 91000;GOTO ENT.QTY.TYPE                                   |  GOSUB 91000;GOTO 5000
1318 END                                                                END
1319 WHS.AVAIL=(IWH.ON.HAND+RESV.QTY-IWH.RESV)                       |  WHS.AVAIL=INT((((IWH.ON.HAND+RESV.QTY-IWH.RESV)/ICR.DV1)*ICR
1320 WHS.AVAIL=CALC.STK.QTY(WHS.AVAIL,MAT INV.CNV.REC,'.5','')       <  
1321 IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VALU     IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VA

1322 ERRMSG="Maximum Quantity Available For Warehouse - ":OCONV(WHS     ERRMSG="Maximum Quantity Available For Warehouse - ":OCONV(W
1323 GOSUB 91000;GOTO ENT.QTY.TYPE                                   |  GOSUB 91000;GOTO 5000
1324 END                                                                END
1325 LOC.AVAIL=CALC.STK.QTY(IWLO.LOC.ON.HAND,MAT INV.CNV.REC,'.5','  |  LOC.AVAIL=INT(((IWLO.LOC.ON.HAND/ICR.DV1)*ICR.MT1)/ICR.DV2+0
1326 IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VALU     IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VA
1327 ERRMSG="Maximum Quantity Available For Location - ":OCONV(LOC.     ERRMSG="Maximum Quantity Available For Location - ":OCONV(LO
1328 GOSUB 91000;GOTO ENT.QTY.TYPE                                   |  GOSUB 91000;GOTO 5000
1329 END                                                                END

1330 IF RFND THEN                                                       IF RFND THEN
1331 *         R.S.AVAIL=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,  |  R.S.AVAIL=INT(((IWLO.CURR.WT<1,RFND>/ICR.DV1)*ICR.MT1)/ICR.D
1332 IF CATG.RSV.SERIAL='Y' THEN                                     <  
1333 JOB.NO=JOB.ID[4,99]                                             <  
1334 LOCATE JOB.NO IN ISTK.JOB<1> SETTING JPOS THEN                  <  
1335 R.S.AVAIL=ISTK.RSVB.QTY + ISTK.JRSVD.QTY<1,JPOS>                <  
1336 END ELSE                                                           END ELSE
1337 R.S.AVAIL=ISTK.RSVB.QTY                                         <  

1338 END                                                             <  
1339 END ELSE                                                        <  
1340 R.S.AVAIL=ISTK.RSVB.QTY                                         <  
1341 END                                                             <  
1342 R.S.AVAIL=CALC.STK.QTY(R.S.AVAIL,MAT INV.CNV.REC,'.5','')       <  
1343 END ELSE                                                        <  
1344 R.S.AVAIL=ECD.RET.VALUE                                            R.S.AVAIL=ECD.RET.VALUE

1345 END                                                                END
1346 IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VALU     IF (DMT.RS.QTYPE="" OR DMT.RS.QTYPE[2,1]="U") AND ECD.RET.VA
1347 ERRMSG="Maximum Quantity Available For Serial - ":OCONV(R.S.AV  |  ERRMSG="Maximum Quantity Available For Roll/Skid - ":OCONV(R
1348 GOSUB 91000;GOTO ENT.QTY.TYPE                                   |  GOSUB 91000;GOTO 5000
1349 END                                                                END
1350 5050*                                                              5050*
1351 BEGIN CASE                                                         BEGIN CASE
1352 CASE DMT.RS.QTYPE="DR"                                             CASE DMT.RS.QTYPE="DR"
1353 DMT.QTY=ECD.RET.VALUE*10                                           DMT.QTY=ECD.RET.VALUE*10

1354 DMT.STK.QTY=""                                                  |  DMT.SHEET=""
1355 SCV.REC(19)<1>= OCONV(ECD.RET.VALUE,"MD2")                         SCV.REC(19)<1>= OCONV(ECD.RET.VALUE,"MD2")
1356 CASE DMT.RS.QTYPE[2,1]="R"                                         CASE DMT.RS.QTYPE[2,1]="R"
1357 *    DMT.QTY=INT(((ECD.RET.VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2+0.9  |  DMT.QTY=INT(((ECD.RET.VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2+0.99)
1358 DMT.QTY=CALC.COST.QTY(ECD.RET.VALUE,MAT INV.CNV.REC,'.99','')   |  DMT.SHEET=INT(((DMT.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+0.99)
1359 *    DMT.STK.QTY=INT(((DMT.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+0.99)  |  SCV.REC(19)<1>= OCONV(DMT.SHEET,ICR.CNV)
1360 DMT.STK.QTY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'.99','')      <  

1361 SCV.REC(19)<1>= OCONV(DMT.STK.QTY,ICR.CNV)                      <  
1362 CASE 1                                                             CASE 1
1363 DMT.QTY=CALC.COST.QTY(ECD.RET.VALUE,MAT INV.CNV.REC,'.5','')    |  DMT.QTY=INT(((ECD.RET.VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
1364 DMT.STK.QTY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'.5','')       |  DMT.SHEET=INT(((DMT.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+0.5)
1365 SCV.REC(19)<1>= OCONV(DMT.STK.QTY,ICR.CNV)                      |  SCV.REC(19)<1>= OCONV(DMT.SHEET,ICR.CNV)
1366 END CASE                                                           END CASE
1367 ECD.NUM=19;ECD.ACTION =5;CALL SCRN.EDIT                            ECD.NUM=19;ECD.ACTION =5;CALL SCRN.EDIT

1368                                                                 >  * IF INV.PAP.TYPE="ROLL" THEN
1369                                                                 >  * IF IWLO.CURR.DIAM<1,RFND>+0=0 THEN
1370                                                                 >  * IF DMT.ODIAM+0=0 THEN
1371                                                                 >  * ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT
1372                                                                 >  * IF ECD.RET.VALUE # "END" THEN DMT.ODIAM=ECD.RET.VALUE
1373                                                                 >  * END
1374                                                                 >  * END ELSE

1375                                                                 >  * DMT.ODIAM=IWLO.CURR.DIAM<1,RFND>
1376                                                                 >  * END
1377                                                                 >  * ECD.NUM=20;SCV.REC(20)<1>=DMT.ODIAM;ECD.ACTION=5;CALL SCRN
1378                                                                 >  * ECD.DEFAULT=IWLO.CURR.DIAM<1,RFND>
1379                                                                 >  * ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
1380                                                                 >  * BEGIN CASE
1381                                                                 >  * CASE DMT.ODIAM < 0

1382                                                                 >  * ECD.MAXV=0
1383                                                                 >  * ECD.MINV=DMT.ODIAM
1384                                                                 >  * CASE DMT.ODIAM > 0
1385                                                                 >  * ECD.MINV=0
1386                                                                 >  * ECD.MAXV=DMT.ODIAM
1387                                                                 >  * CASE DMT.ODIAM+0=0
1388                                                                 >  * ECD.VALDAT=0

1389                                                                 >  * END CASE
1390                                                                 >  * IF ECD.RET.VALUE # "END" THEN DMT.NDIAM=ECD.RET.VALUE
1391                                                                 >  * END
1392 5099*                                                              5099*
1393 RETURN                                                             RETURN
1394 *                                                                  *
1395 **************                                                  |  *---- GET TIME USED

1396 ENT.TIME.USED:                                                  <  
1397 **************                                                  <  
1398 *                                                                  *
1399                                                                 >  5500*
1400 ECD.MINV=0000;ECD.MAXV=2359;ECD.NUM=27                             ECD.MINV=0000;ECD.MAXV=2359;ECD.NUM=27
1401 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1402 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN

1412 IF ECD.RET.VALUE[3,1] = ':' THEN                                   IF ECD.RET.VALUE[3,1] = ':' THEN
1413 TM = ECD.RET.VALUE[1,2]: ECD.RET.VALUE[4,2]                        TM = ECD.RET.VALUE[1,2]: ECD.RET.VALUE[4,2]
1414 IF TM > 2359 OR TM < 0 THEN                                        IF TM > 2359 OR TM < 0 THEN
1415 ERRMSG="Invalid Time. Try again! "                                 ERRMSG="Invalid Time. Try again! "
1416 GOSUB 91000                                                        GOSUB 91000
1417 GOTO ENT.TIME.USED                                              |  GOTO 5500
1418 END                                                                END
1419 DMT.TIME = ICONV(ECD.RET.VALUE,"MT")                               DMT.TIME = ICONV(ECD.RET.VALUE,"MT")
1420 END ELSE                                                           END ELSE
1421 ERRMSG="Invalid Time. Try again! "                                 ERRMSG="Invalid Time. Try again! "

1422 GOSUB 91000                                                        GOSUB 91000
1423 GOTO ENT.TIME.USED                                              |  GOTO 5500
1424 END                                                                END
1425 END                                                                END
1426 END                                                                END
1427 RETURN                                                             RETURN
1428 *                                                                  *
1429 ******************                                              |  *---- GET MATERIAL COST

1430 ENT.MATERIAL.COST:                                              <  
1431 ******************                                              <  
1432 *                                                                  *
1433 DMT.COST=0;GOSUB CHECK.MATL.COST                                |  6000*
1434 *T27622 v                                                       |  DMT.COST=0;GOSUB 10000
1435 IF CHECK.COST # 0 THEN                                          <  
1436 IF CATG.COST.TYPE = 'FI' OR CATG.COST.TYPE = 'LC' THEN          <  

1437 *T28659 v                                                       <  
1438 *   IF CATG.COST.TYPE = 'FI' THEN CPTR = Q ELSE CPTR = QCNT     <  
1439 IF CATG.COST.TYPE = 'FI' THEN                                   <  
1440 IF Q > 1 THEN CPTR = Q-1 ELSE CPTR = Q                          <  
1441 END ELSE CPTR = QCNT                                            <  
1442 *T28659 ^                                                       <  
1443 IF IWH.RECP.PERIOD<1,CPTR> > CUR.PERIOD THEN                    <  

1444 ERRMSG='Receipt Quantity not available until ':IWH.RECP.PERIOD  <  
1445 GOSUB 91000                                                     <  
1446 END                                                             <  
1447 END                                                             <  
1448 END                                                             <  
1449 IF CHECK.COST <> 0 OR ECD.RET.VALUE="END" THEN GOTO 6999           IF CHECK.COST <> 0 OR ECD.RET.VALUE="END" THEN GOTO 6999
1450 *IF IWH.RECP.PERIOD<1,1> = '' OR IWH.RECP.PERIOD<1,1> GT CUR.P  |  *C26626 v T21634

1451 *T27622 ^                                                       <  
1452 IF CATG.COST.TYPE = 'SD' OR CATG.COST.TYPE = 'LT' THEN             IF CATG.COST.TYPE = 'SD' OR CATG.COST.TYPE = 'LT' THEN
1453                                                                 >  *     ECD.MAXV=0;ECD.MINV=0;ECD.VALDAT=""
1454 ECD.MINV=0;ECD.VALDAT=""                                           ECD.MINV=0;ECD.VALDAT=""
1455 ECD.MAXV=999.9999 ;*T21734                                         ECD.MAXV=999.9999 ;*T21734
1456 ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
1457 END ELSE                                                           END ELSE

1456 ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
1457 END ELSE                                                           END ELSE
1458 SCV.REC(22)<1>=0;ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT            SCV.REC(22)<1>=0;ECD.NUM=22;ECD.ACTION=5;CALL SCRN.EDIT
1459 ECD.RET.VALUE = 0                                                  ECD.RET.VALUE = 0
1460 END                                                                END
1461                                                                 >  *C26626 ^
1462 IF ECD.RET.VALUE # "END" THEN DMT.COST=ECD.RET.VALUE               IF ECD.RET.VALUE # "END" THEN DMT.COST=ECD.RET.VALUE
1463 6999*                                                              6999*
1464 RETURN                                                             RETURN
1465 *                                                                  *

1466 *---- CHECK AUTHORIZATION                                          *---- CHECK AUTHORIZATION
1467 *                                                                  *
1468 7000*                                                              7000*
1469 VALUE=""                                                           VALUE=""
1470 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
1471                                                                 >  IF JOB.STATUS<1,1> = 3 THEN RETURN        ;* T26942
1472 7010*                                                              7010*
1473 X=0;Y=21;MAXL=3;TYP=1                                              X=0;Y=21;MAXL=3;TYP=1
1474 PMSG="This job is not in process. Enter authorization : "          PMSG="This job is not in process. Enter authorization : "
1475 CALL EDIT.SUB                                                      CALL EDIT.SUB

1484 DMT.INIT=VALUE                                                     DMT.INIT=VALUE
1485 END                                                                END
1486 7999*                                                              7999*
1487 RETURN                                                             RETURN
1488 *                                                                  *
1489 *****************                                               |  *---- CHECK MATERIAL RESERVE
1490 CHECK.MATL.RESV:                                                <  
1491 *****************                                               <  
1492 *                                                                  *
1493                                                                 >  9000*

1509 END                                                                END
1510 WHILE PTR DO                                                       WHILE PTR DO
1511 REPEAT                                                             REPEAT
1512 RETURN                                                             RETURN
1513 *                                                                  *
1514                                                                 >  *---- CHECK MATERIAL COST
1515 *                                                                  *
1516 *****************                                               |  10000*
1517 CHECK.MATL.COST:                                                <  
1518 *****************                                               <  

1519 *                                                               <  
1520 CHECK.COST=0;ECD.RET.VALUE=""                                      CHECK.COST=0;ECD.RET.VALUE=""
1521 *T27622 v Merged logic from below.                              <  
1522 ERR.FLG='';ERRMSG=''                                            <  
1523 PERIOD=''                                                       <  
1524 CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPE  <  
1525 FIFO.COST=0                                                     <  

1526 QCNT=DCOUNT(IWH.QTY.FI,VM)                                      <  
1527 FOR Q=1 TO QCNT WHILE FIFO.COST=0                               <  
1528 IF IWH.QTY.FI<1,Q> > 0 AND IWH.COST.FI<1,Q> > 0 THEN            <  
1529 FIFO.COST=IWH.COST.FI<1,Q>                                      <  
1530 END                                                             <  
1531 NEXT Q                                                          <  
1532 LAST.COST=IWH.COST.FI<1,QCNT>                                   <  

1533 *T27622 ^                                                       <  
1534 BEGIN CASE                                                         BEGIN CASE
1535 CASE RESV.AMT > 0                                                  CASE RESV.AMT > 0
1536 CHECK.COST=RESV.AMT                                                CHECK.COST=RESV.AMT
1537 CASE CATG.COST.TYPE="SD"                                           CASE CATG.COST.TYPE="SD"
1538 CHECK.COST=IWH.STD.COST                                            CHECK.COST=IWH.STD.COST
1539 CASE CATG.COST.TYPE="AV"                                           CASE CATG.COST.TYPE="AV"

1541 CASE CATG.COST.TYPE="LT"                                           CASE CATG.COST.TYPE="LT"
1542 CHECK.COST=IWH.LIST.COST                                           CHECK.COST=IWH.LIST.COST
1543 CASE CATG.TRACK.QOH # "Y"                                          CASE CATG.TRACK.QOH # "Y"
1544 CHECK.COST=0                                                       CHECK.COST=0
1545 CASE CATG.COST.TYPE="FI"                                           CASE CATG.COST.TYPE="FI"
1546 *T27622 v move up to beginning of routine.                      |  QCNT=DCOUNT(IWH.QTY.FI,VM)
1547 *   ERR.FLG='';ERRMSG=''                                        |  FOR Q=1 TO QCNT WHILE CHECK.COST=0
1548 *   PERIOD=''                                                   |  IF IWH.QTY.FI<1,Q> > 0 AND IWH.COST.FI<1,Q> > 0 THEN
1549 *   CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG  |  CHECK.COST=IWH.COST.FI<1,Q>
1550 *   QCNT=DCOUNT(IWH.QTY.FI,VM)                                  |  END

1551 *   FOR Q=1 TO QCNT WHILE CHECK.COST=0                          |  NEXT Q
1552 *     IF IWH.QTY.FI<1,Q> > 0 AND IWH.COST.FI<1,Q> > 0 THEN      <  
1553 *       CHECK.COST=IWH.COST.FI<1,Q>                             <  
1554 *     END                                                       <  
1555 *   NEXT Q                                                      <  
1556 CHECK.COST=FIFO.COST                                            <  
1557 CASE CATG.COST.TYPE="LC"                                           CASE CATG.COST.TYPE="LC"

1558 *   QCNT=DCOUNT(IWH.QTY.FI,VM)                                  |  QCNT=DCOUNT(IWH.QTY.LI,VM)
1559 *   CHECK.COST=IWH.COST.FI<1,QCNT>                              |  CHECK.COST=IWH.COST.LI<1,QCNT>
1560 CHECK.COST=LAST.COST                                            <  
1561 *T27622 ^                                                       <  
1562 CASE CATG.COST.TYPE='AC'                                        <  
1563 CHECK.COST=ISTK.UNIT.COST                                       <  
1564 CASE 1                                                             CASE 1


JCSBP/MISC.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/MISC.MAINT
Printed for thompson at 06/28/2006 04:42:01PM

0012 *                TASK #12907 (RRG)                                 *                TASK #12907 (RRG)
0013 *C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR HAS THE SAME DEPT     *C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR HAS THE SAME DE
0014 *                     STORED IN THE DIV REC FROM THE JOB.DIV F     *                     STORED IN THE DIV REC FROM THE JOB.DIV
0015 *T23278 markt 09/30/98 * Check for divisional security             *T23278 markt 09/30/98 * Check for divisional security
0016 *T24987 gat 03/27/2000 * FIX XREF FOR OPERATION                    *T24987 gat 03/27/2000 * FIX XREF FOR OPERATION
0017 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  |  *T26942 adelgado 10/28/2002 * Change authorization process t
0018 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *                             authorization for Jobs that ar
0019                                                                 >  *                             'Invoiced'.
0020                                                                 >  *ENDOC 
0021 **********************************************************         **********************************************************

0074 ECD.SCRN.CNT = 1                                                   ECD.SCRN.CNT = 1
0075 ECD.SCRN.NAME<1> = 'MISC.MAINT'                                    ECD.SCRN.NAME<1> = 'MISC.MAINT'
0076 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0077 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0078 100 MAT JOB.REC = ''                                               100 MAT JOB.REC = ''
0079 RELEASE   ;* T26126                                             <  
0080 MAT DMS.REC = ''                                                   MAT DMS.REC = ''
0081 MAT DIV.REC = ''                                                   MAT DIV.REC = ''
0082 MAT DEPT.REC = ''                                                  MAT DEPT.REC = ''
0083 MAT CCTR.REC = ''                                                  MAT CCTR.REC = ''

0085 MAT JSI.REC = ''                                                   MAT JSI.REC = ''
0086 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0087 OLD.START.LINE = 0; LN = 1; LINES = 0                              OLD.START.LINE = 0; LN = 1; LINES = 0
0088 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0089 ECD.NUM = 5                                                        ECD.NUM = 5
0090 ECD.VALDAT.CODE = 5; ECD.VALDAT.FILE = DAILY.MISC; ECD.PREFIX.  |  ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = DAILY.MISC; ECD.PREFI
0091 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0092 BEGIN CASE                                                         BEGIN CASE
0093 CASE ECD.RET.VALUE = 'END'                                         CASE ECD.RET.VALUE = 'END'
0094 GOTO 99999                                                         GOTO 99999

0509 GOSUB 8900                                                         GOSUB 8900
0510 CASE ACTION = 'S'                                                  CASE ACTION = 'S'
0511 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0512 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0513 GOSUB 8900                                                         GOSUB 8900
0514 * T25978 v                                                      <  
0515 CASE ACTION = 'SR'                                              <  
0516 LN -= PAGE.SIZE                                                 <  
0517 IF LN < 1 THEN LN = 1                                           <  
0518 GOSUB 8900                                                      <  

0519 CASE ACTION = 'ST'                                              <  
0520 LN = 1                                                          <  
0521 GOSUB 8900                                                      <  
0522 CASE ACTION = 'SB'                                              <  
0523 LN = LINES                                                      <  
0524 GOSUB 8900                                                      <  
0525 * T25978 ^                                                      <  

0574 8990 RETURN                                                        8990 RETURN
0575 8999 RETURN                                                        8999 RETURN
0576 9000*                                                              9000*
0577 VALUE = ""                                                         VALUE = ""
0578 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRA
C
0579                                                                 >  IF JOB.STATUS<1,1> = 3 THEN RETURN        ;* T26942
0580 9010 X=0;Y=23;MAXL=3;TYP=11                                        9010 X=0;Y=23;MAXL=3;TYP=11
0581 PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "          PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : " 
0582 CALL EDIT.SUB                                                      CALL EDIT.SUB 
0583 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"


JCSBP/OSP.MAINT                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/OSP.MAINT
Printed for thompson at 06/28/2006 04:42:01PM

0025 *T21692 cls 05/15/1997 * Change the outside.po.xref to use a n     *T21692 cls 05/15/1997 * Change the outside.po.xref to use a
0026 *T22025 lanny 06/19/1997 * Uninit var created by T21692.           *T22025 lanny 06/19/1997 * Uninit var created by T21692.
0027 *T22288 rick 10/15/1997 * Year 2000 compliance. check that dat     *T22288 rick 10/15/1997 * Year 2000 compliance. check that d
0028 *                         use four digit year.                     *                         use four digit year.
0029 *T21177 diane 05/12/1998 * UPDATE FOR REV11 THAT WAS OVERLAID      *T21177 diane 05/12/1998 * UPDATE FOR REV11 THAT WAS OVERLAI
0030 *T23278 markt 10/01/1998 * Check for divisional security        |  **T23499T23278 markt 10/01/1998 * Check for divisional secur
0031 *T25097 gat 04/19/2000 * If change of qty goto change unit pri  |  *T23499 rick 08/23/1999 * Modify the pgm to recognize when t
0032 *T23319 alex 04/27/2000 * Fix calculation for UOM Type 'C', it  <  
0033 *                         defaulting as a 'EA' Type.            <  
0034 *T25755 cm 04/16/2001 * Modify the pgm to recognize when there  <  

0037 *                       which detail line to use on this recei     *                         which detail line to use on this r
0038 *                       seq number from the po will need to be     *                         seq number from the po will need t
0039 *                       in this record so that when the receiv     *                         in this record so that when the re
0040 *                       number in OUTSIDE.PO is updated then t     *                         number in OUTSIDE.PO is updated th
0041 *                       correct line can be updated.               *                         correct line can be updated.
0042 *T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,  |  *T23319 lanny 04/10/2000 * Fix UOM = C
0043 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *T26557 lross 04/25/2002 * Default qty should be open qty.
0044 *T26565 lhelms 04/25/2002 * Make change to default to open qty  |  *T26942 adelgado 10/28/2002 * Change authorization process t
0045 *                           26557 Rev11                         |  *                             authorization for Jobs that ar
0046 *T26556 ajibaly 05/10/2002 * Remove second vendor fields        |  *                             'Invoiced'.

0047 *T26631 cmykleb 05/31/2002 * If job is an "OUTSIDE JOB" it sho  <  
0048 *                            check for a division match.        <  
0049 *T26620 cmykleb 06/05/2002 * If a line has already been receiv  <  
0050 *                            an outside po, then a warning mes  <  
0051 *                            should display warning the user t  <  
0052 *                            that line has already been receiv  <  
0053 *                            allow the user to continue if des  <  

0054 *T27521 cmykleb 06/24/2003 * Correct problem with entry of des  <  
0055 *                            line that only SAH would complain  <  
0056 **************************************************************     ************************************************************
0057 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0058 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0059 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0060 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION

0079 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0080 DIM L.VOU(5)                                                       DIM L.VOU(5)
0081 SYS.TYPE=1                                                         SYS.TYPE=1
0082 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0083 MAT FILE.VARS=''                                                   MAT FILE.VARS=''
0084 OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS F  |  * OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREE
0085                                                                 >  OPEN '', 'CBN.SCREENS' TO M.SCREENS ELSE ERRMSG='CBN.SCREENS
0086 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISS     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MI
0087 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS M     OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS
0088 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISS     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MI

0100 OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG='VENDOR.XREF      OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG='VENDOR.XRE
0101 OPEN '','DAILY.OSP' TO DAILY.OSP ELSE ERRMSG='DAILY.OSP FILE I     OPEN '','DAILY.OSP' TO DAILY.OSP ELSE ERRMSG='DAILY.OSP FILE
0102 OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG='JOB.OSP FILE IS MISS     OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG='JOB.OSP FILE IS MI
0103 OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT     OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.ST
0104 OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE I     OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE
0105 *T25396                                                         <  
0106 VAL.CAT = ""                                                    <  
0107 PO.LINE.NO = ""                                                 <  
0108 PO.NUM = ""                                                     <  
0109 OPO.FND = 0                                                     <  

0110 *T36922                                                         <  
0111 MAT COMP.REC=''                                                    MAT COMP.REC=''
0112 CONO=''                                                            CONO=''
0113 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0114 IF CONO='END' THEN GOTO 99999                                      IF CONO='END' THEN GOTO 99999
0115 IF CO.APS.O.INTRF > 2 THEN                                         IF CO.APS.O.INTRF > 2 THEN
0116 OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE                  OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE

0140 *T21692                                                            *T21692
0141 ECD.SCRN.NAME<2> = 'OUTSIDE.PO.XREF'                               ECD.SCRN.NAME<2> = 'OUTSIDE.PO.XREF'
0142 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0143 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0144 100*                                                               100*
0145 RELEASE   ;* T26126                                             <  
0146 MAT JOB.REC='';MAT DOS.REC='';MAT DIV.REC='';MAT DEPT.REC=''       MAT JOB.REC='';MAT DOS.REC='';MAT DIV.REC='';MAT DEPT.REC=''
0147 MAT CCTR.REC='';MAT OPER.REC='';MAT OPO.REC='';MAT CAOS.REC=''     MAT CCTR.REC='';MAT OPER.REC='';MAT OPO.REC='';MAT CAOS.REC=
0148 MAT JSI.REC='';MAT SCV.REC=''; MAT VPDS.REC = ''                   MAT JSI.REC='';MAT SCV.REC=''; MAT VPDS.REC = ''
0149 VPDS.PRESENT = 0; REQUEST = ''                                     VPDS.PRESENT = 0; REQUEST = ''

0150 TST = 1                                                            TST = 1
0151 COST.CHG=0 ;*T21006                                                COST.CHG=0 ;*T21006
0152 LINES=0;LN=1;OLD.START.LINE=0                                      LINES=0;LN=1;OLD.START.LINE=0
0153 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0154 ECD.NUM=5                                                          ECD.NUM=5
0155 ECD.VALDAT.CODE=5;ECD.VALDAT.FILE=DAILY.OSP;ECD.PREFIX.ID=CONO  |  ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=DAILY.OSP;ECD.PREFIX.ID=CO
0156 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0157 BEGIN CASE                                                         BEGIN CASE
0158 CASE ECD.RET.VALUE='END'                                           CASE ECD.RET.VALUE='END'
0159 GOTO 99999                                                         GOTO 99999

0164 IF ECD.RET.VALUE="END" THEN GOTO 100                               IF ECD.RET.VALUE="END" THEN GOTO 100
0165 CASE ECD.VALDAT.ITEM # ''                                          CASE ECD.VALDAT.ITEM # ''
0166 FOR I=1 TO DOS.REC.SIZE                                            FOR I=1 TO DOS.REC.SIZE
0167 DOS.REC(I)=ECD.VALDAT.ITEM<I>                                      DOS.REC(I)=ECD.VALDAT.ITEM<I>
0168 NEXT I                                                             NEXT I
0169 *T23278 v                                                       |  *23499 v
0170 DIV.CODE = DOS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     |  **T23278 v
0171 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               |  *          DIV.CODE = DOS.DIV; USER.ID = UPCASE(@LOGNAME); E
0172 IF ERRMSG # '' THEN                                             |  *          CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
0173 GOSUB 91000; GOTO 100                                           |  *          IF ERRMSG # '' THEN

0174 END                                                             |  *              GOSUB 91000; GOTO 100
0175 *T23278 ^                                                       |  *          END
0176                                                                 >  **T23278 ^
0177                                                                 >  *T23499 ^
0178 DOS.SEQ.NO=ECD.RET.VALUE                                           DOS.SEQ.NO=ECD.RET.VALUE
0179 LINES=COUNT(DOS.DESC,VM) + (DOS.DESC # "")                         LINES=COUNT(DOS.DESC,VM) + (DOS.DESC # "")
0180 POST.OSJ=0                                                         POST.OSJ=0

0211 MATREAD DIV.REC FROM DIVISION, CONO:DOS.DIV ELSE DIV.DESC=UNKN     MATREAD DIV.REC FROM DIVISION, CONO:DOS.DIV ELSE DIV.DESC=UN
0212 MATREAD DEPT.REC FROM DEPARTMENT, CONO:DOS.DEPT ELSE DEPT.DESC     MATREAD DEPT.REC FROM DEPARTMENT, CONO:DOS.DEPT ELSE DEPT.DE
0213 MATREAD CCTR.REC FROM COST.CNTR, CONO:DOS.CCTR ELSE CCTR.DESC=     MATREAD CCTR.REC FROM COST.CNTR, CONO:DOS.CCTR ELSE CCTR.DES
0214 IF CCTR.TYPE='F' THEN CCTR.DESC="THIS COST CENTER IS FROZEN"       IF CCTR.TYPE='F' THEN CCTR.DESC="THIS COST CENTER IS FROZEN"
0215 MATREAD OPER.REC FROM OPERATION, CONO:DOS.OPER ELSE OPER.DESC=     MATREAD OPER.REC FROM OPERATION, CONO:DOS.OPER ELSE OPER.DES
0216 *T26556 v                                                       |  IF LEN(DOS.VEND)=8 THEN
0217 *   IF LEN(DOS.VEND)=8 THEN                                     <  
0218 *     FOUND=1                                                   <  
0219 *     MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0    <  
0220 *     IF FOUND THEN                                             <  

0221 *       SCV.REC(17)<1>=DOS.VEND                                 <  
0222 *       SCV.REC(19)<1>=VEND.DESC                                <  
0223 *       SCV.REC(21)<1>=VEND.ADDR1                               <  
0224 *       SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP                  <  
0225 *     END                                                       <  
0226 *   END                                                         <  
0227 *T26556 ^                                                       <  

0228 FOUND=1                                                            FOUND=1
0229                                                                 >  MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0
0230                                                                 >  IF FOUND THEN
0231                                                                 >  SCV.REC(17)<1>=DOS.VEND
0232                                                                 >  SCV.REC(19)<1>=VEND.DESC
0233                                                                 >  SCV.REC(21)<1>=VEND.ADDR1
0234                                                                 >  SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
0235                                                                 >  END

0236                                                                 >  END
0237                                                                 >  FOUND=1
0238 MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE                     MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE
0239 MAT VEND.REC='';VEND.DESC=UNKNOWN                                  MAT VEND.REC='';VEND.DESC=UNKNOWN
0240 VEND.DISC='';VEND.NET='';DISP.TERMS='';FOUND=0                     VEND.DISC='';VEND.NET='';DISP.TERMS='';FOUND=0
0241 END                                                                END
0242 *T26556 v                                                       |  IF FOUND THEN

0243 *   IF FOUND THEN                                               |  SCV.REC(17)<1>=DOS.VEND
0244 *     SCV.REC(17)<1>=DOS.VEND                                   |  SCV.REC(19)<1>=VEND.DESC
0245 *     SCV.REC(19)<1>=VEND.DESC                                  |  SCV.REC(21)<1>=VEND.ADDR1
0246 *     SCV.REC(21)<1>=VEND.ADDR1                                 |  SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
0247 *     SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP                    |  ECD.ACTION = 3; CALL SCRN.EDIT
0248 *     ECD.ACTION = 3; CALL SCRN.EDIT                            |  END
0249 *   END                                                         <  

0250 *T26556 ^                                                       <  
0251 IF CO.POS="Y" THEN                                                 IF CO.POS="Y" THEN
0252 MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE                 MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE
0253 MAT OPO.REC=''                                                     MAT OPO.REC=''
0254 END                                                                END
0255 END                                                                END
0256                                                                 >  * 16414

0257                                                                 >  * IF OPO.TAXABLE = "" THEN
0258                                                                 >  *   SCV.REC(44)<ECD.SCRN.NO> = DOS.TAXABLE.PO
0259                                                                 >  *   END ELSE
0260                                                                 >  *       SCV.REC(44)<ECD.SCRN.NO> = OPO.TAXABLE<1,TST>
0261                                                                 >  *   END
0262 MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DOS.PRD.LINE ELSE         MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DOS.PRD.LINE ELSE
0263 MAT CAOS.REC=''                                                    MAT CAOS.REC=''

0298 SCV.REC(29)<1>=DOS.INV.DATE                                        SCV.REC(29)<1>=DOS.INV.DATE
0299 SCV.REC(30)<1>=DOS.GRS.AMT                                         SCV.REC(30)<1>=DOS.GRS.AMT
0300 SCV.REC(37)<1>=DOS.PRD.LINE                                        SCV.REC(37)<1>=DOS.PRD.LINE
0301 SCV.REC(38)<1>=DOS.SALE.AMT                                        SCV.REC(38)<1>=DOS.SALE.AMT
0302 SCV.REC(56)<1>=DOS.U.PRICE                                         SCV.REC(56)<1>=DOS.U.PRICE
0303 SCV.REC(57)<1>=DOS.UOM ; * T21670                               |  * T21670
0304 *T25755 v                                                       |  SCV.REC(57)<1>=DOS.UOM
0305                                                                 >  * T21670
0306                                                                 >  *T23499 v
0307 IF OPO.JOB.NO = '' THEN DOS.PRD.SEQ = 1                            IF OPO.JOB.NO = '' THEN DOS.PRD.SEQ = 1

0308 SCV.REC(31)<1> = DOS.PRD.SEQ                                       SCV.REC(31)<1> = DOS.PRD.SEQ
0309 *T25755 ^                                                       |  *T23499 ^
0310 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0311 GOSUB 21000                                                        GOSUB 21000
0312 IF DOS.INIT="" THEN                                                IF DOS.INIT="" THEN
0313 GOSUB 22000                                                        GOSUB 22000
0314 IF VALUE="END" THEN GOTO 100                                       IF VALUE="END" THEN GOTO 100
0315 END                                                                END

0318 GOSUB 91000                                                        GOSUB 91000
0319 GOTO 100                                                           GOTO 100
0320 END CASE                                                           END CASE
0321 MORE=1                                                             MORE=1
0322 LOOP                                                               LOOP
0323                                                                 >  * 16414
0324                                                                 >  * CANNOT CHANGE DATA ON THIS RECORD IF IT WAS CREATED IN VOU
0325 IF DOS.ORIGIN THEN                                                 IF DOS.ORIGIN THEN
0326 ECD.NUM = 55                                                       ECD.NUM = 55
0327 END ELSE                                                           END ELSE

0332 REQUEST=ECD.RET.VALUE                                              REQUEST=ECD.RET.VALUE
0333 BEGIN CASE                                                         BEGIN CASE
0334 CASE REQUEST='END' OR REQUEST='E'                                  CASE REQUEST='END' OR REQUEST='E'
0335 MORE=0                                                             MORE=0
0336 CASE NUM(REQUEST)                                                  CASE NUM(REQUEST)
0337 ON REQUEST GOSUB 250,300,3000,1000,2000,4000,5900,7000,9000,95  |  ON REQUEST GOSUB 250,300,3000,1000,2000,4000,5900,6000,7000,
0338 CASE REQUEST='D'                                                   CASE REQUEST='D'
0339 DELETE DAILY.OSP, CONO:DOS.SEQ.NO                                  DELETE DAILY.OSP, CONO:DOS.SEQ.NO
0340 MORE=0                                                             MORE=0
0341 CASE REQUEST='F'                                                   CASE REQUEST='F'

0362 200*                                                               200*
0363 ECD.NUM=6                                                          ECD.NUM=6
0364 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0365 IF ECD.RET.VALUE='END' THEN GOTO 299                               IF ECD.RET.VALUE='END' THEN GOTO 299
0366 POST.OSJ=0                                                         POST.OSJ=0
0367                                                                 >  * 16414
0368 201*                                                               201*
0369 MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE                MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
0370 MAT JOB.REC=''                                                     MAT JOB.REC=''
0371 FND=0                                                              FND=0

0389 END ELSE                                                           END ELSE
0390 ERRMSG='JOB IS NOT ON FILE. TRY AGAIN !!'                          ERRMSG='JOB IS NOT ON FILE. TRY AGAIN !!'
0391 GOSUB 91000;GOTO 200                                               GOSUB 91000;GOTO 200
0392 END                                                                END
0393 END                                                                END
0394 *T23278 v                                                       |  *T23499 v
0395 IF JOB.DIV # '' THEN                                            |  **T23278 v
0396 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     |  *  IF JOB.DIV # '' THEN
0397 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               |  *      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMS
0398 IF ERRMSG # '' THEN                                             |  *      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)

0399 GOSUB 91000; GOTO 100                                           |  *      IF ERRMSG # '' THEN
0400 END                                                             |  *          GOSUB 91000; GOTO 100
0401 END                                                             |  *      END
0402 *T23278 ^                                                       |  *  END
0403                                                                 >  **T23278 ^
0404                                                                 >  *T23499 ^
0405 BEGIN CASE                                                         BEGIN CASE

0440 NEXT P                                                             NEXT P
0441 ID.LIST = GXR.IDLIST                                               ID.LIST = GXR.IDLIST
0442 *T22025 PO.NUM = ''; PO.LINE.NO = ''                               *T22025 PO.NUM = ''; PO.LINE.NO = ''
0443 JOB.NO = DOS.JOB                                                   JOB.NO = DOS.JOB
0444 CALL OUTSIDE.PO.XREF(CONO,JOB.NO,JOB.DESC,ID.LIST,PO.NUM,PO.LI     CALL OUTSIDE.PO.XREF(CONO,JOB.NO,JOB.DESC,ID.LIST,PO.NUM,PO.
0445                                                                 >  *   GXR.XREF=JOB.STATS
0446                                                                 >  *   GXR.XREF=OUTSIDE.PO
0447                                                                 >  *   GXR.FILE=OUTSIDE.PO
0448                                                                 >  **
0449                                                                 >  *   GXR.NAME="OSP.JOB.STATS"

0450                                                                 >  **
0451                                                                 >  *         GXR.TOP.LINE="OUTSIDE P/O XREF SEARCH"
0452                                                                 >  *         GXR.HEADING<1,1>="PO NUM  ";GXR.HEADING<1,2>="VEND
0453                                                                 >  *         GXR.HEADING<1,3>="QUANTITY "
0454                                                                 >  *         GXR.HEADING<1,4>="EST COST "
0455                                                                 >  *         GXR.HEADING<1,5>="DATE RECV"
0456                                                                 >  *         GXR.ATT<1,1>=0;GXR.ATT<1,2>=1;GXR.ATT<1,3>=5;GXR.A

0457                                                                 >  *         GXR.LEN<1,1>=8;GXR.LEN<1,2>=8;GXR.LEN<1,3>=10 ;GXR
0458                                                                 >  *         GXR.LOC=1 ;GXR.OCONV<1,3>="MD2";GXR.OCONV<1,4>="MD
0459                                                                 >  *   GXR.ID=''
0460                                                                 >  *  GXR.SRCH.ID=DOS.JOB
0461                                                                 >  *   CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0462                                                                 >  *         GXR.ATT<1,1>=0;GXR.ATT<1,2>=2;GXR.LEN<1,1>=5;GXR.L
0463                                                                 >  *         GXR.HEADING=''

0464                                                                 >  *         GXR.HEADING<1,2>="DESCRIPTION";GXR.OCONV=""
0465 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0466 ECD.ACTION=2 ;CALL SCRN.EDIT                                       ECD.ACTION=2 ;CALL SCRN.EDIT
0467 GOSUB 21000                                                        GOSUB 21000
0468 IF PO.NUM = '' THEN GOTO 250                                       IF PO.NUM = '' THEN GOTO 250
0469                                                                 >  *T23499 v
0470                                                                 >  READ XREC FROM OUTSIDE.PO, CONO:PO.NUM THEN

0471                                                                 >  ERRMSG='Cannot use this function for an existing PO!'
0472                                                                 >  GOSUB 91000
0473                                                                 >  GOTO 250
0474                                                                 >  END
0475                                                                 >  *T23499 ^
0476 DOS.PO = PO.NUM                                                    DOS.PO = PO.NUM
0477 DOS.PRD.SEQ = 1                                                    DOS.PRD.SEQ = 1

0478 SCV.REC(31)<1> = DOS.PRD.SEQ                                       SCV.REC(31)<1> = DOS.PRD.SEQ
0479                                                                 >  *   GOSUB 21000
0480                                                                 >  *   IF GXR.ID='' THEN GOTO 250
0481                                                                 >  *   DOS.PO=GXR.ID
0482 ECD.NUM=26                                                         ECD.NUM=26
0483 SCV.REC(ECD.NUM)<ECD.SCRN.NO>=PO.NUM                               SCV.REC(ECD.NUM)<ECD.SCRN.NO>=PO.NUM
0484 ECD.ACTION=5  ; CALL SCRN.EDIT                                     ECD.ACTION=5  ; CALL SCRN.EDIT
0485 *T22025   END                                                      *T22025   END

0492 *T21695 ^                                                          *T21695 ^
0493 *T21692^                                                           *T21692^
0494 END                                                                END
0495 OPO.FND=0                                                          OPO.FND=0
0496 IF CO.POS="Y" THEN                                                 IF CO.POS="Y" THEN
0497                                                                 >  * 16414,A1 DLG 05/01/92
0498 OPO.FND = 1                                                        OPO.FND = 1
0499 MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE                 MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE
0500 MAT OPO.REC=''                                                     MAT OPO.REC=''
0501 OPO.FND = 0                                                        OPO.FND = 0

0502 *T25755 v                                                       |  *T23499 v
0503 DOS.PRD.SEQ = 1                                                    DOS.PRD.SEQ = 1
0504 SCV.REC(31)<1> = DOS.PRD.SEQ                                       SCV.REC(31)<1> = DOS.PRD.SEQ
0505 *T25755 ^                                                       |  *T23499 ^
0506 END                                                                END
0507 END                                                                END
0508                                                                 >  * 16414 - MORE THAN 1 JOB MAY BE COSTED TO A PO

0509                                                                 >  *   IF OPO.JOB.NO # '' AND DOS.JOB # OPO.JOB.NO<1,TST>THEN
0510                                                                 >  *     ERRMSG="THIS OUTSIDE PO DOESN'T BELONG TO THIS JOB"
0511                                                                 >  *     GOSUB 91000 ;GOTO 250
0512                                                                 >  *   END
0513 *T21692v                                                           *T21692v
0514 VAL.CAT = ''                                                       VAL.CAT = ''
0515 *T25755 v                                                       |  VAL.LINE.NO="" ;*T23499

0516 VAL.LINE.NO = ''                                                |  VAL.SEQ=""  ;*T23499
0517 VAL.SEQ = ''                                                    |  FND=0   ;*T23499
0518 FND = 0                                                         |  NUM.JOB.LCL = DCOUNT(OPO.JOB.NO,@VM)
0519 *T25755 ^                                                       |  FOR PTR = 1 TO NUM.JOB.LCL
0520 FOR PTR = 1 TO DCOUNT(OPO.JOB.NO,VM)                            <  
0521 IF OPO.JOB.NO<1,PTR> = DOS.JOB THEN                                IF OPO.JOB.NO<1,PTR> = DOS.JOB THEN
0522 *T25755  LOCATE OPO.PROD.LINE<1,PTR> IN VAL.CAT<1>, 1 SETTING   |  *T23499***          LOCATE OPO.PROD.LINE<1,PTR> IN VAL.CAT<1

0523 *T22025  VAL.CAT <1,PTR> = OPO.PROD.LINE<1,PTR>                    *T22025  VAL.CAT <1,PTR> = OPO.PROD.LINE<1,PTR>
0524 FND += 1 ; * T25755                                             |  FND+=1 ;*T23499
0525 VAL.CAT <1,FND> = OPO.PROD.LINE<1,PTR>                             VAL.CAT <1,FND> = OPO.PROD.LINE<1,PTR>
0526 *T25755 v                                                       |  *T23499 v
0527 *        END                                                    <  
0528 VAL.LINE.NO<1,FND>=PTR                                             VAL.LINE.NO<1,FND>=PTR
0529 VAL.SEQ<1,FND>=OPO.PROD.SEQ<1,PTR>                                 VAL.SEQ<1,FND>=OPO.PROD.SEQ<1,PTR>
0530 *T23499 ^                                                          *T23499 ^

0531                                                                 >  *T23499***          END
0532 END                                                                END
0533 NEXT PTR                                                           NEXT PTR
0534 *T21692^                                                           *T21692^
0535 300*                                                               300*
0536                                                                 >  *  ECD.NUM=37;ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=CATEGORY.OSP
0537                                                                 >  *     ECD.PREFIX.ID=CONO;ECD.ACTION=4;CALL SCRN.EDIT

0538                                                                 >  *IF OPO.FND AND DCOUNT(OPO.PROD.LINE,VM)=1 THEN SCV.REC(37)<
0539 ECD.NUM = 37                                                       ECD.NUM = 37
0540 *T21692v                                                           *T21692v
0541 IF PO.LINE.NO # '' THEN ECD.DEFAULT = OPO.PROD.LINE<1,PO.LINE.     IF PO.LINE.NO # '' THEN ECD.DEFAULT = OPO.PROD.LINE<1,PO.LIN
0542 IF DCOUNT(VAL.CAT,VM) = 1 THEN ECD.DEFAULT = VAL.CAT               IF DCOUNT(VAL.CAT,VM) = 1 THEN ECD.DEFAULT = VAL.CAT
0543 *T21692^                                                           *T21692^
0544 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT

0549 GXR.FILE = CATEGORY.OSP                                            GXR.FILE = CATEGORY.OSP
0550 GXR.XREF=CATEGORY.OSP                                              GXR.XREF=CATEGORY.OSP
0551 GXR.NAME = 'CATEGORY.OSP'                                          GXR.NAME = 'CATEGORY.OSP'
0552 GXR.ID = ''                                                        GXR.ID = ''
0553 GXR.SRCH.ID = ''                                                   GXR.SRCH.ID = ''
0554                                                                 >  *         GXR.HEADING<1,1>="CATEGORY"
0555                                                                 >  *         GXR.TOP.LINE="CATEGORY XREF SEARCH"
0556                                                                 >  *         GXR.ATT<1,1>=0;GXR.ATT<1,2>=1
0557 CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)               CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0558                                                                 >  *         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)

0583 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DOS.PRD.LINE                       SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DOS.PRD.LINE
0584 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0585 ECD.NUM=42                                                         ECD.NUM=42
0586 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CAOS.DESC                          SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CAOS.DESC
0587 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0588 400 *                                                           |  *     IF ECD.RET.VALUE='END' THEN GOTO 250
0589                                                                 >  *     FOR X=1 TO CAOS.REC.SIZE
0590                                                                 >  *        CAOS.REC(X)=ECD.VALDAT.ITEM<X>
0591                                                                 >  *     NEXT X
0592                                                                 >  *     DOS.PRD.LINE=ECD.RET.VALUE

0593                                                                 >  400 
0594 IF OPO.FND # 0 THEN                                                IF OPO.FND # 0 THEN
0595 *T25755 v                                                       |  *T23499 v
0596                                                                 >  ****    comment out following few lines that test for valid 
0597                                                                 >  ****     po category from the outside po chosen
0598 *     FOUND = 1                                                    *      FOUND = 1
0599 *     LOCATE DOS.JOB IN OPO.JOB.NO<1>,1 SETTING TST ELSE           *      LOCATE DOS.JOB IN OPO.JOB.NO<1>,1 SETTING TST ELSE

0600 *        FOUND = 0                                                 *          FOUND = 0
0601 *        ERRMSG = "JOB IS NOT VALID ON OUTSIDE P/O ":DOS.PO        *          ERRMSG = "JOB IS NOT VALID ON OUTSIDE P/O ":DOS.P
0602 *        GOSUB 91000                                               *          GOSUB 91000
0603 *        GOTO 250                                                  *          GOTO 250
0604 *     END                                                          *      END
0605 * 401*                                                          |  *401*
0606 *     IF FOUND # 0 THEN                                            *      IF FOUND # 0 THEN
0607 *        IF OPO.PROD.LINE<1,TST> = DOS.PRD.LINE THEN               *          IF OPO.PROD.LINE<1,TST> = DOS.PRD.LINE THEN
0608 *           FOUND = 1                                              *              FOUND = 1
0609 *        END ELSE                                                  *          END ELSE

0615 *           END                                                    *              END
0616 *           FOUND = 1                                              *              FOUND = 1
0617 *           GOTO 401                                               *              GOTO 401
0618 *        END                                                       *          END
0619 *     END                                                          *      END
0620                                                                 >  ****  end of comment out area for testing job number and cat
0621                                                                 >  *T23499 ^
0622                                                                 >  *
0623                                                                 >  *T23499 v
0624 401 *                                                              401 *

0635 LOCATE DOS.PRD.LINE IN VAL.CAT<1>,LOCAT SETTING LOCAT THEN         LOCATE DOS.PRD.LINE IN VAL.CAT<1>,LOCAT SETTING LOCAT THEN
0636 FND.CNT+=1                                                         FND.CNT+=1
0637 VAL.LINE.LIST<1,-1>=VAL.LINE.NO<1,LOCAT>                           VAL.LINE.LIST<1,-1>=VAL.LINE.NO<1,LOCAT>
0638 VAL.SEQ.LIST<1,-1>=VAL.SEQ<1,LOCAT>                                VAL.SEQ.LIST<1,-1>=VAL.SEQ<1,LOCAT>
0639 IF FND.CNT = 1 THEN                                                IF FND.CNT = 1 THEN
0640 FND.MSG="This Job/Category exits on lines ":VAL.LINE.NO<1,LOCA  |  FND.MSG="This Job/Category are on lines ":VAL.LINE.NO<1,LOCA
0641 END ELSE                                                           END ELSE
0642 FND.MSG:=",":VAL.LINE.NO<1,LOCAT>                                  FND.MSG:=",":VAL.LINE.NO<1,LOCAT>
0643 END                                                                END
0644 LOCAT+=1                                                           LOCAT+=1

0676 END CASE                                                           END CASE
0677 REPEAT                                                             REPEAT
0678 IF VALUE = "END" THEN GOTO 300                                     IF VALUE = "END" THEN GOTO 300
0679 LOCATE DOS.PRD.SEQ IN OPO.PROD.SEQ<1>,1 SETTING TST ELSE TST=1     LOCATE DOS.PRD.SEQ IN OPO.PROD.SEQ<1>,1 SETTING TST ELSE TST
0680 END ELSE                                                           END ELSE
0681                                                                 >  *C38041 v
0682                                                                 >  *      TST=1
0683 IF FND.CNT = 1 THEN                                                IF FND.CNT = 1 THEN
0684 TST = VAL.LINE.LIST                                                TST = VAL.LINE.LIST
0685 DOS.PRD.SEQ = VAL.SEQ.LIST<1>                                   <  

0686 END ELSE                                                           END ELSE
0687 ERRMSG='Cannot locate JOB/CATEGORY combination on PO'              ERRMSG='Cannot locate JOB/CATEGORY combination on PO'
0688 GOSUB 91000                                                        GOSUB 91000
0689 GOTO 200                                                           GOTO 200
0690 END                                                                END
0691                                                                 >  *C38041 ^
0692 END                                                                END
0693 SCV.REC(31)<ECD.SCRN.NO> = DOS.PRD.SEQ                          |  *T23499 ^
0694 *T25755 ^                                                       <  
0695 MATREAD VEND.REC FROM VEND,CONO:OPO.VEND.NO<1,1> ELSE MAT VEND     MATREAD VEND.REC FROM VEND,CONO:OPO.VEND.NO<1,1> ELSE MAT VE

0696 MATREAD CCTR.REC FROM COST.CNTR,CONO:OPO.DVDPCC<1,3,TST> ELSE      MATREAD CCTR.REC FROM COST.CNTR,CONO:OPO.DVDPCC<1,3,TST> ELS
0697                                                                 >  *    MATREAD CCTR.REC FROM COST.CNTR,CONO:JOB.OS.CCTR ELSE M
0698 MATREAD DIV.REC FROM DIVISION,CONO:OPO.DVDPCC<1,1,TST> ELSE MA     MATREAD DIV.REC FROM DIVISION,CONO:OPO.DVDPCC<1,1,TST> ELSE 
0699                                                                 >  *    MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE MAT DIV
0700 MATREAD DEPT.REC FROM DEPARTMENT,CONO:OPO.DVDPCC<1,2,TST> ELSE     MATREAD DEPT.REC FROM DEPARTMENT,CONO:OPO.DVDPCC<1,2,TST> EL
0701                                                                 >  *    MATREAD DEPT.REC FROM DEPARTMENT,CONO:DOS.DEPT ELSE MAT
0702                                                                 >  *      SCV.REC(44)<ECD.SCRN.NO> = OPO.TAXABLE<1,TST>
0703 DOS.VEND = OPO.VEND.NO<1,1>                                        DOS.VEND = OPO.VEND.NO<1,1>

0704 DOS.UOM = OPO.UOM<1,TST>; * T21670                                 DOS.UOM = OPO.UOM<1,TST>; * T21670
0705                                                                 >  *     DOS.PRD.SEQ = OPO.PROD.SEQ<1,TST>  ;*T23499
0706 GOSUB 20000         ;* get VPDS record  Task 18690                 GOSUB 20000         ;* get VPDS record  Task 18690
0707 *T26620 v                                                       <  
0708 IF VPDS.REC.DATE # "" THEN                                      <  
0709 ECD.NUM = 58                                                    <  
0710 ECD.ACTION = 4 ; CALL SCRN.EDIT                                 <  
0711 P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"               <  

0712 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           <  
0713 IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'N' THEN GOTO 300   <  
0714 END                                                             <  
0715 *T26620 ^                                                       <  
0716 SCV.REC(16)<ECD.SCRN.NO> = OPO.VEND.NO<1,1>                        SCV.REC(16)<ECD.SCRN.NO> = OPO.VEND.NO<1,1>
0717 SCV.REC(18)<ECD.SCRN.NO> = VEND.DESC                               SCV.REC(18)<ECD.SCRN.NO> = VEND.DESC
0718 SCV.REC(20)<ECD.SCRN.NO> = VEND.ADDR1                              SCV.REC(20)<ECD.SCRN.NO> = VEND.ADDR1

0729 IF DOS.DESC<1,1> = '' THEN DOS.DESC<1,1> = OPO.ITEM.COMM<1,TST     IF DOS.DESC<1,1> = '' THEN DOS.DESC<1,1> = OPO.ITEM.COMM<1,T
0730 SCV.REC(33)<ECD.SCRN.NO,1> = DOS.DESC<1,1>                         SCV.REC(33)<ECD.SCRN.NO,1> = DOS.DESC<1,1>
0731 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0732 GOSUB 21000                                                        GOSUB 21000
0733 ECD.NUM=33; ECD.SUB.NUM=1; ECD.ACTION=7; CALL SCRN.EDIT ;* T21     ECD.NUM=33; ECD.SUB.NUM=1; ECD.ACTION=7; CALL SCRN.EDIT ;* T
0734                                                                 >  *    DOS.TAXABLE.PO = OPO.TAXABLE<1,TST>
0735 DOS.DIV = JOB.DIV                                                  DOS.DIV = JOB.DIV
0736 DOS.TYPE = JOB.TYPE                                                DOS.TYPE = JOB.TYPE
0737 FOR REQUEST=1 TO 9                                              |  FOR REQUEST=1 TO 10
0738 ON REQUEST GOSUB 1000,2000,4000,5900,7000,9000,9500,9900,10000  |  ON REQUEST GOSUB 1000,2000,4000,5900,6000,7000,9000,9500,990

0737 FOR REQUEST=1 TO 9                                              |  FOR REQUEST=1 TO 10
0738 ON REQUEST GOSUB 1000,2000,4000,5900,7000,9000,9500,9900,10000  |  ON REQUEST GOSUB 1000,2000,4000,5900,6000,7000,9000,9500,99
0
0739 IF ECD.RET.VALUE='END' THEN GOTO 299                               IF ECD.RET.VALUE='END' THEN GOTO 299
0740 NEXT REQUEST                                                       NEXT REQUEST
0741 END ELSE                                                           END ELSE
0742 IF ECD.RET.VALUE='END' THEN GOTO 299                            |  *      ECD.NUM = 44
0743 GOSUB 3000                                                      |  *      IF DOS.TAXABLE.PO NE "" THEN ECD.DEFAULT = DOS.TAXABL
0744 *T26556 v                                                       |  *      ECD.ACTION=4;CALL SCRN.EDIT
0745 * IF LEN(DOS.VEND)=8 THEN                                       |  *      DOS.TAXABLE.PO = ECD.RET.VALUE
0746 *   FOUND=1                                                     <  

0747 *   MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0      <  
0748 *   IF FOUND THEN                                               <  
0749 *     SCV.REC(17)<1>=DOS.VEND                                   <  
0750 *     SCV.REC(19)<1>=VEND.DESC                                  <  
0751 *     SCV.REC(21)<1>=VEND.ADDR1                                 <  
0752 *     SCV.REC(23)<1>=VEND.CT.ST:" ":VEND.ZIP                    <  
0753 *   END                                                            *     END

0754                                                                 >  *     DOS.PRD.LINE=OPO.PROD.LINE<1,TST>
0755                                                                 >  *     MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : DOS.PRD.LIN
0756                                                                 >  *       MAT CAOS.REC=''
0757 * END                                                              *     END
0758 *T26556 ^                                                       |  *     DOS.VEND=OPO.VEND.NO<1,TST>
0759                                                                 >  *     IF OPO.PROD.LINE<1,TST>='' THEN
0760                                                                 >  *       GOSUB 300

0761                                                                 >  IF ECD.RET.VALUE='END' THEN GOTO 299
0762                                                                 >  *     END
0763                                                                 >  *     IF OPO.VEND.NO<1,TST>='' THEN
0764                                                                 >  GOSUB 3000
0765                                                                 >  *     IF ECD.RET.VALUE='END' THEN GOTO 299
0766                                                                 >  *     END ELSE
0767                                                                 >  IF LEN(DOS.VEND)=8 THEN

0768 FOUND=1                                                            FOUND=1
0769                                                                 >  MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0
0770                                                                 >  IF FOUND THEN
0771                                                                 >  SCV.REC(17)<1>=DOS.VEND
0772                                                                 >  SCV.REC(19)<1>=VEND.DESC
0773                                                                 >  SCV.REC(21)<1>=VEND.ADDR1
0774                                                                 >  SCV.REC(23)<1>=VEND.CT.ST:" ":VEND.ZIP
0775                                                                 >  END

0776                                                                 >  END
0777                                                                 >  FOUND=1
0778 MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE                     MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE
0779 MAT VEND.REC=''                                                    MAT VEND.REC=''
0780 END                                                                END
0781 SCV.REC(16)<1>=DOS.VEND                                            SCV.REC(16)<1>=DOS.VEND
0782 SCV.REC(18)<1>=VEND.DESC                                           SCV.REC(18)<1>=VEND.DESC

0796 ECD.NUM=10;SCV.REC(ECD.NUM)<1>=JOB.DEPT;ECD.ACTION=5;CALL SCRN     ECD.NUM=10;SCV.REC(ECD.NUM)<1>=JOB.DEPT;ECD.ACTION=5;CALL SC
0797 ECD.NUM=11;SCV.REC(ECD.NUM)<1>=DEPT.DESC;ECD.ACTION=5;CALL SCR     ECD.NUM=11;SCV.REC(ECD.NUM)<1>=DEPT.DESC;ECD.ACTION=5;CALL S
0798 END                                                                END
0799 END                                                                END
0800 IF DOS.DEPT='' THEN                                                IF DOS.DEPT='' THEN
0801 FOR REQUEST=1 TO 9                                              |  FOR REQUEST=1 TO 10
0802 ON REQUEST GOSUB 1000,2000,4000,5900,7000,9000,9500,9900,10000  |  ON REQUEST GOSUB 1000,2000,4000,5900,6000,7000,9000,9500,990
0803 IF ECD.RET.VALUE='END' THEN GOTO 299                               IF ECD.RET.VALUE='END' THEN GOTO 299
0804 NEXT REQUEST                                                       NEXT REQUEST
0805 END                                                                END

0825 MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE              MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
0826 MAT DEPT.REC=""                                                    MAT DEPT.REC=""
0827 ERRMSG="COST CNTR DEPARTMENT (":CCTR.DEPT:") IS MISSING"           ERRMSG="COST CNTR DEPARTMENT (":CCTR.DEPT:") IS MISSING"
0828 GOSUB 91000;GOTO 1000                                              GOSUB 91000;GOTO 1000
0829 END                                                                END
0830 *T26631 v                                                       <  
0831 *        LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING X ELSE         <  
0832 *           ERRMSG="JOB BELONGS TO DIFFERENT DEPARTMENT";GOSUB  <  
0833 *        END                                                    <  
0834 IF POST.OSJ = 0 THEN                                            <  

0835 LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING X ELSE                     LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING X ELSE
0836 ERRMSG = "JOB BELONGS TO A DIFFERENT DIVISION"                  |  ERRMSG="JOB BELONGS TO DIFFERENT DEPARTMENT";GOSUB 91000;GOT
0837 GOSUB 91000                                                     <  
0838 GOTO 1000                                                       <  
0839 END                                                                END
0840 END                                                             <  
0841 *T26631 ^                                                       <  
0842 DOS.CCTR=ECD.RET.VALUE                                             DOS.CCTR=ECD.RET.VALUE

0861 DOS.DEPT=JOB.DEPT                                                  DOS.DEPT=JOB.DEPT
0862 END ELSE                                                           END ELSE
0863 GXR.XREF=DIVISION                                                  GXR.XREF=DIVISION
0864 GXR.FILE=DEPARTMENT                                                GXR.FILE=DEPARTMENT
0865 GXR.NAME="DEPT.DIV"                                                GXR.NAME="DEPT.DIV"
0866                                                                 >  *
0867                                                                 >  *            GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
0868                                                                 >  *            GXR.HEADING<1,1>='DEPT'
0869                                                                 >  *            GXR.ATT<1,2>=2
0870                                                                 >  *            GXR.LOC=2

0881 SCV.REC(10)<1>=DOS.DEPT                                            SCV.REC(10)<1>=DOS.DEPT
0882 SCV.REC(11)<1>=DEPT.DESC                                           SCV.REC(11)<1>=DEPT.DESC
0883 GXR.XREF=DEPARTMENT                                                GXR.XREF=DEPARTMENT
0884 GXR.FILE=COST.CNTR                                                 GXR.FILE=COST.CNTR
0885 GXR.NAME="CCTR.DEPT"                                               GXR.NAME="CCTR.DEPT"
0886                                                                 >  *         GXR.TOP.LINE='COST CENTER XREF SEARCH'
0887                                                                 >  *         GXR.HEADING<1,1>='CCTR'
0888                                                                 >  *         GXR.ATT<1,2>=1
0889                                                                 >  *         GXR.LOC=5
0890 GXR.ID=''                                                          GXR.ID=''

0966 ECD.NUM=9;SCV.REC(ECD.NUM)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.     ECD.NUM=9;SCV.REC(ECD.NUM)<1>=DIV.DESC;ECD.ACTION=5;CALL SCR
0967 END                                                                END
0968 1999*                                                              1999*
0969 RETURN                                                             RETURN
0970 2000 ECD.NUM=14                                                    2000 ECD.NUM=14
0971 *T25755 v                                                       |  *T23499 v
0972 IF DOS.OPER = '' AND TST # '' THEN                              |  IF DOS.OPER = "" AND TST # "" THEN
0973 ECD.DEFAULT = OPO.OPER.CODE<1,1,TST>                               ECD.DEFAULT = OPO.OPER.CODE<1,1,TST>
0974 END                                                                END
0975 *T25755 ^                                                       |  *T23499 ^

0995 MAT GEN.XREF.REC=''                                                MAT GEN.XREF.REC=''
0996 GXR.CO=CONO                                                        GXR.CO=CONO
0997 GXR.XREF=COST.CNTR                                                 GXR.XREF=COST.CNTR
0998 GXR.FILE=OPERATION                                                 GXR.FILE=OPERATION
0999 GXR.NAME="CCTR.OPER.1"                                             GXR.NAME="CCTR.OPER.1"
1000                                                                 >  *         GXR.TOP.LINE='OPERATION XREF SEARCH'
1001                                                                 >  *         GXR.HEADING<1,1>='OPER'
1002                                                                 >  *         GXR.ATT<1,2>=1
1003                                                                 >  *         GXR.LOC=4
1004 GXR.ID=''                                                          GXR.ID=''

1028 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1029 IF ECD.RET.VALUE='' OR ECD.RET.VALUE='END' THEN GOTO 3000          IF ECD.RET.VALUE='' OR ECD.RET.VALUE='END' THEN GOTO 3000
1030 GXR.XREF=VENDOR.XREF                                               GXR.XREF=VENDOR.XREF
1031 GXR.FILE=VEND                                                      GXR.FILE=VEND
1032 GXR.NAME="VEND"                                                    GXR.NAME="VEND"
1033                                                                 >  *         GXR.LOC=1
1034                                                                 >  *         GXR.TOP.LINE='VENDOR XREF SEARCH'
1035                                                                 >  *         GXR.HEADING<1,1>='VENDOR'
1036                                                                 >  *         GXR.HEADING<1,2>='VENDOR NAME'
1037                                                                 >  *         GXR.ATT<1,2>=1

1036                                                                 >  *         GXR.HEADING<1,2>='VENDOR NAME'
1037                                                                 >  *         GXR.ATT<1,2>=1
1038 GXR.ID=''                                                          GXR.ID=''
1039 GXR.SRCH.ID=ECD.RET.VALUE                                          GXR.SRCH.ID=ECD.RET.VALUE
1040 CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)               CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
1041                                                                 >  *  GXR.HEADING<1,2>='DESCRIPTION'
1042 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
1043 IF GXR.ID='' THEN SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000          IF GXR.ID='' THEN SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
1044 *T26556 v                                                       |  IF LEN(GXR.ID)=8 THEN
1045 * IF LEN(GXR.ID)=8 THEN                                         <  

1046 *   MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE                <  
1047 *     ERRMSG='MAIN VENDOR ':GXR.ID:' IS MISSING'                <  
1048 *     GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000       <  
1049 *   END                                                         <  
1050 *   SCV.REC(17)<1>=GXR.ID                                       <  
1051 *   SCV.REC(19)<1>=VEND.DESC                                    <  
1052 *   SCV.REC(21)<1>=VEND.ADDR1                                   <  

1053 *   SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP                      <  
1054 * END                                                           <  
1055 *T26556 ^                                                       <  
1056 MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE                       MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
1057                                                                 >  ERRMSG='MAIN VENDOR ':GXR.ID:' IS MISSING'
1058                                                                 >  GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
1059                                                                 >  END

1060                                                                 >  SCV.REC(17)<1>=GXR.ID
1061                                                                 >  SCV.REC(19)<1>=VEND.DESC
1062                                                                 >  SCV.REC(21)<1>=VEND.ADDR1
1063                                                                 >  SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
1064                                                                 >  END
1065                                                                 >  MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
1066 ERRMSG='VENDOR ':GXR.ID:' IS MISSING'                              ERRMSG='VENDOR ':GXR.ID:' IS MISSING'

1069 DOS.VEND=GXR.ID                                                    DOS.VEND=GXR.ID
1070 SCV.REC(16)<1>=DOS.VEND                                            SCV.REC(16)<1>=DOS.VEND
1071 SCV.REC(18)<1>=VEND.DESC                                           SCV.REC(18)<1>=VEND.DESC
1072 SCV.REC(20)<1>=VEND.ADDR1                                          SCV.REC(20)<1>=VEND.ADDR1
1073 SCV.REC(22)<1>=VEND.CT.ST:' ':VEND.ZIP                             SCV.REC(22)<1>=VEND.CT.ST:' ':VEND.ZIP
1074 *T26556v                                                        <  
1075 * SCV.REC(17)<1>=DOS.VEND                                       <  
1076 * SCV.REC(19)<1>=VEND.DESC                                      <  
1077 * SCV.REC(21)<1>=VEND.ADDR1                                     <  
1078 * SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP                        <  

1079 *T26556^                                                        <  
1080 GOSUB 21000                                                        GOSUB 21000
1081 END ELSE                                                           END ELSE
1082 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1083 *T26556 v                                                       |  IF LEN(ECD.RET.VALUE)=8 THEN
1084 *   IF LEN(ECD.RET.VALUE)=8 THEN                                |  MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE
1085 *     MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE       |  ERRMSG='MAIN VENDOR ':ECD.RET.VALUE:' IS MISSING'

1086 *       ERRMSG='MAIN VENDOR ':ECD.RET.VALUE:' IS MISSING'       |  GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
1087 *       GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000     <  
1088 *     END                                                       <  
1089 *     ECD.NUM=17;SCV.REC(ECD.NUM)<1>=ECD.RET.VALUE;ECD.ACTION=  <  
1090 *     ECD.NUM=19;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CA  <  
1091 *     ECD.NUM=21;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;C  <  
1092 *     ECD.NUM=23;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;E  <  

1093 *   END                                                         <  
1094 *T26556 ^                                                       <  
1095 END                                                                END
1096                                                                 >  ECD.NUM=17;SCV.REC(ECD.NUM)<1>=ECD.RET.VALUE;ECD.ACTION=5;CA
1097                                                                 >  ECD.NUM=19;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CALL S
1098                                                                 >  ECD.NUM=21;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;CALL 
1099                                                                 >  ECD.NUM=23;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;ECD.A

1100                                                                 >  END
1101                                                                 >  END
1102 DOS.VEND=ECD.RET.VALUE                                             DOS.VEND=ECD.RET.VALUE
1103 FOR I=1 TO VEND.REC.SIZE                                           FOR I=1 TO VEND.REC.SIZE
1104 VEND.REC(I)=ECD.VALDAT.ITEM<I>                                     VEND.REC(I)=ECD.VALDAT.ITEM<I>
1105 NEXT I                                                             NEXT I
1106 ECD.NUM=18;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CALL SCR     ECD.NUM=18;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CALL S

1107 ECD.NUM=20;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;CALL SC     ECD.NUM=20;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;CALL 
1108 ECD.NUM=22;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;ECD.ACT     ECD.NUM=22;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;ECD.A
1109 *T26556v                                                        <  
1110 * ECD.NUM=17;SCV.REC(ECD.NUM)<1>=DOS.VEND                       <  
1111 * ECD.ACTION=5;CALL SCRN.EDIT                                   <  
1112 * ECD.NUM=19;SCV.REC(ECD.NUM)<1>=VEND.DESC                      <  
1113 * ECD.ACTION=5;CALL SCRN.EDIT                                   <  
1114 * ECD.NUM=21;SCV.REC(ECD.NUM)<1>=VEND.ADDR1                     <  
1115 * ECD.ACTION=5;CALL SCRN.EDIT                                   <  

1116 * ECD.NUM=23;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP        <  
1117 * ECD.ACTION=5;CALL SCRN.EDIT                                   <  
1118 *T26556^                                                        <  
1119 END                                                                END
1120 RETURN                                                             RETURN
1121 4000 ECD.NUM=24                                                    4000 ECD.NUM=24
1122 BEGIN CASE                                                         BEGIN CASE

1126 DOS.TYPE=JOB.TYPE                                                  DOS.TYPE=JOB.TYPE
1127 CASE JOB.TYPE='S'                                                  CASE JOB.TYPE='S'
1128 SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION=5                  SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION=5
1129 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
1130 DOS.TYPE=JOB.TYPE                                                  DOS.TYPE=JOB.TYPE
1131                                                                 >  *          CASE JOB.TYPE='C'
1132                                                                 >  *            SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION
1133                                                                 >  *            CALL SCRN.EDIT
1134                                                                 >  *            DOS.TYPE=JOB.TYPE
1135                                                                 >  *          CASE JOB.TYPE = 'R'

1136                                                                 >  *            SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION
1137                                                                 >  *            CALL SCRN.EDIT
1138                                                                 >  *            DOS.TYPE=JOB.TYPE
1139 CASE 1                                                             CASE 1
1140 ECD.DEFAULT = JOB.TYPE                                             ECD.DEFAULT = JOB.TYPE
1141 ECD.ACTION=4 ;CALL SCRN.EDIT                                       ECD.ACTION=4 ;CALL SCRN.EDIT
1142                                                                 >  *            IF ECD.RET.VALUE # 'END' AND ECD.RET.VALUE # 'E

1147 END                                                                END
1148 END CASE                                                           END CASE
1149 BEGIN CASE                                                         BEGIN CASE
1150 CASE DOS.TYPE='N'                                                  CASE DOS.TYPE='N'
1151 SCV.REC(40)<ECD.SCRN.NO>="NON CHARGEABLE"                          SCV.REC(40)<ECD.SCRN.NO>="NON CHARGEABLE"
1152                                                                 >  *            ECD.NUM=38;SCV.REC(ECD.NUM)<1>=0
1153 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
1154 CASE DOS.TYPE='S'                                                  CASE DOS.TYPE='S'
1155 SCV.REC(40)<ECD.SCRN.NO>="SPOILAGE"                                SCV.REC(40)<ECD.SCRN.NO>="SPOILAGE"
1156                                                                 >  *            ECD.NUM=38;SCV.REC(ECD.NUM)<1>=0

1181 5900*                                                              5900*
1182 ECD.NUM = 43                                                       ECD.NUM = 43
1183 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
1184 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
1185 DOS.DATE=ECD.RET.VALUE                                             DOS.DATE=ECD.RET.VALUE
1186                                                                 >  *         GOSUB 6000
1187 END                                                                END
1188                                                                 >  *T24399 RETURN
1189                                                                 >  RETURN
1190 6000 ECD.NUM=27                                                    6000 ECD.NUM=27

1191 IF VPDS.PRESENT THEN                                               IF VPDS.PRESENT THEN
1192 * T26565 ECD.DEFAULT = VPDS.ORD.QTY                             |  *T26557 ECD.DEFAULT = VPDS.ORD.QTY
1193 ECD.DEFAULT = VPDS.ORD.QTY - SUM(VPDS.REC.QTY)                     ECD.DEFAULT = VPDS.ORD.QTY - SUM(VPDS.REC.QTY)
1194 END ELSE                                                           END ELSE
1195 * T26565 ECD.DEFAULT = OPO.QTY<1,TST>                           |  *T26557 ECD.DEFAULT = OPO.QTY<1,TST>
1196 ECD.DEFAULT = OPO.TOT.OPEN<1,TST>                                  ECD.DEFAULT = OPO.TOT.OPEN<1,TST>
1197 END                                                                END
1198 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT

1199 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
1200 DOS.QTY=ECD.RET.VALUE                                              DOS.QTY=ECD.RET.VALUE
1201 * T25097                                                        <  
1202 IF DOS.GRS.AMT # "" THEN                                        <  
1203 GOTO 9000                                                       <  
1204 END                                                                END
1205 * T25097                                                        <  
1206 END                                                             <  
1207 RETURN                                                             RETURN

1242 END                                                                END
1243 8999 RETURN                                                        8999 RETURN
1244 *                                                                  *
1245 9000*                                                              9000*
1246 ECD.NUM = 56                                                       ECD.NUM = 56
1247                                                                 >  *CSF 25121 v
1248 IF VPDS.PRESENT THEN                                               IF VPDS.PRESENT THEN
1249                                                                 >  *  DOS.U.PRICE = VPDS.ORD.UN.COST<1,1>
1250                                                                 >  *  SCV.REC(56)<1> = DOS.U.PRICE
1251 ECD.DEFAULT = VPDS.ORD.UN.COST<1,1>                                ECD.DEFAULT = VPDS.ORD.UN.COST<1,1>

1252                                                                 >  *  ECD.ACTION = 5 ; CALL SCRN.EDIT
1253 END ELSE                                                           END ELSE
1254 IF TST > 0 AND OPO.EST.COST<1,TST>+0 > 0 THEN                      IF TST > 0 AND OPO.EST.COST<1,TST>+0 > 0 THEN
1255 *T23319 v                                                       |  *CSF 25121 v
1256 BEGIN CASE                                                      |  IF OPO.UOM<1,TST> = 'M' THEN
1257 CASE OPO.UOM<1,TST> = 'M'                                       <  
1258 ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1,T     ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1

1259 CASE OPO.UOM<1,TST> = 'C'                                       |  END ELSE
1260                                                                 >  *T23119 v
1261                                                                 >  IF OPO.UOM<1,TST> = 'C' THEN
1262 ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1,T     ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1
1263 CASE 1                                                          |  END ELSE
1264                                                                 >  *T23119 ^
1265                                                                 >  *      ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100), "MD0

1266 ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / OPO.QTY<1,TS     ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / OPO.QTY<1,
1267 END CASE                                                        <  
1268 *T23319 ^                                                       <  
1269 END                                                                END
1270 END                                                                END
1271                                                                 >  *CSF 25121 ^
1272                                                                 >  END
1273                                                                 >  END

1274 ***                                                                ***
1275 *T25097  IF DOS.GRS.AMT+0 # 0 THEN                              |  IF DOS.GRS.AMT+0 # 0 THEN
1276 *T25097      ECD.DEFAULT=''; SCV.REC(56)<1> = ''                |  ECD.DEFAULT=''; SCV.REC(56)<1> = ''
1277 *T25097* T21670                                                 |  * T21670
1278 *T25097* IF OPO.UOM<1,TST> = 'M' THEN                           |  * IF OPO.UOM<1,TST> = 'M' THEN
1279 *T25097      IF DOS.UOM = "M" THEN                              |  IF DOS.UOM = "M" THEN
1280 *T25097* T21670                                                 |  * T21670
1281 *T25097          ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10  |  ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)

1282 *T25097      END ELSE                                           |  END ELSE
1283 *T25097          ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10  |  *T23119 v
1284 *T25097      END                                                |  IF DOS.UOM = 'C' THEN
1285 *T25097  END                                                    |  ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 1000000) + .5)
1286                                                                 >  END ELSE
1287                                                                 >  *T23119 ^
1288                                                                 >  ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)

1289                                                                 >  END
1290                                                                 >  END
1291                                                                 >  END
1292 ***                                                                ***
1293 ECD.ACTION = 4                                                     ECD.ACTION = 4
1294 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
1295 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN

1322 END CASE                                                           END CASE
1323 RETURN                                                             RETURN
1324 *                                                                  *
1325 9500*                                                              9500*
1326 ECD.NUM=30                                                         ECD.NUM=30
1327                                                                 >  *ECD.DEFAULT=OCONV(OPO.EST.COST<1,TST>,"MD0")
1328                                                                 >  *     SCV.REC(30)<1> = INT(((OCONV(DOS.U.PRICE,"MD4") * OCO
N
1329 SCV.REC(30)<1> = ""                                                SCV.REC(30)<1> = ""
1330 * 18746 v                                                          * 18746 v
1331 * T21670                                                           * T21670

1333 *   UNIT.COSTT = DOS.U.PRICE /1000                                 *   UNIT.COSTT = DOS.U.PRICE /1000
1334 *END ELSE                                                          *END ELSE
1335 *   UNIT.COSTT = DOS.U.PRICE                                       *   UNIT.COSTT = DOS.U.PRICE
1336 *END                                                               *END
1337 *ECD.DEFAULT = INT(((OCONV(UNIT.COSTT*10,"MD5") * OCONV(DOS.QT     *ECD.DEFAULT = INT(((OCONV(UNIT.COSTT*10,"MD5") * OCONV(DOS.
1338 *T23319 v                                                       |  IF DOS.UOM = "M" THEN
1339 BEGIN CASE                                                      <  
1340 CASE DOS.UOM = "M"                                              <  
1341 REAL.QTY = DOS.QTY / 1000                                          REAL.QTY = DOS.QTY / 1000
1342 CASE DOS.UOM = "C"                                              |  *T23319 v

1343                                                                 >  END ELSE
1344                                                                 >  IF DOS.UOM = 'C' THEN
1345 REAL.QTY = DOS.QTY / 100                                           REAL.QTY = DOS.QTY / 100
1346 CASE 1                                                          |  END ELSE
1347 REAL.QTY = DOS.QTY                                              <  
1348 END CASE                                                        <  
1349 * IF DOS.UOM = "M" THEN                                         <  

1350 *   REAL.QTY = DOS.QTY / 1000                                   <  
1351 * END ELSE                                                      <  
1352 *   REAL.QTY = DOS.QTY                                          <  
1353 * END                                                           <  
1354 *T23319 ^                                                          *T23319 ^
1355                                                                 >  REAL.QTY = DOS.QTY
1356                                                                 >  END

1357                                                                 >  END
1358 ECD.DEFAULT = INT((DOS.U.PRICE/10000) * REAL.QTY + .5)             ECD.DEFAULT = INT((DOS.U.PRICE/10000) * REAL.QTY + .5)
1359 * T21670                                                           * T21670
1360 *SAV.GRS.AMT = ECD.RET.VALUE                                       *SAV.GRS.AMT = ECD.RET.VALUE
1361 SAV.GRS.AMT = DOS.GRS.AMT                                          SAV.GRS.AMT = DOS.GRS.AMT
1362 *18746  ^                                                          *18746  ^
1363 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT

1364 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1365 DOS.GRS.AMT=ECD.RET.VALUE                                          DOS.GRS.AMT=ECD.RET.VALUE
1366 DOS.MER.AMT=ECD.RET.VALUE                                          DOS.MER.AMT=ECD.RET.VALUE
1367 DISC=VEND.TERMS<1,1>                                               DISC=VEND.TERMS<1,1>
1368 DOS.DSC.AMT=INT((DOS.MER.AMT * DISC[1,4]) /10000 + .5)             DOS.DSC.AMT=INT((DOS.MER.AMT * DISC[1,4]) /10000 + .5)
1369                                                                 >  *  IF REQUEST # "" AND NUM(REQUEST) THEN GOSUB 9900
1370                                                                 >  *  IF SAV.GRS.AMT # DOS.GRS.AMT THEN
1371 IF SAV.GRS.AMT+0 # 0 AND SAV.GRS.AMT # DOS.GRS.AMT AND NOT(COS     IF SAV.GRS.AMT+0 # 0 AND SAV.GRS.AMT # DOS.GRS.AMT AND NOT(C
1372 GOSUB 9000                                                         GOSUB 9000
1373 *    IF DOS.SALE.AMT + 0 # 0 THEN GOSUB 9900 ;*T21006              *    IF DOS.SALE.AMT + 0 # 0 THEN GOSUB 9900 ;*T21006

1379 SCV.REC(38)<1> = ''                                                SCV.REC(38)<1> = ''
1380 BEGIN CASE                                                         BEGIN CASE
1381 CASE DOS.TYPE="S" OR DOS.TYPE="N"                                  CASE DOS.TYPE="S" OR DOS.TYPE="N"
1382 DOS.SALE.AMT=0;SCV.REC(ECD.NUM)<1>=DOS.SALE.AMT                    DOS.SALE.AMT=0;SCV.REC(ECD.NUM)<1>=DOS.SALE.AMT
1383 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
1384                                                                 >  *     CASE DOS.SALE.AMT + 0 > 0
1385                                                                 >  *        ECD.DEFAULT=DOS.SALE.AMT
1386                                                                 >  *         ECD.ACTION=4;CALL SCRN.EDIT
1387                                                                 >  *        IF ECD.RET.VALUE # "END" THEN
1388                                                                 >  *           DOS.SALE.AMT=ECD.RET.VALUE

1389                                                                 >  *        END
1390 CASE WLR.OS.COST < 2                                               CASE WLR.OS.COST < 2
1391 DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.GRS.AMT) + .5)     DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.GRS.AMT) + .
1392 ECD.DEFAULT=DOS.SALE.AMT                                           ECD.DEFAULT=DOS.SALE.AMT
1393 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
1394 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
1395 DOS.SALE.AMT=ECD.RET.VALUE                                         DOS.SALE.AMT=ECD.RET.VALUE

1437 DOS.SALE.AMT=ECD.RET.VALUE                                         DOS.SALE.AMT=ECD.RET.VALUE
1438 END                                                                END
1439 END CASE                                                           END CASE
1440 RETURN                                                             RETURN
1441 10000                                                              10000 
1442 *T27521   ANCORE=1                                              |  ANCORE=1
1443                                                                 >  *       IF OPO.FND THEN
1444                                                                 >  *         IF OPO.ITEM.COMM # "" THEN
1445                                                                 >  *           ANCORE = 1
1446                                                                 >  *           GOSUB 10900

1447                                                                 >  *         END
1448                                                                 >  *       END ELSE
1449 IF DOS.DESC = '' THEN                                              IF DOS.DESC = '' THEN
1450 LINES=0                                                            LINES=0
1451 ACTION='A'                                                         ACTION='A'
1452 LOOP                                                               LOOP
1453 LN=LINES + 1                                                       LN=LINES + 1

1453 LN=LINES + 1                                                       LN=LINES + 1
1454 OLD.LINES=LINES                                                    OLD.LINES=LINES
1455 GOSUB 10100                                                        GOSUB 10100
1456 WHILE LINES > OLD.LINES DO REPEAT                                  WHILE LINES > OLD.LINES DO REPEAT
1457 LN=LINES                                                           LN=LINES
1458 *T27521 v                                                       |  END ELSE
1459 *  END ELSE                                                     <  
1460 END                                                             <  
1461 *T27521 ^                                                       <  
1462 LINES = DCOUNT(DOS.DESC,VM)                                        LINES = DCOUNT(DOS.DESC,VM)

1463 GOSUB 10900                                                        GOSUB 10900
1464 ANCORE=1                                                           ANCORE=1
1465 *T27521   END                                                   |  END
1466 LOOP                                                               LOOP
1467                                                                 >  *         IF OPO.FND THEN
1468 ECD.NUM=35                                                         ECD.NUM=35
1469                                                                 >  *         END ELSE
1470                                                                 >  *           ECD.NUM = 55
1471                                                                 >  *         END

1498 IF LN < 1 THEN LN=1                                                IF LN < 1 THEN LN=1
1499 OLD.START.LINE=0                                                   OLD.START.LINE=0
1500 END                                                                END
1501 GOSUB 10900                                                        GOSUB 10900
1502 CASE ACTION='S'                                                    CASE ACTION='S'
1503                                                                 >  *     IF OPO.ITEM.COMM # "" THEN
1504 IF DOS.DESC # "" THEN                                              IF DOS.DESC # "" THEN
1505 LN=LN + PAGE.SIZE                                                  LN=LN + PAGE.SIZE
1506 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
1507 GOSUB 10900                                                        GOSUB 10900

1508 END                                                                END
1509 * T25978 v                                                      <  
1510 CASE ACTION = 'SR'                                              <  
1511 LN -= PAGE.SIZE                                                 <  
1512 IF LN < 1 THEN LN = 1                                           <  
1513 GOSUB 10900                                                     <  
1514 CASE ACTION = 'ST'                                              <  
1515 LN = 1                                                          <  

1516 GOSUB 10900                                                     <  
1517 CASE ACTION = 'SB'                                              <  
1518 LN = LINES                                                      <  
1519 GOSUB 10900                                                     <  
1520 * T25978 ^                                                      <  
1521 END CASE                                                           END CASE
1522 WHILE ANCORE DO REPEAT                                             WHILE ANCORE DO REPEAT

1528 10200 X=5                                                          10200 X=5
1529 Y=SLN                                                              Y=SLN
1530 TYP=1                                                              TYP=1
1531 MAXL=70                                                            MAXL=70
1532 O.R='O'                                                            O.R='O'
1533 JUSTIFY = 'L' ; * T27521                                        |  *       IF OPO.FND THEN
1534                                                                 >  *         DEFAULT=OPO.INTRAL.INT<1,LN>
1535                                                                 >  *       END ELSE
1536 DEFAULT=DOS.DESC<1,LN>                                             DEFAULT=DOS.DESC<1,LN>
1537                                                                 >  *       END

1568 CNT=1                                                              CNT=1
1569 FOR N=START.LINE TO LAST.LINE                                      FOR N=START.LINE TO LAST.LINE
1570 SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
1571 P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""              P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
1572 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1573                                                                 >  *         IF OPO.FND THEN
1574                                                                 >  *           PRINT @(5,SLN) : OPO.ITEM.COMM<1,N,1> "L#70" :
1575                                                                 >  *         END ELSE
1576 P_X  = 5 ; P_Y = SLN ; P_VALUE = DOS.DESC<1,N> "L#70" ; P_OPT      P_X  = 5 ; P_Y = SLN ; P_VALUE = DOS.DESC<1,N> "L#70" ; P_OP
1577 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1578                                                                 >  *         END
1579 CNT=CNT + 1                                                        CNT=CNT + 1
1580 NEXT N                                                             NEXT N
1581 FOR M=CNT TO PAGE.SIZE                                             FOR M=CNT TO PAGE.SIZE
1582 SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)                   SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
1583 P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
1584 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1588 *                                                                  *
1589 * Get Vendor Prod Stats info   Task 18690                          * Get Vendor Prod Stats info   Task 18690
1590 *                                                                  *
1591 20000*                                                             20000*
1592 IF CO.APS.O.INTRF > 2 THEN                                         IF CO.APS.O.INTRF > 2 THEN
1593 *T25755 v                                                       <  
1594 *    VPDS.KEY = CONO:DOS.VEND:'!O!':DOS.PO:'!':DOS.JOB:"!":DOS  <  
1595 VPDS.KEY = CONO:DOS.VEND:'!O!':DOS.PO:'!':DOS.JOB:"!":DOS.PRD.     VPDS.KEY = CONO:DOS.VEND:'!O!':DOS.PO:'!':DOS.JOB:"!":DOS.PR
1596 *T25755 ^                                                       <  
1597 MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY THEN                MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY THEN

1607 OLD.START.LINE=0;GOSUB 10900                                       OLD.START.LINE=0;GOSUB 10900
1608 RETURN                                                             RETURN
1609 22000*                                                             22000*
1610 VALUE=""                                                           VALUE=""
1611 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
1612                                                                 >  IF JOB.STATUS<1,1> = 3 THEN RETURN        ;* T26942
1613 22010 X=0;Y=22;MAXL=3;TYP=1     ;*T21177                           22010 X=0;Y=22;MAXL=3;TYP=1     ;*T21177
1614 PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "          PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
1615 CALL EDIT.SUB                                                      CALL EDIT.SUB
1616 P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"

1631 RETURN                                                             RETURN
1632 93000ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                        93000ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
1633 99999*                                                             99999*
1634 ECD.ACTION = 99; CALL SCRN.EDIT                                    ECD.ACTION = 99; CALL SCRN.EDIT
1635 RETURN                                                             RETURN
1636                                                                 >  * PRINT  @(-1)
1637 END                                                                END
1638 


JCSBP/PNP.LOGON.RPT                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/PNP.LOGON.RPT
Printed for thompson at 06/28/2006 04:42:03PM

0009 * DESCRIPTION                                                      * DESCRIPTION
0010 *                                                                  *
0011 * Reports employees who are currently logged on to the shop-fl     * Reports employees who are currently logged on to the shop-
0012 * collection system.                                               * collection system.
0013 *                                                                  *
0014 * MAINTENANCE:                                                  |  *T24102 markt 10/13/1999 * Expand the shift code to 2 digits
0015 *                                                               <  
0016 * T26090 ajibaly 07/02/2002 * CONVERT TO R12 REPORT.SCRN        <  
0017 *                                                               <  
0018 **************************************************************     ************************************************************

0019 *                                                                  *
0020 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0021 *                                                                  *
0022 *COPY>JCS.CPYLIB>PNP.LOG                                           *COPY>JCS.CPYLIB>PNP.LOG
0023 *COPY>PMC.CPYLIB>EMPLOYEE                                          *COPY>PMC.CPYLIB>EMPLOYEE
0024 *COPY>PMC.CPYLIB>COMPANY                                        <  
0025 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0026 *                                                                  *
0027 *---- OPEN ALL FILES                                               *---- OPEN ALL FILES
0028 *                                                                  *

0027 *---- OPEN ALL FILES                                               *---- OPEN ALL FILES
0028 *                                                                  *
0029 OPEN "","PNP.LOG" TO PNP.LOG ELSE                                  OPEN "","PNP.LOG" TO PNP.LOG ELSE
0030 ERRMSG = "CANNOT OPEN PNP.LOG FILE"                                ERRMSG = "CANNOT OPEN PNP.LOG FILE"
0031 GOSUB 90000                                                        GOSUB 90000
0032 RETURN                                                          |  STOP
0033 END                                                                END
0034 OPEN "","EMPLOYEE" TO EMPLOYEE ELSE                                OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
0035 ERRMSG = "CANNOT OPEN EMPLOYEE FILE"                               ERRMSG = "CANNOT OPEN EMPLOYEE FILE"
0036 GOSUB 90000                                                        GOSUB 90000

0037 RETURN                                                          |  STOP
0038 END                                                                END
0039 OPEN "","COMPANY" TO COMPANY ELSE                               <  
0040 ERRMSG = "CANNOT OPEN COMPANY FILE"                             <  
0041 GOSUB 90000                                                     <  
0042 RETURN                                                          <  
0043 END                                                             <  

0042 RETURN                                                          <  
0043 END                                                             <  
0044 *                                                                  *
0045 *---- INITIALIZATION                                               *---- INITIALIZATION
0046 *                                                                  *
0047 PROCREAD BUFFER ELSE                                            |  HD1 = ""
0048 ERRMSG = "THIS PROGRAM MUST RUN FROM A PROC."                   |  HD2 = SPACE(33):"E M P L O Y E E S   L O G G E D   O N   R E
0049 GOSUB 90000                                                     <  
0050 RETURN                                                          <  
0051 END                                                             <  

0052 HD1      = ''                                                   <  
0053 HD2      = ''                                                   <  
0054 CONO     = BUFFER<1>                                            <  
0055 RPT.NUM  = BUFFER<2>                                            <  
0056 RPT.NAME = ''                                                   <  
0057 RPT.DATE = DATE()                                               <  
0058 MATREAD COMP.REC FROM COMPANY, CONO ELSE                        <  

0059 MAT COMP.REC = ""                                               <  
0060 END                                                             <  
0061 CALL GET.PROG.HEAD(CONO,CO.NAME,RPT.NAME,RPT.NUM,RPT.DATE,HD1,  <  
0062 ;* HD1 = ""                                                     <  
0063 ;* HD2 = SPACE(33):"E M P L O Y E E S   L O G G E D   O N   R   <  
0064 SH1 = "                                             <--- SIGN-     SH1 = "                                             <--- SIG
0065 SH2 = "        EMPLOYEE NAME            EMP#   SFT    DATE         SH2 = "        EMPLOYEE NAME            EMP#   SFT    DATE  

0089 MAT EMP.REC = ""                                                   MAT EMP.REC = ""
0090 END                                                                END
0091 PLINE = SPACE(132)                                                 PLINE = SPACE(132)
0092 PLINE[1,30] = EMP.LAST.NAME:", ":EMP.FRST.NAME                     PLINE[1,30] = EMP.LAST.NAME:", ":EMP.FRST.NAME
0093 PLINE[33,6] = EMP                                                  PLINE[33,6] = EMP
0094 PLINE[42,1] = PNPL.SHIFT                                        |  * T24102 v
0095                                                                 >  *      PLINE[42,1] = PNPL.SHIFT
0096                                                                 >  PLINE[41,2] = PNPL.SHIFT "R#2"
0097                                                                 >  * T24102 ^
0098 PLINE[46,8] = OCONV(PNPL.LOGON.DATE,"D2-")                         PLINE[46,8] = OCONV(PNPL.LOGON.DATE,"D2-")

0106 *---- PRINT PAGE HEADINGS                                          *---- PRINT PAGE HEADINGS
0107 *                                                                  *
0108 10000*                                                             10000*
0109 PRINT CHAR(12):                                                    PRINT CHAR(12):
0110 PAGE.NO = PAGE.NO + 1                                              PAGE.NO = PAGE.NO + 1
0111 PRINT HD1:PAGE.NO                                               |  PRINT HD1
0112 PRINT HD2                                                          PRINT HD2
0113 PRINT                                                              PRINT
0114 PRINT SH1                                                          PRINT SH1
0115 PRINT SH2                                                          PRINT SH2


JCSBP/POST.INVOICE                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.INVOICE
Printed for thompson at 06/28/2006 04:42:03PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0007 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0008                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0037 *T21761 lanny 03/27/1997 * Master/Sub Job combination not incl     *T21761 lanny 03/27/1997 * Master/Sub Job combination not in
0038 *                          Master costs in ISS record.             *                          Master costs in ISS record.
0039 *T21777 lanny 04/07/1997 * Correct updating of dates in Custom     *T21777 lanny 04/07/1997 * Correct updating of dates in Cust
0040 *                          records.                                *                          records.
0041 *T23278 markt 11/24/1998 * Make fiscal data multi-value by div     *T23278 markt 11/24/1998 * Make fiscal data multi-value by d
0042 *T25764 renee 07/25/2001 * Need to assign .DUE.DATE in .. copy  |  *T24584 edvard 07/12/2000 * CHANGE FOR NEW WIP REVERSAL PROC
0043 *T26334 epitka 12/19/2001 * REV12                               |  *T25415 lanny 08/31/2000 * Error in reversing wip on Multi-J
0044 *T27770 cmykleb 11/05/2003 * Do not update Invoice Sales Stats  |  *C37366 alex 11/09/2000 * Prgm is not updating JOB & INVOICE
0045 *                            invoice is a pre-bill.             |  *                         correctly. 
0046 *T27859 lross 12/29/2003 * T25900 left off REV12.               <  

0047 *T28296 lross 10/12/2004 * If a Master Job invoices sub-jobs w  <  
0048 *                          charges to master the Invoice Revie  <  
0049 *                          doesn't work properly.               <  
0050 *T28658 lross 08/30/2005 * If Invoice line-item is a TOT,SUB,S  <  
0051 *                          CHARGE.JOB does not get set.         <  
0052 *ENDDOC                                                            *ENDDOC
0053 **************************************************************     ************************************************************

0073 *COPY>PMC.CPYLIB>SHIP.VIA                                          *COPY>PMC.CPYLIB>SHIP.VIA
0074 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0075 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0076 *COPY>JCS.CPYLIB>COMMISSION                                        *COPY>JCS.CPYLIB>COMMISSION
0077 DIM SAVE.REC(60)                                                   DIM SAVE.REC(60)
0078 *T27770 v                                                       <  
0079 DIM HOLD.IVC.REC(IVC.REC.SIZE)                                  <  
0080 DIM HOLD.DI.REC(DI.REC.SIZE)                                    <  
0081 MAT HOLD.IVC.REC = ''                                           <  
0082 MAT HOLD.DI.REC = ''                                            <  

0083 MAT IVC.REC = ''                                                <  
0084 *T27770 ^                                                       <  
0085 *                                                                  *
0086 *--- SETUP SYSTEM ERROR MESSAGES                                   *--- SETUP SYSTEM ERROR MESSAGES
0087 *                                                                  *
0088 SYS.TYPE = 1                                                       SYS.TYPE = 1
0089 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

0159 *--- MAIN PROCESSING                                               *--- MAIN PROCESSING
0160 *                                                                  *
0161 READNEXT DI.ID ELSE GOTO 999999                                    READNEXT DI.ID ELSE GOTO 999999
0162 CONO = DI.ID[1,3]                                                  CONO = DI.ID[1,3]
0163 INVOICE.SFX = DI.ID[10,2]                                          INVOICE.SFX = DI.ID[10,2]
0164 *T27770 v                                                       <  
0165 FINAL.INVOICE = 0                                               <  
0166 IF INVOICE.SFX = '' THEN FINAL.INVOICE = 1                      <  
0167 *T27770 ^                                                       <  
0168 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 999999               MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 999999

0185 SCRN.HEAD = "DEBIT MEMO"                                           SCRN.HEAD = "DEBIT MEMO"
0186 CASE 1                                                             CASE 1
0187 SCRN.HEAD = "INVOICE"                                              SCRN.HEAD = "INVOICE"
0188 END CASE                                                           END CASE
0189 SCRN.HEAD = SCRN.HEAD : " POSTING PROCESS"                         SCRN.HEAD = SCRN.HEAD : " POSTING PROCESS"
0190 *      CALL GET.FISCAL.MONTH(CONO,POSTING.MON,SCRN.HEAD,"JCFIS  <  
0191 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,SCRN.HEAD,"JCFISCAL     CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,SCRN.HEAD,"JCFISC
0192 IF POSTING.MON = "END" THEN GOTO 999999                            IF POSTING.MON = "END" THEN GOTO 999999
0193 IF CO.ARS = "Y" THEN OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERR     IF CO.ARS = "Y" THEN OPEN "","OPEN.RECV" TO OPEN.RECV ELSE E
0194 IF CO.SAS = "Y" THEN                                               IF CO.SAS = "Y" THEN

0246 TOTAL.JOB.INV = ''                                                 TOTAL.JOB.INV = ''
0247 MULTI.JOB.NOS = ''                                                 MULTI.JOB.NOS = ''
0248 MULTI.JOB.DIV = ''                                                 MULTI.JOB.DIV = ''
0249 INVOICE.NO = DI.ID[4,99]                                           INVOICE.NO = DI.ID[4,99]
0250 INVOICE.SFX = DI.ID[10,2]                                          INVOICE.SFX = DI.ID[10,2]
0251 *T27770 v                                                       <  
0252 FINAL.INVOICE = 0                                               <  
0253 IF INVOICE.SFX = '' THEN FINAL.INVOICE = 1                      <  
0254 *T27770 ^                                                       <  
0255 PRE.BILLS = ""                                                     PRE.BILLS = ""

0381 ZERO.INV = ZERO.INV + 1                                            ZERO.INV = ZERO.INV + 1
0382 CHARGE.INV = DI.AMOUNT<1,I>                                        CHARGE.INV = DI.AMOUNT<1,I>
0383 TOTAL.INV = TOTAL.INV + DI.AMOUNT<1,I>                             TOTAL.INV = TOTAL.INV + DI.AMOUNT<1,I>
0384 IF MULTI.JOB THEN                                                  IF MULTI.JOB THEN
0385 MATREADU JOB.REC FROM JOB, CONO:CHARGE.JOB ELSE                    MATREADU JOB.REC FROM JOB, CONO:CHARGE.JOB ELSE
0386 DI.STATUS = "JOB ":CHARGE.JOB:" IS MISSING"; EDIT.ERR = 1; GOT  |  DI.STATUS = "JOB ":CHARGE.JOB:" IS MISSING"; EDIT.ERR = 1; G
0387 END                                                                END
0388 *CSF 18282                                                         *CSF 18282
0389 LOCATE CHARGE.JOB IN MULTI.JOB.NOS<1>,1 SETTING MX ELSE            LOCATE CHARGE.JOB IN MULTI.JOB.NOS<1>,1 SETTING MX ELSE
0390 INS CHARGE.JOB BEFORE MULTI.JOB.NOS<1,MX>                          INS CHARGE.JOB BEFORE MULTI.JOB.NOS<1,MX>

0422 JOB.INV.BAL<1,P1> = JOB.INV.BAL<1,P1> + 0                          JOB.INV.BAL<1,P1> = JOB.INV.BAL<1,P1> + 0
0423 JOB.TOT.BAL = JOB.TOT.BAL + 0                                      JOB.TOT.BAL = JOB.TOT.BAL + 0
0424 END                                                                END
0425 *                                                                  *
0426 LOCATE CHARGE.JOB IN INV.JOBS.TBL<1>,1 SETTING DD ELSE             LOCATE CHARGE.JOB IN INV.JOBS.TBL<1>,1 SETTING DD ELSE
0427 *T20962            IF INVOICE.SFX # "PB" THEN                   <  
0428 *T21777 v   IF INVOICE.SFX = "" THEN                            <  
0429 IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX #     IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX
0430 JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")                          JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
0431 JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)                  JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)

0456 END                                                                END
0457 *                                                                  *
0458 IF MULTI.JOB THEN                                                  IF MULTI.JOB THEN
0459 LOCATE(CHARGE.JOB,JOB.STACK,1;MULTI.POS) ELSE                      LOCATE(CHARGE.JOB,JOB.STACK,1;MULTI.POS) ELSE
0460 JOB.STACK<1,-1> = CHARGE.JOB                                       JOB.STACK<1,-1> = CHARGE.JOB
0461 JOB.WIP<1,1> = JOB.WIP<1,1> + 1                                 <  
0462 IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN         <  
0463 JOB.WIP<1,4> = POSTING.MON                                      <  
0464 END                                                                END
0465 IF JOB.WIP<1,5> < POSTING.MON THEN                              <  

0466 JOB.WIP<1,5> = POSTING.MON                                      <  
0467 END                                                                END
0468 END                                                             <  
0469 BEGIN CASE                                                      <  
0470 *T28820    CASE INVOICE.SFX = "CM"                              <  
0471 CASE INVOICE.SFX = "DM"                                         <  
0472 CASE INVOICE.SFX = "PB"                                         <  

0473 CASE 1                                                          <  
0474 GOSUB 16100  ;* GET 'BEFORE' COSTS                              <  
0475 CALL REVERSE.JOB.WIP(CONO,CHARGE.JOB,WIP.TYPE,WIP.PERCENT,WIP.  <  
0476 GOSUB 16200  ;* GET 'AFTER' COSTS                               <  
0477 IF DI.LAST = "Y" THEN                                           <  
0478 *T27859 v                                                       <  
0479 IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN                  <  

0480 CALL CLEAR.JOB.ALLOC(CONO,CHARGE.JOB) ;*T25900                  <  
0481 END                                                             <  
0482 *T27859 ^                                                       <  
0483 RESV.ACTION = "D"; DPTR = 0                                     <  
0484 CALL JOB.RESV.SUB(CONO,RESV.ACTION,DPTR,CHARGE.JOB)             <  
0485 * T20611                                                        <  
0486 IF RESV.ACTION # "D" AND RESV.ACTION # "" THEN                  <  

0487 DI.STATUS = RESV.ACTION; EDIT.ERR = 1; GOTO 1900                <  
0488 END                                                             <  
0489 * T20611                                                        <  
0490 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")           <  
0491 FOR M = MCNT TO 1 STEP -1                                       <  
0492 IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> =  <  
0493 JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":CHARG  <  

0494 MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE     <  
0495 JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)                     <  
0496 JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)                     <  
0497 JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)                     <  
0498 JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)                       <  
0499 JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)                       <  
0500 JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)                       <  

0501 JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)                       <  
0502 JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)                       <  
0503 JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)                       <  
0504 END                                                             <  
0505 END                                                             <  
0506 NEXT M                                                          <  
0507 END                                                             <  

0508 END CASE                                                        <  
0509 MATWRITE JOB.REC ON JOB, CONO:CHARGE.JOB                        <  
0510 END                                                             <  
0511 *                                                                  *
0512 BEGIN CASE                                                         BEGIN CASE
0513 CASE CHARGE.CAT = "TAX"                                            CASE CHARGE.CAT = "TAX"
0514 CHARGE.TAX = DI.AMOUNT<1,I>                                        CHARGE.TAX = DI.AMOUNT<1,I>

0571 TOTAL.DSC = TOTAL.DSC + CHARGE.DSC                                 TOTAL.DSC = TOTAL.DSC + CHARGE.DSC
0572 CASE CHARGE.CAT = "MSC"                                            CASE CHARGE.CAT = "MSC"
0573 CHARGE.MSC = DI.AMOUNT<1,I>                                        CHARGE.MSC = DI.AMOUNT<1,I>
0574 TOTAL.MSC = TOTAL.MSC + CHARGE.MSC                                 TOTAL.MSC = TOTAL.MSC + CHARGE.MSC
0575 END CASE                                                           END CASE
0576 IF MULTI.JOB THEN                                               |  *
0577                                                                 >  MATWRITE JOB.REC ON JOB, CONO:CHARGE.JOB         ;*C37366
0578                                                                 >  *T25145 v Update all jobs ISS record with Sales data.
0579 GOSUB 12000                                                        GOSUB 12000
0580 *----------- GET INVOICE SALES DATA FOR MULTI-JOBS -----------  |  IF CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHA

0581 BEGIN CASE                                                      <  
0582 CASE CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHA  <  
0583 GOSUB 16000  ;* INVOICE SALES SUBROUTINE                           GOSUB 16000  ;* INVOICE SALES SUBROUTINE
0584 CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LA  <  
0585 GOSUB 16000                                                     <  
0586 CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL  <  
0587 GOSUB 16000                                                     <  

0588 CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0                  <  
0589 GOSUB 16000                                                     <  
0590 CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0                <  
0591 GOSUB 16000                                                     <  
0592 CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0                <  
0593 GOSUB 16000                                                     <  
0594 END CASE                                                        <  

0595 *------------------------------------------                     <  
0596 END                                                                END
0597                                                                 >  *T25415 v Cost data will be updated in loop below.
0598                                                                 >  *------------------------------------------
0599 1890 *                                                             1890 *
0600 NEXT I                                                             NEXT I
0601 1900 *                                                          |  *1900 *

0602 IF EDIT.ERR THEN                                                |  CHARGE.INV = 0
0603 MATWRITE DI.REC ON DAILY.INVOICE, DI.ID                         |  CHARGE.TAX = 0
0604 GOTO 1999                                                       |  CHARGE.SHP = 0
0605                                                                 >  CHARGE.AGC = 0
0606                                                                 >  CHARGE.DSC = 0
0607                                                                 >  CHARGE.MSC = 0
0608                                                                 >  ;* according to the spec cost will be reversed from master a

0609                                                                 >  ;* all subjobs regardless of what jobs are being invoiced.
0610                                                                 >  *24584LOCATE(DI.JOB.NO,JOB.STACK,1;MULTI.POS) ELSE
0611                                                                 >  *24584  INS DI.JOB.NO BEFORE JOB.STACK<1,1>
0612                                                                 >  *24584END
0613                                                                 >  MATREAD JOB.REC FROM JOB,CONO:DI.JOB.NO THEN
0614                                                                 >  IF JOB.SUBS#"" THEN
0615                                                                 >  JOB.STACK<1> = DI.JOB.NO:VM:JOB.SUBS

0616                                                                 >  END ELSE
0617                                                                 >  JOB.STACK<1> = DI.JOB.NO
0618 END                                                                END
0619 DI.PROC.MON = POSTING.MON                                       |  END
0620 DI.PROC.DATE = TODAY                                            |  *24584
0621 DI.STATUS = ""                                                  |  FOR I = 1 TO DCOUNT(JOB.STACK,VM)
0622 IF TOTAL.INV = 0 AND ZERO.INV < 2 THEN ZERO.INV = "Y" ELSE ZER  |  CHARGE.JOB = JOB.STACK<1,I>

0623 *                                                               |  MATREADU JOB.REC FROM JOB, CONO:CHARGE.JOB ELSE
0624 IF NOT(MULTI.JOB) THEN                                          |  DI.STATUS = "JOB ":CHARGE.JOB:" IS MISSING"; EDIT.ERR = 1; G
0625                                                                 >  END
0626 JOB.WIP<1,1> = JOB.WIP<1,1> + 1                                    JOB.WIP<1,1> = JOB.WIP<1,1> + 1
0627 IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN            IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN
0628 JOB.WIP<1,4> = POSTING.MON                                         JOB.WIP<1,4> = POSTING.MON
0629 END                                                                END

0629 END                                                                END
0630 IF JOB.WIP<1,5> < POSTING.MON THEN                                 IF JOB.WIP<1,5> < POSTING.MON THEN
0631 JOB.WIP<1,5> = POSTING.MON                                         JOB.WIP<1,5> = POSTING.MON
0632 END                                                                END
0633 BEGIN CASE                                                         BEGIN CASE
0634 *T28820    CASE INVOICE.SFX = "CM"                              |  CASE INVOICE.SFX = "CM"
0635 CASE INVOICE.SFX = "DM"                                            CASE INVOICE.SFX = "DM"
0636 CASE INVOICE.SFX = "PB"                                            CASE INVOICE.SFX = "PB"
0637 CASE 1                                                             CASE 1
0638 GOSUB 16100  ;* GET 'BEFORE' COSTS                                 GOSUB 16100  ;* GET 'BEFORE' COSTS

0639 CALL REVERSE.JOB.WIP(CONO,DI.JOB.NO,WIP.TYPE,WIP.PERCENT,WIP.D  |  CALL CBN.REVERSE.JOB.WIP(CONO,CHARGE.JOB,WIP.TYPE,WIP.PERCEN
0640 GOSUB 16200  ;* GET 'AFTER' COSTS                                  GOSUB 16200  ;* GET 'AFTER' COSTS
0641                                                                 >  *24584 v
0642                                                                 >  ;*see if the charge job is a job that was invoiced. If so up
0643                                                                 >  ;*status of the job to invoiced.
0644                                                                 >  LOCATE CHARGE.JOB IN MULTI.JOB.NOS<1>,1 SETTING KK THEN
0645                                                                 >  IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX

0646                                                                 >  JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
0647                                                                 >  JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
0648                                                                 >  IF JOB.TRACK.DATE<1,9> = "" OR DI.DATE > JOB.TRACK.DATE<1,9>
0649                                                                 >  JOB.TRACK.DATE<1,9> = DI.DATE
0650                                                                 >  END
0651                                                                 >  END
0652                                                                 >  END

0653                                                                 >  *24584 ^
0654 IF DI.LAST = "Y" THEN                                              IF DI.LAST = "Y" THEN
0655 *T27859 v                                                       |  *24584 v
0656                                                                 >  JOB.TRACK.DATE<1,10> = TODAY
0657                                                                 >  JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")
0658                                                                 >  JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
0659                                                                 >  *24584 ^

0660                                                                 >  *C40045 v
0661 IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN                     IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN
0662 *T28658 v         CALL CLEAR.JOB.ALLOC(CONO,CHARGE.JOB) ;*T259  |  CALL CLEAR.JOB.ALLOC(CONO,CHARGE.JOB) ;*T25900
0663 CALL CLEAR.JOB.ALLOC(CONO,DI.JOB.NO) ;*T25900                   <  
0664 END                                                                END
0665 *T27859 ^                                                       |  *C40045 ^
0666 RESV.ACTION = "D"; DPTR = 0                                        RESV.ACTION = "D"; DPTR = 0

0667 CALL JOB.RESV.SUB(CONO,RESV.ACTION,DPTR,DI.JOB.NO);*TASK14221   |  CALL JOB.RESV.SUB(RESV.ACTION,DPTR,CONO,CHARGE.JOB);*TASK142
0668 * T20611                                                           * T20611
0669 IF RESV.ACTION # "D" AND RESV.ACTION # "" THEN                     IF RESV.ACTION # "D" AND RESV.ACTION # "" THEN
0670 DI.STATUS = RESV.ACTION; EDIT.ERR = 1; GOTO 1900                   DI.STATUS = RESV.ACTION; EDIT.ERR = 1; GOTO 1900
0671 END                                                                END
0672 * T20611                                                           * T20611
0673 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")

0687 END                                                                END
0688 END                                                                END
0689 NEXT M                                                             NEXT M
0690 END                                                                END
0691 END CASE                                                           END CASE
0692 MATWRITE JOB.REC ON JOB, CONO:DI.JOB.NO                         |  MATWRITE JOB.REC ON JOB, CONO:CHARGE.JOB
0693 CHARGE.JOB = DI.JOB.NO                                          <  
0694 CHARGE.INV = TOTAL.INV                                          <  
0695 CHARGE.TAX = TOTAL.TAX                                          <  
0696 CHARGE.SHP = TOTAL.SHP                                          <  

0697 CHARGE.AGC = TOTAL.AGC                                          <  
0698 CHARGE.DSC = TOTAL.DSC                                          <  
0699 CHARGE.MSC = TOTAL.MSC                                          <  
0700 GOSUB 12000                                          ;*ISS      <  
0701 *---- GET INVOICE SALES DATA --------------                        *---- GET INVOICE SALES DATA -------------- 
0702 IF FINAL.INVOICE THEN GOSUB 20000 ; * 27770                     |  TEST.COST = ABS(AFTER.LABOR.DCOST) + ABS(AFTER.LABOR.FFOH) +
0703 BEGIN CASE                                                      |  TEST.COST += ABS(AFTER.MATL.DCOST) + ABS(AFTER.MATL.FFOH) + 

0704 CASE CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHA  |  TEST.COST += ABS(AFTER.OSP.DCOST) + ABS(AFTER.OSP.FFOH)
0705 GOSUB 16000  ;* INVOICE SALES SUBROUTINE                        |  TEST.COST += ABS(AFTER.SHIP.DCOST) + ABS(AFTER.SHIP.FFOH)
0706 CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LA  |  TEST.COST += ABS(AFTER.MISC.DCOST) + ABS(AFTER.MISC.FFOH)
0707 GOSUB 16000                                                     |  GOSUB 12000       ;*C37366
0708 CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL  |  IF TEST.COST # 0 THEN
0709 GOSUB 16000                                                     |  GOSUB 16000  ;* Update Costs
0710 CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0                  |  END

0711 GOSUB 16000                                                     <  
0712 CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0                <  
0713 GOSUB 16000                                                     <  
0714 CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0                <  
0715 GOSUB 16000                                                     <  
0716 END CASE                                                        <  
0717 *------------------------------------------                        *------------------------------------------

0718                                                                 >  NEXT I
0719                                                                 >  *  T25415 END
0720                                                                 >  1900 *
0721                                                                 >  IF EDIT.ERR THEN
0722                                                                 >  MATWRITE DI.REC ON DAILY.INVOICE, DI.ID
0723                                                                 >  GOTO 1999
0724 END                                                                END

0725                                                                 >  DI.PROC.MON = POSTING.MON
0726                                                                 >  DI.PROC.DATE = TODAY
0727                                                                 >  DI.STATUS = ""
0728                                                                 >  IF TOTAL.INV = 0 AND ZERO.INV < 2 THEN ZERO.INV = "Y" ELSE Z
0729 *                                                                  *
0730 *---- UPDATE INVOICED CUSTOMER                                     *---- UPDATE INVOICED CUSTOMER
0731 *                                                                  *

0826 END ELSE                                                           END ELSE
0827 OR.DEPT = JOB.DEPT[1,2]                                            OR.DEPT = JOB.DEPT[1,2]
0828 END                                                                END
0829 OR.CCTR = GEN.CCTR                                                 OR.CCTR = GEN.CCTR
0830 END                                                                END
0831                                                                 >  *
0832 OR.PO = JOB.CUST.PO                                                OR.PO = JOB.CUST.PO
0833 OR.MON = POSTING.MON                                               OR.MON = POSTING.MON
0834                                                                 >  *        OR.DIV = JOB.DIV
0835                                                                 >  *        BEGIN CASE

0836                                                                 >  *        CASE MULTI.JOB
0837                                                                 >  *           OR.DEPT = GEN.DEPT
0838                                                                 >  *        CASE JOB.DEPT = "" OR JOB.DEPT = "XX"
0839                                                                 >  *           OR.DEPT = GEN.DEPT
0840                                                                 >  *        CASE 1
0841                                                                 >  *           OR.DEPT = JOB.DEPT[1,2]
0842                                                                 >  *        END CASE

0843                                                                 >  *        OR.CCTR = GEN.CCTR
0844 OR.INV.DATE = DI.DATE                                              OR.INV.DATE = DI.DATE
0845 OR.DUE.DATE = DI.DUE.DATE   ; * T25764                          <  
0846 OR.AS.DATE = DI.PROC.DATE                                          OR.AS.DATE = DI.PROC.DATE
0847 OR.TR.DATE = DI.DATE                                               OR.TR.DATE = DI.DATE
0848 BEGIN CASE                                                         BEGIN CASE
0849 CASE INVOICE.SFX = "CM"                                            CASE INVOICE.SFX = "CM"

0906 OR.CHK.AMT<1,PTR> = ""                                             OR.CHK.AMT<1,PTR> = ""
0907 END                                                                END
0908 MATWRITE OR.REC ON OPEN.RECV, DI.ID                                MATWRITE OR.REC ON OPEN.RECV, DI.ID
0909 END                                                                END
0910 IF CO.COMMISSION = "Y" THEN GOSUB 14000                            IF CO.COMMISSION = "Y" THEN GOSUB 14000
0911 *T28296 v                                                       <  
0912 IF MULTI.JOB THEN                                               <  
0913 MATREADU JOB.REC FROM JOB,CONO:DI.JOB.NO THEN                   <  
0914 LOCATE INVOICE.NO IN JOB.INV.NO<1>,1 SETTING FND THEN           <  
0915 IF JOB.INV.DATE<1,FND> = '' THEN                                <  

0916 JOB.INV.DATE<1,FND> = DI.DATE                                   <  
0917 IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX #  <  
0918 JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")                       <  
0919 JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)               <  
0920 IF JOB.TRACK.DATE<1,9> = "" OR DI.DATE > JOB.TRACK.DATE<1,9> T  <  
0921 JOB.TRACK.DATE<1,9> = DI.DATE                                   <  
0922 END                                                             <  

0923 END                                                             <  
0924 IF DI.LAST = "Y" THEN                                           <  
0925 JOB.TRACK.DATE<1,10> = TODAY                                    <  
0926 JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")                       <  
0927 JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)               <  
0928 END                                                             <  
0929 END                                                             <  

0930 END                                                             <  
0931 MATWRITE JOB.REC ON JOB,CONO:DI.JOB.NO                          <  
0932 END ELSE RELEASE JOB,CONO:DI.JOB.NO                             <  
0933 END                                                             <  
0934 *T28296 ^                                                       <  
0935 MATWRITE DI.REC ON INVOICE, DI.ID                                  MATWRITE DI.REC ON INVOICE, DI.ID
0936 DELETE DAILY.INVOICE, DI.ID                                        DELETE DAILY.INVOICE, DI.ID

0983 LOCATE INVOICE.NO IN JSS.INVOICE.NO<1>,1 SETTING PTR ELSE          LOCATE INVOICE.NO IN JSS.INVOICE.NO<1>,1 SETTING PTR ELSE
0984 PTR = COUNT(JSS.INVOICE.NO,VM) + (JSS.INVOICE.NO # "") + 1         PTR = COUNT(JSS.INVOICE.NO,VM) + (JSS.INVOICE.NO # "") + 1
0985 JSS.INVOICE.NO<1,PTR> = INVOICE.NO                                 JSS.INVOICE.NO<1,PTR> = INVOICE.NO
0986 JSS.INVOICE.DATE<1,PTR> = DI.DATE                                  JSS.INVOICE.DATE<1,PTR> = DI.DATE
0987 END                                                                END
0988                                                                 >  * JSS.INVOICE.AMT<1,PTR> = JSS.INVOICE.AMT<1,PTR> + CHARGE.I
0989                                                                 >  * JSS.INVOICE.TOTAL = JSS.INVOICE.TOTAL + CHARGE.INV - CHARG
0990 JSS.INVOICE.AMT<1,PTR> = JSS.INVOICE.AMT<1,PTR> + CHARGE.INV -     JSS.INVOICE.AMT<1,PTR> = JSS.INVOICE.AMT<1,PTR> + CHARGE.INV
0991 JSS.INVOICE.TOTAL = JSS.INVOICE.TOTAL + CHARGE.INV - CHARGE.TA     JSS.INVOICE.TOTAL = JSS.INVOICE.TOTAL + CHARGE.INV - CHARGE.
0992 JSS.INVOICE.TAX<1,PTR> = JSS.INVOICE.TAX<1,PTR> + CHARGE.TAX       JSS.INVOICE.TAX<1,PTR> = JSS.INVOICE.TAX<1,PTR> + CHARGE.TAX

1143 ISS.MASTER = CHARGE.JOB                                            ISS.MASTER = CHARGE.JOB
1144 END ELSE                                                           END ELSE
1145 ISS.MASTER = JOB.MASTER                                            ISS.MASTER = JOB.MASTER
1146 END                                                                END
1147 BEGIN CASE                                                         BEGIN CASE
1148 *T28820   CASE INVOICE.SFX = "CM"                               |  CASE INVOICE.SFX = "CM"
1149 CASE INVOICE.SFX = "DM"                                            CASE INVOICE.SFX = "DM"
1150 CASE INVOICE.SFX = "PB"                                            CASE INVOICE.SFX = "PB"
1151 CASE 1                                                             CASE 1
1152 *T21761 v                                                          *T21761 v

1205 TOT.SPOILAGE = TOT.SPOILAGE + JOB.SP.TCOST<1,SP,4>                 TOT.SPOILAGE = TOT.SPOILAGE + JOB.SP.TCOST<1,SP,4>
1206 TOT.DCOST = TOT.DCOST + JOB.SP.DCOST<1,SP>                         TOT.DCOST = TOT.DCOST + JOB.SP.DCOST<1,SP>
1207 TOT.SHIP = TOT.SHIP + JOB.SP.COST<1,SP>                            TOT.SHIP = TOT.SHIP + JOB.SP.COST<1,SP>
1208 *T21761  ISS.SHIP.DCOST = JOB.SP.COST<1,SP>                        *T21761  ISS.SHIP.DCOST = JOB.SP.COST<1,SP>
1209 NEXT SP                                                            NEXT SP
1210                                                                 >  *ISS.SPOILAGE = TOT.SPOILAGE
1211                                                                 >  *ISS.SHIP.COST = TOT.SHIP
1212 IF DI.LAST = "Y" AND INVOICE.SFX # "CM" THEN                       IF DI.LAST = "Y" AND INVOICE.SFX # "CM" THEN
1213 ISS.COMPLETE.DATE = TODAY                                          ISS.COMPLETE.DATE = TODAY
1214 IF ISS.LAST.INV.DATE = "" THEN ISS.LAST.INV.DATE = DI.DATE         IF ISS.LAST.INV.DATE = "" THEN ISS.LAST.INV.DATE = DI.DATE

1229 ISS.MISC.FFOH = AFTER.MISC.FFOH + ISS.MISC.FFOH                    ISS.MISC.FFOH = AFTER.MISC.FFOH + ISS.MISC.FFOH
1230 *T21761 ^                                                          *T21761 ^
1231 END CASE                                                           END CASE
1232 ISS.VALUE.ADDED = ISS.INVOICE.TOTAL - ( ISS.MATL.DCOST + ISS.O     ISS.VALUE.ADDED = ISS.INVOICE.TOTAL - ( ISS.MATL.DCOST + ISS
1233 IF CO.SAS = "Y" THEN                                               IF CO.SAS = "Y" THEN
1234 IF INVOICE.SFX # "PB" THEN ; * T27770                           |  *     MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":DI
1235 MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":CHARGE.JOB     MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":CHARGE.J
1236 END ; * T27770                                                  <  
1237 END                                                                END
1238 RETURN                                                             RETURN

1277 AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST            AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST
1278 AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH               AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH
1279 AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST            AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST
1280 AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH               AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH
1281 RETURN                                                             RETURN
1282 *T27770 v                                                       <  
1283 *                                                               <  
1284 *---- ROLL UP PRE-BILL INVOICE FOR INVOICE SALES STATS FIGURES  <  
1285 *                                                               <  
1286 20000 *                                                         <  

1287 MAT HOLD.IVC.REC = MAT IVC.REC                                  <  
1288 MAT HOLD.DI.REC = MAT DI.REC                                    <  
1289 INVOICE.VECTOR = JOB.INV.NO                                     <  
1290 NO.INV.VEC = DCOUNT(INVOICE.VECTOR<1>,VM)                       <  
1291 FOR NIV = 1 TO NO.INV.VEC                                       <  
1292 RINV.NO = INVOICE.VECTOR<1,NIV>                                 <  
1293 IF RINV.NO[7,2] = 'PB' THEN                                     <  

1294 MATREADU IVC.REC FROM INVOICE, CONO:RINV.NO THEN                <  
1295 IF IVC.PRE.BILL.MON = '' THEN                                   <  
1296 NO.IVC.CODES = DCOUNT(IVC.CHG.CODE<1>,VM)                       <  
1297 FOR DIL = 1 TO NO.IVC.CODES                                     <  
1298 BEGIN CASE                                                      <  
1299 CASE IVC.CHG.CODE<1,DIL> = 'TOT'                                <  
1300 CASE IVC.CHG.CODE<1,DIL> = 'SUM'                                <  

1301 CASE IVC.CHG.CODE<1,DIL> = 'CMT'                                <  
1302 CASE IVC.CHG.CODE<1,DIL> = 'SUBT'                               <  
1303 CASE 1                                                          <  
1304 CHARGE.INV = CHARGE.INV + IVC.AMOUNT<1,DIL>                     <  
1305 END CASE                                                        <  
1306 BEGIN CASE                                                      <  
1307 CASE IVC.CHG.CAT<1,DIL> = "TAX"                                 <  

1308 CHARGE.TAX = CHARGE.TAX + IVC.AMOUNT<1,DIL>                     <  
1309 CASE IVC.CHG.CAT<1,DIL> = "SHP"                                 <  
1310 CHARGE.SHP = CHARGE.SHP + IVC.AMOUNT<1,DIL>                     <  
1311 CASE 1                                                          <  
1312 END CASE                                                        <  
1313 NEXT DIL                                                        <  
1314 END                                                             <  

1315 END                                                             <  
1316 END                                                             <  
1317 NEXT NIV                                                        <  
1318 MAT IVC.REC = MAT HOLD.IVC.REC                                  <  
1319 MAT DI.REC = MAT HOLD.DI.REC                                    <  
1320 RETURN                                                          <  
1321 *T27770 ^                                                       <  


JCSBP/POST.MATL                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.MATL
Printed for thompson at 06/28/2006 04:42:04PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   |  *COPY>JCS.CPYLIB>COM.JOB
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   |  *COPY>JCS.CPYLIB>COM.JOB.MATL
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 **************************************************************     ************************************************************
0007 * REVISION   -[08.0B]                                           |  * REVISION    - [08.0B]
0008 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof

0009 * SYSTEM     -PRIMAC                                            |  * SYSTEM      - PRIMAC
0010 * SOURCE     -JCSBP                                             |  * SOURCE      - JCSBP
0011 * PROGRAM    -POST.MATL                                         |  * PROGRAM     - POST.MATL
0012 * AUTHOR     -ZIAD YAMOUT, C.B.A                                |  * AUTHOR      - ZIAD YAMOUT, C.B.A
0013 * DESCRIPTION                                                      * DESCRIPTION
0014 * This program posts DAILY.MATL record to JOB and JOB.MATL fil     * This program posts DAILY.MATL record to JOB and JOB.MATL f
0015 * The DAILY.MATL record is deleted.                                * The DAILY.MATL record is deleted.

0015 * The DAILY.MATL record is deleted.                                * The DAILY.MATL record is deleted.
0016 ******* renee 08/18/1997 * Putting changes Julie made in REV10     ******* renee 08/18/1997 * Putting changes Julie made in REV
0017 *                          REV11 for T21523 and C25667. (see b     *                          REV11 for T21523 and C25667. (see
0018 *C25667 GAT   05/09/1996 * CORRECT PC/MSI POST ON MINUTE CALC      *C25667 GAT   05/09/1996 * CORRECT PC/MSI POST ON MINUTE CAL
0019 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID NOT     *T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR ROLL/SKID N
0020                                                                 >  *C31949 Add 'X' to RSID compare.
0021 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.     *T23278 markt 11/20/1998 * Accumulate fiscal data by divisio
0022 *T26334 epitka 12/12/2001 * REV12                               |  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0023 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  |  *                             needing a authorization.
0024 *                             Whse.                             <  

0025 *T26334 epitka 04/04/2002 * R                                   <  
0026 *T26556 adelgado 05/10/2002 * Add validation for period checki  <  
0027 *                             serial level.                     <  
0028 *T26665 adelgado 07/05/2002 * Mods to recalculate Average cost  <  
0029 *                             posting to a future period.       <  
0030 *T26505 epitka 08/29/2002 * Force location from serial.         <  
0031 *T25740 epitka 01/17/2003 * fix 41358 csf                       <  

0032 *T27341 lross 03/17/2003 * PERIOD check will only work if DMT.  <  
0033 *                          ISTK.WHSE (or LOC diff).             <  
0034 *T27801 lross 03/17/2004 * Include check for qty adj in future  <  
0035 *T28199 lross 07/21/2004 * Check for Spoil Code.                <  
0036 **************************************************************     ************************************************************
0037 *                                                                  *
0038 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS

0047 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY
0048 *COPY>ICS.CPYLIB>INV.WHSE.LOC                                      *COPY>ICS.CPYLIB>INV.WHSE.LOC
0049 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0050 *COPY>ICS.CPYLIB>INV.STATS                                         *COPY>ICS.CPYLIB>INV.STATS
0051 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0052 *COPY>ICS.CPYLIB>INV_AUDIT_HIST                                 |  *COPY>ICS.CPYLIB>INV.TRAN.HIST
0053 *COPY>ICS.CPYLIB>INV.HIST                                          *COPY>ICS.CPYLIB>INV.HIST
0054 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0055 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0056 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT

0057 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0058 *COPY>ICS.CPYLIB>WAREHOUSE                                         *COPY>ICS.CPYLIB>WAREHOUSE
0059 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  * T21523
0060 *COPY>ICS.CPYLIB>INV.CNV                                        |  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0061                                                                 >  * T21523
0062 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0063 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0064 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0065 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR

0064 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0065 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0066 *                                                                  *
0067 *---- INTITIALIZATION                                              *---- INTITIALIZATION
0068 *                                                                  *
0069 *DIM ORG.IWH.REC(80) ; MAT ORG.IWH.REC=''                       |  MAT FILE.VARS = ''
0070 MAT FILE.VARS=''                                                |  MAT EDIT.COM.DRIVER = ''
0071 MAT EDIT.COM.DRIVER=''                                          |  MAT COMP.REC = ''
0072 MAT COMP.REC=''                                                 |  MAT JSI.REC = ""
0073 MAT JSI.REC=""                                                  |  MAT IH.REC = ""

0074 MAT IH.REC=""                                                   <  
0075 GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000"                 <  
0076 *                                                                  *
0077 *---- SETUP ERRMSG ROUTINE                                         *---- SETUP ERRMSG ROUTINE
0078 *                                                                  *
0079 SYS.TYPE=1                                                      |  SYS.TYPE = 1
0080 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)

0081 *                                                                  *
0082 PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM A PROC";GOTO 93000    |  ***** T23278 v
0083 DIV.CODE=XX<5>                                                  <  
0084 *                                                                  *
0085                                                                 >  PROCREAD XX ELSE ERRMSG = "MUST BE RUN FROM A PROC"; GOTO 93
0086                                                                 >  DIV.CODE = XX<5>
0087                                                                 >  *
0088                                                                 >  ***** T23278 ^

0089                                                                 >  *
0090 *---- OPEN FILES                                                   *---- OPEN FILES
0091 *                                                                  *
0092 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISS  |  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS 
0093 OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93  |  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GO
0094 OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG='SPOIL.STATS   |  OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG = 'SPOIL.ST
0095 OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG='DAILY.MATL FIL  |  OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG = 'DAILY.MATL

0096 OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG='JOB.MATL FILE IS M  |  OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE 
0097 OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG='PROD.STATS FIL  |  OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG = 'PROD.STATS
0098 OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG='COST.CNT  |  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST
0099 OPEN '','OJOB.MATL' TO OJOB.MATL ELSE ERRMSG='OJOB.MATL FILE I  |  OPEN '','OJOB.MATL' TO OJOB.MATL ELSE ERRMSG = 'OJOB.MATL FI
0100 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISS  |  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS 
0101 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS M  |  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE 
0102 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FI  |  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREEN

0103 OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS   |  OPEN '', 'DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE
0104 OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FI  |  OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMEN
0105 OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE   |  OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR F
0106 OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS M  |  OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE 
0107 OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE I  |  OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FI
0108 OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE I  |  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FI
0109 OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS M  |  OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE 

0110 OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG='INV.HIST FILE IS M  |  OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG = 'INV.HIST FILE 
0111 OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.L  |  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WH
0112 OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE ERRMSG='  |  OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FI
0113 OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG='INV.STATS FILE I  |  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.
0114 OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG='INV.JOB.  |  OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG = 'FOH.TABLE FI
0115 OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG='FOH.TABLE FILE I  |  OPEN '','INV.TRAN.HIST' TO INV.TRAN.HIST ELSE ERRMSG = 'INV.
0116 OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG='INV_AU  |  OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB

0117 OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STA  |  * T21523
0118 OPEN '', 'INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FI  |  OPEN '', 'ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG = 'R
0119 OPEN '', 'INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV  |  * T21523
0120 GANG.PRESENT=1                                                  |  ** TASK 16796 ************
0121 OPEN '','GANG.JOB' TO GANG.JOB ELSE GANG.PRESENT=0              |  GANG.PRESENT = 1
0122 OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE GANG.PRESENT=0          |  OPEN '','GANG.JOB' TO GANG.JOB ELSE GANG.PRESENT = 0
0123                                                                 >  OPEN '','GANG.ALLOC' TO GANG.ALLOC ELSE GANG.PRESENT = 0

0124                                                                 >  **************************
0125 *                                                                  *
0126 *---- SETUP VALUES FROM JCS.SCREENS                                *---- SETUP VALUES FROM JCS.SCREENS
0127 *                                                                  *
0128 ECD.ACTION=1                                                    |  ECD.ACTION = 1
0129 ECD.SCRN.CNT=1                                                  |  ECD.SCRN.CNT = 1
0130 ECD.SCRN.NAME='GET.FISCAL.MONTH'                                |  ECD.SCRN.NAME = 'GET.FISCAL.MONTH'

0131 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0132 ECD.SCRN.NO=1                                                   |  ECD.SCRN.NO = 1
0133 *                                                                  *
0134 *---- INTITIALIZATION                                              *---- INTITIALIZATION
0135 *                                                                  *
0136 MAT SCV.REC=""                                                  |  MAT SCV.REC = ""
0137 ECD.ACTION=2                                                    |  ECD.ACTION = 2
0138 CALL SCRN.EDIT                                                     CALL SCRN.EDIT

0139 DCNT=0                                                          |  DCNT = 0
0140 SAVE.ID=""                                                      |  SAVE.ID = ""
0141 SAVE.QTY=""                                                     |  SAVE.QTY = ""
0142 SAVE.STATUS=""                                                  |  SAVE.STATUS = ""
0143 EDIT.ERROR=0                                                    |  EDIT.ERROR = 0
0144 QTY.ERROR=0                                                     |  QTY.ERROR = 0
0145 PREV.PROD="!@#$%"                                               |  PREV.PROD = "!@#$%"

0146 PREV.WHSE="!@#$%"                                               |  PREV.WHSE = "!@#$%"
0147 PREV.LOC ="!@#$%"                                               |  PREV.LOC  = "!@#$%"
0148 PREV.SERIAL="!@#$%"                                             |  PREV.RSID = "!@#$%"
0149 *                                                                  *
0150 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0151 *                                                                  *
0152 READNEXT DMT.ID ELSE GOTO 99999                                    READNEXT DMT.ID ELSE GOTO 99999

0153 TODAY=DATE()                                                    |  TODAY = DATE()
0154 CONO=DMT.ID[1,3]                                                |  CONO = DMT.ID[1,3]
0155 JMT.ID=DMT.ID[4,99]                                             |  * T21523
0156                                                                 >  READ BCI FROM CONTROL,CONO:"RL.SK.CONTROL" ELSE BCI=""
0157                                                                 >  * T21523
0158                                                                 >  JMT.ID = DMT.ID[4,99]
0159 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999                MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999

0160 MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE        MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
0161 MAT WIP.LEVEL.REC=""                                            |  MAT WIP.LEVEL.REC = ""
0162 WLR.MT.COST=2;WLR.MT.WIP=2                                      |  WLR.MT.COST = 2; WLR.MT.WIP = 2
0163 END                                                                END
0164                                                                 >  *      CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POST
0165 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POSTING P     CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MATERIAL POSTING
0166 IF POSTING.MON="END" THEN GOTO 99999                            |  IF POSTING.MON = "END" THEN GOTO 99999
0167 MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE     MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" EL

0168 MAT JOB.CUTOFF.REC=''                                           |  MAT JOB.CUTOFF.REC = ''
0169 J.CUTOFF.NUM=0                                                  |  J.CUTOFF.NUM = 0
0170 END                                                                END
0171 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0172 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0173 GOTO 99999                                                         GOTO 99999
0174 END                                                                END

0175 GOSUB CHECK.DMT.REC                                             |  GOSUB 1000
0176 IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL                        |  IF DMT.STATUS = "" THEN GOSUB 1800; * T21523
0177 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0178 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0179 END ELSE                                                           END ELSE
0180 GOSUB CHECK.INVENTORY                                           |  GOSUB 1200
0181 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN

0182 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0183 END ELSE                                                           END ELSE
0184 GOSUB CHECK.QTY                                                 |  GOSUB 1500
0185 IF DMT.STATUS # "" THEN QTY.ERROR=1                             |  IF DMT.STATUS # "" THEN QTY.ERROR = 1
0186 END                                                                END
0187 END                                                                END
0188 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000

0189 PREV.PROD=DMT.PROD                                              |  PREV.PROD = DMT.PROD
0190 PREV.WHSE=DMT.WHSE                                              |  PREV.WHSE = DMT.WHSE
0191 PREV.LOC =DMT.LOC                                               |  PREV.LOC  = DMT.LOC
0192 PREV.SERIAL=DMT.SERIAL                                          |  PREV.RSID = DMT.R.S.ID
0193 RELEASE                                                            RELEASE
0194 *                                                                  *
0195 DATA=1                                                          |  DATA = 1

0196 LOOP                                                               LOOP
0197 READNEXT DMT.ID ELSE DATA=0                                     |  READNEXT DMT.ID ELSE DATA = 0
0198 WHILE DATA DO                                                      WHILE DATA DO
0199 IF DMT.ID[1,3] = CONO THEN                                      |  IF DMT.ID[1,3] # CONO THEN GOTO 999
0200 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                   |  MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0201 IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR DMT.LOC # P  |  RELEASE DAILY.MATL, DMT.ID
0202 SAVE.DMT.ID=DMT.ID                                              |  GOTO 999
0203 IF DCNT>0 THEN                                                  <  

0204 IF EDIT.ERROR OR QTY.ERROR THEN                                 <  
0205 GOSUB PROCESS.REJECTS                                           <  
0206 END ELSE                                                        <  
0207 GOSUB POST.SAVED.DATA                                           <  
0208 END                                                                END
0209 DMT.ID=SAVE.DMT.ID                                              |  *C31949 v Add 'X' to RSID compare
0210 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                   |  *        IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR 

0211 JMT.ID=DMT.ID[4,99]                                             |  IF DMT.PROD # PREV.PROD OR DMT.WHSE # PREV.WHSE OR DMT.LOC #
0212 DCNT=0                                                          |  *C31949 ^
0213 SAVE.ID=""                                                      |  SAVE.DMT.ID = DMT.ID
0214 SAVE.QTY=""                                                     |  BEGIN CASE
0215 SAVE.STATUS=""                                                  |  CASE DCNT = 0
0216 QTY.ERROR=0                                                     |  GOTO 900
0217 EDIT.ERROR=0                                                    |  CASE EDIT.ERROR OR QTY.ERROR

0218 PREV.PROD=DMT.PROD                                              |  GOSUB 2500
0219 PREV.WHSE=DMT.WHSE                                              |  CASE 1
0220 PREV.LOC =DMT.LOC                                               |  GOSUB 3000                  ;* POST SAVED DATA
0221 PREV.SERIAL=DMT.SERIAL                                          |  END CASE
0222 END ELSE                                                        |  DMT.ID = SAVE.DMT.ID
0223                                                                 >  MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0224 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID

0225 PREV.PROD="!@#$%"                                               |  PREV.PROD = "!@#$%"
0226 PREV.WHSE="!@#$%"                                               |  PREV.WHSE = "!@#$%"
0227 PREV.LOC ="!@#$%"                                               |  PREV.LOC  = "!@#$%"
0228 PREV.SERIAL="!@#$%"                                             |  PREV.RSID = "!@#$%"
0229 DMT.STATUS="Cannot re-access DAILY.MATL, ":DMT.ID               |  DMT.STATUS = "Cannot re-access DAILY.MATL, ":DMT.ID
0230 DCNT=0                                                          |  DCNT = 0
0231 SAVE.ID=""                                                      |  SAVE.ID = ""

0232 SAVE.QTY=""                                                     |  SAVE.QTY = ""
0233 SAVE.STATUS=""                                                  |  SAVE.STATUS = ""
0234 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0235 QTY.ERROR=0                                                     |  QTY.ERROR = 0
0236 QTY.USED=""                                                     |  QTY.USED = ""
0237 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000
0238                                                                 >  GOTO 999

0239 END                                                                END
0240                                                                 >  900 *
0241                                                                 >  JMT.ID = DMT.ID[4,99]
0242                                                                 >  DCNT = 0
0243                                                                 >  SAVE.ID = ""
0244                                                                 >  SAVE.QTY = ""
0245                                                                 >  SAVE.STATUS = ""
0246                                                                 >  QTY.ERROR = 0

0247                                                                 >  EDIT.ERROR = 0
0248                                                                 >  PREV.PROD = DMT.PROD
0249                                                                 >  PREV.WHSE = DMT.WHSE
0250                                                                 >  PREV.LOC  = DMT.LOC
0251                                                                 >  PREV.RSID = DMT.R.S.ID
0252 END                                                                END
0253 END                                                             |  GOSUB 1000

0254 IF NOT(EDIT.ERROR) THEN                                         |  IF DMT.STATUS = "" THEN GOSUB 1800; * T21523
0255 GOSUB CHECK.DMT.REC                                             <  
0256 IF DMT.STATUS='' THEN GOSUB CHECK.SERIAL                        <  
0257 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0258 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0259 END ELSE                                                           END ELSE
0260 GOSUB CHECK.INVENTORY                                           |  GOSUB 1200

0261 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0262 EDIT.ERROR=1                                                    |  EDIT.ERROR = 1
0263 END ELSE                                                           END ELSE
0264 GOSUB CHECK.QTY                                                 |  GOSUB 1500
0265 IF DMT.STATUS # "" THEN QTY.ERROR=1                             |  IF DMT.STATUS # "" THEN QTY.ERROR = 1
0266 END                                                                END
0267 END                                                                END
0268 GOSUB SET.SAVE.DATA                                             |  GOSUB 2000

0269 RELEASE                                                         |  990 RELEASE
0270 END                                                             |  999 REPEAT
0271 END ELSE                                                        <  
0272 RELEASE DAILY.MATL, DMT.ID                                      <  
0273 END                                                             <  
0274 END                                                             <  
0275 RELEASE                                                         <  

0276 REPEAT                                                          <  
0277 *                                                                  *
0278 BEGIN CASE                                                         BEGIN CASE
0279 CASE DCNT=0                                                     |  CASE DCNT = 0
0280 NULL                                                               NULL
0281 CASE EDIT.ERROR OR QTY.ERROR                                       CASE EDIT.ERROR OR QTY.ERROR
0282 GOSUB PROCESS.REJECTS                                           |  GOSUB 2500

0283 CASE 1                                                             CASE 1
0284 GOSUB POST.SAVED.DATA                                           |  GOSUB 3000
0285 END CASE                                                           END CASE
0286 *                                                               <  
0287 GOTO 99999                                                         GOTO 99999
0288 *                                                                  *
0289 **************************************************************  |  *---- EDIT DAILY.MATL RECORD
0290 **** S U B R O U T I N E S ***********************************  <  

0291 **************************************************************  <  
0292 *                                                                  *
0293 ***************                                                 <  
0294 CHECK.DMT.REC:                                                  <  
0295 ***************                                                 <  
0296 *                                                               <  
0297 ERR=0                                                           <  

0298 1000 *                                                             1000 *
0299 POST.OSJ=0;DMT.STATUS='';QTY.USED=""                            |  POST.OSJ = 0; DMT.STATUS = ''; QTY.USED = ""
0300 MATREADU JOB.REC FROM JOB, CONO : DMT.JOB ELSE                     MATREADU JOB.REC FROM JOB, CONO : DMT.JOB ELSE
0301 MAT JOB.REC=''                                                  |  MAT JOB.REC = ''
0302 FND=0                                                           |  FND = 0
0303 IF NUM(DMT.JOB) THEN                                               IF NUM(DMT.JOB) THEN
0304 IF DMT.JOB < J.CUTOFF.NUM THEN FND=1                            |  IF DMT.JOB < J.CUTOFF.NUM THEN FND = 1
0305 END ELSE                                                           END ELSE

0306 JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)                               |  JC.CNT = DCOUNT(J.CUTOFF.PREFIX,VM)
0307 FOR L=1 TO JC.CNT WHILE FND=0                                   |  FOR L = 1 TO JC.CNT WHILE FND = 0
0308 PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)                             |  PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)
0309 IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN               |  IF J.CUTOFF.PREFIX<1,L> = DMT.JOB[1,PREFX.LEN] THEN
0310 CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]           |  CHK.VALUE = DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
0311 IF NUM(CHK.VALUE) THEN                                             IF NUM(CHK.VALUE) THEN
0312 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1

0312 IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1                  |  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1
0313 END                                                                END
0314 END                                                                END
0315 NEXT L                                                             NEXT L
0316 END                                                                END
0317 IF FND=1 THEN                                                   |  IF FND = 1 THEN
0318 POST.OSJ=1                                                      |  POST.OSJ = 1
0319 JOB.DIV=DMT.DIV                                                 |  JOB.DIV = DMT.DIV
0320 JOB.TYPE=DMT.TYPE                                               |  JOB.TYPE = DMT.TYPE
0321 END ELSE                                                           END ELSE

0322 DMT.STATUS='JOB #':DMT.JOB:' MISSING';ERR=1                     |  DMT.STATUS = 'JOB #':DMT.JOB:' MISSING'; GOTO 1099
0323 END                                                                END
0324 END                                                                END
0325 IF NOT(ERR) THEN                                                <  
0326 BEGIN CASE                                                         BEGIN CASE
0327 CASE JOB.STATUS<1,1>=9                                          |  CASE JOB.STATUS<1,1> = 9
0328 DMT.STATUS="JOB #":DMT.JOB:" CANCELLED";ERR=1                   |  DMT.STATUS = "JOB #":DMT.JOB:" CANCELLED"; GOTO 1099

0329 CASE JOB.STATUS<1,1>=7                                          |  CASE JOB.STATUS<1,1> = 7
0330 DMT.STATUS="JOB #":DMT.JOB:" READY TO PURGE";ERR=1              |  DMT.STATUS = "JOB #":DMT.JOB:" READY TO PURGE"; GOTO 1099
0331 CASE JOB.STATUS<1,1>=8                                          |  CASE JOB.STATUS<1,1> = 8
0332 DMT.STATUS="JOB #":DMT.JOB:" IS PURGED";ERR=1                   |  DMT.STATUS = "JOB #":DMT.JOB:" IS PURGED"; GOTO 1099
0333                                                                 >  CASE JOB.STATUS<1,1> = 3              ;* T26942
0334 CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC     CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TR
0335 IF DMT.INIT="" THEN                                             |  IF DMT.INIT = "" THEN

0336 DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUT  |  DMT.STATUS = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS.
0337 ERR=1                                                           |  GOTO 1099
0338 END ELSE                                                           END ELSE
0339 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE
0340 DMT.STATUS='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUT  |  DMT.STATUS = 'JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS.
0341 ERR=1                                                           |  GOTO 1099
0342 END                                                                END

0343 END                                                                END
0344 END CASE                                                           END CASE
0345 END                                                             <  
0346 IF NOT(ERR) THEN                                                <  
0347 IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN                     IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
0348 DMT.STATUS="JOB/TYPE MISMATCH"                                  |  DMT.STATUS = "JOB/TYPE MISMATCH"; GOTO 1099
0349 END ELSE                                                        |  END
0350 IF JOB.DIV # DMT.DIV THEN                                          IF JOB.DIV # DMT.DIV THEN
0351 DMT.STATUS='JOB/DIV MISMATCH'                                   |  DMT.STATUS = 'JOB/DIV MISMATCH'; GOTO 1099

0352 END ELSE                                                        |  END
0353 * T26497 v                                                      |  MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.
0354 IF DMT.WHSE = CO.INTR.WHSE AND CO.INTR.WHSE # '' THEN           <  
0355 DMT.STATUS = 'UNABLE TO USE MATERIAL FROM INTER-DIVISIONAL WAR  <  
0356 END ELSE                                                        <  
0357 * T26497 ^                                                      <  
0358 MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.RE  <  

0359 IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN                       IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN
0360 DMT.STATUS='JOB/WHS DIV MISMATCH'                               |  DMT.STATUS = 'JOB/WHS DIV MISMATCH' ; GOTO 1099
0361 END ELSE                                                        |  END
0362 IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
0363 DMT.STATUS='JOB/DEPT MISMATCH'                                  |  DMT.STATUS = 'JOB/DEPT MISMATCH'; GOTO 1099
0364 END ELSE                                                        <  
0365 MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV THEN              <  
0366 MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT THEN          <  

0367 LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT THEN          <  
0368 MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR THEN           <  
0369 IF CCTR.DEPT = DMT.DEPT THEN                                    <  
0370 IF CCTR.TYPE#'F' THEN                                           <  
0371 LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE        <  
0372 DMT.STATUS='DEPT/CCTR MISMATCH'                                 <  
0373 END                                                                END

0374 END ELSE                                                        |  MATREAD DIV.REC FROM DIVISION, CONO : DMT.DIV ELSE
0375 DMT.STATUS='CCTR ':DMT.CCTR:' IS FROZEN'                        |  DMT.STATUS = 'DIV ':DMT.DIV:' MISSING'; GOTO 1099
0376 END                                                                END
0377 END ELSE                                                        |  MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMT.DEPT ELSE
0378 DMT.STATUS='DEPT/CCTR MISMATCH'                                 |  DMT.STATUS = 'DEPT ':DMT.DEPT:' MISSING'; GOTO 1099
0379 END                                                                END
0380 END ELSE                                                        |  LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE

0381 DMT.STATUS='CCTR ':DMT.CCTR:' MISSING'                          |  DMT.STATUS = 'DIV/DEPT MISMATCH'; GOTO 1099
0382 END                                                                END
0383 END ELSE                                                        |  MATREAD CCTR.REC FROM COST.CNTR, CONO : DMT.CCTR ELSE
0384 DMT.STATUS='DIV/DEPT MISMATCH'                                  |  DMT.STATUS = 'CCTR ':DMT.CCTR:' MISSING'; GOTO 1099
0385 END                                                                END
0386 END ELSE                                                        |  IF CCTR.DEPT # DMT.DEPT THEN
0387 DMT.STATUS='DEPT ':DMT.DEPT:' MISSING'                          |  DMT.STATUS = 'DEPT/CCTR MISMATCH'; GOTO 1099

0388 END                                                                END
0389 END ELSE                                                        |  IF CCTR.TYPE = 'F' THEN
0390 DMT.STATUS='DIV ':DMT.DIV:' MISSING'                            |  DMT.STATUS='CCTR ':DMT.CCTR:' IS FROZEN'; GOTO 1099
0391 END                                                                END
0392                                                                 >  LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
0393                                                                 >  DMT.STATUS = 'DEPT/CCTR MISMATCH'; GOTO 1099
0394 END                                                                END
0395 END                                                             |  1099 RETURN

0396 END     ;* T26497                                               <  
0397 END                                                             <  
0398 END                                                             <  
0399 END                                                             <  
0400 *T28199 v                                                       <  
0401 IF CO.SPOIL.FLG='Y' AND DMT.TYPE='S' THEN                       <  
0402 IF DMT.SPOIL.CODE = '' THEN                                     <  

0403 IF DMT.STATUS='' THEN                                           <  
0404 DMT.STATUS='Spoilage Code Missing'                              <  
0405 END ELSE                                                        <  
0406 DMT.STATUS:=VM:'Spoilage Code Missing'                          <  
0407 END                                                             <  
0408 END                                                             <  
0409 END                                                             <  

0410 *T28199 ^                                                       <  
0411 RETURN                                                          <  
0412 *                                                                  *
0413 *****************                                               |  *---- EDIT INVENTORY DATA
0414 CHECK.INVENTORY:                                                <  
0415 *****************                                               <  
0416 *                                                                  *

0417 HOLD.QTY=DMT.QTY                                                |  1200 *
0418 HOLD.STK.QTY=DMT.STK.QTY                                        |  HOLD.QTY = DMT.QTY
0419 DMT.QTY=0                                                       |  HOLD.SHEET = DMT.SHEET
0420 DMT.STK.QTY=0                                                   |  DMT.QTY = 0
0421                                                                 >  DMT.SHEET = 0
0422 JWPTR=''                                                           JWPTR=''
0423 MAT INAH.REC=''                                                 |  CALL POST.MATL.SUB ("P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.N

0424 * T26665 v                                                      |  DMT.QTY = HOLD.QTY
0425 * CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,  |  DMT.SHEET = HOLD.SHEET
0426 CALL POST.MATL.SUB (CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WL  <  
0427 * T26665 ^                                                      <  
0428 DMT.QTY=HOLD.QTY                                                <  
0429 DMT.STK.QTY=HOLD.STK.QTY                                        <  
0430 RETURN                                                             RETURN

0431 *                                                                  *
0432 ******************                                              |  *---- EDIT CUMULATIVE QUANTITY
0433 CHECK.QTY:                                                      <  
0434 ******************                                              <  
0435 *                                                                  *
0436 GOSUB GET.INV.UM.CNV                                            |  1500 *
0437 IF DMT.SERIAL="" OR IWLO.SERIAL="" THEN                         |  BEGIN CASE
0438 QTY.ON.HAND=IWLO.LOC.ON.HAND                                    |  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"

0439                                                                 >  ICR.CNV = "MD0"
0440                                                                 >  ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
0441                                                                 >  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
0442                                                                 >  ICR.CNV = "MD0"
0443                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 10
0444                                                                 >  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
0445                                                                 >  ICR.CNV = "MD0"

0446                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
0447                                                                 >  END CASE
0448                                                                 >  IF DMT.R.S.ID = "" OR IWLO.R.S.ID = "" THEN
0449                                                                 >  WGT.ON.HAND = IWLO.LOC.ON.HAND
0450 END ELSE                                                           END ELSE
0451 LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE         |  LOCATE DMT.R.S.ID IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE
0452 RLOC=1                                                          |  RLOC = 1

0453 END                                                                END
0454 *  QTY.ON.HAND=IWLO.CURR.WT<1,RLOC>                             |  WGT.ON.HAND = IWLO.CURR.WT<1,RLOC>
0455 QTY.ON.HAND=ISTK.CUR.QTY                                        <  
0456 END                                                                END
0457 BEGIN CASE                                                         BEGIN CASE
0458 CASE DMT.RS.QTYPE=""                                            |  CASE DMT.RS.QTYPE = ""
0459 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0460 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)

0461 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0462 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0463 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0464 END ELSE                                                           END ELSE
0465 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0466 END                                                                END
0467 CASE DMT.RS.QTYPE="WU"                                          |  CASE DMT.RS.QTYPE = "WU"

0468 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0469 *T27341 v insert                                                |  QTY.USED = DMT.QTY
0470 IF ABS(QTY.REM-DMT.QTY) <= 9 THEN                               |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0471 DMT.QTY=QTY.REM                                                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0472                                                                 >  CASE DMT.RS.QTYPE = "WR"
0473                                                                 >  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0474                                                                 >  QTY.USED = QTY.REM - DMT.QTY

0475                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0476                                                                 >  *PRINT "*** DMT.ID = ":DMT.ID:" ***": 
0477                                                                 >  *PRINT "*** QTY.USED = ":QTY.USED:" ***": 
0478                                                                 >  *PRINT "*** QTY.REM = ":QTY.REM:" ***": 
0479                                                                 >  *PRINT "*** DMT.QTY = ":DMT.QTY:" ***": 
0480                                                                 >  CASE DMT.RS.QTYPE = "SU"
0481                                                                 >  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)

0482                                                                 >  IF ABS(QTY.REM - DMT.QTY) <= 50 THEN
0483                                                                 >  DMT.QTY = QTY.REM
0484 END                                                                END
0485 *T27341 ^                                                       |  QTY.USED = DMT.QTY
0486 QTY.USED=DMT.QTY                                                |  *        C25667
0487 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            <  
0488 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 <  

0489 CASE DMT.RS.QTYPE="WR"                                          <  
0490 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               <  
0491 QTY.USED=QTY.REM-DMT.QTY                                        <  
0492 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 <  
0493 CASE DMT.RS.QTYPE="SU"                                          <  
0494 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               <  
0495 IF ABS(QTY.REM-DMT.QTY) <= 50 THEN                              <  

0496 DMT.QTY=QTY.REM                                                 <  
0497 END                                                             <  
0498 QTY.USED=DMT.QTY                                                <  
0499 BEGIN CASE                                                         BEGIN CASE
0500 CASE INV.UNIT<1,3>="MSI"                                        |  CASE INV.UNIT<1,3> = "MSI"
0501 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  *                IF ABS(QTY.REM - DMT.QTY) <= 50 THEN
0502 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  *                    DMT.QTY = QTY.REM

0503                                                                 >  *                    QTY.USED = DMT.QTY
0504                                                                 >  *                END ELSE
0505                                                                 >  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0506                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0507                                                                 >  *                END
0508 CASE 1                                                             CASE 1
0509 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"

0510 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0511 END CASE                                                           END CASE
0512 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  *        C25667  ^
0513 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0514 CASE DMT.RS.QTYPE="SR"                                          |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0515 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  CASE DMT.RS.QTYPE = "SR"
0516 QTY.USED=QTY.REM-DMT.QTY                                        |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)

0517 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  QTY.USED = QTY.REM - DMT.QTY
0518 CASE DMT.RS.QTYPE="DR"                                          |  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"
0519 QTY=(((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100*INV.CORE.D  |  CASE DMT.RS.QTYPE = "DR"
0520                                                                 >  *PRINT '*** DMT.QTY = ': DMT.QTY: ' ***':
0521                                                                 >  QTY = (((DMT.QTY/1000*DMT.QTY/1000)-(INV.CORE.DIA/100*INV.CO
0522 BEGIN CASE                                                         BEGIN CASE
0523 CASE QTY <= 0                                                      CASE QTY <= 0

0524 QTY=0                                                           |  QTY = 0
0525 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0526 QTY.USED=QTY.REM                                                |  QTY.USED = QTY.REM
0527 CASE INV.PAP.TYPE="ROLL"                                        |  CASE INV.PAP.TYPE = "ROLL"
0528 QTY=INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000)/10  |  QTY = INT((QTY/1000)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000
0529 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0530 QTY.USED=QTY.REM-QTY                                            |  QTY.USED = QTY.REM - QTY

0531 CASE INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"               |  CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
0532 BEGIN CASE                                                         BEGIN CASE
0533 CASE INV.UNIT<1,2>="FT"                                         |  CASE INV.UNIT<1,2> = "FT"
0534 QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/12+0.5)         |  QTY = INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/12+0.5)
0535 CASE INV.UNIT<1,2>="PC"                                         |  CASE INV.UNIT<1,2> = "PC"
0536 QTY=INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/10+0.5)         |  QTY = INT((QTY/1000)*3.1416/4*(100000/INV.FACTOR)/10+0.5)
0537 END CASE                                                           END CASE

0538 QTY=INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)                    |  QTY = INT(((QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+0.5)
0539 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0540 QTY.USED=QTY.REM-QTY                                            |  QTY.USED = QTY.REM - QTY
0541 END CASE                                                           END CASE
0542 IF QTY.USED <= 0 THEN DMT.STATUS="QUANTITY ???"                 |  *PRINT '*** QTY.REM = ': QTY.REM: ' ***':
0543                                                                 >  *PRINT '*** QTY.USED = ': QTY.USED: ' ***':
0544                                                                 >  IF QTY.USED <= 0 THEN DMT.STATUS = "QUANTITY ???"

0545 CASE 1                                                             CASE 1
0546 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0547 QTY.REM=QTY.ON.HAND-SUM(SAVE.QTY)                               |  QTY.REM = WGT.ON.HAND - SUM(SAVE.QTY)
0548 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0549 IF QTY.USED > QTY.REM THEN DMT.STATUS="QUANTITY ???"            |  IF QTY.USED > QTY.REM THEN DMT.STATUS = "QUANTITY ???"
0550 END ELSE                                                           END ELSE
0551 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0552 END                                                                END

0551 QTY.USED=DMT.QTY                                                |  QTY.USED = DMT.QTY
0552 END                                                                END
0553 END CASE                                                           END CASE
0554 RETURN                                                             RETURN
0555 *                                                                  *
0556 **************                                                  |  *---- CHECK ROLL.SKID RECORD
0557 CHECK.SERIAL:                                                   <  
0558 **************                                                  <  
0559 *                                                                  *
0560 IF DMT.SERIAL # '' THEN                                         |  1800 *

0561 MATREAD ISTK.REC FROM INV_SERIAL, CONO:DMT.SERIAL THEN          |  * T21523
0562 IF ISTK.POST.DATE="" THEN                                       |  IF (BCI<3> = "Y" OR BCI<4> = "Y") AND (DMT.R.S.ID # "") THEN
0563 DMT.STATUS="SERIAL NOT RECVD"                                   |  MATREAD RSKI.REC FROM ROLL.SKID.INFO, CONO:DMT.R.S.ID THEN
0564 END ELSE                                                        |  IF RSKI.POST.DATE = "" THEN
0565 IF ISTK.WHSE # DMT.WHSE OR ISTK.LOC#DMT.LOC THEN                |  DMT.STATUS = "ROLL/SKID NOT RECVD"
0566 IF ISTK.WHSE # DMT.WHSE THEN                                    <  
0567 DMT.STATUS ='Serial is in different warehouse.'                 <  

0568 END                                                                END
0569 IF ISTK.LOC# DMT.LOC THEN DMT.LOC=ISTK.LOC                      <  
0570 *T27341 ;* T26556 v                                             <  
0571 *       IF ISTK.RECP.PERIOD GT POSTING.MON THEN                 <  
0572 *         DMT.STATUS = 'Serial was received after the posting   <  
0573 *       END                                                     <  
0574 ;* T26556 ^                                                     <  
0575 END                                                                END

0576 *T27341 v Moved outside of "IF" above.                          <  
0577 IF ISTK.RECP.PERIOD GT POSTING.MON THEN                         <  
0578 DMT.STATUS = 'Serial was received after the posting period'     <  
0579 END                                                                END
0580 *T27801 v                                                       <  
0581 IF ISTK.FUTR.AUDIT.NO # '' THEN                                 <  
0582 FOR FF = 1 TO DCOUNT(ISTK.FUTR.AUDIT.NO,VM)                     <  

0583 MATREAD INAH.REC FROM INV_AUDIT_HIST,CONO:ISTK.FUTR.AUDIT.NO<1  <  
0584 IF INAH.PERIOD > POSTING.MON THEN                               <  
0585 ISTK.CUR.QTY -= INAH.QTY                                        <  
0586 ISTK.RSVB.QTY -= INAH.QTY                                       <  
0587 END                                                             <  
0588 END                                                             <  
0589 NEXT FF                                                         <  

0590 IF ISTK.CUR.QTY <= 0 THEN                                       <  
0591 DMT.STATUS='No serial quantity available in current period'     <  
0592 END                                                             <  
0593 END                                                             <  
0594 *T27801 ^                                                       <  
0595 END                                                             <  
0596 END                                                             <  

0597 END                                                             <  
0598 RETURN                                                             RETURN
0599                                                                 >  * T21523
0600 *                                                                  *
0601 ****************                                                |  *---- SAVE RELEVENT DATA FOR SUBSEQUENT PROCESSING
0602 SET.SAVE.DATA:                                                  <  
0603 ****************                                                <  

0604 *                                                                  *
0605 DCNT=DCNT+1                                                     |  2000 *
0606 SAVE.ID<DCNT>=DMT.ID                                            |  DCNT = DCNT + 1
0607 SAVE.QTY<DCNT>=QTY.USED                                         |  SAVE.ID<DCNT> = DMT.ID
0608 SAVE.STATUS<DCNT>=DMT.STATUS                                    |  SAVE.QTY<DCNT> = QTY.USED
0609                                                                 >  SAVE.STATUS<DCNT> = DMT.STATUS
0610 RETURN                                                             RETURN
0611 *                                                                  *

0612 ****************                                                |  *---- PROCESS REJECTS
0613 PROCESS.REJECTS:                                                <  
0614 ****************                                                <  
0615 *                                                                  *
0616 FOR DPTR=1 TO DCNT                                              |  2500 *
0617 DMT.ID=SAVE.ID<DPTR>                                            |  FOR DPTR = 1 TO DCNT
0618                                                                 >  DMT.ID = SAVE.ID<DPTR>

0619 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID THEN
0620 STATUS=SAVE.STATUS<DPTR>                                        |  STATUS = SAVE.STATUS<DPTR>
0621 BEGIN CASE                                                         BEGIN CASE
0622 CASE STATUS # ""                                                   CASE STATUS # ""
0623 DMT.STATUS=STATUS                                               |  DMT.STATUS = STATUS
0624 CASE EDIT.ERROR                                                    CASE EDIT.ERROR
0625 DMT.STATUS="PRODUCT HOLD"                                       |  DMT.STATUS = "PRODUCT HOLD"
0626 CASE QTY.ERROR                                                     CASE QTY.ERROR

0627 DMT.STATUS="QUANTITY ???"                                       |  DMT.STATUS = "QUANTITY ???"
0628 END CASE                                                           END CASE
0629 MATWRITE DMT.REC ON DAILY.MATL, DMT.ID                             MATWRITE DMT.REC ON DAILY.MATL, DMT.ID
0630 END ELSE                                                           END ELSE
0631 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0632 END                                                                END
0633 NEXT DPTR                                                       |  2599 NEXT DPTR

0634 RETURN                                                             RETURN
0635 *                                                                  *
0636 *****************                                               |  *---- POST PREVIOUSLY SAVED DATA
0637 POST.SAVED.DATA:                                                <  
0638 *****************                                               <  
0639 *                                                                  *
0640 ERRFLG=0                                                        |  3000 *
0641 FOR DPTR=1 TO DCNT UNTIL ERRFLG                                 |  ERRFLG = 0
0642 DMT.ID=SAVE.ID<1>                                               |  FOR DPTR = 1 TO DCNT UNTIL ERRFLG

0643 JMT.ID=DMT.ID[4,99]                                             |  DMT.ID = SAVE.ID<1>
0644                                                                 >  JMT.ID = DMT.ID[4,99]
0645 MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE                      MATREADU DMT.REC FROM DAILY.MATL, DMT.ID ELSE
0646 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0647 SAVE.STATUS<1>="Cannot re-access DAILY.MATL, ":DMT.ID           |  SAVE.STATUS<1> = "Cannot re-access DAILY.MATL, ":DMT.ID
0648 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0649 END                                                                END

0650 GOSUB CHECK.DMT.REC                                             |  GOSUB 1000
0651 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0652 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0653 SAVE.STATUS<1>="Posting failure for DAILY.MATL, ":DMT.ID        |  SAVE.STATUS<1> = "Posting failure for DAILY.MATL, ":DMT.ID
0654 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0655 END                                                                END
0656 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE                 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE

0657 RELEASE DAILY.MATL, DMT.ID                                         RELEASE DAILY.MATL, DMT.ID
0658 SAVE.STATUS<1>="Cannot re-access INVENTORY, ":DMT.PROD          |  SAVE.STATUS<1> = "Cannot re-access INVENTORY, ":DMT.PROD
0659 EDIT.ERROR=1;ERRFLG=1;GOTO 3099                                 |  EDIT.ERROR = 1; ERRFLG = 1; GOTO 3099
0660 END                                                                END
0661 DMT.QTY=SAVE.QTY<1>                                             |  DMT.QTY = SAVE.QTY<1>
0662 GOSUB GET.INV.UM.CNV                                            |  BEGIN CASE
0663 DMT.STK.QTY=INT(((DMT.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2+0.5)      |  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
0664                                                                 >  ICR.CNV = "MD0"

0665                                                                 >  ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
0666                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0667                                                                 >  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
0668                                                                 >  ICR.CNV = "MD0"
0669                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 10
0670                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0671                                                                 >  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"

0672                                                                 >  ICR.CNV = "MD0"
0673                                                                 >  ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
0674                                                                 >  DMT.SHEET = INT(((DMT.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + 
0675                                                                 >  END CASE
0676 JWPTR=''                                                           JWPTR=''
0677 MAT INAH.REC=''                                                 |  CALL POST.MATL.SUB ("F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.N
0678 * T26665 v                                                      <  

0679 * CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,  <  
0680 CALL POST.MATL.SUB (CONO,"F",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WL  <  
0681 * T26665 ^                                                      <  
0682 IF DMT.STATUS # "" THEN                                            IF DMT.STATUS # "" THEN
0683 RELEASE                                                            RELEASE
0684 SAVE.STATUS<1>=DMT.STATUS                                       |  SAVE.STATUS<1> = DMT.STATUS
0685 QTY.ERROR=1;ERRFLG=1;GOTO 3099                                  |  QTY.ERROR = 1; ERRFLG = 1; GOTO 3099

0686 END                                                                END
0687 GOSUB POST.MATL                                                 |  GOSUB 4000
0688 SAVE.ID=DELETE(SAVE.ID,1,0,0)                                   |  SAVE.ID = DELETE(SAVE.ID,1,0,0)
0689 SAVE.QTY=DELETE(SAVE.QTY,1,0,0)                                 |  SAVE.QTY = DELETE(SAVE.QTY,1,0,0)
0690 SAVE.STATUS=DELETE(SAVE.STATUS,1,0,0)                           |  SAVE.STATUS = DELETE(SAVE.STATUS,1,0,0)
0691 3099 NEXT DPTR                                                     3099 NEXT DPTR
0692 IF ERRFLG THEN                                                     IF ERRFLG THEN
0693 DCNT=DCOUNT(SAVE.ID,AM)                                         |  DCNT = DCOUNT(SAVE.ID,AM)

0694 GOSUB PROCESS.REJECTS                                           |  GOSUB 2500
0695 END                                                                END
0696 RETURN                                                             RETURN
0697 *                                                                  *
0698 ***************                                                 |  *---- POST MATERIAL ENTRY
0699 POST.MATL:                                                      <  
0700 ***************                                                 <  

0701 *                                                                  *
0702                                                                 >  4000 *
0703 BEGIN CASE                                                         BEGIN CASE
0704 CASE POST.OSJ=0                                                 |  CASE POST.OSJ = 0
0705                                                                 >  MATWRITE JMT.REC ON JOB.MATL, JMT.ID
0706 MATWRITE JOB.REC ON JOB, CONO : DMT.JOB                            MATWRITE JOB.REC ON JOB, CONO : DMT.JOB
0707 MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD                     MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
0708 IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE                         |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE

0709 IH.ID=CONO : DMT.PROD                                           |  IH.ID = CONO : DMT.PROD
0710 IF ISTAT.JOB="" AND ISTAT.PO="" THEN                            |  IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
0711 DELETE INV.STATS, IWH.ID                                           DELETE INV.STATS, IWH.ID
0712 END ELSE                                                           END ELSE
0713 MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID                         MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
0714 END                                                                END
0715 IF IJS.JOB.QTY+IJS.JOB.ALOC+IJS.REQ.QTY=0 AND IJS.JMT.SEQ="" T  |  IF IJS.JOB.QTY+IJS.JOB.ALOC+IJS.REQ.QTY = 0 AND IJS.JMT.SEQ 

0722 MATWRITE SSR.REC ON SPOIL.STATS, SSR.ID                            MATWRITE SSR.REC ON SPOIL.STATS, SSR.ID
0723 END                                                                END
0724 IF CCW.ID # "" THEN                                                IF CCW.ID # "" THEN
0725 MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID                          MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
0726 END                                                                END
0727 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0728 GOSUB SET.INAH                                                  |  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
0729 ACTION=4                                                        <  
0730 JOB.ID=CONO:DMT.JOB                                             <  
0731 PERIOD=POSTING.MON                                              <  

0732 BEGIN CASE                                                      <  
0733 CASE CATG.TRK.LVL='S'                                           <  
0734 TMP.ARR= DMT.SERIAL                                             <  
0735 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0736 CASE CATG.TRK.LVL='G'                                           <  
0737 TMP.ARR=DMT.LOC                                                 <  
0738 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  

0739 END CASE                                                        <  
0740 MATWRITE IH.REC ON INV.HIST, IH.ID                                 MATWRITE IH.REC ON INV.HIST, IH.ID
0741                                                                 >  MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":DMT.LOC
0742                                                                 >  PTR = 0; ITH.ID = IWH.ID : '!' : TODAY
0743                                                                 >  MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
0744                                                                 >  MAT ITH.REC = ''; PTR = 1
0745 END                                                                END

0746 MATWRITE JMT.REC ON JOB.MATL, JMT.ID                            |  IF PTR = 0 THEN PTR = DCOUNT(ITH.TYPE,VM) + 1
0747                                                                 >  ITH.TYPE<1,PTR> = 'S'; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0748                                                                 >  ITH.TRAN<1,PTR> = JMT.SEQ; ITH.JOB<1,PTR> = DMT.JOB
0749                                                                 >  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS
0750                                                                 >  MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
0751                                                                 >  END
0752 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID

0753                                                                 >  ** TASK 16796 ************
0754 IF GANG.PRESENT THEN                                               IF GANG.PRESENT THEN
0755 READV REC FROM GANG.JOB,CONO:DMT.JOB,1 THEN                        READV REC FROM GANG.JOB,CONO:DMT.JOB,1 THEN
0756 MTL.ID=JMT.ID[4,99]                                                MTL.ID=JMT.ID[4,99]
0757 JDPTR=DCOUNT(JMT.DCOST,VM)                                         JDPTR=DCOUNT(JMT.DCOST,VM)
0758 STATUS=""                                                          STATUS=""
0759 CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,G

0760 IF STATUS # "" THEN                                                IF STATUS # "" THEN
0761 P_X =0;P_Y=23;P_VALUE=@(-4):STATUS;P_OPT=""                     |  P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4):STATUS ; P_OPT = ""
0762 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0763 INPUT REPLY,1:                                                     INPUT REPLY,1:
0764 P_X =0;P_Y=23;P_VALUE=@(-4);P_OPT=""                            |  P_X  = 0 ; P_Y = 23 ; P_VALUE = @(-4) ; P_OPT = ""
0765 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0766 END                                                                END
0767 END                                                                END

0768 END                                                                END
0769                                                                 >  **************************
0770 CASE 1                                                             CASE 1
0771 MAT OJMT.REC=''                                                 |  MAT OJMT.REC = ''
0772 OJMT.JOB=DMT.JOB                                                |  OJMT.JOB = DMT.JOB
0773 OJMT.TYPE=JMT.TYPE                                              |  OJMT.TYPE = JMT.TYPE
0774 OJMT.SPOIL.CODE=JMT.SPOIL.CODE                                  |  OJMT.SPOIL.CODE = JMT.SPOIL.CODE
0775 OJMT.DIV=JMT.DIV                                                |  OJMT.DIV = JMT.DIV

0776 OJMT.DEPT=DMT.DEPT                                              |  OJMT.DEPT = DMT.DEPT
0777 OJMT.CCTR=DMT.CCTR                                              |  OJMT.CCTR = DMT.CCTR
0778 OJMT.PROD=DMT.PROD                                              |  OJMT.PROD = DMT.PROD
0779 OJMT.WHSE=DMT.WHSE                                              |  OJMT.WHSE = DMT.WHSE
0780 OJMT.LOC=JMT.LOC                                                |  OJMT.LOC = JMT.LOC
0781 OJMT.DATE=JMT.DATE                                              |  OJMT.DATE = JMT.DATE
0782 OJMT.MON=POSTING.MON                                            |  OJMT.MON = POSTING.MON

0783 OJMT.QTY=JMT.QTY                                                |  OJMT.QTY = JMT.QTY
0784 OJMT.DIAM=JMT.DIAM                                              |  OJMT.DIAM = JMT.DIAM
0785 OJMT.SHEET=JMT.SHEET                                            |  OJMT.SHEET = JMT.SHEET
0786 OJMT.R.S.ID=JMT.R.S.ID                                          |  OJMT.R.S.ID = JMT.R.S.ID
0787 OJMT.PTR=JMT.PTR                                                |  OJMT.PTR = JMT.PTR
0788 OJMT.COST=JMT.COST                                              |  OJMT.COST = JMT.COST
0789 OJMT.SALE=JMT.SALE                                              |  OJMT.SALE = JMT.SALE

0790 MATWRITE OJMT.REC ON OJOB.MATL, DMT.ID                             MATWRITE OJMT.REC ON OJOB.MATL, DMT.ID
0791 MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD                     MATWRITE INV.REC ON INVENTORY, CONO : DMT.PROD
0792 IF CATG.TRACK.QOH="Y" THEN                                      |  IF CATG.TRACK.QOH = "Y" THEN
0793 IWH.ID=CONO : DMT.PROD : '!' : DMT.WHSE                         |  IWH.ID = CONO : DMT.PROD : '!' : DMT.WHSE
0794 GOSUB SET.INAH                                                  |  IH.ID = CONO : DMT.PROD
0795 ACTION=4                                                        |  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
0796 JOB.ID=CONO:DMT.JOB                                             <  
0797 PERIOD=POSTING.MON                                              <  
0798 BEGIN CASE                                                      <  

0799 CASE CATG.TRK.LVL='S'                                           <  
0800 TMP.ARR= DMT.SERIAL                                             <  
0801 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0802 CASE CATG.TRK.LVL='G'                                           <  
0803 TMP.ARR=DMT.LOC                                                 <  
0804 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  <  
0805 END CASE                                                        <  

0806 IH.ID=CONO : DMT.PROD                                           <  
0807 MATWRITE IH.REC ON INV.HIST, IH.ID                                 MATWRITE IH.REC ON INV.HIST, IH.ID
0808                                                                 >  MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":DMT.LOC
0809                                                                 >  PTR = 0; ITH.ID = IWH.ID : '!' : TODAY
0810                                                                 >  MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
0811                                                                 >  MAT ITH.REC = ''; PTR = 1
0812 END                                                                END

0813                                                                 >  IF PTR = 0 THEN PTR = DCOUNT(ITH.TYPE,VM) + 1
0814                                                                 >  ITH.TYPE<1,PTR> = 'S'; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0815                                                                 >  ITH.TRAN<1,PTR> = JMT.SEQ; ITH.JOB<1,PTR> = DMT.JOB
0816                                                                 >  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS
0817                                                                 >  MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
0818                                                                 >  END
0819 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID

0818                                                                 >  END
0819 DELETE DAILY.MATL, DMT.ID                                          DELETE DAILY.MATL, DMT.ID
0820 END CASE                                                           END CASE
0821 RETURN                                                             RETURN
0822 *                                                                  *
0823 ***************                                                 <  
0824 SET.INAH:                                                       <  
0825 ***************                                                 <  
0826 *                                                               <  
0827 IF WHS.DIV='' THEN WHS.DIV=GEN.DIV                              <  

0828 INAH.PROD=DMT.PROD                                              <  
0829 INAH.WHSE=DMT.WHSE                                              <  
0830 INAH.TYPE='S'                                                   <  
0831 INAH.SRC='U'                                                    <  
0832 INAH.DATE=DMT.DATE                                              <  
0833 INAH.PERIOD=POSTING.MON                                         <  
0834 INAH.JOB=DMT.JOB                                                <  

0835 INAH.RECP.NO=ISTK.RECP                                          <  
0836 INAH.LOC=DMT.LOC                                                <  
0837 INAH.TRAN=DMT.JOB                                               <  
0838 INAH.SERIAL=DMT.SERIAL                                          <  
0839 INAH.QTY = INAH.NEW.QTY - INAH.CUR.QTY                          <  
0840 INAH.DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR                       <  
0841 RETURN                                                          <  

0842 *                                                               <  
0843 ****************                                                <  
0844 GET.INV.UM.CNV:                                                 <  
0845 ****************                                                <  
0846 *                                                               <  
0847 *COPY>ICSBP>INV.UM.CNV                                          <  
0848 RETURN                                                          <  

0849 *                                                               <  
0850 *                                                               <  
0851 *---- ERROR ROUTINES                                               *---- ERROR ROUTINES
0852 *                                                                  *
0853 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                       93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
0854                                                                 >  * 93000 ERR.TYPE = 3
0855                                                                 >  *       CALL SYSCOM(MAT SYSCOM.REC)

0856                                                                 >  *
0857 *---- END OF PROGRAM                                               *---- END OF PROGRAM
0858 *                                                                  *
0859 99999 *                                                            99999 *
0860 END                                                                END
0861 


JCSBP/POST.MISC                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.MISC
Printed for thompson at 06/28/2006 04:42:04PM

0012 *               AND DELETE DAILY.MISC RECORD.                      *               AND DELETE DAILY.MISC RECORD.
0013 * COMMENT     - Revise if JOB.STATUS # 1 to # 5 to reflect "RE     * COMMENT     - Revise if JOB.STATUS # 1 to # 5 to reflect "
0014 *             - Task #12907 (RRG)                                  *             - Task #12907 (RRG)
0015 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.     *T23278 markt 11/20/1998 * Accumulate fiscal data by divisio
0016 *T25606 gat 01/29/2001 * FIX PROBLEM WITH SPOILAGE POST TO TOT     *T25606 gat 01/29/2001 * FIX PROBLEM WITH SPOILAGE POST TO T
0017                                                                 >  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0018                                                                 >  *                             needing a authorization.
0019 **************************************************************     ************************************************************
0020 *                                                                  *
0021 ***** INSERT FILE EQUETE                                           ***** INSERT FILE EQUETE

0158 DMS.STATUS = 'JOB # ':DMS.JOB:' IS PURGED'                         DMS.STATUS = 'JOB # ':DMS.JOB:' IS PURGED'
0159 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0160 GOTO 1999                                                          GOTO 1999
0161 END CASE                                                           END CASE
0162 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
0163                                                                 >  IF JOB.STATUS<1,1> # 3 THEN      ;* T26942 v
0164 IF DMS.INIT = "" THEN                                              IF DMS.INIT = "" THEN
0165 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0166 DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED OR IN PRO  |  DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED, NOR IN
0167 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID

0167 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0168 GOTO 1999                                                          GOTO 1999
0169 END ELSE                                                           END ELSE
0170 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMS.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMS.INIT ELSE
0171 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0172 DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED OR IN PRO  |  DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED, NOR IN
0173 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0174 GOTO 1999                                                          GOTO 1999
0175 END                                                                END
0176 END                                                                END

0177                                                                 >  END                              ;* T26942
0178 END                                                                END
0179 IF JOB.TYPE # "R" AND JOB.TYPE # DMS.TYPE THEN                     IF JOB.TYPE # "R" AND JOB.TYPE # DMS.TYPE THEN
0180 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0181 DMS.STATUS = "JOB BELONGS TO A DIFFERENT TYPE"                  |  DMS.STATUS = "JOB BELONG TO A DIFFERENT TYPE"
0182 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0183 GOTO 1999                                                          GOTO 1999

0182 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0183 GOTO 1999                                                          GOTO 1999
0184 END                                                                END
0185 IF DMS.DIV # JOB.DIV THEN                                          IF DMS.DIV # JOB.DIV THEN
0186 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0187 DMS.STATUS = "JOB BELONGS TO DIFFERENT DIVISION"                |  DMS.STATUS = "JOB BELONG TO DIFFERENT DIVISION"
0188 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0189 GOTO 1999                                                          GOTO 1999
0190 END                                                                END
0191 IF JOB.DEPT # DMS.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DMS.DEPT[1,LEN(JOB.DEPT)] THEN

0192 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0193 DMS.STATUS = "JOB BELONGS TO DIFFERENT DEPARTMENT"              |  DMS.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"
0194 MATWRITE DMS.REC ON DAILY.MISC, DMS.ID                             MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
0195 GOTO 1999                                                          GOTO 1999
0196 END                                                                END
0197 MATREAD DIV.REC FROM DIVISION, CONO : DMS.DIV ELSE                 MATREAD DIV.REC FROM DIVISION, CONO : DMS.DIV ELSE
0198 RELEASE JOB, CONO:DMS.JOB                                          RELEASE JOB, CONO:DMS.JOB
0199 DMS.STATUS = 'DIV # ':DMS.DIV:' IS MISSING'                        DMS.STATUS = 'DIV # ':DMS.DIV:' IS MISSING'


JCSBP/POST.OS.REVERSE.SUB                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.OS.REVERSE.SUB
Printed for thompson at 06/28/2006 04:42:05PM

0001 SUBROUTINE POST.OS.REVERSE.SUB(CONO,CO.POS,CO.APS.O.INTRF)         SUBROUTINE POST.OS.REVERSE.SUB(CONO,CO.POS,CO.APS.O.INTRF)
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   |  *COPY>JCS.CPYLIB>COM.JOB.REVERSE
0004 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0005 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0006 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0007 *COPY>APS.CPYLIB>COM.APS.FILE.VARS                                 *COPY>APS.CPYLIB>COM.APS.FILE.VARS
0008 **************************************************************     ************************************************************
0009 * REVISION     - [08.0]                                            * REVISION     - [08.0]

0013 * PROGRAM      - POST.OS.REVERSE.SUB                               * PROGRAM      - POST.OS.REVERSE.SUB
0014 * BY           - WALID A. YAMOUT , C.B.A                           * BY           - WALID A. YAMOUT , C.B.A
0015 * DESCRIPTION  -                                                   * DESCRIPTION  -
0016 *T22266 lanny 10/02/1997 * JOS.VEND s/b Multi-valued for Misc      *T22266 lanny 10/02/1997 * JOS.VEND s/b Multi-valued for Mis
0017 *T22650 lanny 03/02/1998 * JOB is multi-valued in OUTSIDE.PO.      *T22650 lanny 03/02/1998 * JOB is multi-valued in OUTSIDE.PO
0018 *T25755 cm 04/19/2001 * Modify pgm to recognize new field for   |  *T23499 rick 08/31/1999 * Modify pgm to recognize new field 
0019 *                       OUTSIDE.PO                                 *                         OUTSIDE.PO
0020 *T26565 lhelms 04/25/2002 * Rev12 Change to reverse/qty/unit p  |  *T26557 lross 04/19/2002 * When reversing partial cost calc 
0021 *                           see task Rev11 26557 and 26833      |  *                          correct unit-cost can be derived 
0022 *T23880 lross 10/16/2002 * Include offset acct in ALH record.   |  *T23880 lross 10/16/2002 * Include offset acct in ALH record

0023                                                                 >  *                          PO's.
0024 *ENDDOC                                                            *ENDDOC
0025 **************************************************************     ************************************************************
0026 *                                                                  *
0027 ***** INSERT FILE EQUETE                                           ***** INSERT FILE EQUETE
0028 *                                                                  *
0029 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB

0053 OS.ID = CONO:DRV.JOB:"!":DEPT:"!":CCTR:"!":PLINE:"!"               OS.ID = CONO:DRV.JOB:"!":DEPT:"!":CCTR:"!":PLINE:"!"
0054 MATREAD JOS.REC FROM JOB.OSP, OS.ID : SEQ ELSE                     MATREAD JOS.REC FROM JOB.OSP, OS.ID : SEQ ELSE
0055 DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:SEQ           DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:SEQ
0056 GOTO 1999                                                          GOTO 1999
0057 END                                                                END
0058 PRD.SEQ = JOS.OPO.SEQ ; * T25755                                |  *T23499 v
0059                                                                 >  PRD.SEQ = JOS.OPO.SEQ
0060                                                                 >  *T23499 ^         
0061 BEGIN CASE                                                         BEGIN CASE
0062 CASE JOS.VEND<1,1> # DRV.EMP<1,MLP>  ;*T22266                      CASE JOS.VEND<1,1> # DRV.EMP<1,MLP>  ;*T22266

0104 INV.WIP<1,1,I> = INV.WIP<1,1,I> - JOS.WIP<1,W,I>                   INV.WIP<1,1,I> = INV.WIP<1,1,I> - JOS.WIP<1,W,I>
0105 NEXT I                                                             NEXT I
0106 NEXT W                                                             NEXT W
0107 TOT.RC.DCOST = 0; TOT.RC.COST = 0; TOT.RC.SALE = 0                 TOT.RC.DCOST = 0; TOT.RC.COST = 0; TOT.RC.SALE = 0
0108 TOT.RC.WIP = 0; REV.WIP = ""                                       TOT.RC.WIP = 0; REV.WIP = ""
0109 TOT.RC.QTY = 0 ;* T26557                                        |  TOT.RC.QTY = 0 ;*T26557
0110 IF JOS.RC.COST + 0 <> 0 THEN                                       IF JOS.RC.COST + 0 <> 0 THEN
0111 FOR S = SEQ + 1 TO JOB.OS.SEQ<1,DFND>                              FOR S = SEQ + 1 TO JOB.OS.SEQ<1,DFND>
0112 MATREAD JOS.REC FROM JOB.OSP, OS.ID : S ELSE                       MATREAD JOS.REC FROM JOB.OSP, OS.ID : S ELSE
0113 DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:S             DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:S

0117 FOR I = 1 TO WPTR                                                  FOR I = 1 TO WPTR
0118 REV.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>                   REV.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>
0119 TOT.RC.WIP = TOT.RC.WIP - JOS.WIP<1,1,I>                           TOT.RC.WIP = TOT.RC.WIP - JOS.WIP<1,1,I>
0120 NEXT I                                                             NEXT I
0121 TOT.RC.DCOST = TOT.RC.DCOST - JOS.DCOST                            TOT.RC.DCOST = TOT.RC.DCOST - JOS.DCOST
0122 TOT.RC.QTY -= JOS.QTY ;* T26565                                 <  
0123 TOT.RC.COST = TOT.RC.COST - JOS.COST                               TOT.RC.COST = TOT.RC.COST - JOS.COST
0124 TOT.RC.SALE = TOT.RC.SALE - JOS.SALE                               TOT.RC.SALE = TOT.RC.SALE - JOS.SALE
0125                                                                 >  TOT.RC.QTY -= JOS.QTY ;*T26557
0126 END                                                                END

0134 GOTO 1999                                                          GOTO 1999
0135 END                                                                END
0136 END                                                                END
0137 NEW.WIP = ""                                                       NEW.WIP = ""
0138 IF REV.ALL THEN                                                    IF REV.ALL THEN
0139 *T26565  NEW.QTY = 0 - JOS.QTY                                  |  *T26557     NEW.QTY = 0 - JOS.QTY
0140 NEW.QTY = TOT.RC.QTY - JOS.QTY                                     NEW.QTY = TOT.RC.QTY - JOS.QTY
0141 NEW.DCOST = TOT.RC.DCOST - JOS.DCOST                               NEW.DCOST = TOT.RC.DCOST - JOS.DCOST
0142 NEW.SALE = TOT.RC.SALE - JOS.SALE                                  NEW.SALE = TOT.RC.SALE - JOS.SALE
0143 FOR I = 1 TO WPTR                                                  FOR I = 1 TO WPTR

0142 NEW.SALE = TOT.RC.SALE - JOS.SALE                                  NEW.SALE = TOT.RC.SALE - JOS.SALE
0143 FOR I = 1 TO WPTR                                                  FOR I = 1 TO WPTR
0144 NEW.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>                   NEW.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>
0145 NEXT I                                                             NEXT I
0146 END ELSE                                                           END ELSE
0147 * T26565 v                                                      |  *T26557 v
0148 *        NEW.QTY = 0                                               *           NEW.QTY = 0
0149 *        PCT = DRV.COST<1,MLP> / (JOS.COST/1000)                   *           PCT = DRV.COST<1,MLP> / (JOS.COST/1000)
0150 NEW.DCOST = TOT.RC.DCOST - JOS.DCOST                               NEW.DCOST = TOT.RC.DCOST - JOS.DCOST
0151 IF NEW.DCOST # 0 THEN                                           <  

0152 PCT = DRV.COST<1,MLP> / (0-NEW.DCOST/1000)                         PCT = DRV.COST<1,MLP> / (0-NEW.DCOST/1000)
0153 END ELSE                                                        <  
0154 PCT = 1000                                                      <  
0155 END                                                             <  
0156 NEW.QTY = TOT.RC.QTY - JOS.QTY                                     NEW.QTY = TOT.RC.QTY - JOS.QTY
0157 NEW.QTY = 0 - ICONV(0-NEW.QTY * (PCT/1000), 'MD0')                 NEW.QTY = 0 - ICONV(0-NEW.QTY * (PCT/1000), 'MD0')
0158 * T26565 ^                                                      |  *T26557 ^
0159 IF JOS.COST = JOS.DCOST THEN                                       IF JOS.COST = JOS.DCOST THEN

0371 *T22650 v IF OPO.JOB.NO # DRV.JOB THEN GOTO 2488                   *T22650 v IF OPO.JOB.NO # DRV.JOB THEN GOTO 2488
0372 *       Logic below takes care of this test                        *       Logic below takes care of this test
0373 POPTR = 1                                                          POPTR = 1
0374 LOOP                                                               LOOP
0375 LOCATE DRV.JOB IN OPO.JOB.NO<1>,POPTR SETTING POFND THEN           LOCATE DRV.JOB IN OPO.JOB.NO<1>,POPTR SETTING POFND THEN
0376 *T25755 v                                                       |  *T23499 v
0377 *           IF PLINE = OPO.PROD.LINE<1,POFND> THEN POPTR = 0    |  ***            IF PLINE = OPO.PROD.LINE<1,POFND> THEN POPTR 
0378 IF PRD.SEQ = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0                  IF PRD.SEQ = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
0379 *T25755 ^                                                       <  
0380 END ELSE                                                           END ELSE

0418 2488*                                                              2488*
0419 RELEASE OUTSIDE.PO, CONO : JOS.PO                                  RELEASE OUTSIDE.PO, CONO : JOS.PO
0420 2500*                                                              2500*
0421 VSTAT.KEY = CONO : JOS.VEND<1,1> :"!O"  ;*T22266                   VSTAT.KEY = CONO : JOS.VEND<1,1> :"!O"  ;*T22266
0422 VPS.KEY = VSTAT.KEY :"!": JOS.PO                                   VPS.KEY = VSTAT.KEY :"!": JOS.PO
0423 *T25755 v                                                       |  *T23499 v
0424 *     VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE               |  ***      VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE
0425 VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE:'@':PRD.SEQ         |  VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE:"@":PRD.SEQ
0426 *T25755 ^                                                       |  *T23499 ^
0427 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.R     MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT

0427 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.R     MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT
0428 MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC      MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.R
E
0429 MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPDS     MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VP
0430 LOCATE JOS.PO IN VSTAT.PO<1>,1 SETTING JFND ELSE GOTO 2888         LOCATE JOS.PO IN VSTAT.PO<1>,1 SETTING JFND ELSE GOTO 2888
0431 VSTAT.PO.RECV<1,JFND> = VSTAT.PO.RECV<1,JFND> + JOS.DCOST          VSTAT.PO.RECV<1,JFND> = VSTAT.PO.RECV<1,JFND> + JOS.DCOST
0432 *T26565 v Merged VPS from below update of VPDS                  |  *T26557 v Merged VPS from below update of VPDS
0433 PPDD = 1                                                           PPDD = 1
0434 LOOP                                                               LOOP
0435 LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELSE JFND = 0      LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELSE JFND = 
0436 BEGIN CASE                                                         BEGIN CASE

0437 CASE JFND = 0                                                      CASE JFND = 0
0438 PPDD = 0                                                           PPDD = 0
0439 *T25755 v                                                       |  CASE VPS.WHSE<1,JFND> # PLINE:"@":PRD.SEQ
0440 *        CASE VPS.WHSE<1,JFND> # PLINE                          <  
0441 CASE VPS.WHSE<1,JFND> # PLINE:'@':PRD.SEQ                       <  
0442 PPDD = JFND + 1                                                    PPDD = JFND + 1
0443 CASE 1                                                             CASE 1
0444 VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + JOS.QTY                VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + JOS.QTY
0445 VPS.REC.AMT<1,JFND> = VPS.REC.AMT<1,JFND> + JOS.DCOST              VPS.REC.AMT<1,JFND> = VPS.REC.AMT<1,JFND> + JOS.DCOST

0448 WHILE PPDD DO                                                      WHILE PPDD DO
0449 REPEAT                                                             REPEAT
0450 IF JFND = 0 THEN GOTO 2888                                         IF JFND = 0 THEN GOTO 2888
0451 LOCATE OLD.DATE IN VPDS.REC.DATE<1>,1 SETTING JFND ELSE GOTO 2     LOCATE OLD.DATE IN VPDS.REC.DATE<1>,1 SETTING JFND ELSE GOTO
0452 VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + JOS.QTY              VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + JOS.QTY
0453 IF VPDS.REC.QTY<1,JFND> # 0 THEN                                <  
0454 UCOST = ICONV(VPS.REC.AMT<1,JFND> / VPS.REC.QTY<1,JFND>,'MD4')     UCOST = ICONV(VPS.REC.AMT<1,JFND> / VPS.REC.QTY<1,JFND>,'MD4
0455 END ELSE                                                        |  *     VPDS.REC.UN.COST<1,JFND> = VPDS.REC.UN.COST<1,JFND> + 
0456 UCOST = VPDS.REC.UN.COST<1,JFND>                                <  
0457 END                                                             <  

0460 END ELSE                                                           END ELSE
0461 IF ABS(UCOST - VPDS.REC.UN.COST<1,JFND>) > 1 THEN                  IF ABS(UCOST - VPDS.REC.UN.COST<1,JFND>) > 1 THEN
0462 VPDS.REC.UN.COST<1,JFND> = UCOST                                   VPDS.REC.UN.COST<1,JFND> = UCOST
0463 END                                                                END
0464 END                                                                END
0465 *T26565 ^                                                       |  *T26557 ^
0466 IF VPDS.REC.QTY<1,JFND> + 0 = 0 THEN                               IF VPDS.REC.QTY<1,JFND> + 0 = 0 THEN
0467 VPDS.REC.DATE = DELETE(VPDS.REC.DATE,1,JFND,0)                     VPDS.REC.DATE = DELETE(VPDS.REC.DATE,1,JFND,0)
0468 VPDS.REC.QTY = DELETE(VPDS.REC.QTY,1,JFND,0)                       VPDS.REC.QTY = DELETE(VPDS.REC.QTY,1,JFND,0)
0469 VPDS.REC.UN.COST = DELETE(VPDS.REC.UN.COST,1,JFND,0)               VPDS.REC.UN.COST = DELETE(VPDS.REC.UN.COST,1,JFND,0)

0472 *     LOOP                                                         *     LOOP
0473 *        LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELSE      *        LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELS
0474 *        BEGIN CASE                                                *        BEGIN CASE
0475 *        CASE JFND = 0                                             *        CASE JFND = 0
0476 *           PPDD = 0                                               *           PPDD = 0
0477 *T25755*v                                                       |  *        CASE VPS.WHSE<1,JFND> # PLINE:"@":PRD.SEQ
0478 **       CASE VPS.WHSE<1,JFND> # PLINE                          <  
0479 *        CASE VPS.WHSE<1,JFND> # PLINE:'@':PRD.SEQ              <  
0480 *T25755*^                                                       <  
0481 *           PPDD = JFND + 1                                        *           PPDD = JFND + 1


JCSBP/POST.OSP                                                     /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.OSP
Printed for thompson at 06/28/2006 04:42:05PM

0013 * 04/16/92 DLG TASK 16414 - ALLOW MULTIPLE JOBS IN OPO             * 04/16/92 DLG TASK 16414 - ALLOW MULTIPLE JOBS IN OPO
0014 * 01/25/94 DOUG S TASK 17919 * ADD ACCURAL HISTORY                 * 01/25/94 DOUG S TASK 17919 * ADD ACCURAL HISTORY
0015 * TASK 18961 GAT 03/08/95 FIX RECIEVE AMT/ UM ON VEND.PROD.STA     * TASK 18961 GAT 03/08/95 FIX RECIEVE AMT/ UM ON VEND.PROD.S
0016 * TASK 20080 JR STORE DV DP CC IN ACCRUED.LIAB.HIST                * TASK 20080 JR STORE DV DP CC IN ACCRUED.LIAB.HIST
0017 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.     *T23278 markt 11/20/1998 * Accumulate fiscal data by divisio
0018 *T23319 alex 04/11/2000 * Fix calculation for a UOM Type "C";   |  *T23499 rick 08/25/1999 * Modify pgm so that the update to O
0019 *                         defaulting as a "EA" Type.            <  
0020 *T25755 cm 04/19/2001 * Modify pgm so that the update to OUTSI  <  
0021 *                       to the correct line according to seque     *                         to the correct line according to s
0022 *T23880 lross 10/16/2002 * Include offset acct in ALH record.   |  *T23319 lanny 04/10/2000 * FIX UOM = C

0023 *T28171 thompson 06/24/2004 * Fix problem when user puts in a   |  *T23880 lross 10/16/2002 * Include offset acct in ALH record
0024 *                             department                        |  *                          PO's.
0025 *T28171 lross 07/06/2004 * Reinstate logic prior to T28171.     |  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0026 *T28678 lross 09/23/2005 * Negative rounding problem.           |  *                             needing a authorization.
0027 *ENDDOC                                                            *ENDDOC
0028 **************************************************************     ************************************************************
0029 *** INSERT FILE EQUATE                                             *** INSERT FILE EQUATE

0060 *                                                                  *
0061 MAT FILE.VARS = '' ; MAT JSI.REC = '' ; MAT EDIT.COM = '' ; MA     MAT FILE.VARS = '' ; MAT JSI.REC = '' ; MAT EDIT.COM = '' ; 
0062 SYS.TYPE = 1                                                       SYS.TYPE = 1
0063 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0064 *                                                                  *
0065 ***** T23278 v                                                  |  *T23499***** T23278 v
0066 PROCREAD XX ELSE ERRMSG = 'MUST BE RUN FROM A PROC'; GOTO 9300  |  *T23499  PROCREAD XX ELSE ERRMSG = 'MUST BE RUN FROM A PROC'
0067 DIV.CODE = XX<5>                                                |  *T23499  DIV.CODE = XX<5>
0068 ***** T23278 ^                                                  |  *T23499***** T23278 ^
0069 *                                                                  *

0122 *                                                                  *
0123 *** GET PERIOD                                                     *** GET PERIOD
0124 *                                                                  *
0125 ECD.ACTION = 2                                                     ECD.ACTION = 2
0126 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0127 *  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"OUTSIDE PURCHASES P  |  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"OUTSIDE PURCHASES PO
0128 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"OUTSIDE PURCHASES   |  *T23499  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"OUTSIDE PUR
0129 IF POSTING.MON = "END" THEN GOTO 99999                             IF POSTING.MON = "END" THEN GOTO 99999
0130 MON = POSTING.MON[5,2]                                             MON = POSTING.MON[5,2]
0131 MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE     MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" EL

0171 LOOP                                                               LOOP
0172 LOCATE DOS.JOB IN OPO.JOB.NO<1>,OPTR SETTING OJFND ELSE OJFND      LOCATE DOS.JOB IN OPO.JOB.NO<1>,OPTR SETTING OJFND ELSE OJFN
0173 BEGIN CASE                                                         BEGIN CASE
0174 CASE OJFND = 0                                                     CASE OJFND = 0
0175 OPTR = 0                                                           OPTR = 0
0176 *T25755 v                                                       |  *T23499 v
0177 *       CASE OPO.PROD.LINE<1,OJFND> # DOS.PRD.LINE              |  ***              CASE OPO.PROD.LINE<1,OJFND> # DOS.PRD.LINE
0178 CASE OPO.PROD.SEQ<1,OJFND> # DOS.PRD.SEQ                           CASE OPO.PROD.SEQ<1,OJFND> # DOS.PRD.SEQ
0179 *T25755 ^                                                       |  *T23499 ^
0180 OPTR = OJFND + 1                                                   OPTR = OJFND + 1

0241 END                                                                END
0242 IF JOB.DEPT # DOS.DEPT[1,LEN(JOB.DEPT)] THEN                       IF JOB.DEPT # DOS.DEPT[1,LEN(JOB.DEPT)] THEN
0243 DOS.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"; GOTO 1899       DOS.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"; GOTO 1899
0244 END                                                                END
0245 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRA
C
0246                                                                 >  IF JOB.STATUS<1,1> # 3 THEN            ;* T26942
0247 IF DOS.INIT = "" THEN                                              IF DOS.INIT = "" THEN
0248 DOS.STATUS = 'JOB # ':DOS.JOB:' STATUS IS NOT BOOKED, NOR IN P     DOS.STATUS = 'JOB # ':DOS.JOB:' STATUS IS NOT BOOKED, NOR IN
0249 END ELSE                                                           END ELSE
0250 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DOS.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DOS.INIT ELSE

0249 END ELSE                                                           END ELSE
0250 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DOS.INIT ELSE              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DOS.INIT ELSE
0251 DOS.STATUS = 'JOB # ':DOS.JOB:' STATUS IS NOT BOOKED, NOR IN P     DOS.STATUS = 'JOB # ':DOS.JOB:' STATUS IS NOT BOOKED, NOR IN
0252 END                                                                END
0253 END                                                                END
0254                                                                 >  END                                  ;* T26942
0255 END                                                                END
0256 MATREAD DIV.REC FROM DIVISION, CONO : DOS.DIV ELSE                 MATREAD DIV.REC FROM DIVISION, CONO : DOS.DIV ELSE
0257 DOS.STATUS = 'DIV # ':DOS.DIV:' IS MISSING' ; GOTO 1899            DOS.STATUS = 'DIV # ':DOS.DIV:' IS MISSING' ; GOTO 1899
0258 END                                                                END

0263 DOS.STATUS = 'DEPT # ':DOS.DEPT:' IS NOT UNDER DIV # ':DOS.DIV     DOS.STATUS = 'DEPT # ':DOS.DEPT:' IS NOT UNDER DIV # ':DOS.D
0264 END                                                                END
0265 MATREAD CCTR.REC FROM COST.CNTR, CONO : DOS.CCTR ELSE              MATREAD CCTR.REC FROM COST.CNTR, CONO : DOS.CCTR ELSE
0266 DOS.STATUS = 'CCTR # ':DOS.CCTR:' IS MISSING' ; GOTO 1899          DOS.STATUS = 'CCTR # ':DOS.CCTR:' IS MISSING' ; GOTO 1899
0267 END                                                                END
0268 *T28171                                                         |  IF CCTR.DEPT # DOS.DEPT THEN
0269 * Restore to original code LMR 07/06/2004 v                     <  
0270 IF CCTR.DEPT[1,2] # DOS.DEPT[1,2] THEN                          <  
0271 *IF CCTR.DEPT # DOS.DEPT THEN                                   <  
0272 *T28171                                                         <  

0315 JOS.MON = POSTING.MON                                              JOS.MON = POSTING.MON
0316 JOS.INV = DOS.INV                                                  JOS.INV = DOS.INV
0317 JOS.DESC = DOS.DESC                                                JOS.DESC = DOS.DESC
0318 JOS.WHSE = DOS.WHSE                                                JOS.WHSE = DOS.WHSE
0319 JOS.LOC = DOS.LOC                                                  JOS.LOC = DOS.LOC
0320 JOS.OPO.SEQ = DOS.PRD.SEQ ; * T25755                            |  *T23499 v
0321                                                                 >  JOS.OPO.SEQ = DOS.PRD.SEQ
0322                                                                 >  *T23499 ^
0323 IF DOS.TYPE = "S" OR DOS.TYPE = "N" THEN                           IF DOS.TYPE = "S" OR DOS.TYPE = "N" THEN
0324 JOS.SALE = 0                                                       JOS.SALE = 0

0324 JOS.SALE = 0                                                       JOS.SALE = 0
0325 END ELSE                                                           END ELSE
0326 JOS.SALE = DOS.SALE.AMT                                            JOS.SALE = DOS.SALE.AMT
0327 END                                                                END
0328 JOS.DCOST = DOS.GRS.AMT                                            JOS.DCOST = DOS.GRS.AMT
0329 IF DOS.GRS.AMT < 0 THEN ROND = (-.5) ELSE ROND = (.5) ;*T28678  <  
0330 PTR = 1                                                            PTR = 1
0331 LOOP                                                               LOOP
0332 LOCATE DOS.DEPT IN JOB.OS.DEPT<1>,PTR SETTING DFND ELSE            LOCATE DOS.DEPT IN JOB.OS.DEPT<1>,PTR SETTING DFND ELSE
0333 JOB.OS.DEPT<1,DFND> = DOS.DEPT                                     JOB.OS.DEPT<1,DFND> = DOS.DEPT

0347 WHILE PTR DO REPEAT                                                WHILE PTR DO REPEAT
0348 BEGIN CASE                                                         BEGIN CASE
0349 CASE WLR.OS.COST < 2                                               CASE WLR.OS.COST < 2
0350 JOS.COST = JOS.DCOST                                               JOS.COST = JOS.DCOST
0351 CASE NUM(CAOS.FOH.PCT)                                             CASE NUM(CAOS.FOH.PCT)
0352 *T28678 JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/10000)) +   |  JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/10000)) + .5)
0353 JOS.COST = INT((JOS.DCOST*(1 + CAOS.FOH.PCT/10000)) + ROND)     <  
0354 CASE 1                                                             CASE 1
0355 MATREAD FTR.REC FROM FOH.TABLE, CONO : CAOS.FOH.PCT ELSE           MATREAD FTR.REC FROM FOH.TABLE, CONO : CAOS.FOH.PCT ELSE
0356 MAT FTR.REC = ''                                                   MAT FTR.REC = ''

0378 FOH.PCT = FTR.PCT<1,FTR>                                           FOH.PCT = FTR.PCT<1,FTR>
0379 END                                                                END
0380 NEXT FTR                                                           NEXT FTR
0381 END                                                                END
0382 END                                                                END
0383 *T28678 JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)) + .5)  |  JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)) + .5) - TOT
0384 JOS.COST = INT((TOT.DCOST * (1 + FOH.PCT/10000)) + ROND) - TOT  <  
0385 END CASE                                                           END CASE
0386 JOB.OS.QTY<1,DFND> = JOB.OS.QTY<1,DFND> + JOS.QTY                  JOB.OS.QTY<1,DFND> = JOB.OS.QTY<1,DFND> + JOS.QTY
0387 JOB.OS.DCOST<1,DFND> = JOB.OS.DCOST<1,DFND> + JOS.DCOST            JOB.OS.DCOST<1,DFND> = JOB.OS.DCOST<1,DFND> + JOS.DCOST

0479 JOB.TOT.COST = JOB.TOT.COST + JOS.COST                             JOB.TOT.COST = JOB.TOT.COST + JOS.COST
0480 JOB.TOT.DCOST = JOB.TOT.DCOST + JOS.DCOST                          JOB.TOT.DCOST = JOB.TOT.DCOST + JOS.DCOST
0481 IF CO.POS = "Y" THEN                                               IF CO.POS = "Y" THEN
0482 PTR = 1                                                            PTR = 1
0483 CFND = 0                                                           CFND = 0
0484 *T25755 v                                                       |  *T23499 v
0485                                                                 >  LOCATE DOS.PRD.SEQ IN OPO.PROD.SEQ<1>,PTR SETTING CFND ELSE
0486                                                                 >  CFND=0
0487                                                                 >  END
0488                                                                 >  *T23499 ^

0489                                                                 >  *T23499 v   comment out logic below to set offset CFND
0490 *       LOOP                                                       *              LOOP
0491 *       UNTIL CFND > 0 OR OPO.JOB.NO<1,PTR> = '' DO                *              UNTIL CFND > 0 OR OPO.JOB.NO<1,PTR> = '' DO
0492 *         LOCATE DOS.JOB IN OPO.JOB.NO<1>,PTR SETTING CFND ELS     *                  LOCATE DOS.JOB IN OPO.JOB.NO<1>,PTR SETTI
0493 *         IF CFND # 0 THEN                                         *                  IF CFND # 0 THEN
0494 *           IF DOS.PRD.LINE=OPO.PROD.LINE<1,CFND> THEN CFND=CF  |  **T23499 v
0495                                                                 >  ****                      IF DOS.PRD.LINE = OPO.PROD.LINE<1,

0496                                                                 >  *                      IF DOS.PRD.SEQ = OPO.PROD.SEQ<1,CFND>
0497                                                                 >  **T23499 ^
0498 *         END                                                      *                  END
0499 *         PTR = PTR + 1                                            *                  PTR = PTR + 1
0500 *       REPEAT                                                     *              REPEAT
0501 LOCATE DOS.PRD.SEQ IN OPO.PROD.SEQ<1>,PTR SETTING CFND ELSE     <  
0502 CFND = 0                                                        <  

0503 END                                                             <  
0504 *T25755 ^                                                       <  
0505 *       IF OPO.JOB.NO # '' THEN                                    *              IF OPO.JOB.NO # '' THEN
0506 IF CFND # 0 THEN                                                   IF CFND # 0 THEN
0507 OPO.QTY.RECVD<1,CFND> = OPO.QTY.RECVD<1,CFND> + DOS.QTY            OPO.QTY.RECVD<1,CFND> = OPO.QTY.RECVD<1,CFND> + DOS.QTY
0508 * CSF 23044 LMR                                                    * CSF 23044 LMR
0509 OPO.TOT.OPEN<1,CFND> = OPO.TOT.OPEN<1,CFND> - DOS.QTY              OPO.TOT.OPEN<1,CFND> = OPO.TOT.OPEN<1,CFND> - DOS.QTY

0520 END ELSE                                                           END ELSE
0521 TR.CNT = COUNT(OPO.JOB.TRAN,VM) + (OPO.JOB.TRAN # "") + 1          TR.CNT = COUNT(OPO.JOB.TRAN,VM) + (OPO.JOB.TRAN # "") + 1
0522 OPO.JOB.TRAN<1,TR.CNT> = JOS.SEQ                                   OPO.JOB.TRAN<1,TR.CNT> = JOS.SEQ
0523 END                                                                END
0524 MATWRITE OPO.REC ON OUTSIDE.PO , CONO:DOS.PO                       MATWRITE OPO.REC ON OUTSIDE.PO , CONO:DOS.PO
0525 * Update Accrued Liability History                              |  * Upate Accrued Liability History
0526 IF OPO.ACCRUE = "Y" THEN                                           IF OPO.ACCRUE = "Y" THEN
0527 READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0          READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0
0528 ALH.CT = ALH.CT + 1                                                ALH.CT = ALH.CT + 1
0529 IF ALH.CT > 999999 THEN ALH.CT = 1                                 IF ALH.CT > 999999 THEN ALH.CT = 1

0561 COSP.ID=JOS.ID[4,99]                                               COSP.ID=JOS.ID[4,99]
0562 JDPTR=DCOUNT(JOS.DCOST,VM)                                         JDPTR=DCOUNT(JOS.DCOST,VM)
0563 STATUS=""                                                          STATUS=""
0564 CALL COMBO.OS.ALLOC.SUB(CONO,COSP.ID,JDPTR,MAT WIP.LEVEL.REC,C     CALL COMBO.OS.ALLOC.SUB(CONO,COSP.ID,JDPTR,MAT WIP.LEVEL.REC
0565 IF STATUS # "" THEN                                                IF STATUS # "" THEN
0566 ERRMSG = STATUS                                                 |  PRINT @(0,23):@(-4):STATUS:
0567 GOSUB 91000                                                     |  INPUT REPLY,1:
0568                                                                 >  PRINT @(0,23):@(-4):
0569 END                                                                END
0570 END ELSE                                                           END ELSE

0573 OSP.ID=JOS.ID[4,99]                                                OSP.ID=JOS.ID[4,99]
0574 JDPTR=DCOUNT(JOS.DCOST,VM)                                         JDPTR=DCOUNT(JOS.DCOST,VM)
0575 STATUS=""                                                          STATUS=""
0576 CALL GANG.OS.ALLOC.SUB(CONO,OSP.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.OS.ALLOC.SUB(CONO,OSP.ID,JDPTR,MAT WIP.LEVEL.REC,G
0577 IF STATUS # "" THEN                                                IF STATUS # "" THEN
0578 ERRMSG = STATUS                                                 |  PRINT @(0,23):@(-4):STATUS:
0579 GOSUB 91000                                                     |  INPUT REPLY,1:
0580                                                                 >  PRINT @(0,23):@(-4):
0581 END                                                                END
0582 END                                                                END

0588 OSP.ID=JOS.ID[4,99]                                                OSP.ID=JOS.ID[4,99]
0589 JDPTR=DCOUNT(JOS.DCOST,VM)                                         JDPTR=DCOUNT(JOS.DCOST,VM)
0590 STATUS=""                                                          STATUS=""
0591 CALL GANG.OS.ALLOC.SUB(CONO,OSP.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.OS.ALLOC.SUB(CONO,OSP.ID,JDPTR,MAT WIP.LEVEL.REC,G
0592 IF STATUS # "" THEN                                                IF STATUS # "" THEN
0593 ERRMSG = STATUS                                                 |  PRINT @(0,23):@(-4):STATUS:
0594 GOSUB 91000                                                     |  INPUT REPLY,1:
0595                                                                 >  PRINT @(0,23):@(-4):
0596 END                                                                END
0597 END                                                                END

0616 OJOS.MON = POSTING.MON                                             OJOS.MON = POSTING.MON
0617 OJOS.INV = DOS.INV                                                 OJOS.INV = DOS.INV
0618 OJOS.DESC = DOS.DESC                                               OJOS.DESC = DOS.DESC
0619 OJOS.WHSE = DOS.WHSE                                               OJOS.WHSE = DOS.WHSE
0620 OJOS.LOC = DOS.LOC                                                 OJOS.LOC = DOS.LOC
0621 OJOS.PRD.SEQ = DOS.PRD.SEQ ; * T25755                           |  *T23499 v
0622                                                                 >  OJOS.PRD.SEQ = DOS.PRD.SEQ
0623                                                                 >  *T23499 ^          
0624 IF DOS.TYPE = "S" OR DOS.TYPE = "N" THEN                           IF DOS.TYPE = "S" OR DOS.TYPE = "N" THEN
0625 OJOS.SALE = 0                                                      OJOS.SALE = 0

0639 2000 *                                                             2000 *
0640 VSTAT.KEY = CONO : DOS.VEND :"!O"                                  VSTAT.KEY = CONO : DOS.VEND :"!O"
0641 VPS.KEY = VSTAT.KEY :"!": DOS.PO                                   VPS.KEY = VSTAT.KEY :"!": DOS.PO
0642 * 16414                                                            * 16414
0643 REM  VPDS.KEY = VPS.KEY :"!": DOS.JOB :"!":DOS.PRD.LINE            REM  VPDS.KEY = VPS.KEY :"!": DOS.JOB :"!":DOS.PRD.LINE
0644 *T25755 v                                                       |  *T23499 v
0645 *  VPDS.KEY = VPS.KEY :"!": OSP.FIRST.JOB :"!":DOS.PRD.LINE     |  ***  VPDS.KEY = VPS.KEY :"!": OSP.FIRST.JOB :"!":DOS.PRD.LIN
0646 VPDS.KEY = VPS.KEY :"!": OSP.FIRST.JOB :"!":DOS.PRD.LINE:'@':D  |  VPDS.KEY = VPS.KEY :"!": OSP.FIRST.JOB :"!":DOS.PRD.LINE:"@"
0647 *T25755 ^                                                       |  *T23499 ^
0648 MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.R     MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT

0662 *CSF 24512 v                                                       *CSF 24512 v
0663 * CSF 23566                                                        * CSF 23566
0664 * CSF 25695 v                                                      * CSF 25695 v
0665 IF DOS.QTY+0 = 0 THEN DOS.QTY = 1                                  IF DOS.QTY+0 = 0 THEN DOS.QTY = 1
0666 * CSF 25695 ^                                                      * CSF 25695 ^
0667 *T23319 v                                                       |  IF UOM = 'M' THEN
0668 IF DOS.U.PRICE + 0 = 0 THEN                                        IF DOS.U.PRICE + 0 = 0 THEN
0669 BEGIN CASE                                                      <  
0670 CASE UOM = "M"                                                  <  
0671 REC.AMT = DOS.GRS.AMT / DOS.QTY                                    REC.AMT = DOS.GRS.AMT / DOS.QTY

0672 VPDS.REC.UN.COST<1,JFND> = INT((REC.AMT * 100000) + .5) * 100      VPDS.REC.UN.COST<1,JFND> = INT((REC.AMT * 100000) + .5) * 10
0673 CASE UOM = "C"                                                  |  END ELSE
0674                                                                 >  VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE
0675                                                                 >  END
0676                                                                 >  END ELSE
0677                                                                 >  *T23319 v
0678                                                                 >  IF UOM = 'C' THEN
0679                                                                 >  IF DOS.U.PRICE + 0 = 0 THEN

0680 REC.AMT = DOS.GRS.AMT / DOS.QTY                                    REC.AMT = DOS.GRS.AMT / DOS.QTY
0681 VPDS.REC.UN.COST<1,JFND> = INT((REC.AMT * 10000) + .5) * 100       VPDS.REC.UN.COST<1,JFND> = INT((REC.AMT * 10000) + .5) * 100
0682 CASE 1                                                          <  
0683 VPDS.REC.UN.COST<1,JFND> = ICONV(DOS.GRS.AMT / DOS.QTY, 'MD4')  <  
0684 END CASE                                                        <  
0685 END ELSE                                                           END ELSE
0686 VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE                             VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE
0687 END                                                                END
0688 * IF UOM = 'M' THEN                                             |  END ELSE

0689 *   IF DOS.U.PRICE + 0 = 0 THEN                                 <  
0690 *     REC.AMT = DOS.GRS.AMT / DOS.QTY                           <  
0691 *     VPDS.REC.UN.COST<1,JFND> = INT((REC.AMT * 100000) + .5)   <  
0692 *   END ELSE                                                    <  
0693 *     VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE                    <  
0694 *   END                                                         <  
0695 * END ELSE                                                      <  

0696 *   IF DOS.U.PRICE + 0 = 0 THEN                                 <  
0697 *     VPDS.REC.UN.COST<1,JFND> = ICONV(DOS.GRS.AMT / DOS.QTY,   <  
0698 *   END ELSE                                                    <  
0699 *     VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE                    <  
0700 *   END                                                         <  
0701 * END                                                           <  
0702 *T23319 ^                                                          *T23319 ^

0703                                                                 >  IF DOS.U.PRICE + 0 = 0 THEN
0704                                                                 >  VPDS.REC.UN.COST<1,JFND> = ICONV(DOS.GRS.AMT / DOS.QTY, 'MD4
0705                                                                 >  END ELSE
0706                                                                 >  VPDS.REC.UN.COST<1,JFND> = DOS.U.PRICE
0707                                                                 >  END
0708                                                                 >  END
0709                                                                 >  END

0718 CASE PFND = 0                                                      CASE PFND = 0
0719 * 16414                                                            * 16414
0720 REM         VPS.PROD<1,JFND> = DOS.JOB                             REM         VPS.PROD<1,JFND> = DOS.JOB
0721 VPS.PROD<1,JFND> = OSP.FIRST.JOB                                   VPS.PROD<1,JFND> = OSP.FIRST.JOB
0722 VPS.PROD.DESC<1,JFND> = JOB.DESC<1,1>                              VPS.PROD.DESC<1,JFND> = JOB.DESC<1,1>
0723 VPS.U.M<1,JFND> = ""                                            |  *T23319       VPS.U.M<1,JFND> = ""
0724 *T25755 v                                                       |  VPS.U.M<1,JFND> = DOS.UOM
0725 *           VPS.WHSE<1,JFND> = DOS.PRD.LINE                     |  *T23499 v
0726 VPS.WHSE<1,JFND> = DOS.PRD.LINE:'@':DOS.PRD.SEQ                 |  ***              VPS.WHSE<1,JFND> = DOS.PRD.LINE
0727 *T25755 ^                                                       |  VPS.WHSE<1,JFND> = DOS.PRD.LINE:"@":DOS.PRD.SEQ

0728                                                                 >  *T23499 ^
0729 VPS.ORD.QTY<1,JFND> = ""                                           VPS.ORD.QTY<1,JFND> = ""
0730 VPS.ORD.AMT<1,JFND> = ""                                           VPS.ORD.AMT<1,JFND> = ""
0731 VPS.REC.QTY<1,JFND> = DOS.QTY                                      VPS.REC.QTY<1,JFND> = DOS.QTY
0732 *           VPS.REC.AMT<1,JFND> = DOS.GRS.AMT                      *              VPS.REC.AMT<1,JFND> = DOS.GRS.AMT
0733 VPS.REC.AMT<1,JFND> = DOS.GRS.AMT                                  VPS.REC.AMT<1,JFND> = DOS.GRS.AMT
0734 VPS.VOU.QTY<1,JFND> = ""                                           VPS.VOU.QTY<1,JFND> = ""

0735 VPS.VOU.AMT<1,JFND> = ""                                           VPS.VOU.AMT<1,JFND> = ""
0736 VPS.VOU.NO<1,JFND> = ""                                            VPS.VOU.NO<1,JFND> = ""
0737 *T25755 v                                                       |  *T23499 v
0738 *        CASE VPS.WHSE<1,JFND> # DOS.PRD.LINE                   |  ***          CASE VPS.WHSE<1,JFND> # DOS.PRD.LINE
0739 CASE VPS.WHSE<1,JFND> # DOS.PRD.LINE:'@':DOS.PRD.SEQ            |  CASE VPS.WHSE<1,JFND> # DOS.PRD.LINE:"@":DOS.PRD.SEQ
0740 *T25755 ^                                                       |  *T23499 ^
0741 PFND = JFND + 1                                                    PFND = JFND + 1
0742 CASE 1                                                             CASE 1
0743 VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + DOS.QTY                VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + DOS.QTY


JCSBP/POST.SHIP                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.SHIP
Printed for thompson at 06/28/2006 04:42:05PM

0009 * BY           - JIHAD YAMOUT , C.B.A                              * BY           - JIHAD YAMOUT , C.B.A
0010 * DESCRIPTION  - THIS PROGRAM POST JOBS BY MOVING DAILY.SHIP R     * DESCRIPTION  - THIS PROGRAM POST JOBS BY MOVING DAILY.SHIP
0011 *                TO JOB.FILE AND MOVING DAILY.SHIP RECORD TO J     *                TO JOB.FILE AND MOVING DAILY.SHIP RECORD TO
0012 *                AND DELETE DAILY.SHIP RECORD.                     *                AND DELETE DAILY.SHIP RECORD.
0013 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.     *T23278 markt 11/20/1998 * Accumulate fiscal data by divisio
0014                                                                 >  *T26942 adelgado 11/01/2002 * Change for Job status "Invoice
0015                                                                 >  *                             needing a authorization.
0016 *ENDDOC                                                            *ENDDOC
0017 **************************************************************     ************************************************************
0018 *** INSERT FILE EQUETE                                             *** INSERT FILE EQUETE

0166 DSP.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"                  DSP.STATUS = "JOB BELONG TO DIFFERENT DEPARTMENT"
0167 MATWRITE DSP.REC ON DAILY.SHIP,DSP.ID                              MATWRITE DSP.REC ON DAILY.SHIP,DSP.ID
0168 GOTO 1999                                                          GOTO 1999
0169 END                                                                END
0170 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
0171                                                                 >  IF JOB.STATUS<1,1> # 3 THEN      ;* T26942 v
0172 IF DSP.INIT = "" THEN                                              IF DSP.INIT = "" THEN
0173 RELEASE JOB, CONO:DSP.JOB                                          RELEASE JOB, CONO:DSP.JOB
0174 DSP.STATUS = 'JOB # ':DSP.JOB:' STATUS IS NOT BOOKED, NOR IN P     DSP.STATUS = 'JOB # ':DSP.JOB:' STATUS IS NOT BOOKED, NOR IN
0175 MATWRITE DSP.REC ON DAILY.SHIP, DSP.ID                             MATWRITE DSP.REC ON DAILY.SHIP, DSP.ID

0180 DSP.STATUS = 'JOB # ':DSP.JOB:' STATUS IS NOT BOOKED, NOR IN P     DSP.STATUS = 'JOB # ':DSP.JOB:' STATUS IS NOT BOOKED, NOR IN
0181 MATWRITE DSP.REC ON DAILY.SHIP, DSP.ID                             MATWRITE DSP.REC ON DAILY.SHIP, DSP.ID
0182 GOTO 1999                                                          GOTO 1999
0183 END                                                                END
0184 END                                                                END
0185                                                                 >  END                              ;* T26942 ^
0186 END                                                                END
0187 MATREAD DIV.REC FROM DIVISION, CONO : DSP.DIV ELSE                 MATREAD DIV.REC FROM DIVISION, CONO : DSP.DIV ELSE
0188 RELEASE JOB, CONO:DSP.JOB                                          RELEASE JOB, CONO:DSP.JOB
0189 DSP.STATUS = 'DIV # ':DSP.DIV:' IS MISSING'                        DSP.STATUS = 'DIV # ':DSP.DIV:' IS MISSING'


JCSBP/POST.TIME                                                    /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.TIME
Printed for thompson at 06/28/2006 04:42:05PM

0011 *               JOB.FILE AND MOVING DAILY.TIME RECORD TO MONTH     *               JOB.FILE AND MOVING DAILY.TIME RECORD TO MON
0012 *               AND DELETE DAILY.TIME RECORD.                      *               AND DELETE DAILY.TIME RECORD.
0013 * COMMENT     - ADDED JOB.STATUS '5' = "REOPENED" LOGIC            * COMMENT     - ADDED JOB.STATUS '5' = "REOPENED" LOGIC
0014 *             - TASK 12907 (RRG)                                   *             - TASK 12907 (RRG)
0015 * MOD         - TASK 18439 10/05/94 (LMR) TO CORRECT PERF.STAT     * MOD         - TASK 18439 10/05/94 (LMR) TO CORRECT PERF.ST
0016 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.  |  *T24092 rick 07/22/1999 * Modify pgm to use JOB.TYPE as an o
0017                                                                 >  *                         DLB.TYPE end
0018                                                                 >  *T24102 markt 10/13/1999 * Expand the shift code to 2 digits
0019 *ENDDOC                                                            *ENDDOC
0020 **************************************************************     ************************************************************

0056 ***** SETUP ERRMSG ROUTINE                                         ***** SETUP ERRMSG ROUTINE
0057 *                                                                  *
0058 SYS.TYPE = 1                                                       SYS.TYPE = 1
0059 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0060 *                                                                  *
0061 ***** T23278 v                                                  <  
0062 PROCREAD XX ELSE ERRMSG = 'MUST BE RUNB FROM A PROC'; GOTO 930  <  
0063 DIV.CODE = XX<5>                                                <  
0064 ***** T23278 ^                                                  <  
0065 *                                                               <  

0107 CONO = DLB.ID[1,3]                                                 CONO = DLB.ID[1,3]
0108 MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999                MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
0109 IF CO.PRS.INTERFACE = "Y" THEN                                     IF CO.PRS.INTERFACE = "Y" THEN
0110 OPEN '','DAILY.HOURS' TO DAILY.HOURS ELSE ERRMSG = 'DAILY.HOUR     OPEN '','DAILY.HOURS' TO DAILY.HOURS ELSE ERRMSG = 'DAILY.HO
0111 END                                                                END
0112 *  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"LABOR POSTING PROCE  |  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"LABOR POSTING PROCES
0113 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"LABOR POSTING PROC  <  
0114 IF POSTING.MON = "END" THEN GOTO 99999                             IF POSTING.MON = "END" THEN GOTO 99999
0115 *                                                                  *
0116 **** GET ALL OUTSIDE JOB REANGE                                    **** GET ALL OUTSIDE JOB REANGE

0161 1000 DLB.STATUS = ""                                               1000     DLB.STATUS = ""
0162 DLB.EMP = FIELD(DLB.ID,"*",1)                                      DLB.EMP = FIELD(DLB.ID,"*",1)
0163 DLB.EMP = DLB.EMP[4,LEN(DLB.EMP)]                                  DLB.EMP = DLB.EMP[4,LEN(DLB.EMP)]
0164 DLB.DATE = FIELD(DLB.ID,"*",2)                                     DLB.DATE = FIELD(DLB.ID,"*",2)
0165 DLB.SHIFT = FIELD(DLB.ID,"*",3)                                    DLB.SHIFT = FIELD(DLB.ID,"*",3)
0166 IF DLB.SHIFT < 1 OR DLB.SHIFT > 3 THEN                          |  * T24102 v
0167                                                                 >  *   IF DLB.SHIFT < 1 OR DLB.SHIFT > 3 THEN
0168                                                                 >  IF DLB.SHIFT < 1 OR DLB.SHIFT > 99 THEN
0169                                                                 >  * T24102 ^
0170 DLB.STATUS<1,1> = "BAD SHIFT ":DLB.SHIFT; GOTO 1999                DLB.STATUS<1,1> = "BAD SHIFT ":DLB.SHIFT; GOTO 1999

0175 SEQ.CNT = COUNT(DLB.SEQ,VM) + (DLB.SEQ # "")                       SEQ.CNT = COUNT(DLB.SEQ,VM) + (DLB.SEQ # "")
0176 FOR SC = SEQ.CNT TO 1 STEP - 1 UNTIL DLB.STATUS # ""               FOR SC = SEQ.CNT TO 1 STEP - 1 UNTIL DLB.STATUS # ""
0177 MAT JLB.REC = ""                                                   MAT JLB.REC = ""
0178 MAT OJLB.REC = ""                                                  MAT OJLB.REC = ""
0179 POST.OSJ = 0                                                       POST.OSJ = 0
0180 MATREADU JOB.REC FROM JOB, CONO : DLB.JOB<1,SC> ELSE            |  *T24092 v
0181                                                                 >  *     MATREADU JOB.REC FROM JOB, CONO : DLB.JOB<1,SC> ELSE
0182                                                                 >  MATREADU JOB.REC FROM JOB, CONO : DLB.JOB<1,SC> THEN
0183                                                                 >  IF JOB.TYPE # DLB.TYPE<1,SC> THEN
0184                                                                 >  DLB.TYPE<1,SC>=JOB.TYPE

0185                                                                 >  END
0186                                                                 >  END ELSE
0187                                                                 >  *T24092 ^       
0188 MAT JOB.REC = ''                                                   MAT JOB.REC = ''
0189 FND = 0                                                            FND = 0
0190 IF NUM(DLB.JOB<1,SC>) THEN                                         IF NUM(DLB.JOB<1,SC>) THEN
0191 IF DLB.JOB<1,SC> < J.CUTOFF.NUM THEN FND = 1                       IF DLB.JOB<1,SC> < J.CUTOFF.NUM THEN FND = 1


JCSBP/POST.TIME.MATL                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/POST.TIME.MATL
Printed for thompson at 06/28/2006 04:42:06PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   |  *COPY>JCS.CPYLIB>COM.JOB
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   |  *COPY>JCS.CPYLIB>COM.JOB.MATL
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 **************************************************************     ************************************************************
0007 * REVISION    - [08.0B]                                            * REVISION    - [08.0B]
0008 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof

0032 *T21523 julie 01/29/1997 * ADD ERROR MESSAGE ROLL-SKID NOT REC     *T21523 julie 01/29/1997 * ADD ERROR MESSAGE ROLL-SKID NOT R
0033 *T21847 lanny 04/25/1997 * Make error checks in sync with EDIT     *T21847 lanny 04/25/1997 * Make error checks in sync with ED
0034 *T21933 julie 05/14/1997 * CHECK FOR BLANK STATUS                  *T21933 julie 05/14/1997 * CHECK FOR BLANK STATUS
0035 *T23254 gat 09/11/1998 * FIX NON-CHARGEABLE JOB POST OF NON-CH     *T23254 gat 09/11/1998 * FIX NON-CHARGEABLE JOB POST OF NON-
0036 *                        TIME                                      *                        TIME
0037 *T23278 markt 11/20/1998 * Accumulate fiscal data by division.  <  
0038 *T23636 markt 01/27/1999 * Entire S.STP.IMP array is being zer     *T23636 markt 01/27/1999 * Entire S.STP.IMP array is being z
0039 *                        * when CCTR.OPER.TYPE<1,OLOC> is "F",     *                        * when CCTR.OPER.TYPE<1,OLOC> is "F
0040 *                        * than just the current S.STP.IMP<1,S     *                        * than just the current S.STP.IMP<1
0041 *T24118 lanny 10/28/1999 * Non-chg time not being carried to G  |  *T23466 lanny 04/20/99 * Reject if no authorization initials

0042 *T24531 alex 11/01/1999 * Mod to write out the updated records  |  *T24092 rick 07/14/1999 * Modify all DTM transactions to hav
0043 *                         inventory file.                       |  *                         DTM.JOB.TYPE as the JOB.TYPE
0044 *T25185 gat 05/24/2000 * Fix problem with missing WSS shift.    |  *T25044 edvard 04/26/2000 * IF START TIME EQUALS END TIME DO
0045                                                                 >  *                           ERROR.
0046                                                                 >  *T25185 gat 05/24/2000 * FIX PROBLEM WITH MISSING WSS SHIFT
0047                                                                 >  *T25142 cm 06/29/2000 * Check for employee rate changes and 
0048                                                                 >  *                       accordingly.

0049                                                                 >  *T25146 aron 07/05/2000 * BUILD EPS.DAILY.HOURS FOR ATTENDAN
0050                                                                 >  *                         TYPE "N" AND BUILD DLY.HRS.CONTROL
0051                                                                 >  *C38278 cm 05/01/2001 * Correct problem where pay rate is ze
0052 *T25837 lanny 05/15/2001 * JOB NO. must not be NULL.               *T25837 lanny 05/15/2001 * JOB NO. must not be NULL.
0053 *T25907 lanny 06/26/2001 * Update JLB.OPER.COMP field from DTM  <  
0054 *T26093 lanny 08/16/2001 * SIS_LOG Should be opened only if us  <  
0055 *                          SIS.                                 <  

0056 *T26207 lanny 10/03/2001 * Do not allow more than 24 hours in      *T26207 lanny 10/03/2001 * Do not allow more than 24 hours i
0057 *T26334 epitka 12/17/2001 * REV12                               |  *C43374 cmykleb 07/06/2004 * The employee effective rate is 
0058 *T26497 adelgado 04/02/2002 * Add validation rule for Inter-Di  |  *                            the wrong rate for some daily h
0059 *                             Whse.                             <  
0060 *T26665 adelgado 07/05/2002 * Mods to recalculate Average cost  <  
0061 *                             posting to a future period.       <  
0062 *T27242 epitka 01/24/2003 * Not all records are being released  <  
0063 *T28076 lross 04/20/2004 * Use CATG.TRK.LVL # 'S' to call post  <  

0064 *                          routine.                             <  
0065 *T28309 lross 01/26/2005 * Looping in reverse order causes mat  <  
0066 *                          when multiple usage of roll in same  <  
0067 **************************************************************     ************************************************************
0068 *                                                                  *
0069 ***** INSERT FILE EQUATE                                           ***** INSERT FILE EQUATE
0070 *                                                                  *

0071 *COPY>JCS.CPYLIB>PNP.LOG                                           *COPY>JCS.CPYLIB>PNP.LOG
0072 *COPY>SIS.CPYLIB>SIS_LOG                                        <  
0073 *COPY>JCS.CPYLIB>DAILY.TIME.MATL                                   *COPY>JCS.CPYLIB>DAILY.TIME.MATL
0074 *COPY>JCS.CPYLIB>DAILY.MATL                                        *COPY>JCS.CPYLIB>DAILY.MATL
0075 *COPY>JCS.CPYLIB>JOB.TIME                                          *COPY>JCS.CPYLIB>JOB.TIME
0076 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0077 *COPY>JCS.CPYLIB>OJOB.TIME                                         *COPY>JCS.CPYLIB>OJOB.TIME
0078 *COPY>JCS.CPYLIB>JOB.MATL                                          *COPY>JCS.CPYLIB>JOB.MATL

0098 *COPY>ICS.CPYLIB>INV.WHSE.LOC                                      *COPY>ICS.CPYLIB>INV.WHSE.LOC
0099 *COPY>ICS.CPYLIB>INV.STATS                                         *COPY>ICS.CPYLIB>INV.STATS
0100 *COPY>ICS.CPYLIB>INV.JOB.STATS                                     *COPY>ICS.CPYLIB>INV.JOB.STATS
0101 *COPY>ICS.CPYLIB>INV.CNV                                           *COPY>ICS.CPYLIB>INV.CNV
0102 *COPY>ICS.CPYLIB>CATEGORY                                          *COPY>ICS.CPYLIB>CATEGORY
0103 *COPY>ICS.CPYLIB>INV_AUDIT_HIST                                 |  *COPY>ICS.CPYLIB>INV.TRAN.HIST
0104 *COPY>PRS.CPYLIB>DAILY.HOURS                                       *COPY>PRS.CPYLIB>DAILY.HOURS
0105 *COPY>PRS.CPYLIB>EPS.DAILY.HOURS                                   *COPY>PRS.CPYLIB>EPS.DAILY.HOURS
0106 *COPY>PRS.CPYLIB>WORK.SHIFT                                        *COPY>PRS.CPYLIB>WORK.SHIFT
0107 *COPY>PRS.CPYLIB>PAY.CONTROL                                       *COPY>PRS.CPYLIB>PAY.CONTROL

0108 *COPY>PSS.CPYLIB>PSS.FILE.VARS                                     *COPY>PSS.CPYLIB>PSS.FILE.VARS
0109 *COPY>JCS.CPYLIB>SF.PROMPT                                         *COPY>JCS.CPYLIB>SF.PROMPT
0110 *COPY>ICS.CPYLIB>INV_SERIAL                                     |  * T21523
0111                                                                 >  *COPY>ICS.CPYLIB>ROLL.SKID.INFO
0112                                                                 >  * T21523
0113 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0114 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0115 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0116 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM

0130 *                                                                  *
0131 MAT FILE.VARS = ""; MAT EDIT.COM.DRIVER = ""; MAT OJLB.REC = "     MAT FILE.VARS = ""; MAT EDIT.COM.DRIVER = ""; MAT OJLB.REC =
0132 MAT JCS.FILE.VARS = ""                                             MAT JCS.FILE.VARS = ""
0133 MAT PSS.FILE.VARS = ""                                             MAT PSS.FILE.VARS = ""
0134 CONO = ''                                                          CONO = ''
0135 GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000"                 <  
0136 *                                                                  *
0137 ***** SETUP ERRMSG ROUTINE                                         ***** SETUP ERRMSG ROUTINE
0138 *                                                                  *
0139 SYS.TYPE = 1                                                       SYS.TYPE = 1

0140 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0141 *                                                                  *
0142 PROCREAD BUFFER ELSE ERRMSG = 'MUST BE RUN FROM A PROC'; GOTO   <  
0143 DIV.CODE = BUFFER<8>                                            <  
0144 *                                                               <  
0145 ***** OPEN FILES                                                   ***** OPEN FILES
0146 *                                                                  *
0147 CALL POST.TIME.MATL.OPEN(ERRMSG,MAT JCS.FILE.VARS)                 CALL POST.TIME.MATL.OPEN(ERRMSG,MAT JCS.FILE.VARS)
0148 IF ERRMSG # "" THEN GOTO 93000                                     IF ERRMSG # "" THEN GOTO 93000

0156 OPEN "","SF.PROMPT" TO SF.PROMPT ELSE                              OPEN "","SF.PROMPT" TO SF.PROMPT ELSE
0157 ERRMSG = 'CANNOT OPEN SF.PROMPT FILE'                              ERRMSG = 'CANNOT OPEN SF.PROMPT FILE'
0158 GOTO 93000                                                         GOTO 93000
0159 END                                                                END
0160 OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG = 'CANNOT OPEN      OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG = 'CANNOT OPE
0161 OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'CANNOT OPEN   |  * T21523
0162                                                                 >  OPEN '','ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG = 'CA
0163                                                                 >  * T21523
0164 *                                                                  *
0165 *----- GET CONO                                                    *----- GET CONO

0167 CALL GET.CONO(CONO, MAT COMP.REC)                                  CALL GET.CONO(CONO, MAT COMP.REC)
0168 IF CONO = 'END' THEN GOTO 99999                                    IF CONO = 'END' THEN GOTO 99999
0169 *                                                                  *
0170 *-----DETERMINE if user is running barcode inventory               *-----DETERMINE if user is running barcode inventory
0171 *                                                                  *
0172                                                                 >  READ BCI FROM CONTROL,CONO:"RL.SK.CONTROL" ELSE BCI = ""
0173 *                                                                  *
0174 ***** SETUP VALUES FROM JCS.SCREENS                                ***** SETUP VALUES FROM JCS.SCREENS
0175 *                                                                  *
0176 ECD.ACTION = 1                                                     ECD.ACTION = 1

0214 END                                                                END
0215 OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE                            OPEN "","CCTR.SCHED" TO CCTR.SCHED ELSE
0216 ERRMSG = "CANNOT LOCATE CCTR.SCHED FILE"; GOTO 93000               ERRMSG = "CANNOT LOCATE CCTR.SCHED FILE"; GOTO 93000
0217 END                                                                END
0218 END                                                                END
0219 SISLIVE = 1                                                     |  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"TIME & MATERIAL POST
0220 READ DUMMY FROM CONTROL, CONO:"SISLIVE" ELSE SISLIVE = 0        <  
0221 DUMMY = ""                                                      <  
0222 IF SISLIVE THEN                                                 <  
0223 OPEN "SIS_LOG" TO SIS_LOG ELSE                                  <  

0224 ERRMSG = 'CANNOT OPEN SIS_LOG FILE'                             <  
0225 GOTO 93000                                                      <  
0226 END                                                             <  
0227 END                                                             <  
0228 CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"TIME & MATERIAL PO  <  
0229 IF POSTING.MON = "END" THEN GOTO 99999                             IF POSTING.MON = "END" THEN GOTO 99999
0230 *                                                                  *

0231 **** GET ALL OUTSIDE JOB RANGE                                  |  **** GET ALL OUTSIDE JOB REANGE
0232 *                                                                  *
0233 MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELSE      MATREAD JOB.CUTOFF.REC FROM CONTROL,CONO:"JOB.CUTOFF.NO" ELS
0234 MAT JOB.CUTOFF.REC = ""                                            MAT JOB.CUTOFF.REC = ""
0235 J.CUTOFF.NUM = 0                                                   J.CUTOFF.NUM = 0
0236 END                                                                END
0237 MATREAD WIP.LEVEL.REC FROM CONTROL,CONO : "WIP.LEVEL" ELSE         MATREAD WIP.LEVEL.REC FROM CONTROL,CONO : "WIP.LEVEL" ELSE

0253 **** UPDATE JOB TIME RECORD                                        **** UPDATE JOB TIME RECORD
0254 1000 MATREADU DTM.REC FROM DAILY.TIME.MATL,DTM.ID ELSE             1000 MATREADU DTM.REC FROM DAILY.TIME.MATL,DTM.ID ELSE
0255 RELEASE DAILY.TIME.MATL,DTM.ID                                     RELEASE DAILY.TIME.MATL,DTM.ID
0256 GOTO 1999                                                          GOTO 1999
0257 END                                                                END
0258 IF @LOGNAME = 'cmykleb' THEN DEBUG                              <  
0259 DTM.STATUS = ""                                                    DTM.STATUS = ""
0260 MAT SAVE.REC = ""                                                  MAT SAVE.REC = ""
0261 EMP = FIELD(DTM.ID,"*",1)                                          EMP = FIELD(DTM.ID,"*",1)
0262 DTM.EMP = EMP[4,LEN(EMP)]                                          DTM.EMP = EMP[4,LEN(EMP)]

0264 SHIFT = FIELD(DTM.ID,"*",3)                                        SHIFT = FIELD(DTM.ID,"*",3)
0265 MATREAD EMP.REC FROM EMPLOYEE,CONO : DTM.EMP ELSE                  MATREAD EMP.REC FROM EMPLOYEE,CONO : DTM.EMP ELSE
0266 DTM.STATUS<1,1> = "CANNOT LOCATE EMPLOYEE # ":DTM.EMP              DTM.STATUS<1,1> = "CANNOT LOCATE EMPLOYEE # ":DTM.EMP
0267 GOTO 1998                                                          GOTO 1998
0268 END                                                                END
0269                                                                 >  * T25185
0270 IF CO.PRS.INTERFACE = "Y" AND CO.PRS = "E" THEN                    IF CO.PRS.INTERFACE = "Y" AND CO.PRS = "E" THEN
0271 IF EMP.WRK.SCHD<1,SHIFT> = '' AND EMP.SOC.SEC # '' THEN            IF EMP.WRK.SCHD<1,SHIFT> = '' AND EMP.SOC.SEC # '' THEN 
0272 DTM.STATUS<1,1>="NO WORK.SHIFT.SCHD FOR THIS SHIFT"                DTM.STATUS<1,1>="NO WORK.SHIFT.SCHD FOR THIS SHIFT"
0273 GOTO 1998                                                          GOTO 1998

0274 END                                                                END
0275 END                                                                END
0276 IF SISLIVE THEN                                                 |  * T25185
0277 MATREAD SISLOG_REC FROM SIS_LOG, CONO:DTM.EMP THEN              <  
0278 IF SISLOG_OFF.FLAG = "" AND DTM.DATE = SISLOG_DATE AND SHIFT =  <  
0279 DTM.STATUS<1,1>="LOGGED ON (SFIS)"                              <  
0280 GOTO 1998                                                       <  
0281 END                                                             <  
0282 END ELSE                                                        <  

0283 MAT SISLOG_REC = ""                                             <  
0284 END                                                             <  
0285 END ELSE                                                        <  
0286 LOGGED.ON = 1                                                      LOGGED.ON = 1
0287 MATREAD PNPL.REC FROM PNP.LOG,CONO:DTM.EMP ELSE LOGGED.ON = 0      MATREAD PNPL.REC FROM PNP.LOG,CONO:DTM.EMP ELSE LOGGED.ON = 
0288 IF LOGGED.ON THEN                                                  IF LOGGED.ON THEN
0289 IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND SH     IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND 

0289 IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND SH     IF PNPL.LOGOFF.FLAG = "" AND DTM.DATE = PNPL.LOGON.DATE AND 
0290 DTM.STATUS<1,1>="LOGGED ON"                                        DTM.STATUS<1,1>="LOGGED ON"
0291 GOTO 1998                                                          GOTO 1998
0292 END                                                                END
0293 END                                                                END
0294 END                                                             <  
0295 ESTAT = ""                                                         ESTAT = ""
0296 CALL CALC.PRS.TIME(DTM.TYPE,DTM.TIME.ST,DTM.TIME,S.PR.HRS,ESTA     CALL CALC.PRS.TIME(DTM.TYPE,DTM.TIME.ST,DTM.TIME,S.PR.HRS,ES
0297 TYPE.CNT = COUNT(DTM.TYPE,VM) + (DTM.TYPE # "")                    TYPE.CNT = COUNT(DTM.TYPE,VM) + (DTM.TYPE # "")
0298                                                                 >  *T26207 v

0297 TYPE.CNT = COUNT(DTM.TYPE,VM) + (DTM.TYPE # "")                    TYPE.CNT = COUNT(DTM.TYPE,VM) + (DTM.TYPE # "")
0298                                                                 >  *T26207 v
0299 IF SUM(S.PR.HRS) > 2400 THEN                                       IF SUM(S.PR.HRS) > 2400 THEN
0300 DTM.STATUS<1,TYPE.CNT>="Total hours exceeds 24.00"                 DTM.STATUS<1,TYPE.CNT>="Total hours exceeds 24.00"
0301 END                                                                END
0302 *T28309 v FOR SC = TYPE.CNT TO 1 STEP -1                        |  *T26207 ^
0303 FOR SC = 1 TO TYPE.CNT                                          |  FOR SC = TYPE.CNT TO 1 STEP -1
0304                                                                 >  *T25146 v
0305                                                                 >  *** 25146 Do not bypass following checks for DTM.TYPE = 'N' 
0306 IF DTM.TYPE<1,SC> = "L" OR DTM.TYPE<1,SC> = "I" THEN GOTO 1099     IF DTM.TYPE<1,SC> = "L" OR DTM.TYPE<1,SC> = "I" THEN GOTO 10

0307                                                                 >  * IF DTM.TYPE<1,SC> = "L" OR DTM.TYPE<1,SC> = "I" OR (DTM.TY
0308                                                                 >  *T25146 ^
0309                                                                 >  *T21256 v
0310 IF DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> # "" THEN GOTO 1     IF DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> # "" THEN GOTO
0311                                                                 >  *T21256 ^
0312 S.OSJ<1,SC> = 0                                                    S.OSJ<1,SC> = 0
0313 MATREADU JOB.REC FROM JOB,CONO: DTM.JOB<1,SC> ELSE                 MATREADU JOB.REC FROM JOB,CONO: DTM.JOB<1,SC> ELSE

0314 MAT JOB.REC = ""                                                   MAT JOB.REC = ""
0315 FND = 0                                                            FND = 0
0316                                                                 >  *T25837  IF NUM(DTM.JOB<1,SC>) THEN
0317 IF NUM(DTM.JOB<1,SC>) AND DTM.JOB<1,SC> # "" THEN                  IF NUM(DTM.JOB<1,SC>) AND DTM.JOB<1,SC> # "" THEN
0318 IF DTM.JOB<1,SC> < J.CUTOFF.NUM THEN FND = 1                       IF DTM.JOB<1,SC> < J.CUTOFF.NUM THEN FND = 1
0319 END ELSE                                                           END ELSE
0320 JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")        JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
0321 FOR L = 1 TO JC.CNT WHILE FND = 0                                  FOR L = 1 TO JC.CNT WHILE FND = 0
0322 PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)                              PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)

0332 S.OSJ<1,SC> = 1                                                    S.OSJ<1,SC> = 1
0333 IF DTM.DIV<1,SC> = "" THEN                                         IF DTM.DIV<1,SC> = "" THEN
0334 DTM.STATUS<1,SC>="INVALID DIVISION";GOTO 1090                      DTM.STATUS<1,SC>="INVALID DIVISION";GOTO 1090
0335 END                                                                END
0336 JOB.DIV = DTM.DIV<1,SC>                                            JOB.DIV = DTM.DIV<1,SC>
0337 JOB.TYPE = DTM.JOB.TYPE<1,SC>                                   |  *T24092         JOB.TYPE = DTM.JOB.TYPE<1,SC>
0338 END ELSE                                                           END ELSE
0339 DTM.STATUS<1,SC> = "CANNOT LOCATE JOB # ":DTM.JOB<1,SC>; GOTO      DTM.STATUS<1,SC> = "CANNOT LOCATE JOB # ":DTM.JOB<1,SC>; GOT
0340 END                                                                END
0341 END                                                                END

0344 DTM.STATUS<1,SC>="JOB IS CANCELLED";GOTO 1090                      DTM.STATUS<1,SC>="JOB IS CANCELLED";GOTO 1090
0345 CASE JOB.STATUS<1,1> = 7                                           CASE JOB.STATUS<1,1> = 7
0346 DTM.STATUS<1,SC>="JOB IS READY TO PURGE";GOTO 1090                 DTM.STATUS<1,SC>="JOB IS READY TO PURGE";GOTO 1090
0347 CASE JOB.STATUS<1,1> = 8                                           CASE JOB.STATUS<1,1> = 8
0348 DTM.STATUS<1,SC>="JOB IS PURGED";GOTO 1090                         DTM.STATUS<1,SC>="JOB IS PURGED";GOTO 1090
0349 CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC  |  *T23466 v
0350                                                                 >  *     CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR 
0351                                                                 >  CASE JOB.STATUS<1,1> = 4 OR JOB.TRACK.DATE<1,7> # "" OR JOB.
0352                                                                 >  *T23466 ^
0353 IF DTM.INIT<1,SC> = "" THEN                                        IF DTM.INIT<1,SC> = "" THEN

0356 MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DTM.INIT<1,SC> ELSE        MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DTM.INIT<1,SC> ELSE
0357 DTM.STATUS<1,SC> = "INVALID AUTHORIZATION"; GOTO 1090              DTM.STATUS<1,SC> = "INVALID AUTHORIZATION"; GOTO 1090
0358 END                                                                END
0359 END                                                                END
0360 END CASE                                                           END CASE
0361                                                                 >  *T24092 v
0362                                                                 >  IF DTM.JOB.TYPE<1,SC> # JOB.TYPE THEN
0363                                                                 >  DTM.JOB.TYPE<1,SC> = JOB.TYPE
0364                                                                 >  END
0365                                                                 >  *T24092 ^   

0426 END                                                                END
0427 END                                                                END
0428 IF DTM.TYPE<1,SC> = "M" THEN GOTO 1080                             IF DTM.TYPE<1,SC> = "M" THEN GOTO 1080
0429 STIME=DTM.TIME.ST<1,SC>                                            STIME=DTM.TIME.ST<1,SC>
0430 ETIME=DTM.TIME<1,SC>                                               ETIME=DTM.TIME<1,SC>
0431 IF ETIME = STIME THEN                                           |  *25044v
0432 DTM.STATUS<1,SC> = "START TIME CANNOT EQUAL END TIME"; GOTO 10  |  *   IF ETIME = STIME THEN
0433 END                                                             |  *      DTM.STATUS<1,SC> = "START TIME CANNOT EQUAL END TIME"
0434                                                                 >  *   END
0435                                                                 >  *25044 ^

0434                                                                 >  *   END
0435                                                                 >  *25044 ^
0436 IF ETIME < STIME THEN ETIME=ETIME+2400                             IF ETIME < STIME THEN ETIME=ETIME+2400
0437 ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*60     ELAP.MIN=(INT(ETIME/100)*60+MOD(ETIME,100))-(INT(STIME/100)*
0438 S.HRS<1,SC>=INT(ELAP.MIN*100/60+0.5)                               S.HRS<1,SC>=INT(ELAP.MIN*100/60+0.5)
0439                                                                 >  * TASK 20110
0440 S.HRS<1,SC> = DTM.LAPS.TIME<1,SC>                                  S.HRS<1,SC> = DTM.LAPS.TIME<1,SC>
0441                                                                 >  * TASK 20110
0442 BEGIN CASE                                                         BEGIN CASE
0443                                                                 >  *T18522

0444                                                                 >  *   CASE CCTR.OPER.TYPE<1,OLOC> = "V" AND DTM.IMP<1,SC> + 0 
0445                                                                 >  *T21847 Add check for Concur below.
0446 CASE CCTR.OPER.TYPE<1,OLOC> = "V" AND DTM.IMP<1,SC> = '' AND D     CASE CCTR.OPER.TYPE<1,OLOC> = "V" AND DTM.IMP<1,SC> = '' AND
0447 DTM.STATUS<1,SC>="PRODUCTION QUANTITY REQUIRED";GOTO 1090          DTM.STATUS<1,SC>="PRODUCTION QUANTITY REQUIRED";GOTO 1090
0448                                                                 >  *   CASE CCTR.OPER.TYPE<1,OLOC> = "U" AND DTM.IMP<1,SC> + 0 
0449 CASE CCTR.OPER.TYPE<1,OLOC> = "U" AND DTM.IMP<1,SC> = '' AND D     CASE CCTR.OPER.TYPE<1,OLOC> = "U" AND DTM.IMP<1,SC> = '' AND
0450 DTM.STATUS<1,SC>="PRODUCTION QUANTITY REQUIRED";GOTO 1090          DTM.STATUS<1,SC>="PRODUCTION QUANTITY REQUIRED";GOTO 1090

0451                                                                 >  **
0452 CASE CCTR.OPER.TYPE<1,OLOC> # "V" AND CCTR.OPER.TYPE<1,OLOC> #     CASE CCTR.OPER.TYPE<1,OLOC> # "V" AND CCTR.OPER.TYPE<1,OLOC>
0453 DTM.STATUS<1,SC>="INVALID PRODUCTION QUANTITY";GOTO 1090           DTM.STATUS<1,SC>="INVALID PRODUCTION QUANTITY";GOTO 1090
0454 CASE CCTR.OPER.HR.RATE<1,OLOC> > 0                                 CASE CCTR.OPER.HR.RATE<1,OLOC> > 0
0455 S.DCOST<1,SC> = (CCTR.OPER.HR.RATE<1,OLOC> * FCTR.PRCNT) / 100     S.DCOST<1,SC> = (CCTR.OPER.HR.RATE<1,OLOC> * FCTR.PRCNT) / 1
0456 CASE DTM.JOB.TYPE<1,SC> = "N"                                      CASE DTM.JOB.TYPE<1,SC> = "N"
0457 S.DCOST<1,SC> = 0                                                  S.DCOST<1,SC> = 0

0502 S.STD.HRS<1,SC> = 0                                                S.STD.HRS<1,SC> = 0
0503 S.STD.IMP<1,SC> = 0                                                S.STD.IMP<1,SC> = 0
0504 END                                                                END
0505 CASE 1                                                             CASE 1
0506 S.STD.HRS<1,SC> = CCTR.OPER.STD.HRS<1,OLOC> + 0                    S.STD.HRS<1,SC> = CCTR.OPER.STD.HRS<1,OLOC> + 0
0507                                                                 >  *T23636     S.STD.IMP = 0
0508 S.STD.IMP<1,SC> = 0                                                S.STD.IMP<1,SC> = 0
0509 END CASE                                                           END CASE
0510 1080  BEGIN CASE                                                   1080  BEGIN CASE
0511 CASE DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> = ""               CASE DTM.TYPE<1,SC> = "M" AND DTM.PMT.FLG<1,SC> = ""

0512 GOSUB 2000                                                         GOSUB 2000
0513                                                                 >  *T21847 v  CASE DTM.TYPE<1,SC> = "T" AND DTM.PROD<1,SC> # ""
0514 CASE (DTM.TYPE<1,SC> = "T" OR DTM.TYPE<1,SC> = "C") AND DTM.PR     CASE (DTM.TYPE<1,SC> = "T" OR DTM.TYPE<1,SC> = "C") AND DTM.
0515 IF DTM.PROD<1,SC> # "0" THEN                                       IF DTM.PROD<1,SC> # "0" THEN
0516 GOSUB 2000                                                         GOSUB 2000
0517 END                                                                END
0518 END CASE                                                           END CASE
0519 1090  RELEASE JOB,CONO:DTM.JOB<1,SC>                               1090  RELEASE JOB,CONO:DTM.JOB<1,SC>

0576 END                                                                END
0577 END                                                                END
0578 NEXT I                                                             NEXT I
0579 1997 *                                                             1997 *
0580 NEXT SC                                                            NEXT SC
0581                                                                 >  * T21933
0582                                                                 >  *1998 IF DTM.STATUS # "" THEN
0583 1998 *                                                             1998 *
0584 STCNT = DCOUNT(DTM.STATUS,VM)                                      STCNT = DCOUNT(DTM.STATUS,VM)
0585 BLANK = 1                                                          BLANK = 1

0587 IF DTM.STATUS<1,ST> # "" THEN BLANK = 0                            IF DTM.STATUS<1,ST> # "" THEN BLANK = 0
0588 NEXT ST                                                            NEXT ST
0589 IF NOT(BLANK) THEN                                                 IF NOT(BLANK) THEN
0590 MATWRITE DTM.REC ON DAILY.TIME.MATL,DTM.ID                         MATWRITE DTM.REC ON DAILY.TIME.MATL,DTM.ID
0591 END ELSE                                                           END ELSE
0592                                                                 >  * T21933
0593 GOSUB 3000                                                         GOSUB 3000
0594 STCNT = DCOUNT(DTM.STATUS,VM)                                      STCNT = DCOUNT(DTM.STATUS,VM)
0595 BLANK = 1                                                          BLANK = 1
0596 FOR ST = STCNT TO 1 STEP -1 WHILE BLANK                            FOR ST = STCNT TO 1 STEP -1 WHILE BLANK

0595 BLANK = 1                                                          BLANK = 1
0596 FOR ST = STCNT TO 1 STEP -1 WHILE BLANK                            FOR ST = STCNT TO 1 STEP -1 WHILE BLANK
0597 IF DTM.STATUS<1,ST> # "" THEN BLANK = 0                            IF DTM.STATUS<1,ST> # "" THEN BLANK = 0
0598 NEXT ST                                                            NEXT ST
0599 IF NOT(BLANK) THEN                                                 IF NOT(BLANK) THEN
0600                                                                 >  * IF DTM.STATUS # "" THEN
0601 MATWRITE DTM.REC ON DAILY.TIME.MATL,DTM.ID                         MATWRITE DTM.REC ON DAILY.TIME.MATL,DTM.ID
0602 END ELSE                                                           END ELSE
0603 GOSUB 4000                                                         GOSUB 4000
0604 DELETE DAILY.TIME.MATL,DTM.ID                                      DELETE DAILY.TIME.MATL,DTM.ID

0603 GOSUB 4000                                                         GOSUB 4000
0604 DELETE DAILY.TIME.MATL,DTM.ID                                      DELETE DAILY.TIME.MATL,DTM.ID
0605 END                                                                END
0606 END                                                                END
0607 1999 RETURN                                                        1999 RETURN
0608 2000*                                                           <  
0609 ***** CHECK AND UPDATE MATL                                        ***** CHECK AND UPDATE MATL
0610 *                                                               |  2000 MATREAD INV.REC FROM INVENTORY,CONO:DTM.PROD<1,SC> ELSE
0611 MATREAD INV.REC FROM INVENTORY,CONO:DTM.PROD<1,SC> ELSE         <  
0612 DTM.STATUS<1,SC> = "CANNOT LOCATE PRODUCT"; GOTO 2099              DTM.STATUS<1,SC> = "CANNOT LOCATE PRODUCT"; GOTO 2099

0614 IF INV.CUST # "" THEN                                              IF INV.CUST # "" THEN
0615 IF "X":INV.CUST # "X":JOB.CUST THEN                                IF "X":INV.CUST # "X":JOB.CUST THEN
0616 DTM.STATUS<1,SC>="CUSTOMER ":INV.CUST:" OWNS STOCK";GOTO 2099      DTM.STATUS<1,SC>="CUSTOMER ":INV.CUST:" OWNS STOCK";GOTO 209
0617 END                                                                END
0618 END                                                                END
0619                                                                 >  * WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # "")
0620                                                                 >  * IF WHSE.CNT > 1 THEN
0621                                                                 >  * DTM.STATUS<1,SC> = "MORE THEN ONE WAREHOUSE"; GOTO 2099
0622                                                                 >  * END
0623                                                                 >  * DTM.WHSE<1,SC> = INV.WHSE.CODE<1,1>

0622                                                                 >  * END
0623                                                                 >  * DTM.WHSE<1,SC> = INV.WHSE.CODE<1,1>
0624 MATREAD CATG.REC FROM CATEGORY,CONO : INV.LINE ELSE                MATREAD CATG.REC FROM CATEGORY,CONO : INV.LINE ELSE
0625 DTM.STATUS<1,SC> = "CANNOT LOCATE PRODUCT.LINE ":INV.LINE; GOT     DTM.STATUS<1,SC> = "CANNOT LOCATE PRODUCT.LINE ":INV.LINE; G
0626 END                                                                END
0627 * T26497 v                                                      |  MATREAD IWH.REC FROM INV.WHSE,CONO:DTM.PROD<1,SC>:"!":DTM.WH
0628 IF CO.INTR.WHSE # '' AND CO.INTR.WHSE = DTM.WHSE<1,SC> THEN     <  
0629 DTM.STATUS<1,SC> = 'CANNOT USE MATERAIL FROM AN INTER-DIVISION  <  
0630 GOTO 2099                                                       <  
0631 END                                                             <  

0632 * T26497 ^                                                      <  
0633 IWH.ID=CONO:DTM.PROD<1,SC>:"!":DTM.WHSE<1,SC>                   <  
0634 MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE                       <  
0635 DTM.STATUS<1,SC> = "CANNOT LOCATE WAREHOUSE"; GOTO 2099            DTM.STATUS<1,SC> = "CANNOT LOCATE WAREHOUSE"; GOTO 2099
0636 END                                                                END
0637                                                                 >  *T21847 v
0638 IF DTM.OPER<1,SC>#'' AND OPER.PLINE#'' THEN                        IF DTM.OPER<1,SC>#'' AND OPER.PLINE#'' THEN

0640 IF POS < 1 THEN                                                    IF POS < 1 THEN
0641 DTM.STATUS<1,SC>='INVALID PRODUCT LINE FOR OPERATION'              DTM.STATUS<1,SC>='INVALID PRODUCT LINE FOR OPERATION'
0642 GOTO 2099                                                          GOTO 2099
0643 END                                                                END
0644 END                                                                END
0645                                                                 >  *T21847 ^
0646 MATREAD IH.REC FROM INV.HIST,CONO:DTM.PROD<1,SC> ELSE              MATREAD IH.REC FROM INV.HIST,CONO:DTM.PROD<1,SC> ELSE
0647 MAT IH.REC = ''                                                    MAT IH.REC = ''
0648 END                                                                END
0649                                                                 >  * LOC.CNT = COUNT(IWH.LOC,VM) + (IWH.LOC # "")

0650                                                                 >  * IF LOC.CNT > 1 THEN
0651                                                                 >  * DTM.STATUS<1,SC> = "MORE THEN ONE LOCATION"; GOTO 2099
0652                                                                 >  * END
0653                                                                 >  * DTM.LOC<1,SC> = IWH.LOC<1,1>
0654 MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO:DTM.PROD<1,SC>:"!":DTM     MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO:DTM.PROD<1,SC>:"!":D
0655 IF CATG.TRACK.QOH = "Y" THEN                                       IF CATG.TRACK.QOH = "Y" THEN
0656 DTM.STATUS<1,SC> = "CANNOT LOCATE LOCATION"; GOTO 2099             DTM.STATUS<1,SC> = "CANNOT LOCATE LOCATION"; GOTO 2099

0655 IF CATG.TRACK.QOH = "Y" THEN                                       IF CATG.TRACK.QOH = "Y" THEN
0656 DTM.STATUS<1,SC> = "CANNOT LOCATE LOCATION"; GOTO 2099             DTM.STATUS<1,SC> = "CANNOT LOCATE LOCATION"; GOTO 2099
0657 END                                                                END
0658 MAT IWLO.REC = ""                                                  MAT IWLO.REC = ""
0659 END                                                                END
0660 IF CATG.TRK.LVL='S' THEN                                        |  RSID=DTM.R.S.ID<1,SC>
0661 SERIAL=DTM.SERIAL<1,SC>                                         <  
0662 BEGIN CASE                                                         BEGIN CASE
0663 CASE SERIAL # ""                                                |  * T21523
0664 MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL THEN              |  CASE RSID # "" AND (BCI<3> = "Y" OR BCI<4> = "Y")

0665 IF ISTK.POST.DATE = "" THEN                                     |  MATREAD RSKI.REC FROM ROLL.SKID.INFO, CONO:RSID THEN
0666 DTM.STATUS<1,SC> = "SERIAL NOT RECEIVED";GOTO 2099              |  IF RSKI.POST.DATE = "" THEN
0667 END ELSE                                                        |  DTM.STATUS<1,SC> = "ROLL/SKID NOT RECEIVED";GOTO 2099
0668 IF ISTK.WHSE # DTM.WHSE<1,SC> OR ISTK.LOC#DTM.LOC<1,SC> THEN    <  
0669 DTM.STATUS<1,SC> ='Serial is in different whse/loc.'            <  
0670 END                                                                END
0671 END                                                                END

0672                                                                 >  * T21523
0673                                                                 >  CASE RSID="" AND IWLO.R.S.ID # ""
0674                                                                 >  DTM.STATUS<1,SC>="ROLL/SKID MISSING";GOTO 2099
0675                                                                 >  CASE RSID # ""
0676                                                                 >  LOCATE RSID IN IWLO.R.S.ID<1>,1 SETTING P ELSE
0677                                                                 >  DTM.STATUS<1,SC>="INVALID ROLL/SKID";GOTO 2099
0678 END                                                                END

0679 CASE SERIAL="" AND IWLO.SERIAL # "" AND CATG.TRK.LVL='S'        <  
0680 DTM.STATUS<1,SC>="SERIAL MISSING";GOTO 2099                     <  
0681 CASE SERIAL # ""                                                <  
0682 LOCATE SERIAL IN IWLO.SERIAL<1>,1 SETTING P ELSE                <  
0683 DTM.STATUS<1,SC>="INVALID SERIAL";GOTO 2099                     <  
0684 END                                                             <  
0685 END CASE                                                           END CASE

0686 END                                                             <  
0687 BEGIN CASE                                                         BEGIN CASE
0688 CASE DTM.RS.QTYPE<1,SC>=""                                         CASE DTM.RS.QTYPE<1,SC>=""
0689 CASE INV.PAP.TYPE="ROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="W"           CASE INV.PAP.TYPE="ROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="W"
0690 CASE INV.PAP.TYPE="ROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="D"           CASE INV.PAP.TYPE="ROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="D"
0691 CASE INV.PAP.TYPE="LROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="S"          CASE INV.PAP.TYPE="LROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="S"
0692 CASE INV.PAP.TYPE="LROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="D"          CASE INV.PAP.TYPE="LROLL" AND DTM.RS.QTYPE<1,SC>[1,1]="D"

0695 CASE INV.PAP.TYPE="SHEET" AND DTM.RS.QTYPE<1,SC>[1,1]="S"          CASE INV.PAP.TYPE="SHEET" AND DTM.RS.QTYPE<1,SC>[1,1]="S"
0696 CASE INV.PAP.TYPE="SHEET" AND DTM.RS.QTYPE<1,SC>[1,1]="D"          CASE INV.PAP.TYPE="SHEET" AND DTM.RS.QTYPE<1,SC>[1,1]="D"
0697 CASE 1                                                             CASE 1
0698 DTM.STATUS<1,SC>="INVALID QUANTITY TYPE";GOTO 2099                 DTM.STATUS<1,SC>="INVALID QUANTITY TYPE";GOTO 2099
0699 END CASE                                                           END CASE
0700                                                                 >  *IF INV.PAP.TYPE # "ROLL" AND INV.PAP.TYPE # "SHEET" OR ((BC
0701 BARCODE.FLAG=1                                                     BARCODE.FLAG=1
0702 MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> ELSE MAT I     MATREAD INV.REC FROM INVENTORY, CONO:DTM.PROD<1,SC> ELSE MAT
0703 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC  |  BEGIN CASE
0704 *T28076 v                                                       |  CASE INV.PAP.TYPE = "ROLL" AND BCI<3> = "Y"

0705 *  IF CATG.BARCODE = "Y" THEN BARCODE.FLAG = 1 ELSE BARCODE.FL  |  CASE INV.PAP.TYPE = "LROLL" AND BCI<3> = "Y"
0706 IF CATG.TRK.LVL = "S" THEN BARCODE.FLAG = 1 ELSE BARCODE.FLAG   |  CASE INV.PAP.TYPE = "PCOAT" AND BCI<3> = "Y"
0707                                                                 >  CASE INV.PAP.TYPE = "SHEET" AND BCI<4> = "Y"
0708                                                                 >  CASE 1
0709                                                                 >  BARCODE.FLAG=0
0710                                                                 >  END CASE
0711 IF NOT(BARCODE.FLAG) THEN                                          IF NOT(BARCODE.FLAG) THEN

0723 2099 RETURN                                                        2099 RETURN
0724 *                                                                  *
0725 ***** POST MATL                                                    ***** POST MATL
0726 3000 PRDS.ID = ""                                                  3000 PRDS.ID = ""
0727 CCW.ID = ""                                                        CCW.ID = ""
0728 *T28309 v FOR PMT = TYPE.CNT TO 1 STEP -1                       |  FOR PMT = TYPE.CNT TO 1 STEP -1
0729 FOR PMT = 1 TO TYPE.CNT                                         <  
0730 IF DTM.PMT.FLG<1,PMT> # "" THEN GOTO 3999                          IF DTM.PMT.FLG<1,PMT> # "" THEN GOTO 3999
0731 IF DTM.PROD<1,PMT> = "" OR DTM.PROD<1,PMT> = "0" THEN GOTO 399     IF DTM.PROD<1,PMT> = "" OR DTM.PROD<1,PMT> = "0" THEN GOTO 3
0732 MAT DMT.REC = ""                                                   MAT DMT.REC = ""

0745 DMT.DEPT = DTM.DEPT<1,PMT>                                         DMT.DEPT = DTM.DEPT<1,PMT>
0746 DMT.CCTR = DTM.CCTR<1,PMT>                                         DMT.CCTR = DTM.CCTR<1,PMT>
0747 DMT.PROD = DTM.PROD<1,PMT>                                         DMT.PROD = DTM.PROD<1,PMT>
0748 DMT.WHSE = DTM.WHSE<1,PMT>                                         DMT.WHSE = DTM.WHSE<1,PMT>
0749 DMT.LOC = DTM.LOC<1,PMT>                                           DMT.LOC = DTM.LOC<1,PMT>
0750 DMT.SERIAL = DTM.SERIAL<1,PMT>                                  |  DMT.R.S.ID = DTM.R.S.ID<1,PMT>
0751 DMT.QTY = DTM.QTY<1,PMT>                                           DMT.QTY = DTM.QTY<1,PMT>
0752 DMT.SHEET = DTM.SHEET<1,PMT>                                       DMT.SHEET = DTM.SHEET<1,PMT>
0753 DMT.SPOIL.CODE = DTM.SPOIL.CODE<1,PMT>                             DMT.SPOIL.CODE = DTM.SPOIL.CODE<1,PMT>
0754 DMT.INIT = DTM.INIT<1,PMT>                                         DMT.INIT = DTM.INIT<1,PMT>

0755 DMT.COST = DTM.COST<1,PMT>                                         DMT.COST = DTM.COST<1,PMT>
0756 DMT.RS.QTYPE = DTM.RS.QTYPE<1,PMT>                                 DMT.RS.QTYPE = DTM.RS.QTYPE<1,PMT>
0757                                                                 >  *CSF 24551 v
0758                                                                 >  * IF DTM.TIME.STAMP<1,PMT>="" THEN
0759                                                                 >  *   DMT.DATE = DTM.DATE
0760                                                                 >  *   DMT.TIME = ""
0761                                                                 >  * END ELSE
0762                                                                 >  *   DMT.DATE=INT(DTM.TIME.STAMP<1,PMT>/100000)
0763                                                                 >  *   DMT.TIME = MOD(DTM.TIME.STAMP<1,PMT>,100000)

0764                                                                 >  * END
0765 DMT.DATE=DTM.DATE                                                  DMT.DATE=DTM.DATE
0766 IF DTM.TIME.STAMP<1,PMT> # "" THEN                                 IF DTM.TIME.STAMP<1,PMT> # "" THEN
0767 DMT.TIME = MOD(DTM.TIME.STAMP<1,PMT>,100000)                       DMT.TIME = MOD(DTM.TIME.STAMP<1,PMT>,100000)
0768 DMT.USAGE.SEQ = DTM.TIME.STAMP<1,PMT>                              DMT.USAGE.SEQ = DTM.TIME.STAMP<1,PMT>
0769 END ELSE                                                           END ELSE
0770 DMT.USAGE.SEQ = DMT.DATE*100000                                    DMT.USAGE.SEQ = DMT.DATE*100000

0771 END                                                                END
0772                                                                 >  * CSF 24551 ^
0773 DMT.PRT.DATE = TODAY                                               DMT.PRT.DATE = TODAY
0774 IWH.ID = CONO:DMT.PROD:"!":DMT.WHSE                                IWH.ID = CONO:DMT.PROD:"!":DMT.WHSE
0775 IWLO.ID = IWH.ID : "!" : DMT.LOC                                   IWLO.ID = IWH.ID : "!" : DMT.LOC
0776 IJS.ID = IWH.ID : "!" : DMT.JOB                                    IJS.ID = IWH.ID : "!" : DMT.JOB
0777 READU DMT.ID FROM CONTROL,CONO:"DAILY.MATL" ELSE DMT.ID=10000      READU DMT.ID FROM CONTROL,CONO:"DAILY.MATL" ELSE DMT.ID=1000
0778 SOK = 0                                                            SOK = 0

0784 REPEAT                                                             REPEAT
0785 NEXT.ID = DMT.ID + 1                                               NEXT.ID = DMT.ID + 1
0786 IF NEXT.ID > 999999 THEN NEXT.ID = 10001                           IF NEXT.ID > 999999 THEN NEXT.ID = 10001
0787 WRITE NEXT.ID ON CONTROL,CONO:"DAILY.MATL"                         WRITE NEXT.ID ON CONTROL,CONO:"DAILY.MATL"
0788 JMT.ID = DMT.ID; POST.OSJ = S.OSJ<1,PMT>                           JMT.ID = DMT.ID; POST.OSJ = S.OSJ<1,PMT>
0789                                                                 >  * IF (INV.PAP.TYPE # "ROLL" AND INV.PAP.TYPE # "SHEET") OR (
0790 BARCODE.FLAG=1                                                     BARCODE.FLAG=1
0791 MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE MAT INV.REC     MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE MAT INV.R
0792 MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC  |  BEGIN CASE
0793 *T28076 v                                                       |  CASE INV.PAP.TYPE = "ROLL" AND BCI<1> = "Y"

0794 *     IF CATG.BARCODE = "Y" THEN BARCODE.FLAG = 1 ELSE BARCODE  |  CASE INV.PAP.TYPE = "LROLL" AND BCI<1> = "Y"
0795 IF CATG.TRK.LVL = "S" THEN BARCODE.FLAG = 1 ELSE BARCODE.FLAG   |  CASE INV.PAP.TYPE = "PCOAT" AND BCI<1> = "Y"
0796                                                                 >  CASE INV.PAP.TYPE = "SHEET" AND BCI<2> = "Y"
0797                                                                 >  CASE 1
0798                                                                 >  BARCODE.FLAG=0
0799                                                                 >  END CASE
0800 IF NOT(BARCODE.FLAG) THEN                                          IF NOT(BARCODE.FLAG) THEN

0801 JWPTR=''                                                           JWPTR=''
0802 * T26665 v                                                      |  CALL POST.MATL.SUB("P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR.NO
0803 * CALL POST.MATL.SUB(CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,W  <  
0804 CALL POST.MATL.SUB(CONO,"P",WLR.MT.COST,WLR.MT.WIP,WLR.SPL,WLR  <  
0805 * T26665 ^                                                      <  
0806 BEGIN CASE                                                         BEGIN CASE
0807 CASE DMT.STATUS # ""                                               CASE DMT.STATUS # ""
0808 GOSUB RELEASE.INV.LOCKS                                         <  

0809 RELEASE INV.STATS,IWH.ID                                           RELEASE INV.STATS,IWH.ID
0810 RELEASE INV.JOB.STATS,IJS.ID                                       RELEASE INV.JOB.STATS,IJS.ID
0811                                                                 >  RELEASE INV.WHSE,IWH.ID
0812                                                                 >  RELEASE INV.WHSE.LOC,IWLO.ID
0813 RELEASE JOB,CONO : DMT.JOB                                         RELEASE JOB,CONO : DMT.JOB
0814 IF PRDS.ID # "" THEN                                               IF PRDS.ID # "" THEN
0815 RELEASE PROD.STATS,PRDS.ID                                         RELEASE PROD.STATS,PRDS.ID
0816 END                                                                END
0817 IF CCW.ID # "" THEN                                                IF CCW.ID # "" THEN

0820 DTM.STATUS<1,PMT> = DMT.STATUS                                     DTM.STATUS<1,PMT> = DMT.STATUS
0821 CASE S.OSJ<1,PMT> = "0"                                            CASE S.OSJ<1,PMT> = "0"
0822 DTM.PMT.FLG<1,PMT> = "Y"                                           DTM.PMT.FLG<1,PMT> = "Y"
0823 MATWRITE JMT.REC ON JOB.MATL,JMT.ID                                MATWRITE JMT.REC ON JOB.MATL,JMT.ID
0824 MATWRITE JOB.REC ON JOB,CONO : DMT.JOB                             MATWRITE JOB.REC ON JOB,CONO : DMT.JOB
0825 MATWRITE INV.REC ON INVENTORY,CONO : DMT.PROD  ;*T24531         <  
0826 IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN                           IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
0827 DELETE INV.STATS,IWH.ID                                            DELETE INV.STATS,IWH.ID
0828 END ELSE                                                           END ELSE
0829 MATWRITE INV.STAT.REC ON INV.STATS,IWH.ID                          MATWRITE INV.STAT.REC ON INV.STATS,IWH.ID

0839 END                                                                END
0840 IF SSR.ID # "" THEN                                                IF SSR.ID # "" THEN
0841 MATWRITE SSR.REC ON SPOIL.STATS,SSR.ID                             MATWRITE SSR.REC ON SPOIL.STATS,SSR.ID
0842 END                                                                END
0843 IF CATG.TRACK.QOH = "Y" THEN                                       IF CATG.TRACK.QOH = "Y" THEN
0844 GOSUB SET.INAH                                                  |  MATWRITE IWLO.REC ON INV.WHSE.LOC,IWLO.ID
0845 ACTION=4                                                        |  MATWRITE IWH.REC ON INV.WHSE,IWH.ID
0846 JOB.ID=CONO:DMT.JOB                                             |  PTR = 0; ITH.ID = IWH.ID : "!" : TODAY
0847 PERIOD=POSTING.MON                                              |  MATREADU ITH.REC FROM INV.TRAN.HIST,ITH.ID ELSE
0848 BEGIN CASE                                                      |  MAT ITH.REC = ""; PTR = 1

0849 CASE CATG.TRK.LVL='S'                                           |  END
0850 TMP.ARR= DMT.SERIAL                                             |  IF PTR = 0 THEN PTR = COUNT(ITH.TYPE,VM) + (ITH.TYPE # "") +
0851 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  |  ITH.TYPE<1,PTR> = "S"; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0852 CASE CATG.TRK.LVL='G'                                           |  ITH.TRAN<1,PTR> = DMT.ID; ITH.JOB<1,PTR> = DMT.JOB
0853 TMP.ARR=DMT.LOC                                                 |  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS
0854 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  |  MATWRITE ITH.REC ON INV.TRAN.HIST,ITH.ID
0855 END CASE                                                        <  

0856 END ELSE                                                           END ELSE
0857 GOSUB RELEASE.INV.LOCKS                                         |  RELEASE INV.WHSE,IWH.ID
0858                                                                 >  RELEASE INV.WHSE.LOC,IWLO.ID
0859 END                                                                END
0860 IF GANG.PRESENT THEN                                               IF GANG.PRESENT THEN
0861 READV REC FROM GANG.JOB,CONO:DTM.JOB<1,PMT>,1 THEN                 READV REC FROM GANG.JOB,CONO:DTM.JOB<1,PMT>,1 THEN
0862 MTL.ID=JMT.ID[4,99]                                                MTL.ID=JMT.ID[4,99]
0863 JDPTR=DCOUNT(JMT.DCOST,VM)                                         JDPTR=DCOUNT(JMT.DCOST,VM)

0864 STATUS=""                                                          STATUS=""
0865 CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.MT.ALLOC.SUB(CONO,MTL.ID,JDPTR,MAT WIP.LEVEL.REC,G
0866                                                                 >  *           IF STATUS # "" THEN
0867                                                                 >  *             PRINT @(0,23):@(-4):STATUS:
0868                                                                 >  *             INPUT REPLY,1:
0869                                                                 >  *             PRINT @(0,23):@(-4):
0870                                                                 >  *           END
0871 END                                                                END
0872 END                                                                END

0885 OJMT.DATE = DMT.DATE                                               OJMT.DATE = DMT.DATE
0886 OJMT.MON = POSTING.MON                                             OJMT.MON = POSTING.MON
0887 OJMT.QTY = DMT.QTY                                                 OJMT.QTY = DMT.QTY
0888 OJMT.DIAM = DMT.NDIAM                                              OJMT.DIAM = DMT.NDIAM
0889 OJMT.SHEET = DMT.SHEET                                             OJMT.SHEET = DMT.SHEET
0890 OJMT.SERIAL = DMT.SERIAL                                        |  OJMT.R.S.ID = DMT.R.S.ID
0891 OJMT.DESC = DMT.DESC                                               OJMT.DESC = DMT.DESC
0892 OJMT.COST = JMT.COST                                               OJMT.COST = JMT.COST
0893 OJMT.SALE = JMT.SALE                                               OJMT.SALE = JMT.SALE
0894 MATWRITE OJMT.REC ON OJOB.MATL,CONO:DMT.ID                         MATWRITE OJMT.REC ON OJOB.MATL,CONO:DMT.ID

0895 MATWRITE INV.REC ON INVENTORY,CONO : DMT.PROD  ;*T24531         <  
0896 RELEASE INV.STATS,IWH.ID                                           RELEASE INV.STATS,IWH.ID
0897 RELEASE INV.JOB.STATS,IJS.ID                                       RELEASE INV.JOB.STATS,IJS.ID
0898 IF CATG.TRACK.QOH = "Y" THEN                                       IF CATG.TRACK.QOH = "Y" THEN
0899 GOSUB SET.INAH                                                  |  MATWRITE IWLO.REC ON INV.WHSE.LOC,IWLO.ID
0900 ACTION=4                                                        |  MATWRITE IWH.REC ON INV.WHSE,IWH.ID
0901 PERIOD=POSTING.MON                                              |  PTR = 0; ITH.ID = IWH.ID : "!" : TODAY

0902 BEGIN CASE                                                      |  MATREADU ITH.REC FROM INV.TRAN.HIST,ITH.ID ELSE
0903 CASE CATG.TRK.LVL='S'                                           |  MAT ITH.REC = ""; PTR = 1
0904 TMP.ARR= DMT.SERIAL                                             |  END
0905 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  |  IF PTR = 0 THEN PTR = COUNT(ITH.TYPE,VM) + (ITH.TYPE # "") +
0906 CASE CATG.TRK.LVL='G'                                           |  ITH.TYPE<1,PTR> = "S"; ITH.LOC<1,PTR> = JMT.LOC; ITH.R.S<1,P
0907 TMP.ARR=DMT.LOC                                                 |  ITH.TRAN<1,PTR> = DMT.ID; ITH.JOB<1,PTR> = DMT.JOB
0908 CALL JCS.IWH.SUB(IWH.ID,JOB.ID,PERIOD,TMP.ARR,ACTION,OPEN.FLAG  |  ITH.QTY<1,PTR> = 0 - JMT.QTY; ITH.COST<1,PTR> = 0 - JMT.DCOS

0909 END CASE                                                        |  MATWRITE ITH.REC ON INV.TRAN.HIST,ITH.ID
0910 END ELSE                                                           END ELSE
0911 GOSUB RELEASE.INV.LOCKS                                         |  RELEASE INV.WHSE,IWH.ID
0912                                                                 >  RELEASE INV.WHSE.LOC,IWLO.ID
0913 END                                                                END
0914 END CASE                                                           END CASE
0915 RELEASE JOB,CONO:DMT.JOB                                           RELEASE JOB,CONO:DMT.JOB

0951 ***** POST TIME                                                    ***** POST TIME
0952 4000 *                                                             4000 *
0953 IF CO.PRS = "E" AND CO.PRS.INTERFACE = "Y" THEN                    IF CO.PRS = "E" AND CO.PRS.INTERFACE = "Y" THEN
0954 MATREAD WSS.REC FROM WORK.SHIFT,CONO:"!":EMP.WRK.SCHD<1,SHIFT>     MATREAD WSS.REC FROM WORK.SHIFT,CONO:"!":EMP.WRK.SCHD<1,SHIF
0955 END                                                                END
0956 *T28309 v FOR SCC = TYPE.CNT TO 1 STEP -1                       |  FOR SCC = TYPE.CNT TO 1 STEP -1
0957 FOR SCC = 1 TO TYPE.CNT                                         <  
0958 IF DTM.TYPE<1,SCC> = "M" THEN GOTO 4999                            IF DTM.TYPE<1,SCC> = "M" THEN GOTO 4999
0959 MAT JLB.REC = ''; MAT OJLB.REC = ''                                MAT JLB.REC = ''; MAT OJLB.REC = ''
0960 *--- PRS INTERFACE FOR STANDARD PAYROLL                            *--- PRS INTERFACE FOR STANDARD PAYROLL

0961 IF CO.PRS.INTERFACE = "Y" AND CO.PRS = "Y" AND S.PR.HRS<1,SCC>     IF CO.PRS.INTERFACE = "Y" AND CO.PRS = "Y" AND S.PR.HRS<1,SC
0962 IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" THEN GOTO 49  |  *T25146 v
0963                                                                 >  *   IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" THEN G
0964                                                                 >  IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" OR DTM.TYP
0965                                                                 >  *T25146 ^
0966 PRS.KEY = CONO:DTM.EMP:"!":DTM.DIV<1,SCC>:"!":DTM.DEPT<1,SCC>:     PRS.KEY = CONO:DTM.EMP:"!":DTM.DIV<1,SCC>:"!":DTM.DEPT<1,SCC
0967 MATREADU DHR.REC FROM DAILY.HOURS,PRS.KEY ELSE MAT DHR.REC = "     MATREADU DHR.REC FROM DAILY.HOURS,PRS.KEY ELSE MAT DHR.REC =
0968 DHR.DEPT = EMP.DEPT                                                DHR.DEPT = EMP.DEPT

1020 CASE 1                                                             CASE 1
1021 IF WSS.USH.LUN<1,1> # "Y" AND DTM.TYPE<1,SCC> = "L" THEN GO 49     IF WSS.USH.LUN<1,1> # "Y" AND DTM.TYPE<1,SCC> = "L" THEN GO 
1022 END CASE                                                           END CASE
1023 4030 *                                                             4030 *
1024 IF DTM.CLASS.CD<1,SCC> = '' THEN DTM.CLASS.CD<1,SCC> = EMP.JOB     IF DTM.CLASS.CD<1,SCC> = '' THEN DTM.CLASS.CD<1,SCC> = EMP.J
1025 IF DTM.RATE<1,SCC> = '' THEN DTM.RATE<1,SCC>= EMP.JOB.CL.RATE   |  *T25142 v
1026 IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" THEN          |  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,CONO:DTM.EMP,DTM.DATE
1027                                                                 >  *T25142 ^
1028                                                                 >  *C43374 v
1029                                                                 >  *        IF DTM.RATE<1,SCC> = '' THEN DTM.RATE<1,SCC>= EMP.J

1030                                                                 >  IF EMP.JOB.CL.RATE # "" THEN DTM.RATE<1,SCC> = EMP.JOB.CL.RA
1031                                                                 >  *C43374 ^
1032                                                                 >  *T25146 v
1033                                                                 >  *        IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" T
1034                                                                 >  IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" OR DTM.TYP
1035                                                                 >  *T25146 ^
1036 DTM.DEPT<1,SCC>=EMP.DEPT;DTM.DIV<1,SCC>=EMP.DIV;DTM.CCTR<1,SCC     DTM.DEPT<1,SCC>=EMP.DEPT;DTM.DIV<1,SCC>=EMP.DIV;DTM.CCTR<1,S

1037 END                                                                END
1038 EPS.KEY=CONO:DTM.EMP:"!":DTM.DATE:"!":SHIFT                        EPS.KEY=CONO:DTM.EMP:"!":DTM.DATE:"!":SHIFT
1039 IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" OR DTM.JOB.T  |  *T25146 v
1040                                                                 >  *        IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" O
1041                                                                 >  IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" OR DTM.JOB
1042                                                                 >  IF DTM.TYPE<1,SCC> = "N" THEN
1043                                                                 >  EPS.KEY=EPS.KEY:"!":DTM.SPEC.CODE<1,SCC>
1044                                                                 >  *C38278 v
1045                                                                 >  IF DTM.SPEC.CODE<1,SCC> > 399 AND DTM.SPEC.CODE<1,SCC> < 404

1046                                                                 >  DTM.RATE<1,SCC> = 0
1047                                                                 >  END
1048                                                                 >  *C38278 ^
1049                                                                 >  END ELSE
1050 EPS.KEY=EPS.KEY:"!":EPSC.NC.REG                                    EPS.KEY=EPS.KEY:"!":EPSC.NC.REG
1051                                                                 >  END
1052                                                                 >  *T25146 ^

1051                                                                 >  END
1052                                                                 >  *T25146 ^
1053 END ELSE                                                           END ELSE
1054 EPS.KEY=EPS.KEY:"!":EPSC.REG                                       EPS.KEY=EPS.KEY:"!":EPSC.REG
1055 END                                                                END
1056                                                                 >  *T25146 v
1057                                                                 >  *C38278  IF DTM.SPEC.CODE<1,SCC> > 399 AND DTM.SPEC.CODE<1,S
1058                                                                 >  *C38278     DTM.RATE<1,SCC> = 0
1059                                                                 >  *C38278  END
1060                                                                 >  *T25146 ^

1062 EPS.KEY=EPS.KEY:"!":DTM.CCTR<1,SCC>:"!":DTM.CLASS.CD<1,SCC>        EPS.KEY=EPS.KEY:"!":DTM.CCTR<1,SCC>:"!":DTM.CLASS.CD<1,SCC>
1063 MATREADU EPS.REC FROM DAILY.HOURS,EPS.KEY ELSE                     MATREADU EPS.REC FROM DAILY.HOURS,EPS.KEY ELSE
1064 MAT EPS.REC = ''                                                   MAT EPS.REC = ''
1065 EPS.DEPT=EMP.DEPT                                                  EPS.DEPT=EMP.DEPT
1066 *CSF 25344 v                                                       *CSF 25344 v
1067                                                                 >  *           EPS.START=DTM.TIME.ST<1,SCC>
1068 EPS.START=DTM.TIME.ST<1,1>                                         EPS.START=DTM.TIME.ST<1,1>
1069                                                                 >  *CSF 25344 ^
1070 EPS.WSS=EMP.WRK.SCHD<1,SHIFT>                                      EPS.WSS=EMP.WRK.SCHD<1,SHIFT>
1071 END                                                                END

1072                                                                 >  *CSF 25344 v
1073                                                                 >  *        EPS.STOP=DTM.TIME<1,SCC>
1074 IF EPS.STOP = "" THEN EPS.STOP=DTM.TIME<1,SCC>                     IF EPS.STOP = "" THEN EPS.STOP=DTM.TIME<1,SCC>
1075                                                                 >  *CSF 25344 ^
1076 EPS.REG=EPS.REG + S.PR.HRS<1,SCC>                                  EPS.REG=EPS.REG + S.PR.HRS<1,SCC>
1077 EPS.SOURCE="JCS"                                                   EPS.SOURCE="JCS"
1078 MATWRITE EPS.REC ON DAILY.HOURS,EPS.KEY                            MATWRITE EPS.REC ON DAILY.HOURS,EPS.KEY

1079 IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" THEN GO 4999  |  *T25146 v
1080                                                                 >  *        IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" T
1081                                                                 >  IF DTM.TYPE<1,SCC> = "L" OR DTM.TYPE<1,SCC> = "I" OR (DTM.TY
1082                                                                 >  *T25146 ^
1083 END                                                                END
1084 IF S.OSJ<1,SCC> = "0" THEN                                         IF S.OSJ<1,SCC> = "0" THEN
1085 MATREADU JOB.REC FROM JOB,CONO:DTM.JOB<1,SCC> ELSE MAT JOB.REC     MATREADU JOB.REC FROM JOB,CONO:DTM.JOB<1,SCC> ELSE MAT JOB.R

1088 JLB.TYPE = DTM.JOB.TYPE<1,SCC>                                     JLB.TYPE = DTM.JOB.TYPE<1,SCC>
1089 JLB.DIV = DTM.DIV<1,SCC>                                           JLB.DIV = DTM.DIV<1,SCC>
1090 OJLB.DEPT = DTM.DEPT<1,SCC>                                        OJLB.DEPT = DTM.DEPT<1,SCC>
1091 OJLB.CCTR = DTM.CCTR<1,SCC>                                        OJLB.CCTR = DTM.CCTR<1,SCC>
1092 JLB.OPER = DTM.OPER<1,SCC>                                         JLB.OPER = DTM.OPER<1,SCC>
1093 JLB.OPER.COMP = DTM.OPER.COMPLETE<1,SCC> ;*T25907               <  
1094 JLB.FCTR = DTM.TIME.CODE<1,SCC>                                    JLB.FCTR = DTM.TIME.CODE<1,SCC>
1095 JLB.EMP = DTM.EMP                                                  JLB.EMP = DTM.EMP
1096 JLB.IMP = DTM.IMP<1,SCC>                                           JLB.IMP = DTM.IMP<1,SCC>
1097 JLB.CNCR = S.HRS<1,SCC> - S.PR.HRS<1,SCC>                          JLB.CNCR = S.HRS<1,SCC> - S.PR.HRS<1,SCC>

1098                                                                 >  * TASK 20110
1099 IF JLB.CNCR < 2 THEN JLB.CNCR = "0"                                IF JLB.CNCR < 2 THEN JLB.CNCR = "0"
1100                                                                 >  * TASK 20110
1101 JLB.DATE = DTM.DATE                                                JLB.DATE = DTM.DATE
1102 JLB.MON = POSTING.MON                                              JLB.MON = POSTING.MON
1103 JLB.HRS.STD = S.STD.HRS<1,SCC>                                     JLB.HRS.STD = S.STD.HRS<1,SCC>
1104 JLB.IMP.STD = S.STD.IMP<1,SCC>                                     JLB.IMP.STD = S.STD.IMP<1,SCC>

1148 READV REC FROM GANG.JOB,CONO:DTM.JOB<1,SCC>,1 THEN                 READV REC FROM GANG.JOB,CONO:DTM.JOB<1,SCC>,1 THEN
1149 LAB.ID=JLB.ID[4,99]                                                LAB.ID=JLB.ID[4,99]
1150 JDPTR=S.DPTR<1,SCC>                                                JDPTR=S.DPTR<1,SCC>
1151 STATUS=""                                                          STATUS=""
1152 CALL GANG.LB.ALLOC.SUB(CONO,LAB.ID,JDPTR,MAT WIP.LEVEL.REC,GAN     CALL GANG.LB.ALLOC.SUB(CONO,LAB.ID,JDPTR,MAT WIP.LEVEL.REC,G
1153                                                                 >  *       IF STATUS # "" THEN
1154                                                                 >  *         PRINT @(0,23):@(-4):STATUS:
1155                                                                 >  *         INPUT REPLY,1:
1156                                                                 >  *         PRINT @(0,23):@(-4):
1157                                                                 >  *       END

1235 FOR W = 1 TO WPTR                                                  FOR W = 1 TO WPTR
1236 JOB.WIP<1,2,W> = JOB.WIP<1,2,W> + JLB.WIP<1,1,W>                   JOB.WIP<1,2,W> = JOB.WIP<1,2,W> + JLB.WIP<1,1,W>
1237 JOB.LB.WIP<1,2,W> = JOB.LB.WIP<1,2,W> + JLB.WIP<1,1,W>             JOB.LB.WIP<1,2,W> = JOB.LB.WIP<1,2,W> + JLB.WIP<1,1,W>
1238 CCW.LB.I<1,W> = CCW.LB.I<1,W> + JLB.WIP<1,1,W>                     CCW.LB.I<1,W> = CCW.LB.I<1,W> + JLB.WIP<1,1,W>
1239 NEXT W                                                             NEXT W
1240                                                                 >  * T23254
1241 MATWRITE CCW.REC ON COST.CNTR.WIP,CCW.ID                           MATWRITE CCW.REC ON COST.CNTR.WIP,CCW.ID
1242 END                                                                END
1243                                                                 >  * T23254
1244 IF JLB.MON < JOB.LB.WIP<1,4> OR JOB.LB.WIP<1,4> = "" THEN          IF JLB.MON < JOB.LB.WIP<1,4> OR JOB.LB.WIP<1,4> = "" THEN

1251 JOB.LB.WIP<1,5> = JLB.MON                                          JOB.LB.WIP<1,5> = JLB.MON
1252 IF JLB.MON > JOB.WIP<1,5> THEN                                     IF JLB.MON > JOB.WIP<1,5> THEN
1253 JOB.WIP<1,5> = JLB.MON                                             JOB.WIP<1,5> = JLB.MON
1254 END                                                                END
1255 END                                                                END
1256                                                                 >  * T23254
1257                                                                 >  *  MATWRITE CCW.REC ON COST.CNTR.WIP,CCW.ID
1258                                                                 >  *END
1259                                                                 >  * T23254
1260 IF JLB.DATE >= JOB.LB.DATE<1,DFND,1> THEN                          IF JLB.DATE >= JOB.LB.DATE<1,DFND,1> THEN

1270 JOB.LB.COST<1,DFND> = JOB.LB.COST<1,DFND> + JLB.COST               JOB.LB.COST<1,DFND> = JOB.LB.COST<1,DFND> + JLB.COST
1271 FOR I = 1 TO DPTR                                                  FOR I = 1 TO DPTR
1272 JOB.LB.DCOST<1,DFND,I> = JOB.LB.DCOST<1,DFND,I> + JLB.DCOST<1,     JOB.LB.DCOST<1,DFND,I> = JOB.LB.DCOST<1,DFND,I> + JLB.DCOST<
1273 NEXT I                                                             NEXT I
1274 JOB.LB.SALE<1,DFND> = JOB.LB.SALE<1,DFND> + JLB.SALE               JOB.LB.SALE<1,DFND> = JOB.LB.SALE<1,DFND> + JLB.SALE
1275                                                                 >  *PRDS.ID = CONO:"*":JLB.DIV:"*":OJLB.DEPT:"*":OJLB.CCTR:"*":
1276                                                                 >  *MATREADU PRDS.REC FROM PROD.STATS,PRDS.ID ELSE MAT PRDS.REC
1277 PSR.ID = CONO:"!":JLB.DIV:"!":OJLB.DEPT:"!":OJLB.CCTR:"!":JLB.     PSR.ID = CONO:"!":JLB.DIV:"!":OJLB.DEPT:"!":OJLB.CCTR:"!":JL
1278 MATREADU PSR.REC FROM PERF.STATS,PSR.ID ELSE MAT PSR.REC = ""      MATREADU PSR.REC FROM PERF.STATS,PSR.ID ELSE MAT PSR.REC = "
1279 IF JLB.CNCR <> 0 THEN                                              IF JLB.CNCR <> 0 THEN

1285 PCT = JLB.CNCR / (JLB.HRS / 1000)                                  PCT = JLB.CNCR / (JLB.HRS / 1000)
1286 JOB.LB.TCOST<1,DFND,5> = JOB.LB.TCOST<1,DFND,5> + INT((JLB.COS     JOB.LB.TCOST<1,DFND,5> = JOB.LB.TCOST<1,DFND,5> + INT((JLB.C
1287 PSR.CNC.IMP = PSR.CNC.IMP + INT((JLB.IMP / 1000) * PCT + .5)       PSR.CNC.IMP = PSR.CNC.IMP + INT((JLB.IMP / 1000) * PCT + .5)
1288 END                                                                END
1289 END                                                                END
1290                                                                 >  * T18439
1291 BEGIN CASE                                                         BEGIN CASE
1292 CASE JLB.TYPE = "N"                                                CASE JLB.TYPE = "N"
1293 PTR = 2                                                            PTR = 2
1294 CASE JLB.TYPE = "S"                                                CASE JLB.TYPE = "S"

1301 IF JLB.CNCR + 0 = 0 THEN      ;* UPDATE PERF-PROD STATS ONLY I     IF JLB.CNCR + 0 = 0 THEN      ;* UPDATE PERF-PROD STATS ONLY
1302 PRDS.ID = CONO:"*":JLB.DIV:"*":OJLB.DEPT:"*":OJLB.CCTR:"*":JLB     PRDS.ID = CONO:"*":JLB.DIV:"*":OJLB.DEPT:"*":OJLB.CCTR:"*":J
1303 MATREADU PRDS.REC FROM PROD.STATS,PRDS.ID ELSE MAT PRDS.REC =      MATREADU PRDS.REC FROM PROD.STATS,PRDS.ID ELSE MAT PRDS.REC 
1304 BEGIN CASE                                                         BEGIN CASE
1305 CASE JLB.TYPE = "N"                                                CASE JLB.TYPE = "N"
1306                                                                 >  *   PTR = 2
1307 PRDS.LAB.NC.HRS = PRDS.LAB.NC.HRS + JLB.HRS                        PRDS.LAB.NC.HRS = PRDS.LAB.NC.HRS + JLB.HRS
1308 PRDS.LAB.NC.COST = PRDS.LAB.NC.COST + JLB.COST                     PRDS.LAB.NC.COST = PRDS.LAB.NC.COST + JLB.COST
1309 PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS                                PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS
1310 PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP                                PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP

1311 CASE JLB.TYPE = "C"                                                CASE JLB.TYPE = "C"
1312                                                                 >  *   PTR = 3
1313 PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS                              PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS
1314 PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST                           PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST
1315 PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS                                PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS
1316 PSR.CHG.IMP = PSR.CHG.IMP + JLB.IMP                                PSR.CHG.IMP = PSR.CHG.IMP + JLB.IMP
1317 CASE JLB.TYPE = "S"                                                CASE JLB.TYPE = "S"
1318                                                                 >  *   PTR = 4

1319 PRDS.LAB.SP.HRS = PRDS.LAB.SP.HRS + JLB.HRS                        PRDS.LAB.SP.HRS = PRDS.LAB.SP.HRS + JLB.HRS
1320 PRDS.LAB.SP.COST = PRDS.LAB.SP.COST + JLB.COST                     PRDS.LAB.SP.COST = PRDS.LAB.SP.COST + JLB.COST
1321 PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS                                PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS
1322 PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP                                PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP
1323 CASE 1                                                             CASE 1
1324                                                                 >  *   PTR = 1
1325 JLB.TYPE = "R"                                                     JLB.TYPE = "R"
1326 PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS                              PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS
1327 PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST                           PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST
1328 PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS                                PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS

1340 END CASE                                                           END CASE
1341 MATWRITE PRDS.REC ON PROD.STATS,PRDS.ID                            MATWRITE PRDS.REC ON PROD.STATS,PRDS.ID
1342 END                                                                END
1343 *                                                                  *
1344 IF JLB.HRS.STD + JLB.IMP.STD <> 0 THEN                             IF JLB.HRS.STD + JLB.IMP.STD <> 0 THEN
1345                                                                 >  *T 18439
1346                                                                 >  *  IF JLB.HRS + JLB.IMP # 0 THEN
1347                                                                 >  *    PSR.ACT.HRS = PSR.ACT.HRS + JLB.HRS
1348                                                                 >  *    IF JLB.IMP.STD + 0 = 0 THEN
1349                                                                 >  *      PSR.STD.HRS = PSR.STD.HRS + JLB.HRS.STD

1350                                                                 >  *    END ELSE
1351                                                                 >  *      PSR.STD.HRS = PSR.STD.HRS + INT((JLB.IMP / JLB.IMP.ST
1352                                                                 >  *    END
1353                                                                 >  *    IF JLB.IMP + 0 <> 0 THEN
1354                                                                 >  *      PSR.ACT.IMP = PSR.ACT.IMP + JLB.IMP
1355                                                                 >  *      PSR.STD.IMP = PSR.STD.IMP + INT((JLB.HRS * JLB.IMP.ST
1356                                                                 >  *    END

1357                                                                 >  *  END
1358                                                                 >  *
1359                                                                 >  * T20304
1360 PSR.ACT.HRS = PSR.ACT.HRS + JLB.HRS                                PSR.ACT.HRS = PSR.ACT.HRS + JLB.HRS
1361 PSR.STD.HRS = PSR.STD.HRS + JLB.HRS.STD                            PSR.STD.HRS = PSR.STD.HRS + JLB.HRS.STD
1362 PSR.ACT.IMP = PSR.ACT.IMP + JLB.IMP                                PSR.ACT.IMP = PSR.ACT.IMP + JLB.IMP
1363 PSR.STD.IMP = PSR.STD.IMP + JLB.IMP.STD                            PSR.STD.IMP = PSR.STD.IMP + JLB.IMP.STD

1364 END                                                                END
1365 PSR.DEPT = OJLB.DEPT                                               PSR.DEPT = OJLB.DEPT
1366 PSR.OPER = OJLB.OPER                                               PSR.OPER = OJLB.OPER
1367 MATWRITE PSR.REC ON PERF.STATS,PSR.ID                              MATWRITE PSR.REC ON PERF.STATS,PSR.ID
1368 JOB.LB.TCOST<1,DFND,PTR> = JOB.LB.TCOST<1,DFND,PTR> + JLB.COST     JOB.LB.TCOST<1,DFND,PTR> = JOB.LB.TCOST<1,DFND,PTR> + JLB.CO
1369                                                                 >  ** IF JOB.STATUS<1,1> # 1 THEN
1370                                                                 >  * JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"1")
1371                                                                 >  * JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
1372                                                                 >  * END
1373                                                                 >  * TASK 15062

1386 JOB.TOT.DCOST = JOB.TOT.DCOST + JLB.DCOST<1,1>                     JOB.TOT.DCOST = JOB.TOT.DCOST + JLB.DCOST<1,1>
1387 JOB.TOT.COST = JOB.TOT.COST + JLB.COST                             JOB.TOT.COST = JOB.TOT.COST + JLB.COST
1388 JOB.TOT.SALE = JOB.TOT.SALE + JLB.SALE                             JOB.TOT.SALE = JOB.TOT.SALE + JLB.SALE
1389 MATWRITE JOB.REC ON JOB,CONO : OJLB.JOB                            MATWRITE JOB.REC ON JOB,CONO : OJLB.JOB
1390 RETURN                                                             RETURN
1391 *                                                               <  
1392 ***********                                                     <  
1393 SET.INAH:                                                       <  
1394 ***********                                                     <  
1395 *                                                               <  

1396 IF DMT.DIV='' THEN DMT.DIV=GEN.DIV                              <  
1397 INAH.PROD=DMT.PROD                                              <  
1398 INAH.WHSE=DMT.WHSE                                              <  
1399 INAH.TYPE='S'                                                   <  
1400 INAH.SRC='U'                                                    <  
1401 INAH.DATE=DMT.DATE                                              <  
1402 INAH.PERIOD=POSTING.MON                                         <  

1403 INAH.JOB=DMT.JOB                                                <  
1404 INAH.RECP.NO=ISTK.RECP                                          <  
1405 INAH.LOC=DMT.LOC                                                <  
1406 INAH.TRAN=DMT.JOB                                               <  
1407 INAH.SERIAL=DMT.SERIAL                                          <  
1408 INAH.QTY = INAH.NEW.QTY - INAH.CUR.QTY                          <  
1409 INAH.DV.DP.CC = DMT.DIV:GEN.DEPT:GEN.CCTR                       <  

1410 RETURN                                                          <  
1411 *                                                               <  
1412 *******************                                             <  
1413 RELEASE.INV.LOCKS:                                              <  
1414 *******************                                             <  
1415 *                                                               <  
1416 ;*27242 v                                                       <  

1417 RELEASE INV_SERIAL_TEMP                                         <  
1418 RELEASE INV_SERIAL                                              <  
1419 RELEASE INV_RECP_WHSE_TEMP                                      <  
1420 RELEASE INV_RECP_WHSE                                           <  
1421 RELEASE INV_RECEIPTS_TEMP                                       <  
1422 RELEASE INV_RECEIPTS                                            <  
1423 RELEASE INV.WHSE.LOC.TEMP                                       <  

1424 ;* 27242 ^                                                      <  
1425 RELEASE INV.WHSE,IWH.ID                                         <  
1426 RELEASE INV.WHSE.LOC,IWLO.ID                                    <  
1427 RETURN                                                          <  
1428 91000 ERR.TYPE = 1                                                 91000 ERR.TYPE = 1
1429 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
1430 RETURN                                                             RETURN

1431 93000 ERR.TYPE = 3                                                 93000 ERR.TYPE = 3
1432 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
1433                                                                 >  *
1434 ****** END OF JOB                                                  ****** END OF JOB
1435 *                                                                  *
1436 99999 END                                                          99999 END
1437 


JCSBP/PROD.RPT                                                     /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/PROD.RPT
Printed for thompson at 06/28/2006 04:42:07PM

0019 *    C). Division                                                  *    C). Division
0020 *                                                                  *
0021 *T22007 stefanie 08/27/1997 * Add Division to the heading.         *T22007 stefanie 08/27/1997 * Add Division to the heading.
0022 *T24770 jamesf 02/23/2000 * Changed the rounding routine to th     *T24770 jamesf 02/23/2000 * Changed the rounding routine to 
0023 *                           total instead of each hour read in     *                           total instead of each hour read 
0024 *T25901 cmykleb 03/14/2002 * Change heading to use GET.PROG.HE  |  *T25494 lanny 01/11/2001 * Modify the selection criteria to 
0025 *T26493 cmykleb 03/22/2002 * Change report to use rpt # from p  |  *                         Dept. "1,some,range,all". This mod
0026                                                                 >  *                         also removes the selection logic f
0027                                                                 >  *                         PROC.
0028 **************************************************************     ************************************************************

0035 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0036 *COPY>JCS.CPYLIB>PROD.STATS                                        *COPY>JCS.CPYLIB>PROD.STATS
0037 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0038 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0039 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0040                                                                 >  *COPY>CPYLIB>EDIT.COM.DRIVER ;*T25494
0041                                                                 >  *COPY>PMC.CPYLIB>FISCAL
0042 *                                                                  *
0043                                                                 >  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSI
0044 *---- SETUP FOR SYSTEM ERROR MESSAGES                              *---- SETUP FOR SYSTEM ERROR MESSAGES

0047 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0048 *                                                                  *
0049 *---- PROCREAD                                                     *---- PROCREAD
0050 *                                                                  *
0051 PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM PROC";GOSUB 91000;GO     PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM PROC";GOSUB 91000;
0052 PERIOD1=XX<3>                                                   |  *T25494 v
0053                                                                 >  CONO = XX<1>
0054                                                                 >  CONO.NAME = XX<2>
0055                                                                 >  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
0056                                                                 >  ERRMSG='Cannot read JCFISCAL record from CONTROL file!'

0057                                                                 >  GOTO 93000
0058                                                                 >  END
0059                                                                 >  START.DEPT=''; START.PER=''; END.DEPT=''; END.PER=''; SHIFT=
0060                                                                 >  POS=1
0061                                                                 >  OPEN 'CBN.SCREENS' TO M.SCREENS ELSE
0062                                                                 >  ERRMSG = 'CBN.SCREENS FILE IS MISSING'
0063                                                                 >  GOSUB 91000;GOTO 99999

0064                                                                 >  END
0065                                                                 >  SCROLL.SIZE = 10
0066                                                                 >  CURRENT.POS = 1
0067                                                                 >  GOSUB 5000 ;*INITIALIZE SCREENS
0068                                                                 >  GOSUB 5100 ;*DISPLAY MAIN SCREEN
0069                                                                 >  *     FOR PROMPT.NO = 1 TO 7 
0070                                                                 >  FOR PROMPT.NO = 1 TO 5 

0071                                                                 >  *       ON PROMPT.NO GOSUB 6100,6200,6300,6400,6500,6600,670
0072                                                                 >  ON PROMPT.NO GOSUB 6100,6200,6300,6400,6500
0073                                                                 >  IF ECD.RET.VALUE = "END" THEN PROMPT.NO = 5
0074                                                                 >  NEXT PROMPT.NO
0075                                                                 >  LOOP.FLAG = 0
0076                                                                 >  LOOP WHILE LOOP.FLAG = 0 DO
0077                                                                 >  ECD.NUM = 10

0078                                                                 >  ECD.ACTION = 4
0079                                                                 >  CALL SCRN.EDIT
0080                                                                 >  BEGIN CASE
0081                                                                 >  CASE ECD.RET.VALUE = "END"
0082                                                                 >  GOTO 99999
0083                                                                 >  CASE ECD.RET.VALUE = "E"
0084                                                                 >  GOTO 99999

0085                                                                 >  CASE ECD.RET.VALUE = 1
0086                                                                 >  GOSUB 6100
0087                                                                 >  CASE ECD.RET.VALUE = 2
0088                                                                 >  GOSUB 6200
0089                                                                 >  CASE ECD.RET.VALUE = 3
0090                                                                 >  GOSUB 6300
0091                                                                 >  CASE ECD.RET.VALUE = 4

0092                                                                 >  GOSUB 6400
0093                                                                 >  CASE ECD.RET.VALUE = 5
0094                                                                 >  GOSUB 6500
0095                                                                 >  *        CASE ECD.RET.VALUE = 6
0096                                                                 >  *          GOSUB 6600
0097                                                                 >  *        CASE ECD.RET.VALUE = 7
0098                                                                 >  *          GOSUB 6700

0099                                                                 >  CASE ECD.RET.VALUE = "F"
0100                                                                 >  LOOP.FLAG = 1
0101                                                                 >  END CASE
0102                                                                 >  REPEAT
0103                                                                 >  IF ECD.RET.VALUE = "END" THEN GOTO 99999
0104                                                                 >  *T25494 ^
0105                                                                 >  *

0106                                                                 >  PERIOD1=START.PER
0107 MM=PERIOD1[5,2]                                                    MM=PERIOD1[5,2]
0108 YYYY=PERIOD1[1,4]                                                  YYYY=PERIOD1[1,4]
0109 PERIOD2=XX<4>                                                   |  PERIOD2=END.PER
0110 PERIOD3=XX<8>                                                   |  PERIOD3=PERIOD1 - 100
0111 PERIOD4=XX<9>                                                   |  PERIOD4=PERIOD2 - 100
0112 DIV.FROM.PROC = XX<6>   ;* T22007 <                             |  GOSUB 8950 ;* SELECT THE PROD.STATS FILE

0113 IF PERIOD2=PERIOD1 THEN                                            IF PERIOD2=PERIOD1 THEN
0114 TITLE2=SPACE(67):"PERIOD ":MM:"/":YYYY                          |  TITLE2=SPACE(59):"PERIOD ":MM:"/":YYYY
0115 END ELSE                                                           END ELSE
0116 MM2=PERIOD2[5,2]                                                   MM2=PERIOD2[5,2]
0117 YYYY2=PERIOD2[1,4]                                                 YYYY2=PERIOD2[1,4]
0118 TITLE2=SPACE(61):"PERIOD ":MM:"/":YYYY:" THROUGH ":MM2:"/":YYY  |  TITLE2=SPACE(51):"PERIOD ":MM:"/":YYYY:" THROUGH ":MM2:"/":Y
0119 END                                                                END
0120 SAVE.YEAR1=YYYY                                                    SAVE.YEAR1=YYYY

0130 DIM S.DIV(15)                                                      DIM S.DIV(15)
0131 *                                                                  *
0132 *---- OPEN FILES                                                   *---- OPEN FILES
0133 *                                                                  *
0134 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSI
0135 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING  <  
0136 OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE M     OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE
0137 OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FIL     OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT F
0138 OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE MISS     OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE MI
0139 OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG='PROD.STATS FIL     OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG='PROD.STATS F

0160 MAT S.DIV=""                                                       MAT S.DIV=""
0161 PREV.DIV=""                                                        PREV.DIV=""
0162 PREV.DEPT=""                                                       PREV.DEPT=""
0163 FIRST.FLAG=1                                                       FIRST.FLAG=1
0164 CONT.FLAG=0                                                        CONT.FLAG=0
0165 RNAME="COST-CNTR"                                               |  REPORT.NAME="COST-CNTR"
0166 NODATA=1                                                           NODATA=1
0167 MAT PRDS.REC=""                                                    MAT PRDS.REC=""
0168 PTR=1                                                              PTR=1
0169 DPTR=1                                                             DPTR=1

0173 *                                                                  *
0174 CONO=""                                                            CONO=""
0175 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0176 IF CONO='END' THEN GOTO 99999                                      IF CONO='END' THEN GOTO 99999
0177 MAT EDIT.COM.DRIVER=""                                             MAT EDIT.COM.DRIVER=""
0178 *T25901 v                                                       <  
0179 *T26493 v                                                       <  
0180 *  REPORT.NAME = "XX"                                           <  
0181 *  REPORT.NUMBER = "XXXX"                                       <  
0182 REPORT.NAME = ""                                                <  

0183 REPORT.NUMBER = XX<2>                                           <  
0184 CONO.NAME = ""                                                  <  
0185 *T26943 ^                                                       <  
0186 HLINE1 = "" ; HLINE2 = ""                                       <  
0187 CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,""  <  
0188 *T25901 ^                                                       <  
0189 *                                                                  *

0313 *                                                                  *
0314 20*                                                                20*
0315 PRINT CHAR(12)                                                     PRINT CHAR(12)
0316 LINE.CNT=0                                                         LINE.CNT=0
0317 PG.NUM=PG.NUM + 1                                                  PG.NUM=PG.NUM + 1
0318 *T25901 v                                                       |  H.LINE="";HLINE1="";HLINE2="";HLINE3=""
0319 *  H.LINE="";HLINE1="";HLINE2="";HLINE3=""                      |  HLINE1="RUN DATE: ":OCONV(DATE(),"D2/") "R#8":SP23
0320 *  HLINE1="RUN DATE: ":OCONV(DATE(),"D2/") "R#8":SP23           |  K=SPACE((50 - LEN(CO.NAME)) / 2)
0321 *  K=SPACE((50 - LEN(CO.NAME)) / 2)                             |  HLINE2=K:CO.NAME:K
0322 *  HLINE2=K:CO.NAME:K                                           |  HLINE3=SP19:"PAGE ":PG.NUM

0323 *  HLINE3=SP19:"PAGE ":PG.NUM                                   |  H.LINE=HLINE1:HLINE2:HLINE3
0324 *  H.LINE=HLINE1:HLINE2:HLINE3                                  |  PRINT H.LINE
0325 *  PRINT H.LINE                                                 |  * T22007 v
0326 *  H.LINE="DIVISION: ":DIV.FROM.PROC:SPACE(45):"PRODUCTION REP  |  *        H.LINE=SP57:"PRODUCTION REPORT"
0327 *  PRINT H.LINE                                                 |  H.LINE="DIVISION: ":DIV.FROM.PROC:SPACE(45):"PRODUCTION REPO
0328 HLINE3="DIVISION: ":DIV.FROM.PROC                               |  * T22007 ^
0329 PRINT HLINE1:PG.NUM"R#3"                                        |  PRINT H.LINE

0330 PRINT HLINE2                                                    <  
0331 PRINT HLINE3                                                    <  
0332 *T25901 ^                                                       <  
0333 H.LINE=TITLE2                                                      H.LINE=TITLE2
0334 PRINT H.LINE                                                       PRINT H.LINE
0335 BEGIN CASE                                                         BEGIN CASE
0336 CASE RNAME="COST-CNTR"                                          |  CASE REPORT.NAME="COST-CNTR"

0347 PRINT H.LINE                                                       PRINT H.LINE
0348 H.LINE="DEPARTMENT  ":PREV.DEPT "L#5":" ":DEPT.DESC                H.LINE="DEPARTMENT  ":PREV.DEPT "L#5":" ":DEPT.DESC
0349 PRINT H.LINE                                                       PRINT H.LINE
0350 END                                                                END
0351 LINE.CNT=LINE.CNT + 2                                              LINE.CNT=LINE.CNT + 2
0352 CASE RNAME="DEPART"                                             |  CASE REPORT.NAME="DEPART"
0353 COLUMN.TITLE=SP9:"DEPARTMENT":SP17                                 COLUMN.TITLE=SP9:"DEPARTMENT":SP17
0354 IF CONT.FLAG=0 THEN                                                IF CONT.FLAG=0 THEN
0355 MATREAD DIV.REC FROM DIVISION,CONO:DIV.NUM ELSE DIV.DESC=UNKNO     MATREAD DIV.REC FROM DIVISION,CONO:DIV.NUM ELSE DIV.DESC=UNK
0356 H.LINE="DIVISION    ":DIV.NUM "L#2":"    ":DIV.DESC                H.LINE="DIVISION    ":DIV.NUM "L#2":"    ":DIV.DESC

0358 END ELSE                                                           END ELSE
0359 H.LINE="DIVISION    ":PREV.DIV "L#2":"    ":DIV.DESC               H.LINE="DIVISION    ":PREV.DIV "L#2":"    ":DIV.DESC
0360 PRINT H.LINE                                                       PRINT H.LINE
0361 END                                                                END
0362 LINE.CNT=LINE.CNT + 1                                              LINE.CNT=LINE.CNT + 1
0363 CASE RNAME="DIVISION.RPT"                                       |  CASE REPORT.NAME="DIVISION.RPT"
0364 COLUMN.TITLE=SP10:"DIVISION":SP18                                  COLUMN.TITLE=SP10:"DIVISION":SP18
0365 END CASE                                                           END CASE
0366 PRINT                                                              PRINT
0367 H.LINE=SP34:"<------------- H O U R S ------------->  <-------     H.LINE=SP34:"<------------- H O U R S ------------->  <-----

0566 *                                                                  *
0567 *---- SETUP DEPT REPORT                                            *---- SETUP DEPT REPORT
0568 *                                                                  *
0569 80*                                                                80*
0570 PREV.DIV=""                                                        PREV.DIV=""
0571 RNAME="DEPART"                                                  |  REPORT.NAME="DEPART"
0572 DP.CNT=COUNT(S.DEPT(1),VM) + (S.DEPT(1) # "")                      DP.CNT=COUNT(S.DEPT(1),VM) + (S.DEPT(1) # "")
0573 FOR DD=1 TO DP.CNT                                                 FOR DD=1 TO DP.CNT
0574 DIV.NUM=FIELD(S.DEPT(1)<1,DD>,"*",2)                               DIV.NUM=FIELD(S.DEPT(1)<1,DD>,"*",2)
0575 DEPT.NUM=FIELD(S.DEPT(1)<1,DD>,"*",3)                              DEPT.NUM=FIELD(S.DEPT(1)<1,DD>,"*",3)

0710 RETURN                                                             RETURN
0711 *                                                                  *
0712 *---- SETUP DIVISION REPORT                                        *---- SETUP DIVISION REPORT
0713 *                                                                  *
0714 130*                                                               130*
0715 RNAME="DIVISION.RPT"                                            |  REPORT.NAME="DIVISION.RPT"
0716 NEW.DIV=1                                                          NEW.DIV=1
0717 DV.CNT=COUNT(S.DIV(1),VM) + (S.DIV(1) # "")                        DV.CNT=COUNT(S.DIV(1),VM) + (S.DIV(1) # "")
0718 FOR EE=1 TO DV.CNT                                                 FOR EE=1 TO DV.CNT
0719 DIV.NUM=FIELD(S.DIV(1)<1,EE>,"*",2)                                DIV.NUM=FIELD(S.DIV(1)<1,EE>,"*",2)

0829 P.LINE=P.LINE:SP:COMP(13)<1,2>"R#7":SP:COMP(14)<1,2>"R#7":SP:C     P.LINE=P.LINE:SP:COMP(13)<1,2>"R#7":SP:COMP(14)<1,2>"R#7":SP
0830 PRINT P.LINE                                                       PRINT P.LINE
0831 LINE.CNT=LINE.CNT + 1                                              LINE.CNT=LINE.CNT + 1
0832 END                                                                END
0833 RETURN                                                             RETURN
0834                                                                 >  *
0835                                                                 >  *T25494 v  INITIALIZE SCREEN
0836                                                                 >  5000 *
0837                                                                 >  MAT SCV.REC = ""
0838                                                                 >  MAT EDIT.COM.DRIVER = ""

0839                                                                 >  ECD.SCRN.CNT = 3
0840                                                                 >  ECD.SCRN.FLAG = 1
0841                                                                 >  ECD.SCRN.NAME = 'PROD.RPT'
0842                                                                 >  ECD.SCRN.NAME<2> = 'DEPT.CCTR.RANGE.SEL'
0843                                                                 >  ECD.SCRN.NAME<3> = 'DEPT.CCTR.SOME.SEL'
0844                                                                 >  ECD.SCRN.NO = 1
0845                                                                 >  ECD.ACTION = 1

0846                                                                 >  CALL SCRN.EDIT
0847                                                                 >  RETURN
0848                                                                 >  5100 * DISPLAY MAIN SCREEN
0849                                                                 >  ECD.SCRN.NO = 1
0850                                                                 >  *     ECD.ACTION = 1
0851                                                                 >  *     CALL SCRN.EDIT
0852                                                                 >  ECD.ACTION = 2

0853                                                                 >  CALL SCRN.EDIT
0854                                                                 >  SCV.REC(2)<ECD.SCRN.NO> = OCONV(DATE(),"D2/")
0855                                                                 >  ECD.ACTION = 3
0856                                                                 >  CALL SCRN.EDIT
0857                                                                 >  RETURN
0858                                                                 >  6100 * ENTER START PERIOD
0859                                                                 >  ECD.NUM = 15

0860                                                                 >  ECD.ACTION = 4
0861                                                                 >  CALL SCRN.EDIT
0862                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0863                                                                 >  IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN
0864                                                                 >  ERRMSG='Cannot be a future period'; GOSUB 91000
0865                                                                 >  GOTO 6100
0866                                                                 >  END ELSE

0867                                                                 >  START.PER = ECD.RET.VALUE
0868                                                                 >  SCV.REC(15)<1> = START.PER
0869                                                                 >  END
0870                                                                 >  END
0871                                                                 >  RETURN
0872                                                                 >  6200 * ENTER END PERIOD
0873                                                                 >  ECD.NUM = 16

0874                                                                 >  ECD.ACTION = 4
0875                                                                 >  CALL SCRN.EDIT
0876                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0877                                                                 >  IF ECD.RET.VALUE < START.PER THEN
0878                                                                 >  ERRMSG='Must not be less than Start Period'; GOSUB 91000; GO
0879                                                                 >  END ELSE
0880                                                                 >  IF ECD.RET.VALUE > FR.CURR.PER<1,POS> THEN

0881                                                                 >  ERRMSG='Cannot be a future period'; GOSUB 91000
0882                                                                 >  GOTO 6200
0883                                                                 >  END ELSE
0884                                                                 >  IF ECD.RET.VALUE[1,4] # START.PER[1,4] THEN
0885                                                                 >  ERRMSG = 'THE PERIOD YEARS ENTERED MUST BE THE SAME YEAR'
0886                                                                 >  GOSUB 91000; GO 6200
0887                                                                 >  END

0888                                                                 >  END
0889                                                                 >  END
0890                                                                 >  END.PER = ECD.RET.VALUE
0891                                                                 >  SCV.REC(16)<1> = END.PER
0892                                                                 >  END
0893                                                                 >  RETURN
0894                                                                 >  6300 * ENTER DEPT#

0895                                                                 >  SOURCE.FLAG = "D"
0896                                                                 >  ECD.NUM = 11
0897                                                                 >  ECD.ACTION = 4
0898                                                                 >  CALL SCRN.EDIT
0899                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
0900                                                                 >  DEPT.NUM = ECD.RET.VALUE
0901                                                                 >  BEGIN CASE

0902                                                                 >  CASE DEPT.NUM = "R"
0903                                                                 >  SCV.REC(1)<2> = OCONV(DATE(),"D2/")
0904                                                                 >  SCV.REC(5)<2> = "Beginning department#"
0905                                                                 >  SCV.REC(6)<2> = "Ending department#"
0906                                                                 >  SCV.REC(3)<2> = START.DEPT
0907                                                                 >  SCV.REC(4)<2> = END.DEPT
0908                                                                 >  GOSUB 7500

0909                                                                 >  REPEAT.FLAG = 0
0910                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0911                                                                 >  ECD.ACTION = 99
0912                                                                 >  CALL SCRN.EDIT
0913                                                                 >  SCV.REC(3)<2> = ""
0914                                                                 >  SCV.REC(4)<2> = ""
0915                                                                 >  GOSUB 5100 ;* MAIN SCREEN

0916                                                                 >  IF REPEAT.FLAG = 1 THEN GO 6300
0917                                                                 >  CASE DEPT.NUM = "S"
0918                                                                 >  SCV.REC(1)<3> = OCONV(DATE(),"D2/")
0919                                                                 >  SCV.REC(2)<3> = "Department numbers"
0920                                                                 >  SCV.REC(4)<3> = ""
0921                                                                 >  SCV.REC(5)<3> = ""
0922                                                                 >  ID.LIST = ""

0923                                                                 >  DEPT.LIST = ""
0924                                                                 >  GOSUB 7800
0925                                                                 >  REPEAT.FLAG = 0
0926                                                                 >  IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "E" THEN REPEAT.
0927                                                                 >  ECD.ACTION = 99
0928                                                                 >  CALL SCRN.EDIT
0929                                                                 >  GOSUB 5100 ;* MAIN SCREEN

0930                                                                 >  IF REPEAT.FLAG = 1 THEN GO 6300
0931                                                                 >  CASE DEPT.NUM = "ALL"
0932                                                                 >  CASE LEN(DEPT.NUM) > 2 
0933                                                                 >  ERRMSG = "Maximum Length Exceeded"
0934                                                                 >  GOSUB 91000
0935                                                                 >  GO 6300
0936                                                                 >  CASE 1

0937                                                                 >  END CASE
0938                                                                 >  SCV.REC(11)<1> = DEPT.NUM
0939                                                                 >  RETURN
0940                                                                 >  6400 * ENTER SHIFT
0941                                                                 >  ECD.NUM = 17
0942                                                                 >  ECD.ACTION = 4; CALL SCRN.EDIT
0943                                                                 >  IF ECD.RET.VALUE # 'END' THEN

0944                                                                 >  IF (ECD.RET.VALUE > 0 AND ECD.RET.VALUE < 10) OR ECD.RET.VAL
0945                                                                 >  SHIFT=ECD.RET.VALUE
0946                                                                 >  END ELSE
0947                                                                 >  ERRMSG='INVALID VALUE'; GOSUB 91000; GO 6400
0948                                                                 >  END
0949                                                                 >  END
0950                                                                 >  RETURN

0951                                                                 >  6500 * ENTER DIVISION CODE
0952                                                                 >  ECD.NUM = 20
0953                                                                 >  ECD.ACTION = 4
0954                                                                 >  CALL SCRN.EDIT
0955                                                                 >  IF ECD.RET.VALUE # 'END' THEN
0956                                                                 >  IF ECD.RET.VALUE # 'ALL' THEN
0957                                                                 >  IF NOT(NUM(ECD.RET.VALUE)) OR LEN(ECD.RET.VALUE) # 2 THEN

0958                                                                 >  ERRMSG='INVALID FORMAT'; GOSUB 91000; GO 6500
0959                                                                 >  END
0960                                                                 >  END
0961                                                                 >  SCV.REC(20)<1> = ECD.RET.VALUE
0962                                                                 >  DIV.FROM.PROC = ECD.RET.VALUE
0963                                                                 >  END
0964                                                                 >  RETURN

0965                                                                 >  7500 * RANGE OF DEPT.
0966                                                                 >  ECD.ACTION = 99
0967                                                                 >  CALL SCRN.EDIT
0968                                                                 >  ECD.SCRN.NO = 2 
0969                                                                 >  *     ECD.ACTION = 1
0970                                                                 >  *     CALL SCRN.EDIT
0971                                                                 >  ECD.ACTION = 2

0972                                                                 >  CALL SCRN.EDIT
0973                                                                 >  SCV.REC(9)<2>=SPACE(10):'DEPARTMENT RANGE SELECTOR'
0974                                                                 >  ECD.ACTION = 3
0975                                                                 >  CALL SCRN.EDIT
0976                                                                 >  GOSUB 7550
0977                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
0978                                                                 >  START.DEPT = ECD.RET.VALUE

0979                                                                 >  GOSUB 7600
0980                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
0981                                                                 >  END.DEPT = ECD.RET.VALUE
0982                                                                 >  DONE.FLAG = 0
0983                                                                 >  LOOP WHILE DONE.FLAG = 0 DO
0984                                                                 >  ECD.NUM = 2
0985                                                                 >  ECD.ACTION = 4

0986                                                                 >  CALL SCRN.EDIT
0987                                                                 >  BEGIN CASE
0988                                                                 >  CASE ECD.RET.VALUE = "E"
0989                                                                 >  ECD.RET.VALUE = "END"
0990                                                                 >  RETURN
0991                                                                 >  CASE ECD.RET.VALUE = 1
0992                                                                 >  GOSUB 7550

0993                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
0994                                                                 >  CASE ECD.RET.VALUE = 2
0995                                                                 >  GOSUB 7600
0996                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
0997                                                                 >  CASE ECD.RET.VALUE = "F"
0998                                                                 >  DONE.FLAG = 1
0999                                                                 >  END CASE

1000                                                                 >  REPEAT
1001                                                                 >  RETURN
1002                                                                 >  7550 * ENTER BEGINNING OF RANGE
1003                                                                 >  ECD.NUM = 3
1004                                                                 >  ECD.ACTION = 4
1005                                                                 >  CALL SCRN.EDIT
1006                                                                 >  IF SOURCE.FLAG = "D" THEN

1007                                                                 >  BEGIN CASE
1008                                                                 >  CASE ECD.RET.VALUE = 'END'
1009                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1010                                                                 >  ERRMSG = "Must enter 2 digits"
1011                                                                 >  GOSUB 91000
1012                                                                 >  GO 7550
1013                                                                 >  CASE END.DEPT # '' AND ECD.RET.VALUE > END.DEPT

1014                                                                 >  ERRMSG='Cannot be greater than End Dept.'
1015                                                                 >  GOSUB 91000
1016                                                                 >  SCV.REC(3)<2>=START.DEPT
1017                                                                 >  GOTO 7550
1018                                                                 >  CASE 1
1019                                                                 >  START.DEPT = ECD.RET.VALUE
1020                                                                 >  END CASE

1021                                                                 >  END
1022                                                                 >  RETURN
1023                                                                 >  7600 * ENTER ENDING OF RANGE
1024                                                                 >  ECD.NUM = 4
1025                                                                 >  ECD.ACTION = 4 
1026                                                                 >  CALL SCRN.EDIT
1027                                                                 >  IF SOURCE.FLAG = "D" THEN

1028                                                                 >  BEGIN CASE
1029                                                                 >  CASE ECD.RET.VALUE = 'END'
1030                                                                 >  CASE LEN(ECD.RET.VALUE) # 2
1031                                                                 >  ERRMSG = "Must enter 2 digits"
1032                                                                 >  GOSUB 91000
1033                                                                 >  GO 7600
1034                                                                 >  CASE ECD.RET.VALUE < START.DEPT

1035                                                                 >  ERRMSG='Cannot be less than Start Dept.'
1036                                                                 >  GOSUB 91000
1037                                                                 >  SCV.REC(4)<2>=END.DEPT
1038                                                                 >  CASE 1
1039                                                                 >  END.DEPT = ECD.RET.VALUE
1040                                                                 >  END CASE
1041                                                                 >  END

1042                                                                 >  RETURN
1043                                                                 >  7800 * LIST OF DEPT.
1044                                                                 >  ECD.ACTION = 99
1045                                                                 >  CALL SCRN.EDIT
1046                                                                 >  ECD.SCRN.NO = 3 
1047                                                                 >  *     ECD.ACTION = 1
1048                                                                 >  *     CALL SCRN.EDIT

1049                                                                 >  ECD.ACTION = 2
1050                                                                 >  CALL SCRN.EDIT
1051                                                                 >  SCV.REC(9)<2>=SPACE(10):'DEPARTMENT LIST SELECTOR'
1052                                                                 >  ECD.ACTION = 3
1053                                                                 >  CALL SCRN.EDIT
1054                                                                 >  CURRENT.POS = 1
1055                                                                 >  ID.LIST = ""

1056                                                                 >  ID.COUNT = 0
1057                                                                 >  GOSUB 8000 
1058                                                                 >  LOOP
1059                                                                 >  GOSUB 8200 ;* ADD AN ID
1060                                                                 >  WHILE ECD.RET.VALUE # 'END' DO
1061                                                                 >  REPEAT
1062                                                                 >  LOOP.FLAG1=0

1063                                                                 >  LOOP WHILE LOOP.FLAG1 = 0 DO
1064                                                                 >  ECD.NUM = 6
1065                                                                 >  ECD.ACTION = 4
1066                                                                 >  CALL SCRN.EDIT
1067                                                                 >  BEGIN CASE
1068                                                                 >  CASE ECD.RET.VALUE = "A"
1069                                                                 >  GOSUB 8200

1070                                                                 >  CASE ECD.RET.VALUE = "C"
1071                                                                 >  GOSUB 8400
1072                                                                 >  CASE ECD.RET.VALUE = "D"
1073                                                                 >  GOSUB 8600
1074                                                                 >  CASE ECD.RET.VALUE = "SF"
1075                                                                 >  GOSUB 8800
1076                                                                 >  CASE ECD.RET.VALUE = "SR"

1077                                                                 >  GOSUB 8900
1078                                                                 >  CASE ECD.RET.VALUE = "F"
1079                                                                 >  LOOP.FLAG1 = 1 
1080                                                                 >  DEPT.LIST = ""
1081                                                                 >  ID.COUNT = DCOUNT(ID.LIST,VM)
1082                                                                 >  FOR ID.INDX = 1 TO ID.COUNT 
1083                                                                 >  DEPT.LIST = DEPT.LIST:'"':ID.LIST<1,ID.INDX>:'"'

1084                                                                 >  NEXT ID.INDX
1085                                                                 >  CASE ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'E'
1086                                                                 >  LOOP.FLAG1 = 1
1087                                                                 >  END CASE
1088                                                                 >  REPEAT
1089                                                                 >  RETURN
1090                                                                 >  8000 * DISPLAY LIST OF ID's

1091                                                                 >  ECD.ACTION = 6
1092                                                                 >  CALL SCRN.EDIT
1093                                                                 >  SCV.REC(3)<3> = ""
1094                                                                 >  SCV.REC(4)<3> = ""
1095                                                                 >  SCV.REC(5)<3> = ""
1096                                                                 >  FOR DISPLAY.INDEX = 1 TO SCROLL.SIZE
1097                                                                 >  LIST.INDEX = CURRENT.POS + DISPLAY.INDEX -1

1098                                                                 >  IF ID.LIST<1,LIST.INDEX> # "" THEN
1099                                                                 >  SCV.REC(4)<3,DISPLAY.INDEX> = LIST.INDEX
1100                                                                 >  SCV.REC(5)<3,DISPLAY.INDEX> = ID.LIST<1,LIST.INDEX>
1101                                                                 >  END ELSE
1102                                                                 >  *         SCV.REC(4)<3,DISPLAY.INDEX> = ""
1103                                                                 >  *         SCV.REC(5)<3,DISPLAY.INDEX> = ""
1104                                                                 >  END

1105                                                                 >  NEXT DISPLAY.INDEX
1106                                                                 >  ECD.ACTION = 3
1107                                                                 >  CALL SCRN.EDIT
1108                                                                 >  RETURN
1109                                                                 >  8200 * ADD AN ID TO THE END OF THE LIST
1110                                                                 >  LOOP.FLAG3 = 0
1111                                                                 >  LOOP

1112                                                                 >  ECD.RET.VALUE=''; ECD.DEFAULT=''
1113                                                                 >  ECD.NUM = 3
1114                                                                 >  ECD.ACTION = 4
1115                                                                 >  CALL SCRN.EDIT
1116                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1117                                                                 >  IF SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2 THEN
1118                                                                 >  ERRMSG = "Must enter 2 digits"

1119                                                                 >  GOSUB 91000
1120                                                                 >  END ELSE LOOP.FLAG3 = 1
1121                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1122                                                                 >  REPEAT
1123                                                                 >  IF ID.LIST = "" THEN
1124                                                                 >  ID.LIST = ECD.RET.VALUE
1125                                                                 >  END ELSE

1126                                                                 >  LOCATE ECD.RET.VALUE IN ID.LIST<1>,1 SETTING DDUP THEN
1127                                                                 >  ERRMSG='Duplicate entry found on line ':DDUP; GOSUB 91000
1128                                                                 >  GOTO 8200
1129                                                                 >  END
1130                                                                 >  ID.LIST = ID.LIST:VM:ECD.RET.VALUE
1131                                                                 >  END
1132                                                                 >  ID.COUNT = ID.COUNT + 1

1133                                                                 >  IF ID.COUNT > (CURRENT.POS + SCROLL.SIZE - 1) THEN  
1134                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE
1135                                                                 >  END
1136                                                                 >  GOSUB 8000
1137                                                                 >  RETURN
1138                                                                 >  8400 * CHANGE AN ID
1139                                                                 >  ECD.NUM = 8

1140                                                                 >  ECD.ACTION = 4
1141                                                                 >  CALL SCRN.EDIT
1142                                                                 >  BEGIN CASE
1143                                                                 >  CASE ECD.RET.VALUE = ""  OR ECD.RET.VALUE = 'END'
1144                                                                 >  RETURN
1145                                                                 >  CASE ECD.RET.VALUE = "SF"
1146                                                                 >  GOSUB 8800

1147                                                                 >  CASE ECD.RET.VALUE = "SR"
1148                                                                 >  GOSUB 8900
1149                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1
1150                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1151                                                                 >  CHANGE.POS = ECD.RET.VALUE
1152                                                                 >  LOOP.FLAG3 = 0
1153                                                                 >  LOOP

1154                                                                 >  ECD.NUM = 3
1155                                                                 >  ECD.ACTION = 4
1156                                                                 >  CALL SCRN.EDIT
1157                                                                 >  IF ECD.RET.VALUE = "" THEN RETURN
1158                                                                 >  IF ECD.RET.VALUE = "END" THEN RETURN
1159                                                                 >  IF SOURCE.FLAG = "D" AND LEN(ECD.RET.VALUE) # 2 THEN
1160                                                                 >  ERRMSG = "Must enter 2 digits"

1161                                                                 >  GOSUB 91000
1162                                                                 >  END ELSE LOOP.FLAG3 = 1
1163                                                                 >  WHILE LOOP.FLAG3 = 0 DO
1164                                                                 >  REPEAT
1165                                                                 >  LOCATE ECD.RET.VALUE IN ID.LIST<1>,1 SETTING DDUP THEN
1166                                                                 >  ERRMSG='Duplicate entry found on line ':DDUP; GOSUB 91000
1167                                                                 >  GOTO 8400

1168                                                                 >  END
1169                                                                 >  ID.LIST<1,CHANGE.POS> = ECD.RET.VALUE
1170                                                                 >  GOSUB 8000
1171                                                                 >  END ELSE GO 8400
1172                                                                 >  END CASE
1173                                                                 >  RETURN
1174                                                                 >  8600 * DELETE AN ID

1175                                                                 >  ECD.NUM = 7
1176                                                                 >  ECD.ACTION = 4
1177                                                                 >  CALL SCRN.EDIT
1178                                                                 >  BEGIN CASE
1179                                                                 >  CASE ECD.RET.VALUE = ""  OR ECD.RET.VALUE = 'END'
1180                                                                 >  RETURN
1181                                                                 >  CASE ECD.RET.VALUE = "SF"

1182                                                                 >  GOSUB 8800
1183                                                                 >  CASE ECD.RET.VALUE = "SR"
1184                                                                 >  GOSUB 8900
1185                                                                 >  CASE ECD.RET.VALUE > CURRENT.POS - 1
1186                                                                 >  IF ECD.RET.VALUE < CURRENT.POS + SCROLL.SIZE THEN
1187                                                                 >  DEL ID.LIST<1,ECD.RET.VALUE>
1188                                                                 >  GOSUB 8000

1189                                                                 >  END ELSE GO 8600
1190                                                                 >  CASE 1
1191                                                                 >  GO 8600
1192                                                                 >  END CASE
1193                                                                 >  RETURN
1194                                                                 >  8800 * SCROLL FORWARD
1195                                                                 >  IF CURRENT.POS + SCROLL.SIZE > ID.COUNT THEN

1196                                                                 >  CURRENT.POS = 1
1197                                                                 >  END ELSE
1198                                                                 >  CURRENT.POS = CURRENT.POS + SCROLL.SIZE
1199                                                                 >  END
1200                                                                 >  GOSUB 8000 ;* REFRESH DATA
1201                                                                 >  RETURN
1202                                                                 >  8900 * SCROLL REVERSE

1203                                                                 >  IF CURRENT.POS - SCROLL.SIZE < 1 THEN
1204                                                                 >  CURRENT.POS = 1
1205                                                                 >  END ELSE
1206                                                                 >  CURRENT.POS = CURRENT.POS - SCROLL.SIZE
1207                                                                 >  END
1208                                                                 >  GOSUB 8000 ;* REFRESH DATA
1209                                                                 >  RETURN

1210                                                                 >  8950 * BUILD SELECT STATEMENT
1211                                                                 >  STMT = 'SSELECT PROD.STATS BY CONO BY DIV BY DEPT BY MCCTR B
1212                                                                 >  STMT2 = 'WITH CONO = "':CONO:'" AND WITH TYPE = "A" '
1213                                                                 >  STMT3 = 'AND WITH DIV = "':DIV.FROM.PROC:'" '
1214                                                                 >  STMT4 = 'AND WITH SHIFT = "':SHIFT:'" '
1215                                                                 >  STMT5 = 'AND WITH PERIOD >= '
1216                                                                 >  STMT6 = 'AND WITH PERIOD <= '

1217                                                                 >  XSTMT = STMT : STMT2
1218                                                                 >  IF DIV.FROM.PROC # 'ALL' THEN XSTMT := STMT3
1219                                                                 >  IF SHIFT # 'ALL' THEN XSTMT := STMT4
1220                                                                 >  XSTMT := STMT5 : '"':PERIOD1:'" ': STMT6 : '"':PERIOD2:'" '
1221                                                                 >  BEGIN CASE
1222                                                                 >  CASE DEPT.NUM = "R"
1223                                                                 >  DSTMT = 'AND WITH DEPT >= "':START.DEPT:'" '

1224                                                                 >  DSTMT := ' AND WITH DEPT <= "':END.DEPT:'"'
1225                                                                 >  CASE DEPT.NUM = "S"
1226                                                                 >  DSTMT = ' AND WITH DEPT =':DEPT.LIST
1227                                                                 >  CASE DEPT.NUM = "ALL"
1228                                                                 >  DSTMT = ''
1229                                                                 >  CASE 1
1230                                                                 >  DSTMT = ' AND WITH DEPT = "':DEPT.NUM:'"'

1231                                                                 >  END CASE
1232                                                                 >  XSTMT := DSTMT
1233                                                                 >  XSTMT := ' OR ':STMT2
1234                                                                 >  IF DIV.FROM.PROC # 'ALL' THEN XSTMT := STMT3
1235                                                                 >  IF SHIFT # 'ALL' THEN XSTMT := STMT4
1236                                                                 >  XSTMT := STMT5 : '"':PERIOD3:'" ': STMT6 : '"':PERIOD4:'" '
1237                                                                 >  XSTMT := DSTMT

1238                                                                 >  UDTEXECUTE XSTMT CAPTURING RESPONSEMSGS
1239                                                                 >  ECD.ACTION = 99
1240                                                                 >  CALL SCRN.EDIT
1241                                                                 >  RETURN
1242                                                                 >  *T25494 ^
1243 *                                                                  *
1244 *---- CALLS FOR SYSCOM                                             *---- CALLS FOR SYSCOM


JCSBP/REV.WIP.MAINT                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REV.WIP.MAINT
Printed for thompson at 06/28/2006 04:42:08PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 *COPY>JCS.CPYLIB>COM.JCS.LINK                                   <  
0003 *COPY>ICS.CPYLIB>COM.INV.MAIN                                   <  
0004 *COPY>ICS.CPYLIB>COM.INV.SERIAL                                 <  
0005 *COPY>JCS.CPYLIB>COM.INV.STATS                                  <  
0006 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0007 *COPY>OPS.CPYLIB>COM.ORDER                                         *COPY>OPS.CPYLIB>COM.ORDER
0008                                                                 >  *COPY>JCS.CPYLIB>COM.JOB

0023 *                                                                  *
0024 * TASK                                                             * TASK
0025 *     18573 5/95 LLH 1-52 ACCOUNTING PERIODS                       *     18573 5/95 LLH 1-52 ACCOUNTING PERIODS
0026 *                                                                  *
0027 * TASK 20377 JR SET JOB STATUS BACK TO COMPLETED OR INVOICED       * TASK 20377 JR SET JOB STATUS BACK TO COMPLETED OR INVOICED
0028 * T23278 markt 10/13/1998 * Add division security check.        |  *T22552 rik 06/11/1998 * UPDATE JCS.CPYLIB REVERSE.WIP.HIST 
0029 *                           Make fiscal data multi-value by di  |  *                        RWH.AMT.PCT WITH 'P'.
0030 *T25340 gat 07/26/2000 * FIX PROBLEM WITH WIP POINTERS IN ERRO  |  *T22746 cm 03/08/1999 * UPGRADE TO REV 11B
0031 *                        WIP ON JOB                             |  *T25340 edwin 12/10/2001 * FIX PROBLEM WITH WIP POINTERS IN 
0032 *T26334 epitka 12/19/2001 * REV12                               |  *                          AND NO WIP ON JOB.

0033 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   <  
0034 *T27265 thompson 02/04/2003 * Fix release problem if no WIP     <  
0035 *T26909 lross 02/13/2004 * Add T25900 mod to clear Allocations  <  
0036 *ENDDOC                                                            *ENDDOC
0037 **************************************************************     ************************************************************
0038 *                                                                  *
0039 *--- FILE INSERTS                                                  *--- FILE INSERTS

0178 *                                                                  *
0179 MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE              MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
0180 ERRMSG = "JCFISCAL IS NOT ON CONTROL FILE"                         ERRMSG = "JCFISCAL IS NOT ON CONTROL FILE"
0181 GOSUB 91000; GOTO 99999                                            GOSUB 91000; GOTO 99999
0182 END                                                                END
0183 *                                                               |  IF LEN(FR.CURR.PER) # 6 THEN
0184 ***** T23278 v                                                  |  ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER
0185 READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE           <  
0186 ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"                  <  
0187 GOSUB 91000; GOTO 99999                                            GOSUB 91000; GOTO 99999

0188 END                                                                END
0189 READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE        |  IF FR.CURR.PER[5,2] < 1 OR FR.CURR.PER[5,2] > NUM.PERIODS TH
0190 ERRMSG = "DIVISIONS SECURITY CONTROL RECORD IS MISSING"         |  ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER
0191 GOSUB 91000; GOTO 99999                                            GOSUB 91000; GOTO 99999
0192 END                                                                END
0193                                                                 >  CURR = FR.CURR.PER[5,2]
0194                                                                 >  YEAR = FR.CURR.PER[1,4]
0195 *                                                                  *

0196 ***** MOVED THE FOLLOWING SECTION TO AFTER CHECK OF DIV.CODE    <  
0197 *  IF LEN(FR.CURR.PER) # 6 THEN                                 <  
0198 *      ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER              <  
0199 *      GOSUB 91000; GOTO 99999                                  <  
0200 *  END                                                          <  
0201 *  IF FR.CURR.PER[5,2] < 1 OR FR.CURR.PER[5,2] > NUM.PERIODS T  <  
0202 *      ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER              <  

0203 *      GOSUB 91000; GOTO 99999                                  <  
0204 *  END                                                          <  
0205 *  CURR = FR.CURR.PER[5,2]                                      <  
0206 *  YEAR = FR.CURR.PER[1,4]                                      <  
0207 *                                                               <  
0208 ***** T23278 ^                                                  <  
0209 *                                                               <  

0220 XLN = 16                                                           XLN = 16
0221 XLN<2> = 29                                                        XLN<2> = 29
0222 XLN<3> = 42                                                        XLN<3> = 42
0223 XLN<4> = 55                                                        XLN<4> = 55
0224 1000*                                                              1000*
0225 RELEASE   ;* T26126                                             <  
0226 MAT RWH.REC = ""; MAT CUST.REC = ""; MAT SCV.REC = ""              MAT RWH.REC = ""; MAT CUST.REC = ""; MAT SCV.REC = ""
0227 ECD.ACTION = 6; CALL SCRN.EDIT                                     ECD.ACTION = 6; CALL SCRN.EDIT
0228 ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT                        ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
0229 IF ECD.RET.VALUE = "END" THEN GOTO 99999                           IF ECD.RET.VALUE = "END" THEN GOTO 99999

0276 ERRMSG = "NO JOB SELECTION FOR CUSTOMER - " : JOB.CUST             ERRMSG = "NO JOB SELECTION FOR CUSTOMER - " : JOB.CUST
0277 GOSUB 91000 ; GOTO 1000                                            GOSUB 91000 ; GOTO 1000
0278 END                                                                END
0279 ECD.RET.VALUE = GXR.ID                                             ECD.RET.VALUE = GXR.ID
0280 1900*                                                              1900*
0281 * T26126 v                                                      |  MATREADU JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
0282 MATREADU JOB.REC FROM JOB, CONO : ECD.RET.VALUE LOCKED          <  
0283 ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS(  <  
0284 GOSUB 91000;GOTO 1000                                           <  
0285 END ELSE                                                        <  

0286 * T26126 ^                                                      <  
0287 RELEASE JOB, CONO:ECD.RET.VALUE                                    RELEASE JOB, CONO:ECD.RET.VALUE
0288 ERRMSG = "CANNOT LOCATE JOB - " : ECD.RET.VALUE                    ERRMSG = "CANNOT LOCATE JOB - " : ECD.RET.VALUE
0289 GOSUB 91000; GOTO 1000                                             GOSUB 91000; GOTO 1000
0290 END                                                                END
0291 CHARGE.JOB = ECD.RET.VALUE                                         CHARGE.JOB = ECD.RET.VALUE
0292 *T23278 v                                                       |  *T25340 v

0293 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     |  *     IF JOB.WIP<1,1> + 0 = 0 THEN
0294 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0295 IF ERRMSG # '' THEN                                             <  
0296 GOSUB 91000; GOTO 1000                                          <  
0297 END                                                             <  
0298 IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN         <  
0299 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN                     <  

0300 ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING &  <  
0301 GOSUB 91000; GOTO 1000                                          <  
0302 END                                                             <  
0303 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE           <  
0304 ERRMSG = "Division ":DIV.CODE:" not found in Control File DIVI  <  
0305 GOSUB 91000; GOTO 99999                                         <  
0306 END                                                             <  

0307 END ELSE                                                        <  
0308 POS = 1                                                         <  
0309 END                                                             <  
0310 *                                                               <  
0311 IF LEN(FR.CURR.PER<1,POS>) # 6 THEN                             <  
0312 ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER<1,POS>              <  
0313 GOSUB 91000; GOTO 99999                                         <  

0314 END                                                             <  
0315 IF FR.CURR.PER<1,POS>[5,2] < 1 OR FR.CURR.PER<1,POS>[5,2] > NU  <  
0316 ERRMSG = "ERROR IN JCFISCAL - ":FR.CURR.PER<1,POS>              <  
0317 GOSUB 91000; GOTO 99999                                         <  
0318 END                                                             <  
0319 CURR = FR.CURR.PER<1,POS>[5,2]                                  <  
0320 YEAR = FR.CURR.PER<1,POS>[1,4]                                  <  

0321 *T23278 ^                                                       <  
0322 *T25340 v IF JOB.WIP<1,1> + 0 = 0 THEN                          <  
0323 IF SUM(JOB.WIP<1,2>) = 0 THEN                                      IF SUM(JOB.WIP<1,2>) = 0 THEN
0324 *T27265                                                         |  *T25340 ^
0325 RELEASE JOB, CONO:ECD.RET.VALUE                                 <  
0326 *T27265                                                         <  
0327 ERRMSG = "NO WORK IN-PROCESS FOR THIS JOB"                         ERRMSG = "NO WORK IN-PROCESS FOR THIS JOB"

0473 END                                                                END
0474 END                                                                END
0475 NEXT II                                                            NEXT II
0476 END                                                                END
0477 GOSUB 8000  ;* GET 'BEFORE' COSTS    ISS                           GOSUB 8000  ;* GET 'BEFORE' COSTS    ISS
0478 *              CALL REVERSE.JOB.WIP(CONO,RWH.JOB,RWH.REV.TYPE,  |  CALL REVERSE.JOB.WIP(CONO,RWH.JOB,RWH.REV.TYPE,RWH.REV.PER,R
0479 CALL REVERSE.JOB.WIP(CONO,RWH.JOB,RWH.REV.TYPE,RWH.REV.PER,RWH  <  
0480 GOSUB 9000  ;* GET 'AFTER' COSTS    ISS                            GOSUB 9000  ;* GET 'AFTER' COSTS    ISS
0481 RWH.JB.AFTER = JOB.WIP<1,2>                                        RWH.JB.AFTER = JOB.WIP<1,2>
0482 RWH.LB.AFTER = JOB.LB.WIP<1,2>                                     RWH.LB.AFTER = JOB.LB.WIP<1,2>

0483 RWH.MT.AFTER = JOB.MT.WIP<1,2>                                     RWH.MT.AFTER = JOB.MT.WIP<1,2>
0484 RWH.OS.AFTER = JOB.OS.WIP<1,2>                                     RWH.OS.AFTER = JOB.OS.WIP<1,2>
0485 RWH.SP.AFTER = JOB.SP.WIP<1,2>                                     RWH.SP.AFTER = JOB.SP.WIP<1,2>
0486 RWH.MS.AFTER = JOB.MS.WIP<1,2>                                     RWH.MS.AFTER = JOB.MS.WIP<1,2>
0487 IF RWH.Z.R.QTY = "Y" THEN                                          IF RWH.Z.R.QTY = "Y" THEN
0488 *T26909 v                                                       <  
0489 IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN                  <  
0490 CALL CLEAR.JOB.ALLOC(CONO,RWH.JOB)                              <  
0491 END                                                             <  
0492 *T26909 ^                                                       <  

0493 RESV.ACTION = "D"                                                  RESV.ACTION = "D"
0494 RESV.LOC = 0                                                       RESV.LOC = 0
0495 CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,RWH.JOB)            |  CALL JOB.RESV.SUB(RESV.ACTION,RESV.LOC,CONO,RWH.JOB)
0496 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
0497 FOR M = MCNT TO 1 STEP - 1                                         FOR M = MCNT TO 1 STEP - 1
0498 IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> =     IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M>
0499 JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":RWH.J     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":RWH
0500 MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO:JSTAT.ID ELSE          MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO:JSTAT.ID ELSE
0501 JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)                        JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)

0552 SEQ.NUM = SEQ.NUM + 1                                              SEQ.NUM = SEQ.NUM + 1
0553 REPEAT                                                             REPEAT
0554 NEW.SEQ.NO = SEQ.NUM + 1                                           NEW.SEQ.NO = SEQ.NUM + 1
0555 WRITE NEW.SEQ.NO ON CONTROL , CONO:"REVERSE.WIP"                   WRITE NEW.SEQ.NO ON CONTROL , CONO:"REVERSE.WIP"
0556 RWH.OPER = OPER.ID ; RWH.ENT.DATE = TODAY                          RWH.OPER = OPER.ID ; RWH.ENT.DATE = TODAY
0557                                                                 >  RWH.AMT.PCT = 'P'
0558 MATWRITE RWH.REC ON REVERSE.WIP.HIST , CONO:SEQ.NUM                MATWRITE RWH.REC ON REVERSE.WIP.HIST , CONO:SEQ.NUM
0559 GOSUB 6000                                                         GOSUB 6000
0560 GOSUB 7000   ;* UPDATE THE INVOICE SALES STATS RECORD ISS          GOSUB 7000   ;* UPDATE THE INVOICE SALES STATS RECORD ISS
0561 MORE = 0                                                           MORE = 0

0777 **************************************************************     ************************************************************
0778 *                                                                  *
0779 7000*                                                              7000*
0780 PROD.KEY='0'                                                       PROD.KEY='0'
0781 WHSE.KEY='0'                                                       WHSE.KEY='0'
0782 *  IF RWH.PERIOD = "ALL" THEN RWH.PERIOD = FR.CURR.PER;* T2327  |  IF RWH.PERIOD = "ALL" THEN RWH.PERIOD = FR.CURR.PER
0783 IF RWH.PERIOD = "ALL" THEN RWH.PERIOD = FR.CURR.PER<1,POS>;* T  <  
0784 MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":RWH.JOB:     MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":RWH.JO
0785 MAT ISS.REC = ""                                                   MAT ISS.REC = ""
0786 END                                                                END

0787 ISS.CUST.ID = JOB.CUST                                             ISS.CUST.ID = JOB.CUST
0788 ISS.SLSM.ID = JOB.SLSMN                                            ISS.SLSM.ID = JOB.SLSMN
0789 *  ISS.INVOICE.NO = FR.CURR.PER;* T23278                        |  ISS.INVOICE.NO = FR.CURR.PER
0790 ISS.INVOICE.NO = FR.CURR.PER<1,POS>;* T23278                    <  
0791 ISS.INVOICE.DATE = DATE()                                          ISS.INVOICE.DATE = DATE()
0792 ISS.SALES.CODE = JOB.SALES.CODE                                    ISS.SALES.CODE = JOB.SALES.CODE
0793 ISS.DIV = JOB.DIV                                                  ISS.DIV = JOB.DIV
0794 ISS.JOB.CAT = JOB.CATG                                             ISS.JOB.CAT = JOB.CATG
0795 ISS.NO.COLORS = JOB.COLORS                                         ISS.NO.COLORS = JOB.COLORS

0796 *  ISS.POSTING.MONTH = FR.CURR.PER;* T23278                     |  ISS.POSTING.MONTH = FR.CURR.PER
0797 ISS.POSTING.MONTH = FR.CURR.PER<1,POS>;* T23278                 <  
0798 ISS.MASTER = JOB.MASTER                                            ISS.MASTER = JOB.MASTER
0799 ISS.LABOR.DCOST = ISS.LABOR.DCOST + AFTER.LABOR.DCOST              ISS.LABOR.DCOST = ISS.LABOR.DCOST + AFTER.LABOR.DCOST
0800 ISS.LABOR.FFOH = ISS.LABOR.FFOH + AFTER.LABOR.FFOH                 ISS.LABOR.FFOH = ISS.LABOR.FFOH + AFTER.LABOR.FFOH
0801 ISS.LABOR.VFOH = ISS.LABOR.VFOH + AFTER.LABOR.VFOH                 ISS.LABOR.VFOH = ISS.LABOR.VFOH + AFTER.LABOR.VFOH
0802 ISS.LABOR.SAOH = ISS.LABOR.SAOH + AFTER.LABOR.SAOH                 ISS.LABOR.SAOH = ISS.LABOR.SAOH + AFTER.LABOR.SAOH

0883 ISS.INVOICE.DATE = DATE()                                          ISS.INVOICE.DATE = DATE()
0884 ISS.SLSM.ID = JOB.SLSMN                                            ISS.SLSM.ID = JOB.SLSMN
0885 ISS.SALES.CODE = JOB.SALES.CODE                                    ISS.SALES.CODE = JOB.SALES.CODE
0886 ISS.JOB.CAT = JOB.CATG                                             ISS.JOB.CAT = JOB.CATG
0887 ISS.NO.COLORS = JOB.COLORS                                         ISS.NO.COLORS = JOB.COLORS
0888 ISS.POSTING.MONTH = FR.CURR.PER<1,POS>                          |  ISS.POSTING.MONTH = FR.CURR.PER
0889 *cust.state not used any more  ISS.CUST.STATE = CUST.STATE      |  * cust.state not used any more      ISS.CUST.STATE = CUST.ST
0890 IF JOB.MASTER = "" THEN                                            IF JOB.MASTER = "" THEN
0891 ISS.MASTER = CHARGE.JOB                                            ISS.MASTER = CHARGE.JOB
0892 END ELSE                                                           END ELSE


JCSBP/SHIFT.SUM.RPT                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/SHIFT.SUM.RPT
Printed for thompson at 06/28/2006 04:42:09PM

0001 SUBROUTINE SHIFT.SUM.RPT(TRN.CONO,TRN.EMP,DTE,SHIFT,REPORT.NUM  |  SUBROUTINE SHIFT.SUM.RPT(TRN.CONO,TRN.EMP,DTE,SHIFT)
0002 **************************************************************     ************************************************************
0003 * REVISION    - [08.1]                                             * REVISION    - [08.1]
0004 * Copyright 1993 by Computer Business Associates (Vercom Softw     * Copyright 1993 by Computer Business Associates (Vercom Sof
0005 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0006 * SOURCE      - JCSBP                                              * SOURCE      - JCSBP
0007 * PROGRAM     - DAILY.TIME.MATL.PRT                                * PROGRAM     - DAILY.TIME.MATL.PRT

0014 *T21571 lanny 02/06/1997 * Lunch needs to classify based on wo     *T21571 lanny 02/06/1997 * Lunch needs to classify based on 
0015 *                          schedule.                               *                          schedule.
0016 *T22562 lanny 01/30/1998 * Lunch showing in MULTI/CONCUR HRS       *T22562 lanny 01/30/1998 * Lunch showing in MULTI/CONCUR HRS
0017 *T24089 bilal 07/15/1999 * Change Inventory UOM to display sto     *T24089 bilal 07/15/1999 * Change Inventory UOM to display s
0018 *                          instead of the cost UOM                 *                          instead of the cost UOM
0019 *T26493 cmykleb 03/22/2002 * Change report to use rpt # from p  |  *T24102 markt 10/13/1999 * Expand the shift code to 2 digits
0020 *T26614 cmykleb 05/31/2002 * Idle time should be included in t  <  
0021 *                            hours per documentation.           <  
0022 *T28148 thompson 05/27/2004 * Fix problem with concurrent and   <  
0023 *T28270 lross 09/23/2004 * STOP TIME incorrect and CONC TIME i  <  

0024 *                          cases not correct.                   <  
0025 *T28270 lross 10/14/2004 * Additional fixes due to Courier csf  <  
0026 **************************************************************     ************************************************************
0027 *----   INSERT EQUATE FROM CPYLIB                                  *----   INSERT EQUATE FROM CPYLIB
0028 *COPY>JCS.CPYLIB>DAILY.TIME.MATL                                   *COPY>JCS.CPYLIB>DAILY.TIME.MATL
0029 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0030 *COPY>ICS.CPYLIB>INVENTORY                                         *COPY>ICS.CPYLIB>INVENTORY

0114 END                                                                END
0115 END                                                                END
0116 PRSFLAG = CO.PRS                                                   PRSFLAG = CO.PRS
0117 *T21571 ^                                                          *T21571 ^
0118 *     PRSFLAG = CO.PRS                                             *     PRSFLAG = CO.PRS
0119 *T26493 v                                                       |  REPORT.NAME = 'SHIFT SUMMARY REPORT'
0120 *  REPORT.NAME = 'SHIFT SUMMARY REPORT'                         |  REPORT.NUMBER = "XXXX"
0121 *  REPORT.NUMBER = "XXXX"                                       <  
0122 REPORT.NAME = ""                                                <  
0123 CONO.NAME = ""                                                  <  

0124 *T26493 ^                                                       <  
0125 REPORT.DATE = DATE()                                               REPORT.DATE = DATE()
0126 HD1 = "" ; HD2 = ""                                                HD1 = "" ; HD2 = ""
0127 CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,RE     CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,
0128 *---- SET THE HEADING LINES                                        *---- SET THE HEADING LINES
0129 *T21343v                                                           *T21343v
0130 *   HH.LINE1 = "                      CUSTOMER NAME      OPER      *   HH.LINE1 = "                      CUSTOMER NAME      OPE

0149 IF DTM.TIME<1,XXX> = '' THEN                                       IF DTM.TIME<1,XXX> = '' THEN
0150 STOP.FLAG = 0                                                      STOP.FLAG = 0
0151 DTM.TIME<1,XXX> = 0                                                DTM.TIME<1,XXX> = 0
0152 END                                                                END
0153 *CSF25715 ^                                                        *CSF25715 ^
0154 *T28270  IF STA = '' AND DTM.TIME.ST<1,XXX> # 0 THEN            |  IF STA = '' AND DTM.TIME.ST<1,XXX> # 0 THEN
0155 IF STA = '' THEN                                                <  
0156 STA = DTM.TIME.ST<1,XXX>                                           STA = DTM.TIME.ST<1,XXX>
0157 *T28270 v                                                       <  
0158 *T28270     IF STP = '' AND DTM.TIME<1,XXX> # 0 THEN STP = DTM  <  

0159 IF STP = '' THEN STP = DTM.TIME<1,XXX>                          <  
0160 END ELSE                                                           END ELSE
0161 *T28270     IF SHIFT = '1' AND DTM.TIME.ST<1,XXX> LT STA THEN   |  IF SHIFT = '1' AND DTM.TIME.ST<1,XXX> LT STA THEN
0162 IF SHIFT < 3 AND DTM.TIME.ST<1,XXX> < STA THEN                  <  
0163 STA = DTM.TIME.ST<1,XXX>                                           STA = DTM.TIME.ST<1,XXX>
0164 END                                                                END
0165 END                                                                END

0164 END                                                                END
0165 END                                                                END
0166 *CSF25715 fix line below to enter below check if 0 time or if      *CSF25715 fix line below to enter below check if 0 time or i
0167 *        then skip if set to 0 by this pgm.                        *        then skip if set to 0 by this pgm.
0168 IF (DTM.TIME<1,XXX> = 0 AND STOP.FLAG) OR DTM.TIME<1,XXX> # 0      IF (DTM.TIME<1,XXX> = 0 AND STOP.FLAG) OR DTM.TIME<1,XXX> # 
0169 * Below "IF" is inane.                                          |  IF SHIFT = '1' AND DTM.TIME<1,XXX> GT STP THEN
0170 *           IF SHIFT = '1' AND DTM.TIME<1,XXX> GT STP THEN      |  STP = DTM.TIME<1,XXX>
0171 *              STP = DTM.TIME<1,XXX>                            <  
0172 *           END ELSE                                            <  
0173 *              STP = DTM.TIME<1,XXX>                            <  

0174 *           END                                                 <  
0175 ***                                                             <  
0176 *           IF STP > STA AND SHIFT = 1 THEN                     <  
0177 *             IF DTM.TIME<1,XXX> > STP THEN STP = DTM.TIME<1,X  <  
0178 *           END ELSE                                            <  
0179 *             IF SHIFT > 1 THEN                                 <  
0180 *               IF STP < STA THEN                               <  

0181 *                 IF DTM.TIME<1,XXX> > STP THEN STP = DTM.TIME  <  
0182 *               END ELSE                                        <  
0183 *                 IF DTM.TIME<1,XXX> < 1200 THEN                <  
0184 *                   IF DTM.TIME<1,XXX> + 2400 > STP THEN STP =  <  
0185 *                 END ELSE                                      <  
0186 *                   IF DTM.TIME<1,XXX> > STP THEN STP = DTM.TI  <  
0187 *                 END                                           <  

0188 *               END                                             <  
0189 *             END                                               <  
0190 *           END                                                 <  
0191 *T28270*^                                                       <  
0192 IF STA < 1600 THEN                                              <  
0193 IF DTM.TIME<1,XXX> > STP THEN STP = DTM.TIME<1,XXX>             <  
0194 END ELSE                                                           END ELSE

0195 IF DTM.TIME.ST<1,XXX> < STA AND (DTM.TIME.ST<1,XXX>+2400 - STA  |  STP = DTM.TIME<1,XXX>
0196 IF DTM.TIME<1,XXX> < STP AND (DTM.TIME<1,XXX>+2400 - STP) < 16  <  
0197 END                                                                END
0198 *T28270 ^                                                       <  
0199 END                                                                END
0200 END                                                                END
0201 NEXT XXX                                                           NEXT XXX

0415 END                                                                END
0416 IF DTM.JOB.TYPE<1,TT> = 'S' THEN                                   IF DTM.JOB.TYPE<1,TT> = 'S' THEN
0417 SP.HRS = SP.HRS + DTM.REG.TIME<1,TT>                               SP.HRS = SP.HRS + DTM.REG.TIME<1,TT>
0418 END                                                                END
0419 TOT.HRS = TOT.HRS + DTM.REG.TIME<1,TT>                             TOT.HRS = TOT.HRS + DTM.REG.TIME<1,TT>
0420 *T28148 v                                                       |  CNC.HRS = CNC.HRS + DTM.LAPS.TIME<1,TT>
0421 *  CNC.HRS = CNC.HRS + DTM.LAPS.TIME<1,TT>                      <  
0422 *  IF DTM.TYPE<1,TT> # 'L' AND DTM.TYPE<1,TT> # 'I' THEN        <  
0423 *    IF DTM.LAPS.TIME<1,TT> > 0 AND S.PR.TIME<1,TT>+0 = 0 THEN  <  
0424 *  END                                                          <  

0425 *T28270 v                                                       <  
0426 *  IF (DTM.TYPE<1,TT>[1,1] = 'T' OR DTM.TYPE<1,TT>[1,1] = 'C')  <  
0427 IF (DTM.TYPE<1,TT>[1,1] = 'T' OR DTM.TYPE<1,TT>[1,1] = 'C') TH  <  
0428 IF DTM.LAPS.TIME<1,TT> > 0 AND DTM.LAPS.TIME<1,TT> > S.PR.TIME  <  
0429 CNC.HRS += (DTM.LAPS.TIME<1,TT> - S.PR.TIME<1,TT>)              <  
0430 END                                                             <  
0431 END                                                             <  

0432 *T28270 ^                                                       <  
0433 *T28148 ^                                                       <  
0434 IF DTM.IMP<1,TT> > 0 THEN                                          IF DTM.IMP<1,TT> > 0 THEN
0435 H.LINE = H.LINE:OCONV(DTM.IMP<1,TT>,'MD2')'R#10':SP1               H.LINE = H.LINE:OCONV(DTM.IMP<1,TT>,'MD2')'R#10':SP1
0436 END ELSE                                                           END ELSE
0437 IF DTM.QTY<1,TT> + 0 = 0 AND DTM.PROD<1,TT> = "" THEN              IF DTM.QTY<1,TT> + 0 = 0 AND DTM.PROD<1,TT> = "" THEN
0438 QTY = ""                                                           QTY = ""

0489 *   MC.HRS = CNC.HRS + TOT.LUN + UPD.HRS + TOT.E<1,4>              *   MC.HRS = CNC.HRS + TOT.LUN + UPD.HRS + TOT.E<1,4>
0490 MC.HRS = CNC.HRS + TOT.E<1,4> - UPD.HRS                            MC.HRS = CNC.HRS + TOT.E<1,4> - UPD.HRS
0491 IF MC.HRS < 0 THEN MC.HRS = 0                                      IF MC.HRS < 0 THEN MC.HRS = 0
0492 PRINT SPACE(3):STR('-',4):SPACE(1):STR('-',4):                     PRINT SPACE(3):STR('-',4):SPACE(1):STR('-',4):
0493 PRINT SPACE(71):STR('-',5)                                         PRINT SPACE(71):STR('-',5)
0494 *T28148 v                                                       |  * T24102 v
0495 *T28270 v                                                       |  *   PRINT SPACE(3):STA'R#4':SPACE(1):STP'R#4':'  Shift: ':SH
0496 *  IF STP < STA THEN STP = STP + 2400                           |  PRINT SPACE(3):STA'R#4':SPACE(1):STP'R#4':'  Shift: ':SHIFT'
0497 IF STP < STA THEN TMP = STP + 2400 ELSE TMP = STP               |  * T24102 ^
0498 *  TOT.LAPSED = (INT(STP/100)*60+MOD(STP,100))-(INT(STA/100)*6  |  PRINT SPACE(3):OCONV((TOT.HRS + TOT.LUN + UPD.HRS - MC.HRS),

0499 TOT.LAPSED = (INT(TMP/100)*60+MOD(TMP,100))-(INT(STA/100)*60+M  <  
0500 *T28270 ^                                                       <  
0501 TOT.LAPSED = INT(TOT.LAPSED * 100 / 60 + .5)                    <  
0502 PRINT SPACE(3):STA'R#4':SPACE(1):STP'R#4':'  Shift: ':SHIFT'L#  <  
0503 *  PRINT SPACE(3):OCONV((TOT.HRS + TOT.LUN + UPD.HRS - MC.HRS)  <  
0504 PRINT SPACE(3):OCONV(TOT.LAPSED,'MD2')'R#5':' Hours':SPACE(1):  <  
0505 *T28148 ^                                                       <  

0508 PRINT "BILLABLE HOURS    : ":OCONV(BILL.HRS,"MD2")"R#6"            PRINT "BILLABLE HOURS    : ":OCONV(BILL.HRS,"MD2")"R#6"
0509 *  IF CNC.HRS + TOT.E<1,4> = 0 OR (CNC.HRS + TOT.E<1,4>) < 0 T     *  IF CNC.HRS + TOT.E<1,4> = 0 OR (CNC.HRS + TOT.E<1,4>) < 0
0510 *T22562 v                                                          *T22562 v
0511 *  IF MC.HRS <= 0 THEN                                             *  IF MC.HRS <= 0 THEN
0512 *  IF CNC.HRS + TOT.E<1,4> <= 0 THEN                               *  IF CNC.HRS + TOT.E<1,4> <= 0 THEN
0513 *T28148 V                                                       |  IF CNC.HRS + TOT.E<1,4> - UPD.HRS <= 0 THEN  ;*T22562
0514 *  IF CNC.HRS + TOT.E<1,4> - UPD.HRS <= 0 THEN  ;*T22562        <  
0515 IF CNC.HRS+0 <= 0 THEN                                          <  
0516 PRINT "MULTI/CONCUR HOURS:   0.00"                                 PRINT "MULTI/CONCUR HOURS:   0.00"
0517 END ELSE                                                           END ELSE

0519 *T22562 v                                                          *T22562 v
0520 *      PRINT "MULTI/CONCUR HOURS: ":                               *      PRINT "MULTI/CONCUR HOURS: ":
0521 *      MCHRS = "<":OCONV(MC.HRS,"MD2"):">"                         *      MCHRS = "<":OCONV(MC.HRS,"MD2"):">"
0522 *      PRINT MCHRS 'R#7'                                           *      PRINT MCHRS 'R#7'
0523 *      PRINT "MULTI/CONCUR HOURS: <":(OCONV(CNC.HRS,"MD2") + O     *      PRINT "MULTI/CONCUR HOURS: <":(OCONV(CNC.HRS,"MD2") +
0524 *T28148 v  PRINT "MULTI/CONCUR HOURS: <":(OCONV(CNC.HRS,"MD2")  |  PRINT "MULTI/CONCUR HOURS: <":(OCONV(CNC.HRS,"MD2") + OCONV(
0525 PRINT "MULTI/CONCUR HOURS: <":OCONV(CNC.HRS,"MD2")'R#5':">"     <  
0526 END                                                                END
0527 PRINT "NON-CHARGEABLE HRS: ":OCONV(NC.HRS,"MD2")"R#6"              PRINT "NON-CHARGEABLE HRS: ":OCONV(NC.HRS,"MD2")"R#6"
0528 PRINT "SPOILAGE HOURS    : ":OCONV(SP.HRS,"MD2")"R#6":             PRINT "SPOILAGE HOURS    : ":OCONV(SP.HRS,"MD2")"R#6":

0529 PRINT SPACE(21):"EMPLOYEE: ":STR("_",74)                           PRINT SPACE(21):"EMPLOYEE: ":STR("_",74)
0530 *T26614 v                                                       |  PRINT "** PAID HOURS **  : ":OCONV((TOT.HRS - MC.HRS),"MD2")
0531 *  PRINT "** PAID HOURS **  : ":OCONV((TOT.HRS - MC.HRS),"MD2"  |  IF TOT.LUN + UPD.HRS = 0 THEN
0532 *  IF TOT.LUN + UPD.HRS = 0 THEN                                <  
0533 *T28148 v   PRINT "** PAID HOURS **  : ":OCONV((TOT.HRS - MC.H  <  
0534 PAID.HRS=BILL.HRS-CNC.HRS+NC.HRS+SP.HRS                         <  
0535 PRINT "** PAID HOURS **  : ":OCONV(PAID.HRS,"MD2")'R#6'         <  
0536 *T28148 v   IF TOT.LUN = 0 THEN                                 <  

0537 IF TOT.LUN+UPD.HRS = 0 THEN                                     <  
0538 *T26614 ^                                                       <  
0539 PRINT 'NON-PAID HOURS    :   0.00'                                 PRINT 'NON-PAID HOURS    :   0.00'
0540 END ELSE                                                           END ELSE
0541 *T26614 v                                                       <  
0542 PRINT "NON-PAID HOURS    : ":OCONV(ICONV((OCONV(TOT.LUN,'MD2')     PRINT "NON-PAID HOURS    : ":OCONV(ICONV((OCONV(TOT.LUN,'MD2
0543 *T28148 ^ reinstate line above PRINT "NON-PAID HOURS    : ":OC  <  

0544 *T26614 ^                                                       <  
0545 END                                                                END
0546 *T28148 v                                                       |  PRINT 'TOTAL SHIFT HOURS : ':OCONV((TOT.HRS + TOT.LUN + UPD.
0547 *  PRINT 'TOTAL SHIFT HOURS : ':OCONV((TOT.HRS + TOT.LUN + UPD  <  
0548 PRINT 'TOTAL SHIFT HOURS : ':OCONV((PAID.HRS + TOT.LUN + UPD.H  <  
0549 PRINT SPACE(21):"SUPERVISOR: ":STR("_",72)                         PRINT SPACE(21):"SUPERVISOR: ":STR("_",72)
0550 PREV.EMP = EMP                                                     PREV.EMP = EMP


JCSBP/SHIP.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/SHIP.MAINT
Printed for thompson at 06/28/2006 04:42:09PM

0013 *                TASK #12907 (RRG)                                 *                TASK #12907 (RRG)
0014 *C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR DEPT IS IN THE DI     *C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR DEPT IS IN THE 
0015 *                     IS SPECIFIED IN THE JOB.DIV FIELD            *                     IS SPECIFIED IN THE JOB.DIV FIELD
0016 *T23195 cindy 08/20/1998 * file prompt not gui'd                   *T23195 cindy 08/20/1998 * file prompt not gui'd
0017 * markt 10/13/1998 * Add division security check                   * markt 10/13/1998 * Add division security check
0018 *T25949 cmykleb 01/23/2002 * Allow the user to use the ship-to  |  *T26942 adelgado 10/28/2002 * Change authorization process t
0019 *                            from the customer maintenance shi  |  *                             authorization for Jobs that ar
0020 *                            records.                           |  *                             'Invoiced'.
0021 *T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,  <  
0022 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   <  

0031 *COPY>JCS.CPYLIB>OPERATION                                         *COPY>JCS.CPYLIB>OPERATION
0032 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0033 *COPY>OPS.CPYLIB>JOB.FNGD.STATS                                    *COPY>OPS.CPYLIB>JOB.FNGD.STATS
0034 *COPY>JCS.CPYLIB>DAILY.SHIP                                        *COPY>JCS.CPYLIB>DAILY.SHIP
0035 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0036 *T25949 v                                                       |  *COPY>CPYLIB>GEN.XREF
0037 ***COPY>CPYLIB>GEN.XREF                                         <  
0038 *COPY>CPYLIB>GEN.XREF.SUB                                       <  
0039 *COPY>PMC.CPYLIB>SHIP.TO                                        <  
0040 *T25949 ^                                                       <  

0066 OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILA     OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOI
0067 OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE I     OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE
0068 OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS M     OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS
0069 OPEN '','DAILY.SHIP' TO DAILY.SHIP ELSE ERRMSG='DAILY.SHIP FIL     OPEN '','DAILY.SHIP' TO DAILY.SHIP ELSE ERRMSG='DAILY.SHIP F
0070 OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG='JOB.SHIP FILE IS M     OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG='JOB.SHIP FILE IS
0071 *T25949 v                                                       <  
0072 OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG='SHIP.TO FILE IS MISS  <  
0073 OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE I  <  
0074 *T25949 ^                                                       <  
0075 MAT COMP.REC=''                                                    MAT COMP.REC=''

0089 MAT EDIT.COM='' ; MAT EDIT.COM.DRIVER='' ; MAT GEN.XREF.REC=''     MAT EDIT.COM='' ; MAT EDIT.COM.DRIVER='' ; MAT GEN.XREF.REC=
0090 DASHES=STR('-',80);MAT JSI.REC=""                                  DASHES=STR('-',80);MAT JSI.REC=""
0091 ERRMSG=''                                                          ERRMSG=''
0092 UNKNOWN='????????????????????'                                     UNKNOWN='????????????????????'
0093 BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1                     BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1
0094 *T25949 v                                                       |  GXR.CO=CONO
0095 *  GXR.CO=CONO                                                  |  GXR.HEADING<1,2>='DESCRIPTION'
0096 *  GXR.HEADING<1,2>='DESCRIPTION'                               |  GXR.ATT<1,1>=0
0097 *  GXR.ATT<1,1>=0                                               |  GXR.ATT<1,2>=2
0098 *  GXR.ATT<1,2>=2                                               |  GXR.LEN<1,1>=5

0099 *  GXR.LEN<1,1>=5                                               |  GXR.LEN<1,2>=30
0100 *  GXR.LEN<1,2>=30                                              <  
0101 *T25949 ^                                                       <  
0102 * MAIN PROCESSING                                                  * MAIN PROCESSING
0103 ECD.SCRN.CNT=3                                                     ECD.SCRN.CNT=3
0104 ECD.SCRN.NAME<1>='SHIP.MAINT'                                      ECD.SCRN.NAME<1>='SHIP.MAINT'
0105 ECD.SCRN.NAME<2>='SHIP.MAINT.SUB'                                  ECD.SCRN.NAME<2>='SHIP.MAINT.SUB'

0105 ECD.SCRN.NAME<2>='SHIP.MAINT.SUB'                                  ECD.SCRN.NAME<2>='SHIP.MAINT.SUB'
0106 ECD.SCRN.NAME<3>='FNGD.XREF'                                       ECD.SCRN.NAME<3>='FNGD.XREF'
0107 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0108 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0109 100 MAT JOB.REC = ""; MAT DSP.REC = ""; MAT DIV.REC = ""; MAT      100 MAT JOB.REC = ""; MAT DSP.REC = ""; MAT DIV.REC = ""; M
A
0110 RELEASE      ;* T26126                                          <  
0111 MAT CCTR.REC = ""; MAT OPER.REC = ""; MAT CUST.REC = ""            MAT CCTR.REC = ""; MAT OPER.REC = ""; MAT CUST.REC = ""
0112 MAT SCV.REC = ""; OLD.START.LINE = 0; LN = 1; LINES = 0            MAT SCV.REC = ""; OLD.START.LINE = 0; LN = 1; LINES = 0
0113 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0114 ECD.NUM=5                                                          ECD.NUM=5

0115 ECD.VALDAT.CODE=5; ECD.VALDAT.FILE=DAILY.SHIP; ECD.PREFIX.ID=C  |  ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=DAILY.SHIP; ECD.PREFIX.ID
0116 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0117 BEGIN CASE                                                         BEGIN CASE
0118 CASE ECD.RET.VALUE='END'                                           CASE ECD.RET.VALUE='END'
0119 GOTO 99999                                                         GOTO 99999
0120 CASE ECD.RET.VALUE='N'                                             CASE ECD.RET.VALUE='N'
0121 DSP.SEQ.NO = ECD.RET.VALUE                                         DSP.SEQ.NO = ECD.RET.VALUE

0317 END;* T23278                                                       END;* T23278
0318 END CASE                                                           END CASE
0319 WHILE MORE DO REPEAT                                               WHILE MORE DO REPEAT
0320 GOTO 100                                                           GOTO 100
0321 1100 ECD.NUM=9                                                     1100 ECD.NUM=9
0322 *T25949  ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=CUSTOMER; ECD.PREF  |  ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=CUSTOMER; ECD.PREFIX.ID=C
0323 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0324 BEGIN CASE                                                         BEGIN CASE
0325 CASE ECD.RET.VALUE='END'                                           CASE ECD.RET.VALUE='END'
0326 CASE ECD.RET.VALUE='SAME'                                          CASE ECD.RET.VALUE='SAME'

0390 DSP.ADDR4=CUST.ADDR4:"  ":CUST.ZIP                                 DSP.ADDR4=CUST.ADDR4:"  ":CUST.ZIP
0391 END ELSE                                                           END ELSE
0392 DSP.ADDR4=CUST.ZIP                                                 DSP.ADDR4=CUST.ZIP
0393 END                                                                END
0394 MAT CUST.REC=MAT SAVE.CUST.REC                                     MAT CUST.REC=MAT SAVE.CUST.REC
0395 *T25949 v                                                       <  
0396 CASE ECD.RET.VALUE MATCHES '3N'                                 <  
0397 MATREAD SPT.REC FROM SHIP.TO, CONO:JOB.CUST:'!':ECD.RET.VALUE   <  
0398 ERRMSG = 'Customer Ship-To record ':ECD.RET.VALUE:' is not on   <  
0399 GOSUB 91000                                                     <  

0400 GOTO 1100                                                       <  
0401 END                                                             <  
0402 DSP.SHIP.TO = ECD.RET.VALUE                                     <  
0403 DSP.NAME = SPT.NAME                                             <  
0404 DSP.ADDR1 = SPT.ADDR1                                           <  
0405 DSP.ADDR2 = SPT.ADDR2                                           <  
0406 DSP.ADDR4 = SPT.CITY:', ':SPT.STATE:'  ':SPT.ZIP                <  

0407 DSP.ATTN = SPT.ATTN                                             <  
0408 CASE ECD.RET.VALUE = "???"                                      <  
0409 IF CUST.SHIP.TO + 0 = 0 THEN                                    <  
0410 ERRMSG = "There are no ship to records for this customer"       <  
0411 GOSUB 91000                                                     <  
0412 SCV.REC(9)<1>=""                                                <  
0413 GOTO 1100                                                       <  

0414 END                                                             <  
0415 GXR.CO = CONO                                                   <  
0416 GXR.NAME = "SHIP.TO1"                                           <  
0417 GXR.FILE = SHIP.TO                                              <  
0418 GXR.SRCH.ID = JOB.CUST:" : ":CUST.NAME                          <  
0419 GXR.IDLIST = ""                                                 <  
0420 FOR SNO = 1 TO CUST.SHIP.TO                                     <  

0421 GXR.IDLIST<1,SNO> = JOB.CUST:'!':SNO'R%3'                       <  
0422 NEXT SNO                                                        <  
0423 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
0424 GXR.IDLIST = ""                                                 <  
0425 ECD.ACTION = 2 ; CALL SCRN.EDIT                                 <  
0426 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 <  
0427 IF GXR.ID = "" THEN GOTO 1100                                   <  

0428 ECD.RET.VALUE = FIELD(GXR.ID,'!',2)                             <  
0429 MATREAD SPT.REC FROM SHIP.TO, CONO:JOB.CUST:'!':ECD.RET.VALUE   <  
0430 ERRMSG = 'Customer Ship-To record ':ECD.RET.VALUE:' is not on   <  
0431 GOSUB 91000                                                     <  
0432 GOTO 1100                                                       <  
0433 END                                                             <  
0434 DSP.SHIP.TO = ECD.RET.VALUE                                     <  

0435 DSP.NAME = SPT.NAME                                             <  
0436 DSP.ADDR1 = SPT.ADDR1                                           <  
0437 DSP.ADDR2 = SPT.ADDR2                                           <  
0438 DSP.ADDR4 = SPT.CITY:', ':SPT.STATE:'  ':SPT.ZIP                <  
0439 DSP.ATTN = SPT.ATTN                                             <  
0440 SCV.REC(9)<1>=DSP.SHIP.TO                                       <  
0441 ECD.NUM = 9 ; ECD.ACTION = 5 ; CALL SCRN.EDIT                   <  

0442 CASE ECD.RET.VALUE MATCHES '0N'                                 <  
0443 MATREAD CUST.REC FROM CUSTOMER, CONO: ECD.RET.VALUE ELSE        <  
0444 ERRMSG = 'Customer # not on file'                               <  
0445 GOSUB 91000                                                     <  
0446 GOTO 1100                                                       <  
0447 END                                                             <  
0448 IF CUST.ADDR4 # "" THEN                                         <  

0449 ADDR4  = CUST.ADDR4:"  ":CUST.ZIP                               <  
0450 END ELSE                                                        <  
0451 ADDR4 = CUST.ZIP                                                <  
0452 END                                                             <  
0453 DSP.SHIP.TO = ECD.RET.VALUE                                     <  
0454 DSP.NAME = CUST.NAME                                            <  
0455 DSP.ADDR1 = CUST.ADDR1                                          <  

0456 DSP.ADDR2 = CUST.ADDR2                                          <  
0457 DSP.ADDR3 = CUST.ADDR3                                          <  
0458 DSP.ADDR4 = ADDR4                                               <  
0459 *T25949 ^                                                       <  
0460 CASE 1                                                             CASE 1
0461 GOTO 1100                                                          GOTO 1100
0462 END CASE                                                           END CASE

0510 ECD.NUM=23;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL     ECD.NUM=23;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CA
0511 GOTO 1200                                                          GOTO 1200
0512 END                                                                END
0513 CASE ECD.RET.VALUE='???'                                           CASE ECD.RET.VALUE='???'
0514 IF JOB.DEPT = "" THEN                                              IF JOB.DEPT = "" THEN
0515 *T25949 v                                                       |  GXR.XREF=DIVISION
0516 *           GXR.XREF=DIVISION                                   |  GXR.FILE=DEPARTMENT
0517 *           GXR.FILE=DEPARTMENT                                 |  GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
0518 *           GXR.TOP.LINE='DEPARTMENT XREF SEARCH'               |  GXR.HEADING<1,1>='DEPT'
0519 *           GXR.HEADING<1,1>='DEPT'                             |  GXR.ATT<1,2>=2

0520 *           GXR.ATT<1,2>=2                                      |  GXR.LOC=2
0521 *           GXR.LOC=2                                           |  GXR.ID=''
0522 *           GXR.ID=''                                           |  GXR.SRCH.ID=DSP.DIV
0523 *           GXR.SRCH.ID=DSP.DIV                                 |  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0524 *           CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)              <  
0525 GXR.CO = CONO                                                   <  
0526 GXR.XREF = DIVISION                                             <  

0527 GXR.NAME = "DEPT.DIV"                                           <  
0528 GXR.FILE = DEPARTMENT                                           <  
0529 GXR.TOP.LINE = "DEPARTMENT XREF SEARCH"                         <  
0530 GXR.HEADING = "DEPT"                                            <  
0531 GXR.ID = ""                                                     <  
0532 GXR.SRCH.ID = DSP.DIV                                           <  
0533 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

0534 *T25949 ^                                                       <  
0535 IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 63000; GO     IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 63000; 
0536 MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE                 MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
0537 ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'                          ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
0538 ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 91000; GOSUB 63000; GOTO 12     ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 91000; GOSUB 63000; GOTO 
0539 END                                                                END
0540 DSP.DEPT=GXR.ID                                                    DSP.DEPT=GXR.ID

0542 DSP.DEPT = JOB.DEPT                                                DSP.DEPT = JOB.DEPT
0543 MATREAD DEPT.REC FROM DEPARTMENT, CONO:DSP.DEPT ELSE MAT DEPT.     MATREAD DEPT.REC FROM DEPARTMENT, CONO:DSP.DEPT ELSE MAT DEP
0544 END                                                                END
0545 SCV.REC(20)<1>=DSP.DEPT                                            SCV.REC(20)<1>=DSP.DEPT
0546 SCV.REC(21)<1>=DEPT.DESC                                           SCV.REC(21)<1>=DEPT.DESC
0547 *T25949 v                                                       |  GXR.XREF=DEPARTMENT
0548 *        GXR.XREF=DEPARTMENT                                    |  GXR.FILE=COST.CNTR
0549 *        GXR.FILE=COST.CNTR                                     |  GXR.TOP.LINE='COST CENTER XREF SEARCH'
0550 *        GXR.TOP.LINE='COST CENTER XREF SEARCH'                 |  GXR.HEADING<1,1>='CCTR'
0551 *        GXR.HEADING<1,1>='CCTR'                                |  GXR.ATT<1,2>=1

0552 *        GXR.ATT<1,2>=1                                         |  GXR.LOC=5
0553 *        GXR.LOC=5                                              |  GXR.ID=''
0554 *        GXR.ID=''                                              |  GXR.SRCH.ID=DSP.DEPT
0555 *        GXR.SRCH.ID=DSP.DEPT                                   |  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0556 *        CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)                 <  
0557 GXR.CO = CONO                                                   <  
0558 GXR.XREF = DEPARTMENT                                           <  

0559 GXR.NAME = "CCTR.DEPT"                                          <  
0560 GXR.FILE = COST.CNTR                                            <  
0561 GXR.TOP.LINE = "COST CENTER XREF SEARCH"                        <  
0562 GXR.HEADING = "CCTR"                                            <  
0563 GXR.ID = ""                                                     <  
0564 GXR.SRCH.ID = DSP.DEPT                                          <  
0565 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

0566 *T25949 ^                                                       <  
0567 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0568 IF GXR.ID='' THEN GOSUB 63000; GOTO 1200                           IF GXR.ID='' THEN GOSUB 63000; GOTO 1200
0569 MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE                  MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
0570 ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'                           ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
0571 GOSUB 91000; GOSUB 63000; GOTO 1200                                GOSUB 91000; GOSUB 63000; GOTO 1200
0572 END                                                                END

0626 END                                                                END
0627 FOR K=1 TO OPER.REC.SIZE; OPER.REC(K)=ECD.VALDAT.ITEM<K>; NEXT     FOR K=1 TO OPER.REC.SIZE; OPER.REC(K)=ECD.VALDAT.ITEM<K>; N
E
0628 DSP.OPER=ECD.RET.VALUE                                             DSP.OPER=ECD.RET.VALUE
0629 ECD.NUM=25; SCV.REC(ECD.NUM)<1>=OPER.DESC; ECD.ACTION=5;CALL S     ECD.NUM=25; SCV.REC(ECD.NUM)<1>=OPER.DESC; ECD.ACTION=5;CALL
0630 CASE ECD.RET.VALUE='???'                                           CASE ECD.RET.VALUE='???'
0631 *T25949 v                                                       |  GXR.XREF=COST.CNTR
0632 *           GXR.XREF=COST.CNTR                                  |  GXR.FILE=OPERATION
0633 *           GXR.FILE=OPERATION                                  |  GXR.TOP.LINE='OPERATION XREF SEARCH'
0634 *           GXR.TOP.LINE='OPERATION XREF SEARCH'                |  GXR.HEADING<1,1>='OPER'
0635 *           GXR.HEADING<1,1>='OPER'                             |  GXR.ATT<1,2>=1

0636 *           GXR.ATT<1,2>=1                                      |  GXR.LOC=4
0637 *           GXR.LOC=4                                           |  GXR.ID=''
0638 *           GXR.ID=''                                           |  GXR.SRCH.ID=DSP.CCTR
0639 *           GXR.SRCH.ID=DSP.CCTR                                |  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0640 *           CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)              <  
0641 GXR.CO = CONO                                                   <  
0642 GXR.XREF = COST.CNTR                                            <  

0643 GXR.NAME = "CCTR.OPER.1"                                        <  
0644 GXR.FILE = OPERATION                                            <  
0645 GXR.TOP.LINE = "OPERATION XREF SEARCH"                          <  
0646 GXR.HEADING = "OPER"                                            <  
0647 GXR.ID = ""                                                     <  
0648 GXR.SRCH.ID = DSP.CCTR                                          <  
0649 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

0650 *T25949 ^                                                       <  
0651 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0652 IF GXR.ID='' THEN GOSUB 63000; GOTO 1300                           IF GXR.ID='' THEN GOSUB 63000; GOTO 1300
0653 MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE                  MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE
0654 ERRMSG='OPERATION ':GXR.ID:' IS MISSING'                           ERRMSG='OPERATION ':GXR.ID:' IS MISSING'
0655 GOSUB 91000; GOSUB 63000; GOTO 1300                                GOSUB 91000; GOSUB 63000; GOTO 1300
0656 END                                                                END

0721 GOSUB 4900                                                         GOSUB 4900
0722 CASE ACTION = 'S'                                                  CASE ACTION = 'S'
0723 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0724 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0725 GOSUB 4900                                                         GOSUB 4900
0726 * T25978 v                                                      <  
0727 CASE ACTION = 'SR'                                              <  
0728 LN -= PAGE.SIZE                                                 <  
0729 IF LN < 1 THEN LN = 1                                           <  
0730 GOSUB 4900                                                      <  

0731 CASE ACTION = 'ST'                                              <  
0732 LN = 1                                                          <  
0733 GOSUB 4900                                                      <  
0734 CASE ACTION = 'SB'                                              <  
0735 LN = LINES                                                      <  
0736 GOSUB 4900                                                      <  
0737 * T25978 ^                                                      <  

0790 4990 RETURN                                                        4990 RETURN
0791 4999 RETURN                                                        4999 RETURN
0792 7000*                                                              7000*
0793 VALUE = ""                                                         VALUE = ""
0794 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
0795                                                                 >  IF JOB.STATUS<1,1> = 3 THEN RETURN        ;* T26942
0796 7010  X=0;Y=23;MAXL=3;TYP=11                                       7010 X=0;Y=23;MAXL=3;TYP=11
0797 PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "          PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
0798 CALL EDIT.SUB                                                      CALL EDIT.SUB
0799 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"


JCSBP/TIME.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/TIME.MAINT
Printed for thompson at 06/28/2006 04:42:09PM

0009 * DATE        - 02/15/84                                           * DATE        - 02/15/84
0010 * DESCRIPTION -                                                    * DESCRIPTION -
0011 * COMMENT     - IF JOB.STATUS =5 "REOPENED" DON'T ASK FOR          * COMMENT     - IF JOB.STATUS =5 "REOPENED" DON'T ASK FOR
0012 * AUTHORIZATION. TASK #12907 (RRG)                                 * AUTHORIZATION. TASK #12907 (RRG)
0013 *T22713 diane 05/21/1998 * FIX ASCII DISPLAY OF EPS MSG            *T22713 diane 05/21/1998 * FIX ASCII DISPLAY OF EPS MSG
0014 *T23278 markt 09/29/1998 * Add divisional security.             |  *T23466 rik 11/25/1998 * DON'T PROMPT FOR AUTHOR. CODE / DEF
0015 *                          Restrict entry to jobs within        |  *                        "PRP".
0016 *                          a single division; validate that     |  *T22746 cm 03/08/1999 * UPGRADE TO REV 11B
0017 *                          division against the user's securit  |  *T24092 rick 07/22/1999 * Modify pgm to force time record to
0018 *T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,  |  *                         JobType field (match)

0019 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *T24102 markt 10/12/1999 * Expand the shift code to 2 digits
0020 *********************************************************          *********************************************************
0021 *COPY>JCS.CPYLIB>OPERATION                                         *COPY>JCS.CPYLIB>OPERATION
0022 *COPY>JCS.CPYLIB>JOB                                               *COPY>JCS.CPYLIB>JOB
0023 *COPY>JCS.CPYLIB>DAILY.TIME                                        *COPY>JCS.CPYLIB>DAILY.TIME
0024 *COPY>JCS.CPYLIB>JOB.CUTOFF.NO                                     *COPY>JCS.CPYLIB>JOB.CUTOFF.NO
0025 *COPY>JCS.CPYLIB>JOB.STAT.CODE                                     *COPY>JCS.CPYLIB>JOB.STAT.CODE

0039 *COPY>CPYLIB>TCC                                                   *COPY>CPYLIB>TCC
0040 SYS.TYPE=1                                                         SYS.TYPE=1
0041 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0042 MAT FILE.VARS=''                                                   MAT FILE.VARS=''
0043 *************************************                              *************************************
0044 OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS F  |  OPEN '', 'CBN.SCREENS' TO M.SCREENS ELSE ERRMSG='CBN.SCREENS
0045 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISS     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MI
0046 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS M     OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS
0047 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISS     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MI
0048 OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING     OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSI

0103 INPUT SFC:                                                         INPUT SFC:
0104 END                                                                END
0105 GO 99999                                                           GO 99999
0106 END                                                                END
0107 *                                                                  *
0108 *-- GET ALL OUTSIDE JOB RANGE                                   |  *-- GET ALL OUTSIDE JOB REANGE
0109 MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:'JOB.CUTOFF.NO' ELSE     MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:'JOB.CUTOFF.NO' EL
0110 MAT JOB.CUTOFF.REC=''                                              MAT JOB.CUTOFF.REC=''
0111 J.CUTOFF.NUM=0                                                     J.CUTOFF.NUM=0
0112 END                                                                END

0121 UNKNOWN = STR('?',30)                                              UNKNOWN = STR('?',30)
0122 *      MAT EDIT.COM='' ; TYP = 0 ; CALL EDIT.SUB                   *      MAT EDIT.COM='' ; TYP = 0 ; CALL EDIT.SUB
0123 FILL = '#'                                                         FILL = '#'
0124 LABOR.DATE = ""                                                    LABOR.DATE = ""
0125 100*                                                               100*
0126 RELEASE   ;* T26126                                             <  
0127 TEST.REC = ""                                                      TEST.REC = ""
0128 OLD.START.LINE = 0 ; LINES = 0 ; TOTAL.HRS = 0 ; DIFF.HRS = 0      OLD.START.LINE = 0 ; LINES = 0 ; TOTAL.HRS = 0 ; DIFF.HRS = 
0129 MAT GEN.XREF.REC = ''                                              MAT GEN.XREF.REC = ''
0130 MAT JSI.REC = ''                                                   MAT JSI.REC = ''

0131 ERRMSG='' ; ACTION = ''; LINE.DESC = '';LINE.CUST = ''             ERRMSG='' ; ACTION = ''; LINE.DESC = '';LINE.CUST = ''
0132 ONLY.VALID.DIVISION = '' ; * T23278                             <  
0133 GXR.CO=CONO                                                        GXR.CO=CONO
0134 GXR.HEADING<1,2>='DESCRIPTION'                                     GXR.HEADING<1,2>='DESCRIPTION'
0135 GXR.ATT<1,1>=0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 5;GXR.LEN<1,2>      GXR.ATT<1,1>=0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 5;GXR.LEN<1,
2
0136 * MAIN PROCESSING                                                  * MAIN PROCESSING
0137 MAT JOB.REC='' ;MAT DIV.REC = '';MAT DEPT.REC = ''                 MAT JOB.REC='' ;MAT DIV.REC = '';MAT DEPT.REC = ''
0138 MAT CCTR.REC = '';MAT OPER.REC = ''; MAT FCTR.REC = ''             MAT CCTR.REC = '';MAT OPER.REC = ''; MAT FCTR.REC = ''

0150 NEW.DLB="N"                                                        NEW.DLB="N"
0151 DLB.KEY = EMP.CODE:"*":ENT.DATE:"*":SHIFT.CODE                     DLB.KEY = EMP.CODE:"*":ENT.DATE:"*":SHIFT.CODE
0152 OLD.KEY = DLB.KEY                                                  OLD.KEY = DLB.KEY
0153 NEW.KEY = DLB.KEY                                                  NEW.KEY = DLB.KEY
0154 *-- READ DAILY TIME RECORD                                         *-- READ DAILY TIME RECORD
0155 * T26126 v                                                      |  MATREAD DLB.REC FROM DAILY.TIME , CONO:DLB.KEY ELSE
0156 MATREADU DLB.REC FROM DAILY.TIME , CONO:DLB.KEY LOCKED          <  
0157 ERRMSG = 'TIME record is locked by user - ':GETUSERNAME(STATUS  <  
0158 GOSUB 91000;GOTO 100                                            <  
0159 END ELSE                                                        <  

0160 * T26126 ^                                                      <  
0161 MAT DLB.REC=''                                                     MAT DLB.REC=''
0162 NEW.DLB="Y"                                                        NEW.DLB="Y"
0163 ACTION="A"                                                         ACTION="A"
0164                                                                 >  *T24092 v         
0165                                                                 >  GOSUB FIX.JOB.TYPE
0166                                                                 >  *T24092 ^

0174 END                                                                END
0175 IF ACTION='' THEN                                                  IF ACTION='' THEN
0176 LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')                           LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
0177 LN=1                                                               LN=1
0178 GOSUB 11000 ; GOSUB 8100                                           GOSUB 11000 ; GOSUB 8100
0179 ONLY.VALID.DIVISION = DLB.DIV<1,1> ; * T23278                   <  
0180 END                                                                END
0181 MORE=1                                                             MORE=1
0182 LOOP                                                               LOOP
0183 ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""; ECD.ACTION =      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""; ECD.ACTION 

0239 GOSUB 11000 ; GOSUB 8100                                           GOSUB 11000 ; GOSUB 8100
0240 CASE ACTION='S'                                                    CASE ACTION='S'
0241 LN=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE                 LN=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
0242 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
0243 GOSUB 11000                                                        GOSUB 11000
0244 * T25978 v                                                      <  
0245 CASE ACTION = 'SR'                                              <  
0246 LN=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE              <  
0247 IF LN < 1 THEN LN = 1                                           <  
0248 GOSUB 11000                                                     <  

0249 CASE ACTION = 'ST'                                              <  
0250 LN = 1                                                          <  
0251 GOSUB 11000                                                     <  
0252 CASE ACTION = 'SB'                                              <  
0253 LN = LINES                                                      <  
0254 GOSUB 11000                                                     <  
0255 * T25978 ^                                                      <  

0488 END ELSE                                                           END ELSE
0489 ERRMSG='JOB NUMBER (':VALUE:') NOT ON FILE'                        ERRMSG='JOB NUMBER (':VALUE:') NOT ON FILE'
0490 GOSUB 91000 ; GOTO 1020                                            GOSUB 91000 ; GOTO 1020
0491 END                                                                END
0492 END                                                                END
0493 *****T23278 v                                                   <  
0494 IF ONLY.VALID.DIVISION = '' THEN                                <  
0495 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0496 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0497 IF ERRMSG # '' THEN                                             <  

0498 GOSUB 91000; GOTO 1020                                          <  
0499 END                                                             <  
0500 ONLY.VALID.DIVISION = JOB.DIV                                   <  
0501 END ELSE                                                        <  
0502 IF JOB.DIV # ONLY.VALID.DIVISION THEN                           <  
0503 ERRMSG = "JOB DIVISION MUST MATCH DIVISION OF PREVIOUSLY ENTER  <  
0504 GOSUB 91000; GOTO 1020                                          <  

0505 END                                                             <  
0506 END                                                             <  
0507 *****T23278 ^                                                   <  
0508 SAVE.JOB=VALUE                                                     SAVE.JOB=VALUE
0509 BEGIN CASE                                                         BEGIN CASE
0510 CASE JOB.STATUS<1,1> = 9                                           CASE JOB.STATUS<1,1> = 9
0511 ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 1020         ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 1020

0536 IF VALUE = "END" THEN GOTO 1020                                    IF VALUE = "END" THEN GOTO 1020
0537 MATREAD DIV.REC FROM DIVISION, CONO:VALUE ELSE                     MATREAD DIV.REC FROM DIVISION, CONO:VALUE ELSE
0538 ERRMSG = "DIVISION ":VALUE:" IS MISSING"                           ERRMSG = "DIVISION ":VALUE:" IS MISSING"
0539 GOSUB 91000; GOTO 1030                                             GOSUB 91000; GOTO 1030
0540 END                                                                END
0541 *****T23278 v                                                   <  
0542 IF ONLY.VALID.DIVISION = '' THEN                                <  
0543 DIV.CODE = VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''       <  
0544 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0545 IF ERRMSG # '' THEN                                             <  

0546 GOSUB 91000; GOTO 1030                                          <  
0547 END                                                             <  
0548 ONLY.VALID.DIVISION = VALUE                                     <  
0549 END ELSE                                                        <  
0550 IF JOB.DIV # ONLY.VALID.DIVISION THEN                           <  
0551 ERRMSG = "JOB DIVISION MUST MATCH DIVISION OF PREVIOUSLY ENTER  <  
0552 GOSUB 91000; GOTO 1030                                          <  

0553 END                                                             <  
0554 END                                                             <  
0555 *****T23278 ^                                                   <  
0556 JOB.DIV = VALUE                                                    JOB.DIV = VALUE
0557 END ELSE                                                           END ELSE
0558 MATREAD DIV.REC FROM DIVISION, CONO : JOB.DIV ELSE                 MATREAD DIV.REC FROM DIVISION, CONO : JOB.DIV ELSE
0559 ERRMSG = 'CANNOT LOCATE JOB DIVISION ':JOB.DIV                     ERRMSG = 'CANNOT LOCATE JOB DIVISION ':JOB.DIV

0723 HMSG='(R)EGULAR (C)USTOMER CHANGE ORDER (S)POILAGE (N)ON CHARG     HMSG='(R)EGULAR (C)USTOMER CHANGE ORDER (S)POILAGE (N)ON CHA
0724 VALDAT='R':VM:'C':VM:'S':VM:'N'                                    VALDAT='R':VM:'C':VM:'S':VM:'N'
0725 DEFAULT="R"                                                        DEFAULT="R"
0726 X=43 ; Y = SLN ; TYP = 1 ; MAXL = 1;JUSTIFY = 'L' ; O.R = 'O'      X=43 ; Y = SLN ; TYP = 1 ; MAXL = 1;JUSTIFY = 'L' ; O.R = 'O
0727 IF DLB.TYPE<1,LN> # '' THEN DEFAULT=DLB.TYPE<1,LN>                 IF DLB.TYPE<1,LN> # '' THEN DEFAULT=DLB.TYPE<1,LN>
0728 CALL EDIT.SUB                                                   |  *T24092 v
0729                                                                 >  ***            CALL EDIT.SUB
0730                                                                 >  VALUE=JOB.TYPE
0731                                                                 >  *T24092 ^             
0732 IF VALUE='END' THEN GOTO 1020                                      IF VALUE='END' THEN GOTO 1020

0845 DLB.HRS.EN<1,LN>=VALUE                                             DLB.HRS.EN<1,LN>=VALUE
0846 DLB.TIME.END<1,LN>=VALUE2                                          DLB.TIME.END<1,LN>=VALUE2
0847 GOSUB 8100                                                         GOSUB 8100
0848 1100*                                                              1100*
0849 LOCATE DLB.OPER<1,LN> IN CCTR.OPER<1>,1 SETTING SC ELSE            LOCATE DLB.OPER<1,LN> IN CCTR.OPER<1>,1 SETTING SC ELSE
0850 ERRMSG='OPER # ':DLB.OPER:' DOES NOT BELONG UNDER CCTR # ':CCT  |  ERRMSG='OPER # ':DLB.OPER:' DOES NOT BELONG UNDER CCTR # ':C
0851 GOSUB 91000 ; GOTO 1999                                            GOSUB 91000 ; GOTO 1999
0852 END                                                                END
0853 BEGIN CASE                                                         BEGIN CASE
0854 CASE CCTR.OPER.TYPE<1,SC> = "V"                                    CASE CCTR.OPER.TYPE<1,SC> = "V"

0942 *-- GET AUTHORIZATION INITIALS                                     *-- GET AUTHORIZATION INITIALS
0943 7000*                                                              7000*
0944 VALUE = ""                                                         VALUE = ""
0945 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
0946 7010*                                                              7010*
0947 X=0;Y=21;MAXL=3;TYP=1;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""  |  *T23466 v
0948 PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "       |  *        X=0;Y=21;MAXL=3;TYP=1;MINV='';MAXV='';O.R="R";FILL=
0949 IF DLB.INIT<1,LN> # "" THEN                                     |  *        PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATI
0950 O.R='O';DEFAULT=DLB.INIT<1,LN>                                  |  *        IF DLB.INIT<1,LN> # "" THEN
0951 END                                                             |  *           O.R='O';DEFAULT=DLB.INIT<1,LN>

0952 CALL EDIT.SUB                                                   |  *        END
0953 P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"               |  *        CALL EDIT.SUB
0954 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                           |  *        P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
0955 IF VALUE="END" THEN GOTO 7999                                   |  *        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0956                                                                 >  *        IF VALUE="END" THEN GOTO 7999
0957                                                                 >  VALUE = "PRP"
0958                                                                 >  *T23466 ^

1090 P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"               P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
1091 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1092 NEXT M                                                             NEXT M
1093 11999*                                                             11999*
1094 RETURN                                                             RETURN
1095                                                                 >  *T24092 v
1096                                                                 >  *
1097                                                                 >  FIX.JOB.TYPE:
1098                                                                 >  *
1099                                                                 >  NUM.PTR = DCOUNT(DLB.TYPE,@VM)

1100                                                                 >  FOR II.PTR = 1 TO NUM.PTR
1101                                                                 >  IF DLB.JOB<1,II.PTR> # "" THEN
1102                                                                 >  MATREAD JOB.REC FROM JOB,CONO:DLB.JOB<1,II.PTR> THEN
1103                                                                 >  IF JOB.TYPE<1,1> # "" THEN
1104                                                                 >  DLB.TYPE<1,II.PTR>=JOB.TYPE<1,1>
1105                                                                 >  END 
1106                                                                 >  END

1107                                                                 >  END
1108                                                                 >  NEXT II.PTR
1109                                                                 >  *
1110                                                                 >  RETURN
1111                                                                 >  *
1112                                                                 >  *T24092 ^
1113 91000*                                                             91000*


JCSBP/TIME.MATL.MAINT                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/TIME.MATL.MAINT
Printed for thompson at 06/28/2006 04:42:10PM

0017 *T22074 lanny 07/14/1997 * Oper Matl Reqd may be null, Y or N.     *T22074 lanny 07/14/1997 * Oper Matl Reqd may be null, Y or 
0018 *T22485 stefanie 02/06/1998 * Allow entry of time & mat'l for      *T22485 stefanie 02/06/1998 * Allow entry of time & mat'l fo
0019 *                             of company file.                     *                             of company file.
0020 *T22689 renee 03/27/1998 * Make factor codes other than 01, 02     *T22689 renee 03/27/1998 * Make factor codes other than 01, 
0021 *                          do what 01 does.                        *                          do what 01 does.
0022 *T23278 markt 09/30/98 * Check for divisional security          |  *T23466 rik 11/25/1998 * DON'T PROMPT FOR AUTHORIZATION.  US
0023 *                          Restrict entry to jobs within        |  *T22746 cm 03/08/1999 * UPGRADE TO REV 11B
0024 *                          a single division; validate that     |  *T24092 rick 07/22/1999 * Modify pgm so that DTM.JOB.TYPE ma
0025 *                          division against the user's securit  |  *                         JOB.TYPE
0026 *T25688 alex 03/22/2001 * Allow calculation of elapse time for  |  *T24102 markt 10/27/1999 * Expand the shift code to 2 digits

0027 *                         entry. HNP400 calculates lunches.     <  
0028 *T26097 lanny 08/17/2001 * If Operation is chg'd and has Add'l     *T26097 lanny 08/17/2001 * If Operation is chg'd and has Add
0029 *                          the orig prompt data is not cleared     *                          the orig prompt data is not clear
0030 *                          defaults for new prompts may be of      *                          defaults for new prompts may be o
0031 *                          types.                                  *                          types.
0032 *T26207 lanny 10/03/2001 * Do not allow more than 24 hours in      *T26207 lanny 10/03/2001 * Do not allow more than 24 hours i
0033 *T26415 lross 01/31/2002 * Do not include lunch in DTM.REG.TIM  |  *T26544 cmykleb 04/15/2002 * Change pgm to prompt for Author

0034 *T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,  |  *                            the code "PSP" does not exist i
0035 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *                            JOB.STAT.CODE file.
0036 *T26661 cmykleb 06/12/2002 * If date field (#1) is changed in   |  *T26940 adelgado 10/25/2002 * Hard code Factor Field with '0
0037 *                            error occurs.                      <  
0038 *T27114 thompson 11/19/2002 * Fix problem with div security wi  <  
0039 *                             "N" on original entry.            <  
0040 *T28211 cmykleb 08/05/2004 * Allow up to 999 lines to be enter  <  

0041 *                            screen.                            <  
0042 **************************************************************     ************************************************************
0043 *-- FILE COPY STATEMENTS                                           *-- FILE COPY STATEMENTS
0044 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0045 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0046 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0047 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR

0053 *COPY>JCS.CPYLIB>DAILY.TIME.MATL                                   *COPY>JCS.CPYLIB>DAILY.TIME.MATL
0054 *COPY>JCS.CPYLIB>JOB.CUTOFF.NO                                     *COPY>JCS.CPYLIB>JOB.CUTOFF.NO
0055 *COPY>JCS.CPYLIB>JOB.STAT.CODE                                     *COPY>JCS.CPYLIB>JOB.STAT.CODE
0056 *COPY>JCS.CPYLIB>JOB.TRANS                                         *COPY>JCS.CPYLIB>JOB.TRANS
0057 *COPY>JCS.CPYLIB>SF.PROMPT                                         *COPY>JCS.CPYLIB>SF.PROMPT
0058 *COPY>JCS.CPYLIB>WIP.LEVEL                                      <  
0059 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0060 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0061 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0062 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0082 EQU PROD        TO TEMP.REC(13)                                    EQU PROD        TO TEMP.REC(13)
0083 EQU WHSE        TO TEMP.REC(14)                                    EQU WHSE        TO TEMP.REC(14)
0084 EQU LOCAT       TO TEMP.REC(15)                                    EQU LOCAT       TO TEMP.REC(15)
0085 EQU R.S.ID      TO TEMP.REC(16)                                    EQU R.S.ID      TO TEMP.REC(16)
0086 EQU ED.LS.FLG   TO TEMP.REC(17)                                    EQU ED.LS.FLG   TO TEMP.REC(17)
0087 EQU TMP.STATUS  TO TEMP.REC(18)    ;* T26126                    |  EQU STATUS      TO TEMP.REC(18)
0088 EQU QTY         TO TEMP.REC(19)                                    EQU QTY         TO TEMP.REC(19)
0089 EQU SHEET       TO TEMP.REC(20)                                    EQU SHEET       TO TEMP.REC(20)
0090 EQU PMT.FLG     TO TEMP.REC(21)                                    EQU PMT.FLG     TO TEMP.REC(21)
0091 EQU QTYPE       TO TEMP.REC(22)                                    EQU QTYPE       TO TEMP.REC(22)

0091 EQU QTYPE       TO TEMP.REC(22)                                    EQU QTYPE       TO TEMP.REC(22)
0092 EQU DATE.USED   TO TEMP.REC(23)                                    EQU DATE.USED   TO TEMP.REC(23)
0093 EQU TIME.USED   TO TEMP.REC(24)                                    EQU TIME.USED   TO TEMP.REC(24)
0094 *-- OPEN ALL FILES                                                 *-- OPEN ALL FILES
0095 OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN JC     OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="CANNOT OPEN 
0096                                                                 >  OPEN "","CBN.SCREENS" TO SECOND.SCREENS ELSE ERRMSG="CANNOT 
0097 OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPANY      OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="CANNOT OPEN COMPAN
0098 OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTROL      OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CANNOT OPEN CONTRO
0099 OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX FIL     OPEN "","PREFIX" TO PREFIX ELSE ERRMSG="CANNOT OPEN PREFIX F
0100 OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="CANNOT OPEN DIVISI     OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="CANNOT OPEN DIVI

0113 OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="CANNOT OPEN INVE     OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="CANNOT OPEN IN
0114 OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="CANNOT OPEN INV.WH     OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="CANNOT OPEN INV.
0115 OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="CANNOT OPE     OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="CANNOT O
0116 OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CANNOT OPEN CATEGO     OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CANNOT OPEN CATE
0117 OPEN "","JOB.TRANS" TO JOB.TRANS ELSE ERRMSG="CANNOT OPEN JOB.     OPEN "","JOB.TRANS" TO JOB.TRANS ELSE ERRMSG="CANNOT OPEN JO
0118 OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='CANNOT OPEN IN  |  OPEN '','ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG='CANN
0119 OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='CANNOT OPEN SF.P     OPEN '','SF.PROMPT' TO SF.PROMPT ELSE ERRMSG='CANNOT OPEN SF
0120 MAT SFP.REC = ""                                                   MAT SFP.REC = ""
0121 *-- GET COMPANY                                                    *-- GET COMPANY
0122 MAT COMP.REC=""                                                    MAT COMP.REC=""

0126 *-- INITIALIZATION                                                 *-- INITIALIZATION
0127 SHEET.OK=1 ;*** 1=ALLOW SHEET PAPER ENTRY ***                      SHEET.OK=1 ;*** 1=ALLOW SHEET PAPER ENTRY ***
0128 MAT EDIT.COM.DRIVER=''                                             MAT EDIT.COM.DRIVER=''
0129 ECD.SCRN.CNT=2                                                     ECD.SCRN.CNT=2
0130 ECD.SCRN.NAME<1>='TIME.MATL.MAINT'                                 ECD.SCRN.NAME<1>='TIME.MATL.MAINT'
0131                                                                 >  ECD.SCRN.FLAG<1> = 2 ;* T24102
0132 ECD.SCRN.NAME<2>='TIME.MATL.DET'                                   ECD.SCRN.NAME<2>='TIME.MATL.DET'
0133 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0134 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0135 PAGE.SIZE=9;BEGIN.PAGE=8;LINE.SPACE=1                              PAGE.SIZE=9;BEGIN.PAGE=8;LINE.SPACE=1

0136 *T26661  MAT EDIT.COM=''                                        |  *** T22746 ***
0137                                                                 >  *     MAT EDIT.COM=''
0138                                                                 >  *** T22746 ***
0139 MAT JOB.REC="";MAT DIV.REC="";MAT DEPT.REC="";MAT CCTR.REC="";     MAT JOB.REC="";MAT DIV.REC="";MAT DEPT.REC="";MAT CCTR.REC="
0140 DATE.WORKED="";TEST.REC=""                                         DATE.WORKED="";TEST.REC=""
0141 MAT GEN.XREF.REC=""                                                MAT GEN.XREF.REC=""
0142 GXR.CO=CONO                                                        GXR.CO=CONO

0159 MAT DTM.REC="";OPT=""                                              MAT DTM.REC="";OPT=""
0160 MAT SCV.REC="";ECD.ACTION=6;CALL SCRN.EDIT                         MAT SCV.REC="";ECD.ACTION=6;CALL SCRN.EDIT
0161 110*                                                               110*
0162 DEL.JOB = "" ; DEL.SEQ = ""                                        DEL.JOB = "" ; DEL.SEQ = ""
0163 EMP="";SHIFT=""                                                    EMP="";SHIFT=""
0164 *T26114   ONLY.VALID.DIVISION = '' ; * T23278                   <  
0165 SCV.REC(1)<1>=DATE()                                               SCV.REC(1)<1>=DATE()
0166 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0167 FOR REQUEST=1 TO 3                                                 FOR REQUEST=1 TO 3
0168 ON REQUEST GOSUB 1100,1200,1300                                    ON REQUEST GOSUB 1100,1200,1300

0173 NEXT REQUEST                                                       NEXT REQUEST
0174 NEW.REC=0                                                          NEW.REC=0
0175 DTM.KEY=EMP:"*":DATE.WORKED:"*":SHIFT                              DTM.KEY=EMP:"*":DATE.WORKED:"*":SHIFT
0176 OLD.KEY = DTM.KEY                                                  OLD.KEY = DTM.KEY
0177 NEW.KEY = DTM.KEY                                                  NEW.KEY = DTM.KEY
0178 * T26126 v                                                      |  MATREADU DTM.REC FROM DAILY.TIME.MATL,CONO:DTM.KEY ELSE
0179 MATREADU DTM.REC FROM DAILY.TIME.MATL,CONO:DTM.KEY LOCKED       <  
0180 ERRMSG = 'TIME & MATL record is locked by user - ':GETUSERNAME  <  
0181 GOSUB 91000;GOTO 100                                            <  
0182 END ELSE                                                        <  

0183 * T26126 ^                                                      <  
0184 MAT DTM.REC=""                                                     MAT DTM.REC=""
0185 NEW.REC=1                                                          NEW.REC=1
0186 END                                                                END
0187 IF NEW.REC THEN                                                    IF NEW.REC THEN
0188 CNT=0                                                              CNT=0
0189 REF=0                                                              REF=0

0195 FOR REF = 1 TO CNT                                                 FOR REF = 1 TO CNT
0196 GOSUB 650                                                          GOSUB 650
0197 NEXT REF                                                           NEXT REF
0198 REF=1                                                              REF=1
0199 CURR.REF.NO=""                                                     CURR.REF.NO=""
0200                                                                 >  *T24092 v         
0201                                                                 >  GOSUB FIX.JOB.TYPE
0202                                                                 >  *T24092 ^         
0203 GOSUB 70000                                                        GOSUB 70000
0204 GOSUB 50000                                                        GOSUB 50000

0210 OPT=ECD.RET.VALUE                                                  OPT=ECD.RET.VALUE
0211 510*                                                               510*
0212 BEGIN CASE                                                         BEGIN CASE
0213 CASE OPT="E" OR OPT="END"                                          CASE OPT="E" OR OPT="END"
0214 GOTO 100                                                           GOTO 100
0215 *T28211 v                                                       |  CASE OPT="A" AND CNT < 99
0216 *     CASE OPT="A" AND CNT < 99                                 <  
0217 CASE OPT="A" AND CNT < 999                                      <  
0218 *T28211 ^                                                       <  
0219 MODE="A"                                                           MODE="A"

0220 DONE=0                                                             DONE=0
0221 *T28211 v                                                       |  FOR REF=CNT+1 TO 99 UNTIL DONE
0222 *        FOR REF=CNT+1 TO 99 UNTIL DONE                         <  
0223 FOR REF=CNT+1 TO 999 UNTIL DONE                                 <  
0224 *T28211 ^                                                       <  
0225 GOSUB 50000                                                        GOSUB 50000
0226 GOSUB 10000                                                        GOSUB 10000
0227 CNT=CNT+1                                                          CNT=CNT+1

0237 CASE OPT="C" AND CNT > 0                                           CASE OPT="C" AND CNT > 0
0238 MODE="C"                                                           MODE="C"
0239 GOSUB 30000                                                        GOSUB 30000
0240 IF VALUE # "" AND VALUE # "END" THEN                               IF VALUE # "" AND VALUE # "END" THEN
0241 REF=VALUE                                                          REF=VALUE
0242 ***** T23278 v                                                  <  
0243 DIV.CODE = DTM.DIV<1,REF>; USER.ID = UPCASE(@LOGNAME); ERRMSG   <  
0244 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0245 IF ERRMSG # '' THEN                                             <  
0246 GOSUB 91000; GOTO 500                                           <  

0247 END                                                             <  
0248 ***** T23278 ^                                                  <  
0249 IF DTM.PMT.FLG<1,REF> # "" AND DTM.TYPE<1,REF> = "M" THEN          IF DTM.PMT.FLG<1,REF> # "" AND DTM.TYPE<1,REF> = "M" THEN
0250 ERRMSG="Material posted. Cannot change "                           ERRMSG="Material posted. Cannot change "
0251 GOSUB 91000                                                        GOSUB 91000
0252 GOTO 500                                                           GOTO 500
0253 END                                                                END

0277 CASE OPT="D" AND CNT > 0                                           CASE OPT="D" AND CNT > 0
0278 MODE="D"                                                           MODE="D"
0279 GOSUB 30000                                                        GOSUB 30000
0280 IF VALUE # "" AND VALUE # "END" THEN                               IF VALUE # "" AND VALUE # "END" THEN
0281 REF=VALUE                                                          REF=VALUE
0282 ***** T23278 v                                                  <  
0283 DIV.CODE = DTM.DIV<1,REF>; USER.ID = UPCASE(@LOGNAME); ERRMSG   <  
0284 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0285 IF ERRMSG # '' THEN                                             <  
0286 GOSUB 91000; GOTO 500                                           <  

0287 END                                                             <  
0288 ***** T23278 ^                                                  <  
0289 IF DTM.PMT.FLG<1,REF> # "" THEN                                    IF DTM.PMT.FLG<1,REF> # "" THEN
0290 ERRMSG="Material posted. Cannot delete "                           ERRMSG="Material posted. Cannot delete "
0291 GOSUB 91000                                                        GOSUB 91000
0292 GOTO 500                                                           GOTO 500
0293 END                                                                END

0296 CURR.REF.NO=""                                                     CURR.REF.NO=""
0297 GOSUB 50000                                                        GOSUB 50000
0298 GOSUB 70000                                                        GOSUB 70000
0299 END                                                                END
0300 CASE NUM(OPT)                                                      CASE NUM(OPT)
0301 *T26661 v                                                       <  
0302 IF OPT = 1 THEN                                                 <  
0303 511 *                                                           <  
0304 X=17;Y=2;TYP=6;O.R='O';FILL='#'                                 <  
0305 DEFAULT = OCONV(DATE.WORKED, "D2/")                             <  

0306 PVALUE = DEFAULT                                                <  
0307 MAXL = 8                                                        <  
0308 ODATE = DATE.WORKED                                             <  
0309 CALL EDIT.SUB                                                   <  
0310 IF VALUE # "END" THEN                                           <  
0311 DATE.WORKED = VALUE                                             <  
0312 ECD.RET.VALUE = VALUE                                           <  

0313 GOSUB 1101                                                      <  
0314 IF TEST.REC # "" THEN DATE.WORKED = ODATE                       <  
0315 END                                                             <  
0316 ECD.NUM = 2                                                     <  
0317 SCV.REC(2)<ECD.SCRN.NO> = DATE.WORKED                           <  
0318 ECD.ACTION=5;CALL SCRN.EDIT                                     <  
0319 IF TEST.REC # "" THEN TEST.REC="";GOTO 511                      <  

0320 END ELSE                                                        <  
0321 *T26661 ^                                                       <  
0322 IF OPT > 0 AND OPT < 4 THEN                                        IF OPT > 0 AND OPT < 4 THEN
0323 ON OPT GOSUB 1100,1200,1300                                        ON OPT GOSUB 1100,1200,1300
0324 END                                                                END
0325 END ; * T26661                                                  <  
0326 CASE OPT="R" AND CNT > 0                                           CASE OPT="R" AND CNT > 0

0339 DTM.PROD<1,REF>=PROD                                               DTM.PROD<1,REF>=PROD
0340 DTM.WHSE<1,REF>=WHSE                                               DTM.WHSE<1,REF>=WHSE
0341 DTM.LOC<1,REF>=LOCAT                                               DTM.LOC<1,REF>=LOCAT
0342 DTM.R.S.ID<1,REF>=R.S.ID                                           DTM.R.S.ID<1,REF>=R.S.ID
0343 DTM.ED.LS.FLG<1,REF>=ED.LS.FLG                                     DTM.ED.LS.FLG<1,REF>=ED.LS.FLG
0344 DTM.STATUS<1,REF>=TMP.STATUS    ;* T26126                       |  DTM.STATUS<1,REF>=STATUS
0345 DTM.QTY<1,REF>=QTY                                                 DTM.QTY<1,REF>=QTY
0346 DTM.SHEET<1,REF>=SHEET                                             DTM.SHEET<1,REF>=SHEET
0347 DTM.RS.QTYPE<1,REF>=QTYPE                                          DTM.RS.QTYPE<1,REF>=QTYPE
0348 IF DATE.USED # "" THEN                                             IF DATE.USED # "" THEN

0353 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0354 CURR.REF.NO=""                                                     CURR.REF.NO=""
0355 GOSUB 50000                                                        GOSUB 50000
0356 END                                                                END
0357 CASE OPT="P"                                                       CASE OPT="P"
0358 ***** T23278 v                                                  <  
0359 FOR I = 1 TO DCOUNT(DTM.DIV<1>,VM)                              <  
0360 DIV.CODE = DTM.DIV<1,I>; USER.ID = UPCASE(@LOGNAME); ERRMSG =   <  
0361 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0362 IF ERRMSG # '' THEN                                             <  

0363 GOSUB 91000; GOTO 500                                           <  
0364 END                                                             <  
0365 NEXT I                                                          <  
0366 ***** T23278 ^                                                  <  
0367 IF DTM.PMT.FLG="" OR DTM.PMT.FLG=STR(VM,LEN(DTM.PMT.FLG)) THEN     IF DTM.PMT.FLG="" OR DTM.PMT.FLG=STR(VM,LEN(DTM.PMT.FLG)) TH
0368 ECD.NUM=35                                                         ECD.NUM=35
0369 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT

0380 END                                                                END
0381 CASE OPT="S"                                                       CASE OPT="S"
0382 REF=CURR.REF.NO+PAGE.SIZE                                          REF=CURR.REF.NO+PAGE.SIZE
0383 IF REF > CNT THEN REF=1                                            IF REF > CNT THEN REF=1
0384 GOSUB 50000                                                        GOSUB 50000
0385 * T25978 v                                                      <  
0386 CASE OPT = 'SR'                                                 <  
0387 REF = CURR.REF.NO - PAGE.SIZE                                   <  
0388 IF REF < 1 THEN REF = 1                                         <  
0389 GOSUB 50000                                                     <  

0390 CASE OPT = 'ST'                                                 <  
0391 REF = 1                                                         <  
0392 GOSUB 50000                                                     <  
0393 CASE OPT = 'SB'                                                 <  
0394 REF = CNT                                                       <  
0395 GOSUB 50000                                                     <  
0396 * T25978 ^                                                      <  

0570 RETURN                                                             RETURN
0571 *-- GET DATE WORKED                                                *-- GET DATE WORKED
0572 1100*                                                              1100*
0573 ECD.NUM=2                                                          ECD.NUM=2
0574 *T22485 > ECD.MINV = DATE() - 7                                    *T22485 > ECD.MINV = DATE() - 7
0575 IF CO.TIME.MATL.DAYS+0 # 0 THEN                                 <  
0576 ECD.MINV = DATE() - CO.TIME.MATL.DAYS                              ECD.MINV = DATE() - CO.TIME.MATL.DAYS
0577 END ELSE ECD.MINV = DATE() - 7                                  <  
0578 ECD.MAXV = DATE()                                                  ECD.MAXV = DATE() 
0579 IF DATE.WORKED # "" THEN                                           IF DATE.WORKED # "" THEN

0580 ECD.O.R="O"; ECD.DEFAULT=DATE.WORKED                               ECD.O.R="O"; ECD.DEFAULT=DATE.WORKED
0581 END ELSE                                                           END ELSE
0582 ECD.O.R = "R"                                                      ECD.O.R = "R"
0583 END                                                                END
0584 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0585 1101 *                                                          <  
0586 IF ECD.RET.VALUE # "END" THEN                                      IF ECD.RET.VALUE # "END" THEN
0587 IF OPT = 1 THEN                                                    IF OPT = 1 THEN
0588 IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.     IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TER
0589 ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":OC     ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":

0589 ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":OC     ERRMSG="WARNING : Employee ":EMP:" has been terminated on ":
0590 GOSUB 91000                                                        GOSUB 91000
0591 END                                                                END
0592 GOSUB 1400                                                         GOSUB 1400
0593 IF TEST.REC # "" THEN                                              IF TEST.REC # "" THEN
0594 *T26661 v                                                       |  SCV.REC(2)<ECD.SCRN.NO> = DATE.WORKED;TEST.REC = "" ; GOTO 1
0595 *           SCV.REC(2)<ECD.SCRN.NO>=DATE.WORKED;TEST.REC="";GO  <  
0596 RETURN                                                          <  
0597 *T26661 ^                                                       <  
0598 END                                                                END

0691 10000*                                                             10000*
0692 GOSUB 50000                                                        GOSUB 50000
0693 MAT TEMP.REC=""                                                    MAT TEMP.REC=""
0694 SLN=BEGIN.PAGE + LINE.SPACE * MOD(REF-1,PAGE.SIZE)                 SLN=BEGIN.PAGE + LINE.SPACE * MOD(REF-1,PAGE.SIZE)
0695 IF MODE # "C" THEN                                                 IF MODE # "C" THEN
0696 *T28211 v                                                       |  P_X  = 0 ; P_Y = SLN ; P_VALUE = REF "R#2" ; P_OPT = "CL"
0697 *     P_X  = 0 ; P_Y = SLN ; P_VALUE = REF "R#2" ; P_OPT = "CL  <  
0698 P_X  = 0 ; P_Y = SLN ; P_VALUE = REF "R#3" ; P_OPT = "CL"       <  
0699 *T28211 ^                                                       <  
0700 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0706 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT
0707 END                                                                END
0708 IF MODE = "C" AND DTM.PMT.FLG<1,REF> # "" THEN PMT.FLG = 1 ELS     IF MODE = "C" AND DTM.PMT.FLG<1,REF> # "" THEN PMT.FLG = 1 E
0709 *-- GET TRANSACTION TYPE                                           *-- GET TRANSACTION TYPE
0710 10010*                                                             10010*
0711 *T28211 v                                                       |  X=3;Y=SLN;TYP=1;MAXL=1;O.R='O'
0712 *  X=3;Y=SLN;TYP=1;MAXL=1;O.R='O'                               <  
0713 X=4;Y=SLN;TYP=1;MAXL=1;O.R='O'                                  <  
0714 *T28211 ^                                                       <  
0715 IF PMT.FLG THEN VALDAT = DTM.TYPE<1,REF> ELSE VALDAT="T":VM:"M     IF PMT.FLG THEN VALDAT = DTM.TYPE<1,REF> ELSE VALDAT="T":VM:

0735 MAT JOB.REC=""                                                     MAT JOB.REC=""
0736 MAT CUST.REC=""                                                    MAT CUST.REC=""
0737 OSJ.FLG=""                                                         OSJ.FLG=""
0738 JINIT=""                                                           JINIT=""
0739 IF MODE="C" THEN                                                   IF MODE="C" THEN
0740 *T28211 v                                                       |  P_X  = 5 ; P_Y = SLN ; P_VALUE = JOB.NO "L#8" ; P_OPT = ""
0741 *           P_X  = 5 ; P_Y = SLN ; P_VALUE = JOB.NO "L#8" ; P_  <  
0742 P_X  = 6 ; P_Y = SLN ; P_VALUE = JOB.NO "L#8" ; P_OPT = ""      <  
0743 *T28211 ^                                                       <  
0744 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0745 END                                                                END
0746 CASE 1                                                             CASE 1
0747 *T28211 v                                                       |  X=5;Y=SLN;TYP=1;MAXL=8;O.R='R';HMSG="Enter Job number"
0748 *        X=5;Y=SLN;TYP=1;MAXL=8;O.R='R';HMSG="Enter Job number  <  
0749 X=6;Y=SLN;TYP=1;MAXL=8;O.R='R';HMSG="Enter Job number"          <  
0750 *T28211 ^                                                       <  
0751 IF PMT.FLG THEN VALDAT = DTM.JOB<1,REF>                            IF PMT.FLG THEN VALDAT = DTM.JOB<1,REF>
0752 IF DTM.JOB<1,REF> # "" THEN                                        IF DTM.JOB<1,REF> # "" THEN
0753 O.R='O';DEFAULT=DTM.JOB<1,REF>                                     O.R='O';DEFAULT=DTM.JOB<1,REF>

0781 ERRMSG="Invalid job number. Try again! "                           ERRMSG="Invalid job number. Try again! "
0782 GOSUB 91000                                                        GOSUB 91000
0783 GOTO 10020                                                         GOTO 10020
0784 END                                                                END
0785 END                                                                END
0786 ***** T23278 v                                                  <  
0787 *T26114         IF ONLY.VALID.DIVISION = '' THEN                <  
0788 DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''     <  
0789 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0790 IF ERRMSG # '' THEN                                             <  

0791 GOSUB 91000; GOTO 10020                                         <  
0792 END                                                             <  
0793 *T26114            ONLY.VALID.DIVISION = JOB.DIV                <  
0794 *T26114         END ELSE                                        <  
0795 *T26114            IF JOB.DIV # ONLY.VALID.DIVISION THEN        <  
0796 *T26114               ERRMSG = "JOB DIVISION MUST MATCH DIVISI  <  
0797 *T26114               GOSUB 91000; GOTO 10020                   <  

0798 *T26114            END                                          <  
0799 *T26114         END                                             <  
0800 ***** T23278 ^                                                  <  
0801 BEGIN CASE                                                         BEGIN CASE
0802 CASE JOB.STATUS<1,1>=9                                             CASE JOB.STATUS<1,1>=9
0803 ERRMSG="Job is cancelled. Try again! ";GOSUB 91000;GOTO 10020      ERRMSG="Job is cancelled. Try again! ";GOSUB 91000;GOTO 1002
0804 CASE JOB.STATUS<1,1>=7                                             CASE JOB.STATUS<1,1>=7

0882 GOSUB 91000                                                        GOSUB 91000
0883 GOTO 10030                                                         GOTO 10030
0884 CASE DCNT=1                                                        CASE DCNT=1
0885 JOB.DIV=DEPT.DIV<1,1>                                              JOB.DIV=DEPT.DIV<1,1>
0886 CASE 1                                                             CASE 1
0887 LOOP UNTIL ERRMSG = '' DO                                       <  
0888 DVS=1                                                              DVS=1
0889 ECD.NUM=36                                                         ECD.NUM=36
0890 ECD.VALDAT=DEPT.DIV<1,1>                                           ECD.VALDAT=DEPT.DIV<1,1>
0891 ECD.HMSG="Valid divisions - ":DEPT.DIV<1,1>                        ECD.HMSG="Valid divisions - ":DEPT.DIV<1,1>

0895 ECD.HMSG<1,1,DVS>=ECD.HMSG<1,1,DVS>:", ":DEPT.DIV<1,DV>            ECD.HMSG<1,1,DVS>=ECD.HMSG<1,1,DVS>:", ":DEPT.DIV<1,DV>
0896 NEXT DV                                                            NEXT DV
0897 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0898 IF ECD.RET.VALUE="END" THEN GOTO 10030                             IF ECD.RET.VALUE="END" THEN GOTO 10030
0899 JOB.DIV=ECD.RET.VALUE                                              JOB.DIV=ECD.RET.VALUE
0900 REPEAT                                                          <  
0901 END CASE                                                           END CASE
0902 END                                                                END
0903 LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING FND ELSE                   LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING FND ELSE
0904 ERRMSG="Job / Department - Division mismatch. Try again! "         ERRMSG="Job / Department - Division mismatch. Try again! "

0908 MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE                    MATREAD DIV.REC FROM DIVISION,CONO:JOB.DIV ELSE
0909 ERRMSG="Invalid division for department. Try again! "              ERRMSG="Invalid division for department. Try again! "
0910 GOSUB 91000                                                        GOSUB 91000
0911 GOTO 10030                                                         GOTO 10030
0912 END                                                                END
0913 ***** T23278 v                                                  <  
0914 *T26114         IF ONLY.VALID.DIVISION = '' THEN                <  
0915 DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG =  <  
0916 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0917 IF ERRMSG # '' THEN                                             <  

0918 GOSUB 91000; GOTO 10030                                         <  
0919 *T26114            END ELSE                                     <  
0920 *T26114               ONLY.VALID.DIVISION = JOB.DIV             <  
0921 END                                                             <  
0922 *T26114         END ELSE                                        <  
0923 *T26114            IF JOB.DIV # ONLY.VALID.DIVISION THEN        <  
0924 *T26114               ERRMSG = "JOB DIVISION MUST MATCH DIVISI  <  

0925 *T26114               GOSUB 91000; GOTO 10030                   <  
0926 *T26114            END                                          <  
0927 *T26114         END                                             <  
0928 ***** T23278 ^                                                  <  
0929 SCV.REC(29)<1>="Cost Center:"                                      SCV.REC(29)<1>="Cost Center:"
0930 SCV.REC(30)<1>=CCTR.DESC                                           SCV.REC(30)<1>=CCTR.DESC
0931 ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=29;ECD.ACTION=5;CALL SCRN.EDIT

1003 CASE TYPE="C" AND REF > 1                                          CASE TYPE="C" AND REF > 1
1004 TCODE=DTM.TIME.CODE<1,REF-1>                                       TCODE=DTM.TIME.CODE<1,REF-1>
1005 P_X  = 25 ; P_Y = SLN ; P_VALUE = TCODE "L#2" ; P_OPT = ""         P_X  = 25 ; P_Y = SLN ; P_VALUE = TCODE "L#2" ; P_OPT = ""
1006 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1007 CASE 1                                                             CASE 1
1008 X=25;Y=SLN;TYP=1;MAXL=2;O.R='O';HMSG="Enter Time Code: 01 = Re  |  * T26940 v
1009 IF DTM.TIME.CODE<1,REF> # "" THEN                               |  *         X=25;Y=SLN;TYP=1;MAXL=2;O.R='O';HMSG="Enter Time C
1010 DEFAULT=DTM.TIME.CODE<1,REF>                                    |  *         IF DTM.TIME.CODE<1,REF> # "" THEN
1011 END ELSE                                                        |  *           DEFAULT=DTM.TIME.CODE<1,REF>
1012 DEFAULT="01"                                                    |  *         END ELSE

1013 END                                                             |  *           DEFAULT="01"
1014 CALL EDIT.SUB                                                   |  *         END
1015 IF VALUE='END' THEN GOTO 10990                                  |  *         CALL EDIT.SUB
1016 TCODE=VALUE                                                     |  *         IF VALUE='END' THEN GOTO 10990
1017                                                                 >  *         TCODE=VALUE
1018                                                                 >  TCODE = '01'
1019                                                                 >  P_X  = 25 ; P_Y = SLN ; P_VALUE = TCODE "L#2" ; P_OPT = ""

1020                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1021                                                                 >  * T26940 ^
1022 END CASE                                                           END CASE
1023 MATREAD FCTR.REC FROM FACTOR,CONO:TCODE ELSE                       MATREAD FCTR.REC FROM FACTOR,CONO:TCODE ELSE
1024 ERRMSG="Invalid time code. Try again! "                            ERRMSG="Invalid time code. Try again! "
1025 GOSUB 91000                                                        GOSUB 91000
1026 GOTO 10050                                                         GOTO 10050

1045 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1046 *CASE OPER[1,1]="9"                                                *CASE OPER[1,1]="9"
1047 * JTYPE="N"                                                        * JTYPE="N"
1048 * PRINT @(31,SLN):JTYPE "L#1"                                      * PRINT @(31,SLN):JTYPE "L#1"
1049 CASE 1                                                             CASE 1
1050 X=28;Y=SLN;TYP=1;MAXL=1;O.R='O';HMSG="Enter Job Type: (R)eg, (  |  *T24092 v
1051 IF PMT.FLG THEN VALDAT = DTM.JOB.TYPE<1,REF> ELSE VALDAT = "R"  |  *                  X=28;Y=SLN;TYP=1;MAXL=1;O.R='O';HMSG="Ent
1052 IF DTM.JOB.TYPE<1,REF> # "" THEN                                |  *                  IF PMT.FLG THEN VALDAT = DTM.JOB.TYPE<1,R
1053 DEFAULT = DTM.JOB.TYPE<1,REF>                                   |  *                  IF DTM.JOB.TYPE<1,REF> # "" THEN
1054 END ELSE                                                        |  *                     DEFAULT = DTM.JOB.TYPE<1,REF>

1055 IF JOB.TYPE # "" THEN                                           |  *                  END ELSE
1056 DEFAULT=JOB.TYPE                                                |  *                     IF JOB.TYPE # "" THEN
1057 END ELSE                                                        |  *                        DEFAULT=JOB.TYPE
1058 DEFAULT="R"                                                     |  *                     END ELSE
1059 END                                                             |  *                        DEFAULT="R"
1060 END                                                             |  *                     END
1061 CALL EDIT.SUB                                                   |  *                  END

1062                                                                 >  *                  CALL EDIT.SUB
1063                                                                 >  *
1064                                                                 >  VALUE=JOB.TYPE
1065                                                                 >  P_X  = 28 ; P_Y = SLN ; P_VALUE = VALUE "L#1" ; P_OPT = ""
1066                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1067                                                                 >  *T24092 ^                  
1068 IF VALUE='END' THEN GOTO 10990                                     IF VALUE='END' THEN GOTO 10990

1287 DATE.USED="";TIME.USED=""                                          DATE.USED="";TIME.USED=""
1288 END ELSE                                                           END ELSE
1289 DATE.USED=INT(TS/100000);TIME.USED=MOD(TS,10000)                   DATE.USED=INT(TS/100000);TIME.USED=MOD(TS,10000)
1290 END                                                                END
1291 ED.LS.FLG=DTM.ED.LS.FLG<1,REF>                                     ED.LS.FLG=DTM.ED.LS.FLG<1,REF>
1292 TMP.STATUS=""    ;* T26126                                      |  STATUS=""
1293 *T22074 v                                                          *T22074 v
1294 CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MATL.REQ="     CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MATL.REQ
1295 *  CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MATL.RE     *  CASE (TYPE="L") OR (TYPE="I") OR (TYPE="T" AND OPER.MATL.
1296 *T22074 ^                                                          *T22074 ^

1299 LOCAT=""                                                           LOCAT=""
1300 R.S.ID=""                                                          R.S.ID=""
1301 QTY=""                                                             QTY=""
1302 SHEET=""                                                           SHEET=""
1303 ED.LS.FLG=""                                                       ED.LS.FLG=""
1304 TMP.STATUS=""    ;* T26126                                      |  STATUS=""
1305 IF MODE="C" THEN                                                   IF MODE="C" THEN
1306 P_X  = 54 ; P_Y = SLN ; P_VALUE = PROD "L#15" ; P_OPT = ""         P_X  = 54 ; P_Y = SLN ; P_VALUE = PROD "L#15" ; P_OPT = ""
1307 P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:QTY "R#8"            P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:QTY "R#8"
1308 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

1307 P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:QTY "R#8"            P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:QTY "R#8"
1308 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1309 END                                                                END
1310 CASE 1                                                             CASE 1
1311 ESTAT=""                                                           ESTAT=""
1312 IF DATE.USED = "" THEN DATE.USED = DATE.WORKED ; * T26661       <  
1313 CALL TIME.MATL.SUB (CONO, REF, SLN, MAT TEMP.REC, SHEET.OK, DE     CALL TIME.MATL.SUB (CONO, REF, SLN, MAT TEMP.REC, SHEET.OK, 
1314 IF ESTAT="END" THEN GOTO 10990                                     IF ESTAT="END" THEN GOTO 10990
1315 END CASE                                                           END CASE
1316 *-- CHECK ERROR STATUS                                             *-- CHECK ERROR STATUS

1317 10120*                                                             10120*
1318 IF TMP.STATUS="" THEN    ;* T26126                              |  IF STATUS="" THEN
1319 P_X  = 79 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""                 P_X  = 79 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
1320 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1321 END ELSE                                                           END ELSE
1322 P_X  = 79 ; P_Y = SLN ; P_VALUE = "*" ; P_OPT = ""                 P_X  = 79 ; P_Y = SLN ; P_VALUE = "*" ; P_OPT = ""
1323 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1324 END                                                                END

1349 DTM.PROD<1,REF>=PROD                                               DTM.PROD<1,REF>=PROD
1350 DTM.WHSE<1,REF>=WHSE                                               DTM.WHSE<1,REF>=WHSE
1351 DTM.LOC<1,REF>=LOCAT                                               DTM.LOC<1,REF>=LOCAT
1352 DTM.R.S.ID<1,REF>=R.S.ID                                           DTM.R.S.ID<1,REF>=R.S.ID
1353 DTM.ED.LS.FLG<1,REF>=ED.LS.FLG                                     DTM.ED.LS.FLG<1,REF>=ED.LS.FLG
1354 DTM.STATUS<1,REF>=TMP.STATUS    ;* T26126                       |  DTM.STATUS<1,REF>=STATUS
1355 DTM.QTY<1,REF>=QTY                                                 DTM.QTY<1,REF>=QTY
1356 DTM.SHEET<1,REF>=SHEET                                             DTM.SHEET<1,REF>=SHEET
1357 DTM.RS.QTYPE<1,REF> = QTYPE                                        DTM.RS.QTYPE<1,REF> = QTYPE
1358 IF DATE.USED # "" THEN                                             IF DATE.USED # "" THEN

1413 TM.QTY=DTM.SHEET<1,N>                                              TM.QTY=DTM.SHEET<1,N>
1414 CASE 1                                                             CASE 1
1415 TM.QTY=OCONV(INT(DTM.QTY<1,N>/10),"MD2")                           TM.QTY=OCONV(INT(DTM.QTY<1,N>/10),"MD2")
1416 END CASE                                                           END CASE
1417 IF DTM.STATUS<1,N> # "" THEN TM.STATUS="*" ELSE TM.STATUS=" "      IF DTM.STATUS<1,N> # "" THEN TM.STATUS="*" ELSE TM.STATUS=" 
1418 *T28211 v                                                       |  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
1419 *     P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""     |  P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TYPE<1,N> "
1420 *     P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TYPE<1,  |  P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB<1,N> "L
1421 *     P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB<1,N  <  
1422 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""           <  

1423 P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TYPE<1,N> "L#  <  
1424 P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB<1,N> "L#8  <  
1425 *T28211 ^                                                       <  
1426 P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.CCTR<1,N> "L     P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.CCTR<1,N> 
1427 P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.OPER<1,N> "L     P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.OPER<1,N> 
1428 P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TIME.CODE<1,     P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.TIME.CODE<
1429 P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB.TYPE<1,N     P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:DTM.JOB.TYPE<1

1455 DTM.DUB.TIME=""                                                    DTM.DUB.TIME=""
1456 DTM.LAPS.TIME=""                                                   DTM.LAPS.TIME=""
1457 FOR LP=1 TO CNT                                                    FOR LP=1 TO CNT
1458 TYPE=DTM.TYPE<1,LP>                                                TYPE=DTM.TYPE<1,LP>
1459 BEGIN CASE                                                         BEGIN CASE
1460 * CASE TYPE="L"     ;*T25688                                    |  CASE TYPE="L"
1461 CASE TYPE="M"                                                      CASE TYPE="M"
1462 CASE 1                                                             CASE 1
1463 STIME=DTM.TIME.ST<1,LP>                                            STIME=DTM.TIME.ST<1,LP>
1464 ETIME=DTM.TIME<1,LP>                                               ETIME=DTM.TIME<1,LP>

1472 CASE TC="02"                                                       CASE TC="02"
1473 DTM.OVR.TIME<1,LP>=ELAP.HRS                                        DTM.OVR.TIME<1,LP>=ELAP.HRS
1474 CASE TC="03"                                                       CASE TC="03"
1475 DTM.DUB.TIME<1,LP>=ELAP.HRS                                        DTM.DUB.TIME<1,LP>=ELAP.HRS
1476 CASE 1                              ; * T22689 Added this line     CASE 1                              ; * T22689 Added this li
1477 *T26415 v             DTM.REG.TIME<1,LP>=ELAP.HRS       ; * T2  |  DTM.REG.TIME<1,LP>=ELAP.HRS       ; * T22689 Added this line
1478 IF TYPE # 'L' THEN DTM.REG.TIME<1,LP>=ELAP.HRS       ; * T2268  <  
1479 END CASE                                                           END CASE
1480 DTM.LAPS.TIME<1,LP>=ELAP.HRS                                       DTM.LAPS.TIME<1,LP>=ELAP.HRS
1481 END CASE                                                           END CASE

1563 *-- GET AUTHORIZATION INITIALS                                     *-- GET AUTHORIZATION INITIALS
1564 85000*                                                             85000*
1565 ECD.RET.VALUE = ""                                                 ECD.RET.VALUE = ""
1566 IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.     IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRAC
1567 85010*                                                             85010*
1568                                                                 >  *T23466 v
1569                                                                 >  *           ECD.NUM=33
1570                                                                 >  *           IF DTM.INIT<1,REF> # "" THEN
1571                                                                 >  *              ECD.O.R="O"; ECD.DEFAULT=DTM.INIT<1,REF>
1572                                                                 >  *           END

1573                                                                 >  *           ECD.ACTION=4;CALL SCRN.EDIT
1574                                                                 >  *           IF ECD.RET.VALUE="END" THEN GOTO 85999
1575                                                                 >  ECD.RET.VALUE = "PRP"
1576                                                                 >  *T23466 ^
1577                                                                 >  *T26544 v
1578                                                                 >  *        MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VAL
1579                                                                 >  *           ERRMSG="Invalid authorization. Try again."

1580                                                                 >  *           GOSUB 91000
1581                                                                 >  *           GOTO 85010
1582                                                                 >  *        END
1583                                                                 >  *        JINIT = ECD.RET.VALUE
1584                                                                 >  MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:ECD.RET.VALUE THEN
1585                                                                 >  JINIT = ECD.RET.VALUE
1586                                                                 >  END ELSE

1595 GOSUB 91000                                                        GOSUB 91000
1596 GOTO 85010                                                         GOTO 85010
1597 END                                                                END
1598 JINIT = ECD.RET.VALUE                                              JINIT = ECD.RET.VALUE
1599 END                                                                END
1600                                                                 >  *T26544 ^
1601                                                                 >  END
1602 85999*                                                             85999*
1603 RETURN                                                             RETURN
1604                                                                 >  *T24092 v

1605                                                                 >  *
1606                                                                 >  FIX.JOB.TYPE: 
1607                                                                 >  *
1608                                                                 >  NUM.PTR = DCOUNT(DTM.TYPE,@VM)
1609                                                                 >  FOR II.PTR = 1 TO NUM.PTR
1610                                                                 >  IF DTM.JOB<1,II.PTR> # "" THEN
1611                                                                 >  MATREAD JOB.REC FROM JOB,CONO:DTM.JOB<1,II.PTR> THEN

1612                                                                 >  IF JOB.TYPE<1,1> # "" THEN
1613                                                                 >  DTM.JOB.TYPE<1,II.PTR>=JOB.TYPE<1,1>
1614                                                                 >  END 
1615                                                                 >  END
1616                                                                 >  END
1617                                                                 >  NEXT II.PTR
1618                                                                 >  *

1619                                                                 >  RETURN
1620                                                                 >  *
1621                                                                 >  *T24092 ^
1622 *-- ERROR ROUTINE                                                  *-- ERROR ROUTINE
1623 91000*                                                             91000*
1624 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                      ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1625 93000*                                                             93000*

1624 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                      ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1625 93000*                                                             93000*
1626 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                             ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
1627 *-- END OF PROGRAM                                                 *-- END OF PROGRAM
1628 99999*                                                             99999*
1629 ECD.ACTION = 99 ; CALL SCRN.EDIT                                |  * PRINT @(-1)
1630 END                                                                END
1631 


