









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:24:37 CDT 2006
####### ######  #       ######  ######
#       #     # #    #  #     # #     #
#       #     # #    #  #     # #     #
#####   ######  #    #  ######  ######
#       #       ####### #     # #
#       #            #  #     # #
####### #            #  ######  #

EP4BP/EP4.EMPLOYEE.MAINT                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EP4.EMPLOYEE.MAINT
Printed for thompson at 06/28/2006 04:24:37PM

0009 *                - 07/25/89]RRG]#14032]UPDATE MISCDED WITH FLA     *                - 07/25/89]RRG]#14032]UPDATE MISCDED WITH F
0010 * MODIFIED       - 12/05/89 Scott Dickerson,PRISM Software Tec     * MODIFIED       - 12/05/89 Scott Dickerson,PRISM Software T
0011 *                  FEB 1990 401K.MODS ADDED BY SFC                 *                  FEB 1990 401K.MODS ADDED BY SFC
0012 * DESCRIIPTION   - EMPLOYEE MAINTENANCE                            * DESCRIIPTION   - EMPLOYEE MAINTENANCE
0013 *T21851 lanny 04/28/1997 * Default SICK FICA field to Y.           *T21851 lanny 04/28/1997 * Default SICK FICA field to Y.
0014 *T26556 cmykleb 05/16/2002 * Rev12 changes.                     |  *T24102 markt 10/25/1999 * Expand the shift code to 2 digits
0015                                                                 >  *T25142 cm 07/11/2000 * Check for rate changes and update wh
0016                                                                 >  *                       appropriate.
0017                                                                 >  *T25350 cm 08/25/2000 * Allow system to file Non-Primac Empl
0018                                                                 >  *T25568 cm 01/05/2001 * Change Vac Hours column 2 calculatio

0019                                                                 >  *T25576 cm 01/05/2001 * Change vacation and sick amounts to 
0020                                                                 >  *                       digits past the decimal place.
0021                                                                 >  *C38122 cm 07/10/2001 * The current effective rates and date
0022                                                                 >  *                       be checked in the JOB.CLASS file whe
0023                                                                 >  *                       employee is entered.
0024                                                                 >  *T28287 cmykleb 10/04/2004 * Remove coding which makes the f
0025                                                                 >  *                            fields required. Address, City,

0026                                                                 >  *                            Phone, Birthdate, Marital Statu
0027                                                                 >  *                            Penson, Sick FICA, Alt Emp #.
0028                                                                 >  *ENDDOC
0029 *-------------------------------------------------------------     *-----------------------------------------------------------
0030 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0031 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0032 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM

0032 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0033 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0034 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0035 *COPY>CPYLIB>GEN.XREF                                              *COPY>CPYLIB>GEN.XREF
0036 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0037 *T25236 v                                                       <  
0038 *COPY>CPYLIB>TCC                                                <  
0039 *T25236 ^                                                       <  
0040 *-------------------------------------------------------------     *-----------------------------------------------------------
0041 *COPY>PMC.CPYLIB>COM.COMPANY                                       *COPY>PMC.CPYLIB>COM.COMPANY

0050 *COPY>PMC.CPYLIB>EMPLOYEE                                          *COPY>PMC.CPYLIB>EMPLOYEE
0051 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0052 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0053 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0054 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0055                                                                 >  *COPY>CBN.CPYLIB>VACATION.TRANS         ; * T25568
0056                                                                 >  *COPY>PRS.CPYLIB>JOB.CLASS              ; * C38122
0057 *-------------------------------------------------------------     *-----------------------------------------------------------
0058 *T25236 v                                                       <  
0059 PC.PORT.TYPE.SAVE = PC.PORT.TYPE                                <  

0060 PC.PORT.TSEL.SAVE = PC.PORT.TSEL                                <  
0061 PC.PORT.TYPE = "STD"                                            <  
0062 PC.PORT.TSEL = "STD"                                            <  
0063 *T25236 ^                                                       <  
0064 EQU SN TO ECD.SCRN.NO,AN TO ECD.NUM,VN TO ECD.SUB.NUM              EQU SN TO ECD.SCRN.NO,AN TO ECD.NUM,VN TO ECD.SUB.NUM
0065 EQU ACT TO ECD.ACTION,VAL TO ECD.RET.VALUE                         EQU ACT TO ECD.ACTION,VAL TO ECD.RET.VALUE
0066 *-------------------------------------------------------------     *-----------------------------------------------------------

0077 MATREAD COMP.REC FROM COMPANY,CONO ELSE MSG = "CANNOT READ COM     MATREAD COMP.REC FROM COMPANY,CONO ELSE MSG = "CANNOT READ C
0078 *-------------------------------------------------------------     *-----------------------------------------------------------
0079 MATREAD DC.REC FROM CONTROL,CONO:"401K" ELSE MAT DC.REC = ""       MATREAD DC.REC FROM CONTROL,CONO:"401K" ELSE MAT DC.REC = ""
0080 *-------------------------------------------------------------     *-----------------------------------------------------------
0081 * GET INITIALS                                                     * GET INITIALS
0082 *T26556 v                                                       |  PRINT CS:;TRAN.INT='';OLD='';NEW='';OLD.BDAY=''
0083 *  PRINT CS:;TRAN.INT='';OLD='';NEW='';OLD.BDAY=''              |  X=10;Y=15;TYP=1;MAXL=3;PMSG='ENTER YOUR INITIALS OR END:'
0084 *  X=10;Y=15;TYP=1;MAXL=3;PMSG='ENTER YOUR INITIALS OR END:'    |  CALL EDIT.SUB
0085 *  CALL EDIT.SUB                                                |  IF VALUE='END' THEN GO 99999 ELSE TRAN.INT=VALUE
0086 *  IF VALUE='END' THEN GO 99999 ELSE TRAN.INT=VALUE             <  

0087 *T26556 ^                                                       <  
0088 *-------------------------------------------------------------     *-----------------------------------------------------------
0089 * OPEN FILES                                                       * OPEN FILES
0090 OPEN 'EMPLOYEE' TO EMPLOYEE ELSE MSG='EMPLOYEE';GO 92000           OPEN 'EMPLOYEE' TO EMPLOYEE ELSE MSG='EMPLOYEE';GO 92000
0091 S.EMP.FILE='Y'                                                     S.EMP.FILE='Y'
0092 OPEN 'S.EMPLOYEE' TO S.EMPLOYEE ELSE S.EMP.FILE='N'                OPEN 'S.EMPLOYEE' TO S.EMPLOYEE ELSE S.EMP.FILE='N'
0093 OPEN 'DIVISION' TO DIVISION ELSE MSG='DIVISION';GO 92000           OPEN 'DIVISION' TO DIVISION ELSE MSG='DIVISION';GO 92000

0098 OPEN 'TAX2' TO TAX2 ELSE MSG='TAX2';GO 92000                       OPEN 'TAX2' TO TAX2 ELSE MSG='TAX2';GO 92000
0099 OPEN 'PAYTYPE' TO PAYTYPE ELSE MSG='PAYTYPE';GO 92000              OPEN 'PAYTYPE' TO PAYTYPE ELSE MSG='PAYTYPE';GO 92000
0100 OPEN 'MISCDED' TO MISCDED ELSE MSG='MISCDED';GO 92000              OPEN 'MISCDED' TO MISCDED ELSE MSG='MISCDED';GO 92000
0101 OPEN 'QTD-YTD' TO QTD.YTD ELSE MSG='QTD-YTD';GO 92000              OPEN 'QTD-YTD' TO QTD.YTD ELSE MSG='QTD-YTD';GO 92000
0102 OPEN 'PRS.SCREENS' TO M.SCREENS ELSE MSG='PRS.SCREENS';GO 9200     OPEN 'PRS.SCREENS' TO M.SCREENS ELSE MSG='PRS.SCREENS';GO 92
0103                                                                 >  OPEN 'CBN.SCREENS' TO SECOND.SCREENS ELSE MSG='CBN.SCREENS';
0104 OPEN 'KEYWORDS' TO KEYWORDS ELSE MSG='KEYWORDS';GO 92000           OPEN 'KEYWORDS' TO KEYWORDS ELSE MSG='KEYWORDS';GO 92000
0105 OPEN 'INVEST.FUND.CODE' TO INVEST.FUND.CODE ELSE MSG='INVEST.F     OPEN 'INVEST.FUND.CODE' TO INVEST.FUND.CODE ELSE MSG='INVEST
0106                                                                 >  *T25568 v
0107                                                                 >  OPEN 'VACATION.TRANS' TO VACATION.TRANS ELSE MSG = 'VACATION

0108                                                                 >  *T25568 ^
0109 IF CO.EMP.XREF='Y' THEN                                            IF CO.EMP.XREF='Y' THEN
0110 OPEN 'EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE MSG='EMPLOYEE.XREF'     OPEN 'EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE MSG='EMPLOYEE.XRE
0111 END                                                                END
0112                                                                 >  *C38122 v
0113                                                                 >  OPEN 'JOB.CLASS' TO JOB.CLASS ELSE MSG = 'JOB.CLASS';GO 9200
0114                                                                 >  *C38122 ^

0115 *-------------------------------------------------------------     *-----------------------------------------------------------
0116 * SCREEN                                                           * SCREEN
0117 MAT EDIT.COM.DRIVER=''                                             MAT EDIT.COM.DRIVER=''
0118 ECD.SCRN.CNT=4                                                     ECD.SCRN.CNT=4
0119 ECD.SCRN.NAME<1>='EPS.EMPLOYEE.MAINT'                              ECD.SCRN.NAME<1>='EPS.EMPLOYEE.MAINT'
0120                                                                 >  ECD.SCRN.FLAG<1> = 2 ;* T24102
0121 ECD.SCRN.NAME<2>='EMPLOYEE.MAINT2'                                 ECD.SCRN.NAME<2>='EMPLOYEE.MAINT2'
0122                                                                 >  ECD.SCRN.FLAG<2> = 2 ;* T24102
0123 ECD.SCRN.NAME<3>='EMPLOYEE.MAINT3'                                 ECD.SCRN.NAME<3>='EMPLOYEE.MAINT3'
0124 ECD.SCRN.NAME<4>='EMPLOYEE.MAINT4'                                 ECD.SCRN.NAME<4>='EMPLOYEE.MAINT4'

0125 ECD.SCRN.NAME<5>='EMPLOYEE.MAINT.INIT' ; * T26556               <  
0126 *T26556 v                                                       <  
0127 SN = 5                                                          <  
0128 ACT = 1 ; CALL SCRN.EDIT                                        <  
0129 AN=1;ACT=4;CALL SCRN.EDIT                                       <  
0130 IF VAL = 'END' THEN GOTO 99999                                  <  
0131 TRAN.INT = VAL                                                  <  

0132 SN = 1                                                          <  
0133 OLD.BDAY = ''                                                   <  
0134 *T26556 ^                                                       <  
0135 ACT=1;CALL SCRN.EDIT                                               ACT=1;CALL SCRN.EDIT
0136                                                                 >  TODAY = DATE() ; * C38122
0137 * MAIN PROCESS                                                     * MAIN PROCESS
0138 100   *                                                            100   *

0139 OLD.BDAY = ""                                                   <  
0140 SN=1                                                               SN=1
0141 MAT SCV.REC=''                                                     MAT SCV.REC=''
0142 ACT=6;CALL SCRN.EDIT                                               ACT=6;CALL SCRN.EDIT
0143 * ENTER EMPLOYEE NUMBER                                            * ENTER EMPLOYEE NUMBER
0144 200   *                                                            200   *
0145 EMP.NO='';OLD.NAME='';NEW.FLG='N';TRAN.TYPE='3';S.NEW.FLG='N'      EMP.NO='';OLD.NAME='';NEW.FLG='N';TRAN.TYPE='3';S.NEW.FLG='N

0174 END                                                                END
0175 GO 250                                                             GO 250
0176 END                                                                END
0177 END                                                                END
0178 EMP.NO=VAL                                                         EMP.NO=VAL
0179                                                                 >  *T25142 v
0180                                                                 >  BHD.END.DATE = DATE()
0181                                                                 >  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,CONO:EMP.NO,BHD.END.D
0182                                                                 >  ECNT = DCOUNT(EMP.VALID.CLASS<1>,VM)
0183                                                                 >  FOR E = 1 TO ECNT

0184                                                                 >  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,CONO:EMP.NO,BHD.END.D
0185                                                                 >  NEXT E
0186                                                                 >  *T25142 ^
0187 OLD.NAME=EMP.LAST.NAME                                             OLD.NAME=EMP.LAST.NAME
0188 GOSUB 80000                                                        GOSUB 80000
0189 IF EMP.SOC.SEC='' THEN                                             IF EMP.SOC.SEC='' THEN
0190 NEW.FLG='Y'                                                        NEW.FLG='Y'

0287 CASE OPTION='N'                                                    CASE OPTION='N'
0288 CALL EP4.EMPLOYEE.MAINT2                                           CALL EP4.EMPLOYEE.MAINT2
0289 SCV.REC(41)<1>=EMP.REV.DATE<1,1>                                   SCV.REC(41)<1>=EMP.REV.DATE<1,1>
0290 SN=1;ACT=3;CALL SCRN.EDIT                                          SN=1;ACT=3;CALL SCRN.EDIT
0291 CASE OPTION='F' AND S.EMP.FILE='N'                                 CASE OPTION='F' AND S.EMP.FILE='N'
0292                                                                 >  *T25350 v
0293                                                                 >  IF EMP.STATUS = 'N' AND EMP.PAY.CYCLE = 'N' THEN
0294                                                                 >  NULL
0295                                                                 >  END ELSE
0296                                                                 >  *T25350 ^

0297 IF EMP.WRK.SCHD = '' OR EMP.NORM.SHFT = '' OR EMP.JOB.CLASS =      IF EMP.WRK.SCHD = '' OR EMP.NORM.SHFT = '' OR EMP.JOB.CLASS 
0298 MSG='THERE ARE INCOMPLETE FIELDS ON THE SECOND SCREEN THAT ARE     MSG='THERE ARE INCOMPLETE FIELDS ON THE SECOND SCREEN THAT A
0299 GOSUB 91000                                                        GOSUB 91000
0300 GO 500                                                             GO 500
0301 END                                                                END
0302                                                                 >  END ; * T25350
0303 MATWRITE EMP.REC ON EMPLOYEE,CONO:EMP.NO                           MATWRITE EMP.REC ON EMPLOYEE,CONO:EMP.NO
0304 IF NEW.FLG='Y' THEN                                                IF NEW.FLG='Y' THEN
0305 TRAN.TYPE='1'                                                      TRAN.TYPE='1'
0306 GOSUB 90000                                                        GOSUB 90000

0308 IF CO.EMP.XREF='Y' THEN                                            IF CO.EMP.XREF='Y' THEN
0309 CALL GEN.XREF.MAINT(CONO,EMP.NO,OLD.NAME,EMP.LAST.NAME,EMPLOYE     CALL GEN.XREF.MAINT(CONO,EMP.NO,OLD.NAME,EMP.LAST.NAME,EMPLO
0310 END                                                                END
0311 GO 100                                                             GO 100
0312 CASE OPTION='F'                                                    CASE OPTION='F'
0313                                                                 >  *T25350 v
0314                                                                 >  IF EMP.STATUS = 'N' AND EMP.PAY.CYCLE = 'N' THEN
0315                                                                 >  NULL
0316                                                                 >  END ELSE
0317                                                                 >  *T25350 ^

0318 IF EMP.WRK.SCHD = '' OR EMP.NORM.SHFT = '' OR EMP.JOB.CLASS =      IF EMP.WRK.SCHD = '' OR EMP.NORM.SHFT = '' OR EMP.JOB.CLASS 
0319 MSG='THERE ARE INCOMPLETE FIELDS ON THE SECOND SCREEN THAT ARE     MSG='THERE ARE INCOMPLETE FIELDS ON THE SECOND SCREEN THAT A
0320 GOSUB 91000                                                        GOSUB 91000
0321 GO 500                                                             GO 500
0322 END                                                                END
0323                                                                 >  END ; *T25350
0324                                                                 >  *C38122 v
0325                                                                 >  *** CHECK AND LOAD EFFECTIVE DATE CHANGES ***
0326                                                                 >  *** CHECK THE EMPLOYEES HOME CLASS AND RATE FIRST ***
0327                                                                 >  EMP.EFF.CLASS = '';EMP.EFF.DATE='';EMP.EFF.RATE=''

0328                                                                 >  MATREAD JCC.REC FROM JOB.CLASS, CONO:EMP.JOB.CLASS THEN
0329                                                                 >  XCNT = DCOUNT(JCC.EFF.DATE<1>,VM)
0330                                                                 >  FOR X = 1 TO XCNT
0331                                                                 >  XDATE = JCC.EFF.DATE<1,X>
0332                                                                 >  XRATE = JCC.EFF.RATE<1,X>
0333                                                                 >  IF XDATE GT TODAY THEN
0334                                                                 >  XCNT = DCOUNT(EMP.EFF.CLASS<1>,VM) + 1

0335                                                                 >  EMP.EFF.CLASS<1,XCNT> = EMP.JOB.CLASS
0336                                                                 >  EMP.EFF.DATE<1,XCNT> = XDATE
0337                                                                 >  EMP.EFF.RATE<1,XCNT> = XRATE
0338                                                                 >  END
0339                                                                 >  NEXT X
0340                                                                 >  END
0341                                                                 >  *** CHECK THE EMPLOYEES OTHER CLASSES AND RATES NEXT ***

0342                                                                 >  CCNT = DCOUNT(EMP.VALID.CLASS<1>,VM)
0343                                                                 >  FOR C = 1 TO CCNT
0344                                                                 >  CCLASS = EMP.VALID.CLASS<1,C>
0345                                                                 >  CRATE = EMP.VAL.CL.RATE<1,C>
0346                                                                 >  MATREAD JCC.REC FROM JOB.CLASS, CONO:CCLASS THEN
0347                                                                 >  XCNT = DCOUNT(JCC.EFF.DATE<1>,VM)
0348                                                                 >  FOR X = 1 TO XCNT

0349                                                                 >  XDATE = JCC.EFF.DATE<1,X>
0350                                                                 >  XRATE = JCC.EFF.RATE<1,X>
0351                                                                 >  IF XDATE GT TODAY THEN
0352                                                                 >  XCNT = DCOUNT(EMP.EFF.CLASS<1>,VM) + 1
0353                                                                 >  EMP.EFF.CLASS<1,XCNT> = CCLASS
0354                                                                 >  EMP.EFF.DATE<1,XCNT> = XDATE
0355                                                                 >  EMP.EFF.RATE<1,XCNT> = XRATE

0356                                                                 >  END
0357                                                                 >  NEXT X
0358                                                                 >  END
0359                                                                 >  NEXT C
0360                                                                 >  *C38122 ^
0361 BEGIN CASE                                                         BEGIN CASE
0362 CASE NEW.FLG='N'                                                   CASE NEW.FLG='N'

0399 MDED.USAGE.FLAG='Y'                                                MDED.USAGE.FLAG='Y'
0400 WRITEV MDED.USAGE.FLAG ON MISCDED,CONO:EMP.MSC.CODE<1,I>,16        WRITEV MDED.USAGE.FLAG ON MISCDED,CONO:EMP.MSC.CODE<1,I>,16
0401 END                                                                END
0402 NEXT I                                                             NEXT I
0403 *                                                                  *
0404                                                                 >  RELEASE EMPLOYEE,CONO:EMP.NO
0405                                                                 >  RELEASE S.EMPLOYEE,CONO:EMP.NO
0406 GO 100                                                             GO 100
0407 END CASE                                                           END CASE
0408 GO 500                                                             GO 500

0441 RETURN                                                             RETURN
0442 * ADDRESS                                                          * ADDRESS
0443 3000  *                                                            3000  *
0444 AN=6;ACT=4;CALL SCRN.EDIT                                          AN=6;ACT=4;CALL SCRN.EDIT
0445 IF VAL='END' THEN GO 3999                                          IF VAL='END' THEN GO 3999
0446 IF VAL='' THEN GO 3000                                          |  *T28287   IF VAL='' THEN GO 3000
0447 DESC='ADDRESS 1'                                                   DESC='ADDRESS 1'
0448 OLD=EMP.ADDR1                                                      OLD=EMP.ADDR1
0449 NEW=VAL                                                            NEW=VAL
0450 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000

0458 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000
0459 EMP.ADDR2=VAL                                                      EMP.ADDR2=VAL
0460 3500  *                                                            3500  *
0461 AN=8;ACT=4;CALL SCRN.EDIT                                          AN=8;ACT=4;CALL SCRN.EDIT
0462 IF VAL='END' THEN GO 3999                                          IF VAL='END' THEN GO 3999
0463 IF VAL='' THEN GO 3500                                          |  *T28287   IF VAL='' THEN GO 3500
0464 DESC='CITY'                                                        DESC='CITY'
0465 OLD=EMP.CITY                                                       OLD=EMP.CITY
0466 NEW=VAL                                                            NEW=VAL
0467 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000

0467 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000
0468 EMP.CITY=VAL                                                       EMP.CITY=VAL
0469 3700  *                                                            3700  *
0470 AN=9;ACT=4;CALL SCRN.EDIT                                          AN=9;ACT=4;CALL SCRN.EDIT
0471 IF VAL='END' THEN GO 3999                                          IF VAL='END' THEN GO 3999
0472 IF VAL='' THEN GO 3700                                          |  *T28287   IF VAL='' THEN GO 3700
0473 DESC='STATE'                                                       DESC='STATE'
0474 OLD=EMP.STATE                                                      OLD=EMP.STATE
0475 NEW=VAL                                                            NEW=VAL
0476 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000

0476 IF NEW.FLG='N' THEN GOSUB 90000                                    IF NEW.FLG='N' THEN GOSUB 90000
0477 EMP.STATE=VAL                                                      EMP.STATE=VAL
0478 3900  *                                                            3900  *
0479 AN=10;ACT=4;CALL SCRN.EDIT                                         AN=10;ACT=4;CALL SCRN.EDIT
0480 IF VAL='END' THEN GO 3999                                          IF VAL='END' THEN GO 3999
0481 IF VAL='' THEN GO 3900                                          |  *T28287   IF VAL='' THEN GO 3900
0482 DESC='ZIP'                                                         DESC='ZIP'
0483 OLD=EMP.ZIP                                                        OLD=EMP.ZIP
0484 NEW=VAL                                                            NEW=VAL
0485 EMP.ZIP=VAL                                                        EMP.ZIP=VAL

0972 DESC='RATE'                                                        DESC='RATE'
0973 OLD=OCONV(EMP.RATE,'MD4')                                          OLD=OCONV(EMP.RATE,'MD4')
0974 EMP.RATE=VAL                                                       EMP.RATE=VAL
0975 EMP.JOB.CL.RATE=VAL                                                EMP.JOB.CL.RATE=VAL
0976 NEW=OCONV(VAL,'MD4')                                               NEW=OCONV(VAL,'MD4')
0977                                                                 >  CALL CHECK.RATE.CHANGE.SUB(MAT EMP.REC,CONO:EMP.NO,BHD.END.D
0978 19999 *                                                            19999 *
0979 RETURN                                                             RETURN
0980 * ALT.NO                                                           * ALT.NO
0981 20000 *                                                            20000 *

1005 RETURN                                                             RETURN
1006 * MAX.VAC                                                          * MAX.VAC
1007 22000 *                                                            22000 *
1008 AN=38;ACT=4;CALL SCRN.EDIT                                         AN=38;ACT=4;CALL SCRN.EDIT
1009 IF VAL='END' THEN GO 22999                                         IF VAL='END' THEN GO 22999
1010 IF VAL - INT((SUM(QTD.VAC.HRS) + .05) / 10) < 0 THEN            |  *T25568 v
1011 MSG='AVAILABLE VACATION HOURS IS LESS THAN ZERO'                |  *  IF VAL - INT((SUM(QTD.VAC.HRS) + .05) / 10) < 0 THEN
1012 GOSUB 91000;GO 22000                                            |  *     MSG='AVAILABLE VACATION HOURS IS LESS THAN ZERO'
1013 END                                                             |  *     GOSUB 91000;GO 22000
1014                                                                 >  *  END

1015                                                                 >  *T25568 ^
1016                                                                 >  *T25576 v
1017                                                                 >  *  OLD=OCONV(EMP.MAX.VAC,'MD1')
1018                                                                 >  *  NEW=OCONV(VAL,'MD1')
1019                                                                 >  OLD=OCONV(EMP.MAX.VAC,'MD2')
1020                                                                 >  NEW=OCONV(VAL,'MD2')
1021                                                                 >  *T25576 ^

1022 DESC='MAX VAC HOURS'                                               DESC='MAX VAC HOURS'
1023 OLD=OCONV(EMP.MAX.VAC,'MD1')                                    <  
1024 NEW=OCONV(VAL,'MD1')                                            <  
1025 EMP.MAX.VAC=VAL                                                    EMP.MAX.VAC=VAL
1026 AN=39;SCV.REC(39)<SN>=EMP.MAX.VAC - INT((SUM(QTD.VAC.HRS) + .0  |  *T25568 v
1027 ACT=5;CALL SCRN.EDIT                                            |  *  AN=39;SCV.REC(39)<SN>=EMP.MAX.VAC - INT((SUM(QTD.VAC.HRS)
1028                                                                 >  *  ACT=5;CALL SCRN.EDIT
1029                                                                 >  *T25568 ^

1085 MAT CCTR.REC=''                                                    MAT CCTR.REC=''
1086 CCTR.DESC='GENERAL COST CENTER'                                    CCTR.DESC='GENERAL COST CENTER'
1087 END ELSE                                                           END ELSE
1088 MATREAD CCTR.REC FROM COST.CNTR,CONO:EMP.COST.CNTR ELSE MAT CC     MATREAD CCTR.REC FROM COST.CNTR,CONO:EMP.COST.CNTR ELSE MAT 
1089 END                                                                END
1090                                                                 >  *T25568 v
1091                                                                 >  *
1092                                                                 >  *--- FIGURE THE AVAIABLE VACATION HOURS
1093                                                                 >  *
1094                                                                 >  TODAY = DATE()

1095                                                                 >  VAC.BAL = ''
1096                                                                 >  SETINDEX 'EMP.NO',CONO:EMP.NO ON VACATION.TRANS
1097                                                                 >  80001 *
1098                                                                 >  READFWD TMP FROM VACATION.TRANS THEN
1099                                                                 >  EMP.ID = FIELD(@ID,'!',1)
1100                                                                 >  IF EMP.ID # CONO:EMP.NO THEN GOTO 80002
1101                                                                 >  TRAN.DATE = FIELD(@ID,'!',2)

1102                                                                 >  IF TRAN.DATE GT TODAY THEN GOTO 80002
1103                                                                 >  MATREAD VAC.TRANS.REC FROM VACATION.TRANS, @ID ELSE MAT VAC.
1104                                                                 >  VAC.BAL = VAC.BAL + (VT.VAC.EARN - VT.PAID.VAC)
1105                                                                 >  GOTO 80001
1106                                                                 >  END
1107                                                                 >  80002 *
1108                                                                 >  *T25568 ^

1140 SCV.REC(34)<SN>=EMP.RATE                                           SCV.REC(34)<SN>=EMP.RATE
1141 SCV.REC(35)<SN>=EMP.ALT.NO                                         SCV.REC(35)<SN>=EMP.ALT.NO
1142 SCV.REC(36)<SN>=EMP.MAX.SIC                                        SCV.REC(36)<SN>=EMP.MAX.SIC
1143 SCV.REC(37)<SN>=EMP.MAX.SIC - INT((SUM(QTD.SCK.HRS) + .05) / 1     SCV.REC(37)<SN>=EMP.MAX.SIC - INT((SUM(QTD.SCK.HRS) + .05) /
1144 SCV.REC(38)<SN>=EMP.MAX.VAC                                        SCV.REC(38)<SN>=EMP.MAX.VAC
1145 SCV.REC(39)<SN>=EMP.MAX.VAC - INT((SUM(QTD.VAC.HRS) + .05) / 1  |  *T25568 v
1146                                                                 >  *     SCV.REC(39)<SN>=EMP.MAX.VAC - INT((SUM(QTD.VAC.HRS) + 
1147                                                                 >  SCV.REC(39)<SN>=VAC.BAL
1148                                                                 >  *T25568 ^
1149 SCV.REC(40)<SN>=EMP.STRT.DATE                                      SCV.REC(40)<SN>=EMP.STRT.DATE

1175 RETURN                                                             RETURN
1176 * ERROR ROUTINE                                                    * ERROR ROUTINE
1177 91000 PRINT @(0,23):MSG:CL:;INPUT REP,1:;PRINT @(0):CL:;RETURN     91000 PRINT @(0,23):MSG:CL:;INPUT REP,1:;PRINT @(0):CL:;RETU
1178 92000 PRINT @(0,23):MSG:' FILE IS MISSING':CL:;INPUT REP,1:        92000 PRINT @(0,23):MSG:' FILE IS MISSING':CL:;INPUT REP,1:
1179 99999 PRINT CS:                                                    99999 PRINT CS:
1180 *T25236 v                                                       <  
1181 PC.PORT.TYPE = PC.PORT.TYPE.SAVE                                <  
1182 PC.PORT.TSEL = PC.PORT.TSEL.SAVE                                <  
1183 *T25236 ^                                                       <  
1184 END                                                                END


EP4BP/EP4.EMPLOYEE.MAINT2                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EP4.EMPLOYEE.MAINT2
Printed for thompson at 06/28/2006 04:24:38PM

0010 *                                                                  *
0011 * CSF 26104                                                        * CSF 26104
0012 *T20960 lanny 09/09/1996 * Problem with WORK.SHIFT entry/scrol     *T20960 lanny 09/09/1996 * Problem with WORK.SHIFT entry/scr
0013 *T22154 renee 08/18/1997 * Transferring changes made to this p     *T22154 renee 08/18/1997 * Transferring changes made to this
0014 *                          Rev10b to Rev11.                        *                          Rev10b to Rev11.
0015 *T25978 adelgado 03/07/2002 * Add the use of prompts (S,SR,SB,  |  *T24102 markt 10/25/1999 * Expand the shift code to 2 digits
0016                                                                 >  *T25350 cm 08/25/2000 * Allow entry to Non-Primac employee's
0017                                                                 >  *T25439 cm 10/16/2000 * Add base hours field.
0018                                                                 >  *C37314 cm 11/03/2000 * Non-Primac employee's need to be abl
0019                                                                 >  *                       the annualized income.

0020                                                                 >  *T25549 cm 12/19/2000 * Recalculate the annualized income wh
0021                                                                 >  *                       is changed.
0022                                                                 >  *C38122 cm 07/10/2001 * The current effective rates and date
0023                                                                 >  *                       checked to get the correct rate.
0024                                                                 >  *ENDDOC
0025 *-------------------------------------------------------------     *-----------------------------------------------------------
0026 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1

0075 IF VAL='END' THEN GOTO 490                                         IF VAL='END' THEN GOTO 490
0076 VN=1;GOSUB 6000                                                    VN=1;GOSUB 6000
0077 END ELSE                                                           END ELSE
0078 FOR AN=9 TO 21;ACT=5;VN2=VN;CALL SCRN.EDIT;VN=VN2;NEXT AN          FOR AN=9 TO 21;ACT=5;VN2=VN;CALL SCRN.EDIT;VN=VN2;NEXT AN
0079 VN=1                                                               VN=1
0080                                                                 >  *T25439 v
0081                                                                 >  ACT=5;AN=51;VN2=51;CALL SCRN.EDIT
0082                                                                 >  VN=1
0083                                                                 >  *T25439 ^
0084 AN=30;CALL SCROLL.SUB                                              AN=30;CALL SCROLL.SUB

0093 BEGIN CASE                                                         BEGIN CASE
0094 CASE OPT=1;AN=9;GOSUB 1000                                         CASE OPT=1;AN=9;GOSUB 1000
0095 CASE OPT=2;AN=10;GOSUB 1000                                        CASE OPT=2;AN=10;GOSUB 1000
0096 CASE OPT=3;AN=13;GOSUB 1000                                        CASE OPT=3;AN=13;GOSUB 1000
0097 CASE OPT=4;AN=14;GOSUB 1000                                        CASE OPT=4;AN=14;GOSUB 1000
0098 CASE OPT=5;AN=16;GOSUB 1000                                     |  *T25549 v
0099 CASE OPT=6;AN=17;GOSUB 1000                                     |  *        CASE OPT=5;AN=16;GOSUB 1000
0100                                                                 >  CASE OPT=5
0101                                                                 >  AN=16
0102                                                                 >  GOSUB 1000

0103                                                                 >  SCV.REC(17)<SN> = SCV.REC(51)<SN> * OCONV(SCV.REC(16)<SN>,'M
0104                                                                 >  AN = 17 ; ACT = 5
0105                                                                 >  CALL SCRN.EDIT
0106                                                                 >  *T25549 ^
0107                                                                 >  *T25439 v
0108                                                                 >  *        CASE OPT=6;AN=17;GOSUB 1000
0109                                                                 >  CASE OPT=6 AND EMP.STATUS = 'S'

0110                                                                 >  AN=17
0111                                                                 >  GOSUB 1000
0112                                                                 >  CASE OPT=6 AND EMP.STATUS = 'H'
0113                                                                 >  AN=51;GOSUB 1000
0114                                                                 >  *C37314 v
0115                                                                 >  CASE OPT=6 AND EMP.STATUS = 'N'
0116                                                                 >  AN=17;GOSUB 1000

0117                                                                 >  *C37314 ^
0118                                                                 >  *T25439 ^
0119 CASE OPT=7;AN=18;GOSUB 1000                                        CASE OPT=7;AN=18;GOSUB 1000
0120 CASE OPT=8 AND EMP.STATUS = 'S'                                    CASE OPT=8 AND EMP.STATUS = 'S'
0121 MSG='INVALID FIELD FOR SALARIED EMPLOYEE'                          MSG='INVALID FIELD FOR SALARIED EMPLOYEE'
0122 GOSUB 9300                                                         GOSUB 9300
0123 AN=19;GOSUB 1000                                                   AN=19;GOSUB 1000

0127 CASE OPT='END' OR OPT='E';MORE=0                                   CASE OPT='END' OR OPT='E';MORE=0
0128 CASE OPT='S'                                                       CASE OPT='S'
0129 VN=(PN*LCNT)+1                                                     VN=(PN*LCNT)+1
0130 IF SCV.REC(FAN)<SN,VN>='' THEN VN=1 ELSE VN=(PN*LCNT)+1            IF SCV.REC(FAN)<SN,VN>='' THEN VN=1 ELSE VN=(PN*LCNT)+1
0131 AN=FAN;CALL SCROLL.SUB;PN=INT((VN-1)/LCNT)+1                       AN=FAN;CALL SCROLL.SUB;PN=INT((VN-1)/LCNT)+1
0132 * T25978 v                                                      <  
0133 CASE OPT='SR'                                                   <  
0134 VN=((PN-1)*LCNT)+1                                              <  
0135 VN -= LCNT                                                      <  
0136 IF VN < 1 THEN VN = 1                                           <  

0137 AN=FAN;CALL SCROLL.SUB;PN=INT((VN-1)/LCNT)+1                    <  
0138 CASE OPT='SB'                                                   <  
0139 TMP.CNT = DCOUNT(SCV.REC(FAN)<SN>,VM)                           <  
0140 VN = 1 + INT((TMP.CNT-1)/LCNT)*LCNT                             <  
0141 AN=FAN;CALL SCROLL.SUB;PN=INT((VN-1)/LCNT)+1                    <  
0142 CASE OPT='ST'                                                   <  
0143 VN =1                                                           <  

0144 AN=FAN;CALL SCROLL.SUB;PN=INT((VN-1)/LCNT)+1                    <  
0145 * T25978 ^                                                      <  
0146 CASE OPT='A'                                                       CASE OPT='A'
0147 GOSUB 6000                                                         GOSUB 6000
0148 CASE OPT='C'                                                       CASE OPT='C'
0149 LVN=DCOUNT(SCV.REC(FAN)<SN>,VM)                                    LVN=DCOUNT(SCV.REC(FAN)<SN>,VM)
0150 PMSG='Line';X=0;Y=21;TYP=3;MINV=1;MAXV=LVN                         PMSG='Line';X=0;Y=21;TYP=3;MINV=1;MAXV=LVN

0186 GOSUB 7500                                                         GOSUB 7500
0187 RETURN                                                             RETURN
0188 *-------------------------------------------------------------     *-----------------------------------------------------------
0189 1000  * EDIT                                                       1000  * EDIT
0190 *-------------------------------------------------------------     *-----------------------------------------------------------
0191                                                                 >  *T25350 v
0192                                                                 >  IF EMP.STATUS = 'N' AND EMP.PAY.CYCLE = 'N' THEN
0193 BEGIN CASE                                                         BEGIN CASE
0194                                                                 >  CASE AN = 9
0195                                                                 >  NULL

0196                                                                 >  CASE AN = 17
0197                                                                 >  NULL
0198                                                                 >  CASE 1
0199                                                                 >  RETURN
0200                                                                 >  END CASE
0201                                                                 >  END
0202                                                                 >  *T25350 ^

0203                                                                 >  BEGIN CASE
0204 CASE AN=17 AND EMP.STATUS='S'                                      CASE AN=17 AND EMP.STATUS='S'
0205 PC="W}B}S}M";PC<2>="52}26}24}12"                                   PC="W}B}S}M";PC<2>="52}26}24}12"
0206 LOCATE EMP.PAY.CYCLE IN PC<1> SETTING Z THEN                       LOCATE EMP.PAY.CYCLE IN PC<1> SETTING Z THEN
0207 SCV.REC(AN)<SN>=PC<2,Z>*EMP.SALARY                                 SCV.REC(AN)<SN>=PC<2,Z>*EMP.SALARY
0208 VN2=VN                                                             VN2=VN
0209 ACT=5;CALL SCRN.EDIT;VN=VN2;RETURN                                 ACT=5;CALL SCRN.EDIT;VN=VN2;RETURN

0214 AN=19;ACT=5;CALL SCRN.EDIT                                         AN=19;ACT=5;CALL SCRN.EDIT
0215 VN=VN2                                                             VN=VN2
0216 AN=20;ACT=5;CALL SCRN.EDIT                                         AN=20;ACT=5;CALL SCRN.EDIT
0217 VN=VN2                                                             VN=VN2
0218 RETURN                                                             RETURN
0219                                                                 >  *T25439 v
0220                                                                 >  CASE AN=17 AND EMP.STATUS = 'H'
0221                                                                 >  AN=51
0222                                                                 >  CASE AN=51 AND EMP.STATUS = 'S'
0223                                                                 >  RETURN

0224                                                                 >  *T25439 ^
0225 END CASE                                                           END CASE
0226 *-------------------------------------------------------------     *-----------------------------------------------------------
0227 VN2=VN                                                             VN2=VN
0228 ACT=4;CALL SCRN.EDIT                                               ACT=4;CALL SCRN.EDIT
0229 VN=VN2                                                             VN=VN2
0230 IF VAL # 'END' THEN                                                IF VAL # 'END' THEN

0230 IF VAL # 'END' THEN                                                IF VAL # 'END' THEN
0231 BEGIN CASE                                                         BEGIN CASE
0232 CASE AN=10                                                         CASE AN=10
0233 IF SCV.REC(10)<SN>='' THEN                                         IF SCV.REC(10)<SN>='' THEN
0234 CHG=0                                                              CHG=0
0235 * CSF 26104 v                                                   <  
0236 WSSNUM = 0                                                         WSSNUM = 0
0237 FOR I = 9 TO 1 STEP -1                                          |  FOR I = 99 TO 1 STEP -1
0238 IF WRK.SCHD<1,I>#'' THEN                                           IF WRK.SCHD<1,I>#'' THEN
0239 SCV.REC(10)<SN>=I;AN=10;ACT=5;CALL SCRN.EDIT                       SCV.REC(10)<SN>=I;AN=10;ACT=5;CALL SCRN.EDIT

0238 IF WRK.SCHD<1,I>#'' THEN                                           IF WRK.SCHD<1,I>#'' THEN
0239 SCV.REC(10)<SN>=I;AN=10;ACT=5;CALL SCRN.EDIT                       SCV.REC(10)<SN>=I;AN=10;ACT=5;CALL SCRN.EDIT
0240 WSSNUM = WSSNUM + 1                                                WSSNUM = WSSNUM + 1
0241 END                                                                END
0242 NEXT I                                                             NEXT I
0243 *  WSSNUM = COUNT(EMP.WRK.SCHD,VM) + (EMP.WRK.SCHD#'')          <  
0244 IF WSSNUM > 1 THEN PRINT @(77,5):"**":                             IF WSSNUM > 1 THEN PRINT @(77,5):"**":
0245 IF WSSNUM <= 1 THEN PRINT @(77,5):"  ":                            IF WSSNUM <= 1 THEN PRINT @(77,5):"  ":
0246 *  FOR X=1 TO 9                                                 <  
0247 *     IF WRK.SCHD<1,X>#'' THEN                                  <  

0248 *  SCV.REC(10)<SN>=X;AN=10;ACT=5;CALL SCRN.EDIT;GOTO 1010       <  
0249 *     END                                                       <  
0250 *  NEXT X                                                       <  
0251 * CSF 26104 ^                                                   <  
0252 RETURN                                                             RETURN
0253 END                                                                END
0254 CHG=1                                                              CHG=1

0271 SCV.REC(AN)<SN>='';ACT=5;CALL SCRN.EDIT                            SCV.REC(AN)<SN>='';ACT=5;CALL SCRN.EDIT
0272 VN=VN2                                                             VN=VN2
0273 NEXT AN                                                            NEXT AN
0274 AN=11;GOTO 1000                                                    AN=11;GOTO 1000
0275 END                                                                END
0276 * T20960 WRK.SCHD<1,SCV.REC(10)<SN>>=SCV.REC(11)<SN>            <  
0277 IF WSS.PAY.CYCLE # SCV.REC(32)<1> THEN                             IF WSS.PAY.CYCLE # SCV.REC(32)<1> THEN
0278 MSG='* * PAY.CYCLE OF EMPLOYEE DOES NOT MATCH WORK SHIFT'          MSG='* * PAY.CYCLE OF EMPLOYEE DOES NOT MATCH WORK SHIFT'
0279 GOSUB 9100                                                         GOSUB 9100
0280 FOR AN = 11 TO 12                                                  FOR AN = 11 TO 12

0317 MATREAD JCC.REC FROM JOB.CLASS,CONO:SCV.REC(14)<SN> ELSE           MATREAD JCC.REC FROM JOB.CLASS,CONO:SCV.REC(14)<SN> ELSE
0318 MSG='* * INVALID JOB CLASS * *';GOSUB 9100                         MSG='* * INVALID JOB CLASS * *';GOSUB 9100
0319 AN=14;GOTO 1000                                                    AN=14;GOTO 1000
0320 END                                                                END
0321 VN2=VN                                                             VN2=VN
0322                                                                 >  *C38122 v
0323                                                                 >  JCC.ID = SCV.REC(14)<SN> ; GOSUB 8000
0324                                                                 >  *C38122 ^
0325 SCV.REC(15)<SN>=JCC.DESC;AN=15;ACT=5;CALL SCRN.EDIT                SCV.REC(15)<SN>=JCC.DESC;AN=15;ACT=5;CALL SCRN.EDIT
0326 VN=VN2                                                             VN=VN2

0327 PRINT @(0,23):CL:"DO YOU WANT TO CHANGE RATE TO STANDARD ":OCO     PRINT @(0,23):CL:"DO YOU WANT TO CHANGE RATE TO STANDARD ":O
0328 INPUT RESP:                                                        INPUT RESP:
0329 IF RESP = "Y" THEN SCV.REC(16)<SN>=JCC.RATE;AN=16;ACT=5;CALL S  |  *T25549 v
0330                                                                 >  *           IF RESP = "Y" THEN SCV.REC(16)<SN>=JCC.RATE;AN=1
0331                                                                 >  IF RESP = 'Y' THEN
0332                                                                 >  SCV.REC(16)<SN> = JCC.RATE
0333                                                                 >  AN = 16 ; ACT = 5
0334                                                                 >  CALL SCRN.EDIT
0335                                                                 >  SCV.REC(17)<SN> = SCV.REC(51)<SN> * OCONV(SCV.REC(16)<SN>,'M

0336                                                                 >  AN = 17 ;ACT = 5
0337                                                                 >  CALL SCRN.EDIT
0338                                                                 >  END
0339                                                                 >  *T25549 ^
0340 PRINT @(0,23):CL:                                                  PRINT @(0,23):CL:
0341 CASE AN=19                                                         CASE AN=19
0342 IF SCV.REC(AN)<SN>=0 THEN                                          IF SCV.REC(AN)<SN>=0 THEN

0355 SCV.REC(AN)<SN,VN>='';ACT=5;CALL SCRN.EDIT                         SCV.REC(AN)<SN,VN>='';ACT=5;CALL SCRN.EDIT
0356 VN=VN2                                                             VN=VN2
0357 NEXT AN                                                            NEXT AN
0358 AN=31;GOTO 1000                                                    AN=31;GOTO 1000
0359 END                                                                END
0360                                                                 >  *C38122 v
0361                                                                 >  JCC.ID = SCV.REC(31)<SN,VN> ; GOSUB 8000
0362                                                                 >  *C38122 ^
0363 IF SCV.REC(31)<SN,VN> = SCV.REC(14)<SN> THEN                       IF SCV.REC(31)<SN,VN> = SCV.REC(14)<SN> THEN
0364 MSG="* * THIS IS THE EMPLOYEE'S HOME JOB CLASS * *";GOSUB 9100     MSG="* * THIS IS THE EMPLOYEE'S HOME JOB CLASS * *";GOSUB 91

0404 END                                                                END
0405 END                                                                END
0406 NEXT GV                                                            NEXT GV
0407 VAL='END'                                                          VAL='END'
0408 END                                                                END
0409                                                                 >  *T25439 v
0410                                                                 >  CASE AN = 51
0411                                                                 >  SCV.REC(51)<SN> = VAL
0412                                                                 >  SCV.REC(17)<SN> = VAL * OCONV(SCV.REC(16)<SN>,'MD4') * 100
0413                                                                 >  AN=17;ACT=5;CALL SCRN.EDIT

0414                                                                 >  *T25439 ^
0415 END CASE                                                           END CASE
0416 END                                                                END
0417 *T20960 v                                                          *T20960 v
0418 IF (VAL = 'END' AND AN = 10) OR (VAL = '' AND AN = 10) THEN  ;     IF (VAL = 'END' AND AN = 10) OR (VAL = '' AND AN = 10) THEN 
0419 FOR SPTR = 1 TO 9 UNTIL WRK.SCHD<1,SPTR> # ''; NEXT SPTR        |  * T24102 EXPAND LIMIT TO 99 v
0420 IF SPTR > 1 THEN  SPTR = SPTR - 1   ; * T22154                  |  FOR SPTR = 1 TO 99 UNTIL WRK.SCHD<1,SPTR> # ''; NEXT SPTR

0421                                                                 >  * T24102    IF SPTR > 1 THEN  SPTR = SPTR - 1   ; * T22154
0422 MATREAD WSS.REC FROM WORK.SHIFT,CONO:'!':WRK.SCHD<1,SPTR> THEN     MATREAD WSS.REC FROM WORK.SHIFT,CONO:'!':WRK.SCHD<1,SPTR> TH
0423 SCV.REC(10)<SN> = SPTR                                             SCV.REC(10)<SN> = SPTR
0424 SCV.REC(11)<SN> = WRK.SCHD<1,SPTR>                                 SCV.REC(11)<SN> = WRK.SCHD<1,SPTR>
0425 SCV.REC(12)<SN> = WSS.DESC[1,25]                                   SCV.REC(12)<SN> = WSS.DESC[1,25]
0426 FOR II = 10 TO 12; AN = II; ACT=5; CALL SCRN.EDIT; NEXT II         FOR II = 10 TO 12; AN = II; ACT=5; CALL SCRN.EDIT; NEXT II
0427 WSSNUM = 0                                                         WSSNUM = 0

0428 FOR I = 9 TO 1 STEP -1                                          |  * T24102 EXPAND LIMIT TO 99 v
0429                                                                 >  FOR I = 99 TO 1 STEP -1
0430 IF WRK.SCHD<1,I>#'' THEN                                           IF WRK.SCHD<1,I>#'' THEN
0431 WSSNUM = WSSNUM + 1                                                WSSNUM = WSSNUM + 1
0432 END                                                                END
0433 NEXT I                                                             NEXT I
0434 IF WSSNUM > 1 THEN PRINT @(77,5):"**":                             IF WSSNUM > 1 THEN PRINT @(77,5):"**":

0439 *T20960 ^                                                          *T20960 ^
0440 RETURN                                                             RETURN
0441 *-------------------------------------------------------------     *-----------------------------------------------------------
0442 6000  * ADD MODE                                                   6000  * ADD MODE
0443 *-------------------------------------------------------------     *-----------------------------------------------------------
0444                                                                 >  *T25350 v
0445                                                                 >  IF EMP.STATUS = 'N' AND EMP.PAY.CYCLE = 'N' THEN RETURN
0446                                                                 >  *T25350 ^
0447 LVN=DCOUNT(SCV.REC(FAN)<SN>,VM);VN=LVN;PPN=PN                      LVN=DCOUNT(SCV.REC(FAN)<SN>,VM);VN=LVN;PPN=PN
0448 LOOP UNTIL VAL='END' DO                                            LOOP UNTIL VAL='END' DO

0483 *-------------------------------------------------------------     *-----------------------------------------------------------
0484 V=0;WRK.SCHD=EMP.WRK.SCHD                                          V=0;WRK.SCHD=EMP.WRK.SCHD
0485 * CSF 26104 v                                                      * CSF 26104 v
0486 *     LOOP V=V+1 UNTIL WRK.SCHD<1,V>#'' OR V=10 DO REPEAT          *     LOOP V=V+1 UNTIL WRK.SCHD<1,V>#'' OR V=10 DO REPEAT
0487 WSSCNT = 0                                                         WSSCNT = 0
0488 FOR I = 9 TO 1 STEP -1                                          |  * T24102 EXPAND LIMIT TO 99 v
0489                                                                 >  FOR I = 99 TO 1 STEP -1
0490 IF WRK.SCHD<1,I>#'' THEN                                           IF WRK.SCHD<1,I>#'' THEN
0491 V=I                                                                V=I
0492 WSSCNT = WSSCNT + 1                                                WSSCNT = WSSCNT + 1

0515 LOCATE EMP.PAY.CYCLE IN PC<1> SETTING Z THEN                       LOCATE EMP.PAY.CYCLE IN PC<1> SETTING Z THEN
0516 EMP.ANN.INC=PC<2,Z>*INT(EMP.JOB.CL.RATE/100)                       EMP.ANN.INC=PC<2,Z>*INT(EMP.JOB.CL.RATE/100)
0517 END                                                                END
0518 END                                                                END
0519 SCV.REC(17)<SN>=EMP.ANN.INC                                        SCV.REC(17)<SN>=EMP.ANN.INC
0520                                                                 >  SCV.REC(51)<SN>=EMP.BASE.HOURS ; * T25439
0521 SCV.REC(18)<SN>=EMP.HOL.DATE                                       SCV.REC(18)<SN>=EMP.HOL.DATE
0522 SCV.REC(19)<SN>=EMP.SSP                                            SCV.REC(19)<SN>=EMP.SSP
0523 SCV.REC(20)<SN>=EMP.SSP.MET                                        SCV.REC(20)<SN>=EMP.SSP.MET
0524 SCV.REC(21)<SN>=EMP.OVT                                            SCV.REC(21)<SN>=EMP.OVT

0538 7500  * ASSIGN SCV.REC TO EMP.REC                                  7500  * ASSIGN SCV.REC TO EMP.REC
0539 *-------------------------------------------------------------     *-----------------------------------------------------------
0540 IF NEW.FLG='N' THEN                                                IF NEW.FLG='N' THEN
0541 TRAN.TYPE=3                                                        TRAN.TYPE=3
0542 DESC='F/P TIME';OLD=EMP.K.NUM;NEW=SCV.REC(9)<SN>;GOSUB 9000        DESC='F/P TIME';OLD=EMP.K.NUM;NEW=SCV.REC(9)<SN>;GOSUB 9000
0543 FOR I=1 TO 9                                                    |  * T24102 EXPAND LIMIT TO 99 v
0544                                                                 >  FOR I=1 TO 99
0545 DESC='WRK.SCHD#':I;OLD=EMP.WRK.SCHD<1,I>                           DESC='WRK.SCHD#':I;OLD=EMP.WRK.SCHD<1,I>
0546 NEW=WRK.SCHD<1,I>;GOSUB 9000                                       NEW=WRK.SCHD<1,I>;GOSUB 9000
0547 NEXT I                                                             NEXT I

0547 NEXT I                                                             NEXT I
0548 DESC='NORM.SHFT';OLD=EMP.NORM.SHFT;NEW=SCV.REC(13)<SN>;GOSUB 9     DESC='NORM.SHFT';OLD=EMP.NORM.SHFT;NEW=SCV.REC(13)<SN>;GOSUB
0549 DESC='JOB.CLASS';OLD=EMP.JOB.CLASS;NEW=SCV.REC(14)<SN>;GOSUB 9     DESC='JOB.CLASS';OLD=EMP.JOB.CLASS;NEW=SCV.REC(14)<SN>;GOSUB
0550 DESC='JOB.CL.RATE';OLD=EMP.JOB.CL.RATE;NEW=SCV.REC(16)<SN>;GOS     DESC='JOB.CL.RATE';OLD=EMP.JOB.CL.RATE;NEW=SCV.REC(16)<SN>;G
0551 DESC='ANN.INC';OLD=EMP.ANN.INC;NEW=SCV.REC(17)<SN>                 DESC='ANN.INC';OLD=EMP.ANN.INC;NEW=SCV.REC(17)<SN>
0552                                                                 >  DESC='BASE.HOURS';OLD=EMP.BASE.HOURS;NEW=SCV.REC(51)<SN> ; *
0553 OLD=OCONV(OLD,'MD2');NEW=OCONV(NEW,'MD2');GOSUB 9000               OLD=OCONV(OLD,'MD2');NEW=OCONV(NEW,'MD2');GOSUB 9000
0554 DESC='HOL.DATE';OLD=EMP.HOL.DATE;NEW=SCV.REC(18)<SN>               DESC='HOL.DATE';OLD=EMP.HOL.DATE;NEW=SCV.REC(18)<SN>
0555 OLD=OCONV(OLD,'D2/');NEW=OCONV(NEW,'D2/');GOSUB 9000               OLD=OCONV(OLD,'D2/');NEW=OCONV(NEW,'D2/');GOSUB 9000
0556 DESC='SSP';OLD=EMP.SSP;NEW=SCV.REC(19)<SN>;GOSUB 9000              DESC='SSP';OLD=EMP.SSP;NEW=SCV.REC(19)<SN>;GOSUB 9000

0571 NEXT VN                                                            NEXT VN
0572 END                                                                END
0573 *-------------------------------------------------------------     *-----------------------------------------------------------
0574 EMP.K.NUM=SCV.REC(9)<SN>                                           EMP.K.NUM=SCV.REC(9)<SN>
0575 EMP.WRK.SCHD=WRK.SCHD                                              EMP.WRK.SCHD=WRK.SCHD
0576 FOR XX = 10 TO 1 STEP -1                                        |  * T24102 EXPAND LIMIT TO 99 v
0577                                                                 >  FOR XX = 99 TO 1 STEP -1
0578 IF EMP.WRK.SCHD<1,XX> # '' THEN GOTO 7505                          IF EMP.WRK.SCHD<1,XX> # '' THEN GOTO 7505
0579 IF EMP.WRK.SCHD<1,XX> = '' THEN DEL EMP.WRK.SCHD<1,XX>             IF EMP.WRK.SCHD<1,XX> = '' THEN DEL EMP.WRK.SCHD<1,XX>
0580 NEXT XX                                                            NEXT XX

0583 EMP.JOB.CLASS=SCV.REC(14)<SN>                                      EMP.JOB.CLASS=SCV.REC(14)<SN>
0584 EMP.JOB.CL.RATE=SCV.REC(16)<SN>                                    EMP.JOB.CL.RATE=SCV.REC(16)<SN>
0585 IF SCV.REC(31)<1> = "H" THEN EMP.RATE=SCV.REC(16)<SN>;SCV.REC(     IF SCV.REC(31)<1> = "H" THEN EMP.RATE=SCV.REC(16)<SN>;SCV.RE
0586 IF SCV.REC(31)<1> = "S" THEN EMP.SALARY=INT(SCV.REC(16)<SN>/10     IF SCV.REC(31)<1> = "S" THEN EMP.SALARY=INT(SCV.REC(16)<SN>/
0587 EMP.ANN.INC=SCV.REC(17)<SN>                                        EMP.ANN.INC=SCV.REC(17)<SN>
0588                                                                 >  EMP.BASE.HOURS=SCV.REC(51)<SN> ; * T25439
0589 EMP.HOL.DATE=SCV.REC(18)<SN>                                       EMP.HOL.DATE=SCV.REC(18)<SN>
0590 EMP.SSP=SCV.REC(19)<SN>                                            EMP.SSP=SCV.REC(19)<SN>
0591 EMP.SSP.MET=SCV.REC(20)<SN>                                        EMP.SSP.MET=SCV.REC(20)<SN>
0592 EMP.OVT=SCV.REC(21)<SN>                                            EMP.OVT=SCV.REC(21)<SN>

0591 EMP.SSP.MET=SCV.REC(20)<SN>                                        EMP.SSP.MET=SCV.REC(20)<SN>
0592 EMP.OVT=SCV.REC(21)<SN>                                            EMP.OVT=SCV.REC(21)<SN>
0593 EMP.VALID.CLASS=SCV.REC(31)<SN>                                    EMP.VALID.CLASS=SCV.REC(31)<SN>
0594 EMP.VAL.CL.RATE=SCV.REC(33)<SN>                                    EMP.VAL.CL.RATE=SCV.REC(33)<SN>
0595 RETURN                                                             RETURN
0596                                                                 >  *C38122 v
0597                                                                 >  *-----------------------------------------------------------
0598                                                                 >  8000  * CHECK AND UPDATE JOB.CLASS FILE WHEN NEEDED
0599                                                                 >  *-----------------------------------------------------------
0600                                                                 >  JFLAG = ''

0601                                                                 >  8001 *
0602                                                                 >  JCNT = DCOUNT(JCC.EFF.DATE<1>,VM)
0603                                                                 >  FOR J = 1 TO JCNT
0604                                                                 >  IF JCC.EFF.DATE<1,J> GT DATE() THEN NULL ELSE
0605                                                                 >  JCC.RATE = JCC.EFF.RATE<1,J>
0606                                                                 >  JCC.EFF.DATE = DELETE(JCC.EFF.DATE,1,J,0)
0607                                                                 >  JCC.EFF.RATE = DELETE(JCC.EFF.RATE,1,J,0)

0608                                                                 >  JFLAG = 1
0609                                                                 >  GOTO 8001
0610                                                                 >  END
0611                                                                 >  NEXT J
0612                                                                 >  IF JFLAG THEN MATWRITE JCC.REC ON JOB.CLASS, CONO:JCC.ID
0613                                                                 >  RETURN
0614                                                                 >  *C38122 ^


EP4BP/EP4.PAYCALC                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EP4.PAYCALC
Printed for thompson at 06/28/2006 04:24:38PM

0024 *T21641 lanny 02/26/1997 * Error in calc of FICA using OTHER-I     *T21641 lanny 02/26/1997 * Error in calc of FICA using OTHER
0025 *                          non-taxable type.                       *                          non-taxable type.
0026 *T21795 lanny 04/11/1997 * Employee FWT override not taking BE     *T21795 lanny 04/11/1997 * Employee FWT override not taking 
0027 *                          deductions into account.                *                          deductions into account.
0028 *T21824 lanny 04/18/1997 * Set the process status in header to     *T21824 lanny 04/18/1997 * Set the process status in header 
0029 *T28928 lross 06/07/2006 * Need to back out NON-TAX Fed dedn w  |  *T23608 cm 10/29/1999 * Create ADPREG records to be transfer
0030 *                          insufficient earnings.               |  *C35849 cm 03/07/2000 * Non taxed amounts not showing up on 
0031                                                                 >  *                       and negative amounts goint to ADP fi
0032                                                                 >  *T25570 cm 01/02/2001 * Capture the earnings by attendance c
0033                                                                 >  *T26246 cm 11/01/2001 * Expand 4 fields from 7 to 8 digits.

0034                                                                 >  *T26362 cmykleb 01/07/2002 * Add a new field to ADPREG file 
0035                                                                 >  *                            populate when the other code (O
0036                                                                 >  *                            used.
0037                                                                 >  *T26769 cmykleb 07/25/2002 * Add 2 new fields to ADPREG. Pen
0038                                                                 >  *                            back pay and Non-pensionable ba
0039                                                                 >  *T26830 cmykleb 08/29/2002 * Add 3 new fields to ADPREG.
0040                                                                 >  *T27338 cmykleb 03/12/2003 * Add a new field to the ADPREG r

0041                                                                 >  *T28009 cmykleb 04/01/2004 * Add a new field to the ADPREG r
0042                                                                 >  *T28287 cmykleb 10/26/2004 * If marital statusis blank make 
0043 **************************************************************     ************************************************************
0044 *                                                                  *
0045 *--- INSERT CPYLIB                                                 *--- INSERT CPYLIB
0046 *                                                                  *
0047 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY

0056 *COPY>PRS.CPYLIB>TAX2                                              *COPY>PRS.CPYLIB>TAX2
0057 *COPY>PRS.CPYLIB>MISCDED                                           *COPY>PRS.CPYLIB>MISCDED
0058 *COPY>PRS.CPYLIB>401K                                              *COPY>PRS.CPYLIB>401K
0059 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0060 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0061                                                                 >  *T23608 v
0062                                                                 >  *COPY>PRS.CPYLIB>PAY.CONTROL
0063                                                                 >  *COPY>CBN.CPYLIB>ADPREG
0064                                                                 >  *COPY>PRS.CPYLIB>WORK.SHIFT
0065                                                                 >  *T23608 ^

0088 OPEN "PETTY.CASH" TO PETTY.CASH ELSE PRINT "CAN'T OPEN PETTY.C     OPEN "PETTY.CASH" TO PETTY.CASH ELSE PRINT "CAN'T OPEN PETTY
0089 OPEN "MTH-UNION" TO MTH.UNION ELSE PRINT "CAN'T OPEN MTH-UNION     OPEN "MTH-UNION" TO MTH.UNION ELSE PRINT "CAN'T OPEN MTH-UNI
0090 OPEN "UNION" TO UNION ELSE PRINT "UNION FILE ZAP";INPUT R;STOP     OPEN "UNION" TO UNION ELSE PRINT "UNION FILE ZAP";INPUT R;ST
0091 OPEN "OTHER-INC" TO OTHER.INC ELSE PRINT "CAN'T OPEN OTHER-INC     OPEN "OTHER-INC" TO OTHER.INC ELSE PRINT "CAN'T OPEN OTHER-I
0092 OPEN "FICA.TABLE" TO FICA.TABLE ELSE PRINT "CAN'T OPEN FICA.TA     OPEN "FICA.TABLE" TO FICA.TABLE ELSE PRINT "CAN'T OPEN FICA.
0093                                                                 >  *T23608 v
0094                                                                 >  OPEN 'ADPREG' TO ADPREG ELSE PRINT "CAN'T OPEN ADPREG FILE";
0095                                                                 >  OPEN 'WORK.SHIFT' TO WORK.SHIFT ELSE PRINT 'CANNOT OPEN WORK
0096                                                                 >  *T23608 ^
0097 **** PROC READ                                                     **** PROC READ

0100 *                                                                  *
0101 *     CONO=BUFFER<1>                                               *     CONO=BUFFER<1>
0102 CONO=''                                                            CONO=''
0103 CALL GET.CONO(CONO, MAT COMP.REC)                                  CALL GET.CONO(CONO, MAT COMP.REC)
0104 MATREAD DC.REC FROM CONTROL,CONO:"401K" ELSE MAT DC.REC = ""       MATREAD DC.REC FROM CONTROL,CONO:"401K" ELSE MAT DC.REC = ""
0105 *                                                               |  *T23608 v
0106                                                                 >  MATREAD EPSC.REC FROM CONTROL,CONO:"PAY.CONTROL" ELSE
0107                                                                 >  MAT EPSC.REC = ""
0108                                                                 >  END
0109                                                                 >  *T23608 ^

0122 IF EMP.STATUS # "S" AND EMP.STATUS # "H" THEN                      IF EMP.STATUS # "S" AND EMP.STATUS # "H" THEN
0123 ERRMSG = "EMPLOYEE IS NOT SETUP CORRECTLY"                         ERRMSG = "EMPLOYEE IS NOT SETUP CORRECTLY"
0124 GOSUB 91000                                                        GOSUB 91000
0125 GOTO 100                                                           GOTO 100
0126 END                                                                END
0127                                                                 >  IF EMP.MAR.ST = "" THEN EMP.MAR.ST = "S" ; * T28287
0128 DED.CONO = ID[1,3]; DED.DEPT = EMP.DEPT; DED.EMP = ID[4,4]         DED.CONO = ID[1,3]; DED.DEPT = EMP.DEPT; DED.EMP = ID[4,4]
0129 DED.DIV = EMP.DIV                                                  DED.DIV = EMP.DIV
0130 DED.CCTR = EMP.COST.CNTR                                           DED.CCTR = EMP.COST.CNTR
0131 TOT.NON.TAX = 0                                                    TOT.NON.TAX = 0

0223 PAY.NON.TAXED = PAY.NON.TAXED + PAY.OTH.INC<1,Y1>                  PAY.NON.TAXED = PAY.NON.TAXED + PAY.OTH.INC<1,Y1>
0224 *T21641           TAXFICA = TAXFICA + OCONV(PAY.OTH.INC<1,Y1>,     *T21641           TAXFICA = TAXFICA + OCONV(PAY.OTH.INC<1,Y1
0225 END                                                                END
0226 IF TAXFLAG = "Y" THEN PAY.TAXED = PAY.TAXED + PAY.OTH.INC<1,Y1     IF TAXFLAG = "Y" THEN PAY.TAXED = PAY.TAXED + PAY.OTH.INC<1,
0227 END                                                                END
0228 105 NEXT Y1                                                     |  105 *
0229                                                                 >  *T25570 v
0230                                                                 >  ACNT = DCOUNT(PAY.ATTEND.CODE<1,Y1>,SM)
0231                                                                 >  FOR A = 1 TO ACNT
0232                                                                 >  ACODE = PAY.ATTEND.CODE<1,Y1,A>

0233                                                                 >  AHRS = PAY.ATTEND.HRS<1,Y1,A>
0234                                                                 >  BEGIN CASE
0235                                                                 >  CASE ACODE = EPSC.REG.OVT
0236                                                                 >  AEARN = AHRS * RATE * 1.5
0237                                                                 >  CASE ACODE = EPSC.REG.DBT
0238                                                                 >  AEARN = AHRS * RATE * 2
0239                                                                 >  CASE ACODE = EPSC.REG.TRP

0240                                                                 >  AEARN = AHRS * RATE * 3
0241                                                                 >  CASE ACODE = EPSC.NC.OVT
0242                                                                 >  AEARN = AHRS * RATE * 1.5
0243                                                                 >  CASE ACODE = EPSC.NC.DBT
0244                                                                 >  AEARN = AHRS * RATE * 2
0245                                                                 >  CASE ACODE = EPSC.NC.TRP
0246                                                                 >  AEARN = AHRS * RATE * 3

0247                                                                 >  CASE ACODE = 400
0248                                                                 >  AEARN = 0 ; * UNPAID ABSENCE
0249                                                                 >  CASE ACODE = 401
0250                                                                 >  AEARN = 0 ; * UNPAID ABSENCE
0251                                                                 >  CASE ACODE = 403
0252                                                                 >  AEARN = 0 ; * UNPAID ILLNESS
0253                                                                 >  CASE 1

0254                                                                 >  AEARN = AHRS * RATE
0255                                                                 >  END CASE
0256                                                                 >  AEARN = ICONV(AEARN,'MD2')
0257                                                                 >  AEARN = AEARN / 100
0258                                                                 >  AEARN = AEARN'MD0'
0259                                                                 >  PAY.ATTEND.EARN<1,Y1,A> = AEARN
0260                                                                 >  NEXT A

0261                                                                 >  *T25570 ^
0262                                                                 >  NEXT Y1
0263 TAXPAY=TAXPAY+OCONV(PAY.TAXED,"MD2")                               TAXPAY=TAXPAY+OCONV(PAY.TAXED,"MD2")
0264 *T21641 v TAXFICA=TAXPAY-TAXFICA;*1* TAXFICA=TAXABLEGROSS - SI     *T21641 v TAXFICA=TAXPAY-TAXFICA;*1* TAXFICA=TAXABLEGROSS - 
0265 TAXFICA=TAXPAY+OCONV(PAY.NON.TAXED,'MD2')                          TAXFICA=TAXPAY+OCONV(PAY.NON.TAXED,'MD2')
0266 *        GROSS=TAXPAY                                              *        GROSS=TAXPAY
0267 GROSS=TAXPAY+OCONV(PAY.NON.TAXED,'MD2')                            GROSS=TAXPAY+OCONV(PAY.NON.TAXED,'MD2')

0335 PAY.NON.TAXED = PAY.NON.TAXED + PAY.OTH.INC<1,Y1>                  PAY.NON.TAXED = PAY.NON.TAXED + PAY.OTH.INC<1,Y1>
0336 *T21641           TAXFICA = TAXFICA + OCONV(PAY.OTH.INC<1,Y1>,     *T21641           TAXFICA = TAXFICA + OCONV(PAY.OTH.INC<1,Y1
0337 END                                                                END
0338 IF TAXFLAG = "Y" THEN PAY.TAXED = PAY.TAXED + PAY.OTH.INC<1,Y1     IF TAXFLAG = "Y" THEN PAY.TAXED = PAY.TAXED + PAY.OTH.INC<1,
0339 END                                                                END
0340 108 NEXT Y1                                                     |  108 *
0341                                                                 >  *T25570 v
0342                                                                 >  ACNT = DCOUNT(PAY.ATTEND.CODE<1,Y1>,SM)
0343                                                                 >  FOR A = 1 TO ACNT
0344                                                                 >  ACODE = PAY.ATTEND.CODE<1,Y1,A>

0345                                                                 >  AHRS = PAY.ATTEND.HRS<1,Y1,A>
0346                                                                 >  BEGIN CASE
0347                                                                 >  CASE ACODE = EPSC.REG.OVT
0348                                                                 >  AEARN = AHRS * OTRATE * 1.5
0349                                                                 >  CASE ACODE = EPSC.REG.DBT
0350                                                                 >  AEARN = AHRS * OTRATE * 2
0351                                                                 >  CASE ACODE = EPSC.REG.TRP

0352                                                                 >  AEARN = AHRS * OTRATE * 3
0353                                                                 >  CASE ACODE = EPSC.NC.OVT
0354                                                                 >  AEARN = AHRS * OTRATE * 1.5
0355                                                                 >  CASE ACODE = EPSC.NC.DBT
0356                                                                 >  AEARN = AHRS * OTRATE * 2
0357                                                                 >  CASE ACODE = EPSC.NC.TRP
0358                                                                 >  AEARN = AHRS * OTRATE * 3

0359                                                                 >  CASE 1
0360                                                                 >  AEARN = AHRS * RATE
0361                                                                 >  END CASE
0362                                                                 >  AEARN = ICONV(AEARN,'MD2')
0363                                                                 >  AEARN = AEARN / 100
0364                                                                 >  PAY.ATTEND.EARN<1,Y1,A> = AEARN
0365                                                                 >  NEXT A

0366                                                                 >  *T25570 ^
0367                                                                 >  NEXT Y1
0368 TAXPAY=TAXPAY+OCONV(PAY.TAXED,"MD2")                               TAXPAY=TAXPAY+OCONV(PAY.TAXED,"MD2")
0369 *T21641 v                                                          *T21641 v
0370 *        TAXFICA=TAXPAY-TAXFICA;*1* TAXFICA=TAXABLEGROSS - SIC     *     TAXFICA=TAXPAY-TAXFICA;*1* TAXFICA=TAXABLEGROSS - SICK
0371 TAXFICA=TAXPAY+OCONV(PAY.NON.TAXED,"MD2")                          TAXFICA=TAXPAY+OCONV(PAY.NON.TAXED,"MD2")
0372 *        GROSS=TAXPAY                                              *     GROSS=TAXPAY

0434 IF CODE=DC.BM OR CODE=DC.BU THEN NON.TAX.DED = NON.TAX.DED + A     IF CODE=DC.BM OR CODE=DC.BU THEN NON.TAX.DED = NON.TAX.DED +
0435 END                                                                END
0436 END                                                                END
0437 120 NEXT Y                                                         120 NEXT Y
0438 *****                                                              *****
0439 *T28928 v Make FWT Calc subroutine 7000                         |  121 IF NEG="YES" THEN TAXPAY=ABS(TAXPAY);TAXFICA=ABS(TAXFICA
0440 121*                                                            |  IF NEG="YES" THEN NTXFED=ABS(NTXFED);NTXFICA=ABS(NTXFICA);NT
0441 GOSUB 7000                                                      |  GROSS = GROSS - OCONV(PAY.NON.TAXED,'MD2')  ;* T21641
0442 *121 IF NEG="YES" THEN TAXPAY=ABS(TAXPAY);TAXFICA=ABS(TAXFICA)  |  SAL1=((TAXPAY-OCONV(NTXFED,  'MD2'))/NW)*52
0443 *IF NEG="YES" THEN NTXFED=ABS(NTXFED);NTXFICA=ABS(NTXFICA);NTX  |  SAL2=(TAXFICA-OCONV(NTXFICA,'MD2'))

0444 *GROSS = GROSS - OCONV(PAY.NON.TAXED,'MD2')  ;* T21641          |  SAL3=((TAXPAY-OCONV(NTXSTATE,'MD2'))/NW)*52
0445 *SAL1=((TAXPAY-OCONV(NTXFED,  'MD2'))/NW)*52                    |  SAL4=((TAXPAY-OCONV(NTXCITY, 'MD2'))/NW)*52
0446 *SAL2=(TAXFICA-OCONV(NTXFICA,'MD2'))                            |  *****
0447 *SAL3=((TAXPAY-OCONV(NTXSTATE,'MD2'))/NW)*52                    |  * FWT CALCULATION
0448 *SAL4=((TAXPAY-OCONV(NTXCITY, 'MD2'))/NW)*52                    |  IF EMP.FIT.CALC<1,1> # "" OR EMP.FIT.CALC<1,2> # "" THEN
0449                                                                 >  IF EMP.FIT.CALC<1,2> # "" THEN
0450                                                                 >  IF NEG = "YES" THEN

0451                                                                 >  *T21795 v
0452                                                                 >  *           DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*GROSS - 0.
0453                                                                 >  DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(NTXFED,'
0454                                                                 >  END ELSE
0455                                                                 >  *           DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*GROSS + 0.
0456                                                                 >  DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(NTXFED,'
0457                                                                 >  *T21795 ^

0458                                                                 >  END
0459                                                                 >  END ELSE
0460                                                                 >  IF NEG = "YES" THEN DED.FWT = EMP.FIT.CALC<1,1>*(-1) ELSE DE
0461                                                                 >  END
0462                                                                 >  CALC.FWT = DED.FWT
0463                                                                 >  IF NEG = "YES" THEN
0464                                                                 >  DED.FWT = DED.FWT - EMP.ADD.WHT<1,1>

0465                                                                 >  END ELSE
0466                                                                 >  DED.FWT = DED.FWT + EMP.ADD.WHT<1,1>
0467                                                                 >  END
0468                                                                 >  TOTDED = TOTDED + DED.FWT
0469                                                                 >  END ELSE
0470                                                                 >  TAXID=ID[1,3]:"FWT":EMP.MAR.ST
0471                                                                 >  GOSUB 6000

0472                                                                 >  IF ESTAT THEN GOTO 100
0473                                                                 >  **** USING FEDERAL # OF EXEMPTIONS
0474                                                                 >  DEP=EMP.DEP.NO<1,1>
0475                                                                 >  SAL=SAL1
0476                                                                 >  GOSUB 5000
0477                                                                 >  FWT=(TAMT/52)*NW
0478                                                                 >  DED.FWT=ICONV(FWT,"MD2")+EMP.ADD.WHT<1,1>

0479                                                                 >  IF NEG="YES" THEN DED.FWT=DED.FWT*(-1)
0480                                                                 >  CALC.FWT=ICONV(FWT,"MD2")
0481                                                                 >  IF NEG="YES" THEN CALC.FWT=CALC.FWT*(-1)
0482                                                                 >  TOTDED=TOTDED+DED.FWT
0483                                                                 >  END
0484 ******                                                             ******
0485 ** FWT CALCULATION                                              <  

0486 *IF EMP.FIT.CALC<1,1> # "" OR EMP.FIT.CALC<1,2> # "" THEN       <  
0487 *   IF EMP.FIT.CALC<1,2> # "" THEN                              <  
0488 *      IF NEG = "YES" THEN                                      <  
0489 **T21795 v                                                      <  
0490 **              DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*GROSS -   <  
0491 *         DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(  <  
0492 *      END ELSE                                                 <  

0493 **              DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*GROSS +   <  
0494 *         DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(  <  
0495 **T21795 ^                                                      <  
0496 *      END                                                      <  
0497 *   END ELSE                                                    <  
0498 *      IF NEG = "YES" THEN DED.FWT = EMP.FIT.CALC<1,1>*(-1) EL  <  
0499 *   END                                                         <  

0500 *   CALC.FWT = DED.FWT                                          <  
0501 *   IF NEG = "YES" THEN                                         <  
0502 *      DED.FWT = DED.FWT - EMP.ADD.WHT<1,1>                     <  
0503 *   END ELSE                                                    <  
0504 *      DED.FWT = DED.FWT + EMP.ADD.WHT<1,1>                     <  
0505 *   END                                                         <  
0506 *   TOTDED = TOTDED + DED.FWT                                   <  

0507 *END ELSE                                                       <  
0508 *   TAXID=ID[1,3]:"FWT":EMP.MAR.ST                              <  
0509 *   GOSUB 6000                                                  <  
0510 *   IF ESTAT THEN GOTO 100                                      <  
0511 ***** USING FEDERAL # OF EXEMPTIONS                             <  
0512 *   DEP=EMP.DEP.NO<1,1>                                         <  
0513 *   SAL=SAL1                                                    <  

0514 *   GOSUB 5000                                                  <  
0515 *   FWT=(TAMT/52)*NW                                            <  
0516 *   DED.FWT=ICONV(FWT,"MD2")+EMP.ADD.WHT<1,1>                   <  
0517 *   IF NEG="YES" THEN DED.FWT=DED.FWT*(-1)                      <  
0518 *   CALC.FWT=ICONV(FWT,"MD2")                                   <  
0519 *   IF NEG="YES" THEN CALC.FWT=CALC.FWT*(-1)                    <  
0520 *   TOTDED=TOTDED+DED.FWT                                       <  

0521 *END                                                            <  
0522 *T28928 ^                                                       <  
0523 ******                                                          <  
0524 * EARNED INCOME CREDIT CALCULATION                                 * EARNED INCOME CREDIT CALCULATION
0525 IF EMP.EIC#"" AND EMP.EIC[1,1]#" " THEN                            IF EMP.EIC#"" AND EMP.EIC[1,1]#" " THEN
0526 TAXID=ID[1,3]:EMP.EIC                                              TAXID=ID[1,3]:EMP.EIC
0527 GOSUB 6000                                                         GOSUB 6000

0569 IF H2 <=0 THEN DIAB=DIAB+H2                                        IF H2 <=0 THEN DIAB=DIAB+H2
0570 DED.SUI=ICONV(DIAB,"MD2")                                          DED.SUI=ICONV(DIAB,"MD2")
0571 IF NEG="YES" THEN DED.SUI=DED.SUI*(-1)                             IF NEG="YES" THEN DED.SUI=DED.SUI*(-1)
0572 TOTDED=TOTDED+DED.SUI                                              TOTDED=TOTDED+DED.SUI
0573 END                                                                END
0574 *T28928 v Move State & City calc to subroutines 7100 & 7200     <  
0575 *****                                                              *****
0576 GOSUB 7100                                                      <  
0577 GOSUB 7200                                                      <  
0578 * STATE TAX                                                        * STATE TAX

0579 *TAMT=0                                                         |  TAMT=0
0580 *IF EMP.ST.CODE#"" AND EMP.ST.CODE#" " THEN                     |  IF EMP.ST.CODE#"" AND EMP.ST.CODE#" " THEN
0581 *   IF EMP.STATE.CALC<1,1> # "" OR EMP.STATE.CALC<1,2> # "" TH  |  IF EMP.STATE.CALC<1,1> # "" OR EMP.STATE.CALC<1,2> # "" THEN
0582 *      IF EMP.STATE.CALC<1,2> # "" THEN                         |  IF EMP.STATE.CALC<1,2> # "" THEN
0583 *         IF NEG = "YES" THEN                                   |  IF NEG = "YES" THEN
0584 **T21795 v                                                      |  *T21795 v
0585 **                 DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*G  |  *              DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*GRO

0586 *            DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY  |  DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY-OCONV(NTXS
0587 *         END ELSE                                              |  END ELSE
0588 **                 DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*G  |  *              DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*GRO
0589 *            DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY  |  DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY-OCONV(NTXS
0590 **T21795 ^                                                      |  *T21795 ^
0591 *         END                                                   |  END
0592 *      END ELSE                                                 |  END ELSE

0593 *         IF NEG = "YES" THEN DED.STATE = EMP.STATE.CALC<1,1>   |  IF NEG = "YES" THEN DED.STATE = EMP.STATE.CALC<1,1> * (-1) E
0594 *      END                                                      |  END
0595 *      IF NEG = "YES" THEN                                      |  IF NEG = "YES" THEN
0596 *         DED.STATE = DED.STATE - EMP.ADD.WHT<1,2>              |  DED.STATE = DED.STATE - EMP.ADD.WHT<1,2>
0597 *      END ELSE                                                 |  END ELSE
0598 *         DED.STATE = DED.STATE + EMP.ADD.WHT<1,2>              |  DED.STATE = DED.STATE + EMP.ADD.WHT<1,2>
0599 *      END                                                      |  END

0600 *      TOTDED = TOTDED + DED.STATE                              |  TOTDED = TOTDED + DED.STATE
0601 *   END ELSE                                                    |  END ELSE
0602 *      TAXID=ID[1,3]:EMP.ST.CODE                                |  TAXID=ID[1,3]:EMP.ST.CODE
0603 *      IF EMP.ST.CODE = "MN" THEN TAXID = TAXID : EMP.MAR.ST    |  IF EMP.ST.CODE = "MN" THEN TAXID = TAXID : EMP.MAR.ST
0604 *      GOSUB 6000                                               |  GOSUB 6000
0605 *      IF ESTAT THEN GOTO 100                                   |  IF ESTAT THEN GOTO 100
0606 ***** USING STATE # OF EXEMPTIONS                               |  **** USING STATE # OF EXEMPTIONS

0607 *      DEP=EMP.DEP.NO<1,2>                                      |  DEP=EMP.DEP.NO<1,2>
0608 *      SAL=SAL3                                                 |  SAL=SAL3
0609 *      GOSUB 5000                                               |  GOSUB 5000
0610 *      DED.STATE=(TAMT/52)*NW                                   |  DED.STATE=(TAMT/52)*NW
0611 *      DED.STATE=ICONV(DED.STATE,"MD2")+EMP.ADD.WHT<1,2>        |  DED.STATE=ICONV(DED.STATE,"MD2")+EMP.ADD.WHT<1,2>
0612 *345   IF NEG="YES" THEN DED.STATE=DED.STATE*(-1)               |  345      IF NEG="YES" THEN DED.STATE=DED.STATE*(-1)
0613 *      TOTDED=TOTDED+DED.STATE                                  |  TOTDED=TOTDED+DED.STATE

0614 *   END                                                         |  END
0615 *END                                                            |  END
0616 ******                                                          <  
0617 *350*    CITY TAX                                               <  
0618 *TAMT=0                                                         <  
0619 *IF EMP.CITY.CODE#"" AND EMP.CITY.CODE#" " THEN                 <  
0620 *   TAXID=ID[1,3]:EMP.CITY.CODE                                 <  

0621 *   GOSUB 6000                                                  <  
0622 *   IF ESTAT THEN GOTO 100                                      <  
0623 ***** USING STATE # OF EXEMPTIONS                               <  
0624 *   DEP=EMP.DEP.NO<1,2>                                         <  
0625 *   SAL=SAL4                                                    <  
0626 *   GOSUB 5000                                                  <  
0627 *360 CWT=(TAMT/52)*NW                                           <  

0628 *   DED.CITY=ICONV(CWT,"MD2")                                   <  
0629 *   IF NEG="YES" THEN DED.CITY=DED.CITY*(-1)                    <  
0630 *   TOTDED=TOTDED+DED.CITY                                      <  
0631 *END                                                            <  
0632 *T28928 ^                                                       <  
0633 *****                                                              *****
0634                                                                 >  350*    CITY TAX

0635                                                                 >  TAMT=0
0636                                                                 >  IF EMP.CITY.CODE#"" AND EMP.CITY.CODE#" " THEN
0637                                                                 >  TAXID=ID[1,3]:EMP.CITY.CODE
0638                                                                 >  GOSUB 6000
0639                                                                 >  IF ESTAT THEN GOTO 100
0640                                                                 >  **** USING STATE # OF EXEMPTIONS
0641                                                                 >  DEP=EMP.DEP.NO<1,2>

0642                                                                 >  SAL=SAL4
0643                                                                 >  GOSUB 5000
0644                                                                 >  360   CWT=(TAMT/52)*NW
0645                                                                 >  DED.CITY=ICONV(CWT,"MD2")
0646                                                                 >  IF NEG="YES" THEN DED.CITY=DED.CITY*(-1)
0647                                                                 >  TOTDED=TOTDED+DED.CITY
0648                                                                 >  END

0649                                                                 >  *****
0650 ** UNION DEDUCTIONS                                                ** UNION DEDUCTIONS
0651 IF EMP.UNION#"" AND EMP.UNION#" " THEN                             IF EMP.UNION#"" AND EMP.UNION#" " THEN
0652 PAY.STR.GROSS=TOTREGHRS*RATE                                       PAY.STR.GROSS=TOTREGHRS*RATE
0653 PAY.STR.GROSS=ICONV(PAY.STR.GROSS,"MD2");    *1 ?? WHY HERE?       PAY.STR.GROSS=ICONV(PAY.STR.GROSS,"MD2");    *1 ?? WHY HERE?
0654 END                                                                END
0655 *****                                                              *****

0672 *CSF13520                                                          *CSF13520
0673 MATREAD MDED.REC FROM MISCDED, ID[1,3]:DED.MISC.CODE<1,Y> ELSE     MATREAD MDED.REC FROM MISCDED, ID[1,3]:DED.MISC.CODE<1,Y> EL
0674 IF MDED.NTXFICA = 'Y' THEN                                         IF MDED.NTXFICA = 'Y' THEN
0675 SAL2 = SAL2 + DED.MISC.AMT<1,Y> / 100                              SAL2 = SAL2 + DED.MISC.AMT<1,Y> / 100
0676 END                                                                END
0677 *T28928 v                                                       <  
0678 IF MDED.NTXFED = 'Y' THEN                                       <  
0679 NTXFED -= DED.MISC.AMT<1,Y>                                     <  
0680 END                                                             <  
0681 IF MDED.NTXSTATE = 'Y' THEN                                     <  

0682 NTXSTATE -= DED.MISC.AMT<1,Y>                                   <  
0683 END                                                             <  
0684 IF MDED.NTXCITY = 'Y' THEN                                      <  
0685 NTXCITY -= DED.MISC.AMT<1,Y>                                    <  
0686 END                                                             <  
0687 *T28928 ^                                                       <  
0688 DED.MISC.AMT<1,Y> = 0                                              DED.MISC.AMT<1,Y> = 0

0704 DED.LVL2.FICA=ICONV(FICA2,"MD2")                                   DED.LVL2.FICA=ICONV(FICA2,"MD2")
0705 DED.FICA = DED.LVL1.FICA + DED.LVL2.FICA                           DED.FICA = DED.LVL1.FICA + DED.LVL2.FICA
0706 TOTDED = TOTDED + DED.FICA                                         TOTDED = TOTDED + DED.FICA
0707 *                                                                  *
0708 PAY.NET = PAY.NET - DED.FICA                                       PAY.NET = PAY.NET - DED.FICA
0709 *T28928 v                                                       <  
0710 TOTDED -= DED.FWT                                               <  
0711 PAY.NET += DED.FWT                                              <  
0712 GOSUB 7000                                                      <  
0713 PAY.NET -= DED.FWT                                              <  

0714 TOTDED -= DED.STATE                                             <  
0715 PAY.NET += DED.STATE                                            <  
0716 GOSUB 7100                                                      <  
0717 PAY.NET -= DED.STATE                                            <  
0718 TOTDED -= DED.CITY                                              <  
0719 PAY.NET += DED.CITY                                             <  
0720 GOSUB 7200                                                      <  

0721 PAY.NET -= DED.CITY                                             <  
0722 *T28928 ^                                                       <  
0723 *T21369 ^                                                          *T21369 ^
0724 **                                                                 **
0725 END                                                                END
0726 IF NEG="YES" AND PAY.NET>0 THEN                                    IF NEG="YES" AND PAY.NET>0 THEN
0727 PAY.NET=PAY.NET+DED.BONDS; UPD.BONS = DED.BONDS; DED.BONDS=""      PAY.NET=PAY.NET+DED.BONDS; UPD.BONS = DED.BONDS; DED.BONDS="

0738 MATWRITE DED.REC ON DEDREG,ID                                      MATWRITE DED.REC ON DEDREG,ID
0739 MATWRITE PAY.REC ON PAYREG,ID                                      MATWRITE PAY.REC ON PAYREG,ID
0740 IF UPD.BONS # "" OR UPD.AMT # "" THEN                              IF UPD.BONS # "" OR UPD.AMT # "" THEN
0741 MATWRITE UPD.REC ON UNPAY.DEDUCT,ID                                MATWRITE UPD.REC ON UNPAY.DEDUCT,ID
0742 END                                                                END
0743                                                                 >  *T23608 v
0744                                                                 >  MAT ADP.REC = ""
0745                                                                 >  ADP.BATCH.NO = PAY.BATCH.NO
0746                                                                 >  ADP.DED.WK = PAY.END.DATE
0747                                                                 >  ACOUNT=DCOUNT(PAY.RATE,VM)

0748                                                                 >  FOR A=1 TO ACOUNT
0749                                                                 >  BCOUNT=DCOUNT(PAY.HOURS<1,A>,SM)
0750                                                                 >  FOR B=1 TO BCOUNT
0751                                                                 >  *C35849 v
0752                                                                 >  *        IF PAY.HOURS<1,A,B> GT 0 THEN
0753                                                                 >  IF PAY.HOURS<1,A,B>+0 # 0 THEN
0754                                                                 >  *C35849 ^

0755                                                                 >  ADP.RATE = PAY.RATE<1,A>
0756                                                                 >  *** FIGURE RATE & SHIFT DIFFERENTIAL ***
0757                                                                 >  SNO = PAY.SHIFT<1,A>
0758                                                                 >  WSNO = EMP.WRK.SCHD<1,SNO>
0759                                                                 >  SHIFT.FLAG = ''
0760                                                                 >  MATREAD WSS.REC FROM WORK.SHIFT,CONO:'!':WSNO ELSE MAT WSS.R
0761                                                                 >  IF WSS.SHDIF.AMT<1,1> GT 0 THEN

0762                                                                 >  RLEN=LEN(PAY.RATE<1,A>)
0763                                                                 >  WRATE = (1000000 + WSS.SHDIF.AMT<1,1>)
0764                                                                 >  WRATE = ICONV((WRATE / 1000000),'MD3')
0765                                                                 >  COMPARE.RATE = PAY.RATE<1,A> / OCONV(WRATE,'MD3')
0766                                                                 >  COMPARE.RATE=COMPARE.RATE[1,RLEN]
0767                                                                 >  *** IF RATE WITHOUT SHIFT IS BASE RATE ***
0768                                                                 >  IF COMPARE.RATE = EMP.RATE THEN

0769                                                                 >  ADP.RATE = COMPARE.RATE
0770                                                                 >  SHIFT.FLAG = 1
0771                                                                 >  GO 400
0772                                                                 >  END
0773                                                                 >  *** END OF BASE RATE CHECK ROUTINE ***
0774                                                                 >  *** IF RATE WITHOUT SHIFT IS OTHER BASE RATE ***
0775                                                                 >  LOCATE COMPARE.RATE IN EMP.VAL.CL.RATE<1>,1 SETTING VAR THEN

0776                                                                 >  ADP.RATE = COMPARE.RATE
0777                                                                 >  SHIFT.FLAG = 1
0778                                                                 >  GO 400
0779                                                                 >  END
0780                                                                 >  *** END OF OTHER BASE RATE CHECK ROUTINE ***
0781                                                                 >  *** IF RATE ENDS WITH 00 THEN USE THIS RATE ***
0782                                                                 >  IF COMPARE.RATE[RLEN-1,2] = '00' THEN

0783                                                                 >  ADP.RATE = COMPARE.RATE
0784                                                                 >  SHIFT.FLAG = 1
0785                                                                 >  END
0786                                                                 >  *** END OF 00 CHECK ROUTINE ***
0787                                                                 >  400 *
0788                                                                 >  END
0789                                                                 >  *** END OF FIGURE RATE & SHIFT DIFFERENTIAL ***

0790                                                                 >  BEGIN CASE
0791                                                                 >  CASE B = 1
0792                                                                 >  PAY.TYPE = EPSC.REG
0793                                                                 >  CASE B = 2
0794                                                                 >  PAY.TYPE = EPSC.REG.OVT
0795                                                                 >  CASE B = 3
0796                                                                 >  PAY.TYPE = EPSC.REG.DBT

0797                                                                 >  CASE B = 4
0798                                                                 >  PAY.TYPE = EPSC.REG.TRP
0799                                                                 >  CASE B = 5
0800                                                                 >  PAY.TYPE = EPSC.NC.REG
0801                                                                 >  CASE B = 6
0802                                                                 >  PAY.TYPE = EPSC.NC.OVT
0803                                                                 >  CASE B = 7

0804                                                                 >  PAY.TYPE = EPSC.NC.DBT
0805                                                                 >  CASE B = 8
0806                                                                 >  PAY.TYPE = EPSC.NC.TRP
0807                                                                 >  CASE B = 9
0808                                                                 >  PAY.TYPE = EPSC.CBACK
0809                                                                 >  CASE B = 10
0810                                                                 >  PAY.TYPE = EPSC.SICK

0811                                                                 >  CASE B = 11
0812                                                                 >  PAY.TYPE = EPSC.HOL
0813                                                                 >  CASE B = 12
0814                                                                 >  PAY.TYPE = EPSC.VAC
0815                                                                 >  CASE B = 13
0816                                                                 >  PAY.TYPE = 413
0817                                                                 >  CASE 1

0818                                                                 >  PAY.TYPE = 400
0819                                                                 >  END CASE
0820                                                                 >  CALL BUILD.ADPREG.SUB(PAY.TYPE,PAY.HOURS<1,A,B>,ADP.RATE,PAY
0821                                                                 >  END
0822                                                                 >  NEXT B
0823                                                                 >  NEXT A
0824                                                                 >  *** CHECK FOR OTHER INCOME HERE ***

0825                                                                 >  *C35849 v
0826                                                                 >  *  IF PAY.TAXED+0 # 0 THEN
0827                                                                 >  IF (PAY.TAXED + PAY.NON.TAXED) # 0 THEN
0828                                                                 >  *C35849 ^
0829                                                                 >  OCNT=DCOUNT(PAY.OTH.INC<1>,VM)
0830                                                                 >  FOR O = 1 TO OCNT
0831                                                                 >  OAMT=PAY.OTH.INC<1,O>

0832                                                                 >  OCODE=PAY.OTH.CODE<1,O>
0833                                                                 >  BEGIN CASE
0834                                                                 >  CASE OCODE = 6
0835                                                                 >  ADP.LMP.COMM = ADP.LMP.COMM + OAMT
0836                                                                 >  CASE OCODE = 8
0837                                                                 >  ADP.LMP.VAC = ADP.LMP.VAC + OAMT
0838                                                                 >  CASE OCODE = 9

0839                                                                 >  ADP.LMP.SICK = ADP.LMP.SICK + OAMT
0840                                                                 >  *T26362 v
0841                                                                 >  CASE OCODE = 11
0842                                                                 >  ADP.LMP.STAFF.HOLIDAY = ADP.LMP.STAFF.HOLIDAY + OAMT
0843                                                                 >  *T26362 ^
0844                                                                 >  *T26769 v
0845                                                                 >  CASE OCODE = 12

0846                                                                 >  ADP.BP.PENSION = ADP.BP.PENSION + OAMT
0847                                                                 >  CASE OCODE = 13
0848                                                                 >  ADP.BP.NON.PENSION = ADP.BP.NON.PENSION + OAMT
0849                                                                 >  *T26769 ^
0850                                                                 >  *T28009 v
0851                                                                 >  CASE OCODE = 14
0852                                                                 >  ADP.WSIB.DOCTOR = ADP.WSIB.DOCTOR + OAMT

0853                                                                 >  *T28009 ^
0854                                                                 >  *T26830 v
0855                                                                 >  CASE OCODE = 2
0856                                                                 >  ADP.RET.ALL.ELIG = ADP.RET.ALL.ELIG + OAMT
0857                                                                 >  CASE OCODE = 3
0858                                                                 >  ADP.RET.ALL.NON.ELIG = ADP.RET.ALL.NON.ELIG + OAMT
0859                                                                 >  CASE OCODE = 4

0860                                                                 >  ADP.RET.ALL.ELIG.NR = ADP.RET.ALL.ELIG.NR + OAMT
0861                                                                 >  *T26830 ^
0862                                                                 >  *T27338 v
0863                                                                 >  CASE OCODE = 5
0864                                                                 >  ADP.BONUS = ADP.BONUS + OAMT
0865                                                                 >  *T27338 ^
0866                                                                 >  CASE 1

0867                                                                 >  ADP.LMP.OTH = ADP.LMP.OTH + OAMT
0868                                                                 >  END CASE
0869                                                                 >  NEXT O
0870                                                                 >  END
0871                                                                 >  *** END OF OTHER INCOME ROUTINE ***
0872                                                                 >  ACOUNT=DCOUNT(ADP.PAY.RATE<1>,VM)
0873                                                                 >  FOR A=1 TO ACOUNT

0874                                                                 >  FOR B=5 TO 35
0875                                                                 >  ADP.REC(B)<1,A>=ADP.REC(B)<1,A>'R%7'
0876                                                                 >  NEXT B
0877                                                                 >  NEXT A
0878                                                                 >  *T26246 v
0879                                                                 >  *  FOR B=36 TO 40
0880                                                                 >  *     ADP.REC(B)<1>=ADP.REC(B)<1>'R%7'

0881                                                                 >  *  NEXT B
0882                                                                 >  FOR B=36 TO 39
0883                                                                 >  ADP.REC(B)<1>=ADP.REC(B)<1>'R%8'
0884                                                                 >  NEXT B
0885                                                                 >  ADP.REC(40)<1>=ADP.REC(40)<1>'R%7'
0886                                                                 >  *T26246 ^
0887                                                                 >  ADP.REC(41)<1>=ADP.REC(41)<1>'R%8' ; * T26362

0888                                                                 >  ADP.REC(42)<1>=ADP.REC(42)<1>'R%8' ; * T26769
0889                                                                 >  ADP.REC(43)<1>=ADP.REC(43)<1>'R%8' ; * T26769
0890                                                                 >  ADP.REC(44)<1>=ADP.REC(44)<1>'R%8' ; * T26830
0891                                                                 >  ADP.REC(45)<1>=ADP.REC(45)<1>'R%8' ; * T26830
0892                                                                 >  ADP.REC(46)<1>=ADP.REC(46)<1>'R%8' ; * T26830
0893                                                                 >  ADP.REC(47)<1>=ADP.REC(47)<1>'R%8' ; * T27338
0894                                                                 >  MATWRITE ADP.REC ON ADPREG,CONO:PAY.BATCH.NO:'!':PAY.END.DAT

0895                                                                 >  *T23608 ^
0896 IF EMP.UNION="" THEN GO 100                                        IF EMP.UNION="" THEN GO 100
0897 WRITEV VACATIONHRS ON MTH.UNION,ID[1,7],18                         WRITEV VACATIONHRS ON MTH.UNION,ID[1,7],18
0898 GOTO 100                                                           GOTO 100
0899 *                                                                  *
0900 * CALCULATE TAXES                                                  * CALCULATE TAXES
0901 *                                                                  *

1199 * CALCULATE USING TAX BRACKET                                      * CALCULATE USING TAX BRACKET
1200 *                                                                  *
1201 6600*                                                              6600*
1202 TAMT = TAX.TAB.REC(PT)<1,2>                                        TAMT = TAX.TAB.REC(PT)<1,2>
1203 EXCESS=TXGR-TAX.TAB.REC(PT)<1,1>                                   EXCESS=TXGR-TAX.TAB.REC(PT)<1,1>
1204 *T27998 v                                                       <  
1205 IF NEG # 'YES' AND EXCESS < 0 THEN EXCESS = 0                   <  
1206 IF NEG = 'YES' AND EXCESS > 0 THEN EXCESS = 0                   <  
1207 *T27998 ^                                                       <  
1208 PERCENT=TAX.TAB.REC(PT)<1,3>/100                                   PERCENT=TAX.TAB.REC(PT)<1,3>/100

1209 TAMT = TAMT + (EXCESS*PERCENT)                                     TAMT = TAMT + (EXCESS*PERCENT)
1210 RETURN                                                             RETURN
1211 ** FWT CALC                                                     <  
1212 *                                                                  *
1213 7000 IF NEG="YES" THEN TAXPAY=ABS(TAXPAY);TAXFICA=ABS(TAXFICA)  <  
1214 IF NEG="YES" THEN NTXFED=ABS(NTXFED);NTXFICA=ABS(NTXFICA);NTXS  <  
1215 GROSS = GROSS - OCONV(PAY.NON.TAXED,'MD2')  ;* T21641           <  
1216 SAL1=((TAXPAY-OCONV(NTXFED,  'MD2'))/NW)*52                     <  
1217 SAL2=(TAXFICA-OCONV(NTXFICA,'MD2'))                             <  

1218 SAL3=((TAXPAY-OCONV(NTXSTATE,'MD2'))/NW)*52                     <  
1219 SAL4=((TAXPAY-OCONV(NTXCITY, 'MD2'))/NW)*52                     <  
1220 *****                                                           <  
1221 * FWT CALCULATION                                               <  
1222 IF EMP.FIT.CALC<1,1> # "" OR EMP.FIT.CALC<1,2> # "" THEN        <  
1223 IF EMP.FIT.CALC<1,2> # "" THEN                                  <  
1224 IF NEG = "YES" THEN                                             <  

1225 DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(NTXFED,'MD  <  
1226 END ELSE                                                        <  
1227 DED.FWT = INT((EMP.FIT.CALC<1,2>/100)*(TAXPAY-OCONV(NTXFED,'MD  <  
1228 END                                                             <  
1229 END ELSE                                                        <  
1230 IF NEG = "YES" THEN DED.FWT = EMP.FIT.CALC<1,1>*(-1) ELSE DED.  <  
1231 END                                                             <  

1232 CALC.FWT = DED.FWT                                              <  
1233 IF NEG = "YES" THEN                                             <  
1234 DED.FWT = DED.FWT - EMP.ADD.WHT<1,1>                            <  
1235 END ELSE                                                        <  
1236 DED.FWT = DED.FWT + EMP.ADD.WHT<1,1>                            <  
1237 END                                                             <  
1238 TOTDED = TOTDED + DED.FWT                                       <  

1239 END ELSE                                                        <  
1240 TAXID=ID[1,3]:"FWT":EMP.MAR.ST                                  <  
1241 GOSUB 6000                                                      <  
1242 IF ESTAT THEN GOTO 100                                          <  
1243 **** USING FEDERAL # OF EXEMPTIONS                              <  
1244 DEP=EMP.DEP.NO<1,1>                                             <  
1245 SAL=SAL1                                                        <  

1246 GOSUB 5000                                                      <  
1247 FWT=(TAMT/52)*NW                                                <  
1248 DED.FWT=ICONV(FWT,"MD2")+EMP.ADD.WHT<1,1>                       <  
1249 IF NEG="YES" THEN DED.FWT=DED.FWT*(-1)                          <  
1250 CALC.FWT=ICONV(FWT,"MD2")                                       <  
1251 IF NEG="YES" THEN CALC.FWT=CALC.FWT*(-1)                        <  
1252 TOTDED=TOTDED+DED.FWT                                           <  

1253 END                                                             <  
1254 RETURN                                                          <  
1255 *                                                               <  
1256 *T28928 v                                                       <  
1257 *****                                                           <  
1258 7100 *                                                          <  
1259 * STATE TAX                                                     <  

1260 TAMT=0                                                          <  
1261 IF EMP.ST.CODE#"" AND EMP.ST.CODE#" " THEN                      <  
1262 IF EMP.STATE.CALC<1,1> # "" OR EMP.STATE.CALC<1,2> # "" THEN    <  
1263 IF EMP.STATE.CALC<1,2> # "" THEN                                <  
1264 IF NEG = "YES" THEN                                             <  
1265 DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY-OCONV(NTXSTA  <  
1266 END ELSE                                                        <  

1267 DED.STATE = INT((EMP.STATE.CALC<1,2>/100)*(TAXPAY-OCONV(NTXSTA  <  
1268 END                                                             <  
1269 END ELSE                                                        <  
1270 IF NEG = "YES" THEN DED.STATE = EMP.STATE.CALC<1,1> * (-1) ELS  <  
1271 END                                                             <  
1272 IF NEG = "YES" THEN                                             <  
1273 DED.STATE = DED.STATE - EMP.ADD.WHT<1,2>                        <  

1274 END ELSE                                                        <  
1275 DED.STATE = DED.STATE + EMP.ADD.WHT<1,2>                        <  
1276 END                                                             <  
1277 TOTDED = TOTDED + DED.STATE                                     <  
1278 END ELSE                                                        <  
1279 TAXID=ID[1,3]:EMP.ST.CODE                                       <  
1280 IF EMP.ST.CODE = "MN" THEN TAXID = TAXID : EMP.MAR.ST           <  

1281 GOSUB 6000                                                      <  
1282 IF ESTAT THEN GOTO 100                                          <  
1283 **** USING STATE # OF EXEMPTIONS                                <  
1284 DEP=EMP.DEP.NO<1,2>                                             <  
1285 SAL=SAL3                                                        <  
1286 GOSUB 5000                                                      <  
1287 DED.STATE=(TAMT/52)*NW                                          <  

1288 DED.STATE=ICONV(DED.STATE,"MD2")+EMP.ADD.WHT<1,2>               <  
1289 IF NEG="YES" THEN DED.STATE=DED.STATE*(-1)                      <  
1290 TOTDED=TOTDED+DED.STATE                                         <  
1291 END                                                             <  
1292 END                                                             <  
1293 RETURN                                                          <  
1294 *                                                               <  

1295 *****                                                           <  
1296 7200 *                                                          <  
1297 *    CITY TAX                                                   <  
1298 TAMT=0                                                          <  
1299 IF EMP.CITY.CODE#"" AND EMP.CITY.CODE#" " THEN                  <  
1300 TAXID=ID[1,3]:EMP.CITY.CODE                                     <  
1301 GOSUB 6000                                                      <  

1302 IF ESTAT THEN GOTO 100                                          <  
1303 **** USING STATE # OF EXEMPTIONS                                <  
1304 DEP=EMP.DEP.NO<1,2>                                             <  
1305 SAL=SAL4                                                        <  
1306 GOSUB 5000                                                      <  
1307 360 CWT=(TAMT/52)*NW                                            <  
1308 DED.CITY=ICONV(CWT,"MD2")                                       <  

1309 IF NEG="YES" THEN DED.CITY=DED.CITY*(-1)                        <  
1310 TOTDED=TOTDED+DED.CITY                                          <  
1311 END                                                             <  
1312 RETURN                                                          <  
1313 *                                                               <  
1314 *T28928 ^                                                       <  
1315 *--- ERROR ROUTINE                                                 *--- ERROR ROUTINE


EP4BP/EP4.PAYTYPEIN                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EP4.PAYTYPEIN
Printed for thompson at 06/28/2006 04:24:39PM

0001 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0002 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0003 *RESULTS - COPYRIGHT 1980 MICRODATA CORPORATION                 |  * RESULTS - COPYRIGHT 1980 MICRODATA CORPORATION
0004 *ALL RIGHTS RESERVED                                            |  * ALL RIGHTS RESERVED
0005 REM  "PAYROLL HEADER PROCESSING (PAYROLL) PAYROLL PAYHEADIN""   |  * "PAYROLL HEADER PROCESSING (PAYROLL) PAYROLL PAYHEADIN""
0006 * MOD TASK   - 13400]14036                                         * MOD TASK   - 13400]14036
0007 * MOD BY     - MT]RRG]SFC                                          * MOD BY     - MT]RRG]SFC
0008 * MOD DATE   - 2/13/89]5/2/89]1-22-90                              * MOD DATE   - 2/13/89]5/2/89]1-22-90
0009 * MOD DESC   - Process multiple payrolls simultaneously.]check     * MOD DESC   - Process multiple payrolls simultaneously.]che

0010 *            - to be within 10 days of Period End Date.]MODIFI     *            - to be within 10 days of Period End Date.]MODI
0011                                                                 >  *C37617 cm 01/25/2001 * Add change so pgm will delete the AD
0012                                                                 >  *                       for this batch and payroll end date.
0013 ************************                                           ************************
0014 CLEAR                                                              CLEAR
0015 OPEN "","PAYTYPE" TO PAYTYPE ELSE PRINT "CAN'T OPEN PAYTYPE";G     OPEN "","PAYTYPE" TO PAYTYPE ELSE PRINT "CAN'T OPEN PAYTYPE"
0016 OPEN "","EP4PROCS" TO PPROX ELSE PRINT "CAN'T OPEN PPROX";GOTO     OPEN "","EP4PROCS" TO PPROX ELSE PRINT "CAN'T OPEN PPROX";GO
0017 OPEN "","COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN COMPANY";G     OPEN "","COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN COMPANY"

0018 *    OPEN "DICT","MTH-UNION" TO D.MTHUN ELSE PRINT "CAN'T OPEN  |  *C37617 v
0019                                                                 >  OPEN "BATCH.HEADER" TO BATCH.HEADER ELSE PRINT "NO BATCH.HEA
0020                                                                 >  OPEN "ADPREG" TO ADPREG ELSE PRINT "NO ADPREG FILE";GOTO 999
0021                                                                 >  *C37617 ^
0022 AM=CHAR(254);REC="H"                                               AM=CHAR(254);REC="H"
0023 PROMPT ""                                                          PROMPT ""
0024 PORT = 'TTY'                                                       PORT = 'TTY'

0023 PROMPT ""                                                          PROMPT ""
0024 PORT = 'TTY'                                                       PORT = 'TTY'
0025 CALL SYSVARS.SUB(PORT)                                             CALL SYSVARS.SUB(PORT)
0026 FIRST =''                                                          FIRST =''
0027 AMT=0;TAMT=0;L7=0;COREC=""                                         AMT=0;TAMT=0;L7=0;COREC=""
0028 **************************************************************  <  
0029 50 * SCREEN DISPLAY                                                50 * SCREEN DISPLAY
0030 **************************************************************  <  
0031 WEL = ''                                                           WEL = ''
0032 * PRINT CHAR(12)                                                <  

0033 PRINT @(-1)                                                        PRINT @(-1)
0034 PRINT@(23,2):"* * *  PAYROLL PROCESSING * * *":                    PRINT@(23,2):"* * *  PAYROLL PROCESSING * * *":
0035 PRINT@(19,3):"       -------------------------":                   PRINT@(19,3):"       -------------------------":
0036 PRINT@(5,6):"COMPANY NUMBER OR END:":                              PRINT@(5,6):"COMPANY NUMBER OR END:":
0037 PRINT@(5,8):"BATCH NUMBER OR ALL:":                                PRINT@(5,8):"BATCH NUMBER OR ALL:":
0038 **************************************************************  <  
0039 *                                                               <  
0040 ** COMPANY CODE                                                 <  
0041 *                                                               <  
0042 OPEN "","CONTROL" TO CON ELSE PRINT "CAN'T OPEN CONTROL":;INPU     OPEN "","CONTROL" TO CON ELSE PRINT "CAN'T OPEN CONTROL":;IN

0051 PRINT@(35,6):"###":@(35,6):;INPUT CONO:                            PRINT@(35,6):"###":@(35,6):;INPUT CONO:
0052 IF CONO="" THEN CONO="001";PRINT@(35,6):"001"                      IF CONO="" THEN CONO="001";PRINT@(35,6):"001"
0053 IF CONO="END" AND FIRST ='' THEN STOP                              IF CONO="END" AND FIRST ='' THEN STOP
0054 IF CONO ="END" THEN GOTO 9000                                      IF CONO ="END" THEN GOTO 9000
0055 3034 READV NAME FROM COMPANY,CONO,1 ELSE                           3034 READV NAME FROM COMPANY,CONO,1 ELSE
0056 *  FOR Y=1TO 10;PRINT@(35,6):"INVALID":CHAR(7);FOR Y1=1TO 10    <  
0057 FOR Y=1TO 10;PRINT@(35,6):"INVALID":"";FOR Y1=1TO 10               FOR Y=1TO 10;PRINT@(35,6):"INVALID":"";FOR Y1=1TO 10
0058 NEXT Y1;PRINT@(35,6):SPACE(7);NEXT Y;GOTO 70                       NEXT Y1;PRINT@(35,6):SPACE(7);NEXT Y;GOTO 70
0059 END                                                                END
0060 PRINT@(35,6):CONO:"  ":NAME                                        PRINT@(35,6):CONO:"  ":NAME

0064 80 PRINT @(35,8):"###":@(35,8):;INPUT BATNO:                       80 PRINT @(35,8):"###":@(35,8):;INPUT BATNO:
0065 IF BATNO = "END" THEN GOTO 99990                                   IF BATNO = "END" THEN GOTO 99990
0066 IF LEN(BATNO) > 3 THEN PRINT@(35,8):STR(" ",LEN(BATNO)):;GOTO      IF LEN(BATNO) > 3 THEN PRINT@(35,8):STR(" ",LEN(BATNO)):;GOT
0067 BATNO = STR("0",3-LEN(BATNO)):BATNO;PRINT @(35,8):BATNO            BATNO = STR("0",3-LEN(BATNO)):BATNO;PRINT @(35,8):BATNO
0068 IF BATNO # "ALL" AND (BATNO < "001" OR BATNO > "999") THEN GOT     IF BATNO # "ALL" AND (BATNO < "001" OR BATNO > "999") THEN G
0069 *                                                               <  
0070 ** PERIOD ENDING DATE                                           <  
0071 *                                                               <  
0072 100*  PRINT@(35,10):"##/##/##   ":@(35,10):;INPUT PED:          <  
0073 *     IF PED = "END" THEN GOTO 50                               <  

0074 *     IF PED="" THEN PED=HOLDPED                                <  
0075 *     PED=OCONV(ICONV(PED,"D2/"),"D2/")                         <  
0076 *     IF PED MATCHES "2N/2N/2N" THEN NULL ELSE GO100            <  
0077 *     HOLDPED=PED                                               <  
0078 *     PRINT@(35,10):PED                                         <  
0079 *                                                               <  
0080 ** PAYCHECK DATE                                                <  

0081 *                                                               <  
0082 120*  PRINT@(35,10):"##/##/##   ":@(35,10):;INPUT PCD:          <  
0083 *     IF PCD = "END" THEN GOTO 50                               <  
0084 *     IF PCD="" THEN PCD=HOLDPCD                                <  
0085 *     PCD=OCONV(ICONV(PCD,"D2/"),"D2/")                         <  
0086 *     IF PCD MATCHES "2N/2N/2N" THEN NULL ELSE GO120            <  
0087 *     IF ICONV(PCD,"D2/") < (ICONV(PED,"D2/") - 10) THEN GO120  <  

0088 *     HOLDPCD=PCD                                               <  
0089 *     PRINT@(35,10):PCD                                         <  
0090 *                                                               <  
0091 ** PAY PERIOD                                                   <  
0092 *                                                               <  
0093 160*  PRINT@(35,12):"##  ":@(35,12):;INPUT PP:                  <  
0094 *     IF PP = "END" THEN GO TO 50                               <  

0095 *     IF PP="" THEN PP=HOLDPP                                   <  
0096 *     IF NUM(PP) THEN NULL ELSE GO160                           <  
0097 *     IF PP>53 OR PP<1 THEN GO160                               <  
0098 *     PP=STR("0",2-LEN(PP)):PP                                  <  
0099 *     HOLDPP=PP                                                 <  
0100 *     PRINT@(35,12):PP:"  "                                     <  
0101 *                                                               <  

0102 ** DEDUCTION WEEK                                               <  
0103 *                                                               <  
0104 150*  PRINT@(35,14):"#  ":@(35,14):;INPUT DW:                   <  
0105 *     IF DW = "END" THEN GOTO 50                                <  
0106 *     IF DW="" THEN DW=HOLDDW                                   <  
0107 *     IF DW<1 OR DW>5 THEN GOTO 150                             <  
0108 *     HOLDDW=DW                                                 <  

0109 *     PRINT@(35,14):DW:"  ":                                    <  
0110 **************************************************************  <  
0111 180 PRINT@(5,22):"IS THIS WHAT YOU WANT ? (RTN/N): ":;INPUT AN     180 PRINT@(5,22):"IS THIS WHAT YOU WANT ? (RTN/N): ":;INPUT 
0112 PRINT@(5,22):SPACE(65):                                            PRINT@(5,22):SPACE(65):
0113 IF AN="N" THEN GOTO 50                                             IF AN="N" THEN GOTO 50
0114 IF AN # "" THEN GOTO 180                                           IF AN # "" THEN GOTO 180
0115 *PED = ICONV(PED,"D2/")                                         <  

0116 PCD = ICONV(PCD,"D2/")                                             PCD = ICONV(PCD,"D2/")
0117 *     X2=PED:AM:PCD:AM:SCN:AM:PP:AM:DW:AM:WEL:AM:BATNO          <  
0118 *     X2=" ":AM:PCD:AM:SCN:AM:PP:AM:DW:AM:WEL:AM:BATNO          <  
0119 *     WRITE X2 ON PAYTYPE,CONO:"HEADER"                         <  
0120 REC=REC:'"':CONO:'"'                                               REC=REC:'"':CONO:'"'
0121 *     FIRST = 1                                                 <  
0122 *      READV CONO FROM CON,"MASTER",1 ELSE GO 50                <  
0123 **************************************************************     ************************************************************

0124 9000 *                                                             9000 *
0125                                                                 >  *C37617 v
0126                                                                 >  READ BHD.DATA FROM BATCH.HEADER, CONO:BATNO THEN
0127                                                                 >  BHD.END.DATE = OCONV(BHD.DATA<10>,'D4/')
0128                                                                 >  EXECUTE 'SELECT ADPREG WITH CONO = "':CONO:'" AND WITH ADP.B
0129                                                                 >  END
0130                                                                 >  9001 *
0131                                                                 >  READNEXT AKEY ELSE GOTO 9002

0132                                                                 >  DELETE ADPREG,AKEY
0133                                                                 >  GOTO 9001
0134                                                                 >  9002 *
0135                                                                 >  *C37617 ^
0136 WRITEV REC ON PPROX,'PPAYCALC',3                                   WRITEV REC ON PPROX,'PPAYCALC',3
0137 REC='H AND WITH BATCH-NO = "':BATNO:'"'                            REC='H AND WITH BATCH-NO = "':BATNO:'"'
0138 IF BATNO = "ALL" THEN REC= "C"                                     IF BATNO = "ALL" THEN REC= "C"

0139 WRITEV REC ON PPROX,"PPAYCALC",4                                   WRITEV REC ON PPROX,"PPAYCALC",4
0140 *      CHAIN "EX.EP4.P PPAYCALC"                                <  
0141 GOTO 99999                                                         GOTO 99999
0142 *                                                               <  
0143 99990 *                                                            99990 *
0144 PROCWRITE "END"                                                    PROCWRITE "END"
0145 *                                                               <  
0146 99999 *                                                            99999 *


EP4BP/EP4.WEEK.UPDATE                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/EP4.WEEK.UPDATE
Printed for thompson at 06/28/2006 04:24:39PM

0013 * MOD DESC    - ]Process multiple payrolls simultaneously]Remo     * MOD DESC    - ]Process multiple payrolls simultaneously]Re
0014 *             - of mult-batch logic]MODIFIED FOR EPS-PAYROLL       *             - of mult-batch logic]MODIFIED FOR EPS-PAYROLL
0015 * MOD         - TASK 15719 RWW 1.4.91, FICA/MEDICARE CALC CHAN     * MOD         - TASK 15719 RWW 1.4.91, FICA/MEDICARE CALC CH
0016 *T21824 lanny 04/18/1997 * Only process PAYREG with batch head     *T21824 lanny 04/18/1997 * Only process PAYREG with batch he
0017 *                          status = 2.                             *                          status = 2.
0018 *T28175 lross 06/28/2004 * Eliminate previously processed reco  |  *T25357 cm 10/25/2000 * Move PAYREG data to a history file t
0019                                                                 >  *                       new payroll recap report to print ye
0020                                                                 >  *                       totals.
0021 *ENDDOC                                                            *ENDDOC
0022 **************************************************************     ************************************************************

0065 OPEN "DICT","MTH-UNION" TO D.MTH.UNION ELSE PRINT "CAN'T OPEN      OPEN "DICT","MTH-UNION" TO D.MTH.UNION ELSE PRINT "CAN'T OPE
0066 OPEN "","COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN COMPANY FI     OPEN "","COMPANY" TO COMPANY ELSE PRINT "CAN'T OPEN COMPANY 
0067 OPEN "","CONTROL" TO CONTROL ELSE PRINT "CAN'T OPEN CONTROL FI     OPEN "","CONTROL" TO CONTROL ELSE PRINT "CAN'T OPEN CONTROL 
0068 OPEN "","PETTY.CASH" TO PETTY.CASH ELSE PRINT "CAN'T OPEN PETT     OPEN "","PETTY.CASH" TO PETTY.CASH ELSE PRINT "CAN'T OPEN PE
0069 OPEN "","EMPLOYEE.INVEST.CONTR" TO EMPLOYEE.INVEST.CONTR ELSE      OPEN "","EMPLOYEE.INVEST.CONTR" TO EMPLOYEE.INVEST.CONTR ELS
0070                                                                 >  *T25357 v
0071                                                                 >  OPEN "","PAYREG.HISTORY" TO PAYREG.HISTORY ELSE PRINT "CANNO
0072                                                                 >  *T25357 ^
0073 MATREAD COMP.REC FROM COMPANY, CONO ELSE PRINT "COMPANY ":CONO     MATREAD COMP.REC FROM COMPANY, CONO ELSE PRINT "COMPANY ":CO
0074 MATREAD DC.REC FROM CONTROL, CONO:"401K" ELSE PRINT "401K RECO     MATREAD DC.REC FROM CONTROL, CONO:"401K" ELSE PRINT "401K RE

0079 PRINT@(5,21):"NOW UPDATING EMPLOYEE NUMBER:":                      PRINT@(5,21):"NOW UPDATING EMPLOYEE NUMBER:":
0080 *****                                                              *****
0081 100*                                                               100*
0082 READNEXT ID ELSE GOTO 500                                          READNEXT ID ELSE GOTO 500
0083 IF ID[1,3] # CONO THEN GOTO 100                                    IF ID[1,3] # CONO THEN GOTO 100
0084 RELEASE PAYREG, ID                                              <  
0085 MAT DED.REC = ""; MAT PAY.REC = ""; MAT EMP.REC = ""; MAT BHD.     MAT DED.REC = ""; MAT PAY.REC = ""; MAT EMP.REC = ""; MAT BH
0086 UNIONDUES=0                                                        UNIONDUES=0
0087 SECONDKEY=ID[8,2]                                                  SECONDKEY=ID[8,2]
0088 EMP.NO = ID[4,4]                                                   EMP.NO = ID[4,4]

0089 
0090 MATREAD DED.REC FROM DEDREG,ID ELSE BADS=BADS+1;BAD<BADS>=EMP.     MATREAD DED.REC FROM DEDREG,ID ELSE BADS=BADS+1;BAD<BADS>=EM
0091 MATREADU PAY.REC FROM PAYREG,ID ELSE BADS=BADS+1;BAD<BADS>=EMP  |  MATREAD PAY.REC FROM PAYREG,ID ELSE BADS=BADS+1;BAD<BADS>=EM
0092 *T28175 v                                                       <  
0093 IF PAY.STATUS="UPDATE" OR PAY.STATUS="DELETE" THEN              <  
0094 BADS+=1; BAD<BADS>=EMP.NO:" ":SECONDKEY:" ALREADY PROCESSED"    <  
0095 GOTO 100                                                        <  
0096 END                                                             <  
0097 *T28175 ^                                                       <  

0458 QHR.MISC.AMT = INSERT(QHR.MISC.AMT,1,1,0,DED.BONDS)                QHR.MISC.AMT = INSERT(QHR.MISC.AMT,1,1,0,DED.BONDS)
0459 END                                                                END
0460 MATWRITE QHR.REC ON QHR, QID:BHD.PAY.PER:COUNT                     MATWRITE QHR.REC ON QHR, QID:BHD.PAY.PER:COUNT
0461 PAY.STATUS = "UPDATE"                                              PAY.STATUS = "UPDATE"
0462 MATWRITE PAY.REC ON PAYREG, ID                                     MATWRITE PAY.REC ON PAYREG, ID
0463                                                                 >  *T25357 v
0464                                                                 >  MATWRITE PAY.REC ON PAYREG.HISTORY, ID:'!':PAY.END.DATE
0465                                                                 >  *T25357 ^
0466 GOTO 100                                                           GOTO 100
0467 *****                                                              *****


