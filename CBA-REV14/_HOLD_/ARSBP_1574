









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:03:54 CDT 2006
   #    ######   #####  ######  ######
  # #   #     # #     # #     # #     #
 #   #  #     # #       #     # #     #
#     # ######   #####  ######  ######
####### #   #         # #     # #
#     # #    #  #     # #     # #
#     # #     #  #####  ######  #

ARSBP/MANUAL.INVOICE.MAINT.F4                                      /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/MANUAL.INVOICE.MAINT.F4
Printed for thompson at 06/28/2006 04:03:53PM

0017 * T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match probl     * T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match pro
0018 *T22168 bilal 11/18/1997 * Allow 4 Decimal places in unit pric     *T22168 bilal 11/18/1997 * Allow 4 Decimal places in unit pr
0019 *T22747 lanny 04/14/1998 * Hidden lines lockup problem.            *T22747 lanny 04/14/1998 * Hidden lines lockup problem.
0020 *T22759 lANNY 04/16/1998 * Fix prob caused by Hidden Line mod.     *T22759 lANNY 04/16/1998 * Fix prob caused by Hidden Line mo
0021 *T23324 cindy 10/13/1998 * descr not changing when change invo     *T23324 cindy 10/13/1998 * descr not changing when change in
0022 *T23278 markt 10/13/1998 * Add division security check          <  
0023 *T23460 rik 11/24/1998 * bug relating to task 23324.  Was not      *T23460 rik 11/24/1998 * bug relating to task 23324.  Was no
0024 *                        descr in as a MV.                         *                        descr in as a MV.
0025 *T23606 edvard 05/14/1999 * Added sales rep. xref and modified  |  *T23688 rik 03/07/1999 * auto assign next available manual i
0026 *                           GEN.XREF.SUB instead of GEN.XREF    |  *T25159 alex 06/15/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since

0027 *T23932 randy 05/25/1999 * CHANGE ATTENTION FIELD TO BILL TO    <  
0028 *                          ATTENTION AND ADD SHIP TO ATTENTION  <  
0029 *T24082 cm 06/23/1999 * Correct Line item detail clear problem  <  
0030 *T23278 markt 12/08/1999 * Add Division code to Void Invoices   <  
0031 *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since t  <  
0032 *                         COUNTRY.CODE file can hold multiple      *                         COUNTRY.CODE file can hold multipl
0033 *                         of data.                                 *                         of data.

0034 *T25764 renee 07/25/2001 * Add "Terms code" field that default  <  
0035 *                          customer record but allows edit. Ad  <  
0036 *                          number of days stored in the terms   <  
0037 *                          the invoice date to come up with th  <  
0038 *                          due date.                            <  
0039 *T25978 adelgado 02/06/2002 * Add the use of prompts (S,SR,SB,  <  
0040 *T26126 adelgado 02/25/2002 * Implement the LOCKED clause for   <  

0041 *T26805 epitka 08/27/2002 * ADD EMAIL                           <  
0042 *T27524 thompson 06/26/2003 * FIX PROBLEM OF SCROLLING WITH RE  <  
0043 *                             DISTRIBUTION                      <  
0044 *T27646 thompson 08/18/2003 * ALL FOR MULTI PLATFORM USE        <  
0045 *************************************************************      ************************************************************
0046 *                                                                  *
0047 *COPY>ARS.CPYLIB>OPEN.RECV                                         *COPY>ARS.CPYLIB>OPEN.RECV

0050 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0051 *COPY>PMC.CPYLIB>SALESMAN                                          *COPY>PMC.CPYLIB>SALESMAN
0052 *COPY>PMC.CPYLIB>INVOICE.CODE                                      *COPY>PMC.CPYLIB>INVOICE.CODE
0053 *COPY>PMC.CPYLIB>SALES.CODE                                        *COPY>PMC.CPYLIB>SALES.CODE
0054 *COPY>PMC.CPYLIB>TAX                                               *COPY>PMC.CPYLIB>TAX
0055 *COPY>PMC.CPYLIB>TERMS                                          <  
0056 *COPY>PMC.CPYLIB>SHIP.VIA                                          *COPY>PMC.CPYLIB>SHIP.VIA
0057 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0058 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0059 *COPY>PMC.CPYLIB>VOID.INVOICES                                     *COPY>PMC.CPYLIB>VOID.INVOICES

0060 *COPY>PMC.CPYLIB>COUNTRY.CODE                                   |  *COPY>PMC.CPYLIB>COUNTRY.CODE        ;*T25159
0061 *COPY>CPYLIB>GEN.XREF.SUB                                       |  *COPY>CPYLIB>GEN.XREF
0062 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0063 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0064 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0065 *COPY>JES.CPYLIB>JES.FILE.VARS                                     *COPY>JES.CPYLIB>JES.FILE.VARS
0066 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR

0067 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0068                                                                 >  MAT SYSCOM.REC =  "";SYS.TYPE = 2
0069                                                                 >  * 17927
0070 *COPY>PMC.CPYLIB>COA                                               *COPY>PMC.CPYLIB>COA
0071 *COPY>PMC.CPYLIB>GLTABLE                                           *COPY>PMC.CPYLIB>GLTABLE
0072 MAT SYSCOM.REC =  "";SYS.TYPE = 2                               <  
0073 *                                                                  *
0074 *-- OPEN ALL FILES                                                 *-- OPEN ALL FILES

0075 *                                                                  *
0076 OPEN "","COMPANY" TO COMPANY ELSE                                  OPEN "","COMPANY" TO COMPANY ELSE
0077 ERRMSG = "CANNOT OPEN COMPANY FILE" ; GOSUB 93000               |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN COMPANY FILE";P_OPT
0078                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0079                                                                 >  STOP
0080 END                                                                END
0081 OPEN "","ARS.SCREENS" TO M.SCREENS ELSE                            OPEN "","ARS.SCREENS" TO M.SCREENS ELSE
0082 ERRMSG = "CANNOT OPEN ARS.SCREENS FILE" ; GOSUB 93000           |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN ARS.SCREENS FILE";P
0083                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0084                                                                 >  STOP
0085 END                                                                END
0086 OPEN "","JCS.SCREENS" TO SECOND.SCREENS ELSE                       OPEN "","JCS.SCREENS" TO SECOND.SCREENS ELSE
0087 ERRMSG = "CANNOT OPEN JCS.SCREENS FILE" ; GOSUB 93000           |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN JCS.SCREENS FILE";P
0088                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0089                                                                 >  STOP
0090 END                                                                END

0091 OPEN "","TERMS" TO TERMS ELSE                                   |  *T23688 v 
0092 ERRMSG = "CANNOT OPEN TERMS FILE" ; GOSUB 93000                 |  OPEN "","CBN.SCREENS" TO THIRD.SCREENS ELSE
0093                                                                 >  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN CBN.SCREENS FILE";P
0094                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0095                                                                 >  STOP
0096 END                                                                END
0097                                                                 >  *T23688 ^

0098 OPEN "","CONTROL" TO CONTROL ELSE                                  OPEN "","CONTROL" TO CONTROL ELSE
0099 ERRMSG = "CANNOT OPEN CONTROL FILE" ; GOSUB 93000               |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN CONTROL FILE";P_OPT
0100                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0101                                                                 >  STOP
0102 END                                                                END
0103 OPEN "","COA" TO COA ELSE                                          OPEN "","COA" TO COA ELSE
0104 ERRMSG = "CANNOT OPEN COA FILE" ; GOSUB 93000                   |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN COA FILE";P_OPT = "
0105                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0106                                                                 >  STOP
0107 END                                                                END
0108 OPEN "","OPEN.RECV" TO OPEN.RECV ELSE                              OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
0109 ERRMSG = "CANNOT OPEN OPEN.RECV FILE" ; GOSUB 93000             |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN OPEN.RECV FILE";P_O
0110                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0111                                                                 >  STOP
0112 END                                                                END

0113 OPEN "","TAX" TO TAX ELSE                                          OPEN "","TAX" TO TAX ELSE
0114 ERRMSG = "CANNOT OPEN TAX FILE" ; GOSUB 93000                   |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN TAX FILE";P_OPT = "
0115                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0116                                                                 >  STOP
0117 END                                                                END
0118 OPEN "","DAILY.MANUAL.INVOICE" TO DAILY.MANUAL.INVOICE ELSE        OPEN "","DAILY.MANUAL.INVOICE" TO DAILY.MANUAL.INVOICE ELSE
0119 ERRMSG = "CANNOT OPEN DAILY.MANUAL.INVOICE FILE" ; GOSUB 93000  |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN DAILY.MANUAL.INVOIC
0120                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0121                                                                 >  STOP
0122 END                                                                END
0123 OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE                    OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE
0124 ERRMSG = "CANNOT OPEN MANUAL.INVOICE FILE" ; GOSUB 93000        |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN MANUAL.INVOICE FILE
0125                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0126                                                                 >  STOP
0127 END                                                                END

0128 OPEN "","CUSTOMER" TO CUSTOMER ELSE                                OPEN "","CUSTOMER" TO CUSTOMER ELSE
0129 ERRMSG = "CANNOT OPEN CUSTOMER FILE" ; GOSUB 93000              |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN CUSTOMER FILE";P_OP
0130                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0131                                                                 >  STOP
0132 END                                                                END
0133 OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE                      OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
0134 ERRMSG = "CANNOT OPEN CUSTOMER.XREF FILE" ; GOSUB 93000         |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN CUSTOMER.XREF FILE"
0135                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0136                                                                 >  STOP
0137 END                                                                END
0138 OPEN "","SALESMAN" TO SALESMAN ELSE                                OPEN "","SALESMAN" TO SALESMAN ELSE
0139 ERRMSG = "CANNOT OPEN SALESMAN FILE" ; GOSUB 93000              |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN SALESMAN FILE";P_OP
0140                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0141                                                                 >  STOP
0142 END                                                                END

0143 OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE                        OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
0144 ERRMSG = "CANNOT OPEN INVOICE.CODE FILE" ; GOSUB 93000          |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN INVOICE.CODE FILE";
0145                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0146                                                                 >  STOP
0147 END                                                                END
0148 OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE                      OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE
0149 ERRMSG = "CANNOT OPEN VOID.INVOICES FILE" ; GOSUB 93000         |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN VOID.INVOICES FILE"
0150                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0151                                                                 >  STOP
0152 END                                                                END
0153 OPEN "","SHIP.VIA" TO SHIP.VIA ELSE                                OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
0154 ERRMSG = "CANNOT OPEN SHIP.VIA FILE" ; GOSUB 93000              |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN SHIP.VIA FILE";P_OP
0155                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0156                                                                 >  STOP
0157 END                                                                END

0158 OPEN "","PREFIX" TO PREFIX ELSE                                    OPEN "","PREFIX" TO PREFIX ELSE
0159 ERRMSG = "CANNOT OPEN PREFIX FILE" ; GOSUB 93000                |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN PREFIX FILE";P_OPT 
0160                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0161                                                                 >  STOP
0162 END                                                                END
0163 OPEN "","DIVISION" TO DIVISION ELSE                                OPEN "","DIVISION" TO DIVISION ELSE
0164 ERRMSG = "CANNOT OPEN DIVISION FILE" ; GOSUB 93000              |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN DIVISION FILE";P_OP
0165                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0166                                                                 >  STOP
0167 END                                                                END
0168 OPEN "","DEPARTMENT" TO DEPARTMENT ELSE                            OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
0169 ERRMSG = "CANNOT OPEN DEPARTMENT FILE" ; GOSUB 93000            |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN DEPARTMENT FILE";P_
0170                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0171                                                                 >  STOP
0172 END                                                                END

0173 OPEN "","COST.CNTR" TO COST.CNTR ELSE                              OPEN "","COST.CNTR" TO COST.CNTR ELSE
0174 ERRMSG = "CANNOT OPEN COST.CNTR FILE" ; GOSUB 93000             |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN COST.CNTR FILE";P_O
0175                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0176                                                                 >  STOP
0177 END                                                                END
0178 OPEN "","SALES.CODE" TO SALES.CODE ELSE                            OPEN "","SALES.CODE" TO SALES.CODE ELSE
0179 ERRMSG = "CANNOT OPEN SALES.CODE FILE" ; GOSUB 93000            |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN SALES.CODE FILE";P_
0180                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)

0181                                                                 >  STOP
0182 END                                                                END
0183                                                                 >  *T22154 v
0184 OPEN "","COUNTRY.CODE" TO COUNTRY.CODE ELSE                        OPEN "","COUNTRY.CODE" TO COUNTRY.CODE ELSE
0185 ERRMSG = "CANNOT OPEN COUNTRY.CODE FILE" ; GOSUB 93000          |  P_X  = 0;P_Y = 23;P_VALUE = "CANNOT OPEN COUNTRY.CODE FILE";
0186                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0187                                                                 >  STOP

0188 END                                                                END
0189 OPEN "","XREF.DATA" TO XREF.DATA ELSE                           |  *T22154 ^
0190 ERRMSG = "CANNOT OPEN XREF.DATA FILE" ; GOSUB 93000             <  
0191 END                                                             <  
0192 *                                                                  *
0193 *-- INITIALIZATION                                                 *-- INITIALIZATION
0194 *                                                                  *
0195 MAT COMP.REC=""                                                    MAT COMP.REC=""

0194 *                                                                  *
0195 MAT COMP.REC=""                                                    MAT COMP.REC=""
0196 CONO=""                                                            CONO=""
0197 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0198 IF CONO="END" THEN GOTO 99999                                      IF CONO="END" THEN GOTO 99999
0199 LOGNAME = 'LOGNAME' ; CALL SYSVARS.SUB(LOGNAME); *T27646        <  
0200 MAT EDIT.COM.DRIVER=""                                             MAT EDIT.COM.DRIVER=""
0201 MAT SCV.REC=""                                                     MAT SCV.REC=""
0202                                                                 >  *     MAT EDIT.COM=""
0203 FILL = "#"                                                         FILL = "#"

0204 MAT GEN.XREF.REC=""                                                MAT GEN.XREF.REC=""
0205 OLD.NAME="";GXR.CO=CONO                                         |  OLD.NAME="";GXR.CO=CONO;GXR.HEADING<1,2>="DESCRIPTION"
0206 *GXR.ATT<1,1>=0;GXR.ATT<1,2>=1;GXR.LEN<1,1>=10;GXR.LEN<1,2>=30  |  GXR.ATT<1,1>=0;GXR.ATT<1,2>=1;GXR.LEN<1,1>=10;GXR.LEN<1,2>=3
0207 MAT EDIT.COM.DRIVER=""                                             MAT EDIT.COM.DRIVER=""
0208 ECD.SCRN.CNT=5                                                     ECD.SCRN.CNT=5
0209 ECD.SCRN.NAME<1>="MANUAL.INVOICE.MAINT.F4"                         ECD.SCRN.NAME<1>="MANUAL.INVOICE.MAINT.F4"
0210                                                                 >  ECD.SCRN.FLAG<1> = 3    ;*T23688
0211 ECD.SCRN.NAME<5>="MANUAL.INV.ALLOC.MAINT"                          ECD.SCRN.NAME<5>="MANUAL.INV.ALLOC.MAINT"

0212                                                                 >  *ECD.SCRN.FLAG<5> = 2
0213 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0214 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0215 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0216 REF.CNT=0                                                          REF.CNT=0
0217 REF.NO=""                                                          REF.NO=""
0218 CURR.REF.NO=""                                                     CURR.REF.NO=""

0218 CURR.REF.NO=""                                                     CURR.REF.NO=""
0219 LINE.COUNT=5                                                       LINE.COUNT=5
0220 BEGIN.PAGE=15                                                      BEGIN.PAGE=15
0221 PAGE.SIZE=5                                                        PAGE.SIZE=5
0222 LINE.SPACE=1                                                       LINE.SPACE=1
0223                                                                 >  *
0224                                                                 >  *17927
0225 MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE              MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
0226 RELEASE CONTROL, CONO:'GLTABLE'                                 |  RELEASE CONTROL, CONO:SYS.FISCAL
0227 ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'                          ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'

0228 GOSUB 93000                                                     |  GOTO 90000
0229 END                                                                END
0230 BAL.PTR = 0                                                        BAL.PTR = 0
0231 MENU = "MANUAL"                                                    MENU = "MANUAL"
0232 PROG.FLAG = ""                                                     PROG.FLAG = ""
0233 BAL.FLG = ""                                                       BAL.FLG = ""
0234                                                                 >  *

0244 110*                                                               110* 
0245 SCV.REC(1)<ECD.SCRN.NO>=DATE()                                     SCV.REC(1)<ECD.SCRN.NO>=DATE()
0246 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0247 GOSUB 1000                                                         GOSUB 1000
0248 IF ECD.RET.VALUE="END" THEN                                        IF ECD.RET.VALUE="END" THEN
0249                                                                 >  *          PRINT @(-1)
0250 STOP                                                               STOP
0251 END                                                                END
0252 NEW.REC=0                                                       |  *T23688 v
0253 MATREADU MIV.REC FROM DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"M  |  IF INVOICE.NO = 'N' THEN

0254 ERRMSG = 'MANUAL INVOICE record is locked by user - ':GETUSERN  |  NEW.REC = 1
0255 GOSUB 91000;GOTO 100                                            |  MAT MIV.REC = ""
0256 END ELSE                                                           END ELSE
0257                                                                 >  *T23688 ^
0258                                                                 >  NEW.REC=0
0259                                                                 >  MATREADU MIV.REC FROM DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:
0260 MAT MIV.REC=""                                                     MAT MIV.REC=""

0261 NEW.REC=1                                                          NEW.REC=1
0262 END                                                                END
0263                                                                 >  END    ;*T23688
0264 MODE=""                                                            MODE=""
0265 TMP.TAX.RATE=""                                                    TMP.TAX.RATE=""
0266 TMP.TAX.CALC=""                                                    TMP.TAX.CALC=""
0267 IF NEW.REC THEN                                                    IF NEW.REC THEN
0268 REF.CNT=0;REF.NO=1;CURR.REF.NO=1                                   REF.CNT=0;REF.NO=1;CURR.REF.NO=1
0269 FOR N=1 TO 11                                                   |  FOR N=1 TO 8

0270 ON N GOSUB 1100,1200,1250,1300,1350,1400,1450,1500,1600,1800,1  |  ON N GOSUB 1100,1200,1300,1400,1450,1500,1600,1800
0271 IF ECD.RET.VALUE="END" THEN GOTO 100                               IF ECD.RET.VALUE="END" THEN GOTO 100
0272 NEXT N                                                             NEXT N
0273 ACTION="A"                                                         ACTION="A"
0274 GOTO 502                                                           GOTO 502
0275 END ELSE                                                           END ELSE
0276 DIV.CODE = MIV.DIV; USER.ID = UPCASE(LOGNAME); ERRMSG = ''; *T  <  

0277 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0278 IF ERRMSG # '' THEN                                             <  
0279 GOSUB 91000; GOTO 100                                           <  
0280 END                                                             <  
0281 GOSUB 9000                                                         GOSUB 9000
0282 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0283 REF.NO=1                                                           REF.NO=1

0289 500*                                                               500* 
0290 GOSUB 5000                                                         GOSUB 5000
0291 ACTION=ECD.RET.VALUE                                               ACTION=ECD.RET.VALUE
0292 502*                                                               502* 
0293 BEGIN CASE                                                         BEGIN CASE
0294 CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 12; * T23932     |  CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 9
0295 N=ACTION                                                           N=ACTION
0296 ON N GOSUB 1100,1200,1250,1300,1350,1400,1450,1500,1600,1700,1  |  ON N GOSUB 1100,1200,1300,1400,1450,1500,1600,1700,1800
0297 CASE ACTION="A"                                                    CASE ACTION="A"
0298 MODE="A"                                                           MODE="A"

0354 SCV.REC(16)=INSERT(SCV.REC(16),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(16)=INSERT(SCV.REC(16),ECD.SCRN.NO,REF.NO,0,"")
0355 SCV.REC(17)=INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(17)=INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")
0356 SCV.REC(18)=INSERT(SCV.REC(18),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(18)=INSERT(SCV.REC(18),ECD.SCRN.NO,REF.NO,0,"")
0357 SCV.REC(30)=INSERT(SCV.REC(30),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(30)=INSERT(SCV.REC(30),ECD.SCRN.NO,REF.NO,0,"")
0358 SCV.REC(31)=INSERT(SCV.REC(31),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(31)=INSERT(SCV.REC(31),ECD.SCRN.NO,REF.NO,0,"")
0359                                                                 >  *17927
0360 SCV.REC(34)=INSERT(SCV.REC(34),ECD.SCRN.NO,REF.NO,0,"")            SCV.REC(34)=INSERT(SCV.REC(34),ECD.SCRN.NO,REF.NO,0,"")
0361 MIV.ALLOC.DIV=INSERT(MIV.ALLOC.DIV,1,REF.NO,0,"")                  MIV.ALLOC.DIV=INSERT(MIV.ALLOC.DIV,1,REF.NO,0,"")
0362 MIV.ALLOC.AMT=INSERT(MIV.ALLOC.AMT,1,REF.NO,0,"")                  MIV.ALLOC.AMT=INSERT(MIV.ALLOC.AMT,1,REF.NO,0,"")
0363                                                                 >  *

0377 END                                                                END
0378 CASE ACTION="S" AND REF.CNT > 0                                    CASE ACTION="S" AND REF.CNT > 0
0379 REF.NO=CURR.REF.NO + LINE.COUNT                                    REF.NO=CURR.REF.NO + LINE.COUNT
0380 IF REF.NO > REF.CNT THEN REF.NO=1                                  IF REF.NO > REF.CNT THEN REF.NO=1
0381 GOSUB 10000                                                        GOSUB 10000
0382 CASE ACTION = 'SR'                                              <  
0383 REF.NO = CURR.REF.NO - LINE.COUNT                               <  
0384 IF REF.NO < 1 THEN REF.NO = 1                                   <  
0385 GOSUB 10000                                                     <  
0386 CASE ACTION = 'ST'                                              <  

0387 REF.NO = 1                                                      <  
0388 GOSUB 10000                                                     <  
0389 CASE ACTION = 'SB'                                              <  
0390 REF.NO = REF.CNT                                                <  
0391 GOSUB 10000                                                     <  
0392 CASE ACTION="P"                                                    CASE ACTION="P"
0393 ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT

0402 VOI.ADDR3 = MIV.ADDR3                                              VOI.ADDR3 = MIV.ADDR3
0403 VOI.ADDR4 = MIV.ADDR4                                              VOI.ADDR4 = MIV.ADDR4
0404 VOI.PO = MIV.PO                                                    VOI.PO = MIV.PO
0405 VOI.SLSMAN = MIV.SLSMAN                                            VOI.SLSMAN = MIV.SLSMAN
0406 VOI.DEL.DATE = DATE()                                              VOI.DEL.DATE = DATE()
0407 VOI.DIV = MIV.DIV ;* T23278                                     <  
0408 MATWRITE VOI.REC ON VOID.INVOICES, CONO:INVOICE.NO:"MI"            MATWRITE VOI.REC ON VOID.INVOICES, CONO:INVOICE.NO:"MI"
0409 DELETE DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"                  DELETE DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"
0410 END                                                                END
0411 GOTO 100                                                           GOTO 100

0412 CASE ACTION="E" OR ACTION="END"                                    CASE ACTION="E" OR ACTION="END"
0413 GOTO 100                                                           GOTO 100
0414                                                                 >  * 17297
0415 CASE ACTION="R"                                                    CASE ACTION="R"
0416 GOSUB 5100                                                         GOSUB 5100
0417 IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN                  IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
0418 IF MIV.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN                       IF MIV.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN
0419 ERRMSG = "No revenue allocation for this line ":REF.NO             ERRMSG = "No revenue allocation for this line ":REF.NO
0420 GOSUB 91000                                                     |  GOSUB 90000

0425 END                                                                END
0426 END                                                                END
0427 GOSUB 10000                                                        GOSUB 10000
0428 CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0           CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0
0429 ERRMSG = "Allocation of line item on invoice does not balance"     ERRMSG = "Allocation of line item on invoice does not balanc
0430 GOSUB 91000                                                     |  GOSUB 90000
0431 GOTO 500                                                           GOTO 500
0432                                                                 >  *
0433 CASE ACTION="F"                                                    CASE ACTION="F"
0434                                                                 >  *T22154 v

0437 DONE = 0                                                           DONE = 0
0438 FOR Z = X+1 TO DCOUNT(MIV.UM,VM) UNTIL DONE                        FOR Z = X+1 TO DCOUNT(MIV.UM,VM) UNTIL DONE
0439 IF MIV.HIDDEN<1,Z> = "Y" THEN                                      IF MIV.HIDDEN<1,Z> = "Y" THEN
0440 IF MIV.UM<1,Z> # MIV.UM<1,X> THEN                                  IF MIV.UM<1,Z> # MIV.UM<1,X> THEN
0441 ERRMSG = "UM for hidden line ":Z:" does not match detail line      ERRMSG = "UM for hidden line ":Z:" does not match detail lin
0442 GOSUB 91000                                                     |  GOSUB 90000
0443 GOTO 500                                                           GOTO 500
0444 END                                                                END
0445 END ELSE                                                           END ELSE
0446 DONE = 1                                                           DONE = 1

0446 DONE = 1                                                           DONE = 1
0447 END                                                                END
0448 NEXT Z                                                             NEXT Z
0449 END                                                                END
0450 NEXT X                                                             NEXT X
0451                                                                 >  *T22154 ^
0452                                                                 >  *T23688 v
0453                                                                 >  IF INVOICE.NO="N" THEN
0454                                                                 >  LOOP
0455                                                                 >  READU INVOICE.NO FROM CONTROL, CONO:"NEXT.INVOICE.NO" ELSE I

0456                                                                 >  N.INVOICE.NO = INVOICE.NO + 1
0457                                                                 >  INVOICE.NO=STR("0",6-LEN(INVOICE.NO)):INVOICE.NO
0458                                                                 >  WRITE N.INVOICE.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"
0459                                                                 >  READ REC FROM DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI" THE
0460                                                                 >  READ REC FROM MANUAL.INVOICE, CONO:INVOICE.NO:"MI" THEN CONT
0461                                                                 >  READ REC FROM OPEN.RECV, CONO:INVOICE.NO:"MI" THEN CONTINUE
0462                                                                 >  EXIT

0463                                                                 >  REPEAT
0464                                                                 >  ECD.NUM=2;SCV.REC(2)<ECD.SCRN.NO>=INVOICE.NO
0465                                                                 >  ECD.ACTION=5;CALL SCRN.EDIT
0466                                                                 >  ERRMSG="Please note the new number";GOSUB 90000
0467                                                                 >  END
0468                                                                 >  *T23688 ^
0469 MIV.CCTR<1,1>="000"                                                MIV.CCTR<1,1>="000"

0469 MIV.CCTR<1,1>="000"                                                MIV.CCTR<1,1>="000"
0470 MATWRITE MIV.REC ON DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"MI"     MATWRITE MIV.REC ON DAILY.MANUAL.INVOICE, CONO:INVOICE.NO:"M
0471 GOTO 100                                                           GOTO 100
0472 END CASE                                                           END CASE
0473 GOTO 500                                                           GOTO 500
0474                                                                 >  *
0475 *-- DELETE SPECIFIC LINE                                           *-- DELETE SPECIFIC LINE
0476 *                                                                  *
0477 600*                                                               600* 
0478 MIV.CHG.CODE=DELETE(MIV.CHG.CODE,1,REF.NO,0)                       MIV.CHG.CODE=DELETE(MIV.CHG.CODE,1,REF.NO,0)

0491 SCV.REC(16)=DELETE(SCV.REC(16),ECD.SCRN.NO,REF.NO,0)               SCV.REC(16)=DELETE(SCV.REC(16),ECD.SCRN.NO,REF.NO,0)
0492 SCV.REC(17)=DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)               SCV.REC(17)=DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)
0493 SCV.REC(18)=DELETE(SCV.REC(18),ECD.SCRN.NO,REF.NO,0)               SCV.REC(18)=DELETE(SCV.REC(18),ECD.SCRN.NO,REF.NO,0)
0494 SCV.REC(30)=DELETE(SCV.REC(30),ECD.SCRN.NO,REF.NO,0)               SCV.REC(30)=DELETE(SCV.REC(30),ECD.SCRN.NO,REF.NO,0)
0495 SCV.REC(31)=DELETE(SCV.REC(31),ECD.SCRN.NO,REF.NO,0)               SCV.REC(31)=DELETE(SCV.REC(31),ECD.SCRN.NO,REF.NO,0)
0496                                                                 >  *17927
0497 SCV.REC(34) = DELETE(SCV.REC(34),ECD.SCRN.NO,REF.NO,0)             SCV.REC(34) = DELETE(SCV.REC(34),ECD.SCRN.NO,REF.NO,0)
0498 MIV.ALLOC.DIV=DELETE(MIV.ALLOC.DIV,1,REF.NO,0)                     MIV.ALLOC.DIV=DELETE(MIV.ALLOC.DIV,1,REF.NO,0)
0499 MIV.ALLOC.AMT=DELETE(MIV.ALLOC.AMT,1,REF.NO,0)                     MIV.ALLOC.AMT=DELETE(MIV.ALLOC.AMT,1,REF.NO,0)
0500 RETURN                                                             RETURN

0506 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0507 FND=1                                                              FND=1
0508 MATREAD OR.REC FROM OPEN.RECV, CONO:ECD.RET.VALUE:"MI" ELSE FN     MATREAD OR.REC FROM OPEN.RECV, CONO:ECD.RET.VALUE:"MI" ELSE 
0509 IF FND THEN                                                        IF FND THEN
0510 ERRMSG="Duplicate Invoice Number"                                  ERRMSG="Duplicate Invoice Number"
0511 GOSUB 91000                                                     |  GOSUB 90000
0512 GOTO 1000                                                          GOTO 1000
0513 END                                                                END
0514 FND=1                                                              FND=1
0515 READ REC FROM MANUAL.INVOICE, CONO:ECD.RET.VALUE:"MI" ELSE FND     READ REC FROM MANUAL.INVOICE, CONO:ECD.RET.VALUE:"MI" ELSE F

0516 IF FND THEN                                                        IF FND THEN
0517 ERRMSG="Duplicate Invoice Number"                                  ERRMSG="Duplicate Invoice Number"
0518 GOSUB 91000                                                     |  GOSUB 90000
0519 GOTO 1000                                                          GOTO 1000
0520 END                                                                END
0521 VOID = 1                                                           VOID = 1
0522 READ REC FROM VOID.INVOICES, CONO:ECD.RET.VALUE:"MI" ELSE VOID     READ REC FROM VOID.INVOICES, CONO:ECD.RET.VALUE:"MI" ELSE VO
0523 IF VOID THEN                                                       IF VOID THEN
0524 ERRMSG = 'Duplicate Invoice Number, exists on the Voided Invoi     ERRMSG = 'Duplicate Invoice Number, exists on the Voided Inv

0525 GOSUB 91000                                                     |  GOSUB 90000
0526 GOTO 1000                                                          GOTO 1000
0527 END                                                                END
0528 INVOICE.NO=ECD.RET.VALUE                                           INVOICE.NO=ECD.RET.VALUE
0529 RETURN                                                             RETURN
0530 *                                                                  *
0531 *-- GET CUSTOMER ID                                                *-- GET CUSTOMER ID

0536 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0537 IF ECD.RET.VALUE="" THEN                                           IF ECD.RET.VALUE="" THEN
0538 ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
0539 IF ECD.RET.VALUE="END" THEN GOTO 1100                              IF ECD.RET.VALUE="END" THEN GOTO 1100
0540 IF ECD.RET.VALUE="" THEN GOTO 1100                                 IF ECD.RET.VALUE="" THEN GOTO 1100
0541 GXR.NAME = "CUSTOMER"                                           |  GXR.XREF=CUSTOMER.XREF
0542 GXR.XREF = CUSTOMER.XREF                                        |  GXR.FILE=CUSTOMER;GXR.LOC=1;GXR.TOP.LINE="CUSTOMER XREF SEAR
0543 GXR.FILE = CUSTOMER                                             |  GXR.HEADING<1,1>="CUSTOMER";GXR.ID="";GXR.SRCH.ID=ECD.RET.VA
0544 GXR.SRCH.ID = ECD.RET.VALUE                                     |  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
0545 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  

0549 IF GXR.ID="" THEN GOTO 1100                                        IF GXR.ID="" THEN GOTO 1100
0550 ECD.RET.VALUE=GXR.ID                                               ECD.RET.VALUE=GXR.ID
0551 END                                                                END
0552 MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE            MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
0553 ERRMSG="Invalid Customer ID"                                       ERRMSG="Invalid Customer ID"
0554 GOSUB 91000                                                     |  GOSUB 90000
0555 GOTO 1100                                                          GOTO 1100
0556 END                                                                END
0557 MIV.CUST.NO=ECD.RET.VALUE                                          MIV.CUST.NO=ECD.RET.VALUE
0558 ECD.NUM = 3;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.CUST.NO            ECD.NUM = 3;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.CUST.NO

0558 ECD.NUM = 3;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.CUST.NO            ECD.NUM = 3;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.CUST.NO
0559 ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME              ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME
0560 ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1             ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1
0561 ECD.NUM = 9;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR2             ECD.NUM = 9;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR2
0562 ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3            ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3
0563                                                                 >  *T22154 v
0564 SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>                                  SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
0565                                                                 >  *T25159 v
0566                                                                 >  * READ COUNTRY FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY THEN
0567                                                                 >  *   SHIP.TO.CNTY = COUNTRY

0568                                                                 >  * END ELSE
0569                                                                 >  *   SHIP.TO.CNTY = ''
0570                                                                 >  * END
0571 MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT      MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MA
0572 SHIP.TO.CNTY = CTY.DESC                                            SHIP.TO.CNTY = CTY.DESC
0573                                                                 >  *T25159 ^
0574                                                                 >  *     ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR

0575 ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  ":C     ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  "
0576                                                                 >  *T22154 ^
0577 ECD.ACTION = 3;CALL SCRN.EDIT                                      ECD.ACTION = 3;CALL SCRN.EDIT
0578 ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME              ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.NAME
0579 ECD.ACTION = 4;CALL SCRN.EDIT                                      ECD.ACTION = 4;CALL SCRN.EDIT
0580 IF ECD.RET.VALUE = "END" THEN GOTO 1199                            IF ECD.RET.VALUE = "END" THEN GOTO 1199
0581 MIV.CUST.NAME = ECD.RET.VALUE                                      MIV.CUST.NAME = ECD.RET.VALUE
0582 ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1             ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR1

0589 MIV.ADDR2 = ECD.RET.VALUE                                          MIV.ADDR2 = ECD.RET.VALUE
0590 ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3            ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR3
0591 ECD.ACTION = 4;CALL SCRN.EDIT                                      ECD.ACTION = 4;CALL SCRN.EDIT
0592 IF ECD.RET.VALUE = "END" THEN GOTO 1199                            IF ECD.RET.VALUE = "END" THEN GOTO 1199
0593 MIV.ADDR3=ECD.RET.VALUE                                            MIV.ADDR3=ECD.RET.VALUE
0594                                                                 >  *T22154 v
0595                                                                 >  *     ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR
0596 ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  ":C     ECD.NUM = 11;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CUST.ADDR4:"  "
0597                                                                 >  *T22154 ^
0598 ECD.ACTION = 4;CALL SCRN.EDIT                                      ECD.ACTION = 4;CALL SCRN.EDIT

0597                                                                 >  *T22154 ^
0598 ECD.ACTION = 4;CALL SCRN.EDIT                                      ECD.ACTION = 4;CALL SCRN.EDIT
0599 IF ECD.RET.VALUE = "END" THEN GOTO 1199                            IF ECD.RET.VALUE = "END" THEN GOTO 1199
0600 MIV.ADDR4 = ECD.RET.VALUE                                          MIV.ADDR4 = ECD.RET.VALUE
0601 MIV.ATTENTION=CUST.ATTENTION                                       MIV.ATTENTION=CUST.ATTENTION
0602 MIV.TERMS = CUST.TERMS     ; * T25764                           <  
0603 1199*                                                              1199* 
0604 RETURN                                                             RETURN
0605 *                                                                  *
0606 *-- GET ATTENTION                                                  *-- GET ATTENTION

0610 ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT
0611 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0612 MIV.ATTENTION=ECD.RET.VALUE                                        MIV.ATTENTION=ECD.RET.VALUE
0613 RETURN                                                             RETURN
0614 *                                                                  *
0615 *-- GET SHIP TO ATTENTION                                       <  
0616 *                                                               <  
0617 1250*                                                           <  
0618 SCV.REC(36)<ECD.SCRN.NO>=MIV.SHIPTO.ATTN                        <  
0619 ECD.NUM=36;ECD.ACTION=4;CALL SCRN.EDIT                          <  

0620 IF ECD.RET.VALUE="END" THEN RETURN                              <  
0621 MIV.SHIPTO.ATTN=ECD.RET.VALUE                                   <  
0622 RETURN                                                          <  
0623 *T23932 ^                                                       <  
0624 *                                                               <  
0625 *-- GET SALESMAN                                                   *-- GET SALESMAN
0626 *                                                                  *

0626 *                                                                  *
0627 1300*                                                              1300* 
0628 SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN                                SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN
0629 ECD.DEFAULT=CUST.SALESMAN                                          ECD.DEFAULT=CUST.SALESMAN
0630 ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
0631 BEGIN CASE                                                      |  IF ECD.RET.VALUE="END" THEN RETURN
0632 CASE ECD.RET.VALUE = "END"                                      <  
0633 RETURN                                                          <  
0634 CASE ECD.RET.VALUE = "???"                                      <  
0635 GXR.NAME = "SALESMAN2"                                          <  

0636 GXR.SORT.FILE = "SALESMAN"; GXR.FILE = SALESMAN                 <  
0637 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
0638 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  
0639 SCV.REC(ECD.NUM)<ECD.SCRN.NO>=""                                <  
0640 ECD.ACTION=3;CALL SCRN.EDIT                                     <  
0641 IF GXR.ID = "" THEN GOTO 1300                                   <  
0642 ECD.RET.VALUE = GXR.ID                                          <  

0643 END CASE                                                        <  
0644 MATREAD SALESMAN.REC FROM SALESMAN, CONO:ECD.RET.VALUE ELSE        MATREAD SALESMAN.REC FROM SALESMAN, CONO:ECD.RET.VALUE ELSE
0645 ERRMSG="Invalid Salesman ID"                                       ERRMSG="Invalid Salesman ID"
0646 GOSUB 91000                                                     |  GOSUB 90000
0647 GOTO 1300                                                          GOTO 1300
0648 END                                                                END
0649 MIV.SLSMAN=ECD.RET.VALUE                                           MIV.SLSMAN=ECD.RET.VALUE

0650 SCV.REC(12)<ECD.SCRN.NO>=MIV.SLSMAN                             <  
0651 SCV.REC(13)<ECD.SCRN.NO>=SALS.NAME                                 SCV.REC(13)<ECD.SCRN.NO>=SALS.NAME
0652 ECD.ACTION=3;CALL SCRN.EDIT                                     |  ECD.NUM=13;ECD.ACTION=5;CALL SCRN.EDIT
0653 RETURN                                                             RETURN
0654 *                                                                  *
0655 *-- GET EMAIL FLAG                                              <  
0656 *                                                               <  

0657 1350                                                            <  
0658 ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0659 IF ECD.RET.VALUE#'END' THEN                                     <  
0660 MIV.PRT.FLG<1>='Y' ; MIV.PRT.FLG<1,2>=ECD.RET.VALUE             <  
0661 END                                                             <  
0662 RETURN                                                          <  
0663 *                                                               <  

0682 1500*                                                              1500* 
0683 * ECD.MINV=DATE()-365                                              * ECD.MINV=DATE()-365
0684 ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
0685 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0686 MIV.DATE=ECD.RET.VALUE                                             MIV.DATE=ECD.RET.VALUE
0687 IF MIV.TERMS # "" THEN                                          <  
0688 MATREAD TERMS.REC FROM TERMS, CONO : MIV.TERMS THEN             <  
0689 MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS                        <  
0690 ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DUE.DATE       <  
0691 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  

0692 END                                                             <  
0693 END                                                             <  
0694 RETURN                                                             RETURN
0695 *                                                                  *
0696 *-- GET DIVISION                                                   *-- GET DIVISION
0697 *                                                                  *
0698 1600*                                                              1600* 

0722 ECD.RET.VALUE=SNO<ECD.RET.VALUE>                                   ECD.RET.VALUE=SNO<ECD.RET.VALUE>
0723 ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE             ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE
0724 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0725 END                                                                END
0726 IF ECD.RET.VALUE="00" THEN                                         IF ECD.RET.VALUE="00" THEN
0727 DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(LOGNAME); ERRMSG =   <  
0728 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0729 IF ERRMSG # '' THEN                                             <  
0730 GOSUB 91000; GOTO 1600                                          <  
0731 END                                                             <  

0733 ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=MIV.DIV                   ECD.NUM=26;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=MIV.DIV
0734 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0735 GOTO 1700                                                          GOTO 1700
0736 END                                                                END
0737 MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE             MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
0738 ERRMSG="Division ":ECD.RET.VALUE:" is not on file";GOSUB 91000  |  ERRMSG="Division ":ECD.RET.VALUE:" is not on file";GOSUB 900
0739 END                                                                END
0740 DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(LOGNAME); ERRMSG =   <  
0741 CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               <  
0742 IF ERRMSG # '' THEN                                             <  

0743 GOSUB 91000; GOTO 1600                                          <  
0744 END                                                             <  
0745 MIV.DIV=ECD.RET.VALUE                                              MIV.DIV=ECD.RET.VALUE
0746 *                                                                  *
0747 *-- GET DEPARTMENT                                                 *-- GET DEPARTMENT
0748 *                                                                  *
0749 1700*                                                              1700* 

0787 ECD.ACTION=5;CALL SCRN.EDIT                                        ECD.ACTION=5;CALL SCRN.EDIT
0788 GOTO 1799                                                          GOTO 1799
0789 END                                                                END
0790 LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE             LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE
0791 ERRMSG="Department ":ECD.RET.VALUE:" is not valid for this div     ERRMSG="Department ":ECD.RET.VALUE:" is not valid for this d
0792 GOSUB 91000;GOTO 1700                                           |  GOSUB 90000;GOTO 1700
0793 END                                                                END
0794 MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE          MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
0795 ERRMSG="Department ":ECD.RET.VALUE:" is not on file";GOSUB 910  |  ERRMSG="Department ":ECD.RET.VALUE:" is not on file";GOSUB 9
0796 END                                                                END

0803 1800*                                                              1800* 
0804 ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT
0805 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0806 IF ECD.RET.VALUE # "" THEN                                         IF ECD.RET.VALUE # "" THEN
0807 MATREAD SLC.REC FROM SALES.CODE, CONO : ECD.RET.VALUE ELSE         MATREAD SLC.REC FROM SALES.CODE, CONO : ECD.RET.VALUE ELSE
0808 ERRMSG="Invalid Sales Code";GOSUB 91000;GOTO 1800               |  ERRMSG="Invalid Sales Code";GOSUB 90000;GOTO 1800
0809 END                                                                END
0810 END                                                                END
0811 MIV.SALES.CODE=ECD.RET.VALUE                                       MIV.SALES.CODE=ECD.RET.VALUE
0812 RETURN                                                             RETURN

0813 *                                                                  *
0814 *-- GET TERMS CODE                                              <  
0815 *                                                               <  
0816 1900*                                                           <  
0817 ECD.DEFAULT = MIV.TERMS                                         <  
0818 ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0819 IF ECD.RET.VALUE="END" THEN RETURN                              <  
0820 IF ECD.RET.VALUE = "???" THEN                                   <  

0821 GXR.CO = CONO                                                   <  
0822 GXR.NAME = "TERMS"                                              <  
0823 GXR.FILE = TERMS                                                <  
0824 GXR.SORT.FILE = TERMS                                           <  
0825 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)          <  
0826 ECD.ACTION = 2 ; CALL SCRN.EDIT                                 <  
0827 IF GXR.ID = "" THEN GOTO 1900                                   <  

0828 ECD.ACTION = 3 ; CALL SCRN.EDIT                                 <  
0829 ECD.NUM = 40 ; SCV.REC(40)<ECD.SCRN.NO> = GXR.ID                <  
0830 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0831 ECD.RET.VALUE = GXR.ID                                          <  
0832 END                                                             <  
0833 IF ECD.RET.VALUE # "" THEN                                      <  
0834 MATREAD TERMS.REC FROM TERMS, CONO : ECD.RET.VALUE ELSE         <  

0835 ERRMSG="Invalid Terms Code";GOSUB 91000;GOTO 1900               <  
0836 END                                                             <  
0837 END                                                             <  
0838 MIV.TERMS=ECD.RET.VALUE                                         <  
0839 MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS                        <  
0840 ECD.NUM = 41;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TERMS.DESC         <  
0841 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  

0842 ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = MIV.DUE.DATE       <  
0843 ECD.ACTION = 5 ; CALL SCRN.EDIT                                 <  
0844 RETURN                                                          <  
0845 *                                                               <  
0846 *-- GET OPERATOR REQUEST                                           *-- GET OPERATOR REQUEST
0847 *                                                                  *
0848 5000*                                                              5000* 

0874 ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
0875 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0876 BEGIN CASE                                                         BEGIN CASE
0877 CASE ECD.RET.VALUE="SUB" OR ECD.RET.VALUE="SUBT"                   CASE ECD.RET.VALUE="SUB" OR ECD.RET.VALUE="SUBT"
0878 MAT INC.REC=""                                                     MAT INC.REC=""
0879                                                                 >  *T21520  INC.DESC=SPACE(31):"SUB TOTAL"
0880 INC.DESC=SPACE(27):"SUB TOTAL"                                     INC.DESC=SPACE(27):"SUB TOTAL"
0881 CASE ECD.RET.VALUE="TOT"                                           CASE ECD.RET.VALUE="TOT"
0882 MAT INC.REC=""                                                     MAT INC.REC=""
0883                                                                 >  *T21520  INC.DESC=SPACE(35):"TOTAL"

0883                                                                 >  *T21520  INC.DESC=SPACE(35):"TOTAL"
0884 INC.DESC=SPACE(31):"TOTAL"                                         INC.DESC=SPACE(31):"TOTAL"
0885 CASE 1                                                             CASE 1
0886 MATREAD INC.REC FROM INVOICE.CODE, CONO:ECD.RET.VALUE ELSE         MATREAD INC.REC FROM INVOICE.CODE, CONO:ECD.RET.VALUE ELSE
0887 ERRMSG="Invalid Invoice Code"                                      ERRMSG="Invalid Invoice Code"
0888 GOSUB 91000                                                     |  GOSUB 90000
0889 GOTO 6010                                                          GOTO 6010
0890 END                                                                END
0891 IF INC.HIDDEN="Y" AND REF.NO=1 THEN                                IF INC.HIDDEN="Y" AND REF.NO=1 THEN
0892 ERRMSG="Hidden line cannot be first line entered"                  ERRMSG="Hidden line cannot be first line entered"

0893 GOSUB 91000;GOTO 6010                                           |  GOSUB 90000;GOTO 6010
0894 END                                                                END
0895 END CASE                                                           END CASE
0896 MIV.CHG.CODE<1,REF.NO>=ECD.RET.VALUE                               MIV.CHG.CODE<1,REF.NO>=ECD.RET.VALUE
0897 MIV.CHG.CAT<1,REF.NO>=INC.CATEGORY                                 MIV.CHG.CAT<1,REF.NO>=INC.CATEGORY
0898 MIV.HIDDEN<1,REF.NO>=INC.HIDDEN                                    MIV.HIDDEN<1,REF.NO>=INC.HIDDEN
0899 6012*                                                              6012* 

0906 ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
0907 ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
0908 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0909 MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE                  MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
0910 ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"             ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
0911 GOSUB 91000                                                     |  GOSUB 90000
0912 GOTO 6012                                                          GOTO 6012
0913 END                                                                END
0914 MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE                               MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
0915 TMP.TAX.RATE<1,REF.NO>=TAX.RATE                                    TMP.TAX.RATE<1,REF.NO>=TAX.RATE

0924 ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
0925 ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
0926 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN
0927 MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE        MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
0928 ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"                 ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"
0929 GOSUB 91000                                                     |  GOSUB 90000
0930 GOTO 6012                                                          GOTO 6012
0931 END                                                                END
0932 MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE                               MIV.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
0933 TMP.TAX.RATE<1,REF.NO>=""                                          TMP.TAX.RATE<1,REF.NO>=""

0942 ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
0943 ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
0944 IF ECD.RET.VALUE = "END" THEN RETURN                               IF ECD.RET.VALUE = "END" THEN RETURN
0945 MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE           MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
0946 ERRMSG="Sales code ":ECD.RET.VALUE:" is not on file"               ERRMSG="Sales code ":ECD.RET.VALUE:" is not on file"
0947 GOSUB 91000                                                     |  GOSUB 90000
0948 GOTO 6012                                                          GOTO 6012
0949 END                                                                END
0950 MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE                             MIV.TAX.JURS<1,REF.NO> = ECD.RET.VALUE
0951 MIV.TAXABLE<1,REF.NO> = ""                                         MIV.TAXABLE<1,REF.NO> = ""

0984 CASE 1                                                             CASE 1
0985 ECD.RET.VALUE=""                                                   ECD.RET.VALUE=""
0986 SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""                                 SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""
0987 ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT          ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
0988 END CASE                                                           END CASE
0989                                                                 >  *T22154 v
0990 IF MIV.HIDDEN<1,REF.NO> = "Y" THEN                                 IF MIV.HIDDEN<1,REF.NO> = "Y" THEN
0991                                                                 >  *T22759 CHG DONE TO XDONE v
0992 XDONE = 0                                                          XDONE = 0
0993 FOR X = REF.NO-1 TO 1 STEP -1 UNTIL XDONE                          FOR X = REF.NO-1 TO 1 STEP -1 UNTIL XDONE

0992 XDONE = 0                                                          XDONE = 0
0993 FOR X = REF.NO-1 TO 1 STEP -1 UNTIL XDONE                          FOR X = REF.NO-1 TO 1 STEP -1 UNTIL XDONE
0994 IF MIV.HIDDEN<1,X> # "Y" THEN                                      IF MIV.HIDDEN<1,X> # "Y" THEN
0995 IF MIV.UM<1,X> # ECD.RET.VALUE THEN                                IF MIV.UM<1,X> # ECD.RET.VALUE THEN
0996 ERRMSG = "UM must match the associated detail line ":X             ERRMSG = "UM must match the associated detail line ":X
0997 GOSUB 91000                                                     |  GOSUB 90000
0998                                                                 >  *T22747      GOTO 6025
0999 GOTO 6000                                                          GOTO 6000
1000 END                                                                END
1001 XDONE = 1                                                          XDONE = 1

1003 NEXT X                                                             NEXT X
1004 END ELSE                                                           END ELSE
1005 IF MIV.HIDDEN<1,REF.NO +1> = "Y" THEN                              IF MIV.HIDDEN<1,REF.NO +1> = "Y" THEN
1006 IF MIV.UM<1,REF.NO+1> # ECD.RET.VALUE THEN                         IF MIV.UM<1,REF.NO+1> # ECD.RET.VALUE THEN
1007 ERRMSG = "Please change UM for assciated hidden lines "            ERRMSG = "Please change UM for assciated hidden lines "
1008 GOSUB 91000                                                     |  GOSUB 90000
1009 END                                                                END
1010 END                                                                END
1011 END                                                                END
1012                                                                 >  *T22154 ^

1013 MIV.UM<1,REF.NO>=ECD.RET.VALUE                                     MIV.UM<1,REF.NO>=ECD.RET.VALUE
1014 *                                                                  *
1015 *-- GET DESCRIPTION                                                *-- GET DESCRIPTION
1016 *                                                                  *
1017 6030*                                                              6030* 
1018 IF SCV.REC(17)<ECD.SCRN.NO,REF.NO> # '' THEN INC.DESC=SCV.REC(  <  
1019 SCV.REC(17)<ECD.SCRN.NO,REF.NO> = INC.DESC ; *T23324  ;*T23460     SCV.REC(17)<ECD.SCRN.NO,REF.NO> = INC.DESC ; *T23324 ;*T2346
1020 ECD.DEFAULT=INC.DESC                                               ECD.DEFAULT=INC.DESC
1021 ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1022 IF ECD.RET.VALUE="END" THEN RETURN                                 IF ECD.RET.VALUE="END" THEN RETURN

1048 ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1049 ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532         ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
1050 IF ECD.RET.VALUE = "END" THEN GOTO 6010                            IF ECD.RET.VALUE = "END" THEN GOTO 6010
1051 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE                                 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1052 CASE MIV.UM<1,REF.NO>="M"                                          CASE MIV.UM<1,REF.NO>="M"
1053                                                                 >  * T 22168 v
1054                                                                 >  *                 FACTOR=1000
1055 FACTOR=10000                                                       FACTOR=10000
1056 CASE MIV.UM<1,REF.NO>="C"                                          CASE MIV.UM<1,REF.NO>="C"
1057                                                                 >  *                 FACTOR=100

1058 FACTOR=1000                                                        FACTOR=1000
1059 CASE 1                                                             CASE 1
1060                                                                 >  *                 FACTOR=1
1061 FACTOR=10                                                          FACTOR=10
1062                                                                 >  * T 22168 ^
1063 END CASE                                                           END CASE
1064 IF MIV.UNIT.PRICE<1,REF.NO> # "" THEN                              IF MIV.UNIT.PRICE<1,REF.NO> # "" THEN
1065 MIV.AMOUNT<1,REF.NO>=(MIV.QUANTITY<1,REF.NO>/FACTOR)*MIV.UNIT.     MIV.AMOUNT<1,REF.NO>=(MIV.QUANTITY<1,REF.NO>/FACTOR)*MIV.UNI
1066 IF MIV.AMOUNT<1,REF.NO> > 0 THEN                                   IF MIV.AMOUNT<1,REF.NO> > 0 THEN

1104 X = 0                                                              X = 0
1105 Y = 22                                                             Y = 22
1106 TYP = 14                                                           TYP = 14
1107 SCALER = 2                                                         SCALER = 2
1108 IF ECD.RET.VALUE < 0 THEN                                          IF ECD.RET.VALUE < 0 THEN
1109                                                                 >  *T22154 v               MINV = -99999999.99
1110 MINV = "-99999999.99"                                              MINV = "-99999999.99"
1111 MAXV = 0                                                           MAXV = 0
1112 END ELSE                                                           END ELSE
1113 MINV = 0                                                           MINV = 0

1114                                                                 >  *T22154 v               MAXV = 99999999.99
1115 MAXV = "99999999.99"                                               MAXV = "99999999.99"
1116 END                                                                END
1117 MAXL = 12                                                          MAXL = 12
1118 PMSG ="Enter Taxable amount : "                                    PMSG ="Enter Taxable amount : "
1119 CALL EDIT.SUB                                                      CALL EDIT.SUB
1120                                                                 >  *T22154 v

1121 P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"                   P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
1122 CALL VSI_PLINE(P_X, P_Y, P_VALUE, P_OPT)                           CALL VSI_PLINE(P_X, P_Y, P_VALUE, P_OPT)
1123                                                                 >  *T22154 ^             
1124 IF VALUE = "END" THEN GOTO 6040                                    IF VALUE = "END" THEN GOTO 6040
1125 IF VALUE = "" THEN GOTO 6045                                       IF VALUE = "" THEN GOTO 6045
1126 MIV.TAXABLE<1,REF.NO> = VALUE                                      MIV.TAXABLE<1,REF.NO> = VALUE
1127 END                                                                END
1128 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE                                 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1129 END                                                                END

1154 ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532         ECD.MINV = "-99999999.99";ECD.MAXV = "99999999.99";*T20532
1155 ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT          ECD.NUM=18;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
1156 IF ECD.RET.VALUE = "END" THEN GOTO 6010                            IF ECD.RET.VALUE = "END" THEN GOTO 6010
1157 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE                                 MIV.AMOUNT<1,REF.NO>=ECD.RET.VALUE
1158 END CASE                                                           END CASE
1159                                                                 >  *T21984 v  modify test below to not test amount > 0
1160                                                                 >  **      IF CO.ALLOC.FLG = "Y" AND MIV.AMOUNT<1,REF.NO> > 0 T
1161 IF CO.ALLOC.FLG = "Y" THEN                                         IF CO.ALLOC.FLG = "Y" THEN
1162                                                                 >  *T21984 ^
1163                                                                 >  

1164                                                                 >  * 17927
1165 IF MIV.CHG.CAT<1,REF.NO> = "MSC" OR MIV.CHG.CAT<1,REF.NO> = "O     IF MIV.CHG.CAT<1,REF.NO> = "MSC" OR MIV.CHG.CAT<1,REF.NO> = 
1166 GOSUB 7000                                                         GOSUB 7000
1167 END                                                                END
1168 END                                                                END
1169 6099*                                                              6099* 
1170 IF SCV.REC(23)<ECD.SCRN.NO> # "" THEN                              IF SCV.REC(23)<ECD.SCRN.NO> # "" THEN

1218 CASE MODE="C" AND REF.NO >= REF                                    CASE MODE="C" AND REF.NO >= REF
1219 CASE MODE="D" AND REF.NO > REF                                     CASE MODE="D" AND REF.NO > REF
1220 CASE MODE="I" AND REF.NO > REF                                     CASE MODE="I" AND REF.NO > REF
1221 CASE 1                                                             CASE 1
1222 ERRMSG="Tax entry on line ":REF:" may be affected"                 ERRMSG="Tax entry on line ":REF:" may be affected"
1223 GOSUB 91000                                                     |  GOSUB 90000
1224 END CASE                                                           END CASE
1225 END ELSE                                                           END ELSE
1226 AMT=TAMT                                                           AMT=TAMT
1227 MIV.AMOUNT<1,REF>=AMT                                              MIV.AMOUNT<1,REF>=AMT

1264 TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100-0.5)           TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100-0.5)
1265 END ELSE                                                           END ELSE
1266 TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)           TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)
1267 END                                                                END
1268 RETURN                                                             RETURN
1269                                                                 >  *
1270                                                                 >  *
1271 7000* INV ALLOC                                                    7000* INV ALLOC
1272 * 17927                                                            * 17927
1273 IF CO.ALLOC.FLG = "Y" THEN                                         IF CO.ALLOC.FLG = "Y" THEN

1310 IF BAL.FLG = "Y" THEN                                              IF BAL.FLG = "Y" THEN
1311 SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""                               SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""
1312 END                                                                END
1313 LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE BA     LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE 
1314 ECD.ACTION = 3;CALL SCRN.EDIT                                      ECD.ACTION = 3;CALL SCRN.EDIT
1315 *T27524  CURR.REF.NO = REF.NO - 1                               |  CURR.REF.NO = REF.NO - 1
1316 *T27524  GOSUB 10000                                            |  GOSUB 10000
1317 START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT          <  
1318 GOSUB 10001                                                     <  
1319 IF BAL.FLG = "P" THEN                                              IF BAL.FLG = "P" THEN

1320 ERRMSG = "Revenue Distribution Could be Wrong check Line"          ERRMSG = "Revenue Distribution Could be Wrong check Line"
1321 GOSUB 91000                                                     |  GOSUB 90000
1322 ACTION = "C"                                                       ACTION = "C"
1323 GOTO 500                                                           GOTO 500
1324 END                                                                END
1325 END                                                                END
1326                                                                 >  *
1327 RETURN                                                             RETURN

1335 END                                                                END
1336 MATREAD SALESMAN.REC FROM SALESMAN, CONO:MIV.SLSMAN ELSE           MATREAD SALESMAN.REC FROM SALESMAN, CONO:MIV.SLSMAN ELSE
1337 MAT SALESMAN.REC=""                                                MAT SALESMAN.REC=""
1338 SALS.NAME="????????????????????"                                   SALS.NAME="????????????????????"
1339 END                                                                END
1340 MATREAD TERMS.REC FROM TERMS, CONO:MIV.TERMS ELSE               <  
1341 MAT TERMS.REC=""                                                <  
1342 TERMS.DESC="????????????????????"                               <  
1343 END                                                             <  
1344 IF MIV.DIV # "00" THEN                                             IF MIV.DIV # "00" THEN

1358 SCV.REC(4)<ECD.SCRN.NO>=MIV.JOB.NO                                 SCV.REC(4)<ECD.SCRN.NO>=MIV.JOB.NO
1359 SCV.REC(8)<ECD.SCRN.NO>=MIV.DATE                                   SCV.REC(8)<ECD.SCRN.NO>=MIV.DATE
1360 SCV.REC(26)<ECD.SCRN.NO>=MIV.DIV                                   SCV.REC(26)<ECD.SCRN.NO>=MIV.DIV
1361 SCV.REC(27)<ECD.SCRN.NO>=MIV.DEPT<1,1>                             SCV.REC(27)<ECD.SCRN.NO>=MIV.DEPT<1,1>
1362 SCV.REC(29)<ECD.SCRN.NO>=MIV.ATTENTION                             SCV.REC(29)<ECD.SCRN.NO>=MIV.ATTENTION
1363 SCV.REC(36)<ECD.SCRN.NO>=MIV.SHIPTO.ATTN                        <  
1364 SCV.REC(32)<ECD.SCRN.NO>=MIV.SALES.CODE                            SCV.REC(32)<ECD.SCRN.NO>=MIV.SALES.CODE
1365 SCV.REC(33)<ECD.SCRN.NO>=MIV.SHP.DATE                              SCV.REC(33)<ECD.SCRN.NO>=MIV.SHP.DATE
1366 SCV.REC(40)<ECD.SCRN.NO>=MIV.TERMS                              <  
1367 SCV.REC(41)<ECD.SCRN.NO>=TERMS.DESC                             <  

1368 MIV.DUE.DATE = MIV.DATE + TERMS.DUE.DAYS                        <  
1369 SCV.REC(42)<ECD.SCRN.NO>=MIV.DUE.DATE                           <  
1370 SCV.REC(43)<ECD.SCRN.NO>=MIV.PRT.FLG<1,2>                       <  
1371 REF.CNT=COUNT(MIV.CHG.CODE,VM) + (MIV.CHG.CODE # "")               REF.CNT=COUNT(MIV.CHG.CODE,VM) + (MIV.CHG.CODE # "")
1372 FOR REF=1 TO REF.CNT                                               FOR REF=1 TO REF.CNT
1373 SCV.REC(15)<ECD.SCRN.NO,REF>=MIV.CHG.CODE<1,REF>                   SCV.REC(15)<ECD.SCRN.NO,REF>=MIV.CHG.CODE<1,REF>
1374 SCV.REC(16)<ECD.SCRN.NO,REF>=MIV.QUANTITY<1,REF>                   SCV.REC(16)<ECD.SCRN.NO,REF>=MIV.QUANTITY<1,REF>

1378 SCV.REC(31)<ECD.SCRN.NO,REF>=MIV.UNIT.PRICE<1,REF>                 SCV.REC(31)<ECD.SCRN.NO,REF>=MIV.UNIT.PRICE<1,REF>
1379 IF MIV.CHG.CAT<1,REF>="TAX" THEN                                   IF MIV.CHG.CAT<1,REF>="TAX" THEN
1380 MATREAD TAX.REC FROM TAX, CONO:MIV.TAX.JURS<1,REF> ELSE            MATREAD TAX.REC FROM TAX, CONO:MIV.TAX.JURS<1,REF> ELSE
1381 MAT TAX.REC=""                                                     MAT TAX.REC=""
1382 ERRMSG="Invalid Tax Jurisdiction - ":MIV.TAX.JURS                  ERRMSG="Invalid Tax Jurisdiction - ":MIV.TAX.JURS
1383 GOSUB 91000                                                     |  GOSUB 90000
1384 END                                                                END
1385 TMP.TAX.RATE<1,REF>=TAX.RATE                                       TMP.TAX.RATE<1,REF>=TAX.RATE
1386 TAX.REF=REF                                                        TAX.REF=REF
1387 GOSUB 6400                                                         GOSUB 6400

1398 *-- DISPLAY MULTI-LINE FIELDS                                      *-- DISPLAY MULTI-LINE FIELDS
1399 *                                                                  *
1400 10000*                                                             10000* 
1401 START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT             START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
1402 IF START.REF.NO=CURR.REF.NO THEN RETURN                            IF START.REF.NO=CURR.REF.NO THEN RETURN
1403 10001*                                                          <  
1404 CURR.REF.NO=START.REF.NO                                           CURR.REF.NO=START.REF.NO
1405 ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E
1406 ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E
1407 ECD.NUM=32;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDI     ECD.NUM=32;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.E

1424 CASE ECD.RET.VALUE="END" OR ECD.RET.VALUE="N"                      CASE ECD.RET.VALUE="END" OR ECD.RET.VALUE="N"
1425 GOTO 20999                                                         GOTO 20999
1426 CASE NUM(ECD.RET.VALUE)                                            CASE NUM(ECD.RET.VALUE)
1427 IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN        IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN
1428 ERRMSG="** OUT OF RANGE **"                                        ERRMSG="** OUT OF RANGE **"
1429 GOSUB 91000                                                     |  GOSUB 90000
1430 END ELSE                                                           END ELSE
1431 GOTO 20999                                                         GOTO 20999
1432 END                                                                END
1433 CASE ECD.RET.VALUE="S"                                             CASE ECD.RET.VALUE="S"

1432 END                                                                END
1433 CASE ECD.RET.VALUE="S"                                             CASE ECD.RET.VALUE="S"
1434 LN=LN + PAGE.SIZE                                                  LN=LN + PAGE.SIZE
1435 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
1436 GOSUB 21000                                                        GOSUB 21000
1437 CASE ECD.RET.VALUE = 'SR'                                       <  
1438 LN -= PAGE.SIZE                                                 <  
1439 IF LN < 1 THEN LN = 1                                           <  
1440 GOSUB 21000                                                     <  
1441 CASE ECD.RET.VALUE = 'ST'                                       <  

1442 LN = 1                                                          <  
1443 GOSUB 21000                                                     <  
1444 CASE ECD.RET.VALUE = 'SB'                                       <  
1445 LN = LINES                                                      <  
1446 GOSUB 21000                                                     <  
1447 END CASE                                                           END CASE
1448 GOTO 20000                                                         GOTO 20000

1475 NEXT NN                                                            NEXT NN
1476 RETURN                                                             RETURN
1477 *                                                                  *
1478 *-- ERROR ROUTINE                                                  *-- ERROR ROUTINE
1479 *                                                                  *
1480 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN             |  90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1481 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                    |  * 90000*
1482                                                                 >  *       PRINT @(0,23):CL:ERRMSG:
1483                                                                 >  *       INPUT REPLY,1:
1484                                                                 >  *       PRINT @(0,23):CL:

1485                                                                 >  *       RETURN
1486                                                                 >  *
1487 *-- END OF PROGRAM                                                 *-- END OF PROGRAM
1488 *                                                                  *
1489 99999*                                                             99999* 
1490 STOP                                                               STOP
1491 END                                                                END


ARSBP/CUST.SUM.AGING                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CUST.SUM.AGING
Printed for thompson at 06/28/2006 04:03:54PM

0014 * This program prints the aged receivables summary listing in      * This program prints the aged receivables summary listing i
0015 * sequence.                                                        * sequence.
0016 * MODIFIED 3.23.89 TASK 13921 TO USE INVOICE DATE FOR AGING IN     * MODIFIED 3.23.89 TASK 13921 TO USE INVOICE DATE FOR AGING 
0017 * TASK 15568 DLG 11/06/90 CORRECTED AGING REPORT                   * TASK 15568 DLG 11/06/90 CORRECTED AGING REPORT
0018 * TASK 20532 JR EXPAND INVOICE AMOUNT TO 8.2                       * TASK 20532 JR EXPAND INVOICE AMOUNT TO 8.2
0019 *T26493 cmykleb 03/25/2002 * Change report to use rpt # from p  |  *T25134 aron 06/01/2000 * Add "Division : " Text to top of r
0020 *                            call GET.PROG.HEAD for the headin  <  
0021 *T28822 wvaughan 04/19/2006 * Include the credits in with the   <  
0022 *                             receivables                       <  
0023 **************************************************************     ************************************************************

0057 CONAME = PARAM<2>                                                  CONAME = PARAM<2>
0058 CUTOFF.DATE = PARAM<3>                                             CUTOFF.DATE = PARAM<3>
0059 IF NOT(NUM(CUTOFF.DATE)) THEN                                      IF NOT(NUM(CUTOFF.DATE)) THEN
0060 CUTOFF.DATE = ICONV(CUTOFF.DATE,"D")                               CUTOFF.DATE = ICONV(CUTOFF.DATE,"D")
0061 END                                                                END
0062 *T26493 v                                                       |  RUN.DATE = DATE()
0063 *  RUN.DATE = DATE()                                            |  RUN.TIME = TIME()
0064 *  RUN.TIME = TIME()                                            |  HEAD(1) = "RUN DATE: ":OCONV(RUN.DATE,"D2/"):"    TIME: ":OC
0065 *  HEAD(1) = "RUN DATE: ":OCONV(RUN.DATE,"D2/"):"    TIME: ":O  |  HEAD(1) = HEAD(1) "L#40"
0066 *  HEAD(1) = HEAD(1) "L#40"                                     |  SP = INT((40-LEN(CONAME))/2)

0067 *  SP = INT((40-LEN(CONAME))/2)                                 |  CNAME = SPACE(SP):CONAME
0068 *  CNAME = SPACE(SP):CONAME                                     |  CNAME = CNAME "L#40"
0069 *  CNAME = CNAME "L#40"                                         |  HEAD(1) = HEAD(1):CNAME
0070 *  HEAD(1) = HEAD(1):CNAME                                      |  *T25134 v
0071 *  HEAD(1) = HEAD(1):SPACE(40):"PAGE: "                            *     HEAD(1) = HEAD(1):SPACE(40):"PAGE: "
0072 CONAME = ""                                                     |  HEAD(1) = HEAD(1):SPACE(13):"DIVISION : ":PARAM<4>:SPACE(13)
0073 REPORT.NAME = ""                                                |  *T25134 ^

0074 REPORT.NUMBER = PARAM<2>                                        <  
0075 HEAD(1) = ""                                                    <  
0076 HEAD(2) = ""                                                    <  
0077 CALL GET.PROG.HEAD(CONO,CONAME,REPORT.NAME,REPORT.NUMBER,"",HE  <  
0078 *T26493 ^                                                       <  
0079 GHEAD = "*** GRAND TOTALS *** "                                    GHEAD = "*** GRAND TOTALS *** "
0080 PREV.CUST.NAME = ""                                                PREV.CUST.NAME = ""

0084 *                                                                  *
0085 *********************  DEFINE PAGE HEADINGS HERE  ************     *********************  DEFINE PAGE HEADINGS HERE  **********
0086 *                                                                  *
0087 **************************************************************     ************************************************************
0088 *                                                                  *
0089 *T26493 *   HEAD(2) = SPACE(44):"SUMMARY AGED ACCOUNTS RECEIVA  |  HEAD(2) = SPACE(44):"SUMMARY AGED ACCOUNTS RECEIVABLE"
0090 HEAD(3) = SPACE(62):"PERIOD ENDING ":OCONV(CUTOFF.DATE,"D2/")   |  HEAD(3) = SPACE(49):"PERIOD ENDING ":OCONV(CUTOFF.DATE,"D2/"
0091 *                                                                  *
0092 **************************************************************     ************************************************************
0093 *                                                                  *


ARSBP/ARS.EOM.CLOSE                                                /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/ARS.EOM.CLOSE
Printed for thompson at 06/28/2006 04:03:54PM

0009 * DATE        - 02/28/87                                           * DATE        - 02/28/87
0010 * DESCRIPTION -                                                    * DESCRIPTION -
0011 *T21067 lanny 10/04/1996 * Error in determining number of peri     *T21067 lanny 10/04/1996 * Error in determining number of pe
0012 *                          invoice purging.                        *                          invoice purging.
0013 *T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE                     *T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
0014 *T23278 markt 01/06/1999 * Make fiscal data multi-value by div  |  *T25432 lanny 10/10/2000 * Adding purged invoice routine.
0015 *T25292 cm 06/29/2000 * Change logic so OPEN.RECV records will  <  
0016 *                       even if G/L is not linked.              <  
0017 *                       LINKED TO ARS.                          <  
0018 *T25763 renee 06/06/2001 * INSTEAD OF JUST DELETING OPEN.RECV   <  

0019 *                          THEY ARE BEING MOVED TO A NEW FILE,  <  
0020 *                          PURGED.OPEN.RECV. AT THE SAME TIME,  <  
0021 *                          IS BEING MADE IN ANOTHER FILE,       <  
0022 *                          PURGED.OR.XREF, WHOSE ID IS CUST.ID  <  
0023 *T25975 cmykleb 01/30/2002 * Save EOM transaction data so hist  <  
0024 *                            reports can be run.                <  
0025 *T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY             <  

0026 *T26921 cmykleb 10/26/2002 * OR.DIV is multivalued so if an OP  <  
0027 *                            from a multi-division invoice it   <  
0028 *                            purge.                             <  
0029 *T26916 lross 11/30/2004 * T26842 was never completed in REV11  <  
0030 *                          REV12 base.                          <  
0031 *T28449 lross 02/17/2005 * T22094 Not complete - remove deleti  <  
0032 *                          CUST.SALES and CUST.SALES.PER info.  <  

0037 *                                                                  *
0038 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0039 *COPY>PMC.CPYLIB>SALESDATES                                        *COPY>PMC.CPYLIB>SALESDATES
0040 *COPY>PMC.CPYLIB>FISCAL                                            *COPY>PMC.CPYLIB>FISCAL
0041 *COPY>PMC.CPYLIB>EOM.TRANS                                         *COPY>PMC.CPYLIB>EOM.TRANS
0042 *COPY>PMC.CPYLIB>EOM.TRANS.HIST        ; * T25975               <  
0043 *COPY>ARS.CPYLIB>OPEN.RECV                                         *COPY>ARS.CPYLIB>OPEN.RECV
0044 *T25763 v                                                       |  *T25432 v
0045 *COPY>ARS.CPYLIB>PURGED.OPEN.RECV                               |  *COPY>CBN.CPYLIB>PURGED.OPEN.RECV
0046 *T25763 ^                                                       |  *T25432 ^

0074 IF D.M.FLG = "PERIOD" THEN                                         IF D.M.FLG = "PERIOD" THEN
0075 RPT.PER = "PERIOD"                                                 RPT.PER = "PERIOD"
0076 END ELSE                                                           END ELSE
0077 RPT.PER = "DAY"                                                    RPT.PER = "DAY"
0078 END                                                                END
0079 DIV.CODE = INBUFF<8>;* T23278                                   |  DIV.CODE = INBUFF<8>
0080 *                                                                  *
0081 **** INTITIALIZATION                                               **** INTITIALIZATION
0082 *                                                                  *
0083 MAT FILE.VARS = ""                                                 MAT FILE.VARS = ""

0083 MAT FILE.VARS = ""                                                 MAT FILE.VARS = ""
0084 MAT EDIT.COM.DRIVER = ""                                           MAT EDIT.COM.DRIVER = ""
0085 TODAY = DATE()                                                     TODAY = DATE()
0086 UNKNOWN = "NOT ON FILE"                                            UNKNOWN = "NOT ON FILE"
0087 SYS.FISCAL = "ARSFISCAL"                                           SYS.FISCAL = "ARSFISCAL"
0088                                                                 >  * PROG.ID = FIELD(OCONV(0,"U50BB")," ",1):"!":CONO:"!ARS.CON
0089                                                                 >  *     PROG.ID = SYSTEM(18):"!":CONO:"!ARS.CONO"
0090 PROG.ID = @TTY:"!":CONO:"!ARS.CONO"                                PROG.ID = @TTY:"!":CONO:"!ARS.CONO"
0091 *                                                                  *
0092 ***** OPEN FILES                                                   ***** OPEN FILES

0105 END                                                                END
0106 OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING     OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSI
0107 OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="M.SCREENS FILE     OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="M.SCREENS FI
0108 OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS M     OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS
0109 OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE I     OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE
0110 *T25763 v                                                       |  *T25432 v
0111 OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG = "  |  OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG="
0112 OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG = "PURG  |  OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG="PURG
0113 OPEN "","INVOICE" TO INVOICE ELSE ERRMSG = "INVOICE FILE IS MI  |  OPEN "","INVOICE" TO INVOICE ELSE ERRMSG="INVOICE FILE IS MI
0114 *T25763 ^                                                       |  *T25432 ^

0115 OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE ERRMSG="MANUAL     OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE ERRMSG="MANU
0116 OPEN "","MANUAL.INVOICE.TAG" TO MANUAL.INVOICE.TAG ELSE ERRMSG     OPEN "","MANUAL.INVOICE.TAG" TO MANUAL.INVOICE.TAG ELSE ERRM
0117 OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS M     OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS
0118 OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING";GOTO 93     OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING";GOTO 
0119 OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS M     OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS
0120 *T25975 v                                                       <  
0121 OPEN "","ARS.EOM.TRANS.HIST" TO ARS.EOM.TRANS.HIST ELSE ERRMSG  <  
0122 *T25975 ^                                                       <  
0123 MATREAD COMP.REC FROM COMPANY,CONO ELSE                            MATREAD COMP.REC FROM COMPANY,CONO ELSE
0124 ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000               ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000

0126 READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE             READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
0127 PERIOD.REC = ""                                                    PERIOD.REC = ""
0128 PERIOD.REC<1> = 12                                                 PERIOD.REC<1> = 12
0129 END                                                                END
0130 NUM.PERIODS = PERIOD.REC<1>                                        NUM.PERIODS = PERIOD.REC<1>
0131 *T26842 v T26916                                                <  
0132 READ OR.PURGE.DATES FROM CONTROL, CONO:'OPEN.REC.PURGE.DATES'   <  
0133 ERRMSG='OPEN.REC.PURGE.DATES record is missing from CONTROL fi  <  
0134 GOTO 93000                                                      <  
0135 END                                                             <  

0136 *T26842 ^ T26916                                                <  
0137 IF CO.GLS # "N" THEN                                               IF CO.GLS # "N" THEN
0138 IF CO.GL.LINK<1,1> = "Y" THEN                                      IF CO.GL.LINK<1,1> = "Y" THEN
0139 OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93     OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 
0140 END                                                                END
0141 OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 93     OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 
0142 EQV.FLG = 1                                                        EQV.FLG = 1

0151 CLEARFILE POST.REJECTS                                             CLEARFILE POST.REJECTS
0152 PRR.SEQ = 10000                                                    PRR.SEQ = 10000
0153 READ CUTOFF.PER FROM CONTROL, CONO:"MANUAL.INVOICE.PURGE" ELSE     READ CUTOFF.PER FROM CONTROL, CONO:"MANUAL.INVOICE.PURGE" EL
0154 IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3                        IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3
0155 IF CUTOFF.PER > NUM.PERIODS THEN                                   IF CUTOFF.PER > NUM.PERIODS THEN
0156                                                                 >  *T21067 v
0157                                                                 >  *        YY = INT(CUTOFF.PER / 12)
0158 YY = INT(CUTOFF.PER / NUM.PERIODS)                                 YY = INT(CUTOFF.PER / NUM.PERIODS)
0159                                                                 >  *        MM = MOD(CUTOFF.PER,12)
0160 MM = MOD(CUTOFF.PER,NUM.PERIODS)                                   MM = MOD(CUTOFF.PER,NUM.PERIODS)

0161                                                                 >  *T21067 ^
0162 END ELSE                                                           END ELSE
0163 YY = 0                                                             YY = 0
0164 MM = CUTOFF.PER                                                    MM = CUTOFF.PER
0165 END                                                                END
0166 IF FR.CURR.PER<1,POS>[5,2] > MM THEN                            |  IF FR.CURR.PER[5,2] > MM THEN
0167 CUTOFF.PER = FR.CURR.PER<1,POS> - MM                            |  CUTOFF.PER = FR.CURR.PER - MM

0168 CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER[5,2]   |  CUTOFF.PER = (FR.CURR.PER[1,4] - YY) : CUTOFF.PER[5,2]
0169 END ELSE                                                           END ELSE
0170 YY = YY + 1                                                        YY = YY + 1
0171 CUTOFF.PER = (FR.CURR.PER<1,POS>[5,2] + NUM.PERIODS) - MM       |  CUTOFF.PER = (FR.CURR.PER[5,2] + NUM.PERIODS) - MM
0172 CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER               CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER
0173 CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER        |  CUTOFF.PER = (FR.CURR.PER[1,4] - YY) : CUTOFF.PER
0174 END                                                                END

0191 END                                                                END
0192 IF MIV.GLA.DATE = "" THEN                                          IF MIV.GLA.DATE = "" THEN
0193 RELEASE MANUAL.INVOICE, MIV.ID                                     RELEASE MANUAL.INVOICE, MIV.ID
0194 GOTO 1500                                                          GOTO 1500
0195 END                                                                END
0196 IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN                 |  IF MIV.PROC.MON <> FR.CURR.PER THEN
0197 RELEASE MANUAL.INVOICE, MIV.ID                                     RELEASE MANUAL.INVOICE, MIV.ID
0198 GOTO 1500                                                          GOTO 1500
0199 END                                                                END
0200 IF MIV.PROC.MON <> FR.CURR.PER<1,POS> THEN                      <  

0201 RELEASE MANUAL.INVOICE, MIV.ID                                  <  
0202 GOTO 1500                                                       <  
0203 END                                                             <  
0204 MIV.GLA.DATE = TODAY                                               MIV.GLA.DATE = TODAY
0205 MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID                         MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID
0206 DELETE MANUAL.INVOICE.TAG, MIV.ID                                  DELETE MANUAL.INVOICE.TAG, MIV.ID
0207 1500 REPEAT                                                        1500 REPEAT

0218 END                                                                END
0219 IF MIV.GLA.DATE = "" THEN                                          IF MIV.GLA.DATE = "" THEN
0220 RELEASE MANUAL.INVOICE, MIV.ID                                     RELEASE MANUAL.INVOICE, MIV.ID
0221 GOTO 1999                                                          GOTO 1999
0222 END                                                                END
0223 IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN                 |  IF MIV.PROC.MON <= FR.CURR.PER THEN
0224 RELEASE MANUAL.INVOICE, MIV.ID                                  <  
0225 GOTO 1999                                                       <  
0226 END                                                             <  
0227 IF MIV.PROC.MON <= FR.CURR.PER<1,POS> THEN                      <  

0238 1999 REPEAT                                                        1999 REPEAT
0239 **** OPEN.RECV ****                                                **** OPEN.RECV ****
0240 WRITE "OPEN.RECV" ON CONTROL , PROG.ID                             WRITE "OPEN.RECV" ON CONTROL , PROG.ID
0241 ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING OPEN.RECV      ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING OPEN.REC
0242 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0243                                                                 >  *     READ ARCFISCAL FROM CONTROL, CONO : "ARCFISCAL" ELSE A
0244 READ ARCFISCAL FROM CONTROL, CONO : "ARSFISCAL" ELSE ARCFISCAL     READ ARCFISCAL FROM CONTROL, CONO : "ARSFISCAL" ELSE ARCFISC
0245 *T26842 T26916 v                                                |  *     IF ARCFISCAL<6> = "" THEN
0246 *T25292 v                                                       |  *        ARCFISCAL<6> = DATE()
0247 *   *T23278 v                                                   |  *        MM = OCONV(ARCFISCAL<6>, "D/")[1,2]

0248 *   *  MM = ARCFISCAL<1>[5,2]                                   |  *        BLK = 0
0249 *   *  ARCFISCAL<6> = OPENDATES<MM> - 1                         |  *        FOR TR = 1 TO 31 UNTIL BLK
0250 *      MM = ARCFISCAL<1,POS>[5,2]                               |  *           ARCFISCAL<6> = ARCFISCAL<6> - 1
0251 *      ARCFISCAL<6,POS> = OPENDATES<MM> - 1                     |  *           IF MM # OCONV(ARCFISCAL<6>, "D/")[1,2] THEN BLK 
0252 *   *T23278 ^                                                   |  *        NEXT TR
0253 *  CUR.DATE=OCONV(ARCFISCAL<2,POS>,'D4/')                       <  
0254 *  MM = CUR.DATE[1,2]                                           <  

0255 *  DD = CUR.DATE[4,2]                                           <  
0256 *  YY = CUR.DATE[7,4]                                           <  
0257 *  IF DD LE 4 THEN                                              <  
0258 *     MM = MM - 1                                               <  
0259 *     IF MM = 0 THEN MM = 12;YY = YY - 1                        <  
0260 *  END                                                             *     END
0261 *  ARCFISCAL<6,POS>=ICONV(MM'R%2':'/01/':YY,'D4/') - 1          <  

0262 ARCFISCAL<6,POS> = OR.PURGE.DATES<ARCFISCAL<1,POS>[5,2]>        <  
0263 *T26842 T26916 ^                                                <  
0264 *T25292 ^                                                       <  
0265 *                                                                  *
0266                                                                 >  MM = ARCFISCAL<1>[5,2]
0267                                                                 >  ARCFISCAL<6> = OPENDATES<MM> - 1
0268                                                                 >  *

0274 IF OR.ID[1,3] # CONO THEN GOTO 2999                                IF OR.ID[1,3] # CONO THEN GOTO 2999
0275 MATREADU OR.REC FROM OPEN.RECV, OR.ID ELSE                         MATREADU OR.REC FROM OPEN.RECV, OR.ID ELSE
0276 RELEASE OPEN.RECV, OR.ID                                           RELEASE OPEN.RECV, OR.ID
0277 GOTO 2999                                                          GOTO 2999
0278 END                                                                END
0279 *T26921 v                                                       <  
0280 *     IF OR.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN            <  
0281 IF DIV.CODE # "ALL" THEN                                        <  
0282 LOCATE DIV.CODE IN OR.DIV<1>,1 SETTING DFND ELSE                <  
0283 *T26921 ^                                                       <  

0284 RELEASE OPEN.RECV, OR.ID                                        <  
0285 GOTO 2999                                                       <  
0286 END ; * T26921                                                  <  
0287 END                                                             <  
0288 IF OR.BAL + 0 <> 0 THEN                                            IF OR.BAL + 0 <> 0 THEN
0289 RELEASE OPEN.RECV, OR.ID                                           RELEASE OPEN.RECV, OR.ID
0290 GOTO 2999                                                          GOTO 2999

0290 GOTO 2999                                                          GOTO 2999
0291 END                                                                END
0292 BLK = 0                                                            BLK = 0
0293 TR.CNT = COUNT(OR.TYPE,VM) + (OR.TYPE # "")                        TR.CNT = COUNT(OR.TYPE,VM) + (OR.TYPE # "")
0294 FOR TR = TR.CNT TO 1 STEP - 1 UNTIL BLK                            FOR TR = TR.CNT TO 1 STEP - 1 UNTIL BLK
0295 *        IF OR.TR.DATE<1,TR> > ARCFISCAL<6> THEN BLK = 1 ;* T2  |  IF OR.TR.DATE<1,TR> > ARCFISCAL<6> THEN BLK = 1 
0296 IF OR.TR.DATE<1,TR> > ARCFISCAL<6,POS> THEN BLK = 1 ;* T23278   <  
0297 NEXT TR                                                            NEXT TR
0298 IF BLK THEN                                                        IF BLK THEN
0299 RELEASE OPEN.RECV, OR.ID                                           RELEASE OPEN.RECV, OR.ID

0300 GOTO 2999                                                          GOTO 2999
0301 END                                                                END
0302 *T25763 v ADDED CODE TO CREATE PURGED FILE ENTRIES              |  *T25432 v
0303 MAT POR.REC = ""                                                   MAT POR.REC = ""
0304 FOR INDEX.COUNT = 1 TO OR.REC.SIZE                                 FOR INDEX.COUNT = 1 TO OR.REC.SIZE
0305 POR.REC(INDEX.COUNT) = OR.REC(INDEX.COUNT)                         POR.REC(INDEX.COUNT) = OR.REC(INDEX.COUNT)
0306 NEXT INDEX.COUNT                                                   NEXT INDEX.COUNT
0307 READV INVOICE.DESC FROM INVOICE,OR.ID,12 THEN                      READV INVOICE.DESC FROM INVOICE,OR.ID,12 THEN
0308 POR.INV.DESC = INVOICE.DESC<1,1>                                   POR.INV.DESC = INVOICE.DESC<1,1>

0309 END ELSE                                                           END ELSE
0310 READV INVOICE.DESC FROM MANUAL.INVOICE,OR.ID,12 THEN               READV INVOICE.DESC FROM MANUAL.INVOICE,OR.ID,12 THEN
0311 POR.INV.DESC = INVOICE.DESC<1.1>                                |  POR.INV.DESC = INVOICE.DESC<1,1>
0312 END ELSE                                                           END ELSE
0313 POR.INV.DESC = ""                                                  POR.INV.DESC = ""
0314 END                                                                END
0315 END                                                                END
0316 MATWRITE POR.REC ON PURGED.OPEN.RECV, OR.ID                        MATWRITE POR.REC ON PURGED.OPEN.RECV, OR.ID
0317 READ PURGED.XREF.REC FROM PURGED.OR.XREF, CONO:OR.CUST ELSE PU     READ PURGED.XREF.REC FROM PURGED.OR.XREF, CONO:OR.CUST ELSE 

0318 PURGED.XREF.REC<-1,0,0> = OR.ID                                    PURGED.XREF.REC<-1,0,0> = OR.ID
0319 WRITE PURGED.XREF.REC ON PURGED.OR.XREF, CONO:OR.CUST              WRITE PURGED.XREF.REC ON PURGED.OR.XREF, CONO:OR.CUST
0320 *T25763 ^                                                       |  *T25432 ^
0321 DELETE OPEN.RECV, OR.ID                                            DELETE OPEN.RECV, OR.ID
0322 FND = 1                                                            FND = 1
0323 MATREADU CUST.REC FROM CUSTOMER, CONO:OR.CUST ELSE FND = 0         MATREADU CUST.REC FROM CUSTOMER, CONO:OR.CUST ELSE FND = 0
0324 IF FND THEN                                                        IF FND THEN
0325 LOCATE OR.ID[4,99] IN CUST.INVOICE<1>,1 SETTING FND ELSE FND =     LOCATE OR.ID[4,99] IN CUST.INVOICE<1>,1 SETTING FND ELSE FND
0326 IF FND THEN                                                        IF FND THEN

0330 RELEASE CUSTOMER, CONO:OR.CUST                                     RELEASE CUSTOMER, CONO:OR.CUST
0331 END                                                                END
0332 END ELSE                                                           END ELSE
0333 RELEASE CUSTOMER, CONO:OR.CUST                                     RELEASE CUSTOMER, CONO:OR.CUST
0334 END                                                                END
0335 2999 *                                                          |  2999 REPEAT
0336 REPEAT                                                          <  
0337 IF EOY = 0 THEN GOTO 7000                                          IF EOY = 0 THEN GOTO 7000
0338 READ JCFISCAL FROM CONTROL, CONO : "JCFISCAL" ELSE                 READ JCFISCAL FROM CONTROL, CONO : "JCFISCAL" ELSE
0339 JCFISCAL = FR.CURR.PER<1,POS>                                   |  JCFISCAL = FR.CURR.PER

0340 END                                                                END
0341 YEAR = FR.CURR.PER<1,POS>[1,4]                                  |  YEAR = FR.CURR.PER[1,4]
0342 IF YEAR > JCFISCAL<1>[1,4] THEN                                    IF YEAR > JCFISCAL<1>[1,4] THEN
0343 YEAR = JCFISCAL<1>[1,4]                                            YEAR = JCFISCAL<1>[1,4]
0344 END                                                                END
0345 YEAR = YEAR - 2                                                    YEAR = YEAR - 2
0346 **** CUSTOMER ****                                                 **** CUSTOMER ****
0347 GOTO 4000 ;*T28449                                              <  

0374 END                                                                END
0375 NEXT I                                                             NEXT I
0376 END                                                                END
0377 MATWRITE CUST.REC ON CUSTOMER,CUST.ID                              MATWRITE CUST.REC ON CUSTOMER,CUST.ID
0378 3999 REPEAT                                                        3999 REPEAT
0379 4000 *                                                          <  
0380 **** SHIP.VIA ****                                                 **** SHIP.VIA ****
0381 ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING SHIP.VIA F     ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING SHIP.VIA
0382 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0383 SELECT SHIP.VIA                                                    SELECT SHIP.VIA

0442 END                                                                END
0443 NEXT I                                                             NEXT I
0444 END                                                                END
0445 MATWRITE TAX.REC ON TAX, TAX.ID                                    MATWRITE TAX.REC ON TAX, TAX.ID
0446 5999 REPEAT                                                        5999 REPEAT
0447 *T26842 v                                                       <  
0448 PRFND=0                                                         <  
0449 READ OPRODUCTION.REC FROM CONTROL,CONO:FR.CURR.PER<1,POS>[1,4]  <  
0450 READ PRODUCTION.REC FROM CONTROL,CONO:FR.NEXT.PER<1,POS>[1,4]:  <  
0451 PRFND=1                                                         <  

0452 NO.WKS=DCOUNT(OPRODUCTION.REC<1>,VM)                            <  
0453 FOR I = 1 TO NUM.PERIODS                                        <  
0454 LOCATE I IN PRODUCTION.REC<2>,1 SETTING FND THEN                <  
0455 IF I = 1 THEN                                                   <  
0456 OR.PURGE.DATES<1> = OPRODUCTION.REC<1,NO.WKS>                   <  
0457 END ELSE                                                        <  
0458 OR.PURGE.DATES<I> = PRODUCTION.REC<1,FND-1>                     <  

0459 END                                                             <  
0460 END                                                             <  
0461 NEXT I                                                          <  
0462 END                                                             <  
0463 END                                                             <  
0464 IF NOT(PRFND) THEN                                              <  
0465 LYTEST='02/29/':FR.NEXT.PER<1,POS>                              <  

0466 LYTEST=ICONV(LYTEST,'D4/')                                      <  
0467 FOR I = 1 TO NUM.PERIODS                                        <  
0468 IF LYTEST THEN OR.PURGE.DATES<I>+=366 ELSE OR.PURGE.DATES<I>+=  <  
0469 NEXT I                                                          <  
0470 END                                                             <  
0471 WRITE OR.PURGE.DATES ON CONTROL,CONO:"OPEN.REC.PURGE.DATES"     <  
0472 *T26842 ^                                                       <  

0482 LOCATE "MJ" IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL               LOCATE "MJ" IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL
0483 L.GLA = CSY.LEVEL<1,FND>                                           L.GLA = CSY.LEVEL<1,FND>
0484 MAT GLA.REC = ""                                                   MAT GLA.REC = ""
0485 GLA.DATE = TODAY                                                   GLA.DATE = TODAY
0486 GLA.SRC = "MJ"                                                     GLA.SRC = "MJ"
0487 GLA.MON = FR.CURR.PER<1,POS>                                    |  GLA.MON = FR.CURR.PER
0488 ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/")                  |  ODATE = " " : OCONV(FR.CURR.DATE,"D2/")
0489 READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER =     READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER
0490 WRITE "GLA ":COUNTER ON CONTROL, PROG.ID                           WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
0491 DATA = 1                                                           DATA = 1

0649 IF ETR.ID[1,3] # CONO THEN GOTO 8999                               IF ETR.ID[1,3] # CONO THEN GOTO 8999
0650 MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE                       MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
0651 RELEASE EOM.TRANS, ETR.ID                                          RELEASE EOM.TRANS, ETR.ID
0652 GOTO 8999                                                          GOTO 8999
0653 END                                                                END
0654 *T25975 v                                                       <  
0655 CURR.PER = FR.CURR.PER<1,POS>                                   <  
0656 MAT ETH.REC = MAT ETR.REC                                       <  
0657 DONE = 0                                                        <  
0658 SEQ = 0                                                         <  

0659 ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER                       <  
0660 LOOP UNTIL DONE = 1 DO                                          <  
0661 SEQ = SEQ + 1                                                   <  
0662 ETH.KEY = ETH.ID:"*":SEQ                                        <  
0663 READ CHECKIT FROM ARS.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1     <  
0664 REPEAT                                                          <  
0665 MATWRITE ETH.REC ON ARS.EOM.TRANS.HIST, ETH.KEY                 <  

0666 *T25975 ^                                                       <  
0667 DELETE EOM.TRANS, ETR.ID                                           DELETE EOM.TRANS, ETR.ID
0668 8999 REPEAT                                                        8999 REPEAT
0669 WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID                          WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
0670 EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)                   EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
0671 * T26685                                                        |  WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER
0672 *  WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<  <  

0673 WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,P  <  
0674 * T26685 ^                                                      <  
0675 SELECT EOM.TRANS                                                   SELECT EOM.TRANS
0676 READNEXT ETR.ID ELSE                                               READNEXT ETR.ID ELSE
0677 IF D.M.FLG = "PERIOD" THEN                                         IF D.M.FLG = "PERIOD" THEN
0678 FR.CURR.PER<1,POS> = FR.NEXT.PER<1,POS>                         |  FR.CURR.PER = FR.NEXT.PER
0679 FR.CURR.DATE<1,POS> = FR.NEXT.DATE<1,POS>                       |  FR.CURR.DATE = FR.NEXT.DATE

0680 FR.CLOSE.DATE<1,POS> = TODAY                                    |  FR.CLOSE.DATE = TODAY
0681 END                                                                END
0682 FR.NEXT.PER<1,POS> = ""; FR.NEXT.DATE<1,POS> = ""               |  FR.NEXT.PER = ""; FR.NEXT.DATE = ""
0683 FR.PRINT<1,POS> = "";FR.D.M.FLG<1,POS> = ""                     |  FR.PRINT = "";FR.D.M.FLG = ""
0684 MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL                    MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
0685 DELETE CONTROL, PROG.ID                                            DELETE CONTROL, PROG.ID
0686 ECD.ACTION = 99 ; CALL SCRN.EDIT                                   ECD.ACTION = 99 ; CALL SCRN.EDIT

0687 GOTO 99999                                                         GOTO 99999
0688 END                                                                END
0689 FR.PRINT<1,POS> = "X"                                           |  FR.PRINT = "X"
0690 MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL                    MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
0691 ERRMSG = "E R R O R !!! CANNOT LOCATE ALL TRANSACTIONS"            ERRMSG = "E R R O R !!! CANNOT LOCATE ALL TRANSACTIONS"
0692 ECD.ACTION = 99 ; CALL SCRN.EDIT                                   ECD.ACTION = 99 ; CALL SCRN.EDIT
0693 GOTO 93000                                                         GOTO 93000
0694 91000 ERR.TYPE = 1                                                 91000 ERR.TYPE = 1
0695 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)


