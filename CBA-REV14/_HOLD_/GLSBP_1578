









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:27:44 CDT 2006
 #####  #        #####  ######  ######
#     # #       #     # #     # #     #
#       #       #       #     # #     #
#  #### #        #####  ######  ######
#     # #             # #     # #
#     # #       #     # #     # #
 #####  #######  #####  ######  #

GLSBP/ACCT.TYPE.MAINT                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/ACCT.TYPE.MAINT
Printed for thompson at 06/28/2006 04:27:44PM

0007 * PROGRAM     - ACCT.TYPE.MAINT                                    * PROGRAM     - ACCT.TYPE.MAINT
0008 * BY          - JIHAD YAMOUT ,C.B.A                                * BY          - JIHAD YAMOUT ,C.B.A
0009 * DATE        - 08/01/84                                           * DATE        - 08/01/84
0010 * DESCRIPTION - This program update ACCT.TYPE file.                * DESCRIPTION - This program update ACCT.TYPE file.
0011 *C33881 cm 07/27/1999 * Getting error message when exiting pro     *C33881 cm 07/27/1999 * Getting error message when exiting p
0012 *T26225 gat 10/15/2001 * FIX GLS DISPLAY PROBLEM                |  *T25153 aron 05/22/2000 * Sort Categories and Sub Categories
0013 *T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,  <  
0014 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   <  
0015 **************************************************************     ************************************************************
0016 *COPY>GLS.CPYLIB>ACCT.TYPE                                         *COPY>GLS.CPYLIB>ACCT.TYPE

0103 LINE.SPACE = 1                                                     LINE.SPACE = 1
0104 CL1 = SPACE(35)                                                    CL1 = SPACE(35)
0105 CL2 = SPACE(31)                                                    CL2 = SPACE(31)
0106 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0107 LOOP                                                               LOOP
0108 20 *                                                            <  
0109 TYPE.ID = ''; MAT AT.REC = ''; MAT PRT.REC = ''                    TYPE.ID = ''; MAT AT.REC = ''; MAT PRT.REC = ''
0110 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0111 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0112 ***** ENTER ACCOUNT TYPE                                           ***** ENTER ACCOUNT TYPE

0113 ECD.NUM = 1                                                        ECD.NUM = 1
0114 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0115 BEGIN CASE                                                         BEGIN CASE
0116 CASE ECD.RET.VALUE = 'END'                                         CASE ECD.RET.VALUE = 'END'
0117 CASE ECD.RET.VALUE # ''                                            CASE ECD.RET.VALUE # ''
0118 * T26126 v                                                      |  MATREADU AT.REC FROM ACCT.TYPE, ECD.RET.VALUE ELSE MAT AT.RE
0119 MATREADU AT.REC FROM ACCT.TYPE, ECD.RET.VALUE LOCKED            |  *T25153 v
0120 ERRMSG = 'ACCOUNT TYPE record is locked by user - ':GETUSERNAM  |  GOSUB 8000
0121 GOSUB 91000;GOTO 20                                             |  *T25153 ^
0122 END ELSE                                                        <  

0123 MAT AT.REC = ""                                                 <  
0124 END                                                             <  
0125 * T26126 ^                                                      <  
0126 IF AT.DESC # "" THEN                                               IF AT.DESC # "" THEN
0127 TYPE.ID = ECD.RET.VALUE                                            TYPE.ID = ECD.RET.VALUE
0128 ECD.NUM = 2; SCV.REC(ECD.NUM)<1> = AT.DESC                         ECD.NUM = 2; SCV.REC(ECD.NUM)<1> = AT.DESC
0129 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT

0130 END ELSE                                                        <  
0131 ERRMSG = "INVALID ACCT TYPE "                                   <  
0132 GOSUB 91000                                                     <  
0133 GOTO 20                                                         <  
0134 END                                                                END
0135 *C33881 v                                                          *C33881 v
0136 CASE ECD.RET.VALUE = ""                                            CASE ECD.RET.VALUE = ""

0137 GOTO 99999                                                      |  ECD.ACTION = 99; CALL SCRN.EDIT
0138 *C33881 ^                                                          *C33881 ^
0139 END CASE                                                           END CASE
0140 WHILE TYPE.ID # '' DO                                              WHILE TYPE.ID # '' DO
0141 LINES = COUNT(AT.CATG,VM) + (AT.CATG # '')                         LINES = COUNT(AT.CATG,VM) + (AT.CATG # '')
0142 PRT.CATG = AT.CATG                                                 PRT.CATG = AT.CATG
0143 FOR I = 1 TO LINES                                                 FOR I = 1 TO LINES

0143 FOR I = 1 TO LINES                                                 FOR I = 1 TO LINES
0144 MATREAD AC.REC FROM ACCT.CATG, AT.CATG<1,I> ELSE                   MATREAD AC.REC FROM ACCT.CATG, AT.CATG<1,I> ELSE
0145 MAT AC.REC = ''                                                    MAT AC.REC = ''
0146 AC.DESC = 'UNKNOWN'                                                AC.DESC = 'UNKNOWN'
0147 END                                                                END
0148                                                                 >  *T25153 v
0149                                                                 >  GOSUB 9000 
0150                                                                 >  *T25153 ^
0151 PRT.DESC<1,I> = AC.DESC                                            PRT.DESC<1,I> = AC.DESC
0152 LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # '')                          LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # '')

0194 IF LN.NO THEN                                                      IF LN.NO THEN
0195 LN = LN.NO                                                         LN = LN.NO
0196 MATREAD AC.REC FROM ACCT.CATG, PRT.CATG<1,LN> ELSE                 MATREAD AC.REC FROM ACCT.CATG, PRT.CATG<1,LN> ELSE
0197 MAT AC.REC = ''                                                    MAT AC.REC = ''
0198 END                                                                END
0199                                                                 >  *T25153 v
0200                                                                 >  GOSUB 9000
0201                                                                 >  *T25153 ^
0202 SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)              SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
0203 GOSUB 3000                                                         GOSUB 3000

0234 GOSUB 2900                                                         GOSUB 2900
0235 CASE ACTION = 'S'                                                  CASE ACTION = 'S'
0236 LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE           LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0237 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0238 GOSUB 2900                                                         GOSUB 2900
0239 * T25978 v                                                      <  
0240 CASE ACTION = 'SR'                                              <  
0241 LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE        <  
0242 IF LN < 1 THEN LN = 1                                           <  
0243 GOSUB 2900                                                      <  

0244 CASE ACTION = 'ST'                                              <  
0245 LN = 1                                                          <  
0246 GOSUB 2900                                                      <  
0247 CASE ACTION = 'SB'                                              <  
0248 LN = LINES                                                      <  
0249 GOSUB 2900                                                      <  
0250 * T25978 ^                                                      <  

0304 END                                                                END
0305 MATREAD AC.REC FROM ACCT.CATG, VALUE ELSE                          MATREAD AC.REC FROM ACCT.CATG, VALUE ELSE
0306 MAT AC.REC = ''                                                    MAT AC.REC = ''
0307 AC.TYPE = TYPE.ID                                                  AC.TYPE = TYPE.ID
0308 END                                                                END
0309                                                                 >  *T25153 v
0310                                                                 >  GOSUB 9000 
0311                                                                 >  *T25153 ^
0312 IF AC.TYPE # TYPE.ID THEN                                          IF AC.TYPE # TYPE.ID THEN
0313 ERRMSG = 'THIS CATEGORY IS FOR TYPE ' : AC.TYPE                    ERRMSG = 'THIS CATEGORY IS FOR TYPE ' : AC.TYPE

0479 * GOSUB 2910                                                       * GOSUB 2910
0480 CASE REQUEST = 'S'                                                 CASE REQUEST = 'S'
0481 LN1 = 1 + INT((LN1 - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE         LN1 = 1 + INT((LN1 - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0482 IF LN1 > LINES1 THEN LN1 = 1                                       IF LN1 > LINES1 THEN LN1 = 1
0483 GOSUB 4900                                                         GOSUB 4900
0484 * T25978 v                                                      <  
0485 CASE REQUEST = 'SR'                                             <  
0486 LN1 = 1 + INT((LN1 - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE      <  
0487 IF LN1 < 1 THEN LN1 = 1                                         <  
0488 GOSUB 4900                                                      <  

0489 CASE REQUEST = 'ST'                                             <  
0490 LN1 = 1                                                         <  
0491 GOSUB 4900                                                      <  
0492 CASE REQUEST = 'SB'                                             <  
0493 LN1 = LINES1                                                    <  
0494 GOSUB 4900                                                      <  
0495 * T25978 ^                                                      <  

0706 AT.CATG<1,CFND> = PRT.CATG<1,LN>                                   AT.CATG<1,CFND> = PRT.CATG<1,LN>
0707 END                                                                END
0708 MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,CFND> ELSE               MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,CFND> ELSE
0709 MAT AC.REC = ""                                                    MAT AC.REC = ""
0710 END                                                                END
0711                                                                 >  *T25153 v
0712                                                                 >  GOSUB 9000 
0713                                                                 >  *T25153 ^
0714 AC.TYPE = TYPE.ID                                                  AC.TYPE = TYPE.ID
0715 AC.DESC = PRT.DESC<1,LN>                                           AC.DESC = PRT.DESC<1,LN>

0775 LOCATE AT.CATG<1,LN> IN PRT.CATG<1>,1 SETTING CFND ELSE CFND =     LOCATE AT.CATG<1,LN> IN PRT.CATG<1>,1 SETTING CFND ELSE CFND
0776 MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,LN> ELSE                 MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,LN> ELSE
0777 MAT AC.REC = ""                                                    MAT AC.REC = ""
0778 CFND = 0                                                           CFND = 0
0779 END                                                                END
0780                                                                 >  *T25153 v
0781                                                                 >  GOSUB 9000 
0782                                                                 >  *T25153 ^
0783 LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # "")                          LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # "")
0784 FOR LN1 = LINES1 TO 1 STEP - 1                                     FOR LN1 = LINES1 TO 1 STEP - 1

0853 END                                                                END
0854 NEXT LN                                                            NEXT LN
0855 MATWRITE AT.REC ON ACCT.TYPE, TYPE.ID                              MATWRITE AT.REC ON ACCT.TYPE, TYPE.ID
0856 RETURN                                                             RETURN
0857 *                                                                  *
0858                                                                 >  *T25153 v  Add sort routines
0859                                                                 >  8000*  
0860                                                                 >  *SORT CATEGORY
0861                                                                 >  CAT.TEMP = AT.CATG
0862                                                                 >  CAT.COUNT = COUNT(CAT.TEMP,VM) + (AT.CATG # "")

0863                                                                 >  IF CAT.COUNT = 0 THEN GOTO 8099
0864                                                                 >  AT.CATG = ""
0865                                                                 >  FOR CAT.NUM = 1 TO CAT.COUNT
0866                                                                 >  LOCATE CAT.TEMP<1,CAT.NUM> IN AT.CATG<1> BY "AR" SETTING CAT
0867                                                                 >  INS CAT.TEMP<1,CAT.NUM> BEFORE AT.CATG<1,CAT.POS>
0868                                                                 >  NEXT CAT.NUM
0869                                                                 >  8099*

0870                                                                 >  RETURN
0871                                                                 >  9000*  
0872                                                                 >  *SORT SUB CATEGORY
0873                                                                 >  SUB.TEMP = AC.SUB
0874                                                                 >  SUB.COUNT = COUNT(SUB.TEMP,VM) + (AC.SUB # "")
0875                                                                 >  IF SUB.COUNT = 0 THEN GOTO 9099
0876                                                                 >  AC.SUB = ""

0877                                                                 >  FOR SUB.NUM = 1 TO SUB.COUNT
0878                                                                 >  LOCATE SUB.TEMP<1,SUB.NUM> IN AC.SUB<1> BY "AR" SETTING SUB.
0879                                                                 >  INS SUB.TEMP<1,SUB.NUM> BEFORE AC.SUB<1,SUB.POS>
0880                                                                 >  NEXT SUB.NUM
0881                                                                 >  9099*
0882                                                                 >  RETURN
0883                                                                 >  *T25153 ^

0892 93000*                                                             93000*
0893 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)                          ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
0894 99999*                                                             99999*
0895 RELEASE                                                            RELEASE
0896 *       PRINT @(-1)                                                *       PRINT @(-1)
0897 ECD.ACTION = 99; CALL SCRN.EDIT                                 <  
0898 END                                                                END
0899 


GLSBP/FINANCIAL.RPT.LIST                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/FINANCIAL.RPT.LIST
Printed for thompson at 06/28/2006 04:27:44PM

0005 * PROGRAM       - FINANCIAL.RPT.LIST                               * PROGRAM       - FINANCIAL.RPT.LIST
0006 * BY            - RHONDA PERRIN, C.B.A.                            * BY            - RHONDA PERRIN, C.B.A.
0007 * DATE          - 12/12/84                                         * DATE          - 12/12/84
0008 * DESCRIPTION   -                                                  * DESCRIPTION   -
0009 * This program creates a General Ledger Financial Report Listi     * This program creates a General Ledger Financial Report Lis
0010 * T26493 cmykleb 05/22/2002 * Change pgm to get the rpt # from  |  *
0011 *                             and use GET.PROG.HEAD for the he  |  * T25152 lanny 06/01/2000 * Allow hidden lines on report.
0012 *T27264 thompson 02/04/2003 * Fix page numbering problem        |  *
0013 *T27807 lross 11/26/2003 * Add Report # to heading.             <  
0014 *ENDDOC                                                            *ENDDOC

0027 *                                                                  *
0028 *---- SYSTEM ERROR MESSAGES                                        *---- SYSTEM ERROR MESSAGES
0029 *                                                                  *
0030 SYS.TYPE = 1                                                       SYS.TYPE = 1
0031 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0032 * T26493 v                                                      <  
0033 *                                                                  *
0034 *---- READ FROM PROC                                            <  
0035 *                                                               <  
0036 PROCREAD BUFFER ELSE                                            <  

0037 ERRMSG = "MUST RUN FROM A PROC"                                 <  
0038 GOTO 93000                                                      <  
0039 END                                                             <  
0040 *T26493 ^                                                       <  
0041 *                                                               <  
0042 *---- OPEN FILES                                                   *---- OPEN FILES
0043 *                                                                  *

0051 *---- GET COMPANY NUMBER                                           *---- GET COMPANY NUMBER
0052 *                                                                  *
0053 CONO = ''                                                          CONO = ''
0054 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0055 IF CONO = 'END' THEN GOTO 99999                                    IF CONO = 'END' THEN GOTO 99999
0056 *T26493 v                                                       <  
0057 CONO.NAME = ""                                                  <  
0058 RPT.NAME = ""                                                   <  
0059 RPT.NO = BUFFER<2>                                              <  
0060 HD1 = ""                                                        <  

0061 HD2 = ""                                                        <  
0062 CALL GET.PROG.HEAD(CONO,CONO.NAME,RPT.NAME,RPT.NO,"",HD1,HD2)   <  
0063 *T26493 ^                                                       <  
0064 *                                                                  *
0065 *---- INITIALIZATION                                               *---- INITIALIZATION
0066 *                                                                  *
0067 PG.NO = 0                                                          PG.NO = 0

0067 PG.NO = 0                                                          PG.NO = 0
0068 LINE.CNT = 0                                                       LINE.CNT = 0
0069 ERRMSG = ''                                                        ERRMSG = ''
0070 D10 = STR("-",10)                                                  D10 = STR("-",10)
0071 D14 = STR("-",14)                                                  D14 = STR("-",14)
0072 D21 = STR("-",21)                                               |  D19 = STR("-",19)
0073 D45 = STR("-",45)                                                  D45 = STR("-",45)
0074 UNKNOWN = STR("?",21)                                           |  UNKNOWN = STR("?",19)
0075 SP1 = ' '                                                          SP1 = ' '
0076 ACCT.NO=''                                                         ACCT.NO=''

0110 *                                                                  *
0111 20*                                                                20*
0112 PRINT CHAR(12)                                                     PRINT CHAR(12)
0113 LINE.CNT = 0                                                       LINE.CNT = 0
0114 PG.NO = PG.NO + 1                                                  PG.NO = PG.NO + 1
0115 *T26493 v                                                       |  H.LINE = '';HLINE1 = '';HLINE2 = '';HLINE3 = ''
0116 *  H.LINE = '';HLINE1 = '';HLINE2 = '';HLINE3 = ''              |  HLINE1 = "DATE : ":OCONV(DATE(),"D2/"):SPACE(26)
0117 *  HLINE1 = "DATE : ":OCONV(DATE(),"D2/"):SPACE(26)             |  REMAIN = 50 - LEN(CO.NAME)
0118 *  REMAIN = 50 - LEN(CO.NAME)                                   |  HALF = INT(REMAIN / 2)
0119 *  HALF = INT(REMAIN / 2)                                       |  SP = SPACE(HALF)

0120 *  SP = SPACE(HALF)                                             |  HLINE2 = SP:CO.NAME:SP
0121 *  HLINE2 = SP:CO.NAME:SP                                       |  HLINE3 = SPACE(23):"PAGE : ":PG.NO
0122 *  HLINE3 = SPACE(23):"PAGE : ":PG.NO                           |  H.LINE = HLINE1:HLINE2:HLINE3
0123 *  H.LINE = HLINE1:HLINE2:HLINE3                                |  PRINT H.LINE
0124 *  PRINT H.LINE                                                 |  H.LINE = ''
0125 *  H.LINE = ''                                                  |  H.LINE = H.LINE:'REPORT : ':R.NO "L#3"
0126 *  H.LINE = H.LINE:'REPORT : ':R.NO "L#3"                       |  H.LINE = H.LINE:SPACE(40):"FINANCIAL REPORT LINE LISTING"

0127 *  H.LINE = H.LINE:SPACE(40):"FINANCIAL REPORT LINE LISTING"    |  PRINT H.LINE
0128 *  PRINT H.LINE                                                 |  PRINT
0129 *  PRINT                                                        <  
0130 *  PRINT SPACE(129):'-'                                         <  
0131 *  H.LINE = ''                                                  <  
0132 *T27264   HD1 = HD1:PG.NO                                       <  
0133 PRINT HD1:PG.NO "R%3"; *T27264                                  <  

0134 PRINT HD2                                                       <  
0135 *C42799 v T27807                                                <  
0136 *  PRINT                                                        <  
0137 PRINT 'REPORT NO. ':R.NO                                        <  
0138 PRINT SPACE(129):'-'                                               PRINT SPACE(129):'-'
0139 *T26493 ^                                                       |  H.LINE = ''
0140 H.LINE = "LN# T LN# S U R DV DP CTR FIXED AMNT":SPACE(15):"LIN  |  H.LINE = "LN# T LN# S U R DV DP CTR FIXED AMNT":SPACE(15):"L

0141 PRINT H.LINE                                                       PRINT H.LINE
0142 H.LINE = ''                                                        H.LINE = ''
0143 H.LINE = "--- - --- - - - -- -- --- ":D10:SP1:D45:' --- ---- '  |  H.LINE = "--- - --- - - - -- -- --- ":D10:SP1:D45:' --- ----
0144 PRINT H.LINE                                                       PRINT H.LINE
0145 PRINT                                                              PRINT
0146 LINE.CNT = LINE.CNT + 7                                            LINE.CNT = LINE.CNT + 7
0147 RETURN                                                             RETURN
0148 *                                                                  *
0149 *---- PRINT REPORT LINE(S)                                         *---- PRINT REPORT LINE(S)

0150 *                                                                  *
0151 30*                                                                30*
0152 IF LINE.CNT > 55 THEN GOSUB 20                                     IF LINE.CNT > 55 THEN GOSUB 20
0153 S.CNT = COUNT(GLRP.REC(L)<1,11>,SVM) + (GLRP.REC(L)<1,11> # ''     S.CNT = COUNT(GLRP.REC(L)<1,11>,SVM) + (GLRP.REC(L)<1,11> # 
0154 IF S.CNT < 1 THEN                                                  IF S.CNT < 1 THEN
0155 S.NO = '';ACCT.NO = '';SIGN = '';LINE.TYPE = ''                 |  S.NO = '';ACCT.NO = '';SIGN = '';LINE.TYPE = '';LINE.HIDE = 
0156 CODE = '';DESC = '';ACCT.NUM = ACCT.NO "L#14"                      CODE = '';DESC = '';ACCT.NUM = ACCT.NO "L#14"
0157 END ELSE                                                           END ELSE
0158 S.NO = 1                                                           S.NO = 1
0159 SIGN = GLRP.REC(L)<1,12,1>                                         SIGN = GLRP.REC(L)<1,12,1>

0160 LINE.TYPE = GLRP.REC(L)<1,13,1>                                    LINE.TYPE = GLRP.REC(L)<1,13,1>
0161                                                                 >  LINE.HIDE = GLRP.REC(L)<1,16,1>;*25152
0162 BEGIN CASE                                                         BEGIN CASE
0163 CASE GLRP.REC(L)<1,14,1> = ""                                      CASE GLRP.REC(L)<1,14,1> = ""
0164 CODE = "ACCT"                                                      CODE = "ACCT"
0165 ACCT.NO = GLRP.REC(L)<1,11,1>                                      ACCT.NO = GLRP.REC(L)<1,11,1>
0166 ACCT.NUM = ACCT.NO STRUC                                           ACCT.NUM = ACCT.NO STRUC
0167 MATREAD COA.REC FROM COA, CONO:ACCT.NO ELSE                        MATREAD COA.REC FROM COA, CONO:ACCT.NO ELSE

0209 P.LINE = P.LINE : GLRP.REC(L)<1,4> "L#1" :SP1: GLRP.REC(L)<1,5     P.LINE = P.LINE : GLRP.REC(L)<1,4> "L#1" :SP1: GLRP.REC(L)<1
0210 P.LINE = P.LINE: GLRP.REC(L)<1,6> "L#2" :SP1: GLRP.REC(L)<1,7>     P.LINE = P.LINE: GLRP.REC(L)<1,6> "L#2" :SP1: GLRP.REC(L)<1,
0211 P.LINE = P.LINE: GLRP.REC(L)<1,8> "L#3" :SP1                       P.LINE = P.LINE: GLRP.REC(L)<1,8> "L#3" :SP1
0212 P.LINE = P.LINE : OCONV(GLRP.REC(L)<1,9>, "MD2") "R#10" :SP1       P.LINE = P.LINE : OCONV(GLRP.REC(L)<1,9>, "MD2") "R#10" :SP1
0213 P.LINE = P.LINE : GLRP.REC(L)<1,10> "L#45" :SP1: S.NO "R#3" :S     P.LINE = P.LINE : GLRP.REC(L)<1,10> "L#45" :SP1: S.NO "R#3" 
0214 P.LINE = P.LINE : ACCT.NUM :SP1: DESC "L#21" :SP1: SIGN "L#1"   |  P.LINE = P.LINE : ACCT.NUM :SP1: DESC "L#19" :SP1: SIGN "L#1
0215 PRINT P.LINE                                                       PRINT P.LINE
0216 LINE.CNT = LINE.CNT + 1                                            LINE.CNT = LINE.CNT + 1
0217 IF S.CNT > 1 THEN                                                  IF S.CNT > 1 THEN
0218 FOR S = 2 TO S.CNT                                                 FOR S = 2 TO S.CNT

0219 SIGN = GLRP.REC(L)<1,12,S>                                         SIGN = GLRP.REC(L)<1,12,S>
0220 LINE.TYPE = GLRP.REC(L)<1,13,S>                                    LINE.TYPE = GLRP.REC(L)<1,13,S>
0221                                                                 >  LINE.HIDE = GLRP.REC(L)<1,16,S>;*25152
0222 S.NO = S.NO + 1                                                    S.NO = S.NO + 1
0223 BEGIN CASE                                                         BEGIN CASE
0224 CASE GLRP.REC(L)<1,14,S> = ""                                      CASE GLRP.REC(L)<1,14,S> = ""
0225 CODE = "ACCT"                                                      CODE = "ACCT"
0226 ACCT.NO = GLRP.REC(L)<1,11,S>                                      ACCT.NO = GLRP.REC(L)<1,11,S>
0227 ACCT.NUM = ACCT.NO STRUC                                           ACCT.NUM = ACCT.NO STRUC

0258 ACCT.NO = GLRP.REC(L)<1,11,S>; DESC = ''                           ACCT.NO = GLRP.REC(L)<1,11,S>; DESC = ''
0259 ACCT.NUM = ACCT.NO "L#14"; CODE = GLRP.REC(L)<1,14,1>              ACCT.NUM = ACCT.NO "L#14"; CODE = GLRP.REC(L)<1,14,1>
0260 END CASE                                                           END CASE
0261 P.LINE = ''                                                        P.LINE = ''
0262 P.LINE = SPACE(83): S.NO "R#3" :SP1: CODE "L#4" :SP1               P.LINE = SPACE(83): S.NO "R#3" :SP1: CODE "L#4" :SP1
0263 P.LINE = P.LINE : ACCT.NUM :SP1: DESC "L#21" :SP1: SIGN "L#1"   |  P.LINE = P.LINE : ACCT.NUM :SP1: DESC "L#19" :SP1: SIGN "L#1
0264 PRINT P.LINE                                                       PRINT P.LINE
0265 LINE.CNT = LINE.CNT + 1                                            LINE.CNT = LINE.CNT + 1
0266 IF LINE.CNT > 55 THEN GOSUB 20                                     IF LINE.CNT > 55 THEN GOSUB 20
0267 NEXT S                                                             NEXT S

0270 *                                                                  *
0271 *---- CALLS FOR SYSCOM                                             *---- CALLS FOR SYSCOM
0272 *                                                                  *
0273 93000*                                                             93000*
0274 PRINTER OFF                                                        PRINTER OFF
0275 ERR.TYPE = 1                                                    |  ERR.TYPE = 3
0276 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0277 99999*                                                             99999*
0278 END                                                                END
0279 


GLSBP/GLS.UPD.CHK                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/GLS.UPD.CHK
Printed for thompson at 06/28/2006 04:27:44PM

0001 *COPY>CPYLIB>COM1                                               <  
0002 **************************************************************     ************************************************************
0003 * REVISION    - [08.0]                                             * REVISION    - [08.0]
0004 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0005 * DESCRIPTION - R  = GLM.DETAIL.LIST                               * DESCRIPTION - R  = GLM.DETAIL.LIST
0006 *               U  = COA.BAL.UPDATE                                *               U  = COA.BAL.UPDATE
0007 *               C  = CLEAR PRIOR ENTRY                             *               C  = CLEAR PRIOR ENTRY

0006 *               U  = COA.BAL.UPDATE                                *               U  = COA.BAL.UPDATE
0007 *               C  = CLEAR PRIOR ENTRY                             *               C  = CLEAR PRIOR ENTRY
0008 *               F  = FILE PRIOR ENTRY                              *               F  = FILE PRIOR ENTRY
0009 *               DR = DAILY DETAIL LIST                             *               DR = DAILY DETAIL LIST
0010 *               DU = DAILY BALANCE  UPDATE                         *               DU = DAILY BALANCE  UPDATE
0011                                                                 >  *               CR = GL.DETAIL.LIST
0012 *ENDOC                                                             *ENDOC
0013 *T19837 rick 11/16/1995 * LOCKING PROBLEM ALLOWED MORE THAN ON     *T19837 rick 11/16/1995 * LOCKING PROBLEM ALLOWED MORE THAN 
0014 *                         PERFORM UPDATES                          *                         PERFORM UPDATES
0015                                                                 >  *T21078 diane 06/18/1997 * GL HISTORY AND CURRENT ACTIVITY R

0016                                                                 >  *T23080 cindy 02/22/1999 * upgrade to rev11 buttons
0017                                                                 >  *T24511 cm 11/15/1999 * Add Account Detail Activity Report.
0018 **************************************************************     ************************************************************
0019 *COPY>CPYLIB>CHAR                                               <  
0020 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0021 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                              |  *COPY>CPYLIB>CHAR
0022                                                                 >  *

0023                                                                 >  *---- SETUP FOR SYSTEM ERROR MESSAGES
0024                                                                 >  *
0025                                                                 >  SYS.TYPE = 1
0026                                                                 >  CALL SYSCOM(MAT SYSCOM.REC)
0027                                                                 >  *
0028 PROMPT ""                                                          PROMPT ""
0029 PROCREAD INBUFF ELSE                                               PROCREAD INBUFF ELSE

0037 CASE TYPE = "U"                                                    CASE TYPE = "U"
0038 CASE TYPE = "C"                                                    CASE TYPE = "C"
0039 CASE TYPE = "F"                                                    CASE TYPE = "F"
0040 CASE TYPE = "DR"                                                   CASE TYPE = "DR"
0041 CASE TYPE = "DU"                                                   CASE TYPE = "DU"
0042                                                                 >  CASE TYPE = "CR"
0043 CASE 1                                                             CASE 1
0044 ERRMSG = "INVALID PARAMETER PASSED FROM PROC"                      ERRMSG = "INVALID PARAMETER PASSED FROM PROC"
0045 GOSUB 91000                                                        GOSUB 91000
0046 GOTO 88888                                                         GOTO 88888

0053 OPEN '','SECURITY' TO SECURITY ELSE                                OPEN '','SECURITY' TO SECURITY ELSE
0054 ERRMSG = 'CANNOT LOCATE SECURITY FILE'                             ERRMSG = 'CANNOT LOCATE SECURITY FILE'
0055 GOSUB 91000                                                        GOSUB 91000
0056 GOTO 88888                                                         GOTO 88888
0057 END                                                                END
0058                                                                 >  *     PORT.ACCT = OCONV(0,"U50BB")
0059                                                                 >  *     PORT = FIELD(PORT.ACCT," ",1)
0060                                                                 >  *     ACCT = FIELD(PORT.ACCT," ",2)
0061                                                                 >  *     PORT = SYSTEM(18)
0062                                                                 >  * PORT = @TTY

0063                                                                 >  *PORT = PORT[INDEX(PORT,"/",1)+4,99]
0064                                                                 >  * IND.POS = INDEX(PORT,'/',1)
0065                                                                 >  * IF IND.POS = 0 THEN
0066                                                                 >  *    PORT = PORT[4,(LEN(PORT)-3)]
0067                                                                 >  * END ELSE
0068                                                                 >  *    PORT = PORT[4,IND.POS-4]
0069                                                                 >  * END

0070                                                                 >  * PER DD 2/7/94 - PORT IS NO LONGER REQUIRED (LMR)
0071 PORT = 'TTY'                                                       PORT = 'TTY'
0072 CALL SYSVARS.SUB(PORT)                                             CALL SYSVARS.SUB(PORT)
0073 READV USER.ID FROM SECURITY, 'R.':PORT,2 ELSE USER.ID = ''         READV USER.ID FROM SECURITY, 'R.':PORT,2 ELSE USER.ID = ''
0074 PORT = USER.ID                                                     PORT = USER.ID
0075                                                                 >  *     ACCT = SYSTEM(19)
0076 ACCT = @WHO                                                        ACCT = @WHO

0077 READU ITEM FROM CONTROL, CONO:"GLS.UPD.CHK" ELSE ITEM = ""         READU ITEM FROM CONTROL, CONO:"GLS.UPD.CHK" ELSE ITEM = ""
0078 ERRMSG = ""                                                        ERRMSG = ""
0079 BEGIN CASE                                                         BEGIN CASE
0080 CASE ITEM<2> # "" AND ITEM<2> # PORT                               CASE ITEM<2> # "" AND ITEM<2> # PORT
0081 BEGIN CASE                                                         BEGIN CASE
0082                                                                 >  CASE ITEM<3> = "CR"
0083                                                                 >  ERRMSG = 'NEED TO WAIT FOR USER (':ITEM<2>:') TO FINISH ACCO
0084 CASE ITEM<3> = "R"                                                 CASE ITEM<3> = "R"
0085 ERRMSG = 'NEED TO WAIT FOR USER (':ITEM<2>:') TO FINISH ACCOUN     ERRMSG = 'NEED TO WAIT FOR USER (':ITEM<2>:') TO FINISH ACCO
0086 CASE ITEM<3> = "U"                                                 CASE ITEM<3> = "U"

0110 ITEM<3> = TYPE                                                     ITEM<3> = TYPE
0111 ITEM<2> = PORT                                                     ITEM<2> = PORT
0112 WRITE ITEM ON CONTROL, CONO:"GLS.UPD.CHK"                          WRITE ITEM ON CONTROL, CONO:"GLS.UPD.CHK"
0113 END CASE                                                           END CASE
0114 GOTO 99999                                                         GOTO 99999
0115 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN             |  *
0116                                                                 >  *---- CALLS FOR SYSCOM
0117                                                                 >  *
0118                                                                 >  91000* 
0119                                                                 >  PRINTER OFF

0120                                                                 >  ERR.TYPE = 1
0121                                                                 >  CALL SYSCOM(MAT SYSCOM.REC)
0122                                                                 >  PRINTER ON
0123                                                                 >  RETURN
0124                                                                 >  93000* 
0125                                                                 >  PRINTER OFF
0126                                                                 >  ERR.TYPE = 3

0127                                                                 >  CALL SYSCOM(MAT SYSCOM.REC)
0128 88888 INBUFF<3> = "END"                                            88888 INBUFF<3> = "END"
0129 PROCWRITE INBUFF                                                   PROCWRITE INBUFF
0130 99999 END                                                       |  99999* 
0131                                                                 >  END
0132 


GLSBP/HIST.GL.COA.SUM                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/HIST.GL.COA.SUM
Printed for thompson at 06/28/2006 04:27:45PM

0005 * SOURCE   - GLSBP                                                 * SOURCE   - GLSBP
0006 * PROGRAM  - HIST.GL.COA.SUM                                       * PROGRAM  - HIST.GL.COA.SUM
0007 * BY       - WALID YAMOUT ,C.B.A                                   * BY       - WALID YAMOUT ,C.B.A
0008 * DATE     - 09/19/85                                              * DATE     - 09/19/85
0009 *T24263 cm 12/09/1999 * Add Modified Account History Detail Re     *T24263 cm 12/09/1999 * Add Modified Account History Detail 
0010 *T26005 alex 07/25/2001 * Display Beginning and Ending Balance  <  
0011 **************************************************************     ************************************************************
0012 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0013 *COPY>GLS.CPYLIB>GLM                                               *COPY>GLS.CPYLIB>GLM
0014 *COPY>GLS.CPYLIB>COA.BAL                                           *COPY>GLS.CPYLIB>COA.BAL

0028 ERRMSG = 'CANNOT LOCATE COMPANY, ' : CONO                          ERRMSG = 'CANNOT LOCATE COMPANY, ' : CONO
0029 GOSUB 91000; GOTO 88888                                            GOSUB 91000; GOTO 88888
0030 END                                                                END
0031 MONTH = INBUFF<4>[5,2]                                             MONTH = INBUFF<4>[5,2]
0032 OPEN INBUFF<20> TO COA.BAL ELSE                                    OPEN INBUFF<20> TO COA.BAL ELSE
0033 ERRMSG = "COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888     |  ERRMSG = INBUFF<20>:" FILE IS MISSING"; GOSUB 91000; GOTO 88
0034 END                                                                END
0035 OPEN INBUFF<16> TO CO.COA.BAL ELSE                                 OPEN INBUFF<16> TO CO.COA.BAL ELSE
0036 ERRMSG = "CO.COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888  |  ERRMSG = INBUFF<16>:" FILE IS MISSING"; GOSUB 91000; GOTO 88
0037 END                                                                END


GLSBP/HIST.GL.DETAIL.LIST2                                         /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/HIST.GL.DETAIL.LIST2
Printed for thompson at 06/28/2006 04:27:45PM

0009 * DESCRIPTION   -                                                  * DESCRIPTION   -
0010 * This program produces a General Ledger Detail List by period     * This program produces a General Ledger Detail List by peri
0011 *                                                                  *
0012 *T24263 cm 12/08/1999 * Correct the GL Detail History Report b     *T24263 cm 12/08/1999 * Correct the GL Detail History Report
0013 *                       it has never been correct.                 *                       it has never been correct.
0014 *T25196 aron 06/21/2000 * DO NOT PRINT FIRST 3 CHARS OF JE#,    <  
0015 *                         REFER# = PO# FOR VR (VOUCHER),        <  
0016 *                         NO "-" IN G/L# ON PAGE BREAKS         <  
0017 *T26005 alex 07/25/2001 * Display Beginning and Ending Balance  <  
0018 *T26090 cmykleb 05/20/2002 * Change pgm to get the rpt # from   <  

0019 *                            and use that # to get the rpt nam  <  
0020 *ENDDOC                                                            *ENDDOC
0021 **************************************************************     ************************************************************
0022 *                                                                  *
0023 *---- FILE EQUATES                                                 *---- FILE EQUATES
0024 *                                                                  *
0025 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM

0071 MATREAD COMP.REC FROM COMPANY, CONO ELSE                           MATREAD COMP.REC FROM COMPANY, CONO ELSE
0072 ERRMSG = 'CANNOT LOCATE COMPANY ' : CONO                           ERRMSG = 'CANNOT LOCATE COMPANY ' : CONO
0073 GOTO 93000                                                         GOTO 93000
0074 END                                                                END
0075 OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING'     OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSIN
0076 OPEN XX<15> TO GLR ELSE ERRMSG = 'GLR FILE MISSING';GOTO 93000  |  OPEN XX<15> TO GLR ELSE ERRMSG = XX<15>:' FILE MISSING';GOTO
0077 OPEN 'DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MISSI     OPEN 'DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MIS
0078 OPEN 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE     OPEN 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FI
0079 OPEN 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE MI     OPEN 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE 
0080 OPEN 'COA' TO COA ELSE ERRMSG = 'COA FILE MISSING';GOTO 93000      OPEN 'COA' TO COA ELSE ERRMSG = 'COA FILE MISSING';GOTO 9300

0081 OPEN XX<20> TO COA.BAL ELSE ERRMSG = 'COA.BAL FILE MISSING';GO  |  OPEN XX<20> TO COA.BAL ELSE ERRMSG = XX<20>:' FILE MISSING';
0082 OPEN 'BACKUP.0' TO CO.COA.BAL ELSE ERRMSG = 'CO.COA.BAL FILE M     OPEN 'BACKUP.0' TO CO.COA.BAL ELSE ERRMSG = 'CO.COA.BAL FILE
0083 OPEN 'BACKUP.1' TO DV.COA.BAL ELSE ERRMSG = 'DV.COA.BAL FILE M     OPEN 'BACKUP.1' TO DV.COA.BAL ELSE ERRMSG = 'DV.COA.BAL FILE
0084 OPEN 'BACKUP.2' TO DP.COA.BAL ELSE ERRMSG = 'DP.COA.BAL FILE M     OPEN 'BACKUP.2' TO DP.COA.BAL ELSE ERRMSG = 'DP.COA.BAL FILE
0085 OPEN 'BACKUP.3' TO CC.COA.BAL ELSE ERRMSG = 'CC.COA.BAL FILE M     OPEN 'BACKUP.3' TO CC.COA.BAL ELSE ERRMSG = 'CC.COA.BAL FILE
0086 OPEN 'VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOTO 930     OPEN 'VEND' TO VEND ELSE ERRMSG = 'VEND FILE MISSING';GOTO 9
0087 OPEN 'SQV' TO SQV ELSE ERRMSG = 'SQV FILE MISSING';GOTO 93000      OPEN 'SQV' TO SQV ELSE ERRMSG = 'SQV FILE MISSING';GOTO 9300

0115 CR.END = 161 + (2 * END.PERIOD[5,2])                               CR.END = 161 + (2 * END.PERIOD[5,2])
0116 *T24263 ^                                                          *T24263 ^
0117 NODATA = 1                                                         NODATA = 1
0118 STRUC = CO.ACCT.MASK:STR("#",15 - LEN(CO.ACCT.MASK))               STRUC = CO.ACCT.MASK:STR("#",15 - LEN(CO.ACCT.MASK))
0119 SLINE = DSH15:SP1:DSH35:SP1:DSH8:SP1:DSH2:SP1:DSH8:SP1:DSH15:S     SLINE = DSH15:SP1:DSH35:SP1:DSH8:SP1:DSH2:SP1:DSH8:SP1:DSH15
0120 *T26090 v                                                       |  H.LINE = "ACCOUNT HISTORY DETAIL REPORT"
0121 *    H.LINE = "ACCOUNT HISTORY DETAIL REPORT"                   |  CALL GET.PROG.HEAD(CONO,CO.NAME,H.LINE,"","",HD1,HD2)
0122 *    CALL GET.PROG.HEAD(CONO,CO.NAME,H.LINE,"","",HD1,HD2)      <  
0123 CO.NAME = ""                                                    <  
0124 RPT.NAME = ""                                                   <  

0125 RPT.NO = XX<2>                                                  <  
0126 CALL GET.PROG.HEAD(CONO,CO.NAME,RPT.NAME,RPT.NO,"",HD1,HD2)     <  
0127 *T26090 ^                                                       <  
0128 PRINTER ON                                                         PRINTER ON
0129 *                                                                  *
0130 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0131 *                                                                  *

0645 IF SEQ <> 0 THEN                                                   IF SEQ <> 0 THEN
0646 *T24263    G.DATE = OCONV(GLM.DATE,"D2/")"R#8"                     *T24263    G.DATE = OCONV(GLM.DATE,"D2/")"R#8"
0647 G.DATE = ' ':GLM.MON:' '                                           G.DATE = ' ':GLM.MON:' '
0648 SR = GLM.SRC"L#2"                                                  SR = GLM.SRC"L#2"
0649 REF.NO = GLM.REF "L#8"                                             REF.NO = GLM.REF "L#8"
0650 *T25196 v                                                       <  
0651                                                                 <  
0652 PO.NUMS=''                                                      <  
0653 REF.OUTPUT = ''                                                 <  
0654 IF GLM.SRC = "VR" THEN                                          <  

0655 MATREAD VEND.REC FROM VEND,CONO:GLM.REF THEN                    <  
0656 SQV.ID = GLM.DESC[1,6]                                          <  
0657 MATREAD SQV.REC FROM SQV,CONO:SQV.ID THEN                       <  
0658 IF SQV.PO.NOS = '' THEN                                         <  
0659 REF.NO = "NO PO#"                                               <  
0660 END ELSE                                                        <  
0661 PO.CNT=DCOUNT(SQV.PO.NOS,VM)                                    <  

0662 FOR X=1 TO PO.CNT                                               <  
0663 LOCATE SQV.PO.NOS<1,X> IN PO.NUMS<1>,1 SETTING FND ELSE         <  
0664 PO.NUMS<1,FND>=SQV.PO.NOS<1,X>                                  <  
0665 END                                                             <  
0666 NEXT X                                                          <  
0667 REF.NO = PO.NUMS<1,1>                                           <  
0668 END                                                             <  

0669 END                                                             <  
0670 END                                                             <  
0671 IF REF.NO = '' THEN REF.NO= GLM.REF                             <  
0672 REF.NO = REF.NO "R#8"                                           <  
0673 END                                                             <  
0674                                                                 <  
0675 IF SR = "JE" THEN REF.NO = REF.NO[4,LEN(REF.NO)-3] "L#8"        <  

0676 *          IF SR = "VR" THEN                                    <  
0677 *            PO.NUM = ""                                        <  
0678 *            SQV.KEY = CONO:FIELD(GLM.DESC," ",1)               <  
0679 *            READV PO.NUM FROM SQV,SQV.KEY,14 ELSE PO.NUM = "N  <  
0680 *            IF PO.NUM = "" THEN PO.NUM = "NO PO" "R#8"         <  
0681 *            REF.NO = PO.NUM<1,1> "R#8"                         <  
0682 *          END                                                  <  

0683 *T25196 ^                                                       <  
0684 IF GLM.AMT > 0 THEN                                                IF GLM.AMT > 0 THEN
0685 DEBIT = OCONV(GLM.AMT,"MD2Z,")"R#13"                               DEBIT = OCONV(GLM.AMT,"MD2Z,")"R#13"
0686 CREDIT = SPACE(13)                                                 CREDIT = SPACE(13)
0687 END ELSE                                                           END ELSE
0688 CREDIT = OCONV((GLM.AMT * (-1)),"MD2Z,")"R#13"                     CREDIT = OCONV((GLM.AMT * (-1)),"MD2Z,")"R#13"
0689 DEBIT = SPACE(13)                                                  DEBIT = SPACE(13)

0692 PRINT GLM.DESC "R#51" :                                            PRINT GLM.DESC "R#51" :
0693 END ELSE                                                           END ELSE
0694 PRINT SPACE(16) : GLM.DESC "L#35" :                                PRINT SPACE(16) : GLM.DESC "L#35" :
0695 END                                                                END
0696 PRINT SP1:G.DATE:SP1:SR:SP1:REF.NO:SPACE(17):DEBIT:SP1:CREDIT      PRINT SP1:G.DATE:SP1:SR:SP1:REF.NO:SPACE(17):DEBIT:SP1:CREDI
0697 *T25196 v PRINT VM PO NUMBERS                                   <  
0698 IF SR = "VR" THEN                                               <  
0699 PO.COUNT = DCOUNT(PO.NUMS,VM)                                   <  
0700 IF PO.COUNT > 1 THEN                                            <  
0701 FOR PO.IDX = 2 TO PO.COUNT                                      <  

0702 PRINT SPACE(64):PO.NUMS<1,PO.IDX> "R#8"                         <  
0703 LINE.CNT = LINE.CNT + 1                                            LINE.CNT = LINE.CNT + 1
0704 IF LINE.CNT >= 55 THEN GOSUB 20;PRINT;LINE.CNT = LINE.CNT + 1      IF LINE.CNT >= 55 THEN GOSUB 20;PRINT;LINE.CNT = LINE.CNT + 
0705 NEXT PO.IDX                                                     <  
0706 END                                                                END
0707 END                                                             <  
0708 *T25196 ^                                                       <  

0709 LINE.CNT = LINE.CNT + 1                                         <  
0710 IF LINE.CNT >= 55 THEN GOSUB 20;PRINT;LINE.CNT = LINE.CNT + 1   <  
0711 END                                                             <  
0712 PREV.ACCT = ACCT                                                   PREV.ACCT = ACCT
0713 REPEAT                                                             REPEAT
0714 PRINT SLINE                                                        PRINT SLINE
0715 PRINTER OFF                                                        PRINTER OFF

0721 PRINT CHAR(12)                                                     PRINT CHAR(12)
0722 PRINT                                                              PRINT
0723 PG.NO = PG.NO + 1                                                  PG.NO = PG.NO + 1
0724 PRINT HD1:PG.NO                                                    PRINT HD1:PG.NO
0725 PRINT HD2                                                          PRINT HD2
0726 PRINT SPACE(60):"FOR PERIOD ":BEG.PERIOD:" ENDING ":END.PERIOD  |  PRINT SPACE(59):"FOR PERIOD ":BEG.PERIOD:" ENDING ":END.PERI
0727 *T24426 v                                                          *T24426 v
0728 I.LINE = 'FOR LEVEL ':LEVEL                                        I.LINE = 'FOR LEVEL ':LEVEL
0729 I.LINE = I.LINE:', SUP LEVEL ':S.LEVEL                             I.LINE = I.LINE:', SUP LEVEL ':S.LEVEL
0730 I.LINE = I.LINE:', ACCT: ':BEG.ACCT:' TO ':END.ACCT                I.LINE = I.LINE:', ACCT: ':BEG.ACCT:' TO ':END.ACCT

0740 PRINT H.LINE                                                       PRINT H.LINE
0741 IF FIRST.TIME = 0 THEN                                             IF FIRST.TIME = 0 THEN
0742 IF LEVEL LE 1 THEN                                                 IF LEVEL LE 1 THEN
0743 IF PREV.ACCT = ACCT THEN PRINT MACCT                               IF PREV.ACCT = ACCT THEN PRINT MACCT
0744 END ELSE                                                           END ELSE
0745 *T25196    PRINT ACCT[1,3]:'-':ACCT[4,3]                        |  PRINT ACCT[1,3]:'-':ACCT[4,3]
0746 PRINT ACCT[1,6]                                                 <  
0747 END                                                                END
0748 END ELSE                                                           END ELSE
0749 PRINT                                                              PRINT

0760 ERR.TYPE = 1                                                       ERR.TYPE = 1
0761 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0762 PRINTER ON                                                         PRINTER ON
0763 RETURN                                                             RETURN
0764 93000*                                                             93000*
0765                                                                 >  PRINTER CLOSE
0766 PRINTER OFF                                                        PRINTER OFF
0767 ERR.TYPE = 3                                                       ERR.TYPE = 3
0768 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0769 99999*                                                             99999*


GLSBP/HIST.GL.DETAIL.SUM                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/HIST.GL.DETAIL.SUM
Printed for thompson at 06/28/2006 04:27:45PM

0004 * SYSTEM   - PRIMAC                                                * SYSTEM   - PRIMAC
0005 * SOURCE   - GLSBP                                                 * SOURCE   - GLSBP
0006 * PROGRAM  - GLM.DETAIL.SUM                                        * PROGRAM  - GLM.DETAIL.SUM
0007 * BY       - WALID YAMOUT ,C.B.A                                   * BY       - WALID YAMOUT ,C.B.A
0008 * DATE     - 09/19/85                                              * DATE     - 09/19/85
0009 *T26005 alex 07/25/2001 * Display Beginning and Ending Balance  |  *T21078 diane 06/18/1997 * GL HISTORY AND CURRENT ACTIVITY R
0010                                                                 >  *T23080 cindy 02/22/1999 * upgrade to rev11 buttons
0011                                                                 >  *T24512 cm 11/11/1999 * Add Account Detail Activity report.
0012 **************************************************************     ************************************************************
0013 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY

0012 **************************************************************     ************************************************************
0013 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0014 *COPY>GLS.CPYLIB>GLM                                               *COPY>GLS.CPYLIB>GLM
0015 *COPY>GLS.CPYLIB>COA.BAL                                           *COPY>GLS.CPYLIB>COA.BAL
0016 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0017                                                                 >  *T23080 v
0018                                                                 >  *COPY>CPYLIB>SYSCOM
0019 *                                                                  *
0020                                                                 >  SYS.TYPE = 1
0021                                                                 >  CALL SYSCOM(MAT SYSCOM.REC)

0022                                                                 >  *T23080 ^
0023 PROCREAD INBUFF ELSE                                               PROCREAD INBUFF ELSE
0024 ERRMSG = "MUST RUN FROM PROC"; GOSUB 91000; GOTO 99999             ERRMSG = "MUST RUN FROM PROC"; GOSUB 91000; GOTO 99999
0025 END                                                                END
0026 READNEXT GLM.ID ELSE GOTO 99999                                    READNEXT GLM.ID ELSE GOTO 99999
0027 CONO = INBUFF<1>                                                   CONO = INBUFF<1>
0028 IF CONO <> GLM.ID[1,3] THEN                                        IF CONO <> GLM.ID[1,3] THEN

0034 END                                                                END
0035 MATREAD COMP.REC FROM COMPANY,CONO ELSE                            MATREAD COMP.REC FROM COMPANY,CONO ELSE
0036 ERRMSG = 'CANNOT LOCATE COMPANY, ' : CONO                          ERRMSG = 'CANNOT LOCATE COMPANY, ' : CONO
0037 GOSUB 91000; GOTO 88888                                            GOSUB 91000; GOTO 88888
0038 END                                                                END
0039 *T22799 v                                                       |  *T21078 v
0040 IF INBUFF<2> # 'H2' THEN                                        |  *     MONTH = INBUFF<3>[5,2]
0041 MONTH = INBUFF<3>[5,2]                                          <  
0042 END ELSE                                                        <  
0043 MONTH = INBUFF<4>[5,2]                                             MONTH = INBUFF<4>[5,2]

0044 END                                                             |  *T21078 ^
0045 *T22799 ^                                                       <  
0046 OPEN "",INBUFF<15> TO TEMP.FILE ELSE                               OPEN "",INBUFF<15> TO TEMP.FILE ELSE
0047 ERRMSG = "ACCOUNT.TEMP.DETIAL MISSING"; GOSUB 91000; GOTO 8888  |  ERRMSG = INBUFF<15>:" MISSING"; GOSUB 91000; GOTO 88888
0048 END                                                                END
0049 OPEN "",INBUFF<20> TO COA.BAL ELSE                                 OPEN "",INBUFF<20> TO COA.BAL ELSE
0050 ERRMSG = "COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888     |  ERRMSG = INBUFF<20>:" FILE IS MISSING"; GOSUB 91000; GOTO 88

0051 END                                                                END
0052 OPEN "",INBUFF<16> TO CO.COA.BAL ELSE                              OPEN "",INBUFF<16> TO CO.COA.BAL ELSE
0053 ERRMSG = "CO.COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888  |  ERRMSG = INBUFF<16>:" FILE IS MISSING"; GOSUB 91000; GOTO 88
0054 END                                                                END
0055 OPEN "",INBUFF<17> TO DV.COA.BAL ELSE                              OPEN "",INBUFF<17> TO DV.COA.BAL ELSE
0056 ERRMSG = "DV.COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888  |  ERRMSG = INBUFF<17>:" FILE IS MISSING"; GOSUB 91000; GOTO 88
0057 END                                                                END
0058 OPEN "",INBUFF<18> TO DP.COA.BAL ELSE                              OPEN "",INBUFF<18> TO DP.COA.BAL ELSE
0059 ERRMSG = "DP.COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888  |  ERRMSG = INBUFF<18>:" FILE IS MISSING"; GOSUB 91000; GOTO 88

0060 END                                                                END
0061 OPEN "",INBUFF<19> TO CC.COA.BAL ELSE                              OPEN "",INBUFF<19> TO CC.COA.BAL ELSE
0062 ERRMSG = "CC.COA.BAL FILE IS MISSING"; GOSUB 91000; GOTO 88888  |  ERRMSG = INBUFF<19>:" FILE IS MISSING"; GOSUB 91000; GOTO 88
0063 END                                                                END
0064 *                                                                  *
0065 DATA = 1                                                           DATA = 1
0066 ACCT.LEN = LEN(CO.ACCT.PIC)                                        ACCT.LEN = LEN(CO.ACCT.PIC)
0067 MACCT.LEN = FIELD(CO.ACCT.STRUC,"-",1)                             MACCT.LEN = FIELD(CO.ACCT.STRUC,"-",1)
0068 DIV = GLM.ID[4,2]                                                  DIV = GLM.ID[4,2]

0299 MACCT = GLM.ID[11,MACCT.LEN]                                       MACCT = GLM.ID[11,MACCT.LEN]
0300 ACCT = GLM.ID[11,ACCT.LEN]                                         ACCT = GLM.ID[11,ACCT.LEN]
0301 REPEAT                                                             REPEAT  
0302 GOTO 99999                                                         GOTO 99999
0303 **** ERROR ROUTINE                                                 **** ERROR ROUTINE
0304 91000 PRINT @(0,23): ERRMSG : CL :                              |  *T23080 v
0305 INPUT ERRMSG,1 :                                                |  * 91000 PRINT @(0,23): ERRMSG : CL :
0306 PRINT @(0,23): CL :                                             |  *    INPUT ERRMSG,1 :
0307                                                                 >  *    PRINT @(0,23): CL :
0308                                                                 >  91000 *

0309                                                                 >  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
0310 RETURN                                                             RETURN
0311                                                                 >  *T23080 ^
0312 88888 INBUFF<3> = "END"                                            88888 INBUFF<3> = "END"
0313 PROCWRITE INBUFF                                                   PROCWRITE INBUFF
0314 99999 END                                                          99999 END
0315 


GLSBP/REPORT.COLUMN.SUB                                            /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REPORT.COLUMN.SUB
Printed for thompson at 06/28/2006 04:27:45PM

0008 * BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES         * BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
0009 * DATE         - 11/05/84                                          * DATE         - 11/05/84
0010 * DESCRIPTION  -                                                   * DESCRIPTION  -
0011 *                                                                  *
0012 *T21876 diane 05/13/1997 * Use Gen.xref                            *T21876 diane 05/13/1997 * Use Gen.xref
0013 *T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,  |  *T25147 lanny 06/08/2000 * Expand CC1 & CC2 to 3 positions.
0014 **************************************************************     ************************************************************
0015 *COPY>GLS.CPYLIB>GLS.REPORT                                        *COPY>GLS.CPYLIB>GLS.REPORT
0016 *COPY>PMC.CPYLIB>DIVISION                                          *COPY>PMC.CPYLIB>DIVISION
0017 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT

0021 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0022 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0023 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0024 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0025 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0026 PAGE.SIZE = 10                                                  |  *     PAGE.SIZE = 10
0027 BEGIN.PAGE = 6                                                  |  PAGE.SIZE = 5  ;*T25147
0028 LINE.SPACE = 1                                                  |  *     BEGIN.PAGE = 6
0029                                                                 >  BEGIN.PAGE = 7  ;*T25147
0030                                                                 >  *     LINE.SPACE = 1

0031                                                                 >  LINE.SPACE = 2  ;*T25147
0032 LINE.SP = 1                                                        LINE.SP = 1
0033 PAGE.S = 10                                                        PAGE.S = 10
0034 PP.NO = 5                                                          PP.NO = 5
0035 DS.X = 49                                                          DS.X = 49
0036 DV.X = 39                                                          DV.X = 39
0037 DP.X = 42                                                          DP.X = 42

0116 GOSUB 80000                                                        GOSUB 80000
0117 CASE REQUEST = 'S'                                                 CASE REQUEST = 'S'
0118 LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE           LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0119 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0120 GOSUB 80000                                                        GOSUB 80000
0121 * T25978 v                                                      <  
0122 CASE REQUEST = 'SR'                                             <  
0123 LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE        <  
0124 IF LN < 1 THEN LN = 1                                           <  
0125 GOSUB 80000                                                     <  

0126 CASE REQUEST = 'ST'                                             <  
0127 LN = 1                                                          <  
0128 GOSUB 80000                                                     <  
0129 CASE REQUEST = 'SB'                                             <  
0130 LN = LINES                                                      <  
0131 GOSUB 80000                                                     <  
0132 * T25978 ^                                                      <  

0134 WHILE MAIN.LOOP DO REPEAT                                          WHILE MAIN.LOOP DO REPEAT
0135 GOTO 99999                                                         GOTO 99999
0136 10000*                                                             10000*
0137 GOSUB 80000                                                        GOSUB 80000
0138 SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)                SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
0139 P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"        |  *     P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "C
0140                                                                 >  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL" ;*T
0141 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0142 10100*                                                             10100*
0143 X = 3; Y = SLN                                                  |  *     X = 3; Y = SLN

0144                                                                 >  X = 4; Y = SLN ;*T25147
0145 TYP = 3; MAXL = 3; O.R = 'O'                                       TYP = 3; MAXL = 3; O.R = 'O'
0146 BEGIN CASE                                                         BEGIN CASE
0147 CASE LN = 1                                                        CASE LN = 1
0148 MINV = GLRP.GRP.LEN + 2                                            MINV = GLRP.GRP.LEN + 2
0149 CASE GLRP.COL.LEN<1,LN-1> + 0 = 0                                  CASE GLRP.COL.LEN<1,LN-1> + 0 = 0
0150 MINV = GLRP.COLUMN<1,LN-1>                                         MINV = GLRP.COLUMN<1,LN-1>

0182 GLRP.DEPT = DELETE(GLRP.DEPT,1,LN,0)                               GLRP.DEPT = DELETE(GLRP.DEPT,1,LN,0)
0183 GLRP.CCTR = DELETE(GLRP.CCTR,1,LN,0)                               GLRP.CCTR = DELETE(GLRP.CCTR,1,LN,0)
0184 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                 P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
0185 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0186 END ELSE                                                           END ELSE
0187 P_X  = 3 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"              |  *           P_X  = 3 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "C
0188 P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COLUMN<1,LN>  |  P_X  = 4 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL" ;*T25147
0189 P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.LEN<1,LN  |  *T25147     P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:GLR
0190 P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.TYPE<1,  |  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COLUMN<1,L
0191 P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.CC1<1,L  |  *T25147     P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:GLR

0192 P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.CC2<1,L  |  P_X  := AM:8 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.LEN<1,
0193                                                                 >  *T25147     P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:GL
0194                                                                 >  P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.TYPE<
0195                                                                 >  *T25147     P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:GL
0196                                                                 >  P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.CC1<1
0197                                                                 >  *T25147     P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:GL
0198                                                                 >  P_X  := AM:15 ; P_Y := AM:SLN+1 ; P_VALUE := AM:GLRP.COL.CC2

0221 END                                                                END
0222 IF MAXV > HEAD.LEN THEN MAXV = HEAD.LEN                            IF MAXV > HEAD.LEN THEN MAXV = HEAD.LEN
0223 IF MAXV = 0 THEN                                                   IF MAXV = 0 THEN
0224 GLRP.COL.LEN<1,LN> = 0                                             GLRP.COL.LEN<1,LN> = 0
0225 MAXV = ''                                                          MAXV = ''
0226 P_X  = 7 ; P_Y = SLN ; P_VALUE = GLRP.COL.LEN<1,LN> "R#3" ; P_  |  *T25147  P_X  = 7 ; P_Y = SLN ; P_VALUE = GLRP.COL.LEN<1,LN>
0227                                                                 >  P_X  = 8 ; P_Y = SLN ; P_VALUE = GLRP.COL.LEN<1,LN> "R#3" ; 
0228 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0229 GOTO 10120                                                         GOTO 10120
0230 END                                                                END

0231 X = 7; Y = SLN                                                  |  *T25147 X = 7; Y = SLN
0232                                                                 >  X = 8; Y = SLN
0233 TYP = 3; MAXL = 3; O.R = 'O'                                       TYP = 3; MAXL = 3; O.R = 'O'
0234 MINV = 0                                                           MINV = 0
0235 IF GLRP.COL.LEN<1,LN> = '' THEN                                    IF GLRP.COL.LEN<1,LN> = '' THEN
0236 DEFAULT = 1                                                        DEFAULT = 1
0237 END ELSE                                                           END ELSE

0240 HMSG = "Enter column length or ZERO (0) for hidden column"         HMSG = "Enter column length or ZERO (0) for hidden column"
0241 CALL EDIT.SUB                                                      CALL EDIT.SUB
0242 IF VALUE = 'END' THEN GOTO 10000                                   IF VALUE = 'END' THEN GOTO 10000
0243 GLRP.COL.LEN<1,LN> = VALUE                                         GLRP.COL.LEN<1,LN> = VALUE
0244 10120*                                                             10120*
0245 X = 11; Y = SLN                                                 |  *T25147 X = 11; Y = SLN
0246                                                                 >  X = 12; Y = SLN
0247 TYP = 1; MAXL = 1; O.R = 'O'                                       TYP = 1; MAXL = 1; O.R = 'O'
0248 IF LN = 1 THEN                                                     IF LN = 1 THEN
0249 VALDAT = 'R'                                                       VALDAT = 'R'

0259 END                                                                END
0260 CALL EDIT.SUB                                                      CALL EDIT.SUB
0261 IF VALUE = 'END' THEN GOTO 10000                                   IF VALUE = 'END' THEN GOTO 10000
0262 GLRP.COL.TYPE<1,LN> = VALUE                                        GLRP.COL.TYPE<1,LN> = VALUE
0263 10130*                                                             10130*
0264 X = 13; Y = SLN                                                 |  *T25147 X = 13; Y = SLN
0265                                                                 >  X = 14; Y = SLN
0266 TYP = 1; MAXL = 3; O.R = 'R'                                       TYP = 1; MAXL = 3; O.R = 'R'
0267 BEGIN CASE                                                         BEGIN CASE
0268 CASE GLRP.COL.TYPE<1,LN> = 'R'                                     CASE GLRP.COL.TYPE<1,LN> = 'R'

0282 IF VALUE = 'END' THEN GOTO 10000                                   IF VALUE = 'END' THEN GOTO 10000
0283 GLRP.COL.CC1<1,LN> = VALUE                                         GLRP.COL.CC1<1,LN> = VALUE
0284 IF GLRP.COL.TYPE<1,LN> = 'R' THEN                                  IF GLRP.COL.TYPE<1,LN> = 'R' THEN
0285 GLRP.COL.CC2<1,LN> = ''                                            GLRP.COL.CC2<1,LN> = ''
0286 GLRP.COL.TLN<1,LN> = ''                                            GLRP.COL.TLN<1,LN> = ''
0287 P_X  = 16 ; P_Y = SLN ; P_VALUE = GLRP.COL.CC2<1,LN> "L#3" ; P  |  *T25147    P_X  = 16 ; P_Y = SLN ; P_VALUE = GLRP.COL.CC2<1,
0288                                                                 >  P_X  = 15 ; P_Y = SLN+1 ; P_VALUE = GLRP.COL.CC2<1,LN> "L#3"
0289 P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.TLN<1,L     P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:GLRP.COL.TLN<1
0290 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0291 GOTO 10155                                                         GOTO 10155

0292 END                                                                END
0293 10140*                                                             10140*
0294 X = 16; Y = SLN                                                 |  *T25147 X = 16; Y = SLN
0295 TYP = 1; MAXL = 2; O.R = 'R'                                    |  X = 15; Y = SLN+1
0296                                                                 >  *T25147 TYP = 1; MAXL = 2; O.R = 'R'
0297                                                                 >  TYP = 1; MAXL = 3; O.R = 'R'
0298 VALDAT = ''                                                        VALDAT = ''
0299 FOR I = 1 TO LN - 1                                                FOR I = 1 TO LN - 1
0300 VALDAT = VALDAT : VM : I                                           VALDAT = VALDAT : VM : I

0467 LAST.LINE = START.LINE + PAGE.SIZE - 1                             LAST.LINE = START.LINE + PAGE.SIZE - 1
0468 CNT = 1                                                            CNT = 1
0469 FOR N = START.LINE TO LAST.LINE UNTIL GLRP.COLUMN<1,N> = ""        FOR N = START.LINE TO LAST.LINE UNTIL GLRP.COLUMN<1,N> = ""
0470 SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0471 P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"                P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
0472 P_X  := AM:0 ; P_Y := AM:SSLN ; P_VALUE := AM:N "R#2"           |  *T25147    P_X  := AM:0 ; P_Y := AM:SSLN ; P_VALUE := AM:N "
0473 P_X  := AM:3 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COLUMN<1,N>  |  P_X  := AM:0 ; P_Y := AM:SSLN ; P_VALUE := AM:N "R#3"
0474 P_X  := AM:7 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.LEN<1,N  |  *T25147         P_X  := AM:3 ; P_Y := AM:SSLN ; P_VALUE := A
0475 P_X  := AM:11 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.TYPE<1  |  P_X  := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COLUMN<1,
0476 P_X  := AM:13 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.CC1<1,  |  *T25147    P_X  := AM:7 ; P_Y := AM:SSLN ; P_VALUE := AM:GLR

0477 P_X  := AM:16 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.CC2<1,  |  P_X  := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.LEN<1
0478                                                                 >  *T25147    P_X  := AM:11 ; P_Y := AM:SSLN ; P_VALUE := AM:GL
0479                                                                 >  P_X  := AM:12 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.TYPE
0480                                                                 >  *T25147    P_X  := AM:13 ; P_Y := AM:SSLN ; P_VALUE := AM:GL
0481                                                                 >  P_X  := AM:14 ; P_Y := AM:SSLN ; P_VALUE := AM:GLRP.COL.CC1<
0482                                                                 >  *T25147    P_X  := AM:16 ; P_Y := AM:SSLN ; P_VALUE := AM:GL
0483                                                                 >  P_X  := AM:15 ; P_Y := AM:SSLN+1 ; P_VALUE := AM:GLRP.COL.CC

0499 NEXT N                                                             NEXT N
0500 FOR M = CNT TO PAGE.SIZE                                           FOR M = CNT TO PAGE.SIZE
0501 SSLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)                SSLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
0502 P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"                P_X = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
0503 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0504                                                                 >  *T25147 v
0505                                                                 >  P_X = 0 ; P_Y = SSLN+1 ; P_VALUE = "" ; P_OPT = "CL"
0506                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0507                                                                 >  *T25147 ^
0508 NEXT M                                                             NEXT M


GLSBP/REPORT.LINE.SUB                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REPORT.LINE.SUB
Printed for thompson at 06/28/2006 04:27:46PM

0001 SUBROUTINE REPORT.LINE.SUB(CONO,IN.ACCT.LEN,CO.ACCT.MASK)          SUBROUTINE REPORT.LINE.SUB(CONO,IN.ACCT.LEN,CO.ACCT.MASK)
0002 * REVISION    - [08.1]                                             * REVISION    - [08.1]
0003 *T21177 diane 04/09/1997 * REV11 UPG, REFORMAT FIXED AMOUNT        *T21177 diane 04/09/1997 * REV11 UPG, REFORMAT FIXED AMOUNT
0004 *T26007 ajibaly 12/03/2001 * INSERT ABILITY IN REVIEW SECTION   |  *T25152 lanny 06/01/2000 * Allow hidden lines on report.
0005                                                                 >  *T25149 lanny 06/07/2000 * Sort line data by Catg.
0006 *                                                                  *
0007 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0008 *COPY>GLS.CPYLIB>COM.GLS.REPORT                                    *COPY>GLS.CPYLIB>COM.GLS.REPORT
0009 *COPY>GLS.CPYLIB>GLS.REPORT                                        *COPY>GLS.CPYLIB>GLS.REPORT
0010 *COPY>GLS.CPYLIB>ACCT.TYPE                                         *COPY>GLS.CPYLIB>ACCT.TYPE

0029 SUB.CATG = 4                                                       SUB.CATG = 4
0030 CURR = 5                                                           CURR = 5
0031 FIX = 6                                                            FIX = 6
0032 PROD = 7                                                           PROD = 7
0033 DV.X = 16                                                          DV.X = 16
0034 DP.X = 20                                                       |  DP.X = 19
0035 CC.X = 24                                                       |  CC.X = 22
0036 GEN.DIV = "00"                                                     GEN.DIV = "00"
0037 GEN.DEPT = "00"                                                    GEN.DEPT = "00"
0038 GEN.CCTR = "000"                                                   GEN.CCTR = "000"

0046 FIX.FLG = 0                                                        FIX.FLG = 0
0047 PAGE.S = 7                                                         PAGE.S = 7
0048 BEGIN.PAGE = 6                                                     BEGIN.PAGE = 6
0049 LINE.SP = 1                                                        LINE.SP = 1
0050 PP.NO = 6                                                          PP.NO = 6
0051 DS.X = 29                                                       |  DS.X = 27
0052 SV.PAGE.SIZE = 4                                                   SV.PAGE.SIZE = 4
0053 SV.BEGIN.PAGE = 16                                                 SV.BEGIN.PAGE = 16
0054 SV.LINE.SPACE = 1                                                  SV.LINE.SPACE = 1
0055 SV.OLD.START.LINE = 0                                              SV.OLD.START.LINE = 0

0059 GXR.CO = CONO                                                      GXR.CO = CONO
0060 GXR.LOC = 1                                                        GXR.LOC = 1
0061 MAT GL.DESC = ""                                                   MAT GL.DESC = ""
0062 SAVE.GLRP.REC = ''                                                 SAVE.GLRP.REC = ''
0063 SAVE.ACCT.DESC = ""                                                SAVE.ACCT.DESC = ""
0064                                                                 >  RESEQ.LINE.DATA = ''  ;*T25149
0065                                                                 >  RESEQ.GL.DESC = ''    ;*T25149
0066 COL.CNT = COUNT(GLRP.COLUMN,VM) + (GLRP.COLUMN # '')               COL.CNT = COUNT(GLRP.COLUMN,VM) + (GLRP.COLUMN # '')
0067 ECD.ACTION = 3;CALL SCRN.EDIT                                      ECD.ACTION = 3;CALL SCRN.EDIT
0068 MV.LINES = GLRP.BEG.LINE + 1                                       MV.LINES = GLRP.BEG.LINE + 1

0146 WHILE MV.LINES > MV.OLD.LINES DO                                   WHILE MV.LINES > MV.OLD.LINES DO
0147 GOSUB 100                                                          GOSUB 100
0148 REPEAT                                                             REPEAT
0149 MV.LN = MV.LINES                                                   MV.LN = MV.LINES
0150 CASE MV.ANS = 'R'                                                  CASE MV.ANS = 'R'
0151 GOSUB 7000 ;* ENTER AND VALIDATE LINE NO                        |  GOSUB 7000
0152 IF LNO THEN                                                        IF LNO THEN
0153 MV.LN = LNO                                                        MV.LN = LNO
0154 MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(MV.LN - 1,MV.PAGE     MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(MV.LN - 1,MV.PA
0155 MV.XLN = MV.LN + GLRP.BEG.LINE                                     MV.XLN = MV.LN + GLRP.BEG.LINE

0214 IF LNO THEN                                                        IF LNO THEN
0215 MV.LN = LNO                                                        MV.LN = LNO
0216 GOSUB 30000                                                        GOSUB 30000
0217 END                                                                END
0218 CASE MV.ANS = 'FA'                                                 CASE MV.ANS = 'FA'
0219 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0220 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0221 FIX.FLG = 1                                                        FIX.FLG = 1
0222 MV.OLD.START.LINE = 0                                              MV.OLD.START.LINE = 0
0223 GOSUB 30000                                                        GOSUB 30000

0224 CASE MV.ANS = 'DS'                                                 CASE MV.ANS = 'DS'
0225 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"   |  *           P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ;
0226                                                                 >  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = ""
0227 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0228 FIX.FLG = 0                                                        FIX.FLG = 0
0229 MV.OLD.START.LINE = 0                                              MV.OLD.START.LINE = 0
0230 GOSUB 30000                                                        GOSUB 30000
0231 END CASE                                                           END CASE

0270 SV.OLD.LINES = SV.LINES                                            SV.OLD.LINES = SV.LINES
0271 GOSUB 2000                                                         GOSUB 2000
0272 WHILE SV.LINES > SV.OLD.LINES DO REPEAT                            WHILE SV.LINES > SV.OLD.LINES DO REPEAT
0273 SV.LN = SV.LINES                                                   SV.LN = SV.LINES
0274 GOSUB 40000                                                        GOSUB 40000
0275 *T26007 v                                                       <  
0276 CASE SV.ANS = 'I'                                               <  
0277 SV.ANS = 'A'                                                    <  
0278 GOSUB 8000 ;* ENTER AND VALIDATE LINE NO                        <  
0279 IF LNO THEN                                                     <  

0280 LOOP                                                            <  
0281 SV.LN = LNO                                                     <  
0282 INS '' BEFORE GL.DESC(MV.XLN)<1,SV.LN>                          <  
0283 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN>          <  
0284 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN>          <  
0285 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN>          <  
0286 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,SV.LN>          <  

0287 SV.LINES += 1                                                   <  
0288 SV.OLD.LINES = SV.LINES                                         <  
0289 SV.OLD.START.LINE = 0                                           <  
0290 GOSUB 2000                                                      <  
0291 SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GL  <  
0292 LNO += 1                                                        <  
0293 WHILE SV.LINES >= SV.OLD.LINES DO REPEAT                        <  

0294 SV.LINES = 0                                                    <  
0295 GOSUB 40000                                                     <  
0296 SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GL  <  
0297 SV.OLD.START.LINE = 0                                           <  
0298 GOSUB 40000                                                     <  
0299 END                                                             <  
0300 *T26007 ^                                                       <  

0428 SLN = MV.SLN                                                       SLN = MV.SLN
0429 SAVE.MV.SLN = MV.SLN                                               SAVE.MV.SLN = MV.SLN
0430 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> # 'R' THEN                   IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> # 'R' THEN
0431 DV.NO = ''; DP.NO = ''; CC.NO = ''                                 DV.NO = ''; DP.NO = ''; CC.NO = ''
0432 P_X  = 16 ; P_Y = MV.SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""      P_X  = 16 ; P_Y = MV.SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = "
0433 P_X  := AM:20 ; P_Y := AM:MV.SLN ; P_VALUE := AM:DP.NO "L#2"    |  P_X  := AM:19 ; P_Y := AM:MV.SLN ; P_VALUE := AM:DP.NO "L#2"
0434 P_X  := AM:24 ; P_Y := AM:MV.SLN ; P_VALUE := AM:CC.NO"L#3"     |  P_X  := AM:22 ; P_Y := AM:MV.SLN ; P_VALUE := AM:CC.NO"L#3"
0435 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0436 GOTO 10500                                                         GOTO 10500
0437 END                                                                END

0449 10100 MV.SLN = SAVE.MV.SLN                                         10100 MV.SLN = SAVE.MV.SLN
0450 IF FIX.FLG THEN                                                    IF FIX.FLG THEN
0451 *         P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; P_     *         P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; 
0452 *         P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"-------     *         P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"-----
0453 *         P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLR     *         P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:G
0454 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0455 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.RE  |  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.
0456 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0457 END                                                                END
0458 GOTO 1000                                                          GOTO 1000

0460 GLRP.REC(MV.XLN)<1,GLRP.LINE.DEPT> = DP.NO                         GLRP.REC(MV.XLN)<1,GLRP.LINE.DEPT> = DP.NO
0461 GLRP.REC(MV.XLN)<1,GLRP.LINE.CCTR> = CC.NO                         GLRP.REC(MV.XLN)<1,GLRP.LINE.CCTR> = CC.NO
0462 MV.SLN = SAVE.MV.SLN                                               MV.SLN = SAVE.MV.SLN
0463 1700 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' THEN              1700 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' THEN    
0464 GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = ''                             GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = ''
0465 P_X  = 29 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.L  |  P_X  = 27 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP
0466 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0467 GOTO 1800                                                          GOTO 1800
0468 END                                                                END
0469 *      P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; P_OPT     *      P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; P_O

0484 *         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                    *         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0485 *      END                                                         *      END
0486 *      IF VALUE = 'END' THEN GOTO 1100                             *      IF VALUE = 'END' THEN GOTO 1100
0487 IF VALUE = 'END' THEN                                              IF VALUE = 'END' THEN
0488 IF FIX.FLG = 1 THEN                                                IF FIX.FLG = 1 THEN
0489 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0490 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.RE  |  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.
0491 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0492 END ELSE                                                           END ELSE
0493 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"   |  *        P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_

0494 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.X  |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = ""
0495                                                                 >  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV
0496 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0497 END                                                                END
0498 GOTO 1100                                                          GOTO 1100
0499 END                                                                END
0500 GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = VALUE                          GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = VALUE

0499 END                                                                END
0500 GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = VALUE                          GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = VALUE
0501 1800 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' AND GLRP.REC(     1800 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' AND GLRP.RE
0502 GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = ''                            GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = ''
0503 IF FIX.FLG THEN                                                    IF FIX.FLG THEN
0504 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0505 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.RE  |  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.
0506 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0507 END ELSE                                                           END ELSE
0508 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"   |  *        P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_

0509 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.X  |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = ""
0510                                                                 >  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV
0511 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0512 END                                                                END
0513 *         P_X  = 29 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN     *         P_X  = 29 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.X
0514 *         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                    *         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0515 GOTO 1900                                                          GOTO 1900

0516 END                                                                END
0517 X = 29; Y = MV.SLN                                              |  X = 27; Y = MV.SLN
0518 TYP = 1; MAXL = GLRP.GRP.LEN; O.R = 'O'                            TYP = 1; MAXL = GLRP.GRP.LEN; O.R = 'O'
0519 DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC>                       DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC>
0520 CALL EDIT.SUB                                                      CALL EDIT.SUB
0521 IF VALUE = 'END' THEN GOTO 1100                                    IF VALUE = 'END' THEN GOTO 1100
0522 GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = VALUE                         GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = VALUE
0523 IF FIX.FLG THEN                                                    IF FIX.FLG THEN

0524 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0525 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.RE  |  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.
0526 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0527 END                                                                END
0528                                                                 >  * T20614 v
0529                                                                 >  1850 *
0530                                                                 >  IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' THEN

0531                                                                 >  GLRP.REC(MV.XLN)<1,GLRP.LINE.HIDE> = ''
0532                                                                 >  P_X = 79; P_Y = MV.SLN; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LI
0533                                                                 >  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0534                                                                 >  GOTO 1900
0535                                                                 >  END
0536                                                                 >  X = 79; Y = MV.SLN
0537                                                                 >  TYP = 9; O.R = 'O'

0538                                                                 >  HMSG = "Hidden line (Y/N)"
0539                                                                 >  IF GLRP.REC(MV.XLN)<1,GLRP.LINE.HIDE> = "" THEN
0540                                                                 >  DEFAULT = "N"
0541                                                                 >  END ELSE
0542                                                                 >  DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.HIDE>
0543                                                                 >  END
0544                                                                 >  CALL EDIT.SUB

0545                                                                 >  IF VALUE = 'END' THEN GOTO 1100
0546                                                                 >  GLRP.REC(MV.XLN)<1,GLRP.LINE.HIDE> = VALUE
0547                                                                 >  * T20614 ^
0548 1900 MV.LINES = GLRP.BEG.LINE + 1                                  1900 MV.LINES = GLRP.BEG.LINE + 1    
0549 LOOP WHILE GLRP.REC(MV.LINES) # '' DO                              LOOP WHILE GLRP.REC(MV.LINES) # '' DO
0550 MV.LINES = MV.LINES + 1                                            MV.LINES = MV.LINES + 1
0551 REPEAT                                                             REPEAT

0760 CASE 1                                                             CASE 1
0761 ERRMSG = "INVALID LINE ENTER AGAIN"; GOSUB 91000; GOTO 2100        ERRMSG = "INVALID LINE ENTER AGAIN"; GOSUB 91000; GOTO 2100
0762 END CASE                                                           END CASE
0763 PTR = 1                                                            PTR = 1
0764 LOOP                                                               LOOP
0765 *T26007 v                                                       |  XCNT = DCOUNT(GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE>,SVM)
0766 *      XCNT = DCOUNT(GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE>,SVM)    <  
0767 XCNT = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.R  <  
0768 *T26007 ^                                                       <  
0769 FND = 0                                                            FND = 0

0770 FOR X = PTR TO XCNT                                                FOR X = PTR TO XCNT
0771 IF GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> = GLRP.REC(MV.XLN)     IF GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> = GLRP.REC(MV.XL
0772 FND = X; XCNT = 0                                                  FND = X; XCNT = 0
0773 END                                                                END
0774 NEXT X                                                             NEXT X
0775                                                                 >  *      LOCATE GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> IN GL
0776 BEGIN CASE                                                         BEGIN CASE
0777 CASE FND = 0                                                       CASE FND = 0
0778 CASE FND = SV.LN                                                   CASE FND = SV.LN
0779 PTR = FND + 1                                                      PTR = FND + 1

0925 P_X  := AM:6 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1     P_X  := AM:6 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)
0926 P_X  := AM:10 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<     P_X  := AM:10 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0927 P_X  := AM:12 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<     P_X  := AM:12 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0928 P_X  := AM:14 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<     P_X  := AM:14 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0929 P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<     P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0930 P_X  := AM:20 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<  |  P_X  := AM:19 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0931 P_X  := AM:24 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<  |  P_X  := AM:22 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0932 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0933 IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS =     IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS
0934 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"   |  *        P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_

0935 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<  |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = ""
0936                                                                 >  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0937                                                                 >  P_X  := AM:79 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN
0938 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0939 END ELSE                                                           END ELSE
0940 P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description "   |  P_X  = 27 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description 
0941 P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.RE  |  P_X  := AM:27 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.

0950 NEXT N                                                             NEXT N
0951 IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS =     IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS
0952 FIX.FLG = 0                                                        FIX.FLG = 0
0953 END                                                                END
0954 30999 RETURN                                                       30999 RETURN    
0955 40000 SV.START.LINE = 1 + INT((SV.LN-1)/SV.PAGE.SIZE) * SV.PAG  |  40000 GOSUB 50000  ;*T25149
0956                                                                 >  SV.START.LINE = 1 + INT((SV.LN-1)/SV.PAGE.SIZE) * SV.PAGE.SI
0957 IF SV.START.LINE = SV.OLD.START.LINE THEN GOTO 40999               IF SV.START.LINE = SV.OLD.START.LINE THEN GOTO 40999
0958 SV.OLD.START.LINE = SV.START.LINE                                  SV.OLD.START.LINE = SV.START.LINE
0959 SV.LAST.LINE = SV.START.LINE + SV.PAGE.SIZE - 1                    SV.LAST.LINE = SV.START.LINE + SV.PAGE.SIZE - 1

1050 SV.SLN = SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(N-1,SV.PAGE.SIZE)     SV.SLN = SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(N-1,SV.PAGE.SIZ
1051 P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = "" ; P_OPT = "CL"              P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = "" ; P_OPT = "CL"
1052 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1053 NEXT N                                                             NEXT N
1054 40999 RETURN                                                       40999 RETURN    
1055                                                                 >  *T25149 v
1056                                                                 >  50000 *
1057                                                                 >  RESEQ.LINE.DATA = ''
1058                                                                 >  RESEQ.GL.DESC = ''
1059                                                                 >  FOR I = 1 TO 10

1060                                                                 >  RESEQ.LINE.DATA<1,I> = GLRP.REC(MV.XLN)<1,I>
1061                                                                 >  NEXT I
1062                                                                 >  FOR I = 1 TO SV.LINES
1063                                                                 >  LOCATE GLRP.REC(MV.XLN)<1,11,I> IN RESEQ.LINE.DATA<1,11>,1 B
1064                                                                 >  INS GL.DESC(MV.XLN)<1,I> BEFORE RESEQ.GL.DESC<1,LFND>
1065                                                                 >  INS GLRP.REC(MV.XLN)<1,11,I> BEFORE RESEQ.LINE.DATA<1,11,LFN
1066                                                                 >  INS GLRP.REC(MV.XLN)<1,12,I> BEFORE RESEQ.LINE.DATA<1,12,LFN

1067                                                                 >  INS GLRP.REC(MV.XLN)<1,13,I> BEFORE RESEQ.LINE.DATA<1,13,LFN
1068                                                                 >  INS GLRP.REC(MV.XLN)<1,14,I> BEFORE RESEQ.LINE.DATA<1,14,LFN
1069                                                                 >  INS GLRP.REC(MV.XLN)<1,15,I> BEFORE RESEQ.LINE.DATA<1,15,LFN
1070                                                                 >  END
1071                                                                 >  NEXT I
1072                                                                 >  RESEQ.LINE.DATA<1,16> = GLRP.REC(MV.XLN)<1,16>
1073                                                                 >  GLRP.REC(MV.XLN) = RESEQ.LINE.DATA

1074                                                                 >  GL.DESC(MV.XLN)  = RESEQ.GL.DESC
1075                                                                 >  RETURN
1076                                                                 >  *T25149 ^
1077 ***** SCROLL ROUTINE FOR DIV, DEPT, CCTR                           ***** SCROLL ROUTINE FOR DIV, DEPT, CCTR    
1078 *T21876 *COPY>PMCBP>DV.DP.CC.SCROLL                                *T21876 *COPY>PMCBP>DV.DP.CC.SCROLL    
1079 ***** SCROLL SCREEN FOR DIV, DEP, CCTR                             ***** SCROLL SCREEN FOR DIV, DEP, CCTR    
1080 80000 MV.OLD.START.LINE = OLD.START                                80000 MV.OLD.START.LINE = OLD.START    


GLSBP/REPORT.LINE.XREF.SUB                                         /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REPORT.LINE.XREF.SUB
Printed for thompson at 06/28/2006 04:27:46PM

0012 *                                                                  *
0013 * REVISION - A.1.0                                                 * REVISION - A.1.0
0014 *                                                                  *
0015 * DESCRIPTION                                                      * DESCRIPTION
0016 *                                                                  *
0017                                                                 >  *T25149 lanny 06/06/2000 * Show data in sorted order.
0018 **************************************************************     ************************************************************
0019 *                                                                  *
0020 *---- COPY STATEMENTS                                              *---- COPY STATEMENTS
0021 *                                                                  *

0027 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0028 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0029 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0030 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0031 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0032                                                                 >  SORTED.CODES=''   ;*T25149
0033 *                                                                  *
0034 *---- INITIALIZATION                                               *---- INITIALIZATION
0035 *                                                                  *
0036 UNKNOWN = STR("?",10)                                              UNKNOWN = STR("?",10)

0041 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0042 *                                                                  *
0043 100*                                                               100*
0044 LN = 1                                                             LN = 1
0045 LINES = COUNT(CODES,VM) + (CODES # "")                             LINES = COUNT(CODES,VM) + (CODES # "")
0046                                                                 >  *T25149 v
0047                                                                 >  FOR I = 1 TO LINES
0048                                                                 >  LOCATE CODES<1,I> IN SORTED.CODES<1>,1 BY 'AR' SETTING FND E
0049                                                                 >  INS CODES<1,I> BEFORE SORTED.CODES<1,FND>
0050                                                                 >  END

0051                                                                 >  NEXT I
0052                                                                 >  CODES = SORTED.CODES
0053                                                                 >  LINES = COUNT(CODES,VM) + (CODES # "")
0054                                                                 >  *T25149 ^
0055 FOR I = 1 TO LINES                                                 FOR I = 1 TO LINES
0056 BEGIN CASE                                                         BEGIN CASE
0057 CASE TYPE = 1                                                      CASE TYPE = 1


GLSBP/REPORT.MAINT                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REPORT.MAINT
Printed for thompson at 06/28/2006 04:27:47PM

0006 * PROGRAM      - REPORT.MAINT                                      * PROGRAM      - REPORT.MAINT
0007 * BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES         * BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
0008 * DATE         - 11/05/84                                          * DATE         - 11/05/84
0009 * DESCRIPTION  -                                                   * DESCRIPTION  -
0010 *                                                                  *
0011 *T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,  |  *T25152 lanny 06/01/2000 * Allow hidden lines on line screen
0012 *T26126 adelgado 02/28/2002 * Implement the LOCKED clause for   |  *T25147 lanny 06/08/2000 * Column screen allow 3 pos for CC1
0013 **************************************************************     ************************************************************
0014 *                                                                  *
0015 **************************                                         **************************

0032 MAT FILE.VARS = ''                                                 MAT FILE.VARS = ''
0033 OPEN '', 'GLS.SCREENS' TO M.SCREENS ELSE                           OPEN '', 'GLS.SCREENS' TO M.SCREENS ELSE
0034 ERRMSG = 'GLS.SCREENS FILE IS MISSING'                             ERRMSG = 'GLS.SCREENS FILE IS MISSING'
0035 GOTO 93000                                                         GOTO 93000
0036 END                                                                END
0037                                                                 >  *T25152 v
0038                                                                 >  OPEN '', 'CBN.SCREENS' TO SECOND.SCREENS ELSE
0039                                                                 >  ERRMSG = 'CBN.SCREENS FILE IS MISSING'
0040                                                                 >  GOTO 93000
0041                                                                 >  END

0042                                                                 >  *T25152 ^
0043 OPEN '', 'GLS.REPORT' TO GLS.REPORT ELSE                           OPEN '', 'GLS.REPORT' TO GLS.REPORT ELSE
0044 ERRMSG = 'GLS.REPORT FILE IS MISSING'                              ERRMSG = 'GLS.REPORT FILE IS MISSING'
0045 GOTO 93000                                                         GOTO 93000
0046 END                                                                END
0047 OPEN '', 'PREFIX' TO PREFIX ELSE                                   OPEN '', 'PREFIX' TO PREFIX ELSE
0048 ERRMSG = 'PREFIX FILE IS MISSING'                                  ERRMSG = 'PREFIX FILE IS MISSING'

0113 * MAIN PROCESSING *                                                * MAIN PROCESSING *
0114 *******************                                                *******************
0115 ECD.SCRN.CNT = 3                                                   ECD.SCRN.CNT = 3
0116 ECD.SCRN.NAME<1> = 'REPORT.MAINT'                                  ECD.SCRN.NAME<1> = 'REPORT.MAINT'
0117 ECD.SCRN.NAME<2> = 'REPORT.COLUMN.SUB'                             ECD.SCRN.NAME<2> = 'REPORT.COLUMN.SUB'
0118                                                                 >  ECD.SCRN.FLAG<2> = 2             ;*T25147
0119 ECD.SCRN.NAME<3> = 'REPORT.LINE.SUB'                               ECD.SCRN.NAME<3> = 'REPORT.LINE.SUB'
0120                                                                 >  ECD.SCRN.FLAG<3> = 2             ;*T25152
0121 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0122 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1

0132 *        ECD.PREFIX.ID = CONO                                      *        ECD.PREFIX.ID = CONO
0133 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0134 IF ECD.RET.VALUE = "END" THEN                                      IF ECD.RET.VALUE = "END" THEN
0135 MAIN.LOOP = 0                                                      MAIN.LOOP = 0
0136 END ELSE                                                           END ELSE
0137 * T26126 v                                                      |  MATREADU GLRP.REC FROM GLS.REPORT, CONO:ECD.RET.VALUE THEN
0138 MATREADU GLRP.REC FROM GLS.REPORT, CONO:ECD.RET.VALUE LOCKED    <  
0139 ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())    <  
0140 GOSUB 91000                                                     <  
0141 END THEN                                                        <  

0142 * T26126 ^                                                      <  
0143 *        BEGIN CASE                                                *        BEGIN CASE
0144 *           CASE ECD.RET.VALUE = 'END'                             *           CASE ECD.RET.VALUE = 'END'
0145 *              MAIN.LOOP = 0                                       *              MAIN.LOOP = 0
0146 *           CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''      *           CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # 
'
0147 *              FOR I = 1 TO GLRP.REC.SIZE                          *              FOR I = 1 TO GLRP.REC.SIZE
0148 *                 GLRP.REC(I) = ECD.VALDAT.ITEM<I>                 *                 GLRP.REC(I) = ECD.VALDAT.ITEM<I>

0275 GOSUB 11000                                                        GOSUB 11000
0276 CASE REQUEST = 'S'                                                 CASE REQUEST = 'S'
0277 TLN = 1 + INT((TLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE         TLN = 1 + INT((TLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0278 IF TLN > TLINES THEN TLN = 1                                       IF TLN > TLINES THEN TLN = 1
0279 GOSUB 11000                                                        GOSUB 11000
0280 * T25978 v                                                      <  
0281 CASE REQUEST = 'SR'                                             <  
0282 TLN = 1 + INT((TLN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE      <  
0283 IF TLN < 1 THEN TLN = 1                                         <  
0284 GOSUB 11000                                                     <  

0285 CASE REQUEST = 'ST'                                             <  
0286 TLN = 1                                                         <  
0287 GOSUB 11000                                                     <  
0288 CASE REQUEST = 'SB'                                             <  
0289 TLN = TLINES                                                    <  
0290 GOSUB 11000                                                     <  
0291 * T25978 ^                                                      <  

0364 GOSUB 12000                                                        GOSUB 12000
0365 CASE REQUEST = 'S'                                                 CASE REQUEST = 'S'
0366 HLN = 1 + INT((HLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE         HLN = 1 + INT((HLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
0367 IF HLN > HLINES THEN HLN = 1                                       IF HLN > HLINES THEN HLN = 1
0368 GOSUB 12000                                                        GOSUB 12000
0369 * T25978 v                                                      <  
0370 CASE REQUEST = 'SR'                                             <  
0371 HLN = 1 + INT((HLN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE      <  
0372 IF HLN < 1 THEN HLN = 1                                         <  
0373 GOSUB 12000                                                     <  

0374 CASE REQUEST = 'ST'                                             <  
0375 HLN = 1                                                         <  
0376 GOSUB 12000                                                     <  
0377 CASE REQUEST = 'SB'                                             <  
0378 HLN = HLINES                                                    <  
0379 GOSUB 12000                                                     <  
0380 * T25978 ^                                                      <  


GLSBP/REPORT.PRINT                                                 /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/REPORT.PRINT
Printed for thompson at 06/28/2006 04:27:47PM

0007 * DESCRIPTION  -                                                   * DESCRIPTION  -
0008 * 04/12/89 (GG) TASK # 14025                                       * 04/12/89 (GG) TASK # 14025
0009 * 02/25/92 DLG TASK 16468(CSF 17552) FIXED USER REPORT CREATE      * 02/25/92 DLG TASK 16468(CSF 17552) FIXED USER REPORT CREAT
0010 * DLG THIS PROGRAM DIFFERS ON UNIDATA BECAUSE NO FILE CAN STAR     * DLG THIS PROGRAM DIFFERS ON UNIDATA BECAUSE NO FILE CAN ST
0011 * T18573 5/95 LLH 1-52 ACCOUNTING PERIODS                          * T18573 5/95 LLH 1-52 ACCOUNTING PERIODS
0012 * T21488 lanny 01/17/1997 * Error in determining correct point  |  *T21488 lanny 01/17/1997 * Error in determining correct poin
0013 *                           Budget data.                           *                          Budget data.
0014 * C36742 cm 07/19/2000 * If the last page of the report ends o  |  *T25152 lanny 06/01/2000 * Allow for hidden lines.
0015 *                        line 60 then an extra page with just   |  *T25147 lanny 06/14/2000 * Expand Columns to 999.
0016 *                        prints.                                <  

0017 *T26493 cmykleb 05/23/2002 * Use GET.PROG.HEAD for the heading  <  
0018 *C40361 adelgado 07/19/2002 * The report is overflowing to ano  <  
0019 *                         and allow hidden lines.               <  
0020 *T28554 lross 05/18/2005 * When Curr period is 01 extracting l  <  
0021 *                          data using -1 in "MON" column dupli  <  
0022 *                          period data in that column.          <  
0023 *ENDDOC                                                            *ENDDOC

0038 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0039 *COPY>PMC.CPYLIB>FISCAL                                            *COPY>PMC.CPYLIB>FISCAL
0040 *COPY>GLS.CPYLIB>COA.BAL                                           *COPY>GLS.CPYLIB>COA.BAL
0041 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0042 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0043 DIM ACCT.AMT(8,100)                                             |  *T25147 v All dims of 100 below changed to 999.
0044                                                                 >  DIM ACCT.AMT(8,999)
0045 DIM LINES(25)                                                      DIM LINES(25)
0046 DIM COL.ATT(100)                                                |  DIM COL.ATT(999)
0047 DIM COL.CASE(100)                                               |  DIM COL.CASE(999)

0048 DIM COL.PIC(100)                                                |  DIM COL.PIC(999)
0049 DIM COL.SPC(100)                                                |  DIM COL.SPC(999)
0050 DIM COL.CONV(100)                                               |  DIM COL.CONV(999)
0051 DIM COL.PREC(100)                                               |  DIM COL.PREC(999)
0052 DIM COL.LEN(100)                                                |  DIM COL.LEN(999)
0053 DIM COL.TYPE(100)                                               |  DIM COL.TYPE(999)
0054 DIM COL.TLN(100)                                                |  DIM COL.TLN(999)

0055 DIM COL.MON(100)                                                |  DIM COL.MON(999)
0056 DIM FIL.PTR(100)                                                |  DIM FIL.PTR(999)
0057 DIM OFIL.PTR(100)                                               |  DIM OFIL.PTR(999)
0058 DIM COL.PTR(100)                                                |  DIM COL.PTR(999)
0059 DIM LINE.DASH(25)                                                  DIM LINE.DASH(25)
0060 DIM COA.BAL(5)                                                     DIM COA.BAL(5)
0061 MAT COL.PTR = ""                                                   MAT COL.PTR = ""

0176 ERRMSG = "CC.COA.BAL FILE IS MISSING"; GOTO 93000                  ERRMSG = "CC.COA.BAL FILE IS MISSING"; GOTO 93000
0177 END                                                                END
0178 S.CONO.KEY = CONO : SEL.DV : SEL.DP : SEL.CC                       S.CONO.KEY = CONO : SEL.DV : SEL.DP : SEL.CC
0179 S.FIL.PTR = 5                                                      S.FIL.PTR = 5
0180 END CASE                                                           END CASE
0181 TEMP.FILE.NAME = BUFFER<20>                                     |  * PORT.NO = BUFFER<9>
0182                                                                 >  TEMP.FILE.NAME = BUFFER<9>
0183 TODAY = DATE()                                                     TODAY = DATE()
0184 REPORT.LEN = 132                                                   REPORT.LEN = 132
0185 * PAGE.SIZE = 60       ;* C40361                                |  PAGE.SIZE = 60

0186 PAGE.SIZE = 59       ;* C40361                                  <  
0187 *T26493 v                                                       <  
0188 CONO.NAME = ""                                                  <  
0189 RPT.NAME = ""                                                   <  
0190 RPT.NO = BUFFER<2>                                              <  
0191 HD1 = ""                                                        <  
0192 HD2 = ""                                                        <  

0193 CALL GET.PROG.HEAD(CONO,CONO.NAME,RPT.NAME,RPT.NO,"",HD1,HD2)   <  
0194 *T26493 ^                                                       <  
0195 *CSF 26179 - REVERSED THE '*' LINES BELOW.                         *CSF 26179 - REVERSED THE '*' LINES BELOW.
0196 SCB.OPN=CB.OPN                                                     SCB.OPN=CB.OPN
0197 SCB.LYR=CB.LYR                                                     SCB.LYR=CB.LYR
0198 SCB.BUD=CB.BUD                                                     SCB.BUD=CB.BUD
0199 CB.OPN = CB.OPN + PERIOD + 1                                       CB.OPN = CB.OPN + PERIOD + 1

0229 PAGE.NO = 0                                                        PAGE.NO = 0
0230 MATREAD GLRP.REC FROM GLS.REPORT, GLRP.ID ELSE                     MATREAD GLRP.REC FROM GLS.REPORT, GLRP.ID ELSE
0231 GOTO 9999                                                          GOTO 9999
0232 END                                                                END
0233 * TASK 16468 *                                                     * TASK 16468 *
0234 IF BUFFER<11> # "NONE" THEN                                     |  IF BUFFER<10> # "N" THEN
0235 USER.FILE = BUFFER<11>:GLRP.ID[4,99]                            |  USER.FILE = BUFFER<10>:GLRP.ID[4,99]
0236 SENTENCE = "CREATE-FILE (":USER.FILE:" 1,1 71,1)"                  SENTENCE = "CREATE-FILE (":USER.FILE:" 1,1 71,1)"
0237 EXECUTE SENTENCE CAPTURING OUTPUT                                  EXECUTE SENTENCE CAPTURING OUTPUT
0238 OPEN "",USER.FILE TO USER.REPORT ELSE                              OPEN "",USER.FILE TO USER.REPORT ELSE

0264 COL.TLN(COL) = GLRP.COL.TLN<1,COL>                                 COL.TLN(COL) = GLRP.COL.TLN<1,COL>
0265 COL.PREC(COL) = GLRP.COL.PREC<1,COL>                               COL.PREC(COL) = GLRP.COL.PREC<1,COL>
0266 COL.LEN(COL) = GLRP.COL.LEN<1,COL>                                 COL.LEN(COL) = GLRP.COL.LEN<1,COL>
0267 MPTR = PERIOD + GLRP.COL.MON<1,COL>                                MPTR = PERIOD + GLRP.COL.MON<1,COL>
0268 BEGIN CASE                                                         BEGIN CASE
0269 *T28554 v                                                       <  
0270 CASE MPTR = 0 AND GLRP.COL.MON<1,COL>+0 # 0                     <  
0271 IF COL.CC1<COL> = 'P' AND GLRP.COL.C.Y<1,COL> = 'Y' THEN        <  
0272 MPTR = NUM.PERIODS - 1                                          <  
0273 GLRP.COL.MON<1,COL> = MPTR                                      <  

0274 COL.CC1<COL> = 'L'                                              <  
0275 END                                                             <  
0276 *T28554 ^                                                       <  
0277 CASE MPTR < 1                                                      CASE MPTR < 1
0278 MPTR = PERIOD - 1                                                  MPTR = PERIOD - 1
0279 *T21488 v                                                          *T21488 v
0280 *      CASE MPTR > 52                                              *      CASE MPTR > 52

0403 OCONO.KEY = CONO.KEY                                               OCONO.KEY = CONO.KEY
0404 MAT OFIL.PTR = MAT FIL.PTR                                         MAT OFIL.PTR = MAT FIL.PTR
0405 FOR XLN = 1 TO LN.CNT                                              FOR XLN = 1 TO LN.CNT
0406 LN = XLN + GLRP.BEG.LINE                                           LN = XLN + GLRP.BEG.LINE
0407 LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>                           LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>
0408                                                                 >  PRINT @(0,23) : XLN :
0409 LINE = ""                                                          LINE = ""
0410 BEGIN CASE                                                         BEGIN CASE
0411 CASE LN.TYPE = "R"                                                 CASE LN.TYPE = "R"
0412 LN.ACCT = GLRP.REC(LN)<1,GLRP.LINE.ACCT>                           LN.ACCT = GLRP.REC(LN)<1,GLRP.LINE.ACCT>

0566 TLINES<TLN.CNT> = XLN                                              TLINES<TLN.CNT> = XLN
0567 TLN.BEG = XLN + 1                                                  TLN.BEG = XLN + 1
0568 END CASE                                                           END CASE
0569 WRITE LINE ON TEMP.REPORT, XLN                                     WRITE LINE ON TEMP.REPORT, XLN
0570 * TASK 16468 *                                                     * TASK 16468 *
0571 IF BUFFER<11> # "NONE" THEN                                     |  IF BUFFER<10> # "N" THEN
0572 WRITE LINE ON USER.REPORT, XLN                                     WRITE LINE ON USER.REPORT, XLN
0573 END                                                                END
0574 NEXT XLN                                                           NEXT XLN
0575                                                                 >  PRINT

0618 END                                                                END
0619 TITLE = TITLE[1,POS-1]:CCTR.DESC:TITLE[POS+4,999]                  TITLE = TITLE[1,POS-1]:CCTR.DESC:TITLE[POS+4,999]
0620 END                                                                END
0621 END                                                                END
0622 LINES(HLN) = SPACE(INT((REPORT.LEN-LEN(TITLE))/2 + .5)) : TITL     LINES(HLN) =  SPACE(INT((REPORT.LEN-LEN(TITLE))/2 + .5)) : T
0623 LINES(HLN) = SPACE(10):LINES(HLN) ; * T26493                    <  
0624 END                                                                END
0625 NEXT L                                                             NEXT L
0626 HLN = HLN + 1                                                      HLN = HLN + 1
0627 LINES(HLN) = ""                                                    LINES(HLN) = ""

0674 END CASE                                                           END CASE
0675 END                                                                END
0676 NEXT COL                                                           NEXT COL
0677 WRITE LINE ON TEMP.REPORT, XLN                                     WRITE LINE ON TEMP.REPORT, XLN
0678 * TASK 16468 *                                                     * TASK 16468 *
0679 IF BUFFER<11> # "NONE" THEN                                     |  IF BUFFER<10> # "N" THEN
0680 WRITE LINE ON USER.REPORT, XLN                                     WRITE LINE ON USER.REPORT, XLN
0681 END                                                                END
0682 NEXT XLN                                                           NEXT XLN
0683 PRINTER ON                                                         PRINTER ON

0693 LN = XLN + GLRP.BEG.LINE                                           LN = XLN + GLRP.BEG.LINE
0694 LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>                           LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>
0695 LN.DESC = GLRP.REC(LN)<1,GLRP.LINE.DESC>                           LN.DESC = GLRP.REC(LN)<1,GLRP.LINE.DESC>
0696 LN.DASH = GLRP.REC(LN)<1,GLRP.LINE.DASH>                           LN.DASH = GLRP.REC(LN)<1,GLRP.LINE.DASH>
0697 LN.SKIP = GLRP.REC(LN)<1,GLRP.LINE.SKIP>                           LN.SKIP = GLRP.REC(LN)<1,GLRP.LINE.SKIP>
0698                                                                 >  LN.HIDE = GLRP.REC(LN)<1,GLRP.LINE.HIDE>  ;*T25152
0699 BEGIN CASE                                                         BEGIN CASE
0700 CASE LN.DASH # ""                                                  CASE LN.DASH # ""
0701 LOCATE LN.DASH IN DASHES,1 SETTING FND ELSE                        LOCATE LN.DASH IN DASHES,1 SETTING FND ELSE
0702 DASHES<FND> = LN.DASH                                              DASHES<FND> = LN.DASH

0706 IF COL.LEN(COL) > 0 THEN                                           IF COL.LEN(COL) > 0 THEN
0707 LINE.DASH(FND) = LINE.DASH(FND) : STR(LN.DASH,COL.LEN(COL))        LINE.DASH(FND) = LINE.DASH(FND) : STR(LN.DASH,COL.LEN(COL))
0708 END                                                                END
0709 NEXT COL                                                           NEXT COL
0710 END                                                                END
0711 IF LN.PTR+1 GE PAGE.SIZE THEN GOSUB 10000    ;* C40361          <  
0712 PRINT LINE.DASH(FND)                                               PRINT LINE.DASH(FND)
0713 LN.PTR = LN.PTR + 1                                             <  
0714 IF LN.TYPE = "C" THEN GOTO 999                                     IF LN.TYPE = "C" THEN GOTO 999
0715                                                                 >  LN.PTR = LN.PTR + 1

0716 CASE LN.TYPE = "C"                                                 CASE LN.TYPE = "C"
0717 PLINE = LN.DESC LINE.DESC.PIC                                      PLINE = LN.DESC LINE.DESC.PIC
0718 IF LN.PTR+1 GE PAGE.SIZE THEN GOSUB 10000    ;* C40361          <  
0719 PRINT PLINE                                                        PRINT PLINE
0720 LN.PTR += 1                                 ;* C40361           <  
0721 GOTO 999                                                           GOTO 999
0722 END CASE                                                           END CASE
0723 READ LINE FROM TEMP.REPORT, XLN ELSE LINE = ""                     READ LINE FROM TEMP.REPORT, XLN ELSE LINE = ""
0724 PLINE = LN.DESC LINE.DESC.PIC                                      PLINE = LN.DESC LINE.DESC.PIC

0791 PLINE = PLINE : OCONV(PVALUE,COL.CONV(COL)) COL.PIC(COL)<1,1>      PLINE = PLINE : OCONV(PVALUE,COL.CONV(COL)) COL.PIC(COL)<1,1
0792 END CASE                                                           END CASE
0793 NEXT COL                                                           NEXT COL
0794 WRITE LINE ON TEMP.REPORT, XLN                                     WRITE LINE ON TEMP.REPORT, XLN
0795 * TASK 16468 *                                                     * TASK 16468 *
0796 IF BUFFER<11> # "NONE" THEN                                     |  IF BUFFER<10> # "N" THEN
0797 WRITE LINE ON USER.REPORT, XLN                                     WRITE LINE ON USER.REPORT, XLN
0798 END                                                                END
0799 IF LN.TYPE = "T" THEN                                              IF LN.TYPE = "T" THEN
0800 IF TLN.CNT = 0 THEN                                                IF TLN.CNT = 0 THEN

0803 TLN = TLINES<1>                                                    TLN = TLINES<1>
0804 TLN.CNT = TLN.CNT - 1                                              TLN.CNT = TLN.CNT - 1
0805 TLINES = DELETE(TLINES,1,0,0)                                      TLINES = DELETE(TLINES,1,0,0)
0806 END                                                                END
0807 END                                                                END
0808 IF LN.PTR+1 GE PAGE.SIZE THEN GOSUB 10000    ;* C40361          |  *T25152 v
0809                                                                 >  IF LN.HIDE # 'Y' THEN
0810 PRINT PLINE                                                        PRINT PLINE
0811 LN.PTR += 1                                  ;* C40361          |  999      FOR SKIP = 1 TO LN.SKIP
0812 999 *                                                           <  

0813 FOR SKIP = 1 TO LN.SKIP                                         <  
0814 IF LN.PTR+1 GE PAGE.SIZE THEN GOSUB 10000  ;* C40361            <  
0815 PRINT                                                              PRINT
0816 LN.PTR += 1                                ;* C40361            <  
0817 NEXT SKIP                                                          NEXT SKIP
0818 IF LN.PTR GE PAGE.SIZE THEN GOSUB 10000      ;* C40361          |  LN.PTR = LN.PTR + LN.SKIP + 1
0819                                                                 >  IF LN.PTR > PAGE.SIZE THEN GOSUB 10000

0820                                                                 >  END
0821                                                                 >  *T25152 ^
0822 NEXT XLN                                                           NEXT XLN
0823 PRINTER OFF                                                        PRINTER OFF
0824 PRINTER CLOSE                                                      PRINTER CLOSE
0825 9999*                                                              9999*
0826 REPEAT                                                             REPEAT

0827 *  PRINTER CLOSE                                                <  
0828 *  PRINTER OFF                                                  <  
0829 GOTO 99999                                                         GOTO 99999
0830 1100*                                                              1100*
0831 AVALUE = LINE<COL.CC1<COL>>                                        AVALUE = LINE<COL.CC1<COL>>
0832 BVALUE = LINE<COL.CC2<COL>>                                        BVALUE = LINE<COL.CC2<COL>>
0833 RETURN                                                             RETURN

0864 END                                                                END
0865 RETURN                                                             RETURN
0866 10000*                                                             10000*
0867 PRINT CHAR(12)                                                     PRINT CHAR(12)
0868 PAGE.NO = PAGE.NO + 1                                              PAGE.NO = PAGE.NO + 1
0869 *T26493 v                                                       |  IF LEN(PAGE.NO) < 2 THEN PAGE.NO = "0" : PAGE.NO
0870 *  IF LEN(PAGE.NO) < 2 THEN PAGE.NO = "0" : PAGE.NO             |  PRINT COMPANY.HEADING
0871 *  PRINT COMPANY.HEADING                                        |  PRINT " REPORT # : ": GLRP.ID[4,3] :
0872 *  PRINT " REPORT # : ": GLRP.ID[4,3] :                         |  PRINT SPACE(2) : "PAGE # : " : PAGE.NO "R#2" :
0873 *  PRINT SPACE(2) : "PAGE # : " : PAGE.NO "R#2" :               |  PRINT SPACE(70) : "DATE : ":OCONV(DATE(),"D2/") :

0874 *  PRINT SPACE(70) : "DATE : ":OCONV(DATE(),"D2/") :            |  PRINT SPACE(2) : "TIME : ":OCONV(TIME(),"MTS")
0875 *  PRINT SPACE(2) : "TIME : ":OCONV(TIME(),"MTS")               <  
0876 PHD1 = HD1 : PAGE.NO                                            <  
0877 HD3 = "FRG REPORT # : ":GLRP.ID[4,3]                            <  
0878 PRINT PHD1                                                      <  
0879 PRINT HD2                                                       <  
0880 PRINT HD3                                                       <  

0881 *T26493 ^                                                       <  
0882 FOR PLN = 1 TO HLN                                                 FOR PLN = 1 TO HLN
0883 PRINT LINES(PLN)                                                   PRINT LINES(PLN)
0884 NEXT PLN                                                           NEXT PLN
0885 *C36742 v                                                       |  LN.PTR = HLN + 3
0886 *  LN.PTR = HLN + 3                                             <  
0887 LN.PTR = HLN + 2                                                <  

0888 *C36742 ^                                                       <  
0889 LN.PTR = HLN + 3 ; * T26493                                     <  
0890 RETURN                                                             RETURN
0891 ***************************                                        ***************************
0892 20000*                                                             20000*
0893 MON.COL.CNT = DCOUNT(COL.MONTHS,AM)                                MON.COL.CNT = DCOUNT(COL.MONTHS,AM)
0894 FOR FLV = 1 TO MAX.LEVEL                                           FOR FLV = 1 TO MAX.LEVEL


