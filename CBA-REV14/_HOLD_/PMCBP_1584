









  #####  #    #   ####   #    #  #####    ####    ####   #    #
    #    #    #  #    #  ##  ##  #    #  #       #    #  ##   #
    #    ######  #    #  # ## #  #    #   ####   #    #  # #  #
    #    #    #  #    #  #    #  #####        #  #    #  #  # #
    #    #    #  #    #  #    #  #       #    #  #    #  #   ##
    #    #    #   ####   #    #  #        ####    ####   #    #

Wed Jun 28 16:57:22 CDT 2006
######  #     #  #####  ######  ######
#     # ##   ## #     # #     # #     #
#     # # # # # #       #     # #     #
######  #  #  # #       ######  ######
#       #     # #       #     # #
#       #     # #     # #     # #
#       #     #  #####  ######  #

PMCBP/BUILD.ACCESS.BY.USER                                         /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/BUILD.ACCESS.BY.USER
Printed for thompson at 06/28/2006 04:57:22PM

0001 SUBROUTINE BUILD.ACCESS.BY.USER(CONO, USER.ID, MAT SEC.REC, EA  |  SUBROUTINE BUILD.ACCESS.BY.USER(CONO, USER.ID, MAT SEC.REC, 
0002 **************************************************************     ************************************************************
0003 *                                                                  *
0004 * REVISION    - [12.0]                                          |  * REVISION    - [11.0]
0005 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0006 *                                                                  *
0007 *   PROGRAM    - BUILD.ACCESS.BY.USER                              *   PROGRAM    - BUILD.ACCESS.BY.USER

0008 *                                                                  *
0009 *   DATE       - 08/05/2002                                     |  *   DATE       - 09/17/2002
0010 *                                                                  *
0011 *   BY         - ALEJANDRO DELGADO                                 *   BY         - ALEJANDRO DELGADO
0012 *                                                                  *
0013 *   DESCRIPTION                                                    *   DESCRIPTION
0014 *                                                                  *
0015 *   This program will build the file 'ACCESS_BY_USER'.  The ne     *   This program will build the file 'ACCESS_BY_USER'.  The 

0016 *   will hold by user all menu access the user holds.           |  *   will hold by user all menu accesses the user holds.
0017 *                                                                  *
0018 *T26784 adelgado 08/06/2002 * Original Code.                    |  *T26853 adelgado 09/17/2002 * Original Code.
0019                                                                 >  *T27248 adelgado 01/31/2003 * Modify to build the menu listi
0020                                                                 >  *                             process names.
0021                                                                 >  *T27248 cmykleb 02/15/2003 * Modify pgm more for this mod.
0022                                                                 >  *C41753 adelgado 03/31/2003 * Fix sub-level menu access.

0033 *                                                                  *
0034 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0035 *                                                                  *
0036 100*                                                               100*
0037 ACCESS.REC = ''                                                    ACCESS.REC = ''
0038 CNT = DCOUNT(SEC.MENU.PROC<1>, VM)                              |  MENU.ACCESS = '' ; * T27248 CM
0039 IF SEC.MENU.FLAG = 'A' AND SEC.MENU.LEVEL LT 4 AND CNT GT 0 TH  |  SUB.MENUS = '' ; * T27248 CM
0040 ACCESS.REC = SEC.MENU.PROC                                      |  MAIN.MENUS = ''
0041 END ELSE                                                        |  MAIN.MENUS<1,-1> = 'M.FS'
0042                                                                 >  MAIN.MENUS<1,-1> = 'M.INV'

0043                                                                 >  MAIN.MENUS<1,-1> = 'M.JC'
0044                                                                 >  MAIN.MENUS<1,-1> = 'M.PMC'
0045                                                                 >  MAIN.FLAG = 0
0046 MASTER = 'M.MASTER'                                                MASTER = 'M.MASTER'
0047 GOSUB GET.MENU.NAMES                                               GOSUB GET.MENU.NAMES
0048 MENU.CNT = COUNT(MENU.NAMES,AM) + (MENU.NAMES # "")             |  GOSUB ADD.PMC.PROCESS      ;* T27248
0049                                                                 >  MENU.CNT = DCOUNT(MENU.NAMES,AM)

0050 FOR MENU.PTR = 1 TO MENU.CNT                                       FOR MENU.PTR = 1 TO MENU.CNT
0051 MENU.ID = MENU.NAMES<MENU.PTR>                                     MENU.ID = MENU.NAMES<MENU.PTR>
0052 IF MENU.ID[1,2] # "M." THEN CONTINUE                            |  MENU.AC = MENU.ACCESS<MENU.PTR> ; * T27248 CM
0053 IF MENU.ID = "M.PRS" THEN MENU.ID = "M.EP4"                     |  * T27248 v
0054 READ MENU FROM EASY.MENUS, MENU.ID ELSE CONTINUE                |  *     IF MENU.ID[1,2] # "M." THEN CONTINUE
0055                                                                 >  *     IF MENU.ID = "M.PRS" THEN MENU.ID = "M.EP4"
0056                                                                 >  PMC.FLAG = 0
0057                                                                 >  READ MENU FROM EASY.MENUS, MENU.ID ELSE PMC.FLAG = 1
0058                                                                 >  * T27248 ^

0059 GOSUB 2000                                                         GOSUB 2000
0060 NEXT MENU.PTR                                                      NEXT MENU.PTR
0061 END                                                             |  *T27248 CM v
0062                                                                 >  *
0063                                                                 >  *---- ONLY WRITE THE ACTIVE LINES
0064                                                                 >  *
0065                                                                 >  *  HOLD.REC = ACCESS.REC
0066                                                                 >  *  ACCESS.REC = ''
0067                                                                 >  *  LCNT = DCOUNT(HOLD.REC<1>,VM)

0068                                                                 >  *  FOR L = 1 TO LCNT
0069                                                                 >  *     IF HOLD.REC<2,L> = SEC.MENU.FLAG THEN
0070                                                                 >  *        ACCESS.REC<1,-1> = HOLD.REC<1,L>
0071                                                                 >  *     END
0072                                                                 >  *  NEXT L
0073                                                                 >  *T27248 CM ^
0074 WRITE ACCESS.REC ON ACCESS_BY_USER, CONO:USER.ID                   WRITE ACCESS.REC ON ACCESS_BY_USER, CONO:USER.ID

0077 *---- PROCESS SELECTED MENU                                        *---- PROCESS SELECTED MENU
0078 *                                                                  *
0079 2000*                                                              2000*
0080 LOOP.DONE = 0 ; CHECK.MENUS = ''                                   LOOP.DONE = 0 ; CHECK.MENUS = ''
0081 PRIOR.MENU = MENU.ID ; VAL.ERR = 0                                 PRIOR.MENU = MENU.ID ; VAL.ERR = 0
0082                                                                 >  IF PMC.FLAG = 0 THEN         ;* T27248
0083 LOOP                                                               LOOP
0084 IF PRIOR.MENU = 'M.MASTER' THEN                                    IF PRIOR.MENU = 'M.MASTER' THEN
0085 LOOP.DONE = 1                                                      LOOP.DONE = 1
0086 END ELSE                                                           END ELSE

0095 *                                                                  *
0096 IF SEC.MENU.LEVEL LT 4 THEN                                        IF SEC.MENU.LEVEL LT 4 THEN
0097 CCNT = DCOUNT(CHECK.MENUS,VM)                                      CCNT = DCOUNT(CHECK.MENUS,VM)
0098 FOR CPTR = 1 TO CCNT                                               FOR CPTR = 1 TO CCNT
0099 CHECK.SEL.MENU.ID = CHECK.MENUS<1,CPTR>                            CHECK.SEL.MENU.ID = CHECK.MENUS<1,CPTR>
0100 LOCATE CHECK.SEL.MENU.ID IN SEC.MENU.PROC<1>,1 SETTING FND THE  <  
0101 VAL.ERR = 1                                                     <  
0102 END                                                             <  
0103 NEXT CPTR                                                          NEXT CPTR
0104 END                                                                END

0105                                                                 >  * T27248 v
0106                                                                 >  END ELSE
0107                                                                 >  END
0108                                                                 >  * T27248 ^
0109 IF VAL.ERR = 0 THEN                                                IF VAL.ERR = 0 THEN
0110 ACCESS.REC<1,-1> = MENU.ID                                         ACCESS.REC<1,-1> = MENU.ID
0111                                                                 >  ACCESS.REC<2,-1> = MENU.AC ; * T27248 CM

0118 MATREAD MENU.REC FROM EASY.MENUS, MASTER ELSE                      MATREAD MENU.REC FROM EASY.MENUS, MASTER ELSE
0119 ERRMSG = 'CANNOT LOCATE MENU (':MASTER:') TO BUILD USER ACCESS     ERRMSG = 'CANNOT LOCATE MENU (':MASTER:') TO BUILD USER ACCE
0120 GOSUB 91000                                                        GOSUB 91000
0121 END                                                                END
0122 MENU.NAMES = MASTER                                                MENU.NAMES = MASTER
0123                                                                 >  * C41753 v
0124                                                                 >  IF SEC.MENU.FLAG = 'A' THEN
0125                                                                 >  MENU.ACS = 'A'
0126                                                                 >  END ELSE
0127                                                                 >  MENU.ACS = 'X'

0128                                                                 >  END
0129                                                                 >  MENU.ACCESS = MENU.ACS
0130                                                                 >  * C41753 ^
0131 MENU.LST = MASTER                                                  MENU.LST = MASTER
0132 MENU.PTR = 1                                                       MENU.PTR = 1
0133 1000 *                                                             1000 *
0134 MENU.PTR<1> = MENU.PTR<1> + 1                                      MENU.PTR<1> = MENU.PTR<1> + 1

0133 1000 *                                                             1000 *
0134 MENU.PTR<1> = MENU.PTR<1> + 1                                      MENU.PTR<1> = MENU.PTR<1> + 1
0135 IF MENU.PTR<1> > 33 THEN                                           IF MENU.PTR<1> > 33 THEN
0136 MENU.LST = DELETE(MENU.LST,1,0,0)                                  MENU.LST = DELETE(MENU.LST,1,0,0)
0137 MENU.PTR = DELETE(MENU.PTR,1,0,0)                                  MENU.PTR = DELETE(MENU.PTR,1,0,0)
0138                                                                 >  MENU.ACS = DELETE(MENU.ACS,1,0,0)      ;* C41753
0139 MENU.NAME = MENU.LST<1>                                            MENU.NAME = MENU.LST<1>
0140 IF MENU.NAME = "M.PRS" THEN MENU.NAME = "M.EPS"                    IF MENU.NAME = "M.PRS" THEN MENU.NAME = "M.EPS"
0141 IF MENU.NAME # "" THEN                                             IF MENU.NAME # "" THEN
0142 MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE                   MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE

0154 MENU.NAME = SEL                                                    MENU.NAME = SEL
0155 MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE                   MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE
0156 GOTO 1000                                                          GOTO 1000
0157 END                                                                END
0158 MENU.NAMES<-1> = MENU.NAME                                         MENU.NAMES<-1> = MENU.NAME
0159                                                                 >  * C41753 v
0160                                                                 >  IF SEC.MENU.FLAG = 'P' THEN
0161                                                                 >  LOCATE SEL IN SEC.MENU.PROC<1>,1 SETTING VAR THEN
0162                                                                 >  ACCESS.FLG = 'P'
0163                                                                 >  END ELSE

0164                                                                 >  IF MENU.LST<1,1> = SEL THEN ACS.PTR = 2 ELSE ACS.PTR = 1
0165                                                                 >  IF MENU.ACS<1,ACS.PTR> = 'P' THEN     ;* CHECK PREVIOUS MENU
0166                                                                 >  ACCESS.FLG = 'P'
0167                                                                 >  END ELSE
0168                                                                 >  ACCESS.FLG = 'X'
0169                                                                 >  END
0170                                                                 >  END

0171                                                                 >  END ELSE
0172                                                                 >  ACCESS.FLG = 'A'
0173                                                                 >  END
0174                                                                 >  MENU.ACCESS<-1> = ACCESS.FLG
0175                                                                 >  MENU.ACS = INSERT(MENU.ACS,1,0,0,ACCESS.FLG)
0176                                                                 >  * C41753 ^
0177 MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)                        MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)

0182 IF MENU.NAME = "M.PRS" THEN MENU.NAME = "M.EP4"                    IF MENU.NAME = "M.PRS" THEN MENU.NAME = "M.EP4"
0183 MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE                   MATREAD MENU.REC FROM EASY.MENUS, MENU.NAME ELSE
0184 GOTO 1000                                                          GOTO 1000
0185 END                                                                END
0186 MENU.NAMES<-1> = MENU.NAME                                         MENU.NAMES<-1> = MENU.NAME
0187                                                                 >  * C41753 v
0188                                                                 >  IF SEC.MENU.FLAG = 'P' THEN
0189                                                                 >  LOCATE SEL IN SEC.MENU.PROC<1>,1 SETTING VAR THEN
0190                                                                 >  ACCESS.FLG = 'P'
0191                                                                 >  END ELSE

0192                                                                 >  IF MENU.LST<1,1> = SEL THEN ACS.PTR = 2 ELSE ACS.PTR = 1
0193                                                                 >  IF MENU.ACS<1,ACS.PTR> = 'P' THEN     ;* CHECK PREVIOUS MENU
0194                                                                 >  ACCESS.FLG = 'P'
0195                                                                 >  END ELSE
0196                                                                 >  ACCESS.FLG = 'X'
0197                                                                 >  END
0198                                                                 >  END

0199                                                                 >  END ELSE
0200                                                                 >  ACCESS.FLG = 'A'
0201                                                                 >  END
0202                                                                 >  MENU.ACCESS<-1> = ACCESS.FLG
0203                                                                 >  MENU.ACS = INSERT(MENU.ACS,1,0,0,ACCESS.FLG)
0204                                                                 >  * C41753 ^
0205 MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)                        MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)

0205 MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)                        MENU.LST = INSERT(MENU.LST,1,0,0,MENU.NAME)
0206 MENU.PTR = INSERT(MENU.PTR,1,0,0,1)                                MENU.PTR = INSERT(MENU.PTR,1,0,0,1)
0207 GOSUB 1000                                                         GOSUB 1000
0208 END CASE                                                           END CASE
0209 GOTO 1000                                                          GOTO 1000
0210                                                                 >  RETURN
0211                                                                 >  * T27248 v
0212 *                                                                  *
0213                                                                 >  ADD.PMC.PROCESS: 
0214                                                                 >  *

0215                                                                 >  MCNT = DCOUNT(MENU.NAMES, AM) ; TMP.MENUS = ''
0216                                                                 >  TMP.ACCESS = '' ; * T27248
0217                                                                 >  FOR POS = 1 TO MCNT
0218                                                                 >  MENU.ID = MENU.NAMES<POS>
0219                                                                 >  MENU.AC = MENU.ACCESS<POS> ; * T27248
0220                                                                 >  IF MENU.ID[1,2] # "M." THEN CONTINUE
0221                                                                 >  IF MENU.ID = "M.PRS" THEN MENU.ID = "M.EP4"

0222                                                                 >  READ M.REC FROM EASY.MENUS, MENU.ID ELSE CONTINUE
0223                                                                 >  TMP.MENUS<-1> = MENU.ID
0224                                                                 >  TMP.ACCESS<-1> = MENU.AC ; * T27248
0225                                                                 >  TMP.CNT = DCOUNT(M.REC, AM)
0226                                                                 >  IF TMP.CNT GT 33 THEN TMP.CNT = 33
0227                                                                 >  FOR XOS = 2 TO TMP.CNT
0228                                                                 >  BEGIN CASE

0229                                                                 >  CASE M.REC<XOS,1> = ""
0230                                                                 >  CASE M.REC<XOS,1> = "C"
0231                                                                 >  CASE 1
0232                                                                 >  PMC.ID = M.REC<XOS,1>
0233                                                                 >  READ DUMP FROM PMC_PROCESS_XREF, PMC.ID THEN
0234                                                                 >  * C41753 v
0235                                                                 >  PROC.ACCESS.FLG = MENU.AC

0236                                                                 >  IF SEC.MENU.FLAG = 'A' THEN
0237                                                                 >  LOCATE MENU.ID IN SEC.MENU.PROC<1>,1 SETTING TMP.VAR THEN
0238                                                                 >  PROC.ACCESS.FLG = "A"
0239                                                                 >  END ELSE
0240                                                                 >  LOCATE PMC.ID IN SEC.MENU.PROC<1>,1 SETTING TMP.VAR THEN
0241                                                                 >  PROC.ACCESS.FLG = "A"
0242                                                                 >  END ELSE

0243                                                                 >  PROC.ACCESS.FLG = "X"
0244                                                                 >  END
0245                                                                 >  END
0246                                                                 >  END ELSE
0247                                                                 >  LOCATE PMC.ID IN SEC.MENU.PROC<1>,1 SETTING TMP.VAR THEN
0248                                                                 >  PROC.ACCESS.FLG = "P"
0249                                                                 >  END

0250                                                                 >  END
0251                                                                 >  TMP.MENUS<-1> = PMC.ID
0252                                                                 >  TMP.ACCESS<-1> = PROC.ACCESS.FLG
0253                                                                 >  * C41753 ^
0254                                                                 >  END
0255                                                                 >  END CASE
0256                                                                 >  NEXT XOS

0257                                                                 >  NEXT POS
0258                                                                 >  MENU.NAMES = TMP.MENUS
0259                                                                 >  MENU.ACCESS = TMP.ACCESS ; * T27248
0260                                                                 >  *
0261 RETURN                                                             RETURN
0262                                                                 >  * T27248 ^
0263 *                                                                  *


PMCBP/CCTR.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CCTR.MAINT
Printed for thompson at 06/28/2006 04:57:22PM

0011 * CSF 25627    - 05/06/96 Insert record locking on all files u     * CSF 25627    - 05/06/96 Insert record locking on all files
0012 *T21870 diane 05/02/1997 * FIX UNINIT VAR AT LINE 646              *T21870 diane 05/02/1997 * FIX UNINIT VAR AT LINE 646
0013 *T22100 lanny 07/23/1997 * 'C'hg line & ESC causes line to cle     *T22100 lanny 07/23/1997 * 'C'hg line & ESC causes line to c
0014 *                          re-paint.                               *                          re-paint.
0015 *T23651 cindy 02/24/1999 * not scrolling properly after change     *T23651 cindy 02/24/1999 * not scrolling properly after chan
0016 *T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,  |  *T25132 alex 05/16/2000 * Mods to add a field for Plant code
0017 *T26126 adelgado 02/21/2002 * Implement the LOCKED clause.      <  
0018 *ENDDOC                                                            *ENDDOC
0019 **************************************************************     ************************************************************
0020 *                                                                  *

0026 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0027 *COPY>PMC.CPYLIB>DEPARTMENT                                        *COPY>PMC.CPYLIB>DEPARTMENT
0028 *COPY>PMC.CPYLIB>COST.CNTR                                         *COPY>PMC.CPYLIB>COST.CNTR
0029 *COPY>JCS.CPYLIB>OPERATION                                         *COPY>JCS.CPYLIB>OPERATION
0030 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0031                                                                 >  *COPY>PMC.CPYLIB>PLANT.CODE      ;*T25132
0032                                                                 >  *COPY>CPYLIB>GEN.XREF.SUB        ;*T25132
0033 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0034 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0035 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR

0065 END                                                                END
0066 OPEN '', 'COST.CNTR' TO COST.CNTR ELSE                             OPEN '', 'COST.CNTR' TO COST.CNTR ELSE
0067 ERRMSG = 'COST.CNTR FILE IS MISSING'                               ERRMSG = 'COST.CNTR FILE IS MISSING'
0068 GOTO 93000                                                         GOTO 93000
0069 END                                                                END
0070                                                                 >  *T25132 v
0071                                                                 >  OPEN '', 'CBN.SCREENS' TO SECOND.SCREENS ELSE
0072                                                                 >  ERRMSG = 'CBN.SCREENS FILE IS MISSING'
0073                                                                 >  GOTO 93000
0074                                                                 >  END

0075                                                                 >  OPEN '', 'PLANT.CODE' TO PLANT.CODE ELSE
0076                                                                 >  ERRMSG = 'PLANT.CODE FILE IS MISSING'
0077                                                                 >  GOTO 93000
0078                                                                 >  END
0079                                                                 >  OPEN '', 'PLANT.CODE.XREF' TO PLANT.CODE.XREF ELSE
0080                                                                 >  ERRMSG = 'PLANT.CODE.XREF FILE IS MISSING'
0081                                                                 >  GOTO 93000

0082                                                                 >  END
0083                                                                 >  OPEN '', 'XREF.DATA' TO XREF.DATA ELSE
0084                                                                 >  ERRMSG = 'XREF.DATA FILE IS MISSING'
0085                                                                 >  GOTO 93000
0086                                                                 >  END
0087                                                                 >  *T25132 ^
0088 OPEN '', 'PREFIX' TO PREFIX ELSE                                   OPEN '', 'PREFIX' TO PREFIX ELSE

0112 END                                                                END
0113 END                                                                END
0114 ******************                                                 ******************
0115 * INITIALIZATION *                                                 * INITIALIZATION *
0116 ******************                                                 ******************
0117 PAGE.SIZE = 10                                                  |  *T25132 v
0118 BEGIN.PAGE = 10                                                 |  * PAGE.SIZE = 10
0119                                                                 >  * BEGIN.PAGE = 10
0120                                                                 >  PAGE.SIZE = 9
0121                                                                 >  BEGIN.PAGE = 11

0122                                                                 >  MAT GEN.XREF.REC = ''
0123                                                                 >  GXR.CO = CONO
0124                                                                 >  NEW.COST.CNTR = 0
0125                                                                 >  *T25132 ^
0126 LINE.SPACE = 1                                                     LINE.SPACE = 1
0127 LINES = 0                                                          LINES = 0
0128 OLD.START.LINE = 0                                                 OLD.START.LINE = 0

0137 SAVE.CCTR.OPER.HR.RATE = ''                                        SAVE.CCTR.OPER.HR.RATE = ''
0138 PREV.MASTER = ''                                                   PREV.MASTER = ''
0139 MAT EDIT.COM.DRIVER = ''                                           MAT EDIT.COM.DRIVER = ''
0140 ECD.SCRN.CNT = 1                                                   ECD.SCRN.CNT = 1
0141 ECD.SCRN.NAME = 'CCTR.MAINT'                                       ECD.SCRN.NAME = 'CCTR.MAINT'
0142                                                                 >  ECD.SCRN.FLAG<1> = 2        ;*T25132
0143 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0144 *******************                                                *******************
0145 * MAIN PROCESSING *                                                * MAIN PROCESSING *
0146 *******************                                                *******************

0170 CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''                  CASE ECD.RET.VALUE # '' AND  ECD.VALDAT.ITEM # ''
0171 FOR I = 1 TO CCTR.REC.SIZE                                         FOR I = 1 TO CCTR.REC.SIZE
0172 CCTR.REC(I) = ECD.VALDAT.ITEM<I>                                   CCTR.REC(I) = ECD.VALDAT.ITEM<I>
0173 NEXT I                                                             NEXT I
0174 CCTR.ID = ECD.RET.VALUE                                            CCTR.ID = ECD.RET.VALUE
0175 * T26126 v                                                      |  READU DUMMY FROM COST.CNTR, CONO:CCTR.ID ELSE NULL
0176 READU DUMMY FROM COST.CNTR, CONO:CCTR.ID LOCKED                 <  
0177 ERRMSG = 'COST CENTER record is locked by user - ':GETUSERNAME  <  
0178 GOSUB 91000 ; GOTO 200                                          <  
0179 END ELSE NULL                                                   <  

0180 * T26126 ^                                                      <  
0181 IF CCTR.DEPT = "" THEN                                             IF CCTR.DEPT = "" THEN
0182 GOSUB 500                                                          GOSUB 500
0183 IF ECD.RET.VALUE = "END" THEN GOTO 200                             IF ECD.RET.VALUE = "END" THEN GOTO 200
0184 END ELSE                                                           END ELSE
0185 MATREAD DEPT.REC FROM DEPARTMENT, CONO : CCTR.DEPT ELSE            MATREAD DEPT.REC FROM DEPARTMENT, CONO : CCTR.DEPT ELSE
0186 ERRMSG = "CANNOT LOCATE DEPARTMENT - " : CCTR.DEPT                 ERRMSG = "CANNOT LOCATE DEPARTMENT - " : CCTR.DEPT

0188 IF ECD.RET.VALUE = "END" THEN GOTO 200                             IF ECD.RET.VALUE = "END" THEN GOTO 200
0189 END                                                                END
0190 END                                                                END
0191 GOSUB 20000                                                        GOSUB 20000
0192 OLD.NAME = CCTR.DESC                                               OLD.NAME = CCTR.DESC
0193                                                                 >  NEW.COST.CNTR = 0       ;*T25132
0194 CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''                   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM = ''
0195 CCTR.ID = ECD.RET.VALUE                                            CCTR.ID = ECD.RET.VALUE
0196 READU DUMMY FROM COST.CNTR, CONO : CCTR.ID LOCKED REC.LOCK = 1     READU DUMMY FROM COST.CNTR, CONO : CCTR.ID LOCKED REC.LOCK =
0197 IF REC.LOCK THEN                                                   IF REC.LOCK THEN

0198 * T26126 v                                                      |  ERRMSG='This Cost Center is being updated - Try again.'
0199 * ERRMSG='This Cost Center is being updated - Try again.'       <  
0200 ERRMSG = 'COST CENTER record is locked by user - ':GETUSERNAME  <  
0201 * T26126 ^                                                      <  
0202 GOSUB 91000                                                        GOSUB 91000
0203 GOTO 200                                                           GOTO 200
0204 END                                                                END

0205 FOR REQUEST = 1 TO 8                                            |  *T25132 v
0206 ON REQUEST GOSUB 500,1000,1500,2000,2500,3000,3100,3200,3300    |  * FOR REQUEST = 1 TO 8
0207                                                                 >  *   ON REQUEST GOSUB 500,1000,1500,2000,2500,3000,3100,3200,
0208                                                                 >  NEW.COST.CNTR = 1
0209                                                                 >  FOR REQUEST = 1 TO 10
0210                                                                 >  ON REQUEST GOSUB 500,1000,1500,2000,2500,3000,3100,3200,3300
0211                                                                 >  *T25132 ^

0237 CASE 1                                                             CASE 1
0238 GOTO 200                                                           GOTO 200
0239 END CASE                                                           END CASE
0240 MORE = 1                                                           MORE = 1
0241 LOOP                                                               LOOP
0242                                                                 >  NEW.COST.CNTR = 0      ;*T25132
0243 ECD.NUM = 6                                                        ECD.NUM = 6
0244 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''                                 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
0245 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0246 REQUEST = ECD.RET.VALUE                                            REQUEST = ECD.RET.VALUE

0247 BEGIN CASE                                                         BEGIN CASE
0248 CASE REQUEST = 'END' OR REQUEST = 'E'                              CASE REQUEST = 'END' OR REQUEST = 'E'
0249 MORE = 0                                                           MORE = 0
0250 CASE NUM(REQUEST)                                                  CASE NUM(REQUEST)
0251 IF REQUEST > 0 THEN                                                IF REQUEST > 0 THEN
0252 ON REQUEST GOSUB 1000,1500,2000,2500,3000,3100,3200,3300        |  *T25132 v
0253                                                                 >  * ON REQUEST GOSUB 1000,1500,2000,2500,3000,3100,3200,3300
0254                                                                 >  ON REQUEST GOSUB 1000,1500,2000,2500,3000,3100,3200,3300,340
0255                                                                 >  *T25132 ^
0256 END                                                                END

0341 *             LN = LN + PAGE.SIZE                                  *             LN = LN + PAGE.SIZE
0342 LN = START.LINE + PAGE.SIZE                                        LN = START.LINE + PAGE.SIZE
0343 *T23651 ^                                                          *T23651 ^
0344 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0345 GOSUB 11000                                                        GOSUB 11000
0346 * T25978 v                                                      <  
0347 CASE REQUEST = "SR"                                             <  
0348 LN = START.LINE - PAGE.SIZE                                     <  
0349 IF LN < 1 THEN LN = 1                                           <  
0350 GOSUB 11000                                                     <  

0351 CASE REQUEST = "ST"                                             <  
0352 LN = 1                                                          <  
0353 GOSUB 11000                                                     <  
0354 CASE REQUEST = "SB"                                             <  
0355 LN = LINES                                                      <  
0356 GOSUB 11000                                                     <  
0357 * T25978 ^                                                      <  

0544 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0545 ECD.NUM = 15; SCV.REC(ECD.NUM)=''                                  ECD.NUM = 15; SCV.REC(ECD.NUM)=''
0546 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0547 END                                                                END
0548 RETURN                                                             RETURN
0549                                                                 >  *
0550                                                                 >  3400*
0551                                                                 >  *
0552                                                                 >  LOOP
0553                                                                 >  ECD.NUM = 32

0554                                                                 >  VAL.RESP=0
0555                                                                 >  ECD.ACTION=4;CALL SCRN.EDIT
0556                                                                 >  RESP = ECD.RET.VALUE
0557                                                                 >  BEGIN CASE
0558                                                                 >  CASE RESP = "END"
0559                                                                 >  VAL.RESP = 1
0560                                                                 >  CASE RESP = "" 

0561                                                                 >  GOSUB GET.PLT.DESC
0562                                                                 >  CASE RESP = "???"
0563                                                                 >  *          user is asking for help call the xref
0564                                                                 >  GXR.SORT.FILE = "PLANT.CODE" ; GXR.FILE = PLANT.CODE
0565                                                                 >  GXR.NAME = "GEN.CODE"  
0566                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
0567                                                                 >  ECD.ACTION = 2 ; CALL SCRN.EDIT

0568                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0569                                                                 >  IF NEW.COST.CNTR = 0 THEN
0570                                                                 >  OLD.START.LINE = 0
0571                                                                 >  GOSUB 11000
0572                                                                 >  END
0573                                                                 >  IF GXR.ID = "" OR GXR.ID = "END" ELSE
0574                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE,CONO:GXR.ID THEN

0575                                                                 >  ECD.NUM = 32
0576                                                                 >  SCV.REC(ECD.NUM) = GXR.ID
0577                                                                 >  CCTR.PLANT = GXR.ID
0578                                                                 >  VAL.RESP = 1
0579                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0580                                                                 >  ECD.NUM = 33
0581                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC

0582                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0583                                                                 >  END ELSE
0584                                                                 >  ERRMSG = GXR.ID:" is not a valid Plant Code"
0585                                                                 >  GOSUB 91000
0586                                                                 >  END
0587                                                                 >  END
0588                                                                 >  CASE NOT(NUM(RESP))

0589                                                                 >  ERRMSG = 'Numeric Id only.'
0590                                                                 >  GOSUB 91000
0591                                                                 >  CASE 1
0592                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE,CONO:RESP THEN
0593                                                                 >  SCV.REC(ECD.NUM) = RESP
0594                                                                 >  CCTR.PLANT = RESP
0595                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0596                                                                 >  ECD.NUM = 33
0597                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC
0598                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0599                                                                 >  VAL.RESP = 1
0600                                                                 >  END ELSE
0601                                                                 >  ERRMSG = RESP[1,40]:" is not a valid Plant code try ???"
0602                                                                 >  GOSUB 91000

0603                                                                 >  END
0604                                                                 >  END CASE
0605                                                                 >  UNTIL VAL.RESP DO REPEAT
0606                                                                 >  *
0607                                                                 >  RETURN
0608                                                                 >  *
0609                                                                 >  GET.PLT.DESC: 

0610                                                                 >  *
0611                                                                 >  ECD.NUM = 33
0612                                                                 >  ECD.ACTION = 4 ; CALL SCRN.EDIT
0613                                                                 >  BEGIN CASE
0614                                                                 >  CASE ECD.RET.VALUE = "END"
0615                                                                 >  CASE ECD.RET.VALUE = ""
0616                                                                 >  CASE 1

0617                                                                 >  GXR.NAME = "PLANT.CODE.XREF"
0618                                                                 >  GXR.XREF = PLANT.CODE.XREF
0619                                                                 >  GXR.FILE = PLANT.CODE
0620                                                                 >  GXR.SRCH.ID = ECD.RET.VALUE
0621                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0622                                                                 >  ECD.ACTION = 2; CALL SCRN.EDIT
0623                                                                 >  ECD.ACTION = 3; CALL SCRN.EDIT

0624                                                                 >  IF GXR.ID = "" THEN
0625                                                                 >  ECD.NUM = 33; SCV.REC(ECD.NUM) = ""
0626                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0627                                                                 >  END ELSE
0628                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE, CONO:GXR.ID THEN
0629                                                                 >  ECD.NUM = 32
0630                                                                 >  SCV.REC(ECD.NUM) = GXR.ID

0631                                                                 >  CCTR.PLANT = GXR.ID
0632                                                                 >  VAL.RESP = 1
0633                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0634                                                                 >  ECD.NUM = 33
0635                                                                 >  SCV.REC(ECD.NUM) = PLTC.DESC
0636                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0637                                                                 >  END ELSE

0638                                                                 >  ECD.NUM = 33; SCV.REC(ECD.NUM) = ""
0639                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0640                                                                 >  ERRMSG = "Cannot locate Plant # ":GXR.ID
0641                                                                 >  GOSUB 91000
0642                                                                 >  END
0643                                                                 >  END
0644                                                                 >  IF NEW.COST.CNTR = 0 THEN

0645                                                                 >  OLD.START.LINE = 0
0646                                                                 >  GOSUB 11000
0647                                                                 >  END
0648                                                                 >  END CASE
0649                                                                 >  RETURN
0650 10000 IF DESC.OPER = '' THEN                                       10000 IF DESC.OPER = '' THEN
0651 ACTION = 'A'                                                       ACTION = 'A'

0859 SCV.REC(15)=AST.DESC                                               SCV.REC(15)=AST.DESC
0860 END ELSE                                                           END ELSE
0861 SCV.REC(15) =  "Delinked"                                          SCV.REC(15) =  "Delinked"
0862 END                                                                END
0863 END                                                                END
0864                                                                 >  *T25132 v
0865                                                                 >  SCV.REC(32)<ECD.SCRN.NO> = CCTR.PLANT
0866                                                                 >  MATREAD PLTC.REC FROM PLANT.CODE, CONO:CCTR.PLANT ELSE MAT 
P
0867                                                                 >  SCV.REC(33)<ECD.SCRN.NO> = PLTC.DESC
0868                                                                 >  *T25132 ^


PMCBP/COUNTRY.CODE.MAINT                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/COUNTRY.CODE.MAINT
Printed for thompson at 06/28/2006 04:57:23PM

0006 * SOURCE      - PMCBP                                              * SOURCE      - PMCBP
0007 * PROGRAM     - COUNTRY.CODE.MAINT                                 * PROGRAM     - COUNTRY.CODE.MAINT
0008 * BY          - JULIANNE RIVERA, VERCOM SOFTWARE, INC              * BY          - JULIANNE RIVERA, VERCOM SOFTWARE, INC
0009 * DATE        - 11/14/91                                           * DATE        - 11/14/91
0010 * DESCRIPTION -                                                    * DESCRIPTION -
0011 *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since t  |  *T25129 alex 05/10/2000 * Mods to add another input field fo
0012 *                         COUNTRY.CODE file can hold multiple   |  *                         code.
0013 *                         of data.                              <  
0014 *T26126 adelgado 02/22/2002 * Implement the LOCKED clause for   <  
0015 *ENDDOC                                                            *ENDDOC

0016 *************************************************************      ************************************************************
0017 *                                                                  *
0018 *---- FILE EQUATES                                                 *---- FILE EQUATES
0019 *                                                                  *
0020 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0021 *COPY>PMC.CPYLIB>COUNTRY.CODE        ;*T25159                   |  *COPY>PMC.CPYLIB>COUNTRY.CODE        ;*T25129
0022                                                                 >  *COPY>PMC.CPYLIB>REGION.CODE         ;*T25129
0023 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0024 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0025 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0036 OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE ERRMSG='COUNTRY.CO     OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE ERRMSG='COUNTRY.
0037 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSI
0038 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSI
0039 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS FI     OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG='PMC.SCREENS 
0040 OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE M     OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE
0041                                                                 >  *T25129 v
0042                                                                 >  OPEN '','REGION.CODE' TO REGION.CODE ELSE ERRMSG='REGION.COD
0043                                                                 >  OPEN '','REGION.CODE.XREF' TO REGION.CODE.XREF ELSE ERRMSG='
0044                                                                 >  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE MISSING'
0045                                                                 >  OPEN '','CBN.SCREENS' TO SECOND.SCREENS ELSE ERRMSG='CBN.SCR

0046                                                                 >  *T25129 ^
0047 *                                                                  *
0048 *---- INITIALIZATION                                               *---- INITIALIZATION
0049 *                                                                  *
0050 MAT EDIT.COM.DRIVER=""                                             MAT EDIT.COM.DRIVER=""
0051 MAT GEN.XREF.REC=""                                                MAT GEN.XREF.REC=""
0052 ERRMSG=''                                                          ERRMSG=''

0055 *---- GET COMPANY NUMBER                                           *---- GET COMPANY NUMBER
0056 *                                                                  *
0057 CONO=''                                                            CONO=''
0058 CALL GET.CONO(CONO,MAT COMP.REC)                                   CALL GET.CONO(CONO,MAT COMP.REC)
0059 IF CONO='END' THEN GOTO 99999                                      IF CONO='END' THEN GOTO 99999
0060 * T26126 v                                                      <  
0061 MATREAD COMP.REC FROM COMPANY, CONO ELSE                           MATREAD COMP.REC FROM COMPANY, CONO ELSE
0062 * T26126 ^                                                      <  
0063 MAT COMP.REC=''                                                    MAT COMP.REC=''
0064 END                                                                END

0066 *                                                                  *
0067 *---- PRINT SCREEN                                                 *---- PRINT SCREEN
0068 *                                                                  *
0069 ECD.SCRN.CNT=1                                                     ECD.SCRN.CNT=1
0070 ECD.SCRN.NAME<1>='COUNTRY.CODE.MAINT'                              ECD.SCRN.NAME<1>='COUNTRY.CODE.MAINT'
0071                                                                 >  ECD.SCRN.FLAG<1>=2        ;*T25129
0072 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0073 ECD.SCRN.NO=1                                                      ECD.SCRN.NO=1
0074 MAT SCV.REC=''                                                     MAT SCV.REC=''
0075 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT

0093 SCV.REC(ECD.NUM)<ECD.SCRN.NO> = GXR.ID                             SCV.REC(ECD.NUM)<ECD.SCRN.NO> = GXR.ID
0094 ECD.ACTION=3; CALL SCRN.EDIT                                       ECD.ACTION=3; CALL SCRN.EDIT
0095 IF GXR.ID = "" THEN GOTO 10                                        IF GXR.ID = "" THEN GOTO 10
0096 ID = GXR.ID                                                        ID = GXR.ID
0097 END CASE                                                           END CASE
0098 *T25159 v                                                       |  *T25129 v
0099 * READ DESC FROM COUNTRY.CODE, CONO:ID ELSE                     |  * READU DESC FROM COUNTRY.CODE, CONO:ID ELSE
0100 * T26126 v                                                      |  MATREADU CTY.REC FROM COUNTRY.CODE, CONO:ID ELSE
0101 MATREADU CTY.REC FROM COUNTRY.CODE, CONO:ID LOCKED              <  
0102 ERRMSG = 'COUNTRY CODE record is locked by user - ':GETUSERNAM  <  

0103 GOSUB 91000;GOTO 10                                             <  
0104 END ELSE                                                        <  
0105 * T26126 ^                                                      <  
0106 MAT CTY.REC = ''                                                   MAT CTY.REC = ''
0107 *T25159 ^                                                       |  *T25129 ^
0108 NEW='YES';DESC=''                                                  NEW='YES';DESC=''
0109 END                                                                END

0110 IF NEW='YES' THEN                                                  IF NEW='YES' THEN
0111 GOSUB 20                                                           GOSUB 20
0112                                                                 >  GOSUB 30      ;*T25129
0113 IF ECD.RET.VALUE='END' THEN                                        IF ECD.RET.VALUE='END' THEN
0114 GOSUB 300;GOTO 10                                                  GOSUB 300;GOTO 10
0115 END                                                                END
0116 END ELSE                                                           END ELSE
0117 *T25159 v                                                       <  
0118 * SCV.REC(3)<ECD.SCRN.NO,1>=DESC                                <  

0119 SCV.REC(3)<ECD.SCRN.NO,1>=CTY.DESC                                 SCV.REC(3)<ECD.SCRN.NO,1>=CTY.DESC
0120 *T25159 ^                                                       |  SCV.REC(20)<ECD.SCRN.NO,1>=CTY.REGION
0121                                                                 >  *T25129 v
0122                                                                 >  MATREAD RGC.REC FROM REGION.CODE, CONO:CTY.REGION ELSE MAT R
0123                                                                 >  SCV.REC(21)<ECD.SCRN.NO,1>=RGC.DESC
0124                                                                 >  *T25129 ^
0125 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0126 END                                                                END

0131 *---- ENTER COUNTRY.CODE DESCRIPTION                               *---- ENTER COUNTRY.CODE DESCRIPTION
0132 *                                                                  *
0133 20*                                                                20*
0134 ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
0135 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
0136 *T25159 v                                                       |  *T25129 v
0137 * DESC=ECD.RET.VALUE                                               * DESC=ECD.RET.VALUE
0138 CTY.DESC=ECD.RET.VALUE                                          |  CTY.DESC = ECD.RET.VALUE
0139 *T25159 ^                                                       |  SCV.REC(3)<ECD.SCRN.NO,1>=CTY.DESC
0140                                                                 >  *T25129 ^

0141 END                                                                END
0142                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0143 RETURN                                                             RETURN
0144                                                                 >  *T25129 v
0145 *                                                                  *
0146                                                                 >  *---- ENTER REGION CODE 
0147                                                                 >  *
0148                                                                 >  30*

0149                                                                 >  IF ECD.RET.VALUE = 'END' THEN RETURN
0150                                                                 >  LOOP.DONE = 0
0151                                                                 >  LOOP
0152                                                                 >  ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT
0153                                                                 >  BEGIN CASE
0154                                                                 >  CASE ECD.RET.VALUE = ''
0155                                                                 >  GOSUB 40

0156                                                                 >  CASE ECD.RET.VALUE = '???'
0157                                                                 >  GXR.NAME = "GEN.CODE"                                 
0158                                                                 >  GXR.SORT.FILE = "REGION.CODE"                        
0159                                                                 >  GXR.FILE = REGION.CODE                               
0160                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0161                                                                 >  ECD.ACTION = 2;CALL SCRN.EDIT                         
0162                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT

0163                                                                 >  IF GXR.ID # '' THEN
0164                                                                 >  MATREAD RGC.REC FROM REGION.CODE, CONO:GXR.ID THEN
0165                                                                 >  CTY.REGION = GXR.ID
0166                                                                 >  LOOP.DONE = 1
0167                                                                 >  SCV.REC(20)<ECD.SCRN.NO> = CTY.REGION
0168                                                                 >  SCV.REC(21)<ECD.SCRN.NO> = RGC.DESC
0169                                                                 >  END ELSE

0170                                                                 >  ERRMSG = 'Invalid Region Code.'
0171                                                                 >  GOSUB 91000
0172                                                                 >  END
0173                                                                 >  END
0174                                                                 >  CASE ECD.RET.VALUE = 'END'
0175                                                                 >  LOOP.DONE = 1
0176                                                                 >  CASE 1

0177                                                                 >  MATREAD RGC.REC FROM REGION.CODE, CONO:ECD.RET.VALUE THEN
0178                                                                 >  CTY.REGION = ECD.RET.VALUE
0179                                                                 >  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CTY.REGION
0180                                                                 >  SCV.REC(21)<ECD.SCRN.NO> = RGC.DESC
0181                                                                 >  LOOP.DONE = 1
0182                                                                 >  END ELSE
0183                                                                 >  ERRMSG = 'Invalid Region Code '

0184                                                                 >  GOSUB 91000
0185                                                                 >  END
0186                                                                 >  END CASE
0187                                                                 >  UNTIL (LOOP.DONE) DO REPEAT
0188                                                                 >  ECD.ACTION = 3 ; CALL SCRN.EDIT
0189                                                                 >  RETURN
0190                                                                 >  *

0191                                                                 >  40*
0192                                                                 >  *
0193                                                                 >  ECD.NUM = 21
0194                                                                 >  ECD.ACTION = 4 ; CALL SCRN.EDIT
0195                                                                 >  BEGIN CASE
0196                                                                 >  CASE ECD.RET.VALUE = "END"
0197                                                                 >  CASE ECD.RET.VALUE = ""

0198                                                                 >  CASE 1
0199                                                                 >  GXR.NAME = "REGION.CODE.XREF"
0200                                                                 >  GXR.XREF = REGION.CODE.XREF
0201                                                                 >  GXR.FILE = REGION.CODE
0202                                                                 >  GXR.SRCH.ID = ECD.RET.VALUE
0203                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0204                                                                 >  ECD.ACTION = 2; CALL SCRN.EDIT

0205                                                                 >  ECD.ACTION = 3; CALL SCRN.EDIT
0206                                                                 >  IF GXR.ID = "" THEN
0207                                                                 >  ECD.NUM = 21; SCV.REC(ECD.NUM) = ""
0208                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0209                                                                 >  END ELSE
0210                                                                 >  MATREAD RGC.REC FROM REGION.CODE, CONO:GXR.ID THEN
0211                                                                 >  ECD.NUM = 20

0212                                                                 >  SCV.REC(ECD.NUM) = GXR.ID
0213                                                                 >  CTY.REGION = GXR.ID
0214                                                                 >  LOOP.DONE = 1
0215                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT
0216                                                                 >  ECD.NUM = 21
0217                                                                 >  SCV.REC(ECD.NUM) = RGC.DESC
0218                                                                 >  ECD.ACTION = 5 ; CALL SCRN.EDIT

0219                                                                 >  END ELSE
0220                                                                 >  ECD.NUM = 21; SCV.REC(ECD.NUM) = ""
0221                                                                 >  ECD.ACTION = 5; CALL SCRN.EDIT
0222                                                                 >  ERRMSG = "Cannot locate Region # ":GXR.ID
0223                                                                 >  GOSUB 91000
0224                                                                 >  END
0225                                                                 >  END

0226                                                                 >  END CASE
0227                                                                 >  *
0228                                                                 >  RETURN
0229                                                                 >  *T25129 ^
0230                                                                 >  *
0231 *---- ENTER OPTIONS                                                *---- ENTER OPTIONS
0232 *                                                                  *

0235 LOOP                                                               LOOP
0236 ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
0237 OPTION=ECD.RET.VALUE                                               OPTION=ECD.RET.VALUE
0238 BEGIN CASE                                                         BEGIN CASE
0239 CASE OPTION='END' OR OPTION='E'                                    CASE OPTION='END' OR OPTION='E'
0240 RELEASE COUNTRY.CODE, CONO:ID   ;*T26126                        <  
0241 MORE=1                                                             MORE=1
0242 CASE NUM(OPTION)                                                   CASE NUM(OPTION)
0243 GOSUB 20                                                        |  *T25129 v
0244                                                                 >  * GOSUB 20

0245                                                                 >  ON OPTION GOSUB 20,30
0246                                                                 >  *T25129 ^
0247 MORE=0                                                             MORE=0
0248 CASE OPTION='F'                                                    CASE OPTION='F'
0249 GOSUB 400                                                          GOSUB 400
0250 MORE=1                                                             MORE=1
0251 END CASE                                                           END CASE

0255 *---- CLEAR SCREEN & RE-INITIALIZE                                 *---- CLEAR SCREEN & RE-INITIALIZE
0256 *                                                                  *
0257 300*                                                               300*
0258 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0259 MAT SCV.REC=''                                                     MAT SCV.REC=''
0260 MAT CTY.REC = ''           ;*T25159                             |  RELEASE COUNTRY.CODE, CONO:ID             ;*T25129
0261 RELEASE COUNTRY.CODE, ID   ;*T25159                             |  RELEASE REGION.CODE, CONO:CTY.REGION      ;*T25129
0262 RETURN                                                             RETURN
0263 *                                                                  *
0264 *---- UPDATE COUNTRY.CODE FILE                                     *---- UPDATE COUNTRY.CODE FILE

0265 *                                                                  *
0266 400*                                                               400*
0267 *T25159 v                                                       |  *T25129 v
0268 * WRITE DESC ON COUNTRY.CODE, CONO:ID                              * WRITE DESC ON COUNTRY.CODE, CONO:ID
0269 MATWRITE CTY.REC ON COUNTRY.CODE, CONO:ID                          MATWRITE CTY.REC ON COUNTRY.CODE, CONO:ID
0270 *T25159 ^                                                       |  *T25129 ^
0271 RETURN                                                             RETURN
0272 *                                                                  *
0273 *---- CALLS FOR SYSCOM                                             *---- CALLS FOR SYSCOM


PMCBP/CUST.CREDIT.INQ                                              /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CUST.CREDIT.INQ
Printed for thompson at 06/28/2006 04:57:23PM

0012 * This program is a subroutine to CUST.MAINT and                   * This program is a subroutine to CUST.MAINT and 
0013 * gives the Customer's credit history.                             * gives the Customer's credit history.
0014 *                                                                  *
0015 * LAST COMPILE - 634                                               * LAST COMPILE - 634
0016 *                                                                  *
0017 *T22023 lanny 06/19/1997 * Credit screen reads OPEN.RECV regar  |  *T22023 lanny 06/19/1997 * CRedit screen reads OPEN.RECV reg
0018 *                          CO.ARS flag.                            *                          CO.ARS flag.
0019 *T25763 renee 06/06/2001 * Put in logic to split invoice inqui  |  *T25432 lanny 10/10/2000 * Adding purged invoice routine.
0020 *                          either (O)pen active or (P)urged in  <  
0021 *T26633 cmykleb 05/30/2002 * Not displaying the current period  <  

0022 *T28408 bmourad 01/19/2005 * ADD CM OPTION TO OPEN CUST COMMEN  <  
0023 *ENDDOC                                                            *ENDDOC
0024 *************************************************************      ************************************************************
0025 *                                                                  *
0026 *---- FILE EQUATES                                                 *---- FILE EQUATES
0027 *                                                                  *
0028 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER

0029 *COPY>CPYLIB>GEN.XREF.SUB                                          *COPY>CPYLIB>GEN.XREF.SUB
0030 *COPY>ARS.CPYLIB>OPEN.RECV                                         *COPY>ARS.CPYLIB>OPEN.RECV
0031 *T25763 v                                                       |  *T25432 v
0032 *COPY>ARS.CPYLIB>PURGED.OPEN.RECV                               |  *COPY>CBN.CPYLIB>PURGED.OPEN.RECV
0033 *T25763 ^                                                       |  *T25432 ^
0034 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0035 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0036 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0037 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0038 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0039                                                                 >  *T25432 v
0040                                                                 >  OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG =
0041                                                                 >  OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG = "Ca
0042                                                                 >  *T25432 ^
0043 *                                                                  *
0044 *---- SETUP SYSTEM ERROR MESSAGES                                  *---- SETUP SYSTEM ERROR MESSAGES
0045 *                                                                  *

0046 SYS.TYPE=1                                                         SYS.TYPE=1
0047 CALL SYSCOM(MAT SYSCOM.REC)                                        CALL SYSCOM(MAT SYSCOM.REC)
0048 *T25763 v                                                       <  
0049 OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG = "  <  
0050 OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG = "Cann  <  
0051 *T25763 ^                                                       <  
0052 *                                                                  *
0053 *---- INITIALIZATION                                               *---- INITIALIZATION
0054 *                                                                  *

0130 SCV.REC(16)<ESN>=OCONV(BAL.CR,"MD2Z,<")                            SCV.REC(16)<ESN>=OCONV(BAL.CR,"MD2Z,<")
0131 SCV.REC(20)<ESN>=OCONV(FIELD(CUST.LAST.PMT,":",2),"MD2Z,")         SCV.REC(20)<ESN>=OCONV(FIELD(CUST.LAST.PMT,":",2),"MD2Z,")
0132 SCV.REC(21)<ESN>=CUST.TERMS                                        SCV.REC(21)<ESN>=CUST.TERMS
0133 SCV.REC(22)<ESN>=CUST.LAST.SALE                                    SCV.REC(22)<ESN>=CUST.LAST.SALE
0134 SCV.REC(23)<ESN>=FIELD(CUST.LAST.PMT,":",1)                        SCV.REC(23)<ESN>=FIELD(CUST.LAST.PMT,":",1)
0135 *T26633 v                                                       |  SCV.REC(32)<ESN>=PER
0136 *  SCV.REC(32)<ESN>=PER                                         |  LOCATE PER IN CUST.SALES.PER<1>,1 SETTING TFND ELSE TFND = 0
0137 *  LOCATE PER IN CUST.SALES.PER<1>,1 SETTING TFND ELSE TFND =   <  
0138 BPER = MAXIMUM(PER<1>)                                          <  
0139 SCV.REC(32)<ESN>=BPER                                           <  

0140 LOCATE BPER IN CUST.SALES.PER<1>,1 SETTING TFND ELSE TFND = 0   <  
0141 *T26633 ^                                                       <  
0142 IF TFND THEN                                                       IF TFND THEN
0143 SCV.REC(24)<ESN>=OCONV(CUST.SALES<1,TFND>, "MD2Z,")                SCV.REC(24)<ESN>=OCONV(CUST.SALES<1,TFND>, "MD2Z,")
0144 END                                                                END
0145 *T26633 v                                                       |  LY.PER = PER[1,4] - 1:PER[5,2]
0146 *  LY.PER = PER[1,4] - 1:PER[5,2]                               <  

0147 LY.PER = BPER[1,4] - 1:BPER[5,2]                                <  
0148 *T26633 ^                                                       <  
0149 SCV.REC(33)<ESN>=LY.PER                                            SCV.REC(33)<ESN>=LY.PER
0150 LOCATE LY.PER IN CUST.SALES.PER<1>,1 SETTING LFND ELSE LFND =      LOCATE LY.PER IN CUST.SALES.PER<1>,1 SETTING LFND ELSE LFND 
0151 IF LFND THEN                                                       IF LFND THEN
0152 SCV.REC(31)<ESN>=OCONV(CUST.SALES<1,LFND>, "MD2Z,")                SCV.REC(31)<ESN>=OCONV(CUST.SALES<1,LFND>, "MD2Z,")
0153 END                                                                END

0154 *T26633 v                                                       |  SCV.REC(34)<ESN>=PER[1,4]
0155 *  SCV.REC(34)<ESN>=PER[1,4]                                    <  
0156 SCV.REC(34)<ESN>=BPER[1,4]                                      <  
0157 *T26633 ^                                                       <  
0158 SCV.REC(35)<ESN>=LY.PER[1,4]                                       SCV.REC(35)<ESN>=LY.PER[1,4]
0159 SALES.CNT = COUNT(CUST.SALES.PER, VM) + (CUST.SALES.PER # "")      SALES.CNT = COUNT(CUST.SALES.PER, VM) + (CUST.SALES.PER # ""
0160 Y.SALES = 0 ; LY.SALES = 0                                         Y.SALES = 0 ; LY.SALES = 0

0161 FOR SAL = 1 TO SALES.CNT                                           FOR SAL = 1 TO SALES.CNT
0162 BEGIN CASE                                                         BEGIN CASE
0163 *T26633 v                                                       |  CASE PER[1,4] = CUST.SALES.PER<1,SAL>[1,4]
0164 *        CASE PER[1,4] = CUST.SALES.PER<1,SAL>[1,4]             <  
0165 CASE BPER[1,4] = CUST.SALES.PER<1,SAL>[1,4]                     <  
0166 *T26633 ^                                                       <  
0167 Y.SALES = Y.SALES + CUST.SALES<1,SAL>                              Y.SALES = Y.SALES + CUST.SALES<1,SAL>
0168 CASE LY.PER[1,4] = CUST.SALES.PER<1,SAL>[1,4]                      CASE LY.PER[1,4] = CUST.SALES.PER<1,SAL>[1,4]
0169 LY.SALES = LY.SALES + CUST.SALES<1,SAL>                            LY.SALES = LY.SALES + CUST.SALES<1,SAL>

0180 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0181 ACTION = ECD.RET.VALUE                                             ACTION = ECD.RET.VALUE
0182 BEGIN CASE                                                         BEGIN CASE
0183 CASE ACTION = "" OR ACTION = "E" OR ACTION = "END"                 CASE ACTION = "" OR ACTION = "E" OR ACTION = "END"
0184 MORE = 0                                                           MORE = 0
0185 * T28408 v                                                      <  
0186 CASE ACTION = "CM" AND CUST.COMMENT = ""                        <  
0187 ERRMSG = "Customer Comments Screen is Empty"                    <  
0188 GOSUB 91000                                                     <  
0189 CASE ACTION = "CM"                                              <  

0190 ECD.SCRN.NO = 11                                                <  
0191 SCV.REC(2)<ECD.SCRN.NO> = SCV.REC(1)<ESN>                       <  
0192 SCV.REC(3)<ECD.SCRN.NO> = CUST.NAME                             <  
0193 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
0194 MODE = "I"; CALL CUST.CMNT(CONO,MODE)                           <  
0195 ECD.SCRN.NO = ESN                                               <  
0196 ECD.ACTION = 2; CALL SCRN.EDIT                                  <  

0197 ECD.ACTION = 3; CALL SCRN.EDIT                                  <  
0198 * T28408 ^                                                      <  
0199 CASE ACTION = "I" AND CUST.INVOICE = ""                            CASE ACTION = "I" AND CUST.INVOICE = ""
0200 *T25763 v                                                       |  *T25432 v
0201 200         ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""               200            ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""
0202 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0203 I.OPT.ACTION = ECD.RET.VALUE                                       I.OPT.ACTION = ECD.RET.VALUE

0204 BEGIN CASE                                                         BEGIN CASE
0205 CASE I.OPT.ACTION = "O"                                            CASE I.OPT.ACTION = "O"
0206 *T25763 ^                                                       |  *T25432 ^
0207 ERRMSG="Cannot locate any Invoices for this customer"              ERRMSG="Cannot locate any Invoices for this customer"
0208 GOSUB 91000                                                        GOSUB 91000
0209 *T25763 v                                                       |  *T25432 v
0210 GOTO 200                                                           GOTO 200
0211 CASE I.OPT.ACTION = "P"                                            CASE I.OPT.ACTION = "P"
0212 ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""                           ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""

0214 BEG.PURGE.DATE = ECD.RET.VALUE                                     BEG.PURGE.DATE = ECD.RET.VALUE
0215 IF BEG.PURGE.DATE = "" OR BEG.PURGE.DATE = "E" THEN                IF BEG.PURGE.DATE = "" OR BEG.PURGE.DATE = "E" THEN
0216 BEG.PURGE.DATE = "END"                                             BEG.PURGE.DATE = "END"
0217 END                                                                END
0218 IF BEG.PURGE.DATE # "END" THEN                                     IF BEG.PURGE.DATE # "END" THEN
0219 ECD.NUM = 42;SCV.REC(ECD.NUM)<ESN> = ""                         |  ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
0220 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0221 END.PURGE.DATE = ECD.RET.VALUE                                     END.PURGE.DATE = ECD.RET.VALUE
0222 IF END.PURGE.DATE = "" OR END.PURGE.DATE = "E" THEN                IF END.PURGE.DATE = "" OR END.PURGE.DATE = "E" THEN
0223 END.PURGE.DATE = "END"                                             END.PURGE.DATE = "END"

0239 END ELSE                                                           END ELSE
0240 ERRMSG = "No purged items for entered date range"                  ERRMSG = "No purged items for entered date range"
0241 GOSUB 91000                                                        GOSUB 91000
0242 END                                                                END
0243 END ELSE                                                           END ELSE
0244 ERRMSG="Cannot locate any purged invoices for this customer."   |  ERRMSG = "Cannot locate any purged invoices for this custome
0245 GOSUB 91000                                                        GOSUB 91000
0246 END                                                                END
0247 END                                                                END
0248 END                                                                END

0247 END                                                                END
0248 END                                                                END
0249 END                                                                END
0250 GOTO 200                                                           GOTO 200
0251 END CASE                                                           END CASE
0252 *T25763 ^                                                       |  *T25432 ^
0253 CASE ACTION = "I"                                                  CASE ACTION = "I"
0254 *T25763 v                                                       |  *T25432 v
0255 210         ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""               210            ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""
0256 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT

0255 210         ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""               210            ECD.NUM = 40; SCV.REC(ECD.NUM)<ESN> = ""
0256 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0257 I.OPT.ACTION = ECD.RET.VALUE                                       I.OPT.ACTION = ECD.RET.VALUE
0258 BEGIN CASE                                                         BEGIN CASE
0259 CASE I.OPT.ACTION = "O"                                            CASE I.OPT.ACTION = "O"
0260 *T25763 ^                                                       |  *T25432 ^
0261 ECD.SCRN.NO = ESN + 1                                              ECD.SCRN.NO = ESN + 1
0262 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0263 SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>                            SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>
0264 CALL CUST.INV.INQ(CONO)                                            CALL CUST.INV.INQ(CONO)

0263 SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>                            SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>
0264 CALL CUST.INV.INQ(CONO)                                            CALL CUST.INV.INQ(CONO)
0265 ECD.SCRN.NO = ESN                                                  ECD.SCRN.NO = ESN
0266 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0267 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0268 *T25763 v                                                       |  *T25432 v
0269 GOTO 210                                                           GOTO 210
0270 CASE I.OPT.ACTION = "P"                                            CASE I.OPT.ACTION = "P"
0271 ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""                           ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
0272 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT

0288 GOSUB 2700 ; * DETERMINE VALID IDS                                 GOSUB 2700 ; * DETERMINE VALID IDS
0289 IF VALID.PURGED.IDS # "" THEN                                      IF VALID.PURGED.IDS # "" THEN
0290 ECD.SCRN.NO = 9                                                    ECD.SCRN.NO = 9
0291 SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>                            SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(1)<ESN>
0292 * SET UP ANY OTHER FIELDS HERE                                     * SET UP ANY OTHER FIELDS HERE
0293 ECD.ACTION = 2 ; CALL SCRN.EDIT                                 |  ECD.ACTION = 2; CALL SCRN.EDIT
0294 CALL CUST.PURGED.INV.INQ(CONO,BEG.PURGE.DATE,END.PURGE.DATE,VA     CALL CUST.PURGED.INV.INQ(CONO,BEG.PURGE.DATE,END.PURGE.DATE,
0295 ECD.SCRN.NO = ESN                                                  ECD.SCRN.NO = ESN
0296 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0297 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT

0298 END ELSE                                                           END ELSE
0299 ERRMSG = "No purged items for entered date range"                  ERRMSG = "No purged items for entered date range"
0300 GOSUB 91000                                                        GOSUB 91000
0301 END                                                                END
0302 END ELSE                                                           END ELSE
0303 ERRMSG="Cannot locate any purged invoices for this customer."   |  ERRMSG = "Cannot locate any purged invoices for this custome
0304 GOSUB 91000                                                        GOSUB 91000
0305 END                                                                END
0306 END                                                                END
0307 END                                                                END

0306 END                                                                END
0307 END                                                                END
0308 END                                                                END
0309 GOTO 210                                                           GOTO 210
0310 END CASE                                                           END CASE
0311 *T25763 ^                                                       |  *T25432 ^
0312 CASE ACTION = "O" AND CUST.ORD.NUM = ""                            CASE ACTION = "O" AND CUST.ORD.NUM = ""
0313 ERRMSG="Cannot locate any Orders for this customer"                ERRMSG="Cannot locate any Orders for this customer"
0314 GOSUB 91000                                                        GOSUB 91000
0315 CASE ACTION = "O"                                                  CASE ACTION = "O"

0331 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT
0332 ECD.ACTION = 3; CALL SCRN.EDIT                                     ECD.ACTION = 3; CALL SCRN.EDIT
0333 END CASE                                                           END CASE
0334 WHILE MORE DO REPEAT                                               WHILE MORE DO REPEAT
0335 GOTO 99999                                                         GOTO 99999
0336 * T25763 v                                                      |  *
0337                                                                 >  *---- CALLS FOR SYSCOM
0338                                                                 >  *
0339                                                                 >  *T25432 v
0340 2700 * SUBROUTINE TO DETERMINE IF ANY VALID IDS EXIST WITHIN D     2700 * SUBROUTINE TO DETERMINE IF ANY VALID IDS EXIST WITHIN

0349 END                                                                END
0350 END                                                                END
0351 END                                                                END
0352 NEXT IC2700                                                        NEXT IC2700
0353 RETURN                                                             RETURN
0354 * T25763 ^                                                      |  *T25432 ^
0355 *                                                               <  
0356 *---- CALLS FOR SYSCOM                                          <  
0357 *                                                               <  
0358 91000*                                                             91000*


PMCBP/CUST.DELETE.PURGED.INV                                       /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CUST.DELETE.PURGED.INV
Printed for thompson at 06/28/2006 04:57:23PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 **************************************************************     ************************************************************
0003 * REVISION    - [11.0]                                             * REVISION    - [11.0]
0004 * Copyright 1999 by Computer Business Associates (Vercom Softw     * Copyright 1999 by Computer Business Associates (Vercom Sof
0005 * SYSTEM      - PRIMAC                                             * SYSTEM      - PRIMAC
0006 * SOURCE      - PMCBP                                           |  * SOURCE      - SHERIDANBP
0007 * PROGRAM     - CUST.DELETE.PURGED.INV                             * PROGRAM     - CUST.DELETE.PURGED.INV
0008 * BY          - RANDY MORPHEW, PRIMAC                              * BY          - RANDY MORPHEW, PRIMAC
0009 * DATE        - 07/27/99                                           * DATE        - 07/27/99
0010 * DESCRIPTION - See T25763                                      |  * DESCRIPTION -

0011 * This program deletes PURGED.OPEN.RECV records and cross refe     * This program deletes PURGED.OPEN.RECV records and cross re
0012 * those records in the appropriate PURGED.OR.XREF records.         * those records in the appropriate PURGED.OR.XREF records.
0013                                                                 >  *T25432 lanny 10/10/2000 * Addition for the purged invoice r
0014 *ENDDOC                                                            *ENDDOC
0015 **************************************************************     ************************************************************
0016 *                                                                  *
0017 *---- FILE EQUATES                                                 *---- FILE EQUATES
0018 *                                                                  *
0019 *COPY>ARS.CPYLIB>PURGED.OPEN.RECV                               |  *COPY>CBN.CPYLIB>PURGED.OPEN.RECV

0033 PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM PROC";GOSUB 91000;GO     PROCREAD XX ELSE ERRMSG="MUST BE RUN FROM PROC";GOSUB 91000;
0034 CONO=XX<1>                                                         CONO=XX<1>
0035 *                                                                  *
0036 *---- OPEN FILES                                                   *---- OPEN FILES
0037 *                                                                  *
0038 OPEN 'CONTROL' TO CONTROL ELSE                                  |  OPEN '','PURGED.OPEN.RECV' TO PURGED.OPEN.RECV ELSE ERRMSG='
0039 ERRMSG = 'CONTROL FILE IS MISSING'                              |  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSI
0040 GOTO 93000                                                      |  OPEN '','PURGED.OR.XREF' TO PURGED.OR.XREF ELSE ERRMSG='PURG
0041 END                                                             |  OPEN '','CBN.SCREENS' TO M.SCREENS ELSE ERRMSG='CBN.SCREENS 
0042 OPEN 'PMC.SCREENS' TO M.SCREENS ELSE                            <  

0043 ERRMSG = 'PMC.SCREENS FILE IS MISSING'                          <  
0044 GOTO 93000                                                      <  
0045 END                                                             <  
0046 OPEN 'PURGED.OPEN.RECV' TO PURGED.OPEN.RECV ELSE                <  
0047 ERRMSG = 'PURGED.OPEN.RECV FILE IS MISSING'                     <  
0048 GOTO 93000                                                      <  
0049 END                                                             <  

0050 OPEN 'PURGED.OR.XREF' TO PURGED.OR.XREF ELSE                    <  
0051 ERRMSG = 'PURGED.OR.XREF FILE IS MISSING'                       <  
0052 GOTO 93000                                                      <  
0053 END                                                             <  
0054 *                                                                  *
0055 *---- DISPLAY SCREEN AND GET RESPONSE                              *---- DISPLAY SCREEN AND GET RESPONSE
0056 *     IF CUSTOMER ENTERS "Y", THEN PROCEED WITH DELETE.            *     IF CUSTOMER ENTERS "Y", THEN PROCEED WITH DELETE.

0096 *     PURGED FILE.)                                                *     PURGED FILE.)
0097 *     IF THERE IS NO RECORD, THEN THIS DATE WILL BE CALCULATED     *     IF THERE IS NO RECORD, THEN THIS DATE WILL BE CALCULAT
0098 *     THE FIRST DAY OF THE CURRENT MONTH.                          *     THE FIRST DAY OF THE CURRENT MONTH.
0099 *                                                                  *
0100 READ CREC FROM CONTROL,CONO:"ARSFISCAL" THEN                       READ CREC FROM CONTROL,CONO:"ARSFISCAL" THEN
0101 FISCAL.BEG.DATE = CREC<2,0,0>                                   |  FISCAL.BEG.DATE = CREC<2,1,1>
0102 END ELSE                                                           END ELSE
0103 TEMP.DATE = OCONV(DATE(),"D4-")                                    TEMP.DATE = OCONV(DATE(),"D4-")
0104 FISCAL.BEG.DATE = ICONV(TEMP.DATE[1,3]:"01":TEMP.DATE[6,5],"D"     FISCAL.BEG.DATE = ICONV(TEMP.DATE[1,3]:"01":TEMP.DATE[6,5],
"
0105 END                                                                END

0106 CUTOFF.DATE = FISCAL.BEG.DATE - 1095                               CUTOFF.DATE = FISCAL.BEG.DATE - 1095
0107 *                                                                  *
0108 *---- START CHECKING THE PURGED.OPEN.RECV FILE                     *---- START CHECKING THE PURGED.OPEN.RECV FILE
0109 *                                                                  *
0110 DONE = 0                                                           DONE = 0
0111 POR.KEYS = ""                                                   <  
0112 SELECT PURGED.OPEN.RECV TO POR.KEYS                                SELECT PURGED.OPEN.RECV TO POR.KEYS
0113 LOOP                                                               LOOP
0114 READNEXT POR.KEY FROM POR.KEYS ELSE DONE = 1                       READNEXT POR.KEY FROM POR.KEYS ELSE DONE = 1
0115 UNTIL DONE DO                                                      UNTIL DONE DO


PMCBP/CUST.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CUST.MAINT
Printed for thompson at 06/28/2006 04:57:23PM

0019 *                         Country is USA                           *                         Country is USA
0020 *T22023 lanny 06/19/1997 * CRedit screen reads OPEN.RECV regar     *T22023 lanny 06/19/1997 * CRedit screen reads OPEN.RECV reg
0021 *                          CO.ARS flag.                            *                          CO.ARS flag.
0022 *T23105 markt 07/30/1998 * Correct data restore after 'E' from     *T23105 markt 07/30/1998 * Correct data restore after 'E' fr
0023 *                          fields 7 & 8.                           *                          fields 7 & 8.
0024 *T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since t  |  *T25432 lanny 10/10/2000 * Adding purged invoice routine.
0025 *                         COUNTRY.CODE file can hold multiple   <  
0026 *                         of data.                              <  
0027 *T25762 renee 05/30/2001 * Open INVOICE file that will be used  <  
0028 *                          CUST.INV.INQ. Also change that scre  <  

0029 *                          point to SECOND.SCREENS              <  
0030 *T25763 renee 06/06/2001 * ADD PURGED INVOICE VIEWING OPTION    <  
0031 *T25890 ajibaly 07/13/2001 * ADD FIELD FOR CREDIT HOLD REASON   <  
0032 *T25949 cmykleb 01/23/2002 * Allow users to enter Ship-To info  <  
0033 *                            regardless of the CO.OPS flag.     <  
0034 *T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,  <  
0035 *T26069 ajibaly 02/01/2002 * ADD CUSTOMER INQUIRY READ-ONLY     <  

0036 *                            FUNCTIONALITY                      <  
0037 *T25889 ajibaly 02/04/2002 * ADD SCREEN FOR FREE-FORM COMMENT   <  
0038 *T25888 ajibaly 02/05/2002 * ADD SECOND ADDRESS SECTION FOR RE  <  
0039 *                            ONLY                               <  
0040 *T26126 adelgado 02/21/2002 * Implement the LOCKED clause.      <  
0041 *T26649 cmykleb 06/04/2002 * Change Customer Order Inquiry to   <  
0042 *                            instead of a x-ref.                <  

0043 *T26805 epitka 08/16/2002 * add email address                   <  
0044 *T26915 ajibaly 10/16/2002 * add emailing of statements         <  
0045 *************************************************************      ************************************************************
0046 *                                                                  *
0047 *---- FILE EQUATES                                                 *---- FILE EQUATES
0048 *                                                                  *
0049 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER

0054 *COPY>PMC.CPYLIB>TERMS                                             *COPY>PMC.CPYLIB>TERMS
0055 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0056 *COPY>PMC.CPYLIB>CSR.CODE                                          *COPY>PMC.CPYLIB>CSR.CODE
0057 *COPY>PMC.CPYLIB>FOB                                               *COPY>PMC.CPYLIB>FOB
0058 *COPY>ICS.CPYLIB>PRICE.TABLE                                       *COPY>ICS.CPYLIB>PRICE.TABLE
0059 *COPY>PMC.CPYLIB>COUNTRY.CODE          ;*T25159                 <  
0060 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0061 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0062 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0063 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0077 GOSUB 91000; GOTO 99999                                            GOSUB 91000; GOTO 99999
0078 END                                                                END
0079 BUFFER1 = BUFFER<1>[2,3]                                           BUFFER1 = BUFFER<1>[2,3]
0080 F.BUFFER = BUFFER<2>                                               F.BUFFER = BUFFER<2>
0081 BUFFER = BUFFER<1>[1,1]                                            BUFFER = BUFFER<1>[1,1]
0082 IF BUFFER # "M" AND BUFFER # "I" AND BUFFER # "X" THEN          |  IF BUFFER # "M" AND BUFFER # "I" THEN
0083 ERRMSG = "INVALID INPUT BUFFER FROM PROC"                          ERRMSG = "INVALID INPUT BUFFER FROM PROC"
0084 GOSUB 91000; GOTO 99999                                            GOSUB 91000; GOTO 99999
0085 END                                                                END
0086 IF BUFFER = 'M' THEN MODE = 'M' ELSE MODE = 'I' ;*T26069        <  

0085 END                                                                END
0086 IF BUFFER = 'M' THEN MODE = 'M' ELSE MODE = 'I' ;*T26069        <  
0087 *                                                                  *
0088 *---- OPEN FILES                                                   *---- OPEN FILES
0089 *                                                                  *
0090 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE                         |  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG="PMC.SCREENS"
0091 ERRMSG="PMC.SCREENS";GOTO 93000                                 |  OPEN '','CBN.SCREENS' TO SECOND.SCREENS ELSE ERRMSG="CBN.SCR
0092 END                                                             <  
0093 OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL";GOTO 93000      OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL";GOTO 9300
0094 OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY";GOTO 93000      OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY";GOTO 9300

0101 OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG="XREF.DATA";GOTO      OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG="XREF.DATA";GOT
0102 OPEN '','PREFIX' TO PREFIX ELSE ERRMSG="PREFIX";GOTO 93000         OPEN '','PREFIX' TO PREFIX ELSE ERRMSG="PREFIX";GOTO 93000
0103 OPEN '','TERMS' TO TERMS ELSE ERRMSG="TERMS";GOTO 93000            OPEN '','TERMS' TO TERMS ELSE ERRMSG="TERMS";GOTO 93000
0104 OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG="SALESMAN";GOTO 930     OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG="SALESMAN";GOTO 9
0105 OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG="SHIP.TO";GOTO 93000      OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG="SHIP.TO";GOTO 9300
0106 OPEN '','CONTACT.CODE' TO CONTACT.CODE ELSE                     |  OPEN '','CONTACT.CODE' TO CONTACT.CODE ELSE ERRMSG='CONTACT.
0107 ERRMSG='CONTACT.CODE';GOTO 93000                                |  OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE ERRMSG='COUNTRY.
0108 END                                                             |  OPEN '','PRICE.TABLE' TO PRICE.TABLE ELSE ERRMSG='PRICE.TABL
0109 OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE                     |  *T25432 v
0110 ERRMSG='COUNTRY.CODE';GOTO 93000                                |  * OPEN '','PURGED.OPEN.RECV' TO PURGED.OPEN.RECV ELSE ERRMSG

0111 END                                                             |  * OPEN '','PURGED.OR.XREF' TO PURGED.OR.XREF ELSE ERRMSG="PU
0112 OPEN '','PRICE.TABLE' TO PRICE.TABLE ELSE                       |  *T25432 ^
0113 ERRMSG='PRICE.TABLE';GOTO 93000                                 <  
0114 END                                                             <  
0115 IF F.BUFFER = "P" THEN                                             IF F.BUFFER = "P" THEN
0116 OPEN '','PROSPECT' TO CUSTOMER ELSE ERRMSG="PROSPECT";GOTO 930     OPEN '','PROSPECT' TO CUSTOMER ELSE ERRMSG="PROSPECT";GOTO 9
0117 OPEN '','PROSPECT.XREF' TO CUSTOMER.XREF ELSE                   |  OPEN '','PROSPECT.XREF' TO CUSTOMER.XREF ELSE ERRMSG="PROSPE

0118 ERRMSG="PROSPECT.XREF";GOTO 93000                               <  
0119 END                                                             <  
0120 NO.CHK.FILE = 0; C.P.NAME = "PROSPECT"                             NO.CHK.FILE = 0; C.P.NAME = "PROSPECT"
0121 OPEN '','CUSTOMER' TO CHECK.FILE ELSE NO.CHK.FILE = 1              OPEN '','CUSTOMER' TO CHECK.FILE ELSE NO.CHK.FILE = 1
0122 OPEN '','CUSTOMER.XREF' TO CHECK.FILE.XREF ELSE                 |  OPEN '','CUSTOMER.XREF' TO CHECK.FILE.XREF ELSE ERRMSG ="CUS
0123 ERRMSG ="CUSTOMER.XREF";GOTO 93000                              <  
0124 END                                                             <  

0125 END ELSE                                                           END ELSE
0126 OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG="CUSTOMER";GOTO 930     OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG="CUSTOMER";GOTO 9
0127 OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE                   |  OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG="CUSTOM
0128 ERRMSG="CUSTOMER.XREF";GOTO 93000                               <  
0129 END                                                             <  
0130 NO.CHK.FILE = 0; C.P.NAME = "CUSTOMER"                             NO.CHK.FILE = 0; C.P.NAME = "CUSTOMER"
0131 OPEN '','PROSPECT' TO CHECK.FILE ELSE NO.CHK.FILE = 1              OPEN '','PROSPECT' TO CHECK.FILE ELSE NO.CHK.FILE = 1
0132 END                                                                END
0133 IF BUFFER1 = "MLS" THEN                                            IF BUFFER1 = "MLS" THEN

0134 OPEN '','MTYPE.CODE' TO MTYPE.CODE ELSE                         |  OPEN '','MTYPE.CODE' TO MTYPE.CODE ELSE ERRMSG="MTYPE.CODE";
0135 ERRMSG="MTYPE.CODE";GOTO 93000                                  <  
0136 END                                                                END
0137 END                                                             <  
0138 OPEN '','INVOICE' TO INVOICE ELSE ERRMSG="INVOICE";GOTO 93000   <  
0139 *                                                                  *
0140 *---- GET COMPANY NUMBER                                           *---- GET COMPANY NUMBER

0160 READV PER FROM CONTROL , CONO:"JCFISCAL" , 1 ELSE                  READV PER FROM CONTROL , CONO:"JCFISCAL" , 1 ELSE
0161 ERRMSG = "FISCAL PERIOD MISSING" ; GOSUB 91000 ; GOTO 99999        ERRMSG = "FISCAL PERIOD MISSING" ; GOSUB 91000 ; GOTO 99999
0162 END                                                                END
0163 CASE BUFFER1 = "MLS"                                               CASE BUFFER1 = "MLS"
0164 CASE 1                                                             CASE 1
0165 ERRMSG = "SYSTEM (":BUFFER1:") NOT ON FILE"                     |  ERRMSG = "SYSTEM (":BUFFER1:") NOT ON FILE" ; GOSUB 91000 ; 
0166 GOSUB 91000 ; GOTO 99999                                        <  
0167 END CASE                                                           END CASE
0168 *                                                                  *
0169 *---- INITIALIZATION                                               *---- INITIALIZATION

0184 GXR.CO=CONO                                                        GXR.CO=CONO
0185 UNKNOWN=STR('?',30)                                                UNKNOWN=STR('?',30)
0186 *                                                                  *
0187 *---- GET SCREEN                                                   *---- GET SCREEN
0188 *                                                                  *
0189 ECD.SCRN.CNT=12; *T26649                                        |  *T25432 v
0190                                                                 >  *ECD.SCRN.CNT=8
0191                                                                 >  ECD.SCRN.CNT=10;*T25432 CHANGED FROM 8 TO 10
0192                                                                 >  *T25432 ^
0193 IF F.BUFFER = "P" THEN                                             IF F.BUFFER = "P" THEN

0194 ECD.SCRN.NAME="PRSP.MAINT"                                         ECD.SCRN.NAME="PRSP.MAINT"
0195 END ELSE                                                           END ELSE
0196 ECD.SCRN.NAME="CUST.MAINT"                                         ECD.SCRN.NAME="CUST.MAINT"
0197 END                                                                END
0198 ECD.SCRN.NAME<2>="CUST.CREDIT.INQ"                                 ECD.SCRN.NAME<2>="CUST.CREDIT.INQ"
0199                                                                 >  ECD.SCRN.FLAG<2>=2       ; * T25432
0200 ECD.SCRN.NAME<3>="CUST.INV.INQ"                                    ECD.SCRN.NAME<3>="CUST.INV.INQ"
0201 ECD.SCRN.NAME<4>="CUST.JOB.INQ"                                    ECD.SCRN.NAME<4>="CUST.JOB.INQ"
0202 ECD.SCRN.NAME<5>="CUST.MLS.SUB"                                    ECD.SCRN.NAME<5>="CUST.MLS.SUB"
0203 ECD.SCRN.NAME<6>="SHIP.TO.MAINT"                                   ECD.SCRN.NAME<6>="SHIP.TO.MAINT"

0204 ECD.SCRN.NAME<7>="CUST.ORDER.INQ"                                  ECD.SCRN.NAME<7>="CUST.ORDER.INQ"
0205 ECD.SCRN.NAME<8>="CUST.TAX.SUB"                                    ECD.SCRN.NAME<8>="CUST.TAX.SUB"
0206                                                                 >  *T25432 v
0207 ECD.SCRN.NAME<9>="CUST.PURGED.INV.INQ"                             ECD.SCRN.NAME<9>="CUST.PURGED.INV.INQ"
0208                                                                 >  ECD.SCRN.FLAG<9>=2
0209 ECD.SCRN.NAME<10>="PURGED.INV.INQ.DET"                             ECD.SCRN.NAME<10>="PURGED.INV.INQ.DET"
0210 ECD.SCRN.NAME<11>="CUST.CMNT" ;*T25889                          |  ECD.SCRN.FLAG<10>=2
0211 ECD.SCRN.NAME<12>="CUST.ORDER.INQ" ; * T26649                   |  *T25432 ^
0212 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT

0213 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0214 IF BUFFER = "M" OR BUFFER = "X" THEN                            |  IF BUFFER = "M" THEN
0215 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0216 EXIT.FLAG = 1                                                      EXIT.FLAG = 1
0217 END ELSE                                                           END ELSE
0218 ECD.SCRN.NO = 2                                                    ECD.SCRN.NO = 2
0219 EXIT.FLAG = 0                                                      EXIT.FLAG = 0
0220 END                                                                END

0221 ESN = ECD.SCRN.NO                                                  ESN = ECD.SCRN.NO
0222 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0223 *                                                                  *
0224 *---- MAIN PROCESSING                                              *---- MAIN PROCESSING
0225 5*                                                                 5*
0226 ADDRESS.TOGGLED = 0; *T25888                                    <  
0227 LN=1;OLD.START.LINE=0;NEW.CUST='NO';KEY1='';N.KEY1='';CUST.KEY     LN=1;OLD.START.LINE=0;NEW.CUST='NO';KEY1='';N.KEY1='';CUST.K
0228 SCV.REC(30)<ESN,1>=DATE()                                          SCV.REC(30)<ESN,1>=DATE()
0229 ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT                             ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT
0230 ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT

0231                                                                 >  IF @LOGNAME = "renee" THEN DEBUG
0232 BEGIN CASE                                                         BEGIN CASE
0233 CASE ECD.RET.VALUE='END'                                           CASE ECD.RET.VALUE='END'
0234 GOTO 99999                                                         GOTO 99999
0235 CASE ECD.RET.VALUE=''                                              CASE ECD.RET.VALUE=''
0236 ECD.O.R = "O" ; * T26556                                        <  
0237 ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT

0246 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
0247 IF GXR.ID='' THEN                                                  IF GXR.ID='' THEN
0248 GOSUB 20000;GOTO 5                                                 GOSUB 20000;GOTO 5
0249 END ELSE                                                           END ELSE
0250 IF BUFFER = "M" THEN                                               IF BUFFER = "M" THEN
0251 MATREADU CUST.REC FROM CUSTOMER,CONO:GXR.ID LOCKED              |  MATREADU CUST.REC FROM CUSTOMER,CONO:GXR.ID ELSE
0252 ERRMSG = 'CUSTOMER record is locked by user - '                 <  
0253 ERRMSG:=GETUSERNAME(STATUS())                                   <  
0254 GOSUB 91000;GOTO 5                                              <  
0255 END ELSE                                                        <  

0274 READU KEY1 FROM CONTROL,CONO:C.P.NAME ELSE KEY1="000001"           READU KEY1 FROM CONTROL,CONO:C.P.NAME ELSE KEY1="000001"
0275 LOOP                                                               LOOP
0276 N.KEY1=KEY1 + 1                                                    N.KEY1=KEY1 + 1
0277 MATREAD CUST.REC.SAVE FROM CUSTOMER,CONO:KEY1 ELSE                 MATREAD CUST.REC.SAVE FROM CUSTOMER,CONO:KEY1 ELSE
0278 IF NO.CHK.FILE = 0 THEN                                            IF NO.CHK.FILE = 0 THEN
0279 MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO:KEY1 ELSE           |  MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO : KEY1 ELSE
0280 FND=1;GOTO 12                                                      FND=1;GOTO 12
0281 END                                                                END
0282 END ELSE                                                           END ELSE
0283 FND=1;GOTO 12                                                      FND=1;GOTO 12

0285 END                                                                END
0286 KEY1=KEY1 + 1                                                      KEY1=KEY1 + 1
0287 12*                                                                12*
0288 WHILE FND=0 DO REPEAT                                              WHILE FND=0 DO REPEAT
0289 CUST.KEY=KEY1                                                      CUST.KEY=KEY1
0290 MATREADU CUST.REC FROM CUSTOMER, CONO:CUST.KEY LOCKED           |  MATREADU CUST.REC FROM CUSTOMER, CONO:CUST.KEY THEN
0291 GOTO 11                                                            GOTO 11
0292 END THEN                                                        <  
0293 GOTO 11                                                         <  
0294 END                                                                END

0295                                                                 >  *T19656 v
0296 IF N.KEY1 # "" THEN                                                IF N.KEY1 # "" THEN
0297 WRITE N.KEY1 ON CONTROL,CONO:C.P.NAME                              WRITE N.KEY1 ON CONTROL,CONO:C.P.NAME
0298 END                                                                END
0299 CASE ECD.RET.VALUE # "" AND (BUFFER = "I" OR BUFFER = "X")      |  *T19656 ^   
0300                                                                 >  CASE ECD.RET.VALUE # "" AND BUFFER = "I"
0301 MATREAD CUST.REC FROM CUSTOMER,CONO:ECD.RET.VALUE ELSE             MATREAD CUST.REC FROM CUSTOMER,CONO:ECD.RET.VALUE ELSE

0305 CUST.KEY = ECD.RET.VALUE                                           CUST.KEY = ECD.RET.VALUE
0306 SCV.REC(1)<ESN>=CUST.KEY                                           SCV.REC(1)<ESN>=CUST.KEY
0307 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0308 OLD.NAME=CUST.NAME;NEW.NAME=CUST.NAME                              OLD.NAME=CUST.NAME;NEW.NAME=CUST.NAME
0309 CASE ECD.RET.VALUE # ""                                            CASE ECD.RET.VALUE # ""
0310 MATREADU CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE LOCKED      |  MATREADU CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
0311 ERRMSG = 'CUSTOMER record is locked by user - '                 |  *      ERRMSG = ECD.RET.VALUE:" NOT ON FILE. DO YOU WANT TO 
0312 ERRMSG:=GETUSERNAME(STATUS())                                   |  *      GOSUB 91000
0313 GOSUB 91000;GOTO 5                                              <  
0314 END ELSE                                                        <  

0313 GOSUB 91000;GOTO 5                                              <  
0314 END ELSE                                                        <  
0315 SAVE.ERV = ECD.RET.VALUE                                           SAVE.ERV = ECD.RET.VALUE
0316 ECD.NUM = 52                                                       ECD.NUM = 52
0317 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
0318                                                                 >  *      IF REPLY # "Y" THEN
0319 IF ECD.RET.VALUE # "Y" THEN                                        IF ECD.RET.VALUE # "Y" THEN
0320 RELEASE CUSTOMER, CONO:SAVE.ERV                                    RELEASE CUSTOMER, CONO:SAVE.ERV
0321 GOTO 5                                                             GOTO 5
0322 END                                                                END

0321 GOTO 5                                                             GOTO 5
0322 END                                                                END
0323 ECD.RET.VALUE = SAVE.ERV                                           ECD.RET.VALUE = SAVE.ERV
0324 NEW.CUST = "YES"                                                   NEW.CUST = "YES"
0325 IF NO.CHK.FILE = 0 THEN                                            IF NO.CHK.FILE = 0 THEN
0326 MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO:CUST.KEY ELSE GOTO  |  MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO : CUST.KEY ELSE 
0327 IF NEW.CUST = "NO" THEN                                            IF NEW.CUST = "NO" THEN
0328 IF F.BUFFER = "P" THEN                                             IF F.BUFFER = "P" THEN
0329 ERRMSG = CUST.KEY:" is in CUSTOMER file. Try again !"              ERRMSG = CUST.KEY:" is in CUSTOMER file. Try again !"
0330 END ELSE                                                           END ELSE

0338 MAT CUST.REC='';NEW.CUST='YES'                                     MAT CUST.REC='';NEW.CUST='YES'
0339 END                                                                END
0340 CUST.KEY=ECD.RET.VALUE                                             CUST.KEY=ECD.RET.VALUE
0341 SCV.REC(1)<ESN>=CUST.KEY                                           SCV.REC(1)<ESN>=CUST.KEY
0342 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
0343                                                                 >  * T21684
0344 OLD.NAME = CUST.NAME; NEW.NAME = CUST.NAME                         OLD.NAME = CUST.NAME; NEW.NAME = CUST.NAME
0345                                                                 >  * T21684
0346 END CASE                                                           END CASE
0347 BEGIN CASE                                                         BEGIN CASE

0348 CASE BUFFER # "M" AND BUFFER # "X"                              |  CASE BUFFER # "M"
0349 CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)                    CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)
0350 GOSUB 20000                                                        GOSUB 20000
0351 CASE NEW.CUST = "YES"                                              CASE NEW.CUST = "YES"
0352 FOR REQUEST=1 TO 23                                                FOR REQUEST=1 TO 23
0353 ON REQUEST GOSUB 100,200,400,500,600,700,800,900,2600,1100,120  |  ON REQUEST GOSUB 100,200,300,400,500,600,700,800,900,1000,11
0354 IF ECD.RET.VALUE="END" THEN                                        IF ECD.RET.VALUE="END" THEN

0374 END CASE                                                           END CASE
0375 GOTO 5                                                             GOTO 5
0376 *                                                                  *
0377 *---- ENTER CUSTOMER NAME                                          *---- ENTER CUSTOMER NAME
0378 100*                                                               100*
0379 ECD.O.R = "R" ; * T26556                                        <  
0380 ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
0381 IF ECD.RET.VALUE # '' THEN                                         IF ECD.RET.VALUE # '' THEN
0382 CUST.NAME=ECD.RET.VALUE;NEW.NAME=CUST.NAME                         CUST.NAME=ECD.RET.VALUE;NEW.NAME=CUST.NAME
0383 END                                                                END

0385 *                                                                  *
0386 *---- ENTER CUSTOMER ADDRESS                                       *---- ENTER CUSTOMER ADDRESS
0387 200*                                                               200*
0388 ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
0389 IF ECD.RET.VALUE="END" THEN GOTO 250                               IF ECD.RET.VALUE="END" THEN GOTO 250
0390 IF ADDRESS.TOGGLED THEN                                         |  IF ECD.RET.VALUE # '' THEN CUST.ADDR1=ECD.RET.VALUE ELSE CUS
0391 CUST.ADDL.ADDR1=ECD.RET.VALUE                                   <  
0392 END ELSE                                                        <  
0393 CUST.ADDR1=ECD.RET.VALUE                                        <  
0394 END                                                             <  

0395 ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
0396 IF ECD.RET.VALUE="END" THEN GOTO 250                               IF ECD.RET.VALUE="END" THEN GOTO 250
0397 IF ADDRESS.TOGGLED THEN                                         |  IF ECD.RET.VALUE # '' THEN CUST.ADDR2=ECD.RET.VALUE ELSE CUS
0398 CUST.ADDL.ADDR2=ECD.RET.VALUE                                   <  
0399 END ELSE                                                        <  
0400 CUST.ADDR2=ECD.RET.VALUE                                        <  
0401 END                                                             <  
0402 ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
0403 IF ECD.RET.VALUE="END" THEN GOTO 250                               IF ECD.RET.VALUE="END" THEN GOTO 250

0404 IF ADDRESS.TOGGLED THEN                                         |  IF ECD.RET.VALUE # '' THEN CUST.ADDR3=ECD.RET.VALUE ELSE CUS
0405 CUST.ADDL.ADDR3=ECD.RET.VALUE                                   <  
0406 END ELSE                                                        <  
0407 CUST.ADDR3=ECD.RET.VALUE                                        <  
0408 END                                                             <  
0409 230*                                                               230*
0410 ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT

0415 ERRMSG='Commas cannot be used in this field'                       ERRMSG='Commas cannot be used in this field'
0416 GOSUB 91000; GOTO 230                                              GOSUB 91000; GOTO 230
0417 END CASE                                                           END CASE
0418 CITY = ECD.RET.VALUE                                               CITY = ECD.RET.VALUE
0419 240*                                                               240*
0420                                                                 >  *T21983 v
0421 IF OPCO.CNTY = "" THEN OPCO.CNTY = "USA"                           IF OPCO.CNTY = "" THEN OPCO.CNTY = "USA"
0422 IF OPCO.CNTY # "USA" THEN                                          IF OPCO.CNTY # "USA" THEN
0423 ECD.O.R = "O"                                                      ECD.O.R = "O"
0424 END                                                                END

0425                                                                 >  *T21983 ^
0426 ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
0427 BEGIN CASE                                                         BEGIN CASE
0428 CASE ECD.RET.VALUE="END"                                           CASE ECD.RET.VALUE="END"
0429 GOTO 250                                                           GOTO 250
0430 CASE INDEX(ECD.RET.VALUE,',',1)                                    CASE INDEX(ECD.RET.VALUE,',',1)
0431 ERRMSG='Commas cannot be used in this field'                       ERRMSG='Commas cannot be used in this field'

0432 GOSUB 91000; GOTO 240                                              GOSUB 91000; GOTO 240
0433 CASE ECD.RET.VALUE = ""                                            CASE ECD.RET.VALUE = ""
0434 IF ADDRESS.TOGGLED THEN                                         <  
0435 CUST.ADDL.ADDR4=CITY                                            <  
0436 END ELSE                                                        <  
0437 CUST.ADDR4 = CITY                                                  CUST.ADDR4 = CITY
0438 END                                                             <  
0439 CASE 1                                                             CASE 1
0440 IF ADDRESS.TOGGLED THEN                                         <  

0441 CUST.ADDL.ADDR4=CITY:', ':ECD.RET.VALUE                         <  
0442 END ELSE                                                        <  
0443 CUST.ADDR4 = CITY:', ':ECD.RET.VALUE                               CUST.ADDR4 = CITY:', ':ECD.RET.VALUE
0444 END                                                             <  
0445 END CASE                                                           END CASE
0446 250*                                                               250*
0447 ;* IF THE ZIPCODE IS BLANK THEN GET ZIPCODE, FORCES ZIPCODE FO  |  RETURN

0448 IF SCV.REC(7)<ESN> # '' THEN RETURN                             <  
0449 *                                                                  *
0450 *---- ENTER ZIPCODE                                                *---- ENTER ZIPCODE
0451 300*                                                               300*
0452 ECD.NUM=7;ECD.ACTION=4;CALL SCRN.EDIT                              ECD.NUM=7;ECD.ACTION=4;CALL SCRN.EDIT
0453 IF ECD.RET.VALUE = "END" THEN GOTO 309                             IF ECD.RET.VALUE = "END" THEN GOTO 309
0454 IF ADDRESS.TOGGLED THEN                                         <  

0455 CUST.ADDL.ZIP=ECD.RET.VALUE                                     <  
0456 RETURN                                                          <  
0457 END ELSE                                                        <  
0458 CUST.ZIP = ECD.RET.VALUE                                           CUST.ZIP = ECD.RET.VALUE
0459 END                                                             <  
0460 IF OPCO.CNTY = "" THEN GOTO 309                                    IF OPCO.CNTY = "" THEN GOTO 309
0461 305*                                                               305*

0481 ECD.RET.VALUE = GXR.ID                                             ECD.RET.VALUE = GXR.ID
0482 END                                                                END
0483 IF ECD.RET.VALUE = OPCO.CNTY THEN                                  IF ECD.RET.VALUE = OPCO.CNTY THEN
0484 ECD.RET.VALUE = ""; COUNTRY = ""                                   ECD.RET.VALUE = ""; COUNTRY = ""
0485 END ELSE                                                           END ELSE
0486 MATREAD CTY.REC FROM COUNTRY.CODE,CONO:ECD.RET.VALUE ELSE       |  READ COUNTRY FROM COUNTRY.CODE,CONO:ECD.RET.VALUE ELSE
0487 ERRMSG="Cannot locate country code # ":ECD.RET.VALUE               ERRMSG="Cannot locate country code # ":ECD.RET.VALUE
0488 GOSUB 91000; GOTO 305                                              GOSUB 91000; GOTO 305
0489 END                                                                END
0490 COUNTRY = CTY.DESC          ;*T25159                            <  

0541 GXR.NAME = "GEN.CODE1"                                             GXR.NAME = "GEN.CODE1"
0542 GXR.SORT.FILE = "SALESMAN"                                         GXR.SORT.FILE = "SALESMAN"
0543 GXR.FILE = SALESMAN                                                GXR.FILE = SALESMAN
0544 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)             CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0545 ECD.ACTION = 2;CALL SCRN.EDIT                                      ECD.ACTION = 2;CALL SCRN.EDIT
0546                                                                 >  ***** T23105
0547 IF GXR.ID = "" THEN                                                IF GXR.ID = "" THEN
0548 SCV.REC(ECD.NUM)<ESN> = CUST.SALESMAN                              SCV.REC(ECD.NUM)<ESN> = CUST.SALESMAN
0549 GOSUB 40050; GOTO 700                                              GOSUB 40050; GOTO 700
0550 END                                                                END

0551                                                                 >  ***** END T23105
0552 SCV.REC(ECD.NUM)<ESN> = GXR.ID                                     SCV.REC(ECD.NUM)<ESN> = GXR.ID
0553 GOSUB 40050                                                        GOSUB 40050
0554                                                                 >  **   IF GXR.ID = "" THEN GOTO 700;* T23108
0555 ECD.RET.VALUE = GXR.ID                                             ECD.RET.VALUE = GXR.ID
0556 END CASE                                                           END CASE
0557 MATREAD SALESMAN.REC FROM SALESMAN,CONO:ECD.RET.VALUE ELSE         MATREAD SALESMAN.REC FROM SALESMAN,CONO:ECD.RET.VALUE ELSE

0573 GXR.NAME = "GEN.CODE1"                                             GXR.NAME = "GEN.CODE1"
0574 GXR.SORT.FILE = "CSR.CODE"                                         GXR.SORT.FILE = "CSR.CODE"
0575 GXR.FILE = CSR.CODE                                                GXR.FILE = CSR.CODE
0576 CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)             CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
0577 ECD.ACTION = 2;CALL SCRN.EDIT                                      ECD.ACTION = 2;CALL SCRN.EDIT
0578                                                                 >  ***** T23105
0579 IF GXR.ID = "" THEN                                                IF GXR.ID = "" THEN
0580 SCV.REC(ECD.NUM)<ESN> = CUST.CSR.CODE                              SCV.REC(ECD.NUM)<ESN> = CUST.CSR.CODE
0581 GOSUB 40050; GOTO 800                                              GOSUB 40050; GOTO 800
0582 END                                                                END

0583                                                                 >  ***** END T23105
0584 SCV.REC(ECD.NUM)<ESN> = GXR.ID                                     SCV.REC(ECD.NUM)<ESN> = GXR.ID
0585 GOSUB 40050                                                        GOSUB 40050
0586                                                                 >  **   IF GXR.ID = "" THEN GOTO 800;* T23108
0587 ECD.RET.VALUE = GXR.ID                                             ECD.RET.VALUE = GXR.ID
0588 END CASE                                                           END CASE
0589 MATREAD CSR.REC FROM CSR.CODE,CONO:ECD.RET.VALUE ELSE              MATREAD CSR.REC FROM CSR.CODE,CONO:ECD.RET.VALUE ELSE

0682 END                                                                END
0683 CUST.ADDL.OPS<1,2> = ECD.RET.VALUE                                 CUST.ADDL.OPS<1,2> = ECD.RET.VALUE
0684 1340*                                                              1340*
0685 ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = FOB.DESC                     ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = FOB.DESC
0686 ECD.ACTION = 5; CALL SCRN.EDIT                                     ECD.ACTION = 5; CALL SCRN.EDIT
0687 1350 RETURN                                                     |  1350RETURN
0688 *                                                                  *
0689 *---- ENTER START DATE                                             *---- ENTER START DATE
0690 1400*                                                              1400*
0691 ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT

0694 *                                                                  *
0695 *---- ENTER CREDIT CODE                                            *---- ENTER CREDIT CODE
0696 1500*                                                              1500*
0697 ECD.NUM=15;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=15;ECD.ACTION=4;CALL SCRN.EDIT
0698 IF ECD.RET.VALUE # "END" THEN CUST.CREDIT=ECD.RET.VALUE            IF ECD.RET.VALUE # "END" THEN CUST.CREDIT=ECD.RET.VALUE
0699 ECD.NUM=53;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0700 IF ECD.RET.VALUE # "END" THEN CUST.CREDIT.DESC=ECD.RET.VALUE    <  
0701 RETURN                                                             RETURN
0702 *                                                                  *
0703 *---- ENTER CREDIT LIMIT                                           *---- ENTER CREDIT LIMIT

0737 RETURN                                                             RETURN
0738 *                                                                  *
0739 *---- ENTER STATEMENT FLAG                                         *---- ENTER STATEMENT FLAG
0740 1900*                                                              1900*
0741 ECD.NUM=36;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=36;ECD.ACTION=4;CALL SCRN.EDIT
0742 IF ECD.RET.VALUE = "END" THEN RETURN                            |  IF ECD.RET.VALUE # "END" THEN CUST.STMT.CODE = ECD.RET.VALUE
0743 CUST.STMT.CODE = ECD.RET.VALUE                                  <  
0744 ;* T26915 v                                                     <  
0745 IF CUST.EMAIL THEN GOSUB GET.STMT.SEND.FLAG                     <  
0746 ECD.NUM=58                                                      <  

0747 SCV.REC(ECD.NUM)<ESN>=CUST.STMT.SEND.FLAG                       <  
0748 ECD.ACTION=5;CALL SCRN.EDIT                                     <  
0749 ;* T26915 ^                                                     <  
0750 RETURN                                                             RETURN
0751 *                                                                  *
0752 *---- ENTER STATEMENT EMAIL SEND FLAG                           <  
0753 GET.STMT.SEND.FLAG:                                             <  

0754 ECD.PMSG = "Will this customer's statements be emailed (Y/N)?"  <  
0755 ECD.NUM=52;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0756 IF ECD.RET.VALUE = 'Y' THEN                                     <  
0757 CUST.STMT.SEND.FLAG = 'Email'                                   <  
0758 END ELSE                                                        <  
0759 CUST.STMT.SEND.FLAG = ''                                        <  
0760 END                                                             <  

0761 RETURN                                                          <  
0762 *                                                               <  
0763 *---- ENTER INVOICE PRINT TYPE                                     *---- ENTER INVOICE PRINT TYPE
0764 2000*                                                              2000*
0765 ECD.NUM=44;ECD.ACTION=4                                            ECD.NUM=44;ECD.ACTION=4
0766 IF OPCO.INV.PRT # "" AND CUST.IVC.CODE = "" THEN                   IF OPCO.INV.PRT # "" AND CUST.IVC.CODE = "" THEN
0767 ECD.O.R = "O"; ECD.DEFAULT = OPCO.INV.PRT                          ECD.O.R = "O"; ECD.DEFAULT = OPCO.INV.PRT

0793 2500*                                                              2500*
0794 ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT                             ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT
0795 IF ECD.RET.VALUE # "END" THEN CUST.COMMISSION = ECD.RET.VALUE      IF ECD.RET.VALUE # "END" THEN CUST.COMMISSION = ECD.RET.VALU
0796 RETURN                                                             RETURN
0797 *                                                                  *
0798 *---- ENTER CUSTOMER EMAIL                                      <  
0799 2600*                                                           <  
0800 ECD.NUM=57;ECD.ACTION=4;CALL SCRN.EDIT                          <  
0801 IF ECD.RET.VALUE = 'END' THEN RETURN                            <  
0802 ;* T26915 v                                                     <  

0803 EMAIL.ADDR=ECD.RET.VALUE                                        <  
0804 IF ECD.RET.VALUE = '' THEN                                      <  
0805 CUST.STMT.SEND.FLAG = ''                                        <  
0806 END ELSE IF CUST.EMAIL = '' AND NEW.CUST = 'NO' THEN            <  
0807 GOSUB GET.STMT.SEND.FLAG                                        <  
0808 END                                                             <  
0809 SCV.REC(58)<ESN>=CUST.STMT.SEND.FLAG                            <  

0810 ECD.NUM=58;ECD.ACTION=5;CALL SCRN.EDIT                          <  
0811 ;* T26915 ^                                                     <  
0812 CUST.EMAIL=EMAIL.ADDR                                           <  
0813 RETURN                                                          <  
0814 *                                                               <  
0815 *---- ENTER CONTACT SCREEN                                         *---- ENTER CONTACT SCREEN
0816 5040*                                                              5040*

0914 *---- OPTIONS FOR CONTACT SCREEN                                   *---- OPTIONS FOR CONTACT SCREEN
0915 5080*                                                              5080*
0916 AGAIN=0                                                            AGAIN=0
0917 LOOP                                                               LOOP
0918 SCV.REC(34)<ESN,1>=''                                              SCV.REC(34)<ESN,1>=''
0919 ECD.NUM=34                                                      |  ECD.NUM=34;ECD.ACTION=4;CALL SCRN.EDIT
0920 IF BUFFER = "X" THEN ECD.NUM = 55 ; *T26069                     <  
0921 ECD.ACTION=4;CALL SCRN.EDIT                                     <  
0922 REQUEST=ECD.RET.VALUE                                              REQUEST=ECD.RET.VALUE
0923 BEGIN CASE                                                         BEGIN CASE

0936 GOSUB 5045                                                         GOSUB 5045
0937 CASE REQUEST='S'                                                   CASE REQUEST='S'
0938 LN=LN + C.PAGE.SIZE                                                LN=LN + C.PAGE.SIZE
0939 IF LN > LINES THEN LN=1                                            IF LN > LINES THEN LN=1
0940 GOSUB 5045                                                         GOSUB 5045
0941 CASE REQUEST='SR'                                               <  
0942 LN -= C.PAGE.SIZE                                               <  
0943 IF LN < 1 THEN LN = 1                                           <  
0944 GOSUB 5045                                                      <  
0945 CASE REQUEST='SB'                                               <  

0946 LN = LINES                                                      <  
0947 GOSUB 5045                                                      <  
0948 CASE REQUEST='ST'                                               <  
0949 LN = 1                                                          <  
0950 GOSUB 5045                                                      <  
0951 CASE REQUEST='C'                                                   CASE REQUEST='C'
0952 GOSUB 5048                                                         GOSUB 5048

0978 *---- GET VALUES FROM CUSTOMER FILE                                *---- GET VALUES FROM CUSTOMER FILE
0979 6000*                                                              6000*
0980 MATREAD SALESMAN.REC FROM SALESMAN,CONO:CUST.SALESMAN ELSE         MATREAD SALESMAN.REC FROM SALESMAN,CONO:CUST.SALESMAN ELSE
0981 ERRMSG="SALESREP RECORD IS INVALID";GOSUB 91000;SALS.NAME=UNKN     ERRMSG="SALESREP RECORD IS INVALID";GOSUB 91000;SALS.NAME=U
N
0982 END                                                                END
0983 SCV.REC(54)<ESN> = "<-------FIRST ADDRESS-------->"             <  
0984 SCV.REC(2)<ESN>=CUST.NAME                                          SCV.REC(2)<ESN>=CUST.NAME
0985 SCV.REC(3)<ESN>=CUST.ADDR1                                         SCV.REC(3)<ESN>=CUST.ADDR1
0986 SCV.REC(4)<ESN>=CUST.ADDR2                                         SCV.REC(4)<ESN>=CUST.ADDR2
0987 SCV.REC(5)<ESN>=CUST.ADDR3                                         SCV.REC(5)<ESN>=CUST.ADDR3

0988 SCV.REC(6)<ESN>=FIELD(CUST.ADDR4,",",1)                            SCV.REC(6)<ESN>=FIELD(CUST.ADDR4,",",1)
0989 SCV.REC(7)<ESN>=CUST.ZIP                                           SCV.REC(7)<ESN>=CUST.ZIP
0990 IF CUST.ADDL.OPS<1,4> = "" THEN                                    IF CUST.ADDL.OPS<1,4> = "" THEN
0991 COUNTRY = ""                                                       COUNTRY = ""
0992 END ELSE                                                           END ELSE
0993 MATREAD CTY.REC FROM COUNTRY.CODE, CONO:CUST.ADDL.OPS<1,4> THE  |  READ COUNTRY FROM COUNTRY.CODE,CONO:CUST.ADDL.OPS<1,4> ELSE
0994 COUNTRY = CTY.DESC                                              <  
0995 END ELSE                                                        <  
0996 COUNTRY = CUST.ADDL.OPS<1,4>                                       COUNTRY = CUST.ADDL.OPS<1,4>
0997 END                                                                END

1002 SCV.REC(11)<ESN>=SALS.NAME                                         SCV.REC(11)<ESN>=SALS.NAME
1003 SCV.REC(12)<ESN>=CUST.INT.INST                                     SCV.REC(12)<ESN>=CUST.INT.INST
1004 SCV.REC(13)<ESN>=CUST.ACCT                                         SCV.REC(13)<ESN>=CUST.ACCT
1005 SCV.REC(14)<ESN>=CUST.START.DATE                                   SCV.REC(14)<ESN>=CUST.START.DATE
1006 SCV.REC(15)<ESN>=CUST.CREDIT                                       SCV.REC(15)<ESN>=CUST.CREDIT
1007 SCV.REC(53)<ESN>=CUST.CREDIT.DESC                               <  
1008 SCV.REC(16)<ESN>=CUST.CR.LIMIT                                     SCV.REC(16)<ESN>=CUST.CR.LIMIT
1009 SCV.REC(17)<ESN>=CUST.TERMS                                        SCV.REC(17)<ESN>=CUST.TERMS
1010 SCV.REC(18)<ESN>=CUST.TYPE                                         SCV.REC(18)<ESN>=CUST.TYPE
1011 SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDR4,",",2,99))                  SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDR4,",",2,99))

1026 SCV.REC(44)<ESN>=CUST.IVC.CODE                                     SCV.REC(44)<ESN>=CUST.IVC.CODE
1027 SCV.REC(46)<ESN>=CUST.ADDL.OPS<1,1>                                SCV.REC(46)<ESN>=CUST.ADDL.OPS<1,1>
1028 SCV.REC(47)<ESN>=CUST.ADDL.OPS<1,2>                                SCV.REC(47)<ESN>=CUST.ADDL.OPS<1,2>
1029 SCV.REC(48)<ESN>=CUST.ADDL.OPS<1,3>                                SCV.REC(48)<ESN>=CUST.ADDL.OPS<1,3>
1030 SCV.REC(49)<ESN>=CUST.CSR.CODE                                     SCV.REC(49)<ESN>=CUST.CSR.CODE
1031 SCV.REC(58)<ESN>=CUST.STMT.SEND.FLAG ;*T26915                   <  
1032 IF CUST.CSR.CODE = "" THEN                                         IF CUST.CSR.CODE = "" THEN
1033 MAT CSR.REC = ""                                                   MAT CSR.REC = ""
1034 END ELSE                                                           END ELSE
1035 MATREAD CSR.REC FROM CSR.CODE, CONO:CUST.CSR.CODE ELSE             MATREAD CSR.REC FROM CSR.CODE, CONO:CUST.CSR.CODE ELSE

1043 MATREAD FOB.REC FROM FOB, CONO:CUST.ADDL.OPS<1,2> ELSE             MATREAD FOB.REC FROM FOB, CONO:CUST.ADDL.OPS<1,2> ELSE
1044 MAT FOB.REC = ""; FOB.DESC = UNKNOWN                               MAT FOB.REC = ""; FOB.DESC = UNKNOWN
1045 END                                                                END
1046 END                                                                END
1047 SCV.REC(51)<ESN>=FOB.DESC                                          SCV.REC(51)<ESN>=FOB.DESC
1048 SCV.REC(57)<ESN>=CUST.EMAIL                                     <  
1049 RETURN                                                             RETURN
1050 *                                                                  *
1051 *---- OPTIONS                                                      *---- OPTIONS
1052 10000*                                                             10000*

1059 ECD.NUM = 43                                                       ECD.NUM = 43
1060 END ELSE                                                           END ELSE
1061 ECD.NUM = 39                                                       ECD.NUM = 39
1062 END                                                                END
1063 END                                                                END
1064 IF BUFFER = "X" THEN ECD.NUM = 56 ; *T26069                     <  
1065 SCV.REC(ECD.NUM)<ESN,1>=''                                         SCV.REC(ECD.NUM)<ESN,1>=''
1066 ECD.ACTION = 4; CALL SCRN.EDIT                                     ECD.ACTION = 4; CALL SCRN.EDIT
1067 OPTION=ECD.RET.VALUE                                               OPTION=ECD.RET.VALUE
1068 BEGIN CASE                                                         BEGIN CASE

1069 CASE OPTION="E" OR OPTION="END"                                    CASE OPTION="E" OR OPTION="END"
1070                                                                 >  * Task 20507 *
1071                                                                 >  *    Below added for exit if SHIP.TO file updated on New Cus
1072 IF NEW.CUST = "Y" AND CUST.SHIP.TO # "" THEN                       IF NEW.CUST = "Y" AND CUST.SHIP.TO # "" THEN
1073 TREC=''                                                            TREC=''
1074 FOR I = 1 TO CUST.SHIP.TO                                          FOR I = 1 TO CUST.SHIP.TO
1075 READU TREC FROM SHIP.TO, CONO:CUST.KEY:"!":I 'R%3' THEN            READU TREC FROM SHIP.TO, CONO:CUST.KEY:"!":I 'R%3' THEN
1076 DELETE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'                          DELETE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'

1076 DELETE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'                          DELETE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'
1077 END ELSE RELEASE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'                END ELSE RELEASE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'
1078 NEXT I                                                             NEXT I
1079 DELETE CUSTOMER, CONO:CUST.KEY                                     DELETE CUSTOMER, CONO:CUST.KEY
1080 END                                                                END
1081                                                                 >  *
1082 RELEASE CUSTOMER,CONO:CUST.KEY                                     RELEASE CUSTOMER,CONO:CUST.KEY
1083 MORE=1                                                             MORE=1
1084 CASE OPTION="CC"                                                   CASE OPTION="CC"
1085 LINES=DCOUNT(CUST.CONTACT.CD,VM)                                   LINES=DCOUNT(CUST.CONTACT.CD,VM)

1085 LINES=DCOUNT(CUST.CONTACT.CD,VM)                                   LINES=DCOUNT(CUST.CONTACT.CD,VM)
1086 GOSUB 5080                                                         GOSUB 5080
1087 LN=1;OLD.START.LINE=0;LINES=0                                      LN=1;OLD.START.LINE=0;LINES=0
1088 CASE OPTION="T"                                                    CASE OPTION="T"
1089 ECD.SCRN.NO = 8                                                    ECD.SCRN.NO = 8
1090 CALL CUST.TAX.SUB(CONO,CUST.KEY,MODE)                           |  CALL CUST.TAX.SUB(CONO,CUST.KEY)
1091 GOSUB 40000                                                        GOSUB 40000
1092 CASE OPTION = "ST"                                              |  CASE OPTION ="ST" AND CO.OPS = "Y"
1093 ECD.SCRN.NO=6;SHPNO = ""                                           ECD.SCRN.NO=6;SHPNO = ""
1094 CALL CUST.SHIP.TO.MAINT(CONO,CUST.KEY,SHPNO,OPCO.CNTY,MODE)     |  CALL SHIP.TO.MAINT(CONO,CUST.KEY,SHPNO,OPCO.CNTY)

1097 ECD.SCRN.NO = 2                                                    ECD.SCRN.NO = 2
1098 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT
1099 SCV.REC(1)<ECD.SCRN.NO> = CUST.KEY                                 SCV.REC(1)<ECD.SCRN.NO> = CUST.KEY
1100 CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)                    CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)
1101 GOSUB 40000                                                        GOSUB 40000
1102 CASE OPTION="CM"                                                <  
1103 ECD.SCRN.NO=11                                                  <  
1104 SCV.REC(2)<ECD.SCRN.NO>=CUST.KEY                                <  
1105 SCV.REC(3)<ECD.SCRN.NO>=CUST.NAME                               <  
1106 ECD.ACTION=3; CALL SCRN.EDIT                                    <  

1107 CALL CUST.CMNT(CONO,MODE)                                       <  
1108 GOSUB 40000                                                     <  
1109 CASE OPTION="AT"                                                <  
1110 IF ADDRESS.TOGGLED THEN                                         <  
1111 SCV.REC(3)<ESN>=CUST.ADDR1                                      <  
1112 SCV.REC(4)<ESN>=CUST.ADDR2                                      <  
1113 SCV.REC(5)<ESN>=CUST.ADDR3                                      <  

1114 SCV.REC(6)<ESN>=FIELD(CUST.ADDR4,",",1)                         <  
1115 SCV.REC(7)<ESN>=CUST.ZIP                                        <  
1116 SCV.REC(8)<ESN>=COUNTRY.SAVE                                    <  
1117 SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDR4,",",2,99))               <  
1118 SCV.REC(54)<ESN> = "<-------FIRST ADDRESS-------->"             <  
1119 END ELSE                                                        <  
1120 SCV.REC(3)<ESN>=CUST.ADDL.ADDR1                                 <  

1121 SCV.REC(4)<ESN>=CUST.ADDL.ADDR2                                 <  
1122 SCV.REC(5)<ESN>=CUST.ADDL.ADDR3                                 <  
1123 SCV.REC(6)<ESN>=FIELD(CUST.ADDL.ADDR4,",",1)                    <  
1124 SCV.REC(7)<ESN>=CUST.ADDL.ZIP                                   <  
1125 COUNTRY.SAVE=SCV.REC(8)<ESN>                                    <  
1126 SCV.REC(8)<ESN>=''                                              <  
1127 SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDL.ADDR4,",",2,99))          <  

1128 SCV.REC(54)<ESN> = "<-------SECOND ADDRESS------->"             <  
1129 END                                                             <  
1130 ADDRESS.TOGGLED = NOT(ADDRESS.TOGGLED)                          <  
1131 FOR ECD.NUM = 3 TO 8                                            <  
1132 ECD.ACTION = 5; CALL SCRN.EDIT                                  <  
1133 NEXT ECD.NUM                                                    <  
1134 ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT                          <  

1135 ECD.NUM=54;ECD.ACTION=5;CALL SCRN.EDIT                          <  
1136 CASE OPTION="CI"                                                   CASE OPTION="CI"
1137 IF CUST.INVOICE='' OR CO.ARS # "Y" THEN                            IF CUST.INVOICE='' OR CO.ARS # "Y" THEN
1138 ERRMSG="Cannot locate any invoices for this customer"              ERRMSG="Cannot locate any invoices for this customer"
1139 GOSUB 91000                                                        GOSUB 91000
1140 END ELSE                                                           END ELSE
1141 ECD.SCRN.NO = 3                                                    ECD.SCRN.NO = 3

1158 CASE OPTION="CO"                                                   CASE OPTION="CO"
1159 IF CUST.ORD.NUM='' THEN                                            IF CUST.ORD.NUM='' THEN
1160 ERRMSG="Cannot locate any Orders for this customer"                ERRMSG="Cannot locate any Orders for this customer"
1161 GOSUB 91000                                                        GOSUB 91000
1162 END ELSE                                                           END ELSE
1163 ECD.SCRN.NO = 12                                                |  GXR.NAME = "CUST.ORD.INQ"
1164                                                                 >  GXR.FILE = ORDER
1165                                                                 >  GXR.SRCH.ID = CUST.ORD.NUM
1166                                                                 >  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
1167 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT

1168 SCV.REC(1)<ECD.SCRN.NO>=CUST.KEY                                |  GOSUB 40050
1169 CALL CUST.ORDER.INQ(CONO)                                       <  
1170 GOSUB 40000                                                     <  
1171 END                                                                END
1172 CASE OPTION = "M" AND BUFFER1 = "MLS"                              CASE OPTION = "M" AND BUFFER1 = "MLS"
1173 ECD.SCRN.NO = 5                                                    ECD.SCRN.NO = 5
1174 ECD.ACTION = 2; CALL SCRN.EDIT                                     ECD.ACTION = 2; CALL SCRN.EDIT

1226 IF NEW.CUST = "YES" THEN                                           IF NEW.CUST = "YES" THEN
1227 SCV.REC(1)<ESN>=CUST.KEY                                           SCV.REC(1)<ESN>=CUST.KEY
1228 ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT                              ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
1229 ERRMSG="PLEASE NOTE NEW ":C.P.NAME:" NUMBER (":CUST.KEY:")"        ERRMSG="PLEASE NOTE NEW ":C.P.NAME:" NUMBER (":CUST.KEY:")"
1230 GOSUB 91000                                                        GOSUB 91000
1231                                                                 >  *T19656         WRITE N.KEY1 ON CONTROL,CONO:C.P.NAME
1232 END                                                                END
1233 IF NEW.CUST = "YES" AND CO.CUST.ROLDX = "Y" AND C.P.NAME = "CU     IF NEW.CUST = "YES" AND CO.CUST.ROLDX = "Y" AND C.P.NAME = "
1234 READU KEYS FROM CONTROL,CONO:"ROLODEX" ELSE KEYS = ""              READU KEYS FROM CONTROL,CONO:"ROLODEX" ELSE KEYS = ""
1235 K.CNT = DCOUNT(KEYS,VM) + 1                                        K.CNT = DCOUNT(KEYS,VM) + 1

1238 END                                                                END
1239 GOSUB 30000                                                        GOSUB 30000
1240 IF NEW.CUST='YES' OR OLD.NAME # NEW.NAME THEN                      IF NEW.CUST='YES' OR OLD.NAME # NEW.NAME THEN
1241 CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CUSTOMER.X     CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CUSTOMER
1242 END                                                                END
1243 CASE OPTION > 0 AND OPTION < 25                                 |  CASE NOT(NUM(OPTION))
1244 ON OPTION GOSUB 100,200,300,400,500,600,700,800,900,2600,1100,  |  CASE OPTION > 0 AND OPTION < 23
1245                                                                 >  ON OPTION GOSUB 100,200,300,400,500,600,700,800,900,1000,110
1246 CASE OPTION = 25                                                   CASE OPTION = 25
1247 GOSUB 2500                                                         GOSUB 2500

1248 CASE 1                                                          <  
1249 ERRMSG = "Invalid Entry. For help, enter '?'."                  <  
1250 GOSUB 91000                                                     <  
1251 END CASE                                                           END CASE
1252 1010*                                                              1010*
1253 WHILE MORE=0 DO REPEAT                                             WHILE MORE=0 DO REPEAT
1254 RETURN                                                             RETURN

1259 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
1260 RETURN                                                             RETURN
1261 *                                                                  *
1262 *---- UPDATE CUSTOMER FILE                                         *---- UPDATE CUSTOMER FILE
1263 30000*                                                             30000*
1264                                                                 >  *T19656 v
1265 IF CO.JIS = "Y" THEN                                               IF CO.JIS = "Y" THEN
1266 CALL JKT_NOTIFY_SUB ("1",CONO,"CUSTOMER",CUST.KEY,"",CUST.REC.     CALL JKT_NOTIFY_SUB ("1",CONO,"CUSTOMER",CUST.KEY,"",CUST.RE
1267 END                                                                END
1268                                                                 >  *T19556 ^

1280 RETURN                                                             RETURN
1281 *                                                                  *
1282 *---- CALLS FOR SYSCOM                                             *---- CALLS FOR SYSCOM
1283 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
1284 * 91000*                                                           * 91000*
1285                                                                 >  * PRINT @(0,23) : ERRMSG : CL :
1286                                                                 >  * INPUT REPLY,1 :
1287                                                                 >  * PRINT @(0,23) : CL :
1288                                                                 >  * RETURN
1289 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                       93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)

1290                                                                 >  * 93000*
1291                                                                 >  * ERRMSG = "Cannot locate the ":ERRMSG:" file"
1292                                                                 >  * ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
1293 99999*                                                             99999*
1294 END                                                                END
1295 


PMCBP/CUST.PURGED.INV.INQ                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/CUST.PURGED.INV.INQ
Printed for thompson at 06/28/2006 04:57:24PM

0001 SUBROUTINE CUST.PURGED.INV.INQ(CONO,BEG.PURGE.DATE,END.PURGE.D     SUBROUTINE CUST.PURGED.INV.INQ(CONO,BEG.PURGE.DATE,END.PURGE
0002 **************************************************************     ************************************************************
0003 * REVISION    - [11.0]                                             * REVISION    - [11.0]
0004 * Copyright 1999 by Computer Business Associates (Vercom Softw     * Copyright 1999 by Computer Business Associates (Vercom Sof
0005 * SYSTEM        - PRIMAC                                           * SYSTEM        - PRIMAC
0006 * SOURCE        - R12BP                                         |  * SOURCE        - CBNBP
0007 * PROGRAM       - CUST.PURGED.INV.INQ                              * PROGRAM       - CUST.PURGED.INV.INQ
0008 * BY            - FROM CUST.INV.INQ CREATED BY JIHAD YAMOUT, C     * BY            - FROM CUST.INV.INQ CREATED BY JIHAD YAMOUT,
0009 * DATE          - 07/20/99                                         * DATE          - 07/20/99
0010 * DESCRIPTION   - THIS SUBROUTINE DISPLAYS ALL PURGED INVOICES     * DESCRIPTION   - THIS SUBROUTINE DISPLAYS ALL PURGED INVOIC

0011 *                 CUSTOMER. (SEE T25763)                        |  *                 CUSTOMER.
0012 *                                                                  *
0013 * LAST COMPILE - 355                                               * LAST COMPILE - 355
0014 *C34331 edvard 09/21/1999 * Fixed the display of the descripti     *C34331 edvard 09/21/1999 * Fixed the display of the descrip
0015 *                           problem.                            |  *                           problem. NE
0016                                                                 >  *T25432 lanny 10/10/2000 * New program for the purged invoic
0017 *ENDDOC                                                            *ENDDOC

0021 *                                                                  *
0022 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0023 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0024 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0025 *COPY>ARS.CPYLIB>OPEN.RECV                                         *COPY>ARS.CPYLIB>OPEN.RECV
0026 *COPY>ARS.CPYLIB>PURGED.OPEN.RECV                               |  *COPY>CBN.CPYLIB>PURGED.OPEN.RECV
0027 *COPY>JCS.CPYLIB>INVOICE                                           *COPY>JCS.CPYLIB>INVOICE 
0028 *COPY>ARS.CPYLIB>MANUAL.INVOICE                                    *COPY>ARS.CPYLIB>MANUAL.INVOICE
0029 *COPY>PMC.CPYLIB>CUSTOMER                                          *COPY>PMC.CPYLIB>CUSTOMER
0030 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER


PMCBP/LIST.ACCESS.BY.USER                                          /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/LIST.ACCESS.BY.USER
Printed for thompson at 06/28/2006 04:57:24PM

0001 SUBROUTINE LIST.ACCESS.BY.USER(CONO,MAT SEC.REC,USERID,ACCESS_  |  SUBROUTINE LIST.ACCESS.BY.USER(CONO,MAT SEC.REC,USERID,ACCES
0002 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0003 **************************************************************     ************************************************************
0004 * REVISION     - [12.0]                                         |  * REVISION     - [11.0]
0005 * Copyright 1998 by Computer Business Associates (Vercom Softw     * Copyright 1998 by Computer Business Associates (Vercom Sof
0006 * SYSTEM       - PRIMAC                                            * SYSTEM       - PRIMAC
0007 * SOURCE       - PMCBP                                             * SOURCE       - PMCBP

0008 * PROGRAM      - LIST.ACCESS.BY.USER                               * PROGRAM      - LIST.ACCESS.BY.USER
0009 * BY           - ALEJANDRO DELGAD                                  * BY           - ALEJANDRO DELGAD
0010 * DATE         - 08/07/2002                                     |  * DATE         - 09/17/2002
0011 * DESCRIPTION  -                                                   * DESCRIPTION  - 
0012 *                This program lists all menus the user has acc     *                This program lists all menus the user has a
0013 *                                                                  *
0014 *T26784 adelgado 08/07/2002 * Original Code.                    |  *T26853 adelgado 09/17/2002 * Original Code.
0015                                                                 >  *T27248 adelgado 01/31/2003 * Modify to allow to list the pr
0016                                                                 >  *C41753 adelgado 04/01/2003 * Show all access menu is SEC.ME

0016                                                                 >  *C41753 adelgado 04/01/2003 * Show all access menu is SEC.ME
0017 **************************************************************     ************************************************************
0018 *                                                                  *
0019 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0020 *COPY>PMC.CPYLIB>SECURITY                                          *COPY>PMC.CPYLIB>SECURITY
0021                                                                 >  *COPY>PMC.CPYLIB>PMC_PROCESS             ;* T27248
0022                                                                 >  *COPY>PMC.CPYLIB>PMC_PROCESS_XREF        ;* T27248
0023 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0024 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0025 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS

0027 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0028 MAT SYSCOM.REC =  ""; SYS.TYPE = 2                                 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
0029 *                                                                  *
0030 * INITIALIZE *                                                     * INITIALIZE *
0031 *                                                                  *
0032                                                                 >  MATREAD COMP.REC FROM COMPANY ,CONO ELSE MAT COMP.REC = ''
0033 DIM MENU.REC(40)                                                   DIM MENU.REC(40)
0034 ERRMSG = ""                                                        ERRMSG = ""
0035 LINE.SPACE = 1                                                     LINE.SPACE = 1
0036 PAGE.SIZE = 12                                                     PAGE.SIZE = 12

0035 LINE.SPACE = 1                                                     LINE.SPACE = 1
0036 PAGE.SIZE = 12                                                     PAGE.SIZE = 12
0037 BEGIN.PAGE = 8                                                     BEGIN.PAGE = 8
0038 REQUEST = ''                                                       REQUEST = ''
0039 LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0                  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
0040 ECD.SCRN.NO = 6                                                 |  LINE.CNT = 0
0041                                                                 >  *  ECD.SCRN.NO = 6     ;* T27248
0042                                                                 >  PMC.FLAGS = ''      ;* T27248
0043 SCV.REC(8)<ECD.SCRN.NO> = CONO                                     SCV.REC(8)<ECD.SCRN.NO> = CONO
0044 SCV.REC(9)<ECD.SCRN.NO> = USERID                                   SCV.REC(9)<ECD.SCRN.NO> = USERID

0044 SCV.REC(9)<ECD.SCRN.NO> = USERID                                   SCV.REC(9)<ECD.SCRN.NO> = USERID
0045 SCV.REC(10)<ECD.SCRN.NO> = SEC.NAME                                SCV.REC(10)<ECD.SCRN.NO> = SEC.NAME
0046 READ ACCESS.REC FROM ACCESS_BY_USER, CONO:USERID ELSE ACCESS.R     READ ACCESS.REC FROM ACCESS_BY_USER, CONO:USERID ELSE ACCESS
0047 LINES = DCOUNT(ACCESS.REC<1>, VM)                                  LINES = DCOUNT(ACCESS.REC<1>, VM)
0048 FOR XX = 1 TO LINES                                                FOR XX = 1 TO LINES
0049 SCV.REC(2)<ECD.SCRN.NO,XX> = XX                                 |  * C41753 v
0050 SCV.REC(11)<ECD.SCRN.NO,XX> = ACCESS.REC<1,XX>                  |  BEGIN CASE
0051 MATREAD MENU.REC FROM EASY.MENUS, ACCESS.REC<1,XX> ELSE MAT ME  |  CASE SEC.MENU.LEVEL GT 2
0052 SCV.REC(12)<ECD.SCRN.NO,XX> = MENU.REC(1)<1,3>                  |  CASE SEC.MENU.FLAG = 'A'
0053                                                                 >  IF ACCESS.REC<2,XX> # 'A' THEN GO 100

0054                                                                 >  CASE SEC.MENU.FLAG = 'P'
0055                                                                 >  IF ACCESS.REC<2,XX> = 'P' THEN GO 100
0056                                                                 >  END CASE
0057                                                                 >  *   IF ACCESS.REC<2,XX> # SEC.MENU.FLAG THEN GOTO 100
0058                                                                 >  * C41753 ^
0059                                                                 >  LINE.CNT = LINE.CNT + 1
0060                                                                 >  SCV.REC(2)<ECD.SCRN.NO,LINE.CNT> = LINE.CNT

0061                                                                 >  * T27248 v
0062                                                                 >  DESC = '' ; GET.OUT = 0
0063                                                                 >  MATREAD MENU.REC FROM EASY.MENUS, ACCESS.REC<1,XX> THEN
0064                                                                 >  DESC = MENU.REC(1)<1,3>
0065                                                                 >  END ELSE
0066                                                                 >  FOR PP = 2 TO 33 UNTIL (GET.OUT)
0067                                                                 >  IF ACCESS.REC<1,XX> = MENU.REC(PP)<1,1> THEN

0068                                                                 >  DESC = MENU.REC(PP)<1,3> ; GET.OUT = 1
0069                                                                 >  END
0070                                                                 >  NEXT PP
0071                                                                 >  PMC.FLAGS<1,LINE.CNT> = 1
0072                                                                 >  END
0073                                                                 >  IF PMC.FLAGS<1,LINE.CNT> = 1 THEN
0074                                                                 >  SCV.REC(11)<ECD.SCRN.NO,LINE.CNT> = SPACE(5):ACCESS.REC<1,XX

0075                                                                 >  END ELSE
0076                                                                 >  SCV.REC(11)<ECD.SCRN.NO,LINE.CNT> = ACCESS.REC<1,XX>
0077                                                                 >  END
0078                                                                 >  SCV.REC(12)<ECD.SCRN.NO,LINE.CNT> = DESC
0079                                                                 >  * T27248 ^
0080                                                                 >  100 *
0081 NEXT XX                                                            NEXT XX

0082 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0083 *                                                                  *
0084                                                                 >  LINES = DCOUNT(SCV.REC(2)<ECD.SCRN.NO>, VM)     ;* C41753
0085 LOOP.DONE = 0 ; START = 1                                          LOOP.DONE = 0 ; START = 1
0086 LOOP                                                               LOOP
0087 ECD.NUM = 5; ECD.ACTION=4; CALL SCRN.EDIT                          ECD.NUM = 5; ECD.ACTION=4; CALL SCRN.EDIT
0088 BEGIN CASE                                                         BEGIN CASE
0089 CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'                  CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
0090 LOOP.DONE = 1                                                      LOOP.DONE = 1

0091                                                                 >  CASE ECD.RET.VALUE = 'P'
0092                                                                 >  PRINTER ON
0093                                                                 >  GOSUB PRINT.RPT
0094                                                                 >  PRINTER OFF
0095                                                                 >  PRINTER CLOSE
0096 CASE ECD.RET.VALUE = "S"                                           CASE ECD.RET.VALUE = "S"
0097 START += PAGE.SIZE                                                 START += PAGE.SIZE

0115 *                                                                  *
0116 START = 1 + INT((START-1)/PAGE.SIZE) * PAGE.SIZE                   START = 1 + INT((START-1)/PAGE.SIZE) * PAGE.SIZE
0117 ECD.NUM=2 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.EDIT      ECD.NUM=2 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.EDI
0118 ECD.NUM=11 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.EDIT     ECD.NUM=11 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.ED
0119 ECD.NUM=12 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.EDIT     ECD.NUM=12 ; ECD.SUB.NUM=START ; ECD.ACTION=7 ; CALL SCRN.E
D
0120                                                                 >  RETURN
0121                                                                 >  *
0122                                                                 >  PRINT.RPT: 
0123                                                                 >  *
0124                                                                 >  HD1 = "" ; HD2 = ""

0125                                                                 >  REPORT.NAME = "USER SECURITY ACCESS MENUS"
0126                                                                 >  REPORT.NUMBER = "XXXX"
0127                                                                 >  REPORT.DATE = DATE()
0128                                                                 >  CALL GET.PROG.HEAD(CONO,CO.NAME,REPORT.NAME,REPORT.NUMBER,RE
0129                                                                 >  PAGE.NO = 0
0130                                                                 >  HD3 = 'User ID : ':USERID'L#10':SEC.NAME'L#30'
0131                                                                 >  GOSUB PRINT.HEADING

0132                                                                 >  PLINES = DCOUNT(SCV.REC(11)<ECD.SCRN.NO>,VM)
0133                                                                 >  FOR XX = 1 TO PLINES
0134                                                                 >  IF LINE.NO GT 54 THEN GOSUB PRINT.HEADING
0135                                                                 >  * T27248 v
0136                                                                 >  *   PRINT SCV.REC(11)<ECD.SCRN.NO,XX>'L#25':SPACE(5):SCV.REC
0137                                                                 >  IF PMC.FLAGS<1,XX> = '' THEN
0138                                                                 >  PRINT SCV.REC(11)<ECD.SCRN.NO,XX>'L#25':SPACE(10):SCV.REC(12

0139                                                                 >  END ELSE
0140                                                                 >  PRINT SPACE(5):SCV.REC(11)<ECD.SCRN.NO,XX>'L#25':SPACE(5):SC
0141                                                                 >  END
0142                                                                 >  * T27248 ^
0143                                                                 >  LINE.NO += 1
0144                                                                 >  NEXT XX
0145                                                                 >  *

0146                                                                 >  RETURN
0147                                                                 >  *
0148                                                                 >  PRINT.HEADING: 
0149                                                                 >  *
0150                                                                 >  PAGE.NO += 1
0151                                                                 >  PRINT CHAR(12)
0152                                                                 >  PRINT HD1:PAGE.NO

0153                                                                 >  PRINT HD2
0154                                                                 >  PRINT HD3
0155                                                                 >  PRINT
0156                                                                 >  * T27248 v
0157                                                                 >  * PRINT 'Menu IDs''L#30':'Menu Headings'
0158                                                                 >  * PRINT STR('-',25):SPACE(5):STR('-',30)
0159                                                                 >  PRINT 'Menu IDs''L#35':'Menu Headings'

0160                                                                 >  PRINT STR('-',30):SPACE(5):STR('-',30)
0161                                                                 >  * T27248 ^
0162                                                                 >  LINE.NO = 6
0163 RETURN                                                             RETURN
0164 *                                                                  *
0165 91000*                                                             91000*
0166 ERR.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN                ERR.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN


PMCBP/PURGED.INV.INQ.DET                                           /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/PURGED.INV.INQ.DET
Printed for thompson at 06/28/2006 04:57:24PM

0005 * SYSTEM       - PRIMAC                                            * SYSTEM       - PRIMAC
0006 * SOURCE       - ARSBP                                             * SOURCE       - ARSBP
0007 * PROGRAM      - OPEN.RECV.MAINT                                   * PROGRAM      - OPEN.RECV.MAINT
0008 * BY           - JIHAD YAMOUT ,C.B.A                               * BY           - JIHAD YAMOUT ,C.B.A
0009 * DATE         - 09/26/84                                          * DATE         - 09/26/84
0010 * DESCRIPTION  - (SEE T25763)                                   |  * DESCRIPTION  -
0011 *                                                                  *
0012 * LAST COMPILE - 574                                               * LAST COMPILE - 574
0013 *                                                                  *
0014 *T22154 renee 08/18/1997 * Transferring changes made to this p     *T22154 renee 08/18/1997 * Transferring changes made to this

0015 *                          Rev10b to Rev11.                        *                          Rev10b to Rev11.
0016 *T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB  |  *T25432 lanny 10/10/2000 * New program for the purged invoic
0017 *ENDDOC                                                            *ENDDOC
0018 *MOD- TASK #13999 MANUAL INVOICE AND INVOICE SHOULD BE UPDATED     *MOD- TASK #13999 MANUAL INVOICE AND INVOICE SHOULD BE UPDAT
0019 *     NEW DATE AND NEW PO#                                         *     NEW DATE AND NEW PO#
0020 *MOD- CSF 24649 - ADD LOGIC FOR ORDER.INVOICE - LMR 12/27/95       *MOD- CSF 24649 - ADD LOGIC FOR ORDER.INVOICE - LMR 12/27/95
0021 **************************************************************     ************************************************************
0022 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1

0023 *COPY>PMC.CPYLIB>COM.CUST                                          *COPY>PMC.CPYLIB>COM.CUST
0024 *COPY>CPYLIB>EDIT.COM                                              *COPY>CPYLIB>EDIT.COM
0025 *COPY>ARS.CPYLIB>PURGED.OPEN.RECV                               |  *COPY>CBN.CPYLIB>PURGED.OPEN.RECV
0026 *COPY>CPYLIB>EDIT.COM.DRIVER                                       *COPY>CPYLIB>EDIT.COM.DRIVER
0027 *COPY>CPYLIB>SYSCOM                                                *COPY>CPYLIB>SYSCOM
0028 *COPY>CPYLIB>FILE.VARS                                             *COPY>CPYLIB>FILE.VARS
0029 *COPY>CPYLIB>CHAR                                                  *COPY>CPYLIB>CHAR
0030 OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG = "     OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG =
0031 MATREAD POR.REC FROM PURGED.OPEN.RECV,POR.IDENT ELSE MAT POR.R     MATREAD POR.REC FROM PURGED.OPEN.RECV,POR.IDENT ELSE MAT POR

0052 MORE = 0                                                           MORE = 0
0053 CASE OPTION = "S"                                                  CASE OPTION = "S"
0054 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0055 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0056 GOSUB 11000                                                        GOSUB 11000
0057 * T25978 v                                                      <  
0058 CASE OPTION = 'SR'                                              <  
0059 LN -= PAGE.SIZE                                                 <  
0060 IF LN < 1 THEN LN = 1                                           <  
0061 GOSUB 11000                                                     <  

0062 CASE OPTION = 'ST'                                              <  
0063 LN = 1                                                          <  
0064 GOSUB 11000                                                     <  
0065 CASE OPTION = 'SB'                                              <  
0066 LN = LINES                                                      <  
0067 GOSUB 11000                                                     <  
0068 * T25978 ^                                                      <  


PMCBP/QUEUE.MAINT                                                  /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/QUEUE.MAINT
Printed for thompson at 06/28/2006 04:57:24PM

0008 * BY           - DUANE GREEN, COMPUTER BUSINESS ASSOCIATES         * BY           - DUANE GREEN, COMPUTER BUSINESS ASSOCIATES
0009 * DATE         - 10/24/95                                          * DATE         - 10/24/95
0010 * DESCRIPTION  -                                                   * DESCRIPTION  - 
0011 *                This program is used to manage the unix queue     *                This program is used to manage the unix que
0012 *                from withing the PRIMAC application.              *                from withing the PRIMAC application.
0013 *T25448 gat 12/07/2000 * FIX PROBLEM WITH FORM SCAPE            <  
0014 *T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB  <  
0015 *T28080 thompson 04/21/2004 * Fix numbering on scroll           <  
0016 *ENDDOC                                                            *ENDDOC
0017 **************************************************************     ************************************************************

0083 *******************                                                *******************
0084 100 *                                                              100 *
0085 *                                                                  *
0086 110 *                                                              110 *
0087 EXECUTE 'GET.QUEUES' CAPTURING MSG                                 EXECUTE 'GET.QUEUES' CAPTURING MSG
0088 MQ = DCOUNT(MSG,AM)                                             |  FOR X = 1 TO DCOUNT(MSG,AM)
0089 *FOR X=3 TO X+1  UNTIL MSG<X>[15,1]=""                          |  IF MSG<X>[1,1]=' ' THEN GO 115
0090 FOR X = 3 TO MQ                                                 |  QUEUE<QCNT>=FIELD(MSG<X>,' ',1)
0091 IF MSG<X>[15,1] = "" THEN GO 115                                <  
0092 IF MSG<X>[15,1] = "-" THEN GO 115                               <  

0093 IF MSG<X>[1,1] = ' ' THEN GO 115                                <  
0094 NETQ=INDEX(MSG<X>,':',1)                                        <  
0095 IF NETQ THEN GO 115                                             <  
0096 QUEUE<QCNT> = MSG<X>[1,23]                                      <  
0097 QCNT=QCNT+1                                                        QCNT=QCNT+1
0098 IF MSG<X>[1,1] # " " THEN                                       |  PQUEUE<PQCNT>=FIELD(MSG<X>,' ',1)
0099 PQUEUE<PQCNT> = MSG<X>[1,23]                                    |  CHKQUE<PQCNT>=PQUEUE<PQCNT>

0100 CHKQUE<PQCNT> = FIELD(PQUEUE<PQCNT>," ",1)                      |  PQCNT=PQCNT+1
0101 PQCNT = PQCNT + 1                                               <  
0102 END                                                             <  
0103 115 *                                                              115 *
0104 NEXT X                                                             NEXT X
0105 LINES = DCOUNT(QUEUE,AM)                                           LINES = DCOUNT(QUEUE,AM)
0106 LN = 1                                                             LN = 1

0110 200 *                                                              200 *
0111 ECD.NUM = 10                                                       ECD.NUM = 10
0112 ECD.ACTION=4;CALL SCRN.EDIT                                        ECD.ACTION=4;CALL SCRN.EDIT
0113 BEGIN CASE                                                         BEGIN CASE
0114 CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'                  CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
0115 GOTO 99990                                                      |  GOTO 99999
0116 CASE ECD.RET.VALUE = "S"                                           CASE ECD.RET.VALUE = "S"
0117 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0118 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0119 GOSUB 11000                                                        GOSUB 11000

0120 N = N - 1                                                          N = N - 1
0121 GOTO 200                                                           GOTO 200
0122 * T25978 v                                                      <  
0123 CASE ECD.RET.VALUE = 'SR'                                       <  
0124 LN -= PAGE.SIZE                                                 <  
0125 IF LN < 1 THEN LN = 1                                           <  
0126 GOSUB 11000                                                     <  
0127 N = N - 1                                                       <  
0128 GOTO 200                                                        <  

0129 CASE ECD.RET.VALUE = 'ST'                                       <  
0130 LN = 1                                                          <  
0131 GOSUB 11000                                                     <  
0132 N = N - 1                                                       <  
0133 GOTO 200                                                        <  
0134 CASE ECD.RET.VALUE = 'SB'                                       <  
0135 LN = LINES                                                      <  

0136 GOSUB 11000                                                     <  
0137 N = N - 1                                                       <  
0138 GOTO 200                                                        <  
0139 * T25978 ^                                                      <  
0140 CASE ECD.RET.VALUE = ""                                            CASE ECD.RET.VALUE = ""
0141 GOTO 200                                                           GOTO 200
0142 CASE NOT(NUM(ECD.RET.VALUE))                                       CASE NOT(NUM(ECD.RET.VALUE))

0167 SEC.DFLT.QUEUE = FIELD(SCV.REC(3)<ECD.SCRN.NO>,' ',1)              SEC.DFLT.QUEUE = FIELD(SCV.REC(3)<ECD.SCRN.NO>,' ',1)
0168 MATWRITE SEC.REC ON SECURITY,SEC.ID                                MATWRITE SEC.REC ON SECURITY,SEC.ID
0169 GOTO 300                                                           GOTO 300
0170 CASE ECD.RET.VALUE = 'D'                                           CASE ECD.RET.VALUE = 'D'
0171 CMD = '!disable ':SCV.REC(3)<ECD.SCRN.NO>                          CMD = '!disable ':SCV.REC(3)<ECD.SCRN.NO>
0172 HUSH ON                                                         <  
0173 UDTEXECUTE CMD CAPTURING RET.VALUE                                 UDTEXECUTE CMD CAPTURING RET.VALUE
0174 HUSH OFF                                                        <  
0175 RSW = 1 ; GOSUB 1 ; GOTO 300                                       RSW = 1 ; GOSUB 1 ; GOTO 300
0176 CASE ECD.RET.VALUE = 'E'                                           CASE ECD.RET.VALUE = 'E'

0177 CMD = '!enable ':SCV.REC(3)<ECD.SCRN.NO>                           CMD = '!enable ':SCV.REC(3)<ECD.SCRN.NO>
0178 HUSH ON                                                         <  
0179 UDTEXECUTE CMD CAPTURING RET.VALUE                                 UDTEXECUTE CMD CAPTURING RET.VALUE
0180 HUSH OFF                                                        <  
0181 RSW = 1 ; GOSUB 1 ; GOTO 300                                       RSW = 1 ; GOSUB 1 ; GOTO 300
0182 CASE ECD.RET.VALUE = 'J'                                           CASE ECD.RET.VALUE = 'J'
0183 *CSF 25514 v                                                       *CSF 25514 v
0184 *         GO 12000                                                 *         GO 12000

0202 CNT = 1                                                            CNT = 1
0203 IF START.LINE = 1 THEN LCT = START.LINE                            IF START.LINE = 1 THEN LCT = START.LINE
0204 FOR N = START.LINE TO LAST.LINE UNTIL N > LINES                    FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
0205 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0206 IF QUEUE<N>[1,1] # " " THEN                                        IF QUEUE<N>[1,1] # " " THEN
0207 *T28080      P_X  = 15 ; P_Y = SLN ; P_VALUE = LCT "R#3" ; P_O  |  P_X  = 15 ; P_Y = SLN ; P_VALUE = LCT "R#3" ; P_OPT = ""
0208 P_X  = 15 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""          <  
0209 P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N>              P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N>
0210 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0211 LCT = LCT + 1                                                      LCT = LCT + 1

0212 END ELSE                                                           END ELSE
0213 *         P_X  = 15 ; P_Y = SLN ; P_VALUE = SPACE(6):QUEUE<N>   <  
0214 P_X  = 15 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"                P_X  = 15 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
0215 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0216 END                                                                END
0217 CNT = CNT + 1                                                      CNT = CNT + 1
0218 NEXT N                                                             NEXT N
0219 FOR M = CNT TO PAGE.SIZE                                           FOR M = CNT TO PAGE.SIZE

0248 *                                                                  *
0249 12010                                                              12010 
0250 ***********                                                        ***********
0251 *  CMD = 'GET.QUEUES'                                              *  CMD = 'GET.QUEUES'
0252 CMD = "!qchk -P'":CURR.QUEUE:"' -u'":@LOGNAME:"'"                  CMD = "!qchk -P'":CURR.QUEUE:"' -u'":@LOGNAME:"'"
0253 HUSH ON                                                         <  
0254 UDTEXECUTE CMD CAPTURING RET.DATA                                  UDTEXECUTE CMD CAPTURING RET.DATA
0255 HUSH OFF                                                        <  
0256 DG = DCOUNT(RET.DATA,AM)                                           DG = DCOUNT(RET.DATA,AM)
0257 JOB.LIST = '' ; OWN.LIST = '' ; FILE.LIST = ''                     JOB.LIST = '' ; OWN.LIST = '' ; FILE.LIST = ''

0297 LAST.LINE = START.LINE + PAGE.SIZE - 1                             LAST.LINE = START.LINE + PAGE.SIZE - 1
0298 CNT = 1                                                            CNT = 1
0299 IF START.LINE = 1 THEN LCT = START.LINE                            IF START.LINE = 1 THEN LCT = START.LINE
0300 FOR N = START.LINE TO LAST.LINE UNTIL N > LINES                    FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
0301 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0302 *T28080    P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT =  |  P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
0303 P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""            <  
0304 P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R#3     P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R
0305 P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>'L     P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>
0306 P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'L#     P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'

0340 LN = LN + PAGE.SIZE                                                LN = LN + PAGE.SIZE
0341 IF LN > LINES THEN LN = 1                                          IF LN > LINES THEN LN = 1
0342 GOSUB 13000                                                        GOSUB 13000
0343 N = N - 1                                                          N = N - 1
0344 GOTO 12100                                                         GOTO 12100
0345 * T25978 v                                                      <  
0346 CASE ECD.RET.VALUE = 'SR'                                       <  
0347 LN -= PAGE.SIZE                                                 <  
0348 IF LN < 1 THEN LN = 1                                           <  
0349 GOSUB 13000                                                     <  

0350 N = N - 1                                                       <  
0351 GOTO 12100                                                      <  
0352 CASE ECD.RET.VALUE = 'ST'                                       <  
0353 LN = 1                                                          <  
0354 GOSUB 13000                                                     <  
0355 N = N - 1                                                       <  
0356 GOTO 12100                                                      <  

0357 CASE ECD.RET.VALUE = 'SB'                                       <  
0358 LN = LINES                                                      <  
0359 GOSUB 13000                                                     <  
0360 N = N - 1                                                       <  
0361 GOTO 12100                                                      <  
0362 * T25978 ^                                                      <  
0363 CASE 1                                                             CASE 1

0373 CNT = 1                                                            CNT = 1
0374 IF START.LINE = 1 THEN LCT = START.LINE                            IF START.LINE = 1 THEN LCT = START.LINE
0375 FOR N = START.LINE TO LAST.LINE UNTIL N > LINES                    FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
0376 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)                 SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
0377 IF SEC.MENUS.LIST<1,N> # " " THEN                                  IF SEC.MENUS.LIST<1,N> # " " THEN
0378 *T28080      P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT  |  P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
0379 P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""            <  
0380 P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R#3     P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R
0381 P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>'L     P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>
0382 P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'L#     P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'

0423 ERRMSG = 'Cannot Cancel, Not Your Job'                             ERRMSG = 'Cannot Cancel, Not Your Job'
0424 GOSUB 91000                                                        GOSUB 91000
0425 RETURN                                                             RETURN
0426 END                                                                END
0427 CMD = '!cancel ':JOBNO                                             CMD = '!cancel ':JOBNO
0428 HUSH ON                                                         <  
0429 UDTEXECUTE CMD CAPTURING JUNK                                      UDTEXECUTE CMD CAPTURING JUNK
0430 HUSH OFF                                                        <  
0431 DEL JOB.LIST<1,QID>; DEL FILE.LIST<1,QID>; DEL OWN.LIST<1,QID>     DEL JOB.LIST<1,QID>; DEL FILE.LIST<1,QID>; DEL OWN.LIST<1,QI
0432 RETURN                                                             RETURN

0438 GOSUB 91000                                                        GOSUB 91000
0439 RETURN                                                             RETURN
0440 END                                                                END
0441 GOSUB 18000                                                        GOSUB 18000
0442 CMD = '!cp ':QDIRNAME:' /tmp/':USR:DATE():TIME()                   CMD = '!cp ':QDIRNAME:' /tmp/':USR:DATE():TIME()
0443 HUSH ON                                                         <  
0444 UDTEXECUTE CMD CAPTURING JUNK                                      UDTEXECUTE CMD CAPTURING JUNK
0445 HUSH OFF                                                        <  
0446 ERRMSG = 'Your Hold File Is /tmp/':USR:DATE():TIME()               ERRMSG = 'Your Hold File Is /tmp/':USR:DATE():TIME()
0447 GOSUB 91000                                                        GOSUB 91000

0456 END                                                                END
0457 GOSUB 18000                                                        GOSUB 18000
0458 GOSUB 19000                                                        GOSUB 19000
0459 IF NEWQ = 'END' THEN GO 17000                                      IF NEWQ = 'END' THEN GO 17000
0460 CMD = '!cp ':QDIRNAME:' /tmp/':USR                                 CMD = '!cp ':QDIRNAME:' /tmp/':USR
0461 HUSH ON                                                         <  
0462 UDTEXECUTE CMD CAPTURING JUNK                                      UDTEXECUTE CMD CAPTURING JUNK
0463 CMD = '!lpr -P':NEWQ:' /tmp/':USR                                  CMD = '!lpr -P':NEWQ:' /tmp/':USR
0464 UDTEXECUTE CMD CAPTURING JUNK                                      UDTEXECUTE CMD CAPTURING JUNK
0465 HUSH OFF                                                        <  


PMCBP/SEC.MENU.MAINT                                               /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/SEC.MENU.MAINT
Printed for thompson at 06/28/2006 04:57:25PM

0001 *COPY>CPYLIB>COM1                                                  *COPY>CPYLIB>COM1
0002 **************************************************************     ************************************************************
0003 * REVISION    - [08.1]                                          |  * REVISION    - [11.0]
0004 * Copyright 1982 by Computer Business Associates (Vercom Softw     * Copyright 1982 by Computer Business Associates (Vercom Sof
0005 *                                                                  *
0006 * PROGRAM  - SEC.MENU.MAINT                                        * PROGRAM  - SEC.MENU.MAINT
0007 *                                                                  *
0008 * BY       - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES           * BY       - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
0009 *                                                                  *

0023 *T23304 renee 11/06/1998 * Prompt for "G"UI, "A"SCII or "B"oth     *T23304 renee 11/06/1998 * Prompt for "G"UI, "A"SCII or "B"o
0024 *                          type for each user.                     *                          type for each user.
0025 *T24231 edvard 09/17/1999 * Add email address.                     *T24231 edvard 09/17/1999 * Add email address.
0026 *T24820 aron 02/17/2000 * Remove TIME OUT field. Make sure tha     *T24820 aron 02/17/2000 * Remove TIME OUT field. Make sure t
0027 *                         screen is loaded with this program       *                         screen is loaded with this program
0028 *T26135 gat 09/19/2001 * DROP LOGON AND LOGOFF TIMES USED ORIG  |  *T26853 adelgado 09/17/2002 * Add an 'L'ist Option to list t
0029 *                        MICORDATA                              |  *                             which the user has access to.
0030 *T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB  |  *T27248 adelgado 01/31/2003 * Expand the arguments passed in
0031 *T26126 adelgado 02/26/2002 * Implement the LOCKED clause for   |  *                             BUILD.ACCESS.BY.USER
0032 *T26556 cmykleb 07/15/2002 * Rev12 change.                      <  

0033 *T26784 adelgado 08/06/2002 * Add a new call subroutine to upd  <  
0034 *                             file 'ACCESS_BY_USER'.            <  
0035 *T28657 thompson 08/29/2005 * Fix duplicate to add screen type  <  
0036 **************************************************************     ************************************************************
0037 *                                                                  *
0038 *COPY>PMC.CPYLIB>COMPANY                                           *COPY>PMC.CPYLIB>COMPANY
0039 *COPY>PMC.CPYLIB>SECURITY                                          *COPY>PMC.CPYLIB>SECURITY

0086 OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE                OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE
0087 PROCESS.ONFILE = 0                                                 PROCESS.ONFILE = 0
0088 ERRMSG = "CANNOT OPEN PMC_PROCESS_XREF FILE"                       ERRMSG = "CANNOT OPEN PMC_PROCESS_XREF FILE"
0089 GOTO 93000                                                         GOTO 93000
0090 END                                                                END
0091 * T26784 v                                                      |  * T26853 v
0092 OPEN "","ACCESS_BY_USER" TO ACCESS_BY_USER ELSE                    OPEN "","ACCESS_BY_USER" TO ACCESS_BY_USER ELSE
0093 ERRMSG = "CANNOT OPEN ACCESS_BY_USER FILE"                         ERRMSG = "CANNOT OPEN ACCESS_BY_USER FILE"
0094 GOTO 93000                                                         GOTO 93000
0095 END                                                                END

0096 * T26784 ^                                                      |  OPEN "","CBN.SCREENS" TO SECOND.SCREENS ELSE
0097                                                                 >  ERRMSG = "CANNOT OPEN CBN.SCREENS FILE"
0098                                                                 >  GOTO 93000
0099                                                                 >  END
0100                                                                 >  * T26853 ^
0101 *                                                                  *
0102 *---- INITIALIZATION                                               *---- INITIALIZATION

0114 END ELSE                                                           END ELSE
0115 MULTI.CO = 1                                                       MULTI.CO = 1
0116 END                                                                END
0117 SCREEN.TYPE = ""    ; * T23304                                     SCREEN.TYPE = ""    ; * T23304
0118 MAT EDIT.COM.DRIVER = ""                                           MAT EDIT.COM.DRIVER = ""
0119 ECD.SCRN.CNT = 6   ;* T26784                                    |  ECD.SCRN.CNT = 6      ;* T26853
0120 ECD.SCRN.NAME<1> = "SEC.MENU.MAINT"                                ECD.SCRN.NAME<1> = "SEC.MENU.MAINT"
0121                                                                 >  ECD.SCRN.FLAG<1> = 2                          ;* T26853
0122 ECD.SCRN.NAME<2> = 'PRINT.QUEUE.ASSIGN'                            ECD.SCRN.NAME<2> = 'PRINT.QUEUE.ASSIGN'
0123 ECD.SCRN.NAME<3> = 'PRINT.QUEUE.ASSIGN.FORMS'                      ECD.SCRN.NAME<3> = 'PRINT.QUEUE.ASSIGN.FORMS'

0124 ECD.SCRN.NAME<4> = 'SEC.PASSWORD'                                  ECD.SCRN.NAME<4> = 'SEC.PASSWORD'
0125 ECD.SCRN.NAME<5> = 'DIVISION.ASSIGN';* T23278                      ECD.SCRN.NAME<5> = 'DIVISION.ASSIGN';* T23278
0126 ECD.SCRN.NAME<6> = 'LIST.ACCESS.BY.USER'      ;* T26784         |  ECD.SCRN.NAME<6> = 'LIST.ACCESS.BY.USER'      ;* T26853
0127                                                                 >  ECD.SCRN.FLAG<6> = 2                          ;* T26853
0128 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0129 10*                                                                10*
0130 ECD.ACTION = 1; CALL SCRN.EDIT ; * Need when entering 1 user a     ECD.ACTION = 1; CALL SCRN.EDIT ; * Need when entering 1 user
0131 GOSUB 2100                                                         GOSUB 2100
0132                                                                 >  *PRINT @(0,23):'ECD.RET.VALUE = (':ECD.RET.VALUE:')': ; INPU

0159 *                                                                  *
0160 100*                                                               100*
0161 RELEASE                                                            RELEASE
0162 MAT SEC.REC = ""                                                   MAT SEC.REC = ""
0163 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0164 SCREEN.TYPE = "" ; * T27654                                     <  
0165 *24231 v                                                           *24231 v
0166 *ACTION = 1 causes "Cannot create toolbar message to appear. W     *ACTION = 1 causes "Cannot create toolbar message to appear.
0167 *this here obviously did not test it.                              *this here obviously did not test it.                       
0168 *  ECD.ACTION = 1; CALL SCRN.EDIT ; * Need when entering 1 use     *  ECD.ACTION = 1; CALL SCRN.EDIT ; * Need when entering 1 u

0180 ***** T23278 v                                                     ***** T23278 v
0181 REQ.NUM = 6                                                        REQ.NUM = 6
0182 READ JUNK FROM CONTROL, CONO:"DIV.SECURITY" THEN REQ.NUM = 27;     READ JUNK FROM CONTROL, CONO:"DIV.SECURITY" THEN REQ.NUM = 2
0183 ***** T23278 ^                                                     ***** T23278 ^
0184 SEC.KEY = CONO:USER.ID                                             SEC.KEY = CONO:USER.ID
0185 * T26126 v                                                      |  MATREADU SEC.REC FROM SECURITY, SEC.KEY THEN
0186 MATREADU SEC.REC FROM SECURITY, SEC.KEY LOCKED                  <  
0187 ERRMSG = 'SECURITY record is locked by user - ':GETUSERNAME(ST  <  
0188 GOSUB 90000;GOTO 100                                            <  
0189 END THEN                                                        <  

0190 * T26126 ^                                                      <  
0191 S.PW = SEC.PASSWORD                                                S.PW = SEC.PASSWORD
0192 TEMP = SEC.PASSWORD; SEC.PASSWORD = ""                             TEMP = SEC.PASSWORD; SEC.PASSWORD = ""
0193 CALL ENCODE.SUB("D",USER.ID,TEMP,SEC.PASSWORD)                     CALL ENCODE.SUB("D",USER.ID,TEMP,SEC.PASSWORD)
0194 S.M.L = SEC.MENU.LEVEL                                             S.M.L = SEC.MENU.LEVEL
0195 IF SEC.MENU.LEVEL > 3 THEN SEC.MENU.LEVEL = 3                      IF SEC.MENU.LEVEL > 3 THEN SEC.MENU.LEVEL = 3
0196 GOSUB 9000                                                         GOSUB 9000

0213 *   FOR N = 1 TO 8                                                 *   FOR N = 1 TO 8
0214 *     ON N GOSUB 1020,1100,1800,1400,1500,1600,1150,1200           *     ON N GOSUB 1020,1100,1800,1400,1500,1600,1150,1200
0215 *T24820 v Removed 1600 from field prompts (Time Out)               *T24820 v Removed 1600 from field prompts (Time Out)
0216 *         FOR N = 1 TO 9                                           *         FOR N = 1 TO 9
0217 *             ON N GOSUB 1020,1100,1800,1400,1500,1600,1140,11     *             ON N GOSUB 1020,1100,1800,1400,1500,1600,1140,
0218 *T26135          FOR N = 1 TO 8                                 |  FOR N = 1 TO 8
0219 *T26135              ON N GOSUB 1020,1100,1800,1400,1500,1140,  |  ON N GOSUB 1020,1100,1800,1400,1500,1140,1150,1200
0220 *T26135*T24820 ^                                                |  *T24820 ^
0221 * T26135                                                        <  
0222 FOR N = 1 TO 6                                                  <  

0223 ON N GOSUB 1020,1100,1800,1140,1150,1200                        <  
0224 * T26135                                                        <  
0225 * T23304 ^                                                         * T23304 ^
0226 IF ECD.RET.VALUE = "END" THEN GOTO 100                             IF ECD.RET.VALUE = "END" THEN GOTO 100
0227 NEXT N                                                             NEXT N
0228 REF.CNT = 0                                                        REF.CNT = 0
0229 IF SEC.MENU.LEVEL < 3 THEN                                         IF SEC.MENU.LEVEL < 3 THEN

0268 MATREAD SEC.REC FROM SECURITY, DUP.CONO:DUP.USER.ID ELSE           MATREAD SEC.REC FROM SECURITY, DUP.CONO:DUP.USER.ID ELSE
0269 ERRMSG = "User not on file"                                        ERRMSG = "User not on file"
0270 GOSUB 90000                                                        GOSUB 90000
0271 GOTO 120                                                           GOTO 120
0272 END                                                                END
0273 *T27654 v                                                       <  
0274 *  READV SCREEN.TYPE FROM USER.MODE,USER.ID,1 ELSE SCREEN.TYPE  <  
0275 IF SCREEN.TYPE = "" THEN                                        <  
0276 READV SCREEN.TYPE FROM USER.MODE,DUP.USER.ID,1 ELSE SCREEN.TYP  <  
0277 END                                                             <  

0278 *T27654 ^                                                       <  
0279 S.PW = ""                                                          S.PW = ""
0280 TEMP = SEC.PASSWORD; SEC.PASSWORD = ""                             TEMP = SEC.PASSWORD; SEC.PASSWORD = ""
0281 CALL ENCODE.SUB("D",USER.ID,TEMP,SEC.PASSWORD)                     CALL ENCODE.SUB("D",USER.ID,TEMP,SEC.PASSWORD)
0282 S.M.L = SEC.MENU.LEVEL                                             S.M.L = SEC.MENU.LEVEL
0283 IF SEC.MENU.LEVEL > 3 THEN SEC.MENU.LEVEL = 3                      IF SEC.MENU.LEVEL > 3 THEN SEC.MENU.LEVEL = 3
0284 GOSUB 9000                                                         GOSUB 9000

0312 N = ACTION                                                         N = ACTION
0313 *           ON N GOSUB 1020,1100,1700,1800,1300,1400,1500,1600     *           ON N GOSUB 1020,1100,1700,1800,1300,1400,1500,16
0314 * T23304 v Add 1140 to the list of field prompts (SCREEN TYPE)     * T23304 v Add 1140 to the list of field prompts (SCREEN TYP
0315 *   ON N GOSUB 1020,1100,1800,1400,1500,1600,1150,1200             *   ON N GOSUB 1020,1100,1800,1400,1500,1600,1150,1200
0316 *         ON N GOSUB 1020,1100,1800,1400,1500,1600,1140,1150,1     *         ON N GOSUB 1020,1100,1800,1400,1500,1600,1140,1150
0317 *          ON N GOSUB 1020,1100,1800,1400,1500,1140,1150,1200;  |  ON N GOSUB 1020,1100,1800,1400,1500,1140,1150,1200; *T24820 
0318 ON N GOSUB 1020,1100,1800,1140,1150,1200; *T24820 ADDED * T261  <  
0319 * T23304 ^                                                         * T23304 ^
0320 *T24820 ^                                                          *T24820 ^
0321 CASE ACTION = "A"                                                  CASE ACTION = "A"

0336 END ELSE                                                           END ELSE
0337 REF.CNT = REF.NO                                                   REF.CNT = REF.NO
0338 END                                                                END
0339 NEXT REF.NO                                                        NEXT REF.NO
0340 REF.NO = REF.CNT                                                   REF.NO = REF.CNT
0341 * CURR.REF.NO = ""  ;* T25978                                   |  CURR.REF.NO = ""
0342 GOSUB 10000                                                        GOSUB 10000
0343 CASE ACTION = "C" AND REF.CNT > 0                                  CASE ACTION = "C" AND REF.CNT > 0
0344 ECD.NUM = 9                                                        ECD.NUM = 9
0345 SCV.REC(9)<ESN> = ""                                               SCV.REC(9)<ESN> = ""

0370 CURR.REF.NO = ""                                                   CURR.REF.NO = ""
0371 GOSUB 10000                                                        GOSUB 10000
0372 END                                                                END
0373 ***** T23278 v                                                     ***** T23278 v
0374 CASE ACTION = "DIV"                                                CASE ACTION = "DIV"
0375 IF JUNK<1> = "Y" OR JUNK<2> = "Y" THEN ; * T26556               <  
0376 ECD.SCRN.NO = 5                                                    ECD.SCRN.NO = 5
0377 ECD.ACTION = 2                                                     ECD.ACTION = 2
0378 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0379 CALL DIVISION.ASSIGN(CONO,MAT SEC.REC,USER.ID)                     CALL DIVISION.ASSIGN(CONO,MAT SEC.REC,USER.ID)

0381 ESN = 1                                                            ESN = 1
0382 ECD.ACTION = 2                                                     ECD.ACTION = 2
0383 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0384 GOSUB 9000                                                         GOSUB 9000
0385 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0386 *T26556 v                                                       <  
0387 END ELSE                                                        <  
0388 ERRMSG = "Divisional Security is set to (N)o, so this option i  <  
0389 GOSUB 90000                                                     <  
0390 END                                                             <  

0391 *T26556 ^                                                       <  
0392 ***** T23278 ^                                                     ***** T23278 ^
0393 CASE ACTION = "E" OR ACTION = "END"                                CASE ACTION = "E" OR ACTION = "END"
0394 GOTO 100                                                           GOTO 100
0395 CASE ACTION = "F"                                                  CASE ACTION = "F"
0396 *           SEC.PASSWORD = SCV.REC(2)<ESN>                         *           SEC.PASSWORD = SCV.REC(2)<ESN>
0397 SEC.MENU.LEVEL = SCV.REC(12)<ESN>                                  SEC.MENU.LEVEL = SCV.REC(12)<ESN>

0403 CALL ENCODE.SUB("E",USER.ID,TEMP,SEC.PASSWORD)                     CALL ENCODE.SUB("E",USER.ID,TEMP,SEC.PASSWORD)
0404 IF S.PW # SEC.PASSWORD THEN                                        IF S.PW # SEC.PASSWORD THEN
0405 SEC.ROLL.DATE = DATE()                                             SEC.ROLL.DATE = DATE()
0406 END                                                                END
0407 MATWRITE SEC.REC ON SECURITY, SEC.KEY                              MATWRITE SEC.REC ON SECURITY, SEC.KEY
0408 CALL BUILD.ACCESS.BY.USER(CONO, USER.ID, MAT SEC.REC, EASY.MEN  |  * T27248 v
0409                                                                 >  *     CALL BUILD.ACCESS.BY.USER(CONO, USER.ID, MAT SEC.REC, 
0410                                                                 >  CALL BUILD.ACCESS.BY.USER(CONO, USER.ID, MAT SEC.REC, EASY.M
0411                                                                 >  * T27248 ^
0412 WRITEV SCREEN.TYPE ON USER.MODE,USER.ID,1  ; * T23304 write re     WRITEV SCREEN.TYPE ON USER.MODE,USER.ID,1  ; * T23304 write 

0458 END                                                                END
0459 CASE ACTION = "S" AND REF.CNT > 0                                  CASE ACTION = "S" AND REF.CNT > 0
0460 REF.NO = CURR.REF.NO + LINE.COUNT                                  REF.NO = CURR.REF.NO + LINE.COUNT
0461 IF REF.NO > REF.CNT THEN REF.NO = 1                                IF REF.NO > REF.CNT THEN REF.NO = 1
0462 GOSUB 10000                                                        GOSUB 10000
0463 * T25978 v                                                      |  * T26853 v
0464 CASE ACTION = 'SR' AND REF.CNT > 0                              <  
0465 REF.NO = CURR.REF.NO - LINE.COUNT                               <  
0466 IF REF.NO < 1 THEN REF.NO = 1                                   <  
0467 GOSUB 10000                                                     <  

0468 CASE ACTION = 'ST' AND REF.CNT > 0                              <  
0469 REF.NO = 1                                                      <  
0470 GOSUB 10000                                                     <  
0471 CASE ACTION = 'SB' AND REF.CNT > 0                              <  
0472 REF.NO = REF.CNT                                                <  
0473 GOSUB 10000                                                     <  
0474 * T25978 ^                                                      <  

0475 * T26784 v                                                      <  
0476 CASE ACTION = 'L'                                                  CASE ACTION = 'L'
0477                                                                 >  ECD.SCRN.NO = 6     ;* T27248
0478 CALL LIST.ACCESS.BY.USER(CONO, MAT SEC.REC, USER.ID, ACCESS_BY     CALL LIST.ACCESS.BY.USER(CONO, MAT SEC.REC, USER.ID, ACCESS_
0479 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0480 ESN = 1                                                            ESN = 1
0481 ECD.ACTION = 2                                                     ECD.ACTION = 2

0480 ESN = 1                                                            ESN = 1
0481 ECD.ACTION = 2                                                     ECD.ACTION = 2
0482 CALL SCRN.EDIT                                                     CALL SCRN.EDIT
0483 GOSUB 9000                                                         GOSUB 9000
0484 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0485 * T26784 ^                                                      |  * T26853 ^
0486 END CASE                                                           END CASE
0487 GOTO 500                                                           GOTO 500
0488 *                                                                  *
0489 *---- GET COMPANY ID                                               *---- GET COMPANY ID

0576 *     IF ECD.RET.VALUE # "END" THEN                                *     IF ECD.RET.VALUE # "END" THEN
0577 *        SEC.FORM.QUEUE = ECD.RET.VALUE                            *        SEC.FORM.QUEUE = ECD.RET.VALUE
0578 *     END                                                          *     END
0579 RETURN                                                             RETURN
0580 *                                                                  *
0581 *T26135*---- LOGIN TIME                                         |  *---- LOGIN TIME
0582 *T26135*                                                        |  *
0583 *T261351400*                                                    |  1400*
0584 *T26135  ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT           |  ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
0585 *T26135  BEGIN CASE                                             |  BEGIN CASE

0586 *T26135      CASE ECD.RET.VALUE = "END"                         |  CASE ECD.RET.VALUE = "END"
0587 *T26135      CASE ECD.RET.VALUE = ""                            |  CASE ECD.RET.VALUE = ""
0588 *T26135          SEC.LOGIN = ""                                 |  SEC.LOGIN = ""
0589 *T26135      CASE LEN(ECD.RET.VALUE) # 4 OR NOT(NUM(ECD.RET.VA  |  CASE LEN(ECD.RET.VALUE) # 4 OR NOT(NUM(ECD.RET.VALUE))
0590 *T26135          ERRMSG = "** Invalid entry, try again !! **"   |  ERRMSG = "** Invalid entry, try again !! **"
0591 *T26135          GOSUB 90000; GOTO 1400                         |  GOSUB 90000; GOTO 1400
0592 *T26135      CASE ECD.RET.VALUE[1,2] < 0 OR ECD.RET.VALUE[1,2]  |  CASE ECD.RET.VALUE[1,2] < 0 OR ECD.RET.VALUE[1,2] > 24

0593 *T26135          ERRMSG = "Invalid hours (":ECD.RET.VALUE[1,2]  |  ERRMSG = "Invalid hours (":ECD.RET.VALUE[1,2]:"), range = 0-
0594 *T26135          GOSUB 90000; GOTO 1400                         |  GOSUB 90000; GOTO 1400
0595 *T26135      CASE ECD.RET.VALUE[3,2] < 0 OR ECD.RET.VALUE[3,2]  |  CASE ECD.RET.VALUE[3,2] < 0 OR ECD.RET.VALUE[3,2] > 59
0596 *T26135          ERRMSG = "Invalid minutes (":ECD.RET.VALUE[3,  |  ERRMSG = "Invalid minutes (":ECD.RET.VALUE[3,2]:"), range = 
0597 *T26135          GOSUB 90000; GOTO 1400                         |  GOSUB 90000; GOTO 1400
0598 *T26135      CASE ECD.RET.VALUE = SEC.LOGOUT AND SEC.LOGOUT >   |  CASE ECD.RET.VALUE = SEC.LOGOUT AND SEC.LOGOUT > 0
0599 *T26135          ERRMSG = "Cannot have the same Login and logo  |  ERRMSG = "Cannot have the same Login and logout times"

0600 *T26135          GOSUB 90000; GOTO 1400                         |  GOSUB 90000; GOTO 1400
0601 *T26135      CASE 1                                             |  CASE 1
0602 *T26135          SEC.LOGIN = ECD.RET.VALUE                      |  SEC.LOGIN = ECD.RET.VALUE
0603 *T26135  END CASE                                               |  END CASE
0604 *T26135  RETURN                                                 |  RETURN
0605 *T26135*                                                        |  *
0606 *T26135*---- LOGOUT TIME                                        |  *---- LOGOUT TIME

0607 *T26135*                                                        |  *
0608 *T261351500*                                                    |  1500*
0609 *T26135  ECD.NUM = 23; ECD.ACTION = 4; CALL SCRN.EDIT           |  ECD.NUM = 23; ECD.ACTION = 4; CALL SCRN.EDIT
0610 *T26135  BEGIN CASE                                             |  BEGIN CASE
0611 *T26135      CASE ECD.RET.VALUE = "END"                         |  CASE ECD.RET.VALUE = "END"
0612 *T26135      CASE ECD.RET.VALUE = ""                            |  CASE ECD.RET.VALUE = ""
0613 *T26135          SEC.LOGOUT = ""                                |  SEC.LOGOUT = ""

0614 *T26135      CASE LEN(ECD.RET.VALUE) # 4 OR NOT(NUM(ECD.RET.VA  |  CASE LEN(ECD.RET.VALUE) # 4 OR NOT(NUM(ECD.RET.VALUE))
0615 *T26135          ERRMSG = "** Invalid entry, try again !! **"   |  ERRMSG = "** Invalid entry, try again !! **"
0616 *T26135          GOSUB 90000; GOTO 1500                         |  GOSUB 90000; GOTO 1500
0617 *T26135      CASE ECD.RET.VALUE[1,2] < 0 OR ECD.RET.VALUE[1,2]  |  CASE ECD.RET.VALUE[1,2] < 0 OR ECD.RET.VALUE[1,2] > 24
0618 *T26135          ERRMSG = "Invalid hours (":ECD.RET.VALUE[1,2]  |  ERRMSG = "Invalid hours (":ECD.RET.VALUE[1,2]:"), range = 0-
0619 *T26135          GOSUB 90000; GOTO 1500                         |  GOSUB 90000; GOTO 1500
0620 *T26135      CASE ECD.RET.VALUE[3,2] < 0 OR ECD.RET.VALUE[3,2]  |  CASE ECD.RET.VALUE[3,2] < 0 OR ECD.RET.VALUE[3,2] > 59

0621 *T26135          ERRMSG = "Invalid minutes (":ECD.RET.VALUE[3,  |  ERRMSG = "Invalid minutes (":ECD.RET.VALUE[3,2]:"), range = 
0622 *T26135          GOSUB 90000; GOTO 1500                         |  GOSUB 90000; GOTO 1500
0623 *T26135      CASE ECD.RET.VALUE = SEC.LOGIN AND SEC.LOGIN > 0   |  CASE ECD.RET.VALUE = SEC.LOGIN AND SEC.LOGIN > 0
0624 *T26135          ERRMSG = "Cannot have the same Login and logo  |  ERRMSG = "Cannot have the same Login and logout times"
0625 *T26135          GOSUB 90000; GOTO 1500                         |  GOSUB 90000; GOTO 1500
0626 *T26135      CASE 1                                             |  CASE 1
0627 *T26135          SEC.LOGOUT = ECD.RET.VALUE                     |  SEC.LOGOUT = ECD.RET.VALUE

0628 *T26135  END CASE                                               |  END CASE
0629 *T26135  RETURN                                                 |  RETURN
0630 *T24820 v                                                          *T24820 v
0631 *---- TIME OUT                                                     *---- TIME OUT
0632 *                                                                  *
0633 1600*                                                              1600*
0634 * ECD.NUM = 24; ECD.ACTION = 4; CALL SCRN.EDIT                     * ECD.NUM = 24; ECD.ACTION = 4; CALL SCRN.EDIT

0807 9000*                                                              9000*
0808 SCV.REC(2)<ESN> = SEC.PASSWORD                                     SCV.REC(2)<ESN> = SEC.PASSWORD
0809 SCV.REC(12)<ESN> = SEC.MENU.LEVEL                                  SCV.REC(12)<ESN> = SEC.MENU.LEVEL
0810 SCV.REC(3)<ESN> = SEC.MENU.FLAG                                    SCV.REC(3)<ESN> = SEC.MENU.FLAG
0811 SCV.REC(21)<ESN> = SEC.DFLT.QUEUE                                  SCV.REC(21)<ESN> = SEC.DFLT.QUEUE
0812 *T26135  SCV.REC(22)<ESN> = SEC.LOGIN                           |  SCV.REC(22)<ESN> = SEC.LOGIN
0813 *T26135  SCV.REC(23)<ESN> = SEC.LOGOUT                          |  SCV.REC(23)<ESN> = SEC.LOGOUT
0814 *T24820  SCV.REC(24)<ESN> = SEC.TIME.OUT                           *T24820  SCV.REC(24)<ESN> = SEC.TIME.OUT
0815 *     SCV.REC(19)<ESN> = SEC.ROLLOVER                              *     SCV.REC(19)<ESN> = SEC.ROLLOVER
0816 SCV.REC(20)<ESN> = SEC.PORT                                        SCV.REC(20)<ESN> = SEC.PORT

0817 SCV.REC(25)<ESN> = SEC.NAME                                        SCV.REC(25)<ESN> = SEC.NAME
0818 * T23304 v Check USER.MODE file for screen type then display       * T23304 v Check USER.MODE file for screen type then display
0819 *T27654 v                                                       <  
0820 *  READV SCREEN.TYPE FROM USER.MODE,USER.ID,1 ELSE SCREEN.TYPE  <  
0821 IF SCREEN.TYPE = "" THEN                                        <  
0822 READV SCREEN.TYPE FROM USER.MODE,USER.ID,1 ELSE SCREEN.TYPE =      READV SCREEN.TYPE FROM USER.MODE,USER.ID,1 ELSE SCREEN.TYPE 
0823 END                                                             <  
0824 *T27654 ^                                                       <  
0825 SCV.REC(30)<ESN> = SCREEN.TYPE                                     SCV.REC(30)<ESN> = SCREEN.TYPE

0855 RETURN                                                             RETURN
0856 *                                                                  *
0857 *---- ERROR ROUTINE                                                *---- ERROR ROUTINE
0858 *                                                                  *
0859 90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN                90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
0860                                                                 >  * 90000*
0861                                                                 >  *       PRINT @(0,23):CL:ERRMSG:
0862                                                                 >  *       INPUT REPLY,1:
0863                                                                 >  *       PRINT @(0,23):CL:
0864                                                                 >  *       RETURN

0865 93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)                       93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
0866                                                                 >  * 93000*
0867                                                                 >  *       PRINT @(0,23):CL:ERRMSG:
0868                                                                 >  *       INPUT REPLY,1:
0869                                                                 >  *       PRINT @(0,23):CL:
0870 *                                                                  *
0871 *---- END OF PROGRAM                                               *---- END OF PROGRAM
0872 *                                                                  *

0873 99999*                                                             99999*
0874 RELEASE     ;* T26126                                           |  *       PRINT @(-1):
0875 END                                                                END
0876 


PMCBP/VEND.MAINT                                                   /vsi/cust/rev11/cbn/CBA-CBN/CBNBP/VEND.MAINT
Printed for thompson at 06/28/2006 04:57:25PM

0015 * DESCRIPTION -                                                    * DESCRIPTION -
0016 *T20016 RKB 02/01/96 * add support for warehouse                   *T20016 RKB 02/01/96 * add support for warehouse
0017 *T20530 CLS 5/96 * add new field for fax number                    *T20530 CLS 5/96 * add new field for fax number
0018 *T22511 stefanie 03/11/1998 * Inquiry should not allow entry o     *T22511 stefanie 03/11/1998 * Inquiry should not allow entry
0019 *                             record.                              *                             record.
0020 *T26126 adelgado 02/22/2002 * Implement the LOCKED clause for   |  *T24135 LMR 03/01/2000 * Added V.CODE TO CALL FOR VEND.PO.IN
0021 *T25941 ajibaly 06/27/2002 * Add an email address field for re  |  *T26944 lhelms 01/02/2003 * AUDIT TRAIL OLD VS. NEW CHANGES 
0022 *                            POs                                |  *                           FILE
0023 **************************************************************     ************************************************************
0024 *                                                                  *

0043 *                                                                  *
0044 DIM V.VALUES(5)                                                    DIM V.VALUES(5)
0045 EQU V.ID   TO V.VALUES(1)                                          EQU V.ID   TO V.VALUES(1)
0046 EQU V.CNT  TO V.VALUES(2)                                          EQU V.CNT  TO V.VALUES(2)
0047 MAT V.VALUES = ""                                                  MAT V.VALUES = ""
0048                                                                 >  *
0049                                                                 >  * T26944
0050                                                                 >  DIM OLD.VEND.REC(60)
0051                                                                 >  MAT OLD.VEND.REC = ""
0052                                                                 >  *

0063 END                                                                END
0064 OPEN '','VEND' TO VEND ELSE                                        OPEN '','VEND' TO VEND ELSE
0065 ERRMSG = 'VENDOR FILE IS MISSING'                                  ERRMSG = 'VENDOR FILE IS MISSING'
0066 GOTO 93000                                                         GOTO 93000
0067 END                                                                END
0068                                                                 >  * T26944
0069                                                                 >  OPEN '','VEND.AUDIT.TRAIL' TO VEND.AUDIT.TRAIL ELSE
0070                                                                 >  ERRMSG = 'VEND.AUDIT.TRAIL FILE IS MISSING'
0071                                                                 >  GOTO 93000
0072                                                                 >  END

0073                                                                 >  *
0074 OPEN '','PMC.SCREENS' TO M.SCREENS ELSE                            OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
0075 ERRMSG = 'PMC.SCREENS FILE IS MISSING'                             ERRMSG = 'PMC.SCREENS FILE IS MISSING'
0076 GOTO 93000                                                         GOTO 93000
0077 END                                                                END
0078 OPEN '','CONTROL' TO CONTROL ELSE                                  OPEN '','CONTROL' TO CONTROL ELSE
0079 ERRMSG = 'CONTROL FILE IS MISSING'                                 ERRMSG = 'CONTROL FILE IS MISSING'

0105 END                                                                END
0106 OPEN "OUTSIDE.PO" TO OUTSIDE.PO ELSE                               OPEN "OUTSIDE.PO" TO OUTSIDE.PO ELSE 
0107 ERRMSG = "OUTSIDE.PO FILE IS MISSING"                              ERRMSG = "OUTSIDE.PO FILE IS MISSING"
0108 GOTO 93000                                                         GOTO 93000
0109 END                                                                END
0110                                                                 >  * T26944
0111                                                                 >  OPEN "SECURITY" TO SECURITY ELSE 
0112                                                                 >  ERRMSG = "SECURITY FILE IS MISSING"
0113                                                                 >  GOTO 93000
0114                                                                 >  END

0152 END                                                                END
0153 END                                                                END
0154 IN.ACCT.LEN = LEN(CO.ACCT.PIC)                                     IN.ACCT.LEN = LEN(CO.ACCT.PIC)
0155 IN.PHONE.LEN = 10 ; IN.SS.LEN = 9                                  IN.PHONE.LEN = 10 ; IN.SS.LEN = 9
0156 VOUCHER.ACCRUE.FLAG = ''                                           VOUCHER.ACCRUE.FLAG = ''
0157                                                                 >  * T26944
0158                                                                 >  PORT.NO = 'TTY'
0159                                                                 >  CALL SYSVARS.SUB(PORT.NO)
0160                                                                 >  READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "
0161                                                                 >  OPER.ID = OCONV(PORT.NO,'MCN'):"!":OPER.ID

0162                                                                 >  TODAY = DATE()
0163                                                                 >  TTIME = TIME()
0164 *                                                                  *
0165 **** SET UP GEN.XREF.REC                                           **** SET UP GEN.XREF.REC
0166 *                                                                  *
0167 FILL = "#"                                                         FILL = "#"
0168 MAT GEN.XREF.REC = ''                                              MAT GEN.XREF.REC = ''

0187 ECD.ACTION=1;CALL SCRN.EDIT                                        ECD.ACTION=1;CALL SCRN.EDIT
0188 **** PRINT SCREEN                                                  **** PRINT SCREEN
0189 1*                                                                 1*
0190 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0191 MAT VEND.REC = ''                                                  MAT VEND.REC = ''
0192                                                                 >  NEW.VENDOR = 0
0193                                                                 >  * T26944
0194                                                                 >  MAT OLD.VEND.REC = ""
0195 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0196 ECD.ACTION=2;CALL SCRN.EDIT                                        ECD.ACTION=2;CALL SCRN.EDIT

0208 *                                                                  *
0209 ***** ENTER VEND NUMBER                                            ***** ENTER VEND NUMBER
0210 *                                                                  *
0211 5*                                                                 5*
0212 OLD.VEND.SHPV = ""                                                 OLD.VEND.SHPV = ""
0213                                                                 >  NEW.VENDOR = 0
0214                                                                 >  MAT OLD.VEND.REC = ""
0215 RELEASE                                                            RELEASE
0216 IF MENU # "I" THEN                                                 IF MENU # "I" THEN
0217 ECD.VALDAT.CODE = '4'                                              ECD.VALDAT.CODE = '4'

0227 CASE ECD.RET.VALUE = 'END'                                         CASE ECD.RET.VALUE = 'END'
0228 GOTO 99999                                                         GOTO 99999
0229 CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''                   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
0230 STATUS = '0'                                                       STATUS = '0'
0231 IF MENU # "I" THEN                                                 IF MENU # "I" THEN
0232 * T26126 v                                                      |  MATREADU VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE MAT VEN
0233 MATREADU VEND.REC FROM VEND, CONO:ECD.RET.VALUE LOCKED          <  
0234 ERRMSG = 'VENDOR record is locked by user - ':GETUSERNAME(STAT  <  
0235 GOSUB 91000;GOTO 5                                              <  
0236 END ELSE                                                           END ELSE

0237 MAT VEND.REC = ''                                               <  
0238 END                                                             <  
0239 * T26126 ^                                                      <  
0240 END ELSE                                                        <  
0241 MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE MAT VEND.R     MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE MAT VEND
0242 END                                                                END
0243 OLD.NAME = VEND.DESC                                               OLD.NAME = VEND.DESC

0262 ERRMSG = "YOU MUST SETUP MAIN VENDOR BEFORE SETTING UP SUB VEN     ERRMSG = "YOU MUST SETUP MAIN VENDOR BEFORE SETTING UP SUB V
0263 END                                                                END
0264 END                                                                END
0265 STATUS = '1'                                                       STATUS = '1'
0266 OLD.NAME = ''                                                      OLD.NAME = ''
0267 FOR S = 1 TO 20                                                 |  MAT OLD.VEND.REC = ""
0268 ON S GOSUB 10,35,55,60,70,75,80,85,90,95,100,110,120,130,150,1  |  NEW.VENDOR = 1
0269                                                                 >  FOR S = 1 TO 19
0270                                                                 >  ON S GOSUB 10,35,55,60,70,75,80,90,95,100,110,120,130,150,16
0271 IF ECD.RET.VALUE = 'END' THEN GOTO 1                               IF ECD.RET.VALUE = 'END' THEN GOTO 1

0288 SCV.REC(2)<1> = ''                                                 SCV.REC(2)<1> = ''
0289 ECD.ACTION=3;CALL SCRN.EDIT                                        ECD.ACTION=3;CALL SCRN.EDIT
0290 GOTO 5                                                             GOTO 5
0291 END ELSE                                                           END ELSE
0292 IF MENU # "I" THEN                                                 IF MENU # "I" THEN
0293 * T26126 v                                                      |  MATREADU VEND.REC FROM VEND, CONO:GXR.ID ELSE
0294 MATREADU VEND.REC FROM VEND, CONO:GXR.ID LOCKED                 <  
0295 ERRMSG = 'VENDOR record is locked by user - ':GETUSERNAME(STAT  <  
0296 GOSUB 91000;GOTO 5                                              <  
0297 END ELSE                                                        <  

0298 * T26126 ^                                                      <  
0299 ERRMSG = 'VENDOR NUMBER ':GXR.ID:' IS MISSING'                     ERRMSG = 'VENDOR NUMBER ':GXR.ID:' IS MISSING'
0300 GOSUB 91000                                                        GOSUB 91000
0301 SCV.REC(2)<1> = ''                                                 SCV.REC(2)<1> = ''
0302 GOTO 5                                                             GOTO 5
0303 END                                                                END
0304 END ELSE                                                           END ELSE

0318 END                                                                END
0319 END CASE                                                           END CASE
0320 GOSUB 60000                                                        GOSUB 60000
0321 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0322 MAT VEND.REC = ''                                                  MAT VEND.REC = ''
0323                                                                 >  * T26944
0324                                                                 >  MAT OLD.VEND.REC = ""
0325 MAT SCV.REC = ""                                                   MAT SCV.REC = ""
0326 ECD.ACTION=6;CALL SCRN.EDIT                                        ECD.ACTION=6;CALL SCRN.EDIT
0327 ECD.NUM = 34                                                       ECD.NUM = 34

0512 IF ECD.RET.VALUE # 'END' THEN                                      IF ECD.RET.VALUE # 'END' THEN
0513 VEND.CONTACT = ECD.RET.VALUE                                       VEND.CONTACT = ECD.RET.VALUE
0514 END                                                                END
0515 RETURN                                                             RETURN
0516 *                                                                  *
0517 *** ENTER EMAIL ADDRESS (T25941)                                <  
0518 *                                                               <  
0519 85*                                                             <  
0520 ECD.NUM = 36                                                    <  
0521 ECD.ACTION=4;CALL SCRN.EDIT                                     <  

0522 IF ECD.RET.VALUE # 'END' THEN                                   <  
0523 VEND.EMAIL.ADDR = ECD.RET.VALUE                                 <  
0524 END                                                             <  
0525 RETURN                                                          <  
0526 *                                                               <  
0527 *** ENTER TOTAL M-T-D                                              *** ENTER TOTAL M-T-D
0528 *                                                                  *

0740 SCV.REC(17)<ECD.SCRN.NO,1> = VEND.STATUS                           SCV.REC(17)<ECD.SCRN.NO,1> = VEND.STATUS
0741 SCV.REC(18)<ECD.SCRN.NO,1> = VEND.AUTO.DIST CO.ACCT.MASK           SCV.REC(18)<ECD.SCRN.NO,1> = VEND.AUTO.DIST CO.ACCT.MASK
0742 SCV.REC(19)<ECD.SCRN.NO,1> = VEND.PHONE                            SCV.REC(19)<ECD.SCRN.NO,1> = VEND.PHONE
0743 SCV.REC(35)<ECD.SCRN.NO,1> = VEND.FAX                              SCV.REC(35)<ECD.SCRN.NO,1> = VEND.FAX
0744 SCV.REC(20)<ECD.SCRN.NO,1> = VEND.CONTACT                          SCV.REC(20)<ECD.SCRN.NO,1> = VEND.CONTACT
0745 SCV.REC(36)<ECD.SCRN.NO,1> = VEND.EMAIL.ADDR ;* T25941          <  
0746 SCV.REC(21)<ECD.SCRN.NO,1> = VEND.1099.FLAG                        SCV.REC(21)<ECD.SCRN.NO,1> = VEND.1099.FLAG
0747 SCV.REC(22)<ECD.SCRN.NO,1> = VEND.S.S.NO                           SCV.REC(22)<ECD.SCRN.NO,1> = VEND.S.S.NO
0748 SCV.REC(25)<ECD.SCRN.NO> = VEND.SORT.DESC                          SCV.REC(25)<ECD.SCRN.NO> = VEND.SORT.DESC
0749 SCV.REC(32)<ECD.SCRN.NO> = VEND.SHIP.VIA                           SCV.REC(32)<ECD.SCRN.NO> = VEND.SHIP.VIA

0754 *                                                                  *
0755 ***** ENTER OPTIONS                                                ***** ENTER OPTIONS
0756 *                                                                  *
0757 60000*                                                             60000*
0758 MORE = 0                                                           MORE = 0
0759                                                                 >  * T26944
0760                                                                 >  IF NEW.VENDOR = 0 THEN
0761                                                                 >  MAT OLD.VEND.REC = MAT VEND.REC
0762                                                                 >  END
0763                                                                 >  *

0773 OPTION = ECD.RET.VALUE                                             OPTION = ECD.RET.VALUE
0774 BEGIN CASE                                                         BEGIN CASE
0775 CASE OPTION = 'END' OR OPTION = 'E'                                CASE OPTION = 'END' OR OPTION = 'E'
0776 MORE = 1                                                           MORE = 1
0777 CASE NUM(OPTION)                                                   CASE NUM(OPTION)
0778 ON OPTION GOSUB 10,35,55,60,70,75,80,85,90,95,100,110,120,130,  |  ON OPTION GOSUB 10,35,55,60,70,75,80,90,95,100,110,120,130,1
0779 CASE OPTION = "R" AND CO.APS # "Y"                                 CASE OPTION = "R" AND CO.APS # "Y"
0780 ERRMSG = "This option will not function without the (APS) syst     ERRMSG = "This option will not function without the (APS) sy
0781 CASE OPTION = "R"                                                  CASE OPTION = "R"
0782 TVO.VEND = VEND.NUM                                                TVO.VEND = VEND.NUM

0791 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0792 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND                                 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND
0793 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0794 SCV.REC(14)<ECD.SCRN.NO> = "REGULAR"                               SCV.REC(14)<ECD.SCRN.NO> = "REGULAR"
0795 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0796 CALL VEND.PO.INQ("")                                            |  CALL VEND.PO.INQ("","")  ;*T24135
0797 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0798 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0799 END                                                                END
0800 CASE OPTION = "O" AND CO.APS # "Y"                                 CASE OPTION = "O" AND CO.APS # "Y"

0812 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0813 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND                                 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND
0814 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0815 SCV.REC(14)<ECD.SCRN.NO> = "OUTSIDE"                               SCV.REC(14)<ECD.SCRN.NO> = "OUTSIDE"
0816 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0817 CALL VEND.PO.INQ("")                                            |  CALL VEND.PO.INQ("","")  ;*T24135
0818 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0819 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0820 END                                                                END
0821 CASE OPTION = "M" AND CO.APS # "Y"                                 CASE OPTION = "M" AND CO.APS # "Y"

0833 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0834 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND                                 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND
0835 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0836 SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"                         SCV.REC(14)<ECD.SCRN.NO> = "MISCELLANEOUS"
0837 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0838 CALL VEND.PO.INQ("")                                            |  CALL VEND.PO.INQ("","")  ;*T24135
0839 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0840 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0841 END                                                                END
0842 CASE OPTION = "S" AND CO.APS # "Y"                                 CASE OPTION = "S" AND CO.APS # "Y"

0854 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0855 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND                                 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND
0856 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0857 SCV.REC(14)<ECD.SCRN.NO> = "SHIPPING"                              SCV.REC(14)<ECD.SCRN.NO> = "SHIPPING"
0858 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0859 CALL VEND.PO.INQ("")                                            |  CALL VEND.PO.INQ("","")  ;*T24135
0860 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0861 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0862 END                                                                END
0863 CASE OPTION = "JM" AND CO.APS # "Y"                                CASE OPTION = "JM" AND CO.APS # "Y"

0875 ECD.SCRN.NO = 4                                                    ECD.SCRN.NO = 4
0876 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND                                 SCV.REC(1)<ECD.SCRN.NO> = TVO.VEND
0877 SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC                                SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
0878 SCV.REC(14)<ECD.SCRN.NO> = "JOB MISC."                             SCV.REC(14)<ECD.SCRN.NO> = "JOB MISC."
0879 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0880 CALL VEND.PO.INQ("")                                            |  CALL VEND.PO.INQ("","")  ;*T24135
0881 ECD.SCRN.NO = 1                                                    ECD.SCRN.NO = 1
0882 ECD.ACTION = 3 ; CALL SCRN.EDIT                                    ECD.ACTION = 3 ; CALL SCRN.EDIT
0883 END                                                                END
0884 CASE OPTION = 'D'                                                  CASE OPTION = 'D'

0919 PMSG = "YOU ARE ABOUT TO DELETE THIS VENDOR OK (Y)ES , (N)O"       PMSG = "YOU ARE ABOUT TO DELETE THIS VENDOR OK (Y)ES , (N)O"
0920 CALL EDIT.SUB                                                      CALL EDIT.SUB
0921 P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
0922 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)                              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
0923 IF VALUE = 'Y' THEN                                                IF VALUE = 'Y' THEN
0924                                                                 >  OLD.VEND.DESC = VEND.DESC
0925 VEND.DESC = ''                                                     VEND.DESC = ''
0926 CALL GEN.XREF.MAINT(GXR.CO,VEND.NUM,OLD.NAME,VEND.DESC,VENDOR.     CALL GEN.XREF.MAINT(GXR.CO,VEND.NUM,OLD.NAME,VEND.DESC,VENDO
0927 IF VEND.SHIP.VIA # "" THEN                                         IF VEND.SHIP.VIA # "" THEN
0928 MATREADU SHIP.VIA.REC FROM SHIP.VIA, CONO:VEND.SHIP.VIA ELSE M     MATREADU SHIP.VIA.REC FROM SHIP.VIA, CONO:VEND.SHIP.VIA ELSE

0947 END ELSE                                                           END ELSE
0948 RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV                               RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV
0949 END                                                                END
0950 END                                                                END
0951 DELETE VEND , CONO:VEND.NUM                                        DELETE VEND , CONO:VEND.NUM
0952                                                                 >  *
0953                                                                 >  * T26944
0954                                                                 >  MATBUILD DYNAMIC.VEND.REC FROM VEND.REC
0955                                                                 >  MATBUILD DYNAMIC.OLD.VEND.REC FROM OLD.VEND.REC
0956                                                                 >  DYNAMIC.VEND.REC<1> = OLD.VEND.DESC

0957                                                                 >  DYNAMIC.VEND.REC<61> = 'DELETED VENDOR'
0958                                                                 >  DYNAMIC.VEND.REC<62> = TODAY
0959                                                                 >  DYNAMIC.VEND.REC<63> = TTIME
0960                                                                 >  DYNAMIC.VEND.REC<64> = OPER.ID
0961                                                                 >  SEQ.NO = 0
0962                                                                 >  LOOP
0963                                                                 >  SEQ.NO += 1

0964                                                                 >  READ SVEND FROM VEND.AUDIT.TRAIL,CONO:VEND.NUM:"!":SEQ.NO EL
0965                                                                 >  WHILE SVEND # "" DO REPEAT
0966                                                                 >  WRITE DYNAMIC.OLD.VEND.REC:AM:DYNAMIC.VEND.REC ON VEND.AUDIT
0967                                                                 >  *
0968 IF CO.VEND.ROLDX # "N" THEN                                        IF CO.VEND.ROLDX # "N" THEN
0969 MATREADU V.VALUES FROM D.VEND , CONO:"ROLODEX" ELSE MAT V.VALU     MATREADU V.VALUES FROM D.VEND , CONO:"ROLODEX" ELSE MAT V.VA
0970 LOCATE (CONO:VEND.NUM) IN V.ID<1>,1 SETTING FND ELSE FND = 0       LOCATE (CONO:VEND.NUM) IN V.ID<1>,1 SETTING FND ELSE FND = 
0

0979 END ELSE                                                           END ELSE
0980 ERRMSG = "THIS VENDOR HAD SOME ACTIVITY CAN'T BE DELETED" ; GO     ERRMSG = "THIS VENDOR HAD SOME ACTIVITY CAN'T BE DELETED" ; 
0981 END                                                                END
0982 CASE OPTION = 'F'                                                  CASE OPTION = 'F'
0983 IF VEND.NUM = 'N' THEN                                             IF VEND.NUM = 'N' THEN
0984                                                                 >  NEW.VENDOR = 1
0985 LOOP                                                               LOOP
0986 READU VEND.NUM FROM CONTROL , CONO:'VEND' ELSE VEND.NUM = '1'      READU VEND.NUM FROM CONTROL , CONO:'VEND' ELSE VEND.NUM = '1
0987 VEND.NO = VEND.NUM + 1                                             VEND.NO = VEND.NUM + 1
0988 WRITE VEND.NO ON CONTROL , CONO:'VEND'                             WRITE VEND.NO ON CONTROL , CONO:'VEND'

0990 READ SVEND FROM VEND , CONO:VEND.NUM ELSE SVEND = ''               READ SVEND FROM VEND , CONO:VEND.NUM ELSE SVEND = ''
0991 WHILE SVEND # "" DO REPEAT                                         WHILE SVEND # "" DO REPEAT
0992 ECD.NUM = 1 ; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = VEND.NUM ; ECD.A     ECD.NUM = 1 ; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = VEND.NUM ; ECD
0993 ERRMSG = VEND.NUM:'-':' WAS ASSIGNED TO THIS ENTRY' ; GOSUB 91     ERRMSG = VEND.NUM:'-':' WAS ASSIGNED TO THIS ENTRY' ; GOSUB 
0994 END                                                                END
0995                                                                 >  MATBUILD DYNAMIC.VEND.REC FROM VEND.REC
0996                                                                 >  MATBUILD DYNAMIC.OLD.VEND.REC FROM OLD.VEND.REC
0997                                                                 >  IF NEW.VENDOR THEN
0998                                                                 >  DYNAMIC.VEND.REC<61> = 'NEW VENDOR'
0999                                                                 >  END

1000                                                                 >  IF DYNAMIC.VEND.REC # DYNAMIC.OLD.VEND.REC THEN
1001                                                                 >  DYNAMIC.VEND.REC<62> = TODAY
1002                                                                 >  DYNAMIC.VEND.REC<63> = TTIME
1003                                                                 >  DYNAMIC.VEND.REC<64> = OPER.ID
1004                                                                 >  SEQ.NO = 0
1005                                                                 >  LOOP
1006                                                                 >  SEQ.NO += 1

1007                                                                 >  READ SVEND FROM VEND.AUDIT.TRAIL,CONO:VEND.NUM:"!":SEQ.NO EL
1008                                                                 >  WHILE SVEND # "" DO REPEAT
1009                                                                 >  WRITE DYNAMIC.OLD.VEND.REC:AM:DYNAMIC.VEND.REC ON VEND.AUDIT
1010                                                                 >  END
1011 MATWRITE VEND.REC ON VEND, CONO:VEND.NUM                           MATWRITE VEND.REC ON VEND, CONO:VEND.NUM
1012 CALL GEN.XREF.MAINT(GXR.CO,VEND.NUM,OLD.NAME,VEND.DESC,VENDOR.     CALL GEN.XREF.MAINT(GXR.CO,VEND.NUM,OLD.NAME,VEND.DESC,VENDO
1013 IF CO.VEND.ROLDX # "N" THEN                                        IF CO.VEND.ROLDX # "N" THEN

1041 END                                                                END
1042 END ELSE                                                           END ELSE
1043 RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV                               RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV
1044 END                                                                END
1045 END                                                                END
1046                                                                 >  NEW.VENDOR = 0
1047 MORE = 1                                                           MORE = 1
1048 END CASE                                                           END CASE
1049 WHILE MORE = 0 DO                                                  WHILE MORE = 0 DO
1050 REPEAT                                                             REPEAT


