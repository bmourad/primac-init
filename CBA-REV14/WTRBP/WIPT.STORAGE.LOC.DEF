*COPY>CPYLIB>COM1
*
**********************************************
* REVISION    - [XX.X]
* Copyright 1995 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - WTRBP
* PROGRAM     - WIPT.STORAGE.LOC.DEF
* BY          - ct6; CBA
* DATE        - 01/06/1998
* DESCRIPTION -
*
*T22322 ct6 01/06/1998 * ADD WIP INPROCESS SYSTEM WITH CHANGES - Provide
*                        a screen to define the various plant storage
*                        locations.
*ENDDOC
**********************************************
*   CPYLIBS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>COMPANY
*COPY>WTR.CPYLIB>WIPT.STORAGE.LOC
*
*   SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*   FILE OPENS
*
    OPEN '','WTR.SCREENS' TO M.SCREENS ELSE ERRMSG="WTR.SCREENS FILE MISSING";GOTO 93000
    OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL FILE MISSING"; GOTO 93000
    OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING"; GOTO 93000
    OPEN '','WIPT.STORAGE.LOC' TO WIPT.STORAGE.LOC ELSE ERRMSG="WIPT.STORAGE.LOC FILE MISSING"; GOTO 93000
*
*   INITIALIZATION SECTION
*
   CONO=''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO="END" THEN GOTO 99999
   MAT SCV.REC=''
   MAT EDIT.COM = ''
   MAT EDIT.COM.DRIVER=''
*
   ERRMSG = ''
   ECD.SCRN.CNT=1
   ECD.SCRN.NAME<1>="WIPT.STORAGE.LOC.DEF"
   ECD.ACTION=1; CALL SCRN.EDIT
   ECD.SCRN.NO=1
   MAT SCV.REC = ''
   ECD.ACTION=2; CALL SCRN.EDIT
*
*   DEFINE HEADINGS
*
      REPORT.NAME = "L O C A T I O N   R A N G E   L I S T I N G"
      TODAY = DATE()
      CTIME = TIME()
      IF CTIME < 10 THEN TODAY = DATE()
      PTIME = OCONV(CTIME,"MTH")
      PTIME = PTIME[1,5]:" ":PTIME[6,2]
      HD1A = "RUN: ":OCONV(TODAY,"D2/"):" @ ":PTIME
      HD1B = SPACE((60-LEN(CO.NAME))/2):CO.NAME
      HD1C = "PAGE "
      HD1 = HD1A"L#30":HD1B"L#60":HD1C"R#30"
      HD2 = SPACE((120-LEN(REPORT.NAME))/2):REPORT.NAME
      SH0 = ''
      SH1 = "Starting    Ending                                     Finished   "
      SH2 = "Location   Location            Description               Goods    "  
      SH3 = "--------   --------   ------------------------------   --------   "
      SH1 = SH1:"Zero on                                                   "    
      SH2 = SH2:"Delivery   Overlap                                        "
      SH3 = SH3:"--------   -------                                        "
*
*   BODY OF PROGRAM SECTION
*
100*
   RELEASE
   ECD.ACTION=6; CALL SCRN.EDIT
ECD.ACTION=2; CALL SCRN.EDIT
   MAT SCV.REC = ""
110*
   SCV.REC(15)<ECD.SCRN.NO,1>=DATE()
   ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
*
   ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   RANGE.START = ECD.RET.VALUE
   IF RANGE.START = "END" THEN GOTO 99999
   GOSUB 50  ;* GET THE RANGE END
   IF ECD.RET.VALUE = "END" THEN GOTO 110
   NEW.SLD = 0
   RANGE.KEY = RANGE.START:"*":RANGE.END
   GOSUB 10000 ;* CHECK FOR OVERLAP
   MATREADU WIPSL.REC FROM WIPT.STORAGE.LOC, CONO:RANGE.KEY ELSE
      NEW.SLD = 1; MAT WIPSL.REC = ""
   END
   IF NEW.SLD = 1 THEN
      FOR REQUEST=1 TO 3
         ON REQUEST GOSUB 1100,1200,1300
         IF ECD.RET.VALUE="END" THEN
            GOSUB 80000
            GOTO 500 ;* ASK FOR OPTIONS
         END
      NEXT REQUEST
   END ELSE
      GOSUB 80000
   END
*
*   GET OPERATOR REQUEST
*
500 *
   ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
   OPT=ECD.RET.VALUE
510 *
   BEGIN CASE
   CASE OPT = "E" OR OPT = "END"
      GOTO 100
   CASE NUM(OPT) AND OPT # ""
      ON OPT GOSUB 1100,1200,1300
   CASE OPT = "PUR"
540 * ASK THEM IF THEY ARE SURE
      ECD.NUM=25; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "Y"
         DELETE WIPT.STORAGE.LOC, CONO:RANGE.KEY  
         GOTO 100
      CASE ECD.RET.VALUE # "N"
         GOTO 540
      END CASE
   CASE OPT = "P"
      *CALL THE REPORT SUBROUTINE
      DIM HOLD.REC(WIPSL.REC.SIZE); MAT HOLD.REC = MAT WIPSL.REC
      GOSUB 20000
      IF PRINT.FLAG = 0 THEN
         ERRMSG = "No Location Definitions were listed."; GOSUB 91000
      END
      MAT WIPSL.REC = MAT HOLD.REC
   CASE OPT = "F"
      MATWRITE WIPSL.REC ON WIPT.STORAGE.LOC, CONO:RANGE.KEY  
      GOSUB 10000 ;* CHECK FOR OVERLAP AND WARN IF NECESSARY
      IF OVERLAP.FLG = 1 THEN GOSUB 10500
      GOTO 100
   CASE 1
      ERRMSG = "** INVALID INPUT **"; GOSUB 91000
   END CASE
   GOTO 500
*
GOTO 99999
*
50 * GET RANGE END
   ECD.DEFAULT=RANGE.START
   ECD.NUM=2; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE < RANGE.START THEN
      ERRMSG="** OUT OF RANGE!  RANGE END MAY NOT BE LESS THAN RANGE START **"
      GOSUB 91000
      GOTO 50
   END
   RANGE.END = ECD.RET.VALUE
   RETURN
*
1100 * DESCRIPTION
   IF WIPSL.RANGE.DESC<1> # "" THEN ECD.DEFAULT=WIPSL.RANGE.DESC<1>; ECD.O.R = "O"
   ECD.NUM=3; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE # "" THEN
      WIPSL.RANGE.DESC<1> = ECD.RET.VALUE
   END
   RETURN
*
1200 * FINISHED GOODS FLAG
   IF WIPSL.RANGE.FG<1> # "" THEN ECD.DEFAULT=WIPSL.RANGE.FG<1>; O.R="O"
   ECD.NUM=4; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   WIPSL.RANGE.FG<1> = ECD.RET.VALUE
   RETURN
*
1300 * ZERO BALANCE (ON DELIVERY TO RANGE) FLAG
   IF WIPSL.RANGE.ZERO<1> # "" THEN ECD.DEFAULT=WIPSL.RANGE.ZERO<1>; O.R="O"
   ECD.NUM=5; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   WIPSL.RANGE.ZERO<1> = ECD.RET.VALUE
   RETURN
*
*   TEST FOR OVERLAP AGAINST THE CURRENT RECORD KEY
*
10000 *
      STMT = 'SELECT WIPT.STORAGE.LOC WITH RANGE.START <= "':RANGE.END:'"'
      STMT = STMT:' AND WITH RANGE.END >= "':RANGE.START:'"'
      PERFORM STMT CAPTURING GARBAGE
      EOF = 0
      OVERLAP.FLG = 0
      LOOP
         READNEXT TEST ELSE EOF = 1
      UNTIL EOF DO
         IF TEST # CONO:RANGE.KEY THEN
            ERRMSG='LOCATION RANGES OVERLAP ANOTHER STORAGE LOCATION DEFINITION!'
            GOSUB 91000
            EOF=1; OVERLAP.FLG = 1
         END
     REPEAT
   RETURN
*
* PROMPT FOR REPORT PRINTING
*
10500 *
   ECD.NUM=26; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "Y" THEN
      GOSUB 20000 ;* PRINT THE LISTING
   END
   RETURN
*
*   PRINT THE RANGE LISTING
*
20000 *
   LINES=99
   PAGE.NO = 0
   MAX.LINES = 55
   LM = ""
   PRINTER ON
   CLEARSELECT
   PERFORM 'SSELECT WIPT.STORAGE.LOC WITH CONO = "':CONO:'"' CAPTURING GARBAGE
   EOF = 0
   OVERLAP=0
   ID.END=''
   PRINT.FLAG=0
   LOOP
      PREV.END=ID.END
      READNEXT ID ELSE EOF = 1
   UNTIL EOF DO
      MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, ID ELSE GOTO 20090
      PRINT.FLAG = 1
      ID.START=FIELD(ID,"*",1)[4,99]
      ID.END = FIELD(ID,"*",2)
      IF ID.START <= PREV.END THEN
         PRINT SPACE(6):"Y":SPACE(3)
         OVERLAP = 1
      END ELSE
         IF OVERLAP = 1 THEN
            PRINT SPACE(6):"Y":SPACE(3)
         END ELSE
            PRINT SPACE(10)
         END
         OVERLAP = 0
      END
      GOSUB 21000 ;* CHECK FOR LINE COUNT
      PLINE = ID.START "L#8"
      PLINE = PLINE:SPACE(3):ID.END "L#8"
      PLINE = PLINE:SPACE(3):WIPSL.RANGE.DESC "L#30"
      PLINE = PLINE:SPACE(7):WIPSL.RANGE.FG "L#4"
      PLINE = PLINE:SPACE(7):WIPSL.RANGE.ZERO "L#4"
      PRINT PLINE:
      LINES = LINES + 1
20090 *
   REPEAT
   IF OVERLAP = 1 THEN
      PRINT SPACE(6):"Y"
   END
   PRINTER OFF
   PRINTER CLOSE
   RETURN
*
21000 * CHECK FOR REPORT LINE COUNT, PRINT HEADING IF NEEDED
   IF (LINES + 1) <= MAX.LINES THEN RETURN
   PRINT CHAR(12):
   PAGE.NO = PAGE.NO + 1
   PRINT HD1: PAGE.NO
   PRINT HD2
   PRINT LM:SH0
   PRINT LM:SH1
   PRINT LM:SH2
   PRINT LM:SH3
   LINES = 6
   RETURN
*CSF 38277RETURN
*
*   LOAD SCREEN DATA
*
80000 *
   SCV.REC(3)<ECD.SCRN.NO,1>=WIPSL.RANGE.DESC<1>
   SCV.REC(4)<ECD.SCRN.NO,1>=WIPSL.RANGE.FG<1>
   SCV.REC(5)<ECD.SCRN.NO,1>=WIPSL.RANGE.ZERO<1>
80500 *
   ECD.ACTION = 3; CALL SCRN.EDIT
   RETURN
*
*   STANDARD SUBROUTINES
*
91000*
     ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000*
     ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000*
     ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
     PRINT @(-1)
     RETURN
   END
