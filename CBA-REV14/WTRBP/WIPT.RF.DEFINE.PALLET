      SUBROUTINE WIPT.RF.DEFINE.PALLET (ACTION, CONO, EMPID, MAT WIP.FILE.VARS)
*********************************************************************
*
* PROGRAM  - WIPT.RF.DEFINE.PALLET
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/01/95
*
* DESCRIPTION
*
* This program is used to process the Define Pallet transaction from 
* the hand-held R-F units used in the warehouse.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>EDIT.COM
*COPY>WTR.CPYLIB>WIP.TRACK.PALLET
*COPY>WTR.CPYLIB>WIP.TRACK.LOC
*COPY>WTR.CPYLIB>WIP.TRACK.CONTROL
*COPY>WTR.CPYLIB>WIP.TRACK.FORM
*COPY>WTR.CPYLIB>WIP.TRACK.JOB
*COPY>WTR.CPYLIB>WIP.FILE.VARS
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      TEST.MODE = 0
      IF LEN(ACTION) > 1 THEN
         IF ACTION[LEN(ACTION),1] = "T" THEN
            TEST.MODE = 1
            ACTION = ACTION[1,LEN(ACTION)-1]
         END
      END
      SPX = ""
      EMPNAME = "???????????????"
      MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
         EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
      END
*      IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
      EMPNAME = SPX:EMPNAME
      PREV.DEFINE.JOB = ""
      PREV.DEFINE.FORM = ""
      PREV.DEFINE.SKID = ""
      PREV.DEFINE.TYPE = ""
      PREV.DEFINE.QTY = ""
      PREV.DEFINE.LOC = ""
      PREV.DEFINE.DESC = ""
*
*---- INITIALIZE EDIT.SUB
*
      MAT EDIT.COM = ""
      TYP = 0
      CALL WIPT.INPUT
      FILL = "#"
      ERY = 15
*
*---- DISPLAY SCREEN
*
      DIM SCRN(16)
      MAT SCRN = ""
      XXXXXXXX = " 123456789012345678901 "
      XXXXXXXX = "+---------------------+"
      SCRN(01) = "|    Define Pallet    |"
      SCRN(02) = "|---------------------|"
      SCRN(03) = "|                     |"
      SCRN(04) = "|  Pallet: ########   |"
      SCRN(05) = "|                     |"
      SCRN(06) = "| Job : ########      |"
      SCRN(07) = "| Form: ##############|"
      SCRN(08) = "| Skid: ###           |"
      SCRN(09) = "| Type: ###           |"
      SCRN(10) = "|                     |"
      SCRN(11) = "| Quantity: ######    |"
      SCRN(12) = "| Location: ########  |"
      SCRN(13) = "| Description:        |"
      SCRN(14) = "| ####################|"
      SCRN(15) = "|                     |"
      SCRN(16) = "|                     |"
      XXXXXXXX = "+---------------------+"
      XXXXXXXX = " 123456789012345678901 "
*
      SLINE = @(-1)
      FOR SL = 1 TO 16
         SDATA = SCRN(SL)[2,21]
         CONVERT "#" TO " " IN SDATA
         CONVERT "@" TO " " IN SDATA
         SDATA = TRIMB(SDATA)
         LDATA = LEN(SDATA)
         LDONE = 0
         FOR N = 1 TO LDATA UNTIL LDONE
            IF SDATA[N,1] # " " THEN
               SLINE = SLINE:@((N-1),(SL-1)):SDATA[N,99]
               LDONE = 1
            END
         NEXT N
      NEXT SL
      PRINT SLINE:
      GOSUB 89990
*
*---- MAIN PROCESSING
*
1000 *
      LOOP
1010     TYP=7; X=10; Y=3; MINL=8; MAXL=8; EX=0; EY=15; ERY=15
         PATRN="1A7N"
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN RETURN
         CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
         IF NOT(VALID) THEN
            ERRMSG = "INVALID PALLET ID"
            GOSUB 91000
            GOTO 1010
         END
         PAL.ID = VALUE
         MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID THEN
            PRINT @(10,3):PAL.ID"L#8":
            PRINT @(07,5):WIPTP.JOB"L#8":
            BEGIN CASE
            CASE WIPTP.VER = "" AND WIPTP.SIG = ""
               XFORM = WIPTP.FORM
            CASE WIPTP.SIG = ""
               XFORM = WIPTP.FORM:".":WIPTP.VER
            CASE 1
               XFORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
            END CASE
            PRINT @(07,6):XFORM"L#14":
            PRINT @(07,7):WIPTP.SKID"L#3":
            PRINT @(07,8):WIPTP.TYPE"L#3":
            PRINT @(11,10):WIPTP.CQTY"L#6":
            PRINT @(11,11):WIPTP.MLOC<1,1>"L#8":
            PRINT @(1,13):WIPTP.DESC"L#20":
            TYP=8; X=0; Y=14
            PMSG = "Continue?"
            CALL WIPT.INPUT
            PRINT @(0,14):SPACE(21):
            IF VALUE # "Y" THEN
               RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
               GOTO 1090
            END
            PREV.DEFINE.JOB = WIPTP.JOB
            PREV.DEFINE.FORM = XFORM
            PREV.DEFINE.SKID = WIPTP.SKID
            PREV.DEFINE.TYPE = WIPTP.TYPE
            PREV.DEFINE.QTY = WIPTP.CQTY
            PREV.DEFINE.LOC = WIPTP.MLOC<1,1>
            PREV.DEFINE.DESC = WIPTP.DESC
            PREV.JOB = WIPTP.JOB
            PREV.FORM = XFORM
         END LOCKED
            ERRMSG = "** Pallet Locked **"
            GOSUB 91000
            GOTO 1010
         END ELSE
            MAT WIPTP.REC = ""
            PREV.DEFINE.SKID = ""
            PREV.DEFINE.TYPE = ""
            PREV.DEFINE.QTY = ""
            PREV.DEFINE.LOC = ""
            PREV.DEFINE.DESC = ""
            PREV.JOB = ""
            PREV.FORM = ""
         END
         PLOC = WIPTP.MLOC<1,1>
         PQTY = WIPTP.CQTY
1020     TYP=1; X=07; Y=5; MAXL=8; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.JOB # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.JOB
         END
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.JOB
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
            ERRMSG = "INVALID JOB NUMBER"
            GOSUB 91000
            GOTO 1020
         END
         JOB.NO = VALUE
1030     TYP=7; X=07; Y=6; MAXL=14; EX=0; EY=15; ERY=15
         IF JOB.NO = PREV.DEFINE.JOB AND PREV.DEFINE.FORM # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.FORM
         END
         PATRN="1A0N":VM:"2A0N":VM:"0N":VM:"0N'.'0N":VM:"0N'.'0N'.'0N"
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.FORM
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         FORMNO = VALUE; GOSUB 85100
         IF ERRMSG # "" THEN
            GOSUB 91000
            GOTO 1030
         END
1040     TYP=3; X=07; Y=7; MAXL=3; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.SKID # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.SKID
         END
         JUSTIFY="L"
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.SKID
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         SKID = VALUE
1050     TYP=1; X=07; Y=8; MAXL=3; EX=0; EY=15; ERY=15
         O.R="O"; DEFAULT=PREV.DEFINE.TYPE
*        VALDAT="V":VM:"S":VM:"VS":VM:"L":VM:"LV":VM:"LS":VM:"LVS"
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         XTYPE = VALUE
1060     TYP=3; X=11; Y=10; MINL=1; MAXL=6; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.QTY # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.QTY
         END
         JUSTIFY="L"
         MINV=1; MAXV=999999
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.QTY
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         QTY = VALUE
1070     TYP=7; X=11; Y=11; MINL=4; MAXL=8; EX=0; EY=15; ERY=15
         IF PREV.DEFINE.LOC # "" THEN
            O.R="O"; DEFAULT=PREV.DEFINE.LOC
         END
         PATRN="1A1N1A0X":VM:"1A1N-0X"
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.LOC
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         LOC = VALUE
1080     TYP=1; X=1; Y=13; MAXL=20; EX=0; EY=15; ERY=15
         O.R="O"; DEFAULT=PREV.DEFINE.DESC
         CALL WIPT.INPUT
         IF VALUE="" THEN VALUE=PREV.DEFINE.DESC
         IF VALUE[1,20]=PREV.DEFINE.DESC[1,20] THEN VALUE=PREV.DEFINE.DESC
         GOSUB 89990
         IF VALUE = "END" THEN GOTO 1090
         DESC = VALUE
*
         MAT WIPTP.REC = ""
         CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
         IF NUM(FNUM) THEN
            WIPTP.PTYPE = ""
         END ELSE
            WIPTP.PTYPE = "I"
         END
         WIPTP.DATE  = CDATE
         WIPTP.TIME  = CTIME
         WIPTP.JOB   = JOB.NO
         WIPTP.FORM  = FNUM
         WIPTP.VER   = VNUM
         WIPTP.SIG   = SNUM
         WIPTP.SKID  = SKID
         WIPTP.SEQ   = 500
         WIPTP.TYPE  = XTYPE
         WIPTP.IQTY  = QTY
         WIPTP.CQTY  = QTY
         WIPTP.DESC  = DESC
         WIPTP.MLOC  = LOC
         WIPTP.MDATE = CDATE
         WIPTP.MTIME = CTIME
         WIPTP.MEMP  = EMPID
         WIPTP.ACODE = "N"
         WIPTP.AQTY  = QTY
         WIPTP.ADATE = CDATE
         WIPTP.ATIME = CTIME
         WIPTP.AEMP  = EMPID
*
         CURR.JOB = WIPTP.JOB
         BEGIN CASE
         CASE WIPTP.VER = "" AND WIPTP.SIG = ""
            CURR.FORM = WIPTP.FORM
         CASE WIPTP.SIG = ""
            CURR.FORM = WIPTP.FORM:".":WIPTP.VER
         CASE 1
            CURR.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
         END CASE
         GOSUB 89100
*        IF GEN.SKID > 0 THEN WIPTP.SKID = GEN.SKID
         CALL WIPT.LOC.UPD(CONO,PAL.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
*NA      CALL WIPT.HIST.UPD(CONO,PLOC,PQTY,MAT WIPTP.REC,WIP.TRACK.HIST,ERRMSG)
         MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PAL.ID
         PREV.DEFINE.JOB = WIPTP.JOB
         BEGIN CASE
         CASE WIPTP.VER = "" AND WIPTP.SIG = ""
            PREV.DEFINE.FORM = WIPTP.FORM
         CASE WIPTP.SIG = ""
            PREV.DEFINE.FORM = WIPTP.FORM:".":WIPTP.VER
         CASE 1
            PREV.DEFINE.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
         END CASE
1090 *
         PRINT @(10,03):@(-4):
         PRINT @(07,05):@(-4):
         PRINT @(07,06):@(-4):
         PRINT @(07,07):@(-4):
         PRINT @(07,08):@(-4):
         PRINT @(11,10):@(-4):
         PRINT @(11,11):@(-4):
         PRINT @(0,13):@(-4):
         GOSUB 89990
         RELEASE WIP.TRACK.PALLET, CONO:PAL.ID
      REPEAT
      GOTO 99999
*
*---- FORMAT FORM NUMBER
*
85100 *
      ERRMSG = ""
      FNUM = FIELD(FORMNO,".",1)
      VNUM = FIELD(FORMNO,".",2)
      SNUM = FIELD(FORMNO,".",3)
      BEGIN CASE
      CASE NUM(FNUM)
         BEGIN CASE
         CASE FNUM = ""
            ERRMSG = 1
         CASE FNUM = 0
            ERRMSG = 1
         CASE LEN(FNUM) > 4
            ERRMSG = 1
         CASE 1
            FNUM = (10000+FNUM)[2,4]
            BEGIN CASE
            CASE VNUM = "" AND SNUM = ""
               FORMNO = FNUM
            CASE VNUM = ""
               ERRMSG = 2
            CASE VNUM = 0
               ERRMSG = 2
            CASE LEN(VNUM) > 3
               ERRMSG = 2
            CASE 1
               VNUM = (1000+VNUM)[2,3]
               BEGIN CASE
               CASE SNUM = ""
                  FORMNO = FNUM:".":VNUM
               CASE SNUM = 0
                  ERRMSG = 3
               CASE LEN(SNUM) > 5
                  ERRMSG = 3
               CASE 1
                  SNUM = (100000+SNUM)[2,5]
                  FORMNO = FNUM:".":VNUM:".":SNUM
               END CASE
            END CASE
         END CASE
      CASE NUM(FNUM[2,99])
         BEGIN CASE
         CASE LEN(FNUM) = 2
            FNUM = FNUM[1,1]:"00":FNUM[2,99]
            FORMNO = FNUM
         CASE LEN(FNUM) = 3
            FNUM = FNUM[1,1]:"0":FNUM[2,99]
            FORMNO = FNUM
         CASE LEN(FNUM) = 4
         CASE 1
            ERRMSG = 1
         END CASE
      CASE NUM(FNUM[3,99])
         BEGIN CASE
         CASE LEN(FNUM) = 3
            FNUM = FNUM[1,2]:"0":FNUM[3,99]
            FORMNO = FNUM
         CASE LEN(FNUM) = 4
         CASE 1
            ERRMSG = 1
         END CASE
      END CASE
      BEGIN CASE
      CASE ERRMSG = 1
         ERRMSG = "Invalid form #, Try again! "
      CASE ERRMSG = 2
         ERRMSG = "Invalid run #, Try again! "
      CASE ERRMSG = 3
         ERRMSG = "Invalid sig #, Try again! "
      END CASE
      RETURN
*
*---- UPDATE X-REF DATA
*
89100 *
      CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PAL.ID,GEN.SKID,ERRMSG)
      RETURN
*
*---- DRAW BORDER
*
89990 *
      IF TEST.MODE THEN
         FOR SL = 1 TO 16
            PRINT @(21,(SL-1)):"|":
         NEXT SL
         PRINT @(0,16):"---------------------+":
      END
      RETURN
*
*---- ERROR ROUTINE
*
91000 *
      PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,ERY):@(-4):
      ERY = 15
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      RETURN
   END
