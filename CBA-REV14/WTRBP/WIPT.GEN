*********************************************************************
*
* PROGRAM  - WIPT.GEN
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     -  09/20/95
*
* DESCRIPTION
*
* This program is used to generate WIP Tracking test data.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>WTR.CPYLIB>WIP.TRACK.PALLET
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOTO 93000
      END
      OPEN "","JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"
         GOTO 93000
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
         ERRMSG = "CANNOT OPEN CUSTOMER FILE"
         GOTO 93000
      END
      OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
         ERRMSG = "CANNOT OPEN EMPLOYEE FILE"
         GOTO 93000
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"
         GOTO 93000
      END
      OPEN "","VEND" TO VEND ELSE
         ERRMSG = "CANNOT OPEN VEND FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.JOB" TO WIP.TRACK.JOB ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.JOB FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.CONTROL" TO WIP.TRACK.CONTROL ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.CONTROL FILE"
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      SYS.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
      CONO = ""
      MAT COMP.REC = ""
      CALL GET.CONO (CONO, MAT COMP.REC)
      IF CONO = "END" THEN GOTO 99999
      USER.ID = @LOGNAME
      EMPID = "TEST"
*
      GENCNT = 0
      LOOP
         P_X  = 0 ; P_Y = 23 ; P_VALUE = "Number of items to be generated:" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         INPUT REPLY
         IF REPLY = "END" THEN GOTO 99999
         IF NUM(REPLY) THEN
            IF REPLY > 0 AND REPLY <= 5000 THEN GENCNT = REPLY
         END
      WHILE GENCNT = 0 DO
         P_X  = 0 ; P_Y = 23 ; P_VALUE = "INVALID REPLY" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      REPEAT
*
      TEST.DATE  = "";       DATE.CNT  = 0
      TEST.FORM  = "";       FORM.CNT  = 0
      TEST.VER   = "";       VER.CNT   = 0
      TEST.TYPE  = "";       TYPE.CNT  = 0
      TEST.IQTY  = "";       IQTY.CNT  = 0
      TEST.MLOC  = "";       MLOC.CNT  = 0
      TEST.EMP   = "";       EMP.CNT   = 0
      TEST.CCTR  = "";       CCTR.CNT  = 0
      TEST.JOB   = "";       JOB.CNT   = 0
      TEST.VEND  = "";       VEND.CNT  = 0
*
*---- POPULATE TEST DATA
*
      QMIN=DATE()-90; QMAX=DATE()
      FOR P = 1 TO 60
         TEST.DATE<P> = INT(QMIN+RND(QMAX-QMIN+1)+0.5)
         DATE.CNT = P
      NEXT P
*
      FOR P = 1 TO 10
         TEST.FORM<P> = (10000+P)[2,4]
         FORM.CNT = P
      NEXT P
      FOR P = (FORM.CNT+1) TO 11
         TEST.FORM<P> = "IN":(1000+P)[3,2]
         FORM.CNT = P
      NEXT P
*
      FOR P = 1 TO 3
         TEST.VER<P> = (1000+P)[2,3]
         VER.CNT = P
      NEXT P
*
      TEST.TYPE<1> = "V"
      TEST.TYPE<2> = "S"
      TEST.TYPE<3> = "VS"
      TEST.TYPE<4> = "LV"
      TEST.TYPE<5> = "LS"
      TEST.TYPE<6> = "LVS"
      FOR P = 7 TO 30
         TEST.TYPE<P> = ""
         TYPE.CNT = P
      NEXT P
*
      QMIN=20000; QMAX=35000
      FOR P = 1 TO 30
         TEST.IQTY<P> = INT(QMIN + RND(QMAX-QMIN+1))
         IQTY.CNT = P
      NEXT P
*
      QMIN=1; QMAX=999
      FOR P = 1 TO 400
         MLOC = INT(QMIN + RND(QMAX-QMIN+1))
         TEST.MLOC<P> = "X":(1000+P)[2,3]
         MLOC.CNT = P
      NEXT P
*
      PERFORM "SELECT EMPLOYEE"
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE DO
         IF ID[1,3] = CONO AND EMP.CNT < 6 THEN
            EMP.CNT = EMP.CNT + 1
            TEST.EMP<EMP.CNT> = ID[4,99]
         END
      REPEAT
*
      PERFORM "SELECT COST.CNTR"
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE DO
         IF ID[1,3] = CONO AND CCTR.CNT < 20 THEN
            CCTR.CNT = CCTR.CNT + 1
            TEST.CCTR<CCTR.CNT> = ID[4,99]
         END
      REPEAT
*
      PERFORM "SELECT JOB"
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE DO
         IF ID[1,3] = CONO AND LEN(ID) > 8 AND JOB.CNT < 200 THEN
            JOB.CNT = JOB.CNT + 1
            TEST.JOB<JOB.CNT> = ID[4,99]
         END
      REPEAT
*
      PERFORM "SELECT VEND"
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE DO
         IF ID[1,3] = CONO AND LEN(ID) > 3 AND VEND.CNT < 50 THEN
            VEND.CNT = VEND.CNT + 1
            TEST.VEND<VEND.CNT> = ID[4,99]
         END
      REPEAT
*
*---- MAIN PROCESSING
*
100 *
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "*** BEGIN PROCESSING ***" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CLEARFILE WIP.TRACK.PALLET
      CLEARFILE WIP.TRACK.FORM
      CLEARFILE WIP.TRACK.JOB
      CLEARFILE WIP.TRACK.HIST
      CLEARFILE WIP.TRACK.CONTROL
      P_X  = 0 ; P_Y = 22 ; P_VALUE = "*** ALL FILES CLEARED ***" ; P_OPT = ""
      P_X  := AM:0 ; P_Y := AM:23 ; P_VALUE := AM:"*** GENERATING TEST DATA ***"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RECCNT = 0
      FOR N = 2001 TO (2001+GENCNT-1)
         RECCNT += 1
         IF MOD(RECCNT,10) = 0 THEN CRT "#":
         IF MOD(RECCNT,500) = 0 THEN CRT OCONV(RECCNT,"MD0,")"R#12"
         PALID = "W":(1000000+N)[2,6]
         CALL WIPT.CHECK.DIGIT("C", PALID, "10RL", CKDIG, VALID)
         PALID = PALID:CKDIG
         MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALID ELSE NULL
         MAT WIPTP.REC = ""
         WIPTP.JOB   = TEST.JOB<1+RND(JOB.CNT)>
         WIPTP.FORM  = TEST.FORM<1+RND(FORM.CNT)>
         IF NUM(WIPTP.FORM) THEN
            WIPTP.VER   = TEST.VER<1+RND(VER.CNT)>
         END ELSE
            WIPTP.PTYPE = "I"
            WIPTP.VEND  = TEST.VEND<1+RND(VEND.CNT)>
         END
         WIPTP.SEQ  = 500
         WIPTP.TYPE = TEST.TYPE<1+RND(TYPE.CNT)>
         WIPTP.IQTY = TEST.IQTY<1+RND(IQTY.CNT)>
*
         QMIN=2; QMAX=4
         MCNT = QMIN+RND(QMAX-QMIN+1)
         LDATE = TEST.DATE<1+RND(DATE.CNT)>
         FOR MPTR = 1 TO MCNT
            LTIME = 15000+RND(86400-15000)
            EMPID = TEST.EMP<1+RND(EMP.CNT)>
            IF MPTR = MCNT THEN
               IF WIPTP.PTYPE = "I" THEN
                  WIPTP.MLOC<1,MPTR> = "R1-":1+RND(2)
               END ELSE
                  WIPTP.MLOC<1,MPTR> = "P1-":TEST.CCTR<1+RND(CCTR.CNT)>
               END
               WIPTP.ACODE = "N"
               WIPTP.AQTY = WIPTP.IQTY
               WIPTP.ADATE = LDATE
               WIPTP.ATIME = LTIME
               WIPTP.AEMP = EMPID
            END ELSE
               WIPTP.MLOC<1,MPTR> = "W1-":TEST.MLOC<1+RND(MLOC.CNT)>
            END
            WIPTP.MDATE<1,MPTR> = LDATE
            WIPTP.MTIME<1,MPTR> = LTIME
            WIPTP.MEMP<1,MPTR>  = EMPID
            LDATE = LDATE - RND(7) - 1
         NEXT MPTR
         WIPTP.DATE  = WIPTP.MDATE<1,MCNT>
         WIPTP.TIME  = WIPTP.MTIME<1,MCNT>
*
         X = 1 + RND(100)
         BEGIN CASE
            CASE (X-00) <= 70
               WIPTP.CQTY  = WIPTP.IQTY
            CASE (X-70) <= 10
               WIPTP.CQTY  = INT(WIPTP.IQTY / 5 + 0.5)
            CASE (X-80) <= 20
               WIPTP.CQTY  = 0
         END CASE
         IF WIPTP.CQTY < WIPTP.IQTY THEN
            WIPTP.MLOC<1,1> = "B1-":TEST.CCTR<1+RND(CCTR.CNT)>
            WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,"C")
            WIPTP.AQTY = INSERT(WIPTP.AQTY,1,1,0,(-(WIPTP.IQTY-WIPTP.CQTY)))
            WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,WIPTP.MDATE<1,1>)
            WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,WIPTP.MTIME<1,1>)
            WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0,WIPTP.MEMP<1,1>)
         END
*
         CJOB = WIPTP.JOB
         BEGIN CASE
            CASE WIPTP.VER = "" AND WIPTP.SIG = ""
               CFORM = WIPTP.FORM
            CASE WIPTP.SIG = ""
               CFORM = WIPTP.FORM:".":WIPTP.VER
            CASE 1
               CFORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
         END CASE
         CALL WIPT.XREF.MAINT(CONO,"","",CJOB,CFORM,PALID,SKID,ERRMSG)
         IF ERRMSG = "" THEN
*           IF GEN.SKID > 0 THEN WIPTP.SKID = GEN.SKID
            MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PALID
         END ELSE
            RELEASE WIP.TRACK.PALLET, CONO:PALID
            GOTO 93000
         END
      NEXT N
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "*** GENERATE HISTORICAL DATA ***" P_OPT = ''
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CMD = "WIPT.BUILD.HIST"
      PERFORM CMD
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "*** TEST DATA GENERATION COMPLETE ***"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 99999
*
*---- ERROR ROUTINE
*
93000 *
      ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
99999 *
   END
