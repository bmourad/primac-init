*********************************************************************
*
* PROGRAM  - WIPT.PALLET.MAINT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/01/95
*
* DESCRIPTION
*
* This program is used to view and/or maintain warehouse pallets.
*
*T22322 ct6 01/16/1998 * Add WIP Tracking module to Bawden with
*                        modifications
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>WTR.CPYLIB>WIP.TRACK.FORM
*COPY>WTR.CPYLIB>WIP.TRACK.PALLET
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>VEND
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*T22322v
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>WTR.CPYLIB>WIP.TRACK.TO.JOB
*COPY>WTR.CPYLIB>WIPT.STORAGE.LOC
*T22322^
*
*---- PRE-INITIALIZATION
*
  PROCREAD PARAM ELSE PARAM = ""
  ACTION = PARAM<1>
*
*---- INITIALIZE SYSCOM
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOTO 93000
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    ERRMSG = "CANNOT OPEN PREFIX FILE"
    GOTO 93000
  END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "CANNOT OPEN XREF.DATA FILE"
    GOTO 93000
  END
  OPEN "","WTR.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN WTR.SCREENS FILE"
    GOTO 93000
  END
  OPEN "","JOB" TO JOB ELSE
    ERRMSG = "CANNOT OPEN JOB FILE"
    GOTO 93000
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "CANNOT OPEN CUSTOMER FILE"
    GOTO 93000
  END
  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
    ERRMSG = "CANNOT OPEN CUSTOMER.XREF FILE"
    GOTO 93000
  END
  OPEN "","VEND" TO VEND ELSE
    ERRMSG = "CANNOT OPEN VEND FILE"
    GOTO 93000
  END
  OPEN "","VENDOR.XREF" TO VENDOR.XREF ELSE
    ERRMSG = "CANNOT OPEN VENDOR.XREF FILE"
    GOTO 93000
  END
  OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
    ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
    GOTO 93000
  END
  OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
    ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
    GOTO 93000
  END
  OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
    ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
    GOTO 93000
  END
  OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
    ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
    GOTO 93000
  END
*T22322v
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = "CANNOT OPEN COST.CNTR FILE"
    GOTO 93000
  END
  OPEN "","WIP.TRACK.TO.JOB" TO WIP.TRACK.TO.JOB ELSE
    ERRMSG = "CANNOT OPEN WIP.TRACK.TO.JOB FILE"
    GOTO 93000
  END
  OPEN "","WIPT.STORAGE.LOC" TO WIPT.STORAGE.LOC ELSE
    ERRMSG = "CANNOT OPEN WIPT.STORAGE.LOC FILE"
    GOTO 93000
  END
*T22322^
*
*---- INITIALIZATION
*
  CONO = ""
  MAT COMP.REC = ""
  CALL GET.CONO (CONO, MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
*---- INITIALIZE EDIT.SUB
*     MAT EDIT.COM = ""
*     TYP = 0
*     CALL EDIT.SUB
  FILL = "#"
*---- INITIALIZE SCRN.EDIT
  MAT SCV.REC = ""
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "WIPT.PALLET.MAINT"
  ECD.ACTION=1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  ESN = ECD.SCRN.NO
  ECD.ACTION=2; CALL SCRN.EDIT
*---- INITIALIZE OTHER VARIABLES
  PALLET.ID = ""
  PAGE.WIDTH = 80
  EMPID = ""
*T22322v
  ESC = CHAR(27)
*T22322^
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  ECD.ACTION=6; CALL SCRN.EDIT
  MAT SCV.REC = ""
110 *
  SCV.REC(1)<ESN> = DATE()
  ECD.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
  SCV.REC(2)<ESN> = PALLET.ID
  ECD.NUM=2; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 99999
  ECD.RET.VALUE = OCONV(ECD.RET.VALUE,"MCU")
  SCV.REC(2)<ESN> = ECD.RET.VALUE
  ECD.NUM=2; ECD.ACTION=5; CALL SCRN.EDIT
  CALL WIPT.CHECK.DIGIT("T", ECD.RET.VALUE, "10RL", CKDIG, VALID)
  IF NOT(VALID) THEN
    ERRMSG = "Invalid Pallet ID"
    GOSUB 91000
    GOTO 110
  END
  PALLET.ID = ECD.RET.VALUE
*
  NEW.REC = 0
  IF ACTION = "M" THEN
    * T26126 v
    MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALLET.ID LOCKED
      ERRMSG = 'PALLET record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 100 
    END ELSE
    * T26126 ^
      MAT WIPTP.REC = ""
      NEW.REC = 1
    END
  END ELSE
    MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALLET.ID ELSE
      ERRMSG = "Invalid Pallet ID"
      GOSUB 91000
      GOTO 100
    END
  END
  PREV.JOB = WIPTP.JOB
*T22322v
  PREV.TO.JOB = WIPTP.TO.JOB
*T22322^
  BEGIN CASE
    CASE WIPTP.VER = "" AND WIPTP.SIG = ""
      PREV.FORM = WIPTP.FORM
    CASE WIPTP.SIG = ""
      PREV.FORM = WIPTP.FORM:".":WIPTP.VER
    CASE 1
      PREV.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
  END CASE
  PREV.LOC = WIPTP.MLOC<1,1>
  PREV.QTY = WIPTP.CQTY
  PREV.VEND = WIPTP.VEND
  PREV.DESC = WIPTP.DESC
120 *
  IF NEW.REC THEN
    FOR REF = 1 TO 8
      ON REF GOSUB 1010,1020,1030,1040,1050,1060,1070,1080
      IF ECD.RET.VALUE = "END" THEN GOTO 100
    NEXT REF
  END ELSE
    GOSUB 80000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  BEGIN CASE
    CASE ACTION = "M"
      ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
    CASE 1
      ECD.NUM=23; ECD.ACTION=4; CALL SCRN.EDIT
  END CASE
  OPT = ECD.RET.VALUE
510 *
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      IF ACTION = "M" THEN
        MISMATCH = 0
        READ VREC FROM WIP.TRACK.PALLET, CONO:PALLET.ID ELSE VREC = ""
        FOR VPTR = 1 TO WIPTP.REC.SIZE UNTIL MISMATCH
          IF WIPTP.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
        NEXT VPTR
        IF MISMATCH THEN
          ECD.NUM=25; ECD.ACTION=4; CALL SCRN.EDIT
          IF ECD.RET.VALUE # "Y" THEN GOTO 500
        END
      END
      GOTO 100
    CASE NUM(OPT) AND OPT # ""
      ON OPT GOSUB 1010,1020,1030,1040,1050,1060,1070,1080
    CASE OPT = "PUR"
      ECD.NUM=24; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "Y" THEN
        DELETE WIP.TRACK.PALLET, CONO:PALLET.ID
*
        CURR.JOB = ""
*T22322v
        CURR.TO.JOB = ""
*T22322^
        CURR.FORM = ""
        CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PALLET.ID,GEN.SKID,ERRMSG)
*T22322v
        CALL WIPT.UPDATE.TOJOB.XREF(CONO,PREV.TO.JOB,CURR.TO.JOB,PREV.JOB,CURR.JOB,ERRMSG)
*T22322^
*
        GOTO 100
      END
    CASE OPT = "F" OR OPT = "P"
      CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
      IF WIPTP.DATE = "" THEN
        WIPTP.DATE = CDATE
        WIPTP.TIME = CTIME
      END
*
      CURR.JOB = WIPTP.JOB
*T22322v
      CURR.TO.JOB = WIPTP.TO.JOB
*T22322^
      BEGIN CASE
        CASE WIPTP.VER = "" AND WIPTP.SIG = ""
          CURR.FORM = WIPTP.FORM
        CASE WIPTP.SIG = ""
          CURR.FORM = WIPTP.FORM:".":WIPTP.VER
        CASE 1
          CURR.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
      END CASE
*
      IF WIPTP.MDATE = "" THEN
        WIPTP.MDATE = CDATE
        WIPTP.MTIME = CTIME
        WIPTP.MEMP = EMPID
      END
*
      BEGIN CASE
        CASE WIPTP.ACODE = ""
          WIPTP.IQTY = WIPTP.CQTY
          WIPTP.ACODE<1,1> = "N"
          WIPTP.AQTY<1,1> = WIPTP.CQTY
          WIPTP.ADATE<1,1> = CDATE
          WIPTP.ATIME<1,1> = CTIME
          WIPTP.AEMP<1,1> = EMPID
        CASE WIPTP.ACODE<1,1> = "N"
          WIPTP.IQTY = WIPTP.CQTY
          WIPTP.ACODE<1,1> = "N"
          WIPTP.AQTY<1,1> = WIPTP.CQTY
          WIPTP.ADATE<1,1> = CDATE
          WIPTP.ATIME<1,1> = CTIME
          WIPTP.AEMP<1,1> = EMPID
        CASE WIPTP.CQTY # PREV.QTY
          WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,"A")
          WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,(WIPTP.CQTY-PREV.QTY))
          WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
          WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
          WIPTP.AEMP  = INSERT(WIPTP.AEMP,1,1,0,"")
      END CASE
*
      BEGIN CASE
        CASE DFLAG = "Y" AND WIPTP.STATUS<1,1> # "D"
          WIPTP.STATUS = INSERT(WIPTP.STATUS,1,1,0,"D")
          WIPTP.SDATE = INSERT(WIPTP.SDATE,1,1,0,CDATE)
          WIPTP.STIME = INSERT(WIPTP.STIME,1,1,0,CTIME)
        CASE DFLAG # "Y" AND WIPTP.STATUS<1,1> = "D"
          WIPTP.STATUS = DELETE(WIPTP.STATUS,1,1,0)
          WIPTP.SDATE = DELETE(WIPTP.SDATE,1,1,0)
          WIPTP.STIME = DELETE(WIPTP.STIME,1,1,0)
      END CASE
      CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PALLET.ID,GEN.SKID,ERRMSG)
*T22322v
      CALL WIPT.UPDATE.TOJOB.XREF(CONO,PREV.TO.JOB,CURR.TO.JOB,PREV.JOB,CURR.JOB,ERRMSG)
*T22322^
*
*        IF GEN.SKID > 0 THEN WIPTP.SKID = GEN.SKID
      CALL WIPT.LOC.UPD(CONO,PALLET.ID,PREV.LOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
*NA      CALL WIPT.HIST.UPD(CONO,PREV.LOC,PREV.QTY,MAT WIPTP.REC,WIP.TRACK.HIST,ERRMSG)
      MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PALLET.ID
*
      WIPTF.ID = WIPTP.JOB:"!":WIPTP.FORM
      MATREADU WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE MAT WIPTF.REC = ""
*NA      IF WIPTP.VEND # "" AND WIPTP.VEND # PREV.VEND THEN
*NA         WIPTF.DEFAULT.VEND = WIPTP.VEND
*NA      END
*NA      IF WIPTP.DESC # "" AND WIPTP.DESC # PREV.DESC THEN
*NA         WIPTF.DEFAULT.DESC = WIPTP.DESC
*NA      END
      MATWRITE WIPTF.REC ON WIP.TRACK.FORM, CONO:WIPTF.ID
*
      IF OPT = "P" THEN 
        GOSUB 5100
        IF ECD.RET.VALUE # "END" THEN GOSUB 5000
      END
      GOTO 100
  END CASE
  GOTO 500
*
*---- GET JOB NUMBER
*
1010 *
  SCV.REC(3)<ESN> = WIPTP.JOB
  ECD.NUM=3; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF ECD.RET.VALUE = "" THEN
    ECD.NUM=6; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1010
    GXR.NAME = "CUSTOMER"
    GXR.XREF = CUSTOMER.XREF
    GXR.FILE = CUSTOMER
    GXR.SRCH.ID = ECD.RET.VALUE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    ECD.ACTION=2; CALL SCRN.EDIT
    GOSUB 80000
    IF GXR.ID = "" THEN GOTO 1010
    GXR.NAME = "JOB"
    GXR.XREF = CUSTOMER
    GXR.FILE = JOB
    GXR.SRCH.ID = GXR.ID
    CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    ECD.ACTION=2; CALL SCRN.EDIT
    GOSUB 80000
    IF GXR.ID = "" THEN GOTO 1010
    ECD.RET.VALUE = GXR.ID
  END
  MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate job ":ECD.RET.VALUE:". Try again! "
    GOSUB 91000
    GOTO 1010
  END
  MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
    ERRMSG = "Cannot locate customer ":JOB.CUST:". Try again! "
    GOSUB 91000
    GOTO 1010
  END
  SCV.REC(3)<ESN> = ECD.RET.VALUE
  ECD.NUM=3; ECD.ACTION=5; CALL SCRN.EDIT
  SCV.REC(6)<ESN> = CUST.NAME
  ECD.NUM=6; ECD.ACTION=5; CALL SCRN.EDIT
  WIPTP.JOB = ECD.RET.VALUE
  RETURN
*
*---- GET FORM OR INSERT CODE
*
1020 *
*T22322v
*      BEGIN CASE
*      CASE WIPTP.PTYPE = "I"
*         ECD.TYPE = 7
*         ECD.MAXL = 4
*         ECD.PATRN = "1A0N,2A0N"
*      CASE 1
*         ECD.TYPE = 7
*         ECD.MAXL = 14
*         ECD.PATRN = "0N,0N'.'0N,0N'.'0N'.'0N"
*      END CASE
  BEGIN CASE
    CASE WIPTP.PTYPE = "I"
      ECD.TYPE = 7
      ECD.MAXL = 4
      ECD.PATRN = "1A0N,2A0N"
    CASE 1
      ECD.TYPE = 7
      ECD.MAXL = 7
      ECD.PATRN = "0N,0N'.'0N"
  END CASE
*T22322^
  ECD.NUM=7; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  FORMNO = ECD.RET.VALUE
  GOSUB 85100
  IF ERRMSG # "" THEN
    GOSUB 91000
    GOTO 1020
  END
  SCV.REC(7)<ESN> = FORMNO
  ECD.NUM=7; ECD.ACTION=5; CALL SCRN.EDIT
  WIPTP.FORM = FNUM
  WIPTP.VER = VNUM
*T22322      WIPTP.SIG = SNUM
  RETURN
*
*---- GET SKID NUMBER
*
1030 *
  ECD.NUM=18; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  WIPTP.SKID = ECD.RET.VALUE
*
*T22322v
*      IF WIPTP.PTYPE # "I" THEN
*         ECD.NUM=8; ECD.ACTION=4; CALL SCRN.EDIT
*         IF ECD.RET.VALUE = "END" THEN RETURN
*         WIPTP.TYPE = ECD.RET.VALUE
*      END
*T22322^
  RETURN
*
*T22322v
**---- GET SEQUENCE NUMBER
**
*1040 *
*      ECD.NUM=19; ECD.ACTION=4; CALL SCRN.EDIT
*      IF ECD.RET.VALUE = "END" THEN RETURN
*      WIPTP.SEQ = ECD.RET.VALUE
*      RETURN
*
*---- GET TO-OPER
*
1040 *
  ECD.NUM=19; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "INVALID COST CENTER"
    GOSUB 91000
    GOTO 1040
  END
  WIPTP.TO.OPER = ECD.RET.VALUE
*
*---- GET TO-JOB
*
1045 *
  ECD.NUM=26; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  DIM TO.JOB.REC(JOB.REC.SIZE)
  MATREAD TO.JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "INVALID JOB NUMBER"
    GOSUB 91000
    GOTO 1045
  END
  WIPTP.TO.JOB = ECD.RET.VALUE
  RETURN
*T22322^
*
*---- GET QUANTITY
*
1050 *
*T22322v
*      IF WIPTP.MLOC<1,1>="VENDOR" OR WIPTP.MLOC<1,1>="SHREDDER" THEN
  SL.LOC = WIPTP.MLOC<1,1>
  GOSUB 86000 ;* Check The Storage Location Range
  IF WIPSL.RANGE.ZERO = "Y" THEN
*T22322^
    ERRMSG = "Cannot adjust pallet at this location."
    GOSUB 91000
  END ELSE
    ECD.NUM=9; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    WIPTP.CQTY = ECD.RET.VALUE
  END
  IF NEW.REC THEN
    ECD.NUM=10; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    WIPTP.MLOC = ECD.RET.VALUE
  END
*T22322v
  SL.LOC = WIPTP.MLOC<1,1>
  GOSUB 86000
  IF WIPSL.RANGE.FG = "Y" THEN
    ECD.NUM=27; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    WIPTP.CARTONS = ECD.RET.VALUE
  END
*T22322^
  RETURN
*
*---- GET VENDOR
*
1060 *
  IF WIPTP.PTYPE # "I" THEN RETURN
  SCV.REC(11)<ESN> = WIPTP.VEND
*NA   WIPTF.ID = WIPTP.JOB:"!":WIPTP.FORM
*NA   MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE MAT WIPTF.REC = ""
*NA   ECD.DEFAULT = WIPTF.DEFAULT.VEND
  ECD.NUM=11; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF ECD.RET.VALUE = "" THEN
    ECD.NUM=12; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE # "" THEN
      GXR.NAME = "VENDOR"
      GXR.XREF = VENDOR.XREF
      GXR.FILE = VEND
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION=2; CALL SCRN.EDIT
      GOSUB 80000
      ECD.RET.VALUE = GXR.ID
    END
  END
  IF ECD.RET.VALUE = "" THEN
    MAT VEND.REC = ""
  END ELSE
    MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate vendor ":ECD.RET.VALUE:". Try again! "
      GOSUB 91000
      GOTO 1060
    END
  END
  SCV.REC(11)<ESN> = ECD.RET.VALUE
  ECD.NUM=11; ECD.ACTION=5; CALL SCRN.EDIT
  SCV.REC(12)<ESN> = VEND.DESC
  ECD.NUM=12; ECD.ACTION=5; CALL SCRN.EDIT
  WIPTP.VEND = ECD.RET.VALUE
  RETURN
*
*---- GET INSERT DESCRIPTION
*
1070 *
  IF WIPTP.PTYPE # "I" THEN RETURN
*NA   WIPTF.ID = WIPTP.JOB:"!":WIPTP.FORM
*NA   MATREAD WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE MAT WIPTF.REC = ""
*NA   ECD.DEFAULT = WIPTF.DEFAULT.DESC
  ECD.NUM=13; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  WIPTP.DESC = ECD.RET.VALUE
  RETURN
*
*---- GET DISCARD FLAG
*
1080 *
  IF NEW.REC THEN
    DFLAG = ""
  END ELSE
    ECD.NUM=15; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    DFLAG = ECD.RET.VALUE
  END
  RETURN
*
*---- PRINT LOAD FLAG
*
5000 *
*T22322v
*      PRINTER ON
*      FMT=""; PLINE = CUST.NAME; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Job Number"; GOSUB 5010
*      FMT=""; PLINE = WIPTP.JOB; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Form Number / Insert Code"; GOSUB 5010
*      BEGIN CASE
*      CASE WIPTP.VER = "" AND WIPTP.SIG = ""
*         PLINE = WIPTP.FORM
*      CASE WIPTP.SIG = ""
*         PLINE = WIPTP.FORM:".":WIPTP.VER
*      CASE 1
*         PLINE = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
*      END CASE
*      FMT=""; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Quantity"; GOSUB 5010
*      FMT=""; PLINE = WIPTP.CQTY; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Vendor"; GOSUB 5010
*      FMT=""; PLINE = VEND.DESC; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Description"; GOSUB 5010
*      FMT=""; PLINE = WIPTP.DESC; GOSUB 5010
*      FMT=""; PLINE = ""; GOSUB 5020
*      FMT=""; PLINE = "Pallet ID"; GOSUB 5010
*      FMT=""; PLINE = PALLET.ID; GOSUB 5010
*      FMT=""; PLINE = PALLET.ID; GOSUB 5010
*      FMT=""; PLINE = PALLET.ID; GOSUB 5010
*      PRINT CHAR(12):
*      PRINTER OFF
*      PRINTER CLOSE
*      RETURN
*
*T22322x
  PRINTER ON
  PRINTER.INIT = ESC:"E"
  PRINTER.INIT = PRINTER.INIT:ESC:"&l0O"
  PRINTER.INIT = PRINTER.INIT:ESC:"(8U"
  PRINTER.INIT = PRINTER.INIT:ESC:"&l0L"  ;* Disable Perf Skipping
  PRINT PRINTER.INIT
  HPI = 2.0
  VPI = 0.05
  BPT = 2.5
  VSI = 1.0
  BDATA = "*":PALLET.ID:"*"
  VDATA = PALLET.ID
  VPT = 10
  CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
*
  PLINE=CUST.NAME; PITCH=2.50; VPOS=2.25; WGT=3; GOSUB 5010
  PLINE="Job Number"; PITCH=10.00; VPOS=2.75; WGT=0; GOSUB 5020
  PLINE=WIPTP.JOB; PITCH=3.0; VPOS=3.375; WGT=3; GOSUB 5010
  PLINE="    Signature    "; PITCH=10.00; VPOS=3.875; WGT=0; GOSUB 5020
  BEGIN CASE
    CASE WIPTP.VER = ""
      PLINE = WIPTP.FORM
    CASE 1
      PLINE = WIPTP.FORM:".":WIPTP.VER
  END CASE
  PITCH=3.0; VPOS=4.5; WGT=3; GOSUB 5010
  PLINE="Quantity"; PITCH=10.00; VPOS=5.0; WGT=0; GOSUB 5020
  PLINE=OCONV(WIPTP.CQTY,"MD0,"); PITCH=4.0; VPOS=5.5; WGT=3; GOSUB 5010
  PLINE="To-Job":SPACE(54):"To-Cctr"; PITCH=10.00; VPOS=6.0; WGT=0; GOSUB 5020
  PLINE=WIPTP.TO.JOB:SPACE(29):WIPTP.TO.OPER:SPACE(2); PITCH=5.5; VPOS=6.375; WGT=3; GOSUB 5010
  PLINE="Vendor"; PITCH=10.00; VPOS=6.75; WGT=0; GOSUB 5020
  PLINE=VEND.DESC; PITCH=7.0; VPOS=7.125; WGT=3; GOSUB 5010
  PLINE="Description"; PITCH=10.00; VPOS=7.625; WGT=0; GOSUB 5020
  PLINE=WIPTP.DESC; PITCH=7.0; VPOS=8.0; WGT=3; GOSUB 5010
  PLINE="Pallet ID"; PITCH=10.00; VPOS=8.625; WGT=0; GOSUB 5020
*
  HPI = 2.0
  VPI = 8.75
  BPT = 2.5
  VSI = 1.0
  BDATA = "*":PALLET.ID:"*"
  VDATA = PALLET.ID
  VPT = 10
  CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
*
*
  PRINT CHAR(12):
  PRINTER OFF
  PRINTER CLOSE
  RETURN
*
*---- PRINT CENTERED TEXT
*
5010 *
  PAGE.WIDTH = 8                     ;* PAGE WIDTH IN INCHES
  MAXPITCH = INT((LEN(PLINE)+2) / PAGE.WIDTH * 100 + 0.99)
  MAXPITCH = OCONV(MAXPITCH,"MD2")
  IF MAXPITCH > PITCH THEN PITCH = MAXPITCH
5020 *
  PAGE.CHARS = INT(PAGE.WIDTH * PITCH)-2
  IF LEN(PLINE) >= PAGE.CHARS THEN
    PLINE = SPACE(1):PLINE[1,PAGE.CHARS]
  END ELSE
    PLINE = SPACE(1):SPACE(INT((PAGE.CHARS-LEN(PLINE))/2)):PLINE
  END
  FMT = ESC:"(s"
  FMT = FMT:"0p"                     ;* pitch (0 = fixed, 1 = variable)               ;* pitch (char / inch)
  FMT = FMT:PITCH:"h"                ;* pitch (char / inch)
  FMT = FMT:"0s"                     ;* italic (0 = no, 1 = yes)
  FMT = FMT:WGT:"b"                  ;* weight (0 = normal, 3 = bold)
  FMT = FMT:"4102T"                  ;* font = Letter Gothic
  VPOS = INT(VPOS * 720 + 0.5)
  FMT = FMT:ESC:"&a":VPOS:"V"
  PRINT FMT:PLINE
  RETURN
**
**---- PRINT CENTERED TEXT
**
*5010 *
*      IF LEN(PLINE) >= PAGE.WIDTH THEN
*         PLINE = PLINE[1,PAGE.WIDTH]
*      END ELSE
*         PLINE = SPACE(INT((PAGE.WIDTH-LEN(PLINE))/2)):PLINE
*      END
*5020 *
*      PRINT FMT:PLINE
*      RETURN
*
*---- Prompt for Print Queue
*
5100 *
  ECD.NUM=28; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 500
*  CMD = 'SETPTR ,,,,,,DEST ':ECD.RET.VALUE:',BRIEF'
*  UDTEXECUTE CMD CAPTURING JUNK
   CALL PMC_SETPTR(ECD.RET.VALUE,"","",JUNK)
  IF JUNK # "" THEN
    ERRMSG = "Invalid Print Queue.  Try again."
    GOSUB 91000
    GOTO 5100
  END
  RETURN
*T22322^
*
*---- LOAD SCREEN DATA
*
80000 *
  IF WIPTP.JOB = "" THEN
    MAT JOB.REC = ""
    MAT CUST.REC = ""
  END ELSE
    MATREAD JOB.REC FROM JOB, CONO:WIPTP.JOB THEN
      MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
        MAT CUST.REC = ""
      END
    END ELSE
      MAT JOB.REC = ""
      MAT CUST.REC = ""
      CUST.NAME = "???????????????"
    END
  END
  IF WIPTP.VEND = "" THEN
    MAT VEND.REC = ""
  END ELSE
    MATREAD VEND.REC FROM VEND, CONO:WIPTP.VEND ELSE
      MAT VEND.REC = ""
      VEND.DESC = "???????????????"
    END
  END
  IF WIPTP.STATUS<1,1> = "D" THEN DFLAG = "Y" ELSE DFLAG = ""
  SCV.REC(1)<ESN> = DATE()
  SCV.REC(2)<ESN> = PALLET.ID
  SCV.REC(3)<ESN> = WIPTP.JOB
  SCV.REC(6)<ESN> = CUST.NAME
  BEGIN CASE
    CASE WIPTP.VER = "" AND WIPTP.SIG = ""
      FORM.NO = WIPTP.FORM
    CASE WIPTP.SIG = ""
      FORM.NO = WIPTP.FORM:".":WIPTP.VER
    CASE 1
      FORM.NO = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
  END CASE
  SCV.REC(7)<ESN> = FORM.NO
*T22322      SCV.REC(8)<ESN> = WIPTP.TYPE
  SCV.REC(9)<ESN> = WIPTP.CQTY
  SCV.REC(10)<ESN> = WIPTP.MLOC<1,1>
  SCV.REC(11)<ESN> = WIPTP.VEND
  SCV.REC(12)<ESN> = VEND.DESC
  SCV.REC(13)<ESN> = WIPTP.DESC
  SCV.REC(15)<ESN> = DFLAG
  SCV.REC(18)<ESN> = WIPTP.SKID
*T22322v
*      SCV.REC(19)<ESN> = WIPTP.SEQ
  SCV.REC(19)<ESN> = WIPTP.TO.OPER
  SCV.REC(26)<ESN> = WIPTP.TO.JOB
  SCV.REC(27)<ESN> = WIPTP.CARTONS
80050 *
  ECD.ACTION=3; CALL SCRN.EDIT
  RETURN
*
*---- FORMAT FORM NUMBER
*
85100 *
  ERRMSG = ""
  FNUM = FIELD(FORMNO,".",1)
  VNUM = FIELD(FORMNO,".",2)
  SNUM = FIELD(FORMNO,".",3)
  BEGIN CASE
    CASE NUM(FNUM)
      BEGIN CASE
        CASE FNUM = ""
          ERRMSG = 1
        CASE FNUM = 0
          ERRMSG = 1
*T22322v
*         CASE LEN(FNUM) > 4
        CASE LEN(FNUM) > 3
*T22322^
          ERRMSG = 1
        CASE 1
*T22322v
*            FNUM = (10000+FNUM)[2,4]
          FNUM = (1000+FNUM)[2,3]
*T22322^
          BEGIN CASE
*T22322v
*            CASE VNUM = "" AND SNUM = ""
*               FORMNO = FNUM
            CASE VNUM = ""
*               ERRMSG = 2
              FORMNO = FNUM
*T22322^
            CASE VNUM = 0
              ERRMSG = 2
*T22322v
*            CASE LEN(VNUM) > 3
            CASE LEN(VNUM) > 4
*T22322^
              ERRMSG = 2
            CASE 1
*T22322v
*               VNUM = (1000+VNUM)[2,3]
              VNUM = (10000+VNUM)[2,4]
*T22322^
*T22322v
              FORMNO = FNUM:".":VNUM
*               BEGIN CASE
*               CASE SNUM = ""
*                  FORMNO = FNUM:".":VNUM
*               CASE SNUM = 0
*                  ERRMSG = 3
*               CASE LEN(SNUM) > 5
*                  ERRMSG = 3
*               CASE 1
*                  SNUM = (100000+SNUM)[2,5]
*                  FORMNO = FNUM:".":VNUM:".":SNUM
*               END CASE
*T22322^
          END CASE
      END CASE
*T22322v
*      CASE NUM(FNUM[2,99])
*         BEGIN CASE
*         CASE LEN(FNUM) = 2
*            FNUM = FNUM[1,1]:"00":FNUM[2,99]
*            FORMNO = FNUM
*         CASE LEN(FNUM) = 3
*            FNUM = FNUM[1,1]:"0":FNUM[2,99]
*            FORMNO = FNUM
*         CASE LEN(FNUM) = 4
*         CASE 1
*            ERRMSG = 1
*         END CASE
*      CASE NUM(FNUM[3,99])
*         BEGIN CASE
*         CASE LEN(FNUM) = 3
*            FNUM = FNUM[1,2]:"0":FNUM[3,99]
*            FORMNO = FNUM
*         CASE LEN(FNUM) = 4
*         CASE 1
*            ERRMSG = 1
*         END CASE
    CASE 1
      ERRMSG = 1
*T22322^
  END CASE
  BEGIN CASE
    CASE ERRMSG = 1
*T22322v
*         ERRMSG = "Invalid form #, Try again! "
      ERRMSG = "Invalid version #, Try again! "
    CASE ERRMSG = 2
*         ERRMSG = "Invalid run #, Try again! "
      ERRMSG = "Invalid section #, Try again! "
*      CASE ERRMSG = 3
*         ERRMSG = "Invalid sig #, Try again! "
*T22322^
  END CASE
  RETURN
*T22322v
*
*---- Check the STORAGE LOCATION DEFINITION RECORD
*
86000 *
  ERRMSG = ""
  STMT = 'SSELECT WIPT.STORAGE.LOC WITH RANGE.START <= "':SL.LOC:'"'
  STMT = STMT:' AND WITH RANGE.END >= "':SL.LOC:'"'
  STMT = STMT:' AND WITH CONO = "':CONO:'"'
  PERFORM STMT CAPTURING GARBAGE
  MAT WIPSL.REC = ""
  READNEXT SL.ID THEN
    MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, SL.ID ELSE MAT WIPSL.REC = ""
    CLEARSELECT
  END ELSE
    ERRMSG = "*Undefined Location*"
  END
  RETURN
*T22322^
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
*
*---- END OF PROGRAM
*
99999 *
  PRINT @(-1):
END
