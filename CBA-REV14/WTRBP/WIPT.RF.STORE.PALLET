      SUBROUTINE WIPT.RF.STORE.PALLET (ACTION, CONO, EMPID, MAT WIP.FILE.VARS)
*********************************************************************
*
* PROGRAM  - WIPT.RF.STORE.PALLET
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/01/95
*
* DESCRIPTION
*
* This program is used to process the Store Pallet transaction from 
* the hand-held R-F units used in the warehouse.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>EDIT.COM
*COPY>WTR.CPYLIB>WIP.TRACK.PALLET
*COPY>WTR.CPYLIB>WIP.TRACK.LOC
*COPY>WTR.CPYLIB>WIP.TRACK.CONTROL
*COPY>WTR.CPYLIB>WIP.TRACK.FORM
*COPY>WTR.CPYLIB>WIP.TRACK.JOB
*COPY>WTR.CPYLIB>WIP.FILE.VARS
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      TEST.MODE = 0
      IF LEN(ACTION) > 1 THEN
         IF ACTION[LEN(ACTION),1] = "T" THEN
            TEST.MODE = 1
            ACTION = ACTION[1,LEN(ACTION)-1]
         END
      END
      SPX = ""
      EMPNAME = "???????????????"
      MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
         EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
      END
      IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
      EMPNAME = SPX:EMPNAME
*
*---- INITIALIZE EDIT.SUB
*
      MAT EDIT.COM = ""
      TYP = 0
      CALL WIPT.INPUT
      FILL = "#"
      ERY = 15
*
*---- DISPLAY SCREEN
*
      DIM SCRN(16)
      MAT SCRN = ""
      XXXXXXXX = " 123456789012345678901 "
      XXXXXXXX = "+---------------------+"
      SCRN(01) = "|    Store Pallet     |"
      SCRN(02) = "|---------------------|"
      SCRN(03) = "|@@@@@@@@@@@@@@@@@@@@@|"
      SCRN(04) = "|---------------------|"
      SCRN(05) = "| Pallet  : ########  |"
      SCRN(06) = "|                     |"
      SCRN(07) = "| Location: @@@@@@@@  |"
      SCRN(08) = "|                     |"
      SCRN(09) = "| Moved To: ########  |"
      SCRN(10) = "|                     |"
      SCRN(11) = "|                     |"
      SCRN(12) = "|------- Prior -------|"
      SCRN(13) = "| Pallet  : @@@@@@@@  |"
      SCRN(14) = "| Moved To: @@@@@@@@  |"
      SCRN(15) = "|                     |"
      SCRN(16) = "|                     |"
      XXXXXXXX = "+---------------------+"
      XXXXXXXX = " 123456789012345678901 "
*
      SLINE = @(-1)
      FOR SL = 1 TO 16
         SDATA = SCRN(SL)[2,21]
         CONVERT "#" TO " " IN SDATA
         CONVERT "@" TO " " IN SDATA
         SDATA = TRIMB(SDATA)
         LDATA = LEN(SDATA)
         LDONE = 0
         FOR N = 1 TO LDATA UNTIL LDONE
            IF SDATA[N,1] # " " THEN
               SLINE = SLINE:@((N-1),(SL-1)):SDATA[N,99]
               LDONE = 1
            END
         NEXT N
      NEXT SL
      PRINT SLINE:
      GOSUB 89990
*
*---- MAIN PROCESSING
*
1000 *
      PRINT @(0,2):EMPNAME:
      LOOP
         TYP=7; X=11; Y=4; MINL=8; MAXL=8; EX=0; EY=10; ERY=10
         PATRN="1A7N"
         O.R="O"; DEFAULT=""
         CALL WIPT.INPUT
         GOSUB 89990
      UNTIL VALUE = "" OR VALUE = "END" DO
         CALL WIPT.CHECK.DIGIT("T", VALUE, "10RL", CKDIG, VALID)
         IF NOT(VALID) THEN
            ERRMSG = "INVALID PALLET ID"
            GOSUB 91000
            GOTO 1090
         END
         PAL.ID = VALUE
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID ELSE
            ERRMSG = "PALLET NOT ON FILE"
            GOSUB 91000
            GOTO 1090
         END
         PRINT @(11,06):WIPTP.MLOC<1,1>"L#8":
1080 *
         TYP=7; X=11; Y=8; MINL=4; MAXL=8
         PATRN="1A1N1A0X":VM:"1A1N-0X":VM:"'SHREDDER'":VM:"'VENDOR'"
         EX=0; EY=10; ERY=10
         IF WIPTP.MLOC<1,1> # "????" THEN
            O.R="O"; DEFAULT=WIPTP.MLOC<1,1>
         END
         CALL WIPT.INPUT
         GOSUB 89990
         IF VALUE = "END" THEN RETURN
         IF VALUE # "" THEN
            NEWLOC = VALUE
            MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PAL.ID LOCKED
               ERRMSG = "** Pallet Locked **"
               GOSUB 91000
               GOTO 1080
            END ELSE
               MAT WIPTP.REC = ""
            END
            PLOC = WIPTP.MLOC<1,1>
            PQTY = WIPTP.CQTY
            GOSUB 2000
            CALL WIPT.LOC.UPD(CONO,PAL.ID,PLOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
*NA         CALL WIPT.HIST.UPD(CONO,PLOC,PQTY,MAT WIPTP.REC,WIP.TRACK.HIST,ERRMSG)
            MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PAL.ID
            PRINT @(11,12):PAL.ID"L#8":
            PRINT @(11,13):NEWLOC"L#8":
            PRINT @(00,14):@(-4):
            IF WIPTP.SEQ >= 900 THEN
               PRINT @(00,14):BEL:BEL:" **** USE LAST **** ":
            END
         END
         PRINT @(11,04):@(-4):
         PRINT @(11,06):@(-4):
         PRINT @(11,08):@(-4):
         GOSUB 89990
1090  REPEAT
      GOTO 99999
*
*---- UPDATE PALLET LOCATION
*
2000 *
      PREV.LOC = WIPTP.MLOC<1,1>
      IF NEWLOC # "" AND NEWLOC # WIPTP.MLOC<1,1> THEN
         CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
         WIPTP.MLOC  = INSERT(WIPTP.MLOC,1,1,0,NEWLOC)
         WIPTP.MDATE = INSERT(WIPTP.MDATE,1,1,0,CDATE)
         WIPTP.MTIME = INSERT(WIPTP.MTIME,1,1,0,CTIME)
         WIPTP.MEMP  = INSERT(WIPTP.MEMP,1,1,0,EMPID)
         IF NEWLOC = "VENDOR" OR NEWLOC = "SHREDDER" OR NEWLOC[1,3] = "B1-" THEN
            BEGIN CASE
            CASE NEWLOC = "VENDOR"
               ACODE = "V"
            CASE NEWLOC = "SHREDDER"
               ACODE = "S"
            CASE NEWLOC[1,3] = "B1-"
               ACODE = "C"
            END CASE
            WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,ACODE)
            WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,(-WIPTP.CQTY))
            WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
            WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
            WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0,EMPID)
            WIPTP.CQTY = 0
         END
         IF WIPTP.AQTY<1,1> < 0 THEN
            REVFLAG = 0
            IF WIPTP.ACODE<1,1> = "V" AND PREV.LOC = "VENDOR" THEN REVFLAG = 1
            IF WIPTP.ACODE<1,1> = "S" AND PREV.LOC = "SHREDDER" THEN REVFLAG = 1
            IF WIPTP.ACODE<1,1> = "C" AND PREV.LOC[1,3] = "B1-" THEN REVFLAG = 1
            IF REVFLAG THEN
               WIPTP.CQTY = -WIPTP.AQTY<1,1>
               WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,WIPTP.ACODE<1,1>)
               WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,WIPTP.CQTY)
               WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
               WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
               WIPTP.AEMP = INSERT(WIPTP.AEMP,1,1,0,EMPID)
            END
         END
      END
*
*---- Remove outstanding Stitcher Delivery and Pick-up requests
*
      IF PREV.LOC[1,3] = "B1-" OR NEWLOC[1,3] = "B1-" THEN
         MATREADU WIPTR.REC FROM WIP.TRACK.CONTROL, CONO:"REQ" THEN
            RCNT = DCOUNT(WIPTR.DATE,VM)
            FOR RPTR = RCNT TO 1 STEP -1
               DELFLAG = 0
*              IF WIPTR.TYPE<1,RPTR> = "P" AND WIPTR.CCTR<1,RPTR> = PREV.LOC THEN DELFLAG = 1
               IF WIPTR.TYPE<1,RPTR> = "P" THEN
                  IF WIPTR.CCTR<1,RPTR> = PREV.LOC THEN
                     IF WIPTR.JOB<1,RPTR> = WIPTP.JOB THEN
                        IF FIELD(WIPTR.FORM<1,RPTR>,".",1) = WIPTP.FORM THEN
                           IF FIELD(WIPTR.FORM<1,RPTR>,".",2) = WIPTP.VER THEN
                              IF WIPTR.PTYPE<1,RPTR> = "" OR WIPTR.PTYPE<1,RPTR> = WIPTP.TYPE THEN
                                 DELFLAG = 1
                              END
                           END
                        END
                     END
                  END
               END
*              IF WIPTR.TYPE<1,RPTR> = "D" AND WIPTR.CCTR<1,RPTR> = NEWLOC THEN DELFLAG = 1
               IF WIPTR.TYPE<1,RPTR> = "D" THEN
                  IF WIPTR.CCTR<1,RPTR> = NEWLOC THEN
                     IF WIPTR.JOB<1,RPTR> = WIPTP.JOB THEN
                        IF FIELD(WIPTR.FORM<1,RPTR>,".",1) = WIPTP.FORM THEN
                           IF FIELD(WIPTR.FORM<1,RPTR>,".",2) = WIPTP.VER THEN
                              IF WIPTR.PTYPE<1,RPTR> = "" OR WIPTR.PTYPE<1,RPTR> = WIPTP.TYPE THEN
                                 DELFLAG = 1
                              END
                           END
                        END
                     END
                  END
               END
               IF DELFLAG THEN
                  WIPTR.DATE   = DELETE(WIPTR.DATE,1,RPTR,0)
                  WIPTR.TIME   = DELETE(WIPTR.TIME,1,RPTR,0)
                  WIPTR.TYPE   = DELETE(WIPTR.TYPE,1,RPTR,0)
                  WIPTR.CCTR   = DELETE(WIPTR.CCTR,1,RPTR,0)
                  WIPTR.JOB    = DELETE(WIPTR.JOB,1,RPTR,0)
                  WIPTR.FORM   = DELETE(WIPTR.FORM,1,RPTR,0)
                  WIPTR.USER   = DELETE(WIPTR.USER,1,RPTR,0)
                  WIPTR.PALLET = DELETE(WIPTR.PALLET,1,RPTR,0)
                  WIPTR.PTYPE  = DELETE(WIPTR.PTYPE,1,RPTR,0)
               END
            NEXT RPTR
            MATWRITE WIPTR.REC ON WIP.TRACK.CONTROL, CONO:"REQ"
         END LOCKED
            NULL
         END ELSE
            RELEASE WIP.TRACK.CONTROL, CONO:"REQ"
         END
      END
      RETURN
*
*---- DRAW BORDER
*
89990 *
      IF TEST.MODE THEN
         FOR SL = 1 TO 16
            PRINT @(21,(SL-1)):"|":
         NEXT SL
         PRINT @(0,16):"---------------------+":
      END
      RETURN
*
*---- ERROR ROUTINE
*
91000 *
      PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG:
      INPUT REPLY,1:
      PRINT @(0,ERY):@(-4):
      ERY = 15
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      RETURN
   END
