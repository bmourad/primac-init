*********************************************************************
*
* PROGRAM  - WIPT.CHANGE.LOC
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 05/27/96
*
* DESCRIPTION
*
* This program is used to define the locations in the warehouse which
* are to be re-assigned new numbers.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>WTR.CPYLIB>WIP.TRACK.LOC
*COPY>WTR.CPYLIB>WIP.TRACK.CONTROL
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- PRE-INITIALIZATION
*
      PROCREAD PARAM ELSE PARAM = ""
      ACTION = PARAM<1>
      ACTION = "M"                       ;*** TEST ***
*
*---- INITIALIZE SYSCOM
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOTO 93000
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
         GOTO 93000
      END
      OPEN "","WIP.TRACK.CONTROL" TO WIP.TRACK.CONTROL ELSE
         ERRMSG = "CANNOT OPEN WIP.TRACK.CONTROL FILE"
         GOTO 93000
      END
      OPEN "","WTR.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN WTR.SCREENS FILE"
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      CONO = ""
      MAT COMP.REC = ""
      CALL GET.CONO (CONO, MAT COMP.REC)
      IF CONO = "END" THEN GOTO 99999
*---- INITIALIZE EDIT.SUB
*     MAT EDIT.COM = ""
*     TYP = 0
*     CALL EDIT.SUB
      FILL = "#"
*---- INITIALIZE SCRN.EDIT
      MAT SCV.REC = ""
      MAT EDIT.COM.DRIVER = ""
      ECD.SCRN.CNT = 1
      ECD.SCRN.NAME<1> = "WIPT.CHANGE.LOC"
      ECD.ACTION=1; CALL SCRN.EDIT
      ECD.SCRN.NO = 1
      ESN = ECD.SCRN.NO
      ECD.ACTION=2; CALL SCRN.EDIT
*---- INITIALIZE OTHER VARIABLES
      BEGIN.PAGE = 10
      PAGE.SIZE = 10
      LINE.SPACE = 1
      LINES = 0
      LN = ""
      OLD.START = ""
      CURCNT = ""
      NEWCNT = ""
      SP2 = SPACE(2)
      SP4 = SPACE(4)
      SP6 = SPACE(6)
      GOTO 110
*
*---- MAIN PROCESSING
*
100 *
      RELEASE
      ECD.ACTION=6; CALL SCRN.EDIT
      MAT SCV.REC = ""
110 *
      SCV.REC(1)<ESN> = DATE()
      ECD.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
      NEW.REC = 0
      IF ACTION = "M" THEN
         MATREADU WIPTC.REC FROM WIP.TRACK.CONTROL, CONO:"CHGLOC" ELSE
            MAT WIPTC.REC = ""
            NEW.REC = 1
         END
      END ELSE
         MATREAD WIPTC.REC FROM WIP.TRACK.CONTROL, CONO:"CHGLOC" ELSE
            MAT WIPTC.REC = ""
         END
      END
120 *
      IF NEW.REC THEN
         FOR REF = 1 TO 1
            ON REF GOSUB 1010
            IF ECD.RET.VALUE = "END" THEN GOTO 99999
         NEXT REF
         LINES = 0
         OPT = "A"
         GOTO 510
      END ELSE
         GOSUB 80000
         GOSUB 81000
         LINES = DCOUNT(WIPTC.CURLOC,VM)
         LN = 1
         OLD.START = ""
         GOSUB 50000
      END
*
*---- GET OPERATOR REPLY
*
500 *
      BEGIN CASE
      CASE ACTION = "M"
         ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
      CASE 1
         ECD.NUM=23; ECD.ACTION=4; CALL SCRN.EDIT
      END CASE
      OPT = ECD.RET.VALUE
510 *
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         IF ACTION = "M" THEN
            MISMATCH = 0
            READ VREC FROM WIP.TRACK.CONTROL, CONO:"CHGLOC" ELSE VREC = ""
            FOR VPTR = 1 TO WIPTC.SIZE UNTIL MISMATCH
               IF WIPTC.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
            NEXT VPTR
            IF MISMATCH THEN
               ECD.NUM=25; ECD.ACTION=4; CALL SCRN.EDIT
               IF ECD.RET.VALUE # "Y" THEN GOTO 500
            END
         END
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010
      CASE OPT = "A" AND LINES < 500
         MODE = "A"
         DONE = 0
         FOR LN = LINES+1 TO 500 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINES = LINES + 1
            END
         NEXT LN
         LN = LINES
         OLD.START = ""
         GOSUB 50000
      CASE OPT = "C" AND LINES > 0
         MODE = "C"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               OLD.START = ""
               GOSUB 50000
            END
         END
      CASE OPT = "D" AND LINES > 0
         MODE = "D"
         GOSUB 650
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            IF ECD.RET.VALUE = "C" THEN
               FOR LN = LINES TO 1 STEP -1
                  IF WIPTC.STATUS<1,LN> = "C" THEN
                     GOSUB 700
                     LINES = LINES - 1
                  END
               NEXT LN
               LN = 1
            END ELSE
               LN = ECD.RET.VALUE
               GOSUB 700
               LINES = LINES - 1
            END
            IF LN > LINES THEN LN = LN - 1
            OLD.START = ""
            GOSUB 50000
         END
      CASE OPT = "I" AND LINES > 0
         MODE = "I"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 800
            LINES = LINES + 1
            OLD.START = ""
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               GOSUB 700
               LINES = LINES - 1
               OLD.START = ""
               GOSUB 50000
            END
         END
      CASE OPT = "S" OR OPT = "SF"
         LN = OLD.START + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 50000
      CASE OPT = "SR"
         LN = OLD.START - PAGE.SIZE
         IF LN < 1 THEN LN = 1
         GOSUB 50000
      CASE OPT = "ST"
         LN = 1
         GOSUB 50000
      CASE OPT = "SB"
         LN = LINES
         IF LN < 1 THEN LN = 1
         GOSUB 50000
      CASE OPT = "R"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            ECD.SCRN.NO = 2
*           ECD.ACTION=2; CALL SCRN.EDIT
*           CALL ANOTHER.SUBROUTINE(AS1,AS2,AS3)
            PRINT @(-1)
            PRINT @(20,12):"S U B R O U T I N E   S I M U L A T I O N"
            SLEEP 3
*
            ECD.SCRN.NO = ESN
            ECD.ACTION=2; CALL SCRN.EDIT
            GOSUB 80050
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "P"
         GOSUB 85000
         ERRMSG = "** COMPLETED **"; GOSUB 91000
      CASE OPT = "F"
         MATWRITE WIPTC.REC ON WIP.TRACK.CONTROL, CONO:"CHGLOC"
         GOTO 99999
      END CASE
      GOTO 500
*
*---- GET LINE NUMBER
*
600 *
      GOSUB 50000
      ECD.MINV = START.LINE
      ECD.MAXV = LAST.LINE
      ECD.NUM=22; ECD.ACTION=4; CALL SCRN.EDIT
      RETURN
*
*---- GET LINE NUMBER
*
650 *
      GOSUB 50000
      MINV = START.LINE
      MAXV = LAST.LINE
      ECD.NUM=32; ECD.ACTION=4; CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = ""
      CASE ECD.RET.VALUE = "C"
      CASE NOT(NUM(ECD.RET.VALUE))
         ERRMSG = "Invalid Reply"; GOSUB 91000
         GOTO 650
      CASE ECD.RET.VALUE < MINV OR ECD.RET.VALUE > MAXV
         ERRMSG = "Invalid Reply"; GOSUB 91000
         GOTO 650
      END CASE
      RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
      WIPTC.CURLOC = DELETE(WIPTC.CURLOC,1,LN,0)
      CURCNT = DELETE(CURCNT,1,LN,0)
      WIPTC.NEWLOC = DELETE(WIPTC.NEWLOC,1,LN,0)
      NEWCNT = DELETE(NEWCNT,1,LN,0)
      WIPTC.STATUS = DELETE(WIPTC.STATUS,1,LN,0)
      GOSUB 81000
      RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
      WIPTC.CURLOC = INSERT(WIPTC.CURLOC,1,LN,0,"")
      CURCNT = INSERT(CURCNT,1,LN,0,"")
      WIPTC.NEWLOC = INSERT(WIPTC.NEWLOC,1,LN,0,"")
      NEWCNT = INSERT(NEWCNT,1,LN,0,"")
      WIPTC.STATUS = INSERT(WIPTC.STATUS,1,LN,0,"")
      GOSUB 81000
      RETURN
*
*---- GET DESCRIPTION
*
1010 *
      ECD.NUM=2; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      WIPTC.DESC = ECD.RET.VALUE
      RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
      ECD.SUB.NUM = LN
      ECD.NUM=11; ECD.ACTION=5; CALL SCRN.EDIT
10100 *
      SCV.REC(12)<ESN,LN> = WIPTC.CURLOC<1,LN>
      ECD.SUB.NUM = LN
      IF MODE = "A" AND LN > 1 THEN
         PREVLOC = WIPTC.CURLOC<1,LN-1>
         PREVPFX = PREVLOC[1,LEN(PREVLOC)-1]
         PREVSFX = PREVLOC[LEN(PREVLOC),1]
         BEGIN CASE
         CASE PREVSFX = "A"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"B"
         CASE PREVSFX = "B"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"C"
         CASE PREVSFX = "C"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"D"
         END CASE
      END
      ECD.NUM=12; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      LOCATE ECD.RET.VALUE IN WIPTC.CURLOC<1>,1 SETTING P THEN
         ERRMSG = "Duplicate entry on line #":P; GOSUB 91000
         GOTO 10100
      END
      MATREAD WIPTL.REC FROM WIP.TRACK.LOC, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Invalid location. Try again! "
         GOSUB 91000
         GOTO 10100
      END
      TEMP.MF1 = ECD.RET.VALUE
      TEMP.MF2 = DCOUNT(WIPTL.PALLET,VM)
      SCV.REC(13)<ESN,LN> = TEMP.MF2
      ECD.SUB.NUM = LN
      ECD.NUM=13; ECD.ACTION=5; CALL SCRN.EDIT
10200 *
      ECD.SUB.NUM = LN
      IF MODE = "A" AND LN > 1 THEN
         PREVLOC = WIPTC.NEWLOC<1,LN-1>
         PREVPFX = PREVLOC[1,LEN(PREVLOC)-1]
         PREVSFX = PREVLOC[LEN(PREVLOC),1]
         BEGIN CASE
         CASE PREVSFX = "A"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"B"
         CASE PREVSFX = "B"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"C"
         CASE PREVSFX = "C"
            ECD.O.R="O"; ECD.DEFAULT=PREVPFX:"D"
         END CASE
      END
      ECD.NUM=14; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      LOCATE ECD.RET.VALUE IN WIPTC.NEWLOC<1>,1 SETTING P THEN
         ERRMSG = "Duplicate entry on line #":P; GOSUB 91000
         GOTO 10200
      END
      MATREAD WIPTL.REC FROM WIP.TRACK.LOC, CONO:ECD.RET.VALUE ELSE
         MAT WIPTL.REC = ""
      END
      TEMP.MF3 = ECD.RET.VALUE
      TEMP.MF4 = DCOUNT(WIPTL.PALLET,VM)
      SCV.REC(15)<ESN,LN> = TEMP.MF4
      ECD.SUB.NUM = LN
      ECD.NUM=15; ECD.ACTION=5; CALL SCRN.EDIT
      BEGIN CASE
      CASE TEMP.MF2 = 0 AND TEMP.MF4 > 0
         TEMP.MF5 = "C"
      CASE TEMP.MF2 > 0 AND TEMP.MF4 = 0
         TEMP.MF5 = ""
      CASE TEMP.MF2 > 0 AND TEMP.MF4 > 0
         TEMP.MF5 = "I"
      CASE TEMP.MF2 = 0 AND TEMP.MF4 = 0
      END CASE
      SCV.REC(16)<ESN,LN> = TEMP.MF5
      ECD.SUB.NUM = LN
      ECD.NUM=16; ECD.ACTION=5; CALL SCRN.EDIT
19900 *
      WIPTC.CURLOC<1,LN> = TEMP.MF1
      CURCNT<1,LN> = TEMP.MF2
      WIPTC.NEWLOC<1,LN> = TEMP.MF3
      NEWCNT<1,LN> = TEMP.MF4
      WIPTC.STATUS<1,LN> = TEMP.MF5
      RETURN
19950 *
      GOSUB 81000
      RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START THEN RETURN
      OLD.START = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         PRINT @(03,SLN) : @(-4) : N "R#3" :
         PRINT @(08,SLN) : SCV.REC(12)<ESN,N> "L#8" :
         PRINT @(18,SLN) : SCV.REC(13)<ESN,N> "R#3" :
         PRINT @(26,SLN) : SCV.REC(14)<ESN,N> "L#8" :
         PRINT @(36,SLN) : SCV.REC(15)<ESN,N> "R#3" :
         PRINT @(45,SLN) : SCV.REC(16)<ESN,N> "L#1" :
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         PRINT @(0,SLN) : @(-4) :
      NEXT N
      RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
      SCV.REC(1)<ESN> = DATE()
      SCV.REC(2)<ESN> = WIPTC.DESC
80050 *
      ECD.ACTION=3; CALL SCRN.EDIT
      RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
      REFCNT = DCOUNT(WIPTC.CURLOC,VM)
      FOR REF = 1 TO REFCNT
         CLOC = WIPTC.CURLOC<1,REF>
         MATREAD WIPTL.REC FROM WIP.TRACK.LOC, CONO:CLOC ELSE MAT WIPTL.REC=""
         CURCNT<1,REF> = DCOUNT(WIPTL.PALLET,VM)
         NLOC = WIPTC.NEWLOC<1,REF>
         MATREAD WIPTL.REC FROM WIP.TRACK.LOC, CONO:NLOC ELSE MAT WIPTL.REC=""
         NEWCNT<1,REF> = DCOUNT(WIPTL.PALLET,VM)
      NEXT REF
      SCV.REC(12)<ESN> = WIPTC.CURLOC
      SCV.REC(13)<ESN> = CURCNT
      SCV.REC(14)<ESN> = WIPTC.NEWLOC
      SCV.REC(15)<ESN> = NEWCNT
      SCV.REC(16)<ESN> = WIPTC.STATUS
      RETURN
*
*---- PRINT RE-ASSIGNMENT REPORT
*
85000 *
      CDATE = DATE()
      CTIME = TIME()
      IF CTIME < 10 THEN CDATE = DATE()
      HD1A = (OCONV(CDATE,"D2/"):" @ ":OCONV(CTIME,"MTS")[1,5])"L#30"
      HD1B = (SPACE((60-LEN(CO.NAME))/2):CO.NAME)"L#60"
      HD1C = "PAGE ""R#30"
      HD1 = HD1A:HD1B:HD1C
      HD2 = "L O C A T I O N   R E - A S S I G N M E N T   R E P O R T"
      HD2 = (SPACE((120-LEN(HD2))/2):HD2)"L#120"
      SH1 = ""
      SH2 = ""
      SH3 = ""
      FOR COL = 1 TO 4
         SH1 = SH1:SP4:"     Current     New     "
         SH2 = SH2:SP6:"Ln#  Location  Location  "
         SH3 = SH3:SP6:"---  --------  --------  "
      NEXT COL
      PRINTER ON
      PAGE.CNT = INT((LINES-1)/200)+1
      FOR PAGE.NO = 1 TO PAGE.CNT
         PRINT CHAR(12):
         PRINT HD1:PAGE.NO
         PRINT HD2
         PRINT
         PRINT WIPTC.DESC
         PRINT
         PRINT SH1
         PRINT SH2
         PRINT SH3
         SLN = (PAGE.NO-1)*200
         FOR L = 1 TO 50
            PLINE = ""
            FOR COL = 1 TO 4
               P = SLN + (COL-1) * 50 + L
               IF P <= LINES THEN
                  PLINE = PLINE:SP4:P"R#3"
                  PLINE = PLINE:SP2:WIPTC.CURLOC<1,P>"L#8"
                  PLINE = PLINE:SP2:WIPTC.NEWLOC<1,P>"L#8"
                  PLINE = PLINE:SP1:WIPTC.STATUS<1,P>"L#1"
               END
            NEXT COL
            IF PLINE # "" THEN PRINT PLINE
         NEXT L
      NEXT PAGE.NO
      PRINT CHAR(12):
      PRINTER OFF
      PRINTER CLOSE
      RETURN
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      PRINT @(-1):
   END
