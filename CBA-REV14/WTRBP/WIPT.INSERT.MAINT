*********************************************************************
*
* PROGRAM  - WIPT.INSERT.MAINT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/01/95
*
* DESCRIPTION
*
* This program is used to receive pallets of inserts into the warehouse.
*
*T22322 ct6 01/16/1998 * Add WIP Tracking module to Bawden with
*                        modifications.
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26032 cmykleb 06/21/2002 * Allow cloning of a record.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>WTR.CPYLIB>WIP.TRACK.FORM
*COPY>WTR.CPYLIB>WIP.TRACK.PALLET
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>VEND
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*T22322v
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>WTR.CPYLIB>WIP.TRACK.TO.JOB
*COPY>WTR.CPYLIB>WIPT.STORAGE.LOC
*T22322^
*
*---- PRE-INITIALIZATION
*
   PROCREAD PARAM ELSE PARAM = ""
   ACTION = PARAM<1>
*
*---- INITIALIZE SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 93000
   END
   OPEN "","PREFIX" TO PREFIX ELSE
      ERRMSG = "CANNOT OPEN PREFIX FILE"
      GOTO 93000
   END
   OPEN "","XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "CANNOT OPEN XREF.DATA FILE"
      GOTO 93000
   END
   OPEN "","WTR.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN WTR.SCREENS FILE"
      GOTO 93000
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG = "CANNOT OPEN JOB FILE"
      GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER FILE"
      GOTO 93000
   END
   OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
      ERRMSG = "CANNOT OPEN CUSTOMER.XREF FILE"
      GOTO 93000
   END
   OPEN "","VEND" TO VEND ELSE
      ERRMSG = "CANNOT OPEN VEND FILE"
      GOTO 93000
   END
   OPEN "","VENDOR.XREF" TO VENDOR.XREF ELSE
      ERRMSG = "CANNOT OPEN VENDOR.XREF FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.FORM" TO WIP.TRACK.FORM ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.FORM FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.LOC" TO WIP.TRACK.LOC ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.LOC FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.HIST" TO WIP.TRACK.HIST ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.HIST FILE"
      GOTO 93000
   END
*T22322v
   OPEN "","COST.CNTR" TO COST.CNTR ELSE
      ERRMSG = "CANNOT OPEN COST.CNTR FILE"
      GOTO 93000
   END
   OPEN "","WIP.TRACK.TO.JOB" TO WIP.TRACK.TO.JOB ELSE
      ERRMSG = "CANNOT OPEN WIP.TRACK.TO.JOB FILE"
      GOTO 93000
   END
   OPEN "","WIPT.STORAGE.LOC" TO WIPT.STORAGE.LOC ELSE
      ERRMSG = "CANNOT OPEN WIPT.STORAGE.LOC FILE"
      GOTO 93000
   END
*T22322^
*
*---- INITIALIZATION
*
   CONO = ""
   MAT COMP.REC = ""
   CALL GET.CONO (CONO, MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99999
   MAT GEN.XREF.REC = ""
   GXR.CO = CONO
*---- INITIALIZE EDIT.SUB
*     MAT EDIT.COM = ""
*     TYP = 0
*     CALL EDIT.SUB
   FILL = "#"
*---- INITIALIZE SCRN.EDIT
   MAT SCV.REC = ""
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = "WIPT.INSERT.MAINT"
   ECD.ACTION=1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   ESN = ECD.SCRN.NO
   ECD.ACTION=2; CALL SCRN.EDIT
*---- INITIALIZE OTHER VARIABLES
   PALLET.ID = ""
   PAGE.WIDTH = 80
   EMPID = ""
   ESC = CHAR(27)
   PREV.INP.JOB = ""
   PREV.INP.CNAME = ""
   PREV.INP.FORM = ""
*T22322      PREV.INP.SEQ = ""
   PREV.INP.QTY = ""
   PREV.INP.LOC = ""
   PREV.INP.VEND = ""
   PREV.INP.VNAME = ""
   PREV.INP.DESC = ""
*T22322v
   PREV.TO.JOB = ""
   PREV.TO.OPER = ""
   PREV.CARTONS = ""
*T22322^
   GOTO 110
*
*---- MAIN PROCESSING
*
100 *
   RELEASE
   ECD.ACTION=6; CALL SCRN.EDIT
   MAT SCV.REC = ""
110 *
   SCV.REC(1)<ESN> = DATE()
   ECD.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
   SCV.REC(2)<ESN> = PALLET.ID
   IF ACTION = "M" THEN ECD.O.R = "O"
   ECD.NUM=2; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 99999
   ECD.RET.VALUE = OCONV(ECD.RET.VALUE,"MCU")
   SCV.REC(2)<ESN> = ECD.RET.VALUE
   ECD.NUM=2; ECD.ACTION=5; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "" THEN
      CALL WIPT.CHECK.DIGIT("T", ECD.RET.VALUE, "10RL", CKDIG, VALID)
      IF NOT(VALID) THEN
         ERRMSG = "Invalid Pallet ID"
         GOSUB 91000
         GOTO 110
      END
   END
   PALLET.ID = ECD.RET.VALUE
   BEGIN CASE
      CASE ACTION = "M" AND PALLET.ID = ""
         MAT WIPTP.REC = ""
         NEW.REC = 1
      CASE ACTION = "M"
         NEW.REC = 0
      * T26126 v
         MATREADU WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALLET.ID LOCKED
            ERRMSG = 'PALLET record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 100 
         END ELSE
      * T26126 ^
            MAT WIPTP.REC = ""
            NEW.REC = 1
         END
      CASE 1
         MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALLET.ID ELSE
            ERRMSG = "Invalid Pallet ID"
            GOSUB 91000
            GOTO 100
         END
   END CASE
   PREV.JOB = WIPTP.JOB
   BEGIN CASE
*T22322v
*      CASE WIPTP.VER = "" AND WIPTP.SIG = ""
*         PREV.FORM = WIPTP.FORM
*      CASE WIPTP.SIG = ""
*         PREV.FORM = WIPTP.FORM:".":WIPTP.VER
*      CASE 1
*         PREV.FORM = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
      CASE WIPTP.VER = ""
         PREV.FORM = WIPTP.FORM
      CASE 1
         PREV.FORM = WIPTP.FORM:".":WIPTP.VER
*T22322^
   END CASE
   PREV.LOC = WIPTP.MLOC<1,1>
   PREV.QTY = WIPTP.CQTY
   PREV.VEND = WIPTP.VEND
   PREV.DESC = WIPTP.DESC
*T22322v
   PREV.TO.JOB = WIPTP.TO.JOB
   PREV.TO.OPER = WIPTP.TO.OPER
*T22322^
120 *
   IF NEW.REC THEN
      SCV.REC(3)<ESN> = PREV.INP.JOB
      SCV.REC(6)<ESN> = PREV.INP.CNAME
      SCV.REC(7)<ESN> = PREV.INP.FORM
*T22322         SCV.REC(19)<ESN> = PREV.INP.SEQ
      SCV.REC(9)<ESN> = PREV.INP.QTY
      SCV.REC(10)<ESN> = PREV.INP.LOC
      SCV.REC(11)<ESN> = PREV.INP.VEND
      SCV.REC(12)<ESN> = PREV.INP.VNAME
      SCV.REC(13)<ESN> = PREV.INP.DESC
      ECD.ACTION=3; CALL SCRN.EDIT
      FOR REF = 1 TO 7
         ON REF GOSUB 1010,1020,1030,1040,1050,1060,1070
         IF ECD.RET.VALUE = "END" THEN GOTO 100
      NEXT REF
   END ELSE
      GOSUB 80000
   END
*
*---- GET OPERATOR REPLY
*
500 *
   BEGIN CASE
      CASE ACTION = "M"
         ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
      CASE 1
         ECD.NUM=23; ECD.ACTION=4; CALL SCRN.EDIT
   END CASE
   OPT = ECD.RET.VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         IF ACTION = "M" AND PALLET.ID # "" THEN
            MISMATCH = 0
            READ VREC FROM WIP.TRACK.PALLET, CONO:PALLET.ID ELSE VREC = ""
            FOR VPTR = 1 TO WIPTP.REC.SIZE UNTIL MISMATCH
               IF WIPTP.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
            NEXT VPTR
            IF MISMATCH THEN
               ECD.NUM=25; ECD.ACTION=4; CALL SCRN.EDIT
               IF ECD.RET.VALUE # "Y" THEN GOTO 500
            END
         END
         GOTO 100
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010,1020,1030,1040,1050,1060,1070
      CASE OPT = "PUR" AND PALLET.ID # ""
         ECD.NUM=24; ECD.ACTION=4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "Y" THEN
            DELETE WIP.TRACK.PALLET, CONO:PALLET.ID
            CURR.JOB = ""
            CURR.TO.JOB = "" ; * T22322
            CURR.FORM = ""
            GOSUB 89100
            GOTO 100
         END
      CASE OPT = "F" OR OPT = "P"
         CDATE=DATE(); CTIME=TIME(); IF CTIME < 10 THEN CDATE=DATE()
         IF NUM(WIPTP.FORM) THEN
            WIPTP.PTYPE = ""
         END ELSE
            WIPTP.PTYPE = "I"
         END
         IF WIPTP.DATE = "" THEN
            WIPTP.DATE = CDATE
            WIPTP.TIME = CTIME
         END
         CURR.JOB = WIPTP.JOB
         CURR.TO.JOB = WIPTP.TO.JOB
         BEGIN CASE
            CASE WIPTP.VER = ""
               CURR.FORM = WIPTP.FORM
            CASE 1
               CURR.FORM = WIPTP.FORM:".":WIPTP.VER
         END CASE
         IF WIPTP.MDATE = "" THEN
            WIPTP.MDATE = CDATE
            WIPTP.MTIME = CTIME
            WIPTP.MEMP = EMPID
         END
         BEGIN CASE
            CASE WIPTP.ACODE = ""
               WIPTP.IQTY = WIPTP.CQTY
               WIPTP.ACODE<1,1> = "N"
               WIPTP.AQTY<1,1> = WIPTP.CQTY
               WIPTP.ADATE<1,1> = CDATE
               WIPTP.ATIME<1,1> = CTIME
               WIPTP.AEMP<1,1> = EMPID
            CASE WIPTP.ACODE<1,1> = "N"
               WIPTP.IQTY = WIPTP.CQTY
               WIPTP.ACODE<1,1> = "N"
               WIPTP.AQTY<1,1> = WIPTP.CQTY
               WIPTP.ADATE<1,1> = CDATE
               WIPTP.ATIME<1,1> = CTIME
               WIPTP.AEMP<1,1> = EMPID
            CASE WIPTP.CQTY # PREV.QTY
               WIPTP.ACODE = INSERT(WIPTP.ACODE,1,1,0,"A")
               WIPTP.AQTY  = INSERT(WIPTP.AQTY,1,1,0,(WIPTP.CQTY-PREV.QTY))
               WIPTP.ADATE = INSERT(WIPTP.ADATE,1,1,0,CDATE)
               WIPTP.ATIME = INSERT(WIPTP.ATIME,1,1,0,CTIME)
               WIPTP.AEMP  = INSERT(WIPTP.AEMP,1,1,0,"")
         END CASE
         IF PALLET.ID = "" THEN
            GOSUB 89000
            PALLET.ID = PALID
         END
         GOSUB 89100
         CALL WIPT.LOC.UPD(CONO,PALLET.ID,PREV.LOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
         MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PALLET.ID
         PREV.INP.JOB = SCV.REC(3)<ESN>
         PREV.INP.CNAME = SCV.REC(6)<ESN>
         PREV.INP.FORM = SCV.REC(7)<ESN>
         PREV.INP.SEQ = SCV.REC(19)<ESN>
         PREV.INP.QTY = SCV.REC(9)<ESN>
         PREV.INP.LOC = SCV.REC(10)<ESN>
         PREV.INP.VEND = SCV.REC(11)<ESN>
         PREV.INP.VNAME = SCV.REC(12)<ESN>
         PREV.INP.DESC = SCV.REC(13)<ESN>
         WIPTF.ID = WIPTP.JOB:"!":WIPTP.FORM
         MATREADU WIPTF.REC FROM WIP.TRACK.FORM, CONO:WIPTF.ID ELSE MAT WIPTF.REC = ""
         MATWRITE WIPTF.REC ON WIP.TRACK.FORM, CONO:WIPTF.ID
         IF OPT = "P" THEN
            GOSUB 5100
*T26032 v
            IF ECD.RET.VALUE = "END" THEN GOTO 500
            GOSUB 5200
*T26032 ^
            IF ECD.RET.VALUE # "END" THEN GOSUB 5000
*T26032 v
            IF CLONE.CNT GT 0 THEN
               FOR X = 1 TO CLONE.CNT
                  GOSUB 89000
                  PALLET.ID = PALID
                  GOSUB 89100
                  CALL WIPT.LOC.UPD(CONO,PALLET.ID,PREV.LOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
                  MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PALLET.ID
                  GOSUB 5000
               NEXT X
            END
         END
         GOTO 100
      CASE 1
         ERRMSG = "Invalid selection. Try again! "; GOSUB 91000
   END CASE
   GOTO 500
*
*---- GET JOB NUMBER
*
1010 *
   ECD.NUM=3; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE = "" THEN
      ECD.NUM=6; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1010
      GXR.NAME = "CUSTOMER"
      GXR.XREF = CUSTOMER.XREF
      GXR.FILE = CUSTOMER
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION=2; CALL SCRN.EDIT
      GOSUB 80000
      IF GXR.ID = "" THEN GOTO 1010
      GXR.NAME = "JOB"
      GXR.XREF = CUSTOMER
      GXR.FILE = JOB
      GXR.SRCH.ID = GXR.ID
      CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION=2; CALL SCRN.EDIT
      GOSUB 80000
      IF GXR.ID = "" THEN GOTO 1010
      ECD.RET.VALUE = GXR.ID
   END
   MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate job ":ECD.RET.VALUE:". Try again! "
      GOSUB 91000
      SCV.REC(3)<ESN> = WIPTP.JOB
      GOTO 1010
   END
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG = "Cannot locate customer ":JOB.CUST:". Try again! "
      GOSUB 91000
      SCV.REC(3)<ESN> = WIPTP.JOB
      GOTO 1010
   END
   SCV.REC(3)<ESN> = ECD.RET.VALUE
   ECD.NUM=3; ECD.ACTION=5; CALL SCRN.EDIT
   SCV.REC(6)<ESN> = CUST.NAME
   ECD.NUM=6; ECD.ACTION=5; CALL SCRN.EDIT
   WIPTP.JOB = ECD.RET.VALUE
   RETURN
*
*---- GET INSERT CODE
*
1020 *
   ECD.NUM=7; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   FORMNO = ECD.RET.VALUE
   GOSUB 85100
   IF ERRMSG # "" THEN
      GOSUB 91000
      GOTO 1020
   END
   WIPTP.FORM = FNUM
   WIPTP.VER = VNUM
*T22322      WIPTP.SIG = SNUM
   SCV.REC(7)<ESN> = FORMNO
   ECD.NUM=7; ECD.ACTION=5; CALL SCRN.EDIT
   RETURN
*
*---- GET SKID NUMBER
*
1030 *
   ECD.NUM=18; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   WIPTP.SKID = ECD.RET.VALUE
   RETURN
*
*T22322v
**---- GET SEQUENCE NUMBER
**
*1040 *
*      ECD.NUM=19; ECD.ACTION=4; CALL SCRN.EDIT
*      IF ECD.RET.VALUE = "END" THEN RETURN
*      WIPTP.SEQ = ECD.RET.VALUE
*      RETURN
*
*---- GET TO-OPER
*
1040 *
   ECD.NUM=19; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE # "" THEN
      MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "INVALID COST CENTER"
         GOSUB 91000
         GOTO 1040
      END
      WIPTP.TO.OPER = ECD.RET.VALUE
   END
*
*---- GET TO-JOB
*
1045 *
   ECD.NUM=14; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE # "" THEN
      DIM TO.JOB.REC(JOB.REC.SIZE)
      MATREAD TO.JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "INVALID JOB NUMBER"
         GOSUB 91000
         GOTO 1045
      END
      WIPTP.TO.JOB = ECD.RET.VALUE
   END
   RETURN
*T22322^
*
*---- GET QUANTITY
*
1050 *
*T22322v
*      IF WIPTP.MLOC<1,1>="VENDOR" OR WIPTP.MLOC<1,1>="SHREDDER" THEN
   SL.LOC = WIPTP.MLOC<1,1>
   GOSUB 86000 ;* Check The Storage Location Range
   IF WIPSL.RANGE.ZERO = "Y" THEN
*T22322^
      ERRMSG = "Cannot adjust pallet at this location."
      GOSUB 91000
   END ELSE
      ECD.NUM=9; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      WIPTP.CQTY = ECD.RET.VALUE
   END
   IF NEW.REC THEN
1055 *
      ECD.NUM=10; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
*T22322v
      SL.LOC = ECD.RET.VALUE
      GOSUB 86000
      IF ERRMSG THEN GOSUB 91000; GOTO 1055
*T22322^
      WIPTP.MLOC = ECD.RET.VALUE
   END
   RETURN
*
*---- GET VENDOR
*
1060 *
   ECD.NUM=11; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   IF ECD.RET.VALUE = "" THEN
      ECD.NUM=12; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "" THEN
         GXR.NAME = "VENDOR"
         GXR.XREF = VENDOR.XREF
         GXR.FILE = VEND
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION=2; CALL SCRN.EDIT
         GOSUB 80000
         ECD.RET.VALUE = GXR.ID
      END
   END
   IF ECD.RET.VALUE = "" THEN
      MAT VEND.REC = ""
   END ELSE
      MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Cannot locate vendor ":ECD.RET.VALUE:". Try again! "
         GOSUB 91000
         SCV.REC(11)<ESN> = WIPTP.VEND
         GOTO 1060
      END
   END
   SCV.REC(11)<ESN> = ECD.RET.VALUE
   ECD.NUM=11; ECD.ACTION=5; CALL SCRN.EDIT
   SCV.REC(12)<ESN> = VEND.DESC
   ECD.NUM=12; ECD.ACTION=5; CALL SCRN.EDIT
   WIPTP.VEND = ECD.RET.VALUE
   RETURN
*
*---- GET INSERT DESCRIPTION
*
1070 *
   ECD.NUM=13; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   WIPTP.DESC = ECD.RET.VALUE
   RETURN
*
*---- PRINT LOAD FLAG
*
5000 *
   PRINTER ON
   PRINTER.INIT = ESC:"E"
   PRINTER.INIT = PRINTER.INIT:ESC:"&l0O"
   PRINTER.INIT = PRINTER.INIT:ESC:"(8U"
*T22322v
   PRINTER.INIT = PRINTER.INIT:ESC:"&l0L"  ;* Disable Perf Skipping
*T22322^
   PRINT PRINTER.INIT
*
*---- PRINT BARCODE PALLET ID
*
   HPI = 2.0
   VPI = 0.05
   BPT = 2.5
   VSI = 1.0
   BDATA = "*":PALLET.ID:"*"
   VDATA = PALLET.ID
   VPT = 10
   CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
   PLINE=CUST.NAME; PITCH=2.50; VPOS=2.25; WGT=3; GOSUB 5010
   PLINE="Job Number"; PITCH=10.00; VPOS=2.75; WGT=0; GOSUB 5020
   PLINE=WIPTP.JOB; PITCH=3.0; VPOS=3.375; WGT=3; GOSUB 5010
   PLINE="    Signature    "; PITCH=10.00; VPOS=3.875; WGT=0; GOSUB 5020
   BEGIN CASE
      CASE WIPTP.VER = ""
         PLINE = WIPTP.FORM
      CASE 1
         PLINE = WIPTP.FORM:".":WIPTP.VER
   END CASE
   PITCH=3.0; VPOS=4.5; WGT=3; GOSUB 5010
   PLINE="Quantity"; PITCH=10.00; VPOS=5.0; WGT=0; GOSUB 5020
   PLINE=OCONV(WIPTP.CQTY,"MD0,"); PITCH=4.0; VPOS=5.5; WGT=3; GOSUB 5010
   PLINE="To-Job":SPACE(54):"To-Cctr"; PITCH=10.00; VPOS=6.00; WGT=0; GOSUB 5020
   PLINE=WIPTP.TO.JOB:SPACE(29):WIPTP.TO.OPER:SPACE(2); PITCH=5.5; VPOS=6.375; WGT=3; GOSUB 5010
   PLINE="Vendor"; PITCH=10.00; VPOS=6.75; WGT=0; GOSUB 5020
   PLINE=VEND.DESC; PITCH=7.0; VPOS=7.125; WGT=3; GOSUB 5010
   PLINE="Description"; PITCH=10.00; VPOS=7.625; WGT=0; GOSUB 5020
   PLINE=WIPTP.DESC; PITCH=7.0; VPOS=8.0; WGT=3; GOSUB 5010
   PLINE="Pallet ID"; PITCH=10.00; VPOS=8.625; WGT=0; GOSUB 5020
   HPI = 2.0
   VPI = 8.75
   BPT = 2.5
   VSI = 1.0
   BDATA = "*":PALLET.ID:"*"
   VDATA = PALLET.ID
   VPT = 10
   CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
   PRINT CHAR(12):
   PRINTER OFF
   PRINTER CLOSE
   RETURN
*
*---- PRINT CENTERED TEXT
*
5010 *
   PAGE.WIDTH = 8                     ;* PAGE WIDTH IN INCHES
   MAXPITCH = INT((LEN(PLINE)+2) / PAGE.WIDTH * 100 + 0.99)
   MAXPITCH = OCONV(MAXPITCH,"MD2")
   IF MAXPITCH > PITCH THEN PITCH = MAXPITCH
5020 *
   PAGE.CHARS = INT(PAGE.WIDTH * PITCH)-2
   IF LEN(PLINE) >= PAGE.CHARS THEN
      PLINE = SPACE(1):PLINE[1,PAGE.CHARS]
   END ELSE
      PLINE = SPACE(1):SPACE(INT((PAGE.CHARS-LEN(PLINE))/2)):PLINE
   END
   FMT = ESC:"(s"
   FMT = FMT:"0p"                     ;* pitch (0 = fixed, 1 = variable)               ;* pitch (char / inch)
   FMT = FMT:PITCH:"h"                ;* pitch (char / inch)
   FMT = FMT:"0s"                     ;* italic (0 = no, 1 = yes)
   FMT = FMT:WGT:"b"                  ;* weight (0 = normal, 3 = bold)
   FMT = FMT:"4102T"                  ;* font = Letter Gothic
   VPOS = INT(VPOS * 720 + 0.5)
   FMT = FMT:ESC:"&a":VPOS:"V"
   PRINT FMT:PLINE
   RETURN
*T22322v
*
*---- Prompt for Print Queue
*
5100 *
   ECD.NUM=28; ECD.ACTION=4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
*   CMD = 'SETPTR ,,,,,,DEST ':ECD.RET.VALUE:',BRIEF'
*   UDTEXECUTE CMD CAPTURING JUNK
   CALL PMC_SETPTR(ECD.RET.VALUE,"","",JUNK)
   IF JUNK # "" THEN
      ERRMSG = "Invalid Print Queue.  Try again."
      GOSUB 91000
      GOTO 5100
   END
   RETURN
*T22322^
*T26032 v
*
*---- Prompt for Cloning
*
5200 *
   CLONE.CNT = 0
   ECD.NUM = 29; ECD.ACTION = 4 ; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN RETURN
   ECD.NUM = 30; ECD.ACTION = 4 ; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   CLONE.CNT = ECD.RET.VALUE
*T26032 ^
*
*---- LOAD SCREEN DATA
*
80000 *
   IF WIPTP.JOB = "" THEN
      MAT JOB.REC = ""
      MAT CUST.REC = ""
   END ELSE
      MATREAD JOB.REC FROM JOB, CONO:WIPTP.JOB THEN
         MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
            MAT CUST.REC = ""
         END
      END ELSE
         MAT JOB.REC = ""
         MAT CUST.REC = ""
         CUST.NAME = "???????????????"
      END
   END
   IF WIPTP.VEND = "" THEN
      MAT VEND.REC = ""
   END ELSE
      MATREAD VEND.REC FROM VEND, CONO:WIPTP.VEND ELSE
         MAT VEND.REC = ""
         VEND.DESC = "???????????????"
      END
   END
   SCV.REC(1)<ESN> = DATE()
   SCV.REC(2)<ESN> = PALLET.ID
   SCV.REC(3)<ESN> = WIPTP.JOB
   SCV.REC(6)<ESN> = CUST.NAME
   BEGIN CASE
      CASE WIPTP.VER = "" AND WIPTP.SIG = ""
         FORM.NO = WIPTP.FORM
      CASE WIPTP.SIG = ""
         FORM.NO = WIPTP.FORM:".":WIPTP.VER
      CASE 1
         FORM.NO = WIPTP.FORM:".":WIPTP.VER:".":WIPTP.SIG
   END CASE
   SCV.REC(7)<ESN> = FORM.NO
   SCV.REC(9)<ESN> = WIPTP.CQTY
   SCV.REC(10)<ESN> = WIPTP.MLOC<1,1>
   SCV.REC(11)<ESN> = WIPTP.VEND
   SCV.REC(12)<ESN> = VEND.DESC
   SCV.REC(13)<ESN> = WIPTP.DESC
   SCV.REC(18)<ESN> = WIPTP.SKID
*T22322v
*      SCV.REC(19)<ESN> = WIPTP.SEQ
   SCV.REC(19)<ESN> = WIPTP.TO.OPER
   SCV.REC(14)<ESN> = WIPTP.TO.JOB
*T22322^
80050 *
   ECD.ACTION=3; CALL SCRN.EDIT
   RETURN
*
*---- FORMAT FORM NUMBER
*
85100 *
   ERRMSG = ""
   FNUM = FIELD(FORMNO,".",1)
   VNUM = FIELD(FORMNO,".",2)
   BEGIN CASE
      CASE LEN(FNUM) = 3
         FOR N = 1 TO 3
            CH = FNUM[N,1]
            BEGIN CASE
               CASE CH >= "A" AND CH <= "Z"
               CASE CH >= "0" AND CH <= "9"
               CASE 1
                  ERRMSG = 1
            END CASE
         NEXT N
         IF ERRMSG = "" THEN
            BEGIN CASE
               CASE VNUM = ""
                  FORMNO = FNUM
               CASE VNUM = 0
                  ERRMSG = 2
               CASE LEN(VNUM) > 3
                  ERRMSG = 2
               CASE 1
                  VNUM = (1000+VNUM)[2,3]
                  FORMNO = FNUM:".":VNUM
            END CASE
         END
   END CASE
   BEGIN CASE
      CASE ERRMSG = 1
         ERRMSG = "Invalid form #, Try again! "
      CASE ERRMSG = 2
         ERRMSG = "Invalid run #, Try again! "
      CASE ERRMSG = 3
         ERRMSG = "Invalid sig #, Try again! "
   END CASE
   RETURN
*
*---- Get Storage Location Definition
*
86000 *
   ERRMSG = ""
   STMT = 'SSELECT WIPT.STORAGE.LOC WITH RANGE.START <= "':SL.LOC:'"'
   STMT = STMT:' AND WITH RANGE.END >= "':SL.LOC:'"'
   STMT = STMT:' AND WITH CONO = "':CONO:'"'
   PERFORM STMT CAPTURING GARBAGE
   MAT WIPSL.REC = ""
   READNEXT SL.ID THEN
      MATREAD WIPSL.REC FROM WIPT.STORAGE.LOC, SL.ID ELSE MAT WIPSL.REC = ""
      CLEARSELECT
   END ELSE
      ERRMSG = "*Undefined Location*"
   END
   RETURN
*T22322^
*
*---- GET NEXT PALLET ID
*
89000 *
   READVU PALID FROM CONTROL, CONO:"LAST.INS.PAL.ID",1 ELSE PALID = "N000000X"
   LOOP
      NPFX = PALID[1,1]
      NSEQ = PALID[2,6]
      NSEQ = NSEQ + 1
      IF NSEQ > 999999 THEN
         NPFX = CHAR(SEQ(NPFX)+1)
         NSEQ = 1
      END
      PALID = NPFX:(1000000+NSEQ)[2,6]
      CALL WIPT.CHECK.DIGIT("C", PALID, "10RL", CKDIG, VALID)
      PALID = PALID:CKDIG
      READ TREC FROM WIP.TRACK.PALLET, CONO:PALID ELSE TREC = "!@#$%"
   UNTIL TREC = "!@#$%" DO
   REPEAT
   WRITEV PALID ON CONTROL, CONO:"LAST.INS.PAL.ID",1
   RETURN
*
*---- UPDATE X-REF DATA
*
89100 *
   CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PALLET.ID,GEN.SKID,ERRMSG)
*T22322v
   CALL WIPT.UPDATE.TOJOB.XREF(CONO,PREV.TO.JOB,CURR.TO.JOB,PREV.JOB,CURR.JOB,ERRMSG)
*T22322^
   RETURN
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
*
*---- END OF PROGRAM
*
99999 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
END
