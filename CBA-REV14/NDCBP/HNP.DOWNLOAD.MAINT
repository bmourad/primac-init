*********************************************************************
*
* PROGRAM  - HNP.DOWNLOAD.MAINT
*
* AUTHOR   - Nick Amendola, NASTech, Inc.
*
* DATE     - 02/06/94
*
* DESCRIPTION
*
* This program is used to specify the download criteria for the
* automatic downloading of the shop-floor network controllers.
*
*T23448 bilal 11/19/1998 * ADD A DIVISION PROMPT
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>NDC.CPYLIB>DOWNLOAD
*COPY>PMC.CPYLIB>DIVISION
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC = ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
      PROCREAD PARAM ELSE PARAM = ""
      ACTION = PARAM<1>
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"
         GOSUB 90000
         STOP
      END
*****T23448 V
      OPEN "","DIVISION" TO DIVISION ELSE
         ERRMSG = "CANNOT OPEN DIVISION FILE"
         GOSUB 90000
         STOP
      END
*****T23448 ^
      OPEN "","DOWNLOAD" TO DOWNLOAD ELSE
         ERRMSG = "CANNOT OPEN DOWNLOAD FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","NDC.SCREENS" TO M.SCREENS ELSE
         ERRMSG = "CANNOT OPEN NDC.SCREENS FILE"
         GOSUB 90000
         STOP
      END
*
*---- DEFINE VALID FILES
*
      VALID.FILE = "";          VALID.DESC = ""
      VALID.FILE<1,1>  = "DIV"; VALID.DESC<1,1> = "Division"
      VALID.FILE<1,2>  = "DEP"; VALID.DESC<1,2> = "Department"
      VALID.FILE<1,3>  = "CTR"; VALID.DESC<1,3> = "Cost Center"
      VALID.FILE<1,4>  = "OPR"; VALID.DESC<1,4> = "Operation"
      VALID.FILE<1,5>  = "COP"; VALID.DESC<1,5> = "Cctr / Oper"
      VALID.FILE<1,6>  = "EMP"; VALID.DESC<1,6> = "Employee"
      VALID.FILE<1,7>  = "JOB"; VALID.DESC<1,7> = "Job"
      VALID.FILE<1,8>  = "INV"; VALID.DESC<1,8> = "Inventory"
      VALID.FILE<1,9>  = "SPL"; VALID.DESC<1,9> = "Spoilage Code"
      VALID.FILE<1,10> = "PMT"; VALID.DESC<1,10> = "Add'l Prompt"
*
*---- INITIALIZATION
*
      SCREEN INIT;#
      S$SCR = 1
      SCREEN DEFINE;HNP.DOWNLOAD.MAINT
      SCREEN FORMAT
      SCREEN COUNT;;11
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      LINE.CNT = 0
      REF.NO = ""
      CURR.REF.NO = ""
      NETID = ""
      REFRESH = 0
      GOTO 110
*
*---- MAIN PROCESSING
*
100 *
      RELEASE
      SCREEN CLEAR
110 *
      S$DATA(1)<S$SCR> = DATE()
      SCREEN DISPLAY;;1
      IF REFRESH THEN
         REFRESH = 0
         S$VALUE = NETID
      END ELSE
         S$DATA(2)<S$SCR> = NETID
         SCREEN FIELD;;2
         SCREEN INPUT;;2;GOTO 99999
         IF S$VALUE[1,1] = "0" THEN
            S$VALUE = S$VALUE + 0
            S$DATA(2)<S$SCR> = S$VALUE
            SCREEN DISPLAY;;2
         END
      END
      NEW.REC = 0
      IF ACTION = "M" THEN
         MATREADU DLOAD.REC FROM DOWNLOAD, S$VALUE THEN
            NULL
         END LOCKED
            ERRMSG = "Download in process or record locked by another user. Try again! "
            GOSUB 90000
            GOTO 100
         END ELSE
            MAT DLOAD.REC = ""
            NEW.REC = 1
         END
      END ELSE
         MATREAD DLOAD.REC FROM DOWNLOAD, S$VALUE ELSE
            ERRMSG = "Invalid Item. Try again! "
            GOSUB 90000
            GOTO 100
         END
         READ PCTL.REC FROM CONTROL,S$VALUE:'PNP.CTL' ELSE
            PCTL.REC<1> = '21600'
            PCTL.REC<2> = "2100"
            PCTL.REC<3> = "+"
         END
      END
      NETID = S$VALUE
120 *
      IF NEW.REC THEN
         MAT DLOAD.REC = ""
         DLOAD.FILE = VALID.FILE
         DLOAD.DESC = VALID.DESC
*T23448         FOR N = 1 TO 4
         FOR N = 1 TO 5
*T23448            ON N GOSUB 1010, 1020, 1030, 1040
            ON N GOSUB 1010, 1020, 1030, 1040, 1050
            IF S$VALUE = "END" THEN GOTO 100
         NEXT N
      END ELSE
         DCNT = DCOUNT(DLOAD.FILE,VM)
         VCNT = DCOUNT(VALID.FILE,VM)
         FOR N = DCNT+1 TO VCNT
            DLOAD.FILE<1,N> = VALID.FILE<1,N>
            DLOAD.DESC<1,N> = VALID.DESC<1,N>
         NEXT N
         IF DLOAD.FILE # VALID.FILE OR DLOAD.DESC # VALID.DESC THEN
            ERRMSG = "FILE CONVERSION REQUIRED"
            GOSUB 90000
            GOTO 100
         END
      END
      GOSUB 80000
      GOSUB 81000
      LINE.CNT = DCOUNT(DLOAD.FILE,VM)
      REF.NO = 1
      CURR.REF.NO = ""
      GOSUB 50000
*
*---- GET OPERATOR REPLY
*
500 *
      BEGIN CASE
      CASE ACTION = "M"
         SCREEN FIELD;;21
         SCREEN INPUT;;21
      CASE 1
         SCREEN FIELD;;23
         SCREEN INPUT;;23
      END CASE
      OPT = S$VALUE
510 *
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         IF ACTION = "M" THEN
            MISMATCH = 0
            READ VREC FROM DOWNLOAD, NETID ELSE VREC = ""
            FOR VPTR = 1 TO DLOAD.SIZE UNTIL MISMATCH
               IF DLOAD.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
            NEXT VPTR
            IF MISMATCH THEN
               SCREEN FIELD;;25
               SCREEN INPUT;;25
               IF S$VALUE # "Y" THEN GOTO 500
            END
         END
         GOTO 100
      CASE OPT = "R"
         REFRESH = 1
         GOTO 100
      CASE NUM(OPT)
*T23448         ON OPT GOSUB 1010, 1020, 1030, 1040
         ON OPT GOSUB 1010, 1020, 1030, 1040, 1050
      CASE OPT = "C"
         MODE = "C"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            IF S$VALUE = "A" THEN 
               R1 = 1; R2 = LINE.CNT
            END ELSE 
               R1 = S$VALUE; R2 = R1
            END
            FOR REF.NO = R1 TO R2 UNTIL S$VALUE = "END"
               GOSUB 50000
               GOSUB 10000
               IF S$VALUE = "END" THEN
                  CURR.REF.NO = ""
                  GOSUB 50000
               END
            NEXT REF.NO
         END
      CASE OPT = "M"
         MODE = "M"
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            IF S$VALUE = "A" THEN 
               R1 = 1; R2 = LINE.CNT
            END ELSE 
               R1 = S$VALUE; R2 = R1
            END
            IF DLOAD.FLAG<1,R1> = "" THEN FLAG = "*" ELSE FLAG = ""
            FOR REF = R1 TO R2
               DLOAD.FLAG<1,REF> = FLAG
               GOSUB 81000
            NEXT REF
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "F"
         MATWRITE DLOAD.REC ON DOWNLOAD, NETID
         WRITE PCTL.REC ON CONTROL,NETID:'PNP.CTL'
         READU NETREC FROM CONTROL, "HNP.NET.IDS" ELSE NETREC=""
         LOCATE NETID IN NETREC<1>,1 BY "AR" SETTING P THEN
            NETREC<2,P> = DLOAD.CONO
            NETREC<3,P> = DLOAD.PORT
         END ELSE
            NETREC = INSERT(NETREC,1,P,0,NETID)
            NETREC = INSERT(NETREC,2,P,0,DLOAD.CONO)
            NETREC = INSERT(NETREC,3,P,0,DLOAD.PORT)
         END
         WRITE NETREC ON CONTROL, "HNP.NET.IDS"
         GOTO 100
      END CASE
      GOTO 500
*
*---- GET LINE NUMBER
*
600 *
      MINV = CURR.REF.NO
      MAXV = MINV+LINE.COUNT
      IF MAXV > LINE.CNT THEN MAXV = LINE.CNT
610 *
      ERRMSG = ""
      SCREEN FIELD;;22
      SCREEN INPUT;;22;RETURN
      BEGIN CASE
      CASE S$VALUE = "A"
      CASE NOT(NUM(S$VALUE))
         ERRMSG = "** INVALID RESPONSE **"
      CASE S$VALUE < MINV OR S$VALUE > MAXV
         ERRMSG = "** OUT OF RANGE **"
      END CASE
      IF ERRMSG <> "" THEN
         GOSUB 90000
         GOTO 610
      END
      RETURN
*
*---- GET COMPANY NUMBER
*
1010 *
      S$DATA(3)<S$SCR> = DLOAD.CONO
      SCREEN FIELD;;3
      SCREEN INPUT;;3;RETURN
      MATREAD COMP.REC FROM COMPANY, S$VALUE ELSE
         ERRMSG = "Invalid Company ID. Try again! "
         GOSUB 90000
         GOTO 1010
      END
      DLOAD.CONO = S$VALUE
      S$DATA(4)<S$SCR> = CO.NAME
      SCREEN DISPLAY;;4
      RETURN
*
*---- GET NETWORK PORT NUMBER
*
1020 *
      S$DATA(5)<S$SCR> = DLOAD.PORT
      SCREEN FIELD;;5
      SCREEN INPUT;;5;RETURN
      DLOAD.PORT = S$VALUE
      RETURN
*
1030 *
      S$DATA(26)<S$SCR> = PCTL.REC<3>
      SCREEN FIELD;;26
      SCREEN INPUT;;26;RETURN
      PCTL.REC<3> = S$VALUE
      RETURN
*
1040 *
      S$DATA(27)<S$SCR> = PCTL.REC<2>[1,2]:":":PCTL.REC<2>[3,2]
      SCREEN FIELD;;27
      SCREEN INPUT;;27;RETURN
      PCTL.REC<2> = S$VALUE[1,2]:S$VALUE[4,2]
      RETURN
***** T23448
1050 *
      S$DATA(28)<S$SCR> = DLOAD.DIV
      SCREEN FIELD;;28
      SCREEN INPUT;;28;RETURN
      BEGIN CASE
      CASE S$VALUE = "ALL"
         DLOAD.DIV = S$VALUE
      CASE S$VALUE = "END"
      CASE S$VALUE <= "99" AND S$VALUE >= "01"
         MATREAD DIV.REC FROM DIVISION, DLOAD.CONO:S$VALUE ELSE
            ERRMSG = "INVALID DIVISION"
            GOSUB 90000
            GOTO 1050
         END
         DLOAD.DIV = S$VALUE
      CASE 1
         ERRMSG = "** INVALID INPUT **"
         GOSUB 90000
         GOTO 1050
      END CASE
      RETURN
***** T23448
*
*---- GET MULTI-LINE DATA
*
10000 *
10100 *
      S$DATA(15)<S$SCR,REF.NO> = DLOAD.NEXT.DATE<1,REF.NO>
      S$VAL = REF.NO
      SCREEN FIELD;;15
      IF REF.NO > 1 THEN
         IF DLOAD.NEXT.DATE<1,REF.NO-1> # "" THEN
            S$O.R = "O"
            S$DEFAULT = DLOAD.NEXT.DATE<1,REF.NO-1>
         END
      END
      SCREEN INPUT;;15;GOTO 19950
      TEMP.MF1 = S$VALUE
10200 *
      S$DATA(16)<S$SCR,REF.NO> = DLOAD.NEXT.TIME<1,REF.NO>
      S$VAL = REF.NO
      SCREEN FIELD;;16
      IF REF.NO > 1 THEN
         S$O.R = "O"
         S$DEFAULT = DLOAD.NEXT.TIME<1,REF.NO-1>
      END
      SCREEN INPUT;;16;GOTO 19950
      HH = S$VALUE[1,2]
      MM = S$VALUE[4,2]
      IF HH < 0 OR HH > 23 OR MM < 0 OR MM > 59 THEN
         ERRMSG = "Invalid time, enter "00:00" to "23:59". Try again! "
         GOSUB 90000
         GOTO 10200
      END
      TEMP.MF2 = S$VALUE
10300 *
      S$DATA(17)<S$SCR,REF.NO> = DLOAD.CYCLE<1,REF.NO>
      S$VAL = REF.NO
      SCREEN FIELD;;17
      IF REF.NO > 1 THEN
         S$O.R = "O"
         S$DEFAULT = DLOAD.CYCLE<1,REF.NO-1>
      END
      SCREEN INPUT;;17;GOTO 19950
      TEMP.MF3 = S$VALUE
19900 *
      DLOAD.NEXT.DATE<1,REF.NO> = TEMP.MF1
      DLOAD.NEXT.TIME<1,REF.NO> = TEMP.MF2
      DLOAD.CYCLE<1,REF.NO> = TEMP.MF3
      RETURN
19950 *
      GOSUB 81000
      RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
      START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
      SCREEN MULTI;;C;11;12;13;14;15;16;17;18
      RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
      S$DATA(1)<S$SCR> = DATE()
      S$DATA(2)<S$SCR> = NETID
      S$DATA(3)<S$SCR> = DLOAD.CONO
      MATREAD COMP.REC FROM COMPANY, DLOAD.CONO ELSE
         MAT COMP.REC = ""
         CO.NAME = "???????????????"
      END
      S$DATA(4)<S$SCR> = CO.NAME
      READ PCTL.REC FROM CONTROL,NETID:'PNP.CTL' ELSE PCTL.REC = ''
      S$DATA(26)<S$SCR> = PCTL.REC<3>
      S$DATA(27)<S$SCR> = PCTL.REC<2>[1,2]:":":PCTL.REC<2>[3,2]
      S$DATA(5)<S$SCR> = DLOAD.PORT
*****T23448
      S$DATA(28)<S$SCR> = DLOAD.DIV
*****T23448 ^
80050 *
      SCREEN DISPLAY;;ALL
      RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
      S$DATA(12)<S$SCR> = DLOAD.DESC
      S$DATA(13)<S$SCR> = DLOAD.LAST.DATE
      S$DATA(14)<S$SCR> = DLOAD.LAST.TIME
      S$DATA(15)<S$SCR> = DLOAD.NEXT.DATE
      S$DATA(16)<S$SCR> = DLOAD.NEXT.TIME
      S$DATA(17)<S$SCR> = DLOAD.CYCLE
      S$DATA(18)<S$SCR> = DLOAD.FLAG
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*      PRINT @(0,23):@(-4):ERRMSG:
*      INPUT REPLY:
*      PRINT @(0,23):@(-4):
*      RETURN
*
*---- END OF PROGRAM
*
99999 *
      PRINT @(-1)
   END
