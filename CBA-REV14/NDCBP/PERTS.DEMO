**************************************************************************
*
* PROGRAM - PERTS.DEMO
*
* AUTHOR  - NICK AMENDOLA, NASTech, Inc.
*
* DATE    - 11/29/94
*
* DESCRIPTION
*
* This program will selectively display charts defined on the CHART
* file.
*
**************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>NDC.CPYLIB>CHART
*COPY>NDCBP>WINCOM
*COPY>CPYLIB>CHAR
*
*---- DEFINE CONSTANTS
*
      DIM MBAR(6)
      MAT MBAR = ""
      MBAR(1) = "Select"
*
      DIM MENU(6,20)
      DIM MSEL(6,20)
      DIM MFLG(6,20)
      DIM MREQ(6,20)
      MAT MENU = ""
      MAT MSEL = ""
      MAT MFLG = ""
      MAT MREQ = ""
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         PRINT "CANNOT OPEN COMPANY FILE"
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         PRINT "CANNOT OPEN CONTROL FILE"
         STOP
      END
      OPEN "","CHART" TO CHART ELSE
         PRINT "CANNOT OPEN CHART FILE"
         STOP
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1(CONO, MAT COMP.REC, COMPANY, CONTROL)
      READV MODE FROM CONTROL, "WIN.DEMO",1 ELSE MODE = ""
      PROMPT ""
      STATUS = ""
*
      CKEY=""; CHDR=""; COPT=""
      MORE = 1
      SELECT CHART
      LOOP
         READNEXT KEY ELSE MORE = 0
      WHILE MORE DO
         IF KEY[1,3] = CONO THEN
            MATREAD CHART.REC FROM CHART, KEY THEN
               LOCATE CHART.HEAD IN CHDR,1 BY "AL" SETTING P ELSE NULL
               CKEY = INSERT(CKEY,P,0,0,KEY)
               CHDR = INSERT(CHDR,P,0,0,CHART.HEAD)
            END
         END
      REPEAT
      CCNT = DCOUNT(CKEY,AM)
      FOR CPTR = 1 TO CCNT
         MENU(1,CPTR) = CHDR<CPTR>
         MSEL(1,CPTR) = 100 + CPTR
         COPT<CPTR> = 100 + CPTR
      NEXT CPTR
*
*---- INITIALIZE WINDOW
*
      GOSUB 1000
*
*---- MAIN PROCESSING
*
      DONE = 0
      LOOP
         CALL GET.INPUT(TYPE, WND, DATA, 0, MAT WCOM)
         BEGIN CASE
         CASE TYPE = "X"
            DONE = 1
         CASE TYPE = "M"
            LOCATE DATA IN COPT,1 SETTING P THEN
               CHART.ID = CKEY<P>
               GOSUB 2000
            END ELSE
               WCOM.STATUS = "Invalid chart selection"
               GOSUB 90000
            END
         CASE TYPE = "S"
         CASE TYPE = "HS"
         CASE TYPE = "VS"
         CASE 1
            WCOM.CAPTION = "CHARTS"
            WCOM.TYPE = "Q"
            WCOM.STATUS = "Received message: ":TYPE:"-":WND:"_":DATA
            GOSUB 90000
         END CASE
      UNTIL DONE DO
      REPEAT
      GOTO 99999
*
*---- INITIALIZE MENU
*
1000 *
      CALL WINCOM.INIT(MAT WCOM, MAT WCHT)
      WCOM.MODE = MODE
      WCOM.CAPTION = "Executive Analyst"
      CALL WINDOW.INIT(MAT WCOM)
      WCOM.WND = "MAIN"
      WCOM.MENU.BAR = MBAR(1):VM:MBAR(2):VM:MBAR(3):VM:MBAR(4):VM:MBAR(5):VM:MBAR(6)
      CALL MENU.INIT(MAT WCOM)
*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            WCOM.IDENT = MPTR
            WCOM.CAPTION = MENU(MPTR,OPTR)
            WCOM.SELECT = MSEL(MPTR,OPTR)
            CALL MENU.DEFINE(MAT WCOM)
            IF WCOM.CAPTION # "-" THEN MFLG(MPTR,OPTR) = "E"
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- DISPLAY MAIN CHART
*
2000 *
      MATREADU CHART.REC FROM CHART, CHART.ID ELSE
         RELEASE CHART, CHART.ID
         RETURN
      END
      C1 = COUNT(CHART.DESC,VM)+1
      C2 = DCOUNT(CHART.DHEAD,SM)
      IF CHART.DATA = "" THEN
*        FOR P1 = 1 TO C1
            FOR P2 = 1 TO C2
               CHART.DATA<1,1,P2> = RND(50000)
               CHART.DATA<1,2,P2> = 0-CHART.DATA<1,1,P2>
            NEXT P2
*        NEXT P1
         MATWRITE CHART.REC ON CHART, CHART.ID
      END ELSE
         RELEASE CHART, CHART.ID
      END
*
      WCOM.WND = "C1"
      WCOM.CAPTION = CHART.CAPTION
      WCOM.COL     = CHART.COL
      WCOM.ROW     = CHART.ROW
      WCOM.WIDTH   = CHART.WIDTH
      WCOM.HEIGHT  = CHART.HEIGHT
*     WCOM.FCOLOR  = CHART.FCOLOR
      WCOM.BCOLOR  = "WHITE"
*
      WCHT.TYPE    = CHART.TYPE
      WCHT.HEAD    = CHART.HEAD
      WCHT.SHEAD   = CHART.SHEAD
      WCHT.YHEAD   = CHART.YHEAD
      WCHT.XHEAD   = CHART.XHEAD
      FOR P1 = 1 TO C1
         WCHT.DESC<P1> = CHART.DESC<1,P1>
         WCHT.COLOR<P1> = CHART.COLOR<1,P1>
         FOR P2 = 1 TO C2
            WCHT.DATA<P1,P2> = CHART.DATA<1,P1,P2>
            WCHT.SELECT<P1,P2> = CHART.LINK<1,P1,P2>
         NEXT P2
      NEXT P1
      FOR P2 = 1 TO C2
         WCHT.DHEAD<1,P2> = CHART.DHEAD<1,1,P2>
      NEXT P2
      WCHT.BWIDTH  = 6
      WCHT.BSPACE  = 0
      WCHT.SSPACE  = 0
      WCHT.SHADOW  = "N"
*
      CALL DISPLAY.PERTS.CHART(MAT WCOM, MAT WCHT)
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      WCOM.DATA = WCOM.STATUS
      CALL MESSAGE.BOX(MAT WCOM)
      WCOM.STATUS = ""
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      CALL WINDOW.TERM(MAT WCOM)
      STOP
   END
