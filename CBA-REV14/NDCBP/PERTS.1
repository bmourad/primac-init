**************************************************************************
*
* PROGRAM - PERTS
*
* AUTHOR  - NICK AMENDOLA, NASTech, Inc.
*
* DATE    - 11/29/94
*
* DESCRIPTION
*
* This program will selectively display charts defined on the CHART
* file.
*
**************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>NDC.CPYLIB>PERTS.TRACK
*COPY>NDC.CPYLIB>CHART
*COPY>NDCBP>WINCOM
*COPY>CPYLIB>CHAR
*
*---- DEFINE CONSTANTS
*
      DIM MBAR(6)
      MAT MBAR = ""
      MBAR(1) = "Select"
*
      DIM MENU(6,20)
      DIM MSEL(6,20)
      DIM MFLG(6,20)
      DIM MREQ(6,20)
      MAT MENU = ""
      MAT MSEL = ""
      MAT MFLG = ""
      MAT MREQ = ""
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         PRINT "CANNOT OPEN COMPANY FILE"
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         PRINT "CANNOT OPEN CONTROL FILE"
         STOP
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         PRINT "CANNOT OPEN COST.CNTR FILE"
         STOP
      END
      OPEN "","PERTS.TRACK" TO PERTS.TRACK ELSE
         PRINT "CANNOT OPEN PERTS.TRACK FILE"
         STOP
      END
      OPEN "","CHART" TO CHART ELSE
         PRINT "CANNOT OPEN CHART FILE"
         STOP
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1(CONO, MAT COMP.REC, COMPANY, CONTROL)
      READV MODE FROM CONTROL, "WIN.DEMO",1 ELSE MODE = ""
      PROMPT ""
      STATUS = ""
*
      WHDR = ""
      WMAX = ""
      WCTR = ""
      READ WREC FROM PERTS.TRACK, CONO ELSE
         PRINT "NO PERTS COST CENTERS DEFINED"
         STOP
      END
      WCNT = DCOUNT(WREC,AM)
      FOR WPTR = 1 TO WCNT STEP 3
         WP = INT((WPTR-1)/3)+1
         IF WREC<WPTR> = "" THEN
            WHDR<WP> = "CHART ":WPTR
         END ELSE
            WHDR<WP> = WREC<WPTR>
         END
         IF WREC<WPTR+1> = "" THEN
            CCNT = DCOUNT(WREC<WPTR+2>,VM)
            FOR CPTR = 1 TO CCNT
               CCTR = WREC<WPTR+2,CPTR>
               MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE MAT CCTR.REC=""
               SCNT = DCOUNT(CCTR.OPER.STD.IMP,VM)
               FOR SPTR = 1 TO SCNT
                  IF (CCTR.OPER.STD.IMP<1,SPTR>+0) > (WMAX<WP>+0) THEN
                     WMAX<WP> = CCTR.OPER.STD.IMP<1,SPTR>
                  END
               NEXT SPTR
            NEXT CPTR
         END ELSE
            WMAX<WP> = WREC<WPTR+1>
         END
         WCTR<WP> = WREC<WPTR+2>
      NEXT WPTR
*
      WCNT = DCOUNT(WHDR,AM)
      FOR WPTR = 1 TO WCNT
         MENU(1,WPTR) = WHDR<WPTR>
         MSEL(1,WPTR) = 100 + WPTR
      NEXT WPTR
      W = WCNT + 1
      MENU(1,W)="-";                  MSEL(1,W)=100+W; MFLG(1,W)=""; MREQ(1,W)="X"
      W = W + 1
      MENU(1,W)="Exit";               MSEL(1,W)="199"; MFLG(1,W)=""; MREQ(1,W)="X"
*
*---- INITIALIZE WINDOW
*
      GOSUB 1000
      GOSUB 1500
*
*---- MAIN PROCESSING
*
      DONE = 0
      LOOP
         CALL GET.INPUT(TYPE, WND, DATA, "5.0", MAT WCOM)
         BEGIN CASE
         CASE TYPE = "T"
            GOSUB 1600
         CASE TYPE = "X"
            WCOM.WND = WND
            CALL CLOSE.WINDOW(MAT WCOM)
            WOCNT = WOCNT - 1
*           DONE = 1
         CASE TYPE = "M"
            BEGIN CASE
            CASE DATA = "101"
               WPTR = DATA-100
               CHART.ID = "001T1"
               GOSUB 2000
            CASE DATA = "102"
               WPTR = DATA-100
               CHART.ID = "001T2"
               GOSUB 2000
            CASE DATA = "103"
               WPTR = DATA-100
               CHART.ID = "001T1"
               GOSUB 2000
            CASE DATA = "104"
               WPTR = DATA-100
               CHART.ID = "001T2"
               GOSUB 2000
            CASE DATA = "105"
               WPTR = DATA-100
               CHART.ID = "001T1"
               GOSUB 2000
            CASE DATA = "106"
               WPTR = DATA-100
               CHART.ID = "001T2"
               GOSUB 2000
            CASE DATA = "107"
               WPTR = DATA-100
               CHART.ID = "001T1"
               GOSUB 2000
            CASE DATA = "108"
               WPTR = DATA-100
               CHART.ID = "001T2"
               GOSUB 2000
            CASE 1
               DONE = 1
            END CASE
         CASE TYPE = "S"
         CASE TYPE = "HS"
         CASE TYPE = "VS"
         CASE 1
            WCOM.CAPTION = "PERTS"
            WCOM.TYPE = "Q"
            WCOM.STATUS = "Received message: ":TYPE:"-":WND:"_":DATA
            GOSUB 90000
         END CASE
      UNTIL DONE DO
      REPEAT
      GOTO 99999
*
*---- INITIALIZE MENU
*
1000 *
      WOCNT = 0
      CALL WINCOM.INIT(MAT WCOM, MAT WCHT)
      WCOM.MODE = MODE
      WCOM.CAPTION = "P E R T S"
      CALL WINDOW.INIT(MAT WCOM)
      WCOM.WND = "MAIN"
      WCOM.MENU.BAR = MBAR(1):VM:MBAR(2):VM:MBAR(3):VM:MBAR(4):VM:MBAR(5):VM:MBAR(6)
      CALL MENU.INIT(MAT WCOM)
*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            WCOM.IDENT = MPTR
            WCOM.CAPTION = MENU(MPTR,OPTR)
            WCOM.SELECT = MSEL(MPTR,OPTR)
            CALL MENU.DEFINE(MAT WCOM)
            IF WCOM.CAPTION # "-" THEN MFLG(MPTR,OPTR) = "E"
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- DISPLAY INITIAL WINDOWS
*
1500 *
      WCNT = DCOUNT(WHDR,AM)
      FOR WPTR = 1 TO WCNT
         C1 = DCOUNT(WCTR<WPTR>,VM)
         WCOM.WND = "W":WPTR
         WCOM.CAPTION = WHDR<WPTR>
         WCOM.COL     = 3+(WPTR-1)*3
         WCOM.ROW     = 3+(WPTR-1)*2
         WCOM.WIDTH   = 70
         WCOM.HEIGHT  = 16
         WCOM.BCOLOR  = "WHITE"
*   
         WCHT.TYPE    = "1"
*        WCHT.HEAD    = CHART.HEAD
*        WCHT.SHEAD   = CHART.SHEAD
         WCHT.YHEAD   = "Impressions / Hour"
         WCHT.XHEAD   = "Cost Center"
         WCHT.DESC    = ""
         WCHT.COLOR   = "RED"
         FOR P1 = 1 TO C1
            WCHT.DATA<1,P1> = RND(WMAX<WPTR>)
            WCHT.DHEAD<1,P1> = WCTR<WPTR,P1>
         NEXT P1
         WCHT.BWIDTH  = INT(40/C1)
         IF WCHT.BWIDTH < 6 THEN WCHT.BWIDTH = 6
         WCHT.BSPACE  = 1
         WCHT.SSPACE  = 1
         WCHT.SHADOW  = "Y"
         CALL DISPLAY.CHART(MAT WCOM, MAT WCHT)
      NEXT WPTR
      RETURN
*
*---- RE-DISPLAY COST CENTER SPEED DATA
*
1600 *
      WCNT = DCOUNT(WHDR,AM)
      FOR WPTR = 1 TO WCNT
         WCOM.WND = "W":WPTR
         WCOM.COL     = 0
         WCOM.ROW     = 0
         WCOM.WIDTH   = 20
         WCOM.HEIGHT  = 16
         CALL CLEAR.WINDOW(MAT WCOM)
      NEXT WPTR
      RETURN
*
*---- DISPLAY MAIN CHART
*
2000 *
      WOCNT = WOCNT + 1
      MATREADU CHART.REC FROM CHART, CHART.ID ELSE
         RELEASE CHART, CHART.ID
         RETURN
      END
      C1 = COUNT(CHART.DESC,VM)+1
      C2 = DCOUNT(CHART.DHEAD,SM)
      IF CHART.DATA = "" THEN
*        FOR P1 = 1 TO C1
            FOR P2 = 1 TO C2
               CHART.DATA<1,1,P2> = RND(50000)
               CHART.DATA<1,2,P2> = 0-CHART.DATA<1,1,P2>
            NEXT P2
*        NEXT P1
         MATWRITE CHART.REC ON CHART, CHART.ID
      END ELSE
         RELEASE CHART, CHART.ID
      END
*
      WCOM.WND = "C":WPTR
      WCOM.CAPTION = WHDR<WPTR>
      WCOM.COL     = 3+(WOCNT-1)*3
      WCOM.ROW     = 3+(WOCNT-1)*1.5
      WCOM.WIDTH   = CHART.WIDTH
      WCOM.HEIGHT  = CHART.HEIGHT
*     WCOM.FCOLOR  = CHART.FCOLOR
      WCOM.BCOLOR  = "WHITE"
*
      WCHT.TYPE    = CHART.TYPE
      WCHT.HEAD    = CHART.HEAD
      WCHT.SHEAD   = CHART.SHEAD
      WCHT.YHEAD   = CHART.YHEAD
      WCHT.XHEAD   = CHART.XHEAD
      FOR P1 = 1 TO C1
         WCHT.DESC<P1> = CHART.DESC<1,P1>
         WCHT.COLOR<P1> = CHART.COLOR<1,P1>
         FOR P2 = 1 TO C2
            WCHT.DATA<P1,P2> = CHART.DATA<1,P1,P2>
            WCHT.SELECT<P1,P2> = CHART.LINK<1,P1,P2>
         NEXT P2
      NEXT P1
      FOR P2 = 1 TO C2
         WCHT.DHEAD<1,P2> = CHART.DHEAD<1,1,P2>
      NEXT P2
      WCHT.BWIDTH  = 6
      WCHT.BSPACE  = 0
      WCHT.SSPACE  = 0
      WCHT.SHADOW  = "N"
*
      CALL DISPLAY.PERTS.CHART(MAT WCOM, MAT WCHT)
      RETURN
*
*---- CALCULATE DATA
*
3000 *
      MATREAD PTRK.REC FROM PERTS.TRACK, PTRK.ID ELSE
         MAT PTRK.REC = ""
      END
      TEMP.TIME  = ""
      TEMP.SPEED = ""
      TEMP.COLOR = ""
      TEMP.OPTR  = ""
      TCNT = DCOUNT(PTRK.TIME,VM)
      FOR TPTR = 1 TO TCNT
         T = PTRK.TIME<1,TPTR>
         S = PTRK.SPEED<1,TPTR>
         LOCATE T IN TEMP.TIME<1>,1 SETTING P ELSE
            TEMP.TIME<1,P> = T
            TEMP.SPEED<1,P> = S
         END
      NEXT TPTR
*
      OCNT = DCOUNT(PTRK.OPER,VM)
      FOR OPTR = 1 TO OCNT
         T = PTRK.OPER.TIME<1,OPTR>
         BEGIN CASE
         CASE PTRK.OPER.CHG<1,OPTR> = "N"
            C = "RED"
         CASE 1
            C = "GREEN"
         END CASE
         LOCATE T IN TEMP.TIME<1>,1 BY "AR" SETTING P ELSE
            TEMP.TIME  = INSERT(TEMP.TIME,1,P,O,T)
            TEMP.SPEED = INSERT(TEMP.SPEED,1,P,0,"")
            TEMP.COLOR = INSERT(TEMP.COLOR,1,P,0,"")
            TEMP.OPTR  = INSERT(TEMP.OPTR,1,P,0,"")
         END
         TEMP.COLOR<1,P> = C
         TEMP.OPTR<1,P> = OPTR
      NEXT OPTR
*
      TCNT = DCOUNT(TEMP.TIME,VM)
      FOR TPTR = 1 TO TCNT
         T = TEMP.TIME<1,TPTR>
         S = TEMP.SPEED<1,TPTR>
         FOR N = TPTR TO TCNT WHILE S = ""
            S = TEMP.SPEED<1,N>
         NEXT N
         C = ""
         FOR N = TPTR TO TCNT WHILE C = ""
            C = TEMP.COLOR<1,N>
         NEXT N
      NEXT TPTR
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      WCOM.DATA = WCOM.STATUS
      CALL MESSAGE.BOX(MAT WCOM)
      WCOM.STATUS = ""
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      CALL WINDOW.TERM(MAT WCOM)
      WOCNT = 0
      STOP
   END
