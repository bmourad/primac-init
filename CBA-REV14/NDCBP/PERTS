**************************************************************************
*
* PROGRAM - PERTS
*
* AUTHOR  - NICK AMENDOLA, NASTech, Inc.
*
* DATE    - 11/29/94
*
* DESCRIPTION
*
* This program will display speed charts for spedified cost centers
* and dates.
*
**************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>NDC.CPYLIB>COM.PERTS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>NDC.CPYLIB>PERTS.TRACK
*COPY>NDCBP>WINCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- DEFINE CONSTANTS
*
      XADJ = "-"
      YADJ = "-"
*
      MONTH = ""
      MONTH<1>  = "January"
      MONTH<2>  = "February"
      MONTH<3>  = "March"
      MONTH<4>  = "April"
      MONTH<5>  = "May"
      MONTH<6>  = "June"
      MONTH<7>  = "July"
      MONTH<8>  = "August"
      MONTH<9>  = "September"
      MONTH<10> = "October"
      MONTH<11> = "November"
      MONTH<12> = "December"
*
      DAY = ""
      DAY<1> = "SUN"
      DAY<2> = "MON"
      DAY<3> = "TUE"
      DAY<4> = "WED"
      DAY<5> = "THU"
      DAY<6> = "FRI"
      DAY<7> = "SAT"
*
      DIM MBAR(6)
      MAT MBAR = ""
      MBAR(1) = "Select"
      MBAR(2) = "Period"
*
      DIM MENU(6,20)
      DIM MSEL(6,20)
      DIM MFLG(6,20)
      DIM MREQ(6,20)
      MAT MENU = ""
      MAT MSEL = ""
      MAT MFLG = ""
      MAT MREQ = ""
*
      TEMP.TIME  = ""
      TEMP.SPEED = ""
      SAVE.TIME  = ""
      SAVE.SPEED = ""
      SAVE.OPER.TIME = ""
      SAVE.OPER.CODE = ""
      SAVE.OPER.TYPE = ""
      SAVE.OPER.CHG  = ""
      SAVE.OPER.JOB  = ""
      SAVE.OPER.EMP  = ""
*
*---- OPEN ALL FILES
*
      OPEN "","COMPANY" TO COMPANY ELSE
         PRINT "CANNOT OPEN COMPANY FILE"
         STOP
      END
      OPEN "","CONTROL" TO CONTROL ELSE
         PRINT "CANNOT OPEN CONTROL FILE"
         STOP
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         PRINT "CANNOT OPEN COST.CNTR FILE"
         STOP
      END
      OPEN "","OPERATION" TO OPERATION ELSE
         PRINT "CANNOT OPEN OPERATION FILE"
         STOP
      END
      OPEN "","PERTS.TRACK" TO PERTS.TRACK ELSE
         PRINT "CANNOT OPEN PERTS.TRACK FILE"
         STOP
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
         PRINT "CANNOT OPEN CUSTOMER FILE"
         STOP
      END
      OPEN "","SALESMAN" TO SALESMAN ELSE
         PRINT "CANNOT OPEN SALESMAN FILE"
         STOP
      END
      OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
         PRINT "CANNOT OPEN EMPLOYEE FILE"
         STOP
      END
      OPEN "","JOB" TO JOB ELSE
         PRINT "CANNOT OPEN JOB FILE"
         STOP
      END
      OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE
         PRINT "CANNOT OPEN JOB.CATEGORY FILE"
         STOP
      END
      OPEN "","ESTIMATE" TO ESTIMATE ELSE
         PRINT "CANNOT OPEN ESTIMATE FILE"
         STOP
      END
*
*---- INITIALIZATION
*
      CONO = ""
      CALL GET.CONO1(CONO, MAT COMP.REC, COMPANY, CONTROL)
      READV MODE FROM CONTROL, "WIN.DEMO",1 ELSE MODE = ""
      PROMPT ""
      STATUS = ""
      CPTR = ""
      SELCCTR = ""
      SELCPTR = ""
      SELDESC = ""
      SELDATE = ""
      SELFLAG = ""
      SDAY   = ""
      SYEAR  = ""
      CURDATE = ""
*
      READ XREC FROM PERTS.TRACK, CONO ELSE XREC = ""
      SCNT = 0
      GCNT = DCOUNT(XREC,AM)
      FOR GPTR = 1 TO GCNT
         CCNT = DCOUNT(XREC<GPTR>,VM)
         FOR CPTR = 1 TO CCNT
            SCNT = SCNT + 1
            SELCCTR<SCNT> = XREC<GPTR,CPTR>
            SELCPTR<SCNT> = CPTR
         NEXT CPTR
      NEXT GPTR
      IF SELCCTR = "" THEN
         PRINT "NO PERTS COST CENTERS DEFINED"
         STOP
      END
      MPTR = 0
      CCNT = DCOUNT(SELCCTR,AM)
      FOR CPTR = 1 TO CCNT
         IF CPTR > 1 AND SELCPTR<CPTR> = 1 THEN
            MPTR = MPTR + 1
            MENU(1,MPTR) = "-"
            MSEL(1,MPTR) = 100
         END
         MATREAD CCTR.REC FROM COST.CNTR, CONO:SELCCTR<CPTR> ELSE
            MAT CCTR.REC = ""
            CCTR.DESC = SELCCTR<CPTR>:" ??????????"
         END
         SELDESC<CPTR> = CCTR.DESC
         MPTR = MPTR + 1
         MENU(1,MPTR) = CCTR.DESC
         MSEL(1,MPTR) = 100 + CPTR
      NEXT CPTR
      W = CCNT + 1
      MPTR = MPTR + 1
      MENU(1,MPTR)="-";    MSEL(1,MPTR)=100; MFLG(1,W)=""; MREQ(1,W)="X"
      MPTR = MPTR + 1
      MENU(1,MPTR)="Exit"; MSEL(1,MPTR)=199; MFLG(1,W)=""; MREQ(1,W)="X"
*
      MENU(2,1) = "Today"
      MSEL(2,1) = 299
      MENU(2,2) = "-"
      MSEL(2,2) = 200
      FOR M = 1 TO 12
         MENU(2,M+2) = MONTH<M>
         MSEL(2,M+2) = 200 + M
      NEXT M
*
*---- INITIALIZE WINDOW
*
      GOSUB 1000
      SMONTH = OCONV(DATE(),"D2-")[1,2]
      GOSUB 20000
*
*---- MAIN PROCESSING
*
      DONE = 0
      LOOP
         CALL GET.INPUT(TYPE, WND, DATA, 5, MAT WCOM)
         BEGIN CASE
         CASE TYPE = "T"
*           FOR N = 1 TO 6
*              WCOM.WND  = "C":CPTR
*              WCOM.TYPE = "LD"
*              CALL HSCROLL.DATA(MAT WCOM)
*              SLEEP 1
*           NEXT N
         CASE TYPE = "X"
            WCOM.WND = WND
            CALL CLOSE.WINDOW(MAT WCOM)
            IF WND[1,1] = "C" AND NUM(WND[2,99]) THEN
               CPTR = WND[2,99]
               SELFLAG<CPTR> = ""
            END
         CASE TYPE = "M"
            BEGIN CASE
            CASE DATA >= (100+1) AND DATA <= (100+DCOUNT(SELCCTR,AM))
               CPTR = DATA - 100
               SELDATE<CPTR> = CURDATE
               SELFLAG<CPTR> = "Y"
               GOSUB 10000
            CASE DATA >= 201 AND DATA <= 212
               SMONTH = DATA - 200
               GOSUB 20000
            CASE DATA = 299
               CURDATE = DATE()+5
            CASE 1
               DONE = 1
            END CASE
         CASE TYPE = "S"
            BEGIN CASE
            CASE WND = "CAL"
*              CURDATE = ICONV(SMONTH:"-":DATA:"-":SYEAR,"D")
*              WCOM.WND = "CAL"
*              CALL CLOSE.WINDOW(MAT WCOM)
            CASE WND[1,1] = "C" AND NUM(WND[2,99])
*              OPTR = TEMP.OPTR<CPTR,DATA>
*              PERTS.CURR.JOB  = SAVE.OPER.JOB<1,OPTR>
*              PERTS.CURR.EMP  = SAVE.OPER.EMP<1,OPTR>
*              PERTS.CURR.OPER = SAVE.OPER.CODE<1,OPTR>
*              WCOM.WND = "W4"
*              CALL PERTS.JOB.INQ(CONO, MAT WCOM)
*              WCOM.WND = "MAIN"
            END CASE
         CASE TYPE = "SD"
            BEGIN CASE
            CASE WND = "CAL"
               CURDATE = ICONV(SMONTH:"-":DATA:"-":SYEAR,"D")
               WCOM.WND = "CAL"
               CALL CLOSE.WINDOW(MAT WCOM)
            CASE WND[1,1] = "C" AND NUM(WND[2,99])
               CPTR = WND[2,99]
               OPTR = TEMP.OPTR<CPTR,DATA>
               PERTS.CURR.JOB  = SAVE.OPER.JOB<CPTR,OPTR>
               PERTS.CURR.EMP  = SAVE.OPER.EMP<CPTR,OPTR>
               PERTS.CURR.OPER = SAVE.OPER.CODE<CPTR,OPTR>
               WCOM.WND = "W":CPTR
               CALL PERTS.JOB.INQ(CONO, MAT WCOM)
               WCOM.WND = "MAIN"
            END CASE
         CASE TYPE = "U"
            BEGIN CASE
            CASE WND = "CAL"
            CASE WND[1,1] = "C" AND NUM(WND[2,99])
            END CASE
         CASE TYPE = "HS"
         CASE TYPE = "VS"
         CASE 1
            WCOM.CAPTION = "PERTS"
            WCOM.TYPE = "Q"
            WCOM.STATUS = "Received message: ":TYPE:"-":WND:"_":DATA
            GOSUB 90000
         END CASE
      UNTIL DONE DO
      REPEAT
      GOTO 99999
*
*---- INITIALIZE MENU
*
1000 *
      CALL WINCOM.INIT(MAT WCOM, MAT WCHT)
      WCOM.MODE = MODE
      WCOM.CAPTION = "P E R T S"
      CALL WINDOW.INIT(MAT WCOM)
      WCOM.WND = "MAIN"
      WCOM.MENU.BAR = MBAR(1):VM:MBAR(2):VM:MBAR(3):VM:MBAR(4):VM:MBAR(5):VM:MBAR(6)
      CALL MENU.INIT(MAT WCOM)
*
      FOR MPTR = 1 TO 6 UNTIL MBAR(MPTR) = ""
         FOR OPTR = 1 TO 20 UNTIL MENU(MPTR,OPTR) = ""
            WCOM.IDENT = MPTR
            WCOM.CAPTION = MENU(MPTR,OPTR)
            WCOM.SELECT = MSEL(MPTR,OPTR)
            CALL MENU.DEFINE(MAT WCOM)
            IF WCOM.CAPTION # "-" THEN MFLG(MPTR,OPTR) = "E"
         NEXT OPTR
      NEXT MPTR
      RETURN
*
*---- DISPLAY COST CENTER CHART
*
10000 *
      IF (CPTR+0) = 0 THEN RETURN
      CCTR = SELCCTR<CPTR>
      IF SELDATE<CPTR> = "" THEN CDATE = DATE() ELSE CDATE = SELDATE<CPTR>
      MATREAD PTRK.REC FROM PERTS.TRACK, CONO:CCTR:"!":(CDATE-1) ELSE
         MAT PTRK.REC = ""
      END
      TCNT = COUNT(PTRK.TIME,VM)+1
      PREV.TIME  = 0
      PREV.SPEED = PTRK.SPEED<1,TCNT>+0
*
      IF CDATE >= DATE()+5 THEN
         MAT PTRK.REC = ""
      END ELSE
         MATREAD PTRK.REC FROM PERTS.TRACK, CONO:CCTR:"!":(CDATE+1) ELSE
            MAT PTRK.REC = ""
         END
      END
      NEXT.OPER.TIME = 24 * 60 * 60
      NEXT.OPER.CODE = PTRK.OPER.CODE<1,1>
      NEXT.OPER.TYPE = PTRK.OPER.TYPE<1,1>
      NEXT.OPER.CHG  = PTRK.OPER.CHG<1,1>
      NEXT.OPER.JOB  = PTRK.OPER.JOB<1,1>
      NEXT.OPER.EMP  = PTRK.OPER.EMP<1,1>
*
      MATREAD PTRK.REC FROM PERTS.TRACK, CONO:CCTR:"!":CDATE ELSE
         MAT PTRK.REC = ""
      END
      SAVE.TIME<CPTR>      = PTRK.TIME
      SAVE.SPEED<CPTR>     = PTRK.SPEED
      SAVE.OPER.TIME<CPTR> = PTRK.OPER.TIME
      SAVE.OPER.CODE<CPTR> = PTRK.OPER.CODE
      SAVE.OPER.TYPE<CPTR> = PTRK.OPER.TYPE
      SAVE.OPER.CHG<CPTR>  = PTRK.OPER.CHG
      SAVE.OPER.JOB<CPTR>  = PTRK.OPER.JOB
      SAVE.OPER.EMP<CPTR>  = PTRK.OPER.EMP
*
      SAVE.TIME  = INSERT(SAVE.TIME,CPTR,1,0,PREV.TIME)
      SAVE.SPEED = INSERT(SAVE.SPEED,CPTR,1,0,PREV.SPEED)
*
      SPTR = DCOUNT(SAVE.OPER.TIME<CPTR>,VM) + 1
      SAVE.OPER.TIME<CPTR,SPTR> = NEXT.OPER.TIME
      SAVE.OPER.CODE<CPTR,SPTR> = NEXT.OPER.CODE
      SAVE.OPER.TYPE<CPTR,SPTR> = NEXT.OPER.TYPE
      SAVE.OPER.CHG<CPTR,SPTR>  = NEXT.OPER.CHG
      SAVE.OPER.JOB<CPTR,SPTR>  = NEXT.OPER.JOB
      SAVE.OPER.EMP<CPTR,SPTR>  = NEXT.OPER.EMP
*
      TEMP.TIME<CPTR>  = SAVE.TIME<CPTR>
      TEMP.SPEED<CPTR> = SAVE.SPEED<CPTR>
      TEMP.OPTR<CPTR>  = ""
      OCNT = DCOUNT(SAVE.OPER.TIME<CPTR>,VM)
      FOR OPTR = 1 TO OCNT
         T = SAVE.OPER.TIME<CPTR,OPTR>
         LOCATE T IN TEMP.TIME<CPTR>,1 BY "AR" SETTING P ELSE
            TEMP.TIME  = INSERT(TEMP.TIME,CPTR,P,0,T)
            TEMP.SPEED = INSERT(TEMP.SPEED,CPTR,P,0,"")
            TEMP.OPTR  = INSERT(TEMP.OPTR,CPTR,P,0,"")
            IF P > 1 THEN
               TEMP.SPEED<CPTR,P> = TEMP.SPEED<CPTR,P-1>
            END
         END
         TEMP.OPTR<CPTR,P> = OPTR
         TDONE = 0
         FOR TPTR = P-1 TO 1 STEP -1 UNTIL TDONE
            IF TEMP.OPTR<CPTR,TPTR> = "" THEN
               TEMP.OPTR<CPTR,TPTR> = OPTR
            END ELSE
               TDONE = 1
            END
         NEXT TPTR
      NEXT OPTR
*
*---------------------  T E S T  --------------------------*
*
*     WRITEV TEMP.TIME<CPTR> ON PERTS.TRACK, CONO:CCTR,1
*     WRITEV TEMP.SPEED<CPTR> ON PERTS.TRACK, CONO:CCTR,2
*     WRITEV SAVE.OPER.TIME<CPTR> ON PERTS.TRACK, CONO:CCTR,6
*     WRITEV SAVE.OPER.CODE<CPTR> ON PERTS.TRACK, CONO:CCTR,7
*     WRITEV SAVE.OPER.TYPE<CPTR> ON PERTS.TRACK, CONO:CCTR,8
*     WRITEV SAVE.OPER.CHG<CPTR> ON PERTS.TRACK, CONO:CCTR,9
*     WRITEV SAVE.OPER.JOB<CPTR> ON PERTS.TRACK, CONO:CCTR,10
*     WRITEV SAVE.OPER.EMP<CPTR> ON PERTS.TRACK, CONO:CCTR,11
*     WRITEV TEMP.OPTR<CPTR> ON PERTS.TRACK, CONO:CCTR,20
*
*----------------------------------------------------------*
*
      WCOM.WND = "C":CPTR
      WCOM.CAPTION = SELDESC<CPTR>:" (":SELCCTR<CPTR>:")"
      WCOM.COL = 1 + (CPTR-1) * 3
      WCOM.ROW = 3 + (CPTR-1) * 2
      WCOM.WIDTH   = 70
      WCOM.HEIGHT  = 16
      WCOM.BCOLOR  = "WHITE"
      SDATE = OCONV(CDATE,"D4-")
      SMONTH = SDATE[1,2]
      SDAY   = SDATE[4,2]+0
      SYEAR  = SDATE[7,4]
      WCHT.HEAD    = MONTH<SMONTH>:" ":SDAY:", ":SYEAR
      WCHT.YHEAD   = "Speed (IPH)"
      WCHT.XHEAD   = "Time of Day"
      TCNT = DCOUNT(TEMP.TIME<CPTR>,VM)
      FOR TPTR = 1 TO TCNT
         IF TEMP.TIME<CPTR,TPTR> < (24 * 60 * 60) THEN
            WCHT.DATA<1,TPTR> = TEMP.SPEED<CPTR,TPTR>
            BEGIN CASE
            CASE SAVE.OPER.CODE<CPTR,TEMP.OPTR<CPTR,TPTR>> = ""
               WCHT.COLOR<1,TPTR,1> = "BLACK"
               WCHT.COLOR<1,TPTR,2> = "IWHITE"
               WCHT.COLOR<1,TPTR,3> = "BLACK"
            CASE SAVE.OPER.CHG<CPTR,TEMP.OPTR<CPTR,TPTR>> = "N"
               WCHT.COLOR<1,TPTR,1> = "BLACK"
               WCHT.COLOR<1,TPTR,2> = "IMAGENTA"
               WCHT.COLOR<1,TPTR,3> = "MAGENTA"
            CASE SAVE.OPER.CHG<CPTR,TEMP.OPTR<CPTR,TPTR>> = "S"
               WCHT.COLOR<1,TPTR,1> = "BLACK"
               WCHT.COLOR<1,TPTR,2> = "IRED"
               WCHT.COLOR<1,TPTR,3> = "RED"
            CASE 1
               WCHT.COLOR<1,TPTR,1> = "BLACK"
               WCHT.COLOR<1,TPTR,2> = "IGREEN"
               WCHT.COLOR<1,TPTR,3> = "GREEN"
            END CASE
            WCHT.SELECT<1,TPTR> = TPTR
            IF TPTR < TCNT THEN
               WCHT.BWIDTH<1,TPTR> = INT((TEMP.TIME<CPTR,TPTR+1>-TEMP.TIME<CPTR,TPTR>)/3600*600+0.5)/100
            END
         END
      NEXT TPTR
      FOR N = 1 TO 24
         WCHT.DHEAD<1,N> = N:":00"
      NEXT N
      WCHT.SSPACE = 6
*
      CALL PERTS.CHART(MAT WCOM, MAT WCHT)
*
*     WCOM.WND  = "C":CPTR
*     WCOM.TYPE = "B"
*     CALL HSCROLL.DATA(MAT WCOM)
      RETURN
*
*---- DISPLAY CALENDAR
*
20000 *
      CDATE  = DATE()+5
      DDATE  = OCONV(CDATE,"D4-")
      CMONTH = DDATE[1,2]
      CDAY   = DDATE[4,2]
      CYEAR  = DDATE[7,4]
*
      IF SMONTH <= CMONTH THEN
         SYEAR = CYEAR
      END ELSE
         SYEAR = CYEAR - 1
      END
      SDATE = ICONV(SMONTH:"-01-":SYEAR,"D")
      ODATE = OCONV(SDATE+31,"D2-")
      ODATE = ODATE[1,2]:"-01-":ODATE[7,2]
      EDATE = ICONV(ODATE,"D")-1
*
      CAL = ""
      SDOW = MOD(OCONV(SDATE,"DW"),7)
      DCNT = EDATE - SDATE + 1
      FOR DPTR = 1 TO DCNT
         DOW = MOD(OCONV((SDATE+DPTR-1),"DW"),7)+1
         WOM = INT((SDOW+DPTR-1)/7)+1
         WCNT = WOM
         CAL<WOM,DOW> = DPTR
      NEXT DPTR
*---- OPEN WINDOW
      WCOM.WND = "CAL"
      WCOM.CAPTION = MONTH<SMONTH>:" ":SYEAR
      WCOM.COL = 1
      WCOM.ROW = 3
      WCOM.WIDTH = 39
      IF WCNT = 5 THEN WCOM.HEIGHT = 18 ELSE WCOM.HEIGHT = 21
      WCOM.BCOLOR = "WHITE"
      CALL OPEN.WINDOW(MAT WCOM)
*
      FOR D = 1 TO 7
         WCOM.COL = 2 + (D-1)*5
         WCOM.ROW = 1
         WCOM.WIDTH = 5:"+"
         WCOM.HEIGHT = 1:"+"
         WCOM.FCOLOR = "BLACK"
         WCOM.BCOLOR = "IWHITE"
         WCOM.RCOLOR = "BLACK"
         WCOM.DATA = " ":DAY<D>
         CALL LOAD.DATA(MAT WCOM)       ;* DAY OF WEEK
      NEXT D
*
      FOR W = 1 TO WCNT
         FOR D = 1 TO 7
            IF CAL<W,D>+0 = 0 THEN
               XDATE = ""
            END ELSE
               XDATE = ICONV((SMONTH:"-":CAL<W,D>:"-":SYEAR),"D")
            END
            WCOM.COL    = 2 + (D-1)*5
            WCOM.ROW    = 2 + (W-1)*3
            WCOM.WIDTH  = 5:"+"
            WCOM.HEIGHT = 3:"+"
            WCOM.FCOLOR = "BLACK"
            WCOM.BCOLOR = "IWHITE"
            WCOM.RCOLOR = "BLACK"
            WCOM.DATA   = " ":CAL<W,D>
            WCOM.SELECT = CAL<W,D>
            BEGIN CASE
            CASE XDATE = ""
            CASE XDATE = CDATE
               WCOM.FCOLOR = "IRED"
            CASE XDATE > CDATE
               WCOM.BCOLOR = "GREY"
               WCOM.SELECT = ""
            END CASE
            CALL LOAD.DATA(MAT WCOM)
         NEXT D
      NEXT W
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      WCOM.DATA = WCOM.STATUS
      CALL MESSAGE.BOX(MAT WCOM)
      WCOM.STATUS = ""
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      CALL WINDOW.TERM(MAT WCOM)
      STOP
   END
