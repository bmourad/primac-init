*********************************************************************
*
* PROGRAM  - HNP.DOWNLOAD
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 11/02/93
*
* DESCRIPTION
*
* This program is used to download master file data to the Network
* Controllers. The criteria for downloading each file is defined by
* the HNP.DOWNLOAD.MAINT function.
*
*T22288 rick 10/15/1997 * Year 2000 compliance. Make sure date calcs use
*                         4 digit years.
*T23448 bilal 11/22/1998 * Add Division criteria to all files.
*********************************************************************
*
EMP.LANGUAGE = ""
*
*THIS VARIABLE IS SETUP TO KEEP FROM GETTING AN UNITIALIZED VARIABLE IF 
*THE NEW PMC.CPYLIB EMPLOYEE IS NOT UPLOADED TO THE CLIENT WITH THIS PROG.
*CLS 2/95
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>CORP.CONO
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>INVENTORY
*COPY>JCS.CPYLIB>SF.PROMPT
*COPY>NDC.CPYLIB>DOWNLOAD
*COPY>CPYLIB>CHAR
*
*---- GET PARAMETER
*
      PROCREAD PARAM ELSE PARAM = ""
      BEGIN CASE
      CASE PARAM<1> = "B"
         RMODE = "B"               ;* BATCH MODE
      CASE 1
         RMODE = "P"               ;* PHANTOM MODE
     END CASE
*
*---- DEFINE FILE LOAD CRITERIA
*
      FSEL=""
      FSEL<1> ='SSELECT DIVISION WITH CONO = "###"'
      FSEL<2> ='SSELECT DEPARTMENT WITH CONO = "###" BY CONO BY-EXP DEPT.DIV BY DEPT.NO'
      FSEL<3> ='SSELECT COST.CNTR WITH CONO = "###"'
      FSEL<4> ='SSELECT OPERATION WITH CONO = "###"'
      FSEL<5> ='SSELECT COST.CNTR WITH CONO = "###" BY CONO BY CCTR BY-EXP OPER'
      FSEL<6> ='SSELECT EMPLOYEE WITH CONO = "###"'
      FSEL<7> ='SSELECT JOB WITH CONO = "###" AND WITH STATUS < "6" AND WITH STATUS # "4"'
      FSEL<8> ='SSELECT INVENTORY WITH CONO = "###"'
      FSEL<9> ='SSELECT SPOILAGE.CODES WITH CONO = "###"'
      FSEL<10>='SSELECT SF.PROMPT WITH CONO = "###"'
*
      FNAM = "";        FSIZ = "";        KSIZ = "";       MASF = ""
      FNAM<1> = "DIV";  FSIZ<1> =  "64";  KSIZ<1> =  "2";  MASF<1> = 0
      FNAM<2> = "DEP";  FSIZ<2> =  "64";  KSIZ<2> =  "7";  MASF<2> = 0
      FNAM<3> = "CTR";  FSIZ<3> =  "64";  KSIZ<3> =  "3";  MASF<3> = 0
      FNAM<4> = "OPR";  FSIZ<4> = "128";  KSIZ<4> =  "4";  MASF<4> = 0
      FNAM<5> = "COP";  FSIZ<5> =  "32";  KSIZ<5> =  "7";  MASF<5> = 0
      FNAM<6> = "EMP";  FSIZ<6> =  "64";  KSIZ<6> =  "6";  MASF<6> = 0
      FNAM<7> = "JOB";  FSIZ<7> =  "64";  KSIZ<7> = "12";  MASF<7> = 0
      FNAM<8> = "INV";  FSIZ<8> =  "64";  KSIZ<8> = "15";  MASF<8> = 0
      FNAM<9> = "SPL";  FSIZ<9> =  "64";  KSIZ<9> =  "8";  MASF<9> = 0
      FNAM<10>= "PMT";  FSIZ<10>= "128";  KSIZ<10>=  "2";  MASF<10>= 0
*
*---- OPEN ALL FILES
*
      OPEN "","CONTROL" TO CONTROL ELSE
         ERRMSG = "CANNOT OPEN CONTROL FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","COMPANY" TO COMPANY ELSE
         ERRMSG = "CANNOT OPEN COMPANY FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","DIVISION" TO DIVISION ELSE
         ERRMSG = "CANNOT OPEN DIVISION FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
         ERRMSG = "CANNOT OPEN DEPARTMENT FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "CANNOT OPEN COST.CNTR FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","OPERATION" TO OPERATION ELSE
         ERRMSG = "CANNOT OPEN OPERATION FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","EMPLOYEE" TO EMPLOYEE ELSE
         ERRMSG = "CANNOT OPEN EMPLOYEE FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","JOB" TO JOB ELSE
         ERRMSG = "CANNOT OPEN JOB FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
         ERRMSG = "CANNOT OPEN CUSTOMER FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","INVENTORY" TO INVENTORY ELSE
         ERRMSG = "CANNOT OPEN INVENTORY FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE
         ERRMSG = "CANNOT OPEN SPOILAGE.CODES FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","SF.PROMPT" TO SF.PROMPT ELSE FSEL<10> = ""
      OPEN "","DOWNLOAD" TO DOWNLOAD ELSE
         ERRMSG = "CANNOT OPEN DOWNLOAD FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","OUT.QUEUE" TO OUT.QUEUE ELSE
         ERRMSG = "CANNOT OPEN OUT.QUEUE FILE"; GOSUB 90000
         GOTO 99999
      END
      OPEN "","CMD.QUEUE" TO CMD.QUEUE ELSE
         ERRMSG = "CANNOT OPEN CMD.QUEUE FILE"; GOSUB 90000
         GOTO 99999
      END
*
*---- INITIALIZATION
*
      CDATE = DATE()
      CTIME = TIME()
      IF CTIME < 10 THEN CDATE = DATE()
      READU TREC FROM CONTROL, "HNP.DOWNLOAD.LOCK" LOCKED
         ERRMSG = "Download phantom is running! "; GOSUB 90000
         GOTO 99999
      END ELSE
         NULL
      END
      READU TREC FROM CONTROL, "HNP.DOWNLOAD.CNTL" ELSE TREC = ""
      TREC = ""
      TREC<2> = "STARTED ON ":OCONV(CDATE,"D2/"):" AT ":OCONV(CTIME,"MTS")
      WRITE TREC ON CONTROL, "HNP.DOWNLOAD.CNTL"
*
      READ CCONO FROM CONTROL, "CORP.CONO" THEN
         MATREAD CCO.REC FROM CONTROL, "CORPORATE" THEN
            IF CCO.OP = "Y" THEN MASF<4> = 1
            IF CCO.INV = "Y" THEN MASF<8> = 1
         END
      END ELSE
         CCONO = ""
      END
*
*---- MAIN PROCESSING
*
      TTIMER = 5          ;* SECONDS BETWEEN TERMINATE REQUEST CHECK
      XTIMER = 60         ;* SECONDS BETWEEN DOWNLOAD REQUEST CHECK
      XCOUNT = XTIMER
      ACTIVE = 1
      LOOP
         READ TREC FROM CONTROL, "HNP.DOWNLOAD.CNTL" ELSE TREC = ""
         IF TREC<1> = "STOP" THEN ACTIVE = 0
      WHILE ACTIVE DO
         IF XCOUNT >= XTIMER THEN
            FOR NETID = 1 TO 250
               MATREADU DLOAD.REC FROM DOWNLOAD, NETID THEN
                  GOSUB 100
                  MATWRITE DLOAD.REC ON DOWNLOAD,NETID
               END LOCKED
                  NULL
               END ELSE
                  RELEASE DOWNLOAD, NETID
               END
            NEXT NETID
            XCOUNT = 0
         END
         IF RMODE = "B" THEN
            ACTIVE = 0
         END ELSE
            SLEEP TTIMER
            XCOUNT = XCOUNT + TTIMER
         END
      REPEAT
      CDATE = DATE()
      CTIME = TIME()
      IF CTIME < 10 THEN CDATE = DATE()
      READU TREC FROM CONTROL, "HNP.DOWNLOAD.CNTL" ELSE TREC = ""
      TREC = ""
      TREC<2> = "STOPPED ON ":OCONV(CDATE,"D2/"):" AT ":OCONV(CTIME,"MTS")
      WRITE TREC ON CONTROL, "HNP.DOWNLOAD.CNTL"
      GOTO 99999
*
*---- CHECK DOWNLOAD PARAMETERS
*
100 *
      STATUS = ""
      RECCNT = "";    HIGHKEY = ""
**** T23448
      FDIV = DLOAD.DIV
      IF FDIV # "ALL" AND FDIV # "" THEN
       FSEL<1> ='SSELECT DIVISION WITH CONO = "###" AND WITH DIV = "##"'
       FSEL<2> ='SSELECT DEPARTMENT WITH CONO = "###" AND WITH DEPT.DIV = "##" BY CONO BY-EXP DEPT.DIV BY DEPT.NO'
       FSEL<6> ='SSELECT EMPLOYEE WITH CONO = "###" AND WITH EMP.DIV = "##"'
       FSEL<7> ='SSELECT JOB WITH CONO = "###" AND WITH STATUS < "6" AND WITH STATUS # "4" AND WITH JOB.DIV = "##"'
      END
**** T23448
      DCNT = DCOUNT(DLOAD.FILE,VM)
      FOR DPTR = 1 TO DCNT
         CDATE = DATE()
         CTIME = TIME()
         IF CTIME < 10 THEN CDATE = DATE()
         NDATE = DLOAD.NEXT.DATE<1,DPTR>
         NTIME = ICONV((DLOAD.NEXT.TIME<1,DPTR>:":00"),"MTS")
         CYCLE = DLOAD.CYCLE<1,DPTR>
         LFLAG = DLOAD.FLAG<1,DPTR>
         BEGIN CASE
         CASE LFLAG = "*"
            LOADFLAG = 1
         CASE CYCLE = "X"
            LOADFLAG = 0
         CASE NDATE = "" OR NTIME = ""
            LOADFLAG = 0
         CASE CDATE = NDATE AND CTIME >= NTIME
            LOADFLAG = 1
         CASE CDATE > NDATE
            LOADFLAG = 1
         CASE 1
            LOADFLAG = 0
         END CASE
         IF LOADFLAG THEN
            FNAME = DLOAD.FILE<1,DPTR>
            LOCATE FNAME IN FNAM,1 SETTING FPTR THEN
               IF MASF<FPTR> = "Y" THEN
                  CONO = CCONO
               END ELSE
                  CONO = DLOAD.CONO
               END
               SELCMD = FSEL<FPTR>
               SELFIL = FNAM<FPTR>
               KSIZE  = KSIZ<FPTR>
               RSIZE  = FSIZ<FPTR>
               IF SELCMD # "" THEN
                  IF RECCNT = "" THEN
                     MSG = "@START"
                     CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
                  END
                  GOSUB 200
*                  DLOAD.LAST.DATE<1,DPTR> = CDATE
*                  DLOAD.LAST.TIME<1,DPTR> = OCONV(CTIME,"MTS")[1,5]
                  DLOAD.FLAG<1,DPTR> = ""
                  BEGIN CASE
                  CASE CYCLE = "X" OR CYCLE = ""
                     DLOAD.CYCLE<1,DPTR> = "X"
                     IF DLOAD.NEXT.DATE<1,DPTR> < CDATE THEN
                        DLOAD.NEXT.DATE<1,DPTR> = CDATE
                     END
                  CASE LFLAG = "*"
                     NULL
                  CASE NUM(CYCLE)
                     LOOP
                        NDATE = DLOAD.NEXT.DATE<1,DPTR> + CYCLE
                        DLOAD.NEXT.DATE<1,DPTR> = NDATE
                     UNTIL NDATE > CDATE DO
                     REPEAT
                  CASE CYCLE = "M" 
*T22288 v on next two lines use 4 digit years                    
                     ODATE = OCONV(DLOAD.NEXT.DATE<1,DPTR>,"D4-")
                     MM = ODATE[1,2]; DD = ODATE[4,2]; YY = ODATE[7,4]
*T22288 ^                     
                     LOOP
                        MM = MM + 1
                        IF MM > 12 THEN
                           MM = 1
                           YY = YY + 1
                        END
                        IF MM < 10 THEN MM = "0":MM
                        IF YY < 10 THEN YY = "0":YY
                        NDATE = ICONV((MM:"-":DD:"-":YY),"D")
                        DLOAD.NEXT.DATE<1,DPTR> = NDATE
                     UNTIL NDATE > CDATE DO
                     REPEAT
                  END CASE
               END
            END
         END
      NEXT DPTR
*
      IF RECCNT <> "" THEN
         MSG = "@CRITICAL"
         CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
         MSG = "PAUSE"
         CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
         FOR DPTR = 1 TO DCNT
            IF RECCNT<DPTR> # "" THEN
               FPTR = DPTR
               GOSUB 300
            END
         NEXT DPTR
         MSG = "CONTINUE"
         CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
         MSG = "@STOP"
         CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      END
      RETURN
*
*---- DOWNLOAD FILE DATA
*
200 *
      IF RMODE = "B" THEN
         PRINT @(0,23):@(-4):"Processing ":SELFIL:" file! ":
      END
      MSG = "CLOSE-KEY^71"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^1"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "DELETE-KEY^DATA\TEMP":SELFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^2"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "OPEN-KEY^71^DATA\TEMP":SELFIL:"^":KSIZE:"^":RSIZE
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^1"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
      CP = INDEX(SELCMD,"###",1)
      IF CP = 0 THEN
         CMD = SELCMD
      END ELSE
         CMD = SELCMD[1,CP-1]:CONO:SELCMD[CP+3,999]
      END
**** T23448
      CP = INDEX(CMD,"##",1)
      IF CP = 0 THEN
         CMD = CMD
      END ELSE
         CMD = CMD[1,CP-1]:FDIV:CMD[CP+2,999]
      END
**** T23448 ^
      SELMSG=""
      PERFORM CMD RTNLIST FLIST CAPTURING SELMSG
      RECCNT<FPTR> = 0
      DONE = 0
      LOOP
         READNEXT FID,FMP FROM FLIST ELSE DONE = 1
      UNTIL DONE DO
         IF FID[1,3] = CONO THEN
            GOSUB 1000
            GOSUB 2000
         END
      REPEAT
      MSG = "CLOSE-KEY^71"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^1"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      RETURN
*
*---- MAKE LOAD PERMANENT
*
300 *
      SELFIL = FNAM<FPTR>
      SYSFIL = "!":SELFIL
      MSG = "CLOSE-KEY^":SYSFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^1"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "DELETE-KEY^":SYSFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^2"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "RENAME-KEY^DATA\TEMP":SELFIL:"^":SYSFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^2"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "OPEN-KEY^":SYSFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@SLEEP^1"
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "TABLE-UPD^":SYSFIL:"^":RECCNT<FPTR>:"^":HIGHKEY<FPTR>
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "@TIMESTAMP^":SELFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      MSG = "SYNC^":SYSFIL
      CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
      RETURN
*
*---- GET FILE DATA
*
1000 *
      REC = ""
      IF FID[1,3] # CONO THEN RETURN
      BEGIN CASE
      CASE SELFIL = "DIV"
         MATREAD DIV.REC FROM DIVISION, FID ELSE RETURN
         REC<1> = FID[4,99]
         REC<2> = DIV.DESC[1,30]
      CASE SELFIL = "DEP"
         MATREAD DEPT.REC FROM DEPARTMENT, FID ELSE RETURN
         IF DEPT.DIV = "" THEN RETURN
         REC<1> = DEPT.DIV<1,FMP>:FID[4,99]
         REC<2> = DEPT.DESC[1,20]
      CASE SELFIL = "CTR"
         MATREAD CCTR.REC FROM COST.CNTR, FID ELSE RETURN
         IF CCTR.TYPE = "F" THEN RETURN
         REC<1> = FID[4,99]
         REC<2> = CCTR.DESC[1,30]
         REC<3> = CCTR.DEPT
      CASE SELFIL = "OPR"
         MATREAD OPER.REC FROM OPERATION, FID ELSE RETURN
         REC<1> = FID[4,99]
         REC<2> = OPER.DESC[1,30]
         REC<3> = OPER.MATL.REQ
         REC<4> = OPER.CTYPE
         REC<5> = OPER.PROMPT[1,15]
         REC<6> = ""
         IF NUM(OPER.SF.PROMPT<1,1>) THEN
            REC<7> = OPER.SF.PROMPT<1,1>
            PCNT = DCOUNT(OPER.SF.PROMPT,VM)
            FOR PPTR = 2 TO PCNT
               REC<7> = REC<7>:",":OPER.SF.PROMPT<1,PPTR>
            NEXT PPTR
         END
      CASE SELFIL = "COP"
         MATREAD CCTR.REC FROM COST.CNTR, FID ELSE RETURN
         REC<1> = FID[4,99]:CCTR.OPER<1,FMP>
         REC<2> = CCTR.OPER.TYPE<1,FMP>
         BEGIN CASE
         CASE CCTR.OPER.STD.IMP<1,FMP>+0 > 0
            REC<3> = "OPH"
            REC<4> = CCTR.OPER.STD.IMP<1,FMP>+0
         CASE CCTR.OPER.STD.HRS<1,FMP>+0 > 0
            REC<3> = "SEC"
            REC<4> = CCTR.OPER.STD.HRS<1,FMP>*36
         END CASE
      CASE SELFIL = "EMP"
         MATREAD EMP.REC FROM EMPLOYEE, FID ELSE RETURN
         IF EMP.TERM.DATE # "" THEN RETURN
         REC<1> = FID[4,99]
         REC<2> = (TRIM(EMP.FRST.NAME:" ":EMP.LAST.NAME))[1,30]
         REC<3> = EMP.DEPT
         REC<4> = ""                 ;* (M)ale, (F)emale
*        REC<5> = ""                 ;* (P)rimary or (S)econdary language
         REC<5> = EMP.LANGUAGE
      CASE SELFIL = "JOB"
         MATREAD JOB.REC FROM JOB, FID ELSE RETURN
         IF JOB.STATUS<1,1> > "5" THEN RETURN
         IF CO.JOB.CUST.FLG = "C" THEN
            MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE RETURN
            JDESC = CUST.NAME
         END ELSE
            JDESC = JOB.DESC<1,1>
         END
         IF JDESC = "" THEN JDESC = FID[4,99]
         REC<1> = FID[4,99]
         REC<2> = JDESC[1,40]
         REC<3> = JOB.DIV
         REC<4> = JOB.TYPE
      CASE SELFIL = "INV"
         MATREAD INV.REC FROM INVENTORY, FID ELSE RETURN
         REC<1> = FID[4,99]
         REC<2> = INV.DESC[1,30]
         REC<3> = INV.PAP.TYPE
      CASE SELFIL = "SPL"
         READ SPL.DESC FROM SPOILAGE.CODES, FID ELSE RETURN
         REC<1> = FID[4,99]
         REC<2> = SPL.DESC[1,30]
      CASE SELFIL = "PMT"
         MATREAD SFP.REC FROM SF.PROMPT, FID ELSE RETURN
         REC<1> = FID[4,99]
         REC<2> = SFP.PROMPT[1,20]
         REC<3> = ""                 ;* Prompt in secondary language
         REC<4> = SFP.RESP.TYPE
         REC<5> = SFP.RESP.LEN
         REC<6> = SFP.RESP.SCALER
         REC<7> = SFP.VALDAT
      END CASE
      RETURN
*
*---- UPDATE OUTPUT QUEUE
*
2000 *
      IF REC<1> # "" THEN
         REC = CHANGE(REC,"\","_")
         RCNT = DCOUNT(REC,AM)
         MREC = REC<1>
         FOR RPTR = 2 TO RCNT
            MREC = MREC:"\":REC<RPTR>
         NEXT RPTR
         MSG = "PUT-KEY^71^":MREC
         CALL HNP.ADDQUEUE(NETID,MSG,OUT.QUEUE,QPTR,STATUS)
         RECCNT<FPTR> = RECCNT<FPTR> + 1
         HIGHKEY<FPTR> = REC<1>
      END
      RETURN
*
*---- ERROR ROUTINE
*
90000 *
      IF RMODE = "B" THEN
         PRINT @(0,23):@(-4):ERRMSG:
         INPUT REPLY,1:
         PRINT @(0,23):@(-4):
      END
      RETURN
*
*---- END OF PROGRAM
*
99999 *
      STOP
   END
