   FUNCTION PMC_SEND_MAIL(MAIL.ADDRESS.LIST,MAIL.SUBJECT,MAIL.TEXT,MAIL.ATTACH)
*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - FUNBP
* PROGRAM     - PMC_SEND_MAIL
* BY          - ABDULLAH JIBALY
* DATE        - 04/11/2001
* DESCRIPTION - This function sends an email with following specifications:
*               MAIL.ADDRESS.LIST: List of comma seperated email addresses
*               MAIL.SUBJECT     : The subject of the email
*               MAIL.TEXT        : Filename of body text
*               MAIL.ATTACH      : Describes the attachment
*               MAIL.ATTACH<1>   : The type of the attachment, which can be
*                                  "BIN" for BINARY or "ASCII" for plain text
*               MAIL.ATTACH<2>   : The filename of the file to attach
*
* RETURNS     - NO ERRORS        : 0
*               RECOVERABLE ERR. : 1:@AM:MAIL.ERROR.DESC
*               FATAL ERROR      : 2:@AM:MAIL.ERROR.DESC
*ENDDOC
*********************************************************************
*
*COPY>CPYLIB>CHAR
OPEN '','CONTROL' TO CONTROL ELSE STOP
*
*----- INITIALIZATION
*
   MAIL.PLATFORM = UPCASE(SYSTEM(33))[1,7]
*
*----- CHECK EMAIL ADDRESSES
*
   MAIL.ADDRESS.CNT = DCOUNT(MAIL.ADDRESS.LIST,",")
   FOR IDX = 1 TO MAIL.ADDRESS.CNT
      MAIL.ADDRESS = TRIM(FIELD(MAIL.ADDRESS.LIST,",",IDX))
      MAIL.ADDRESS.COMP = FIELD(MAIL.ADDRESS,"@",2)
      MAIL.ADDRESS.DOM  = FIELD(MAIL.ADDRESS.COMP,".",2)
      IF MAIL.ADDRESS.COMP = '' OR MAIL.ADDRESS.DOM = '' THEN
         MAIL.ERROR.DESC = "Invalid email address (":MAIL.ADDRESS:")."
         RETURN 2:AM:MAIL.ERROR.DESC
      END
   NEXT IDX
*
*----- CHECK EMAIL SUBJECT
*
   IF MAIL.SUBJECT[1,1] # '"' OR MAIL.SUBJECT[LEN(MAIL.SUBJECT),1] # '"' THEN
      MAIL.SUBJECT = DQUOTE(MAIL.SUBJECT)
   END
*
*----- CHECK EMAIL ATTACHMENT
*
   BEGIN CASE
      CASE DCOUNT(MAIL.ATTACH,AM) # 2
         MAIL.ATTACH = ""
      CASE MAIL.PLATFORM = "WINDOWS" AND MAIL.ATTACH<1> = "BIN"
         MAIL.ATTACH = "-attach ":MAIL.ATTACH<2>
      CASE MAIL.PLATFORM = "WINDOWS"
         MAIL.ATTACH = "-attacht ":MAIL.ATTACH<2>
      CASE MAIL.PLATFORM = "UNIX"
         MAIL.ATTACH = MAIL.ATTACH<2>
      CASE 1
   END CASE
*
*----- SEND EMAIL
*
   BEGIN CASE
      CASE MAIL.PLATFORM = "UNIX"
         STMT = "!PATH=/usr/local/bin/ mpack -s ":MAIL.SUBJECT
         STMT:= " -d ":MAIL.TEXT:" ":MAIL.ATTACH:" ":MAIL.ADDRESS.LIST
      CASE MAIL.PLATFORM = "WINDOWS"
         LOGNAME = "LOGNAME"
         CALL SYSVARS.SUB(LOGNAME)
         STMT = "!blat ":MAIL.TEXT:" -to ":MAIL.ADDRESS.LIST
         STMT:= " -s ":MAIL.SUBJECT:" -f ":LOGNAME:" ":MAIL.ATTACH
         SWAP "/" WITH "\" IN STMT
      CASE 1
         MAIL.ERROR.DESC = "UNKNOWN PLATFORM (":MAIL.PLATFORM:"), "
         MAIL.ERROR.DESC:= "CANNOT START MAIL SYSTEM"
         RETURN 2:AM:MAIL.ERROR.DESC
   END CASE
   UDTEXECUTE STMT CAPTURING CAP RETURNING RET
   WRITE "MAIL.PLATFORM ":MAIL.PLATFORM:" STMT  ": STMT : " $$ " : CAP:"  ~~~  ":RET ON CONTROL,"EMAIL10"
   IF CAP # '' THEN
     RETURN 2 : @AM : CAP
   END
*
   RETURN 0
