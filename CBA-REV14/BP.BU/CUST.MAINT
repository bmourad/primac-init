*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.CUST
*************************************************************
* REVISION      - [09.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - PMCBP
* PROGRAM       - CUST.MAINT
* BY            - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
* DATE          - 09/17/84
* DESCRIPTION   - This program updates and maintains CUSTOMER file.
* (03/27/90) added the Ship To logic for OPS.
*T19656 rick 08/06/1996 * Fix problem with N.KEY1 being null
*                         associate with csf 23683
*T19656 rick 08/06/1996 * Add logic to cause job ticket to track
*                         changes.
*T21684 julie 03/07/1997 * IF YOU CHANGE THE CUSTOMER NAME, THE XREF
*                          STILL PICKS UP THE OLD NAME
*T21983 rick 06/10/1997 * Modify state code logic to not be required if
*                         Country is USA
*T22023 lanny 06/19/1997 * CRedit screen reads OPEN.RECV regardless of
*                          CO.ARS flag.
*T23105 markt 07/30/1998 * Correct data restore after 'E' from X-REF in
*                          fields 7 & 8.
*T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since the
*                         COUNTRY.CODE file can hold multiple attributes
*                         of data.
*T25762 renee 05/30/2001 * Open INVOICE file that will be used in
*                          CUST.INV.INQ. Also change that screen to 
*                          point to SECOND.SCREENS
*T25763 renee 06/06/2001 * ADD PURGED INVOICE VIEWING OPTION
*T25890 ajibaly 07/13/2001 * ADD FIELD FOR CREDIT HOLD REASON
*T25949 cmykleb 01/23/2002 * Allow users to enter Ship-To information
*                            regardless of the CO.OPS flag.
*T25978 adelgado 01/28/2002 * Add the use of prompts (S,SR,SB,ST).
*T26069 ajibaly 02/01/2002 * ADD CUSTOMER INQUIRY READ-ONLY
*                            FUNCTIONALITY
*T25889 ajibaly 02/04/2002 * ADD SCREEN FOR FREE-FORM COMMENT ENTRY
*T25888 ajibaly 02/05/2002 * ADD SECOND ADDRESS SECTION FOR REFERENCE
*                            ONLY
*T26126 adelgado 02/21/2002 * Implement the LOCKED clause.
*T26649 cmykleb 06/04/2002 * Change Customer Order Inquiry to a screen
*                            instead of a x-ref.
*T26805 epitka 08/16/2002 * add email address
*T26915 ajibaly 10/16/2002 * add emailing of statements
*************************************************************
*
*---- FILE EQUATES
*
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>TERMS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CSR.CODE
*COPY>PMC.CPYLIB>FOB
*COPY>ICS.CPYLIB>PRICE.TABLE
*COPY>PMC.CPYLIB>COUNTRY.CODE          ;*T25159
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>CHAR
*
*---- DIMENSION RECORDS
*
   DIM CUST.REC.SAVE(100)
*
*---- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
   PROCREAD BUFFER ELSE
      ERRMSG = "MUST RUN FROM A PROC"
      GOSUB 91000; GOTO 99999
   END
   BUFFER1 = BUFFER<1>[2,3]
   F.BUFFER = BUFFER<2>
   BUFFER = BUFFER<1>[1,1]
   IF BUFFER # "M" AND BUFFER # "I" AND BUFFER # "X" THEN
      ERRMSG = "INVALID INPUT BUFFER FROM PROC"
      GOSUB 91000; GOTO 99999
   END
   IF BUFFER = 'M' THEN MODE = 'M' ELSE MODE = 'I' ;*T26069
*
*---- OPEN FILES
*
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
      ERRMSG="PMC.SCREENS";GOTO 93000
   END
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL";GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY";GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG="SHIP.VIA";GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG="JOB";GOTO 93000
   OPEN '','ORDER' TO ORDER ELSE ERRMSG="ORDER";GOTO 93000
   OPEN '','FOB' TO FOB ELSE ERRMSG="FOB";GOTO 93000
   OPEN '','CSR.CODE' TO CSR.CODE ELSE ERRMSG="CSR.CODE";GOTO 93000
   OPEN '','TAX' TO TAX ELSE ERRMSG="TAX";GOTO 93000
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG="XREF.DATA";GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG="PREFIX";GOTO 93000
   OPEN '','TERMS' TO TERMS ELSE ERRMSG="TERMS";GOTO 93000
   OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG="SALESMAN";GOTO 93000
   OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG="SHIP.TO";GOTO 93000
   OPEN '','CONTACT.CODE' TO CONTACT.CODE ELSE
      ERRMSG='CONTACT.CODE';GOTO 93000
   END
   OPEN '','COUNTRY.CODE' TO COUNTRY.CODE ELSE
      ERRMSG='COUNTRY.CODE';GOTO 93000
   END
   OPEN '','PRICE.TABLE' TO PRICE.TABLE ELSE
      ERRMSG='PRICE.TABLE';GOTO 93000
   END
   IF F.BUFFER = "P" THEN
      OPEN '','PROSPECT' TO CUSTOMER ELSE ERRMSG="PROSPECT";GOTO 93000
      OPEN '','PROSPECT.XREF' TO CUSTOMER.XREF ELSE
         ERRMSG="PROSPECT.XREF";GOTO 93000
      END
      NO.CHK.FILE = 0; C.P.NAME = "PROSPECT"
      OPEN '','CUSTOMER' TO CHECK.FILE ELSE NO.CHK.FILE = 1
      OPEN '','CUSTOMER.XREF' TO CHECK.FILE.XREF ELSE
         ERRMSG ="CUSTOMER.XREF";GOTO 93000
      END
   END ELSE
      OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG="CUSTOMER";GOTO 93000
      OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE
         ERRMSG="CUSTOMER.XREF";GOTO 93000
      END
      NO.CHK.FILE = 0; C.P.NAME = "CUSTOMER"
      OPEN '','PROSPECT' TO CHECK.FILE ELSE NO.CHK.FILE = 1
   END
   IF BUFFER1 = "MLS" THEN
      OPEN '','MTYPE.CODE' TO MTYPE.CODE ELSE
         ERRMSG="MTYPE.CODE";GOTO 93000
      END
   END
   OPEN '','INVOICE' TO INVOICE ELSE ERRMSG="INVOICE";GOTO 93000
*
*---- GET COMPANY NUMBER
*
   CONO=''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO="END" THEN GOTO 99999
   IF CO.ARS = "Y" THEN
      OPEN '','OPEN.RECV' TO OPEN.RECV ELSE ERRMSG="OPEN.RECV";GOTO 93000
   END
   MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE
      MAT OPCO.REC = ""
   END
*
*---- GET FISCAL PER
*
   BEGIN CASE
      CASE BUFFER1 = "ARS"
         READV PER FROM CONTROL , CONO:"ARSFISCAL", 1 ELSE
            ERRMSG = "FISCAL PERIOD MISSING" ; GOSUB 91000 ; GOTO 99999
         END
      CASE BUFFER1 = "JCS"
         READV PER FROM CONTROL , CONO:"JCFISCAL" , 1 ELSE
            ERRMSG = "FISCAL PERIOD MISSING" ; GOSUB 91000 ; GOTO 99999
         END
      CASE BUFFER1 = "MLS"
      CASE 1
         ERRMSG = "SYSTEM (":BUFFER1:") NOT ON FILE" 
         GOSUB 91000 ; GOTO 99999
   END CASE
*
*---- INITIALIZATION
*
   MAT EDIT.COM.DRIVER=""
   MAT GEN.XREF.REC=""
   LINE.SPACE=1
   PAGE.SIZE=2
   C.PAGE.SIZE=3
   BEGIN.PAGE=18
   C.BEGIN.PAGE=17
   LINES=0
   START.LINE=0
   OLD.LINES=0
   OPTION=''
   OLD.NAME=''
   NEW.NAME=''
   GXR.CO=CONO
   UNKNOWN=STR('?',30)
*
*---- GET SCREEN
*
   ECD.SCRN.CNT=12; *T26649
   IF F.BUFFER = "P" THEN
      ECD.SCRN.NAME="PRSP.MAINT"
   END ELSE
      ECD.SCRN.NAME="CUST.MAINT"
   END
   ECD.SCRN.NAME<2>="CUST.CREDIT.INQ"
   ECD.SCRN.NAME<3>="CUST.INV.INQ"
   ECD.SCRN.NAME<4>="CUST.JOB.INQ"
   ECD.SCRN.NAME<5>="CUST.MLS.SUB"
   ECD.SCRN.NAME<6>="SHIP.TO.MAINT"
   ECD.SCRN.NAME<7>="CUST.ORDER.INQ"
   ECD.SCRN.NAME<8>="CUST.TAX.SUB"
   ECD.SCRN.NAME<9>="CUST.PURGED.INV.INQ"
   ECD.SCRN.NAME<10>="PURGED.INV.INQ.DET"
   ECD.SCRN.NAME<11>="CUST.CMNT" ;*T25889
   ECD.SCRN.NAME<12>="CUST.ORDER.INQ" ; * T26649
   ECD.ACTION=1;CALL SCRN.EDIT
   MAT SCV.REC = ""
   IF BUFFER = "M" OR BUFFER = "X" THEN
      ECD.SCRN.NO = 1
      EXIT.FLAG = 1
   END ELSE
      ECD.SCRN.NO = 2
      EXIT.FLAG = 0
   END
   ESN = ECD.SCRN.NO
   ECD.ACTION=2;CALL SCRN.EDIT
*
*---- MAIN PROCESSING
5*
   ADDRESS.TOGGLED = 0; *T25888
   LN=1;OLD.START.LINE=0;NEW.CUST='NO';KEY1='';N.KEY1='';CUST.KEY='';LINES=0
   SCV.REC(30)<ESN,1>=DATE()
   ECD.NUM=30;ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         GOTO 99999
      CASE ECD.RET.VALUE=''
         ECD.O.R = "O" ; * T26556
         ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE='' OR ECD.RET.VALUE='END' THEN
            GOSUB 20000;GOTO 5
         END
         GXR.NAME=C.P.NAME
         GXR.XREF=CUSTOMER.XREF
         GXR.FILE=CUSTOMER
         GXR.SRCH.ID=ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN
            GOSUB 20000;GOTO 5
         END ELSE
            IF BUFFER = "M" THEN
               MATREADU CUST.REC FROM CUSTOMER,CONO:GXR.ID LOCKED
                  ERRMSG = 'CUSTOMER record is locked by user - '
                  ERRMSG:=GETUSERNAME(STATUS())
                  GOSUB 91000;GOTO 5 
               END ELSE 
                  ERRMSG=C.P.NAME:' ':GXR.ID:' IS MISSING'
                  GOSUB 91000;GOSUB 20000;GOTO 5
               END
            END ELSE
               MATREAD CUST.REC FROM CUSTOMER,CONO:GXR.ID ELSE
                  ERRMSG=C.P.NAME:' ':GXR.ID:' IS MISSING'
                  GOSUB 91000;GOSUB 20000;GOTO 5
               END
            END
            CUST.KEY = GXR.ID
            SCV.REC(1)<ESN>=CUST.KEY
            ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
            OLD.NAME=CUST.NAME;NEW.NAME=CUST.NAME
         END
      CASE ECD.RET.VALUE = "N" AND BUFFER = "M"
         CUST.KEY=ECD.RET.VALUE;MAT CUST.REC='';NEW.CUST="YES"
11*
         FND=0
         READU KEY1 FROM CONTROL,CONO:C.P.NAME ELSE KEY1="000001"
         LOOP
            N.KEY1=KEY1 + 1
            MATREAD CUST.REC.SAVE FROM CUSTOMER,CONO:KEY1 ELSE
               IF NO.CHK.FILE = 0 THEN
                  MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO:KEY1 ELSE
                     FND=1;GOTO 12
                  END
               END ELSE
                  FND=1;GOTO 12
               END
            END
            KEY1=KEY1 + 1
12*
         WHILE FND=0 DO REPEAT
         CUST.KEY=KEY1
         MATREADU CUST.REC FROM CUSTOMER, CONO:CUST.KEY LOCKED
            GOTO 11
         END THEN
            GOTO 11
         END
         IF N.KEY1 # "" THEN
            WRITE N.KEY1 ON CONTROL,CONO:C.P.NAME
         END
      CASE ECD.RET.VALUE # "" AND (BUFFER = "I" OR BUFFER = "X")
         MATREAD CUST.REC FROM CUSTOMER,CONO:ECD.RET.VALUE ELSE
            ERRMSG = "INVALID ":C.P.NAME:". TRY AGAIN !"
            GOSUB 91000;GOSUB 20000;GOTO 5
         END
         CUST.KEY = ECD.RET.VALUE
         SCV.REC(1)<ESN>=CUST.KEY
         ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
         OLD.NAME=CUST.NAME;NEW.NAME=CUST.NAME
      CASE ECD.RET.VALUE # ""
         MATREADU CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE LOCKED
            ERRMSG = 'CUSTOMER record is locked by user - '
            ERRMSG:=GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 5 
         END ELSE 
            SAVE.ERV = ECD.RET.VALUE
            ECD.NUM = 52
            ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE # "Y" THEN
               RELEASE CUSTOMER, CONO:SAVE.ERV
               GOTO 5
            END
            ECD.RET.VALUE = SAVE.ERV
            NEW.CUST = "YES"
            IF NO.CHK.FILE = 0 THEN
               MATREAD CUST.REC.SAVE FROM CHECK.FILE, CONO:CUST.KEY ELSE GOTO 7
               IF NEW.CUST = "NO" THEN
                  IF F.BUFFER = "P" THEN
                     ERRMSG = CUST.KEY:" is in CUSTOMER file. Try again !"
                  END ELSE
                     ERRMSG = CUST.KEY:" is in PROSPECT file. Try again !"
                  END
                  GOSUB 91000
                  GOTO 5
               END
            END
7*
            MAT CUST.REC='';NEW.CUST='YES'
         END
         CUST.KEY=ECD.RET.VALUE
         SCV.REC(1)<ESN>=CUST.KEY
         ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
         OLD.NAME = CUST.NAME; NEW.NAME = CUST.NAME
   END CASE
   BEGIN CASE
      CASE BUFFER # "M" AND BUFFER # "X"
         CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)
         GOSUB 20000
      CASE NEW.CUST = "YES"
         FOR REQUEST=1 TO 23
            ON REQUEST GOSUB 100,200,400,500,600,700,800,900,2600,1100,1200,1300,1000,1400,1500,1600,1700,1800,1900,2000,2100,2200,2500
            IF ECD.RET.VALUE="END" THEN
               RELEASE CUSTOMER,CONO:CUST.KEY
               GOSUB 20000
               GOTO 5
            END
         NEXT REQUEST
         LOOP
            LN=LINES + 1
            OLD.LINES=LINES
            GOSUB 5040
         WHILE LINES > OLD.LINES DO REPEAT
         LN=LINES
         LINES=DCOUNT(CUST.CONTACT.CD,VM)
         GOSUB 5045
         OLD.NAME=''
         GOSUB 10000; GOSUB 20000
      CASE 1
         GOSUB 6000
         GOSUB 40050
         GOSUB 10000; GOSUB 20000
   END CASE
   GOTO 5
*
*---- ENTER CUSTOMER NAME
100*
   ECD.O.R = "R" ; * T26556
   ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # '' THEN
      CUST.NAME=ECD.RET.VALUE;NEW.NAME=CUST.NAME
   END
   RETURN
*
*---- ENTER CUSTOMER ADDRESS
200*
   ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN GOTO 250
   IF ADDRESS.TOGGLED THEN
      CUST.ADDL.ADDR1=ECD.RET.VALUE
   END ELSE
      CUST.ADDR1=ECD.RET.VALUE
   END
   ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN GOTO 250
   IF ADDRESS.TOGGLED THEN
      CUST.ADDL.ADDR2=ECD.RET.VALUE
   END ELSE
      CUST.ADDR2=ECD.RET.VALUE
   END
   ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN GOTO 250
   IF ADDRESS.TOGGLED THEN
      CUST.ADDL.ADDR3=ECD.RET.VALUE
   END ELSE
      CUST.ADDR3=ECD.RET.VALUE
   END
230*
   ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 250
      CASE INDEX(ECD.RET.VALUE,',',1)
         ERRMSG='Commas cannot be used in this field'
         GOSUB 91000; GOTO 230
   END CASE
   CITY = ECD.RET.VALUE
240*
   IF OPCO.CNTY = "" THEN OPCO.CNTY = "USA"
   IF OPCO.CNTY # "USA" THEN
      ECD.O.R = "O"
   END
   ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 250
      CASE INDEX(ECD.RET.VALUE,',',1)
         ERRMSG='Commas cannot be used in this field'
         GOSUB 91000; GOTO 240
      CASE ECD.RET.VALUE = ""
         IF ADDRESS.TOGGLED THEN
            CUST.ADDL.ADDR4=CITY
         END ELSE
            CUST.ADDR4 = CITY
         END
      CASE 1
         IF ADDRESS.TOGGLED THEN
            CUST.ADDL.ADDR4=CITY:', ':ECD.RET.VALUE
         END ELSE
            CUST.ADDR4 = CITY:', ':ECD.RET.VALUE
         END
   END CASE
250*
   ;* IF THE ZIPCODE IS BLANK THEN GET ZIPCODE, FORCES ZIPCODE FOR ALT. ADDRESS
   IF SCV.REC(7)<ESN> # '' THEN RETURN
*
*---- ENTER ZIPCODE
300*
   ECD.NUM=7;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 309
   IF ADDRESS.TOGGLED THEN
      CUST.ADDL.ZIP=ECD.RET.VALUE
      RETURN
   END ELSE
      CUST.ZIP = ECD.RET.VALUE
   END
   IF OPCO.CNTY = "" THEN GOTO 309
305*
   ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = CUST.ADDL.OPS<1,4>
   ECD.ACTION = 5; CALL SCRN.EDIT
   IF CUST.ADDL.OPS<1,4> = "" THEN ECD.DEFAULT = OPCO.CNTY
   ECD.MAXL = 3; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 309
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = OPCO.CNTY
         ECD.RET.VALUE = ""; COUNTRY = ""
      CASE 1
         IF ECD.RET.VALUE = "???" THEN
            GXR.NAME = "GEN.CODE1"
            GXR.SORT.FILE = "COUNTRY.CODE"
            GXR.FILE = COUNTRY.CODE
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2;CALL SCRN.EDIT
            SCV.REC(ECD.NUM)<ESN> = GXR.ID
            GOSUB 40050
            IF GXR.ID = "" THEN GOTO 305
            ECD.RET.VALUE = GXR.ID
         END
         IF ECD.RET.VALUE = OPCO.CNTY THEN
            ECD.RET.VALUE = ""; COUNTRY = ""
         END ELSE
            MATREAD CTY.REC FROM COUNTRY.CODE,CONO:ECD.RET.VALUE ELSE
               ERRMSG="Cannot locate country code # ":ECD.RET.VALUE
               GOSUB 91000; GOTO 305
            END
            COUNTRY = CTY.DESC          ;*T25159
         END
   END CASE
   CUST.ADDL.OPS<1,4>=ECD.RET.VALUE
   SCV.REC(8)<ESN,1>=COUNTRY
   ECD.NUM=8;ECD.ACTION=5;CALL SCRN.EDIT
309*
   RETURN
*
*---- ENTER SORT NAME
400*
   IF CUST.SORT.NAME="" THEN ECD.DEFAULT=CUST.NAME
   ECD.NUM=37;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.SORT.NAME=ECD.RET.VALUE
   RETURN
*
*---- ENTER ATTENTION
500*
   ECD.NUM=38;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.ATTENTION=ECD.RET.VALUE
   RETURN
*
*---- ENTER TELEPHONE
600*
   ECD.NUM=9;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN GOTO 650
   IF ECD.RET.VALUE # '' THEN
      IF LEN(ECD.RET.VALUE)=10 THEN
         CUST.PHONE=ECD.RET.VALUE
         C.PH=CUST.PHONE[1,3]:"-":CUST.PHONE[4,3]:"-":CUST.PHONE[7,4]
         P_X  = 16 ; P_Y = 12 ; P_VALUE = C.PH ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CUST.PHONE=C.PH
         ECD.NUM = 9; SCV.REC(ECD.NUM)<ESN> = CUST.PHONE
         ECD.ACTION = 5; CALL SCRN.EDIT
      END ELSE
         CUST.PHONE=ECD.RET.VALUE
      END
   END ELSE
      CUST.PHONE=''
   END
650*
   RETURN
*
*---- ENTER SALESMAN
700*
   ECD.NUM=10;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 750
      CASE ECD.RET.VALUE = "???"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "SALESMAN"
         GXR.FILE = SALESMAN
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(ECD.NUM)<ESN> = CUST.SALESMAN
            GOSUB 40050; GOTO 700
         END
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 40050
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD SALESMAN.REC FROM SALESMAN,CONO:ECD.RET.VALUE ELSE
      ERRMSG="SALESREP RECORD IS INVALID";GOSUB 91000;GOTO 700
   END
   CUST.SALESMAN=ECD.RET.VALUE
   SCV.REC(11)<ESN,1>=SALS.NAME
   ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
750*
   RETURN
*
*---- ENTER CUSTOMER SERVICE REP
800*
   ECD.NUM=49;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 850
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "CSR.CODE"
         GXR.FILE = CSR.CODE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(ECD.NUM)<ESN> = CUST.CSR.CODE
            GOSUB 40050; GOTO 800
         END
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 40050
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD CSR.REC FROM CSR.CODE,CONO:ECD.RET.VALUE ELSE
      ERRMSG="Cannot locate Service Rep # ":ECD.RET.VALUE
      GOSUB 91000; GOTO 800
   END
   CUST.CSR.CODE=ECD.RET.VALUE
   SCV.REC(50)<ESN,1>=CSR.DESC
   ECD.NUM=50;ECD.ACTION=5;CALL SCRN.EDIT
850*
   RETURN
*
*---- ENTER INSTRUCTION
900*
   ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.INT.INST = ECD.RET.VALUE
   RETURN
*
*---- ENTER MASTER ACCT
1000*
   ECD.NUM=13;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1050
      CASE ECD.RET.VALUE = ""
         CUST.ACCT = ""
         GOTO 1050
      CASE 1
         READ SAVE.CUST.REC FROM CUSTOMER,CONO:ECD.RET.VALUE ELSE
            ERRMSG="INVALID MASTER ACCOUNT";GOSUB 91000;GOTO 1000
         END
         CUST.ACCT = ECD.RET.VALUE
   END CASE
1050*
   RETURN
*
*---- ENTER SHIP METHOD
1100*
   ECD.NUM=33;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1150
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "??"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "SHIP.VIA"
         GXR.FILE = SHIP.VIA
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(ECD.NUM)<ESN> = CUST.SHIP.VIA
            GOSUB 40050; GOTO 1100
         END
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 40050
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate Ship Via # ":ECD.RET.VALUE
      GOSUB 91000; GOTO 1100
   END
   CUST.SHIP.VIA = ECD.RET.VALUE
   ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = SHPV.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
1150*
   RETURN
*
*---- ENTER SHIPPING TERMS
1200*
   ECD.NUM=48;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.ADDL.OPS<1,3> = ECD.RET.VALUE
   RETURN
*
*---- ENTER FOB
1300*
   ECD.NUM = 47; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1350
      CASE ECD.RET.VALUE = ""
         CUST.ADDL.OPS<1,2> = ECD.RET.VALUE
         MAT FOB.REC = ""; GOTO 1340
      CASE ECD.RET.VALUE = "???"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "FOB"
         GXR.FILE = FOB
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         SCV.REC(47)<ESN> = GXR.ID
         GOSUB 40050
         IF GXR.ID = "" THEN GOTO 1300
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD FOB.REC FROM FOB,CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate F.O.B # ":ECD.RET.VALUE
      GOSUB 91000; GOTO 1300
   END
   CUST.ADDL.OPS<1,2> = ECD.RET.VALUE
1340*
   ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = FOB.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
1350 RETURN
*
*---- ENTER START DATE
1400*
   ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.START.DATE = ECD.RET.VALUE
   RETURN
*
*---- ENTER CREDIT CODE
1500*
   ECD.NUM=15;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.CREDIT=ECD.RET.VALUE
   ECD.NUM=53;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.CREDIT.DESC=ECD.RET.VALUE
   RETURN
*
*---- ENTER CREDIT LIMIT
1600*
   ECD.NUM=16;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.CR.LIMIT = ECD.RET.VALUE
   RETURN
*
*---- ENTER PAYMENT TERMS
1700*
   ECD.NUM=17;ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE="END"
         GOTO 1750
      CASE ECD.RET.VALUE = "??"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "TERMS"
         GXR.FILE = TERMS
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 40050
         IF GXR.ID = "" THEN GOTO 1700
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD TERMS.REC FROM TERMS,CONO:ECD.RET.VALUE ELSE
      ERRMSG="TERMS RECORD IS INVALID";GOSUB 91000;GOTO 1700
   END
   CUST.TERMS = ECD.RET.VALUE
1750*
   RETURN
*
*---- ENTER CUSTOMER TYPE
1800*
   ECD.NUM=18;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.TYPE = ECD.RET.VALUE
   RETURN
*
*---- ENTER STATEMENT FLAG
1900*
   ECD.NUM=36;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   CUST.STMT.CODE = ECD.RET.VALUE
   ;* T26915 v
   IF CUST.EMAIL THEN GOSUB GET.STMT.SEND.FLAG
   ECD.NUM=58
   SCV.REC(ECD.NUM)<ESN>=CUST.STMT.SEND.FLAG
   ECD.ACTION=5;CALL SCRN.EDIT
   ;* T26915 ^
   RETURN
*
*---- ENTER STATEMENT EMAIL SEND FLAG
GET.STMT.SEND.FLAG: 
   ECD.PMSG = "Will this customer's statements be emailed (Y/N)?"
   ECD.NUM=52;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'Y' THEN
      CUST.STMT.SEND.FLAG = 'Email'
   END ELSE
      CUST.STMT.SEND.FLAG = ''
   END
   RETURN
*
*---- ENTER INVOICE PRINT TYPE
2000*
   ECD.NUM=44;ECD.ACTION=4
   IF OPCO.INV.PRT # "" AND CUST.IVC.CODE = "" THEN
      ECD.O.R = "O"; ECD.DEFAULT = OPCO.INV.PRT
   END
   CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.IVC.CODE = ECD.RET.VALUE
   RETURN
*
*---- ENTER PRICE CODE
2100*
   IF CO.OPS = "N" THEN RETURN
   ECD.NUM=42;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      CUST.PRICE.CODE = ECD.RET.VALUE
   END
   RETURN
*
*---- ENTER OVER/UNDER % NORM
2200*
   ECD.NUM=46;ECD.ACTION=4
   IF OPCO.OVR.NRM # "" AND CUST.ADDL.OPS<1,1> = "" THEN
      ECD.O.R = "O"; ECD.DEFAULT = OPCO.OVR.NRM
   END
   CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.ADDL.OPS<1,1> = ECD.RET.VALUE
   RETURN
*
*---- ENTER COMMISSION %
2500*
   ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CUST.COMMISSION = ECD.RET.VALUE
   RETURN
*
*---- ENTER CUSTOMER EMAIL
2600*
   ECD.NUM=57;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN RETURN
   ;* T26915 v
   EMAIL.ADDR=ECD.RET.VALUE
   IF ECD.RET.VALUE = '' THEN
      CUST.STMT.SEND.FLAG = ''
   END ELSE IF CUST.EMAIL = '' AND NEW.CUST = 'NO' THEN
      GOSUB GET.STMT.SEND.FLAG
   END
   SCV.REC(58)<ESN>=CUST.STMT.SEND.FLAG
   ECD.NUM=58;ECD.ACTION=5;CALL SCRN.EDIT
   ;* T26915 ^
   CUST.EMAIL=EMAIL.ADDR
   RETURN
*
*---- ENTER CONTACT SCREEN
5040*
   GOSUB 5045
   SLN=C.BEGIN.PAGE + LINE.SPACE * MOD(LN-1,C.PAGE.SIZE)
   P_X  = 53 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#2"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
5041*
   FILL="#";X=56;Y=SLN;TYP=1;MAXL=2;O.R="O"
   DEFAULT=CUST.CONTACT.CD<1,LN>;HMSG="ENTER CUSTOMER CONTACT CODE"
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE=''
         IF REQUEST="C" THEN GOTO 5041
         P_X  = 53 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 5043
      CASE VALUE='END'
         IF CUST.CONTACT<1,LN>='' THEN
            CUST.CONTACT.CD=DELETE(CUST.CONTACT.CD,1,LN,0)
            P_X  = 53 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
            P_X  = 56 ; P_Y = SLN ; P_VALUE = CUST.CONTACT.CD<1,LN>"L#2" ; P_OPT = ""
            P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:CUST.CONTACT<1,LN>"L#20"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
         GOTO 5043
      CASE VALUE = "??"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "CONTACT.CODE"
         GXR.FILE = CONTACT.CODE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         ECD.ACTION = 3;CALL SCRN.EDIT
         OLD.START.LINE = 0
         GOSUB 5045
         IF GXR.ID = "" THEN GOTO 5040
         VALUE = GXR.ID
         SLN=C.BEGIN.PAGE + LINE.SPACE * MOD(LN-1,C.PAGE.SIZE)
         P_X  = 53 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
         P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:VALUE"L#2"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END CASE
   IF VALUE # '' THEN
      READ CC.DESC FROM CONTACT.CODE,CONO:VALUE ELSE
         ERRMSG='INVALID CONTACT CODE';GOSUB 91000;GOTO 5041
      END
   END
   CUST.CONTACT.CD<1,LN>=VALUE
5042*
   X=59;Y=SLN;TYP=1;MAXL=20;O.R='O';DEFAULT=CUST.CONTACT<1,LN>;HMSG="ENTER CUSTOMER CONTACT NAME"
   CALL EDIT.SUB
   IF VALUE="END" THEN GOTO 5041
   CUST.CONTACT<1,LN>=VALUE
5043*
   LINES=DCOUNT(CUST.CONTACT.CD,VM)
   RETURN
*
*---- SCROLL (CONTACT) ROUTINE
5045*
   START.LINE=1 + INT((LN-1) / C.PAGE.SIZE) * C.PAGE.SIZE
   IF START.LINE=OLD.START.LINE THEN GOTO 5047
   OLD.START.LINE=START.LINE
   LAST.LINE=START.LINE + C.PAGE.SIZE - 1
   CNT=1
   FOR L=START.LINE TO LAST.LINE UNTIL L > LINES
      SLN=C.BEGIN.PAGE + LINE.SPACE * MOD(L-1,C.PAGE.SIZE)
      P_X  = 53 ; P_Y = SLN ; P_VALUE = L "R#2" ; P_OPT = ""
      P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:CUST.CONTACT.CD<1,L>"L#2"
      P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:CUST.CONTACT<1,L>"L#20"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT=CNT + 1
   NEXT L
   FOR M=CNT TO C.PAGE.SIZE
      SLN=C.BEGIN.PAGE + LINE.SPACE * MOD(M-1,C.PAGE.SIZE)
      P_X  = 53 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
5047*
   RETURN
*
*---- GET LINE NUMBER (CONTACT SCREEN)
5048*
   GOSUB 5045
   ECD.NUM=29
   IF LAST.LINE < LINES THEN
      ECD.MAXV=LAST.LINE
   END ELSE
      ECD.MAXV=LINES
   END
   SCV.REC(29)<ESN,1>=''
   ECD.ACTION=4;CALL SCRN.EDIT
   P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LNO=ECD.RET.VALUE
   IF LNO='' OR LNO="END" THEN LNO=0
   RETURN
*
*---- OPTIONS FOR CONTACT SCREEN
5080*
   AGAIN=0
   LOOP
      SCV.REC(34)<ESN,1>=''
      ECD.NUM=34
      IF BUFFER = "X" THEN ECD.NUM = 55 ; *T26069
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST=ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST=''
            AGAIN=1
         CASE REQUEST='END'
            AGAIN=1
         CASE REQUEST='A'
            LINES=DCOUNT(CUST.CONTACT.CD,VM)
            LOOP
               LN=LINES + 1
               OLD.LINES=LINES
               GOSUB 5040
            WHILE LINES > OLD.LINES DO REPEAT
            LN=LINES
            GOSUB 5045
         CASE REQUEST='S'
            LN=LN + C.PAGE.SIZE
            IF LN > LINES THEN LN=1
            GOSUB 5045
         CASE REQUEST='SR'
            LN -= C.PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 5045
         CASE REQUEST='SB'
            LN = LINES
            GOSUB 5045
         CASE REQUEST='ST'
            LN = 1
            GOSUB 5045
         CASE REQUEST='C'
            GOSUB 5048
            IF LNO THEN
               LN=LNO
               SLN=C.BEGIN.PAGE + LINE.SPACE * MOD(LN-1,C.PAGE.SIZE)
               GOSUB 5041
            END
            GOSUB 5045
         CASE REQUEST='D'
            GOSUB 5048
            IF LNO THEN
               LN=LNO
               CUST.CONTACT.CD=DELETE(CUST.CONTACT.CD,1,LN,0)
               CUST.CONTACT=DELETE(CUST.CONTACT,1,LN,0)
               LINES=DCOUNT(CUST.CONTACT.CD,VM)
               IF LN > 1 AND LN > LINES THEN LN=LN - 1
               IF LN < 1 THEN LN=1
               OLD.START.LINE=0
            END
            GOSUB 5045
         CASE 1
            ERRMSG="INVALID OPTION";GOSUB 91000;GOTO 5080
      END CASE
5089*
   WHILE AGAIN=0 DO REPEAT
   RETURN
*
*---- GET VALUES FROM CUSTOMER FILE
6000*
   MATREAD SALESMAN.REC FROM SALESMAN,CONO:CUST.SALESMAN ELSE
      ERRMSG="SALESREP RECORD IS INVALID";GOSUB 91000;SALS.NAME=UNKNOWN
   END
   SCV.REC(54)<ESN> = "<-------FIRST ADDRESS-------->"
   SCV.REC(2)<ESN>=CUST.NAME
   SCV.REC(3)<ESN>=CUST.ADDR1
   SCV.REC(4)<ESN>=CUST.ADDR2
   SCV.REC(5)<ESN>=CUST.ADDR3
   SCV.REC(6)<ESN>=FIELD(CUST.ADDR4,",",1)
   SCV.REC(7)<ESN>=CUST.ZIP
   IF CUST.ADDL.OPS<1,4> = "" THEN
      COUNTRY = ""
   END ELSE
      MATREAD CTY.REC FROM COUNTRY.CODE, CONO:CUST.ADDL.OPS<1,4> THEN
         COUNTRY = CTY.DESC
      END ELSE
         COUNTRY = CUST.ADDL.OPS<1,4>
      END
   END
   SCV.REC(8)<ESN>=COUNTRY
   SCV.REC(9)<ESN>=CUST.PHONE
   SCV.REC(10)<ESN>=CUST.SALESMAN
   SCV.REC(11)<ESN>=SALS.NAME
   SCV.REC(12)<ESN>=CUST.INT.INST
   SCV.REC(13)<ESN>=CUST.ACCT
   SCV.REC(14)<ESN>=CUST.START.DATE
   SCV.REC(15)<ESN>=CUST.CREDIT
   SCV.REC(53)<ESN>=CUST.CREDIT.DESC
   SCV.REC(16)<ESN>=CUST.CR.LIMIT
   SCV.REC(17)<ESN>=CUST.TERMS
   SCV.REC(18)<ESN>=CUST.TYPE
   SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDR4,",",2,99))
   IF CUST.SHIP.VIA = "" THEN
      MAT SHIP.VIA.REC = ""
   END ELSE
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:CUST.SHIP.VIA ELSE
         MAT SHIP.VIA.REC = ""; SHPV.DESC = UNKNOWN
      END
   END
   SCV.REC(20)<ESN>=SHPV.DESC
   SCV.REC(33)<ESN>=CUST.SHIP.VIA
   SCV.REC(36)<ESN>=CUST.STMT.CODE
   SCV.REC(37)<ESN>=CUST.SORT.NAME
   SCV.REC(38)<ESN>=CUST.ATTENTION
   SCV.REC(40)<ESN>=CUST.COMMISSION
   SCV.REC(42)<ESN>=CUST.PRICE.CODE
   SCV.REC(44)<ESN>=CUST.IVC.CODE
   SCV.REC(46)<ESN>=CUST.ADDL.OPS<1,1>
   SCV.REC(47)<ESN>=CUST.ADDL.OPS<1,2>
   SCV.REC(48)<ESN>=CUST.ADDL.OPS<1,3>
   SCV.REC(49)<ESN>=CUST.CSR.CODE
   SCV.REC(58)<ESN>=CUST.STMT.SEND.FLAG ;*T26915
   IF CUST.CSR.CODE = "" THEN
      MAT CSR.REC = ""
   END ELSE
      MATREAD CSR.REC FROM CSR.CODE, CONO:CUST.CSR.CODE ELSE
         MAT CSR.REC = ""; CSR.DESC = UNKNOWN
      END
   END
   SCV.REC(50)<ESN>=CSR.DESC
   IF CUST.ADDL.OPS<1,2> = "" THEN
      MAT FOB.REC = ""
   END ELSE
      MATREAD FOB.REC FROM FOB, CONO:CUST.ADDL.OPS<1,2> ELSE
         MAT FOB.REC = ""; FOB.DESC = UNKNOWN
      END
   END
   SCV.REC(51)<ESN>=FOB.DESC
   SCV.REC(57)<ESN>=CUST.EMAIL
   RETURN
*
*---- OPTIONS
10000*
   MORE=0
   LOOP
      IF BUFFER1 = "MLS" THEN
         ECD.NUM = 28
      END ELSE
         IF CO.OPS = "N" THEN
            ECD.NUM = 43
         END ELSE
            ECD.NUM = 39
         END
      END
      IF BUFFER = "X" THEN ECD.NUM = 56 ; *T26069
      SCV.REC(ECD.NUM)<ESN,1>=''
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION=ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION="E" OR OPTION="END"
            IF NEW.CUST = "Y" AND CUST.SHIP.TO # "" THEN
               TREC=''
               FOR I = 1 TO CUST.SHIP.TO
                  READU TREC FROM SHIP.TO, CONO:CUST.KEY:"!":I 'R%3' THEN
                     DELETE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'
                  END ELSE RELEASE SHIP.TO, CONO:CUST.KEY:"!":I 'R%3'
               NEXT I
               DELETE CUSTOMER, CONO:CUST.KEY
            END
            RELEASE CUSTOMER,CONO:CUST.KEY
            MORE=1
         CASE OPTION="CC"
            LINES=DCOUNT(CUST.CONTACT.CD,VM)
            GOSUB 5080
            LN=1;OLD.START.LINE=0;LINES=0
         CASE OPTION="T"
            ECD.SCRN.NO = 8
            CALL CUST.TAX.SUB(CONO,CUST.KEY,MODE)
            GOSUB 40000
         CASE OPTION = "ST"
            ECD.SCRN.NO=6;SHPNO = ""
            CALL CUST.SHIP.TO.MAINT(CONO,CUST.KEY,SHPNO,OPCO.CNTY,MODE)
            GOSUB 40000
         CASE OPTION="CR"
            ECD.SCRN.NO = 2
            ECD.ACTION=2;CALL SCRN.EDIT
            SCV.REC(1)<ECD.SCRN.NO> = CUST.KEY
            CALL CUST.CREDIT.INQ(CONO,PER,EXIT.FLAG,CO.ARS)
            GOSUB 40000
         CASE OPTION="CM"
            ECD.SCRN.NO=11
            SCV.REC(2)<ECD.SCRN.NO>=CUST.KEY
            SCV.REC(3)<ECD.SCRN.NO>=CUST.NAME
            ECD.ACTION=3; CALL SCRN.EDIT
            CALL CUST.CMNT(CONO,MODE)
            GOSUB 40000
         CASE OPTION="AT"
            IF ADDRESS.TOGGLED THEN
               SCV.REC(3)<ESN>=CUST.ADDR1
               SCV.REC(4)<ESN>=CUST.ADDR2
               SCV.REC(5)<ESN>=CUST.ADDR3
               SCV.REC(6)<ESN>=FIELD(CUST.ADDR4,",",1)
               SCV.REC(7)<ESN>=CUST.ZIP
               SCV.REC(8)<ESN>=COUNTRY.SAVE
               SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDR4,",",2,99))
               SCV.REC(54)<ESN> = "<-------FIRST ADDRESS-------->"
            END ELSE
               SCV.REC(3)<ESN>=CUST.ADDL.ADDR1
               SCV.REC(4)<ESN>=CUST.ADDL.ADDR2
               SCV.REC(5)<ESN>=CUST.ADDL.ADDR3
               SCV.REC(6)<ESN>=FIELD(CUST.ADDL.ADDR4,",",1)
               SCV.REC(7)<ESN>=CUST.ADDL.ZIP
               COUNTRY.SAVE=SCV.REC(8)<ESN>
               SCV.REC(8)<ESN>=''
               SCV.REC(19)<ESN>=TRIM(FIELD(CUST.ADDL.ADDR4,",",2,99))
               SCV.REC(54)<ESN> = "<-------SECOND ADDRESS------->"
            END
            ADDRESS.TOGGLED = NOT(ADDRESS.TOGGLED)
            FOR ECD.NUM = 3 TO 8
               ECD.ACTION = 5; CALL SCRN.EDIT
            NEXT ECD.NUM
            ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=54;ECD.ACTION=5;CALL SCRN.EDIT
         CASE OPTION="CI"
            IF CUST.INVOICE='' OR CO.ARS # "Y" THEN
               ERRMSG="Cannot locate any invoices for this customer"
               GOSUB 91000
            END ELSE
               ECD.SCRN.NO = 3
               ECD.ACTION=2;CALL SCRN.EDIT
               SCV.REC(1)<ECD.SCRN.NO>=CUST.KEY
               CALL CUST.INV.INQ(CONO)
               GOSUB 40000
            END
         CASE OPTION="CJ"
            IF CUST.JOB='' THEN
               ERRMSG="Cannot locate any jobs for this customer"
               GOSUB 91000
            END ELSE
               ECD.SCRN.NO = 4
               ECD.ACTION=2;CALL SCRN.EDIT
               SCV.REC(1)<ECD.SCRN.NO>=CUST.KEY
               CALL CUST.JOB.INQ(CONO)
               GOSUB 40000
            END
         CASE OPTION="CO"
            IF CUST.ORD.NUM='' THEN
               ERRMSG="Cannot locate any Orders for this customer"
               GOSUB 91000
            END ELSE
               ECD.SCRN.NO = 12
               ECD.ACTION = 2; CALL SCRN.EDIT
               SCV.REC(1)<ECD.SCRN.NO>=CUST.KEY
               CALL CUST.ORDER.INQ(CONO)
               GOSUB 40000
            END
         CASE OPTION = "M" AND BUFFER1 = "MLS"
            ECD.SCRN.NO = 5
            ECD.ACTION = 2; CALL SCRN.EDIT
            SCV.REC(6)<ECD.SCRN.NO> = CUST.KEY
            CALL CUST.MLS.SUB(CONO,NEW.CUST,MTYPE.CODE)
            GOSUB 40000
         CASE OPTION = "D"
            IF NEW.CUST # "YES" THEN
               IF CUST.JOB = "" AND CUST.INVOICE = "" AND CUST.LAST.SALE = "" THEN
                  X = 0 ; Y = 23 ;TYP = 18 ; O.R = "R" ; MAXL = 1
                  PMSG = "You are about to delete ":C.P.NAME:" (":CUST.KEY:") ok (Y/N)"
                  CALL EDIT.SUB
                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
                  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                  IF VALUE = "Y" THEN
                     MORE = 1
                     NEW.NAME = ""
                     CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CUSTOMER.XREF,PREFIX)
                     DELETE CUSTOMER , CONO:CUST.KEY
                  END
               END ELSE
                  ERRMSG = "This ":C.P.NAME:" has some activities, can't delete" ; GOSUB 91000
               END
            END ELSE
               ERRMSG = "You are setting this ":C.P.NAME:" can't delete" ; GOSUB 91000
            END
         CASE OPTION= "MV"
            X = 0; Y = 23; TYP = 18; O.R = "R"; MAXL = 1
            PMSG = "Prospect will be moved to Customer file, ok? (Y/N)"
            CALL EDIT.SUB
            P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF VALUE = "Y" THEN
               READ DUMMY FROM CHECK.FILE, CONO:CUST.KEY THEN
                  ERRMSG = "Prospect not moved to Customer file"
                  GOSUB 91000
               END ELSE
                  MATWRITE CUST.REC ON CHECK.FILE, CONO:CUST.KEY
                  CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CHECK.FILE.XREF,PREFIX)
                  IF CO.CUST.ROLDX = "Y" THEN
                     READU KEYS FROM CONTROL,CONO:"ROLODEX" ELSE KEYS = ""
                     K.CNT = DCOUNT(KEYS,VM) + 1
                     KEYS<1,K.CNT> = CUST.KEY
                     WRITE KEYS ON CONTROL,CONO:"ROLODEX"
                  END
                  MORE = 1
                  NEW.NAME = ""
                  CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CUSTOMER.XREF,PREFIX)
                  DELETE CUSTOMER, CONO:CUST.KEY
               END
            END
         CASE OPTION="F"
            MORE=1
10010*
            IF NEW.CUST = "YES" THEN
               SCV.REC(1)<ESN>=CUST.KEY
               ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
               ERRMSG="PLEASE NOTE NEW ":C.P.NAME:" NUMBER (":CUST.KEY:")"
               GOSUB 91000
            END
            IF NEW.CUST = "YES" AND CO.CUST.ROLDX = "Y" AND C.P.NAME = "CUSTOMER" THEN
               READU KEYS FROM CONTROL,CONO:"ROLODEX" ELSE KEYS = ""
               K.CNT = DCOUNT(KEYS,VM) + 1
               KEYS<1,K.CNT> = CUST.KEY
               WRITE KEYS ON CONTROL,CONO:"ROLODEX"
            END
            GOSUB 30000
            IF NEW.CUST='YES' OR OLD.NAME # NEW.NAME THEN
               CALL GEN.XREF.MAINT(CONO,CUST.KEY,OLD.NAME,NEW.NAME,CUSTOMER.XREF,PREFIX)
            END
         CASE OPTION > 0 AND OPTION < 25
            ON OPTION GOSUB 100,200,300,400,500,600,700,800,900,2600,1100,1200,1300,1000,1400,1500,1600,1700,1800,1900,2000,2100,2200,2500
         CASE OPTION = 25
            GOSUB 2500
         CASE 1
            ERRMSG = "Invalid Entry. For help, enter '?'."
            GOSUB 91000
      END CASE
1010*
   WHILE MORE=0 DO REPEAT
   RETURN
*
*---- CLEAR SCREEN
20000*
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
   RETURN
*
*---- UPDATE CUSTOMER FILE
30000*
   IF CO.JIS = "Y" THEN
      CALL JKT_NOTIFY_SUB ("1",CONO,"CUSTOMER",CUST.KEY,"",CUST.REC.SIZE,MAT CUST.REC,CUSTOMER,NSTATUS)
   END
   MATWRITE CUST.REC ON CUSTOMER,CONO:CUST.KEY
   RETURN
*
*--- REPRINT SCREEN
40000*
   ECD.SCRN.NO = 1; ESN = ECD.SCRN.NO
40050*
   ECD.ACTION = 3; CALL SCRN.EDIT
   LINES=DCOUNT(CUST.CONTACT.CD,VM)
   OLD.START.LINE = 0
   GOSUB 5045
   RETURN
*
*---- CALLS FOR SYSCOM
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
END
