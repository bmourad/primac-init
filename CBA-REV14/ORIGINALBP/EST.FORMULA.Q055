      SUBROUTINE EST.FORMULA.Q055 (CONO, ACTION, EQTY, DEPT, COMP)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.FORMULA.Q055
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/08/86
*
* DESCRIPTION
*
* This formula is used to calculate the number of sheets or square feet of
* board required for casebound book.
*
*T26306 cmykleb * Problem with recalc after a qty is deleted.
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>ESTIMATE.BIND.SPOIL
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
      TEMP.QTY = ""
      TYP = 0
      WIDTH = 0
      XXLENGTH = 0
*T26306 v
*     LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE QPTR = 1
      LOCATE EQTY IN EST.QTY<1>,1 SETTING QPTR ELSE RETURN
*T26306 ^
      LOCATE TEMP.OPV IN ESTM.PROD<1>,1 SETTING MP ELSE RETURN
*
*---- MAIN PROCESSING
*
      BEGIN CASE
      CASE NUM(EST.CASE.SPOIL<1,2>)
         SPOIL = INT(EQTY * (EST.CASE.SPOIL<1,2> / 100) + 0.99)
      CASE 1
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:EST.CASE.SPOIL<1,2> ELSE
            MAT BST.REC = ""
         END
         LOCATE EQTY IN BST.QTY<1>,1 BY "AR" SETTING BP ELSE NULL
         BEGIN CASE
         CASE BP = 1
            BSPCT = BST.PCT<1,BP>
         CASE BP > COUNT(BST.QTY,VM) + 1
            BSPCT = BST.PCT<1,BP-1>
         CASE BST.EXTR = "Y"
            BSPCT = INT(BST.PCT<1,BP>-(BST.QTY<1,BP>-EQTY)/(BST.QTY<1,BP>-BST.QTY<1,BP-1>)*(BST.PCT<1,BP>-BST.PCT<1,BP-1>)+0.5)
         CASE 1
            BSPCT = BST.PCT<1,BP>
         END CASE
         SPOIL = INT(EQTY * (BSPCT / 10000) + 0.99)
      END CASE
      PROD.QTY = EQTY + SPOIL
      NO.OUT = INT(EST.CASE.SIDE.BD.CUT.OUT / 100)
      IF NO.OUT = 0 THEN
         SIDE.QTY = 0
      END ELSE
         SIDE.QTY = INT(PROD.QTY * 2 / NO.OUT + 0.99)
      END
      NO.OUT = INT(EST.CASE.SPINE.BD.CUT.OUT / 100)
      IF NO.OUT = 0 THEN
         SPINE.QTY = 0
      END ELSE
         SPINE.QTY = INT(PROD.QTY / NO.OUT + 0.99)
      END
      PRICE.UNIT = EST.CASE.BOARD.PRICE<1,2>
      BEGIN CASE
      CASE PRICE.UNIT = "EA" OR PRICE.UNIT = "SHT"
         TEMP.QTY = SPINE.QTY + SIDE.QTY
      CASE PRICE.UNIT[1,2] = "SF"
         WIDTH = EST.CASE.BOARD.SIZE<1,1> / 10000
         XXLENGTH = EST.CASE.BOARD.SIZE<1,2> / 10000
         TEMP.QTY = INT((SIDE.QTY + SPINE.QTY) * WIDTH * XXLENGTH / 144 + 0.99)
      END CASE
      IF PRICE.UNIT = "EA" OR PRICE.UNIT = "SHT" THEN
         EST.CASE.SIDE.BD.QTY<1,1,QPTR> = SIDE.QTY
         EST.CASE.SIDE.BD.QTY<1,2> = "SHT"
         EST.CASE.SPINE.BD.QTY<1,1,QPTR> = SPINE.QTY
         EST.CASE.SPINE.BD.QTY<1,2> = "SHT"
      END ELSE
         EST.CASE.SIDE.BD.QTY<1,1,QPTR> = INT(SIDE.QTY * WIDTH * XXLENGTH / 144 + 0.99)
         EST.CASE.SIDE.BD.QTY<1,2> = "SF"
         EST.CASE.SPINE.BD.QTY<1,1,QPTR> = INT(SPINE.QTY * WIDTH * XXLENGTH / 144 + 0.99)
         EST.CASE.SPINE.BD.QTY<1,2> = "SF"
      END
      TEMP.FCTR = 1000
      TEMP.STD = EST.CASE.BOARD.PRICE<1,1,QPTR> / 100
      TEMP.STD.TYPE = "$/":EST.CASE.BOARD.PRICE<1,2>
      TEMP.UM = EST.CASE.BOARD.PRICE<1,3>
      TEMP.IND.1 = ESTM.FOH.PCT<1,MP>
      TEMP.MARKUP = ESTM.MARKUP<1,MP>
      TEMP.DESC = EST.CASE.BOARD<1,2>
      TEMP.VSALE = "Y"
      RETURN
   END
