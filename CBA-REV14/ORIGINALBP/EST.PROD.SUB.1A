   SUBROUTINE EST.PROD.SUB.1A (CONO,ACTION,COMP,MPTR)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.PROD.SUB.1A
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 04/07/86
*
* DESCRIPTION
*
* This program is used to calculate order paper quantity and
* impressions the various quantities being estimated.
* All calculation are for sheet paper.
*
*T25740 epitka 11/30/2001 * REV12
*C40294 cmykleb 07/11/2002 * Correct problem with getting last cost.
*C40325 adelgado 07/16/2002 * Correct problem with getting last cost for
*                             No Stock items.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.BIND.SPOIL
*COPY>JES.CPYLIB>ESTIMATE.PRESS.SPOIL
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   ;*
*
   IF FILEINFO(WAREHOUSE,0)=0 THEN
      OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
         ERRMSG='WAREHOUSE FILE IS MISSING'
         GOSUB 93000
      END
   END
*---- INITIALIZATION
*
   PRICE.FLAG = CO.JES.PARAM<1,11>
   IF PRICE.FLAG = "" THEN PRICE.FLAG = "X"
   INV.ID = EST.PROD.INV.ID<1,COMP,MPTR>
   IF PRICE.FLAG # "X" AND INV.ID # "" THEN
      ICOST = ""
      MATREAD INV.REC FROM INVENTORY, CONO:INV.ID ELSE
         MAT INV.REC = ""
      END
      WCNT=DCOUNT(INV.WHSE.CODE,VM)
      FOR WP = 1 TO WCNT
         WHSE = INV.WHSE.CODE<1,WP>
         IWH.ID = CONO:INV.ID:"!":WHSE
*C40294 v
*        MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN
         MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE
*C40294 ^
            MAT IWH.REC = ""
         END
         SCOST = ""
         BEGIN CASE
            CASE PRICE.FLAG = "L"
               IF IWH.LIST.COST # "" THEN
                  SCOST = INT(IWH.LIST.COST / 100 + 0.99)
               END
            CASE PRICE.FLAG = "A"
               IF IWH.AVG.COST # "" THEN
                  SCOST = INT(IWH.AVG.COST / 100 + 0.99)
               END
            CASE PRICE.FLAG = "S"
               IF IWH.STD.COST # "" THEN
                  SCOST = INT(IWH.STD.COST / 100 + 0.99)
               END
            CASE PRICE.FLAG = "R"
               DIV.POS='' ; FISCAL.FLAG='IC' ; TRAN.PERIOD=''
               CALL GET.LAST.COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
               BEGIN CASE
                  CASE ERR.FLG=''
                     SCOST=INT(LAST.PRICE/100+0.99)
                  CASE ERR.FLG="-1"
* 40325       GOSUB 90000
                     CONTINUE
                  CASE ERR.FLG='-2'
                     GOSUB 93000
               END CASE
         END CASE
         BEGIN CASE
            CASE SCOST = ""
            CASE ICOST = ""
               ICOST = SCOST
            CASE SCOST > ICOST
               ICOST = SCOST
         END CASE
      NEXT WP
      IF ICOST+0 > 0 THEN
         ICOST = INT(ICOST * (INV.M.WT * 100 / INV.COST.WT) + 0.5)
      END
   END
   QLC = COUNT(EST.QTY,VM) + (EST.QTY # "")
   PLC = COUNT(EST.PROD.PQTY<1,COMP,MPTR>,"!") + (EST.PROD.PQTY<1,COMP,MPTR> # "")
   FOR X = PLC TO QLC+1 STEP -1
      MACRO DELVAL;EST.PROD.PQTY<1,COMP,MPTR>;"!";X
      MACRO DELVAL;EST.PROD.PCST<1,COMP,MPTR>;"!";X
   NEXT X
   LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MP ELSE
      MP = 999
   END
   MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP, CONO:EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE
      ERRMSG = "Invalid paper group"
      GOSUB 90000
      GOTO 99999
   END
   IF NOT(NUM(EST.PROD.BIND.SPOIL<1,COMP,1>)) THEN
      MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL,CONO:EST.PROD.BIND.SPOIL<1,COMP,1> ELSE
         MAT BST.REC = ""
      END
   END
   IF NOT(NUM(EST.PROD.PRESS.SPOIL<1,COMP,1>)) THEN
      MATREAD PST.REC FROM ESTIMATE.PRESS.SPOIL,CONO:EST.PROD.PRESS.SPOIL<1,COMP,1> ELSE
         MAT PST.REC = ""
      END
   END
*
*---- MAIN PROCESSING
*
100*
   OUT1 = 0
   OUT2 = 0
   OSW = EST.PROD.OS.WIDTH<1,COMP,MPTR>
   OSL = EST.PROD.OS.LENGTH<1,COMP,MPTR>
   OSG = EST.PROD.OS.GRAIN<1,COMP,MPTR>
   PSW = EST.PROD.PS.WIDTH<1,COMP,MPTR>
   PSL = EST.PROD.PS.LENGTH<1,COMP,MPTR>
   PSG = EST.PROD.PS.GRAIN<1,COMP,MPTR>
   IF OSG # PSG OR OSG = "" OR PSG = "" THEN
      CUT.W = INT(OSW/PSL-1+0.9999)
      OUT.W = INT(OSW/PSL)
      CUT.L = INT(OSL/PSW-1+0.9999)
      OUT.L = INT(OSL/PSW)
      CUT1 = CUT.W+CUT.L
      OUT1 = OUT.W*OUT.L
      REM.W = OSW - (PSL * OUT.W)
      IF REM.W >= PSW AND (OSG = "" OR PSG = "") THEN
         CUT.W = INT(REM.W/PSW-1+0.9999)
         OUT.W = INT(REM.W/PSW)
         CUT.L = INT(OSL/PSL-1+0.9999)
         OUT.L = INT(OSL/PSL)
         CUT1 = CUT1 + CUT.W + CUT.L
         OUT1 = OUT1 + (OUT.W * OUT.L)
      END
   END
   IF OSG = PSG OR OSG = "" OR PSG = "" THEN
      CUT.W = INT(OSW/PSW-1+0.9999)
      OUT.W = INT(OSW/PSW)
      CUT.L = INT(OSL/PSL-1+0.999)
      OUT.L = INT(OSL/PSL)
      CUT2 = CUT.W+CUT.L
      OUT2 = OUT.W*OUT.L
      REM.L = OSL - (PSL * OUT.L)
      IF REM.L >= PSW AND (OSG = "" OR PSG = "") THEN
         CUT.W = INT(OSW/PSL-1+0.9999)
         OUT.W = INT(OSW/PSL)
         CUT.L = INT(REM.L/PSW-1+0.9999)
         OUT.L = INT(REM.L/PSW)
         CUT2 = CUT2 + CUT.W + CUT.L
         OUT2 = OUT2 + (OUT.W * OUT.L)
      END
   END
   BEGIN CASE
      CASE OSG = "" OR PSG = ""
         IF OUT1 > OUT2 THEN
            NUMBER.OUT = OUT1
         END ELSE
            NUMBER.OUT = OUT2
         END
      CASE OSG # PSG
         NUMBER.OUT = OUT1
      CASE OSG = PSG
         NUMBER.OUT = OUT2
   END CASE
   BW = EST.PROD.BASIS.WT<1,COMP,MPTR>
   BSW = ESTPG.WIDTH/10000
   BSL = ESTPG.LENGTH/10000
   OSW = EST.PROD.OS.WIDTH<1,COMP,MPTR>/10000
   OSL = EST.PROD.OS.LENGTH<1,COMP,MPTR>/10000
   M.WEIGHT = 2 * BW * (OSW * OSL) / (BSW * BSL)
   M.WEIGHT = INT(M.WEIGHT * 100 + 0.5) / 100
   EST.PROD.M.WT<1,COMP,MPTR> = M.WEIGHT * 100
   EST.PROD.PSS.OSS<1,COMP,MPTR> = NUMBER.OUT
   NUMBER.UP = EST.PROD.NO.UP<1,COMP,1>+0
   IF NUMBER.UP = 0 THEN NUMBER.UP = 1
   FORMS = EST.PROD.FORMS<1,COMP,1>+0
   IF FORMS = 0 THEN FORMS = 1
   MF = EST.PROD.PASSES<1,COMP,MPTR>
   FOR QPTR = 1 TO QLC
      EQTY = EST.QTY<1,QPTR>
      BEGIN CASE
         CASE EST.PROD.BIND.SPOIL<1,COMP,1> = "MULT"
            BIND.SPOIL = 0
            FOR MQ = 1 TO 3
               QTY = FIELD(EST.BOOK.BIND.QTY<1,1,MQ>,"!",QPTR)+0
               BSP = EST.BOOK.BIND.SPOIL<1,1,MQ>
               BEGIN CASE
                  CASE QTY = 0
                     BSM = 0
                  CASE NUM(BSP)
                     BSM = INT(QTY*(BSP/100)+0.99)
                  CASE 1
                     MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL,CONO:BSP ELSE MAT BST.REC = ""
                     LOCATE QTY IN BST.QTY<1>,1 BY "AR" SETTING BP ELSE NULL
                     BEGIN CASE
                        CASE BP = 1
                           BSPCT = BST.PCT<1,BP>
                        CASE BP > COUNT(BST.QTY,VM) + 1
                           BSPCT = BST.PCT<1,BP-1>
                        CASE BST.EXTR = "Y"
                           BSPCT = INT(BST.PCT<1,BP>-(BST.QTY<1,BP>-QTY)/(BST.QTY<1,BP>-BST.QTY<1,BP-1>)*(BST.PCT<1,BP>-BST.PCT<1,BP-1>)+0.5)
                        CASE 1
                           BSPCT = BST.PCT<1,BP>
                     END CASE
                     BSM = INT(QTY*(BSPCT/10000)+0.99)
                     IF BSM < BST.MIN.QTY THEN BSM = BST.MIN.QTY
               END CASE
               BIND.SPOIL = BIND.SPOIL + BSM
               MACRO REPVAL;EST.BOOK.BIND.REQ<1,COMP,MQ>;"!";QPTR;BSM
            NEXT MQ
         CASE NUM(EST.PROD.BIND.SPOIL<1,COMP,1>)
            BIND.SPOIL = INT(EQTY * (EST.PROD.BIND.SPOIL<1,COMP,1>/100) + 0.99)
         CASE 1
            LOCATE EQTY IN BST.QTY<1>,1 BY "AR" SETTING BP ELSE NULL
            BEGIN CASE
               CASE BP = 1
                  BSPCT = BST.PCT<1,BP>
               CASE BP > COUNT(BST.QTY,VM) + 1
                  BSPCT = BST.PCT<1,BP-1>
               CASE BST.EXTR = "Y"
                  BSPCT = INT(BST.PCT<1,BP>-(BST.QTY<1,BP>-EQTY)/(BST.QTY<1,BP>-BST.QTY<1,BP-1>)*(BST.PCT<1,BP>-BST.PCT<1,BP-1>)+0.5)
               CASE 1
                  BSPCT = BST.PCT<1,BP>
            END CASE
            BIND.SPOIL = INT(EQTY * (BSPCT/10000) + 0.99)
            IF BIND.SPOIL < BST.MIN.QTY THEN BIND.SPOIL = BST.MIN.QTY
      END CASE
      MACRO REPVAL;EST.PROD.BS.REQ<1,COMP,1>;"!";QPTR;BIND.SPOIL
      PROD.QTY = EQTY + BIND.SPOIL
      RUN.SHT = INT(PROD.QTY / NUMBER.UP + 0.99)
      RUN.IMP = RUN.SHT              ;* Impressions per pass
      IF NUM(EST.PROD.PRESS.SPOIL<1,COMP,1>) THEN
         SPL.SHT = INT(RUN.IMP * (EST.PROD.PRESS.SPOIL<1,COMP,1>/100) + 0.99)
      END ELSE
         LOCATE RUN.IMP IN PST.QTY<1>,1 BY "AR" SETTING P ELSE NULL
         BEGIN CASE
            CASE P = 1
               PSPCT = PST.PCT<1,P>
            CASE P > COUNT(PST.QTY,VM) + 1
               PSPCT = PST.PCT<1,P-1>
            CASE PST.EXTR = "Y"
               PSPCT = INT(PST.PCT<1,P>-(PST.QTY<1,P>-RUN.IMP)/(PST.QTY<1,P>-PST.QTY<1,P-1>)*(PST.PCT<1,P>-PST.PCT<1,P-1>)+0.5)
            CASE 1
               PSPCT = PST.PCT<1,P>
         END CASE
         SPL.SHT = INT(RUN.IMP * (PSPCT/10000) + 0.99)
      END
      SPL.SHT = SPL.SHT * MF
      MACRO REPVAL;EST.PROD.PS.REQ<1,COMP,MPTR>;"!";QPTR;SPL.SHT
      MR.SHT = EST.PROD.INIT.MR.CNT<1,COMP,MPTR> * EST.PROD.INIT.MR.IMP<1,COMP,MPTR>
      MR.SHT = MR.SHT + (EST.PROD.SUBS.MR.CNT<1,COMP,MPTR> * EST.PROD.SUBS.MR.IMP<1,COMP,MPTR>)
      MACRO REPVAL;EST.PROD.MR.REQ<1,COMP,MPTR>;"!";QPTR;MR.SHT
      TOT.SHT = MR.SHT + ((RUN.SHT + SPL.SHT) * FORMS)
      IF NUMBER.OUT = 0 THEN
         ORD.SHT = 0
      END ELSE
         ORD.SHT = INT(TOT.SHT / NUMBER.OUT + 0.99)
      END
      MACRO REPVAL;EST.PROD.PQTY<1,COMP,MPTR>;"!";QPTR;ORD.SHT
      IF PRICE.FLAG = "X" OR EST.PROD.INV.ID<1,COMP,MPTR> = "" THEN
         LOCATE ORD.SHT IN ESTM.END.QTY<1,MP>,1 BY "AR" SETTING PP ELSE NULL
         IF PP > COUNT(ESTM.END.QTY<1,MP>,SM) + 1 THEN PP = PP - 1
         COST = ESTM.QCOST<1,MP,PP>
      END ELSE
         COST = ICOST
      END
      IF COST # "" THEN
         MACRO REPVAL;EST.PROD.PCST<1,COMP,MPTR>;"!";QPTR;COST
      END
      MACRO REPVAL;EST.PROD.IMP<1,COMP,MPTR>;"!";QPTR;(RUN.SHT + SPL.SHT) * MF
   NEXT QPTR
   GOTO 99999
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SI_SYSCOM(MAT SYSCOM.REC)
*---- END OF PROGRAM
*
99999*
   RETURN
END
