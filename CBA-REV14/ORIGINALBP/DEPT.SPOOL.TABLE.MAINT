*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [11]
* Copyright 1993 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - NDCBP
* PROGRAM      - DEPT.SPOOL.TABLE
* BY           - BLAIR DICKERSON, COMPUTER BUSINESS ASSOCIATES
* DATE         - 01/26/93
* DESCRIPTION  - 
*                This program enables the printing of the SHIFT
*                SUMMARY REPORT to be printed on a specified 
*                printer within each department.
*
*
*T25448 gat 12/07/2000 * FIX PROBLEMS WITH FORMS SCAPE
*T25978 adelgado 02/01/2002 * Add the use of prompts (SF,SR,SB,ST).
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>JCS.CPYLIB>DEPT.SPOOL.TABLE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
******************
* INITIALIZATION *
******************
  ERRMSG = ''
  DEPTNO = ''
  DDESC  = ''
  QUEUE  = ''
  RTRN = ''
  VALID  = ''
  SCNT = ''
  SVLN = ''
  LINE.SPACE = 1
  PAGE.SIZE  = 15
  BEGIN.PAGE = 5
  YDATA = 0
  CT = 1
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  PROCREAD X ELSE
    ERRMSG = "MUST RUN FROM A PROC"
    GOTO 93000
  END
  CONO = X<1>
**************
* OPEN FILES *
**************
  MAT FILE.VARS = ''
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GOTO 93000
  END
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE
    ERRMSG = 'DEPARTMENT FILE IS MISSING'
    GOTO 93000
  END
  OPEN '','DEPT.SPOOL.TABLE' TO DEPT.SPOOL.TABLE ELSE
    ERRMSG = 'DEPT.SPOOL.TABLE FILE IS MISSING'
    GOTO 93000
  END
  OPEN '','NDC.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'NDC.SCREENS FILE IS MISSING'
    GOTO 93000
  END
**************
* GET SCREEN *
**************
  MAT EDIT.COM.DRIVER = ''
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'DEPT.SPOOL.TABLE.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  ECD.ACTION=2;CALL SCRN.EDIT
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
100 *
  READNEXT ID ELSE GOTO 200
  MATREAD DST.REC FROM DEPT.SPOOL.TABLE, ID ELSE GOTO 100
  MATREAD DEPT.REC FROM DEPARTMENT, ID ELSE DEPT.DESC = "UNKNOWN"
  DEPTNO<CT> = ID[4,99]
  DDESC<CT>  = DEPT.DESC
  QUEUE<CT>  = DST.SP.QUEUE
  CT = CT + 1
  YDATA = 1
  GOTO 100
200 *
  LINES = DCOUNT(DEPTNO,AM)
  CNT = 1
  GOSUB 8000
  LN = BEGIN.PAGE + LINE.SPACE * MOD(CNT-1,PAGE.SIZE)
  IF YDATA THEN GOTO 1000
*******************
* MAIN PROCESSING *
*******************
500 *
  P_X  = 10 ; P_Y = LN ; P_VALUE = CNT "R#3" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  X=15; Y=LN; TYP=1; HMSG='Enter a valid Department'
  O.R="O"; MAXL=5
  IF ECD.RET.VALUE = "A" THEN
    DEFAULT=DEPTNO<CNT-1>
  END ELSE
    DEFAULT=DEPTNO<CNT>
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "E" OR VALUE = "END" OR VALUE = "^"
      IF ECD.RET.VALUE = "A" THEN
        P_X  = 0 ; P_Y = LN ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
        P_X  = 15 ; P_Y = LN ; P_VALUE = DEPTNO<CNT>"R#5" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CNT = SCNT
        LN = SVLN
      END
      GOTO 1000
*    CASE NOT(NUM(VALUE))
*      GOTO 500
    CASE 1
      LOCATE VALUE IN DEPTNO,1 SETTING POS THEN
        IF POS # CNT THEN
          ERRMSG = 'DEPARTMENT HAS ALREADY BEEN ENTERED ON LINE ':POS
          GOSUB 91000
          GOTO 500
        END
      END
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE
        ERRMSG = "Not a valid Department"
        GOSUB 91000
        GOTO 500
      END
      DEPTNO<CNT> = VALUE
  END CASE
  DDESC<CNT> = DEPT.DESC
  P_X  = 22 ; P_Y = LN ; P_VALUE = DEPT.DESC "L#29" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
700 *
  X=53; Y=LN; TYP=1; HMSG='Enter a valid Spooler Queue'
  MAXL=15; O.R="O"
  IF ECD.RET.VALUE = "A" THEN
    DEFAULT=QUEUE<CNT-1>
  END ELSE
    DEFAULT=QUEUE<CNT>
  END
  CALL EDIT.SUB
  IF VALUE = "^" OR VALUE = "E" OR VALUE = "END" THEN
    IF ECD.RET.VALUE = "A" THEN
      P_X  = 22 ; P_Y = LN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
      P_X  = 53 ; P_Y = LN ; P_VALUE = QUEUE<CNT> ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    GOTO 500
  END ELSE
    GOSUB 5000
  END
  LOCATE VALUE IN VALID<1>,1 SETTING POS ELSE
    ERRMSG = VALUE:" is not a valid Spooler Queue"
    GOSUB 91000
    GOTO 700
  END
  QUEUE<CNT> = VALUE
  IF NUM(ECD.RET.VALUE) THEN
    CNT = SCNT
    LN = SVLN
    GOTO 1000
  END
  LN = LN + 1
  CNT = CNT + 1
  IF CNT > PAGE.SIZE THEN
    LINES = DCOUNT(DEPTNO,AM)
    GOSUB 8000
    LN = BEGIN.PAGE + LINE.SPACE * MOD(CNT-1,PAGE.SIZE)
  END
  GOTO 500
*
**** PROMPT LINE
*
1000 *
  ECD.NUM = 5
  ECD.ACTION=4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "E" OR ECD.RET.VALUE = "END"
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
    CASE ECD.RET.VALUE = "A"
      LINES = DCOUNT(DEPTNO,AM)
      IF LINES > LAST.LINE THEN
        CNT = 1 + PAGE.SIZE * INT(LINES/PAGE.SIZE)
      END
      GOSUB 8000
      LN = BEGIN.PAGE + LINE.SPACE * MOD(CNT-1,PAGE.SIZE)
      GOTO 500
    CASE ECD.RET.VALUE = "D"
      X=0; Y=23; TYP=3; MAXL=3; PMSG="Enter line number"; O.R="R"
      MINV=START.LINE; MAXV=CNT-1
1100  CALL EDIT.SUB
      BEGIN CASE
        CASE VALUE="^" OR VALUE="E" OR VALUE="END"
          P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          GOTO 1000
        CASE NOT(NUM(VALUE))
          GOTO 1100
        CASE 1
          P_X  = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          DELETE DEPT.SPOOL.TABLE,CONO:DEPTNO<VALUE>
          DEPTNO = DELETE(DEPTNO,VALUE,0,0)
          DDESC = DELETE(DDESC,VALUE,0,0)
          QUEUE = DELETE(QUEUE,VALUE,0,0)
          LINES = DCOUNT(DEPTNO,AM)
          CNT = 1
          OLD.START.LINE = 0
          GOSUB 8000
          LN = BEGIN.PAGE + LINE.SPACE * MOD(CNT-1,PAGE.SIZE)
      END CASE
    CASE ECD.RET.VALUE = "S"
      LINES = DCOUNT(DEPTNO,AM)
      IF CNT > LINES THEN CNT = 1
      OLD.START.LINE = 0
      GOSUB 8000
      GOTO 1000
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LINES = DCOUNT(DEPTNO,AM)
      CNT -= PAGE.SIZE
      IF CNT < 1 THEN CNT = 1
      GOSUB 8000
      GOTO 1000
    CASE ECD.RET.VALUE = 'ST'
      LINES = DCOUNT(DEPTNO,AM)
      CNT = 1
      GOSUB 8000
      GOTO 1000
    CASE ECD.RET.VALUE = 'SB'
      LINES = DCOUNT(DEPTNO,AM)
      CNT = 1 + INT((LINES-1)/PAGE.SIZE)*PAGE.SIZE
      GOSUB 8000
      GOTO 1000
    * T25978 ^
    CASE ECD.RET.VALUE = "F"
      DCT = DCOUNT(DEPTNO,AM)
      FOR XX=1 TO DCT
        WRITE QUEUE<XX> ON DEPT.SPOOL.TABLE,CONO:DEPTNO<XX>
      NEXT XX
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
    CASE NUM(ECD.RET.VALUE)
      IF ECD.RET.VALUE < START.LINE OR ECD.RET.VALUE > CNT-1 THEN GOTO 1000
      SCNT = CNT
      CNT = ECD.RET.VALUE
      SVLN = LN
      IF MOD(ECD.RET.VALUE,PAGE.SIZE) # 0 THEN
        LN = BEGIN.PAGE + MOD(ECD.RET.VALUE,PAGE.SIZE) - 1
      END ELSE
        LN = BEGIN.PAGE + ECD.RET.VALUE - 1
      END
      GOTO 500
  END CASE
  GOTO 1000
*
**** VALIDATE INPUT SPOOLER
*
*TASK17754
5000 *
*      DATA "99"
*      PERFORM 'SP-STATUS' CAPTURING MSG
*      MSG = MSG<2>
*      KEY = FIELD(MSG,"P",2)
*      ONE = FIELD(KEY,"O",1)[4,99]
*      ONE = TRIM(ONE)
*      TWO = FIELD(KEY,"F",2)
*      TWO = TRIM(TWO)
*      DATA "","99"
*      PERFORM 'SP-STATUS' CAPTURING MSG
*      SP.MULT = 0
*5100 *
*      FIRST = 20 * SP.MULT + 6
*      LAST = 20 * SP.MULT + 15
*      FOR XX = FIRST TO LAST UNTIL MSG<XX>=""
*         MSG<XX> = FIELD(MSG<XX>," ",1)
*         VALID = INSERT(VALID,1,1,0,MSG<XX>)
*      NEXT XX
*      IF MSG<XX-1>="" THEN GOTO 5199
*      SP.MULT = SP.MULT + 1
*      GOTO 5100
  QCNT = 1
  PQCNT = 1
  PQUEUE = ""
  CHKQUE = ""
  TQUEUE = ""
  EXECUTE 'GET.QUEUES' CAPTURING MSG
  MQ = DCOUNT(MSG,AM)
*     FOR X=3 TO X+1  UNTIL MSG<X>[15,1]=""
  FOR X = 3 TO MQ
    IF MSG<X>[15,1] = "" OR MSG<X>[15,1] = " " OR MSG<X>[15,1] = '-' THEN  GOTO 5115
    TQUEUE<QCNT> = MSG<X>[1,23]
    QCNT=QCNT+1
    IF MSG<X>[1,1] # " " THEN
      PQUEUE<PQCNT> = MSG<X>[1,23]
      CHKQUE<PQCNT> = FIELD(PQUEUE<PQCNT>," ",1)
      VALID = INSERT(VALID,1,1,0,CHKQUE<PQCNT>)
      PQCNT = PQCNT + 1
    END
5115 *
  NEXT X
*PRINT "PQUEUE = ":PQUEUE
*PRINT "CHKQUE = ":CHKQUE
*PRINT "VALID = ":VALID
*INPUT WAIT
5199 *
  RETURN
*** ^
*
**** SCROLL
*
8000 *
  START.LINE = 1 + INT((CNT-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 8999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 10 ; P_Y = SLN ; P_VALUE = N"R#3" ; P_OPT = ""
    P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:DEPTNO<N> "R#5"
    P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:DDESC<N> "L#29"
    P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N> "L#15"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
8999 *
  RETURN
*
**** CALL SYSCOM(MAT SYSCOM.REC)
*
91000 *
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
*
93000 *
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
*
**** END OF JOB
*
99999 *
END
