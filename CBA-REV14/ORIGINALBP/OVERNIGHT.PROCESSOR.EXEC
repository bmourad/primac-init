   SUBROUTINE OVERNIGHT.PROCESSOR.EXEC(XRPT, XCONO, XUSER, XACCT, XPROC, XSTATUS)
*********************************************************************
*
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* SYSTEM        - PRIMAC
*
* PROGRAM       - OVERNIGHT.PROCESSOR.EXEC
*
* AUTHOR        - NICK AMENDOLA - COMPUTER BUSINESS ASSOCIATES
*
* DATE          - 23 MAR 1992
*
* DESCRIPTION
*
* This subroutine is used to RUN the overnight reports and is called
* from program OVERNIGHT.PROCESSOR.SUB
*
*T21487 diane 02/14/1997 * Suspend printing job number
*T21177 diane 07/01/1998 * Remove LOGTO logic, fix USER.EXEC for zooms
*T24396 bilal 09/23/1999 * Remove test mode , fix read statement
*********************************************************************
*
*  COPY statements
*
*COPY>PMC.CPYLIB>MENUS.CONTROL
*CSF XXXXX v
*COPY>PMC.CPYLIB>PMC_PROCESS
*CSF XXXXX ^
*COPY>CPYLIB>PORT.CONTROL
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>SECURITY
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
   DIM O.USER.REC(20)
*
*  Initialization
*
   TEST.MODE = 0
*T24396      TEST.MODE = 1
   IF TEST.MODE THEN
      ERRMSG = "START ACCT = ":@WHO:@(-4)
      GOSUB 91000
      PRINT @(0,23):"START ACCT = ":@WHO:@(-4):;INPUT XOXO:
   END
   LEVEL_NO = "LEVEL"; CALL SYSVARS.SUB(LEVEL_NO)
   PROCNAME = "ONP_":LEVEL_NO
   XSTATUS = ""
   PORT = 'TTY'
   CALL SYSVARS.SUB(PORT)
   SEC.ID = "R.":PORT
   ACCT = @WHO
   OPEN "","VOC" TO MDICT ELSE
      XSTATUS = "CANNOT OPEN MASTER DICTIONARY"
      GOTO 99999
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      XSTATUS = "CANNOT OPEN CONTROL FILE"
      GOTO 99999
   END
   OPEN "","SECURITY" TO SECURITY ELSE
      XSTATUS = "CANNOT OPEN SECURITY FILE"
      GOTO 99999
   END
   OPEN "","PMC_PROCESS" TO PMC_PROCESS ELSE
      XSTATUS = "CANNOT OPEN PMC_PROCESS FILE"
      GOTO 99999
   END
   OPEN "","PMC_PROCESS_XREF" TO PMC_PROCESS_XREF ELSE
      XSTATUS = "CANNOT OPEN PMC_PROCESS_XREF FILE"
      GOTO 99999
   END
   MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
      XSTATUS = "Cannot Locate CONTROL, MENUS.CONTROL"
      GOTO 99999
   END
   PMC.PATH=PRIMAC.PATH[1,INDEX(PRIMAC.PATH,"/",COUNT(PRIMAC.PATH,"/"))]
*
*  Main processing
*
   QF.ID="QF_":PORT
   READU QFILE FROM MDICT, QF.ID ELSE QFILE=""
   O.QFILE=QFILE
   QFILE="F"
   BEGIN CASE
      CASE XACCT[1,3] = "CBA"
         NEW.PATH = CBA.PATH[1,INDEX(CBA.PATH,"/",COUNT(CBA.PATH,"/"))]
      CASE XACCT[1,LEN(M.ACCOUNT)] = M.ACCOUNT
         NEW.PATH = PMC.PATH
      CASE 1
         NEW.PATH = ""
   END CASE
   QFILE<2> = NEW.PATH:XACCT:"/VOC"
   QFILE<3> = NEW.PATH:XACCT:"/D_VOC"
   WRITEU QFILE ON MDICT, QF.ID
   OPEN "",QF.ID TO NEW.MDICT ELSE
      XSTATUS = "(":XACCT:") is an invalid account"
      GOTO 99997
   END
   READ REC FROM NEW.MDICT, "LOGIN" ELSE
      XSTATUS = "Invalid setup for account (":XACCT:")"
      GOTO 99997
   END
   CNT=DCOUNT(REC,AM)
   BEGIN CASE
      CASE REC<1> # "PQN"
         XSTATUS = "Invalid setup for account (":XACCT:")"
         GOTO 99997
      CASE REC<CNT-2>[1,6] # "MV %1 "
         XSTATUS = "Invalid setup for account (":XACCT:")"
         GOTO 99997
      CASE REC<CNT-1> # "HEASY.MENU" OR REC<CNT> # "P"
         XSTATUS = "Invalid setup for account (":XACCT:")"
         GOTO 99997
   END CASE
   STMT = "LOGTO ":NEW.PATH:XACCT
   MATREADU O.USER.REC FROM SECURITY, SEC.ID THEN
      FROM.MENU = 1
   END ELSE
      FROM.MENU = 0
      MAT O.USER.REC = ""
   END
   MAT USER.REC = ""
   USER.CONO = XCONO
   USER.ID   = XUSER
   USER.DIR  = XACCT
   USER.C.CO = XCONO
   MATWRITE USER.REC ON SECURITY, SEC.ID
   WRITE XRPT ON CONTROL, "OVERNIGHT.":PORT
   IF TEST.MODE THEN
      ERRMSG = "TO EXEC = ":STMT:@(-4)
      GOSUB 91000
      PRINT @(0,23):"TO EXEC = ":STMT:@(-4):;INPUT XOXO:
   END
   RESPONSE = ""
   IF TEST.MODE THEN
      ERRMSG = "CURR ACCT = ":@WHO:@(-4)
      GOSUB 91000
      PRINT @(0,23):"CURR ACCT = ":@WHO:@(-4):;INPUT XOXO:
   END
   MATREADU USER.REC FROM SECURITY, SEC.ID ELSE
      MAT USER.REC = ""
      USER.CONO = XCONO
      USER.ID   = XUSER
      USER.DIR  = XACCT
      USER.C.CO = XCONO
   END
   VOC_ID="O_":PORT
   READ PPS_XRF FROM PMC_PROCESS_XREF, XPROC THEN
      PPS_XRF=PPS_XRF<1>
      CALL VSI_VERB_SUB(VOC_ID,MDICT,PPS_XRF,PMC_PROCESS,EXE_TYPE,EXE_VERB,ERRMSG)
      BEGIN CASE
         CASE ERRMSG # ""
            GOTO 80000
         CASE EXE_VERB # ""
            IF EXE_TYPE = "P" THEN
               INS PROCNAME BEFORE USER.EXEC<1,1>
            END
            INS XPROC BEFORE USER.VERB<1,1>
*T24396 v
            MATREAD PPS.REC FROM PMC_PROCESS, PPS_XRF<1> ELSE MAT PPS.REC = ""
*T24396 ^
            INS PPS.DESC BEFORE USER.V.DSP<1,1>
      END CASE
   END
   MATWRITE USER.REC ON SECURITY, SEC.ID
   READV SEC.DFLT.QUEUE FROM SECURITY,XCONO:XUSER,24 ELSE SEC.DFLT.QUEUE = ''
   IF SEC.DFLT.QUEUE # '' THEN
      CMD = 'SETPTR ,,,,,,DEST ':SEC.DFLT.QUEUE:',BRIEF,NOMESSAGE'
      UDTEXECUTE CMD CAPTURING JUNK
   END ELSE
      CMD = 'SETPTR ,,,,,1,NOMESSAGE,BRIEF'
      UDTEXECUTE CMD CAPTURING JUNK
   END
*
*  Print a banner page and run the current report procedure
*
   REPORT.TIME = OCONV(TIME(),"MTS")
   BANNER = XUSER:" ":OCONV(DATE(),"D2/"):" ":REPORT.TIME
   PRINTER ON
   PERFORM "BLOCK-TERM ":BANNER
   PRINTER OFF
   PRINTER CLOSE
   IF TEST.MODE THEN
      ERRMSG = "TO EXEC = ":USER.EXEC:@(-4)
      GOSUB 91000
      PRINT @(0,23):"TO EXEC = ":USER.EXEC:@(-4):;INPUT XOXO:
   END
   EXECUTE EXE_VERB
80000 *
   READU EXEC_PROC FROM MDICT, VOC_ID THEN
      DELETE MDICT, VOC_ID
   END ELSE
      RELEASE MDICT, VOC_ID
   END
   CALL PRINTER_CLOSE
*
*  Log back to Process account
*
   BEGIN CASE
      CASE ACCT[1,3] = "CBA"
         NEW.PATH = CBA.PATH[1,INDEX(CBA.PATH,"/",COUNT(CBA.PATH,"/"))]
      CASE ACCT[1,LEN(M.ACCOUNT)] = M.ACCOUNT
         NEW.PATH = PMC.PATH
      CASE 1
         NEW.PATH = ""
   END CASE
   STMT = "LOGTO ":NEW.PATH:ACCT
   MATREADU USER.REC FROM SECURITY, SEC.ID ELSE NULL
   IF FROM.MENU THEN
      MAT USER.REC = MAT O.USER.REC
*T21177         USER.EXEC = STMT
      MATWRITE USER.REC ON SECURITY, SEC.ID
   END ELSE
      DELETE SECURITY, SEC.ID
   END
   IF TEST.MODE THEN
      ERRMSG = "MENU ON = ":FROM.MENU:"<":@(-4)
      GOSUB 91000
      PRINT @(0,23):"MENU ON = ":FROM.MENU:"<":@(-4):; INPUT XOXO:
   END
   IF TEST.MODE THEN
      ERRMSG = "TO EXEC = ":STMT:@(-4)
      GOSUB 91000
      PRINT @(0,23):"TO EXEC = ":STMT:@(-4):;INPUT XOXO:
   END
   RESPONSE = ""
   IF TEST.MODE THEN
      ERRMSG = "LAST ACCT = ":@WHO:@(-4)
      GOSUB 91000
      PRINT @(0,23):"LAST ACCT = ":@WHO:@(-4):;INPUT XOXO:
   END
   GOTO 99993
*
*--- CALLS FOR SYSCOM
*
91000 *
   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
*
*  End of program
*
99993*
   READU DUMMY FROM CONTROL, "OVERNIGHT.":PORT ELSE NULL
   DELETE CONTROL, "OVERNIGHT.":PORT
99997*
   IF O.QFILE="" THEN
      DELETE MDICT, QF.ID
   END ELSE
      WRITE O.QFILE ON MDICT, QF.ID
   END
99999*
   IF XSTATUS # "" THEN
      IF TEST.MODE THEN
         ERRMSG = "XSTATUS = ":XSTATUS:@(-4)
         GOSUB 91000
         PRINT @(0,23):"XSTATUS = ":XSTATUS:@(-4):;INPUT XOXO:
      END
   END
   RETURN
*  END
*  INS GXR.ID BEFORE USER.VERB<1,1>
*  INS PPS.DESC BEFORE USER.V.DSP<1,1>
*  IF EXE_TYPE = "P" THEN
*     INS PROCNAME BEFORE USER.EXEC<1,1>
*  END
*  GOSUB 8500
*  PREV_PROG_ID = @USER1
*  @USER1 = GXR.ID
*  EXECUTE EXE_VERB
*  @USER1 = PREV_PROG_ID
*  IF EXE_TYPE = "P" OR EXE_TYPE = "PB" THEN
*     READU EXEC_PROC FROM VOC, VOC_ID THEN
*        DELETE VOC, VOC_ID
*     END ELSE
*        RELEASE VOC, VOC_ID
*     END
*  END
*  MATREADU USER.REC FROM SECURITY, SEC.ID THEN
*     LOCATE PROCNAME IN USER.EXEC<1>,1 SETTING DELNO THEN
*        USER.EXEC = DELETE(USER.EXEC,1,DELNO,0)
*     END
*  END ELSE
*     ERRMSG="** VSI_ZOOM NULL return stack after PERFORM **"
*     GOSUB 91000
*     USER.EXEC = SAVE_USER.EXEC
*  END
*  MATWRITE USER.REC ON SECURITY, SEC.ID
