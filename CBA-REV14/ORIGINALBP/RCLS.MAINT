*COPY>CPYLIB>COM1
**************************************************************
* REVISION   - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     - PRIMAC-JCS
* SOURCE     - JCSBP
* PROGRAM    - RCLS.MAINT
* BY         - WALID YAMOUT, C.B.A
* DATE       - 03/17/86
* MODIFIED   - NLB
* DATE       - 10/18/88
* COMMENTS   - ADDED CUSTOMER INVENTORY CHECK
* DESCRIPTION-
* markt 10/13/1998 * Add division security check
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*
* ENDDOC
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26565 lhelms 04/24/2002 * UPGRADE REV12 REMOVE ROLL/SKID REPLACE
*                           SERIAL
*T27705 lross 11/14/2003 * Expand Serial to 15 chars.
*T28162 thompson 06/18/2004 * Fix scrolling on bottom part of screen.
*T28347 lross 12/02/2004 * Lower screen scroll problem.
*T28700 thompson 10/27/2005 * Correct placement of reverse amount on
*                             screen.                               
**************************************************************
*ENDDOC
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.RCLS
*COPY>ICS.CPYLIB>INVENTORY
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
  DIM DREC(20)
  EQU DLINES      TO DREC(1)
  EQU DEPT.NO     TO DREC(2)
  EQU CCTR.NO     TO DREC(3)
  EQU PROD.NO     TO DREC(4)
  EQU WHSE.NO     TO DREC(5)
  EQU DEPT.REASON TO DREC(6)
  EQU DEPT.ORIG   TO DREC(7)
  EQU DEPT.COST   TO DREC(8)
  EQU DPTR        TO DREC(9)
  EQU TLINES      TO DREC(10)
  EQU TRAN.NO     TO DREC(11)
  EQU TRAN.TYPE   TO DREC(12)
  EQU TRAN.OPER   TO DREC(13)
  EQU TRAN.EMP    TO DREC(14)
  EQU TRAN.MON    TO DREC(15)
  EQU TRAN.WIP    TO DREC(16)
  EQU TRAN.ORIG   TO DREC(17)
  EQU TRAN.CURR   TO DREC(18)
  EQU TRAN.COST   TO DREC(19)
  EQU TRAN.SEQ    TO DREC(20)
  SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT LOCATE JCS.SCREENS FILE"; GOTO 93000
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "CANNOT LOCATE CUSTOMER FILE"; GOTO 93000
  END
  OPEN "","JOB" TO JOB ELSE
    ERRMSG = "CANNOT LOCATE JOB FILE"; GOTO 93000
  END
  OPEN "","JOB.TIME" TO JOB.TIME ELSE
    ERRMSG = "CANNOT LOCATE JOB.TIME FILE"; GOTO 93000
  END
  OPEN "","JOB.MATL" TO JOB.MATL ELSE
    ERRMSG = "CANNOT LOCATE JOB.MATL FILE"; GOTO 93000
  END
  OPEN "","JOB.OSP" TO JOB.OSP ELSE
    ERRMSG = "CANNOT LOCATE JOB.OSP FILE"; GOTO 93000
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "CANNOT LOCATE INVENTORY FILE"; GOTO 93000
  END
  OPEN "","JOB.SHIP" TO JOB.SHIP ELSE
    ERRMSG = "CANNOT LOCATE JOB.SHIP FILE"; GOTO 93000
  END
  OPEN "","JOB.MISC" TO JOB.MISC ELSE
    ERRMSG = "CANNOT LOCATE JOB.MISC FILE"; GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT LOCATE CONTROL FILE"; GOTO 93000
  END
  OPEN "","DAILY.RCLS" TO DAILY.RCLS ELSE
    ERRMSG = "CANNOT LOCATE DAILY.RCLS FILE"; GOTO 93000
  END
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT LOCATE COMPANY FILE"; GOTO 93000
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    ERRMSG = "CANNOT LOCATE PREFIX FILE"; GOTO 93000
  END
  MAT COMP.REC = ""; CONO = ""; CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 999999
  MAT EDIT.COM.DRIVER = ""
  UNKNOWN = "UNKNOWN"
  DTYPE = "LB" :AM: "MT" :AM: "OS" :AM: "SP" :AM: "MS"
  DDESC = "LABOR" :AM: "MATERIAL" :AM: "OUTSIDE PURCHASES" :AM: "SHIPPING" :AM: "MISCELLANEOUS" :AM: "UNKNOWN"
  HD1 = "" :AM: "Product Number  Whse" :AM: "Category" :AM: "" :AM: ""
  HD2 = "Oper Employee" :AM: "Loc    Serial" :AM: "Oper Vendor" :AM: "Oper Ship Via" :AM: "Oper Reason"
  PAGE.SIZE = 4; LINE.SPACE = 1
  PAGE.SSIZE = 2; LINE.SSPACE = 2 ;*T27705
  BEGIN.PAGE = 9; BEGIN.SPAGE = 16
  ECD.SCRN.CNT = 1; ECD.SCRN.NAME = "RCLS.MAINT"
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1
100 MAT SCV.REC = ""; ECD.ACTION = 2; CALL SCRN.EDIT
  RELEASE   ;* T26126
101 ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 999999
    CASE ECD.RET.VALUE = "N"
      MAT DRC.REC = ''
      RCLS.SEQ.NO = ECD.RET.VALUE
150   ECD.NUM = 2; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 100
      DRC.DATE = ECD.RET.VALUE
200   ECD.NUM = 3; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 100
      MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
        ERRMSG = "CANNOT LOCATE JOB - " : ECD.RET.VALUE
        GOSUB 91000; GOTO 200
      END
      BEGIN CASE
        CASE JOB.STATUS<1,1>=9
          ERRMSG = "THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 200
        CASE JOB.STATUS<1,1>=7
          ERRMSG = "THIS JOB IS READY TO PURGE";GOSUB 91000;GOTO 200
        CASE JOB.STATUS<1,1>=8
          ERRMSG = "THIS JOB HAS BEEN PURGED";GOSUB 91000;GOTO 200
      END CASE
*T23278 v
      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 200
      END
*T23278 ^
      DRC.F.JOB = ECD.RET.VALUE; F.TYPE = JOB.TYPE
      MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CUST.NAME = UNKNOWN
      DRC.F.CUST = JOB.CUST; DRC.F.DIV = JOB.DIV; DRC.F.DEPT = JOB.DEPT
      ECD.NUM = 4; SCV.REC(ECD.NUM) = JOB.CUST; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 5; SCV.REC(ECD.NUM) = CUST.NAME; ECD.ACTION = 5; CALL SCRN.EDIT
250   ECD.NUM = 6; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 200
      IF ECD.RET.VALUE = DRC.F.JOB THEN
        ERRMSG = "CANNOT RECLASSIFY TO THE SAME JOB"
        GOSUB 91000; GOTO 250
      END
      MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
        ERRMSG = "CANNOT LOCATE JOB - " : ECD.RET.VALUE
        GOSUB 91000; GOTO 250
      END
      BEGIN CASE
        CASE JOB.STATUS<1,1>=9
          ERRMSG = "THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 250
        CASE JOB.STATUS<1,1>=7
          ERRMSG = "THIS JOB IS READY TO PURGE";GOSUB 91000;GOTO 250
        CASE JOB.STATUS<1,1>=8
          ERRMSG = "THIS JOB HAS BEEN PURGED";GOSUB 91000;GOTO 250
      END CASE
      IF JOB.DIV # DRC.F.DIV THEN
        ERRMSG = "CANNOT TRANSFER BETWEEN TWO DIFFERENT DIVISIONS"
        GOSUB 91000; GOTO 250
      END
      IF JOB.DEPT # DRC.F.DEPT[1,LEN(JOB.DEPT)] THEN
        ERRMSG = "CANNOT TRANSFER BETWEEN TWO DIFFERENT DEPARTMENTS"
        GOSUB 91000; GOTO 250
      END
      IF JOB.TYPE # "R" AND JOB.TYPE # F.TYPE THEN
        ERRMSG = "CANNOT TRANSFER BETWEEN TWO DIFFERENT TYPES"
        GOSUB 91000; GOTO 250
      END
      IF DRC.F.CUST # JOB.CUST THEN
        MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CUST.NAME = UNKNOWN
      END
      DRC.T.JOB = ECD.RET.VALUE
      DRC.T.CUST = JOB.CUST
      ECD.NUM = 7; SCV.REC(ECD.NUM) = JOB.CUST; ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 8; SCV.REC(ECD.NUM) = CUST.NAME; ECD.ACTION = 5; CALL SCRN.EDIT
      MATREAD JOB.REC FROM JOB, CONO : DRC.F.JOB ELSE
        ERRMSG = "CANNOT LOCATE JOB - " : DRC.F.JOB
        GOSUB 91000; GOTO 200
      END
300   ECD.NUM = 9; ECD.VALDAT = "LB,MT,OS,SP,MS"
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 200
      LOCATE ECD.RET.VALUE IN DTYPE,1 SETTING T ELSE NULL
      DRC.F.TYPE = ECD.RET.VALUE
      ECD.NUM = 10; SCV.REC(ECD.NUM) = DDESC<T>
      ECD.ACTION = 5; CALL SCRN.EDIT
      DRC.T.TYPE = DRC.F.TYPE
      ECD.NUM = 11; SCV.REC(ECD.NUM) = HD1<T>
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 12; SCV.REC(ECD.NUM) = HD2<T>
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      * T26126 v
      MATREADU DRC.REC FROM DAILY.RCLS, CONO : ECD.RET.VALUE LOCKED
        ERRMSG = 'DAILY RCLS record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 101 
      END ELSE
      * T26126 ^
        ERRMSG = "CANNOT LOCATE DAILY.RCLS - " : ECD.RET.VALUE
        GOSUB 91000; GOTO 101
      END
      RCLS.SEQ.NO = ECD.RET.VALUE
      MATREAD JOB.REC FROM JOB,CONO:DRC.F.JOB ELSE MAT JOB.REC = ""
*T23278 v
      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 101
      END
*T23278 ^
      SCV.REC(2) = OCONV(DRC.DATE, "D2/")
      SCV.REC(3) = DRC.F.JOB
      SCV.REC(4) = DRC.F.CUST
      MATREAD CUST.REC FROM CUSTOMER,CONO:DRC.F.CUST ELSE CUST.NAME = UNKNOWN
      SCV.REC(5) = CUST.NAME
      SCV.REC(6) = DRC.T.JOB
      SCV.REC(7) = DRC.T.CUST
      IF DRC.T.CUST # DRC.F.CUST THEN
        MATREAD CUST.REC FROM CUSTOMER,CONO:DRC.T.CUST ELSE CUST.NAME = UNKNOWN
      END
      SCV.REC(8) = CUST.NAME
      SCV.REC(9) = DRC.F.TYPE
      LOCATE DRC.F.TYPE IN DTYPE,1 SETTING T ELSE NULL
      SCV.REC(10) = DDESC<T>
      SCV.REC(11) = HD1<T>
      SCV.REC(12) = HD2<T>
      ECD.ACTION = 3; CALL SCRN.EDIT
  END CASE
  MAT DREC = ""
  BEGIN CASE
    CASE DRC.F.TYPE = "LB"
      CNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
      FOR I = 1 TO CNT
        IF JOB.LB.COST<1,I> > 0 THEN
          DLINES = DLINES + 1
          DEPT.NO<DLINES> = JOB.LB.DEPT<1,I>
          CCTR.NO<DLINES> = JOB.LB.CCTR<1,I>
          DEPT.ORIG<DLINES> = JOB.LB.COST<1,I>
          DPTR<DLINES> = I
        END
      NEXT I
    CASE DRC.F.TYPE = "MT"
      CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
      FOR I = 1 TO CNT
        IF JOB.MT.COST<1,I> > 0 THEN
          DLINES = DLINES + 1
          DEPT.NO<DLINES> = JOB.MT.DEPT<1,I>
          CCTR.NO<DLINES> = JOB.MT.CCTR<1,I>
          PROD.NO<DLINES> = JOB.MT.PROD<1,I>
          WHSE.NO<DLINES> = JOB.MT.WHSE<1,I>
          DEPT.ORIG<DLINES> = JOB.MT.COST<1,I>
          DPTR<DLINES> = I
        END
      NEXT I
    CASE DRC.F.TYPE = "OS"
      CNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
      FOR I = 1 TO CNT
        IF JOB.OS.COST<1,I> > 0 THEN
          DLINES = DLINES + 1
          DEPT.NO<DLINES> = JOB.OS.DEPT<1,I>
          CCTR.NO<DLINES> = JOB.OS.CCTR<1,I>
          PROD.NO<DLINES> = JOB.OS.PLINE<1,I>
          DEPT.ORIG<DLINES> = JOB.OS.COST<1,I>
          DPTR<DLINES> = I
        END
      NEXT I
    CASE DRC.F.TYPE = "SP"
      CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
      FOR I = 1 TO CNT
        IF JOB.SP.COST<1,I> > 0 THEN
          DLINES = DLINES + 1
          DEPT.NO<DLINES> = JOB.SP.DEPT<1,I>
          CCTR.NO<DLINES> = JOB.SP.CCTR<1,I>
          DEPT.ORIG<DLINES> = JOB.SP.COST<1,I>
          DPTR<DLINES> = I
        END
      NEXT I
    CASE DRC.F.TYPE = "MS"
      CNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
      FOR I = 1 TO CNT
        IF JOB.MS.COST<1,I> > 0 THEN
          DLINES = DLINES + 1
          DEPT.NO<DLINES> = JOB.MS.DEPT<1,I>
          CCTR.NO<DLINES> = JOB.MS.CCTR<1,I>
          DEPT.ORIG<DLINES> = JOB.MS.COST<1,I>
          DPTR<DLINES> = I
        END
      NEXT I
  END CASE
  TCNT = COUNT(DRC.TRAN,VM) + (DRC.TRAN # "")
  FOR J = 1 TO TCNT
    PTR = 1
    LOOP
      LOCATE DRC.DEPT<1,J> IN DEPT.NO,PTR SETTING DLN ELSE
        PTR = 0; DLN = 0
      END
      BEGIN CASE
        CASE PTR = 0
        CASE DRC.CCTR<1,J> # CCTR.NO<DLN>
          PTR = DLN + 1
        CASE PROD.NO<DLN> # "" AND DRC.OPER<1,J> # PROD.NO<DLN>
          PTR = DLN + 1
        CASE WHSE.NO<DLN> # "" AND DRC.EMP<1,J> # WHSE.NO<DLN>
          PTR = DLN + 1
        CASE 1
          PTR = 0
      END CASE
    WHILE PTR DO REPEAT
    IF DLN THEN
      IF TRAN.NO<DLN> = "" THEN GOSUB 2000
      LOCATE DRC.TRAN<1,J> IN TRAN.NO<DLN>,1 SETTING TLN ELSE TLN = 0
      IF TLN THEN
        TRAN.COST<DLN,TLN> = DRC.COST<1,J>
        DEPT.COST<DLN> = DEPT.COST<DLN> + DRC.COST<1,J>
        DEPT.REASON<DLN> = DRC.REASON<1,J>
      END
    END
  NEXT J
  DLN = 1; OLD.LINE = 0; GOSUB 10000
  MORE = 1
  LOOP
    ECD.NUM = 15; SCV.REC(ECD.NUM) = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        MORE = 0
      CASE OPTION = "F"
        DRC.DEPT = ""
        DRC.CCTR = ""
        DRC.OPER = ""
        DRC.EMP = ""
        DRC.TRAN = ""
        DRC.SEQ = ""
        DRC.PRINT.DATE = ""
        DRC.REASON = ""
        DRC.COST = ""
        K = 0
        FOR I = 1 TO DLINES
          FOR J = 1 TO TLINES<I>
            IF TRAN.COST<I,J> < 1 THEN GOTO 509
            K = K + 1
            DRC.DEPT<1,K> = DEPT.NO<I>
            DRC.CCTR<1,K> = CCTR.NO<I>
            IF PROD.NO<I> = "" THEN
              DRC.OPER<1,K> = TRAN.OPER<I,J>
            END ELSE
              DRC.OPER<1,K> = PROD.NO<I>
            END
            IF WHSE.NO<I> = "" THEN
              DRC.EMP<1,K> = TRAN.EMP<I,J>
            END ELSE
              DRC.EMP<1,K> = WHSE.NO<I>
            END
            DRC.TRAN<1,K> = TRAN.NO<I,J>
            DRC.SEQ<1,K> = TRAN.SEQ<I,J>
            DRC.COST<1,K> = TRAN.COST<I,J>
            DRC.REASON<1,K> = DEPT.REASON<I>
509       NEXT J
        NEXT I
        BEGIN CASE
          CASE K AND RCLS.SEQ.NO = "N"
            READU RCLS.SEQ FROM CONTROL,CONO:"DAILY.RCLS" ELSE RCLS.SEQ = 10001
            RCLS.SEQ.NO = RCLS.SEQ
            RCLS.SEQ = RCLS.SEQ + 1
            WRITE RCLS.SEQ ON CONTROL,CONO:"DAILY.RCLS"
            MATWRITE DRC.REC ON DAILY.RCLS,CONO:RCLS.SEQ.NO
            ECD.NUM = 1; SCV.REC(ECD.NUM) = RCLS.SEQ.NO
            ECD.ACTION = 5; CALL SCRN.EDIT
            ERRMSG = "Please Note Down New Sequence Number"; GOSUB 91000
          CASE K
            MATWRITE DRC.REC ON DAILY.RCLS,CONO:RCLS.SEQ.NO
          CASE RCLS.SEQ.NO # "N"
            DELETE DAILY.RCLS, CONO:RCLS.SEQ.NO
        END CASE
        MORE = 0
      CASE NUM(OPTION)
        IF OPTION < START.LINE OR OPTION > LAST.LINE THEN
          ERRMSG = "INVALID (DEPT/CCTR) LINE NUMBER"
          GOSUB 91000; GOTO 519
        END
*T23278 v
        DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
        CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
        IF ERRMSG # '' THEN
          GOSUB 91000; GOTO 519
        END
*T23278 ^
        DLN = OPTION
        IF DRC.T.TYPE="OS" OR DRC.T.TYPE="MT" THEN
          MATREAD INV.REC FROM INVENTORY,CONO:PROD.NO<DLN> ELSE MAT INV.REC = ""
          IF INV.CUST # "" THEN
            IF "X":DRC.T.CUST # "X":INV.CUST THEN
              ERRMSG="This inventory belongs to customer ":INV.CUST
              GOSUB 91000
              GOTO 519
            END
          END
        END
        GOSUB 3000; IF VALUE = "END" THEN GOTO 519
        P_X  = 2 ; P_Y = DSLN ; P_VALUE = "*" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF TRAN.NO<DLN> = "" THEN GOSUB 2000
        TLN = 1; OLD.SLINE = 0; GOSUB 20000
        ANCORE = 1
        LOOP
          ECD.NUM = 16; SCV.REC(ECD.NUM) = ""
          ECD.ACTION = 4; CALL SCRN.EDIT
          BEGIN CASE
            CASE ECD.RET.VALUE = "E" OR ECD.RET.VALUE = "END"
              ANCORE = 0
            CASE NUM(ECD.RET.VALUE)
              BEGIN CASE
                CASE ECD.RET.VALUE < START.SLINE OR ECD.RET.VALUE > LAST.SLINE
                  ERRMSG = "INVALID TRANSACTION LINE NUMBER"
                  GOSUB 91000; GOTO 518
                CASE TRAN.CURR<DLN,ECD.RET.VALUE> < 1
                  ERRMSG = "CANNOT RECLASSIFY ZERO COST TRANSACTION"
                  GOSUB 91000; GOTO 518
              END CASE
              TLN = ECD.RET.VALUE
*T27705 v     Y = BEGIN.SPAGE + LINE.SPACE * MOD(TLN-1,PAGE.SIZE)
              Y = BEGIN.SPAGE + LINE.SSPACE * MOD(TLN-1,PAGE.SSIZE)
Y = Y + 1
              X = 69; TYP = 4; SCALER = 2; MINV = 0; MAXV = TRAN.CURR<DLN,TLN>
              MAXL = 10;  O.R = "O"
              IF TRAN.COST<DLN,TLN> = "" THEN
                DEFAULT = OCONV(TRAN.CURR<DLN,TLN>,"MD2")
              END ELSE
                DEFAULT = OCONV(TRAN.COST<DLN,TLN>,"MD2")
              END
              CALL EDIT.SUB
              IF VALUE = "END" THEN GOTO 518
              DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,TLN> + VALUE
              TRAN.COST<DLN,TLN> = VALUE
              P_X  = 66 ; P_Y = DSLN + 1 ; P_VALUE = OCONV(DEPT.COST<DLN>,"MD2") "R#10" ; P_OPT = ""
              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
518 *
            CASE ECD.RET.VALUE = "ALL"
              FOR I = 1 TO TLINES<DLN>
                DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,I> + TRAN.CURR<DLN,I>
                TRAN.COST<DLN,I> = TRAN.CURR<DLN,I>
              NEXT I
              P_X  = 66 ; P_Y = DSLN + 1 ; P_VALUE = OCONV(DEPT.COST<DLN>,"MD2") "R#10" ; P_OPT = ""
              CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
              OLD.SLINE = 0; GOSUB 20000
            CASE ECD.RET.VALUE = "S"
* 28162              TLN = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
              TLN = 1 + INT((TLN-1)/PAGE.SSIZE) * PAGE.SSIZE + PAGE.SSIZE ; *T28162
              IF TLN > TLINES<DLN> THEN TLN = 1
              GOSUB 20000
            * T25978 v
            CASE ECD.RET.VALUE = 'SR'
              TLN = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
              IF TLN < 1 THEN TLN = 1
              GOSUB 20000
            CASE ECD.RET.VALUE = 'ST'
              TLN = 1
              GOSUB 20000
            CASE ECD.RET.VALUE = 'SB'
              TLN = TLINES<DLN>
              GOSUB 20000
            * T25978 ^
          END CASE
        WHILE ANCORE DO REPEAT
        P_X  = 2 ; P_Y = DSLN ; P_VALUE = " " ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CNT = 1; GOSUB 20500
519 *
      CASE OPTION = "ALL"
*T23278 v
        DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
        CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
        IF ERRMSG # '' THEN
          GOSUB 91000; GOTO 529
        END
*T23278 ^
        SDLN = DLN
        DLN = 1; GOSUB 3000
        IF VALUE = "END" THEN
          DLN = SDLN; GOTO 529
        END
        FOR DLN = 1 TO DLINES
          DEPT.REASON<DLN> = DEPT.REASON<1>
          IF TRAN.NO<DLN> = "" THEN GOSUB 2000
          FOR I = 1 TO TLINES<DLN>
            DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,I> + TRAN.CURR<DLN,I>
            TRAN.COST<DLN,I> = TRAN.CURR<DLN,I>
          NEXT I
        NEXT DLN
        DLN = SDLN; OLD.LINE = 0; GOSUB 10000
529 *
      CASE OPTION = "S"
        DLN = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF DLN > DLINES THEN DLN = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        DLN = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF DLN < 1 THEN DLN = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        DLN = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        DLN = DLINES
        GOSUB 10000
      * T25978 ^
    END CASE
  WHILE MORE DO REPEAT
  GOTO 100
2000 *
  P_X  = 3 ; P_Y = 23 ; P_VALUE = "Processing Dept (":DEPT.NO<DLN>:"), Cctr (":CCTR.NO<DLN>:") On Line (":DLN:")" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF DRC.T.TYPE="OS" OR DRC.T.TYPE="MT" THEN
    MATREAD INV.REC FROM INVENTORY,CONO:PROD.NO<DLN> ELSE MAT INV.REC = ""
    IF INV.CUST # "" THEN
      IF "X":DRC.T.CUST # "X":INV.CUST THEN
        ERRMSG=PROD.NO<DLN>:" belongs to customer ":INV.CUST:", cannot be reclassified"
        GOSUB 91000
        GOTO 2500
      END
    END
  END
  DLOC = DPTR<DLN>; TLOC = TLINES<DLN>
  LB.ID = CONO:DRC.F.JOB:"!":DEPT.NO<DLN>:"!":CCTR.NO<DLN>:"!"
  BEGIN CASE
    CASE DRC.F.TYPE = "LB"
      FOR I = 1 TO JOB.LB.SEQ<1,DLOC>
        MATREAD JLB.REC FROM JOB.TIME, LB.ID:I ELSE
          JLB.COST = 0; JLB.RC.COST = 0
        END
        IF JLB.COST - JLB.RC.COST > 0 THEN
          TLOC = TLOC + 1
          TRAN.NO<DLN,TLOC> = JLB.SEQ; PTR = 1
          TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JLB.TYPE
          TRAN.OPER<DLN,TLOC> = JLB.OPER; TRAN.EMP<DLN,TLOC> = JLB.EMP
          TRAN.MON<DLN,TLOC> = JLB.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JLB.COST
          LOOP WHILE JLB.MON<1,PTR> # "" DO
            FOR W = 1 TO 4
              TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JLB.WIP<1,PTR,W>
            NEXT W
            PTR = PTR + 1
          REPEAT
          TRAN.CURR<DLN,TLOC> = JLB.COST - JLB.RC.COST
        END
      NEXT I
    CASE DRC.F.TYPE = "MT"
      MT.ID = LB.ID:PROD.NO<DLN>:"!":WHSE.NO<DLN>:"!"
      FOR I = 1 TO JOB.MT.SEQ<1,DLOC>
        MATREAD JMT.REC FROM JOB.MATL, MT.ID:I ELSE
          JMT.COST = 0; JMT.RC.COST = 0
        END
        IF JMT.COST - JMT.RC.COST > 0 THEN
          TLOC = TLOC + 1
          TRAN.NO<DLN,TLOC> = JMT.SEQ; PTR = 1
          TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JMT.TYPE
          TRAN.OPER<DLN,TLOC> = JMT.LOC; TRAN.EMP<DLN,TLOC> = JMT.R.S.ID
          TRAN.MON<DLN,TLOC> = JMT.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JMT.COST
          LOOP WHILE JMT.MON<1,PTR> # "" DO
            FOR W = 1 TO 3
              TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JMT.WIP<1,PTR,W>
            NEXT W
            PTR = PTR + 1
          REPEAT
          TRAN.CURR<DLN,TLOC> = JMT.COST - JMT.RC.COST
        END
      NEXT I
    CASE DRC.F.TYPE = "OS"
      OS.ID = LB.ID:PROD.NO<DLN>:"!"
      FOR I = 1 TO JOB.OS.SEQ<1,DLOC>
        MATREAD JOS.REC FROM JOB.OSP, OS.ID:I ELSE
          JOS.COST = 0; JOS.RC.COST = 0
        END
        IF JOS.COST - JOS.RC.COST > 0 THEN
          TLOC = TLOC + 1
          TRAN.NO<DLN,TLOC> = JOS.SEQ; PTR = 1
          TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JOS.TYPE
          TRAN.OPER<DLN,TLOC> = JOS.OPER; TRAN.EMP<DLN,TLOC> = JOS.VEND
          TRAN.MON<DLN,TLOC> = JOS.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JOS.COST
          LOOP WHILE JOS.MON<1,PTR> # "" DO
            FOR W = 1 TO 2
              TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JOS.WIP<1,PTR,W>
            NEXT W
            PTR = PTR + 1
          REPEAT
          TRAN.CURR<DLN,TLOC> = JOS.COST - JOS.RC.COST
        END
      NEXT I
    CASE DRC.F.TYPE = "SP"
      FOR I = 1 TO JOB.SP.SEQ<1,DLOC>
        MATREAD JSP.REC FROM JOB.SHIP, LB.ID:I ELSE
          JSP.COST = 0; JSP.RC.COST = 0
        END
        IF JSP.COST - JSP.RC.COST > 0 THEN
          TLOC = TLOC + 1
          TRAN.NO<DLN,TLOC> = JSP.SEQ; PTR = 1
          TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JSP.TYPE
          TRAN.OPER<DLN,TLOC> = JSP.OPER; TRAN.EMP<DLN,TLOC> = JSP.VIA
          TRAN.MON<DLN,TLOC> = JSP.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JSP.COST
          LOOP WHILE JSP.MON<1,PTR> # "" DO
            FOR W = 1 TO 2
              TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JSP.WIP<1,PTR,W>
            NEXT W
            PTR = PTR + 1
          REPEAT
          TRAN.CURR<DLN,TLOC> = JSP.COST - JSP.RC.COST
        END
      NEXT I
    CASE DRC.F.TYPE = "MS"
      FOR I = 1 TO JOB.MS.SEQ<1,DLOC>
        MATREAD JMS.REC FROM JOB.MISC, LB.ID:I ELSE
          JMS.COST = 0; JMS.RC.COST = 0
        END
        IF JMS.COST - JMS.RC.COST > 0 THEN
          TLOC = TLOC + 1
          TRAN.NO<DLN,TLOC> = JMS.SEQ; PTR = 1
          TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JMS.TYPE
          TRAN.OPER<DLN,TLOC> = JMS.OPER; TRAN.EMP<DLN,TLOC> = JMS.REASON
          TRAN.MON<DLN,TLOC> = JMS.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JMS.COST
          LOOP WHILE JMS.MON<1,PTR> # "" DO
            FOR W = 1 TO 2
              TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JMS.WIP<1,PTR,W>
            NEXT W
            PTR = PTR + 1
          REPEAT
          TRAN.CURR<DLN,TLOC> = JMS.COST - JMS.RC.COST
        END
      NEXT I
  END CASE
  TLINES<DLN> = TLOC
2500*
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
3000 DSLN = BEGIN.PAGE + LINE.SPACE * MOD(DLN-1,PAGE.SIZE)
  X = 34; Y = DSLN; TYP = 1; MAXL = 20
  IF DEPT.REASON<DLN> = "" THEN
    O.R = "R"
  END ELSE
    DEFAULT = DEPT.REASON<DLN>; O.R = "O"
  END
  CALL EDIT.SUB
  IF VALUE # "END" THEN
    DEPT.REASON<DLN> = VALUE
  END
  RETURN
10000 START.LINE = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE 
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > DLINES THEN LAST.LINE = DLINES
  IF START.LINE = OLD.LINE THEN GOTO 10999
  OLD.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
*T28347 v  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
    P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:DEPT.NO<N> "L#5"
    P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:CCTR.NO<N> "L#3"
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:PROD.NO<N> "L#15"
    P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:WHSE.NO<N> "L#4"
    P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:DEPT.REASON<N> "L#20"
    P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DEPT.ORIG<N>,"MD2") "R#10"
    P_X  := AM:66 ; P_Y := AM:SLN + 1 ; P_VALUE := AM:OCONV(DEPT.COST<N>,"MD2") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
10500 FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10999 RETURN
*T27705 20000 START.SLINE = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE 
20000 START.SLINE = 1 + INT((TLN-1)/PAGE.SSIZE) * PAGE.SSIZE 
*T27705  LAST.SLINE = START.SLINE + PAGE.SIZE - 1
  LAST.SLINE = START.SLINE + PAGE.SSIZE - 1
  IF LAST.SLINE > TLINES<DLN> THEN LAST.SLINE = TLINES<DLN>
  IF START.SLINE = OLD.SLINE THEN GOTO 20999
  OLD.SLINE = START.SLINE
  CNT = 1
  FOR N = START.SLINE TO LAST.SLINE
*T27705    SLN = BEGIN.SPAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    SLN = BEGIN.SPAGE + LINE.SSPACE * MOD(N-1,PAGE.SSIZE)
*T28347 v P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.NO<DLN,N> "L#8"
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.TYPE<DLN,N> "L#1"
    P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.OPER<DLN,N> "L#4"
*T27705    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.EMP<DLN,N> "L#8"
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.EMP<DLN,N> "L#15"
*T27705    P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.MON<DLN,N> "L#6"
    P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.MON<DLN,N> "L#6"
*T27705    P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.WIP<DLN,N>,"MD2") "R#10"
    P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.WIP<DLN,N>,"MD2") "R#10"
*T27705    P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.ORIG<DLN,N>,"MD2") "R#10"
    P_X  := AM:47 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.ORIG<DLN,N>,"MD2") "R#10"
*T27705    P_X  := AM:58 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.CURR<DLN,N>,"MD2") "R#10"
    P_X  := AM:58 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.CURR<DLN,N>,"MD2") "R#10"
*T27705    P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.COST<DLN,N>,"MD2") "R#10"
    P_X  := AM:69 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.COST<DLN,N>,"MD2") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
*T2770520500 FOR M = CNT TO PAGE.SIZE
20500 FOR M = CNT TO PAGE.SSIZE
*T27705    SLN = BEGIN.SPAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    SLN = BEGIN.SPAGE + LINE.SSPACE * MOD(M-1,PAGE.SSIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
*T28347 v
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
*   P_X :=AM:0; P_Y := AM: SLN+1; P_VALUE :=AM: ""; P_OPT := AM: "CL";*T27705
*T28347 ^
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
20999 RETURN
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN 
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN 
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC) 
999999 * PRINT * @(-1) * 
END
