   SUBROUTINE EST.DEPT.SELECT (CONO, ACTION, EST.KEY, STATUS)
*********************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.DEPT.SELECT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 12/04/85
*
* DESCRIPTION
*
* This subroutine controls the sequencing of subsequent maintenance
* routines. Departments and components required for the estimate are
* specified.
*
* MOD TASK 17811 DMT 4/19/94 ALLOW 99 QUANTITIES
*T21642 rik 04/17/1997 * DON'T DEFAULT TO TYPE=S WHEN INVOKING COPY
*                        FUNCTION CROSS REFERENCE
*T21958 lanny 05/22/1997 * Cannot copy an estimate with diff DIV path.
*T22947 renee 05/28/1998 * Prompt for estimate or cost center standards
*                          when asked to re-calculate.
*C33421 cm 05/28/1999 * Status Line not clearing after copy
*T25979 lanny 07/11/2001 * Copy component function not replacing data
*                          that exists on orig est but not on "from"
*                          estimate.
*T26020 cmykleb 04/29/2002 * Add field(s) to combine components
*                            together for Primac Scheduling.
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.DIV
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
*---- OPEN ALL FILES
*
   OPEN "","ESTIMATE.DEPT" TO FESTIMATE.DEPT ELSE
      ERRMSG = "CANNOT LOCATE ESTIMATE.DEPT FILE"
      GOSUB 90000
      RETURN
   END
   OPEN "","ESTIMATE.WORK" TO ESTIMATE.WORK ELSE
      ERRMSG = "CANNOT LOCATE ESTIMATE.WORK FILE"
      GOSUB 90000
      RETURN
   END
   OPEN "","XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "CANNOT LOCATE XREF.DATA FILE"
      GOSUB 90000
      RETURN
   END
   OPEN "","JES.SCREENS" TO JES.SCREENS ELSE
      ERRMSG = "CANNOT LOCATE JES.SCREENS FILE"
      GOSUB 90000
      RETURN
   END
*
*---- INITIALIZATION
*
*      PORTNO = SYSTEM(18)
   PORTNO="TTY"; CALL SYSVARS.SUB(PORTNO)
   SCREEN DEFINE;EST.DEPT.SELECT
   SCREEN COUNT;;12
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   CURR.REF.NO = ""
   CCOPY.FLAG = 0
   NEW.REC = 0
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   IF EST.DEPT = "" THEN
      NEW.REC = 1
      FND = 1
      MATREAD ESTV.REC FROM ESTIMATE.DIV, CONO:EST.DIV ELSE FND = 0
      IF FND THEN
         EST.DEPT = ESTV.DEPT
         EST.DEPT.TYPE = ESTV.DEPT.TYPE
         EST.DEPT.DESC = ESTV.DEPT.DESC
      END ELSE
         MATREAD DIV.REC FROM DIVISION, CONO:FIELD(EST.DIV,"-",1) ELSE MAT DIV.REC = ""
         EST.DEPT = DIV.DEPT
         DEPT.CNT = COUNT(EST.DEPT,VM) + (EST.DEPT # "")
         FOR D = 1 TO DEPT.CNT
            READ DDATA FROM DEPARTMENT, CONO:EST.DEPT<1,D> ELSE DDATA = "??????????"
            EST.DEPT.TYPE<1,D> = DDATA<7>
            EST.DEPT.DESC<1,D> = DDATA<2>
         NEXT D
      END
   END
   DEPT.CNT = COUNT(EST.DEPT,VM) + (EST.DEPT # "")
   ECNT = DCOUNT(EST.QTY,VM)
   IF EST.BASE.QTY = "" THEN EST.BASE.QTY = EST.QTY<1,1>
*
*---- MAIN PROCESSING
*
100 *
   IF ACTION = "M" AND NEW.REC AND EST.COMPONENT.CNT # "" THEN
      DREF = "ALL"
      COMP = "ALL"
      EQTY = EST.QTY<1,1>
      STATUS = ""
      S$SCR = S$SCR + 1
      CALL EST.DEPT.MAINT (CONO, "A", EST.KEY, DREF, COMP, EQTY, STATUS)
      SCREEN CLOSE
      S$SCR = S$SCR - 1
   END
   SCREEN FORMAT
   GOSUB 80000
   CURR.REF.NO = ""
   REF.NO = 1
   GOSUB 70000
   IF ACTION = "M" AND EST.COMPONENT.CNT = "" THEN
      GOSUB 1100
      IF S$VALUE = "END" THEN GOTO 99999
   END
*
*---- GET OPERATOR REPLY
*
500 *
   IF ACTION = "M" THEN
      SCREEN FIELD;;4
      SCREEN INPUT;;4
   END ELSE
      SCREEN FIELD;;7
      SCREEN INPUT;;7
   END
   OPTION = S$VALUE
510 *
   BEGIN CASE
      CASE OPTION = "" OR OPTION = "E" OR OPTION = "END"
         IF CCOPY.FLAG THEN GOSUB 900
         GOTO 99999
      CASE NUM(OPTION) AND OPTION # ""
*T26020 v
*        ON OPTION GOSUB 1100
         ON OPTION GOSUB 1100,1200
*T26020 ^
      CASE OPTION = "A"
         GOSUB 600
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         DREF = S$VALUE
         GOSUB 650
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         COMP = S$VALUE
         EQTY = EST.QTY<1,1>
         IF CCOPY.FLAG THEN GOSUB 900
         STATUS = ""
         S$SCR = S$SCR + 1
         CALL EST.DEPT.MAINT (CONO, "A", EST.KEY, DREF, COMP, EQTY, STATUS)
         SCREEN CLOSE
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 80000
         CURR.REF.NO = ""
         GOSUB 70000
      CASE OPTION = "C"
         S$VALUE = "ALL"
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         IF S$VALUE = "ALL" THEN
            FIRST.DEPT = 1
            LAST.DEPT = DEPT.CNT
         END ELSE
            FIRST.DEPT = S$VALUE
            LAST.DEPT = S$VALUE
         END
         GOSUB 800
      CASE OPTION = "R"
         GOSUB 600
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         DREF = S$VALUE
         GOSUB 650
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         COMP = S$VALUE
         GOSUB 700
         IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
         EQTY = S$VALUE
         IF CCOPY.FLAG THEN GOSUB 900
         STATUS = ""
         S$SCR = S$SCR + 1
         CALL EST.DEPT.MAINT (CONO, ACTION, EST.KEY, DREF, COMP, EQTY, STATUS)
         SCREEN CLOSE
         S$SCR = S$SCR - 1
         SCREEN FORMAT
         GOSUB 80000
         CURR.REF.NO = ""
         GOSUB 70000
      CASE OPTION = "S"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > DEPT.CNT THEN REF.NO = 1
         GOSUB 70000
    * T25978 v
      CASE OPTION = 'SR'
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 70000
      CASE OPTION = 'ST'
         REF.NO = 1
         GOSUB 70000
      CASE OPTION = 'SB'
         REF.NO = DEPT.CNT
         GOSUB 70000
    * T25978 ^
   END CASE
   GOTO 500
*
*---- GET DEPARTMENT SELECTION
*
600 *
   SCREEN FIELD;;5
   SCREEN INPUT;;5;RETURN
   IF S$VALUE # "ALL" AND S$VALUE # "" AND (S$VALUE < 1 OR S$VALUE > DEPT.CNT) THEN
      ERRMSG = "** OUT OF RANGE **"
      GOSUB 90000
      GOTO 600
   END
   RETURN
*
*---- GET COMPONENT SELECTION
*
650 *
   IF EST.COMPONENT.CNT <= 1 THEN
      S$VALUE = "ALL"
   END ELSE
      SCREEN FIELD;;6
      SCREEN INPUT;;6;RETURN
      IF S$VALUE # "ALL" AND S$VALUE # "" AND (S$VALUE < 1 OR S$VALUE > EST.COMPONENT.CNT) THEN
         ERRMSG = "** OUT OF RANGE **"
         GOSUB 90000
         GOTO 650
      END
   END
   RETURN
*
*---- GET ORDER QUANTITY
*
700 *
   EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
   BEGIN CASE
      CASE EC < 2 
         S$VALUE=EST.QTY<1,1>
      CASE 1
         GXR.NAME = 'EST.QTY.SEL'
         GXR.XREF = ESTIMATE.WORK
         GXR.SRCH.ID = EST.KEY
         MATWRITE EST.REC ON ESTIMATE.WORK, CONO:EST.KEY
** GXR.IDLIST = CHANGE(EST.QTY,VM,AM)
*        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         DELETE ESTIMATE.WORK, CONO:EST.KEY
** ERRMSG = 'GXR.ID = (':GXR.ID:')' ; GOSUB 90000
         IF GXR.ID = "" THEN 
*           SCREEN FORMAT;2
*            SCREEN DEFINE;EST.DEPT.SELECT;INSTANT.SCREENS
            SCREEN FORMAT
            GOSUB 80100
            CURR.REF.NO = ""
            GOSUB 70000
            S$VALUE = ''
            RETURN
         END
         S$VALUE = EST.QTY<1,GXR.ID>
*DT            S$VALUE = GXR.ID
   END CASE
   RETURN
*
*---- COPY COMPONENT FROM ANOTHER ESTIMATE
*
800 *
   SCREEN FIELD;;33
   SCREEN INPUT;;33;RETURN
   IF S$VALUE = "" THEN RETURN
   IF S$VALUE = "???" THEN
      PARAM="SELECT";*T21642 PARAM<-1>='TYPE=S'
      WRITE PARAM ON CONTROL,"EST.XREF.":PORTNO
      EXECUTE "EST.XREF"
      READ FEST FROM CONTROL,"EST.XREF.":PORTNO ELSE FEST=""
      DELETE CONTROL,"EST.XREF.":PORTNO
      FCOMP = ""
**       S$SCR = S$SCR+1
**       CALL EST.STD.XREF(CONO,EST.CATG,FEST,FCOMP)
**       S$SCR = S$SCR-1
*        SCREEN FORMAT;2
*         SCREEN DEFINE;EST.DEPT.SELECT;INSTANT.SCREENS
      SCREEN FORMAT
      GOSUB 80100
      CURR.REF.NO = ""
      GOSUB 70000
      IF FEST = "" THEN RETURN
   END ELSE
      FEST = S$VALUE
      FCOMP = ""
   END
   IF FEST = EST.KEY THEN
      ERRMSG = "Cannot copy from current estimate. Try again! "
      GOSUB 90000
      GOTO 800
   END
   READ EREC FROM ESTIMATE, CONO:FEST ELSE
      ERRMSG = "Cannot locate estimate. Try again! "
      GOSUB 90000
      GOTO 800
   END
*T21958 v
   IF EREC<15> # EST.DIV THEN
      ERRMSG = 'Copied estimate must have same DIVISION path. Try again! '
      GOSUB 90000
      GOTO 800
   END
*T21958 ^
820 *
   BEGIN CASE
      CASE EREC<51> = 1
         FCOMP = 1
      CASE FCOMP = ""
         SCREEN FIELD;;34
         SCREEN INPUT;;34;RETURN
         BEGIN CASE
            CASE S$VALUE = ""
               RETURN
            CASE S$VALUE = "???"
               S$SCR = S$SCR + 1
               STATUS = ""
               CALL EST.COMP.XREF (CONO, "M", FEST, EREC<32>, EREC<69>, STATUS)
               SCREEN CLOSE
               S$SCR = S$SCR - 1
*           SCREEN FORMAT;2
*            SCREEN DEFINE;EST.DEPT.SELECT;INSTANT.SCREENS
               SCREEN FORMAT
               GOSUB 80100
               CURR.REF.NO = ""
               GOSUB 70000
               IF STATUS = "" THEN RETURN
               S$VALUE = STATUS
            CASE NOT(NUM(S$VALUE)) OR S$VALUE < 1 OR S$VALUE > EREC<51>
               ERRMSG = 'Invalid Reply. Enter component # or "???" '
               GOSUB 90000
               GOTO 820
         END CASE
         FCOMP = S$VALUE
   END CASE
*
   CCNT = DCOUNT(EST.PROD.DESC,VM)
   IF CCNT = 0 THEN
      TCOMP = 1
   END ELSE
      SCREEN FIELD;;32
      S$MINV = 1
      S$MAXV = CCNT + 1
      IF S$MAXV > 16 THEN S$MAXV = 16
      S$O.R = "O"
      S$DEFAULT = S$MAXV
      SCREEN INPUT;;32;RETURN
      IF S$VALUE = "" THEN RETURN
      TCOMP = S$VALUE
   END
   IF TCOMP > CCNT THEN
      MODE = "A"
   END ELSE
      MODE = "C"
      SCREEN FIELD;;35
      SCREEN INPUT;;35
      IF S$VALUE # "Y" THEN GOTO 500
   END
*
   AC = COUNT(EST.A9A,",") + (EST.A9A # "")
   FOR AP = 1 TO AC
      AA = FIELD(EST.A9A,",",AP)
      AA1 = FIELD(AA,"-",1)
      AA2 = FIELD(AA,"-",2)
      IF AA2="" THEN AA2=AA1
      FOR AAP = AA1 TO AA2
         EST.REC(AAP)<1,TCOMP> = EREC<AAP,FCOMP>
      NEXT AAP
   NEXT AP
   EST.COMPONENT.CNT = DCOUNT(EST.PROD.DESC,VM)
*
   CALL EST.CALC.STK (CONO,"")
*
*T25979 v
   FOR DPTR = FIRST.DEPT TO LAST.DEPT
      FOR CC = 1 TO DCOUNT(EST.QTY<1>,VM)
         TESTD.ID = DPTR:"!":TCOMP:"!":EST.QTY<1,CC>
         LOCATE TESTD.ID IN EST.DEPT.COMP<1>,1 SETTING P THEN
            DEL EST.DEPT.COMP<1,P>
            DEL EST.DEPT.COMP.VCOST<1,P>
            DEL EST.DEPT.COMP.HRS<1,P>
            DEL EST.DEPT.COMP.DCOST<1,P>
            DEL EST.DEPT.COMP.COST<1,P>
            DEL EST.DEPT.COMP.SALE<1,P>
            DEL EST.DEPT.COMP.TSALE<1,P>
            DEL EST.DEPT.COMP.VSALE<1,P>
            DELETE ESTIMATE.DEPT, CONO:EST.KEY:"!":TESTD.ID
         END
      NEXT CC
      EST.COMP.FLAG<1,DPTR,TCOMP> = ''
   NEXT DPTR
*T25979 ^
   FOR DPTR = FIRST.DEPT TO LAST.DEPT
      FFND = 1
      FESTD.ID = DPTR:"!":FCOMP:"!":EREC<42>
      READ DREC FROM FESTIMATE.DEPT, CONO:FEST:"!":FESTD.ID ELSE FFND = 0
      TESTD.ID = DPTR:"!":TCOMP:"!":EST.QTY<1,1>  ;*T25979
      IF FFND THEN
         P_X  = 3 ; P_Y = 23 ; P_VALUE = "Processing department ":EST.DEPT<1,DPTR>:" - ":EST.DEPT.DESC<1,DPTR> ; P_OPT = "CL"
         CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF MODE = "C" THEN
            CALL EST.OSP.UPD(CONO,"P",DPTR,TCOMP,EST.QTY<1,1>,"")
         END
*T25979     TESTD.ID = DPTR:"!":TCOMP:"!":EST.QTY<1,1>
         WRITE DREC ON ESTIMATE.DEPT, CONO:EST.KEY:"!":TESTD.ID
         CCOPY.FLAG = 1
         LOCATE TESTD.ID IN EST.DEPT.COMP<1>,1 SETTING P ELSE
            EST.DEPT.COMP<1,P> = TESTD.ID
            EST.COMP.FLAG<1,DPTR,TCOMP> = "Y"
         END
      END
   NEXT DPTR
   GOSUB 80000
   CURR.REF.NO = ""
   GOSUB 70000
* C33421 v
   P_X = 3 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* C33421 ^
   RETURN
*
*---- RECALCULATE ESTIMATE
*
900 *
   SCREEN FIELD;;36
   SCREEN INPUT;;36;RETURN
   IF S$VALUE = "Y" THEN
* T22947 v Prompt for estimate or cost center standards
      SCREEN FIELD;;8
      SCREEN INPUT;;8
      IF S$VALUE="" OR S$VALUE="END" THEN GO 500
      CALL EST.CALC.STK(CONO,"")
      OPT2=S$VALUE
* T22947 ^
      DCCNT=DCOUNT(EST.DEPT.COMP,VM)
      FOR DCPTR=1 TO DCCNT
         RESTD.ID=EST.DEPT.COMP<1,DCPTR>
         RDPTR=FIELD(RESTD.ID,"!",1)
         RCPTR=FIELD(RESTD.ID,"!",2)
         REQTY=FIELD(RESTD.ID,"!",3)
* T22947 v Change second argument to be what was selected - estimate or
*          cost center standards.
*           CALL EST.QTY.CALC (CONO,"A",EST.KEY,RDPTR,RCPTR,REQTY)
         CALL EST.QTY.CALC (CONO,OPT2,EST.KEY,RDPTR,RCPTR,REQTY)
* T22947 ^
      NEXT DCPTR
      CCOPY.FLAG = 0
      EST.RECALC.FLAG=""
   END
   RETURN
*
*---- GET COMPONENT COUNT
*
1100 *
   SCREEN FIELD;;3
   SCREEN INPUT;;3;RETURN
   EST.COMPONENT.CNT = S$VALUE
   RETURN
*T26020 v
*
*---- COMBINE COMPONENTS
*
1200 *
1201 *
   FNO = 1
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;45
   SCREEN INPUT;;45;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1201
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1202 *
   FNO = 2
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;46
   SCREEN INPUT;;46;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1202
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1203 *
   FNO = 3
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;47
   SCREEN INPUT;;47;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1203
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1204 *
   FNO = 4
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;48
   SCREEN INPUT;;48;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1204
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1205 *
   FNO = 5
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;49
   SCREEN INPUT;;49;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1205
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1206 *
   FNO = 6
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;50
   SCREEN INPUT;;50;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1206
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1207 *
   FNO = 7
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;51
   SCREEN INPUT;;51;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1207
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1208 *
   FNO = 8
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;52
   SCREEN INPUT;;52;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1208
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1209 *
   FNO = 9
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;53
   SCREEN INPUT;;53;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1209
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1210 *
   FNO = 10
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;54
   SCREEN INPUT;;54;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1210
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1211 *
   FNO = 11
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;55
   SCREEN INPUT;;55;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1211
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1212 *
   FNO = 12
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;56
   SCREEN INPUT;;56;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1212
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1213 *
   FNO = 1
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;57
   SCREEN INPUT;;57;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1213
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1214 *
   FNO = 14
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;58
   SCREEN INPUT;;58;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1214
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1215 *
   FNO = 15
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;59
   SCREEN INPUT;;59;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1215
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
1216 *
   FNO = 16
   IF EST.COMPONENT.CNT LT FNO THEN RETURN
   SCREEN FIELD;;60
   SCREEN INPUT;;60;RETURN
   GOSUB 1250
   IF ERRMSG # "" THEN GOTO 1216
   EST.PROD.COMP.COMBINE<1,FNO> = S$VALUE
   RETURN
1250 *
   ERRMSG = ""
   BEGIN CASE
      CASE S$VALUE GT EST.COMPONENT.CNT
         ERRMSG = "Combine component cannot be larger than the # of components."
         GOSUB 90000
         RETURN
      CASE S$VALUE = FNO
         ERRMSG = "You cannot combine a component to itself."
         GOSUB 90000
         RETURN
      CASE S$VALUE # "" AND EST.PROD.COMP.COMBINE<1,S$VALUE> # ""
         ERRMSG = "Component ":S$VALUE:" already has other components combined to it."
         GOSUB 90000
         RETURN
   END CASE
   RETURN
*T26020 ^
*
*---- GET MULTI-LINE DATA
*
5000 *
   S$VAL = REF.NO
   SCREEN DISPLAY;;11
*---- GET DEPARTMENT-COMPONENT FLAG
   S$VAL = REF.NO
   BEGIN CASE
      CASE COMP = 1
         SCREEN FIELD;;14
         SCREEN INPUT;;14;RETURN
         EST.COMP.FLAG<1,REF.NO,1> = S$VALUE
      CASE COMP = 2
         SCREEN FIELD;;15
         SCREEN INPUT;;15;RETURN
         EST.COMP.FLAG<1,REF.NO,2> = S$VALUE
      CASE COMP = 3
         SCREEN FIELD;;16
         SCREEN INPUT;;16;RETURN
         EST.COMP.FLAG<1,REF.NO,3> = S$VALUE
      CASE COMP = 4
         SCREEN FIELD;;17
         SCREEN INPUT;;17;RETURN
         EST.COMP.FLAG<1,REF.NO,4> = S$VALUE
      CASE COMP = 5
         SCREEN FIELD;;18
         SCREEN INPUT;;18;RETURN
         EST.COMP.FLAG<1,REF.NO,5> = S$VALUE
      CASE COMP = 6
         SCREEN FIELD;;19
         SCREEN INPUT;;19;RETURN
         EST.COMP.FLAG<1,REF.NO,6> = S$VALUE
      CASE COMP = 7
         SCREEN FIELD;;20
         SCREEN INPUT;;20;RETURN
         EST.COMP.FLAG<1,REF.NO,7> = S$VALUE
      CASE COMP = 8
         SCREEN FIELD;;21
         SCREEN INPUT;;21;RETURN
         EST.COMP.FLAG<1,REF.NO,8> = S$VALUE
      CASE COMP = 9
         SCREEN FIELD;;22
         SCREEN INPUT;;22;RETURN
         EST.COMP.FLAG<1,REF.NO,9> = S$VALUE
      CASE COMP = 10
         SCREEN FIELD;;23
         SCREEN INPUT;;23;RETURN
         EST.COMP.FLAG<1,REF.NO,10> = S$VALUE
      CASE COMP = 11
         SCREEN FIELD;;24
         SCREEN INPUT;;24;RETURN
         EST.COMP.FLAG<1,REF.NO,11> = S$VALUE
      CASE COMP = 12
         SCREEN FIELD;;25
         SCREEN INPUT;;25;RETURN
         EST.COMP.FLAG<1,REF.NO,12> = S$VALUE
      CASE COMP = 13
         SCREEN FIELD;;26
         SCREEN INPUT;;26;RETURN
         EST.COMP.FLAG<1,REF.NO,13> = S$VALUE
      CASE COMP = 14
         SCREEN FIELD;;27
         SCREEN INPUT;;27;RETURN
         EST.COMP.FLAG<1,REF.NO,14> = S$VALUE
      CASE COMP = 15
         SCREEN FIELD;;28
         SCREEN INPUT;;28;RETURN
         EST.COMP.FLAG<1,REF.NO,15> = S$VALUE
      CASE COMP = 16
         SCREEN FIELD;;29
         SCREEN INPUT;;29;RETURN
         EST.COMP.FLAG<1,REF.NO,16> = S$VALUE
   END CASE
   RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
70000 *
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = COUNT(S$DATA(12)<S$SCR>,VM) + (S$DATA(12)<S$SCR> # "")
   SCREEN MULTI;;C;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29
   RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
   S$DATA(1)<S$SCR> = EST.KEY
   S$DATA(2)<S$SCR> = EST.CUST.NAME
   S$DATA(3)<S$SCR> = EST.COMPONENT.CNT
   S$DATA(12)<S$SCR> = EST.DEPT
   S$DATA(13)<S$SCR> = EST.DEPT.DESC
   FOR D = 1 TO DEPT.CNT
      S$DATA(14)<S$SCR,D> = EST.COMP.FLAG<1,D,1>
      S$DATA(15)<S$SCR,D> = EST.COMP.FLAG<1,D,2>
      S$DATA(16)<S$SCR,D> = EST.COMP.FLAG<1,D,3>
      S$DATA(17)<S$SCR,D> = EST.COMP.FLAG<1,D,4>
      S$DATA(18)<S$SCR,D> = EST.COMP.FLAG<1,D,5>
      S$DATA(19)<S$SCR,D> = EST.COMP.FLAG<1,D,6>
      S$DATA(20)<S$SCR,D> = EST.COMP.FLAG<1,D,7>
      S$DATA(21)<S$SCR,D> = EST.COMP.FLAG<1,D,8>
      S$DATA(22)<S$SCR,D> = EST.COMP.FLAG<1,D,9>
      S$DATA(23)<S$SCR,D> = EST.COMP.FLAG<1,D,10>
      S$DATA(24)<S$SCR,D> = EST.COMP.FLAG<1,D,11>
      S$DATA(25)<S$SCR,D> = EST.COMP.FLAG<1,D,12>
      S$DATA(26)<S$SCR,D> = EST.COMP.FLAG<1,D,13>
      S$DATA(27)<S$SCR,D> = EST.COMP.FLAG<1,D,14>
      S$DATA(28)<S$SCR,D> = EST.COMP.FLAG<1,D,15>
      S$DATA(29)<S$SCR,D> = EST.COMP.FLAG<1,D,16>
   NEXT D
*T26020 v
   S$DATA(45)<S$SCR> = EST.PROD.COMP.COMBINE<1,1>
   S$DATA(46)<S$SCR> = EST.PROD.COMP.COMBINE<1,2>
   S$DATA(47)<S$SCR> = EST.PROD.COMP.COMBINE<1,3>
   S$DATA(48)<S$SCR> = EST.PROD.COMP.COMBINE<1,4>
   S$DATA(49)<S$SCR> = EST.PROD.COMP.COMBINE<1,5>
   S$DATA(50)<S$SCR> = EST.PROD.COMP.COMBINE<1,6>
   S$DATA(51)<S$SCR> = EST.PROD.COMP.COMBINE<1,7>
   S$DATA(52)<S$SCR> = EST.PROD.COMP.COMBINE<1,8>
   S$DATA(53)<S$SCR> = EST.PROD.COMP.COMBINE<1,9>
   S$DATA(54)<S$SCR> = EST.PROD.COMP.COMBINE<1,10>
   S$DATA(55)<S$SCR> = EST.PROD.COMP.COMBINE<1,11>
   S$DATA(56)<S$SCR> = EST.PROD.COMP.COMBINE<1,12>
   S$DATA(57)<S$SCR> = EST.PROD.COMP.COMBINE<1,13>
   S$DATA(58)<S$SCR> = EST.PROD.COMP.COMBINE<1,14>
   S$DATA(59)<S$SCR> = EST.PROD.COMP.COMBINE<1,15>
   S$DATA(60)<S$SCR> = EST.PROD.COMP.COMBINE<1,16>
*T26020 ^
80100 *
   SCREEN DISPLAY;;ALL
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999 *
   SCREEN CLEAR
   SCREEN CLOSE
   RETURN
END
