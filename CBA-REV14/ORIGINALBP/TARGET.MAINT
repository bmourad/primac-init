*********************************************************************
*
* PROGRAM  - TARGET.MAINT
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 07/25/86
*
* DESCRIPTION
*
* This program is used to define the format for the shop-floor data
* collection bar-coded templates.
*
*T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/27/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>TARGET
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
  EQU ESC TO CHAR(27)
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = "CANNOT OPEN COST.CNTR FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","OPERATION" TO OPERATION ELSE
    ERRMSG = "CANNOT OPEN OPERATION FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","TARGET" TO TARGET ELSE
    ERRMSG = "CANNOT OPEN TARGET FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JCS.SCREENS FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;TARGET.MAINT
  SCREEN FORMAT
  SCREEN COUNT;TARGET.MAINT;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  SCREEN CLEAR;TARGET.MAINT
  RELEASE
110 *
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;TARGET.MAINT;1
  SCREEN FIELD;TARGET.MAINT;2
  SCREEN INPUT;TARGET.MAINT;2
  IF S$VALUE = "END" THEN GOTO 99999
  TARG.KEY = S$VALUE
  NEW.REC = 0
  * T26126 v
  MATREADU TARG.REC FROM TARGET, CONO:TARG.KEY LOCKED
    ERRMSG = 'TARGET record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 90000;GOTO 110 
  END ELSE
  * T26126 ^
    MAT TARG.REC = ""
    NEW.REC = 1
  END
  MATREAD CCTR.REC FROM COST.CNTR, CONO:FIELD(TARG.KEY,"-",1) ELSE
    MAT CCTR.REC = ""
  END
  IF NEW.REC THEN
    GOSUB 1100
    IF S$VALUE = "END" THEN GOTO 100
    LINE.CNT = 10
    OPT = "A"
    CPTR = "A"
    RPTR = "A"
    REF.NO = 1
    CURR.REF.NO = ""
    GOTO 510
  END ELSE
    GOSUB 80000
    REF.NO = 1
    LINE.CNT = 10
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  SCREEN FIELD;TARGET.MAINT;21
  SCREEN INPUT;TARGET.MAINT;21
  OPT = S$VALUE
510 *
  BEGIN CASE
    CASE NUM(OPT) AND OPT # ""
      GOSUB 1100
    CASE OPT = "A" OR OPT = "C"
      MODE = "C"
      IF OPT = "C" THEN
        GOSUB 30000
        IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
      END
      IF CPTR = "A" OR CPTR = "ALL" THEN
        CPTR1 = 1
        CPTR2 = 3
      END ELSE
        CPTR1 = CPTR
        CPTR2 = CPTR
      END
      IF RPTR = "A" OR RPTR = "ALL" THEN
        RPTR1 = 1
        RPTR2 = 10
      END ELSE
        RPTR1 = RPTR
        RPTR2 = RPTR
      END
      CDONE = 0
      FOR COL.NO = CPTR1 TO CPTR2 UNTIL CDONE
        FOR REF.NO = RPTR1 TO RPTR2 UNTIL CDONE
          GOSUB 50000
          GOSUB 10000
          IF S$VALUE = "END" THEN
            CDONE = 1
            GOSUB 80100
            CURR.REF.NO = ""
            GOSUB 50000
          END
        NEXT REF.NO
      NEXT COL.NO
    CASE OPT = "I"
      MODE = "I"
      GOSUB 30000
      IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
      REF.NO = RPTR
      COL.NO = CPTR
      GOSUB 700
      CURR.REF.NO = ""
      GOSUB 50000
      GOSUB 10000
      IF S$VALUE = "END" THEN
        GOSUB 600
      END
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "D"
      MODE = "D"
      GOSUB 30000
      IF S$VALUE = "" OR S$VALUE = "END" THEN GOTO 500
      REF.NO = RPTR
      COL.NO = CPTR
      GOSUB 600
      IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "S"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    * T25978 v
    CASE OPT = 'SR'
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = 'ST'
      REF.NO = 1
      GOSUB 50000
    CASE OPT = 'SB'
      REF.NO = LINE.CNT
      GOSUB 50000
    * T25978 ^
    CASE OPT = "P"
      GOSUB 70000
      IF SERR THEN GOTO 500
      SCREEN FIELD;TARGET.MAINT;27
      SCREEN INPUT;TARGET.MAINT;27
      IF S$VALUE = "END" THEN GOTO 500
      PRTYPE = S$VALUE
      SCREEN FIELD;TARGET.MAINT;28
      SCREEN INPUT;TARGET.MAINT;28
      IF S$VALUE = 'END' THEN GOTO 500
      CMD = 'SETPTR 0,256,59,0,0,1,DEST ':S$VALUE:',BRIEF'
      UDTEXECUTE CMD CAPTURING JUNK
      SCREEN FIELD;TARGET.MAINT;24
      SCREEN INPUT;TARGET.MAINT;24
      IF S$VALUE = "END" THEN GOTO 500
      INTERPRET = S$VALUE
      SCREEN FIELD;TARGET.MAINT;25
      SCREEN INPUT;TARGET.MAINT;25
      IF S$VALUE = "END" THEN GOTO 500
      COPIES = S$VALUE
      BEGIN CASE
        CASE PRTYPE = "GM"
        CASE PRTYPE = "GL"
        CASE PRTYPE = "KL"
        CASE PRTYPE = "HP"
          PRINTER ON
          RESET = ESC:"E":ESC:"&l0O"
          PRINT RESET
          PRINTER OFF
      END CASE
      FOR CPY = 1 TO COPIES
        BEGIN CASE
          CASE PRTYPE = "GM"
            CALL TARGET.PRINT.SUB (CONO, TARG.KEY, MAT TARG.REC, INTERPRET)
          CASE PRTYPE = "GL"
            CALL GENLASER.PRINT.SUB (CONO, TARG.KEY, MAT TARG.REC, INTERPRET)
          CASE PRTYPE = "KL"
            CALL KYOCERA.PRINT.SUB (CONO, TARG.KEY, MAT TARG.REC, INTERPRET)
          CASE PRTYPE = "HP"
            CALL HP.PRINT.SUB (CONO, TARG.KEY, MAT TARG.REC, INTERPRET)
        END CASE
      NEXT CPY
      PRINTER CLOSE
      SCREEN FORMAT
      SCREEN DISPLAY;TARGET.MAINT;ALL
      CURR.REF.NO = ""
      GOSUB 50000
      ERRMSG = "** COMPLETED **  Press <RETURN> to continue:"
      GOSUB 90000
    CASE OPT = "E" OR OPT = "END"
      GOTO 100
    CASE OPT = "F"
      GOSUB 70000
      IF NOT(SERR) THEN
        MATWRITE TARG.REC ON TARGET,CONO:TARG.KEY
        GOTO 100
      END
  END CASE
  GOTO 500
*
*---- DELETE MULTI-LINE DATA
*
600 *
  TARG.DEF = DELETE(TARG.DEF,1,COL.NO,REF.NO)
  TARG.DSC = DELETE(TARG.DSC,1,COL.NO,REF.NO)
  GOSUB 80100
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
700 *
  TARG.DEF = INSERT(TARG.DEF,1,COL.NO,REF.NO,"")
  TARG.DSC = INSERT(TARG.DSC,1,COL.NO,REF.NO,"")
  GOSUB 80100
  RETURN
*
*---- GET TARGET NAME
*
1100 *
  SCREEN FIELD;TARGET.MAINT;3
  IF NEW.REC AND CCTR.DESC # "" THEN
    S$O.R = "O"
    S$DEFAULT = CCTR.DESC
  END
  SCREEN INPUT;TARGET.MAINT;3;RETURN
  TARG.NAME = S$VALUE
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
  S$VAL = REF.NO
  SCREEN DISPLAY;TARGET.MAINT;11
10100 *
  PDEFS = TARG.DEF<1,COL.NO,REF.NO>
  PDSCS = TARG.DSC<1,COL.NO,REF.NO>
  S$VAL = REF.NO
  BEGIN CASE
    CASE COL.NO = 1
      SCREEN FIELD;TARGET.MAINT;12
      SCREEN INPUT;TARGET.MAINT;12;RETURN
    CASE COL.NO = 2
      SCREEN FIELD;TARGET.MAINT;14
      SCREEN INPUT;TARGET.MAINT;14;RETURN
    CASE COL.NO = 3
      SCREEN FIELD;TARGET.MAINT;16
      SCREEN INPUT;TARGET.MAINT;16;RETURN
  END CASE
  DEFS = S$VALUE
  DCNT = COUNT(DEFS,"\") + 1
  FOR PTR = 1 TO DCNT
    DEF = TRIM(FIELD(DEFS,"\",PTR))
    PDEF = TRIM(FIELD(PDEFS,"\",PTR))
    PFX = DEF[1,1]
    DSC = TRIM(FIELD(PDSCS,"\",PTR))
    BEGIN CASE
      CASE DEF = PDEF
      CASE DEF = ""
      CASE PFX = "F"
      CASE DEF = "1"
        DSC = "SIGN-ON"
      CASE DEF = "3"
        DSC = "MATERIAL"
      CASE DEF = "4"
        DSC = "LUNCH"
      CASE DEF = "5"
        DSC = "IDLE"
      CASE DEF = "6"
        GOSUB 60000
        IF CCTR = "" THEN GOTO 10100
        DSC = "CONCURRENT"
      CASE DEF = "7"
        DSC = "SIGN-OFF"
      CASE PFX = "C" AND PTR = 1
        CCTR = DEF[2,99]
        MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
          ERRMSG = "Invalid cost center. Try again! "
          GOSUB 90000
          GOTO 10100
        END
        DSC = CCTR.DESC
      CASE (PFX = "2" OR PFX = "8") AND PTR = 1
        GOSUB 60000
        IF CCTR = "" THEN GOTO 10100
        OPER = DEF[2,99]
        LOCATE OPER IN CCTR.OPER<1>,1 SETTING FND ELSE
          ERRMSG = "Invalid operation for specified cost center. Try again! "
          GOSUB 90000
          GOTO 10100
        END
        MATREAD OPER.REC FROM OPERATION, CONO:OPER ELSE
          ERRMSG = "Invalid operation code. Try again! "
          GOSUB 90000
          GOTO 10100
        END
        DSC = OPER.DESC
      CASE 1
        ERRMSG = "Invalid entry. Try again! "
        GOSUB 90000
        GOTO 10100
    END CASE
    IF PTR > 1 AND DSC # "" THEN
      DSCS = DSCS:"\":DSC
    END ELSE
      DSCS = DSC
    END
  NEXT PTR
10200 *
  S$VAL = REF.NO
  BEGIN CASE
    CASE COL.NO = 1
      S$DATA(13)<S$SCR,REF.NO> = DSCS
      SCREEN FIELD;TARGET.MAINT;13
      SCREEN INPUT;TARGET.MAINT;13;RETURN
    CASE COL.NO = 2
      S$DATA(15)<S$SCR,REF.NO> = DSCS
      SCREEN FIELD;TARGET.MAINT;15
      SCREEN INPUT;TARGET.MAINT;15;RETURN
    CASE COL.NO = 3
      S$DATA(17)<S$SCR,REF.NO> = DSCS
      SCREEN FIELD;TARGET.MAINT;17
      SCREEN INPUT;TARGET.MAINT;17;RETURN
  END CASE
  DSCS = S$VALUE
  TARG.DEF<1,COL.NO,REF.NO> = DEFS
  TARG.DSC<1,COL.NO,REF.NO> = DSCS
  RETURN
*
*---- GET COLUMN NUMBER
*
30000 *
  SCREEN FIELD;TARGET.MAINT;23
  SCREEN INPUT;TARGET.MAINT;23;RETURN
  IF S$VALUE = "" THEN RETURN
  CPTR = S$VALUE
*
*---- GET LINE NUMBER
*
35000 *
  IF MODE = "D" OR MODE = "I" THEN
    SCREEN FIELD;TARGET.MAINT;26
    SCREEN INPUT;TARGET.MAINT;26;RETURN
  END ELSE
    SCREEN FIELD;TARGET.MAINT;22
    SCREEN INPUT;TARGET.MAINT;22;RETURN
  END
  IF S$VALUE = "" THEN RETURN
  RPTR = S$VALUE
  RETURN
*
*---- DISPLAY MULTI-LINE DATA
*
50000 *
  START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = 10
  SCREEN MULTI;TARGET.MAINT;C;11;12;13;14;15;16;17
  RETURN
*
*---- GET PREVIOUS COST CENTER
*
60000 *
  CCTR = FIELD(TARG.KEY,"-",1)
  SDONE = 0
  FOR CP = COL.NO TO 1 STEP -1 UNTIL SDONE
    FOR RP = 10 TO 1 STEP -1 UNTIL SDONE
      IF CP < COL.NO OR RP < REF.NO THEN
        SDEF = TARG.DEF<1,CP,RP>
        SPFX = SDEF[1,1]
        IF SPFX = "C" THEN
          CCTR = SDEF[2,3]
          SDONE = 1
        END
      END
    NEXT RP
  NEXT CP
  MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
    MAT CCTR.REC = ""
    CCTR = ""
    ERRMSG = "Cannot determine cost center. Try again! "
    GOSUB 90000
  END
  RETURN
*
*---- CHECK COST CENTER / OPERATION MISMATCH
*
70000 *
  CCTR = FIELD(TARG.KEY,"-",1)
  MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
    MAT CCTR.REC = ""
    CCTR = ""
  END
  SDONE = 0
  SERR = 0
  FOR CP = 1 TO 3 UNTIL SDONE
    FOR RP = 1 TO 10 UNTIL SDONE
      SDEF = TARG.DEF<1,CP,RP>
      SPFX = SDEF[1,1]
      BEGIN CASE
        CASE SPFX = "C"
          CCTR = SDEF[2,3]
          MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
            MAT CCTR.REC = ""
          END
        CASE SPFX = "2" OR SPFX = "8"
          OPER = SDEF[2,4]
          LOCATE OPER IN CCTR.OPER<1>,1 SETTING FND ELSE
            ERRMSG = "Invalid operation for specified cost center in column ":CP:", row ":RP
            GOSUB 90000
            SERR = 1
          END
      END CASE
    NEXT RP
  NEXT CP
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(1)<S$SCR> = DATE()
  S$DATA(2)<S$SCR> = TARG.KEY
  S$DATA(3)<S$SCR> = TARG.NAME
  SCREEN DISPLAY;TARGET.MAINT;ALL
80100 *
  S$DATA(12)<S$SCR> = ""
  S$DATA(13)<S$SCR> = ""
  S$DATA(14)<S$SCR> = ""
  S$DATA(15)<S$SCR> = ""
  S$DATA(16)<S$SCR> = ""
  S$DATA(17)<S$SCR> = ""
  FOR RP = 1 TO 10
    S$DATA(12)<S$SCR,RP> = TARG.DEF<1,1,RP>
    S$DATA(13)<S$SCR,RP> = TARG.DSC<1,1,RP>
    S$DATA(14)<S$SCR,RP> = TARG.DEF<1,2,RP>
    S$DATA(15)<S$SCR,RP> = TARG.DSC<1,2,RP>
    S$DATA(16)<S$SCR,RP> = TARG.DEF<1,3,RP>
    S$DATA(17)<S$SCR,RP> = TARG.DSC<1,3,RP>
  NEXT RP
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):CL:
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
  PRINT @(-1)
END
