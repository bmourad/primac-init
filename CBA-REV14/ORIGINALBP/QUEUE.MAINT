*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [08.0]
* Copyright 1993 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - PMCBP
* PROGRAM      - QUEUE.MAINT
* BY           - DUANE GREEN, COMPUTER BUSINESS ASSOCIATES
* DATE         - 10/24/95
* DESCRIPTION  - 
*                This program is used to manage the unix queue system
*                from withing the PRIMAC application.
*T25448 gat 12/07/2000 * FIX PROBLEM WITH FORM SCAPE
*T25978 adelgado 01/30/2002 * Add the use of prompts (SF,SR,SB,ST).
*T28080 thompson 04/21/2004 * Fix numbering on scroll
*ENDDOC
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>PORT.CONTROL
*COPY>PMC.CPYLIB>SECURITY
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
**************
* OPEN FILES *
**************
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'PMC.SCREENS FILE IS MISSING'
    GO 93000
  END
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING'
    GO 93000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GO 93000
  END
  OPEN '','SECURITY' TO SECURITY ELSE
    ERRMSG = 'SECURITY FILE IS MISSING'
    GO 93000
  END
  CALL GET.CONO(CONO,MAT COMP.REC)
**************
* GET SCREEN *
**************
  RSW = 0
  ECD.SCRN.NAME<1> = 'QUEUE.MAINT'
  ECD.SCRN.NAME<2> = 'QJOB.MAINT'
  ECD.SCRN.CNT = 1
  ECD.ACTION = 1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION = 2;CALL SCRN.EDIT
1 *
******************
  ERRMSG = ""
  PQUEUE = ""
  CHKQUE = ''
  QUEUE = ''
  JOB.LIST = ''
  OWN.LIST = ''
  FILE.LIST = ''
  QCNT=1
  PQCNT = 1
  LINE.SPACE = 1
  PAGE.SIZE = 14
  MENU.DEFAULT = ''
  BEGIN.PAGE = 6
  REQUEST = ''
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
*******************
* MAIN PROCESSING *
*******************
100 *
*
110 *
  EXECUTE 'GET.QUEUES' CAPTURING MSG
  MQ = DCOUNT(MSG,AM)
*FOR X=3 TO X+1  UNTIL MSG<X>[15,1]=""
  FOR X = 3 TO MQ 
    IF MSG<X>[15,1] = "" THEN GO 115
    IF MSG<X>[15,1] = "-" THEN GO 115
    IF MSG<X>[1,1] = ' ' THEN GO 115
    NETQ=INDEX(MSG<X>,':',1)
    IF NETQ THEN GO 115
    QUEUE<QCNT> = MSG<X>[1,23]
    QCNT=QCNT+1
    IF MSG<X>[1,1] # " " THEN
      PQUEUE<PQCNT> = MSG<X>[1,23]
      CHKQUE<PQCNT> = FIELD(PQUEUE<PQCNT>," ",1)
      PQCNT = PQCNT + 1
    END
115 *
  NEXT X
  LINES = DCOUNT(QUEUE,AM)
  LN = 1
  GOSUB 11000
  N = N - 1
  IF RSW THEN RETURN
200 *
  ECD.NUM = 10
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      GOTO 99990
    CASE ECD.RET.VALUE = "S"
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 11000
      N = N - 1
      GOTO 200
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 11000
      N = N - 1
      GOTO 200
    * T25978 ^
    CASE ECD.RET.VALUE = ""
      GOTO 200
    CASE NOT(NUM(ECD.RET.VALUE))
      GOTO 200
    CASE ECD.RET.VALUE > N
      GOTO 200
    CASE 1
      SCV.REC(3)<ECD.SCRN.NO> = QUEUE<ECD.RET.VALUE>
      CURR.QUEUE = FIELD(QUEUE<ECD.RET.VALUE>,' ',1)
      ECD.ACTION = 3 ; CALL SCRN.EDIT
  END CASE
*
300 *
  RSW = 0
  ECD.NUM = 12
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'X' OR ECD.RET.VALUE = 'END'
      RSW = 0
      GOTO 1
    CASE ECD.RET.VALUE = 'DEF'
      SEC.ID = CONO:OCONV(@LOGNAME,'MCU')
      MATREAD SEC.REC FROM SECURITY,SEC.ID ELSE
        ERRMSG = 'SECURITY RECORD ':SEC.ID:' IS MISSING'
        GOSUB 92000
        GOTO 300
      END
      SEC.DFLT.QUEUE = FIELD(SCV.REC(3)<ECD.SCRN.NO>,' ',1)
      MATWRITE SEC.REC ON SECURITY,SEC.ID
      GOTO 300
    CASE ECD.RET.VALUE = 'D'
      CMD = '!disable ':SCV.REC(3)<ECD.SCRN.NO>
      HUSH ON
      UDTEXECUTE CMD CAPTURING RET.VALUE
      HUSH OFF
      RSW = 1 ; GOSUB 1 ; GOTO 300
    CASE ECD.RET.VALUE = 'E'
      CMD = '!enable ':SCV.REC(3)<ECD.SCRN.NO>
      HUSH ON
      UDTEXECUTE CMD CAPTURING RET.VALUE
      HUSH OFF
      RSW = 1 ; GOSUB 1 ; GOTO 300
    CASE ECD.RET.VALUE = 'J'
*CSF 25514 v
*         GO 12000
      KILL.FLAG = 0
      GOSUB 12000
      IF KILL.FLAG THEN
        ECD.ACTION = 99 ; CALL SCRN.EDIT
      END
      GOTO 300
*CSF 25514 ^
    CASE 1
      RSW = 0
      GOTO 300
  END CASE
*
11000 *
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF QUEUE<N>[1,1] # " " THEN
*T28080      P_X  = 15 ; P_Y = SLN ; P_VALUE = LCT "R#3" ; P_OPT = ""
      P_X  = 15 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:QUEUE<N>
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LCT = LCT + 1
    END ELSE
*         P_X  = 15 ; P_Y = SLN ; P_VALUE = SPACE(6):QUEUE<N> ; P_OPT = ""
      P_X  = 15 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 15 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999 *
  RETURN
*
12000 *
* CSF 25514 v
  GOSUB 12010
  IF JOB.LIST = "" AND ECD.SCRN.NO = 1 THEN
    ERRMSG='There are no Jobs in this Queue for user ':@LOGNAME
    GOSUB 91000
    RETURN
  END
* CSF 25514 ^
  LINE.SPACE = 1
  PAGE.SIZE = 14
  BEGIN.PAGE = 6
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
  ECD.SCRN.NO = 2
  ECD.ACTION=2;CALL SCRN.EDIT
  KILL.FLAG = 1
  SCV.REC(3)<ECD.SCRN.NO> = CURR.QUEUE
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  REQUEST = ''
  LINES=0;START.LINE=0;OLD.START.LINE=0;LAST.LINE=0
  GOTO 12017
*
12010 
***********
*  CMD = 'GET.QUEUES'
  CMD = "!qchk -P'":CURR.QUEUE:"' -u'":@LOGNAME:"'"
  HUSH ON
  UDTEXECUTE CMD CAPTURING RET.DATA
  HUSH OFF
  DG = DCOUNT(RET.DATA,AM)
  JOB.LIST = '' ; OWN.LIST = '' ; FILE.LIST = ''
  FOR ABC = 1 TO DG
    RET.QUEUE = FIELD(RET.DATA<ABC>,' ',1)
    IF RET.QUEUE = CURR.QUEUE THEN
      JOB.LIST = ''
      OWN.LIST = ''
      FILE.LIST = ''
      FOR BCD = ABC TO DG
        RET.QUEUE = FIELD(RET.DATA<BCD>,' ',1)
*           IF RET.QUEUE = CURR.QUEUE OR RET.QUEUE = '' OR RET.QUEUE = ' ' THEN
        IF RET.DATA<BCD>[15,6] = 'RUNNIN' OR RET.DATA<BCD>[15,6] = 'QUEUED' OR RET.DATA<BCD>[15,4] = 'DOWN' THEN
*           IF RET.DATA<BCD>[15,6] = 'RUNNIN' OR RET.DATA<BCD>[15,6] = 'QUEUED' OR RET.DATA<BCD>[15,4] = 'DOWN' AND RET.DATA<BCD>[25,3] # '' THEN
          JOB.LIST<1,-1> = RET.DATA<BCD>[25,3]
          FILE.LIST<1,-1> = RET.DATA<BCD>[29,17]
          OWN.LIST<1,-1> = RET.DATA<BCD>[48,8]
        END ELSE
          GO 12015
        END
*           END ELSE
*              GO 12017
*           END
      NEXT BCD
    END
12015 *
  NEXT ABC
*CSF 25514 v
  RETURN
*CSF 25514 ^
12017 
***********
  LN = 1
  GOSUB 12020
  N = N - 1
  GOTO 12100
*
12020 *
  LINES = DCOUNT(JOB.LIST,VM)
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN RETURN
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
*T28080    P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R#3'
    P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>'L#17'
    P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'L#8'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
12025 *
    LCT = LCT + 1
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
  RETURN
*
12100 *
  ECD.NUM = 10
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      ECD.SCRN.NO = 1
      ECD.ACTION = 2
      CALL SCRN.EDIT
      GOTO 1
    CASE ECD.RET.VALUE = 'C'
      ACTION = 'CANCEL'
      GOTO 14000 ; * Cancel Job
    CASE ECD.RET.VALUE = 'H' ; * Hold Job
      ACTION = 'HOLD'
      GOTO 14000
    CASE ECD.RET.VALUE = 'M' ; * Move Job
      ACTION = 'MOVE'
      GOTO 14000
    CASE ECD.RET.VALUE = 'S'
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    CASE ECD.RET.VALUE = 'ST'
      LN = 1
      GOSUB 13000
      N = N - 1
      GOTO 12100
    CASE ECD.RET.VALUE = 'SB'
      LN = LINES
      GOSUB 13000
      N = N - 1
      GOTO 12100
    * T25978 ^
    CASE 1
      GOTO 12100
  END CASE
  GOTO 12100
*
13000 *
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 13999
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  IF START.LINE = 1 THEN LCT = START.LINE
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF SEC.MENUS.LIST<1,N> # " " THEN
*T28080      P_X  = 0 ; P_Y = SLN ; P_VALUE = LCT'R#3' ; P_OPT = ""
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N'R#3' ; P_OPT = ""
      P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.LIST<1,N>'R#3'
      P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:FILE.LIST<1,N>'L#17'
      P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OWN.LIST<1,N>'L#8'
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
13025 *
      LCT = LCT + 1
    END 
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
13999 *
  RETURN
*
14000 *
  ECD.NUM = 11 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END' THEN GO 12000
  QID = ECD.RET.VALUE
  JOBNO = TRIM(JOB.LIST<1,QID>)
  FILNM = TRIM(FILE.LIST<1,QID>)
  OWNR = TRIM(OWN.LIST<1,QID>)
  BEGIN CASE
    CASE ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END'
      GO 12000
    CASE ACTION = 'CANCEL'
      GOSUB 15000
      GO 12000
    CASE ACTION = 'HOLD'
      GOSUB 16000
      GO 12000
    CASE ACTION = 'MOVE'
      GOSUB 17000
      GO 12000
    CASE 1
      GO 14000
  END CASE
*
15000 *
  USR = @LOGNAME
  IF USR # OWNR THEN
    ERRMSG = 'Cannot Cancel, Not Your Job'
    GOSUB 91000
    RETURN
  END
  CMD = '!cancel ':JOBNO
  HUSH ON
  UDTEXECUTE CMD CAPTURING JUNK
  HUSH OFF
  DEL JOB.LIST<1,QID>; DEL FILE.LIST<1,QID>; DEL OWN.LIST<1,QID>
  RETURN
*
16000 *
  USR = @LOGNAME
  IF USR # OWNR THEN
    ERRMSG = 'Cannot Hold, Not Your Job'
    GOSUB 91000
    RETURN
  END
  GOSUB 18000
  CMD = '!cp ':QDIRNAME:' /tmp/':USR:DATE():TIME()
  HUSH ON
  UDTEXECUTE CMD CAPTURING JUNK
  HUSH OFF
  ERRMSG = 'Your Hold File Is /tmp/':USR:DATE():TIME()
  GOSUB 91000
  RETURN
*
17000 *
  USR = @LOGNAME
  IF USR # OWNR THEN
    ERRMSG = 'Cannot Move, Not Your Job'
    GOSUB 91000
    RETURN
  END
  GOSUB 18000
  GOSUB 19000
  IF NEWQ = 'END' THEN GO 17000
  CMD = '!cp ':QDIRNAME:' /tmp/':USR
  HUSH ON
  UDTEXECUTE CMD CAPTURING JUNK
  CMD = '!lpr -P':NEWQ:' /tmp/':USR
  UDTEXECUTE CMD CAPTURING JUNK
  HUSH OFF
  DEL JOB.LIST<1,QID>; DEL FILE.LIST<1,QID>; DEL OWN.LIST<1,QID>
  RETURN
*
18000 ; * Locate The qdaemon file
  ZZZ=DCOUNT(JOB.LIST,VM)
  JCTR = 0
  FOR YYY = 1 TO ZZZ
    IF TRIM(JOB.LIST<1,YYY>) = JOBNO THEN
      JCTR += 1
      GOTO 18100
    END ELSE
      IF OWNR = TRIM(OWN.LIST<1,YYY>) THEN
        JCTR += 1
      END
    END
  NEXT YYY
18100 *
  SPVAR=('00':JCTR)'R#2'
  QFNAME = '/var/spool/lpd/qdir/':SPVAR:OWNR:':':CURR.QUEUE
  OSREAD UNIXFILE FROM QFNAME ELSE
    ERRMSG = 'Cant Find Unix Queue File'
    GOSUB 91000
    RETURN
  END
  QDIRNAME = ''
  FOR MM = 1 TO MM + 1
    UNIXREC=FIELD(UNIXFILE,CHAR(010),MM)
    IF UNIXREC = '' THEN GO 18200
    IF UNIXREC[1,4]='/var' THEN
      QDIRNAME = FIELD(UNIXREC,' ',1)
      GOTO 18200
    END
  NEXT MM
18200 *
  IF QDIRNAME = '' THEN
    ERRMSG = 'Cant Find Unix Queue File'
    GOSUB 91000
    RETURN
  END
  RETURN
*
19000*
  ECD.NUM = 12
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'E' OR ECD.RET.VALUE = 'END' THEN
    NEWQ = ''
    RETURN
  END
  NEWQ = ECD.RET.VALUE
  LOCATE NEWQ IN CHKQUE,1 SETTING JUNK ELSE
    ERRMSG = 'Not A Valid Queue'
    GOSUB 91000
    GOTO 19000
  END
  RETURN
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
  GOTO 99999
*
99990 *
  ECD.ACTION = 99 ; CALL SCRN.EDIT
*
99999 *
END
