*************************************************************
* REVISION        - [08.0]
* Copyright 1982  - by C.B.A (Vercom Software, Inc.)
* PROGRAM         - CKPRT
* SOURCE          - APSBP
* BY              - RHONDA PERRIN, C.B.A
* DATE            - 04/01/86
* DESCRIPTION     - This program prints the standard AP Checks.
* 11/21/90 DLG TASK 15652 CORRECT 0$ AMT VOID ALIGNMENT
* 12/10/90 DLG TASK 15686/CSF 14903 ADDED 'MILLION' PRINT
* 02/24/92 DLG TASK 16462
* 10/16/92 JR CSF 18153 CHANGED HOW CHECK.STATS IS UPDATED, IT WAS 
*    USING (-1) TO ADD MULTI-VALUS TO ATTRIBUTES, I CHANGED TO USE A 
*    DCOUNT AND THEN USE THE NEXT MULTI-VALUE AFTER THAT.
* TASK 17622 MWS 1/5/94 ARANDELL SCHMIDT, CHANGE PRINT WIDTH FROM 83
*            CHARACTERS TO 80 .
* 04/27/94 JR CHANGE QUESTION "DID CHECKS PRINT CORRECTLY" TO 
*    ACCEPT ONLY Y OR N.
* T20269 JR ALLOW CHECK RUNS FOR DIFFERENT DIVISIONS TO RUN SIMULTANEOUSLY
* REV11 UPG diane 2/20/97 Remove CHAIN
*T22081 stefanie 09/23/1997 * Add code to check for laser flag and if so
*                             use laser settings.
*T22081 diane 04/14/1998 * Fix spacing at end of Voided check.
*T23444 gat 11/18/1998 * Fix spacing at end of Void check on reg Printer
*T23458 lanny 11/23/1998 * Disallow starting check number prior to
*                          PCS.LST.CHK.NO
*T26357 lross 12/20/2001 * If laser print start VOID should not be
*                          starting check#.
*T26493 cmykleb 04/17/2002 * Change pgm/proc to use REPORT.SCRN.
*T26556 cmykleb 05/21/2002 * Add remit comments to check stub.
*ENDDOC
*************************************************************
   CLEAR
*
*---- FILE EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>GLTABLE
*COPY>APS.CPYLIB>CKP
*COPY>APS.CPYLIB>APCHECK
*COPY>CPYLIB>CHAR
*COPY>PRS.CPYLIB>PRSCHECK.STATS
*
*---- PROCREAD
*
   PROCREAD BUFFER ELSE ERRMSG = "MUST BE RUN FROM PROC PCKPRT";GOTO 93000
   CONO=BUFFER<1>
   MONTH=BUFFER<4>
*T26493 v
*  DIV.OWNER=BUFFER<8>
   DIV.OWNER=BUFFER<6>
   CKDT = BUFFER<4>
   ACCT.NO=BUFFER<5>
   CKNO=BUFFER<8>"R%6"
*T26493 ^
*
*---- DIMENSION VARIABLES
*
   DIM TOT(3),VOID(25),DOL(19),TEN(9),CAP(9)
   DIM CHNO(1)
*
*---- OPEN FILES
*
   OPEN '',"CKP" TO CKP ELSE ERRMSG = "CKP FILE MISSING";GOTO 93000
   OPEN '',"CKR" TO CKR ELSE ERRMSG = "CKR FILE MISSING";GOTO 93000
   OPEN '',"APCHECK" TO APCHECK ELSE ERRMSG = "APCHECK FILE MISSING";GOTO 93000
   OPEN '',"VEND" TO VEND ELSE ERRMSG = "VEND FILE MISSING";GOTO 93000
   OPEN "DICT","CKP" TO  D.CKP ELSE ERRMSG="DICT CKP FILE MISSING";GOTO 93000
   OPEN '',"COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE MISSING";GOTO 93000
   OPEN '',"CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE MISSING";GOTO 93000
   OPEN '',"CHECK.STATS" TO CHECK.STATS ELSE ERRMSG = "CHECK.STATS FILE MISSING";GOTO 93000
*
*---- INITIALIZATION
*
   DOL(1)="ONE"
   DOL(2)="TWO"
   DOL(3)="THREE"
   DOL(4)="FOUR"
   DOL(5)="FIVE"
   DOL(6)="SIX"
   DOL(7)="SEVEN"
   DOL(8)="EIGHT"
   DOL(9)="NINE"
   DOL(10)="TEN"
   DOL(11)="ELEVEN"
   DOL(12)="TWELVE"
   DOL(13)="THIRTEEN"
   DOL(14)="FOURTEEN"
   DOL(15)="FIFTEEN"
   DOL(16)="SIXTEEN"
   DOL(17)="SEVENTEEN"
   DOL(18)="EIGHTEEN"
   DOL(19)="NINETEEN"
   TEN(2)="TWENTY"
   TEN(3)="THIRTY"
   TEN(4)="FORTY"
   TEN(5)="FIFTY"
   TEN(6)="SIXTY"
   TEN(7)="SEVENTY"
   TEN(8)="EIGHTY"
   TEN(9)="NINETY"
   MAT VOID="VOID"
   SP70=STR(" ",70)
   SP65=SP70[1,65]
   SP53=SP70[1,53]
   SP14=SP70[1,14]
   SP10=SP70[1,10]
   SP8=SP70[1,8]
   SP6=SP70[1,6]
   SP4=SP70[1,4]
   SP3=SP70[1,3]
   PROMPT ""
   TOT(1) = 0
   TOT(2) = 0
   TOT(3) = 0
   LN = 0
   HCTR = 0
   EOJ = ""
   VENDOR<1,1> = ""
   CHECK<1,1> = ""
   NUM.ALIGN = 0;REP=""
*T22081 v
   **  This will check the SECURITY file to see if a laser record exists
   **  for this user.  If so, then it will use laser printer logic.
   LASER.FLAG = ''
   IF OCONV(CONO:OCONV(@LOGNAME,'MCU'):'!LASER','TSECURITY;X;0;0') # '' THEN LASER.FLAG = 1
*T22081 ^
*
*---- SETUP COMPANY INFORMATION
*
   MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG="COMPANY MISSING";GOTO 93000
   MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG="GLTABLE MISSING";GOTO 93000
   MAT PCS.REC = ""
   MAT CKP.REC = ""
   IF CO.GLS="Y" THEN OPEN '',"COA" TO COA ELSE ERRMSG="CHART OF ACCOUNTS FILE MISSING";GOTO 93000
*
*---- GET G/L NUMBER AND SETUP PRINT PROCESS
*
   GOSUB 9500
10 *
*T26493 v
*  PRINT @(5,15):"ENTER DISBURSEMENT G/L ACCOUNT NUMBER :  ":;INPUT ACCT.NO
*  IF ACCT.NO="END" THEN PROCWRITE "END"; GOTO 99999
*  IF ACCT.NO="" THEN GOTO 10
*  IF LEN(ACCT.NO) <MINL OR LEN(ACCT.NO) >MAXL THEN GOTO 10
*T26493 ^
   IF LEN(ACCT.NO) <MAXL THEN ACCT.NO=ACCT.NO:STR("0",MAXL-LEN(ACCT.NO))
   MATREAD PCS.REC FROM CHECK.STATS, CONO:ACCT.NO:"!":DIV.OWNER ELSE
      MAT PCS.REC = ''
   END
   IF CO.GLS="Y" THEN
      READV DESC FROM COA,CONO:ACCT.NO,1 ELSE 
         PRINT @(5,16):"INVALID ACCOUNT NUMBER":
*T26493 v
*        INPUT ANSWER:
*        PRINT @(5,16):SP70:
*        GOTO 10
         BUFFER<1> = "END"
         PROCWRITE BUFFER
         GOTO 99999
*T26493 ^
      END
   END
   IF CO.GLS#"Y" THEN DESC=""
*T26493 v
*  PRINT @(46,15):ACCT.NO
*  PRINT @(58,15):DESC"L#20":
*  PRINT @(5,16):"IS THIS WHAT YOU WANT (RET/N) :":;INPUT ANS
*  IF ANS#""  THEN GOTO 10
*T26493 ^
   BANK.NO=ACCT.NO
20 *
*T26493 v
*  PRINT @(5,17):"CHECK PRINT ROUTINE":@(5,18):"ENTER STARTING CHECK NUMBER : ######":STR(CHAR(8),6):;INPUT ANS
*  IF ANS = '/' THEN GOTO 10
*  IF ANS = "" THEN
*     GOTO 20
*  END
*  IF NOT(NUM(ANS)) OR LEN(ANS)>6 THEN GOTO 20
*  CKNO = STR("0",6-LEN(ANS)):ANS
*T26493 ^
*T23458 v
   PCS.LST.MV.NO = DCOUNT(PCS.VOID.DATE,VM)
   IF PCS.LST.CHK.NO > 0 AND CKNO <= PCS.LST.CHK.NO THEN
      IF ICONV(CKDT,'D2/') > ICONV(PCS.VOID.DATE<1,PCS.LST.MV.NO>,'D2/') THEN
         PRINT @(5,12):@(-3):"THIS CHECK ALREADY ON BANK FILE! HIT RET ":;INPUT ANS
*T26493 v
*        PRINT @(5,19):CL:
*        GOTO 20
         BUFFER<1> = "END"
         PROCWRITE BUFFER
         GOTO 99999
*T26493 ^
      END
   END
*T23458 ^
   MATREAD APCK.REC FROM APCHECK,CONO:BANK.NO:CKNO ELSE GOTO 25
   PRINT @(5,12):@(-3):"THIS CHECK ALREADY ON BANK FILE! HIT RET ":;INPUT ANS
*T26493 v
*  PRINT @(5,19):CL:
*  GOTO 20
   BUFFER<1> = "END"
   PROCWRITE BUFFER
   GOTO 99999
*T26493 ^
25*
   PRINT @(5,12):"CHECK PRINT NOW IN PROGRESS!!":
   READ REP FROM CONTROL,CONO:"REPRINT": DIV.OWNER ELSE REP = ""
   NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
   IF REP = "" THEN PCS.LST.MV.NO = NEW.MV
   PCS.START.UNUSED<1,NEW.MV> = PCS.LST.CHK.NO+1
   PCS.END.UNUSED<1,NEW.MV> = CKNO-1
*T22081 v
   IF LASER.FLAG = '' THEN GOSUB 600;* Run alignment routine if not laser
*  GOSUB 600;*RUN ALIGNMENT ROUTINE
*T22081 ^
*T26357 PCS.START.VOID<1,NEW.MV> = CKNO
   IF NOT(LASER.FLAG) THEN PCS.START.VOID<1,NEW.MV> = CKNO ELSE PCS.START.VOID<1,NEW.MV> = CKNO -1
   CKNO = CKNO + NUM.ALIGN
   PCS.END.VOID<1,NEW.MV> = CKNO-1
   PCS.LST.CHK.NO = CKNO-1
   PCS.VOID.DATE<1,NEW.MV> = CKDT
   PCS.VOID.MOD<1,NEW.MV> = "APS"
   PREV.VEND=""
   PREV.VENDCKR=""
   HCRT=""
   MAT VEND.REC = ""
   PRINTER ON
*
*---- MAIN PROCESSING
*
100 *
   READNEXT ID ELSE EOJ=1;GOTO 300
   WRITE "FLAG" ON D.CKP,CONO:"FLAG"
   MATREAD CKP.REC FROM CKP,ID ELSE GOTO 100
   TTL=0;VNO=CKP.VEND
   IF PREV.VEND="" THEN PREV.VEND=CKP.VEND;GOTO 375
   IF PREV.VEND#CKP.VEND THEN GOTO 300
*
*---- PRINT CHECK STUB
*
200 *
   FOR Y=1 TO CKP.CTR
      IF LN>13 THEN LN=0;GOSUB 400
      TTL=TTL+CKP.DIST.AMT<1,Y>
   NEXT Y
*T22081 v
*  PRINT SP1:CKP.INV"L#10":SP4:OCONV(CKP.INV.DATE,"D2/")"L#8":
   PRINT CKP.INV"L#10":SPACE(5):OCONV(CKP.INV.DATE,"D2/")"L#8":
*T22081 ^
   PRINT SP3:OCONV(CKP.GRS.AMT,"MD2,")"R#13":SP3:OCONV(CKP.DSC.AMT,"MD2,")"R#12":SP3:OCONV(CKP.GRS.AMT-CKP.DSC.AMT,"MD2,")"R#13":SP3:ID[4,6]"L#6":
   IF CKP.GRS.AMT#TTL THEN PRINT "P";GOTO 250
   PRINT
250 LN=LN+1
*T26656 v
   IF CKP.REM.COMM # '' THEN
      PRINT 'Remit Comments: ':CKP.REM.COMM
      LN = LN + 1
   END
*T26656 ^
   TOT(1)=TOT(1)+CKP.GRS.AMT;TOT(2)=TOT(2)+CKP.DSC.AMT;TOT(3)=TOT(3)+(CKP.GRS.AMT-CKP.DSC.AMT)
   PREV.CKNO=STR("0",6-LEN(PREV.CKNO)):PREV.CKNO
   CKNO=STR("0",6-LEN(CKNO)):CKNO
   CKP.PAID.AMT=CKP.GRS.AMT-CKP.DSC.AMT;CKP.PAID.DATE=ICONV(CKDT,"D2/");CKP.CHK.NO=CKNO;CKP.ASSET.ID=BANK.NO;CKP.FIS.MONTH=MONTH
   MATWRITE CKP.REC ON CKR,ID
   HCTR=HCTR+1
   PREV.VENDCKR=REPLACE(PREV.VENDCKR,1,HCTR,0,ID)
   GOTO 100
*
*---- FINISH CHECK STUB
*
300 *
   IF LN=14 THEN GOTO 320
   FOR Y=1 TO 14-LN
      PRINT
   NEXT Y
320 *
   VNO1=EXTRACT(PREV.VEND,1,1,0)
   PRINT;PRINT SP3:VNO1"L#8":SP4:CKDT"L#8":SP3:OCONV(TOT(1),"MD2,")"R#13":
   PRINT SP3:OCONV(TOT(2),"MD2,")"R#12":SP3:OCONV(TOT(3),"MD2,")"R#13":SP3:STR("0",6-LEN(CKNO)):CKNO
   LN=0
*
*---- PRINT ACTUAL CHECK
*
   IF VNO1 MATCH "'0000'1A" THEN
      VEND.DESC = PREV.VEND<1,2>
      VEND.ADDR1 = PREV.VEND<1,3>
      VEND.ADDR2 = ""
      VEND.CT.ST = PREV.VEND<1,4>
      VEND.ZIP = PREV.VEND<1,5>
      PREV.VEND=VNO1
      GOTO 330
   END
   MATREAD VEND.REC FROM VEND,CONO:PREV.VEND ELSE GOSUB 450;GOTO 350
330 *
   IF TOT(3) <= 0 THEN GOSUB 450;GOTO 350
   PRINT;PRINT;PRINT;PRINT;PRINT SP53:CKDT"L#8":SP4:STR("0",6-LEN(CKNO)):CKNO
   PRINT;PRINT;PRINT;PRINT;PRINT
   VENDOR<1,-1> = PREV.VEND
   CHECK<1,-1> = CKNO
   NET=TOT(3);GOSUB 500
   PRINT NEW.WORD<1,1>"L#80"
   PRINT NEW.WORD<1,2>"L#66":OCONV(TOT(3),"MD2,$")"R#13"
   PREV.VEND=CKP.VEND
   PRINT
   PRINT SP10:VEND.DESC"L#40"
   PRINT SP10:VEND.ADDR1"L#40"
   IF VEND.ADDR2#"" THEN PRINT SP10:VEND.ADDR2"L#40"
   VCSZ = VEND.CT.ST:"  ":VEND.ZIP
   PRINT SPACE(10):VCSZ "L#40"
   IF VEND.ADDR2="" THEN PRINT
350 *
   IF CKNO # PREV.CKNO THEN
      FOR I = 1 TO HCTR
         WRITEV CKNO ON CKR,EXTRACT(PREV.VENDCKR,1,I,0),16
      NEXT I
   END
   PREV.VENDCKR=""
   HCTR=""
   CKNO=CKNO+1
   CKNO=STR("0",6-LEN(CKNO)):CKNO
   IF EOJ THEN
      FOR Y = 1 TO 5 ;PRINT;NEXT Y
      PRINTER CLOSE
      PRINTER OFF
355 *
      PRINT @(5,16):@(-3):"DID CHECKS PRINT CORRECTLY? (Y/N): ":
      INPUT ANS:
      IF ANS= "N" OR ANS = "/" THEN
         PRINT @(5,18):@(-3):"CHECKS MUST BE RE-RUN OR CASH DISB AND CHECK REG WILL NOT BALANCE"
360 *
         PRINT @(5,20):@(-3):"ENTER REPRINT VENDOR# OR (ALL): ":
         INPUT ANSW:
         IF ANSW # "ALL" THEN
            LST = DCOUNT(VENDOR,VM)
            NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
            LOCATE ANSW IN VENDOR<1>,1 SETTING FND ELSE GOTO 360
            PCS.START.VOID<1,NEW.MV> = CHECK<1,FND>
            PCS.END.VOID<1,NEW.MV> = CHECK<1,LST>
            PCS.VOID.DATE<1,NEW.MV> = CKDT
            PCS.VOID.MOD<1,NEW.MV> = "APS"
            PCS.START.UNUSED<1,NEW.MV> = ""
            PCS.END.UNUSED<1,NEW.MV> = ""
            PCS.LST.CHK.NO=CHECK<1,LST>
            MATREAD VEND.REC FROM VEND,CONO:ANSW ELSE GOTO 360
         END ELSE
            CNT = DCOUNT(CHECK,VM)
            PCS.START.VOID<1,NEW.MV> = CHECK<1,1>
            PCS.END.VOID<1,NEW.MV> = CHECK<1,CNT>
            PCS.VOID.DATE<1,NEW.MV> = CKDT
            PCS.VOID.MOD<1,NEW.MV> = "APS"
            PCS.START.UNUSED<1,NEW.MV> = ""
            PCS.END.UNUSED<1,NEW.MV> = ""
            PCS.LST.CHK.NO = CHECK<1,CNT>
         END
370*
         MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER
         BUFFER = REPLACE(BUFFER,2,0,0,ANSW)
         WRITEV ANSW ON CONTROL , CONO:"REPRINT":DIV.OWNER,1
         PROCWRITE BUFFER 
         GOTO 99999
      END
      IF ANS#"Y" THEN GOTO 355
      ANS=''
      WRITEV ANS ON CONTROL , CONO:"REPRINT":DIV.OWNER,1
      WRITEV CKNO ON D.CKP,CONO:"CHECKNO",1
      PCS.LST.CHK.NO = CKNO - 1
      MATWRITE PCS.REC ON CHECK.STATS,CONO:ACCT.NO:"!":DIV.OWNER
      BUFFER=REPLACE(BUFFER,2,0,0,"Y")
      PROCWRITE BUFFER
*T22081 v
      IF LASER.FLAG = 1 THEN
         OPEN '',"SECURITY" TO SECURITY ELSE ERRMSG = "SECURITY FILE MISSING";GOTO 93000
           *
         READ TEMP.REC FROM SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LASER' THEN
            DELETE SECURITY, CONO:OCONV(@LOGNAME,'MCU'):'!LASER'
         END
      END
*T22081 ^
      GOTO 99999
   END
   MAT TOT=""
   IF LASER.FLAG = "" THEN
      FOR Y=1 TO 5;PRINT;NEXT Y
   END ELSE
      PRINT CHAR(12):
   END
375 *
*T22081 v
   IF LASER.FLAG = '' THEN
      FOR Y=1 TO 4;PRINT;NEXT Y
   END ELSE
      PRINT
   END
*T22081 ^
   PREV.CKNO=CKNO
   GOTO 200
*
*---- PRINT VOIDED CHECK (CONTINUED CHECK)
*
400 *
   FOR Y1=1 TO 6;PRINT;NEXT Y1
   PRINT SP53:"MM/DD/YY":SP4:"XXXXXX"
   FOR Y1=1 TO 5;PRINT;NEXT Y1
   PRINT SP14:"V O I D E D   C H E C K!   D O    N O T   C A S H"
   PRINT SP65:"*****VOID*****"
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",30):" #####"
   FOR Y1=1 TO 10;PRINT;NEXT Y1
   VOID(16)=STR("0",6-LEN(CKNO)):CKNO
   VOID(17)=BANK.NO
   NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
   PCS.START.VOID<1,NEW.MV> = CKNO
   PCS.END.VOID<1,NEW.MV> = CKNO
   PCS.VOID.DATE<1,NEW.MV> = CKDT
   PCS.VOID.MOD<1,NEW.MV> = "APS"
   PCS.START.UNUSED<1,NEW.MV> = ""
   PCS.END.UNUSED<1,NEW.MV> = ""
   MATWRITE VOID ON CKR,CONO:VOID(16):"VOID"
   CKNO=CKNO+1;CKNO=STR("0",6-LEN(CKNO)):CKNO
*T22081 v
   IF LASER.FLAG = 1 THEN
      PRINT CHAR(12):
      PRINT
   END
*T22081 ^
   RETURN
*
*---- PRINT VOIDED CHECK (VENDOR MISSING)
*
450 *
   FOR Y=1 TO 4;PRINT;NEXT Y
   PRINT SP53:"MM/DD/YY":SP4:"XXXXXX"
   FOR Y=1 TO 5;PRINT;NEXT Y
   PRINT SP14:"V O I D E D   C H E C K!   D O    N O T   C A S H"
   PRINT SP65:"*****VOID*****"
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",40)
   PRINT SP10:STR("*",30):" #####"
   REM   FOR Y1=1 TO 2;PRINT;NEXT Y1
   PRINT
   PREV.VEND=CKP.VEND
   NEW.MV = DCOUNT(PCS.START.UNUSED,VM) + 1
   PCS.START.VOID<1,NEW.MV> = CKNO
   PCS.END.VOID<1,NEW.MV> = CKNO
   PCS.VOID.DATE<1,NEW.MV> = CKDT
   PCS.VOID.MOD<1,NEW.MV> = "APS"
   PCS.START.UNUSED<1,NEW.MV> = ""
   PCS.END.UNUSED<1,NEW.MV> = ""
   RETURN
*
*---- CREATE CHECK AMOUNT LINE
*
500 *
   L=LEN(NET)
   CENTS=NET[L-1,2]
   IF CENTS=0 THEN CENTS="NO"
   IF L>2 THEN UNITS=NET[L-2,1] ELSE UNITS=0
   IF L>3 THEN TENS=NET[L-3,1] ELSE TENS=0
   IF L>4 THEN HUND=NET[L-4,1] ELSE HUND=0
   IF L>5 THEN THOU=NET[L-5,1] ELSE THOU=0
   IF L>6 THEN TENTHOU=NET[L-6,1] ELSE TENTHOU=0
   IF L>7 THEN HUNDTHOU=NET[L-7,1] ELSE HUNDTHOU=0
   IF L>8 THEN MILL=NET[L-8,1] ELSE MILL=0
   IF L>9 THEN TENMILL=NET[L-9,1] ELSE TENMILL=0
   WORD=CENTS:"/100"
   YY=UNITS
   IF TENS<2 THEN YY=TENS:YY
   IF YY#0 THEN WORD=DOL(YY):" AND ":WORD
   IF TENS>1 THEN
      IF UNITS=0 THEN WORD=" AND ":WORD ELSE WORD="-":WORD
   END
   IF TENS>1 THEN WORD=TEN(TENS):WORD
   IF HUND#0 THEN WORD=DOL(HUND):" HUNDRED AND ":WORD
   YY=THOU
   IF TENTHOU<2 THEN YY=TENTHOU:YY
   IF YY#0 OR TENTHOU#0 THEN
      IF HUND=0 THEN WORD=" THOUSAND AND ":WORD ELSE WORD=" THOUSAND, ":WORD
   END
   IF YY#0 THEN WORD=DOL(YY):WORD
   IF TENTHOU>1 THEN
      IF THOU#0 THEN WORD="-":WORD
      WORD=TEN(TENTHOU):WORD
   END
   IF HUNDTHOU=0 AND L > 8 THEN 
      GOTO 505
   END ELSE
      IF HUNDTHOU = 0 THEN
         GOTO 510
      END
   END
   YY=HUNDTHOU
   HWORD=DOL(YY):" HUNDRED"
   IF TENTHOU=0 AND THOU=0 THEN WORD=HWORD:"  THOUSAND, ":WORD ELSE WORD=HWORD:" ":WORD
505 *
   YY=MILL
   IF TENMILL<2 THEN YY=TENMILL:YY
   IF YY#0 OR TENMILL#0 THEN
      IF THOU=0 THEN WORD=" MILLION AND ":WORD ELSE WORD=" MILLION, ":WORD
   END
   IF YY#0 THEN WORD=DOL(YY):WORD
   IF TENMILL>1 THEN
      IF MILL#0 THEN WORD="-":WORD
      WORD=TEN(TENMILL):WORD
   END
510 *
   WORD="***":WORD
   NEW.WORD = ""
   CALL DESC.REFORMAT(WORD,60,NEW.WORD)
   Y = LEN(NEW.WORD<1,1>)
   Y = 63 - Y
   NEW.WORD<1,1> = NEW.WORD<1,1>: STR("*",Y)
   IF NEW.WORD<1,2> # "" THEN
      NEW.WORD<1,2> = "***":NEW.WORD<1,2>
      X = LEN(NEW.WORD<1,2>)
      X = 63 - X
      NEW.WORD<1,2> = NEW.WORD<1,2>: STR("*",X)
   END
   RETURN
*
*---PRINT MASK ALIGNMENT
*
600*
   AMTMASK="##,###,###.##" 
   MATREAD COMP.REC FROM COMPANY,CONO ELSE ERRMSG = "COMPANY FILE MISSING!";GOTO 93000
   MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE ERRMSG = "GL TABLE FILE MISSING ";GOTO 93000
   GOSUB 9500
   SP70=STR(" ",70)
   SP66=SP70[1,66]
   SP65=SP70[1,65]
   SP53=SP70[1,53]
   SP14=SP70[1,14]
   SP10=SP70[1,10]
   SP6=SP70[1,6]
   SP4=SP70[1,4]
   SP3=SP70[1,3]
   SP2=SP70[1,2]
   SP1=SP70[1,1]
   PROMPT ""
*
*---- MAIN PROCESSING
*
700*
   PRINT @(5,12):@(-3):'PRESS RETURN WHEN READY TO RUN ALIGNMENT ':
   INPUT AN:
   PRINT @(5,12):@(-4):
   IF AN#"" THEN GOTO 700
   PRINTER ON
   FOR Y=1 TO 4;PRINT;NEXT Y
   FOR Y=1 TO 14
      PRINT SP1:STR("#",10):SP4:"MM/DD/YY":SP3:AMTMASK:SP3:AMTMASK[2,12]:SP3:AMTMASK:SP3:STR("#",6)
   NEXT Y
   PRINT;PRINT SP1:"#####-##":SP6:"MM/DD/YY":SP4:AMTMASK:SP3:AMTMASK[2,12]:SP3:AMTMASK:SP2:STR("#",6)
   FOR Y=1 TO 4;PRINT; NEXT Y
   PRINT SP53:"MM/DD/YY":SP4:"######"
   FOR Y=1 TO 3;PRINT;NEXT Y
   PRINT SP14: "V O I D E D   C H E C K   D O   N O T   C A S H"
   PRINT;PRINT;PRINT SP66:AMTMASK
   PRINT
   FOR Y=1 TO 4;PRINT SP10:STR("X",40);NEXT Y
   FOR Y=1 TO 5;PRINT;NEXT Y
   NUM.ALIGN = NUM.ALIGN + 1
   PRINTER OFF
   PRINTER CLOSE
710 *
   PRINT @(5,14):@(-3):"ARE CHECKS ALIGNED? (RET/N) ":;INPUT AN
   IF AN="N" THEN
      GOTO 700
   END
   IF AN#"" THEN GO 710
   RETURN
*
*---- SET G/L ACCT PARAMETERS
*
9500 *
   Z1=COUNT(CO.ACCT.STRUC,"-")+1
   ACAVAL=0
   FOR I = 1 TO Z1
      ACAVAL=ACAVAL + FIELD(CO.ACCT.STRUC,"-",I)
   NEXT I
   MAXL=ACAVAL
   MINL=FIELD(CO.ACCT.STRUC,"-",1)
   ACJUS="L"
   FOR I = 1 TO Z1
      ACJUS=ACJUS:STR("#",FIELD(CO.ACCT.STRUC,"-",I)):"-"
   NEXT I
   ACJUS=ACJUS[1,LEN(ACJUS)-1]
   ACCSH=GLTB.CASH
   ACDISC=GLTB.PUR.DISC
   ACAP=GLTB.AP
   RETURN
*
*---- ERROR ROUTINE
*
93000 *
   PRINT @(10,10):CS:ERRMSG:" - PRESS <RETURN> TO END: ":;INPUT ANS
   BUFFER<1> = "END"
   PROCWRITE BUFFER
99999 *
END
