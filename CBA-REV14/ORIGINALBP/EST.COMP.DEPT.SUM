  SUBROUTINE EST.COMP.DEPT.SUM (CONO, EST.KEY, DSEL, CSEL, QSEL)
***************************************************************************
*
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.COMP.DEPT.SUM
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/15/86
*
* DESCRIPTION
*
* This subroutine will display estimate data summarized by component and
* department, data is summarized for specified order quantity.
*
* MOD TASK 17811 DMT 4/19/94 ALLOW 99 QUANTITIES
*T26138 cm 09/17/2001 * Expand estimate qty from 8 to 9 digits.
*T26411 cm 01/30/2002 When (Q)ty is chosen list is not in GUI.
*T25978 adelgado 02/19/2002 * Add the use of prompts (S,SR,SB,ST).
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>EST.COMP.DEPT.SUM
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*
*---- DIMENSIONED VARIABLES
*
  DIM TOT.REC(10)
  EQU LABOR.HRS     TO TOT.REC(1)
  EQU LABOR.SALE    TO TOT.REC(2)
  EQU OTHER.SALE    TO TOT.REC(3)
  EQU AMOUNT.SALE   TO TOT.REC(4)
  EQU TOTAL.HRS     TO TOT.REC(6)
  EQU TOTAL.LABOR   TO TOT.REC(7)
  EQU TOTAL.OTHER   TO TOT.REC(8)
  EQU TOTAL.AMOUNT  TO TOT.REC(9)
*      OPEN '','DEV.SCREENS' TO DEV.SCREENS ELSE RETURN
  OPEN '','XREF.DATA' TO XREF.DATA ELSE RETURN
  OPEN '','ESTIMATE.WORK' TO ESTIMATE.WORK ELSE NULL
*
*---- INITIALIZATION
*
  SCREEN DEFINE;EST.COMP.DEPT.SUM
  SCREEN FORMAT
  SCREEN COUNT;EST.COMP.DEPT.SUM;4
  TOP.LINE.COUNT = S$LCNT
  TOP.LINE.SPACE = S$LSPC
  SCREEN COUNT;EST.COMP.DEPT.SUM;16
  BOT.LINE.COUNT = S$LCNT
  BOT.LINE.SPACE = S$LSPC
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
  CLEARDASCREEN = ''
*
*---- MAIN PROCESSING
*
100*
  GOSUB 6000
  SCREEN DISPLAY;EST.COMP.DEPT.SUM;ALL
  TOP.CURR.REF.NO = ""
  BOT.CURR.REF.NO = ""
  TOP.REF.NO = 1
  GOSUB 60000
*
*---- GET OPERATOR REPLY
*
500*
  SCREEN FIELD;EST.COMP.DEPT.SUM;23
  SCREEN INPUT;EST.COMP.DEPT.SUM;23
  OPTION = S$VALUE
  BEGIN CASE
    CASE OPTION = "" OR OPTION = "END"
      SCREEN CLEAR;EST.COMP.DEPT.SUM;D
      GOTO 99999
    CASE OPTION = "C"
      GOTO 600
    CASE OPTION = "Q"
      GOSUB 550
      IF CLEARDASCREEN THEN
        S$SCR = 2
        SCREEN FORMAT
      END
      BEGIN CASE
        CASE S$VALUE = "" OR S$VALUE = "END" 
          IF CLEARDASCREEN THEN
            SCREEN DISPLAY;;ALL
            TOP.REF.NO = 1
            TOP.CURR.REF.NO = ""
            GOSUB 60000
            CLEARDASCREEN = ''
          END
        CASE S$VALUE = QSEL 
          IF CLEARDASCREEN THEN
            SCREEN DISPLAY;;ALL
            TOP.REF.NO = 1
            TOP.CURR.REF.NO = ""
            GOSUB 60000
            CLEARDASCREEN = ''
          END
        CASE 1
          QSEL = S$VALUE
          CLEARDASCREEN = ''
          GOTO 100
      END CASE
  END CASE
  GOTO 500
*
*---- GET ORDER QUANTITY
*
550*
  EC=COUNT(EST.QTY,VM)+(EST.QTY # "")
  BEGIN CASE
    CASE EC < 2 
      S$VALUE=EST.QTY<1,1>
*T26138 v
*     CASE EC < 6
    CASE EC = 999
*T26138 ^
      SCREEN FIELD;;25
      S$MINV=1;S$MAXV=EC
      S$PMSG="Enter Quantity"
      FOR EP=1 TO EC
        S$PMSG=S$PMSG:"  (":EP:") ":EST.QTY<1,EP>
      NEXT EP
      SCREEN INPUT;;25;RETURN
      S$VALUE=EST.QTY<1,S$VALUE>
    CASE 1
      GXR.NAME = 'EST.QTY.SEL'
      GXR.XREF = ESTIMATE.WORK
      GXR.SRCH.ID = EST.KEY
      MATWRITE EST.REC TO ESTIMATE.WORK, CONO:EST.KEY
*T26411 v
*        CALL GEN.XREF.SUBM(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T26411 ^
      DELETE ESTIMATE.WORK, CONO:EST.KEY
      CLEARDASCREEN = 'Y'
      IF GXR.ID = "" THEN 
        S$VALUE = ''
      END ELSE
        S$VALUE = EST.QTY<1,GXR.ID>
      END
  END CASE
  RETURN
*
*---- GET COMPONENT LEVEL REQUEST
*
600*
  SCREEN FIELD;EST.COMP.DEPT.SUM;24
  SCREEN INPUT;EST.COMP.DEPT.SUM;24
  OPTION = S$VALUE
  BEGIN CASE
    CASE OPTION = "" OR OPTION = "END"
      GOTO 500
    CASE NUM(OPTION) AND OPTION # ""
      MINV = TOP.CURR.REF.NO
      MAXV = TOP.CURR.REF.NO + TOP.LINE.COUNT - 1
      IF MAXV > TOP.CNT THEN MAXV = TOP.CNT
      IF OPTION < MINV OR OPTION > MAXV THEN
        ERRMSG = "Invalid selection. Try again! "
        GOSUB 90000
        GOTO 600
      END
      DP = S$VALUE
      S$DATA(3)<S$SCR,DP> = "*"
      S$VAL = DP
      SCREEN DISPLAY;EST.COMP.DEPT.SUM;3
      GOSUB 7000
      BOT.CURR.REF.NO = ""
      BOT.REF.NO = 1
      GOSUB 70000
      GOTO 700
    CASE OPTION = "S"
      TOP.REF.NO = TOP.CURR.REF.NO + TOP.LINE.COUNT
      IF TOP.REF.NO > TOP.CNT THEN TOP.REF.NO = 1
      GOSUB 60000
    * T25978 v
    CASE OPTION = 'SR'
      TOP.REF.NO = TOP.CURR.REF.NO - TOP.LINE.COUNT
      IF TOP.REF.NO < 1 THEN TOP.REF.NO = 1
      GOSUB 60000
    CASE OPTION = 'ST'
      TOP.REF.NO = 1
      GOSUB 60000
    CASE OPTION = 'SB'
      TOP.REF.NO = TOP.CNT
      GOSUB 60000
    * T25978 ^
  END CASE
  GOTO 600
*
*---- GET DEPARTMENT LEVEL REQUEST
*
700*
  SCREEN FIELD;EST.COMP.DEPT.SUM;26
  SCREEN INPUT;EST.COMP.DEPT.SUM;26
  OPTION = S$VALUE
  BEGIN CASE
    CASE OPTION = "" OR OPTION = "END"
      S$DATA(3)<S$SCR> = ""
      S$VAL = DP
      SCREEN DISPLAY;EST.COMP.DEPT.SUM;3
      BOT.CNT = 0
      BOT.CURR.REF.NO = ""
      BOT.REF.NO = 1
      GOSUB 70000
      GOTO 600
    CASE OPTION = "S"
      BOT.REF.NO = BOT.REF.NO + BOT.LINE.COUNT
      IF BOT.REF.NO > BOT.CNT THEN BOT.REF.NO = 1
      GOSUB 70000
    * T25978 v
    CASE OPTION = 'SR'
      BOT.REF.NO = BOT.CURR.REF.NO - BOT.LINE.COUNT
      IF BOT.REF.NO < 1 THEN BOT.REF.NO = 1
      GOSUB 70000
    CASE OPTION = 'ST'
      BOT.REF.NO = 1
      GOSUB 70000
    CASE OPTION = 'SB'
      BOT.REF.NO = BOT.CNT
      GOSUB 70000
    * T25978 ^
  END CASE
  GOTO 700
*
*---- LOAD SCREEN DATA (TOP)
*
6000*
  MAT DSUM.REC = ""
  CALL EST.COMP.DEPT.SUB (CONO, EST.KEY, DSEL, CSEL, QSEL, MAT DSUM.REC)
  TOP.CNT = COUNT(DSUM.COMP,VM) + (DSUM.COMP # "")
  MAT TOT.REC = ""
  FOR DP = 1 TO TOP.CNT
    LABOR.HRS<1,DP> = DSUM.COMP.LABOR.HRS<1,DP>
    LABOR.SALE<1,DP> = DSUM.COMP.LABOR.SALE<1,DP>
    OTHER.SALE<1,DP> = DSUM.COMP.MATL.SALE<1,DP>+DSUM.COMP.OSP.SALE<1,DP>+DSUM.COMP.SHIP.SALE<1,DP>+DSUM.COMP.MISC.SALE<1,DP>
    AMOUNT.SALE<1,DP> = LABOR.SALE<1,DP> + OTHER.SALE<1,DP>
    TOTAL.HRS = TOTAL.HRS + LABOR.HRS<1,DP>
    TOTAL.LABOR = TOTAL.LABOR + LABOR.SALE<1,DP>
    TOTAL.OTHER = TOTAL.OTHER + OTHER.SALE<1,DP>
    TOTAL.AMOUNT = TOTAL.AMOUNT + AMOUNT.SALE<1,DP>
    IF LABOR.HRS<1,DP> = 0 THEN LABOR.HRS<1,DP> = ""
    IF LABOR.SALE<1,DP> = 0 THEN LABOR.SALE<1,DP> = ""
    IF OTHER.SALE<1,DP> = 0 THEN OTHER.SALE<1,DP> = ""
  NEXT DP
*T26138 v
*  S$DATA(1)<S$SCR> = QSEL
  FOR DP = 1 TO TOP.CNT
    LABOR.SALE<1,DP> = OCONV(LABOR.SALE<1,DP>,'MD2,')
    OTHER.SALE<1,DP> = OCONV(OTHER.SALE<1,DP>,'MD2,')
    AMOUNT.SALE<1,DP> = OCONV(AMOUNT.SALE<1,DP>,'MD2,')
  NEXT DP
  S$DATA(1)<S$SCR> = OCONV(QSEL,'MD0,')
*T26138 ^
  S$DATA(4)<S$SCR> = DSUM.COMP
  S$DATA(5)<S$SCR> = DSUM.COMP.DESC
  S$DATA(6)<S$SCR> = LABOR.HRS
  S$DATA(7)<S$SCR> = LABOR.SALE
  S$DATA(8)<S$SCR> = OTHER.SALE
  S$DATA(9)<S$SCR> = AMOUNT.SALE
  S$DATA(10)<S$SCR> = TOTAL.HRS
*T26138 v
*  S$DATA(11)<S$SCR> = TOTAL.LABOR
*  S$DATA(12)<S$SCR> = TOTAL.OTHER
*  S$DATA(13)<S$SCR> = TOTAL.AMOUNT
  S$DATA(11)<S$SCR> = OCONV(TOTAL.LABOR,'MD2,')
  S$DATA(12)<S$SCR> = OCONV(TOTAL.OTHER,'MD2,')
  S$DATA(13)<S$SCR> = OCONV(TOTAL.AMOUNT,'MD2,')
*T26138 ^
  RETURN
*
*---- LOAD SCREEN DATA (BOTTOM)
*
7000*
  BOT.CNT = COUNT(DSUM.DEPT<1,DP>,SM) + (DSUM.DEPT<1,DP> # "")
  MAT TOT.REC = ""
  DEPT = ""; DEPT.DESC = ""
  FOR CP = 1 TO BOT.CNT
    DEPT<1,CP> = DSUM.DEPT<1,DP,CP>
    DEPT.DESC<1,CP> = DSUM.DEPT.DESC<1,DP,CP>
    LABOR.HRS<1,CP> = DSUM.DEPT.LABOR.HRS<1,DP,CP>
    LABOR.SALE<1,CP> = DSUM.DEPT.LABOR.SALE<1,DP,CP>
    OTHER.SALE<1,CP> = DSUM.DEPT.MATL.SALE<1,DP,CP>+DSUM.DEPT.OSP.SALE<1,DP,CP>+DSUM.DEPT.SHIP.SALE<1,DP,CP>+DSUM.DEPT.MISC.SALE<1,DP,CP>
    AMOUNT.SALE<1,CP> = LABOR.SALE<1,CP> + OTHER.SALE<1,CP>
    TOTAL.HRS = TOTAL.HRS + LABOR.HRS<1,CP>
    TOTAL.LABOR = TOTAL.LABOR + LABOR.SALE<1,CP>
    TOTAL.OTHER = TOTAL.OTHER + OTHER.SALE<1,CP>
    TOTAL.AMOUNT = TOTAL.AMOUNT + AMOUNT.SALE<1,CP>
    IF LABOR.HRS<1,CP> = 0 THEN LABOR.HRS<1,CP> = ""
    IF LABOR.SALE<1,CP> = 0 THEN LABOR.SALE<1,CP> = ""
    IF OTHER.SALE<1,CP> = 0 THEN OTHER.SALE<1,CP> = ""
  NEXT CP
*T26138 v
  FOR CP = 1 TO BOT.CNT
    LABOR.SALE<1,CP> = OCONV(LABOR.SALE<1,CP>,'MD2,')
    OTHER.SALE<1,CP> = OCONV(OTHER.SALE<1,CP>,'MD2,')
    AMOUNT.SALE<1,CP> = OCONV(AMOUNT.SALE<1,CP>,'MD2,')
  NEXT CP
*T26138 ^
  S$DATA(16)<S$SCR> = DEPT
  S$DATA(17)<S$SCR> = DEPT.DESC
  S$DATA(18)<S$SCR> = LABOR.HRS
  S$DATA(19)<S$SCR> = LABOR.SALE
  S$DATA(20)<S$SCR> = OTHER.SALE
  S$DATA(21)<S$SCR> = AMOUNT.SALE
  RETURN
*
*---- DISPLAY MULTI-LINE DATA (TOP)
*
60000*
  START.REF.NO = 1 + INT((TOP.REF.NO-1)/TOP.LINE.COUNT)*TOP.LINE.COUNT
  IF START.REF.NO = TOP.CURR.REF.NO THEN RETURN
  TOP.CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = TOP.CNT
  SCREEN MULTI;EST.COMP.DEPT.SUM;C;2;3;4;5;6;7;8;9
  RETURN
*
*---- DISPLAY MULTI-LINE DATA (BOTTOM)
*
70000*
  START.REF.NO = 1 + INT((BOT.REF.NO-1)/BOT.LINE.COUNT)*BOT.LINE.COUNT
  IF START.REF.NO = BOT.CURR.REF.NO THEN RETURN
  BOT.CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = BOT.CNT
  SCREEN MULTI;EST.COMP.DEPT.SUM;C;15;16;17;18;19;20;21
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
  SCREEN CLEAR;EST.COMP.DEPT.SUM;D
  RETURN
END
