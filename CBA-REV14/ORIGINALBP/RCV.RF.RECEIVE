   SUBROUTINE RCV.RF.RECEIVE (ACTION, CONO, EMPID, MAT RCV.FILE.VARS)
*********************************************************************
*
* PROGRAM  - RCV.RF.RECEIVE
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/27/97
*
* DESCRIPTION
*
* This program is used to process the Roll Receiving transaction
* from the hand-held R-F units used on the receiving dock.
*
*T25697 edvard 03/20/2001 * Make a RCVMAN.TOT.WGT total weight for the
*                           whole po for the manifest.
*T26132 cm 09/06/2001 * Change screen size from 21x16 to 20x15.
*T26496 lhelms 03/21/2002 * UPGRADE REV12 FIX TO NOT WRITE OUT
*                           RCV.MANIFEST IF END AT SERAIL NUMBER PROMPT
*                           REMOVE RCV.MANIFEST REPLACE WITH DAILY_STOCK
*T26556 adelgado 06/17/2002 * Update PO.MAN.XREF with manifest total.
*T26951 adelgado 10/25/2002 * Remove prompt for Whse.
*T27071 epitka 12/17/2002 * MOVE LOCATION TO SECOND SCREEN
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>RCV.CPYLIB>RCV.FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>DAILY_STOCK
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>PO.MAN.XREF
*COPY>ICS.CPYLIB>PO.RSKI.XREF
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- OPEN
*
   OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
   OPEN "","PO.RSKI.XREF" TO PO.RSKI.XREF ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
   OPEN "","DAILY_STOCK" TO DAILY_STOCK ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "FILE MISSING"; GOSUB 91000; RETURN
   END
*
*---- INITIALIZATION
*
   TEST.MODE = 0
   IF LEN(ACTION) > 1 THEN
      IF ACTION[LEN(ACTION),1] = "T" THEN
         TEST.MODE = 1
      END
   END
   SPX = ""
   EMPNAME = "???????????????"
   MATREAD EMP.REC FROM EMPLOYEE, CONO:EMPID THEN
      EMPNAME = (EMP.FRST.NAME:" ":EMP.LAST.NAME)[1,20]
   END
   IF LEN(EMPNAME) < 20 THEN SPX = SPACE(INT((21-LEN(EMPNAME))/2))
   EMPNAME = SPX:EMPNAME
*
*---- INITIALIZE SCREEN.COM
*
   MAT S$EDIT = ""
   S$TYP = 0
   CALL RF.INPUT
   GOSUB DRAW.BORDER
   S$MASK = "#"
   ERY = 15
   DIM SCRN(15)
   MAT SCRN = ""
   XXXXXXXXXX = " 01234567890123456789 "
   XXXXXXXXXX = "+--------------------+"
   SCRN(00+1) = "|  Receive Shipment  |"
   SCRN(01+1) = "|--------------------|"
   SCRN(02+1) = "|@@@@@@@@@@@@@@@@@@@@|"
   SCRN(03+1) = "|--------------------|"
   SCRN(04+1) = "|P/O # :             |"
   SCRN(05+1) = "| ########           |"
   SCRN(06+1) = "|Man # :             |"
   SCRN(07+1) = "| ###############    |"
   SCRN(08+1) = "|Man Qty.  :         |"
   SCRN(09+1) = "| ##,###,###.##      |"
   SCRN(10+1) = "|Rcv Qty.  :         |"
   SCRN(11+1) = "| ##,###,###.##      |"
   SCRN(12+1) = "|                    |" ;*27071
   SCRN(13+1) = "|                    |" ;*27071
   SCRN(14+1) = "|                    |"
   XXXXXXXXXX = "+--------------------+"
   XXXXXXXXXX = " 01234567890123456789 "
   SLINE = @(-1)
   FOR SL = 0 TO 14
      SDATA = SCRN(SL+1)[2,20]
      CONVERT "#" TO " " IN SDATA
      CONVERT "@" TO " " IN SDATA
      SDATA = TRIMB(SDATA)
      LDATA = LEN(SDATA)
      LDONE = 0
      FOR N = 1 TO LDATA UNTIL LDONE
         IF SDATA[N,1] # " " THEN
            SLINE = SLINE:@((N-1),SL):SDATA[N,99]
            LDONE = 1
         END
      NEXT N
   NEXT SL
   PRINT SLINE:
   GOSUB DRAW.BORDER
   PO.NO   = ""
   MAN.NO  = ""
   PROD.ID = ""
   TOT.WGT = ""
   RCV.WGT = ""
   WHSE    = ""
   ;*27071   WLOC    = ""
*
*---- MAIN PROCESSING
*
   LOOP
      RELEASE
      PRINT @(00,02):EMPNAME:
      PRINT @(01,05):@(-4):PO.NO:
      PRINT @(01,07):@(-4):MAN.NO:
      PRINT @(01,09):@(-4):OCONV(TOT.WGT,"MD2,")"R#13" ; * 38020
      PRINT @(01,11):@(-4):OCONV(RCV.WGT,"MD2,")"R#13": ; * 38017
      ;*27071    PRINT @(01,13):@(-4):WLOC"L#4":
      GOSUB DRAW.BORDER
*
*---- GET P/O NUMBER
*
      LOOP
         S$TYP=1; S$X=1; S$Y=5; S$MINL=1; S$MAXL=8; S$EX=0; S$EY=15; ERY=15
         PRINT @(S$X,S$Y):@(-4):
         IF PO.NO # "" THEN
            S$O.R="O"; S$DEFAULT=PO.NO
         END
         CALL RF.INPUT
         GOSUB DRAW.BORDER
         IF S$VALUE = "END" THEN RETURN
         S$VALUE = UPCASE(TRIM(S$VALUE))
         IF S$VALUE = "" THEN
            ERRMSG = "** REQUIRED **"; GOSUB 91000
            CONTINUE
         END
         PRINT @(S$X,S$Y):@(-4):S$VALUE:
         MATREADU PO.REC FROM PO, CONO:S$VALUE LOCKED
            ERRMSG = "P/O LOCKED"; GOSUB 91000
            CONTINUE
         END ELSE
            ERRMSG = "INVALID P/O #"; GOSUB 91000
            CONTINUE
         END
         PO.NO = S$VALUE
         EXIT
      REPEAT
*
*---- GET MANIFEST NUMBER
*
      LOOP
         S$TYP=1; S$X=1; S$Y=7; S$MINL=1; S$MAXL=15; S$EX=0; S$EY=15; ERY=15
         PRINT @(S$X,S$Y):@(-4):
         IF MAN.NO # "" THEN
            S$O.R="O"; S$DEFAULT=MAN.NO
         END
         CALL RF.INPUT
         GOSUB DRAW.BORDER
         IF S$VALUE = "END" THEN
            MAN.NO = ""
            EXIT
         END
         S$VALUE = UPCASE(TRIM(S$VALUE))
         IF S$VALUE = "" THEN
            ERRMSG = "** REQUIRED **"; GOSUB 91000
            CONTINUE
         END
         PRINT @(S$X,S$Y):@(-4):S$VALUE:
         MATREADU DSR.REC FROM DAILY_STOCK, CONO:PO.NO:"!":S$VALUE LOCKED
            ERRMSG = "MANIFEST LOCKED"; GOSUB 91000
            S$VALUE = "END"
            EXIT
         END ELSE
            MAT DSR.REC = ""
         END
         MATREADU RSMAN.REC FROM PO.MAN.XREF, CONO:PO.NO:"!":S$VALUE LOCKED
            ERRMSG = "MANIFEST LOCKED *"; GOSUB 91000
            S$VALUE = "END"
            EXIT
         END ELSE
            MAT RSMAN.REC = ""
         END
         MAN.NO = S$VALUE
         DSR.SHPMNT.NO = MAN.NO
         PCNT = DCOUNT(PO.PROD.NUM,VM)
         FOR PO.LINE = 1 TO PCNT
            PROD.NO = PO.PROD.NUM<1,PO.LINE>
            MATREAD INV.REC FROM INVENTORY,CONO:PROD.NO ELSE
               MAT INV.REC = ""
            END
            MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
               MAT CATG.REC = ""
            END
            IF CATG.TRK.LVL = "S" THEN
               LOCATE PO.LINE IN DSR.PO.LINE<1>,1 SETTING P ELSE
                  DSR.PO.LINE<1,P> = PO.LINE
                  DSR.PROD<1,P> = PROD.NO
                  DSR.WHSE<1,P> = PO.WHSE<1,PO.LINE>
                  DSR.UN.PRICE<1,P> = PO.GROS.PRICE<1,PO.LINE>
               END
            END
         NEXT PO.LINE
         EXIT
      REPEAT
      IF S$VALUE = "END" THEN CONTINUE
*
*---- GET MANIFEST WEIGHT
*
      LOOP
         S$TYP=4; S$X=1; S$Y=9; S$MINL=1; S$MAXL=10; S$MINV=0; S$JUSTIFY = "L"
         S$MAXV=999999999; S$EX=0; S$EY=15; S$SCALER = "2"
         PRINT @(S$X,S$Y):@(-4):
         IF DSR.SHPMNT.TOT # "" THEN
            S$O.R ="O"; S$DEFAULT=DSR.SHPMNT.TOT 
         END
         CALL RF.INPUT
         GOSUB DRAW.BORDER
         IF S$VALUE = "END" THEN
            MAN.NO = ""; TOT.WGT = ""
            CONTINUE
         END
         IF S$VALUE = "" THEN
            ERRMSG = "** REQUIRED **"; GOSUB 91000; CONTINUE
         END
         TOT.WGT = S$VALUE
         DSR.SHPMNT.TOT = TOT.WGT ;*38017
         PRINT @(S$X,S$Y):@(-4):OCONV(TOT.WGT,"MD2,")"R#13" ; * 38020 
         ENTERED = ""
         IF DSR.SERIAL # "" THEN
            NUM.PROD = DCOUNT(DSR.PROD,VM)
            FOR P = 1 TO NUM.PROD
               NUM.SERIAL = DCOUNT(DSR.SERIAL<1,P>,SVM)
               FOR S = 1 TO NUM.SERIAL
                  MATREAD ISTK.REC FROM INV_SERIAL, CONO:DSR.SERIAL<1,P,S> ELSE
                     MAT ISTK.REC = ""
                  END
                  IF DSR.POST.DATE<1,P,S> = "" THEN
                     IF DSR.UOM<1,P> = "LBS" OR DSR.UOM<1,P> = "MSI" THEN
                        ENTERED+=ISTK.QTY.ENTERED
                     END ELSE
                        ENTERED+=ISTK.QTY.ENTERED*100
                     END
                  END
               NEXT S
            NEXT P
         END
         RCV.WGT = ENTERED
         PRINT @(01,11):@(-4):OCONV(RCV.WGT,"MD2,")"R#13" ; * 38020
         EXIT
      REPEAT
*
*---- GET WAREHOUSE
*
* T26951 v
*   LOOP
*     BEGIN CASE
*       CASE PO.WHSE<1,PO.LINE> = ""
*         S$TYP=1; S$X=1; S$Y=13; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15
*         CALL RF.INPUT
*         GOSUB DRAW.BORDER
*         IF S$VALUE = "END" THEN
*           MAN.NO = ""; TOT.WGT = ""; WSE = ""
*           CONTINUE
*         END
*         S$VALUE = UPCASE(TRIM(S$VALUE))
*         IF S$VALUE = "" THEN
*           ERRMSG = "** REQUIRED **"; GOSUB 91000; CONTINUE
*         END
*         PRINT @(S$X,S$Y):S$VALUE"R#4":
*         MATREAD WHSE.REC FROM WAREHOUSE, CONO:S$VALUE ELSE
*           ERRMSG = "INVALID WHSE"; GOSUB 91000; CONTINUE
*         END
*         IF WHS.DIV # PO.DIV.OWNER AND PO.DIV.OWNER # "00" THEN
*           ERRMSG = "DIVISION MISMATCH"; GOSUB 91000; CONTINUE
*         END
*         WHSE = S$VALUE
*       CASE PO.WHSE<1,PO.LINE> # ""
*         WHSE = PO.WHSE<1,PO.LINE>
*     END CASE
*     PRINT @(1,13):WHSE"R#4":
*     EXIT
*   REPEAT
* T26951 ^
*
*---- GET LOCATION
*
      ;*T27071 LOOP
      ;*T27071   S$TYP=1; S$X=1; S$Y=13; S$MINL=1; S$MAXL=4; S$EX=0; S$EY=15; ERY=15    ;* T26951
      ;*T27071   CALL RF.INPUT
      ;*T27071   GOSUB DRAW.BORDER
      ;*T27071   IF S$VALUE = "END" THEN
      ;*T27071     MAN.NO = ""; TOT.WGT = ""; WSE = ""; WLOC = ""
      ;*T27071     CONTINUE
      ;*T27071   END
      ;*T27071   S$VALUE = UPCASE(TRIM(S$VALUE))
      ;*T27071   IF S$VALUE = "" THEN
      ;*T27071     ERRMSG = "** REQUIRED **"; GOSUB 91000; CONTINUE
      ;*T27071   END
      ;*T27071   IF INDEX(S$VALUE," ",1) > 0 THEN
      ;*T27071     ERRMSG = "** INVALID SPACE **"; GOSUB 91000; CONTINUE
      ;*T27071   END
      ;*T27071   PRINT @(S$X,S$Y):@(-4):S$VALUE"L#4":
      ;*T27071   WLOC = S$VALUE
      ;*T27071   EXIT
      ;*T27071 REPEAT
*
*---- PROCESS RECEIVED ROLLS
*
      TODAY = DATE()
      IF DSR.DATE = "" THEN DSR.DATE = TODAY
      ;* T26556 v
      DEF.PERIOD = "";ERR.FLG = "";ERRMSG = ""                              
      CALL CHECK.PERIOD.DATE(CONO,DSR.DATE,DEF.PERIOD,PO.DIV.OWNER,ERR.FLG,ERRMSG,COMPANY,CONTROL)
      BEGIN CASE                           
         CASE ERRMSG = ""                   
            DSR.PERIOD = DEF.PERIOD
         CASE ERR.FLG = 0                   
            DSR.PERIOD = DEF.PERIOD
         CASE 1
      END CASE                             
      ;* T26556 ^
      DSR.VEND = PO.VEND.NO
      DSR.PO   = PO.NO
      MATWRITEU DSR.REC ON DAILY_STOCK, CONO:PO.NO:"!":MAN.NO
      ;* T26556 v
      RSMAN.MAN.NO = MAN.NO
      RSMAN.MAN.TOT.WGT = DSR.SHPMNT.TOT
      RSMAN.ENTRY.DATE = DSR.DATE
      RSMAN.PERIOD = DSR.PERIOD
      MATWRITEU RSMAN.REC ON PO.MAN.XREF, CONO:PO.NO:"!":MAN.NO
      ;* T26556 ^
      ;*27071     CALL RCV.RF.RECEIVE.ROLL(ACTION, CONO, EMPID, PO.NO, MAN.NO, WHSE, WLOC, MPTR, MAT DSR.REC, MAT RCV.FILE.VARS, MAT RSMAN.REC)
      CALL RCV.RF.RECEIVE.ROLL(ACTION, CONO, EMPID, PO.NO, MAN.NO, WHSE, MPTR, MAT DSR.REC, MAT RCV.FILE.VARS, MAT RSMAN.REC)
      RCV.WGT = ""
      ENTERED = ""
      IF DSR.SERIAL # "" THEN
         NUM.PROD = DCOUNT(DSR.PROD,VM)
         FOR P = 1 TO NUM.PROD
            NUM.SERIAL = DCOUNT(DSR.SERIAL<1,P>,SVM)
            FOR S = 1 TO NUM.SERIAL
               MATREAD ISTK.REC FROM INV_SERIAL, CONO:DSR.SERIAL<1,P,S> ELSE
                  MAT ISTK.REC = ""
               END
               IF DSR.POST.DATE<1,P,S> = "" THEN
                  IF DSR.UOM<1,P> = "LBS" OR DSR.UOM<1,P> = "MSI" THEN
                     ENTERED+=ISTK.QTY.ENTERED
                  END ELSE
                     ENTERED+=ISTK.QTY.ENTERED*100
                  END
               END
            NEXT S
         NEXT P
      END
      RCV.WGT = ENTERED
      PRINT SLINE:
      GOSUB DRAW.BORDER
      IF TRIM(DSR.SERIAL) = "" THEN
         DELETE DAILY_STOCK, CONO:PO.NO:"!":MAN.NO
         IF TRIM(RSMAN.RS.NO) = "" THEN DELETE PO.MAN.XREF,CONO:PO.NO:"!":MAN.NO
      END ELSE
         LOCATE MAN.NO IN PO.MAN<1>,1 SETTING PINDX ELSE
            PO.MAN = INSERT(PO.MAN,1,PINDX,0,MAN.NO)
            MATWRITEU PO.REC ON PO,CONO:PO.NO
         END
      END
   REPEAT
   RETURN
*
*---- DRAW BORDER
*
DRAW.BORDER: 
   IF TEST.MODE THEN
      FOR SL = 1 TO 15
         PRINT @(20,(SL-1)):"|":
      NEXT SL
      PRINT @(0,15):"--------------------+":
   END
   RETURN
*
*---- ERROR ROUTINE
*
91000 *
   PRINT @(0,ERY):@(-4):BEL:BEL:ERRMSG[1,14]:
   INPUT REPLY,1:
   PRINT @(0,ERY):@(-4):
   ERY = 15
   RETURN
