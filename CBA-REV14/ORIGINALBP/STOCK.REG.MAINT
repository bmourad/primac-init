*COPY>CPYLIB>COM1
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>ICS.CPYLIB>COM.INV.LINK  
*COPY>POS.CPYLIB>COM.PO.INTRF
*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - STOCK.REG.MAINT
* BY          - EDVARD PITKA
* DATE        - 07/16/01
* DESCRIPTION 
* GENERALY TRACKED ITEMS RECEIVE FUNCTION
*T25740 edvard 08/31/01  REV12
*T26126 adelgado 02/26/2002 * Implement the LOCKED clause for READU.
*T25740 epitka 04/03/2002 * REV12
*ENDDOC
*********************************************************************
*
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>SAVE.STOCK.REC
*COPY>ICS.CPYLIB>INV.HIST
*COPY>PMC.CPYLIB>VEND
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>DIVISION
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>PMC.CPYLIB>SALESDATES  
*COPY>PMC.CPYLIB>FISCAL      
*                                                             
   DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)          
   DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)  
*                                                             
   ;*
   ;**** SETUP FOR SYSTEM ERRMSGS
   ;*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   ;*
   ;**** OPEN FILES
   ;*
   OPEN '','INVENTORY' TO INVENTORY ELSE
      ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   END
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
      ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
   END
   OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
      ERRMSG = 'INVENTORY.XREF FILE IS MISSING'; GOTO 93000
   END
   OPEN '','CATEGORY' TO CATEGORY ELSE
      ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   END
   OPEN '','INV.STATS' TO INV.STATS ELSE
      ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   END
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
      ERRMSG = 'INV.JOB.STATS FILE IS MISSING' ; GOTO 93000
   END
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
      ERRMSG = 'INV.WHSE.LOC IS MISSING'; GOTO 93000
   END
   OPEN '','INV.WHSE' TO INV.WHSE ELSE
      ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
   END
   OPEN '','INV.HIST' TO INV.HIST ELSE
      ERRMSG = 'INV.HIST IS MISSING'; GOTO 93000
   END
   OPEN '','JOB' TO JOB ELSE
      ERRMSG = 'JOB IS MISSING'; GOTO 93000
   END
   OPEN '','COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   END
   OPEN '','VEND' TO VEND ELSE
      ERRMSG = 'VENDOR FILE IS MISSING'; GOTO 93000
   END
   OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'ICS.SCREENS FILE IS MISSING'; GOTO 93000
   END
   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   END
   OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE
      ERRMSG = 'VENDOR.XREF FILE IS MISSING'; GOTO 93000
   END
   OPEN '','PREFIX' TO PREFIX ELSE
      ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
   END
   OPEN '','ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE
      ERRMSG = 'ACCRUED.LIAB.HIST FILE IS MISSING'; GOTO 93000
   END
   OPEN "SLIT.TRANS" TO SLIT.TRANS ELSE 
      ERRMSG = "SLIT.TRANS FILE IS MISSING" ; GOTO 93000
   END
   OPEN "DIVISION" TO DIVISION ELSE 
      ERRMSG = "DIVISION FILE IS MISSING" ; GOTO 93000
   END
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
      ERRMSG = 'INV_RECEIPTS IS MISSING'; GOTO 93000
   END
   OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
      ERRMSG = 'INV_RECP_WHSE IS MISSING'; GOTO 93000
   END
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
      ERRMSG = 'INV_SERIAL IS MISSING'; GOTO 93000
   END
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
      ERRMSG = 'INV_AUDIT_HIST IS MISSING'; GOTO 93000
   END
   OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
      ERRMSG = 'INV_AUDIT_TAG IS MISSING';GOTO 93000
   END
   ;*
   ;***** GET COMPANY NAME
   ;*
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IF CO.POS = 'Y' THEN
      OPEN '','PO' TO PO ELSE
         ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
      END
   END
   IF CO.APS.R.INTRF > 1 THEN
      OPEN '','VEND.STATS' TO VEND.STATS ELSE 
         ERRMSG = "VEND.STATS FILE IS MISSING" ; GOTO 93000
      END
      OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
         ERRMSG = 'VEND.PO.STATS FILE IS MISSING' ; GOTO 93000
      END
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = 'VEND.PROD.STATS FILE IS MISSING' ; GOTO 93000
      END
   END
*
   READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "DIVISION CONTROL RECORD IS MISSING" ; GOTO 93000
   END
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY CONTROL RECORD IS MISSING"; GOTO 93000
   END
   MATREAD FISCAL.REC FROM CONTROL,CONO:"ICFISCAL" ELSE
      ERRMSG = "CONTROL ":CONO:"'ICFISCAL' RECORD IS MISSING" ; GOTO 93000
   END                                                                   
   READ PERIOD.REC FROM CONTROL,"ACCT.PERIODS" ELSE 
      PERIOD.REC = ""                                
      PERIOD.REC<1> = "12"                           
   END                                              
   NUM.PERIODS = PERIOD.REC<1>                      
   ;*
   ;**** SET UP GEN.XREF.REC
   ;*
   FILL = "#"
   MAT EDIT.COM.DRIVER = ''
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   GXR.HEADING<1,2> = 'DESCRIPTION'
   GXR.ATT<1,1> = 0
   GXR.ATT<1,2> = 1
   GXR.LEN<1,1> = 10
   GXR.LEN<1,2> = 30
   ;*
   ;***** MAIN PROCESSING
   ;*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 2
   ECD.SCRN.NAME<1> = 'STOCK.REG.MAINT'
   ECD.SCRN.NAME<2> = 'STOCK.INV.IN'
   ECD.ACTION=1;CALL SCRN.EDIT
   ;*
   ;**** PRINT SCREEN
   ;*
100*
   DONE=0
   LOOP
      RELEASE
      ECD.SCRN.NO = 1
      MAT PO.REC = ''
      MAT SAVE.STK.REC = ""
      MAT SCV.REC = ""
      ERRMSG=''
      ECD.ACTION=6;CALL SCRN.EDIT
      ;*
      ;* enter po number
      ;*
      ECD.NUM = 5
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN DONE=1
   UNTIL (DONE) DO 
      PO.CODE = ECD.RET.VALUE
      IF CO.POS = 'Y' THEN
      * T26126 v
         MATREADU PO.REC FROM PO, CONO:PO.CODE LOCKED
            ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000 
         END THEN
      * T26126 ^
            DIV.CODE = PO.DIV.OWNER; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; RELEASE PO,CONO:PO.CODE
            END ELSE
               GOSUB 1000
               IF ERRMSG='' THEN
                  SCV.REC(41)<ECD.SCRN.NO> = PO.DIV.OWNER
                  ECD.NUM=41; ECD.ACTION=5;CALL SCRN.EDIT
                  FIND.PO = 1
                  FOR XX=1 TO 2 UNTIL ECD.RET.VALUE="END"
                     ON XX GOSUB ENT.RECP.DATE,ENT.PERIOD
                  NEXT XX
                  IF ECD.RET.VALUE # "END" THEN 
                     GOSUB 20000
                     GOSUB ENT.OPTIONS
                  END
               END
            END
         END ELSE
            READ TEMP FROM SLIT.TRANS,CONO:PO.CODE THEN
               ERRMSG = PO.CODE:" exists in the SLIT.TRANS file.  Unable to use."
               GOSUB 91000 ; RELEASE PO,CONO:PO.CODE 
            END ELSE
               IF INDEX(PO.CODE,"S",1) THEN
                  LENPO = LEN(PO.CODE)
                  PART1 = PO.CODE[1,LENPO-1]
                  IF PART1 # "" AND NUM(PART1) THEN
                     ERRMSG = PO.CODE:" the format of the PO number not allowed"
                     GOSUB 91000
                     RELEASE PO,CONO:PO.CODE
                  END
               END
               IF ERRMSG = '' THEN
                  X = 0; Y = 23; MAXL = 1; TYP = 8
                  PMSG = PO.CODE:" IS NOT ON FILE. DO YOU WANT TO ADD (Y/N)"
                  CALL EDIT.SUB
                  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
                  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                  IF VALUE # "Y" THEN
                     RELEASE PO, CONO:PO.CODE
                  END ELSE
                     FIND.PO = 0
                     EOL =0
                     FOR XX = 1 TO 4 UNTIL ECD.RET.VALUE='END'
                        ON XX GOSUB ENT.DIVISION,ENT.RECP.DATE,ENT.PERIOD,ENT.VEND.CODE
                        IF ECD.RET.VALUE="END" THEN EOL=1
                     NEXT XX
                     IF EOL=0 THEN
                        GOSUB ENT.OPTIONS
                     END
                  END
               END
            END
         END
      END ELSE
         READ TEMP FROM SLIT.TRANS,CONO:PO.CODE THEN
            ERRMSG = PO.CODE:" exists in the SLIT.TRANS file.  Unable to use."
            GOSUB 91000 ; RELEASE PO,CONO:PO.CODE 
         END ELSE
            IF INDEX(PO.CODE,"S",1) THEN
               LENPO = LEN(PO.CODE)
               PART1 = PO.CODE[1,LENPO-1]
               IF PART1 # "" AND NUM(PART1) THEN
                  ERRMSG = PO.CODE:" the format of the PO number not allowed"
                  GOSUB 91000
                  RELEASE PO,CONO:PO.CODE
               END
            END
            IF ERRMSG='' THEN
               FIND.PO = 0
               EOL=0
               FOR  XX = 1 TO 3 UNTIL EOL=1
                  ON XX GOSUB ENT.RECP.DATE,ENT.PERIOD,ENT.VEND.CODE
                  IF ECD.RET.VALUE = "END" THEN EOL=1
                  IF EOL=0 THEN GOSUB ENT.OPTIONS
               NEXT XX
            END
         END
      END
   REPEAT
*
   GOTO 99999
*
**************************************************************************
******** S U B R O U T I N E S *******************************************
**************************************************************************
*
**************
ENT.RECP.DATE: 
**************
*
   IF SSTK.DATE = "" THEN ECD.DEFAULT = DATE()
   ECD.NUM = 39
   ECD.ACTION = 4 ;CALL SCRN.EDIT
   IF ECD.RET.VALUE#"END" THEN
      DEF.PERIOD = ""; ERR.FLG = ""; ERRMSG = ""
      CALL CHECK.PERIOD.DATE(CONO,ECD.RET.VALUE,DEF.PERIOD,DIV.CODE,ERR.FLG,ERRMSG,COMPANY,CONTROL)
      BEGIN CASE                            
         CASE ERRMSG = ""                    
            SSTK.DATE = ECD.RET.VALUE         
         CASE ERR.FLG = 0                    
            SSTK.DATE = ECD.RET.VALUE         
            GOSUB 91000                       
         CASE ERR.FLG = 1                    
            GOSUB 91000; GOTO ENT.RECP.DATE             
         CASE ERR.FLG = 2                    
            GOSUB 91000; ECD.RET.VALUE = "END"
      END CASE                              
   END
   RETURN
*
***************
ENT.PERIOD: 
***************
*
   IF CO.ICS.PERIOD.FLG='N' THEN
      IF SSTK.PERIOD = "" AND DEF.PERIOD # "" THEN ECD.DEFAULT = DEF.PERIOD 
      ERR.FLG = ""; ERRMSG = ""
      ECD.NUM = 42
      ECD.ACTION=4 ; CALL SCRN.EDIT
      IF ECD.RET.VALUE#"END" THEN
         CALL CHECK.PERIOD.DATE(CONO,SSTK.DATE,ECD.RET.VALUE,DIV.CODE,ERR.FLG,ERRMSG,COMPANY,CONTROL)
         BEGIN CASE                            
            CASE ERRMSG = ""                    
               SSTK.PERIOD = ECD.RET.VALUE         
            CASE ERR.FLG = 0                    
               SSTK.PERIOD = ECD.RET.VALUE         
               GOSUB 91000                       
            CASE ERR.FLG = 1                    
               GOSUB 91000; GOTO ENT.PERIOD             
            CASE ERR.FLG = 2                    
               GOSUB 91000; ECD.RET.VALUE = "END"
         END CASE                              
      END
   END ELSE
      SSTK.PERIOD=DEF.PERIOD
      SCV.REC(42)<ECD.SCRN.NO>=DEF.PERIOD
      ECD.NUM=42; ECD.ACTION=5 ; CALL SCRN.EDIT
      ECD.RET.VALUE=DEF.PERIOD
   END
   RETURN
*
**************
ENT.DIVISION: 
**************
*
   EOI=0
   LOOP
      SCV.REC(41)<1> = '';* T23278
      ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
            EOI=1
         CASE ECD.RET.VALUE = "00"
            DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000
            END ELSE
               GOSUB 1000
               IF ERRMSG='' THEN
                  PO.DIV.OWNER = ECD.RET.VALUE
                  EOI=1
               END
            END
         CASE 1
            MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE THEN
               DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
               CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
               IF ERRMSG # '' THEN
                  GOSUB 91000
               END ELSE
                  GOSUB 1000
                  IF ERRMSG='' THEN
                     PO.DIV.OWNER = ECD.RET.VALUE
                     EOI=1
                  END
               END
            END ELSE
               ERRMSG = "INVALID DIVISION"; GOSUB 91000
            END
      END CASE
   UNTIL (EOI) DO REPEAT
   RETURN
*
************
ENT.OPTIONS: 
************
*
   EOP=0
   LOOP
      ECD.NUM = 31; SCV.REC(ECD.NUM)<1> = ''
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = 'END' OR OPTION = 'E'
            IF CO.POS = "Y" THEN
               RELEASE PO, CONO:PO.CODE
            END
            EOP=1
         CASE NUM(OPTION) AND NOT(FIND.PO)
            ON OPTION GOSUB ENT.VEND.CODE
         CASE OPTION = 'N'
            ECD.SCRN.NO = 2
            FOR SCV = 1 TO SCV.REC.SIZE
               SCV.REC(SCV)<ECD.SCRN.NO> = ""
            NEXT SCV
            SCV.REC(1)<ECD.SCRN.NO> = PO.VEND.NO
            SCV.REC(2)<ECD.SCRN.NO> = VEND.DESC
            ECD.ACTION = 3; CALL SCRN.EDIT
            CALL STOCK.INV.IN(CONO,PO.CODE,FIND.PO)
            ECD.SCRN.NO = 1
            ECD.ACTION=3; CALL SCRN.EDIT
         CASE OPTION = 'F' AND SSTK.LOC # ''
            CALL STOCK.REC.UPDATE(CONO,PO.CODE,FIND.PO,MAT COMP.REC,CUR.PERIOD)
            IF SSTK.TOT.REC = '' THEN
               EOP=1
            END ELSE
               ECD.SCRN.NO = 1
               FOR SCV = 1 TO SCV.REC.SIZE
                  SCV.REC(SCV)<ECD.SCRN.NO> = ""
               NEXT SCV
               ECD.ACTION=6;CALL SCRN.EDIT
               IF FIND.PO THEN
                  MATREADU PO.REC FROM PO, CONO:PO.CODE ELSE MAT PO.REC = ""
                  GOSUB 20000
               END ELSE
                  ECD.ACTION=3;CALL SCRN.EDIT
               END
            END
      END CASE
   UNTIL (EOP) DO REPEAT
   RETURN
*
**************
ENT.VEND.CODE: 
**************
*
   EOI=0
   LOOP
      ECD.NUM=9
      ECD.VALDAT.CODE = 2
      ECD.VALDAT.FILE = VEND
      ECD.PREFIX.ID = CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      PO.VEND.NO = ECD.RET.VALUE
      BEGIN CASE
         CASE ECD.RET.VALUE = 'END'
            EOI=1
         CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
            FOR V = 1 TO VEND.REC.SIZE
               VEND.REC(V) = ECD.VALDAT.ITEM<V>
            NEXT V
            SCV.REC(10)<ECD.SCRN.NO> = VEND.DESC
            SCV.REC(11)<ECD.SCRN.NO> = VEND.ADDR1
            SCV.REC(12)<ECD.SCRN.NO> = VEND.ADDR2
            SCV.REC(13)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",1)
            SCV.REC(14)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",2)
            SCV.REC(15)<ECD.SCRN.NO> = VEND.ZIP
            ECD.ACTION=3;CALL SCRN.EDIT
            EOI=1
         CASE ECD.RET.VALUE = ''
            ECD.NUM = 10
            ECD.ACTION=4;CALL SCRN.EDIT
            IF ECD.RET.VALUE # '' AND ECD.RET.VALUE # 'END' THEN 
               GXR.XREF = VENDOR.XREF
               GXR.FILE = VEND
               GXR.LOC = 1
               GXR.TOP.LINE = 'VEND XREF SEARCH'
               GXR.HEADING<1,1> = 'VEND NO'
               GXR.ID = ''
               GXR.SRCH.ID = ECD.RET.VALUE
               CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
               ECD.ACTION=2;CALL SCRN.EDIT
               IF GXR.ID = '' THEN
                  SCV.REC(10)<1> = ''
                  ECD.ACTION=3;CALL SCRN.EDIT
               END ELSE
                  MATREAD VEND.REC FROM VEND , CONO:GXR.ID THEN
                     PO.VEND.NO = GXR.ID
                     SCV.REC(9)<1> = PO.VEND.NO
                     SCV.REC(10)<ECD.SCRN.NO> = VEND.DESC
                     SCV.REC(11)<ECD.SCRN.NO> = VEND.ADDR1
                     SCV.REC(12)<ECD.SCRN.NO> = VEND.ADDR2
                     SCV.REC(13)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",1)
                     SCV.REC(14)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",2)
                     SCV.REC(15)<ECD.SCRN.NO> = VEND.ZIP
                     ECD.ACTION=3;CALL SCRN.EDIT
                     EOI=1
                  END ELSE
                     ERRMSG = 'VENDOR NOT ON FILE'
                     GOSUB 91000
                     SCV.REC(10)<1> = ''
                  END
               END
            END
      END CASE
   UNTIL (EOI) DO REPEAT
   RETURN
*
************
20000*
************
*
   MATREAD VEND.REC FROM VEND , CONO : PO.VEND.NO ELSE
      MAT VEND.REC = ''
      VEND.DESC = 'UNKNOWN'
   END
   SCV.REC(9)<ECD.SCRN.NO> = PO.VEND.NO
   SCV.REC(10)<ECD.SCRN.NO> = VEND.DESC
   SCV.REC(11)<ECD.SCRN.NO> = VEND.ADDR1
   SCV.REC(12)<ECD.SCRN.NO> = VEND.ADDR2
   SCV.REC(13)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",1)
   SCV.REC(14)<ECD.SCRN.NO> = FIELD(VEND.CT.ST, ",",2)
   SCV.REC(15)<ECD.SCRN.NO> = VEND.ZIP
   SCV.REC(19)<ECD.SCRN.NO> = PO.DUE.DATE
   SCV.REC(20)<ECD.SCRN.NO> = PO.VDR.ORD
   SCV.REC(21)<ECD.SCRN.NO> = PO.WRIT.BY
   SCV.REC(22)<ECD.SCRN.NO> = PO.CONTACT
   SCV.REC(23)<ECD.SCRN.NO> = PO.SHIP.VIA
   SCV.REC(24)<ECD.SCRN.NO> = PO.VIA.DESC
   SCV.REC(25)<ECD.SCRN.NO> = PO.FOB
   SCV.REC(26)<ECD.SCRN.NO> = PO.INTRAL.INT
   SCV.REC(29)<ECD.SCRN.NO> = PO.TERMS.DATE
   SCV.REC(27)<ECD.SCRN.NO> = PO.TERMS.DESC
   SCV.REC(28)<ECD.SCRN.NO> = PO.TERMS.DIS
   SCV.REC(32)<ECD.SCRN.NO> = PO.SHIP.WHSE
   SCV.REC(33)<ECD.SCRN.NO> = PO.SHIP.NAME
   SCV.REC(34)<ECD.SCRN.NO> = PO.SHIP.ADD1
   SCV.REC(35)<ECD.SCRN.NO> = PO.SHIP.ADD2
   SCV.REC(36)<ECD.SCRN.NO> = FIELD(PO.SHIP.ADD3, ",",1)
   SCV.REC(37)<ECD.SCRN.NO> = FIELD(PO.SHIP.ADD3, ",",2)
   SCV.REC(38)<ECD.SCRN.NO> = PO.SHIP.ADD4
   SCV.REC(41)<ECD.SCRN.NO> = PO.DIV.OWNER
   ECD.ACTION=3;CALL SCRN.EDIT
   MCNT = COUNT(PO.JOB.NO,VM) + (PO.JOB.NO # '')
   FOR M = 1 TO MCNT
      SCNT = COUNT(PO.JOB.NO<1,M>,SVM) + (PO.JOB.NO<1,M> # '')
      FOR S = 1 TO SCNT
         MATREAD JOB.REC FROM JOB, CONO : PO.JOB.NO<1,M,S> ELSE
            JOB.CUST = STR('?',8)
         END
         SSTK.CUST<1,M,S> = JOB.CUST
         SSTK.JOB.ALC<1,M> = SSTK.JOB.ALC<1,M> + PO.JB.OPEN<1,M,S>
      NEXT S
   NEXT M
   RETURN
*
***************
1000: 
***************
*
   DIV.POS=DIVISION.POSITION(CONO,CONTROL,DIV.CODE)         
   BEGIN CASE                                              
      CASE DIV.POS<1,1>=''                                  
         DIV.POS=DIV.POS<1,2>                                
         CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
         IF CUR.PERIOD<1,1>='' THEN                          
            CUR.PERIOD=CUR.PERIOD<1,2>                        
         END ELSE                                            
            IF CUR.PERIOD<1,2>='-2' THEN                      
               ERRMSG=CUR.PERIOD<1,2>                          
               GOSUB 93000                                     
            END                                               
         END                                                 
      CASE DIV.POS<1,1>='-1'                                
         ERRMSG=DIV.POS<1,2>                                 
         GOSUB 91000                                         
         RELEASE PO, CONO:PO.CODE                            
      CASE DIV.POS<1,1>='-2'                                
         ERRMSG=DIV.POS<1,2>                                 
         GOSUB 93000                                         
   END CASE                                                
   RETURN
*
**** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
   RELEASE
99999 
   ECD.ACTION=99 ; CALL SCRN.EDIT
END
