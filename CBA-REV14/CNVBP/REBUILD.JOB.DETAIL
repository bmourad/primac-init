*COPY>CPYLIB>COM3
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CNVBP
* PROGRAM     - REBUILD.JOB.DETAIL
* BY          - Yamout, Ziad. Vercom Software, Inc.
* DATE        - 11/14/90
* DESCRIPTION - Validates the JOB detail files against the Job file
*********************************************************************
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SECURITY
*COPY>PMC.CPYLIB>FISCAL
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>INVOICE
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>CHAR
*
  PRINT CS
*PORT = SYSTEM(18)
  PORT = "TTY"
  CALL SYSVARS.SUB(PORT)
  PROMPT ""
  MAT EDIT.COM = ""; TYP = 0; CALL EDIT.SUB
  UPDATE.ALL = 0; NO.PROMPT = 0
*
*--- Open the required files
*
  OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate the CONTROL file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "Cannot locate the COMPANY file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","SECURITY" TO SECURITY ELSE
      ERRMSG = "Cannot locate the SECURITY file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB" TO JOB ELSE
      ERRMSG = "Cannot locate the JOB file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","INVOICE" TO INVOICE ELSE
      ERRMSG = "Cannot locate the INVOICE file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB.TIME" TO JOB.TIME ELSE
      ERRMSG = "Cannot locate the JOB.TIME file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB.MATL" TO JOB.MATL ELSE
      ERRMSG = "Cannot locate the JOB.MATL file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB.OSP" TO JOB.OSP ELSE
      ERRMSG = "Cannot locate the JOB.OSP file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB.SHIP" TO JOB.SHIP ELSE
      ERRMSG = "Cannot locate the JOB.SHIP file"
      GOSUB 91000; GOTO 99999
  END
  OPEN "","JOB.MISC" TO JOB.MISC ELSE
      ERRMSG = "Cannot locate the JOB.MISC file"
      GOSUB 91000; GOTO 99999
  END
*
*--- Get company
*
  READ CONO FROM CONTROL, "MASTER" THEN
      CONO = CONO<1>; GOTO 20
  END
  READ CONO FROM SECURITY, "R.":PORT THEN
      CONO = CONO<1>; GOTO 20
  END
10 *
  X = 20; Y = 10; TYP = 3; MAXL = 3
  PMSG = "Company :"
  CALL EDIT.SUB
  IF VALUE = "" OR VALUE = "END" THEN GOTO 99999
  CONO = VALUE
20 *
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "Invalid Company ID (":CONO:")"
      GOSUB 91000; GOTO 10
  END
  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
      ERRMSG = "Cannot locate CONTROL, ":CONO:"JCFISCAL"
      GOSUB 91000; GOTO 99999
  END
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "DIV.SECURITY RECORD NOT FOUND IN CONTROL FILE"
      GOSUB 91000; GOTO 99999
  END
  READ DIVISIONS.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
      GOSUB 91000; GOTO 99999
  END
*IF NOT(NUM(FR.CURR.PER)) OR LEN(FR.CURR.PER) <> 6 THEN
*ERRMSG = "Invalid period for (":CONO:"JCFISCAL)"
*GOSUB 91000; GOTO 99999
*END
  CONOS = CONO
  PERIODS = ""
  FND = 1
* PERIODS = FR.CURR.PER
*
  TYPES = "R"; TYPES<2> = "N"; TYPES<3> = "C"; TYPES<4> = "S"
*
*
  PRINT CS :
  PRINT @(20,0):"R E B U I L D   J O B S   P R O C E S S":
  PRINT @(0,1) :STR("-",79):
  PRINT @(0,2) :"Cono :":
  PRINT @(14,2):"Period :":
  PRINT @(38,2):"Job # :":
  PRINT @(0,3):"Dept :":
  PRINT @(16,3):"Cctr :":
  PRINT @(33,3):"Prod/PLine :":
  PRINT @(67,3):"Whse :":
  PRINT @(0,4) :STR("-",79):
  PRINT @(0,5) :"TP Process  compl   WIP Before    WIP After   Cost Before  Cost After":
  PRINT @(0,6) :"-- ------- ------- ------------ ------------ ------------ ------------":
  PRINT @(0,7) :"IV":
  PRINT @(0,8) :"LB":
  PRINT @(0,9) :"MT":
  PRINT @(0,10):"OS":
  PRINT @(0,11):"SP":
  PRINT @(0,12):"MS":
  PRINT @(0,13):"JB":
  PRINT @(0,14):STR("-",79):
  PRINT @(0,15):"IV":
  PRINT @(0,16):"LB":
  PRINT @(0,17):"MT":
  PRINT @(0,18):"OS":
  PRINT @(0,19):"SP":
  PRINT @(0,20):"MS":
  PRINT @(0,21):"JB":
  PRINT @(0,22):STR("-",79):
*
  PRINT @(7,2) :CONO "R#3":
*  PRINT @(23,2):FR.CURR.PER "R#6":
*
  GOSUB 5000
*
  OCONO = CONO
  DATA = 1
  LOOP
      READNEXT JOB.ID ELSE
          X = 46; Y = 2; TYP = 1; MAXL = 8
          CALL EDIT.SUB
          IF VALUE = "END" THEN
              DATA = 0
          END ELSE
              JOB.ID = CONOS<1>:VALUE
          END
      END
  WHILE DATA DO
      JB.I.CNT = JB.I.CNT + 1
      PRINT @(3,21):JB.I.CNT "R#7":
      CONO = JOB.ID[1,3]
      IF CONO # OCONO THEN
          LOCATE CONO IN CONOS,1 SETTING FND THEN
*              FR.CURR.PER = PERIODS<FND>
          END ELSE
              MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" THEN
*                  IF NOT(NUM(FR.CURR.PER)) OR LEN(FR.CURR.PER) <> 6 THEN
*                      ERRMSG = "Invalid period for (":CONO:"JCFISCAL)"
*                      GOSUB 91000; GOTO 199
*                  END
                  CONOS<FND> = CONO
*                  PERIODS<FND> = FR.CURR.PER
              END ELSE
                  ERRMSG = "Cannot locate CONTROL, ":CONO:"JCFISCAL"
                  GOSUB 91000; GOTO 199
              END
          END
          OCONO = CONO
          PRINT @(7,2) :CONO "R#3":
*          PRINT @(23,2):FR.CURR.PER "R#6":
      END
      PRINT @(46,2):JOB.ID[4,99] "L#8":
      MATREADU JOB.REC FROM JOB, JOB.ID ELSE
          RELEASE JOB, JOB.ID
          ERRMSG = "Cannot locate job (":JOB.ID:")"
          GOSUB 91000; GOTO 199
      END
  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      DIV.CODE = JOB.DIV
      LOCATE DIV.CODE IN DIVISIONS.REC<1> SETTING POS ELSE
          ERRMSG = "MISSING DIV CODE ":DIV.CODE:" IN DIVISIONS.REC"
          GOSUB 91000; GOTO 199
      END
  END ELSE
      POS = 1
  END
      PERIODS<FND> = FR.CURR.PER<1,POS>
      PRINT @(23,2):FR.CURR.PER<1,POS> "R#6":
      LOCATE "7" IN JOB.STATUS<1>,1 SETTING FND THEN
          RELEASE JOB, JOB.ID
          GOTO 199
      END
*
      JOB.QTY<1,2> = 0
      JOB.QTY<1,3> = 0
      B.WIP = SUM(JOB.WIP<1,2>)
      PRINT @(19,13):OCONV(B.WIP,"MD2,") "R#12":
      T.B.WIP = T.B.WIP + B.WIP
      PRINT @(19,21):OCONV(INT(T.B.WIP/100+.5),"MD0,") "R#12":
      B.COST = JOB.TOT.COST
      PRINT @(45,13):OCONV(B.COST,"MD2,") "R#12":
      T.B.COST = T.B.COST + B.COST
      PRINT @(45,21):OCONV(INT(T.B.COST/100+.5),"MD0,") "R#12":
      JOB.TOT.DCOST = ""
      JOB.TOT.COST = ""
      JOB.TOT.SALE = ""
*      JOB.WIP = ""
      JOB.WIP<1,1> = ""; JOB.WIP<1,2> = ""; JOB.WIP<1,3> = ""
      GOSUB 3000
      B.LB.WIP = SUM(JOB.LB.WIP<1,2>)
      PRINT @(19,8) :OCONV(B.LB.WIP,"MD2,") "R#12":
      T.B.LB.WIP = T.B.LB.WIP + B.LB.WIP
      PRINT @(19,16):OCONV(INT(T.B.LB.WIP/100+.5),"MD0,") "R#12":
      B.LB.COST = SUM(JOB.LB.COST)
      PRINT @(45,8) :OCONV(B.LB.COST,"MD2,") "R#12":
      T.B.LB.COST = T.B.LB.COST + B.LB.COST
      PRINT @(45,16):OCONV(INT(T.B.LB.COST/100+.5),"MD0,") "R#12":
      JOB.LB.WIP = ""
      GOSUB 3100
      A.LB.WIP = SUM(JOB.LB.WIP<1,2>)
      IF A.LB.WIP # B.LB.WIP THEN
          PRINT @(32,8) :OCONV(A.LB.WIP,"MD2,") "R#12":
      END
      T.A.LB.WIP = T.A.LB.WIP + A.LB.WIP
      PRINT @(32,16):OCONV(INT(T.A.LB.WIP/100+.5),"MD0,") "R#12":
      A.LB.COST = SUM(JOB.LB.COST)
      IF A.LB.COST # B.LB.COST THEN
          PRINT @(58,8) :OCONV(A.LB.COST,"MD2,") "R#12":
      END
      T.A.LB.COST = T.A.LB.COST + A.LB.COST
      PRINT @(58,16):OCONV(INT(T.A.LB.COST/100+.5),"MD0,") "R#12":
*
      B.MT.WIP = SUM(JOB.MT.WIP<1,2>)
      PRINT @(19,9) :OCONV(B.MT.WIP,"MD2,") "R#12":
      T.B.MT.WIP = T.B.MT.WIP + B.MT.WIP
      PRINT @(19,17):OCONV(INT(T.B.MT.WIP/100+.5),"MD0,") "R#12":
      B.MT.COST = SUM(JOB.MT.COST)
      PRINT @(45,9) :OCONV(B.MT.COST,"MD2,") "R#12":
      T.B.MT.COST = T.B.MT.COST + B.MT.COST
      PRINT @(45,17):OCONV(INT(T.B.MT.COST/100+.5),"MD0,") "R#12":
      JOB.MT.WIP = ""
      GOSUB 3200
      A.MT.WIP = SUM(JOB.MT.WIP<1,2>)
      IF A.MT.WIP # B.MT.WIP THEN
          PRINT @(32,9) :OCONV(A.MT.WIP,"MD2,") "R#12":
      END
      T.A.MT.WIP = T.A.MT.WIP + A.MT.WIP
      PRINT @(32,17):OCONV(INT(T.A.MT.WIP/100+.5),"MD0,") "R#12":
      A.MT.COST = SUM(JOB.MT.COST)
      IF A.MT.COST # B.MT.COST THEN
          PRINT @(58,9) :OCONV(A.MT.COST,"MD2,") "R#12":
      END
      T.A.MT.COST = T.A.MT.COST + A.MT.COST
      PRINT @(58,17):OCONV(INT(T.A.MT.COST/100+.5),"MD0,") "R#12":
*
      B.OS.WIP = SUM(JOB.OS.WIP<1,2>)
      PRINT @(19,10):OCONV(B.OS.WIP,"MD2,") "R#12":
      T.B.OS.WIP = T.B.OS.WIP + B.OS.WIP
      PRINT @(19,18):OCONV(INT(T.B.OS.WIP/100+.5),"MD0,") "R#12":
      B.OS.COST = SUM(JOB.OS.COST)
      PRINT @(45,10):OCONV(B.OS.COST,"MD2,") "R#12":
      T.B.OS.COST = T.B.OS.COST + B.OS.COST
      PRINT @(45,18):OCONV(INT(T.B.OS.COST/100+.5),"MD0,") "R#12":
      JOB.OS.WIP = ""
      GOSUB 3300
      A.OS.WIP = SUM(JOB.OS.WIP<1,2>)
      IF A.OS.WIP # B.OS.WIP THEN
          PRINT @(32,10):OCONV(A.OS.WIP,"MD2,") "R#12":
      END
      T.A.OS.WIP = T.A.OS.WIP + A.OS.WIP
      PRINT @(32,18):OCONV(INT(T.A.OS.WIP/100+.5),"MD0,") "R#12":
      A.OS.COST = SUM(JOB.OS.COST)
      IF A.OS.COST # B.OS.COST THEN
          PRINT @(58,10):OCONV(A.OS.COST,"MD2,") "R#12":
      END
      T.A.OS.COST = T.A.OS.COST + A.OS.COST
      PRINT @(58,18):OCONV(INT(T.A.OS.COST/100+.5),"MD0,") "R#12":
*
      B.SP.WIP = SUM(JOB.SP.WIP<1,2>)
      PRINT @(19,11):OCONV(B.SP.WIP,"MD2,") "R#12":
      T.B.SP.WIP = T.B.SP.WIP + B.SP.WIP
      PRINT @(19,19):OCONV(INT(T.B.SP.WIP/100+.5),"MD0,") "R#12":
      B.SP.COST = SUM(JOB.SP.COST)
      PRINT @(45,11):OCONV(B.SP.COST,"MD2,") "R#12":
      T.B.SP.COST = T.B.SP.COST + B.SP.COST
      PRINT @(45,19):OCONV(INT(T.B.SP.COST/100+.5),"MD0,") "R#12":
      JOB.SP.WIP = ""
      GOSUB 3400
      A.SP.WIP = SUM(JOB.SP.WIP<1,2>)
      IF A.SP.WIP # B.SP.WIP THEN
          PRINT @(32,11):OCONV(A.SP.WIP,"MD2,") "R#12":
      END
      T.A.SP.WIP = T.A.SP.WIP + A.SP.WIP
      PRINT @(32,19):OCONV(INT(T.A.SP.WIP/100+.5),"MD0,") "R#12":
      A.SP.COST = SUM(JOB.SP.COST)
      IF A.SP.COST # B.SP.COST THEN
          PRINT @(58,11):OCONV(A.SP.COST,"MD2,") "R#12":
      END
      T.A.SP.COST = T.A.SP.COST + A.SP.COST
      PRINT @(58,19):OCONV(INT(T.A.SP.COST/100+.5),"MD0,") "R#12":
*
      B.MS.WIP = SUM(JOB.MS.WIP<1,2>)
      PRINT @(19,12):OCONV(B.MS.WIP,"MD2,") "R#12":
      T.B.MS.WIP = T.B.MS.WIP + B.MS.WIP
      PRINT @(19,20):OCONV(INT(T.B.MS.WIP/100+.5),"MD0,") "R#12":
      B.MS.COST = SUM(JOB.MS.COST)
      PRINT @(45,12):OCONV(B.MS.COST,"MD2,") "R#12":
      T.B.MS.COST = T.B.MS.COST + B.MS.COST
      PRINT @(45,20):OCONV(INT(T.B.MS.COST/100+.5),"MD0,") "R#12":
      JOB.MS.WIP = ""
      GOSUB 3500
      A.MS.WIP = SUM(JOB.MS.WIP<1,2>)
      IF A.MS.WIP # B.MS.WIP THEN
          PRINT @(32,12):OCONV(A.MS.WIP,"MD2,") "R#12":
      END
      T.A.MS.WIP = T.A.MS.WIP + A.MS.WIP
      PRINT @(32,20):OCONV(INT(T.A.MS.WIP/100+.5),"MD0,") "R#12":
      A.MS.COST = SUM(JOB.MS.COST)
      IF A.MS.COST # B.MS.COST THEN
          PRINT @(58,12):OCONV(A.MS.COST,"MD2,") "R#12":
      END
      T.A.MS.COST = T.A.MS.COST + A.MS.COST
      PRINT @(58,20):OCONV(INT(T.A.MS.COST/100+.5),"MD0,") "R#12":
*
      GOSUB 4000
      A.WIP = SUM(JOB.WIP<1,2>)
      IF A.WIP # B.WIP THEN
          PRINT @(32,13):OCONV(A.WIP,"MD2,") "R#12":
      END
      T.A.WIP = T.A.WIP + A.WIP
      PRINT @(32,21):OCONV(INT(T.A.WIP/100+.5),"MD0,") "R#12":
      A.COST = JOB.TOT.COST
      IF A.COST # B.COST THEN
          PRINT @(58,13):OCONV(A.COST,"MD2,") "R#12":
      END
      T.A.COST = T.A.COST + A.COST
      PRINT @(58,21):OCONV(INT(T.A.COST/100+.5),"MD0,") "R#12":
*
      JB.C.CNT = JB.C.CNT + 1
      PRINT @(11,21):JB.C.CNT "R#7":
700 *
      BEGIN CASE
          CASE UPDATE.ALL
              VALUE = "F"
          CASE NO.PROMPT
              X = 0; Y = 23; TYP = 1; MAXL = 1; O.R = "O"
              PMSG = "Enter (U)pdate All, (F)ile, <RETURN>:"
              CALL EDIT.SUB
          CASE 1
              X = 0; Y = 23; TYP = 1; MAXL = 1; O.R = "O"
              PMSG = "Enter (N)o Prompt, (U)pdate All, (F)ile, <RETURN>:"
              CALL EDIT.SUB
      END CASE
      BEGIN CASE
          CASE VALUE = "F"
              MATWRITE JOB.REC ON JOB, JOB.ID
          CASE VALUE = "N"
              NO.PROMPT = 1; GOTO 700
          CASE VALUE = "U"
              UPDATE.ALL = 1; NO.PROMPT = 1
              MATWRITE JOB.REC ON JOB, JOB.ID
          CASE 1
              RELEASE JOB, JOB.ID
      END CASE
199 *
      FOR I = 7 TO 13
          PRINT @(3,I):CL:
          PRINT @(3,I+8):CL:
      NEXT I
      GOSUB 5000
  REPEAT
  GOTO 99999
*
*---- Build WIP for the master job.
3000 *
  DCNT = DCOUNT(JOB.INV.NO,VM)
  PRINT @(3,7):DCNT "R#7":
  IV.I.CNT = IV.I.CNT + DCNT
  PRINT @(3,15):IV.I.CNT "R#7":
  C.CNT = 0
  FOR DL = 1 TO DCNT
      MATREAD IVC.REC FROM INVOICE, CONO:JOB.INV.NO<1,DL> ELSE
          ERRMSG = "Cannot locate INVOICE (":JOB.INV.NO<1,DL>:")"
          GOSUB 91000; GOTO 3005
      END
      IF IVC.PROC.MON # "" AND (JOB.WIP<1,4> > IVC.PROC.MON OR JOB.WIP<1,4> = "") THEN
          JOB.WIP<1,4> = IVC.PROC.MON
      END
      IF JOB.WIP<1,5> < IVC.PROC.MON THEN
          JOB.WIP<1,5> = IVC.PROC.MON
      END
      TP = JOB.INV.NO<1,DL>[LEN(JOB.INV.NO<1,DL>)-1,2]
      BEGIN CASE
          CASE TP = "PP"
          CASE TP = "PB" AND IVC.PRE.BILL.MON = ""
              JOB.WIP<1,1> = JOB.WIP<1,1> + 1
          CASE TP = "PB" AND IVC.PRE.BILL.MON >= FR.CURR.PER<1,POS>
              JOB.WIP<1,1> = JOB.WIP<1,1> + 1
          CASE IVC.PROC.MON >= FR.CURR.PER<1,POS>
              JOB.WIP<1,1> = JOB.WIP<1,1> + 1
      END CASE
      C.CNT = C.CNT + 1
3005 *
  NEXT DL
  PRINT @(11,7):C.CNT "R#7":
  IV.C.CNT = IV.C.CNT + C.CNT
  PRINT @(11,15):IV.C.CNT "R#7":
  RETURN
*
*---- Build the labor entries.
3100 *
  JOB.LB.OPER = ""
  JOB.LB.HRS = ""
  JOB.LB.IMP = ""
  JOB.LB.DATE = ""
  JOB.LB.TCOST = ""
  JOB.LB.DCOST = ""
  JOB.LB.COST = ""
  JOB.LB.SALE = ""
  DCNT = DCOUNT(JOB.LB.SEQ,VM)
  I.CNT = 0; C.CNT = 0
  FOR DL = 1 TO DCNT
      DPNO = JOB.LB.DEPT<1,DL>
      CCNO = JOB.LB.CCTR<1,DL>
      PRINT @(7,3) :DPNO "L#5":
      PRINT @(23,3):CCNO "L#3":
      LB.ID = JOB.ID:"!":DPNO:"!":CCNO:"!"
      SCNT = JOB.LB.SEQ<1,DL>
      I.CNT = I.CNT + SCNT
      FOR S = 1 TO SCNT
          JLB.ID = LB.ID:S
          MATREAD JLB.REC FROM JOB.TIME, JLB.ID ELSE
              ERRMSG = "Cannot locate JOB.TIME"
              GOSUB 91000; GOTO 3105
          END
          IF JLB.TYPE = "" THEN JLB.TYPE = "R"
          LOCATE JLB.TYPE IN TYPES,1 SETTING TPTR ELSE
              ERRMSG = "Invalid JOB.TIME type (":JLB.TYPE:")"
              GOSUB 91000; GOTO 3105
          END
          IF NOT(NUM(JLB.HRS)) OR NOT(NUM(JLB.COST)) THEN
              ERRMSG = "Invalid JOB.TIME hrs/cost (":JLB.HRS:"/":JLB.COST:")"
              GOSUB 91000; GOTO 3105
          END
          C.CNT = C.CNT + 1
          GOSUB 3150
3105 *
      NEXT S
  NEXT DL
  PRINT @(3,8):I.CNT "R#7":
  PRINT @(11,8):C.CNT "R#7":
  LB.I.CNT = LB.I.CNT + I.CNT
  LB.C.CNT = LB.C.CNT + C.CNT
  PRINT @(3,16):LB.I.CNT "R#7":
  PRINT @(11,16):LB.C.CNT "R#7":
  RETURN
*
*--- Update Job LB totals
3150 *
  IF JLB.DATE >= JOB.LB.DATE<1,DL,1> THEN
      JOB.LB.DATE<1,DL,1> = JLB.DATE
  END
  IF JLB.SEQ > JOB.LB.DATE<1,DL,2> THEN
      JOB.LB.OPER<1,DL> = JLB.OPER
      JOB.LB.DATE<1,DL,2> = JLB.SEQ
      JOB.LB.DATE<1,DL,3> = JOB.LB.SEQ<1,DL>
  END
  JOB.LB.HRS<1,DL> = JOB.LB.HRS<1,DL> + JLB.HRS
  JOB.LB.IMP<1,DL> = JOB.LB.IMP<1,DL> + JLB.IMP
  JOB.LB.COST<1,DL> = JOB.LB.COST<1,DL> + JLB.COST
  LCNT = DCOUNT(JLB.DCOST,VM)
  FOR L = 1 TO LCNT
      JOB.LB.DCOST<1,DL,L> = JOB.LB.DCOST<1,DL,L> + JLB.DCOST<1,L>
  NEXT L
  JOB.LB.SALE<1,DL> = JOB.LB.SALE<1,DL> + JLB.SALE
  BEGIN CASE
      CASE NUM(JLB.CNCR)
          IF JLB.CNCR + 0 <> 0 THEN
              JOB.LB.TCOST<1,DL,5> = JOB.LB.TCOST<1,DL,5> + JLB.COST
          END
      CASE JLB.CNCR = "Y"
          JOB.LB.TCOST<1,DL,5> = JOB.LB.TCOST<1,DL,5> + JLB.COST
  END CASE
  JOB.LB.TCOST<1,DL,TPTR> = JOB.LB.TCOST<1,DL,TPTR> + JLB.COST
  JOB.TOT.DCOST = JOB.TOT.DCOST + JLB.DCOST<1,1>
  JOB.TOT.COST = JOB.TOT.COST + JLB.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JLB.SALE
  IF JLB.MON<1,1> # "" AND (JOB.LB.WIP<1,4> > JLB.MON<1,1> OR JOB.LB.WIP<1,4> = "") THEN
      JOB.LB.WIP<1,4> = JLB.MON<1,1>
  END
  IF JOB.LB.WIP<1,5> < JLB.MON<1,1> THEN
      JOB.LB.WIP<1,5> = JLB.MON<1,1>
  END
  IF JLB.WIP = '' THEN GOTO 3159
  WCNT = COUNT(JLB.WIP,VM) + 1
  LCNT = DCOUNT(JLB.WIP<1,1>,SVM)
  JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> + WCNT
  INV.WIP = ""
  IF JLB.MON<1,1> < FR.CURR.PER<1,POS> THEN
      JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> - 1
  END
  FOR W = 2 TO WCNT
      FOR L = 1 TO LCNT
          INV.WIP<L> = INV.WIP<L> - JLB.WIP<1,W,L>
      NEXT L
      IF JLB.MON<1,W> < FR.CURR.PER<1,POS> THEN
          JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> - 1
      END
      IF JLB.MON<1,W> # "" AND (JOB.LB.WIP<1,4> > JLB.MON<1,W> OR JOB.LB.WIP<1,4> = "") THEN
          JOB.LB.WIP<1,4> = JLB.MON<1,W>
      END
      IF JOB.LB.WIP<1,5> < JLB.MON<1,W> THEN
          JOB.LB.WIP<1,5> = JLB.MON<1,W>
      END
  NEXT W
  TRN.WIP = 0
  FOR L = 1 TO LCNT
      T.WIP = JLB.WIP<1,1,L> - INV.WIP<L>
      TRN.WIP = TRN.WIP + T.WIP
      JOB.LB.WIP<1,2,L> = JOB.LB.WIP<1,2,L> + T.WIP
      JOB.LB.WIP<1,3,L> = JOB.LB.WIP<1,3,L> + INV.WIP<L>
  NEXT L
  IF TRN.WIP <> 0 THEN
      JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> + 1
  END
3159 *
  RETURN
*
*---- Build the material entries.
3200 *
  JOB.MT.QTY = ""
  JOB.MT.DATE = ""
  JOB.MT.TCOST = ""
  JOB.MT.DCOST = ""
  JOB.MT.COST = ""
  JOB.MT.SALE = ""
  DCNT = DCOUNT(JOB.MT.SEQ,VM)
  I.CNT = 0; C.CNT = 0
  FOR DL = 1 TO DCNT
      DPNO = JOB.MT.DEPT<1,DL>
      CCNO = JOB.MT.CCTR<1,DL>
      PDNO = JOB.MT.PROD<1,DL>
      WHNO = JOB.MT.WHSE<1,DL>
      PRINT @(7,3) :DPNO "L#5":
      PRINT @(23,3):CCNO "L#3":
      PRINT @(46,3):PDNO "L#15":
      PRINT @(74,3):WHNO "L#4":
      PTR = 1
      LOOP
          LOCATE PDNO IN JOB.RESV.MATL<1>,PTR SETTING MLOC THEN
              IF WHNO = JOB.RESV.WHSE<1,MLOC> THEN
                  PTR = 0
              END
          END ELSE
              JOB.RESV.MATL<1,MLOC> = PDNO
              JOB.RESV.WHSE<1,MLOC> = WHNO
              JOB.RESV.DATE<1,MLOC> = 'NOT RESV'
              JOB.ALOC.QTY<1,MLOC> = 0
              JOB.RESV.QTY<1,MLOC> = 0
              JOB.USED.QTY<1,MLOC> = 0
              JOB.ALOC.AMT<1,MLOC> = 0
              JOB.RESV.AMT<1,MLOC> = 0
              JOB.USED.AMT<1,MLOC> = 0
              PTR = 0
          END
      WHILE PTR DO
          PTR = MLOC + 1
      REPEAT
      JOB.USED.QTY<1,MLOC> = 0
      JOB.USED.AMT<1,MLOC> = 0
      MT.ID = JOB.ID:"!":DPNO:"!":CCNO:"!":PDNO:"!":WHNO:"!"
      SCNT = JOB.MT.SEQ<1,DL>
      I.CNT = I.CNT + SCNT
      FOR S = 1 TO SCNT
          JMT.ID = MT.ID:S
          MATREAD JMT.REC FROM JOB.MATL, JMT.ID ELSE
              ERRMSG = "Cannot locate JOB.MATL"
              GOSUB 91000; GOTO 3205
          END
          IF JMT.TYPE = "" THEN JMT.TYPE = "R"
          LOCATE JMT.TYPE IN TYPES,1 SETTING TPTR ELSE
              ERRMSG = "Invalid JOB.MATL type (":JMT.TYPE:")"
              GOSUB 91000; GOTO 3205
          END
          IF NOT(NUM(JMT.QTY)) OR NOT(NUM(JMT.COST)) THEN
              ERRMSG = "Invalid JOB.MATL qty/cost (":JMT.QTY:"/":JMT.COST:")"
              GOSUB 91000; GOTO 3205
          END
          C.CNT = C.CNT + 1
          GOSUB 3250
3205 *
      NEXT S
  NEXT DL
  PRINT @(46,3):SPACE(15):
  PRINT @(74,3):SPACE(4):
  PRINT @(3,9):I.CNT "R#7":
  PRINT @(11,9):C.CNT "R#7":
  MT.I.CNT = MT.I.CNT + I.CNT
  MT.C.CNT = MT.C.CNT + C.CNT
  PRINT @(3,17):MT.I.CNT "R#7":
  PRINT @(11,17):MT.C.CNT "R#7":
  RETURN
*
*--- Update Job MT totals
3250 *
  STD.PRICE = JMT.DCOST<1,1> + JMT.DCOST<1,2>
  JOB.USED.AMT<1,MLOC> = JOB.USED.AMT<1,MLOC> + STD.PRICE
  JOB.USED.QTY<1,MLOC> = JOB.USED.QTY<1,MLOC> + JMT.QTY
  JOB.MT.QTY<1,DL> = JOB.MT.QTY<1,DL> + JMT.QTY
  IF JMT.DATE > JOB.MT.DATE<1,DL,1> THEN
      JOB.MT.DATE<1,DL,1> = JMT.DATE
  END
  IF JMT.SEQ > JOB.MT.DATE<1,DL,2> THEN
      JOB.MT.DATE<1,DL,2> = JMT.SEQ
      JOB.MT.DATE<1,DL,3> = JOB.MT.SEQ<1,DL>
  END
  LCNT = DCOUNT(JMT.DCOST,VM)
  FOR L = 1 TO LCNT
      JOB.MT.DCOST<1,DL,L> = JOB.MT.DCOST<1,DL,L> + JMT.DCOST<1,L>
  NEXT L
  JOB.TOT.DCOST = JOB.TOT.DCOST + STD.PRICE
  JOB.MT.COST<1,DL> = JOB.MT.COST<1,DL> + JMT.COST
  JOB.MT.SALE<1,DL> = JOB.MT.SALE<1,DL> + JMT.SALE
  JOB.MT.TCOST<1,DL,TPTR> = JOB.MT.TCOST<1,DL,TPTR> + JMT.COST
  JOB.TOT.COST = JOB.TOT.COST + JMT.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JMT.SALE
  IF JMT.MON<1,1> # "" AND (JOB.MT.WIP<1,4> > JMT.MON<1,1> OR JOB.MT.WIP<1,4> = "") THEN
      JOB.MT.WIP<1,4> = JMT.MON<1,1>
  END
  IF JOB.MT.WIP<1,5> < JMT.MON<1,1> THEN
      JOB.MT.WIP<1,5> = JMT.MON<1,1>
  END
  IF JMT.WIP = '' THEN GOTO 3259
  WCNT = COUNT(JMT.WIP,VM) + 1
  JOB.MT.WIP<1,1> = JOB.MT.WIP<1,1> + WCNT
  IF JMT.MON<1,1> < FR.CURR.PER<1,POS> THEN
      JOB.MT.WIP<1,1> = JOB.MT.WIP<1,1> - 1
  END
  INV.WIP = ""
  FOR W = 2 TO WCNT
      FOR L = 1 TO 3
          INV.WIP<L> = INV.WIP<L> - JMT.WIP<1,W,L>
      NEXT L
      IF JMT.MON<1,W> < FR.CURR.PER<1,POS> THEN
          JOB.MT.WIP<1,1> = JOB.MT.WIP<1,1> - 1
      END
      IF JMT.MON<1,W> # "" AND (JOB.MT.WIP<1,4> > JMT.MON<1,W> OR JOB.MT.WIP<1,4> = "") THEN
          JOB.MT.WIP<1,4> = JMT.MON<1,W>
      END
      IF JOB.MT.WIP<1,5> < JMT.MON<1,W> THEN
          JOB.MT.WIP<1,5> = JMT.MON<1,W>
      END
  NEXT W
  TRN.WIP = 0
  FOR L = 1 TO 3
      T.WIP = JMT.WIP<1,1,L> - INV.WIP<L>
      TRN.WIP = TRN.WIP + T.WIP
      JOB.MT.WIP<1,2,L> = JOB.MT.WIP<1,2,L> + T.WIP
      JOB.MT.WIP<1,3,L> = JOB.MT.WIP<1,3,L> + INV.WIP<L>
  NEXT L
  IF TRN.WIP <> 0 THEN
      JOB.MT.WIP<1,1> = JOB.MT.WIP<1,1> + 1
  END
3259 *
  RETURN
*
*---- Build the outside purchase entries.
3300 *
  JOB.OS.VEND = ""
  JOB.OS.QTY = ""
  JOB.OS.DATE = ""
  JOB.OS.TCOST = ""
  JOB.OS.DCOST = ""
  JOB.OS.COST = ""
  JOB.OS.SALE = ""
  DCNT = DCOUNT(JOB.OS.SEQ,VM)
  I.CNT = 0; C.CNT = 0
  FOR DL = 1 TO DCNT
      DPNO = JOB.OS.DEPT<1,DL>
      CCNO = JOB.OS.CCTR<1,DL>
      PLNO = JOB.OS.PLINE<1,DL>
      PRINT @(7,3) :DPNO "L#5":
      PRINT @(23,3):CCNO "L#3":
      PRINT @(46,3):PLNO "L#15":
      OS.ID = JOB.ID:"!":DPNO:"!":CCNO:"!":PLNO:"!"
      SCNT = JOB.OS.SEQ<1,DL>
      I.CNT = I.CNT + SCNT
      FOR S = 1 TO SCNT
          JOS.ID = OS.ID:S
          MATREAD JOS.REC FROM JOB.OSP, JOS.ID ELSE
              ERRMSG = "Cannot locate JOB.OSP"
              GOSUB 91000; GOTO 3305
          END
          IF JOS.TYPE = "" THEN JOS.TYPE = "R"
          LOCATE JOS.TYPE IN TYPES,1 SETTING TPTR ELSE
              ERRMSG = "Invalid JOB.OSP type (":JOS.TYPE:")"
              GOSUB 91000; GOTO 3305
          END
          IF NOT(NUM(JOS.QTY)) OR NOT(NUM(JOS.COST)) THEN
              ERRMSG = "Invalid JOB.OSP qty/cost (":JOS.QTY:"/":JOS.COST:")"
              GOSUB 91000; GOTO 3305
          END
          C.CNT = C.CNT + 1
          GOSUB 3350
3305 *
      NEXT S
  NEXT DL
  PRINT @(46,3):SPACE(15):
  PRINT @(3,10):I.CNT "R#7":
  PRINT @(11,10):C.CNT "R#7":
  OS.I.CNT = OS.I.CNT + I.CNT
  OS.C.CNT = OS.C.CNT + C.CNT
  PRINT @(3,18):OS.I.CNT "R#7":
  PRINT @(11,18):OS.C.CNT "R#7":
  RETURN
*
*--- Update Job OS totals
3350 *
  JOB.OS.QTY<1,DL> = JOB.OS.QTY<1,DL> + JOS.QTY
  JOB.OS.DCOST<1,DL> = JOB.OS.DCOST<1,DL> + JOS.DCOST
  JOB.OS.COST<1,DL> = JOB.OS.COST<1,DL> + JOS.COST
  IF JOS.DATE > JOB.OS.DATE<1,DL,1> THEN
      JOB.OS.DATE<1,DL,1> = JOS.DATE
  END
  IF JOS.SEQ > JOB.OS.DATE<1,DL,2> THEN
      JOB.OS.VEND<1,DL> = JOS.VEND
      JOB.OS.DATE<1,DL,2> = JOS.SEQ
      JOB.OS.DATE<1,DL,3> = JOB.OS.SEQ<1,DL>
  END
  JOB.OS.SALE<1,DL> = JOB.OS.SALE<1,DL> + JOS.SALE
  JOB.OS.TCOST<1,DL,TPTR> = JOB.OS.TCOST<1,DL,TPTR> + JOS.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JOS.SALE
  JOB.TOT.COST = JOB.TOT.COST + JOS.COST
  JOB.TOT.DCOST = JOB.TOT.DCOST + JOS.DCOST
  IF JOS.MON<1,1> # "" AND (JOB.OS.WIP<1,4> > JOS.MON<1,1> OR JOB.OS.WIP<1,4> = "") THEN
      JOB.OS.WIP<1,4> = JOS.MON<1,1>
  END
  IF JOB.OS.WIP<1,5> < JOS.MON<1,1> THEN
      JOB.OS.WIP<1,5> = JOS.MON<1,1>
  END
  IF JOS.WIP = '' THEN GOTO 3359
  WCNT = COUNT(JOS.WIP,VM) + 1
  JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> + WCNT
  IF JOS.MON<1,1> < FR.CURR.PER<1,POS> THEN
      JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> - 1
  END
  INV.WIP = ""
  FOR W = 2 TO WCNT
      FOR L = 1 TO 2
          INV.WIP<L> = INV.WIP<L> - JOS.WIP<1,W,L>
      NEXT L
      IF JOS.MON<1,W> < FR.CURR.PER<1,POS> THEN
          JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> - 1
      END
      IF JOS.MON<1,W> # "" AND (JOB.OS.WIP<1,4> > JOS.MON<1,W> OR JOB.OS.WIP<1,4> = "") THEN
          JOB.OS.WIP<1,4> = JOS.MON<1,W>
      END
      IF JOB.OS.WIP<1,5> < JOS.MON<1,W> THEN
          JOB.OS.WIP<1,5> = JOS.MON<1,W>
      END
  NEXT W
  TRN.WIP = 0
  FOR L = 1 TO 2
      T.WIP = JOS.WIP<1,1,L> - INV.WIP<L>
      TRN.WIP = TRN.WIP + T.WIP
      JOB.OS.WIP<1,2,L> = JOB.OS.WIP<1,2,L> + T.WIP
      JOB.OS.WIP<1,3,L> = JOB.OS.WIP<1,3,L> + INV.WIP<L>
  NEXT L
  IF TRN.WIP <> 0 THEN
      JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> + 1
  END
3359 *
  RETURN
*
*---- Build the shipping entries.
3400 *
  JOB.SP.OPER = ""
  JOB.SP.QTY = ""
  JOB.SP.VIA = ""
  JOB.SP.DATE = ""
  JOB.SP.TCOST = ""
  JOB.SP.DCOST = ""
  JOB.SP.COST = ""
  JOB.SP.SALE = ""
  DCNT = DCOUNT(JOB.SP.SEQ,VM)
  I.CNT = 0; C.CNT = 0
  FOR DL = 1 TO DCNT
      DPNO = JOB.SP.DEPT<1,DL>
      CCNO = JOB.SP.CCTR<1,DL>
      PRINT @(7,3) :DPNO "L#5":
      PRINT @(23,3):CCNO "L#3":
      SP.ID = JOB.ID:"!":DPNO:"!":CCNO:"!"
      SCNT = JOB.SP.SEQ<1,DL>
      I.CNT = I.CNT + SCNT
      FOR S = 1 TO SCNT
          JSP.ID = SP.ID:S
          MATREAD JSP.REC FROM JOB.SHIP, JSP.ID ELSE
              ERRMSG = "Cannot locate JOB.SHIP"
              GOSUB 91000; GOTO 3405
          END
          IF JSP.TYPE = "" THEN JSP.TYPE = "R"
          LOCATE JSP.TYPE IN TYPES,1 SETTING TPTR ELSE
              ERRMSG = "Invalid JOB.SHIP type (":JSP.TYPE:")"
              GOSUB 91000; GOTO 3405
          END
          IF NOT(NUM(JSP.QTY)) OR NOT(NUM(JSP.COST)) THEN
              ERRMSG = "Invalid JOB.SHIP qty/cost (":JSP.QTY:"/":JSP.COST:")"
              GOSUB 91000; GOTO 3405
          END
          C.CNT = C.CNT + 1
          GOSUB 3450
3405 *
      NEXT S
  NEXT DL
  PRINT @(3,11):I.CNT "R#7":
  PRINT @(11,11):C.CNT "R#7":
  SP.I.CNT = SP.I.CNT + I.CNT
  SP.C.CNT = SP.C.CNT + C.CNT
  PRINT @(3,19):SP.I.CNT "R#7":
  PRINT @(11,19):SP.C.CNT "R#7":
  RETURN
*
*--- Update Job SP totals
3450 *
  IF JSP.DATE > JOB.SP.DATE<1,DL,1> THEN
      JOB.SP.DATE<1,DL,1> = JSP.DATE
  END
  IF JSP.SEQ > JOB.SP.DATE<1,DL,2> THEN
      JOB.SP.OPER<1,DL> = JSP.OPER
      JOB.SP.VIA<1,DL> = JSP.VIA
      JOB.SP.DATE<1,DL,2> = JSP.SEQ
      JOB.SP.DATE<1,DL,3> = JOB.SP.SEQ<1,DL>
  END
  JOB.SP.SALE<1,DL> = JOB.SP.SALE<1,DL> + JSP.SALE
  JOB.SP.COST<1,DL> = JOB.SP.COST<1,DL> + JSP.COST
  JOB.SP.DCOST<1,DL> = JOB.SP.DCOST<1,DL> + JSP.DCOST
  JOB.SP.QTY<1,DL> = JOB.SP.QTY<1,DL> + JSP.QTY
  JOB.SP.TCOST<1,DL,TPTR> = JOB.SP.TCOST<1,DL,TPTR> + JSP.COST
  JOB.TOT.DCOST = JOB.TOT.DCOST + JSP.DCOST
  JOB.TOT.COST = JOB.TOT.COST + JSP.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JSP.SALE
  JOB.QTY<1,2> = JOB.QTY<1,2> + JSP.QTY
  JOB.QTY<1,3> = JOB.QTY<1,3> + JSP.QTY
  IF JSP.MON<1,1> # "" AND (JOB.SP.WIP<1,4> > JSP.MON<1,1> OR JOB.SP.WIP<1,4> = "") THEN
      JOB.SP.WIP<1,4> = JSP.MON<1,1>
  END
  IF JOB.SP.WIP<1,5> < JSP.MON<1,1> THEN
      JOB.SP.WIP<1,5> = JSP.MON<1,1>
  END
  IF JSP.WIP = '' THEN GOTO 3459
  WCNT = COUNT(JSP.WIP,VM) + 1
  JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> + WCNT
  IF JSP.MON<1,1> < FR.CURR.PER<1,POS> THEN
      JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> - 1
  END
  INV.WIP = ""
  FOR W = 2 TO WCNT
      FOR L = 1 TO 2
          INV.WIP<L> = INV.WIP<L> - JSP.WIP<1,W,L>
      NEXT L
      IF JSP.MON<1,W> < FR.CURR.PER<1,POS> THEN
          JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> - 1
      END
      IF JSP.MON<1,W> # "" AND (JOB.SP.WIP<1,4> > JSP.MON<1,W> OR JOB.SP.WIP<1,4> = "") THEN
          JOB.SP.WIP<1,4> = JSP.MON<1,W>
      END
      IF JOB.SP.WIP<1,5> < JSP.MON<1,W> THEN
          JOB.SP.WIP<1,5> = JSP.MON<1,W>
      END
  NEXT W
  TRN.WIP = 0
  FOR L = 1 TO 2
      T.WIP = JSP.WIP<1,1,L> - INV.WIP<L>
      TRN.WIP = TRN.WIP + T.WIP
      JOB.SP.WIP<1,2,L> = JOB.SP.WIP<1,2,L> + T.WIP
      JOB.SP.WIP<1,3,L> = JOB.SP.WIP<1,3,L> + INV.WIP<L>
  NEXT L
  IF TRN.WIP <> 0 THEN
      JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> + 1
  END
3459 *
  RETURN
*
*---- Build the miscellaneous entries.
3500 *
  JOB.MS.OPER = ""
  JOB.MS.DATE = ""
  JOB.MS.TCOST = ""
  JOB.MS.DCOST = ""
  JOB.MS.COST = ""
  JOB.MS.SALE = ""
  DCNT = DCOUNT(JOB.MS.SEQ,VM)
  I.CNT = 0; C.CNT = 0
  FOR DL = 1 TO DCNT
      DPNO = JOB.MS.DEPT<1,DL>
      CCNO = JOB.MS.CCTR<1,DL>
      PRINT @(7,3) :DPNO "L#5":
      PRINT @(23,3):CCNO "L#3":
      MS.ID = JOB.ID:"!":DPNO:"!":CCNO:"!"
      SCNT = JOB.MS.SEQ<1,DL>
      I.CNT = I.CNT + SCNT
      FOR S = 1 TO SCNT
          JMS.ID = MS.ID:S
          MATREAD JMS.REC FROM JOB.MISC, JMS.ID ELSE
              ERRMSG = "Cannot locate JOB.MISC"
              GOSUB 91000; GOTO 3505
          END
          IF JMS.TYPE = "" THEN JMS.TYPE = "R"
          LOCATE JMS.TYPE IN TYPES,1 SETTING TPTR ELSE
              ERRMSG = "Invalid JOB.MISC type (":JMS.TYPE:")"
              GOSUB 91000; GOTO 3505
          END
          IF NOT(NUM(JMS.COST)) THEN
              ERRMSG = "Invalid JOB.MISC cost (":JMS.COST:")"
              GOSUB 91000; GOTO 3505
          END
          C.CNT = C.CNT + 1
          GOSUB 3550
3505 *
      NEXT S
  NEXT DL
  PRINT @(7,3) :SPACE(5):
  PRINT @(23,3):SPACE(3):
  PRINT @(3,12):I.CNT "R#7":
  PRINT @(11,12):C.CNT "R#7":
  MS.I.CNT = MS.I.CNT + I.CNT
  MS.C.CNT = MS.C.CNT + C.CNT
  PRINT @(3,20):MS.I.CNT "R#7":
  PRINT @(11,20):MS.C.CNT "R#7":
  RETURN
*
*--- Update Job MS totals
3550 *
  IF JMS.DATE > JOB.MS.DATE<1,DL,1> THEN
      JOB.MS.DATE<1,DL,1> = JMS.DATE
  END
  IF JMS.SEQ > JOB.MS.DATE<1,DL,2> THEN
      JOB.MS.OPER<1,DL> = JMS.OPER
      JOB.MS.DATE<1,DL,2> = JMS.SEQ
      JOB.MS.DATE<1,DL,3> = JOB.MS.SEQ<1,DL>
  END
  JOB.MS.DCOST<1,DL> = JOB.MS.DCOST<1,DL> + JMS.DCOST
  JOB.MS.COST<1,DL> = JOB.MS.COST<1,DL> + JMS.COST
  JOB.MS.SALE<1,DL> = JOB.MS.SALE<1,DL> + JMS.SALE
  JOB.MS.TCOST<1,DL,TPTR> = JOB.MS.TCOST<1,DL,TPTR> + JMS.COST
  JOB.TOT.DCOST = JOB.TOT.DCOST + JMS.DCOST
  JOB.TOT.COST = JOB.TOT.COST + JMS.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JMS.SALE
  IF JMS.MON<1,1> # "" AND (JOB.MS.WIP<1,4> > JMS.MON<1,1> OR JOB.MS.WIP<1,4> = "") THEN
      JOB.MS.WIP<1,4> = JMS.MON<1,1>
  END
  IF JOB.MS.WIP<1,5> < JMS.MON<1,1> THEN
      JOB.MS.WIP<1,5> = JMS.MON<1,1>
  END
  IF JMS.WIP = '' THEN GOTO 3559
  WCNT = COUNT(JMS.WIP,VM) + 1
  JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> + WCNT
  IF JMS.MON<1,1> < FR.CURR.PER<1,POS> THEN
      JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> - 1
  END
  INV.WIP = ""
  FOR W = 2 TO WCNT
      FOR L = 1 TO 2
          INV.WIP<L> = INV.WIP<L> - JMS.WIP<1,W,L>
      NEXT L
      IF JMS.MON<1,W> < FR.CURR.PER<1,POS> THEN
          JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> - 1
      END
      IF JMS.MON<1,W> # "" AND (JOB.MS.WIP<1,4> > JMS.MON<1,W> OR JOB.MS.WIP<1,4> = "") THEN
          JOB.MS.WIP<1,4> = JMS.MON<1,W>
      END
      IF JOB.MS.WIP<1,5> < JMS.MON<1,W> THEN
          JOB.MS.WIP<1,5> = JMS.MON<1,W>
      END
  NEXT W
  TRN.WIP = 0
  FOR L = 1 TO 2
      T.WIP = JMS.WIP<1,1,L> - INV.WIP<L>
      TRN.WIP = TRN.WIP + T.WIP
      JOB.MS.WIP<1,2,L> = JOB.MS.WIP<1,2,L> + T.WIP
      JOB.MS.WIP<1,3,L> = JOB.MS.WIP<1,3,L> + INV.WIP<L>
  NEXT L
  IF TRN.WIP <> 0 THEN
      JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> + 1
  END
3559 *
  RETURN
*
*---- Total the job values.
4000 *
  JOB.WIP<1,1> = JOB.WIP<1,1>+JOB.LB.WIP<1,1>+JOB.MT.WIP<1,1>+JOB.OS.WIP<1,1>+JOB.SP.WIP<1,1>+JOB.MS.WIP<1,1>
  FOR L = 1 TO 2
      JOB.WIP<1,2,L> = JOB.WIP<1,2,L>+JOB.LB.WIP<1,2,L>+JOB.MT.WIP<1,2,L>+JOB.OS.WIP<1,2,L>+JOB.SP.WIP<1,2,L>+JOB.MS.WIP<1,2,L>
      JOB.WIP<1,3,L> = JOB.WIP<1,3,L>+JOB.LB.WIP<1,3,L>+JOB.MT.WIP<1,3,L>+JOB.OS.WIP<1,3,L>+JOB.SP.WIP<1,3,L>+JOB.MS.WIP<1,3,L>
  NEXT L
  JOB.WIP<1,2,3> = JOB.WIP<1,2,3>+JOB.LB.WIP<1,2,3>+JOB.MT.WIP<1,2,3>
  JOB.WIP<1,3,3> = JOB.WIP<1,3,3>+JOB.LB.WIP<1,3,3>+JOB.MT.WIP<1,3,3>
  JOB.WIP<1,2,4> = JOB.WIP<1,2,4>+JOB.LB.WIP<1,2,4>
  JOB.WIP<1,3,4> = JOB.WIP<1,3,4>+JOB.LB.WIP<1,3,4>
  IF JOB.LB.WIP<1,4> # "" AND (JOB.WIP<1,4> > JOB.LB.WIP<1,4> OR JOB.WIP<1,4> = "") THEN
      JOB.WIP<1,4> = JOB.LB.WIP<1,4>
  END
  IF JOB.WIP<1,5> < JOB.LB.WIP<1,5> THEN
      JOB.WIP<1,5> = JOB.LB.WIP<1,5>
  END
  IF JOB.MT.WIP<1,4> # "" AND (JOB.WIP<1,4> > JOB.MT.WIP<1,4> OR JOB.WIP<1,4> = "") THEN
      JOB.WIP<1,4> = JOB.MT.WIP<1,4>
  END
  IF JOB.WIP<1,5> < JOB.MT.WIP<1,5> THEN
      JOB.WIP<1,5> = JOB.MT.WIP<1,5>
  END
  IF JOB.OS.WIP<1,4> # "" AND (JOB.WIP<1,4> > JOB.OS.WIP<1,4> OR JOB.WIP<1,4> = "") THEN
      JOB.WIP<1,4> = JOB.OS.WIP<1,4>
  END
  IF JOB.WIP<1,5> < JOB.OS.WIP<1,5> THEN
      JOB.WIP<1,5> = JOB.OS.WIP<1,5>
  END
  IF JOB.SP.WIP<1,4> # "" AND (JOB.WIP<1,4> > JOB.SP.WIP<1,4> OR JOB.WIP<1,4> = "") THEN
      JOB.WIP<1,4> = JOB.SP.WIP<1,4>
  END
  IF JOB.WIP<1,5> < JOB.SP.WIP<1,5> THEN
      JOB.WIP<1,5> = JOB.SP.WIP<1,5>
  END
  IF JOB.MS.WIP<1,4> # "" AND (JOB.WIP<1,4> > JOB.MS.WIP<1,4> OR JOB.WIP<1,4> = "") THEN
      JOB.WIP<1,4> = JOB.MS.WIP<1,4>
  END
  IF JOB.WIP<1,5> < JOB.MS.WIP<1,5> THEN
      JOB.WIP<1,5> = JOB.MS.WIP<1,5>
  END
  RETURN
*
5000*
  JB.I.CNT = 0; JB.C.CNT = 0
  T.B.WIP = 0; T.B.COST = 0
  T.A.WIP = 0; T.A.COST = 0
  IV.I.CNT = 0; IV.C.CNT = 0
  LB.I.CNT = 0; LB.C.CNT = 0
  T.B.LB.WIP = 0; T.B.LB.COST = 0
  T.A.LB.WIP = 0; T.A.LB.COST = 0
  MT.I.CNT = 0; MT.C.CNT = 0
  T.B.MT.WIP = 0; T.B.MT.COST = 0
  T.A.MT.WIP = 0; T.A.MT.COST = 0
  OS.I.CNT = 0; OS.C.CNT = 0
  T.B.OS.WIP = 0; T.B.OS.COST = 0
  T.A.OS.WIP = 0; T.A.OS.COST = 0
  SP.I.CNT = 0; SP.C.CNT = 0
  T.B.SP.WIP = 0; T.B.SP.COST = 0
  T.A.SP.WIP = 0; T.A.SP.COST = 0
  MS.I.CNT = 0; MS.C.CNT = 0
  T.B.MS.WIP = 0; T.B.MS.COST = 0
  T.A.MS.WIP = 0; T.A.MS.COST = 0
  RETURN
*
*--- Error message routine
91000 *
  PRINT @(0,23):ERRMSG:CL:
  IF NOT(NO.PROMPT) THEN
      INPUT XX:
      PRINT @(0,23):CL:
  END
  RETURN
99999 *
END
