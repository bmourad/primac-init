*COPY>PMC.CPYLIB>PMC_PROCESS
*COPY>PMC.CPYLIB>PMC_PROCESS_XREF
*COPY>CPYLIB>CHAR
   OPEN '','PMC_PROCESS' TO PMC_PROCESS ELSE PRINT 'UNABLE TO OPEN PMC_PROCESS' ; STOP
   OPEN '','PMC_PROCESS_XREF' TO PMC_PROCESS_XREF ELSE PRINT 'UNABLE TO OPEN PMC_PROCESS_XREF' ; STOP
   OPEN '','PRIMAC.MENUS' TO PRIMAC.MENUS ELSE PRINT 'UNABLE TO OPEN PRIMAC.MENUS' ; STOP
   OPEN '','CBA.MENUS' TO CBA.MENUS ELSE PRINT 'UNABLE TO OPEN CBA.MENUS' ; STOP
*
*--- MAIN PROCESS
*
   GOSUB CLEAR_PPS.MENU
*
   MENUID = "M.MASTER"
   MENUFILE = PRIMAC.MENUS
   GOSUB PROCESS_MENUS
*
   MENUID = "M.CBA"
   MENUFILE = CBA.MENUS
   GOSUB PROCESS_MENUS
*
   GOSUB UPDATE_PMC_PROCESS_XREF
   STOP
*
*--- SUBROUTINES
*
CLEAR_PPS.MENU: 
   SELECT PMC_PROCESS
*
   LOOP.DONE = 0
   LOOP
     READNEXT ID ELSE LOOP.DONE = 1
   UNTIL (LOOP.DONE) DO
     MATREADU PPS.REC FROM PMC_PROCESS, ID THEN
       PPS.MENU = ""
       MATWRITE PPS.REC ON PMC_PROCESS, ID
     END ELSE
       RELEASE PMC_PROCESS, ID
     END
   REPEAT
   RETURN
*
PROCESS_MENUS: 
   PTR = 0
   LOOP.DONE = 0
   LOOP
     PTR += 1
     IF MENUID<PTR> = "" THEN LOOP.DONE = 1
   UNTIL (LOOP.DONE) DO
     READ MENUREC FROM MENUFILE, MENUID<PTR> ELSE MENUREC = ""
     MCNT = DCOUNT(MENUREC,AM)
     FOR MM = 2 TO MCNT
       BEGIN CASE
         CASE MENUREC<MM,1>[1,1] = "C"
         CASE MENUREC<MM,1>[1,2] = "M."
           MENUID<-1> = MENUREC<MM,1>
         CASE 1
           GOSUB UPDATE_PMC_PROCESS
       END CASE
     NEXT MM
   REPEAT
   RETURN
*
UPDATE_PMC_PROCESS: 
   MATREAD PPSX.REC FROM PMC_PROCESS_XREF, MENUREC<MM,1> ELSE RETURN
   MATREADU PPS.REC FROM PMC_PROCESS, PPSX.PROCESS.ID THEN
     LOCATE MENUID<PTR> IN PPS.MENU<1>,1 SETTING FND ELSE
       PPS.MENU<1,FND> = MENUID<PTR>
     END
     MATWRITE PPS.REC ON PMC_PROCESS, PPSX.PROCESS.ID
   END ELSE
     RELEASE PMC_PROCESS, PPSX.PROCESS.ID
   END
   RETURN
*
UPDATE_PMC_PROCESS_XREF: 
   SELECT PMC_PROCESS
*
   LOOP.DONE = 0
   LOOP
     READNEXT ID ELSE LOOP.DONE = 1
   UNTIL (LOOP.DONE) DO
     MATREAD PPS.REC FROM PMC_PROCESS, ID ELSE MAT PPS.REC = ""
     IF PPS.VOC # "" THEN
       MATREADU PPSX.REC FROM PMC_PROCESS_XREF, PPS.VOC ELSE
         MAT PPSX.REC = ""
       END
       IF PPSX.PROCESS.ID = "" THEN PPSX.PROCESS.ID = ID
       IF PPSX.PROCESS.ID = ID THEN
         PPSX.MENU = PPS.MENU
       END ELSE
         PRINT "MISMATCH 1- ":PPS.VOC:" (":PPSX.PROCESS.ID:",":ID:")"
       END
       MATWRITE PPSX.REC ON PMC_PROCESS_XREF, PPS.VOC
     END
   REPEAT
*
   SELECT PMC_PROCESS_XREF
*
   LOOP.DONE = 0
   LOOP
     READNEXT ID ELSE LOOP.DONE = 1
   UNTIL (LOOP.DONE) DO
     MATREADU PPSX.REC FROM PMC_PROCESS_XREF, ID THEN
       MATREAD PPS.REC FROM PMC_PROCESS, PPSX.PROCESS.ID ELSE MAT PPS.REC = ""
       IF PPS.VOC = ID THEN
         PPSX.MENU = PPS.MENU
       END ELSE
         PRINT "MISMATCH 2- ":PPSX.PROCESS.ID:" (":PPS.VOC:",":ID:")"
       END
     END ELSE
       RELEASE PMC_PROCESS_XREF, ID
     END
   REPEAT
   RETURN
*
*--- END OF PROGRAM
*
 END
