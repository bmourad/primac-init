      SUBROUTINE QPL.SCREEN.TUF(ACTION, CONO, SNAME, MAT QPSCN.REC, QPL.PROMPT)
*********************************************************************
*
* PROGRAM  - QPL.SCREEN.TUF
*
* AUTHOR   - DIANE TOVAR, Computer Business Associates
*
* DATE     - 10/07/93
*
* DESCRIPTION
*
* This subroutine is used to generate a gui form for SB Client, called by
* QPL.SCREEN.MAINT.
*
*T21177 diane 01/29/1997 * FIX FORM WHEN NO INPUT
*T21862 diane 06/10/1997 * Expand prompt input area
*T21177 diane 11/12/1997 * Fix labels without reference, build input
*                        * without reference
*T21177 diane 12/02/1997 * Fix last row overlay with prompt for multi col
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>QPL.SCREEN
*COPY>JES.CPYLIB>QPL.PROMPT
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN FILES
*
      TFILE = "PMCFORMS"
      OPEN "",TFILE TO TUFORMS ELSE
         ERRMSG = "CANNOT OPEN FORM FILE ":TFILE
         GOTO 93000
      END
*
*---- INITIALIZATION
*
      GUI.UPDATED = 0
      T.USERDATA = ""
*
*---- MAIN PROCESSING
*
100*
      ERRMSG = ''
      READU BLD.TUF.SCRN FROM TUFORMS, SNAME THEN
         BLD.TUF.SCRN = ''
         NEW.TUF = 0
      END ELSE
         BLD.TUF.SCRN = ''
         NEW.TUF = 1
      END
      GOSUB 1000
      GOSUB 2000
*
      T.LASTY = 0
      PMCREF = 0     ;*DT21177
      PCNT = DCOUNT(QPSCN.PID,VM)
      FOR PPTR = 1 TO PCNT
         PID = QPSCN.PID<1,PPTR>
         MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:PID THEN
            REF = QPSCN.REF<1,PPTR>
            T.X = QPSCN.HCOL<1,PPTR>
*           T.Y = QPSCN.HROW<1,PPTR>
            T.Y = QPSCN.HROW<1,PPTR> + 2;* WALID
            IF REF # "" THEN     ;*DT21177
               T.STMT = REF "R#2" : "- "
               T.X = T.X - 3
               T.USERDATA = REF;*WALID
            END ELSE     ;*DT21177
               T.STMT = ""     ;*DT21177
               T.USERDATA = ""
            END     ;*DT21177
            T.STMT = T.STMT : QP$PMSG
            GOSUB 4000
            IF T.Y > T.LASTY THEN
               T.LASTY = T.Y
            END
*            IF QPSCN.REF<1,PPTR> # "" THEN     ;*DT21177
            IF QPSCN.ICOL<1,PPTR> # "" THEN     ;*DT21177
               MAXL = QP$MAXL
               T.X2 = T.X + LEN(T.STMT) + 1
               IF T.X2 < QPSCN.ICOL<1,PPTR> THEN
                  T.X2 = QPSCN.ICOL<1,PPTR>
               END
*              T.Y2 = QPSCN.IROW<1,PPTR>
*              T.Y = QPSCN.IROW<1,PPTR> + QPSCN.WROW1
               T.Y2 = QPSCN.IROW<1,PPTR> + 2;* WALID
               T.Y = QPSCN.IROW<1,PPTR> + QPSCN.WROW1 + 2;* WALID
*TEST               T.X = QPSCN.ICOL<1,PPTR>
               T.X = QPSCN.ICOL<1,PPTR> + QPSCN.WCOL1
               T.MAXL = MAXL
               HELP.MSG = QP$HMSG
               PMCREF += 1
               GOSUB 6100
               IF T.Y2 > T.LASTY THEN
                  T.LASTY = T.Y2
               END
            END
         END
      NEXT PPTR
      T.USERDATA = ""
*      T.Y = 21
      T.Y = 22
*      T.Y2 = T.Y2 + 1
      T.Y2 = T.LASTY + 1
      T.X = 0
      T.X2 = 0
      STMT = SPACE(3)
*T21862      T.MAXL = 3
      T.MAXL = 6
      T.FLDTYPE = ''
      T.TYP = 1
      T.MULTI.LN = ''
      T.MULTI.SP = ''
      HELP.MSG = ''
      PMCREF = 69
      GOSUB 6100
      LOCATE 'exit_keys' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'exit_keys')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'END')
      END
      T.X = 3
*T21862      T.X2 = 3
*T21862      STMT = SPACE(75)
*T21862      T.MAXL = 75
      T.X2 = 7
      STMT = SPACE(72)
      T.MAXL = 72
      T.FLDTYPE = ''
      T.TYP = 1
      T.MULTI.LN = ''
      T.MULTI.SP = ''
      HELP.MSG = ''
      PMCREF = 70
      GOSUB 6100
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 0
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 3
      LOCATE 'border_style' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 'raised'
      LOCATE 'border_width' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = 1
      LOCATE 'font' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = FIX.10.FONT
      LOCATE 'editable' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,'0')
      END
      LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CGRAY)
      END ELSE
         BLD.TUF.SCRN<TPTR+2> = INSERT(BLD.TUF.SCRN<TPTR+2>,1,VAL,0,'background')
         BLD.TUF.SCRN<TPTR+3> = INSERT(BLD.TUF.SCRN<TPTR+3>,1,VAL,0,CGRAY)
      END
*
      WRITE BLD.TUF.SCRN ON TUFORMS, CONO:SNAME
      GOTO 99999
*
*---- Build Formclass
1000 *
*COPY>CBABP>TUF.STANDARDS
      TPTR = 1
      WCOL1 = QPSCN.WCOL1
      T.X = QPSCN.WCOL1
      WROW1 = QPSCN.WROW1
      T.Y = QPSCN.WROW1
      T.WIDTH = QPSCN.WCOL2
      T.Y2 = QPSCN.WROW2
      T.HEIGHT = (T.Y2 - T.Y) +1
      FORM.NAME = SNAME
      BLD.TUF.SCRN<TPTR> = FM.NAME:' ':OCONV(TIME(),'MTS'):'  ':OCONV(DATE(),'D')
      BLD.TUF.SCRN<TPTR+1> = FM.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FM.CHILDREN
      FM.OBJECT.NAME = FORM.NAME
      BLD.TUF.SCRN<TPTR+1,-1> = FM.OBJECT.NAME
      BLD.TUF.SCRN<TPTR+2> = FM.ATTR
      BLD.TUF.SCRN<TPTR+3> = FM.ATTR.VAL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
*     DIMH = '20' * (T.HEIGHT + 1)
      DIMH = '22' * (T.HEIGHT + 1);*WALID
      DIMW = T.WIDTH*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      TPTR += 4
      BLD.TUF.SCRN<TPTR> = FT.NAME
      BLD.TUF.SCRN<TPTR+1> = FT.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FT.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = ''
      BLD.TUF.SCRN<TPTR+2> = FT.ATTR
      BLD.TUF.SCRN<TPTR+3> = VAR.6.ATTR.VAL
      BLD.TUF.SCRN<2,2,-1> = TPTR
      TPTR += 4
      BLD.TUF.SCRN<TPTR> = FT.NAME
      BLD.TUF.SCRN<TPTR+1> = FT.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FT.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = ''
      BLD.TUF.SCRN<TPTR+2> = FT.ATTR
      BLD.TUF.SCRN<TPTR+3> = FIX.10.ATTR.VAL
      BLD.TUF.SCRN<2,2,-1> = TPTR
*      TPTR += 4
*      BLD.TUF.SCRN<TPTR> = FT.NAME
      RETURN
*
*---- Update Title in Formclass
2000 *
      LOCATE 'title' IN BLD.TUF.SCRN<3>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<4,VAL> = QPSCN.DESC
      RETURN
*
*---- Build Labelclass
4000 *
      TPTR += 4
      FL.NO = REF
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FL.NAME
      BLD.TUF.SCRN<TPTR+1> = FL.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FL.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = FL.OBJECT.NAME:FL.NO
      BLD.TUF.SCRN<TPTR+2> = FL.ATTR
      BLD.TUF.SCRN<TPTR+3> = FL.ATTR.VAL
      LOCATE 'string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.STMT
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = LEN(T.STMT)
      LOCATE 'background' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = BACKGROUND
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      DIMW = LEN(T.STMT)*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = T.X*8
      CORR = T.Y*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      RETURN
5800*
      BEGIN CASE
         CASE T.USERDATA = ""
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE T.USERDATA = "^VALUE^"
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
         CASE T.USERDATA = "^IMAGE^"
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
         CASE NOT(NUM(T.USERDATA))
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE NUM(T.USERDATA) AND T.USERDATA > 0
            BLD.TUF.SCRN<TPTR+3,VAL> = T.USERDATA
         CASE 1
            BLD.TUF.SCRN<TPTR+3,VAL> = ""
      END CASE
      RETURN
*
*---- Build Textclass
*
6100 *
      TPTR += 4
*      FX.NO = REF     ;*DT21177
      FX.NO = PMCREF + 1     ;*DT21177
      BLD.TUF.SCRN<2,2,-1> = TPTR
      BLD.TUF.SCRN<TPTR> = FX.NAME
      BLD.TUF.SCRN<TPTR+1> = FX.PARENT
      BLD.TUF.SCRN<TPTR+1,-1> = FX.CHILDREN
      BLD.TUF.SCRN<TPTR+1,-1> = FX.OBJECT.NAME:FX.NO
      BLD.TUF.SCRN<TPTR+2> = FX.ATTR
      BLD.TUF.SCRN<TPTR+3> = FX.ATTR.VAL
      LOCATE 'max_len' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'char_col' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.X
      LOCATE 'char_row' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.Y
      LOCATE 'char_length' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = T.MAXL
      LOCATE 'dimensions' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      DIMH = '17'
      DIMW = T.MAXL*8+4
      BLD.TUF.SCRN<TPTR+3,VAL> = DIMW:SVM:DIMH
      LOCATE 'coordinates' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      CORC = (T.X2*8) -2
      CORR = T.Y2*18
      BLD.TUF.SCRN<TPTR+3,VAL> = CORC:SVM:CORR
      LOCATE 'help_string' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL ELSE NULL
      BLD.TUF.SCRN<TPTR+3,VAL> = HELP.MSG
      LOCATE 'user_data' IN BLD.TUF.SCRN<TPTR+2>,1 SETTING VAL THEN
         GOSUB 5800
      END
      RETURN
*
*--- CALLS FOR SYSCOM
*
91000 *
      ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
      ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
      ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
      RETURN
   END
