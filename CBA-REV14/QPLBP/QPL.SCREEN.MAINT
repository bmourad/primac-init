*********************************************************************
*
* PROGRAM  - QPL.SCREEN.MAINT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 10/05/93
*
* DESCRIPTION
*
* This program is used to organize prompts, previously defined by the
* QPL.PROMPT.MAINT program, into sub-screens to be used by QUIK-PLAN.
*
*T21177 diane 01/30/1997 * REV11 UPG UPDATE FORM FOR REVIEW
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE.QP
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE.QP
*COPY>JES.CPYLIB>QPL.SCREEN
*COPY>JES.CPYLIB>QPL.PROMPT
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*
*---- PRE-INITIALIZATION
*
  PROCREAD PARAM ELSE PARAM = ""
  ACTION = PARAM<1>
  ACTION = "M"                         ;**** R E M O V E ****
  MAT EST.QP.REC = ""
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","QPL.SCREEN" TO QPL.SCREEN ELSE
    ERRMSG = "CANNOT OPEN QPL.SCREEN FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","QPL.PROMPT" TO QPL.PROMPT ELSE
    ERRMSG = "CANNOT OPEN QPL.PROMPT FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","QPL.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN QPL.SCREENS FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    ERRMSG = "CANNOT OPEN PREFIX FILE"
    GOSUB 91000
    STOP
  END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "CANNOT OPEN XREF.DATA FILE"
    GOSUB 91000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;QPL.SCREEN.MAINT
  SCREEN FORMAT
  SCREEN COUNT;;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  LINE.CNT = 0
  REF.NO = ""
  CURR.REF.NO = ""
  QPSCN.ID = ""
  DUP.ID = ""
  TEMP.DESC = ""
  TEMP.PMAXL = ""
  TEMP.MAXL = ""
  TEMP.TYP = ""
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  QPSCN.ID = "" ; * T26556
  SCREEN CLEAR
  MAT EST.QP.REC = ""
110 *
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  S$DATA(2)<S$SCR> = QPSCN.ID
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 99999
  IF S$VALUE = "" OR S$VALUE = "???" THEN
    GXR.NAME = "QPL.SCREEN"
    GXR.FILE = QPL.SCREEN
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    SCREEN FORMAT
    SCREEN DISPLAY;;1
    IF GXR.ID = "" THEN GOTO 110
    S$VALUE = GXR.ID
    S$DATA(2)<S$SCR> = S$VALUE
    SCREEN DISPLAY;;2
  END
  NEW.REC = 0
  IF ACTION = "M" THEN
    * T26126 V
    MATREADU QPSCN.REC FROM QPL.SCREEN, CONO:S$VALUE LOCKED
      ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 100 
    END ELSE
    * T26126 ^
      MAT QPSCN.REC = ""
      NEW.REC = 1
    END
  END ELSE
    MATREAD QPSCN.REC FROM QPL.SCREEN, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Item. Try again! "
      GOSUB 91000
      GOTO 100
    END
  END
  QPSCN.ID = S$VALUE
120 *
  IF NEW.REC THEN
    S$DATA(31)<S$SCR> = ""
    SCREEN FIELD;;31
    SCREEN INPUT;;31;GOTO 100
    IF S$VALUE = "Y" THEN
      S$DATA(32)<S$SCR> = DUP.ID
      SCREEN FIELD;;32
      SCREEN INPUT;;32;GOTO 100
      MATREAD QPSCN.REC FROM QPL.SCREEN, CONO:S$VALUE ELSE
        ERRMSG = "Invalid Item ID. Try again! "
        GOSUB 91000
        GOTO 120
      END
      DUP.ID = S$VALUE
      NEW.REC = 0
      GOTO 120
    END
    FOR REF = 1 TO 3
      ON REF GOSUB 1010, 1020, 1030
      IF S$VALUE = "END" THEN GOTO 100
    NEXT REF
    LINE.CNT = 0
    OPT = "A"
    GOTO 510
  END ELSE
    GOSUB 80000
    GOSUB 81000
    LINE.CNT = DCOUNT(QPSCN.PID, VM)
    REF.NO = 1
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  BEGIN CASE
    CASE ACTION = "M"
      SCREEN FIELD;;21
      SCREEN INPUT;;21
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPT = S$VALUE
510 *
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      IF ACTION = "M" THEN
        MISMATCH = 0
        READ VREC FROM QPL.SCREEN, CONO:QPSCN.ID ELSE VREC = ""
        FOR VPTR = 1 TO QPSCN.SIZE UNTIL MISMATCH
          IF QPSCN.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
        NEXT VPTR
        IF MISMATCH THEN
          SCREEN FIELD;;25
          SCREEN INPUT;;25
          IF S$VALUE # "Y" THEN GOTO 500
        END
      END
      GOTO 100
    CASE NUM(OPT) AND OPT # ""
      ON OPT GOSUB 1010, 1020, 1030
    CASE OPT = "A" AND LINE.CNT < 99
      MODE = "A"
      DONE = 0
      FOR REF.NO = LINE.CNT+1 TO 99 UNTIL DONE
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          LINE.CNT = LINE.CNT + 1
        END
      NEXT REF.NO
      REF.NO = LINE.CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "C" AND LINE.CNT > 0
      MODE = "C"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 10000
        IF S$VALUE = "END" THEN
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPT = "D" AND LINE.CNT > 0
      MODE = "D"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        LINE.CNT = LINE.CNT - 1
        IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "I" AND LINE.CNT > 0
      MODE = "I"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 800
        LINE.CNT = LINE.CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          GOSUB 700
          LINE.CNT = LINE.CNT - 1
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPT = "S" OR OPT = "SF"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "SR"
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "ST"
      REF.NO = 1
      GOSUB 50000
    CASE OPT = "SB"
      REF.NO = LINE.CNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "PUR"
      SCREEN FIELD;;24
      SCREEN INPUT;;24
      IF S$VALUE = "Y" THEN
        DELETE QPL.SCREEN, CONO:QPSCN.ID
        TFILE = "PMCFORMS"
        OPEN "",TFILE TO TUFORMS THEN
          DELETE TUFORMS, CONO:QPSCN.ID
        END
        GOTO 100
      END
    CASE OPT = "R" OR OPT = "P"
      GOSUB 88000
      IF NOT(ERRFLAG) THEN
        GOSUB 89000
        IF OPT = "R" THEN
          S$SCR = S$SCR + 1
          CALL QPL.SCREEN.INPUT("T",CONO,1,QPSCN.ID:PORT.NO,MAT QPSCN.REC,QPL.PROMPT,ESTATUS)
          S$SCR = S$SCR - 1
          SCREEN FORMAT
          GOSUB 80050
          CURR.REF.NO = ""
          GOSUB 50000
        END ELSE
          CALL QPL.SCREEN.SUB("P", CONO, QPSCN.ID, MAT QPSCN.REC, QPL.PROMPT)
        END
        TFILE = "PMCFORMS"
        OPEN "",TFILE TO TUFORMS THEN
          DELETE TUFORMS, CONO:QPSCN.ID:PORT.NO
        END
      END
    CASE OPT = "F"
      GOSUB 88000
      IF NOT(ERRFLAG) THEN
        MATWRITE QPSCN.REC ON QPL.SCREEN, CONO:QPSCN.ID
        CALL QPL.SCREEN.TUF(ACTION, CONO, QPSCN.ID, MAT QPSCN.REC, QPL.PROMPT)
        GOTO 100
      END
  END CASE
  GOTO 500
*
*---- GET LINE NUMBER
*
600 *
  SCREEN FIELD;;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;;22
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  QPSCN.PID = DELETE(QPSCN.PID, 1, REF.NO, 0)
  QPSCN.REF = DELETE(QPSCN.REF, 1, REF.NO, 0)
  QPSCN.HCOL = DELETE(QPSCN.HCOL, 1, REF.NO, 0)
  QPSCN.HROW = DELETE(QPSCN.HROW, 1, REF.NO, 0)
  QPSCN.ICOL = DELETE(QPSCN.ICOL, 1, REF.NO, 0)
  QPSCN.IROW = DELETE(QPSCN.IROW, 1, REF.NO, 0)
  TEMP.DESC = DELETE(TEMP.DESC, 1, REF.NO, 0)
  TEMP.PMAXL = DELETE(TEMP.PMAXL, 1, REF.NO, 0)
  TEMP.MAXL = DELETE(TEMP.MAXL, 1, REF.NO, 0)
  TEMP.TYP = DELETE(TEMP.TYP, 1, REF.NO, 0)
  GOSUB 81500
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  QPSCN.PID = INSERT(QPSCN.PID, 1, REF.NO, 0, "")
  QPSCN.REF = INSERT(QPSCN.REF, 1, REF.NO, 0, "")
  QPSCN.HCOL = INSERT(QPSCN.HCOL, 1, REF.NO, 0, "")
  QPSCN.HROW = INSERT(QPSCN.HROW, 1, REF.NO, 0, "")
  QPSCN.ICOL = INSERT(QPSCN.ICOL, 1, REF.NO, 0, "")
  QPSCN.IROW = INSERT(QPSCN.IROW, 1, REF.NO, 0, "")
  TEMP.DESC = INSERT(TEMP.DESC, 1, REF.NO, 0, "")
  TEMP.PMAXL = INSERT(TEMP.PMAXL, 1, REF.NO, 0, "")
  TEMP.MAXL = INSERT(TEMP.MAXL, 1, REF.NO, 0, "")
  TEMP.TYP = INSERT(TEMP.TYP, 1, REF.NO, 0, "")
  GOSUB 81500
  RETURN
*
*---- GET SUB-SCREEN DESCRIPTION
*
1010 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  QPSCN.DESC = S$VALUE
  RETURN
*
*---- WINDOW COLUMN AND ROW
*
1020 *
  SCREEN FIELD;;4
  SCREEN INPUT;;4;RETURN
  QPSCN.WCOL1 = S$VALUE
*
  SCREEN FIELD;;5
  SCREEN INPUT;;5;RETURN
  QPSCN.WROW1 = S$VALUE
  RETURN
*
*---- WINDOW WIDTH AND HEIGHT
*
1030 *
  SCREEN FIELD;;6
  SCREEN INPUT;;6;RETURN
  QPSCN.WCOL2 = S$VALUE
*
  SCREEN FIELD;;7
  SCREEN INPUT;;7;RETURN
  QPSCN.WROW2 = S$VALUE
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
  S$VAL = REF.NO
  SCREEN DISPLAY;;11
10100 *
  S$DATA(12)<S$SCR,REF.NO> = QPSCN.PID<1,REF.NO>
  S$VAL = REF.NO
  SCREEN FIELD;;12
  SCREEN INPUT;;12;GOTO 19950
  LOCATE S$VALUE IN QPSCN.PID<1>,1 SETTING P THEN
    IF P # REF.NO THEN
      ERRMSG = "Duplicate item on line ": P
      GOSUB 91000
      GOTO 10100
    END
  END
  IF S$VALUE = "" OR S$VALUE = "???" THEN
    GXR.NAME = "QPL.PROMPT"
    GXR.FILE = QPL.PROMPT
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    SCREEN FORMAT
    GOSUB 80050
    CURR.REF.NO = ""
    GOSUB 50000
    IF GXR.ID = "" THEN GOTO 10100
    S$VALUE = GXR.ID
    S$DATA(12)<S$SCR,REF.NO> = S$VALUE
    S$VAL = REF.NO
    SCREEN DISPLAY;;12
  END
  MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:S$VALUE ELSE
    ERRMSG = "Invalid Item. Try again! "
    GOSUB 91000
    GOTO 10100
  END
  TEMP.MF1 = S$VALUE
  S$VAL = REF.NO
  S$DATA(14)<S$SCR,REF.NO> = QP$DESC
  SCREEN DISPLAY;;14
10200 *
  S$VAL = REF.NO
  IF QP$TYP = "0" THEN
    S$DATA(13)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;;13
    TEMP.MF2 = ""
  END ELSE
    SCREEN FIELD;;13
    SCREEN INPUT;;13;GOTO 19950
    TEMP.MF2 = S$VALUE
  END
10300 *
  S$VAL = REF.NO
  SCREEN FIELD;;15
  SCREEN INPUT;;15;GOTO 19950
  TEMP.MF3 = S$VALUE
10400 *
  S$VAL = REF.NO
  SCREEN FIELD;;16
  SCREEN INPUT;;16;GOTO 19950
  TEMP.MF4 = S$VALUE
10500 *
  S$VAL = REF.NO
  IF QP$TYP = "0" THEN
    S$DATA(17)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;;17
    TEMP.MF5 = ""
  END ELSE
    SCREEN FIELD;;17
    S$O.R = "O"
    S$DEFAULT = TEMP.MF3 + QP$PMAXL + 1
    SCREEN INPUT;;17;GOTO 19950
    TEMP.MF5 = S$VALUE
  END
10600 *
  S$VAL = REF.NO
  IF QP$TYP = "0" THEN
    S$DATA(18)<S$SCR,REF.NO> = ""
    SCREEN DISPLAY;;18
    TEMP.MF6 = ""
  END ELSE
    SCREEN FIELD;;18
    S$O.R = "O"
    S$DEFAULT = TEMP.MF4
    SCREEN INPUT;;18;GOTO 19950
    TEMP.MF6 = S$VALUE
  END
19900 *
  QPSCN.PID<1,REF.NO> = TEMP.MF1
  QPSCN.REF<1,REF.NO> = TEMP.MF2
  QPSCN.HCOL<1,REF.NO> = TEMP.MF3
  QPSCN.HROW<1,REF.NO> = TEMP.MF4
  QPSCN.ICOL<1,REF.NO> = TEMP.MF5
  QPSCN.IROW<1,REF.NO> = TEMP.MF6
  TEMP.DESC<1,REF.NO> = QP$DESC
  TEMP.PMAXL<1,REF.NO> = QP$PMAXL
  TEMP.MAXL<1,REF.NO> = QP$MAXL
  TEMP.TYP<1,REF.NO> = QP$TYP
  RETURN
19950 *
  GOSUB 81500
  RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
  START.REF.NO = 1 + INT((REF.NO - 1) / LINE.COUNT) * LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
  SCREEN MULTI;;C;11;12;13;14;15;16;17;18
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(3)<S$SCR> = QPSCN.DESC
  S$DATA(4)<S$SCR> = QPSCN.WCOL1
  S$DATA(5)<S$SCR> = QPSCN.WROW1
  S$DATA(6)<S$SCR> = QPSCN.WCOL2
  S$DATA(7)<S$SCR> = QPSCN.WROW2
80050 *
  SCREEN DISPLAY;;ALL
  RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
  LCNT = DCOUNT(QPSCN.PID, VM)
  FOR REF = 1 TO LCNT
    PID = QPSCN.PID<1,REF>
    MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:PID ELSE
      MAT QPPMT.REC = ""
      QP$DESC = "???????????????"
    END
    TEMP.DESC<1,REF> = QP$DESC
    TEMP.PMAXL<1,REF> = QP$PMAXL
    TEMP.MAXL<1,REF> = QP$MAXL
    TEMP.TYP<1,REF> = QP$TYP
  NEXT REF
81500 *
  S$DATA(12)<S$SCR> = QPSCN.PID
  S$DATA(14)<S$SCR> = TEMP.DESC
  S$DATA(13)<S$SCR> = QPSCN.REF
  S$DATA(15)<S$SCR> = QPSCN.HCOL
  S$DATA(16)<S$SCR> = QPSCN.HROW
  S$DATA(17)<S$SCR> = QPSCN.ICOL
  S$DATA(18)<S$SCR> = QPSCN.IROW
  RETURN
*
*---- EDIT ALL DATA
*
88000 *
  ERRFLAG = 0
  PCNT = DCOUNT(QPSCN.PID,VM)
  FOR PPTR = 1 TO PCNT
    PID = QPSCN.PID<1,PPTR>
    REF = QPSCN.REF<1,PPTR>
    HCOL = QPSCN.WCOL1 + QPSCN.HCOL<1,PPTR>
    HROW = QPSCN.WROW1 + QPSCN.HROW<1,PPTR>
    ICOL = QPSCN.WCOL1 + QPSCN.ICOL<1,PPTR>
    IROW = QPSCN.WROW1 + QPSCN.IROW<1,PPTR>
    PMAXL = TEMP.PMAXL<1,PPTR>
    MAXL = TEMP.MAXL<1,PPTR>
    TYP = TEMP.TYP<1,PPTR>
    BEGIN CASE
      CASE REF # "" AND (HCOL-LEN(REF)-2) < 0
        ERRMSG = "Invalid heading column"
      CASE (HCOL+PMAXL-1) > QPSCN.WCOL2
        ERRMSG = "Invalid heading column"
      CASE HROW > QPSCN.WROW2
        ERRMSG = "Invalid heading row"
      CASE TYP = "0"
        ERRMSG = ""
      CASE (ICOL+MAXL-1) > QPSCN.WCOL2
        ERRMSG = "Invalid input column"
      CASE IROW > QPSCN.WROW2
        ERRMSG = "Invalid input row"
      CASE 1
        ERRMSG = ""
    END CASE
    IF ERRMSG # "" THEN
      ERRFLAG = 1
      ERRMSG = ERRMSG : " on line ":PPTR
      GOSUB 91000
    END
  NEXT PPTR
  RETURN
*
*---- Build temporary form for Review
*
89000 *
  PORT.NO = 'TTY'
  CALL SYSVARS.SUB(PORT.NO)
  CALL QPL.SCREEN.TUF(ACTION, CONO, QPSCN.ID:PORT.NO, MAT QPSCN.REC, QPL.PROMPT)
  RETURN
*
*---- ERROR ROUTINE
*
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
91000 *
  ERR.TYPE = 1;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SI_SYSCOM(MAT SYSCOM.REC)
*
99999 *
*       PRINT @(-1)
END
