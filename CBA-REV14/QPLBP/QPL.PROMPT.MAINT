*********************************************************************
*
* PROGRAM  - QPL.PROMPT.MAINT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 10/04/93
*
* DESCRIPTION
*
* This program is used to maintain the prompts and theri associated
* response edit criteria. These prompts are used to define the sub-
* screens within the QUIK-PLAN estimate.
*
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>QPL.PROMPT
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
  PROCREAD PARAM ELSE PARAM = "M"
  ACTION = PARAM<1>
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","QPL.PROMPT" TO QPL.PROMPT ELSE
    ERRMSG = "CANNOT OPEN QPL.PROMPT FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","QPL.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN QPL.SCREENS FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    ERRMSG = "CANNOT OPEN PREFIX FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "CANNOT OPEN XREF.DATA FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;QPL.PROMPT.MAINT
  SCREEN FORMAT
  QPPMT.ID = ""
  DUP.ID = ""
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  QPPMT.ID = "" ; * T26556
  SCREEN CLEAR
110 *
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  S$DATA(2)<S$SCR> = QPPMT.ID
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 99999
  IF S$VALUE = "" OR S$VALUE = "???" THEN
    GXR.NAME = "QPL.PROMPT"
    GXR.FILE = QPL.PROMPT
    GXR.SORT.FILE = QPL.PROMPT
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    SCREEN FORMAT
    SCREEN DISPLAY;;1
    IF GXR.ID = "" THEN GOTO 110
    S$VALUE = GXR.ID
    S$DATA(2)<S$SCR> = S$VALUE
    SCREEN DISPLAY;;2
  END
  NEW.REC = 0
  IF ACTION = "M" THEN
    * T26126 v
    MATREADU QPPMT.REC FROM QPL.PROMPT, CONO:S$VALUE LOCKED
      ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 90000;GOTO 100 
    END ELSE
    * T26126 ^
      MAT QPPMT.REC = ""
      NEW.REC = 1
    END
  END ELSE
    MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Item. Try again! "
      GOSUB 90000
      GOTO 100
    END
  END
  QPPMT.ID = S$VALUE
120 *
  IF NEW.REC THEN
    S$DATA(28)<S$SCR> = ""
    SCREEN FIELD;;28
    SCREEN INPUT;;28;GOTO 100
    IF S$VALUE = "Y" THEN
122 *
      S$DATA(29)<S$SCR> = DUP.ID
      SCREEN FIELD;;29
      SCREEN INPUT;;29;GOTO 100
      IF S$VALUE = "" THEN GOTO 100
      MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:S$VALUE ELSE
        ERRMSG = "Invalid Item ID. Try again! "
        GOSUB 90000
        GOTO 122
      END
      DUP.ID = S$VALUE
      NEW.REC = 0
      GOTO 120
    END
    FOR REF = 1 TO 11
      ON REF GOSUB 1010,1020,1030,1040,1050,1060,1070,1080,1090,1100,1110
      IF S$VALUE = "END" THEN GOTO 100
    NEXT REF
  END ELSE
    GOSUB 80000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  BEGIN CASE
    CASE ACTION = "M"
      SCREEN FIELD;;21
      SCREEN INPUT;;21
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPT = S$VALUE
510 *
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      IF ACTION = "M" THEN
        MISMATCH = 0
        READ VREC FROM QPL.PROMPT, CONO:QPPMT.ID ELSE VREC = ""
        FOR VPTR = 1 TO QPPMT.SIZE UNTIL MISMATCH
          IF QPPMT.REC(VPTR) # VREC<VPTR> THEN MISMATCH = 1
        NEXT VPTR
        IF MISMATCH THEN
          SCREEN FIELD;;25
          SCREEN INPUT;;25
          IF S$VALUE # "Y" THEN GOTO 500
        END
      END
      GOTO 100
    CASE NUM(OPT) AND OPT # ""
      BEGIN CASE
        CASE OPT <= 10
          ON OPT GOSUB 1010,1020,1030,1900,1900,1900,1900,1900,1900,1900
        CASE OPT <= 20
          ON (OPT-10) GOSUB 1040,1050,1060,1900,1900,1900,1900,1900,1900,1900
        CASE OPT <= 30
          ON (OPT-20) GOSUB 1070,1080,1090,1100,1900,1900,1900,1900,1900,1900
        CASE OPT <= 40
          ON (OPT-30) GOSUB 1110,1900,1900,1900,1900,1900,1900,1900,1900,1900
      END CASE
    CASE OPT = "PUR"
      SCREEN FIELD;;24
      SCREEN INPUT;;24
      IF S$VALUE = "Y" THEN
        DELETE QPL.PROMPT, CONO: QPPMT.ID
        GOTO 100
      END
    CASE OPT = "F"
      GOSUB 88000
      IF ERRMSG = "" THEN
        MATWRITE QPPMT.REC ON QPL.PROMPT, CONO:QPPMT.ID
        GOTO 100
      END
  END CASE
  GOTO 500
*
*---- GET PROMPT ITEM DESCRIPTION
*
1010 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  QP$DESC = S$VALUE
  RETURN
*
*---- GET PROMPT MESSAGE FORMAT
*
1020 *
  SCREEN FIELD;;11
  SCREEN INPUT;;11;RETURN
  MAXL = S$VALUE[1,LEN(S$VALUE)-1]
  BEGIN CASE
    CASE MAXL < 1 OR MAXL > 40
      ERRMSG = "Length must be 1 to 40. Try again! "
      GOSUB 90000
      GOTO 1020
    CASE 1
      QP$PMAXL = MAXL
      QP$PJUSTIFY = S$VALUE[LEN(S$VALUE),1]
  END CASE
  RETURN
*
*---- GET PROMPT MESSAGE
*
1030 *
  SCREEN FIELD;;13
  SCREEN INPUT;;13;RETURN
  QP$PMSG = S$VALUE
  RETURN
*
*---- GET RESPONSE TYPE AND PRECISION
*
1040 *
  SCREEN FIELD;;31
  SCREEN INPUT;;31;RETURN
  QP$TYP = S$VALUE
  IF QP$TYP # "4" AND QP$SCALER # "" THEN
    S$DATA(32)<S$SCR> = ""
    SCREEN DISPLAY;;32
    QP$SCALER = ""
  END
  IF QP$TYP # "7" AND QP$PATRN # "" THEN
    S$DATA(46)<S$SCR> = ""
    SCREEN DISPLAY;;46
    QP$PATRN = ""
  END
  IF QP$TYP = "4" THEN
    SCREEN FIELD;;32
    SCREEN INPUT;;32;RETURN
    QP$SCALER = S$VALUE
  END
  RETURN
*
*---- GET FORMAT AND FILL CHARACTER
*
1050 *
  SCREEN FIELD;;35
  SCREEN INPUT;;35;RETURN
  L = LEN(S$VALUE)
  MAXL = S$VALUE[1,L-1]
  JUST = S$VALUE[L,1]
  BEGIN CASE
    CASE MAXL < 1 OR MAXL > 80
      ERRMSG = "Length must be 1 to 80. Try again! "
      GOSUB 90000
      GOTO 1050
    CASE 1
      QP$MAXL = S$VALUE[1,L-1]
      QP$JUSTIFY = S$VALUE[L,1]
  END CASE
*
  SCREEN FIELD;;36
  SCREEN INPUT;;36;RETURN
  QP$FILL = S$VALUE
  RETURN
*
*---- GET OPT/REQ FLAG AND DEFAULT
*
1060 *
  SCREEN FIELD;;37
  SCREEN INPUT;;37;RETURN
  QP$O.R = S$VALUE
  IF QP$O.R = "R" THEN
    S$DATA(38)<S$SCR> = ""
    SCREEN DISPLAY;;38
    QP$DEFAULT = ""
  END ELSE
    SCREEN FIELD;;38
    SCREEN INPUT;;38;RETURN
    QP$DEFAULT = S$VALUE
  END
  RETURN
*
*---- GET MININUM LENGTH, MINIMUM VALUE, MAXIMUM VALUE
*
1070 *
  BEGIN CASE
    CASE QP$TYP = "8"
      S$DATA(41)<S$SCR> = 1
      SCREEN DISPLAY;;41
      QP$MINL = 1
    CASE 1
      SCREEN FIELD;;41
      SCREEN INPUT;;41;RETURN
      QP$MINL = S$VALUE
  END CASE
*
  BEGIN CASE
    CASE QP$TYP = "7"
      S$DATA(42)<S$SCR> = ""
      SCREEN DISPLAY;;42
      QP$MINV = ""
    CASE 1
      SCREEN FIELD;;42
      BEGIN CASE
        CASE QP$TYP = "4"
          S$TYP = QP$TYP
          S$SCALER = QP$SCALER
        CASE QP$TYP = "6"
          S$TYP = 1
        CASE 1
          S$TYP = QP$TYP
      END CASE
      S$JUSTIFY = "L"
      SCREEN INPUT;;42;RETURN
      QP$MINV = S$VALUE
  END CASE
*
  BEGIN CASE
    CASE QP$TYP = "7"
      S$DATA(43)<S$SCR> = ""
      SCREEN DISPLAY;;43
      QP$MAXV = ""
    CASE 1
      SCREEN FIELD;;43
      BEGIN CASE
        CASE QP$TYP = "4"
          S$TYP = QP$TYP
          S$SCALER = QP$SCALER
        CASE QP$TYP = "6"
          S$TYP = 1
        CASE 1
          S$TYP = QP$TYP
      END CASE
      S$JUSTIFY = "L"
      SCREEN INPUT;;43;RETURN
      QP$MAXV = S$VALUE
  END CASE
  RETURN
*
*---- GET VALID RESPONSES
*
1080 *
  SCREEN FIELD;;45
  SCREEN INPUT;;45;RETURN
  S$VALUE = TRIM(S$VALUE)
  QP$VALDAT = ""
  CNT = DCOUNT(S$VALUE,",")
  FOR P = 1 TO CNT
    V = TRIM(FIELD(S$VALUE,",",P))
    IF V # "" THEN
      IF QP$VALDAT = "" THEN
        QP$VALDAT = V
      END ELSE
        QP$VALDAT = QP$VALDAT : "," : V
      END
    END
  NEXT P
  IF QP$VALDAT # S$VALUE THEN
    S$DATA(45)<S$SCR> = QP$VALDAT
    SCREEN DISPLAY;;45
  END
  RETURN
*
*---- GET VALID PATTERNS
*
1090 *
  SCREEN FIELD;;46
  SCREEN INPUT;;46;RETURN
  QP$PATRN = ""
  CNT = DCOUNT(S$VALUE,",")
  FOR P = 1 TO CNT
    V = TRIM(FIELD(S$VALUE,",",P))
    IF V # "" THEN
      IF QP$PATRN = "" THEN
        QP$PATRN = V
      END ELSE
        QP$PATRN = QP$PATRN : "," : V
      END
    END
  NEXT P
  IF QP$PATRN # S$VALUE THEN
    S$DATA(46)<S$SCR> = QP$PATRN
    SCREEN DISPLAY;;46
  END
  RETURN
*
*---- GET VALIDATION FILE NAME AND PREFIX
*
1100 *
  SCREEN FIELD;;47
  SCREEN INPUT;;47;RETURN
  QP$VALDAT.FILE = S$VALUE
  IF QP$VALDAT.FILE = "" THEN
    S$DATA(48)<S$SCR> = ""
    SCREEN DISPLAY;;48
    QP$PREFIX = ""
  END ELSE
    SCREEN FIELD;;48
    SCREEN INPUT;;48;RETURN
    QP$PREFIX = S$VALUE
  END
  RETURN
*
*---- GET HELP MESSAGES
*
1110 *
  S$VAL = 1
  SCREEN FIELD;;59
  SCREEN INPUT;;59;RETURN
  QP$HMSG<1,1> = S$VALUE
  BEGIN CASE
    CASE QP$HMSG<1,1> = "" AND QP$HMSG<1,2> = ""
    CASE QP$HMSG<1,1> = "" AND QP$HMSG<1,2> # ""
      QP$HMSG = DELETE(QP$HMSG,1,1,0)
      S$DATA(59)<S$SCR> = QP$HMSG
      GOSUB 80060
      GOTO 1110
    CASE 1
      S$VAL = 2
      SCREEN FIELD;;59
      SCREEN INPUT;;59;RETURN
      QP$HMSG<1,2> = S$VALUE
  END CASE
  RETURN
*
*---- DUMMY
*
1900 *
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(1)<S$SCR> = DATE()
  S$DATA(2)<S$SCR> = QPPMT.ID
  S$DATA(3)<S$SCR> = QP$DESC
  S$DATA(11)<S$SCR> = QP$PMAXL : QP$PJUSTIFY
  S$DATA(13)<S$SCR> = QP$PMSG
  S$DATA(31)<S$SCR> = QP$TYP
  S$DATA(32)<S$SCR> = QP$SCALER
  S$DATA(35)<S$SCR> = QP$MAXL : QP$JUSTIFY
  S$DATA(36)<S$SCR> = QP$FILL
  S$DATA(37)<S$SCR> = QP$O.R
  INDATA = QP$DEFAULT; GOSUB 85000; S$DATA(38)<S$SCR> = OTDATA
  S$DATA(41)<S$SCR> = QP$MINL
  INDATA = QP$MINV; GOSUB 85000; S$DATA(42)<S$SCR> = OTDATA
  INDATA = QP$MAXV; GOSUB 85000; S$DATA(43)<S$SCR> = OTDATA
  S$DATA(45)<S$SCR> = QP$VALDAT
  S$DATA(46)<S$SCR> = QP$PATRN
  S$DATA(47)<S$SCR> = QP$VALDAT.FILE
  S$DATA(48)<S$SCR> = QP$PREFIX
  S$DATA(59)<S$SCR> = QP$HMSG
80050 *
  SCREEN DISPLAY;;ALL
80060 *
  S$VAL = 1; S$CNT = 2
  SCREEN MULTI;;C;59
  RETURN
*
*---- CONVERT DATA TO EXTERNAL FORMAT
*
85000 *
  BEGIN CASE
    CASE INDATA = ""
      OTDATA = ""
    CASE QP$TYP = "4"
      FMT = "MD": QP$SCALER
      OTDATA = OCONV(INDATA, FMT)
    CASE QP$TYP = "6" AND INDATA[1,4] # "DATE"
      OTDATA = OCONV(INDATA, "D2/")
    CASE 1
      OTDATA = INDATA
  END CASE
  RETURN
*
*---- CONVERT DATA TO INTERNAL FORMAT
*
86000 *
  BEGIN CASE
    CASE OTDATA = ""
      INDATA = ""
    CASE QP$TYP = "4"
      FMT = "MD": QP$SCALER
      INDATA = ICONV(OTDATA, FMT)
    CASE QP$TYP = "6" AND OTDATA[1,4] # "DATE"
      INDATA = ICONV(OTDATA, "D2/")
    CASE 1
      INDATA = OTDATA
  END CASE
  RETURN
*
*---- EDIT FOR DATA CONFLICTS
*
88000 *
  ERRMSG = ""
  IF LEN(QP$PMSG) > QP$PMAXL THEN
    ERRMSG = "Warning - Heading length exceeds maximum allowed! "
    GOSUB 90000
  END
  INDATA = QP$DEFAULT; GOSUB 85000
  IF LEN(OTDATA) > QP$MAXL THEN
    ERRMSG = "Warning - Default value length exceeds maximum allowed! "
    GOSUB 90000
  END
  INDATA = QP$MINV; GOSUB 85000
  IF LEN(OTDATA) > QP$MAXL THEN
    ERRMSG = "Warning - Minimum value length exceeds maximum allowed! "
    GOSUB 90000
  END
  INDATA = QP$MAXV; GOSUB 85000
  IF LEN(OTDATA) > QP$MAXL THEN
    ERRMSG = "Warning - Maximum value length exceeds maximum allowed! "
    GOSUB 90000
  END
  IF QP$TYP = "4" THEN
    BEGIN CASE
      CASE QP$SCALER = ""
        ERRMSG = "Warning - Invalid precision for decimal type! "
        GOSUB 90000
      CASE QP$SCALER > 0
        IF QP$MAXL < (QP$SCALER+1) THEN
          ERRMSG = "Warning - Invalid length for specified type! "
          GOSUB 90000
        END
    END CASE
  END
  IF QP$TYP = "6" THEN
    IF QP$MAXL # 8 THEN
      ERRMSG = "Warning - Length must be 8 for specified type! "
      GOSUB 90000
    END
    IF QP$MINL < 5 OR QP$MINL > 8 THEN
      ERRMSG = "Warning - Minumum length invalid for specified type! "
      GOSUB 90000
    END
  END
  IF QP$TYP = "8" THEN
    IF QP$MAXL # 1 THEN
      ERRMSG = "Warning - Length must be 1 for specified type! "
      GOSUB 90000
    END
    IF QP$MINL # 1 THEN
      ERRMSG = "Warning - Minumum length invalid for specified type! "
      GOSUB 90000
    END
  END
  IF QP$MINL > QP$MAXL THEN
    ERRMSG = "Warning - Minimum length exceeds maximum length! "
    GOSUB 90000
  END
  IF QP$MINV > QP$MAXV THEN
    ERRMSG = "Warning - Minimum value exceeds maximum value! "
    GOSUB 90000
  END
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
*       PRINT @(-1)
END
