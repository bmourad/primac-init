   SUBROUTINE QPL.SCREEN.INPUT(ACTION, CONO, COMP, SID, MAT QPSCN.REC, QPL.PROMPT, ESTATUS)
*********************************************************************
*
* PROGRAM  - QPL.SCREEN.INPUT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 10/08/93
*
* DESCRIPTION
*
* This subroutine is used to display the specified screen and then
* allow the user to review, enter and maintain the screen data.
* CALLED BY QPL.PROD.MAINT ;  ACTION = "M"
* AND  QPL.SCREEN.MAINT, QPL.SCRIPT.MAINT ;  ACTION = "T"
*
* T18597 - 10/27/94 - NA - PROVIDE INK AND INVENTORY X-REF.
*T21862 lanny 05/02/1997 * Enter remainder of ink info after ???
*T21862 diane 06/10/1997 * Correct field number for ink
*T25064 bilal 04/25/2000 * Do not run TU.FORM.KILL if PC.PORT.TYPE #
*                          termulator
*T25024 diane 05/02/2000 * Update with version
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE.QP
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.QP
*COPY>JES.CPYLIB>QPL.SCREEN
*COPY>JES.CPYLIB>QPL.PROMPT
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>TCC
*COPY>CPYLIB>SPECIAL.H
*COPY>CPYLIB>ROC.H
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SI_SYSCOM(MAT SYSCOM.REC)
*
*
*---- OPEN ALL FILES
*
   OPEN "","QPL.SCREENS" TO QPL.SCREENS ELSE
      ERRMSG = "CANNOT OPEN QPL.SCREENS FILE"
      GOSUB 91000
      STOP
   END
   SCREEN DEFINE;QPL.PROD.MAINT;QPL.SCREENS
   S$SCR = S$SCR - 1
   SCREEN COUNT;;11
   S$SCR = S$SCR + 1
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   LINE.CNT = 0
   REF.NOS = ""
   PID.NOS = ""
   COL.NOS = ""
   ROW.NOS = ""
   IF S$GUIFORM THEN
      SAVE.S$SCRN.PC = S$SCRN.PC
      MAT S$EDIT = ""
      S$TYP = 0
      CALL SCREEN.INPUT
      S$SCRN.PC = SAVE.S$SCRN.PC
   END ELSE
      MAT S$EDIT = ""
      S$TYP = 0
      CALL SCREEN.INPUT
   END
   IF COMP+0 <= 0 THEN COMP = 1
   IF ACTION # "D" THEN
      CALL QPL.PRE.SCREEN(ACTION, CONO, COMP, SID, DIR)
      BEGIN CASE
         CASE DIR = "S"
            GOTO 99999
      END CASE
   END
   WCOL1 = QPSCN.WCOL1
   WROW1 = QPSCN.WROW1
   WCOL2 = QPSCN.WCOL2
   WROW2 = QPSCN.WROW2
   IF PC.PORT.TYPE = 'termulator' THEN
      WROW2 = QPSCN.WROW2+2;*WALID
      TFILE = "PMCFORMS"
      TNAME = CONO:SID
      M_FRMHNDL = ""
      TU_FUNC = "TU.FORM.LOAD":TU_VERNO     ;*T25024
      CALL @TU_FUNC(TFILE,TNAME,M_FRMHNDL,"",S$FRMHNDL,ERROR)     ;*T25024
      IF ERROR = 0 THEN
         S$SCRN.PC<S$SCR> = S$FRMHNDL
         S$GUIFORM = S$FRMHNDL
      END
   END ELSE
      S$SCRN.PC<S$SCR> = ""
      GOSUB 70000
   END
   LPTR = 0
   LREF = 0
   PCNT = DCOUNT(QPSCN.PID,VM)
   FOR PPTR = 1 TO PCNT
      PID = QPSCN.PID<1,PPTR>
      REF = QPSCN.REF<1,PPTR>
      HCOL = WCOL1 + QPSCN.HCOL<1,PPTR>
      HROW = WROW1 + QPSCN.HROW<1,PPTR>
      ICOL = WCOL1 + QPSCN.ICOL<1,PPTR>
      IROW = WROW1 + QPSCN.IROW<1,PPTR>
      IF S$GUIFORM THEN
         HROW = WROW1 + QPSCN.HROW<1,PPTR>+2;*WALID
         IROW = WROW1 + QPSCN.IROW<1,PPTR>+2;*WALID
      END
      MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:PID THEN
         GOSUB 80000
         IF QP$TYP # "0" THEN
            IF REF = "" THEN
               PTR = LPTR + 1
               REF = LREF
            END ELSE
               LOCATE (REF+1) IN REF.NOS<1>,1 BY "AR" SETTING PTR ELSE NULL
            END
            REF.NOS = INSERT(REF.NOS,1,PTR,0,REF)
            PID.NOS = INSERT(PID.NOS,1,PTR,0,PID)
            COL.NOS = INSERT(COL.NOS,1,PTR,0,ICOL)
            ROW.NOS = INSERT(ROW.NOS,1,PTR,0,IROW)
            LPTR = PTR
            LREF = REF
         END
      END
   NEXT PPTR
   IF ACTION = "D" THEN GOTO 99999
   NEW.REC = 1
   FLDCNT = DCOUNT(PID.NOS,VM)
   FOR FLD = 1 TO FLDCNT
      PID = PID.NOS<1,FLD>
      S$DATA(FLD)<S$SCR> = EST.QP.REC(PID)<1,COMP>
      IF ACTION = "I" OR  EST.QP.REC(PID)<1,COMP> # "" THEN NEW.REC = 0
   NEXT FLD
*
*---- MAIN PROCESSING
*
   IF NEW.REC THEN
      FOR FLD = 1 TO FLDCNT
         PID = PID.NOS<1,FLD>
         MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:PID ELSE
            ERRMSG = "FATAL ERROR - QPL.PROMPT ITEM DISAPPEARED - ":PID
            GOSUB 91000
            ESTATUS = "E"
            GOTO 99999
         END
         GOSUB 1010
         IF S$VALUE = "END" THEN
            ESTATUS = "E"
            GOTO 99999
         END
      NEXT FLD
   END
*
*---- GET OPERATOR REPLY
*
500 *
   BEGIN CASE
      CASE ACTION = "M" OR ACTION = "T"
         S$FLD = 60
         S$TYP=1; S$MAXL=3
         S$X=0; S$Y=22
         S$O.R="O"; S$DEFAULT=""
         S$PMSG="Enter Line # to change or <RETURN> to exit"
         S$HMSG=S$PMSG
         S$PSTACK = 1;*WALID
         CALL SCREEN.INPUT
      CASE 1
         S$FLD = 60
         S$TYP=1; S$MAXL=3
         S$X=0; S$Y=22
         S$O.R="O"; S$DEFAULT=""
         S$PMSG="Enter <RETURN> to exit"
         S$VALDAT = "E"
         S$HMSG=S$PMSG
         CALL SCREEN.INPUT
   END CASE
   OPT = S$VALUE
510 *
   BEGIN CASE
      CASE (ACTION="M" OR ACTION="T") AND (OPT="" OR OPT="E" OR OPT="END")
         CALL QPL.POST.SCREEN(ACTION, CONO, COMP, SID, DIR, ERRMSG)
         BEGIN CASE
            CASE DIR = "E"
               GOSUB 91000
            CASE 1
               ESTATUS = OPT
               GOTO 99999
         END CASE
      CASE OPT = "" OR OPT = "E" OR OPT = "END"
         ESTATUS = OPT
         GOTO 99999
      CASE NUM(OPT)
         REF = OPT
         LOCATE REF IN REF.NOS<1>,1 SETTING FLD THEN
            LOOP
               PID = PID.NOS<1,FLD>
               GOSUB 1010
               FLD = FLD+1
            WHILE S$VALUE # "END" AND REF.NOS<1,FLD> = REF DO
            REPEAT
         END
   END CASE
   GOTO 500
*
*---- GET DATA
*
1010 *
   MATREAD QPPMT.REC FROM QPL.PROMPT, CONO:PID ELSE
      ERRMSG = "Invalid prompt ID - ":PID
      GOSUB 91000
      RETURN
   END
   S$FLD = FLD
   S$X=COL.NOS<1,FLD>
   S$Y=ROW.NOS<1,FLD>
   S$TYP=QP$TYP
   S$MINL=QP$MINL
   S$MAXL=QP$MAXL
   S$MINV=QP$MINV
   S$MAXV=QP$MAXV
   S$O.R=QP$O.R
   S$DEFAULT=QP$DEFAULT
   S$JUSTIFY=QP$JUSTIFY
   S$SCALER=QP$SCALER
   S$PATRN=QP$PATRN
   IF QP$HMSG<1,1>="" THEN
      S$HMSG="Sorry, no Help Message for this Selection"
   END ELSE
      S$HMSG=QP$HMSG<1,1>
      IF QP$HMSG<1,2> # "" THEN S$HMSG<1,1,2>=QP$HMSG<1,2>
   END
   S$VALDAT=QP$VALDAT
   S$FILL=QP$FILL
   CALL QPL.PRE.PROMPT(ACTION, CONO, COMP, PID, DIR)
   BEGIN CASE
      CASE DIR = "S"
         S$DATA(FLD)<S$SCR> = S$VALUE
         EST.QP.REC(PID)<1,COMP> = S$VALUE
         BEGIN CASE
            CASE S$TYP = "4"
               CNV = "MD":S$SCALER
               S$DVALUE = OCONV(S$VALUE,CNV)
            CASE S$TYP = "6"
               CNV = "D2/"
               S$DVALUE = OCONV(S$VALUE,CNV)
            CASE 1
               S$DVALUE = S$VALUE
         END CASE
         FMT = S$JUSTIFY:"#":S$MAXL
         IF NOT(S$GUIFORM) THEN
            P_X  = S$X ; P_Y = S$Y ; P_VALUE = S$DVALUE FMT ; P_OPT = ""
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
         IF S$GUIFORM THEN
            SAVE.S$SCRN.PC = S$SCRN.PC
            MAT S$EDIT = ""
            S$TYP = 0
            CALL SCREEN.INPUT
            S$SCRN.PC = SAVE.S$SCRN.PC
         END ELSE
            MAT S$EDIT = ""
            S$TYP = 0
            CALL SCREEN.INPUT
         END
      CASE 1
         S$DATA(FLD)<S$SCR> = EST.QP.REC(PID)<1,COMP>
         CALL SCREEN.INPUT
         BEGIN CASE
            CASE S$VALUE = "END"
               RETURN
            CASE S$VALUE = "???"
               FORMAT.FLAG = 0
               BEGIN CASE
                  CASE PID = 7 OR PID = 13 OR PID = 14 OR PID = 15
                     MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"I" THEN
                        SAVE.S$GUIFORM = S$GUIFORM
                        SAVE.S$SCRN.PC = S$SCRN.PC
                        S$SCR = S$SCR + 1
                        CALL EST.INK.XREF(CONO,"S",SELECTION)
* T25064 v
                        IF PC.PORT.TYPE = "termulator" THEN
                           TU_FUNC = "TU.FORM.KILL":TU_VERNO     ;*T25024
                           CALL @TU_FUNC(S$GUIFORM,ERROR)     ;*T25024
                        END
* T25064 ^
                        S$GUIFORM = SAVE.S$GUIFORM
                        S$SCRN.PC = SAVE.S$SCRN.PC
                        S$SCR = S$SCR - 1
                        FORMAT.FLAG = 1
                     END
                  CASE PID = 11
                     SAVE.S$GUIFORM = S$GUIFORM
                     SAVE.S$SCRN.PC = S$SCRN.PC
                     S$SCR=S$SCR+1
                     PLINE=EST.PROD.PLINE<1,COMP,1>
                     BASIS=EST.PROD.BASIS.WT<1,COMP,1>
                     FIN=EST.PROD.FINISH<1,COMP,1>
                     CLR=EST.PROD.COLOR<1,COMP,1>
                     WIDTH=""
                     XXLENGTH=""
                     CALL EST.INV.XREF(CONO,"S",PLINE,BASIS,FIN,CLR,WIDTH,XXLENGTH,SELECTION)
* T25064 v
                     IF PC.PORT.TYPE = "termulator" THEN
                        TU_FUNC = "TU.FORM.KILL":TU_VERNO     ;*T25024
                        CALL @TU_FUNC(S$GUIFORM,ERROR)     ;*T25024
                     END
* T25064 ^
                     S$GUIFORM = SAVE.S$GUIFORM
                     S$SCRN.PC = SAVE.S$SCRN.PC
                     S$SCR=S$SCR-1
                     FORMAT.FLAG = 1
               END CASE
               IF FORMAT.FLAG THEN
                  S$SCR = S$SCR - 1
                  S$GUIFORM = S$SCRN.PC<S$SCR>
                  SCREEN FORMAT
                  SCREEN DISPLAY;;ALL
                  START.REF.NO = 1 + INT((COMP - 1) / LINE.COUNT) * LINE.COUNT
                  S$VAL = START.REF.NO
                  S$CNT = DCOUNT(S$DATA(13)<S$SCR>,VM)
                  SCREEN MULTI;;C;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25
                  S$SCR = S$SCR + 1
                  S$GUIFORM = S$SCRN.PC<S$SCR>
                  SAVE.PID = PID
                  SAVE.REF = REF
                  PCNT = DCOUNT(QPSCN.PID,VM)
                  FOR PPTR = 1 TO PCNT
                     PID = QPSCN.PID<1,PPTR>
                     REF = QPSCN.REF<1,PPTR>
                     HCOL = WCOL1 + QPSCN.HCOL<1,PPTR>
                     HROW = WROW1 + QPSCN.HROW<1,PPTR>
                     ICOL = WCOL1 + QPSCN.ICOL<1,PPTR>
                     IROW = WROW1 + QPSCN.IROW<1,PPTR>
                     MATREAD QPPMT.REC FROM QPL.PROMPT,CONO:PID THEN GOSUB 80000
                  NEXT PPTR
                  PID = SAVE.PID
                  REF = SAVE.REF
                  IF SELECTION = "" THEN GOTO 1010
                  MATREAD QPPMT.REC FROM QPL.PROMPT,CONO:PID ELSE MAT QPPMT.REC = ""
*T21862 v
                  IF PID = 7 OR PID = 13 OR PID = 14 OR PID = 15 THEN
                     IF INDEX(SELECTION,',',1) = 0 THEN
                        S$SCR = S$SCR - 1
1020 *
*T21862 v
                        SCREEN FIELD;;36
                        SCREEN INPUT;;36
*T21862 ^
                        IF S$VALUE # '' THEN
                           SELECTION = SELECTION:',':S$VALUE
                        END ELSE GOTO 1020
                        S$SCR = S$SCR + 1
                     END
                  END
*T21862 ^
                  S$VALUE = SELECTION
                  S$DATA(FLD)<S$SCR> = S$VALUE
                  X = COL.NOS<1,FLD>
                  Y = ROW.NOS<1,FLD>
                  BEGIN CASE
                     CASE QP$TYP = "4"
                        CNV = "MD":QP$SCALER
                        DVALUE = OCONV(S$VALUE,CNV)
                     CASE QP$TYP = "6"
                        CNV = "D2/"
                        DVALUE = OCONV(S$VALUE,CNV)
                     CASE 1
                        DVALUE = S$VALUE
                  END CASE
                  FMT = QP$JUSTIFY:"#":QP$MAXL
                  IF NOT(S$GUIFORM) OR (S$GUIFORM AND FORMAT.FLAG) THEN
                     P_X  = X ; P_Y = Y ; P_VALUE = DVALUE FMT ; P_OPT = ""
                     CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                  END
               END
            CASE QP$VALDAT.FILE # ""
               OPEN "",QP$VALDAT.FILE TO F1 THEN
                  ERRMSG = "Cannot locate ":QP$VALDAT.FILE:" file."
                  GOSUB 91000
                  S$DATA(FLD)<S$SCR> = EST.QP.REC(PID)<1,COMP>
                  GOTO 1010
               END ELSE
                  BEGIN CASE
                     CASE QP$PREFIX = "CONO"
                        ID = CONO:S$VALUE
                     CASE 1
                        ID = S$VALUE
                  END CASE
                  READV REC FROM F1, ID,1 ELSE
                     ERRMSG = "Invalid ":QP$VALDAT.FILE:" ID ":ID:". Try again! "
                     GOSUB 91000
                     S$DATA(FLD)<S$SCR> = EST.QP.REC(PID)<1,COMP>
                     GOTO 1010
                  END
               END
         END CASE
         CALL QPL.POST.PROMPT(ACTION, CONO, COMP, PID, DIR, ERRMSG)
         BEGIN CASE
            CASE DIR = "E"
               GOSUB 91000
               S$DATA(FLD)<S$SCR> = EST.QP.REC(PID)<1,COMP>
               GOTO 1010
            CASE 1
               EST.QP.REC(PID)<1,COMP> = S$VALUE
               S$DATA(FLD)<S$SCR> = S$VALUE
         END CASE
   END CASE
   RETURN
*
*---- CLEAR SCREEN AREA
*
70000 *
   IF ACTION = "T" THEN
      IF NOT(S$GUIFORM) THEN
         PRINT @(-1) :
      END
   END ELSE
      FOR ROW = WROW1 TO WROW2
         IF WCOL2 >= 79 THEN
            P_X  = WCOL1 ; P_Y = ROW ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END ELSE
            P_X  = WCOL1 ; P_Y = ROW ; P_VALUE = SPACE(WCOL2-WCOL1+1) ; P_OPT = ""
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      NEXT ROW
   END
   RETURN
*
*---- DISPLAY PROMPT AND DATA
*
80000 *
   MAXL = QP$MAXL
   FMT = QP$JUSTIFY : "#" : MAXL
   IF NOT(S$GUIFORM) THEN
      BEGIN CASE
         CASE LEN(REF) = 1 AND HCOL >= 3
            P_X  = HCOL-3 ; P_Y = HROW ; P_VALUE = REF:"-" ; P_OPT = ""
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE LEN(REF) = 2 AND HCOL >= 4
            P_X  = HCOL-4 ; P_Y = HROW ; P_VALUE = REF:"-" ; P_OPT = ""
            CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END CASE
      P_X  = HCOL ; P_Y = HROW ; P_VALUE = QP$PMSG ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   IF QP$TYP # "0" THEN
      VALUE = EST.QP.REC(PID)<1,COMP>
      BEGIN CASE
         CASE QP$TYP = "4"
            CNV = "MD":QP$SCALER
            DVALUE = OCONV(VALUE,CNV)
         CASE QP$TYP = "6"
            CNV = "D2/"
            DVALUE = OCONV(VALUE,CNV)
         CASE 1
            DVALUE = VALUE
      END CASE
      FMT = QP$JUSTIFY:"#":QP$MAXL
      P_X  = ICOL ; P_Y = IROW ; P_VALUE = DVALUE FMT ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   RETURN
*
*---- ERROR ROUTINE
*
91000 *
   ERR.TYPE = 1;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SI_SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SI_SYSCOM(MAT SYSCOM.REC)
99999 *
   FOR N = 1 TO 60
      S$DATA(N)<S$SCR> = ""
   NEXT N
   IF PC.PORT.TYPE = 'termulator' THEN
      TU_FUNC = "TU.FORM.KILL":TU_VERNO     ;*T25024
      CALL @TU_FUNC(S$GUIFORM,ERROR)     ;*T25024
   END
   RETURN
END
