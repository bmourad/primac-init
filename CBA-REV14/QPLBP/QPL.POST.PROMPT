   SUBROUTINE QPL.POST.PROMPT(ACTION, CONO, COMP, PID, DIR, ERRMSG)
*********************************************************************
*
* PROGRAM  - QPL.POST.PROMPT
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 11/04/93
* MODIFIED - 12/12/96, NA, TASK 21299, SUPPORT FOR 4 WEBS AND 4 INKS,
*
* DESCRIPTION
*
* This subroutine is called after prompting the user for a
* response for the specified prompt.
*
* This subroutine may direct the calling program to perform any
* one of the following:
*
*    DIR     Description
*    ---  ---------------------------------------------------
*     E   Display the specified ERRMSG and re-prompt.
*     C   Continue
*
*T21924 julie 05/12/1997 * FIX CALC OF PAGES PER FORM
*T22310 rick 10/23/1997 * Add new prompt for pgs per form
*T26922 cmykleb 10/18/2002 * Add a new prompt for M/R counts.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE.QP
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.QP
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>CPYLIB>SCREEN.COM
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- INITIALIZATION
*
   DIR = "C"
   ERRMSG = ""
   IF ACTION = "T" AND PID <= 20 THEN GOTO 99999
*
*---- MAIN PROCESSING
*
   BEGIN CASE
      CASE PID = 1
         EST.PROD.MODE<1,COMP,1> = S$VALUE
      CASE PID = 2
         EST.PROD.PG.CNT<1,COMP,1> = S$VALUE
      CASE PID = 3
         IF MOD(EST.PROD.PG.CNT<1,COMP,1>,S$VALUE) > 0 THEN
            ERRMSG = "Invalid entry for specified page count. Try again! "
            GOTO 99999
         END
         EST.PROD.FORMS<1,COMP,1> = S$VALUE
         EST.PROD.PGS.ALL.WEBS<1,COMP> = EST.PROD.PG.CNT<1,COMP,1> / EST.PROD.FORMS<1,COMP,1>
*T22310 v
      CASE PID = 4
         EST.PROD.PGS.PER.FORM<1,COMP,1>=S$VALUE
*T22310 ^
*T26922 v
      CASE PID = 5
         EST.PROD.INIT.MR.CNT<1,COMP,1> = FIELD(S$VALUE,"/",1)
         EST.PROD.SUBS.MR.CNT<1,COMP,1> = FIELD(S$VALUE,"/",2)
*T26922 ^
      CASE PID = 6
         CLR1 = FIELD(S$VALUE,"/",1)+0
         CLR2 = FIELD(S$VALUE,"/",2)+0
         IF CLR1 = 0 AND CLR2 > 0 THEN
            ERRMSG = "Invalid color count on side 1. Try again! "
            GOTO 99999
         END
         EST.PROD.COLORS.1<1,COMP,1> = CLR1
         EST.PROD.COLORS.2<1,COMP,1> = CLR2
         MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:EST.PROD.PRESS.ID<1,COMP> ELSE
            MAT EQUIPMENT.REC = ""
         END
*        BEGIN CASE
*        CASE CLR2 = 0
*           EST.PROD.MODE<1,COMP,1> = "SS"
*        CASE EQP.PRESS.TYPE = "S"
*           EST.PROD.MODE<1,COMP,1> = "WT"
*        CASE EQP.PRESS.PERFECTOR = "Y"
*           EST.PROD.MODE<1,COMP,1> = "P"
*        CASE 1
*           EST.PROD.MODE<1,COMP,1> = "SS"
*        END CASE
         EST.QP.REC(1)<1,COMP> = EST.PROD.MODE<1,COMP,1>
      CASE PID = 7 OR PID = 13 OR PID = 14 OR PID = 15
         PIDS = "7":AM:"13":AM:"14":AM:"15"
         LOCATE (PID+0) IN PIDS,1 SETTING IPTR ELSE IPTR = 1
         IF S$VALUE = "" THEN
            MACRO REPVAL;EST.PROD.INK.ID<1,COMP,1>;"!";IPTR;""
            MACRO REPVAL;EST.PROD.INK.COVER<1,COMP,1>;"!";IPTR;""
            MACRO REPVAL;EST.PROD.INK.SIDES<1,COMP,1>;"!";IPTR;""
         END ELSE
            INKID = TRIM(FIELD(S$VALUE,",",1))
            INKPC = TRIM(FIELD(S$VALUE,",",2))
            INKSD = TRIM(FIELD(S$VALUE,",",3))
            READ REC FROM ESTIMATE.MATL, CONO:"I" THEN
               LOCATE INKID IN REC<1>,1 SETTING P ELSE
                  ERRMSG = "Invalid Ink ID. Try again! "
                  GOTO 99999
               END
            END ELSE
               ERRMSG = "Cannot locate INK master file. Try again! "
               GOTO 99999
            END
            VALID = 1
            IF INKPC = "" THEN VALID = 0
            IF VALID THEN
               FOR N = 1 TO LEN(INKPC) WHILE VALID
                  IF INKPC[N,1] < "0" OR INKPC[N,1] > "9" THEN VALID = 0
               NEXT N
            END
            IF VALID THEN
               IF INKPC <= 0 OR INKPC > 999 THEN VALID = 0
            END
            IF NOT(VALID) THEN
               ERRMSG = "Invalid ink coverage percent. Try again! "
               GOTO 99999
            END
            IF INKSD # "" AND INKSD # "1" AND INKSD # "2" THEN
               ERRMSG = "Invalid number of sides. Try again! "
               GOTO 99999
            END
            IF INKSD = "" THEN
               IF EST.PROD.COLORS.2<1,COMP,1>+0=0 THEN INKSD=1 ELSE INKSD=2
            END
            IF EST.PROD.COLORS.2<1,COMP,1>+0 = 0 THEN
               IF INKSD = 2 THEN
                  ERRMSG = "Invalid number of sides. Try again! "
                  GOTO 99999
               END
            END
            MACRO REPVAL;EST.PROD.INK.ID<1,COMP,1>;"!";IPTR;INKID
            MACRO REPVAL;EST.PROD.INK.COVER<1,COMP,1>;"!";IPTR;INKPC
            MACRO REPVAL;EST.PROD.INK.SIDES<1,COMP,1>;"!";IPTR;INKSD
         END
      CASE PID = 8
         MACRO REPVAL;EST.PROD.INK.COVER<1,COMP,1>;"!";1;S$VALUE
      CASE PID = 10
**       IF NOT(NUM(S$VALUE)) THEN
**          READ REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
**             ERRMSG = "Invalid Bindery Spoilage Table. Try again! "
**             GOTO 99999
**          END
**       END
         IF NUM(S$VALUE) AND S$VALUE # "+" AND S$VALUE # "." AND S$VALUE # "-" THEN
            EST.PROD.BIND.SPOIL<1,COMP,1> = S$VALUE
         END ELSE
            READ REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
               ERRMSG = "Invalid Bindery Spoilage Table. Try again! "
               GOTO 99999
            END
            EST.PROD.BIND.SPOIL<1,COMP,1> = S$VALUE
         END
      CASE PID = 11
         IF S$VALUE # "" THEN
            READ REC FROM INVENTORY, CONO:S$VALUE ELSE
               ERRMSG = "Invalid Inventory ID. Try again! "
               GOTO 99999
            END
         END
         EST.PROD.INV.ID<1,COMP,1> = S$VALUE
      CASE PID = 12
         WVAL    = ""
         WVAL<01>="1"; WVAL<02>="1,1"
         WVAL<03>="2"; WVAL<04>="2,1"; WVAL<05>="2,2"
         WVAL<06>="3"; WVAL<07>="3,1"; WVAL<08>="3,2"; WVAL<09>="3,3"
         WVAL<10>="4"; WVAL<11>="4,1"; WVAL<12>="4,2"; WVAL<13>="4,3"; WVAL<14>="4,4"

         IF S$VALUE = "1.5" THEN
            WEBS = 2                            ;* TOTAL NUMBER OF WEBS
            HWEB = 1                            ;* NUMBER OF HALF WEBS
         END ELSE
            LOCATE S$VALUE IN WVAL,1 SETTING P ELSE
               ERRMSG = "Invalid web definition. Try again! "
               GOTO 99999
            END
            WEBS = FIELD(S$VALUE,",",1)         ;* TOTAL NUMBER OF WEBS
            HWEB = FIELD(S$VALUE,",",2)         ;* NUMBER OF HALF WEBS
         END
         FWEB = WEBS - HWEB                     ;* NUMBER OF FULL WEBS
         FCTR = FWEB * 2 + HWEB
         IF MOD(EST.PROD.PGS.ALL.WEBS<1,COMP>,FCTR) > 0 THEN
            ERRMSG = "Invalid entry for calculated pages per form. Try again! "
            GOTO 99999
         END
         WC = COUNT(EST.PROD.OS.PROD<1,COMP>,SM)+1
         BEGIN CASE
            CASE WEBS < WC
               FOR W=WC TO WEBS+1 STEP -1
                  AC=COUNT(EST.A9C,",")+1
                  FOR AP=1 TO AC
                     AA=FIELD(EST.A9C,",",AP)
                     AA1=FIELD(AA,"-",1)
                     AA2=FIELD(AA,"-",2)
                     IF AA2="" THEN AA2=AA1
                     FOR AAP=AA1 TO AA2
                        EST.REC(AAP)=DELETE(EST.REC(AAP),1,COMP,W)
                     NEXT AAP
                  NEXT AP
               NEXT W
            CASE WEBS > WC
               FOR W=WC+1 TO WEBS
                  AC=COUNT(EST.A9C,",")+1
                  FOR AP=1 TO AC
                     AA=FIELD(EST.A9C,",",AP)
                     AA1=FIELD(AA,"-",1)
                     AA2=FIELD(AA,"-",2)
                     IF AA2="" THEN AA2=AA1
                     FOR AP1=AA1 TO AA2
                        EST.REC(AP1)<1,COMP,W>=EST.REC(AP1)<1,COMP,1>
                     NEXT AP1
                  NEXT AP
               NEXT W
         END CASE
         EST.PROD.WEB.CNT<1,COMP> = WEBS
         EST.PROD.PGS.ALL.WEBS<1,COMP> = EST.PROD.PG.CNT<1,COMP,1> / EST.PROD.FORMS<1,COMP,1>
         FOR W = 1 TO FWEB
            EST.PROD.PGS.PER.FORM<1,COMP,W> = EST.PROD.PGS.ALL.WEBS<1,COMP> / FCTR * 2
            EST.PROD.OS.WIDTH<1,COMP,W> = EST.PROD.OS.WIDTH<1,COMP,1>
            EST.PROD.PS.WIDTH<1,COMP,W> = EST.PROD.OS.WIDTH<1,COMP,W>
         NEXT W
         FOR W = (FWEB+1) TO WEBS
            EST.PROD.PGS.PER.FORM<1,COMP,W> = EST.PROD.PGS.ALL.WEBS<1,COMP> / FCTR
            IF FWEB = 0 THEN
               EST.PROD.OS.WIDTH<1,COMP,W> = EST.PROD.OS.WIDTH<1,COMP,1>
            END ELSE
               EST.PROD.OS.WIDTH<1,COMP,W> = INT(EST.PROD.OS.WIDTH<1,COMP,1> / 2)
            END
            EST.PROD.PS.WIDTH<1,COMP,W> = EST.PROD.OS.WIDTH<1,COMP,W>
         NEXT W
   END CASE
*
*---- END OF PROGRAM
*
99999 *
   IF ERRMSG # "" THEN DIR = "E"
   RETURN
END
