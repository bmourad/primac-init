      SUBROUTINE OPS.RETURN.LINE.SUB(ACTION,CONO,MAT IVC.REC,IPTR)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION - [08.1]
* Copyright 1982 by Vercom Software, Inc. (dba CBA)
* SOURCE   - OPSBP
* PROGRAM  - OPS.RETURN.LINE.SUB
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE     - 07/21/92
* DESCRIPTION
* This program is used to maintain returned line item details.
*T25740 epitka 02/01/2002 * REV12
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>OPS.CPYLIB>BOL
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>OPS.CPYLIB>ORDER.INVOICE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- DIMENSIONED VARIABLES
*
      DIM TMP.REC(20)
*      EQU TMP.PALLET      TO TMP.REC(1)
      EQU TMP.ORDER       TO TMP.REC(2)
      EQU TMP.PROD        TO TMP.REC(3)
      EQU TMP.DESC        TO TMP.REC(4)
      EQU TMP.SHP.QTY     TO TMP.REC(5)
      EQU TMP.REF.QTY     TO TMP.REC(6)
      EQU TMP.UM          TO TMP.REC(7)
      EQU TMP.COST.UNIT   TO TMP.REC(8)
      EQU TMP.UNIT.PRICE  TO TMP.REC(9)
      EQU TMP.AMOUNT      TO TMP.REC(10)
*
      EQU TMP.RTN.QTY     TO TMP.REC(11)
      EQU TMP.RTN.PRICE   TO TMP.REC(12)
      EQU TMP.RTN.WHSE    TO TMP.REC(13)
      EQU TMP.RTN.LOC     TO TMP.REC(14)
*      EQU TMP.RTN.PALLET  TO TMP.REC(15)
*
      EQU TMP.LPTR        TO TMP.REC(19)
      EQU TMP.SPTR        TO TMP.REC(20)
*
*---- INITIALIZATION
*
      ESN = ECD.SCRN.NO
      REF.CNT = 0
      RNO = ""
      CURR.RNO = ""
      LINE.COUNT = 3
      MODE = ""
      MAT TMP.REC = ""
*
*---- MAIN PROCESSING
*
100*
      GOSUB 8000
      GOSUB 9000
      ECD.ACTION=3; CALL SCRN.EDIT
      RNO = 1
      CURR.RNO = 1
      GOSUB 10000
      IF ACTION="C" THEN
         ECD.RET.VALUE=""
         FOR RNO = 1 TO REF.CNT UNTIL ECD.RET.VALUE = "END"
            GOSUB 10000
            GOSUB 1000
            GOSUB 5000
         NEXT RNO
      END
*
*---- GET OPERATOR REQUEST
*
500*
      ECD.NUM=21; ECD.ACTION=4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "C"
            MODE = "C"
            GOSUB 650
            IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
               IF NUM(ECD.RET.VALUE) THEN
                  RNO = ECD.RET.VALUE
                  GOSUB 1000
                  GOSUB 5000
               END ELSE
                  ECD.RET.VALUE = ""
                  FOR RNO = 1 TO REF.CNT UNTIL ECD.RET.VALUE = "END"
                     GOSUB 1000
                     GOSUB 5000
                  NEXT RNO
               END
            END
         CASE OPTION = "R"
            MODE="R"
            GOSUB 600
            IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
               RNO = ECD.RET.VALUE
               ECD.SCRN.NO = 3
               CALL OPS.RETURN.LINE.DET("M",CONO,MAT IVC.REC,MAT TMP.REC,RNO)
               GOSUB 9100
               ECD.SCRN.NO=ESN; ECD.ACTION=3; CALL SCRN.EDIT
            END
         CASE OPTION = "S" AND REF.CNT > 0
            RNO = CURR.RNO + LINE.COUNT
            IF RNO > REF.CNT THEN RNO = 1
            GOSUB 10000
         CASE OPTION = "SF" AND REF.CNT > 0
            RNO = CURR.RNO + LINE.COUNT
            IF RNO > REF.CNT THEN RNO = 1
            GOSUB 10000
         CASE OPTION = "ST" AND REF.CNT > 0
            RNO = 1
            GOSUB 10000
         CASE OPTION = "SR" AND REF.CNT > 0
            RNO = CURR.RNO - LINE.COUNT
            IF RNO < 1 THEN RNO = 1
            GOSUB 10000
         CASE OPTION = "SB" AND REF.CNT > 0
            RNO = REF.CNT
            GOSUB 10000
         CASE OPTION = "E" OR OPTION = "END"
******************** RE-SUMMARIZE PRODUCT DETAIL ********************
            IF NUM(IPTR) THEN
               LP1 = IPTR+1
               LP2 = DCOUNT(IVC.PROD,VM)
               RNO = DCOUNT(TMP.PROD,VM)
               GOSUB 8500
               LPTR = IPTR-1
               PREV.ORDER = IVC.CHG.ORDER<1,LPTR>
               PREV.BPROD = FIELD(IVC.SID<1,LPTR>,"!",2)
               PREV.PRICE = IVC.UNIT.PRICE<1,LPTR>
               PREV.LPTR  = LPTR
            END ELSE
               PREV.ORDER = "!@#$%"
               PREV.BPROD = "!@#$%"
               PREV.PRICE = "!@#$%"
               PREV.LPTR  = 0
            END
            FOR REF = 1 TO REF.CNT
               LPTR = TMP.LPTR<1,REF>
               SPTR = TMP.SPTR<1,REF>
               CURR.ORDER = TMP.ORDER<1,REF>
               CURR.BPROD = FIELD(IVC.SID<1,LPTR>,"!",2)
               CURR.PRICE = TMP.UNIT.PRICE<1,REF>
               BEGIN CASE
                  CASE LPTR = PREV.LPTR
                     BEGIN CASE
                        CASE CURR.ORDER # PREV.ORDER
                           SPLIT = 1
                        CASE CURR.BPROD # PREV.BPROD
                           SPLIT = 1
                        CASE CURR.PRICE # PREV.PRICE
                           SPLIT = 1
                        CASE 1
                           SPLIT = 0
                     END CASE
                     IF SPLIT THEN GOSUB 800
                     GOSUB 900
                  CASE 1
                     BEGIN CASE
                        CASE CURR.ORDER # PREV.ORDER
                           COMBINE = 0
                        CASE CURR.BPROD # PREV.BPROD
                           COMBINE = 0
                        CASE CURR.PRICE # PREV.PRICE
                           COMBINE = 0
                        CASE 1
                           COMBINE = 1
                     END CASE
                     IF COMBINE THEN
                        GOSUB 700
                     END ELSE
                        IVC.QUANTITY<1,LPTR> = 0
                     END
                     GOSUB 900
               END CASE
               PREV.LPTR = LPTR
               PREV.ORDER = CURR.ORDER
               PREV.BPROD = CURR.BPROD
               PREV.PRICE = CURR.PRICE
            NEXT REF
*********************************************************************
            GOTO 99999
      END CASE
      GOTO 500
*
*---- GET LINE NUMBER
*
600*
      SCV.REC(22)<ESN>=""
      ECD.MINV=CURR.RNO;ECD.MAXV=CURR.RNO + LINE.COUNT - 1
      IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
      ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
      RETURN
*
*---- GET LINE NUMBER OR ALL
*
650*
      SCV.REC(23)<ESN>=""
      MIN.LINE=CURR.RNO;MAX.LINE=CURR.RNO + LINE.COUNT - 1
      IF MAX.LINE > REF.CNT THEN MAX.LINE=REF.CNT
      ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "END"
         CASE ECD.RET.VALUE = ""
         CASE ECD.RET.VALUE = "A"
         CASE ECD.RET.VALUE = "ALL"
         CASE ECD.RET.VALUE >= MIN.LINE AND ECD.RET.VALUE <= MAX.LINE
         CASE 1
            ERRMSG = "** OUT OF RANGE **"
            GOSUB 90000
            GOTO 650
      END CASE
      RETURN
*
*---- COMBINE INVOICE LINES AT LPTR,SPTR WITH PREVIOUS LINE
*
700*
      NPTR=LPTR-1
      NCNT=DCOUNT(IVC.PROD<1,NPTR>,SM)
      AC=COUNT(IVC.A1B,",")+1
      FOR AP=1 TO AC
         AA=FIELD(IVC.A1B,",",AP)
         AA1=FIELD(AA,"-",1)
         AA2=FIELD(AA,"-",2)
         IF AA2="" THEN AA2=AA1
         FOR AAP=AA1 TO AA2
            CURVAL=IVC.REC(AAP)<1,LPTR,SPTR>
            IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,(NCNT+1),CURVAL)
         NEXT AAP
      NEXT AP
      SCNT=DCOUNT(IVC.PROD<1,LPTR>,SM)
      IF SCNT=1 THEN
         AC=COUNT(IVC.A1A,",")+1
         FOR AP=1 TO AC
            AA=FIELD(IVC.A1A,",",AP)
            AA1=FIELD(AA,"-",1)
            AA2=FIELD(AA,"-",2)
            IF AA2="" THEN AA2=AA1
            FOR AAP=AA1 TO AA2
               IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,0)
            NEXT AAP
         NEXT AP
      END ELSE
         AC=COUNT(IVC.A1B,",")+1
         FOR AP=1 TO AC
            AA=FIELD(IVC.A1B,",",AP)
            AA1=FIELD(AA,"-",1)
            AA2=FIELD(AA,"-",2)
            IF AA2="" THEN AA2=AA1
            FOR AAP=AA1 TO AA2
               IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,SPTR)
            NEXT AAP
         NEXT AP
      END
*
      FOR N=REF TO REF.CNT
         BEGIN CASE
            CASE TMP.LPTR<1,N>=LPTR
               TMP.LPTR<1,N>=TMP.LPTR<1,N>-1
               TMP.SPTR<1,N>=TMP.SPTR<1,N>+NCNT
            CASE TMP.LPTR<1,N> > LPTR
               TMP.LPTR<1,N>=TMP.LPTR<1,N>-1
         END CASE
      NEXT N
*
      LPTR=NPTR
      RETURN
*
*---- SPLIT INVOICE LINE
*
800*
      NPTR=LPTR+1
      SCNT=DCOUNT(IVC.PROD<1,LPTR>,SM)
      AC=COUNT(IVC.A1A,",")+1
      FOR AP=1 TO AC
         AA=FIELD(IVC.A1A,",",AP)
         AA1=FIELD(AA,"-",1)
         AA2=FIELD(AA,"-",2)
         IF AA2="" THEN AA2=AA1
         FOR AAP=AA1 TO AA2
            CURVAL=IVC.REC(AAP)<1,LPTR>
            IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,0,CURVAL)
         NEXT AAP
      NEXT AP
*
      AC=COUNT(IVC.A1B,",")+1
      FOR AP=1 TO AC
         AA=FIELD(IVC.A1B,",",AP)
         AA1=FIELD(AA,"-",1)
         AA2=FIELD(AA,"-",2)
         IF AA2="" THEN AA2=AA1
         FOR AAP=AA1 TO AA2
            IVC.REC(AAP)<1,NPTR>=""
            FOR N=SCNT TO SPTR STEP -1
               CURVAL=IVC.REC(AAP)<1,LPTR,N>
               IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,1,CURVAL)
               IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,N)
            NEXT N
         NEXT AAP
      NEXT AP
*
      FOR N=REF TO REF.CNT
         BEGIN CASE
            CASE TMP.LPTR<1,N>=LPTR
               TMP.LPTR<1,N>=TMP.LPTR<1,N>+1
               TMP.SPTR<1,N>=TMP.SPTR<1,N>-SPTR+1
            CASE TMP.LPTR<1,N> > LPTR
               TMP.LPTR<1,N>=TMP.LPTR<1,N>+1
         END CASE
      NEXT N
*
      LPTR=NPTR
      IVC.QUANTITY<1,LPTR>=0
      RETURN
*
*---- ACCUMULATE QUANTITY AND CALCULATE AMOUNT
*
900*
      IVC.QUANTITY<1,LPTR>=IVC.QUANTITY<1,LPTR>+TMP.REF.QTY<1,REF>
      IVC.UNIT.PRICE<1,LPTR>=TMP.UNIT.PRICE<1,REF>
*
      QTY=IVC.QUANTITY<1,LPTR>
      COST.UNIT=IVC.COST.UNIT<1,LPTR>
      UNIT.PRICE=IVC.UNIT.PRICE<1,LPTR>
      IVC.AMOUNT<1,LPTR>=INT(QTY/COST.UNIT*(UNIT.PRICE/10)+0.5)
*
      LPTR=TMP.LPTR<1,REF>
      SPTR=TMP.SPTR<1,REF>
*     IF TMP.REF.QTY<1,REF>=IVC.SHP.QTY<1,LPTR,SPTR> THEN
*        IVC.REF.QTY<1,LPTR,SPTR>=""
*     END ELSE
      IVC.REF.QTY<1,LPTR,SPTR>=TMP.REF.QTY<1,REF>
*     END
      RETURN
*
*---- GET REFUND QUANTITY
*
1000*
      ECD.NUM=15; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      TMP.REF.QTY<1,RNO> = ECD.RET.VALUE
*
      ECD.NUM=17; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      TMP.UNIT.PRICE<1,RNO> = ECD.RET.VALUE
      RETURN
*
*---- CALULATE LINE AMOUNT AND DISPLAY
*
5000*
      RQTY = TMP.REF.QTY<1,RNO>
      COST.UNIT = TMP.COST.UNIT<1,RNO>
      UNIT.PRICE = TMP.UNIT.PRICE<1,RNO>
      TMP.AMOUNT<1,RNO> = INT(RQTY/COST.UNIT*(UNIT.PRICE/10)+0.5)
      SCV.REC(18)<ESN,RNO> = TMP.AMOUNT<1,RNO>
      ECD.NUM=18; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
      RETURN
*
*---- COLLECT DATA FOR DISPLAY
*
8000*
      MATREAD BOL.REC FROM BOL, CONO:IVC.BOL.NO ELSE
         MAT BOL.REC = ""
      END
      IF BOL.SHIP.TO = 0 THEN
         CUSTID = BOL.CUST
         MATREAD CUST.REC FROM CUSTOMER, CONO:CUSTID ELSE
            MAT CUST.REC = ""
            CUST.NAME = "???????????????"
         END
      END ELSE
         MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:BOL.SHIP.VIA ELSE
            MAT SHIP.VIA.REC = ""
         END
         IF NUM(IPTR) THEN
            LP1 = IPTR
            LP2 = IPTR
         END ELSE
            LP1 = 1
            LP2 = DCOUNT(IVC.PROD,VM)
         END
8500*
         FOR LPTR = LP1 TO LP2
            ORDER.NO = IVC.CHG.ORDER<1,LPTR>
            UM = IVC.UM<1,LPTR>
            COST.UNIT = IVC.COST.UNIT<1,LPTR>
            UNIT.PRICE = IVC.UNIT.PRICE<1,LPTR>
            SCNT = DCOUNT(IVC.PROD<1,LPTR>,SM)
            FOR SPTR = 1 TO SCNT
               PROD = IVC.PROD<1,LPTR,SPTR>
               WHSE = IVC.WHSE<1,LPTR,SPTR>
               MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
                  MAT INV.REC = ""
               END
               RNO = RNO + 1
*               TMP.PALLET<1,RNO> = IVC.PALLET<1,LPTR,SPTR>
               TMP.ORDER<1,RNO> = ORDER.NO
               TMP.PROD<1,RNO> = PROD
               TMP.DESC<1,RNO> = INV.FULL.DESC
               TMP.SHP.QTY<1,RNO> = IVC.SHP.QTY<1,LPTR,SPTR>
               IF IVC.REF.QTY<1,LPTR,SPTR> = "" THEN
                  TMP.REF.QTY<1,RNO> = TMP.SHP.QTY<1,RNO>
               END ELSE
                  TMP.REF.QTY<1,RNO> = IVC.REF.QTY<1,LPTR,SPTR>
               END
*
               RQTY = TMP.REF.QTY<1,RNO>
               TMP.UM<1,RNO> = UM
               TMP.COST.UNIT<1,RNO> = COST.UNIT
               TMP.UNIT.PRICE<1,RNO> = UNIT.PRICE
               TMP.AMOUNT<1,RNO>=INT(RQTY/COST.UNIT*(UNIT.PRICE/10)+0.5)
               TMP.LPTR<1,RNO> = LPTR
               TMP.SPTR<1,RNO> = SPTR
            NEXT SPTR
         NEXT LPTR
         REF.CNT = DCOUNT(TMP.PROD,VM)
         RETURN
*
*---- DISPLAY DATA
*
9000*
         SCV.REC(1)<ESN>   = DATE()
         SCV.REC(2)<ESN>   = IVC.BOL.NO
         IF NUM(BOL.SHIP.TO[1,1]) THEN
            SCV.REC(3)<ESN>   = CUSTID
            SCV.REC(4)<ESN,1> = CUST.NAME
            SCV.REC(4)<ESN,2> = CUST.ADDR1
            SCV.REC(4)<ESN,3> = CUST.ADDR2
            SCV.REC(4)<ESN,4> = CUST.ADDR3
            SCV.REC(4)<ESN,5> = CUST.ADDR4
         END ELSE
            SCV.REC(3)<ESN>   = BOL.SHIP.TO
            SCV.REC(4)<ESN,1> = OSD.SHIPTO<1,1>
            SCV.REC(4)<ESN,2> = OSD.SHIPTO<1,2>
            SCV.REC(4)<ESN,3> = OSD.SHIPTO<1,3>
            SCV.REC(4)<ESN,4> = OSD.SHIPTO<1,4>
            SCV.REC(4)<ESN,5> = OSD.SHIPTO<1,5>
         END
         SCV.REC(5)<ESN>   = SHPV.DESC
         SCV.REC(6)<ESN>   = BOL.SHP.DATE
         SCV.REC(7)<ESN>   = BOL.FREIGHT
         SCV.REC(8)<ESN>   = SUM(SUM(BOL.SHP.AMT))
9100*
         SCV.REC(12)<ESN>  = TMP.PROD
*         SCV.REC(13)<ESN>  = TMP.PALLET
         SCV.REC(14)<ESN>  = TMP.ORDER
         SCV.REC(15)<ESN>  = TMP.REF.QTY
         SCV.REC(16)<ESN>  = TMP.UM
         SCV.REC(17)<ESN>  = TMP.UNIT.PRICE
         SCV.REC(18)<ESN>  = TMP.AMOUNT
         SCV.REC(19)<ESN>  = TMP.DESC
         SCV.REC(20)<ESN>  = ""
         FOR REF = 1 TO REF.CNT
            IF TMP.RTN.QTY<1,REF>+0 > 0 THEN SCV.REC(20)<ESN,REF> = "*"
         NEXT REF
         RETURN
*
*---- DISPLAY MULTI-LINE FIELDS
*
10000*
         START.RNO = 1 + INT((RNO-1)/LINE.COUNT)*LINE.COUNT
         IF START.RNO = CURR.RNO THEN GOTO 10100
         CURR.RNO = START.RNO
         ECD.NUM=11; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=12; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=13; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=14; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=15; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=16; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=17; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=18; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=19; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
         ECD.NUM=20; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
10100*
         PGNUM = INT(CURR.RNO/LINE.COUNT+0.9)
         PGCNT = INT(REF.CNT/LINE.COUNT+0.9)
         IF PGNUM > PGCNT THEN PGCNT = PGNUM
         SCV.REC(41)<ESN> = PGNUM "R%2"
         ECD.NUM=41; ECD.ACTION=5; CALL SCRN.EDIT
         SCV.REC(42)<ESN> = PGCNT "R%2"
         ECD.NUM=42; ECD.ACTION=5; CALL SCRN.EDIT
         RETURN
*
*---- ERROR ROUTINE
*
90000    ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*---- END OF PROGRAM
*
99999*
         ECD.ACTION=99;CALL SCRN.EDIT
         RETURN
      END
