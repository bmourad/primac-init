SUBROUTINE KIT.COMPONENT.SUB(CONO,ORDNO,SHPNO,PDNO,MAT ORD.DET.REC)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - KIT.COMPONENT.SUB
* BY            -
* DATE          -
* DESCRIPTION   -
* TASK MODS
*     18606 01/06/95 LLH ADD KIT, EXPLODED ITEMS AND NEW SCREEN
*
********************************************************************
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.BOM
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>ICS.CPYLIB>PRICE.TABLE
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
*
*---- Display screen
*
GEN.SHPNO = "000"
TODAY = DATE()
LINE.SPACE = 2
PAGE.SIZE = 5
BEGIN.PAGE = 10
DIM TEMP.MF(25)
MAT TEMP.MF = ""
*
ESN = ECD.SCRN.NO
*
ECD.ACTION = 3; CALL SCRN.EDIT
*
ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ORDNO
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = ORD.CUST
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
ECD.ACTION = 5; CALL SCRN.EDIT
*
100 *
NUM.ON.SCRN = ""
LINES = DCOUNT(NUM.ON.SCRN,VM); LNFLG = 0
LNFLG = 0
LOCATE PDNO IN OSD.PROD<1>,1 SETTING INDX ELSE
   GOTO 99999
END
*INDX = INDX + 1
NUM.PROD = DCOUNT(OSD.PROD,VM)
NUM.ON.SCRN = ""
K = 0
FOR I = INDX TO NUM.PROD
   IF OSD.KIT<1,I> = "K" THEN
      IF I = INDX THEN
         NUM.PROD = NUM.PROD + 1
         K = K + 1
         NUM.ON.SCRN<1,K> = I
      END ELSE
         I = NUM.PROD + 1
      END
   END
   IF OSD.KIT<1,I> = "M" THEN
      NUM.PROD = NUM.PROD + 1
      K = K + 1
      NUM.ON.SCRN<1,K> = I
   END
NEXT I
*
101 *
*
LINES = DCOUNT(NUM.ON.SCRN,VM)
LN = 1; OLD.START.LINE = 0
GOSUB 7900; GOSUB 7955
*
*---- Prompt line
*
IF ORD.STATUS<1,1> = "CLOSED" OR ORD.STATUS<1,1> = "CANCEL" THEN
   OPTNUM = 43
END ELSE
   OPTNUM = 41
END
MORE = 1
LOOP
   ECD.NUM = OPTNUM; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
         MORE = 0
      CASE OPTION = "S" OR OPTION = "SF"
         NUM.PROD = DCOUNT(NUM.ON.SCRN,VM)
         LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 7900
      CASE OPTION = "SR"
         LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
         IF LN < 1 THEN LN = 1
         GOSUB 7900
      CASE OPTION = "ST"
         LN = 1
         GOSUB 7900
      CASE OPTION = "SB"
         LN = LINES
         GOSUB 7900
      CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
         LN.NO = OPTION[2,99] + 0
         IF LN.NO < 1 OR LN.NO > LINES THEN
            ERRMSG = "** Invalid selection **"
            GOSUB 91000
         END ELSE
            LN = LN.NO
            GOSUB 7900
         END
      CASE 1
         ERRMSG = "Invalid entry, please re-enter"
         GOSUB 91000
   END CASE
WHILE MORE > 0 DO REPEAT
IF MORE < 0 THEN
   GOTO 100
END ELSE
   GOTO 99999
END
*
*
*---- Display scrolling lines
7900*
START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 7990
OLD.START.LINE = START.LINE
ECD.NUM = 31
SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
CNT = 1
*NUM.ON.SCRN= 0
FOR N = START.LINE TO LAST.LINE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   GOSUB 7910
   CNT = CNT + 1
*
7901 *
*
NEXT N
*
7902 *
*
FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X = 0 ; P_Y  = SLN+1 ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
7990*
RETURN
*
*---- Display a single line
7910*
7911*
INDX = NUM.ON.SCRN<1,N>
MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,INDX> ELSE
   MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
END
GOSUB 9000
P_X = 0 ; P_Y = SLN ; P_VALUE = N"R%2" ; P_OPT = "CL"
P_X := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.PROD<1,INDX> "L#15"
P_X := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.WHSE<1,INDX> "L#4"
P_X := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,3> "L#3"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
MATREAD IWH.REC FROM INV.WHSE, CONO:OSD.PROD<1,INDX>:"!":OSD.WHSE<1,INDX> ELSE
   MAT IWH.REC = ""
END
IF OSD.KIT<1,INDX> = "K" THEN
   PRINT.ORDER = OSD.KIT.G.QTY<1,INDX>
END ELSE
   PRINT.ORDER = ""
END
P_X = 28 ; P_Y = SLN ; P_VALUE =  OCONV(INT(((PRINT.ORDER / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
P_X := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((OSD.R.QTY<1,INDX> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
*P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((OSD.A.QTY<1,INDX> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
IF OSD.KIT.PRICE<1,INDX> > 0 THEN
   P_X := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OSD.KIT.PRICE<1,INDX>,"MD4") "R#10"
END ELSE
   P_X := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(10)
END
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*GOSUB 7920
P_X = 3 ; P_Y  = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45"
IF OSD.JOB<1,INDX,2> # "" THEN
   P_X := AM:50 ; P_Y  := AM:SLN+1 ; P_VALUE := AM: "MULTI" "L#8"
END ELSE
   P_X := AM:50 ; P_Y  := AM:SLN+1 ; P_VALUE := AM: OSD.JOB<1,INDX> "L#8"
END
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
RETURN
*
*---- Display temp line
7915*
RETURN
*
*---- Line status
7920*
RETURN
7950*
ECD.NUM = 31
SCV.REC(ECD.NUM)<ESN> = INT(LN/PAGE.SIZE+.9) "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
7955*
ECD.NUM = 32
SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
RETURN
*
*---- Display data
8000*
ECD.ACTION = 3; CALL SCRN.EDIT
OLD.START.LINE = 0; GOSUB 7900
RETURN
8888 *
MAT TEMP.MF = ""
INDX = NUM.ON.SCRN<1,LN>
IF INDX > 0 THEN
   TEMP.MF(01) = OSD.PROD<1,INDX>
   TEMP.MF(02) = OSD.WHSE<1,INDX>
   TEMP.MF(03) = OSD.G.QTY<1,INDX>
   TEMP.MF(04) = OSD.O.QTY<1,INDX>
   TEMP.MF(06) = OSD.RECP.NO<1,INDX>
   TEMP.MF(07) = OSD.RS.LOC<1,INDX>
   TEMP.MF(08) = OSD.RS.QTY<1,INDX>
   TEMP.MF(09) = OSD.FI.QTY<1,INDX>
   TEMP.MF(10) = OSD.REL.NO<1,INDX>
   TEMP.MF(11) = OSD.R.QTY<1,INDX>
   TEMP.MF(12) = OSD.JOB.QTY<1,INDX>
   TEMP.MF(13) = OSD.JOB<1,INDX>
   TEMP.MF(14) = OSD.A.QTY<1,INDX>
   TEMP.MF(15) = OSD.PRICE<1,INDX>
   TEMP.MF(16) = OSD.OLD.QTY<1,INDX>
   TEMP.MF(17) = OSD.REL.QTY<1,INDX>
END
RETURN
*
9000*
*COPY>ICSBP>INV.UM.CNV
RETURN
*
*--- CALLS FOR SYSCOM
*
91000 *
ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
ECD.ACTION = 99 ; CALL SCRN.EDIT
RETURN
END
