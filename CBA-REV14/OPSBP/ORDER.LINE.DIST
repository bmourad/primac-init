  SUBROUTINE ORDER.LINE.DIST(CONO,ORDNO,SHPNO,PDNO,WHNO,UNPRC,PROD.SEQ,PROD.KIT)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - ORDER.LINE.DIST
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
*
* TASK
*    18606 KITTING
*
*T25740 epitka 01/31/2002 * REV12
********************************************************************
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
  OLD.SHPNO = SHPNO
  GEN.SHPNO = "000"
  TODAY = DATE()
  LINE.SPACE = 2
  PAGE.SIZE = 5
  BEGIN.PAGE = 8
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
*
  LOCATE OLD.SHPNO IN ORD.SHIP.TO<1>,1 SETTING S ELSE GOTO 99999
  SHPNO = OLD.SHPNO
  STATUS = "D"
  CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
  FOR P = 1 TO ORD.DET.REC.SIZE
    ORD.DET.REC(P) = ORD.DET.SUM(P,S)
  NEXT P
  MCNT = DCOUNT(OSD.PROD,VM)
  PCNT = 0; BREF = ""; PROD.SUBS = ""
  FOR P = 1 TO MCNT
    MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,P> THEN
      IF INV.SUBS # "" THEN
        PCNT = PCNT + 1
        BREF<PCNT> = P
        PROD.SUBS<PCNT> = INV.SUBS
      END
    END
  NEXT P
  IF PCNT < 1 THEN
    ERRMSG = "Cannot locate any base products to distribute for this order"
    GOSUB 91000; GOTO 99999
  END
*
  LOCATE GEN.SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR ELSE
    ERRMSG = "Cannot locate the general Ship To for this order"
    GOSUB 91000; GOTO 99999
  END
*
  ESN = ECD.SCRN.NO
  ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ORDNO
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = ORD.CUST
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
  ECD.ACTION = 5; CALL SCRN.EDIT
*
  REFNO = ""; PDNOS = ""; WHNOS = ""
  FOR M = 1 TO PCNT
    P = BREF<M>
    LOCATE OSD.PROD<1,P> IN PDNOS<1>,1 SETTING PLOC ELSE
      PDNOS<1,PLOC> = OSD.PROD<1,P>
    END
    LOCATE OSD.WHSE<1,P> IN WHNOS<PLOC>,1 SETTING WLOC ELSE
      WHNOS<PLOC,WLOC> = OSD.WHSE<1,P>
    END
    REFNO<PLOC,WLOC> = P
  NEXT M
  DST.SUBS = ""; DST.WHSE = ""
  DST.QTY = ""; ORG.QTY = ""; ORD.QTY = ""
*
  IF PDNO # "" THEN
    ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
    ECD.ACTION = 5; CALL SCRN.EDIT
    ECD.RET.VALUE = PDNO; GOTO 110
  END ELSE
    PPTR = 1; WHNO = ""
  END
*
*---- Product Number
100*
  ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
110*
  LN = 1; LINES = 0; OLD.START.LINE = 0
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99999
    CASE ECD.RET.VALUE = "S"
      BEGIN CASE
        CASE PCNT < 2 AND BREF<PCNT> = PPTR
          ERRMSG = "There is only one product for this order"
          GOSUB 91000; SCV.REC(ECD.NUM)<ESN> = ""; GOTO 100
        CASE PCNT < 2
          PPTR = BREF<1>
        CASE PPTR = BREF<PCNT>
          PPTR = BREF<1>
        CASE 1
          LOCATE PPTR IN BREF,1 SETTING FND THEN
            PPTR = BREF<FND+1>
          END ELSE
            PPTR = BREF<1>
          END
      END CASE
      PDNO = OSD.PROD<1,PPTR>; WHNO = OSD.PROD<1,PPTR>
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE ECD.RET.VALUE = ""
      IF PCNT = 1 THEN
        PDNO = OSD.PROD<1,BREF<1>>; WHNO = OSD.WHSE<1,BREF<1>>
      END ELSE
        GXR.NAME = "INV.FNGD.ORDER.DIST"
        GXR.FILE = INVENTORY
        GXR.SRCH.ID = PDNOS
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        LN = 1; LINES = 0; OLD.START.LINE = 0
        GOSUB 7900
        IF GXR.ID = "" THEN GOTO 100
        PDNO = GXR.ID; WHNO = ""
      END
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      PDNO = ECD.RET.VALUE
  END CASE
  LOCATE PDNO IN PDNOS<1>,1 SETTING PLOC ELSE
    ERRMSG = "Cannot locate product (":PDNO:") for this order."
    GOSUB 91000; GOTO 100
  END
  MATREAD INV.REC FROM INVENTORY, CONO:PDNO ELSE
    ERRMSG = "Cannot locate Product # ":PDNO
    GOSUB 91000; GOTO 100
  END
*COPY>ICSBP>INV.UM.CNV
  ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
*
  WCNT = DCOUNT(WHNOS<PLOC>,VM)
  BEGIN CASE
    CASE WCNT = 1
      ECD.RET.VALUE = WHNOS<PLOC,1>
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
    CASE WHNO # ""
      ECD.RET.VALUE = WHNO
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
  END CASE
*
*---- Warehouse Number
200*
  ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
210*
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      WHNO = ""; GOTO 100
    CASE ECD.RET.VALUE = ""
      GXR.NAME = "INV.WHSE.CODE"
      GXR.SRCH.ID = WHNOS<PLOC>
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 8000
      IF GXR.ID = "" THEN GOTO 200
      WHNO = GXR.ID
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = WHNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      WHNO = ECD.RET.VALUE
  END CASE
  LOCATE WHNO IN WHNOS<PLOC>,1 SETTING WLOC ELSE
    ERRMSG = "Warehouse (":WHNO:") is not valid for product (":PDNO:") on this order"
    GOSUB 91000; GOTO 200
  END
  MATREAD IWH.REC FROM INV.WHSE, CONO:PDNO:"!":WHNO ELSE
    ERRMSG = "Cannot locate warehouse (":WHNO:") for product # ":PDNO
    GOSUB 91000; GOTO 200
  END
  PPTR = REFNO<PLOC,WLOC>
  LOCATE PPTR IN BREF,1 SETTING BPTR ELSE BPTR = 1
  ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = BPTR "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = PCNT "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
*
  DST.SUBS<PPTR> = ""; DST.WHSE<PPTR> = ""
  DST.QTY<PPTR> = ""; ORG.QTY<PPTR> = ""; ORD.QTY<PPTR> = ""
  FOR M = 1 TO MCNT
    LOCATE M IN BREF,1 SETTING X ELSE
      LIMIT = PCNT
      FOR P = 1 TO LIMIT
        LOCATE OSD.PROD<1,M> IN PROD.SUBS<P>,1 SETTING X THEN
          PTR = 1
          LOOP
            LOCATE OSD.PROD<1,M> IN DST.SUBS<PPTR>,PTR SETTING SLOC THEN
              IF OSD.WHSE<1,M> = DST.WHSE<PPTR,SLOC> THEN
                DST.QTY<PPTR,SLOC> = DST.QTY<PPTR,SLOC> + OSD.G.QTY<1,M>
                ORD.QTY<PPTR,SLOC> = ORD.QTY<PPTR,SLOC> + OSD.O.QTY<1,M>
                PTR = 0
              END
            END ELSE
              DST.SUBS<PPTR,SLOC> = OSD.PROD<1,M>
              DST.WHSE<PPTR,SLOC> = OSD.WHSE<1,M>
              DST.QTY<PPTR,SLOC> = OSD.G.QTY<1,M>
              ORD.QTY<PPTR,SLOC> = OSD.O.QTY<1,M>
              PTR = 0
            END
          WHILE PTR DO
            PTR = SLOC + 1
          REPEAT
          LIMIT = 0
        END
      NEXT P
    END
  NEXT M
  ECD.NUM = 25
  ALL.G.QTY = OSD.G.QTY<1,PPTR> + SUM(DST.QTY)
  ALL.O.QTY = OSD.O.QTY<1,PPTR> + SUM(ORD.QTY)
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(ALL.G.QTY / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  LINES = DCOUNT(DST.SUBS<PPTR>,VM)
  ULINES = LINES + 1
  IF LINES THEN
    ORG.QTY = DST.QTY
    ECD.NUM = 26
    SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(DST.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
    ECD.ACTION = 5; CALL SCRN.EDIT
  END ELSE
    ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    OPTION = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 7000
    WHILE LINES > OLD.LINES DO REPEAT
    ECD.NUM = 31
    SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
*
*---- Prompt line
500*
  ECD.NUM = 32
  SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  MORE = 1; GOSUB 7900
  LOOP
    ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
        GOSUB 5000
        MORE = 0
      CASE OPTION = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 7000
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES; GOSUB 7900
      CASE OPTION = "D"
        GOSUB 7800
        BEGIN CASE
          CASE LN.NO < 1
          CASE LN.NO < ULINES
            ERRMSG = "Cannot delete a previously distributed product."
            GOSUB 91000
          CASE 1
            LN = LN.NO; GOSUB 7700
            LINES = DCOUNT(DST.SUBS<PPTR>,VM)
            IF LN > LINES THEN LN = LN - 1
            OLD.START.LINE = 0; GOSUB 7900
        END CASE
      CASE OPTION = "S" OR OPTION = "SF"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 7900
      CASE OPTION = "SR"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 7900
      CASE OPTION = "ST"
        LN = 1
        GOSUB 7900
      CASE OPTION = "SB"
        LN = LINES
        GOSUB 7900
      CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
        LN.NO = OPTION[2,99] + 0
        IF LN.NO < 1 OR LN.NO > LINES THEN
          ERRMSG = "** Invalid selection **"
          GOSUB 91000
        END ELSE
          LN = LN.NO
          GOSUB 7900
        END
      CASE OPTION = "P" AND PCNT < 2
        ERRMSG = "There is only one product for this order"
        GOSUB 91000
      CASE OPTION = "P"
        GOSUB 5000
        MORE = 0 - 1
      CASE NOT(NUM(OPTION))
        ERRMSG = "Invalid entry, please re-enter"
        GOSUB 91000
      CASE OPTION < 1 OR OPTION > LINES
        ERRMSG = "Out of range, please re-enter"
        GOSUB 91000
      CASE 1
        LN = OPTION; GOSUB 7900
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
        IF LN < ULINES THEN
          GOSUB 7030
        END ELSE
          GOSUB 7010
        END
    END CASE
  WHILE MORE > 0 DO REPEAT
  IF MORE < 0 THEN
    GOTO 100
  END ELSE
    GOTO 99999
  END
*
*---- Distribute Base product quantity
5000*
  IF LINES < 1 THEN GOTO 5099
*     LOCATE OLD.SHPNO IN OSD.SHIP.TO<1,BREF<PPTR>>,1 SETTING S ELSE GOTO 5099
*     LOCATE OLD.SHPNO IN ORD.SHIP.TO<1>,1 SETTING S ELSE GOTO 5099
*     SHPNO = OLD.SHPNO
*     STATUS = "D"
*     CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
*     FOR P = 1 TO ORD.DET.REC.SIZE
*        ORD.DET.REC(P) = ORD.DET.SUM(P,S)
*     NEXT P
  PDNUM = PDNO; WHNUM = WHNO
  GOSUB 5100
  BP = P; TOT.DST.QTY = OSD.G.QTY<1,BP>
  TOT.ORD.QTY = OSD.O.QTY<1,BP>
  ALL.G.QTY = ALL.G.QTY - TOT.DST.QTY
  ALL.O.QTY = ALL.O.QTY - TOT.ORD.QTY
  IF TOT.DST.QTY < 1 THEN GOTO 5080
  LIMIT = LINES
  FOR LN = 1 TO LIMIT
    IF ORG.QTY<PPTR,LN> + 0 < DST.QTY<PPTR,LN> + 0 THEN
      PDNUM = DST.SUBS<PPTR,LN>; WHNUM = DST.WHSE<PPTR,LN>
      GOSUB 5100
      ADD.QTY = DST.QTY<PPTR,LN> - ORG.QTY<PPTR,LN>
*           IF TOT.DST.QTY <= ADD.QTY THEN
      IF TOT.DST.QTY < ADD.QTY THEN
        OSD.G.QTY<1,P> = OSD.G.QTY<1,P> + TOT.DST.QTY
        DST.QTY<PPTR,LN> = DST.QTY<PPTR,LN> - TOT.DST.QTY
        OSD.O.QTY<1,P> = OSD.O.QTY<1,P> + TOT.ORD.QTY
        ORD.QTY<PPTR,LN> = ORD.QTY<PPTR,LN> - TOT.ORD.QTY
        TOT.DST.QTY = 0; TOT.ORD.QTY = 0; LIMIT = 0
      END ELSE
        IF OSD.G.QTY<1,BP> > 0 THEN
          PCT = OSD.O.QTY<1,BP> / OSD.G.QTY<1,BP>
        END ELSE
          PCT = 1
        END
        OSD.G.QTY<1,P> = OSD.G.QTY<1,P> + ADD.QTY
        DST.QTY<PPTR,LN> = DST.QTY<PPTR,LN> - ADD.QTY
        TOT.DST.QTY = TOT.DST.QTY - ADD.QTY
        ADD.QTY = INT(ADD.QTY * PCT + .5)
        OSD.O.QTY<1,P> = OSD.O.QTY<1,P> + ADD.QTY
        ORD.QTY<PPTR,LN> = ORD.QTY<PPTR,LN> - ADD.QTY
        TOT.ORD.QTY = TOT.ORD.QTY - ADD.QTY
      END
    END
  NEXT LN
  OSD.G.QTY<1,BP> = TOT.DST.QTY
  OSD.O.QTY<1,BP> = TOT.ORD.QTY
  ALL.G.QTY = ALL.G.QTY + TOT.DST.QTY
  ALL.O.QTY = ALL.O.QTY + TOT.ORD.QTY
5080*
  FOR P = 1 TO ORD.DET.REC.SIZE
    ORD.DET.SUM(P,S) = ORD.DET.REC(P)
  NEXT P
  STATUS = "L"
  CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
*
  SHPNO = GEN.SHPNO
  STATUS = "D"
  CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
  FOR P = 1 TO ORD.DET.REC.SIZE
    ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
  NEXT P
  PDNUM = PDNO; WHNUM = WHNO
  GOSUB 5100; BP = P
  FOR LN = 1 TO LINES
    IF ORG.QTY<PPTR,LN> + 0 <> DST.QTY<PPTR,LN> + 0 THEN
      PDNUM = DST.SUBS<PPTR,LN>; WHNUM = DST.WHSE<PPTR,LN>
      GOSUB 5100
      OSD.G.QTY<1,P> = DST.QTY<PPTR,LN>
      OSD.O.QTY<1,P> = ORD.QTY<PPTR,LN>
    END
  NEXT LN
  OSD.G.QTY<1,BP> = ALL.G.QTY - SUM(DST.QTY<PPTR>)
  OSD.O.QTY<1,BP> = ALL.O.QTY - SUM(ORD.QTY<PPTR>)
  FOR P = 1 TO ORD.DET.REC.SIZE
    ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
  NEXT P
  STATUS = "L"
  CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
5099*
  RETURN
*
*---- Find PROD & WHSE location
5100*
  PTR = 1
  LOOP
    LOCATE PDNUM IN OSD.PROD<1>,PTR SETTING P THEN
*            IF WHNUM = OSD.WHSE<1,P> THEN
      IF (WHNUM = OSD.WHSE<1,P>) AND (PROD.KIT = OSD.KIT<1,P>) AND (PROD.SEQ = OSD.PROD.SEQ<1,P>) THEN
        PTR = 0
      END
    END ELSE
      OSD.PROD<1,P> = PDNUM
      OSD.WHSE<1,P> = WHNUM
      OSD.PROD.SEQ<1,P> = PROD.SEQ
      OSD.KIT<1,P>      = PROD.KIT
      OSD.G.QTY<1,P> = 0
      OSD.O.QTY<1,P> = 0
      OSD.R.QTY<1,P> = 0
      OSD.A.QTY<1,P> = 0
      OSD.F.QTY<1,P> = 0
      OSD.S.QTY<1,P> = 0
      OSD.I.QTY<1,P> = 0
      OSD.PRICE<1,P> = UNPRC
      OSD.COMMENT<1,P> = ""
      OSD.JOB<1,P> = ""
      OSD.JOB.QTY<1,P> = ""
      OSD.RECP.NO<1,P> = ""
      OSD.FI.QTY<1,P> = ""
      OSD.REL.NO<1,P> = ""
      OSD.REL.QTY<1,P> = ""
      OSD.P.QTY<1,P> = ""
      PTR = 0
    END
  WHILE PTR DO
    PTR = P + 1
  REPEAT
  RETURN
*
*---- Scrolling line prompt
7000*
  GOSUB 7900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Ship To
7010*
  X = 4; Y = SLN; TYP = 1; MAXL = 15; O.R = "O"
  ORVALDAT = 1; VALDAT = "N"
  IF DST.SUBS<PPTR,LN> # "" THEN
    DEFAULT = DST.SUBS<PPTR,LN>
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END" AND OPTION = "A"
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOSUB 7700; GOTO 7099
    CASE VALUE = "END"
      N = LN; GOSUB 7910
      GOTO 7099
    CASE VALUE = ""
      GXR.NAME = "INV.SUBS"
      GXR.FILE = INVENTORY
      GXR.SRCH.ID = PROD.SUBS<BPTR>
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF GXR.ID = "" THEN
        GOTO 7010
      END ELSE
        VALUE = GXR.ID
        P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#15" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
  END CASE
  LOCATE VALUE IN PROD.SUBS<BPTR>,1 SETTING FND ELSE
    ERRMSG = "This product is not associated with the base # ":PDNO
    GOSUB 91000; GOTO 7010
  END
  MATREAD INV.REC FROM INVENTORY, CONO:VALUE ELSE
    ERRMSG = "Cannot locate product # ":VALUE
    GOSUB 91000; GOTO 7010
  END
  P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DST.SUBS<PPTR,LN> = VALUE
  WCNT = DCOUNT(INV.WHSE.CODE,VM)
*
*---- Warehouse
7020*
  IF WCNT = 1 THEN
    VALUE = INV.WHSE.CODE<1,1>
    P_X  = 20 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 7021
  END
  X = 20; Y = SLN; TYP = 1; MAXL = 4; O.R = "O"
  IF DST.WHSE<PPTR,LN> # "" THEN
    DEFAULT = DST.WHSE<PPTR,LN>
  END ELSE
    DEFAULT = WHNO
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 7010
7021*
  MATREAD IWH.REC FROM INV.WHSE, CONO:DST.SUBS<PPTR,LN>:"!":VALUE ELSE
    ERRMSG = "Cannot locate warehouse (":VALUE:") for item # ":DST.SUBS<PPTR,LN>
    GOSUB 91000
    IF WCNT = 1 THEN GOTO 7010 ELSE GOTO 7020
  END
  LOCATE DST.SUBS<PPTR,LN> IN DST.SUBS<PPTR>,1 SETTING L ELSE L = LN
  IF LN # L AND DST.WHSE<PPTR,L> = VALUE THEN
    ERRMSG = "Item and warehouse already exist on line # ":L
    GOSUB 91000; GOTO 7010
  END
  DST.WHSE<PPTR,LN> = VALUE
*
*---- Order qty
7030*
  X = 38; Y = SLN; TYP = ICR.TYPE; SCALER = ICR.SCAL; MAXL = 10
  MINV = ORG.QTY<PPTR,LN> + 0
  MAXV = ALL.G.QTY - SUM(DST.QTY<PPTR>) + DST.QTY<PPTR,LN>
  IF MAXV = 0 THEN
    VALUE = 0
    GOTO 7035
  END
  MAXV = INT(MAXV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5)
  IF DST.QTY<PPTR,LN> # "" THEN
    O.R = "O"
    DEFAULT = OCONV(INT(DST.QTY<PPTR,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV)
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF LN < ULINES THEN
      N = LN; GOSUB 7912
      GOTO 7099
    END
    GOTO 7010
  END
7035*
  BEGIN CASE
    CASE ORD.QTY<PPTR,LN> + 0 = 0
      PCT = 1 + CUST.ADDL.OPS<1,1> / 10000
    CASE DST.QTY<PPTR,LN> + 0 > 0
      PCT = ORD.QTY<PPTR,LN> / DST.QTY<PPTR,LN>
    CASE 1
      PCT = 1
  END CASE
  DST.QTY<PPTR,LN> = INT(VALUE / ICR.MT1 * ICR.DV1 * ICR.DV2 + .5)
  ORD.QTY<PPTR,LN> = INT(VALUE * PCT + .5)
  ORD.QTY<PPTR,LN> = INT(ORD.QTY<PPTR,LN> / ICR.MT1 * ICR.DV1 * ICR.DV2 + .5)
  P_X  = 38 ; P_Y = SLN ; P_VALUE = OCONV(INT(DST.QTY<PPTR,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECD.NUM = 26
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(DST.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  LINES = DCOUNT(DST.SUBS<PPTR>,VM)
7099*
  RETURN
*
*---- Delete a line
7700*
  DST.SUBS = DELETE(DST.SUBS,PPTR,LN,0)
  DST.WHSE = DELETE(DST.WHSE,PPTR,LN,0)
  DST.QTY = DELETE(DST.QTY,PPTR,LN,0)
  ORD.QTY = DELETE(ORD.QTY,PPTR,LN,0)
  RETURN
*
*---- Line # to change or delete
7800*
  GOSUB 7900
  ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
  RETURN
*
*---- Display scrolling lines
7900*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 7990
  OLD.START.LINE = START.LINE
  ECD.NUM = 31
  SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    GOSUB 7910
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
7990*
  RETURN
*
*---- Display a single line
7910*
7911*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DST.SUBS<PPTR,N> "L#15"
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:DST.WHSE<PPTR,N> "L#4"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  MATREAD INV.REC FROM INVENTORY, CONO:DST.SUBS<PPTR,N> ELSE
    INV.FULL.DESC = STR("?",45)
  END
  P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
7912*
  P_X  = 25 ; P_Y = SLN ; P_VALUE = OCONV(INT(ORG.QTY<PPTR,N> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(DST.QTY<PPTR,N> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- Display data
8000*
  ECD.ACTION = 3; CALL SCRN.EDIT
  OLD.START.LINE = 0; GOSUB 7900
  RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  SHPNO = OLD.SHPNO
  RETURN
END
