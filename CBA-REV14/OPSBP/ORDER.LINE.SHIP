SUBROUTINE ORDER.LINE.SHIP(CONO,ORDNO,SHPNO,PDNO,WHNO,UNPRC,PROD.SEQ,PROD.KIT)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - ORDER.LINE.SHIP
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
* 
* TASK
* 18606
*
*T20002 RKB 1/9/96 * ALLOWS MORE THAN 20 SHIP TOS AND CAUSES PGM
*                     TO ABORT
* TASK 20076 - JR 1/29/96 - FIX "NO AVAILABLE QUANTITY" PROBLEM
* T20863 doug 08/14/96 - KITTING UPDATE
********************************************************************
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
OLD.SHPNO = SHPNO
GEN.SHPNO = "000"
TODAY = DATE()
LINE.SPACE = 1
PAGE.SIZE = 10
BEGIN.PAGE = 8
SHP.ID = CONO:ORD.CUST:"!"
MAT GEN.XREF.REC = ""
GXR.CO = CONO
MAX.S.CNT = 20 ; *T20002
*
PCNT = DCOUNT(ODQ.PROD,VM)
IF PCNT < 1 THEN
   ERRMSG = "Cannot locate any products to distribute for this order"
   GOSUB 91000; GOTO 99999
END
*
LOCATE GEN.SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR ELSE
   ERRMSG = "Cannot locate the general Ship To for this order"
   GOSUB 91000; GOTO 99999
END
SHPNO = GEN.SHPNO
*
ESN = ECD.SCRN.NO
ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ORDNO
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = ORD.CUST
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
ECD.ACTION = 5; CALL SCRN.EDIT
*
DST.QTY = ""; ORG.QTY = ""; ORD.QTY = ""; MIN.QTY = ""
REFNO = ""; PDNOS = ""; WHNOS = ""; P = 1
FOR P = 1 TO PCNT
   LOCATE ODQ.PROD<1,P> IN PDNOS<1>,1 SETTING PLOC ELSE
      PDNOS<1,PLOC> = ODQ.PROD<1,P>
   END
   LOCATE ODQ.WHSE<1,P> IN WHNOS<PLOC>,1 SETTING WLOC ELSE
      WHNOS<PLOC,WLOC> = ODQ.WHSE<1,P>
   END
   REFNO<PLOC,WLOC> = P
NEXT P
*
IF PDNO # "" THEN
   ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.RET.VALUE = PDNO; GOTO 110
END ELSE
   WHNO = ""
END
*
*---- Product Number
100*
ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
110*
LN = 1; LINES = 0; OLD.START.LINE = 0
BEGIN CASE
   CASE ECD.RET.VALUE = "END"
      GOTO 99990
   CASE ECD.RET.VALUE = "S"
      BEGIN CASE
         CASE PCNT < 2 AND PCNT = PPTR
            ERRMSG = "There is only one product for this order"
            GOSUB 91000; SCV.REC(ECD.NUM)<ESN> = ""; GOTO 100
         CASE PCNT < 2
            PPTR = 1
         CASE PPTR = PCNT
            PPTR = 1
         CASE 1
            PPTR = PPTR + 1
      END CASE
      PDNO = ODQ.PROD<1,PPTR>; WHNO = ODQ.PROD<1,PPTR>
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
   CASE ECD.RET.VALUE = ""
      IF PCNT = 1 THEN
         PDNO = ODQ.PROD<1,1>; WHNO = ODQ.WHSE<1,1>
      END ELSE
         GXR.NAME = "INV.FNGD.ORDER.DIST"
         GXR.FILE = INVENTORY
         GXR.SRCH.ID = PDNOS
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         LN = 1; LINES = 0; OLD.START.LINE = 0
         GOSUB 7900
         IF GXR.ID = "" THEN GOTO 100
         PDNO = GXR.ID; WHNO = ""
      END
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
   CASE 1
      PDNO = ECD.RET.VALUE
END CASE
LOCATE PDNO IN PDNOS<1>,1 SETTING PLOC ELSE
   ERRMSG = "Cannot locate product (":PDNO:") for this order."
   GOSUB 91000; GOTO 100
END
MATREAD INV.REC FROM INVENTORY, CONO:PDNO ELSE
   ERRMSG = "Cannot locate Product # ":PDNO
   GOSUB 91000; GOTO 100
END
*COPY>ICSBP>INV.UM.CNV
ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC
ECD.ACTION = 5; CALL SCRN.EDIT
*
WCNT = DCOUNT(WHNOS<PLOC>,VM)
BEGIN CASE
   CASE WCNT = 1
      ECD.RET.VALUE = WHNOS<PLOC,1>
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
   CASE WHNO # ""
      ECD.RET.VALUE = WHNO
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
END CASE
*
*---- Warehouse Number
200*
ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
210*
BEGIN CASE
   CASE ECD.RET.VALUE = "END"
      WHNO = ""; GOTO 100
   CASE ECD.RET.VALUE = ""
      GXR.NAME = "INV.WHSE.CODE"
      GXR.SRCH.ID = WHNOS<PLOC>
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 8000
      IF GXR.ID = "" THEN GOTO 200
      WHNO = GXR.ID
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = WHNO
      ECD.ACTION = 5; CALL SCRN.EDIT
   CASE 1
      WHNO = ECD.RET.VALUE
END CASE
LOCATE WHNO IN WHNOS<PLOC>,1 SETTING WLOC ELSE
   ERRMSG = "Warehouse (":WHNO:") is not valid for product (":PDNO:") on this order"
   GOSUB 91000; GOTO 200
END
MATREAD IWH.REC FROM INV.WHSE, CONO:PDNO:"!":WHNO ELSE
   ERRMSG = "Cannot locate warehouse (":WHNO:") for product # ":PDNO
   GOSUB 91000; GOTO 200
END
PPTR = REFNO<PLOC,WLOC>
ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = PPTR "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = PCNT "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
ECD.NUM = 25
SCV.REC(ECD.NUM)<ESN> = OCONV(INT(ODQ.G.QTY<1,PPTR> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
ECD.ACTION = 5; CALL SCRN.EDIT
LINES = DCOUNT(ODQ.SHIP.TO<1,PPTR>,SVM)
DST.QTY<PPTR> = ""; ORG.QTY<PPTR> = ""
ORD.QTY<PPTR> = ""; MIN.QTY<PPTR> = ""
ULINES = LINES + 1
FOR P = 1 TO ORD.DET.REC.SIZE
   ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
NEXT P
GOSUB 5100
ALOC.QTY = OSD.A.QTY<1,P>; GEN.A.JOB = OSD.JOB<1,P>; GEN.A.QTY = OSD.JOB.QTY<1,P>
*** TASK 20076 v
*     UNAVL.QTY = ODQ.R.QTY<1,PPTR> + ODQ.S.QTY<1,PPTR> + ODQ.A.QTY<1,PPTR> - ALOC.QTY
UNAVL.QTY = ODQ.R.QTY<1,PPTR> + ODQ.S.QTY<1,PPTR>
*** TASK 20076 ^
IF UNAVL.QTY > ODQ.G.QTY<1,PPTR> THEN UNAVL.QTY = ODQ.G.QTY<1,PPTR>
IF LINES THEN
   FOR L = 1 TO LINES
      DST.QTY<PPTR,L> = 0; ORD.QTY<PPTR,L> = 0; MIN.QTY<PPTR,L> = 0
      LOCATE ODQ.SHIP.TO<1,PPTR,L> IN ORD.SHIP.TO<1>,1 SETTING S THEN
         FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.REC(P) = ORD.DET.SUM(P,S)
         NEXT P
         PTR = 1
         LOOP
            LOCATE PDNO IN OSD.PROD<1>,PTR SETTING P THEN
*                     IF OSD.WHSE<1,P> = WHNO THEN
               IF (OSD.WHSE<1,P> = WHNO) AND (OSD.PROD.SEQ<1,P> = PROD.SEQ) AND (OSD.KIT<1,P> = PROD.KIT) THEN
                  IF OSD.KIT<1,P> = "N" THEN
                     DST.QTY<PPTR,L> = OSD.G.QTY<1,P>
                     ORD.QTY<PPTR,L> = OSD.O.QTY<1,P>
                     MIN.QTY<PPTR,L> = OSD.R.QTY<1,P> + OSD.A.QTY<1,P> + OSD.S.QTY<1,P>
                  END ELSE
                     DST.QTY<PPTR,L> = OSD.KIT.G.QTY<1,P>
                     ORD.QTY<PPTR,L> = OSD.KIT.O.QTY<1,P>
                     MIN.QTY<PPTR,L> = OSD.KIT.R.QTY<1,P> + OSD.A.QTY<1,P> + OSD.S.QTY<1,P>
                  END
                  PTR = 0
               END
            END
         WHILE PTR DO
            PTR = P + 1
         REPEAT
      END
   NEXT L
   ORG.QTY = DST.QTY
   ECD.NUM = 26
   SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(DST.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
   ECD.ACTION = 5; CALL SCRN.EDIT
   IF UNAVL.QTY >= ODQ.G.QTY<1,PPTR> THEN
      ERRMSG = "No available quantity to distribute"
      GOSUB 91000
   END
END ELSE
   IF UNAVL.QTY >= ODQ.G.QTY<1,PPTR> THEN
      ERRMSG = "No available quantity to distribute"
      GOSUB 91000
   END
   ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
   OPTION = "A"
   LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 7000
   WHILE LINES > OLD.LINES DO REPEAT
   ECD.NUM = 31
   SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
   ECD.ACTION = 5; CALL SCRN.EDIT
END
*
*---- Prompt line
500*
ECD.NUM = 32
SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
MORE = 1; GOSUB 7900
LOOP
   ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
         GOSUB 5000
         MORE = 0
      CASE OPTION = "A"
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 7000
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES; GOSUB 7900
      CASE OPTION = "D"
         GOSUB 7800
         BEGIN CASE
            CASE LN.NO < 1
            CASE LN.NO < ULINES
               ERRMSG = "Cannot delete a previously setup Ship To."
               GOSUB 91000
            CASE 1
               LN = LN.NO; GOSUB 7700
               LINES = DCOUNT(ODQ.SHIP.TO<1,PPTR>,SVM)
               IF LN > LINES THEN LN = LN - 1
               OLD.START.LINE = 0; GOSUB 7900
         END CASE
      CASE OPTION = "S" OR OPTION = "SF"
         LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 7900
      CASE OPTION = "SR"
         LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
         IF LN < 1 THEN LN = 1
         GOSUB 7900
      CASE OPTION = "ST"
         LN = 1
         GOSUB 7900
      CASE OPTION = "SB"
         LN = LINES
         GOSUB 7900
      CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
         LN.NO = OPTION[2,99] + 0
         IF LN.NO < 1 OR LN.NO > LINES THEN
            ERRMSG = "** Invalid selection **"
            GOSUB 91000
         END ELSE
            LN = LN.NO
            GOSUB 7900
         END
      CASE OPTION = "P"
         GOSUB 5000
         MORE = 0 - 1
      CASE NOT(NUM(OPTION))
         ERRMSG = "Invalid entry, please re-enter"
         GOSUB 91000
      CASE OPTION < 1 OR OPTION > LINES
         ERRMSG = "Out of range, please re-enter"
         GOSUB 91000
      CASE 1
         LN = OPTION; GOSUB 7900
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
         IF LN < ULINES THEN
            GOSUB 7020
         END ELSE
            GOSUB 7010
         END
   END CASE
WHILE MORE > 0 DO REPEAT
IF MORE < 0 THEN
   GOTO 100
END ELSE
   GOTO 99990
END
*
*---- Distribute quantities
5000*
TOT.G.QTY = ODQ.G.QTY<1,PPTR>; TOT.O.QTY = ODQ.O.QTY<1,PPTR>
ADJ.A.JOB = ""; ADJ.A.QTY = 0
SHPNOS = ODQ.SHIP.TO<1,PPTR>
FOR LN = 1 TO LINES
   IF ORG.QTY<PPTR,LN> = DST.QTY<PPTR,LN> THEN GOTO 5019
   SHPNO = SHPNOS<1,1,LN>
   LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING S THEN
      STATUS = "D"
      CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
      FOR P = 1 TO ORD.DET.REC.SIZE
         ORD.DET.REC(P) = ORD.DET.SUM(P,S)
      NEXT P
   END ELSE
      ORD.SHIP.TO<1,S> = SHPNO
      MAT ORD.DET.REC = ""
      OSD.PO = ORD.PO
   END
   GOSUB 5100
   OSD.G.QTY<1,P> = DST.QTY<PPTR,LN>
   IF OSD.O.QTY<1,P> < 1 AND OSD.A.QTY<1,P> < 1 AND OSD.JOB<1,P> = "" THEN
*** TASK 20076 v
*           IF GEN.A.QTY<1,1,1> >= ORD.QTY<PPTR,LN> THEN
      IF GEN.A.QTY<1,1,1> > "0" THEN
         IF GEN.A.QTY<1,1,1> >= ORD.QTY<PPTR,LN> THEN
            SUB.QTY = ORD.QTY<PPTR,LN>
         END ELSE
            SUB.QTY = GEN.A.QTY<1,1,1>
         END
         IF ADJ.A.JOB = "" THEN ADJ.A.JOB = GEN.A.JOB<1,1,1>
         OSD.JOB<1,P> = ADJ.A.JOB
         OSD.JOB.QTY<1,P> = SUB.QTY
         OSD.A.QTY<1,P> = SUB.QTY
         ALOC.QTY = ALOC.QTY - SUB.QTY
         GEN.A.QTY<1,1,1> = GEN.A.QTY<1,1,1> - SUB.QTY
         ADJ.A.QTY = ADJ.A.QTY + SUB.QTY
      END
   END
*** TASK 20076 ^
   OSD.O.QTY<1,P> = ORD.QTY<PPTR,LN>
   FOR P = 1 TO ORD.DET.REC.SIZE
      ORD.DET.SUM(P,S) = ORD.DET.REC(P)
   NEXT P
   STATUS = "L"
   CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
5019*
NEXT LN
SHPNO = GEN.SHPNO
STATUS = "D"
CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
FOR P = 1 TO ORD.DET.REC.SIZE
   ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
NEXT P
GOSUB 5100
OSD.G.QTY<1,P> = TOT.G.QTY - SUM(DST.QTY<PPTR>)
OSD.O.QTY<1,P> = TOT.O.QTY - SUM(ORD.QTY<PPTR>)
IF ADJ.A.JOB # "" THEN
   LOCATE ADJ.A.JOB IN OSD.JOB<1,P>,1 SETTING FJOB THEN
      OSD.JOB.QTY<1,P,FJOB> = OSD.JOB.QTY<1,P,FJOB> - ADJ.A.QTY
      IF OSD.JOB.QTY<1,P,FJOB> < 0 THEN OSD.JOB.QTY<1,P,FJOB> = 0
      OSD.A.QTY<1,P> = SUM(OSD.JOB.QTY<1,P>)
   END
END
FOR P = 1 TO ORD.DET.REC.SIZE
   ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
NEXT P
STATUS = "L"
CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
5099*
RETURN
*
*---- Find PROD & WHSE location
5100*
PTR = 1
LOOP
   LOCATE PDNO IN OSD.PROD<1>,PTR SETTING P THEN
      IF WHNO = OSD.WHSE<1,P> THEN
         PTR = 0
      END
   END ELSE
      OSD.PROD<1,P> = PDNO
      OSD.WHSE<1,P> = WHNO
      OSD.G.QTY<1,P> = 0
      OSD.O.QTY<1,P> = 0
      OSD.R.QTY<1,P> = 0
      OSD.A.QTY<1,P> = 0
      OSD.F.QTY<1,P> = 0
      OSD.S.QTY<1,P> = 0
      OSD.I.QTY<1,P> = 0
      OSD.PRICE<1,P> = UNPRC
      OSD.COMMENT<1,P> = ""
      OSD.JOB<1,P> = ""
      OSD.JOB.QTY<1,P> = ""
      OSD.RECP.NO<1,P> = ""
      OSD.FI.QTY<1,P> = ""
      OSD.REL.NO<1,P> = ""
      OSD.REL.QTY<1,P> = ""
      OSD.P.QTY<1,P> = ""
      OSD.AMT<1,P> = 0
* T20863 v
      OSD.KIT<1,P> = PROD.KIT
      OSD.KIT.O.QTY<1,P> = 0
      OSD.KIT.R.QTY<1,P> = 0
      OSD.KIT.A.QTY<1,P> = 0
      OSD.KIT.F.QTY<1,P> = 0
      OSD.KIT.S.QTY<1,P> = 0
      OSD.KIT.I.QTY<1,P> = 0
      OSD.KIT.G.QTY<1,P> = 0
      OSD.KIT.PRICE<1,P> = 0
      OSD.PROD.SEQ<1,P> = PROD.SEQ
      OSD.BOM.NUM<1,P>  = ""
* T20863 ^
      PTR = 0
   END
WHILE PTR DO
   PTR = P + 1
REPEAT
RETURN
*
*---- Scrolling line prompt
7000*
*T20002 v
IF LN > MAX.S.CNT THEN
   ERRMSG="Max number of Ship tos has been reached"
   GOSUB 91000
   RETURN
END
*T20002 ^
GOSUB 7900
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Ship To
*T20002 v
IF LN > MAX.S.CNT THEN
   ERRMSG="Max number of Ship tos has been reached"
   GOSUB 91000
   RETURN
END
*T20002 ^
7010*
X = 4; Y = SLN; TYP = 1; MAXL = 3; O.R = "O" 
ORVALDAT = 1; VALDAT = "N,???"
IF ODQ.SHIP.TO<1,PPTR,LN> # "" THEN
   DEFAULT = ODQ.SHIP.TO<1,PPTR,LN>
END
CALL EDIT.SUB
BEGIN CASE
   CASE VALUE = "END" AND OPTION = "A"
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOSUB 7700; GOTO 7099
   CASE VALUE = "END"
      N = LN; GOSUB 7910
      GOTO 7099
   CASE VALUE = "" OR VALUE = "???"
      BEGIN CASE
         CASE CUST.SHIP.TO < 1
            ERRMSG = "There is no ship to for this customer"
            GOSUB 91000; GOTO 7010
         CASE CUST.SHIP.TO = 1
            VALUE = CUST.SHIP.TO "R%3"
            P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#3" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE 1
            GXR.NAME = "SHIP.TO"
            GXR.FILE = SHIP.TO
            GXR.SRCH.ID = ORD.CUST:" : ":CUST.NAME
            GXR.IDLIST = ORD.CUST:"!001"
            FOR SNO = 2 TO CUST.SHIP.TO
               GXR.IDLIST<1,SNO> = ORD.CUST:"!":SNO "R%3"
            NEXT SNO
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            GXR.ID = FIELD(GXR.ID,"!",2)
            ECD.ACTION = 2; CALL SCRN.EDIT
            GOSUB 8000
            SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
            P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF GXR.ID = "" THEN
               GOTO 7010
            END ELSE
               VALUE = GXR.ID
               P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#3" ; P_OPT = ""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END
      END CASE
   CASE VALUE = "N"
      ECD.SCRN.NO = ESN - 2; SHPNO = "N"
      CALL SHIP.TO.MAINT(CONO,ORD.CUST,SHPNO,OPCO.CNTY)
      ECD.SCRN.NO = ESN
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 7010
END CASE
LOCATE VALUE IN ODQ.SHIP.TO<1,PPTR>,1 SETTING FND ELSE FND = LN
IF FND <> LN THEN
   ERRMSG = "Ship To already exists on line # ":FND
   GOSUB 91000; GOTO 7010
END
MATREAD SPT.REC FROM SHIP.TO, SHP.ID:VALUE ELSE
   ERRMSG = "Cannot locate ship to # ":VALUE
   GOSUB 91000; GOTO 7010
END
P_X  = 8 ; P_Y = SLN ; P_VALUE = SPT.NAME "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
ODQ.SHIP.TO<1,PPTR,LN> = VALUE
*
*---- Order qty
7020*
X = 39; Y = SLN; TYP = ICR.TYPE; SCALER = ICR.SCAL; MAXL = 10
MINV = MIN.QTY<PPTR,LN> + 0
*** TASK 20076 v
*     MAXV = ODQ.G.QTY<1,PPTR> - UNAVL.QTY - SUM(DST.QTY<PPTR>) + DST.QTY<PPTR,LN>
IF UNAVL.QTY > SUM(DST.QTY<PPTR>) THEN
   MAXV = ODQ.G.QTY<1,PPTR> - UNAVL.QTY
END ELSE
   MAXV = ODQ.G.QTY<1,PPTR> - SUM(DST.QTY<PPTR>)
END
MAXV = MAXV + DST.QTY<PPTR,LN>
*** TASK 20076 ^
*PRINT @(0,23):OCONV(INT(MINV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10":
*PRINT  " / ":OCONV(INT(MAXV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10":
*PRINT  " / ":OCONV(INT(UNAVL.QTY / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10":;INPUT XX:
IF MAXV = 0 THEN
   VALUE = 0
   GOTO 7025
END
*** TASK 20076 v
IF MINV > MAXV THEN MINV = MAXV
*** TASK 20076 ^
MINV = INT(MINV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5)
MAXV = INT(MAXV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5)
IF DST.QTY<PPTR,LN> # "" THEN
   O.R = "O"
   DEFAULT = OCONV(INT(DST.QTY<PPTR,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV)
END
CALL EDIT.SUB
IF VALUE = "END" THEN
   IF LN < ULINES THEN
      N = LN; GOSUB 7912
      GOTO 7099
   END
   GOTO 7010
END
7025*
IF ORD.QTY<PPTR,LN> + 0 = 0 THEN
   PCT = 1 + CUST.ADDL.OPS<1,1> / 10000
END ELSE
   PCT = ORD.QTY<PPTR,LN> / DST.QTY<PPTR,LN>
END
DST.QTY<PPTR,LN> = INT(VALUE / ICR.MT1 * ICR.DV1 * ICR.DV2 + .5)
ORD.QTY<PPTR,LN> = INT(VALUE * PCT + .5)
ORD.QTY<PPTR,LN> = INT(ORD.QTY<PPTR,LN> / ICR.MT1 * ICR.DV1 * ICR.DV2 + .5)
MIN.QTY<PPTR,LN> = MIN.QTY<PPTR,LN> + 0
P_X  = 39 ; P_Y = SLN ; P_VALUE = OCONV(INT(DST.QTY<PPTR,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
ECD.NUM = 26
SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(DST.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
ECD.ACTION = 5; CALL SCRN.EDIT
LINES = DCOUNT(ODQ.SHIP.TO<1,PPTR>,SVM)
7099*
RETURN

*
*---- Delete a line
7700*
ODQ.SHIP.TO = DELETE(ODQ.SHIP.TO,1,PPTR,LN)
DST.QTY = DELETE(DST.QTY,PPTR,LN,0)
ORD.QTY = DELETE(ORD.QTY,PPTR,LN,0)
MIN.QTY = DELETE(MIN.QTY,PPTR,LN,0)
RETURN
*
*---- Line # to change or delete
7800*
GOSUB 7900
ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
ECD.ACTION = 4; CALL SCRN.EDIT
LN.NO = ECD.RET.VALUE
IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
RETURN
*
*---- Display scrolling lines
7900*
START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 7990
OLD.START.LINE = START.LINE
ECD.NUM = 31
SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
ECD.ACTION = 5; CALL SCRN.EDIT
CNT = 1
FOR N = START.LINE TO LAST.LINE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   GOSUB 7910
   CNT = CNT + 1
NEXT N
FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
7990*
RETURN
*
*---- Display a single line
7910*
7911*
P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:ODQ.SHIP.TO<1,PPTR,N> "L#3"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
MATREAD SPT.REC FROM SHIP.TO, SHP.ID:ODQ.SHIP.TO<1,PPTR,N> ELSE
   SPT.NAME = STR("?",30)
END
P_X  = 8 ; P_Y = SLN ; P_VALUE = SPT.NAME "L#30" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
7912*
P_X  = 39 ; P_Y = SLN ; P_VALUE = OCONV(INT(DST.QTY<PPTR,N> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
RETURN
*
*---- Display data
8000*
ECD.ACTION = 3; CALL SCRN.EDIT
OLD.START.LINE = 0; GOSUB 7900
RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99990 *
ECD.ACTION=99;CALL SCRN.EDIT
99999 *
SHPNO=OLD.SHPNO
RETURN
RETURN
END
