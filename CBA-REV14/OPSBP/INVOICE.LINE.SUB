      SUBROUTINE INVOICE.LINE.SUB(CONO,ORDNO,SHPNO)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - INVOICE.LINE.SUB
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
********************************************************************
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>TAX
*COPY>OPS.CPYLIB>ORDER
*COPY>ICS.CPYLIB>INV.CNV
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
      LINE.SPACE = 2
      PAGE.SIZE = 6
      BEGIN.PAGE = 8
*
      ESN = ECD.SCRN.NO
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ORDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = ORD.CUST
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
      ECD.ACTION = 5; CALL SCRN.EDIT
*
      BEGIN CASE
      CASE SHPNO # ""
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = SHPNO
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.RET.VALUE = SHPNO; GOTO 110
      CASE ORD.SHIP.TO<1,2> # ""
         SHPNO = ORD.SHIP.TO<1,2>
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = SHPNO
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.RET.VALUE = SHPNO; GOTO 110
      CASE ORD.SHIP.TO<1,1> # ""
         SHPNO = ORD.SHIP.TO<1,1>
         ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = SHPNO
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.RET.VALUE = SHPNO; GOTO 110
      END CASE
*
*---- Ship to
100 *
      ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
110 *
      LN = 1; LINES = 0; OLD.START.LINE = 0
      SPTR = 0; SCNT = DCOUNT(ORD.SHIP.TO,VM)
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         SHPNO = ""; GOTO 99999
      CASE ECD.RET.VALUE = "S"
         BEGIN CASE
         CASE SCNT < 1
            ERRMSG = "There is no ship to for this order"
            GOSUB 91000; SCV.REC(ECD.NUM)<ESN> = ""; GOTO 100
         CASE SHPNO = ""
            IF SCNT = 1 THEN
               SPTR = 1
            END ELSE
               SPTR = 2
            END
            SHPNO = ORD.SHIP.TO<1,SPTR>
            ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = SHPNO
            ECD.ACTION = 5; CALL SCRN.EDIT
         CASE SCNT < 2
            ERRMSG = "There is only one ship to for this order"
            GOSUB 91000; SCV.REC(ECD.NUM)<ESN> = ""; GOTO 100
         CASE 1
            LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR ELSE
               ERRMSG = "Cannot locate the current ship to # ":SHPNO
               GOSUB 91000; GOTO 100
            END
            IF SPTR = SCNT THEN
               SPTR = 1
            END ELSE
               SPTR = SPTR + 1
            END
            SHPNO = ORD.SHIP.TO<1,SPTR>
            ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = SHPNO
            ECD.ACTION = 5; CALL SCRN.EDIT
         END CASE
      CASE 1
         SHPNO = ECD.RET.VALUE "R%3"
      END CASE
      IF SHPNO = "000" THEN
         MAT SPT.REC = ""
         SPT.NAME = CUST.NAME
         SPT.ADDR1 = CUST.ADDR1
         SPT.ADDR2 = CUST.ADDR2
         SPT.STATE = TRIM(FIELD(CUST.ADDR4,",",2))
         SPT.CITY = TRIM(FIELD(CUST.ADDR4,",",1))
         SPT.ZIP = CUST.ZIP
         SPT.TAX.JUR = CUST.TAX.JUR
         SPT.TAXABLE = CUST.TAXABLE
         SPT.EXEMPT = CUST.EXEMPT
         SPT.EXMT.DATE = CUST.EXMT.DATE
         SPT.SLSMN = CUST.SALESMAN
      END ELSE
         MATREAD SPT.REC FROM SHIP.TO, CONO:ORD.CUST:"!":SHPNO ELSE
            ERRMSG = "Cannot locate ship to # ":SHPNO
            GOSUB 91000; GOTO 100
         END
      END
      ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = SPT.NAME
      ECD.ACTION = 5; CALL SCRN.EDIT
      IF SPTR THEN
         STATUS = "D"
         CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
         FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
         NEXT P
      END ELSE
         LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR THEN
            STATUS = "D"
            CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
            FOR P = 1 TO ORD.DET.REC.SIZE
               ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
            NEXT P
         END ELSE
            ERRMSG = "Invalid Ship to for this order"
            GOSUB 91000; GOTO 100
         END
      END
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = SPTR "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = SCNT "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = OSD.PO
      ECD.ACTION = 5; CALL SCRN.EDIT
      LINES = DCOUNT(OSD.PROD,VM)
*
*---- Prompt line
500 *
      ECD.NUM = 32
      SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      MORE = 1; GOSUB 7900
      LOOP
         ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         OPTION = ECD.RET.VALUE
         BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E"
            FOR P = 1 TO ORD.DET.REC.SIZE
               ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
            NEXT P
            STATUS = "L"
            CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
            MORE = 0
         CASE OPTION = "T"
            FOR P = 1 TO ORD.DET.REC.SIZE
               ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
            NEXT P
            STATUS = "L"
            CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
            MORE = 0 - 1
         CASE OPTION = "A"
            FOR LN = 1 TO LINES
               GOSUB 7000
            NEXT LN
         CASE OPTION = "S" OR OPTION = "SF"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 7900
         CASE OPTION = "SR"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 7900
         CASE OPTION = "ST"
            LN = 1
            GOSUB 7900
         CASE OPTION = "SB"
            LN = LINES
            GOSUB 7900
         CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
            LN.NO = OPTION[2,99] + 0
            IF LN.NO < 1 OR LN.NO > LINES THEN
               ERRMSG = "** Invalid selection **"
               GOSUB 91000
            END ELSE
               LN = LN.NO
               GOSUB 7900
            END
         CASE NOT(NUM(OPTION))
            ERRMSG = "Invalid entry, please re-enter"
            GOSUB 91000
         CASE OPTION < OLD.START.LINE OR OPTION > LINES
            ERRMSG = "Out of range, please re-enter"
            GOSUB 91000
         CASE 1
            LN = OPTION; GOSUB 7000
         END CASE
      WHILE MORE > 0 DO REPEAT
      IF MORE < 0 THEN
         GOTO 100
      END ELSE
         GOTO 99999
      END
*
*---- Scrolling line prompt
7000 *
      GOSUB 7900
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,LN> ELSE
         MAT INV.REC = ''
      END
      GOSUB 9000
*
*---- Order qty
7010 *
      X = 57; Y = SLN; TYP = 3; MAXL = 10
      MINV = 0; MAXV = INT((((OSD.R.QTY<1,LN> + OSD.F.QTY<1,LN> - OSD.S.QTY<1,LN>) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
      IF OSD.O.QTY<1,LN> # "" THEN
         O.R = "O"; DEFAULT = INT(((OSD.O.QTY<1,LN> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
      END
      CALL EDIT.SUB
      IF VALUE = "END" THEN GOTO 7099
      OSD.O.QTY<1,LN> = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
P_X  = 35 ; P_Y = SLN ; P_VALUE = OCONV(INT(((VALUE / ICR.DV1) * ICR.MT1) ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      LINES = DCOUNT(OSD.PROD,VM)
7099 *
      RETURN
*
*---- Delete a line
7700 *
      OSD.PROD = DELETE(OSD.PROD,1,LN,0)
      OSD.WHSE = DELETE(OSD.WHSE,1,LN,0)
      OSD.O.QTY = DELETE(OSD.O.QTY,1,LN,0)
      OSD.R.QTY = DELETE(OSD.R.QTY,1,LN,0)
      OSD.A.QTY = DELETE(OSD.A.QTY,1,LN,0)
      OSD.F.QTY = DELETE(OSD.F.QTY,1,LN,0)
      OSD.S.QTY = DELETE(OSD.S.QTY,1,LN,0)
      OSD.I.QTY = DELETE(OSD.I.QTY,1,LN,0)
      OSD.JOB = DELETE(OSD.JOB,1,LN,0)
      OSD.COMMENT = DELETE(OSD.COMMENT,1,LN,0)
      AVAIL = DELETE(AVAIL,LN,0,0)
      RETURN
*
*---- Line # to change or delete
7800 *
      GOSUB 7900
      ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
      ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
      ECD.ACTION = 4; CALL SCRN.EDIT
      LN.NO = ECD.RET.VALUE
      IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
      RETURN
*
*---- Display scrolling lines
7900 *
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN GOTO 7990
      OLD.START.LINE = START.LINE
      ECD.NUM = 31
      SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
      ECD.ACTION = 5; CALL SCRN.EDIT
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         GOSUB 7910
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
7990 *
      RETURN
*
*---- Display a single line
7910 *
      MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,N> ELSE
         MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
      END
      MATREAD IWH.REC FROM INV.WHSE, CONO:OSD.PROD<1,N>:"!":OSD.WHSE<1,N> ELSE
         MAT IWH.REC = ""
      END
      GOSUB 9000
P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R%2" ; P_OPT = "CL"
P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.PROD<1,N> "L#15"
P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.WHSE<1,N> "L#4"
P_X  := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,2> "L#3"
P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(IWH.STD.COST/10),"MD3") "R#8"
P_X  := AM:37 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((OSD.O.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#12"
P_X  := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((OSD.S.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#12"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      TO.SHIP = OSD.S.QTY<1,N> - OSD.I.QTY<1,N>
P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TO.SHIP / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#12" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
P_X  = 3 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
P_X  := AM:52 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(INT(((OSD.I.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#12"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*     PRINT @(67,SLN+1): OCONV(INT((IWH.STD.COST/10000) * ((TO.SHIP/10) / (INV.COST.WT/100))),"MD2,") "R#12" :
      IF ICR.SCAL < 1 THEN
P_X  = 67 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT((IWH.STD.COST/100) * ((TO.SHIP) / (INV.COST.WT/100))),"MD2,") "R#12" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
P_X  = 67 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT((IWH.STD.COST/10000) * ((TO.SHIP) / (INV.COST.WT/100))),"MD2,") "R#12" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      RETURN
*
*---- Display data
8000 *
      ECD.ACTION = 3; CALL SCRN.EDIT
      OLD.START.LINE = 0; GOSUB 7900
      RETURN
*
9000 *
*COPY>ICSBP>INV.UM.CNV
      RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99999 RETURN
      END
