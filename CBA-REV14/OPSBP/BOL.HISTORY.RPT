*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [00.0]
* COPYRIGHT   - 1993 Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPS
* PROGRAM     - BOL.HISTORY.RPT
* AUTHOR      - S.L.Fritz
* DATE        - 05/11/93
* DESCRIPTION - Print the bill-of-lading history report using the BOL file
*               with a status of INVOICED.
*T26493 cmykleb 03/27/2002 * Change pgm to use the report # from the proc.
*T26484 cmykleb 03/27/2002 * Rev12 changes.
**************************************************************************
*
*---- DATA Structure Libraries
*
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>OPS.CPYLIB>BOL
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- File open
*
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER';GOTO 999000
   OPEN '','BOL' TO BOL ELSE ERRMSG = 'BOL';GOTO 999000
*
*---- Initialize variables
*
   TRUE = 1
   OTHERS = 1
   VOID = ''
   NULL = ''
   FALSE = 0
   PAGE.NO = 0
   TOP.OF.NEW.PAGE = CHAR(12)
   PAGE.NO = 0
   LINES.THIS.PAGE = 0
   PAGE.HEADING.SIZE = 5
   PAGE.SIZE = 55
*
   EQU CONO         TO BUFFER<1>
   EQU COMPANY.NAME TO BUFFER<2>
   EQU CUST.FROM    TO BUFFER<3>
   EQU CUST.TO      TO BUFFER<4>
   EQU FROM.DATE    TO BUFFER<5>
   EQU TO.DATE      TO BUFFER<6>
*
   SHD1 = 'BOL-NO  '
   SHD1 = SHD1:'SHIPDATE '
   SHD1 = SHD1:'FGHT-BILL       '
   SHD1 = SHD1:'FOB   '
   SHD1 = SHD1:'VIA '
   SHD1 = SHD1:'INVOICE   '
   SHD1 = SHD1:'INV-DATE '
   SHD1 = SHD1:'CUST-NO '
   SHD1 = SHD1:'SHIP-TO '
*T26484 v
*  SHD1 = SHD1:'PALLET-# '
   SHD1 = SHD1:'RECEIPT-# '
*T26484 ^
   SHD1 = SHD1:'ORDER#  '
   SHD1 = SHD1:'RELEASE    '
   SHD1 = SHD1:'PICK-TICK  '
   SHD1 = SHD1:'   SHIP-WT'
   SHD2 = STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',8):SPACE(1)
   SHD2 = SHD2:STR('-',15):SPACE(1)
   SHD2 = SHD2:STR('-',5):SPACE(1)
   SHD2 = SHD2:STR('-',3):SPACE(1)
   SHD2 = SHD2:STR('-',9):SPACE(1)
   SHD2 = SHD2:STR('-',8):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
*T26484 v
*  SHD2 = SHD2:STR('-',8):SPACE(1)
   SHD2 = SHD2:STR('-',9):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
*T26494 ^
   SHD2 = SHD2:STR('-',10):SPACE(1)
   SHD2 = SHD2:STR('-',10):SPACE(1)
   SHD2 = SHD2:STR('-',10)
*
   PRINTER ON
*
   PROCREAD BUFFER ELSE
      ERRMSG = 'Must run this program from a REPORT.SCRN PROC.'
      GOTO 999000
   END
*
*T26493 v
*  RPT.NAME = 'BILL-OF-LADING HISTORY REPORT'
*  IF FROM.DATE # 'ALL' THEN
*     RPT.NAME = RPT.NAME:' FROM ':OCONV(FROM.DATE,'D2/')
*     RPT.NAME = RPT.NAME:' TO ':OCONV(TO.DATE,'D2/')
*  END
*  RPT.NUM = 'XXXX'
*  RPT.DATE = DATE()
   RPT.NAME = ""
   RPT.NUM = BUFFER<2>
   HD1 = ''
   HD2 = ''
   HD3 = ''
   IF FROM.DATE # "ALL" THEN
      HD3 = SPACE(55):"FROM ":OCONV(FROM.DATE,"D2/")
      HD3 = HD3:" TO ":OCONV(TO.DATE,"D2/")
   END
*T26493 ^
   CALL GET.PROG.HEAD(CONO,VOID,RPT.NAME,RPT.NUM,"",HD1,HD2)
*
   GOSUB 20000
*
*---- MAIN Function ------------------------------------------------------
*
*          This function prepares the report headings and gets ready to
*          read thru the list of qualified records from the BOL file.
*
*          This function reads the list passed to it from the PROC.
*
*          The KEY from the list is used to read the order file.  The
*          support files are read, and data is prepared for printing.
*
10000 *-------------------------------------------------------------------
*
   READNEXT BOL.KEY ELSE
      GOTO 999999;* Exit the program
   END
*
   BOL.NUMBER = BOL.KEY[4,8]
*
   MATREAD BOL.REC FROM BOL, BOL.KEY ELSE
      MAT BOL.REC = ''
      ERRMSG = 'Can not read the ':BOL.KEY:' record from the BOL file.'
      GOTO 10000
   END
*
   PNT.BOL.NUMBER = BOL.NUMBER
   PNT.BOL.SHP.DATE = OCONV(BOL.SHP.DATE,'D2/')
   PNT.BOL.FREIGHT = BOL.FREIGHT
   PNT.BOL.FOB = BOL.FOB
   PNT.BOL.CUST = BOL.CUST
   PNT.BOL.SHIP.VIA = BOL.SHIP.VIA
   PNT.BOL.INVOICE = BOL.INVOICE
   PNT.BOL.INV.DATE = OCONV(BOL.INV.DATE,'D2/')
   PNT.BOL.CUST = BOL.CUST
   PNT.BOL.SHIP.TO = BOL.SHIP.TO
   PAL.CNTR = DCOUNT(BOL.ORDER,VM)
   FOR PAL.LOOP = 1 TO PAL.CNTR
*T26484 v
*     PNT.BOL.PALLET = BOL.PALLET<1,PAL.LOOP>
      PNT.BOL.RECP.NO = BOL.RECP.NO<1,PAL.LOOP>
*T26484 ^
      IF PAL.LOOP > 1 THEN
         PNT.BOL.NUMBER = ''
         PNT.BOL.SHP.DATE = ''
         PNT.BOL.FREIGHT = ''
         PNT.BOL.FOB = ''
         PNT.BOL.CUST = ''
         PNT.BOL.SHIP.VIA = ''
         PNT.BOL.INVOICE = ''
         PNT.BOL.INV.DATE = ''
         PNT.BOL.CUST = ''
         PNT.BOL.SHIP.TO = ''
      END
      ORD.LOOP = 1
      IF ORD.LOOP > 1 THEN
*T26484 v
*        PNT.BOL.PALLET = ''
         PNT.BOL.REC.NO = ''
*T26484 ^
      END
      LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      IF LINES.THIS.PAGE > PAGE.SIZE THEN
         GOSUB 20000
         LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      END
      BOL.LN = PNT.BOL.NUMBER'L#7':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.SHP.DATE'R#8':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.FREIGHT'L#15':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.FOB'L#5':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.SHIP.VIA'L#3':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.INVOICE'R#9':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.INV.DATE'R#8':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.CUST'L#7':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.SHIP.TO'L#7':SPACE(1)
*T26484 v
*     BOL.LN = BOL.LN:PNT.BOL.PALLET<1,PAL.LOOP>'L#8':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.RECP.NO<1,PAL.LOOP,1>'L#9':SPACE(1)
*T26484 ^
      BOL.LN = BOL.LN:BOL.ORDER<1,PAL.LOOP,ORD.LOOP>'L#7':SPACE(1)
      BOL.LN = BOL.LN:BOL.RELEASE<1,PAL.LOOP,ORD.LOOP>'L#10':SPACE(1)
      BOL.LN = BOL.LN:BOL.PKTKT<1,PAL.LOOP,ORD.LOOP>'L#10':SPACE(1)
      BOL.LN = BOL.LN:OCONV(BOL.SHP.WT<1,PAL.LOOP,ORD.LOOP>,'MD0,')'R#10'
      PRINT BOL.LN
   NEXT PAL.LOOP
*
* Go up and get the next record
*
   GOTO 10000
*
*
*---- HEADING Function ---------------------------------------------------
*
*             This function assembles and prints the report heading
*             information.  A variable tracks the page number.
*
20000 *-------------------------------------------------------------------
*
   PRINT TOP.OF.NEW.PAGE
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT HD3; * T26493
   PRINT
   PRINT SHD1
   PRINT SHD2
   LINES.THIS.PAGE = PAGE.HEADING.SIZE
*
   RETURN
*
*
*---- ERROR Function -----------------------------------------------------
*
*           This function manages the display of any program
*           processing errors.
*
999000 *------------------------------------------------------------------
*
   CRT ERRMSG
   INPUT ANS
*
*---- EXIT Function ------------------------------------------------------
*
*          This function manages the wrap-up and exit from the program.
*
999999 *------------------------------------------------------------------
*
   PRINTER OFF
*
END
