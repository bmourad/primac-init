*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPSBP
* PROGRAM     - OPS.EOM.CLOSE
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*T21067 lanny 10/04/1996 * Error in determining number of period for
*                          invoice purging.
*T21159 doug 10/31/1996 * Delete BOL_TAG for cancelled bill of lading
*T21177 diane 01/20/1997 * REV11 UPG ADD CLOSE
*T23278 markt 11/30/1998 * Make fiscal data multi-value by division.
*T25739 lanny 04/05/2001 * Program is looking at wrong CO.GL.LINK flag.
*T25975 cmykleb 01/31/2002 * Save EOM transaction data so history
*                            reports can be run.
*T25740 epitka 01/31/2002 * REV12
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*ENDDOC
*********************************************************************
*
*---- INSERT FILE EQUETE
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>OPS.CPYLIB>ORDER.INVOICE
*COPY>OPS.CPYLIB>BOL
*COPY>GLS.CPYLIB>GLA
*COPY>GLS.CPYLIB>COA.SYS
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>EOM.TRANS.HIST            ; * T25975
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- SETUP ERRMSG ROUTINE
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
*---- GET CONO
*
SCREEN.OPEN.FLAG = 0
PROCREAD INBUFF ELSE
  ERRMSG = "MUST RUN FROM PROC"
  GOSUB 91000; GOTO 99999
END
CONO = INBUFF<1>
D.M.FLG = INBUFF<6>
IF D.M.FLG = "PERIOD" THEN
  RPT.PER = "PERIOD"
END ELSE
  RPT.PER = "DAY"
END
DIV.CODE = INBUFF<7>;* T23278
*
*---- INTITIALIZATION
*
MAT FILE.VARS = ""
MAT EDIT.COM.DRIVER = ""
TODAY = DATE()
SYS.FISCAL = "OPFISCAL"
UNKNOWN = "NOT ON FILE"
PROG.ID = @TTY[4,2]:"!":CONO:"!OPS.EOM"
*
*---- OPEN FILES
*
OPEN "","CONTROL" TO CONTROL ELSE
  ERRMSG = "CONTROL FILE MISSING"
  GOSUB 91000; GOTO 99000
END
OPEN "",INBUFF<3> TO EOM.TRANS ELSE
  ERRMSG = "YOU NEED TO RUN END OF PERIOD POSTING BEFORE YOU CLOSE THE PERIOD"
  GOSUB 91000; GOTO 99000
END
OPEN "",INBUFF<4> TO POST.REJECTS ELSE
  ERRMSG = "YOU NEED TO RUN END OF PERIOD POSTING BEFORE YOU CLOSE THE PERIOD"
  GOSUB 91000; GOTO 99000
END
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="PMC.SCREENS FILE IS MISSING";GOTO 93000
OPEN "","ORDER.INVOICE" TO ORDER.INVOICE ELSE ERRMSG="ORDER.INVOICE FILE MISSING";GOTO 93000
OPEN "","BOL" TO BOL ELSE ERRMSG="BOL FILE MISSING";GOTO 93000
OPEN "","ORDER_INVOICE_TAG" TO ORDER_INVOICE_TAG ELSE ERRMSG="ORDER_INVOICE_TAG FILE IS MISSING";GOTO 93000
OPEN "","BOL_TAG" TO BOL_TAG ELSE ERRMSG="BOL_TAG FILE IS MISSING";GOTO 93000
OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS MISSING";GOTO 93000
*T25975 v
OPEN "","OPS.EOM.TRANS.HIST" TO OPS.EOM.TRANS.HIST ELSE ERRMSG="OPS.EOM.TRANS.HIST FILE IS MISSING";GOTO 93000
*T25975 ^
*
*---- GET CONO
*
MATREAD COMP.REC FROM COMPANY,CONO ELSE
  ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000
END
IF CO.ARS = "Y" THEN
  OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE MISSING";GOTO 93000
END
IF CO.GLS # "N" THEN
*T25739 v
  IF CO.GL.LINK<1,7> = "Y" THEN
    OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93000
  END
  OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 93000
  EQV.FLG = 1
  OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
END
STMT.HEAD = "ORDER PROCESSING"
*COPY>PMCBP>EOD.CLOSE
IF ECD.RET.VALUE = "END" THEN
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99000
END
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
READ CUTOFF.PER FROM CONTROL, CONO:"ORDER.INVOICE.PURGE" ELSE CUTOFF.PER = 3
*T21067 v
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE 
  PERIOD.REC = ""; PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3
IF CUTOFF.PER > NUM.PERIODS THEN
  YY = INT(CUTOFF.PER / NUM.PERIODS)
  MM = MOD(CUTOFF.PER,NUM.PERIODS)
END ELSE
  YY = 0
  MM = CUTOFF.PER
END
IF FR.CURR.PER<1,POS>[5,2] > MM THEN
  CUTOFF.PER = FR.CURR.PER<1,POS> - MM
  CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER[5,2]
END ELSE
  YY = YY + 1
  CUTOFF.PER = (FR.CURR.PER<1,POS>[5,2] + NUM.PERIODS) - MM;* T23278
  CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER
  CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER;* T23278
END
*
*---- MAIN PROCESSING
*
**** ORDER.INVOICE ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING ORDER.INVOICE FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT ORDER.INVOICE
WRITE "ORDER.INVOICE" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT IVC.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # IVC.ID[1,3] THEN GOTO 1999
  IF CO.ARS = "Y" THEN
    READ DUMMY FROM OPEN.RECV, IVC.ID THEN GOTO 1999
  END
1009 *
  MATREADU IVC.REC FROM ORDER.INVOICE, IVC.ID ELSE GOTO 1999
  IF IVC.ID[LEN(IVC.ID)-1,2] = "PB" THEN
    IF IVC.PRE.BILL.MON # "" AND IVC.PRE.BILL.MON < CUTOFF.PER THEN
      DELETE ORDER.INVOICE, IVC.ID
    END ELSE
      RELEASE ORDER.INVOICE, IVC.ID
    END
  END ELSE
    IF IVC.PROC.MON < CUTOFF.PER THEN
      DELETE ORDER.INVOICE, IVC.ID
    END ELSE
      RELEASE ORDER.INVOICE, IVC.ID
    END
  END
1999 *
REPEAT
**** ORDER_INVOICE_TAG ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING ORDER_INVOICE_TAG FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
WRITE "ORDER_INVOICE_TAG" ON CONTROL, PROG.ID
SELECT ORDER_INVOICE_TAG
DATA = 1
LOOP
  READNEXT IVC.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # IVC.ID[1,3] THEN GOTO 2999
  MATREAD IVC.REC FROM ORDER.INVOICE, IVC.ID THEN
    IF IVC.GLA.DATE = '' OR (IVC.PROC.MON <> FR.CURR.PER<1,POS>) THEN;* T23278
      RELEASE ORDER.INVOICE, IVC.ID
      GOTO 2999
    END
    IVC.GLA.DATE = TODAY
    MATWRITE IVC.REC ON ORDER.INVOICE, IVC.ID
    DELETE ORDER_INVOICE_TAG, IVC.ID
  END ELSE
    RELEASE ORDER.INVOICE, IVC.ID
  END
2999 *
REPEAT
**** BOL_TAG ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING BOL_TAG FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
WRITE "BOL_TAG" ON CONTROL, PROG.ID
SELECT BOL_TAG
DATA = 1
LOOP
  READNEXT TAG.ID ELSE DATA = 0
WHILE DATA DO
  BOL.ID = FIELD(TAG.ID,"!",1)
  CANCEL.FLG = FIELD(TAG.ID,"!",2)
  IF CONO # BOL.ID[1,3] THEN GOTO 4999
  MATREADU BOL.REC FROM BOL, BOL.ID THEN
    IF CANCEL.FLG = "" THEN
      IF BOL.GLA.DATE<1,1> = '' OR (BOL.PERIOD <> FR.CURR.PER<1,POS>) THEN;* T23278
        RELEASE BOL, BOL.ID
        GOTO 4999
      END
      BOL.GLA.DATE<1,1> = TODAY
    END ELSE
      IF BOL.GLA.DATE<1,2> = "" OR (BOL.PERIOD > FR.CURR.PER<1,POS>) THEN;* T23278
        RELEASE BOL, BOL.ID
        GOTO 4999
      END
      BOL.GLA.DATE<1,2> = TODAY
    END
    MATWRITE BOL.REC ON BOL, BOL.ID
    DELETE BOL_TAG, TAG.ID
  END ELSE
    RELEASE BOL, BOL.ID
  END
4999 *
REPEAT
7000 *
IF CO.GLS = "N" THEN GOTO 8000
IF CO.GL.LINK<1,7> # "Y" THEN GOTO 8000
**** EOM.TRANS (1) ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (1) FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
ACCOUNTS = ""; AMOUNTS = ""; SOURCES = ""
SELECT EOM.TRANS
WRITE "EOM.TRANS (1)" ON CONTROL, PROG.ID
MAT GLA.REC = ""
GLA.DATE = TODAY
***** T23278 v
GLA.MON = FR.CURR.PER<1,POS>
ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/")
READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 0
WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
MATREAD CSY.REC FROM CONTROL, CONO : "COA.SYS" ELSE MAT CSY.REC = ""
DATA = 1
LOOP
  READNEXT ETR.ID ELSE DATA = 0
WHILE DATA DO
  IF ETR.ID[1,3] # CONO THEN GOTO 7200
  MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7100
  TYPE = FIELD(ETR.ID,"!",2)
  SRC = FIELD(TYPE,'-',1)
  TYPE = FIELD(FIELD(TYPE,'-',2),"*",1)
  ACCT = ETR.ID[1,ACCT.LEN]
  IF SRC = "SA" THEN
    SRC = "FJ"
  END ELSE
    SRC = "FG"
  END
  LOCATE SRC IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL
  L.GLA = CSY.LEVEL<1,FND>
  CUST.NO = ETR.REF
  IF EQV.FLG = 1 THEN
    READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
    ACCT = N.ACCT
  END
  COA.ID = ACCT[11,IN.ACCT.LEN]
  MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
    MAT COA.REC = ""
    COA.DESC = UNKNOWN
  END
  BEGIN CASE
    CASE L.GLA = "R"
      BEGIN CASE
        CASE COA.DETAIL = "R" OR COA.DETAIL = "D"
          LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
          WHILE DUMMY # "" DO REPEAT
          GLA.DESC = COA.DESC "L#25" : ODATE
          GLA.SRC = SRC
          GLA.AMT = ETR.AMT
          GLA.REF = CUST.NO
          MATWRITE GLA.REC ON GLA, GLA.ID
        CASE 1
          PTR = 1
          LOOP
            LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
              ACCOUNTS<FND> = ACCT
              AMOUNTS<FND> = ""
              SOURCES<FND> = SRC
            END
            IF SOURCES<FND> = SRC THEN
              PTR = 0
            END ELSE
              PTR = FND + 1
            END
          WHILE PTR DO REPEAT
          IF TYPE = "D" THEN
            AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
          END ELSE
            AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
          END
      END CASE
    CASE L.GLA = "D"
      ORD.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
      BEGIN CASE
        CASE COA.DETAIL = "D"
          TCNT = COUNT(ETR.TRAN,VM) + (ETR.TRAN # "")
          FOR I = 1 TO TCNT
            LOOP
              COUNTER = COUNTER + 1
              IF COUNTER > 999998 THEN COUNTER = 1
              GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
              READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
            WHILE DUMMY # "" DO REPEAT
            GLA.DESC = ETR.RDATE<1,I> "L#8" : ETR.TRAN<1,I> : "-" : ORD.NO
            GLA.SRC = SRC
            GLA.DESC = GLA.DESC "L#25" : " " : OCONV(ETR.DATE<1,I>,"D2/")
            GLA.AMT = ETR.TAMT<1,I>
            GLA.REF = CUST.NO
            MATWRITE GLA.REC ON GLA, GLA.ID
          NEXT I
        CASE COA.DETAIL = "R"
          LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
          WHILE DUMMY # "" DO REPEAT
          GLA.DESC = COA.DESC "L#25" : ODATE
          GLA.AMT = ETR.AMT
          GLA.SRC = SRC
          GLA.REF = CUST.NO
          MATWRITE GLA.REC ON GLA, GLA.ID
        CASE 1
          PTR = 1
          LOOP
            LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
              ACCOUNTS<FND> = ACCT
              AMOUNTS<FND> = ""
              SOURCES<FND> = SRC
            END
            IF SOURCES<FND> = SRC THEN
              PTR = 0
            END ELSE
              PTR = FND + 1
            END
          WHILE PTR DO REPEAT
          IF TYPE = "D" THEN
            AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
          END ELSE
            AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
          END
      END CASE
    CASE 1
      PTR = 1
      LOOP
        LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
          ACCOUNTS<FND> = ACCT
          AMOUNTS<FND> = ""
          SOURCES<FND> = SRC
        END
        IF SOURCES<FND> = SRC THEN
          PTR = 0
        END ELSE
          PTR = FND + 1
        END
      WHILE PTR DO REPEAT
      IF TYPE = "D" THEN
        AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
      END ELSE
        AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
      END
  END CASE
7100 RELEASE EOM.TRANS, ETR.ID
7200 REPEAT
7400 *
7500 *
ACNT = COUNT(ACCOUNTS,AM) + (ACCOUNTS # "")
FOR I = 1 TO ACNT
  IF EQV.FLG = 1 THEN
    READ ACCT FROM COA.EQUIV, ACCOUNTS<I> ELSE ACCT = ACCOUNTS<I>
  END ELSE
    ACCT = ACCOUNTS<I>
  END
  COA.ID = CONO : ACCT[11,IN.ACCT.LEN]
  MATREAD COA.REC FROM COA, COA.ID ELSE COA.DESC = UNKNOWN
  GLA.DESC = COA.DESC "L#25" : ODATE
  GLA.SRC = SOURCES<I>
  FOR J = 1 TO 2
    IF AMOUNTS<I,J> = "" THEN GOTO 7900
    LOOP
      COUNTER = COUNTER + 1
      IF COUNTER > 999998 THEN COUNTER = 1
      GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
      READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
    WHILE DUMMY # "" DO REPEAT
    GLA.AMT = AMOUNTS<I,J>
    MATWRITE GLA.REC ON GLA, GLA.ID
7900 *
  NEXT J
NEXT I
ACCOUNTS = ""; AMOUNTS = ""; SOURCES = ""
WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
**** EOM.TRANS (2) ****
8000 *
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (2) FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT EOM.TRANS
WRITE "EOM.TRANS (2)" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT ETR.ID ELSE DATA = 0
WHILE DATA DO
  IF ETR.ID[1,3] # CONO THEN GOTO 8999
  MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
    RELEASE EOM.TRANS, ETR.ID
    GOTO 8999
  END
*T25975 v
  CURR.PER = FR.CURR.PER<1,POS>
  MAT ETH.REC = MAT ETR.REC
  DONE = 0
  SEQ = 0
  ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER
  LOOP UNTIL DONE = 1 DO
    SEQ = SEQ + 1
    ETH.KEY = ETH.ID:"*":SEQ
    READ CHECKIT FROM OPS.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1
  REPEAT
  MATWRITE ETH.REC ON OPS.EOM.TRANS.HIST, ETH.KEY
*T25975 ^
  DELETE EOM.TRANS, ETR.ID
8999 *
REPEAT
WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
*      WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER;* T23278
* T 26685
WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID;* T23278
*WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>;* T23278
SELECT EOM.TRANS
READNEXT ETR.ID ELSE
  IF D.M.FLG = "PERIOD" THEN
    FR.CURR.DATE<1,POS> = FR.NEXT.DATE<1,POS>
    FR.CURR.PER<1,POS> = FR.NEXT.PER<1,POS>
    FR.CLOSE.DATE<1,POS> = TODAY
  END
  FR.NEXT.PER<1,POS> = ""; FR.NEXT.DATE<1,POS> = ""; FR.PRINT<1,POS> = "";* T23278
  MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
  DELETE CONTROL, PROG.ID
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
END
FR.PRINT<1,POS> = "X";* T23278
MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
ERRMSG = "E R R O R !!! CANNOT LOCATE ALL JOB TRANSACTIONS"
ECD.ACTION = 99 ; CALL SCRN.EDIT
GOTO 93000
91000 *
ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 *
WRITEV ERRMSG ON CONTROL, PROG.ID,2
ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
99000 *
INBUFF<5> = "END"
PROCWRITE INBUFF
*** END OF JOB ***
99999 *
END
