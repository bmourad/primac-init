 SUBROUTINE FNGD.XREF.SUB(CONO,CUSTNO,PRDNO,WHNO)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - FNGD.XREF.SUB
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
********************************************************************
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
 LINE.SPACE = 2
 PAGE.SIZE = 6
 BEGIN.PAGE = 8
 CNV = "MD0,"
*
 ESN = ECD.SCRN.NO
 ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = CUSTNO
 ECD.ACTION = 5; CALL SCRN.EDIT
 ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
 ECD.ACTION = 5; CALL SCRN.EDIT
*
 CUST.SEL = CUSTNO; CUST.NAME.SEL = CUST.NAME
 CATG.SEL = ""; WHSE.SEL = ""
 WID.SEL = ""; LEN.SEL = ""
 LIMIT = 5
 FOR REQUEST = 1 TO LIMIT
   ON REQUEST GOSUB 1100,1200,1300,1400,1500
   IF ECD.RET.VALUE = "END" THEN LIMIT = 0
 NEXT REQUEST
 IF NOT(LIMIT) THEN GOTO 99999
 GOSUB 5000
*
*---- Prompt line
*
 MORE = 1
 LOOP
   ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
     CASE OPTION = "END" OR OPTION = "E"
       MORE = 0
     CASE OPTION = "C"
       ANCORE = 1
       LOOP
         ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
         ECD.ACTION = 4; CALL SCRN.EDIT
         REQUEST = ECD.RET.VALUE
         BEGIN CASE
           CASE REQUEST = "END" OR REQUEST = "E"
             ANCORE = 0
           CASE REQUEST = "A"
             LIMIT = 5
             FOR REQUEST = 1 TO LIMIT
               ON REQUEST GOSUB 1100,1200,1300,1400,1500
               IF  ECD.RET.VALUE = "END" THEN LIMIT = 0
             NEXT REQUEST
           CASE NOT(NUM(REQUEST))
             ERRMSG = "Invalid entry, please re-enter"
             GOSUB 91000
           CASE REQUEST < 1 OR REQUEST > 5
             ERRMSG = "Out of range, please re-enter"
             GOSUB 91000
           CASE 1
             ON REQUEST GOSUB 1100,1200,1300,1400,1500
         END CASE
       WHILE ANCORE DO REPEAT
       GOSUB 5000
     CASE OPTION = "S" OR OPTION = "SF"
       LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
       IF LN > LINES THEN LN = 1
       GOSUB 7000
     CASE OPTION = "SR"
       LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
       IF LN < 1 THEN LN = 1
       GOSUB 7000
     CASE OPTION = "ST"
       LN = 1
       GOSUB 7000
     CASE OPTION = "SB"
       LN = LINES
       GOSUB 7000
     CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
       LN.NO = OPTION[2,99] + 0
       IF LN.NO < 1 OR LN.NO > LINES THEN
         ERRMSG = "** Invalid selection **"
         GOSUB 91000
       END ELSE
         LN = LN.NO
         GOSUB 7000
       END
     CASE OPTION = "N"
       UDTEXECUTE "INV.FNGD.MAINT"
       ECD.ACTION = 2; CALL SCRN.EDIT
       ECD.ACTION = 3; CALL SCRN.EDIT
       GOSUB 5000
     CASE NOT(NUM(OPTION))
       ERRMSG = "Invalid entry, please re-enter"
       GOSUB 91000
     CASE OPTION < 1 OR OPTION > LINES
       ERRMSG = "Out of range, please re-enter"
       GOSUB 91000
     CASE 1
       PRDNO = SEL.PROD<OPTION>
       WHNO = SEL.WHSE<OPTION>
       MORE = 0
   END CASE
 WHILE MORE DO REPEAT
 GOTO 99999
*
*---- Sold to
1100*
 ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
 BEGIN CASE
   CASE ECD.RET.VALUE = "END"
     ECD.ACTION = 5; CALL SCRN.EDIT
   CASE ECD.RET.VALUE = ""
     CUST.SEL = ""; CUST.NAME.SEL = ""
   CASE CUSTNO = ""
     CUST.SEL = CUSTNO; CUST.NAME.SEL = CUST.NAME
   CASE ECD.RET.VALUE # CUSTNO
     ERRMSG = "There is only one valid customer # ":CUSTNO
     GOSUB 91000; GOTO 1100
   CASE 1
     CUST.SEL = CUSTNO; CUST.NAME.SEL = CUST.NAME
 END CASE
 ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = CUST.NAME.SEL
 ECD.ACTION = 5; CALL SCRN.EDIT
 RETURN
*
*---- Category
1200*
 ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
 IF ECD.RET.VALUE # "" THEN
   MATREAD CATG.REC FROM CATEGORY, CONO:ECD.RET.VALUE ELSE
     ERRMSG = "Cannot locate Category # ":ECD.RET.VALUE
     GOSUB 91000; GOTO 1200
   END
   CATG.SEL = ECD.RET.VALUE
 END
 RETURN
*
*---- Whse
1300*
 ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
 IF ECD.RET.VALUE # "END" THEN
   WHSE.SEL = ECD.RET.VALUE
 END
 RETURN
*
*---- Width
1400*
 ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
 IF ECD.RET.VALUE # "END" THEN
   WID.SEL = ECD.RET.VALUE
 END
 RETURN
*
*---- Length
1500*
 ECD.NUM = 6; ECD.ACTION = 4; CALL SCRN.EDIT
 IF ECD.RET.VALUE # "END" THEN
   LEN.SEL = ECD.RET.VALUE
 END
 RETURN
*
*---- Get selected items
5000*
 SEL.PROD = ""; SEL.WHSE = ""
 BY.STMT = ""
 STMT = 'SSELECT INV.WHSE WITH CONO = "':CONO:'" AND WITH M.LINE = "FNGD" AND WITH CUST = "':CUST.SEL:'"'
 OR.STMT = ' OR WITH CONO = "':CONO:'" AND WITH M.LINE = "FNGD" AND WITH NO CUST'
 IF CATG.SEL = "" THEN
   BY.STMT = BY.STMT : ' BY P.LINE'
 END ELSE
   STMT = STMT : ' AND WITH P.LINE = "':CATG.SEL:'"'
   OR.STMT = OR.STMT : ' AND WITH P.LINE = "':CATG.SEL:'"'
 END
 IF WID.SEL = "" THEN
   BY.STMT = BY.STMT : ' BY WIDTH'
 END ELSE
   STMT = STMT : ' AND WITH WIDTH = "':OCONV(WID.SEL,"MD4"):'"'
   OR.STMT = OR.STMT : ' AND WITH WIDTH = "':OCONV(WID.SEL,"MD4"):'"'
 END
 IF LEN.SEL = "" THEN
   BY.STMT = BY.STMT : ' BY LENGTH'
 END ELSE
   STMT = STMT : ' AND WITH LENGTH = "':OCONV(LEN.SEL,"MD4"):'"'
   OR.STMT = OR.STMT : ' AND WITH LENGTH = "':OCONV(LEN.SEL,"MD4"):'"'
 END
 IF WHSE.SEL = "" THEN
   BY.STMT = BY.STMT : ' BY WHSE'
 END ELSE
   STMT = STMT : ' AND WITH WHSE = "':WHSE.SEL:'"'
   OR.STMT = OR.STMT : ' AND WITH WHSE = "':WHSE.SEL:'"'
 END
 STMT = STMT : OR.STMT : BY.STMT
 PERFORM STMT RTNLIST SYSLIST CAPTURING RESPONSE
 RESPONSE = ""; DATA = 1; LINES = 0
 LOOP
   READNEXT SEL.ID FROM SYSLIST ELSE DATA = 0
 WHILE DATA DO
   LINES = LINES + 1
   SEL.PROD<LINES> = FIELD(SEL.ID,"!",1)[4,15]
   SEL.WHSE<LINES> = FIELD(SEL.ID,"!",2)
 REPEAT
 ECD.NUM = 32
 SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
 ECD.ACTION = 5; CALL SCRN.EDIT
 LN = 1; OLD.START.LINE = 0
 GOSUB 7000
 RETURN
*
*---- Display scrolling lines
7000*
 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
 LAST.LINE = START.LINE + PAGE.SIZE - 1
 IF LAST.LINE > LINES THEN LAST.LINE = LINES
 IF START.LINE = OLD.START.LINE THEN GOTO 7090
 OLD.START.LINE = START.LINE
 ECD.NUM = 31
 SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
 ECD.ACTION = 5; CALL SCRN.EDIT
 CNT = 1
 FOR N = START.LINE TO LAST.LINE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   SEL.ID = CONO : SEL.PROD<N>
   MATREAD INV.REC FROM INVENTORY, SEL.ID ELSE
     MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
   END
*COPY>ICSBP>INV.UM.CNV
   SEL.ID = SEL.ID : "!" : SEL.WHSE<N>
   MATREAD IWH.REC FROM INV.WHSE, SEL.ID ELSE
     MAT IWH.REC = ""
   END
   P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R%3" ; P_OPT = "CL"
   P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:INV.LINE "L#6"
   P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:SEL.PROD<N> "L#15"
   P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:SEL.WHSE<N> "L#4"
   P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INV.PAP.WIDTH,"MD4") "R#8"
   P_X  := AM:41 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INV.PAP.LEN,"MD4") "R#8"
   P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT((((IWH.ON.HAND-IWH.RESV) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
   P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((IWH.INPRCS / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 9 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   CNT = CNT + 1
 NEXT N
 FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 NEXT M
7090*
 RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99999 *
 ECD.ACTION=99;CALL SCRN.EDIT
 RETURN
END
