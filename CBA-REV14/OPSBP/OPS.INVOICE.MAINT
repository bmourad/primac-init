*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*********************************************************************
* REVISION    - [08.1]
* COPYRIGHT   - 1982 by C.B.A      (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPSBP
* PROGRAM     - OPS.INVOICE.MAINT
* DESCRIPTION - This program is used to create or maintain invoices.
*
* T22154 stefanie 08/19/1997 * Fix Rev10B - Rev11 match problems.
*
*T23278 markt 10/22/1998 * Add check for divisional security 
*T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since the
*                         COUNTRY.CODE file can hold multiple attributes
*                         of data.
*T25756 lanny 04/18/2001 * Issue warning if BOL posted to future period.
*T26383 ajibaly 01/17/2002 * Only display Bol's that have not been posted
*                            in x-ref.
*T25764 cmykleb 02/21/2002 * Add "Terms Code" field that defaults from
*                            customer record but allows edit.  Add the
*                            number of days stored in the terms record
*                            to the invoice date to come up with the
*                            invoice due date.
*T26126 adelgado 03/07/2002 * Implement the LOCKED clause for READU.
*T26615 cmykleb 05/31/2002 * Default Cust Po # from OSD.PO
*T26805 epitka 08/20/2002 * ADD EMAIL
*********************************************************************
*
*---- Data structure libraries
*
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>FISCAL ;*T25756
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL  ; * T26615
*COPY>OPS.CPYLIB>BOL
*COPY>OPS.CPYLIB>ORDER.INVOICE
*COPY>PMC.CPYLIB>COUNTRY.CODE
*COPY>PMC.CPYLIB>TERMS         ; * T25764
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- Dimensions
*
* T21796 DIM SAVE.CUST(75)
   DIM SAVE.CUST(CUST.REC.SIZE)
   DIM SAVE.REC(60)
*
*---- Setup SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- Open files
*
   OPEN "","OPS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "Cannot locate the OPS.SCREENS file"; GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate the CONTROL file"; GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "Cannot locate the COMPANY file"; GOTO 93000
   END
   OPEN "","DIVISION" TO DIVISION ELSE
      ERRMSG = "Cannot locate the DIVISION file"; GOTO 93000
   END
   OPEN "","ORDER" TO ORDER ELSE
      ERRMSG = "Cannot locate the ORDER file"; GOTO 93000
   END
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
      ERRMSG = "Cannot locate the ORDER.DETAIL file"; GOTO 93000
   END
   OPEN "","BOL" TO BOL ELSE
      ERRMSG = "Cannot locate the BOL file"; GOTO 93000
   END
   OPEN "","ORDER.INVOICE" TO ORDER.INVOICE ELSE
      ERRMSG = "Cannot locate the ORDER.INVOICE file"; GOTO 93000
   END
   OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE
      ERRMSG = "Cannot locate the VOID.INVOICES file"; GOTO 93000
   END
   OPEN "","DAILY.ORDER.INVOICE" TO DAILY.ORDER.INVOICE ELSE
      ERRMSG = "Cannot locate the DAILY.ORDER.INVOICE file"; GOTO 93000
   END
   OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
      ERRMSG = "Cannot locate the INVOICE.CODE file"; GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "Cannot locate the CUSTOMER file"; GOTO 93000
   END
   OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
      ERRMSG = "Cannot locate the CUSTOMER.XREF file"; GOTO 93000
   END
   OPEN "","SHIP.TO" TO SHIP.TO ELSE
      ERRMSG = "Cannot locate the SHIP.TO file"; GOTO 93000
   END
   OPEN "","SALESMAN" TO SALESMAN ELSE
      ERRMSG = "Cannot locate the SALESMAN file"; GOTO 93000
   END
   OPEN "","SALES.CODE" TO SALES.CODE ELSE
      ERRMSG = "Cannot locate the SALES.CODE file"; GOTO 93000
   END
   OPEN "","TAX" TO TAX ELSE
      ERRMSG = "Cannot locate the TAX file"; GOTO 93000
   END
   OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
      ERRMSG = "Cannot locate the SHIP-VIA file"; GOTO 93000
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "Cannot locate the SHIP-VIA file"; GOTO 93000
   END
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "Cannot locate the SHIP-VIA file"; GOTO 93000
   END
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE
      ERRMSG = "Cannot locate the FNGD.BOM file"; GOTO 93000
   END
   OPEN "","XREF.DATA" TO XREF.DATA ELSE
      ERRMSG = "Cannot locate the XREF.DATA file"; GOTO 93000
   END
   OPEN "","PREFIX" TO PREFIX ELSE
      ERRMSG = "Cannot locate the PREFIX file"; GOTO 93000
   END
*T22154 v
   OPEN '',"COUNTRY.CODE" TO COUNTRY.CODE ELSE
      ERRMSG = "Cannot locate the COUNTRY.CODE file" ; GOTO 93000
   END
*T22154 ^
   OPEN "","DAILY.ORDER.INVOICE" TO DAILY.ORDER.INVOICE ELSE
      ERRMSG = "Cannot locate the DAILY.ORDER.INVOICE file" ; GOTO 93000
   END
*T25764 v
   OPEN '',"TERMS" TO TERMS ELSE
      ERRMSG = "Cannot locate the TERMS file" ; GOTO 93000
   END
*T25764 ^
*
*---- Get company
*
   CONO = ""; MAT COMP.REC = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99999
   IF CO.ARS = "Y" THEN
      OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
         ERRMSG = "Cannot locate the OPEN.RECV file"; GOTO 93000
      END
   END
   MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE MAT OPCO.REC = ""
*T25756 v
MATREAD FISCAL.REC FROM CONTROL, CONO:"OPFISCAL" ELSE
  ERRMSG = 'Cannot locate OPS Fiscal record!'; GOTO 93000
END
*T25756 ^
*
*---- Get Invoice Type
*
   PROCREAD MENU ELSE
      ERRMSG = "Must be executed from a PROC"; GOTO 93000
   END
   MENU = MENU<1>
   IF MENU = "PREBILL" THEN
      PRE.BILL = "Y"
      MENU = "INVOICE"
   END ELSE
      PRE.BILL = ""
   END
*
*---- Setup EDIT.SUB & SCRN.EDIT
*
*    MAT EDIT.COM = ""
*    TYP = 0; CALL EDIT.SUB
*
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 3
   BEGIN CASE
      CASE MENU = "INVOICE"
         ECD.SCRN.NAME = "OPS.INVOICE.MAINT"
         ECD.SCRN.NAME<2> = "OPS.INVOICE.LINE.SUB"
      CASE MENU = "CREDIT"
         ECD.SCRN.NAME = "OPS.CREDIT.MAINT"
         ECD.SCRN.NAME<2> = "OPS.INVOICE.LINE.SUB"
      CASE MENU = "DEBIT"
         ECD.SCRN.NAME = "OPS.DEBIT.MAINT"
         ECD.SCRN.NAME<2> = "OPS.INVOICE.LINE.SUB"
      CASE MENU = "CREDIT"
         ECD.SCRN.NAME = "OPS.CREDIT.MAINT"
         ECD.SCRN.NAME<2> = "OPS.RETURN.LINE.SUB"
         ECD.SCRN.NAME<3> = "OPS.RETURN.LINE.DET"
      CASE 1
         ERRMSG = "Invalid Invoice Type ":MENU; GOTO 93000
   END CASE
   ECD.ACTION = 1; CALL SCRN.EDIT
*
*---- Initialization
*
   ECD.SCRN.NO = 1; ESN = ECD.SCRN.NO
   MAT SCV.REC = ""
   ECD.ACTION = 2; CALL SCRN.EDIT
   MAT GEN.XREF.REC = ""
   GXR.CO = CONO
   GOTO 150
*
*---- Main processing
120 *
   MAT SCV.REC = ""
   ECD.ACTION = 6; CALL SCRN.EDIT
150 *
   ECD.NUM = 59; SCV.REC(ECD.NUM) = DATE()
   ECD.ACTION = 5; CALL SCRN.EDIT
   MAT SAVE.CUST = ""
   MAT SAVE.REC = ""
   MAST.CUST = ""
*
*---- Get Invoice number
200 *
   RELEASE         ;* T26126
   SCV.REC(7)<ESN> = ""
   P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ECD.MAXL = 6
   ECD.NUM = 7; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE = "N"
220 *
         IVC.NO = ECD.RET.VALUE
         MAT IVC.REC = ""
         IF MENU = "INVOICE" THEN
            ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
            BEGIN CASE
               CASE ECD.RET.VALUE = "END"
                  GOTO 120
               CASE ECD.RET.VALUE = "???"
*T26383 v
*              GXR.NAME = "BOL"
                  GXR.NAME = "BOL.NOT.INVOICED"
*T26383 ^
                  GXR.FILE = BOL
                  GXR.SORT.FILE = BOL
                  CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
                  ECD.ACTION = 2; CALL SCRN.EDIT
                  IF GXR.ID = "" THEN GOTO 120
                  ECD.ACTION = 3; CALL SCRN.EDIT
                  ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = GXR.ID
                  ECD.ACTION = 5; CALL SCRN.EDIT
                  ECD.RET.VALUE = GXR.ID
            END CASE
            BOLNO = ECD.RET.VALUE
            MATREAD BOL.REC FROM BOL, CONO:BOLNO ELSE
               ERRMSG = "Cannot locate Bill of Lading # ":ECD.RET.VALUE
               GOSUB 91000; GOTO 120
            END
            BEGIN CASE
               CASE BOL.STATUS = "CANCEL"
                  ERRMSG = "Bill of Lading has been cancelled"
                  GOSUB 91000; GOTO 120
               CASE BOL.INVOICE # ""
                  ERRMSG = "Already billed on Invoice # ":BOL.INVOICE:"."
                  GOSUB 91000; GOTO 120
*T25756 v
               CASE BOL.PERIOD > FR.CURR.PER
                  ERRMSG = 'Warning! BOL posted to Period ':BOL.PERIOD
                  GOSUB 91000
*T25756 ^
            END CASE
*T23278 v
            MATREAD ORD.REC FROM ORDER, CONO:BOL.ORDER<1,1> ELSE MAT ORD.REC = ''
            DIV.CODE = ORD.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; GOTO 120
            END
*T23278 ^
            TAXJURS = ""
            SOLDTO = BOL.CUST
            IF BOL.SHIP.TO > 0 THEN
               SHIPTO = SOLDTO:"!":BOL.SHIP.TO
               MATREAD SPT.REC FROM SHIP.TO, CONO:SHIPTO ELSE
                  ERRMSG = "Cannot locate customer # ":SHIPTO
                  GOSUB 91000; GOTO 120
               END
               TAXJURS = SPT.TAX.JUR
               IF SPT.EXEMPT<1,1>="" THEN
                  IVC.TAX.EXEMPT = "N"
               END ELSE
                  IVC.TAX.EXEMPT = "Y"
               END
*T26615 v
               MATREAD ORD.DET.REC FROM ORDER.DETAIL,CONO:BOL.ORDER<1,1>:"!":BOL.SHIP.TO ELSE MAT ORD.DET.REC = ''
               IF OSD.PO # "" THEN IVC.PO.NO = OSD.PO
*T26615 ^
            END
            MATREAD CUST.REC FROM CUSTOMER, CONO:SOLDTO ELSE
               ERRMSG = "Cannot locate customer # ":SOLDTO
               GOSUB 91000; GOTO 120
            END
            IF IVC.TAX.EXEMPT = "" THEN
               TAXJURS = CUST.TAX.JUR
               IF CUST.EXEMPT<1,1>="" THEN
                  IVC.TAX.EXEMPT = "N"
               END ELSE
                  IVC.TAX.EXEMPT = "Y"
               END
            END
            CALL INVOICE.LINE.UPD(OPCO.INV.DISPLAY,CONO,BOLNO,"",MAT IVC.REC,TAXJURS,STATUS)
         END ELSE
            MAT BOL.REC = ""
            GOSUB 900
            IF ECD.RET.VALUE = "END" THEN GOTO 120
            SOLDTO = ECD.RET.VALUE
            MATREAD CUST.REC FROM CUSTOMER, CONO:SOLDTO ELSE
               ERRMSG = "Cannot locate customer # ":SOLDTO
               GOSUB 91000; GOTO 120
            END
            TAXJURS = CUST.TAX.JUR
            IF CUST.EXEMPT<1,1>="" THEN
               IVC.TAX.EXEMPT = "N"
            END ELSE
               IVC.TAX.EXEMPT = "Y"
            END
         END
         GOSUB 1000
         MODE = "NEW"
      CASE ECD.RET.VALUE = "D" AND MENU = "INVOICE"
         ERRMSG="Cannot create duplicate Invoice. Please use Debit Memo"
         GOSUB 91000; GOTO 200
      CASE ECD.RET.VALUE = "D"
         ECD.NUM = 26; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "" THEN GOTO 200
         DUP.INVOICE = ECD.RET.VALUE
         MATREAD IVC.REC FROM ORDER.INVOICE, CONO:DUP.INVOICE ELSE
            ERRMSG = "Cannot locate Invoice # ":DUP.INVOICE
            GOSUB 91000; GOTO 200
         END
         MATREAD CUST.REC FROM CUSTOMER, CONO:IVC.CUST.NO ELSE
            ERRMSG = "Cannot locate customer # ":IVC.CUST.NO
            GOSUB 91000; GOTO 200
         END
         ECD.NUM = 27; ECD.ACTION = 4; CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = ""
               GOTO 200
            CASE ECD.RET.VALUE = "N"
               ECD.MAXL = 6
               ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
               ECD.ACTION = 5; CALL SCRN.EDIT
            CASE LEN(ECD.RET.VALUE) > 0 AND LEN(ECD.RET.VALUE) <= 6
               ECD.RET.VALUE = STR("0",6-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
               ECD.MAXL = 6
               ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
               ECD.ACTION = 5; CALL SCRN.EDIT
               BEGIN CASE
                  CASE MENU = "CREDIT"
                     ECD.RET.VALUE = ECD.RET.VALUE:"CM"
                  CASE MENU = "DEBIT"
                     ECD.RET.VALUE = ECD.RET.VALUE:"DM"
                  CASE PRE.BILL = "Y"
                     ECD.RET.VALUE = ECD.RET.VALUE:"PB"
               END CASE
               IF CO.ARS = "Y" THEN
                  READ REC FROM OPEN.RECV, CONO : ECD.RET.VALUE THEN
                     ERRMSG = "Invoice exists in the OPEN.RECV file"
                     GOSUB 91000; GOTO 200
                  END
               END
               READ REC FROM ORDER.INVOICE, CONO : ECD.RET.VALUE THEN
                  ERRMSG = "Invoice exists in the ORDER.INVOICE file"
                  GOSUB 91000; GOTO 200
               END
               READ REC FROM VOID.INVOICES, CONO : ECD.RET.VALUE THEN
                  ERRMSG = "Invoice exists in the VOID.INVOICES file"
                  GOSUB 91000; GOTO 200
               END
          * T26126  v
               READU REC FROM DAILY.ORDER.INVOICE, CONO : ECD.RET.VALUE LOCKED
                  ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STATUS())
                  GOSUB 91000;GOTO 200 
               END THEN
          * T26126 ^
                  RELEASE DAILY.ORDER.INVOICE, CONO : ECD.RET.VALUE
                  ERRMSG = "Invoice exists in the DAILY.ORDER.INVOICE file"
                  GOSUB 91000; GOTO 200
               END
            CASE 1
               ERRMSG = "Invalid format. Try again! "
               GOSUB 91000; GOTO 200
         END CASE
         IVC.NO = ECD.RET.VALUE
         IVC.DATE = DATE()
         IVC.PROC.DATE = ""
         IVC.PRT.DATE = ""
         IVC.PROC.MON = ""
         IVC.STATUS = ""
         IVC.LAST = ""
         IVC.WIP.DATE = ""
         IVC.WIP.PRCNT = ""
         IVC.PRE.BILL = ""
         IVC.PRE.BILL.MON = ""
         IVC.GLA.DATE = ""
         MODE = "NEW"
      CASE ECD.RET.VALUE = "???" OR (ECD.RET.VALUE # "" AND NUM(ECD.RET.VALUE))
         IF ECD.RET.VALUE = "???" THEN
            GXR.NAME = "DAILY.ORDER.INVOICE"
            GXR.FILE = DAILY.ORDER.INVOICE
            GXR.SORT.FILE = DAILY.ORDER.INVOICE
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            IF GXR.ID = "" THEN GOTO 120
            ECD.ACTION = 3; CALL SCRN.EDIT
            ECD.MAXL = 6
            ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = GXR.ID
            ECD.ACTION = 5; CALL SCRN.EDIT
            BEGIN CASE
               CASE MENU = "INVOICE" AND GXR.ID[7,2] # ""
                  ERRMSG = "Invalid Invoice selected. Try again! "
                  GOSUB 91000; GOTO 120
               CASE MENU = "CREDIT" AND GXR.ID[7,2] # "CM"
                  ERRMSG = "Invalid Credit Memo selected. Try again! "
                  GOSUB 91000; GOTO 120
               CASE MENU = "DEBIT" AND GXR.ID[7,2] # "DM"
                  ERRMSG = "Invalid Debit Memo selected. Try again! "
                  GOSUB 91000; GOTO 120
            END CASE
            ECD.RET.VALUE = GXR.ID
         END
         SFX = ECD.RET.VALUE[LEN(ECD.RET.VALUE)-1,2]
         FMTERR = 0
         BEGIN CASE
            CASE MENU = "CREDIT"
               IF SFX # "CM" THEN ECD.RET.VALUE = ECD.RET.VALUE:"CM"
               IF LEN(ECD.RET.VALUE) <= 8 THEN
                  ECD.RET.VALUE = STR("0",8-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
               END ELSE
                  FMTERR = 1
               END
            CASE MENU = "DEBIT"
               IF SFX # "DM" THEN ECD.RET.VALUE = ECD.RET.VALUE:"DM"
               IF LEN(ECD.RET.VALUE) <= 8 THEN
                  ECD.RET.VALUE = STR("0",8-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
               END ELSE
                  FMTERR = 1
               END
            CASE PRE.BILL = "Y"
               IF SFX # "PB" THEN ECD.RET.VALUE = ECD.RET.VALUE:"PB"
               IF LEN(ECD.RET.VALUE) <= 8 THEN
                  ECD.RET.VALUE = STR("0",8-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
               END ELSE
                  FMTERR = 1
               END
            CASE 1
               IF LEN(ECD.RET.VALUE) <= 6 THEN
                  ECD.RET.VALUE = STR("0",6-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
               END ELSE
                  FMTERR = 1
               END
         END CASE
         ECD.MAXL = 6
         ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
         ECD.ACTION = 5; CALL SCRN.EDIT
         IF FMTERR THEN
            ERRMSG = "Invalid format. Try again! "
            GOSUB 91000; GOTO 120
         END
         IF CO.ARS = "Y" THEN GOSUB 2000 ELSE GOSUB 3000
         BEGIN CASE
            CASE MODE = "ERROR"
               RELEASE DAILY.ORDER.INVOICE, CONO:ECD.RET.VALUE
               GOTO 200
            CASE MODE = "END"
               RELEASE DAILY.ORDER.INVOICE, CONO:ECD.RET.VALUE
               GOTO 120
            CASE MODE = "NEW"
               GOTO 220
         END CASE
         IVC.NO = ECD.RET.VALUE
         MAT BOL.REC = ""
         MATREAD CUST.REC FROM CUSTOMER, CONO:IVC.CUST.NO ELSE
            ERRMSG = "Cannot locate customer # ":IVC.CUST.NO
            GOSUB 91000; GOTO 120
         END
      CASE 1
         ERRMSG = "*** Invalid invoice number ***"
         GOSUB 91000; GOTO 200
   END CASE
*
*---- Continue
*
   SAVE.IVC.LAST = IVC.LAST
   IF PRE.BILL = "Y" THEN
      MTYPE = "PREBILL"
   END ELSE
      MTYPE = MENU
   END
   IF MODE = "OLD" THEN ACTION = "I" ELSE ACTION = "M"
   CALL OPS.INVOICE.SUB(ACTION,MTYPE,CONO,IVC.NO,MAT IVC.REC,CO.ARS,VOID.INVOICES)
   RELEASE DAILY.ORDER.INVOICE, CONO:IVC.NO
   GOTO 120
*
*---- Get Customer
*
900 *
   SCV.REC(1)<ESN> = IVC.CUST.NO
   ECD.NUM=1; ECD.ACTION=4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         NULL
      CASE ECD.RET.VALUE = ""
         ECD.NUM=2; ECD.SUB.NUM=1; ECD.ACTION=4; CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE = "END"
               NULL
            CASE ECD.RET.VALUE = ""
               GOTO 900
            CASE 1
               GXR.NAME = "CUSTOMER"
               GXR.XREF = CUSTOMER.XREF
               GXR.FILE = CUSTOMER
               GXR.SRCH.ID = ECD.RET.VALUE
               CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
               IF GXR.ACTION # "X" THEN
                  ECD.ACTION = 2; CALL SCRN.EDIT
                  ECD.ACTION = 3; CALL SCRN.EDIT
               END
               IF GXR.ID = "" THEN
                  SCV.REC(2)<ESN,1> = IVC.CUST.NAME
                  ECD.NUM=2; ECD.SUB.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
                  GOTO 900
               END
               ECD.RET.VALUE = GXR.ID
         END CASE
   END CASE
   RETURN
*
*---- Load Customer info
*
1000 *
   IVC.DATE = DATE()
   IVC.ORDER.NO = IVC.CHG.ORDER<1,1>
   IF CUST.ACCT = "" OR CUST.ACCT = SOLDTO THEN
      IVC.CUST.NO = SOLDTO
   END ELSE
      MAT SAVE.CUST = MAT CUST.REC
      MAST.CUST = CUST.ACCT
      MATREAD CUST.REC FROM CUSTOMER, CONO:MAST.CUST ELSE
         MAT CUST.REC = MAT SAVE.CUST
         IVC.CUST.NO = SOLDTO
         GOTO 1100
      END
      IVC.CUST.NO = MAST.CUST
   END
1100 *
   IVC.CUST.NAME = CUST.NAME
   IVC.ADDR1 = CUST.ADDR1
   IVC.ADDR2 = CUST.ADDR2
   IVC.ADDR3 = CUST.ADDR3
* T22154 v
   SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
  *T25159 v
  * READ COUNTRY FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY THEN
  *   SHIP.TO.CNTY = COUNTRY
  * END ELSE
  *   SHIP.TO.CNTY = ''
  * END
   MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT CTY.REC = ''
   SHIP.TO.CNTY = CTY.DESC
  *T25159 ^
* IVC.ADDR4 = CUST.ADDR4:" ":CUST.ZIP
   IVC.ADDR4 = CUST.ADDR4:" ":CUST.ZIP:"  ":SHIP.TO.CNTY
* T22154 ^
   IVC.ATTENTION = CUST.ATTENTION
   IVC.TERMS = CUST.TERMS ; * T25764
   RETURN
*
*---- Verify Invoice number when A/R is active
*
2000 *
   FLAG = ""
   MODE = ""
   MATREAD IVC.REC FROM ORDER.INVOICE, CONO:ECD.RET.VALUE THEN FLAG<1,1>="Y" ELSE FLAG<1,1>="N"
   READ REC FROM DAILY.ORDER.INVOICE, CONO:ECD.RET.VALUE THEN FLAG<1,2>="Y" ELSE FLAG<1,2>="N"
   READ REC FROM OPEN.RECV, CONO:ECD.RET.VALUE THEN FLAG<1,3>="Y" ELSE FLAG<1,3>="N"
   BEGIN CASE
      CASE FLAG<1,1> = "N" AND FLAG<1,2> = "N" AND FLAG<1,3> = "Y"
         ERRMSG = "This is a manual invoice"
         GOSUB 91000; MODE = "ERROR"
      CASE FLAG<1,1> = "Y" AND FLAG<1,2> = "N" AND FLAG<1,3> = "Y"
         MODE = "OLD"
      CASE FLAG<1,1> = "N" AND FLAG<1,3> = "N"
         MODE = ""
      * T26126 v
         MATREADU IVC.REC FROM DAILY.ORDER.INVOICE, CONO:ECD.RET.VALUE LOCKED
            ERRMSG = 'INVOICE record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000 ; MODE = "ERROR" ; RETURN 
         END ELSE
      * T26126 ^
            X=0; Y=22; TYP=8; MAXL=1; O.R="O"; DEFAULT="N"
            BEGIN CASE
               CASE MENU = "CREDIT"
                  PMSG = "Credit Memo is not on file, do you wish to add (Y/N)"
               CASE MENU = "DEBIT"
                  PMSG = "Debit Memo is not on file, do you wish to add (Y/N)"
               CASE 1
                  PMSG = "Invoice is not on file, do you wish to add (Y/N)"
            END CASE
            CALL EDIT.SUB
            BEGIN CASE
               CASE VALUE = "END"
                  MODE = "END"
               CASE VALUE = "Y"
                  MODE = "NEW"
               CASE 1
                  MODE = "ERROR"
            END CASE
            P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      CASE 1
         ERRMSG = "*** ERROR ***"
         MODE = "ERROR"; GOSUB 91000
   END CASE
*T23278 v
   MATREAD ORD.REC FROM ORDER, CONO:ECD.RET.VALUE ELSE MAT ORD.REC = ''
   DIV.CODE = ORD.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
   CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
   IF ERRMSG # '' THEN
      MODE = "ERROR"; GOSUB 91000
   END
*T23278 ^
   RETURN
*
*---- Verify Invoice number when A/R is not active
*
3000 *
   MODE = ""
   MATREAD IVC.REC FROM ORDER.INVOICE, CONO:ECD.RET.VALUE THEN
      MODE = "OLD"
   END ELSE
      MATREADU IVC.REC FROM DAILY.ORDER.INVOICE, CONO:ECD.RET.VALUE ELSE
         X=0; Y=22; TYP=8; MAXL=1; O.R="O"; DEFAULT="N"
         BEGIN CASE
            CASE MENU = "CREDIT"
               PMSG = "Credit Memo is not on file, do you wish to add (Y/N)"
            CASE MENU = "DEBIT"
               PMSG = "Debit Memo is not on file, do you wish to add (Y/N)"
            CASE 1
               PMSG = "Invoice is not on file, do you wish to add (Y/N)"
         END CASE
         CALL EDIT.SUB
         BEGIN CASE
            CASE VALUE = "END"
               MODE = "END"
            CASE VALUE = "Y"
               MODE = "NEW"
            CASE 1
               MODE = "ERROR"
         END CASE
         P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
   END
   RETURN
*
*-- CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1):
END
