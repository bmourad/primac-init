  SUBROUTINE OPS.INVOICE.LINE.SUB(ACTION,MTYPE,CONO,IVC.NO,MAT IVC.REC,IPTR,STATUS)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION - [08.1]
* Copyright 1982 by Vercom Software, Inc. (dba CBA)
* SOURCE   - OPSBP
* PROGRAM  - OPS.INVOICE.LINE.SUB
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE     - 07/21/92
* DESCRIPTION
* This program is used to maintain invoice finished good item details.
*T22563 stefanie 05/12/1998 * Allow Credit/Debit memo to track to SAS.
*T23318 markt 10/09/1998 * Correct display of city, state. Read from
*                          SPT.REC rather than CUST.REC
*T24406 markt 10/11/1999 * Expand line item limit to 999.
*T24916 alex 03/08/2000 * Remove validation, setting a range, for
*                         quantity when processing a Debit or Credit
*                         Memo.
*T25740 epitka 02/01/2002 * REV12
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>BOL
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>OPS.CPYLIB>ORDER.INVOICE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- DIMENSIONED VARIABLES
*
  DIM TMP.REC(21)
*  EQU TMP.PALLET      TO TMP.REC(1)
  EQU TMP.ORDER       TO TMP.REC(2)
  EQU TMP.PROD        TO TMP.REC(3)
  EQU TMP.DESC        TO TMP.REC(4)
  EQU TMP.SHP.QTY     TO TMP.REC(5)
  EQU TMP.REF.QTY     TO TMP.REC(6)
  EQU TMP.UM          TO TMP.REC(7)
  EQU TMP.COST.UNIT   TO TMP.REC(8)
  EQU TMP.UNIT.PRICE  TO TMP.REC(9)
  EQU TMP.AMOUNT      TO TMP.REC(10)
*
  EQU TMP.RTN.QTY     TO TMP.REC(11)
  EQU TMP.RTN.PRICE   TO TMP.REC(12)
  EQU TMP.RTN.WHSE    TO TMP.REC(13)
  EQU TMP.RTN.LOC     TO TMP.REC(14)
*  EQU TMP.RTN.PALLET  TO TMP.REC(15)
*
  EQU TMP.BPROD       TO TMP.REC(18)
  EQU TMP.LPTR        TO TMP.REC(19)
  EQU TMP.SPTR        TO TMP.REC(20)
  EQU TMP.SHP.COST    TO TMP.REC(21)
*
*---- INITIALIZATION
*
  ESN = ECD.SCRN.NO
  STATUS = ""
  REF.CNT = 0
  RNO = ""
  CURR.RNO = ""
  LINE.COUNT = 3
  MODE = ""
  MAT TMP.REC = ""
  MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE MAT OPCO.REC = ""
*
*---- MAIN PROCESSING
*
100 *
  GOSUB 8000
  GOSUB 9000
  ECD.ACTION=3; CALL SCRN.EDIT
  RNO = 1
  CURR.RNO = 1
  GOSUB 10000
  IF IVC.SHIP.TO = "" THEN GOSUB 1100
  IF ECD.RET.VALUE = "END" THEN GOTO 99999
  BEGIN CASE
    CASE ACTION="A"
      OPTION="A"
      GOTO 510
    CASE ACTION="I"
      OPTION="IS"
      GOTO 510
    CASE ACTION="C"
      ECD.RET.VALUE=""
      FOR RNO = 1 TO REF.CNT UNTIL ECD.RET.VALUE = "END"
        GOSUB 10000
        GOSUB 2000
        GOSUB 5000
      NEXT RNO
  END CASE
*
*---- GET OPERATOR REQUEST
*
500 *
  BEGIN CASE
    CASE ACTION="M"
      ECD.NUM=25
    CASE ACTION="A"
      ECD.NUM=25
    CASE ACTION="I"
      ECD.NUM=25
    CASE ACTION="C"
      ECD.NUM=25
    CASE 1
      ECD.NUM=21
  END CASE
  ECD.ACTION=4; CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
510 *
  BEGIN CASE
    CASE NUM(OPTION) AND IVC.BOL.NO=""
      ON OPTION GOSUB 1100
    CASE NUM(OPTION)
      ERRMSG="Cannot be modified when Bill of Lading is present."
      GOSUB 90000
    CASE OPTION="A"
      MODE="A"
      DONE=0
* T24406 Changed following FOR stmt upper limit from 99 to 999
      FOR RNO=REF.CNT + 1 TO 999 UNTIL DONE ;* T24406
        IF REF.CNT > 0 THEN GOSUB 10000
        GOSUB 2000
        IF ECD.RET.VALUE="END" THEN
          DONE=1
          GOSUB 700
        END ELSE
          REF.CNT=RNO
        END
      NEXT RNO
      RNO=REF.CNT
      CURR.RNO=""
      GOSUB 10000
    CASE OPTION = "C"
      MODE = "C"
      GOSUB 650
      IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
        IF NUM(ECD.RET.VALUE) THEN
          RNO = ECD.RET.VALUE
          GOSUB 2000
          GOSUB 5000
        END ELSE
          ECD.RET.VALUE = ""
          FOR RNO = 1 TO REF.CNT UNTIL ECD.RET.VALUE = "END"
            GOSUB 2000
            GOSUB 5000
          NEXT RNO
        END
      END
    CASE OPTION = "D" AND REF.CNT > 0
      MODE = "D"
      GOSUB 600
      IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
        RNO = ECD.RET.VALUE
        GOSUB 700
        IF RNO > REF.CNT THEN RNO = RNO - 1
        CURR.RNO = ""
        GOSUB 10000
      END
    CASE OPTION = "IS"
      MODE = "IS"
      RNO = 1
      GOSUB 2000
      IF ECD.RET.VALUE = "END" THEN
        GOSUB 700
        CURR.RNO = ""
        GOSUB 10000
      END
      GOSUB 5000
    CASE OPTION = "I" AND REF.CNT > 0
      MODE = "I"
      GOSUB 600
      IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
        RNO = ECD.RET.VALUE
        GOSUB 800
        CURR.RNO = ""
        GOSUB 10000
        GOSUB 2000
        IF ECD.RET.VALUE = "END" THEN
          GOSUB 700
          CURR.RNO = ""
          GOSUB 10000
        END
      END
    CASE OPTION = "S" AND REF.CNT > 0
      RNO = CURR.RNO + LINE.COUNT
      IF RNO > REF.CNT THEN RNO = 1
      GOSUB 10000
    CASE OPTION = "SF" AND REF.CNT > 0
      RNO = CURR.RNO + LINE.COUNT
      IF RNO > REF.CNT THEN RNO = 1
      GOSUB 10000
    CASE OPTION = "ST" AND REF.CNT > 0
      RNO = 1
      GOSUB 10000
    CASE OPTION = "SR" AND REF.CNT > 0
      RNO = CURR.RNO - LINE.COUNT
      IF RNO < 1 THEN RNO = 1
      GOSUB 10000
    CASE OPTION = "SB" AND REF.CNT > 0
      RNO = REF.CNT
      GOSUB 10000
    CASE OPTION = "E" OR OPTION = "END"
      IF ACTION="M" OR ACTION="A" OR ACTION="I" OR ACTION="C" THEN GOSUB 900
      GOTO 99999
    CASE 1
      ERRMSG="Invalid option for this function."
      GOSUB 90000
  END CASE
  GOTO 500
*
*---- GET LINE NUMBER
*
600 *
  SCV.REC(22)<ESN>=""
  ECD.MINV=CURR.RNO;ECD.MAXV=CURR.RNO + LINE.COUNT - 1
  IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
  ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
  RETURN
*
*---- GET LINE NUMBER OR ALL
*
650 *
  SCV.REC(23)<ESN>=""
  MIN.LINE=CURR.RNO;MAX.LINE=CURR.RNO + LINE.COUNT - 1
  IF MAX.LINE > REF.CNT THEN MAX.LINE=REF.CNT
  ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
    CASE ECD.RET.VALUE = ""
    CASE ECD.RET.VALUE = "A"
    CASE ECD.RET.VALUE = "ALL"
    CASE ECD.RET.VALUE >= MIN.LINE AND ECD.RET.VALUE <= MAX.LINE
    CASE 1
      ERRMSG = "** OUT OF RANGE **"
      GOSUB 90000
      GOTO 650
  END CASE
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  LPTR = TMP.LPTR<1,RNO>+0
  SPTR = TMP.SPTR<1,RNO>+0
  IF LPTR > 0 AND SPTR > 0 THEN
*    IVC.PALLET = DELETE(IVC.PALLET,1,LPTR,SPTR)
    IVC.PROD = DELETE(IVC.PROD,1,LPTR,SPTR)
    IVC.WHSE = DELETE(IVC.WHSE,1,LPTR,SPTR)
    IVC.SHP.QTY = DELETE(IVC.SHP.QTY,1,LPTR,SPTR)
    IVC.SHP.COST = DELETE(IVC.SHP.COST,1,LPTR,SPTR)
    IVC.REF.QTY = DELETE(IVC.REF.QTY,1,LPTR,SPTR)
    IVC.RTN.QTY = DELETE(IVC.RTN.QTY,1,LPTR,SPTR)
    IVC.RTN.WHSE = DELETE(IVC.RTN.WHSE,1,LPTR,SPTR)
    IVC.RTN.LOC = DELETE(IVC.RTN.LOC,1,LPTR,SPTR)
*    IVC.RTN.PALLET = DELETE(IVC.RTN.PALLET,1,LPTR,SPTR)
  END
*
*  TMP.PALLET = DELETE(TMP.PALLET,1,RNO,0)
  TMP.ORDER = DELETE(TMP.ORDER,1,RNO,0)
  TMP.PROD = DELETE(TMP.PROD,1,RNO,0)
  TMP.DESC = DELETE(TMP.DESC,1,RNO,0)
  TMP.SHP.QTY = DELETE(TMP.SHP.QTY,1,RNO,0)
  TMP.SHP.COST = DELETE(TMP.SHP.COST,1,RNO,0)
  TMP.REF.QTY = DELETE(TMP.REF.QTY,1,RNO,0)
  TMP.UM = DELETE(TMP.UM,1,RNO,0)
  TMP.COST.UNIT = DELETE(TMP.COST.UNIT,1,RNO,0)
  TMP.UNIT.PRICE = DELETE(TMP.UNIT.PRICE,1,RNO,0)
  TMP.AMOUNT = DELETE(TMP.AMOUNT,1,RNO,0)
*
  TMP.RTN.QTY = DELETE(TMP.RTN.QTY,1,RNO,0)
  TMP.RTN.PRICE = DELETE(TMP.RTN.PRICE,1,RNO,0)
  TMP.RTN.WHSE = DELETE(TMP.RTN.WHSE,1,RNO,0)
  TMP.RTN.LOC = DELETE(TMP.RTN.LOC,1,RNO,0)
*  TMP.RTN.PALLET = DELETE(TMP.RTN.PALLET,1,RNO,0)
*
  TMP.BPROD = DELETE(TMP.BPROD,1,RNO,0)
  TMP.LPTR = DELETE(TMP.LPTR,1,RNO,0)
  TMP.SPTR = DELETE(TMP.SPTR,1,RNO,0)
*
  REF = RNO
  REF.CNT = DCOUNT(TMP.LPTR,VM)
  FOR N=REF TO REF.CNT
    BEGIN CASE
      CASE TMP.LPTR<1,N>=LPTR
        TMP.SPTR<1,N>=TMP.SPTR<1,N>-1
    END CASE
  NEXT N
  GOSUB 9100
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  LPTR = TMP.LPTR<1,RNO>
  SPTR = TMP.SPTR<1,RNO>
*  IVC.PALLET = INSERT(IVC.PALLET,1,LPTR,SPTR,"")
  IVC.PROD = INSERT(IVC.PROD,1,LPTR,SPTR,"")
  IVC.WHSE = INSERT(IVC.WHSE,1,LPTR,SPTR,"")
  IVC.SHP.QTY = INSERT(IVC.SHP.QTY,1,LPTR,SPTR,"")
  IVC.SHP.COST = INSERT(IVC.SHP.COST,1,LPTR,SPTR,"")
  IVC.REF.QTY = INSERT(IVC.REF.QTY,1,LPTR,SPTR,"")
  IVC.RTN.QTY = INSERT(IVC.RTN.QTY,1,LPTR,SPTR,"")
  IVC.RTN.WHSE = INSERT(IVC.RTN.WHSE,1,LPTR,SPTR,"")
  IVC.RTN.LOC = INSERT(IVC.RTN.LOC,1,LPTR,SPTR,"")
*  IVC.RTN.PALLET = INSERT(IVC.RTN.PALLET,1,LPTR,SPTR,"")
*
*  TMP.PALLET = INSERT(TMP.PALLET,1,RNO,0,"")
  TMP.ORDER = INSERT(TMP.ORDER,1,RNO,0,"")
  TMP.PROD = INSERT(TMP.PROD,1,RNO,0,"")
  TMP.DESC = INSERT(TMP.DESC,1,RNO,0,"")
  TMP.SHP.QTY = INSERT(TMP.SHP.QTY,1,RNO,0,"")
  TMP.SHP.COST = INSERT(TMP.SHP.COST,1,RNO,0,"")
  TMP.REF.QTY = INSERT(TMP.REF.QTY,1,RNO,0,"")
  TMP.UM = INSERT(TMP.UM,1,RNO,0,"")
  TMP.COST.UNIT = INSERT(TMP.COST.UNIT,1,RNO,0,"")
  TMP.UNIT.PRICE = INSERT(TMP.UNIT.PRICE,1,RNO,0,"")
  TMP.AMOUNT = INSERT(TMP.AMOUNT,1,RNO,0,"")
*
  TMP.RTN.QTY = INSERT(TMP.RTN.QTY,1,RNO,0,"")
  TMP.RTN.PRICE = INSERT(TMP.RTN.PRICE,1,RNO,0,"")
  TMP.RTN.WHSE = INSERT(TMP.RTN.WHSE,1,RNO,0,"")
  TMP.RTN.LOC = INSERT(TMP.RTN.LOC,1,RNO,0,"")
*  TMP.RTN.PALLET = INSERT(TMP.RTN.PALLET,1,RNO,0,"")
*
  TMP.BPROD = INSERT(TMP.BPROD,1,RNO,0,"")
  TMP.LPTR = INSERT(TMP.LPTR,1,RNO,0,LPTR)
  TMP.SPTR = INSERT(TMP.SPTR,1,RNO,0,SPTR)
*
  REF = RNO
  REF.CNT = DCOUNT(TMP.LPTR,VM)
  FOR N=REF+1 TO REF.CNT
    BEGIN CASE
      CASE TMP.LPTR<1,N>=LPTR
        TMP.SPTR<1,N>=TMP.SPTR<1,N>+1
    END CASE
  NEXT N
  GOSUB 9100
  RETURN
*
*---- RE-SUMMARIZE PRODUCT DETAIL
*
900 *
  LCNT = DCOUNT(IVC.CHG.CODE,VM)
  FOR LPTR = LCNT TO IPTR STEP -1
    IF IVC.CHG.CODE<1,LPTR> = "FNGD" AND IVC.PROD<1,LPTR> = "" THEN
      AC=COUNT(IVC.A1A,",")+1
      FOR AP=1 TO AC
        AA=FIELD(IVC.A1A,",",AP)
        AA1=FIELD(AA,"-",1)
        AA2=FIELD(AA,"-",2)
        IF AA2="" THEN AA2=AA1
        FOR AAP=AA1 TO AA2
          IVC.REC(AAP) = DELETE(IVC.REC(AAP),1,LPTR,0)
        NEXT AAP
      NEXT AP
      FOR N = 1 TO REF.CNT
        IF TMP.LPTR<1,N> > LPTR THEN TMP.LPTR<1,N>=TMP.LPTR<1,N>-1
      NEXT N
    END
  NEXT LPTR
  IF IPTR > 1 THEN
    LPTR = IPTR-1
    PREV.ORDER = IVC.CHG.ORDER<1,LPTR>
    PREV.BPROD = FIELD(IVC.SID<1,LPTR>,"!",2)
    PREV.PRICE = IVC.UNIT.PRICE<1,LPTR>
    PREV.LPTR  = LPTR
  END ELSE
    PREV.ORDER = "!@#$%"
    PREV.BPROD = "!@#$%"
    PREV.PRICE = "!@#$%"
    PREV.LPTR  = 0
  END
  FOR REF = 1 TO REF.CNT
    LPTR = TMP.LPTR<1,REF>
    SPTR = TMP.SPTR<1,REF>
    CURR.ORDER = TMP.ORDER<1,REF>
    CURR.BPROD = TMP.BPROD<1,REF>
    CURR.PRICE = TMP.UNIT.PRICE<1,REF>
    BEGIN CASE
      CASE LPTR = PREV.LPTR
        BEGIN CASE
          CASE CURR.ORDER # PREV.ORDER
            SPLIT = 1
          CASE CURR.BPROD # PREV.BPROD
            SPLIT = 1
          CASE CURR.PRICE # PREV.PRICE
            SPLIT = 1
          CASE 1
            SPLIT = 0
        END CASE
        IF SPLIT THEN GOSUB 940
        GOSUB 960
      CASE 1
        BEGIN CASE
          CASE CURR.ORDER # PREV.ORDER
            COMBINE = 0
          CASE CURR.BPROD # PREV.BPROD
            COMBINE = 0
          CASE CURR.PRICE # PREV.PRICE
            COMBINE = 0
          CASE 1
            COMBINE = 1
        END CASE
        IF COMBINE THEN
          GOSUB 920
        END ELSE
          IVC.QUANTITY<1,LPTR> = 0
        END
        GOSUB 960
    END CASE
    PREV.LPTR = LPTR
    PREV.ORDER = CURR.ORDER
    PREV.BPROD = CURR.BPROD
    PREV.PRICE = CURR.PRICE
  NEXT REF
  BEGIN CASE
    CASE IPTR = 1
      LPTR = 1
    CASE IVC.CHG.CODE<1,IPTR-1> = "FNGD"
      LPTR = IPTR-1
    CASE 1
      LPTR = IPTR
  END CASE
  LOOP
    SCNT = DCOUNT(IVC.PROD<1,LPTR>,SM)
    IF SCNT > 1 THEN IVC.DESC<1,LPTR> = "FINISHED GOODS"
    LPTR = LPTR + 1
  WHILE IVC.CHG.CODE<1,LPTR> = "FNGD" DO
  REPEAT
  RETURN
*
*---- COMBINE INVOICE LINES AT LPTR,SPTR WITH PREVIOUS LINE
*
920 *
  NPTR=LPTR-1
  NCNT=DCOUNT(IVC.PROD<1,NPTR>,SM)
  AC=COUNT(IVC.A1B,",")+1
  FOR AP=1 TO AC
    AA=FIELD(IVC.A1B,",",AP)
    AA1=FIELD(AA,"-",1)
    AA2=FIELD(AA,"-",2)
    IF AA2="" THEN AA2=AA1
    FOR AAP=AA1 TO AA2
      CURVAL=IVC.REC(AAP)<1,LPTR,SPTR>
      IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,(NCNT+1),CURVAL)
    NEXT AAP
  NEXT AP
  SCNT=DCOUNT(IVC.PROD<1,LPTR>,SM)
  IF SCNT=1 THEN
    AC=COUNT(IVC.A1A,",")+1
    FOR AP=1 TO AC
      AA=FIELD(IVC.A1A,",",AP)
      AA1=FIELD(AA,"-",1)
      AA2=FIELD(AA,"-",2)
      IF AA2="" THEN AA2=AA1
      FOR AAP=AA1 TO AA2
        IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,0)
      NEXT AAP
    NEXT AP
    FOR N=REF TO REF.CNT
      BEGIN CASE
        CASE TMP.LPTR<1,N>=LPTR
          TMP.LPTR<1,N>=TMP.LPTR<1,N>-1
          TMP.SPTR<1,N>=NCNT+1
          NCNT=NCNT+1
        CASE TMP.LPTR<1,N> > LPTR
          TMP.LPTR<1,N>=TMP.LPTR<1,N>-1
      END CASE
    NEXT N
  END ELSE
    AC=COUNT(IVC.A1B,",")+1
    FOR AP=1 TO AC
      AA=FIELD(IVC.A1B,",",AP)
      AA1=FIELD(AA,"-",1)
      AA2=FIELD(AA,"-",2)
      IF AA2="" THEN AA2=AA1
      FOR AAP=AA1 TO AA2
        IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,SPTR)
      NEXT AAP
    NEXT AP
    TMP.LPTR<1,REF>=NPTR
    TMP.SPTR<1,REF>=NCNT+1
    FOR N=REF+1 TO REF.CNT
      BEGIN CASE
        CASE TMP.LPTR<1,N>=LPTR
          TMP.SPTR<1,N>=TMP.SPTR<1,N>-1
      END CASE
    NEXT N
  END
*
  LPTR=NPTR
  RETURN
*
*---- SPLIT INVOICE LINE
*
940 *
  NPTR=LPTR+1
  SCNT=DCOUNT(IVC.PROD<1,LPTR>,SM)
  AC=COUNT(IVC.A1A,",")+1
  FOR AP=1 TO AC
    AA=FIELD(IVC.A1A,",",AP)
    AA1=FIELD(AA,"-",1)
    AA2=FIELD(AA,"-",2)
    IF AA2="" THEN AA2=AA1
    FOR AAP=AA1 TO AA2
      CURVAL=IVC.REC(AAP)<1,LPTR>
      IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,0,CURVAL)
    NEXT AAP
  NEXT AP
*
  AC=COUNT(IVC.A1B,",")+1
  FOR AP=1 TO AC
    AA=FIELD(IVC.A1B,",",AP)
    AA1=FIELD(AA,"-",1)
    AA2=FIELD(AA,"-",2)
    IF AA2="" THEN AA2=AA1
    FOR AAP=AA1 TO AA2
      IVC.REC(AAP)<1,NPTR>=""
      FOR N=SCNT TO SPTR STEP -1
        CURVAL=IVC.REC(AAP)<1,LPTR,N>
        IVC.REC(AAP)=INSERT(IVC.REC(AAP),1,NPTR,1,CURVAL)
        IVC.REC(AAP)=DELETE(IVC.REC(AAP),1,LPTR,N)
      NEXT N
    NEXT AAP
  NEXT AP
*
  FOR N=REF TO REF.CNT
    BEGIN CASE
      CASE TMP.LPTR<1,N>=LPTR
        TMP.LPTR<1,N>=TMP.LPTR<1,N>+1
        TMP.SPTR<1,N>=TMP.SPTR<1,N>-SPTR+1
      CASE TMP.LPTR<1,N> > LPTR
        TMP.LPTR<1,N>=TMP.LPTR<1,N>+1
    END CASE
  NEXT N
*
  LPTR=NPTR
  IVC.CHG.ORDER<1,LPTR> = CURR.ORDER
  IVC.QUANTITY<1,LPTR>=0
  IVC.SID<1,LPTR> = CURR.ORDER:"!":CURR.BPROD:"!":CURR.PRICE
  IVC.DESC<1,LPTR> = "FINISHED GOODS"
  IVC.UM<1,LPTR> = TMP.UM<1,RNO>
  RETURN
*
*---- ACCUMULATE QUANTITY AND CALCULATE AMOUNT
*
960 *
  IVC.CHG.ORDER<1,LPTR> = CURR.ORDER
  IVC.SID<1,LPTR> = CURR.ORDER:"!":CURR.BPROD:"!":CURR.PRICE
  IVC.QUANTITY<1,LPTR> = IVC.QUANTITY<1,LPTR>+TMP.REF.QTY<1,REF>
  IVC.COST.UNIT<1,LPTR> = TMP.COST.UNIT<1,REF>
*     IVC.UNIT.PRICE<1,LPTR> = TMP.UNIT.PRICE<1,REF> / 10
  IVC.UNIT.PRICE<1,LPTR> = TMP.UNIT.PRICE<1,REF> 
  IF IVC.DESC<1,LPTR> = "" THEN IVC.DESC<1,LPTR> = "FINISHED GOODS"
  IF IVC.UM<1,LPTR> = "" THEN IVC.UM<1,LPTR> = TMP.UM<1,REF>
*
  QTY=IVC.QUANTITY<1,LPTR>
  COST.UNIT=IVC.COST.UNIT<1,LPTR>
  UNIT.PRICE=IVC.UNIT.PRICE<1,LPTR>
  IVC.AMOUNT<1,LPTR>=INT(QTY/COST.UNIT*(UNIT.PRICE/100)+0.5)
  RETURN
*
*---- GET SHIP-TO NUMBER
*
1100 *
  PX = 0
  LOOP
    PX = PX + 1
  UNTIL IVC.CHG.CODE<1,PX> = "" DO
    LOCATE "FNGD" IN IVC.CHG.CODE<1>,PX SETTING PX THEN
      IF IVC.PROD<1,PX> # "" THEN
        ERRMSG="Cannot modify ship-to when finished goods are present."
        GOSUB 90000
        RETURN
      END
    END
  REPEAT
  SCV.REC(3) = IVC.SHIP.TO
  ECD.NUM=3; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  BEGIN CASE
    CASE ECD.RET.VALUE = 0
      ERRMSG = "Invalid ship-to. Try again! "
      GOSUB 90000
      GOTO 1100
*        MATREAD CUST.REC FROM CUSTOMER, CONO:CUSTID ELSE
*           ERRMSG = "Invalid ship-to for customer ":CUSTID:". Try again! "
*           GOSUB 90000
*           GOTO 1100
*        END
    CASE 1
*         MATREAD CUST.REC FROM SHIP.TO, CONO:CUSTID:"!":ECD.RET.VALUE ELSE;* T23318
      MATREAD SPT.REC FROM SHIP.TO, CONO:CUSTID:"!":ECD.RET.VALUE ELSE;* T23318
        ERRMSG = "Invalid ship-to for customer ":CUSTID:". Try again! "
        GOSUB 90000
        GOTO 1100
      END
  END CASE
  IVC.SHIP.TO = ECD.RET.VALUE
  SCV.REC(3)<ESN>   = IVC.SHIP.TO
***** T23318 Begin
*      SCV.REC(4)<ESN,1> = CUST.NAME
*      SCV.REC(4)<ESN,2> = CUST.ADDR1
*      SCV.REC(4)<ESN,3> = CUST.ADDR2
*      SCV.REC(4)<ESN,4> = CUST.ADDR3
*      SCV.REC(4)<ESN,5> = CUST.ADDR4
  SCV.REC(4)<ESN,1> = SPT.NAME
  SCV.REC(4)<ESN,2> = SPT.ADDR1
  SCV.REC(4)<ESN,3> = SPT.ADDR2
  SCV.REC(4)<ESN,4> = SPT.CITY
  SCV.REC(4)<ESN,5> = SPT.STATE
***** T23318 End
  ECD.NUM=3; ECD.ACTION=5; CALL SCRN.EDIT
  ECD.NUM=4; ECD.SUB.NUM=1; ECD.ACTION=7; CALL SCRN.EDIT
  RETURN
*
*---- GET MULTI-LINE DATA
*
2000 *
  ECD.NUM=11; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
*---- GET PRODUCT ID
2010 *
  ECD.NUM=12; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2095
  MATREAD INV.REC FROM INVENTORY, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Invalid Product ID. Try again! "
    GOSUB 90000
    SCV.REC(12)<ESN,RNO> = TMP.PROD<1,RNO>
    GOTO 2010
  END
*     IF INV.LINE # "FNGD" THEN
  IF INV.M.LINE # "FNGD" THEN
    ERRMSG = "Invalid Product Type. Try again! "
    GOSUB 90000
    SCV.REC(12)<ESN,RNO> = TMP.PROD<1,RNO>
    GOTO 2010
  END
  TEMP.MF1 = ECD.RET.VALUE
*---- DISPLAY PRODUCT DESCRIPTION
2020 *
  SCV.REC(19)<ESN,RNO> = INV.FULL.DESC
  ECD.NUM=19; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
*---- GET PALLET NUMBER
2030 *
*     ECD.NUM=13; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
*     IF ECD.RET.VALUE = "END" THEN GOTO 2095
*     TEMP.MF3 = ECD.RET.VALUE
*---- GET ORDER NUMBER
2040 *
  IF IVC.ORDER.NO # "" THEN
    ECD.O.R="O"; ECD.DEFAULT=IVC.ORDER.NO
  END
  ECD.NUM=14; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2095
  MATREAD ORD.REC FROM ORDER, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "Invalid Order number. Try again! "
    GOSUB 90000
    SCV.REC(14)<ESN,RNO> = TMP.ORDER<1,RNO>
    GOTO 2040
  END
  ORD.ID = ECD.RET.VALUE:"!":IVC.SHIP.TO
  MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORD.ID ELSE
    ERRMSG="Cannot locate order detail for specifed ship-to."
    GOSUB 90000
    SCV.REC(14)<ESN,RNO> = TMP.ORDER<1,RNO>
    GOTO 2040
  END
*T22563 v      LOCATE TEMP.MF1 IN OSD.PROD<1>,1 SETTING PPTR ELSE
  LOCATE TEMP.MF1 IN OSD.PROD<1>,1 SETTING PPTR THEN
    TEMP.MF2 = OSD.WHSE<1,PPTR>
  END ELSE
*T22563 ^
    ERRMSG="Cannot locate product on order for specifed ship-to."
    GOSUB 90000
    SCV.REC(14)<ESN,RNO> = TMP.ORDER<1,RNO>
    GOTO 2040
  END
  TEMP.MF4 = ECD.RET.VALUE
*---- GET QUANTITY
2050 *
  ECD.MINV = 1
  *T24916 v
  IF MTYPE = "CREDIT" OR MTYPE = "DEBIT" THEN
    ECD.MAXV = ''
  END ELSE
  *T24916 ^
    IF OSD.KIT<1,PPTR> = "K" THEN
      ECD.MAXV = OSD.KIT.O.QTY<1,PPTR>
    END ELSE
      ECD.MAXV = OSD.O.QTY<1,PPTR>
    END
  END     ;*T24916
  ECD.NUM=15; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2095
  TEMP.MF5 = ECD.RET.VALUE
*---- GET UNIT OF MEASURE
2060 *
  IF INV.UNIT<1,5> = "" THEN
    ECD.NUM=16; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 2095
    TEMP.MF6 = ECD.RET.VALUE
  END ELSE
    SCV.REC(16)<ESN,RNO> = INV.UNIT<1,5>
    ECD.NUM=16; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
    TEMP.MF6 = INV.UNIT<1,5>
  END
*---- GET UNIT PRICE
2070 *
  ECD.O.R = "O"; ECD.DEFAULT = OSD.PRICE<1,PPTR>
*     ECD.O.R = "O"; ECD.DEFAULT = INT(OSD.PRICE<1,PPTR>/10+0.5)
  ECD.NUM=17; ECD.SUB.NUM=RNO; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 2095
  TEMP.MF7 = ECD.RET.VALUE
2080 *
  COST.UNIT = INV.SELL.UNIT
  IF COST.UNIT+0 = 0 THEN COST.UNIT = 1
  TEMP.MF8 = INT(TEMP.MF5/COST.UNIT*(TEMP.MF7/100)+0.5)
*     SCV.REC(18)<ESN,RNO> = TEMP.MF8 / 10
  SCV.REC(18)<ESN,RNO> = TEMP.MF8
  ECD.NUM=18; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
2090 *
  IF MODE = "A" OR MODE = "I" OR MODE = "IS" THEN
    IF RNO > 1 THEN
      LPTR = TMP.LPTR<1,RNO-1>
      SPTR = TMP.SPTR<1,RNO-1>+1
    END ELSE
      LPTR = IPTR
      SPTR = 1
    END
  END ELSE
    LPTR = TMP.LPTR<1,RNO>
    SPTR = TMP.SPTR<1,RNO>
  END
  IVC.PROD<1,LPTR,SPTR> = TEMP.MF1
*T22563 >      IVC.WHSE<1,LPTR,SPTR> = ""
  IVC.WHSE<1,LPTR,SPTR> = TEMP.MF2     ;* T22563 <
  IVC.SHP.QTY<1,LPTR,SPTR> = ""
  IVC.SHP.COST<1,LPTR,SPTR> = ""
  IVC.REF.QTY<1,LPTR,SPTR> = TEMP.MF5
  IVC.RTN.QTY<1,LPTR,SPTR> = ""
  IVC.RTN.WHSE<1,LPTR,SPTR> = ""
  IVC.RTN.LOC<1,LPTR,SPTR> = ""
*  IVC.RTN.PALLET<1,LPTR,SPTR> = ""
*
  TMP.PROD<1,RNO> = TEMP.MF1
*     TMP.PALLET<1,RNO> = TEMP.MF3
  TMP.ORDER<1,RNO> = TEMP.MF4
  TMP.REF.QTY<1,RNO> = TEMP.MF5
  TMP.UM<1,RNO> = TEMP.MF6
  TMP.UNIT.PRICE<1,RNO> = TEMP.MF7
  TMP.AMOUNT<1,RNO> = TEMP.MF8
  TMP.DESC<1,RNO> = INV.FULL.DESC
  TMP.COST.UNIT<1,RNO> = INV.SELL.UNIT
  IF TMP.COST.UNIT<1,RNO>+0 = 0 THEN TMP.COST.UNIT<1,RNO> = 1
  IF OPCO.INV.DISPLAY = "S" AND INV.BASE.SKU # "" THEN
    TMP.BPROD<1,RNO> = INV.BASE.SKU
  END ELSE
    TMP.BPROD<1,RNO> = TEMP.MF1
  END
  TMP.LPTR<1,RNO> = LPTR
  TMP.SPTR<1,RNO> = SPTR
  RETURN
2095 *
  GOSUB 9100
  CURR.RNO = ""
  GOSUB 10000
  RETURN
*
*---- CALULATE LINE AMOUNT AND DISPLAY
*
5000 *
  RQTY = TMP.REF.QTY<1,RNO>
  COST.UNIT = TMP.COST.UNIT<1,RNO>
  IF COST.UNIT+0 = 0 THEN COST.UNIT = 1
  UNIT.PRICE = TMP.UNIT.PRICE<1,RNO>
  TMP.AMOUNT<1,RNO> = INT(RQTY/COST.UNIT*(UNIT.PRICE/100)+0.5)
*     SCV.REC(18)<ESN,RNO> = TMP.AMOUNT<1,RNO> / 10
  SCV.REC(18)<ESN,RNO> = TMP.AMOUNT<1,RNO>
  ECD.NUM=18; ECD.SUB.NUM=RNO; ECD.ACTION=5; CALL SCRN.EDIT
  RETURN
*
*---- COLLECT DATA FOR DISPLAY
*
8000 *
  IF IVC.ORDER.NO = "" THEN
    MAT ORD.REC = ""
  END ELSE
    MATREAD ORD.REC FROM ORDER, CONO:IVC.ORDER.NO ELSE
      MAT ORD.REC = ""
      ORD.CUST = "???"
    END
  END
  CUSTID = ORD.CUST
  BEGIN CASE
    CASE IVC.SHIP.TO = ""
      MAT CUST.REC = ""
    CASE IVC.SHIP.TO = 0
      MATREAD CUST.REC FROM CUSTOMER, CONO:CUSTID ELSE
        MAT CUST.REC = ""
        CUST.NAME = "???????????????"
      END
    CASE 1
      MATREAD CUST.REC FROM SHIP.TO, CONO:CUSTID:"!":IVC.SHIP.TO ELSE
        MAT CUST.REC = ""
        CUST.NAME = "???????????????"
      END
  END CASE
  IF IVC.BOL.NO = "" THEN
    MAT BOL.REC = ""
  END ELSE
    MATREAD BOL.REC FROM BOL, CONO:IVC.BOL.NO ELSE
      MAT BOL.REC = ""
    END
  END
  IF BOL.SHIP.VIA = "" THEN
    MAT SHIP.VIA.REC = ""
  END ELSE
    MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:BOL.SHIP.VIA ELSE
      MAT SHIP.VIA.REC = ""
    END
  END
  SCV.REC(3) = IVC.SHIP.TO
8500 *
  LPTR = IPTR
  LOOP
    ORDER.NO = IVC.CHG.ORDER<1,LPTR>
    UM = IVC.UM<1,LPTR>
    COST.UNIT = IVC.COST.UNIT<1,LPTR>
    UNIT.PRICE = IVC.UNIT.PRICE<1,LPTR>
    SCNT = DCOUNT(IVC.PROD<1,LPTR>,SM)
    BEGIN CASE
      CASE SCNT = 0 AND ACTION = "I"
        RNO = RNO + 1
        TMP.LPTR<1,RNO> = IPTR
        TMP.SPTR<1,RNO> = 1
      CASE SCNT = 0 AND ACTION = "A"
      CASE 1
        FOR SPTR = 1 TO SCNT
          PROD = IVC.PROD<1,LPTR,SPTR>
          WHSE = IVC.WHSE<1,LPTR,SPTR>
          MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
            MAT INV.REC = ""
          END
          RNO = RNO + 1
*          TMP.PALLET<1,RNO> = IVC.PALLET<1,LPTR,SPTR>
          TMP.ORDER<1,RNO> = ORDER.NO
          TMP.PROD<1,RNO> = PROD
          TMP.DESC<1,RNO> = INV.FULL.DESC
          TMP.SHP.QTY<1,RNO> = IVC.SHP.QTY<1,LPTR,SPTR>
          TMP.SHP.COST<1,RNO> = IVC.SHP.COST<1,LPTR,SPTR>
          IF IVC.REF.QTY<1,LPTR,SPTR> = "" THEN
            TMP.REF.QTY<1,RNO> = TMP.SHP.QTY<1,RNO>
          END ELSE
            TMP.REF.QTY<1,RNO> = IVC.REF.QTY<1,LPTR,SPTR>
          END
          IF OPCO.INV.DISPLAY = "S" AND INV.BASE.SKU # "" THEN
            TMP.BPROD<1,RNO> = INV.BASE.SKU
          END ELSE
            TMP.BPROD<1,RNO> = PROD
          END
          RQTY = TMP.REF.QTY<1,RNO>
          TMP.UM<1,RNO> = UM
          TMP.COST.UNIT<1,RNO> = COST.UNIT
          TMP.UNIT.PRICE<1,RNO> = UNIT.PRICE
          TMP.AMOUNT<1,RNO>=INT(RQTY/COST.UNIT*(UNIT.PRICE/100)+0.5)
          TMP.LPTR<1,RNO> = LPTR
          TMP.SPTR<1,RNO> = SPTR
        NEXT SPTR
    END CASE
    LPTR = LPTR + 1
  WHILE IVC.CHG.CODE<1,LPTR> = "FNGD" DO
  REPEAT
  REF.CNT = DCOUNT(TMP.LPTR,VM)
  RETURN
*
*---- DISPLAY DATA
*
9000 *
  BEGIN CASE
    CASE MTYPE = "CREDIT"
      SCV.REC(59)<ESN> = "Credit #"
    CASE MTYPE = "DEBIT"
      SCV.REC(59)<ESN> = "Debit #"
    CASE 1
      SCV.REC(59)<ESN> = "Invoice #"
  END CASE
  SCV.REC(1)<ESN>   = DATE()
  SCV.REC(39)<ESN>  = IVC.NO
  SCV.REC(2)<ESN>   = IVC.BOL.NO
  SCV.REC(3)<ESN>   = IVC.SHIP.TO
***** T23318 Begin
*      SCV.REC(4)<ESN,1> = CUST.NAME
*      SCV.REC(4)<ESN,2> = CUST.ADDR1
*      SCV.REC(4)<ESN,3> = CUST.ADDR2
*      SCV.REC(4)<ESN,4> = CUST.ADDR3
*      SCV.REC(4)<ESN,5> = CUST.ADDR4
  MATREAD SPT.REC FROM SHIP.TO, CONO:CUSTID:"!":IVC.SHIP.TO ELSE
    MAT SPT.REC = ''
  END
  SCV.REC(4)<ESN,1> = SPT.NAME
  SCV.REC(4)<ESN,2> = SPT.ADDR1
  SCV.REC(4)<ESN,3> = SPT.ADDR2
  SCV.REC(4)<ESN,4> = SPT.CITY
  SCV.REC(4)<ESN,5> = SPT.STATE
***** T23318 End
  SCV.REC(5)<ESN>   = SHPV.DESC
  IF IVC.BOL.NO # "" THEN
    SCV.REC(6)<ESN>   = BOL.SHP.DATE
    SCV.REC(7)<ESN>   = BOL.FREIGHT
    SCV.REC(8)<ESN>   = SUM(SUM(BOL.SHP.AMT))
  END
9100 *
  SCV.REC(12)<ESN>  = TMP.PROD
*  SCV.REC(13)<ESN>  = TMP.PALLET
  SCV.REC(14)<ESN>  = TMP.ORDER
  SCV.REC(15)<ESN>  = TMP.REF.QTY
  SCV.REC(16)<ESN>  = TMP.UM
*     SCV.REC(17)<ESN>  = TMP.UNIT.PRICE * 10
  SCV.REC(17)<ESN> = ""
  SFX = DCOUNT(TMP.UNIT.PRICE,VM)
  FOR SF = 1 TO SFX
*        SCV.REC(17)<ESN,SF> = TMP.UNIT.PRICE<1,SF> * 10
    SCV.REC(17)<ESN,SF> = TMP.UNIT.PRICE<1,SF>
  NEXT SF
  SCV.REC(18)<ESN>  = TMP.AMOUNT
  SCV.REC(19)<ESN>  = TMP.DESC
  SCV.REC(20)<ESN>  = ""
  FOR REF = 1 TO REF.CNT
    IF TMP.RTN.QTY<1,REF>+0 > 0 THEN SCV.REC(20)<ESN,REF> = "*"
  NEXT REF
  RETURN
*
*---- DISPLAY MULTI-LINE FIELDS
*
10000 *
  START.RNO = 1 + INT((RNO-1)/LINE.COUNT)*LINE.COUNT
  IF START.RNO = CURR.RNO THEN GOTO 10100
  CURR.RNO = START.RNO
  ECD.NUM=11; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=12; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
*  ECD.NUM=13; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=14; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=15; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=16; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=17; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=18; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=19; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
  ECD.NUM=20; ECD.SUB.NUM=START.RNO; ECD.ACTION=7; CALL SCRN.EDIT
10100 *
  PGNUM = INT(CURR.RNO/LINE.COUNT+0.9)
  PGCNT = INT(REF.CNT/LINE.COUNT+0.9)
  IF PGNUM > PGCNT THEN PGCNT = PGNUM
  SCV.REC(41)<ESN> = PGNUM "R%2"
  ECD.NUM=41; ECD.ACTION=5; CALL SCRN.EDIT
  SCV.REC(42)<ESN> = PGCNT "R%2"
  ECD.NUM=42; ECD.ACTION=5; CALL SCRN.EDIT
  RETURN
*
*---- VALIDATE PRODUCT AGAINST ORDER DETAIL
*
11000 *
  ORD.ID = ORDER.NO:"!":IVC.SHIP.TO
  MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORD.ID ELSE
    ERRMSG="Cannot locate product on order for specifed ship-to."
    PPTR = 0
    RETURN
  END
  LOCATE PROD IN OSD.PROD<1>,1 SETTING PPTR ELSE PPTR = 0
  RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
