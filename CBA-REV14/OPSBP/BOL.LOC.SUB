SUBROUTINE BOL.LOC.SUB(ACTION,CONO,IPTR,TOTAVL,LOCAVL,SIDS,STATUS)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>PMC.CPYLIB>COM.SHIP.TO
*COPY>OPS.CPYLIB>COM.BOL
*********************************************************************
*
*Copyright 1982 by Vercom Software Inc.
*
*PROGRAM  - BOL.LOC.SUB
*
*AUTHOE   - NICK AMENDOLA
*
*DATE     - 09/08/93
*
*DESCRIPTION
*
*T24732 alex 01/19/2000*THE DEFAULT QTY IS THE WRONG VALUE TO WHAT WAS
*                        PREVIOUSLY IN THE FIELD.
*T25740 epitka 01/21/2002*REV12
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>OPS.CPYLIB>BOL
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV_SERIAL          
*COPY>ICS.CPYLIB>INV_RECEIPTS        
*COPY>ICS.CPYLIB>INV_RECP_WHSE       
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC, ROND,LN)
DEFFUN CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
*
MAT SYSCOM.REC=""; SYS.TYPE=2
;*SETUP UNIT MEASURE CONVERSION AND DISPLAY
ICR.CNV="MD0"; ICR.CNV1="MD0,"
ICR.DV1=1; ICR.MT1=1; ICR.DV2=1000
ICR.TYPE=3; ICR.SCAL=0
*
*---- INITIALIZATION
*
STATUS=""
ESN=ECD.SCRN.NO
*
BEGIN.PAGE=8
PAGE.SIZE=10
LINE.SPACE=1
LINES=0
LN=""
OLD.START=""
RSVBLE.QTY=LOCAVL
*
*---- MAIN PROCESSING
*
100 *
GOSUB 80000
GOSUB 81000
LINES=DCOUNT(TEMP.LOC,VM)
LN=1
OLD.START=""
GOSUB 50000
IF ACTION="M" AND SUM(TEMP.QTY)=0 THEN
  OPT="CA"
  GOTO 510
END
*
*---- GET OPERATOR REPLY
*
500 *
P_X =0;P_Y=23;P_VALUE="";P_OPT="CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
BEGIN CASE
  CASE ACTION="M"
    ECD.NUM=21
    ECD.ACTION=4; CALL SCRN.EDIT
  CASE 1
    ECD.NUM=23
    ECD.ACTION=4; CALL SCRN.EDIT
END CASE
OPT=ECD.RET.VALUE
510 *
BEGIN CASE
  CASE OPT="E" OR OPT="END"
    ERRMSG=""
    IF SUM(TEMP.QTY)> TOTAVL<1,IPTR> THEN
      ERRMSG="Total quantity shipped cannot exceed reserved quantity."
    END
    IF ERRMSG="" THEN
      FOR REF=1 TO LINES WHILE ERRMSG=""
        IF TEMP.QTY<1,REF> > TEMP.AVL<1,REF> THEN
          ERRMSG="Quantity shipped cannot exceed location on-hand"
        END
      NEXT REF
    END
    IF ERRMSG="" THEN
      SQTY=''
      TQTY=TEMP.QTY
      LCNT=DCOUNT(BOL.LOC<1,IPTR>,SM)
      FOR LPTR=1 TO LCNT
        WLOC=BOL.LOC<1,IPTR,LPTR>
        LAVL=LOCAVL<1,IPTR,LPTR>
        LOCATE WLOC IN TEMP.LOC<1>,1 SETTING LP ELSE NULL
        IF TQTY<1,LP> <=LAVL THEN
          SQTY<1,IPTR,LPTR>=TQTY<1,LP>
          TQTY<1,LP>=0
        END ELSE
          SQTY<1,IPTR,LPTR>=LAVL
          TQTY<1,LP>=TQTY<1,LP> - LAVL
        END
      NEXT LPTR
      IF SUM(TQTY)# 0 THEN
        ERRMSG="Quantity distribution error!"
      END
    END
    IF ERRMSG="" THEN
      BOL.QTY<1,IPTR>=SQTY<1,IPTR>
      GOTO 99999
    END ELSE
      GOSUB 91000
    END
  CASE OPT="C" AND LINES > 0
    MODE="C"
    GOSUB 600
    IF ECD.RET.VALUE #"" AND ECD.RET.VALUE #"END" THEN
      IF ECD.RET.VALUE="A" THEN
        FOR LN=1 TO LINES UNTIL ECD.RET.VALUE="END"
          GOSUB 50000
          GOSUB 10000
        NEXT LN
      END ELSE
        LN=ECD.RET.VALUE
        GOSUB 10000
      END
      IF ECD.RET.VALUE="END" THEN
        OLD.START=""
        GOSUB 50000
      END
    END
  CASE OPT="CA" AND LINES > 0
    MODE="C"
    FOR LN=1 TO LINES UNTIL ECD.RET.VALUE="END"
      GOSUB 50000
      GOSUB 10000
    NEXT LN
    IF ECD.RET.VALUE="END" THEN
      OLD.START=""
      GOSUB 50000
    END
  CASE OPT="S" OR OPT="SF"
    LN=OLD.START+PAGE.SIZE
    IF LN > LINES THEN LN=1
    GOSUB 50000
  CASE OPT="SR"
    LN=OLD.START - PAGE.SIZE
    IF LN < 1 THEN LN=1
    GOSUB 50000
  CASE OPT="ST"
    LN=1
    GOSUB 50000
  CASE OPT="SB"
    LN=LINES
    IF LN < 1 THEN LN=1
    GOSUB 50000
END CASE
GOTO 500
*
*---- GET LINE NUMBER
*
600 *
GOSUB 50000
ECD.NUM=22; ECD.ACTION=4; CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE="END"
  CASE ECD.RET.VALUE=""
  CASE ECD.RET.VALUE="A"
  CASE NOT(NUM(ECD.RET.VALUE))
    ERRMSG="**INVALID RESPONSE **"; GOSUB 91000
    GOTO 600
  CASE ECD.RET.VALUE < START.LINE OR ECD.RET.VALUE > LAST.LINE
    ERRMSG="**OUT OF RANGE **"; GOSUB 91000
    GOTO 600
END CASE
RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
SLN=BEGIN.PAGE+LINE.SPACE*MOD(LN-1,PAGE.SIZE)
P_X =21;P_Y=SLN;P_VALUE=LN"R%2";P_OPT=""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10100 *
PTR=1
USED.QTY=0
LOOP
  SID=PROD:"!":WHSE:"!":ORDNO:"!":RECP
  LOCATE SID IN SIDS<1>,PTR SETTING SPTR THEN
    IF SPTR # IPTR THEN
      LOCATE TEMP.LOC<1,LN> IN BOL.LOC<1,SPTR>,1 SETTING LPTR THEN
        USED.QTY=USED.QTY+BOL.QTY<1,SPTR,LPTR>
      END
    END
  END ELSE
    SPTR=0
  END
WHILE SPTR DO
  PTR=SPTR+1
REPEAT
VALUE=TEMP.AVL<1,LN> - USED.QTY
ECD.MAXV=CALC.STK.QTY(VALUE,MAT INV.CNV.REC,.5,"")
IF ECD.MAXV > 0 THEN
  ECD.SUB.NUM=LN
  ECD.MINV=0
  ECD.NUM=14; ECD.ACTION=4; CALL SCRN.EDIT
  IF ECD.RET.VALUE="END" THEN GOTO 19950
  TEMP.MF1=CALC.COST.QTY(ECD.RET.VALUE,MAT INV.CNV.REC,'.5',"")
  VALUE=SUM(TEMP.QTY)-TEMP.QTY<1,LN>+TEMP.MF1
  SCV.REC(19)<ESN>=CALC.STK.QTY(VALUE,MAT INV.CNV.REC,'.5','')
  ECD.NUM=19; ECD.ACTION=5; CALL SCRN.EDIT
END ELSE
  TEMP.MF1=0
  SCV.REC(14)<ESN,LN>=0
  ECD.SUB.NUM=LN
  ECD.NUM=14; ECD.ACTION=5; CALL SCRN.EDIT
END
19900 *
TEMP.QTY<1,LN>=TEMP.MF1
RETURN
19950 *
GOSUB 81000
RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
START.LINE=1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE=START.LINE+PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE=LINES
IF START.LINE=OLD.START THEN RETURN
OLD.START=START.LINE
CNT=1
FOR N=START.LINE TO LAST.LINE
  SLN=BEGIN.PAGE+LINE.SPACE*MOD(N-1,PAGE.SIZE)
  P_X =21;P_Y=SLN;P_VALUE=@(-4):N"R%2";P_OPT=""
  P_X:=AM:25;P_Y:=AM:SLN;P_VALUE:=AM:SCV.REC(12)<ESN,N>"L#4"
  P_X:=AM:31;P_Y:=AM:SLN
  P_VALUE:=AM:CALC.STK.QTY(SCV.REC(13)<ESN,N>,MAT INV.CNV.REC,'.5','')"R#10"
  P_X:=AM:43;P_Y:=AM:SLN;P_VALUE:=AM:SCV.REC(14)<ESN,N>"R#10" 
  P_X:=AM:55;P_Y:=AM:SLN;P_VALUE:=AM:SCV.REC(15)<ESN,N>"L#6"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CNT=CNT+1
NEXT N
FOR N=CNT TO PAGE.SIZE
  SLN=BEGIN.PAGE+LINE.SPACE*MOD(N-1,PAGE.SIZE)
  P_X =0;P_Y=SLN;P_VALUE=@(-4); P_OPT=""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT N
SCV.REC(18)<ESN>=CALC.STK.QTY(SUM(TEMP.AVL),MAT INV.CNV.REC,'.5','')
ECD.NUM=18; ECD.ACTION=5; CALL SCRN.EDIT
SCV.REC(19)<ESN>=CALC.STK.QTY(SUM(TEMP.QTY),MAT INV.CNV.REC,'.5','')
ECD.NUM=19; ECD.ACTION=5; CALL SCRN.EDIT
SCV.REC(28)<ESN>=INT(LAST.LINE/PAGE.SIZE+0.99)"R%2"
ECD.NUM=28; ECD.ACTION=5; CALL SCRN.EDIT
SCV.REC(29)<ESN>=INT(LINES/PAGE.SIZE+0.99)"R%2"
ECD.NUM=29; ECD.ACTION=5; CALL SCRN.EDIT
RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
PROD=BOL.PROD<1,IPTR>
WHSE=BOL.WHSE<1,IPTR>
ORDNO=BOL.ORDER<1,IPTR>
MATREAD INV.REC FROM INVENTORY, CONO:BOL.PROD<1,IPTR> ELSE
  MAT INV.REC=""
  INV.FULL.DESC="???????????????"
END
LCNT=DCOUNT(BOL.LOC<1,IPTR>,SM)
SCV.REC(1)<ESN>=BOL.PROD<1,IPTR>
SCV.REC(2)<ESN>=INV.FULL.DESC
SCV.REC(3)<ESN>=BOL.WHSE<1,IPTR>
SCV.REC(4)<ESN>=CALC.STK.QTY(TOTAVL<1,IPTR>,MAT INV.CNV.REC,'.5','')
SCV.REC(12)<ESN>=''
SCV.REC(13)<ESN>=''
SCV.REC(14)<ESN>=''
SCV.REC(15)<ESN>=''
SCV.REC(18)<ESN>=''
SCV.REC(19)<ESN>=''
*T24732 ^
80050 *
ECD.ACTION=3; CALL SCRN.EDIT
RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
TEMP.LOC=""
TEMP.AVL=""
TEMP.QTY=""
TEMP.LOC.QTY=""     ;*T24732
LCNT = DCOUNT(BOL.LOC<1,IPTR>,SM)
FOR LPTR = 1 TO LCNT             
  WLOC=BOL.LOC<1,IPTR,LPTR>
  RECP=BOL.RECP.NO<1,IPTR,LPTR>
  LOCATE WLOC IN TEMP.LOC<1>,1 BY "AL" SETTING LP ELSE
    TEMP.LOC=INSERT(TEMP.LOC,1,LP,0,WLOC)
    TEMP.AVL=INSERT(TEMP.AVL,1,LP,0,"")
    TEMP.QTY=INSERT(TEMP.QTY,1,LP,0,"")
  END
*
  TEMP.AVL<1,LP>+=RSVBLE.QTY<1,IPTR,LPTR>
  TEMP.QTY<1,LP>+=BOL.QTY<1,IPTR,LPTR>
  LOCAVL<1,IPTR,LPTR>=RSVBLE.QTY<1,IPTR,LPTR>+0
  TEMP.LOC.QTY<1,LP>=CALC.STK.QTY(SUM(TEMP.QTY<1,LP>),MAT INV.CNV.REC, '.5','')
*
NEXT LPTR
SCV.REC(12)<ESN>=TEMP.LOC
SCV.REC(13)<ESN>=TEMP.AVL
SCV.REC(14)<ESN>=TEMP.LOC.QTY  ;*T24732
SCV.REC(18)<ESN>=CALC.STK.QTY(SUM(TEMP.AVL),MAT INV.CNV.REC,'.5','')
SCV.REC(19)<ESN>=CALC.STK.QTY(SUM(TEMP.QTY),MAT INV.CNV.REC,'.5','')
RETURN
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*---- END OF PROGRAM
*
99999 *
ECD.ACTION=99; CALL SCRN.EDIT
RETURN
END
