  SUBROUTINE ORDER.LINE.DELV(CONO,ORDNO,SHPNO,PDNO,WHNO)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - ORDER.LINE.DELV
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
*T25740 epitka 01/31/2002 * REV12
********************************************************************
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>OPS.CPYLIB>ORDER.RELEASE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
  LINE.SPACE = 1
  VPAGE.SIZE = 3
  BEGIN.VPAGE = 8
  PAGE.SIZE = 6
  BEGIN.PAGE = 14
  SHP.ID = CONO:ORD.CUST:"!"
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
*
  PCNT = DCOUNT(ODQ.PROD,VM)
  IF PCNT < 1 THEN
    ERRMSG = "Cannot locate any products to distribute for this order"
    GOSUB 91000; GOTO 99999
  END
*
  ESN = ECD.SCRN.NO
  ECD.NUM = 1; SCV.REC(ECD.NUM)<ESN> = ORDNO
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 2; SCV.REC(ECD.NUM)<ESN> = ORD.CUST
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
  ECD.ACTION = 5; CALL SCRN.EDIT
*
  REL.NOS = ""; REL.DATES = ""; REL.SHPNOS = ""
  REL.QTYS = ""; TOT.REL.QTY = ""
  REFNO = ""; PDNOS = ""; WHNOS = ""; P = 1
  FOR P = 1 TO PCNT
    LOCATE ODQ.PROD<1,P> IN PDNOS<1>,1 SETTING PLOC ELSE
      PDNOS<1,PLOC> = ODQ.PROD<1,P>
    END
    LOCATE ODQ.WHSE<1,P> IN WHNOS<PLOC>,1 SETTING WLOC ELSE
      WHNOS<PLOC,WLOC> = ODQ.WHSE<1,P>
    END
    REFNO<PLOC,WLOC> = P
    VLINES = DCOUNT(ODQ.REL.DATE<1,P>,SVM)
    FOR V = 1 TO VLINES
      LOCATE ODQ.REL.DATE<1,P,V> IN REL.DATES<P>,1 SETTING VLOC ELSE
        REL.DATES<P,VLOC> = ODQ.REL.DATE<1,P,V>
      END
      TOT.REL.QTY<P,VLOC> = TOT.REL.QTY<P,VLOC> + ODQ.REL.QTY<1,P,V>
      LOCATE ODQ.REL.SHPNO<1,P,V> IN REL.SHPNOS<P,VLOC>,1 SETTING SLOC ELSE
        REL.SHPNOS<P,VLOC,SLOC> = ODQ.REL.SHPNO<1,P,V>
      END
      REL.QTYS<P,VLOC,SLOC> = REL.QTYS<P,VLOC,SLOC> + ODQ.REL.QTY<1,P,V>
    NEXT V
  NEXT P
*
  IF PDNO # "" THEN
    ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
    ECD.ACTION = 5; CALL SCRN.EDIT
    ECD.RET.VALUE = PDNO; GOTO 110
  END ELSE
    WHNO = ""
  END
*
*---- Product Number
100*
  ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
110*
  VLN = 1; VLINES = 0; OLD.START.VLINE = 0
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOSUB 8000; GOTO 99990
    CASE ECD.RET.VALUE = "S"
      BEGIN CASE
        CASE PCNT < 2 AND PCNT = PPTR
          ERRMSG = "There is only one product for this order"
          GOSUB 91000; SCV.REC(ECD.NUM)<ESN> = ""; GOTO 100
        CASE PCNT < 2
          PPTR = 1
        CASE PPTR = PCNT
          PPTR = 1
        CASE 1
          PPTR = PPTR + 1
      END CASE
      PDNO = ODQ.PROD<1,PPTR>; WHNO = ODQ.PROD<1,PPTR>
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE ECD.RET.VALUE = ""
      IF PCNT = 1 THEN
        PDNO = ODQ.PROD<1,1>; WHNO = ODQ.WHSE<1,1>
      END ELSE
        GXR.NAME = "INV.FNGD.ORDER.DIST"
        GXR.FILE = INVENTORY
        GXR.SRCH.ID = PDNOS
        CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
        ECD.ACTION = 2; CALL SCRN.EDIT
        GOSUB 9000
        IF GXR.ID = "" THEN GOTO 100
        PDNO = GXR.ID; WHNO = ""
      END
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ESN> = PDNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      PDNO = ECD.RET.VALUE
  END CASE
  LOCATE PDNO IN PDNOS<1>,1 SETTING PLOC ELSE
    ERRMSG = "Cannot locate product (":PDNO:") for this order."
    GOSUB 91000; GOTO 100
  END
  MATREAD INV.REC FROM INVENTORY, CONO:PDNO ELSE
    ERRMSG = "Cannot locate Product # ":PDNO
    GOSUB 91000; GOTO 100
  END
*COPY>ICSBP>INV.UM.CNV
  ECD.NUM = 8; SCV.REC(ECD.NUM)<ESN> = INV.FULL.DESC
  ECD.ACTION = 5; CALL SCRN.EDIT
*
  WCNT = DCOUNT(WHNOS<PLOC>,VM)
  BEGIN CASE
    CASE WCNT = 1
      ECD.RET.VALUE = WHNOS<PLOC,1>
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
    CASE WHNO # ""
      ECD.RET.VALUE = WHNO
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 210
  END CASE
*
*---- Warehouse Number
200*
  ECD.NUM = 5; ECD.ACTION = 4; CALL SCRN.EDIT
210*
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      WHNO = ""; GOTO 100
    CASE ECD.RET.VALUE = ""
      GXR.NAME = "INV.WHSE.CODE"
      GXR.SRCH.ID = WHNOS<PLOC>
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 9000
      IF GXR.ID = "" THEN GOTO 200
      WHNO = GXR.ID
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ESN> = WHNO
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      WHNO = ECD.RET.VALUE
  END CASE
  LOCATE WHNO IN WHNOS<PLOC>,1 SETTING WLOC ELSE
    ERRMSG = "Warehouse (":WHNO:") is not valid for product (":PDNO:") on this order"
    GOSUB 91000; GOTO 200
  END
  MATREAD IWH.REC FROM INV.WHSE, CONO:PDNO:"!":WHNO ELSE
    ERRMSG = "Cannot locate warehouse (":WHNO:") for product # ":PDNO
    GOSUB 91000; GOTO 200
  END
  PPTR = REFNO<PLOC,WLOC>
  ECD.NUM = 6; SCV.REC(ECD.NUM)<ESN> = PPTR "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 7; SCV.REC(ECD.NUM)<ESN> = PCNT "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 9
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(ODQ.O.QTY<1,PPTR> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 10
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(TOT.REL.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  VLINES = DCOUNT(REL.DATES<PPTR>,VM)
  IF VLINES < 1 THEN
    ECD.NUM = 18; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    ECD.NUM = 19; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    OPTION = "A"
    LOOP
      VLN = VLINES + 1
      OLD.VLINES = VLINES
      GOSUB 5000
    WHILE VLINES > OLD.VLINES DO REPEAT
    ECD.NUM = 18
    SCV.REC(ECD.NUM)<ESN> = INT(VLINES/VPAGE.SIZE+.9) "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
  END
*
*---- Prompt line
500*
  ECD.NUM = 19
  SCV.REC(ECD.NUM)<ESN> = INT(VLINES/VPAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  MORE = 1; GOSUB 5900
  LOOP
    ECD.NUM = 41; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
*           FOR P = 1 TO ORD.DET.REC.SIZE
*              ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
*           NEXT P
*           STATUS = "L"
*           CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
        MORE = 0
      CASE OPTION = "A"
        LOOP
          VLN = VLINES + 1
          OLD.VLINES = VLINES
          GOSUB 5000
        WHILE VLINES > OLD.VLINES DO REPEAT
        VLN = VLINES; GOSUB 5900
      CASE OPTION = "R"
        GOSUB 5800
        IF LN.NO THEN
          VLN = LN.NO
          SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(VLN-1,VPAGE.SIZE)
          GOSUB 700
        END
      CASE OPTION = "C"
        GOSUB 5800
        IF LN.NO THEN
          VLN = LN.NO
          SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(VLN-1,VPAGE.SIZE)
          GOSUB 5010
        END
      CASE OPTION = "D"
        GOSUB 5800
        IF LN.NO THEN
          VLN = LN.NO; GOSUB 5700
          VLINES = DCOUNT(OSD.PROD,VM)
          IF VLN > VLINES THEN VLN = VLN - 1
          OLD.START.VLINE = 0; GOSUB 5900
        END
      CASE OPTION = "S" OR OPTION = "SF"
        VLN = 1 + INT((VLN-1)/VPAGE.SIZE) * VPAGE.SIZE + VPAGE.SIZE
        IF VLN > VLINES THEN VLN = 1
        GOSUB 5900
      CASE OPTION = "SR"
        VLN = 1 + INT((VLN-1)/VPAGE.SIZE) * VPAGE.SIZE - VPAGE.SIZE
        IF VLN < 1 THEN VLN = 1
        GOSUB 5900
      CASE OPTION = "ST"
        VLN = 1
        GOSUB 5900
      CASE OPTION = "SB"
        VLN = VLINES
        GOSUB 5900
      CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
        LN.NO = OPTION[2,99] + 0
        IF LN.NO < 1 OR LN.NO > VLINES THEN
          ERRMSG = "** Invalid selection **"
          GOSUB 91000
        END ELSE
          VLN = LN.NO
          GOSUB 5900
        END
      CASE NOT(NUM(OPTION))
        ERRMSG = "Invalid entry, please re-enter"
        GOSUB 91000
      CASE OPTION = 1
*           FOR P = 1 TO ORD.DET.REC.SIZE
*              ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
*           NEXT P
*           STATUS = "L"
*           CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
        MORE = 0 - 1
      CASE 1
        ERRMSG = "Out of range, please re-enter"
        GOSUB 91000
    END CASE
  WHILE MORE > 0 DO REPEAT
  IF MORE < 0 THEN
    GOTO 100
  END
  GOSUB 8000; GOTO 99990
*
*---- Ship to prompt
700*
  P_X  = 2 ; P_Y = SVLN ; P_VALUE = "*" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  OLD.START.LINE = 0; LINES = DCOUNT(REL.SHPNOS<PPTR,VLN>,SVM)
  ECD.NUM = 20
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(REL.QTYS<PPTR,VLN>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  IF LINES < 1 THEN
    ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
    OPT = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 7000
    WHILE LINES > OLD.LINES DO REPEAT
    ECD.NUM = 31
    SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
    ECD.ACTION = 5; CALL SCRN.EDIT
  END ELSE
    LN = 1; GOSUB 7900
  END
  ECD.NUM = 32
  SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  ANCORE = 1
  LOOP
    ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPT = ECD.RET.VALUE
    BEGIN CASE
      CASE OPT = "END" OR OPT = "E"
        ANCORE = 0
      CASE OPT = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 7000
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES; GOSUB 7900
      CASE OPT = "C"
        GOSUB 7800
        IF LN.NO THEN
          LN = LN.NO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 7010
        END
      CASE OPT = "D"
        GOSUB 7800
        IF LN.NO THEN
          LN = LN.NO; GOSUB 7700
          LINES = DCOUNT(OSD.PROD,VM)
          IF LN > LINES THEN LN = LN - 1
          OLD.START.LINE = 0; GOSUB 7900
        END
      CASE OPT = "S" OR OPT = "SF"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 7900
      CASE OPT = "SR"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 7900
      CASE OPT = "ST"
        LN = 1
        GOSUB 7900
      CASE OPT = "SB"
        LN = LINES
        GOSUB 7900
      CASE OPT[1,1] = "S" AND NUM(OPT[2,99])
        LN.NO = OPT[2,99] + 0
        IF LN.NO < 1 OR LN.NO > LINES THEN
          ERRMSG = "** Invalid selection **"
          GOSUB 91000
        END ELSE
          LN = LN.NO
          GOSUB 7900
        END
      CASE 1
        ERRMSG = "Invalid entry, please re-enter"
        GOSUB 91000
    END CASE
  WHILE ANCORE DO REPEAT
  P_X  = 2 ; P_Y = SVLN ; P_VALUE = " " ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.ACTION = 5; CALL SCRN.EDIT
  LN = 1; LINES = 0; OLD.START.LINE = 0
  GOSUB 7900
  ECD.NUM = 31; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.ACTION = 5; CALL SCRN.EDIT
  RETURN
*
*---- Scrolling line prompt
5000*
  GOSUB 5900
  SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(VLN-1,VPAGE.SIZE)
  P_X  = 0 ; P_Y = SVLN ; P_VALUE = VLN "R#2" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Delivery dates
5010*
  X = 14; Y = SVLN; TYP = 6; MAXL = 8; O.R = "R"
  IF REL.DATES<PPTR,VLN> # "" THEN
    O.R = "O"
    DEFAULT = OCONV(REL.DATES<PPTR,VLN>,"D2/")
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END" AND OPTION = "A"
      P_X  = 0 ; P_Y = SVLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOSUB 5700; GOTO 5099
    CASE VALUE = "END"
      N = VLN; GOSUB 5910
      GOTO 5099
  END CASE
  REL.DATES<PPTR,VLN> = VALUE
*
*---- Deliver qty
5020*
  X = 23; Y = SVLN; TYP = ICR.TYPE; SCALER = ICR.SCAL; MAXL = 10
  MINV = 0; MAXV = 99999999
  IF TOT.REL.QTY<PPTR,VLN> # "" THEN
    O.R = "O"
    DEFAULT = OCONV(INT(TOT.REL.QTY<PPTR,VLN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV)
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 5010
  TOT.REL.QTY<PPTR,VLN> = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
  P_X  = 23 ; P_Y = SVLN ; P_VALUE = OCONV(INT(TOT.REL.QTY<PPTR,VLN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  VLINES = DCOUNT(REL.DATES<PPTR>,VM)
  ECD.NUM = 10
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(TOT.REL.QTY<PPTR>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  GOSUB 700
5099*
  RETURN

*
*---- Delete a line
5700*
  REL.DATES = DELETE(REL.DATES,PPTR,VLN,0)
  TOT.REL.QTY = DELETE(TOT.REL.QTY,PPTR,VLN,0)
  RETURN
*
*---- Line # to change or delete
5800*
  GOSUB 5900
  ECD.NUM = 43; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.MINV = OLD.START.VLINE; ECD.MAXV = LAST.VLINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
  RETURN
*
*---- Display scrolling lines
5900*
  START.VLINE = 1 + INT((VLN-1)/VPAGE.SIZE)*VPAGE.SIZE
  LAST.VLINE = START.VLINE + VPAGE.SIZE - 1
  IF LAST.VLINE > VLINES THEN LAST.VLINE = VLINES
  IF START.VLINE = OLD.START.VLINE THEN GOTO 5990
  OLD.START.VLINE = START.VLINE
  ECD.NUM = 18
  SCV.REC(ECD.NUM)<ESN> = INT(LAST.VLINE/VPAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  CNT = 1
  FOR N = START.VLINE TO LAST.VLINE
    SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(N-1,VPAGE.SIZE)
    GOSUB 5910
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO VPAGE.SIZE
    SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(M-1,VPAGE.SIZE)
    P_X  = 0 ; P_Y = SVLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
5990*
  RETURN
*
*---- Display a single line
5910*
5911*
  P_X  = 0 ; P_Y = SVLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
  P_X  := AM:14 ; P_Y := AM:SVLN ; P_VALUE := AM:OCONV(REL.DATES<PPTR,N>,"D2/") "L#8"
  P_X  := AM:23 ; P_Y := AM:SVLN ; P_VALUE := AM:OCONV(INT(TOT.REL.QTY<PPTR,N> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- Scrolling line prompt
7000*
  GOSUB 7900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Ship To
7010*
  X = 4; Y = SLN; TYP = 3; MAXL = 3; O.R = "O"
  IF REL.SHPNOS<PPTR,VLN,LN> # "" THEN
    DEFAULT = REL.SHPNOS<PPTR,VLN,LN>
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END" AND OPT = "A"
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOSUB 7700; GOTO 7099
    CASE VALUE = "END"
      N = LN; GOSUB 7910
      GOTO 7099
    CASE VALUE = ""
      BEGIN CASE
        CASE CUST.SHIP.TO < 1
          ERRMSG = "There is no ship to for this customer"
          GOSUB 91000; GOTO 7010
        CASE CUST.SHIP.TO = 1
          VALUE = CUST.SHIP.TO "R%3"
          P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#3" ; P_OPT = ""
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        CASE 1
          GXR.NAME = "SHIP.TO"
          GXR.FILE = SHIP.TO
          GXR.SRCH.ID = ORD.CUST:" : ":CUST.NAME
          GXR.IDLIST = ORD.CUST:"!001"
          FOR SNO = 2 TO CUST.SHIP.TO
            GXR.IDLIST<1,SNO> = ORD.CUST:"!":SNO "R%3"
          NEXT SNO
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          GXR.ID = FIELD(GXR.ID,"!",2)
          ECD.ACTION = 2; CALL SCRN.EDIT
          GOSUB 9000
          SVLN = BEGIN.VPAGE + LINE.SPACE * MOD(VLN-1,VPAGE.SIZE)
          P_X  = 2 ; P_Y = SVLN ; P_VALUE = "*" ; P_OPT = ""
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          IF GXR.ID = "" THEN
            GOTO 7010
          END ELSE
            VALUE = GXR.ID
            P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#3" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          END
      END CASE
  END CASE
  MATREAD SPT.REC FROM SHIP.TO, SHP.ID:VALUE ELSE
    ERRMSG = "Cannot locate ship to # ":VALUE
    GOSUB 91000; GOTO 7010
  END
  P_X  = 8 ; P_Y = SLN ; P_VALUE = SPT.NAME "L#30" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  REL.SHPNOS<PPTR,VLN,LN> = VALUE
*
*---- Order qty
7020*
  X = 39; Y = SLN; TYP = ICR.TYPE; SCALER = ICR.SCAL; MAXL = 10
  MINV = 0; MAXV = 99999999
  IF REL.QTYS<PPTR,VLN,LN> # "" THEN
    O.R = "O"
    DEFAULT = OCONV(INT(REL.QTYS<PPTR,VLN,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV)
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 7010
  REL.QTYS<PPTR,VLN,LN> = INT(VALUE / ICR.MT1 * ICR.DV1 * ICR.DV2 + .5)
  P_X  = 39 ; P_Y = SLN ; P_VALUE = OCONV(INT(REL.QTYS<PPTR,VLN,LN> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECD.NUM = 20
  SCV.REC(ECD.NUM)<ESN> = OCONV(INT(SUM(REL.QTYS<PPTR,VLN>) / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1)
  ECD.ACTION = 5; CALL SCRN.EDIT
  LINES = DCOUNT(REL.SHPNOS<PPTR,VLN>,SVM)
7099*
  RETURN

*
*---- Delete a line
7700*
  REL.SHPNOS = DELETE(REL.SHPNOS,PPTR,VLN,LN)
  REL.QTYS = DELETE(REL.QTYS,PPTR,VLN,LN)
  RETURN
*
*---- Line # to change or delete
7800*
  GOSUB 7900
  ECD.NUM = 43; SCV.REC(ECD.NUM)<ESN> = ""
  ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
  RETURN
*
*---- Display scrolling lines
7900*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 7990
  OLD.START.LINE = START.LINE
  ECD.NUM = 31
  SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5; CALL SCRN.EDIT
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    GOSUB 7910
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
7990*
  RETURN
*
*---- Display a single line
7910*
7911*
  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:REL.SHPNOS<PPTR,VLN,N> "L#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  MATREAD SPT.REC FROM SHIP.TO, SHP.ID:REL.SHPNOS<PPTR,VLN,N> ELSE
    SPT.NAME = STR("?",30)
  END
  P_X  = 8 ; P_Y = SLN ; P_VALUE = SPT.NAME "L#30" ; P_OPT = ""
  P_X  := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(REL.QTYS<PPTR,VLN,N> / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- Load back ODQ
8000*
  FOR P = 1 TO PCNT
    ODQ.REL.DATE<1,P> = ""
    ODQ.REL.SHPNO<1,P> = ""
    ODQ.REL.QTY<1,P> = ""
    VLINES = DCOUNT(REL.DATES<P>,VM)
    FOR V = VLINES TO 1 STEP -1
      LINES = DCOUNT(REL.SHPNOS<P,V>,SVM)
      FOR S = LINES TO 1 STEP -1
        INS REL.DATES<P,V> BEFORE ODQ.REL.DATE<1,P,1>
        INS REL.SHPNOS<P,V,S> BEFORE ODQ.REL.SHPNO<1,P,1>
        INS REL.QTYS<P,V,S> BEFORE ODQ.REL.QTY<1,P,1>
      NEXT S
    NEXT V
  NEXT P
  RETURN
*
*---- Display data
9000*
  ECD.ACTION = 3; CALL SCRN.EDIT
  OLD.START.VLINE = 0; GOSUB 5900
  OLD.START.LINE = 0; GOSUB 7900
  RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99990*
  ECD.ACTION=99;CALL SCRN.EDIT
99999 *
  RETURN
END
