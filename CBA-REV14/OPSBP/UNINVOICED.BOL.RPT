*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [00.0]
* COPYRIGHT   - 1993 Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPS
* PROGRAM     - UNINVOICED.BOL.RPT
* AUTHOR      - S.L.Fritz
* DATE        - 04/30/93
* DESCRIPTION - Print the report for the bill-of-lading file with a
*               NOT INVOICED status.
*
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*T25740 epitka 09/24/2002 * REV12
**************************************************************************
*
*---- DATA Structure Libraries
*
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>OPS.CPYLIB>BOL
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- File open
*
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER';GOTO 999000
   OPEN '','BOL' TO BOL ELSE ERRMSG = 'BOL';GOTO 999000
*
*---- Initialize variables
*
   TRUE = 1
   OTHERS = 1
   VOID = ''
   NULL = ''
   FALSE = 0
   PAGE.NO = 0
   TOP.OF.NEW.PAGE = CHAR(12)
   PAGE.NO = 0
   LINES.THIS.PAGE = 0
   PAGE.HEADING.SIZE = 5
   PAGE.SIZE = 55
*
   EQU CONO         TO BUFFER<1>
   EQU COMPANY.NAME TO BUFFER<2>
   EQU BOL.NUMBER   TO BUFFER<3>
   EQU CUST.NUMBER  TO BUFFER<4>
*
   SHD1 = 'BOL-NO  '
   SHD1 = SHD1:'SHIP-TO '
   SHD1 = SHD1:'FGHT-BILL       '
   SHD1 = SHD1:'FOB        '
   SHD1 = SHD1:'CUST-NO '
   SHD1 = SHD1:'NAME                           '
*   SHD1 = SHD1:'PALLET-# '
   SHD1 = SHD1:'ORDER#  '
   SHD1 = SHD1:'RELEASE    '
   SHD1 = SHD1:'PICK-TICK  '
   SHD1 = SHD1:'SHIP-WT'
   SHD2 = STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',15):SPACE(1)
   SHD2 = SHD2:STR('-',10):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',30):SPACE(1)
*   SHD2 = SHD2:STR('-',8):SPACE(1)
   SHD2 = SHD2:STR('-',7):SPACE(1)
   SHD2 = SHD2:STR('-',10):SPACE(1)
   SHD2 = SHD2:STR('-',10):SPACE(1)
   SHD2 = SHD2:STR('-',7)
*
   PRINTER ON
*
   PROCREAD BUFFER ELSE
      ERRMSG = 'Must run this program from a REPORT.SCRN PROC.'
      GOTO 999000
   END
*
*T26493 v
*  RPT.NAME = 'UNINVOICED BILL-OF-LADING REPORT'
*  RPT.NUM = 'XXXX'
   RPT.NAME = ""
   RPT.NUM = BUFFER<2>
*T26493 ^
   RPT.DATE = DATE()
   HD1 = ''
   HD2 = ''
   CALL GET.PROG.HEAD(CONO,VOID,RPT.NAME,RPT.NUM,RPT.DATE,HD1,HD2)
*
   GOSUB 20000
*
*---- MAIN Function ------------------------------------------------------
*
*          This function prepares the report headings and gets ready to
*          read thru the list of qualified records from the BOL file.
*
*          This function reads the list passed to it from the PROC.
*
*          The KEY from the list is used to read the order file.  The
*          support files are read, and data is prepared for printing.
*
10000 *-------------------------------------------------------------------
*
   READNEXT BOL.KEY ELSE
      GOTO 999999;* Exit the program
   END
*
   BOL.NUMBER = BOL.KEY[4,8]
*
   MATREAD BOL.REC FROM BOL, BOL.KEY ELSE
      MAT BOL.REC = ''
      ERRMSG = 'Can not read the ':BOL.KEY:' record from the BOL file.'
      GOTO 10000;* Record disappeared, get next record key from list.
   END
*
   MATREAD CUST.REC FROM CUSTOMER, CONO:BOL.CUST ELSE
      MAT CUST.REC = ''
      CUST.NAME = "Customer record missing"
   END
*
   PNT.BOL.NUMBER = BOL.NUMBER
   PNT.BOL.SHIP.TO = BOL.SHIP.TO
   PNT.BOL.FREIGHT = BOL.FREIGHT
   PNT.BOL.FOB = BOL.FOB
   PNT.BOL.CUST = BOL.CUST
   PNT.BOL.CUST.NAME = CUST.NAME
*
   PAL.CNTR = DCOUNT(BOL.ORDER,VM)
   FOR PAL.LOOP = 1 TO PAL.CNTR
   *
      IF PAL.LOOP > 1 THEN
         PNT.BOL.NUMBER = ''
         PNT.BOL.SHIP.TO = ''
         PNT.BOL.FREIGHT = ''
         PNT.BOL.FOB = ''
         PNT.BOL.CUST = ''
         PNT.BOL.CUST.NAME = ''
      END
   *
*      PNT.BOL.PALLET = BOL.PALLET<1,PAL.LOOP>
   *
*  ORD.CNTR = DCOUNT(BOL.ORDER<1,PAL.LOOP>,SVM)
*  FOR ORD.LOOP = 1 TO ORD.CNTR
      ORD.LOOP = 1
      *
*      IF ORD.LOOP > 1 THEN
*         PNT.BOL.PALLET = ''
*      END
      *
      LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      IF LINES.THIS.PAGE > PAGE.SIZE THEN
         GOSUB 20000
         LINES.THIS.PAGE = LINES.THIS.PAGE + 1
      END
*
      BOL.LN = PNT.BOL.NUMBER'L#7':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.SHIP.TO'L#7':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.FREIGHT'L#15':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.FOB'L#10':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.CUST'L#7':SPACE(1)
      BOL.LN = BOL.LN:PNT.BOL.CUST.NAME'L#30':SPACE(1)
*      BOL.LN = BOL.LN:PNT.BOL.PALLET'L#8':SPACE(1)
      BOL.LN = BOL.LN:BOL.ORDER<1,PAL.LOOP,ORD.LOOP>'L#7':SPACE(1)
      BOL.LN = BOL.LN:BOL.RELEASE<1,PAL.LOOP,ORD.LOOP>'L#10':SPACE(1)
      BOL.LN = BOL.LN:BOL.PKTKT<1,PAL.LOOP,ORD.LOOP>'L#10':SPACE(1)
      BOL.LN = BOL.LN:OCONV(BOL.SHP.WT<1,PAL.LOOP,ORD.LOOP>,'MD0,')'R#7'
      *
      PRINT BOL.LN
   *
*  NEXT ORD.LOOP
   *
   NEXT PAL.LOOP
*
* Go up and get the next record
*
   GOTO 10000
*
*
*---- HEADING Function ---------------------------------------------------
*
*             This function assembles and prints the report heading
*             information.  A variable tracks the page number.
*
20000 *-------------------------------------------------------------------
*
   PRINT TOP.OF.NEW.PAGE
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT
   PRINT SHD1
   PRINT SHD2
   LINES.THIS.PAGE = PAGE.HEADING.SIZE
*
   RETURN
*
*
*---- ERROR Function -----------------------------------------------------
*
*           This function manages the display of any program
*           processing errors.
*
999000 *------------------------------------------------------------------
*
   CRT ERRMSG
   INPUT ANS
*
*---- EXIT Function ------------------------------------------------------
*
*          This function manages the wrap-up and exit from the program.
*
999999 *------------------------------------------------------------------
*
   PRINTER OFF
*
END
