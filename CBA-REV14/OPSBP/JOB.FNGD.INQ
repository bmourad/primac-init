 SUBROUTINE JOB.FNGD.SUB(CONO,ORDNO,JOBNO,SEL)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - JOB.FNGD.SUB
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 10/14/90
* DESCRIPTION   -
*T25172 gat 05/17/2000 * FIX DISPLAY PROBLEM
*T26527 lross 04/15/2002 * For completed jobs BAL DUE should be zero.
********************************************************************
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>INV.CNV
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
 MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- Display screen
*
 LINE.SPACE = 2
 PAGE.SIZE = 6
 BEGIN.PAGE = 7
*
 ESN = ECD.SCRN.NO
 ECD.ACTION = 3; CALL SCRN.EDIT
 LINES = DCOUNT(JFS.PROD,VM); LNFLG = 0
 GOSUB 7955; OLD.START.LINE = 0
 IF LINES THEN
   LN = 1; GOSUB 7900
 END ELSE
   IF SEL = "M" THEN
     IF ORDNO # "" THEN
* PROMPT TO FILL THE PRODUCTS FROM THE ORDER
     END
     OPTION = "A"
     LOOP
       LN = LINES + 1
       OLD.LINES = LINES
       GOSUB 7000
     WHILE LINES > OLD.LINES DO
       GOSUB 7950
     REPEAT
     LN = LINES; GOSUB 7900; GOSUB 7955
   END
 END
*
*---- Prompt line
*
 MORE = 1
 LOOP
   IF SEL = "M" THEN
     ECD.NUM = 31
   END ELSE
     ECD.NUM = 33
   END
   SCV.REC(ECD.NUM)<ESN> = ""
   ECD.ACTION = 4; CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
     CASE SEL # "M" AND OPTION = ""
       MORE = 0
     CASE OPTION = "END" OR OPTION = "E"
       JOB.QTY<1,1> = SUM(JFS.M.QTY)
       JOB.QTY<1,2> = SUM(JFS.F.QTY)
       JOB.QTY<1,3> = SUM(JFS.S.QTY)
       MORE = 0
     CASE OPTION = "S" OR OPTION = "SF"
       LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
       IF LN > LINES THEN LN = 1
       GOSUB 7900
     CASE OPTION = "SR"
       LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
       IF LN < 1 THEN LN = 1
       GOSUB 7900
     CASE OPTION = "ST"
       LN = 1
       GOSUB 7900
     CASE OPTION = "SB"
       LN = LINES
       GOSUB 7900
     CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
       LN.NO = OPTION[2,99] + 0
       IF LN.NO < 1 OR LN.NO > LINES THEN
         ERRMSG = "** Invalid selection **"
         GOSUB 91000
       END ELSE
         LN = LN.NO
         GOSUB 7900
       END
     CASE OPTION = "A"
       LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 7000
       WHILE LINES > OLD.LINES DO
         GOSUB 7950
       REPEAT
       LN = LINES; GOSUB 7900; GOSUB 7955
     CASE OPTION = "C"
       GOSUB 7800
       IF LN.NO THEN
         LN = LN.NO
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
         IF LNFLG THEN
           PDNO = JFS.PROD<1,LN>; WHNO = JFS.WHSE<1,LN>
           IWH.ID = CONO:PDNO
           MATREAD INV.REC FROM INVENTORY, IWH.ID THEN
             IWH.ID = IWH.ID:"!":WHNO
             MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
               MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
                 MAT FGS.REC = ""
               END
               TOT.ALOC = SUM(FGS.B.QTY) + JFS.A.QTY<1,LN>
               GOSUB 8000
               GOSUB 7030
             END ELSE
               ERRMSG = "Cannot locate warehouse (":JFS.WHSE<1,LN>:") for item # ":JFS.PROD<1,LN>
               GOSUB 91000
             END
           END ELSE
             ERRMSG = "Cannot locate finished goods # ":JFS.PROD<1,LN>
             GOSUB 91000
           END
         END ELSE
           GOSUB 7010
         END
       END
     CASE OPTION = "D"
       GOSUB 7800
       BEGIN CASE
         CASE LN.NO < 1
         CASE LNFLG > 2
           ERRMSG = "Cannot Delete !! Product has been Allocated"
           GOSUB 91000
         CASE LNFLG
           ERRMSG = "Cannot Delete !! Product has been Finished/Shipped"
           GOSUB 91000
         CASE 1
           LN = LN.NO; GOSUB 7700
           LINES = DCOUNT(JFS.PROD,VM)
           IF LN > LINES THEN LN = LN - 1
           OLD.START.LINE = 0; GOSUB 7900; GOSUB 7955
       END CASE
     CASE 1
       ERRMSG = "Invalid entry, please re-enter"
       GOSUB 91000
   END CASE
 WHILE MORE DO REPEAT
 GOTO 99999
*
*---- Scrolling line prompt
7000*
 GOSUB 7900
 SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
 P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = "CL"
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Item
7010*
 X = 3; Y = SLN; TYP = 1; MAXL = 15; O.R = "O"
 WHNO = ""
 IF JFS.PROD<1,LN> # "" THEN
   DEFAULT = JFS.PROD<1,LN>
 END
 CALL EDIT.SUB
 BEGIN CASE
   CASE VALUE = "END" AND OPTION = "A"
     P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
     GOSUB 7700; GOTO 7099
   CASE VALUE = "END"
     N = LN; GOSUB 7910
     GOTO 7099
   CASE VALUE = ""
     ECD.SCRN.NO = ESN + 1
     PDNO = ""; WHNO = ""
     CALL FNGD.XREF.SUB(CONO,JOB.CUST,PDNO,WHNO)
     ECD.SCRN.NO = ESN; ECD.ACTION = 3; CALL SCRN.EDIT
     OLD.START.LINE = 0; GOSUB 7900
     IF PDNO = "" THEN GOTO 7000
     SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
     P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = "CL"
     P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:PDNO "L#15"
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
     VALUE = PDNO
 END CASE
 MATREAD INV.REC FROM INVENTORY, CONO:VALUE ELSE
   ERRMSG = "Cannot locate finished goods # ":VALUE
   GOSUB 91000; GOTO 7010
 END
 GOSUB 8000
 WCNT = DCOUNT(INV.WHSE.CODE,VM)
 IF WCNT < 1 THEN
   ERRMSG = "Cannot locate any warehouses for finished goods # ":VALUE
   GOSUB 91000; GOTO 7010
 END
 P_X  = 3 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 PDNO = VALUE; JFS.PROD<1,LN> = VALUE
*
*---- Warehouse
7020*
 BEGIN CASE
   CASE WCNT = 1
     VALUE = INV.WHSE.CODE<1,1>
     P_X  = 19 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
     GOTO 7021
   CASE WHNO # ""
     VALUE = WHNO
     P_X  = 19 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
     GOTO 7021
 END CASE
 X = 19; Y = SLN; TYP = 1; MAXL = 4
 BEGIN CASE
   CASE JFS.WHSE<1,LN> # ""
     O.R = "O"; DEFAULT = JFS.WHSE<1,LN>
   CASE LN = 1
   CASE 1
     O.R = "O"; DEFAULT = JFS.WHSE<1,LN-1>
 END CASE
 CALL EDIT.SUB
 IF VALUE = "END" THEN GOTO 7010
7021*
 IWH.ID = CONO:PDNO:"!":VALUE
 MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
   ERRMSG = "Cannot locate warehouse (":VALUE:") for item # ":JFS.PROD<1,LN>
   GOSUB 91000
   IF WCNT = 1 OR WHNO # "" THEN GOTO 7010 ELSE GOTO 7020
 END
 LOCATE JFS.PROD<1,LN> IN JFS.PROD<1>,1 SETTING L ELSE L = LN
 IF LN # L AND JFS.WHSE<1,LN> = VALUE THEN
   ERRMSG = "Item and warehouse already exist on line # ":L
   GOSUB 91000; GOTO 7010
 END
 WHNO = VALUE; JFS.WHSE<1,LN> = VALUE
 MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
   MAT FGS.REC = ""
 END
 TOT.ALOC = SUM(FGS.B.QTY) + JFS.A.QTY<1,LN>
*
*---- Order Date
7030*
 X = 24; Y = SLN; TYP = 6; MAXL = 8; O.R = "O"
 IF JFS.DATE<1,LN> # "" THEN
   DEFAULT = OCONV(JFS.DATE<1,LN>,"D2/")
 END ELSE
   DEFAULT = OCONV(JOB.TRACK.DATE<1,4>,"D2/") 
 END
 CALL EDIT.SUB
 IF VALUE = "END" THEN
   IF LNFLG THEN
     N = LN; GOSUB 7910
     GOTO 7099
   END ELSE
     GOTO 7010
   END
 END
 JFS.DATE<1,LN> = VALUE
 P_X  = 24 ; P_Y = SLN ; P_VALUE = OCONV(VALUE,"D2/") "L#8" ; P_OPT = ""
*T25172 P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,2> "L#3"
 P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,2> "L#3"
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- PRINT UNIT PRICE
7035 *
 MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
   MAT CATG.REC = ""
 END
 BEGIN CASE
   CASE CATG.FNGD.TYPE = "ES"
     DEFAULT = IWH.EST.SALE
   CASE CATG.FNGD.TYPE = "SP"
     BEGIN CASE
       CASE NOT(NUM(CUST.PRICE.CODE))
         DEFAULT = IWH.SELL<1,1>
       CASE CUST.PRICE.CODE > 0 AND CUST.PRICE.CODE < 5
         DEFAULT = IWH.SELL<1,CUST.PRICE.CODE>
       CASE 1
         DEFAULT = IWH.SELL<1,1>
     END CASE
   CASE CATG.FNGD.TYPE = "SD"
     DEFAULT = IWH.STD.COST
   CASE CATG.FNGD.TYPE = "AV"
     DEFAULT = IWH.AVG.COST
   CASE CATG.FNGD.TYPE = "LP"
     DEFAULT = IWH.COST.FI<1,DCOUNT(IWH.COST.FI,VM)>
   CASE 1
     DEFAULT = 0
 END CASE
 DEFAULT = INT(DEFAULT / 10 + .5)
 BEGIN CASE
   CASE OPCO.PRC.MNT = "J" OR OPCO.PRC.MNT = "B"
     X = 36; Y = SLN; MAXL = 10; TYP = 4; SCALER = 3; O.R = "O"
*T25172     X = 37; Y = SLN; MAXL = 10; TYP = 4; SCALER = 3; O.R = "O"
     IF JFS.U.PRICE<1,LN> # "" THEN
       DEFAULT = JFS.U.PRICE<1,LN>
     END
     DEFAULT = OCONV(DEFAULT,"MD3")
     CALL EDIT.SUB
     IF VALUE = "END" THEN
       IF LNFLG THEN
         GOTO 7030
       END ELSE
         GOTO 7010
       END
     END ELSE
       JFS.U.PRICE<1,LN> = VALUE
     END
   CASE JFS.U.PRICE<1,LN> = ""
     JFS.U.PRICE<1,LN> = DEFAULT
     P_X  = 36 ; P_Y = SLN ; P_VALUE = OCONV(JFS.U.PRICE<1,LN>,"MD4,") "R#11" ; P_OPT = ""
*T25172     P_X  = 37 ; P_Y = SLN ; P_VALUE = OCONV(JFS.U.PRICE<1,LN>,"MD3,") "R#10" ; P_OPT = ""
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   CASE 1
     P_X  = 36 ; P_Y = SLN ; P_VALUE = OCONV(JFS.U.PRICE<1,LN>,"MD4,") "R#11" ; P_OPT = ""
*T25172     P_X  = 37 ; P_Y = SLN ; P_VALUE = OCONV(JFS.U.PRICE<1,LN>,"MD3,") "R#10" ; P_OPT = ""
     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 END CASE
*
*---- Manufacture Qty
7040*
 X = 48; Y = SLN; TYP = ICR.TYPE; SCALER = ICR.SCAL; MAXL = 10
 MINV = JFS.A.QTY<1,LN> + JFS.F.QTY<1,LN> + JFS.S.QTY<1,LN>
 IF MINV > JFS.M.QTY<1,LN> THEN
   MINV = JFS.M.QTY<1,LN>
 END
 MINV = INT(((MINV / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
 MAXV = 99999999
 IF JFS.M.QTY<1,LN> # "" THEN
   O.R = "O"
   DEFAULT = OCONV(INT(((JFS.M.QTY<1,LN>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
 END
 CALL EDIT.SUB
 IF VALUE = "END" THEN
   IF LNFLG THEN
     GOTO 7030
   END ELSE
     GOTO 7010
   END
 END
 JFS.M.QTY<1,LN> = INT(((VALUE/ICR.MT1)*ICR.DV1)*ICR.DV2+.5)
 P_X  = 48 ; P_Y = SLN ; P_VALUE = OCONV(INT(((JFS.M.QTY<1,LN>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 AVL.ALOC = JFS.M.QTY<1,LN> - JFS.F.QTY<1,LN> - JFS.S.QTY<1,LN>
 IF AVL.ALOC < 0 THEN AVL.ALOC = 0
 IF TOT.ALOC < AVL.ALOC THEN AVL.ALOC = TOT.ALOC
*
*---- Allocate Qty
7050*
 IF AVL.ALOC < 1 THEN
   VALUE = 0; GOTO 7055
 END
 IF ORDNO THEN
   VALUE = AVL.ALOC
   LOCATE ORDNO IN JFS.ORDER<1,LN>,1 SETTING FND ELSE
     JFS.ORDER<1,LN,FND> = ORDNO
   END
   JFS.ORD.QTY<1,LN,FND> = JFS.ORD.QTY<1,LN,FND> + AVL.ALOC
   GOTO 7055
 END
7051*
 X = 59; Y = SLN; TYP = ICR.TYPE; SCALER = ICR.SCAL
 MAXL = 10; O.R = "O"; ORVALDAT = 1; VALDAT = "S"
 MINV = 0; MAXV = AVL.ALOC
 HMSG = "Enter Quantity or (S) to Select from Orders"
 IF JFS.A.QTY<1,LN> # "" THEN
   DEFAULT = JFS.A.QTY<1,LN>
 END ELSE
   DEFAULT = AVL.ALOC
 END
 DEFAULT = OCONV(INT(((DEFAULT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
 CALL EDIT.SUB
7055*
 BEGIN CASE
   CASE VALUE = "END"
     IF LNFLG THEN
       GOTO 7030
     END ELSE
       GOTO 7010
     END
   CASE VALUE = "S" AND FGS.ORDER = ""
     ERRMSG = "Cannot locate any orders with a Back order qty"
     GOSUB 91000; GOTO 7051
   CASE VALUE = "S"
     ECD.SCRN.NO = ESN + 2
     AQTY = ""; RCNT = DCOUNT(JFS.ORDER<1,LN>,SVM)
     FOR R = 1 TO RCNT
       LOCATE JFS.ORDER<1,LN,R> IN FGS.ORDER<1>,1 SETTING OPTR THEN
         AQTY<1,OPTR> = JFS.ORD.QTY<1,LN,R>
       END
       JFS.ORD.QTY<1,LN,R> = 0
     NEXT R
     ATYPE = "M"; ATOT = JFS.A.QTY<1,LN>
     CALL JOB.ORDER.SEL(CONO,JOBNO,PDNO,WHNO,ATYPE,AVL.ALOC,ATOT,AQTY,MAT INV.CNV.REC)
     RCNT = DCOUNT(AQTY,VM)
     FOR R = 1 TO RCNT
       IF AQTY<1,R> > 0 THEN
         LOCATE FGS.ORDER<1,R> IN JFS.ORDER<1,LN>,1 SETTING OPTR ELSE
           JFS.ORDER<1,LN,OPTR> = FGS.ORDER<1,R>
         END
         JFS.ORD.QTY<1,LN,OPTR> = AQTY<1,R>
       END
     NEXT R
     ECD.SCRN.NO = ESN; ECD.ACTION = 3; CALL SCRN.EDIT
     OLD.START.LINE = 0; GOSUB 7900
     SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
     N = LN; GOSUB 7910
   CASE 1
     JFS.A.QTY<1,LN> = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
     ATOT = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
     AQTY = ""; RCNT = DCOUNT(JFS.ORDER<1,LN>,SVM)
     FOR R = 1 TO RCNT
       LOCATE JFS.ORDER<1,LN,R> IN FGS.ORDER<1>,1 SETTING OPTR THEN
         AQTY<1,OPTR> = JFS.ORD.QTY<1,LN,R>
       END
       JFS.ORD.QTY<1,LN,R> = 0
     NEXT R
     ATYPE = "B"
     CALL JOB.ORDER.SEL(CONO,JOBNO,PDNO,WHNO,ATYPE,AVL.ALOC,ATOT,AQTY,MAT INV.CNV.REC)
     RCNT = DCOUNT(AQTY,VM)
     FOR R = 1 TO RCNT
       IF AQTY<1,R> > 0 THEN
         LOCATE FGS.ORDER<1,R> IN JFS.ORDER<1,LN>,1 SETTING OPTR ELSE
           JFS.ORDER<1,LN,OPTR> = FGS.ORDER<1,R>
         END
         JFS.ORD.QTY<1,LN,OPTR> = AQTY<1,R>
       END
     NEXT R
 END CASE
 JFS.A.QTY<1,LN> = ATOT
 P_X  = 59 ; P_Y = SLN ; P_VALUE = OCONV(INT(((ATOT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
 IF JFS.ORDER<1,LN,2> # "" THEN
   P_X  = 59 ; P_Y = SLN+1 ; P_VALUE = "MULTI" "L#8" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 END ELSE
   P_X  = 59 ; P_Y = SLN+1 ; P_VALUE = JFS.ORDER<1,LN> "L#8" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 END
 P_X  = 70 ; P_Y = SLN ; P_VALUE = OCONV(INT(((JFS.F.QTY<1,LN>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T26527 v
 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN
   BAL = 0
 END ELSE
   BAL = JFS.M.QTY<1,LN> - JFS.F.QTY<1,LN> - JFS.S.QTY<1,LN>
 END
*T26527 ^
 IF BAL < 0 THEN BAL = 0
 P_X  = 70 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT(((BAL/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
 LINES = DCOUNT(JFS.PROD,VM)
7099*
 LNFLG = 0
 RETURN
*
*---- Delete a line
7700*
 JFS.PROD = DELETE(JFS.PROD,1,LN,0)
 JFS.WHSE = DELETE(JFS.WHSE,1,LN,0)
 JFS.DATE = DELETE(JFS.DATE,1,LN,0)
 JFS.M.QTY = DELETE(JFS.M.QTY,1,LN,0)
 JFS.A.QTY = DELETE(JFS.A.QTY,1,LN,0)
 JFS.F.QTY = DELETE(JFS.F.QTY,1,LN,0)
 JFS.S.QTY = DELETE(JFS.S.QTY,1,LN,0)
 JFS.ORDER = DELETE(JFS.ORDER,1,LN,0)
 JFS.ORD.QTY = DELETE(JFS.ORD.QTY,1,LN,0)
 RETURN
*
*---- Line # to change or delete
7800*
 GOSUB 7900
 ECD.NUM = 32; SCV.REC(ECD.NUM)<ESN> = ""
 ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
 ECD.ACTION = 4; CALL SCRN.EDIT
 LN.NO = ECD.RET.VALUE
 BEGIN CASE
   CASE LN.NO = "" OR LN.NO = "END"
     LN.NO = 0
   CASE LN.NO < 1
   CASE JFS.S.QTY<1,LN.NO> > 0
     LNFLG = 1
   CASE JFS.F.QTY<1,LN.NO> > 0
     LNFLG = 2
   CASE JFS.A.QTY<1,LN.NO> > 0
     LNFLG = 3
 END CASE
 RETURN
*
*---- Display scrolling lines
7900*
 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
 LAST.LINE = START.LINE + PAGE.SIZE - 1
 IF LAST.LINE > LINES THEN LAST.LINE = LINES
 IF START.LINE = OLD.START.LINE THEN GOTO 7909
 OLD.START.LINE = START.LINE
 ECD.NUM = 21
 SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
 ECD.ACTION = 5; CALL SCRN.EDIT
 CNT = 1
 FOR N = START.LINE TO LAST.LINE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   GOSUB 7910
   CNT = CNT + 1
 NEXT N
 FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 NEXT M
7909*
 RETURN
*
*---- Display page numbers
7950*
 ECD.NUM = 21
 SCV.REC(ECD.NUM)<ESN> = INT(LN/PAGE.SIZE+.9) "R%2"
 ECD.ACTION = 5; CALL SCRN.EDIT
7955*
 ECD.NUM = 22
 SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
 ECD.ACTION = 5; CALL SCRN.EDIT
 RETURN
*
*---- Display a single line
7910*
 MATREAD INV.REC FROM INVENTORY, CONO:JFS.PROD<1,N> ELSE
   MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
 END
 GOSUB 8000
 P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R%2" ; P_OPT = "CL"
 P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:JFS.PROD<1,N> "L#15"
 P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:JFS.WHSE<1,N> "L#4"
*P_X  := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(JFS.YIELD<1,N>,"MD4") "R#7"
*T25172 P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,2> "L#3"
 P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:INV.UNIT<1,2> "L#3"
*T25172 P_X  := AM:37 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(JFS.U.PRICE<1,N>/10+.5),"MD3") "R#10"
 P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(JFS.U.PRICE<1,N>,"MD4") "R#11"
 P_X  := AM:48 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JFS.M.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10"
 P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JFS.A.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10"
 P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JFS.F.QTY<1,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10"
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 P_X  = 3 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = "CL"
 P_X  := AM:50 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(JFS.DATE<1,N>,"D2/")"L#8"
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 IF JFS.ORDER<1,N,2> # "" THEN
   P_X  = 59 ; P_Y = SLN+1 ; P_VALUE = "MULTI" "L#8" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 END ELSE
   P_X  = 59 ; P_Y = SLN+1 ; P_VALUE = JFS.ORDER<1,N> "L#8" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 END
*T26527 v
 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN
   BAL = 0
 END ELSE
   BAL = JFS.M.QTY<1,N> - JFS.F.QTY<1,N> - JFS.S.QTY<1,N>
 END
*T26527 ^
 IF BAL < 0 THEN BAL = 0
 P_X  = 70 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT(((BAL/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) "R#10" ; P_OPT = ""
 CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
 RETURN
*
8000*
*COPY>ICSBP>INV.UM.CNV
 RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 PRINT @(0,23) : ERRMSG : CL :
*       INPUT XX :
*       PRINT @(0,23) : CL :
99999 *
 ECD.ACTION=99;CALL SCRN.EDIT
 RETURN
END
