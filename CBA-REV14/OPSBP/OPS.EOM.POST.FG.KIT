   SUBROUTINE OPS.EOM.POST.FG.KIT(CONO,BOL.ID)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.EOM.POST
*COPY>PMC.CPYLIB>COM.COMPANY
*COPY>PMC.CPYLIB>COM.COMP.OPS
*COPY>OPS.CPYLIB>XCOM.OPS.INVOICEX
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - OPSBP
* PROGRAM     - OPS.EOM.POST.FG1
* DATE        - 03/28/93
* DESCRIPTION -
*T24735 renee 01/17/2000 * Change code to include open BOL's so that the
*                          SHIPPED NOT BILLED gl account gets reversed
*                          when it is invoiced in another period.
*T25740 epitka 02/01/2002 * REV12
*ENDDOC
* TASK 18606 - CHANGE FOR KITTING TO GO BACK TO THE BOL
*
*********************************************************************
*
*---- INSERT FILE EQUATE
*
*COPY>JCS.CPYLIB>EOM.ACCT
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>BOL
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- MAIN
   NEW.REC = 0
   OPEN.FLAG=1
*
   BOL.KEY1 = FIELD(BOL.ID,"!",1)
   BOL.KEY = CONO:BOL.KEY1
   CANCEL.FLG = FIELD(BOL.ID,"!",2)
   PRINT @(0,23) : CL : 'NOW PROCESSING BILL OF LADING - ' : BOL.KEY1 :
   MATREADU BOL.REC FROM BOL, BOL.KEY ELSE
      MAT PRR.REC = ""
      PRR.JOB = ''
      PRR.FILE = "BOL"
      PRR.ID = BOL.KEY1
      PRR.ERR = "CANNOT LOCATE"
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
      GOTO 999
   END
* T24735 v Change to include open BOL's from prior periods
* IF BOL.GLA.DATE<1,1> # "" AND BOL.GLA.DATE<1,1> # "P" THEN GOTO 999
* IF BOL.PERIOD # PERIOD THEN GOTO 999
   IF BOL.PERIOD > PERIOD THEN GOTO 999
* T24735 ^
   OCNT = DCOUNT(BOL.ORDER<1>,VM)
   FOR O = 1 TO OCNT
      ORDNO = BOL.ORDER<1,O>
      MATREAD ORD.REC FROM ORDER, CONO:ORDNO ELSE
         MAT PRR.REC = ""
         PRR.JOB = ORDNO
         PRR.FILE = "ORDER"
         PRR.ID = ORDNO
         PRR.ERR = "CANNOT LOCATE"
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 599
      END
      MATREAD INV.REC FROM INVENTORY, CONO:BOL.PROD<1,O> ELSE
         MAT PRR.REC = ""
         PRR.JOB = ORDNO
         PRR.FILE = "INVENTORY"
         PRR.ID = BOL.PROD<1,O>
         PRR.ERR = "CANNOT LOCATE"
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 599
      END
      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
         MAT PRR.REC = ""
         PRR.JOB = ORDNO
         PRR.FILE = "CATEGORY"
         PRR.ID = INV.LINE
         PRR.ERR = "CANNOT LOCATE"
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 599
      END
      IWH.ID = BOL.PROD<1,O>:"!":BOL.WHSE<1,O>
IWH.ID=CONO:IWH.ID
      MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
         ERR.FLG='';ERRMSG='';IWH.PERIOD=""
         CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,IWH.PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG) 
      END ELSE
         MAT PRR.REC = ""
         PRR.JOB = ORDNO
         PRR.FILE = "INV.WHSE"
         PRR.ID = IWH.ID
         PRR.ERR = "CANNOT LOCATE"
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 599
      END
      RCNT = DCOUNT(BOL.RECP.NO<1,O>,SVM)
      FOR R = 1 TO RCNT
         LOCATE BOL.RECP.NO<1,O,R> IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
            COST = INT(IWH.COST.FI<1,FPTR>/100 * (BOL.QTY<1,O,R>/1000)/(INV.COST.WT/100) + .5)
            TRANS.NO=BOL.RECP.NO<1,O,R>
            GOSUB 1000
         END ELSE
            MAT PRR.REC = ""
            PRR.JOB = ORDNO
            PRR.FILE = "INV.WHSE"
            PRR.ID = IWH.ID
            PRR.ERR = "MISSING FIFO REFERENCE #"
            PRR.SEQ = PRR.SEQ + 1
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         END
      NEXT R
599 *
   NEXT O
   BOL.GLA.DATE<1,1> = "P"
   MATWRITE BOL.REC ON BOL, BOL.KEY
999 *
   RELEASE
   GOTO 99999
*
*---- UPDATE EOM.TRANS
*
1000 *
   BEGIN CASE
      CASE CATG.COG = MT.COG.ACCT
      CASE CATG.COG # ""
         CATG.COG = CATG.COG : STR("0",IN.ACCT.LEN-LEN(CATG.COG))
         CATG.COG = CATG.COG[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CATG.COG ELSE COA.LEVEL = 0
         MT.COG.ACCT = CATG.COG
         MT.COG.LEVEL = COA.LEVEL
      CASE GLTB.MT.DIR.COG = MT.COG.ACCT
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.MT.DIR.COG ELSE COA.LEVEL = 0
         MT.COG.ACCT = GLTB.MT.DIR.COG
         MT.COG.LEVEL = COA.LEVEL
   END CASE
*
   BEGIN CASE
      CASE CATG.SHIP.WIP = ''
         BEGIN CASE
            CASE SHIP.WIP.LEVEL < 1
               T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SHIP.WIP.ACCT
            CASE 1
               T.ACCT = ORD.DIV : GEN.DEPT : GEN.CCTR : SHIP.WIP.ACCT
         END CASE
      CASE 1
         BEGIN CASE
            CASE SHIP.WIP.LEVEL < 1
               T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : CATG.SHIP.WIP
            CASE 1
               T.ACCT = ORD.DIV : GEN.DEPT : GEN.CCTR : CATG.SHIP.WIP
         END CASE
   END CASE
   IF CANCEL.FLG = "" THEN
      AMT = COST
   END ELSE
      AMT = 0 - COST
   END
   BEGIN CASE
      CASE AMT + 0 > 0
         TRAN.AMT = AMT
         GOSUB 3000
      CASE AMT + 0 < 0
         TRAN.AMT = 0 - AMT
         GOSUB 2000
   END CASE
*
   BEGIN CASE
      CASE MT.COG.LEVEL < 1
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : MT.COG.ACCT
      CASE 1
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:BOL.WHSE<1,O> ELSE MAT WHSE.REC = ''
         IF WHS.DIV # '' THEN
            T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : MT.COG.ACCT
         END ELSE
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : MT.COG.ACCT
         END
*  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : MT.COG.ACCT
   END CASE
   BEGIN CASE
      CASE AMT + 0 > 0
         TRAN.AMT = AMT
         GOSUB 2000
      CASE AMT + 0 < 0
         TRAN.AMT = 0 - AMT
         GOSUB 3000
   END CASE
*
   RETURN
*
*---- DEBIT
*
2000 *
   ETR.ID = CONO : T.ACCT : ORDNO : "!FG-D*" : NEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
      ETR.REF = BOL.CUST
   END
   ETR.AMT = ETR.AMT + TRAN.AMT
   LOCATE TRANS.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS TRANS.NO BEFORE ETR.TRAN<1,PTR>
   INS BOL.SHP.DATE BEFORE ETR.DATE<1,PTR>
   INS TRAN.AMT BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN NEW.REC = NEW.REC+1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*---- CREDIT
*
3000 *
   ETR.ID = CONO : T.ACCT : ORDNO : "!FG-C*" : NEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
      ETR.REF = BOL.CUST
   END
   ETR.AMT = ETR.AMT - TRAN.AMT
   LOCATE TRANS.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS TRANS.NO BEFORE ETR.TRAN<1,PTR>
   INS BOL.SHP.DATE BEFORE ETR.DATE<1,PTR>
   INS (0 - TRAN.AMT) BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN NEW.REC = NEW.REC+1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*---- END
*
99999 *
   RETURN
END
