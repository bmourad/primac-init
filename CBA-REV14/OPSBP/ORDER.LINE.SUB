*T28144  SUBROUTINE ORDER.LINE.SUB(CONO,ORDNO,SHPNO,ORIG.PROD,ORIG.IWH.RESV,ORIG.IWH.QTY,ORIG.ALOC.AVL,SEL)
  SUBROUTINE ORDER.LINE.SUB(CONO,ORDNO,SHPNO,ORIG.PROD,ORIG.IWH.RESV,ORIG.IWH.QTY,ORIG.ALOC.AVL,SEL,MI.MODE)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>ICS.CPYLIB>COM.INV.CNV
********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE        - OPSBP
* PROGRAM       - ORDER.LINE.SUB
* BY            - Ziad Yamout, VERCOM Software Inc.
* DATE          - 01/23/90
* DESCRIPTION   -
* TASK MODS
*     18606 01/06/95 LLH ADD KIT, EXPLODED ITEMS AND NEW SCREEN
*     20020 01/16/96 FNGD/WHSE DIV = ORDER DIV
*     20166 2/26/96 TEMPLATE ESTIMATE DIV = ORDER DIV
*
*T20234 rick 08/08/1996 * Found differences in 10a and 10b upgrade 10b.
*T20852 doug 08/20/1996 * Pick ticket tracking
*T20949 doug 08/20/1996 * Order line release status
*T20905 doug 08/20/1996 * Estimate pricing
*T21023 gat 09/27/1996 * FIX DIVISION 00 WAREHOUSE PROBLEM
*T21177 diane 11/06/1996 * REV11 UPG
*T21362 julie 12/24/1996 * KIT.TYPE AND PROD.SEQ WERW NOT INITIALIZED
*                          BEFORE CALLING ORDER.REVERSE.SEL
*T22118 stefanie 07/31/1997 * When another customer owns a product on a
*                             kit, the message displayed is incorrect
*T22121 stefanie 07/31/1997 * Comment field has too many spaces before
*                             text entry
******* renee 08/19/1997 * Transferring changes made to this program in
*                          Rev10b to Rev11 for T21654.
*T21654 lanny 02/27/1997 * Reserve Qty MINV/MAXV need to be scaled.
*T25159 alex 05/10/2000 * Add PMC.CPYLIB COUNTRY.CODE 
*T25201 edvard 06/02/2000 * USER IS ABLE TO RELEASE A RESERVE QTY ON
*                           ORDER BY ENTERING A SPACE IN THE RESERVE QTY
*                           FIELD EVEN THOUGH PICK TICKET EXIST.
*C37751 edvard 02/15/2001 * Fix display of Available qty.
*T25903 edvard 06/25/2001 * INV.WHSE.LOC.FI WAS NOT UPDATED CORRECTLY    
*                           BECAUSE "L" COULD BE USED TO CANCEL LINE     
*                           ITEM WITH A KIT WITHOUT CHECKING IF THERE    
*                           WAS OUTSTANDING PICK TICKET. INV.WHSE.LOC.FI 
*                           FILE WAS NOT UPDATED (RESERVED QUANTITY WAS  
*                           NOT REDUCED). MOVED SETTING OF THE           
*                         LNFLG=5 LITTLE BIT HIGHER IN THE CASE.         
*T26356 lhelms 12/27/2001 * WHEN DELETING A PROD OFF OF THE ORDER THE
*                           PROD.SEQ NUMBER ARE NOT BEING UPDATED    
*                           CORRECTLY                                
*T25859 renee 06/13/2001 * Add a new condition to force this screen to 
*                          be in "inquiry mode" when called from
*                          ORDER.INQ.
*T25740 epitka 01/16/2002 * REV12
*T27007 adelgado 11/04/2002 * Add "*" to the line that has overage qty.
*                             Add option to view overage qty.
*T28144 lross 05/26/2004 * Setup ORDER.LINE.SUB for "I"nquiry purposes.
*                          Set MI.MODE argument from calling routine.
*T28354 lross 12/08/2004 * Allow 999 lines.
********************************************************************
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.TO
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>OPS.CPYLIB>ORDER.RELEASE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.FNGD
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>FNGD.BOM
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.ORDER.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>ICS.CPYLIB>PRICE.TABLE
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COUNTRY.CODE          ;*T25159
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  OPEN.FLAG=1
*
*---- Display screen
*
  GEN.SHPNO = "000"
  TODAY = DATE()
  LINE.SPACE = 2
  PAGE.SIZE = 5
  BEGIN.PAGE = 10
  DIM TEMP.MF(25)
  MAT TEMP.MF = ""
  MODE = ""
  HOLD.MINV = 0 ; *25201
  OV.TOGGLE=0 ; * T27007
  HOLD.SHPNO='' ;*T28144
*
  ESN = ECD.SCRN.NO
  ECD.NUM = 1;SCV.REC(ECD.NUM)<ESN> = ORDNO
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 2;SCV.REC(ECD.NUM)<ESN> = ORD.CUST
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 3;SCV.REC(ECD.NUM)<ESN> = CUST.NAME
  ECD.ACTION = 5;CALL SCRN.EDIT
*
  BEGIN CASE
    CASE SHPNO # ""
      ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
      ECD.ACTION = 5;CALL SCRN.EDIT
      ECD.RET.VALUE = SHPNO;GOTO 110
    CASE ORD.SHIP.TO<1,2> # ""
      SHPNO = ORD.SHIP.TO<1,2>
      ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
      ECD.ACTION = 5;CALL SCRN.EDIT
      ECD.RET.VALUE = SHPNO;GOTO 110
    CASE ODQ.PROD # ""
      SHPNO = ORD.SHIP.TO<1,1>
      ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
      ECD.ACTION = 5;CALL SCRN.EDIT
      ECD.RET.VALUE = SHPNO;GOTO 110
    CASE OPCO.SHP.FLW = "G"
      SHPNO = GEN.SHPNO
      ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
      ECD.ACTION = 5;CALL SCRN.EDIT
      ECD.RET.VALUE = SHPNO;GOTO 110
  END CASE
*
*---- Ship to
100* 
  IF CUST.SHIP.TO = 1 THEN ECD.DEFAULT = "001"
  ECD.NUM = 4;ECD.ACTION = 4;CALL SCRN.EDIT
110* 
  LN = 1;LINES = 0;OLD.START.LINE = 0
  NUM.ON.SCRN = ""
  SPTR = 0;SCNT = DCOUNT(ORD.SHIP.TO,VM)
  IF HOLD.SHPNO = '' THEN HOLD.SHPNO=SHPNO ;*T28144
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      SHPNO = "";GOTO 99999
    CASE ECD.RET.VALUE = "S"
      BEGIN CASE
        CASE SCNT < 1
          ERRMSG = "There is no ship to for this order"
          GOSUB 91000;SCV.REC(ECD.NUM)<ESN> = "";GOTO 100
        CASE SHPNO = ""
          IF SCNT = 1 THEN
            SPTR = 1
          END ELSE
            SPTR = 2
          END
          SHPNO = ORD.SHIP.TO<1,SPTR>
          ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
          ECD.ACTION = 5;CALL SCRN.EDIT
        CASE SCNT < 2
          ERRMSG = "There is only one ship to for this order"
          GOSUB 91000;SCV.REC(ECD.NUM)<ESN> = "";GOTO 100
        CASE 1
          LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR ELSE
            ERRMSG = "Cannot locate the current ship to # ":SHPNO
            GOSUB 91000;GOTO 100
          END
          IF SPTR = SCNT THEN
            SPTR = 1
          END ELSE
            SPTR = SPTR + 1
          END
          SHPNO = ORD.SHIP.TO<1,SPTR>
          ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
          ECD.ACTION = 5;CALL SCRN.EDIT
      END CASE
*T28144 CASE ECD.RET.VALUE = "N"
    CASE ECD.RET.VALUE = "N" AND MI.MODE='M'
*T28144 MATREADU CUST.REC FROM CUSTOMER, CONO:ORD.CUST THEN
      MATREAD CUST.REC FROM CUSTOMER, CONO:ORD.CUST THEN
        ECD.SCRN.NO = ESN + 1;SHPNO = "N"
        CALL SHIP.TO.MAINT(CONO,ORD.CUST,SHPNO,OPCO.CNTY,"")
        RELEASE CUSTOMER, CONO:ORD.CUST
        ECD.SCRN.NO = ESN
        SHPNO = "";SCV.REC(4)<ESN> = ""
        GOSUB 8000;GOTO 100
      END ELSE
        RELEASE CUSTOMER, CONO:ORD.CUST
      END
    CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
      BEGIN CASE
        CASE CUST.SHIP.TO < 1
          ERRMSG = "There is no ship to for this customer"
          GOSUB 91000;GOTO 100
        CASE CUST.SHIP.TO = 1
          SHPNO = CUST.SHIP.TO "R%3"
          ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
          ECD.ACTION = 5;CALL SCRN.EDIT
        CASE 1
          MAT GEN.XREF.REC = ""
          GXR.CO = CONO
          GXR.NAME = "SHIP.TO"
          GXR.FILE = SHIP.TO
          GXR.SRCH.ID = ORD.CUST:" : ":CUST.NAME
          GXR.IDLIST = ORD.CUST:"!001"
          FOR SNO = 2 TO CUST.SHIP.TO
            GXR.IDLIST<1,SNO> = ORD.CUST:"!":SNO "R%3"
          NEXT SNO
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          SHPNO = FIELD(GXR.ID,"!",2)
          ECD.ACTION = 2;CALL SCRN.EDIT
          IF SHPNO = "" THEN
            GOSUB 8000;GOTO 100
          END
          STATUS = "D"
          MAT ORD.DET.REC = ""
          CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
          LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING S THEN
            FOR P = 1 TO ORD.DET.REC.SIZE
              ORD.DET.REC(P) = ORD.DET.SUM(P,S)
            NEXT P
          END
          LINES = DCOUNT(NUM.ON.SCRN,VM)
          SCV.REC(4)<ESN> = SHPNO;GOSUB 8000
      END CASE
    CASE 1
      IF LEN(ECD.RET.VALUE) < 3 THEN
        ECD.RET.VALUE = ECD.RET.VALUE "R%3"
        ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = ECD.RET.VALUE
        ECD.ACTION = 5;CALL SCRN.EDIT
      END
      SHPNO = ECD.RET.VALUE
  END CASE
  IF SHPNO = GEN.SHPNO THEN
    MAT SPT.REC = ""
    SPT.NAME = CUST.NAME
    SPT.ADDR1 = CUST.ADDR1
    SPT.ADDR2 = CUST.ADDR2
    SPT.STATE = TRIM(FIELD(CUST.ADDR4,",",2))
    SPT.CITY = TRIM(FIELD(CUST.ADDR4,",",1))
    SPT.ZIP = CUST.ZIP
    SPT.CNTY = CUST.ADDL.OPS<1,4>
    SPT.TAX.JUR = CUST.TAX.JUR
    SPT.TAXABLE = CUST.TAXABLE
    SPT.EXEMPT = CUST.EXEMPT
    SPT.EXMT.DATE = CUST.EXMT.DATE
    SPT.SLSMN = CUST.SALESMAN
    SPT.FOB = CUST.ADDL.OPS<1,2>
    SPT.SHP.TERMS = CUST.ADDL.OPS<1,3>
  END ELSE
    MATREAD SPT.REC FROM SHIP.TO, CONO:ORD.CUST:"!":SHPNO ELSE
      ERRMSG = "Cannot locate ship to # ":SHPNO
      GOSUB 91000;GOTO 100
    END
*T28144 v
    IF MI.MODE='I' THEN
      LOCATE SHPNO IN ORD.SHIP.TO<1> SETTING SFND ELSE
        SHPNO = HOLD.SHPNO
        ECD.RET.VALUE = SHPNO
        GOTO 110
      END
    END
*T28144 ^
  END
  ECD.NUM = 8;SCV.REC(ECD.NUM)<ESN> = SPT.NAME
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 10;SCV.REC(ECD.NUM)<ESN> = SPT.ADDR1
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 52;SCV.REC(ECD.NUM)<ESN> = SPT.CITY
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 53;SCV.REC(ECD.NUM)<ESN> = SPT.STATE
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 56;SCV.REC(ECD.NUM)<ESN> = SPT.ZIP
  ECD.ACTION = 5;CALL SCRN.EDIT
  IF SPT.CNTY = "" THEN
    COUNTRY = ""
  END ELSE
    MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SPT.CNTY THEN
      COUNTRY = CTY.DESC
    END ELSE
      COUNTRY = SPT.CNTY
    END
  END
  ECD.NUM = 57;SCV.REC(ECD.NUM)<ESN> = COUNTRY
  ECD.ACTION = 5;CALL SCRN.EDIT
  IF SPTR THEN
    STATUS = "D"
    CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
    FOR P = 1 TO ORD.DET.REC.SIZE
      ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
    NEXT P
    IF SHPNO = GEN.SHPNO THEN OSD.PO = ORD.PO
    ECD.NUM = 9;SCV.REC(ECD.NUM)<ESN> = OSD.PO
    ECD.ACTION = 5;CALL SCRN.EDIT
  END ELSE
    LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR THEN
      STATUS = "D"
      CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
      NEXT P
      IF SHPNO = GEN.SHPNO THEN OSD.PO = ORD.PO
      ECD.NUM = 9;SCV.REC(ECD.NUM)<ESN> = OSD.PO
      ECD.ACTION = 5;CALL SCRN.EDIT
    END ELSE
      BEGIN CASE
        CASE SPT.STATUS = "F" AND SPT.STAT.DATE <= TODAY
          ERRMSG = "Ship to is inactive as of ":OCONV(SPT.STAT.DATE,"D2/")
          GOSUB 91000;GOTO 100
        CASE SPT.STATUS # "F" AND SPT.STAT.DATE > TODAY
          ERRMSG = "Ship to will not be active until ":OCONV(SPT.STAT.DATE,"D2/")
          GOSUB 91000;GOTO 100
      END CASE
      MAT ORD.DET.REC = ""
      GOSUB 1200
      IF ECD.RET.VALUE = "END" THEN GOTO 100
      ORD.SHIP.TO<1,SPTR> = SHPNO
      SCNT = DCOUNT(ORD.SHIP.TO,VM)
    END
  END
  IF OSD.SHP.TERMS = "" AND SPT.SHP.TERMS # "" THEN
    OSD.SHP.TERMS = SPT.SHP.TERMS
  END
  ECD.NUM = 5;SCV.REC(ECD.NUM)<ESN> = SPTR "R%2"
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 6;SCV.REC(ECD.NUM)<ESN> = SCNT "R%2"
  ECD.ACTION = 5;CALL SCRN.EDIT
  ECD.NUM = 27;SCV.REC(ECD.NUM)<ESN> = OSD.SHP.TERMS
  ECD.ACTION = 5;CALL SCRN.EDIT
  LINES = DCOUNT(NUM.ON.SCRN,VM);LNFLG = 0
  NUM.PROD = DCOUNT(OSD.PROD,VM);LNFLG = 0
  NUM.ON.SCRN = ""
  K = 0
  FOR I = 1 TO NUM.PROD
    IF OSD.KIT<1,I>  # "M" THEN
      K = K + 1
      NUM.ON.SCRN<1,K> = I
    END
  NEXT I
  LINES = DCOUNT(NUM.ON.SCRN,VM)
  IF LINES < 1 THEN
    ECD.NUM = 31;SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5;CALL SCRN.EDIT
    ECD.NUM = 32;SCV.REC(ECD.NUM)<ESN> = 1 "R%2"
    ECD.ACTION = 5;CALL SCRN.EDIT
    OPTION = "A"
    MODE = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 8888
      GOSUB 7000
    WHILE LINES > OLD.LINES DO
      GOSUB 7950
    REPEAT
    LN = LINES
  END
  GOSUB 7900;GOSUB 7955
*
*---- Prompt line
*
*T28144 v
  IF MI.MODE = 'M' THEN
    IF ORD.STATUS<1,1> = "CLOSED" OR ORD.STATUS<1,1> = "CANCEL" THEN
      OPTNUM = 43
    END ELSE
      GOSUB GET.PROMPT.NUM                 ;* T27007
    END
  END ELSE OPTNUM = 7
*T28144 ^
  MORE = 1
  LOOP
*T28144 GOSUB GET.PROMPT.NUM                  ;* T27007
    LNFLG = 0
    ECD.NUM = OPTNUM;SCV.REC(ECD.NUM)<ESN> = ""
    ECD.ACTION = 4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
        FOR P = 1 TO ORD.DET.REC.SIZE
          ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
        NEXT P
        STATUS = "L"
        CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
        MORE = 0
      CASE OPTION = "A"
        MODE = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 8888
          GOSUB 7000
        WHILE LINES > OLD.LINES DO
          GOSUB 7950
        REPEAT
        LN = LINES;GOSUB 7900;GOSUB 7955
      CASE OPTION = "C"
        MODE = "C"
        GOSUB 7800
        IF ERR.MSG = 0 THEN
          IF LN.NO THEN
            LN = LN.NO
            SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
            IF LNFLG THEN
              IWH.ID = CONO:OSD.PROD<1,LN>
              MATREAD INV.REC FROM INVENTORY, IWH.ID THEN
                MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
                  IWH.ID = IWH.ID:"!":OSD.WHSE<1,LN>
                  MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
                    ERR.FLG='';ERRMSG='';PERIOD=''
                    CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
                    GOSUB 9000
                    MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
                      MAT FGS.REC = ""
                    END
                    LOCATE IWH.ID IN ORIG.PROD<1>,1 SETTING LINDX THEN
                      TEMP.CONV = CONVERT(SVM,VM,ORIG.IWH.RESV<1,LINDX>)
                      IWH.RSV.FI = TEMP.CONV
                      IWH.RESV = ORIG.IWH.QTY<1,LINDX>
                      TEMP.CONV = CONVERT(SVM,VM,ORIG.ALOC.AVL<1,LINDX>)
                      FGS.A.QTY = TEMP.CONV
                    END
                    IF IWH.ON.HAND - IWH.RESV < 0 THEN
                      AVL.RESV = OSD.R.QTY<1,LN>
                    END ELSE
                      AVL.RESV = IWH.ON.HAND - IWH.RESV + OSD.R.QTY<1,LN>
                    END
                    AVL.ALOC = SUM(FGS.M.QTY) - SUM(FGS.A.QTY)
                    IF AVL.ALOC < 1 THEN AVL.ALOC = 0
                    AVL.ALOC = AVL.ALOC + OSD.A.QTY<1,LN>
                    GOSUB 8888
                    GOSUB 7030
                  END ELSE
                    ERRMSG = "Cannot locate warehouse (":OSD.WHSE<1,LN>:") for item # ":OSD.PROD<1,LN>
                    GOSUB 91000
                  END
                END ELSE
                  ERRMSG = "Cannot locate Product Line # ":INV.LINE
                  GOSUB 91000
                END
              END ELSE
                ERRMSG = "Cannot locate finished goods # ":OSD.PROD<1,LN>
                GOSUB 91000
              END
            END ELSE
              GOSUB 8888
              GOSUB 7010
            END
          END
        END
      CASE OPTION = "KC"
        GOSUB 7800
        IF LN.NO THEN
          INDX = NUM.ON.SCRN<1,LN.NO>
          PDNO = OSD.PROD<1,INDX>

          IF OSD.KIT<1,INDX> = "K" THEN
            OLD.SCRN = ECD.SCRN.NO
            ECD.SCRN.NO = 25
            ESN = 25
            ECD.NUM = 1;SCV.REC(ECD.NUM)<ESN> = ORDNO
            ECD.NUM = 2;SCV.REC(ECD.NUM)<ESN> = ORD.CUST
            ECD.NUM = 3;SCV.REC(ECD.NUM)<ESN> = CUST.NAME
            ECD.NUM = 4;SCV.REC(ECD.NUM)<ESN> = SHPNO
            ECD.NUM = 5;SCV.REC(ECD.NUM)<ESN> = SPTR "R%2"
            ECD.NUM = 6;SCV.REC(ECD.NUM)<ESN> = SCNT "R%2"
            ECD.NUM = 27;SCV.REC(ECD.NUM)<ESN> = OSD.SHP.TERMS
            ECD.NUM = 8;SCV.REC(ECD.NUM)<ESN> = SPT.NAME
            ECD.NUM = 10;SCV.REC(ECD.NUM)<ESN> = SPT.ADDR1
            ECD.NUM = 52;SCV.REC(ECD.NUM)<ESN> = SPT.CITY
            ECD.NUM = 53;SCV.REC(ECD.NUM)<ESN> = SPT.STATE
            ECD.NUM = 56;SCV.REC(ECD.NUM)<ESN> = SPT.ZIP
            CALL KIT.COMPONENT.SUB(CONO,ORDNO,SHPNO,PDNO,MAT ORD.DET.REC)
            ECD.SCRN.NO = OLD.SCRN
            ESN         = OLD.SCRN
            LINES = DCOUNT(NUM.ON.SCRN,VM)
            IF LN > LINES THEN LN = LN - 1
            GOSUB 8000
          END ELSE
            ERRMSG = "Not a Kitted Item"
            GOSUB 91000
          END
        END
      CASE OPTION = "L"
        GOSUB 7800
        IF LNFLG = 5 THEN
          ERRMSG = "Cannot Cancel !! Product is on an open Picking Ticket"
          GOSUB 91000
          LN.NO = 0
        END
        IF LN.NO THEN
          LN = LN.NO
          PDNO = OSD.PROD<1,TEMP.INDX>;IWH.ID = CONO:PDNO
          MATREAD INV.REC FROM INVENTORY, IWH.ID THEN
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
              WHNO = OSD.WHSE<1,LN>;IWH.ID = IWH.ID:"!":WHNO
              MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
                ERR.FLG='';ERRMSG='';PERIOD=''                                        
                CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG) 
                GOSUB 9000
                MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
                  MAT FGS.REC = ""
                END
                OSD.G.QTY<1,TEMP.INDX> = 0
                OSD.O.QTY<1,TEMP.INDX> = 0
                OSD.R.QTY<1,TEMP.INDX> = 0
                IF OSD.KIT<1,TEMP.INDX> = "K" THEN
                  OSD.KIT.G.QTY<1,TEMP.INDX> = 0
                  OSD.KIT.O.QTY<1,TEMP.INDX> = 0
                  OSD.KIT.R.QTY<1,TEMP.INDX> = 0
                  OSD.REL.NO<1,TEMP.INDX> = ""
                  OSD.REL.QTY<1,TEMP.INDX> = ""
                  OSD.RECP.NO<1,TEMP.INDX> = ""
                  OSD.FI.QTY<1,TEMP.INDX> = ""
                  OSD.REL.NO<1,TEMP.INDX> = ""
                  OSD.OLD.QTY<1,TEMP.INDX> = ""
                  NUM.ORDER = DCOUNT(OSD.PROD,VM)
                  START.PT = NUM.ON.SCRN<1,TEMP.INDX>
                  NUM.PROD = 0
                  FOR I = START.PT+1 TO NUM.ORDER
                    IF OSD.KIT<1,I> = "K" THEN I = NUM.ORDER + 1
                    IF OSD.KIT<1,I> = "N" THEN I = NUM.ORDER + 1
                    IF OSD.KIT<1,I> = "M" THEN
                      NUM.PROD = NUM.PROD + 1
                    END
                  NEXT I
                  FOR I = 1 TO NUM.PROD
                    OSD.REL.NO<1,START.PT + I> = ""
                    OSD.REL.QTY<1,START.PT + I> = ""
                    OSD.RECP.NO<1,START.PT + I> = ""
                    OSD.FI.QTY<1,START.PT + I> = ""
                    OSD.REL.NO<1,START.PT + I> = ""
                    OSD.G.QTY<1,START.PT + I> = 0
                    OSD.O.QTY<1,START.PT + I> = 0
                    OSD.R.QTY<1,START.PT + I> = 0
                    OSD.OLD.QTY<1,START.PT + I> = ""
                  NEXT I
                  OLD.START.LINE = 0
                  N = LN;GOSUB 7900
                END ELSE
                  RTOT = 0;RTYPE = "B"
                  RQTY = OSD.FI.QTY<1,TEMP.INDX>
                  RSV.NO = OSD.RECP.NO<1,TEMP.INDX>
                  REL.NO = OSD.REL.NO<1,TEMP.INDX>
                  REL.QTY = OSD.REL.QTY<1,TEMP.INDX>
                  PROD.SEQ = OSD.PROD.SEQ<1,TEMP.INDX>
                  KIT.TYPE = TEMP.MF(18)
                  WHNO = OSD.WHSE<1,TEMP.INDX>
                  CALL ORDER.RESERVE.SEL(CONO,("R-":TEMP.INDX),ORD.CUST,ORDNO,SHPNO,PDNO,WHNO,RTYPE,RTOT,RQTY,RSV.NO,REL.NO,REL.QTY,"","",PROD.SEQ,KIT.TYPE,"")
                  RECP.CNT = DCOUNT(OSD.RECP.NO<1,TEMP.INDX>,SVM)
                  FOR N = 1 TO RECP.CNT
                    RECP.NO = OSD.RECP.NO<1,TEMP.INDX,N>
                    LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
                      IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> + OSD.FI.QTY<1,TEMP.INDX,N>
                    END
                  NEXT N
                  RECP.CNT = DCOUNT(RSV.NO,SVM)
                  FOR N = 1 TO RECP.CNT
                    RECP.NO = RSV.NO<1,1,N>
                    LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
                      IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> - RQTY<1,1,N>
                    END
                  NEXT N
                  TEMP.KEY = CONO:OSD.PROD<1,TEMP.INDX>:"!":OSD.WHSE<1,TEMP.INDX>
                  LOCATE TEMP.KEY IN ORIG.PROD<1>,1 SETTING LINDX THEN
                    ORIG.IWH.QTY<1,LINDX> = ORIG.IWH.QTY<1,LINDX> - OSD.R.QTY<1,TEMP.INDX> + RTOT
                    TEMP.STR = CONVERT(VM,SVM,IWH.RSV.FI)
                    ORIG.IWH.RESV<1,LINDX> = TEMP.STR
                  END
                  OSD.RECP.NO<1,TEMP.INDX> = RSV.NO
                  OSD.FI.QTY<1,TEMP.INDX> = RQTY
                  OSD.REL.NO<1,TEMP.INDX> = REL.NO
                  OSD.REL.QTY<1,TEMP.INDX> = REL.QTY
                  ATOT = 0;AQTY = "";RCNT = DCOUNT(OSD.JOB<1,TEMP.INDX>,SVM)
*T20234 ^
                  FOR R = 1 TO RCNT
                    LOCATE OSD.JOB<1,TEMP.INDX,R> IN FGS.JOB<1>,1 SETTING JPTR THEN
                      AQTY<1,JPTR> = OSD.JOB.QTY<1,TEMP.INDX,R>
                    END
                    OSD.JOB.QTY<1,TEMP.INDX,R> = 0
                  NEXT R
                  ATYPE = "B"
                  CALL ORDER.JOB.SEL(CONO,ORDNO,PDNO,WHNO,ATYPE,ATOT,AQTY)
                  FOR R = 1 TO RCNT
                    LOCATE TEMP.MF(13)<1,1,R> IN FGS.JOB<1>,1 SETTING RINDX THEN
                      FGS.A.QTY<1,RINDX> = FGS.A.QTY<1,RINDX> - OLD.QTY<1,1,R>
                    END
                  NEXT R
                  RCNT = DCOUNT(AQTY,VM)
                  FOR R = 1 TO RCNT
                    IF AQTY<1,R> > 0 THEN
                      LOCATE FGS.JOB<1,R> IN OSD.JOB<1,TEMP.INDX>,1 SETTING JPTR ELSE
                        OSD.JOB<1,TEMP.INDX,JPTR> = FGS.JOB<1,R>
                      END
                      OSD.JOB.QTY<1,TEMP.INDX,JPTR> = AQTY<1,R>
                      FGS.A.QTY<1,4> = FGS.A.QTY<1,R> + AQTY<1,R>
                    END
                  NEXT R
                  TEMP.STR = CONVERT(VM,SVM,FGS.A.QTY)
                  ORIG.ALOC.AVL<1,LINDX> = TEMP.STR
                  OSD.A.QTY<1,TEMP.INDX> = ATOT
                  OSD.REL.NO<1,TEMP.INDX> = ""
                  OSD.REL.QTY<1,TEMP.INDX> = ""
                  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
                  N = LN;GOSUB 7910
                END
              END ELSE
                ERRMSG = "Cannot locate warehouse (":OSD.WHSE<1,TEMP.INDX>:") for item # ":OSD.PROD<1,TEMP.INDX>
                GOSUB 91000
              END
            END ELSE
              ERRMSG = "Cannot locate Product Line # ":INV.LINE
              GOSUB 91000
            END
          END ELSE
            ERRMSG = "Cannot locate finished goods # ":OSD.PROD<1,TEMP.INDX>
            GOSUB 91000
          END
        END
      CASE OPTION = "D"
        GOSUB 7800
        BEGIN CASE
          CASE LN.NO < 1
          CASE LNFLG = 1 OR LNFLG = 2
            ERRMSG = "Cannot Delete !! Product has been Shipped/Invoiced"
            GOSUB 91000
          CASE LNFLG = 3 OR LNFLG = 4
            ERRMSG = "Cannot Delete !! Product has been Reserved/Allocated"
            GOSUB 91000
          CASE LNFLG = 5
            ERRMSG = "Cannot Delete !! Product is on an open Picking Ticket"
            GOSUB 91000
          CASE OSD.KIT<1,TEMP.INDX> = "M"
            ERRMSG = "Cannot Delete !! Product is part of a Kit"
            GOSUB 91000
          CASE 1
            LN=LN.NO
            TO.DELETE = NUM.ON.SCRN<1,LN.NO>;GOSUB 7700
            LINES = DCOUNT(NUM.ON.SCRN,VM)
            IF LN > LINES THEN LN = LN - 1
            OLD.START.LINE = 0;GOSUB 7900;GOSUB 7955
        END CASE
      CASE OPTION = "M"
        GOSUB 7800
        IF LN.NO THEN
          LN = LN.NO
          TEMP.INDX = NUM.ON.SCRN<1,LN.NO>
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 7070
        END
      CASE OPTION = "T"
        GOSUB 7800
*T28354 IF OSD.KIT<1,TEMP.INDX> = "N" THEN
        IF OSD.KIT<1,TEMP.INDX> # "K" THEN
          IF LN.NO THEN
            ECD.SCRN.NO = ESN + 3
            ECD.ACTION = 2;CALL SCRN.EDIT
            FOR P = 1 TO ORD.DET.REC.SIZE
              ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
            NEXT P
            STATUS = "L"
            PDNO = OSD.PROD<1,TEMP.INDX>;WHNO = OSD.WHSE<1,TEMP.INDX>
            UNPRC = OSD.PRICE<1,TEMP.INDX>
            PROD.SEQ=OSD.PROD.SEQ<1,TEMP.INDX>;PROD.KIT = OSD.KIT<1,TEMP.INDX>
            CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
            CALL ORDER.LINE.SHIP(CONO,ORDNO,SHPNO,PDNO,WHNO,UNPRC,PROD.SEQ,PROD.KIT)
            STATUS = "D"
            CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
            FOR P = 1 TO ORD.DET.REC.SIZE
              ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
            NEXT P
            SCNT = DCOUNT(ORD.SHIP.TO,VM)
            SCV.REC(6)<ESN> = SCNT "R%2"
            LINES = DCOUNT(NUM.ON.SCRN,VM)
            SHPNO=SCV.REC(4)<ESN>;* T20949
            ECD.SCRN.NO = ESN;GOSUB 8000
          END
        END ELSE
          ERRMSG = "Cannot Distribute a Kitted Item"
          GOSUB 91000
        END
      CASE OPTION = "P"
        GOSUB 7800
        IF OSD.KIT<1,TEMP.INDX> = "N" THEN
          IF LN.NO THEN
            MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,TEMP.INDX> THEN
              IF INV.SUBS = "" THEN
                ERRMSG = "This product has no sub products to distribute to"
                GOSUB 91000
              END ELSE
                ECD.SCRN.NO = ESN + 4
                ECD.ACTION = 2;CALL SCRN.EDIT
                FOR P = 1 TO ORD.DET.REC.SIZE
                  ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
                NEXT P
                STATUS = "L"
                PDNO = OSD.PROD<1,TEMP.INDX>;WHNO = OSD.WHSE<1,LN.NO>
                UNPRC = OSD.PRICE<1,TEMP.INDX>
                PROD.SEQ = OSD.PROD.SEQ<1,TEMP.INDX>;PROD.KIT = OSD.KIT<1,LN.NO>
                CALL ORDER.LINE.DIST(CONO,ORDNO,SHPNO,PDNO,WHNO,UNPRC,PROD.SEQ,PROD.KIT)
                STATUS = "D"
                CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
                FOR P = 1 TO ORD.DET.REC.SIZE
                  ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
                NEXT P
                SCNT = DCOUNT(ORD.SHIP.TO,VM)
                SCV.REC(6)<ESN> = SCNT "R%2"
                LINES = DCOUNT(NUM.ON.SCRN,VM)
                NUM.PROD = DCOUNT(OSD.PROD,VM)
                NUM.ON.SCRN = ""
                K = 0
                FOR I = 1 TO NUM.PROD
                  IF OSD.KIT<1,I>  # "M" THEN
                    K = K + 1
                    NUM.ON.SCRN<1,K> = I
                  END
                NEXT I
                LINES = DCOUNT(NUM.ON.SCRN,VM)
                SHPNO=SCV.REC(4)<ESN>;* T20949
                ECD.SCRN.NO = ESN;GOSUB 8000
              END
            END ELSE
              ERRMSG = "Cannot locate product # ":OSD.PROD<1,TEMP.INDX>
              GOSUB 91000
            END
          END
        END ELSE
          ERRMSG = "Cannot Distribute a Kitted Item"
          GOSUB 91000
        END
      CASE OPTION = "V"
        GOSUB 7800
        IF LN.NO THEN
          ECD.SCRN.NO = ESN + 5
          ECD.ACTION = 2;CALL SCRN.EDIT
          FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
          NEXT P
          STATUS = "L"
          CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
          PDNO = OSD.PROD<1,LN.NO>;WHNO = OSD.WHSE<1,LN.NO>
          CALL ORDER.LINE.DELV(CONO,ORDNO,SHPNO,PDNO,WHNO)
          STATUS = "D"
          CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
          FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
          NEXT P
          SHPNO=SCV.REC(4)<ESN>;* T20949
          ECD.SCRN.NO = ESN;GOSUB 8000
        END
* T27007v
      CASE OPTION="OV"                
        IF OV.TOGGLE=0THEN            
          OV.TOGGLE=1                 
        END ELSE                      
          OV.TOGGLE=0                 
        END                           
        LN = 1;OLD.START.LINE = 0     
        LINES = DCOUNT(NUM.ON.SCRN,VM)
        GOSUB 7900                    
* T27007 ^
      CASE OPTION = "R"
        IF ORD.REL.NO = "" THEN
          ERRMSG = "There are no releases for this order."
          GOSUB 91000
        END ELSE
          FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
          NEXT P
          STATUS = "L"
          CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
          ECD.SCRN.NO = ESN + 2
          ECD.ACTION = 2;CALL SCRN.EDIT
          CALL RELEASE.LINE.SUB(CONO,ORDNO,SHPNO)
          STATUS = "D"
          CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
          FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
          NEXT P
          SHPNO=SCV.REC(4)<ESN>;* T20949
          ECD.SCRN.NO = ESN;GOSUB 8000
        END
      CASE OPTION = "S" OR OPTION = "SF"
        NUM.PROD = DCOUNT(NUM.ON.SCRN,VM)
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 7900
      CASE OPTION = "SR"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 7900
      CASE OPTION = "ST"
        LN = 1
        GOSUB 7900
      CASE OPTION = "SB"
        LN = LINES
        GOSUB 7900
      CASE OPTION[1,1] = "S" AND NUM(OPTION[2,99])
        LN.NO = OPTION[2,99] + 0
        IF LN.NO < 1 OR LN.NO > LINES THEN
          ERRMSG = "** Invalid selection **"
          GOSUB 91000
        END ELSE
          LN = LN.NO
          GOSUB 7900
        END
      CASE NOT(NUM(OPTION))
        ERRMSG = "Invalid entry, please re-enter"
        GOSUB 91000
      CASE OPTION = 1
        FOR P = 1 TO ORD.DET.REC.SIZE
          ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
        NEXT P
        STATUS = "L"
        CALL ORDER.LINE.UPD(CONO,ORDNO,SHPNO,STATUS)
        MORE = 0 - 1
      CASE OPTION = 2
        GOSUB 1200
      CASE OPTION = 3
        GOSUB 1300
      CASE 1
        ERRMSG = "Out of range, please re-enter"
        GOSUB 91000
    END CASE
  WHILE MORE > 0 DO REPEAT
  IF MORE < 0 THEN
    GOTO 100
  END ELSE
    GOTO 99999
  END
*
*---- Ship to PO
1200* 
  IF SHPNO = GEN.SHPNO THEN
    OSD.PO = ORD.PO
    ECD.NUM = 9;SCV.REC(ECD.NUM)<ESN> = OSD.PO
    ECD.ACTION = 5;CALL SCRN.EDIT
  END ELSE
    IF OSD.PO = "" THEN ECD.DEFAULT = ORD.PO
    ECD.NUM = 9;ECD.ACTION = 4;CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN
      OSD.PO = ECD.RET.VALUE
    END
  END
  RETURN
*
*---- Shipping Terms
1300* 
  ECD.NUM = 27
  IF SPT.SHP.TERMS # "" THEN
    ECD.DEFAULT = SPT.SHP.TERMS
    ECD.O.R = "O"
  END
  ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    OSD.SHP.TERMS = ECD.RET.VALUE
  END
  RETURN
*
*---- Scrolling line prompt
7000* 
  GOSUB 7900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
*T28354  P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = "CL"
  P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R%3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
*---- Item
7010* 
*T28354  X = 3;Y = SLN;TYP = 1;MAXL = 15;O.R = "O"
  X = 4;Y = SLN;TYP = 1;MAXL = 15;O.R = "O"
  HMSG = "Enter Finished Goods product No, or <RETURN> for cross reference"
  WHNO = ""
  IF TEMP.MF(1) # "" THEN
    DEFAULT = TEMP.MF(1)
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END" AND OPTION = "A"
      TO.DELETE = DCOUNT(OSD.PROD,VM) + 1
      IF OSD.PROD<1,TO.DELETE> # "" THEN
        TO.DELETE = NUM.ON.SCRN<1,LN>
      END
      GOSUB 7700
      LINES = DCOUNT(NUM.ON.SCRN,VM)
      IF LN > LINES THEN LN = LN - 1
      OLD.START.LINE = 0;GOSUB 7900;GOSUB 7955
      GOTO 7099
    CASE VALUE = "END"
      N = LN;GOSUB 7910
      GOTO 7099
    CASE VALUE = ""
*T28354      X = 3;Y = SLN+1;TYP = 1;MAXL = 45;O.R = "O"
      X = 4;Y = SLN+1;TYP = 1;MAXL = 45;O.R = "O"
      HMSG = "Enter Description keyword/s, or <RETURN> for selection screen"
      CALL EDIT.SUB
      BEGIN CASE
        CASE VALUE = "END"
          GOTO 7010
        CASE VALUE = ""
          ECD.SCRN.NO = ESN + 15
          PDNO = "";WHNO = ""
          CALL FNGD.XREF.SUB(CONO,ORD.CUST,PDNO,WHNO)
          VALUE = PDNO;ECD.SCRN.NO = ESN
        CASE 1
          MAT GEN.XREF.REC = ""
          GXR.CO = CONO
          GXR.NAME = "INV.FNGD"
          GXR.XREF = INVENTORY.XREF
          GXR.FILE = INVENTORY
          GXR.SRCH.ID = VALUE
          CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
          ECD.ACTION = 2;CALL SCRN.EDIT
          VALUE = GXR.ID
      END CASE
      GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
*T28354      P_X = 0 ; P_Y = SLN ; P_VALUE = LN  "R%2" ; P_OPT = "CL"
      P_X = 0 ; P_Y = SLN ; P_VALUE = LN  "R%3" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "" THEN GOTO 7010
*T28354      P_X = 3 ; P_Y = SLN ; P_VALUE = VALUE "L#15" ; P_OPT = ""
      P_X = 4 ; P_Y = SLN ; P_VALUE = VALUE "L#15" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END CASE
  MATREAD INV.REC FROM INVENTORY, CONO:VALUE ELSE
    ERRMSG = "Cannot locate finished goods # ":VALUE
    GOSUB 91000;GOTO 7010
  END
  IF INV.M.LINE # "FNGD" THEN
    ERRMSG = "This is not a Finished Goods Product. Try again !!"
    GOSUB 91000; GOTO 7010
  END
*
  IF TEMP.MF(18) = "K" THEN
    IF VALUE # TEMP.MF(1) THEN
      ERRMSG = "Cannot change a Kitted FNGD item to a Regular FNGD Must Delete Line"
      GOSUB 91000;GOTO 7010
    END
  END
  IF INV.CUST # "" AND INV.CUST # ORD.CUST THEN
    ERRMSG = "A different customer owns this finished goods # ":VALUE
    GOSUB 91000;GOTO 7010
  END
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
    ERRMSG = "Cannot locate Product Line # ":INV.LINE
    GOSUB 91000;GOTO 7010
  END
  WCNT = DCOUNT(INV.WHSE.CODE,VM)
  IF WCNT < 1 THEN
    ERRMSG = "Cannot locate any warehouses for finished goods # ":VALUE
    GOSUB 91000;GOTO 7010
  END
  GOSUB 9000
*T28354  P_X = 24 ; P_Y = SLN ; P_VALUE = INV.UNIT<1,3> "L#3" ; P_OPT = ""
  P_X = 25 ; P_Y = SLN ; P_VALUE = INV.UNIT<1,3> "L#3" ; P_OPT = ""
*T28354  P_X := AM:3 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INV.FULL.DESC "L#45"
  P_X := AM:4 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INV.FULL.DESC "L#45"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  TEMP.MF(1) = VALUE
*
  PDNO = TEMP.MF(1)
* SET UP FOR KIT EXPLOSION
*
  MATREAD IOF.REC FROM INV.FNGD, CONO:PDNO ELSE
    MAT IOF.REC = ""
  END
  BOM.KEY = CONO:IOF.BOM
  MATREAD BOM.REC FROM FNGD.BOM, CONO:IOF.BOM ELSE
    MAT BOM.REC = ""
  END
  IF BOM.TYPE = "K" THEN
    IF SHPNO = GEN.SHPNO THEN
      ERRMSG = "Cannot enter a Kitted FNGD item on a General Ship To"
      GOSUB 91000;GOTO 7010
    END
    NUM.BOM.PROD = DCOUNT(BOM.PROD,VM)
    FOR NBP = 1 TO NUM.BOM.PROD
      PROD.KEY = CONO:BOM.PROD<1,NBP>
      READ REC FROM INVENTORY, PROD.KEY ELSE
        REC = ""
      END
      IF REC<19> # "" AND REC<19> # ORD.CUST THEN
        ERRMSG = "A different customer owns a product in this finished good: # ":VALUE
        GOSUB 91000;GOTO 7010
      END
      IF ORDNO = "N" AND (OPCO.EST.BLD = "A" OR OPCO.EST.BLD = "P") THEN
        READ REC FROM INV.FNGD, PROD.KEY ELSE
          REC = ""
        END
        TEMP.EST = ""
        ECNT = DCOUNT(REC<111>,VM)
        FOR E = 1 TO ECNT WHILE TEMP.EST = ""
          MATREAD EST.REC FROM ESTIMATE, CONO:REC<111,E> THEN
            IF EST.DIV[1,2] = ORD.DIV THEN TEMP.EST = REC<111,E>
          END
        NEXT E
        IF TEMP.EST = "" THEN
          ERRMSG = "Cannot create estimate - No template defined for Div ":ORD.DIV:" / Prod ":BOM.PROD<1,NBP>
          GOSUB 91000
        END
      END
    NEXT NBP
  END ELSE
    IF ORDNO = "N" AND (OPCO.EST.BLD = "A" OR OPCO.EST.BLD = "P") THEN
      TEMP.EST = ""
      ECNT = DCOUNT(IOF.ESTIMATE,VM)
      FOR E = 1 TO ECNT WHILE TEMP.EST = ""
        MATREAD EST.REC FROM ESTIMATE, CONO:IOF.ESTIMATE<1,E> THEN
          IF EST.DIV[1,2] = ORD.DIV THEN TEMP.EST = IOF.ESTIMATE<1,E>
        END
      NEXT E
      IF TEMP.EST = "" THEN
        ERRMSG = "Cannot create estimate - No template defined for Div ":ORD.DIV:" / Prod ":VALUE
        GOSUB 91000
      END
    END
  END
*
*---- Warehouse
7020* 
  BEGIN CASE
    CASE WCNT = 1
      VALUE = INV.WHSE.CODE<1,1>
*T28354      P_X = 19 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
      P_X = 20 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 7021
    CASE WHNO # ""
      VALUE = WHNO
*T28354      P_X = 19 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
      P_X = 20 ; P_Y = SLN ; P_VALUE = VALUE "L#4" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 7021
  END CASE
*T28354  X = 19;Y = SLN;TYP = 1;MAXL = 4;O.R = "O"
  X = 20;Y = SLN;TYP = 1;MAXL = 4;O.R = "O"
  HMSG = "Enter Warehouse - ":INV.WHSE.CODE<1,1>
  FOR W = 2 TO WCNT
    HMSG = HMSG:", ":INV.WHSE.CODE<1,W>
  NEXT W
  IF TEMP.MF(2) # "" THEN
    DEFAULT = TEMP.MF(2)
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END"
      GOTO 7010
    CASE VALUE = "???"
      MAT GEN.XREF.REC = ""
      GXR.CO = CONO
      GXR.NAME = "INV.WHSE.SEL"
      GXR.FILE = WAREHOUSE
      GXR.SRCH.ID = INV.WHSE.CODE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2;CALL SCRN.EDIT
      ECD.ACTION = 3;CALL SCRN.EDIT
      VALUE = GXR.ID
      OLD.START.LINE = 0
      GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
*T28354      P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R%2" ; P_OPT = "CL"
      P_X = 0 ; P_Y = SLN ; P_VALUE = LN "R%3" ; P_OPT = "CL"
*T28354      P_X := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.MF(1)"L#15"
      P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.MF(1)"L#15"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      MATREAD INV.REC FROM INVENTORY, CONO:TEMP.MF(1) ELSE
        MAT INV.REC = ""
        INV.FULL.DESC = STR("?",45)
      END
*T28354      P_X = 24 ; P_Y = SLN ; P_VALUE = INV.UNIT<1,3> "L#3" ; P_OPT = ""
      P_X = 25 ; P_Y = SLN ; P_VALUE = INV.UNIT<1,3> "L#3" ; P_OPT = ""
*T28354      P_X := AM:3 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INV.FULL.DESC"L#45"
      P_X := AM:4 ; P_Y := AM:SLN+1 ; P_VALUE := AM:INV.FULL.DESC"L#45"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "" THEN GOTO 7020
  END CASE
7021* 
  IWH.ID = CONO:TEMP.MF(1):"!":VALUE
  MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
    ERR.FLG='';ERRMSG='';PERIOD=''                                        
    CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG) 
  END ELSE
    ERRMSG = "Cannot locate warehouse (":VALUE:") for item # ":TEMP.MF(1)
    GOSUB 91000
    IF WCNT = 1 OR WHNO # "" THEN GOTO 7010 ELSE GOTO 7020
  END
  ALREADY.RESV = 0
  PCNT = DCOUNT(OSD.PROD,VM)
  PTR = 1
  LOOP
    LOCATE TEMP.MF(1) IN OSD.PROD<1>,PTR SETTING L THEN
      IF (OSD.WHSE<1,L> = VALUE) AND (OSD.KIT<1,L> = "N" OR OSD.KIT<1,L> = "K") THEN
        PTR = 0
        LOCATE L IN NUM.ON.SCRN<1>,1 SETTING LFND ELSE LFND = L
        IF L = NUM.ON.SCRN<1,LFND> THEN
          IF MODE = "A" THEN
            IF LNFLG # "6" THEN
              IF OSD.KIT<1,L> = "N" THEN
                ERRMSG = "Item and warehouse already exist on line # ":LFND
                GOSUB 91000;GOTO 7010
              END
              IF OSD.KIT<1,L> = "K" THEN
                ERRMSG = "Item and warehouse already exist on line # ":LFND
                GOSUB 91000;GOTO 7010
              END
            END
          END
        END ELSE
          PTR = L + 1
        END
      END ELSE
        PTR = L + 1
      END
    END ELSE
      PTR = 0
    END
  UNTIL PTR = 0 DO REPEAT
*
  MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
    MAT FGS.REC = ""
  END
*
  TEMP.MF(2) = VALUE
*T28354  P_X = 19 ; P_Y = SLN ; P_VALUE = TEMP.MF(2)"L#4"; P_OPT = ""
  P_X = 20 ; P_Y = SLN ; P_VALUE = TEMP.MF(2)"L#4"; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NUM.PROD = DCOUNT(ODQ.PROD,VM)
  TEMP.KEY = CONO:TEMP.MF(1):"!":TEMP.MF(2)
  LOCATE TEMP.KEY IN ORIG.PROD<1>,1 SETTING LINDX THEN
    TEMP.CONV = CONVERT(SVM,VM,ORIG.IWH.RESV<1,LINDX>)
    IWH.RSV.FI = TEMP.CONV
    TEMP.CONV = CONVERT(SVM,VM,ORIG.ALOC.AVL<1,LINDX>)
    FGS.A.QTY = TEMP.CONV
    IWH.RESV    = ORIG.IWH.QTY<1,LINDX>
  END ELSE
    ORIG.IWH.QTY = INSERT(ORIG.IWH.QTY,1,LINDX,1,IWH.RESV)
    ORIG.PROD   =INSERT(ORIG.PROD,1,LINDX,1,IWH.ID)
    TEMP.STR = CONVERT(VM,SVM,IWH.RSV.FI)
    ORIG.IWH.RESV=INSERT(ORIG.IWH.RESV,1,LINDX,1,TEMP.STR)
    TEMP.STR = CONVERT(VM,SVM,FGS.A.QTY)
    ORIG.ALOC.AVL=INSERT(ORIG.ALOC.AVL,1,LINDX,0,TEMP.STR)
  END
  IF IWH.ON.HAND - IWH.RESV < 0 THEN
    AVL.RESV = OSD.R.QTY<1,L>
  END ELSE
    AVL.RESV = IWH.ON.HAND - IWH.RESV + OSD.R.QTY<1,L>
  END
  AVL.ALOC = SUM(FGS.M.QTY) - SUM(FGS.A.QTY)
  IF AVL.ALOC < 1 THEN AVL.ALOC = 0
  AVL.ALOC = AVL.ALOC + TEMP.MF(16)<1,1,2>
*
  PDNO = TEMP.MF(1);WHNO = TEMP.MF(2)
  MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHNO ELSE
    MAT WHSE.REC =""
  END
  IF WHS.DIV # ORD.DIV THEN
    IF WHS.DIV # "00" THEN
      ERRMSG = "Warehouse Division ":WHS.DIV:" doesnot match Order Division ":ORD.DIV
      GOSUB 91000
*T28354      P_X = 0 ; P_Y = SLN ; P_VALUE =  LN "R%2" ; P_OPT = "CL"
      P_X = 0 ; P_Y = SLN ; P_VALUE =  LN "R%3" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T28354      P_X = 3 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      P_X = 4 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 7010
    END
  END
*
*---- Order qty
7030* 
*T28354  X = 28;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL;MAXL = 10
  X = 29;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL;MAXL = 10
  MINV = 0;MAXV = 99999999
  IF TEMP.MF(3) # "" THEN
    O.R = "O"
    DEFAULT = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF LNFLG THEN
      N = LN;GOSUB 7910
      GOTO 7099
    END ELSE
      GOTO 7010
    END
  END
  TEMP.MF(3) = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
  TEMP.MF(4) = INT((VALUE * (1 + (CUST.ADDL.OPS<1,1> / 10000))) + .5)
  TEMP.MF(4) = INT(((TEMP.MF(4) / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
*T28354  P_X = 28 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  P_X = 29 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*** SFC CORRECTION DURING QC IN REV10B
  PDNO = TEMP.MF(1);WHNO = TEMP.MF(2)
  MATREAD IOF.REC FROM INV.FNGD, CONO:PDNO ELSE
    MAT IOF.REC = ""
  END
  BOM.KEY = CONO:IOF.BOM
  MATREAD BOM.REC FROM FNGD.BOM, CONO:IOF.BOM ELSE
    MAT BOM.REC = ""
  END
*** SFC
  IF BOM.TYPE = "K" THEN
    CALL ORDER.LINE.BUILD.KIT(CONO,ORDNO,LN,PDNO, MAT BOM.REC, MAT TEMP.MF,MAT ORD.DET.REC,MODE,NUM.ON.SCRN,LNFLG,SHPNO,IOF.BOM,ORIG.PROD,ORIG.IWH.RESV,ORIG.IWH.QTY,ORIG.ALOC.AVL)
    LNFLG = 6
    NUM.PROD = DCOUNT(OSD.PROD,VM)
    NUM.ON.SCRN = ""
    K = 0
    FOR I = 1 TO NUM.PROD
      IF OSD.KIT<1,I>  # "M" THEN
        K = K + 1
        NUM.ON.SCRN<1,K> = I
      END
    NEXT I
    TEMP.INDX = NUM.ON.SCRN<1,LN>
    RESV.PRINT = OSD.KIT.R.QTY<1,TEMP.INDX>
*T28354    P_X = 39 ; P_Y = SLN ; P_VALUE = OCONV(INT(((RESV.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
    P_X = 40 ; P_Y = SLN ; P_VALUE = OCONV(INT(((RESV.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
*T28354    P_X := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OSD.KIT.PRICE<1,TEMP.INDX>,"MD4") "R#10"
    P_X := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(OSD.KIT.PRICE<1,TEMP.INDX>,"MD4") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    LINES = DCOUNT(NUM.ON.SCRN,VM)
    GOTO 7070
  END
*
*---- Reserve qty
7040* 
  IF AVL.RESV < 1 THEN
    VALUE = 0;GOTO 7045
  END
*  P_X = 0 ; P_Y = 21
* P_OPT = "CL"
*  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ERRMSG = "Available on hand quantity = ":OCONV(INT(AVL.RESV / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" 
  GOSUB 91000
*T28354  X = 39;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL
  X = 40;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL
  MAXL = 10;O.R = "O";ORVALDAT = 1;MINV = 0
  MAXV = INT(((AVL.RESV / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
  MINV = INT(((SUM(TEMP.MF(20)) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5);* T20852
  HOLD.MINV = MINV ; * 25201
  VALDAT = "S"
  HMSG = "Enter Quantity or (S) to Select Reserve/Release information"
  BEGIN CASE
    CASE TEMP.MF(11) # ""
      DEFAULT = TEMP.MF(11)
    CASE AVL.RESV < TEMP.MF(4)
      DEFAULT = AVL.RESV
    CASE 1
      DEFAULT = TEMP.MF(4)
  END CASE
  DEFAULT = OCONV(INT(((DEFAULT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
  CALL EDIT.SUB
  P_X = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
7045* 
  BEGIN CASE
    CASE VALUE = "END"
      IF LNFLG THEN
        GOTO 7030
      END ELSE
        GOTO 7010
      END
    CASE VALUE = "S"
      ECD.SCRN.NO = ESN + 7
      RTYPE = "M"
      RTOT = TEMP.MF(11)
      RQTY = TEMP.MF(9)
      RSV.NO = TEMP.MF(6)
      REL.NO = TEMP.MF(10)
      REL.QTY = TEMP.MF(17)
      PROD.SEQ = TEMP.MF(19)
      KIT.TYPE = TEMP.MF(18)
      PICK.QTY = TEMP.MF(20);* T20852
      CALL ORDER.RESERVE.SEL(CONO,("R-":LN),ORD.CUST,ORDNO,SHPNO,PDNO,WHNO,RTYPE,RTOT,RQTY,RSV.NO,REL.NO,REL.QTY,"","",PROD.SEQ,KIT.TYPE,PICK.QTY)
      RECP.CNT = DCOUNT(TEMP.MF(6),SVM)
      FOR N = 1 TO RECP.CNT
        RECP.NO = TEMP.MF(6)<1,1,N>
        LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
          IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> + TEMP.MF(9)<1,1,N>
        END
      NEXT N
      RECP.CNT = DCOUNT(RSV.NO,SVM)
      FOR N = 1 TO RECP.CNT
        RECP.NO = RSV.NO<1,1,N>
        LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
          IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> - RQTY<1,1,N>
        END
      NEXT N
      TEMP.KEY = CONO:TEMP.MF(1):"!":TEMP.MF(2)
      LOCATE TEMP.KEY IN ORIG.PROD<1>,1 SETTING LINDX THEN
        ORIG.IWH.QTY<1,LINDX> = ORIG.IWH.QTY<1,LINDX> - OSD.R.QTY<1,LN> + RTOT
        TEMP.STR = CONVERT(VM,SVM,IWH.RSV.FI)
        ORIG.IWH.RESV<1,LINDX> = TEMP.STR
      END
      TEMP.MF(6) = RSV.NO
      TEMP.MF(9) = RQTY
      TEMP.MF(10) = REL.NO
      TEMP.MF(17) = REL.QTY
      SHPNO=SCV.REC(4)<ESN>;* T20949
      ECD.SCRN.NO = ESN;GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      N = LN;GOSUB 7915
    CASE 1
* there is no type "numeric with no spaces" so I had to improvize.
*
      IF VALUE = "" THEN VALUE = 0
      IF VALUE < HOLD.MINV THEN 
        ERRMSG = " INVALID ENTRY CHECK OPEN PICK TICKETS/RELEASES"
        GOSUB 91000
        GOTO 7040
      END ELSE
        RTYPE = "B"
        RTOT = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
        RQTY = TEMP.MF(9)
        RSV.NO = TEMP.MF(6)
        REL.NO = TEMP.MF(10)
        REL.QTY = TEMP.MF(17)
        PROD.SEQ = TEMP.MF(19)
        KIT.TYPE = TEMP.MF(18)
        CALL ORDER.RESERVE.SEL(CONO,("R-":LN),ORD.CUST,ORDNO,SHPNO,PDNO,WHNO,RTYPE,RTOT,RQTY,RSV.NO,REL.NO,REL.QTY,"","",PROD.SEQ,KIT.TYPE,"")
        RECP.CNT = DCOUNT(TEMP.MF(6),SVM)
        FOR N = 1 TO RECP.CNT
          RECP.NO = TEMP.MF(6)<1,1,N>
          LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
            IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> + TEMP.MF(9)<1,1,N>
          END
        NEXT N
        RECP.CNT = DCOUNT(RSV.NO,SVM)
        FOR N = 1 TO RECP.CNT
          RECP.NO = RSV.NO<1,1,N>
          LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
            IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> - RQTY<1,1,N>
          END
        NEXT N
        TEMP.KEY = CONO:TEMP.MF(1):"!":TEMP.MF(2)
        LOCATE TEMP.KEY IN ORIG.PROD<1>,1 SETTING LINDX THEN
          ORIG.IWH.QTY<1,LINDX> = ORIG.IWH.QTY<1,LINDX> - OSD.R.QTY<1,LN> + RTOT
          TEMP.STR = CONVERT(VM,SVM,IWH.RSV.FI)
          ORIG.IWH.RESV<1,LINDX> = TEMP.STR
        END
        TEMP.MF(6) = RSV.NO
        TEMP.MF(9) = RQTY
        TEMP.MF(10) = REL.NO
        TEMP.MF(17) = REL.QTY
      END
  END CASE
  TEMP.MF(11) = RTOT
*T28354  P_X = 39 ; P_Y = SLN ; P_VALUE = OCONV(INT(((RTOT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  P_X = 40 ; P_Y = SLN ; P_VALUE = OCONV(INT(((RTOT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF TEMP.MF(11) > TEMP.MF(4) THEN
    ERRMSG = "Reserve is more than required"
    GOSUB 91000
  END
*
*---- Manufacture qty
7050* 
  IF AVL.ALOC < 1 THEN
    VALUE = 0;GOTO 7055
  END
*  P_X = 0 ; P_Y = 21 ; P_VALUE = "Available manufacture quantity = ":OCONV(INT(AVL.ALOC / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = "CL"
*  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)    
  ERRMSG = "Available manufacture quantity = ":OCONV(INT(AVL.ALOC / ICR.DV1 * ICR.MT1 / ICR.DV2 + .5),ICR.CNV1) "R#10" 
  GOSUB 91000
*T28354  X = 50;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL
  X = 51;Y = SLN;TYP = ICR.TYPE;SCALER = ICR.SCAL
  MAXL = 10;O.R = "O";ORVALDAT = 1;VALDAT = "S"
  MINV = 0;MAXV = AVL.ALOC
  HMSG = "Enter Quantity or (S) to Select from Jobs"
  BEGIN CASE
    CASE TEMP.MF(14) # ""
      DEFAULT = TEMP.MF(14)
    CASE AVL.ALOC < TEMP.MF(4) - TEMP.MF(11)
      DEFAULT = AVL.ALOC
    CASE 1
      DEFAULT = TEMP.MF(4) - TEMP.MF(11)
  END CASE
  DEFAULT = OCONV(INT(((DEFAULT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
  CALL EDIT.SUB
  P_X = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
7055* 
  BEGIN CASE
    CASE VALUE = "END"
      IF LNFLG THEN
        GOTO 7030
      END ELSE
        GOTO 7010
      END
    CASE VALUE = "S" AND FGS.JOB = ""
      ERRMSG = "Cannot locate any jobs with on order/manufacture qty"
      GOSUB 91000
    CASE VALUE = "S"
      ECD.SCRN.NO = ESN + 6
      AQTY = "";RCNT = DCOUNT(TEMP.MF(13)<1,1>,SVM)
      OLD.QTY = TEMP.MF(12);* T20234
      FOR R = 1 TO RCNT
        LOCATE TEMP.MF(13)<1,1,R> IN FGS.JOB<1>,1 SETTING JPTR THEN
          AQTY<1,JPTR> = TEMP.MF(12)<1,1,R>
        END
        TEMP.MF(12)<1,1,R> = 0
      NEXT R
      ATYPE = "M";ATOT = TEMP.MF(14)
      CALL ORDER.JOB.SEL(CONO,ORDNO,PDNO,WHNO,ATYPE,ATOT,AQTY)
      FOR R = 1 TO RCNT
        LOCATE TEMP.MF(13)<1,1,R> IN FGS.JOB<1>,1 SETTING RINDX THEN
          FGS.A.QTY<1,RINDX> = FGS.A.QTY<1,RINDX> - OLD.QTY<1,1,R>
        END
      NEXT R
      RCNT = DCOUNT(AQTY,VM)
      FOR R = 1 TO RCNT
        IF AQTY<1,R> > 0 THEN
          LOCATE FGS.JOB<1,R> IN TEMP.MF(13)<1,1>,1 SETTING JPTR ELSE
            TEMP.MF(13)<1,1,JPTR> = FGS.JOB<1,R>
          END
          TEMP.MF(12)<1,1,JPTR> = AQTY<1,R>
          FGS.A.QTY<1,R> = FGS.A.QTY<1,R> + AQTY<1,R>;*T20234
        END
      NEXT R
      TEMP.STR = CONVERT(VM,SVM,FGS.A.QTY)
      ORIG.ALOC.AVL<1,LINDX> = TEMP.STR
      SHPNO=SCV.REC(4)<ESN>;* T20949
      ECD.SCRN.NO = ESN;GOSUB 8000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      N = LN;GOSUB 7915
    CASE 1
      TEMP.MF(14) = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
      ATOT = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
      AQTY = "";RCNT = DCOUNT(TEMP.MF(13)<1,1>,SVM)
      OLD.QTY = TEMP.MF(12);* T20234
      FOR R = 1 TO RCNT
        LOCATE TEMP.MF(13)<1,1,R> IN FGS.JOB<1>,1 SETTING JPTR THEN
          AQTY<1,JPTR> = TEMP.MF(12)<1,1,R>
        END
        TEMP.MF(12)<1,1,R> = 0
      NEXT R
      ATYPE = "B"
      CALL ORDER.JOB.SEL(CONO,ORDNO,PDNO,WHNO,ATYPE,ATOT,AQTY)
      FOR R = 1 TO RCNT
        LOCATE TEMP.MF(13)<1,1,R> IN FGS.JOB<1>,1 SETTING RINDX THEN
          FGS.A.QTY<1,RINDX> = FGS.A.QTY<1,RINDX> - OLD.QTY<1,1,R>
        END
      NEXT R
      RCNT = DCOUNT(AQTY,VM)
      FOR R = 1 TO RCNT
        IF AQTY<1,R> > 0 THEN
          LOCATE FGS.JOB<1,R> IN TEMP.MF(13)<1,1>,1 SETTING JPTR ELSE
            TEMP.MF(13)<1,1,JPTR> = FGS.JOB<1,R>
          END
          TEMP.MF(12)<1,1,JPTR> = AQTY<1,R>
          FGS.A.QTY<1,R> = FGS.A.QTY<1,R> + AQTY<1,R>;*T20234
        END
      NEXT R
      TEMP.STR = CONVERT(VM,SVM,FGS.A.QTY)
      ORIG.ALOC.AVL<1,LINDX> = TEMP.STR
  END CASE
  TEMP.MF(14) = ATOT
*T28354  P_X = 50 ; P_Y = SLN ; P_VALUE = OCONV(INT(((ATOT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  P_X = 51 ; P_Y = SLN ; P_VALUE = OCONV(INT(((ATOT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF TEMP.MF(14) > 0 AND TEMP.MF(14) > TEMP.MF(4) - TEMP.MF(11) THEN
    ERRMSG = "Manufacturing more than required"
    GOSUB 91000
  END
*
  IF TEMP.MF(13)<1,1,2> # "" THEN
*T28354    P_X = 50 ; P_Y = SLN+1 ; P_VALUE =  "MULTI" "L#8" ; P_OPT = ""
    P_X = 51 ; P_Y = SLN+1 ; P_VALUE =  "MULTI" "L#8" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
*T28354    P_X = 50 ; P_Y = SLN+1 ; P_VALUE =  TEMP.MF(13) "L#8" ; P_OPT = ""
    P_X = 51 ; P_Y = SLN+1 ; P_VALUE =  TEMP.MF(13) "L#8" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF MODE = "A" THEN
    INDX = DCOUNT(OSD.PROD,VM) + 1
    GOSUB 7920
  END
*
*---- Unit Price
7060* 
  B.QTY = TEMP.MF(3) - TEMP.MF(11) - TEMP.MF(14) - OSD.S.QTY<1,INDX>;* 20905
  BEGIN CASE
    CASE CATG.SALE.TYPE = "EP" AND B.QTY > 0;* 20905
      DEFAULT = 0
    CASE CATG.SALE.TYPE = "EP"
      DEFAULT = 0
      JCNT = DCOUNT(TEMP.MF(13)<1,1>,SVM)
      FOR J = JCNT TO 1 STEP -1 UNTIL DEFAULT
        MATREAD JOB.REC FROM JOB, CONO:TEMP.MF(13)<1,1,J> THEN
          IF JOB.EST # "" THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:JOB.EST THEN
              BEGIN CASE
                CASE INV.UNIT<1,5> = "M"
                  UNIT = 1
                CASE INV.UNIT<1,5> = "C"
                  UNIT = 10
                CASE 1
                  UNIT = 1000
              END CASE
              QTY = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
              LOCATE QTY IN EST.QTY<1>,1 BY "AR" SETTING QPTR ELSE NULL
              IF QPTR > DCOUNT(EST.QTY,VM) THEN QPTR = QPTR - 1
              DEFAULT = INT(EST.OM.PRICE.M<1,QPTR> * 100 / UNIT + .5)
            END
          END
        END
      NEXT J
      IF NOT(DEFAULT) THEN
        FCNT = DCOUNT(TEMP.MF(6)<1,1>,SVM)
        FOR F = FCNT TO 1 STEP -1 UNTIL DEFAULT
          LOCATE TEMP.MF(6)<1,1,F> IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
            MATREAD JOB.REC FROM JOB, CONO:IWH.PO.NO.FI<1,FPTR> THEN
              IF JOB.EST # "" THEN
                MATREAD EST.REC FROM ESTIMATE, CONO:JOB.EST THEN
                  BEGIN CASE
                    CASE INV.UNIT<1,5> = "M"
                      UNIT = 1
                    CASE INV.UNIT<1,5> = "C"
                      UNIT = 10
                    CASE 1
                      UNIT = 1000
                  END CASE
                  QTY = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
                  LOCATE QTY IN EST.QTY<1>,1 BY "AR" SETTING QPTR ELSE NULL
                  IF QPTR > DCOUNT(EST.QTY,VM) THEN QPTR = QPTR - 1
                  DEFAULT = INT(EST.OM.PRICE.M<1,QPTR> * 100 / UNIT + .5)
                END
              END
            END
          END
        NEXT F
      END
    CASE CATG.SALE.TYPE = "PT"
      MATREAD PGT.REC FROM PRICE.TABLE, CONO:IWH.PRICE.GRP ELSE
        MAT PGT.REC=''
      END
      DEFAULT = ""
      QTY = OCONV(INT(((TEMP.MF(3) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
      QCNT = DCOUNT(PGT.QTY,VM)
      FOR Q = 1 TO QCNT WHILE DEFAULT = ""
        IF QTY <= PGT.QTY<1,Q>+0 THEN
          DEFAULT = PGT.PRICE<1,Q>
        END
      NEXT Q
      IF OSD.G.QTY<1,LN> # TEMP.MF(3) THEN TEMP.MF(15) = ""
    CASE CATG.SALE.TYPE = "ES"
      DEFAULT = IWH.EST.SALE
    CASE CATG.SALE.TYPE = "SP"
      BEGIN CASE
        CASE NOT(NUM(CUST.PRICE.CODE))
          DEFAULT = IWH.SELL<1,1>
        CASE CUST.PRICE.CODE > 0 AND CUST.PRICE.CODE < 5
          DEFAULT = IWH.SELL<1,CUST.PRICE.CODE>
        CASE 1
          DEFAULT = IWH.SELL<1,1>
      END CASE
    CASE CATG.SALE.TYPE = "SD"
      DEFAULT = IWH.STD.COST
    CASE CATG.SALE.TYPE = "AV"
      DEFAULT = IWH.AVG.COST
    CASE CATG.SALE.TYPE = "LP"
      DEFAULT = IWH.COST.FI<1,DCOUNT(IWH.COST.FI,VM)>
*--- CATG.SALE.TYPE = "CB"
    CASE CATG.FNGD.TYPE = "ES"
      DEFAULT = IWH.EST.SALE
    CASE CATG.FNGD.TYPE = "SP"
      BEGIN CASE
        CASE NOT(NUM(CUST.PRICE.CODE))
          DEFAULT = IWH.SELL<1,1>
        CASE CUST.PRICE.CODE > 0 AND CUST.PRICE.CODE < 5
          DEFAULT = IWH.SELL<1,CUST.PRICE.CODE>
        CASE 1
          DEFAULT = IWH.SELL<1,1>
      END CASE
    CASE CATG.FNGD.TYPE = "SD"
      DEFAULT = IWH.STD.COST
    CASE CATG.FNGD.TYPE = "AV"
      DEFAULT = IWH.AVG.COST
    CASE CATG.FNGD.TYPE = "LP"
      DEFAULT = IWH.COST.FI<1,DCOUNT(IWH.COST.FI,VM)>
    CASE 1
      DEFAULT = 0
  END CASE
  DEFAULT = INT(DEFAULT + .5)
  BEGIN CASE
    CASE CATG.SALE.TYPE = "EP" AND ORD.ESTIMATE = "" AND B.QTY > 0;* T20905
      TEMP.MF(15) = DEFAULT
*T28354      P_X = 61 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      P_X = 62 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CASE OPCO.PRC.MNT = "O" OR OPCO.PRC.MNT = "B"
*T28354      X = 61;Y = SLN;MAXL = 10;TYP = 4;SCALER = 4;O.R = "O"
      X = 62;Y = SLN;MAXL = 10;TYP = 4;SCALER = 4;O.R = "O"
      IF TEMP.MF(15) # "" THEN
        DEFAULT = TEMP.MF(15)
      END
      DEFAULT = OCONV(DEFAULT,"MD4")
      CALL EDIT.SUB
      IF VALUE = "END" THEN
        IF LNFLG THEN
          GOTO 7030
        END ELSE
          GOTO 7010
        END
      END ELSE
        TEMP.MF(15) = VALUE
      END
    CASE TEMP.MF(15) = ""
      TEMP.MF(15) = DEFAULT
*T28354      P_X = 61 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      P_X = 62 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CASE 1
*T28354      P_X = 61 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      P_X = 62 ; P_Y = SLN ; P_VALUE = OCONV(TEMP.MF(15),"MD4") "R#10" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END CASE
  IF (OPTION = "A" AND LNFLG = 0) THEN
    INDX = DCOUNT(OSD.PROD,VM) + 1
    NUM.ON.SCRN<1,LN> = INDX
  END ELSE
    INDX = NUM.ON.SCRN<1,LN>
  END
  OSD.PROD<1,INDX> = TEMP.MF(1)
  OSD.WHSE<1,INDX> = TEMP.MF(2)
  OSD.G.QTY<1,INDX> = TEMP.MF(3)
  OSD.O.QTY<1,INDX> = TEMP.MF(4)
  OSD.RECP.NO<1,INDX> = TEMP.MF(6)
  OSD.FI.QTY<1,INDX> = TEMP.MF(9)
  OSD.REL.NO<1,INDX> = TEMP.MF(10)
  OSD.R.QTY<1,INDX> = TEMP.MF(11)
  OSD.JOB.QTY<1,INDX> = TEMP.MF(12)
  OSD.JOB<1,INDX> = TEMP.MF(13)
  OSD.A.QTY<1,INDX> = TEMP.MF(14)
  OSD.PRICE<1,INDX> = TEMP.MF(15)
  OSD.OLD.QTY<1,INDX> = TEMP.MF(16)
  OSD.REL.QTY<1,INDX> = TEMP.MF(17)
  OSD.KIT<1,INDX>     = "N"
  IF MODE = "A" THEN
    OSD.BOM.NUM<1,INDX>  = ''
    NUM.PROD= DCOUNT(OSD.PROD,VM)
    PTR = 1
    SEQ.FND = 0
    LOOP
      LOCATE TEMP.MF(1) IN OSD.PROD<1>,PTR SETTING INDX1 THEN
        SEQ.FND = SEQ.FND + 1
        PTR = INDX1
      END ELSE
        PTR = 0
      END
    WHILE PTR DO
      PTR = PTR + 1
    REPEAT
    OSD.PROD.SEQ<1,INDX> = SEQ.FND
  END
  TEMP.MF(19) = OSD.PROD.SEQ<1,INDX>
  IF MODE = "C" THEN
  END
  PQTY = OSD.G.QTY<1,INDX> / 1000
  OSD.AMT<1,INDX> = INT(OSD.PRICE<1,LN> / 100 * PQTY / (INV.COST.WT / 100) + .5)
  DEFAULT = ""
  LINES = DCOUNT(NUM.ON.SCRN,VM)
*
*---- Comments
7070* 
  DEFAULT = ""
*T28354  X = 72;Y = SLN;TYP = 1;MAXL = 1;O.R = "O"
  X = 73;Y = SLN;TYP = 1;MAXL = 1;O.R = "O"
  VALDAT = "*"
  IF OPTION # "M" THEN
    TEMP.INDX = NUM.ON.SCRN<1,LN>
  END
  IF OSD.COMMENT<1,TEMP.INDX> # "" THEN
    DEFAULT = "*"
  END
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = "END"
      IF MODE = "A" THEN LNFLG = 6
      IF LNFLG THEN
        IF LNFLG = 6 THEN
          GOTO 7010
        END ELSE
          GOTO 7030
        END
      END ELSE
        GOTO 7010
      END
    CASE VALUE = ""
      OSD.COMMENT<1,TEMP.INDX> = ""
    CASE 1
      X = 0;Y = 21;TYP = 11;MAXL = 65
      O.R = "O";DEFAULT = OSD.COMMENT<1,TEMP.INDX>
      PMSG = "Comment :"
      HMSG = "Enter a Comment"
      CALL EDIT.SUB
      P_X = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "END" THEN
        IF LNFLG THEN
          GOTO 7030
        END ELSE
          GOTO 7010
        END
      END
      OSD.COMMENT<1,TEMP.INDX> = VALUE
  END CASE
*
  NUM.PROD = DCOUNT(OSD.PROD,VM);LNFLG = 0
  LINES = 1
  FOR I = 1 TO NUM.PROD
    IF OSD.KIT<1,I>  # "M" THEN
      LINES = LINES + 1
    END
  NEXT I
  LINES = DCOUNT(NUM.ON.SCRN,VM)
7099* 
  LNFLG = 0
  RETURN
*
*---- Delete a line
7700* 
  OSD.PROD = DELETE(OSD.PROD,1,TO.DELETE,0)
  OSD.WHSE = DELETE(OSD.WHSE,1,TO.DELETE,0)
  OSD.O.QTY = DELETE(OSD.O.QTY,1,TO.DELETE,0)
  OSD.R.QTY = DELETE(OSD.R.QTY,1,TO.DELETE,0)
  OSD.A.QTY = DELETE(OSD.A.QTY,1,TO.DELETE,0)
  OSD.F.QTY = DELETE(OSD.F.QTY,1,TO.DELETE,0)
  OSD.S.QTY = DELETE(OSD.S.QTY,1,TO.DELETE,0)
  OSD.I.QTY = DELETE(OSD.I.QTY,1,TO.DELETE,0)
  OSD.G.QTY = DELETE(OSD.G.QTY,1,TO.DELETE,0)
  OSD.PRICE = DELETE(OSD.PRICE,1,TO.DELETE,0)
  OSD.COMMENT = DELETE(OSD.COMMENT,1,TO.DELETE,0)
  OSD.JOB = DELETE(OSD.JOB,1,TO.DELETE,0)
  OSD.JOB.QTY = DELETE(OSD.JOB.QTY,1,TO.DELETE,0)
  OSD.RECP.NO = DELETE(OSD.RECP.NO,1,TO.DELETE,0)
  OSD.FI.QTY = DELETE(OSD.FI.QTY,1,TO.DELETE,0)
  OSD.REL.NO = DELETE(OSD.REL.NO,1,TO.DELETE,0)
  OSD.REL.QTY = DELETE(OSD.REL.QTY,1,TO.DELETE,0)
  OSD.P.QTY = DELETE(OSD.P.QTY,1,TO.DELETE,0)
  OSD.KIT     = DELETE(OSD.KIT,1,TO.DELETE,0)
  OSD.PROD.SEQ     = DELETE(OSD.PROD.SEQ,1,TO.DELETE,0)
  OSD.BOM.NUM     = DELETE(OSD.BOM.NUM,1,TO.DELETE,0)
  OSD.KIT.O.QTY = DELETE(OSD.KIT.O.QTY,1,TO.DELETE,0)
  OSD.KIT.R.QTY = DELETE(OSD.KIT.R.QTY,1,TO.DELETE,0)
  OSD.KIT.A.QTY = DELETE(OSD.KIT.A.QTY,1,TO.DELETE,0)
  OSD.KIT.F.QTY = DELETE(OSD.KIT.F.QTY,1,TO.DELETE,0)
  OSD.KIT.S.QTY = DELETE(OSD.KIT.S.QTY,1,TO.DELETE,0)
  OSD.KIT.I.QTY = DELETE(OSD.KIT.I.QTY,1,TO.DELETE,0)
  OSD.KIT.G.QTY = DELETE(OSD.KIT.G.QTY,1,TO.DELETE,0)
  OSD.KIT.PRICE = DELETE(OSD.KIT.PRICE,1,TO.DELETE,0)
  PTR = 1
  LOOP
    IF OSD.KIT<1,TO.DELETE> = "M" THEN
      OSD.PROD = DELETE(OSD.PROD,1,TO.DELETE,0)
      OSD.WHSE = DELETE(OSD.WHSE,1,TO.DELETE,0)
      OSD.O.QTY = DELETE(OSD.O.QTY,1,TO.DELETE,0)
      OSD.R.QTY = DELETE(OSD.R.QTY,1,TO.DELETE,0)
      OSD.A.QTY = DELETE(OSD.A.QTY,1,TO.DELETE,0)
      OSD.F.QTY = DELETE(OSD.F.QTY,1,TO.DELETE,0)
      OSD.S.QTY = DELETE(OSD.S.QTY,1,TO.DELETE,0)
      OSD.I.QTY = DELETE(OSD.I.QTY,1,TO.DELETE,0)
      OSD.G.QTY = DELETE(OSD.G.QTY,1,TO.DELETE,0)
      OSD.PRICE = DELETE(OSD.PRICE,1,TO.DELETE,0)
      OSD.COMMENT = DELETE(OSD.COMMENT,1,TO.DELETE,0)
      OSD.JOB = DELETE(OSD.JOB,1,TO.DELETE,0)
      OSD.JOB.QTY = DELETE(OSD.JOB.QTY,1,TO.DELETE,0)
      OSD.RECP.NO = DELETE(OSD.RECP.NO,1,TO.DELETE,0)
      OSD.FI.QTY = DELETE(OSD.FI.QTY,1,TO.DELETE,0)
      OSD.REL.NO = DELETE(OSD.REL.NO,1,TO.DELETE,0)
      OSD.REL.QTY = DELETE(OSD.REL.QTY,1,TO.DELETE,0)
      OSD.P.QTY = DELETE(OSD.P.QTY,1,TO.DELETE,0)
      OSD.KIT     = DELETE(OSD.KIT,1,TO.DELETE,0)
      OSD.BOM.NUM     = DELETE(OSD.BOM.NUM,1,TO.DELETE,0)
      OSD.PROD.SEQ     = DELETE(OSD.PROD.SEQ,1,TO.DELETE,0)
      OSD.KIT.O.QTY = DELETE(OSD.KIT.O.QTY,1,TO.DELETE,0)
      OSD.KIT.R.QTY = DELETE(OSD.KIT.R.QTY,1,TO.DELETE,0)
      OSD.KIT.A.QTY = DELETE(OSD.KIT.A.QTY,1,TO.DELETE,0)
      OSD.KIT.F.QTY = DELETE(OSD.KIT.F.QTY,1,TO.DELETE,0)
      OSD.KIT.S.QTY = DELETE(OSD.KIT.S.QTY,1,TO.DELETE,0)
      OSD.KIT.I.QTY = DELETE(OSD.KIT.I.QTY,1,TO.DELETE,0)
      OSD.KIT.G.QTY = DELETE(OSD.KIT.G.QTY,1,TO.DELETE,0)
      OSD.KIT.PRICE = DELETE(OSD.KIT.PRICE,1,TO.DELETE,0)
    END ELSE
      PTR = 0
    END
  UNTIL PTR = 0 DO REPEAT
* T 26356                                 
  FOR I = NUM.PROD TO 1 STEP -1             
    IF OSD.PROD<1,I> = "K" THEN             
      OSD.PROD.SEQ<1,I> = 1                 
    END ELSE                                
      START.PLACE = I-1                     
      NUM.TIMES.FOUND = 1                   
      TEMP.PROD = OSD.PROD<1,I>             
      FOR II = START.PLACE TO 1 STEP -1     
        IF TEMP.PROD = OSD.PROD<1,II> THEN  
          NUM.TIMES.FOUND +=1               
        END                                 
      NEXT II                               
      OSD.PROD.SEQ<1,I> = NUM.TIMES.FOUND   
    END                                     
  NEXT I                                    
* T 26356                                 
  NUM.PROD = DCOUNT(OSD.PROD,VM)
  NUM.ON.SCRN = ""
  K = 0
  FOR I = 1 TO NUM.PROD
    IF OSD.KIT<1,I>  # "M" THEN
      K = K + 1
      NUM.ON.SCRN<1,K> = I
    END
  NEXT I
  LINES = DCOUNT(NUM.ON.SCRN,VM)
  RETURN
*
*---- Line # to change or delete
7800* 
  GOSUB 7900
  ECD.NUM = 42;SCV.REC(ECD.NUM)<ESN> = ""
  ECD.MINV = OLD.START.LINE;ECD.MAXV = LAST.LINE
  ECD.ACTION = 4;CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF NUM(LN.NO) THEN
    TEMP.INDX = NUM.ON.SCRN<1,LN.NO>
  END ELSE
    TEMP.INDX = 0
  END
  ERR.MSG = 0
  BEGIN CASE
    CASE LN.NO = "" OR LN.NO = "END"
      LN.NO = 0
    CASE LN.NO < 1
    CASE OSD.KIT<1,TEMP.INDX> = "M"
      ERR.MSG = 1
      ERRMSG = "Cannot change a Product that is a member of a Kit"
      GOSUB 91000
    CASE SUM(OSD.P.QTY<1,TEMP.INDX>)
      LNFLG = 5
    CASE OSD.KIT<1,TEMP.INDX> = "K"
      IF (SUM(OSD.FI.QTY<1,TEMP.INDX>) + SUM(OSD.FI.QTY<1,TEMP.INDX+1>)) > 0 THEN
        LNFLG = 3
      END
    CASE OSD.I.QTY<1,TEMP.INDX> > 0
      LNFLG = 1
    CASE OSD.S.QTY<1,TEMP.INDX> > 0
      LNFLG = 2
    CASE OSD.R.QTY<1,TEMP.INDX> > 0 OR OSD.RECP.NO<1,TEMP.INDX> # ""
      LNFLG = 3
* code under prevents deleteing of the line on Order Detail screen
* if line uder has some quantitiy in FIFO bucket.
    CASE OSD.KIT.R.QTY<1,TEMP.INDX> > 0
      LNFLG = 3
    CASE OSD.A.QTY<1,TEMP.INDX> > 0 OR OSD.JOB<1,TEMP.INDX> # ""
      LNFLG = 4
  END CASE
  RETURN
*
*---- Display scrolling lines
7900* 
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 7990
  OLD.START.LINE = START.LINE
  ECD.NUM = 31
  SCV.REC(ECD.NUM)<ESN> = INT(LAST.LINE/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5;CALL SCRN.EDIT
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    GOSUB 7910
    CNT = CNT + 1
*
7901 *
*
  NEXT N
*
7902 *
*
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
7990* 
  RETURN
*
*---- Display a single line
7910* 
7911* 
  INDX = NUM.ON.SCRN<1,N>
  MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,INDX> ELSE
    MAT INV.REC = "";INV.FULL.DESC = "Unknown"
  END
  GOSUB 9000
  IF OSD.KIT<1,INDX> = "K" THEN
    RESV.PRINT = OSD.KIT.R.QTY<1,INDX>
    ORDER.PRICE = OSD.KIT.PRICE<1,INDX>
* T27007 v
    IF (OV.TOGGLE) THEN                  
      ORDER.PRINT =OSD.KIT.O.QTY<1,INDX> 
    END ELSE                             
      ORDER.PRINT = OSD.KIT.G.QTY<1,INDX>
    END                                  
* T27007 ^
  END ELSE
    RESV.PRINT = OSD.R.QTY<1,INDX>
    ORDER.PRICE = OSD.PRICE<1,INDX>
* T27007 v
    IF (OV.TOGGLE) THEN              
      ORDER.PRINT=OSD.O.QTY<1,INDX>  
    END ELSE                         
      ORDER.PRINT = OSD.G.QTY<1,INDX>
    END                              
* T27007 ^
  END
*T28354  P_X = 0 ; P_Y = SLN ; P_VALUE = N"R%2" ; P_OPT = "CL"
  P_X = 0 ; P_Y = SLN ; P_VALUE = N"R%3" ; P_OPT = "CL"
*T28354  P_X := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.PROD<1,INDX> "L#15"
  P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:OSD.PROD<1,INDX> "L#15"
*T28354  P_X := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM: OSD.WHSE<1,INDX> "L#4"
  P_X := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM: OSD.WHSE<1,INDX> "L#4"
*T28354  P_X := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM: INV.UNIT<1,3> "L#3"
  P_X := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM: INV.UNIT<1,3> "L#3"
  TMP.ID=CONO:OSD.PROD<1,INDX>:"!":OSD.WHSE<1,INDX>
  MATREAD IWH.REC FROM INV.WHSE,TMP.ID ELSE
    MAT IWH.REC = ""
  END
*T28354  P_X := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((ORDER.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((ORDER.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
*T28354  P_X := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((RESV.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((RESV.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
*T28354  P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((OSD.A.QTY<1,INDX> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((OSD.A.QTY<1,INDX> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  IF ORDER.PRICE > 0 THEN
*T28354    P_X := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(ORDER.PRICE,"MD4") "R#10"
    P_X := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(ORDER.PRICE,"MD4") "R#10"
  END ELSE
*T28354    P_X := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(10)
    P_X := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(10)
  END
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOSUB 7920
*T28354  P_X = 3 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
  P_X = 4 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45" ; P_OPT = ""
  IF OSD.JOB<1,INDX,2> # "" THEN
*T28354    P_X := AM:50 ; P_Y := AM:SLN+1 ; P_VALUE := AM: "MULTI" "L#8"
    P_X := AM:51 ; P_Y := AM:SLN+1 ; P_VALUE := AM: "MULTI" "L#8"
  END ELSE
*T28354    P_X := AM:50 ; P_Y := AM:SLN+1 ; P_VALUE := AM: OSD.JOB<1,INDX> "L#8"
    P_X := AM:51 ; P_Y := AM:SLN+1 ; P_VALUE := AM: OSD.JOB<1,INDX> "L#8"
  END
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- Display temp line
7915* 
  MATREAD INV.REC FROM INVENTORY, CONO:TEMP.MF(01) ELSE
    MAT INV.REC = "";INV.FULL.DESC = "Unknown"
  END
  GOSUB 9000
*T28354  P_X = 0 ; P_Y = SLN ; P_VALUE = N "R%2" ; P_OPT = "CL"
  P_X = 0 ; P_Y = SLN ; P_VALUE = N "R%3" ; P_OPT = "CL"
*T28354  P_X := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.MF(01) "L#15"
  P_X := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TEMP.MF(01) "L#15"
*T28354  P_X := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM: TEMP.MF(02) "L#4"
  P_X := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM: TEMP.MF(02) "L#4"
*T28354  P_X := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM: INV.UNIT<1,3> "L#3"
  P_X := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM: INV.UNIT<1,3> "L#3"
  TMP.ID=CONO:TEMP.MF(01):"!":TEMP.MF(02)
  MATREAD IWH.REC FROM INV.WHSE,TMP.ID ELSE
    MAT IWH.REC = ""
  END
*T28354  P_X := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(03) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(03) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
*T28354  P_X := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(11) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:40 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(11) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
*T28354  P_X := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(14) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  P_X := AM:51 ; P_Y := AM:SLN ; P_VALUE := AM: OCONV(INT(((TEMP.MF(14) / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) "R#10"
  IF TEMP.MF(15) > 0 THEN
*T28354    P_X := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.MF(15),"MD4") "R#10"
    P_X := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TEMP.MF(15),"MD4") "R#10"
  END ELSE
*T28354    P_X := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(10)
    P_X := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(10)
  END
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOSUB 7920
*T28354  P_X = 3 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45"  ; P_OPT = ""
  P_X = 4 ; P_Y = SLN+1 ; P_VALUE = INV.FULL.DESC "L#45"  ; P_OPT = ""
  IF TEMP.MF(13)<1,1,2> # "" THEN
*T28354    P_X := AM:50 ; P_Y := AM:SLN+1 ; P_VALUE := AM: "MULTI" "L#8" 
    P_X := AM:51 ; P_Y := AM:SLN+1 ; P_VALUE := AM: "MULTI" "L#8" 
  END ELSE
*T28354    P_X := AM:50 ; P_Y := AM:SLN+1 ; P_VALUE := AM: TEMP.MF(13) "L#8" 
    P_X := AM:51 ; P_Y := AM:SLN+1 ; P_VALUE := AM: TEMP.MF(13) "L#8" 
  END
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*---- Line status
7920* 
  IF OSD.COMMENT<1,INDX> = "" THEN
    STATUS = ""
  END ELSE
    STATUS = "*"
  END
*T28354  P_X = 72 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  P_X = 73 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  PTR = 1
  LOOP
    LOCATE OSD.PROD<1,INDX> IN ODQ.PROD<1>,PTR SETTING PPTR THEN
      BEGIN CASE
        CASE (OSD.WHSE<1,INDX> # ODQ.WHSE<1,PPTR>) OR (OSD.KIT<1,INDX> # ODQ.KIT<1,PPTR>) OR (OSD.PROD.SEQ<1,INDX> # ODQ.PROD.SEQ<1,PPTR>) 
        CASE ODQ.G.QTY<1,PPTR>+0 > 0;*T20234
          STATUS = "*"
          PTR = 0
        CASE 1
          STATUS = ""
          PTR = 0
      END CASE
    END ELSE
      STATUS = ""
      PTR = 0
    END
  WHILE PTR DO
    PTR = PPTR + 1
  REPEAT
*T28354  P_X = 74 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  P_X = 75 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  STATUS = ""
  IF OSD.REL.NO<1,INDX> # "" THEN
    STATUS = "*"
  END ELSE
    OCNT = DCOUNT(ORD.REL.NO,VM)
    FOR O = 1 TO OCNT UNTIL STATUS # ""
      MATREAD ORR.REC FROM ORDER.RELEASE, CONO:ORD.REL.NO<1,O> THEN
        IF ORR.STATUS<1,1> # "COMPLETED" AND ORR.SHIP.TO = SHPNO AND ORR.QTY<1,INDX>+0 > 0 THEN
          STATUS = "*"
        END
      END
    NEXT O
  END
*T28354  P_X = 76 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  P_X = 77 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF OSD.KIT<1,INDX> = "N" THEN
    BEGIN CASE
      CASE OSD.O.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.I.QTY<1,INDX> >= OSD.O.QTY<1,INDX>
        STATUS = "I"
      CASE OSD.S.QTY<1,INDX> >= OSD.O.QTY<1,INDX>
        STATUS = "S"
      CASE OSD.A.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.F.QTY<1,INDX> >= OSD.A.QTY<1,INDX>
        STATUS = "F"
      CASE 1
        STATUS = "M"
    END CASE
  END
  IF OSD.KIT<1,INDX> = "K" THEN
    BEGIN CASE
      CASE OSD.KIT.O.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.KIT.I.QTY<1,INDX> >= OSD.KIT.O.QTY<1,INDX>
        STATUS = "I"
      CASE OSD.KIT.S.QTY<1,INDX> >= OSD.KIT.O.QTY<1,INDX>
        STATUS = "S"
      CASE OSD.KIT.A.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.KIT.F.QTY<1,INDX> >= OSD.KIT.A.QTY<1,INDX>
        STATUS = "F"
      CASE 1
        STATUS = "M"
    END CASE
  END
*T28354  P_X = 78 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  P_X = 79 ; P_Y = SLN ; P_VALUE =  STATUS "L#1" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
7950* 
  ECD.NUM = 31
  SCV.REC(ECD.NUM)<ESN> = INT(LN/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5;CALL SCRN.EDIT
7955* 
  ECD.NUM = 32
  SCV.REC(ECD.NUM)<ESN> = INT(LINES/PAGE.SIZE+.9) "R%2"
  ECD.ACTION = 5;CALL SCRN.EDIT
  RETURN
*
*---- Display data
8000* 
  ECD.ACTION = 3;CALL SCRN.EDIT
  OLD.START.LINE = 0;GOSUB 7900
  RETURN
8888 *
  MAT TEMP.MF = ""
  INDX = NUM.ON.SCRN<1,LN>
  IF INDX > 0 THEN
    TEMP.MF(01) = OSD.PROD<1,INDX>
    TEMP.MF(02) = OSD.WHSE<1,INDX>
    TEMP.MF(04) = OSD.O.QTY<1,INDX>
    TEMP.MF(06) = OSD.RECP.NO<1,INDX>
    TEMP.MF(09) = OSD.FI.QTY<1,INDX>
    TEMP.MF(10) = OSD.REL.NO<1,INDX>
    TEMP.MF(11) = OSD.R.QTY<1,INDX>
    TEMP.MF(12) = OSD.JOB.QTY<1,INDX>
    TEMP.MF(13) = OSD.JOB<1,INDX>
    TEMP.MF(14) = OSD.A.QTY<1,INDX>
    IF OSD.KIT<1,INDX> = "K" THEN
      TEMP.MF(15) = OSD.KIT.PRICE<1,INDX>
      TEMP.MF(03) = OSD.KIT.G.QTY<1,INDX>
    END ELSE
      TEMP.MF(15) = OSD.PRICE<1,INDX>
      TEMP.MF(03) = OSD.G.QTY<1,INDX>
    END
    TEMP.MF(16) = OSD.OLD.QTY<1,INDX>
    TEMP.MF(17) = OSD.REL.QTY<1,INDX>
    TEMP.MF(18) = OSD.KIT<1,INDX>
    TEMP.MF(19) = OSD.PROD.SEQ<1,INDX>
    TEMP.MF(20) = OSD.P.QTY<1,INDX>;* T20852
  END
  RETURN
*
9000* 
*COPY>ICSBP>INV.UM.CNV
  RETURN
* T27007 v
*
***************
GET.PROMPT.NUM: 
***************
*
  IF OPCO.KIT.DETAIL = "Y" THEN  
    IF CUST.ADDL.OPS<1,1>+0>0 THEN
      IF (OV.TOGGLE) THEN        
        OPTNUM=60               
      END ELSE                   
        OPTNUM = 58              
      END                        
    END ELSE                     
      OPTNUM = 41                
    END                          
  END ELSE                       
    IF CUST.ADDL.OPS<1,1>+0>0 THEN
      IF (OV.TOGGLE) THEN        
        OPTNUM=60               
      END ELSE                   
        OPTNUM = 59              
      END                        
    END ELSE                     
      OPTNUM = 44                
    END                          
  END                            
  RETURN
* T27007 ^
*
*--- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
99999* 
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  RETURN
END
