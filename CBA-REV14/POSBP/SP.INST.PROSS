*COPY>CPYLIB>COM1
********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - POSBP
* PROGRAM     - SP.INST.PROSS
* BY          - JIHAD YAMOUT ,C.B.A
* DATE        - 04/13/84
* DESCRIPTION - THIS PROGRAM INPUT SPECIAL INST. TO THE SYSTEM
*T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
********************************************************************
*COPY>POS.CPYLIB>SPECIAL.INST
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
  EQU SI.NEW.REC  TO SI.REC(7)
**** OPEN FILES
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING'
    GOSUB 91000
  END
  OPEN '','POS.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'POS.SCREENS FILE IS MISSING'
    GOSUB 91000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GOSUB 91000
  END
***** SETUP ERRMSG ROUTINE
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
***** GET COMPANY
  MAT COMP.REC = ""
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
***** INT
  SI.NEW.REC = ''
  MAT EDIT.COM.DRIVER = ''
  BEGIN.PAGE.1 = 4
  PAGE.SIZE.1 = 16
  LINE.SPACE = 1
*     MAT EDIT.COM = ''
*     TYP = 0
*     CALL EDIT.SUB
  FILL = '#'
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "SP.INST.PROSS"
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=2;CALL SCRN.EDIT
  LINES.1 = 0
  OLD.START.LINE.1 = 0
**** MAIN PROCESSING
  MATREAD SI.REC FROM CONTROL, CONO:"SPEC.INST" ELSE
    MAT SI.REC = ''
  END
  IF SI.INST = '' THEN
    LOOP
      OPTION = 'A'
      LN1 = LINES.1 + 1
      OLD.LINES.1 = LINES.1
      GOSUB 1000
    WHILE LINES.1 > OLD.LINES.1 DO REPEAT
    LN1 = LINES.1
  END ELSE
    LINES.1 = COUNT(SI.INST,VM) + 1
    LN1 = 1
  END
  GOSUB 10000
  GOSUB 9000
  GOTO 99999
****** ENTER INST INFORMATION
1000 GOSUB 10000
  SLN = BEGIN.PAGE.1 + LINE.SPACE * MOD(LN1 - 1,PAGE.SIZE.1)
  P_X  = 1 ; P_Y = SLN ; P_VALUE = LN1 "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
**** ENTER INSTRUCTIONS
1001 X = 5 ; Y = SLN ; TYP = 1 ; MAXL = 40 ;HMSG = "ENTER INSTRUCTIONS"
  FILL = '#'
  IF SI.INST<1,LN1> # '' THEN
    DEFAULT = SI.INST<1,LN1> ; O.R = 'O'
  END ELSE
    DEFAULT = '' ; O.R = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    SI.INST = DELETE(SI.INST,1,LN1,0)
    SI.TYP  = DELETE(SI.TYP,1,LN1,0)
    SI.MAX  = DELETE(SI.MAX,1,LN1,0)
    SI.DEF  = DELETE(SI.DEF,1,LN1,0)
    SI.USED = DELETE(SI.USED,1,LN1,0)
    SI.SCALER = DELETE(SI.SCALER,1,LN1,0)
    SI.NEW.REC = DELETE(SI.NEW.REC,1,LN1,0)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 1999
  END
  PROD.NUM = VALUE
  SI.INST<1,LN1> = VALUE
**** ENTER TYPE
1002 X = 46 ; Y = SLN ; TYP = 3 ; MAXL = 3 ; FILL = "#" 
  JUSTIFY = 'R'
  HMSG<1, 1> = "1 = ALPHANUMERIC, 2 = ALPHABETIC, 3 = NUMERIC, 4 = DECIMAL "
  HMSG<1,2> = "6 = DATE, 8 = (Y)ES OR (N)O ."
  VALDAT = '1':VM:'2':VM:'3':VM:'4':VM:'6':VM:'8'
  IF SI.TYP<1,LN1> # '' THEN
    DEFAULT = SI.TYP<1,LN1>
    O.R = 'O'
  END ELSE
    DEFAULT = '' ; O.R = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 1001
  SI.TYP<1,LN1> = VALUE
  IF VALUE = '4' THEN SI.SCALER<1,LN1> = '2'
**** INPUT MAXL
1003 X = 50 ; Y = SLN ; TYP = 3 ; MAXL = 4 ; FILL = "#" 
  JUSTIFY = 'R'
  MINV = 1; MAXV = 42 - LEN(SI.INST<1,LN1>)
  VALDAT = '' ; HMSG = "INPUT MAX LENGTH FOR THE FIELD"
  IF SI.MAX<1,LN1> # '' THEN
    DEFAULT = SI.MAX<1,LN1> ; O.R = 'O'
  END ELSE
    DEFAULT = '' ; O.R. = 'R'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 1001
  SI.MAX<1,LN1> = VALUE
**** INPUT DEFAULT
1004 X = 55 ; Y = SLN ; TYP = 1 ; VALDAT = '' ; MAXL = 7 ; O.R = 'O' ; FILL = "#"
  HMSG = 'INPUT THE FIELD DEFAULT'
  DEFAULT = SI.DEF<1,LN1>
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 1001
  SI.DEF<1,LN1> = VALUE
**** INPUT USED OR NOT
1005 X = 63 ; Y = SLN ; TYP = 8 ;VALDAT = '';MAXL = 4 ; FILL = "#"
  HMSG = "ENTER (YES) OR (NO) TO USE OR NOT TO USE THIS INSTRUCTION"
  IF SI.USED<1,LN1> # '' THEN
    DEFAULT = SI.USED<1,LN1> ; O.R = 'O'
  END ELSE
    DEFAULT = 'Y' ; O.R = 'O'
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 1001
  SI.USED<1,LN1> = VALUE
  IF OPTION = 'A' THEN SI.NEW.REC<1,LN1> = 'Y'
  LINES.1 = COUNT(SI.INST,VM) + (SI.INST # '')
1999*
  RETURN
**** ENTER OPTION
9000*
  MORE = 1
  LOOP
*      X = 0 ; Y = 21
*      PMSG = 'ENTER OPTION (A)DD ,(C)HANGE ,(D)ELETE ,(S)CROLL ,(E)XIT ,(F)ILE :'
*      TYP = 1 ; MAXL = 1
*      VALDAT = 'A':VM:'D':VM:'S':VM:'E':VM:'C':VM:'F'
*      CALL EDIT.SUB
*      OPTION = VALUE
    ECD.NUM = 25
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.ACTION = 4
    CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'E' OR OPTION = 'END'
        MORE = 0
      CASE OPTION = 'A'
        LOOP
          LN1 = LINES.1 + 1
          OLD.LINES.1 = LINES.1
          GOSUB 1000
        WHILE LINES.1 > OLD.LINES.1 DO REPEAT
        LN1 = LINES.1
      CASE OPTION = 'C'
        GOSUB 60000
        IF LNO THEN
          LN1 = LNO
        END
        SLN = BEGIN.PAGE.1 + LINE.SPACE * MOD(LN1 - 1,PAGE.SIZE.1)
        IF SI.NEW.REC<1,LN1> # '' THEN
          GOSUB 1001
        END ELSE
          GOSUB 1005
        END
      CASE OPTION = 'D'
        GOSUB 60000
        IF LNO THEN
          LN1 = LNO
          IF SI.NEW.REC<1,LN1> # '' THEN
            SI.INST = DELETE(SI.INST,1,LN1,0)
            SI.TYP = DELETE(SI.TYP,1,LN1,0)
            SI.MAX = DELETE(SI.MAX,1,LN1,0)
            SI.DEF = DELETE(SI.DEF,1,LN1,0)
            SI.USED = DELETE(SI.USED,1,LN1,0)
            SI.SCALER = DELETE(SI.SCALER,1,LN1,0)
            DI.NEW.REC = DELETE(SI.NEW.REC,1,LN1,0)
            LINES.1 = COUNT(SI.INST, VM) + (SI.INST # '')
            IF LN1 > 1 AND LN1 > LINES.1 THEN LN1 = LN1 - 1
            IF LN1 < 1 THEN LN1 = 1
            OLD.START.LINE.1 = 0
          END ELSE
            ERRMSG = "INSTRUCTION THAT HAS BEEN UPDATED CAN'T BE DELETED"
            GOSUB 91000
          END
        END
        GOSUB 10000
      CASE OPTION = 'S'
        LN1 = LN1 + PAGE.SIZE.1
        IF LN1 > LINES.1 THEN LN1 = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        LN1 -= PAGE.SIZE.1
        IF LN1 < 1 THEN LN1 = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        LN1 = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        LN1 = LINES.1
        GOSUB 10000
      * T25978 ^
      CASE OPTION = 'F'
        SI.NEW.REC = ''
        MATWRITE SI.REC ON CONTROL , CONO:"SPEC.INST"
        MORE = 0
    END CASE
  WHILE MORE = 1 DO REPEAT
  RETURN
**** SCROLL ROUTINE FOR INST
10000*
  START.LINE.1 = 1 + INT((LN1-1)/PAGE.SIZE.1) * PAGE.SIZE.1
  IF START.LINE.1 = OLD.START.LINE.1 THEN GOTO 10001
  OLD.START.LINE.1 = START.LINE.1
  LAST.LINE.1 = START.LINE.1 + PAGE.SIZE.1 - 1
  CNT = 1
  FOR N = START.LINE.1 TO LAST.LINE.1 UNTIL N > LINES.1
    SLN = BEGIN.PAGE.1 + LINE.SPACE * MOD(N-1,PAGE.SIZE.1)
    P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:SI.INST<1,N> "L#40"
    P_X  := AM:46 ; P_Y := AM:SLN ; P_VALUE := AM:SI.TYP<1,N> "R#3"
    P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:SI.MAX<1,N> "R#4"
    P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:SI.DEF<1,N> "L#7"
    P_X  := AM:63 ; P_Y := AM:SLN ; P_VALUE := AM:SI.USED<1,N> "L#4"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE.1
    SLN = BEGIN.PAGE.1 + LINE.SPACE * MOD(M-1,PAGE.SIZE.1)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001*
  RETURN
**** ENTER LINE NUMBER
60000*
*    GOSUB 10000 ;X = 0 ; Y = 23 ; TYP = 13
*    PMSG = 'ENTER LINE NUMBER : '
*    MINV = OLD.START.LINE.1
*    IF LAST.LINE.1 < LINES.1 THEN
*      MAXV = LAST.LINE.1
*    END ELSE
*      MAXV = LINES.1
*    END
*    O.R = 'O'; MAXL = 2
*    CALL EDIT.SUB
*P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*    LNO = VALUE
  GOSUB 10000
  ECD.NUM = 26
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.MINV = OLD.START.LINE.1
  IF LAST.LINE.1 < LINES.1 THEN
    ECD.MAXV = LAST.LINE.1
  END ELSE
    ECD.MAXV = LINES.1
  END
  ECD.ACTION = 4
  CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = '' OR LNO = 'END' THEN LNO = 0
  RETURN
**** CALLS FOR SYSCOM
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1) * :
  ECD.ACTION = 99 ; CALL SCRN.EDIT
END
