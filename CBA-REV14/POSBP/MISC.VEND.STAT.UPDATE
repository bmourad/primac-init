  SUBROUTINE MISC.VEND.STAT.UPDATE(CONO,PO.CODE,PO.TYPE,UPD.TYPE,MISC.REC)
*COPY>CPYLIB>COM1
*COPY>POS.CPYLIB>COM.MPO
*COPY>POS.CPYLIB>COM.PO.INTRF
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - POSBP
* PROGRAM     - MISC.VEND.STAT.UPDATE
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 01/29/86
* DESCRIPTION -
* This program is used to update (VEND.STATS) & (VEND.PO.STATS) &
* (VEND.PROD.STATS) , If company flag set to (R) or (B).
* TASK 18959 GAT 3/6/95 FIX AMOUNT ON PO STAT AFFECTING VOUCHER MAINT
*
*T24726 aron 01/13/2000 * Set receipt dates to MPO.REC.DATE instead of
*                         current date
*T25463 lanny 10/16/2000 * Misc Po Maint must not overwrite Receipt data
*                          in stats files.
****     NOTE! If this program is loaded to a user site, make sure to ****
****  !!       load MISC.PO.MAINT, MISC.PO.IN.MAINT, MISC.PO.REC.MAINT ***
****  !!       MISC.PO.IN.REC.MAINT & MISC.VEND.STAT.UPDATE since all ****
****  !!       have an updated argument list and POS.CPYLIB MISC.PO change.       ****
*T26186 lhelms 05/02/2002 * REV12 UPGRADE PASS RECEIPT PERIOD TO VEND
*                           PROD STATS
*T29036 lross 01/04/2007 * Incorrect cost extension for U/M = "M".
**************************************************************************
*ENDDOC
*********************************************************************
**** INSERT FILES EQUETES
*COPY>POS.CPYLIB>MISC.PO
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>CPYLIB>FILE.VARS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
  DIM SPO.VALUES(25)
  EQU SPO.GTOT.ORD.AMT TO SPO.VALUES(1)   ;* Grand total for po cost
  EQU SPO.GTOT.REC.AMT TO SPO.VALUES(2)   ;* Grand total for po receved cost
  EQU SPO.P            TO SPO.VALUES(3)   ;* (MV1) All product numbers for this po
  EQU SPO.P.DESC       TO SPO.VALUES(4)   ;* (MV1) All product description in a po
  EQU SPO.P.UM         TO SPO.VALUES(5)   ;* (MV1) All unit of measure for all products in po
  EQU SPO.P.WHSE       TO SPO.VALUES(6)   ;* (MV1) All warehouse for all products in a po
  EQU SPO.P.ORD.QTY    TO SPO.VALUES(7)   ;* (MV1) All ordered quantity for all products in a po
  EQU SPO.P.ORD.AMT    TO SPO.VALUES(8)   ;* (MV1) All total cost for all products in a po
  EQU SPO.P.REC.QTY    TO SPO.VALUES(9)   ;* (MV1) All total quantity receved for all products in a po
  EQU SPO.P.REC.AMT    TO SPO.VALUES(10)   ;* (MV1) All total cost receved for all products in a po
  EQU SPO.P.SEQ.NO     TO SPO.VALUES(11)   ;* (MV1) All sequence nos by product
  EQU SPO.P.ORD.DATE   TO SPO.VALUES(12)   ;* (MV1,SMV1) Ordered dates for all products in a po
  EQU SPO.P.ORD.BY.CST TO SPO.VALUES(13)   ;* (MV1,SMV1) Ordered quantity by date by unit prics
  EQU SPO.P.ORD.U.COST TO SPO.VALUES(14)   ;* (MV1,SMV1) Ordered units cost by date
  EQU SPO.P.REC.DATE   TO SPO.VALUES(15)   ;* (MV1,SMV1) Receved dates for all products in a po
  EQU SPO.P.REC.BY.CST TO SPO.VALUES(16)   ;* (MV1,SMV1) Receved quantity by date by unit prics
  EQU SPO.P.REC.U.COST TO SPO.VALUES(17)   ;* (MV1,SMV1) Receved units cost by date
* T 26186
  EQU SPO.P.REC.PER    TO SPO.VALUES(18)   ;* (MV1,SMV1) Receved Period
  MAT SPO.VALUES = ""
*
**** UPDATE ROUTINE
1000*
  PO.CNT = COUNT(MPO.SEQ.NO,VM) + (MPO.SEQ.NO # "")
  FOR P = 1 TO PO.CNT
*T25463 v
    VSTAT.KEY = CONO:MPO.VEND.NO:"!":PO.TYPE
    VPS.KEY = VSTAT.KEY:"!":PO.CODE
    VPDS.KEY = CONO:MPO.VEND.NO:"!":PO.TYPE:"!":PO.CODE:"!":MPO.SEQ.NO<1,P>:"!":MPO.SHIP.WHSE
*T29036 v
    IF MPO.UNIT.MAG<1,P> = 'M' THEN
       MFACTOR = 1000
    END ELSE
       MFACTOR = 1
    END
*T29036 ^
    RECCNT = DCOUNT(MISC.REC<P>,VM)
    REC.QTY=0; REC.AMT = 0
    FOR R = 1 TO RECCNT
      REC.QTY += MISC.REC<P,R,2>
*T29036 REC.AMT += ICONV(MISC.REC<P,R,2> * MISC.REC<P,R,3> /10000,'MD0')
      REC.AMT += ICONV(MISC.REC<P,R,2> * (MISC.REC<P,R,3> /10000 / MFACTOR),'MD0')
    NEXT R
    MATREAD VPS.REC FROM VEND.PO.STATS,VPS.KEY ELSE MAT VPS.REC = ''
*T25463 ^
    PTR = 1
    ORD.QTY = MPO.TOT.ONORD<1,P> - (MPO.TOT.CANCEL<1,P> + MPO.PREV.RECEVED<1,P>)
*T25463  REC.QTY = MPO.TOT.RECEVED<1,P>
    IF MPO.DISCOUNT<1,P>+0 # 0 THEN
      DISC.PRICE = INT(MPO.GROS.PRICE<1,P> * (MPO.DISCOUNT<1,P> / 10000))
      UNIT.COST = INT(MPO.GROS.PRICE<1,P> - DISC.PRICE)
    END ELSE
      UNIT.COST = MPO.GROS.PRICE<1,P>
    END
*T29036 ORD.AMT=INT((UNIT.COST * ORD.QTY) / 10000)
    ORD.AMT=ICONV(ORD.QTY * (UNIT.COST / 10000 / MFACTOR),'MD0')
*T25463  IF REC.QTY < 0 THEN
*T25463     REC.AMT=INT((UNIT.COST * REC.QTY) / 10000 - .5)
*T25463  END ELSE
*T25463     REC.AMT=INT((UNIT.COST * REC.QTY) / 10000 + .5)
*T25463  END
*      UNIT.COST = INT(MPO.GROS.PRICE<1,P>*(1 - (MPO.DISCOUNT<1,P>/10000)))
*      ORD.AMT = INT(ORD.QTY * (UNIT.COST / 10000) + .5)
*      REC.AMT = INT(REC.QTY * (UNIT.COST / 10000) + .5)
    SPO.GTOT.ORD.AMT = SPO.GTOT.ORD.AMT + ORD.AMT
    SPO.GTOT.REC.AMT = SPO.GTOT.REC.AMT + REC.AMT
    LOCATE MPO.SEQ.NO<1,P> IN SPO.P.SEQ.NO<1>,1 SETTING PFND ELSE
      SPO.P<1,PFND> = MPO.PROD.NUM<1,P>
      SPO.P.SEQ.NO<1,PFND> = MPO.SEQ.NO<1,P>
      SPO.P.DESC<1,PFND> = MPO.PROD.DESC<1,P>
      SPO.P.UM<1,PFND> = MPO.UNIT.MAG<1,P>
      SPO.P.WHSE<1,PFND> = MPO.SHIP.WHSE
    END
    SPO.P.ORD.QTY<1,PFND> = SPO.P.ORD.QTY<1,PFND> + ORD.QTY
    SPO.P.ORD.AMT<1,PFND> = SPO.P.ORD.AMT<1,PFND> + ORD.AMT
    SPO.P.REC.QTY<1,PFND> = SPO.P.REC.QTY<1,PFND> + REC.QTY
    SPO.P.REC.AMT<1,PFND> = SPO.P.REC.AMT<1,PFND> + REC.AMT
*T25463  SPO.GTOT.REC.AMT = SPO.GTOT.REC.AMT + REC.AMT
    PTR = 1
    LOOP
      LOCATE UNIT.COST IN SPO.P.ORD.U.COST<1,PFND>,PTR SETTING CFND ELSE
        SPO.P.ORD.U.COST<1,PFND,CFND> = UNIT.COST
        SPO.P.ORD.DATE<1,PFND,CFND> = MPO.DEL.DATE<1,P>
      END
      IF MPO.DEL.DATE<1,P> # SPO.P.ORD.DATE<1,PFND,CFND> THEN
        PTR = CFND + 1
      END ELSE
        PTR = 0
      END
    WHILE PTR DO
    REPEAT
    SPO.P.ORD.BY.CST<1,PFND,CFND> = SPO.P.ORD.BY.CST<1,PFND,CFND> + ORD.QTY
    IF MPO.LAST.RECV<1,P> + 0 # 0 THEN
      PTR = 1
      LOOP
*T24726 v
*       LOCATE DATE() IN SPO.P.REC.DATE<1,PFND>,PTR SETTING CFND ELSE
        LOCATE MPO.REC.DATE<1,PFND,CFND> IN SPO.P.REC.DATE<1,PFND>,PTR SETTING CFND ELSE
          SPO.P.REC.U.COST<1,PFND,CFND> = UNIT.COST
          SPO.P.REC.DATE<1,PFND,CFND> = MPO.REC.DATE<1,PFND,CFND>
*T24726 ^
* T26186
          SPO.P.REC.PER<1,PFND,CFND> = MPO.REC.PER<1,PFND,CFND>
        END
        IF UNIT.COST # SPO.P.REC.U.COST<1,PFND,CFND> THEN
          PTR = CFND + 1
        END ELSE
          PTR = 0
        END
      WHILE PTR DO
      REPEAT
      SPO.P.REC.BY.CST<1,PFND,CFND> = SPO.P.REC.BY.CST<1,PFND,CFND> + MPO.LAST.RECV<1,P>
*T24726 v
    END ELSE SPO.P.REC.U.COST<1,PFND,1>=UNIT.COST
*T24726 ^
1999*
  NEXT P
  VSTAT.KEY = CONO:MPO.VEND.NO:"!":PO.TYPE
  MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE
    MAT VSTAT.REC = ""
  END
  LOCATE PO.CODE IN VSTAT.PO<1>,1 SETTING POFND ELSE NULL
  VSTAT.PO<1,POFND> = PO.CODE
*T25463 v  VSTAT.PO.ORDERD<1,POFND> = SPO.GTOT.ORD.AMT
  IF UPD.TYPE # 'R' THEN VSTAT.PO.ORDERD<1,POFND> = SPO.GTOT.ORD.AMT
*T25463  VSTAT.PO.RECV<1,POFND> = SPO.GTOT.REC.AMT
  IF UPD.TYPE = 'R' THEN VSTAT.PO.RECV<1,POFND> += SPO.GTOT.REC.AMT
  MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
  VPS.KEY = VSTAT.KEY:"!":PO.CODE
  MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE
    MAT VPS.REC = ""
  END
  OPROD.CNT = COUNT(VPS.SEQ.NO,VM) + (VPS.SEQ.NO # "")
  FOR DP = OPROD.CNT TO 1 STEP -1
    LOCATE VPS.SEQ.NO<1,DP> IN SPO.P.SEQ.NO<1>,1 SETTING PDFND ELSE PDFND = 0
    IF PDFND = 0 THEN
      VPDS.KEY = CONO:MPO.VEND.NO:"!":PO.TYPE:"!":PO.CODE:"!":VPS.SEQ.NO<1,DP>:"!":VPS.WHSE<1,DP>
      DELETE VEND.PROD.STATS, VPDS.KEY
      VPS.PROD = DELETE(VPS.PROD,1,DP,0)
      VPS.SEQ.NO = DELETE(VPS.SEQ.NO,1,DP,0)
      VPS.PROD.DESC = DELETE(VPS.PROD.DESC,1,DP,0)
      VPS.U.M = DELETE(VPS.U.M,1,DP,0)
      VPS.WHSE = DELETE(VPS.WHSE,1,DP,0)
      VPS.ORD.QTY = DELETE(VPS.ORD.QTY,1,DP,0)
      VPS.ORD.AMT = DELETE(VPS.ORD.AMT,1,DP,0)
      VPS.REC.QTY = DELETE(VPS.REC.QTY,1,DP,0)
      VPS.REC.AMT = DELETE(VPS.REC.AMT,1,DP,0)
      VPS.VOU.QTY = DELETE(VPS.VOU.QTY,1,DP,0)
      VPS.VOU.AMT = DELETE(VPS.VOU.AMT,1,DP,0)
      VPS.VOU.NO = DELETE(VPS.VOU.NO,1,DP,0)
    END
  NEXT DP
  APROD.CNT = COUNT(SPO.P.SEQ.NO,VM) + (SPO.P.SEQ.NO # "")
  FOR UAP = 1 TO APROD.CNT
    LOCATE SPO.P.SEQ.NO<1,UAP> IN VPS.SEQ.NO<1>,1 SETTING PDFND ELSE
      VPS.SEQ.NO<1,PDFND> = SPO.P.SEQ.NO<1,UAP>
    END
    VPS.PROD<1,PDFND> = SPO.P<1,UAP>
    VPS.PROD.DESC<1,PDFND> = SPO.P.DESC<1,UAP>
    VPS.U.M<1,PDFND> = SPO.P.UM<1,UAP>
    VPS.WHSE<1,PDFND> = SPO.P.WHSE<1,UAP>
*T25463 v
    IF UPD.TYPE # 'R' THEN
      VPS.ORD.QTY<1,PDFND> = SPO.P.ORD.QTY<1,UAP>
      VPS.ORD.AMT<1,PDFND> = SPO.P.ORD.AMT<1,UAP>
    END
    IF UPD.TYPE = 'R' THEN
      VPS.REC.QTY<1,PDFND> += SPO.P.REC.QTY<1,UAP>
      VPS.REC.AMT<1,PDFND> += SPO.P.REC.AMT<1,UAP>
    END
*T25463 ^
    VPDS.KEY = CONO:MPO.VEND.NO:"!":PO.TYPE:"!":PO.CODE:"!":VPS.SEQ.NO<1,PDFND>:"!":VPS.WHSE<1,PDFND>
    MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE
      MAT VPDS.REC = ""
    END
*T25463 v
    IF UPD.TYPE # 'R' THEN
      VPDS.ORD.DATE = "" ; VPDS.ORD.QTY = "" ; VPDS.ORD.UN.COST = ""
      D.CNT = COUNT(SPO.P.ORD.DATE<1,UAP>,SVM) + (SPO.P.ORD.DATE<1,UAP> # "")
      FOR UPD = 1 TO D.CNT
        VPDS.ORD.DATE<1,UPD> = SPO.P.ORD.DATE<1,UAP,UPD>
        VPDS.ORD.QTY<1,UPD> = SPO.P.ORD.BY.CST<1,UAP,UPD>
        VPDS.ORD.UN.COST<1,UPD> = SPO.P.ORD.U.COST<1,UAP,UPD>
      NEXT UPD
    END
*T25463 ^
    REC.CNT = COUNT(VPDS.REC.DATE,VM) + (VPDS.REC.DATE # "")
*T24726 v
*        D.CNT = COUNT(SPO.P.REC.DATE<1,UAP>,SVM) + (SPO.P.REC.DATE<1,UAP> # "")
*        FOR UPD = 1 TO D.CNT
*           VPDS.REC.DATE<1,UPD+REC.CNT> = SPO.P.REC.DATE<1,UAP,UPD>
*           VPDS.REC.QTY<1,UPD+REC.CNT> = SPO.P.REC.BY.CST<1,UAP,UPD>
*           VPDS.REC.UN.COST<1,UPD+REC.CNT> = SPO.P.REC.U.COST<1,UAP,UPD>
*        NEXT UPD
*T25463 v
    IF UPD.TYPE = 'R' THEN
      LOCATE VPS.SEQ.NO<1,PDFND> IN MPO.SEQ.NO<1>,1 SETTING MPOLINE ELSE NULL
      IF MISC.REC<MPOLINE,1,1> # '' THEN
        XCNT = DCOUNT(MISC.REC<MPOLINE>,VM)
        FOR X = 1 TO XCNT
          XPTR=1; XFND=1
          LOOP
            LOCATE MISC.REC<MPOLINE,X,1> IN VPDS.REC.DATE<1>,XPTR BY 'AR' SETTING ODFND ELSE XFND = 0
            BEGIN CASE
              CASE XFND = 0
                XPTR = 0
              CASE 1
                XPTR = ODFND + 1
            END CASE
          WHILE XPTR DO REPEAT
          INS MISC.REC<MPOLINE,X,1> BEFORE VPDS.REC.DATE<1,ODFND>
          INS MISC.REC<MPOLINE,X,2> BEFORE VPDS.REC.QTY<1,ODFND>
          INS MISC.REC<MPOLINE,X,3> BEFORE VPDS.REC.UN.COST<1,ODFND>
* T26186
          INS MISC.REC<MPOLINE,X,4> BEFORE VPDS.REC.PERIOD<1,ODFND>
        NEXT X
      END
    END
*T25463 ^
*T24726 ^
    MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
  NEXT UAP
  MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
  GOTO 99999
**** ERROR ROUTINE
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1 :
*       PRINT @(0,23):CL:
*       RETURN
99999 RETURN
END
