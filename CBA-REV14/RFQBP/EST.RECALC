*********************************************************************
*
* PROGRAM  - EST.RECALC
*
* AUTHOR   - NICK AMENDOLA, NASTech, Inc.
*
* DATE     - 09/08/94
*
* DESCRIPTION
*
* This subroutine will recalculate an estimate for a specified quantity.
* If the CURR.QTY field in NULL, a new estimate will be created from
* the current estimate with only the NEW.QTY on the new estimate.
* If the NEW.EST is NULL, a new estimate ID will be generated.
*
*
* ACTION: "D" = Create new estimate by cloning specified estimate.
*
*         "R" = Create a revised copy of specified estimate.
*
*         "U" = Update specified estimate.
*
* NOTES:
*
*   If OLD.QTY is specified, the NEW.QTY replaces the OLD.QTY and
*   the estimate is recalculated.
*   If OLD.QTY is NOT specified, the NEW.QTY replaces all quantities and
*   the estimate is recalculated.
*
*T21934 diane 05/14/1997 * Correct conversion in subroutine 90000
*T25200 cm 06/14/2000 * Estimate dept info is not correct when auto
*                       creating an estimate.
*T26413 cm 02/01/2002 * If an estimate qty is deleted the stock prices
*                       get out of order if the stock prices are different
*T26934 cmykleb 02/18/2003 * Changes for RFQ.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>ESTIMATE.RES
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>ESTIMATE.DIV
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>JES.CPYLIB>RECALC.PARAM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
   UPDATE.FLAG = 0
   PORT.NO="TTY"; CALL SYSVARS.SUB(PORT.NO)
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000; STOP
   END
   RECALC.KEY = "EST.RECALC.":PORT.NO
   MATREAD RECALC.REC FROM CONTROL, RECALC.KEY ELSE STOP
   IF RECALC.ACTION = "X" THEN STOP
   IF RECALC.STD = "E" OR RECALC.STD = "C" THEN
      STYPE = RECALC.STD:"X"
   END ELSE
      ERRMSG = "INVALID RECALCULATION METHOD"
      GOSUB 90000; GOTO 99999
   END
   RECALC.ERRMSG = ""
*
*---- OPEN ALL FILES
*
   CALL EST.MAINT.OPEN
   RL.PRESENT = 1
   OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE RL.PRESENT = 0
*T25200 v
*  OPEN '','ESTIMATE.RES.PRESS.SPOIL' TO ESTIMATE.PRESS.SPOIL ELSE RL.PRESENT = 0
   OPEN '','ESTIMATE.PRESS.SPOIL' TO ESTIMATE.PRESS.SPOIL ELSE RL.PRESENT = 0
*T25200 ^
   OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT.BU ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.DEPT FILE"
      GOSUB 90000; GOTO 99999
   END
   OPEN "","ESTIMATE.DEPT.BU" TO ESTIMATE.DEPT ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.DEPT.BU FILE"
      GOSUB 90000; GOTO 99999
   END
   OPEN "","CUST.EST.XREF" TO CUST.EST.XREF ELSE
      ERRMSG = "CANNOT OPEN CUST.EST.XREF FILE"
      GOSUB 90000; GOTO 99999
   END
   OPEN "","PROSPECT.EST.XREF" TO PROSPECT.EST.XREF ELSE
      ERRMSG = "CANNOT OPEN PROSPECT.EST.XREF FILE"
      GOSUB 90000; GOTO 99999
   END
*
*---- INITIALIZATION
*
   CONO = RECALC.CONO
   BEGIN CASE
      CASE RECALC.ACTION = "D"
         EST.KEY = RECALC.OLD.KEY
         EST.DUP.KEY = EST.KEY
         MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            ERRMSG = "Cannot locate estimate - ":EST.KEY
            GOSUB 90000; GOTO 99999
         END
         BEGIN CASE
            CASE EST.PDEF.TYPE = "RL" AND RL.PRESENT
               MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:EST.KEY ELSE
                  ERRMSG = "Cannot locate ESTIMATE.RES record - ":EST.KEY
                  GOSUB 90000; GOTO 99999
               END
            CASE EST.PDEF.TYPE = "RL"
               ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
               GOSUB 90000; GOTO 99999
         END CASE
         EST.MASTER = '' ; EST.SUBS = ''
         IF RECALC.NEW.KEY = '' THEN
            READU NUM FROM CONTROL,CONO:"EST.SEQ.NUM" ELSE NUM = 10001
            SEQ = "01"
            EST.KEY = NUM:"-":SEQ
            NUM = NUM+1
            RECALC.NEW.KEY=EST.KEY
            WRITE NUM ON CONTROL,CONO:"EST.SEQ.NUM"
         END ELSE
            EST.KEY = RECALC.NEW.KEY
         END
         READU DUMMY FROM ESTIMATE,CONO:EST.KEY ELSE NULL
         DUP.FLAG = 1
      CASE RECALC.ACTION = "R"
         EST.KEY = RECALC.OLD.KEY
         EST.DUP.KEY = EST.KEY
         MATREAD EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            ERRMSG = "Cannot locate estimate - ":EST.KEY
            GOSUB 90000; GOTO 99999
         END
         BEGIN CASE
            CASE EST.PDEF.TYPE = "RL" AND RL.PRESENT
               MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:EST.KEY ELSE
                  ERRMSG = "Cannot locate ESTIMATE.RES record - ":EST.KEY
                  GOSUB 90000; GOTO 99999
               END
            CASE EST.PDEF.TYPE = "RL"
               ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
               GOSUB 90000; GOTO 99999
         END CASE
         KEY.BASE = FIELD(EST.KEY,"-",1)
         KEY.SEQ = FIELD(EST.KEY,"-",2)
         RDONE = 0
         FOR SEQ = KEY.SEQ+1 TO 99 UNTIL RDONE
            EST.KEY = KEY.BASE:"-":STR("0",2-LEN(SEQ)):SEQ
            RFND = 1
            READU DUMMY FROM ESTIMATE,CONO:EST.KEY ELSE RFND = 0
            IF RFND THEN
               RELEASE ESTIMATE,CONO:EST.KEY
            END ELSE
               RDONE = 1
            END
         NEXT SEQ
         IF NOT(RDONE) THEN
            RELEASE
            ERRMSG = "Maximum revision number = 99"
            GOSUB 90000; GOTO 99999
         END
         RECALC.NEW.KEY=EST.KEY
         DUP.FLAG = 1
      CASE RECALC.ACTION = "U"
         EST.KEY = RECALC.OLD.KEY
         EST.DUP.KEY = EST.KEY
         MATREADU EST.REC FROM ESTIMATE,CONO:EST.KEY ELSE
            RELEASE ESTIMATE,CONO:EST.KEY
            ERRMSG = "Cannot locate estimate - ":EST.KEY
            GOSUB 90000; GOTO 99999
         END
         BEGIN CASE
            CASE EST.PDEF.TYPE = "RL" AND RL.PRESENT
               MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:EST.KEY ELSE
                  ERRMSG = "Cannot locate ESTIMATE.RES record - ":EST.KEY
                  GOSUB 90000; GOTO 99999
               END
            CASE EST.PDEF.TYPE = "RL"
               ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
               GOSUB 90000; GOTO 99999
         END CASE
      CASE 1
         ERRMSG = "Invalid action code - ":RECALC.ACTION
         GOSUB 90000; GOTO 99999
   END CASE
   IF RECALC.OLD.QTY # "" THEN
      LOCATE RECALC.OLD.QTY IN EST.QTY<1>,1 SETTING QPTR ELSE
         ERRMSG = "Cannot locate estimate quantity - ":RECALC.OLD.QTY
         GOSUB 90000; GOTO 99999
      END
   END
   OLD.CUST = EST.CUST
   CALL EST.UPDATE (CONO,"C",EST.DUP.KEY,EST.KEY,ESTIMATE.DEPT.BU,ESTIMATE.DEPT)
   UPDATE.FLAG = 1
*
*---- INITIALIZE DATA FIELDS
*
   EST.STATUS = ""
   EST.STAT.DATE = ""
   EST.JOB = ""
   EST.ORDER = ""
   EST.MASTER = ""
   EST.SUBS = ""
   EST.BOOK.JOB = ""
   EST.BOOK.QTY = ""
   IF RECALC.CUST # "" THEN
      MATREAD CUST.REC FROM CUSTOMER, CONO:RECALC.CUST THEN
         EST.CUST = RECALC.CUST
         EST.CUST.NAME = CUST.NAME
         EST.CUST.ADDR1 = CUST.ADDR1
         EST.CUST.ADDR2 = CUST.ADDR2
         EST.CUST.ADDR3 = CUST.ADDR3
         EST.CUST.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP
      END ELSE
         ERRMSG = "Cannot locate customer - ":RECALC.CUST
         GOSUB 90000; GOTO 99999
      END
   END
   IF RECALC.ATTN # "" THEN EST.CUST.ATTN = RECALC.ATTN
   IF RECALC.CUST.PO # "" THEN EST.CUST.PO = RECALC.CUST.PO
   IF RECALC.SALESMAN # "" THEN EST.SALESMAN = RECALC.SALESMAN
   IF RECALC.SALES.CODE # "" THEN EST.SALES.CODE = RECALC.SALES.CODE
   IF RECALC.PURGE.TYPE # "" THEN EST.PURGE.TYPE = RECALC.PURGE.TYPE
   IF RECALC.DATE.ENTERED # "" THEN EST.DATE.ENTERED = RECALC.DATE.ENTERED
   IF RECALC.DATE.REQUIRED # "" THEN EST.DATE.REQUIRED = RECALC.DATE.REQUIRED
   IF RECALC.ORDER # "" THEN EST.ORDER = RECALC.ORDER
*
*---- CHECK FOR REQUIRED ESTIMATE FIELDS
*
*T26934 v
*  IF EST.CUST = "P" THEN
   IF EST.CUST = "P" AND RECALC.RFQ = "" THEN
*T26934 ^
      ERRMSG = "Customer number required for estimate."
      GOSUB 90000; GOTO 99999
   END
   IF EST.DATE.REQUIRED = "" THEN EST.DATE.REQUIRED = DATE()
*
*---- MAIN PROCESSING
*
   EST.BASE.QTY = EST.QTY<1,1>
*
*---- REMOVE IRRELEVANT QUANTITIES
*
   IF RECALC.OLD.QTY = "" THEN
      DC = DCOUNT(EST.DEPT.COMP,VM)
      FOR DP = DC TO 1 STEP -1
         ESTD.ID = EST.DEPT.COMP<1,DP>
         EQTY = FIELD(ESTD.ID,"!",3)
         IF EQTY # EST.BASE.QTY THEN
            DELETE ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID
            DEL EST.DEPT.COMP<1,DP>
            DEL EST.DEPT.COMP.HRS<1,DP>
            DEL EST.DEPT.COMP.DCOST<1,DP>
            DEL EST.DEPT.COMP.COST<1,DP>
            DEL EST.DEPT.COMP.SALE<1,DP>
            DEL EST.DEPT.COMP.TSALE<1,DP>
            DEL EST.DEPT.COMP.VCOST<1,DP>
            DEL EST.DEPT.COMP.VSALE<1,DP>
         END
      NEXT DP
      EST.QTY = RECALC.NEW.QTY
   END ELSE
      EST.QTY<1,QPTR> = RECALC.NEW.QTY
   END
*
*---- RECALCULATE ESTIMATE WITH NEW QUANTITIES
*
   BEGIN CASE
      CASE EST.PDEF.TYPE = "RL"
         CALL EST.CALC.STK.PRICE(CONO,"")
*T26413 v
*        CALL EST.RES.CALC.PAP(CONO,"")
         CALL EST.RES.CALC.PAP(CONO,"","")
*T26413 ^
      CASE 1
         CALL EST.CALC.STK(CONO,"")
   END CASE
   DC = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = 1 TO DC
      ESTD.ID = EST.DEPT.COMP<1,DP>
      DPTR = FIELD(ESTD.ID,"!",1)
      CPTR = FIELD(ESTD.ID,"!",2)
      EQTY = FIELD(ESTD.ID,"!",3)
      LOCATE EQTY IN EST.QTY<1>,1 SETTING P ELSE EQTY = RECALC.NEW.QTY
      BEGIN CASE
         CASE EST.PDEF.TYPE = "RL"
            CALL EST.RES.QTY.CALC (CONO,STYPE,EST.KEY,DPTR,CPTR,EQTY)
         CASE 1
            CALL EST.QTY.CALC (CONO,STYPE,EST.KEY,DPTR,CPTR,EQTY)
      END CASE
   NEXT DP
*
*---- REMOVE IRRELEVANT QUANTITIES
*
   DC = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = DC TO 1 STEP -1
      ESTD.ID = EST.DEPT.COMP<1,DP>
      EQTY = FIELD(ESTD.ID,"!",3)
      LOCATE EQTY IN EST.QTY<1>,1 SETTING P ELSE
         DELETE ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID
         DEL EST.DEPT.COMP<1,DP>
         DEL EST.DEPT.COMP.HRS<1,DP>
         DEL EST.DEPT.COMP.DCOST<1,DP>
         DEL EST.DEPT.COMP.COST<1,DP>
         DEL EST.DEPT.COMP.SALE<1,DP>
         DEL EST.DEPT.COMP.TSALE<1,DP>
         DEL EST.DEPT.COMP.VCOST<1,DP>
         DEL EST.DEPT.COMP.VSALE<1,DP>
      END
   NEXT DP
*
*---- GENERATE ADDITIONAL QUANTITY DATA
*
   BEGIN CASE
      CASE EST.PDEF.TYPE = "RL"
         CALL EST.RES.QTY.GEN (CONO,"A",EST.KEY,"ALL")
      CASE 1
         CALL EST.QTY.GEN (CONO,"A",EST.KEY,"ALL")
   END CASE
*
*---- CALCULATE COST PER ADDITIONAL THOUSAND
*
   TOTAL.VSALE=""
   TOTAL.VCOST=""
   DC = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP=1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      QTY=FIELD(ESTD.ID,"!",3)
      LOCATE QTY IN EST.QTY<1>,1 SETTING P ELSE P=0
      IF P > 0 THEN
         TOTAL.VSALE<1,P>=TOTAL.VSALE<1,P>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.VCOST<1,P>=TOTAL.VCOST<1,P>+EST.DEPT.COMP.VCOST<1,DP>
      END
   NEXT DP
   ECNT=COUNT(EST.QTY,VM)+1
   EST.PRICE.THOU=""
   FOR EP=1 TO ECNT
      EST.PRICE.THOU<1,EP>=INT(TOTAL.VSALE<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
      EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
   NEXT EP
*
*---- COPY ESTIMATE TO LIVE DATABASE
*
   EST.BASE.QTY = EST.QTY<1,1>
   CALL EST.UPDATE (CONO,"F",EST.DUP.KEY,EST.KEY,ESTIMATE.DEPT.BU,ESTIMATE.DEPT)
   MATWRITE EST.REC ON ESTIMATE, CONO:EST.KEY
   IF EST.PDEF.TYPE = "RL" THEN
      MATWRITE EST.RL.REC ON ESTIMATE.RES, CONO:EST.KEY
   END
   BEGIN CASE
      CASE OLD.CUST#"P" AND EST.CUST#"P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST,EST.CUST,CUST.EST.XREF,PREFIX)
      CASE OLD.CUST="P" AND EST.CUST="P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST.NAME,EST.CUST.NAME,PROSPECT.EST.XREF,PREFIX)
      CASE OLD.CUST="P" AND EST.CUST#"P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST.NAME,"",PROSPECT.EST.XREF,PREFIX)
         CALL GEN.XREF.MAINT(CONO,EST.KEY,"",EST.CUST,CUST.EST.XREF,PREFIX)
      CASE OLD.CUST#"P" AND EST.CUST="P"
         CALL GEN.XREF.MAINT(CONO,EST.KEY,OLD.CUST,"",CUST.EST.XREF,PREFIX)
         CALL GEN.XREF.MAINT(CONO,EST.KEY,"",EST.CUST.NAME,PROSPECT.EST.XREF,PREFIX)
   END CASE
   P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   GOTO 99999
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC)
* 90000*
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
   RECALC.ERRMSG = ERRMSG
   IF UPDATE.FLAG THEN
      CALL EST.UPDATE (CONO,"E",EST.DUP.KEY,EST.KEY,ESTIMATE.DEPT.BU,ESTIMATE.DEPT)
   END
   RETURN
*
*---- END OF PROGRAM
*
99999*
   RECALC.ACTION = "X"
   MATWRITE RECALC.REC ON CONTROL, RECALC.KEY
END
