*COPY>CPYLIB>SCOMMON1
***************************************************************************
*
* REVISION - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - CORE.PROD.MAINT
*
* SOURCE   - RFQBP
*
* AUTHOR   - CHRIS MYKLEBUST, PRIMAC SYSTEMS
*
* DATE     - 03/03/2003
*
* DESCRIPTION
* This program updates and maintains the CORE.PROD file for RFQ.
*
*T26934 cmykleb 03/03/2003 * Initial programming.
***************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>CORE.PROD
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","RFQ.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN RFQ.SCREENS FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","EQUIPMENT" TO EQUIPMENT ELSE
      ERRMSG = "CANNOT OPEN EQUIPMENT FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","COST.CNTR" TO COST.CNTR ELSE
      ERRMSG = "CANNOT OPEN COST.CNTR FILE"
      GOSUB 90000
      STOP
   END
   OPEN "","CORE.PROD" TO CORE.PROD ELSE
      ERRMSG = "CANNOT OPEN CORE.PROD FILE"
      GOSUB 90000
      STOP
   END
*
*---- INITIALIZATION
*
   CONO = ""
   CALL GET.CONO1(CONO,MAT COMP.REC,COMPANY,CONTROL)
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;CORE.PROD.MAINT
   SCREEN FORMAT
*
*---- MAIN PROCESSING
*
100*
   SCREEN FIELD;CORE.PROD.MAINT;1
   SCREEN INPUT;CORE.PROD.MAINT;1
   IF S$VALUE = "END" THEN GOTO 99999
   CORE.PROD.ID = S$VALUE
   NEW.REC = 0
   MATREAD CORPROD.REC FROM CORE.PROD, CONO:CORE.PROD.ID ELSE
      MAT CORPROD.REC = ""
      NEW.REC = 1
   END
   IF NEW.REC THEN
      FOR FLD = 1 TO 13
         ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10900,11000,11100,11200,11300,11400
         IF S$VALUE = "END" THEN
            SCREEN CLEAR;CORE.PROD.MAINT
            RELEASE
            GOTO 100
         END
      NEXT FLD
   END ELSE
      GOSUB 80000
      SCREEN DISPLAY;CORE.PROD.MAINT;ALL
   END
*
*---- GET OPERATOR REPLY
*
500*
   SCREEN FIELD;CORE.PROD.MAINT;16
   SCREEN INPUT;CORE.PROD.MAINT;16
   OPTION = S$VALUE
   BEGIN CASE
      CASE OPTION # "" AND NUM(OPTION)
         FLD = OPTION
         ON FLD GOSUB 10100,10200,10300,10400,10500,10600,10700,10800,10900,11000,11100,11200,11300,11400
      CASE OPTION = "E" OR OPTION = "END"
         SCREEN CLEAR;CORE.PROD.MAINT
         RELEASE
         GOTO 100
      CASE OPTION = "F"
         MATWRITE CORPROD.REC ON CORE.PROD, CONO:CORE.PROD.ID
         ERRMSG = ""
         IN.DATA = ""
         IN.DATA<1> = CONO
         IN.DATA<3> = CONO:CORE.PROD.ID
         IN.DATA<4> = "CORE.PROD"
         CALL EPRIMAC_XREF_SUB(ERRMSG,IN.DATA,"",EPRIMAC_XREF)
         IF ERRMSG # "" THEN GOSUB 90000
         SCREEN CLEAR;CORE.PROD.MAINT
         GOTO 100
   END CASE
   GOTO 500
*
*---- GET CORE PRODUCT DESCRIPTION
*
10100*
   SCREEN FIELD;CORE.PROD.MAINT;17
   SCREEN INPUT;CORE.PROD.MAINT;17;RETURN
   CORPROD.DESC = S$VALUE
   RETURN
*
*---- GET BIND STYLE
*
10200*
   SCREEN FIELD;CORE.PROD.MAINT;18
   SCREEN INPUT;CORE.PROD.MAINT;18;RETURN
   CORPROD.BIND.STYLE = S$VALUE
   RETURN
*
*---- GET BIND SPOILAGE
*
10300*
   SCREEN FIELD;CORE.PROD.MAINT;5
   SCREEN INPUT;CORE.PROD.MAINT;5;RETURN
   CORPROD.BIND.SPOIL = S$VALUE
   RETURN
*
*---- GET # UP
*
10400*
   SCREEN FIELD;CORE.PROD.MAINT;6
   SCREEN INPUT;CORE.PROD.MAINT;6;RETURN
   CORPROD.NO.UP = S$VALUE
   RETURN
*
*---- GET LINING SPOILAGE
*
10500*
   SCREEN FIELD;CORE.PROD.MAINT;7
   SCREEN INPUT;CORE.PROD.MAINT;7;RETURN
   CORPROD.SPOILAGE<1,1> = S$VALUE
   RETURN
*
*---- GET CLOTH SPOILAGE
*
10600*
   SCREEN FIELD;CORE.PROD.MAINT;8
   SCREEN INPUT;CORE.PROD.MAINT;8;RETURN
   CORPROD.SPOILAGE<1,2> = S$VALUE
   RETURN
*
*---- GET BOARD SPOILAGE
*
10700*
   SCREEN FIELD;CORE.PROD.MAINT;9
   SCREEN INPUT;CORE.PROD.MAINT;9;RETURN
   CORPROD.SPOILAGE<1,3> = S$VALUE
   RETURN
*
*---- GET SUFFIX
*
10800*
   SCREEN FIELD;CORE.PROD.MAINT;10
   SCREEN INPUT;CORE.PROD.MAINT;10;RETURN
   CORPROD.SUFFIX = S$VALUE
   RETURN
*
*---- GET VP JOB CATEGORY
*
10900*
   SCREEN FIELD;CORE.PROD.MAINT;19
   SCREEN INPUT;CORE.PROD.MAINT;19;RETURN
   CORPROD.VP = S$VALUE
   RETURN
*
*---- GET JOB CATEGORY FOR 5 X 8
*
11000*
   SCREEN FIELD;CORE.PROD.MAINT;20
   SCREEN INPUT;CORE.PROD.MAINT;20;RETURN
   CORPROD.JOB.CATG<1,1> = S$VALUE
   RETURN
*
*---- GET JOB CATEGORY FOR 7 X 10
*
11100*
   SCREEN FIELD;CORE.PROD.MAINT;21
   SCREEN INPUT;CORE.PROD.MAINT;21;RETURN
   CORPROD.JOB.CATG<1,2> = S$VALUE
   RETURN
*
*---- GET JOB CATEGORY FOR 8 X 11
*
11200*
   SCREEN FIELD;CORE.PROD.MAINT;22
   SCREEN INPUT;CORE.PROD.MAINT;22;RETURN
   CORPROD.JOB.CATG<1,3> = S$VALUE
   RETURN
*
*---- GET CASE STAMPER CODE
*
11300*
   SCREEN FIELD;CORE.PROD.MAINT;23
   SCREEN INPUT;CORE.PROD.MAINT;23;RETURN
   CORPROD.CASE.STAMPER = S$VALUE
   RETURN
*
*---- GET F&B CORE PROD ID
*
11400*
   SCREEN FIELD;CORE.PROD.MAINT;24
   SCREEN INPUT;CORE.PROD.MAINT;24;RETURN
   CORPROD.FB.CODE = S$VALUE
   RETURN
*
*---- LOAD SCREEN VALUES
*
80000*
   S$DATA(17)<S$SCR> = CORPROD.DESC
   S$DATA(18)<S$SCR> = CORPROD.BIND.STYLE
   S$DATA(5)<S$SCR> = CORPROD.BIND.SPOIL
   S$DATA(6)<S$SCR> = CORPROD.NO.UP
   S$DATA(7)<S$SCR> = CORPROD.SPOILAGE<1,1>
   S$DATA(8)<S$SCR> = CORPROD.SPOILAGE<1,2>
   S$DATA(9)<S$SCR> = CORPROD.SPOILAGE<1,3>
   S$DATA(10)<S$SCR> = CORPROD.SUFFIX
   S$DATA(19)<S$SCR> = CORPROD.VP
   S$DATA(20)<S$SCR> = CORPROD.JOB.CATG<1,1>
   S$DATA(21)<S$SCR> = CORPROD.JOB.CATG<1,2>
   S$DATA(22)<S$SCR> = CORPROD.JOB.CATG<1,3>
   S$DATA(23)<S$SCR> = CORPROD.CASE.STAMPER
   S$DATA(24)<S$SCR> = CORPROD.FB.CODE
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   STOP
END
