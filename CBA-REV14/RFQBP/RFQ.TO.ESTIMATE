   SUBROUTINE RFQ.TO.ESTIMATE(CONO,EST.ID,MAT RFQ.REC,ERRMSG)
**********************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - COURIERBP
* PROGRAM     - RFQ.TO.ESTIMATE
* BY          - CHRIS MYKLEBUST, PRIMAC SYSTEMS
* DATE        - 10/25/2002
* DESCRIPTION -This program will create an estimate from the information
*              entered on the new EPrimac RFQ entry screen.
*
*T26934 cm 10/25/2002 * Create Estimate record from information supplied
*                       by the RFQ information.
**********************************************
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>COMPANY
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JES.CPYLIB>RECALC.PARAM
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>JES.CPYLIB>ESTIMATE.PAPER.GROUP
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>JES.CPYLIB>ESTIMATE.GRP
*COPY>JES.CPYLIB>ESTIMATE.DEPT
*COPY>JES.CPYLIB>ESTIMATE.TEMP
*COPY>JES.CPYLIB>EQUIPMENT
*COPY>JES.CPYLIB>CORE.PROD
*COPY>JES.CPYLIB>ESTIMATE.RFQ
*COPY>JES.CPYLIB>ESTIMATE.DIV
*COPY>JES.CPYLIB>ESTIMATE.PRESS.SPOIL
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>PRICE.TABLE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*--- DIMENSION COMPONENTS
*
   DIM CMP.REC(20)
   EQU CMP.PRESS.ID             TO CMP.REC(1)
   EQU CMP.WEB.CNT              TO CMP.REC(2)
   EQU CMP.PAGES.CNT            TO CMP.REC(3)
   EQU CMP.PAGES.ALL.WEBS       TO CMP.REC(4)
   EQU CMP.PAGES.PER.FORM       TO CMP.REC(5)
   EQU CMP.COLORS.SIDE1         TO CMP.REC(6)
   EQU CMP.COLORS.SIDE2         TO CMP.REC(7)
   EQU CMP.NO.UP                TO CMP.REC(8)
   EQU CMP.NO.FORMS             TO CMP.REC(9)
   EQU CMP.NO.PLATES            TO CMP.REC(10)
   EQU CMP.OS.WIDTH             TO CMP.REC(11)
   EQU CMP.PS.WIDTH             TO CMP.REC(12)
   EQU CMP.PRESS.SPOIL          TO CMP.REC(13)
   EQU CMP.COMP.DESC            TO CMP.REC(14)
   MAT CMP.REC = ""
*
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*--- Open Files
*
   OPEN 'CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'CUSTOMER' TO CUSTOMER ELSE
      ERRMSG = 'CUSTOMER FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE' TO ESTIMATE ELSE
      ERRMSG = 'ESTIMATE FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.MATL' TO ESTIMATE.MATL ELSE
      ERRMSG = 'ESTIMATE.MATL FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.GRP' TO ESTIMATE.GRP ELSE
      ERRMSG = 'ESTIMATE.GRP FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE
      ERRMSG = 'ESTIMATE.DEPT FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.PRESS.SPOIL' TO ESTIMATE.PRESS.SPOIL ELSE
      ERRMSG = 'ESTIMATE.PRESS.SPOIL FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.PAPER.GROUP' TO ESTIMATE.PAPER.GROUP ELSE
      ERRMSG = 'ESTIMATE.PAPER.GROUP FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'EQUIPMENT' TO EQUIPMENT ELSE
      ERRMSG = 'EQUIPMENT FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'INVENTORY' TO INVENTORY ELSE
      ERRMSG = 'INVENTORY FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.RFQ' TO ESTIMATE.RFQ ELSE
      ERRMSG = 'ESTIMATE.RFQ FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'CORE.PROD' TO CORE.PROD ELSE
      ERRMSG = 'CORE.PROD FILE IS MISSING'
      GOTO 93000
   END
   OPEN 'ESTIMATE.DIV' TO ESTIMATE.DIV ELSE
      ERRMSG = 'ESTIMATE.DIV FILE IS MISSING'
      GOTO 93000
   END
   PORT.NO = 'TTY' ; CALL SYSVARS.SUB(PORT.NO)
*  CONO = ""
   ACTION = ""
*  CALL GET.CONO1(CONO, MAT COMP.REC, COMPANY, CONTROL)
100 *
   MATREAD CORPROD.REC FROM CORE.PROD, CONO:RFQ.BIND.PROD<1,1> ELSE
      MAT CORPROD.REC = ""
   END
   MAT EST.REC = ''
   REVISION = 1
   EST.ESTIMATOR = RFQ.ESTIMATOR
   RFQ.TOTAL.PAGES = (RFQ.PAGES.1 + RFQ.PAGES.2)
   IF RFQ.CUST.FLAG = 'N' THEN
      EST.CUST = 'P'
   END ELSE
      EST.CUST = RFQ.CUST.NO
   END
   EST.CUST.NAME = RFQ.CUST.NAME
   EST.CUST.ADDR1 = RFQ.CUST.ADDRESS<1,1>
   EST.CUST.ADDR2 = RFQ.CUST.ADDRESS<1,2>
   EST.CUST.ADDR3 = RFQ.CUST.ADDRESS<1,3>
   EST.CUST.ADDR4 = RFQ.CUST.ADDRESS<1,4>
   IF EST.CUST.NAME = '' THEN
      MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST THEN
         EST.CUST.NAME = CUST.NAME
         EST.CUST.ADDR1 = CUST.ADDR1
         EST.CUST.ADDR2 = CUST.ADDR2
         EST.CUST.ADDR3 = CUST.ADDR3
         EST.CUST.ADDR4 = CUST.ADDR4:"  ":CUST.ZIP
      END
   END
   EST.CUST.ATTN = RFQ.CUST.ATTN
   EST.SALESMAN = RFQ.SALESREP
   EST.TYPE = "R"
*
*--- CATEGORY TYPE
*
   RFQ.PAGE.WIDTH = ICONV(RFQ.PAGE.WIDTH,'MD2')
   RFQ.PAGE.WIDTH = RFQ.PAGE.WIDTH'L%4'
   BEGIN CASE
      CASE RFQ.SPINE.LENGTH MATCHES '2N.3N'
         RFQ.SPINE.LENGTH = ICONV(RFQ.SPINE.LENGTH,'MD3')
         RFQ.SPINE.LENGTH = RFQ.SPINE.LENGTH'L%5'
      CASE RFQ.SPINE.LENGTH MATCHES '1N.3N'
         RFQ.SPINE.LENGTH = ICONV(RFQ.SPINE.LENGTH,'MD3')
         RFQ.SPINE.LENGTH = RFQ.SPINE.LENGTH'L%4'
      CASE RFQ.SPINE.LENGTH MATCHES '0N.2N'
         RFQ.SPINE.LENGTH = ICONV(RFQ.SPINE.LENGTH,'MD2')
         RFQ.SPINE.LENGTH = RFQ.SPINE.LENGTH'L%4'
      CASE RFQ.SPINE.LENGTH MATCHES '5N'
         RFQ.SPINE.LENGTH = RFQ.SPINE.LENGTH'L%5'
      CASE RFQ.SPINE.LENGTH MATCHES '0N'
         RFQ.SPINE.LENGTH = RFQ.SPINE.LENGTH'L%4'
      CASE 1
   END CASE
   BEGIN CASE
      CASE RFQ.PAGE.WIDTH = 2750
         EST.CATG = CORPROD.VP
      CASE RFQ.PAGE.WIDTH GE 3000 AND RFQ.PAGE.WIDTH LE 5500
         EST.CATG = CORPROD.JOB.CATG<1,1>
      CASE RFQ.PAGE.WIDTH LE 7000
         EST.CATG = CORPROD.JOB.CATG<1,2>
      CASE RFQ.PAGE.WIDTH LE 8000
         EST.CATG = CORPROD.JOB.CATG<1,3>
   END CASE
   IF RFQ.PAGE.WIDTH = 2750 THEN
      RFQ.DIV = '60-02'
   END ELSE
      RFQ.DIV = '60-01'
   END
   EST.SALES.CODE = RFQ.SALES.CODE
   EST.PURGE.TYPE = "M"
   EST.COMMENTS = RFQ.DESC
   EST.DATE.ENTERED = RFQ.RECV.DATE
   EST.DATE.REQUIRED = RFQ.DEL.DATE
   EST.PRT.PRICE.THOU = 'Y'
   EST.PRT.PRICE.UOM = 'M'
   EST.OM.PCT = '000000'
   EST.PDEF.TYPE = 1
   FOR M = 1 TO 6
      EST.MARKUP<1,M>=CO.JES.PARAM<1,M>
   NEXT M
   EST.QTY = RFQ.QTY
   EST.DIV = RFQ.DIV
   MATREAD ESTV.REC FROM ESTIMATE.DIV, CONO:EST.DIV ELSE
      MAT ESTV.REC = ""
   END
*  EST.DEPT = ESTV.DEPT
   BIND.ONLY.FLAG = ""
*
*--- PRODUCT DEFINTION
*
   *** CHECK FOR BIND ONLY ***
   IF RFQ.PQTY + 0 = 0 THEN
      COMP = 0
      BIND.ONLY.FLAG = 1
      GOTO BIND.COMPS
   END
   EST.DEPT = ESTV.DEPT
   CALL RFQ.COMPONENT.SUB(MAT RFQ.REC,MAT CMP.REC,MAT CORPROD.REC,ERRMSG)
   IF ERRMSG # '' THEN GOTO 93000
   CMP.CNT = DCOUNT(CMP.PAGES.PER.FORM<1>,VM)
   EST.COMPONENT.CNT = CMP.CNT
   FOR COMP = 1 TO CMP.CNT
      MATREAD CORPROD.REC FROM CORE.PROD, CONO:RFQ.BIND.PROD<1,1> ELSE
         MAT CORPROD.REC = ''
      END
      EST.PROD.BIND.ONLY<1,COMP> = "N" ; * BIND ONLY FLAG
      EST.PROD.RFQ.BIND.NO<1,COMP> = 1 ; * BINDERY # FROM RFQ
      EST.PROD.OS.TYPE<1,COMP> = "R" ; * PAPER TYPE
      EST.PROD.OS.USAGE<1,COMP> = RFQ.GROUP
      EST.PROD.OS.PROD<1,COMP> = RFQ.GROUP:RFQ.BASIS.WGT
      EST.PROD.MODE<1,COMP> = "P"
      EST.PROD.DESC<1,COMP> = CMP.COMP.DESC<1,COMP>
      EST.PROD.WEB.CNT<1,COMP> = CMP.WEB.CNT<1,COMP>
      EST.PROD.COLORS.1<1,COMP> = CMP.COLORS.SIDE1<1,COMP>
      EST.PROD.COLORS.2<1,COMP> = CMP.COLORS.SIDE2<1,COMP>
      EST.PROD.NO.UP<1,COMP> = CORPROD.NO.UP
      EST.PROD.FORMS<1,COMP> = CMP.NO.FORMS<1,COMP>
      EST.PROD.PLATES<1,COMP> = CMP.NO.PLATES<1,COMP>
      EST.PROD.INIT.MR.CNT<1,COMP> = 1
      EST.PROD.INIT.MR.IMP<1,COMP> = 0
      EST.PROD.SUBS.MR.CNT<1,COMP> = 0
      EST.PROD.SUBS.MR.IMP<1,COMP> = 0
      EST.PROD.PCST<1,COMP> = 0
      EST.PROD.PG.CNT<1,COMP> = CMP.PAGES.CNT<1,COMP>
      EST.PROD.PGS.PER.FORM<1,COMP> = CMP.PAGES.PER.FORM<1,COMP>
      IF EST.PROD.WEB.CNT<1,COMP> + 0 GT 1 THEN
         EST.PROD.PGS.ALL.WEBS<1,COMP> = CMP.PAGES.ALL.WEBS<1,COMP>
      END
      EST.PROD.PRESS.ID<1,COMP> = CMP.PRESS.ID<1,COMP>
      EST.PROD.PRESS.SPOIL<1,COMP> = CMP.PRESS.SPOIL<1,COMP>
*
*-COMPUTE NUMBER OF PASSES PER FORM AND SUBSEQUENT MR COUNT
*
      PRS = EST.PROD.PRESS.ID<1,COMP>
      MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:PRS ELSE
         MAT EQUIPMENT.REC = ""
      END
      C1=EST.PROD.COLORS.1<1,COMP>+0
      C2=EST.PROD.COLORS.2<1,COMP>+0
      CC=EQP.PRESS.CLR.CNT
      IF C1 > C2 THEN
         PP=INT(C1/CC+0.99)
      END ELSE
         PP=INT(C2/CC+0.99)
      END
      IF PP < 1 THEN PP = 1
      EST.PROD.PASSES<1,COMP>=PP
      EST.PROD.SUBS.MR.CNT<1,COMP> = PP * EST.PROD.FORMS<1,COMP> - EST.PROD.INIT.MR.CNT<1,COMP>
*
*-PRESS BIND SPOILAGE CALCULATIONS
*
*     EST.PROD.BIND.SPOIL<1,COMP> = OCONV(CORPROD.BIND.SPOIL,'MD2')
      HOLD.SPOIL = ''
      HOLD.PER = ''
      FOR B = 1 TO 4
         MATREAD CORPROD.REC FROM CORE.PROD,CONO:RFQ.BIND.PROD<1,B> THEN
            SPOIL.PER = OCONV(CORPROD.BIND.SPOIL,'MD2')
            SPOILAGE = INT(SPOIL.PER * RFQ.PBIND.QTY<1,B> / 100)
            HOLD.PER = HOLD.PER + SPOILAGE
            EST.PROD.BIND.SPOIL<1,COMP> = OCONV(CORPROD.BIND.SPOIL,'MD2')
         END
         *** GILDED, SPRAY GILDED, STAINED ***
         IF RFQ.BIND.EDGES<1,B> # 'PL' AND RFQ.BIND.EDGES<1,B> # '' THEN 
            SPOIL = RFQ.PBIND.QTY<1,B> * .01
            HOLD.SPOIL = HOLD.SPOIL + SPOIL
         END
         *** RIBBIONS ***
         IF RFQ.BIND.RIBBONS<1,B> + 0 GT 0 THEN
            SPOIL = RFQ.PBIND.QTY<1,B> * .01
            HOLD.SPOIL = HOLD.SPOIL + SPOIL
         END
         *** QUANTITY TO INDEX ***
         IF RFQ.QTY.TO.INDEX<1,B> + 0 GT 0 THEN
            SPOIL = RFQ.QTY.TO.INDEX<1,B> * .01
            HOLD.SPOIL = HOLD.SPOIL + SPOIL
         END
      NEXT B
      IF HOLD.SPOIL GT 0 THEN
         HOLD.SPOIL = HOLD.SPOIL + HOLD.PER
         SPOIL.PER = ICONV(HOLD.SPOIL / SUM(RFQ.PBIND.QTY<1>),'MD4')
*        CUR.SPOIL = ICONV(EST.PROD.BIND.SPOIL<1,COMP>,'MD2') + SPOIL.PER
         EST.PROD.BIND.SPOIL<1,COMP> = OCONV(SPOIL.PER,'MD2')
      END
      *** END OF PRESS BIND SPOILAGE CALCULATIONS ***
      EST.PROD.OS.WIDTH<1,COMP> = CMP.OS.WIDTH<1,COMP>
      EST.PROD.OS.LENGTH<1,COMP>=EQP.PRESS.MIN.LENGTH
      EST.PROD.PS.LENGTH<1,COMP>=EQP.PRESS.MIN.LENGTH
      EST.PROD.PS.WIDTH<1,COMP> = CMP.OS.WIDTH<1,COMP>
      MATREAD PST.REC FROM ESTIMATE.PRESS.SPOIL,CONO:EST.PROD.PRESS.SPOIL<1,COMP> ELSE
         MAT PST.REC = ""
      END
      EST.PROD.INIT.MR.IMP<1,COMP>=PST.INIT.QTY
      EST.PROD.SUBS.MR.IMP<1,COMP>=PST.SUB.QTY
      IF EST.PROD.PRESS.SPOIL<1,COMP,2> # '' THEN
         EST.PROD.INIT.MR.IMP<1,COMP,2>=PST.INIT.QTY
         EST.PROD.SUBS.MR.IMP<1,COMP,2>=PST.SUB.QTY
      END
      *** GET SOME OF THE INFORMATION FROM THE MATERIAL FILE ***
      ESTM.ID = EST.PROD.OS.TYPE<1,COMP>:EST.PROD.OS.USAGE<1,COMP>
      MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:ESTM.ID ELSE
         MAT ESTM.REC = ''
      END
      LOCATE EST.PROD.OS.PROD<1,COMP> IN ESTM.PROD<1>,1 SETTING MP ELSE MP = 99
      EST.PROD.OS.GRAIN<1,COMP> = ESTM.GRAIN<1,MP>
      EST.PROD.PS.GRAIN<1,COMP> = ESTM.GRAIN<1,MP>
      EST.PROD.COLOR<1,COMP> = ESTM.CLR.CD<1,MP>
      EST.PROD.FINISH<1,COMP> = ESTM.FINISH.CD<1,MP>
      EST.PROD.COATING<1,COMP,1>=ESTM.COAT.CD<1,MP>
      EST.PROD.CALIPER<1,COMP> = ESTM.CALIPER<1,MP>
      EST.PROD.PPI<1,COMP> = ESTM.PPI<1,MP>
      EST.PROD.M.WT<1,COMP,1>=ESTM.M.WEIGHT<1,MP>
      EST.PROD.US.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10) + 2500
      EST.PROD.US.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10) + 2500
      EST.PROD.TS.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10)
      EST.PROD.TS.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10)
      EST.PROD.BASIS.WT<1,COMP> = OCONV(RFQ.BASIS.WGT * 100,'MD2')
      CALIPER = (2000 / RFQ.PPI)
      EST.PROD.CALIPER<1,COMP> = ICONV(CALIPER,'MD3')
      IF RFQ.PAP.SUPP.BY = "CUST" THEN
         EST.PROD.PLINE<1,COMP> ="CPROP"
      END ELSE
         EST.PROD.PLINE<1,COMP> = "OPAPER"
      END
*
*--- INK INFORMATION
*
      RFQ.TEXT.SUPP.BY = UPCASE(RFQ.TEXT.SUPP.BY)
      IF RFQ.TEXT.SUPP.BY[1,3] = "NAT" OR RFQ.TEXT.SUPP.BY = "" THEN
         EST.PROD.INK.ID<1,COMP> = "BLK"
         EST.PROD.INK.SIDES<1,COMP> = 2
         IF RFQ.COLOR.CNT = "2CT" THEN
            EST.PROD.INK.COVER<1,COMP> = 10
         END ELSE
            EST.PROD.INK.COVER<1,COMP> = 15
         END
         *** CHECK FOR 2 COLORS ***
         IF EST.PROD.COLORS.1<1,COMP,1> = 2 THEN 
            EST.PROD.INK.ID<1,COMP> = EST.PROD.INK.ID<1,COMP>:"!PMS"
            EST.PROD.INK.SIDES<1,COMP> = "2!2"
            IF RFQ.COLOR.CNT = '2CT' THEN
               EST.PROD.INK.COVER<1,COMP> = EST.PROD.INK.COVER<1,COMP>:"!5"
            END ELSE
               EST.PROD.INK.COVER<1,COMP> = EST.PROD.INK.COVER<1,COMP>:"!3"
            END
         END
         *** END OF 2 COLORS ***
      END
      CALL EST.PROD.SUB.1B(CONO,"",COMP,1)
      *** CHECK FOR 2 WEBS AND DUPLICATE INFO FOR 2ND WEB ***
      IF CMP.WEB.CNT<1,COMP> = 2 THEN
         EST.PROD.OS.GRAIN<1,COMP,2> = EST.PROD.OS.GRAIN<1,COMP,1>
         EST.PROD.PS.GRAIN<1,COMP,2> = EST.PROD.PS.GRAIN<1,COMP,1>
         EST.PROD.COLOR<1,COMP,2> = EST.PROD.COLOR<1,COMP,1>
         EST.PROD.FINISH<1,COMP,2> = EST.PROD.FINISH<1,COMP,1>
         EST.PROD.COATING<1,COMP,2> = EST.PROD.COATING<1,COMP,1>
         EST.PROD.CALIPER<1,COMP,2> = EST.PROD.CALIPER<1,COMP,1>
         EST.PROD.PPI<1,COMP,2> = EST.PROD.PPI<1,COMP,1>
         EST.PROD.M.WT<1,COMP,2> = EST.PROD.M.WT<1,COMP,1>
         EST.PROD.US.WIDTH<1,COMP,2> = EST.PROD.US.WIDTH<1,COMP,1>
         EST.PROD.US.LENGTH<1,COMP,2> = EST.PROD.US.LENGTH<1,COMP,1>
         EST.PROD.TS.WIDTH<1,COMP,2> = EST.PROD.TS.WIDTH<1,COMP,1>
         EST.PROD.TS.LENGTH<1,COMP,2> = EST.PROD.TS.LENGTH<1,COMP,1>
         EST.PROD.BASIS.WT<1,COMP,2> = EST.PROD.BASIS.WT<1,COMP,1>
         EST.PROD.PLINE<1,COMP,2> = EST.PROD.PLINE<1,COMP,1>
         EST.PROD.INK.ID<1,COMP,2> = EST.PROD.INK.ID<1,COMP,1>
         EST.PROD.INK.SIDES<1,COMP,2> = EST.PROD.INK.SIDES<1,COMP,1>
         EST.PROD.INK.COVER<1,COMP,2> = EST.PROD.INK.COVER<1,1>
         EST.PROD.OS.USAGE<1,COMP,2> = EST.PROD.OS.USAGE<1,COMP,1>
         EST.PROD.OS.PROD<1,COMP,2> = EST.PROD.OS.PROD<1,COMP,1>
         EST.PROD.OS.LENGTH<1,COMP,2> = EST.PROD.OS.LENGTH<1,COMP,1>
         EST.PROD.PS.LENGTH<1,COMP,2> = EST.PROD.PS.LENGTH<1,COMP,1>
         EST.PROD.MODE<1,COMP,2> = EST.PROD.MODE<1,COMP,1>
         EST.PROD.COLORS.1<1,COMP,2> = EST.PROD.COLORS.1<1,COMP,1>
         EST.PROD.COLORS.2<1,COMP,2> = EST.PROD.COLORS.2<1,COMP,1>
         EST.PROD.BIND.SPOIL<1,COMP,2> = EST.PROD.BIND.SPOIL<1,COMP,1>
         EST.PROD.INIT.MR.CNT<1,COMP,2> = EST.PROD.INIT.MR.CNT<1,COMP,1>
         EST.PROD.INIT.MR.IMP<1,COMP,2> = EST.PROD.INIT.MR.IMP<1,COMP,1>
         EST.PROD.SUBS.MR.CNT<1,COMP,2> = EST.PROD.SUBS.MR.CNT<1,COMP,1>
         EST.PROD.SUBS.MR.IMP<1,COMP,2> = EST.PROD.SUBS.MR.IMP<1,COMP,1>
         CALL EST.PROD.SUB.1B(CONO,"",COMP,2)
      END
      CALL RFQ.TO.ESTIMATE.SUB(CONO,MAT RFQ.REC,EST.ID,B,COMP,ERRMSG)
      IF ERRMSG # '' THEN GOTO 93000
   NEXT COMP
   *** END OF PRESS COMPONENTS ***
   COMP = COMP - 1
*
*--- BIND ONLY COMPONENTS
*
BIND.COMPS: *
   FOR BIND = 1 TO 4
      IF RFQ.PBIND.QTY<1,BIND> + 0 GT 0 THEN
         COMP = COMP + 1
         MATREAD CORPROD.REC FROM CORE.PROD,CONO:RFQ.BIND.PROD<1,BIND> ELSE
            MAT CORPROD.REC = ""
         END
         EST.PROD.BIND.ONLY<1,COMP> = 'Y'
         EST.COMP.QTY<1,COMP> = RFQ.PBIND.QTY<1,BIND>
         EST.PROD.RFQ.BIND.NO<1,COMP> = BIND ; * BINDERY # FROM RFQ
         EST.PROD.OS.TYPE<1,COMP> = "R" ; * PAPER TYPE
         EST.PROD.OS.USAGE<1,COMP> = RFQ.GROUP
         EST.PROD.US.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10) + 2500
         EST.PROD.US.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10) + 2500
         EST.PROD.TS.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10)
         EST.PROD.TS.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10)
*        IF BIND.ONLY.FLAG THEN
*           GOSUB BIND.SPOIL
*        END ELSE
*           EST.PROD.BIND.SPOIL<1,COMP> = EST.PROD.BIND.SPOIL<1,1,1>
*        END
         GOSUB BIND.SPOIL
         IF RFQ.PBIND.DESC<1,BIND> # "" THEN
            EST.PROD.DESC<1,COMP> = RFQ.PBIND.DESC<1,BIND>
         END ELSE
            EST.PROD.DESC<1,COMP> = 'BIND ONLY COMPONENT ':COMP
         END
         GOSUB BIND.DEF
         CALL RFQ.TO.ESTIMATE.SUB(CONO,MAT RFQ.REC,EST.ID,BIND,COMP,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
         CALL EST.PROD.SUB.1B(CONO,"",COMP,1)
      END
   NEXT BIND
   *** END OF BIND ONLY COMPONENTS ***
   EST.COMPONENT.CNT = COMP
   EQTY = EST.QTY
   EST.ORDER = 'AUTO' ; * SET TEMPORARY FLAG
   EST.ORDER = ''
   MATWRITE EST.REC ON ESTIMATE, CONO : EST.ID
   MAT RECALC.REC = ''
   RECALC.CONO = CONO
   RECALC.ACTION = 'U'
   RECALC.OLD.KEY = EST.ID
   RECALC.OLD.QTY = EST.QTY
   RECALC.STD = 'E'
   RECALC.NEW.KEY = EST.ID
   RECALC.NEW.QTY = EST.QTY
   RECALC.HALM = 'Y'
   RECALC.RFQ = 'Y'
   MATWRITE RECALC.REC ON CONTROL, 'EST.RECALC.':PORT.NO
   PERFORM "EST.RECALC"
   RETURN
*
*--- BINDERY DEFINITION
*
BIND.DEF: 
   EST.BIND.US.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10) + 2500
   EST.BIND.US.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10) + 2500
   EST.BIND.TP.WIDTH<1,COMP> = (RFQ.PAGE.WIDTH * 10)
   EST.BIND.TP.LENGTH<1,COMP> = (RFQ.SPINE.LENGTH * 10)
   IF RFQ.BIND.STYLE = "AD" THEN
      EST.BIND.STYLE<1,COMP> = "P"
   END ELSE
      EST.BIND.STYLE<1,COMP> = "S"
   END
   IF RFQ.BIND.PROD<1,BIND>[1,1] = 'P' THEN
      EST.BIND.COVER.STYLE<1,COMP> = "P"
   END ELSE
      EST.BIND.COVER.STYLE<1,COMP> = "C"
   END
   EST.BIND.EDGE.TYPE<1,COMP> = "S"
   EST.BIND.LBS.PER.BOX<1,COMP> = RFQ.BLK.CART.NO<1,BIND>
*
*- FOLDING CALCULATIONS
*
   IF BIND = 1 THEN
      *** BUILD TEMPORARY CALC RECORD ***
      FDATA = ''
      FOR F = 1 TO 3
         BEGIN CASE
            CASE F = 1
               FDATA<1,1> = 32
               FDATA<2,1> = (2 * 32) / RFQ.PPI
               FDATA<3,1> = 64
            CASE F = 2
               FDATA<1,2> = 40
               FDATA<2,2> = (2 * 40) / RFQ.PPI
               FDATA<3,2> = 80
            CASE F = 3
               FDATA<1,3> = 48
               FDATA<2,3> = (2 * 48) / RFQ.PPI
               FDATA<3,3> = 96
         END CASE
      NEXT F
      MAX.CHECK = ''
      BEGIN CASE
         CASE EST.PROD.PRESS.ID<1,1> = '110'
            MAX.SIGS = '0.125'
            MAX.CHECK = (0.95 * MAX.SIGS)
         CASE EST.PROD.PRESS.ID<1,1> = '120'
            MAX.SIGS = '0.125'
            MAX.CHECK = (0.95 * MAX.SIGS)
         CASE EST.PROD.PRESS.ID<1,1> = '130'
            MAX.SIGS = '0.144'
            MAX.CHECK = (0.95 * MAX.SIGS)
      END CASE
      *** END OF TEMPOARY CALC RECORD ***
      SIGS.TOTAL = ""
      PGS.TOTAL = ""
      CCTR = 'WEB'
      RFQ.PGS = RFQ.TOTAL.PAGES
      SHTS = 10000
      PPI = RFQ.PPI
*     BULK = (RFQ.PGS * SHTS / PPI + 0.5)
*     BULK = INT(BULK)
      FOR C = 1 TO EST.COMPONENT.CNT
         BULK.CHECK = ''
         LOCATE EST.PROD.PGS.ALL.WEBS<1,C> IN FDATA<3> SETTING VAR THEN
            BULK.CHECK = FDATA<2,VAR>
         END
         FOLD = 1
         IF BULK.CHECK # '' AND MAX.CHECK # '' THEN
            IF BULK.CHECK LE MAX.CHECK THEN FOLD = 2
         END
         PGS = SUM(EST.PROD.PG.CNT<1,C>)
         PGS.TOTAL = PGS.TOTAL + EST.PROD.PG.CNT<1,C,1>
         WEB.PGS = SUM(EST.PROD.PGS.PER.FORM<1,C>)
         WEB.CNT = EST.PROD.WEB.CNT<1,C>
         SIGS = INT(PGS / WEB.PGS)
         SIGS = INT(SIGS / FOLD)
         SIGS.TOTAL = SIGS.TOTAL + SIGS
      NEXT C
      BULK = (PGS.TOTAL * SHTS / PPI + 0.5)
      BULK = INT(BULK)
      EST.BIND.FOLD.CCTR<1,1> = CCTR
*     EST.BIND.FOLD.PGS<1,1> = RFQ.PGS
      EST.BIND.FOLD.PGS<1,1> = PGS.TOTAL
      EST.BIND.FOLD.SHT<1,1> = SHTS
      EST.BIND.FOLD.SIG<1,1> = SIGS.TOTAL
      EST.BIND.FOLD.PPI<1,1> = PPI
      EST.BIND.FOLD.BULK<1,1> = BULK
      *** CREATE ANOTHER FOLDING COMPONENT WHEN INSERTS ARE PRESENT ***
      PGS = 0
      SIGS = 0
      PPI = 667
      BULK = ""
      FOR C = 1 TO 5
         INS.PGS = RFQ.INSERTS.PGS<1,C> + 0
         IF INS.PGS GT 0 THEN
            SIGS = SIGS + 1
            PGS = PGS + INS.PGS
         END
      NEXT C
      IF PGS GT 0 THEN
         BULK = (PGS * SHTS / PPI + 0.5)
         BULK = INT(BULK)
         EST.BIND.FOLD.CCTR<1,2> = CCTR
         EST.BIND.FOLD.PGS<1,2> = PGS
         EST.BIND.FOLD.SHT<1,2> = SHTS
         EST.BIND.FOLD.SIG<1,2> = SIGS
         EST.BIND.FOLD.PPI<1,2> = PPI
         EST.BIND.FOLD.BULK<1,2> = BULK
      END
      *** END OF INSERTS FOLDING COMPONENT ***
   END
*
*--- CASEIN DEFINITION
*
   IF RFQ.CASE.BACK<1,BIND>[1,1] = 'F' THEN
      EST.CASE.BACK.STYLE<1,COMP> = 'F'
   END ELSE
      EST.CASE.BACK.STYLE<1,COMP> = 'R'
   END
   EST.CASE.PIECES<1,COMP> = 1
   EST.CASE.SPOIL<1,COMP,1> = CORPROD.SPOILAGE<1,1> / 100
   EST.CASE.SPOIL<1,COMP,2> = CORPROD.SPOILAGE<1,3> / 100
   EST.CASE.SPOIL<1,COMP,3> = CORPROD.SPOILAGE<1,2> / 100
   IF RFQ.CVR.STAMP.HITS<1,BIND> + 0 GT 0 THEN
      EST.CASESTAMP.CCTR<1,COMP> = CORPROD.CASE.STAMPER
      EST.CASESTAMP.HITS<1,COMP> = RFQ.CVR.STAMP.HITS<1,BIND>
   END
*
*--- ENDLEAF DEFINITION
*
   IF RFQ.BIND.END.PAP<1,BIND> # "" THEN
      MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"C" ELSE MAT ESTM.REC = ""
      LOCATE RFQ.BIND.END.PAP<1,BIND> IN ESTM.PROD<1>,1 SETTING MP THEN
         EST.CASE.ENDLF<1,COMP,1> = RFQ.BIND.END.PAP<1,BIND>
         EST.CASE.ENDLF<1,COMP,2> = ESTM.DESC<1,MP>
         EST.CASE.ENDLF.SIZE<1,COMP,1> = ESTM.WIDTH<1,MP>
         EST.CASE.ENDLF.SIZE<1,COMP,2> = ESTM.LENGTH<1,MP>
         EST.CASE.ENDLF.SPEC<1,COMP,1> = ESTM.BASIS.WT<1,MP>
         EST.CASE.ENDLF.SPEC<1,COMP,2> = ESTM.GRAIN<1,MP>
         EST.CASE.ENDLF.SPEC<1,COMP,3> = ESTM.CLR.CD<1,MP>
         EST.CASE.ENDLF.SPEC<1,COMP,4> = ESTM.FINISH.CD<1,MP>
         EST.CASE.ENDLF.UOM<1,COMP,1> = ESTM.UM<1,MP>
         EST.CASE.ENDLF.UOM<1,COMP,2> = ESTM.COST.UNIT<1,MP>
         IF EST.CASE.ENDLF.SIZE<1,COMP,2> = "" THEN
            EST.CASE.ENDLF.SRC<1,COMP> = "R"
         END ELSE
            EST.CASE.ENDLF.SRC<1,COMP> = "S"
         END
         CALL EST.CASE.SUB(CONO,"ENDLEAF",1,COMP)
         SUB.NAME = "EST.FORMULA.Q":ESTM.QPARAM<1,MP>
         TEMP.OPV = EST.CASE.ENDLF<1,COMP,1>
         CALL @SUB.NAME (CONO, ACTION, EST.QTY, "", COMP)
         QTY = EST.CASE.ENDLF.QTY<1,COMP>
         LOCATE QTY IN ESTM.END.QTY<1,MP>,1 BY "AR" SETTING CP ELSE NULL
         IF CP > COUNT(ESTM.END.QTY<1,MP>,SM)+1 THEN CP = CP - 1
         COST = ESTM.QCOST<1,MP,CP>
         EST.CASE.ENDLF.PRICE<1,COMP> = COST
*        EST.CASE.ENDLF.PRICE<1,COMP,3> = COST
      END
   END
*
*--- BOARD DEFINITION
*
   TURN.IN = 0
   IF RFQ.BRD.STOCK<1,BIND> # "" THEN
      LOCATE RFQ.BRD.STOCK<1,BIND> IN ESTM.PROD<1>,1 SETTING MP THEN
         TURN.IN = ICONV(ESTM.TURN.IN<1,MP>,'MD4') ; * FOR CLOTH CALC
         EST.CASE.BOARD<1,COMP,1> = RFQ.BRD.STOCK<1,BIND>
         EST.CASE.BOARD<1,COMP,2> = ESTM.DESC<1,MP>
         *** CALCULATE THE BOARD WIDTH/LENGTH ***
         *
         *** CALCULATE TOTAL BULK ***
         *
         TOTAL.BULK = 0 ; INSERTS.BULK = 0
         FOR B = 1 TO 5
            IF RFQ.INSERTS.PGS<1,B> + 0 GT 0 THEN
               BLK = ((RFQ.INSERTS.PGS<1,B> * 0.003) / 2)
               INSERTS.BULK = INSERTS.BULK + BLK
            END
         NEXT B
         TEXT.BULK = (PGS.TOTAL / RFQ.PPI)
         TOTAL.BULK = TEXT.BULK + INSERTS.BULK
         TOTAL.BULK = ICONV(TOTAL.BULK,'MD3')
         IF RFQ.BIND.PROD<1,BIND>[1,1] = 'F' THEN
            AA = 2 * (EST.PROD.TS.WIDTH<1,COMP,1> + 3750)
            BB = INT((TOTAL.BULK - 62) * 10)
            CWIDTH = AA + BB
            CLENGTH = EST.PROD.TS.LENGTH<1,COMP,1> + 1875
         END ELSE
            CWIDTH = (EST.PROD.TS.WIDTH<1,COMP,1> - 1250)
            CLENGTH = EST.PROD.TS.LENGTH<1,COMP,1> + 2500
         END
         EST.CASE.BOARD.SIZE<1,COMP,1> = CWIDTH
         EST.CASE.BOARD.SIZE<1,COMP,2> = CLENGTH
         *** END OF CALCULATE BOARD WIDTH/LENGTH ***
         EST.CASE.BOARD<1,COMP,2> = ESTM.DESC<1,MP>
         EST.CASE.BOARD.SRC<1,COMP> = "P"
         EST.CASE.BOARD.SPEC<1,COMP,1> = ESTM.CALIPER<1,MP>
         EST.CASE.BOARD.SPEC<1,COMP,2> = ESTM.GRAIN<1,MP>
         EST.CASE.BOARD.UOM<1,COMP,1> = ESTM.UM<1,MP>
         EST.CASE.BOARD.UOM<1,COMP,2> = ESTM.COST.UNIT<1,MP>
         EST.CASE.BOARD.UOM<1,COMP,4> = "01250"
         EST.CASE.SIDE.BD.CUT.SIZE<1,COMP,1> = EST.CASE.BOARD.SIZE<1,COMP,1>
         EST.CASE.SIDE.BD.CUT.SIZE<1,COMP,2> = EST.CASE.BOARD.SIZE<1,COMP,2>
         CALL EST.CASE.SUB(CONO,"BOARD",2,COMP)
         SUB.NAME = "EST.FORMULA.Q":ESTM.QPARAM<1,MP>
         TEMP.OPV = EST.CASE.BOARD<1,COMP,1>
         CALL @SUB.NAME (CONO, ACTION, EST.QTY, "", COMP)
         QTY = EST.CASE.SIDE.BD.QTY<1,COMP>+EST.CASE.SPINE.BD.QTY<1,COMP>
         LOCATE QTY IN ESTM.END.QTY<1,MP>,1 BY "AR" SETTING CP ELSE NULL
         IF CP > COUNT(ESTM.END.QTY<1,MP>,SM)+1 THEN CP = CP - 1
         COST = ESTM.QCOST<1,MP,CP>
         EST.CASE.BOARD.PRICE<1,COMP> = COST
      END
   END
*
*--- SIDE DEFINITION
*
   IF RFQ.CVR.STOCK<1,BIND> # "" THEN
      LOCATE RFQ.CVR.STOCK<1,BIND> IN ESTM.PROD<1>,1 SETTING MP THEN
         EST.CASE.SIDE.CL<1,COMP,1> = RFQ.CVR.STOCK<1,BIND>
         EST.CASE.SIDE.CL<1,COMP,2> = ESTM.DESC<1,MP>
         EST.CASE.SIDE.CL.SIZE<1,COMP,1> = ESTM.WIDTH<1,MP>
         EST.CASE.SIDE.CL.SIZE<1,COMP,2> = ESTM.LENGTH<1,MP>
         EST.CASE.SIDE.CL.SPEC<1,COMP,2> = ESTM.GRAIN<1,MP>
         IF RFQ.CVR.COLOR<1,MP> # '' THEN
            EST.CASE.SIDE.CL.SPEC<1,COMP,3> = RFQ.CVR.COLOR<1,BIND>
         END ELSE
            EST.CASE.SIDE.CL.SPEC<1,COMP,3> = ESTM.CLR.CD<1,MP>
         END
         EST.CASE.SIDE.CL.SPEC<1,COMP,4> = ESTM.FINISH.CD<1,MP>
         EST.CASE.SIDE.CL.UOM<1,COMP,1> = ESTM.UM<1,MP>
         EST.CASE.SIDE.CL.UOM<1,COMP,2> = ESTM.COST.UNIT<1,MP>
         IF EST.CASE.SIDE.CL.SIZE<1,COMP,2> = "" THEN
            EST.CASE.SIDE.CL.SRC<1,COMP> = "R"
         END ELSE
            EST.CASE.SIDE.CL.SRC<1,COMP> = "S"
         END
         EST.CASE.SIDE.CL.CUT.DIR<1,COMP> = ESTM.CUT.DIR<1,MP>
         EST.CASE.SIDE.CL.UOM<1,COMP,4> = "01250"
         *** CALCULATE THE SIZE (WIDTH/LENGTH) OF THE SIDE CLOTH ***
         *
         *** CALCULATE TOTAL BULK ***
         *
         TOTAL.BULK = 0 ; INSERTS.BULK = 0
         FOR B = 1 TO 5
            IF RFQ.INSERTS.PGS<1,B> + 0 GT 0 THEN
               BLK = ((RFQ.INSERTS.PGS<1,B> * 0.003) / 2)
               INSERTS.BULK = INSERTS.BULK + BLK
            END
         NEXT B
         TEXT.BULK = (PGS.TOTAL / RFQ.PPI)
         TOTAL.BULK = TEXT.BULK + INSERTS.BULK
         TOTAL.BULK = ICONV(TOTAL.BULK,'MD3')
         TURN.IN = TURN.IN / 10
         *** WIDTH CALCULATION ***
         BEGIN CASE
            CASE RFQ.BIND.PROD<1,BIND> = "PC2003"
               BWIDTH = (RFQ.PAGE.WIDTH * 2) + TOTAL.BULK + 0437
            CASE RFQ.CVR.STOCK<1,BIND> = "COV035"
               BWIDTH = 2 * (RFQ.PAGE.WIDTH + 0875) + TOTAL.BULK + 1000
            CASE RFQ.BIND.PROD<1,BIND>[1,1] = 'F'
               BWIDTH = 2 * (RFQ.PAGE.WIDTH + 0875) + TOTAL.BULK
            CASE RFQ.BIND.STYLE = "AD"
               BRD.SIZE = EST.CASE.BOARD.SIZE<1,COMP,1> / 10
               AA = (BRD.SIZE * 2)
               BB = INT((TOTAL.BULK - 250) * 1.25)
               CC = BB + 1000
               DD = TURN.IN
               BWIDTH = AA + CC + DD
            CASE 1
               BRD.SIZE = EST.CASE.BOARD.SIZE<1,COMP,1> / 10
               AA = (BRD.SIZE * 2)
               BB = INT((TOTAL.BULK - 250) * 1.25)
               CC = BB + 875
               DD = TURN.IN
               BWIDTH = AA + CC + DD
         END CASE
         EST.CASE.SIDE.CL.CUT.SIZE<1,COMP,1> = BWIDTH * 10
         *** LENGTH CALCULATION ***
         BEGIN CASE
            CASE RFQ.BIND.PROD<1,BIND> = "PC2003"
               BLENGTH = RFQ.SPINE.LENGTH + 375
            CASE RFQ.CVR.STOCK<1,BIND> = "COV035"
               BLENGTH = RFQ.SPINE.LENGTH + 2875
            CASE RFQ.BIND.PROD<1,BIND>[1,1] = 'F'
               BLENGTH = RFQ.SPINE.LENGTH + 1875
            CASE 1
               SPINE.LENGTH = EST.CASE.BOARD.SIZE<1,COMP,2> / 10
               BLENGTH = SPINE.LENGTH + TURN.IN + 500
         END CASE
         EST.CASE.SIDE.CL.CUT.SIZE<1,COMP,2> = BLENGTH * 10
         *** END OF CALCULATE SIZE ***
         CALL EST.CASE.SUB(CONO,"CLOTH",2,COMP)
         SUB.NAME = "EST.FORMULA.Q":ESTM.QPARAM<1,MP>
         TEMP.OPV = EST.CASE.SIDE.CL<1,COMP,1>
         CALL @SUB.NAME (CONO, ACTION, EST.QTY, "", COMP)
         QTY = EST.CASE.SIDE.CL.QTY<1,COMP>
         LOCATE QTY IN ESTM.END.QTY<1,MP>,1 BY "AR" SETTING CP ELSE NULL
         IF CP > COUNT(ESTM.END.QTY<1,MP>,SM)+1 THEN CP = CP - 1
         COST = ESTM.QCOST<1,MP,CP>
         EST.CASE.SIDE.CL.PRICE<1,COMP> = COST
      END
   END
   RETURN
   *** END OF BINDERY SUBROUTINE ***
*
*--- BINDERY SPOILAGE
*
BIND.SPOIL: *
   B = BIND
   MATREAD CORPROD.REC FROM CORE.PROD, CONO:RFQ.BIND.PROD<1,B> ELSE
      MAT CORPROD.REC = ""
   END
   EST.PROD.BIND.SPOIL<1,COMP> = OCONV(CORPROD.BIND.SPOIL,'MD2')
   HOLD.SPOIL = ''
   *** GILDED, SPRAY GILDED, STAINED ***
   IF RFQ.BIND.EDGES<1,B> # 'PL' AND RFQ.BIND.EDGES<1,B> # '' THEN 
      SPOIL = RFQ.PBIND.QTY<1,B> * .01
      HOLD.SPOIL = HOLD.SPOIL + SPOIL
   END
   *** RIBBIONS ***
   IF RFQ.BIND.RIBBONS<1,B> + 0 GT 0 THEN
      SPOIL = RFQ.PBIND.QTY<1,B> * .01
      HOLD.SPOIL = HOLD.SPOIL + SPOIL
   END
   *** QUANTITY TO INDEX ***
   IF RFQ.QTY.TO.INDEX<1,B> + 0 GT 0 THEN
      SPOIL = RFQ.QTY.TO.INDEX<1,B> * .01
      HOLD.SPOIL = HOLD.SPOIL + SPOIL
   END
   IF HOLD.SPOIL GT 0 THEN
      SPOIL.PER = ICONV((HOLD.SPOIL / RFQ.PBIND.QTY<1,B>),'MD4')
      CUR.SPOIL = ICONV(EST.PROD.BIND.SPOIL<1,COMP>,'MD2') + SPOIL.PER
      EST.PROD.BIND.SPOIL<1,COMP> = OCONV(CUR.SPOIL,'MD2')
   END ELSE
      EST.PROD.BIND.SPOIL<1,COMP> = OCONV(CORPROD.BIND.SPOIL,'MD2')
   END
   RETURN
92000 *
   ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 *
*  ERR.TYPE = 3
*  CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
