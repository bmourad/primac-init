**************************************************************************
*
* REVISION - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - EST.OPER.GROUP
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DESCRIPTION
*
* This program is used to group related operations to simplify the
* estimate entry process.
*
*T26934 cmykleb 01/15/2003 * Add new fields to screen for RFQ.
**************************************************************************
*
*---- FILE COPY STATEMENTS
*
*COPY>JES.CPYLIB>SCOMMON.ESTIMATE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>VEND
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>JES.CPYLIB>ESTIMATE.GRP
*COPY>JES.CPYLIB>ESTIMATE.GRP.XREF
*COPY>JES.CPYLIB>ESTIMATE.MATL
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COMPANY FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CONTROL FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","PREFIX" TO PREFIX ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN PREFIX FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","VOC" TO VOC ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN VOC FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN DEPARTMENT FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","COST.CNTR" TO COST.CNTR ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COST.CNTR FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","OPERATION" TO OPERATION ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN OPERATION FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","ESTIMATE.GRP" TO ESTIMATE.GRP ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.GRP FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","ESTIMATE.GRP.XREF" TO ESTIMATE.GRP.XREF ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.GRP.XREF FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.MATL FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","ESTIMATE.TBL" TO ESTIMATE.TBL ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN ESTIMATE.TBL FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","COURIER.SCREENS" TO M.SCREENS ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN COURIER.SCREENS FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","VEND" TO VEND ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN VEND FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN SHIP.VIA FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
   OPEN "","CATEGORY.OSP" TO CATEGORY.OSP ELSE
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "CANNOT OPEN CATEGORY.OSP FILE" ; P_OPT = ""
      CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      STOP
   END
*
*---- INITIALIZATION
*
   PERFORM "!echo $UDTHOME" CAPTURING UDTDIR
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
   CONO = ""
   CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
   MAT GEN.XREF.REC = ""
   SCREEN INIT;#
   S$SCR = 1
   SCREEN DEFINE;EST.OPER.GROUP
   SCREEN FORMAT;EST.OPER.GROUP
   SCREEN COUNT;EST.OPER.GROUP;23
   LINE.COUNT = S$LCNT
   LINE.SPACE = S$LSPC
   DEPT = ""
   GOTO 110
*
*----- MAIN PROCESSING
*
100*
   RELEASE
   SCREEN CLEAR;EST.OPER.GROUP
110*
   S$DATA(1)<S$SCR> = DATE()
   SCREEN DISPLAY;EST.OPER.GROUP;1
   DEPT = ""
   GROUP = ""
120*
   FOR FLD = 1 TO 2
      ON FLD GOSUB 1100,1200
      IF S$VALUE = "END" THEN
         IF FLD = 1 THEN GOTO 99999 ELSE GOTO 100
      END
   NEXT FLD
   IF NEW.REC THEN
      FOR FLD = 1 TO 2
         ON FLD GOSUB 1400,1500
         IF S$VALUE = "END" THEN GOTO 100
      NEXT FLD
      LINE.CNT = 0
      CURR.REF.NO = ""
      OPTION = "A"
      GOTO 510
   END ELSE
      LINE.CNT = COUNT(ESTG.TYPE,VM) + (ESTG.TYPE # "")
      GOSUB 80000
      SCREEN DISPLAY;EST.OPER.GROUP;ALL
      REF.NO = ""
      CURR.REF.NO = ""
      GOSUB 50000
   END
*
*---- GET OPERATOR REQUEST
*
500*
   SCREEN FIELD;EST.OPER.GROUP;21
   SCREEN INPUT;EST.OPER.GROUP;21
   OPTION = S$VALUE
510*
   BEGIN CASE
      CASE NUM(OPTION) AND OPTION # ""
         ON OPTION GOSUB 1400,1500
      CASE OPTION = "A" AND LINE.CNT < 99
         DONE = 0
         FOR REF.NO = LINE.CNT+1 TO 99 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINE.CNT = LINE.CNT + 1
            END
         NEXT REF.NO
         REF.NO = LINE.CNT
         CURR.REF.NO = ""
         GOSUB 50000
      CASE OPTION = "C" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 80000
               CURR.REF.NO = ""
               GOSUB 50000
            END
         END
      CASE OPTION = "D" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 700
            LINE.CNT = LINE.CNT - 1
            IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPTION = "I" AND LINE.CNT > 0
         GOSUB 600
         IF S$VALUE # "" AND S$VALUE # "END" THEN
            REF.NO = S$VALUE
            GOSUB 800
            LINE.CNT = LINE.CNT + 1
            CURR.REF.NO = ""
            GOSUB 50000
            GOSUB 10000
            IF S$VALUE = "END" THEN
               GOSUB 700
               LINE.CNT = LINE.CNT - 1
            END
            CURR.REF.NO = ""
            GOSUB 50000
         END
      CASE OPTION = "P"
         SCREEN FIELD;EST.OPER.GROUP;25
         SCREEN INPUT;EST.OPER.GROUP;25
         IF S$VALUE = "Y" THEN
            DELETE ESTIMATE.GRP, CONO:DEPT:"!":GROUP
            MATREADU ESTGX.REC FROM ESTIMATE.GRP.XREF, CONO:DEPT ELSE
               MAT ESTGX.REC = ""
            END
            LOCATE GROUP IN ESTGX.GRP<1>,1 SETTING P ELSE P = 0
            IF P > 0 THEN
               ESTGX.GRP = DELETE(ESTGX.GRP,1,P,0)
               ESTGX.GRP.DESC = DELETE(ESTGX.GRP.DESC,1,P,0)
            END
            IF ESTGX.GRP = "" THEN
               DELETE ESTIMATE.GRP.XREF, CONO:DEPT
            END ELSE
               MATWRITE ESTGX.REC ON ESTIMATE.GRP.XREF, CONO:DEPT
            END
            GOTO 100
         END
      CASE OPTION = "S"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPTION = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPTION = "SB"
         REF.NO = LINE.CNT
         IF REF.NO = 0 THEN REF.NO = 1
         GOSUB 50000
      CASE OPTION = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPTION = "E" OR OPTION = "END"
         GOTO 100
      CASE OPTION = "F"
         ESTG.QFLAG = ""
         ESTG.FFLAG = ""
         FOR N = 1 TO LINE.CNT
            IF ESTG.OPER.QCALC<1,N> = "M" THEN ESTG.QFLAG = "Y"
            IF ESTG.OPER.FCALC<1,N> = "M" THEN ESTG.FFLAG = "Y"
         NEXT N
         MATWRITE ESTG.REC ON ESTIMATE.GRP, CONO:DEPT:"!":GROUP
         MATREADU ESTGX.REC FROM ESTIMATE.GRP.XREF, CONO:DEPT ELSE
            MAT ESTGX.REC = ""
         END
         LOCATE GROUP IN ESTGX.GRP<1>,1 BY "AL" SETTING P ELSE
            ESTGX.GRP = INSERT(ESTGX.GRP,1,P,0,GROUP)
            ESTGX.GRP.DESC = INSERT(ESTGX.GRP.DESC,1,P,0,"")
         END
         ESTGX.GRP.DESC<1,P> = ESTG.DESC
         MATWRITE ESTGX.REC ON ESTIMATE.GRP.XREF, CONO:DEPT
         GOTO 100
      CASE 1
         ERRMSG = "Invalid Selection"
         GOSUB 90000
   END CASE
   GOTO 500
*
*---- GET LINE REFERENCE NUMBER
*
600*
   SCREEN FIELD;EST.OPER.GROUP;22
   S$MINV = CURR.REF.NO
   S$MAXV = S$MINV + LINE.COUNT - 1
   IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
   SCREEN INPUT;EST.OPER.GROUP;22
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
700*
   ESTG.RFQ.YN = DELETE(ESTG.RFQ.YN,1,REF.NO,0)      ;* T26934
   ESTG.RFQ.PID = DELETE(ESTG.RFQ.PID,1,REF.NO,0)      ;* T26934
   ESTG.TYPE = DELETE(ESTG.TYPE,1,REF.NO,0)
   ESTG.CCTR = DELETE(ESTG.CCTR,1,REF.NO,0)
   ESTG.OPER = DELETE(ESTG.OPER,1,REF.NO,0)
   ESTG.OPER.DESC = DELETE(ESTG.OPER.DESC,1,REF.NO,0)
   ESTG.OPER.QCALC = DELETE(ESTG.OPER.QCALC,1,REF.NO,0)
   ESTG.OPER.QPARAM = DELETE(ESTG.OPER.QPARAM,1,REF.NO,0)
   ESTG.OPER.QOR = DELETE(ESTG.OPER.QOR,1,REF.NO,0)
   ESTG.OPER.FCALC = DELETE(ESTG.OPER.FCALC,1,REF.NO,0)
   ESTG.OPER.FPARAM = DELETE(ESTG.OPER.FPARAM,1,REF.NO,0)
   ESTG.OPER.FOR = DELETE(ESTG.OPER.FOR,1,REF.NO,0)
   ESTG.QPL.QPARAM = DELETE(ESTG.QPL.QPARAM,1,REF.NO,0)
   ESTG.QPL.FPARAM = DELETE(ESTG.QPL.FPARAM,1,REF.NO,0)
   ESTG.CAT.SP.CODE = DELETE(ESTG.CAT.SP.CODE,1,REF.NO,0)
   ESTG.CAT.SP.COST = DELETE(ESTG.CAT.SP.COST,1,REF.NO,0)
   S$DATA(23) = DELETE(S$DATA(23),S$SCR,REF.NO,0)
   S$DATA(24) = DELETE(S$DATA(24),S$SCR,REF.NO,0)
   S$DATA(9) = DELETE(S$DATA(9),S$SCR,REF.NO,0)
   S$DATA(10) = DELETE(S$DATA(10),S$SCR,REF.NO,0)
   S$DATA(11) = DELETE(S$DATA(11),S$SCR,REF.NO,0)
   S$DATA(12) = DELETE(S$DATA(12),S$SCR,REF.NO,0)
   S$DATA(13) = DELETE(S$DATA(13),S$SCR,REF.NO,0)
   S$DATA(14) = DELETE(S$DATA(14),S$SCR,REF.NO,0)
   S$DATA(15) = DELETE(S$DATA(15),S$SCR,REF.NO,0)
   S$DATA(16) = DELETE(S$DATA(16),S$SCR,REF.NO,0)
   S$DATA(57) = DELETE(S$DATA(57),S$SCR,REF.NO,0)
   S$DATA(58) = DELETE(S$DATA(58),S$SCR,REF.NO,0)
   S$DATA(59) = DELETE(S$DATA(59),S$SCR,REF.NO,0)      ;* T26934
   S$DATA(60) = DELETE(S$DATA(60),S$SCR,REF.NO,0)      ;* T26934
   RETURN
*
*---- INSERT MULTI-LINE DATA
*
800*
   ESTG.RFQ.YN = INSERT(ESTG.RFQ.YN,1,REF.NO,0,"")      ;* T26934
   ESTG.RFQ.PID = INSERT(ESTG.RFQ.PID,1,REF.NO,0,"")      ;* T26934
   ESTG.TYPE = INSERT(ESTG.TYPE,1,REF.NO,0,"")
   ESTG.CCTR = INSERT(ESTG.CCTR,1,REF.NO,0,"")
   ESTG.OPER = INSERT(ESTG.OPER,1,REF.NO,0,"")
   ESTG.OPER.DESC = INSERT(ESTG.OPER.DESC,1,REF.NO,0,"")
   ESTG.OPER.QCALC = INSERT(ESTG.OPER.QCALC,1,REF.NO,0,"")
   ESTG.OPER.QPARAM = INSERT(ESTG.OPER.QPARAM,1,REF.NO,0,"")
   ESTG.OPER.QOR = INSERT(ESTG.OPER.QOR,1,REF.NO,0,"")
   ESTG.OPER.FCALC = INSERT(ESTG.OPER.FCALC,1,REF.NO,0,"")
   ESTG.OPER.FPARAM = INSERT(ESTG.OPER.FPARAM,1,REF.NO,0,"")
   ESTG.OPER.FOR = INSERT(ESTG.OPER.FOR,1,REF.NO,0,"")
   ESTG.QPL.QPARAM = INSERT(ESTG.QPL.QPARAM,1,REF.NO,0,"")
   ESTG.QPL.FPARAM = INSERT(ESTG.QPL.FPARAM,1,REF.NO,0,"")
   ESTG.CAT.SP.CODE = INSERT(ESTG.CAT.SP.CODE,1,REF.NO,0,"")
   ESTG.CAT.SP.COST = INSERT(ESTG.CAT.SP.COST,1,REF.NO,0,"")
   S$DATA(23) = INSERT(S$DATA(23),S$SCR,REF.NO,0,"")
   S$DATA(24) = INSERT(S$DATA(24),S$SCR,REF.NO,0,"")
   S$DATA(9) = INSERT(S$DATA(9),S$SCR,REF.NO,0,"")
   S$DATA(10) = INSERT(S$DATA(10),S$SCR,REF.NO,0,"")
   S$DATA(11) = INSERT(S$DATA(11),S$SCR,REF.NO,0,"")
   S$DATA(12) = INSERT(S$DATA(12),S$SCR,REF.NO,0,"")
   S$DATA(13) = INSERT(S$DATA(13),S$SCR,REF.NO,0,"")
   S$DATA(14) = INSERT(S$DATA(14),S$SCR,REF.NO,0,"")
   S$DATA(15) = INSERT(S$DATA(15),S$SCR,REF.NO,0,"")
   S$DATA(16) = INSERT(S$DATA(16),S$SCR,REF.NO,0,"")
   S$DATA(57) = INSERT(S$DATA(57),S$SCR,REF.NO,0,"")
   S$DATA(58) = INSERT(S$DATA(58),S$SCR,REF.NO,0,"")
   S$DATA(59) = INSERT(S$DATA(59),S$SCR,REF.NO,0,"")      ;* T26934
   S$DATA(60) = INSERT(S$DATA(60),S$SCR,REF.NO,0,"")      ;* T26934
   RETURN
*
*---- GET DEPARTMENT
*
1100*
   S$DATA(2)<S$SCR> = DEPT
   SCREEN FIELD;EST.OPER.GROUP;2
   SCREEN INPUT;EST.OPER.GROUP;2;RETURN
   BEGIN CASE
      CASE S$VALUE = "CON"
         MAT DEPT.REC = ""
         DEPT.DESC = "CONSOLIDATED"
      CASE 1
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:S$VALUE ELSE
            ERRMSG = "Invalid department. Try again! "
            GOSUB 90000
            GOTO 1100
         END
   END CASE
   DEPT = S$VALUE
   S$DATA(3)<S$SCR> = DEPT.DESC
   SCREEN DISPLAY;EST.OPER.GROUP;3
   RETURN
*
*---- GET GROUP ID
*
1200*
   S$DATA(4)<S$SCR> = ""
   SCREEN FIELD;EST.OPER.GROUP;4
   SCREEN INPUT;EST.OPER.GROUP;4;RETURN
   GROUP = S$VALUE
   BEGIN CASE
      CASE GROUP = "???"
         S$SCR = S$SCR + 1
         SEL.GRP = ""
         CALL EST.GROUP.XREF (CONO, DEPT, "S", SEL.GRP)
         SCREEN CLOSE
         S$SCR = S$SCR - 1
         IF SEL.GRP = "X" THEN
            GOTO 1200
         END
         GROUP = SEL.GRP
         S$DATA(4)<S$SCR> = GROUP
         SCREEN FORMAT;EST.OPER.GROUP
         SCREEN DISPLAY;EST.OPER.GROUP;ALL
         IF SEL.GRP = "" THEN GOTO 1200
         NEW.REC = 0
         MATREADU ESTG.REC FROM ESTIMATE.GRP, CONO:DEPT:"!":GROUP LOCKED
            ERRMSG = 'OPERATION GROUP record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 90000;GOTO 1200 
         END ELSE
            NEW.REC = 1
            RELEASE ESTIMATE.GRP, CONO:DEPT:"!":GROUP
            ERRMSG = "Cannot locate selected group."
            GOSUB 90000
            GOTO 1200
         END
      CASE GROUP = "D"
         SCREEN FIELD;EST.OPER.GROUP;26
         SCREEN INPUT;EST.OPER.GROUP;26;RETURN
         MATREAD ESTG.REC FROM ESTIMATE.GRP, CONO:DEPT:"!":S$VALUE ELSE
            ERRMSG = "Invalid Group ID. Try again! "
            GOSUB 90000
            GOTO 1200
         END
         NEW.REC = 0
         S$DATA(4)<S$SCR> = ""
         SCREEN FIELD;EST.OPER.GROUP;4
         SCREEN INPUT;EST.OPER.GROUP;4;RETURN
         GROUP = S$VALUE
         FND = 0
         READU DUMMY FROM ESTIMATE.GRP, CONO:DEPT:"!":GROUP LOCKED NULL ELSE FND = 1
         IF NOT(FND) THEN
            RELEASE ESTIMATE.GRP, CONO:DEPT:"!":GROUP
            ERRMSG = "Group already present. Try again! "
            GOSUB 90000
            GOTO 1200
         END
         NEW.REC = 0
      CASE 1
         NEW.REC = 0
         MATREADU ESTG.REC FROM ESTIMATE.GRP, CONO:DEPT:"!":GROUP LOCKED
            ERRMSG = 'OPERATION GROUP record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 90000;GOTO 1200 
         END ELSE
            NEW.REC = 1
            MAT ESTG.REC = ""
         END
   END CASE
   RETURN
*
*---- GET GROUP DESCRIPTION
*
1400*
   SCREEN FIELD;EST.OPER.GROUP;5
   SCREEN INPUT;EST.OPER.GROUP;5;RETURN
   ESTG.DESC = S$VALUE
   RETURN
*
*---- GET GROUP QUANTITY HELP MESSAGE
*
1500*
   SCREEN FIELD;EST.OPER.GROUP;6
   SCREEN INPUT;EST.OPER.GROUP;6;RETURN
   ESTG.HMSG = S$VALUE
   RETURN
*
*---- GET MULTI-LINE DATA
*
10000*
   S$VAL = REF.NO
   SCREEN DISPLAY;EST.OPER.GROUP;8
10040*
   PREV.TYPE = ESTG.TYPE<1,REF.NO>
   S$DATA(23)<S$SCR,REF.NO> = ESTG.TYPE<1,REF.NO>
   S$VAL = REF.NO
   SCREEN FIELD;EST.OPER.GROUP;23
   SCREEN INPUT;EST.OPER.GROUP;23;RETURN
   BEGIN CASE
      CASE S$VALUE = "L"
      CASE S$VALUE = "MS"
      CASE S$VALUE = "MI"
      CASE S$VALUE[1,1] = "M"
         MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:S$VALUE[2,1] ELSE
            ERRMSG = "Invalid material type. Try again! "
            GOSUB 90000
            GOTO 10040
         END
      CASE S$VALUE = "S"
      CASE S$VALUE = "P"
      CASE S$VALUE = "PC"
      CASE S$VALUE = "PM"
      CASE S$VALUE = "PT"
      CASE S$VALUE = "O"
      CASE 1
         ERRMSG = "Invalid entry. Try again! "
         GOSUB 90000
         GOTO 10040
   END CASE
   TYPE = S$VALUE
10060*
   S$DATA(24)<S$SCR,REF.NO> = ESTG.CCTR<1,REF.NO>
   S$VAL = REF.NO
   SCREEN FIELD;EST.OPER.GROUP;24
   IF REF.NO # 1 THEN
      S$O.R = "O"
      S$DEFAULT = S$DATA(24)<S$SCR,REF.NO-1>
   END
   SCREEN INPUT;EST.OPER.GROUP;24;RETURN
   BEGIN CASE
      CASE DEPT = "CON"
         MATREAD CCTR.REC FROM COST.CNTR, CONO:S$VALUE ELSE
            ERRMSG = "Invalid cost center. Try again! "
            GOSUB 90000
            GOTO 10060
         END
      CASE S$VALUE = "PRS"
      CASE S$VALUE = "PR1"
      CASE S$VALUE = "PR2"
      CASE S$VALUE = "PR3"
      CASE S$VALUE = "PR4"
      CASE S$VALUE = "PR5"
      CASE S$VALUE = "PR6"
      CASE S$VALUE = "PR7"
      CASE S$VALUE = "PR8"
      CASE S$VALUE = "PR9"
      CASE S$VALUE = "CUT"
      CASE S$VALUE = "FLD"
      CASE S$VALUE = "SAD"
      CASE S$VALUE = "STT"
      CASE S$VALUE = "BND"
      CASE S$VALUE = "GTR"
      CASE S$VALUE = "TRM"
      CASE S$VALUE = "CSM"
      CASE S$VALUE = "CSS"
      CASE S$VALUE = "CSI"
      CASE S$VALUE = "COL"
      CASE 1
         LOCATE S$VALUE IN DEPT.CCTRS<1>,1 SETTING CC.PTR ELSE
            ERRMSG = "Invalid cost center for specified department. Try again! "
            GOSUB 90000
            GOTO 10060
         END
         MATREAD CCTR.REC FROM COST.CNTR, CONO:S$VALUE ELSE
            ERRMSG = "Invalid cost center. Try again! "
            GOSUB 90000
            GOTO 10060
         END
   END CASE
   CCTR = S$VALUE
10100*
   BEGIN CASE
      CASE TYPE = "MS"
         OPER = ""
         DESC = "PAPER STOCK"
      CASE TYPE = "MI"
         OPER = ""
         DESC = "INK"
      CASE TYPE = "MC"
         OPER = ""
         DESC = "CASEMAKING MATERIALS"
      CASE TYPE[1,1] = "P"
         S$DATA(9)<S$SCR,REF.NO> = ESTG.OPER<1,REF.NO>
         IF PREV.TYPE[1,1] = "P" AND ESTG.OPER<1,REF.NO> # "" THEN
            MATREAD VEND.REC FROM VEND,CONO:ESTG.OPER<1,REF.NO> ELSE
               MAT VEND.REC = ""
               VEND.DESC = "???????????????"
            END
            S$DATA(10)<S$SCR,REF.NO> = VEND.DESC
            S$VAL = REF.NO
            SCREEN DISPLAY;;10
         END
         S$VAL = REF.NO
         S$O.R = "O"
         SCREEN FIELD;;9
         S$HMSG = "Enter vendor ID for outside purchase."
         SCREEN INPUT;;9;RETURN
         IF S$VALUE # "" THEN
            MATREAD VEND.REC FROM VEND,CONO:S$VALUE ELSE
               ERRMSG = "Invalid vendor, Try again! "
               GOSUB 90000
               GOTO 10100
            END
         END ELSE
            MAT VEND.REC = ""
         END
         OPER = S$VALUE
         DESC = VEND.DESC
         S$DATA(10)<S$SCR,REF.NO> = VEND.DESC
         S$VAL = REF.NO
         SCREEN DISPLAY;;10
      CASE 1
         S$DATA(9)<S$SCR,REF.NO> = ESTG.OPER<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;9
         SCREEN INPUT;;9;RETURN
         BEGIN CASE
            CASE TYPE[1,1] = "L" OR TYPE = "S" OR TYPE = "O"
               IF NUM(CCTR) THEN
                  LOCATE S$VALUE IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE
                     ERRMSG = "Invalid operation for specified cost center"
                     GOSUB 90000
                     GOTO 10100
                  END
               END
               MATREAD OPER.REC FROM OPERATION, CONO:S$VALUE ELSE
                  ERRMSG = "Invalid operation. Try again! "
                  GOSUB 90000
                  GOTO 10100
               END
               OPER = S$VALUE
               DESC = OPER.DESC
               IF TYPE = "S" THEN
                  S$DATA(10)<S$SCR,REF.NO> = OPER.DESC
                  S$VAL = REF.NO
                  SCREEN DISPLAY;;10
               END
            CASE TYPE[1,1] = "M"
               LOCATE S$VALUE IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE
                  ERRMSG = "Invalid material ID. Try again! "
                  GOSUB 90000
                  GOTO 10100
               END
               OPER = S$VALUE
               DESC = ESTM.FULL.DESC<1,MT.PTR>
         END CASE
   END CASE
10150*
   BEGIN CASE
      CASE TYPE = "S"
         S$DATA(57)<S$SCR,REF.NO> = ESTG.CAT.SP.CODE<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;57
         S$PMSG = "Ship-Via :"
         S$HMSG = "Enter valid ship-via code."
         S$MAXL = 2
         SCREEN INPUT;;57;RETURN
         MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:S$VALUE ELSE
            ERRMSG = "Invalid ship via, Try again! "
            GOSUB 90000
            GOTO 10150
         END
         CAT.SP.CODE = S$VALUE
*
         S$DATA(10)<S$SCR,REF.NO> = SHPV.DESC
         S$VAL = REF.NO
         SCREEN FIELD;;10
         SCREEN INPUT;;10;RETURN
         DESC = S$VALUE
*
         S$DATA(58)<S$SCR,REF.NO> = ESTG.CAT.SP.COST<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;58
         S$HMSG = "Enter standard cost for shipment."
         SCREEN INPUT;;58;RETURN
         CAT.SP.COST = S$VALUE
      CASE TYPE[1,1] = "P"
         S$DATA(57)<S$SCR,REF.NO> = ESTG.CAT.SP.CODE<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;57
         S$PMSG = "O/P Category :"
         S$HMSG = "Enter valid outside purchase category code."
         SCREEN INPUT;;57;RETURN
         MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:S$VALUE ELSE
            ERRMSG = "Invalid Outside Category , Try again! "
            GOSUB 90000
            GOTO 10150
         END
         CAT.SP.CODE = S$VALUE
*
         S$DATA(10)<S$SCR,REF.NO> = CAOS.DESC
         S$VAL = REF.NO
         SCREEN FIELD;;10
         SCREEN INPUT;;10;RETURN
         DESC = S$VALUE
*
         S$DATA(58)<S$SCR,REF.NO> = ESTG.CAT.SP.COST<1,REF.NO>
         S$VAL = REF.NO
         SCREEN FIELD;;58
         S$HMSG = "Enter standard cost for outside purchase."
         SCREEN INPUT;;58;RETURN
         CAT.SP.COST = S$VALUE
      CASE 1
         CAT.SP.CODE = ""
         CAT.SP.COST = ""
   END CASE
10200*
   S$DATA(9)<S$SCR,REF.NO> = OPER
   S$VAL = REF.NO
   SCREEN DISPLAY;EST.OPER.GROUP;9
   S$DATA(10)<S$SCR,REF.NO> = DESC
   S$VAL = REF.NO
   SCREEN DISPLAY;EST.OPER.GROUP;10
*---- GET QTY CALC TYPE
10300*
   BEGIN CASE
      CASE TYPE = "MS"
         QCALC.TYPE = ""
      CASE TYPE = "MI"
         QCALC.TYPE = ""
      CASE TYPE = "MC"
         QCALC.TYPE = ""
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.OPER.GROUP;11
         SCREEN INPUT;EST.OPER.GROUP;11;RETURN
         QCALC.TYPE = S$VALUE
   END CASE
*---- GET QTY CALC PARAM
10400*
   S$DATA(12)<S$SCR,REF.NO> = ESTG.OPER.QPARAM<1,REF.NO>
   IF QCALC.TYPE = "" THEN
      QCALC.PARAM = ""
      S$DATA(12)<S$SCR,REF.NO> = QCALC.PARAM
      S$VAL = REF.NO
      SCREEN DISPLAY;EST.OPER.GROUP;12
      GOTO 10500
   END
   S$VAL = REF.NO
   SCREEN FIELD;EST.OPER.GROUP;12
   SCREEN INPUT;EST.OPER.GROUP;12;RETURN
   BEGIN CASE
      CASE QCALC.TYPE = "C" OR QCALC.TYPE = "M"
      CASE QCALC.TYPE = "F"
         SUB.NAME="EST.FORMULA.Q":S$VALUE
         FORMULA.FOUND = 0
         READ REC FROM VOC, SUB.NAME THEN
            IF REC<1> = "C" THEN
               OSREAD REC FROM REC<2> THEN FORMULA.FOUND = 1
            END
         END ELSE
            OSREAD REC FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
         END
         IF NOT(FORMULA.FOUND) THEN
            ERRMSG="Invalid formula ID. Try again !"
            GOSUB 90000
            GOTO 10400
         END
      CASE 1
         ERRMSG = "Invalid parameter. Try again! "
         GOSUB 90000
         GOTO 10400
   END CASE
   QCALC.PARAM = S$VALUE
*---- GET QTY OVERRIDE FLAG
10500*
   BEGIN CASE
      CASE QCALC.TYPE = ""
         QCALC.FLAG = ""
         S$DATA(13)<S$SCR,REF.NO> = QCALC.FLAG
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.OPER.GROUP;13
      CASE QCALC.TYPE = "F"
         QCALC.FLAG = "X"
         S$DATA(13)<S$SCR,REF.NO> = QCALC.FLAG
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.OPER.GROUP;13
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.OPER.GROUP;13
         SCREEN INPUT;EST.OPER.GROUP;13;RETURN
         QCALC.FLAG = S$VALUE
   END CASE
*---- GET FCTR CALC TYPE
10600*
   BEGIN CASE
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.OPER.GROUP;14
         SCREEN INPUT;EST.OPER.GROUP;14;RETURN
         FCALC.TYPE = S$VALUE
   END CASE
*---- GET FCTR CALC PARAM
10700*
   S$DATA(15)<S$SCR,REF.NO> = ESTG.OPER.FPARAM<1,REF.NO>
   BEGIN CASE
      CASE FCALC.TYPE = ""
         FCALC.PARAM = ""
         S$DATA(15)<S$SCR,REF.NO> = FCALC.PARAM
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.OPER.GROUP;15
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.OPER.GROUP;15
         IF FCALC.TYPE = "F" OR FCALC.TYPE = "T" THEN
            S$TYP = 1
            S$PATRN = ""
         END
         SCREEN INPUT;EST.OPER.GROUP;15;RETURN
         BEGIN CASE
            CASE FCALC.TYPE = "C" OR FCALC.TYPE = "M"
            CASE FCALC.TYPE = "F"
               SUB.NAME="EST.FORMULA.F":S$VALUE
               FORMULA.FOUND = 0
               READ REC FROM VOC, SUB.NAME THEN
                  IF REC<1> = "C" THEN
                     OSREAD REC FROM REC<2> THEN FORMULA.FOUND = 1
                  END
               END ELSE
                  OSREAD REC FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
               END
               IF NOT(FORMULA.FOUND) THEN
                  ERRMSG="Invalid formula ID. Try again !"
                  GOSUB 90000
                  GOTO 10700
               END
            CASE FCALC.TYPE = "T"
               READ REC FROM ESTIMATE.TBL, CONO:S$VALUE ELSE
                  ERRMSG = "Invalid factor table ID. Try again! "
                  GOSUB 90000
                  GOTO 10700
               END
            CASE 1
               ERRMSG = "Invalid parameter. Try again! "
               GOSUB 90000
               GOTO 10700
         END CASE
         FCALC.PARAM = S$VALUE
   END CASE
*---- GET FCTR OVERRIDE FLAG
10800*
   BEGIN CASE
      CASE FCALC.TYPE = ""
         FCALC.FLAG = ""
         S$DATA(16)<S$SCR,REF.NO> = FCALC.FLAG
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.OPER.GROUP;16
      CASE FCALC.TYPE = "F" OR FCALC.TYPE = "T" ;*T23789
         FCALC.FLAG = "X"
         S$DATA(16)<S$SCR,REF.NO> = FCALC.FLAG
         S$VAL = REF.NO
         SCREEN DISPLAY;EST.OPER.GROUP;16
      CASE 1
         S$VAL = REF.NO
         SCREEN FIELD;EST.OPER.GROUP;16
         SCREEN INPUT;EST.OPER.GROUP;16;RETURN
         FCALC.FLAG = S$VALUE
   END CASE
* T26934 v
10850 *
   S$VAL = REF.NO
   SCREEN FIELD;EST.OPER.GROUP;60
   SCREEN INPUT;EST.OPER.GROUP;60;RETURN
   ESTG.RFQ.YN<1,REF.NO> = S$VALUE
10860 *
   S$VAL = REF.NO
   SCREEN FIELD;EST.OPER.GROUP;59
   SCREEN INPUT;EST.OPER.GROUP;59;RETURN
   IF S$VALUE # '' THEN
      IF ESTG.RFQ.YN<1,REF.NO> = '' THEN
         ERRMSG = "You must put a value in the T field before entering in this field"
         GOSUB 90000
         GOTO 10850
      END
      SUB.NAME="EST.FORMULA.R":S$VALUE
      FORMULA.FOUND = 0
      READ REC FROM VOC, SUB.NAME THEN
         IF REC<1> = "C" THEN
            OSREAD REC FROM REC<2> THEN FORMULA.FOUND = 1
         END
      END ELSE
         OSREAD REC FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
      END
      IF NOT(FORMULA.FOUND) THEN
         ERRMSG="Invalid formula ID. Try again !"
         GOSUB 90000
         GOTO 10860
      END
      ESTG.RFQ.PID<1,REF.NO> = S$VALUE
   END ELSE
      ESTG.RFQ.PID<1,REF.NO> = ""
   END
* T26934 ^
*---- STORE INPUT DATA
10900*
   ESTG.TYPE<1,REF.NO> = TYPE
   ESTG.CCTR<1,REF.NO> = CCTR
   ESTG.OPER<1,REF.NO> = OPER
   ESTG.OPER.DESC<1,REF.NO> = DESC
   ESTG.OPER.QCALC<1,REF.NO> = QCALC.TYPE
   ESTG.OPER.QPARAM<1,REF.NO> = QCALC.PARAM
   ESTG.OPER.QOR<1,REF.NO> = QCALC.FLAG
   ESTG.OPER.FCALC<1,REF.NO> = FCALC.TYPE
   ESTG.OPER.FPARAM<1,REF.NO> = FCALC.PARAM
   ESTG.OPER.FOR<1,REF.NO> = FCALC.FLAG
   ESTG.CAT.SP.CODE<1,REF.NO> = CAT.SP.CODE
   ESTG.CAT.SP.COST<1,REF.NO> = CAT.SP.COST
   RETURN
*
*---- DISPLAY MULTI-VALUE DATA
*
50000*
   START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
   IF START.REF.NO = CURR.REF.NO THEN RETURN
   CURR.REF.NO = START.REF.NO
   S$VAL = START.REF.NO
   S$CNT = LINE.CNT
* T26934 v
*  SCREEN MULTI;EST.OPER.GROUP;C;8;23;24;9;10;11;12;13;14;15;16
   SCREEN MULTI;EST.OPER.GROUP;C;8;23;24;9;10;11;12;13;14;15;16;60;59
* T26934 ^
   RETURN
*
*---- LOAD MULTI-LINE DATA
*
80000*
   S$DATA(5)<S$SCR> = ESTG.DESC
   S$DATA(6)<S$SCR> = ESTG.HMSG
   S$DATA(23)<S$SCR> = ESTG.TYPE
   S$DATA(24)<S$SCR> = ESTG.CCTR
   S$DATA(9)<S$SCR> = ESTG.OPER
   S$DATA(10)<S$SCR> = ESTG.OPER.DESC
   S$DATA(11)<S$SCR> = ESTG.OPER.QCALC
   S$DATA(12)<S$SCR> = ESTG.OPER.QPARAM
   S$DATA(13)<S$SCR> = ESTG.OPER.QOR
   S$DATA(14)<S$SCR> = ESTG.OPER.FCALC
   S$DATA(15)<S$SCR> = ESTG.OPER.FPARAM
   S$DATA(16)<S$SCR> = ESTG.OPER.FOR
   S$DATA(57)<S$SCR> = ESTG.CAT.SP.CODE
   S$DATA(58)<S$SCR> = ESTG.CAT.SP.COST
   S$DATA(60)<S$SCR> = ESTG.RFQ.YN                 ;* T26934
   S$DATA(59)<S$SCR> = ESTG.RFQ.PID                 ;* T26934
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SI_SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   STOP
END
