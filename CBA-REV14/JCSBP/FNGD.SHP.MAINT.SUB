SUBROUTINE FNGD.SHP.MAINT.SUB (CONO,NEW,STD.COST,DFGS.SEQ.NO,SHPV.TRUCK.FLG)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.FNGD.SHP
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - FNGD.SHP.MAINT.SUB
* BY          - ANN POWLEY, C.B.A.
* DATE        - 02/03/87
* DESCRIPTION
*       This program ships finished goods & semi-finished goods
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*
**** INSERT FILES EQUATES
*
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>R12ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>JCS.CPYLIB>DAILY.FNGD.SHIP
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
DIM SAVE.IWH.REC(80)
*
**** SETUP FOR SYSTEM ERRMSGS
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
**** INITIALIZATION
*
UNKNOWN = '???????????????????'
MAT SAVE.IWH.REC = ""
MAT IWH.REC = ''; MAT IWLO.REC = ''; MAT WHSE.REC = ''
LINES = 0 ; OLD.START.LINE = 0
RES.FLG = 0
BEGIN.PAGE = 15 ; PAGE.SIZE = 5 ; LINE.SPACE = 1
OPTION = ""
D11 = STR("-",11)
D8 = STR("-",8)
D3 = STR("-",3)
D5 = STR("-",5)
JS.CNT = COUNT(JSTAT.SHP.PROD,VM) + (JSTAT.SHP.PROD # "")
JSFND = 0
FOR I = 1 TO JS.CNT UNTIL JSFND
  IF JSTAT.SHP.PROD<1,I> # '' THEN
    JSTAT.PROD = JSTAT.SHP.PROD<1,I>
    JSTAT.WHSE = JSTAT.SHP.WHSE<1,I>
    JSFND = 1
  END
NEXT I
IF JSFND = 0 THEN
  ERRMSG = "Can't read product"
  GOSUB 91000
  NEW = 'END'
  GOTO 99999
END
*
**** MAIN PROCESSING
*
IF NEW = 1 THEN
  GOSUB 7000; ECD.ACTION = 3; CALL SCRN.EDIT
  IF NEW = 'END' THEN GOTO 99999
  FOR OPTION = 1 TO 4
    ON OPTION GOSUB 1000,2000,3000,4000
    IF ECD.RET.VALUE = "END" THEN NEW = "END"; GOTO 99999
  NEXT OPTION
  GOSUB 10000
END ELSE
  GOSUB 7000; GOSUB 8000
  ECD.ACTION = 3; CALL SCRN.EDIT
  GOSUB 10000
END
**** ENTER OPTIONS
*
300*
MORE = 1
LOOP
  ECD.NUM = 7
  SCV.REC(ECD.NUM)<2> = ""
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
  BEGIN CASE
    CASE OPTION = "" OR OPTION = "END"
      MORE = 0
    CASE NUM(OPTION)
      ON OPTION GOSUB 1000,2000,3000,4000
    CASE OPTION = "A"
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 11000
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
      GOSUB 19000
    CASE OPTION = "C"
      GOSUB 60000
      IF LNO THEN
        LN = LNO
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
        GOSUB 11100
      END
    CASE OPTION = "D"
      GOSUB 60000
      IF LNO THEN
        LN = LNO
        DFGS.LOC = DELETE(DFGS.LOC,1,LN,0)
        DFGS.R.S.ID = DELETE(DFGS.R.S.ID,1,LN,0)
        DFGS.QTY = DELETE(DFGS.QTY,1,LN,0)
        DFGS.DIAM = DELETE(DFGS.DIAM,1,LN,0)
        DFGS.SHEET = DELETE(DFGS.SHEET,1,LN,0)
        LINES = COUNT(DFGS.LOC,VM) + (DFGS.LOC # "")
        IF LN > 1 AND LN > LINES THEN LN = LN - 1
        IF LN < 1 THEN LN = 1
        OLD.START.LINE = 0
        GOSUB 19000
      END
    CASE OPTION = "S"
      LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 19000
      * T25978 v
    CASE OPTION = 'SR'
      LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 19000
    CASE OPTION = 'ST'
      LN = 1
      GOSUB 19000
    CASE OPTION = 'SB'
      LN = LINES
      GOSUB 19000
      * T25978 ^
  END CASE
WHILE MORE = 1 DO REPEAT
GOTO 99999
*
**** ENTER FREIGHT
*
1000*
ECD.NUM = 25
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN DFGS.FREIGHT.NO = ECD.RET.VALUE
RETURN
*
**** ENTER INVOICE NUMBER
*
2000*
ECD.NUM = 26
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN DFGS.INV.NO = ECD.RET.VALUE
RETURN
*
**** ENTER INVOICE DATE
*
3000*
ECD.NUM = 27
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN DFGS.INV.DATE = ECD.RET.VALUE
RETURN
*
**** ENTER INVOICE AMOUNT
*
4000*
IF SHPV.TRUCK.FLG = "Y" AND STD.COST > 0 THEN
*         ECD.O.R='O';ECD.DEFAULT=OCONV(STD.COST,"MD2")
  ECD.O.R='O';ECD.DEFAULT=STD.COST
END
ECD.NUM = 28
ECD.ACTION = 4; CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN DFGS.INV.AMT = ECD.RET.VALUE
RETURN
*
**** PRINTS SCREEN
*
7000*
MATREAD INV.REC FROM INVENTORY,CONO:JSTAT.PROD ELSE
  MAT INV.REC = ''
  INV.FULL.DESC = UNKNOWN
  INV.UNIT<1,2> = "???"
END
MATREAD WHSE.REC FROM WAREHOUSE,CONO:JSTAT.WHSE ELSE WHS.DESC = UNKNOWN
SCV.REC(1)<2> = DFGS.SEQ.NO
SCV.REC(2)<2> = DFGS.SHIP.DATE
SCV.REC(3)<2> = DFGS.JOB
SCV.REC(4)<2> = JOB.CUST
SCV.REC(5)<2> = CUST.NAME
SCV.REC(23)<2> = DFGS.SHIP.TO
SCV.REC(24)<2> = DFGS.SHIP.NAME
SCV.REC(11)<2> = JSTAT.PROD
SCV.REC(12)<2> = INV.FULL.DESC
SCV.REC(15)<2> = JSTAT.WHSE
SCV.REC(16)<2> = WHS.DESC
DFGS.PROD = JSTAT.PROD
DFGS.WHSE = JSTAT.WHSE
KEY.IWH = CONO:DFGS.PROD:"!":DFGS.WHSE
MATREAD IWH.REC FROM INV.WHSE,KEY.IWH ELSE MAT IWH.REC = ''
GOSUB 9000
7999 RETURN
*
**** PRINT SCREEN INPUT FIELDS
*
8000*
SCV.REC(25)<2> = DFGS.FREIGHT.NO
SCV.REC(26)<2> = DFGS.INV.NO
SCV.REC(27)<2> = DFGS.INV.DATE
SCV.REC(28)<2> = DFGS.INV.AMT
RETURN
*
**** SETUP ALL PRODUCT VALUES AND PRINT DETAIL LINE HEADINGS
*
9000*
VLOC = ''
HLOC = ''
HLOC<1,1> = 'LOCATION - ':JSTAT.SHP.LOC<1,1>
VLOC = JSTAT.SHP.LOC<1,1>
L.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # "")
LI = 1
FOR L = 2 TO L.CNT
  LOCATE JSTAT.SHP.LOC<1,L> IN VLOC<1>,1 SETTING J ELSE
    IF LEN(HLOC<1,LI>) > 50 THEN
      LI = LI + 1
      HLOC<1,LI> = 'LOCATION - ':JSTAT.SHP.LOC<1,L>
    END ELSE
      HLOC<1,LI> = HLOC<1,LI>:', ':JSTAT.SHP.LOC<1,L>
    END
    VLOC = VLOC:VM:JSTAT.SHP.LOC<1,L>
  END
NEXT L
CHECK.LOC = ''; LOC.CNT = ''; CHECK.R.S.ID = ''
MAIN.HEAD = "Ln# Loc# "
DASH.HEAD = '--- ---- '
SHP.QTY.HEAD = 'Shp Qty ':INV.UNIT<1,2> "L#3"
RSX = 0; DQX = 0;  RQX = 0
BEGIN CASE
  CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
    ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1; ICR.CNV = "MD0"
    MAIN.HEAD = MAIN.HEAD : 'Skid Number '
    DASH.HEAD = DASH.HEAD : D11 : ' '
    RSX = 9 ; RQX = 21
    MAIN.HEAD = MAIN.HEAD : SHP.QTY.HEAD
    DASH.HEAD = DASH.HEAD : D11
  CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10; ICR.DV2 = 1; ICR.CNV = "MD0"
    MAIN.HEAD = MAIN.HEAD : 'Roll Number '
    DASH.HEAD = DASH.HEAD : D11 : ' '
    RSX = 9 ; RQX = 21
    MAIN.HEAD = MAIN.HEAD : SHP.QTY.HEAD
    DASH.HEAD = DASH.HEAD : D11
  CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
    ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12; ICR.CNV = "MD0"
    MAIN.HEAD = MAIN.HEAD : 'Roll Number '
    DASH.HEAD = DASH.HEAD : D11 : ' '
    RSX = 9 ; RQX = 21
    MAIN.HEAD = MAIN.HEAD : SHP.QTY.HEAD
    DASH.HEAD = DASH.HEAD : D11
  CASE 1
    ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1; ICR.CNV = "MD2"
    BEGIN CASE
      CASE INV.PAP.TYPE = "ROLL"
        RSX = 9; RQX = 21 ; DQX = 33
        MAIN.HEAD = MAIN.HEAD : 'Roll Number ':SHP.QTY.HEAD:' Diameter'
        DASH.HEAD = DASH.HEAD : D11:' ':D11:' ':D8
      CASE 1
        RSX = 0 ; RQX = 9
        MAIN.HEAD = MAIN.HEAD : SHP.QTY.HEAD
        DASH.HEAD = DASH.HEAD : D11
    END CASE
END CASE
PTR = 1
LOOP
  LOCATE DFGS.PROD IN JOB.RESV.MATL<1>, PTR SETTING MLOC ELSE
    MLOC = 0; PTR = 0
    RESV.QTY = 0; RESV.AMT = 0
  END
  IF MLOC THEN
    IF DFGS.WHSE = JOB.RESV.WHSE<1,MLOC> THEN
      PTR = 0
      RESV.QTY = JOB.RESV.QTY<1,MLOC>
      RESV.AMT = JOB.RESV.AMT<1,MLOC>
    END ELSE
      PTR = MLOC + 1
    END
  END
WHILE PTR DO REPEAT
IF RQX = 0 THEN
  ERRMSG = 'Cannot determine quantity type'; GOSUB 91000 ; GOTO 99999
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ''
P_X  = 0 ; P_Y = 13 ; P_VALUE = "" ; P_OPT = "CL"
P_X  := AM:0 ; P_Y := AM:13 ; P_VALUE := AM:MAIN.HEAD
P_X  := AM:0 ; P_Y := AM:14 ; P_VALUE := AM:""
P_X  := AM:0 ; P_Y := AM:14 ; P_VALUE := AM:DASH.HEAD
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
RETURN
*
**** MAIN DETAIL LINE PROCESS
*
10000*
IF DFGS.LOC = "" THEN
  LOOP
    OPTION = 'A'
    LN = LINES + 1
    OLD.LINES = LINES
    GOSUB 11000
  WHILE LINES > OLD.LINES DO REPEAT
  LN = LINES
END ELSE
  LINES = COUNT(DFGS.LOC, VM) + (DFGS.LOC # "")
  LN = 1
END
GOSUB 19000
RETURN
*
**** ENTER LINE INFORMATION
*
11000*
GOSUB 19000
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
**** ENTER LOC
*
11100*
X = 4 ; Y = SLN ; TYP = 1 ; MAXL = 4
HMSG = HLOC
*VALDAT = VLOC
IF DFGS.LOC<1,LN> = '' AND LN = 1 THEN
  VL.CNT = COUNT(VLOC, VM) + (VLOC # "")
  IF VL.CNT = 1 THEN
    DEFAULT = VLOC<1,1>
    O.R = 'O'
  END ELSE O.R = 'R'
END ELSE
  IF DFGS.LOC<1,LN> = '' THEN
    DEFAULT = DFGS.LOC<1,LN-1>
  END ELSE
    DEFAULT = DFGS.LOC<1,LN>
  END
  O.R = 'O'
END
CALL EDIT.SUB
IF VALUE = "END" THEN
  IF OPTION = "A" THEN
    DFGS.LOC = DELETE(DFGS.LOC,1,LN,0)
    DFGS.R.S.ID = DELETE(DFGS.R.S.ID,1,LN,0)
    DFGS.QTY = DELETE(DFGS.QTY,1,LN,0)
    DFGS.DIAM = DELETE(DFGS.DIAM,1,LN,0)
    DFGS.SHEET = DELETE(DFGS.SHEET,1,LN,0)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  P_X  = 4 ; P_Y = SLN ; P_VALUE = DFGS.LOC<1,LN> ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOTO 11999
END
IF RSX = 0 THEN
  LOCATE VALUE IN DFGS.LOC<1>,1 SETTING LFND ELSE LFND = LN
  IF LFND <> LN THEN
    ERRMSG = 'Cannot Enter Same Location Twice'
    GOSUB 91000; GOTO 11100
  END
END
LOCATE VALUE IN JSTAT.SHP.LOC<1>,1 SETTING JSFND ELSE
  ERRMSG = "Location not on job stats."
  GOSUB 91000; GOTO 11100
END
MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DFGS.PROD:"!":DFGS.WHSE:"!":VALUE ELSE
  ERRMSG = "Cannot find the location for warehouse. "
  GOSUB 91000; GOTO 11100
END
DFGS.LOC<1,LN> = VALUE
*
**** ENTER SKID NUMBER
*
11200*
IF RSX * 1 # "0" THEN
  RI = 1
  H.RSID = ""; DEF.RSID = ""
  FOR L = 1 TO L.CNT
    IF DFGS.LOC<1,LN> = JSTAT.SHP.LOC<1,L> THEN
      BEGIN CASE
        CASE H.RSID = ""
          H.RSID<1,RI> = "Roll/Skid - ":JSTAT.SHP.R.S.ID<1,L>
          DEF.RSID<1,1> = JSTAT.SHP.R.S.ID<1,L>
        CASE LEN(H.RSID<1,RI>) > 50 
          RI = RI + 1
          H.RSID<1,RI> = "Roll/Skid - ":JSTAT.SHP.R.S.ID<1,L>
        CASE 1
          H.RSID<1,RI> = H.RSID<1,RI>:', ':JSTAT.SHP.R.S.ID<1,L>
          DEF.RSID = DEF.RSID:VM:JSTAT.SHP.R.S.ID<1,L>
      END CASE
    END
  NEXT L
  HMSG = H.RSID
*25892         IF CATG.R.S.ID = "Y" THEN
  IF CATG.TRK.LVL='G' THEN
    SKID.NUM=DFGS.WHSE:"!":DFGS.LOC<1,LN>
    LOCATE SKID.NUM IN DFGS.R.S.ID<1>,1 SETTING FND ELSE FND = LN
    IF FND <> LN THEN
      ERRMSG = 'Cannot Enter Same Location Twice'
      GOSUB 91000; GOTO 11100
    END
    P_X  = RSX ; P_Y = SLN ; P_VALUE = SKID.NUM "L#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    DFGS.R.S.ID<1,LN> = SKID.NUM
  END ELSE
    X = RSX; Y = SLN; TYP = 1;  MAXL = 11; O.R = 'R'
    IF DFGS.R.S.ID<1,LN> # '' THEN
      DEFAULT = DFGS.R.S.ID<1,LN> ; O.R = 'O'
    END ELSE
      RS.CNT = COUNT(DEF.RSID, VM) + (DEF.RSID # "")
      IF RS.CNT = 1 THEN DEFAULT = DEF.RSID<1,1>; O.R = 'O'
    END
    CALL EDIT.SUB
    IF VALUE = 'END' AND OPTION = 'A' THEN GOTO 11100
    IF VALUE = 'END' AND OPTION # 'A' THEN PRINT @(RSX,SLN):DFGS.R.S.ID<1,LN>; GOTO 11100
    LOCATE VALUE IN JSTAT.SHP.R.S.ID<1>,1 SETTING JSFND ELSE
      ERRMSG = "Roll/Skid does not exist on job."
      GOSUB 91000; GOTO 11200
    END
    IF JSTAT.SHP.LOC<1,JSFND> # DFGS.LOC<1,LN> THEN
      ERRMSG = 'Location and Roll/Skid do not match on job stats.'
      GOSUB 91000; GOTO 11200
    END
    LOCATE VALUE IN IWLO.SERIAL<1>,1 SETTING FND ELSE
      ERRMSG = "Cannot find Roll/Skid for location"
      GOSUB 91000; GOTO 11200
    END
    LOCATE VALUE IN DFGS.R.S.ID<1>,1 SETTING FND ELSE FND = 0
    IF FND AND FND # LN THEN
      ERRMSG = 'Cannot Enter Same Skid/Roll Twice'
      GOSUB 91000; GOTO 11200
    END
    DFGS.R.S.ID<1,LN> = VALUE
  END
END
**** ENTER SHEET WGHT
*
11300 BEGIN CASE
  CASE RQX
    X = RQX; Y = SLN; MAXL = 11; O.R = 'R'
    BEGIN CASE
      CASE ICR.CNV = "MD0"
        IF RES.FLG = 0 THEN
          TYP = 3
        END ELSE
          TYP = 4 ; SCALER = 0
        END
      CASE 1
        TYP = 4; SCALER = 2
    END CASE
    IF DFGS.QTY<1,LN> <> '' THEN
      O.R = 'O'
      IF DFGS.QTY<1,LN> > 0 THEN
        DEFAULT = OCONV(INT(((DFGS.QTY<1,LN> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
      END ELSE
        DEFAULT = OCONV(INT(((DFGS.QTY<1,LN> / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5),ICR.CNV)
      END
    END
    CALL EDIT.SUB
    BEGIN CASE
      CASE VALUE = 'END'
        IF OPTION # 'A' THEN
          P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(DFGS.SHEET<1,LN>,ICR.CNV) "R#11" ; P_OPT = ""
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        END
        GOTO 11100
      CASE VALUE < 0
        ERRMSG = "Can't ship negative quantity" ; GOSUB 91000 ; GOTO 11300
      CASE VALUE = 0
        ADDQ = 0
        ERRMSG = "Can't ship zero quantity"; GOSUB 91000; GOTO 11300
      CASE 1
        ADDQ = .5
    END CASE
    IF CATG.TRACK.QOH # "Y" THEN GOTO 11350
    JSTAT.AVAIL = INT(((JSTAT.SHP.QTY<1,JSFND>/ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
    IF VALUE > JSTAT.AVAIL THEN
      ERRMSG = 'Maximum Quantity Available from Job Stats - ':OCONV(JSTAT.AVAIL,ICR.CNV)
      GOSUB 91000; GOTO 11300
    END
    WHS.AVAIL = INT((((IWH.ON.HAND + RESV.QTY - IWH.RESV)/ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
    IF VALUE > WHS.AVAIL THEN
      ERRMSG = 'Maximum Quantity Available For Warehouse - ':OCONV(WHS.AVAIL,ICR.CNV)
      GOSUB 91000; GOTO 11300
    END
    LOC.AVAIL = INT(((IWLO.LOC.ON.HAND/ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
    IF VALUE > LOC.AVAIL THEN
      ERRMSG = 'Maximum Quantity Available For Location - ':OCONV(LOC.AVAIL,ICR.CNV)
      GOSUB 91000; GOTO 11300
    END
    IF RSX * 1 # "0" THEN
      LOCATE DFGS.R.S.ID<1,LN> IN IWLO.SERIAL<1>,1 SETTING RFND ELSE RFND = 0
      IF RFND THEN
        S.ID=CONO:IWLO.SERIAL<1,RFND>
        IF RECORDLOCKED(INV_SERIAL_TEMP,S.ID)=0 THEN     
          DELETE INV_SERIAL_TEMP,S.ID                    
        END                                              
        MATREAD ISTK.REC FROM INV_SERIAL,S.ID ELSE    
          MAT ISTK.REC=''                              
        END                                            
        R.S.AVAIL = INT(((ISTK.CUR.QTY/ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
      END ELSE
        R.S.AVAIL = VALUE
      END
      IF VALUE > R.S.AVAIL THEN
        ERRMSG = 'Maximum Quantity Available For Roll/Skid - ':OCONV(R.S.AVAIL,ICR.CNV)
        GOSUB 91000; GOTO 11300
      END
    END
11350 WT.VALUE = INT(((VALUE / ICR.MT1<1>) * ICR.DV1<1>) * ICR.DV2<1> + ADDQ)
    OQ.VALUE = 0
    RQ.VALUE = INT(((WT.VALUE / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + ADDQ)
END CASE
P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(RQ.VALUE,ICR.CNV) "R#11" ; P_OPT = ""
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
DFGS.QTY<1,LN> = WT.VALUE
DFGS.SHEET<1,LN> = RQ.VALUE
*
**** ENTER DIAMETER
*
11400 IF DQX THEN
  X = DQX; Y = SLN; TYP = 4; SCALER = 2; MAXL = 8
  IF DFGS.DIAM<1,LN> # "" THEN
    DEFAULT = OCONV(DFGS.DIAM<1,LN>, "MD2"); O.R = "O"
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF OPTION # 'A' THEN PRINT @(DQX,SLN):OCONV(DFGS.DIAM<1,LN>,"MD2")"R#8"
    GOTO 11100
  END
  DFGS.DIAM<1,LN> = VALUE
END
LINES = COUNT(DFGS.LOC, VM) + (DFGS.LOC # "")
11999 RETURN
*
**** SCROLL SUB
*
19000 START.LINE = 1 + INT((LN-1) / PAGE.SIZE) * PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 19999
OLD.START.LINE = START.LINE
CNT = 1
FOR N = START.LINE TO LAST.LINE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DFGS.LOC<1,N> "L#4"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF RSX THEN
    P_X  = RSX ; P_Y = SLN ; P_VALUE = DFGS.R.S.ID<1,N> "L#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(DFGS.SHEET<1,N>,ICR.CNV) "R#11" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF DQX THEN
    P_X  = DQX ; P_Y = SLN ; P_VALUE = OCONV(DFGS.DIAM<1,N>,'MD2') "R#8" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  CNT = CNT + 1
NEXT N
FOR M = CNT TO PAGE.SIZE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
19999 RETURN
*
**** ENTER LINE NUMBER
*
60000*
GOSUB 19000
ECD.NUM = 29
ECD.MINV = OLD.START.LINE ; ECD.MAXV = LAST.LINE
ECD.HMSG<1,1> = "Start line = ":OLD.START.LINE:" End line = ":LAST.LINE
ECD.ACTION = 4 ; CALL SCRN.EDIT
LNO = ECD.RET.VALUE
IF LNO = '' OR LNO = 'END' THEN LNO = 0
RETURN
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 *
ECD.ACTION=99;CALL SCRN.EDIT
RETURN
END
