  SUBROUTINE JOB.MT.DET.SUB(CONO,JOB.NUM,SUB.CNT,PTR,MAT INV.CNV.REC,TYPE)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.MT.DET.SUB
* DATE        - 03/13/84
* DESCRIPTION -
*T26334 epitka 12/19/2001 * REV12
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.CNV
*
  DIM TRANS.REC(11)
  EQU TRAN.WHSE     TO TRANS.REC(1)
  EQU TRAN.LOC      TO TRANS.REC(2)
  EQU TRAN.TYPE     TO TRANS.REC(3)
  EQU TRAN.QTY      TO TRANS.REC(4)
  EQU TRAN.NO       TO TRANS.REC(5)
  EQU TRAN.DATE     TO TRANS.REC(6)
  EQU TRAN.COST     TO TRANS.REC(7)
  EQU TRAN.SALE     TO TRANS.REC(8)
  EQU TRAN.JOB      TO TRANS.REC(9)
  EQU TRAN.PERIOD   TO TRANS.REC(10)
  EQU TRAN.TRAN     TO TRANS.REC(11)
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  MAT TRANS.REC = ''
  PAGE.SIZE = 6; LINE.SPACE = 2; BEGIN.PAGE = 8; OLD.START.LINE = 0
  LN = 1; OLN = 1; LINES = JOB.MT.SEQ<1,PTR,1>
  MT.ID = CONO:JOB.NUM:"!":JOB.MT.DEPT<1,PTR>:"!":JOB.MT.CCTR<1,PTR>
  MT.ID = MT.ID:"!":JOB.MT.PROD<1,PTR>:"!":JOB.MT.WHSE<1,PTR>:"!"
  GOSUB 100
  FOR K = 2 TO SUB.CNT
    MT.ID = CONO:JOB.SUBS<1,K-1>:"!":JOB.MT.DEPT<1,PTR>:"!":JOB.MT.CCTR<1,PTR>
    MT.ID = MT.ID:"!":JOB.MT.PROD<1,PTR>:"!":JOB.MT.WHSE<1,PTR>:"!"
    OLN = LINES + 1; LINES = LINES + JOB.MT.SEQ<1,PTR,K>
    GOSUB 100
  NEXT K
  GOSUB 1000
  MORE = 1
  LOOP
*       X = 0 ; Y = 21 ; TYP = 1 ; O.R = 'O' ; MAXL = 2
*       PMSG = 'Enter (S)croll or <RETURN>...' ; VALDAT = 'S'
*       CALL EDIT.SUB
*       ACTION = VALUE
    ECD.NUM = 52
    ECD.MAXL = 3
    ECD.O.R = 'O'
    * ECD.VALDAT = 'S'     ;* T25978
    ECD.ACTION = 4 ; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = '' OR ACTION = 'END'
        MORE = 0
      CASE ACTION = 'S'
        LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 1000
      * T25978 v
      CASE ACTION = 'SR'
        LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 1000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 1000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 1000
      * T25978 ^
    END CASE
  WHILE MORE DO REPEAT
  GOTO 999999
100 FOR I = OLN TO LINES
    MATREAD JMT.REC FROM JOB.MATL, MT.ID:(I-OLN+1) ELSE MAT JMT.REC = ''
    TRAN.LOC<1,I> = JMT.LOC
    TRAN.TYPE<1,I> = JMT.TYPE
    TRAN.QTY<1,I> = JMT.QTY
    TRAN.NO<1,I> = JMT.SEQ
    TRAN.DATE<1,I> = JMT.DATE
    TRAN.COST<1,I> = JMT.COST
    TRAN.SALE<1,I> = JMT.SALE
    TRAN.JOB<1,I> = JMT.RC.JOB
    TRAN.PERIOD<1,I> = JMT.MON<1,1>
*       TRAN.TRAN<1,I> = JMT.RC.TRAN
  NEXT I
  RETURN
1000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 1999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.MT.WHSE<1,PTR> "L#4"
    P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.LOC<1,N> "L#4"
    P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.TYPE<1,N> "L#1"
    P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.NO<1,N> "R#8"
    P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.DATE<1,N>, 'D2/') "L#8"
    P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.PERIOD<1,N> "R#6"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF TRAN.QTY<1,N> < 0 THEN
*           PRINT @(41,SLN) :INT(((TRAN.QTY<1,N> / M.WT) * 1000) -.5) "R#8" :
      P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(INT((((TRAN.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2) - .5),ICR.CNV)"R#9" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
*           PRINT @(41,SLN) :INT(((TRAN.QTY<1,N> / M.WT) * 1000) +.5) "R#8" :
      P_X  = 41 ; P_Y = SLN ; P_VALUE = OCONV(INT((((TRAN.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2) + .5),ICR.CNV)"R#9" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    P_X  = 51 ; P_Y = SLN ; P_VALUE = OCONV(TRAN.COST<1,N>, 'MD2') "R#9" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.SALE<1,N>, 'MD2') "R#9"
    P_X  := AM:71 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.JOB<1,N> "L#8"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*        PRINT @(72,SLN) : TRAN.TRAN<1,N> "L#8" :
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
1999 RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
999999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
