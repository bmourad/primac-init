*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - TIME.ENTRY
* BY          - JIHAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE        - 02/15/84
* DESCRIPTION -
*T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>JCS.CPYLIB>DAILY.TIME
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>FACTOR
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
  MAT FILE.VARS=''
  OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS FILE IS MISSING'; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING'; GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING'; GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING'; GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING'; GOTO 93000
  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG='OPERATION FILE IS MISSING'; GOTO 93000
  OPEN '','DAILY.TIME' TO DAILY.TIME ELSE ERRMSG='DAILY.TIME FILE IS MISSING'; GOTO 93000
  OPEN '','FACTOR' TO FACTOR ELSE ERRMSG='FACTOR FILE IS MISSING'; GOTO 93000
  OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='EMPLOYEE FILE IS MISSING'; GOTO 93000
  OPEN '','EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE ERRMSG='EMPLOYEE.XREF FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
  OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG = 'SPOILAGE.CODES FILE IS MISSING'; GOTO 93000
**** GET COMPANY
  MAT COMP.REC='' ; CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO='END' THEN GOTO 99999
**** GET ALL OUTSIDE JOB REANGE
  MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:'JOB.CUTOFF.NO' ELSE
    MAT JOB.CUTOFF.REC=''
    J.CUTOFF.NUM=0
  END
  DLB.OSJ.FLG=''
* INITIALIZATION
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT=1
  ECD.SCRN.NAME<1>='TIME.ENTRY'
  ECD.SCRN.NO= 1
  ECD.ACTION=1;CALL SCRN.EDIT
100*
  RELEASE   ;* T26126
  PAGE.SIZE=5 ; BEGIN.PAGE = 9 ; LINE.SPACE = 2 ; OLD.START.LINE = 0 ; LINES = 0 ; TOTAL.HRS = 0 ; DIFF.HRS = 0
  MAT GEN.XREF.REC = ''
  MAT JSI.REC = ''
  ERRMSG='' ; ACTION = ''
  UNKNOWN = STR('?',30)
  GXR.CO=CONO
  GXR.HEADING<1,2>='DESCRIPTION'
  GXR.ATT<1,1>=0 ; GXR.ATT<1,2> = 1 ;GXR.LEN<1,1> = 5 ; GXR.LEN<1,2> = 30
* MAIN PROCESSING
  MAT EDIT.COM='' ; TYP = 0 ; CALL EDIT.SUB ; FILL = '#'
  MAT JOB.REC='' ;MAT DIV.REC = '';MAT DEPT.REC = '';MAT CCTR.REC = '';MAT OPER.REC = ''; MAT FCTR.REC = '' ; MAT DLB.REC = ''
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
  NEW.DLB="N"
**** ENTER CCTR AND DEPARTMENT
101 ECD.NUM = 3
  ECD.VALDAT.CODE=2; ECD.VALDAT.FILE = COST.CNTR; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      GOTO 99999
    CASE ECD.VALDAT.ITEM # ''
      FOR K=1 TO CCTR.REC.SIZE; CCTR.REC(K) = ECD.VALDAT.ITEM<K>; NEXT K
      CCTR.CODE=ECD.RET.VALUE
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE DEPT.DESC=UNKNOWN
      ECD.NUM=1; SCV.REC(ECD.NUM)<1> = CCTR.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=2; SCV.REC(ECD.NUM)<1> = DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=4; SCV.REC(ECD.NUM)<1> = CCTR.DESC; ECD.ACTION=5;CALL SCRN.EDIT
    CASE ECD.RET.VALUE='???'
      GXR.XREF=DIVISION
      GXR.FILE=DEPARTMENT
      GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
      GXR.HEADING<1,1>='DEPT'
      GXR.ATT<1,2>=2
      GXR.LOC=2
      GXR.ID=''
      GXR.SRCH.ID="01"
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.ATT<1,2>=1
      IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT; ECD.ACTION=3;CALL SCRN.EDIT; GOTO 101
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
        ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
        ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 91000; ECD.ACTION=3;CALL SCRN.EDIT; GOTO 101
      END
      SCV.REC(1)<1>=GXR.ID
      SCV.REC(2)<1>=DEPT.DESC
      GXR.XREF=DEPARTMENT
      GXR.FILE=COST.CNTR
      GXR.TOP.LINE='COST CENTER XREF SEARCH'
      GXR.HEADING<1,1>='CCTR'
      GXR.LOC=5
      GXR.SRCH.ID=GXR.ID
      GXR.ID=""
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID='' THEN ECD.ACTION=3;CALL SCRN.EDIT; GOTO 101
      MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
        ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
        GOSUB 91000; ECD.ACTION=3;CALL SCRN.EDIT; GOTO 101
      END
      IF CCTR.TYPE='F' THEN
        ERRMSG='COST CENTER ':GXR.ID:' IS FROZEN';GOSUB 91000
        ECD.ACTION=3;CALL SCRN.EDIT;GOTO 101
      END
      CCTR.CODE=GXR.ID
      SCV.REC(3)<1>=CCTR.CODE
      SCV.REC(4)<1>=CCTR.DESC
      ECD.ACTION=3;CALL SCRN.EDIT
  END CASE
**** ENTER EMPOLYEE
105 ECD.NUM=5
  ECD.VALDAT.CODE=2 ; ECD.VALDAT.FILE = EMPLOYEE ; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  EMP.CODE=ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE='END'
      MAT SCV.REC = ""; ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 101
    CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
      FOR I=1 TO EMP.REC.SIZE ; EMP.REC(I) = ECD.VALDAT.ITEM<I> ; NEXT I
      ECD.NUM=6 ; SCV.REC(6)<1> = EMP.LAST.NAME:' ':EMP.FRST.NAME ; ECD.ACTION=5;CALL SCRN.EDIT
    CASE ECD.RET.VALUE=''
      ECD.NUM=6 ; ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE='' OR ECD.RET.VALUE = 'END' THEN GOTO 105
      GXR.XREF=EMPLOYEE.XREF ;GXR.FILE = EMPLOYEE;GXR.LOC = 1;GXR.TOP.LINE = 'EMPLOYEE XREF SEARCH';GXR.HEADING<1,1> = 'EMP #'
      GXR.ATT<1,2>=4; GXR.ATT<1,3> = 5 ; GXR.HEADING<1,2> = 'LAST NAME';GXR.HEADING<1,3> = 'FIRST NAME'; GXR.LEN<1,3> = 30
      GXR.SRCH.ID=ECD.RET.VALUE ; GXR.ID = ''
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.ATT<1,2>=1
      GXR.LEN=DELETE(GXR.LEN,1,3,0)
      GXR.HEADING=DELETE(GXR.HEADING,1,3,0)
      GXR.HEADING<1,2>='DESCRIPTION'
      GXR.ATT=DELETE(GXR.ATT,1,3,0)
      ECD.ACTION=2;CALL SCRN.EDIT;ECD.ACTION=3;CALL SCRN.EDIT
      IF GXR.ID='' THEN
        SCV.REC(5)<1>=''
        ECD.ACTION=3;CALL SCRN.EDIT ; GOTO 105
      END ELSE
        MATREAD EMP.REC FROM EMPLOYEE , CONO:GXR.ID ELSE
          ERRMSG='EMPLOYEE (':GXR.ID:') NOT ON FILE'
          GOSUB 91000;SCV.REC(5)<1>='';GOTO 105
        END
        EMP.CODE=GXR.ID
        SCV.REC(5)<1>=EMP.CODE ; SCV.REC(6)<1> = EMP.LAST.NAME:' ':EMP.FRST.NAME
        ECD.ACTION=3;CALL SCRN.EDIT
      END
  END CASE
**** ENTER DATE AND READ DAILY.TIME
106 ECD.NUM=7
  ECD.DEFAULT = OCONV(DATE() - 1, "D2/") ; ECD.ACTION=4;CALL SCRN.EDIT
  ENT.DATE=ECD.RET.VALUE
  IF ECD.RET.VALUE = "END" THEN
    MAT SCV.REC = ""; ECD.ACTION = 3; CALL SCRN.EDIT; GOTO 101
  END
  * T26126 v
  MATREADU DLB.REC FROM DAILY.TIME , CONO:CCTR.CODE:'*':EMP.CODE:'*':ENT.DATE LOCKED
    ERRMSG = 'TIME record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 106 
  END ELSE
  * T26126 ^
    MAT DLB.REC=''
    NEW.DLB="Y"
    DLB.DIV = DEPT.DIV
    DLB.DEPT = CCTR.DEPT
    ACTION="A"
    LOOP
      LN=LINES + 1
      OLD.LINES=LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO REPEAT
    LN=LINES
    GOSUB 11000
  END
  IF ACTION='' THEN
    LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
    LN=1
    GOSUB 11000 ; GOSUB 8100
  END
  MORE=1
  LOOP
    X=0; Y = 21
    PMSG=' ENTER (A)DD ,(C)HANGE ,(D)ELETE ,(S)CROLL ,(F)ILE ,(E)XIT : '
    * T25978 v
    * VALDAT='A':VM:'C':VM:'D':VM:'S':VM:'F':VM:'E'
    VALDAT='A':VM:'C':VM:'D':VM:'S':VM:'F':VM:'E':'SR':VM:'ST':VM:'SB'
    * T25978 ^
    CALL EDIT.SUB
    ACTION=VALUE
    BEGIN CASE
      CASE ACTION='E' OR ACTION = 'END'
        MORE=0
      CASE ACTION='A'
        LOOP
          LN=LINES + 1
          OLD.LINES=LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO REPEAT
        LN=LINES
        GOSUB 11000
      CASE ACTION='C'
        GOSUB 9000
        IF LN.NO THEN
          LN=LN.NO
          SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE) ; GOSUB 1020
        END
      CASE ACTION='D'
        GOSUB 9000
        IF LN.NO THEN
          LN=LN.NO
          DLB.SEQ=DELETE(DLB.SEQ,1,LN,0)
          DLB.JOB=DELETE(DLB.JOB,1,LN,0)
          DLB.TYPE=DELETE(DLB.TYPE,1,LN,0)
          DLB.DIV=DELETE(DLB.DIV,1,LN,0)
          DLB.DEPT=DELETE(DLB.DEPT,1,LN,0)
          DLB.CCTR=DELETE(DLB.CCTR,1,LN,0)
          DLB.OPER=DELETE(DLB.OPER,1,LN,0)
          DLB.FCTR=DELETE(DLB.FCTR,1,LN,0)
          DLB.HRS.ST=DELETE(DLB.HRS.ST,1,LN,0)
          DLB.HRS.EN=DELETE(DLB.HRS.EN,1,LN,0)
          DLB.IMP=DELETE(DLB.IMP,1,LN,0)
          DLB.CNCR=DELETE(DLB.CNCR,1,LN,0)
          DLB.COST=DELETE(DLB.COST,1,LN,0)
          DLB.MARKUP=DELETE(DLB.MARKUP,1,LN,0)
          DLB.DESC=DELETE(DLB.DESC,1,LN,0)
          DLB.OSJ.FLG=DELETE(DLB.OSJ.FLG,1,LN,0)
          DLB.TIME.ST=DELETE(DLB.TIME.ST,1,LN,0)
          DLB.TIME.END=DELETE(DLB.TIME.END,1,LN,0)
          DLB.INIT=DELETE(DLB.INIT,1,LN,0)
          DLB.SPOIL.CODE= DELETE(DLB.SPOIL.CODE,1,LN,0)
          LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
          IF LN > 1 AND LN > LINES THEN LN=LN - 1
          IF LN < 1 THEN LN=1
          OLD.START.LINE=0
        END
        GOSUB 11000 ; GOSUB 8100
      CASE ACTION='S'
        LN=LN + PAGE.SIZE
        IF LN > LINES THEN LN=1
        GOSUB 11000
      * T25978 v
      CASE ACTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 11000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 11000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 11000
      * T25978 ^
      CASE ACTION='F'
        IF DLB.SEQ = "" THEN
          DELETE DAILY.TIME ,CONO:CCTR.CODE:'*':EMP.CODE:'*':ENT.DATE
        END ELSE
          MATWRITE DLB.REC ON DAILY.TIME ,CONO:CCTR.CODE:'*':EMP.CODE:'*':ENT.DATE
        END
        MORE=0
    END CASE
120*
  WHILE MORE DO REPEAT
  GOTO 100
**** ENTER LINE INFORMATION
1000 GOSUB 11000
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1010 X=4; Y = SLN; TYPE = 1; JUSTIFY = 'L'
  MAXL=6; O.R = 'O'
  DEFAULT="N"
  HMSG='ENTER (N) FOR NEW SEQUENCE NUMBER'
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE='END'
      P_X  = 0 ; P_Y = SLN + 1 ; P_VALUE =  "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1999
    CASE VALUE='N'
      READU TIME.ENT.SEQ FROM CONTROL, CONO: 'DAILY.TIME' ELSE TIME.ENT.SEQ=10001
      DLB.SEQ<1,LN>=TIME.ENT.SEQ
      TIME.ENT.SEQ=TIME.ENT.SEQ + 1
      WRITE TIME.ENT.SEQ ON CONTROL, CONO : 'DAILY.TIME'
      P_X  = 4 ; P_Y = SLN ; P_VALUE = DLB.SEQ<1,LN> "L#6" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CASE 1
      GOTO 1010
  END CASE
1020 X=11 ; Y = SLN ; MAXL = 8 ; TYP = 1 ; JUSTIFY = 'L'
  IF DLB.JOB<1,1>='' THEN
    O.R='R'
  END ELSE
    O.R='O'
    IF ACTION = 'C' THEN
      DEFAULT=DLB.JOB<1,LN>
    END ELSE
      DEFAULT=DLB.JOB<1,LN - 1>
    END
  END
  CALL EDIT.SUB
  SAVE.JOB=""
  IF VALUE='END' THEN
    IF DLB.COST<1,LN>='' THEN
      DLB.SEQ=DELETE(DLB.SEQ,1,LN,0)
      DLB.JOB=DELETE(DLB.JOB,1,LN,0)
      DLB.TYPE=DELETE(DLB.TYPE,1,LN,0)
      DLB.DIV=DELETE(DLB.DIV,1,LN,0)
      DLB.DEPT=DELETE(DLB.DEPT,1,LN,0)
      DLB.CCTR=DELETE(DLB.CCTR,1,LN,0)
      DLB.OPER=DELETE(DLB.OPER,1,LN,0)
      DLB.FCTR=DELETE(DLB.FCTR,1,LN,0)
      DLB.HRS.ST=DELETE(DLB.HRS.ST,1,LN,0)
      DLB.HRS.EN=DELETE(DLB.HRS.EN,1,LN,0)
      DLB.IMP=DELETE(DLB.IMP,1,LN,0)
      DLB.CNCR=DELETE(DLB.CNCR,1,LN,0)
      DLB.COST=DELETE(DLB.COST,1,LN,0)
      DLB.MARKUP=DELETE(DLB.MARKUP,1,LN,0)
      DLB.DESC=DELETE(DLB.DESC,1,LN,0)
      DLB.OSJ.FLG=DELETE(DLB.OSJ.FLG,1,LN,0)
      DLB.TIME.ST=DELETE(DLB.TIME.ST,1,LN,0)
      DLB.INIT=DELETE(DLB.INIT,1,LN,0)
      DLB.TIME.END=DELETE(DLB.TIME.END,1,LN,0)
      DLB.SPOIL.CODE = DELETE(DLB.SPOIL.CODE,1,LN,0)
    END
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 1999
  END
  MATREAD JOB.REC FROM JOB , CONO:VALUE ELSE
    MAT JOB.REC=''
    FND=0
    IF NUM(VALUE) THEN
      IF VALUE < J.CUTOFF.NUM THEN FND=1
    END ELSE
      JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # '')
      FOR L=1 TO JC.CNT WHILE FND = 0
        PRFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
        IF J.CUTOFF.PREFIX<1,L>=VALUE[1,PRFX.LEN] THEN
          CHK.VALUE=VALUE[PRFX.LEN+1,LEN(VALUE)-PRFX.LEN]
          IF NUM(CHK.VALUE) THEN
            IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
          END
        END
      NEXT L
    END
    IF FND=1 THEN
      DLB.OSJ.FLG<1,LN>='Y'
      JOB.DESC<1,1>='*** OUTSIDE JOB ***'
    END ELSE
      ERRMSG='JOB NUMBER (':VALUE:') NOT ON FILE'
      GOSUB 91000 ; GOTO 1020
    END
  END
  SAVE.JOB=VALUE
  IF JOB.STATUS<1,1> = 9 THEN
    ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 1020
  END
  IF DLB.DIV<1,LN> <> JOB.DIV THEN
    MATREAD DIV.REC FROM DIVISION, CONO : JOB.DIV ELSE
      ERRMSG = 'CANNOT LOCATE JOB DIVISION ':JOB.DIV
      GOSUB 91000; GOTO 1020
    END
    LOCATE CCTR.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
      ERRMSG = 'CANNOT LOCATE DEPT ':CCTR.DEPT:' FOR JOB DIVISION ':JOB.DIV
      GOSUB 91000; GOTO 1020
    END
  END
  GOSUB 7000
  IF VALUE = "END" THEN GOTO 1020
  IF CO.JOB.CUST.FLG = "C" THEN
    MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
      CUST.NAME = UNKNOWN
    END
    JOB.DESC<1,1> = CUST.NAME
  END
  DLB.JOB<1,LN>=SAVE.JOB
  DLB.DIV<1,LN>=JOB.DIV
  DLB.DEPT<1,LN>=CCTR.DEPT
  DLB.CCTR<1,LN>=CCTR.CODE
  P_X  = 20 ; P_Y = SLN ; P_VALUE = JOB.CUST "L#8" ; P_OPT = ""
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.DIV "L#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = JOB.DESC<1,1> "L#65" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1050 X=33 ; Y = SLN ; MAXL = 4 ; JUSTIFY = 'L' ; TYP = 1
  IF DLB.OPER<1,LN>='' THEN
    O.R='R'
  END ELSE
    DEFAULT=DLB.OPER<1,LN>
    O.R='O'
  END
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  IF VALUE='???' THEN
    GXR.XREF=COST.CNTR;GXR.FILE = OPERATION;GXR.TOP.LINE = 'OPERATION XREF SEARCH';GXR.HEADING<1,1> = 'OPER'
    GXR.LOC=4 ; GXR.ID = '' ; GXR.SRCH.ID = CCTR.CODE
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    IF GXR.ID='' THEN
      GOSUB 8000; GOTO 1050
    END
    MATREAD  OPER.REC FROM OPERATION , CONO:GXR.ID ELSE
      ERRMSG='OPERATION (':GXR.ID:') ID MISSING'
      GOSUB 8000 ; GOSUB 91000 ; GOTO 1050
    END
    DLB.OPER<1,LN>=GXR.ID
    GOSUB 8000
  END ELSE
    LOCATE VALUE IN CCTR.OPER<1>,1 SETTING C ELSE
      ERRMSG="OPER # ":VALUE:" DOES NOT BELONG UNDER CCTR # ":CCTR.CODE
      GOSUB 91000 ; GOTO 1050
    END
    MATREAD  OPER.REC FROM OPERATION , CONO:VALUE ELSE
      ERRMSG='OPERATION (':VALUE:') IS MISSING'
      GOSUB 91000 ; GOTO 1050
    END
    DLB.OPER<1,LN>=VALUE
  END
1060 X=38 ; Y = SLN ;TYP = 1;MAXL = 2;JUSTIFY = 'L'
  IF DLB.FCTR<1,LN>='' THEN O.R = 'O' ; DEFAULT = '01'
  IF DLB.FCTR<1,LN> # '' THEN O.R='O' ; DEFAULT = DLB.FCTR<1,LN>
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  MATREAD FCTR.REC FROM FACTOR , CONO:VALUE ELSE
    ERRMSG='FACTOR (':VALUE:') IS MISSING'
    GOSUB 91000;GOTO 1060
  END
  DLB.FCTR<1,LN>=VALUE
1070 BEGIN CASE
    CASE JOB.TYPE="C"
      P_X  = 42 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
    CASE JOB.TYPE="S"
      P_X  = 42 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
    CASE JOB.TYPE="N"
      P_X  = 42 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
    CASE 1
      HMSG='(R)EGULAR (C)USTOMER CHANGE ORDER (S)POILAGE (N)ON CHARGABLE'
      VALDAT='R':VM:'C':VM:'S':VM:'N'
      DEFAULT="R"
      X=42 ; Y = SLN ; TYP = 1 ; MAXL = 1;JUSTIFY = 'L' ; O.R = 'O'
      IF DLB.TYPE<1,LN> # '' THEN DEFAULT=DLB.TYPE<1,LN> 
      CALL EDIT.SUB
      IF VALUE='END' THEN GOTO 1020
      DLB.TYPE<1,LN> = VALUE
      IF CO.SPOIL.FLG = "Y" AND VALUE = "S" THEN
  1071  PMSG = "ENTER SPOILAGE CODE : "
        X=0;Y=23;TYP=11;MAXL=6
        IF DLB.SPOIL.CODE<1,LN> = '' THEN
          O.R = 'R' ; DEFAULT = ''
        END ELSE
          O.R = 'O' ; DEFAULT = DLB.SPOIL.CODE<1,LN>
        END
        CALL EDIT.SUB
        IF VALUE = 'END' THEN GOTO 1070
        READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:VALUE ELSE
          ERRMSG = "SPOILAGE CODE (":VALUE[1,1]:") NOT ON FILE"
          GOSUB 91000 ; GOTO 1071
        END
        DLB.SPOIL.CODE<1,LN> = VALUE
      END ELSE
        DLB.SPOIL.CODE<1,LN> = ''
      END
  END CASE
1075 X=46; Y = SLN; TYP = 1; MAXL = 1; JUSTIFY = "L"
  IF DLB.CNCR<1,LN> = '' THEN
    DEFAULT = 'N'
  END ELSE
    DEFAULT = DLB.CNCR<1,LN>
  END
  O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  IF VALUE = "Y" THEN
    BEGIN CASE
      CASE LN < 2
        ERRMSG = "CANNOT ENTER CONCURRENT TIME AT FIRST LINE"; GOSUB 91000; GOTO 1075
      CASE DLB.JOB<1,LN> = DLB.JOB<1,LN-1>
        ERRMSG = "JOB CANNOT BE CONCURRENT WITH ITSELF"; GOSUB 91000; GOTO 1075
      CASE 1
        DLB.CNCR<1,LN>=VALUE
        DLB.HRS.ST<1,LN> = DLB.HRS.ST<1,LN-1>
        DLB.TIME.ST<1,LN> = DLB.TIME.ST<1,LN-1>
        DLB.HRS.EN<1,LN> = DLB.HRS.EN<1,LN-1>
        DLB.TIME.END<1,LN> = DLB.TIME.END<1,LN-1>
        P_X  = 50 ; P_Y = SLN ; P_VALUE = OCONV(DLB.HRS.ST<1,LN>, "MD2") "R#5" ; P_OPT = ""
        P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,LN>, "MD2") "R#5"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOTO 1100
    END CASE
  END ELSE
    DLB.CNCR<1,LN>=VALUE
  END
1080 X=50 ; Y = SLN;TYP = 1;JUSTIFY = 'R';MAXL = 5 
  HMSG='' ; VALDAT = ''
  IF DLB.HRS.ST<1,LN>='' AND DLB.HRS.EN<1,LN-1> # '' THEN
    DEFAULT=OCONV(DLB.HRS.EN<1,LN-1>, "MD2") ; O.R = 'O'
  END ELSE
    DEFAULT='' ; O.R = 'R'
  END
  IF DLB.HRS.ST<1,LN> # '' THEN DEFAULT=OCONV(DLB.HRS.ST<1,LN> , "MD2") ; O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  GOSUB 2000
  IF VALUE > 2400 THEN
    ERRMSG="CANNOT EXCEED 24 UNITS" ; GOSUB 91000; GOTO 1080
  END
  P_X  = 50 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#5" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DLB.HRS.ST<1,LN>=VALUE
  DLB.TIME.ST<1,LN>=VALUE2
1090 X=56 ; Y = SLN;TYP = 1;JUSTIFY = 'R';MAXL = 5
  IF DLB.HRS.EN<1,LN>='' THEN DEFAULT = '' ;O.R = 'R'
  IF DLB.HRS.EN<1,LN> # '' THEN DEFAULT=OCONV(DLB.HRS.EN<1,LN> , "MD2") ; O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  GOSUB 2000
  IF DLB.HRS.ST<1,LN> = VALUE THEN
    ERRMSG = "LAPS TIME CAN'T BE EQUAL TO ZERO, TRY AGAIN" ; GOSUB 91000 ; GOTO 1090
  END
  IF VALUE > 2400 THEN
    ERRMSG="CANNOT EXCEED 24 HOURS" ; GOSUB 91000 ; GOTO 1090
  END
  IF VALUE < DLB.HRS.ST<1,LN> THEN
    IF (VALUE+2400) - DLB.HRS.ST<1,LN> > 600 THEN
      SVALUE=VALUE
      X=0 ; Y = 23 ; MAXL = 1 ; TYP = 18 ; O.R = 'R'
      PMSG="LAPS TIME GREATER THEN 6 UNITS OK (Y)ES OR (N)O"
      CALL EDIT.SUB
      IF VALUE="END" THEN GOTO 1090
      IF VALUE='N' THEN GOTO 1090
      VALUE=SVALUE
    END
  END
  P_X  = 56 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#5" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DLB.HRS.EN<1,LN>=VALUE
  DLB.TIME.END<1,LN>=VALUE2
  GOSUB 8100
1100 LOCATE DLB.OPER<1,LN> IN CCTR.OPER<1>,1 SETTING SC ELSE
    ERRMSG='OPER # ':DLB.OPER:' DOES NOT BELONG UNDER CCTR # ':CCTR.CODE
    GOSUB 91000 ; GOTO 1999
  END
  IF CCTR.OPER.TYPE<1,SC>='V' THEN
    X=62 ;Y = SLN ;MAXL = 7;TYP = 3; JUSTIFY = 'R' 
    IF DLB.IMP<1,LN> # '' THEN
      DEFAULT=DLB.IMP<1,LN> ; O.R = 'O'
    END ELSE
      O.R='R'
    END
    CALL EDIT.SUB
    IF VALUE='END' THEN GOTO 1020
    DLB.IMP<1,LN>=VALUE
  END ELSE
    DLB.IMP<1,LN> = ''
    P_X  = 62 ; P_Y = SLN ; P_VALUE = DLB.IMP<1,LN> "R#7" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
1120 IF CCTR.OPER.HR.RATE<1,SC> + 0=0  THEN
    X=70;Y = SLN;MAXL = 9;TYP = 4;SCALER = 2
    IF DLB.COST<1,LN>='' THEN
      DEFAULT = ''; O.R = 'R'
    END ELSE
      DEFAULT=OCONV(DLB.COST<1,LN>,"MD2"); O.R = 'O'
    END
    CALL EDIT.SUB
    IF VALUE='END' THEN GOTO 1020
    DLB.COST<1,LN>=VALUE
  END
  LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
1999 RETURN
**** UNIT CONVERATION
2000 OK=0
  OK1=INDEX(VALUE,":",1)
  OK2=INDEX(VALUE,".",1)
  BEGIN CASE
    CASE OK1 > 0
      MM=FIELD(VALUE,":",2)
      IF MM='' THEN MM = 0
      UN=INT((MM + 5) / 6) * .1
      HH=FIELD(VALUE, ":",1)
      UNITS=HH + UN
      VALUE=ICONV(UNITS, "MD2")
      VALUE2=INT(UNITS):':':INT(((UNITS - INT(UNITS)) * 60) +.5)
      VALUE2=ICONV(VALUE2, "MTS")
    CASE OK2 > 0
      UNITS=VALUE
      VALUE2=INT(UNITS):':':INT(((UNITS - INT(UNITS)) * 60) +.5)
      VALUE2=ICONV(VALUE2, "MTS")
      VALUE=ICONV(VALUE, "MD2")
    CASE OK=0 AND NUM(VALUE)
      VALUE2=ICONV(VALUE, "MTS")
      VALUE=ICONV(VALUE, "MD2")
  END CASE
  RETURN
**** GET AUTHORIZATION INITIALS
7000*
  VALUE = ""
  IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
7010*    
    X=0;Y=21;MAXL=3;TYP=1;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
    IF DLB.INIT<1,LN> # "" THEN
      O.R='O';DEFAULT=DLB.INIT<1,LN>
    END
    PMSG="THIS JOB IS NOT IN PROCESS. ENTER YOUR INITIALS : "
    CALL EDIT.SUB
    P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF VALUE="END" THEN GOTO 7999
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
      MAT JSI.REC =""
      ERRMSG="NOT VALID INITIALS. TRY AGAIN"
      GOSUB 91000;GOTO 7010
    END
    DLB.INIT<1,LN>=VALUE
  END
7999*    
  RETURN
**** PRINT VALUES
8000*    
  ECD.ACTION=2;CALL SCRN.EDIT ; ECD.ACTION=3;CALL SCRN.EDIT ; OLD.START.LINE=0 ; GOSUB 11000 
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.SEQ<1,LN> "L#6"
  P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.JOB<1,LN> "L#8"
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.CUST "L#8"
  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.DIV "L#3"
  P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.OPER<1,LN> "L#4"
  P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.FCTR<1,LN> "L#3"
  P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.TYPE<1,LN> "L#3"
  P_X  := AM:46 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CNCR<1,LN> "L#3"
  P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.ST<1,LN>, "MD2") "R#5"
  P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,LN>, "MD2") "R#5"
  P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.IMP<1,LN> "R#7"
  P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.COST<1,LN>, "MD2") "R#9"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = JOB.DESC<1,1> "L#65" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
**** GET TOTAL TIME AND PRINT IT
8100 JOB.CNT=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
  TOTAL.HRS=0
  FOR JT=1 TO JOB.CNT
    IF DLB.CNCR<1,JT> # "Y" THEN
      IF DLB.HRS.EN<1,JT> < DLB.HRS.ST<1,JT> THEN
        DIFF.HRS=(DLB.HRS.EN<1,JT> + 2400) - DLB.HRS.ST<1,JT>
      END ELSE
        DIFF.HRS=DLB.HRS.EN<1,JT> - DLB.HRS.ST<1,JT>
      END
      TOTAL.HRS=TOTAL.HRS + DIFF.HRS
    END
  NEXT JT
  P_X  = 74 ; P_Y = 2 ; P_VALUE = OCONV(TOTAL.HRS, "MD2") ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
9000 GOSUB 11000
  IF LAST.LINE # 0 THEN
    TYP = 13; X = 0; Y = 23
    PMSG='ENTER LINE NUMBER :'
    MINV = OLD.START.LINE; MAXV = LAST.LINE
    O.R = 'O'; MAXL = 2
    CALL EDIT.SUB
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    ERRMSG = "NO LINES TO CHANGE OR DELETE" ; GOSUB 91000 ; VALUE = ''
  END
  LN.NO=VALUE
  IF LN.NO='' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
11000 START.LINE=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE=OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE=START.LINE
  CNT=1
  FOR N = START.LINE TO LAST.LINE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    MATREAD JOB.REC FROM JOB , CONO:DLB.JOB<1,N> ELSE
      MAT JOB.REC=''
      FND=0
      IF NUM(VALUE) THEN
        IF VALUE < J.CUTOFF.NUM THEN FND=1
      END ELSE
        JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # '')
        FOR L=1 TO JC.CNT WHILE FND = 0
          PRFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
          IF J.CUTOFF.PREFIX<1,L>=VALUE[1,PRFX.LEN] THEN
            CHK.VALUE=VALUE[PRFX.LEN+1,LEN(VALUE)-PRFX.LEN]
            IF NUM(CHK.VALUE) THEN
              IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
            END
          END
        NEXT L
      END
      IF FND=1 THEN
        DLB.OSJ.FLG<1,LN>='Y'
        JOB.DESC<1,1>='*** OUTSIDE JOB ***'
      END ELSE
        JOB.DESC<1,1>=UNKNOWN
      END
    END
    IF CO.JOB.CUST.FLG = "C" THEN
      MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
        CUST.NAME = UNKNOWN
      END
      JOB.DESC<1,1> = CUST.NAME
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.SEQ<1,N> "L#6"
    P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.JOB<1,N> "L#8"
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.CUST "L#8"
    P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.DIV "L#3"
    P_X  := AM:33 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.OPER<1,N> "L#4"
    P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.FCTR<1,N> "L#3"
    P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.TYPE<1,N> "L#3"
    P_X  := AM:46 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CNCR<1,N> "L#3"
    P_X  := AM:50 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.ST<1,N>, "MD2") "R#5"
    P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,N>, "MD2") "R#5"
    P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.IMP<1,N> "R#7"
    P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.COST<1,N>, "MD2") "R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = JOB.DESC<1,1> "L#65" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR M=CNT TO PAGE.SIZE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999 RETURN
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
