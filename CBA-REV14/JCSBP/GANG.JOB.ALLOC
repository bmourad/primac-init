   SUBROUTINE GANG.JOB.ALLOC(ACTION,CONO,MAT GJOB.REC,GANG.ALLOC,STATUS)
*********************************************************************
*
* Copyright 1982 by Vercom Software Inc.
*
* REVISION - [09.1]
*
* PROGRAM  - GANG.JOB.ALLOC
*
* AUTHOR   - NICHOLAS AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/02/92
*
* DESCRIPTION
*
* This program is used to maintain the allocation table which is used
* to allocate cost to jobs printed in a ganged fashion.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>GANG.JOB
*COPY>JCS.CPYLIB>GANG.ALLOC
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
   S$SCR = ECD.SCRN.NO
   BEGIN.PAGE = 6
   PAGE.SIZE = 14
   LINE.SPACE = 1
   LINES = 0
   LN = ""
   OLD.START.LINE = ""
*
*---- MAIN PROCESSING
*
100 *
   TMP.DESC = ""
   GOSUB 80000
   NEW.REC = 0
   IF GJOB.DEPT = "" THEN NEW.REC = 1 ELSE NEW.REC = 0
120 *
   IF NEW.REC AND ACTION = "M" THEN
*        FOR REF = 1 TO 1
*           ON REF GOSUB 1010
*           IF ECD.RET.VALUE = "END" THEN GOTO 99999
*        NEXT REF
      LINES = 0
      OPT = "A"
      GOTO 510
   END ELSE
      LINES = DCOUNT(GJOB.DEPT,VM)
      GOSUB 81000
      LN = 1
      OLD.START.LINE = ""
      GOSUB 50000
   END
*
*---- GET OPERATOR REPLY
*
500 *
   BEGIN CASE
      CASE ACTION = "M"
         ECD.NUM=21
         ECD.ACTION=4;CALL SCRN.EDIT
      CASE 1
         ECD.NUM=23
         ECD.ACTION=4;CALL SCRN.EDIT
   END CASE
*T25871 v
   IF ACTION = "I" AND ECD.RET.VALUE = "END" THEN ECD.RET.VALUE = "E"
*T25871 ^
   OPT = ECD.RET.VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010
      CASE OPT = "A" AND LINES < 99
         MODE = "A"
         DONE = 0
         FOR LN = LINES+1 TO 99 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINES = LINES + 1
            END
         NEXT LN
         LN = LINES
         OLD.START.LINE = ""
         GOSUB 50000
      CASE OPT = "C" AND LINES > 0
         MODE = "C"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               OLD.START.LINE = ""
               GOSUB 50000
            END
         END
      CASE OPT = "D" AND LINES > 0
         MODE = "D"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 700
            LINES = LINES - 1
            IF LN > LINES THEN LN = LN - 1
            OLD.START.LINE = ""
            GOSUB 50000
         END
      CASE OPT = "I" AND LINES > 0
         MODE = "I"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 800
            LINES = LINES + 1
            OLD.START.LINE = ""
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               GOSUB 700
               LINES = LINES - 1
               OLD.START.LINE = ""
               GOSUB 50000
            END
         END
      CASE OPT = "S" OR OPT = "SF"
         LN = OLD.START.LINE + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 50000
      CASE OPT = "SR"
         LN = OLD.START.LINE - PAGE.SIZE
         IF LN < 1 THEN LN = 1
         GOSUB 50000
      CASE OPT = "ST"
         LN = 1
         GOSUB 50000
      CASE OPT = "SB"
         LN = LINES
         IF LN < 1 THEN LN = 1
         GOSUB 50000
   END CASE
   GOTO 500
*
*---- GET LINE NUMBER
*
600 *
   ECD.NUM=22
   ECD.MINV = OLD.START.LINE
   ECD.MAXV = ECD.MINV + PAGE.SIZE - 1
   IF ECD.MAXV > LINES THEN ECD.MAXV = LINES
   ECD.ACTION=4;CALL SCRN.EDIT
   RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
   GJOB.DEPT = DELETE(GJOB.DEPT,1,LN,0)
   GJOB.CCTR = DELETE(GJOB.CCTR,1,LN,0)
   TMP.DESC  = DELETE(TMP.DESC,1,LN,0)
   GJOB.TYPE = DELETE(GJOB.TYPE,1,LN,0)
   GOSUB 81050
   RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
   GJOB.DEPT = INSERT(GJOB.DEPT,1,LN,0,"")
   GJOB.CCTR = INSERT(GJOB.CCTR,1,LN,0,"")
   TMP.DESC  = INSERT(TMP.DESC,1,LN,0,"")
   GJOB.TYPE = INSERT(GJOB.TYPE,1,LN,0,"")
   GOSUB 81050
   RETURN
*
*---- GET ALLOCATION TABLE DESCRIPTION
*
1010 *
   ECD.NUM=3
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN RETURN
   GJOB.DESC = ECD.RET.VALUE
   RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
   SCV.REC(11)<S$SCR,LN> = LN
   ECD.SUB.NUM = LN
   ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
10100 *
   SCV.REC(12)<S$SCR,LN> = GJOB.DEPT<1,LN>
   ECD.SUB.NUM = LN
   ECD.NUM=12
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 19950
   IF ECD.RET.VALUE # "" THEN
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Invalid Department. Try again! "
         GOSUB 90000
         GOTO 10100
      END
      TEMP.MF3 = DEPT.DESC
      SCV.REC(14)<S$SCR,LN> = TEMP.MF3
      ECD.SUB.NUM = LN
      ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
   END
   TEMP.MF1 = ECD.RET.VALUE
10200 *
   SCV.REC(13)<S$SCR,LN> = GJOB.CCTR<1,LN>
   ECD.SUB.NUM = LN
   ECD.NUM=13
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 19950
   IF ECD.RET.VALUE = "" AND TEMP.MF1 = "" THEN GOTO 10100
   IF ECD.RET.VALUE # "" THEN
      MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Invalid Cost Center. Try again! "
         GOSUB 90000
         GOTO 10200
      END
      TEMP.MF1 = CCTR.DEPT
      SCV.REC(12)<S$SCR,LN> = TEMP.MF1
      ECD.SUB.NUM = LN
      ECD.NUM=12;ECD.ACTION=5;CALL SCRN.EDIT
      TEMP.MF3 = CCTR.DESC
      SCV.REC(14)<S$SCR,LN> = TEMP.MF3
      ECD.SUB.NUM = LN
      ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
   END
   IF LN > LINES THEN LCNT = LN ELSE LCNT = LINES
   LREF = 0
   FOR REF = 1 TO LCNT WHILE LREF = 0
      TST.DEPT = GJOB.DEPT<1,REF>
      TST.CCTR = GJOB.CCTR<1,REF>
      BEGIN CASE
         CASE REF = LN
         CASE TST.DEPT # TEMP.MF1
         CASE TST.CCTR = ECD.RET.VALUE
            LREF = REF
      END CASE
   NEXT REF
   IF LREF >= 1 THEN
      ERRMSG = "Conflicting entry on line #":LREF
      GOSUB 90000
      GOTO 10200
   END
   TEMP.MF2 = ECD.RET.VALUE
10300 *
10400 *
   ECD.SUB.NUM = LN
   ECD.NUM=15
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 19950
   TEMP.MF4 = ECD.RET.VALUE
19900 *
   GJOB.DEPT<1,LN> = TEMP.MF1
   GJOB.CCTR<1,LN> = TEMP.MF2
   TMP.DESC<1,LN>  = TEMP.MF3
   GJOB.TYPE<1,LN> = TEMP.MF4
   RETURN
19950 *
   GOSUB 81050
   RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN RETURN
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 10 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.DEPT<1,N> "L#5"
      P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.CCTR<1,N> "L#3"
      P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TMP.DESC<1,N> "L#30"
      P_X  := AM:63 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.TYPE<1,N> "L#1"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
   RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
   SCV.REC(1)<S$SCR> = DATE()
   SCV.REC(2)<S$SCR> = GJOB.ALLOC
   SCV.REC(3)<S$SCR> = GJOB.DESC
80050 *
   ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=2;ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
   TMP.DESC = ""
   LINES = DCOUNT(GJOB.DEPT,VM)
   FOR REF = 1 TO LINES
      DEPT = GJOB.DEPT<1,REF>
      CCTR = GJOB.CCTR<1,REF>
      IF CCTR = "" THEN
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
            MAT DEPT.REC = ""
            DEPT.DESC = "???????????????"
         END
         TMP.DESC<1,REF> = DEPT.DESC
      END ELSE
         MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
            MAT CCTR.REC = ""
            CCTR.DESC = "???????????????"
         END
         TMP.DESC<1,REF> = CCTR.DESC
      END
   NEXT REF
81050 *
   SCV.REC(12)<S$SCR> = GJOB.DEPT
   SCV.REC(13)<S$SCR> = GJOB.CCTR
   SCV.REC(14)<S$SCR> = TMP.DESC
   SCV.REC(15)<S$SCR> = GJOB.TYPE
   RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   RETURN
END
