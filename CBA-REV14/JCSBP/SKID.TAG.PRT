*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - DRSBP
* PROGRAM     - SKID.TAG.PRT
* AUTHOR      - L. ROSS, C.B.A.
* DATE        - 09/18/91
* DESCRIPTION
* This program prints the skid tags for a job.
*********************************************************************
*
***** INSERT FILES EQUATES
*
*COPY>JCS.CPYLIB>DRS.JOB.SPEC
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>CUST.TEMPLATE.LIST
*COPY>JCS.CPYLIB>SHIPTO.MASTER
*COPY>JCS.CPYLIB>TEMPLATE.DETAIL
*COPY>JCS.CPYLIB>FOLD.CODE
*COPY>JCS.CPYLIB>PACK.CODE
*COPY>JCS.CPYLIB>DISTRIBUTION.CODE
*COPY>JCS.CPYLIB>FORMAT.CODE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** SETUP ERRMSG ROUTINE
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
***** OPEN FILES
*
      OPEN '','JOB' TO JOB ELSE
         ERRMSG ='JOB FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','DRS.JOB.SPEC' TO DRS.JOB.SPEC ELSE
         ERRMSG ='DRS.JOB.SPEC FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUST.TEMPLATE.LIST' TO CUST.TEMPLATE.LIST ELSE
         ERRMSG = 'CUST.TEMPLATE.LIST FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SHIPTO.MASTER' TO SHIPTO.MASTER ELSE
         ERRMSG = 'SHIPTO.MASTER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','TEMPLATE.DETAIL' TO TEMPLATE.DETAIL ELSE
         ERRMSG = 'TEMPLATE.DETAIL FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUSTOMER' TO CUSTOMER ELSE
         ERRMSG = 'CUSTOMER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','FOLD.CODE' TO FOLD.CODE ELSE
         ERRMSG = 'FOLD.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','PACK.CODE' TO PACK.CODE ELSE
         ERRMSG = 'PACK.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','DISTRIBUTION.CODE' TO DISTRIBUTION.CODE ELSE
         ERRMSG = 'DISTRIBUTION.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','FORMAT.CODE' TO FORMAT.CODE ELSE
         ERRMSG = 'FORMAT.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SHIP.VIA' TO SHIP.VIA ELSE
         ERRMSG = 'SHIP.VIA FILE IS MISSING'
         GOTO 93000
      END
*
**** READ PROC VALUES
*
      PROCREAD ID ELSE
         ERRMSG = 'CANNOT PERFORM PROCREAD'
         GOTO 93000
      END
      CONO = ID<1>
      CONO.NAME = ID<2>
      JOB.NO = ID<3>
      CUST.NO = ID<4>
      TEMP.NO = ID<3>
      COPIES = ID<5>
      STRT = ID<6>
      LST = ID<7>
      IF STRT = 'A' THEN STRT = 1
      IF (NOT(NUM(STRT))) THEN STRT = 1
      IF LST = 'A' THEN LST = 9999
      IF (NOT(NUM(LST))) THEN LST = 9999
*
**** INITIALIZATION
*
      LN.CNT = 0
      HH.LINE1 = SPACE(2):CUST.NO 'L#6':SPACE(18)
*
      PROMPT''
      CRT @(-1)
*     LOOP
*        CRT @(0,10):CL:@(5,10):'Print (M)ask or (T)ags : ':
*        INPUT X:
*     WHILE X # 'M' AND X # 'T' DO REPEAT
*     IF X = 'M' THEN GOSUB 9000
      READNEXT DKEY ELSE
        ERRMSG = 'NO ITEMS SELECTED - HIT RETURN: '
        GOSUB 91000
        GOTO 99999
      END
      GOSUB 9000
*     IF COPIES > 1 THEN
*        PERFORM "SP-ASSIGN =STANDARD ":COPIES
*     END
*     PRINTER ON
FOR C = 1 TO COPIES
*
***** READ AND PROCESS FIRST RECORD
*
100 *
*     READNEXT KEY ELSE GOTO 99999
      MATREAD DJS.REC FROM DRS.JOB.SPEC,DKEY ELSE GOTO 99999
      MATREAD CUST.REC FROM CUSTOMER, CONO:DJS.CUST ELSE
         CUST.NAME = '??????????'
      END
      MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
         JOB.DESC = '??????????'
      END
      MATREAD FRM.REC FROM FORMAT.CODE, CONO:DJS.FORMAT ELSE MAT FRM.REC = ''
      MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, CONO:CUST.NO:"!":TEMP.NO:"!001" ELSE
         ERRMSG = 'The CUST.TEMPLATE.LIST record for this job is missing'
         GOSUB 91000
         GOTO 99999
      END
      SHIPTO = CTL.SHIPS<1,1>
      IF SHIPTO = '' THEN
         ERRMSG = 'The first record of CUST.TEMPLATE.LIST has no shipto# - run resequencing'
         GOSUB 91000
         GOTO 99999
      END
      SHIP.CNT = DCOUNT(CTL.SHIPS,VM)
      MATREAD TDT.REC FROM TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO ELSE
         MAT TDT.REC = ''
      END
*     PRINTER ON
      RSEQ = '001'
      KEY = CONO:CUST.NO:"!":TEMP.NO:"!"
*
***** READ AND PROCESS ALL RECORDS
*
      DATA = 1
      RUN.NO = 0
      LOOP
         IF SHIP.CNT < 1 THEN
            RSEQ =RSEQ + 1
            IF LEN(RSEQ) < 3 THEN RSEQ = STR('0',3-LEN(RSEQ)):RSEQ
            MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, KEY:RSEQ THEN
               SHIP.CNT = DCOUNT(CTL.SHIPS,VM)
            END ELSE DATA = 0
            IF SHIP.CNT < 1 THEN DATA = 0
         END
         IF RUN.NO >= LST THEN DATA = 0
      WHILE DATA = 1 DO
         FOR I = 1 TO SHIP.CNT
             SHIPTO = CTL.SHIPS<1,I>
             MATREAD SHM.REC FROM SHIPTO.MASTER, CONO:SHIPTO ELSE
                MAT SHM.REC = ''
             END
             MATREAD TDT.REC FROM TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO ELSE
                MAT TDT.REC = ''
             END
             RUN.NO = RUN.NO + 1
             HH.LINE = HH.LINE1:SHM.SP.NAME 'L#30':SPACE(5):'RUN # ':RUN.NO 'R#5'
             IF TDT.QTY > 0 AND RUN.NO >= STRT AND RUN.NO <= LST THEN GOSUB 1000
          NEXT I
          SHIP.CNT = 0
       REPEAT
NEXT C
       GOTO 99999
*
**** DETAIL ROUTINE
*
1000 *
*
      SKID.SUM = 0
      SKIDS = 0
      MATREAD PCK.REC FROM PACK.CODE, CONO:TDT.PACK ELSE MAT PCK.REC = ''
      IF TDT.SKID.LAB = 'Y' AND DJS.SKD.MAX > 0 THEN
         SKIDS = INT(TDT.QTY / DJS.SKD.MAX)
         IF REM(TDT.QTY,DJS.SKD.MAX) >= DJS.SKD.MIN THEN SKIDS = SKIDS + 1
         IF DJS.LAY.QTY < 1 THEN DJS.LAY.QTY = 1
         FOR J = 1 TO SKIDS
             INST.LINES = ''
             LN = 1
             IF TDT.SP.INST.1.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.1;LN=LN+1
             IF TDT.SP.INST.2.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.2;LN=LN+1
             IF TDT.SP.INST.3.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.3;LN=LN+1
             IF TDT.SP.INST.4.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.4;LN=LN+1
             IF TDT.SP.INST.5.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.5;LN=LN+1
             IF TDT.SP.INST.6.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.6;LN=LN+1
             IF TDT.SP.INST.7.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.7;LN=LN+1
             IF TDT.SP.INST.8.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.8;LN=LN+1
             IF TDT.SP.INST.9.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.9;LN=LN+1
             IF TDT.SP.INST.10.USE<1,3> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.10
             FOR X = 1 TO 12
               PRINT
             NEXT X
             FOR LN = 1 TO 3
                IF INST.LINES<LN> # '' THEN PRINT SPACE(12):INST.LINES<LN> ELSE PRINT
             NEXT LN
             FOR K = 1 TO 13
                PRINT
             NEXT K
             PRINT HH.LINE
             FOR K = 1 TO 6
                PRINT
             NEXT K
             PRINT SPACE(7):
             IF TDT.SP.INST.DATE.USE<1,3> ='Y' THEN
                IF TDT.SP.INST.DATE # '' THEN PRINT OCONV(TDT.SP.INST.DATE, 'D'):
             END
             PRINT
             PRINT; PRINT; PRINT
             PRINT SPACE(2):JOB.DESC<1,1> 'L#48':
             IF J < SKIDS THEN
                LAYERS = INT(DJS.SKD.MAX / DJS.LAY.QTY)
                LAY.SUM = LAYERS * DJS.LAY.QTY
                LAY.REM = DJS.SKD.MAX - LAY.SUM
             END ELSE
                LAYERS = INT((TDT.QTY - SKID.SUM) / DJS.LAY.QTY)
                LAY.SUM = LAYERS * DJS.LAY.QTY
                LAY.REM = TDT.QTY - SKID.SUM - LAY.SUM
             END
             PRINT OCONV(LAYERS, 'MD0') 'R#4':' LAYERS OF ':OCONV(DJS.LAY.QTY, 'MD0,') 'R#7'
             PRINT SPACE(2):JOB.DESC<1,2> 'L#48':
             IF LAY.REM # 0 THEN
*               PRINT SPACE(50):'1' 'R#4':' LAYER  OF ':OCONV(LAY.REM, 'MD0,') 'R#7'
                PRINT '1' 'R#4':' LAYER  OF ':OCONV(LAY.REM, 'MD0,') 'R#7'
             END ELSE PRINT
             PRINT SPACE(42):FRM.DESC 'R#30'
             FOR K = 1 TO 6
                PRINT
             NEXT K
             IF J < SKIDS THEN
                PRINT OCONV(DJS.SKD.MAX, 'MD0,') 'R#12':
             END ELSE
                PRINT OCONV(TDT.QTY - SKID.SUM, 'MD0,') 'R#12':
             END
             PRINT SPACE(14):
             PRINT OCONV(J, 'MD0') 'R#5':' OF ':OCONV(SKIDS, 'MD0') 'R#5':
             PRINT SPACE(14):OCONV(TDT.QTY, 'MD0,') 'R#10'
             PRINT;PRINT; PRINT
             IF J < SKIDS THEN
                IF DJS.PPL > 0 THEN
                   PRINT OCONV(ICONV(DJS.SKD.MAX / DJS.PPL, 'MD2'), 'MD2,') 'R#12':
                END ELSE PRINT '0' 'R#12':
             END ELSE
                IF DJS.PPL > 0 THEN
                   PRINT OCONV(ICONV((TDT.QTY - SKID.SUM) / DJS.PPL, 'MD2'), 'MD2,') 'R#12':
                END ELSE PRINT '0' 'R#12':
             END
             SKID.SUM = SKID.SUM + DJS.SKD.MAX
             PRINT ' LBS'
             PRINT; PRINT; PRINT; PRINT
*CSF 24894 v
*            PRINT SPACE(12):SHM.DT.NAME 'L#40':' ':'PRESSMAN'
             PRINT SPACE(12):SHM.DT.NAME 'L#40'
*            PRINT SPACE(12):SHM.DT.ADDR1 'L#49':' ':(STR('-',10))
             PRINT SPACE(12):SHM.DT.ADDR1 'L#49'
             IF SHM.DT.ADDR2 # '' THEN
                PRINT SPACE(12):SHM.DT.ADDR2 'L#40':
             END ELSE
                DUMMY1 = SHM.DT.CITY
                DUMMY2 = SHM.DT.STATE
                DUMMY3 = SHM.DT.ZIP
                MXL = 40
                GOSUB 1500
                PRINT SPACE(12):DUMMY 'L#40':
             END
             PRINT
             IF SHM.DT.ADDR2 # '' THEN
                DUMMY1 = SHM.DT.CITY
                DUMMY2 = SHM.DT.STATE
                DUMMY3 = SHM.DT.ZIP
                MXL = 40
                GOSUB 1500
                PRINT SPACE(12):DUMMY 'L#40':
             END ELSE
                PRINT SPACE(52):
             END
*            PRINT ' ASSISTANT'
             PRINT
*            PRINT SPACE(62):STR('-',10)
             PRINT
             PRINT
*            PRINT SPACE(53):'SHIPPER'
             PRINT
*            PRINT SPACE(62):STR('-',10)
             PRINT
*CSF 24894 ^
             PRINT
         NEXT J
      END
      RETURN
*
**** SETUP C/S/Z LINE
*
1500 *
      DUMMY = ''
      DUMMY2 = DUMMY2[1,2]
      LC = MXL - LEN(DUMMY3) - LEN(DUMMY2) - 3
      DUMMY1 = DUMMY1[1,LC]
      DUMMY = (DUMMY1 : ' ':DUMMY2 : '  ' : DUMMY3)
      RETURN
*
*---- PRINTER LINE-UP
*
9000 *
*     X = 'N'
*     LOOP
      PRINTER ON
      FOR I = 1 TO 2
         FOR X = 1 TO 12
           PRINT
         NEXT X
         FOR X = 1 TO 3
            PRINT SPACE(15):STR('X',30)
         NEXT X
         FOR X =1 TO 13
            PRINT
         NEXT X
         PRINT SPACE(2):'XXXXXX':SPACE(19):STR('X',30)
         FOR X = 1 TO 6
            PRINT
         NEXT X
         PRINT SPACE(2):STR('X',20)
         PRINT; PRINT; PRINT
         PRINT SPACE(2):STR('X',20)
         FOR X = 1 TO 8
            PRINT
         NEXT X
         PRINT SPACE(2):'XX,XXX,XXX':SPACE(14):'XXXXX OF XXXXX':SPACE(14):'XX,XXX,XXX'
         PRINT; PRINT; PRINT
         PRINT SPACE(2):'XXX,XXX.XX XXX'
         PRINT; PRINT; PRINT; PRINT
         FOR X = 1 TO 4
           PRINT SPACE(12):STR('X',30)
         NEXT X
         FOR X = 1 TO 5; PRINT; NEXT X
*        PRINTER OFF
*        PRINTER CLOSE
*        LOOP
*           PRINT @(0,10):CL:@(5,10):'Are the forms aligned? (RET/N) ':
*           INPUT X:
*        WHILE X # 'N' AND X # '' DO REPEAT
*     WHILE X = 'N' DO
*        SLEEP 5
*     REPEAT
      NEXT I
      CRT @(0,12):CL:@(5,12):'Skid Tags now printing':
*     SLEEP 20
      RETURN
*
***** CALL SYSCOM(MAT SYSCOM.REC)
*
91000 *
      ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
92000 *
      ERR.TYPE = 2
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000 *
      ERR.TYPE = 3
      CALL SYSCOM(MAT SYSCOM.REC)
*
**** END OF JOB
*
99999 *
      PRINTER OFF
      END
