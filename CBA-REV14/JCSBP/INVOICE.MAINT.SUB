SUBROUTINE INVOICE.MAINT.SUB (CONO, JOB.NO, IVC.NO, MENU, PROG.FLAG)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*********************************************************************
* REVISION    - [08.1]
* COPYRIGHT   - 1982 by C.B.A     (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - INVOICE.MAINT.SUB
* AUTHOR      - NICK AMENDOLA, C.B.A
* DATE        - 10/17/85
* DESCRIPTION
* This program is used to create and maintain job related invoices.
*T22713 diane 05/12/1998 * REMOVE CALL TO EDIT.SUB TYP=0
*T25740 epitka 08/14/2002 * add email 
*********************************************************************
*COPY>JCS.CPYLIB>INVOICE
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>VOID.INVOICES
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*- INITIALIZATION
ECD.SCRN.NO=2
FOR SCV = 1 TO SCV.REC.SIZE
  SCV.REC(SCV)<ECD.SCRN.NO>=""
NEXT SCV
ECD.ACTION=2;CALL SCRN.EDIT
REF.CNT=0
REF.NO=""
CURR.REF.NO=""
LINE.COUNT=7
INVOICE.TOTAL=0
N.IVC.NO=""
MAT EDIT.COM=""
MAT GEN.XREF.REC = ""
ERRMSG=""
MODE=""
TMP.TAX.RATE=""
TMP.TAX.CALC=""
CURR.JOB.NO=JOB.NO
DESC.LEN=44 ;**********  SCREEN DEPENDENT  **********
MULTI.JOB="Y" ;**********  TEMPORARY  **********
SAVE.JOB.SUBS = JOB.SUBS
IF PROG.FLAG # "I" THEN GOSUB 21000
*- MAIN PROCESSING
100*
SCV.REC(27)<ECD.SCRN.NO>=DATE()
ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
GOSUB 9000
ECD.ACTION=3;CALL SCRN.EDIT
REF.NO=1
CURR.REF.NO=1
IF REF.CNT > 0 THEN GOSUB 6200
*- GET OPERATOR REQUEST
500*
GOSUB 5000
ACTION=ECD.RET.VALUE
502*
BEGIN CASE
  CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 6
    N=ACTION
    ON N GOSUB 1100,1200,1300,1400,1500,1600
  CASE ACTION="A"
    MODE="A"
    DONE=0
    FOR REF.NO=REF.CNT + 1 TO 99 UNTIL DONE
      IF REF.CNT > 0 THEN GOSUB 10000
      GOSUB 6000
      IF ECD.RET.VALUE="END" THEN
        REF.CNT=REF.NO - 1
        AREF=REF.NO
        AREF.CNT=DCOUNT(IVC.CHG.CODE,VM)
        FOR REF.NO=AREF.CNT TO AREF STEP -1
          GOSUB 600
        NEXT REF.NO
        DONE=1
      END ELSE
        REF.CNT=REF.NO
      END
      GOSUB 6200
    NEXT REF.NO
    REF.NO=REF.CNT
    CURR.REF.NO=""
    GOSUB 10000
  CASE ACTION="C" AND REF.CNT > 0
    MODE="C"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      GOSUB 6000
      GOSUB 6200
    END
    GOSUB 10000
  CASE ACTION="D" AND REF.CNT > 0
    MODE="D"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      GOSUB 600
      GOSUB 6200
      REF.CNT=REF.CNT - 1
      IF REF.NO > 1 THEN REF.NO=REF.NO - 1
      CURR.REF.NO=""
      GOSUB 10000
    END
  CASE ACTION="I" AND REF.CNT > 0
    MODE="I"
    GOSUB 5100
    IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
      REF.NO=ECD.RET.VALUE
      IVC.CHG.JOB=INSERT(IVC.CHG.JOB,1,REF.NO,0,"")
      IVC.CHG.CODE=INSERT(IVC.CHG.CODE,1,REF.NO,0,"")
      IVC.CHG.CAT=INSERT(IVC.CHG.CAT,1,REF.NO,0,"")
      IVC.TAX.JURS=INSERT(IVC.TAX.JURS,1,REF.NO,0,"")
      IVC.QUANTITY=INSERT(IVC.QUANTITY,1,REF.NO,0,"")
      IVC.DESC=INSERT(IVC.DESC,1,REF.NO,0,"")
      IVC.AMOUNT=INSERT(IVC.AMOUNT,1,REF.NO,0,"")
      IVC.HIDDEN=INSERT(IVC.HIDDEN,1,REF.NO,0,"")
      IVC.TAXABLE=INSERT(IVC.TAXABLE,1,REF.NO,0,"")
      TMP.TAX.RATE=INSERT(TMP.TAX.RATE,1,REF.NO,0,"")
      TMP.TAX.CALC=INSERT(TMP.TAX.CALC,1,REF.NO,0,"")
      SCV.REC(13) = INSERT(SCV.REC(13),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(14) = INSERT(SCV.REC(14),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(15) = INSERT(SCV.REC(15),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(17) = INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")
      SCV.REC(26) = INSERT(SCV.REC(26),ECD.SCRN.NO,REF.NO,0,"")
      REF.CNT=REF.CNT + 1
      CURR.REF.NO=""
      GOSUB 10000
      GOSUB 6000
      IF ECD.RET.VALUE="END" THEN
        GOSUB 600
        REF.CNT=REF.CNT - 1
        CURR.REF.NO=""
        GOSUB 10000
      END ELSE
        GOSUB 6200
        GOSUB 10000
      END
    END
  CASE ACTION="S" AND REF.CNT > 0
    REF.NO=CURR.REF.NO + LINE.COUNT
    IF REF.NO > REF.CNT THEN REF.NO=1
    GOSUB 10000
  CASE ACTION="SF" AND REF.CNT > 0
    REF.NO=CURR.REF.NO + LINE.COUNT
    IF REF.NO > REF.CNT THEN REF.NO=1
    GOSUB 10000
  CASE ACTION="ST" AND REF.CNT > 0
    REF.NO=1
    GOSUB 10000
  CASE ACTION="SR" AND REF.CNT > 0
    REF.NO=CURR.REF.NO - LINE.COUNT
    IF REF.NO < 1 THEN REF.NO=1
    GOSUB 10000
  CASE ACTION="SB" AND REF.CNT > 0
    REF.NO=REF.CNT
    GOSUB 10000
  CASE ACTION="N"
    WIP.FLAG = ''
    CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)
    ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT
  CASE ACTION="P"
    ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="Y" THEN
      JCNT=COUNT(JJOBS,VM) + (JJOBS # "")
      FOR J=1 TO JCNT
        MATREADU JOB.REC FROM JOB, CONO:JJOBS<1,J> ELSE
          RELEASE JOB, CONO:JJOBS<1,J>
          ERRMSG="CANNOT LOCATE JOB RECORD - ":JJOBS<1,J>
          GOSUB 90000
          GOTO 504
        END
        LOCATE IVC.NO IN JOB.INV.NO<1>,1 SETTING FND ELSE FND=0
        IF FND=0 THEN
          RELEASE JOB, CONO:JJOBS<1,J>
        END ELSE
          IF JOB.INV.DATE<1,FND>="" THEN
            JOB.INV.NO=DELETE(JOB.INV.NO,1,FND,0)
            JOB.INV.DATE=DELETE(JOB.INV.DATE,1,FND,0)
            JOB.INV.CAT=DELETE(JOB.INV.CAT,1,FND,0)
            JOB.INV.AMT=DELETE(JOB.INV.AMT,1,FND,0)
            JOB.INV.BAL=DELETE(JOB.INV.BAL,1,FND,0)
          END
          MATWRITE JOB.REC ON JOB, CONO:JJOBS<1,J>
        END
504   NEXT J
      MAT VOI.REC = ''
      VOI.DATE =  IVC.DATE
      VOI.JOB.NO = IVC.JOB.NO
      VOI.CUST.NO = IVC.CUST.NO
      VOI.CUST.NAME = IVC.CUST.NAME
      VOI.ADDR1 = IVC.ADDR1
      VOI.ADDR2 = IVC.ADDR2
      VOI.ADDR3 = IVC.ADDR3
      VOI.ADDR4 = IVC.ADDR4
      MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE MAT JOB.REC = ''
      VOI.PO = IVC.PO.NO
      VOI.SLSMAN = JOB.SLSMN
      VOI.DEL.DATE = DATE()
      MATWRITE VOI.REC ON VOID.INVOICES, CONO:IVC.NO
      DELETE DAILY.INVOICE, CONO:IVC.NO
      IVC.NO=""
      GOTO 99999
    END
  CASE ACTION="E" OR ACTION="END"
    GOTO 99999
  CASE ACTION="F" AND INVOICE.TOTAL < 0
    ERRMSG="Invalid Total Amount - Must be positive"
    GOSUB 90000
  CASE ACTION="F" AND IVC.PROC.DATE=""
    REF.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
    BLK = 0
    FOR I = 1 TO REF.CNT UNTIL BLK
      IF IVC.CHG.CAT<1,I> # "CMT" THEN BLK = 1
    NEXT I
    IF BLK = 0 THEN
      ERRMSG = "One Valid Invoice Line Entry is Required Before Filling"
      GOSUB 90000
      GOTO 599
    END
    BEGIN CASE
      CASE MENU="CREDIT" OR MENU="DEBIT"
        IVC.LAST="N"
      CASE MENU="PREBILL"
        IVC.LAST="N"
      CASE 1
        GOSUB 21000
        GOSUB 22000
        IF MATCH.ERROR THEN
          X=0;Y=21;TYP=8
          PMSG="Continue (Y/N)"
          CALL EDIT.SUB
          IF VALUE="N" THEN GOTO 500
        END
        X=0;Y=21;TYP=8
        PMSG="Is this the last invoice (Y/N)"
        CALL EDIT.SUB
        IF VALUE="END" THEN GOTO 500
        IVC.LAST=VALUE
    END CASE
    BEGIN CASE
      CASE MENU="CREDIT" OR MENU="DEBIT"
        IVC.PRE.BILL="N"
        IVC.WIP.TYPE="ALL"
        IVC.WIP.DATE="ALL"
        IVC.WIP.PRCNT=0
      CASE MENU="PREBILL"
        IVC.PRE.BILL="N"
        IVC.WIP.TYPE="ALL"
        IVC.WIP.DATE="ALL"
        IVC.WIP.PRCNT=0
      CASE IVC.LAST="Y"
        IVC.PRE.BILL="Y"
        IVC.WIP.TYPE="ALL"
        IVC.WIP.DATE="ALL"
        IVC.WIP.PRCNT=10000
      CASE 1
        PRE.BILL.PRESENT=0
        ICNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
        FOR I=1 TO ICNT UNTIL PRE.BILL.PRESENT
          JB=IVC.CHG.JOB<1,I>
          IF JB # "" THEN
            LOCATE JB IN JJOBS<1>,1 SETTING FND ELSE FND=0
            IF FND AND PRE.BILL.BAL<1,FND>="Y" THEN PRE.BILL.PRESENT=1
          END
        NEXT I
        IF PRE.BILL.PRESENT THEN
          X=0;Y=21;TYP=8
          PMSG="Credit sales for pre-bills (Y/N)"
          CALL EDIT.SUB
          IF VALUE="END" THEN GOTO 500
          IVC.PRE.BILL=VALUE
        END ELSE
          IVC.PRE.BILL="N"
        END
        CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)
        IF WIP.FLAG = "END" OR IVC.NO = "N" THEN
          ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT
        END
        IF WIP.FLAG = "END" THEN GOTO 500
    END CASE
    IF IVC.NO="N" THEN
550   READU IVC.NO FROM CONTROL, CONO:"NEXT.INVOICE.NO" ELSE IVC.NO=1
      N.IVC.NO=IVC.NO + 1
      IVC.NO=STR("0",6-LEN(IVC.NO)):IVC.NO
      WRITE N.IVC.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"
      BEGIN CASE
        CASE MENU="CREDIT"
          IVC.NO=IVC.NO:"CM"
        CASE MENU="DEBIT"
          IVC.NO=IVC.NO:"DM"
        CASE MENU="PREBILL"
          IVC.NO=IVC.NO:"PB"
      END CASE
      READ REC FROM DAILY.INVOICE,CONO:IVC.NO ELSE GOTO 560
      GOTO 550
560   READ REC FROM INVOICE,CONO:IVC.NO ELSE GOTO 565
      GOTO 550
565   READ REC FROM VOID.INVOICES,CONO:IVC.NO ELSE GOTO 570
      GOTO 550
570   IF CO.ARS="Y" THEN
        READ REC FROM OPEN.RECV,CONO:IVC.NO ELSE GOTO 580
        GOTO 550
580   END
      ECD.NUM=7;SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
      ECD.ACTION=5;CALL SCRN.EDIT
      ERRMSG="Please note the new number";GOSUB 90000
    END
    JCNT=COUNT(IVC.CHG.JOB,VM) + (IVC.CHG.JOB # "")
    FOR J=1 TO JCNT
      IF IVC.CHG.JOB<1,J> # "" THEN
        MATREADU JOB.REC FROM JOB, CONO:IVC.CHG.JOB<1,J> ELSE
          RELEASE JOB, IVC.CHG.JOB<1,J>
          ERRMSG="CANNOT LOCATE JOB RECORD - ":IVC.CHG.JOB<1,J>
          GOSUB 90000
          GOTO 590
        END
        LOCATE IVC.NO IN JOB.INV.NO<1>,1 SETTING PTR ELSE
          PTR=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "") + 1
          JOB.INV.NO<1,PTR>=IVC.NO
        END
*JOB.CUST.PO=TMP.CUST.PO
        MATWRITE JOB.REC ON JOB, CONO:IVC.CHG.JOB<1,J>
      END
590 NEXT J
    MATWRITE IVC.REC ON DAILY.INVOICE, CONO:IVC.NO
    GOTO 99999
599*
END CASE
GOTO 500
*- DELETE SPECIFIC LINE
600*
IVC.CHG.JOB=DELETE(IVC.CHG.JOB,1,REF.NO,0)
IVC.CHG.CODE=DELETE(IVC.CHG.CODE,1,REF.NO,0)
IVC.CHG.CAT=DELETE(IVC.CHG.CAT,1,REF.NO,0)
IVC.TAX.JURS=DELETE(IVC.TAX.JURS,1,REF.NO,0)
IVC.TAXABLE=DELETE(IVC.TAXABLE,1,REF.NO,0)
IVC.QUANTITY=DELETE(IVC.QUANTITY,1,REF.NO,0)
IVC.DESC=DELETE(IVC.DESC,1,REF.NO,0)
IVC.AMOUNT=DELETE(IVC.AMOUNT,1,REF.NO,0)
IVC.HIDDEN=DELETE(IVC.HIDDEN,1,REF.NO,0)
TMP.TAX.RATE=DELETE(TMP.TAX.RATE,1,REF.NO,0)
TMP.TAX.CALC=DELETE(TMP.TAX.CALC,1,REF.NO,0)
SCV.REC(13) = DELETE(SCV.REC(13),ECD.SCRN.NO,REF.NO,0)
SCV.REC(14) = DELETE(SCV.REC(14),ECD.SCRN.NO,REF.NO,0)
SCV.REC(15) = DELETE(SCV.REC(15),ECD.SCRN.NO,REF.NO,0)
SCV.REC(17) = DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)
SCV.REC(26) = DELETE(SCV.REC(26),ECD.SCRN.NO,REF.NO,0)
RETURN
*- GET CUSTOMER ID AND XREF FOR BILL TO
1100*
SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IF ECD.RET.VALUE="???" THEN
  ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 1100
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GXR.HEADING<1,1>="CUST ID"
  GXR.HEADING<1,2>=" CUSTOMER NAME"
  GXR.HEADING<1,3>=" CITY,STATE"
  GXR.HEADING<1,4>="ZIP CODE"
  GXR.ATT<1,1> = 0
  GXR.ATT<1,2> = 1
  GXR.ATT<1,3> = 5
  GXR.ATT<1,4> = 6
  GXR.LEN<1,1> = 7
  GXR.LEN<1,2> = 30
  GXR.LEN<1,3> = 21
  GXR.LEN<1,4> = 10
  GXR.XREF = CUSTOMER.XREF
  GXR.FILE = CUSTOMER
  GXR.LOC = 1
  GXR.TOP.LINE<1,1> = "CUSTOMER XREF SEARCH"
  GXR.TOP.LINE<1,2> = "SEARCH FOR - ":ECD.RET.VALUE
  GXR.ID = ""
  GXR.SRCH.ID = ECD.RET.VALUE
  CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
  IF GXR.ACTION # "X" THEN
    ECD.ACTION = 2; CALL SCRN.EDIT
    ECD.ACTION = 3; CALL SCRN.EDIT
  END
  IF GXR.ID = "" THEN
    SCV.REC(1)<ECD.SCRN.NO> = IVC.CUST.NO
    ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
    SCV.REC(2)<ECD.SCRN.NO,1> = IVC.CUST.NAME
    ECD.NUM = 2; ECD.SUB.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
    GOTO 1100
  END
  ECD.RET.VALUE = GXR.ID
  SCV.REC(1)<ECD.SCRN.NO> = GXR.ID
  ECD.NUM = 1; ECD.ACTION = 5; CALL SCRN.EDIT
END
MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
  ERRMSG="Invalid Customer ID"
  GOSUB 90000
  GOTO 1100
END
IVC.CUST.NO=ECD.RET.VALUE
IVC.CUST.NAME=CUST.NAME
IVC.ADDR1=CUST.ADDR1
IVC.ADDR2=CUST.ADDR2
IVC.ADDR3=CUST.ADDR3
IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP
IVC.ATTENTION=CUST.ATTENTION
SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
SCV.REC(2)<ECD.SCRN.NO,1>=IVC.CUST.NAME
SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1
SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2
SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3
SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
ECD.NUM=2;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=28;ECD.ACTION=5;CALL SCRN.EDIT
RETURN
*- GET CUSTOMER NAME & ADDRESS
1200*
ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IF ECD.RET.VALUE="" THEN GOTO 1200
IVC.CUST.NAME = ECD.RET.VALUE
ECD.NUM=2;ECD.SUB.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.ADDR1=ECD.RET.VALUE
ECD.NUM=2;ECD.SUB.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.ADDR2=ECD.RET.VALUE
ECD.NUM=2;ECD.SUB.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.ADDR3=ECD.RET.VALUE
ECD.NUM=2;ECD.SUB.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.ADDR4=ECD.RET.VALUE
RETURN
*- GET ATTENTION OF
1300*
ECD.NUM=28;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.ATTENTION=ECD.RET.VALUE
RETURN
*- GET CUSTOMER P/O NUMBER
1400*
ECD.NUM=9;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.PO.NO=ECD.RET.VALUE
RETURN
*- GET INVOICE DATE
1500*
ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.DATE=ECD.RET.VALUE
RETURN
*- GET MAIL FLAG
1600*
ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE='END' THEN RETURN
IVC.PRT.FLG<1,1>='Y' ; * hardcoded for print
IVC.PRT.FLG<1,2>=ECD.RET.VALUE
RETURN
*- GET OPERATOR REQUEST
5000*
IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
  ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
END ELSE
  ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT
END
IF ECD.RET.VALUE="END" THEN RETURN
RETURN
*- GET LINE NUMBER
5100*
SCV.REC(19)<ECD.SCRN.NO>=""
ECD.MINV=CURR.REF.NO; ECD.MAXV=CURR.REF.NO + LINE.COUNT - 1
IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
RETURN
*- GET MULTI-LINE DATA
6000*
ECD.NUM=12;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
IF SCV.REC(22)<ECD.SCRN.NO,REF.NO> # "" THEN
  SCV.REC(22)<ECD.SCRN.NO,REF.NO>=""
  SCV.REC(23)<ECD.SCRN.NO,REF.NO>=""
  SCV.REC(24)<ECD.SCRN.NO,REF.NO>=""
  ECD.NUM=22;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=23;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  ECD.NUM=24;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
END
*- GET INVOICE CODE
6010*
SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>
ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
ICODE=ECD.RET.VALUE
DESC.FLAG = 0
BEGIN CASE
  CASE ICODE="JOB1" OR ICODE="JOB"
    LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
    IF FND < REF.NO THEN
      ERRMSG="Only comment lines may be entered after total line"
      GOSUB 90000; GOTO 6010
    END
    MAT INC.REC=""
    INC.CATEGORY="OTH"
  CASE ICODE="SUB" OR ICODE="SUBT"
    LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
    IF FND < REF.NO THEN
      ERRMSG="Only comment lines may be entered after total line"
      GOSUB 90000; GOTO 6010
    END
    MAT INC.REC=""
    INC.CATEGORY="CMT"
    INC.DESC="SUB TOTAL"
    INC.DESC=SPACE(DESC.LEN-LEN(INC.DESC)-4):INC.DESC
  CASE ICODE="TOT"
    FOR TN=REF.NO+1 TO REF.CNT
      IF IVC.CHG.CAT<1,TN> # "CMT" THEN
        ERRMSG="Total line can only preceed comment lines"
        GOSUB 90000; GOTO 6010
      END
    NEXT TN
    MAT INC.REC=""
    INC.CATEGORY="CMT"
    INC.DESC="TOTAL"
    INC.DESC=SPACE(DESC.LEN-LEN(INC.DESC)-4):INC.DESC
  CASE ICODE="CMT"
    MAT INC.REC=""
    INC.CATEGORY="CMT"
  CASE 1
    MATREAD INC.REC FROM INVOICE.CODE, CONO:ICODE ELSE
      ERRMSG="Invalid code"
      GOSUB 90000; GOTO 6010
    END
    IF INC.HIDDEN="Y" AND REF.NO=1 THEN
      ERRMSG="Hidden line cannot be first line entered"
      GOSUB 90000; GOTO 6010
    END
    IF INC.CATEGORY # "CMT" THEN
      LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
      IF FND < REF.NO THEN
        ERRMSG="Only comment lines may be entered after total line"
        GOSUB 90000; GOTO 6010
      END
    END
END CASE
IF IVC.CHG.CODE<1,REF.NO>#ICODE THEN DESC.FLAG = 1
IVC.CHG.CODE<1,REF.NO>=ICODE
IVC.CHG.CAT<1,REF.NO>=INC.CATEGORY
IVC.HIDDEN<1,REF.NO>=INC.HIDDEN
*- GET JOB NUMBER
6012*
BEGIN CASE
  CASE INC.CATEGORY="CMT"
    IVC.CHG.JOB<1,REF.NO>=""
    IF SCV.REC(26)<ECD.SCRN.NO,REF.NO>#"" THEN
      SCV.REC(26)<ECD.SCRN.NO,REF.NO>=""
      ECD.NUM=26;ECD.ACTION=5;CALL SCRN.EDIT
    END
  CASE MULTI.JOB="N" OR SAVE.JOB.SUBS=""
    IVC.CHG.JOB<1,REF.NO>=JOB.NO
  CASE 1
    LDONE = 0
    FOR LLL = REF.NO TO 1 STEP - 1 UNTIL LDONE
      IF IVC.CHG.JOB<1,LLL> # "" THEN
        SCV.REC(26)<ECD.SCRN.NO,REF.NO>=IVC.CHG.JOB<1,LLL>
        LDONE = 1
      END
    NEXT LLL
    ECD.NUM=26;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    IF ECD.RET.VALUE # JOB.NO THEN
      LOCATE ECD.RET.VALUE IN SAVE.JOB.SUBS<1>,1 SETTING FND ELSE FND=0
      IF FND=0 THEN
        ERRMSG="Job must be related to master job"
        GOSUB 90000
        GOTO 6012
      END
    END
    IF ECD.RET.VALUE # CURR.JOB.NO THEN
      CURR.JOB.NO=ECD.RET.VALUE
      MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
        ERRMSG="Invalid job number"
        GOSUB 90000
        GOTO 6012
      END
    END
    IVC.CHG.JOB<1,REF.NO>=ECD.RET.VALUE
END CASE
BEGIN CASE
  CASE ICODE = "JOB1"
    INC.DESC=JOB.DESC<1,1>[1,DESC.LEN]
  CASE ICODE = "JOB"
    NEW.DESC=""
    CALL DESC.REFORMAT (JOB.DESC, DESC.LEN, NEW.DESC)
    MAT INC.REC=""
    INC.CATEGORY="OTH"
    INC.DESC=NEW.DESC<1,1>
    IF MODE="A" THEN
      DCNT=COUNT(NEW.DESC,VM) + (NEW.DESC # "")
      FOR D=2 TO DCNT
        IVC.CHG.CODE<1,REF.NO+D-1>="CMT"
        IVC.CHG.CAT<1,REF.NO+D-1>="CMT"
        IVC.DESC<1,REF.NO+D-1>=NEW.DESC<1,D>
        SCV.REC(13)<ECD.SCRN.NO,REF.NO+D-1>="CMT"
        SCV.REC(15)<ECD.SCRN.NO,REF.NO+D-1>=NEW.DESC<1,D>
      NEXT D
      CURR.REF.NO=""
      GOSUB 10000
    END
END CASE
*- GET TAX JURISDICTION OR SHIP VIA IF NECESSARY
6015*
BEGIN CASE
  CASE IVC.CHG.CAT<1,REF.NO>="TAX"
    SCV.REC(25)<ECD.SCRN.NO>="Tax Jur :"
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
    SCV.REC(24)<ECD.SCRN.NO>=""
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
      GOSUB 90000
      GOTO 6015
    END
    LOCATE ECD.RET.VALUE IN JJURS<1>,1 SETTING FND ELSE FND=0
    IF FND=0 THEN
      ERRMSG="No shipment present for this tax jurisdiction"
      GOSUB 90000
    END
    IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
    TMP.TAX.RATE<1,REF.NO>=TAX.RATE
    TMP.TAX.CALC<1,REF.NO>=""
    SCV.REC(24)<ECD.SCRN.NO>=TAX.JUR
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
  CASE IVC.CHG.CAT<1,REF.NO>="SHP"
    SCV.REC(25)<ECD.SCRN.NO>="Ship Via :"
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
    SCV.REC(24)<ECD.SCRN.NO>=""
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"
      GOSUB 90000
      GOTO 6015
    END
    LOCATE ECD.RET.VALUE IN JSHIP<1>,1 SETTING FND ELSE FND=0
    IF FND=0 THEN
      ERRMSG="No shipment present for this carrier"
      GOSUB 90000
    END
    IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
    IVC.TAXABLE<1,REF.NO>=""
    TMP.TAX.RATE<1,REF.NO>=""
    TMP.TAX.CALC<1,REF.NO>=""
    SCV.REC(24)<ECD.SCRN.NO>=SHPV.DESC
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
  CASE IVC.CHG.CAT<1,REF.NO>="DSC" OR IVC.CHG.CAT<1,REF.NO>="MSC"
    SCV.REC(25)<ECD.SCRN.NO>="Sales CD :"
    ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
    SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
    SCV.REC(24)<ECD.SCRN.NO>=""
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
    MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Sales Code ":ECD.RET.VALUE:" is not on file"
      GOSUB 90000
      GOTO 6015
    END
    IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
    IVC.TAXABLE<1,REF.NO>=""
    TMP.TAX.RATE<1,REF.NO>=""
    TMP.TAX.CALC<1,REF.NO>=""
    ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
  CASE 1
    IVC.TAX.JURS<1,REF.NO>=""
    IVC.TAXABLE<1,REF.NO>=""
    TMP.TAX.RATE<1,REF.NO>=""
    TMP.TAX.CALC<1,REF.NO>=""
END CASE
IF INC.DESC # "" AND DESC.FLAG = 1 THEN
  SCV.REC(15)<ECD.SCRN.NO,REF.NO>=INC.DESC
  ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
END
*- GET QUANTITY
6020*
BEGIN CASE
  CASE INC.CATEGORY="OTH" OR INC.CATEGORY="MSC"
    ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE="END" THEN RETURN
  CASE 1
    ECD.RET.VALUE=""
    SCV.REC(14)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
END CASE
IVC.QUANTITY<1,REF.NO>=ECD.RET.VALUE
*- GET DESCRIPTION
6030*
ECD.DEFAULT=INC.DESC
ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE="END" THEN RETURN
IVC.DESC<1,REF.NO>=ECD.RET.VALUE
*- GET AMOUNT
6040*
BEGIN CASE
  CASE INC.CATEGORY="TAX"
    TAX.REF=REF.NO
    GOSUB 6400
    ECD.O.R="O";ECD.DEFAULT=TAMT
    SCV.REC(17)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE # "END" THEN
      IF ECD.RET.VALUE="" THEN
        ECD.RET.VALUE=TAMT
        SCV.REC(17)<ECD.SCRN.NO,REF.NO>=TAMT
        ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      END
      IF ECD.RET.VALUE=TAMT THEN
        TMP.TAX.CALC<1,REF.NO>="C"
        IVC.TAXABLE<1,REF.NO>= AMT.TAX
      END ELSE
        TMP.TAX.CALC<1,REF.NO>="E"
        BEGIN CASE
          CASE TMP.TAX.RATE<1,REF.NO> + 0 = 0
          CASE ECD.RET.VALUE < 0
            AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)-0.5)
          CASE 1
            AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)+0.5)
        END CASE
6045    DEFAULT=OCONV(AMT.TAX, "MD2"); O.R="O"
        X=0; Y=21; TYP=4; SCALER=2; MINV=0; MAXV=999999999
        MAXL=10; PMSG="Enter Taxable amount : "
        CALL EDIT.SUB
        P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF VALUE = "END" THEN GOTO 6040
        IF VALUE = "" THEN GOTO 6045
        IVC.TAXABLE<1,REF.NO> = VALUE
      END
    END
  CASE IVC.CHG.CODE<1,REF.NO>="SUB"
    GOSUB 6200
    ECD.RET.VALUE=AMT.SUB
    SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.SUB
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  CASE IVC.CHG.CODE<1,REF.NO>="SUBT"
    GOSUB 6200
    ECD.RET.VALUE=IVC.AMOUNT<1,REF.NO>
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  CASE IVC.CHG.CODE<1,REF.NO>="TOT"
    GOSUB 6200
    ECD.RET.VALUE=AMT.TOT
    SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.TOT
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  CASE INC.CATEGORY="CMT"
    ECD.RET.VALUE=""
    SCV.REC(17)<ECD.SCRN.NO,REF.NO>=""
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
  CASE 1
    ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
END CASE
IF ECD.RET.VALUE="END" THEN RETURN
IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
RETURN
*- CALCULATE AND DISPLAY TOTAL
6200*
AMT.SUB=0
AMT.TOT=0
AMT.SUBT=0
FOR REF=1 TO REF.CNT + 1
  CODE=IVC.CHG.CODE<1,REF>
  CATG=IVC.CHG.CAT<1,REF>
  AMT=IVC.AMOUNT<1,REF>
  BEGIN CASE
    CASE CODE="SUB"
      IF AMT.SUB # AMT THEN
        IVC.AMOUNT<1,REF>=AMT.SUB
        SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.SUB
        IF AMT # "" THEN CURR.REF.NO=""
      END
    CASE CODE="SUBT"
      IF AMT.SUBT # AMT THEN
        IVC.AMOUNT<1,REF>=AMT.SUBT
        SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.SUBT
        IF AMT # "" THEN CURR.REF.NO=""
      END
      AMT.SUBT = 0
    CASE CODE="TOT"
      IF AMT.TOT # AMT THEN
        IVC.AMOUNT<1,REF>=AMT.TOT
        SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.TOT
        IF AMT # "" THEN CURR.REF.NO=""
      END
    CASE CATG="TAX"
      TAX.REF=REF
      GOSUB 6400
      IF TAMT # AMT OR TMP.TAX.RATE<1,REF> + 0 = 0 THEN
        IF TMP.TAX.CALC<1,REF>="E" THEN
          BEGIN CASE
            CASE MODE=""
            CASE MODE="A"
            CASE MODE="C" AND REF.NO >= REF
            CASE MODE="D" AND REF.NO > REF
            CASE MODE="I" AND REF.NO > REF
            CASE 1
              ERRMSG="TAX ENTRY ON LINE ":REF:" MAY BE AFFECTED"
              GOSUB 90000
          END CASE
        END ELSE
          AMT=TAMT
          IVC.AMOUNT<1,REF>=AMT
          IVC.TAXABLE<1,REF>=AMT.TAX
          SCV.REC(17)<ECD.SCRN.NO,REF>=AMT
          IF AMT # "" THEN CURR.REF.NO=""
        END
      END
      AMT.SUB=AMT.SUB + AMT
      AMT.TOT=AMT.TOT + AMT
      AMT.SUBT=AMT.SUBT + AMT
    CASE 1
      AMT.SUB=AMT.SUB + AMT
      AMT.TOT=AMT.TOT + AMT
      AMT.SUBT=AMT.SUBT + AMT
  END CASE
NEXT REF
INVOICE.TOTAL=AMT.TOT
SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL
ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
RETURN
*- CALCULATE SALES TAX
6400*
AMT.TAX=0
TDONE=0
FOR TREF=TAX.REF-1 TO 1 STEP -1 UNTIL TDONE
  IF IVC.CHG.CAT<1,TREF>="TAX" THEN
    IF AMT.TAX > 0 THEN TDONE=1
  END ELSE
    IF IVC.CHG.CODE<1,TREF> # "SUBT" THEN
      AMT.TAX=AMT.TAX + IVC.AMOUNT<1,TREF>
      IF IVC.CHG.CODE<1,TREF>="SUB" THEN
        TDONE=1
      END
    END
  END
NEXT TREF
TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)
RETURN
*- SET SCREEN VALUES
9000*
SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
SCV.REC(2)<ECD.SCRN.NO,1>=IVC.CUST.NAME
SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1
SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2
SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3
SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
SCV.REC(6)<ECD.SCRN.NO>=IVC.JOB.NO
SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
SCV.REC(8)<ECD.SCRN.NO>=IVC.DATE
SCV.REC(29)<ECD.SCRN.NO>=IVC.PRT.FLG
IF IVC.PO.NO="" THEN IVC.PO.NO = JOB.CUST.PO
SCV.REC(9)<ECD.SCRN.NO>=IVC.PO.NO
IF IVC.PROC.DATE="" THEN
  IF IVC.PRT.DATE # "" THEN
    SCV.REC(10)<ECD.SCRN.NO>="PRINTED"
    SCV.REC(11)<ECD.SCRN.NO>=IVC.PRT.DATE
  END
END ELSE
  SCV.REC(10)<ECD.SCRN.NO>="PROCESSED"
  SCV.REC(11)<ECD.SCRN.NO>=IVC.PROC.DATE
END
REF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
FOR REF=1 TO REF.CNT
  SCV.REC(13)<ECD.SCRN.NO,REF>=IVC.CHG.CODE<1,REF>
  IF MULTI.JOB="Y" THEN
    SCV.REC(26)<ECD.SCRN.NO,REF>=IVC.CHG.JOB<1,REF>
  END
  SCV.REC(14)<ECD.SCRN.NO,REF>=IVC.QUANTITY<1,REF>
  SCV.REC(15)<ECD.SCRN.NO,REF>=IVC.DESC<1,REF>
  SCV.REC(17)<ECD.SCRN.NO,REF>=IVC.AMOUNT<1,REF>
  IF IVC.CHG.CAT<1,REF>="TAX" THEN
    MATREAD TAX.REC FROM TAX, CONO:IVC.TAX.JURS<1,REF> ELSE
      MAT TAX.REC=""
      ERRMSG="CANNOT LOCATE TAX JURISDICTION - ":IVC.TAX.JURS
      GOSUB 90000
    END
    TMP.TAX.RATE<1,REF>=TAX.RATE
    TAX.REF=REF
    GOSUB 6400
    IF IVC.AMOUNT<1,REF>=TAMT THEN
      TMP.TAX.CALC<1,REF>="C"
    END ELSE
      TMP.TAX.CALC<1,REF>="E"
    END
  END
NEXT REF
SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL
RETURN
*- DISPLAY MULTI-LINE FIELDS
10000*
START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
IF START.REF.NO=CURR.REF.NO THEN RETURN
CURR.REF.NO=START.REF.NO
ECD.NUM=12;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=26;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=13;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=17;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
RETURN
*- GET JOB SHIPPING INFORMATION
21000*
JJURS=""; JSHIP=""; JCOST=""; JSALE=""
JJCNT=0; JSCNT=0
IF SAVE.JOB.SUBS="" THEN JJOBS=JOB.NO ELSE JJOBS=SAVE.JOB.SUBS:VM:JOB.NO
PRE.BILL.BAL=""
SHIP.WIP=0
JCNT=COUNT(JJOBS,VM) + (JJOBS # "")
FOR J=1 TO JCNT
  JB=JJOBS<1,J>
  CURR.JOB.NO=JB
  MATREAD JOB.REC FROM JOB, CONO:JB ELSE GOTO 21080
  ICNT=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
  FOR IP=1 TO ICNT
    IF JOB.INV.NO<1,IP>[7,2]="PB" THEN
      PRE.BILL.BAL<1,J>="Y"
    END
  NEXT IP
  SHIP.WIP=SHIP.WIP + JOB.SP.WIP<1,2,1>
  DCNT=COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
  FOR D=1 TO DCNT
    SP.ID = CONO:JB:"!":JOB.SP.DEPT<1,D>:"!":JOB.SP.CCTR<1,D>:"!"
    FOR DS=1 TO JOB.SP.SEQ<1,D>
      MATREAD JSP.REC FROM JOB.SHIP, SP.ID:DS ELSE GOTO 21070
      LOCATE JSP.JURS IN JJURS<1>,1 SETTING FND ELSE FND=0
      IF FND=0 THEN
        JJCNT=JJCNT + 1
        JJURS<1,JJCNT>=JSP.JURS
      END
      LOCATE JSP.VIA IN JSHIP<1>,1 SETTING FND ELSE FND=0
      IF FND=0 THEN
        JSCNT=JSCNT + 1
        JSHIP<1,JSCNT>=JSP.VIA
        JCOST<1,JSCNT>=JSP.COST
        JSALE<1,JSCNT>=JSP.SALE
      END ELSE
        JCOST<1,FND>=JCOST<1,FND> + JSP.COST
        JSALE<1,FND>=JSALE<1,FND> + JSP.SALE
      END
21070 NEXT DS
  NEXT D
21080 NEXT J
RETURN
*- MATCH TAX JURISDICTIONS
22000*
SHIP.AMT=0
JJMAT=""; JSMAT=""
LCNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
FOR L=1 TO LCNT
  CATG=IVC.CHG.CAT<1,L>
  BEGIN CASE
    CASE CATG="TAX"
      J=IVC.TAX.JURS<1,L>
      LOCATE J IN JJURS<1>,1 SETTING FND ELSE FND=0
      IF FND > 0 THEN JJMAT<1,FND>="X"
    CASE CATG="SHP"
      SHIP.AMT=SHIP.AMT + IVC.AMOUNT<1,L>
      S=IVC.TAX.JURS<1,L>
      LOCATE S IN JSHIP<1>,1 SETTING FND ELSE FND=0
      IF FND > 0 THEN JSMAT<1,FND>="X"
  END CASE
NEXT L
MATCH.ERROR=0
ERR=0
FOR J=1 TO JJCNT UNTIL ERR
  IF JJMAT<1,J>="" THEN
    ERR=1
    MATCH.ERROR=1
    ERRMSG="Taxes not entered for all tax jurisdictions on job"
    GOSUB 90000
  END
NEXT J
ERR=0
FOR S=1 TO JSCNT UNTIL ERR
  IF JSMAT<1,S>="" THEN
    ERR=1
    MATCH.ERROR=1
    ERRMSG="Shipping charges not entered for all carriers used on job"
    GOSUB 90000
  END
NEXT S
IF SHIP.AMT > SHIP.WIP THEN
  MATCH.ERROR=1
  ERRMSG="Shipping charges entered exceeds WIP by ":OCONV((SHIP.AMT-SHIP.WIP),"MD2,$")
  GOSUB 90000
END
IF SHIP.WIP > SHIP.AMT THEN
  MATCH.ERROR=1
  ERRMSG="WIP exceeds shipping charges entered by ":OCONV((SHIP.WIP-SHIP.AMT),"MD2,$")
  GOSUB 90000
END
RETURN
*- ERROR ROUTINE
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1:
*       PRINT @(0,23):CL:
*       RETURN
*- END OF PROGRAM
99999 *
ECD.ACTION=99;CALL SCRN.EDIT
RETURN
END
