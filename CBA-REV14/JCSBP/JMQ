   CASE REQUEST='F'
      IF NOT(RD.DISPLAY) AND JOB.RESV.MATL # "" THEN
         RD.DISPLAY = 1
         ERRMSG = "Must review the required materials for estimate before filing. "
         GOSUB 91000
         IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # "5" THEN
            DISPLAY=1
         END ELSE
            DISPLAY=0
         END
         ECD.SCRN.NO=4
         SCV.REC(1)<4> = SCV.REC(7)<1>
         SCV.REC(2)<4>=SCV.REC(8)<1>
         SCV.REC(3)<4>=SCV.REC(9)<1>
         SCV.REC(4)<4>=SCV.REC(10)<1>
         ECD.ACTION=3
         CALL SCRN.EDIT
         CALL JOB.REQD.SUB(CONO,JOB.NUM,DISPLAY,SAVE.INV.JS.REC)
         ECD.SCRN.NO=1
         GOSUB 30500
         GOTO 510
      END
      IF JOB.STATUS="" THEN
         IF JOB.CREDIT = "" THEN GOSUB 3100
         IF ECD.RET.VALUE = "END" THEN GOTO 510
      END
      QUOTED.AMT = 0
      IF JOB.STATUS<1,1> < 4  THEN
         LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
            IF JOB.TOT.INV > 0 THEN
               QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
            END ELSE
               QUOTED.AMT = JOB.CONF.AMT
            END
            IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
         END
      END
      IF JOB.MASTER = "" THEN JOB.MASTER = JOB.NUM
      IF OLD.MASTER = "" THEN OLD.MASTER = JOB.MASTER
      IF OLD.CUST = "" THEN OLD.CUST = JOB.CUST
      CUR.CUST = JOB.CUST
      CUR.MASTER = JOB.MASTER
      MAT SAVE.JOB = MAT JOB.REC
      IF OLD.MASTER = CUR.MASTER THEN GOTO 502
      MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE
         RELEASE JOB, CONO:OLD.MASTER
         ERRMSG = "CANNOT LOCATE MASTER JOB - " : OLD.MASTER
         GOSUB 91000
         GOTO 502
      END
      LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING JFND ELSE
         RELEASE JOB, CONO : OLD.MASTER
         GOTO 502
      END
      JOB.SUBS = DELETE(JOB.SUBS,1,JFND,0)
      MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
502   IF OLD.CUST = CUR.CUST THEN GOTO 503
      MATREADU CUST.REC FROM CUSTOMER, CONO : OLD.CUST ELSE
         RELEASE CUSTOMER, CONO : OLD.CUST
         ERRMSG = "CANNOT LOCATE CUSTOMER - " : OLD.CUST
         GOSUB 91000
         GOTO 503
      END
      LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE
         RELEASE CUSTOMER, CONO : OLD.CUST
         GOTO 503
      END
      CUST.JOB = DELETE(CUST.JOB,1,JFND,0)
      CUST.JOB.BAL = DELETE(CUST.JOB.BAL,1,JFND,0)
      MATWRITE CUST.REC ON CUSTOMER , CONO:OLD.CUST
503   IF CUR.MASTER = JOB.NUM THEN GOTO 504
      MATREADU JOB.REC FROM JOB, CONO : CUR.MASTER ELSE
         RELEASE JOB, CONO:CUR.MASTER
         ERRMSG = "CANNOT LOCATE MASTER JOB - " : CUR.MASTER
         GOSUB 91000
         GOTO 505
      END
      IF JOB.CUST # CUR.CUST THEN
         ERRMSG = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - " : JOB.CUST
         GOSUB 91000
         RELEASE JOB, CONO : CUR.MASTER
         GOTO 505
      END
      IF JOB.MASTER = "" THEN JOB.MASTER = CUR.MASTER
      IF JOB.MASTER # CUR.MASTER THEN
         ERRMSG = "MASTER JOB CANNOT BE A SUB JOB"
         GOSUB 91000
         RELEASE JOB, CONO : CUR.MASTER
         GOTO 505
      END
      LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING SFND ELSE
         JOB.SUBS<1,SFND> = JOB.NUM
      END
504   MATREADU CUST.REC FROM CUSTOMER, CONO : CUR.CUST ELSE
         ERRMSG = "CANNOT LOCATE CUSTOMER - " : CUR.CUST
         GOSUB 91000
         IF CUR.MASTER = JOB.NUM THEN GOTO 505
         RELEASE JOB, CONO : CUR.MASTER
505      IF OLD.MASTER = CUR.MASTER THEN GOTO 506
         MATREADU JOB.REC FROM JOB, CONO : OLD.MASTER ELSE
            RELEASE JOB, CONO:OLD.MASTER
            GOTO 506
         END
         LOCATE JOB.NUM IN JOB.SUBS<1>,1 SETTING JFND ELSE NULL
         JOB.SUBS<1,JFND> = JOB.NUM
         MATWRITE JOB.REC ON JOB, CONO : OLD.MASTER
506      MAT JOB.REC = MAT SAVE.JOB
         IF OLD.CUST = CUR.CUST THEN GOTO 510
         MATREADU CUST.REC FROM CUSTOMER, OLD.CUST ELSE GOTO 510
         LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
         CUST.JOB<1,JFND> = JOB.NUM
         CUST.JOB.BAL<1,JFND> = QUOTED.AMT
         MATWRITE CUST.REC ON CUSTOMER, CONO : OLD.CUST
         GOTO 510
      END
      IF CUR.MASTER # JOB.NUM THEN
         MATWRITE JOB.REC ON JOB, CONO : CUR.MASTER
      END
      MAT JOB.REC = MAT SAVE.JOB
      LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
      CUST.JOB<1,JFND> = JOB.NUM
      CUST.JOB.BAL<1,JFND> = QUOTED.AMT
      MATWRITE CUST.REC ON CUSTOMER , CONO : CUR.CUST
      MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
      IF SAVE.INV.JS.REC # '' THEN
         FOR M = 1 TO MCNT
            JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
            MATREADU INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
               MAT INV.JS.REC = ''
            END
            IJS.JOB.CUST = JOB.CUST
            IJS.REQ.DATE = SAVE.INV.JS.REC<M,1>
            IJS.REQ.AMT = SAVE.INV.JS.REC<M,2>
            IJS.REQ.QTY = SAVE.INV.JS.REC<M,3>
            MATWRITE INV.JS.REC ON INV.JOB.STATS,CONO:JSTAT.ID
         NEXT M
      END
      RESV.ACTION = 'A'
      GOSUB 600
      MATREADU JOCS.REC FROM JOB.CREDIT.STATS,CONO:JOB.NUM ELSE MAT JOCS.REC=''
      IF PREV.CRED.AUTH # JOB.CREDIT THEN
         AVAIL = ""
         BEGIN CASE
         CASE CUST.CREDIT = "E"
            AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - QUOTED.AMT
         CASE CUST.CREDIT = "CASH"
            AVAIL = CUST.AR.BAL + CUR.JOB.BAL + QUOTED.AMT
         END CASE
         JOCS.CRED.CODE = INSERT(JOCS.CRED.CODE,1,1,0,CUST.CREDIT)
         JOCS.CRED.AUTH = INSERT(JOCS.CRED.AUTH,1,1,0,JOB.CREDIT)
         JOCS.CUST.NO = INSERT(JOCS.CUST.NO,1,1,0,JOB.CUST)
         JOCS.CRED.AVAIL = INSERT(JOCS.CRED.AVAIL,1,1,0,AVAIL)
         JOCS.CRED.LIMIT = INSERT(JOCS.CRED.LIMIT,1,1,0,CUST.CR.LIMIT)
         JOCS.CHG.DATE = INSERT(JOCS.CHG.DATE,1,1,0,DATE())
         MATWRITE JOCS.REC ON JOB.CREDIT.STATS, CONO:JOB.NUM
      END ELSE
         RELEASE JOB.CREDIT.STATS,CONO:JOB.NUM
      END
      MATWRITE JOB.REC ON JOB , CONO : JOB.NUM
      IF CO.JES = "Y" THEN
         CALL JOB.BOOK.SUB (CONO,"3",JOB.NUM,OLD.EST,JOB.EST,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
      END
      MORE = 0
510*
   CASE REQUEST='CA' OR REQUEST='FI'
      MORE = 0
   CASE 1
      ERRMSG= "Invalid  Entry - Try Again!"
      GOSUB 91000
   END CASE
WHILE MORE DO REPEAT
GOTO 100
600*
RESV.LOC = 0
CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,JOB.NUM)
MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
FOR M = MCNT TO 1 STEP -1
   IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
      JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
      MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
         JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
         JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
         JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
         JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
         JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
         JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
         JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
         JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
         JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
      END
   END
NEXT M
RETURN
