*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.FNGD.RECV
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 03/20/86
* DESCRIPTION - This program update (JOB.FNGD) & (INV.WHSE)
*               & (INV.WHSE.LOC) & (JOB.STATS)
********************************************************************
**** INSERT FILES EQUETES
*COPY>JCS.CPYLIB>DAILY.FNGD.REC
*COPY>JCS.CPYLIB>JOB.FNGD
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>PMC.CPYLIB>COMPANY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.TRAN.HIST
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*
**** SETUP
*
DIM SAVE.IWH.REC(80)
MAT FILE.VARS = "" ; MAT EDIT.COM = "" ; MAT EDIT.COM.DRIVER = "" ; MAT COMP.REC = ""
MAT SAVE.IWH.REC = ""
*
**** SETUP SYSCOM
*
SYS.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'INVENTORY FILE IS MISSING' ; GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
END
OPEN '','DAILY.FNGD.REC' TO DAILY.FNGD ELSE
  ERRMSG = 'DAILY.FNGD.REC FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.FNGD' TO JOB.FNGD ELSE
  ERRMSG = 'JOB.FNGD FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.STATS' TO JOB.STATS ELSE
  ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERRMSG = 'INV.WHSE.LOC IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
END
OPEN '','INV.HIST' TO INV.HIST ELSE
  ERRMSG = 'INV.HIST IS MISSING'; GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'JOB IS MISSING'; GOTO 93000
END
OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE
  ERRMSG = 'JOB.STAT.CODE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.TRAN.HIST' TO INV.TRAN.HIST ELSE
  ERRMSG = 'INV.TRAN.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
  ERRMSG = 'PMC.SCREENS IS MISSING'; GOTO 93000
END
*
**** MAIN PROCESS
*
DATA = 1
GET.MON.FLG = 1
LOOP
  READNEXT KEY ELSE DATA = 0
WHILE DATA = 1 DO
  IF GET.MON.FLG = 1 THEN
    CONO = KEY[1,3]
    MATREAD JOB.CUTOFF.REC FROM CONTROL , CONO:"JOB.CUTOFF.NO" ELSE
      MAT JOB.CUTOFF.REC = ""
      J.CUTOFF.NUM = 0
    END
    GOSUB 10
    IF POSTING.MON = "END" THEN GOTO 99999
    GET.MON.FLG = 0
  END
  UPDATE.FLG = "N"
  MATREADU DFG.REC FROM DAILY.FNGD , KEY ELSE
    MAT DFG.REC = "" ; GOTO 111
  END
  NEW.FLG = 0
  MATREADU JFG.REC FROM JOB.FNGD , KEY ELSE
    MAT JFG.REC = ""
    NEW.FLG = 1
  END
  GOSUB 1000
111 REPEAT
GOTO 99999
*
**** GET POSTING MONTH
*
10*
ECD.ACTION = 1
ECD.SCRN.CNT = 1
ECD.SCRN.NAME = "GET.FISCAL.MONTH"
CALL SCRN.EDIT
ECD.SCRN.NO = 1
MAT SCV.REC = ""
ECD.ACTION = 2
CALL SCRN.EDIT
HEADING = "FINISHED GOODS RECEIPTS POSTING PROCESS"
CALL GET.FISCAL.MONTH(CONO,POSTING.MON,HEADING,"JCFISCAL",CURR.MON)
RETURN
*
**** UPDATE PROCESS
1000*
POST.OSJ = 0
MATREADU JOB.REC FROM JOB , CONO:DFG.JOB ELSE
  MAT JOB.REC = ""
  RELEASE JOB , CONO:DFG.JOB
  FND = 0
  IF NUM(DFG.JOB) THEN
    IF DFG.JOB < J.CUTOFF.NUM THEN FND = 1
  END ELSE
    JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
    FOR JF = 1 TO JC.CNT WHILE FND = 0
      PREFIX.LEN = LEN(J.CUTOFF.PREFIX<1,JF>)
      IF J.CUTOFF.PREFIX<1,JF> = DFG.JOB[1,PREFIX.LEN] THEN
        CHK.VALUE = DFG.JOB[PREFIX.LEN+1,LEN(DFG.JOB)-PREFIX.LEN]
        IF NUM(CHK.VALUE) THEN
          IF CHK.VALUE < J.CUTOFF.PRE.NO<1,JF> THEN FND = 1
        END
      END
    NEXT JF
  END
  IF FND = 1 THEN
    POST.OSJ = 1
  END ELSE
    RELEASE DAILY.FNGD, KEY
    DFG.STATUS<1,1> = "JOB RECORD IS MISSING" ; GOTO 3999
  END
END
BEGIN CASE
CASE JOB.STATUS<1,1> = 7
  DFG.STATUS<1,1> = "THIS JOB HAS BEEN PURGED." ; GOTO 3999
CASE JOB.STATUS<1,1> = 8
  DFG.STATUS<1,1> = "THIS JOB WAS PURGED" ; GOTO 3999
CASE JOB.STATUS<1,1> = 9
  DFG.STATUS<1,1> = "THIS JOB IS CANCELLED" ; GOTO 3999
CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # ""
  IF DFG.INIT = "" THEN
    DFG.STATUS<1,1> = "JOB IS NOT BOOKED, NOR IN PROCESS AND AUTHORIZATION REQURIED" ; GOTO 3999
  END ELSE
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DFG.INIT ELSE
      MAT JSI.REC =""
      DFG.STATUS<1,1> = "JOB IS NOT BOOKED, NOR IS PROCESS AND  AUTHORIZATION INVALID" ; GOTO 3999
    END
  END
END CASE
MATREADU JSTAT.REC FROM JOB.STATS , CONO:DFG.JOB ELSE
  MAT JSTAT.REC = ""
END
TODAY = DATE()
DFG.STATUS = ""
IF JSTAT.SHP.PROD # '' THEN
  LOCATE DFG.PROD IN JSTAT.SHP.PROD<1>,1 SETTING PFND ELSE
    DFG.STATUS<1,1> = "PRODUCT MISMATCH"
  END
  IF DFG.STATUS # '' THEN GOTO 3999
  LOCATE DFG.WHSE IN JSTAT.SHP.WHSE<1>,1 SETTING LFND ELSE
    DFG.STATUS<1,1> = "WAREHOUSE MISMATCH"
  END
  IF DFG.STATUS # '' THEN GOTO 3999
END
IF DFG.WHSE = "" THEN
  DFG.STATUS<1,1> = "WAREHOUSE CODES ARE MISSING "
  GOTO 3999
END
IF DFG.LOC = "" THEN
  DFG.STATUS<1,1> = "LOCATIONS CODES ARE MISSING"
  GOTO 3999
END
MATREADU INV.REC FROM INVENTORY, CONO : DFG.PROD ELSE
  RELEASE INVENTORY , CONO:DFG.PROD
  DFG.STATUS<1,1> = "INVALID PRODUCT" ; GOTO 3999
END
IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
  RELEASE INVENTORY , CONO:DFG.PROD
  DFG.STATUS<1,1> = "INVALID PRODUCT" ; GOTO 3999
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
  RELEASE INVENTORY, CONO:DFG.PROD
  DFG.STATUS<1,1> = "INVALID CATEGORY" ; GOTO 3999
END
MATREAD WHSE.REC FROM WAREHOUSE , CONO:DFG.WHSE ELSE
  DFG.STATUS<1,1> = "INVALID WAREHOUSE" ; GOTO 3999
END
IWH.ID = CONO:DFG.PROD:"!":DFG.WHSE
IH.ID = CONO:DFG.PROD
MATREADU IWH.REC FROM INV.WHSE , IWH.ID ELSE
  RELEASE INV.WHSE, IWH.ID
  DFG.STATUS<1,1> = " INVALID INV.WHSE RECORD" ; GOTO 3999
END
MATREADU IH.REC FROM INV.HIST, IH.ID ELSE
  MAT IH.REC = ''
END
ITH.PTR = 0; ITH.ID = CONO:DFG.PROD:"!":DFG.WHSE:"!":TODAY
MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
  ITH.PTR = 1; MAT ITH.REC = ''
END
IF ITH.PTR = 0 THEN ITH.PTR = COUNT(ITH.TYPE,VM) + (ITH.TYPE # '') + 1
IF IWH.ON.HAND + DFG.QTY<1,1> < IWH.RESV THEN
  RELEASE INV.WHSE, IWH.ID
  DFG.STATUS<1,1> = "NOT ENOUGH QUANTITY" ; GOTO 3999
END
JP.CNT = COUNT(JSTAT.SHP.PROD, VM) + (JSTAT.SHP.PROD # "")
JPFND = 0
FOR JSTAT.FND = 1 TO JP.CNT UNTIL JPFND
  IF DFG.PROD = JSTAT.SHP.PROD<1,JSTAT.FND> AND DFG.WHSE = JSTAT.SHP.WHSE<1,JSTAT.FND> THEN
    JPFND = JSTAT.FND
  END
NEXT JSTAT.FND
IF JPFND = 0 THEN
  JPFND = JP.CNT + 1
*        JSTAT.SHP.PROD<1,JPFND> = DFG.PROD
*        JSTAT.SHP.WHSE<1,JPFND> = DFG.WHSE
*        JSTAT.SHP.TRANS<1,JPFND> = KEY[4,99]
END ELSE
*        LOCATE KEY[4,99] IN JSTAT.SHP.TRANS<1,JPFND>,1 BY "AR" SETTING POS ELSE
*           INS KEY[4,99] BEFORE JSTAT.SHP.TRANS<1,JPFND,POS>
*        END
END
GOSUB 8000
L1 = 0
LCNT = COUNT(DFG.LOC, VM) + 1
FOR L = LCNT TO 1 STEP -1
  IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
  IF INV.SBR + 0 = 0 THEN INV.SBR = 1
  RECV.PRICE = DFG.UN.PRICE
  RECV.PRICE = INT((RECV.PRICE / (INV.SBR / 1000))+.5)
  RECV.QTY = DFG.QTY<1,L>
  IF DFG.QTY<1,L> + 0 = 0 THEN GOTO 1999
  IF TRIM(DFG.LOC<1,L>) = "" THEN GOTO 1999
  IF TRIM(DFG.R.S.ID<1,L>) # '' THEN
    RLOC = 0
    LOC.CNT = COUNT(IWH.LOC,VM) + (IWH.LOC # "")
    FOR LN = 1 TO LOC.CNT WHILE RLOC = 0
      MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DFG.PROD:"!":DFG.WHSE:"!":IWH.LOC<1,LN> ELSE
        MAT IWLO.REC = ""
      END
      LOCATE DFG.R.S.ID<1,L> IN IWLO.R.S.ID<1>,1 SETTING FND ELSE FND = 0
      BEGIN CASE
      CASE FND = 0
      CASE IWH.LOC<1,LN> = DFG.LOC<1,L>
      CASE 1
        DFG.STATUS<1,L> = "WRONG LOCATION FOR ROLL/SKID"
        RLOC = -1
      END CASE
    NEXT LN
    IF DFG.STATUS<1,L> # "" THEN GOTO 1999
    CHECK.LOC = ""; CHECK.R.S.ID = ""; LC.CNT = ""
    MAT SAVE.IWH.REC = MAT IWH.REC
    WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # '')
    FOR I = 1 TO WHSE.CNT
      IF INV.WHSE.CODE<1,I> # DFG.WHSE THEN
        MATREAD IWH.REC FROM INV.WHSE, CONO : DFG.PROD : '!' : INV.WHSE.CODE<1,I> ELSE MAT IWH.REC = ''
        CHECK.LOC<I> = IWH.LOC
        LC.CNT<I> = COUNT(IWH.LOC,VM) + (IWH.LOC # '')
        CHECK.R.S.ID<I> = ""
        FOR LLS = 1 TO LC.CNT<I>
          MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DFG.PROD:"!":INV.WHSE.CODE<1,I>:"!":IWH.LOC<1,LLS> ELSE MAT IWLO.REC = ""
          IF CHECK.R.S.ID<I> = "" THEN
            CHECK.R.S.ID<I> = IWLO.R.S.ID
          END ELSE
            IF IWLO.R.S.ID # "" THEN
              CHECK.R.S.ID<I> = CHECK.R.S.ID<I>:VM:IWLO.R.S.ID
            END
          END
        NEXT LLS
      END
    NEXT I
    MAT IWH.REC = MAT SAVE.IWH.REC
    FND = 0
    FOR W = 1 TO WHSE.CNT UNTIL FND
      LOCATE DFG.R.S.ID<1,L> IN CHECK.R.S.ID<W>,1 SETTING FND ELSE FND = 0
      IF FND THEN
        DFG.STATUS<1,L> = "WRONG WAREHOUSE FOR ROLL/SKID"
      END
    NEXT W
    IF DFG.STATUS<1,L> # "" THEN GOTO 1999
  END
  LOCATE DFG.LOC<1,L> IN IWH.LOC<1>,1 SETTING LLOC ELSE
    LLOC = COUNT(IWH.LOC,VM) + (IWH.LOC # '') + 1
    IWH.LOC<1,LLOC> = DFG.LOC<1,L>
  END
  IWLO.ID = IWH.ID:"!":IWH.LOC<1,LLOC>
  MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
    MAT IWLO.REC = ""
  END
  IF TRIM(DFG.R.S.ID<1,L>) # '' THEN
    LOCATE DFG.R.S.ID<1,L> IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE
      RLOC = COUNT(IWLO.R.S.ID,VM) + (IWLO.R.S.ID # '') + 1
      IWLO.R.S.ID<1,RLOC> = DFG.R.S.ID<1,L>
      IWLO.ORIG.WT<1,RLOC> = 0
      IWLO.CURR.WT<1,RLOC> = 0
    END
    IWLO.LA.PO<1,RLOC> = TODAY
    IWLO.LA.USED<1,RLOC> = ''
  END
  IF IWLO.LOC.ON.HAND + DFG.QTY<1,L> < 0 THEN
    RELEASE INV.WHSE.LOC , IWLO.ID
    DFG.STATUS<1,L> = "NOT ENOUGH QUANTITY"; GOTO 1999
  END
  IF TRIM(DFG.R.S.ID<1,L>) # '' THEN
    IF IWLO.CURR.WT<1,RLOC> + DFG.QTY<1,L> < 0 THEN
      RELEASE INV.WHSE.LOC , IWLO.ID
      DFG.STATUS<1,L> = "NOT ENOUGH QUANTITY" ; GOTO 1999
    END
    IWLO.ORIG.WT<1,RLOC> = IWLO.ORIG.WT<1,RLOC> + DFG.QTY<1,L>
    IF IWLO.ORIG.WT<1,RLOC> = 0 THEN
*            IWLO.R.S.ID = DELETE(IWLO.R.S.ID,1,RLOC,0)
*            IWLO.ORIG.WT = DELETE(IWLO.ORIG.WT,1,RLOC,0)
*            IWLO.CURR.WT = DELETE(IWLO.CURR.WT,1,RLOC,0)
*            IWLO.ORIG.DIAM = DELETE(IWLO.ORIG.DIAM,1,RLOC,0)
*            IWLO.CURR.DIAM = DELETE(IWLO.CURR.DIAM,1,RLOC,0)
*            IWLO.ORIG.SHEET = DELETE(IWLO.ORIG.SHEET,1,RLOC,0)
*            IWLO.CURR.SHEET = DELETE(IWLO.CURR.SHEET,1,RLOC,0)
*            IWLO.LA.PO = DELETE(IWLO.LA.PO,1,RLOC,0)
*            IWLO.LA.USED = DELETE(IWLO.LA.USED,1,RLOC,0)
    END ELSE
      IWLO.CURR.WT<1,RLOC> = IWLO.CURR.WT<1,RLOC> + DFG.QTY<1,L>
      IF CATG.TYPE = 'L' THEN
        IWLO.ORIG.DIAM<1,RLOC> = IWLO.ORIG.DIAM<1,RLOC> + DFG.DIAM<1,L>
        IWLO.CURR.DIAM<1,RLOC> = IWLO.CURR.DIAM<1,RLOC> + DFG.DIAM<1,L>
      END ELSE
        IWLO.ORIG.SHEET<1,RLOC> = IWLO.ORIG.SHEET<1,RLOC> + DFG.SHEET<1,L>
        IWLO.CURR.SHEET<1,RLOC> = IWLO.CURR.SHEET<1,RLOC> + DFG.SHEET<1,L>
      END
    END
  END
  IWLO.LOC.ON.HAND = IWLO.LOC.ON.HAND + DFG.QTY<1,L>
  ITH.TYPE<1,ITH.PTR> = 'R'
  ITH.LOC<1,ITH.PTR> = DFG.LOC<1,L>
  ITH.TRAN<1,ITH.PTR> = KEY[4,99]
  ITH.JOB<1,ITH.PTR> = DFG.JOB
  ITH.R.S<1,ITH.PTR> = DFG.R.S.ID<1,L>
  ITH.QTY<1,ITH.PTR> = DFG.QTY<1,L>
  IF DFG.QTY<1,L> < "0" THEN ROND = -.5 ELSE ROND = .5
  ITH.COST<1,ITH.PTR> = INT((RECV.PRICE/10000) * ((DFG.QTY<1,L>/10) / (INV.COST.WT/100)) + ROND)
  ITH.PTR = ITH.PTR + 1
  IF DFG.MAIN.SEQ # "" THEN
    PO.CODE = DFG.MAIN.SEQ
  END ELSE
    PO.CODE = KEY[4,99]
  END
  PO.VEND.NO = DFG.JOB
*COPY>ICSBP>FIFO.REC.REV.SUB
  IF ERRMSG # "" THEN
    RELEASE INV.WHSE.LOC, IWLO.ID
    DFG.STATUS<1,L> = ERRMSG ; GOTO 1999
  END
  IWH.ON.HAND = IWH.ON.HAND + RECV.QTY
  IWH.MTD.RECV = IWH.MTD.RECV + RECV.QTY
  IWH.YTD.RECV = IWH.YTD.RECV + RECV.QTY
  IWH.MTD.RECV.AMT = IWH.MTD.RECV.AMT + TOT.PRICE
  IWH.YTD.RECV.AMT = IWH.YTD.RECV.AMT + TOT.PRICE
  IH.CNT = DCOUNT(IH.DATE,VM)
  IDATE = DATE()
  LOCATE IDATE IN IH.DATE<1> SETTING PP ELSE NULL
  BEGIN CASE
  CASE PP = IH.CNT
    IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> + RECV.QTY
  CASE PP > IH.CNT
    IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> + RECV.QTY
    IH.DATE<1,PP> = IDATE
  CASE 1
    IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> + RECV.QTY
  END CASE
  IWH.LA.PUR = TODAY
  MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":IWH.LOC<1,LLOC>
  IF NEW.FLG = 1 AND JFG.PROD = "" THEN
    JFG.JOB = DFG.JOB
    JFG.DATE = DFG.DATE
    JFG.PROD = DFG.PROD
    JFG.WHSE = DFG.WHSE
    JFG.UN.PRICE = DFG.UN.PRICE
  END
  UPDATE.FLG = "Y"
  JL.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # "")
  JLFND = 0
  FOR JSTAT.LFND = 1 TO JL.CNT UNTIL JLFND
    IF DFG.LOC<1,L> = JSTAT.SHP.LOC<1,JSTAT.LFND> AND DFG.R.S.ID<1,L> = JSTAT.SHP.R.S.ID<1,JSTAT.LFND> THEN
      JLFND = JSTAT.LFND
    END
  NEXT JSTAT.LFND
  IF JLFND = 0 THEN
    JLFND = JL.CNT + 1
    JSTAT.SHP.PROD<1,JLFND> = DFG.PROD
    JSTAT.SHP.WHSE<1,JLFND> = DFG.WHSE
    JSTAT.SHP.LOC<1,JLFND> = DFG.LOC<1,L>
    JSTAT.SHP.R.S.ID<1,JLFND> = DFG.R.S.ID<1,L>
    JSTAT.SHP.QTY<1,JLFND> = DFG.QTY<1,L>
    JSTAT.SHP.TRANS<1,JLFND> = KEY[4,99]
  END ELSE
    LOCATE KEY[4,99] IN JSTAT.SHP.TRANS<1,JLFND>,1 BY "AR" SETTING POS ELSE
      INS KEY[4,99] BEFORE JSTAT.SHP.TRANS<1,JLFND,POS>
    END
    JSTAT.SHP.QTY<1,JLFND> = DFG.QTY<1,L> + JSTAT.SHP.QTY<1,JLFND>
  END
*        JSTAT.SHP.QTY<1,JLFND> = JSTAT.SHP.QTY<1,JLFND> + DFG.QTY<1,L>
*        JOB.QTY<1,2> = JOB.QTY<1,2> + INT(DFG.QTY<1,L> / 100)
  JOB.QTY<1,2> = JOB.QTY<1,2> + INT(DFG.SHEET<1,L> / ICR.MT2)
  GOSUB 6000 ; GOSUB 7000
1999 NEXT L
3999 IF DFG.STATUS = "" THEN
  DELETE DAILY.FNGD , KEY
END ELSE
  MATWRITE DFG.REC ON DAILY.FNGD, KEY
END
IF UPDATE.FLG = "Y" THEN
  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
  MATWRITE IH.REC ON INV.HIST, IH.ID
  INV.LA.PUR = TODAY
  MATWRITE INV.REC ON INVENTORY, CONO:DFG.PROD
  MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
  IF POST.OSJ # 1 THEN
    MATWRITE JOB.REC ON JOB , CONO: DFG.JOB
    MATWRITE JFG.REC ON JOB.FNGD , KEY
    MATWRITE JSTAT.REC ON JOB.STATS , CONO:DFG.JOB
  END
END
RELEASE
RETURN
*
**** UPDATE JOB.FNGD FILE
*
6000*
IF NEW.FLG = 1 THEN
  L1 = L1 + 1
  JFG.LOC<1,L1> = DFG.LOC<1,L>
  JFG.R.S.ID<1,L1> = DFG.R.S.ID<1,L>
  JFG.QTY<1,L1> = DFG.QTY<1,L>
  JFG.DIAM<1,L1> = DFG.DIAM<1,L>
  JFG.SHEET<1,L1> = DFG.SHEET<1,L>
  JFG.MON<1,L1> = POSTING.MON
END ELSE
  LOFND = COUNT(JFG.LOC, VM) + (JFG.LOC # "") + 1
  JFG.LOC<1,LOFND> = DFG.LOC<1,L>
  JFG.R.S.ID<1,LOFND> = DFG.R.S.ID<1,L>
  JFG.QTY<1,LOFND> = DFG.QTY<1,L>
  JFG.DIAM<1,LOFND> = DFG.DIAM<1,L>
  JFG.SHEET<1,LOFND> = DFG.SHEET<1,L>
  JFG.MON<1,LOFND> = POSTING.MON
END
RETURN
*
**** DELETE UPDATE PRODUCT FROM DAILY.FNGD
*
7000*
DFG.LOC = DELETE(DFG.LOC,1,L,0)
DFG.R.S.ID = DELETE(DFG.R.S.ID,1,L,0)
DFG.QTY = DELETE(DFG.QTY,1,L,0)
DFG.DIAM = DELETE(DFG.DIAM,1,L,0)
DFG.SHEET = DELETE(DFG.SHEET,1,L,0)
DFG.STATUS = DELETE(DFG.STATUS,1,L,0)
RETURN
*
**** SETUP INVENTORY CONVERSION
*
8000*
BEGIN CASE
CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
  ICR.DV1 = INV.M.WT ; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
  ICR.DV1 = INV.PAP.WIDTH/100 ; ICR.MT1 = 10 ; ICR.DV2 = 1 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
  ICR.DV1 = INV.PAP.WIDTH/100 ; ICR.MT1 = 100 ; ICR.DV2 = 12 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = INV.UNIT<1,3>
  ICR.DV1 = 10 ; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 100
CASE 1
  ICR.DV1 = 10 ; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 100
END CASE
RETURN
*** ERROR ROUTINE
91000 ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
**** END OF PROGRAM
99999 END
