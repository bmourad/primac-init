*COPY>CPYLIB>COM1
**********************************************************
* REVISION    - [08.0]
* COPYRIGHT   - 1982 by C.B.A    (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - TIME.MAINT
* BY          - JIHAD YAMOUT, C.BA
* DATE        - 02/15/84
* DESCRIPTION -
* COMMENT     - IF JOB.STATUS =5 "REOPENED" DON'T ASK FOR
* AUTHORIZATION. TASK #12907 (RRG)
*T22713 diane 05/21/1998 * FIX ASCII DISPLAY OF EPS MSG
*T23278 markt 09/29/1998 * Add divisional security.
*                          Restrict entry to jobs within
*                          a single division; validate that
*                          division against the user's security.
*T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.TIME
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>JCS.CPYLIB>FACTOR
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>TCC
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
  MAT FILE.VARS=''
*************************************
  OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS FILE IS MISSING'; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG='JOB.TIME FILE IS MISSING'; GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING'; GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING'; GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING'; GOTO 93000
  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG='OPERATION FILE IS MISSING'; GOTO 93000
  OPEN '','DAILY.TIME' TO DAILY.TIME ELSE ERRMSG='DAILY.TIME FILE IS MISSING'; GOTO 93000
  OPEN '','FACTOR' TO FACTOR ELSE ERRMSG='FACTOR FILE IS MISSING'; GOTO 93000
  OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='EMPLOYEE FILE IS MISSING'; GOTO 93000
  OPEN '','EMPLOYEE.XREF' TO EMPLOYEE.XREF ELSE ERRMSG='EMPLOYEE.XREF FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
  OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG = 'SPOILAGE.CODES FILE IS MISSING'; GOTO 93000
*-- GET COMPANY
  MAT COMP.REC='' ; CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO='END' THEN GOTO 99999
  IF CO.PRS = 'E' THEN
    IF PC.PORT.TYPE = 'termulator' OR PC.PORT.TSEL = 'termulator' THEN
      GUIFORM = 'GOTONE'
      ERRMSG = 'TIME ENTRY FEATURE OF JCS IS INHIBITED WHEN YOUR COMPANY'
      ERRMSG = ERRMSG:VM:'ELECTS THE ENHANCED PAYROLL SYSTEM'
      GOSUB 91000
      GUIFORM = ''
    END ELSE
      PRINT @(0,2):CS
      PRINT @(13,7):"**************************************************"
      PRINT @(13,8):"**************************************************"
      PRINT @(13,9):"*                                                *"
      PRINT @(13,10):"*     TIME ENTRY FEATURE OF JCS IS INHIBITED     *"
      PRINT @(13,11):"*            WHEN YOUR COMPANY ELECTS            *"
      PRINT @(13,12):"*          THE ENHANCED PAYROLL SYSTEM           *"
      PRINT @(13,13):"*                                                *"
      PRINT @(13,14):"**************************************************"
      PRINT @(13,15):"**************************************************":
*         P_X  = 13 ; P_Y = 6 ; P_VALUE = "" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =7 ; P_VALUE ="**************************************************" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =8 ; P_VALUE ="**************************************************" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =9 ; P_VALUE ="* *" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =10 ; P_VALUE ="* TIME ENTRY FEATURE OF JCS IS INHIBITED *" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =11 ; P_VALUE ="* WHEN YOUR COMPANY ELECTS *" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =12 ; P_VALUE ="* THE ENHANCED PAYROLL SYSTEM *" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =13 ; P_VALUE ="* *" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =14 ; P_VALUE ="**************************************************" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*         P_X  =13 ; P_Y =15 ; P_VALUE ="**************************************************" ; P_OPT = "CL"
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      INPUT SFC:
    END
    GO 99999
  END
*
*-- GET ALL OUTSIDE JOB RANGE
  MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:'JOB.CUTOFF.NO' ELSE
    MAT JOB.CUTOFF.REC=''
    J.CUTOFF.NUM=0
  END
  DLB.OSJ.FLG=''
* INITIALIZATION
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT=1
  ECD.SCRN.NAME<1>='TIME.MAINT'
  ECD.SCRN.NO= 1
  ECD.ACTION=1;CALL SCRN.EDIT
  PAGE.SIZE=6 ; BEGIN.PAGE = 7 ; LINE.SPACE = 2
  UNKNOWN = STR('?',30)
*      MAT EDIT.COM='' ; TYP = 0 ; CALL EDIT.SUB
  FILL = '#'
  LABOR.DATE = ""
100*
  RELEASE   ;* T26126
  TEST.REC = ""
  OLD.START.LINE = 0 ; LINES = 0 ; TOTAL.HRS = 0 ; DIFF.HRS = 0
  MAT GEN.XREF.REC = ''
  MAT JSI.REC = ''
  ERRMSG='' ; ACTION = ''; LINE.DESC = '';LINE.CUST = ''
  ONLY.VALID.DIVISION = '' ; * T23278
  GXR.CO=CONO
  GXR.HEADING<1,2>='DESCRIPTION'
  GXR.ATT<1,1>=0;GXR.ATT<1,2> = 1;GXR.LEN<1,1> = 5;GXR.LEN<1,2> = 30
* MAIN PROCESSING
  MAT JOB.REC='' ;MAT DIV.REC = '';MAT DEPT.REC = ''
  MAT CCTR.REC = '';MAT OPER.REC = ''; MAT FCTR.REC = ''
  MAT DLB.REC = '';MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
  EMP.CODE = ""; ENT.DATE = ""; SHIFT.CODE = ""
* NEW.DLB="N"
  FOR REQUEST=1 TO 3
    ON REQUEST GOSUB 600,700,800
    IF ECD.RET.VALUE="END" THEN
      IF REQUEST=1 THEN GOTO 99999
      GOTO 100
    END
  NEXT REQUEST
  NEW.DLB="N"
  DLB.KEY = EMP.CODE:"*":ENT.DATE:"*":SHIFT.CODE
  OLD.KEY = DLB.KEY
  NEW.KEY = DLB.KEY
*-- READ DAILY TIME RECORD
  * T26126 v
  MATREADU DLB.REC FROM DAILY.TIME , CONO:DLB.KEY LOCKED
    ERRMSG = 'TIME record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 100 
  END ELSE
  * T26126 ^
    MAT DLB.REC=''
    NEW.DLB="Y"
    ACTION="A"
    LOOP
      LN=LINES + 1
      OLD.LINES=LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO REPEAT
    LN=LINES
    GOSUB 11000
  END
  IF ACTION='' THEN
    LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
    LN=1
    GOSUB 11000 ; GOSUB 8100
    ONLY.VALID.DIVISION = DLB.DIV<1,1> ; * T23278
  END
  MORE=1
  LOOP
    ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""; ECD.ACTION = 4; CALL SCRN.EDIT
    ACTION=ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION='E' OR ACTION = 'END'
        MORE=0
      CASE NUM(ACTION)
        ACTION = INT(ACTION)
        IF ACTION > 0 AND ACTION < 4 THEN
          ON ACTION GOSUB 600,700,800
        END
      CASE ACTION='A'
        LOOP
          LN=LINES + 1
          OLD.LINES=LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO REPEAT
        LN=LINES
        GOSUB 11000
      CASE ACTION='C'
        GOSUB 9000
        IF LN.NO THEN
          LN=LN.NO
          SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE);GOSUB 1020
        END
        GOSUB 11000
      CASE ACTION='D'
        GOSUB 9000
        IF LN.NO THEN
          LN=LN.NO
          DLB.SEQ=DELETE(DLB.SEQ,1,LN,0)
          DLB.JOB=DELETE(DLB.JOB,1,LN,0)
          DLB.DIV=DELETE(DLB.DIV,1,LN,0)
          DLB.DEPT=DELETE(DLB.DEPT,1,LN,0)
          DLB.TYPE=DELETE(DLB.TYPE,1,LN,0)
          DLB.CCTR=DELETE(DLB.CCTR,1,LN,0)
          DLB.OPER=DELETE(DLB.OPER,1,LN,0)
          DLB.FCTR=DELETE(DLB.FCTR,1,LN,0)
          DLB.HRS.ST=DELETE(DLB.HRS.ST,1,LN,0)
          DLB.HRS.EN=DELETE(DLB.HRS.EN,1,LN,0)
          DLB.IMP=DELETE(DLB.IMP,1,LN,0)
          DLB.CNCR=DELETE(DLB.CNCR,1,LN,0)
          DLB.COST=DELETE(DLB.COST,1,LN,0)
          DLB.MARKUP=DELETE(DLB.MARKUP,1,LN,0)
          DLB.DESC=DELETE(DLB.DESC,1,LN,0)
          DLB.OSJ.FLG=DELETE(DLB.OSJ.FLG,1,LN,0)
          DLB.TIME.ST=DELETE(DLB.TIME.ST,1,LN,0)
          DLB.TIME.END=DELETE(DLB.TIME.END,1,LN,0)
          DLB.INIT=DELETE(DLB.INIT,1,LN,0)
          DLB.SPOIL.CODE= DELETE(DLB.SPOIL.CODE,1,LN,0)
          LINE.DESC=DELETE(LINE.DESC,LN,0,0)
          LINE.CUST=DELETE(LINE.CUST,LN,0,0)
          LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
          IF LN > 1 AND LN > LINES THEN LN=LN - 1
          IF LN < 1 THEN LN=1
          OLD.START.LINE=0
        END
        GOSUB 11000 ; GOSUB 8100
      CASE ACTION='S'
        LN=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN=1
        GOSUB 11000
      * T25978 v
      CASE ACTION = 'SR'
        LN=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 11000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 11000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 11000
      * T25978 ^
      CASE ACTION='F'
        IF DLB.SEQ = "" THEN
          DELETE DAILY.TIME ,CONO:EMP.CODE:'*':ENT.DATE:'*':SHIFT.CODE
        END ELSE
          CN.FLG = 0
          DLB.PRT.DATE = ""
          FOR FX = 1 TO LINES
            IF DLB.SEQ<1,FX> = "N" THEN
              IF CN.FLG = 0 THEN
                READU TIME.ENT.SEQ FROM CONTROL, CONO: "DAILY.TIME" ELSE TIME.ENT.SEQ = 10001
                CN.FLG = 1
              END
              LOOP
                READ CKX FROM JOB.TIME , CONO:TIME.ENT.SEQ ELSE CKX = ""
              WHILE CKX # "" DO
                TIME.ENT.SEQ = TIME.ENT.SEQ + 1
              REPEAT
              IF CN.FLG = 1 THEN
                ST.SEQ = TIME.ENT.SEQ
                CN.FLG = 2
              END
              DLB.SEQ<1,FX> = TIME.ENT.SEQ
              TIME.ENT.SEQ = TIME.ENT.SEQ + 1
*CSF 25253 v
              IF TIME.ENT.SEQ > 999999 THEN TIME.ENT.SEQ = 10001
*CSF 25253 ^
            END
          NEXT FX
          IF CN.FLG = 2 THEN
            EN.SEQ = TIME.ENT.SEQ - 1
            WRITE TIME.ENT.SEQ ON CONTROL , CONO:"DAILY.TIME"
            ERRMSG = "Please Note Down Starting Sequence # (":ST.SEQ:") Ending Sequence # (":EN.SEQ:")" ; GOSUB 91000
          END
          IF OLD.KEY # NEW.KEY THEN
            DELETE DAILY.TIME,CONO:OLD.KEY
            MATWRITE DLB.REC ON DAILY.TIME ,CONO:NEW.KEY
          END ELSE
            MATWRITE DLB.REC ON DAILY.TIME ,CONO:OLD.KEY
          END
        END
        MORE=0
    END CASE
120*
  WHILE MORE DO REPEAT
  GOTO 100
*-- ENTER EMPOLYEE
600*
  SCV.REC(5)<1>=EMP.CODE
  ECD.NUM=5
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE='END'
      GOTO 699
    CASE ECD.RET.VALUE=''
      ECD.NUM=6 ; ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE='' OR ECD.RET.VALUE = 'END' THEN GOTO 600
      GXR.XREF=EMPLOYEE.XREF ;GXR.FILE = EMPLOYEE;GXR.LOC = 1;GXR.TOP.LINE = 'EMPLOYEE XREF SEARCH';GXR.HEADING<1,1> = 'EMP #'
      GXR.ATT<1,2>=4; GXR.ATT<1,3> = 5 ; GXR.HEADING<1,2> = 'LAST NAME';GXR.HEADING<1,3> = 'FIRST NAME'; GXR.LEN<1,3> = 30
      GXR.ID = ""
      GXR.SRCH.ID=ECD.RET.VALUE
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      IF GXR.ID # "X" THEN
        ECD.ACTION=2;CALL SCRN.EDIT
      END
      IF GXR.ID='' THEN GOTO 600
      ECD.RET.VALUE = GXR.ID
      ECD.NUM = 5
      SCV.REC(ECD.NUM)<ECD.SCRN.NO>=ECD.RET.VALUE
      ECD.ACTION=5;CALL SCRN.EDIT
  END CASE
  MATREAD EMP.REC FROM EMPLOYEE , CONO:ECD.RET.VALUE ELSE
    ERRMSG='EMPLOYEE (':ECD.RET.VALUE:') NOT ON FILE'
    GOSUB 91000;GOTO 600
  END
  SCV.REC(6)<1> = EMP.LAST.NAME:' ':EMP.FRST.NAME
  ECD.NUM=6;ECD.ACTION=5;CALL SCRN.EDIT
  IF EMP.CODE # "" THEN
    GOSUB 900
    IF TEST.REC # "" THEN
      SCV.REC(5)<1> = EMP.CODE;TEST.REC = "" ; GOTO 600
    END
  END
  EMP.CODE = ECD.RET.VALUE
699*
  RETURN
*-- ENTER DATE
700*
  ECD.NUM=7
  IF LABOR.DATE = "" THEN
*ECD.DEFAULT = OCONV(DATE() - 1,"D2/")
    ECD.DEFAULT = DATE() - 1
  END ELSE
*ECD.DEFAULT = OCONV(LABOR.DATE,"D2/")
    ECD.DEFAULT = LABOR.DATE
  END
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    IF ECD.RET.VALUE > EMP.TERM.DATE AND EMP.REHR.DATE - EMP.TERM.DATE < 0 THEN
      ERRMSG="WARNING : Employee ":EMP.CODE:" has been terminated on ":OCONV(EMP.TERM.DATE,"D2/"):".";GOSUB 91000
    END
    IF ACTION = 2 THEN
      GOSUB 900
      IF TEST.REC # "" THEN
        SCV.REC(7)<1> = ENT.DATE;TEST.REC = "" ; GOTO 700
      END
    END
    ENT.DATE=ECD.RET.VALUE
    LABOR.DATE=ECD.RET.VALUE
  END
  RETURN
*-- ENTER SHIFT
800*
  ECD.NUM = 8;ECD.DEFAULT = EMP.SHIFT;ECD.ACTION = 4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN
    IF SHIFT.CODE # "" THEN
      GOSUB 900
      IF TEST.REC # "" THEN
        SCV.REC(8)<1> = SHIFT.CODE;TEST.REC = "" ; GOTO 800
      END
    END
    SHIFT.CODE = ECD.RET.VALUE
  END
  RETURN
*-- CHECK IF FIELD 1,2,3 CHANGED
900*
  BEGIN CASE
    CASE ACTION = 1
      TEST.KEY = ECD.RET.VALUE:"*":ENT.DATE:"*":SHIFT.CODE
    CASE ACTION = 2
      TEST.KEY = EMP.CODE:"*":ECD.RET.VALUE:"*":SHIFT.CODE
    CASE ACTION = 3
      TEST.KEY = EMP.CODE:"*":ENT.DATE:"*":ECD.RET.VALUE
    CASE 1
      ERRMSG = "Bad option try again" ; GOSUB 91000 ; GOTO 999
  END CASE
  IF TEST.KEY # NEW.KEY THEN
    READU TEST.REC FROM DAILY.TIME,CONO:TEST.KEY ELSE TEST.REC = ""
    IF TEST.REC # "" THEN
      ERRMSG = "This record is already on file for the employee above"
      RELEASE DAILY.TIME,CONO:TEST.KEY
      GOSUB 91000
    END ELSE
      IF NEW.KEY # OLD.KEY THEN
        RELEASE DAILY.TIME,NEW.KEY
      END
      NEW.KEY = TEST.KEY
    END
  END
999*
  RETURN
*-- ENTER LINE INFORMATION
1000*
  GOSUB 11000
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1010*
  X=4; Y = SLN; TYPE = 1; JUSTIFY = 'L'
  MAXL=6; O.R = 'O'
  DEFAULT="N"
  HMSG='ENTER (N) FOR NEW SEQUENCE NUMBER'
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE='END'
      OLD.START.LINE = 0; GOTO 1999
    CASE VALUE='N'
      DLB.SEQ<1,LN> = VALUE
    CASE 1
      GOTO 1010
  END CASE
1020*
  X=11 ; Y = SLN ; MAXL = 8 ; TYP = 1 ; JUSTIFY = 'L'
  IF DLB.JOB<1,1>='' THEN
    O.R='R'
  END ELSE
    O.R='O'
    IF DLB.JOB<1,LN> # "" THEN
      DEFAULT=DLB.JOB<1,LN>
    END ELSE
      DEFAULT=DLB.JOB<1,LN - 1>
    END
  END
  CALL EDIT.SUB
  SAVE.JOB=""
  IF VALUE='END' THEN
    IF ACTION = "A" THEN
      DLB.SEQ=DELETE(DLB.SEQ,1,LN,0)
      DLB.JOB=DELETE(DLB.JOB,1,LN,0)
      DLB.TYPE=DELETE(DLB.TYPE,1,LN,0)
      DLB.DIV=DELETE(DLB.DIV,1,LN,0)
      DLB.DEPT=DELETE(DLB.DEPT,1,LN,0)
      DLB.CCTR=DELETE(DLB.CCTR,1,LN,0)
      DLB.OPER=DELETE(DLB.OPER,1,LN,0)
      DLB.FCTR=DELETE(DLB.FCTR,1,LN,0)
      DLB.HRS.ST=DELETE(DLB.HRS.ST,1,LN,0)
      DLB.HRS.EN=DELETE(DLB.HRS.EN,1,LN,0)
      DLB.IMP=DELETE(DLB.IMP,1,LN,0)
      DLB.CNCR=DELETE(DLB.CNCR,1,LN,0)
      DLB.COST=DELETE(DLB.COST,1,LN,0)
      DLB.MARKUP=DELETE(DLB.MARKUP,1,LN,0)
      DLB.DESC=DELETE(DLB.DESC,1,LN,0)
      DLB.OSJ.FLG=DELETE(DLB.OSJ.FLG,1,LN,0)
      DLB.TIME.ST=DELETE(DLB.TIME.ST,1,LN,0)
      DLB.INIT=DELETE(DLB.INIT,1,LN,0)
      DLB.TIME.END=DELETE(DLB.TIME.END,1,LN,0)
      DLB.SPOIL.CODE = DELETE(DLB.SPOIL.CODE,1,LN,0)
      LINE.DESC=DELETE(LINE.DESC,LN,0,0)
      LINE.CUST=DELETE(LINE.CUST,LN,0,0)
    END
    OLD.START.LINE = 0; GOTO 1999
  END
  DLB.OSJ.FLG<1,LN>=""
  MATREAD JOB.REC FROM JOB , CONO:VALUE ELSE
    MAT JOB.REC=''
    FND=0
    IF NUM(VALUE) THEN
      IF VALUE < J.CUTOFF.NUM THEN FND=1
    END ELSE
      JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # '')
      FOR L=1 TO JC.CNT WHILE FND = 0
        PRFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
        IF J.CUTOFF.PREFIX<1,L>=VALUE[1,PRFX.LEN] THEN
          CHK.VALUE=VALUE[PRFX.LEN+1,LEN(VALUE)-PRFX.LEN]
          IF NUM(CHK.VALUE) THEN
            IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
          END
        END
      NEXT L
    END
    IF FND=1 THEN
      DLB.OSJ.FLG<1,LN>='Y'
      JOB.DESC<1,1>='*** OUTSIDE JOB ***'
    END ELSE
      ERRMSG='JOB NUMBER (':VALUE:') NOT ON FILE'
      GOSUB 91000 ; GOTO 1020
    END
  END
*****T23278 v
  IF ONLY.VALID.DIVISION = '' THEN
    DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
    CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
    IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 1020
    END
    ONLY.VALID.DIVISION = JOB.DIV
  END ELSE
    IF JOB.DIV # ONLY.VALID.DIVISION THEN
      ERRMSG = "JOB DIVISION MUST MATCH DIVISION OF PREVIOUSLY ENTERED JOB(S)."
      GOSUB 91000; GOTO 1020
    END
  END
*****T23278 ^
  SAVE.JOB=VALUE
  BEGIN CASE
    CASE JOB.STATUS<1,1> = 9
      ERRMSG="THIS JOB HAS BEEN CANCELLED";GOSUB 91000;GOTO 1020
    CASE JOB.STATUS<1,1> = 7
      ERRMSG="THIS JOB IS READY TO BE PURGED";GOSUB 91000;GOTO 1020
    CASE JOB.STATUS<1,1> = 8
      ERRMSG="THIS JOB HAS BEEN PURGED";GOSUB 91000;GOTO 1020
  END CASE
  GOSUB 7000
  IF VALUE = "END" THEN GOTO 1020
  IF DLB.OSJ.FLG<1,LN> # "Y" AND CO.JOB.CUST.FLG = "C" THEN
    MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
      CUST.NAME = UNKNOWN
    END
    JOB.DESC<1,1> = CUST.NAME
  END
  DLB.JOB<1,LN>=SAVE.JOB
  LINE.DESC<LN>=JOB.DESC<1,1>
  LINE.CUST<LN>=JOB.CUST
  P_X  = 20 ; P_Y = SLN ; P_VALUE = LINE.CUST<LN> "L#6" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = LINE.DESC<LN> "L#58" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  IF DLB.OSJ.FLG<1,LN> = "Y" THEN
1030*
    X=27;Y=SLN;TYP=3;MAXL=2;MINL=2;HMSG="ENTER VALID DIVISION"
    CALL EDIT.SUB
    IF VALUE = "END" THEN GOTO 1020
    MATREAD DIV.REC FROM DIVISION, CONO:VALUE ELSE
      ERRMSG = "DIVISION ":VALUE:" IS MISSING"
      GOSUB 91000; GOTO 1030
    END
*****T23278 v
    IF ONLY.VALID.DIVISION = '' THEN
      DIV.CODE = VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 1030
      END
      ONLY.VALID.DIVISION = VALUE
    END ELSE
      IF JOB.DIV # ONLY.VALID.DIVISION THEN
        ERRMSG = "JOB DIVISION MUST MATCH DIVISION OF PREVIOUSLY ENTERED JOB(S)."
        GOSUB 91000; GOTO 1030
      END
    END
*****T23278 ^
    JOB.DIV = VALUE
  END ELSE
    MATREAD DIV.REC FROM DIVISION, CONO : JOB.DIV ELSE
      ERRMSG = 'CANNOT LOCATE JOB DIVISION ':JOB.DIV
      GOSUB 91000; GOTO 1020
    END
  END
  DLB.DIV<1,LN> = JOB.DIV
  P_X  = 27 ; P_Y = SLN ; P_VALUE = JOB.DIV "L#2" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1040*
  TEMP.CCTR = ""
  TEMP.DEPT = ""
  X=30 ; Y=SLN ; MAXL=3 ; JUSTIFY="L" ; TYP = 1; O.R = "R"
  BEGIN CASE
    CASE DLB.CCTR<1,LN> # ""
      DEFAULT = DLB.CCTR<1,LN>; O.R = "O"
    CASE LN > 1
      DEFAULT = DLB.CCTR<1,LN-1> ; O.R = "O"
  END CASE
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 1020
  IF VALUE = "???" THEN
    IF JOB.DEPT # "" THEN
      TEMP.DEPT = JOB.DEPT
    END ELSE
      GXR.HEADINIG=""
      GXR.XREF=DIVISION
      GXR.FILE=DEPARTMENT
      GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
      GXR.HEADING<1,1>='DEPT'
      GXR.HEADING<1,2>='DESCRIPTION'
      GXR.ATT<1,2>=2
      GXR.LOC=2
      GXR.ID=''
      GXR.SRCH.ID=DLB.DIV<1,LN>
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.ATT<1,2>=1
      IF GXR.ID= '' THEN
        GOSUB 8000; GOTO 1040
      END
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
        ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
        GOSUB 8000 ; GOSUB 91000 ; GOTO 1040
      END
      TEMP.DEPT = GXR.ID
    END
    GXR.HEADING=""
    GXR.XREF=DEPARTMENT
    GXR.FILE=COST.CNTR
    GXR.TOP.LINE='COST CENTER XREF SEARCH'
    GXR.HEADING<1,1>='CCTR'
    GXR.HEADING<1,2>='DESCRIPTION'
    GXR.LOC=5
    GXR.ID=''
    GXR.SRCH.ID=TEMP.DEPT
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    IF GXR.ID='' THEN
      GOSUB 8000 ; GOTO 1040
    END
    MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
      ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
      GOSUB 8000 ; GOSUB 91000 ; GOTO 1040
    END
    IF CCTR.DEPT # TEMP.DEPT THEN
      ERRMSG = 'INCORRECT DEPARTMENT FOR COST CENTER ':GXR.ID
      GOSUB 8000 ; GOSUB 91000 ; GOTO 1040
    END
    IF CCTR.TYPE='F' THEN
      ERRMSG='COST CENTER ':GXR.ID:' IS FROZEN'
      GOSUB 8000 ; GOSUB 91000 ; GOTO 1040
    END
    TEMP.CCTR = GXR.ID
    GOSUB 8000
    P_X  = 30 ; P_Y = SLN ; P_VALUE = TEMP.CCTR "R#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    MATREAD CCTR.REC FROM COST.CNTR , CONO : VALUE ELSE
      ERRMSG = "COST CNTR ":VALUE:" IS MISSING"
      GOSUB 91000 ; GOTO 1040
    END
    IF CCTR.TYPE='F' THEN
      ERRMSG='COST CENTER ':VALUE:' IS FROZEN'
      GOSUB 91000 ; GOTO 1040
    END
    IF JOB.DEPT # CCTR.DEPT[1,LEN(JOB.DEPT)] THEN
      ERRMSG = 'INCORRECT DEPARTMENT FOR COST CENTER ':VALUE
      GOSUB 91000 ; GOTO 1040
    END
    TEMP.CCTR = VALUE
    TEMP.DEPT = CCTR.DEPT
  END
  LOCATE TEMP.DEPT IN DIV.DEPT<1>,1 SETTING DFND ELSE
    ERRMSG = 'DEPARTMENT ':TEMP.DEPT:' DOES NOT BELONG TO THIS DIVISION'
    GOSUB 91000; GOTO 1040
  END
  MATREAD DEPT.REC FROM DEPARTMENT, CONO:TEMP.DEPT ELSE
    ERRMSG = "CANNOT LOCATE COST CENTER DEPARTMENT ":TEMP.DEPT
    GOSUB 91000; GOTO 1040
  END
  DLB.CCTR<1,LN> = TEMP.CCTR
  DLB.DEPT<1,LN> = TEMP.DEPT
1050*
  X = 34 ; Y = SLN ; MAXL = 4 ; JUSTIFY = 'L' ; TYP = 1
  IF DLB.OPER<1,LN>='' THEN
    O.R='R'
  END ELSE
    DEFAULT=DLB.OPER<1,LN>
    O.R='O'
  END
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  IF VALUE='???' THEN
    GXR.HEADING=""
    GXR.XREF=COST.CNTR;GXR.FILE = OPERATION;GXR.TOP.LINE = 'OPERATION XREF SEARCH';GXR.HEADING<1,1> = 'OPER'
    GXR.LOC=4 ; GXR.ID = '' ; GXR.SRCH.ID = DLB.CCTR<1,LN>
    GXR.HEADING<1,1>='OPER'
    GXR.HEADING<1,2>='DESCRIPTION'
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    IF GXR.ID='' THEN
      GOSUB 8000; GOTO 1050
    END
    MATREAD OPER.REC FROM OPERATION , CONO:GXR.ID ELSE
      ERRMSG='OPERATION (':GXR.ID:') ID MISSING'
      GOSUB 8000 ; GOSUB 91000 ; GOTO 1050
    END
    DLB.OPER<1,LN>=GXR.ID
    GOSUB 8000
  END ELSE
    LOCATE VALUE IN CCTR.OPER<1>,1 SETTING C ELSE
      ERRMSG="OPER # ":VALUE:" DOES NOT BELONG UNDER CCTR # ":DLB.CCTR<1,LN>
      GOSUB 91000 ; GOTO 1050
    END
    MATREAD OPER.REC FROM OPERATION , CONO:VALUE ELSE
      ERRMSG='OPERATION (':VALUE:') IS MISSING'
      GOSUB 91000 ; GOTO 1050
    END
    DLB.OPER<1,LN>=VALUE
  END
1060*
  X = 39 ; Y = SLN ;TYP = 1;MAXL = 2;JUSTIFY = 'L'
  IF DLB.FCTR<1,LN>='' THEN O.R = 'O' ; DEFAULT = '01'
  IF DLB.FCTR<1,LN> # '' THEN O.R='O' ; DEFAULT = DLB.FCTR<1,LN>
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  MATREAD FCTR.REC FROM FACTOR , CONO:VALUE ELSE
    ERRMSG='FACTOR (':VALUE:') IS MISSING'
    GOSUB 91000;GOTO 1060
  END
  DLB.FCTR<1,LN>=VALUE
1070*
  BEGIN CASE
    CASE JOB.TYPE="C"
      P_X  = 43 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
    CASE JOB.TYPE="S"
      P_X  = 43 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
      VALUE = 'S'
      GOTO 1071
    CASE JOB.TYPE="N"
      P_X  = 43 ; P_Y = SLN ; P_VALUE = JOB.TYPE "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DLB.TYPE<1,LN>=JOB.TYPE
    CASE 1
      HMSG='(R)EGULAR (C)USTOMER CHANGE ORDER (S)POILAGE (N)ON CHARGABLE'
      VALDAT='R':VM:'C':VM:'S':VM:'N'
      DEFAULT="R"
      X=43 ; Y = SLN ; TYP = 1 ; MAXL = 1;JUSTIFY = 'L' ; O.R = 'O'
      IF DLB.TYPE<1,LN> # '' THEN DEFAULT=DLB.TYPE<1,LN>
      CALL EDIT.SUB
      IF VALUE='END' THEN GOTO 1020
      DLB.TYPE<1,LN> = VALUE
1071  IF CO.SPOIL.FLG = "Y" AND VALUE = "S" THEN
1072*
        X=70;Y=SLN+1;TYP=1;MAXL=8
        IF DLB.SPOIL.CODE<1,LN> = '' THEN
          O.R = 'R' ; DEFAULT = ''
        END ELSE
          O.R = 'O' ; DEFAULT = DLB.SPOIL.CODE<1,LN>
        END
        CALL EDIT.SUB
        IF VALUE = 'END' THEN GOTO 1070
        READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:VALUE ELSE
          ERRMSG = "SPOILAGE CODE (":VALUE:") NOT ON FILE"
          GOSUB 91000 ; GOTO 1072
        END
        DLB.SPOIL.CODE<1,LN> = VALUE
      END ELSE
        DLB.SPOIL.CODE<1,LN> = ''
      END
  END CASE
1075*
  X = 45; Y = SLN; TYP = 8; MAXL = 1; JUSTIFY = "L"
  IF DLB.CNCR<1,LN> = '' THEN
    DEFAULT = 'N'
  END ELSE
    DEFAULT = DLB.CNCR<1,LN>
  END
  O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  IF VALUE = "Y" THEN
    BEGIN CASE
      CASE LN < 2
        ERRMSG = "CANNOT ENTER CONCURRENT TIME AT FIRST LINE"; GOSUB 91000; GOTO 1075
      CASE DLB.JOB<1,LN> = DLB.JOB<1,LN-1>
        ERRMSG = "JOB CANNOT BE CONCURRENT WITH ITSELF"; GOSUB 91000; GOTO 1075
      CASE 1
        DLB.CNCR<1,LN>=VALUE
        DLB.HRS.ST<1,LN> = DLB.HRS.ST<1,LN-1>
        DLB.TIME.ST<1,LN> = DLB.TIME.ST<1,LN-1>
        DLB.HRS.EN<1,LN> = DLB.HRS.EN<1,LN-1>
        DLB.TIME.END<1,LN> = DLB.TIME.END<1,LN-1>
        P_X  = 47 ; P_Y = SLN ; P_VALUE = OCONV(DLB.HRS.ST<1,LN>, "MD2") "R#5" ; P_OPT = ""
        P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,LN>, "MD2") "R#5"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOTO 1100
    END CASE
  END ELSE
    DLB.CNCR<1,LN>=VALUE
  END
*
1080*
  X = 47 ; Y = SLN;TYP = 1;JUSTIFY = 'R';MAXL = 5
  HMSG='' ; VALDAT = ''
  IF DLB.HRS.ST<1,LN>='' AND DLB.HRS.EN<1,LN-1> # '' THEN
    DEFAULT=OCONV(DLB.HRS.EN<1,LN-1>, "MD2") ; O.R = 'O'
  END ELSE
    DEFAULT='' ; O.R = 'R'
  END
  IF DLB.HRS.ST<1,LN> # '' THEN DEFAULT=OCONV(DLB.HRS.ST<1,LN> , "MD2") ; O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
*
  ERRMSG = ""
  GOSUB 2000
  IF ERRMSG # "" THEN
    GOSUB 91000 ; GOTO 1080
  END
  IF VALUE > 2400 THEN
    ERRMSG="CANNOT EXCEED 24 UNITS" ; GOSUB 91000; GOTO 1080
  END
*IF DLB.CNCR<1,LN> = "N" AND DLB.HRS.EN<1,LN-1> # '' THEN
*IF LN > 1 THEN
*IF VALUE < DLB.HRS.EN<1,LN-1> THEN
*ERRMSG = "ENTER START TIME GREATER OR EQUAL TO ":OCONV(DLB.HRS.EN<1,LN-1>, "MD2");GOSUB 91000;GOTO 1080
*END
*END
*END
  P_X  = 47 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#5" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DLB.HRS.ST<1,LN>=VALUE
  DLB.TIME.ST<1,LN>=VALUE2
1090*
  X = 53 ; Y = SLN;TYP = 1;JUSTIFY = 'R';MAXL = 5
  IF DLB.HRS.EN<1,LN>='' THEN DEFAULT = '' ;O.R = 'R'
  IF DLB.HRS.EN<1,LN> # '' THEN DEFAULT=OCONV(DLB.HRS.EN<1,LN> , "MD2") ; O.R = 'O'
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  ERRMSG = ""
  GOSUB 2000
  IF ERRMSG # "" THEN
    GOSUB 91000 ; GOTO 1090
  END
  IF DLB.HRS.ST<1,LN> = VALUE THEN
    ERRMSG = "LAPS TIME CAN'T BE EQUAL TO ZERO, TRY AGAIN" ; GOSUB 91000 ; GOTO 1090
  END
  IF VALUE > 2400 THEN
    ERRMSG="CANNOT EXCEED 24 HOURS" ; GOSUB 91000 ; GOTO 1090
  END
  IF VALUE < DLB.HRS.ST<1,LN> THEN
    IF (VALUE+2400) - DLB.HRS.ST<1,LN> > 600 THEN
      SVALUE=VALUE
      X=0 ; Y = 23 ; MAXL = 1 ; TYP = 18 ; O.R = 'R'
      PMSG="LAPS TIME GREATER THAN 6 UNITS OK (Y)ES OR (N)O"
      CALL EDIT.SUB
      IF VALUE="END" THEN GOTO 1090
      IF VALUE='N' THEN GOTO 1090
      VALUE=SVALUE
    END
  END
  P_X  = 53 ; P_Y = SLN ; P_VALUE = OCONV(VALUE, "MD2") "R#5" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DLB.HRS.EN<1,LN>=VALUE
  DLB.TIME.END<1,LN>=VALUE2
  GOSUB 8100
1100*
  LOCATE DLB.OPER<1,LN> IN CCTR.OPER<1>,1 SETTING SC ELSE
    ERRMSG='OPER # ':DLB.OPER:' DOES NOT BELONG UNDER CCTR # ':CCTR.OPER
    GOSUB 91000 ; GOTO 1999
  END
  BEGIN CASE
    CASE CCTR.OPER.TYPE<1,SC> = "V"
      X = 62; TYP = 3; MAXL = 7
      IF DLB.IMP<1,LN> # "" THEN
        DEFAULT = INT(DLB.IMP<1,LN> / 100); O.R = "O"
      END ELSE
        IF DLB.CNCR<1,LN> = "Y" THEN O.R = "O"
      END
    CASE CCTR.OPER.TYPE<1,SC> = "U"
      X = 62; TYP = 4; SCALER = 2; MAXL = 7
      IF DLB.IMP<1,LN> # "" THEN
        IF LEN(DLB.IMP<1,LN>) > 6 THEN
          DEFAULT = OCONV(DLB.IMP<1,LN>[1,6], "MD2")
        END ELSE
          DEFAULT = OCONV(DLB.IMP<1,LN>, "MD2")
        END
        O.R = "O"
      END ELSE
        IF DLB.CNCR<1,LN> = "Y" THEN O.R = "O"
      END
    CASE 1
      DLB.IMP<1,LN> = ""
      GOTO 1119
  END CASE
1110*
  P_X  = 62 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  Y = SLN; JUSTIFY = "R"
  CALL EDIT.SUB
  IF VALUE='END' THEN GOTO 1020
  IF CCTR.OPER.TYPE<1,SC> = "V" AND VALUE # "" THEN VALUE = VALUE * 100
  DLB.IMP<1,LN>=VALUE
1119*
  P_X  = 62 ; P_Y = SLN ; P_VALUE = OCONV(DLB.IMP<1,LN>, "MD2") "R#7" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1200*
  IF CCTR.OPER.HR.RATE<1,SC> + 0=0  THEN
    X=70;Y = SLN;MAXL = 9;TYP = 4;SCALER = 2
    IF DLB.COST<1,LN>='' THEN
      DEFAULT = ''; O.R = 'R'
    END ELSE
      DEFAULT=OCONV(DLB.COST<1,LN>,"MD2"); O.R = 'O'
    END
    CALL EDIT.SUB
    IF VALUE='END' THEN GOTO 1020
    DLB.COST<1,LN>=VALUE
  END
1999*
  LINES=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
  RETURN
*-- UNIT CONVERATION
2000*
  OK=0
  OK1=INDEX(VALUE,":",1)
  OK2=INDEX(VALUE,".",1)
  BEGIN CASE
    CASE OK1 > 0
      MM=FIELD(VALUE,":",2)
      HH=FIELD(VALUE, ":",1)
      IF NOT(NUM(MM)) OR NOT(NUM(HH)) THEN
        ERRMSG = "** INVALID INPUT **"
        GOTO 2999
      END
      IF MM='' THEN MM = 0
      UN=INT(((MM * 10) / 6) + .5) / 100
      HH=FIELD(VALUE, ":",1)
      UNITS=HH + UN
      VALUE=ICONV(UNITS, "MD2")
      VALUE2=INT(UNITS):':':INT(((UNITS - INT(UNITS)) * 60) +.5)
      VALUE2=ICONV(VALUE2, "MTS")
    CASE OK2 > 0
      MM=FIELD(VALUE,".",2)
      HH=FIELD(VALUE, ".",1)
      IF NOT(NUM(MM)) OR NOT(NUM(HH)) THEN
        ERRMSG = "** INVALID INPUT **"
        GOTO 2999
      END
      UNITS=VALUE
      VALUE2=INT(UNITS):':':INT(((UNITS - INT(UNITS)) * 60) +.5)
      VALUE2=ICONV(VALUE2, "MTS")
      VALUE=ICONV(VALUE, "MD2")
    CASE OK=0 AND NUM(VALUE)
      VALUE2=ICONV(VALUE, "MTS")
      VALUE=ICONV(VALUE, "MD2")
    CASE 1
      ERRMSG = "** INVALID INPUT **"
      GOTO 2999
  END CASE
2999 RETURN
*-- GET AUTHORIZATION INITIALS
7000*
  VALUE = ""
  IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
7010*
    X=0;Y=21;MAXL=3;TYP=1;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
    PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
    IF DLB.INIT<1,LN> # "" THEN
      O.R='O';DEFAULT=DLB.INIT<1,LN>
    END
    CALL EDIT.SUB
    P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF VALUE="END" THEN GOTO 7999
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
      MAT JSI.REC =""
      ERRMSG="NOT VALID INITIALS. TRY AGAIN"
      GOSUB 91000;GOTO 7010
    END
    DLB.INIT<1,LN>=VALUE
  END
7999*
  RETURN
*-- PRINT VALUES
8000*
  ECD.ACTION=2
  CALL SCRN.EDIT
  ECD.ACTION=3;CALL SCRN.EDIT
  OLD.START.LINE=0 ; GOSUB 11000
  SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.SEQ<1,LN> "L#6"
  P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.JOB<1,LN> "L#8"
  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.CUST<LN> "L#6"
  P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.DIV<1,LN> "L#2"
  P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CCTR<1,LN> "L#3"
  P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.OPER<1,LN> "L#4"
  P_X  := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.FCTR<1,LN> "L#3"
  P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.TYPE<1,LN> "L#1"
  P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CNCR<1,LN> "L#1"
  P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.ST<1,LN>, "MD2") "R#5"
  P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,LN>, "MD2") "R#5"
  P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.IMP<1,LN>, "MD2") "R#7"
  P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.COST<1,LN>, "MD2") "R#9"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = LINE.DESC<LN> "L#58" ; P_OPT = ""
  P_X  := AM:70 ; P_Y := AM:SLN+1 ; P_VALUE := AM:DLB.SPOIL.CODE<1,LN> "L#8"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*-- GET TOTAL TIME AND PRINT IT
8100*
  JOB.CNT=COUNT(DLB.JOB,VM) + (DLB.JOB # '')
  TOTAL.HRS=0
  FOR JT=1 TO JOB.CNT
    IF DLB.CNCR<1,JT> # "Y" THEN
      IF DLB.HRS.EN<1,JT> < DLB.HRS.ST<1,JT> THEN
        DIFF.HRS=(DLB.HRS.EN<1,JT> + 2400) - DLB.HRS.ST<1,JT>
      END ELSE
        DIFF.HRS=DLB.HRS.EN<1,JT> - DLB.HRS.ST<1,JT>
      END
      TOTAL.HRS=TOTAL.HRS + DIFF.HRS
    END
  NEXT JT
  P_X  = 74 ; P_Y = 2 ; P_VALUE = OCONV(TOTAL.HRS, "MD2") ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
9000*
  GOSUB 11000
  IF LAST.LINE # 0 THEN
    ECD.NUM = 2; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
    ECD.ACTION = 4; CALL SCRN.EDIT
  END ELSE
    ERRMSG = "NO LINES TO CHANGE OR DELETE" ; GOSUB 91000 ; ECD.RET.VALUE = ""
  END
  IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN LN.NO = 0 ELSE LN.NO = ECD.RET.VALUE
  RETURN
11000*
  START.LINE=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE=OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE=START.LINE
  CNT=1
  FOR N = START.LINE TO LAST.LINE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    IF LINE.DESC<N> = "" OR LINE.CUST<N> = "" THEN
      MATREAD JOB.REC FROM JOB , CONO:DLB.JOB<1,N> ELSE
        MAT JOB.REC=''
        FND=0
        IF NUM(DLB.JOB<1,N>) THEN
          IF DLB.JOB<1,N> < J.CUTOFF.NUM THEN FND=1
        END ELSE
          JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # '')
          FOR L=1 TO JC.CNT WHILE FND = 0
            PRFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
            IF J.CUTOFF.PREFIX<1,L>=DLB.JOB<1,N>[1,PRFX.LEN] THEN
              CHK.VALUE=DLB.JOB<1,N>[PRFX.LEN+1,LEN(DLB.JOB<1,N>)-PRFX.LEN]
              IF NUM(CHK.VALUE) THEN
                IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
              END
            END
          NEXT L
        END
        IF FND=1 THEN
          DLB.OSJ.FLG<1,N>='Y'
          JOB.DESC<1,1>='*** OUTSIDE JOB ***'
        END ELSE
          DLB.OSJ.FLG<1,N>=""
          JOB.DESC<1,1>=UNKNOWN
        END
      END
      IF DLB.OSJ.FLG<1,N> # "Y" AND CO.JOB.CUST.FLG = "C" THEN
        MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
          CUST.NAME = UNKNOWN
        END
        JOB.DESC<1,1> = CUST.NAME
      END
      LINE.DESC<N> = JOB.DESC<1,1>
      LINE.CUST<N> = JOB.CUST
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.SEQ<1,N> "L#6"
    P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.JOB<1,N> "L#8"
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.CUST<N> "L#6"
    P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.DIV<1,N> "L#2"
    P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CCTR<1,N> "L#3"
    P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.OPER<1,N> "L#4"
    P_X  := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.FCTR<1,N> "L#3"
    P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.TYPE<1,N> "L#1"
    P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:DLB.CNCR<1,N> "L#1"
    P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.ST<1,N>, "MD2") "R#5"
    P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.HRS.EN<1,N>, "MD2") "R#5"
    P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.IMP<1,N>, "MD2") "R#7"
    P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DLB.COST<1,N>, "MD2") "R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 11 ; P_Y = SLN+1 ; P_VALUE = LINE.DESC<N> "L#58" ; P_OPT = ""
    P_X  := AM:70 ; P_Y := AM:SLN+1 ; P_VALUE := AM:DLB.SPOIL.CODE<1,N> "L#8"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR M=CNT TO PAGE.SIZE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999*
  RETURN
91000*
  ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
*       PRINT @(-1)
END
