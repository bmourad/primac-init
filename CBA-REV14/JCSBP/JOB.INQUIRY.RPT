*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK 
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
******************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.INQUIRY.RPT
* BY          - YAMOUT, C.B.A.
* DATE        - 03/01/85
* DESCRIPTION - 
* COMMENT     - REVISED TO REFLECT JOB.STATUS '5' - "REOPENED"
* - TASK #12907 (RRG)
* T20936 gat 09/03/1996 * FIX PROBLEM WITH JOB.RS.INQ.PRT
*T21177 diane 11/06/1996 * REV11 UPG
*T26334 epitka 12/19/2001 * REV12
*T26493 cmykleb 04/03/2002 * Change pgm to get the rpt # from the proc
*                            and also change proc/pgm to use REPORT.SCRN
*                            and use GET.PROG.HEAD for the heading.
******************************************************
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>CSR.CODE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.TOT.REC
*COPY>JCS.CPYLIB>DEPT.TOT.REC
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   MAT FILE.VARS = ''
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.CATEGORY' TO JOB.CATEGORY ELSE ERRMSG = 'JOB.CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG = 'JOB.OSP FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.MISC' TO JOB.MISC ELSE ERRMSG = 'JOB.MISC FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG = 'JOB.SHIP FILE IS MISSING'; GOTO 93000
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
   OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG = 'CUSTOMER.XREF FILE IS MISSING'; GOTO 93000
   OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = 'SALESMAN FILE IS MISSING'; GOTO 93000
   OPEN '','CSR.CODE' TO CSR.CODE ELSE ERRMSG = 'CSR.CODE FILE IS MISSING'; GOTO 93000
   OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
   OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
   OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING';GOTO 93000
   OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING';GOTO 93000
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OSP FILE IS MISSING';GOTO 93000
*T26493 v
***** READ FROM THE PROC
   PROCREAD BUFFER ELSE
      ERRMSG = "MUST BE RUN FROM A PROC"
      GOTO 93000
   END
*T26493 ^
**** GET COMPANY
   MAT COMP.REC = ''
   CONO = ''
   REC = ""
   SUB.FLG = 0
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IF CO.POS = "Y" THEN
      OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING';GOTO 93000
   END
   IF CO.OPS = "Y" THEN
      OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG = 'JOB.FNGD.STATS FILE IS MISSING';GOTO 93000
   END
* INITIALIZATION
   MAT EDIT.COM.DRIVER = ''
   MAT GEN.XREF.REC = ''
   DASHES = STR('-',80)
   ERRMSG = ''
   UNKNOWN = '????????????????????'
*T26493 v
   SAVE.INV.JS.REC = ""
   JOB.NUM = BUFFER<3>
   CUST.NUM = BUFFER<4>
   RPT.TYPE = BUFFER<5>
   SUB.JOB = BUFFER<6>
   MATREAD JOB.REC FROM JOB, CONO:JOB.NUM ELSE
      ERRMSG = "CANNOT READ JOB ":JOB.NUM:" FROM THE JOB FILE."
      GOSUB 91000
      GOTO 99999
   END
   MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NUM ELSE
      ERRMSG = "CANNOT READ CUSTOMER ":CUST.NUM:" FROM THE CUSTOMER FILE."
      GOSUB 91000
      GOTO 99999
   END
   CONO.NAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = BUFFER<2>
   HD1 = "" ; HD2 = ""
   CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,"",HD1,HD2)
*T26493 ^
   SUB.CNT = 1
   IF JOB.SUBS # "" AND SUB.JOB = "Y" THEN
      LOCATE "1" IN JOB.STATUS<1>,1 SETTING ADD.SUB ELSE
         CALL MASTER.SUMMARY.SUB(CONO,JOB.NUM,SAVE.INV.JS.REC)
         SUB.FLG = 1; ADD.SUB = 0; SUB.CNT = COUNT(JOB.SUBS,VM) + 2
      END
      IF ADD.SUB THEN
         CALL MASTER.SUMMARY.SUB(CONO,JOB.NUM,SAVE.INV.JS.REC)
         SUB.FLG = 1; SUB.CNT = COUNT(JOB.SUBS,VM) + 2
      END
   END
   CALL JOB.SUMMARY.SUB(CONO)
   PRINTER ON
   MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE MAT SALESMAN.REC = ''; SALS.NAME = UNKNOWN
   MATREAD CSR.REC FROM CSR.CODE, CONO:JOB.CSR ELSE MAT CSR.REC = ''; CSR.DESC = UNKNOWN
   MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE MAT DIV.REC = ''; DIV.DESC = UNKNOWN
   MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIP.VIA ELSE MAT SHIP.VIA.REC = ''; SHIPV.DESC = UNKNOWN
   IF JOB.CATG # "" THEN
      READ REC FROM JOB.CATEGORY, CONO:JOB.CATG ELSE REC = UNKNOWN
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1> = ""
         STATUS = "BOOKED"
      CASE JOB.STATUS<1,1> = "7"
         STATUS = "READY TO PURGE"
      CASE JOB.STATUS<1,1> = "8"
         STATUS = "WAS PURGED"
      CASE JOB.STATUS<1,1> = "9"
         STATUS = "CANCELLED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
               STATUS = "IN PROCESS"
            CASE JOB.STATUS<1,1> = "5" 
               STATUS = "REOPENED"
            CASE 1
               STATUS = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
               STATUS = "IN PROCESS"
            CASE JOB.STATUS<1,1> = "5"
               STATUS = "REOPENED"
            CASE 1
               STATUS = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         STATUS = "COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         STATUS = "RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         STATUS = "DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         STATUS = "IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         STATUS = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "1"
         STATUS = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "3"
         STATUS = "INVOICED"
      CASE 1
         STATUS = "UNKNOWN"
   END CASE
   BEGIN CASE
      CASE RPT.TYPE = "ALL"
         GOSUB 2000
         GOSUB 2300
         GOSUB 2500
         GOSUB 3000
         GOSUB 4000
         GOSUB 5000
         GOSUB 6000
         GOSUB 7000
         IF CO.POS = "Y" THEN GOSUB 8000
         IF CO.OPS = "Y" THEN GOSUB 9000
      CASE RPT.TYPE = 'RS'
         GOSUB 2500
      CASE RPT.TYPE = 'LB'
         GOSUB 3000
      CASE RPT.TYPE = 'MT'
         GOSUB 4000
      CASE RPT.TYPE = 'OS'
         GOSUB 5000
      CASE RPT.TYPE = 'SP'
         GOSUB 6000
      CASE RPT.TYPE = 'MS'
         GOSUB 7000
      CASE RPT.TYPE = "OP" AND CO.POS = "Y"
         GOSUB 8000
      CASE RPT.TYPE = "FG" AND CO.OPS = "Y"
         GOSUB 9000
   END CASE
   PRINTER CLOSE
   PRINTER OFF
   RETURN
2000 PNO = 1
   PRINT CHAR(12)
*T26493 v
*  LINE = SPACE(2) : 'DATE - ' : OCONV(DATE(),"D2/") "L#8"
*  LINE = LINE : SPACE(5) : 'TIME - ' : OCONV(TIME(),"MTS") "L#8"
*  LINE = LINE : SPACE(18) : CO.NAME "L#30"
*  LINE = LINE : SPACE(15) : 'PAGE - ' : PNO "R#3"
*  PRINT LINE
*  PRINT SPACE(48) :'J O B   I N Q U I R Y   R E P O R T'
*  PRINT SPACE(48) :DASHES[1,35]
   PRINT HD1:PNO"R#3"
   PRINT HD2
   PRINT; PRINT
   LINE = SPACE(10) : 'JOB NUMBER' "L#16" :'- ':JOB.NUM "L#8":SPACE(19)
   LINE = LINE : 'STATUS - ':STATUS
   PRINT LINE
   LINE = SPACE(10) : 'CUSTOMER #' "L#16" :'- ':JOB.CUST "L#6":SPACE(21)
   LINE = LINE : 'NAME   - ':CUST.NAME "L#30"
   PRINT LINE
   LINE = SPACE(10) : 'SALESREP #' "L#16" :'- ':JOB.SLSMN "L#3":SPACE(24)
   LINE = LINE :'NAME   - ':SALS.NAME "L#30"
   PRINT LINE
   LINE = SPACE(10) : 'CUST SERV REP #' "L#16" :'- ':JOB.CSR "L#3":SPACE(24)
   LINE = LINE :'NAME   - ':CSR.DESC "L#30"
   PRINT LINE
   PRINT SPACE(10) : 'BOOKED DATE' "L#16" :'- ':OCONV(JOB.TRACK.DATE<1,2>,"D2/")
   PRINT SPACE(10) : 'DUE DATE' "L#16" :'- ':OCONV(JOB.TRACK.DATE<1,4>,"D2/")
   PRINT SPACE(10) : 'TYPE    ' "L#16" :'- ':JOB.TYPE
   PRINT SPACE(10) : 'ORDER QTY' "L#16" :'- ':JOB.QTY<1,1>
   PRINT SPACE(10) : 'FINISH QTY' "L#16" :'- ':JOB.QTY<1,2>
   PRINT SPACE(10) : 'SHIP QTY' "L#16" :'- ':JOB.QTY<1,3>
   PRINT SPACE(10) : 'SALES CODE' "L#16" :'- ':JOB.SALES.CODE
   LINE = SPACE(10) : 'JOB CATEGORY' "L#16":'- ':JOB.CATG "L#5" :SPACE(22)
   LINE = LINE : 'DESC   - ':REC "L#30"
   PRINT LINE
   PRINT SPACE(10) : 'COLORS' "L#16" :'- ':JOB.COLORS
   PRINT SPACE(10) : 'PRIOR JOB' "L#16" :'- ':JOB.PRIOR.JOB
   PRINT SPACE(10) : 'PRICE / 1000' "L#16" :'- ':OCONV(JOB.PRICE.PER.THOU, "MD2")
   PRINT SPACE(10) : 'CUST PO # ' "L#16" :'- ':JOB.CUST.PO
   PRINT SPACE(10) : 'CREDIT AUTH' "L#16" :'- ':JOB.CREDIT
   PRINT SPACE(10) : 'MASTER JOB #' "L#16" :'- ':JOB.MASTER
   LINE = SPACE(10) : 'DIVISION #' "L#16" :'- ':JOB.DIV "L#3" :SPACE(24)
   LINE = LINE : 'DESC   - ':DIV.DESC "L#30"
   PRINT LINE
   PRINT SPACE(10) : 'MARKUP PERCENT' "L#16" :'- ':OCONV(JOB.MARKUP,"MD2") "L#6"
   LINE = SPACE(10) : 'SHIP VIA' "L#16" :'- ':JOB.SHIP.VIA "L#3" :SPACE(24)
   LINE = LINE : 'DESC   - ':SHPV.DESC "L#30"
   PRINT LINE
* PRINT SPACE(10) : 'ESTIMATE TYPE' "L#16" :'- ':JOB.EST.TYPE
* PRINT SPACE(10) : 'ESTIMATE AMOUNT' "L#16" :'- ': OCONV(JOB.EST.COST,"MD2") "R#10"
   PRINT SPACE(10) : 'ESTIMATE AMOUNT' "L#16" :'- ': OCONV(JOB.EST.COST, "MD2") "R#10" :SPACE(17): 'QUOTED AMOUNT' "L#16":'- ': OCONV(JOB.EST.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL TIME COST' "L#16" :'- ': OCONV(LB.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL TIME SALE' "L#16":'- ': OCONV(LB.TOT.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL MATL COST' "L#16" :'- ': OCONV(MT.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL MATL SALE' "L#16":'- ': OCONV(MT.TOT.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL OSP COST  ' "L#16" :'- ': OCONV(OS.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL OSP SALE  ' "L#16":'- ': OCONV(OS.TOT.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL SHIP COST' "L#16" :'- ': OCONV(SP.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL SHIP SALE' "L#16":'- ': OCONV(SP.TOT.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL MISC COST' "L#16" :'- ': OCONV(MS.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL MISC SALE' "L#16":'- ': OCONV(MS.TOT.SALE, "MD2") "R#10"
   PRINT SPACE(10) : 'TOTAL JOB COST ' "L#16" :'- ': OCONV(JOB.TOT.COST, "MD2") "R#10" :SPACE(17): 'TOTAL JOB SALE ' "L#16":'- ': OCONV(JOB.TOT.SALE, "MD2") "R#10"
   FIN.JOB.SALE = INT(JOB.TOT.SALE + ((JOB.TOT.SALE * (JOB.MARKUP/100))/100) + .5)
   PRINT SPACE(55) : 'FINAL JOB SALE' "L#16" :'- ': OCONV(FIN.JOB.SALE,"MD2") "R#10"
   PRINT; PRINT
   PRINT SPACE(10) : DASHES[1,33]:' JOB COMMENTS ':DASHES[1,33]
   PRINT
   PRINT SPACE(10) : JOB.COMMENTS<1,1> "L#80"
   PRINT SPACE(10) : JOB.COMMENTS<1,2> "L#80"
   PRINT
   PRINT SPACE(10) : DASHES[1,32]:' JOB DESCRIPTION ':DASHES[1,32]
   PRINT
   CNT = COUNT(JOB.DESC,VM) + (JOB.DESC # '')
   FOR I = 1 TO CNT; PRINT SPACE(10):JOB.DESC<1,I> "L#80"; NEXT I
   RETURN
2300 *
   CALL JOB.GANG.INQ.RPT(CONO,CO.NAME,JOB.NUM,HD1,HD2)
   RETURN
2500 IF JOB.RESV.MATL # '' THEN
      CALL JOB.RS.INQ.RPT(CONO,CO.NAME,JOB.NUM,SAVE.INV.JS.REC,HD1,HD2)
   END
   RETURN
3000 IF LB.DEPT.NO # '' THEN
      CALL JOB.LB.INQ.RPT(CONO,CO.NAME,JOB.NUM,SUB.CNT,HD1,HD2)
   END
   RETURN
4000 IF MT.DEPT.NO # '' THEN
      CALL JOB.MT.INQ.RPT(CONO,CO.NAME,JOB.NUM,SUB.CNT,HD1,HD2)
   END
   RETURN
5000 IF OS.DEPT.NO # '' THEN
      CALL JOB.OS.INQ.RPT(CONO,CO.NAME,JOB.NUM,SUB.CNT,HD1,HD2)
   END
   RETURN
6000 IF SP.DEPT.NO # '' THEN
      CALL JOB.SP.INQ.RPT(CONO,CO.NAME,JOB.NUM,SUB.CNT,HD1,HD2)
   END
   RETURN
7000 IF MS.DEPT.NO # '' THEN
      CALL JOB.MS.INQ.RPT(CONO,CO.NAME,JOB.NUM,SUB.CNT,HD1,HD2)
   END
   RETURN
8000 CALL JOB.STATS.INQ.RPT.SUB(CONO,CO.NAME,JOB.NUM,SUB.FLG,HD1,HD2)
   RETURN
9000 CALL JOB.FG.INQ.RPT(CONO,CO.NAME,JOB.NUM,HD1,HD2)
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
   GOTO 99999
*
99990 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
99999 *
END
