  SUBROUTINE JOB.CSR.MEMO.INQ(CONO,JOB.NUM,MAT JOB.REC)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*********************************************************************
*
* Copyright 1995 by Vercom Software Inc.
*
* REVISION - [01.0]
*
* PROGRAM  - CSR.MEMO.TRACK.MAINT
*
* AUTHOR   - GEORGE KUZMIAK
*
* DATE     - 03/27/95
*
* DESCRIPTION
*
* This program is used to maintaing the  CSR memo tracking file
* (CSR.MEMO.TRACK). Program uses SCREEN.INPUT functionality.
*
*T21177 diane 11/06/1996 * REV11 UPG
*T25596 cm 03/01/2001 * Add/Create an inquiry screen from Job Inquiry.
*T25967 ajibaly 07/25/2001 * View memos from job inquiry
*T26334 epitka 12/19/2001 * REV12
*T26731 adelgado 07/08/2002 * Allow to view multiple CSR Memo per job.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>SECURITY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>PMC.CPYLIB>CSR.MEMO.TRACK
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*--- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- PRE-INITIALIZATION
*
  MAXL = ""
  LINE.SPACE = 1
  PAGE.SIZE = 5; BEGIN.PAGE = 11; OLD.START.LINE = 0
  PAGE.SIZE2 = 3 ; BEGIN.PAGE2 = 17; OLD.START.LINE2 = 0
*
*---- OPEN ALL FILES
*
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 91000
    GOTO 99999
  END
  OPEN "","CSR.MEMO.TRACK" TO CSR.MEMO.TRACK ELSE
    ERRMSG = "CANNOT OPEN CSR.MEMO.TRACK FILE"
    GOSUB 91000
    GOTO 99999
  END
  OPEN "","SECURITY" TO SECURITY ELSE
    ERRMSG = "CANNOT OPEN SECURITY FILE"
    GOSUB 91000
    GOTO 99999
  END
  OPEN "","PO" TO PO ELSE
    ERRMSG = "CANNOT OPEN PO FILE"
    GOSUB 91000
    GOTO 99999
  END
  OPEN "","OUTSIDE.PO" TO OUTSIDE.PO ELSE
    ERRMSG = "CANNOT OPEN OUTSIDE.PO FILE"
    GOSUB 91000
    GOTO 99999
  END
  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "CANNOT OPEN INVENTORY FILE"
    GOSUB 91000
    GOTO 99999
  END
*
*---- INITIALIZATION
*
  TODAY=DATE()
*
*---- PRINT SCREEN
*
  CURR.REF.NO = ""
  CSR.MEMO.TRACK.ID = ""
*
*---- MAIN PROCESSING
*
100 *
* T26731 v
  MEMO.CNT = DCOUNT(JOB.CSR.MEMO, VM) ; GET.OUT = 0
  FOR CURR.REF.NO = MEMO.CNT TO 1 STEP -1 UNTIL (GET.OUT)
    CSR.MEMO.TRACK.ID = JOB.CSR.MEMO<1,CURR.REF.NO>
*T25967 v
*  MATREADU CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK, CONO:JOB.NUM ELSE
*  MATREADU CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK, CONO:JOB.NUM"R%8" ELSE
    MATREADU CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK, CONO:CSR.MEMO.TRACK.ID ELSE
*T25967 ^
*     GOTO 99999
      CONTINUE
    END
    LINES = DCOUNT(CSR.MEMO,VM)
    LINES2 = DCOUNT(CSR.RESP<1,1>,SM)
    REF.NO = 1
    REF.NO2 = 1
    RESP.FLAG = ''
* T26731 v
    SCV.REC(2)<ECD.SCRN.NO> = CSR.MEMO.TRACK.ID
    GOSUB 80000
    GOSUB 81000
    GOSUB 82000
    GOSUB 500
  NEXT CURR.REF.NO
  GOTO 99999
* T26731 ^
*
*---- GET OPERATOR REPLY
*
500 *
* T26731 v
  LOOP.DONE = 0
  LOOP
* T26731 ^
    ECD.NUM = 58
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPT = ECD.RET.VALUE
    BEGIN CASE
      CASE OPT = "R"
        GOSUB 600
        IF ECD.RET.VALUE # 'END' THEN
          RESP.FLAG = ''
          REF.NO = ECD.RET.VALUE
          LINES2 = DCOUNT(CSR.RESP<1,REF.NO>,SM)
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
          P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = ""
          P_X  := AM:1 ; P_Y := AM:SLN ; P_VALUE := AM:"*"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          GOSUB 82000
          GOSUB 501
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
          P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = ""
          P_X  := AM:1 ; P_Y := AM:SLN ; P_VALUE := AM:" "
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          LINES2 = DCOUNT(CSR.RESP<1,1>,SM)
          REF.NO = 1
          REF.NO2 = 1
          GOSUB 81000
          GOSUB 82000
        END
      CASE OPT[1,1] = 'S'
        OPT4 = OPT[2,1]
        BEGIN CASE
          CASE OPT4 = '' OR OPT4 = 'F'
            REF.NO = REF.NO + PAGE.SIZE
            IF REF.NO GT LINES THEN REF.NO = 1
          CASE OPT4 = 'R'
            REF.NO = REF.NO - PAGE.SIZE
            IF REF.NO LT 1 THEN REF.NO = 1
          CASE OPT4 = 'T'
            REF.NO = 1
          CASE OPT4 = 'B'
            REF.NO = LINES
            IF REF.NO LT 1 THEN REF.NO = 1
        END CASE
        GOSUB 81000
* T26731 v
      CASE OPT = 'N' AND CURR.REF.NO = 1
        CURR.REF.NO = MEMO.CNT+1 ; LOOP.DONE = 1
      CASE OPT = 'N'
        LOOP.DONE = 1
      CASE OPT = ''
        LOOP.DONE = 1 ; GET.OUT = 1
      CASE 1
        ERRMSG = 'INVALID RESPONSE' ; GOSUB 91000
    END CASE
  UNTIL (LOOP.DONE) DO REPEAT
* GOTO 500
  RETURN
* T26731 ^
*
*---- MEMO RESPONSE LINE
*
501 *
  ECD.NUM = 59
  ECD.ACTION = 4;CALL SCRN.EDIT
  OPT2 = ECD.RET.VALUE
  BEGIN CASE
    CASE OPT2[1,1] = 'S'
      OPT3 = OPT2[2,1]
      BEGIN CASE
        CASE OPT3 = '' OR OPT3 = 'F'
          REF.NO2 = REF.NO2 + PAGE.SIZE2
          IF REF.NO2 GT LINES2 THEN REF.NO2 = 1
        CASE OPT3 = 'R'
          REF.NO2 = REF.NO2 - PAGE.SIZE2
          IF REF.NO2 LT 1 THEN REF.NO2 = 1
        CASE OPT3 = 'T'
          REF.NO2 = 1
        CASE OPT3 = 'B'
          REF.NO2 = LINES2
          IF REF.NO2 LT 1 THEN REF.NO2 = 1
      END CASE
      GOSUB 82000
    CASE 1
      RETURN
  END CASE
  GOTO 501
*
*---- GET LINE NUMBER FOR MEMO
*
600 *
  GOSUB 81000
  ECD.NUM = 52
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      RETURN
    CASE ECD.RET.VALUE GE MINV AND ECD.RET.VALUE LE MAXV 
      MINV = '' ; MAXV = ''
      RETURN
    CASE 1
      ERRMSG = '** OUT OF RANGE **'; GOSUB 91000; GOTO 600
  END CASE
  RETURN
*
*---- GET LINE NUMBER FOR RESPONSE
*
610 *
  GOSUB 82000
  ECD.NUM = 52
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      RETURN
    CASE ECD.RET.VALUE GE MINV2 AND ECD.RET.VALUE LE MAXV2
      MINV2 = '' ; MAXV2 = ''
      RETURN
    CASE 1
      ERRMSG = '** OUT OF RANGE **'; GOSUB 91000; GOTO 610
  END CASE
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
* T26731 v
  * SCV.REC(2)<ECD.SCRN.NO> = JOB.NUM
  SCV.REC(2)<ECD.SCRN.NO> = CSR.MEMO.TRACK.ID
* T26731 ^
  SCV.REC(3)<ECD.SCRN.NO> = CSR.STATUS
  IF CSR.STATUS="P" THEN
    SCV.REC(4)<ECD.SCRN.NO> = "PURGE"
  END ELSE
    SCV.REC(4)<ECD.SCRN.NO> = "     "
  END
  SCV.REC(5)<ECD.SCRN.NO> = CSR.SEC.CODE
  SCV.REC(6)<ECD.SCRN.NO> = ""
  IF CSR.SEC.CODE # "" THEN
    CNTL.ID=CONO:CSR.SEC.CODE
    GOSUB 85100
    SCV.REC(6)<ECD.SCRN.NO> = USERNAME
  END
  SCV.REC(7)<ECD.SCRN.NO> = CSR.CUST.NUM
  SCV.REC(8)<ECD.SCRN.NO> = CUST.NAME
  SCV.REC(9)<ECD.SCRN.NO> = CSR.SALES.ORD.NUM
  SCV.REC(15)<ECD.SCRN.NO> = CSR.PO.TYPE
  SCV.REC(10)<ECD.SCRN.NO> = CSR.PO.NUM
  SCV.REC(11)<ECD.SCRN.NO> = CSR.JOB.NUM
  SCV.REC(12)<ECD.SCRN.NO> = CSR.INVENTORY.NUM
  SCV.REC(13)<ECD.SCRN.NO> = CSR.EST.NUM
  SCV.REC(14)<ECD.SCRN.NO> = CSR.INVOICE.NUM
  SCV.REC(29)<ECD.SCRN.NO> = CSR.FU.DATE
  IF CSR.PO.NUM # '' AND CSR.PO.TYPE = '' THEN
    READ REC FROM PO, CONO:CSR.PO.NUM THEN
      CSR.PO.TYPE = 'R'
    END ELSE
      READ REC FROM OUTSIDE.PO, CONO:CSR.PO.NUM THEN
        CSR.PO.TYPE = 'O'
      END
    END
  END
  SCV.REC(15)<ECD.SCRN.NO> = CSR.PO.TYPE
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  RETURN
*
*---- LOAD MEMO DATA (MULTI-LINE)
*
81000 *
  START.LINE = 1 + INT((REF.NO-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 81001
  CNT = 1
  MINV = START.LINE ; MAXV = LAST.LINE
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X = 2 ; P_Y = SLN ; P_VALUE = N'R#3'; P_OPT = 'CL'
    P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO<1,N>'L#60'
    P_X := AM:68 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(CSR.MEMO.DATE<1,N>,'D2/')'L#8'
    P_X := AM:77 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.MEMO.CODE<1,N>'L#3'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X = 2 ; P_Y = SLN ; P_VALUE = '' ; P_OPT = 'CL'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
81001 *
  LINES = DCOUNT(CSR.MEMO<1>,VM)
  RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE) - RESPONSE LINES
*
82000 *
  START.LINE = 1 + INT((REF.NO2-1)/PAGE.SIZE2)*PAGE.SIZE2
  LAST.LINE = START.LINE + PAGE.SIZE2 - 1
  IF LAST.LINE > LINES2 THEN LAST.LINE = LINES2
  IF START.LINE = OLD.START.LINE THEN GOTO 82001
  CNT = 1
  MINV2 = START.LINE ; MAXV2 = LAST.LINE
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
    P_X = 1 ; P_Y = SLN ; P_VALUE = N'R#4'; P_OPT = ''
    P_X := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:CSR.RESP<1,REF.NO,N>'L#60'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE2
    SLN = BEGIN.PAGE2 + LINE.SPACE * MOD(N-1,PAGE.SIZE2)
    P_X = 1 ; P_Y = SLN ; P_VALUE = '' ; P_OPT = 'CL'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
82001 *
  LINES2=DCOUNT(CSR.RESP<1,REF.NO>,SM)
  RETURN
*
*---- GET USER NAME
*
85100 *
  MATREAD SEC.REC FROM SECURITY, CNTL.ID THEN
    USERNAME = SEC.NAME
  END ELSE
    USERNAME = "UNKNOWN"
  END
  RETURN
*
*--- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
  ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
  ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
*
*---- END OF PROGRAM
*
*
99999 *
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
