*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.FNGD.SHP
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - FNGD.SHP.MAINT
* BY          - ANN POWLEY, C.B.A.
* DATE        - 02/02/87
* DESCRIPTION
*    This program ships Finished goods & Semi-finished goods
*T22713 diane 05/12/1998 * REMOVE CALL TO EDIT.SUB TYP=0
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>DAILY.FNGD.SHIP
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>JOB.STAT.CODE
* T21796      DIM SAVE.CUST.REC(75)
DIM SAVE.CUST.REC(CUST.REC.SIZE)
SYS.TYPE=1
CALL SYSCOM(MAT SYSCOM.REC)
MAT FILE.VARS=''
OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='M.SCREENS FILE IS MISSING';GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE IS MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING';GOTO 93000
OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG='CUSTOMER.XREF FILE IS MISSING';GOTO 93000
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING';GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000
OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000
OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING';GOTO 93000
OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING';GOTO 93000
OPEN '','OPERATION' TO OPERATION ELSE ERRMSG='OPERATION FILE IS MISSING';GOTO 93000
OPEN '','TAX' TO TAX ELSE ERRMSG='TAX FILE IS MISSING';GOTO 93000
OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILAGE.CODES FILE IS MISSING';GOTO 93000
OPEN '','DAILY.FNGD.SHIP' TO DAILY.FNGD.SHIP ELSE ERRMSG='DAILY.FNGD.SHIP FILE IS MISSING';GOTO 93000
OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG='JOB.SHIP FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.LOC FILE IS MISSING';GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG='JOB.STATS FILE IS MISSING';GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
IF FILEINFO(INV_SERIAL,0)=0 THEN                   
  OPEN '','INV_SERIAL' TO INV_SERIAL ELSE          
    ERRMSG="INV_SERIAL FILE  IS MISSING";GOTO 93000
  END                                              
END                                                
MAT COMP.REC=''
CONO=''
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO='END' THEN GOTO 99999
IF CO.OPS = "Y" THEN
  ERRMSG = "Sorry, cannot utilize this function with the OPS module"
  GOSUB 91000; GOTO 99999
END
*
*** INITIALIZATION
*
MAT EDIT.COM='' ; MAT EDIT.COM.DRIVER='' ; MAT GEN.XREF.REC=''
DASHES=STR('-',80);MAT JSI.REC=""
ERRMSG=''
UNKNOWN='????????????????????'
GXR.CO=CONO
GXR.HEADING<1,2>='DESCRIPTION'
GXR.ATT<1,1>=0
GXR.ATT<1,2>=2
GXR.LEN<1,1>=5
GXR.LEN<1,2>=30
* MAIN PROCESSING
ECD.SCRN.CNT=2
ECD.SCRN.NAME<1>='FNGD.SHP.MAINT'
ECD.SCRN.NAME<2>='FNGD.SHP.MAINT.SUB'
ECD.ACTION=1;CALL SCRN.EDIT
ECD.SCRN.NO=1
BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1
OLD.START.LINE = 0; LN = 1; LINES = 0
100*
MAT JOB.REC = ""; MAT DFGS.REC = ""; MAT DIV.REC = ""; MAT DEPT.REC = ""
MAT CCTR.REC = ""; MAT OPER.REC = ""; MAT CUST.REC = ""
MAT SCV.REC = ""; MAT JSTAT.REC = ""
JSTAT.AVAIL = 1
ECD.ACTION=6;CALL SCRN.EDIT
ECD.NUM=5
ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=DAILY.FNGD.SHIP; ECD.PREFIX.ID=CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE='END'
    GOTO 99999
  CASE ECD.RET.VALUE='N'
    DFGS.SEQ.NO = ECD.RET.VALUE
200*
    ECD.NUM=6
    ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=JOB; ECD.PREFIX.ID=CONO
    ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN GOTO 100
    FOR I=1 TO JOB.REC.SIZE; JOB.REC(I)=ECD.VALDAT.ITEM<I>; NEXT I
    MATREAD JSTAT.REC FROM JOB.STATS, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "No finished goods available from shipping."
      GOSUB 91000
      GOTO 200
    END
    BEGIN CASE
      CASE JOB.STATUS<1,1>=9
        ERRMSG="THIS JOB IS CANCELLED";GOSUB 91000;GOTO 200
      CASE JOB.STATUS<1,1>=7
        ERRMSG="THIS JOB IS READY TO PURGE";GOSUB 91000;GOTO 200
      CASE JOB.STATUS<1,1>=8
        ERRMSG="THIS JOB IS PURGED";GOSUB 91000;GOTO 200
    END CASE
    JS.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # "")
    TOT.JS.QTY = 0
    FOR I = 1 TO JS.CNT
      TOT.JS.QTY = TOT.JS.QTY + JSTAT.SHP.QTY<1,I>
    NEXT I
    IF TOT.JS.QTY = 0 THEN
      ERRMSG = "No finished goods available from shipping."
      GOSUB 91000
      GOTO 200
    END
    IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
201*
      X=0;Y=23;MAXL=3;TYP=11;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
      PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE="END" THEN GOTO 200
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
        MAT JSI.REC =""
        ERRMSG="NOT VALID INITIALS. TRY AGAIN"
        GOSUB 91000;GOTO 201
      END
      DFGS.INIT=VALUE
    END
    DFGS.JOB=ECD.RET.VALUE
    SAVE.FINISH.QTY=JOB.QTY<1,2>
    MATREAD CUST.REC FROM CUSTOMER, CONO : JOB.CUST ELSE
      MAT CUST.REC=''
      CUST.NAME=UNKNOWN; CUST.ADDR1=UNKNOWN
      CUST.ADDR2=UNKNOWN; CUST.ADDR3=UNKNOWN; CUST.ADDR4=UNKNOWN
    END
    DFGS.SOLD.TO = JOB.CUST
    IF CUST.ADDR4 # "" THEN
      ADDR4=CUST.ADDR4:"  ":CUST.ZIP
    END ELSE
      ADDR4=CUST.ZIP
    END
    ECD.NUM=8; SCV.REC(ECD.NUM)<1>=JOB.CUST; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=10; SCV.REC(ECD.NUM)<1>=CUST.NAME; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=12; SCV.REC(ECD.NUM)<1>=CUST.ADDR1; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=14; SCV.REC(ECD.NUM)<1>=CUST.ADDR2; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=16; SCV.REC(ECD.NUM)<1>=CUST.ADDR3; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=34; SCV.REC(ECD.NUM)<1>=ADDR4; ECD.ACTION=5;CALL SCRN.EDIT
    MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE MAT DIV.REC = ""; DIV.DESC=UNKNOWN
    DFGS.DIV=JOB.DIV
    ECD.NUM=18; SCV.REC(ECD.NUM)<1>=DFGS.DIV; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=19; SCV.REC(ECD.NUM)<1>=DIV.DESC; ECD.ACTION=5;CALL SCRN.EDIT
    IF JOB.DEPT # "" THEN
      DFGS.DEPT=JOB.DEPT
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:DFGS.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
      ECD.NUM=20; SCV.REC(ECD.NUM)<1>=DFGS.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=21; SCV.REC(ECD.NUM)<1>=DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
    END
    FOR REQUEST=1 TO 8
      ON REQUEST GOSUB 1100,1400,1200,1300,1500,1600,1700,1800
      IF ECD.RET.VALUE='END' THEN GOTO 100
    NEXT REQUEST
    NEW=1
    GOSUB 2000
    IF NEW='END' THEN GOTO 100
  CASE ECD.VALDAT.ITEM # ''
    *   FOR I=1 TO DFGS.REC.SIZE; DFGS.REC(I)=ECD.VALDAT.ITEM<I>; NEXT I
    DFGS.SEQ.NO=ECD.RET.VALUE
      * T26126 v
    MATREADU DFGS.REC FROM DAILY.FNGD.SHIP, CONO:DFGS.SEQ.NO LOCKED
      ERRMSG = 'FNGD SHIPPING record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 100 
    END ELSE
      * T26126 ^
      ERRMSG = "Can't read Daily finished goods shipping file"
      GOSUB 91000
      GOTO 100
    END
    MATREAD JOB.REC FROM JOB, CONO:DFGS.JOB ELSE JOB.DESC=UNKNOWN
    IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
301*
      X=0;Y=23;MAXL=3;TYP=11;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
      PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE="END" THEN GOTO 100
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
        MAT JSI.REC =""
        ERRMSG="NOT VALID INITIALS. TRY AGAIN"
        GOSUB 91000;GOTO 301
      END
      DFGS.INIT=VALUE
    END
    MATREAD JSTAT.REC FROM JOB.STATS, CONO:DFGS.JOB ELSE
      ERRMSG = "No finished goods available from shipping."
      GOSUB 91000
      JSTAT.AVAIL = 0
    END
    IF JOB.STATUS<1,1>=9 THEN
      ERRMSG="THIS JOB IS CANCELLED";GOSUB 91000;GOTO 100
    END
    JS.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # "")
    TOT.JS.QTY = 0
    FOR I = 1 TO JS.CNT
      TOT.JS.QTY = TOT.JS.QTY + JSTAT.SHP.QTY<1,I>
    NEXT I
    IF TOT.JS.QTY = 0 THEN
      ERRMSG = "No finished goods available from shipping."
      GOSUB 91000
      JSTAT.AVAIL = 0
    END
    SAVE.FINISH.QTY=JOB.QTY<1,2>
    MATREAD CUST.REC FROM CUSTOMER, CONO : JOB.CUST ELSE
      MAT CUST.REC=''
      CUST.NAME=UNKNOWN; CUST.ADDR1=UNKNOWN
      CUST.ADDR2=UNKNOWN; CUST.ADDR3=UNKNOWN; CUST.ADDR4=UNKNOWN
    END
    MATREAD DIV.REC FROM DIVISION, CONO:DFGS.DIV ELSE DIV.DESC=UNKNOWN
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:DFGS.DEPT ELSE DEPT.DESC=UNKNOWN
    MATREAD CCTR.REC FROM COST.CNTR, CONO:DFGS.CCTR ELSE CCTR.DESC=UNKNOWN
    IF CCTR.TYPE='F' THEN CCTR.DESC="COST CENTER IS FROZEN"
    MATREAD OPER.REC FROM OPERATION, CONO:DFGS.OPER ELSE OPER.DESC=UNKNOWN
    MATREAD TAX.REC FROM TAX, CONO : DFGS.TAX.JUR ELSE TAX.JUR = UNKNOWN
    MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:DFGS.SHIP.VIA ELSE SHPV.DESC = UNKNOWN
    IF CUST.ADDR4 # "" THEN
      ADDR4=CUST.ADDR4:"  ":CUST.ZIP
    END ELSE
      ADDR4=CUST.ZIP
    END
    SCV.REC(6)<1>=DFGS.JOB
    SCV.REC(8)<1>=DFGS.SOLD.TO
    SCV.REC(9)<1>=DFGS.SHIP.TO
    SCV.REC(10)<1>=CUST.NAME
    SCV.REC(11)<1>=DFGS.SHIP.NAME
    SCV.REC(12)<1>=CUST.ADDR1
    SCV.REC(13)<1>=DFGS.SHIP.ADDR1
    SCV.REC(14)<1>=CUST.ADDR2
    SCV.REC(15)<1>=DFGS.SHIP.ADDR2
    SCV.REC(16)<1>=CUST.ADDR3
    SCV.REC(17)<1>=DFGS.SHIP.ADDR3
    SCV.REC(34)<1>=ADDR4
    SCV.REC(35)<1>=DFGS.SHIP.CI.ST
    SCV.REC(18)<1>=DFGS.DIV
    SCV.REC(19)<1>=DIV.DESC
    SCV.REC(20)<1>=DFGS.DEPT
    SCV.REC(21)<1>=DEPT.DESC
    SCV.REC(22)<1>=DFGS.CCTR
    SCV.REC(23)<1>=CCTR.DESC
    SCV.REC(24)<1>=DFGS.OPER
    SCV.REC(25)<1>=OPER.DESC
    SCV.REC(37)<1>=DFGS.SHIP.DATE
    SCV.REC(38)<1>=DFGS.SHIP.VIA
    SCV.REC(39)<1>=SHPV.DESC
    SCV.REC(40)<1>=DFGS.TAX.JUR
    SCV.REC(41)<1>=TAX.JUR
    SCV.REC(42)<1>=DFGS.SHIP.TYPE
    GOSUB 3000
    SCV.REC(47)<1> = DFGS.SPOIL.CODE
    IF CO.SPOIL.FLG = "Y" AND DFGS.SHIP.TYPE = "S" THEN
      READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:DFGS.SPOIL.CODE ELSE SPOIL.CODE.DESC = "SPOIL CODE UNKNOWN"
    END ELSE
      SPOIL.CODE.DESC = ""
    END
    SCV.REC(48)<1> = SPOIL.CODE.DESC
    LINES = COUNT(DFGS.SHIP.DESC,VM) + (DFGS.SHIP.DESC # "")
    NEW=0
    GOSUB 4000
  CASE 1
    ERRMSG='* * INVALID SEQUENCE # * *'
    GOSUB 91000 ; GOTO 100
END CASE
MORE=1
LOOP
  ECD.NUM=32
  SCV.REC(ECD.NUM)<1>=''
  ECD.ACTION=4;CALL SCRN.EDIT
  REQUEST=ECD.RET.VALUE
  BEGIN CASE
    CASE REQUEST='END' OR REQUEST='E'
      MORE=0
      RELEASE
    CASE NUM(REQUEST)
      ON REQUEST GOSUB 1100,1400,1200,1300,1500,1600,1700,1800
    CASE REQUEST='N'
      IF JSTAT.AVAIL THEN GOSUB 2000 ELSE
        ERRMSG = "No finished goods available from shipping."
        GOSUB 91000
      END
    CASE REQUEST = 'F'
      X = 0; Y = 23; TYP = 18; O.R = "O"; PMSG = "Is this the last shipment (Y/RTN) :"
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE # "END" THEN
        IF DFGS.SEQ.NO = "N" THEN
          READU DSP.SEQ.NO FROM CONTROL, CONO:"DAILY.SHIP" ELSE DSP.SEQ.NO=10001
          LOOP
            READ CK.FLG FROM JOB.SHIP , CONO:DSP.SEQ.NO ELSE CK.FLG = ""
          WHILE CK.FLG # "" DO
            DSP.SEQ.NO = DSP.SEQ.NO + 1
          REPEAT
          SHIP.SEQ=DSP.SEQ.NO + 1
          WRITE SHIP.SEQ ON CONTROL, CONO:"DAILY.SHIP"
          ECD.NUM = 5
          SCV.REC(ECD.NUM)<1>=DSP.SEQ.NO
          DFGS.SEQ.NO = DSP.SEQ.NO
          ECD.ACTION=5;CALL SCRN.EDIT
          ERRMSG = "Please Note Down New Sequence Number" ; GOSUB 91000
        END
        DFGS.LAST = VALUE
        DFGS.PRT.DATE = ""
        MATWRITE DFGS.REC ON DAILY.FNGD.SHIP, CONO:DFGS.SEQ.NO
        MORE=0
      END
    CASE REQUEST='D'
      X=0;Y=23;MAXL=1;TYP=18;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
      PMSG="You are about to delete this transaction ok (Y/N) : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "Y" THEN
        DELETE DAILY.FNGD.SHIP , CONO:DFGS.SEQ.NO
        MORE = 0
      END
      RELEASE
  END CASE
WHILE MORE DO REPEAT
GOTO 100
1100*
ECD.NUM=9
ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=CUSTOMER; ECD.PREFIX.ID=CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE='END'
  CASE ECD.RET.VALUE='SAME'
    IF CUST.ADDR4 # "" THEN
      ADDR4=CUST.ADDR4:"  ":CUST.ZIP
    END ELSE
      ADDR4=CUST.ZIP
    END
    DFGS.SHIP.TO=ECD.RET.VALUE
    DFGS.SHIP.NAME=CUST.NAME
    DFGS.SHIP.ADDR1=CUST.ADDR1
    DFGS.SHIP.ADDR2=CUST.ADDR2
    DFGS.SHIP.ADDR3=CUST.ADDR3
    DFGS.SHIP.CI.ST=ADDR4
  CASE ECD.RET.VALUE='000000'
    DFGS.SHIP.TO=ECD.RET.VALUE
1101*
    ECD.NUM=11; ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE='END'
        GOTO 1109
      CASE 1
        DFGS.SHIP.NAME=ECD.RET.VALUE
    END CASE
1102*
    ECD.NUM=13; ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE='END'
        GOTO 1109
      CASE 1
        DFGS.SHIP.ADDR1=ECD.RET.VALUE
    END CASE
1103*
    ECD.NUM=15; ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE='END'
        GOTO 1109
      CASE 1
        DFGS.SHIP.ADDR2=ECD.RET.VALUE
    END CASE
1104*
    ECD.NUM=17; ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE='END'
        GOTO 1109
      CASE 1
        DFGS.SHIP.ADDR3=ECD.RET.VALUE
    END CASE
1105*
    ECD.NUM=35;ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE='END'
        GOTO 1109
      CASE 1
        DFGS.SHIP.CI.ST=ECD.RET.VALUE
    END CASE
1109*
  CASE ECD.VALDAT.ITEM # ''
    DFGS.SHIP.TO=ECD.RET.VALUE
    MAT SAVE.CUST.REC=MAT CUST.REC
    IF CUST.ADDR4 # "" THEN
      ADDR4=CUST.ADDR4:"  ":CUST.ZIP
    END ELSE
      ADDR4=CUST.ZIP
    END
    FOR K=1 TO CUST.REC.SIZE; CUST.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
    DFGS.SHIP.NAME=CUST.NAME
    DFGS.SHIP.ADDR1=CUST.ADDR1
    DFGS.SHIP.ADDR2=CUST.ADDR2
    DFGS.SHIP.ADDR3=CUST.ADDR3
    IF CUST.ADDR4 # "" THEN
      DFGS.SHIP.CI.ST=CUST.ADDR4:"  ":CUST.ZIP
    END ELSE
      DFGS.SHIP.CI.ST=CUST.ZIP
    END
    MAT CUST.REC=MAT SAVE.CUST.REC
  CASE 1
    GOTO 1100
END CASE
ECD.NUM=11; SCV.REC(ECD.NUM)<1>=DFGS.SHIP.NAME; ECD.ACTION=5;CALL SCRN.EDIT
ECD.NUM=13; SCV.REC(ECD.NUM)<1>=DFGS.SHIP.ADDR1; ECD.ACTION=5;CALL SCRN.EDIT
ECD.NUM=15; SCV.REC(ECD.NUM)<1>=DFGS.SHIP.ADDR2; ECD.ACTION=5;CALL SCRN.EDIT
ECD.NUM=17; SCV.REC(ECD.NUM)<1>=DFGS.SHIP.ADDR3; ECD.ACTION=5;CALL SCRN.EDIT
ECD.NUM=35; SCV.REC(ECD.NUM)<1>=DFGS.SHIP.CI.ST; ECD.ACTION=5;CALL SCRN.EDIT
RETURN
1200*
ECD.NUM=22
ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=COST.CNTR; ECD.PREFIX.ID=CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE='END'
  CASE ECD.VALDAT.ITEM # ''
    FOR K=1 TO CCTR.REC.SIZE; CCTR.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
    IF CCTR.TYPE = 'F' THEN
      ERRMSG = "THIS COST CENTER IS FROZEN"
      GOSUB 91000; GOTO 1200
    END
    BEGIN CASE
      CASE JOB.DEPT = CCTR.DEPT
      CASE JOB.DEPT = CCTR.DEPT[1,LEN(JOB.DEPT)]
      CASE LEN(JOB.DEPT) = 2 AND JOB.DEPT = CCTR.DEPT[1,2]
      CASE 1
        ERRMSG = "THIS JOB BELONGS TO DIFFERENT DEPARTMENT"
        GOSUB 91000; GOTO 1200
    END CASE
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
      ERRMSG = "COST CENTER DEPARTMENT IS MISSING"
      GOSUB 91000; GOTO 1200
    END
    DFGS.CCTR=ECD.RET.VALUE
    DFGS.DEPT=CCTR.DEPT
    ECD.NUM=20; SCV.REC(ECD.NUM)<1>=DFGS.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=21; SCV.REC(ECD.NUM)<1>=DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM=23; SCV.REC(ECD.NUM)<1>=CCTR.DESC; ECD.ACTION=5;CALL SCRN.EDIT
  CASE ECD.RET.VALUE='???'
    IF JOB.DEPT = "" THEN
      GXR.XREF=DIVISION
      GXR.FILE=DEPARTMENT
      GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
      GXR.HEADING<1,1>='DEPT'
      GXR.ATT<1,2>=2
      GXR.LOC=2
      GXR.ID=''
      GXR.SRCH.ID=DFGS.DIV
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 4000; GOTO 1200
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
        ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
        ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 4000; GOSUB 91000; GOTO 1200
      END
      DFGS.DEPT=GXR.ID
    END ELSE
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:JOB.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
      DFGS.DEPT = JOB.DEPT
    END
    SCV.REC(20)<1>=DFGS.DEPT
    SCV.REC(21)<1>=DEPT.DESC
    GXR.XREF=DEPARTMENT
    GXR.FILE=COST.CNTR
    GXR.TOP.LINE='COST CENTER XREF SEARCH'
    GXR.HEADING<1,1>='CCTR'
    GXR.ATT<1,2>=1
    GXR.LOC=5
    GXR.ID=''
    GXR.SRCH.ID=DFGS.DEPT
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    ECD.ACTION=2;CALL SCRN.EDIT
    IF GXR.ID='' THEN GOSUB 4000; GOTO 1200
    MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
      ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
      GOSUB 91000; GOSUB 4000; GOTO 1200
    END
    IF CCTR.TYPE='F' THEN
      ERRMSG='COST.CNTR ':GXR.ID:' IS FROZEN'
      GOSUB 91000; GOSUB 4000; GOTO 1200
    END
    BEGIN CASE
      CASE JOB.DEPT = CCTR.DEPT
      CASE JOB.DEPT = CCTR.DEPT[1,LEN(JOB.DEPT)]
      CASE LEN(JOB.DEPT) = 2 AND JOB.DEPT = CCTR.DEPT[1,2]
      CASE 1
        ERRMSG = "THIS JOB BELONGS TO DIFFERENT DEPARTMENT"
        GOSUB 91000; GOSUB 4000; GOTO 1200
    END CASE
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
      ERRMSG = 'INCORRECT DEPARTMENT FOR COST CENTER ':GXR.ID
      GOSUB 91000; GOSUB 4000; GOTO 1200
    END
    DFGS.CCTR=GXR.ID
    DFGS.DEPT=CCTR.DEPT
    SCV.REC(20)<1>=DFGS.DEPT
    SCV.REC(21)<1>=DEPT.DESC
    SCV.REC(22)<1>=DFGS.CCTR
    SCV.REC(23)<1>=CCTR.DESC
    GOSUB 4000
  CASE 1
    GOTO 1200
END CASE
RETURN
1300*
ECD.NUM=24
OPER.CNT = COUNT(CCTR.OPER,VM) + (CCTR.OPER # "")
IF OPER.CNT = 1 THEN ECD.DEFAULT = CCTR.OPER<1,1>
ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=OPERATION; ECD.PREFIX.ID=CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
  CASE ECD.RET.VALUE='END'
  CASE ECD.VALDAT.ITEM # ''
    LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE
      ERRMSG='OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR # ':DFGS.CCTR
      GOSUB 91000; GOTO 1300
    END
    FOR K=1 TO OPER.REC.SIZE; OPER.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
    DFGS.OPER=ECD.RET.VALUE
    ECD.NUM=25; SCV.REC(ECD.NUM)<1>=OPER.DESC; ECD.ACTION=5;CALL SCRN.EDIT
  CASE ECD.RET.VALUE='???'
    GXR.XREF=COST.CNTR
    GXR.FILE=OPERATION
    GXR.TOP.LINE='OPERATION XREF SEARCH'
    GXR.HEADING<1,1>='OPER'
    GXR.ATT<1,2>=1
    GXR.LOC=4
    GXR.ID=''
    GXR.SRCH.ID=DFGS.CCTR
    CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    ECD.ACTION=2;CALL SCRN.EDIT
    IF GXR.ID='' THEN GOSUB 4000; GOTO 1300
    MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE
      ERRMSG='OPERATION ':GXR.ID:' IS MISSING'
      GOSUB 91000; GOSUB 4000; GOTO 1300
    END
    DFGS.OPER=GXR.ID
    SCV.REC(24)<1>=DFGS.OPER
    SCV.REC(25)<1>=OPER.DESC
    GOSUB 4000
  CASE 1
    GOTO 1300
END CASE
RETURN
*
*** ENTER SHIP DATE
*
1400 ECD.NUM = 37; ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
  DFGS.SHIP.DATE = ECD.RET.VALUE
  SCV.REC(ECD.NUM)<1> = DFGS.SHIP.DATE
END
RETURN
*
*** ENTER SHIP VIA
*
1500 ECD.NUM = 38
ECD.VALDAT.CODE = 2 ; ECD.VALDAT.FILE = SHIP.VIA ; ECD.PREFIX.ID = CONO
IF DFGS.SHIP.VIA = '' THEN ECD.DEFAULT = JOB.SHIP.VIA
ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
  DFGS.SHIP.VIA = ECD.RET.VALUE
  SCV.REC(ECD.NUM)<1> = DFGS.SHIP.VIA
  FOR SV = 1 TO SHIP.VIA.REC.SIZE ; SHIP.VIA.REC(SV) = ECD.VALDAT.ITEM<SV> ; NEXT SV
  ECD.NUM = 39 ;SCV.REC(ECD.NUM)<1> = SHPV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
END
RETURN
*
**** ENTER TAX JURISDICTION
*
1600 ECD.NUM = 40
SAVE.MSG = ""
CALL DESC.REFORMAT(CUST.TAX.JUR,"70",SAVE.MSG)
ECD.HMSG = SAVE.MSG
IF DFGS.TAX.JUR = '' THEN ECD.DEFAULT = CUST.TAX.JUR<1,1>
ECD.VALDAT.CODE = 2 ; ECD.VALDAT.FILE = TAX ; ECD.PREFIX.ID = CONO
ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE # 'END' THEN
  DFGS.TAX.JUR = ECD.RET.VALUE
  SCV.REC(ECD.NUM)<1> = DFGS.TAX.JUR
  FOR K = 1 TO TAX.REC.SIZE; TAX.REC(K) = ECD.VALDAT.ITEM<K>; NEXT K
  ECD.NUM = 41 ;SCV.REC(ECD.NUM)<1> = TAX.JUR;ECD.ACTION=5;CALL SCRN.EDIT
END
RETURN
*
*** ENTER SHIP TYPE
*
1700 ECD.NUM = 42
BEGIN CASE
  CASE JOB.TYPE = 'N'
    SCV.REC(42)<1> = JOB.TYPE ; ECD.NUM = 42 ;ECD.ACTION = 5
    CALL SCRN.EDIT
    DFGS.SHIP.TYPE = JOB.TYPE
  CASE JOB.TYPE = 'S'
    SCV.REC(42)<1> = JOB.TYPE ; ECD.NUM = 42 ;ECD.ACTION = 5
    CALL SCRN.EDIT
    DFGS.SHIP.TYPE = JOB.TYPE
  CASE JOB.TYPE = 'C'
    SCV.REC(42)<1> = JOB.TYPE ; ECD.NUM = 42 ;ECD.ACTION = 5
    CALL SCRN.EDIT
    DFGS.SHIP.TYPE = JOB.TYPE
  CASE 1
    ECD.ACTION = 4 ; CALL SCRN.EDIT
    IF ECD.RET.VALUE = 'END' THEN GOTO 1799
    IF ECD.RET.VALUE # 'END' THEN DFGS.SHIP.TYPE = ECD.RET.VALUE
END CASE
GOSUB 3000
ECD.NUM = 43;ECD.ACTION = 5;CALL SCRN.EDIT
1750 *
IF CO.SPOIL.FLG = 'Y' AND DFGS.SHIP.TYPE = 'S' THEN
  ECD.NUM = 47; ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 1700
  READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:ECD.RET.VALUE ELSE
    ERRMSG = "SPOILAGE CODE (":ECD.RET.VALUE:") NOT ON FILE"
    GOSUB 91000 ; GOTO 1750
  END
  DFGS.SPOIL.CODE = ECD.RET.VALUE
END ELSE
  DFGS.SPOIL.CODE = ''
  SPOIL.CODE.DESC = ''
  SCV.REC(47)<1> = ''
  ECD.NUM = 47; ECD.ACTION =5; CALL SCRN.EDIT
END
SCV.REC(48)<1> = SPOIL.CODE.DESC
ECD.NUM = 48; ECD.ACTION = 5; CALL SCRN.EDIT
1799 RETURN
*
*** ENTER SHIP DESCRIPTION
*
1800*
IF DFGS.SHIP.DESC = '' THEN
  LINES = 0
  ACTION = 'A'
  LOOP
    LN = LINES + 1
    OLD.LINES = LINES
    GOSUB 1820
  WHILE LINES > OLD.LINES DO REPEAT
  LN = LINES
END
GOSUB 1880
ANCORE = 1
LOOP
  ECD.NUM = 33
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
  ACTION = ECD.RET.VALUE
  BEGIN CASE
    CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
      ANCORE = 0
    CASE ACTION = 'A'
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 1820
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
      GOSUB 1880
    CASE ACTION = 'C'
      GOSUB 1860
      IF LN.NO THEN
        LN = LN.NO
        GOSUB 1820
      END
    CASE ACTION = 'D'
      GOSUB 1860
      IF LN.NO THEN
        LN = LN.NO
        DFGS.SHIP.DESC = DELETE(DFGS.SHIP.DESC,1,LN,0)
        LINES = COUNT(DFGS.SHIP.DESC,VM) + (DFGS.SHIP.DESC # "")
        IF LN > 1 AND LN > LINES THEN LN = LN - 1
        IF LN < 1 THEN LN = 1
        OLD.START.LINE = 0
      END
      GOSUB 1880
    CASE ACTION = 'S'
      LN = LN + PAGE.SIZE
      IF LN > LINES THEN LN = 1
      GOSUB 1880
      * T25978 v
    CASE ACTION = 'SR'
      LN -= PAGE.SIZE
      IF LN < 1 THEN LN = 1
      GOSUB 1880
    CASE ACTION = 'ST'
      LN = 1
      GOSUB 1880
    CASE ACTION = 'SB'
      LN = LINES
      GOSUB 1880
      * T25978 ^
  END CASE
WHILE ANCORE DO REPEAT
GOTO 1899
1820 *
GOSUB 1880
SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
8200 *
X = 8
Y = SLN
TYP = 1
MAXL = 70
O.R = 'O'
IF DFGS.SHIP.DESC<1,LN> # '' THEN
  DEFAULT = DFGS.SHIP.DESC<1,LN>
END
CALL EDIT.SUB
IF VALUE = 'END' OR VALUE = '' THEN
  IF ACTION = 'A' THEN
    DFGS.SHIP.DESC = DELETE(DFGS.SHIP.DESC,1,LN,0)
  END
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  GOTO 1840
END
DFGS.SHIP.DESC<1,LN> = VALUE
LINES = COUNT(DFGS.SHIP.DESC,VM) + (DFGS.SHIP.DESC # '')
1840 *
RETURN
1860 *
GOSUB 1880
ECD.NUM = 36; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
ECD.ACTION = 4; CALL SCRN.EDIT
LN.NO = ECD.RET.VALUE
IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
RETURN
1880 *
START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 1889
OLD.START.LINE = START.LINE
CNT = 1
FOR N = START.LINE TO LAST.LINE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
  P_X  := AM:8 ; P_Y := AM:SLN ; P_VALUE := AM:DFGS.SHIP.DESC<1,N> "L#70"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  CNT = CNT + 1
NEXT N
FOR M = CNT TO PAGE.SIZE
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
1889 *
RETURN
1899 RETURN
2000*
LOCATE DFGS.OPER IN CCTR.OPER<1>,1 SETTING OP ELSE OP=""
IF OP # "" THEN
  STD.COST=CCTR.OPER.HR.RATE<1,OP>
END ELSE
  STD.COST=""
END
ECD.SCRN.NO=2; ECD.ACTION=2;CALL SCRN.EDIT
CALL FNGD.SHP.MAINT.SUB(CONO,NEW,STD.COST,DFGS.SEQ.NO,SHPV.TRUCK.FLG)
IF NEW # 'END' THEN NEW=0
ECD.SCRN.NO=1; ECD.ACTION=2;CALL SCRN.EDIT
IF NEW # 'END' THEN GOSUB 4000
RETURN
3000*
BEGIN CASE
  CASE DFGS.SHIP.TYPE = 'N'
    SCV.REC(43)<ECD.SCRN.NO> = "NON CHARGEABLE"
  CASE DFGS.SHIP.TYPE = 'S'
    SCV.REC(43)<ECD.SCRN.NO> = "SPOILAGE"
  CASE DFGS.SHIP.TYPE = 'C'
    SCV.REC(43)<ECD.SCRN.NO> = "CHANGE ORDER"
  CASE 1
    SCV.REC(43)<ECD.SCRN.NO> = "REGULAR"
END CASE
RETURN
*
**** PRINTS FIRST SCREEN OUT
*
4000*
ECD.ACTION = 3 ; CALL SCRN.EDIT
OLD.START.LINE = 0; GOSUB 1880
RETURN
91000*     
ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
92000*     
ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
93000*     
ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
99999*     
*      PRINT @(-1)
END
