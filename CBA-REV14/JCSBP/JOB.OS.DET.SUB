   SUBROUTINE JOB.OS.DET.SUB(CONO,JOB.NUM,SUB.CNT,PTR)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.OS.DET.SUB
* DATE        - 03/12/84
* BY          - WALID YAMOUT , C.B.A
* MODIFY BY   - BILAL MOGHRABI, C.B.A   DATE - 12/21/88
* DESCRIPTION -
*T25171 lanny 05/17/2000 * Expand Sale Amount to 10 digits as in O/S PO
*                          Maint & Receipts.
*T26334 epitka 12/19/2001 * REV12
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>VEND
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>JCS.CPYLIB>OPERATION
*COPY>CPYLIB>CHAR
*
   DIM TRANS.REC(14)
   EQU TRAN.VEND        TO TRANS.REC(1)
   EQU TRAN.PO          TO TRANS.REC(2)
   EQU TRAN.NO          TO TRANS.REC(3)
   EQU TRAN.TYPE        TO TRANS.REC(4)
   EQU TRAN.INV         TO TRANS.REC(5)
   EQU TRAN.DATE        TO TRANS.REC(6)
   EQU TRAN.QTY         TO TRANS.REC(7)
   EQU TRAN.COST        TO TRANS.REC(8)
   EQU TRAN.SALE        TO TRANS.REC(9)
   EQU TRAN.JOB         TO TRANS.REC(10)
   EQU TRAN.VEND.NAME   TO TRANS.REC(11)
   EQU TRAN.OPER        TO TRANS.REC(12)
   EQU TRAN.OPER.DESC   TO TRANS.REC(13)
   EQU TRAN.PERIOD      TO TRANS.REC(14)
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
   UNKNOWN = STR("?",20); MAT TRANS.REC = ''
   PAGE.SIZE = 3; BEGIN.PAGE = 9; LINE.SPACE = 3; OLD.START.LINE = 0
**** MAIN PROCESS
   LN = 1; OLN = 1; LINES = JOB.OS.SEQ<1,PTR,1>
   OS.ID = CONO:JOB.NUM:"!":JOB.OS.DEPT<1,PTR>:"!":JOB.OS.CCTR<1,PTR>
   OS.ID = OS.ID:"!":JOB.OS.PLINE<1,PTR>:"!"
   GOSUB 100
   FOR K = 2 TO SUB.CNT
      OS.ID = CONO:JOB.SUBS<1,K-1>:"!":JOB.OS.DEPT<1,PTR>:"!":JOB.OS.CCTR<1,PTR>
      OS.ID = OS.ID:"!":JOB.OS.PLINE<1,PTR>:"!"
      OLN = LINES + 1; LINES = LINES + JOB.OS.SEQ<1,PTR,K>
      GOSUB 100
   NEXT K
   GOSUB 11000
   MORE = 1
   LOOP
      ECD.NUM = 52
      ECD.MAXL = 3
      ECD.O.R = 'O'
    * ECD.VALDAT = 'S'     ;* T25978
      ECD.ACTION = 4 ; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = '' OR ACTION = 'END'
            MORE = 0
         CASE ACTION = 'S'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 11000
      * T25978 v
         CASE ACTION = 'SR'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 11000
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 11000
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 11000
      * T25978 ^
      END CASE
   WHILE MORE DO REPEAT
   GOTO 99999
100*
   FOR I = OLN TO LINES
      MATREAD JOS.REC FROM JOB.OSP, OS.ID:(I-OLN+1) ELSE MAT JOS.REC = ""
      MATREAD VEND.REC FROM VEND , CONO:JOS.VEND ELSE
         VEND.DESC = UNKNOWN
      END
      MATREAD OPER.REC FROM OPERATION, CONO:JOS.OPER ELSE
         OPER.DESC = UNKNOWN
      END
      TRAN.VEND<1,I> = JOS.VEND
      TRAN.PO<1,I> = JOS.PO
      TRAN.NO<1,I> = JOS.SEQ
      TRAN.TYPE<1,I> = JOS.TYPE
      TRAN.INV<1,I> = JOS.INV
      TRAN.DATE<1,I> = JOS.DATE
      TRAN.QTY<1,I> = JOS.QTY
      TRAN.COST<1,I> = JOS.COST
      TRAN.SALE<1,I> = JOS.SALE
      TRAN.JOB<1,I> = JOS.RC.JOB
      TRAN.VEND.NAME<1,I> = VEND.DESC
      TRAN.OPER<1,I> = JOS.OPER
      TRAN.OPER.DESC<1,I> = OPER.DESC
      TRAN.PERIOD<1,I> = JOS.MON<1,1>
   NEXT I
   RETURN
**** SCROLL VALUES
11000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 11999
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.OPER<1,N> "L#4"
      P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.NO<1,N> "L#8"
      P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.DATE<1,N>, "D2/") "R#8"
      P_X  := AM:27 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.PERIOD<1,N> "R#6"
      P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.VEND<1,N> "L#8"
      P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.TYPE<1,N> "L#1"
      P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.JOB<1,N> "L#10"
      P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.PO<1,N> "L#8"
*25171   P_X  := AM:65 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.COST<1,N>, "MD2") "R#9"
      P_X  := AM:65 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.COST<1,N>, "MD2") "R#10"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 45 ; P_Y = SLN+1 ; P_VALUE = OCONV(TRAN.QTY<1,N>, "MD2") "R#10" ; P_OPT = ""
      P_X  := AM:56 ; P_Y := AM:SLN+1 ; P_VALUE := AM:TRAN.INV<1,N> "L#6"
*25171   P_X  := AM:65 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.SALE<1,N>, "MD2") "R#9"
      P_X  := AM:65 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.SALE<1,N>, "MD2") "R#10"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 4 ; P_Y = SLN+2 ; P_VALUE = TRAN.OPER.DESC<1,N> "L#29" ; P_OPT = ""
      P_X  := AM:34 ; P_Y := AM:SLN+2 ; P_VALUE := AM:TRAN.VEND.NAME<1,N> "L#28"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+2 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
11999 RETURN
**** RETURN TO THE CALLING PROGRAM
99999*
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END
