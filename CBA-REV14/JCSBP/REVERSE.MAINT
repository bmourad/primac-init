*COPY>CPYLIB>COM1
**************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC-JCS
* SOURCE      - JCSBP
* PROGRAM     - REVERSE.MAINT
* BY          - WALID YAMOUT, C.B.A
* DATE        - 03/17/86
* DESCRIPTION -
* markt 10/13/1998 * Add division security check
*T26184 alex 09/26/2001 * Fix how heading is displayed in GUI.
*T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26565 lhelms 04/24/2002 * Upgrade to rev12.  Change roll to serial.
*T26914 cmykleb 10/14/2002 * For MT only valid reverse type is Q or R.
*T27705 lross 11/14/2003 * Expand Serial to 15 chars.
*T28108 lross 05/03/2004 * Correct scrolling of trans data & serial ID's.
*T28273 lross 09/24/2004 * WIP$ should include all levels regardless of
*                          type 'Q' or 'R' for materials.
**************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.REVERSE
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
   DIM DREC(21)
   EQU DLINES      TO DREC(1)
   EQU DEPT.NO     TO DREC(2)
   EQU CCTR.NO     TO DREC(3)
   EQU PROD.NO     TO DREC(4)
   EQU WHSE.NO     TO DREC(5)
   EQU DEPT.REASON TO DREC(6)
   EQU DEPT.ORIG   TO DREC(7)
   EQU DEPT.COST   TO DREC(8)
   EQU DPTR        TO DREC(9)
   EQU TLINES      TO DREC(10)
   EQU TRAN.NO     TO DREC(11)
   EQU TRAN.TYPE   TO DREC(12)
   EQU TRAN.OPER   TO DREC(13)
   EQU TRAN.EMP    TO DREC(14)
   EQU TRAN.MON    TO DREC(15)
   EQU TRAN.WIP    TO DREC(16)
   EQU TRAN.ORIG   TO DREC(17)
   EQU TRAN.CURR   TO DREC(18)
   EQU TRAN.COST   TO DREC(19)
   EQU TRAN.STATUS TO DREC(20)
   EQU TRAN.SEQ    TO DREC(21)
   SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   OPEN "","JCS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT LOCATE JCS.SCREENS FILE"; GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "CANNOT LOCATE CUSTOMER FILE"; GOTO 93000
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG = "CANNOT LOCATE JOB FILE"; GOTO 93000
   END
   OPEN "","JOB.TIME" TO JOB.TIME ELSE
      ERRMSG = "CANNOT LOCATE JOB.TIME FILE"; GOTO 93000
   END
   OPEN "","JOB.MATL" TO JOB.MATL ELSE
      ERRMSG = "CANNOT LOCATE JOB.MATL FILE"; GOTO 93000
   END
   OPEN "","JOB.OSP" TO JOB.OSP ELSE
      ERRMSG = "CANNOT LOCATE JOB.OSP FILE"; GOTO 93000
   END
   OPEN "","JOB.SHIP" TO JOB.SHIP ELSE
      ERRMSG = "CANNOT LOCATE JOB.SHIP FILE"; GOTO 93000
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "CANNOT LOCATE INVENTORY FILE"; GOTO 93000
   END
   OPEN "","JOB.MISC" TO JOB.MISC ELSE
      ERRMSG = "CANNOT LOCATE JOB.MISC FILE"; GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT LOCATE CONTROL FILE"; GOTO 93000
   END
   OPEN "","DAILY.REVERSE" TO DAILY.REVERSE ELSE
      ERRMSG = "CANNOT LOCATE DAILY.REVERSE FILE"; GOTO 93000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT LOCATE COMPANY FILE"; GOTO 93000
   END
   OPEN "","PREFIX" TO PREFIX ELSE
      ERRMSG = "CANNOT LOCATE PREFIX FILE"; GOTO 93000
   END
   MAT COMP.REC = ""; CONO = ""; CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 999999
   MAT EDIT.COM.DRIVER = ""; MAT EDIT.COM = ""
   TYP = 0; CALL EDIT.SUB; FILL = "#"
   UNKNOWN = "UNKNOWN"
   DTYPE = "LB" :AM: "MT" :AM: "OS" :AM: "SP" :AM: "MS"
   DDESC = "LABOR" :AM: "MATERIAL" :AM: "OUTSIDE PURCHASES" :AM: "SHIPPING" :AM: "MISCELLANEOUS" :AM: "UNKNOWN"
  * T26184 v
  * HD1 = "" :AM: "Product Number  Whse" :AM: "Category" :AM: "" :AM: ""
  * HD2 = "Oper Employee" :AM: "Loc  Prd/Serl" :AM: "Oper Vendor" :AM: "Oper Ship Via" :AM: "Oper Reason"
   HD1 = "" :AM: "Product Number":VM:"Whse" :AM: "Category" :AM: "" :AM: ""
   HD2 = "Oper":VM:"Employee" :AM: "Loc":VM:"  Serial" :AM: "Oper":VM:"Vendor" :AM: "Oper":VM:"Ship Via" :AM: "Oper":VM:"Reason"
  * T26184 ^
   PAGE.SIZE = 4; LINE.SPACE = 1
   PAGE.SSIZE = 2; LINE.SSPACE = 2 ;*T27705
   BEGIN.PAGE = 9; BEGIN.SPAGE = 16
   ECD.SCRN.CNT = 1; ECD.SCRN.NAME = "REVERSE.MAINT"
   ECD.ACTION = 1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
100*
   MAT SCV.REC = ""; ECD.ACTION = 2; CALL SCRN.EDIT
   RELEASE   ;* T26126
101*
   ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 999999
      CASE ECD.RET.VALUE = "N"
         MAT DRV.REC = ""
         RCLS.SEQ.NO = ECD.RET.VALUE
150*
         ECD.NUM = 2; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 100
         DRV.DATE = ECD.RET.VALUE
200*
         ECD.NUM = 3; SCV.REC(ECD.NUM) = ""; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 100
         MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
            ERRMSG = "CANNOT LOCATE JOB - " : ECD.RET.VALUE
            GOSUB 91000; GOTO 200
         END
         BEGIN CASE
            CASE JOB.STATUS<1,1>=7
               ERRMSG = "JOB # (":ECD.RET.VALUE:") IS READY TO PURGE"
               GOSUB 91000; GOTO 200
            CASE JOB.STATUS<1,1>=8
               ERRMSG = "JOB # (":ECD.RET.VALUE:") HAS BEEN PURGED"
               GOSUB 91000; GOTO 200
            CASE JOB.STATUS<1,1>=9
               ERRMSG = "JOB # (":ECD.RET.VALUE:") HAS BEEN CANCELLED"
               GOSUB 91000; GOTO 200
         END CASE
*T23278 v
         DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 200
         END
*T23278 ^
         DRV.JOB = ECD.RET.VALUE
         ECD.NUM = 4; SCV.REC(ECD.NUM) = JOB.DESC<1,1>
         ECD.ACTION = 5; CALL SCRN.EDIT
         MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CUST.NAME = UNKNOWN
         DRV.CUST = JOB.CUST; DRV.DIV = JOB.DIV; DRV.DEPT = JOB.DEPT
         ECD.NUM = 5; SCV.REC(ECD.NUM) = JOB.CUST; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 6; SCV.REC(ECD.NUM) = CUST.NAME; ECD.ACTION = 5; CALL SCRN.EDIT
300*
         ECD.NUM = 7; ECD.VALDAT = "LB,MT,OS,SP,MS"
         ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 200
         LOCATE ECD.RET.VALUE IN DTYPE,1 SETTING T ELSE NULL
         DRV.TYPE = ECD.RET.VALUE
         ECD.NUM = 8; SCV.REC(ECD.NUM) = DDESC<T>
         ECD.ACTION = 5; CALL SCRN.EDIT
      * T26184 v
         ECD.NUM = 10; SCV.REC(ECD.NUM) = HD1<T,1>
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 39; SCV.REC(ECD.NUM) = HD1<T,2>
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 12; SCV.REC(ECD.NUM) = HD2<T,1>
         ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 36; SCV.REC(ECD.NUM) = HD2<T,2>
         ECD.ACTION = 5; CALL SCRN.EDIT
      * T26184 ^
400*
         ECD.NUM = 9
         IF DRV.TYPE = "MT" THEN
*T26914 v
            ECD.VALDAT = 'Q,R'
            ECD.HMSG = 'Reverse By (Q)ty or (R)eturn To Stock Qty'
*T26914 ^
            ECD.DEFAULT = "Q"; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "END" THEN GOTO 200
            DRV.TTYPE = ECD.RET.VALUE
         END ELSE
            DRV.TTYPE = "C"; SCV.REC(ECD.NUM) = DRV.TTYPE
            ECD.ACTION = 5; CALL SCRN.EDIT
         END
         IF DRV.TTYPE = "C" THEN
        * T26184 v
        * SCV.REC(13) = "Cost  Curr Cost  Rev. Cost"
            SCV.REC(13) = "Cost"
            SCV.REC(37) = "Curr Cost"
            SCV.REC(38) = "Rev. Cost"
            SCV.REC(11) = "Cost"
         END ELSE
        * SCV.REC(13) = "Qty   Curr Qty   Rev. Qty"
            SCV.REC(13) = "Qty"
            SCV.REC(37) = "Curr Qty"
            SCV.REC(38) = "Rev. Qty"
            SCV.REC(11) = "Qty"
        * T26184 ^
         END
      * T26184 v
      * SCV.REC(11) = SCV.REC(13)[12,15]
         SCV.REC(35) = SCV.REC(38)
      * T26184 ^
         ECD.NUM = 11; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 13; ECD.ACTION = 5; CALL SCRN.EDIT
      * T26184 v
         ECD.NUM = 35; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 37; ECD.ACTION = 5; CALL SCRN.EDIT
         ECD.NUM = 38; ECD.ACTION = 5; CALL SCRN.EDIT
      * T26184 ^
      CASE 1
      * T26126 v
         MATREADU DRV.REC FROM DAILY.REVERSE, CONO : ECD.RET.VALUE LOCKED
            ERRMSG = 'REVERSE record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 101 
         END ELSE
      * T26126 ^
            ERRMSG = "CANNOT LOCATE DAILY.REVERSE - " : ECD.RET.VALUE
            GOSUB 91000; GOTO 101
         END
         RCLS.SEQ.NO = ECD.RET.VALUE
         MATREAD JOB.REC FROM JOB,CONO:DRV.JOB ELSE
            ERRMSG = "CANNOT LOCATE JOB - " : DRV.JOB
            GOSUB 91000; GOTO 100
         END
*T23278 v
         DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 100
         END
*T23278 ^
         SCV.REC(2) = OCONV(DRV.DATE, "D2/")
         SCV.REC(3) = DRV.JOB
         SCV.REC(5) = JOB.CUST
         MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CUST.NAME = UNKNOWN
         SCV.REC(6) = CUST.NAME
         SCV.REC(7) = DRV.TYPE
         LOCATE DRV.TYPE IN DTYPE,1 SETTING T ELSE NULL
         SCV.REC(8) = DDESC<T>
         SCV.REC(9) = DRV.TTYPE
      * T26184 v
         SCV.REC(4) = JOB.DESC<1,1>
         SCV.REC(10) = HD1<T,1>
         SCV.REC(39) = HD1<T,2>
      * T26184 ^
         IF DRV.TTYPE = "C" THEN
        * T26184 v
        * SCV.REC(13) = "Cost  Curr Cost  Rev. Cost"
            SCV.REC(13) = "Cost"
            SCV.REC(37) = "Curr Cost"
            SCV.REC(38) = "Rev. Cost"
            SCV.REC(11) = "Cost"
         END ELSE
        * SCV.REC(13) = "Qty   Curr Qty   Rev. Qty"
            SCV.REC(13) = "Qty"
            SCV.REC(37) = "Curr Qty"
            SCV.REC(38) = "Rev. Qty"
            SCV.REC(11) = "Qty"
        * T26184 ^
         END
      * T26184 v
      * SCV.REC(12) = HD2<T>
      * SCV.REC(11) = SCV.REC(13)[12,15]
         SCV.REC(35) = SCV.REC(38)
         SCV.REC(12) = HD2<T,1>
         SCV.REC(36) = HD2<T,2>
      * T26184 ^
         ECD.ACTION = 3; CALL SCRN.EDIT
   END CASE
   MAT DREC = ""; MAT INV.CNV.REC = ""
   BEGIN CASE
      CASE DRV.TYPE = "LB"
         CNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.LB.COST<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.LB.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.LB.CCTR<1,I>
               DEPT.ORIG<DLINES> = JOB.LB.COST<1,I>
               ICR.CNV<DLINES> = "MD2"
               DPTR<DLINES> = I
            END
         NEXT I
      CASE DRV.TYPE = "MT" AND DRV.TTYPE = "C"
         CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.MT.COST<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.MT.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.MT.CCTR<1,I>
               PROD.NO<DLINES> = JOB.MT.PROD<1,I>
               WHSE.NO<DLINES> = JOB.MT.WHSE<1,I>
               DEPT.ORIG<DLINES> = JOB.MT.COST<1,I>
               ICR.CNV<DLINES> = "MD2"
               DPTR<DLINES> = I
            END
         NEXT I
      CASE DRV.TYPE = "MT"
         CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.MT.QTY<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.MT.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.MT.CCTR<1,I>
               PROD.NO<DLINES> = JOB.MT.PROD<1,I>
               WHSE.NO<DLINES> = JOB.MT.WHSE<1,I>
               MATREAD INV.REC FROM INVENTORY, CONO : PROD.NO<DLINES> ELSE
                  INV.UNIT = ""; INV.M.WT = 1; INV.PAP.WIDTH = 0
               END
               BEGIN CASE
                  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
                     ICR.CNV<DLINES> = "MD0"; ICR.MT1<DLINES> = 1
                     ICR.DV1<DLINES> = INV.M.WT; ICR.DV2<DLINES> = 1
                  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
                     ICR.CNV<DLINES> = "MD0"; ICR.MT1<DLINES> = 10
                     ICR.DV1<DLINES> = INV.PAP.WIDTH/100; ICR.DV2<DLINES> = 1
                  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
                     ICR.CNV<DLINES> = "MD0"; ICR.MT1<DLINES> = 100
                     ICR.DV1<DLINES> = INV.PAP.WIDTH/100; ICR.DV2<DLINES> = 12
                  CASE 1
                     ICR.CNV<DLINES> = "MD2"; ICR.MT1<DLINES> = 1
                     ICR.DV1<DLINES> = 10; ICR.DV2<DLINES> = 1
               END CASE
               ICR.TYPE<DLINES> = INV.UNIT<1,2>
               DEPT.ORIG<DLINES> = INT(((JOB.MT.QTY<1,I>/ICR.DV1<DLINES>)*ICR.MT1<DLINES>)/ICR.DV2<DLINES> + .5)
               DPTR<DLINES> = I
            END
         NEXT I
      CASE DRV.TYPE = "OS"
         CNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.OS.COST<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.OS.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.OS.CCTR<1,I>
               PROD.NO<DLINES> = JOB.OS.PLINE<1,I>
               DEPT.ORIG<DLINES> = JOB.OS.COST<1,I>
               ICR.CNV<DLINES> = "MD2"
               DPTR<DLINES> = I
            END
         NEXT I
      CASE DRV.TYPE = "SP"
         CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.SP.COST<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.SP.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.SP.CCTR<1,I>
               DEPT.ORIG<DLINES> = JOB.SP.COST<1,I>
               ICR.CNV<DLINES> = "MD2"
               DPTR<DLINES> = I
            END
         NEXT I
      CASE DRV.TYPE = "MS"
         CNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
         FOR I = 1 TO CNT
            IF JOB.MS.COST<1,I> > 0 THEN
               DLINES = DLINES + 1
               DEPT.NO<DLINES> = JOB.MS.DEPT<1,I>
               CCTR.NO<DLINES> = JOB.MS.CCTR<1,I>
               DEPT.ORIG<DLINES> = JOB.MS.COST<1,I>
               ICR.CNV<DLINES> = "MD2"
               DPTR<DLINES> = I
            END
         NEXT I
   END CASE
   TCNT = COUNT(DRV.TRAN,VM) + (DRV.TRAN # "")
   FOR J = 1 TO TCNT
      PTR = 1
      LOOP
         LOCATE DRV.DEPT<1,J> IN DEPT.NO,PTR SETTING DLN ELSE
            PTR = 0; DLN = 0
         END
         BEGIN CASE
            CASE PTR = 0
            CASE DRV.CCTR<1,J> # CCTR.NO<DLN>
               PTR = DLN + 1
            CASE PROD.NO<DLN> # "" AND DRV.OPER<1,J> # PROD.NO<DLN>
               PTR = DLN + 1
            CASE WHSE.NO<DLN> # "" AND DRV.EMP<1,J> # WHSE.NO<DLN>
               PTR = DLN + 1
            CASE 1
               PTR = 0
         END CASE
      WHILE PTR DO
      REPEAT
      IF DLN THEN
         IF TRAN.NO<DLN> = "" THEN GOSUB 2000
         LOCATE DRV.TRAN<1,J> IN TRAN.NO<DLN>,1 SETTING TLN ELSE TLN = 0
         IF TLN THEN
            IF DRV.TTYPE = "C" THEN
               TRAN.COST<DLN,TLN> = DRV.COST<1,J>
            END ELSE
               TRAN.COST<DLN,TLN> = DRV.QTY<1,J>
            END
            TRAN.STATUS<DLN,TLN> = DRV.STATUS<1,J>
            DEPT.COST<DLN> = DEPT.COST<DLN> + TRAN.COST<DLN,TLN>
            DEPT.REASON<DLN> = DRV.REASON<1,J>
         END
      END
   NEXT J
   DLN = 1; OLD.LINE = 0; GOSUB 10000
   MORE = 1
   LOOP
      ECD.NUM = 15; SCV.REC(ECD.NUM) = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "E" OR OPTION = "END"
            MORE = 0
         CASE OPTION = "F"
            DRV.DEPT = ""
            DRV.CCTR = ""
            DRV.OPER = ""
            DRV.EMP = ""
            DRV.TRAN = ""
            DRV.SEQ = ""
            DRV.REASON = ""
            DRV.COST = ""
            DRV.STATUS=''
            DRV.PRINT = ""
            DRV.CONV = ""
            K = 0
            FOR I = 1 TO DLINES
               FOR J = 1 TO TLINES<I>
                  IF TRAN.COST<I,J> < 1 THEN GOTO 509
                  K = K + 1
                  DRV.DEPT<1,K> = DEPT.NO<I>
                  DRV.CCTR<1,K> = CCTR.NO<I>
                  IF PROD.NO<I> = "" THEN
                     DRV.OPER<1,K> = TRAN.OPER<I,J>
                  END ELSE
                     DRV.OPER<1,K> = PROD.NO<I>
                  END
                  IF WHSE.NO<I> = "" THEN
                     DRV.EMP<1,K> = TRAN.EMP<I,J>
                  END ELSE
                     DRV.EMP<1,K> = WHSE.NO<I>
                  END
                  DRV.TRAN<1,K> = TRAN.NO<I,J>
                  DRV.SEQ<1,K> = TRAN.SEQ<I,J>
                  IF DRV.TTYPE = "C" THEN
                     DRV.COST<1,K> = TRAN.COST<I,J>
                  END ELSE
                     DRV.QTY<1,K> = TRAN.COST<I,J>
                     DRV.COST<1,K> = INT(((TRAN.COST<I,J>/ICR.MT1<I>)*ICR.DV1<I>)*ICR.DV2<I> + .5)
                     DRV.CONV<1,K> = ICR.TYPE<I>
                  END
                  DRV.REASON<1,K> = DEPT.REASON<I>
                  DRV.STATUS<1,K> = TRAN.STATUS<I,J>
509            NEXT J
            NEXT I
            BEGIN CASE
               CASE K AND RCLS.SEQ.NO = "N"
                  READU RCLS.SEQ FROM CONTROL,CONO:"DAILY.REVERSE" ELSE RCLS.SEQ = 10001
                  RCLS.SEQ.NO = RCLS.SEQ
                  RCLS.SEQ = RCLS.SEQ + 1
                  WRITE RCLS.SEQ ON CONTROL,CONO:"DAILY.REVERSE"
                  MATWRITE DRV.REC ON DAILY.REVERSE,CONO:RCLS.SEQ.NO
                  ECD.NUM = 1; SCV.REC(ECD.NUM) = RCLS.SEQ.NO
                  ECD.ACTION = 5; CALL SCRN.EDIT
                  ERRMSG = "Please Note Down New Sequence Number"; GOSUB 91000
               CASE K
                  MATWRITE DRV.REC ON DAILY.REVERSE,CONO:RCLS.SEQ.NO
               CASE RCLS.SEQ.NO # "N"
                  DELETE DAILY.REVERSE, CONO:RCLS.SEQ.NO
            END CASE
            MORE = 0
         CASE NUM(OPTION)
            IF OPTION < START.LINE OR OPTION > LAST.LINE THEN
               ERRMSG = "INVALID (DEPT/CCTR) LINE NUMBER"
               GOSUB 91000; GOTO 519
            END
*T23278 v
            DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; GOTO 519
            END
*T23278 ^
            DLN = OPTION
            GOSUB 3000; IF VALUE = "END" THEN GOTO 519
            P_X  = 2 ; P_Y = DSLN ; P_VALUE = "*" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF TRAN.NO<DLN> = "" THEN GOSUB 2000
            TLN = 1; OLD.SLINE = 0; GOSUB 20000
            ANCORE = 1
            LOOP
               ECD.NUM = 16; SCV.REC(ECD.NUM) = ""
               ECD.ACTION = 4; CALL SCRN.EDIT
               BEGIN CASE
                  CASE ECD.RET.VALUE = "E" OR ECD.RET.VALUE = "END"
                     ANCORE = 0
                  CASE NUM(ECD.RET.VALUE)
                     BEGIN CASE
                        CASE ECD.RET.VALUE < START.SLINE OR ECD.RET.VALUE > LAST.SLINE
                           ERRMSG = "INVALID TRANSACTION LINE NUMBER"
                           GOSUB 91000; GOTO 518
                        CASE TRAN.CURR<DLN,ECD.RET.VALUE> < 1
                           ERRMSG = "CANNOT RECLASSIFY ZERO COST TRANSACTION"
                           GOSUB 91000; GOTO 518
                     END CASE
                     TLN = ECD.RET.VALUE
*T27705 v            Y = BEGIN.SPAGE + LINE.SPACE * MOD(TLN-1,PAGE.SIZE)
                     Y = BEGIN.SPAGE + LINE.SSPACE * MOD(TLN-1,PAGE.SSIZE)+1
                     IF ICR.CNV<DLN> = "MD0" THEN
                        TYP = 3
                     END ELSE
                        TYP = 4; SCALER = 2
                     END
                     X = 69; MINV = 0; MAXV = TRAN.CURR<DLN,TLN>
                     MAXL = 10;  O.R = "O"
                     IF TRAN.COST<DLN,TLN> = "" THEN
                        DEFAULT = OCONV(TRAN.CURR<DLN,TLN>,ICR.CNV<DLN>)
                     END ELSE
                        DEFAULT = OCONV(TRAN.COST<DLN,TLN>,ICR.CNV<DLN>)
                     END
                     CALL EDIT.SUB
                     IF VALUE = "END" THEN GOTO 518
                     DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,TLN> + VALUE
                     TRAN.COST<DLN,TLN> = VALUE
                     P_X  = 66 ; P_Y = DSLN ; P_VALUE = OCONV(DEPT.COST<DLN>,ICR.CNV<DLN>) "R#10" ; P_OPT = ""
                     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
518*
                  CASE ECD.RET.VALUE = "ALL"
                     FOR I = 1 TO TLINES<DLN>
                        DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,I> + TRAN.CURR<DLN,I>
                        TRAN.COST<DLN,I> = TRAN.CURR<DLN,I>
                     NEXT I
                     P_X  = 66 ; P_Y = DSLN ; P_VALUE = OCONV(DEPT.COST<DLN>,ICR.CNV<DLN>) "R#10" ; P_OPT = ""
                     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                     OLD.SLINE = 0; GOSUB 20000
                  CASE ECD.RET.VALUE = "S"
*T27705 v            TLN = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
                     TLN = 1 + INT((TLN-1)/PAGE.SSIZE) * PAGE.SSIZE + PAGE.SSIZE
                     IF TLN > TLINES<DLN> THEN TLN = 1
                     GOSUB 20000
            * T25978 v
                  CASE ECD.RET.VALUE = 'SR'
*T27705 v            TLN = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
                     TLN = 1 + INT((TLN-1)/PAGE.SSIZE) * PAGE.SSIZE - PAGE.SSIZE
                     IF TLN < 1 THEN TLN = 1
                     GOSUB 20000
                  CASE ECD.RET.VALUE = 'ST'
                     TLN = 1
                     GOSUB 20000
                  CASE ECD.RET.VALUE = 'SB'
                     TLN = TLINES<DLN>
                     GOSUB 20000
            * T25978 ^
               END CASE
            WHILE ANCORE DO
            REPEAT
            P_X  = 2 ; P_Y = DSLN ; P_VALUE = " " ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            CNT = 1; GOSUB 20500
519*
         CASE OPTION = "ALL"
*T23278 v
            DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; GOTO 529
            END
*T23278 ^
            SDLN = DLN
            DLN = 1; GOSUB 3000
            IF VALUE = "END" THEN
               DLN = SDLN; GOTO 529
            END
            FOR DLN = 1 TO DLINES
               DEPT.REASON<DLN> = DEPT.REASON<1>
               IF TRAN.NO<DLN> = "" THEN GOSUB 2000
               FOR I = 1 TO TLINES<DLN>
                  DEPT.COST<DLN> = DEPT.COST<DLN> - TRAN.COST<DLN,I> + TRAN.CURR<DLN,I>
                  TRAN.COST<DLN,I> = TRAN.CURR<DLN,I>
               NEXT I
            NEXT DLN
            DLN = SDLN; OLD.LINE = 0; GOSUB 10000
529*
         CASE OPTION = "S"
            DLN = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF DLN > DLINES THEN DLN = 1
            GOSUB 10000
      * T25978 v
         CASE OPTION = 'SR'
            DLN = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF DLN < 1 THEN DLN = 1
            GOSUB 10000
         CASE OPTION = 'ST'
            DLN = 1
            GOSUB 10000
         CASE OPTION = 'SB'
            DLN = DLINES
            GOSUB 10000
      * T25978 ^
      END CASE
   WHILE MORE DO
   REPEAT
   GOTO 100
2000*
   P_X  = 0 ; P_Y = 23 ; P_VALUE = "Processing Dept (":DEPT.NO<DLN>:"), Cctr (":CCTR.NO<DLN>:") On Line (":DLN:")" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   DLOC = DPTR<DLN>; TLOC = TLINES<DLN>
   LB.ID = CONO:DRV.JOB:"!":DEPT.NO<DLN>:"!":CCTR.NO<DLN>:"!"
   BEGIN CASE
      CASE DRV.TYPE = "LB"
         FOR I = 1 TO JOB.LB.SEQ<1,DLOC>
            MATREAD JLB.REC FROM JOB.TIME, LB.ID:I ELSE
               JLB.COST = 0; JLB.RC.COST = 0
            END
            IF JLB.COST - JLB.RC.COST > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JLB.SEQ; PTR = 1
               TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JLB.TYPE
               TRAN.OPER<DLN,TLOC> = JLB.OPER; TRAN.EMP<DLN,TLOC> = JLB.EMP
               TRAN.MON<DLN,TLOC> = JLB.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JLB.COST
               LOOP WHILE JLB.MON<1,PTR> # "" DO
                  FOR W = 1 TO 4
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JLB.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = JLB.COST - JLB.RC.COST
            END
         NEXT I
      CASE DRV.TYPE = "MT" AND DRV.TTYPE = "C"
         MT.ID = LB.ID:PROD.NO<DLN>:"!":WHSE.NO<DLN>:"!"
         FOR I = 1 TO JOB.MT.SEQ<1,DLOC>
            MATREAD JMT.REC FROM JOB.MATL, MT.ID:I ELSE
               JMT.COST = 0; JMT.RC.COST = 0
            END
            IF JMT.COST - JMT.RC.COST > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JMT.SEQ; PTR = 1
               TRAN.OPER<DLN,TLOC> = JMT.LOC; TRAN.EMP<DLN,TLOC> = JMT.R.S.ID
               TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JMT.TYPE
               TRAN.MON<DLN,TLOC> = JMT.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JMT.COST
               LOOP WHILE JMT.MON<1,PTR> # "" DO
                  FOR W = 1 TO 3
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JMT.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = JMT.COST - JMT.RC.COST
            END
         NEXT I
      CASE DRV.TYPE = "MT"
         MT.ID = LB.ID:PROD.NO<DLN>:"!":WHSE.NO<DLN>:"!"
         FOR I = 1 TO JOB.MT.SEQ<1,DLOC>
            MATREAD JMT.REC FROM JOB.MATL, MT.ID:I ELSE
               JMT.QTY = 0; JMT.RC.QTY = 0
            END
            IF JMT.QTY - JMT.RC.QTY > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JMT.SEQ; PTR = 1
               TRAN.SEQ<DLN,TLOC> = I
               TRAN.OPER<DLN,TLOC> = JMT.LOC
*T28108 v      IF JMT.SERIAL[1,1]='R' THEN
               IF INDEX(JMT.SERIAL,"!",1) THEN
                  NULL
               END ELSE
                  TRAN.EMP<DLN,TLOC> = JMT.SERIAL
               END
               TRAN.TYPE<DLN,TLOC> = JMT.TYPE; TRAN.MON<DLN,TLOC> = JMT.MON<1,1>
               TRAN.ORIG<DLN,TLOC> = INT(((JMT.QTY/ICR.DV1<DLN>)*ICR.MT1<DLN>)/ICR.DV2<DLN> + .5)
               LOOP WHILE JMT.MON<1,PTR> # "" DO
*T28273 v
*                 FOR W = 1 TO 2
                  FOR W = 1 TO 3
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JMT.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = INT((((JMT.QTY-JMT.RC.QTY)/ICR.DV1<DLN>)*ICR.MT1<DLN>)/ICR.DV2<DLN> + .5)
            END
         NEXT I
      CASE DRV.TYPE = "OS"
         OS.ID = LB.ID:PROD.NO<DLN>:"!"
         FOR I = 1 TO JOB.OS.SEQ<1,DLOC>
            MATREAD JOS.REC FROM JOB.OSP, OS.ID:I ELSE
               JOS.COST = 0; JOS.RC.COST = 0
            END
            IF JOS.COST - JOS.RC.COST > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JOS.SEQ; PTR = 1
               TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JOS.TYPE
               TRAN.OPER<DLN,TLOC> = JOS.OPER; TRAN.EMP<DLN,TLOC> = JOS.VEND
               TRAN.MON<DLN,TLOC> = JOS.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JOS.COST
               LOOP WHILE JOS.MON<1,PTR> # "" DO
                  FOR W = 1 TO 2
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JOS.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = JOS.COST - JOS.RC.COST
            END
         NEXT I
      CASE DRV.TYPE = "SP"
         FOR I = 1 TO JOB.SP.SEQ<1,DLOC>
            MATREAD JSP.REC FROM JOB.SHIP, LB.ID:I ELSE
               JSP.COST = 0; JSP.RC.COST = 0
            END
            IF JSP.COST - JSP.RC.COST > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JSP.SEQ; PTR = 1
               TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JSP.TYPE
               TRAN.OPER<DLN,TLOC> = JSP.OPER; TRAN.EMP<DLN,TLOC> = JSP.VIA
               TRAN.MON<DLN,TLOC> = JSP.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JSP.COST
               LOOP WHILE JSP.MON<1,PTR> # "" DO
                  FOR W = 1 TO 2
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JSP.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = JSP.COST - JSP.RC.COST
            END
         NEXT I
      CASE DRV.TYPE = "MS"
         FOR I = 1 TO JOB.MS.SEQ<1,DLOC>
            MATREAD JMS.REC FROM JOB.MISC, LB.ID:I ELSE
               JMS.COST = 0; JMS.RC.COST = 0
            END
            IF JMS.COST - JMS.RC.COST > 0 THEN
               TLOC = TLOC + 1
               TRAN.NO<DLN,TLOC> = JMS.SEQ; PTR = 1
               TRAN.SEQ<DLN,TLOC> = I; TRAN.TYPE<DLN,TLOC> = JMS.TYPE
               TRAN.OPER<DLN,TLOC> = JMS.OPER; TRAN.EMP<DLN,TLOC> = JMS.REASON
               TRAN.MON<DLN,TLOC> = JMS.MON<1,1>; TRAN.ORIG<DLN,TLOC> = JMS.COST
               LOOP WHILE JMS.MON<1,PTR> # "" DO
                  FOR W = 1 TO 2
                     TRAN.WIP<DLN,TLOC> = TRAN.WIP<DLN,TLOC> + JMS.WIP<1,PTR,W>
                  NEXT W
                  PTR = PTR + 1
               REPEAT
               TRAN.CURR<DLN,TLOC> = JMS.COST - JMS.RC.COST
            END
         NEXT I
   END CASE
   TLINES<DLN> = TLOC
   P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
3000*
   DSLN = BEGIN.PAGE + LINE.SPACE * MOD(DLN-1,PAGE.SIZE)
   X = 34; Y = DSLN; TYP = 1; MAXL = 20
   IF DEPT.REASON<DLN> = "" THEN
      O.R = "R"
   END ELSE
      DEFAULT = DEPT.REASON<DLN>; O.R = "O"
   END
   CALL EDIT.SUB
   IF VALUE # "END" THEN
      DEPT.REASON<DLN> = VALUE
   END
   RETURN
10000*
   START.LINE = 1 + INT((DLN-1)/PAGE.SIZE) * PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > DLINES THEN LAST.LINE = DLINES
   IF START.LINE = OLD.LINE THEN GOTO 10999
   OLD.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:DEPT.NO<N> "L#5"
      P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:CCTR.NO<N> "L#3"
      P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:PROD.NO<N> "L#15"
      P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:WHSE.NO<N> "L#4"
      P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:DEPT.REASON<N> "L#20"
      P_X  := AM:55 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DEPT.ORIG<N>,ICR.CNV<N>) "R#10"
      P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(DEPT.COST<N>,ICR.CNV<N>) "R#10"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
10500*
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
10999*
   RETURN
20000*
*T27705  START.SLINE = 1 + INT((TLN-1)/PAGE.SIZE) * PAGE.SIZE
  START.SLINE = 1 + INT((TLN-1)/PAGE.SSIZE) * PAGE.SSIZE
   LAST.SLINE = START.SLINE + PAGE.SSIZE - 1
   IF LAST.SLINE > TLINES<DLN> THEN LAST.SLINE = TLINES<DLN>
   IF START.SLINE = OLD.SLINE THEN GOTO 20999
   OLD.SLINE = START.SLINE
   CNT = 1
   FOR N = START.SLINE TO LAST.SLINE
*T27705 SLN = BEGIN.SPAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      SLN = BEGIN.SPAGE + LINE.SSPACE * MOD(N-1,PAGE.SSIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.NO<DLN,N> "L#8"
      P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.TYPE<DLN,N> "L#1"
      P_X  := AM:15 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.OPER<DLN,N> "L#4"
*T27705  P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.EMP<DLN,N> "L#8"
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.EMP<DLN,N> "L#15"
*T27705  P_X  := AM:29 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.MON<DLN,N> "L#6"
      P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.MON<DLN,N> "L#6"
*T27705  P_X  := AM:36 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.WIP<DLN,N>,"MD2") "R#10"
      P_X  := AM:43 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.WIP<DLN,N>,"MD2") "R#10"
*T27705  P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.ORIG<DLN,N>,ICR.CNV<DLN>) "R#10"
      P_X  := AM:47 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.ORIG<DLN,N>,ICR.CNV<DLN>) "R#10"
*T27705  P_X  := AM:58 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.CURR<DLN,N>,ICR.CNV<DLN>) "R#10"
      P_X  := AM:58 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.CURR<DLN,N>,ICR.CNV<DLN>) "R#10"
*T27705  P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.COST<DLN,N>,ICR.CNV<DLN>) "R#10"
      P_X  := AM:69 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.COST<DLN,N>,ICR.CNV<DLN>) "R#10"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
20500*
*T27705   FOR M = CNT TO PAGE.SIZE
   FOR M = CNT TO PAGE.SSIZE
*T27705  SLN = BEGIN.SPAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      SLN = BEGIN.SPAGE + LINE.SSPACE * MOD(M-1,PAGE.SSIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
*T28108 P_X:=AM:0; P_Y:=AM:SLN+1; P_VALUE:=""; P_OPT:=AM:"CL"; *T27705
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
20999*
   RETURN
91000*
   ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000*
   ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000*
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
999999*
*      PRINT @(-1)
END
