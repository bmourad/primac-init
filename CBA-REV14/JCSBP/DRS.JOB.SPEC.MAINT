*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.DRS.FILE.VARS
**************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* SOURCE         - DRSBP
*
* PROGRAM        - DRS.JOB.SPEC.MAINT
*
* BY             - L. ROSS, COMPUTER BUSINESS ASSOCIATES
*
* DATE           - 09/13/91
*
* DESCRIPTION    -
* This program will be used to maintain the DRS.JOB.SPEC file. 
*
*T22543 stefanie 03/17/1998 * Descriptions not displaying.
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T28197 lross 08/25/2004 * Skid max qty must not be less than Box max.
*T28276 bmourad 11/23/2004 * Change verbage from TEMPLATE to JOB.
*T29032 cmyklebu 12/29/2006 * Move pgm from rev12 to rev14.
*ENDDOC
**************************************************************
*
*---- FILE EQUATES
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>DRS.FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>FORMAT.CODE
*COPY>JCS.CPYLIB>BOX.CODE
*COPY>JCS.CPYLIB>DRS.JOB.SPEC
*COPY>JCS.CPYLIB>CUST.TEMPLATE.LIST
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>CHAR
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS FILE MISSING';GOTO 93000 ; * T29032
  OPEN '','DRS.JOB.SPEC' TO DRS.JOB.SPEC ELSE ERRMSG = 'DRS.JOB.SPEC FILE MISSING';GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE MISSING'; GOTO 93000
  OPEN '','FORMAT.CODE' TO FORMAT.CODE ELSE ERRMSG = 'FORMAT.CODE FILE MISSING'; GOTO 93000
  OPEN '','BOX.CODE' TO BOX.CODE ELSE ERRMSG = 'BOX.CODE FILE MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE MISSING'; GOTO 93000
  OPEN '','CUST.TEMPLATE.LIST' TO CUST.TEMPLATE.LIST ELSE ERRMSG = 'CUST.TEMPLATE.LIST FILE MISSING'; GOTO 93000
*
*---- INITIALIZATION
*
  MAT EDIT.COM = ""
  MAT EDIT.COM.DRIVER = ""
  TYP = 0
  CALL EDIT.SUB
  ERRMSG = ""
  UNKNOWN = "???????????????"
*
*---- GET COMPANY NUMBER
*
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
*
*---- PRINT SCREEN
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'DRS.JOB.SPEC.MAINT'
  ECD.ACTION = 1; CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ''
  ECD.ACTION = 2; CALL SCRN.EDIT
*
*---- MAIN PROCESSING
*
5 *   GET JOB NO.
*
  MAT SCV.REC = ''
  OPTION = ''
  ECD.NUM = 1
  ECD.ACTION = 4; CALL SCRN.EDIT
  JOB.KEY = TRIM(ECD.RET.VALUE)
  NEW = 0
  BEGIN CASE
    CASE JOB.KEY = 'END'
      GOTO 99999
    CASE JOB.KEY # ''
      * T26126 V
      MATREADU DJS.REC FROM DRS.JOB.SPEC, CONO:JOB.KEY LOCKED
        ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 5 
      END ELSE
      * T26126 ^
        NEW = 1
        MAT DJS.REC = ''
      END
      MATREAD JOB.REC FROM JOB,CONO:JOB.KEY ELSE
        IF NEW THEN
          ERRMSG = 'JOB record does not exist.'
          GOSUB 91000
          GOTO 5
        END ELSE JOB.DESC = UNKNOWN
      END
    CASE 1
      GOTO 5
  END CASE
  ECD.NUM = 4; SCV.REC(4) = JOB.DESC; ECD.ACTION = 5; CALL SCRN.EDIT
  ECD.NUM = 2
  IF NOT(NEW) THEN
    CUST.KEY = DJS.CUST
    SCV.REC(2) = CUST.KEY
    ECD.ACTION = 5; CALL SCRN.EDIT
  END ELSE
    IF JOB.CUST # '' THEN
      CUST.KEY = JOB.CUST
      SCV.REC(2) = CUST.KEY
      ECD.ACTION = 5; CALL SCRN.EDIT
    END ELSE
*
10 *     GET CUSTOMER
*
      ECD.ACTION = 4; CALL SCRN.EDIT
      BEGIN CASE
        CASE ECD.RET.VALUE = 'END'
          GOTO 5
        CASE ECD.RET.VALUE # ''
          CUST.KEY = ECD.RET.VALUE
        CASE 1
          GOTO 10
      END CASE
    END
  END
  MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.KEY ELSE
    IF NEW THEN
      ERRMSG = 'CUSTOMER record does not exist.'
      GOSUB 91000
      GOTO 10
    END ELSE
      CUST.NAME = UNKNOWN
    END
  END
  READV TEST FROM CUST.TEMPLATE.LIST, CONO:CUST.KEY:"!":JOB.KEY:"!001",1 ELSE
    ERRMSG = 'Note! A Template for this job needs to be created.'
    GOSUB 91000
  END
  DJS.CUST = CUST.KEY
  ECD.NUM = 3; SCV.REC(3) = CUST.NAME; ECD.ACTION = 5; CALL SCRN.EDIT
  IF NOT(NEW) THEN
    FOR I = 2 TO 9
      SCV.REC(I+8) = DJS.REC(I)
    NEXT I
    FOR I = 10 TO 14
      SCV.REC(I+16) = DJS.REC(I)
    NEXT I
    ECD.ACTION = 3
    CALL SCRN.EDIT
  END
*T22543 v
  MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, CONO:CUST.KEY:'!':DJS.TEMPLATE:'!001' THEN
    SCV.REC(31) = CTL.DESC
  END
  MATREAD FRM.REC FROM FORMAT.CODE, CONO:DJS.FORMAT THEN
    SCV.REC(32) = FRM.DESC
  END
  MATREAD BOX.REC FROM BOX.CODE, CONO:DJS.BOX THEN
    SCV.REC(33) = BOX.DESC
  END
  ECD.ACTION = 3 ; CALL SCRN.EDIT
*T22543 ^
  IF NEW = 1 THEN 
    OPTION = 'A'
    FOR I = 1 TO 10
      ECD.ACTION = 4
      ON I GOSUB 100,200,300,400,500,600,700,900,950,970
      IF ECD.RET.VALUE = 'END' THEN 
        RELEASE DRS.JOB.SPEC,CONO:JOB.KEY
        GOSUB 2000; GOTO 5
      END
    NEXT I
  END
  GOSUB 1000
  GOSUB 2000
  GOTO 5
*
*---- ENTER TEMPLATE NO.
*
100 *
  ECD.NUM = 10
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' AND ECD.RET.VALUE # '' THEN
    TEMP.NO = ECD.RET.VALUE
    MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, CONO:CUST.KEY:"!":TEMP.NO:"!001" ELSE
      MAT CTL.REC =''
      ERRMSG = 'Please note: This template does not belong to customer'
      GOSUB 91000
    END
    DJS.TEMPLATE = TEMP.NO
    SCV.REC(31) = CTL.DESC
    ECD.NUM = 31; ECD.ACTION = 5; CALL SCRN.EDIT
  END ELSE TEMP.NO = ''; DJS.TEMPLATE = ''
  RETURN
*
*---- ENTER PIECES PER LB
*
200 *
  ECD.NUM = 11
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.PPL
  IF ECD.RET.VALUE # "END" THEN
    DJS.PPL = ECD.RET.VALUE
  END
  RETURN
*
*---- ENTER BASIS WT
*
300 *
  ECD.NUM = 12
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.BASIS
  IF ECD.RET.VALUE # 'END' THEN
    DJS.BASIS = ECD.RET.VALUE
  END 
  RETURN
*
*---- ENTER NO. OF PAGES
*
400 *
  ECD.NUM = 13
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.NOP
  IF ECD.RET.VALUE # 'END' THEN
    DJS.NOP = ECD.RET.VALUE
  END
  RETURN
*
*---- ENTER FORMAT
*
500 *
  ECD.NUM = 14
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.FORMAT
  IF ECD.RET.VALUE # "END" THEN
    MATREAD FRM.REC FROM FORMAT.CODE, CONO:ECD.RET.VALUE ELSE
      IF OPTION # '' THEN
        ERRMSG = 'Invalid Format Code.'
        GOSUB 91000
        SCV.REC(14) = DJS.FORMAT
        GOTO 500
      END ELSE FRM.DESC =UNKNOWN
    END
    DJS.FORMAT = ECD.RET.VALUE
    SCV.REC(32) = FRM.DESC
    ECD.NUM = 32; ECD.ACTION = 5; CALL SCRN.EDIT
  END
  RETURN
*
*---- ENTER WIDTH
*
600 *
  ECD.NUM = 15
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.WIDTH
  IF ECD.RET.VALUE # 'END' THEN
    DJS.WIDTH = ECD.RET.VALUE
  END 
  RETURN
*
*---- ENTER BOX CODE
*
700 *
  ECD.NUM = 16
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.BOX
  ECD.RET.VALUE = TRIM(ECD.RET.VALUE)
  IF ECD.RET.VALUE # 'END' THEN
    MATREAD BOX.REC FROM BOX.CODE, CONO:ECD.RET.VALUE ELSE
      IF OPTION # '' THEN
        ERRMSG = 'Invalid Box Code.'
        GOSUB 91000
        SCV.REC(16) = DJS.BOX
        GOTO 700
      END ELSE BOX.DESC = UNKNOWN
    END
    DJS.BOX = ECD.RET.VALUE
    SCV.REC(33) = BOX.DESC
    ECD.NUM = 33; ECD.ACTION = 5; CALL SCRN.EDIT
  END 
  RETURN
*
*---- ENTER BOL LINE INFO
*
800 *
*     ECD.NUM = 17
*     CALL SCRN.EDIT
*     IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.ZLINE
*     IF ECD.RET.VALUE # 'END' THEN
*        DJS.ZLINE = ECD.RET.VALUE
*     END 
*     RETURN
*
*---- ENTER QTYS PER BOX
*
900 *
  ECD.NUM = 26
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.BOX.MIN
  IF ECD.RET.VALUE # 'END' THEN
    DJS.BOX.MIN = ECD.RET.VALUE
910 *
    ECD.NUM = 27
    CALL SCRN.EDIT
    IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.BOX.MAX
    IF ECD.RET.VALUE # 'END' THEN
      IF ECD.RET.VALUE < DJS.BOX.MIN THEN
        ERRMSG = 'Maximum quantity must not be less than minimum.'
        GOSUB 91000
        SCV.REC(27) = DJS.BOX.MAX
        GOTO 910
      END
      DJS.BOX.MAX = ECD.RET.VALUE
    END ELSE GOTO 900
  END
  RETURN
*
*---- ENTER SKID QTYS
*
950 *
  ECD.NUM = 28
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.SKD.MIN
  IF ECD.RET.VALUE # 'END' THEN
    DJS.SKD.MIN = ECD.RET.VALUE
960 *
    ECD.NUM = 29
    CALL SCRN.EDIT
    IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.SKD.MAX
    IF ECD.RET.VALUE # 'END' THEN
      IF ECD.RET.VALUE < DJS.SKD.MIN THEN
        ERRMSG = 'Maximum quantity must not be less than minimum.'
        GOSUB 91000
        SCV.REC(29) = DJS.SKD.MAX
        GOTO 960
      END
*T28197 v
      IF ECD.RET.VALUE < DJS.BOX.MAX THEN
        ERRMSG = 'Skid max quantity must not be less than Box max quantity.'
        GOSUB 91000
        SCV.REC(29) = DJS.SKD.MAX
        GOTO 960
      END
*T28197 ^
      DJS.SKD.MAX = ECD.RET.VALUE
    END ELSE GOTO 950
  END
  RETURN
*
*---- QTY / LAYER
*
970 *
  ECD.NUM = 30
  CALL SCRN.EDIT
  IF ECD.ACTION = 5 THEN ECD.RET.VALUE = DJS.LAY.QTY
  IF ECD.RET.VALUE # 'END' THEN
    DJS.LAY.QTY = ECD.RET.VALUE
    SCV.REC(30) = ECD.RET.VALUE
  END
  RETURN
*
*---- ENTER OPTIONS
*
1000 *
  MORE = 1
  LOOP
    ECD.NUM = 20
    ECD.ACTION = 4; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
        MORE = 0
        RELEASE DRS.JOB.SPEC, CONO:JOB.KEY
      CASE NUM(OPTION) AND OPTION # ''
        ECD.ACTION = 4
        ON OPTION GOSUB 100,200,300,400,500,600,700,900,950,970
      CASE OPTION = 'F'
        GOSUB 3000
        MORE = 0
    END CASE
  WHILE MORE DO REPEAT
  RETURN
*
*---- CLEAR SCREEN AND RE-INITIALIZE
*
2000 *
  ECD.ACTION = 6; CALL SCRN.EDIT
  MAT SCV.REC = ""
  RETURN
*
*---- UPDATE DJS.JOB.SPEC FILE
*
3000 *
  MATWRITE DJS.REC ON DRS.JOB.SPEC,CONO:JOB.KEY
  RETURN
*
*---- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 *
*       PRINT @(-1):
END
