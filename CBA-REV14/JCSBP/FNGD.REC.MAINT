*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.FNGD.REC
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - JCSBP
* PROGRAM  - FNGD.REC.MAINT
* BY       - ANN POWLEY, C.B.A.
* DATE     - 02/10/87
* MODIFIED - NLB]RRG
* DATE     - 10/18/88]1/27/89
* COMMENTS - ADDED CUSTOMER INVENTORY CHECK]ADD JOB.STATUS '5' -
*          -   "REOPENED"
* DESCRIPTION
* This program receipt finish goods and sami finish goods
* into inventory.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
********************************************************************
*
**** INSERT FILES EQUATES
*
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>JCS.CPYLIB>DAILY.FNGD.REC
*COPY>JCS.CPYLIB>JOB.FNGD
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
  DIM SAVE.IWH.REC(80)
*
**** SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
  OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
  OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE ERRMSG = 'INVENTORY.XREF FILE IS MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
  OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG = 'CUSTOMER.XREF FILE IS MISSING'; GOTO 93000
  OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
  OPEN '','DAILY.FNGD.REC' TO DAILY.FNGD ELSE ERRMSG = 'DAILY.FNGD.REC FILE IS MISSING' ; GOTO 93000
  OPEN '','JOB.FNGD' TO JOB.FNGD ELSE ERRMSG = 'JOB.FNGD FILE IS MISSING' ; GOTO 93000
  OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING' ; GOTO 93000
  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC IS MISSING'; GOTO 93000
  OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB IS MISSING'; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS FILE IS MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
*
***** GET COMPANY NAME
*
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  IF CO.OPS = "Y" THEN
    ERRMSG = "Sorry, cannot utilize this function with the OPS module"
    GOSUB 91000; GOTO 99999
  END
*
**** GET JOB CUTTOFF NUMBER
*
  MATREAD JOB.CUTOFF.REC FROM CONTROL , CONO:"JOB.CUTOFF.NO" ELSE
    MAT JOB.CUTOFF.REC = ""
    J.CUTOFF.NUM = 0
  END
*
**** SET UP GEN.XREF.REC
*
  MAT EDIT.COM = ''
  TYP = 0; CALL EDIT.SUB
  FILL = "#"
  RES.FLG = 0
  MAT EDIT.COM.DRIVER = ''
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
  BEGIN.PAGE = 15 ; PAGE.SIZE = 5 ; LINE.SPACE = 1
  D11 = STR("-",11)
  D8 = STR("-",8)
  D3 = STR("-",3)
  D5 = STR("-",5)
  OPTION = ""
*
***** MAIN PROCESSING
*
  MAT EDIT.COM.DRIVER = ''
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'FNGD.REC.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
*
**** PRINT SCREEN
*
100*
  ECD.SCRN.NO = 1
  MAT DFG.REC = '' ; MAT SCV.REC = '' ; MAT IWH.REC = '' ; MAT IWLO.REC = ''
  MAT JOB.REC = "" ; MAT CUST.REC = ""
  MAT JSTAT.REC = ""
  LINES = 0 ; OLD.START.LINE = 0
  POST.OSJ = 0
  ECD.ACTION=6;CALL SCRN.EDIT
*
***** ENTER SEQ NUMBER
*
200*
  ECD.NUM = 1
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  DFG.SEQ.NO = ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99999
    CASE ECD.RET.VALUE = "N"
      EXIST = 0
      FOR XI = 1 TO 4 UNTIL EXIST = 1
        ON XI GOSUB 1000,2000,5000,7000
        IF ECD.RET.VALUE = "END" THEN GOTO 100
        IF JSTAT.SHP.PROD # '' THEN
          GOSUB 400; EXIST = 1
        END
      NEXT XI
      GOSUB 10000
    CASE 1
      * T26126 v
      MATREADU DFG.REC FROM DAILY.FNGD, CONO:DFG.SEQ.NO LOCKED
        ERRMSG = 'SEQ record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000;GOTO 100 
      END ELSE
      * T26126 ^
        RES.FLG = 0
        ERRMSG = DFG.SEQ.NO:" NOT ON FILE. TRY AGAIN"
        GOSUB 91000; GOTO 100
      END
* RES.FLG = 1
* MATREADU JFG.REC FROM JOB.FNGD , CONO:DFG.SEQ.NO ELSE
* ERRMSG = DFG.SEQ.NO:" NOT ON FILE. TRY AGAIN" ; GOSUB 91000 ; GOTO 100
* RES.FLG = 0
* END
* X=0;Y=23;TYP=18;O.R="R";PMSG="Is this a reverse entry (Y/N) "
* CALL EDIT.SUB
* IF VALUE = "Y" THEN
* DFG.MAIN.SEQ = DFG.SEQ.NO
* DFG.SEQ.NO = "N"
* DFG.JOB = JFG.JOB ; DFG.DATE = JFG.DATE ; DFG.PROD = JFG.PROD ; DFG.WHSE = JFG.WHSE ; DFG.INIT = JFG.INIT
* LOC.CNT = COUNT(JFG.LOC,VM) + (JFG.LOC # "")
* SCN = 0
* FOR RL = LOC.CNT TO 1 STEP -1
* SCN = SCN + 1
* DFG.LOC<1,SCN> = JFG.LOC<1,RL>
* DFG.R.S.ID<1,SCN> = JFG.R.S.ID<1,RL>
* DFG.QTY<1,SCN> = JFG.QTY<1,RL> * (-1)
* DFG.SHEET<1,SCN> = JFG.SHEET<1,RL> * (-1)
* DFG.DIAM<1,SCN> = JFG.DIAM<1,RL> * (-1)
* NEXT RL
* END ELSE
* RES.FLG = 0 ; GOTO 100
* END
* END
      GOSUB 8000
      SCV.REC(2)<ECD.SCRN.NO,1> = DFG.DATE
      MATREAD INV.REC FROM INVENTORY , CONO:DFG.PROD ELSE
        INV.FULL.DESC = "?????????????????????????????????"
        INV.UNIT<1,2> = "???"
      END
      MATREAD WHSE.REC FROM WAREHOUSE , CONO:DFG.WHSE ELSE
        WHS.DESC = "?????????????????????????"
      END
      MATREAD IWH.REC FROM INV.WHSE , CONO:DFG.PROD:"!":DFG.WHSE ELSE
        MAT IWH.REC = ""
      END
      GOSUB 7010
      SCV.REC(3)<ECD.SCRN.NO,1> = DFG.JOB
      SCV.REC(4)<ECD.SCRN.NO,1> = JOB.CUST
      SCV.REC(5)<ECD.SCRN.NO,1> = CUST.NAME
      SCV.REC(6)<ECD.SCRN.NO,1> = JOB.DESC<1,1>
      SCV.REC(11)<ECD.SCRN.NO,1> = DFG.PROD
      SCV.REC(12)<ECD.SCRN.NO,1> = INV.FULL.DESC
      SCV.REC(13)<ECD.SCRN.NO,1> = INV.UNIT<1,2>
      SCV.REC(15)<ECD.SCRN.NO,1> = DFG.WHSE
      SCV.REC(16)<ECD.SCRN.NO,1> = WHS.DESC
      GOSUB 9000
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      GOSUB 10000
  END CASE
*
**** ENTER OPTIONS
*
300*
  MORE = 1
  LOOP
    ECD.NUM = 7
    SCV.REC(ECD.NUM)<ECD.SCRN.NO,1> = ""
    ECD.ACTION = 4 ; CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE
        MORE = 0
      CASE NUM(OPTION)
        BEGIN CASE
          CASE DFG.STATUS # ""
            ERRMSG = "This record was partially posted can't change." ; GOSUB 91000
          CASE JSTAT.SHP.PROD # ""
            ERRMSG = "Can not change the product or warehouse for this record."
            GOSUB 91000
          CASE 1
            ON OPTION GOSUB 5000,7000
        END CASE
      CASE OPTION = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 11000
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 19000
      CASE OPTION = "C"
        GOSUB 60000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
          GOSUB 11100
        END
      CASE OPTION = "D"
        GOSUB 60000
        IF LNO THEN
          LN = LNO
          DFG.LOC = DELETE(DFG.LOC,1,LN,0)
          DFG.R.S.ID = DELETE(DFG.R.S.ID,1,LN,0)
          DFG.QTY = DELETE(DFG.QTY,1,LN,0)
          DFG.DIAM = DELETE(DFG.DIAM,1,LN,0)
          DFG.SHEET = DELETE(DFG.SHEET,1,LN,0)
          LINES = COUNT(DFG.LOC,VM) + (DFG.LOC # "")
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
          GOSUB 19000
        END
      CASE OPTION = "S"
* LN = LN + PAGE.SIZE
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 19000
      * T25978 v
      CASE OPTION = 'SR'
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 19000
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 19000
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 19000
      * T25978 ^
      CASE OPTION = "DT"
        X=0;Y=23;MAXL=1;TYP=18;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
        PMSG="You are about to delete this transaction ok (Y/N) : "
        CALL EDIT.SUB
        P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        IF VALUE = "Y" THEN
          DELETE DAILY.FNGD , CONO:DFG.SEQ.NO
          MORE = 0
        END
      CASE OPTION = "F"
        IF DFG.SEQ.NO = "N" THEN
          READU DFG.SEQ.NO FROM CONTROL , CONO:"DAILY.FNGD.NO" ELSE DFG.SEQ.NO = 10001
          LOOP
            READ CK.FLG FROM JOB.FNGD , CONO:DFG.SEQ.NO ELSE CK.FLG = ""
          WHILE CK.FLG # "" DO
            DFG.SEQ.NO = DFG.SEQ.NO + 1
          REPEAT
          FNGD.SEQ = DFG.SEQ.NO + 1
          WRITE FNGD.SEQ ON CONTROL , CONO:"DAILY.FNGD.NO"
          ECD.NUM = 1
          SCV.REC(ECD.NUM)<ECD.SCRN.NO,1> = DFG.SEQ.NO
          ECD.ACTION = 5 ; CALL SCRN.EDIT
          ERRMSG = "Please Note Down New Sequence Number " ; GOSUB 91000
        END
        MATREAD JOB.REC FROM JOB, CONO:DFG.JOB ELSE
          MAT JOB.REC = ""
        END
        IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
          IF DFG.INIT = "" THEN GOSUB 2001
        END
        DFG.UN.PRICE = 0
        DFG.PRT.DATE = ""
        MATWRITE DFG.REC ON DAILY.FNGD , CONO:DFG.SEQ.NO
        MORE = 0
    END CASE
  WHILE MORE = 1 DO REPEAT
  GOTO 100
*
**** JOB.NUMBER EXISTS ON JOB.STATS FILE
*
400*
  JSP.CNT = COUNT(JSTAT.SHP.PROD,VM) + (JSTAT.SHP.PROD # '')
  JSP.FND = 0
  FOR JSP = 1 TO JSP.CNT UNTIL JSP.FND
    IF JSTAT.SHP.PROD<1,JSP> # '' THEN
      JSP.FND = 1
      DFG.PROD = JSTAT.SHP.PROD<1,JSP>
      DFG.WHSE = JSTAT.SHP.WHSE<1,JSP>
    END
  NEXT JSP
  IF NOT(JSP.FND) THEN
    ERRMSG = "Can not read product from JOB.STATS file"
    GOSUB 91000
    GOTO 2000
  END
  MATREAD INV.REC FROM INVENTORY , CONO:DFG.PROD ELSE
    MAT INV.REC = ''
    INV.FULL.DESC = "?????????????????????????????????"
    INV.UNIT<1,2> = "???"
  END
  MATREAD WHSE.REC FROM WAREHOUSE , CONO:DFG.WHSE ELSE
    MAT WHSE.REC = ''
    WHS.DESC = "?????????????????????????"
  END
  MATREAD IWH.REC FROM INV.WHSE , CONO:DFG.PROD:"!":DFG.WHSE ELSE
    MAT IWH.REC = ""
  END
  MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CUST.NAME = '???????????????????'
  SCV.REC(3)<ECD.SCRN.NO,1> = DFG.JOB
  SCV.REC(4)<ECD.SCRN.NO,1> = JOB.CUST
  SCV.REC(5)<ECD.SCRN.NO,1> = CUST.NAME
  SCV.REC(6)<ECD.SCRN.NO,1> = JOB.DESC<1,1>
  SCV.REC(11)<ECD.SCRN.NO,1> = DFG.PROD
  SCV.REC(12)<ECD.SCRN.NO,1> = INV.FULL.DESC
  SCV.REC(13)<ECD.SCRN.NO,1> = INV.UNIT<1,2>
  SCV.REC(15)<ECD.SCRN.NO,1> = DFG.WHSE
  SCV.REC(16)<ECD.SCRN.NO,1> = WHS.DESC
  GOSUB 9000
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  GOSUB 7010
499*
  RETURN
*
**** ENTER RECEIPTS DATE
*
1000*
  ECD.NUM = 2 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    DFG.DATE = ECD.RET.VALUE
  END
  RETURN
*
**** ENTER JOB NUMBER
*
2000*
  ECD.NUM = 3
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 2009
    CASE ECD.RET.VALUE # ""
      ERRMSG = ""
      DFG.JOB = ECD.RET.VALUE
      GOSUB 8000
      IF ERRMSG # "" THEN
        DFG.JOB = ''
        GOSUB 91000 ; GOTO 2000
      END
      DFG.JOB = ECD.RET.VALUE
      CUST.ID = JOB.CUST
      SCV.REC(4)<ECD.SCRN.NO,1> = CUST.ID
      SCV.REC(5)<ECD.SCRN.NO,1> = CUST.NAME
      SCV.REC(6)<ECD.SCRN.NO,1> = JOB.DESC<1,1>
      ECD.ACTION = 3 ; CALL SCRN.EDIT
    CASE ECD.RET.VALUE = ""
      DFG.JOB = ''
      GOSUB 3000
      IF DFG.JOB = "" THEN GOTO 2000
      SCV.REC(3)<ECD.SCRN.NO,1> = DFG.JOB
      SCV.REC(4)<ECD.SCRN.NO,1> = CUST.ID
      SCV.REC(5)<ECD.SCRN.NO,1> = CUST.NAME
      SCV.REC(6)<ECD.SCRN.NO,1> = JOB.DESC<1,1>
      ECD.ACTION = 3 ; CALL SCRN.EDIT
  END CASE
  BEGIN CASE
    CASE JOB.STATUS<1,1> = 7
      ERRMSG = "This job has a purge status. Try again" ; GOSUB 91000 ; GOTO 2000
    CASE JOB.STATUS<1,1> = 8
      ERRMSG = "This job was purged and restored. Try again" ; GOSUB 91000 ; GOTO 2000
    CASE JOB.STATUS<1,1> = 9
      ERRMSG = "This job is cancelled" ; GOSUB 91000 ; GOTO 2000
    CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # ""
*
**** ENTER OPERATER INITIAL
*
2001*
      X=0;Y=23;MAXL=3;TYP=11;MINV='';MAXV='';O.R="R";FILL="#";HMSG=""
      PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE="END" THEN GOTO 2000
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
        MAT JSI.REC =""
        ERRMSG = "Invalid Initials . Try again" ; GOSUB 91000 ; GOTO 2001
      END
      DFG.INIT = VALUE
  END CASE
2009*
  RETURN
*
**** ENTER CUSTOMER FOR CUSTOMER XREF
*
3000*
  ECD.NUM = 4 ; ECD.VALDAT.CODE = 2 ; ECD.VALDAT.FILE = CUSTOMER ; ECD.PREFIX.ID = CONO
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 3009
    CASE ECD.VALDAT.ITEM # ""
      FOR CI = 1 TO CUST.REC.SIZE
        CUST.REC(CI) = ECD.VALDAT.ITEM<CI>
      NEXT CI
      CUST.ID = ECD.RET.VALUE
      GOSUB 4000
    CASE ECD.RET.VALUE = ""
      ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 3009
      IF ECD.RET.VALUE = '' THEN GOTO 3009
      GXR.XREF = CUSTOMER.XREF ; GXR.FILE = CUSTOMER
      GXR.LOC = 1 ; GXR.ATT<1,1> = 0 ; GXR.ATT<1,2> = 1 ; GXR.LEN<1,1> = 6 ; GXR.LEN<1,2> = 35
      GXR.TOP.LINE<1,1> = "CUSTOMER XREF SEARCH"
      GXR.HEADING<1,1> = "CUST #" ; GXR.HEADING<1,2> = "CUSTOMER NAME"
      GXR.ID = ''
      GXR.SRCH.ID = ECD.RET.VALUE
      GXR.TOP.LINE<1,2> = "SEARCH BY CUSTOMER NAME : ":GXR.SRCH.ID
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      IF GXR.ACTION # "X" THEN
        ECD.ACTION = 2 ; CALL SCRN.EDIT
      END
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(4)<ECD.SCRN.NO,1> = ""
        ECD.NUM = 4 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
        GOTO 3000
      END ELSE
        CUST.ID = GXR.ID
        MATREAD CUST.REC FROM CUSTOMER , CONO:GXR.ID ELSE
          ERRMSG = "Customer number ":GXR.ID:" is missing"
          GOSUB 91000
          SCV.REC(4)<ECD.SCRN.NO,1> = ""
          ECD.NUM = 4 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
          GOTO 3000
        END
        GOSUB 4000
      END
  END CASE
3009*
  RETURN
*
**** JOB XREF SEARCH
*
4000*
  GXR.XREF = CUSTOMER ; GXR.FILE = JOB
  GXR.TOP.LINE<1,1> = 'JOB XREF SEARCH'
  GXR.TOP.LINE<1,2> = "FOR CUSTOMER : ":CUST.ID:" ":CUST.NAME
  GXR.ID = ''
  GXR.SRCH.ID = CUST.ID
  CALL JOB.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
  ECD.ACTION = 2 ; CALL SCRN.EDIT
  IF GXR.ID = "" THEN
    DFG.JOB = ""
  END ELSE
    MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
      ERRMSG = "Job number ":GXR.ID:" is missing"
      GOSUB 91000
      DFG.JOB = ""
      GOTO 4999
    END
    MATREAD JSTAT.REC FROM JOB.STATS,CONO:GXR.ID ELSE MAT JSTAT.REC = ''
    POST.OSJ = 0
    DFG.JOB = GXR.ID
  END
4999*
  RETURN
*
**** ENTER PRODUCT NUMBER
*
5000*
  ECD.NUM = 11 ; ECD.VALDAT.CODE = 2 ; ECD.VALDAT.FILE = INVENTORY ; ECD.PREFIX.ID = CONO
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 5999
    CASE ECD.VALDAT.ITEM # ""
      FOR II = 1 TO INV.REC.SIZE
        INV.REC(II) = ECD.VALDAT.ITEM<II>
      NEXT II
      IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
        ERRMSG = "This product is not a semi or finished goods product . Try again" ; GOSUB 91000 ; GOTO 5000
      END
      IF INV.WHSE.CODE = "" THEN
        ERRMSG = "Please setup product warehouses before using receipts " ; GOSUB 91000
        GOTO 5000
      END
      SCV.REC(12)<ECD.SCRN.NO,1> = INV.FULL.DESC
      SCV.REC(13)<ECD.SCRN.NO,1> = INV.UNIT<1,2>
      ECD.NUM = 12 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
      ECD.NUM = 13 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
    CASE ECD.RET.VALUE = ''
      ECD.NUM = 12 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
      BEGIN CASE
        CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END"
          SCV.REC(12)<ECD.SCRN.NO,1> = ""
          ECD.NUM = 12 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
          GOTO 5000
        CASE 1
          GXR.LOC = 1 ; GXR.ATT<1,1> = 0 ; GXR.ATT<1,2> = 2 ; GXR.LEN<1,1> = 15 ; GXR.LEN<1,2> = 45
          GXR.HEADING<1,1> = "PRODUCT NUMBER " ; GXR.HEADING<1,2> = "DESCRIPTION"
          GXR.XREF = INVENTORY.XREF ; GXR.FILE = INVENTORY
          GXR.TOP.LINE<1,1> = "PRODUCT XREF SEARCH"
          GXR.TOP.LINE<1,2> = "SEARCH BY PRODUCT DESCRIPTION : ":VALUE
          GXR.SRCH.ID = ECD.RET.VALUE
          GXR.ID = ""
          CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
          IF GXR.ACTION # "X" THEN
            ECD.ACTION = 2 ; CALL SCRN.EDIT
          END
          SCV.REC(11)<ECD.SCRN.NO,1> = GXR.ID
          SCV.REC(12)<ECD.SCRN.NO,1> = ""
          SCV.REC(13)<ECD.SCRN.NO,1> = ""
          ECD.ACTION = 3 ; CALL SCRN.EDIT
          IF GXR.ID = "" THEN
            SCV.REC(11)<ECD.SCRN.NO,1> = ""
            SCV.REC(12)<ECD.SCRN.NO,1> = ""
            ECD.NUM = 11 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
            ECD.NUM = 12 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
            GOTO 5000
          END ELSE
            MATREAD INV.REC FROM INVENTORY , CONO:GXR.ID ELSE
              ERRMSG = "Product number ":VALUE:" is missing"
              GOTO 5000
            END
            IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
              ERRMSG = "This product is not a semi or finished goods product . Try again" ; GOSUB 91000 ; GOTO 5000
            END
            IF INV.WHSE.CODE = "" THEN
              ERRMSG = "Please setup product warehouses before using receipts " ; GOSUB 91000
              GOTO 5000
            END
            SCV.REC(12)<ECD.SCRN.NO,1> = INV.FULL.DESC
            SCV.REC(13)<ECD.SCRN.NO,1> = INV.UNIT<1,2>
            ECD.NUM = 12 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
            ECD.NUM = 13 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
            ECD.RET.VALUE = GXR.ID
          END
      END CASE
  END CASE
  IF INV.CUST # "" THEN
    IF "X":INV.CUST # "X":JOB.CUST THEN
      ERRMSG = "This inventory belongs to customer ":INV.CUST
      GOSUB 91000
      SCV.REC(12)=""; SCV.REC(13)=""
      ECD.NUM=12; ECD.ACTION=5; CALL SCRN.EDIT
      ECD.NUM=13; ECD.ACTION=5; CALL SCRN.EDIT
      MAT INV.REC = ""
      GOTO 5000
    END
  END
  IF ECD.RET.VALUE = DFG.PROD THEN CHGE.PROD = 0 ELSE CHGE.PROD = 1
  DFG.PROD = ECD.RET.VALUE
  GOSUB 9000
  IF OPTION = 1 AND CHGE.PROD THEN
    DFG.WHSE = ''
    DFG.LOC = ''
    DFG.R.S.ID = ''
    DFG.QTY = ''
    DFG.DIAM = ''
    DFG.SHEET = ''
    SCV.REC(15)<ECD.SCRN.NO,1> = '';ECD.ACTION = 5;ECD.NUM=15;CALL SCRN.EDIT
    SCV.REC(16)<ECD.SCRN.NO,1> = '';ECD.ACTION = 5;ECD.NUM=16;CALL SCRN.EDIT
    OLD.START.LINE = 0; LINES = 0
    GOSUB 19000
    GOSUB 7000
    IF ECD.RET.VALUE = 'END' THEN GOTO 5999
    GOSUB 10000
  END
*IF OPTION = 1 THEN GOSUB 7000
5999*
  RETURN
*
**** ENTER WAREHOUSE #
*
7000*
  ECD.NUM = 15
*ECD.VALDAT = VWHSE
  BEGIN CASE
    CASE W.CNT = 1
      SCV.REC(ECD.NUM)<ECD.SCRN.NO,1> = INV.WHSE.CODE<1,1>
      ECD.RET.VALUE = INV.WHSE.CODE<1,1>
      ECD.ACTION = 5; CALL SCRN.EDIT
    CASE 1
      ECD.HMSG = HWHSE
      ECD.ACTION = 4 ; CALL SCRN.EDIT
  END CASE
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 7009
    CASE 1
      MATREAD WHSE.REC FROM WAREHOUSE , CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Warehouse # (":ECD.RET.VALUE:") is missing" ; GOSUB 91000 ; GOTO 7000
      END
      MATREAD IWH.REC FROM INV.WHSE , CONO:DFG.PROD:"!":ECD.RET.VALUE ELSE
        ERRMSG = "Inventory warehouse record is missing" ; GOSUB 91000
        GOTO 7000
      END
      SCV.REC(16)<ECD.SCRN.NO,1> = WHS.DESC
      ECD.NUM = 16 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
      DFG.WHSE = ECD.RET.VALUE
      GOSUB 7010
  END CASE
7009*
  RETURN
7010*
  VLOC = ''
  HLOC = ''
  IF JSTAT.SHP.LOC # "" THEN HLOC<1,1> = 'LOCATION - ':JSTAT.SHP.LOC<1,1>
  VLOC = JSTAT.SHP.LOC<1,1>
  L.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # '')
  LI = 1
  FOR L = 2 TO L.CNT
    LOCATE JSTAT.SHP.LOC<1,L> IN VLOC<1>,1 SETTING J ELSE
      IF LEN(HLOC<1,LI>) > 50 THEN
        LI = LI + 1
        HLOC<1,LI> = 'LOCATION - ':JSTAT.SHP.LOC<1,L>
      END ELSE
        HLOC<1,LI> = HLOC<1,LI>:', ':JSTAT.SHP.LOC<1,L>
      END
      VLOC = VLOC:VM:JSTAT.SHP.LOC<1,L>
    END
  NEXT L
  RETURN
*
***** CHECK JOB FOR OUTSIDE JOB
8000*
  POST.OSJ = 0
  MATREAD JOB.REC FROM JOB , CONO:DFG.JOB ELSE
    MAT JOB.REC = ""
    FND = 0
    IF NUM(DFG.JOB) THEN
      IF DFG.JOB < J.CUTOFF.NUM THEN FND = 1
    END ELSE
      JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
      FOR JF = 1 TO JC.CNT WHILE FND = 0
        PREFIX.LEN = LEN(J.CUTOFF.PREFIX<1,JF>)
        IF J.CUTOFF.PREFIX<1,JF> = DFG.JOB[1,PREFIX.LEN] THEN
          CHK.VALUE = DFG.JOB[PREFIX.LEN+1,LEN(DFG.JOB)-PREFIX.LEN]
          IF NUM(CHK.VALUE) THEN
            IF CHK.VALUE < J.CUTOFF.PRE.NO<1,JF> THEN FND = 1
          END
        END
      NEXT JF
    END
    IF FND = 1 THEN
      JOB.DESC<1,1> = "* * OUTSIDE JOB * *"
      POST.OSJ = 1
    END ELSE
      JOB.DESC<1,1> = "* * UNKNOWN * *"
      ERRMSG = "JOB IS NOT ON FILE. TRY AGAIN !!" ; GOTO 8999
    END
  END
  MATREAD JSTAT.REC FROM JOB.STATS,CONO:DFG.JOB ELSE MAT JSTAT.REC=''
  IF CO.JOB.CUST.FLG = "C" AND POST.OSJ = 0 THEN
    MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
      CUST.NAME = "* * UNKNOWN * *"
    END
*  JOB.DESC<1,1> = CUST.NAME
  END
8999*
  RETURN
*
**** SETUP ALL PRODUCT VALUES AND PRINT DETAIL LINE HEADINGS
*
9000*
  VWHSE = "" ; HWHSE = ""
  HWHSE<1,1> = 'WAREHOUSE - ':INV.WHSE.CODE<1,1>
  VWHSE = INV.WHSE.CODE<1,1>
  W.CNT = COUNT(INV.WHSE.CODE, VM) + (INV.WHSE.CODE # "")
  I = 1
  FOR W = 2 TO W.CNT
    IF LEN(HWHSE<1,I>) > 50 THEN
      I = I + 1
      HWHSE<1,I> = 'WAREHOUSE - ':INV.WHSE.CODE<1,W>
    END ELSE
      HWHSE<1,I> = HWHSE<1,I>:", ":INV.WHSE.CODE<1,W>
    END
    VWHSE = VWHSE:",":INV.WHSE.CODE<1,W>
  NEXT W
  CHECK.LOC = ''; LC.CNT = ''; CHECK.R.S.ID = ''
  MAIN.HEAD = "Ln# Loc# "
  DASH.HEAD = '--- ---- '
  REC.QTY.HEAD = 'Rec Qty ':INV.UNIT<1,2> "L#3"
  RSX = 0; DQX = 0; RQX = 0
  BEGIN CASE
    CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
      ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1; ICR.CNV = "MD0"
      MAIN.HEAD = MAIN.HEAD : 'Skid Number '
      DASH.HEAD = DASH.HEAD : D11 : ' '
      RSX = 9 ; RQX = 21
      MAIN.HEAD = MAIN.HEAD : REC.QTY.HEAD
      DASH.HEAD = DASH.HEAD : D11
    CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
      ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10; ICR.DV2 = 1; ICR.CNV = "MD0"
      MAIN.HEAD = MAIN.HEAD : 'Roll Number '
      DASH.HEAD = DASH.HEAD : D11 : ' '
      RSX = 9 ; RQX = 21
      MAIN.HEAD = MAIN.HEAD : REC.QTY.HEAD
      DASH.HEAD = DASH.HEAD : D11
    CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
      ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12; ICR.CNV = "MD0"
      MAIN.HEAD = MAIN.HEAD : 'Roll Number '
      DASH.HEAD = DASH.HEAD : D11 : ' '
      RSX = 9 ; RQX = 21
      MAIN.HEAD = MAIN.HEAD : REC.QTY.HEAD
      DASH.HEAD = DASH.HEAD : D11
    CASE 1
      ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1; ICR.CNV = "MD2"
      BEGIN CASE
        CASE INV.PAP.TYPE = "ROLL"
          RSX = 9; RQX = 21 ; DQX = 33
          MAIN.HEAD = MAIN.HEAD : 'Roll Number ':REC.QTY.HEAD:' Diameter'
          DASH.HEAD = DASH.HEAD : D11:' ':D11:' ':D8
        CASE 1
          RSX = 0 ; RQX = 9
          MAIN.HEAD = MAIN.HEAD : REC.QTY.HEAD
          DASH.HEAD = DASH.HEAD : D11
      END CASE
  END CASE
  IF RQX = 0 THEN
    ERRMSG = 'Cannot determine quantity type'; GOSUB 91000 ; GOTO 99999
  END
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ''
  P_X  = 0 ; P_Y = 13 ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:13 ; P_VALUE := AM:MAIN.HEAD
  P_X  := AM:0 ; P_Y := AM:14 ; P_VALUE := AM:""
  P_X  := AM:0 ; P_Y := AM:14 ; P_VALUE := AM:DASH.HEAD
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
**** MAIN DETAIL LINE PROCESS
*
10000*
  IF DFG.LOC = "" THEN
    LOOP
      OPTION = 'A'
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 11000
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END ELSE
    LINES = COUNT(DFG.LOC, VM) + (DFG.LOC # "")
    LN = 1
  END
  GOSUB 19000
  RETURN
*
**** ENTER LINE INFORMATION
*
11000*
  GOSUB 19000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
**** ENTER LOC
*
11100*
  X = 4 ; Y = SLN ; TYP = 1 ; MAXL = 4
  HMSG = HLOC
*VALDAT = VLOC
  IF DFG.LOC<1,LN> = '' AND LN = 1 THEN
    O.R = 'R'
    VL.CNT = COUNT(VLOC, VM) + (VLOC # "")
    IF VL.CNT = 1 THEN DEFAULT = VLOC<1,1>; O.R = 'O'
  END ELSE
    IF DFG.LOC<1,LN> = '' THEN
      DEFAULT = DFG.LOC<1,LN-1>
    END ELSE
      DEFAULT = DFG.LOC<1,LN>
    END
    O.R = 'O'
  END
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    IF OPTION = "A" THEN
      DFG.LOC = DELETE(DFG.LOC,1,LN,0)
      DFG.R.S.ID = DELETE(DFG.R.S.ID,1,LN,0)
      DFG.QTY = DELETE(DFG.QTY,1,LN,0)
      DFG.DIAM = DELETE(DFG.DIAM,1,LN,0)
      DFG.SHEET = DELETE(DFG.SHEET,1,LN,0)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    P_X  = 4 ; P_Y = SLN ; P_VALUE = DFG.LOC<1,LN> ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11999
  END
  IF RSX = 0 THEN
    LOCATE VALUE IN DFG.LOC<1>,1 SETTING LFND ELSE LFND = LN
    IF LFND <> LN THEN
      ERRMSG = 'Cannot Enter Same Location Twice'
      GOSUB 91000; GOTO 11100
    END
  END
  DFG.LOC<1,LN> = VALUE
  LOC.CNT = COUNT(IWH.LOC,VM) + (IWH.LOC # "")
  LOCATE VALUE IN IWH.LOC<1>,1 SETTING LLOC ELSE
    LLOC = LOC.CNT + 1
  END
*
**** ENTER SKID NUMBER
*
11200*
  IF RSX * 1 # "0" THEN
    RI = 1
    H.RSID = ""; DEF.RSID = ""
    FOR L = 1 TO L.CNT
      IF DFG.LOC<1,LN> = JSTAT.SHP.LOC<1,L> THEN
        BEGIN CASE
          CASE H.RSID = ""
            H.RSID<1,RI> = "Roll/Skid - ":JSTAT.SHP.R.S.ID<1,L>
            DEF.RSID<1,1> = JSTAT.SHP.R.S.ID<1,L>
          CASE LEN(H.RSID<1,RI>) > 50
            RI = RI + 1
            H.RSID<1,RI> = "Roll/Skid - ":JSTAT.SHP.R.S.ID<1,L>
          CASE 1
            H.RSID<1,RI> = H.RSID<1,RI>:', ':JSTAT.SHP.R.S.ID<1,L>
            DEF.RSID = DEF.RSID:VM:JSTAT.SHP.R.S.ID<1,L>
        END CASE
      END
    NEXT L
    HMSG = H.RSID
    IF CATG.R.S.ID = "Y" THEN
      SKID.NUM=DFG.WHSE:"!":DFG.LOC<1,LN>
      LOCATE SKID.NUM IN DFG.R.S.ID<1>,1 SETTING FND ELSE FND = LN
      IF FND <> LN THEN
        ERRMSG = 'Cannot Enter Same Location Twice'
        GOSUB 91000; GOTO 11100
      END
      P_X  = RSX ; P_Y = SLN ; P_VALUE = SKID.NUM "L#11" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DFG.R.S.ID<1,LN> = SKID.NUM
    END ELSE
      X = RSX; Y = SLN; TYP = 1; MAXL = 11; O.R = 'R'
      IF DFG.R.S.ID<1,LN> # '' THEN
        DEFAULT = DFG.R.S.ID<1,LN> ; O.R = 'O'
      END ELSE
        RS.CNT = COUNT(DEF.RSID, VM) + (DEF.RSID # "")
        IF RS.CNT = 1 THEN DEFAULT = DEF.RSID<1,1>; O.R = 'O'
      END
      CALL EDIT.SUB
      IF VALUE = 'END' AND OPTION = 'A' THEN GOTO 11100
      IF VALUE = 'END' AND OPTION # 'A' THEN PRINT @(RSX,SLN):DFG.R.S.ID<1,LN>; GOTO 11100
      LOCATE VALUE IN DFG.R.S.ID<1>,1 SETTING FND ELSE FND = LN
      IF FND <> LN THEN
        ERRMSG = 'Cannot Enter Same Skid/Roll Twice'
        GOSUB 91000; GOTO 11200
      END
      DFG.R.S.ID<1,LN> = VALUE
    END
    RLOC = 0
    FOR L = 1 TO LOC.CNT WHILE RLOC = 0
      MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DFG.PROD:"!":DFG.WHSE:"!":IWH.LOC<1,L> ELSE
        MAT IWLO.REC = ""
      END
      LOCATE DFG.R.S.ID<1,LN> IN IWLO.R.S.ID<1>,1 SETTING FND ELSE FND = 0
      MXRS.VALUE = 0
      BEGIN CASE
        CASE FND = 0
        CASE CATG.R.S.ID = 'Y' AND L = LLOC
        CASE L = LLOC
          X= 0 ; Y = 23 ; TYP = 18 ; MAXL = 1
          PMSG = 'Are You Adjusting Quantity For Skid/Roll (Y/N) :'
          CALL EDIT.SUB
          P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
          CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          IF VALUE = 'N' THEN
            RLOC = -1
          END ELSE
            RLOC = FND
            MXRS.VALUE = INT(((IWLO.CURR.WT<1,RLOC> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
          END
        CASE 1
          ERRMSG = 'Skid/Roll Belongs To Location ':IWH.LOC<1,L>
          GOSUB 91000; RLOC = -1
      END CASE
    NEXT L
    BEGIN CASE
      CASE RLOC < 0
        GOTO 11200
      CASE RLOC = 0
        RLOC = COUNT(IWH.LOC<1,LLOC>,SVM) + (IWH.LOC<1,LLOC> # '') + 1
    END CASE
    LC.CNT = ''; CHECK.R.S.ID = ''
*   IF CHECK.LOC = '' THEN
    MAT SAVE.IWH.REC = MAT IWH.REC
    WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # '')
    FOR I = 1 TO WHSE.CNT
      IF INV.WHSE.CODE<1,I> # DFG.WHSE THEN
        MATREAD IWH.REC FROM INV.WHSE, CONO : DFG.PROD : '!' : INV.WHSE.CODE<1,I> ELSE MAT IWH.REC = ''
        CHECK.LOC<I> = IWH.LOC
        LC.CNT<I> = COUNT(IWH.LOC,VM) + (IWH.LOC # '')
        CHECK.R.S.ID<I> = ""
        FOR LLS = 1 TO LC.CNT<I>
          MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:DFG.PROD:"!":INV.WHSE.CODE<1,I>:"!":IWH.LOC<1,LLS> ELSE MAT IWLO.REC = ""
          IF CHECK.R.S.ID<I> = "" THEN
            CHECK.R.S.ID<I> = IWLO.R.S.ID
          END ELSE
            IF IWLO.R.S.ID # "" THEN
              CHECK.R.S.ID<I> = CHECK.R.S.ID<I>:VM:IWLO.R.S.ID
            END
          END
        NEXT LLS
      END
    NEXT I
    MAT IWH.REC = MAT SAVE.IWH.REC
*   END
    FND = 0
    FOR W = 1 TO WHSE.CNT UNTIL FND
      LOCATE DFG.R.S.ID<1,LN> IN CHECK.R.S.ID<W>,1 SETTING FND ELSE FND = 0
      IF FND THEN
        ERRMSG = "Skid/Roll Belongs To Warehouse ":INV.WHSE.CODE<1,W>
        GOSUB 91000
      END
    NEXT W
    IF FND THEN
      DFG.R.S.ID<1,LN> = '' ; GOTO 11200
    END
  END ELSE
    DFG.R.S.ID<1,LN> = ""
    MXRS.VALUE = IWLO.LOC.ON.HAND
  END
*
**** ENTER SHEET WGHT
*
11300*
  BEGIN CASE
    CASE RQX
      X = RQX; Y = SLN; MAXL = 11; O.R = 'R'
      BEGIN CASE
        CASE ICR.CNV = "MD0"
          IF RES.FLG = 0 THEN
            TYP = 3
          END ELSE
            TYP = 4 ; SCALER = 0
          END
        CASE 1
          TYP = 4; SCALER = 2
      END CASE
      IF DFG.QTY<1,LN> <> '' THEN
        O.R = 'O'
        IF DFG.QTY<1,LN> > 0 THEN
          DEFAULT = INT(((DFG.QTY<1,LN> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
        END ELSE
          DEFAULT = INT(((DFG.QTY<1,LN> / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
        END
        DEFAULT = OCONV(DEFAULT,ICR.CNV)
      END
      CALL EDIT.SUB
      BEGIN CASE
        CASE VALUE = 'END'
          IF OPTION # 'A' THEN
            P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(DFG.SHEET<1,LN>,ICR.CNV) "R#11" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
          END
          GOTO 11100
        CASE VALUE < 0
          IF RES.FLG = 0 THEN
            ERRMSG = "Can't receive negative quantity" ; GOSUB 91000 ; GOTO 11300
          END ELSE
            IF VALUE * (-1) > MXRS.VALUE THEN
              ERRMSG = "Can't let skid go negative" ; GOSUB 91000 ; GOTO 11300
            END
          END
          ADDQ = "-.5"
        CASE VALUE = 0
          ADDQ = 0
          ERRMSG = "Can't receive zero quantity"; GOSUB 91000; GOTO 11300
        CASE 1
          ADDQ = .5
      END CASE
      WT.VALUE = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + ADDQ)
      OQ.VALUE = 0
      RQ.VALUE = INT(((WT.VALUE / ICR.DV1) * ICR.MT1) / ICR.DV2 + ADDQ)
  END CASE
  P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(RQ.VALUE,ICR.CNV) "R#11" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DFG.QTY<1,LN> = WT.VALUE
  DFG.SHEET<1,LN> = RQ.VALUE
*
**** ENTER DIAMETER
*
11400*
  IF DQX THEN
    X = DQX; Y = SLN; TYP = 4; SCALER = 2; MAXL = 8
    IF DFG.DIAM<1,LN> # "" THEN
      DEFAULT = OCONV(DFG.DIAM<1,LN>, "MD2"); O.R = "O"
    END
    CALL EDIT.SUB
    IF VALUE = "END" THEN
      IF OPTION # 'A' THEN PRINT @(DQX,SLN):OCONV(DFG.DIAM<1,LN>,"MD2")"R#8"
      GOTO 11100
    END
    DFG.DIAM<1,LN> = VALUE
  END
  LINES = COUNT(DFG.LOC, VM) + (DFG.LOC # "")
11999*
  RETURN
*
**** SCROLL SUB
*
19000*
  START.LINE = 1 + INT((LN-1) / PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 19999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DFG.LOC<1,N> "L#4"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF RSX THEN
      P_X  = RSX ; P_Y = SLN ; P_VALUE = DFG.R.S.ID<1,N> "L#11" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    P_X  = RQX ; P_Y = SLN ; P_VALUE = OCONV(DFG.SHEET<1,N>,ICR.CNV) "R#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF DQX THEN
      P_X  = DQX ; P_Y = SLN ; P_VALUE = OCONV(DFG.DIAM<1,N>,'MD2') "R#8" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
19999*
  RETURN
*
**** ENTER LINE NUMBER
*
60000*
  GOSUB 19000
  ECD.NUM = 9
  ECD.MINV = OLD.START.LINE ; ECD.MAXV = LAST.LINE
  ECD.HMSG<1,1> = "Start line = ":OLD.START.LINE:" End line = ":LAST.LINE
  ECD.ACTION = 4 ; CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = '' OR LNO = 'END' THEN LNO = 0
  RETURN
*
**** CALLS FOR SYSCOM
*
91000*
  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000*
  ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000*
  ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
END
