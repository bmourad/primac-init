     SUBROUTINE PNL.SUMMARY.SUB(CONO,JOB.NUM,MAT PNL.REC)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB
*********************************************************************
* REVISION     - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - JCSBP
* PROGRAM      - PNL.SUMMARY.SUB
* BY           - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE         - 10/10/86
* DESCRIPTION  -
*********************************************************************
*COPY>JCS.CPYLIB>MASTER.TOT.REC
*COPY>JCS.CPYLIB>PNL.JOB
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*--- SAVE JOB RECORD
*
     DIM MASTER.REC(JOB.REC.SIZE)     ;* T21796
     MAT MASTER.REC = MAT JOB.REC
*
*--- LOAD PNL.REC FOR MASTER JOB
*
     MAT PNL.REC = ""
     PNL.NO = 1
     PNL.JOB = JOB.NUM
     TR.CNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
     FOR TR = 1 TO TR.CNT
        SEQ.CNT = COUNT(JOB.LB.SEQ<1,TR>,SVM) + (JOB.LB.SEQ<1,TR> # "")
        GOSUB 10100
     NEXT TR
     TR.CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
     FOR TR = 1 TO TR.CNT
        SEQ.CNT = COUNT(JOB.MT.SEQ<1,TR>,SVM) + (JOB.MT.SEQ<1,TR> # "")
        GOSUB 10200
     NEXT TR
     TR.CNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
     FOR TR = 1 TO TR.CNT
        SEQ.CNT = COUNT(JOB.OS.SEQ<1,TR>,SVM) + (JOB.OS.SEQ<1,TR> # "")
        GOSUB 10300
     NEXT TR
     TR.CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
     FOR TR = 1 TO TR.CNT
        SEQ.CNT = COUNT(JOB.SP.SEQ<1,TR>,SVM) + (JOB.SP.SEQ<1,TR> # "")
        GOSUB 10400
     NEXT TR
     TR.CNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
     FOR TR = 1 TO TR.CNT
        SEQ.CNT = COUNT(JOB.MS.SEQ<1,TR>,SVM) + (JOB.MS.SEQ<1,TR> # "")
        GOSUB 10500
     NEXT TR
     IF JOB.TYPE = "N" THEN
        PNL.SA.NCHG = PNL.SA.NCHG + JOB.TOT.INV
     END ELSE
        PNL.SA.CHG = PNL.SA.CHG + JOB.TOT.INV
     END
*
*--- LOAD SUB JOBS TO MASTER.TOT.REC
*
     SCNT = COUNT(MASTER.SUBS,VM) + (MASTER.SUBS # "")
     FOR S = 1 TO SCNT
        MATREAD JOB.REC FROM JOB, CONO:MASTER.SUBS<1,S> ELSE GOTO 1999
        PNL.NO = PNL.NO + 1
        PNL.JOB<1,PNL.NO> = MASTER.SUBS<1,S>
*
*--- TOTAL COST AND SALE
*
        MASTER.CONF.AMT = MASTER.CONF.AMT + JOB.CONF.AMT
        MASTER.EST.COST = MASTER.EST.COST + JOB.EST.COST
        MASTER.EST.SALE = MASTER.EST.SALE + JOB.EST.SALE
        MASTER.TOT.DCOST = MASTER.TOT.DCOST + JOB.TOT.DCOST
        MASTER.TOT.COST = MASTER.TOT.COST + JOB.TOT.COST
        MASTER.TOT.SALE = MASTER.TOT.SALE + JOB.TOT.SALE
*    FOR I = 1 TO 7
*       MASTER.QTY<1,I> = MASTER.QTY<1,I> + JOB.QTY<1,I>
*    NEXT I
        MASTER.WIP<1,1> = MASTER.WIP<1,1> + JOB.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 4
              MASTER.WIP<1,I,J> = MASTER.WIP<1,I,J> + JOB.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.WIP<1,4> < MASTER.WIP<1,4> OR MASTER.WIP<1,4> = "" THEN
           MASTER.WIP<1,4> = JOB.WIP<1,4>
        END
        IF JOB.WIP<1,5> > MASTER.WIP<1,5> THEN
           MASTER.WIP<1,5> = JOB.WIP<1,5>
        END
*
*--- INVOICES
*
        TR.CNT = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
        FOR TR = 1 TO TR.CNT
           LOCATE JOB.INV.NO<1,TR> IN MASTER.INV.NO<1>,1 SETTING IFND ELSE
*          LOCATE JOB.INV.DATE<1,TR> IN MASTER.INV.DATE<1>,1 BY "AR" SETTING IFND ELSE NULL
              INS JOB.INV.NO<1,TR> BEFORE MASTER.INV.NO<1,IFND>
              INS JOB.INV.DATE<1,TR> BEFORE MASTER.INV.DATE<1,IFND>
              INS "" BEFORE MASTER.INV.CAT<1,IFND>
              INS "" BEFORE MASTER.INV.AMT<1,IFND>
              INS "0" BEFORE MASTER.INV.BAL<1,IFND>
           END
           CCNT = COUNT(JOB.INV.CAT<1,TR>,SVM) + (JOB.INV.CAT<1,TR> # "")
           FOR C = 1 TO CCNT
              LOCATE JOB.INV.CAT<1,TR,C> IN MASTER.INV.CAT<1,IFND>,1 SETTING CFND ELSE
                 MASTER.INV.CAT<1,IFND,CFND> = JOB.INV.CAT<1,TR,C>
              END
              MASTER.INV.AMT<1,IFND,CFND> = MASTER.INV.AMT<1,IFND,CFND> + JOB.INV.AMT<1,TR,C>
           NEXT C
           MASTER.INV.BAL<1,IFND> = MASTER.INV.BAL<1,IFND> + JOB.INV.BAL<1,TR>
        NEXT TR
        MASTER.TOT.INV = MASTER.TOT.INV + JOB.TOT.INV
        MASTER.TOT.BAL = MASTER.TOT.BAL + JOB.TOT.BAL
        IF JOB.TYPE = "N" THEN
           PNL.SA.NCHG = PNL.SA.NCHG + JOB.TOT.INV
        END ELSE
           PNL.SA.CHG = PNL.SA.CHG + JOB.TOT.INV
        END
*
*--- RESERVE
*
        TR.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
        FOR TR = 1 TO TR.CNT
           PROD = JOB.RESV.MATL<1,TR>
           WHSE = JOB.RESV.WHSE<1,TR>
           PTR = 1
           LOOP
              LOCATE PROD IN MASTER.RESV.MATL<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 IF MASTER.RESV.WHSE<1,FND> = WHSE THEN PTR = 0 ELSE PTR = FND + 1
              END
           WHILE PTR AND FND DO REPEAT
           IF FND THEN
              MASTER.ALOC.QTY<1,FND> = MASTER.ALOC.QTY<1,FND> + JOB.ALOC.QTY<1,TR>
              MASTER.RESV.QTY<1,FND> = MASTER.RESV.QTY<1,FND> + JOB.RESV.QTY<1,TR>
              MASTER.USED.QTY<1,FND> = MASTER.USED.QTY<1,FND> + JOB.USED.QTY<1,TR>
              MASTER.ALOC.AMT<1,FND> = MASTER.ALOC.AMT<1,FND> + JOB.ALOC.AMT<1,TR>
              MASTER.RESV.AMT<1,FND> = MASTER.RESV.AMT<1,FND> + JOB.RESV.AMT<1,TR>
              MASTER.USED.AMT<1,FND> = MASTER.USED.AMT<1,FND> + JOB.USED.AMT<1,TR>
           END ELSE
              FND = COUNT(MASTER.RESV.MATL,VM) + (MASTER.RESV.MATL # "") + 1
              MASTER.RESV.MATL<1,FND> = PROD
              MASTER.RESV.WHSE<1,FND> = WHSE
              MASTER.RESV.DATE<1,FND> = JOB.RESV.DATE<1,TR>
              MASTER.ALOC.QTY<1,FND> = JOB.ALOC.QTY<1,TR>
              MASTER.RESV.QTY<1,FND> = JOB.RESV.QTY<1,TR>
              MASTER.USED.QTY<1,FND> = JOB.USED.QTY<1,TR>
              MASTER.ALOC.AMT<1,FND> = JOB.ALOC.AMT<1,TR>
              MASTER.RESV.AMT<1,FND> = JOB.RESV.AMT<1,TR>
              MASTER.USED.AMT<1,FND> = JOB.USED.AMT<1,TR>
           END
        NEXT TR
*
*--- LABOR
*
        MASTER.LB.WIP<1,1> = MASTER.LB.WIP<1,1> + JOB.LB.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 4
              MASTER.LB.WIP<1,I,J> = MASTER.LB.WIP<1,I,J> + JOB.LB.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.LB.WIP<1,4> < MASTER.LB.WIP<1,4> OR MASTER.LB.WIP<1,4> = "" THEN
           MASTER.LB.WIP<1,4> = JOB.LB.WIP<1,4>
        END
        IF JOB.LB.WIP<1,5> > MASTER.LB.WIP<1,5> THEN
           MASTER.LB.WIP<1,5> = JOB.LB.WIP<1,5>
        END
        TR.CNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
        FOR TR = 1 TO TR.CNT
           DEPT = JOB.LB.DEPT<1,TR>
           CCTR = JOB.LB.CCTR<1,TR>
           PTR = 1
           LOOP
              LOCATE DEPT IN MASTER.LB.DEPT<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 IF CCTR = MASTER.LB.CCTR<1,FND> THEN PTR = 0 ELSE PTR = FND + 1
              END
           WHILE FND AND PTR DO REPEAT
           IF FND THEN
              IF JOB.LB.DATE<1,TR,1> > MASTER.LB.DATE<1,FND,1> THEN
                 MASTER.LB.DATE<1,FND,1> = JOB.LB.DATE<1,TR,1>
                 MASTER.LB.OPER<1,FND> = JOB.LB.OPER<1,TR>
              END
              MASTER.LB.HRS<1,FND> = MASTER.LB.HRS<1,FND> + JOB.LB.HRS<1,TR>
              MASTER.LB.IMP<1,FND> = MASTER.LB.IMP<1,FND> + JOB.LB.IMP<1,TR>
              FOR SEQ = 1 TO 5
                 MASTER.LB.TCOST<1,FND,SEQ> = MASTER.LB.TCOST<1,FND,SEQ> + JOB.LB.TCOST<1,TR,SEQ>
              NEXT SEQ
              FOR I = 1 TO 4
                 MASTER.LB.DCOST<1,FND,I> = MASTER.LB.DCOST<1,FND,I> + JOB.LB.DCOST<1,TR,I>
              NEXT I
              MASTER.LB.COST<1,FND> = MASTER.LB.COST<1,FND> + JOB.LB.COST<1,TR>
              MASTER.LB.SALE<1,FND> = MASTER.LB.SALE<1,FND> + JOB.LB.SALE<1,TR>
           END ELSE
              FND = COUNT(MASTER.LB.DEPT,VM) + (MASTER.LB.DEPT # "") + 1
              MASTER.LB.DEPT<1,FND> = DEPT
              MASTER.LB.CCTR<1,FND> = CCTR
              MASTER.LB.OPER<1,FND> = JOB.LB.OPER<1,TR>
              MASTER.LB.HRS<1,FND> = JOB.LB.HRS<1,TR>
              MASTER.LB.IMP<1,FND> = JOB.LB.IMP<1,TR>
              MASTER.LB.DATE<1,FND,1> = JOB.LB.DATE<1,TR,1>
              MASTER.LB.TCOST<1,FND> = JOB.LB.TCOST<1,TR>
              FOR I = 1 TO 4
                 MASTER.LB.DCOST<1,FND,I> = JOB.LB.DCOST<1,TR,I>
              NEXT I
              MASTER.LB.COST<1,FND> = JOB.LB.COST<1,TR>
              MASTER.LB.SALE<1,FND> = JOB.LB.SALE<1,TR>
           END
           SEQ.CNT = COUNT(JOB.LB.SEQ<1,TR>,SVM) + (JOB.LB.SEQ<1,TR> # "")
           FOR SEQ = 1 TO SEQ.CNT
              LOCATE JOB.LB.SEQ<1,TR,SEQ> IN MASTER.LB.SEQ<1,FND>,1 BY "AR" SETTING POS ELSE
                 INS JOB.LB.SEQ<1,TR,SEQ> BEFORE MASTER.LB.SEQ<1,FND,POS>
              END
           NEXT SEQ
           GOSUB 10100
        NEXT TR
*
*--- MATL
*
        MASTER.MT.WIP<1,1> = MASTER.MT.WIP<1,1> + JOB.MT.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 3
              MASTER.MT.WIP<1,I,J> = MASTER.MT.WIP<1,I,J> + JOB.MT.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.MT.WIP<1,4> < MASTER.MT.WIP<1,4> OR MASTER.MT.WIP<1,4> = "" THEN
           MASTER.MT.WIP<1,4> = JOB.MT.WIP<1,4>
        END
        IF JOB.MT.WIP<1,5> > MASTER.MT.WIP<1,5> THEN
           MASTER.MT.WIP<1,5> = JOB.MT.WIP<1,5>
        END
        TR.CNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
        FOR TR = 1 TO TR.CNT
           DEPT = JOB.MT.DEPT<1,TR>
           CCTR = JOB.MT.CCTR<1,TR>
           PROD = JOB.MT.PROD<1,TR>
           WHSE = JOB.MT.WHSE<1,TR>
           PTR = 1
           LOOP
              LOCATE DEPT IN MASTER.MT.DEPT<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 BEGIN CASE
                    CASE CCTR # MASTER.MT.CCTR<1,FND>
                       PTR = FND + 1
                    CASE PROD # MASTER.MT.PROD<1,FND>
                       PTR = FND + 1
                    CASE WHSE # MASTER.MT.WHSE<1,FND>
                       PTR = FND + 1
                    CASE 1
                       PTR = 0
                 END CASE
              END
           WHILE FND AND PTR DO REPEAT
           IF FND THEN
              MASTER.MT.QTY<1,FND> = MASTER.MT.QTY<1,FND> + JOB.MT.QTY<1,TR>
              IF JOB.MT.DATE<1,TR,1> > MASTER.MT.DATE<1,FND,1> THEN
                 MASTER.MT.DATE<1,FND,1> = JOB.MT.DATE<1,TR,1>
              END
              FOR SEQ = 1 TO 5
                 MASTER.MT.TCOST<1,FND,SEQ> = MASTER.MT.TCOST<1,FND,SEQ> + JOB.MT.TCOST<1,TR,SEQ>
              NEXT SEQ
              FOR I = 1 TO 3
                 MASTER.MT.DCOST<1,FND,I> = MASTER.MT.DCOST<1,FND,I> + JOB.MT.DCOST<1,TR,I>
              NEXT I
              MASTER.MT.COST<1,FND> = MASTER.MT.COST<1,FND> + JOB.MT.COST<1,TR>
              MASTER.MT.SALE<1,FND> = MASTER.MT.SALE<1,FND> + JOB.MT.SALE<1,TR>
           END ELSE
              FND = COUNT(MASTER.MT.DEPT,VM) + (MASTER.MT.DEPT # "") + 1
              MASTER.MT.DEPT<1,FND> = DEPT
              MASTER.MT.CCTR<1,FND> = CCTR
              MASTER.MT.PROD<1,FND> = PROD
              MASTER.MT.WHSE<1,FND> = WHSE
              MASTER.MT.QTY<1,FND> = JOB.MT.QTY<1,TR>
              MASTER.MT.DATE<1,FND,1> = JOB.MT.DATE<1,TR,1>
              MASTER.MT.TCOST<1,FND> = JOB.MT.TCOST<1,TR>
              FOR I = 1 TO 3
                 MASTER.MT.DCOST<1,FND,I> = JOB.MT.DCOST<1,TR,I>
              NEXT I
              MASTER.MT.COST<1,FND> = JOB.MT.COST<1,TR>
              MASTER.MT.SALE<1,FND> = JOB.MT.SALE<1,TR>
           END
           SEQ.CNT = COUNT(JOB.MT.SEQ<1,TR>,SVM) + (JOB.MT.SEQ<1,TR> # "")
           FOR SEQ = 1 TO SEQ.CNT
              LOCATE JOB.MT.SEQ<1,TR,SEQ> IN MASTER.MT.SEQ<1,FND>,1 BY "AR" SETTING POS ELSE
                 INS JOB.MT.SEQ<1,TR,SEQ> BEFORE MASTER.MT.SEQ<1,FND,POS>
              END
           NEXT SEQ
           GOSUB 10200
        NEXT TR
*
*--- OSP
*
        MASTER.OS.WIP<1,1> = MASTER.OS.WIP<1,1> + JOB.OS.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 2
              MASTER.OS.WIP<1,I,J> = MASTER.OS.WIP<1,I,J> + JOB.OS.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.OS.WIP<1,4> < MASTER.OS.WIP<1,4> OR MASTER.OS.WIP<1,4> = "" THEN
           MASTER.OS.WIP<1,4> = JOB.OS.WIP<1,4>
        END
        IF JOB.OS.WIP<1,5> > MASTER.OS.WIP<1,5> THEN
           MASTER.OS.WIP<1,5> = JOB.OS.WIP<1,5>
        END
        TR.CNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
        FOR TR = 1 TO TR.CNT
           DEPT = JOB.OS.DEPT<1,TR>
           CCTR = JOB.OS.CCTR<1,TR>
           PLINE = JOB.OS.PLINE<1,TR>
           PTR = 1
           LOOP
              LOCATE DEPT IN MASTER.OS.DEPT<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 BEGIN CASE
                    CASE CCTR # MASTER.OS.CCTR<1,FND>
                       PTR = FND + 1
                    CASE PLINE # MASTER.OS.PLINE<1,FND>
                       PTR = FND + 1
                    CASE 1
                       PTR = 0
                 END CASE
              END
           WHILE FND AND PTR DO REPEAT
           IF FND THEN
              IF JOB.OS.DATE<1,TR,1> > MASTER.OS.DATE<1,FND,1> THEN
                 MASTER.OS.VEND<1,FND> = JOB.OS.VEND<1,TR>
                 MASTER.OS.DATE<1,FND,1> = JOB.OS.DATE<1,TR,1>
              END
              MASTER.OS.QTY<1,FND> = MASTER.OS.QTY<1,FND> + JOB.OS.QTY<1,TR>
              FOR SEQ = 1 TO 5
                 MASTER.OS.TCOST<1,FND,SEQ> = MASTER.OS.TCOST<1,FND,SEQ> + JOB.OS.TCOST<1,TR,SEQ>
              NEXT SEQ
              MASTER.OS.DCOST<1,FND> = MASTER.OS.DCOST<1,FND> + JOB.OS.DCOST<1,TR>
              MASTER.OS.COST<1,FND> = MASTER.OS.COST<1,FND> + JOB.OS.COST<1,TR>
              MASTER.OS.SALE<1,FND> = MASTER.OS.SALE<1,FND> + JOB.OS.SALE<1,TR>
           END ELSE
              FND = COUNT(MASTER.OS.DEPT,VM) + (MASTER.OS.DEPT # "") + 1
              MASTER.OS.DEPT<1,FND> = DEPT
              MASTER.OS.CCTR<1,FND> = CCTR
              MASTER.OS.PLINE<1,FND> = PLINE
              MASTER.OS.VEND<1,FND> = JOB.OS.VEND<1,TR>
              MASTER.OS.QTY<1,FND> = JOB.OS.QTY<1,TR>
              MASTER.OS.DATE<1,FND,1> = JOB.OS.DATE<1,TR,1>
              MASTER.OS.TCOST<1,FND> = JOB.OS.TCOST<1,TR>
              MASTER.OS.DCOST<1,FND> = JOB.OS.DCOST<1,TR>
              MASTER.OS.COST<1,FND> = JOB.OS.COST<1,TR>
              MASTER.OS.SALE<1,FND> = JOB.OS.SALE<1,TR>
           END
           SEQ.CNT = COUNT(JOB.OS.SEQ<1,TR>,SVM) + (JOB.OS.SEQ<1,TR> # "")
           FOR SEQ = 1 TO SEQ.CNT
              LOCATE JOB.OS.SEQ<1,TR,SEQ> IN MASTER.OS.SEQ<1,FND>,1 BY "AR" SETTING POS ELSE
                 INS JOB.OS.SEQ<1,TR,SEQ> BEFORE MASTER.OS.SEQ<1,FND,POS>
              END
           NEXT SEQ
           GOSUB 10300
        NEXT TR
*
*--- SHIP
*
        MASTER.SP.WIP<1,1> = MASTER.SP.WIP<1,1> + JOB.SP.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 2
              MASTER.SP.WIP<1,I,J> = MASTER.SP.WIP<1,I,J> + JOB.SP.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.SP.WIP<1,4> < MASTER.SP.WIP<1,4> OR MASTER.SP.WIP<1,4> = "" THEN
           MASTER.SP.WIP<1,4> = JOB.SP.WIP<1,4>
        END
        IF JOB.SP.WIP<1,5> > MASTER.SP.WIP<1,5> THEN
           MASTER.SP.WIP<1,5> = JOB.SP.WIP<1,5>
        END
        TR.CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
        FOR TR = 1 TO TR.CNT
           DEPT = JOB.SP.DEPT<1,TR>
           CCTR = JOB.SP.CCTR<1,TR>
           PTR = 1
           LOOP
              LOCATE DEPT IN MASTER.SP.DEPT<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 IF CCTR = MASTER.SP.CCTR<1,FND> THEN PTR = 0 ELSE PTR = FND + 1
              END
           WHILE FND AND PTR DO REPEAT
           IF FND THEN
              IF JOB.SP.DATE<1,TR,1> > MASTER.SP.DATE<1,FND,1> THEN
                 MASTER.SP.OPER<1,FND> = JOB.SP.OPER<1,TR>
                 MASTER.SP.DATE<1,FND,1> = JOB.SP.DATE<1,TR,1>
                 MASTER.SP.VIA<1,FND> = JOB.SP.VIA<1,TR>
              END
              MASTER.SP.QTY<1,FND> = MASTER.SP.QTY<1,FND> + JOB.SP.QTY<1,TR>
              FOR SEQ = 1 TO 5
                 MASTER.SP.TCOST<1,FND,SEQ> = MASTER.SP.TCOST<1,FND,SEQ> + JOB.SP.TCOST<1,TR,SEQ>
              NEXT SEQ
              MASTER.SP.DCOST<1,FND> = MASTER.SP.DCOST<1,FND> + JOB.SP.DCOST<1,TR>
              MASTER.SP.COST<1,FND> = MASTER.SP.COST<1,FND> + JOB.SP.COST<1,TR>
              MASTER.SP.SALE<1,FND> = MASTER.SP.SALE<1,FND> + JOB.SP.SALE<1,TR>
           END ELSE
              FND = COUNT(MASTER.SP.DEPT,VM) + (MASTER.SP.DEPT # "") + 1
              MASTER.SP.DEPT<1,FND> = DEPT
              MASTER.SP.CCTR<1,FND> = CCTR
              MASTER.SP.OPER<1,FND> = JOB.SP.OPER<1,TR>
              MASTER.SP.QTY<1,FND> = JOB.SP.QTY<1,TR>
              MASTER.SP.VIA<1,FND> = JOB.SP.VIA<1,TR>
              MASTER.SP.DATE<1,FND,1> = JOB.SP.DATE<1,TR,1>
              MASTER.SP.TCOST<1,FND> = JOB.SP.TCOST<1,TR>
              MASTER.SP.DCOST<1,FND> = JOB.SP.DCOST<1,TR>
              MASTER.SP.COST<1,FND> = JOB.SP.COST<1,TR>
              MASTER.SP.SALE<1,FND> = JOB.SP.SALE<1,TR>
           END
           SEQ.CNT = COUNT(JOB.SP.SEQ<1,TR>,SVM) + (JOB.SP.SEQ<1,TR> # "")
           FOR SEQ = 1 TO SEQ.CNT
              LOCATE JOB.SP.SEQ<1,TR,SEQ> IN MASTER.SP.SEQ<1,FND>,1 BY "AR" SETTING POS ELSE
                 INS JOB.SP.SEQ<1,TR,SEQ> BEFORE MASTER.SP.SEQ<1,FND,POS>
              END
           NEXT SEQ
           GOSUB 10400
        NEXT TR
*
*--- MISC
*
        MASTER.MS.WIP<1,1> = MASTER.MS.WIP<1,1> + JOB.MS.WIP<1,1>
        FOR I = 2 TO 3
           FOR J = 1 TO 2
              MASTER.MS.WIP<1,I,J> = MASTER.MS.WIP<1,I,J> + JOB.MS.WIP<1,I,J>
           NEXT J
        NEXT I
        IF JOB.MS.WIP<1,4> < MASTER.MS.WIP<1,4> OR MASTER.MS.WIP<1,4> = "" THEN
           MASTER.MS.WIP<1,4> = JOB.MS.WIP<1,4>
        END
        IF JOB.MS.WIP<1,5> > MASTER.MS.WIP<1,5> THEN
           MASTER.MS.WIP<1,5> = JOB.MS.WIP<1,5>
        END
        TR.CNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
        FOR TR = 1 TO TR.CNT
           DEPT = JOB.MS.DEPT<1,TR>
           CCTR = JOB.MS.CCTR<1,TR>
           PTR = 1
           LOOP
              LOCATE DEPT IN MASTER.MS.DEPT<1>,PTR SETTING FND ELSE FND = 0
              IF FND THEN
                 IF CCTR = MASTER.MS.CCTR<1,FND> THEN PTR = 0 ELSE PTR = FND + 1
              END
           WHILE FND AND PTR DO REPEAT
           IF FND THEN
              IF JOB.MS.DATE<1,TR,1> > MASTER.MS.DATE<1,FND,1> THEN
                 MASTER.MS.OPER<1,FND> = JOB.MS.OPER<1,TR>
                 MASTER.MS.DATE<1,FND,1> = JOB.MS.DATE<1,TR,1>
              END
              FOR SEQ = 1 TO 5
                 MASTER.MS.TCOST<1,FND,SEQ> = MASTER.MS.TCOST<1,FND,SEQ> + JOB.MS.TCOST<1,TR,SEQ>
              NEXT SEQ
              MASTER.MS.DCOST<1,FND> = MASTER.MS.DCOST<1,FND> + JOB.MS.DCOST<1,TR>
              MASTER.MS.COST<1,FND> = MASTER.MS.COST<1,FND> + JOB.MS.COST<1,TR>
              MASTER.MS.SALE<1,FND> = MASTER.MS.SALE<1,FND> + JOB.MS.SALE<1,TR>
           END ELSE
              FND = COUNT(MASTER.MS.DEPT,VM) + (MASTER.MS.DEPT # "") + 1
              MASTER.MS.DEPT<1,FND> = DEPT
              MASTER.MS.CCTR<1,FND> = CCTR
              MASTER.MS.OPER<1,FND> = JOB.MS.OPER<1,TR>
              MASTER.MS.DATE<1,FND,1> = JOB.MS.DATE<1,TR,1>
              MASTER.MS.TCOST<1,FND> = JOB.MS.TCOST<1,TR>
              MASTER.MS.DCOST<1,FND> = JOB.MS.DCOST<1,TR>
              MASTER.MS.COST<1,FND> = JOB.MS.COST<1,TR>
              MASTER.MS.SALE<1,FND> = JOB.MS.SALE<1,TR>
           END
           SEQ.CNT = COUNT(JOB.MS.SEQ<1,TR>,SVM) + (JOB.MS.SEQ<1,TR> # "")
           FOR SEQ = 1 TO SEQ.CNT
              LOCATE JOB.MS.SEQ<1,TR,SEQ> IN MASTER.MS.SEQ<1,FND>,1 BY "AR" SETTING POS ELSE
                 INS JOB.MS.SEQ<1,TR,SEQ> BEFORE MASTER.MS.SEQ<1,FND,POS>
              END
           NEXT SEQ
           GOSUB 10500
        NEXT TR
1999 NEXT S
*
*--- LOAD BACK JOB.REC
*
     MAT JOB.REC = MAT MASTER.REC
     FOR TR = 2 TO PNL.NO
        FOR XX = 1 TO 2
           PNL.LB.CHG<1,1,XX> = PNL.LB.CHG<1,1,XX> + PNL.LB.CHG<1,TR,XX>
           PNL.LB.NCHG<1,1,XX> = PNL.LB.NCHG<1,1,XX> + PNL.LB.NCHG<1,TR,XX>
           PNL.LB.DCOST<1,1,XX> = PNL.LB.DCOST<1,1,XX> + PNL.LB.DCOST<1,TR,XX>
           PNL.MT.CHG<1,1,XX> = PNL.MT.CHG<1,1,XX> + PNL.MT.CHG<1,TR,XX>
           PNL.MT.NCHG<1,1,XX> = PNL.MT.NCHG<1,1,XX> + PNL.MT.NCHG<1,TR,XX>
           PNL.MT.DCOST<1,1,XX> = PNL.MT.DCOST<1,1,XX> + PNL.MT.DCOST<1,TR,XX>
           PNL.OS.CHG<1,1,XX> = PNL.OS.CHG<1,1,XX> + PNL.OS.CHG<1,TR,XX>
           PNL.OS.NCHG<1,1,XX> = PNL.OS.NCHG<1,1,XX> + PNL.OS.NCHG<1,TR,XX>
           PNL.OS.DCOST<1,1,XX> = PNL.OS.DCOST<1,1,XX> + PNL.OS.DCOST<1,TR,XX>
           PNL.SP.CHG<1,1,XX> = PNL.SP.CHG<1,1,XX> + PNL.SP.CHG<1,TR,XX>
           PNL.SP.NCHG<1,1,XX> = PNL.SP.NCHG<1,1,XX> + PNL.SP.NCHG<1,TR,XX>
           PNL.SP.DCOST<1,1,XX> = PNL.SP.DCOST<1,1,XX> + PNL.SP.DCOST<1,TR,XX>
           PNL.MS.CHG<1,1,XX> = PNL.MS.CHG<1,1,XX> + PNL.MS.CHG<1,TR,XX>
           PNL.MS.NCHG<1,1,XX> = PNL.MS.NCHG<1,1,XX> + PNL.MS.NCHG<1,TR,XX>
           PNL.MS.DCOST<1,1,XX> = PNL.MS.DCOST<1,1,XX> + PNL.MS.DCOST<1,TR,XX>
        NEXT XX
        PNL.LB.CHG<1,1,3> = PNL.LB.CHG<1,1,3> + PNL.LB.CHG<1,TR,3>
        PNL.LB.NCHG<1,1,3> = PNL.LB.NCHG<1,1,3> + PNL.LB.NCHG<1,TR,3>
        PNL.LB.DCOST<1,1,3> = PNL.LB.DCOST<1,1,3> + PNL.LB.DCOST<1,TR,3>
        PNL.MT.CHG<1,1,3> = PNL.MT.CHG<1,1,3> + PNL.MT.CHG<1,TR,3>
        PNL.MT.NCHG<1,1,3> = PNL.MT.NCHG<1,1,3> + PNL.MT.NCHG<1,TR,3>
        PNL.MT.DCOST<1,1,3> = PNL.MT.DCOST<1,1,3> + PNL.MT.DCOST<1,TR,3>
        PNL.LB.CHG<1,1,4> = PNL.LB.CHG<1,1,4> + PNL.LB.CHG<1,TR,4>
        PNL.LB.NCHG<1,1,4> = PNL.LB.NCHG<1,1,4> + PNL.LB.NCHG<1,TR,4>
        PNL.LB.DCOST<1,1,4> = PNL.LB.DCOST<1,1,4> + PNL.LB.DCOST<1,TR,4>
     NEXT TR
     GOTO 999999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*--- PNL LABOR
*
10100*
     BEGIN CASE
        CASE JOB.LB.TCOST<1,TR,2> + 0 = 0
           FOR XX = 1 TO 4
              PNL.LB.CHG<1,PNL.NO,XX> = PNL.LB.CHG<1,PNL.NO,XX> + JOB.LB.DCOST<1,TR,XX>
           NEXT XX
        CASE JOB.LB.TCOST<1,TR,2> + 0 = JOB.LB.COST<1,TR> + 0
           FOR XX = 1 TO 4
              PNL.LB.NCHG<1,PNL.NO,XX> = PNL.LB.NCHG<1,PNL.NO,XX> + JOB.LB.DCOST<1,TR,XX>
           NEXT XX
        CASE 1
           NON.CHG = ""
           FOR SEQ = 1 TO SEQ.CNT
              MATREAD JLB.REC FROM JOB.TIME, CONO : JOB.LB.SEQ<1,TR,SEQ> ELSE MAT JLB.REC = ""
              IF JLB.TYPE = "N" THEN
                 FOR XX = 1 TO 4
                    NON.CHG<1,XX> = NON.CHG<1,XX> + JLB.DCOST<1,XX>
                 NEXT XX
              END
           NEXT SEQ
           FOR XX = 1 TO 4
              PNL.LB.CHG<1,PNL.NO,XX> = PNL.LB.CHG<1,PNL.NO,XX> + JOB.LB.DCOST<1,TR,XX> - NON.CHG<1,XX>
              PNL.LB.NCHG<1,PNL.NO,XX> = PNL.LB.NCHG<1,PNL.NO,XX> + NON.CHG<1,XX>
           NEXT XX
     END CASE
     FOR XX = 1 TO 4
        PNL.LB.DCOST<1,PNL.NO,XX> = PNL.LB.DCOST<1,PNL.NO,XX> + JOB.LB.DCOST<1,TR,XX>
     NEXT XX
     RETURN
*
*--- PNL MATL
*
10200*
     BEGIN CASE
        CASE JOB.MT.TCOST<1,TR,2> + 0 = 0
           FOR XX = 1 TO 3
              PNL.MT.CHG<1,PNL.NO,XX> = PNL.MT.CHG<1,PNL.NO,XX> + JOB.MT.DCOST<1,TR,XX>
           NEXT XX
        CASE JOB.MT.TCOST<1,TR,2> + 0 = JOB.MT.COST<1,TR> + 0
           FOR XX = 1 TO 3
              PNL.MT.NCHG<1,PNL.NO,XX> = PNL.MT.NCHG<1,PNL.NO,XX> + JOB.MT.DCOST<1,TR,XX>
           NEXT XX
        CASE 1
           NON.CHG = ""
           FOR SEQ = 1 TO SEQ.CNT
              MATREAD JMT.REC FROM JOB.MATL, CONO : JOB.MT.SEQ<1,TR,SEQ> ELSE MAT JMT.REC = ""
              IF JMT.TYPE = "N" THEN
                 FOR XX = 1 TO 3
                    NON.CHG<1,XX> = NON.CHG<1,XX> + JMT.DCOST<1,XX>
                 NEXT XX
              END
           NEXT SEQ
           FOR XX = 1 TO 3
              PNL.MT.CHG<1,PNL.NO,XX> = PNL.MT.CHG<1,PNL.NO,XX> + JOB.MT.DCOST<1,TR,XX> - NON.CHG<1,XX>
              PNL.MT.NCHG<1,PNL.NO,XX> = PNL.MT.NCHG<1,PNL.NO,XX> + NON.CHG<1,XX>
           NEXT XX
     END CASE
     FOR XX = 1 TO 3
        PNL.MT.DCOST<1,PNL.NO,XX> = PNL.MT.DCOST<1,PNL.NO,XX> + JOB.MT.DCOST<1,TR,XX>
     NEXT XX
     RETURN
*
*--- PNL OSP
*
10300*
     BEGIN CASE
        CASE JOB.OS.TCOST<1,TR,2> + 0 = 0
           PNL.OS.CHG<1,PNL.NO,1> = PNL.OS.CHG<1,PNL.NO,1> + JOB.OS.DCOST<1,TR>
           PNL.OS.CHG<1,PNL.NO,2> = PNL.OS.CHG<1,PNL.NO,2> + JOB.OS.COST<1,TR> - JOB.OS.DCOST<1,TR>
        CASE JOB.OS.TCOST<1,TR,2> + 0 = JOB.OS.COST<1,TR> + 0
           PNL.OS.NCHG<1,PNL.NO,1> = PNL.OS.NCHG<1,PNL.NO,1> + JOB.OS.DCOST<1,TR>
           PNL.OS.NCHG<1,PNL.NO,2> = PNL.OS.NCHG<1,PNL.NO,2> + JOB.OS.COST<1,TR> - JOB.OS.DCOST<1,TR>
        CASE 1
           NON.CHG = ""
           FOR SEQ = 1 TO SEQ.CNT
              MATREAD JOS.REC FROM JOB.OSP, CONO : JOB.OS.SEQ<1,TR,SEQ> ELSE MAT JOS.REC = ""
              IF JOS.TYPE = "N" THEN
                 NON.CHG<1,1> = NON.CHG<1,1> + JOS.DCOST
                 NON.CHG<1,2> = NON.CHG<1,2> + JOS.COST - JOS.DCOST
              END
           NEXT SEQ
           PNL.OS.CHG<1,PNL.NO,1> = PNL.OS.CHG<1,PNL.NO,1> + JOB.OS.DCOST<1,TR> - NON.CHG<1,1>
           PNL.OS.NCHG<1,PNL.NO,1> = PNL.OS.NCHG<1,PNL.NO,1> + NON.CHG<1,1>
           PNL.OS.CHG<1,PNL.NO,2> = PNL.OS.CHG<1,PNL.NO,2> + JOB.OS.COST<1,TR> - JOB.OS.DCOST<1,TR> - NON.CHG<1,2>
           PNL.OS.NCHG<1,PNL.NO,2> = PNL.OS.NCHG<1,PNL.NO,2> + NON.CHG<1,2>
     END CASE
     PNL.OS.DCOST<1,PNL.NO,1> = PNL.OS.DCOST<1,PNL.NO,1> + JOB.OS.DCOST<1,TR>
     PNL.OS.DCOST<1,PNL.NO,2> = PNL.OS.DCOST<1,PNL.NO,2> + JOB.OS.COST<1,TR> - JOB.OS.DCOST<1,TR>
     RETURN
*
*--- PNL SHIP
*
10400*
     BEGIN CASE
        CASE JOB.SP.TCOST<1,TR,2> + 0 = 0
           PNL.SP.CHG<1,PNL.NO,1> = PNL.SP.CHG<1,PNL.NO,1> + JOB.SP.DCOST<1,TR>
           PNL.SP.CHG<1,PNL.NO,2> = PNL.SP.CHG<1,PNL.NO,2> + JOB.SP.COST<1,TR> - JOB.SP.DCOST<1,TR>
        CASE JOB.SP.TCOST<1,TR,2> + 0 = JOB.SP.COST<1,TR> + 0
           PNL.SP.NCHG<1,PNL.NO,1> = PNL.SP.NCHG<1,PNL.NO,1> + JOB.SP.DCOST<1,TR>
           PNL.SP.NCHG<1,PNL.NO,2> = PNL.SP.NCHG<1,PNL.NO,2> + JOB.SP.COST<1,TR> - JOB.SP.DCOST<1,TR>
        CASE 1
           NON.CHG = ""
           FOR SEQ = 1 TO SEQ.CNT
              MATREAD JSP.REC FROM JOB.SHIP, CONO : JOB.SP.SEQ<1,TR,SEQ> ELSE MAT JSP.REC = ""
              IF JSP.TYPE = "N" THEN
                 NON.CHG<1,1> = NON.CHG<1,1> + JSP.DCOST
                 NON.CHG<1,2> = NON.CHG<1,2> + JSP.COST - JSP.DCOST
              END
           NEXT SEQ
           PNL.SP.CHG<1,PNL.NO,1> = PNL.SP.CHG<1,PNL.NO,1> + JOB.SP.DCOST<1,TR> - NON.CHG<1,1>
           PNL.SP.NCHG<1,PNL.NO,1> = PNL.SP.NCHG<1,PNL.NO,1> + NON.CHG<1,1>
           PNL.SP.CHG<1,PNL.NO,2> = PNL.SP.CHG<1,PNL.NO,2> + JOB.SP.COST<1,TR> - JOB.SP.DCOST<1,TR> - NON.CHG<1,2>
           PNL.SP.NCHG<1,PNL.NO,2> = PNL.SP.NCHG<1,PNL.NO,2> + NON.CHG<1,2>
     END CASE
     PNL.SP.DCOST<1,PNL.NO,1> = PNL.SP.DCOST<1,PNL.NO,1> + JOB.SP.DCOST<1,TR>
     PNL.SP.DCOST<1,PNL.NO,2> = PNL.SP.DCOST<1,PNL.NO,2> + JOB.SP.COST<1,TR> - JOB.SP.DCOST<1,TR>
     RETURN
*
*--- PNL MISC
*
10500*
     BEGIN CASE
        CASE JOB.MS.TCOST<1,TR,2> + 0 = 0
           PNL.MS.CHG<1,PNL.NO,1> = PNL.MS.CHG<1,PNL.NO,1> + JOB.MS.DCOST<1,TR>
           PNL.MS.CHG<1,PNL.NO,2> = PNL.MS.CHG<1,PNL.NO,2> + JOB.MS.COST<1,TR> - JOB.MS.DCOST<1,TR>
        CASE JOB.MS.TCOST<1,TR,2> + 0 = JOB.MS.COST<1,TR> + 0
           PNL.MS.NCHG<1,PNL.NO,1> = PNL.MS.NCHG<1,PNL.NO,1> + JOB.MS.DCOST<1,TR>
           PNL.MS.NCHG<1,PNL.NO,2> = PNL.MS.NCHG<1,PNL.NO,2> + JOB.MS.COST<1,TR> - JOB.MS.DCOST<1,TR>
        CASE 1
           NON.CHG = ""
           FOR SEQ = 1 TO SEQ.CNT
              MATREAD JMS.REC FROM JOB.MISC, CONO : JOB.MS.SEQ<1,TR,SEQ> ELSE MAT JMS.REC = ""
              IF JMS.TYPE = "N" THEN
                 NON.CHG<1,1> = NON.CHG<1,1> + JMS.DCOST
                 NON.CHG<1,2> = NON.CHG<1,2> + JMS.COST - JMS.DCOST
              END
           NEXT SEQ
           PNL.MS.CHG<1,PNL.NO,1> = PNL.MS.CHG<1,PNL.NO,1> + JOB.MS.DCOST<1,TR> - NON.CHG<1,1>
           PNL.MS.NCHG<1,PNL.NO,1> = PNL.MS.NCHG<1,PNL.NO,1> + NON.CHG<1,1>
           PNL.MS.CHG<1,PNL.NO,2> = PNL.MS.CHG<1,PNL.NO,2> + JOB.MS.COST<1,TR> - JOB.MS.DCOST<1,TR> - NON.CHG<1,2>
           PNL.MS.NCHG<1,PNL.NO,2> = PNL.MS.NCHG<1,PNL.NO,2> + NON.CHG<1,2>
     END CASE
     PNL.MS.DCOST<1,PNL.NO,1> = PNL.MS.DCOST<1,PNL.NO,1> + JOB.MS.DCOST<1,TR>
     PNL.MS.DCOST<1,PNL.NO,2> = PNL.MS.DCOST<1,PNL.NO,2> + JOB.MS.COST<1,TR> - JOB.MS.DCOST<1,TR>
     RETURN
*
*--- RETURN TO MAIN PROGRAM
*
999999*
     RETURN
  END
