*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.MISC
* BY          - JIHAD YAMOUT , C.B.A
* DESCRIPTION - THIS PROGRAM POST TO JOB FILE FROM DAILY.MISC
*               AND MOVES DAILY.MISC RECORD TO JOB.MISC
*               AND DELETE DAILY.MISC RECORD.
* COMMENT     - Revise if JOB.STATUS # 1 to # 5 to reflect "REOPENED"
*             - Task #12907 (RRG)
*T23278 markt 11/20/1998 * Accumulate fiscal data by division.
*T25606 gat 01/29/2001 * FIX PROBLEM WITH SPOILAGE POST TO TOTAL SALE
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.MISC
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>WIP.LEVEL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>COST.CNTR.WIP
*COPY>JCS.CPYLIB>SPOIL.STATS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
  MAT FILE.VARS = ''
  MAT JSI.REC = ""
  MAT EDIT.COM = ''
  MAT EDIT.COM.DRIVER = ''
  MAT JMS.REC = ''
  MAT COMP.REC = ''
*
***** SETUP ERRMSG ROUTINE
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
***** T23278 v
  PROCREAD XX ELSE ERRMSG = 'MUST BE RUN FROM A PROC'; GOTO 93000
  DIV.CODE = XX<5>
***** T23278 ^
*
*
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE
      ERRMSG = 'JOB FILE MISSING'
      GOTO 93000
  END
  OPEN '','DAILY.MISC' TO DAILY.MISC ELSE
      ERRMSG = 'DAILY.MISC FILE IS MISSING'
      GOTO 93000
  END
  OPEN '','JOB.MISC' TO JOB.MISC ELSE
      ERRMSG = 'JOB.MISC FILE IS MISSING'
      GOTO 93000
  END
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'PMC.SCREENS FILE IS MISSING'
      GOSUB 93000
  END
  OPEN '', 'DIVISION' TO DIVISION ELSE
      ERRMSG = 'DIVISION FILE IS MISSING'
      GOTO 93000
  END
  OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE
      ERRMSG = 'DEPARTMENT FILE IS MISSING'
      GOTO 93000
  END
  OPEN '', 'COST.CNTR' TO COST.CNTR ELSE
      ERRMSG = 'COST.CNTR FILE IS MISSING'
      GOTO 93000
  END
  OPEN '', 'OPERATION' TO OPERATION ELSE
      ERRMSG = 'OPERATION FILE IS MISSING'
      GOTO 93000
  END
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.STAT.CODE FILE MISSING'; GOTO 93000
  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST.CNTR.WIP FILE MISSING'; GOTO 93000
  OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG = 'SPOIL.STATS FILE MISSING'; GOTO 93000
*
***** MAIN PROCESSING
*
  READNEXT DMS.ID ELSE GOTO 99999
  CONO = DMS.ID[1,3]
  MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
      MAT WIP.LEVEL.REC = ""
      WLR.MS.COST = 2; WLR.MS.WIP = 2; WLR.MS.FOH = 0
  END
  MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
*
***** SETUP VALUES FROM PMC.SCREENS
*
  ECD.ACTION = 1
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME = 'GET.FISCAL.MONTH'
  CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*
***** INT ECD.RT.VALUE AND PRINT SCREEN
*
  MAT SCV.REC = ""
  ECD.ACTION = 2
  CALL SCRN.EDIT
*  CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"MISCELLANEOUS POSTING PROCESS","JCFISCAL",CURR.MON);* T23278
  CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"MISCELLANEOUS POSTING PROCESS","JCFISCAL",CURR.MON,DIV.CODE);* T23278
  IF POSTING.MON = "END" THEN GOTO 99999
  GOSUB 1000
  DATA = 1
  LOOP
      READNEXT DMS.ID ELSE DATA = 0
  WHILE DATA DO
      IF CONO = DMS.ID[1,3] THEN GOSUB 1000
  REPEAT
  GOTO 99999
1000 MATREADU DMS.REC FROM DAILY.MISC, DMS.ID ELSE
      RELEASE DAILY.MISC, DMS.ID
      GOTO 1999
  END
  MATREADU JOB.REC FROM JOB, CONO : DMS.JOB ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'JOB # ':DMS.JOB:' IS MISSING'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  BEGIN CASE
      CASE JOB.STATUS<1,1> = 9
          RELEASE JOB, CONO:DMS.JOB
          DMS.STATUS = 'JOB # ':DMS.JOB:' IS CANCELED'
          MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
          GOTO 1999
      CASE JOB.STATUS<1,1> = 7
          RELEASE JOB, CONO:DMS.JOB
          DMS.STATUS = 'JOB # ':DMS.JOB:' IS READY TO PURGE'
          MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
          GOTO 1999
      CASE JOB.STATUS<1,1> = 8
          RELEASE JOB, CONO:DMS.JOB
          DMS.STATUS = 'JOB # ':DMS.JOB:' IS PURGED'
          MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
          GOTO 1999
  END CASE
  IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
      IF DMS.INIT = "" THEN
          RELEASE JOB, CONO:DMS.JOB
          DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED OR IN PROCESS. AUTHORIZATION IS REQUIRED'
          MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
          GOTO 1999
      END ELSE
          MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMS.INIT ELSE
              RELEASE JOB, CONO:DMS.JOB
              DMS.STATUS = 'JOB # ':DMS.JOB:' STATUS IS NOT BOOKED OR IN PROCESS AND AUTHORIZATION IS INVALID'
              MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
              GOTO 1999
          END
      END
  END
  IF JOB.TYPE # "R" AND JOB.TYPE # DMS.TYPE THEN
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = "JOB BELONGS TO A DIFFERENT TYPE"
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  IF DMS.DIV # JOB.DIV THEN
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = "JOB BELONGS TO DIFFERENT DIVISION"
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  IF JOB.DEPT # DMS.DEPT[1,LEN(JOB.DEPT)] THEN
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = "JOB BELONGS TO DIFFERENT DEPARTMENT"
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  MATREAD DIV.REC FROM DIVISION, CONO : DMS.DIV ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'DIV # ':DMS.DIV:' IS MISSING'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  MATREAD DEPT.REC FROM DEPARTMENT, CONO : DMS.DEPT ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'DEPT # ':DMS.DEPT:' IS MISSING'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  LOCATE DMS.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'DEPT # ':DMS.DEPT:' IS NOT UNDER DIV # ':DMS.DIV
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  MATREAD CCTR.REC FROM COST.CNTR, CONO : DMS.CCTR ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'CCTR # ':DMS.CCTR:' IS MISSING'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  IF CCTR.DEPT # DMS.DEPT THEN
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'INCORRECT DEPARTMENT FOR CCTR # ':DMS.CCTR
      MATWRITE DMS.REC ON DAILY.MISC,DMS.ID
      GOTO 1999
  END
  IF CCTR.TYPE='F' THEN
      RELEASE JOB,CONO:DMS.JOB
      DMS.STATUS='CCTR # ':DMS.CCTR:' IS FROZEN'
      MATWRITE DMS.REC ON DAILY.MISC,DMS.ID
      GOTO 1999
  END
  LOCATE DMS.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'CCTR # ':DMS.CCTR:' IS NOT UNDER DEPT # ':DMS.DEPT
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  MATREAD OPER.REC FROM OPERATION, CONO : DMS.OPER ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'OPER # ':DMS.OPER:' IS MISSING'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  LOCATE DMS.OPER IN CCTR.OPER<1>,1 SETTING FND.OPER ELSE
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'OPER # ':DMS.OPER:' IS NOT IN CCTR # ':DMS.CCTR
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  IF DMS.COST < 0 THEN
      RELEASE JOB, CONO:DMS.JOB
      DMS.STATUS = 'CANNOT POST A NEGATIVE COST'
      MATWRITE DMS.REC ON DAILY.MISC, DMS.ID
      GOTO 1999
  END
  JMS.SEQ = DMS.ID[4,99]
  JMS.DCOST = DMS.COST
  IF WLR.MS.COST < 2 THEN
      JMS.COST = JMS.DCOST
  END ELSE
      JMS.COST = INT((JMS.DCOST * (1 + WLR.MS.FOH/10000)) + .5)
  END
* T25606
  IF DMS.TYPE = "N" OR DMS.TYPE = "S" THEN
* T25606
      JMS.SALE = 0
  END ELSE
      JMS.SALE = INT(JMS.COST + ((JMS.COST * (DMS.MARKUP/100))/100) + .5)
  END
  JMS.DIV = DMS.DIV
  JMS.TYPE = DMS.TYPE
  JMS.SPOIL.CODE = DMS.SPOIL.CODE
  JMS.OPER = DMS.OPER
  JMS.DATE = DMS.DATE
  JMS.MON = POSTING.MON
  JMS.WIP = ""
  BEGIN CASE
      CASE WLR.SPL = "N" AND JMS.TYPE = "S"
      CASE WLR.NON.CHG = "N" AND JMS.TYPE = "N"
      CASE WLR.MS.WIP > 1
          JMS.WIP<1,1,1> = JMS.DCOST
          JMS.WIP<1,1,2> = JMS.COST - JMS.DCOST
      CASE WLR.MS.WIP > 0
          JMS.WIP<1,1,1> = JMS.DCOST
  END CASE
  JMS.REASON = DMS.REASON
  JMS.DESC = DMS.DESC
  PTR = 1
  LOOP
      LOCATE DMS.DEPT IN JOB.MS.DEPT<1>,PTR SETTING DFND ELSE
          JOB.MS.DEPT<1,DFND> = DMS.DEPT
          JOB.MS.CCTR<1,DFND> = DMS.CCTR
      END
      IF DMS.CCTR = JOB.MS.CCTR<1,DFND> THEN
          PTR = 0
      END ELSE
          PTR = DFND + 1
      END
  WHILE PTR DO REPEAT
  MS.ID = CONO:DMS.JOB:"!":DMS.DEPT:"!":DMS.CCTR:"!"
  LOOP
      JOB.MS.SEQ<1,DFND> = JOB.MS.SEQ<1,DFND> + 1
      JMS.ID = MS.ID:JOB.MS.SEQ<1,DFND>
      READ DUMMY FROM JOB.MISC, JMS.ID ELSE DUMMY = ""
  WHILE DUMMY # "" DO REPEAT
  IF JMS.DATE > JOB.MS.DATE<1,DFND,1> THEN
      JOB.MS.DATE<1,DFND,1> = JMS.DATE
  END
  IF JMS.SEQ > JOB.MS.DATE<1,DFND,2> THEN
      JOB.MS.OPER<1,DFND> = JMS.OPER
      JOB.MS.DATE<1,DFND,2> = JMS.SEQ
      JOB.MS.DATE<1,DFND,3> = JOB.MS.SEQ<1,DFND>
  END
  JOB.MS.DCOST<1,DFND> = JOB.MS.DCOST<1,DFND> + JMS.DCOST
  JOB.MS.COST<1,DFND> = JOB.MS.COST<1,DFND> + JMS.COST
  IF JMS.WIP # "" THEN
      CCW.ID = CONO:JMS.DIV:DMS.DEPT:"!":DMS.CCTR:JMS.MON
      MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE
          MAT CCW.REC = ""
      END
      JOB.WIP<1,1> = JOB.WIP<1,1> + 2
      JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> + 2
      FOR W = 1 TO WLR.MS.WIP
          JOB.WIP<1,2,W> = JOB.WIP<1,2,W> + JMS.WIP<1,1,W>
          JOB.MS.WIP<1,2,W> = JOB.MS.WIP<1,2,W> + JMS.WIP<1,1,W>
          CCW.MS.I<1,W> = CCW.MS.I<1,W> + JMS.WIP<1,1,W>
      NEXT W
      MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
  END
  IF JMS.MON < JOB.MS.WIP<1,4> OR JOB.MS.WIP<1,4> = "" THEN
      JOB.MS.WIP<1,4> = JMS.MON
      IF JMS.MON < JOB.WIP<1,4> OR JOB.WIP<1,4> = "" THEN
          JOB.WIP<1,4> = JMS.MON
      END
  END
  IF JMS.MON > JOB.MS.WIP<1,5> THEN
      JOB.MS.WIP<1,5> = JMS.MON
      IF JMS.MON > JOB.WIP<1,5> THEN
          JOB.WIP<1,5> = JMS.MON
      END
  END
  JOB.MS.SALE<1,DFND> = JOB.MS.SALE<1,DFND> + JMS.SALE
  BEGIN CASE
      CASE JMS.TYPE = 'N'
          PTR = 2
      CASE JMS.TYPE = "C"
          PTR = 3
      CASE JMS.TYPE = "S"
          PTR = 4
      CASE 1
          PTR = 1
          JMS.TYPE = "R"
  END CASE
  JOB.MS.TCOST<1,DFND,PTR> = JOB.MS.TCOST<1,DFND,PTR> + JMS.COST
  IF JOB.STATUS = "" THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"1")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
  END
  IF JOB.STATUS<1,1> # 1 THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"5")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
  END
  JOB.TOT.DCOST = JOB.TOT.DCOST + JMS.DCOST
  JOB.TOT.COST = JOB.TOT.COST + JMS.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JMS.SALE
  IF JMS.SPOIL.CODE # "" THEN
      SSR.ID=CONO:JMS.DIV:DMS.DEPT:"!":DMS.CCTR:JMS.MON:JMS.SPOIL.CODE
      MATREADU SSR.REC FROM SPOIL.STATS,SSR.ID ELSE MAT SSR.REC = ""
      SSR.MS<1,1> = SSR.MS<1,1> + JMS.DCOST<1,1>
      SSR.MS<1,2> = SSR.MS<1,2> + JMS.DCOST<1,2>
      MATWRITE SSR.REC ON SPOIL.STATS,SSR.ID
  END
  MATWRITE JOB.REC ON JOB, CONO : DMS.JOB
  MATWRITE JMS.REC ON JOB.MISC, JMS.ID
  DELETE DAILY.MISC, DMS.ID
1999 RETURN
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000 ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
*
****** END OF JOB
*
99999 END
