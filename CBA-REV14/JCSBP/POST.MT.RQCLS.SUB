SUBROUTINE POST.MT.RQCLS.SUB(CONO)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB.RCLS
*COPY>APS.CPYLIB>COM.APS.FILE.VARS
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.MT.RQCLS.SUB
* BY          - WALID A. YAMOUT , C.B.A
* REVISED     - ARP]RRG
* REV DATE    - 10/88]1/89
* REV TASK    - 12913]12907
* COMMENT     - ]ADD JOB.STATUS '5' - "REOPENED"
* DESCRIPTION -
* 03/07/07    - T29075 - gs  - Posting Process
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.RCLS
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INV.CNV
*COPY>JCS.CPYLIB>JOB.RCLS
*COPY>JCS.CPYLIB>COST.CNTR.WIP
*COPY>ICS.CPYLIB>INV_AUDIT_HIST
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>ICS.CPYLIB>INV_RECP_WHSE
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
DIM T.IJS.REC(20)               
EQU T.JOB.CUST   TO T.IJS.REC(1)
EQU T.JOB.DATE   TO T.IJS.REC(2)
EQU T.JOB.ALOC   TO T.IJS.REC(3)
EQU T.JOB.QTY    TO T.IJS.REC(4) 
EQU T.JOB.USED   TO T.IJS.REC(5)
EQU T.RECP.NO    TO T.IJS.REC(6)   
EQU T.FI.ORG     TO T.IJS.REC(7)  
EQU T.FI.QTY     TO T.IJS.REC(8)  
EQU T.FI.AMT     TO T.IJS.REC(9)  
EQU T.JMT.SEQ    TO T.IJS.REC(10)
EQU T.JMT.QTY    TO T.IJS.REC(11)
*
DEFFUN GET.INAH.SEQ(CONO,CONTROL.FILE,INV_AUDIT_HIST.FILE)
TODAY = DATE()
OPEN.FLAG=1
DIM HOLD.JMT.REC(JMT.REC.SIZE); MAT HOLD.JMT.REC=''
*
***** MAIN PROCESSING
*
DRC.TYPE = "Q"
READU NEW.SEQ FROM CONTROL, CONO : "DAILY.MATL" ELSE NEW.SEQ = 10001
SEQ.CNT=DCOUNT(DRC.SEQ,VM)
FOR MLP = SEQ.CNT TO 1 STEP -1
   SEQ.PTR = ""
   SEQ.QTY = ""
   REV.ALL = 0
   DRC.STATUS<1,MLP> = ""
   DEPT = DRC.DEPT<1,MLP>
   CCTR = DRC.CCTR<1,MLP>
   PROD = DRC.OPER<1,MLP>
   WHSE = DRC.EMP<1,MLP>
   SEQ = DRC.SEQ<1,MLP>
   MT.NO = DEPT:"!":CCTR:"!":SEQ
   MT.F.ID = CONO:DRC.F.JOB:"!":DEPT:"!":CCTR:"!":PROD:"!":WHSE:"!"
   MT.T.ID = CONO:DRC.T.JOB:"!":DEPT:"!":CCTR:"!":PROD:"!":WHSE:"!"
   MATREAD JMT.REC FROM JOB.MATL, MT.F.ID : SEQ ELSE
      DRC.STATUS<1,MLP> = "CANNOT LOCATE JOB.MATL - ":MT.F.ID:SEQ
      GOTO 1999
   END
 
   IF DRC.QTY<1,MLP> = (JMT.QTY - JMT.RC.QTY) THEN REV.ALL = 1
 
   CUR.CNT=DCOUNT(JMT.PTR<1,1>,SVM)
   CUR.QTY=SUM(JMT.PTR<1,2>)+0
   CUR.PTR = JMT.PTR
   MAT JOB.REC = MAT FROM.JOB.REC
   GOSUB SET.DFND
   GOSUB SET.MLOC
*   GOSUB 100
   TOT.RC.QTY = 0;  TOT.RC.CUR.QTY = 0
   IF  JMT.RC.QTY+0 <> 0 THEN
      MAT HOLD.JMT.REC=MAT JMT.REC
      GOSUB CALC.TOT.RC
      MAT JMT.REC=MAT HOLD.JMT.REC
      GOSUB 200
   END
   GOSUB READ.INV.IWH
   GOSUB SET.INV.STAT
   GOSUB READ.IJS.REC
*
   NEW.PTR = ""; NEW.CNT = 0
   NEW.QTY = 0 
   NEW.SALE = ''
***
  BEGIN CASE
     CASE REV.ALL
        NEW.PTR = CUR.PTR; NEW.CNT = CUR.CNT
        FOR I = 1 TO NEW.CNT
           NEW.QTY = NEW.QTY+NEW.PTR<1,2,I>
        NEXT I
     CASE DRC.TYPE = "Q" 
          REV.AMT = DRC.QTY<1,MLP>
         FOR I = CUR.CNT TO 1 STEP -1 WHILE REV.AMT > 0
            NEW.CNT+=1
            FOR J = 1 TO 4
               INS CUR.PTR<1,J,I> BEFORE NEW.PTR<1,J,1>
            NEXT J
            NEW.QTY = NEW.QTY+NEW.PTR<1,2,1>
         NEXT I
  END CASE
****
   CHK.QTY = 0; CHK.PTR = ""
   ACT.QTY = 0 
   FCNT=DCOUNT(IJS.RECP.NO,VM)
   FOR F = FCNT TO 1 STEP -1
      LOCATE MT.NO IN IJS.JMT.SEQ<1,F>,1 SETTING T THEN
         PTR = 1
****
         LOCATE IJS.RECP.NO<1,F> IN IWH.RECP.NO<1> SETTING FNO ELSE NULL
*         IF (IJS.RECP.NO<1,F>) THEN FCOST = IWH.COST.FI<1,FNO> ELSE FCOST = 0
         LOOP
            LOCATE (IJS.RECP.NO<1,F>) IN NEW.PTR<1,1>,PTR SETTING TLOC ELSE
               TLOC = 0; PTR = 0
            END
*            BEGIN CASE
*               CASE PTR = 0
*               CASE FCOST <> NEW.PTR<1,3,TLOC>
*               CASE IJS.FI.AMT<1,F> = NEW.PTR<1,4,TLOC>
*                  PTR = 0
*            END CASE
         WHILE PTR DO
            PTR = TLOC+1
         REPEAT
****
         IF TLOC # 0 THEN
            IF IJS.JMT.QTY<1,F,T> < NEW.PTR<1,2,TLOC> THEN
               QTY = IJS.JMT.QTY<1,F,T>
            END ELSE
               QTY = NEW.PTR<1,2,TLOC>
            END
            CHK.PTR<TLOC> = CHK.PTR<TLOC>+QTY
            CHK.QTY = CHK.QTY+QTY
            IF (IJS.RECP.NO<1,F>) THEN
               ACT.QTY = ACT.QTY+QTY
            END
            FLOC=DCOUNT(T.RECP.NO,VM)
            BEGIN CASE
               CASE FLOC < 1
                  T.RECP.NO<1,FLOC> = (IJS.RECP.NO<1,F>)
                  T.FI.QTY<1,FLOC> = 0
                  T.FI.AMT<1,FLOC> = IJS.FI.AMT<1,F>
               CASE T.RECP.NO<1,FLOC> <> (IJS.RECP.NO<1,F>) OR T.FI.AMT<1,FLOC> <> IJS.FI.AMT<1,F>
                  FLOC = FLOC+1
                  T.RECP.NO<1,FLOC> = IJS.RECP.NO<1,F>
                  T.FI.QTY<1,FLOC> = 0
                  T.FI.AMT<1,FLOC> = IJS.FI.AMT<1,F>
            END CASE
            SEQ.PTR<-1> = FLOC
            SEQ.QTY<-1> = QTY
            T.FI.ORG<1,FLOC> = T.FI.ORG<1,FLOC>+QTY
            IJS.FI.ORG<1,F> = IJS.FI.ORG<1,F> - QTY
            IF IJS.FI.ORG<1,F> < IJS.FI.QTY<1,F> THEN
               IJS.FI.ORG<1,F> = IJS.FI.QTY<1,F>
            END
            IF QTY < IJS.JMT.QTY<1,F,T> THEN
               IJS.JMT.QTY<1,F,T> = IJS.JMT.QTY<1,F,T> - QTY
            END ELSE
               IJS.JMT.SEQ = DELETE(IJS.JMT.SEQ,1,F,T)
               IJS.JMT.QTY = DELETE(IJS.JMT.QTY,1,F,T)
            END
            IF IJS.FI.QTY<1,F> < 1 AND IJS.JMT.SEQ<1,F> = "" THEN
               IJS.RECP.NO = DELETE(IJS.RECP.NO,1,F,0)
               IJS.FI.ORG = DELETE(IJS.FI.ORG,1,F,0)
               IJS.FI.QTY = DELETE(IJS.FI.QTY,1,F,0)
               IJS.FI.AMT = DELETE(IJS.FI.AMT,1,F,0)
               IJS.JMT.SEQ = DELETE(IJS.JMT.SEQ,1,F,0)
               IJS.JMT.QTY = DELETE(IJS.JMT.QTY,1,F,0)
            END
         END
      END
   NEXT F
   ORSV.QTY = CHK.QTY  
   FOR I = 1 TO NEW.CNT
      QTY = NEW.PTR<1,2,I> - CHK.PTR<I>
      IF QTY >=1 THEN
         TMP.RECP=NEW.PTR<1,1,I>
         LOCATE TMP.RECP IN IWH.RECP.NO<1> SETTING FNO ELSE FNO=0
         CHK.QTY+=QTY
      END
   NEXT I
****
   IF CHK.QTY <> NEW.QTY THEN
      DRC.STATUS<1,MLP> = "CHK.REV QTY MISMATCH " : OCONV(INT(NEW.QTY/10+.5),"MD2")
      GOTO 1900
   END
********
NEW.COST = 0
NEW.SALE = 0
TOT.WIP  = 0
NEW.WIP  = 0
CHK.WIP  = 0
DIFF     = 0
ADD.MON  = 0
WIP.CNTR = 0
INV.WIP  = 0
********
   IF ADD.MON THEN
      IF JMT.MON<1,WCNT> > JRC.MON THEN
         NEW.MON = JMT.MON<1,WCNT>
      END ELSE
         NEW.MON = JRC.MON
      END
      WCNT = WCNT+1
      JMT.MON<1,WCNT> = NEW.MON
      JMT.WIP<1,WCNT> = INV.WIP
      CCW.ID = CONO : JMT.DIV : DEPT : "!" : CCTR : NEW.MON
      MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC = ""
*      FOR I = 1 TO WPTR
*         CCW.MT.O<1,I> = CCW.MT.O<1,I> - INV.WIP<1,1,I>
*      NEXT I
   END ELSE
      IF JMT.MON<1,1> > JRC.MON THEN
         NEW.MON = JMT.MON<1,1>
      END ELSE
         NEW.MON = JRC.MON
      END
      CCW.ID = CONO : JMT.DIV : DEPT : "!" : CCTR : NEW.MON
      MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC = ""
   END
***
   IF WIP.CNTR THEN
*      FOR I = 1 TO WPTR
*         NEW.WIP<1,2,I> = 0 - NEW.WIP<1,1,I>
*      NEXT I
      NEW.MON<1,2> = NEW.MON<1,1>
   END
***
   IF JMT.DIAM > 0 THEN
      NEW.DIAM = INT(((((JMT.DIAM*100)-JMT.QTY)/(JMT.QTY/1000)) * (NEW.QTY/1000)+NEW.QTY)/100+.5)
   END ELSE
      NEW.DIAM = 0
   END
********
* WRITE BACK TO EXISTING MT.F.ID RECORD - JOB.MATL
   NEW.SHEET = INT(((NEW.QTY / ICR.DV1) * ICR.MT1) / ICR.DV2+.5)
   JMT.RC.COST = JMT.RC.COST+NEW.COST
   JMT.RC.QTY = JMT.RC.QTY+NEW.QTY
   MATWRITE JMT.REC ON JOB.MATL, MT.F.ID : SEQ
*****
* WRITE TO NEW JOB.MATL FILE WITH NEW SEQ # - NEGATIVE NUMBER
   JMT.RC.COST = 0
   JMT.RC.QTY = 0
   JMT.QTY = 0 - NEW.QTY
   JMT.SHEET = 0 - NEW.SHEET
   JMT.DIAM = 0 - NEW.DIAM
   JMT.DCOST = 0
   JMT.COST = 0 
   JMT.SALE = 0 
   JMT.DATE = DRC.DATE
   JMT.PTR = NEW.PTR
   FOR I = 1 TO NEW.CNT
      JMT.PTR<1,2,I> = 0 - JMT.PTR<1,2,I>
   NEXT I
   JMT.RC.TRAN = DRC.TRAN<1,MLP>
   JMT.RC.JOB = DRC.T.JOB
   JMT.RC.DESC = DRC.REASON<1,MLP>
   GOSUB 2000
   JMT.SEQ = NEW.SEQ
   JMT.GLA.DATE = ""
   MATWRITE JMT.REC ON JOB.MATL, MT.F.ID : JOB.MT.SEQ<1,DFND>
*******
* WRITE TO NEW JOB.MATL WITH MT.T.ID - 
   IF ACT.QTY > 0 THEN
      GOSUB SET.INAH
      INAH.JOB = DRC.F.JOB                         
      MATWRITE INAH.REC ON INV_AUDIT_HIST, INAH.ID 
   END
   MAT FROM.JOB.REC = MAT JOB.REC
   IF MT.F.ID = MT.T.ID THEN
      MAT TO.JOB.REC = MAT FROM.JOB.REC
   END
   JMT.QTY = NEW.QTY
   JMT.SHEET = NEW.SHEET
   JMT.DIAM = NEW.DIAM
   JMT.DCOST = 0
   JMT.COST = NEW.COST
   IF DRC.SPOIL.RECLASS = "Y" THEN
      NEW.SALE = 0
*      IF WLR.SPL = 'N' THEN NEW.WIP = ''; INV.WIP = ''
   END
   JMT.SALE = NEW.SALE
   JMT.DATE = DRC.DATE
   JMT.PTR = NEW.PTR
   JMT.MON = JRC.MON
   JMT.WIP = 0
   CCW.MT.I = 0
   CCW.MT.O = 0
   JMT.RC.TRAN = DRC.TRAN<1,MLP>
   JMT.RC.JOB = DRC.F.JOB
   JMT.RC.DESC = DRC.REASON<1,MLP>
   PPTR = COUNT(JRC.TRAN,VM)+(JRC.TRAN # "")+1
   JRC.TRAN<1,PPTR> = DRC.TRAN<1,MLP>
   JRC.F.TRAN<1,PPTR> = NEW.SEQ
   JRC.SEQ<1,PPTR> = SEQ
   JRC.F.SEQ<1,PPTR> = JOB.MT.SEQ<1,DFND>
   NEW.SEQ+=1
   MAT JOB.REC = MAT TO.JOB.REC
   PTR = 1
   LOOP
      LOCATE DEPT IN JOB.MT.DEPT<1>,PTR SETTING DFND ELSE
         JOB.MT.DEPT<1,DFND> = DEPT
         JOB.MT.CCTR<1,DFND> = CCTR
         JOB.MT.PROD<1,DFND> = PROD
         JOB.MT.WHSE<1,DFND> = WHSE
         JOB.MT.DATE<1,DFND,1> = DRC.DATE
         PTR = 0
      END
      BEGIN CASE
         CASE PTR = 0
         CASE DEPT # JOB.MT.DEPT<1,DFND>
            PTR = DFND+1
         CASE CCTR # JOB.MT.CCTR<1,DFND>
            PTR = DFND+1
         CASE PROD # JOB.MT.PROD<1,DFND>
            PTR = DFND+1
         CASE WHSE # JOB.MT.WHSE<1,DFND>
            PTR = DFND+1
         CASE 1
            PTR = 0
      END CASE
   WHILE PTR DO REPEAT
   PTR = 1
   LOOP
      LOCATE PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE
         JOB.RESV.MATL<1,MLOC> = PROD
         JOB.RESV.WHSE<1,MLOC> = WHSE
         JOB.RESV.DATE<1,MLOC> = "NOT RESV"
         JOB.ALOC.QTY<1,MLOC> = 0
         JOB.RESV.QTY<1,MLOC> = 0
         JOB.ALOC.AMT<1,MLOC> = 0
         JOB.RESV.AMT<1,MLOC> = 0
         PTR = 0
      END
      BEGIN CASE
         CASE PTR = 0
         CASE WHSE = JOB.RESV.WHSE<1,MLOC>
            PTR = 0
         CASE 1
            PTR = MLOC+1
      END CASE
   WHILE PTR DO REPEAT
   IF JOB.STATUS = "" THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"1")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
   END
   IF JOB.STATUS<1,1> # 1 THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"5")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
   END
*T27930 v
   IF DRC.SPOIL.RECLASS = 'Y' THEN
      JMT.TYPE = "S"
      JMT.RC.TRAN := 'S' ; *C
   END
*T27930 ^
   GOSUB 2000
   JMT.SEQ = NEW.SEQ
   JMT.GLA.DATE = ""
   MATWRITE JMT.REC ON JOB.MATL, MT.T.ID : JOB.MT.SEQ<1,DFND>
******
   IF ACT.QTY>0 THEN
      GOSUB SET.INAH
      INAH.JOB = DRC.T.JOB                         
      MATWRITE INAH.REC ON INV_AUDIT_HIST, INAH.ID 
   END
   MAT TO.JOB.REC = MAT JOB.REC
   IF MT.F.ID = MT.T.ID THEN
      MAT FROM.JOB.REC = MAT TO.JOB.REC
   END
   MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
   IJS.JOB.USED = IJS.JOB.USED - ORSV.QTY
   IF IJS.JOB.ALOC < 1 AND IJS.JOB.QTY < 1 AND IJS.JMT.SEQ = "" AND IJS.REQ.QTY < 1 THEN
      DELETE INV.JOB.STATS, IJS.F.ID
      ISTAT.JOB = DELETE(ISTAT.JOB,1,JLOC,0)
   END ELSE
      MATWRITE INV.JS.REC ON INV.JOB.STATS, IJS.F.ID
   END
   T.JOB.USED = T.JOB.USED+ORSV.QTY
   MT.NO = DEPT:"!":CCTR:"!":JOB.MT.SEQ<1,DFND>
   CNT = COUNT(SEQ.PTR,AM)+(SEQ.PTR # "")
   FOR I = 1 TO CNT
      FLOC = SEQ.PTR<I>
      LOCATE MT.NO IN T.JMT.SEQ<1,FLOC>,1 SETTING TLOC ELSE
         T.JMT.SEQ<1,FLOC,TLOC> = MT.NO
      END
      T.JMT.QTY<1,FLOC,TLOC> = T.JMT.QTY<1,FLOC,TLOC>+SEQ.QTY<I>
   NEXT I
   IF T.JOB.ALOC<1 AND T.JOB.QTY<1 AND T.JMT.SEQ='' THEN
      DELETE INV.JOB.STATS, IJS.T.ID
      ISTAT.JOB = DELETE(ISTAT.JOB,1,T.JLOC,0)
   END ELSE
      MATWRITE T.IJS.REC ON INV.JOB.STATS, IJS.T.ID
   END
   IF ISTAT.PO = "" AND ISTAT.JOB = "" THEN
      DELETE INV.STATS, IWH.ID
   END ELSE
      MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
   END
   JRC.T.TRAN<1,PPTR> = NEW.SEQ
   JRC.T.SEQ<1,PPTR> = JOB.MT.SEQ<1,DFND>
   JRC.DEPT<1,PPTR> = DRC.DEPT<1,MLP>
   JRC.CCTR<1,PPTR> = DRC.CCTR<1,MLP>
   JRC.OPER<1,PPTR> = DRC.OPER<1,MLP>
   JRC.EMP<1,PPTR> = DRC.EMP<1,MLP>
   JRC.REASON<1,PPTR> = DRC.REASON<1,MLP>
   JRC.COST<1,PPTR> = DRC.COST<1,MLP>
   DRC.DEPT = DELETE(DRC.DEPT,1,MLP,0)
   DRC.CCTR = DELETE(DRC.CCTR,1,MLP,0)
   DRC.OPER = DELETE(DRC.OPER,1,MLP,0)
   DRC.EMP = DELETE(DRC.EMP,1,MLP,0)
   DRC.TRAN = DELETE(DRC.TRAN,1,MLP,0)
   DRC.REASON = DELETE(DRC.REASON,1,MLP,0)
   DRC.COST = DELETE(DRC.COST,1,MLP,0)
   DRC.STATUS = DELETE(DRC.STATUS,1,MLP,0)
   DRC.SEQ = DELETE(DRC.SEQ,1,MLP,0)
   NEW.SEQ = NEW.SEQ+1
   GOTO 1999
1900 RELEASE INV.STATS, IWH.ID
   RELEASE INV.JOB.STATS, IJS.F.ID
   RELEASE INV.JOB.STATS, IJS.T.ID
1999 
NEXT MLP
WRITE NEW.SEQ ON CONTROL, CONO : "DAILY.MATL"
GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
**********
2000: 
**********
*
JOB.USED.QTY<1,MLOC> = JOB.USED.QTY<1,MLOC>+JMT.QTY
JOB.USED.AMT<1,MLOC> = JOB.USED.AMT<1,MLOC>+JMT.DCOST<1,1>+JMT.DCOST<1,2>
JOB.MT.QTY<1,DFND> = JOB.MT.QTY<1,DFND>+JMT.QTY
BEGIN CASE
   CASE JMT.TYPE = "N"
        PTR = 2
   CASE JMT.TYPE = "C"
        PTR = 3
   CASE JMT.TYPE = "S"
        PTR = 4
   CASE 1
        PTR = 1
END CASE
JOB.MT.SEQ<1,DFND> = JOB.MT.SEQ<1,DFND>+1
IF ACT.QTY < 1 THEN GOTO 2999
RETURN
2999 RETURN
*
********************
SET.INAH: 
********************
*
MAT INAH.REC=''
INAH.TYPE='S'
INAH.PROD = PROD;INAH.WHSE = WHSE            
INAH.DATE = JMT.DATE;INAH.PERIOD = JRC.MON   
INAH.SRC = "UR";INAH.DATE.UPD = TODAY         
INAH.LOC=JMT.LOC
INAH.SYS.DATE = TODAY;INAH.SYS.TIME = TIME() 
INAH.OPER.ID=@LOGNAME
IF CATG.TRK.LVL='S' THEN
   INAH.SEQ=GET.INAH.SEQ(CONO,CONTROL,INV_AUDIT_HIST)
   INAH.ID=CONO:INAH.SEQ
   INAH.RECP.NO=JMT.PTR<1,1>
   INAH.TRAN = NEW.SEQ;INAH.SERIAL = JMT.SERIAL 
   INAH.QTY = 0 - JMT.QTY;INAH.UN.PRICE = ""    
   INAH.EXT.COST=0-JMT.DCOST<1,1>
   INAH.DEPL.RECP=JMT.PTR<1,1>
   INAH.DEPL.QTY=JMT.PTR<1,2>
   INAH.DEPL.COST=JMT.PTR<1,3>
   GOSUB UPD.ISTK.INVR
END ELSE
   RCNT=DCOUNT(JMT.PTR<1,1>,SVM)
   FOR RR=1 TO RCNT
      INAH.SEQ=GET.INAH.SEQ(CONO,CONTROL,INV_AUDIT_HIST)
      INAH.ID=CONO:INAH.SEQ
      INAH.RECP.NO=JMT.PTR<1,1,RR>
      INAH.TRAN = NEW.SEQ
      INAH.SERIAL="R":INAH.RECP.NO:"!":WHSE:"!":INAH.LOC
      INAH.QTY=0-JMT.PTR<1,2,RR>
*      IF INAH.QTY<0 THEN
*         INAH.EXT.COST=0-NEW.DCOST.ARR<1,RR>
*      END ELSE
*         INAH.EXT.COST=NEW.DCOST.ARR<1,RR>
*      END
      INAH.UN.PRICE = ""    
      INAH.DEPL.RECP=JMT.PTR<1,1,RR>
      INAH.DEPL.QTY=JMT.PTR<1,2,RR>
      INAH.DEPL.COST=JMT.PTR<1,3,RR>
      GOSUB UPD.ISTK.INVR
   NEXT RR
END
RETURN
*
*************
SET.DFND: 
*************
*
PTR = 1
LOOP
   LOCATE DEPT IN JOB.MT.DEPT<1>,PTR SETTING DFND ELSE DFND = 0
   BEGIN CASE
      CASE DFND = 0
         PTR = 0
      CASE DEPT # JOB.MT.DEPT<1,DFND>
         PTR = DFND+1
      CASE CCTR # JOB.MT.CCTR<1,DFND>
         PTR = DFND+1
      CASE PROD # JOB.MT.PROD<1,DFND>
         PTR = DFND+1
      CASE WHSE # JOB.MT.WHSE<1,DFND>
         PTR = DFND+1
      CASE 1
         PTR = 0
   END CASE
WHILE PTR DO REPEAT
IF DFND = 0 THEN
   DRC.STATUS<1,MLP> = "CANNOT LOCATE MAIN DEPT/CCTR/PROD/WHSE"
   GOTO 1999
END
RETURN
*
*************
SET.MLOC: 
*************
*
PTR = 1
LOOP
   LOCATE PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE MLOC = 0
   PTR = 0
   IF MLOC THEN
      IF WHSE # JOB.RESV.WHSE<1,MLOC> THEN
         PTR = MLOC+1
      END
   END
WHILE PTR DO REPEAT
IF MLOC = 0 THEN
   DRC.STATUS<1,MLP> = "CANNOT LOCATE RESERVE PROD/WHSE"
   GOTO 1999
END
RETURN
*
*********
100: 
RETURN
*
***********
200: 
***********
*
BEGIN CASE
   CASE TOT.RC.QTY <> JMT.RC.QTY
      DRC.STATUS<1,MLP> = "RCLS QTY MISMATCH " : OCONV(INT(TOT.RC.QTY/10+.5),"MD2")
      GOTO 1999
   CASE JMT.QTY - JMT.RC.QTY <> CUR.QTY
      DRC.STATUS<1,MLP> = "RCLS WIP QTY MISMATCH " : OCONV(INT(CUR.QTY/10+.5),"MD2")
      GOTO 1999
END CASE
RETURN
*
**************
CALC.TOT.RC: 
**************
*
FOR S = SEQ+1 TO JOB.MT.SEQ<1,DFND>
   MATREAD JMT.REC FROM JOB.MATL, MT.F.ID : S ELSE
      DRC.STATUS<1,MLP> = "CANNOT LOCATE JOB.MATL - ":MT.F.ID:S
      GOTO 1999
   END
   IF JMT.RC.TRAN = DRC.TRAN<1,MLP> THEN
*      FOR I = 1 TO WPTR
*         REV.WIP<1,1,I> = REV.WIP<1,1,I> - JMT.WIP<1,1,I>
*         TOT.RC.WIP = TOT.RC.WIP - JMT.WIP<1,1,I>
*      NEXT I
      CNT=DCOUNT(JMT.PTR<1,1>,SVM)
      FOR I = 1 TO CNT
         PTR = 1
         LOOP
            LOCATE JMT.PTR<1,1,I> IN CUR.PTR<1,1>,PTR SETTING TLOC ELSE
               TLOC = 0; PTR = 0
            END
            BEGIN CASE
               CASE PTR = 0
               CASE JMT.PTR<1,3,I> <> CUR.PTR<1,3,TLOC>
               CASE JMT.PTR<1,4,I> = CUR.PTR<1,4,TLOC>
                  PTR = 0
            END CASE
         WHILE PTR DO
            PTR = TLOC+1
         REPEAT
         IF TLOC THEN
            CUR.QTY = CUR.QTY+JMT.PTR<1,2,I>
            CUR.PTR<1,2,TLOC> = CUR.PTR<1,2,TLOC>+JMT.PTR<1,2,I>
         END
      NEXT I
      TOT.RC.QTY = TOT.RC.QTY - JMT.QTY
      TOT.RC.SALE = TOT.RC.SALE - JMT.SALE
   END
NEXT S
RETURN
*
******************
READ.INV.IWH: 
******************
*
MATREAD INV.REC FROM INVENTORY, CONO : PROD ELSE
   DRC.STATUS<1,MLP> = "CANNOT LOCATE INVENTORY - " : PROD
   GOTO 1999
END
MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
   DRC.STATUS<1,MLP>='CANNOT LOCATE CATEGORY - ':INV.LINE
   GOTO 1999
END
IF INV.CUST # "" THEN
   IF INV.CUST # DRC.T.CUST THEN
      DRC.STATUS<1,MLP> = "PRODUCT # ":PROD:" IS FOR CUSTOMER # ":INV.CUST
      GOTO 1999
   END
END
*COPY>ICSBP>INV.UM.CNV
IWH.ID = CONO : PROD : "!" : WHSE
MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
   PERIOD=''; ERR.FLG='' ; ERRMSG=''
   CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
   IF ERR.FLG THEN 
      DRC.STATUS<1,MLP>=ERRMSG
      GOTO 1999
   END
END ELSE
   DRC.STATUS<1,MLP> = "CANNOT LOCATE INV.WHSE - " : IWH.ID
   GOTO 1999
END
RETURN
*
**************
SET.INV.STAT: 
**************
*
MATREADU INV.STAT.REC FROM INV.STATS, IWH.ID ELSE
   MAT INV.STAT.REC = ""
END
LOCATE DRC.T.JOB IN ISTAT.JOB<1>,1 SETTING T.JLOC ELSE
   ISTAT.JOB<1,T.JLOC> = DRC.T.JOB
END
LOCATE DRC.F.JOB IN ISTAT.JOB<1>,1 SETTING JLOC ELSE
   ISTAT.JOB<1,JLOC> = DRC.F.JOB
END
RETURN
*
***************
READ.IJS.REC: 
***************
*
IJS.F.ID = IWH.ID : "!" : DRC.F.JOB
MATREADU INV.JS.REC FROM INV.JOB.STATS, IJS.F.ID ELSE
   MAT INV.JS.REC = ""
END
IJS.T.ID = IWH.ID : "!" : DRC.T.JOB
MATREADU T.IJS.REC FROM INV.JOB.STATS, IJS.T.ID ELSE
   MAT T.IJS.REC = ""
   T.JOB.CUST = DRC.T.CUST
   T.JOB.DATE = "NOT RESV"
   T.JOB.ALOC=0
   T.JOB.QTY=0
END
RETURN
*
******************
UPD.ISTK.INVR: 
******************
*
ISTK.ID=CONO:INAH.SERIAL
IF RECORDLOCKED(INV_SERIAL_TEMP,ISTK.ID)=0 THEN
   DELETE INV_SERIAL_TEMP,ISTK.ID
END
MATREADU ISTK.REC FROM INV_SERIAL_TEMP,ISTK.ID ELSE
   MATREADU ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
      ISTK.AUDIT.NO<1,-1>=INAH.SEQ
      MATWRITE ISTK.REC ON INV_SERIAL,ISTK.ID
      RELEASE INV_SERIAL_TEMP,ISTK.ID
      INVR.ID=CONO:ISTK.RECP
      IF RECORDLOCKED(INV_RECEIPTS_TEMP,INVR.ID)=0 THEN
         DELETE INV_RECEIPTS_TEMP,INVR.ID
      END
      MATREADU INVR.REC FROM INV_RECEIPTS_TEMP,INVR.ID ELSE
         MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
            INVR.AUDIT.NO<1,-1>=INAH.SEQ
            MATWRITE INVR.REC ON INV_RECEIPTS,INVR.ID
            RELEASE INV_RECEIPTS_TEMP,INVR.ID
         END
      END
   END
END
RETURN
*
99999 RETURN
END
