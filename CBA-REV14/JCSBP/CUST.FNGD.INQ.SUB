  SUBROUTINE CUST.FNGD.INQ.SUB(CONO)
*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - CUST.FNGD.INQ.SUB
* BY          - TINA BOND, C.B.A
* DATE        - 1/29/87
* DESCRIPTION
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*
**** INSERT FILES EQUATES
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** SETUP FOR SYSTEM ERRMSGS
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**** SET UP GEN.XREF.REC
*
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
  GXR.HEADING<1,1> = 'CUSTOMER NUMBER'
  GXR.HEADING<1,2> = 'CUSTOMER NAME'
  GXR.ATT<1,1>=0
  GXR.ATT<1,2>=1
  GXR.LEN<1,1>=10
  GXR.LEN<1,2>=60
*
*INITIALIZATIONS
*
  BEGIN.PAGE = 7
  BEGIN.PAG = 18
  PAGE.SIZE = 4
  PAGE.SIZ = 2
  LN = 1
  L = 1
  LINES = 0
  LINS = 0
  OLD.START.LINE = 0
  OLD.START.LIN = 0
  LINE.SPACE = 2
  LIN.SPACE = 1
  LNO = ''
  TYP = 0; CALL EDIT.SUB; FILL = "#"
100*
  CONTINUE = 1
  JOB.COUNT = 1
  LN = 1
  L = 1
  JOB.NO = ''
  PROD = ''
  PROD.DESC = ''
  TOT.PROD = ''
  TOT.PRODUCT = ''
  WHSE = ''
  LOC = ''
  QTY = ''
  ROLLSKID = ''
  UM = ''
  MAT SCV.REC = ''
  MAT INV.CNV.REC = ""
  ECD.ACTION = 2
  CALL SCRN.EDIT
150 ECD.NUM = 1
  ECD.ACTION = 4; CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 999999
    CASE ECD.RET.VALUE = ''
      ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = ''  OR ECD.RET.VALUE = 'END' THEN GOTO 100
      GXR.XREF = CUSTOMER.XREF
      GXR.FILE = CUSTOMER
      GXR.LOC = 1
      GXR.TOP.LINE = 'CUSTOMER XREF SEARCH'
      GXR.HEADING<1,1> = 'CUSTOMER'
      GXR.ID = ''
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = '' THEN
        SCV.REC(2)<ECD.SCRN.NO> = ''
        GOTO 150
      END ELSE
        CUST.NUM = GXR.ID
      END
    CASE 1
      CUST.NUM = ECD.RET.VALUE
  END CASE
  MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NUM ELSE
    ERRMSG ='CUSTOMER ':CUST.NUM: ' IS MISSING'; GOTO 100
  END
  SCV.REC(1)<ECD.SCRN.NO> = CUST.NUM
  SCV.REC(2)<ECD.SCRN.NO> = CUST.NAME
  ECD.ACTION = 3; CALL SCRN.EDIT
*
*** PROCESS RECORDS
*
  GOSUB 30000
*
*** PRINT ROUTINE
*
  GOSUB 35000
*
*** SELECT OPTION
*
  LOOP
    ECD.NUM = 13; ECD.ACTION = 4
    CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 35000
      * T25978 v
      CASE REQUEST = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 35000
      CASE REQUEST = 'ST'
        LN = 1
        GOSUB 35000
      CASE REQUEST = 'SB'
        LN = LINES
        GOSUB 35000
      * T25978 ^
      CASE NUM(REQUEST)
        GOSUB 60000
        IF LNO # 0 THEN
          MATREAD JSTAT.REC FROM JOB.STATS, CONO:JOB.NO<1,LNO> ELSE
            MAT JSTAT.REC = ''
          END
          LINS = COUNT(JSTAT.SHP.QTY, VM) + (JSTAT.SHP.QTY # '')
          OLD.START.LIN = 0
          L = 1
          GOSUB 50000
          MORE = 1
          LOOP
            ECD.NUM = 15; ECD.ACTION = 4
            CALL SCRN.EDIT
            ANSWER = ECD.RET.VALUE
            BEGIN CASE
              CASE ANSWER = 'S'
                L = L + PAGE.SIZ
                IF L > LINS THEN L = 1
                GOSUB 50000
              * T25978 v
              CASE ANSWER = 'SR'
                L -= PAGE.SIZ
                IF L < 1 THEN L = 1
                GOSUB 50000
              CASE ANSWER = 'ST'
                L = 1
                GOSUB 50000
              CASE ANSWER = 'SB'
                L = LINS
                GOSUB 50000
              * T25978 ^
              CASE ANSWER = '' OR ANSWER = 'END'
                P_X  = 0 ; P_Y = 18 ; P_VALUE = "" ; P_OPT = "CL"
                P_X  := AM:0 ; P_Y := AM:19 ; P_VALUE := AM:""
                CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                MORE = 0
              CASE 1
                ERRMSG = "Invalid Response"
                GOSUB 91000
            END CASE
          WHILE MORE DO
          REPEAT
        END
      CASE REQUEST = 'E' OR REQUEST = '' OR REQUEST = 'END'
        CONTINUE = 0
      CASE 1
        ERRMSG = "Invalid Input"
        GOSUB 91000
    END CASE
  WHILE CONTINUE DO
  REPEAT
  GOTO 100
30000*
  JOB.CNT = COUNT(CUST.JOB,VM) + (CUST.JOB # '')
  FOR J = 1 TO JOB.CNT
    MATREAD JSTAT.REC FROM JOB.STATS, CONO:CUST.JOB<1,J> ELSE
      GOTO 30100
    END
    IF JSTAT.SHP.PROD # '' THEN
      MATREAD JOB.REC FROM JOB, CONO:CUST.JOB<1,J> ELSE
        GOTO 30100
      END
      PROD.CNT = COUNT(JSTAT.SHP.PROD,VM) + (JSTAT.SHP.PROD # '')
      JOB.NO<1,JOB.COUNT> = CUST.JOB<1,J>
      PROD<1,JOB.COUNT> = JSTAT.SHP.PROD<1,1>
      MATREAD INV.REC FROM INVENTORY, CONO:JSTAT.SHP.PROD<1,1> ELSE
        MAT INV.REC = ''
      END
      GOSUB 40000
      PROD.DESC<1,JOB.COUNT> = INV.FULL.DESC
      UM<1,JOB.COUNT> = INV.UNIT<1,2>
      WHSE<1,JOB.COUNT> = JSTAT.SHP.WHSE<1,1>
      FOR X = 1 TO PROD.CNT
        TOT.PROD<1,JOB.COUNT> = TOT.PROD<1,JOB.COUNT> + JSTAT.SHP.QTY<1,X>
      NEXT X
      JOB.COUNT = JOB.COUNT + 1
    END
30100NEXT J
    LINES = COUNT(JOB.NO, VM) + (JOB.NO # "")
    OLD.START.LINE = 0
30500 RETURN
*
* JOB SCROLLING ROUTINE
*
35000*
    START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
    LAST.LINE = START.LINE + PAGE.SIZE - 1
    IF LAST.LINE > LINES THEN LAST.LINE = LINES
    IF START.LINE = OLD.START.LINE THEN GOTO 35500
    OLD.START.LINE = START.LINE
    CNT = 1
    FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.NO<1,N> "L#8"
      P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:PROD<1,N> "L#15"
      P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:UM<1,N>"L#3"
      P_X  := AM:32 ; P_Y := AM:SLN ; P_VALUE := AM:WHSE<1,N> "L#4"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF TOT.PROD<1,N> < 0 THEN
        P_X  = 37 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TOT.PROD<1,N>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> - .5),ICR.CNV<1,N>) "R#11" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END  ELSE
        P_X  = 37 ; P_Y = SLN ; P_VALUE = OCONV(INT(((TOT.PROD<1,N>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> + .5),ICR.CNV<1,N>) "R#11" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      P_X  = 12 ; P_Y = SLN+1 ; P_VALUE = PROD.DESC<1,N> "L#45" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
    NEXT N
    FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      P_X  := AM:0 ; P_Y := AM:SLN + 1 ; P_VALUE := AM:""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    NEXT M
35500 RETURN
*
* REVIEW SCROLLING ROUTINE
*
50000*
    START.LIN = 1 +INT((L-1)/PAGE.SIZ)*PAGE.SIZ
    LAST.LIN = START.LIN + PAGE.SIZ - 1
    IF LAST.LIN > LINS THEN LAST.LIN = LINS
    IF START.LIN = OLD.START.LIN THEN GOTO 50500
    OLD.START.LIN = START.LIN
    LCNT = 1
    FOR X = START.LIN TO LAST.LIN
      SL = BEGIN.PAG + LIN.SPACE * MOD(X-1,PAGE.SIZ)
      P_X  = 0 ; P_Y = SL ; P_VALUE = X "R#2" ; P_OPT = ""
      P_X  := AM:3 ; P_Y := AM:SL ; P_VALUE := AM:JSTAT.SHP.LOC<1,X> "L#4"
      P_X  := AM:8 ; P_Y := AM:SL ; P_VALUE := AM:JSTAT.SHP.R.S.ID<1,X> "L#12"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF JSTAT.SHP.QTY<1,X> < 0 THEN
        P_X  = 21 ; P_Y = SL ; P_VALUE = OCONV(INT(((JSTAT.SHP.QTY<1,X>/ICR.DV1<1,LNO>)*ICR.MT1<1,LNO>)/ICR.DV2<1,LNO> - .5),ICR.CNV<1,LNO>) "R#12" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END  ELSE
        P_X  = 21 ; P_Y = SL ; P_VALUE = OCONV(INT(((JSTAT.SHP.QTY<1,X>/ICR.DV1<1,LNO>)*ICR.MT1<1,LNO>)/ICR.DV2<1,LNO> + .5),ICR.CNV<1,LNO>) "R#12" ; P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      LCNT = LCNT + 1
    NEXT X
    FOR Y = LCNT TO PAGE.SIZ
      SL = BEGIN.PAG + LIN.SPACE * MOD(Y-1,PAGE.SIZ)
      P_X  = 0 ; P_Y = SL ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    NEXT Y
50500 RETURN
*
* CONVERSION ROUTINE
*
40000*
    BEGIN CASE
      CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
        ICR.DV1<1,JOB.COUNT> = INV.M.WT; ICR.MT1<1,JOB.COUNT> = 1; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD0"
      CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
        ICR.DV1<1,JOB.COUNT> = INV.PAP.WIDTH/100; ICR.MT1<1,JOB.COUNT> = 10; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD0"
      CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
        ICR.DV1<1,JOB.COUNT> = INV.PAP.WIDTH/100; ICR.MT1<1,JOB.COUNT> = 100; ICR.DV2<1,JOB.COUNT> = 12; ICR.CNV<1,JOB.COUNT> = "MD0"
      CASE 1
        ICR.DV1<1,JOB.COUNT> = 10; ICR.MT1<1,JOB.COUNT> = 1; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD2"
    END CASE
    RETURN
*
* PROMPT FOR LINE NUMBER
*
60000*
    MAX.VAL = COUNT(JOB.NO,VM) + (JOB.NO # '')
    LNO = REQUEST
    IF LNO < 1 OR LNO > MAX.VAL THEN
      ERRMSG = "LINE NUMBER OUT OF RANGE"
      GOSUB 91000
      LNO = ''
    END
    IF LNO = '' OR LNO = 'END' THEN LNO = 0
    RETURN
*
*** CALLS FOR SYSCOM
*
91000ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
    RETURN
92000ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)
    RETURN
93000ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
999999 *
    ECD.ACTION=99;CALL SCRN.EDIT
    RETURN
  END
