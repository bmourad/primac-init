*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB.RCLS
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.RCLS
* BY          - ZIAD A. YAMOUT , C.B.A
* DESCRIPTION -
* T23278 markt 11/20/1998 * Accumulate fiscal data by division.
*T26334 epitka 05/02/2002 * REV12
*T27930 wyamout 06/02/2004 * RECLASSIFICATION TO SPOILAGE
*T27930 szubair 06/04/2004 * TO CHECK
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.RCLS
*COPY>JCS.CPYLIB>JOB.RCLS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>INVOICE.SALES.STATS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
   MAT FILE.VARS = ''
   MAT EDIT.COM = ''
   MAT EDIT.COM.DRIVER = ''
   MAT COMP.REC = ''
*
***** SETUP ERRMSG ROUTINE
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
***** T23278 v
   PROCREAD XX ELSE ERRMSG = 'MUST BE RUN FROM A PROC'; GOTO 93000
   DIV.CODE = XX<5>
***** T23278 ^
*
***** OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
   OPEN '','DAILY.RCLS' TO DAILY.RCLS ELSE ERRMSG = 'DAILY.RCLS FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.RCLS' TO JOB.RCLS ELSE ERRMSG = 'JOB.RCLS FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE IS MISSING'; GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING' ; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG = 'JOB.OSP FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG = 'JOB.SHIP FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.MISC' TO JOB.MISC ELSE ERRMSG = 'JOB.MISC FILE IS MISSING'; GOTO 93000
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE IS MISSING'; GOTO 93000
   OPEN '', 'COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST.CNTR.WIP FILE IS MISSING'; GOTO 93000
   OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
   OPEN '', 'INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG = 'INV_AUDIT_HIST FILE IS MISSING'; GOTO 93000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
   OPEN '','INV_RECEIPTS_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV_SERIAL_TEMP FILE IS MISSING';GOTO 93000
   OPEN '','INV_RECEIPTS_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV_SERIAL_TEMP FILE IS MISSING';GOTO 93000
   OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE ERRMSG='INV_RECP_WHSE FILE IS MISSING';GOTO 93000
   OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE ERRMSG='INV_RECP_WHSE_TEMP FILE IS MISSING';GOTO 93000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
   OPEN '', 'INVOICE.SALES.STATS' TO INVOICE.SALES.STATS ELSE ERRMSG = 'INVOICE.SALES.STATS FILE IS MISSING'; GOTO 93000
*
***** SETUP VALUES FROM PMC.SCREENS
*
   ECD.ACTION = 1
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'GET.FISCAL.MONTH'
   CALL SCRN.EDIT
   ECD.SCRN.NO = 1
*
***** INT ECD.RT.VALUE AND PRINT SCREEN
*
   MAT SCV.REC = ""
   ECD.ACTION = 2
   CALL SCRN.EDIT
   BEFORE.LABOR.DCOST = ""
   BEFORE.LABOR.FFOH = ""
   BEFORE.LABOR.VFOH = ""
   BEFORE.LABOR.SAOH = ""
   BEFORE.MATL.DCOST = ""
   BEFORE.MATL.FFOH = ""
   BEFORE.MATL.VFOH = ""
   BEFORE.OSP.DCOST = ""
   BEFORE.OSP.FFOH = ""
   BEFORE.SHIP.DCOST = ""
   BEFORE.SHIP.FFOH = ""
   BEFORE.MISC.DCOST = ""
   BEFORE.MISC.FFOH = ""
*
***** MAIN PROCESSING
*
   READNEXT DRC.ID ELSE GOTO 99999
   CONO = DRC.ID[1,3]
   MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
*   CALL GET.FISCAL.MONTH(CONO,POSTING.MON,"POST RECLASSIFICATION OF COST","JCFISCAL",CURR.MON);* T23278
   CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"POST RECLASSIFICATION OF COST","JCFISCAL",CURR.MON,DIV.CODE);* T23278
   IF POSTING.MON = "END" THEN GOTO 99999
   GOSUB 1000
   DATA = 1
   LOOP
      READNEXT DRC.ID ELSE DATA = 0
      CONO = DRC.ID[1,3]
   WHILE DATA DO
      GOSUB 1000
   REPEAT
   GOTO 99999
1000 MATREADU DRC.REC FROM DAILY.RCLS, DRC.ID ELSE
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   DRC.STATUS = ''
*T27930 v
*  IF DRC.F.JOB = DRC.T.JOB THEN
  IF DRC.F.JOB = DRC.T.JOB AND DRC.SPOIL.RECLASS # "Y" THEN
*T27930 ^
      DRC.STATUS = 'CANNOT RECLASSIFY TO THE SAME JOB'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   IF DRC.F.TYPE # DRC.T.TYPE THEN
      DRC.STATUS = 'CANNOT RECLASSIFY TO A DIFFERENT TYPE'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   MATREADU JOB.REC FROM JOB, CONO : DRC.F.JOB ELSE
      DRC.STATUS = "CANNOT LOCATE JOB - " : DRC.F.JOB
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE JOB, DRC.F.JOB
      GOTO 1999
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1>=7
         DRC.STATUS = "JOB # (":DRC.F.JOB:") IS READY TO PURGE"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=8
         DRC.STATUS = "JOB # (":DRC.F.JOB:") HAS BEEN PURGED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=9
         DRC.STATUS = "JOB # (":DRC.F.JOB:") HAS BEEN CANCELLED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
   END CASE
   S.DIV = JOB.DIV
   S.DEPT = JOB.DEPT
   S.TYPE = JOB.TYPE
   PTR = 1
   GOSUB 7000
   MAT FROM.JOB.REC = MAT JOB.REC
   MATREADU JOB.REC FROM JOB, CONO : DRC.T.JOB ELSE
      DRC.STATUS = 'JOB # ':DRC.T.JOB:' IS MISSING'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1>=7
         DRC.STATUS = "JOB # (":DRC.T.JOB:") IS READY TO PURGE"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=8
         DRC.STATUS = "JOB # (":DRC.T.JOB:") HAS BEEN PURGED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=9
         DRC.STATUS = "JOB # (":DRC.T.JOB:") HAS BEEN CANCELLED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
   END CASE
   IF JOB.DIV # S.DIV THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME DIVISION'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   IF JOB.DEPT # S.DEPT[1,LEN(JOB.DEPT)] THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME DEPARTMENT'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   IF JOB.TYPE # "R" AND JOB.TYPE # S.TYPE THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME TYPE'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   PTR = 2
   GOSUB 7000
   MAT TO.JOB.REC = MAT JOB.REC
   MAT JRC.REC = ''
   JRC.F.JOB = DRC.F.JOB
   JRC.F.TYPE = DRC.F.TYPE
   JRC.T.JOB = DRC.T.JOB
   JRC.T.CUST = JOB.CUST
   JRC.T.TYPE = DRC.T.TYPE
   JRC.DATE = DRC.DATE
   JRC.MON = POSTING.MON
   MAT JOB.REC = MAT FROM.JOB.REC
   JRC.F.CUST = JOB.CUST
   BEGIN CASE
      CASE DRC.F.TYPE = 'LB'
         CALL POST.LB.RCLS.SUB(CONO)
*GS-TEST
      CASE DRC.F.TYPE = 'Q'
         CALL POST.MT.RCLS.SUB(CONO)
*GS-TEST
      CASE DRC.F.TYPE = 'MT'
         CALL POST.MT.RCLS.SUB(CONO)
      CASE DRC.F.TYPE = 'OS'
         CALL POST.OS.RCLS.SUB(CONO)
      CASE DRC.F.TYPE = 'SP'
         CALL POST.SP.RCLS.SUB(CONO)
      CASE DRC.F.TYPE = 'MS'
         CALL POST.MS.RCLS.SUB(CONO)
      CASE 1
         DRC.STATUS = 'INVALID FROM TYPE'
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE
         GOTO 1999
   END CASE
   IF JRC.TRAN = '' THEN
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
   END ELSE
      MATWRITE FROM.JOB.REC ON JOB, CONO:DRC.F.JOB
      MATWRITE TO.JOB.REC ON JOB, CONO:DRC.T.JOB
      IF DRC.TRAN = '' THEN
         DELETE DAILY.RCLS, DRC.ID
      END ELSE
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      END
      READU NEW.SEQ FROM CONTROL, CONO:"JOB.RCLS" ELSE NEW.SEQ = 10001
      NEXT.SEQ = NEW.SEQ + 1
      WRITE NEXT.SEQ ON CONTROL, CONO:"JOB.RCLS"
* ADDED 9.29.88 TO CAPTURE ID FROM DAILY FILE
      JRC.DAY.TRAN=DRC.ID[4,LEN(DRC.ID)-3]
      MATWRITE JRC.REC ON JOB.RCLS, CONO:NEW.SEQ
      MAT JOB.REC = MAT FROM.JOB.REC
      PTR = 1
      JOBNO = JRC.F.JOB
      GOSUB 8000
      GOSUB 9000
      MAT JOB.REC = MAT TO.JOB.REC
      PTR = 2
      JOBNO = JRC.T.JOB
      GOSUB 8000
      GOSUB 9000
   END
1999 RETURN
******************************************************************
7000 * CAPTURE BEFORE  WIP COSTS
******************************************************************
   BEFORE.LABOR.DCOST<PTR> = JOB.LB.WIP<1,3,1>
   BEFORE.LABOR.FFOH<PTR>  = JOB.LB.WIP<1,3,2> 
   BEFORE.LABOR.VFOH<PTR>  = JOB.LB.WIP<1,3,3>
   BEFORE.LABOR.SAOH<PTR>  = JOB.LB.WIP<1,3,4>
   BEFORE.MATL.DCOST<PTR>  = JOB.MT.WIP<1,3,1>
   BEFORE.MATL.FFOH<PTR>   = JOB.MT.WIP<1,3,2> 
   BEFORE.MATL.VFOH<PTR>   = JOB.MT.WIP<1,3,3>
   BEFORE.OSP.DCOST<PTR>   = JOB.OS.WIP<1,3,1>
   BEFORE.OSP.FFOH<PTR>    = JOB.OS.WIP<1,3,2> 
   BEFORE.SHIP.DCOST<PTR>  = JOB.SP.WIP<1,3,1>
   BEFORE.SHIP.FFOH<PTR>   = JOB.SP.WIP<1,3,2> 
   BEFORE.MISC.DCOST<PTR>  = JOB.MS.WIP<1,3,1>
   BEFORE.MISC.FFOH<PTR>   = JOB.MS.WIP<1,3,2> 
   RETURN
********************************************************************
8000 * CAPTURE AFTER  WIP COSTS
********************************************************************
   AFTER.LABOR.DCOST = JOB.LB.WIP<1,3,1>
   AFTER.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
   AFTER.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
   AFTER.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
   AFTER.MATL.DCOST  = JOB.MT.WIP<1,3,1>
   AFTER.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
   AFTER.MATL.VFOH   = JOB.MT.WIP<1,3,3>
   AFTER.OSP.DCOST   = JOB.OS.WIP<1,3,1>
   AFTER.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
   AFTER.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
   AFTER.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
   AFTER.MISC.DCOST  = JOB.MS.WIP<1,3,1>
   AFTER.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
   AFTER.LABOR.DCOST = AFTER.LABOR.DCOST - BEFORE.LABOR.DCOST<PTR>
   AFTER.LABOR.FFOH = AFTER.LABOR.FFOH - BEFORE.LABOR.FFOH<PTR>
   AFTER.LABOR.VFOH = AFTER.LABOR.VFOH - BEFORE.LABOR.VFOH<PTR>
   AFTER.LABOR.SAOH = AFTER.LABOR.SAOH - BEFORE.LABOR.SAOH<PTR>
   AFTER.MATL.DCOST = AFTER.MATL.DCOST - BEFORE.MATL.DCOST<PTR>
   AFTER.MATL.FFOH = AFTER.MATL.FFOH - BEFORE.MATL.FFOH <PTR>
   AFTER.MATL.VFOH = AFTER.MATL.VFOH - BEFORE.MATL.VFOH<PTR>
   AFTER.OSP.DCOST = AFTER.OSP.DCOST - BEFORE.OSP.DCOST<PTR>
   AFTER.OSP.FFOH = AFTER.OSP.FFOH - BEFORE.OSP.FFOH<PTR>
   AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST<PTR>
   AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH<PTR>
   AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST<PTR>
   AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH<PTR>
   RETURN
*****************************************************************
*
*------INVOICE SALES STATS UPDATE
*
******************************************************************
*
9000*
   IF CO.SAS = "Y" THEN
      ISS.ID =  CONO:"_J_":JOBNO:"_":JRC.MON:"XX_0_0"
      MATREADU ISS.REC FROM INVOICE.SALES.STATS, ISS.ID ELSE
         MAT ISS.REC = ""
      END
      ISS.CUST.ID = JOB.CUST
      ISS.SLSM.ID = JOB.SLSMN
      ISS.INVOICE.NO = JRC.MON
      ISS.INVOICE.DATE = DATE()
      ISS.SALES.CODE = JOB.SALES.CODE
      ISS.DIV = JOB.DIV
      ISS.JOB.CAT = JOB.CATG
      ISS.NO.COLORS = JOB.COLORS
      ISS.POSTING.MONTH = JRC.MON
      ISS.MASTER = JOB.MASTER
      ISS.LABOR.DCOST = ISS.LABOR.DCOST + AFTER.LABOR.DCOST
      ISS.LABOR.FFOH = ISS.LABOR.FFOH + AFTER.LABOR.FFOH
      ISS.LABOR.VFOH = ISS.LABOR.VFOH + AFTER.LABOR.VFOH
      ISS.LABOR.SAOH = ISS.LABOR.SAOH + AFTER.LABOR.SAOH
      ISS.MATL.DCOST = ISS.MATL.DCOST + AFTER.MATL.DCOST
      ISS.MATL.FFOH = ISS.MATL.FFOH + AFTER.MATL.FFOH
      ISS.MATL.VFOH = ISS.MATL.VFOH + AFTER.MATL.VFOH
      ISS.OSP.DCOST = ISS.OSP.DCOST + AFTER.OSP.DCOST
      ISS.OSP.FFOH = ISS.OSP.FFOH + AFTER.OSP.FFOH
      ISS.SHIP.DCOST = ISS.SHIP.DCOST + AFTER.SHIP.DCOST
      ISS.SHIP.FFOH = ISS.SHIP.FFOH + AFTER.SHIP.FFOH
      ISS.MISC.DCOST = ISS.MISC.DCOST + AFTER.MISC.DCOST
      ISS.MISC.FFOH = ISS.MISC.FFOH + AFTER.MISC.FFOH 
      ISS.COST.TOTAL = ISS.COST.TOTAL + ( AFTER.LABOR.DCOST + AFTER.LABOR.FFOH  + AFTER.LABOR.VFOH  + AFTER.LABOR.SAOH  + AFTER.MATL.DCOST  + AFTER.MATL.FFOH   + AFTER.MATL.VFOH   + AFTER.OSP.DCOST   + AFTER.OSP.FFOH    + AFTER.SHIP.DCOST  + AFTER.SHIP.FFOH   + AFTER.MISC.DCOST  + AFTER.MISC.FFOH   )
      ISS.VALUE.ADDED = 0 - ( ISS.MATL.DCOST + ISS.OSP.DCOST + ISS.SHIP.DCOST + ISS.MISC.DCOST)
      MATWRITE ISS.REC ON INVOICE.SALES.STATS, ISS.ID
   END
   RETURN
91000 ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
*
****** END OF JOB
*
99999 END
