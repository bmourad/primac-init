  SUBROUTINE JOB.LB.DET.SUB(CONO,JOB.NUM,SUB.CNT,PTR)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.LB.DET.SUB
* DATE        - 03/12/84
* BY          - JIHAD YAMOUT , C.B.A
* DESCRIPTION - THIS PROGRAM DISPLAY DETAIL OF JOB TIME ON SCREEN.
*T26334 epitka 12/19/2001 * REV12
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
  DIM TRANS.REC(15)
  EQU TRAN.TYPE     TO TRANS.REC(1)
  EQU TRAN.CNCR     TO TRANS.REC(2)
  EQU TRAN.EMP      TO TRANS.REC(3)
  EQU TRAN.EMP.NAME TO TRANS.REC(4)
  EQU TRAN.NO       TO TRANS.REC(5)
  EQU TRAN.DATE     TO TRANS.REC(6)
  EQU TRAN.HRS      TO TRANS.REC(7)
  EQU TRAN.IMP      TO TRANS.REC(8)
  EQU TRAN.COST     TO TRANS.REC(9)
  EQU TRAN.SALE     TO TRANS.REC(10)
  EQU TRAN.FCTR     TO TRANS.REC(11)
  EQU TRAN.JOB      TO TRANS.REC(12)
  EQU TRAN.OPER     TO TRANS.REC(13)
  EQU TRAN.OPER.DES TO TRANS.REC(14)
  EQU TRAN.PERIOD   TO TRANS.REC(15)
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  UNKNOWN = STR("?",20); MAT TRANS.REC = ''
  PAGE.SIZE = 6; BEGIN.PAGE = 7; LINE.SPACE = 2; OLD.START.LINE = 0
**** MAIN PROCESS
  LN = 1; OLN = 1; LINES = JOB.LB.SEQ<1,PTR,1>
  LB.ID = CONO:JOB.NUM:"!":JOB.LB.DEPT<1,PTR>:"!":JOB.LB.CCTR<1,PTR>:"!"
  GOSUB 100
  FOR K = 2 TO SUB.CNT
    LB.ID = CONO:JOB.SUBS<1,K-1>:"!":JOB.LB.DEPT<1,PTR>:"!":JOB.LB.CCTR<1,PTR>:"!"
    OLN = LINES + 1; LINES = LINES + JOB.LB.SEQ<1,PTR,K>
    GOSUB 100
  NEXT K
  GOSUB 1000
  MORE = 1
  LOOP
*  X = 0 ; Y = 21 ; O.R = 'O' ; TYP = 1 ; MAXL = 3
*  VALDAT = 'S'
*  PMSG = 'Enter (S)croll or <RETURN>...'
*  HMSG = 'Scroll Detail'
*  CALL EDIT.SUB
*  ACTION = VALUE
    ECD.NUM = 52
    ECD.MAXL = 3
    ECD.O.R = 'O'
    * ECD.VALDAT = 'S'     ; *T25978
    ECD.ACTION = 4 ; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = '' OR ACTION = 'END'
        MORE = 0
      CASE ACTION = 'S'
        LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 1000
      * T25978 v
      CASE ACTION = 'SR'
        LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 1000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 1000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 1000
      * T25978 ^
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99999
100*
  FOR I = OLN TO LINES
    MATREAD JLB.REC FROM JOB.TIME, LB.ID:(I-OLN+1) ELSE MAT JLB.REC = ""
    MATREAD EMP.REC FROM EMPLOYEE , CONO:JLB.EMP ELSE
      EMP.LAST.NAME = UNKNOWN; EMP.FRST.NAME = UNKNOWN
    END
    MATREAD OPER.REC FROM OPERATION, CONO:JLB.OPER ELSE
      OPER.DESC = UNKNOWN
    END
    TRAN.TYPE<1,I> = JLB.TYPE
    IF JLB.CNCR + 0 <> 0 THEN
      TRAN.CNCR<1,I> = "Y"
    END ELSE
      TRAN.CNCR<1,I> = "N"
    END
    TRAN.EMP<1,I> = JLB.EMP
    TRAN.NO<1,I> = JLB.SEQ
    TRAN.DATE<1,I> = JLB.DATE
    TRAN.HRS<1,I> = JLB.HRS
    IF MOD(JLB.IMP,100) THEN
      TRAN.IMP<1,I> = OCONV(JLB.IMP, "MD2")
    END ELSE
      TRAN.IMP<1,I> = INT(JLB.IMP / 100)
    END
    TRAN.COST<1,I> = JLB.COST
    TRAN.SALE<1,I> = JLB.SALE
    TRAN.FCTR<1,I> = JLB.FCTR
    TRAN.JOB<1,I> = JLB.RC.JOB
    TRAN.EMP.NAME<1,I> = EMP.LAST.NAME:' ':EMP.FRST.NAME
    TRAN.OPER<1,I> = JLB.OPER
    TRAN.OPER.DES<1,I> = OPER.DESC
    TRAN.PERIOD<1,I> = JLB.MON<1,1>
  NEXT I
  RETURN
**** SCROLL VALUES
1000 START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 1999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.OPER<1,N> "L#4"
    P_X  := AM:9 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.FCTR<1,N> "L#2"
    P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.TYPE<1,N> "L#1"
    P_X  := AM:14 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.CNCR<1,N> "L#1"
    P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.NO<1,N> "L#8"
    P_X  := AM:25 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.DATE<1,N>, "D2/") "R#8"
    P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.EMP<1,N> "L#4"
    P_X  := AM:39 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.PERIOD<1,N> "R#6"
    P_X  := AM:46 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.HRS<1,N>, "MD2") "R#6"
    P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.IMP<1,N> "R#7"
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:TRAN.JOB<1,N> "L#8"
    P_X  := AM:70 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(TRAN.COST<1,N>, "MD2") "R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = TRAN.OPER.DES<1,N> "L#30" ; P_OPT = ""
    P_X  := AM:35 ; P_Y := AM:SLN+1 ; P_VALUE := AM:TRAN.EMP.NAME<1,N> "L#30"
    P_X  := AM:70 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(TRAN.SALE<1,N>, 'MD2') "R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
1999 RETURN
**** RETURN TO THE CALLING PROGRAM
99999*
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
