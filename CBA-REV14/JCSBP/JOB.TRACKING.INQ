      SUBROUTINE JOB.TRACKING.INQ (CONO,JOB.NO,CUST.NO,CNAME,JDESC)
*********************************************************************
*
* REVISION - [08.0]
*
* PROGRAM  - JOB.TRACKING.INQ
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 07/20/88
*
* DESCRIPTION
*
* This program is used to display the current status of a job for
* which shop-floor transactions have been entered.
*
*T21153 ct6 11/11/1996 * Job Tracking is rounding up time entries and
*                        displaying as one decimal place. The time entry
*                        number is entered with two decimal places.
*T24924 edvard 03/15/2000 * Remove * after transactions from shop floor
*                           are posted.
*T28797 cwv 02/14/06 * change COUNT to XCOUNT
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>JCS.CPYLIB>JOB.TRACKING
*COPY>JCS.CPYLIB>JOB.TRANS
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC = ""; SYS.TYPE = 2
*
*---- OPEN ALL FILES
*
      OPEN "","JOB.TRACKING" TO JOB.TRACKING ELSE
         ERRMSG = "CANNOT OPEN JOB.TRACKING FILE"
         GOSUB 90000
         STOP
      END
      OPEN "","JOB.TRANS" TO JOB.TRANS ELSE
         ERRMSG = "CANNOT OPEN JOB.TRANS FILE"
         GOSUB 90000
         STOP
      END
*
*---- INITIALIZATION
*
      SCREEN DEFINE;JOB.TRACKING.INQ
      SCREEN COUNT;;11
      LINE.COUNT = S$LCNT
      LINE.SPACE = S$LSPC
      LINE.CNT = 0
      REF.NO = ""
      CURR.REF.NO = ""
*
*---- MAIN PROCESSING
*
100*
      JFLAGS = ""
      MATREAD JTRK.REC FROM JOB.TRACKING, CONO:JOB.NO ELSE
         MAT JTRK.REC = ""
      END
      MATREAD JTRN.REC FROM JOB.TRANS, CONO:JOB.NO ELSE
         MAT JTRN.REC = ""
      END
      LC = DCOUNT(JTRN.TIME.STAMP,VM)
      FOR LP = 1 TO LC
         TS = JTRN.TIME.STAMP<1,LP>
         LOCATE TS+1 IN JTRK.TIME.STAMP<1>,1 BY "AR" SETTING P ELSE NULL
         JTRK.TIME.STAMP = INSERT(JTRK.TIME.STAMP,1,P,0,TS)
         JTRK.DEPT = INSERT(JTRK.DEPT,1,P,0,JTRN.DEPT<1,LP>)
         JTRK.CCTR = INSERT(JTRK.CCTR,1,P,0,JTRN.CCTR<1,LP>)
         JTRK.OPER = INSERT(JTRK.OPER,1,P,0,JTRN.OPER<1,LP>)
         JTRK.HRS = INSERT(JTRK.HRS,1,P,0,JTRN.HRS<1,LP>)
         JTRK.IMP = INSERT(JTRK.IMP,1,P,0,JTRN.IMP<1,LP>)
*T24924 v
IF JTRN.POST.FLAG<1,LP> = "" THEN
         JFLAGS = INSERT(JFLAGS,1,P,0,"*")
END ; *T24924
      NEXT LP
      PREV.CCTR = "!@#$%"
      PREV.OPER = "!@#$%"
      CCTRS = ""
      OPERS = ""
      HOURS = ""
      XCOUNT = "";*T28797
      FLAGS = ""
      LP = 0
      LCNT = DCOUNT(JTRK.TIME.STAMP,VM)
      FOR LPTR = 1 TO LCNT
         CCTR = JTRK.CCTR<1,LPTR>
         OPER = JTRK.OPER<1,LPTR>
         HRS = JTRK.HRS<1,LPTR>
         CNT = JTRK.IMP<1,LPTR>
         FLG = JFLAGS<1,LPTR>
         IF CCTR = PREV.CCTR AND OPER = PREV.OPER THEN
            HOURS<1,LP> = HOURS<1,LP> + HRS
            XCOUNT<1,LP> = XCOUNT<1,LP> + CNT;*T28797
            IF FLG = "*" THEN FLAGS<1,LP> = "*"
         END ELSE
            LP = LP + 1
            CCTRS<1,LP> = CCTR
            OPERS<1,LP> = OPER
            HOURS<1,LP> = HRS
            XCOUNT<1,LP> = CNT;*T28797
            FLAGS<1,LP> = FLG
            PREV.CCTR = CCTR
            PREV.OPER = OPER
         END
      NEXT LPTR
      LINE.CNT = DCOUNT(CCTRS,VM)
      GOSUB 80000
      GOSUB 81000
      REF.NO = 1
      CURR.REF.NO = ""
      GOSUB 50000
*
*---- GET OPERATOR REPLY
*
500*
      SCREEN FIELD;;21
      SCREEN INPUT;;21
      OPT = S$VALUE
510*
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99999
      CASE OPT = "S" OR OPT = "SF"
         REF.NO = CURR.REF.NO + LINE.COUNT
         IF REF.NO > LINE.CNT THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "SR"
         REF.NO = CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      CASE OPT = "ST"
         REF.NO = 1
         GOSUB 50000
      CASE OPT = "SB"
         REF.NO = LINE.CNT
         IF REF.NO < 1 THEN REF.NO = 1
         GOSUB 50000
      END CASE
      GOTO 500
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000*
      START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
      IF START.REF.NO = CURR.REF.NO THEN RETURN
      CURR.REF.NO = START.REF.NO
      S$VAL = START.REF.NO
      S$CNT = COUNT(S$DATA(12)<S$SCR>,VM) + (S$DATA(12)<S$SCR> # "")
      SCREEN MULTI;;C;11;12;13;14;16;15
      RETURN
*
*---- LOAD SCREEN DATA
*
80000*
      S$DATA(2)<S$SCR> = JOB.NO
      S$DATA(3)<S$SCR> = CUST.NO
      S$DATA(4)<S$SCR> = CNAME
      S$DATA(5)<S$SCR> = JDESC
      JC = DCOUNT(JTRK.TIME.STAMP,VM)
      IF JC = 0 THEN
         S$DATA(6)<S$SCR> = ""
         S$DATA(7)<S$SCR> = ""
      END ELSE
         LAST.DATE = INT(JTRK.TIME.STAMP<1,JC>/100000)
         LAST.TIME = MOD(JTRK.TIME.STAMP<1,JC>,100000)
         S$DATA(6)<S$SCR> = LAST.DATE
         S$DATA(7)<S$SCR> = OCONV(LAST.TIME,"MTS")
      END
80050*
      SCREEN DISPLAY;;ALL
      RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000*
      S$DATA(12)<S$SCR> = ""
      S$DATA(13)<S$SCR> = ""
      S$DATA(14)<S$SCR> = ""
      S$DATA(15)<S$SCR> = ""
      S$DATA(16)<S$SCR> = ""
      PREV.CCTR = "!@#$%"
      PREV.OPER = "!@#$%"
      LC = DCOUNT(CCTRS,VM)
      FOR LP = 1 TO LC
         IF CCTRS<1,LP> = PREV.CCTR AND MOD((LP-1),LINE.COUNT)+1 > 1 THEN
            MAT CCTR.REC = ""
         END ELSE
            MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTRS<1,LP> ELSE
               MAT CCTR.REC = ""
               CCTR.DESC = "???????????????"
            END
            PREV.CCTR = CCTRS<1,LP>
         END
         MATREAD OPER.REC FROM OPERATION, CONO:OPERS<1,LP> ELSE
            MAT OPER.REC = ""
            OPER.DESC = "???????????????"
         END
         S$DATA(12)<S$SCR,LP> = CCTR.DESC
         S$DATA(13)<S$SCR,LP> = OPER.DESC
*T21153 v
*         S$DATA(14)<S$SCR,LP> = INT(HOURS<1,LP>/10+0.99)
         S$DATA(14)<S$SCR,LP> = HOURS<1,LP>  ;* The screen will use MD2
*T21153 ^
         S$DATA(15)<S$SCR,LP> = OCONV(INT(XCOUNT<1,LP>/100+0.5),"MD0Z");*T28797
         S$DATA(16)<S$SCR,LP> = FLAGS<1,LP>
      NEXT LP
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*90000*
*      PRINT @(0,23):CL:ERRMSG:
*      INPUT REPLY:
*      PRINT @(0,23):CL:
*      RETURN
*
*---- END OF PROGRAM
*
99999*
      SCREEN CLEAR;;D
      RETURN
   END
