*COPY>CPYLIB>COM1
**********************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - ADC.MATL.ENTRY
* BY          - RHONDA PERRIN, C.B.A.
* DATE        - 11/29/84
* DESCRIPTION -
* This program will be used for Automatic Data
* (Material) Collection Entry.  It will update
* ADC.MATL & DAILY.MATL files.
*ENDDOC
**********************************************
*--FILE EQUATES
*COPY>CPYLIB>SYSCOM
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>ADC.ACCESS
*COPY>JCS.CPYLIB>ADC.MATL
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>DAILY.MATL
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>CATEGORY
*COPY>CPYLIB>GEN.XREF
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*--DIM MT.TBL
      DIM MT.TBL(40)
      EQU MT.EMP.NO         TO MT.TBL(1)
      EQU MT.EMP.NAME       TO MT.TBL(2)
      EQU MT.DIV            TO MT.TBL(3)
      EQU MT.DIV.DESC       TO MT.TBL(4)
      EQU MT.DEPT           TO MT.TBL(5)
      EQU MT.DEPT.DESC      TO MT.TBL(6)
      EQU MT.CCTR           TO MT.TBL(7)
      EQU MT.CCTR.DESC      TO MT.TBL(8)
      EQU MT.TYPE           TO MT.TBL(9)
      EQU MT.PROD           TO MT.TBL(10)
      EQU MT.PROD.DESC      TO MT.TBL(11)
      EQU MT.WHSE           TO MT.TBL(12)
      EQU MT.INV.WHSE       TO MT.TBL(13)
      EQU MT.QTY            TO MT.TBL(14)
      EQU MT.SKID.NO        TO MT.TBL(15)
      EQU MT.SHEETS         TO MT.TBL(16)
      EQU MT.ROLL.NO        TO MT.TBL(17)
      EQU MT.WGHT           TO MT.TBL(18)
      EQU MT.ODIAM          TO MT.TBL(19)
      EQU MT.NDIAM          TO MT.TBL(20)
      EQU MT.JOB.NO         TO MT.TBL(21)
      EQU MT.CUST.NO        TO MT.TBL(22)
      EQU MT.CUST.NAME      TO MT.TBL(23)
      EQU MT.JOB.DESC1      TO MT.TBL(24)
      EQU MT.JOB.DESC2      TO MT.TBL(25)
      EQU MT.JOB.DESC3      TO MT.TBL(26)
      EQU MT.JOB.DESC4      TO MT.TBL(27)
      EQU MT.DATE           TO MT.TBL(28)
      EQU MT.SEQ            TO MT.TBL(29)
      EQU MT.ERR.FLG        TO MT.TBL(30)
      EQU MT.DMT.KEY        TO MT.TBL(31)
      EQU MT.COST           TO MT.TBL(32)
      EQU MT.MARKUP         TO MT.TBL(33)
      EQU MT.SP.CD          TO MT.TBL(34)
      EQU MT.PAP.TYPE       TO MT.TBL(35)
      DIM DM.REC(2)
      EQU DM.NO   TO DM.REC(1)
      EQU DM.DESC TO DM.REC(2)
*--SYSTEM ERROR MSG
      SYS.TYPE=1
      CALL SYSCOM(MAT SYSCOM.REC)
*--OPEN FILES
      OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
      OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG='DAILY.MATL FILE MISSING';GOTO 93000
      OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE MISSING';GOTO 93000
      OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE MISSING';GOTO 93000
      OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
      OPEN '','ADC.ACCESS' TO ADC.ACCESS ELSE ERRMSG='ADC.ACCESS FILE MISSING';GOTO 93000
      OPEN '','ADC.MATL' TO ADC.MATL ELSE ERRMSG='ADC.MATL FILE MISSING';GOTO 93000
      OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE MISSING';GOTO 93000
      OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE MISSING';GOTO 93000
      OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE MISSING';GOTO 93000
      OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG='EMPLOYEE FILE MISSING';GOTO 93000
      OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILAGE.CODES FILE MISSING';GOTO 93000
      OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE MISSING';GOTO 93000
      OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE MISSING';GOTO 93000
      OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE ERRMSG='INVENTORY.XREF FILE MISSING';GOTO 93000
      OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE MISSING';GOTO 93000
      OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE MISSING';GOTO 93000
      OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.LOC FILE MISSING';GOTO 93000
      OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE MISSING';GOTO 93000
*--INITIAL
      MAT EDIT.COM.DRIVER=''
MAT EDIT.COM='';TYP=0;CALL EDIT.SUB
MAT ADA.REC=''
MAT ADM.REC=''
MAT DM.REC=''
TM=1
RET.VALUE=''
REC=''
MAT MT.TBL=''
FILL="#"
DASHES=STR("-",79)
UNKNOWN=STR("?",30)
FILE=''
MAT GEN.XREF.REC=''
GXR.HEADING<1,1>='INVENTORY'
GXR.HEADING<1,2>='DESCRIPTION'
GXR.ATT<1,1>=0
GXR.ATT<1,2>=1
GXR.LEN<1,1>=15
GXR.LEN<1,2>=45
GXR.XREF=INVENTORY.XREF
GXR.FILE=INVENTORY
GXR.TOP.LINE='INVENTORY XREF SEARCH'
SAVE.WHSE=''
SAVE.LOC=''
SAVE.R.S.ID=''
QTY.FLG=''
XREF.FLG=''
FND=''
      TITLE="A U T O M A T I C   D A T A   C O L L E C T I O N"
      PMSG1='Enter Selection -      (1) Material Entry   (2) Logoff       '
      PMSG2='Is Everything OK ? -   (1) Yes    (2) No                     '
      PMSG3='Enter selection -     Line number,(S)croll,<RETURN> or (E)xit'
      PMSG4='Are you sure you want to Logoff ? -   (1) Yes  (2) No        '
      PMSG5='Spoilage Code -                                              '
      T.DATE=OCONV(DATE(),"D2/");TODAY=DATE()
*--COMP NO
      CONO=''
      CALL GET.CONO(CONO,MAT COMP.REC)
      IF CONO='END' THEN GOTO 99999
*--PRINT SCREEN
* PRINT @(-1):
      PROMPT.MSG=PMSG1
      GOSUB 1000
*--MAIN PROCESSING
5*
      GOSUB 1500
      X=17;Y=2;TYP=1;MAXL=4;O.R="R";HMSG="ENTER VALID EMPLOYEE NUMBER"
      JUSTIFY="R";FILL.CHR="0"
      CALL EDIT.SUB
      IF VALUE='END' THEN GOTO 99999
      MT.EMP.NO<TM>=VALUE
      MATREAD EMP.REC FROM EMPLOYEE,CONO:MT.EMP.NO<TM> ELSE
         ERRMSG="INVALID EMPLOYEE NUMBER";GOSUB 91000;GOTO 5
      END
      EMP.NAME=EMP.FRST.NAME:' ':EMP.LAST.NAME
      MT.EMP.NAME<TM>=EMP.NAME
      P_X  = 24 ; P_Y = 2 ; P_VALUE = EMP.NAME"L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      MATREAD ADA.REC FROM ADC.ACCESS,MT.EMP.NO<TM> ELSE
         ERRMSG="ADC.ACCESS FILE MISSING";GOSUB 91000;GOTO 5
      END
      IF ADA.MATL # "Y" THEN
         ERRMSG="YOU DO NOT HAVE ACCESS TO MATERIAL ENTRY";GOSUB 91000;GOTO 5
      END
6*
      X=68;Y=2;ECHO.BACK=0;TYP=1;MAXL=8;O.R='R';HMSG="ENTER YOUR PASSWORD"
      CALL EDIT.SUB
      IF VALUE='END' THEN GOTO 5
      IF VALUE # ADA.PWD THEN
         ERRMSG="INVALID PASSWORD";GOSUB 91000;GOTO 6
      END
7*
      X=18;Y=21;TYP=1;MAXL=3;O.R="R";MAXV=3;MINV=1;HMSG="ENTER SELECTION (1,2,3) OR 'END'";ECHO.BACK=1
      CALL EDIT.SUB
      MODE=VALUE
      MT.SEQ<TM>=10001
      BEGIN CASE
         CASE MODE='E' OR MODE="END"
            GOTO 5
         CASE MODE='1'
            GOSUB 10
         CASE MODE='2'
            GOSUB 20
         CASE MODE=''
            GOTO 7
         CASE 1
            ERRMSG="NOT A VALID SELECTION";GOSUB 91000;GOTO 7
      END CASE
      IF MT.ERR.FLG<TM>=1 THEN
         GOSUB 1505;MT.ERR.FLG<TM>='';GOTO 7
      END
      PROMPT.MSG=PMSG1
      P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF MODE="2" THEN
         GOTO 5
      END ELSE
         GOTO 7
      END
*--MATL ENTRY SELECT
10*
      MATREADU ADM.REC FROM ADC.MATL,CONO:MT.EMP.NO<TM> ELSE
         MAT ADM.REC=''
      END
11*
      GOSUB 100
      IF VALUE="END" OR VALUE='E' THEN 
         RELEASE ADC.MATL,CONO:MT.EMP.NO<TM>
         GOTO 19
      END
      PROMPT.MSG=PMSG2
      P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      X=21;Y=21;TYP=1;MAXL=1;O.R="R";MAXV=2;MINV=1;HMSG="ENTER SELECTION (1) YES OR (2) NO"
      CALL EDIT.SUB
      IF VALUE=2 THEN GOTO 11
      IF VALUE='END' THEN GOTO 19
      IF MT.TYPE<TM>="1" THEN MT.TYPE<TM>="R"
      IF MT.TYPE<TM>="2" THEN MT.TYPE<TM>="S"
      IF MT.TYPE<TM>="3" THEN MT.TYPE<TM>="C"
      READU SEQ.NO FROM CONTROL,CONO:"DAILY.MATL" ELSE
         SEQ.NO=10001
      END
      MT.SEQ<TM>=SEQ.NO
      MT.DMT.KEY<TM>=CONO:MT.SEQ<TM>
      MATREADU DMT.REC FROM DAILY.MATL,MT.DMT.KEY<TM> ELSE
         MAT DMT.REC=''
      END
      DMT.DIV=MT.DIV<TM>
      DMT.DEPT=MT.DEPT<TM>
      DMT.CNT=COUNT(DMT.CCTR,VM) + (DMT.CCTR # '') + 1
      DMT.CCTR<1,DMT.CNT>=MT.CCTR<TM>
      DMT.PROD<1,DMT.CNT>=MT.PROD<TM>
      DMT.TYPE<1,DMT.CNT>=MT.TYPE<TM>
      DMT.WHSE<1,DMT.CNT>=MT.WHSE<TM>
      DMT.LOC<1,DMT.CNT>=MT.INV.WHSE<TM>
      DMT.DATE<1,DMT.CNT>=MT.DATE<TM>
      DMT.JOB<1,DMT.CNT>=MT.JOB.NO<TM>
      DMT.COST<1,DMT.CNT>=MT.COST<TM>
      DMT.MARKUP<1,DMT.CNT>=MT.MARKUP<TM>
      IF MT.PAP.TYPE<TM>="SHEET" THEN
         DMT.R.S.ID<1,DMT.CNT>=MT.SKID.NO<TM>
         DMT.SHEET<1,DMT.CNT>=MT.SHEETS<TM>
         DMT.QTY<1,DMT.CNT>=MT.WGHT<TM>
      END ELSE
         IF MT.PAP.TYPE<TM>="ROLL" THEN
            DMT.R.S.ID<1,DMT.CNT>=MT.ROLL.NO<TM>
            DMT.ODIAM<1,DMT.CNT>=MT.ODIAM<TM>
            DMT.QTY<1,DMT.CNT>=MT.WGHT<TM>
         END ELSE
            DMT.QTY<1,DMT.CNT>=MT.QTY<TM>
         END
      END
      IF MT.SP.CD<TM> # '' THEN DMT.SPOIL.CODE<1,DMT.CNT>=MT.SP.CD<TM>
      ADM.SEQ=MT.SEQ<TM>
      ADM.DIV<1,1>=MT.DIV<TM>
      ADM.DIV<1,2>=MT.DIV.DESC<TM>
      ADM.DEPT<1,1>=MT.DEPT<TM>
      ADM.DEPT<1,2>=MT.DEPT.DESC<TM>
      ADM.CCTR<1,1>=MT.CCTR<TM>
      ADM.CCTR<1,2>=MT.CCTR.DESC<TM>
      ADM.JOB.NO=MT.JOB.NO<TM>
      ADM.WHSE=MT.WHSE<TM>
      ADM.EMP.NO=MT.EMP.NO<TM>
      MATWRITE ADM.REC ON ADC.MATL,CONO:MT.EMP.NO<TM>
      MATWRITE DMT.REC ON DAILY.MATL,MT.DMT.KEY<TM>
      SEQ.NO=SEQ.NO + 1
      WRITE SEQ.NO ON CONTROL,CONO:"DAILY.MATL"
19 *
      P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*--LOGOFF SELECT
20*
      MATREAD ADM.REC FROM ADC.MATL,CONO:MT.EMP.NO<TM> ELSE
         ERRMSG="YOU HAVE ALREADY LOGGED OFF";GOSUB 91000;MT.ERR.FLG<TM>=1;GOTO 29
      END
      P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      X=36;Y=21;TYP=1;MAXL=1;O.R='R';MAXV=2;MINV=1;HMSG="ENTER SELECTION (1)YES, (2)NO OR END"
      CALL EDIT.SUB
      IF VALUE # "1" THEN
         P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      DELETE ADC.MATL,CONO:MT.EMP.NO<TM>
29*
      RETURN
*--DIV NO
100*
      X=17;Y=4;TYP=1;MAXL=2;O.R='O';HMSG="ENTER VALID DIVISION NUMBER"
      IF MT.DIV<TM> # "" THEN
         DEFAULT=MT.DIV<TM>
      END ELSE
         DEFAULT='01'
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 100
      IF VALUE=".." THEN
         FILE=1;GOSUB 2000
         IF MT.DIV<TM>='' THEN
            ERRMSG='YOU MUST ENTER A DIVISION NUMBER';GOSUB 91000;GOTO 100
         END
         P_X  = 17 ; P_Y = 4 ; P_VALUE = MT.DIV<TM> "L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         MT.DIV<TM>=VALUE
      END
      MATREAD DIV.REC FROM DIVISION,CONO:MT.DIV<TM> ELSE
         ERRMSG="INVALID DIVISION NUMBER";GOSUB 91000;GOTO 100
      END
      MT.DIV.DESC<TM>=DIV.DESC
      P_X  = 23 ; P_Y = 4 ; P_VALUE = MT.DIV.DESC<TM> "L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*--DEPT NO
110*
      X=17;Y=5;TYP=1;MAXL=5;O.R='O';HMSG="ENTER VALID DEPARTMENT NUMBER"
      IF MT.DEPT<TM> # '' THEN
         DEFAULT=MT.DEPT<TM>
      END ELSE
         DEFAULT=EMP.DEPT
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='.' THEN
         P_X  = 17 ; P_Y = 5 ; P_VALUE = PVALUE "L#5" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 100
      END
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 110
      IF VALUE=".." THEN
         FILE=2;GOSUB 2000
         IF MT.DEPT<TM>='' THEN
            ERRMSG='YOU MUST ENTER A DEPARTMENT NUMBER';GOSUB 91000;GOTO 110
         END
         P_X  = 17 ; P_Y = 5 ; P_VALUE = MT.DEPT<TM>"L#5" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         MT.DEPT<TM>=VALUE
      END
      LOCATE MT.DEPT<TM> IN DIV.DEPT<1>,1 SETTING D ELSE
         ERRMSG="DEPARTMENT ":MT.DEPT<TM>:" NOT IN DIVISION";GOSUB 91000;GOTO 110
      END
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:MT.DEPT<TM> ELSE
         ERRMSG="INVALID DEPARTMENT";GOSUB 91000;GOTO 110
      END
      MT.DEPT.DESC<TM>=DEPT.DESC
      P_X  = 23 ; P_Y = 5 ; P_VALUE = MT.DEPT.DESC<TM> "L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*--CCTR NO
120*
      X=17;Y=6;TYP=1;MAXL=3;O.R='O';HMSG="ENTER VALID COST CENTER NUMBER"
      IF MT.CCTR<TM>='' THEN
         O.R='R';DEFAULT=''
      END ELSE
         DEFAULT=MT.CCTR<TM>
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='.' THEN
         P_X  = 17 ; P_Y = 6 ; P_VALUE = PVALUE "L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 110
      END
      IF VALUE='END' THEN GOTO 189
      IF VALUE='' THEN GOTO 120
      IF VALUE=".." THEN
         FILE=3;GOSUB 2000
         IF MT.CCTR<TM>='' THEN
            ERRMSG="YOU MUST ENTER A COST CENTER";GOSUB 91000;GOTO 120
         END
         P_X  = 17 ; P_Y = 6 ; P_VALUE = MT.CCTR<TM>"L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         MT.CCTR<TM>=VALUE
      END
      LOCATE MT.CCTR<TM> IN DEPT.CCTRS<1>,1 SETTING C ELSE
         ERRMSG="COST CENTER ":MT.CCTR<TM>:" NOT IN DEPARTMENT";GOSUB 91000;GOTO 120
      END
      MATREAD CCTR.REC FROM COST.CNTR,CONO:MT.CCTR<TM> ELSE
         ERRMSG="INVALID COST.CNTR";GOSUB 91000;GOTO 120
      END
      IF CCTR.DEPT # MT.DEPT<TM> THEN
         ERRMSG='INCORRECT DEPARTMENT IN COST CENTER ':MT.CCTR<TM>
         GOSUB 91000
         GOTO 120
      END
      IF CCTR.TYPE='F' THEN
         ERRMSG='COST CENTER (':MT.CCTR<TM>:') IS FROZEN';GOSUB 91000;GOTO 120
      END
      MT.CCTR.DESC<TM>=CCTR.DESC
      P_X  = 23 ; P_Y = 6 ; P_VALUE = MT.CCTR.DESC<TM>"L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*--TYPE
130*
      X=17;Y=7;TYP=1;MAXL=1;HMSG="ENTER SELECTION (1,2,3) OR END";O.R='O'
      VALDAT=".":VM:"1":VM:"2":VM:"3"
      IF MT.TYPE<TM>='' THEN
         DEFAULT='1'
      END ELSE
         IF MT.TYPE<TM>="R" THEN MT.TYPE<TM>="1"
         IF MT.TYPE<TM>="S" THEN MT.TYPE<TM>="2"
         IF MT.TYPE<TM>="C" THEN MT.TYPE<TM>="3"
         DEFAULT=MT.TYPE<TM>
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='.' THEN
         P_X  = 17 ; P_Y = 7 ; P_VALUE = PVALUE "L#1" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 120
      END
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 130
      MT.TYPE<TM>=VALUE
      IF VALUE="2" THEN
         P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         X=17;Y=21;TYP=1;MAXL=6;O.R='O';HMSG="ENTER VALID SPOILAGE CODE"
         IF MT.SP.CD<TM>='' THEN
            DEFAULT=''
         END ELSE
            DEFAULT=MT.SP.CD<TM>
         END
         PVALUE=DEFAULT;CALL EDIT.SUB
         IF VALUE='END' OR VALUE='' THEN
            P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            GOTO 130
         END
         MT.SP.CD<TM>=VALUE
         READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:VALUE ELSE
            ERRMSG="INVALID SPOILAGE CODE";GOSUB 91000;GOTO 130
         END
         GOTO 135
      END
      IF MT.TYPE<TM> # '2' THEN MT.SP.CD<TM>=''
135*
      IF PROMPT.MSG=PMSG5 THEN
         P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
*--PROD NO
140*
      X=17;Y=9;TYP=1;MAXL=15;HMSG="ENTER VALID PRODUCT NUMBER";O.R='O'
      IF MT.PROD<TM>='' THEN
         DEFAULT=''
      END ELSE
         DEFAULT=MT.PROD<TM>
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      BEGIN CASE
         CASE VALUE='.' 
            P_X  = 17 ; P_Y = 9 ; P_VALUE = PVALUE "L#15" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            GOTO 130
         CASE VALUE='END'   
            GOTO 189
         CASE VALUE=''  
            X=34;Y=9;TYP=1;MAXL=46;HMSG='ENTER VALID PRODUCT DESCRIPTION';O.R='O';DEFAULT='';PVALUE=DEFAULT;CALL EDIT.SUB
            IF VALUE='' OR VALUE='END' THEN
               P_X  = 17 ; P_Y = 9 ; P_VALUE = '' ; P_OPT = "CL"
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               GOTO 140
            END
            GXR.CO=CONO;GXR.LOC=1;GXR.ID='';GXR.SRCH.ID=VALUE
            CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
*       PRINT @(-1):
            XREF.FLG=1;GOSUB 1000;GOSUB 1025
            IF MT.JOB.NO<TM> # '' THEN GOSUB 181
            IF GXR.ID='' THEN
               P_X  = 17 ; P_Y = 9 ; P_VALUE = '' ; P_OPT = "CL"
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               GOTO 140
            END ELSE
               MATREAD INV.REC FROM INVENTORY,CONO:GXR.ID ELSE
                  ERRMSG="INVENTORY ":GXR.ID:" IS MISSING";GOSUB 91000;MT.ERR.FLG<TM>=1;VALUE="END";GOTO 189
               END
               MT.PROD<TM>=GXR.ID
               MT.PROD.DESC<TM>=INV.FULL.DESC
               P_X  = 17 ; P_Y = 9 ; P_VALUE = MT.PROD<TM>"L#15":' ':MT.PROD.DESC<TM>"L#46" ; P_OPT = ""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=""
            END
         CASE VALUE # ''
            MT.PROD<TM>=VALUE
            MATREAD INV.REC FROM INVENTORY,CONO:MT.PROD<TM> ELSE
               ERRMSG="INVALID INVENTORY NUMBER";GOSUB 91000;GOTO 140
            END
            MT.PROD.DESC<TM>=INV.FULL.DESC
            P_X  = 34 ; P_Y = 9 ; P_VALUE = MT.PROD.DESC<TM>"L#46" ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=""
      END CASE
      SAVE.WHSE=INV.WHSE.CODE
      MT.PAP.TYPE<TM>=INV.PAP.TYPE
*--WHSE
150*
      W.CNT=COUNT(SAVE.WHSE,VM) + (SAVE.WHSE # '')
      IF W.CNT=1 THEN
         P_X  = 17 ; P_Y = 10 ; P_VALUE = MT.WHSE<TM>"L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         MATREAD WHSE.REC FROM WAREHOUSE,CONO:MT.WHSE<TM> ELSE
            ERRMSG="INVALID WAREHOUSE NUMBER";GOSUB 91000;GOTO 140
         END
         MATREAD IWH.REC FROM INV.WHSE,CONO:MT.PROD<TM>:"!":MT.WHSE<TM> ELSE
            ERRMSG="INVALID WAREHOUSE LOCATION";GOSUB 91000;GOTO 140
         END
         GOTO 155
      END
      HMSG='';X=17;Y=10;TYP=1;MAXL=4;HMSG="WAREHOUSE - ";O.R='O'
      FOR G=1 TO W.CNT
         HMSG=HMSG:SAVE.WHSE<1,G>:','
      NEXT G
      W.LEN=LEN(HMSG);HMSG=HMSG[1,W.LEN - 1]
      IF MT.WHSE<TM>='' THEN
         O.R='R';DEFAULT=''
      END ELSE
         DEFAULT=MT.WHSE<TM>
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='.' THEN
         P_X  = 17 ; P_Y = 10 ; P_VALUE = PVALUE "L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 140
      END
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 150
      MT.WHSE<TM>=VALUE
      LOCATE MT.WHSE<TM> IN SAVE.WHSE<1>,1 SETTING WFND ELSE
         ERRMSG="PRODUCT DOES NOT EXIST IN WAREHOUSE ":MT.WHSE<TM>;GOSUB 91000;GOTO 150
      END
155*
      MATREAD WHSE.REC FROM WAREHOUSE,CONO:MT.WHSE<TM> ELSE
         ERRMSG="INVALID WAREHOUSE NUMBER";GOSUB 91000;GOTO 150
      END
      MATREAD IWH.REC FROM INV.WHSE,CONO:MT.PROD<TM>:"!":MT.WHSE<TM> ELSE
         ERRMSG="INVALID WAREHOUSE LOCATION";GOSUB 91000;GOTO 150
      END
      SAVE.LOC=IWH.LOC
*--WHSE LOC
160*
      L.CNT=COUNT(SAVE.LOC,VM) + (SAVE.LOC # '')
      IF L.CNT=1 THEN
         P_X  = 17 ; P_Y = 11 ; P_VALUE = MT.INV.WHSE<TM>"L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         MATREAD IWLO.REC FROM INV.WHSE.LOC , CONO:MT.PROD<TM>:"!":MT.WHSE<TM>:"!":MT.INV.WHSE<TM> ELSE
            ERRMSG="WAREHOUSE LOCATION ":MT.INV.WHSE<TM>:" NOT IN WAREHOUSE";GOSUB 91000;GOTO 140
         END
         GOTO 165
      END
      HMSG='';X=17;Y=11;TYP=1;MAXL=4;HMSG="LOCATION - ";O.R='O'
      LOC=1
      FOR G=1 TO L.CNT
         HMSG<1,LOC>=HMSG<1,LOC>:SAVE.LOC<1,G>:','
         IF LEN(HMSG<1,LOC>) > 68 THEN LOC=LOC + 1
      NEXT G
      L.LEN=LEN(HMSG);HMSG=HMSG[1,L.LEN - 1]
      IF MT.INV.WHSE<TM> # '' THEN
         DEFAULT=MT.INV.WHSE<TM>
      END ELSE
         O.R='R';DEFAULT=''
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE='.' THEN
         P_X  = 17 ; P_Y = 11 ; P_VALUE = PVALUE "L#4" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 150
      END
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 160
      MT.INV.WHSE<TM>=VALUE
      LOCATE MT.INV.WHSE<TM> IN SAVE.LOC<1>,1 SETTING FND ELSE
         ERRMSG="WAREHOUSE LOCATION ":MT.INV.WHSE<TM>:" NOT IN WAREHOUSE";GOSUB 91000;GOTO 160
      END
      MATREAD IWLO.REC FROM INV.WHSE.LOC , CONO:MT.PROD<TM>:"!":MT.WHSE<TM>:"!":MT.INV.WHSE<TM> ELSE
         ERRMSG="WAREHOUSE LOCATION ":MT.INV.WHSE<TM>:" NOT IN WAREHOUSE";GOSUB 91000;GOTO 160
      END
165*
      SAVE.R.S.ID=IWLO.R.S.ID
*--QTY
170*
      QTY.FLG=1;GOSUB 1510
      BEGIN CASE
         CASE MT.PAP.TYPE<TM>="SHEET"
            SR.CNT= COUNT(SAVE.R.S.ID, VM) + (SAVE.R.S.ID # "")
            IF SR.CNT=1 AND CATG.R.S.ID # "" THEN
               VALUE=SAVE.R.S.ID<1,1>
               P_X  = 40 ; P_Y = 12 ; P_VALUE = VALUE ; P_OPT = ""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END ELSE
               HMSG="";X=40;Y=12;TYP=1;MAXL=11;O.R='R';HMSG="SKID NUMBER - "
               SR.LOC=1
               FOR SR=1 TO SR.CNT
                  HMSG<1,SR.LOC>=HMSG<1,SR.LOC>:SAVE.R.S.ID<1,SR>:","
                  IF LEN(HMSG<1,SR.LOC>) > 68 THEN SR.LOC=SR.LOC + 1
               NEXT SR
               SR.LEN=LEN(HMSG);HMSG=HMSG[1,SR.LEN - 1]
               IF MT.SKID.NO<TM> # '' THEN
                  O.R='O';DEFAULT=MT.SKID.NO<TM>
               END ELSE
                  DEFAULT=''
               END
               PVALUE=DEFAULT;CALL EDIT.SUB
            END
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            MT.SKID.NO<TM>=VALUE
            LOCATE MT.SKID.NO<TM> IN SAVE.R.S.ID<1>,1 SETTING SFND ELSE
               ERRMSG="INVALID SKID NUMBER";GOSUB 91000;GOTO 170
            END
171*
            X=40;Y=13;TYP=3;MAXL=8;HMSG="ENTER NUMBER OF SHEETS";O.R='O'
            IF MT.SHEETS<TM> # '' THEN
               DEFAULT=MT.SHEETS<TM>
            END ELSE
               DEFAULT=IWLO.CURR.SHEET<1,SFND>
            END
            PVALUE=DEFAULT;CALL EDIT.SUB
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            IF VALUE < 0 THEN
               ERRMSG="MUST BE A POSITIVE NUMBER";GOSUB 91000;GOTO 171
            END
            IF VALUE > IWLO.CURR.SHEET<1,SFND> THEN
               ERRMSG="CANNOT EXCEED ON HAND QUANTITY OF ":IWLO.CURR.SHEET<1,SFND>;GOSUB 91000;GOTO 171
            END
            MT.SHEETS<TM>=VALUE
            MT.WGHT<TM>=INT(((MT.SHEETS<TM> * INV.M.WT) / 1000) + .5)
            MT.QTY<TM>='';MT.ROLL.NO<TM>='';MT.ODIAM<TM>='';MT.NDIAM<TM>=''
         CASE MT.PAP.TYPE<TM>="ROLL"
            SR.CNT=COUNT(SAVE.R.S.ID,VM) + (SAVE.R.S.ID # "")
            IF SR.CNT=1 AND CATG.R.S.ID # "" THEN
               VALUE=SAVE.R.S.ID<1,1>
               P_X  = 67 ; P_Y = 12 ; P_VALUE = VALUE ; P_OPT = ""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END ELSE
               HMSG="";X=67;Y=12;TYP=1;MAXL=11;O.R='O';HMSG="ROLL NUMBER - "
               SR.LOC=1
               FOR SR=1 TO SR.CNT
                  HMSG<1,SR.LOC>=HMSG<1,SR.LOC>:SAVE.R.S.ID<1,SR>:","
                  IF LEN(HMSG<1,SR.LOC>) > 68 THEN SR.LOC=SR.LOC + 1
               NEXT SR
               SR.LEN=LEN(HMSG);HMSG=HMSG[1,SR.LEN - 1]
               IF MT.ROLL.NO<TM>='' THEN
                  O.R='R';DEFAULT=''
               END ELSE
                  DEFAULT=MT.ROLL.NO<TM>
               END
               PVALUE=DEFAULT;CALL EDIT.SUB
            END
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            MT.ROLL.NO<TM>=VALUE
            LOCATE MT.ROLL.NO<TM> IN SAVE.R.S.ID<1>,1 SETTING RFND ELSE
               ERRMSG="INVALID ROLL NUMBER";GOSUB 91000;GOTO 170
            END
172*
            X=67;Y=13;TYP=4;MAXL=8;HMSG="ENTER WEIGHT";O.R='O'
            IF MT.WGHT<TM>='' THEN
               DEFAULT=OCONV(IWLO.CURR.WT<1,RFND>,"MD2")
            END ELSE
               DEFAULT=OCONV(MT.WGHT<TM>,"MD2")
            END
            PVALUE=DEFAULT;CALL EDIT.SUB
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            IF VALUE < 0 THEN
               ERRMSG="MUST ENTER A POSITIVE NUMBER";GOSUB 91000;GOTO 172
            END
            IF VALUE > IWLO.CURR.WT<1,RFND> THEN
               ERRMSG="CANNOT EXCEED ON HAND QUANTITY OF ":OCONV(IWLO.CURR.WT<1,FND,RFND>,"MD2");GOSUB 91000;GOTO 172
            END
            MT.WGHT<TM>=VALUE
173*
            X=67;Y=14;TYP=4;MAXL=8;HMSG="ENTER DIAMETER";O.R='O'
            IF MT.ODIAM<TM>='' THEN
               DEFAULT="0"
            END ELSE
               DEFAULT=OCONV(MT.ODIAM<TM>,"MD2")
            END
            PVALUE=DEFAULT;CALL EDIT.SUB
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            IF VALUE < 0 THEN 
               ERRMSG="MUST ENTER A POSITIVE NUMBER";GOSUB 91000;GOTO 173
            END
            IF VALUE > IWLO.CURR.DIAM<1,RFND> THEN
               ERRMSG="CANNOT EXCEED CURRENT ON HAND QUANTITY OF ":OCONV(IWLO.CURR.DIAM<1,FND,RFND>,"MD2");GOSUB 91000;GOTO 173
            END
            MT.ODIAM<TM>=VALUE
            MT.QTY<TM>='';MT.SKID.NO<TM>='';MT.SHEETS<TM>=''
         CASE 1
174*
            X=17;Y=12;TYP=4;MAXL=8;O.R='O';HMSG='ENTER QUANTITY'
            IF MT.QTY<TM>='' THEN
               DEFAULT=OCONV(IWLO.LOC.ON.HAND,"MD2")
            END ELSE
               DEFAULT=OCONV(MT.QTY<TM>,"MD2")
            END
            PVALUE=DEFAULT;CALL EDIT.SUB
            IF VALUE="." THEN GOTO 160
            IF VALUE='END' THEN GOTO 189
            IF VALUE='' THEN GOTO 170
            IF VALUE < 0 THEN
               ERRMSG="MUST ENTER A POSITIVE NUMBER";GOSUB 91000;GOTO 174
            END
            IF VALUE > IWLO.LOC.ON.HAND THEN
               ERRMSG="CANNOT EXCEED CURRENT QUANTITY ON HAND OF ":OCONV(IWLO.LOC.ON.HAND<1,FND>,"MD2");GOSUB 91000;GOTO 174
            END
            MT.QTY<TM>=VALUE;MT.SKID.NO<TM>='';MT.SHEETS<TM>='';MT.ROLL.NO<TM>='';MT.WGHT<TM>='';MT.ODIAM<TM>='';MT.NDIAM<TM>=''
      END CASE
*--JOB NO
180*
      X=17;Y=15;TYP=1;MAXL=8;HMSG="ENTER VALID JOB NUMBER";O.R='O'
      IF MT.JOB.NO<TM> # '' THEN
         DEFAULT=MT.JOB.NO<TM>
      END ELSE
         O.R='R';DEFAULT=''
      END
      PVALUE=DEFAULT;CALL EDIT.SUB
      IF VALUE="." THEN 
         P_X  = 17 ; P_Y = 15 ; P_VALUE = PVALUE "L#8" ; GOTO 170 ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF VALUE='END' THEN GOTO 189 
      IF VALUE='' THEN GOTO 180
      MT.JOB.NO<TM>=VALUE
181*
      MATREAD JOB.REC FROM JOB,CONO:MT.JOB.NO<TM> ELSE
         ERRMSG="INVALID JOB NUMBER";GOSUB 91000;GOTO 180
      END
      IF JOB.CUST # '' THEN
         MT.CUST.NO<TM>=JOB.CUST
         MATREAD CUST.REC FROM CUSTOMER,CONO:MT.CUST.NO<TM> ELSE CUST.NAME=UNKNOWN
         MT.CUST.NAME<TM>=CUST.NAME
         P_X  = 41 ; P_Y = 15 ; P_VALUE = MT.CUST.NAME<TM>"L#39" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         MT.CUST.NAME<TM>=''
      END
      FOR B=16 TO 19
         P_X  = 5 ; P_Y = B ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT B
      IF JOB.DESC # '' THEN
         LN=16
         FOR B=1 TO 4
            IF JOB.DESC<1,B> # '' THEN
               P_X  = 5 ; P_Y = LN ; P_VALUE = JOB.DESC<1,B>"L#75" ; P_OPT = ""
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            END
            LN=LN + 1
         NEXT B
         MT.JOB.DESC1<TM>=JOB.DESC<1,1>
         MT.JOB.DESC2<TM>=JOB.DESC<1,2>
         MT.JOB.DESC3<TM>=JOB.DESC<1,3>
         MT.JOB.DESC4<TM>=JOB.DESC<1,4>
      END ELSE
         MT.JOB.DESC1<TM>=''
         MT.JOB.DESC2<TM>=''
         MT.JOB.DESC3<TM>=''
         MT.JOB.DESC4<TM>=''
      END
189*
      RETURN
*--SCREEN LAYOUT
1000*
      P_X  = 0 ; P_Y = 0 ; P_VALUE = 'C.B.A. ':TITLE:' ':T.DATE ; P_OPT = ""
      P_X  := AM:0 ; P_Y := AM:1 ; P_VALUE := AM:DASHES
      P_X  := AM:3 ; P_Y := AM:2 ; P_VALUE := AM:'Employee ID:':SPACE(41):'Password:'
      P_X  := AM:0 ; P_Y := AM:3 ; P_VALUE := AM:DASHES
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1005*
      P_X  = 3 ; P_Y = 4 ; P_VALUE = 'Division:' ; P_OPT = ""
      P_X  := AM:3 ; P_Y := AM:5 ; P_VALUE := AM:'Department:'
      P_X  := AM:3 ; P_Y := AM:6 ; P_VALUE := AM:'Cost Center:'
      P_X  := AM:3 ; P_Y := AM:7 ; P_VALUE := AM:'Trans Type:(1) Regular (2) Spoilage (3) Change Order'
      P_X  := AM:0 ; P_Y := AM:8 ; P_VALUE := AM:""
      P_X  := AM:3 ; P_Y := AM:9 ; P_VALUE := AM:'Product #:'
      P_X  := AM:3 ; P_Y := AM:10 ; P_VALUE := AM:'Warehouse:'
      P_X  := AM:3 ; P_Y := AM:11 ; P_VALUE := AM:'Location:'
      P_X  := AM:3 ; P_Y := AM:12 ; P_VALUE := AM:'Quantity:Skid #:Roll #:'
      P_X  := AM:31 ; P_Y := AM:13 ; P_VALUE := AM:'Sheets:Weight:'
      P_X  := AM:56 ; P_Y := AM:14 ; P_VALUE := AM:'Diameter:'
      P_X  := AM:3 ; P_Y := AM:15 ; P_VALUE := AM:'Job Number:Customer:'
      P_X  := AM:0 ; P_Y := AM:20 ; P_VALUE := AM:DASHES
      P_X  := AM:0 ; P_Y := AM:21 ; P_VALUE := AM:PROMPT.MSG
      P_X  := AM:0 ; P_Y := AM:22 ; P_VALUE := AM:DASHES
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*--PRINT VALUES
1025*
      IF XREF.FLG=1 THEN
         P_X  = 17 ; P_Y = 2 ; P_VALUE = MT.EMP.NO<TM>"L#5":' ':MT.EMP.NAME<TM>"L#30" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         XREF.FLG=0
      END
      P_X  = 17 ; P_Y = 4 ; P_VALUE = MT.DIV<TM>"L#4":' ':MT.DIV.DESC<TM>"L#30" ; P_OPT = ""
      P_X  := AM:17 ; P_Y := AM:5 ; P_VALUE := AM:MT.DEPT<TM>"L#5":' ':MT.DEPT.DESC<TM>"L#30"
      P_X  := AM:17 ; P_Y := AM:6 ; P_VALUE := AM:MT.CCTR<TM>"L#4":' ':MT.CCTR.DESC<TM>"L#30"
      P_X  := AM:17 ; P_Y := AM:7 ; P_VALUE := AM:MT.TYPE<TM>
      P_X  := AM:17 ; P_Y := AM:9 ; P_VALUE := AM:MT.PROD<TM>"L#15":' ':MT.PROD.DESC<TM>"L#46"
      P_X  := AM:17 ; P_Y := AM:10 ; P_VALUE := AM:MT.WHSE<TM>"L#4"
      P_X  := AM:17 ; P_Y := AM:11 ; P_VALUE := AM:MT.INV.WHSE<TM>"L#4"
      P_X  := AM:17 ; P_Y := AM:12 ; P_VALUE := AM:OCONV(MT.QTY<TM>,"MD2")"R#8"
      P_X  := AM:40 ; P_Y := AM:12 ; P_VALUE := AM:MT.SKID.NO<TM>"L#11"
      P_X  := AM:67 ; P_Y := AM:12 ; P_VALUE := AM:MT.ROLL.NO<TM>"L#11"
      P_X  := AM:40 ; P_Y := AM:13 ; P_VALUE := AM:MT.SHEETS<TM>"L#8"
      P_X  := AM:67 ; P_Y := AM:13 ; P_VALUE := AM:OCONV(MT.WGHT<TM>,"MD2")"R#8"
      P_X  := AM:67 ; P_Y := AM:14 ; P_VALUE := AM:OCONV(MT.ODIAM<TM>,"MD2")"R#8"
      P_X  := AM:17 ; P_Y := AM:15 ; P_VALUE := AM:MT.JOB.NO<TM>"L#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      RETURN
*--CLEAR SCREEN AND RE-INITIAL
1500*
      P_X  = 17 ; P_Y = 2 ; P_VALUE = " " ; P_OPT = ""
      P_X  := AM:68 ; P_Y := AM:2 ; P_VALUE := AM:""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1505*
      P_X  = 17 ; P_Y = 4 ; P_VALUE = "" ; P_OPT = "CL"
      P_X  := AM:17 ; P_Y := AM:5 ; P_VALUE := AM:""
      P_X  := AM:17 ; P_Y := AM:6 ; P_VALUE := AM:""
      P_X  := AM:17 ; P_Y := AM:7 ; P_VALUE := AM:" "
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      FOR B=8 TO 11
         P_X  = 17 ; P_Y = B ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT B
1510*
      P_X  = 17 ; P_Y = 12 ; P_VALUE = " " ; P_OPT = ""
      P_X  := AM:40 ; P_Y := AM:12 ; P_VALUE := AM:" "
      P_X  := AM:67 ; P_Y := AM:12 ; P_VALUE := AM:" "
      P_X  := AM:40 ; P_Y := AM:13 ; P_VALUE := AM:" "
      P_X  := AM:67 ; P_Y := AM:13 ; P_VALUE := AM:" "
      P_X  := AM:67 ; P_Y := AM:14 ; P_VALUE := AM:" "
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF QTY.FLG=1 THEN
         QTY.FLG=0;GOTO 1515
      END
      P_X  = 17 ; P_Y = 15 ; P_VALUE = " " ; P_OPT = ""
      P_X  := AM:41 ; P_Y := AM:15 ; P_VALUE := AM:""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      FOR B=16 TO 19
         P_X  = 5 ; P_Y = B ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT B
      P_X  = 18 ; P_Y = 21 ; P_VALUE = " " ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF MT.ERR.FLG<TM>=1 THEN
         FOR B=3 TO 34
            MT.TBL(B)<TM>=''
         NEXT B
      END ELSE
         FOR B=1 TO 34
            MT.TBL(B)<TM>=''
         NEXT B
      END
1515*
      RETURN
*--CLEAR CENTER OF SCREEN
1550*
      FOR B=4 TO 19
         P_X  = 0 ; P_Y = B ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT B
      RETURN
*--LOAD MATRIX FOR DISPLAY
2000*
      GOSUB 1550;PROMPT.MSG=PMSG3;MAT DM.REC='';E='';D.CNT=''
      P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BEGIN CASE
         CASE FILE=1
            READ DM.NO FROM CONTROL, CONO : "DIVISIONS" ELSE DM.NO = ""
            D.CNT=COUNT(DM.NO,VM) + (DM.NO # '')
            FOR E=1 TO D.CNT
               MATREAD DIV.REC FROM DIVISION,CONO:DM.NO<1,E> ELSE DIV.DESC=UNKNOWN
               DM.DESC<1,E>=DIV.DESC
            NEXT E
            P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG;RET.VALUE='' ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            CALL ADC.SCROLL(MAT DM.REC,RET.VALUE)
            MT.DIV<TM>=RET.VALUE<1,1>
         CASE FILE=2
            DM.NO=DIV.DEPT
            D.CNT=COUNT(DM.NO,VM) + (DM.NO # '')
            FOR E=1 TO D.CNT
               MATREAD DEPT.REC FROM DEPARTMENT,CONO:DM.NO<1,E> ELSE DEPT.DESC=UNKNOWN
               DM.DESC<1,E>=DEPT.DESC
            NEXT E
            P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG;RET.VALUE='' ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            CALL ADC.SCROLL(MAT DM.REC,RET.VALUE)
            MT.DEPT<TM>=RET.VALUE<1,1>
         CASE FILE=3
            DM.NO=DEPT.CCTRS
            D.CNT=COUNT(DM.NO,VM) + (DM.NO # "")
            FOR E=1 TO D.CNT
               MATREAD CCTR.REC FROM COST.CNTR,CONO:DM.NO<1,E> ELSE CCTR.DESC=UNKNOWN
               IF CCTR.TYPE='F' THEN CCTR.DESC="THIS COST CENTER IS FROZEN"
               DM.DESC<1,E>=CCTR.DESC
            NEXT E
            P_X  = 0 ; P_Y = 21 ; P_VALUE = PROMPT.MSG;RET.VALUE='' ; P_OPT = ""
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            CALL ADC.SCROLL(MAT DM.REC,RET.VALUE)
            MT.CCTR<TM>=RET.VALUE<1,1>
      END CASE
99999 *
      P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      PROMPT.MSG=PMSG1;GOSUB 1005;GOSUB 1025
      IF MODE # 1 THEN GOSUB 181
      RETURN
*--CALLS FOR SYSCOM
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
   END
