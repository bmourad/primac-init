*COPY>CPYLIB>COM1
**********************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - CAF1BP
* PROGRAM     - CHANGE.JOB.CUST
* BY          - TOM PENNY
* DATE        - 07/16/91
* DESCRIPTION - CHANGE CUSTOMER ON JOB FILE AND ASSOCIATED DATA FOR
*               JOBS NOT INVOICED
*
* CAF  21174  GAT USER REPORTED CHANGING CUSTOMER WITHOUT SYSTEM CHECKING
*             OTHER JOBS IN FAMILY ON STATUS
* T23278 markt 10/13/1998 * Add division security check
* EP  23670   Mod. to allow change of customer only on master job level
*              Sub jobs are updated automaticaly.
*T26126 adelgado 03/07/2002 * Implement the LOCKED clause for READU.
**********************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
  SYS.TYPE=1
  CALL SYSCOM(MAT SYSCOM.REC)
  MAT FILE.VARS=''
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS FILE IS MISSING';GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93000
  OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING';GOTO 93000
  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG='INV.JOB.STATS FILE IS MISSING';GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
*
  CONO="";MAT COMP.REC=''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO='END' THEN GOTO 99999
  OPS.FLG = 0
  MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" THEN
    OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG='JOB.FNGD.STATS FILE IS MISSING';GOTO 93000
  END
  DIM JOB.MAST.REC(200)
  DIM JOB.SUB.REC(200)
*
  MAT EDIT.COM.DRIVER=''
  ECD.SCRN.CNT=1
  ECD.SCRN.NAME<1>='CHANGE.JOB.CUST'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO=1
  ECD.ACTION=2;CALL SCRN.EDIT
*
*---- Enter Job Number
100 *
  MAT SCV.REC = ""
  MAT JOB.MAST.REC = ""
  MAT JOB.SUB.REC = ""
  ECD.ACTION = 6; CALL SCRN.EDIT
  ECD.NUM=1
  ECD.VALDAT.CODE='5';ECD.VALDAT.FILE=JOB;ECD.PREFIX.ID=CONO  ;* T26126
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99990
    CASE ECD.VALDAT.ITEM  # ''
      MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE MAT JOB.REC = ""
*T23278 v
      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 100
      END
*T23278 ^
      JOBNO=ECD.RET.VALUE
**23670 v
      IF JOBNO # JOB.MASTER THEN
        ERRMSG="This is a sub job. Customer must be changed using master job #:":JOB.MASTER
        GOSUB 91000
        GOTO 100
      END
** 23670 ^
      IF JOB.INV.NO # "" THEN
        RELEASE JOB,CONO:JOBNO
        ERRMSG = "Job Has Been Invoiced"
        GOSUB 91000
        GOTO 100
      END
      IF OPS.FLG THEN
        MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO THEN
          IF JFS.ORDER # "" THEN
            RELEASE JOB, CONO : JOBNO
            ERRMSG = "THERE ARE ORDERS LINKED TO THIS JOB"
            GOSUB 91000; GOTO 100
          END
        END
      END
*  CAF 21174
      GOSUB 1000
*
      RESV.HIT=0
      USED.HIT=0
      RESV.CNT = DCOUNT(JOB.RESV.MATL,VM)
      FOR RESVLP = 1 TO RESV.CNT UNTIL RESV.HIT
        IF JOB.RESV.QTY<1,RESVLP> > 0 THEN
          RESV.ID = JOB.RESV.MATL<1,RESVLP>
          READV INV.CUST FROM INVENTORY,CONO:RESV.ID,19 THEN
            IF INV.CUST # "" THEN RESV.HIT = 1
          END
        END
      NEXT RESVLP
*
      USED.CNT = DCOUNT(JOB.MT.PROD,VM)
      FOR USEDLP = 1 TO USED.CNT UNTIL USED.HIT
        USED.ID = JOB.MT.PROD<1,USEDLP>
        READV INV.CUST FROM INVENTORY,CONO:USED.ID,19 THEN
          IF INV.CUST # "" THEN USED.HIT = 1
        END
      NEXT USEDLP
      BEGIN CASE
        CASE RESV.HIT AND USED.HIT
          ERRMSG = "Job Has Customer Owned Stock Reserved and Used"
          GOSUB 91000
          GOTO 100
        CASE RESV.HIT
          ERRMSG = "Job Has Customer Owned Stock Reserved"
          GOSUB 91000
          GOTO 100
        CASE USED.HIT
          ERRMSG = "Job Has Customer Owned Stock Used"
          GOSUB 91000
          GOTO 100
      END CASE
*
      ECD.NUM=6;GOSUB 20000;ECD.ACTION=5;CALL SCRN.EDIT
      MATREADU CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
        RELEASE JOB, CONO : JOBNO
        RELEASE CUSTOMER, CONO : JOB.CUST
        ERRMSG = "CANNOT LOCATE CUSTOMER - " : JOB.CUST
        GOSUB 91000
        GOTO 100
      END
      ECD.NUM=2;SCV.REC(ECD.NUM)<1>=JOB.CUST
      ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=10;SCV.REC(ECD.NUM)<1>=CUST.NAME
      ECD.ACTION=5;CALL SCRN.EDIT
    CASE 1
      GOTO 100
  END CASE
  IF JOB.SP.SEQ # "" THEN
    ERRMSG = "WARNING !!! JOB HAS SHIPMENT ENTRIES"
    GOSUB 91000
  END
*
150 * NEW CUST ID
*
  ECD.VALDAT.CODE='1';ECD.VALDAT.FILE=CUSTOMER;ECD.PREFIX.ID=CONO
  ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = 'END' THEN GOTO 99990
  IF ECD.RET.VALUE = JOB.CUST THEN
    ERRMSG = "SAME AS CURRENT JOB CUSTOMER"
    GOSUB 91000
    GOTO 150
  END
  READV TEMP.NAME FROM CUSTOMER,CONO:ECD.RET.VALUE,1 ELSE TEMP.NAME = ""
  ECD.NUM=4;ECD.ACTION=5;SCV.REC(ECD.NUM)<1>=TEMP.NAME;CALL SCRN.EDIT
  IF ECD.VALDAT.ITEM = "" THEN GOTO 150
  NEW.CUST = ECD.RET.VALUE
*
200 *
*
  ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "E" OR ECD.RET.VALUE = "END" THEN
    RELEASE JOB, CONO : JOBNO
    RELEASE CUSTOMER, CONO : JOB.CUST
    RELEASE CUSTOMER, CONO : NEW.CUST
    GOTO 99990
  END
  IF ECD.RET.VALUE # "F" THEN GOTO 200
**23670 v
  X = 0 ; Y = 21 ; TYP = 18 ; MAXL = 1
  PMSG = "Customer change will update all sub jobs. Continue (Y/N) ? "
  CALL EDIT.SUB
  P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"  
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)              
  IF VALUE = "N" THEN 
    GOTO 100
  END
*
*** FINISH CHANGE ***
*
  JOB.ARR = INSERT(JOB.SUBS,1,1,0,JOB.MASTER)
  NBR.LPS = DCOUNT(JOB.ARR,VM)
  FOR XX = 1 TO NBR.LPS
    MATREADU JOB.REC FROM JOB, CONO:JOB.ARR<1,XX> ELSE MAT JOB.REC = ""
*C34042 v Need to get original cust rec for sub-job
    MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE MAT CUST.REC = ''
*C34042 ^
*LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = 0
    LOCATE JOB.ARR<1,XX> IN CUST.JOB<1>,1 SETTING FND ELSE FND = 0
**23670 ^
    IF FND THEN
      QUOTED.AMT = CUST.JOB.BAL<1,FND>
      CUST.JOB = DELETE(CUST.JOB,1,FND,0)
      CUST.JOB.BAL = DELETE(CUST.JOB.BAL,1,FND,0)
      MATWRITE CUST.REC ON CUSTOMER, CONO : JOB.CUST
    END ELSE
      QUOTED.AMT = 0
      RELEASE CUSTOMER, CONO : JOB.CUST
    END
    FND = 1
    MATREAD CUST.REC FROM CUSTOMER, CONO : NEW.CUST ELSE FND = 0
    IF FND THEN
**23670 v
  *LOCATE JOBNO IN CUST.JOB<1>,1 SETTING FND ELSE FND = -1
      LOCATE JOB.ARR<1,XX> IN CUST.JOB<1>,1 SETTING FND ELSE FND = -1
 *CUST.JOB<1,FND,0> = JOBNO
      CUST.JOB<1,FND,0> = JOB.ARR<1,XX>
**23670 ^
      CUST.JOB.BAL<1,FND,0> = QUOTED.AMT
      MATWRITE CUST.REC ON CUSTOMER, CONO : NEW.CUST
    END ELSE
      RELEASE CUSTOMER, CONO : NEW.CUST
    END
    JOB.CUST = NEW.CUST
**23670 v
    MATWRITE JOB.REC ON JOB, CONO : JOB.ARR<1,XX>
  *MATWRITE JOB.REC ON JOB, CONO : JOBNO
**23670 ^
    MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
    FOR M = MCNT TO 1 STEP -1
**23670 v
* JSTAT.ID = CONO:JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO
      JSTAT.ID = CONO:JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.ARR<1,XX>
**23670 ^
      MATREADU INV.JS.REC FROM INV.JOB.STATS, JSTAT.ID ELSE
        RELEASE INV.JOB.STATS, JSTAT.ID
        GOTO 599
      END
      IJS.JOB.CUST = JOB.CUST
      MATWRITE INV.JS.REC ON INV.JOB.STATS, JSTAT.ID
599 NEXT M
**23670 v
  NEXT XX
**23670 ^
  GOTO 100
*
***************
*  CAF 21174
1000 * CHECK JOB STRUCTURE FOR STATUS
  IF JOB.MASTER = JOBNO THEN
    IF JOB.SUBS = "" THEN 
      GOSUB 2000
    END ELSE
      GOSUB 2000
      GOSUB 3000
    END
  END ELSE
    GOSUB 2000
    GOSUB 3000
  END
  RETURN
*
2000 * Check Master Job
  MATREAD JOB.MAST.REC FROM JOB,CONO:JOB.MASTER ELSE
    ERRMSG = "Master job does not exist for this job"
    GOSUB 91000
    GOTO 100
  END
  IF JOB.MAST.REC(40) # "" THEN
    ERRMSG = "Master job has been invoiced you cannot change customer"
    GOSUB 91000
    GOTO 100
  END ELSE
    RETURN
  END
  RETURN
*
3000 * CHECK SUB JOBS
  CNT = DCOUNT(JOB.MAST.REC(26),VM)
  SUB.JOB = JOB.MAST.REC(26)
  FOR Y = 1 TO CNT
    JOB.SUB.NO = CONO:SUB.JOB<1,Y>
    MATREAD JOB.SUB.REC FROM JOB, JOB.SUB.NO ELSE
      ERRMSG= "Cannot find sub job in job file"
      GOSUB 91000
      GOTO 100
    END
    IF JOB.SUB.REC(40) # "" THEN
      ERRMSG = "Sub jobs have been invoiced. Change customer at your own risk"
      GOSUB 91000
    END ELSE
      RETURN
    END
  NEXT Y
  RETURN
*
* CAF 21174
*
20000 *
  BEGIN CASE
    CASE JOB.STATUS<1,1>=""
      SCV.REC(ECD.NUM)<1>="BOOKED"
    CASE JOB.STATUS<1,1>="9"
      SCV.REC(ECD.NUM)<1>="CANCELLED"
    CASE JOB.STATUS<1,1>="7"
      SCV.REC(ECD.NUM)<1>="READY TO PURGE"
    CASE JOB.STATUS<1,1>="8"
      SCV.REC(ECD.NUM)<1>="WAS PURGED"
    CASE JOB.TRACK.DATE<1,10> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          SCV.REC(ECD.NUM)<1> = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "3"
          SCV.REC(ECD.NUM)<1> = "INVOICED"
        CASE JOB.STATUS<1,1> = "5" 
          SCV.REC(ECD.NUM)<1>="REOPENED"
        CASE 1
          SCV.REC(ECD.NUM)<1> = "COMPLETED"
      END CASE
    CASE JOB.TRACK.DATE<1,9> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          SCV.REC(ECD.NUM)<1> = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          SCV.REC(ECD.NUM)<1>="REOPENED"
        CASE 1
          SCV.REC(ECD.NUM)<1> = "INVOICED"
      END CASE
    CASE JOB.TRACK.DATE<1,8> # ""
      SCV.REC(ECD.NUM)<1>="COSTED"
    CASE JOB.TRACK.DATE<1,7> # ""
      SCV.REC(ECD.NUM)<1>="RDY-TO-BILL"
    CASE JOB.TRACK.DATE<1,6> # ""
      SCV.REC(ECD.NUM)<1>="DELIVERED"
    CASE JOB.TRACK.DATE<1,5> # ""
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
    CASE JOB.TRACK.DATE<1,3> # ""
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
    CASE JOB.STATUS<1,1>="1"
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
    CASE JOB.STATUS<1,1>="3"
      SCV.REC(ECD.NUM)<1>="INVOICED"
    CASE 1
      SCV.REC(ECD.NUM)<1>="UNKNOWN"
  END CASE
  RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
  GOTO 99999
*
99990 *
  ECD.ACTION = 99 ; CALL SCRN.EDIT
99999 PRINT @(-1)
  END

