*COPY>CPYLIB>COM1
**********************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - MISC.MAINT
* BY          - JIHAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE        - 02/11/84
* DESCRIPTION -  
* COMMENT     - REVISED TO REFLECT JOB.STATUS '5' - "REOPENED"
*                TASK #12907 (RRG)
*C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR HAS THE SAME DEPT AS THOSE
*                     STORED IN THE DIV REC FROM THE JOB.DIV FIELD
*T23278 markt 09/30/98 * Check for divisional security
*T24987 gat 03/27/2000 * FIX XREF FOR OPERATION
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
**********************************************************
*COPY>CPYLIB>EDIT.COM  
*COPY>CPYLIB>EDIT.COM.DRIVER  
*COPY>PMC.CPYLIB>COMPANY  
*COPY>PMC.CPYLIB>DIVISION  
*COPY>PMC.CPYLIB>DEPARTMENT  
*COPY>PMC.CPYLIB>COST.CNTR  
*COPY>JCS.CPYLIB>OPERATION  
*COPY>JCS.CPYLIB>JOB  
*COPY>PMC.CPYLIB>CUSTOMER  
*COPY>JCS.CPYLIB>DAILY.MISC  
*COPY>CPYLIB>GEN.XREF  
*COPY>CPYLIB>SYSCOM  
*COPY>CPYLIB>FILE.VARS  
*COPY>CPYLIB>CHAR  
*COPY>JCS.CPYLIB>JOB.STAT.CODE  
*  CALL SYSCOM(MAT SYSCOM.REC)
  MAT SYSCOM.REC = ""
  SYS.TYPE = 2
  MAT FILE.VARS = ''
  OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FILE IS MISSING'; GOTO 93000
  OPEN '','DAILY.MISC' TO DAILY.MISC ELSE ERRMSG = 'DAILY.MISC FILE IS MISSING'; GOTO 93000
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
  OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG = 'SPOILAGE.CODES FILE IS MISSING'; GOTO 93000
**** GET COMPANY  
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
* INITIALIZATION  
  MAT EDIT.COM = ''
  MAT EDIT.COM.DRIVER = ''
  MAT GEN.XREF.REC = ''
  DASHES = STR('-',80)
  ERRMSG = ''
  UNKNOWN = '????????????????????'
  BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1
  GXR.CO = CONO
  GXR.HEADING<1,2> = 'DESCRIPTION'
  GXR.ATT<1,1> = 0
  GXR.ATT<1,2> = 2
  GXR.LEN<1,1> = 5
  GXR.LEN<1,2> = 30
* MAIN PROCESSING  
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'MISC.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
100 MAT JOB.REC = ''
  RELEASE   ;* T26126
  MAT DMS.REC = ''
  MAT DIV.REC = ''
  MAT DEPT.REC = ''
  MAT CCTR.REC = ''
  MAT OPER.REC = ''
  MAT JSI.REC = ''
  MAT SCV.REC = ""
  OLD.START.LINE = 0; LN = 1; LINES = 0
  ECD.ACTION=6;CALL SCRN.EDIT
  ECD.NUM = 5
  ECD.VALDAT.CODE = 5; ECD.VALDAT.FILE = DAILY.MISC; ECD.PREFIX.ID = CONO   ;* T26126
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      GOTO 99999
    CASE ECD.RET.VALUE = 'N'
      DMS.SEQ.NO = ECD.RET.VALUE
200   ECD.NUM = 6
      ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = JOB; ECD.PREFIX.ID = CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.VALDAT.ITEM = '' THEN GOTO 100
      FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
*T23278 v
      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 200
      END
*T23278 ^
      BEGIN CASE
        CASE JOB.STATUS<1,1> = 9
          ERRMSG="THIS JOB IS CANCELED";GOSUB 91000;GOTO 200
        CASE JOB.STATUS<1,1> = 7
          ERRMSG="THIS JOB IS READY TO PURGE";GOSUB 91000;GOTO 200
        CASE JOB.STATUS<1,1> = 8
          ERRMSG="THIS JOB IS PURGED";GOSUB 91000;GOTO 200
      END CASE
      GOSUB 9000
      IF VALUE = "END" THEN GOTO 200
      IF CO.JOB.CUST.FLG = 'C' THEN
        MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
          CUST.NAME = "??????????????????"
        END
        JOB.DESC<1,1> = CUST.NAME
      END
      DMS.JOB = ECD.RET.VALUE
      ECD.NUM = 7; SCV.REC(ECD.NUM)<1> = JOB.DESC<1,1>; ECD.ACTION=5;CALL SCRN.EDIT
      MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE DIV.DESC = UNKNOWN
      DMS.DIV = JOB.DIV
      ECD.NUM = 8; SCV.REC(ECD.NUM)<1> = DMS.DIV; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = DIV.DESC; ECD.ACTION=5;CALL SCRN.EDIT
      IF JOB.DEPT # "" THEN
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:JOB.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
        ECD.NUM = 10; SCV.REC(ECD.NUM)<1> = JOB.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM = 11; SCV.REC(ECD.NUM)<1> = DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
      END
      FOR REQUEST = 1 TO 8
        ON REQUEST GOSUB 1000,2000,3000,4000,5000,6000,7000,8000
        IF ECD.RET.VALUE = 'END' THEN GOTO 100
      NEXT REQUEST
    CASE ECD.VALDAT.ITEM # ''
      FOR I = 1 TO DMS.REC.SIZE; DMS.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
*T23278 v
      DIV.CODE = DMS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
        GOSUB 91000; GOTO 100
      END
*T23278 ^
      DMS.SEQ.NO = ECD.RET.VALUE
      MATREAD JOB.REC FROM JOB, CONO:DMS.JOB ELSE JOB.DESC = UNKNOWN
      IF CO.JOB.CUST.FLG = 'C' THEN
        MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
          CUST.NAME = "????????????????????"
        END
        JOB.DESC<1,1> = CUST.NAME
      END
      MATREAD DIV.REC FROM DIVISION, CONO:DMS.DIV ELSE DIV.DESC = UNKNOWN
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:DMS.DEPT ELSE DEPT.DESC = UNKNOWN
      MATREAD CCTR.REC FROM COST.CNTR, CONO:DMS.CCTR ELSE CCTR.DESC = UNKNOWN
      IF CCTR.TYPE='F' THEN CCTR.DESC="COST CENTER IS FROZEN"
      MATREAD OPER.REC FROM OPERATION, CONO:DMS.OPER ELSE OPER.DESC = UNKNOWN
      IF DMS.SPOIL.CODE # "" THEN
        READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:DMS.SPOIL.CODE ELSE SPOIL.CODE.DESC = "SPOIL CODE UNKNOWN"
      END ELSE
        SPOIL.CODE.DESC = ""
      END
      SCV.REC(6)<1> = DMS.JOB
      SCV.REC(7)<1> = JOB.DESC<1,1>
      SCV.REC(8)<1> = DMS.DIV
      SCV.REC(9)<1> = DIV.DESC
      SCV.REC(10)<1> = DMS.DEPT
      SCV.REC(11)<1> = DEPT.DESC
      SCV.REC(12)<1> = DMS.CCTR
      SCV.REC(13)<1> = CCTR.DESC
      SCV.REC(14)<1> = DMS.OPER
      SCV.REC(15)<1> = OPER.DESC
      SCV.REC(16)<1> = DMS.TYPE
      SCV.REC(32)<1> = DMS.SPOIL.CODE
      SCV.REC(33)<1> = SPOIL.CODE.DESC
      SCV.REC(18)<1> = DMS.DATE
      SCV.REC(19)<1> = DMS.COST
      SCV.REC(20)<1> = DMS.MARKUP
      SCV.REC(21)<1> = DMS.REASON
      BEGIN CASE
        CASE DMS.TYPE = 'N'
          SCV.REC(17)<1> = "NON CHARGEABLE"
        CASE DMS.TYPE = 'S'
          SCV.REC(17)<1> = "SPOILAGE"
        CASE DMS.TYPE = 'C'
          SCV.REC(17)<1> = "CHANGE ORDER"
        CASE 1
          SCV.REC(17)<1> = "REGULAR"
      END CASE
      LINES = COUNT(DMS.DESC,VM) + (DMS.DESC # "")
      GOSUB 11000
      IF DMS.INIT = "" THEN
        GOSUB 9000
        IF VALUE = "END" THEN GOTO 100
      END 
    CASE 1
      ERRMSG = '* * INVALID SEQUENCE # * *'
      GOSUB 91000
      GOTO 100
  END CASE
  MORE = 1
  LOOP
    ECD.NUM = 28
    SCV.REC(ECD.NUM)<1> = ''
    ECD.ACTION=4;CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = 'END' OR REQUEST = 'E'
        MORE = 0
      CASE NUM(REQUEST)
        ON REQUEST GOSUB 1000,2000,3000,4000,5000,6000,7000
      CASE REQUEST = 'F'
        IF DMS.SEQ.NO = "N" THEN
          READU MISC.ENT.SEQ FROM CONTROL , CONO:"DAILY.MISC" ELSE MISC.ENT.SEQ = 10001
          LOOP
            READ CK.FLG FROM DAILY.MISC , CONO:MISC.ENT.SEQ ELSE CK.FLG = ""
          WHILE CK.FLG # "" DO
            MISC.ENT.SEQ = MISC.ENT.SEQ + 1
          REPEAT
          DMS.SEQ.NO = MISC.ENT.SEQ
          MISC.ENT.SEQ = MISC.ENT.SEQ + 1
          WRITE MISC.ENT.SEQ ON CONTROL , CONO:"DAILY.MISC"
          SCV.REC(5)<1> = DMS.SEQ.NO
          ECD.NUM = 5 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
          ERRMSG = "Please Note Down New Sequence Number" ; GOSUB 91000
        END
        DMS.PRT.DATE = ""
        MATWRITE DMS.REC ON DAILY.MISC, CONO:DMS.SEQ.NO
        MORE = 0
      CASE REQUEST = 'DE'
        DELETE DAILY.MISC, CONO:DMS.SEQ.NO
        MORE = 0
      CASE REQUEST = 'D'
        GOSUB 8000
        MORE = 1
    END CASE
  WHILE MORE DO REPEAT
  GOTO 100
1000 ECD.NUM = 12  
  OLD.CCTR=DMS.CCTR;OLD.CCTR.DESC=CCTR.DESC
  OLD.DEPT=DMS.DEPT;OLD.DEPT.DESC=DEPT.DESC
  ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = COST.CNTR; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
    CASE ECD.VALDAT.ITEM # ''
      FOR K = 1 TO CCTR.REC.SIZE; CCTR.REC(K) = ECD.VALDAT.ITEM<K>; NEXT K
      IF CCTR.TYPE = 'F' THEN
        ERRMSG = "THIS COST CENTER IS FROZEN"; GOSUB 91000; GOTO 1000
      END
*C25313 v
      LOCATE CCTR.DEPT IN DIV.DEPT<1>,1 SETTING POS ELSE
        ERRMSG = "THIS COST CENTER NOT ALLOWED IN THIS DIVISION"
        GOSUB 91000
        GOTO 1000
      END
*C25313 ^
      IF JOB.DEPT # CCTR.DEPT[1,LEN(JOB.DEPT)] THEN
        ERRMSG = "THIS JOB BELONGS TO DIFFERENT DEPARTMENT"; GOSUB 91000; GOTO 1000
      END
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
        ERRMSG = "COST CNTR DEPARTMENT (":CCTR.DEPT:") IS MISSING"
        GOSUB 91000; GOTO 1000
      END
      DMS.CCTR = ECD.RET.VALUE
      DMS.DEPT = CCTR.DEPT
      ECD.NUM = 10; SCV.REC(ECD.NUM)<1> = DMS.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM = 11; SCV.REC(ECD.NUM)<1> = DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM = 13; SCV.REC(ECD.NUM)<1> = CCTR.DESC; ECD.ACTION=5;CALL SCRN.EDIT
      ECD.RET.VALUE=""
      IF OLD.CCTR # "" AND OLD.CCTR # DMS.CCTR THEN GOSUB 2000
      IF ECD.RET.VALUE="END" THEN
        DMS.CCTR=OLD.CCTR
        DMS.DEPT=OLD.DEPT
        ECD.NUM=10;SCV.REC(ECD.NUM)<1>=DMS.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=11;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=12;SCV.REC(ECD.NUM)<1>=DMS.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=13;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
        GOTO 1000
      END
    CASE ECD.RET.VALUE = '???'
      IF JOB.DEPT # "" THEN
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:JOB.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
        DMS.DEPT = JOB.DEPT
      END ELSE
        GXR.XREF = DIVISION
        GXR.FILE = DEPARTMENT
        GXR.TOP.LINE = 'DEPARTMENT XREF SEARCH'
        GXR.HEADING<1,1> = 'DEPT'
        GXR.ATT<1,2> = 2
        GXR.LOC = 2
        GXR.ID = ''
        GXR.SRCH.ID = DMS.DIV
        CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
        IF GXR.ID = '' THEN ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 11000; GOTO 1000
        MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
          ERRMSG = 'DEPARTMENT ':GXR.ID:' IS MISSING'
          ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 91000; GOSUB 11000; GOTO 1000
        END
        DMS.DEPT = GXR.ID
      END
      SCV.REC(10)<1> = DMS.DEPT
      SCV.REC(11)<1> = DEPT.DESC
      GXR.XREF = DEPARTMENT
      GXR.FILE = COST.CNTR
      GXR.TOP.LINE = 'COST CENTER XREF SEARCH'
      GXR.HEADING<1,1> = 'CCTR'
      GXR.ATT<1,2> = 1
      GXR.LOC = 5
      GXR.ID = ''
      GXR.SRCH.ID = DMS.DEPT
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID = '' THEN GOSUB 11000; GOTO 1000
      MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
        ERRMSG = 'COST.CNTR ':GXR.ID:' IS MISSING'
        GOSUB 91000; GOSUB 11000; GOTO 1000
      END
      IF CCTR.TYPE='F' THEN
        ERRMSG='COST CENTER ':GXR.ID:' IS FROZEN'
        GOSUB 91000;GOSUB 11000;GOTO 1000
      END
      IF JOB.DEPT # CCTR.DEPT[1,LEN(JOB.DEPT)] THEN
        ERRMSG = "THIS JOB BELONGS TO DIFFERENT DEPARTMENT"
        GOSUB 91000;GOSUB 11000;GOTO 1000 
      END
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
        ERRMSG = 'INCORRECT DEPARTMENT FOR COST CENTER ':GXR.ID
        GOSUB 91000;GOSUB 11000;GOTO 1000 
      END
      DMS.CCTR = GXR.ID
      DMS.DEPT = CCTR.DEPT
      SCV.REC(10)<1> = DMS.DEPT
      SCV.REC(11)<1> = DEPT.DESC
      SCV.REC(12)<1> = DMS.CCTR
      SCV.REC(13)<1> = CCTR.DESC
      GOSUB 11000
      ECD.RET.VALUE=""
      IF OLD.CCTR # "" AND OLD.CCTR # DMS.CCTR THEN GOSUB 2000
      IF ECD.RET.VALUE="END" THEN
        DMS.CCTR=OLD.CCTR
        DMS.DEPT=OLD.DEPT
        ECD.NUM=10;SCV.REC(ECD.NUM)<1>=DMS.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=11;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=12;SCV.REC(ECD.NUM)<1>=DMS.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
        ECD.NUM=13;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
        GOTO 1000
      END
    CASE 1
      GOTO 1000
  END CASE
  RETURN  
2000 ECD.NUM = 14  
  OLD.OPER=DMS.OPER;OLD.OPER.DESC=OPER.DESC
*T24987  ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = OPERATION; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      DMS.OPER=OLD.OPER
      SCV.REC(14)<1>=OLD.OPER;ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
      SCV.REC(15)<1>=OLD.OPER.DESC;ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
*T24987      CASE ECD.VALDAT.ITEM # ''
    CASE ECD.RET.VALUE # "" AND ECD.RET.VALUE # "???"
      MATREAD OPER.REC FROM OPERATION, CONO:ECD.RET.VALUE ELSE
        ERRMSG = 'OPERATION ':ECD.RET.VALUE:' IS MISSING'
        GOSUB 91000; GOTO 2000
      END
      LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE
        ERRMSG = 'OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR # ':DMS.CCTR
        GOSUB 91000; GOTO 2000
      END
*T24987          FOR K = 1 TO OPER.REC.SIZE; OPER.REC(K) = ECD.VALDAT.ITEM<K>; NEXT K
      DMS.OPER = ECD.RET.VALUE
      ECD.NUM = 15; SCV.REC(ECD.NUM)<1> = OPER.DESC; ECD.ACTION=5;CALL SCRN.EDIT
    CASE ECD.RET.VALUE = '???'
      GXR.XREF = COST.CNTR
      GXR.FILE = OPERATION
      GXR.TOP.LINE = 'OPERATION XREF SEARCH'
      GXR.HEADING<1,1> = 'OPER'
      GXR.ATT<1,2> = 1
      GXR.LOC = 4
      GXR.ID = ''
      GXR.SRCH.ID = DMS.CCTR
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID = '' THEN GOSUB 11000; GOTO 2000
      MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE
        ERRMSG = 'OPERATION ':GXR.ID:' IS MISSING'
        GOSUB 91000; GOSUB 11000; GOTO 2000
      END
      DMS.OPER = GXR.ID
      SCV.REC(14)<1> = DMS.OPER
      SCV.REC(15)<1> = OPER.DESC
      GOSUB 11000
    CASE 1
      GOTO 2000
  END CASE
  RETURN  
3000 ECD.NUM = 16  
  BEGIN CASE
    CASE JOB.TYPE = 'N'
      SCV.REC(16)<1> = JOB.TYPE ; ECD.NUM = 16 ;ECD.ACTION = 5
      CALL SCRN.EDIT
      DMS.TYPE = JOB.TYPE
    CASE JOB.TYPE = 'S'
      SCV.REC(16)<1> = JOB.TYPE ; ECD.NUM = 16 ;ECD.ACTION = 5
      CALL SCRN.EDIT
      DMS.TYPE = JOB.TYPE
    CASE JOB.TYPE = 'C'
      SCV.REC(16)<1> = JOB.TYPE ; ECD.NUM = 16 ;ECD.ACTION = 5
      CALL SCRN.EDIT
      DMS.TYPE = JOB.TYPE
    CASE 1
      ECD.ACTION = 4 ; CALL SCRN.EDIT
      IF ECD.RET.VALUE # 'END' THEN DMS.TYPE = ECD.RET.VALUE
  END CASE
  BEGIN CASE
    CASE DMS.TYPE = 'N'
      SCV.REC(17)<ECD.SCRN.NO> = "NON CHARGEABLE"
    CASE DMS.TYPE = 'S'
      SCV.REC(17)<ECD.SCRN.NO> = "SPOILAGE"
    CASE DMS.TYPE = 'C'
      SCV.REC(17)<ECD.SCRN.NO> = "CHANGE ORDER"
    CASE 1
      SCV.REC(17)<ECD.SCRN.NO> = "REGULAR"
  END CASE
  ECD.NUM = 17;ECD.ACTION = 5;CALL SCRN.EDIT
3001 IF CO.SPOIL.FLG = 'Y' AND DMS.TYPE = 'S' THEN  
    ECD.NUM = 32;ECD.ACTION = 4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = 'END' THEN GOTO 3000
    READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "SPOILAGE CODE (":ECD.RET.VALUE:") NOT ON FILE"
      GOSUB 91000 ; GOTO 3001
    END
    DMS.SPOIL.CODE = ECD.RET.VALUE
  END ELSE
    DMS.SPOIL.CODE = ''
    SPOIL.CODE.DESC = ''
    SCV.REC(32)<ECD.SCRN.NO> = ''
    ECD.NUM = 32;ECD.ACTION = 5;CALL SCRN.EDIT
  END
  SCV.REC(33)<ECD.SCRN.NO> = SPOIL.CODE.DESC
  ECD.NUM = 33;ECD.ACTION = 5;CALL SCRN.EDIT
  RETURN
4000 ECD.NUM = 18  
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN DMS.DATE = ECD.RET.VALUE
  RETURN
5000 ECD.NUM = 19  
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN DMS.COST = ECD.RET.VALUE
  RETURN
6000 ECD.NUM = 20  
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN DMS.MARKUP = ECD.RET.VALUE
  RETURN
7000 ECD.NUM = 21  
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # 'END' THEN DMS.REASON = ECD.RET.VALUE
  RETURN
8000*
  IF DMS.DESC = '' THEN
    LINES = 0
    ACTION = 'A'
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 8100
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END
  GOSUB 8900
  ANCORE = 1
  LOOP
    ECD.NUM = 30
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
        ANCORE = 0
      CASE ACTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 8100
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 8900
      CASE ACTION = 'C'
        GOSUB 8800
        IF LN.NO THEN
          LN = LN.NO
          GOSUB 8100
        END
      CASE ACTION = 'D'
        GOSUB 8800
        IF LN.NO THEN
          LN = LN.NO
          DMS.DESC = DELETE(DMS.DESC,1,LN,0)
          LINES = COUNT(DMS.DESC,VM) + (DMS.DESC # "")
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 8900
      CASE ACTION = 'S'
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 8900
      * T25978 v
      CASE ACTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 8900
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 8900
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 8900
      * T25978 ^
    END CASE
  WHILE ANCORE DO REPEAT
  GOTO 8999
8100 GOSUB 8900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 1 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
8200 X = 4; Y = SLN; TYP = 1; MAXL = 65; O.R = "O"
  IF DMS.DESC<1,LN> # '' THEN
    DEFAULT = DMS.DESC<1,LN>
  END
  CALL EDIT.SUB
  IF VALUE = "" OR VALUE = "END" THEN
    IF ACTION = 'A' THEN
      DMS.DESC = DELETE(DMS.DESC,1,LN,0)
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 8299
  END
  DMS.DESC<1,LN> = VALUE
  LINES = COUNT(DMS.DESC,VM) + (DMS.DESC # '')
8299 RETURN
8800 GOSUB 8900
  ECD.NUM = 31; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
8900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 8990
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:DMS.DESC<1,N> "L#65"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
8990 RETURN
8999 RETURN
9000*
  VALUE = ""
  IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN 
9010 X=0;Y=23;MAXL=3;TYP=11
    PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : " 
    CALL EDIT.SUB 
    P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF VALUE = "END" THEN GOTO 9999 
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE 
      MAT JSI.REC ="" 
      ERRMSG = "INVALID INITIALS. TRY AGAIN" 
      GOSUB 91000;GOTO 9010 
    END 
    DMS.INIT = VALUE 
  END 
9999*    
  RETURN
11000 ECD.ACTION = 3; CALL SCRN.EDIT
  OLD.START.LINE = 0; GOSUB 8900
  RETURN
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)  
  RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)  
  RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)  
99999 * PRINT * @(-1) *  * 
END
