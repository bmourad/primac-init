   SUBROUTINE INVOICE.MAINT.SUB.F4 (CONO, JOB.NO, IVC.NO, MENU, PROG.FLAG)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE   - JCSBP
* PROGRAM  - INVOICE.MAINT.SUB.F4
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE     - 11/17/86
* DESCRIPTION
* This program is used to create and maintain job related invoices
* for PRIMAC.
* TASK 17927 GAT 10/31/94 ADD INVOICE ALLOC MAINT
* CSF 22071 - 12/14/94 MJB
* T20298 - JR 3/28/96 RECOGNIZE CHARGE CODES WITH CATEGORY "DSC" AS
* DISCOUNT CHARGE CODES.
* TASK 20532 JR EXPAND INVOICE AMOUNT TO 8.2
*
* Called by INVOICE.MAINT.F4
* Called by JOB.INVOICE.SUMMARY.F4
* Screen is CREDIT.MEMO.SUB.F4 or DEBIT.MEMO.SUB.F4
* or INVOICE.MAINT.SUB.F4 depending on MENU option selected.
*T21219 doug 11/15/1996 * Store customer po number on invoice file
*T22137 renee 08/18/1997 * Job description not transferring over to the
*                          invoice screen correctly. Need to change
*                          length from 40 to 36.
*T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match problems.
*T22168 bilal 11/19/1997 * Allow 4 Decimal Places in Unit Price.
*T22747 lanny 04/14/1998 * Hidden lines lockup problem.
*T22759 lANNY 04/16/1998 * Fix prob caused by Hidden Line mod.
*T22672 rik 04/17/1998 * GUI ERROR BOX DISPLAYING AFTER FILE.
*T23525 markt 12/16/1998 * Modify to display correct default if tax
*                          jurisidiction changes requiring a recalc of
*                          tax amount when TAX invoice code is used.
*T23546 lanny 12/22/1998 * Inchange mode if INV CODE ch'gd does not chg
*                          DESC.
*T23278 markt 02/03/1999 * Add check for divisional security.
*T24705 cm 01/20/2000 * If a line has an amount and also revenue
*                       allocation, then if the line code is changed and
*                       the amount is zero'd the allocation is not
*                       always zeroing out also.
*T24939 lanny 03/15/2000 * If Divisional Security is not in effect,
*                          sub-jobs of different divisions should be
*                          allowed on master job invoice. 
*T25089 edvard 04/18/2000 * Comment lines should be disregarded when
*                           checking hidden lines.  If the first line
*                           is a comment line, it allows the next line
*                           to be a hidden line.  In this case there is
*                           nothing to roll the amount from the hidden
*                           line to.  There are some other rules.  Take
*                           a look at the task.
*T25159 alex 05/11/2000 * Add PMC.CPYLIB>COUNTRY.CODE, since the
*                         COUNTRY.CODE file can hold multiple attributes
*                         of data.
*T25410 alex 08/29/2000 * Fix display of invoice line items when
*                         entering at line #10.
*T25423 cm 09/12/2000 * When returning from allocation screen using
*                       <ESC> the invoice line is removed. <ESC> should
*                       act just like (E)nd.
*T25764 renee 06/10/1998 * Add "Terms code" field that defaults from
*                          customer record but allows edit. Add the
*                          number of days stored in the terms record to
*                          the invoice date to come up with the invoice
*                          due date.
*T25946 cmykleb 01/22/2002 * Add X-ref inquires during invoicing.
*T26556 adelgado 05/20/2002 * Fix to redisplay code after doing cross
*                             reference.
*T26805 epitka 08/15/2002 * add email capability NE
*T27232 adelgado 01/20/2003 * Allow to display invoice detail at the
*                             Master or Sub-Job level.
*T27851 thompson 12/18/2003 * Fix scrolling and display problem with
*                             Xref files.
*T27866 cmykleb 12/31/2003 * If the (R)evenue Dist. option is used
*                            read the INC.REC record for the line chosen
*                            else an error message may occur.
*T27865 cmykleb 02/12/2004 * If an invoice has a hidden line and the user
*                            tries to delete any line above the hidden
*                            line, an errmsg comes up saying to delete
*                            the hidden line first.  This should only
*                            occur on the line right above the hidden
*                            line.
*T28085 thompson 04/26/2004 * Expand display for COA.LEVEL 3 for Inovice
*                             Allocation
*T28237 lross 08/25/2004 * Error in DESC when using "JOB" or "JOB1".
*T28274 thompson 09/24/2004 * Correct problem with change on line wipes
*                             out manually entered description.
*T28511 thompson 03/31/2005 * Correction of problem when "END" from line
*                             and wipes out following lines on the
*                             invoice.
*T28610 thompson 07/01/2005 * Do not allow a zero line item to go to
*                             distribution.
*T28664 lross 09/08/2005 * If TERMS NULL DO NOT DISPALY ??? FOR TERMS
*                          DESC.
*T28826 wvaughan 05/10/2006 * Allow for the Credit Memo to prompt for
*                             final billing
*T29369 bmourad 06/14/2010 * MOVE task 29367 to rev14.
*********************************************************************
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>INVOICE
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>TERMS   ; * T25764
*COPY>PMC.CPYLIB>VOID.INVOICES
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*COPY>JES.CPYLIB>ESTIMATE.JOB
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COUNTRY.CODE       ;*T25159
*
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
* T27232 v
   ADD.SUBS = PROG.FLAG[2,1]
   PROG.FLAG = PROG.FLAG[1,1]
   TOGGLE.FLAG = 0
   IF PROG.FLAG = 'I' AND ADD.SUBS = 0 THEN
      REF.CNT = DCOUNT(IVC.CHG.CODE, VM)
      FOR XX = 1 TO REF.CNT
         IF IVC.CHG.JOB<1,XX> # '' AND IVC.CHG.JOB<1,XX> # JOB.NO THEN TOGGLE.FLAG = 1
      NEXT XX
   END
* T27232 ^
   ;*T25946 v
   OPEN 'XREF.DATA' TO XREF.DATA ELSE
      ERRMSG = 'XREF.DATA FILE IS MISSING'
      GOTO 90000
   END
   ;*T25946 ^
   ECD.SCRN.NO=2
   FOR SCV = 1 TO SCV.REC.SIZE
      SCV.REC(SCV)<ECD.SCRN.NO>=""
   NEXT SCV
   ECD.ACTION=2;CALL SCRN.EDIT
   REF.CNT=0
   REF.NO=""
   CURR.REF.NO=""
   BAL.FLG = ""
   BAL.PTR = 0
   LINE.COUNT=7
   INVOICE.TOTAL=0
   N.IVC.NO=""
   MAT GEN.XREF.REC = ""
   ERRMSG=""
   MODE=""
   TMP.TAX.RATE=""
   TMP.TAX.CALC=""
   CURR.JOB.NO=JOB.NO
*T28237   DESC.LEN=39               ;**********  SCREEN DEPENDENT  **********
   DESC.LEN=35
   MULTI.JOB="Y"             ;**********  TEMPORARY  **********
   SAVE.JOB.SUBS = JOB.SUBS
   IF PROG.FLAG # "I" THEN GOSUB 21000
   MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
      GOTO 90000
   END
   MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
      ERRMSG = "CANNOT LOCATE JOB FILE"
      GOTO 90000
   END
   SAVE.JOB.DIV = JOB.DIV
   READ DIV.SEC.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE     ;*T24939 v
      DIV.SEC.REC='N'
      DIV.SEC.REC<2>='N'
   END
*
*---- MAIN PROCESSING
*
100*
   SCV.REC(27)<ECD.SCRN.NO>=DATE()
   ECD.NUM=27;ECD.ACTION=5;CALL SCRN.EDIT
   GOSUB 9000
   ECD.ACTION=3;CALL SCRN.EDIT
   REF.NO=1
   CURR.REF.NO=1
   IF REF.CNT > 0 THEN GOSUB 6200
   IF IVC.NO='N' AND  IVC.PRT.FLG<1,2>='' THEN
      ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE#'END' THEN
         IVC.PRT.FLG<1,1>='Y' ; IVC.PRT.FLG<1,2>=ECD.RET.VALUE
      END
   END
*
*---- GET OPERATOR REQUEST
*
500*
   GOSUB 5000
   ACTION=ECD.RET.VALUE
502*
   BEGIN CASE
      CASE NUM(ACTION) AND ACTION >= 1 AND ACTION <= 7
         N=ACTION
         ON N GOSUB 1100,1200,1300,1700,1400,1500,1600
* T27232 v
      CASE ACTION = 'T'
         IF ADD.SUBS = 1 THEN ADD.SUBS = 0 ELSE ADD.SUBS = 1
         SCV.REC(13)<ECD.SCRN.NO> = ''
         SCV.REC(14)<ECD.SCRN.NO> = ''
         SCV.REC(15)<ECD.SCRN.NO> = ''
         SCV.REC(17)<ECD.SCRN.NO> = ''
         SCV.REC(30)<ECD.SCRN.NO> = ''
         SCV.REC(31)<ECD.SCRN.NO> = ''
         GOSUB SET.LINE.ITEMS
         GOSUB 6200
         REF.NO = 1
         GOSUB 10000
* T27232 ^
      CASE ACTION="A"
         MODE="A"
         DONE=0
* T29369         FOR REF.NO=REF.CNT + 1 TO 99 UNTIL DONE
         FOR REF.NO=REF.CNT + 1 TO 999 UNTIL DONE ;* T29369
            IF REF.CNT > 0 THEN GOSUB 10000
            GOSUB 6000
            IF ECD.RET.VALUE="END" THEN
               REF.CNT=REF.NO - 1
               AREF=REF.NO
               AREF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
               FOR REF.NO=AREF.CNT TO AREF STEP -1
                  GOSUB 600
               NEXT REF.NO
               DONE=1
            END ELSE
               REF.CNT=REF.NO
            END
            GOSUB 6200
         NEXT REF.NO
         REF.NO=REF.CNT
         CURR.REF.NO=""
         GOSUB 10000
      CASE ACTION="C" AND REF.CNT > 0
         MODE="C"
         GOSUB 5100
         IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
            REF.NO=ECD.RET.VALUE
            GOSUB 6000
            GOSUB 6200
         END
         GOSUB 10000
      CASE ACTION="D" AND REF.CNT > 0
         MODE="D"
         GOSUB 5100
         IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
            REF.NO=ECD.RET.VALUE
*T25089 v
            FOUND = 0
            IF IVC.HIDDEN<1,REF.NO> ="Y" OR IVC.CHG.CODE<1,REF.NO>="SUB" OR IVC.CHG.CODE<1,REF.NO> ="SUBT" OR   IVC.CHG.CODE<1,REF.NO>="TOT" OR  IVC.CHG.CAT<1,REF.NO> = "CMT" OR IVC.CHG.CAT<1,REF.NO> = "TAX" THEN
               NULL
            END ELSE
*T27865 v
*              LINE.CNT = DCOUNT(IVC.CHG.CODE,VM)
*              FOR LINE.NBR = REF.NO TO LINE.CNT UNTIL FOUND
*                 IF IVC.CHG.CODE<1,LINE.NBR>="SUB" OR IVC.CHG.CODE<1,LINE.NBR> ="SUBT" OR   IVC.CHG.CODE<1,LINE.NBR>="TOT" THEN
*                    CONTINUE
*                 END ELSE
*                    IF IVC.HIDDEN<1,LINE.NBR> = "Y"  THEN
*                       FOUND = 1
*                       ERRMSG = "Please delete associated hidden line ":LINE.NBR:" first."
*                       GOSUB 90000
*                    END
*                 END
*              NEXT LINE.NBR
               *** CHECK TO SEE IF THE NEXT LINE IS A HIDDEN LINE ***
               IF IVC.HIDDEN<1,REF.NO+1> = "Y" THEN
                  IF REF.NO = 1 THEN
                     FOUND = 1
                     ERRMSG = "Please delete associated hidden line ":REF.NO+1:" first."
                     GOSUB 90000
                  END
                  IF IVC.CHG.CODE<1,REF.NO-1> = 'TOT' OR IVC.CHG.CODE<1,REF.NO-1> = 'SUB' OR IVC.CHG.CODE<1,REF.NO-1> = 'SUBT' OR IVC.CHG.CAT<1,REF.NO-1> = 'CMT' OR IVC.CHG.CAT<1,REF.NO-1> = 'TAX' OR IVC.CHG.CAT<1,REF.NO-1> = 'SHP' THEN
                     FOUND = 1
                     ERRMSG = "Please delete associated hidden line ":REF.NO+1:" first."
                     GOSUB 90000
                  END
               END
*T27865 ^
            END
            IF NOT(FOUND) THEN
*T25089 ^
               GOSUB 600
               GOSUB 6200
               REF.CNT=REF.CNT - 1
               IF REF.NO > 1 THEN REF.NO=REF.NO - 1
               CURR.REF.NO=""
               GOSUB 10000
            END ; *T25089
         END
      CASE ACTION="I" AND REF.CNT > 0
         MODE="I"
         GOSUB 5100
         IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
            REF.NO=ECD.RET.VALUE
            IVC.CHG.JOB=INSERT(IVC.CHG.JOB,1,REF.NO,0,"")
            IVC.CHG.CODE=INSERT(IVC.CHG.CODE,1,REF.NO,0,"")
            IVC.CHG.CAT=INSERT(IVC.CHG.CAT,1,REF.NO,0,"")
            IVC.TAX.JURS=INSERT(IVC.TAX.JURS,1,REF.NO,0,"")
            IVC.QUANTITY=INSERT(IVC.QUANTITY,1,REF.NO,0,"")
            IVC.UM=INSERT(IVC.UM,1,REF.NO,0,"")
            IVC.DESC=INSERT(IVC.DESC,1,REF.NO,0,"")
            IVC.UNIT.PRICE=INSERT(IVC.UNIT.PRICE,1,REF.NO,0,"")
            IVC.AMOUNT=INSERT(IVC.AMOUNT,1,REF.NO,0,"")
            IVC.HIDDEN=INSERT(IVC.HIDDEN,1,REF.NO,0,"")
            IVC.TAXABLE=INSERT(IVC.TAXABLE,1,REF.NO,0,"")
*17927
            IVC.ALLOC.DIV=INSERT(IVC.ALLOC.DIV,1,REF.NO,0,"")
            IVC.ALLOC.AMT=INSERT(IVC.ALLOC.AMT,1,REF.NO,0,"")
*
            TMP.TAX.RATE=INSERT(TMP.TAX.RATE,1,REF.NO,0,"")
            TMP.TAX.CALC=INSERT(TMP.TAX.CALC,1,REF.NO,0,"")
            SCV.REC(13) = INSERT(SCV.REC(13),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(14) = INSERT(SCV.REC(14),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(30) = INSERT(SCV.REC(30),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(15) = INSERT(SCV.REC(15),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(31) = INSERT(SCV.REC(31),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(17) = INSERT(SCV.REC(17),ECD.SCRN.NO,REF.NO,0,"")
            SCV.REC(34) = INSERT(SCV.REC(34),ECD.SCRN.NO,REF.NO,0,"")
            REF.CNT=REF.CNT + 1
            CURR.REF.NO=""
            GOSUB 10000
            GOSUB 6000
            IF ECD.RET.VALUE="END" THEN
               GOSUB 600
               REF.CNT=REF.CNT - 1
               CURR.REF.NO=""
               GOSUB 10000
            END ELSE
               GOSUB 6200
               GOSUB 10000
            END
         END
      CASE ACTION="S" AND REF.CNT > 0
         REF.NO=CURR.REF.NO + LINE.COUNT
         IF REF.NO > REF.CNT THEN REF.NO=1
         GOSUB 10000
      CASE ACTION="SF" AND REF.CNT > 0
         REF.NO=CURR.REF.NO + LINE.COUNT
         IF REF.NO > REF.CNT THEN REF.NO=1
         GOSUB 10000
      CASE ACTION="ST" AND REF.CNT > 0
         REF.NO=1
         GOSUB 10000
      CASE ACTION="SR" AND REF.CNT > 0
         REF.NO=CURR.REF.NO - LINE.COUNT
         IF REF.NO < 1 THEN REF.NO=1
         GOSUB 10000
      CASE ACTION="SB" AND REF.CNT > 0
         REF.NO=REF.CNT
         GOSUB 10000
      CASE ACTION="N"
         CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)
         ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT
      CASE ACTION="P"
         ECD.NUM=22;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="Y" THEN
            JCNT=COUNT(JJOBS,VM) + (JJOBS # "")
            FOR J=1 TO JCNT
               MATREADU JOB.REC FROM JOB, CONO:JJOBS<1,J> ELSE
                  RELEASE JOB, CONO:JJOBS<1,J>
                  ERRMSG="CANNOT LOCATE JOB RECORD - ":JJOBS<1,J>
                  GOSUB 90000;GOTO 504
               END
               LOCATE IVC.NO IN JOB.INV.NO<1>,1 SETTING FND ELSE FND=0
               IF FND=0 THEN
                  RELEASE JOB, CONO:JJOBS<1,J>
               END ELSE
                  IF JOB.INV.DATE<1,FND>="" THEN
                     JOB.INV.NO=DELETE(JOB.INV.NO,1,FND,0)
                     JOB.INV.DATE=DELETE(JOB.INV.DATE,1,FND,0)
                     JOB.INV.CAT=DELETE(JOB.INV.CAT,1,FND,0)
                     JOB.INV.AMT=DELETE(JOB.INV.AMT,1,FND,0)
                     JOB.INV.BAL=DELETE(JOB.INV.BAL,1,FND,0)
                  END
                  MATWRITE JOB.REC ON JOB, CONO:JJOBS<1,J>
               END
504         NEXT           J
            MAT VOI.REC = ''
            VOI.DATE =  IVC.DATE
            VOI.JOB.NO = IVC.JOB.NO
            VOI.CUST.NO = IVC.CUST.NO
            VOI.CUST.NAME = IVC.CUST.NAME
            VOI.ADDR1 = IVC.ADDR1
            VOI.ADDR2 = IVC.ADDR2
            VOI.ADDR3 = IVC.ADDR3
            VOI.ADDR4 = IVC.ADDR4
            MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE MAT JOB.REC = ''
            VOI.PO = IVC.PO.NO;*T21219
            VOI.SLSMAN = JOB.SLSMN
            VOI.DEL.DATE = DATE()
            MATWRITE VOI.REC ON VOID.INVOICES, CONO:IVC.NO
            DELETE DAILY.INVOICE, CONO:IVC.NO
            IVC.NO=""
            GOTO 99999
         END
      CASE ACTION="E" OR ACTION="END"
         GOTO 99999
* 17297
      CASE ACTION="R"
         GOSUB 5100
* T27232 v
         IF (TOGGLE.FLAG) AND NUM(ECD.RET.VALUE) THEN
            TMP.JUNK = MATCH.ARR<1,ECD.RET.VALUE>
            IF TMP.JUNK = '' THEN TMP.JUNK = ECD.RET.VALUE
            ECD.RET.VALUE = TMP.JUNK
         END
* T27232 ^
         IF NUM(ECD.RET.VALUE) THEN
            IF IVC.ALLOC.DIV<1,ECD.RET.VALUE> =  "" THEN
               ERRMSG = "No revenue allocation for this line ":VALUE
               GOSUB 90000
               ECD.RET.VALUE = ""
            END
         END
         IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE # "" THEN
            REF.NO = ECD.RET.VALUE
*T27866 v
            ICODE = CONO:IVC.CHG.CODE<1,REF.NO>
            MATREAD INC.REC FROM INVOICE.CODE,ICODE ELSE
               MAT INC.REC = ''
            END
*T27866 ^
            GOSUB 7000
         END
         GOSUB 10000
      CASE ACTION = "F" AND CO.ALLOC.FLG = "Y" AND BAL.PTR # 0
         ERRMSG = "Allocation of line item on invoice does not balance"
         GOSUB 90000
         GOTO 500
      CASE ACTION="F" AND INVOICE.TOTAL < 0
         ERRMSG="Invalid Total Amount - Must be positive"
         GOSUB 90000
      CASE ACTION="F" AND IVC.PROC.DATE=""
* T22154 v
         FOR X = 1 TO DCOUNT(IVC.UM,VM)
            IF IVC.HIDDEN<1,X> # 'Y' THEN
*T25089 v
               IF IVC.CHG.CAT <1,X> # "CMT" AND IVC.CHG.CAT<1,X> # "TAX" AND IVC.CHG.CODE<1,X>#"SUB" AND IVC.CHG.CODE<1,X>#"SUBT" THEN
* T25089 ^
                  DONE = 0
                  FOR Z = X + 1 TO DCOUNT(IVC.UM,VM) UNTIL DONE
                     IF IVC.HIDDEN<1,Z> = 'Y' THEN
                        IF IVC.UM<1,Z> # IVC.UM<1,X> THEN
                           ERRMSG = 'UM for hidden line ':Z:' does not match detail line ':X
                           GOSUB 90000
                           ECD.RET.VALUE = ''
                           GOTO 500
                        END
                     END ELSE
                        DONE = 1
                     END
                  NEXT Z
               END ; *T25089
            END 
         NEXT X
* T22154 ^
         REF.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
         BLK = 0
         FOR I = 1 TO REF.CNT UNTIL BLK
            IF IVC.CHG.CAT<1,I> # "CMT" THEN BLK = 1
         NEXT I
         IF BLK = 0 THEN
            ERRMSG = "One Valid Invoice Line Entry is Required Before Filling"
            GOSUB 90000; GOTO 599
         END
         BEGIN CASE
            *T28826   CASE MENU="CREDIT" OR MENU="DEBIT"
              CASE MENU="DEBIT"
               IVC.LAST="N"
            CASE MENU="PREBILL"
               IVC.LAST="N"
            CASE 1
*T28826 v
              IF MENU # "CREDIT" THEN
               GOSUB 21000; GOSUB 22000
               IF MATCH.ERROR THEN
* T25764 v Have to move prompt messages to line 22
*                 X=0;Y=21;TYP=8
                  X=0;Y=22;TYP=8
* T25764 ^
                  PMSG="Continue (Y/N)"
                  CALL EDIT.SUB
                  IF VALUE="N" THEN GOTO 500
               END
              END
*T28826 ^
               ;*T25946 v
*              X=0;Y=21;TYP=8; MINL =1
               X=0;Y=22;TYP=8; MINL =1
               ;*T25946 ^
               PMSG="Is this the last invoice (Y/N)"
               CALL EDIT.SUB
               IF VALUE="END" THEN GOTO 500
               IVC.LAST=VALUE
         END CASE
         BEGIN CASE
            *T28826  CASE MENU="CREDIT" OR MENU="DEBIT"
		CASE MENU="DEBIT"
               IVC.PRE.BILL="N"
               IVC.WIP.TYPE = "ALL"
               IVC.WIP.DATE="ALL"
               IVC.WIP.PRCNT=0
            CASE MENU="PREBILL"
               IVC.PRE.BILL="N"
               IVC.WIP.TYPE = "ALL"
               IVC.WIP.DATE="ALL"
               IVC.WIP.PRCNT=0
            CASE IVC.LAST="Y"
               IVC.PRE.BILL="Y"
               IVC.WIP.TYPE = "ALL"
               IVC.WIP.DATE="ALL"
               IVC.WIP.PRCNT=10000
            CASE 1
               PRE.BILL.PRESENT=0
               ICNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
               FOR I=1 TO ICNT UNTIL PRE.BILL.PRESENT
                  JB=IVC.CHG.JOB<1,I>
                  IF JB # "" THEN
                     LOCATE JB IN JJOBS<1>,1 SETTING FND ELSE FND=0
                     IF FND AND PRE.BILL.BAL<1,FND>="Y" THEN PRE.BILL.PRESENT=1
                  END
               NEXT I
               IF PRE.BILL.PRESENT THEN
                  ;*T25946 v
*                 X=0;Y=21;TYP=8
                  X=0;Y=22;TYP=8
                  ;*T25946 ^
                  PMSG="Credit sales for pre-bills (Y/N)"
                  CALL EDIT.SUB
                  IF VALUE="END" THEN GOTO 500
                  IVC.PRE.BILL=VALUE
               END ELSE
                  IVC.PRE.BILL="N"
               END
               CALL INVOICE.WIP.SUB(CONO, WIP.FLAG, IVC.NO, MENU, PROG.FLAG)
               ECD.SCRN.NO=2; ECD.ACTION=3; CALL SCRN.EDIT
*T27820        IF WIP.FLAG = "END" THEN GOTO 500
         END CASE
         IF IVC.NO="N" THEN
550         READU          IVC.NO FROM CONTROL, CONO:"NEXT.INVOICE.NO" ELSE IVC.NO=1
            N.IVC.NO=IVC.NO + 1
            IVC.NO=STR("0",6-LEN(IVC.NO)):IVC.NO
            WRITE N.IVC.NO ON CONTROL, CONO:"NEXT.INVOICE.NO"
            BEGIN CASE
               CASE MENU="CREDIT"
                  IVC.NO=IVC.NO:"CM"
               CASE MENU="DEBIT"
                  IVC.NO=IVC.NO:"DM"
               CASE MENU="PREBILL"
                  IVC.NO=IVC.NO:"PB"
            END CASE
            READ REC FROM DAILY.INVOICE,CONO:IVC.NO ELSE GOTO 560
            GOTO 550
560         READ           REC FROM INVOICE,CONO:IVC.NO ELSE GOTO 565
            GOTO 550
565         READ REC FROM VOID.INVOICES,CONO:IVC.NO ELSE GOTO 570
            GOTO 550
570         IF             CO.ARS="Y" THEN
               READ REC FROM OPEN.RECV,CONO:IVC.NO ELSE GOTO 580
               GOTO 550
580         END
            ECD.NUM=7;SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
            ECD.ACTION=5;CALL SCRN.EDIT
            ERRMSG="Please note the new number";GOSUB 90000
         END
         JCNT=COUNT(IVC.CHG.JOB,VM) + (IVC.CHG.JOB # "")
         FOR J=1 TO JCNT
            IF IVC.CHG.JOB<1,J> # "" THEN
               MATREADU JOB.REC FROM JOB, CONO:IVC.CHG.JOB<1,J> ELSE
                  RELEASE JOB, IVC.CHG.JOB<1,J>
                  ERRMSG="CANNOT LOCATE JOB RECORD - ":IVC.CHG.JOB<1,J>
                  GOSUB 90000; GOTO 590
               END
               LOCATE IVC.NO IN JOB.INV.NO<1>,1 SETTING PTR ELSE
                  PTR=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "") + 1
                  JOB.INV.NO<1,PTR>=IVC.NO
               END
               MATWRITE JOB.REC ON JOB, CONO:IVC.CHG.JOB<1,J>
            END
590      NEXT        J
         ;*T24705 v
         FOR X = 1 TO DCOUNT(IVC.AMOUNT,VM)
            IF (IVC.AMOUNT<1,X> + 0) = 0 THEN
               IVC.ALLOC.DIV<1,X> = ''
               IVC.ALLOC.AMT<1,X> = ''
            END
         NEXT X
         ;*T24705 ^
         MATWRITE IVC.REC ON DAILY.INVOICE, CONO:IVC.NO
         GOTO 99999
599*
   END CASE
   GOTO 500
*
*---- DELETE SPECIFIC LINE
*
600*
   IVC.CHG.JOB=DELETE(IVC.CHG.JOB,1,REF.NO,0)
   IVC.CHG.CODE=DELETE(IVC.CHG.CODE,1,REF.NO,0)
   IVC.CHG.CAT=DELETE(IVC.CHG.CAT,1,REF.NO,0)
   IVC.TAX.JURS=DELETE(IVC.TAX.JURS,1,REF.NO,0)
   IVC.TAXABLE=DELETE(IVC.TAXABLE,1,REF.NO,0)
   IVC.QUANTITY=DELETE(IVC.QUANTITY,1,REF.NO,0)
   IVC.UM=DELETE(IVC.UM,1,REF.NO,0)
   IVC.DESC=DELETE(IVC.DESC,1,REF.NO,0)
   IVC.UNIT.PRICE=DELETE(IVC.UNIT.PRICE,1,REF.NO,0)
   IVC.AMOUNT=DELETE(IVC.AMOUNT,1,REF.NO,0)
   IVC.HIDDEN=DELETE(IVC.HIDDEN,1,REF.NO,0)
   TMP.TAX.RATE=DELETE(TMP.TAX.RATE,1,REF.NO,0)
   TMP.TAX.CALC=DELETE(TMP.TAX.CALC,1,REF.NO,0)
   SCV.REC(13) = DELETE(SCV.REC(13),ECD.SCRN.NO,REF.NO,0)
   SCV.REC(14) = DELETE(SCV.REC(14),ECD.SCRN.NO,REF.NO,0)
   SCV.REC(30) = DELETE(SCV.REC(30),ECD.SCRN.NO,REF.NO,0)
   SCV.REC(15) = DELETE(SCV.REC(15),ECD.SCRN.NO,REF.NO,0)
   SCV.REC(31) = DELETE(SCV.REC(31),ECD.SCRN.NO,REF.NO,0)
   SCV.REC(17) = DELETE(SCV.REC(17),ECD.SCRN.NO,REF.NO,0)
*17927
   SCV.REC(34) = DELETE(SCV.REC(34),ECD.SCRN.NO,REF.NO,0)
   IVC.ALLOC.DIV=DELETE(IVC.ALLOC.DIV,1,REF.NO,0)
   IVC.ALLOC.AMT=DELETE(IVC.ALLOC.AMT,1,REF.NO,0)
*
   RETURN
*
*
*----- GET CUSTOMER ID AND XREF FOR BILL TO
1100*
   SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
   ECD.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IF ECD.RET.VALUE="???" THEN
      ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = 'END' THEN GOTO 1100
      GXR.CO = CONO
      GXR.XREF = CUSTOMER.XREF
      GXR.NAME = "CUSTOMER"
      GXR.FILE = CUSTOMER
      GXR.TOP.LINE = "CUSTOMER XREF SEARCH"
      GXR.HEADING = "CUSTOMER"
      GXR.ID = ""
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
*T27851 v
      CURR.REF.NO = ""
      GOSUB 10000
*T27851 ^
      ;*T25946 ^
      IF GXR.ID = "" THEN
         SCV.REC(2)<ECD.SCRN.NO,1> = IVC.CUST.NAME
         ECD.NUM=2; ECD.SUB.NUM = 1;ECD.ACTION=5; CALL SCRN.EDIT
         GOTO 1100
      END
      ECD.RET.VALUE=GXR.ID
      SCV.REC(1)<ECD.SCRN.NO>=GXR.ID
      ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
   END
   MATREAD CUST.REC FROM CUSTOMER, CONO:ECD.RET.VALUE ELSE
      ERRMSG="Invalid Customer ID"
      GOSUB 90000
      GOTO 1100
   END
   IVC.CUST.NO=ECD.RET.VALUE
   IVC.CUST.NAME=CUST.NAME
   IVC.ADDR1=CUST.ADDR1
   IVC.ADDR2=CUST.ADDR2
   IVC.ADDR3=CUST.ADDR3
* T22154 v
   SHIP.TO.CNTY = CUST.ADDL.OPS<1,4>
   ;*T25159 v
   MATREAD CTY.REC FROM COUNTRY.CODE, CONO:SHIP.TO.CNTY ELSE MAT CTY.REC = ''
   SHIP.TO.CNTY = CTY.DESC
   ;*T25159 ^
*      IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP
   IVC.ADDR4=CUST.ADDR4:" ":CUST.ZIP:"  ":SHIP.TO.CNTY
* T22154 ^
   IVC.ATTENTION=CUST.ATTENTION
   SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
   SCV.REC(2)<ECD.SCRN.NO,1>=IVC.CUST.NAME
   SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1
   SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2
   SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3
   SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
   SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
   IF IVC.PRT.FLG<1,2>='' THEN IVC.PRT.FLG<1,2>='N'
   SCV.REC(43)<ECD.SCRN.NO>=IVC.PRT.FLG<1,2>
   ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=2; ECD.SUB.NUM=1; ECD.ACTION=5; CALL SCRN.EDIT
   ;*T25946 v
   ECD.NUM=2; ECD.SUB.NUM=2; ECD.ACTION=5; CALL SCRN.EDIT
   ECD.NUM=2; ECD.SUB.NUM=3; ECD.ACTION=5; CALL SCRN.EDIT
   ECD.NUM=2; ECD.SUB.NUM=4; ECD.ACTION=5; CALL SCRN.EDIT
   ECD.NUM=2; ECD.SUB.NUM=5; ECD.ACTION=5; CALL SCRN.EDIT
   ;*T25946 ^
   ECD.NUM=28;ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
*
*---- GET CUSTOMER NAME & ADDRESS
*
1200*
   ECD.NUM=2;ECD.SUB.NUM=1;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IF ECD.RET.VALUE="" THEN GOTO 1200
   IVC.CUST.NAME = ECD.RET.VALUE
   ECD.NUM=2;ECD.SUB.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.ADDR1=ECD.RET.VALUE
   ECD.NUM=2;ECD.SUB.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.ADDR2=ECD.RET.VALUE
   ECD.NUM=2;ECD.SUB.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.ADDR3=ECD.RET.VALUE
   ECD.NUM=2;ECD.SUB.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.ADDR4=ECD.RET.VALUE
   RETURN
*
*---- GET ATTENTION OF
*
1300*
   ECD.NUM=28;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.ATTENTION=ECD.RET.VALUE
   RETURN
*
*---- GET CUSTOMER P/O NUMBER
*
1400*
   ECD.NUM=9;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.PO.NO=ECD.RET.VALUE;*T21219
   RETURN
*
*---- GET INVOICE DATE
*
1500*
* ECD.MINV=DATE()-365
   ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.DATE=ECD.RET.VALUE
* T25764 v If date changes, then update due date.
   IF IVC.TERMS # "" THEN
      MATREAD TERMS.REC FROM TERMS, CONO : IVC.TERMS THEN
         IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS
         ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = IVC.DUE.DATE
         ECD.ACTION = 5 ; CALL SCRN.EDIT
      END
   END
* T25764 ^
   RETURN
* T25764 v Enter TERMS CODE
*
*-- GET TERMS CODE
*
1600* 
   IF IVC.TERMS = "" THEN IVC.TERMS = CUST.TERMS
   ECD.DEFAULT = IVC.TERMS
   ECD.NUM=40;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IF ECD.RET.VALUE = "???" THEN
      GXR.CO = CONO
      GXR.NAME = "TERMS"
      GXR.FILE = TERMS
      GXR.SORT.FILE = TERMS
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
*T27851 v
      CURR.REF.NO = ""
      GOSUB 10000
*T27851 ^
      IF GXR.ID = "" THEN GOTO 1600
      ECD.NUM = 40 ; SCV.REC(40)<ECD.SCRN.NO> = GXR.ID
      ECD.ACTION = 5 ; CALL SCRN.EDIT
      ECD.RET.VALUE = GXR.ID
   END
   IF ECD.RET.VALUE # "" THEN
      MATREAD TERMS.REC FROM TERMS, CONO : ECD.RET.VALUE ELSE
         ERRMSG="Invalid Terms Code";GOSUB 90000;GOTO 1600
      END
   END
   IVC.TERMS=ECD.RET.VALUE
   IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS
   ECD.NUM = 41;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = TERMS.DESC
   ECD.ACTION = 5 ; CALL SCRN.EDIT
   ECD.NUM = 42;SCV.REC(ECD.NUM)<ECD.SCRN.NO> = IVC.DUE.DATE
   ECD.ACTION = 5 ; CALL SCRN.EDIT
   RETURN
*
*---- GET EMAIL FLAG
*
1700 
   ECD.NUM=43;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN    
   IVC.PRT.FLG<1,1>='Y'; * always print
   IVC.PRT.FLG<1,2>=ECD.RET.VALUE
   RETURN
*
*---- GET OPERATOR REQUEST
*
5000*
* 17927
   IF CO.ALLOC.FLG # "Y" THEN
      IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
* T27232 v
         IF PROG.FLAG = 'I' AND (TOGGLE.FLAG) THEN
            ECD.NUM=44;ECD.ACTION=4;CALL SCRN.EDIT
         END ELSE
            ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
         END
* T27232 ^
      END ELSE
         ECD.NUM=20;ECD.ACTION=4;CALL SCRN.EDIT
      END
   END ELSE
      IF PROG.FLAG="I" OR IVC.PROC.DATE#"" THEN
* T27232 v
         IF PROG.FLAG = 'I' AND (TOGGLE.FLAG) THEN
            ECD.NUM=45;ECD.ACTION=4;CALL SCRN.EDIT
         END ELSE
            ECD.NUM=32;ECD.ACTION=4;CALL SCRN.EDIT
         END
* T27232 ^
      END ELSE
         ECD.NUM=33;ECD.ACTION=4;CALL SCRN.EDIT
      END
   END
   IF ECD.RET.VALUE="END" THEN RETURN
   RETURN
*
*---- GET LINE NUMBER
*
5100*
   SCV.REC(19)<ECD.SCRN.NO>=""
   ECD.MINV=CURR.REF.NO; ECD.MAXV=CURR.REF.NO + LINE.COUNT - 1
   IF ECD.MAXV > REF.CNT THEN ECD.MAXV=REF.CNT
   ECD.NUM=19;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   RETURN
*
*---- GET MULTI-LINE DATA
*
6000*
   ECD.NUM=12;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   IF SCV.REC(22)<ECD.SCRN.NO,REF.NO> # "" THEN
      SCV.REC(22)<ECD.SCRN.NO,REF.NO>=""
      SCV.REC(23)<ECD.SCRN.NO,REF.NO>=""
      SCV.REC(24)<ECD.SCRN.NO,REF.NO>=""
      ECD.NUM=22;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=23;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=24;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   END
*---- GET INVOICE CODE
6010*
   SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>
   ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
*T28511 v
*   IF ECD.RET.VALUE="END" THEN RETURN
*   ICODE=ECD.RET.VALUE
   IF ECD.RET.VALUE='END' AND IVC.CHG.CODE<1,REF.NO> = '' THEN
      RETURN
   END ELSE
      PAGE.SIZE=7; BEGIN.PAGE=13; LINE.SPACE=1
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(REF.NO-1,PAGE.SIZE)
      P_X  = 7 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF ECD.RET.VALUE # 'END' THEN
         SCV.REC(13)<ECD.SCRN.NO,REF.NO>=ECD.RET.VALUE
         ICODE = ECD.RET.VALUE
      END ELSE
         SCV.REC(13)<ECD.SCRN.NO,REF.NO>=IVC.CHG.CODE<1,REF.NO>
         ICODE = IVC.CHG.CODE<1,REF.NO>
      END
      ECD.NUM=13;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   END
*T28511^
   BEGIN CASE
      CASE ICODE="JOB1" OR ICODE="JOB"
         LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
         IF FND < REF.NO THEN
            ERRMSG="Only comment lines may be entered after total line"
            GOSUB 90000; GOTO 6010
         END
         MAT INC.REC=""
         INC.CATEGORY="OTH"
      CASE ICODE="SUB" OR ICODE = "SUBT"
         LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
         IF FND < REF.NO THEN
            ERRMSG="Only comment lines may be entered after total line"
            GOSUB 90000; GOTO 6010
         END
         MAT INC.REC=""
         INC.CATEGORY="CMT"
         INC.DESC="SUB TOTAL"
         INC.DESC=SPACE(DESC.LEN-LEN(INC.DESC)-4):INC.DESC
      CASE ICODE="TOT"
         FOR TN=REF.NO+1 TO REF.CNT
            IF IVC.CHG.CAT<1,TN> # "CMT" THEN
               ERRMSG="Total line can only preceed comment lines"
               GOSUB 90000; GOTO 6010
            END
         NEXT TN
         MAT INC.REC=""
         INC.CATEGORY="CMT"
         INC.DESC="TOTAL"
         INC.DESC=SPACE(DESC.LEN-LEN(INC.DESC)-4):INC.DESC
      CASE ICODE="CMT"
         MAT INC.REC=""
         INC.CATEGORY="CMT"
      CASE 1
         MATREAD INC.REC FROM INVOICE.CODE, CONO:ICODE ELSE
            ERRMSG="Invalid code"
            GOSUB 90000; GOTO 6010
         END
*T28274
         IF SCV.REC(13)<ECD.SCRN.NO,REF.NO> # ICODE THEN
            IF INC.HIDDEN="Y" AND REF.NO=1 THEN
               ERRMSG="Hidden line cannot be first line entered"
               GOSUB 90000; GOTO 6010
            END
*T25089 v
            IF INC.HIDDEN = "Y" AND (IVC.CHG.CAT<1,REF.NO-1>= "CMT" OR IVC.CHG.CAT<1,REF.NO-1> = "TAX" OR IVC.CHG.CODE<1,REF.NO-1> = "SUB" OR IVC.CHG.CODE<1,REF.NO-1> = "SUBT") THEN
               ERRMSG = "Hidden line cannot follow CMT,TAX,SUB, or SUBT line"
               GOSUB 90000 ; GOTO 6010
            END
*T25089 ^
            IF INC.CATEGORY # "CMT" THEN
               LOCATE "TOT" IN IVC.CHG.CODE<1>,1 SETTING FND ELSE FND=999
               IF FND < REF.NO THEN
                  ERRMSG="Only comment lines may be entered after total line"
                  GOSUB 90000; GOTO 6010
               END
            END
         END
* T28274
   END CASE
   IVC.CHG.CODE<1,REF.NO>=ICODE
   IVC.CHG.CAT<1,REF.NO>=INC.CATEGORY
   IVC.HIDDEN<1,REF.NO>=INC.HIDDEN
*---- GET JOB NUMBER
6012*
   BEGIN CASE
      CASE INC.CATEGORY="CMT"
         IVC.CHG.JOB<1,REF.NO>=""
      CASE MULTI.JOB="N" OR SAVE.JOB.SUBS=""
         IVC.CHG.JOB<1,REF.NO>=JOB.NO
      CASE 1
         SCV.REC(25)<ECD.SCRN.NO>="Job # :"
         ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(24)<ECD.SCRN.NO>=""
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
         BEGIN CASE
            CASE IVC.CHG.JOB<1,REF.NO> = ""
               LDONE = 0
               FOR LLL = REF.NO TO 1 STEP - 1 UNTIL LDONE
                  IF IVC.CHG.JOB<1,LLL> # "" THEN
                     SCV.REC(23)<ECD.SCRN.NO>=IVC.CHG.JOB<1,LLL>
                     LDONE = 1
                  END
               NEXT LLL
            CASE 1
               SCV.REC(23)<ECD.SCRN.NO>=IVC.CHG.JOB<1,REF.NO>
         END CASE
         ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
         IF ECD.RET.VALUE # JOB.NO THEN
            LOCATE ECD.RET.VALUE IN SAVE.JOB.SUBS<1>,1 SETTING FND ELSE FND=0
            IF FND=0 THEN
               ERRMSG="Job must be related to master job"
               GOSUB 90000
               GOTO 6012
            END
         END
         IF ECD.RET.VALUE # CURR.JOB.NO THEN
            CURR.JOB.NO=ECD.RET.VALUE
            MATREAD JOB.REC FROM JOB, CONO:ECD.RET.VALUE ELSE
               ERRMSG="Invalid job number"
               GOSUB 90000
               GOTO 6012
            END
            ;*T23278 v 24939 v
            DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 90000
               SCV.REC(23)<ECD.SCRN.NO>=""; CURR.JOB.NO = ""
               GOTO 6012
            END
            ;*T24939       IF JOB.DIV # SAVE.JOB.DIV THEN
            IF DIV.SEC.REC<2> = 'Y' AND JOB.DIV # SAVE.JOB.DIV THEN
               ERRMSG = "JOB DIVISION MISMATCH"
               GOSUB 90000
               SCV.REC(23)<ECD.SCRN.NO>=""; CURR.JOB.NO = ""
               GOTO 6012
            END
            ;*T23278 ^
         END
         IVC.CHG.JOB<1,REF.NO>=ECD.RET.VALUE
         SCV.REC(25)<ECD.SCRN.NO>=""
         ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(23)<ECD.SCRN.NO>=""
         ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
   END CASE
   BEGIN CASE
      CASE ICODE = "JOB1"
         INC.DESC=JOB.DESC<1,1>[1,DESC.LEN]
      CASE ICODE = "JOB"
         NEW.DESC=""
         SAVE.DESC.LEN = DESC.LEN ; DESC.LEN = 35  ; * T22137
*T28237  CALL DESC.REFORMAT (JOB.DESC, DESC.LEN, NEW.DESC)
         CALL DESC.REFORMAT.2 (JOB.DESC, DESC.LEN, NEW.DESC)
         DESC.LEN = SAVE.DESC.LEN                  ; * T22137
         MAT INC.REC=""
         INC.CATEGORY="OTH"
         INC.DESC=NEW.DESC<1,1>
         IF MODE="A" THEN
            DCNT=COUNT(NEW.DESC,VM) + (NEW.DESC # "")
            FOR D=2 TO DCNT
               IVC.CHG.CODE<1,REF.NO+D-1>="CMT"
               IVC.CHG.CAT<1,REF.NO+D-1>="CMT"
               IVC.DESC<1,REF.NO+D-1>=NEW.DESC<1,D>
               SCV.REC(13)<ECD.SCRN.NO,REF.NO+D-1>="CMT"
               SCV.REC(15)<ECD.SCRN.NO,REF.NO+D-1>=NEW.DESC<1,D>
            NEXT D
            CURR.REF.NO=""
            GOSUB 10000
         END
   END CASE
*---- GET TAX JURISDICTION OR SHIP VIA IF NECESSARY
6015*
   BEGIN CASE
      CASE IVC.CHG.CAT<1,REF.NO>="TAX"
         SCV.REC(25)<ECD.SCRN.NO>="Tax Jur :"
         ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
         SCV.REC(24)<ECD.SCRN.NO>=""
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
         ;*T25946 v
         IF IVC.TAX.JURS<1,REF.NO> = '' THEN
            ECD.DEFAULT = CUST.TAX.JUR<1,1>
         END
         ;*T25946 ^
         ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
         ;*T25946 v
         IF ECD.RET.VALUE = "???" THEN
            GXR.CO = CONO
            GXR.NAME = "TAX"
            GXR.FILE = TAX
            GXR.SORT.FILE = TAX
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.ACTION = 3; CALL SCRN.EDIT
*T27851 v
            CURR.REF.NO = ""
            GOSUB 10000
*T27851 ^
            IF GXR.ID = "" THEN GOTO 6015
            ECD.RET.VALUE = GXR.ID
         END
         ;*T25946 ^
         MATREAD TAX.REC FROM TAX, CONO:ECD.RET.VALUE ELSE
            ERRMSG="Jurisdiction ":ECD.RET.VALUE:" is not on file"
            GOSUB 90000
            GOTO 6015
         END
         LOCATE ECD.RET.VALUE IN JJURS<1>,1 SETTING FND ELSE FND=0
         IF FND=0 THEN
            ERRMSG="No shipment present for this tax jurisdiction"
            GOSUB 90000
         END
         IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
         TMP.TAX.RATE<1,REF.NO>=TAX.RATE
         TMP.TAX.CALC<1,REF.NO>=""
         SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556
         ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556
         SCV.REC(24)<ECD.SCRN.NO>=TAX.JUR
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
      CASE IVC.CHG.CAT<1,REF.NO>="SHP"
         SCV.REC(25)<ECD.SCRN.NO>="Ship Via :"
         ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
         SCV.REC(24)<ECD.SCRN.NO>=""
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
         ;*T25946 v
         IF ECD.RET.VALUE = "???" THEN
            GXR.CO = CONO
            GXR.NAME = "SHIP.VIA"
            GXR.FILE = SHIP.VIA
            GXR.SORT.FILE = SHIP.VIA
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.ACTION = 3; CALL SCRN.EDIT
*T27851 v
            CURR.REF.NO = ""
            GOSUB 10000
*T27851 ^
            IF GXR.ID = "" THEN GOTO 6015
            ECD.RET.VALUE = GXR.ID
         END
         ;*T25946 ^
         MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
            ERRMSG="Ship Via ":ECD.RET.VALUE:" is not on file"
            GOSUB 90000
            GOTO 6015
         END
         LOCATE ECD.RET.VALUE IN JSHIP<1>,1 SETTING FND ELSE FND=0
         IF FND=0 THEN
            ERRMSG="No shipment present for this carrier"
            GOSUB 90000
         END
         IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
         IVC.TAXABLE<1,REF.NO>=""
         TMP.TAX.RATE<1,REF.NO>=""
         TMP.TAX.CALC<1,REF.NO>=""
         SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556
         ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556
         SCV.REC(24)<ECD.SCRN.NO>=SHPV.DESC
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
* T20298
*     CASE IVC.CHG.CODE<1,REF.NO>="DSC" OR IVC.CHG.CAT<1,REF.NO>="MSC"
      CASE IVC.CHG.CODE<1,REF.NO>="DSC" OR IVC.CHG.CAT<1,REF.NO>="MSC" OR INC.CATEGORY = "DSC"
* T20298
         SCV.REC(25)<ECD.SCRN.NO>="Sales CD :"
         ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(23)<ECD.SCRN.NO>=IVC.TAX.JURS<1,REF.NO>
         SCV.REC(24)<ECD.SCRN.NO>=""
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
         ;*T25946 v
         IF ECD.RET.VALUE = "???" THEN
            GXR.CO = CONO
            GXR.NAME = "SALES.CODE2"
            GXR.FILE = SALES.CODE
            GXR.SORT.FILE = SALES.CODE
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
            ECD.ACTION = 2; CALL SCRN.EDIT
            ECD.ACTION = 3; CALL SCRN.EDIT
*T27851 v
            CURR.REF.NO = ""
            GOSUB 10000
*T27851 ^
            IF GXR.ID = "" THEN GOTO 6015
            ECD.RET.VALUE = GXR.ID
         END
         ;*T25946 ^
         MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE
            ERRMSG="Sales Code ":ECD.RET.VALUE:" is not on file"
            GOSUB 90000
            GOTO 6015
         END
         IVC.TAX.JURS<1,REF.NO>=ECD.RET.VALUE
         IVC.TAXABLE<1,REF.NO>=""
         TMP.TAX.RATE<1,REF.NO>=""
         TMP.TAX.CALC<1,REF.NO>=""
         SCV.REC(23)<ECD.SCRN.NO>=ECD.RET.VALUE       ;* T26556
         SCV.REC(24)<ECD.SCRN.NO>= ""
         ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT       ;* T26556
         ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
      CASE 1
         IVC.TAX.JURS<1,REF.NO>=""
         IVC.TAXABLE<1,REF.NO>=""
         TMP.TAX.RATE<1,REF.NO>=""
         TMP.TAX.CALC<1,REF.NO>=""
   END CASE
   ;*T23546 v
   IF MODE="A" AND INC.DESC # "" THEN
*   IF (MODE="A" OR MODE = "C") AND INC.DESC # "" THEN
      ;*T23546 ^ REMOVED BY T28274
      SCV.REC(15)<ECD.SCRN.NO,REF.NO>=INC.DESC
      ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   END
*---- GET QUANTITY
6020*
   BEGIN CASE
      CASE INC.CATEGORY="OTH" OR INC.CATEGORY="MSC"
         ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
      CASE 1
         ECD.RET.VALUE=""
         SCV.REC(14)<ECD.SCRN.NO,REF.NO>=""
         ECD.NUM=14;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   END CASE
   IVC.QUANTITY<1,REF.NO>=ECD.RET.VALUE
*---- GET U/M
6025*
   BEGIN CASE
      CASE IVC.QUANTITY<1,REF.NO> # ""
         ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE="END" THEN RETURN
      CASE 1
         ECD.RET.VALUE=""
         SCV.REC(30)<ECD.SCRN.NO,REF.NO>=""
         ECD.NUM=30;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   END CASE
* T22154 v
   IF IVC.HIDDEN<1,REF.NO> = 'Y' THEN
      ;*T22759 CHG DONE TO XDONE v
      XDONE = 0
      FOR X = REF.NO - 1 TO 1 STEP -1 UNTIL XDONE
*T25089 v
         IF IVC.HIDDEN<1,X> # 'Y' THEN
            IF IVC.CHG.CAT <1,X> # "CMT" AND IVC.CHG.CAT<1,X> # "TAX" AND IVC.CHG.CODE<1,X>#"SUB" AND IVC.CHG.CODE<1,X>#"SUBT" THEN
*T25089 ^
               IF IVC.UM<1,X> # ECD.RET.VALUE THEN
                  ERRMSG = 'UM must match the associated detail line ':X
                  GOSUB 90000
                  ;*T22747       GOTO 6025
                  GOTO 6000
               END
               XDONE = 1
            END
         END ; *T25089
      NEXT X
   END ELSE
      IF IVC.HIDDEN<1,REF.NO + 1> = 'Y' THEN
         IF IVC.UM<1,REF.NO + 1> # ECD.RET.VALUE THEN
            ERRMSG = 'Please change UM for associated hidden lines '
            GOSUB 90000
         END
      END
   END
* T22154 ^
   IVC.UM<1,REF.NO>=ECD.RET.VALUE
*---- GET DESCRIPTION
6030*
   ECD.DEFAULT=INC.DESC
   ECD.NUM=15;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN RETURN
   IVC.DESC<1,REF.NO>=ECD.RET.VALUE
*---- GET AMOUNT
6040*
   IF IVC.QUANTITY<1,REF.NO>="" OR IVC.UM<1,REF.NO>="" THEN
      SCV.REC(31)<ECD.SCRN.NO,REF.NO>=""
      ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      IVC.UNIT.PRICE<1,REF.NO>=""
   END
   BEGIN CASE
      CASE IVC.QUANTITY<1,REF.NO> # ""
         IF IVC.UM<1,REF.NO>="" THEN
            ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
            ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
* CSF 22071
            IF ECD.RET.VALUE # 'END' THEN
*
               IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
            END
*
         END ELSE
            ECD.NUM=31;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
            IF ECD.RET.VALUE # "END" THEN
               IVC.UNIT.PRICE<1,REF.NO>=ECD.RET.VALUE
               BEGIN CASE
                  CASE IVC.UNIT.PRICE<1,REF.NO>=""
                     ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
                     ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
* CSF 22071
                     IF ECD.RET.VALUE # 'END' THEN
*
                        IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
                     END
*
                  CASE IVC.UM<1,REF.NO>="M"
*                  FACTOR="1000"
                     FACTOR="10000";*T22168
                  CASE IVC.UM<1,REF.NO>="C"
*                  FACTOR="100";*T22168
                     FACTOR="1000";*T22168
                  CASE 1
*                  FACTOR="1"
                     FACTOR="10";*T22168
               END CASE
               IF IVC.UNIT.PRICE<1,REF.NO> # "" THEN
                  IVC.AMOUNT<1,REF.NO>=(IVC.QUANTITY<1,REF.NO>/FACTOR) * IVC.UNIT.PRICE<1,REF.NO>
                  IF IVC.AMOUNT<1,REF.NO> > 0 THEN
                     IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10+0.5)
                  END ELSE
                     IVC.AMOUNT<1,REF.NO>=INT(IVC.AMOUNT<1,REF.NO>/10-0.5)
                  END
                  SCV.REC(17)<ECD.SCRN.NO,REF.NO>=IVC.AMOUNT<1,REF.NO>
                  ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
                  ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
               END
            END
         END
*
      CASE INC.CATEGORY="TAX"
         TAX.REF=REF.NO
         GOSUB 6400
         ECD.O.R="O";ECD.DEFAULT=TAMT
         SCV.REC(17)<ECD.SCRN.NO,REF.NO>=TAMT;* T23525
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE # "END" THEN
            IF ECD.RET.VALUE="" THEN
               ECD.RET.VALUE=TAMT
               SCV.REC(17)<ECD.SCRN.NO,REF.NO>=TAMT
               ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
            END
            IF ECD.RET.VALUE=TAMT THEN
               TMP.TAX.CALC<1,REF.NO>="C"
               IVC.TAXABLE<1,REF.NO>= AMT.TAX
            END ELSE
               TMP.TAX.CALC<1,REF.NO>="E"
               BEGIN CASE
                  CASE TMP.TAX.RATE<1,REF.NO> + 0 = 0
                  CASE ECD.RET.VALUE < 0
                     AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)-0.5)
                  CASE 1
                     AMT.TAX = INT((ECD.RET.VALUE*100)/(TMP.TAX.RATE<1,REF.NO>/1000)+0.5)
               END CASE
6045           DEFAULT=OCONV(AMT.TAX, "MD2"); O.R="O"
               ;*T25946 v
*              X=0; Y=21; TYP=4; SCALER=2; MINV=0; MAXV=999999999
               X=0; Y=22; TYP=4; SCALER=2; MINV=0; MAXV=999999999
               ;*T25946 ^
* T20532
*              MAXL=10; PMSG="Enter Taxable amount : "
               MAXL=12; PMSG="Enter Taxable amount : "
* T20532
               CALL EDIT.SUB
* T25764 v Have to move prompt messages to line 22
*              P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
               P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
* T25764 ^
               CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
               IF VALUE = "END" THEN GOTO 6040
               IF VALUE = "" THEN GOTO 6045
               IVC.TAXABLE<1,REF.NO> = VALUE
            END
* CSF 22071
            IF ECD.RET.VALUE # 'END' THEN
*
               IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
            END
*
         END
      CASE IVC.CHG.CODE<1,REF.NO>="SUB"
         GOSUB 6200
         ECD.RET.VALUE=AMT.SUB
         SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.SUB
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
* CSF 22071
         IF ECD.RET.VALUE # 'END' THEN
*
            IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
         END
*
      CASE IVC.CHG.CODE<1,REF.NO>="SUBT"
         GOSUB 6200
         ECD.RET.VALUE=IVC.AMOUNT<1,REF.NO>
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
      CASE IVC.CHG.CODE<1,REF.NO>="TOT"
         GOSUB 6200
         ECD.RET.VALUE=AMT.TOT
         SCV.REC(17)<ECD.SCRN.NO,REF.NO>=AMT.TOT
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
* CSF 22071
         IF ECD.RET.VALUE # 'END' THEN
*
            IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
         END
*
      CASE INC.CATEGORY="CMT"
         ECD.RET.VALUE=""
         SCV.REC(17)<ECD.SCRN.NO,REF.NO>=""
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
* CSF 22071
         IF ECD.RET.VALUE # 'END' THEN
*
            IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
         END
*
      CASE 1
         ECD.MINV = "-99999999.99"; ECD.MAXV = "99999999.99";*T20532
         ECD.NUM=17;ECD.SUB.NUM=REF.NO;ECD.ACTION=4;CALL SCRN.EDIT
* CSF 22071
         IF ECD.RET.VALUE # 'END' THEN
*
            IVC.AMOUNT<1,REF.NO>=ECD.RET.VALUE
* CSF 22071
         END ELSE
            GOTO 6010
         END
*
   END CASE
   IF CO.ALLOC.FLG # "Y" THEN GOTO 6099
*      IF IVC.AMOUNT<1,REF.NO> > 0 THEN
*         NULL
*      END ELSE
*         GOTO 6099
*      END
*      T20298   v
   BEGIN CASE
      CASE IVC.CHG.CODE<1,REF.NO> = "DSC" OR INC.CATEGORY = "DSC"
      CASE IVC.AMOUNT<1,REF.NO> > 0 
      CASE IVC.AMOUNT<1,REF.NO> < 0
         GOTO 6099
*      T20298 ^
   END CASE
* 17927
   BEGIN CASE
      CASE ICODE = "JOB" OR ICODE = "JOB1"  OR INC.CATEGORY = "MSC" OR INC.CATEGORY = "OTH" OR INC.CATEGORY = "DSC"
         GOSUB 7000
   END CASE
6099*
   IF SCV.REC(23)<ECD.SCRN.NO> # "" THEN
      SCV.REC(23)<ECD.SCRN.NO>=""
      SCV.REC(24)<ECD.SCRN.NO>=""
      SCV.REC(25)<ECD.SCRN.NO>=""
      ECD.NUM=23;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
   END
   RETURN
*
*---- CALCULATE AND DISPLAY TOTAL
*
6200*
   AMT.SUB=0
   AMT.TOT=0
   AMT.SUBT=0
* T27232 v
   INV.CNT = DCOUNT(IVC.CHG.CODE<1>, VM)
   FOR REF=1 TO INV.CNT + 1
      IF TOGGLE.FLAG = 1 AND ADD.SUBS = 0 THEN
         IF IVC.CHG.CODE<1,REF> # 'CMT' AND IVC.CHG.JOB<1,REF> # JOB.NO THEN CONTINUE
      END
* T27232 ^
      CODE=IVC.CHG.CODE<1,REF>
      CATG=IVC.CHG.CAT<1,REF>
      AMT=IVC.AMOUNT<1,REF>
      BEGIN CASE
         CASE CODE="SUB"
            IF AMT.SUB # AMT THEN
               IVC.AMOUNT<1,REF>=AMT.SUB
               SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.SUB
               IF AMT # "" THEN CURR.REF.NO=""
            END
         CASE CODE="SUBT"
            IF AMT.SUBT # AMT THEN
               IVC.AMOUNT<1,REF>=AMT.SUBT
               SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.SUBT
               IF AMT # "" THEN CURR.REF.NO=""
            END
            AMT.SUBT = 0
         CASE CODE="TOT"
            IF AMT.TOT # AMT THEN
               IVC.AMOUNT<1,REF>=AMT.TOT
               SCV.REC(17)<ECD.SCRN.NO,REF>=AMT.TOT
               IF AMT # "" THEN CURR.REF.NO=""
            END
         CASE CATG="TAX"
            TAX.REF=REF
            GOSUB 6400
            IF TAMT # AMT OR TMP.TAX.RATE<1,REF> + 0 = 0 THEN
               IF TMP.TAX.CALC<1,REF>="E" THEN
                  BEGIN CASE
                     CASE MODE=""
                     CASE MODE="A"
                     CASE MODE="C" AND REF.NO >= REF
                     CASE MODE="D" AND REF.NO > REF
                     CASE MODE="I" AND REF.NO > REF
                     CASE 1
                        ERRMSG="TAX ENTRY ON LINE ":REF:" MAY BE AFFECTED"
                        GOSUB 90000
                  END CASE
               END ELSE
                  AMT=TAMT
                  IVC.AMOUNT<1,REF>=AMT
                  IVC.TAXABLE<1,REF>=AMT.TAX
                  SCV.REC(17)<ECD.SCRN.NO,REF>=AMT
                  IF AMT # "" THEN CURR.REF.NO=""
               END
            END
            AMT.SUB=AMT.SUB + AMT
            AMT.TOT=AMT.TOT + AMT
            AMT.SUBT=AMT.SUBT + AMT
         CASE 1
            AMT.SUB=AMT.SUB + AMT
            AMT.TOT=AMT.TOT + AMT
            AMT.SUBT=AMT.SUBT + AMT
      END CASE
   NEXT REF
   INVOICE.TOTAL=AMT.TOT
   SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL
   ECD.NUM=18;ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
*
*---- CALCULATE SALES TAX
*
6400*
   AMT.TAX=0
   TDONE=0
   FOR TREF=TAX.REF-1 TO 1 STEP -1 UNTIL TDONE
      IF IVC.CHG.CAT<1,TREF>="TAX" THEN
         IF AMT.TAX > 0 THEN TDONE=1
      END ELSE
         IF IVC.CHG.CODE<1,TREF> # 'SUBT' THEN
            AMT.TAX=AMT.TAX + IVC.AMOUNT<1,TREF>
            IF IVC.CHG.CODE<1,TREF>="SUB" THEN
               TDONE=1
            END
         END
      END
   NEXT TREF
   TAMT=INT(AMT.TAX*(TMP.TAX.RATE<1,TAX.REF>/1000)/100+0.5)
   RETURN
*
7000* INV ALLOC
* 17927
   IF PROG.FLAG = "I" AND IVC.ALLOC.DIV<1,REF.NO> # "" THEN
*T28085      COA.LEVEL = 2
      COA.LEVEL = 3 ;*T28085
   END ELSE
      COA.LEVEL = 0
   END
* 22870
   IF IVC.CHG.JOB<1,REF.NO> # "" THEN
      JOBNO = IVC.CHG.JOB<1,REF.NO>
   END
   IF CO.ALLOC.FLG = "Y" THEN
      BAL.FLG = ""
      IF PROG.FLAG # "I" THEN
*        IF ICODE = "JOB" OR ICODE = "JOB1"  OR INC.CATEGORY = "OTH" THEN
         IF IVC.CHG.CODE<1,REF.NO> = "JOB" OR IVC.CHG.CODE<1,REF.NO> = "JOB1" OR IVC.CHG.CAT<1,REF.NO> = "OTH" THEN
            MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE
               MAT SLC.REC = ""
            END
         END ELSE
            MATREAD SLC.REC FROM SALES.CODE, CONO:IVC.TAX.JURS<1,REF.NO> ELSE
               MAT SLC.REC = ""
            END
         END
      END
      BEGIN CASE
         CASE PROG.FLAG = "I"
         CASE IVC.CHG.CODE<1,REF.NO> = "JOB" OR IVC.CHG.CODE<1,REF.NO> = "JOB1" OR IVC.CHG.CAT<1,REF.NO> = "OTH"
            IF SLC.GL.ACCT = "" THEN
               MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            END ELSE
               MATREAD COA.REC FROM COA, CONO:SLC.GL.ACCT ELSE COA.LEVEL = 0
            END
* T20298
*           CASE IVC.CHG.CODE<1,REF.NO> = "DSC"
         CASE IVC.CHG.CODE<1,REF.NO> = "DSC" OR INC.CATEGORY = "DSC"
* T20298
            IF SLC.DS.ACCT = "" THEN
               MATREAD COA.REC FROM COA, CONO:GLTB.TRADE.DISC ELSE COA.LEVEL = 0
            END ELSE
               MATREAD COA.REC FROM COA, CONO:SLC.DS.ACCT ELSE COA.LEVEL = 0
            END
         CASE IVC.CHG.CAT<1,REF.NO> = "MSC"
            MATREAD SLC.REC FROM SALES.CODE, CONO:IVC.TAX.JURS<1,REF.NO> ELSE
               MAT SLC.REC = ""
            END
            BEGIN CASE
               CASE SLC.GL.ACCT # ""
                  MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
               CASE 1
                  MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            END CASE
         CASE 1
            IF SLC.GL.ACCT # "" THEN
               MATREAD COA.REC FROM COA, CONO:SLC.GL.ACCT  ELSE COA.LEVEL = 0
            END ELSE
               MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            END
      END CASE
      IF COA.LEVEL < 1 THEN RETURN
*T28610
      IF IVC.AMOUNT<1,REF.NO> = 0 THEN
         IVC.ALLOC.DIV<1,REF.NO> = ""
         IVC.ALLOC.AMT<1,REF.NO> = ""
         RETURN
      END
*T28610
      CALL INV.ALLOC.MAINT(CONO, BAL.FLG, IVC.NO, JOBNO, MENU, PROG.FLAG, REF.NO, COA.LEVEL)
      IF ECD.RET.VALUE = 'END' THEN ECD.RET.VALUE = 'E' ;*T25423
      ECD.SCRN.NO = 2
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF BAL.FLG = "P" OR BAL.FLG = "N" THEN
         SCV.REC(34)<ECD.SCRN.NO,REF.NO> = "*"
      END
      IF BAL.FLG = "Y" THEN
         SCV.REC(34)<ECD.SCRN.NO,REF.NO> = ""
      END
      LOCATE "*" IN SCV.REC(34)<ECD.SCRN.NO> SETTING BAL.PTR ELSE BAL.PTR = 0
      ECD.ACTION = 3; CALL SCRN.EDIT
      ;*T25410 v *Reset var to null to redisplay the screen at starting ln 
    * CURR.REF.NO = REF.NO - 1
      CURR.REF.NO = ''
    * T25410 ^
      GOSUB 10000
      IF BAL.FLG = "P" THEN
         ERRMSG = "Revenue Distribution Could be Wrong check Line"
         GOSUB 90000
         ACTION = "C"
         GOTO 500
      END
   END
*
   RETURN
*
*---- SET SCREEN VALUES
*
9000*
   SCV.REC(1)<ECD.SCRN.NO>=IVC.CUST.NO
   SCV.REC(2)<ECD.SCRN.NO,1>=IVC.CUST.NAME
   SCV.REC(2)<ECD.SCRN.NO,2>=IVC.ADDR1
   SCV.REC(2)<ECD.SCRN.NO,3>=IVC.ADDR2
   SCV.REC(2)<ECD.SCRN.NO,4>=IVC.ADDR3
   SCV.REC(2)<ECD.SCRN.NO,5>=IVC.ADDR4
   SCV.REC(28)<ECD.SCRN.NO>=IVC.ATTENTION
   SCV.REC(6)<ECD.SCRN.NO>=IVC.JOB.NO
   SCV.REC(7)<ECD.SCRN.NO>=IVC.NO
   SCV.REC(8)<ECD.SCRN.NO>=IVC.DATE
   IF IVC.PO.NO = "" THEN IVC.PO.NO = JOB.CUST.PO;*T21219
   SCV.REC(9)<ECD.SCRN.NO>=IVC.PO.NO;*T21219
   SCV.REC(29)<ECD.SCRN.NO>=IVC.SHP.DATE
   IF IVC.PROC.DATE="" THEN
      IF IVC.PRT.DATE # "" THEN
         SCV.REC(10)<ECD.SCRN.NO>="PRINTED"
         SCV.REC(11)<ECD.SCRN.NO>=IVC.PRT.DATE
      END
   END ELSE
      SCV.REC(10)<ECD.SCRN.NO>="PROCESSED"
      SCV.REC(11)<ECD.SCRN.NO>=IVC.PROC.DATE
   END
   GOSUB SET.LINE.ITEMS        ;* T27232
   SCV.REC(18)<ECD.SCRN.NO>=INVOICE.TOTAL
* T25764 v Define screen
*T28664 v
   MAT TERMS.REC = ''
   IF IVC.TERMS # "" THEN
     MATREAD TERMS.REC FROM TERMS,CONO:IVC.TERMS ELSE
*       MAT TERMS.REC = ""
        TERMS.DESC = "???????????"
     END
   END ELSE TERMS.DESC = ''
*T28664 ^
   SCV.REC(40)<ECD.SCRN.NO>=IVC.TERMS
   SCV.REC(41)<ECD.SCRN.NO>=TERMS.DESC
   IVC.DUE.DATE = IVC.DATE + TERMS.DUE.DAYS
   SCV.REC(42)<ECD.SCRN.NO>=IVC.DUE.DATE
   SCV.REC(43)<ECD.SCRN.NO>=IVC.PRT.FLG<1,2>
* T25764 ^
   RETURN
*
*---- DISPLAY MULTI-LINE FIELDS
*
10000*
   START.REF.NO=1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
* IF START.REF.NO=CURR.REF.NO THEN RETURN
   CURR.REF.NO=START.REF.NO
   ECD.NUM=12;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=13;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=30;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=31;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=17;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
   ECD.NUM=34;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=7;CALL SCRN.EDIT
*         ECD.NUM=12;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=13;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=14;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=30;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=15;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=31;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=17;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
*         ECD.NUM=34;ECD.SUB.NUM=START.REF.NO;ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
*
*---- GET JOB SHIPPING INFORMATION
*
21000*
   JJURS=""; JSHIP=""; JCOST=""; JSALE=""
   JJCNT=0; JSCNT=0
   IF SAVE.JOB.SUBS="" THEN JJOBS=JOB.NO ELSE JJOBS=SAVE.JOB.SUBS:VM:JOB.NO
   PRE.BILL.BAL=""
   SHIP.WIP=0
   JCNT=COUNT(JJOBS,VM) + (JJOBS # "")
   FOR J=1 TO JCNT
      JB=JJOBS<1,J>
      CURR.JOB.NO=JB
      MATREAD JOB.REC FROM JOB, CONO:JB ELSE GOTO 21080
      ICNT=COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
      FOR IP=1 TO ICNT
         IF JOB.INV.NO<1,IP>[7,2]="PB" THEN
            PRE.BILL.BAL<1,J>="Y"
         END
      NEXT IP
      SHIP.WIP=SHIP.WIP + JOB.SP.WIP<1,2,1>
      DCNT=COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
      FOR D=1 TO DCNT
         SP.ID = CONO:JB:"!":JOB.SP.DEPT<1,D>:"!":JOB.SP.CCTR<1,D>:"!"
         FOR DS=1 TO JOB.SP.SEQ<1,D>
            MATREAD JSP.REC FROM JOB.SHIP, SP.ID:DS ELSE GOTO 21070
            LOCATE JSP.JURS IN JJURS<1>,1 SETTING FND ELSE FND=0
            IF FND=0 THEN
               JJCNT=JJCNT + 1
               JJURS<1,JJCNT>=JSP.JURS
            END
            LOCATE JSP.VIA IN JSHIP<1>,1 SETTING FND ELSE FND=0
            IF FND=0 THEN
               JSCNT=JSCNT + 1
               JSHIP<1,JSCNT>=JSP.VIA
               JCOST<1,JSCNT>=JSP.COST
               JSALE<1,JSCNT>=JSP.SALE
            END ELSE
               JCOST<1,FND>=JCOST<1,FND> + JSP.COST
               JSALE<1,FND>=JSALE<1,FND> + JSP.SALE
            END
21070    NEXT            DS
      NEXT D
21080 NEXT         J
   RETURN
*
*---- MATCH TAX JURISDICTIONS
*
22000*
   SHIP.AMT=0
   JJMAT=""; JSMAT=""
   LCNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
   FOR L=1 TO LCNT
      CATG=IVC.CHG.CAT<1,L>
      BEGIN CASE
         CASE CATG="TAX"
            J=IVC.TAX.JURS<1,L>
            LOCATE J IN JJURS<1>,1 SETTING FND ELSE FND=0
            IF FND > 0 THEN JJMAT<1,FND>="X"
         CASE CATG="SHP"
            SHIP.AMT=SHIP.AMT + IVC.AMOUNT<1,L>
            S=IVC.TAX.JURS<1,L>
            LOCATE S IN JSHIP<1>,1 SETTING FND ELSE FND=0
            IF FND > 0 THEN JSMAT<1,FND>="X"
      END CASE
   NEXT L
*
   MATCH.ERROR=0
   ERR=0
   FOR J=1 TO JJCNT UNTIL ERR
      IF JJMAT<1,J>="" THEN
         ERR=1
         MATCH.ERROR=1
         ERRMSG="Taxes not entered for all tax jurisdictions on job"
         GOSUB 90000
      END
   NEXT J
   ERR=0
   FOR S=1 TO JSCNT UNTIL ERR
      IF JSMAT<1,S>="" THEN
         ERR=1
         MATCH.ERROR=1
         ERRMSG="Shipping charges not entered for all carriers used on job"
         GOSUB 90000
      END
   NEXT S
*
   IF SHIP.AMT > SHIP.WIP THEN
      MATCH.ERROR=1
      ERRMSG="Shipping charges entered exceeds WIP by ":OCONV((SHIP.AMT-SHIP.WIP),"MD2,$")
      GOSUB 90000
   END
   IF SHIP.WIP > SHIP.AMT THEN
      MATCH.ERROR=1
      ERRMSG="WIP exceeds shipping charges entered by ":OCONV((SHIP.WIP-SHIP.AMT),"MD2,$")
      GOSUB 90000
   END
   RETURN
* T27232 v
*
SET.LINE.ITEMS: 
*
   TCNT = 0 ; MATCH.ARR = ''
   REF.CNT=COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
   FOR REF=1 TO REF.CNT
      IF TOGGLE.FLAG = 1 AND ADD.SUBS = 0 THEN
         IF IVC.CHG.CODE<1,REF> # 'CMT' AND IVC.CHG.JOB<1,REF> # JOB.NO THEN CONTINUE
      END
      TCNT += 1
      MATCH.ARR<1,TCNT> = REF
      SCV.REC(13)<ECD.SCRN.NO,TCNT>=IVC.CHG.CODE<1,REF>
      SCV.REC(14)<ECD.SCRN.NO,TCNT>=IVC.QUANTITY<1,REF>
      SCV.REC(30)<ECD.SCRN.NO,TCNT>=IVC.UM<1,REF>
      SCV.REC(15)<ECD.SCRN.NO,TCNT>=IVC.DESC<1,REF>
      SCV.REC(31)<ECD.SCRN.NO,TCNT>=IVC.UNIT.PRICE<1,REF>
      SCV.REC(17)<ECD.SCRN.NO,TCNT>=IVC.AMOUNT<1,REF>
      IF IVC.CHG.CAT<1,REF>="TAX" THEN
         MATREAD TAX.REC FROM TAX, CONO:IVC.TAX.JURS<1,REF> ELSE
            MAT TAX.REC=""
            ERRMSG="CANNOT LOCATE TAX JURISDICTION - ":IVC.TAX.JURS
            GOSUB 90000
         END
         TMP.TAX.RATE<1,TCNT>=TAX.RATE
         TAX.REF=REF
         GOSUB 6400
         IF IVC.AMOUNT<1,REF>=TAMT THEN
            TMP.TAX.CALC<1,TCNT>="C"
         END ELSE
            TMP.TAX.CALC<1,TCNT>="E"
         END
      END
   NEXT REF
   IF (TOGGLE.FLAG) THEN REF.CNT = DCOUNT(SCV.REC(13)<ECD.SCRN.NO>, VM)
  *
   RETURN
* T27232 ^
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999*
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END
