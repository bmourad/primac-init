*COPY>CPYLIB>COM1
*****************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - FOH.TABLE.MAINT
* BY          - RHONDA PERRIN, COMPUTER BUSINESS ASSOCIATES
* DATE        - 05/10/85
* DESCRIPTION -
*ENNDOC
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*****************************************************************
*
*---- FILE EQUATES
*
*COPY>JCS.CPYLIB>FOH.TABLE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>CHAR
*
*---- SETUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN THE FILES
*
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG="M.SCREENS FILE IS MISSING"; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING"; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY FILE IS MISSING"; GOTO 93000
  OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG="FOH.TABLE IS MISSING"; GOTO 93000
*
*---- GET COMPANY NUMBER
*
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
*
*---- INITIALIZATION
*
  MAT EDIT.COM = ""
  TYP = 0
  CALL EDIT.SUB
  FILL = "#"
  MAT FTR.REC = ""
  MAT EDIT.COM.DRIVER = ""
  LINE.SPACE = 1
  PAGE.SIZE = 13
  BEGIN.PAGE = 7
  LINES = 0
  START.LINE = 0
  OLD.LINES = 0
  OPTION = ""
  FTR.CODE = ""
*
*---- GET SCREEN
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "FOH.TABLE.MAINT"
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=2;CALL SCRN.EDIT
*
*---- MAIN PROCESSING
*
100*
  LN = 1;OLD.START.LINE = 0;LINES = 0
  ECD.NUM = 1
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 99999
  IF NUM(ECD.RET.VALUE) THEN
    ERRMSG = "MUST HAVE AN ALPHA CHARACTER IN CODE"
    GOSUB 91000;GOTO 100
  END
  FTR.CODE = ECD.RET.VALUE
  * T26126 v
  MATREADU FTR.REC FROM FOH.TABLE,CONO:FTR.CODE LOCKED
    ERRMSG = 'INDIRECT record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 100 
  END ELSE
  * T26126 ^
    MAT FTR.REC = ""
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 300
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END
  FTR.TYPE = "%"
  LINES = COUNT(FTR.QTY,VM) + (FTR.QTY # '')
  GOSUB 400
*
*---- ENTER OPTION
*
  MORE = 0
  LOOP
    ECD.NUM = 2
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE       ;* T26126
        MORE = 1
      CASE OPTION = "A"
        LINES = COUNT(FTR.QTY,VM) + (FTR.QTY # "")
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 300
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 400
      CASE OPTION = "S"
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 400
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 400
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 400
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 400
      * T25978 ^
      CASE OPTION = "C"
        GOSUB 500
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 301
        END
        IF LNO < LINES THEN
          OLD.START.LINE = 0
        END
        GOSUB 400
      CASE OPTION = "D"
        GOSUB 500
        IF LNO THEN
          LN = LNO
          FTR.QTY = DELETE(FTR.QTY,1,LN,0)
          FTR.PCT = DELETE(FTR.PCT,1,LN,0)
          LINES = COUNT(FTR.QTY,VM) + (FTR.QTY # '')
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 400
      CASE OPTION = "F"
        MATWRITE FTR.REC ON FOH.TABLE,CONO:FTR.CODE
        MORE = 1
    END CASE
  WHILE MORE = 0 DO REPEAT
  MAT SCV.REC = ""
  ECD.ACTION = 6;CALL SCRN.EDIT
  GOTO 100
*
*---- GET VALUES FROM FILE
*
300*
  GOSUB 400
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
301*
  IF LN = 1 THEN
    FROM.QTY = 0
  END ELSE
    FROM.QTY = FTR.QTY<1,LN-1> + 1
    IF FROM.QTY > 999999999 THEN 
      VALUE = ""
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 399
    END
  END
  P_X  = 6 ; P_Y = SLN ; P_VALUE = OCONV(FROM.QTY,"MD2") "R#13" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
302*
  FILL = "#"; SCALER = 2
  X = 22; Y = SLN; TYP = 4; MAXL = 13; O.R = "O"; MAXV = "999999999"; MINV = 1
  DEFAULT = OCONV(FTR.QTY<1,LN>, "MD2"); HMSG = "ENTER TO QTY FOR RANGE"
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = ""
      IF OPTION = "C" THEN GOTO 302
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 399
    CASE VALUE = "END"
      IF FTR.PCT<1,LN> = "" THEN
        P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
        P_X  = 22 ; P_Y = SLN ; P_VALUE = OCONV(FTR.QTY<1,LN>, "MD2") "R#13" ; P_OPT = ""
        P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(FTR.PCT<1,LN>, "MD2") "R#8"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      GOTO 399
    CASE VALUE # ""
      IF VALUE < FROM.QTY THEN
        ERRMSG = '"TO" QTY IS LESS THAN "FROM" QTY'
        GOSUB 91000
        GOTO 302
      END
      FTR.QTY<1,LN> = VALUE
  END CASE
303*
  X = 38; Y = SLN; TYP = 4; MAXL = 10; MAXV = ""; MINV = ""; SCALER = 2
  DEFAULT = OCONV(FTR.PCT<1,LN>, "MD2"); HMSG = "ENTER FACTORY OVERHEAD PERCENTAGE"
  IF FTR.PCT<1,LN> = "" THEN O.R = "R" ELSE O.R = "O"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 302
  IF VALUE = "" THEN GOTO 303
  IF LN # 1 AND VALUE > FTR.PCT<1,LN-1> THEN
    ERRMSG = "CURRENT FACTORY OVERHEAD PERCENT SHOULD BE LESS THAN PREVIOUS PERCENT"
    GOSUB 91000
    GOTO 303
  END
  FTR.PCT<1,LN> = VALUE
399*
  LINES = COUNT(FTR.PCT,VM) + (FTR.PCT # '')
  RETURN
*
*---- SCROLL ROUTINE
*
400*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 499
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF N = 1 THEN
      FROM.QTY = 0
    END ELSE
      FROM.QTY = FTR.QTY<1,N-1> + 1
    END
    P_X  = 6 ; P_Y = SLN ; P_VALUE = OCONV(FROM.QTY, "MD2") "R#13" ; P_OPT = ""
    P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(FTR.QTY<1,N>, "MD2") "R#13"
    P_X  := AM:38 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(FTR.PCT<1,N>, "MD2") "R#10"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
499*
  RETURN
*
*---- GET LINE NUMBER
*
500*
  GOSUB 400
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  ECD.NUM = 21; ECD.ACTION = 4; CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
*
*---- CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
*      PRINT @(-1)
END
