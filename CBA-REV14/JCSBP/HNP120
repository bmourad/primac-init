*********************************************************************
* REVISION - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM   - PRIMAC
* SOURCE   - JCSBP
* PROGRAM  - HNP120
* AUTHOR   - JIHAD YAMOUT , COMPUTER BUSINESS ASSOCIATES
* DATE     - 03/08/87
* DESCRIPTION
* This program runs in conjunction with the PRIMAC Network Processor.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM.FM
*COPY>JCS.CPYLIB>PNP.LOG
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>EMPLOYEE
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>CATEGORY
*COPY>JCS.CPYLIB>FACTOR
*COPY>JCS.CPYLIB>DAILY.TIME.MATL
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- GET PARAMETER
*
    DIM INP.REC(20)
    EQU EMP       TO INP.REC(1)
    EQU SHIFT     TO INP.REC(2)
    EQU DV        TO INP.REC(3)
    EQU DP        TO INP.REC(4)
    EQU CTR       TO INP.REC(5)
    EQU OP        TO INP.REC(6)
    EQU ACTC      TO INP.REC(7)
    EQU COMC      TO INP.REC(8)
    EQU IMP       TO INP.REC(9)
    EQU JB        TO INP.REC(10)
    EQU ST        TO INP.REC(11)
    EQU PROD      TO INP.REC(12)
    EQU QTY       TO INP.REC(13)
    EQU FCT       TO INP.REC(14)
    EQU TYPE      TO INP.REC(15)
    EQU R.S.ID    TO INP.REC(16)
    EQU SQTY      TO INP.REC(17)
    EQU LQTY      TO INP.REC(18)
    MAT INP.REC = ""
*
*--- 
*
    DIM WH.REC(5)
    EQU WH.DP       TO WH.REC(1)
    EQU WH.WHSE     TO WH.REC(2)
    MAT WH.REC = ""
*
*---- OPEN ALL FILES
*
    OPEN "","CONTROL" TO CONTROL ELSE STOP
    OPEN "","COMPANY" TO COMPANY ELSE STOP
    OPEN "","DIVISION" TO DIVISION ELSE STOP
    OPEN "","DEPARTMENT" TO DEPARTMENT ELSE STOP
    OPEN "","COST.CNTR" TO COST.CNTR ELSE STOP
    OPEN "","OPERATION" TO OPERATION ELSE STOP
    OPEN "","EMPLOYEE" TO EMPLOYEE ELSE STOP
    OPEN "","JOB" TO JOB ELSE STOP
    OPEN "","CUSTOMER" TO CUSTOMER ELSE STOP
    OPEN "","INVENTORY" TO INVENTORY ELSE STOP
    OPEN "","INV.WHSE" TO INV.WHSE ELSE STOP
    OPEN "","DAILY.TIME.MATL" TO DAILY.TIME.MATL ELSE STOP
    OPEN "","JOB.TIME" TO JOB.TIME ELSE STOP
    OPEN "","PNP.LOG" TO PNP.LOG ELSE STOP
    OPEN "","CATEGORY" TO CATEGORY ELSE STOP
    OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE STOP
    OPEN "","FACTOR" TO FACTOR ELSE STOP
*
    READV CONO FROM CONTROL,"MASTER",1 ELSE STOP
    MAT PNPL.REC = ""
    PROMPT ""
*
*---- MAIN PROCESSING
*
100*
    MAT INP.REC = "" ; NEW.REC = 0
*    DUMMY = OCONV(0,"U80E0")
    ECHO OFF
    INPUT MSG:
*    DUMMY = OCONV(0,"U70E0")
    ECHO ON
    MSG = MSG[6,100]
*
*---- GET ALL INPUT FIELDS
*
    EMP = MSG[1,4];SHIFT = MSG[5,1];DV = MSG[6,2];DP = MSG[8,5]
    CTR = MSG[13,3];OP = MSG[16,4];ACTC = MSG[20,4]
    COMC = MSG[24,1] ; IMP = ICONV(MSG[25,8], "MD2")
    JB = MSG[33,8] ; ST = MSG[41,6] ; PROD = MSG[47,15]
    QTY = ICONV(MSG[62,12],"MD2");FCT = ACTC[2,1];TYPE = ACTC[1,1]
    ST = ST[1,2]:":":ST[3,2]:":":ST[5,2]
    IF DV = "00" THEN DV = ""
    PRINTER ON
    PRINT MSG
    FOR XXX = 1 TO 15
       INP.REC(XXX) = TRIM(INP.REC(XXX))
       PRINT INP.REC(XXX)
    NEXT XXX
    PRINTER OFF
    PRINTER CLOSE
    MATREAD EMP.REC FROM EMPLOYEE,CONO:EMP ELSE
       ERR ="01";GOSUB 90000;GOTO 100
    END
    IF SHIFT < 1 AND SHIFT > 5 THEN
       ERR = "02" ; GOSUB 90000 ; GOTO 100
    END
    IF ICONV(ST,"MTS") = 86400 THEN
       SDATE = DATE()+1
       ST = OCONV("0", "MTS")
    END
    SDATE = DATE()
    IF SHIFT = "3" AND ST[1,2] >= 22 THEN
       SDATE = DATE()+1
    END
    MATREAD PNPL.REC FROM PNP.LOG,CONO:EMP ELSE
       BEGIN CASE
       CASE OP # "LONN"
          ERR = "14" ; GOSUB 90000 ; GOTO 100
       CASE OP = "LOFF"
          ERR = "16" ; GOSUB 90000 ; GOTO 100
       CASE 1
          MAT PNPL.REC = "" ; NEW.REC = 1
          PNPL.DIV = DV
          PNPL.DEPT = DP
          PNPL.SHIFT = SHIFT
          PNPL.LOGON.DATE = SDATE
          PNPL.LOGON.TIME = TIME()
          MATWRITE PNPL.REC ON PNP.LOG,CONO:EMP
          ERR = "00" ; GOSUB 90000 ; GOTO 100
       END CASE
    END
    LOGON.TIME = OCONV(PNPL.LOGON.TIME, "MTS")
    IF NEW.REC = 0 AND OP = "LONN" THEN
       ERR = "15" ; GOSUB 90000 ; GOTO 100
    END
    IF OP = "LOFF" THEN
       DELETE PNP.LOG , CONO:EMP
       ERR = "00" ; GOSUB 90000 ; GOTO 100
    END
    IF SHIFT # PNPL.SHIFT THEN
       ERR = "02" ; GOSUB 90000 ; GOTO 100
    END
    IF NOT(NUM(IMP)) THEN
       ERR = "09" ; GOSUB 90000 ; GOTO 100
    END
    IF NOT(NUM(QTY)) THEN
       ERR = "13" ; GOSUB 90000 ; GOTO 100
    END
    IF FCT < 0 OR FCT > 2 THEN
       ERR = "07" ; GOSUB 90000 ; GOTO 100
    END
    IF TYPE # "0" OR (TYPE < 7 AND TYPE > 9) THEN
       ERR = "07" ; GOSUB 90000 ; GOTO 100
    END
    IF QTY # 0 AND PROD = "" THEN
       ERR = "12" ; GOSUB 90000 ; GOTO 100
    END
    IF PROD # "" AND QTY = 0 THEN
       ERR = "13" ; GOSUB 90000 ; GOTO 100
    END
    IF DV = "" AND NEW.REC = 0 THEN DV = PNPL.DIV
    IF DP = "" AND NEW.REC = 0 THEN DP = PNPL.DEPT
    MATREAD DIV.REC FROM DIVISION , CONO:DV ELSE
       ERR = "03" ; GOSUB 90000 ; GOTO 100
    END
    MATREAD DEPT.REC FROM DEPARTMENT , CONO:DP ELSE
       ERR = "04" ; GOSUB 90000 ; GOTO 100
    END
    LOCATE DP IN DIV.DEPT<1>,1 SETTING DLOC ELSE
       ERR = "04" ; GOSUB 90000 ; GOTO 100
    END
    MATREAD CCTR.REC FROM COST.CNTR, CONO:CTR ELSE
       ERR = "05" ; GOSUB 90000 ; GOTO 100
    END
    IF CCTR.DEPT # DP THEN
       ERR = "05" ; GOSUB 90000 ; GOTO 100
    END
    IF CCTR.TYPE='F' THEN
       ERR = "05" ; GOSUB 90000 ; GOTO 100
    END
    LOCATE CTR IN DEPT.CCTRS<1>,1 SETTING CLOC ELSE
       ERR = "05" ; GOSUB 90000 ; GOTO 100
    END
    LOCATE OP IN CCTR.OPER<1>,1 SETTING OLOC ELSE
       ERR = "06" ; GOSUB 90000 ; GOTO 100
    END
    MATREAD OPER.REC FROM OPERATION, CONO:OP ELSE
       ERR = "06" ; GOSUB 90000 ; GOTO 100
    END
    MATREAD FCTR.REC FROM FACTOR, CONO :"0":FCT+1 ELSE
       ERR = "07" ; GOSUB 90000 ; GOTO 100
    END
    MATREAD JOB.REC FROM JOB , CONO:JB ELSE
       MAT JOB.REC = ''
       FND = 0
       IF NUM(JB) THEN
          IF JB < J.CUTOFF.NUM THEN FND = 1
       END ELSE
          JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
          FOR L = 1 TO JC.CNT WHILE FND = 0
             PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)
             IF J.CUTOFF.PREFIX<1,L> = JB[1,PREFX.LEN] THEN
                CHK.VALUE = JB[PREFX.LEN+1,LEN(JB)-PREFX.LEN]
                IF NUM(CHK.VALUE) THEN
                   IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1
                END
             END
          NEXT L
       END
       IF FND = 1 THEN
          S.OSJ<1,SC> = 1
          JOB.DIV = DV
          JOB.DEPT = DP
          JOB.TYPE = TYPE
       END ELSE
          ERR = "10" ; GOSUB 90000 ; GOTO 100
       END
    END
    IF JOB.STATUS<1,1> = 9 THEN
       ERR = "10" ; GOSUB 90000 ; GOTO 100
    END
    IF JOB.TYPE # "R" AND TYPE # "0" THEN
       ERR = "07" ; GOSUB 90000 ; GOTO 100
    END
    IF JOB.DIV # DV THEN
       ERR = "03" ; GOSUB 90000 ; GOTO 100
    END
    IF JOB.DEPT # DP[1,LEN(JOB.DEPT)] THEN
       ERR = "04" ; GOSUB 90000 ; GOTO 100
    END
    BEGIN CASE
    CASE CCTR.OPER.TYPE<1,OLOC> = 'V' AND IMP + 0 = 0
       ERR = "09" ; GOSUB 90000 ; GOTO 100
    CASE CCTR.OPER.TYPE<1,OLOC> = 'U' AND IMP + 0 = 0
       ERR = "09" ; GOSUB 90000 ; GOTO 100
    CASE CCTR.OPER.TYPE<1,OLOC> # 'V' AND CCTR.OPER.TYPE<1,OLOC> # "U" AND IMP + 0 # 0
       ERR = "09" ; GOSUB 90000 ; GOTO 100
    CASE CCTR.OPER.HR.RATE<1,OLOC> > 0
    CASE DTM.JOB.TYPE<1,SC> = "N"
    CASE 1
       ERR = "05" ; GOSUB 90000 ; GOTO 100
    END CASE
    IF OPER.MATL.REQ = "Y" AND PROD = "" THEN
       ERR = "12" ; GOSUB 90000 ; GOTO 100
    END
    IF PROD # "" THEN
       WHSE = ""
       MATREAD WH.REC FROM CONTROL , CONO:"DEPT.WHSE" ELSE MAT WH.REC = ""
       IF WH.DP # "" THEN
          LOCATE DP IN WH.DP<1>,1 SETTING FNDW ELSE FNDW = 0
          IF FNDW THEN
             WHSE = WH.WHSE<1,FNDW>
          END
       END
       MATREAD INV.REC FROM INVENTORY , CONO:PROD ELSE
          ERR = "12" ; GOSUB 90000 ; GOTO 100
       END
       MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
          ERR = 12 ; GOSUB 90000 ; GOTO 100
       END
       WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # "")
       IF WHSE.CNT = 1 THEN WHSE = INV.WHSE.CODE<1,1>
       MATREAD IWH.REC FROM INV.WHSE, CONO:PROD:"!":WHSE ELSE
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END
       IF CATG.TRACK.QOH # "Y" AND (CATG.COST.TYPE = "FI" OR CATG.COST.TYPE = "LC") THEN
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END
       IF IWH.ON.HAND + 0 = 0 AND CATG.TRACK.QOH = "Y" THEN
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END
       IF INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS" THEN
          ICR.INV = "MD0";ICR.DV1 = 1;ICR.MT1 = INV.M.WT;ICR.DV2 = 1
          LQTY = INT(((INT(QTY/100)/ICR.DV1)*ICR.MT1)/ICR.DV2+0.5)
          SQTY = INT(QTY/100)
       END ELSE
          LQTY = QTY
          SQTY = ""
       END
       IF LQTY > IWH.ON.HAND AND CATG.TRACK.QOH = "Y" THEN
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END
       LOC.CNT = COUNT(IWH.LOC,VM) + (IWH.LOC # "")
       IF LOC.CNT > 1 THEN
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END ELSE
          LOC = IWH.LOC<1,1>
       END
       MATREAD IWLO.REC FROM INV.WHSE.LOC, CONO:PROD:"!":WHSE:"!":LOC ELSE
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END
       RS.CNT = COUNT(IWLO.R.S.ID,VM) + (IWLO.R.S.ID # "")
       IF RS.CNT > 1 THEN
          ERR = "13" ; GOSUB 90000 ; GOTO 100
       END ELSE
          R.S.ID = IWLO.R.S.ID<1,1>
       END
    END
    GOSUB 200
    ERR = "00" ; GOSUB 90000 ; GOTO 100
*
*---- UPDATE DAILY.TIME.MATL
*
200*
    READU TIME.ENT.SEQ FROM CONTROL,CONO:"DAILY.TIME" ELSE TIME.ENT.SEQ=10001
    CK.FLG=1
    LOOP
    READ CK.FLG FROM JOB.TIME,CONO:TIME.ENT.SEQ ELSE CK.FLG=""
    WHILE CK.FLG # "" DO
    TIME.ENT.SEQ=TIME.ENT.SEQ+1
    REPEAT
    SEQ=TIME.ENT.SEQ
    TIME.ENT.SEQ = TIME.ENT.SEQ + 1
    WRITE TIME.ENT.SEQ ON CONTROL,CONO:"DAILY.TIME"
    MATREADU DTM.REC FROM DAILY.TIME.MATL,CONO:EMP:"*":PNPL.LOGON.DATE:"*":PNPL.SHIFT ELSE
       MAT DTM.REC = ""
    END
    DP = COUNT(DTM.TYPE,VM) + (DTM.TYPE # "")+1
    DTM.DEPT<1,DP> = DP
    DTM.DIV<1,DP> = DV
    DTM.SEQ<1,DP> = SEQ
    DTM.TYPE<1,DP> = "T"
    DTM.JOB<1,DP> = JB
    DTM.CUST<1,DP> = JOB.CUST
    DTM.SPEC.CODE<1,DP> = SHIFT:TYPE:FCT
    DTM.CCTR<1,DP> = CTR
    DTM.OPER<1,DP> = OP
    DTM.SHIFT<1,DP> = SHIFT
    BEGIN CASE
    CASE TYPE = 0
       DTM.JOB.TYPE<1,DP> = "R"
    CASE TYPE = 7
       DTM.JOB.TYPE<1,DP> = "N"
    CASE TYPE = 8
       DTM.JOB.TYPE<1,DP> = "C"
    CASE TYPE = 9
       DTM.JOB.TYPE<1,DP> = "S"
    END CASE
    BEGIN CASE
    CASE FCT = 0
       DTM.TIME.CODE<1,DP> = 1
    CASE FCT = 1
       DTM.TIME.CODE<1,DP> = 2
    CASE FCT = 2
       DTM.TIME.CODE<1,DP> = 3
    END CASE
    IF DP = 1 THEN
       DTM.TIME.ST<1,DP> = LOGON.TIME[1,2]:LOGON.TIME[4,2]
    END ELSE
       DTM.TIME.ST<1,DP> = DTM.TIME<1,DP-1>
    END
    DTM.TIME<1,DP> = ST[1,2]:ST[4,2]
    ST.MM=DTM.TIME.ST<1,DP>[3,2]
    ST.HH=DTM.TIME.ST<1.DP>[1,2]
    UN=INT(((ST.MM*10)/6)+0.5)/100
    UN=ST.HH+UN
    DIFF.HRS=ICONV(UN,"MD2")
    END.MM=DTM.TIME<1,DP>[3,2]
    END.HH=DTM.TIME<1,DP>[1,2]
    UN=INT(((END.MM*10)/6)+0.5)/100
    UN=END.HH+UN
    UN=ICONV(UN,"MD2")
    IF DIFF.HRS > UN THEN UN=UN+2400
    DIFF.HRS=UN - DIFF.HRS
    BEGIN CASE
    CASE DTM.TIME.CODE<1,DP>=1
       DTM.REG.TIME<1,DP>=DIFF.HRS
       DTM.LAPS.TIME<1,DP>=DIFF.HRS
    CASE DTM.TIME.CODE<1,DP>=2
       DTM.OVR.TIME<1,DP>=DIFF.HRS
       DTM.LAPS.TIME<1,DP>=DIFF.HRS
    CASE 1
       DTM.DUB.TIME<1,DP>=DIFF.HRS
       DTM.LAPS.TIME<1,DP>=DIFF.HRS
    END CASE
    IF IMP # "" THEN
       DTM.IMP<1,DP> = IMP
    END
    DTM.PROD<1,DP> = PROD
    DTM.WHSE<1,DP> = WHSE
    DTM.LOC<1,DP> = LOC
    DTM.R.S.ID<1,DP> = R.S.ID
    DTM.SHEET<1,DP> = SQTY
    DTM.QTY<1,DP> = LQTY
    MATWRITE DTM.REC ON DAILY.TIME.MATL,CONO:EMP:"*":PNPL.LOGON.DATE:"*":PNPL.SHIFT
    RETURN
*
*---- PRINT ERRORS
*
90000*
    PRINT ERR
    RETURN
*
*---- END OF PROGRAM
*
99999*
    STOP
 END
