*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*********************************************************************
* REVISION    - [08.0]
* COPYRIGHT   - 1982 by C.B.A  (Vercom Software,Inc.)
* SYSTEM      - PRIMAC-JCS
* SOURCE      - JCS.BP
* PROGRAM     - JOB.INVOICE.SUMMARY.F4
* AUTHOR      - WALID YAMOUT, CBA
* DATE        - 06/18/84
* DESCRIPTION
*  This program will display all invoices, credit memos etc. for a
*  specified job. Summary level data is also displayed. Detail data
*  regarding specific invoice, credit memo etc. may be displayed for
*  items which still reside on system.
* COMMENT      - REVISED TO REFLECT JOB.STATUS '5' - "REOPENED"
*              - TASK #12907 (RRG)
*              - TASK #17928 (SFC) NEW TYPE OF XREF PROCESSING
*T22417 lanny 12/10/1997 * For Master/Sub Job always prompt for
*                          inclusion of subs.
*T24570 edvard 11/12/1999 * FIX DISPLAY PROBLEM IN INVOICE AREA. SEE CSF
*                           34759
*                           FIX IS ACTUALY IN SCRN.EDIT PROGRAM.
*T25016 edvard 04/04/2000 * SIMILAR PROBLEM AS THE ON ABOVE. IF USER TRYS 
*                           TO "RI" THEN ERROR MSG "OUT OF RANGE"
*                           POPS UP
*T25764 renee 07/26/2001 * Need to open TERMS file for
*                          INVOICE.MAINT.SUB.F4.
*T27139 epitka 12/26/2002 * CROSS CHECK JOB NO ON INVOICE
*T27236 adelgado 01/20/2003 * Fix to allow to view invoices with sub-job
*                             and not get an error. Redo T27139.
*T27232 adelgado 01/20/2003 * Allow to display invoice detail at the
*                             Master or Sub-Job level.
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>TAX
*COPY>JCS.CPYLIB>INVOICE
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COA
*COPY>JCS.CPYLIB>MASTER.TOT.REC          ;* T27236
  DIM MASTER.REC(JOB.REC.SIZE)           ;* T27236
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  MAT FILE.VARS = ""
  OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING"; GOTO 93000
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "CUSTOMER FILE IS MISSING"; GOTO 93000
  END
  OPEN "","DIVISION" TO DIVISION ELSE
    ERRMSG="DIVISION FILE IS MISSING"; GOTO 93000
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    ERRMSG="DEPARTMENT FILE IS MISSING"; GOTO 93000
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG="COST.CNTR FILE IS MISSING"; GOTO 93000
  END
  OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
    ERRMSG = "CUSTOMER.XREF FILE IS MISSING"; GOTO 93000
  END
  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE
    ERRMSG="JCS.SCREENS FILE IS MISSING"; GOTO 93000
  END
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000
  END
  OPEN "","PREFIX" TO PREFIX ELSE
    ERRMSG = "PREFIX FILE IS MISSING"; GOTO 93000
  END
  OPEN "","XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "XREF.DATA FILE IS MISSING"; GOTO 93000
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000
  END
  OPEN "","JOB.SHIP" TO JOB.SHIP ELSE
    ERRMSG = "JOB.SHIP FILE IS MISSING"; GOTO 93000
  END
  OPEN "","INVOICE" TO INVOICE ELSE
    ERRMSG = "INVOICE FILE IS MISSING"; GOTO 93000
  END
  OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE
    ERRMSG = "DAILY.INVOICE FILE IS MISSING"; GOTO 93000
  END
  OPEN "","TAX" TO TAX ELSE
    ERRMSG = "TAX FILE IS MISSING"; GOTO 93000
  END
  OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
    ERRMSG = "SHIP.VIA FILE IS MISSING"; GOTO 93000
  END
  OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
    ERRMSG = "INVOICE.CODE FILE IS MISSING"; GOTO 93000
  END
  OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
    ERRMSG = "INV.JOB.STATS FILE IS MISSING"; GOTO 93000
  END
  OPEN "","SALES.CODE" TO SALES.CODE ELSE
    ERRMSG = "SALES.CODE FILE IS MISSING"; GOTO 93000
  END
  OPEN "","COA" TO COA ELSE
    ERRMSG = "COA FILE IS MISSING"; GOTO 93000
  END
  OPEN "","COA" TO COA ELSE
    ERRMSG = "COA FILE IS MISSING"; GOTO 93000
  END
* T25764 v Open TERMS and SHERIDAN.SCREENS
  OPEN "","TERMS" TO TERMS ELSE ERRMSG = "TERMS FILE IS MISSING"; GOTO 93000
* T25764 ^
*
  MAT COMP.REC = ""
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
  MAT EDIT.COM = ""
  MAT EDIT.COM.DRIVER = ""
  MAT GEN.XREF.REC = ""
  DASHES = STR("-",80)
  ERRMSG = ""
  UNKNOWN = "????????????????????"
  DESC.START = 1
  IVC.START = 1
  IVC.NO = ""
  GXR.CO = CONO
  ECD.SCRN.CNT = 5
  ECD.SCRN.NAME<1> = "JOB.INVOICE.SUMMARY"
  ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"
  ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"
  ECD.SCRN.NAME<5> = "INV.ALLOC.MAINT"
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
100 MAT JOB.REC = ""
  MAT SCV.REC = ""
  SAVE.INV.JS.REC = ""
  ADD.SUBS = 0
  ECD.ACTION=6;CALL SCRN.EDIT
  ECD.NUM = 1
  ECD.VALDAT.CODE = "2"; ECD.VALDAT.FILE = JOB; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99999
    CASE ECD.RET.VALUE # "" AND ECD.VALDAT.ITEM = ""
      ERRMSG = "Job ":ECD.RET.VALUE:" is not on file" ; GOSUB 91000 ; GOTO 100
    CASE ECD.VALDAT.ITEM # ""
      FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
      JOB.NUM = ECD.RET.VALUE
      ECD.NUM = 5; GOSUB 20000; GOSUB 30000
    CASE ECD.RET.VALUE = ""
      JOB.NUM = ""; JOB.CUST = "" ;GOSUB 1100
      IF JOB.CUST # "" THEN GOSUB 10000
      IF JOB.NUM = "" THEN
        ERRMSG = "No jobs present for customer ":JOB.CUST
        GOSUB 91000; GOTO 100
      END ELSE
        ECD.NUM = 8; GOSUB 20000; GOSUB 30000
      END
    CASE 1
      ERRMSG = "* * INVALID SEQUENCE # * *"
      GOSUB 91000; GOSUB 100
  END CASE
500 ECD.NUM = 24
  SCV.REC(ECD.NUM)<1> = ""
  ECD.ACTION=4;CALL SCRN.EDIT
  REQUEST = ECD.RET.VALUE
  BEGIN CASE
    CASE REQUEST = "END" OR REQUEST = "E"
      IVC.START = 1 ; *T25016
      GOTO 100
    CASE REQUEST = "SD" AND DESC.CNT
      IF DESC.CNT > 4 THEN
        DESC.START = DESC.START + 4
        IF DESC.START > DESC.CNT THEN DESC.START = 1
        ECD.NUM = 14 ; ECD.SUB.NUM = DESC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
      END
    CASE REQUEST = "RI"
      GOSUB 3000
    CASE REQUEST = "SI" AND IVC.CNT
      IF IVC.CNT > 2 THEN
        IVC.START = IVC.START + 2
        IF IVC.START > IVC.CNT THEN IVC.START = 1
        ECD.NUM = 15;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 16;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 17;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 18;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 19;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 20;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 21;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 22;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 23;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
        ECD.NUM = 30;ECD.SUB.NUM = IVC.START;ECD.ACTION = 7;CALL SCRN.EDIT
      END
  END CASE
  GOTO 500
1100 ECD.NUM = 6
  ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = CUSTOMER; ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "" THEN
    ECD.NUM = 7; ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1100
    GXR.NAME = "CUSTOMER"
    GXR.XREF = CUSTOMER.XREF
    GXR.FILE = CUSTOMER
    GXR.SRCH.ID = ECD.RET.VALUE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    ECD.ACTION=2;CALL SCRN.EDIT
    IF GXR.ID = "" THEN
      SCV.REC(7)<1> = ""
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      GOTO 1100
    END ELSE
      MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
        ERRMSG = "Cannot locate customer ":GXR.ID
        GOSUB 91000
        SCV.REC(7)<1> = ""
        ECD.ACTION = 3 ; CALL SCRN.EDIT
        GOTO 1100
      END
      JOB.CUST = GXR.ID
      SCV.REC(6)<1> = JOB.CUST
      SCV.REC(7)<1> = CUST.NAME
      ECD.ACTION = 3 ; CALL SCRN.EDIT
    END
  END ELSE
    IF ECD.RET.VALUE # "END" THEN
      JOB.CUST = ECD.RET.VALUE
      FOR I = 1 TO CUST.REC.SIZE; CUST.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
      ECD.NUM = 7
      SCV.REC(ECD.NUM)<1> = CUST.NAME
      ECD.ACTION=5;CALL SCRN.EDIT
    END
  END
  RETURN
3000*
  ECD.NUM = 31; ECD.MINV = IVC.START
  IF IVC.START + 4 > IVC.CNT THEN ECD.MAXV = IVC.CNT ELSE ECD.MAXV = IVC.START + 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 3999
  IF JOB.INV.CAT<1,ECD.RET.VALUE,1> = "PP" THEN
    ERRMSG = "This is a prepayment"; GOSUB 91000; GOTO 3999
  END
  MAT IVC.REC = ""
  IVC.NO = JOB.INV.NO<1,ECD.RET.VALUE>
  IVC.ID=CONO:IVC.NO
  IF JOB.INV.DATE<1,ECD.RET.VALUE> = "" THEN
    MATREAD IVC.REC FROM DAILY.INVOICE,IVC.ID ELSE
      ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"
      GOSUB 91000
      GOTO 3999
    END
  END ELSE
    MATREAD IVC.REC FROM INVOICE,IVC.ID THEN
* T27236 v   Redo logic, Must check if the job or sub-jobs are still
*            associated to the invoice.
      BAD.IVC = 1
      IF IVC.JOB.NO = JOB.NUM THEN
        BAD.IVC = 0
      END ELSE
        LOCATE JOB.NUM IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN
          BAD.IVC = 0
        END ELSE
          J.CNT = DCOUNT(JOB.SUBS<1>, VM)
          FOR JJ = 1 TO J.CNT UNTIL BAD.IVC = 0
            TMP.JOB = JOB.SUBS<1,JJ>
            IF IVC.JOB.NO = TMP.JOB THEN
              BAD.IVC = 0
            END ELSE
              LOCATE TMP.JOB IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN
                BAD.IVC = 0
              END
            END
          NEXT JJ
        END
      END
      IF BAD.IVC = 1 THEN
* T27236 ^
        MAT IVC.REC=''
        ERRMSG='This invoice number has been reused for a different job.'
        GOSUB 91000 ; GOTO 3999
      END
    END ELSE
      ERRMSG = "Cannot locate invoice on INVOICE file"
      GOSUB 91000;GOTO 3999
    END
  END
  BEGIN CASE
    CASE IVC.NO[7,2] = "CM"
      MENU = "CREDIT"
      ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB.F4"
    CASE IVC.NO[7,2] = "DM"
      MENU = "DEBIT"
      ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB.F4"
    CASE 1
      MENU = "INVOICE"
      ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB.F4"
  END CASE
  IF IVC.NO[7,2] = "PB" THEN
* T27232 v   The var. ADD.SUBS will piggy back on the var. PROG.FLAG.
    CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,"PREBILL","I":ADD.SUBS)
  END ELSE
    CALL INVOICE.MAINT.SUB.F4(CONO,JOB.NUM,IVC.NO,MENU,"I":ADD.SUBS)
* T27232 ^
  END
  IF (ADD.SUBS) THEN MAT JOB.REC = MAT MASTER.REC           ;* T27236
  ECD.SCRN.NO = 1
  ECD.ACTION=2;CALL SCRN.EDIT
  IF IVC.NO = "" THEN GOSUB 30001 ELSE ECD.ACTION = 3 ; CALL SCRN.EDIT
  IVC.START = 1
3999 RETURN
10000*
  GXR.NAME = "JOB"
  GXR.XREF = CUSTOMER
  GXR.FILE = JOB
  GXR.SRCH.ID = JOB.CUST
  CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
  ECD.ACTION = 2; CALL SCRN.EDIT
  IF GXR.ID # "" THEN
    MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
      ERRMSG = "Cannot locate job ":GXR.ID
      GOSUB 91000
    END
    JOB.NUM = GXR.ID
  END
  RETURN
20000 BEGIN CASE
    CASE JOB.STATUS<1,1> = ""
      SCV.REC(ECD.NUM)<1> = "BOOKED"
    CASE JOB.STATUS<1,1> = "9"
      SCV.REC(ECD.NUM)<1> = "CANCELLED"
    CASE JOB.STATUS<1,1> = "7"
      SCV.REC(ECD.NUM)<1> = "READY TO PURGE"
    CASE JOB.STATUS<1,1> = "8"
      SCV.REC(ECD.NUM)<1> = "WAS PURGED"
    CASE JOB.TRACK.DATE<1,10> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          SCV.REC(ECD.NUM)<1> = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "3"
          SCV.REC(ECD.NUM)<1> = "INVOICED"
        CASE JOB.STATUS<1,1> = "5" 
          SCV.REC(ECD.NUM)<1>="REOPENED"
        CASE 1
          SCV.REC(ECD.NUM)<1> = "COMPLETED"
      END CASE
    CASE JOB.TRACK.DATE<1,9> # ""
      BEGIN CASE
        CASE JOB.STATUS<1,1> = "1"
          SCV.REC(ECD.NUM)<1> = "IN PROCESS"
        CASE JOB.STATUS<1,1> = "5"
          SCV.REC(ECD.NUM)<1>="REOPENED"
        CASE 1
          SCV.REC(ECD.NUM)<1> = "INVOICED"
      END CASE
    CASE JOB.TRACK.DATE<1,8> # ""
      SCV.REC(ECD.NUM)<1> = "COSTED"
    CASE JOB.TRACK.DATE<1,7> # ""
      SCV.REC(ECD.NUM)<1> = "RDY-TO-BILL"
    CASE JOB.TRACK.DATE<1,6> # ""
      SCV.REC(ECD.NUM)<1> = "DELIVERED"
    CASE JOB.TRACK.DATE<1,5> # ""
      SCV.REC(ECD.NUM)<1> = "IN PROCESS"
    CASE JOB.TRACK.DATE<1,3> # ""
      SCV.REC(ECD.NUM)<1> = "IN PROCESS"
    CASE JOB.STATUS<1,1> = "1"
      SCV.REC(ECD.NUM)<1> = "IN PROCESS"
    CASE JOB.STATUS<1,1> = "3"
      SCV.REC(ECD.NUM)<1> = "INVOICED"
    CASE 1
      SCV.REC(ECD.NUM)<1> = "UNKNOWN"
  END CASE
  RETURN
30000*
  ADD.SUBS = 0
  IF JOB.SUBS # "" THEN
    ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
    IF ECD.RET.VALUE = "Y" THEN
      CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.JS.REC)
      ADD.SUBS = 1
    END
  END
  MAT MASTER.REC = MAT JOB.REC           ;* T27236
  MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
    MAT CUST.REC = ""
    CUST.NAME = UNKNOWN
  END
  SCV.REC(1)<1> = JOB.NUM
  SCV.REC(6)<1> = JOB.CUST
  SCV.REC(7)<1> = CUST.NAME
  SCV.REC(3)<1> = JOB.TRACK.DATE<1,2>
  SCV.REC(4)<1> = JOB.TRACK.DATE<1,4>
  SCV.REC(2)<1> = JOB.TYPE
  SCV.REC(8)<1> = JOB.TOT.COST
  SCV.REC(9)<1> = JOB.TOT.SALE
  SCV.REC(10)<1> = JOB.TOT.INV
  SCV.REC(13)<1> = JOB.TOT.BAL
  DESC.CNT = COUNT(JOB.DESC,VM) + (JOB.DESC # "")
  IF DESC.CNT THEN
    FOR I = 1 TO DESC.CNT ; SCV.REC(14)<1,I> = JOB.DESC<1,I> ; NEXT I
  END
30001*
  IVC.CNT = DCOUNT(JOB.INV.NO,VM)
  SCV.REC(15)<1> = ""
  SCV.REC(16)<1> = ""
  SCV.REC(17)<1> = ""
  SCV.REC(18)<1> = ""
  SCV.REC(19)<1> = ""
  SCV.REC(20)<1> = ""
  SCV.REC(21)<1> = ""
  SCV.REC(22)<1> = ""
  SCV.REC(23)<1> = ""
  SCV.REC(30)<1> = ""
  PRE.PAID = 0
  FOR I = 1 TO IVC.CNT
    MAT IVC.REC = ""
    IF JOB.INV.CAT<1,I,1> = "PP" THEN
      BILL.AMT = ""
      TAX.AMT = ""
      INV.AMT = ""
      PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>
      PRE.PAID = PRE.PAID + JOB.INV.BAL<1,I>
      GOTO 30005
    END
    IVC.ID=CONO:JOB.INV.NO<1,I>
    IF JOB.INV.DATE<1,I> = "" THEN
      MATREAD IVC.REC FROM DAILY.INVOICE,IVC.ID ELSE NULL
      GOSUB 40000
    END ELSE
      MATREAD IVC.REC FROM INVOICE,IVC.ID THEN
* T27236 v   Redo logic, Must check if the job or sub-jobs are still
*            associated to the invoice.
        BAD.IVC = 1
        IF IVC.JOB.NO = JOB.NUM THEN
          BAD.IVC = 0
        END ELSE
          LOCATE JOB.NUM IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN
            BAD.IVC = 0
          END ELSE
            J.CNT = DCOUNT(JOB.SUBS<1>, VM)
            FOR JJ = 1 TO J.CNT UNTIL BAD.IVC = 0
              TMP.JOB = JOB.SUBS<1,JJ>
              IF IVC.JOB.NO = TMP.JOB THEN
                BAD.IVC = 0
              END ELSE
                LOCATE TMP.JOB IN IVC.CHG.JOB<1>,1 SETTING JUNK THEN
                  BAD.IVC = 0
                END
              END
            NEXT JJ
          END
        END
        IF BAD.IVC = 1 THEN
* T27236 ^
          MAT IVC.REC=''
          IVC.PRT.DATE="PURGED"
        END
      END ELSE
        IVC.PRT.DATE = "PURGED"
      END
      GOSUB 50000
    END
30005*
    SCV.REC(15)<1,I> = I
    SCV.REC(16)<1,I> = JOB.INV.NO<1,I>
    SCV.REC(17)<1,I> = JOB.INV.DATE<1,I>
    SCV.REC(18)<1,I> = IVC.PRT.DATE
    SCV.REC(19)<1,I> = BILL.AMT
    SCV.REC(20)<1,I> = TAX.AMT
    SCV.REC(21)<1,I> = INV.AMT
    SCV.REC(22)<1,I> = PAID.AMT
    SCV.REC(23)<1,I> = JOB.INV.BAL<1,I>
    SCV.REC(30)<1,I> = IVC.PROC.MON
  NEXT I
  SCV.REC(11)<1> = PRE.PAID * (-1)
  SCV.REC(12)<1> = JOB.TOT.INV - JOB.TOT.BAL + PRE.PAID
  ECD.ACTION = 3 ; CALL SCRN.EDIT
  RETURN
*
*--- GET BALANCE AND TAX FROM DAILY.INVOICE
*
40000*
  BILL.AMT = ""
  TAX.AMT = ""
  INV.AMT = ""
  PAID.AMT = ""
  CODE.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
  FOR PTR = 1 TO CODE.CNT
    IF IVC.CHG.CODE<1,PTR> = "TOT" OR IVC.CHG.CODE<1,PTR> = "SUB" OR IVC.CHG.CODE<1,PTR> = "SUBT" OR IVC.CHG.CAT<1,PTR> = "CMT" THEN GOTO 49999
    IF ADD.SUBS = 0 AND JOB.NUM # IVC.CHG.JOB<1,PTR> THEN GOTO 49999
    IF JOB.INV.DATE<1,I> = "" AND JOB.INV.NO<1,I>[7,2] = "CM" THEN
      IVC.AMOUNT<1,PTR> = IVC.AMOUNT<1,PTR> * (-1)
    END
    IF IVC.CHG.CAT<1,PTR> = "TAX" THEN
      TAX.AMT = TAX.AMT + IVC.AMOUNT<1,PTR>
    END ELSE
      BILL.AMT = BILL.AMT + IVC.AMOUNT<1,PTR>
    END
49999*
  NEXT PTR
  INV.AMT = TAX.AMT + BILL.AMT
  RETURN
*
*--- CALCULATE INVOICE BALANCE, DUE AND TAX FROM JOB (FOR PURGED AND REG INVOICES)
*
50000*
  BILL.AMT = ""
  TAX.AMT = ""
  INV.AMT = ""
  PAID.AMT = ""
  CODE.CNT = COUNT(JOB.INV.CAT<1,I>,SVM) + (JOB.INV.CAT<1,I> # "")
  FOR PTR = 1 TO CODE.CNT
    IF JOB.INV.CAT<1,I,PTR> = "TOT" OR JOB.INV.CAT<1,I,PTR> = "SUB" OR JOB.INV.CAT<1,I,PTR> = "CMT" THEN GOTO 59999
    IF JOB.INV.CAT<1,I,PTR> = "TAX" THEN
      TAX.AMT = TAX.AMT + JOB.INV.AMT<1,I,PTR>
    END ELSE
      BILL.AMT = BILL.AMT + JOB.INV.AMT<1,I,PTR>
    END
59999*
  NEXT PTR
  INV.AMT = TAX.AMT + BILL.AMT
  PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>
  RETURN
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
