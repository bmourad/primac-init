*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.DRS.FILE.VARS
**************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* SOURCE         - DRSBP
* PROGRAM        - DRS.RESEQ.LIST.MAINT
* BY             - L. ROSS, COMPUTER BUSINESS ASSOCIATES
* DATE           - 09/16/91
* DESCRIPTION    -
* This program is used to resequence the CUST.TEMPLATE.LIST file SHIPTOS
* by selected fields within the SHIPTO.MASTER or TEMPLATE.DETAIL file CPYLIBS.
*
*T22154 stefanie 08/20/1997 * Fix Rev10B to Rev11 match problem.
*T24476 edvard 10/15/1999 *  edvard 10/13/1999 * System sorts items that
* are right justified  incorrectly. SORT.TYPE needs to be changed.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T28276 bmourad 11/23/2004 * Change verbage from TEMPLATE to JOB.
*T29032 cmyklebu 12/29/2006 * Move pgm from rev12 to rev14.
*ENDDOC
**************************************************************
*
*---- FILE EQUATES
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>DRS.FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>CUST.TEMPLATE.LIST
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>SHIPTO.MASTER
*COPY>JCS.CPYLIB>TEMPLATE.DETAIL
*COPY>CPYLIB>CHAR
*
*--- SETUP TABLES
*
  DIM SAV.REC(10)
  MAT SAV.REC =''
  TABL = 'SHM.SP.STORE':VM
  TABL = TABL:'SHM.SP.NAME':VM:'SHM.SP.ADDR1':VM:'SHM.SP.ADDR2':VM
  TABL = TABL:'SHM.SP.CITY':VM:'SHM.SP.STATE':VM:'SHM.SP.ZIP':VM
  TABL = TABL:'SHM.SP.ATTN':VM:'SHM.SP.CRSRT':VM:'SHM.SP.TAXJUR':VM
  TABL = TABL:'SHM.DT.NAME':VM:'SHM.DT.ADDR1':VM:'SHM.DT.ADDR2':VM
  TABL = TABL:'SHM.DT.CITY':VM:'SHM.DT.STATE':VM:'SHM.DT.ZIP':VM
  TABL = TABL:'SHM.DT.ATTN':VM:'SHM.DT.CRSRT':VM:'SHM.DT.TAXJUR':VM
  TABL = TABL:'SHM.DT.SHPVIA':VM:'SHM.SP.ZONE':VM
  TABL = TABL:'TDT.SP.INST.DATE':VM:'TDT.VER.NO':VM:'TDT.VER.DESC':VM
  TABL = TABL:'TDT.QTY':VM:'TDT.DIST.CODE':VM:'TDT.EDITION':VM
  TABL = TABL:'TDT.SHRKWRP':VM:'TDT.CART.LAB':VM:'TDT.SKID.LAB':VM
  TABL = TABL:'TDT.BOL':VM:'TDT.FOLD':VM:'TDT.PACK':VM:'TDT.STORE.QTY'
*
  TABL.FLD = '1':VM:'2':VM:'3':VM:'4':VM:'5':VM:'6':VM:'7':VM:'8':VM:'9':VM:'10':VM:'11':VM:'12':VM:'13':VM:'14':VM:'15':VM:'16':VM:'17':VM:'18':VM:'19':VM:'20':VM:'21':VM
  TABL.FLD = TABL.FLD:'31':VM:'33':VM:'34':VM:'35':VM:'36':VM:'37':VM:'38':VM:'39':VM:'40':VM:'41':VM:'42':VM:'43':VM:'44'
*
*24476 v
  TABL.JST = 'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM
  TABL.JST = 'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM
*TABL.JST = TABL.JST:'R':VM:'L':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R'
  TABL.JST = TABL.JST:'R':VM:'R':VM:'L':VM:'R':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'L':VM:'R'
*24476 ^
*
  TABL.LEN = '4':VM:'30':VM:'30':VM:'30':VM:'25':VM:'2':VM:'10':VM:'30':VM:'4':VM:'3':VM:'30':VM:'30':VM:'30':VM:'25':VM:'2':VM:'10':VM:'30':VM:'4':VM:'3':VM:'2':VM:'3':VM
  TABL.LEN = TABL.LEN:'5':VM:'8':VM:'30':VM:'10':VM:'5':VM:'8':VM:'1':VM:'1':VM:'1':VM:'1':VM:'4':VM:'6':VM:'4'
*
  TABL.FLE = '1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM:'1':VM
  TABL.FLE = TABL.FLE:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2':VM:'2'
*
  XLINES = DCOUNT(TABL,VM)
  SRT.FLD = ''
  SRT.FLE = ''
  SRT.SEQ = ''
  SRT.JST = ''
  SRT.LEN = ''
  SRT.NAM = ''
* PORT.NO = @TTY
  PORT.NO = 'TTY'
  CALL SYSVARS.SUB(PORT.NO)
* IND.POS = INDEX(PORT.NO,"/",1)
* IF IND.POS = 0 THEN
*    PORT.NO = PORT.NO[4,(LEN(PORT.NO)-3)]
* END ELSE
*    PORT.NO = PORT.NO[4,IND.POS-4]
* END
  DREC1 = 'D':AM
  DREC2 = AM:AM:AM
  SBY = 'BY'
  SDSND = '.DSND'
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING';GOTO 93000
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS FILE MISSING';GOTO 93000; *T29032
  OPEN '','SHIPTO.MASTER' TO SHIPTO.MASTER ELSE ERRMSG = 'SHIPTO.MASTER FILE MISSING';GOTO 93000
  OPEN '','TEMPLATE.DETAIL' TO TEMPLATE.DETAIL ELSE ERRMSG = 'TEMPLATE.DETAIL FILE MISSING';GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE MISSING';GOTO 93000
  OPEN '','CUST.TEMPLATE.LIST' TO CUST.TEMPLATE.LIST ELSE ERRMSG = 'CUST.TEMPLATE.LIST FILE MISSING';GOTO 93000
  OPEN '','CUST.SHIPTO.LIST' TO CUST.SHIPTO.LIST ELSE ERRMSG = 'CUST.SHIPTO.LIST FILE MISSING';GOTO 93000
  OPEN '','TEMP.FILE.':PORT.NO TO TEMP.FILE ELSE
    EXECUTE 'CREATE.FILE TEMP.FILE.':PORT.NO:' 7'  CAPTURING TRASH
    OPEN '','TEMP.FILE.':PORT.NO TO TEMP.FILE ELSE ERRMSG='TEMP.FILE.':PORT.NO:' MISSING';GOTO 93000
  END
  OPEN 'DICT','TEMP.FILE.':PORT.NO TO DTEMP.FILE ELSE ERRMSG = 'DICT TEMP.FILE MISSING';GOTO 93000
*
*---- INITIALIZATION
*
  MAT EDIT.COM = ""
  MAT EDIT.COM.DRIVER = ""
  TYP = 0
  CALL EDIT.SUB
  ERRMSG = ""
  UNKNOWN = "???????????????"
*
*---- GET COMPANY NUMBER
*
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
*
*---- PRINT SCREEN
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'DRS.RESEQ.LIST.MAINT'
  ECD.ACTION = 1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
  MAT SCV.REC = ''
  ECD.ACTION = 2;CALL SCRN.EDIT
*
*---- MAIN PROCESSING
  BEGIN.PAGE = 7
  PAGE.SIZE = 10
  LINE.SPACE = 1
5 *   GET CUSTOMER NO.
  LINES = 0
  LN = 0
  OLD.START.LINE = 0
  GOSUB 2000
  SRT.FLE = ''
  SRT.FLD = ''
  SRT.SEQ = ''
  SRT.JST = ''
  SRT.LEN = ''
  SRT.NAM = ''
  ECD.NUM = 1
  ECD.ACTION = 4;CALL SCRN.EDIT
  CUST.KEY = TRIM(ECD.RET.VALUE)
  NEW = 0
  BEGIN CASE
    CASE CUST.KEY = 'END'
      GOTO 99999
    CASE CUST.KEY # ''
      MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.KEY ELSE
        ERRMSG = 'CUSTOMER record does not exist.'
        GOSUB 91000
        GOTO 5
      END
    CASE 1
      GOTO 5
  END CASE
  SCV.REC(1) = CUST.KEY
  ECD.NUM = 2;SCV.REC(2) = CUST.NAME;ECD.ACTION = 5;CALL SCRN.EDIT
*
10 *  GET TEMPLATE NO.
*
  ECD.NUM = 3
  ECD.ACTION = 4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = 'END'
      GOTO 5
    CASE ECD.RET.VALUE # ''
      TEMP.NO = ECD.RET.VALUE
      MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, CONO:CUST.KEY:"!":TEMP.NO:"!001" ELSE
        ERRMSG = 'CUST.TEMPLATE.LIST record does not exist.'
        GOSUB 91000
        GOTO 10
      END
      IF CTL.STATUS<1,1> # '' THEN
        ERRMSG = "This customer's template list is frozen"
        GOSUB 91000
        GOTO 10
      END
    CASE 1
      GOTO 10
  END CASE
  ECD.NUM = 4;SCV.REC(4) = CTL.DESC;ECD.ACTION = 5;CALL SCRN.EDIT
*
  LOOP
    OPTION = 'A'
    LN = LINES + 1
    OLD.LINES = LINES
    GOSUB 100
  WHILE LINES > OLD.LINES AND LN < 10 DO
    GOSUB 10000
  REPEAT
  GOSUB 1000
  GOTO 5
*
*---- ENTER SCROLL DATA
*
100 * SORT SEQ
  GOSUB 10000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 1;P_Y = SLN;P_VALUE = OCONV(LN,'MD0Z') 'R#2';P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  X = 15;Y = SLN;TYP = 1;MAXL = 1;O.R = 'O'
  DEFAULT = SRT.SEQ<LN>
  IF DEFAULT = '' THEN DEFAULT = 'A'
  CALL EDIT.SUB
  VALUE = TRIM(VALUE)
  IF VALUE # 'END' AND VALUE # '' THEN
    IF VALUE = 'A' OR VALUE = 'D' THEN
      SRT.SEQ<LN> = VALUE
    END ELSE
      ERRMSG = 'Must be (A)scending or (D)escending'
      GOSUB 91000
      GOTO 100
    END
  END ELSE
*T22154 v
    IF OPTION = "I" THEN
      RETURN
    END ELSE
*T22154 ^
      IF SRT.SEQ<LN> # '' THEN
        P_X  = 15;P_Y = SLN;P_VALUE = SRT.SEQ<LN>;P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
        P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
    END;*T22154 <
    GOTO 199
  END
110 * FIELD NAME
  X =  31;Y = SLN;TYP = 1;MAXL = 25;O.R = 'O'
  DEFAULT = SRT.NAM<LN>
  CALL EDIT.SUB
  IF VALUE # 'END' THEN
    LOC = 0
    IF VALUE = '' THEN
      XLN = 1;OLD.ST.LINE = 0
      XMORE = 1
      LOOP
        GOSUB 11000
        ECD.NUM = 22
        ECD.ACTION = 4;CALL SCRN.EDIT
        BEGIN CASE
          CASE ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'E'
            VALUE = 'END'
            XMORE = 0
          CASE ECD.RET.VALUE # '' AND NUM(ECD.RET.VALUE)
            IF ECD.RET.VALUE >= XLN AND ECD.RET.VALUE <= XLINES THEN
              XLN = ECD.RET.VALUE
              VALUE = TABL<1,XLN>
              XMORE = 0
            END
          CASE ECD.RET.VALUE = 'S'
            XLN = XLN + PAGE.SIZE
            IF XLN > XLINES THEN XLN = 1
          * T25978 v
          CASE ECD.RET.VALUE = 'SR'
            XLN -= PAGE.SIZE
            IF XLN < 1 THEN XLN = 1
          CASE ECD.RET.VALUE = 'ST'
            XLN = 1
          CASE ECD.RET.VALUE = 'SB'
            XLN = XLINES
         * T25978 ^
        END CASE
      WHILE XMORE DO REPEAT
    END
    IF VALUE # 'END' THEN
      LOCATE VALUE IN TABL<1>,1 SETTING LOC ELSE LOC = 0
      IF LOC THEN
        SRT.JST<LN> = TABL.JST<1,LOC>
        SRT.FLD<LN> = TABL.FLD<1,LOC>
        SRT.LEN<LN> = TABL.LEN<1,LOC>
        SRT.NAM<LN> = TABL<1,LOC>
        SRT.FLE<LN> = TABL.FLE<1,LOC>
      END
    END ELSE DEL SRT.SEQ<LN>
    LINES = DCOUNT(SRT.SEQ,AM)
    OLD.START.LINE = 0
    GOSUB 10000
    IF NOT(LOC) AND VALUE # 'END' THEN
      ERRMSG = 'Invalid Field Name for specified file'
      GOSUB 91000
      GOTO 110
    END
  END ELSE
*T22154 v
    IF OPTION = "I" THEN
      GOTO 100
    END ELSE
*T22154 ^
      IF SRT.NAM<LN> # '' THEN
        P_X  = 31;P_Y = SLN;P_VALUE = SRT.NAM<LN> 'L#25';P_OPT = ""
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE DEL SRT.SEQ<LN>
      LINES = DCOUNT(SRT.SEQ,AM)
      OLD.START.LINE = 0
      GOSUB 10000
      GOTO 100
    END
  END;*T22154 <
199 *
  RETURN
*
*---- ENTER OPTIONS
*
1000 *
  MORE = 1
  LOOP
    ECD.NUM = 20
    ECD.ACTION = 4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = 'END' OR OPTION = 'E'
        MORE = 0
      CASE OPTION = 'A'
        IF LINES < 100 THEN
          LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 100
          WHILE LINES > OLD.LINES AND LN < 100 DO REPEAT
        END ELSE
          ERRMSG = '** OUT OF RANGE **'
          GOSUB 91000
        END
      CASE OPTION = 'C'
        ECD.NUM = 21
        ECD.ACTION = 4
        CALL SCRN.EDIT
        IF ECD.RET.VALUE # 'END' THEN
          IF ECD.RET.VALUE >= 1 AND ECD.RET.VALUE <= LINES THEN
            LN =ECD.RET.VALUE
            GOSUB 100
          END
        END
      CASE OPTION = 'D'
        ECD.NUM = 21
        ECD.ACTION = 4;CALL SCRN.EDIT
        IF ECD.RET.VALUE # 'END' THEN
          IF ECD.RET.VALUE >= 1 AND ECD.RET.VALUE <= LINES THEN
            FOR I = ECD.RET.VALUE TO LINES
              IF I < LINES THEN
                SRT.SEQ<I> = SRT.SEQ<I+1>
                SRT.FLE<I> = SRT.FLE<I+1>
                SRT.FLD<I> = SRT.FLD<I+1>
                SRT.JST<I> = SRT.JST<I+1>
                SRT.LEN<I> = SRT.LEN<I+1>
                SRT.NAM<I> = SRT.NAM<I+1>
              END ELSE
                SRT.SEQ = DELETE(SRT.SEQ,I,0,0)
                SRT.FLE = DELETE(SRT.FLE,I,0,0)
                SRT.FLD = DELETE(SRT.FLD,I,0,0)
                SRT.JST = DELETE(SRT.JST,I,0,0)
                SRT.LEN = DELETE(SRT.LEN,I,0,0)
                SRT.NAM = DELETE(SRT.NAM,I,0,0)
              END
            NEXT I
            LINES = DCOUNT(SRT.SEQ,AM)
            LN = 1
            OLD.START.LINE = 0
            GOSUB 10000
          END ELSE
            ERRSG = '** OUT OF RANGE **'
            GOSUB 91000
          END
        END
*T22154 v
      CASE OPTION = 'I'
        ECD.NUM = 21
        ECD.ACTION = 4;CALL SCRN.EDIT
        IF ECD.RET.VALUE # "END" THEN
          LN = ECD.RET.VALUE
          SRT.SEQ = INSERT(SRT.SEQ,LN,0,0,"")
          SRT.FLE = INSERT(SRT.FLE,LN,0,0,"")
          SRT.FLD = INSERT(SRT.FLD,LN,0,0,"")
          SRT.JST = INSERT(SRT.JST,LN,0,0,"")
          SRT.LEN = INSERT(SRT.LEN,LN,0,0,"")
          SRT.NAM = INSERT(SRT.NAM,LN,0,0,"")
          LINES = DCOUNT(SRT.SEQ,AM)
          OLD.START.LINE = 0
          GOSUB 10000
          GOSUB 100
          IF VALUE = "END" THEN
            SRT.SEQ = DELETE(SRT.SEQ,LN,0,0)
            SRT.NAM = DELETE(SRT.NAM,LN,0,0)
            SRT.FLE = DELETE(SRT.FLE,LN,0,0)
            SRT.FLD = DELETE(SRT.FLD,LN,0,0)
            SRT.JST = DELETE(SRT.JST,LN,0,0)
            SRT.LEN = DELETE(SRT.LEN,LN,0,0)
          END
          LINES = DCOUNT(SRT.SEQ,AM)
          LN = 1
          OLD.START.LINE = 0
          GOSUB 10000
        END
*T22154 ^
      CASE OPTION = 'F'
        IF LINES > 0 THEN
          GOSUB 3000
          MORE = 0
        END ELSE
          ERRMSG = 'Cannot FILE with no sort criteria '
          GOSUB 91000
        END
    END CASE
  WHILE MORE DO REPEAT
  RETURN
*
*---- CLEAR SCREEN AND RE-INITIALIZE
*
2000 *
  ECD.ACTION = 6;CALL SCRN.EDIT
  MAT SCV.REC = ""
  RELEASE
  RETURN
*
*---- RESEQUENCE CUST.TEMPLATE.LIST
*
3000 *
  CLEARFILE TEMP.FILE
  CLEARFILE DTEMP.FILE
  REC.CNT = 0
  LIN.CNT = ''
  RSEQ = '001'
  KEY = CONO:CUST.KEY:"!":TEMP.NO:"!"
  SEQ = '00001'
  LOOP
    MATREADU CTL.REC FROM CUST.TEMPLATE.LIST, KEY:RSEQ THEN
      FND = 1
      DS = DCOUNT(CTL.SHIPS,VM)
      IF RSEQ > 1 THEN
        LIN.CNT<RSEQ> = DS + LIN.CNT<RSEQ - 1>
      END ELSE
        LIN.CNT = DS
      END
      FOR S = 1 TO DS
        SHIPTO = CTL.SHIPS<1,S>
        MATREADU SHM.REC FROM SHIPTO.MASTER, CONO:SHIPTO ELSE
          MAT SHM.REC = ''
          RELEASE SHIPTO.MASTER, CONO:SHIPTO
        END
        MATREADU TDT.REC FROM TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO ELSE
          MAT TDT.REC = ''
          RELEASE TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO
        END
        TEMP.REC = ''
        FOR LN = 1 TO 10 UNTIL SRT.SEQ<LN> = ''
          IF SRT.FLE<LN> = 1 THEN
            TEMP.REC<LN> = SHM.REC(SRT.FLD<LN>)
          END ELSE
            TEMP.REC<LN> = TDT.REC(SRT.FLD<LN>)
          END
        NEXT LN
        TEMP.REC<11> = SEQ
        READU DUMMY FROM TEMP.FILE, KEY:RSEQ:"!":SHIPTO:"!":SEQ ELSE
          WRITE TEMP.REC ON TEMP.FILE, KEY:RSEQ:"!":SHIPTO:"!":SEQ
          REC.CNT = REC.CNT + 1
        END
        SEQ = SEQ + 1
        IF LEN(SEQ) < 5 THEN SEQ = STR('0',5-LEN(SEQ)):SEQ
      NEXT S
    END ELSE
      FND = 0
    END
    RELEASE CUST.TEMPLATE.LIST, KEY:RSEQ
    RSEQ = RSEQ + 1
    IF LEN(RSEQ) < 3 THEN RSEQ = STR('0',3-LEN(RSEQ)):RSEQ
  WHILE FND DO REPEAT
  IF REC.CNT # SEQ - 1 OR REC.CNT # LIN.CNT<DCOUNT(LIN.CNT,AM)> THEN
    ERRMSG = "Error exists in counts of SHIPTO's - ABORT!"
    GOSUB 91000
    GOTO 3999
  END
  CLEARFILE DTEMP.FILE
  FOR I = 1 TO 10 UNTIL SRT.SEQ<I> = ''
    WRITE DREC1:I:DREC2:SRT.LEN<I>:SRT.JST<I>:AM:'S' ON DTEMP.FILE, 'F':I
  NEXT I
  WRITE DREC1:'11':DREC2:'5L':AM:'S' ON DTEMP.FILE, 'F11'
*24476 v
  STMT = "SORT.TYPE 1 "  ; *C34153               
  STMT = STMT:AM:'SELECT TEMP.FILE.':PORT.NO:' ' 
*STMT = 'SELECT TEMP.FILE.':PORT.NO:' '
*24476 ^
  FOR I = 1 TO 10 UNTIL SRT.SEQ<I> = ''
    STMT = STMT:SBY
    IF SRT.SEQ<I> = 'D' THEN
      STMT = STMT:SDSND:' '
    END ELSE
      STMT = STMT:' '
    END
    STMT =STMT:'F':I:' '
  NEXT I
  STMT = STMT:SBY:' F11'
*24476 v
  STMT = STMT:AM:"SORT.TYPE 0" ;*C34153 
*24476 ^
  EXECUTE STMT CAPTURING TRASH
*---- NOW REBUILD CUST.TEMPLATE.LIST RECORD
  SHP.CNT = 0
  NLIN.CNT = ''
  NREC.CNT = 0
  RSEQ = '001'
  FND = 1
  LOOP
    READNEXT IKEY ELSE FND = 0
  WHILE FND DO
    IF SHP.CNT >= 100 THEN
      SHP.CNT = 0
      RSEQ = RSEQ + 1
      NLIN.CNT<RSEQ> = NLIN.CNT<RSEQ - 1>
      IF LEN(RSEQ) < 3 THEN RSEQ = STR('0',3-LEN(RSEQ)):RSEQ
    END
    READU TEMP.REC FROM TEMP.FILE, IKEY THEN
      LOC = INDEX(IKEY,'!',2)
      KEY = IKEY[1,LOC]:RSEQ
      SHIPTO = FIELD(IKEY,'!',4)
      MATREADU CTL.REC FROM TEMP.FILE, KEY ELSE MAT CTL.REC = ''
      CTL.SHIPS<1,-1> = SHIPTO
      SHP.CNT = SHP.CNT + 1
      NLIN.CNT<RSEQ> = NLIN.CNT<RSEQ> + 1
      MATWRITE CTL.REC ON TEMP.FILE, KEY
    END ELSE
      ERRMSG = 'Unable to read TEMP record ':IKEY:' - ABORT!'
      GOSUB 91000
      GOTO 3999
    END
    DELETE TEMP.FILE, IKEY
  REPEAT
  OLD = DCOUNT(LIN.CNT,AM)
  NEW = DCOUNT(NLIN.CNT,AM)
  IF NLIN.CNT<NEW> # LIN.CNT<OLD> THEN
    ERRMSG = 'New shipto count does not equal Original count - ABORT!'
    GOSUB 91000
    GOTO 3999
  END
*---- NOW WRITE TO LIVE FILE
  IF OLD > NEW THEN MAX = OLD ELSE MAX = NEW
  LOC = INDEX(KEY,"!",2)
  KEY = KEY[1,LOC]
  FOR I = 1 TO MAX
    RSEQ = I
    IF LEN(RSEQ) < 3 THEN RSEQ = STR('0',3-LEN(RSEQ)):RSEQ
    BEGIN CASE
      CASE I <= NEW
        MATREADU SAV.REC FROM CUST.TEMPLATE.LIST, KEY:RSEQ ELSE
          IF I <= OLD THEN
            ERRMSG = 'Error(s) exist in Original vs. Resequenced files - ABORT!'
            GOSUB 91000
            GOTO 3999
          END
        END
        MATREADU CTL.REC FROM TEMP.FILE, KEY:RSEQ ELSE
          IF I <= NEW THEN
            ERRMSG = 'Error(s) exist in Resequenced file - ABORT!'
            GOSUB 91000
            GOTO 3999
          END
        END
        IF RSEQ + 0 = 1 THEN
          CTL.STATUS<1,1> = SAV.REC(1)
          CTL.DESC = SAV.REC(3)
        END
        MATWRITE CTL.REC ON CUST.TEMPLATE.LIST, KEY:RSEQ
        RELEASE TEMP.FILE, KEY:RSEQ
      CASE 1
        MATREADU SAV.REC FROM CUST.TEMPLATE.LIST, KEY:RSEQ THEN
          DELETE CUST.TEMPLATE.LIST, KEY:RSEQ
        END
    END CASE
  NEXT I
3999 *
  RETURN
*
10000 *
  START.LINE=1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE=START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE=LINES
  IF START.LINE=OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE=START.LINE
  CNT=1
  FOR N=START.LINE TO LAST.LINE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
    P_X  := AM:1;P_Y := AM:SLN;P_VALUE := AM:N "R#2"
    P_X  := AM:15;P_Y := AM:SLN;P_VALUE := AM:SRT.SEQ<N> 'L#1'
    P_X  := AM:31;P_Y := AM:SLN;P_VALUE := AM:SRT.NAM<N> 'L#25'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT=CNT + 1
  NEXT N
  FOR M=CNT TO PAGE.SIZE
    SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0;P_Y = SLN;P_VALUE = "";P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001 *
  RETURN
*
11000 *
  ST.LINE = 1 + INT((XLN-1)/PAGE.SIZE) * PAGE.SIZE
  LT.LINE = ST.LINE + PAGE.SIZE - 1
  IF LT.LINE > XLINES THEN LT.LINE = XLINES
  IF ST.LINE = OLD.ST.LINE THEN GOTO 11001
  OLD.ST.LINE = ST.LINE
  FOR N = BEGIN.PAGE TO BEGIN.PAGE + PAGE.SIZE - 1
    P_X  = 28;P_Y = N;P_VALUE = "";P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  CNT = 1
  FOR N = ST.LINE TO LT.LINE
    XSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 28;P_Y = XSLN;P_VALUE = N 'R#2';P_OPT = ""
    P_X  := AM:31;P_Y := AM:XSLN;P_VALUE := AM:TABL<1,N> 'L#25'
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    XSLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 28;P_Y = XSLN;P_VALUE = "";P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11001 *
  RETURN
*
*---- CALLS FOR SYSCOM
*
91000 *
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 *
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999 *
* PRINT @(-1):
  DATA "Y"
  EXECUTE "DELETE.FILE TEMP.FILE.":PORT.NO CAPTURING TRASH
END
