*COPY>CPYLIB>COM1
*************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* PROGRAM     - JRS.MAINT
* SOURCE      - JCSBP
* BY          - W.R. MCKENZIE, COMPUTER BUSINESS ASSOCIATES
* DATE        - 05/24/88
* DESCRIPTION -
* This program updates the file JOB.RPT.SUM
* with a list of all Job numbers entered through this screen.
*
* MODS        - 9.28.90 JTP T#15420
*               TO DISPLAY SUB JOB NUMBER, CUST AND DESC THEN
*               PROMPT FOR CONSOLIDATE FLG.
*
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*************************************************************
*
*---- FILE EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN FILES
*
  OPEN "JCS.SCREENS" TO M.SCREENS ELSE ERRMSG="M.SCREENS FILE MISSING";GOTO 93000
  OPEN "COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
  OPEN "CONTROL" TO CONTROL ELSE ERRMSG="CONTROL FILE MISSING";GOTO 93000
  OPEN "CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE MISSING";GOTO 93000
  OPEN "JOB" TO JOB ELSE ERRMSG="JOB FILE MISSING";GOTO 93000
  OPEN "JOB.RPT.SUM" TO JOB.RPT.SUM ELSE ERRMSG="JOB.RPT.SUM FILE IS MISSING";GOTO 93000
*
  PROCREAD BUFFER ELSE
    ERRMSG = "Must be executed from a PROC"
    GOSUB 91000; GOTO 99999
  END
*
*---- GET COMPANY NUMBER
*
  CONO = ""
  SUB.RET=""
  CALL GET.CONO(CONO,MAT COMP.REC)
*      PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
*     PORT.NO = SYSTEM(18)
*PORT.NO = @TTY
*PORT.NO = PORT.NO[INDEX(PORT.NO,"/",1)+4,99]
*IND.POS = INDEX(PORT.NO,'/',1)
*IF IND.POS = 00 THEN
*   PORT.NO = PORT.NO[4,(LEN(PORT.NO)-3)]
*END ELSE
*   PORT.NO = PORT.NO[4,IND.POS-4]
*END
* PRINT @(1,23):"PORT.NO = ":PORT.NO:;INPUT XYZ:; *HELP
  PORT.NO = "TTY" ; CALL SYSVARS.SUB(PORT.NO)
*
*---- INITIALIZATION
*
  MAT EDIT.COM.DRIVER = ""
*      MAT EDIT.COM = ""
*
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "JRS.MAINT"
  ECD.ACTION = 1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*
*      TYP = 0; CALL EDIT.SUB; FILL = "#"
*
  LINE.SPACE = 1
  PAGE.SIZE = 16
  BEGIN.PAGE = 4
  OLD.START.LINE = 0
*
  MAT SCV.REC = ""
  ECD.ACTION = 2;CALL SCRN.EDIT
*
  READU JOB.SET.REC FROM JOB.RPT.SUM, PORT.NO ELSE NULL
  JOB.SET.REC = ""
  CONS = ""
  R.F.BILL = ""
  CUST.NUM = ""
  LINE.DESC = ""
  LINES = 0
*
*---- MAIN PROCESSING
*
  OPTION = "A"
  LOOP
    LN = LINES + 1
    OLD.LINES = LINES
    GOSUB 100
  WHILE LINES > OLD.LINES DO REPEAT
  LN = LINES
  GOSUB 200
*
*---- GET OPTIONS FOR LINES
*
  MORE = 1
  LOOP
    SCV.REC(5) = ""
    ECD.NUM = 5;ECD.ACTION = 4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE JOB.RPT.SUM, PORT.NO
        OPTION = "END"
        MORE = 0
      CASE OPTION = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 100
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 200
      CASE OPTION = "S"
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 200
      * T25978 v
      CASE OPTION = 'SR'
        LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 200
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 200
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 200
      * T25978 ^
      CASE OPTION = "C"
        GOSUB 300
        IF LNO THEN
          LN = LNO
          GOSUB 100
        END
      CASE OPTION = "D"
        GOSUB 300
        IF LNO THEN
          LN = LNO
          JOB.SET.REC = DELETE(JOB.SET.REC,LN,0,0)
          CONS = DELETE(CONS,LN,0,0)
          R.F.BILL = DELETE(R.F.BILL,LN,0,0)
          CUST.NUM = DELETE(CUST.NUM,LN,0,0)
          LINE.DESC = DELETE(LINE.DESC,LN,0,0)
          LINES = DCOUNT(JOB.SET.REC,AM)
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
          GOSUB 200
        END
      CASE OPTION = "F"
        REC.CNT = DCOUNT(JOB.SET.REC,AM)
        FOR I = 1 TO REC.CNT
          IF R.F.BILL<I> = "Y" THEN
            MATREADU JOB.REC FROM JOB, CONO:JOB.SET.REC<I> ELSE
              RELEASE JOB, CONO:JOB.SET.REC<I>
              GOTO 51
            END
            JOB.TRACK.DATE<1,7> = DATE()
            MATWRITE JOB.REC ON JOB, CONO:JOB.SET.REC<I>
          END
51        JOB.SET.REC<I>=JOB.SET.REC<I>:"!":CONS<I>:"!":R.F.BILL<I>
        NEXT I
        WRITE JOB.SET.REC ON JOB.RPT.SUM, PORT.NO
        MORE = 0
        OPTION = CONO
        OPTION<2> = CO.NAME
        OPTION<3> = PORT.NO
        OPTION<4> = "F"
      CASE OPTION ="U"
        REC.CNT = DCOUNT(JOB.SET.REC,AM)
        FOR I = 1 TO REC.CNT
          IF R.F.BILL<I> = "Y" THEN
            MATREADU JOB.REC FROM JOB, CONO:JOB.SET.REC<I> ELSE
              RELEASE JOB, CONO:JOB.SET.REC<I>
              GOTO 52
            END
            JOB.TRACK.DATE<1,7> = DATE()
            MATWRITE JOB.REC ON JOB, CONO:JOB.SET.REC<I>
          END
52        JOB.SET.REC<I>=JOB.SET.REC<I>:"!":CONS<I>:"!":R.F.BILL<I>
        NEXT I
        WRITE JOB.SET.REC ON JOB.RPT.SUM, PORT.NO
        MORE = 0
        OPTION = CONO
        OPTION<2> = CO.NAME
        OPTION<3> = PORT.NO
        OPTION<4> = "U"
      CASE 1
        ERRMSG = "INVALID OPTION";GOSUB 91000
    END CASE
  WHILE MORE DO REPEAT
* PRINT @(1,23):"OPTION = ": OPTION:;INPUT XYZ:; *HELP
  PROCWRITE OPTION
  GOTO 99990
*
*---- ENTER JOB NUMBER
*
100 IF OPTION = "A" AND LINES > 998 THEN
    ERRMSG =  "Sorry, cannot process more than 999 jobs at one time"
    GOSUB 91000; GOTO 199
  END
  GOSUB 200
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
101 X = 4;Y = SLN;TYP = 1;MAXL = 8
  IF JOB.SET.REC<LN> # "" THEN
    O.R = "O"
    DEFAULT = JOB.SET.REC<LN>
  END
  HMSG = "Enter a valid job number"
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE # "END"
    CASE OPTION = "A"
      JOB.SET.REC = DELETE(JOB.SET.REC,LN,0,0)
      CONS = DELETE(CONS,LN,0,0)
      CUST.NUM = DELETE(CUST.NUM,LN,0,0)
      R.F.BILL = DELETE(R.F.BILL,LN,0,0)
      LINE.DESC = DELETE(LINE.DESC,LN,0,0)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 199
    CASE 1
      P_X  = 4 ; P_Y = SLN ; P_VALUE = JOB.SET.REC<LN> "L#8" ; P_OPT = ""
      P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:CUST.NUM<LN> "R#6"
      P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.DESC<LN> "L#55"
      P_X  := AM:76 ; P_Y := AM:SLN ; P_VALUE := AM:CONS<LN> "L#1"
      P_X  := AM:78 ; P_Y := AM:SLN ; P_VALUE := AM:R.F.BILL<LN> "L#1"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 199
  END CASE
  MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
    ERRMSG = "Cannot locate job # ":VALUE
    GOSUB 91000;GOTO 101
  END
  LOCATE VALUE IN JOB.SET.REC,1 SETTING FND ELSE FND = LN
  IF FND <> LN THEN
    ERRMSG = "Job # ":VALUE:" already exists on line # ":FND
    GOSUB 91000;GOTO 101
  END
* CK 6.30.89 CSF 9250
  IF JOB.TYPE = 'N' THEN
    ERRMSG = 'Cannot print the report set for a non-chargeable job'
    GOSUB 91000;GOTO 101
  END
*
  SCV.REC(1)<1,LN>=LN
  JOB.SET.REC<LN> = VALUE
  SCV.REC(2)<1,LN>=VALUE
  CUST.NUM<LN> = JOB.CUST
  SCV.REC(3)<1,LN>=JOB.CUST
  LINE.DESC<LN>= JOB.DESC<1,1>
  SCV.REC(4)<1,LN>=JOB.DESC<1,1>
  IF JOB.SUBS # "" THEN
    C.FLG.LOC=LN
    M.JOB=VALUE
    GOSUB 400; * JTP T#15420 9.28.90
    TEMP.SLN=SLN
    LINES = DCOUNT(JOB.SET.REC,AM)
    GOSUB 200
    SLN=TEMP.SLN
    IF ECD.RET.VALUE="END" THEN
      LINES=OLD.LINES
      GOTO 101
    END
  END ELSE
    P_X  = 13 ; P_Y = SLN ; P_VALUE = CUST.NUM<LN> "L#30" ; P_OPT = ""
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.DESC<LN> "L#55"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
102 IF JOB.SUBS = "" THEN
    CONS<LN> = "N"
    SCV.REC(8)<1,LN>="N"
    P_X  = 76 ; P_Y = SLN ; P_VALUE = CONS<LN> "L#1" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 104
  END
104 X=78;Y=SLN;TYP=8
  IF R.F.BILL<LN> # "" THEN
    O.R = "O"
    DEFAULT = R.F.BILL<LN>
  END
  HMSG = "Is job ready for billing (Y/N)"
  CALL EDIT.SUB
  IF VALUE = "END" THEN
    LINES=OLD.LINES
    GOTO 101
  END
  R.F.BILL<LN> = VALUE
  SCV.REC(9)<1,LN>=VALUE
  LINES = DCOUNT(JOB.SET.REC,AM)
199 RETURN
*
*---- SCROLL JOBS
*
200*
  START.LINE = 1 + INT((LN - 1) / PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE AND NOT(SUB.RET) THEN
    GOTO 299
  END ELSE
    SUB.RET=0
  END
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR L = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(L - 1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = L "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.SET.REC<L> "L#8"
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:CUST.NUM<L> "L#30"
    P_X  := AM:20 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.DESC<L> "L#55"
    P_X  := AM:76 ; P_Y := AM:SLN ; P_VALUE := AM:CONS<L> "L#1"
    P_X  := AM:78 ; P_Y := AM:SLN ; P_VALUE := AM:R.F.BILL<L> "L#1"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT L
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M - 1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
299 RETURN
*
*---- GET LINE NUMBER
*
300 GOSUB 200
  ECD.NUM = 6
  ECD.MINV = OLD.START.LINE
  ECD.MAXV = LAST.LINE
  SCV.REC(6) = ""
  ECD.ACTION = 4;CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
400 * SUB JOBS DISPLAY  JTP 9.28.90 T#15420
*
  SUB.CNT = DCOUNT(JOB.SUBS,VM)
  IF SUB.CNT > 0 THEN
    ECD.ACTION=6;CALL SCRN.EDIT
  END
  P_X  = 3 ; P_Y = 21 ; P_VALUE = "Sub Job List for Master Job # ":M.JOB ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LP.CNT=0
  MAT SCV.REC = ""
  LOOP
    LP.CNT=LP.CNT+1
  UNTIL LP.CNT > SUB.CNT DO
    ECD.NUM=2;ECD.SUB.NUM=LP.CNT
    SCV.REC(2)<1,ECD.SUB.NUM>=JOB.SUBS<1,LP.CNT>
    READV SUB.CUST FROM JOB,CONO:JOB.SUBS<1,LP.CNT>,5 ELSE SUB.CUST = "????"
    SCV.REC(3)<1,ECD.SUB.NUM>=SUB.CUST
    READV SUB.DESC FROM JOB,CONO:JOB.SUBS<1,LP.CNT>,16 ELSE SUB.DESC="?????"
    SCV.REC(4)<1,ECD.SUB.NUM>=SUB.DESC<1,1>
    SCV.REC(1)<1,ECD.SUB.NUM>=LP.CNT
    ECD.ACTION=5;ECD.NUM=1;CALL SCRN.EDIT
  REPEAT
  ECD.ACTION=7;ECD.NUM=2;ECD.SUB.NUM=1;CALL SCRN.EDIT
  ECD.ACTION=7;ECD.NUM=3;ECD.SUB.NUM=1;CALL SCRN.EDIT
  ECD.ACTION=7;ECD.NUM=4;ECD.SUB.NUM=1;CALL SCRN.EDIT
  ECD.NUM=8;ECD.SUB.NUM=1
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "E" AND ECD.RET.VALUE # "END" THEN
    CONS<LN> = ECD.RET.VALUE
    SCV.REC(8)<1,LN>=ECD.RET.VALUE
  END
  ECD.ACTION=6;CALL SCRN.EDIT
  SUB.RET=1
  P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
499 *
  RETURN
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000 ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
  GOTO 99999
99990 *
  ECD.ACTION = 99 ; CALL SCRN.EDIT
99999 END
