*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - CCTR.PRICE.CHANGE
* BY          - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE        - 04/11/84
* DESCRIPTION -
* TASK 20305 JR ALLOW CHANGE FROM OR TO ZERO
******* renee 08/18/1997 * Adding changes done in this program in Rev10b to
*                          Rev11 for task 21250 (see below).
*T21250 lanny 11/21/1996 * Issue warning to user when filing a 'RA' type
*                          chg when price entered is zero.
*T21250 diane 02/03/1998 * FIX GUI
*T22744 lanny 04/15/1998 * Only chg global on 'RA' type if non-null
*                          value entered.
*T26073 lanny 08/01/2001 * If user mistakenly does an 'AP' for say 5% and
*                          later wants to change back, he cannot enter the
*                          correct % which is 'SP' 4.7621%. Need 4 decimals
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*********************************************************************
*ENDDOC
*
*--- INSERT EQUATES
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
  DIM STAND.REC(10)
  EQU STD.DESC TO STAND.REC(1)
  EQU STD.REPL TO STAND.REC(2)
  EQU STD.CHAN TO STAND.REC(3)
  EQU STD.PCNT TO STAND.REC(4)
  EQU STD.OPER TO STAND.REC(5)
  EQU STD.ALL  TO STAND.REC(6)
  EQU STD.TYPE TO STAND.REC(7)
  EQU STD.CCTR TO STAND.REC(8)
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN FILES
  MAT FILE.VARS = ''
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG="JCS.SCREENS FILE IS MISSING";GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG="COST.CNTR FILE IS MISSING";GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG="DEPARTMENT FILE IS MISSING";GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG="DIVISION FILE IS MISSING";GOTO 93000
  OPEN '','DEPARTMENT.XREF' TO DEPARTMENT.XREF ELSE ERRMSG="DEPARTMENT.XREF FILE IS MISSING";GOTO 93000
  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG="OPERATION FILE IS MISSING";GOTO 93000
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG="PREFIX FILE IS MISSING";GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING";GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY FILE IS MISSING";GOTO 93000
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 999999
*--- INITIALIZATION
*T21250     MAT EDIT.COM = ''
  MAT EDIT.COM.DRIVER = ''
  MAT GEN.XREF.REC = ''
  DASHES = STR('-',80)
  UNKNOWN = "????????"
*T21250     TYP = 0
*T21250     CALL EDIT.SUB
  LINE.SPACE = 1
  PAGE.SIZE = 10     ;* T25978
  BEGIN.PAGE = 10
*
  GXR.CO = CONO
  GXR.LOC = 1
  GXR.ATT<1,1> = 0
  GXR.ATT<1,2> = 1
  GXR.LEN<1,1> = 7
  GXR.LEN<1,2> = 30
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'CCTR.PRICE.CHANGE'
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
*--- MAIN PROCESSING
100 MAT DEPT.REC = ''
  MAT DIV.REC = ''
  MAT OPER.REC = ""
  MAT STAND.REC = ""
  MAT SCV.REC = ""
  LINES = 0
  LN = 1
  OLD.START.LINE = 0
  START.LINE = 0
  OLD.LINES = 0
  OPTION = ""
  ECD.ACTION=2;CALL SCRN.EDIT
*--- ENTER DEPARTMENT
150 ECD.NUM = 7;ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 999999
    CASE ECD.RET.VALUE # ""
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:ECD.RET.VALUE ELSE
        ERRMSG="DEPARTMENT ( ":ECD.RET.VALUE:" ) NOT ON FILE"; GOSUB 91000
        SCV.REC(ECD.NUM)<ECD.SCRN.NO>="";GOTO 150
      END
      IF DEPT.CCTRS = "" THEN
        ERRMSG="THIS DEPARTMENT HAS NO COST CENTERS";GOSUB 91000
        SCV.REC(ECD.NUM)<ECD.SCRN.NO>="";GOTO 150
      END
      GOSUB 70000
    CASE ECD.RET.VALUE = ""
      ECD.NUM = 8; ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 150
      GXR.XREF = DEPARTMENT.XREF
      GXR.FILE = DEPARTMENT
      GXR.TOP.LINE = 'DEPARTMENT XREF SEARCH'
      GXR.HEADING<1,1> = 'DEPT'
      GXR.ATT<1,2> = 2
      GXR.HEADING<1,2> = 'DESCRIPTION'
      GXR.ID = ""
      GXR.SRCH.ID = ECD.RET.VALUE
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.ATT<1,2> = 1
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID = "" THEN
        SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""; GOTO 150
      END ELSE
        MATREAD DEPT.REC FROM DEPARTMENT,CONO:GXR.ID ELSE
          ERRMSG="DEPARTMENT ( ":GXR.ID:" ) NOT ON FILE"; GOSUB 91000
          SCV.REC(ECD.NUM)<ECD.SCRN.NO>="";GOTO 150
        END
        ECD.NUM = 7;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=GXR.ID;ECD.ACTION=5;CALL SCRN.EDIT
        IF DEPT.CCTRS = "" THEN
          ERRMSG="THIS DEPARTMENT HAS NO COST CENTERS";GOSUB 91000
          SCV.REC(ECD.NUM)<ECD.SCRN.NO>="";GOTO 150
        END
        GOSUB 70000
      END
  END CASE
*--- ENTER OPERATION
200 ECD.NUM = 9; ECD.ACTION=4;CALL SCRN.EDIT
  OPER.CODE = ECD.RET.VALUE
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 150
    CASE ECD.RET.VALUE = "ALL"
      STD.OPER = ECD.RET.VALUE
      ECD.NUM = 10;SCV.REC(ECD.NUM)<ECD.SCRN.NO>="ALL OPERATIONS";ECD.ACTION=5;CALL SCRN.EDIT
    CASE ECD.RET.VALUE # ""
      MATREAD OPER.REC FROM OPERATION,CONO:ECD.RET.VALUE ELSE
        ERRMSG="OPERATION ( ":ECD.RET.VALUE:" ) NOT ON FILE";GOSUB 91000
        SCV.REC(ECD.NUM)<ECD.SCRN.NO>=""; GOTO 200
      END
      STD.OPER = ECD.RET.VALUE
      ECD.NUM=10;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=OPER.DESC;ECD.ACTION=5;CALL SCRN.EDIT
    CASE ECD.RET.VALUE = ""
      GOTO 200
  END CASE
*--- ENTER REST OF SCREEN
  ECD.NUM = 11;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 150
  STD.ALL = ECD.RET.VALUE
  ECD.NUM = 12;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN GOTO 150
  STD.TYPE = ECD.RET.VALUE
*--- LOAD ALL COST CENTERS
  LINES = COUNT(DEPT.CCTRS,VM) + (DEPT.CCTRS#"")
  FOR I = 1 TO LINES
    MATREAD CCTR.REC FROM COST.CNTR,CONO:DEPT.CCTRS<1,I> ELSE
      MAT CCTR.REC = "";CCTR.DESC = UNKNOWN
    END
    IF CCTR.TYPE='F' THEN CCTR.DESC="COST CENTER IS FROZEN"
    STD.DESC<1,I> = CCTR.DESC
    STD.CCTR<1,I> = DEPT.CCTRS<1,I>
  NEXT I
  OLD.START.LINE = 0
  GOSUB 10000
  IF STD.ALL = "Y" THEN
    LN = 1
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
    BEGIN CASE
      CASE STD.TYPE = "RA"
        GOSUB 2000
        IF VALUE = 'END' THEN GOTO 100
        FOR I = 2 TO LINES
          STD.REPL<1,I> = VALUE
        NEXT I
      CASE STD.TYPE = "AA" OR STD.TYPE = "SA"
        GOSUB 3000
        IF VALUE = 'END' THEN GOTO 100
        FOR I = 2 TO LINES
          STD.CHAN<1,I> = VALUE
        NEXT I
      CASE STD.TYPE = "AP" OR STD.TYPE = "SP"
        GOSUB 4000
        IF VALUE = 'END' THEN GOTO 100
        FOR I = 2 TO LINES
          STD.PCNT<1,I> = VALUE
        NEXT I
    END CASE
    OLD.START.LINE = 0
    GOSUB 10000
  END ELSE
    BLK = 0
    FOR LN = 1 TO LINES UNTIL BLK
      GOSUB 10000
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
      BEGIN CASE
        CASE STD.TYPE = "RA"
          GOSUB 2000
          IF VALUE = 'END' THEN BLK = 1
        CASE STD.TYPE = "AA" OR STD.TYPE = "SA"
          GOSUB 3000
          IF VALUE = 'END' THEN BLK = 1
        CASE STD.TYPE = "AP" OR STD.TYPE = "SP"
          GOSUB 4000
          IF VALUE = 'END' THEN BLK = 1
      END CASE
    NEXT LN
    OLD.START.LINE = 0
    GOSUB 10000
  END
*
*--- ENTER OPTION
*
  MORE = 1
  LOOP
    ECD.NUM = 19
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        MORE = 0
      CASE OPTION = "S"
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 10000
      * T25978 ^
      CASE OPTION = "C"
        GOSUB 20000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          IF STD.TYPE = "RA" THEN GOSUB 2000
          IF STD.TYPE = "AA" OR STD.TYPE = "SA" THEN GOSUB 3000
          IF STD.TYPE = "AP" OR STD.TYPE = "SP" THEN GOSUB 4000
        END
        GOSUB 10000
      CASE OPTION = "F"
        FOR CC = 1 TO LINES
          BEGIN CASE
* T20305
*             CASE STD.TYPE = 'RA' AND STD.REPL<1,CC> + 0 = 0
*                FOUND = 0
            CASE STD.TYPE = 'AA' AND STD.CHAN<1,CC> + 0 = 0
              FOUND = 0
            CASE STD.TYPE = 'SA' AND STD.CHAN<1,CC> + 0 = 0
              FOUND = 0
            CASE STD.TYPE = 'AP' AND STD.PCNT<1,CC> + 0 = 0
              FOUND = 0
            CASE STD.TYPE = 'SP' AND STD.PCNT<1,CC> + 0 = 0
              FOUND = 0
            CASE 1
              FOUND = 1
              MATREADU CCTR.REC FROM COST.CNTR, CONO : STD.CCTR<1,CC> ELSE FOUND = 0
              IF CCTR.TYPE='F' THEN FOUND=0
          END CASE
*T21250 v
*T22744 IF STD.TYPE = 'RA' AND CC = 1 AND STD.REPL<1,CC>+0 = 0 THEN
          IF STD.TYPE = 'RA' AND CC = 1 AND STD.REPL<1,CC> = 0 AND STD.ALL = 'Y' THEN
*T21250                LOOP
*T21250                UNTIL ERR.RESP = "Y" OR ERR.RESP = "N" DO
*T21250                  ERRMSG='You intend to ZERO the costs, is this correct(Y/N)?'
*T21250                  GOSUB 92400
*T21250                  IF ERR.RESP = 'N' THEN GOTO 299
*T21250                REPEAT
            X=0;Y=21;TYP=8;MAXL=9;MAXV="";MINV="";HMSG=""
            PMSG = "You intend to ZERO the costs, is this correct (Y/N)"
            O.R="R";CALL EDIT.SUB
            IF VALUE = 'N' THEN GOTO 299
          END
*T21250 ^
          IF FOUND THEN
            IF STD.OPER = 'ALL' THEN
              OCNT = COUNT(CCTR.OPER,VM) + (CCTR.OPER # '')
              FOR OP = 1 TO OCNT
                BEGIN CASE
* T20305
*                      CASE CCTR.OPER.HR.RATE<1,OP> + 0 = 0
*T22744         CASE STD.TYPE = 'RA'
                  CASE STD.TYPE = 'RA' AND STD.REPL<1,CC> # ""
                    CCTR.OPER.HR.RATE<1,OP> = STD.REPL<1,CC>
                  CASE STD.TYPE = 'AA'
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + STD.CHAN<1,CC>
                  CASE STD.TYPE = 'SA'
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - STD.CHAN<1,CC>
                  CASE STD.TYPE = 'AP'
*T26073 v         CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/100 + .5)
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/10000 + .5)
                  CASE STD.TYPE = 'SP'
*T26073 v         CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/100 + .5)
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/10000 + .5)
                END CASE
              NEXT OP
            END ELSE
              LOCATE STD.OPER IN CCTR.OPER<1>,1 SETTING OP ELSE OP = 0
              IF OP > 0 THEN
                BEGIN CASE
* T20305
*                      CASE CCTR.OPER.HR.RATE<1,OP> + 0 = 0
                  CASE STD.TYPE = 'RA'
                    CCTR.OPER.HR.RATE<1,OP> = STD.REPL<1,CC>
                  CASE STD.TYPE = 'AA'
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + STD.CHAN<1,CC>
                  CASE STD.TYPE = 'SA'
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - STD.CHAN<1,CC>
                  CASE STD.TYPE = 'AP'
*T26073  v        CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/100 + .5)
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> + INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/10000 + .5)
                  CASE STD.TYPE = 'SP'
*T26073  v        CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/100 + .5)
                    CCTR.OPER.HR.RATE<1,OP> = CCTR.OPER.HR.RATE<1,OP> - INT(((CCTR.OPER.HR.RATE<1,OP> /100) * STD.PCNT<1,CC>)/10000 + .5)
                END CASE
              END
            END
            MATWRITE CCTR.REC ON COST.CNTR, CONO:STD.CCTR<1,CC>
          END ELSE RELEASE COST.CNTR, CONO:STD.CCTR<1,CC>
        NEXT CC
299 *T21250
        MORE = 0
    END CASE
  WHILE MORE DO REPEAT
  GOTO 100
*--- ENTER REPLACE
2000*
*T21250     FILL = "#"
2001 X=42;Y=SLN;TYP=4;MAXL=9;MAXV="";MINV="";SCALER=2;HMSG=""
  O.R="O";DEFAULT=OCONV(STD.REPL<1,LN>, 'MD2');CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 2999
  STD.REPL<1,LN> = VALUE
2999 RETURN
*--- ENTER CHANGE
3000*
  FILL = "#"
3001 X=53;Y=SLN;TYP=4;MAXL=9;MAXV="";MINV="";SCALER=2;HMSG=""
  O.R="O";DEFAULT=OCONV(STD.CHAN<1,LN>, 'MD2');CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 3999
  STD.CHAN<1,LN> = VALUE
3999 RETURN
*--- ENTER PERCENT
4000*
  FILL = "#"
* T26073  4001 X=64;Y=SLN;TYP=4;MAXL=7;MAXV="";MINV="";SCALER=2;HMSG=""
4001 X=64;Y=SLN;TYP=4;MAXL=7;MAXV="";MINV="";SCALER=4;HMSG=""
* T26073  vO.R="O";DEFAULT=OCONV(STD.PCNT<1,LN>, 'MD2');CALL EDIT.SUB
  O.R="O";DEFAULT=OCONV(STD.PCNT<1,LN>, 'MD4');CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 4999
  IF VALUE = "" THEN GOTO 4001
  STD.PCNT<1,LN> = VALUE
4999 RETURN
*
*--- SCROLL ROUTINE
*
10000*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:5 ; P_Y := AM:SLN ; P_VALUE := AM:STD.CCTR<1,N> "L#3"
    P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:STD.DESC<1,N> "L#30"
    P_X  := AM:42 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(STD.REPL<1,N>, 'MD2') "R#9"
    P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(STD.CHAN<1,N>, 'MD2') "R#9"
* T26073  v   P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(STD.PCNT<1,N>, 'MD2') "R#7"
    P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(STD.PCNT<1,N>, 'MD4') "R#7"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001*
  RETURN
*
*--- GET LINE NUMBER
*
20000*
  GOSUB 10000
  ECD.NUM = 28; ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
*--- PRINT DESCRIPTIONS FOR DIV & DEPT
70000*
  DDCNT = DCOUNT(DEPT.DIV,VM)
  IF DDCNT = 1 THEN
    ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=DEPT.DIV;ECD.ACTION=5;CALL SCRN.EDIT
    MATREAD DIV.REC FROM DIVISION,CONO:DEPT.DIV ELSE DIV.DESC=UNKNOWN
    ECD.NUM = 6;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
  END ELSE
    ECD.NUM = 5;SCV.REC(ECD.NUM)<ECD.SCRN.NO>="";ECD.ACTION=5;CALL SCRN.EDIT
    ECD.NUM = 6;SCV.REC(ECD.NUM)<ECD.SCRN.NO>="MULTIPLE DIVISIONS";ECD.ACTION=5;CALL SCRN.EDIT
  END
  ECD.NUM = 8;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
  RETURN
*
*--- CALLS FOR SYSCOM
*
91000ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92400ERR.TYPE = 4;CALL SYSCOM(MAT SYSCOM.REC);RETURN  ; * T21250
93000ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
999999*
*      PRINT @(-1)
END
