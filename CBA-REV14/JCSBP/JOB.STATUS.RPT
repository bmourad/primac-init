***************************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM - JOB.STATUS.RPT
*
* AUTHOR  - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE    - 08/30/85
*
* DESCRIPTION
*
* This program produces a report of in-process jobs with last operation
* worked.
*
*T22019 llh 06/17/1997 * ADD REPORT TIME
*T22007 stefanie 09/02/1997 * Add Division to the heading.
*T26493 cmykleb 05/08/2002 Change rpt to get the rpt # from the proc
*                          and use GET.PROG.HEAD for the heading.
***************************************************************************
*
***************************************************************************
*
*******************  INSERT COPY STATEMENTS HERE  *************************
*
***************************************************************************
*
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JCS.CPYLIB>OPERATION
*
***************************************************************************
*
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- DIMENSIONED VARIABLES
*
   DIM HEAD(5); DIM BHEAD(5); DIM SHEAD(5); DIM THEAD(6)
   DIM SUB(20); DIM DEF(20); DIM SPC(20); DIM CDATA(20); DIM PDATA(20); DIM PRDATA(20)
   DIM CJ(20); DIM CW(20); DIM CV(20); DIM TF(20); DIM XFMT(20); DIM BRK(5); DIM SKP(5)
   DIM TOT1(20); DIM TOT2(20); DIM TOT3(20); DIM TOT4(20); DIM TOT5(20); DIM TOT6(20); DIM TOTX(20)
   MAT HEAD=""; MAT BHEAD=""; MAT SHEAD=""; MAT THEAD=""
   MAT SUB=""; MAT DEF=""; MAT SPC=""; MAT CDATA=""; MAT PDATA=""; MAT PRDATA=""
   MAT CJ=""; MAT CW=""; MAT CV=""; MAT TF=""; MAT XFMT=""; MAT BRK=""; MAT SKP=""
   MAT TOT1=""; MAT TOT2=""; MAT TOT3=""; MAT TOT4=""; MAT TOT5=""; MAT TOT6=""; MAT TOTX=""
*
*---- PRE-INITIALIZATION
*
   PROCREAD PARAM ELSE
      PRINT "MUST RUN FROM PROC"
      STOP
   END
   CONO = PARAM<1>
   CONAME = PARAM<2>
   REPORT.TYPE = PARAM<3>
   REPORT.HEAD = PARAM<4>
   PROC.DIV    = PARAM<5>   ;* T22007 <
   RUN.DATE = DATE()
   RUN.TIME = TIME()
*T26493 v
*  HEAD(1) = CONAME:SPACE(40):"PAGE "
*  HEAD(2) = "RUN TIME : ":OCONV(TIME(),"MT"):VM:"J O B   S T A T U S   R E P O R T":VM:""
*  HEAD(3) = "DIVISION : ":PROC.DIV:VM:REPORT.HEAD:VM:""
   CONAME = ""
   RPT.NAME = ""
   RPT.NO = PARAM<2>
   HEAD(1) = ""
   HEAD(2) = ""
   CALL GET.PROG.HEAD(CONO,CONAME,RPT.NAME,RPT.NO,"",HEAD(1),HEAD(2))
   HEAD(3) = "DIVISION : ":PROC.DIV:SPACE(54):REPORT.HEAD
*T26493 ^
   GHEAD = "*** GRAND TOTALS ***"
*
***************************************************************************
*
*********************  DEFINE BREAK HEADINGS HERE  ************************
*
***************************************************************************
*
*     BHEAD(1) = "SALESREP: "
*
***************************************************************************
*
*********************  DEFINE TOTAL HEADINGS HERE  ************************
*
***************************************************************************
*
*     THEAD(1) = "SALESREP TOTALS"
*
***************************************************************************
*
*********************  DEFINE COLUMN HEADINGS HERE  ***********************
*
***************************************************************************
*
   SUB(1) = ""
   SUB(2) = "JOB #"
   SUB(3) = "CUSTOMER"
   SUB(4) = "SLSR"
   SUB(5) = "SLS":VM:"CDE"
   SUB(6) = "JOB":VM:"CAT"
   SUB(7) = "ORDER":VM:"DATE"
   SUB(8) = "DESCRIPTION"
   SUB(9) = "PROOF":VM:"DATE"
   SUB(10) = "DUE":VM:"DATE"
   SUB(11) = "LAST OPERATION WORKED"
   SUB(12) = "DATE":VM:"WORKED"
*
***************************************************************************
*
*********************  DEFINE DATA ATTRIBUTES HERE  ***********************
*
***************************************************************************
*
   IF REPORT.TYPE = "SALESREP" THEN
      DEF(1) = "L0;;B1;N"
   END ELSE
      DEF(1) = "L0"
   END
   DEF(2) = "L8"
   DEF(3) = "L20"
   DEF(4) = "L3"
   DEF(5) = "L4"
   DEF(6) = "L5"
   DEF(7) = "L8;D2-"
   DEF(8) = "L30"
   DEF(9) = "L5;D2-"
   DEF(10) = "L5;D2-"
   DEF(11) = "L25"
   DEF(12) = "L8;D2-"
*
***************************************************************************
*
*********************  DEFINE ADDITIONAL SPACES TO INSERT  ****************
*********************  PRIOR TO EACH COLUMN                ****************
*
***************************************************************************
*
*     SPC(3) = 1
*
***************************************************************************
*
*********************  OPEN REQUIRED FILES HERE  **************************
*
***************************************************************************
*
   OPEN "","JOB" TO JOB ELSE
      PRINT "CANNOT OPEN JOB FILE"
      STOP
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      PRINT "CANNOT OPEN CUSTOMER FILE"
      STOP
   END
   OPEN "","SALESMAN" TO SALESMAN ELSE
      PRINT "CANNOT OPEN SALESREP FILE"
      STOP
   END
   OPEN "","OPERATION" TO OPERATION ELSE
      PRINT "CANNOT OPEN OPERATION FILE"
      STOP
   END
   LAST.DAY.POSTED = 0
   JOB.COUNT = 0
*
***************************************************************************
*
   GOSUB 20000
*
*-------------------------*
*---- MAIN PROCESSING ----*
*-------------------------*
*
100*
   READNEXT ID ELSE
      XXBREAK = BRK.CNT + 1
      GOSUB 1000
      PRINTER OFF
      PRINTER CLOSE
      STOP
   END
*
***************************************************************************
*
*********************  READ FILE(S) AND LOAD ARRAY HERE  ******************
*
***************************************************************************
*
   MATREAD JOB.REC FROM JOB, ID ELSE GOTO 100
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      MAT CUST.REC = ""
      CUST.NAME = "??????????"
   END
   IF REPORT.TYPE = "SALESREP" THEN
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE
         MAT SALESMAN.REC = ""
         SALS.NAME = "??????????"
      END
   END
   MAT CDATA = ""
   CDATA(1) = JOB.SLSMN
   CDATA(2) = ID[4,99]
   CDATA(3) = CUST.NAME
   CDATA(4) = JOB.SLSMN
   CDATA(5) = JOB.SALES.CODE
   CDATA(6) = JOB.CATG
   CDATA(7) = JOB.TRACK.DATE<1,2>
   CDATA(8) = JOB.DESC<1,1>
   CDATA(9) = JOB.TRACK.DATE<1,3>
   CDATA(10) = JOB.TRACK.DATE<1,4>
   P2 = COUNT(JOB.LB.OPER,VM) + (JOB.LB.OPER # "")
   FOR P = 1 TO P2
      IF JOB.LB.DATE<1,P,1> >= CDATA(12) THEN
         CDATA(11) = JOB.LB.OPER<1,P>
         CDATA(12) = JOB.LB.DATE<1,P,1>
      END
   NEXT P
   IF CDATA(11) # "" THEN
      MATREAD OPER.REC FROM OPERATION, CONO:CDATA(11) ELSE
         MAT OPER.REC = ""
         OPER.DESC = "??????????"
      END
      CDATA(11) = OPER.DESC
   END
   IF REPORT.TYPE = "SALESREP" THEN
      BHEAD(1) = "SALESREP: ":JOB.SLSMN:" - ":SALS.NAME
   END
*
***************************************************************************
*
*---- CHECK BREAKS
*
200*
   IF FIRST.TIME THEN
      FIRST.TIME  = 0
   END ELSE
      DONE = 0
      FOR B = 1 TO BRK.CNT UNTIL DONE
         IF CDATA(BRK(B)) # PDATA(BRK(B)) THEN
            BRK.LVL = B
            XXBREAK = BRK.CNT - B + 1
            GOSUB 1000
            DONE = 1
         END
      NEXT B
   END
   GOSUB 500
   MAT PDATA = MAT CDATA
*     THEAD(1) = "TOTALS FOR ":SALS.NAME
   GOTO 100
*
*---------------------------*
*---- PRINT DETAIL LINE ----*
*---------------------------*
*
500*
   JOB.COUNT = JOB.COUNT + 1
   IF CDATA(12) # "" AND CDATA(12) > LAST.DAY.POSTED THEN
      LAST.DAY.POSTED = CDATA(12)
   END
   MAT PRDATA = MAT CDATA
   IF LINE.COUNT + 1 >= PAGE.LENGTH THEN
      GOSUB 10000
   END ELSE
*        IF CDATA(2) = PDATA(2) THEN PRDATA(2) = ""
*        IF CDATA(3) = PDATA(3) THEN PRDATA(3) = ""
   END
   PLINE = ""
   FOR C = BEG.COL TO END.COL
      IF CV(C) = "" THEN
         PLINE = PLINE : SPC(C) : PRDATA(C) XFMT(C)
      END ELSE
         PLINE = PLINE : SPC(C) : OCONV(PRDATA(C),CV(C)) XFMT(C)
      END
   NEXT C
   PRINT PLINE
   LINE.COUNT = LINE.COUNT + 1
   PRINT
   LINE.COUNT = LINE.COUNT + 1
*
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT1(C) = TOT1(C) + PRDATA(C)
      END
   NEXT C
   RETURN
*
*------------------------*
*---- PROCESS BREAKS ----*
*------------------------*
*
*---- PROCESS BREAKS (LOWEST LEVEL TO HIGHEST)
*
1000*
*     IF TOT.CNT = 0 THEN GOTO 8000
   MAT TOTX = MAT TOT1
   BRK.NO = BRK.CNT
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT2(C) = TOT2(C) + TOT1(C)
      END
   NEXT C
   MAT TOT1 = ""
   IF XXBREAK = 1 THEN GOTO 8000
*
*---- PROCESS LEVEL 2 BREAK
*
2000*
   MAT TOTX = MAT TOT2
   BRK.NO = BRK.CNT - 1
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT3(C) = TOT3(C) + TOT2(C)
      END
   NEXT C
   MAT TOT2 = ""
   IF XXBREAK = 2 THEN GOTO 8000
*
*---- PROCESS LEVEL 3 BREAK
*
3000*
   MAT TOTX = MAT TOT3
   BRK.NO = BRK.CNT - 2
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT4(C) = TOT4(C) + TOT3(C)
      END
   NEXT C
   MAT TOT3 = ""
   IF XXBREAK = 3 THEN GOTO 8000
*
*---- PROCESS LEVEL 4 BREAK
*
4000*
   MAT TOTX = MAT TOT4
   BRK.NO = BRK.CNT - 3
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT5(C) = TOT5(C) + TOT4(C)
      END
   NEXT C
   MAT TOT4 = ""
   IF XXBREAK = 4 THEN GOTO 8000
*
*---- PROCESS LEVEL 5 BREAK
*
5000*
   MAT TOTX = MAT TOT5
   BRK.NO = BRK.CNT - 4
   GOSUB 9000
   FOR C = BEG.COL TO END.COL
      IF TF(C)[1,1] = "T" THEN
         TOT6(C) = TOT6(C) + TOT5(C)
      END
   NEXT C
   MAT TOT5 = ""
   IF XXBREAK = 5 THEN GOTO 8000
*
*---- PROCESS LEVEL 6 BREAK
*
6000*
   MAT TOTX = MAT TOT6
   BRK.NO = BRK.CNT - 5
   GOSUB 9000
   MAT TOT6 = ""
   GOTO 8000
*
*---- BREAK COMPLETED
*
8000*
   IF XXBREAK > BRK.CNT THEN RETURN
   LINE.COUNT = LINE.COUNT + SKP(BRK.LVL)
   IF LINE.COUNT < PAGE.LENGTH THEN
      FOR LC = 1 TO SKP(BRK.LVL)
         PRINT
      NEXT LC
   END
   RETURN
*
*--------------------------*
*---- PRINT TOTAL LINE ----*
*--------------------------*
*
9000*
   TLINE = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         TLINE = TLINE : SPC(C) : SPACE(CW(C))
      END ELSE
         TLINE = TLINE : SPC(C) : OCONV(TOTX(C),CV(C)) XFMT(C)
      END
   NEXT C
   BEGIN CASE
      CASE BRK.NO = 0
*           TFMT = "R#":TOT.PTR
*           TLINE = GHEAD TFMT : TLINE[TOT.PTR+1,999]
*           IF TRIM(TLINE) # "" THEN
*              IF LINE.COUNT + 4 > PAGE.LENGTH THEN
*                 GOSUB 10000
*              END ELSE
*                 PRINT; PRINT
*                 LINE.COUNT = LINE.COUNT + 2
*              END
*              PRINT TLINE
*              LINE.COUNT = LINE.COUNT + 1
*              PRINT ULINE2
*              LINE.COUNT = LINE.COUNT + 1
*           END
         IF REPORT.TYPE # "SALESREP" THEN
            IF LAST.DAY.POSTED = 0 THEN
               TLINE = "NO TIME POSTED FOR ABOVE JOBS"
            END ELSE
               TLINE = "TIME POSTED THROUGH: ":OCONV(LAST.DAY.POSTED,"D2-")
            END
            TLINE = TLINE:SPACE(8):"TOTAL NUMBER OF ACTIVE JOBS = ":JOB.COUNT
            IF LINE.COUNT + 4 > PAGE.LENGTH THEN GOSUB 10000
            PRINT;PRINT;PRINT
            PRINT TLINE
            LAST.DAY.POSTED = 0
            JOB.COUNT = 0
         END
      CASE 1
*           TFMT = "R#":TOT.PTR
*           TLINE = THEAD(BRK.NO) TFMT : TLINE[TOT.PTR+1,999]
*           IF TRIM(TLINE) # "" THEN
*              IF LINE.COUNT + 2 > PAGE.LENGTH THEN GOSUB 10000
*              PRINT ULINE1
*              LINE.COUNT = LINE.COUNT + 1
*              PRINT TLINE
*              LINE.COUNT = LINE.COUNT + 1
*           END
         IF REPORT.TYPE = "SALESREP" THEN
            IF LAST.DAY.POSTED = 0 THEN
               TLINE = "NO TIME POSTED FOR ABOVE JOBS"
            END ELSE
               TLINE = "TIME POSTED THROUGH: ":OCONV(LAST.DAY.POSTED,"D2-")
            END
            TLINE = TLINE:SPACE(8):"TOTAL NUMBER OF ACTIVE JOBS = ":JOB.COUNT
            IF LINE.COUNT + 4 > PAGE.LENGTH THEN GOSUB 10000
            PRINT;PRINT;PRINT
            PRINT TLINE
            LAST.DAY.POSTED = 0
            JOB.COUNT = 0
         END
   END CASE
   RETURN
*
*-----------------------------*
*---- PRINT PAGE HEADINGS ----*
*-----------------------------*
*
10000*
   PRINT CHAR(12):
   LINE.COUNT = 0
   PAGE.NO = PAGE.NO + 1
   PRINT HEAD(1):PAGE.NO
   PRINT HEAD(2)
   FOR HD = 3 TO HEAD.CNT
      PRINT HEAD(HD)
   NEXT HD
   FOR BH = 1 TO BRK.CNT
      IF BHEAD(BH) # "" THEN
         PRINT BHEAD(BH)
      END
   NEXT BH
   PRINT
   FOR SH = 1 TO SH.CNT
      PRINT SHEAD(SH)
   NEXT SH
   RETURN
*
*------------------------*
*---- INITIALIZATION ----*
*------------------------*
*
20000*
*---- GENERAL PARAMETERS
   LINE.COUNT = 99
   PAGE.NO = 0
   FIRST.TIME = 1
*---- COMPUTE PAGE HEADING COUNT
   HEAD.CNT = 0
   FOR HD = 5 TO 1 STEP -1 WHILE HEAD.CNT = 0
      IF HEAD(HD) # "" THEN HEAD.CNT = HD
   NEXT HD
*---- COMPUTE BREAK HEADING COUNT
   BHEAD.CNT = 0
   FOR BH = 5 TO 1 STEP -1 WHILE BHEAD.CNT = 0
      IF BHEAD(BH) # "" THEN BHEAD.CNT = BH
   NEXT BH
*---- CENTER PAGE HEADINGS
*T26493 FOR H = 2 TO HEAD.CNT
*T26493    HEAD(H)<1,2> = SPACE(INT((80-LEN(HEAD(H)<1,2>))/2)):HEAD(H)<1,2>
*T26493    HEAD(H) = HEAD(H)<1,1>"L#20":HEAD(H)<1,2>"L#80":HEAD(H)<1,3>
*T26493 NEXT H
*---- COMPUTE ENDING COLUMN NUMBER
   END.COL = ""
   FOR C = 1 TO 20
      IF DEF(C) # "" THEN END.COL = C
   NEXT C
*---- SEGREGATE COLUMN DEFINITION ATTRIBUTES
   BEG.COL = ""
   CW.TOT = 0
   TOT.CNT = 0
   FOR C = 1 TO END.COL
      DEF1 = FIELD(DEF(C),";",1)
      DEF2 = FIELD(DEF(C),";",2)
      DEF3 = FIELD(DEF(C),";",3)
      DEF4 = FIELD(DEF(C),";",4)
      CJ(C) = DEF1[1,1]
      CW(C) = DEF1[2,3]
      CV(C) = DEF2
      XFMT(C) = CJ(C):"#":CW(C)
      BEGIN CASE
         CASE DEF3[1,1] = "T"
            IF CV(C) = "" THEN CV(C) = "MD0"
            TF(C) = DEF3
            TOT.CNT = TOT.CNT + 1
         CASE DEF3[1,1] = "B"
            B = DEF3[2,1]
            BRK(B) = C
            BEGIN CASE
               CASE DEF4 = "N"
                  SKP(B) = 99
               CASE NUM(DEF4) AND DEF4 # ""
                  SKP(B) = DEF4
               CASE 1
                  SKP(B) = 1
            END CASE
      END CASE
      IF CW(C) > 0 THEN
         CW.TOT = CW.TOT + CW(C) + SPC(C)
         IF BEG.COL = "" THEN BEG.COL = C
      END
   NEXT C
*---- DETERMINE COLUMN SPACING
   COL.CNT = END.COL - BEG.COL + 1
   SEP = INT((132-CW.TOT)/(COL.CNT-1))
   IF SEP > 3 THEN SEP = 3
   SPC(BEG.COL) = ""
   FOR C = BEG.COL+1 TO END.COL
      SP = SPC(C) + SEP
      SPC(C) = SPACE(SP)
   NEXT C
*---- COMPUTE BREAK COUNT
   BRK.CNT = 0
   FOR B = 5 TO 1 STEP -1 WHILE BRK.CNT = 0
      IF BRK(B) # "" THEN BRK.CNT = B
   NEXT B
*---- COMPUTE COLUMN HEADING LINE COUNT
   SH.CNT = 0
   FOR C = BEG.COL TO END.COL
      N = COUNT(SUB(C),VM) + (SUB(C) # "")
      IF N > SH.CNT THEN SH.CNT = N
   NEXT C
*---- SHIFT COLUMN HEADINGS TO PROPER LINE
   IF SH.CNT > 1 THEN
      FOR C = BEG.COL TO END.COL
         N = COUNT(SUB(C),VM) + (SUB(C) # "")
         FOR SH = N+1 TO SH.CNT
            SUB(C) = VM:SUB(C)
         NEXT SH
      NEXT C
   END
*---- CENTER COLUMN HEADINGS AND UNDERLINE
   FOR C = BEG.COL TO END.COL
      FOR SH = 1 TO SH.CNT
         X = SUB(C)<1,SH>
         X = TRIM(X)
         XL = LEN(X)
         SP = INT((CW(C)-XL)/2)
         IF CJ(C) = "R" THEN
            X = X:SPACE(SP)
         END ELSE
            X = SPACE(SP):X
         END
         SUB(C)<1,SH> = X XFMT(C)
      NEXT SH
      SUB(C) = SUB(C):VM:STR("-",CW(C))
   NEXT C
*---- BUILD COLUMN HEADING PRINT LINES
   SH.CNT = SH.CNT + 1
   FOR SH = 1 TO SH.CNT
      SHEAD(SH) = SUB(BEG.COL)<1,SH>
   NEXT SH
   FOR SH = 1 TO SH.CNT
      FOR C = BEG.COL+1 TO END.COL
         SHEAD(SH) = SHEAD(SH) : SPC(C) : SUB(C)<1,SH>
      NEXT C
   NEXT SH
*---- BUILD TOTAL COLUMN UNDERLINE
   ULINE1 = ""
   ULINE2 = ""
   FOR C = BEG.COL TO END.COL
      IF TF(C) = "" THEN
         ULINE1 = ULINE1 : SPC(C) : SPACE(CW(C))
         ULINE2 = ULINE2 : SPC(C) : SPACE(CW(C))
      END ELSE
         ULINE1 = ULINE1 : SPC(C) : STR("-",CW(C))
         ULINE2 = ULINE2 : SPC(C) : STR("=",CW(C))
      END
   NEXT C
*---- COMPUTE SPACE FOR TOTAL HEADINGS
   TOT.PTR = 0
   ULEN = LEN(ULINE1)
   FOR TP = 1 TO ULEN WHILE TOT.PTR = 0
      IF ULINE1[TP,1] # " " THEN
         TOT.PTR = TP - 2
      END
   NEXT TP
   IF TOT.PTR < 0 THEN TOT.PTR = 0
*---- COMPUTE PAGE LENGTH
   PAGE.LENGTH = 66 - HEAD.CNT - BHEAD.CNT - 1 - SH.CNT - 6
*
   PRINTER ON
   RETURN
*
*-----------------------*
*---- ERROR ROUTINE ----*
*-----------------------*
*
