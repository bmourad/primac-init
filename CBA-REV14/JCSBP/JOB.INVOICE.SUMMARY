*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.INVOICE.SUMMARY
* AUTHOR      - WALID YAMOUT, CBA
* DATE        - 06/18/84
* DESCRIPTION
*  This program will display all invoices, credit memos etc. for a
*  specified job. Summary level data is also displayed. Detail data
*  regarding specific invoice, credit memo etc. may be displayed for
*  items which still reside on system.
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>TAX
*COPY>JCS.CPYLIB>INVOICE
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      MAT FILE.VARS = ""
      OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB FILE IS MISSING"; GOTO 93000
      OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE IS MISSING"; GOTO 93000
      OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE ERRMSG = "CUSTOMER.XREF FILE IS MISSING"; GOTO 93000
      OPEN "","JCS.SCREENS" TO M.SCREENS ELSE ERRMSG = "JCS.SCREENS FILE IS MISSING"; GOTO 93000
      OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000
      OPEN "","PREFIX" TO PREFIX ELSE ERRMSG = "PREFIX FILE IS MISSING"; GOTO 93000
      OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000
      OPEN "","JOB.SHIP" TO JOB.SHIP ELSE ERRMSG = "JOB.SHIP FILE IS MISSING"; GOTO 93000
      OPEN "","INVOICE" TO INVOICE ELSE ERRMSG = "INVOICE FILE IS MISSING"; GOTO 93000
      OPEN "","DAILY.INVOICE" TO DAILY.INVOICE ELSE ERRMSG = "DAILY.INVOICE FILE IS MISSING"; GOTO 93000
      OPEN "","TAX" TO TAX ELSE ERRMSG = "TAX FILE IS MISSING"; GOTO 93000
      OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "SHIP.VIA FILE IS MISSING"; GOTO 93000
      OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE ERRMSG = "INVOICE.CODE FILE IS MISSING"; GOTO 93000
      OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE ERRMSG = "VOID.INVOICES FILE IS MISSING"; GOTO 93000
      OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE ERRMSG = "INV.JOB.STATS FILE IS MISSING"; GOTO 93000
      MAT COMP.REC = ""
      CONO = ""
      CALL GET.CONO(CONO,MAT COMP.REC)
      IF CONO = "END" THEN GOTO 99999
      MAT EDIT.COM = ""
      MAT EDIT.COM.DRIVER = ""
      MAT GEN.XREF.REC = ""
      DASHES = STR("-",80)
      ERRMSG = ""
      UNKNOWN = "????????????????????"
      DESC.START = 1
      IVC.START = 1
      IVC.NO = ""
      GXR.CO = CONO
      GXR.HEADING<1,2> = "DESCRIPTION"
      GXR.ATT<1,1> = 0
      GXR.ATT<1,2> = 1
      GXR.LEN<1,1> = 10
      GXR.LEN<1,2> = 30
      ECD.SCRN.CNT = 3
      ECD.SCRN.NAME<1> = "JOB.INVOICE.SUMMARY"
      ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB"
      ECD.SCRN.NAME<3> = "INVOICE.WIP.SUB"
      ECD.ACTION=1;CALL SCRN.EDIT
      ECD.SCRN.NO = 1
      TYP = 0 ;CALL EDIT.SUB ; FILL = "#"
100   MAT JOB.REC = ""
      MAT SCV.REC = ""
      SAVE.INV.JS.REC = ""
      ADD.SUBS = 0
      ECD.ACTION=6;CALL SCRN.EDIT
      ECD.NUM = 1
      ECD.VALDAT.CODE = "2"; ECD.VALDAT.FILE = JOB; ECD.PREFIX.ID = CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 99999
      CASE ECD.RET.VALUE # "" AND ECD.VALDAT.ITEM = ""
         ERRMSG = "Job ":ECD.RET.VALUE:" is not on file" ; GOSUB 91000 ; GOTO 100
      CASE ECD.VALDAT.ITEM # ""
         FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
         JOB.NUM = ECD.RET.VALUE
         ECD.NUM = 5; GOSUB 20000; GOSUB 30000
      CASE ECD.RET.VALUE = ""
         JOB.NUM = ""; JOB.CUST = "" ;GOSUB 1100
         IF JOB.CUST # "" THEN GOSUB 10000
         IF JOB.NUM = "" THEN
            ERRMSG = "No jobs present for customer ":JOB.CUST
            GOSUB 91000; GOTO 100
         END ELSE
            ECD.NUM = 5; GOSUB 20000; GOSUB 30000
         END
      CASE 1
         ERRMSG = "* * INVALID SEQUENCE # * *"
         GOSUB 91000; GOSUB 100
      END CASE
500   ECD.NUM = 24
      SCV.REC(ECD.NUM)<1> = ""
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST = ECD.RET.VALUE
      BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "E"
         GOTO 100
      CASE REQUEST = "SD" AND DESC.CNT
         IF DESC.CNT > 4 THEN
            DESC.START = DESC.START + 2
            IF DESC.START > DESC.CNT THEN DESC.START = 1
            ECD.NUM = 14 ; ECD.SUB.NUM = DESC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
         END
      CASE REQUEST = "RI"
         GOSUB 3000
      CASE REQUEST = "SI" AND IVC.CNT
         IF IVC.CNT > 2 THEN
            IVC.START = IVC.START + 2
            IF IVC.START > IVC.CNT THEN IVC.START = 1
            ECD.NUM = 15 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 16 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 17 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 18 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 19 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 20 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 21 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 22 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 23 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
            ECD.NUM = 30 ; ECD.SUB.NUM = IVC.START ; ECD.ACTION = 7 ; CALL SCRN.EDIT
         END
      END CASE
      GOTO 500
1100  ECD.NUM = 6
      ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = CUSTOMER; ECD.PREFIX.ID = CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "" THEN
         ECD.NUM = 7; ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1100
         GXR.XREF = CUSTOMER.XREF
         GXR.FILE = CUSTOMER
         GXR.LOC = 1
         GXR.TOP.LINE = "CUSTOMER XREF SEARCH"
         GXR.HEADING<1,1> = "CUSTOMER"
         GXR.ID = ""
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(7)<1> = ""
            ECD.ACTION = 3 ; CALL SCRN.EDIT
            GOTO 1100
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
               ERRMSG = "Cannot locate customer ":GXR.ID
               GOSUB 91000
               SCV.REC(7)<1> = ""
               ECD.ACTION = 3 ; CALL SCRN.EDIT
               GOTO 1100
            END
            JOB.CUST = GXR.ID
            SCV.REC(6)<1> = JOB.CUST
            SCV.REC(7)<1> = CUST.NAME
            ECD.ACTION = 3 ; CALL SCRN.EDIT
         END
      END ELSE
         IF ECD.RET.VALUE # "END" THEN
            JOB.CUST = ECD.RET.VALUE
            FOR I = 1 TO CUST.REC.SIZE; CUST.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
            ECD.NUM = 7
            SCV.REC(ECD.NUM)<1> = CUST.NAME
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      END
      RETURN
3000 *
      X = 0; Y = 23; TYP = 13; HMSG = ""; PMSG = "ENTER LINE NUMBER : "
      MINV = IVC.START; O.R = "O"; MAXL = 3
      IF IVC.START + 2 > IVC.CNT THEN MAXV = IVC.CNT ELSE MAXV = IVC.START + 1
      CALL EDIT.SUB
P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "" OR VALUE = "END" THEN GOTO 3999
      IF JOB.INV.CAT<1,VALUE,1> = "PP" THEN
         ERRMSG = "This is a prepayment"; GOSUB 91000; GOTO 3999
      END
      MAT IVC.REC = ""
      IF JOB.INV.DATE<1,VALUE> = "" THEN
         MATREAD IVC.REC FROM DAILY.INVOICE, CONO:JOB.INV.NO<1,VALUE> ELSE
            ERRMSG = "Cannot locate invoice on DAILY.INVOICE file"
            GOSUB 91000
            GOTO 3999
         END
      END ELSE
         MATREAD IVC.REC FROM INVOICE, CONO:JOB.INV.NO<1,VALUE> ELSE
            ERRMSG = "Cannot locate invoice on INVOICE file";GOSUB 91000;GOTO 3999
         END
      END
      IVC.NO = JOB.INV.NO<1,VALUE>
      BEGIN CASE
      CASE IVC.NO[7,2] = "CM"
         MENU = "CREDIT"
         ECD.SCRN.NAME<2> = "CREDIT.MEMO.SUB"
      CASE IVC.NO[7,2] = "DM"
         MENU = "DEBIT"
         ECD.SCRN.NAME<2> = "DEBIT.MEMO.SUB"
      CASE 1
         MENU = "INVOICE"
         ECD.SCRN.NAME<2> = "INVOICE.MAINT.SUB"
      END CASE
      IF IVC.NO[7,2] = "PB" THEN
         CALL INVOICE.MAINT.SUB(CONO,JOB.NUM,IVC.NO,"PREBILL","I")
      END ELSE
         CALL INVOICE.MAINT.SUB(CONO,JOB.NUM,IVC.NO,MENU,"I")
      END
      ECD.SCRN.NO = 1
      ECD.ACTION=2;CALL SCRN.EDIT
      IF IVC.NO = "" THEN GOSUB 30001 ELSE ECD.ACTION = 3 ; CALL SCRN.EDIT
      IVC.START = 1
3999  RETURN
10000 GXR.XREF = CUSTOMER
      GXR.FILE = JOB
      GXR.LOC = 34
      GXR.ATT<1,2> = 16
      GXR.LEN<1,2> = 60
      GXR.TOP.LINE<1,1> = "JOB XREF SEARCH"
      GXR.TOP.LINE<1,2> = "FOR CUSTOMER : ":CUST.NAME
      GXR.HEADING<1,1> = "JOB"
      GXR.ID = ""
      GXR.SRCH.ID = JOB.CUST
      CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.ATT<1,2> = 1
      GXR.LEN<1,2> = 30
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID # "" THEN
         MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
            ERRMSG = "Cannot locate job ":GXR.ID
            GOSUB 91000
         END
         JOB.NUM = GXR.ID
      END
      RETURN
20000 BEGIN CASE
      CASE JOB.STATUS<1,1> = ""
         SCV.REC(ECD.NUM)<1> = "BOOKED"
      CASE JOB.STATUS<1,1> = "9"
         SCV.REC(ECD.NUM)<1> = "CANCELLED"
      CASE JOB.STATUS<1,1> = "7"
         SCV.REC(ECD.NUM)<1> = "READY TO PURGE"
      CASE JOB.STATUS<1,1> = "8"
         SCV.REC(ECD.NUM)<1> = "WAS PURGED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            SCV.REC(ECD.NUM)<1> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5" 
            SCV.REC(ECD.NUM)<1>="REOPENED"
         CASE 1
            SCV.REC(ECD.NUM)<1> = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            SCV.REC(ECD.NUM)<1> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            SCV.REC(ECD.NUM)<1>="REOPENED"
         CASE 1
            SCV.REC(ECD.NUM)<1> = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         SCV.REC(ECD.NUM)<1> = "COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         SCV.REC(ECD.NUM)<1> = "RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         SCV.REC(ECD.NUM)<1> = "DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         SCV.REC(ECD.NUM)<1> = "IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         SCV.REC(ECD.NUM)<1> = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "1"
         SCV.REC(ECD.NUM)<1> = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "3"
         SCV.REC(ECD.NUM)<1> = "INVOICED"
      CASE 1
         SCV.REC(ECD.NUM)<1> = "UNKNOWN"
      END CASE
      RETURN
30000 *
      ADD.SUBS = 0
      IF JOB.SUBS # "" THEN
         IF JOB.WIP = "" THEN
            CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.JS.REC)
            ADD.SUBS = 1
         END ELSE
            ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "Y" THEN
               CALL MASTER.SUMMARY.SUB2(CONO,JOB.NUM,SAVE.INV.JS.REC)
               ADD.SUBS = 1
            END
         END
      END
      MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
         MAT CUST.REC = ""
         CUST.NAME = UNKNOWN
      END
      SCV.REC(1)<1> = JOB.NUM
      SCV.REC(6)<1> = JOB.CUST
      SCV.REC(7)<1> = CUST.NAME
      SCV.REC(3)<1> = JOB.TRACK.DATE<1,2>
      SCV.REC(4)<1> = JOB.TRACK.DATE<1,4>
      SCV.REC(2)<1> = JOB.TYPE
      SCV.REC(8)<1> = JOB.TOT.COST
      SCV.REC(9)<1> = JOB.TOT.SALE
      SCV.REC(10)<1> = JOB.TOT.INV
      SCV.REC(13)<1> = JOB.TOT.BAL
      DESC.CNT = COUNT(JOB.DESC,VM) + (JOB.DESC # "")
      IF DESC.CNT THEN
         FOR I = 1 TO DESC.CNT ; SCV.REC(14)<1,I> = JOB.DESC<1,I> ; NEXT I
      END
30001 *
      IVC.CNT = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
      SCV.REC(15)<1> = ""
      SCV.REC(16)<1> = ""
      SCV.REC(17)<1> = ""
      SCV.REC(18)<1> = ""
      SCV.REC(19)<1> = ""
      SCV.REC(20)<1> = ""
      SCV.REC(21)<1> = ""
      SCV.REC(22)<1> = ""
      SCV.REC(23)<1> = ""
      SCV.REC(30)<1> = ""
      PRE.PAID = 0
      FOR I = 1 TO IVC.CNT
         MAT IVC.REC = ""
         IF JOB.INV.CAT<1,I,1> = "PP" THEN
            BILL.AMT = ""
            TAX.AMT = ""
            INV.AMT = ""
            PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>
            PRE.PAID = PRE.PAID + JOB.INV.BAL<1,I>
            GOTO 30005
         END
         IF JOB.INV.DATE<1,I> = "" THEN
            MATREAD IVC.REC FROM DAILY.INVOICE, CONO:JOB.INV.NO<1,I> ELSE NULL
            GOSUB 40000
         END ELSE
            MATREAD IVC.REC FROM INVOICE,CONO:JOB.INV.NO<1,I> ELSE
               IVC.PRT.DATE = "PURGED"
            END
            GOSUB 50000
         END
30005 *
         SCV.REC(15)<1,I> = I
         SCV.REC(16)<1,I> = JOB.INV.NO<1,I>
         SCV.REC(17)<1,I> = JOB.INV.DATE<1,I>
         SCV.REC(18)<1,I> = IVC.PRT.DATE
         SCV.REC(19)<1,I> = BILL.AMT
         SCV.REC(20)<1,I> = TAX.AMT
         SCV.REC(21)<1,I> = INV.AMT
         SCV.REC(22)<1,I> = PAID.AMT
         SCV.REC(23)<1,I> = JOB.INV.BAL<1,I>
         SCV.REC(30)<1,I> = IVC.PROC.MON
      NEXT I
      SCV.REC(11)<1> = PRE.PAID * (-1)
      SCV.REC(12)<1> = JOB.TOT.INV - JOB.TOT.BAL + PRE.PAID
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      RETURN
*
*--- GET BALANCE AND TAX FROM DAILY.INVOICE
*
40000 *
      BILL.AMT = ""
      TAX.AMT = ""
      INV.AMT = ""
      PAID.AMT = ""
      CODE.CNT = COUNT(IVC.CHG.CODE,VM) + (IVC.CHG.CODE # "")
      FOR PTR = 1 TO CODE.CNT
         IF IVC.CHG.CODE<1,PTR> = "TOT" OR IVC.CHG.CODE<1,PTR> = "SUB" OR IVC.CHG.CODE<1,PTR> = "SUBT" OR IVC.CHG.CAT<1,PTR> = "CMT" THEN GOTO 49999
         IF ADD.SUBS = 0 AND JOB.NUM # IVC.CHG.JOB<1,PTR> THEN GOTO 49999
         IF JOB.INV.DATE<1,I> = "" AND JOB.INV.NO<1,I>[7,2] = "CM" THEN
            IVC.AMOUNT<1,PTR> = IVC.AMOUNT<1,PTR> * (-1)
         END
         IF IVC.CHG.CAT<1,PTR> = "TAX" THEN
            TAX.AMT = TAX.AMT + IVC.AMOUNT<1,PTR>
         END ELSE
            BILL.AMT = BILL.AMT + IVC.AMOUNT<1,PTR>
         END
49999 *
      NEXT PTR
      INV.AMT = TAX.AMT + BILL.AMT
      RETURN
*
*--- CALCULATE INVOICE BALANCE, DUE AND TAX FROM JOB (FOR PURGED AND REG INVOICES)
*
50000 *
      BILL.AMT = ""
      TAX.AMT = ""
      INV.AMT = ""
      PAID.AMT = ""
      CODE.CNT = COUNT(JOB.INV.CAT<1,I>,SVM) + (JOB.INV.CAT<1,I> # "")
      FOR PTR = 1 TO CODE.CNT
         IF JOB.INV.CAT<1,I,PTR> = "TOT" OR JOB.INV.CAT<1,I,PTR> = "SUB" OR JOB.INV.CAT<1,I,PTR> = "CMT" THEN GOTO 59999
         IF JOB.INV.CAT<1,I,PTR> = "TAX" THEN
            TAX.AMT = TAX.AMT + JOB.INV.AMT<1,I,PTR>
         END ELSE
            BILL.AMT = BILL.AMT + JOB.INV.AMT<1,I,PTR>
         END
59999 *
      NEXT PTR
      INV.AMT = TAX.AMT + BILL.AMT
      PAID.AMT = INV.AMT - JOB.INV.BAL<1,I>
      RETURN
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
      END
