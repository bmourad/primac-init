*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - CUST.FNGD.INQ.RPT
* BY          - TINA BOND, C.B.A
* DATE        - 1/29/87
* DESCRIPTION
*********************************************************************
*
**** INSERT FILES EQUETES
*
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** SETUP FOR SYSTEM ERRMSGS
*
     SYS.TYPE = 1
     CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
     OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
     OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
     OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
     OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
     OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
     OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
     OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
*
*** INITIALIZATIONS
*
     LINE.COUNT = 99; PAGE.NO = 0
     SP1 = SPACE(1)
     SP2 = SPACE(2)
     HD1.LINE = ''
     D.LINE1 = ''
     HD1.LINE = "JOB NUM  PRODUCT NUMBER               PRODUCT DESCRIPTION               WHSE  U/M  LOC#  ROLL/SKID #   QUANTITY"
     D.LINE1 =  "-------- --------------- ---------------------------------------------  ----  ---  ----  ------------  ------------"
     OLD.JOB.COUNT = 0
     WHSE.KEY = ''
     ONHAND = ''
     PROD.CNT = 0
     JOB.CNT = 0
     JOB.NO = ''; PROD = ''; PROD.DESC = ''; WHSE = ''
     UM = ''; TOT.PROD = ''
     JOB.COUNT = 1
     MAT INV.CNV.REC = ""
     MAT INV.REC = ''
     MAT JSTAT.REC = ''
     MAT JOB.REC = ''
     MAT CUST.REC = ''
*
*** GET PROC VALUES
*
     PROCREAD ID ELSE
        ERRMSG = ' CANNOT PERFORM PROCREAD'
        GOTO 93000
     END
     CONO = ID<1>
     CONO.NAME = ID<2>
     REPORT.NAME = 'CUSTOMER.FINISHED GOODS.REPORT'
     REPORT.NUMBER = "XXXX"
     REPORT.DATE = DATE()
     HD1 = ""; HD2 = ""
*** GET HEADING
     CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*** PRINTER ON
     PRINTER ON
*
*** READ AND PROCESS THE FIRST RECORD
*
100*
     READNEXT KEY ELSE GOTO 999999
     MATREAD CUST.REC FROM CUSTOMER,KEY ELSE
        MAT CUST.REC = ''
        GOTO 100
     END
     CUST.NUMBER = KEY[4,99]
     GOSUB 30000
     GOSUB 35000
     DATA = 0
1000*
     LOOP
        READNEXT KEY ELSE DATA = 1
     WHILE DATA = 0 DO
        JOB.NO = ''; PROD = ''; PROD.DESC = ''; WHSE = ''
        UM = ''; TOT.PROD = ''
        JOB.COUNT = 1
        MATREAD CUST.REC FROM CUSTOMER, KEY ELSE
           MAT CUST.REC = ''
           GOTO 1000
        END
        CUST.NUMBER = KEY[4,99]
        GOSUB 30000
        GOSUB 35000
     REPEAT
     PRINTER OFF
     GOTO 999999
*
* HEADING ROUTINE
*
2000*
     PRINT CHAR(12)
     PAGE.NO = PAGE.NO + 1
     PRINT HD1:PAGE.NO
     PRINT HD2
     START.CUST = ID<3>
     END.CUST = ID<4>
     IF START.CUST # 'ALL' THEN 
        PRINT SPACE(45):"FOR CUSTOMER":SP1:START.CUST:SP1:"THROUGH CUSTOMER":SP1:END.CUST
     END ELSE
        PRINT SPACE(67):"FOR ALL CUSTOMERS"
     END
     PRINT
     PRINT HD1.LINE
     PRINT D.LINE1
     LINE.COUNT = 6
     RETURN
*
*** PROCESS THE RECORD
*
30000*
     JOB.CNT = COUNT(CUST.JOB,VM) + (CUST.JOB # '')
     FOR J = 1 TO JOB.CNT
        MATREAD JSTAT.REC FROM JOB.STATS, CONO:CUST.JOB<1,J> ELSE
           GOTO 30100
        END
        IF JSTAT.SHP.PROD # '' THEN
           MATREAD JOB.REC FROM JOB, CONO:CUST.JOB<1,J> ELSE
              GOTO 30100
           END
           PROD.CNT = COUNT(JSTAT.SHP.PROD,VM) + (JSTAT.SHP.PROD # '')
           JOB.NO<1,JOB.COUNT> = CUST.JOB<1,J>
           PROD<1,JOB.COUNT> = JSTAT.SHP.PROD<1,1>
           MATREAD INV.REC FROM INVENTORY, CONO:JSTAT.SHP.PROD<1,1> ELSE
              MAT INV.REC = ''
           END
           GOSUB 40000
           PROD.DESC<1,JOB.COUNT> = INV.FULL.DESC
           UM<1,JOB.COUNT> = INV.UNIT<1,2>
           WHSE<1,JOB.COUNT> = JSTAT.SHP.WHSE<1,1>
           FOR X = 1 TO PROD.CNT
              TOT.PROD<1,JOB.COUNT> = TOT.PROD<1,JOB.COUNT> + JSTAT.SHP.QTY<1,X>
           NEXT X
           JOB.COUNT = JOB.COUNT + 1
        END
30100NEXT J
     JOBS = COUNT(JOB.NO, VM) + (JOB.NO # "")
30500RETURN
*
*** PRINT ROUTINE
*
35000*
     FOR N = 1 TO JOBS
        IF LINE.COUNT >= 55 THEN GOSUB 2000
        P.LINE = ''
        P.LINE = P.LINE : JOB.NO<1,N> "L#8"
        P.LINE = P.LINE : SP1:PROD<1,N> "L#15"
        P.LINE = P.LINE : SP1:PROD.DESC<1,N> "L#45"
        P.LINE = P.LINE : SP2 : WHSE<1,N>"L#4"
        P.LINE = P.LINE : SP2 : UM<1,N> "L#3"
        MATREAD JSTAT.REC FROM JOB.STATS, CONO:JOB.NO<1,N> ELSE
           MAT JSTAT.REC = ''
        END
        PROD.COUNT = COUNT(JSTAT.SHP.PROD,VM) + (JSTAT.SHP.PROD # '')
        IF PROD.COUNT >= 1 THEN
           P.LINE = P.LINE:SP2:JSTAT.SHP.LOC<1,1> "L#4"
           P.LINE = P.LINE:SP2:JSTAT.SHP.R.S.ID<1,1> "L#12"
           IF JSTAT.SHP.QTY<1,1> < 0 THEN
              P.LINE = P.LINE:SP2:OCONV(INT(((JSTAT.SHP.QTY<1,1>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> - .5),ICR.CNV<1,N>) "R#12"
           END ELSE
              P.LINE = P.LINE:SP2:OCONV(INT(((JSTAT.SHP.QTY<1,1>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> + .5),ICR.CNV<1,N>) "R#12"
           END
           PRINT P.LINE
           LINE.COUNT = LINE.COUNT + 1
        END
        IF PROD.COUNT > 1 THEN
           FOR L = 2 TO PROD.COUNT
              IF LINE.COUNT >= 55 THEN GOSUB 2000
              P.LINES = ''
              P.LINES = P.LINES:SPACE(83):JSTAT.SHP.LOC<1,L> "L#4"
              P.LINES = P.LINES:SP2:JSTAT.SHP.R.S.ID<1,L>"L#12"
              IF JSTAT.SHP.QTY<1,L> < 0 THEN
                 P.LINES = P.LINES:SP2:OCONV(INT(((JSTAT.SHP.QTY<1,L>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> - .5),ICR.CNV<1,N>) "R#12"
              END ELSE
                 P.LINES = P.LINES:SP2:OCONV(INT(((JSTAT.SHP.QTY<1,L>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> + .5),ICR.CNV<1,N>) "R#12"
              END
              PRINT P.LINES
              LINE.COUNT = LINE.COUNT + 1
           NEXT L
        END
        IF LINE.COUNT >= 55 THEN GOSUB 2000
        PRINT SPACE(103):"------------"
        LINE.COUNT = LINE.COUNT + 1
        IF LINE.COUNT >= 55 THEN GOSUB 2000
        IF TOT.PROD<1,N> < 0 THEN
           PRINT SPACE(103):OCONV(INT(((TOT.PROD<1,N>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> - .5),ICR.CNV<1,N>) "R#12"
        END  ELSE
           PRINT SPACE(103):OCONV(INT(((TOT.PROD<1,N>/ICR.DV1<1,N>)*ICR.MT1<1,N>)/ICR.DV2<1,N> + .5),ICR.CNV<1,N>) "R#12"
        END
        LINE.COUNT = LINE.COUNT + 1
        IF LINE.COUNT >= 55 THEN GOSUB 2000
        PRINT
        LINE.COUNT = LINE.COUNT + 1
     NEXT N
     IF JOBS # 0 THEN
        IF LINE.COUNT >= 50 THEN GOSUB 2000
        PRINT
        PRINT "*** JOBS FOR CUSTOMER ":CUST.NUMBER
        PRINT; PRINT; PRINT
        LINE.COUNT = LINE.COUNT + 5
     END
35500RETURN
*
* CONVERSION ROUTINE
*
40000*
     BEGIN CASE
     CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
        ICR.DV1<1,JOB.COUNT> = INV.M.WT; ICR.MT1<1,JOB.COUNT> = 1; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD0"
     CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
        ICR.DV1<1,JOB.COUNT> = INV.PAP.WIDTH/100; ICR.MT1<1,JOB.COUNT> = 10; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD0"
     CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
        ICR.DV1<1,JOB.COUNT> = INV.PAP.WIDTH/100; ICR.MT1<1,JOB.COUNT> = 100; ICR.DV2<1,JOB.COUNT> = 12; ICR.CNV<1,JOB.COUNT> = "MD0"
     CASE 1
        ICR.DV1<1,JOB.COUNT> = 10; ICR.MT1<1,JOB.COUNT> = 1; ICR.DV2<1,JOB.COUNT> = 1; ICR.CNV<1,JOB.COUNT> = "MD2"
     END CASE
     RETURN
*
*** CALLS FOR SYSCOM
*
91000ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
     RETURN
92000ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)
     RETURN
93000ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
999999*
  END
