*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.INVOICE
* AUTHOR      - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
* DATE        - 10/22/85
* DESCRIPTION
* This program will process editted invoices, credit memos and debit memos.
* The following files are updated:
* JOB             - invoice data appended and WIP reversed.
* CUSTOMER        - A/R data for bill-to customer.
* CUSTOMER        - job balance data for job customer.
* OPEN.RECV       - A/R data if accounts receivable system is present.
* JOB.SALES.STATS - sales statistics if sales analysis system is present.
* COMMISSION      - accrued commissions by salesman
* MODS FOR CSF 18282 (LMR) 10/15/92
* MOD TASK        - 13680 ; 14221
* MOD BY          - MT    ; RWW
* MOD DATE        - 2/2/89;5/24/89
* MOD DESC        - Correct update of JOB.SALES.STATS;FIX RESV PROB
*                    -*-*-* Sales Analysis Enchancements *-*-*-
* MOD DATE        - 10/01/93
* MOD DESC        - Add Sales Analysis by Invoice / Finished Goods Product
* MOD BY          - Daniel J. Cronin CBA
* TASK 20611 JR GET ERROR MESSAGE FROM JOB.RESV.SUB
*T20962 gat 09/09/1996 * FIX STATUS PROBLEM CM/DM/PB
*T21761 lanny 03/27/1997 * Master/Sub Job combination not including
*                          Master costs in ISS record.
*T21777 lanny 04/07/1997 * Correct updating of dates in Customer and Job
*                          records.
*T23278 markt 11/24/1998 * Make fiscal data multi-value by division.
*T25764 renee 07/25/2001 * Need to assign .DUE.DATE in .. copylib.
*T26334 epitka 12/19/2001 * REV12
*T27770 cmykleb 11/05/2003 * Do not update Invoice Sales Stats if the
*                            invoice is a pre-bill.
*T27859 lross 12/29/2003 * T25900 left off REV12.
*T28296 lross 10/12/2004 * If a Master Job invoices sub-jobs with no
*                          charges to master the Invoice Review function
*                          doesn't work properly.
*T28658 lross 08/30/2005 * If Invoice line-item is a TOT,SUB,SUBT or CMT
*                          CHARGE.JOB does not get set.
*T28935 lross 07/14/2006 * If no Reserves then bypass call to
*                          JOB.RESV.SUB but include logic to clear
*                          required qtys.
*ENDDOC
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>JCS.CPYLIB>JOB
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>TAX.BAL
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>JCS.CPYLIB>DAILY.INVOICE
*COPY>JCS.CPYLIB>INVOICE
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>JOB.SALES.STATS
*COPY>PMC.CPYLIB>INVOICE.SALES.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>COMMISSION
*COPY>ICS.CPYLIB>INV.STATS ;*T28935
   DIM SAVE.REC(60)
*T27770 v
   DIM HOLD.IVC.REC(IVC.REC.SIZE)
   DIM HOLD.DI.REC(DI.REC.SIZE)
   MAT HOLD.IVC.REC = ''
   MAT HOLD.DI.REC = ''
   MAT IVC.REC = ''
*T27770 ^
*
*--- SETUP SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
***** T23278 v
*
***** GET DIV CODE FROM PROC
*
   PROCREAD KEY ELSE
      ERRMSG = "MUST BE RUN FROM A PROC"
      GOTO 93000
   END
   DIV.CODE = KEY<3>
*
***** T23278 ^
*--- OPEN ALL FILES
*
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG="PMC.SCREENS FILE IS MISSING"; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING"; GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG="JOB FILE IS MISSING"; GOTO 93000
   OPEN '','INVOICE' TO INVOICE ELSE ERRMSG="INVOICE FILE IS MISSING"; GOTO 93000
   OPEN '','INVOICE.CODE' TO INVOICE.CODE ELSE ERRMSG="INVOICE.CODE FILE IS MISSING"; GOTO 93000
   OPEN '','DAILY.INVOICE' TO DAILY.INVOICE ELSE ERRMSG="DAILY.INVOICE FILE IS MISSING"; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY FILE IS MISSING"; GOTO 93000
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS MISSING"; GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG="COST.CNTR FILE IS MISSING"; GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING"; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS MISSING"; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG="INV.WHSE FILE IS MISSING"; GOTO 93000
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG="INV.WHSE.LOC FILE IS MISSING"; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG="INV.STATS FILE IS MISSING"; GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG="INV.JOB.STATS FILE IS MISSING"; GOTO 93000
   OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG="JOB.TIME FILE IS MISSING"; GOTO 93000
   OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG="JOB.MATL FILE IS MISSING"; GOTO 93000
   OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG="JOB.OSP FILE IS MISSING"; GOTO 93000
   OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG="JOB.SHIP FILE IS MISSING"; GOTO 93000
   OPEN '','JOB.MISC' TO JOB.MISC ELSE ERRMSG="JOB.MISC FILE IS MISSING"; GOTO 93000
   OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG="COST.CNTR.WIP FILE IS MISSING"; GOTO 93000
   OPEN '','TAX' TO TAX ELSE ERRMSG="TAX FILE IS MISSING"; GOTO 93000
   OPEN '','TAX.BAL' TO TAX.BAL ELSE ERRMSG="TAX.BAL FILE IS MISSING"; GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS MISSING"; GOTO 93000
*
*---INITIALIZATION
*
   MAT EDIT.COM.DRIVER = ""
   POSTING.MON = ""
   GEN.DIV = "00"
   GEN.DEPT = "00"
   GEN.CCTR = "000"
   ISS.KEY = ""
   TODAY = DATE()
   ALL.TYPE = "LB"
   ALL.TYPE<1,2> = "MT"
   ALL.TYPE<1,3> = "OS"
   ALL.TYPE<1,4> = "SP"
   ALL.TYPE<1,5> = "MS"
   CUST.STATE=""
*
*--- SETUP VALUES FROM PMC.SCREENS
*
   ECD.ACTION = 1
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'GET.FISCAL.MONTH'
   CALL SCRN.EDIT
   ECD.SCRN.NO = 1
*
*--- PRINT SCREEN
*
   MAT SCV.REC = ""
   ECD.ACTION = 2
   CALL SCRN.EDIT
*
*--- MAIN PROCESSING
*
   READNEXT DI.ID ELSE GOTO 999999
   CONO = DI.ID[1,3]
   INVOICE.SFX = DI.ID[10,2]
*T27770 v
   FINAL.INVOICE = 0
   IF INVOICE.SFX = '' THEN FINAL.INVOICE = 1
*T27770 ^
   MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 999999
   IF CO.OPS = "Y" THEN
      OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
         ERRMSG = "Cannot locate the JOB.FNGD.STATS file"
         GOTO 93000
      END
      OPS.ONFILE = 1
   END ELSE
      OPS.ONFILE = 0
   END
*
*--- GET POSTING MONTH
*
   BEGIN CASE
      CASE INVOICE.SFX = "CM"
         SCRN.HEAD = "CREDIT MEMO"
      CASE INVOICE.SFX = "DM"
         SCRN.HEAD = "DEBIT MEMO"
      CASE 1
         SCRN.HEAD = "INVOICE"
   END CASE
   SCRN.HEAD = SCRN.HEAD : " POSTING PROCESS"
*      CALL GET.FISCAL.MONTH(CONO,POSTING.MON,SCRN.HEAD,"JCFISCAL",CURR.MON);* T23278
   CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,SCRN.HEAD,"JCFISCAL",CURR.MON,DIV.CODE);* T23278
   IF POSTING.MON = "END" THEN GOTO 999999
   IF CO.ARS = "Y" THEN OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE IS MISSING"; GOTO 93000
   IF CO.SAS = "Y" THEN
      OPEN '','JOB.SALES.STATS' TO JOB.SALES.STATS ELSE
         ERRMSG="JOB.SALES.STATS FILE IS MISSING"
         GOTO 93000
      END
      OPEN '','INVOICE.SALES.STATS' TO INVOICE.SALES.STATS ELSE
         ERRMSG="INVOICE.SALES.STATS FILE IS MISSING"
         GOTO 93000
      END
   END
   IF CO.COMMISSION = "Y" THEN OPEN '','COMMISSION' TO COMMISSION ELSE ERRMSG="COMMISSION FILE IS MISSING"; GOTO 93000
   GOSUB 1000
*
*---- CONTINUE
*
   DATA = 1
   LOOP
      READNEXT DI.ID ELSE DATA = 0
   WHILE DATA DO
      GOSUB 1000
   REPEAT
   READ REC FROM CONTROL,CONO:"INV.POST":CURR.MON ELSE REC = ""
   INS DATE() BEFORE REC<1,-1>
   INS TIME() BEFORE REC<2,-1>
   WRITE REC ON CONTROL,CONO:"INV.POST":CURR.MON
   FLG="N"
   WRITE FLG ON CONTROL,CONO:"SALES.RPT"
   GOTO 999999
*
*--- UPDATE ROUTINE
*
1000 *
   EDIT.ERR = 0
   TOTAL.INV = 0
   TOTAL.TAX = 0
   TOTAL.SHP = 0
   TOTAL.AGC = 0
   TOTAL.DSC = 0
   TOTAL.MSC = 0
   AFTER.LABOR.DCOST = 0                
   AFTER.LABOR.FFOH  = 0                
   AFTER.LABOR.VFOH  = 0                
   AFTER.LABOR.SAOH  = 0                
   AFTER.MATL.DCOST  = 0                
   AFTER.MATL.FFOH   = 0                
   AFTER.MATL.VFOH   = 0                
   AFTER.OSP.DCOST   = 0                
   AFTER.OSP.FFOH    = 0                
   AFTER.SHIP.DCOST  = 0                
   AFTER.SHIP.FFOH   = 0                
   AFTER.MISC.DCOST  = 0                
   AFTER.MISC.FFOH   = 0                
   TOTAL.JOB.INV = ''
   MULTI.JOB.NOS = ''
   MULTI.JOB.DIV = ''
   INVOICE.NO = DI.ID[4,99]
   INVOICE.SFX = DI.ID[10,2]
*T27770 v
   FINAL.INVOICE = 0
   IF INVOICE.SFX = '' THEN FINAL.INVOICE = 1
*T27770 ^
   PRE.BILLS = ""
   ZERO.INV = 0
   MAT SAVE.REC = ""
   MATREADU DI.REC FROM DAILY.INVOICE, DI.ID ELSE
      GOTO 1999
   END
   LCNT = COUNT(DI.CHG.CODE,VM) + (DI.CHG.CODE # "")
   MULTI.JOB = 0
   FOR L = 1 TO LCNT UNTIL MULTI.JOB
      IF DI.CHG.JOB<1,L> = "" THEN
         BEGIN CASE
            CASE DI.CHG.CODE<1,L> = "TOT"
            CASE DI.CHG.CODE<1,L> = "SUB"
            CASE DI.CHG.CODE<1,L> = "SUBT"
            CASE DI.CHG.CAT<1,L> = "CMT"
            CASE 1
               DI.CHG.JOB<1,L> = DI.JOB.NO
         END CASE
      END ELSE
         IF DI.CHG.JOB<1,L> # DI.JOB.NO THEN MULTI.JOB = 1
      END
   NEXT L
   IF OPS.ONFILE THEN
      MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:DI.JOB.NO THEN
         IF JFS.PROD # "" THEN
            DI.STATUS = "Cannot Invoice a Finished Goods JOB"
            EDIT.ERR = 1; GOTO 1900
         END
      END
   END
   IF MULTI.JOB THEN
      MATREAD JOB.REC FROM JOB, CONO:DI.JOB.NO ELSE
         DI.STATUS = "JOB ":DI.JOB.NO:" IS MISSING"; EDIT.ERR = 1; GOTO 1900
      END
   END ELSE
      MATREADU JOB.REC FROM JOB, CONO:DI.JOB.NO ELSE
         DI.STATUS = "JOB ":DI.JOB.NO:" IS MISSING"; EDIT.ERR = 1; GOTO 1900
      END
      IF DI.PRE.BILL = "Y" THEN
         JICNT = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
         FOR JI = 1 TO JICNT
            IF JOB.INV.NO<1,JI>[7,2] = "PB" THEN
               LOCATE JOB.INV.NO<1,JI> IN PRE.BILLS<1>,1 SETTING JIFP ELSE
                  PRE.BILLS<1,-1> = JOB.INV.NO<1,JI>
               END
            END
         NEXT JI
      END
   END
*CSF 26282 v
   MST.SLSMN = JOB.SLSMN
*CSF 26282 ^
   MATREADU CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      DI.STATUS = "CUSTOMER ":JOB.CUST:" IS MISSING"; EDIT.ERR = 1; GOTO 1900
   END
   CUSTOMER.FOR.JOB = JOB.CUST
   CUST.STATE = FIELD(CUST.ADDR4,",",2)
   FND = 1
   READU REC FROM INVOICE, DI.ID ELSE FND = 0
   IF FND THEN
      DI.STATUS = "INVOICE RECORD ":INVOICE.NO:" IS ALREADY ON INVOICE FILE"; EDIT.ERR = 1; GOTO 1900
   END
   IF CO.ARS = "Y" THEN
      FND = 1
      READU REC FROM OPEN.RECV, DI.ID ELSE FND = 0
      IF FND THEN
         DI.STATUS = "INVOICE RECORD ":INVOICE.NO:" IS ALREADY ON OPEN.RECV FILE"; EDIT.ERR = 1; GOTO 1900
      END
   END
   IF JOB.STATUS<1,1> > 6 THEN
      DI.STATUS = "CANNOT POST TO JOB BECAUSE OF ITS STATUS"; EDIT.ERR = 1; GOTO 1900
   END
   INV.JOBS.TBL = ""
   WCNT = COUNT(DI.WIP.DATE,VM) + (DI.WIP.DATE # "")
   WIP.TYPE = ""
   WIP.PERCENT = ""
   WIP.DATE = ""
   BEGIN CASE
      CASE WCNT < 1
         WIP.TYPE = "ALL"
         WIP.PERCENT = 10000
         WIP.DATE = "ALL"
      CASE WCNT = 1
         WIP.TYPE = "ALL"
         WIP.PERCENT = DI.WIP.PRCNT<1,1>
         WIP.DATE = DI.WIP.DATE<1,1>
      CASE 1
         WW = 0
         FOR XX = 1 TO WCNT
            LOCATE DI.WIP.TYPE<1,XX> IN ALL.TYPE<1>,1 SETTING WFND ELSE WFND = 0
            IF WFND THEN
               WW = WW + 1
               WIP.TYPE<1,WW> = DI.WIP.TYPE<1,XX>
               WIP.PERCENT<1,WW> = DI.WIP.PRCNT<1,XX>
               WIP.DATE<1,WW> = DI.WIP.DATE<1,XX>
            END
         NEXT XX
         LOCATE "OTH" IN DI.WIP.TYPE<1>,1 SETTING WFND ELSE WFND = 0
         IF WFND THEN
            FOR XX = 1 TO 5
               LOCATE ALL.TYPE<1,XX> IN WIP.TYPE<1>,1 SETTING WW ELSE
                  WIP.TYPE<1,WW> = ALL.TYPE<1,XX>
                  WIP.PERCENT<1,WW> = DI.WIP.PRCNT<1,WFND>
                  WIP.DATE<1,WW> = DI.WIP.DATE<1,WFND>
               END
            NEXT XX
         END
   END CASE
   CNT = COUNT(DI.CHG.CODE,VM) + (DI.CHG.CODE # "")
   JOB.STACK = ''
   FOR I = 1 TO CNT UNTIL EDIT.ERR
      CHARGE.CODE = DI.CHG.CODE<1,I>
      CHARGE.JOB = DI.CHG.JOB<1,I>
      CHARGE.CAT = DI.CHG.CAT<1,I>
      CHARGE.TAX.JURS = DI.TAX.JURS<1,I>
      CHARGE.INV = 0
      CHARGE.TAX = 0
      CHARGE.SHP = 0
      CHARGE.AGC = 0
      CHARGE.DSC = 0
      CHARGE.MSC = 0
      IF INVOICE.SFX = "CM" THEN
         DI.AMOUNT<1,I> = DI.AMOUNT<1,I> * (-1)
         DI.TAXABLE<1,I> = DI.TAXABLE<1,I> * (-1)
      END
      IF CHARGE.CODE = "TOT" OR CHARGE.CODE = "SUB" OR CHARGE.CAT = "CMT" OR CHARGE.CODE = "SUBT" THEN GOTO 1890
      ZERO.INV = ZERO.INV + 1
      CHARGE.INV = DI.AMOUNT<1,I>
      TOTAL.INV = TOTAL.INV + DI.AMOUNT<1,I>
      IF MULTI.JOB THEN
         MATREADU JOB.REC FROM JOB, CONO:CHARGE.JOB ELSE
            DI.STATUS = "JOB ":CHARGE.JOB:" IS MISSING"; EDIT.ERR = 1; GOTO 1890
         END
*CSF 18282
         LOCATE CHARGE.JOB IN MULTI.JOB.NOS<1>,1 SETTING MX ELSE
            INS CHARGE.JOB BEFORE MULTI.JOB.NOS<1,MX>
            INS JOB.DIV BEFORE MULTI.JOB.DIV<1,MX>
            INS 0 BEFORE TOTAL.JOB.INV<1,MX>
         END
         TOTAL.JOB.INV<1,MX> = TOTAL.JOB.INV<1,MX> + CHARGE.INV
*
         IF DI.PRE.BILL = "Y" THEN
            JICNT = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "")
            FOR JI = 1 TO JICNT
               IF JOB.INV.NO<1,JI>[7,2] = "PB" THEN
                  LOCATE JOB.INV.NO<1,JI> IN PRE.BILLS<1>,1 SETTING JIFP ELSE
                     PRE.BILLS<1,-1> = JOB.INV.NO<1,JI>
                  END
               END
            NEXT JI
         END
      END
      LOCATE INVOICE.NO IN JOB.INV.NO<1>,1 SETTING P1 ELSE
         P1 = COUNT(JOB.INV.NO,VM) + (JOB.INV.NO # "") + 1
         JOB.INV.NO<1,P1> = INVOICE.NO
      END
      LOCATE CHARGE.CAT IN JOB.INV.CAT<1,P1>,1 SETTING P2 ELSE
         P2 = COUNT(JOB.INV.CAT<1,P1>,SVM) + (JOB.INV.CAT<1,P1> # "") + 1
         JOB.INV.CAT<1,P1,P2> = CHARGE.CAT
      END
      JOB.INV.DATE<1,P1> = DI.DATE
      JOB.INV.AMT<1,P1,P2> = JOB.INV.AMT<1,P1,P2> + DI.AMOUNT<1,I>
      JOB.TOT.INV = JOB.TOT.INV + DI.AMOUNT<1,I>
      IF CO.ARS = "Y" THEN
         JOB.INV.BAL<1,P1> = JOB.INV.BAL<1,P1> + DI.AMOUNT<1,I>
         JOB.TOT.BAL = JOB.TOT.BAL + DI.AMOUNT<1,I>
      END ELSE
         JOB.INV.BAL<1,P1> = JOB.INV.BAL<1,P1> + 0
         JOB.TOT.BAL = JOB.TOT.BAL + 0
      END
*
      LOCATE CHARGE.JOB IN INV.JOBS.TBL<1>,1 SETTING DD ELSE
*T20962            IF INVOICE.SFX # "PB" THEN
*T21777 v   IF INVOICE.SFX = "" THEN
         IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX # "DM" THEN
            JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
            JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
            IF JOB.TRACK.DATE<1,9> = "" OR DI.DATE > JOB.TRACK.DATE<1,9> THEN
               JOB.TRACK.DATE<1,9> = DI.DATE
            END
         END
         IF DI.LAST = "Y" THEN
            JOB.TRACK.DATE<1,10> = TODAY
            JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")
            JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
         END
         DD = COUNT(INV.JOBS.TBL,VM) + (INV.JOBS.TBL # "") + 1
         INV.JOBS.TBL<1,DD> = CHARGE.JOB
      END
*
      LOCATE CHARGE.JOB IN CUST.JOB<1>,1 SETTING JFND ELSE
         CUST.JOB<1,JFND> = CHARGE.JOB
      END
      CUST.JOB.BAL<1,JFND> = 0
      LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
         IF JOB.TOT.INV > 0 THEN
            CUST.JOB.BAL<1,JFND> = JOB.CONF.AMT - JOB.TOT.INV
         END ELSE
            CUST.JOB.BAL<1,JFND> = JOB.CONF.AMT
         END
         IF CUST.JOB.BAL<1,JFND> < 0 THEN CUST.JOB.BAL<1,JFND> = 0
      END
*
      IF MULTI.JOB THEN
         LOCATE(CHARGE.JOB,JOB.STACK,1;MULTI.POS) ELSE
            JOB.STACK<1,-1> = CHARGE.JOB
            JOB.WIP<1,1> = JOB.WIP<1,1> + 1
            IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN
               JOB.WIP<1,4> = POSTING.MON
            END
            IF JOB.WIP<1,5> < POSTING.MON THEN
               JOB.WIP<1,5> = POSTING.MON
            END
         END
         BEGIN CASE
            CASE INVOICE.SFX = "CM"
            CASE INVOICE.SFX = "DM"
            CASE INVOICE.SFX = "PB"
            CASE 1
               GOSUB 16100  ;* GET 'BEFORE' COSTS
               CALL REVERSE.JOB.WIP(CONO,CHARGE.JOB,WIP.TYPE,WIP.PERCENT,WIP.DATE,POSTING.MON,CURR.MON)
               GOSUB 16200  ;* GET 'AFTER' COSTS
               IF DI.LAST = "Y" THEN
*T27859 v
                  IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN
                     CALL CLEAR.JOB.ALLOC(CONO,CHARGE.JOB) ;*T25900
                  END
*T27859 ^
*T28935 v
                  MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
                  IF SUM(JOB.RESV.QTY) > 0 THEN
                    RESV.ACTION = "D"; DPTR = 0
                    CALL JOB.RESV.SUB(CONO,RESV.ACTION,DPTR,CHARGE.JOB)
* T20611
                    IF RESV.ACTION # "D" AND RESV.ACTION # "" THEN
                       DI.STATUS = RESV.ACTION; EDIT.ERR = 1; GOTO 1900
                    END
* T20611
                  END ELSE
                    GOSUB 21000
                  END
*                 MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
*T28935 ^
                  FOR M = MCNT TO 1 STEP -1
                     IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
                        JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":CHARGE.JOB
                        MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
                           JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
                           JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
                           JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
                           JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
                           JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
                           JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
                           JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
                           JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
                           JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
                        END
                     END
                  NEXT M
               END
         END CASE
         MATWRITE JOB.REC ON JOB, CONO:CHARGE.JOB
      END
*
      BEGIN CASE
         CASE CHARGE.CAT = "TAX"
            CHARGE.TAX = DI.AMOUNT<1,I>
            TOTAL.TAX = TOTAL.TAX + CHARGE.TAX
            MATREADU TAX.REC FROM TAX, CONO:DI.TAX.JURS<1,I> ELSE
               MAT TAX.REC = ""
            END
            LOCATE POSTING.MON IN TAX.PERIOD<1>,1 BY "DR" SETTING FND.PER ELSE
               INS POSTING.MON BEFORE TAX.PERIOD<1,FND.PER>
               INS "0" BEFORE TAX.TAXABLE<1,FND.PER>
               INS "0" BEFORE TAX.CHARGED<1,FND.PER>
            END
            TAX.CHARGED<1,FND.PER> = TAX.CHARGED<1,FND.PER> + CHARGE.TAX
            TAX.TAXABLE<1,FND.PER> = TAX.TAXABLE<1,FND.PER> + DI.TAXABLE<1,I>
            MATWRITE TAX.REC ON TAX, CONO:DI.TAX.JURS<1,I>
            ID.TAX = CONO
            BEGIN CASE
               CASE JOB.DIV = "" OR JOB.DIV = GEN.DIV
                  ID.TAX = ID.TAX : GEN.DIV : GEN.DEPT : GEN.CCTR
               CASE JOB.DEPT = "" OR JOB.DEPT = "XX" OR JOB.DEPT = GEN.DEPT
                  ID.TAX = ID.TAX : JOB.DIV : GEN.DEPT : GEN.CCTR
               CASE 1
                  ID.TAX = ID.TAX : JOB.DIV : JOB.DEPT[1,2] : GEN.CCTR
            END CASE
            ID.TAX = ID.TAX : DI.TAX.JURS<1,I>
            MATREADU TAX.BAL.REC FROM TAX.BAL, ID.TAX ELSE
               MAT TAX.BAL.REC = ""
            END
            ODI.DATE = OCONV(DI.DATE,"D4/")
            TAX.MONTH = ODI.DATE[1,2]
            TAX.YEAR  = ODI.DATE[7,4]
            TAX.POST.MONTH = TAX.YEAR:TAX.MONTH"R%2"
            LOCATE TAX.POST.MONTH IN TBR.PERIOD<1>,1 BY "DR" SETTING FND.PER ELSE
               INS TAX.POST.MONTH BEFORE TBR.PERIOD<1,FND.PER>
               INS "0" BEFORE TBR.TAXABLE<1,FND.PER>
               INS "0" BEFORE TBR.CHARGED<1,FND.PER>
            END
            TBR.CHARGED<1,FND.PER> = TBR.CHARGED<1,FND.PER> + CHARGE.TAX
            TBR.TAXABLE<1,FND.PER> = TBR.TAXABLE<1,FND.PER> + DI.TAXABLE<1,I>
            MATWRITE TAX.BAL.REC ON TAX.BAL, ID.TAX
         CASE CHARGE.CAT = "SHP"
            CHARGE.SHP = DI.AMOUNT<1,I>
            TOTAL.SHP = TOTAL.SHP + CHARGE.SHP
            MATREADU SHIP.VIA.REC FROM SHIP.VIA, CONO:DI.TAX.JURS<1,I> ELSE
               MAT SHIP.VIA.REC = ""
            END
            LOCATE POSTING.MON IN SHPV.PERIOD<1>,1 BY "DR" SETTING FND.PER ELSE
               INS POSTING.MON BEFORE SHPV.PERIOD<1,FND.PER>
               INS "0" BEFORE SHPV.SHPMT<1,FND.PER>
               INS "0" BEFORE SHPV.COST<1,FND.PER>
               INS "0" BEFORE SHPV.SALE<1,FND.PER>
            END
            SHPV.SALE<1,FND.PER> = SHPV.SALE<1,FND.PER> + CHARGE.SHP
            MATWRITE SHIP.VIA.REC ON SHIP.VIA, CONO:DI.TAX.JURS<1,I>
         CASE CHARGE.CAT = "AGC"
            CHARGE.AGC = DI.AMOUNT<1,I>
            TOTAL.AGC = TOTAL.AGC + CHARGE.AGC
         CASE CHARGE.CAT = "DSC"
            CHARGE.DSC = DI.AMOUNT<1,I>
            TOTAL.DSC = TOTAL.DSC + CHARGE.DSC
         CASE CHARGE.CAT = "MSC"
            CHARGE.MSC = DI.AMOUNT<1,I>
            TOTAL.MSC = TOTAL.MSC + CHARGE.MSC
      END CASE
      IF MULTI.JOB THEN
         GOSUB 12000
*----------- GET INVOICE SALES DATA FOR MULTI-JOBS -------------- 
         IF FINAL.INVOICE THEN GOSUB 20000 ; * 27770
         BEGIN CASE
            CASE CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHARGE.AGC # 0 OR CHARGE.DSC # 0 OR CHARGE.MSC # 0
               GOSUB 16000  ;* INVOICE SALES SUBROUTINE
            CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LABOR.VFOH # 0 OR AFTER.LABOR.SAOH # 0
               GOSUB 16000
            CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL.VFOH # 0
               GOSUB 16000
            CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0
               GOSUB 16000
            CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0
               GOSUB 16000
            CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0
               GOSUB 16000
         END CASE
*------------------------------------------
      END
1890 *
   NEXT I
1900 *
   IF EDIT.ERR THEN
      MATWRITE DI.REC ON DAILY.INVOICE, DI.ID
      GOTO 1999
   END
   DI.PROC.MON = POSTING.MON
   DI.PROC.DATE = TODAY
   DI.STATUS = ""
   IF TOTAL.INV = 0 AND ZERO.INV < 2 THEN ZERO.INV = "Y" ELSE ZERO.INV = "N"
*
   IF NOT(MULTI.JOB) THEN
      JOB.WIP<1,1> = JOB.WIP<1,1> + 1
      IF JOB.WIP<1,4> = "" OR JOB.WIP<1,4> > POSTING.MON THEN
         JOB.WIP<1,4> = POSTING.MON
      END
      IF JOB.WIP<1,5> < POSTING.MON THEN
         JOB.WIP<1,5> = POSTING.MON
      END
      BEGIN CASE
         CASE INVOICE.SFX = "CM"
         CASE INVOICE.SFX = "DM"
         CASE INVOICE.SFX = "PB"
         CASE 1
            GOSUB 16100  ;* GET 'BEFORE' COSTS
            CALL REVERSE.JOB.WIP(CONO,DI.JOB.NO,WIP.TYPE,WIP.PERCENT,WIP.DATE,POSTING.MON,CURR.MON)
            GOSUB 16200  ;* GET 'AFTER' COSTS
            IF DI.LAST = "Y" THEN
*T27859 v
               IF SUM(JOB.ALOC.QTY) # 0 AND CO.POS = 'Y' THEN
*T28658 v         CALL CLEAR.JOB.ALLOC(CONO,CHARGE.JOB) ;*T25900
                  CALL CLEAR.JOB.ALLOC(CONO,DI.JOB.NO) ;*T25900
               END
*T27859 ^
*T28935 v
               CHARGE.JOB = DI.JOB.NO
               MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
               IF SUM(JOB.RESV.QTY) > 0 THEN
                 RESV.ACTION = "D"; DPTR = 0
                 CALL JOB.RESV.SUB(CONO,RESV.ACTION,DPTR,CHARGE.JOB)
* T20611
                 IF RESV.ACTION # "D" AND RESV.ACTION # "" THEN
                    DI.STATUS = RESV.ACTION; EDIT.ERR = 1; GOTO 1900
                 END
* T20611
               END ELSE
                 GOSUB 21000
               END
*              MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
*T28935 ^
               FOR M = MCNT TO 1 STEP -1
                  IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
                     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":CHARGE.JOB
                     MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO : JSTAT.ID ELSE
                        JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
                        JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
                        JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
                        JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
                        JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
                        JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
                        JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
                        JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
                        JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
                     END
                  END
               NEXT M
            END
      END CASE
      MATWRITE JOB.REC ON JOB, CONO:DI.JOB.NO
      CHARGE.JOB = DI.JOB.NO
      CHARGE.INV = TOTAL.INV
      CHARGE.TAX = TOTAL.TAX
      CHARGE.SHP = TOTAL.SHP
      CHARGE.AGC = TOTAL.AGC
      CHARGE.DSC = TOTAL.DSC
      CHARGE.MSC = TOTAL.MSC
      GOSUB 12000                                          ;*ISS
*---- GET INVOICE SALES DATA -------------- 
      IF FINAL.INVOICE THEN GOSUB 20000 ; * 27770
      BEGIN CASE
         CASE CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHARGE.AGC # 0 OR CHARGE.DSC # 0 OR CHARGE.MSC # 0
            GOSUB 16000  ;* INVOICE SALES SUBROUTINE
         CASE AFTER.LABOR.DCOST # 0 OR AFTER.LABOR.FFOH # 0 OR AFTER.LABOR.VFOH # 0 OR AFTER.LABOR.SAOH # 0
            GOSUB 16000
         CASE AFTER.MATL.DCOST # 0 OR AFTER.MATL.FFOH # 0 OR AFTER.MATL.VFOH # 0
            GOSUB 16000
         CASE AFTER.OSP.DCOST # 0 OR AFTER.OSP.FFOH # 0
            GOSUB 16000
         CASE AFTER.SHIP.DCOST # 0 OR AFTER.SHIP.FFOH # 0
            GOSUB 16000
         CASE AFTER.MISC.DCOST # 0 OR AFTER.MISC.FFOH # 0
            GOSUB 16000
      END CASE
*------------------------------------------
   END
*
*---- UPDATE INVOICED CUSTOMER
*
   IF ZERO.INV = "N" AND CO.ARS = "Y" THEN
      IF DI.CUST.NO # CUSTOMER.FOR.JOB THEN
         MATWRITE CUST.REC ON CUSTOMER, CONO:CUSTOMER.FOR.JOB
         MATREADU CUST.REC FROM CUSTOMER, CONO:DI.CUST.NO ELSE
            MAT CUST.REC = ""
            CUST.NAME = "CREATED BY POST.INVOICE"
         END
         CUST.STATE = FIELD(CUST.ADDR4,",",2)
      END
      IN.NUM = 0
      XI.CNT = COUNT(CUST.INVOICE,VM) + (CUST.INVOICE # "")
      FOR X = XI.CNT TO 1 STEP -1 UNTIL IN.NUM
         INV.SFF = CUST.INVOICE<1,X>[7,2]
         BEGIN CASE
            CASE INV.SFF = "AC" OR INV.SFF = "PP" OR INV.SFF = "CM" AND INVOICE.SFX = "CM"
               IN.NUM = X + 1
            CASE INV.SFF = "AC" OR INV.SFF = "PP" OR INV.SFF = "CM" OR INV.SFF = "BC" OR INV.SFF = "DM" AND INVOICE.SFX = "DM"
               IN.NUM = X + 1
            CASE 1
               IN.NUM = -1
         END CASE
      NEXT X
      IF IN.NUM = 0 THEN IN.NUM = 1
      CUST.INVOICE = INSERT(CUST.INVOICE,1,IN.NUM,0,INVOICE.NO)
      CUST.AR.BAL = CUST.AR.BAL + TOTAL.INV
      POST.AMT = TOTAL.INV - TOTAL.TAX - TOTAL.SHP
      LOCATE POSTING.MON IN CUST.SALES.PER<1>,1 BY "DR" SETTING FND.PER ELSE
         INS POSTING.MON BEFORE CUST.SALES.PER<1,FND.PER>
         INS "0" BEFORE CUST.SALES<1,FND.PER>
      END
      CUST.SALES<1,FND.PER> = CUST.SALES<1,FND.PER> + POST.AMT
*T21777 v
*        IF INVOICE.SFX = "" THEN
      IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX # "DM" THEN
         IF DI.DATE > CUST.LAST.SALE THEN CUST.LAST.SALE = DI.DATE
         CUST.INVOICE.CNT<1,1> = CUST.INVOICE.CNT<1,1> + 1
         CUST.TOT.AMT = CUST.TOT.AMT + TOTAL.INV
      END
      BAL.DATE = OCONV(CUST.HIGH.BAL.DATE<1,1>, "D2-")
      NEW.DATE = OCONV(DI.PROC.DATE, "D2-")
      BAL.MON = FIELD(BAL.DATE,"-",1)
      NEW.MON = FIELD(NEW.DATE,"-",1)
      BAL.YR = BAL.DATE[7,2]
      NEW.YR = NEW.DATE[7,2]
      IF NEW.MON # BAL.MON OR NEW.YR # BAL.YR THEN
         CUST.HIGH.BAL = INSERT(CUST.HIGH.BAL,1,1,0,CUST.AR.BAL)
         CUST.HIGH.BAL.DATE = INSERT(CUST.HIGH.BAL.DATE,1,1,0,DI.PROC.DATE)
      END ELSE
         IF CUST.HIGH.BAL<1,1> < CUST.AR.BAL THEN
            CUST.HIGH.BAL<1,1> = CUST.AR.BAL
            CUST.HIGH.BAL.DATE<1,1> = DI.PROC.DATE
         END
      END
      BAL.CNT = COUNT(CUST.HIGH.BAL.DATE,VM) + (CUST.HIGH.BAL.DATE # "")
      FOR DROP = BAL.CNT TO 2 STEP - 1
         IF (CUST.HIGH.BAL.DATE<1,DROP> + 400) < DI.PROC.DATE THEN
            CUST.HIGH.BAL.DATE = DELETE(CUST.HIGH.BAL.DATE,1,DROP,0)
            CUST.HIGH.BAL = DELETE(CUST.HIGH.BAL,1,DROP,0)
         END
      NEXT DROP
      MATWRITE CUST.REC ON CUSTOMER, CONO:DI.CUST.NO
   END ELSE
      MATWRITE CUST.REC ON CUSTOMER, CONO:CUSTOMER.FOR.JOB
   END
*
*---- UPDATE OPEN RECEIVABLES
*
   IF CO.ARS = "Y" AND ZERO.INV = "N" THEN
      MAT OR.REC = ""
      OR.CUST = DI.CUST.NO
      OR.JOB = DI.JOB.NO
      OR.CHG.JOB = ""
      OR.INV.REF = DI.PO.NO
      JCNT = COUNT(DI.CHG.JOB,VM) + (DI.CHG.JOB # "")
      FOR J = 1 TO JCNT
         IF DI.CHG.JOB<1,J> # "" THEN
            LOCATE DI.CHG.JOB<1,J> IN OR.CHG.JOB<1>,1 SETTING JJ ELSE
               OR.CHG.JOB<1,-1> = DI.CHG.JOB<1,J>
            END
         END
      NEXT J
*CSF 18282
      IF MULTI.JOB THEN
         JCNT = DCOUNT(TOTAL.JOB.INV,VM)
         FOR J = 1 TO JCNT
            LOCATE MULTI.JOB.NOS<1,J> IN OR.CHG.JOB<1>,1 SETTING JJ ELSE JJ = DCOUNT(OR.CHG.JOB,VM)
            OR.DIV<1,JJ> = MULTI.JOB.DIV<1,J>
            OR.DEPT<1,JJ> = GEN.DEPT
            OR.CCTR<1,JJ> = GEN.CCTR
         NEXT J
      END ELSE
         OR.DIV = JOB.DIV
         IF JOB.DEPT = "" OR JOB.DEPT = "XX" THEN
            OR.DEPT = GEN.DEPT
         END ELSE
            OR.DEPT = JOB.DEPT[1,2]
         END
         OR.CCTR = GEN.CCTR
      END
      OR.PO = JOB.CUST.PO
      OR.MON = POSTING.MON
      OR.INV.DATE = DI.DATE
      OR.DUE.DATE = DI.DUE.DATE   ; * T25764
      OR.AS.DATE = DI.PROC.DATE
      OR.TR.DATE = DI.DATE
      BEGIN CASE
         CASE INVOICE.SFX = "CM"
            OR.TYPE = "C"
         CASE INVOICE.SFX = "DM"
            OR.TYPE = "D"
         CASE 1
            OR.TYPE = "I"
      END CASE
      OR.INV.AMT = TOTAL.INV - TOTAL.TAX - TOTAL.SHP - TOTAL.AGC - TOTAL.DSC - TOTAL.MSC
*CSF 26282 v
*        OR.SLSMAN = JOB.SLSMN
      OR.SLSMAN = MST.SLSMN
*CSF 26282 ^
      OR.AMT = TOTAL.INV
      OR.BAL = TOTAL.INV
      IF TOTAL.TAX <> 0 THEN
         PTR = COUNT(OR.TYPE,VM) + (OR.TYPE # "") + 1
         OR.TR.DATE<1,PTR> = DI.DATE
         OR.TYPE<1,PTR> = "T"
         OR.INV.AMT<1,PTR> = TOTAL.TAX
         OR.CHECK<1,PTR> = ""
         OR.CHK.DATE<1,PTR> = ""
         OR.CHK.AMT<1,PTR> = ""
      END
      IF TOTAL.SHP <> 0 THEN
         PTR = COUNT(OR.TYPE,VM) + (OR.TYPE # "") + 1
         OR.TR.DATE<1,PTR> = DI.DATE
         OR.TYPE<1,PTR> = "S"
         OR.INV.AMT<1,PTR> = TOTAL.SHP
         OR.CHECK<1,PTR> = ""
         OR.CHK.DATE<1,PTR> = ""
         OR.CHK.AMT<1,PTR> = ""
      END
      IF TOTAL.AGC <> 0 THEN
         PTR = COUNT(OR.TYPE,VM) + (OR.TYPE # "") + 1
         OR.TR.DATE<1,PTR> = DI.DATE
         OR.TYPE<1,PTR> = "G"
         OR.INV.AMT<1,PTR> = TOTAL.AGC
         OR.CHECK<1,PTR> = ""
         OR.CHK.DATE<1,PTR> = ""
         OR.CHK.AMT<1,PTR> = ""
      END
      IF TOTAL.DSC <> 0 THEN
         PTR = COUNT(OR.TYPE,VM) + (OR.TYPE # "") + 1
         OR.TR.DATE<1,PTR> = DI.DATE
         OR.TYPE<1,PTR> = "U"
         OR.INV.AMT<1,PTR> = TOTAL.DSC
         OR.CHECK<1,PTR> = ""
         OR.CHK.DATE<1,PTR> = ""
         OR.CHK.AMT<1,PTR> = ""
      END
      IF TOTAL.MSC <> 0 THEN
         PTR = COUNT(OR.TYPE,VM) + (OR.TYPE # "") + 1
         OR.TR.DATE<1,PTR> = DI.DATE
         OR.TYPE<1,PTR> = "M"
         OR.INV.AMT<1,PTR> = TOTAL.MSC
         OR.CHECK<1,PTR> = ""
         OR.CHK.DATE<1,PTR> = ""
         OR.CHK.AMT<1,PTR> = ""
      END
      MATWRITE OR.REC ON OPEN.RECV, DI.ID
   END
   IF CO.COMMISSION = "Y" THEN GOSUB 14000
*T28296 v
   IF MULTI.JOB THEN
      MATREADU JOB.REC FROM JOB,CONO:DI.JOB.NO THEN
         LOCATE INVOICE.NO IN JOB.INV.NO<1>,1 SETTING FND THEN
           IF JOB.INV.DATE<1,FND> = '' THEN
             JOB.INV.DATE<1,FND> = DI.DATE
             IF INVOICE.SFX # "PB" AND INVOICE.SFX # "CM" AND INVOICE.SFX # "DM" THEN
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
                IF JOB.TRACK.DATE<1,9> = "" OR DI.DATE > JOB.TRACK.DATE<1,9> THEN
                   JOB.TRACK.DATE<1,9> = DI.DATE
                END
             END
             IF DI.LAST = "Y" THEN
                JOB.TRACK.DATE<1,10> = TODAY
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
             END
           END
         END
         MATWRITE JOB.REC ON JOB,CONO:DI.JOB.NO
      END ELSE RELEASE JOB,CONO:DI.JOB.NO
   END
*T28296 ^
   MATWRITE DI.REC ON INVOICE, DI.ID
   DELETE DAILY.INVOICE, DI.ID
   PBCNT = COUNT(PRE.BILLS,VM) + (PRE.BILLS # "")
   FOR PB = 1 TO PBCNT
      MATREADU IVC.REC FROM INVOICE, CONO:PRE.BILLS<1,PB> ELSE
         RELEASE INVOICE, CONO:PRE.BILLS<1,PB>
         GOTO 1998
      END
      IF IVC.PRE.BILL.MON = "" THEN
         IVC.PRE.BILL.MON = POSTING.MON
         MATWRITE IVC.REC ON INVOICE, CONO:PRE.BILLS<1,PB>
      END ELSE
         RELEASE INVOICE, CONO:PRE.BILLS<1,PB>
      END
1998 *
   NEXT PB
1999 *
   RELEASE
   RETURN
*
*---- UPDATE SALES STATISTICS
*
****************************************************************
*  NOTE !!!!! WHEN TURNING OFF JOB SALES STATS ROUTINE ----    *
*   ONLY TURN OFF THE WRITE STATEMENT AS THIS ROUTINE FEED THE *
*  INVOICE SALES STATS RECORD WITH INVOICE NUMBER ZERO FOR     *
*  SPOILAGE SHIPPING AND ADJUSTED AMT AND ADJUSTED COSTS       *
****************************************************************
*  
12000 *
   IF CO.SAS = "Y" THEN
      MATREADU JSS.REC FROM JOB.SALES.STATS, CONO:CHARGE.JOB ELSE
         MAT JSS.REC = ""
      END
   END ELSE
      MAT JSS.REC = ""
   END
   JSS.CUST.ID = CUSTOMER.FOR.JOB
   JSS.SLSM.ID = JOB.SLSMN
   JSS.SALES.CODE = JOB.SALES.CODE
   JSS.JOB.CAT = JOB.CATG
   JSS.NO.COLORS = JOB.COLORS
   IF JOB.MASTER = "" THEN
      JSS.MASTER = CHARGE.JOB
   END ELSE
      JSS.MASTER = JOB.MASTER
   END
   IF CHARGE.INV # 0 OR CHARGE.TAX # 0 OR CHARGE.SHP # 0 OR CHARGE.AGC # 0 OR CHARGE.DSC # 0 OR CHARGE.MSC # 0 THEN
      LOCATE INVOICE.NO IN JSS.INVOICE.NO<1>,1 SETTING PTR ELSE
         PTR = COUNT(JSS.INVOICE.NO,VM) + (JSS.INVOICE.NO # "") + 1
         JSS.INVOICE.NO<1,PTR> = INVOICE.NO
         JSS.INVOICE.DATE<1,PTR> = DI.DATE
      END
      JSS.INVOICE.AMT<1,PTR> = JSS.INVOICE.AMT<1,PTR> + CHARGE.INV - CHARGE.TAX - CHARGE.SHP
      JSS.INVOICE.TOTAL = JSS.INVOICE.TOTAL + CHARGE.INV - CHARGE.TAX - CHARGE.SHP
      JSS.INVOICE.TAX<1,PTR> = JSS.INVOICE.TAX<1,PTR> + CHARGE.TAX
      JSS.INVOICE.SHIP<1,PTR> = JSS.INVOICE.SHIP<1,PTR> + CHARGE.SHP
   END
   JSS.COST.TOTAL = JOB.TOT.COST
   TOT.COST = JSS.COST.TOTAL
   ADJ.COST = JSS.ADJUST.AMT<1,1>
   SPOIL = JSS.ADJUST.AMT<1,2>
   PLANT.CON = JSS.ADJUST.AMT<1,3>
   OTH = JSS.ADJUST.AMT<1,4>
   ADJ.FACT.COST = TOT.COST + ADJ.COST + SPOIL + PLANT.CON + OTH
   JSS.ADJUST.COST<1,1> = ADJ.FACT.COST
   TOT.DCOST = ""
   TOT.SPOILAGE = ""
   TOT.SHIP = ""
   MATREAD JOB.REC FROM JOB,CONO:CHARGE.JOB ELSE MAT JOB.REC = ""
   LCNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
   FOR LB = 1 TO LCNT
      MATREAD CCTR.REC FROM COST.CNTR, CONO:JOB.LB.CCTR<1,LB> ELSE
         MAT CCTR.REC = ""
      END
      IF CCTR.TYPE = "S" OR CCTR.TYPE = "W" OR CCTR.TYPE = "B" THEN
         LOCATE JOB.LB.CCTR<1,LB> IN JSS.PRESS<1>,1 SETTING FOND ELSE
            FOND = COUNT(JSS.PRESS,VM) + (JSS.PRESS # "") + 1
            JSS.PRESS<1,FOND> = JOB.LB.CCTR<1,LB>
            IF FOND > 1 AND JSS.MULTI.PRESS # "Y" THEN JSS.MULTI.PRESS = "Y"
         END
      END
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.LB.TCOST<1,LB,4>
      JSS.LABOR.DCOST = JOB.LB.COST<1,LB>
   NEXT LB
   MCNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
   FOR MT = 1 TO MCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.MT.TCOST<1,MT,4>
      TOT.DCOST = TOT.DCOST + JOB.MT.DCOST<1,MT,1> + JOB.MT.DCOST<1,MT,2>
      JSS.MATL.DCOST = JOB.MT.COST<1,MT>
   NEXT MT
   OCNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
   FOR OO = 1 TO OCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.OS.TCOST<1,OO,4>
      TOT.DCOST = TOT.DCOST + JOB.OS.DCOST<1,OO>
      JSS.OSP.DCOST = JOB.OS.COST<1,OO>
   NEXT OO
   MSCNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
   FOR MS = 1 TO MSCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.MS.TCOST<1,MS,4>
      TOT.DCOST = TOT.DCOST + JOB.MS.DCOST<1,MS>
      JSS.MISC.DCOST = JOB.MS.COST<1,MS>
   NEXT MS
   SCNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
   FOR SP = 1 TO SCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.SP.TCOST<1,SP,4>
      TOT.DCOST = TOT.DCOST + JOB.SP.DCOST<1,SP>
      TOT.SHIP = TOT.SHIP + JOB.SP.COST<1,SP>
      JSS.SHIP.DCOST = JOB.SP.COST<1,SP>
   NEXT SP
   JSS.VALUE.ADDED = JSS.INVOICE.TOTAL - TOT.DCOST
   JSS.SPOILAGE = TOT.SPOILAGE
   JSS.SHIP.COST = TOT.SHIP
   IF DI.LAST = "Y" AND INVOICE.SFX # "CM" THEN
      JSS.COMPLETE.DATE = TODAY
      IF JSS.LAST.INV.DATE = "" THEN JSS.LAST.INV.DATE = DI.DATE
   END
   IF CO.SAS = "Y" THEN
      MATWRITE JSS.REC ON JOB.SALES.STATS, CONO:CHARGE.JOB
   END
****************************************************************
*          INVOICE SALES TOTAL RECORD CREATION                 *
****************************************************************
    *PROD.KEY='0'
    *WHSE.KEY='0'
    *MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":DI.JOB.NO:"_":"0":"_":PROD.KEY:"_":WHSE.KEY ELSE
        *MAT ISS.REC = ""
         *END
      *ISS.VALUE.ADDED = JSS.INVOICE.TOTAL - TOT.DCOST
      *ISS.SPOILAGE = TOT.SPOILAGE
      *ISS.SHIP.COST = TOT.SHIP
      *ISS.INVOICE.DATE = DI.DATE
      *ISS.CUST.ID = DI.CUST.NO
      *ISS.SLSM.ID = JOB.SLSMN
      *ISS.SALES.CODE = JOB.SALES.CODE
      *ISS.JOB.CAT = JOB.CATG
      *ISS.MASTER = DI.JOB.NO
      *ISS.NO.COLORS = JOB.COLORS
      *ISS.POSTING.MONTH = POSTING.MON
      *ISS.CUST.STATE = CUST.STATE
      *IF JOB.MASTER = "" THEN
         *ISS.MASTER = CHARGE.JOB
      *END ELSE
         *ISS.MASTER = JOB.MASTER
      *END
    *IF CO.SAS = "Y" THEN
       *MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":DI.JOB.NO:"_":"0":"_":PROD.KEY:"_":WHSE.KEY 
    *END
****************************************************************
   RETURN
*
*---- UPDATE COMMISSION FILE
*
14000 *
   SAVE.REC(1) = DI.CUST.NO
   SAVE.REC(2) = JOB.SLSMN
   SAVE.REC(3) = JOB.SALES.CODE
   SAVE.REC(4) = JSS.COST.TOTAL
   SAVE.REC(5) = JSS.ADJUST.COST<1,2>
   SAVE.REC(6) = JSS.ADJUST.COST<1,1>
   SAVE.REC(7) = JSS.COMMISSION<1,1>
   SAVE.REC(8) = JSS.VALUE.ADDED
   IF DI.LAST = "Y" THEN SAVE.REC(9) = TODAY
   SAVE.REC(14) = INVOICE.NO
   SAVE.REC(15) = DI.DATE
   SAVE.REC(16) = TODAY
   SAVE.REC(17) = POSTING.MON
   SAVE.REC(18) = TOTAL.INV
   SAVE.REC(19) = TOTAL.AGC
   SAVE.REC(20) = TOTAL.TAX
   SAVE.REC(21) = TOTAL.SHP
   SAVE.REC(52) = DI.JOB.NO
   SAVE.REC(30) = DI.PRE.BILL
   SAVE.REC(31) = DI.LAST
   CALL COMMISSION.UPD.SUB(CONO,MAT SAVE.REC,"POST.INV")
   RETURN
*
*---- UPDATE INVOICE SALES STATISTICS
*
16000 *
   PROD.KEY='0'
   WHSE.KEY='0'
   IF CO.SAS = "Y" THEN
   *   MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":DI.JOB.NO:"_":INVOICE.NO:"_":PROD.KEY:"_":WHSE.KEY ELSE
      MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":CHARGE.JOB:"_":INVOICE.NO:"_":PROD.KEY:"_":WHSE.KEY ELSE
         MAT ISS.REC = ""
      END
   END ELSE
      MAT ISS.REC = ""
   END
   ISS.INVOICE.AMT = ISS.INVOICE.AMT + CHARGE.INV - CHARGE.TAX 
   ISS.INVOICE.TOTAL = ISS.INVOICE.TOTAL + CHARGE.INV - CHARGE.TAX
   ISS.INVOICE.TAX = ISS.INVOICE.TAX + CHARGE.TAX
   ISS.INVOICE.SHIP = ISS.INVOICE.SHIP + CHARGE.SHP
   ISS.INVOICE.DATE = DI.DATE
   ISS.INVOICE.NO = INVOICE.NO
   ISS.CUST.ID = DI.CUST.NO
   ISS.SLSM.ID = JOB.SLSMN
   ISS.INVOICE.QTY = DI.QUANTITY 
   ISS.SALES.CODE = JOB.SALES.CODE
   ISS.JOB.CAT = JOB.CATG
   ISS.MASTER = DI.JOB.NO
   ISS.NO.COLORS = JOB.COLORS
   ISS.POSTING.MONTH = POSTING.MON
   ISS.CUST.STATE = CUST.STATE
   IF JOB.MASTER = "" THEN
      ISS.MASTER = CHARGE.JOB
   END ELSE
      ISS.MASTER = JOB.MASTER
   END
   BEGIN CASE
      CASE INVOICE.SFX = "CM"
      CASE INVOICE.SFX = "DM"
      CASE INVOICE.SFX = "PB"
      CASE 1
*T21761 v
*   ISS.COST.TOTAL = (AFTER.LABOR.DCOST + AFTER.LABOR.FFOH  + AFTER.LABOR.VFOH  + AFTER.LABOR.SAOH  + AFTER.MATL.DCOST  + AFTER.MATL.FFOH   + AFTER.MATL.VFOH   + AFTER.OSP.DCOST   + AFTER.OSP.FFOH    + AFTER.SHIP.DCOST  + AFTER.SHIP.FFOH   + AFTER.MISC.DCOST  + AFTER.MISC.FFOH)
         ISS.COST.TOTAL = ISS.COST.TOTAL + (AFTER.LABOR.DCOST + AFTER.LABOR.FFOH  + AFTER.LABOR.VFOH  + AFTER.LABOR.SAOH  + AFTER.MATL.DCOST  + AFTER.MATL.FFOH   + AFTER.MATL.VFOH   + AFTER.OSP.DCOST   + AFTER.OSP.FFOH    + AFTER.SHIP.DCOST  + AFTER.SHIP.FFOH   + AFTER.MISC.DCOST  + AFTER.MISC.FFOH)
*T21761 ^
         TOT.COST = ISS.COST.TOTAL
***** ADJUSTED COSTS CALCULATIONS *************************************
         ISS.ADJUST.AMT = JSS.ADJUST.AMT
         ADJ.COST = ISS.ADJUST.AMT<1,1>
         SPOIL = ISS.ADJUST.AMT<1,2>
         PLANT.CON = ISS.ADJUST.AMT<1,3>
         OTH = ISS.ADJUST.AMT<1,4>
         ADJ.FACT.COST = TOT.COST + ADJ.COST + SPOIL + PLANT.CON + OTH
         ISS.ADJUST.COST<1,1> = ADJ.FACT.COST
***** END OF ADJUSTED COSTS CALCULATIONS ********************************
         TOT.DCOST = ""
         TOT.SPOILAGE = ""
         TOT.SHIP = ""
         MATREAD JOB.REC FROM JOB,CONO:CHARGE.JOB ELSE MAT JOB.REC = ""
         LCNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # "")
         FOR LB = 1 TO LCNT
            MATREAD CCTR.REC FROM COST.CNTR, CONO:JOB.LB.CCTR<1,LB> ELSE
               MAT CCTR.REC = ""
            END
            IF CCTR.TYPE = "S" OR CCTR.TYPE = "W" OR CCTR.TYPE = "B" THEN
               LOCATE JOB.LB.CCTR<1,LB> IN ISS.PRESS<1>,1 SETTING FOND ELSE
                  FOND = COUNT(ISS.PRESS,VM) + (ISS.PRESS # "") + 1
                  ISS.PRESS<1,FOND> = JOB.LB.CCTR<1,LB>
                  IF FOND > 1 AND ISS.MULTI.PRESS # "Y" THEN ISS.MULTI.PRESS = "Y"
               END
            END
            TOT.SPOILAGE = TOT.SPOILAGE + JOB.LB.TCOST<1,LB,4>
*T21761  ISS.LABOR.DCOST = JOB.LB.COST<1,LB>
         NEXT LB
         MCNT = COUNT(JOB.MT.DEPT,VM) + (JOB.MT.DEPT # "")
         FOR MT = 1 TO MCNT
            TOT.SPOILAGE = TOT.SPOILAGE + JOB.MT.TCOST<1,MT,4>
            TOT.DCOST = TOT.DCOST + JOB.MT.DCOST<1,MT,1> + JOB.MT.DCOST<1,MT,2>
*T21761  ISS.MATL.DCOST = JOB.MT.COST<1,MT>
         NEXT MT
         OCNT = COUNT(JOB.OS.DEPT,VM) + (JOB.OS.DEPT # "")
         FOR OO = 1 TO OCNT
            TOT.SPOILAGE = TOT.SPOILAGE + JOB.OS.TCOST<1,OO,4>
            TOT.DCOST = TOT.DCOST + JOB.OS.DCOST<1,OO>
*T21761  ISS.OSP.DCOST = JOB.OS.COST<1,OO>
         NEXT OO
         MSCNT = COUNT(JOB.MS.DEPT,VM) + (JOB.MS.DEPT # "")
         FOR MS = 1 TO MSCNT
            TOT.SPOILAGE = TOT.SPOILAGE + JOB.MS.TCOST<1,MS,4>
            TOT.DCOST = TOT.DCOST + JOB.MS.DCOST<1,MS>
*T21761  ISS.MISC.DCOST = JOB.MS.COST<1,MS>
         NEXT MS
         SCNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # "")
         FOR SP = 1 TO SCNT
            TOT.SPOILAGE = TOT.SPOILAGE + JOB.SP.TCOST<1,SP,4>
            TOT.DCOST = TOT.DCOST + JOB.SP.DCOST<1,SP>
            TOT.SHIP = TOT.SHIP + JOB.SP.COST<1,SP>
*T21761  ISS.SHIP.DCOST = JOB.SP.COST<1,SP>
         NEXT SP
         IF DI.LAST = "Y" AND INVOICE.SFX # "CM" THEN
            ISS.COMPLETE.DATE = TODAY
            IF ISS.LAST.INV.DATE = "" THEN ISS.LAST.INV.DATE = DI.DATE
         END
*T21761 Add previous values of ISS costs to AFTER costs v
         ISS.LABOR.DCOST = AFTER.LABOR.DCOST + ISS.LABOR.DCOST
         ISS.LABOR.FFOH = AFTER.LABOR.FFOH + ISS.LABOR.FFOH
         ISS.LABOR.VFOH = AFTER.LABOR.VFOH + ISS.LABOR.VFOH
         ISS.LABOR.SAOH = AFTER.LABOR.SAOH + ISS.LABOR.SAOH
         ISS.MATL.DCOST = AFTER.MATL.DCOST + ISS.MATL.DCOST
         ISS.MATL.FFOH = AFTER.MATL.FFOH + ISS.MATL.FFOH
         ISS.MATL.VFOH = AFTER.MATL.VFOH + ISS.MATL.VFOH
         ISS.OSP.DCOST = AFTER.OSP.DCOST + ISS.OSP.DCOST
         ISS.OSP.FFOH = AFTER.OSP.FFOH + ISS.OSP.FFOH
         ISS.SHIP.DCOST = AFTER.SHIP.DCOST + ISS.SHIP.DCOST
         ISS.SHIP.FFOH = AFTER.SHIP.FFOH + ISS.SHIP.FFOH
         ISS.MISC.DCOST = AFTER.MISC.DCOST + ISS.MISC.DCOST
         ISS.MISC.FFOH = AFTER.MISC.FFOH + ISS.MISC.FFOH
*T21761 ^
   END CASE
   ISS.VALUE.ADDED = ISS.INVOICE.TOTAL - ( ISS.MATL.DCOST + ISS.OSP.DCOST + ISS.SHIP.DCOST + ISS.MISC.DCOST)
   IF CO.SAS = "Y" THEN
      IF INVOICE.SFX # "PB" THEN ; * T27770
         MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":CHARGE.JOB:"_":INVOICE.NO:"_":PROD.KEY:"_":WHSE.KEY
      END ; * T27770
   END
   RETURN
16100 * CAPTURE BEFORE  WIP COSTS
   BEFORE.LABOR.DCOST = JOB.LB.WIP<1,3,1>
   BEFORE.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
   BEFORE.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
   BEFORE.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
   BEFORE.MATL.DCOST  = JOB.MT.WIP<1,3,1>
   BEFORE.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
   BEFORE.MATL.VFOH   = JOB.MT.WIP<1,3,3>
   BEFORE.OSP.DCOST   = JOB.OS.WIP<1,3,1>
   BEFORE.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
   BEFORE.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
   BEFORE.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
   BEFORE.MISC.DCOST  = JOB.MS.WIP<1,3,1>
   BEFORE.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
   RETURN
16200 * CAPTURE AFTER  WIP COSTS
   AFTER.LABOR.DCOST = JOB.LB.WIP<1,3,1>
   AFTER.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
   AFTER.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
   AFTER.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
   AFTER.MATL.DCOST  = JOB.MT.WIP<1,3,1>
   AFTER.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
   AFTER.MATL.VFOH   = JOB.MT.WIP<1,3,3>
   AFTER.OSP.DCOST   = JOB.OS.WIP<1,3,1>
   AFTER.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
   AFTER.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
   AFTER.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
   AFTER.MISC.DCOST  = JOB.MS.WIP<1,3,1>
   AFTER.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
   AFTER.LABOR.DCOST = AFTER.LABOR.DCOST - BEFORE.LABOR.DCOST
   AFTER.LABOR.FFOH = AFTER.LABOR.FFOH - BEFORE.LABOR.FFOH
   AFTER.LABOR.VFOH = AFTER.LABOR.VFOH - BEFORE.LABOR.VFOH
   AFTER.LABOR.SAOH = AFTER.LABOR.SAOH - BEFORE.LABOR.SAOH
   AFTER.MATL.DCOST = AFTER.MATL.DCOST - BEFORE.MATL.DCOST
   AFTER.MATL.FFOH = AFTER.MATL.FFOH - BEFORE.MATL.FFOH 
   AFTER.MATL.VFOH = AFTER.MATL.VFOH - BEFORE.MATL.VFOH
   AFTER.OSP.DCOST = AFTER.OSP.DCOST - BEFORE.OSP.DCOST
   AFTER.OSP.FFOH = AFTER.OSP.FFOH - BEFORE.OSP.FFOH 
   AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST
   AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH
   AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST
   AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH
   RETURN
*T27770 v
*
*---- ROLL UP PRE-BILL INVOICE FOR INVOICE SALES STATS FIGURES
*
20000 *
   MAT HOLD.IVC.REC = MAT IVC.REC
   MAT HOLD.DI.REC = MAT DI.REC
   INVOICE.VECTOR = JOB.INV.NO
   NO.INV.VEC = DCOUNT(INVOICE.VECTOR<1>,VM)
   FOR NIV = 1 TO NO.INV.VEC
      RINV.NO = INVOICE.VECTOR<1,NIV>
      IF RINV.NO[7,2] = 'PB' THEN
         MATREADU IVC.REC FROM INVOICE, CONO:RINV.NO THEN
            IF IVC.PRE.BILL.MON = '' THEN
               NO.IVC.CODES = DCOUNT(IVC.CHG.CODE<1>,VM)
               FOR DIL = 1 TO NO.IVC.CODES
                  BEGIN CASE
                     CASE IVC.CHG.CODE<1,DIL> = 'TOT'
                     CASE IVC.CHG.CODE<1,DIL> = 'SUM'
                     CASE IVC.CHG.CODE<1,DIL> = 'CMT'
                     CASE IVC.CHG.CODE<1,DIL> = 'SUBT'
                     CASE 1
                        CHARGE.INV = CHARGE.INV + IVC.AMOUNT<1,DIL>
                  END CASE
                  BEGIN CASE
                     CASE IVC.CHG.CAT<1,DIL> = "TAX"
                        CHARGE.TAX = CHARGE.TAX + IVC.AMOUNT<1,DIL>
                     CASE IVC.CHG.CAT<1,DIL> = "SHP"
                        CHARGE.SHP = CHARGE.SHP + IVC.AMOUNT<1,DIL>
                     CASE 1
                  END CASE
               NEXT DIL
            END
         END
      END
   NEXT NIV
   MAT IVC.REC = MAT HOLD.IVC.REC
   MAT DI.REC = MAT HOLD.DI.REC
   RETURN
*T27770 ^
*T28935 v
21000 *
FOR JJ = 1 TO MCNT
  IJS.KEY=CONO:JOB.RESV.MATL<1,JJ>:"!":JOB.RESV.WHSE<1,JJ>:"!":CHARGE.JOB
  ISTAT.KEY=CONO:JOB.RESV.MATL<1,JJ>:"!":JOB.RESV.WHSE<1,JJ>
  MATREADU INV.STAT.REC FROM INV.STATS,ISTAT.KEY ELSE MAT INV.STAT.REC = ''
  LOCATE CHARGE.JOB IN ISTAT.JOB SETTING JLOC ELSE JLOC = 0
  MATREADU INV.JS.REC FROM INV.JOB.STATS,IJS.KEY THEN
    IJS.REQ.QTY = ""
    IJS.REQ.AMT = ""
    IJS.REQ.DATE = ""
    IF IJS.JOB.ALOC + IJS.JOB.QTY = 0 AND IJS.JMT.SEQ = "" AND IJS.REQ.QTY + 0 = 0 THEN
      DELETE INV.JOB.STATS, IJS.KEY
      IF JLOC # 0 THEN
        ISTAT.JOB = DELETE(ISTAT.JOB,1,JLOC,0)
      END
    END ELSE
      MATWRITE INV.JS.REC ON INV.JOB.STATS, IJS.KEY
    END
    IF ISTAT.JOB = '' AND ISTAT.PO = '' THEN
      DELETE INV.STATS, ISTAT.KEY
    END ELSE
      MATWRITE INV.STAT.REC ON INV.STATS, ISTAT.KEY
    END
  END
  RELEASE INV.JOB.STATS,IJS.KEY
  RELEASE INV.STATS,ISTAT.KEY
NEXT JJ
RETURN
*T28935 ^
*
*--- CALLS FOR SYSCOM
*
91000 *
   ERR.TYPE = 1;CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 *
   ERR.TYPE = 2;CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 *
   ERR.TYPE = 3;CALL SYSCOM(MAT SYSCOM.REC)
999999 *
   RELEASE
END
