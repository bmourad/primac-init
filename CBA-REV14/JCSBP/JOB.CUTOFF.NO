*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.CUTOFF.NO
* BY          - WALID YAMOUT, CBA
* DATE        - 04/05/84
* DESCRIPTION -
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/07/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>COMPANY
*
*--- SERUP SYSTEM ERROR MESSAGES
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
*--- OPEN THE FILES
*
  OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG="M.SCREENS FILE IS MISSING"; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING"; GOTO 93000
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG="COMPANY FILE IS MISSING"; GOTO 93000
*
*--- GET COMPANY NUMBER
*
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 999999
*
*--- INITIALIZATION
*
*   MAT EDIT.COM = ""
*   TYP = 0
*   CALL EDIT.SUB
*   FILL = "#"
  MAT EDIT.COM.DRIVER = ""
  LINE.SPACE = 1
  PAGE.SIZE = 13
  BEGIN.PAGE = 7
  LINES = 0
  LN = 1
  OLD.START.LINE = 0
  START.LINE = 0
  OLD.LINES = 0
  OPTION = ""
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "JOB.CUTOFF.NO"
  ECD.ACTION=1;CALL SCRN.EDIT
100*
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=2;CALL SCRN.EDIT
  * T26126 v
  MATREADU JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" LOCKED
    ERRMSG = 'JOB CUTOFF record is locked by user - ':GETUSERNAME(STATUS())
    GOSUB 91000;GOTO 99990 
  END ELSE
    MAT JOB.CUTOFF.REC = ""
  END
  * T26126 ^
  IF J.CUTOFF.NUM = "" THEN
    GOSUB 1000
    IF ECD.RET.VALUE = "END" THEN GOTO 99990
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 2000
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END ELSE
    ECD.NUM = 5
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = J.CUTOFF.NUM
    ECD.ACTION=5;CALL SCRN.EDIT
    LINES = COUNT(J.CUTOFF.PRE.NO,VM) + (J.CUTOFF.PRE.NO # "")
  END
  GOSUB 10000
*
*--- ENTER OPTION
*
  MORE = 1
  LOOP
    ECD.NUM = 11
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
    ECD.ACTION=4;CALL SCRN.EDIT
    OPTION = ECD.RET.VALUE
    BEGIN CASE
      CASE OPTION = "E" OR OPTION = "END"
        RELEASE      ;* T26126
        MORE = 0
      CASE OPTION = 1
        GOSUB 1000
      CASE OPTION = "A"
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 2000
        WHILE LINES > OLD.LINES DO REPEAT
        LN = LINES
        GOSUB 10000
      CASE OPTION = "S"
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE OPTION = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE OPTION = 'ST'
        LN = 1
        GOSUB 10000
      CASE OPTION = 'SB'
        LN = LINES
        GOSUB 10000
      * T25978 ^
      CASE OPTION = "C"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 2001
        END
        GOSUB 10000
      CASE OPTION = "D"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          J.CUTOFF.PREFIX = DELETE(J.CUTOFF.PREFIX,1,LN,0)
          J.CUTOFF.PRE.NO = DELETE(J.CUTOFF.PRE.NO,1,LN,0)
          LINES = COUNT(J.CUTOFF.PRE.NO,VM) + (J.CUTOFF.PRE.NO # "")
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 10000
      CASE OPTION = "F"
        MATWRITE JOB.CUTOFF.REC ON CONTROL , CONO : "JOB.CUTOFF.NO"
        MORE = 0
    END CASE
  WHILE MORE DO REPEAT
  GOTO 99990
*
*--- GET CUTOFF JOB NUMBER
*
1000*
  ECD.NUM = 5
  ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN J.CUTOFF.NUM = ECD.RET.VALUE
  RETURN
*
*--- GET ALL PREFIX AND NUMBERS
*
2000*
  GOSUB 10000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2001*
  FILL = "#"
  X = 6; Y = SLN; TYP = 1; MAXL = 2; O.R = "O"; MAXV = ""; MINV = ""
  DEFAULT = J.CUTOFF.PREFIX<1,LN>; HMSG = "ENTER PREFIX"
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = ""
      IF OPTION = "C" THEN GOTO 2001 
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2999
    CASE VALUE = "END"
      P_X  = 6 ; P_Y = SLN ; P_VALUE = J.CUTOFF.PREFIX<1,LN> "L#2" ; P_OPT = ""
      P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:J.CUTOFF.PRE.NO<1,LN> "R#7"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2999
    CASE VALUE # ""
      IF VALUE # J.CUTOFF.PREFIX<1,LN> THEN
        LOCATE VALUE IN J.CUTOFF.PREFIX<1>,1 SETTING LL ELSE LL = 0
        IF LL THEN
          ERRMSG = VALUE : " PREFIX IS ALREADY ON LINE " : LL
          GOSUB 91000
          GOTO 2001
        END
        J.CUTOFF.PREFIX<1,LN> = VALUE
      END
  END CASE
2002*
  X = 11; Y = SLN; TYP = 3; MAXL = 7; MAXV = ""; MINV = ""
  DEFAULT = J.CUTOFF.PRE.NO<1,LN> ; HMSG = "ENTER CUTOFF PREFIX NUMBER"
  IF J.CUTOFF.PRE.NO<1,LN> = "" THEN O.R ="R" ELSE O.R = "O"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 2001
  IF VALUE = "" THEN GOTO 2002
  J.CUTOFF.PRE.NO<1,LN> = VALUE
  LINES = COUNT(J.CUTOFF.PRE.NO,VM) + (J.CUTOFF.PRE.NO # "")
2999*
  RETURN
*
*--- SCROLL ROUTINE
*
10000*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:J.CUTOFF.PREFIX<1,N> "L#2"
    P_X  := AM:11 ; P_Y := AM:SLN ; P_VALUE := AM:J.CUTOFF.PRE.NO<1,N> "R#7"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001*
  RETURN
*
*--- GET LINE NUMBER
*
70000*
  GOSUB 10000
  ECD.NUM = 15
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  ECD.ACTION = 4; CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
*
*--- CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
92000 ERR.TYPE = 2 ; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
93000 ERR.TYPE = 3 ; CALL SYSCOM(MAT SYSCOM.REC)
  GOTO 999999
*
99990 *
  ECD.ACTION = 99 ; CALL SCRN.EDIT
999999*
*    PRINT @(-1)
END
