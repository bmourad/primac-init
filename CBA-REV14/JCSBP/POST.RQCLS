*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JOB.RCLS
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.RQCLS
* BY          - ZIAD A. YAMOUT , C.B.A
* DESCRIPTION -
* 03/26/07  gsa T29075 Option post Quanity.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.RCLS
*COPY>JCS.CPYLIB>JOB.RCLS
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>INVOICE.SALES.STATS
*COPY>CPYLIB>CHAR
*
**** INTITIALIZATION
*
   MAT FILE.VARS = ''
   MAT EDIT.COM = ''
   MAT EDIT.COM.DRIVER = ''
   MAT COMP.REC = ''
*
***** SETUP ERRMSG ROUTINE
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
***** T23278 v
   PROCREAD XX ELSE ERRMSG = 'MUST BE RUN FROM A PROC'; GOTO 93000
   DIV.CODE = XX<5>
***** T23278 ^
*
***** OPEN FILES
*
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
   OPEN '','DAILY.RCLS' TO DAILY.RCLS ELSE ERRMSG = 'DAILY.RCLS FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.RCLS' TO JOB.RCLS ELSE ERRMSG = 'JOB.RCLS FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE IS MISSING'; GOTO 93000
   OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE IS MISSING'; GOTO 93000
   OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST.CNTR.WIP FILE IS MISSING'; GOTO 93000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','INV_RECEIPTS_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV_SERIAL_TEMP FILE IS MISSING';GOTO 93000
   OPEN '','INV_RECEIPTS_TEMP' TO INV_SERIAL_TEMP ELSE ERRMSG='INV_SERIAL_TEMP FILE IS MISSING';GOTO 93000
   OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE IS MISSING'; GOTO 93000
*
***** SETUP VALUES FROM PMC.SCREENS
*
   ECD.ACTION = 1
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = 'GET.FISCAL.MONTH'
   CALL SCRN.EDIT
   ECD.SCRN.NO = 1
*
***** INT ECD.RT.VALUE AND PRINT SCREEN
*
   MAT SCV.REC = ""
   ECD.ACTION = 2
   CALL SCRN.EDIT
*
***** MAIN PROCESSING
*
   READNEXT DRC.ID ELSE GOTO 99999
   CONO = DRC.ID[1,3]
   MATREAD COMP.REC FROM COMPANY, CONO ELSE GOTO 99999
   CALL GET.DIV.FISCAL.MONTH(CONO,POSTING.MON,"POST RECLASSIFICATION OF QTY","JCFISCAL",CURR.MON,DIV.CODE);* T23278
   IF POSTING.MON = "END" THEN GOTO 99999
   GOSUB 1000
   DATA = 1
   LOOP
      READNEXT DRC.ID ELSE DATA = 0
      CONO = DRC.ID[1,3]
   WHILE DATA DO
      GOSUB 1000
   REPEAT
   GOTO 99999
1000 MATREADU DRC.REC FROM DAILY.RCLS, DRC.ID ELSE
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   DRC.STATUS = ''
*T27930 v
*  IF DRC.F.JOB = DRC.T.JOB THEN
  IF DRC.F.JOB = DRC.T.JOB AND DRC.SPOIL.RECLASS # "Y" THEN
*T27930 ^
      DRC.STATUS = 'CANNOT RECLASSIFY TO THE SAME JOB'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   IF DRC.F.TYPE # DRC.T.TYPE THEN
      DRC.STATUS = 'CANNOT RECLASSIFY TO A DIFFERENT TYPE'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE DAILY.RCLS, DRC.ID
      GOTO 1999
   END
   MATREADU JOB.REC FROM JOB, CONO : DRC.F.JOB ELSE
      DRC.STATUS = "CANNOT LOCATE JOB - " : DRC.F.JOB
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE JOB, DRC.F.JOB
      GOTO 1999
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1>=7
         DRC.STATUS = "JOB # (":DRC.F.JOB:") IS READY TO PURGE"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=8
         DRC.STATUS = "JOB # (":DRC.F.JOB:") HAS BEEN PURGED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=9
         DRC.STATUS = "JOB # (":DRC.F.JOB:") HAS BEEN CANCELLED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
   END CASE
   S.DIV = JOB.DIV
   S.DEPT = JOB.DEPT
   S.TYPE = JOB.TYPE
   PTR = 1
*   GOSUB 7000
   MAT FROM.JOB.REC = MAT JOB.REC
   MATREADU JOB.REC FROM JOB, CONO : DRC.T.JOB ELSE
      DRC.STATUS = 'JOB # ':DRC.T.JOB:' IS MISSING'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   BEGIN CASE
      CASE JOB.STATUS<1,1>=7
         DRC.STATUS = "JOB # (":DRC.T.JOB:") IS READY TO PURGE"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=8
         DRC.STATUS = "JOB # (":DRC.T.JOB:") HAS BEEN PURGED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
      CASE JOB.STATUS<1,1>=9
         DRC.STATUS = "JOB # (":DRC.T.JOB:") HAS BEEN CANCELLED"
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE JOB, DRC.F.JOB
         GOTO 1999
   END CASE
   IF JOB.DIV # S.DIV THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME DIVISION'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   IF JOB.DEPT # S.DEPT[1,LEN(JOB.DEPT)] THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME DEPARTMENT'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   IF JOB.TYPE # "R" AND JOB.TYPE # S.TYPE THEN
      DRC.STATUS = 'JOBS MUST HAVE THE SAME TYPE'
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
      GOTO 1999
   END
   PTR = 2
*   GOSUB 7000
   MAT TO.JOB.REC = MAT JOB.REC
   MAT JRC.REC = ''
   JRC.F.JOB = DRC.F.JOB
   JRC.F.TYPE = DRC.F.TYPE
   JRC.T.JOB = DRC.T.JOB
   JRC.T.CUST = JOB.CUST
   JRC.T.TYPE = DRC.T.TYPE
   JRC.DATE = DRC.DATE
   JRC.MON = POSTING.MON
   MAT JOB.REC = MAT FROM.JOB.REC
   JRC.F.CUST = JOB.CUST
   BEGIN CASE
     CASE DRC.F.TYPE = 'Q'
         CALL POST.MT.RQCLS.SUB(CONO)
      CASE 1
         DRC.STATUS = 'INVALID FROM TYPE'
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
         RELEASE
         GOTO 1999
   END CASE
   IF JRC.TRAN = '' THEN
      MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      RELEASE
   END ELSE
      MATWRITE FROM.JOB.REC ON JOB, CONO:DRC.F.JOB
      MATWRITE TO.JOB.REC ON JOB, CONO:DRC.T.JOB
      IF DRC.TRAN = '' THEN
         DELETE DAILY.RCLS, DRC.ID
      END ELSE
         MATWRITE DRC.REC ON DAILY.RCLS, DRC.ID
      END
      READU NEW.SEQ FROM CONTROL, CONO:"JOB.RCLS" ELSE NEW.SEQ = 10001
      NEXT.SEQ = NEW.SEQ + 1
      WRITE NEXT.SEQ ON CONTROL, CONO:"JOB.RCLS"
* ADDED 9.29.88 TO CAPTURE ID FROM DAILY FILE
      JRC.DAY.TRAN=DRC.ID[4,LEN(DRC.ID)-3]
      MATWRITE JRC.REC ON JOB.RCLS, CONO:NEW.SEQ
      MAT JOB.REC = MAT FROM.JOB.REC
   END
1999 RETURN
********
91000 ERR.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
*********
92000 ERR.TYPE = 2
   CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
*********
93000 ERR.TYPE = 3
   CALL SYSCOM(MAT SYSCOM.REC)
*
****** END OF JOB
*
99999 END
