********************************************************************
* REVISION   -[08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     -PRIMAC
* SOURCE     -JCSBP
* PROGRAM    -MATL.ED.LIST.RPT
* DATE       -12/29/86
* BY         -CURTIS WILLIAMS, C.B.A
* DESCRIPTION -
*T20868 doug 08/15/1996 * Allow paper type "PC"
*T20916 gat 08/27/1996 * FIX MATL EDIT PROBLEM WITH WHSE.LOC
*T21523 julie 01/29/1997 * ADD ERROR MESSAGE FOR SERIAL NOT RECEIVED
*T21718 lanny 03/18/1997 * Incorrect error checks on qty type.
*T21758 lanny 03/26/1997 * The errors listed donot include all in
*                          existence and error msgs are truncated.
*T22158 lanny 08/19/1997 * DMT.QTY must=IWLO.CURR.WGHT for roll if
*                          QTYPE=WR or DR AND DMT.QTY=0
*T23072 gat 07/15/1998 * FIX DMT.RS.QTYPE EDIT
*T23182 markt 08/14/1998 * Uninitialized variable errors.
*T25003 gat 03/31/2000 * FIX QTY CONVERSION ON TOTAL LINE
*T26113 lanny 08/24/2001 * Adjust qty for small rounding differences when
*                          remaining O/H is MSI or LBS.
*T26156 lanny 09/18/2001 * In reject mode DMT.STATUS is getting cleared.
*                          Also in GUI the black screen is displayed and
*                          issues prompt from FIELD.EDIT program.
*T26334 epitka 12/14/2001 * REV12
*T26493 cmykleb 03/28/2002 * Change pgm to get report # from proc.
*T26497 adelgado 04/02/2002 * Add validation rule for Inter-Divisional
*                             Whse.
*T26556 adelgado 05/10/2002 * Fix column heading alignment.
*T26599 epitka 06/18/2002 * ALLOW USE OF NON RESERVED SERIAL ON THE JOB
*                           FOR CATEGORY THAT HAS CATG.RSV.SERIAL='Y'
*T26505 epitka 08/23/2002 * FORCE LOCATION FROM THE SERIAL
*T27427 lross 05/13/2003 * Correct total for multi-usage of same serial
*                          where last serial is QTY.TYPE ...R QTY='0'.
*T27596 lross 07/24/2003 * INV.JOB.STATS record trashed for multilple
*                          receipts same prod/whse/job "AC"tual cost.
*C42474 cmykleb 10/03/2003 * Fix uninitialized variable error message.
*T27622 lross 08/08/2003 * Issue warning for posting of future period
*                          availability.
*T27705 lross 10/24/2003 * Increase length SERIAL to 15.
*T27785 thompson 11/13/2003 * Add time processed to print to help user
*                             correct entries on DR usave
*T28064 lross 04/16/2004 * Correct qty shown for QTYPE[2,1]=R.
*T28199 lross 07/21/2004 * Check for missing Spoil Code.
*T29061 lross 07/19/2007 * Include SALT T28860 in base REV14.
*********************************************************************
*---- INSERT EQUATE FROM CPYLIB
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>DAILY.MATL
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>ICS.CPYLIB>INV_SERIAL
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
DEFFUN DIVISION.POSITION (CONO,CONTROL.FILE,DIV.CODE)
DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
CUR.PERIOD = ''
DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
*
LINE.COUNT=99;PAGE.NO = 0
SP1=SPACE(1)
DMT.ERRMSG1="JOB IS NOT ON FILE"
DMT.ERRMSG2="JOB CANCELLED"
DMT.ERRMSG3="JOB READY TO PURGE"
DMT.ERRMSG4="JOB PURGED"
DMT.ERRMSG5="C/N LOCATE PRODUCT"
DMT.ERRMSG6="C/N LOCATE PROD LINE"
DMT.ERRMSG7="INVALID PRODUCT TYPE"
DMT.ERRMSG8="CUSTOMER OWNS INVNTY"
DMT.ERRMSG9="C/N USE FNGD PROD"
DMT.ERRMSG10="INVALID WHSE CODE"
DMT.ERRMSG11="INVALID WHSE LOC"
DMT.ERRMSG12="C/N READ DEPT RECORD"
DMT.ERRMSG13="DEPT/CCTR MISMATCH"
DMT.ERRMSG14="CCTR C/N BE FROZEN"
DMT.ERRMSG15="C/N READ CMPY RECORD"
DMT.ERRMSG16="C/N READ COST CNTR"
DMT.ERRMSG17="DIV/DEPT MISMATCH"
DMT.ERRMSG18="INVNTY QTY NOT AVAIL"
DMT.ERRMSG19="BAD QTY/INV.PAP.TYPE"
DMT.ERRMSG20="C/N READ IWLO.REC"
DMT.ERRMSG21="C/N READ DIV RECORD"
DMT.ERRMSG22="JOB/TYPE MISMATCH"
DMT.ERRMSG23="JOB/DIV MISMATCH"
DMT.ERRMSG24="JOB/DEPT MISMATCH"
T.LINE=''
T.LINE="----------"
D.LINE=""
D.LINE= "------ -------- - -------- -- ---- --- --------------- ---- ---- ----- --------------- ---------- --- -- --------- -----------------"
HDD.LINE="";HD.LINE = ""
*T27785HDD.LINE="                                                                 ENTRY                                                         "
HDD.LINE = SPACE(65):"ENTRY":SPACE(2):"SERIAL ID"
*T27705HD.LINE="TRANS  JOB NUM  T SP.CODE  DV DEPT CTR   PRODUCT NUM   WHSE LOC# PRINT  SERIAL ID   QUANTITY  U/M QT UNIT COST    NO POST STATUS"
HD.LINE="TRANS  JOB NUM  T SP.CODE  DV DEPT CTR   PRODUCT NUM   WHSE LOC# PRINT  ENTRY TIME      QUANTITY  U/M QT UNIT COST    NO POST STATUS"; *T27785
DCNT=0
SAVE.ID=""
SAVE.QTY=""
SAVE.STATUS=""
EDIT.ERROR=0
QTY.ERROR=0
PREV.PROD="!@#$%"
PREV.WHSE="!@#$%"
PREV.LOC ="!@#$%"
PREV.RSID="!@#$%"
TOT.QTY=''
*
SYS.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
*---- OPEN FILES
OPEN '','DAILY.MATL' TO DAILY.MATL ELSE
  ERRMSG='DAILY.MATL FILE IS MISSING';GOTO 93000
END
OPEN "","COMPANY" TO COMPANY ELSE
  ERRMSG="FILE COMPANY IS MISSING";GOTO 93000
END
OPEN "","DIVISION" TO DIVISION ELSE
  ERRMSG="FILE DIVISION IS MISSING";GOTO 93000
END
OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
  ERRMSG="FILE DEPARTMENT IS MISSING";GOTO 93000
END
OPEN "","COST.CNTR" TO COST.CNTR ELSE
  ERRMSG="FILE COST.CNTR IS MISSING";GOTO 93000
END
OPEN "","JOB" TO JOB ELSE
  ERRMSG="JOB FILE IS MISSING";GOTO 93000
END
OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE
  ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000
END
OPEN "","INVENTORY" TO INVENTORY ELSE
  ERRMSG="INVENTORY FILE IS MISSING";GOTO 93000
END
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
  ERRMSG="FILE WAREHOUSE IS MISSING";GOTO 93000
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
  ERRMSG="INV.WHSE FILE IS MISSING";GOTO 93000
END
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
  ERRMSG="INV.WHSE.LOC FILE IS MISSING";GOTO 93000
END
OPEN '','INV.STATS' TO INV.STATS ELSE
  ERRMSG='INV.STATS FILE IS MISSING';GOTO 93000
END
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
  ERRMSG='INV.JOB.STATS FILE IS MISSING';GOTO 93000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
  ERRMSG="CATEGORY FILE IS MISSING";GOTO 93000
END
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
  ERRMSG="INV_SERIAL FILE IS MISSING";GOTO 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
  ERRMSG="CONTROL FILE IS MISSING";GOTO 93000
END
*T28199 v
OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE
  ERRMSG="FILE SPOILAGE.CODES IS MISSING";GOTO 93000
END
*T28199 ^
*ERRM="THE DIVISIONS ON THE WAREHOUSE AND THE JOB DO NOT MATCH"
*
PROCREAD ID ELSE
  ERRMSG=' CANNOT PERFORM PROCREAD'
  GOTO 93000
END
CONO=ID<1>
*T26493 v
*  CONO.NAME=ID<2>
*  REPORT.NAME=ID<5>
*  REPORT.NUMBER="XXXX"
*  PROC.DIV=ID<6>
PMODE=ID<9>;*T26156
CONO.NAME = ""
REPORT.NAME = ""
REPORT.NUMBER = ID<2>
PROC.DIV=ID<5>
*T26493 ^
REPORT.DATE=DATE()
HD1="";HD2 = ""
DMT.ERR=''
MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = "" ; *T26497
MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE
  MAT JOB.CUTOFF.REC=''
  J.CUTOFF.NUM=0
END
*
CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
PRINTER ON
100* READ AND PROCESS FIRST RECORD
PRV.SER.USED=0 ;*T27427
READNEXT KEY ELSE
  GOSUB 1200
  PRINT "NO ITEMS PRESENT"
  GOTO 999999
END
MATREADU DMT.REC FROM DAILY.MATL, KEY ELSE GOTO 150
ORIG.DMT.STATUS=DMT.STATUS;* T20109
IF PMODE # 'R' THEN DMT.STATUS='' ELSE DMT.ERR.STATUS = DMT.STATUS
MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.REC=''
PREV.PROD=DMT.PROD
PRV.SERIAL=DMT.SERIAL ;*T27427
RESET.QTY=0
HOLD.DMT.QTY=0 ;*T28064
GOSUB 3000
IF PMODE # 'R' THEN
  DMT.STATUS=DMT.ERR.STATUS
END
*T28064IF RESET.QTY THEN DMT.QTY=0
IF RESET.QTY THEN DMT.QTY=HOLD.DMT.QTY
MATWRITE DMT.REC ON DAILY.MATL,KEY;*T26113
*---- READ AND PROCESS ALL THE FILES
150* 
DATA=0
LOOP
  READNEXT KEY ELSE DATA=1
WHILE DATA=0 DO
  MATREADU DMT.REC FROM DAILY.MATL,KEY ELSE GOTO 111
  ORIG.DMT.STATUS=DMT.STATUS;* 20109
  IF PMODE # 'R' THEN DMT.STATUS='' ELSE DMT.ERR.STATUS = DMT.STATUS
  RESET.QTY=0
  IF DMT.SERIAL#PRV.SERIAL THEN PRV.SER.USED=0 ; PRV.SERIAL=DMT.SERIAL ;*T27427
  GOSUB 3000;* PRINT THE RECORD
  IF PMODE # 'R' THEN
    DMT.STATUS=DMT.ERR.STATUS
  END;*T26113
*T28064  IF RESET.QTY THEN DMT.QTY=0
  IF RESET.QTY THEN DMT.QTY=HOLD.DMT.QTY
  MATWRITE DMT.REC ON DAILY.MATL,KEY;*T26113
111* 
REPEAT
GOSUB 4000
*---- END OF JOB
PRINTER OFF
GOTO 999999
1200* PRINT HEADINGS
PRINT CHAR(12)
PAGE.NO=PAGE.NO + 1
PRINT HD1:PAGE.NO
PRINT HD2
PRINT "DIVISION : ":PROC.DIV
PRINT
PRINT HDD.LINE
PRINT HD.LINE
PRINT D.LINE
LINE.COUNT=10
RETURN
3000* PRINT THE RECORD
IF PREV.PROD # DMT.PROD THEN
  GOSUB 4000
  PREV.PROD=DMT.PROD
  MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.REC=''
END
IWH.ID=CONO:DMT.PROD:'!':DMT.WHSE
MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
  PERIOD='' ; ERR.FLG='' ; ERRMSG=''
  OPEN.FLAG=1
*T27427 v No need to call here - see line 420
* CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
END ELSE
  MAT IWH.REC=''
END
*
IWLO.ID=IWH.ID:"!":DMT.LOC
MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  MAT IWLO.REC=""
END
CUR.QTY.USED=DMT.QTY ;*T27427
MAT ISTK.REC = '' ; * C42474
IF DMT.SERIAL#"" THEN
*T28199 v Move read above find in LOC.
  ISTK.ID=CONO:DMT.SERIAL
  MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE NULL
  LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC THEN
*   ISTK.ID=CONO:DMT.SERIAL
*   MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
*T27427 v IF DMT.RS.QTYPE[2,1]='R' AND DMT.QTY=0 THEN
      IF DMT.RS.QTYPE[2,1]='R' THEN
        IF DMT.QTY=0 THEN
*         DMT.QTY=ISTK.CUR.QTY
          DMT.QTY=ISTK.CUR.QTY-PRV.SER.USED
          CUR.QTY.USED=DMT.QTY
          RESET.QTY=1
          HOLD.DMT.QTY=0 ;*T28064
        END ELSE
          CUR.QTY.USED=(ISTK.CUR.QTY - PRV.SER.USED -DMT.QTY)
          PRV.SER.USED += CUR.QTY.USED
          HOLD.DMT.QTY=DMT.QTY ;*T28064
          DMT.QTY=CUR.QTY.USED ;*T28064
          RESET.QTY=1 ;*T28064
        END
*T27427 ^
      END
*T28199 END
  END
END
GOSUB 6000
BEGIN CASE
  CASE DMT.RS.QTYPE="DR"
*T28064 v
    IF NOT(RESET.QTY) THEN
      QUANTITY=INT(DMT.QTY/10)
    END ELSE
      QUANTITY=INT(HOLD.DMT.QTY/10)
    END
  CASE DMT.QTY >= 0
    IF NOT(RESET.QTY) THEN
      QUANTITY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'.5','')
    END ELSE
      QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.CNV.REC,'.5','')
    END
  CASE 1
    IF NOT(RESET.QTY) THEN
      QUANTITY=CALC.STK.QTY(DMT.QTY,MAT INV.CNV.REC,'-.5','')
    END ELSE
      QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.CNV.REC,'-.5','')
    END
*T28064 ^
END CASE
*T27427 v TOT.QTY=TOT.QTY + QUANTITY
TOT.QTY += CALC.STK.QTY(CUR.QTY.USED,MAT INV.CNV.REC,'.5','')
IF LINE.COUNT + 2 > 53 THEN
  GOSUB 1200
END
LINE.COUNT=LINE.COUNT + 2
*---- BEGIN ERROR CHECKS
IF PMODE='R' THEN GOTO 3099;*T26156
DMT.ERR.STATUS=""
DMT.ERR=""
MAT JOB.REC='';MAT INV.REC = '';MAT IWH.REC = '';MAT IWLO.REC = ''
*---- TEST FOR JOB RELATED ERRORS
MATREAD JOB.REC FROM JOB, CONO:DMT.JOB ELSE
  MAT JOB.REC=''
  FND=0
  IF NUM(DMT.JOB) THEN
    IF DMT.JOB < J.CUTOFF.NUM THEN FND=1
  END ELSE
    JC.CNT=DCOUNT(J.CUTOFF.PREFIX,VM)
    FOR L=1 TO JC.CNT WHILE FND = 0
      PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
      IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN
        CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
        IF NUM(CHK.VALUE) THEN
          IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
        END
      END
    NEXT L
  END
  IF FND=1 THEN
    JOB.DIV=DMT.DIV
    JOB.TYPE=DMT.TYPE
  END ELSE
    DMT.ERR='JOB #':DMT.JOB:' MISSING';GOSUB 7000;GOTO 3099
  END
END
BEGIN CASE
  CASE JOB.STATUS<1,1>=9
    DMT.ERR="JOB #":DMT.JOB:" CANCELLED";GOSUB 7000;GOTO 3099
  CASE JOB.STATUS<1,1>=7
    DMT.ERR="JOB #":DMT.JOB:" READY TO PURGE";GOSUB 7000;GOTO 3099
  CASE JOB.STATUS<1,1>=8
    DMT.ERR="JOB #":DMT.JOB:" IS PURGED";GOSUB 7000;GOTO 3099
  CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # ""
    IF DMT.INIT="" THEN
      DMT.ERR='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHORIZATION IS REQUIRED'
      GOSUB 7000
    END ELSE
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DMT.INIT ELSE
        DMT.ERR='JOB # ':DMT.JOB:' IS NOT BOOKED OR IN PROCESS. AUTHORIZATION INVALID'
        GOSUB 7000
      END
    END
END CASE
IF JOB.TYPE # "R" AND JOB.TYPE # DMT.TYPE THEN
  DMT.ERR="JOB/TYPE MISMATCH";GOSUB 7000
END
IF JOB.DIV # DMT.DIV THEN
  DMT.ERR='JOB/DIV MISMATCH';GOSUB 7000
END
  * T26497 v
IF DMT.WHSE = CO.INTR.WHSE AND CO.INTR.WHSE # '' THEN
  DMT.ERR = 'UNABLE TO USE MATERIAL FROM INTER-DIVISIONAL WAREHOUSE'
  GOSUB 7000
END
  * T26497 ^
MATREAD WHSE.REC FROM WAREHOUSE,CONO:DMT.WHSE ELSE MAT WHSE.REC=''
IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN
  DMT.ERR='JOB/WHS DIV MISMATCH';GOSUB 7000
END
IF JOB.DEPT # DMT.DEPT[1,LEN(JOB.DEPT)] THEN
  DMT.ERR='JOB/DEPT MISMATCH';GOSUB 7000
END
MATREAD DIV.REC FROM DIVISION, CONO:DMT.DIV ELSE
  MAT DIV.REC="";* T23182
  DMT.ERR='DIV ':DMT.DIV:' MISSING';GOSUB 7000
END
MATREAD DEPT.REC FROM DEPARTMENT, CONO:DMT.DEPT ELSE
  MAT DEPT.REC="";* T23182
  DMT.ERR='DEPT ':DMT.DEPT:' MISSING';GOSUB 7000
END
LOCATE DMT.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
  DMT.ERR='DIV/DEPT MISMATCH';GOSUB 7000
END
MATREAD CCTR.REC FROM COST.CNTR, CONO:DMT.CCTR ELSE
  MAT CCTR.REC="";* T23182
  DMT.ERR='CCTR ':DMT.CCTR:' MISSING';GOSUB 7000
END
IF CCTR.DEPT # DMT.DEPT THEN
  DMT.ERR='DEPT/CCTR MISMATCH';GOSUB 7000
END
IF CCTR.TYPE='F' THEN
  DMT.ERR='CCTR ':DMT.CCTR:' IS FROZEN';GOSUB 7000
END
LOCATE DMT.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
  DMT.ERR='DEPT/CCTR MISMATCH';GOSUB 7000
END
*T27622 v
DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
BEGIN CASE                                              
  CASE DIV.POS<1,1>=''                                  
    DIV.POS=DIV.POS<1,2>                                
    CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"JC")
    IF CUR.PERIOD<1,1>='' THEN                          
      CUR.PERIOD=CUR.PERIOD<1,2>                        
    END ELSE                                            
      IF CUR.PERIOD<1,1>='-2' THEN                      
        ERRMSG=CUR.PERIOD<1,2>                          
        DMT.ERR=ERRMSG; GOSUB 7000
      END                                               
    END                                                 
  CASE DIV.POS<1,1>='-1'                                
    ERRMSG=DIV.POS<1,2>                                 
    DMT.ERR=ERRMSG; GOSUB 7000
  CASE DIV.POS<1,1>='-2'                                
    ERRMSG=DIV.POS<1,2>                                 
    DMT.ERR=ERRMSG; GOSUB 7000
END CASE                                                
*T27622 ^
*T28199 v
IF CO.SPOIL.FLG="Y" AND DMT.TYPE="S" THEN
  READ SPOIL.CODE.DESC FROM SPOILAGE.CODES,CONO:DMT.SPOIL.CODE ELSE
    ERRMSG="SPOILAGE CODE (":DMT.SPOIL.CODE:") NOT ON FILE"
    DMT.ERR=ERRMSG; GOSUB 7000
  END
END
*T28199 ^
3005*---- 
*---- EDIT PROD, WHS, WHS LOC, PROD LN, OWNSHP, FNGD AND INV.PAP.TYPE
IF DMT.QTY < 0 OR (DMT.QTY=0 AND DMT.RS.QTYPE[2,1] # 'R') THEN
  DMT.ERR='MUST HAVE A POSITIVE QUANTITY'
  GOSUB 7000
END
MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE
  MAT INV.REC="";* T23182
  DMT.ERR='PRODUCT # ':DMT.PROD:' IS MISSING'
  GOSUB 7000
END
IF INV.CUST # "" THEN
  IF "X":INV.CUST # "X":JOB.CUST THEN
    DMT.ERR="CUSTOMER ":INV.CUST:" OWNS STOCK"
    GOSUB 7000
  END
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
  MAT CATG.REC="";* T23182
  DMT.ERR='CANNOT LOCATE PRODUCT LINE ':INV.LINE
  GOSUB 7000
END
*T29061 v
*IF CATG.MAJ.LINE="FNGD" THEN
*  DMT.ERR="Cannot utilize a Finished Goods product"
*  GOSUB 7000
*END
*T29061 ^
LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING FND.WHSE ELSE
  DMT.ERR='PRODUCT # ':DMT.PROD:' IS NOT IN WHSE # ':DMT.WHSE
  GOSUB 7000
END
IWH.ID=CONO:DMT.PROD:'!':DMT.WHSE
MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
  OPEN.FLAG=1
  PERIOD='' ; ERR.FLG='' ; ERRMSG=''
  CALL BUILD.IWH.FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
END ELSE
  MAT IWH.REC="";* T23182
  DMT.ERR='WAREHOUSE # ':DMT.WHSE:' IS MISSING FROM PRODUCT # ':DMT.PROD
  GOSUB 7000
END
*
IWLO.ID=IWH.ID:"!":DMT.LOC
MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  IF CATG.TRACK.QOH="Y" THEN
    DMT.ERR="LOCATION # ":DMT.LOC:" IS MISSING FROM # ":DMT.PROD:",":DMT.WHSE
    GOSUB 7000
  END ELSE
    MAT IWLO.REC=""
  END
END
PTR=1
LOOP
  LOCATE DMT.PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE
    JOB.RESV.MATL<1,MLOC>=DMT.PROD
    JOB.RESV.WHSE<1,MLOC>=DMT.WHSE
    JOB.RESV.DATE<1,MLOC>='NOT RESV'
    JOB.ALOC.QTY<1,MLOC>=0
    JOB.RESV.QTY<1,MLOC>=0
    JOB.USED.QTY<1,MLOC>=0
    JOB.ALOC.AMT<1,MLOC>=0
    JOB.RESV.AMT<1,MLOC>=0
    JOB.USED.AMT<1,MLOC>=0
  END
  IF DMT.WHSE=JOB.RESV.WHSE<1,MLOC> THEN
    PTR=0
  END ELSE
    PTR=MLOC + 1
  END
WHILE PTR DO
REPEAT
MATREAD INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STAT.REC=''
LOCATE DMT.JOB IN ISTAT.JOB<1>,1 SETTING JLOC ELSE
  ISTAT.JOB<1,JLOC>=DMT.JOB
END
MATREAD INV.JS.REC FROM INV.JOB.STATS, IWH.ID:"!":DMT.JOB ELSE
  MAT INV.JS.REC=""
  IJS.JOB.CUST=JOB.CUST
  IJS.JOB.DATE="NOT RESV"
  IJS.JOB.ALOC=0
  IJS.JOB.QTY=0
  IJS.JOB.USED=0
  IJS.RECP.NO=""
  IJS.FI.ORG=""
  IJS.FI.QTY=""
  IJS.FI.AMT=""
  IJS.JMT.SEQ=""
  IJS.JMT.QTY=""
END
IF INV.COST.WT + 0=0 THEN INV.COST.WT = 100
IF INV.PAP.TYPE # "REGULAR" THEN
  BEGIN CASE
    CASE DMT.RS.QTYPE=''
    CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="W"
    CASE INV.PAP.TYPE="ROLL" AND DMT.RS.QTYPE[1,1]="D"
    CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="S"
    CASE INV.PAP.TYPE="LROLL" AND DMT.RS.QTYPE[1,1]="D"
    CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="S"
    CASE INV.PAP.TYPE="PCOAT" AND DMT.RS.QTYPE[1,1]="D"
    CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="S"
    CASE INV.PAP.TYPE="SHEET" AND DMT.RS.QTYPE[1,1]="D"
    CASE 1
      DMT.ERR='INVALID QUANTITY TYPE';GOSUB 7000
  END CASE
END
WQA=CALC.STK.QTY(IWH.ON.HAND,MAT INV.CNV.REC,'.5','')
IF CATG.TRACK.QOH="Y" THEN
  IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY-IWH.ON.HAND) <= 50 OR DMT.RS.QTYPE = "WU" AND ABS(DMT.QTY-IWH.ON.HAND) <= 9 THEN
    DMT.QTY=IWH.ON.HAND
  END
  IF DMT.QTY > IWH.ON.HAND THEN
    DMT.ERR='QTY IS MORE THAN WAREHOUSE QTY ':OCONV(WQA,ICR.CNV)
    GOSUB 7000
  END
  LQA=CALC.STK.QTY(IWLO.LOC.ON.HAND,MAT INV.CNV.REC,'.5','')
  XCNT=DCOUNT(IWLO.SERIAL,VM)
  BEGIN CASE
    CASE XCNT # 1
    CASE 1
      IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY-IWLO.LOC.ON.HAND) <= 50 OR DMT.RS.QTYPE = "WU" AND ABS(DMT.QTY-IWLO.LOC.ON.HAND) <= 9 THEN
        DMT.QTY=IWLO.LOC.ON.HAND
      END
  END CASE
  IF DMT.QTY > IWLO.LOC.ON.HAND THEN
    DMT.ERR='QTY IS MORE THAN LOCATION QTY ':OCONV(LQA,ICR.CNV)
    GOSUB 7000
  END
*T27622 v
  IF CATG.COST.TYPE = 'AC' THEN
    IF ISTK.RECP.PERIOD > CUR.PERIOD THEN
      DMT.ERR='Warning - Received in Period ':ISTK.RECP.PERIOD
      GOSUB 7000
    END
*T28064 v
    LOCATE ISTK.RECP IN IWH.RECP.NO<1> SETTING ARFND THEN
      IF DMT.QTY > IWH.QTY.FI<1,ARFND> THEN
        DMT.ERR='Not enough qty available in receipt ':IWH.RECP.NO<1,ARFND>
        GOSUB 7000
      END
    END
*T28064 ^
  END ELSE
    CHK.QTY = DMT.QTY
*T28064 v IF DMT.QTY > 0 AND DMT.RS.QTYPE[2,1] # 'R' THEN
* In below IWH.RSV.FI was replaced with IWH.QTY.FI since DMT.QTY may have
* been reserved and IWH.RSV.FI would have been reduced by the reserved.
    IF DMT.QTY > 0 THEN
      FOR II = 1 TO DCOUNT(IWH.RSV.FI,VM) WHILE CHK.QTY > 0
        IF IWH.QTY.FI<1,II> > 0 THEN
          IF IWH.QTY.FI<1,II> >= CHK.QTY THEN
            IF IWH.RECP.PERIOD<1,II> <= CUR.PERIOD THEN
              CHK.QTY = 0
            END
          END ELSE
            IF IWH.RECP.PERIOD<1,II> <= CUR.PERIOD THEN
              CHK.QTY -= IWH.QTY.FI<1,II>
*T28064 ^
            END
          END
        END
      NEXT II
      IF CHK.QTY > 0 THEN
        DMT.ERR='Warning - Quantity not all available in current Period'
        GOSUB 7000
      END
    END
  END
END ELSE
  IF IWH.LOC="" THEN IWH.LOC = DMT.LOC
END
LOCATE DMT.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE
  DMT.ERR='CANNOT LOCATE LOCATION ':DMT.LOC
  GOSUB 7000
END
IF CATG.TRK.LVL='S' THEN
  IF DMT.SERIAL='' THEN
    DMT.ERR='NEED A SERIAL NUMBER'
    GOSUB 7000
  END
  ;*T26599 v
*  IF CATG.RSV.SERIAL='Y' THEN
*    LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JUNK ELSE
*      DMT.ERR='THIS SERIAL HAS NOT BEEN RESERVED FOR THIS JOB.'
*      GOSUB 7000
*    END
*  END
  ;*T26599 ^
  LOCATE DMT.SERIAL IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE
    DMT.ERR='CANNOT LOCATE SERIAL ':DMT.SERIAL:' IN LOCATION ':DMT.LOC
    GOSUB 7000
  END
  RQA=CALC.STK.QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'.5','')
  IF DMT.RS.QTYPE="SU" AND INV.UNIT<1,3> = "MSI" AND ABS(DMT.QTY-ISTK.CUR.QTY) <= 50  THEN
    DMT.QTY=ISTK.CUR.QTY 
  END
  IF DMT.RS.QTYPE="WU" AND ABS(DMT.QTY-ISTK.CUR.QTY) <= 9  THEN
    DMT.QTY=ISTK.CUR.QTY 
  END
  IF CATG.TRACK.QOH="Y" AND DMT.QTY > ISTK.CUR.QTY THEN
    DMT.ERR='QTY IS MORE THAN SERIAL QTY ':OCONV(RQA,ICR.CNV)
    GOSUB 7000
  END
END
;*T26599 v T26948
RESV.ARR=''
IF CATG.TRK.LVL='S' THEN
  RESV.ARR<4>=1 ;* 1=USAGE 
  IF CATG.RSV.SERIAL='Y' THEN
    LOCATE DMT.JOB IN ISTK.JOB<1> SETTING JUNK THEN
      RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>
    END ELSE
      RESV.QTY=DMT.QTY
    END
  END ELSE
    RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>
  END
  IF CATG.COST.TYPE='AC' THEN
    RESV.ARR<1>=ISTK.RECP
    RESV.ARR<2>=DMT.SERIAL
    RESV.ARR<3>=RESV.QTY
  END
END ELSE
  RESV.QTY=DMT.QTY - JOB.RESV.QTY<1,MLOC>
END
*T27622 v
*IF RESV.QTY < 0 THEN RESV.QTY = 0
IF RESV.QTY < 0 THEN RESV.QTY = 0; RESV.ARR<3> = 0
;*T26599 ^ T26948
*COPY>JCSBP>FIFO.RESV.SUB
IF ERRMSG # '' THEN
  DMT.ERR=ERRMSG
  GOSUB 7000
END
QTY.LEFT=DMT.QTY
JMT.DCOST=0;JMT.PTR = ""
JMT.MARKUP=IWH.MARKUP + 0
IF STD.PRICE=0 THEN
  STD.PRICE=INT((DMT.COST/10000) * ((DMT.QTY/10) / (INV.COST.WT/100)))
END ELSE
  STD.PRICE=0
  DMT.COST=0
END
T.MT.NO="";TPTR = 0
;*T26948 v                                                              
;* for following scenario                                               
;* reserve is kept only at the warehouse level                          
;* so we have to create IJS record at the usage time                    
*T27596 v
IF CATG.TRK.LVL='S' AND CATG.COST.TYPE='AC' AND CATG.RSV.SERIAL='N' THEN
   LOCATE ISTK.RECP IN IJS.RECP.NO<1>,1 BY 'AR' SETTING RFND ELSE
     INS ISTK.RECP BEFORE IJS.RECP.NO<1,RFND>
     INS '' BEFORE IJS.FI.ORG<1,RFND>
     INS '' BEFORE IJS.FI.QTY<1,RFND>
     INS '' BEFORE IJS.FI.AMT<1,RFND>
     INS '' BEFORE IJS.JMT.SEQ<1,RFND>
     INS '' BEFORE IJS.JMT.QTY<1,RFND>
   END
*  IJS.RECP.NO<1>=ISTK.RECP
   LOCATE ISTK.RECP IN IWH.RECP.NO<1> SETTING RPOS THEN
*     IJS.FI.AMT<1>=IWH.COST.FI<1,RPOS>
      IJS.FI.AMT<1,RFND>=IWH.COST.FI<1,RPOS>
   END
*  IJS.FI.QTY<1>=DMT.QTY
   IJS.FI.QTY<1,RFND>=DMT.QTY
*T27596 ^
END                                                                     
;*T26948 ^                                                              
QCNT=DCOUNT(IJS.RECP.NO,VM)
FOR Q=1 TO QCNT WHILE QTY.LEFT > 0
  LOCATE IJS.RECP.NO<1,Q> IN IWH.RECP.NO<1> SETTING FNO ELSE NULL
*  FNO=IJS.RECP.NO<1,Q>
  BEGIN CASE
    CASE IJS.FI.QTY<1,Q> + 0=0
      GOTO 3007
    CASE IJS.RECP.NO<1,Q> < 1
      CHECK.QTY=QTY.LEFT
    CASE QTY.LEFT > IJS.FI.QTY<1,Q>
      CHECK.QTY=IJS.FI.QTY<1,Q>
    CASE 1
      CHECK.QTY=QTY.LEFT
  END CASE
  IF IJS.FI.AMT<1,Q>+0=0 AND DMT.COST > 0 THEN
    FLOC=DCOUNT(IJS.RECP.NO,VM)
    IF IJS.RECP.NO<1,FLOC>=IWH.RECP.NO<1,FNO> AND IJS.FI.AMT<1,FLOC> = DMT.COST THEN
      IJS.FI.ORG<1,FLOC>=IJS.FI.ORG<1,FLOC> + CHECK.QTY
      IJS.FI.QTY<1,FLOC>=IJS.FI.QTY<1,FLOC> + CHECK.QTY
    END ELSE
      FLOC=FLOC + 1
      IJS.RECP.NO<1,FLOC>=IWH.RECP.NO<1,FNO>
      IJS.FI.ORG<1,FLOC>=CHECK.QTY
      IJS.FI.QTY<1,FLOC>=CHECK.QTY
      IJS.FI.AMT<1,FLOC>=DMT.COST
    END
    IJS.FI.ORG<1,Q>=IJS.FI.ORG<1,Q>-CHECK.QTY
    IJS.FI.QTY<1,Q>=IJS.FI.QTY<1,Q>-CHECK.QTY
  END ELSE
    FLOC=Q
    DCOST=INT((IJS.FI.AMT<1,FLOC>/10000) * ((CHECK.QTY/10) / (INV.COST.WT/100)))
    STD.PRICE=STD.PRICE + DCOST
  END
  IJS.FI.QTY<1,FLOC>=IJS.FI.QTY<1,FLOC>-CHECK.QTY
  SEQ.CNT=COUNT(IJS.JMT.QTY<1,FLOC>, SVM) + (IJS.JMT.QTY<1,FLOC> # "") + 1
  TPTR=TPTR + 1
  T.MT.NO<TPTR,1>=FLOC;T.MT.NO<TPTR,2> = SEQ.CNT
  IJS.JMT.QTY<1,FLOC,SEQ.CNT>=CHECK.QTY
  IF IJS.RECP.NO<1,Q> THEN
    FCOST=IWH.COST.FI<1,FNO>
    JMT.DCOST=JMT.DCOST + INT((FCOST/10000) * ((CHECK.QTY/10) / (INV.COST.WT/100)))
    IWH.QTY.FI<1,FNO>=IWH.QTY.FI<1,FNO>-CHECK.QTY
  END ELSE
    FCOST=0
  END
  PTR=1
  LOOP
    LOCATE IJS.RECP.NO<1,Q> IN JMT.PTR<1,1>,PTR SETTING TLOC ELSE
      JMT.PTR<1,1,TLOC>=IJS.RECP.NO<1,Q>
      JMT.PTR<1,3,TLOC>=FCOST
      JMT.PTR<1,4,TLOC>=IJS.FI.AMT<1,FLOC>
      PTR=0
    END
    BEGIN CASE
      CASE PTR=0
      CASE JMT.PTR<1,4,TLOC> <> IJS.FI.AMT<1,FLOC>
      CASE JMT.PTR<1,3,TLOC>=FCOST
        PTR=0
    END CASE
  WHILE PTR DO
    PTR=TLOC + 1
  REPEAT
  JMT.PTR<1,2,TLOC>=JMT.PTR<1,2,TLOC> + CHECK.QTY
  QTY.LEFT=QTY.LEFT-CHECK.QTY
3007 NEXT Q
IF QTY.LEFT > 0 THEN
  QTY.LEFT=CALC.STK.QTY(QTY.LEFT,MAT INV.CNV.REC,'.5','')
  DMT.ERR='CANNOT COMPUTE COST FOR QTY ':OCONV(QTY.LEFT,ICR.CNV)
  GOSUB 7000
END
*
3080* DMT.STATUS EXIT
*---- TEST FOR CUMULATIVE QTY AND VALID QTY FOR SERIAL NUMBER
IF DMT.SERIAL#'' THEN
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:DMT.SERIAL THEN
    IF ISTK.POST.DATE="" THEN
      DMT.ERR="SERIAL NOT RECVD"
      GOSUB 7000
    END ELSE
      IF ISTK.WHSE # DMT.WHSE THEN
        DMT.STATUS ='Serial is in different whse.' 
        GOSUB 7000
      END                                              
      IF DMT.LOC # ISTK.LOC THEN DMT.LOC=ISTK.LOC
    END
  END
END
3099*
*---- END ERROR CHECKS
H.LINE=''
H.LINE=KEY[4,99]"L#7"
H.LINE=H.LINE:DMT.JOB"L#9"
H.LINE=H.LINE:DMT.TYPE "L#2"
H.LINE=H.LINE:DMT.SPOIL.CODE "L#9"
H.LINE=H.LINE:DMT.DIV "L#3"
H.LINE=H.LINE:DMT.DEPT "L#5"
H.LINE=H.LINE:DMT.CCTR "L#4"
H.LINE=H.LINE:DMT.PROD "L#16"
H.LINE=H.LINE:DMT.WHSE "L#5"
H.LINE=H.LINE:DMT.LOC "L#5"
H.LINE=H.LINE:OCONV(DMT.DATE,"D2/")[1,5] "L#6"
*T27705 H.LINE=H.LINE:DMT.SERIAL "L#12"
H.LINE=H.LINE:DMT.SERIAL "L#16"
*T28064 IF RESET.QTY THEN QUANTITY=0
IF RESET.QTY THEN QUANTITY=CALC.STK.QTY(HOLD.DMT.QTY,MAT INV.CNV.REC,.5,'')
IF DMT.RS.QTYPE="DR" THEN
  H.LINE=H.LINE:OCONV(QUANTITY,"MD2") "R#10"
END ELSE
  H.LINE=H.LINE:OCONV(QUANTITY,ICR.CNV) "R#10"
END
IF DMT.RS.QTYPE='DR' THEN
  H.LINE=H.LINE:SP1:'IN' 'L#4'
END ELSE
  H.LINE=H.LINE:SP1:INV.UNIT<1,2> "L#4"
END
H.LINE=H.LINE:DMT.RS.QTYPE "L#3"
H.LINE=H.LINE:OCONV(DMT.COST,"MD4") "R#9"
*T27705 CALL DESC.REFORMAT.2(DMT.ERR.STATUS,20,NEW.DESC)
CALL DESC.REFORMAT.2(DMT.ERR.STATUS,17,NEW.DESC)
DMT.ERR.STATUS=NEW.DESC
*T27705 H.LINE=H.LINE:SP1:DMT.ERR.STATUS<1,1> "L#20"
H.LINE=H.LINE:SP1:DMT.ERR.STATUS<1,1> "L#17"
PRINT H.LINE
H.LINE=""
CNT=DCOUNT(DMT.ERR.STATUS, VM)
IF CNT > 1 THEN
  FOR I=2 TO CNT
    H.LINE=''
    IF I # CNT THEN
*T27705 H.LINE=SPACE(111):DMT.ERR.STATUS<1,I> "L#20"
      H.LINE=SPACE(115):DMT.ERR.STATUS<1,I> "L#17"
      LINE.COUNT=LINE.COUNT + 1
    END ELSE
      H.LINE=SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"
*T27705 H.LINE=H.LINE:SPACE(40):DMT.ERR.STATUS<1,I> "L#20"
      H.LINE=H.LINE:SPACE(1):OCONV(DMT.USAGE.SEQ[6,99], "MTS") ;*T27785
      H.LINE=H.LINE:SPACE(35):DMT.ERR.STATUS<1,I> "L#17"
    END
    PRINT H.LINE
  NEXT I
END ELSE
  H.LINE=SPACE(65):OCONV(DMT.PRT.DATE, "D2/")[1,5] "L#6"
      H.LINE=H.LINE:SPACE(1):OCONV(DMT.USAGE.SEQ[6,99], "MTS") ;*T27785
  PRINT H.LINE
END
RETURN
4000* CHECK FOR END OF PAGE
MATREAD INV.REC FROM INVENTORY, CONO:PREV.PROD ELSE MAT INV.REC=""
GOSUB 6000
IF LINE.COUNT + 3 > 53 THEN GOSUB 1200
LINE.COUNT=LINE.COUNT + 3
H.LINE=""
H.LINE=SPACE(25):'TOTAL FOR '
*T27705 H.LINE=H.LINE:SP1:INV.FULL.DESC "L#45"
H.LINE=H.LINE:INV.FULL.DESC "L#45"
*T27705 H.LINE=H.LINE:SP1:OCONV(TOT.QTY,ICR.CNV) "R#11"
H.LINE=H.LINE:SP1:OCONV(TOT.QTY,ICR.CNV) "R#16"
*T27705 PRINT SPACE(83):T.LINE
PRINT SPACE(87):T.LINE
PRINT H.LINE
PRINT
TOT.QTY=0
MATREAD INV.REC FROM INVENTORY, CONO:DMT.PROD ELSE MAT INV.REC=""
GOSUB 6000
RETURN
6000* 
*COPY>ICSBP>INV.UM.CNV
RETURN
7000* EDIT ERROR SUBROUTINE
IF INDEX(DMT.ERR.STATUS,DMT.ERR,1) < 1 THEN
  DMT.ERR.STATUS<1,-1>=DMT.ERR
END
DMT.ERR=''
RETURN
91000* CALLS FOR SYSCOM
ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000* 
ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000* 
PRINTER OFF
ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
999999* 
END
