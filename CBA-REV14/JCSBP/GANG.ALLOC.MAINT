*********************************************************************
*
* Copyright 1982 by Vercom Software Inc.
*
* REVISION - [09.1]
*
* PROGRAM  - GANG.ALLOC.MAINT
*
* AUTHOR   - NICHOLAS AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/02/92
*
* DESCRIPTION
*
* This program is used to maintain the allocation table which is used
* to allocate cost to jobs printed in a ganged fashion.
*
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>SCOMMON1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>GANG.ALLOC
*COPY>CPYLIB>SCREEN.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- PRE-INITIALIZATION
*
  PROCREAD PARAM ELSE PARAM = ""
  ACTION = PARAM<1>
*
*---- OPEN ALL FILES
*
  OPEN "","COMPANY" TO COMPANY ELSE
    ERRMSG = "CANNOT OPEN COMPANY FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
    ERRMSG = "CANNOT OPEN DEPARTMENT FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","COST.CNTR" TO COST.CNTR ELSE
    ERRMSG = "CANNOT OPEN COST.CNTR FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","GANG.ALLOC" TO GANG.ALLOC ELSE
    ERRMSG = "CANNOT OPEN GANG.ALLOC FILE"
    GOSUB 90000
    STOP
  END
  OPEN "","JCS.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "CANNOT OPEN JCS.SCREENS FILE"
    GOSUB 90000
    STOP
  END
*
*---- INITIALIZATION
*
  CONO = ""
  CALL GET.CONO1 (CONO, MAT COMP.REC, COMPANY, CONTROL)
  SCREEN INIT;#
  S$SCR = 1
  SCREEN DEFINE;GANG.ALLOC.MAINT
  SCREEN FORMAT
  SCREEN COUNT;;11
  LINE.COUNT = S$LCNT
  LINE.SPACE = S$LSPC
  LINE.CNT = 0
  REF.NO = ""
  CURR.REF.NO = ""
  DUP.ID = ""
  GOTO 110
*
*---- MAIN PROCESSING
*
100 *
  RELEASE
  SCREEN CLEAR
110 *
  GAT.ID = ""
  TMP.DESC = ""
  S$DATA(1)<S$SCR> = DATE()
  SCREEN DISPLAY;;1
  S$DATA(2)<S$SCR> = GAT.ID
  SCREEN FIELD;;2
  SCREEN INPUT;;2;GOTO 99999
  NEW.REC = 0
  IF ACTION = "M" THEN
    * T26126 v
    MATREADU GAT.REC FROM GANG.ALLOC, CONO:S$VALUE LOCKED
      ERRMSG = 'GANG ALLOCATION record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 90000;GOTO 100 
    END ELSE
    * T26126 ^
      MAT GAT.REC = ""
      NEW.REC = 1
    END
  END ELSE
    MATREAD GAT.REC FROM GANG.ALLOC, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Item. Try again! "
      GOSUB 90000
      GOTO 100
    END
  END
  GAT.ID = S$VALUE
120 *
  IF NEW.REC THEN
    S$DATA(31)<S$SCR> = ""
    SCREEN FIELD;;31
    SCREEN INPUT;;31;GOTO 100
    IF S$VALUE = "Y" THEN
      S$DATA(32)<S$SCR> = DUP.ID
      SCREEN FIELD;;32
      SCREEN INPUT;;32;GOTO 100
      MATREAD GAT.REC FROM GANG.ALLOC, CONO:S$VALUE ELSE
        ERRMSG = "Invalid Item ID. Try again! "
        GOSUB 90000
        GOTO 120
      END
      DUP.ID = S$VALUE
      NEW.REC = 0
      GOTO 120
    END
    FOR REF = 1 TO 1
      ON REF GOSUB 1010
      IF S$VALUE = "END" THEN GOTO 100
    NEXT REF
    LINE.CNT = 0
    OPT = "A"
    GOTO 510
  END ELSE
    GOSUB 80000
    GOSUB 81000
    LINE.CNT = DCOUNT(GAT.DEPT,VM)
    REF.NO = 1
    CURR.REF.NO = ""
    GOSUB 50000
  END
*
*---- GET OPERATOR REPLY
*
500 *
  BEGIN CASE
    CASE ACTION = "M"
      SCREEN FIELD;;21
      SCREEN INPUT;;21
    CASE 1
      SCREEN FIELD;;23
      SCREEN INPUT;;23
  END CASE
  OPT = S$VALUE
510 *
  BEGIN CASE
    CASE OPT = "E" OR OPT = "END"
      GOTO 100
    CASE NUM(OPT) AND OPT # ""
      ON OPT GOSUB 1010
    CASE OPT = "A" AND LINE.CNT < 99
      MODE = "A"
      DONE = 0
      FOR REF.NO = LINE.CNT+1 TO 99 UNTIL DONE
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          DONE = 1
          GOSUB 700
        END ELSE
          LINE.CNT = LINE.CNT + 1
        END
      NEXT REF.NO
      REF.NO = LINE.CNT
      CURR.REF.NO = ""
      GOSUB 50000
    CASE OPT = "C" AND LINE.CNT > 0
      MODE = "C"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 10000
        IF S$VALUE = "END" THEN
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPT = "D" AND LINE.CNT > 0
      MODE = "D"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 700
        LINE.CNT = LINE.CNT - 1
        IF REF.NO > LINE.CNT THEN REF.NO = REF.NO - 1
        CURR.REF.NO = ""
        GOSUB 50000
      END
    CASE OPT = "I" AND LINE.CNT > 0
      MODE = "I"
      GOSUB 600
      IF S$VALUE # "" AND S$VALUE # "END" THEN
        REF.NO = S$VALUE
        GOSUB 800
        LINE.CNT = LINE.CNT + 1
        CURR.REF.NO = ""
        GOSUB 50000
        GOSUB 10000
        IF S$VALUE = "END" THEN
          GOSUB 700
          LINE.CNT = LINE.CNT - 1
          CURR.REF.NO = ""
          GOSUB 50000
        END
      END
    CASE OPT = "S" OR OPT = "SF"
      REF.NO = CURR.REF.NO + LINE.COUNT
      IF REF.NO > LINE.CNT THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "SR"
      REF.NO = CURR.REF.NO - LINE.COUNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "ST"
      REF.NO = 1
      GOSUB 50000
    CASE OPT = "SB"
      REF.NO = LINE.CNT
      IF REF.NO < 1 THEN REF.NO = 1
      GOSUB 50000
    CASE OPT = "F"
      MATWRITE GAT.REC ON GANG.ALLOC, CONO:GAT.ID
      GOTO 100
  END CASE
  GOTO 500
*
*---- GET LINE NUMBER
*
600 *
  SCREEN FIELD;;22
  S$MINV = CURR.REF.NO
  S$MAXV = S$MINV + LINE.COUNT - 1
  IF S$MAXV > LINE.CNT THEN S$MAXV = LINE.CNT
  SCREEN INPUT;;22
  RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
  GAT.DEPT = DELETE(GAT.DEPT,1,REF.NO,0)
  GAT.CCTR = DELETE(GAT.CCTR,1,REF.NO,0)
  TMP.DESC = DELETE(TMP.DESC,1,REF.NO,0)
  GAT.TYPE = DELETE(GAT.TYPE,1,REF.NO,0)
  GOSUB 81050
  RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
  GAT.DEPT = INSERT(GAT.DEPT,1,REF.NO,0,"")
  GAT.CCTR = INSERT(GAT.CCTR,1,REF.NO,0,"")
  TMP.DESC = INSERT(TMP.DESC,1,REF.NO,0,"")
  GAT.TYPE = INSERT(GAT.TYPE,1,REF.NO,0,"")
  GOSUB 81050
  RETURN
*
*---- GET ALLOCATION TABLE DESCRIPTION
*
1010 *
  SCREEN FIELD;;3
  SCREEN INPUT;;3;RETURN
  GAT.DESC = S$VALUE
  RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
  S$VAL = REF.NO
  SCREEN DISPLAY;;11
10100 *
  S$DATA(12)<S$SCR,REF.NO> = GAT.DEPT<1,REF.NO>
  S$VAL = REF.NO
  SCREEN FIELD;;12
  SCREEN INPUT;;12;GOTO 19950
  IF S$VALUE # "" THEN
    MATREAD DEPT.REC FROM DEPARTMENT, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Department. Try again! "
      GOSUB 90000
      GOTO 10100
    END
    TEMP.MF3 = DEPT.DESC
    S$DATA(14)<S$SCR,REF.NO> = TEMP.MF3
    S$VAL = REF.NO
    SCREEN DISPLAY;;14
  END
  TEMP.MF1 = S$VALUE
10200 *
  S$DATA(13)<S$SCR,REF.NO> = GAT.CCTR<1,REF.NO>
  S$VAL = REF.NO
  SCREEN FIELD;;13
  SCREEN INPUT;;13;GOTO 19950
  IF S$VALUE = "" AND TEMP.MF1 = "" THEN GOTO 10100
  IF S$VALUE # "" THEN
    MATREAD CCTR.REC FROM COST.CNTR, CONO:S$VALUE ELSE
      ERRMSG = "Invalid Cost Center. Try again! "
      GOSUB 90000
      GOTO 10200
    END
    TEMP.MF1 = CCTR.DEPT
    S$DATA(12)<S$SCR,REF.NO> = TEMP.MF1
    S$VAL = REF.NO
    SCREEN DISPLAY;;12
    TEMP.MF3 = CCTR.DESC
    S$DATA(14)<S$SCR,REF.NO> = TEMP.MF3
    S$VAL = REF.NO
    SCREEN DISPLAY;;14
  END
  IF REF.NO > LINE.CNT THEN LCNT = REF.NO ELSE LCNT = LINE.CNT
  LREF = 0
  FOR REF = 1 TO LCNT WHILE LREF = 0
    TST.DEPT = GAT.DEPT<1,REF>
    TST.CCTR = GAT.CCTR<1,REF>
    BEGIN CASE
      CASE REF = REF.NO
      CASE TST.DEPT # TEMP.MF1
      CASE TST.CCTR = S$VALUE
        LREF = REF
    END CASE
  NEXT REF
  IF LREF >= 1 THEN
    ERRMSG = "Conflicting entry on line #":LREF
    GOSUB 90000
    GOTO 10200
  END
  TEMP.MF2 = S$VALUE
10300 *
10400 *
  S$VAL = REF.NO
  SCREEN FIELD;;15
  SCREEN INPUT;;15;GOTO 19950
  TEMP.MF4 = S$VALUE
19900 *
  GAT.DEPT<1,REF.NO> = TEMP.MF1
  GAT.CCTR<1,REF.NO> = TEMP.MF2
  TMP.DESC<1,REF.NO> = TEMP.MF3
  GAT.TYPE<1,REF.NO> = TEMP.MF4
  RETURN
19950 *
  GOSUB 81050
  RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
  START.REF.NO = 1 + INT((REF.NO-1)/LINE.COUNT)*LINE.COUNT
  IF START.REF.NO = CURR.REF.NO THEN RETURN
  CURR.REF.NO = START.REF.NO
  S$VAL = START.REF.NO
  S$CNT = DCOUNT(S$DATA(12)<S$SCR>,VM)
  SCREEN MULTI;;C;11;12;13;14;15
  RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
  S$DATA(2)<S$SCR> = GAT.ID
  S$DATA(3)<S$SCR> = GAT.DESC
80050 *
  SCREEN DISPLAY;;ALL
  RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
  TMP.DESC = ""
  LINE.CNT = DCOUNT(GAT.DEPT,VM)
  FOR REF = 1 TO LINE.CNT
    DEPT = GAT.DEPT<1,REF>
    CCTR = GAT.CCTR<1,REF>
    IF CCTR = "" THEN
      MATREAD DEPT.REC FROM DEPARTMENT, CONO:DEPT ELSE
        MAT DEPT.REC = ""
        DEPT.DESC = "???????????????"
      END
      TMP.DESC<1,REF> = DEPT.DESC
    END ELSE
      MATREAD CCTR.REC FROM COST.CNTR, CONO:CCTR ELSE
        MAT CCTR.REC = ""
        CCTR.DESC = "???????????????"
      END
      TMP.DESC<1,REF> = CCTR.DESC
    END
  NEXT REF
81050 *
  S$DATA(12)<S$SCR> = GAT.DEPT
  S$DATA(13)<S$SCR> = GAT.CCTR
  S$DATA(14)<S$SCR> = TMP.DESC
  S$DATA(15)<S$SCR> = GAT.TYPE
  RETURN
*
*---- ERROR ROUTINE
*
*90000 * ; 91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
90000*
  ERR.TYPE = 1
  CALL SI_SYSCOM(MAT SYSCOM.REC)
  RETURN
* 90000 *
*       PRINT @(0,23):@(-4):ERRMSG:
*       INPUT REPLY:
*       PRINT @(0,23):@(-4):
*       RETURN
*
*---- END OF PROGRAM
*
99999 *
*       PRINT @(-1)
END
