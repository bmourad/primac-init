*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.SHIP
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - SHIP.MAINT
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 02/09/84
* DESCRIPTION -
* COMMENT     - REVISED TO REFLECT JOB.STATUS '5' - "REOPENED"
*                TASK #12907 (RRG)
*C25313 RKB 3/29/96 * FIX MATCH SO THAT CCTR DEPT IS IN THE DIV REC THAT
*                     IS SPECIFIED IN THE JOB.DIV FIELD
*T23195 cindy 08/20/1998 * file prompt not gui'd
* markt 10/13/1998 * Add division security check
*T25949 cmykleb 01/23/2002 * Allow the user to use the ship-to records
*                            from the customer maintenance ship-to
*                            records.
*T25978 adelgado 02/15/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*ENDDOC
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>JOB
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>JCS.CPYLIB>DAILY.SHIP
*COPY>PMC.CPYLIB>CUSTOMER
*T25949 v
***COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>PMC.CPYLIB>SHIP.TO
*T25949 ^
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB.STAT.CODE
* T21796      DIM SAVE.CUST.REC(75)
   DIM SAVE.CUST.REC(CUST.REC.SIZE)
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
   MAT FILE.VARS=''
   OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='M.SCREENS FILE IS MISSING';GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE IS MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
   OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG='JOB.STATS FILE IS MISSING';GOTO 93000
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING';GOTO 93000
   OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG='CUSTOMER.XREF FILE IS MISSING';GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING';GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000
   OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING';GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING';GOTO 93000
   OPEN '','OPERATION' TO OPERATION ELSE ERRMSG='OPERATION FILE IS MISSING';GOTO 93000
   OPEN '','TAX' TO TAX ELSE ERRMSG='TAX FILE IS MISSING';GOTO 93000
   OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILAGE.CODES FILE IS MISSING';GOTO 93000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
   OPEN '','DAILY.SHIP' TO DAILY.SHIP ELSE ERRMSG='DAILY.SHIP FILE IS MISSING';GOTO 93000
   OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG='JOB.SHIP FILE IS MISSING';GOTO 93000
*T25949 v
   OPEN '','SHIP.TO' TO SHIP.TO ELSE ERRMSG='SHIP.TO FILE IS MISSING';GOTO 93000
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE IS MISSING';GOTO 93000
*T25949 ^
   MAT COMP.REC=''
   CONO=''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO='END' THEN GOTO 99999
   IF CO.OPS = "Y" THEN
      OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
         ERRMSG = "Cannot locate the JOB.FNGD.STATS file"
         GOTO 93000
      END
      OPS.ONFILE = 1
   END ELSE
      OPS.ONFILE = 0
   END
* INITIALIZATION
   MAT EDIT.COM='' ; MAT EDIT.COM.DRIVER='' ; MAT GEN.XREF.REC=''
   DASHES=STR('-',80);MAT JSI.REC=""
   ERRMSG=''
   UNKNOWN='????????????????????'
   BEGIN.PAGE = 18; PAGE.SIZE = 2; LINE.SPACE = 1
*T25949 v
*  GXR.CO=CONO
*  GXR.HEADING<1,2>='DESCRIPTION'
*  GXR.ATT<1,1>=0
*  GXR.ATT<1,2>=2
*  GXR.LEN<1,1>=5
*  GXR.LEN<1,2>=30
*T25949 ^
* MAIN PROCESSING
   ECD.SCRN.CNT=3
   ECD.SCRN.NAME<1>='SHIP.MAINT'
   ECD.SCRN.NAME<2>='SHIP.MAINT.SUB'
   ECD.SCRN.NAME<3>='FNGD.XREF'
   ECD.ACTION=1;CALL SCRN.EDIT
   ECD.SCRN.NO=1
100 MAT JOB.REC = ""; MAT DSP.REC = ""; MAT DIV.REC = ""; MAT DEPT.REC = ""
   RELEASE      ;* T26126
   MAT CCTR.REC = ""; MAT OPER.REC = ""; MAT CUST.REC = ""
   MAT SCV.REC = ""; OLD.START.LINE = 0; LN = 1; LINES = 0
   ECD.ACTION=6;CALL SCRN.EDIT
   ECD.NUM=5
   ECD.VALDAT.CODE=5; ECD.VALDAT.FILE=DAILY.SHIP; ECD.PREFIX.ID=CONO   ;* T26126
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         GOTO 99999
      CASE ECD.RET.VALUE='N'
         DSP.SEQ.NO = ECD.RET.VALUE
200      ECD.NUM=6
         ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=JOB; ECD.PREFIX.ID=CONO
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 100
         FOR I=1 TO JOB.REC.SIZE; JOB.REC(I)=ECD.VALDAT.ITEM<I>; NEXT I
         BEGIN CASE
            CASE JOB.STATUS<1,1>=9
               ERRMSG="THIS JOB IS CANCELLED";GOSUB 91000;GOTO 200
            CASE JOB.STATUS<1,1>=7
               ERRMSG="THIS JOB IS READY TO PURGE";GOSUB 91000;GOTO 200
            CASE JOB.STATUS<1,1>=8
               ERRMSG="THIS JOB IS PURGED";GOSUB 91000;GOTO 200
         END CASE
*T23278 v
         DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 200
         END
*T23278 ^
         IF OPS.ONFILE THEN
            MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:ECD.RET.VALUE THEN
               IF JFS.PROD # "" THEN
                  ERRMSG = "Cannot Ship a Finished Goods JOB"
                  GOSUB 91000; GOTO 200
               END
            END
         END
         GOSUB 7000
         IF VALUE = "END" THEN GOTO 200
         DSP.JOB=ECD.RET.VALUE
         MATREAD JSTAT.REC FROM JOB.STATS , CONO:DSP.JOB ELSE
            MAT JSTAT.REC = ""
         END
         SAVE.FINISH.QTY=JOB.QTY<1,2>
         ECD.NUM=7; SCV.REC(ECD.NUM)<1>=JOB.DESC<1,1>; ECD.ACTION=5;CALL SCRN.EDIT
         MATREAD CUST.REC FROM CUSTOMER, CONO : JOB.CUST ELSE
            MAT CUST.REC=''
            CUST.NAME=UNKNOWN; CUST.ADDR1=UNKNOWN
            CUST.ADDR2=UNKNOWN; CUST.ADDR3=UNKNOWN; CUST.ADDR4=UNKNOWN
         END
         IF CUST.ADDR4 # "" THEN
            ADDR4=CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            ADDR4=CUST.ZIP
         END
         ECD.NUM=8; SCV.REC(ECD.NUM)<1>=JOB.CUST; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=10; SCV.REC(ECD.NUM)<1>=CUST.NAME; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=12; SCV.REC(ECD.NUM)<1>=CUST.ADDR1; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=14; SCV.REC(ECD.NUM)<1>=CUST.ADDR2; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=16; SCV.REC(ECD.NUM)<1>=CUST.ADDR3; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=34; SCV.REC(ECD.NUM)<1>=ADDR4; ECD.ACTION=5;CALL SCRN.EDIT
         MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE MAT DIV.REC = ""; DIV.DESC=UNKNOWN
         DSP.DIV=JOB.DIV
         ECD.NUM=18; SCV.REC(ECD.NUM)<1>=DSP.DIV; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=19; SCV.REC(ECD.NUM)<1>=DIV.DESC; ECD.ACTION=5;CALL SCRN.EDIT
         IF JOB.DEPT # "" THEN
            DSP.DEPT = JOB.DEPT
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:DSP.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
            ECD.NUM=20; SCV.REC(ECD.NUM)<1>=DSP.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=21; SCV.REC(ECD.NUM)<1>=DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
         END
         FOR REQUEST=1 TO 4
            ON REQUEST GOSUB 1100,1200,1300,4000
            IF ECD.RET.VALUE='END' THEN GOTO 100
         NEXT REQUEST
         NEW=1
         GOSUB 2000
         IF NEW='END' THEN GOTO 100
      CASE ECD.VALDAT.ITEM # ''
         FOR I=1 TO DSP.REC.SIZE; DSP.REC(I)=ECD.VALDAT.ITEM<I>; NEXT I
*T23278 v
         DIV.CODE = DSP.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 100
         END
*T23278 ^
         DSP.SEQ.NO=ECD.RET.VALUE
         MATREAD JOB.REC FROM JOB, CONO:DSP.JOB ELSE JOB.DESC=UNKNOWN
         MATREAD JSTAT.REC FROM JOB.STATS , CONO:DSP.JOB ELSE MAT JSTAT.REC = ""
         SAVE.FINISH.QTY=JOB.QTY<1,2>
         MATREAD CUST.REC FROM CUSTOMER, CONO : JOB.CUST ELSE
            MAT CUST.REC=''
            CUST.NAME=UNKNOWN; CUST.ADDR1=UNKNOWN
            CUST.ADDR2=UNKNOWN; CUST.ADDR3=UNKNOWN; CUST.ADDR4=UNKNOWN
         END
         MATREAD DIV.REC FROM DIVISION, CONO:DSP.DIV ELSE DIV.DESC=UNKNOWN
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:DSP.DEPT ELSE DEPT.DESC=UNKNOWN
         MATREAD CCTR.REC FROM COST.CNTR, CONO:DSP.CCTR ELSE CCTR.DESC=UNKNOWN
         IF CCTR.TYPE='F' THEN CCTR.DESC="COST CENTER IS FROZEN"
         MATREAD OPER.REC FROM OPERATION, CONO:DSP.OPER ELSE OPER.DESC=UNKNOWN
         IF CUST.ADDR4 # "" THEN
            ADDR4=CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            ADDR4=CUST.ZIP
         END
         SCV.REC(6)<1>=DSP.JOB
         SCV.REC(7)<1>=JOB.DESC
         SCV.REC(8)<1>=JOB.CUST
         SCV.REC(9)<1>=DSP.SHIP.TO
         SCV.REC(10)<1>=CUST.NAME
         SCV.REC(11)<1>=DSP.NAME
         SCV.REC(12)<1>=CUST.ADDR1
         SCV.REC(13)<1>=DSP.ADDR1
         SCV.REC(14)<1>=CUST.ADDR2
         SCV.REC(15)<1>=DSP.ADDR2
         SCV.REC(16)<1>=CUST.ADDR3
         SCV.REC(17)<1>=DSP.ADDR3
         SCV.REC(34)<1>=ADDR4
         SCV.REC(35)<1>=DSP.ADDR4
         SCV.REC(18)<1>=DSP.DIV
         SCV.REC(19)<1>=DIV.DESC
         SCV.REC(20)<1>=DSP.DEPT
         SCV.REC(21)<1>=DEPT.DESC
         SCV.REC(22)<1>=DSP.CCTR
         SCV.REC(23)<1>=CCTR.DESC
         SCV.REC(24)<1>=DSP.OPER
         SCV.REC(25)<1>=OPER.DESC
         LINES = COUNT(DSP.DESC,VM) + (DSP.DESC # "")
         GOSUB 63000
         NEW=0
         IF DSP.INIT = "" THEN
            GOSUB 7000
            IF VALUE = "END" THEN GOTO 100
         END
      CASE 1
         ERRMSG='* * INVALID SEQUENCE # * *'
         GOSUB 91000 ; GOTO 100
   END CASE
   MORE=1
   LOOP
      ECD.NUM=32
      SCV.REC(ECD.NUM)<1>=''
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST=ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST='END' OR REQUEST='E'
            MORE=0
         CASE NUM(REQUEST)
*T23278 v
            DIV.CODE = DSP.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000
            END ELSE
*T23278 ^
               ON REQUEST GOSUB 1100,1200,1300,4000
            END;* T23278
         CASE REQUEST='N'
            GOSUB 2000
         CASE REQUEST='F'
*TEMP            X = 0; Y = 23; TYP = 18; O.R = "O"; PMSG = "Is this the last shipment (Y/RTN) :"
*T23195 v
*           X = 0; Y = 21; TYP = 18; O.R = "O"; PMSG = "Is this the last shipment (Y/RTN) :"
*           CALL EDIT.SUB
* TEMP P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
*P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*           IF VALUE # "END" THEN
*              DSP.LAST = VALUE
            ECD.NUM = 37
            ECD.ACTION = 4
            CALL SCRN.EDIT
            IF ECD.RET.VALUE # "END" THEN
               DSP.LAST = ECD.RET.VALUE
*T23195 ^
               IF DSP.SEQ.NO = "N" THEN
                  READU SHIP.ENT.SEQ FROM CONTROL , CONO:"DAILY.SHIP" ELSE SHIP.ENT.SEQ = 10001
                  LOOP
                     READ CK.FLG FROM JOB.SHIP , CONO:SHIP.ENT.SEQ ELSE CK.FLG = ""
                  WHILE CK.FLG # "" DO
                     SHIP.ENT.SEQ = SHIP.ENT.SEQ + 1
                  REPEAT
                  DSP.SEQ.NO = SHIP.ENT.SEQ
                  SHIP.ENT.SEQ = SHIP.ENT.SEQ + 1
                  WRITE SHIP.ENT.SEQ ON CONTROL , CONO:"DAILY.SHIP"
                  SCV.REC(5)<1> = DSP.SEQ.NO
                  ECD.NUM = 5 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
                  ERRMSG = "Please Note Down New Sequence Number" ; GOSUB 91000
               END
               DSP.PRT.DATE = ""
               MATWRITE DSP.REC ON DAILY.SHIP, CONO:DSP.SEQ.NO
               MORE=0
            END
         CASE REQUEST='D'
*T23278 v
            DIV.CODE = DSP.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000
            END ELSE
*T23278 ^
               DELETE DAILY.SHIP , CONO:DSP.SEQ.NO
               MORE=0
            END;* T23278
      END CASE
   WHILE MORE DO REPEAT
   GOTO 100
1100 ECD.NUM=9
*T25949  ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=CUSTOMER; ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
      CASE ECD.RET.VALUE='SAME'
         IF CUST.ADDR4 # "" THEN
            ADDR4=CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            ADDR4=CUST.ZIP
         END
         DSP.SHIP.TO=ECD.RET.VALUE
         DSP.NAME=CUST.NAME
         DSP.ADDR1=CUST.ADDR1
         DSP.ADDR2=CUST.ADDR2
         DSP.ADDR3=CUST.ADDR3
         DSP.ADDR4=ADDR4
      CASE ECD.RET.VALUE='000000'
         DSP.SHIP.TO=ECD.RET.VALUE
1101     ECD.NUM=11; ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GOTO 1109
            CASE 1
               DSP.NAME=ECD.RET.VALUE
         END CASE
1102     ECD.NUM=13; ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GOTO 1109
            CASE 1
               DSP.ADDR1=ECD.RET.VALUE
         END CASE
1103     ECD.NUM=15; ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GOTO 1109
            CASE 1
               DSP.ADDR2=ECD.RET.VALUE
         END CASE
1104     ECD.NUM=17; ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GOTO 1109
            CASE 1
               DSP.ADDR3=ECD.RET.VALUE
         END CASE
1105     ECD.NUM=35;ECD.ACTION=4;CALL SCRN.EDIT
         BEGIN CASE
            CASE ECD.RET.VALUE='END'
               GOTO 1109
            CASE 1
               DSP.ADDR4=ECD.RET.VALUE
         END CASE
1109*
      CASE ECD.VALDAT.ITEM # ''
         DSP.SHIP.TO=ECD.RET.VALUE
         MAT SAVE.CUST.REC=MAT CUST.REC
         IF CUST.ADDR4 # "" THEN
            ADDR4=CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            ADDR4=CUST.ZIP
         END
         FOR K=1 TO CUST.REC.SIZE; CUST.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
         DSP.NAME=CUST.NAME
         DSP.ADDR1=CUST.ADDR1
         DSP.ADDR2=CUST.ADDR2
         DSP.ADDR3=CUST.ADDR3
         IF CUST.ADDR4 # "" THEN
            DSP.ADDR4=CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            DSP.ADDR4=CUST.ZIP
         END
         MAT CUST.REC=MAT SAVE.CUST.REC
*T25949 v
      CASE ECD.RET.VALUE MATCHES '3N'
         MATREAD SPT.REC FROM SHIP.TO, CONO:JOB.CUST:'!':ECD.RET.VALUE ELSE
            ERRMSG = 'Customer Ship-To record ':ECD.RET.VALUE:' is not on file.'
            GOSUB 91000
            GOTO 1100
         END
         DSP.SHIP.TO = ECD.RET.VALUE
         DSP.NAME = SPT.NAME
         DSP.ADDR1 = SPT.ADDR1
         DSP.ADDR2 = SPT.ADDR2
         DSP.ADDR4 = SPT.CITY:', ':SPT.STATE:'  ':SPT.ZIP
         DSP.ATTN = SPT.ATTN
      CASE ECD.RET.VALUE = "???"
         IF CUST.SHIP.TO + 0 = 0 THEN
            ERRMSG = "There are no ship to records for this customer"
            GOSUB 91000
            SCV.REC(9)<1>=""
            GOTO 1100
         END
         GXR.CO = CONO
         GXR.NAME = "SHIP.TO1"
         GXR.FILE = SHIP.TO
         GXR.SRCH.ID = JOB.CUST:" : ":CUST.NAME
         GXR.IDLIST = ""
         FOR SNO = 1 TO CUST.SHIP.TO
            GXR.IDLIST<1,SNO> = JOB.CUST:'!':SNO'R%3'
         NEXT SNO
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         GXR.IDLIST = ""
         ECD.ACTION = 2 ; CALL SCRN.EDIT
         ECD.ACTION = 3 ; CALL SCRN.EDIT
         IF GXR.ID = "" THEN GOTO 1100
         ECD.RET.VALUE = FIELD(GXR.ID,'!',2)
         MATREAD SPT.REC FROM SHIP.TO, CONO:JOB.CUST:'!':ECD.RET.VALUE ELSE
            ERRMSG = 'Customer Ship-To record ':ECD.RET.VALUE:' is not on file.'
            GOSUB 91000
            GOTO 1100
         END
         DSP.SHIP.TO = ECD.RET.VALUE
         DSP.NAME = SPT.NAME
         DSP.ADDR1 = SPT.ADDR1
         DSP.ADDR2 = SPT.ADDR2
         DSP.ADDR4 = SPT.CITY:', ':SPT.STATE:'  ':SPT.ZIP
         DSP.ATTN = SPT.ATTN
         SCV.REC(9)<1>=DSP.SHIP.TO
         ECD.NUM = 9 ; ECD.ACTION = 5 ; CALL SCRN.EDIT
      CASE ECD.RET.VALUE MATCHES '0N'
         MATREAD CUST.REC FROM CUSTOMER, CONO: ECD.RET.VALUE ELSE
            ERRMSG = 'Customer # not on file'
            GOSUB 91000
            GOTO 1100
         END
         IF CUST.ADDR4 # "" THEN
            ADDR4  = CUST.ADDR4:"  ":CUST.ZIP
         END ELSE
            ADDR4 = CUST.ZIP
         END
         DSP.SHIP.TO = ECD.RET.VALUE
         DSP.NAME = CUST.NAME
         DSP.ADDR1 = CUST.ADDR1
         DSP.ADDR2 = CUST.ADDR2
         DSP.ADDR3 = CUST.ADDR3
         DSP.ADDR4 = ADDR4
*T25949 ^
      CASE 1
         GOTO 1100
   END CASE
   ECD.NUM=11; SCV.REC(ECD.NUM)<1>=DSP.NAME; ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=13; SCV.REC(ECD.NUM)<1>=DSP.ADDR1; ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=15; SCV.REC(ECD.NUM)<1>=DSP.ADDR2; ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=17; SCV.REC(ECD.NUM)<1>=DSP.ADDR3; ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=35; SCV.REC(ECD.NUM)<1>=DSP.ADDR4; ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
1200 ECD.NUM=22
   OLD.CCTR=DSP.CCTR;OLD.CCTR.DESC=CCTR.DESC
   OLD.DEPT=DSP.DEPT;OLD.DEPT.DESC=DEPT.DESC
   ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=COST.CNTR; ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
      CASE ECD.VALDAT.ITEM # ''
         FOR K=1 TO CCTR.REC.SIZE; CCTR.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
         IF JOB.DEPT # CCTR.DEPT[1,LEN(JOB.DEPT)] THEN
            ERRMSG = "JOB BELONGS TO DIFFERENT DEPARTMENT"
            GOSUB 91000; GOTO 1200
         END
         IF CCTR.TYPE = 'F' THEN
            ERRMSG = "THIST COST CENTER IS FROZEN"; GOSUB 91000; GOTO 1200
         END
*C25313 v
         LOCATE CCTR.DEPT IN DIV.DEPT<1>,1 SETTING POS ELSE
            ERRMSG = "THIS COST CENTER IN NOT ALLOWED FOR THIS DIVISION"
            GOSUB 91000
            GOTO 1200
         END
*C25313 ^
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
            MAT DEPT.REC = ""
            ERRMSG = "COST CENTER DEPARTMENT IS MISSING"
            GOSUB 91000; GOTO 1200
         END
         DSP.CCTR=ECD.RET.VALUE
         DSP.DEPT=CCTR.DEPT
         ECD.NUM=20; SCV.REC(ECD.NUM)<1>=DSP.DEPT; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=21; SCV.REC(ECD.NUM)<1>=DEPT.DESC; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=23; SCV.REC(ECD.NUM)<1>=CCTR.DESC; ECD.ACTION=5;CALL SCRN.EDIT
         ECD.RET.VALUE=""
         IF OLD.CCTR # "" AND OLD.CCTR # DSP.CCTR THEN GOSUB 1300
         IF ECD.RET.VALUE="END" THEN
            DSP.CCTR=OLD.CCTR
            DSP.DEPT=OLD.DEPT
            ECD.NUM=20;SCV.REC(ECD.NUM)<1>=DSP.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=21;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=22;SCV.REC(ECD.NUM)<1>=DSP.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=23;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            GOTO 1200
         END
      CASE ECD.RET.VALUE='???'
         IF JOB.DEPT = "" THEN
*T25949 v
*           GXR.XREF=DIVISION
*           GXR.FILE=DEPARTMENT
*           GXR.TOP.LINE='DEPARTMENT XREF SEARCH'
*           GXR.HEADING<1,1>='DEPT'
*           GXR.ATT<1,2>=2
*           GXR.LOC=2
*           GXR.ID=''
*           GXR.SRCH.ID=DSP.DIV
*           CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
            GXR.CO = CONO
            GXR.XREF = DIVISION
            GXR.NAME = "DEPT.DIV"
            GXR.FILE = DEPARTMENT
            GXR.TOP.LINE = "DEPARTMENT XREF SEARCH"
            GXR.HEADING = "DEPT"
            GXR.ID = ""
            GXR.SRCH.ID = DSP.DIV
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T25949 ^
            IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 63000; GOTO 1200
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
               ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
               ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 91000; GOSUB 63000; GOTO 1200
            END
            DSP.DEPT=GXR.ID
         END ELSE
            DSP.DEPT = JOB.DEPT
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:DSP.DEPT ELSE MAT DEPT.REC = ""; DEPT.DESC = UNKNOWN
         END
         SCV.REC(20)<1>=DSP.DEPT
         SCV.REC(21)<1>=DEPT.DESC
*T25949 v
*        GXR.XREF=DEPARTMENT
*        GXR.FILE=COST.CNTR
*        GXR.TOP.LINE='COST CENTER XREF SEARCH'
*        GXR.HEADING<1,1>='CCTR'
*        GXR.ATT<1,2>=1
*        GXR.LOC=5
*        GXR.ID=''
*        GXR.SRCH.ID=DSP.DEPT
*        CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
         GXR.CO = CONO
         GXR.XREF = DEPARTMENT
         GXR.NAME = "CCTR.DEPT"
         GXR.FILE = COST.CNTR
         GXR.TOP.LINE = "COST CENTER XREF SEARCH"
         GXR.HEADING = "CCTR"
         GXR.ID = ""
         GXR.SRCH.ID = DSP.DEPT
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T25949 ^
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN GOSUB 63000; GOTO 1200
         MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
            ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
            GOSUB 91000; GOSUB 63000; GOTO 1200
         END
         IF CCTR.DEPT # DSP.DEPT THEN
            ERRMSG = 'INCORRECT DEPARTMENT FOR COST CENTER ':GXR.ID
            GOSUB 91000;GOSUB 63000;GOTO 1200
         END
         IF CCTR.TYPE='F' THEN
            ERRMSG='COST.CNTR ':GXR.ID:' IS FROZEN'
            GOSUB 91000;GOSUB 63000;GOTO 1200
         END
         DSP.CCTR=GXR.ID
         SCV.REC(22)<1>=DSP.CCTR
         SCV.REC(23)<1>=CCTR.DESC
         GOSUB 63000
         ECD.RET.VALUE=""
         IF OLD.CCTR # "" AND OLD.CCTR # DSP.CCTR THEN GOSUB 1300
         IF ECD.RET.VALUE="END" THEN
            DSP.CCTR=OLD.CCTR
            DSP.DEPT=OLD.DEPT
            ECD.NUM=20;SCV.REC(ECD.NUM)<1>=DSP.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=21;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=22;SCV.REC(ECD.NUM)<1>=DSP.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=23;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            GOTO 1200
         END
      CASE 1
         GOTO 1200
   END CASE
   RETURN
1300*
   OLD.OPER=DSP.OPER;OLD.OPER.DESC=OPER.DESC
   CCTR.PO.CNT = COUNT(CCTR.OPER,VM) + (CCTR.OPER # "")
   IF CCTR.PO.CNT = 1 THEN
      DSP.OPER = CCTR.OPER<1,1>
      MATREAD OPER.REC FROM OPERATION , CONO:DSP.OPER ELSE
         ECD.RET.VALUE = "END"
         ERRMSG ="OPER # ":CCTR.OPER<1,1>:" NOT ON FILE"; GOSUB 91000 ; GOTO 1399
      END
      DSP.OPER = CCTR.OPER<1,1>
      SCV.REC(24)<1> = DSP.OPER
      SCV.REC(25)<1> = OPER.DESC
      GOSUB 63000
   END ELSE
      ECD.NUM=24
      ECD.VALDAT.CODE=2; ECD.VALDAT.FILE=OPERATION; ECD.PREFIX.ID=CONO
      ECD.ACTION=4;CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE='END'
            DSP.OPER=OLD.OPER
            SCV.REC(24)<1>=OLD.OPER;ECD.NUM=24;ECD.ACTION=5;CALL SCRN.EDIT
            SCV.REC(25)<1>=OLD.OPER.DESC;ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
         CASE ECD.VALDAT.ITEM # ''
            LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE
               ERRMSG='OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR # ':DSP.CCTR
               GOSUB 91000; GOTO 1300
            END
            FOR K=1 TO OPER.REC.SIZE; OPER.REC(K)=ECD.VALDAT.ITEM<K>; NEXT K
            DSP.OPER=ECD.RET.VALUE
            ECD.NUM=25; SCV.REC(ECD.NUM)<1>=OPER.DESC; ECD.ACTION=5;CALL SCRN.EDIT
         CASE ECD.RET.VALUE='???'
*T25949 v
*           GXR.XREF=COST.CNTR
*           GXR.FILE=OPERATION
*           GXR.TOP.LINE='OPERATION XREF SEARCH'
*           GXR.HEADING<1,1>='OPER'
*           GXR.ATT<1,2>=1
*           GXR.LOC=4
*           GXR.ID=''
*           GXR.SRCH.ID=DSP.CCTR
*           CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
            GXR.CO = CONO
            GXR.XREF = COST.CNTR
            GXR.NAME = "CCTR.OPER.1"
            GXR.FILE = OPERATION
            GXR.TOP.LINE = "OPERATION XREF SEARCH"
            GXR.HEADING = "OPER"
            GXR.ID = ""
            GXR.SRCH.ID = DSP.CCTR
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
*T25949 ^
            ECD.ACTION=2;CALL SCRN.EDIT
            IF GXR.ID='' THEN GOSUB 63000; GOTO 1300
            MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE
               ERRMSG='OPERATION ':GXR.ID:' IS MISSING'
               GOSUB 91000; GOSUB 63000; GOTO 1300
            END
            DSP.OPER=GXR.ID
            SCV.REC(24)<1>=DSP.OPER
            SCV.REC(25)<1>=OPER.DESC
            GOSUB 63000
         CASE 1
            GOTO 1300
      END CASE
   END
1399 RETURN
2000 LOCATE DSP.OPER IN CCTR.OPER<1>,1 SETTING OP ELSE OP=""
   IF OP # "" THEN
      STD.COST=CCTR.OPER.HR.RATE<1,OP>
   END ELSE
      STD.COST=""
   END
   ECD.SCRN.NO=2; ECD.ACTION=2;CALL SCRN.EDIT
   CALL SHIP.MAINT.SUB(CONO,NEW,STD.COST)
   IF NEW # 'END' THEN NEW=0
   ECD.SCRN.NO=1; ECD.ACTION=2;CALL SCRN.EDIT; GOSUB 63000
   RETURN
4000*
   IF DSP.DESC = '' THEN
      LINES = 0
      ACTION = 'A'
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 4100
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
   END
   GOSUB 4900
   ANCORE = 1
   LOOP
      ECD.NUM = 33
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            ANCORE = 0
         CASE ACTION = 'A'
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 4100
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 4900
         CASE ACTION = 'C'
            GOSUB 4800
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 4100
            END
         CASE ACTION = 'D'
            GOSUB 4800
            IF LN.NO THEN
               LN = LN.NO
               DSP.DESC = DELETE(DSP.DESC,1,LN,0)
               LINES = COUNT(DSP.DESC,VM) + (DSP.DESC # "")
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 4900
         CASE ACTION = 'S'
            LN = LN + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 4900
      * T25978 v
         CASE ACTION = 'SR'
            LN -= PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 4900
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 4900
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 4900
      * T25978 ^
      END CASE
   WHILE ANCORE DO REPEAT
   GOTO 4999
4100 GOSUB 4900
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 1 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
8200 X = 8; Y = SLN; TYP = 1; MAXL = 70; O.R = "O"
   IF DSP.DESC<1,LN> # '' THEN
      DEFAULT = DSP.DESC<1,LN>
   END
   CALL EDIT.SUB
   IF VALUE = "" OR VALUE = "END" THEN
      IF ACTION = 'A' THEN
         DSP.DESC = DELETE(DSP.DESC,1,LN,0)
      END
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 4299
   END
   IF NUM(FIELD(VALUE," ",1)) AND LEN(FIELD(VALUE," ",1)) > 8 THEN
      ERRMSG="Delivery Ticket will print only last 8 digits of quantity."
      GOSUB 91000
   END
   DSP.DESC<1,LN> = VALUE
   LINES = COUNT(DSP.DESC,VM) + (DSP.DESC # '')
4299 RETURN
4800 GOSUB 4900
   ECD.NUM = 36; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
   RETURN
4900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 4990
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:8 ; P_Y := AM:SLN ; P_VALUE := AM:DSP.DESC<1,N> "L#70"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
4990 RETURN
4999 RETURN
7000*
   VALUE = ""
   IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
7010  X=0;Y=23;MAXL=3;TYP=11
      PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE = "END" THEN GOTO 7999
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
         MAT JSI.REC =""
         ERRMSG = "INVALID INITIALS. TRY AGAIN"
         GOSUB 91000;GOTO 7010
      END
      DSP.INIT = VALUE
   END
7999*
   RETURN
63000 ECD.ACTION=3; CALL SCRN.EDIT
   OLD.START.LINE = 0; GOSUB 4900
   RETURN
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
