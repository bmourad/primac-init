     SUBROUTINE GANG.JOB.SUB(ACTION,CONO,GJOB.ID,CUSTID,MAT GJOB.REC,STATUS)
*********************************************************************
*
* Copyright 1982 by Vercom Software Inc.
*
* REVISION - [09.1]
*
* PROGRAM  - GANG.JOB.SUB
*
* AUTHOR   - NICK AMENDOLA, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 10/06/92
*
* DESCRIPTION
*
* This program is used to maintain the allocation by job for a
* ganged job.
*
*********************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>GEN.XREF
*COPY>PMC.CPYLIB>COMPANY
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>ICS.CPYLIB>INVENTORY
*COPY>JCS.CPYLIB>GANG.JOB
*COPY>JCS.CPYLIB>GANG.ALLOC
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      STATUS = ""
      S$SCR = ECD.SCRN.NO
      BEGIN.PAGE = 10
      PAGE.SIZE = 10
      LINE.SPACE = 1
      LINES = 0
      LN = ""
      OLD.START.LINE = ""
      TMP.STATUS = ""
*
*---- MAIN PROCESSING
*
100 *
      SCV.REC(1)<S$SCR> = DATE()
      ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
      IF GJOB.JOB<1,1> = "" THEN NEW.REC = 1 ELSE NEW.REC = 0
120 *
      IF NEW.REC THEN
         GOSUB 80000
         FOR NREF = 1 TO 2
            ON NREF GOSUB 1010,1020
            IF ECD.RET.VALUE = "END" THEN
               STATUS = "E"
               GOTO 99999
            END
         NEXT NREF
         LINES = 0
         OPT = "A"
         GOTO 510
      END ELSE
         LINES = DCOUNT(GJOB.JOB,VM)
         GOSUB 80000
         GOSUB 81000
         LN = 1
         OLD.START.LINE = ""
         GOSUB 50000
      END
*
*---- GET OPERATOR REPLY
*
500 *
      BEGIN CASE
      CASE ACTION = "M"
         ECD.NUM=21;ECD.ACTION=4;CALL SCRN.EDIT
      CASE 1
         ECD.NUM=23;ECD.ACTION=4;CALL SCRN.EDIT
      END CASE
      OPT = ECD.RET.VALUE
510 *
      BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         TOT.PCT = SUM(GJOB.PCT)
         IF TOT.PCT # 0 AND TOT.PCT # 100 THEN
            ERRMSG = "ERROR - Percentage must = 100%."
            GOSUB 90000
            GOTO 500
         END
         IF TOT.AREA < CALC.AREA THEN
            ERRMSG = "WARNING - Calculated area exceeds specified area."
            GOSUB 90000
         END
         GOTO 99999
      CASE NUM(OPT) AND OPT # ""
         ON OPT GOSUB 1010,1020
      CASE ACTION # "M" AND OPT = "A"
         ECD.SCRN.NO = ECD.SCRN.NO + 1
         ECD.ACTION=2;CALL SCRN.EDIT
         CALL GANG.JOB.ALLOC(ACTION,CONO,MAT GJOB.REC,GANG.ALLOC,STATUS)
         ECD.SCRN.NO = ECD.SCRN.NO - 1
         ECD.ACTION=2;CALL SCRN.EDIT
         GOSUB 80050
         OLD.START.LINE = ""
         GOSUB 50000
      CASE OPT = "A" AND LINES < 99
         MODE = "A"
         DONE = 0
         FOR LN = LINES+1 TO 99 UNTIL DONE
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               DONE = 1
               GOSUB 700
            END ELSE
               LINES = LINES + 1
            END
            GOSUB 85000
         NEXT LN
         LN = LINES
         OLD.START.LINE = ""
         GOSUB 50000
      CASE OPT = "C" AND LINES > 0
         MODE = "C"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               OLD.START.LINE = ""
               GOSUB 50000
            END
            GOSUB 85000
         END
      CASE OPT = "D" AND LINES > 0
         MODE = "D"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 700
            LINES = LINES - 1
            IF LN > LINES THEN LN = LN - 1
            OLD.START.LINE = ""
            GOSUB 50000
            GOSUB 85000
         END
      CASE OPT = "I" AND LINES > 0
         MODE = "I"
         GOSUB 600
         IF ECD.RET.VALUE # "" AND ECD.RET.VALUE # "END" THEN
            LN = ECD.RET.VALUE
            GOSUB 800
            LINES = LINES + 1
            OLD.START.LINE = ""
            GOSUB 50000
            GOSUB 10000
            IF ECD.RET.VALUE = "END" THEN
               GOSUB 700
               LINES = LINES - 1
               OLD.START.LINE = ""
               GOSUB 50000
            END
            GOSUB 85000
         END
      CASE OPT = "S" OR OPT = "SF"
         LN = OLD.START.LINE + PAGE.SIZE
         IF LN > LINES THEN LN = 1
         GOSUB 50000
      CASE OPT = "SR"
         LN = OLD.START.LINE - PAGE.SIZE
         IF LN < 1 THEN LN = 1
         GOSUB 50000
      CASE OPT = "ST"
         LN = 1
         GOSUB 50000
      CASE OPT = "SB"
         LN = LINES
         IF LN < 1 THEN LN = 1
         GOSUB 50000
      CASE OPT = "P"
         ECD.NUM=24;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "Y" THEN
            DELETE GANG.JOB,CONO:GJOB.ID
            GOTO 99999
         END
      END CASE
      GOTO 500
*
*---- GET LINE NUMBER
*
600 *
      ECD.NUM=22
      ECD.MINV = OLD.START.LINE
      ECD.MAXV = ECD.MINV + PAGE.SIZE - 1
      IF ECD.MAXV > LINES THEN ECD.MAXV = LINES
      ECD.ACTION=4;CALL SCRN.EDIT
      RETURN
*
*---- DELETE MULTI-LINE DATA
*
700 *
      GJOB.JOB = DELETE(GJOB.JOB,1,LN,0)
      GJOB.PROD= DELETE(GJOB.PROD,1,LN,0)
      GJOB.PDESC = DELETE(GJOB.PDESC,1,LN,0)
      GJOB.WIDTH = DELETE(GJOB.WIDTH,1,LN,0)
      GJOB.LENGTH = DELETE(GJOB.LENGTH,1,LN,0)
      GJOB.SPOTS = DELETE(GJOB.SPOTS,1,LN,0)
      GJOB.PCT = DELETE(GJOB.PCT,1,LN,0)
      TMP.STATUS = DELETE(TMP.STATUS,1,LN,0)
      GOSUB 81050
      RETURN
*
*---- INSERT MULTI-LINE DATA
*
800 *
      GJOB.JOB = INSERT(GJOB.JOB,1,LN,0,"")
      GJOB.PROD = INSERT(GJOB.PROD,1,LN,0,"")
      GJOB.PDESC = INSERT(GJOB.PDESC,1,LN,0,"")
      GJOB.WIDTH = INSERT(GJOB.WIDTH,1,LN,0,"")
      GJOB.LENGTH = INSERT(GJOB.LENGTH,1,LN,0,"")
      GJOB.SPOTS = INSERT(GJOB.SPOTS,1,LN,0,"")
      GJOB.PCT = INSERT(GJOB.PCT,1,LN,0,"")
      TMP.STATUS = INSERT(TMP.STATUS,1,LN,0,"")
      GOSUB 81050
      RETURN
*
*---- GET IMPRESSION SIZE
*
1010 *
      IF ACTION # "M" THEN RETURN
      ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      GJOB.IW = ECD.RET.VALUE
      ECD.NUM=5;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      GJOB.IL = ECD.RET.VALUE
      GOSUB 80050
      RETURN
*
*---- GET ALLOCATION TABLE
*
1020 *
      SCV.REC(6)<S$SCR> = GJOB.ALLOC
      ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN RETURN
      IF ECD.RET.VALUE = "" THEN
         GJOB.ALLOC = ECD.RET.VALUE
         ECD.NUM=7;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN RETURN
         GJOB.DESC = ECD.RET.VALUE
         ECD.SCRN.NO = ECD.SCRN.NO + 1
         ECD.ACTION=2;CALL SCRN.EDIT
         CALL GANG.JOB.ALLOC(ACTION,CONO,MAT GJOB.REC,GANG.ALLOC,STATUS)
         ECD.SCRN.NO = ECD.SCRN.NO - 1
         ECD.ACTION=2;CALL SCRN.EDIT
         GOSUB 80050
         OLD.START.LINE = ""
         GOSUB 50000
      END ELSE
         MATREAD GAT.REC FROM GANG.ALLOC, CONO:ECD.RET.VALUE ELSE
            ERRMSG = "Invalid Table ID. Try again! "
            GOSUB 90000
            GOTO 1020
         END
         GJOB.ALLOC = ECD.RET.VALUE
         GJOB.DESC = GAT.DESC
         GJOB.DEPT = GAT.DEPT
         GJOB.CCTR = GAT.CCTR
         GJOB.TYPE = GAT.TYPE
         SCV.REC(7)<S$SCR> = GAT.DESC
         ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.SCRN.NO = ECD.SCRN.NO + 1
         ECD.ACTION=2;CALL SCRN.EDIT
         CALL GANG.JOB.ALLOC("I",CONO,MAT GJOB.REC,GANG.ALLOC,STATUS)
         ECD.SCRN.NO = ECD.SCRN.NO - 1
         ECD.ACTION=2;CALL SCRN.EDIT
         GOSUB 80050
         OLD.START.LINE = ""
         GOSUB 50000
      END
      RETURN
*
*---- GET MULTI-LINE DATA
*
10000 *
      SCV.REC(11)<S$SCR,LN> = LN
      ECD.SUB.NUM = LN
      ECD.NUM=11;ECD.ACTION=5;CALL SCRN.EDIT
10100 *
      SCV.REC(12)<S$SCR,LN> = GJOB.JOB<1,LN>
      ECD.SUB.NUM = LN
      ECD.NUM=12;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      IF ECD.RET.VALUE = GJOB.ID THEN
         ERRMSG = "Invalid Job Number. Try again! "
         GOSUB 90000
         GOTO 10100
      END
*     LOCATE ECD.RET.VALUE IN GJOB.JOB<1>,1 SETTING FND ELSE FND = 0
*     IF FND > 0 AND FND # LN THEN
*        ERRMSG = "Warning - duplicate job number on line ":FND
*        GOSUB 90000
*     END
      MATREAD JOB.REC FROM JOB,CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Invalid Job Number. Try again! "
         GOSUB 90000
         GOTO 10100
      END
      TEMP.MF1 = ECD.RET.VALUE
      GOSUB 70000
      SCV.REC(19)<S$SCR,LN> = JSTAT
      ECD.SUB.NUM = LN
      ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
10200 *
      SCV.REC(13)<S$SCR,LN> = GJOB.PROD<1,LN>
      ECD.SUB.NUM = LN
      ECD.NUM=13;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      IF ECD.RET.VALUE = "" THEN
         MAT INV.REC = ""
      END ELSE
         MATREAD INV.REC FROM INVENTORY,CONO:ECD.RET.VALUE ELSE
            ERRMSG = "Invalid Product. Try again! "
            GOSUB 90000
            GOTO 10200
         END
      END
      TEMP.MF2 = ECD.RET.VALUE
10300 *
      IF TEMP.MF2 = "" THEN
         SCV.REC(14)<S$SCR,LN> = GJOB.PDESC<1,LN>
         ECD.SUB.NUM = LN
         ECD.NUM=14;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 19950
         TEMP.MF3 = ECD.RET.VALUE
      END ELSE
         TEMP.MF3 = INV.DESC
         SCV.REC(14)<S$SCR,LN> = TEMP.MF3
         ECD.SUB.NUM = LN
         ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
      END
10400 *
      IF INV.PAP.WIDTH+0 = 0 THEN
         ECD.SUB.NUM = LN
         ECD.NUM=15;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 19950
         TEMP.MF4 = ECD.RET.VALUE
      END ELSE
         TEMP.MF4 = INV.PAP.WIDTH
         SCV.REC(15)<S$SCR,LN> = TEMP.MF4
         ECD.SUB.NUM = LN
         ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
      END
10500 *
      IF INV.PAP.LEN+0 = 0 THEN
         ECD.SUB.NUM = LN
         ECD.NUM=16;ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE = "END" THEN GOTO 19950
         TEMP.MF5 = ECD.RET.VALUE
      END ELSE
         TEMP.MF5 = INV.PAP.LEN
         SCV.REC(16)<S$SCR,LN> = TEMP.MF5
         ECD.SUB.NUM = LN
         ECD.NUM=16;ECD.ACTION=5;CALL SCRN.EDIT
      END
10600 *
      ECD.SUB.NUM = LN
      ECD.NUM=17;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      TEMP.MF6 = ECD.RET.VALUE
10700 *
      ECD.SUB.NUM = LN
      ECD.NUM=18;ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN GOTO 19950
      TEMP.MF7 = ECD.RET.VALUE
10800 *
      GOSUB 70000
      SCV.REC(19)<S$SCR,LN> = JSTAT
      ECD.SUB.NUM = LN
      ECD.NUM=19;ECD.ACTION=5;CALL SCRN.EDIT
19900 *
      GJOB.JOB<1,LN> = TEMP.MF1
      GJOB.PROD<1,LN> = TEMP.MF2
      GJOB.PDESC<1,LN> = TEMP.MF3
      GJOB.WIDTH<1,LN> = TEMP.MF4
      GJOB.LENGTH<1,LN> = TEMP.MF5
      GJOB.SPOTS<1,LN> = TEMP.MF6
      GJOB.PCT<1,LN> = TEMP.MF7
      TMP.STATUS<1,LN> = JSTAT
      GOSUB 85000
      RETURN
19950 *
      GOSUB 81050
      RETURN
*
*---- MULTI-LINE SCROLL ROUTINE
*
50000 *
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START.LINE THEN RETURN
      OLD.START.LINE = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.JOB<1,N> "L#8"
P_X  := AM:12 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.PROD<1,N> "L#15"
P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.PDESC<1,N> "L#30"
P_X  := AM:53 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(GJOB.WIDTH<1,N>,"MD4") "R#8"
P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(GJOB.LENGTH<1,N>,"MD4") "R#8"
P_X  := AM:71 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.SPOTS<1,N> "R#3"
P_X  := AM:75 ; P_Y := AM:SLN ; P_VALUE := AM:GJOB.PCT<1,N> "R#3"
P_X  := AM:79 ; P_Y := AM:SLN ; P_VALUE := AM:TMP.STATUS<1,N> "L#1"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
         SCV.REC(12)<S$SCR> = GJOB.JOB
         SCV.REC(13)<S$SCR> = GJOB.PROD
         SCV.REC(14)<S$SCR> = GJOB.PDESC
         SCV.REC(15)<S$SCR> = GJOB.WIDTH
         SCV.REC(16)<S$SCR> = GJOB.LENGTH
         SCV.REC(17)<S$SCR> = GJOB.SPOTS
         SCV.REC(18)<S$SCR> = GJOB.PCT
      NEXT N
      FOR M = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
      RETURN
*
*---- DERIVE JOB STATUS
*
70000 *
      BEGIN CASE
      CASE JOB.STATUS<1,1> = ""
         JSTAT = "BOOKED"
      CASE JOB.STATUS<1,1> = "9"
         JSTAT = "CANCELLED"
      CASE JOB.STATUS<1,1> = "7"
         JSTAT = "READY TO PURGE"
      CASE JOB.STATUS<1,1> = "8"
         JSTAT = "PURGED"
      CASE JOB.TRACK.DATE<1,10> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            JSTAT = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "3"
            JSTAT = "INVOICED"
         CASE JOB.STATUS<1,1> = "5" 
            JSTAT = "REOPENED"
         CASE 1
            JSTAT = "COMPLETED"
         END CASE
      CASE JOB.TRACK.DATE<1,9> # ""
         BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            JSTAT = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            JSTAT = "REOPENED"
         CASE 1
            JSTAT = "INVOICED"
         END CASE
      CASE JOB.TRACK.DATE<1,8> # ""
         JSTAT = "COSTED"
      CASE JOB.TRACK.DATE<1,7> # ""
         JSTAT = "RDY-TO-BILL"
      CASE JOB.TRACK.DATE<1,6> # ""
         JSTAT = "DELIVERED"
      CASE JOB.TRACK.DATE<1,5> # ""
         JSTAT = "IN PROCESS"
      CASE JOB.TRACK.DATE<1,3> # ""
         JSTAT = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "1"
         JSTAT = "IN PROCESS"
      CASE JOB.STATUS<1,1> = "3"
         JSTAT = "INVOICED"
      CASE 1
         JSTAT = "UNKNOWN"
      END CASE
*ABBREVIATE
      BEGIN CASE
      CASE JSTAT = "UNKNOWN"
         JSTAT = "?"
      CASE JSTAT = "BOOKED"
*        JSTAT = "B"
         JSTAT = ""
      CASE JSTAT = "COMPLETED"
         JSTAT = "C"
      CASE JSTAT = "CANCELLED"
         JSTAT = "X"
      CASE INDEX(JSTAT,"PURGE",1) > 0
         JSTAT = "C"
      CASE JSTAT = "IN PROCESS"
         JSTAT = "I"
      CASE 1
         JSTAT = "I"
      END CASE
      RETURN
*
*---- LOAD SCREEN DATA
*
80000 *
      MATREAD CUST.REC FROM CUSTOMER, CONO:CUSTID ELSE
         MAT CUST.REC = ""
      END
80050 *
      SCV.REC(2)<S$SCR> = GJOB.ID
      SCV.REC(3)<S$SCR> = CUST.NAME
      SCV.REC(4)<S$SCR> = GJOB.IW
      SCV.REC(5)<S$SCR> = GJOB.IL
      SCV.REC(6)<S$SCR> = GJOB.ALLOC
      SCV.REC(7)<S$SCR> = GJOB.DESC
      ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=2;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=4;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=5;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=6;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=7;ECD.ACTION=5;CALL SCRN.EDIT
      GOSUB 85000
      RETURN
*
*---- LOAD SCREEN DATA (MULTI-LINE)
*
81000 *
      TMP.STATUS = ""
      FOR REF = 1 TO LINES
         MATREAD JOB.REC FROM JOB,CONO:GJOB.JOB<1,REF> ELSE
            MAT JOB.REC = ""
            JOB.STATUS = "????????"
         END
         GOSUB 70000
         TMP.STATUS<1,REF> = JSTAT
         IF GJOB.PROD<1,REF> # "" THEN
            MATREAD INV.REC FROM INVENTORY,CONO:GJOB.PROD<1,REF> ELSE
               MAT INV.REC = ""
               INV.DESC = "???????????????"
            END
            IF INV.DESC # "" THEN GJOB.PDESC<1,REF> = INV.DESC
            IF INV.PAP.WIDTH+0 > 0 THEN
               GJOB.WIDTH<1,REF> = INV.PAP.WIDTH
            END
            IF INV.PAP.LEN+0 > 0 THEN
               GJOB.LENGTH<1,REF> = INV.PAP.LEN
            END
         END
      NEXT REF
81050 *
      SCV.REC(12)<S$SCR> = GJOB.JOB
      SCV.REC(13)<S$SCR> = GJOB.PROD
      SCV.REC(14)<S$SCR> = GJOB.PDESC
      SCV.REC(15)<S$SCR> = GJOB.WIDTH
      SCV.REC(16)<S$SCR> = GJOB.LENGTH
      SCV.REC(17)<S$SCR> = GJOB.SPOTS
      SCV.REC(18)<S$SCR> = GJOB.PCT
      SCV.REC(19)<S$SCR> = TMP.STATUS
      RETURN
*
*---- ACCUMULATE AND DISPLAY TOTALS
*
85000 *
      TOT.AREA = INT(GJOB.IW / 10 * GJOB.IL / 10 + 0.5)
      CALC.AREA = 0
      FOR CREF = 1 TO LINES
         CALC.AREA = CALC.AREA + INT(GJOB.WIDTH<1,CREF> / 1000 * GJOB.LENGTH<1,CREF> / 1000 * GJOB.SPOTS<1,CREF> + 0.5)
      NEXT CREF
      SCV.REC(8)<S$SCR> = INT(CALC.AREA/100+0.5)
      SCV.REC(9)<S$SCR> = SUM(GJOB.SPOTS)
      IF TOT.AREA = 0 THEN
         SCV.REC(10)<S$SCR> = ""
      END ELSE
         SCV.REC(10)<S$SCR> = INT((1-(CALC.AREA/TOT.AREA))*10000+0.5)
      END
      ECD.NUM=8;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=9;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=10;ECD.ACTION=5;CALL SCRN.EDIT
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
*
*---- END OF PROGRAM
*
99999 *
ECD.ACTION = 99; CALL SCRN.EDIT
      RETURN
   END
