   SUBROUTINE JOB.MAINT(CONO,ORDNO,JOBNUM,MAT COMP.REC)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
**********************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.MAINT
* BY          - WALID YAMOUT; CBA
* DATE        - 09/06/84
* DESCRIPTION -
*
* TASK 18621 GAT 101794 FIXED CREDIT AUTH PROBLEM ON CASH
* CSF 22837 GAT FIXED UNDEFINED VARIABLE
* MOD TASK 18669 DMT 7/20/95 REBOOK MATLS
*T20699 rick 07/03/1996 * MODIFY LOGIC WHERE ESTIMATE IS READ IN TO
*                         CHECK THE JOB DIV. IF THE JOB DIVISION IS
*                         ALREAD SET THEN MAKE SURE THE DIVISION ON THE
*                         ESTIMATE CHOSEN MATCHES THE DIVISION ON THE
*                         JOB.
*T20913 doug 08/26/1996 * Assign job with same division as order
*T21079 doug 10/08/1996 * Finished goods disappearing when booking job
*                         to estimate
*T21177 diane 11/06/1996 * REV11 UPG
*T21091 rick 10/11/1996 * The JT option does not work correctly with
*                         component dependencies.
*T21163 doug 11/01/1996 * Don't prompt div after booking new job to
*                         an estimate.
*T21148 rick 01/14/1997 * Problem with qty display on fngd jobs
*T26703 diane 03/03/1997 * Get Estimate id after xref
*T21831 llh   04/22/1997 * FIX JOB DIVISION CHANGE WITH PENDING INVOICE
*T22112 gat 07/28/1997 * Fix Job Prompt
*T22154 stefanie 08/19/1997 * Fix Rev10B to Rev11 match problem.
*T22698 renee 03/26/1998 * Use the Salesman2 xref table instead of 
*                          Gen.Code for the salesrep cross reference. It
*                          displays the terminology "salesrep" instead of
*                          "salesman". (See C30656)
*T23278 markt 10/13/1998 * Add division security check
*T23723 markt 02/26/1999 * Move prompt from line 23 to 21.
*T24035 markt 06/10/1999 * When Est # is cleared, Estimate $ and Quoted $
*                          fields (12 & 13) should also be cleared.
*T24530 edvard 11/01/1999 * Fixed to not allow space in a key.
*T24829 edvard 02/15/2000 * JOB DESCRIPTION DOES NOT ACCEPT ENTRY. GIVES
*                           A MESSAGE *INVALID RESPONE*
*T25174 gat 05/17/2000 * Do no allow change of customer on filed job.
*T25916 ajibaly 07/03/2001 * Allow ordered qty x-ref to estimate qty
*T25945 edwin 07/17/01 * Validate the credit authorization entered.
*T26334 epitka 12/28/2001 * REV12
*C39402 ajibaly 01/11/2001 * Remove add'l M with removal of estimate
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26421 thompson 03/11/2002 * Allow non-estimate jobs to be scheduled.
*T26773 cmykleb 07/30/2002 * Pass the whole company record to the
*                            JOB.FNGD.UPD pgm.
*T26909 lross 10/17/2002 * See JOB.MAINT.REQUEST below.
*T26929 cmykleb 10/21/2002 * JOB.COMMENT display problem.
*T26973 adelgado 11/01/2002 * Add Sales Code description field.
*T27495 cmykleb 06/17/2003 * Clear the data from an estimate when
*                            the estimate is not going to be used
*                            for that job.
*T27885 cmykleb 06/23/2004 * Do not display the credit authorization
*                            during entry or display. This is supposed
*                            to be a secure field.
*T28820 wvaughan 05/10/2006 * Addition of the abilty to uncancel a job
*C45870 wvaughan 07/25/2006 * Credit Authorization display fix
*ENDDOC
**********************************************
*COPY>PMC.CPYLIB>COMP.OPS
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>PMC.CPYLIB>CSR.CODE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>COMPANY           ; * T26773
*COPY>PMC.CPYLIB>SALES.CODE        ; * T26973
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB.CREDIT.STATS
*COPY>JCS.CPYLIB>GANG.JOB
*COPY>OPS.CPYLIB>ORDER
*COPY>OPS.CPYLIB>ORDER.DETAIL.INQ
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.STATS
*COPY>ICS.CPYLIB>FNGD.JOB.STATS
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>JES.CPYLIB>ESTIMATE
*COPY>JIS.CPYLIB>SYS_TKT_DEF
*COPY>JIS.CPYLIB>SYS_SCN_DEF
*COPY>JIS.CPYLIB>JKT_NOTIFY
* T21796      DIM SAVE.JOB(125)
   DIM SAVE.JOB(JOB.REC.SIZE)
   DIM EST.PAR(10)
**    IMGSIZE = 275
   IMGSIZE = 225
   DIM IMGREC(IMGSIZE)
   MAT EST.PAR = ""
   MAT EST.REC = ""
   EQU EST.PAR.MATL TO EST.PAR(5)
   PROG.FLAG = "M"
   MAT FISCAL.REC = ""
   MAT GEN.XREF.REC = ""
   DASHES = STR("-",80)
   ERRMSG = ""; UNKNOWN = STR("?",20)
   FIELDS.ACC = ""
   FIELDS.ACC1 = ""
   FIELDS.ACC2 = ""
*CSF 25227 v SHIFT FIELDS DOWN 1 DUE TO CUST.SVC REP NOW #5.
   FIELDS.ACC1<1,1> = 9
   FIELDS.ACC1<1,2> = 10
   FIELDS.ACC1<1,3> = 11
   FIELDS.ACC1<1,4> = 15
   FIELDS.ACC1<1,5> = 17
   FIELDS.ACC1<1,6> = 18
   FIELDS.ACC1<1,7> = 20
   FIELDS.ACC1<1,8> = 21
   FIELDS.ACC1<1,9> = 23
   FIELDS.ACC2<1,1> = 11
   FIELDS.ACC2<1,2> = 17
   FIELDS.ACC2<1,3> = 18
   FIELDS.ACC2<1,4> = 23
*CSF 25227 ^
   FIELDS.ACC2<1,5> = 1
   FSCAL.PER = ""
*     PORT.NO = FIELD(OCONV(0,"U50BB")," ",1)
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = "???"
   OPER.ID = OCONV(PORT.NO,'MCN'):"!":OPER.ID
   TODAY = DATE()
   GXR.CO = CONO
   BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1
   BEGIN.PAG = 7; PAGE.SIZ = 13; LIN.SPACE = 1
   ESN = ECD.SCRN.NO
100 *
   MAT SRESV.REC='' ;* used only SERIAL.RESERVE.SEL
   IF JOBNUM = "" THEN RELEASE
   OLD.CUST = ""
   OLD.MASTER = ""
   OLD.EST = ""
   PRIOR.EST = ""
   INQUIRE = 0
   ORIG.CUST = ''
   AVAIL = ""
   SAVE.INV.JS.REC = ""
   MASTER.CUST = ""
   COMPLETE.DATE = ""
   NEWJOB = 0
   FLG = "O"
   PREV.CRED.AUTH = ""
   NEW.EST = 0; EST.MATL = 0
   RD.DISPLAY = 1
   LN = 1; LINES = 0
   FOR I = 1 TO 75
      SCV.REC(I)<ESN> = ""
   NEXT I
   ECD.ACTION = 6; CALL SCRN.EDIT
   ECD.NUM = 7; XREF.FLG = 0
   IF JOBNUM # "" THEN
      ECD.RET.VALUE = JOBNUM
      SCV.REC(ECD.NUM)<ESN> = JOBNUM
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 110
   END
101*
   ECD.ACTION = 4; CALL SCRN.EDIT
   ECD.RET.VALUE = TRIM(ECD.RET.VALUE) ; * 24530
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         JOBNO = ""; GOTO 99999
      CASE ECD.RET.VALUE = "INIT"
         ERRMSG = "'INIT' cannot be used as a job number"
         GOSUB 91000; GOTO 100
      CASE ECD.RET.VALUE = "N"
         JOBNO = "N"
      CASE ECD.RET.VALUE = ""
         MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
         JOBNO = ""; GOSUB 1200
         IF ECD.RET.VALUE = "END" THEN GOTO 100
         GXR.NAME = "JOB"
         GXR.XREF = CUSTOMER
         GXR.FILE = JOB
         GXR.SRCH.ID = JOB.CUST
         CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID # "" THEN
        * T26126 v
            MATREADU JOB.REC FROM JOB,CONO:GXR.ID LOCKED
               ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS())
               GOSUB 91000;GOTO 100 
            END ELSE
        * T26126 ^
               RELEASE JOB, CONO:GXR.ID
               ERRMSG = "JOB ":GXR.ID:" IS MISSING"; GOSUB 91000; GOTO 100
            END
*T23278 v
            DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; GOTO 100
            END
*T23278 ^
         END ELSE
            ERRMSG = "NO JOB SELECTION FOR CUSTOMER - ":JOB.CUST
            GOSUB 91000; GOTO 100
         END
         JOBNO = GXR.ID; GOSUB 700; GOSUB 30000
         IF ERRMSG # "" THEN GOTO 100
         GOTO 300
   END CASE
110*
   IF ECD.RET.VALUE = "N" THEN
      NEWJOB = 1; JOBNO = ECD.RET.VALUE
      MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
      GOSUB 710
      IF ERR.FLG THEN GOTO 100
   END ELSE
    * T26126 v
      MATREADU JOB.REC FROM JOB, CONO:ECD.RET.VALUE LOCKED
         ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS())
         GOSUB 91000;GOTO 100 
      END THEN
    * T26126 ^
*T23278 v
         DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 100
         END
*T23278 ^
         JOBNO = ECD.RET.VALUE
         GOSUB 700; GOSUB 30000
         IF ERRMSG # "" THEN
            IF JOBNUM = "" THEN
               GOTO 100
            END ELSE
               GOTO 99999
            END
         END
      END ELSE
         RELEASE JOB, CONO:ECD.RET.VALUE
         BEGIN CASE
            CASE ORDNO = "" OR OPCO.JOB.BLD = "N"
               X = 0; Y = 21; TYP = 18
               PMSG = "Job not on file. Do you want to add (Y/N)?"
               CALL EDIT.SUB
               BEGIN CASE
                  CASE VALUE = "Y" 
                     P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
                     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                  CASE 1
                     P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
                     CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
                     GOTO 100
               END CASE
               NEWJOB = 1; JOBNO = ECD.RET.VALUE
               MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
               GOSUB 710
               IF ERR.FLG THEN GOTO 100
            CASE JOBNUM # ""
               B.QTY = SUM(ODQ.O.QTY) - SUM(ODQ.R.QTY) - SUM(ODQ.A.QTY) - SUM(ODQ.S.QTY)
               IF B.QTY < 1 THEN
                  X = 0; Y = 23; TYP = 18
                  PMSG = "No Back Order quantity for this order. Continue (Y/N) :"
                  CALL EDIT.SUB
                  IF VALUE # "Y" THEN GOTO 99999
               END
               JOBNO = ECD.RET.VALUE
               ; JB.BLD = 0; EST.BLD = 0
*T26773 v
*              CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,CO.JES,CO.POS,CO.OPS,EST.BLD,CO.PSS)
               CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,EST.BLD,MAT COMP.REC)
*T26773 ^
               GOSUB 700; ERRMSG = ""; GOSUB 30200
            CASE 1
               X = 0; Y = 23; TYP = 18
               PMSG = "Cannot locate Job (":ECD.RET.VALUE:"). Do you want to add (Y/N) :"
               CALL EDIT.SUB
               BEGIN CASE
                  CASE VALUE = "Y"
                     JOBNO = ECD.RET.VALUE
                     JB.BLD = 0; EST.BLD = 0
*T26773 v
*                    CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,CO.JES,CO.POS,CO.OPS,EST.BLD,CO.PSS)
                     CALL JOB.FNGD.UPD(CONO,ORDNO,JOBNO,JB.BLD,EST.BLD,MAT COMP.REC)
*T26773 ^
                     GOSUB 700; ERRMSG = ""; GOSUB 30200
                  CASE JOBNUM = ""
                     GOTO 100
                  CASE 1
                     GOTO 99999
               END CASE
         END CASE
      END
   END
   MATREAD GJOB.REC FROM GANG.JOB,CONO:JOBNO ELSE MAT GJOB.REC = ''
****************************************************
* ALWAYS CHECK JCSBP JOB.MAINT.REQUEST
****************************************************
*
*--- REQUEST ROUTINE
300*
*COPY>JCSBP>JOB.MAINT.REQUEST
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
700*
   OLD.CUST = JOB.CUST; OLD.MASTER = JOB.MASTER
   OLD.EST = JOB.EST; PREV.CRED.AUTH = JOB.CREDIT
   PRIOR.EST = JOB.EST
   MAT EST.PAR = ""
   LINES = DCOUNT(JOB.DESC,VM)
   ECD.NUM = 8; GOSUB 20000
   RETURN
710*
   FLG = "N"; ERR.FLG = 0
   JOB.TRACK.DATE<1,2> = TODAY
   ECD.NUM = 8; GOSUB 20000; ECD.ACTION = 5; CALL SCRN.EDIT
   NEW.EST = 1
   IF NEWJOB THEN GOSUB 1100
   IF ECD.RET.VALUE = "END" THEN
      ERR.FLG = 1; GOTO 719
   END
   IF FLG = "N" THEN
*TASK 16293
      IF NEWJOB THEN
*21163 v
         IF JOB.EST = "" THEN
            FOR REQUEST = 1 TO 20
               ON REQUEST GOSUB 1200,1300,1400,1450,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2800,2900,3000,3100,3200
               IF ECD.RET.VALUE = "END" THEN
                  ERR.FLG = 1; GOTO 719
*                 IF JOBNUM # "" THEN
*                    GOTO 101
*                 END ELSE
*                    GOTO 100
*                 END
               END
            NEXT REQUEST
         END ELSE
            FOR REQUEST = 1 TO 19
               ON REQUEST GOSUB 1200,1400,1450,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2800,2900,3000,3100,3200
               IF ECD.RET.VALUE = "END" THEN
                  ERR.FLG = 1; GOTO 719
               END
            NEXT REQUEST
         END
*T21163 ^
         OLD.START.LINE = 0; GOSUB 4000
      END
*
   END ELSE
      GOSUB 30100
      PREV.CRED.AUTH = JOB.CREDIT
      IF ERRMSG # "" THEN
         ERR.FLG = 1; GOTO 719
      END
      IF JOB.QTY = "" THEN
         GOSUB 2500
         IF ECD.RET.VALUE = "END" THEN
            ERR.FLG = 1; GOTO 719
         END
      END
      FOR REQUEST = 1 TO 3
         ON REQUEST GOSUB 1900,3000,3100
         IF ECD.RET.VALUE = "END" THEN
            ERR.FLG = 1; GOTO 719
         END
      NEXT REQUEST
   END
719*
   RETURN
1100*
   IF JOB.EST = '' THEN SCV.REC(25)<ESN> = ''   ;*T22154 <
   ECD.NUM = 25; ECD.ACTION = 4; CALL SCRN.EDIT
1111 *
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         SCV.REC(25)<ESN> = JOB.EST
         ECD.NUM = 25; ECD.ACTION = 5; CALL SCRN.EDIT
      CASE ECD.RET.VALUE = "???"
*C26703 v
*        PERFORM "EST.XREF"
         PARAM = "SELECT"
         WRITE PARAM ON CONTROL,"EST.XREF.":PORT.NO
         PERFORM "EST.XREF"
         READ EST.KEY FROM CONTROL,"EST.XREF.":PORT.NO ELSE EST.KEY=""
         DELETE CONTROL,"EST.XREF.":PORT.NO
         ECD.RET.VALUE = EST.KEY
         SCV.REC(25)<ESN> = EST.KEY
         ECD.DEFAULT = EST.KEY
*C26703 ^
         ECD.ACTION = 2; CALL SCRN.EDIT
         ECD.ACTION = 3; CALL SCRN.EDIT
*T28222 v
*        GOTO 1100
         GOTO 1111
*T28222 ^
      CASE (ECD.RET.VALUE # "" AND CO.JES = "Y") OR (ECD.RET.VALUE = '' AND PRIOR.EST # '' AND CO.JES = 'Y')
         IF ECD.RET.VALUE # '' THEN
            MATREAD EST.REC FROM ESTIMATE, CONO:ECD.RET.VALUE ELSE
               ERRMSG = "Invalid Estimate ID. Try again! "
               GOSUB 91000
               GOTO 1100
            END
*T20699 v
            IF JOB.DIV # "" THEN
               CHK.EST.DIV = FIELD(EST.DIV,"-",1)
               IF JOB.DIV # CHK.EST.DIV THEN
                  ERRMSG="Est Div of ":CHK.EST.DIV:" does not match Job Div. Enter <RETURN>"
                  GOSUB 91000
                  GOTO 1100
               END
*T23278 v
               DIV.CODE = CHK.EST.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
               CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
               IF ERRMSG # '' THEN
                  GOSUB 91000; GOTO 1100
               END
*T23278 ^
            END
*T20699 ^         
*   EST.JOB = ECD.RET.VALUE
            IF EST.JOB # "" THEN
               IF JOB.MASTER # "" AND EST.JOB # JOB.MASTER THEN
                  ERRMSG = "Estimate belongs to another Master Job"
                  GOSUB 91000; GOTO 1100
               END
            END
            IF EST.STATUS<1,1> = "LOST" THEN
               ERRMSG = "Estimate was defined as lost on ":OCONV(EST.STAT.DATE<1,1>,"D2/"):". Try again! "
               GOSUB 91000
               GOTO 1100
            END
***** T24035 v
         END ELSE
            SCV.REC(26)<ESN> = ''; JOB.EST.COST = ''; JOB.CONF.AMT = ''
            ECD.NUM = 26; ECD.ACTION = 5; CALL SCRN.EDIT
            SCV.REC(35)<ESN> = ''; JOB.EST.SALE = ''
            ECD.NUM = 35; ECD.ACTION = 5; CALL SCRN.EDIT
*CSF39402 v
            SCV.REC(2)<ESN> = ''; JOB.PRICE.PER.THOU = ''
            ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT
*CSF39402 ^
***** T24035 ^
         END
         ESTAT = 0      ;*T22154 <
         BEGIN CASE
            CASE NEW.EST
               CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*T21079    IF ESTAT = 0 THEN GOSUB 30000 ELSE GOTO 1100
               IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100;* T21079
               NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0
               CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*T27495 v
               IF ESTAT # 0 THEN
                  MAT JOB.REC = ""
                  FOR I = 1 TO 75
                     SCV.REC(I)<ESN> = ""
                  NEXT I
                  ECD.ACTION = 6 ; CALL SCRN.EDIT
                  SCV.REC(7)<ESN> = JOBNO
                  ECD.NUM = 7
                  ECD.ACTION = 5 ; CALL SCRN.EDIT
                  NEW.EST = 1
                  GOTO 1100
               END
*T27495 ^
            CASE PRIOR.EST # '' AND ECD.RET.VALUE = ''
               JOB.EST = ''
               CALL JOB.BOOK.SUB(CONO,"4",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
            CASE PRIOR.EST = ECD.RET.VALUE
               CALL JOB.BOOK.SUB(CONO,"5",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
            CASE PRIOR.EST # ECD.RET.VALUE
               CALL JOB.BOOK.SUB(CONO,"6",JOBNO,PRIOR.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
         END CASE
         GOSUB 30100 ; * T26929
*T25916 v
         ECD.ACTION = 2; CALL SCRN.EDIT
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 30500
         ECD.NUM = 25
         SCV.REC(ECD.NUM)<ESN> = JOB.EST
         ECD.ACTION = 5; CALL SCRN.EDIT
*T25916 ^
******************
*        IF NEW.EST THEN
*           CALL JOB.BOOK.SUB(CONO,"1",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
*           IF ESTAT = 0 THEN GOSUB 30100 ELSE GOTO 1100
*           NEW.EST = 0; EST.MATL = 1; RD.DISPLAY = 0
*        END
*T18669 LMR 11/04/94
*        IF JOB.EST = '' THEN EST.MATL = 1
*
*        CALL JOB.BOOK.SUB(CONO,"2",JOBNO,OLD.EST,ECD.RET.VALUE,MAT EST.PAR,ESTAT,MAT EST.REC,SAVE.INV.JS.REC,EST.MATL)
******************
         IF EST.MATL = 1 THEN EST.MATL = 0
         IF ESTAT = 0 THEN
            SCV.REC(26)<ESN> = JOB.EST.COST
            ECD.NUM = 26; ECD.ACTION = 5; CALL SCRN.EDIT
            SCV.REC(35)<ESN> = JOB.EST.SALE
            ECD.NUM = 35; ECD.ACTION = 5; CALL SCRN.EDIT
            SCV.REC(18)<ESN> = JOB.QTY<1,1>
            ECD.NUM = 18; ECD.ACTION = 5; CALL SCRN.EDIT
            SCV.REC(2)<ESN> = JOB.PRICE.PER.THOU
            ECD.NUM = 2; ECD.ACTION = 5; CALL SCRN.EDIT
            SCV.REC(17)<ESN> = JOB.MASTER
            ECD.NUM = 17; ECD.ACTION = 5; CALL SCRN.EDIT
            LINES = DCOUNT(JOB.DESC,VM)
            OLD.START.LINE = 0; GOSUB 4900
         END ELSE
            GOTO 1100
         END
         JOB.EST = ECD.RET.VALUE
         PRIOR.EST = ECD.RET.VALUE
      CASE ECD.RET.VALUE # "" AND CO.JES # "Y"
         JOB.EST = ECD.RET.VALUE
         PRIOR.EST = ECD.RET.VALUE
   END CASE
1199 RETURN
1200*
   BEGIN CASE
      CASE JOB.STATUS # ""
         ERRMSG = "CAN NOT CHANGE CUSTOMER FOR ACTIVE JOBS"
         GOSUB 91000; GOTO 1299
      CASE SUM(JFS.F.QTY) > 0
         ERRMSG = "Finished Goods quantity already received from this JOB"
         GOSUB 91000; GOTO 1299
      CASE SUM(JFS.A.QTY) > 0
         ERRMSG = "There are orders linked to this job"
         GOSUB 91000; GOTO 1299
      CASE ORDNO # "" AND OPCO.JOB.BLD # "N"
         ERRMSG = "Customer Must Match Customer On Order"
         GOSUB 91000; GOTO 1299
*T25174
      CASE JOB.SUBS # "" AND JOBNO # ""
         ERRMSG = "There are Sub Jobs use Change Job Cust to change Cust"
         GOSUB 91000; GOTO 1299
*T25174
   END CASE
*CSF 24303 v
   ORIG.CUST = JOB.CUST
*CSF 24303 ^
   ECD.NUM = 9
   ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = CUSTOMER; ECD.PREFIX.ID = CONO
   ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1299
      CASE ECD.RET.VALUE = ""
         ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" THEN GOTO 1200
         GXR.NAME = "CUSTOMER"
         GXR.XREF = CUSTOMER.XREF
         GXR.FILE = CUSTOMER
         GXR.SRCH.ID = ECD.RET.VALUE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(10)<ESN> = ""; GOSUB 30500; GOTO 1200
         END ELSE
            MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
               ERRMSG = "CUSTOMER ":GXR.ID:" IS MISSING"; GOSUB 91000
               SCV.REC(10)<ESN> = ""; GOSUB 30500; GOTO 1200
            END
            SCV.REC(9)<ESN> = GXR.ID
            SCV.REC(10)<ESN> = CUST.NAME
            IF CUST.TYPE = "F" THEN
               ERRMSG = "Customer Type is Frozen - Cannot Enter Job"
               GOSUB 91000
               ECD.RET.VALUE = "END"
               GOTO 1299
            END
            GOSUB 30500
         END
      CASE 1
         IF ECD.RET.VALUE # "END" THEN
            GXR.ID = ECD.RET.VALUE
            FOR I = 1 TO CUST.REC.SIZE; CUST.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
            ECD.NUM = 10; SCV.REC(ECD.NUM)<ESN> = CUST.NAME
            ECD.ACTION = 5; CALL SCRN.EDIT
            IF CUST.TYPE = "F" THEN
               ERRMSG = "Customer Type is Frozen - Cannot Enter Job"
               GOSUB 91000
               ECD.RET.VALUE = "END"
               GOTO 1299
            END
            IF CUST.CREDIT = "DEL" THEN
               ERRMSG = 'This customer has credit code "DEL", cannot enter a Job for this customer.'
               GOSUB 91000
               ECD.RET.VALUE = "END"
               GOTO 1299
            END
         END
   END CASE
   IF JOB.MASTER # JOBNO AND JOB.MASTER # "" THEN
      MAT SAVE.JOB = MAT JOB.REC
      MATREAD JOB.REC FROM JOB, CONO:JOB.MASTER ELSE
         ERRMSG = "CANNOT LOCATE MASTER JOB - ":JOB.MASTER
         GOSUB 91000; GOTO 1200
      END
      MASTER.CUST = JOB.CUST
      MAT JOB.REC = MAT SAVE.JOB
      IF GXR.ID # MASTER.CUST THEN
         ERRMSG = "MASTER JOB HAVE A DIFFERENT CUSTOMER - ":MASTER.CUST
         GOSUB 91000; GOTO 1200
      END
   END
   IF CUST.CREDIT = "N" THEN
      ERRMSG = "THERE IS NO CREDIT FOR THIS CUSTOMER"
      GOSUB 91000; GOTO 1200
   END
   JOB.CUST = GXR.ID
1250 CUR.JOB.BAL = SUM(CUST.JOB.BAL)
   LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
      CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
   END
   CUR.ORD.BAL = SUM(CUST.ORD.BAL)
*CSF 24303 v
   IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
   IF ORIG.CUST # JOB.CUST THEN GOSUB 3100
*CSF 24303 ^
1299 RETURN
1300 *
   IF JOB.DIV # "" AND JOB.EST # "" THEN
* IF REQUEST = 3 THEN
      ERRMSG = "Cannot Change the Division for this Job has an estimate"
      GOSUB 91000
* END
      RETURN
   END
   IF JOB.DIV # "" AND JOB.RESV.MATL # "" THEN
      ERRMSG = "Cannot change the Division for the Job Material reserved to Job"
      GOSUB 91000
      RETURN
   END
   IF JOB.DIV # "" AND JOB.ALOC.QTY # "" THEN
      ERRMSG = "Cannot change the Division for the Job Purchase Order Quanity allocated"
      GOSUB 91000
      RETURN
   END
   IF JOB.DIV # "" AND JOB.OS.QTY # "" THEN
      ERRMSG = "Cannot change the Division for the Job Outside P/O attached to Job"
      GOSUB 91000
      RETURN
   END
*
* 21831
   IF JOB.DIV # "" AND JOB.INV.NO # "" THEN
*T22154 v
*        IF JOB.INV.DATE # "" THEN
      IF JOB.INV.DATE = "" THEN
*T22154 ^
         ERRMSG = "Cannot change the Division for the Job Invoice Pending"
      END ELSE
         ERRMSG = "Cannot change the Division for the Job Invoice Posted"
      END
      GOSUB 91000
      RETURN
   END
* T20913 v
   IF JOB.DIV # "" AND JOB.ORDER # "" THEN
      READV ORD.DIV FROM ORDER, CONO:JOB.ORDER,56 THEN
         MATREAD DIV.REC FROM DIVISION, CONO:ORD.DIV ELSE
            ERRMSG = "DIVISION ":ORD.DIV:" IS MISSING"; GOSUB 91000
            RETURN
         END
*T23278 v
         DIV.CODE = ORD.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; RETURN
         END
*T23278 ^
         JOB.DIV = ORD.DIV
         SCV.REC(19)<ESN> = JOB.DIV
         ECD.NUM = 19; SCV.REC(ECD.NUM)<ESN> = JOB.DIV
         ECD.ACTION = 5; CALL SCRN.EDIT
         SCV.REC(20)<ESN> = DIV.DESC
         ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = DIV.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
      END
      RETURN
   END
* T20913 ^
   ECD.NUM = 19
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "??" THEN
      GXR.NAME = "DIVISION"
      GXR.XREF = CONTROL
      GXR.FILE = DIVISION
      GXR.SRCH.ID = "DIVISIONS"
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID = "" THEN
         GOSUB 30500; GOTO 1300
      END ELSE
         MATREAD DIV.REC FROM DIVISION, CONO:GXR.ID ELSE
            ERRMSG = "DIVISION ":GXR.ID:" IS MISSING"; GOSUB 91000
            GOSUB 30500; GOTO 1300
         END
*T23278 v
         DIV.CODE = GXR.ID; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 1300
         END
*T23278 ^
         JOB.DIV = GXR.ID
         SCV.REC(19)<ESN> = JOB.DIV
         SCV.REC(20)<ESN> = DIV.DESC
         GOSUB 30500
      END
   END ELSE
      IF ECD.RET.VALUE # "END" THEN
         MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
            ERRMSG = "INVALID DIVISION"
            GOSUB 91000
            GOTO 1300
         END
*T23278 v
         DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 1300
         END
*T23278 ^
         JOB.DIV = ECD.RET.VALUE
         ECD.NUM = 20; SCV.REC(ECD.NUM)<ESN> = DIV.DESC
         ECD.ACTION = 5; CALL SCRN.EDIT
      END
   END
1399 RETURN
*
1400 ECD.NUM = 11
   IF JOB.SLSMN = "" THEN SCV.REC(11)<ESN> = CUST.SALESMAN
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "???" THEN
* T22698 v Use SALESMAN2 instead of GEN.CODE
*        GXR.NAME = "GEN.CODE"
      GXR.NAME = "SALESMAN2"
* T22698 ^
      GXR.SORT.FILE = "SALESMAN"; GXR.FILE = SALESMAN
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      SCV.REC(ECD.NUM)<ESN> = GXR.ID
      GOSUB 30500
      IF GXR.ID = "" THEN GOTO 1300
      ECD.RET.VALUE = GXR.ID
   END
   IF ECD.RET.VALUE # "END" THEN
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Cannot locate salesman # ":ECD.RET.VALUE
         GOSUB 91000; GOTO 1400
      END
      JOB.SLSMN = ECD.RET.VALUE
      ECD.NUM = 12; SCV.REC(ECD.NUM)<ESN> = SALS.NAME
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
*
1450 ; * CSR CODE
   IF JOB.CSR = "" THEN ECD.DEFAULT = CUST.CSR.CODE
   ECD.NUM = 50; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 1499
      CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "???"
         GXR.NAME = "GEN.CODE1"
         GXR.SORT.FILE = "CSR.CODE"; GXR.FILE = CSR.CODE
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
         ECD.ACTION = 2; CALL SCRN.EDIT
         IF GXR.ID = "" THEN
            SCV.REC(ECD.NUM)<ESN> = JOB.CSR
            GOSUB 30500; GOTO 1450
         END
         SCV.REC(ECD.NUM)<ESN> = GXR.ID
         GOSUB 30500
         ECD.RET.VALUE = GXR.ID
   END CASE
   MATREAD CSR.REC FROM CSR.CODE, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate Service Rep # ":ECD.RET.VALUE
      GOSUB 91000; GOTO 1450
   END
   JOB.CSR = ECD.RET.VALUE
   ECD.NUM = 51; SCV.REC(ECD.NUM)<ESN> = CSR.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
*
1499 ;*
   RETURN
*
1500 ECD.NUM = 15; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      JOB.TYPE = ECD.RET.VALUE
      GOSUB 40000
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
*
1600 ECD.NUM = 17
   IF JOB.SUBS # "" THEN
      JOB.MASTER = JOBNO; SCV.REC(ECD.NUM)<ESN> = JOB.MASTER
      ECD.ACTION = 5; CALL SCRN.EDIT; GOTO 1699
   END
   IF JOB.MASTER = "" THEN JOB.MASTER = JOBNO
   ECD.VALDAT = JOBNO; ECD.DEFAULT = JOB.MASTER
   ECD.PREFIX.ID = CONO; ECD.VALDAT.CODE = 2; ECD.VALDAT.FILE = JOB; ECD.DEFAULT = JOB.MASTER
   ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         SCV.REC(17)<ESN> = JOB.MASTER
         ECD.NUM = 17; ECD.ACTION = 5; CALL SCRN.EDIT
         GOTO 1699
      CASE ECD.RET.VALUE = JOBNO
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            EJ.CNT = DCOUNT(EST.BOOK.JOB,VM)
            OTHER.JOBS = 0
            FOR J = 1 TO EJ.CNT UNTIL OTHER.JOBS
               IF JOBNO # EST.BOOK.JOB<1,J> THEN OTHER.JOBS = 1
            NEXT J
            IF OTHER.JOBS THEN
               IF ECD.RET.VALUE # EST.JOB AND EST.JOB # "" THEN
                  ERRMSG = "Estimate belongs to Master Job ":EST.JOB:"."
                  GOSUB 91000; GOTO 1600
               END
            END
         END
         JOB.MASTER = JOBNO
         GOTO 1699
      CASE 1
         IF JOB.EST # "" AND CO.JES = "Y" THEN
            IF ECD.RET.VALUE # EST.JOB AND EST.JOB # "" THEN
               IF EST.JOB # JOBNO THEN
                  ERRMSG = "Estimate has a different Master Job number."
                  GOSUB 91000
                  GOTO 1600
               END
            END
         END
         MAT SAVE.JOB = MAT JOB.REC
         FOR I = 1 TO JOB.REC.SIZE; JOB.REC(I) = ECD.VALDAT.ITEM<I>; NEXT I
         MASTER.CUST = JOB.CUST
         IF JOB.MASTER = "" THEN
            MASTER.JOB = ECD.RET.VALUE
         END ELSE
            MASTER.JOB = JOB.MASTER
         END
         MAT JOB.REC = MAT SAVE.JOB
         IF JOB.CUST # MASTER.CUST THEN
            ERRMSG = "CUSTOMER MISMATCH, MASTER JOB CUSTOMER - ":MASTER.CUST
            GOSUB 91000; GOTO 1600
         END
         IF MASTER.JOB # ECD.RET.VALUE THEN
            ERRMSG = "MASTER JOB CANNOT BE A SUB JOB"
            GOSUB 91000; GOTO 1600
         END
         JOB.MASTER = ECD.RET.VALUE
   END CASE
1699 RETURN
1700 ECD.NUM = 39; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 1799
* T26973 v
* IF ECD.RET.VALUE = "" THEN JOB.SALES.CODE = "" ; GOTO 1799
   IF ECD.RET.VALUE = '' THEN
      JOB.SALES.CODE = ''
      ECD.NUM = 40 ; SCV.REC(40)<ESN> = ""
      ECD.ACTION = 5 ; CALL SCRN.EDIT
      GOTO 1799
   END
* T26973 ^
   IF ECD.RET.VALUE = "???" THEN
      GXR.SORT.FILE = "SALES.CODE"; GXR.FILE = SALES.CODE
      GXR.NAME = "SALES.CODE"       ;* T26973
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      SCV.REC(39)<ESN> = ""
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 30500
      IF GXR.ID = "" THEN
         GOTO 1700
      END
      ECD.RET.VALUE = GXR.ID
      SCV.REC(39)<ESN> = GXR.ID
      ECD.NUM = 39; ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF LEN(ECD.RET.VALUE) < 1 OR LEN(ECD.RET.VALUE) > 5 THEN GOTO 1700
   IF LEN(ECD.RET.VALUE) = 1 THEN
      IF SALS.COMM.PCT + 0 = 0 THEN ECD.RET.VALUE = ECD.RET.VALUE:"H" ELSE ECD.RET.VALUE = ECD.RET.VALUE:"C"
   END
   IF LEN(ECD.RET.VALUE) = 2 THEN ECD.RET.VALUE = ECD.RET.VALUE:CUST.TYPE
   MATREAD SLC.REC FROM SALES.CODE, CONO:ECD.RET.VALUE ELSE    ;* T26973
      ERRMSG = "SALES CODE ":ECD.RET.VALUE:" IS NOT ON FILE"; GOSUB 91000; GOTO 1700
   END
   JOB.SALES.CODE = ECD.RET.VALUE
   ECD.NUM = 39; SCV.REC(39)<ESN> = JOB.SALES.CODE; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 40 ; SCV.REC(40)<ESN> = SLC.DESC       ;* T26973
   ECD.ACTION = 5            ; CALL SCRN.EDIT       ;* T26973
1799 RETURN
1800 ECD.NUM = 41; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "???" THEN
      GXR.NAME = "GEN.CODE"
      GXR.SORT.FILE = "JOB.CATEGORY"; GXR.FILE = JOB.CATEGORY
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      SCV.REC(ECD.NUM)<ESN> = GXR.ID
      GOSUB 30500
      IF GXR.ID = "" THEN GOTO 1800
      ECD.RET.VALUE = GXR.ID
   END
   IF ECD.RET.VALUE # "END" THEN
      REC = ""
      READ REC FROM JOB.CATEGORY, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "JOB CATEGORY CODE ":ECD.RET.VALUE:" IS NOT ON FILE"; GOSUB 91000; GOTO 1800
      END
      JOB.CATG = ECD.RET.VALUE
      ECD.NUM = 42; SCV.REC(ECD.NUM)<ESN> = REC; ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
1900 ECD.NUM = 23
   IF JOB.SHIP.VIA = "" THEN SCV.REC(23)<ESN> = CUST.SHIP.VIA
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "??" THEN
      GXR.SORT.FILE = "SHIP.VIA"; GXR.FILE = SHIP.VIA
      GXR.NAME = "GEN.CODE"
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      SCV.REC(23)<ESN> = ""
      ECD.ACTION = 2; CALL SCRN.EDIT
      GOSUB 30500
      IF GXR.ID = "" THEN
         GOTO 1900
      END
      ECD.RET.VALUE = GXR.ID
      SCV.REC(23)<ESN> = GXR.ID
      ECD.NUM = 23; ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF ECD.RET.VALUE # "END" THEN
      MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:ECD.RET.VALUE ELSE
         ERRMSG = "Cannot locate ship via # ":ECD.RET.VALUE
         GOSUB 91000; GOTO 1900
      END
      JOB.SHIP.VIA = ECD.RET.VALUE
      ECD.NUM = 24
      SCV.REC(ECD.NUM)<ESN> = SHPV.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
2000 ECD.NUM = 22; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.CUST.PO = ECD.RET.VALUE
   RETURN
2100*
   IF JOB.EST = "" OR CO.JES = "N" THEN
      ECD.NUM = 26; ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN JOB.EST.COST = ECD.RET.VALUE
   END
   RETURN
2200 ECD.DEFAULT = JOB.EST.COST; ECD.NUM = 35; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      JOB.CONF.AMT = ECD.RET.VALUE
      JOB.EST.SALE = ECD.RET.VALUE
*CSF 24303 v
      IF FLG = 'O' THEN GOSUB 3100
*CSF 24303 ^
   END
   RETURN
2300 ECD.NUM = 21; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.MARKUP = ECD.RET.VALUE
   RETURN
2400 ECD.NUM = 36; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.COLORS = ECD.RET.VALUE
   RETURN
2500 ECD.NUM = 18
   IF JFS.PROD = "" THEN
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         JOB.QTY<1,1> = ECD.RET.VALUE
      END
   END ELSE
      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
      SCV.REC(ECD.NUM)<ESN> = JOB.QTY<1,1>
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
2600 ECD.NUM = 37
   IF JFS.PROD = "" THEN
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         JOB.QTY<1,2> = ECD.RET.VALUE
      END
   END ELSE
      JOB.QTY<1,2> = SUM(JFS.F.QTY) / 1000
      SCV.REC(ECD.NUM)<ESN> = JOB.QTY<1,2>
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
2700 ECD.NUM = 38
   IF JFS.PROD = "" THEN
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE # "END" THEN
         JOB.QTY<1,3> = ECD.RET.VALUE
      END
   END ELSE
      JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
      SCV.REC(ECD.NUM)<ESN> = JOB.QTY<1,3>
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   RETURN
2800 ECD.NUM = 14
*     IF ORDNO # "" AND OPCO.JOB.BLD # "N" THEN
*        ERRMSG = "Due Date Must Match Due Date On Order"
*        GOSUB 91000; GOTO 2899
*     END
*     ECD.MINV = TODAY-7
   ECD.MINV = JOB.TRACK.DATE<1,2>
*      ECD.MAXV = ECD.MINV + 365
   ECD.MAXV = ECD.MINV + 700
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      JOB.TRACK.DATE<1,4> = ECD.RET.VALUE
   END
2899 RETURN
2900 ECD.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.PRIOR.JOB = ECD.RET.VALUE
   RETURN
3000 ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.PRICE.PER.THOU = ECD.RET.VALUE
   RETURN
3100 QUOTED.AMT = 0
   IF ORDNO # "" OR JFS.PROD # "" THEN
      GOTO 3149
   END
   LOCATE "4" IN JOB.STATUS<1>,1 SETTING DUMMY ELSE
      IF JOB.TOT.INV > 0 THEN
         QUOTED.AMT = JOB.CONF.AMT - JOB.TOT.INV
      END ELSE
         QUOTED.AMT = JOB.CONF.AMT
      END
      IF QUOTED.AMT < 0 THEN QUOTED.AMT = 0
   END
   IF FLG = "O" AND ORIG.CUST = JOB.CUST THEN
      GOSUB 1250
   END
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         ERRMSG = "THERE IS NO CREDIT FOR THIS CUSTOMER"
         GOSUB 91000; ECD.RET.VALUE = "END"; GOTO 3149
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - CUR.JOB.BAL - CUR.ORD.BAL - QUOTED.AMT
         IF AVAIL < 0 THEN
            ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
            ERRMSG = ERRMSG:"& AVAILABLE=":OCONV(AVAIL,"MD2,$<")
         END ELSE
            GOTO 3149
         END
      CASE 1
         ERRMSG = "A/R=":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG = ERRMSG:"& JOB/ORD=":OCONV(CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
         ERRMSG = ERRMSG:"& TOT BAL= ":OCONV(CUST.AR.BAL+CUR.JOB.BAL+CUR.ORD.BAL+QUOTED.AMT,"MD2,$<")
   END CASE
   GOSUB 91000
   ECHO OFF ; * T27885
   ECD.NUM = 3; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.MAXL =3 ;*C45870
   ECD.ACTION = 4; CALL SCRN.EDIT
*T27885 v
   ECHO ON 
   ECD.NUM = 3 ; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.ACTION = 5 ; CALL SCRN.EDIT
*T27885 ^
*T25945 v
   IF ECD.RET.VALUE # "END" THEN
      READ TREC FROM CREDIT.AUTH.CODE, CONO:ECD.RET.VALUE THEN
         JOB.CREDIT = ECD.RET.VALUE:"!":OPER.ID
*T27885  ECD.NUM = 3; SCV.REC(3)<ESN> = JOB.CREDIT
*T27885  ECD.ACTION = 5; CALL SCRN.EDIT
      END ELSE
         ERRMSG = 'Invalid credit authorization code'
         GOSUB 91000
         GOTO 3100
      END
   END ELSE GOTO 3100 ;*C45870
*T25945 ^
3149 RETURN
3200 ECD.NUM = 27; ECD.SUB.NUM = 1; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3299
   JOB.COMMENTS<1,1> = ECD.RET.VALUE
   ECD.NUM = 27; ECD.SUB.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN JOB.COMMENTS<1,2> = ECD.RET.VALUE
3299 RETURN
4000*
   IF JOB.DESC = "" THEN
      LINES = 0
      ACTION = "A"
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 4100
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
   END
   GOSUB 4900
   ANCORE = 1
   LOOP
      ECD.NUM = 32
      SCV.REC(ECD.NUM)<ESN> = ""; ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = "" OR ACTION = "E" OR ACTION = "END"
            ANCORE = 0
         CASE ACTION = "A"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 4100
            WHILE LINES > OLD.LINES DO REPEAT
            LN = LINES
            GOSUB 4900
         CASE ACTION = "C"
            GOSUB 4800
            IF LN.NO THEN
               LN = LN.NO
               GOSUB 4100
            END
         CASE ACTION = "D"
            GOSUB 4800
            IF LN.NO THEN
               LN = LN.NO
               JOB.DESC = DELETE(JOB.DESC,1,LN,0)
               LINES = DCOUNT(JOB.DESC,VM)
               IF LN > 1 AND LN > LINES THEN LN = LN - 1
               IF LN < 1 THEN LN = 1
               OLD.START.LINE = 0
            END
            GOSUB 4900
         CASE ACTION = "S"
            LN = LN + PAGE.SIZE
            IF LN > LINES THEN
               IF JOB.DESC<1,LN> = "" THEN LN = 1
            END
            GOSUB 4900
      * T25978 v
         CASE ACTION = 'SR'
            LN -= PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 4900
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 4900
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 4900
      * T25978 ^
      END CASE
   WHILE ANCORE DO REPEAT
   GOTO 4999
4100 GOSUB 4900
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
4200 X = 4
   Y = SLN
   TYP = 1
   MAXL = 70
   O.R = "O"
   DEFAULT = JOB.DESC<1,LN>
   VALDAT = "" ;* T24829
   CALL EDIT.SUB
   IF VALUE = "" OR VALUE = "END" THEN
      IF ACTION = "A" THEN
         JOB.DESC = DELETE(JOB.DESC,1,LN,0)
      END
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 4299
   END
   JOB.DESC<1,LN> = VALUE
   LINES = DCOUNT(JOB.DESC,VM)
4299 RETURN
4800 GOSUB 4900
   ECD.NUM = 30; SCV.REC(ECD.NUM)<ESN> = ""
   ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = "" OR LN.NO = "END" THEN LN.NO = 0
   RETURN
4900 START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF START.LINE = OLD.START.LINE THEN GOTO 4990
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.DESC<1,N> "L#70"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
4990 RETURN
4999 RETURN
20000*
   CALL JOB.STATUS.SUB(JOB.STATUS,JOB.TRACK.DATE,STATUS)
   SCV.REC(ECD.NUM)<ESN> = STATUS
   RETURN
30000*
   MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE
      MAT JFS.REC = ""
   END
   MATREAD GJOB.REC FROM GANG.JOB, CONO:JOBNO ELSE
      MAT GJOB.REC = ""
   END
30100 ERRMSG = ""
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
      GOSUB 91000; GOTO 30999
   END
   GOSUB 1250
30200 MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE SALS.NAME = UNKNOWN
   IF JOB.SHIP.VIA = "" THEN SHPV.DESC = "" ELSE MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIP.VIA ELSE SHPV.DESC = UNKNOWN
   IF JOB.DIV # "" THEN
      MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE
         ERRMSG = "CANNOT LOCATE DIVISION - ":JOB.DIV
         GOSUB 91000; GOTO 30999
      END
      SCV.REC(19)<ESN> = JOB.DIV
      SCV.REC(20)<ESN> = DIV.DESC
   END ELSE
      SCV.REC(20)<ESN> = "UNKNOWN"
   END
   IF JOB.EST # "" AND CO.JES = "Y" THEN
      MATREAD EST.REC FROM ESTIMATE,CONO:JOB.EST ELSE
         ERRMSG = "CANNOT LOCATE ESTIMATE - ":JOB.EST
         GOSUB 91000
         ERRMSG = ""
         JOB.EST = ""
      END
   END
   COMPLETE.DATE = JOB.TRACK.DATE<1,10>
   SCV.REC(7)<ESN> = JOBNO
   SCV.REC(9)<ESN> = JOB.CUST
   SCV.REC(10)<ESN> = CUST.NAME
   SCV.REC(11)<ESN> = JOB.SLSMN
   SCV.REC(12)<ESN> = SALS.NAME
   MATREAD CSR.REC FROM CSR.CODE,CONO:JOB.CSR ELSE
      MAT CSR.REC = ''
   END
   SCV.REC(50)<ESN>=JOB.CSR
   SCV.REC(51)<ESN>=CSR.DESC
   SCV.REC(14)<ESN> = JOB.TRACK.DATE<1,4>
   SCV.REC(15)<ESN> = JOB.TYPE
   SCV.REC(17)<ESN> = JOB.MASTER
   SCV.REC(18)<ESN> = JOB.QTY<1,1>
   SCV.REC(19)<ESN> = JOB.DIV
   MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE
      MAT DIV.REC = ""
      DIV.DESC = "UNKNOWN"
   END
   SCV.REC(20)<ESN> = DIV.DESC
   SCV.REC(21)<ESN> = JOB.MARKUP
   SCV.REC(22)<ESN> = JOB.CUST.PO
   SCV.REC(23)<ESN> = JOB.SHIP.VIA
   SCV.REC(24)<ESN> = SHPV.DESC
   SCV.REC(25)<ESN> = JOB.EST
   SCV.REC(26)<ESN> = JOB.EST.COST
   SCV.REC(27)<ESN,1> = JOB.COMMENTS<1,1>
   SCV.REC(27)<ESN,2> = JOB.COMMENTS<1,2>
   SCV.REC(35)<ESN> = JOB.CONF.AMT
   SCV.REC(36)<ESN> = JOB.COLORS
   IF JFS.PROD # "" THEN
      JOB.QTY<1,2> = SUM(JFS.F.QTY) / 1000
   END
   SCV.REC(37)<ESN> = JOB.QTY<1,2>
   IF JFS.PROD # "" THEN
      JOB.QTY<1,3> = SUM(JFS.S.QTY) / 1000
   END
   SCV.REC(38)<ESN> = JOB.QTY<1,3>
   SCV.REC(39)<ESN> = JOB.SALES.CODE
* T26973 v
   MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE 
      MAT SLC.REC = ''
   END
   SCV.REC(40)<ESN> = SLC.DESC
* T26973 ^
   SCV.REC(41)<ESN> = JOB.CATG
   SCV.REC(1)<ESN> = JOB.PRIOR.JOB
   SCV.REC(2)<ESN> = JOB.PRICE.PER.THOU
*T27885   SCV.REC(3)<ESN> = JOB.CREDIT
   IF JOB.CATG # "" THEN
      REC = ""
      READ REC FROM JOB.CATEGORY, CONO:JOB.CATG ELSE REC = UNKNOWN
      SCV.REC(42)<ESN> = REC
   END
   RESV.MATL = JOB.RESV.MATL
   RESV.WHSE = JOB.RESV.WHSE
   RESV.QTY = JOB.RESV.QTY
   GOSUB 40000
30500 *
*T21148 v
   IF JFS.PROD # "" THEN
      ECD.NUM = 18
      JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000
      SCV.REC(ECD.NUM)<ESN> = JOB.QTY<1,1>
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
*T21148 ^
   ECD.ACTION = 3; CALL SCRN.EDIT
   OLD.START.LINE = 0; GOSUB 4900
30999 RETURN
40000 ECD.NUM = 34
   BEGIN CASE
      CASE JOB.TYPE = "R"
         SCV.REC(ECD.NUM)<ESN> = "REGULAR"
      CASE JOB.TYPE = "S"
         SCV.REC(ECD.NUM)<ESN> = "SPOILAGE"
      CASE JOB.TYPE = "C"
         SCV.REC(ECD.NUM)<ESN> = "CUSTOMER CHANGE"
      CASE JOB.TYPE = "N"
         SCV.REC(ECD.NUM)<ESN> = "NON CHARGABLE"
      CASE 1
         SCV.REC(ECD.NUM)<ESN> = UNKNOWN
   END CASE
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23):ERRMSG:CL:
*       INPUT XX:
*       PRINT @(0,23):CL:
*       RETURN
99999 *
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END
