*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - POST.FNGD.SHIP
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 03/20/86
* DESCRIPTION - This program update (FNGD.SHIP.HIST) & (INV.WHSE)
*   & (INV.WHSE.LOC) & (JOB) & (DAILY.SHIP) & (JOB.SHIP) &
*   (COST.CNTR.WIP) & (JOB.STATS)
*********************************************************************
**** INSERT FILES EQUETES
*COPY>JCS.CPYLIB>DAILY.FNGD.SHIP
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>JCS.CPYLIB>FNGD.SHIP.HIST
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>WIP.LEVEL
*COPY>JCS.CPYLIB>COST.CNTR.WIP
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>TAX
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.HIST
*COPY>ICS.CPYLIB>INV.WHSE.LOC
*COPY>ICS.CPYLIB>INV.TRAN.HIST
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*
**** SETUP
*
MAT FILE.VARS = "" ; MAT EDIT.COM = "" ; MAT EDIT.COM.DRIVER = "" ; MAT COMP.REC = ""
MAT JSP.REC = ''; MAT JSI.REC = ""
*
**** SETUP SYSCOM
*
SYS.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC)
*
**** OPEN FILES
*
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG = 'INVENTORY FILE IS MISSING' ; GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
END
OPEN '','DAILY.FNGD.SHIP' TO DAILY.FNGD.SHIP ELSE
  ERRMSG = 'DAILY.FNGD.SHIP FILE IS MISSING'; GOTO 93000
END
OPEN '','FNGD.SHIP.HIST' TO FNGD.SHIP.HIST ELSE
  ERRMSG = 'FNGD.SHIP.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.STATS' TO JOB.STATS ELSE
  ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE
  ERRMSG = 'JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.SHIP' TO JOB.SHIP ELSE
  ERRMSG = 'JOB.SHIP FILE IS MISSING'; GOTO 93000
END
OPEN '','DEPARTMENT' TO DEPARTMENT ELSE
  ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
END
OPEN '','DIVISION' TO DIVISION ELSE
  ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
END
OPEN '','OPERATION' TO OPERATION ELSE
  ERRMSG = 'OPERATION FILE IS MISSING'; GOTO 93000
END
OPEN '','COST.CNTR' TO COST.CNTR ELSE
  ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB.SHIP' TO JOB.SHIP ELSE
  ERRMSG = 'JOB.SHIP FILE IS MISSING'; GOTO 93000
END
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE
  ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
END
OPEN '','TAX' TO TAX ELSE
  ERRMSG = 'TAX FILE IS MISSING'; GOTO 93000
END
OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE
  ERRMSG = 'COST.CNTR.WIP FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERRMSG = 'INV.WHSE.LOC IS MISSING'; GOTO 93000
END
OPEN '','INV.TRAN.HIST' TO INV.TRAN.HIST ELSE
  ERRMSG = 'INV.TRAN.HIST IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
END
OPEN '','INV.HIST' TO INV.HIST ELSE
  ERRMSG = 'INV.HIST IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
END
OPEN '','PMC.SCREENS' TO M.SCREENS ELSE
  ERRMSG = 'PMC.SCREENS IS MISSING'; GOTO 93000
END
*
**** MAIN PROCESS
*
DATA = 1
GET.MON.FLG = 1
LOOP
  READNEXT KEY ELSE DATA = 0
WHILE DATA = 1 DO
  IF GET.MON.FLG = 1 THEN 
    CONO = KEY[1,3]
    GOSUB 10
    IF POSTING.MON = "END" THEN GOTO 99999
    MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
      MAT WIP.LEVEL.REC = 0
      WLR.SP.COST = 2; WLR.SP.WIP = 2; WLR.SP.FOH = 0
    END
    GET.MON.FLG = 0
  END
  UPDATE.FLG = "N"
  MATREADU DFGS.REC FROM DAILY.FNGD.SHIP , KEY ELSE
    RELEASE DAILY.FNGD.SHIP, KEY 
    GOTO 111
  END
  DFGS.SHT = 0
  GOSUB 1000
111 REPEAT
GOTO 99999
*
**** GET POSTING MONTH
*
10*
ECD.ACTION = 1
ECD.SCRN.CNT = 1
ECD.SCRN.NAME = "GET.FISCAL.MONTH"
CALL SCRN.EDIT
ECD.SCRN.NO = 1
MAT SCV.REC = ""
ECD.ACTION = 2
CALL SCRN.EDIT
HEADING = "FINISHED GOODS SHIPPING POSTING PROCESS"
CALL GET.FISCAL.MONTH(CONO,POSTING.MON,HEADING,"JCFISCAL",CURR.MON)
RETURN
*
**** UPDATE PROCESS
1000*
JSP.SEQ = KEY[4,99]
POST.OSJ = 0
MATREADU JOB.REC FROM JOB , CONO:DFGS.JOB ELSE
  MAT JOB.REC = ""
  FND = 0
  IF NUM(DFGS.JOB) THEN
    IF DFGS.JOB < J.CUTOFF.NUM THEN FND = 1
  END ELSE
    JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
    FOR JF = 1 TO JC.CNT WHILE FND = 0
      PREFIX.LEN = LEN(J.CUTOFF.PREFIX<1,JF>)
      IF J.CUTOFF.PREFIX<1,JF> = DFGS.JOB[1,PREFIX.LEN] THEN
        CHK.VALUE = DFGS.JOB[PREFIX.LEN+1,LEN(DFGS.JOB)-PREFIX.LEN]
        IF NUM(CHK.VALUE) THEN
          IF CHK.VALUE < J.CUTOFF.PRE.NO<1,JF> THEN FND = 1
        END
      END
    NEXT JF
  END
  IF FND = 1 THEN
    POST.OSJ = 1
  END ELSE
    DFGS.STATUS<1,1> = "JOB RECORD IS MISSING" ; GOTO 3999
  END
END
BEGIN CASE
CASE JOB.STATUS<1,1> = 7
  DFGS.STATUS<1,1> = "THIS JOB HAS BEEN PURGED." ; GOTO 3999
CASE JOB.STATUS<1,1> = 8
  DFGS.STATUS<1,1> = "THIS JOB WAS PURGED" ; GOTO 3999
CASE JOB.STATUS<1,1> = 9
  DFGS.STATUS<1,1> = "THIS JOB IS CANCELLED" ; GOTO 3999
CASE (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # ""
  IF DFGS.INIT = "" THEN
    DFGS.STATUS<1,1> = "JOB IS NOT BOOKED NOR IN PROCESS AND AUTHORIZATION REQUIRED" ; GOTO 3999
  END ELSE
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DFGS.INIT ELSE
      MAT JSI.REC =""
      DFGS.STATUS<1,1> = "JOB IS NOT BOOKED, NOR IN PROCESS AND AUTHORIZATION INVALID" ; GOTO 3999
    END
  END
END CASE
TODAY = DATE()
MAT SHIP.VIA.REC = ""
IF JOB.TYPE # "R" AND JOB.TYPE # DFGS.SHIP.TYPE THEN
  DFGS.STATUS<1,1>= "JOB BELONG TO A DIFFERENT TYPE"
  GOTO 3999
END
IF JOB.DIV # DFGS.DIV THEN
  DFGS.STATUS<1,1>= "JOB BELONG TO DIFFERENT DIVISION"
  GOTO 3999
END
IF JOB.DEPT # DFGS.DEPT[1,LEN(JOB.DEPT)] THEN
  DFGS.STATUS<1,1>= "JOB BELONG TO DIFFERENT DEPARTMENT"
  GOTO 3999
END
IF JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
  IF DFGS.INIT = "" THEN
    DFGS.STATUS<1,1>= 'JOB # ':DFGS.JOB:' STATUS IS NOT BOOKED, NOR IN PROCESS AND INITIALS ARE MISSING'
    GOTO 3999
  END ELSE
    MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DFGS.INIT ELSE
      DFGS.STATUS<1,1>= 'JOB # ':DFGS.JOB:' STATUS IS NOT BOOKED, NOR IN PROCESS AND INITIALS ARE INVALID'
      GOTO 3999
    END
  END
END
MATREAD DIV.REC FROM DIVISION, CONO : DFGS.DIV ELSE
  DFGS.STATUS<1,1>= 'DIV # ':DFGS.DIV:' IS MISSING'
  GOTO 3999
END
MATREAD DEPT.REC FROM DEPARTMENT, CONO : DFGS.DEPT ELSE
  DFGS.STATUS<1,1>= 'DEPT # ':DFGS.DEPT:' IS MISSING'
  GOTO 3999
END
LOCATE DFGS.DEPT IN DIV.DEPT<1>,1 SETTING FND.DEPT ELSE
  DFGS.STATUS<1,1>= 'DEPT # ':DFGS.DEPT:' IS NOT UNDER DIV # ':DFGS.DIV
  GOTO 3999
END
MATREAD CCTR.REC FROM COST.CNTR, CONO : DFGS.CCTR ELSE
  DFGS.STATUS<1,1>= 'CCTR # ':DFGS.CCTR:' IS MISSING'
  GOTO 3999
END
IF CCTR.DEPT # DFGS.DEPT THEN
  DFGS.STATUS<1,1>= 'INCORRECT DEPARTMENT FOR CCTR # ':DFGS.CCTR
  GOTO 3999
END
IF CCTR.TYPE='F' THEN
  DFGS.STATUS<1,1>= 'CCTR # ':DFGS.CCTR:' IS FROZEN'
  GOTO 3999
END
LOCATE DFGS.CCTR IN DEPT.CCTRS<1>,1 SETTING FND.CCTR ELSE
  DFGS.STATUS<1,1>= 'CCTR # ':DFGS.CCTR:' IS NOT UNDER DEPT # ':DFGS.DEPT
  GOTO 3999
END
MATREAD OPER.REC FROM OPERATION, CONO : DFGS.OPER ELSE
  DFGS.STATUS<1,1>= 'OPER # ':DFGS.OPER:' IS MISSING'
  GOTO 3999
END
LOCATE DFGS.OPER IN CCTR.OPER<1>,1 SETTING FND.OPER ELSE
  DFGS.STATUS<1,1>= 'OPER # ':DFGS.OPER:' IS NOT IN CCTR # ':DFGS.CCTR
  GOTO 3999
END
MATREADU SHIP.VIA.REC FROM SHIP.VIA , CONO:DFGS.SHIP.VIA ELSE
  DFGS.STATUS<1,1>= 'SHIP VIA # ':DFGS.SHIP.VIA:' IS MISSING'
  GOTO 3999
END
MATREAD TAX.REC FROM TAX , CONO:DFGS.TAX.JUR ELSE
  DFGS.STATUS<1,1>= 'TAX JURISTICTION # ':DFGS.TAX.JUR:' IS MISSING'
  GOTO 3999
END
IF DFGS.INV.AMT < 0 THEN
  DFGS.STATUS<1,1>= 'CANNOT POST A NEGATIVE COST'
  GOTO 3999
END
*
MATREADU JSTAT.REC FROM JOB.STATS, CONO:DFGS.JOB ELSE
  DFGS.STATUS<1,1> = 'CANNOT LOCATE JOB ':DFGS.JOB:' ON JOB.STATS'
  GOTO 3999
END
IF DFGS.PROD # JSTAT.SHP.PROD<1,1> THEN
  DFGS.STATUS<1,1> = 'PRODUCT MISMATCH'
  GOTO 3999
END
IF DFGS.PROD = '' THEN
  DFGS.STATUS<1,1> = 'PRODUCT EMPTY'
  GOTO 3999
END
DFGS.STATUS = ""
IF DFGS.PROD = "" THEN
  DFGS.STATUS<1,1> = "THIS TRANSACTION HAS NO PRODUCTS"
  GOTO 3999
END
IF DFGS.WHSE = "" THEN
  DFGS.STATUS<1,1> = "THIS TRANSACTION HAS NO WAREHOUSES"
  GOTO 3999
END
IF DFGS.LOC = "" THEN
  DFGS.STATUS<1,1> = "THIS TRANSACTION HAS NO LOCATIONS"
  GOTO 3999
END
MATREADU INV.REC FROM INVENTORY, CONO : DFGS.PROD ELSE
  DFGS.STATUS<1,1> = 'CANNOT LOCATE INVENTORY # ': DFGS.PROD; GOTO 3999
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
  DFGS.STATUS<1,1> = 'CANNOT LOCATE CATEGORY # ':INV.LINE; GOTO 3999
END
MATREAD WHSE.REC FROM WAREHOUSE , CONO:DFGS.WHSE ELSE
  DFGS.STATUS<1,1> = "WAREHOUSE NUMBER ":DFGS.WHSE:" IS MISSING" ; GOTO 3999
END
IWH.ID = CONO:DFGS.PROD:"!":DFGS.WHSE
IH.ID = CONO:DFGS.PROD
MATREADU IWH.REC FROM INV.WHSE , IWH.ID ELSE
  DFGS.STATUS<1,1> = 'CANNOT LOCATE INV.WHSE # ': IWH.ID; GOTO 3999
END
MATREADU IH.REC FROM INV.HIST , IH.ID ELSE
  MAT IH.REC = ''
END
ITH.PTR = 0; ITH.ID = CONO:DFGS.PROD:"!":DFGS.WHSE:"!":TODAY
MATREADU ITH.REC FROM INV.TRAN.HIST, ITH.ID ELSE
  ITH.PTR = 1; MAT ITH.REC = ''
END
IF ITH.PTR = 0 THEN ITH.PTR = COUNT(ITH.TYPE,VM) + (ITH.TYPE # "") + 1
IF CATG.TRACK.QOH = "Y" THEN
  IF IWH.ON.HAND + DFGS.QTY<1,1> < IWH.RESV THEN
    DFGS.STATUS<1,1> = 'NOT ENOUGH AVAIL QTY ':IWH.ID; GOTO 3999
  END
END
GOSUB 8000
IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
IF INV.SBR + 0 = 0 THEN INV.SBR = 1
L1 = 0
LCNT = COUNT(DFGS.LOC,VM) + 1
*
**** TESTING TO MAKE SURE ALL LINES CAN BE SHIPPED BEFORE UPDATING
*
FOR L = LCNT TO 1 STEP -1
  IF DFGS.QTY<1,L> + 0 = 0 THEN GOTO 1999
  IF TRIM(DFGS.LOC<1,L>) = "" THEN GOTO 1999
  JL.CNT = COUNT(JSTAT.SHP.LOC,VM) + (JSTAT.SHP.LOC # "")
  JLFND = 0
  FOR JSTAT.LFND = 1 TO JL.CNT UNTIL JLFND
    IF DFGS.LOC<1,L> = JSTAT.SHP.LOC<1,JSTAT.LFND> AND DFGS.R.S.ID<1,L> = JSTAT.SHP.R.S.ID<1,JSTAT.LFND> THEN
      JLFND = JSTAT.LFND
    END
  NEXT JSTAT.LFND
  IF JLFND = 0 THEN
    DFGS.STATUS<1,L> = 'CANNOT LOCATE ON JOB.STATS FILE'
    GOTO 1999
  END ELSE
    IF JSTAT.SHP.QTY<1,JLFND> - DFGS.QTY<1,L> < 0 THEN
      DFGS.STATUS<1,L> = 'NOT ENOUGH QUANTITY IN JOB STATS RECORD'
      GOTO 1999
    END
  END
  LOCATE DFGS.LOC<1,L> IN IWH.LOC<1>,1 SETTING LLOC ELSE
    DFGS.STATUS<1,L> = "LOCATION # ":DFGS.LOC<1,L>:" NOT ON RECORD" ; GOTO 1999
  END
  IWLO.ID = IWH.ID:"!":DFGS.LOC<1,L>
  MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
    DFGS.STATUS<1,L> = "INV.WHSE.LOC RECORD MISSING FOR LOCATION # ":DFGS.LOC<1,L> ; GOTO 1999
  END
  IF TRIM(DFGS.R.S.ID<1,L>) # '' THEN
    LOCATE DFGS.R.S.ID<1,L> IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE
      DFGS.STATUS<1,L> = "ROLL / SKID ID # ":DFGS.R.S.ID<1,L>:" IS MISSING" ; GOTO 1999
    END
  END
  IF CATG.TRACK.QOH # "Y" THEN GOTO 1999
  IF IWLO.LOC.ON.HAND - DFGS.QTY<1,L> < 0 THEN
    DFGS.STATUS<1,L> = 'CANNOT LET LOCATION # ' :DFGS.LOC<1,L>:' GO NEGATIVE'; GOTO 1999
  END
  IF TRIM(DFGS.R.S.ID<1,L>) # '' THEN
    IF IWLO.CURR.WT<1,RLOC> - DFGS.QTY<1,L> < 0 THEN
      DFGS.STATUS<1,L> = 'CANNOT LET R.S.ID # ' :DFGS.R.S.ID<1,L>:' FOR LINE # ':L:' GO NEGATIVE'; GOTO 1999
    END
  END
  CHECK.QTY = DFGS.QTY<1,L>
  QCNT = COUNT(IWH.QTY.FI, VM) + (IWH.QTY.FI # "")
  FOR FNO = 1 TO QCNT WHILE CHECK.QTY <> 0
    IF CHECK.QTY > IWH.QTY.FI<1,FNO> THEN
      TEST.QTY = IWH.QTY.FI<1,FNO>
    END ELSE
      TEST.QTY = CHECK.QTY
    END
    CHECK.QTY = CHECK.QTY - TEST.QTY
  NEXT FNO
  IF CHECK.QTY <> 0 THEN
    DFGS.STATUS<1,L> = "SHIP QUANTITY IS MORE THEN AVAILABLE" ; GOTO 1999
  END
1999 NEXT L
IF DFGS.STATUS # "" THEN GOTO 3999 ELSE UPDATE.FLG = "Y"
*
**** UPDATING THE FILES
*
FOR L = LCNT TO 1 STEP -1
  IF DFGS.QTY<1,L> + 0 = 0 THEN GOTO 2999
  IF TRIM(DFGS.LOC<1,L>) = "" THEN GOTO 2999
  JLFND = 0
  FOR JSTAT.LFND = 1 TO JL.CNT UNTIL JLFND
    IF DFGS.LOC<1,L> = JSTAT.SHP.LOC<1,JSTAT.LFND> AND DFGS.R.S.ID<1,L> = JSTAT.SHP.R.S.ID<1,JSTAT.LFND> THEN
      JLFND = JSTAT.LFND
    END
  NEXT JSTAT.LFND
  IF CATG.TRACK.QOH = "Y" THEN
    LOCATE DFGS.LOC<1,L> IN IWH.LOC<1>,1 SETTING LLOC ELSE NULL
    IWLO.ID = IWH.ID:"!":DFGS.LOC<1,L>
    MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE NULL
    IF TRIM(DFGS.R.S.ID<1,L>) # '' THEN
      LOCATE DFGS.R.S.ID<1,L> IN IWLO.R.S.ID<1>,1 SETTING RLOC ELSE NULL
      IWLO.CURR.WT<1,RLOC> = IWLO.CURR.WT<1,RLOC> - DFGS.QTY<1,L>
      IWLO.LA.USED<1,RLOC> = DFGS.SHIP.DATE
      IF CATG.TYPE = 'L' THEN
        IWLO.CURR.DIAM<1,RLOC> = IWLO.CURR.DIAM<1,RLOC> - DFGS.DIAM<1,L>
      END ELSE
        IWLO.CURR.SHEET<1,RLOC> = IWLO.CURR.SHEET<1,RLOC> - DFGS.SHEET<1,L>
      END
    END
    IWLO.LOC.ON.HAND = IWLO.LOC.ON.HAND - DFGS.QTY<1,L>
    CHECK.QTY = DFGS.QTY<1,L>
    NEW.QTY.FI = "" ; FI.NO = "" ; FINO = 0
    STD.PRICE = 0 ; CUR.PRICE = 0
    QCNT = COUNT(IWH.QTY.FI, VM) + (IWH.QTY.FI # "")
    FOR FNO = 1 TO QCNT WHILE CHECK.QTY <> 0
      BEGIN CASE
      CASE CATG.COST.TYPE = "FI"
        CHECK.COST = IWH.COST.FI<1,FNO>
      CASE CATG.COST.TYPE = "LC"
        CHECK.COST = IWH.COST.FI<1,QCNT>
      CASE CATG.COST.TYPE = "SD"
        CHECK.COST = IWH.STD.COST
      CASE CATG.COST.TYPE = "AV"
        CHECK.COST = IWH.AVG.COST
      CASE CATG.COST.TYPE = "LT"
        CHECK.COST = IWH.LIST.COST
      CASE 1
        CHECK.COST = 0
      END CASE
      IF CHECK.QTY > IWH.QTY.FI<1,FNO> THEN
        TEST.QTY = IWH.QTY.FI<1,FNO>
      END ELSE
        TEST.QTY = CHECK.QTY
      END
      STD.PRICE = STD.PRICE + INT((CHECK.COST/10000) * ((TEST.QTY/10) / (INV.COST.WT/100)))
      CUR.PRICE = CUR.PRICE + INT((IWH.COST.FI<1,FNO>/10000) * ((TEST.QTY/10) / (INV.COST.WT/100)))
      FINO = FINO + 1
      NEW.QTY.FI<1,FINO> = TEST.QTY
      FI.NO<1,FINO> = FNO
      CHECK.QTY = CHECK.QTY - TEST.QTY
    NEXT FNO
    UFI.CNT = COUNT(NEW.QTY.FI,VM) + (NEW.QTY.FI # "")
    FOR UFI = 1 TO UFI.CNT
      IWH.QTY.FI<1,FI.NO<1,UFI>> = IWH.QTY.FI<1,FI.NO<1,UFI>> - NEW.QTY.FI<1,UFI>
      IWH.RSV.FI<1,FI.NO<1,UFI>> = IWH.RSV.FI<1,FI.NO<1,UFI>> - NEW.QTY.FI<1,UFI>
      IWH.ON.HAND = IWH.ON.HAND - NEW.QTY.FI<1,UFI>
      IH.CNT = DCOUNT(IH.DATE,VM)
      IDATE = DATE()
      LOCATE IDATE IN IH.DATE<1> SETTING PP ELSE NULL
      BEGIN CASE
      CASE PP = IH.CNT
        IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> - NEW.QTY.FI<1,UFI>
      CASE PP > IH.CNT
        IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> - NEW.QTY.FI<1,UFI>
        IH.DATE<1,PP> = IDATE
      CASE 1
        IH.AMOUNT<1,PP> = IH.AMOUNT<1,PP> - NEW.QTY.FI<1,UFI>
      END CASE
    NEXT UFI
    IWH.MTD.SALE = IWH.MTD.SALE + DFGS.QTY<1,L>
    IWH.YTD.SALE = IWH.YTD.SALE + DFGS.QTY<1,L>
    IWH.MTD.SALE.AMT = IWH.MTD.SALE.AMT + CUR.PRICE
    IWH.YTD.SALE.AMT = IWH.YTD.SALE.AMT + CUR.PRICE
    ITH.TYPE<1,ITH.PTR> = 'S'
    ITH.LOC<1,ITH.PTR> = DFGS.LOC<1,L>
    ITH.TRAN<1,ITH.PTR> = JSP.SEQ
    ITH.JOB<1,ITH.PTR> = DFGS.JOB
    ITH.R.S<1,ITH.PTR> = DFGS.R.S.ID<1,L>
    ITH.QTY<1,ITH.PTR> = 0 - DFGS.QTY<1,L>
    ITH.COST<1,ITH.PTR> = 0
    ITH.PTR = ITH.PTR + 1
    MATWRITE IWLO.REC ON INV.WHSE.LOC, IWH.ID:"!":DFGS.LOC<1,L>
  END
  JSTAT.SHP.QTY<1,JLFND> = JSTAT.SHP.QTY<1,JLFND> - DFGS.QTY<1,L>
  IF JSTAT.SHP.QTY<1,JLFND> = 0 THEN
    JSTAT.SHP.QTY = DELETE(JSTAT.SHP.QTY,1,JLFND,0)
    JSTAT.SHP.PROD = DELETE(JSTAT.SHP.PROD,1,JLFND,0)
    JSTAT.SHP.WHSE = DELETE(JSTAT.SHP.WHSE,1,JLFND,0)
    JSTAT.SHP.LOC = DELETE(JSTAT.SHP.LOC,1,JLFND,0)
    JSTAT.SHP.R.S.ID = DELETE(JSTAT.SHP.R.S.ID,1,JLFND,0)
    JSTAT.SHP.TRANS = DELETE(JSTAT.SHP.TRANS,1,JLFND,0)
  END
*
  DFGS.SHT = DFGS.SHT + DFGS.SHEET<1,L>
  GOSUB 6000 ; GOSUB 7000
2999 NEXT L
JSP.DCOST = DFGS.INV.AMT
IF WLR.SP.COST < 2 THEN
  JSP.COST = JSP.DCOST
END ELSE
  JSP.COST = INT((JSP.DCOST*(1 + WLR.SP.FOH/10000)) + .5)
END
IF DFGS.SHIP.TYPE = "S" OR DFGS.SHIP.TYPE = "N" THEN
  JSP.SALE = 0
END ELSE
  JSP.SALE = INT(JSP.COST + ((JSP.COST * (CCTR.OPER.MARKUP<1,FND.OPER>/100))/100) + .5)
END
LOCATE POSTING.MON IN SHPV.PERIOD<1>,1 BY "DR" SETTING FND.PER ELSE
  INS POSTING.MON BEFORE SHPV.PERIOD<1,FND.PER>
  INS "0" BEFORE SHPV.SHPMT<1,FND.PER>
  INS "0" BEFORE SHPV.COST<1,FND.PER>
  INS "0" BEFORE SHPV.SALE<1,FND.PER>
END
SHPV.SHPMT<1,FND.PER> = SHPV.SHPMT<1,FND.PER> + 1
SHPV.COST<1,FND.PER> = SHPV.COST<1,FND.PER> + JSP.DCOST
JSP.TYPE = DFGS.SHIP.TYPE
JSP.SPOIL.CODE = DFGS.SPOIL.CODE
JSP.DIV = DFGS.DIV
JSP.OPER = DFGS.OPER
JSP.SHIP.TO = DFGS.SHIP.TO
JSP.NAME = DFGS.SHIP.NAME
JSP.ADDR1 = DFGS.SHIP.ADDR1
JSP.ADDR2 = DFGS.SHIP.ADDR2
JSP.ADDR3 = DFGS.SHIP.ADDR3:" ":DFGS.SHIP.CI.ST
JSP.VIA = DFGS.SHIP.VIA
JSP.JURS = DFGS.TAX.JUR
JSP.LAST = DFGS.LAST
JSP.QTY = INT(DFGS.SHT/ICR.MT2)
JSP.INV.DATE = DFGS.INV.DATE
JSP.DATE = DFGS.SHIP.DATE
JSP.MON = POSTING.MON
JSP.PROD = DFGS.PROD
JSP.WHSE = DFGS.WHSE
JSP.WIP = ""
BEGIN CASE
CASE WLR.SPL = "N" AND JSP.TYPE = "S"
CASE WLR.NON.CHG = "N" AND JSP.TYPE = "N"
CASE WLR.SP.WIP > 0
  JSP.WIP<1,1,1> = JSP.DCOST
END CASE
JSP.FRT.NO = DFGS.FREIGHT.NO
JSP.INV = DFGS.INV.NO
JSP.DESC = DFGS.SHIP.DESC
PTR = 1
LOOP
  LOCATE DFGS.DEPT IN JOB.SP.DEPT<1>,PTR SETTING DFND ELSE
    JOB.SP.DEPT<1,DFND> = DFGS.DEPT
    JOB.SP.CCTR<1,DFND> = DFGS.CCTR
  END
  IF DFGS.CCTR = JOB.SP.CCTR<1,DFND> THEN
    PTR = 0
  END ELSE
    PTR = DFND + 1
  END
WHILE PTR DO REPEAT
SP.ID = CONO:DFGS.JOB:"!":DFGS.DEPT:"!":DFGS.CCTR:"!"
LOOP
  JOB.SP.SEQ<1,DFND> = JOB.SP.SEQ<1,DFND> + 1
  JSP.ID = SP.ID:JOB.SP.SEQ<1,DFND>
  READ DUMMY FROM JOB.SHIP, JSP.ID ELSE DUMMY = ""
WHILE DUMMY # "" DO REPEAT
IF JSP.DATE > JOB.SP.DATE<1,DFND,1> THEN
  JOB.SP.DATE<1,DFND,1> = JSP.DATE
END
IF JSP.SEQ > JOB.SP.DATE<1,DFND,2> THEN
  JOB.SP.OPER<1,DFND> = JSP.OPER
  JOB.SP.VIA<1,DFND> = JSP.VIA
  JOB.SP.DATE<1,DFND,2> = JSP.SEQ
  JOB.SP.DATE<1,DFND,3> = JOB.SP.SEQ<1,DFND>
END
JOB.SP.SALE<1,DFND> = JOB.SP.SALE<1,DFND> + JSP.SALE
JOB.SP.COST<1,DFND> = JOB.SP.COST<1,DFND> + JSP.COST
JOB.SP.DCOST<1,DFND> = JOB.SP.DCOST<1,DFND> + JSP.DCOST
IF JSP.WIP # "" THEN
  CCW.ID = CONO:JSP.DIV:DFGS.DEPT:"!":DFGS.CCTR:JSP.MON
  MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC = ""
  JOB.WIP<1,1> = JOB.WIP<1,1> + 2
  JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> + 2
  FOR W = 1 TO WLR.SP.WIP
    JOB.WIP<1,2,W> = JOB.WIP<1,2,W> + JSP.WIP<1,1,W>
    JOB.SP.WIP<1,2,W> = JOB.SP.WIP<1,2,W> + JSP.WIP<1,1,W>
    CCW.SP.I<1,W> = CCW.SP.I<1,W> + JSP.WIP<1,1,W>
  NEXT W
  MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
END
IF JSP.MON < JOB.SP.WIP<1,4> OR JOB.SP.WIP<1,4> = "" THEN
  JOB.SP.WIP<1,4> = JSP.MON
  IF JSP.MON < JOB.WIP<1,4> OR JOB.WIP<1,4> = "" THEN
    JOB.WIP<1,4> = JSP.MON
  END
END
IF JSP.MON > JOB.SP.WIP<1,5> THEN
  JOB.SP.WIP<1,5> = JSP.MON
  IF JSP.MON > JOB.WIP<1,5> THEN
    JOB.WIP<1,5> = JSP.MON
  END
END
FIRST.TIME = 0
DEPT.CNT = COUNT(JOB.SP.DEPT,VM) + (JOB.SP.DEPT # '')
IF JOB.SP.QTY<1,DFND> + 0 = 0 THEN
  FIRST.TIME = 1
  OLD.JOB.BAL = 0
END ELSE
  OLD.JOB.BAL = JOB.QTY<1,1>
  FOR K = 1 TO DEPT.CNT
    OLD.JOB.BAL = OLD.JOB.BAL - JOB.SP.QTY<1,K>
  NEXT K
END
JOB.SP.QTY<1,DFND> = JOB.SP.QTY<1,DFND> + JSP.QTY
BEGIN CASE
CASE JSP.TYPE = 'N'
  PTR = 2
CASE JSP.TYPE = 'C'
  PTR = 3
CASE JSP.TYPE = 'S'
  PTR = 4
CASE 1
  PTR = 1
END CASE
JOB.SP.TCOST<1,DFND,PTR> = JOB.SP.TCOST<1,DFND,PTR> + JSP.COST
IF JOB.STATUS<1,1> # 1 THEN
  JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"1")
  JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
END
IF JSP.LAST = "Y" THEN JOB.TRACK.DATE<1,6> = JSP.DATE
JOB.TOT.DCOST = JOB.TOT.DCOST + JSP.DCOST
JOB.TOT.COST = JOB.TOT.COST + JSP.COST
JOB.TOT.SALE = JOB.TOT.SALE + JSP.SALE
JMV = 1
IF JOB.QTY<1,2> > JOB.QTY<1,1> THEN JMV = 2
JOB.BAL.QTY = JOB.QTY<1,JMV>
JOB.QTY<1,3> = JOB.QTY<1,3> + INT(DFGS.SHT/ICR.MT2)
FOR K = 1 TO DEPT.CNT
  JOB.BAL.QTY = JOB.BAL.QTY - JOB.SP.QTY<1,K>
NEXT K
*
3999 *
IF DFGS.STATUS = "" THEN
  DELETE DAILY.FNGD.SHIP , KEY
END ELSE
  MATWRITE DFGS.REC ON DAILY.FNGD.SHIP, KEY
END
IF UPDATE.FLG = "Y" THEN
  IF CATG.TRACK.QOH = "Y" THEN
    IWH.LA.SALE = DFGS.SHIP.DATE
    INV.LA.SALE = DFGS.SHIP.DATE
    MATWRITE IWH.REC ON INV.WHSE, IWH.ID
    MATWRITE ITH.REC ON INV.TRAN.HIST, ITH.ID
    MATWRITE INV.REC ON INVENTORY, CONO:DFGS.PROD
  END
  MATWRITE JOB.REC ON JOB, CONO : DFGS.JOB
  MATWRITE SHIP.VIA.REC ON SHIP.VIA, CONO:JSP.VIA
  MATWRITE JSP.REC ON JOB.SHIP, JSP.ID
  IF JSTAT.SHP.QTY = '' AND JSTAT.OPO.NO='' AND JSTAT.OPO.DATE='' AND JSTAT.OPO.AMT='' AND JSTAT.OPO.QTY='' THEN
    DELETE JOB.STATS, CONO:DFGS.JOB
  END ELSE
    MATWRITE JSTAT.REC ON JOB.STATS, CONO:DFGS.JOB
  END
END
RELEASE
RETURN
*
**** UPDATE FNGD.SHIP.HIST FILE 
*
6000*
L1 = L1 + 1
JSP.LOC<1,L1> = DFGS.LOC<1,L>
JSP.R.S.ID<1,L1> = DFGS.R.S.ID<1,L>
JSP.R.S.QTY<1,L1> = DFGS.QTY<1,L>
JSP.SHEET<1,L1> = DFGS.SHEET<1,L>
JSP.DIAM<1,L1> = DFGS.DIAM<1,L>
RETURN
*
**** DELETE UPDATE PRODUCT FROM DAILY.FNGD.SHIP
*
7000*
DFGS.LOC = DELETE(DFGS.LOC,1,L,0)
DFGS.R.S.ID = DELETE(DFGS.R.S.ID,1,L,0)
DFGS.QTY = DELETE(DFGS.QTY,1,L,0)
DFGS.DIAM = DELETE(DFGS.DIAM,1,L,0)
DFGS.SHEET = DELETE(DFGS.SHEET,1,L,0)
DFGS.STATUS = DELETE(DFGS.STATUS,1,L,0)
RETURN
*
**** SETUP INVENTORY CONVERSION
*
8000*
BEGIN CASE
CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
  ICR.DV1 = INV.M.WT ; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
  ICR.DV1 = INV.PAP.WIDTH/100 ; ICR.MT1 = 10 ; ICR.DV2 = 1 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
  ICR.DV1 = INV.PAP.WIDTH/100 ; ICR.MT1 = 100 ; ICR.DV2 = 12 ; ICR.MT2 = 1
CASE INV.UNIT<1,2> = INV.UNIT<1,3> 
  ICR.DV1 = 10 ; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 100
CASE 1
  ICR.DV1 = 10; ICR.MT1 = 1 ; ICR.DV2 = 1 ; ICR.MT2 = 100
END CASE
RETURN
*** ERROR ROUTINE
91000 ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
**** END OF PROGRAM
99999 END
