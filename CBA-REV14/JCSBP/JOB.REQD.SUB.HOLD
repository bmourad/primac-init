  SUBROUTINE JOB.REQD.SUB(CONO,JOB.NUM,DISPLAY,SAVE.INV.JS.REC)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.REQD.SUB
* DATE        - 10/28/83
* MODIFIED    - NLB
* DATE MOD    - 10/20/88
* COMMENTS    - ADDED CUST INVENTORY CHECK
* DESCRIPTION -
* CSF 23153 GAT 06/06/95 FIX XREF PROBLEM ON INV.XREF
*T21981 lanny 06/02/1997 * Undo CSF 21636 for REV10B.
*T24675 markt 12/20/1999 * When booking from an estimate, force the user
*                          to enter the Required Date.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>ICS.CPYLIB>CATEGORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>PMC.CPYLIB>FISCAL
*
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
  RQD.DATE.MV = 1
  RQD.AMT.MV = 2
  RQD.QTY.MV = 3
  PAGE.SIZE = 4
  BEGIN.PAGE = 7
  LINE.SPACE = 3
  OLD.START.LINE = 0
  MAT INV.CNV.REC = ''
  UNKNOWN = "UNKNOWN"
  BALANCE = 0
  ON.LOAD = 0; * T24675
*
*
  MAT GEN.XREF.REC = ''
  GXR.CO = CONO
  GXR.NAME = "INVENTORY"
  GXR.FILE = INVENTORY
  GXR.XREF = INVENTORY.XREF
*
  MATL.DESC = ''
  MATL.TYPE = ''
  MATL.UM = ''
  MATL.TRACK.QOH = ''
  IF JOB.RESV.MATL = '' AND DISPLAY = 0 THEN
    LINES = 0
    ACTION = 'A'
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 1000
    WHILE LINES > OLD.LINES DO
    REPEAT
    LN = LINES
  END ELSE
    LINES = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
    FOR LN = 1 TO LINES
      MATREAD INV.REC FROM INVENTORY, CONO:JOB.RESV.MATL<1,LN> ELSE
        MAT INV.REC = ''
        INV.FULL.DESC = UNKNOWN
      END
      MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
        MAT CATG.REC = ""
      END
      IF SAVE.INV.JS.REC<LN> = '' THEN
        JSTAT.ID = JOB.RESV.MATL<1,LN>:"!":JOB.RESV.WHSE<1,LN>:"!":JOB.NUM
        MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
          MAT INV.JS.REC = ''
        END
        SAVE.INV.JS.REC<LN,RQD.DATE.MV> = IJS.REQ.DATE
        SAVE.INV.JS.REC<LN,RQD.AMT.MV> = IJS.REQ.AMT
        SAVE.INV.JS.REC<LN,RQD.QTY.MV> = IJS.REQ.QTY
      END
      GOSUB 8000
    NEXT LN
    LN = 1
  END
  GOSUB 11000
  MORE = 1
  LOOP
    IF DISPLAY = 0 THEN
      ECD.NUM = 5
    END ELSE
      ECD.NUM = 6
    END
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
    ACTION = ECD.RET.VALUE
    BEGIN CASE
      CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
        MORE = 0
      CASE ACTION = 'A'
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 1000
        WHILE LINES > OLD.LINES DO
        REPEAT
        LN = LINES
        GOSUB 11000
      CASE ACTION = 'C'
        GOSUB 9000
        IF LN.NO THEN
          IF MATL.TRACK.QOH<LN.NO> = "Y" THEN
            LN = LN.NO; FOUND = 1
            IWH.ID = CONO : JOB.RESV.MATL<1,LN> : '!' : JOB.RESV.WHSE<1,LN>
            MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
              FOUND = 0; ERRMSG = 'WAREHOUSE (':JOB.RESV.WHSE<1,LN>:') IS MISSING'; GOSUB 91000
            END
            IF FOUND THEN SLN = BEGIN.PAGE+LINE.SPACE*MOD(LN-1,PAGE.SIZE); GOSUB 1400
          END ELSE
            ERRMSG = 'CANNOT UPDATE QUANTITY FOR THIS PRODUCT'
            GOSUB 91000
          END
        END
      CASE ACTION = 'S'
        LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 11000
      * T25978 v
      CASE ACTION = 'SR'
        LN = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE - PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 11000
      CASE ACTION = 'ST'
        LN = 1
        GOSUB 11000
      CASE ACTION = 'SB'
        LN = LINES
        GOSUB 11000
      * T25978 ^
    END CASE
  WHILE MORE DO
  REPEAT
  GOTO 99999
1000*
  GOSUB 11000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 0 ; P_Y = SLN+2 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1100*
  X = 3
  Y = SLN
  TYP = 1
  MAXL = 15
  O.R = 'O'
  DEFAULT = JOB.RESV.MATL<1,LN>
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF ACTION = "A" THEN
      JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,LN,0)
      JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,LN,0)
      JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,LN,0)
      JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,LN,0)
      JOB.USED.QTY = DELETE(JOB.USED.QTY,1,LN,0)
      JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,LN,0)
      JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,LN,0)
      JOB.USED.AMT = DELETE(JOB.USED.AMT,1,LN,0)
      SAVE.INV.JS.REC = DELETE(SAVE.INV.JS.REC,LN,0,0)
      MATL.DESC = DELETE(MATL.DESC,LN,0,0)
      MATL.UM = DELETE(MATL.UM,LN,0,0)
      MATL.TRACK.QOH = DELETE(MATL.TRACK.QOH,LN,0,0)
      ICR.DV1 = DELETE(ICR.DV1,LN,0,0)
      ICR.MT1 = DELETE(ICR.MT1,LN,0,0)
      ICR.DV2 = DELETE(ICR.DV2,LN,0,0)
      ICR.CNV = DELETE(ICR.CNV,LN,0,0)
    END
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+2 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 1999
  END
  IF VALUE = '' THEN
    X = 3
    Y = SLN+2
    O.R = 'O'
    TYP = 1
    MAXL = 45
    CALL EDIT.SUB
    IF VALUE = '' OR VALUE = 'END' THEN GOTO 1100
* 23153
    MAT GEN.XREF.REC = ''
    GXR.CO = CONO
    GXR.NAME = "INVENTORY"
    GXR.FILE = INVENTORY
    GXR.XREF = INVENTORY.XREF
    GXR.SRCH.ID = VALUE
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    ECD.ACTION = 2; CALL SCRN.EDIT
    ECD.ACTION = 3; CALL SCRN.EDIT
    OLD.START.LINE = 0
    GOSUB 11000
    IF GXR.ID = '' THEN GOTO 1000
    VALUE = GXR.ID
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
    P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:VALUE "L#15"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  MATREAD INV.REC FROM INVENTORY, CONO:VALUE ELSE
    ERRMSG = 'CANNOT LOCATE INVENTORY (':VALUE:')'
    GOSUB 91000; GOTO 1100
  END
  MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
    ERRMSG = 'CANNOT LOCATE CATEGORY (':INV.LINE:')'
    GOSUB 91000; GOTO 1100
  END
  IF CATG.TRACK.QOH # "Y" THEN
    ERRMSG = 'CANNOT UPDATE QUANTITY FOR THIS PRODUCT'
    GOSUB 91000; GOTO 1100
  END
  IF INV.CUST # "" THEN
    IF "X":INV.CUST # "X":JOB.CUST THEN
      ERRMSG = "THIS INVENTORY BELONGS TO CUSTOMER ":INV.CUST
      GOSUB 91000
      GOTO 1100
    END
  END
  JOB.RESV.MATL<1,LN> = VALUE
  GOSUB 8000
  JOB.ALOC.QTY<1,LN> = JOB.ALOC.QTY<1,LN> + 0
  JOB.USED.QTY<1,LN> = JOB.USED.QTY<1,LN> + 0
  JOB.ALOC.AMT<1,LN> = JOB.ALOC.AMT<1,LN> + 0
  JOB.USED.AMT<1,LN> = JOB.USED.AMT<1,LN> + 0
  JOB.RESV.QTY<1,LN> = JOB.RESV.QTY<1,LN> + 0
  P_X  = 19 ; P_Y = SLN ; P_VALUE = MATL.UM<LN> "L#3" ; P_OPT = ""
  P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JOB.ALOC.QTY<1,LN>/ICR.DV1<LN>) * ICR.MT1<LN>) / ICR.DV2<LN> + .5),ICR.CNV<LN>) "R#11"
  P_X  := AM:35 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JOB.RESV.QTY<1,LN>/ICR.MT1<LN>)*ICR.DV1<LN>)*ICR.DV2<LN> + .5),ICR.CNV<LN>) "R#11"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 35 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT(((JOB.USED.QTY<1,LN>/ICR.DV1<LN>) * ICR.MT1<LN>) / ICR.DV2<LN> + .5),ICR.CNV<LN>) "R#11" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 3 ; P_Y = SLN+2 ; P_VALUE = MATL.DESC<LN> "L#45" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1200 IF INV.WHSE.CODE = '' THEN
    ERRMSG = 'INVENTORY (':JOB.RESV.MATL<1,LN>:') HAS NO WAREHOUSES'
    GOSUB 91000; GOTO 1100
  END
  WHSE.CNT = COUNT(INV.WHSE.CODE,VM) + 1
  IF WHSE.CNT = 1 THEN
    VALUE = INV.WHSE.CODE<1,1>
    P_X  = 3 ; P_Y = SLN + 1 ; P_VALUE = VALUE "L#4" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    HMSG = 'WAREHOUSE - ' : INV.WHSE.CODE<1,1>
    VALDAT = INV.WHSE.CODE<1,1>
    FOR I = 2 TO WHSE.CNT
      HMSG = HMSG : ', ' : INV.WHSE.CODE<1,I>
      VALDAT = VALDAT : VM : INV.WHSE.CODE<1,I>
    NEXT I
    X = 3
    Y = SLN + 1
    TYP = 1
    MAXL = 4
    IF JOB.RESV.WHSE<1,LN> # '' THEN
      O.R = 'O'
      DEFAULT = JOB.RESV.WHSE<1,LN>
    END
    CALL EDIT.SUB
    IF VALUE = 'END' THEN GOTO 1100
  END
  FOR FW = 1 TO LN-1
    IF JOB.RESV.MATL<1,FW> = JOB.RESV.MATL<1,LN> AND JOB.RESV.WHSE<1,FW> = VALUE THEN
      ERRMSG = "INVENTORY (":JOB.RESV.MATL<1,FW>:") FOR WAREHOUSE (":VALUE:") ALREADY RESERVED"
      GOSUB 91000
      P_X  = 3 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1100
    END
  NEXT FW
  IWH.ID = CONO : JOB.RESV.MATL<1,LN> : '!' : VALUE
  MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
    ERRMSG = 'WAREHOUSE (':VALUE:') IS MISSING'
    GOSUB 91000; GOTO 1100
  END
*TASK 18828 ; *CLS 3/95
  MATREAD WHSE.REC FROM WAREHOUSE,CONO:VALUE ELSE MAT WHSE.REC = ''
  IF JOB.DIV # WHS.DIV AND WHS.DIV # "00" THEN 
    ERRMSG = "JOB DIVISION DOES NOT MATCH PRODUCT'S WAREHOUSE DIVISION"
    GOSUB 91000
    GOTO 1100
  END
  JOB.RESV.WHSE<1,LN> = VALUE
1400*
  X  = 47
  Y = SLN
  TYP = 6; MAXL = 8
  O.R = 'R'
  DEFAULT = OCONV(SAVE.INV.JS.REC<LN,RQD.DATE.MV>,"D2/")
  CALL EDIT.SUB
  IF VALUE = 'END' AND ACTION = 'C' THEN GOTO 1999
  IF VALUE = 'END' THEN GOTO 1400
  SAVE.INV.JS.REC<LN,RQD.DATE.MV> = VALUE
  IF ON.LOAD THEN GOTO 1999; *T24675
1450*
  X = 56
  Y = SLN
  TYP = 4; SCALER = 4; MAXV = 99999999; MINV = 0
  MAXL = 9
  O.R = 'O'
  DEFAULT = OCONV(SAVE.INV.JS.REC<LN,RQD.AMT.MV>,"MD4")
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF ACTION = 'A' THEN
      GOTO 1000
    END ELSE
      GOTO 1450
    END
  END
  SAVE.INV.JS.REC<LN,RQD.AMT.MV> = VALUE
1500*
  IF ICR.CNV<LN> = "MD0" THEN
    TYP = 3; MAXV = 99999999
  END ELSE
    TYP = 4; SCALER = 2; MAXV = 9999999999
  END
  X = 66
  Y = SLN
  O.R = 'R'; MAXL = 11; MINV = 0
  IF SAVE.INV.JS.REC<LN,RQD.QTY.MV> + 0 > 0 THEN
    O.R = 'O'
    DEFAULT = OCONV(INT(((SAVE.INV.JS.REC<LN,RQD.QTY.MV>/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> + .5),ICR.CNV<LN>)
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF ACTION = 'A' THEN
      GOTO 1000
    END ELSE
      GOTO 1500
    END
  END
  SAVE.INV.JS.REC<LN,RQD.QTY.MV> = INT(((VALUE/ICR.MT1<LN>)*ICR.DV1<LN>)*ICR.DV2<LN> + .5)
  BALANCE = SAVE.INV.JS.REC<LN,RQD.QTY.MV> - JOB.ALOC.QTY<1,LN>-JOB.RESV.QTY<1,LN>-JOB.USED.QTY<1,LN>
* PRINT @(66,SLN+1):OCONV(BALANCE,"MD2")"R#11"
  IF BALANCE >= 0 THEN
    P_X  = 66 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT(((BALANCE/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> + .5),ICR.CNV<LN>)"R#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END ELSE
    BALANCE = 0
    P_X  = 66 ; P_Y = SLN+1 ; P_VALUE = OCONV(INT(((BALANCE/ICR.DV1<LN>)*ICR.MT1<LN>)/ICR.DV2<LN> - .5),ICR.CNV<LN>)"R#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  LINES = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # '')
1999*
  RETURN
8000*
  MATL.DESC<LN> = INV.FULL.DESC
  MATL.TYPE<LN> = INV.PAP.TYPE
  MATL.UM<LN> = INV.UNIT<1,2>
  MATL.TRACK.QOH<LN> = CATG.TRACK.QOH
  BEGIN CASE
    CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
      ICR.DV1<LN> = INV.M.WT
      ICR.MT1<LN> = 1
      ICR.DV2<LN> = 1
      ICR.CNV<LN> = "MD0"
    CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
      ICR.DV1<LN> = INV.PAP.WIDTH/100
      ICR.MT1<LN> = 10
      ICR.DV2<LN> = 1
      ICR.CNV<LN> = "MD0"
    CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
      ICR.DV1<LN> = INV.PAP.WIDTH/100
      ICR.MT1<LN> = 100
      ICR.DV2<LN> = 12
      ICR.CNV<LN> = "MD0"
    CASE 1
      ICR.DV1<LN> = 10
      ICR.MT1<LN> = 1
      ICR.DV2<LN> = 1
      ICR.CNV<LN> = "MD2"
  END CASE
  RETURN
9000*
  GOSUB 11000
  ECD.NUM = 7; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  LN.NO = ECD.RET.VALUE
  IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
  RETURN
11000*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 11999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "CL"
    P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.RESV.MATL<1,N> "L#15"
    P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:MATL.UM<N> "L#3"
    P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JOB.ALOC.QTY<1,N>/ICR.DV1<N>) * ICR.MT1<N>) / ICR.DV2<N> + .5),ICR.CNV<N>) "R#11"
    P_X  := AM:35 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(INT(((JOB.RESV.QTY<1,N>/ICR.DV1<N>) * ICR.MT1<N>) / ICR.DV2<N> + .5),ICR.CNV<N>) "R#11"
    P_X  := AM:47 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SAVE.INV.JS.REC<N,RQD.DATE.MV>,"D2/") "L#8"
    P_X  := AM:56 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SAVE.INV.JS.REC<N,RQD.AMT.MV>,"MD4")"R#9"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* CSF 21626
*        PRINT @(66,SLN):OCONV(INT(((SAVE.INV.JS.REC<N,RQD.QTY.MV>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> + .5),ICR.CNV<N>)"R#11":
*T21981  REQDQ = INT(SAVE.INV.JS.REC<N,RQD.QTY.MV>/10 + .5)
    REQDQ = INT(((SAVE.INV.JS.REC<N,RQD.QTY.MV>/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> + .5)
    P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(REQDQ,ICR.CNV<N>)"R#11" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*
    P_X  = 3 ; P_Y = SLN+1 ; P_VALUE = JOB.RESV.WHSE<1,N> "L#4" ; P_OPT = "CL"
    P_X  := AM:35 ; P_Y := AM:SLN+1 ; P_VALUE := AM:OCONV(INT(((JOB.USED.QTY<1,N>/ICR.DV1<N>) * ICR.MT1<N>) / ICR.DV2<N> + .5), ICR.CNV<N>) "R#11"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*T21981v BALANCE = SAVE.INV.JS.REC<N,RQD.QTY.MV> - JOB.ALOC.QTY<1,N>-JOB.RESV.QTY<1,N>-JOB.USED.QTY<1,N>
    BALANCE = SAVE.INV.JS.REC<N,RQD.QTY.MV> - JOB.ALOC.QTY<1,N>-JOB.RESV.QTY<1,N>-JOB.USED.QTY<1,N>
*T21981  SUBTR = JOB.ALOC.QTY<1,N> + JOB.RESV.QTY<1,N> + JOB.USED.QTY<1,N>
*T21981  SUBTR = INT(((SUBTR/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> + .5)
*T21981  BALANCE = REQDQ - SUBTR
*
* PRINT @(66,SLN+1):OCONV(BALANCE,"MD2")"R#11":
* CSF 21626
*T21981 Uncomment out following 'IF'
    IF BALANCE >= 0 THEN
      BALANCE = INT(((BALANCE/ICR.DV1<N>)*ICR.MT1)/ICR.DV2 + .5)
*           PRINT @(66,SLN+1):OCONV(INT(((BALANCE/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> + .5),ICR.CNV<N>)"R#11":
      P_X  = 66 ; P_Y = SLN+1 ; P_VALUE = OCONV(BALANCE,ICR.CNV<N>)"R#11" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END ELSE
      BALANCE = 0
*           PRINT @(66,SLN+1):OCONV(INT(((BALANCE/ICR.DV1<N>)*ICR.MT1<N>)/ICR.DV2<N> - .5),ICR.CNV<N>)"R#11":
      P_X  = 66 ; P_Y = SLN+1 ; P_VALUE = OCONV(BALANCE,ICR.CNV<N>)"R#11" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
    P_X  = 3 ; P_Y = SLN+2 ; P_VALUE = MATL.DESC<N> "L#45" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* T24675 v
    IF DISPLAY AND SAVE.INV.JS.REC<N,RQD.DATE.MV> = "" THEN
      ON.LOAD = 1
      ACTION = "A"
      GOSUB 1400
      ON.LOAD = 0
    END
* T24675 ^
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SLN+2 ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
11999*
  RETURN
91000*
  ERR.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2
  CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3
  CALL SYSCOM(MAT SYSCOM.REC)
99999*
  ECD.ACTION=99;CALL SCRN.EDIT
  RETURN
END
