*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>PMC.CPYLIB>COM.CUST
*COPY>OPS.CPYLIB>COM.ORDER
*COPY>JCS.CPYLIB>COM.JOB.INQ
********************************************************
* REVISION    - [08.1]
* COPYRIGHT   - 1982 by C.B.A    (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.INQUIRY
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 11/03/83
* DESCRIPTION - Job Maintenance Review
* COMMENT     - Revised to reflect JOB.STATUS -5 = "REOPENED"
* - Task #12907 (RRG)
* MOD TASK 18262 DMT 7/24/94 INCREASE ESTIMATE QUANTITIES TO 99
*ENDOC
*T22417 lanny 12/10/1997 * For Master/Sub Job always prompt for
*                          inclusion of subs.
*T23278 markt 12/22/1998 * Add check for divisional security.
*T24007 cm 06/28/1999 * Job status not showing completed after completion
*                       date is entered and record is filed.
*T25682 lanny 03/12/2001 * When Filing a master job, if sub-jobs were
*                          included, it combines the sub data into the
*                          master job record.
*T25950 edwin 07/24/2001 * Add prompt for authorization to cancel a job
*                          based on its' status.
*T25967 ajibaly 07/25/2001 * View memos
*T26334 epitka 12/19/2001 * Rev12
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26606 cmykleb 07/01/2002 * Add a Serial Reserve Inquiry screen.
*T26731 adelgado 07/08/2002 * Allow to view multiple CSR Memo for one
*                             job.
*T26909 cmykleb 10/14/2002 * Include logic from POST.INVOICE for
*                            completing a job.
*T26973 adelgado 11/01/2002 * Add Sales Code description field.
*T27885 cmykleb 06/23/2004 * Do not display the credit authorization
*                            code. This is supposed to be a secure
*                            field.
********************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>DIVISION
*COPY>JCS.CPYLIB>DEPT.TOT.REC
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SALESMAN
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>JCS.CPYLIB>GANG.JOB
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>JCS.CPYLIB>JOB.TOT.REC
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>SALES.CODE             ;* T26973
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>OPS.CPYLIB>JOB.FNGD.STATS
*COPY>JIS.CPYLIB>SYS_TKT_DEF
*COPY>JIS.CPYLIB>SYS_SCN_DEF
*COPY>JIS.CPYLIB>JKT_NOTIFY
*COPY>CPYLIB>XREF.DATA
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>PMC.CPYLIB>CSR.CODE
*COPY>PMC.CPYLIB>CSR.MEMO.TRACK ;* T25967
*
EQU TRUE  TO 1  ; *25950
EQU FALSE TO 0  ; *25950
*
IMGSIZE=275
DIM IMGREC(IMGSIZE)
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*-- GET PROG.FLAG FOM MENU
PROCREAD X ELSE ERRMSG = "MUST RUN FROM MENU"; GOTO 93000
PROG.FLAG = X<1>
IF PROG.FLAG # "I" AND PROG.FLAG # "R" THEN
   ERRMSG = "FLAG ":PROG.FLAG:" FROM MENU IS INVALID"; GOTO 93000
END
*-- OPEN FILES
MAT FILE.VARS = ''
OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE ERRMSG = 'CUSTOMER.XREF FILE IS MISSING'; GOTO 93000
OPEN '','SALESMAN' TO SALESMAN ELSE ERRMSG = 'SALESMAN FILE IS MISSING'; GOTO 93000
OPEN '','JCS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'JCS.SCREENS FILE IS MISSING'; GOTO 93000
OPEN '','OPS.SCREENS' TO SECOND.SCREENS ELSE ERRMSG = 'OPS.SCREENS FILE IS MISSING'; GOTO 93000
*T25967 v
OPEN 'CSR.MEMO.TRACK' TO CSR.MEMO.TRACK ELSE ERRMSG = 'CSR.MEMO.TRACK FILE IS MISSING'; GOTO 93000
*T25967 ^
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG = 'CATEGORY.OSP FILE IS MISSING'; GOTO 93000
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG = 'SALES.CODE FILE IS MISSING'; GOTO 93000       ;* T26973
OPEN '', 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
OPEN '', 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.MATL' TO JOB.MATL ELSE ERRMSG = 'JOB.MATL FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.OSP' TO JOB.OSP ELSE ERRMSG = 'JOB.OSP FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.SHIP' TO JOB.SHIP ELSE ERRMSG = 'JOB.SHIP FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.MISC' TO JOB.MISC ELSE ERRMSG = 'JOB.MISC FILE IS MISSING'; GOTO 93000
OPEN '', 'COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST.CNTR.WIP FILE IS MISSING'; GOTO 93000
OPEN '', 'OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FILE IS MISSING'; GOTO 93000
OPEN '', 'EMPLOYEE' TO EMPLOYEE ELSE ERRMSG = 'EMPLOYEE FILE IS MISSING'; GOTO 93000
OPEN '', 'VEND' TO VEND ELSE ERRMSG = 'VEND FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.CATEGORY' TO JOB.CATEGORY ELSE ERRMSG = 'JOB.CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG = 'JOB.FNGD.STATS FILE IS MISSING'; GOTO 93000
OPEN '', 'GANG.JOB' TO GANG.JOB ELSE ERRMSG = 'GANG.JOB FILE IS MISSING'; GOTO 93000
OPEN '', 'GANG.ALLOC' TO GANG.ALLOC ELSE ERRMSG = 'GANG.ALLOC FILE IS MISSING'; GOTO 93000
OPEN '', 'XREF.DATA' TO XREF.DATA ELSE ERRMSG = 'XREF.DATA FILE IS MISSING'; GOTO 93000
OPEN '', 'CSR.CODE' TO CSR.CODE ELSE ERRMSG = 'CSR.CODE FILE IS MISSING'; GOTO 93000
OPEN '', 'SYS_TKT_DEF' TO SYS_TKT_DEF ELSE ERRMSG = 'SYS_TKT_DEF FILE IS MISSING'; GOTO 93000
OPEN '', 'SYS_SCN_DEF' TO SYS_SCN_DEF ELSE ERRMSG = 'SYS_SCN_DEF FILE IS MISSING'; GOTO 93000
OPEN '', 'JKT_NOTIFY' TO JKT_NOTIFY ELSE ERRMSG = 'JKT_NOTIFY FILE IS MISSING'; GOTO 93000
OPEN '', 'SYS_FILES' TO SYS_FILES ELSE ERRMSG = 'SYS_FILES FILE IS MISSING'; GOTO 93000
OPEN '', 'PFX_FILES' TO PFX_FILES ELSE ERRMSG = 'PFX_FILES FILE IS MISSING'; GOTO 93000
OPEN '', 'SYS_FIELDS' TO SYS_FIELDS ELSE ERRMSG = 'SYS_FIELDS FILE IS MISSING'; GOTO 93000
OPEN '', 'SYS_FLD_HMSG' TO SYS_FLD_HMSG ELSE ERRMSG = 'SYS_FLD_HMSG FILE IS MISSING'; GOTO 93000
OPEN '', 'CPYLIB' TO CPYLIB ELSE ERRMSG = 'CPYLIB FILE IS MISSING'; GOTO 93000
OPEN '', 'JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.STAT.CODE FILE IS MISSING'; GOTO 93000
*
*-- GET COMPANY
MAT COMP.REC = ''
CONO = ''
CALL GET.CONO(CONO,MAT COMP.REC)
IF CONO = 'END' THEN GOTO 99999
IF CO.POS = "Y" THEN
   OPEN '', 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG = 'OUTSIDE.PO FILE IS MISSING'; GOTO 93000
END
*-- INITIALIZATION
MAT EDIT.COM = ''
TYP = 0; CALL EDIT.SUB; FILL = "#"
INQUIRE = 1
MAT EDIT.COM.DRIVER = ''
MAT GEN.XREF.REC = ''
MAT FISCAL.REC = ""
DIM TMP.REC(1) ; MAT TMP.REC = ""   ; * 25950
DASHES = STR('-',80)
ERRMSG = ''
UNKNOWN = '????????????????????'
GXR.CO = CONO
*     GXR.HEADING<1,2> = 'DESCRIPTION'
*     GXR.ATT<1,1> = 0
*     GXR.ATT<1,2> = 1
*     GXR.LEN<1,1> = 10
*     GXR.LEN<1,2> = 60
BEGIN.PAGE = 17; PAGE.SIZE = 3; LINE.SPACE = 1; SUB.FLAG = 0
*-- MAIN PROCESSING
ECD.SCRN.CNT = 23
ECD.SCRN.NAME<1> = 'JOB.MAINT'
ECD.SCRN.NAME<2> = 'JOB.DEPT.COST.SUB'
ECD.SCRN.NAME<3> = 'JOB.MATL.SUB'
ECD.SCRN.NAME<4> = 'JOB.LB.SUB'
ECD.SCRN.NAME<5> = 'JOB.MT.SUB'
ECD.SCRN.NAME<6> = 'JOB.OS.SUB'
ECD.SCRN.NAME<7> = 'JOB.SP.SUB'
ECD.SCRN.NAME<8> = 'JOB.MS.SUB'
ECD.SCRN.NAME<9> = 'JOB.LB.DET.SUB'
ECD.SCRN.NAME<10> = 'JOB.MT.DET.SUB'
ECD.SCRN.NAME<11> = 'JOB.OS.DET.SUB'
ECD.SCRN.NAME<12> = 'JOB.SP.DET.SUB'
ECD.SCRN.NAME<13> = 'JOB.MS.DET.SUB'
ECD.SCRN.NAME<14> = "JOB.TRACK.MAINT"
ECD.SCRN.NAME<15> = "JOB.DEPT.SALE.SUB"
ECD.SCRN.NAME<16> = 'JOB.REQD.SUB'
ECD.SCRN.NAME<17> = 'JOB.OSP.INQ'
ECD.SCRN.NAME<18> = 'JOB.FNGD.SUB'
ECD.SCRN.NAME<19> = 'JOB.ADDL.CHG'
ECD.SCRN.FLAG<19> = 2
ECD.SCRN.NAME<20> = 'GANG.JOB.SUB'
ECD.SCRN.NAME<21> = 'GANG.JOB.ALLOC'
ECD.SCRN.NAME<22> = 'JOB.CSR.MEMO.INQ' ; * T25967
ECD.SCRN.NAME<23> = 'SERIAL.RESERVE.INQ' ; * T26606
ECD.ACTION=1;CALL SCRN.EDIT
ECD.SCRN.NO = 1
100 *
LINES = 0
MAT JOB.REC = ''
MAT GJOB.REC = ""
MAT SCV.REC = ""
MAST.SUB.FLAG='0' ;*T25682
SAVE.INV.JS.REC = ""
ECD.ACTION=6;CALL SCRN.EDIT
ECD.NUM = 7
ECD.VALDAT.CODE = '2'
ECD.VALDAT.FILE = JOB
ECD.PREFIX.ID = CONO
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
   CASE ECD.RET.VALUE = 'END'
      GOTO 99999
   CASE ECD.VALDAT.ITEM # ''
      FOR I = 1 TO JOB.REC.SIZE
         JOB.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
*T23278 v
      IF PROG.FLAG = "R" THEN
         DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 100
         END
      END
*T23278 ^
      JOB.NUM = ECD.RET.VALUE
      ECD.NUM = 8
      GOSUB 20000
      GOSUB 30000
   CASE ECD.RET.VALUE = ''
      MAT JOB.REC = ""; MAT JFS.REC = ""; MAT GJOB.REC = ""
      JOB.NUM = ''
      GOSUB 1000
      IF ECD.RET.VALUE = "END" THEN GOTO 100
*T26820 v
*        GXR.NAME = "JOB"
      CALL GET.CRTMODE(CRTMODE)
      IF CRTMODE = 'termulator' THEN
         GXR.NAME = "JOB.GUI"
      END ELSE
         GXR.NAME = "JOB"
      END
*T26820 ^
      GXR.XREF = CUSTOMER
      GXR.FILE = JOB
      GXR.SRCH.ID = JOB.CUST
      CALL JOB.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
      ECD.ACTION = 2; CALL SCRN.EDIT
      IF GXR.ID # "" THEN
         MATREAD JOB.REC FROM JOB,CONO:GXR.ID ELSE
            RELEASE JOB, CONO:GXR.ID
            ERRMSG = "JOB ":GXR.ID:" IS MISSING"; GOSUB 91000; GOTO 100
         END
      END ELSE
         ERRMSG = "NO JOB SELECTION FOR CUSTOMER - ":JOB.CUST
         GOSUB 91000; GOTO 100
      END
*  JOB.NUM = GXR.ID; GOSUB 700;  GOSUB 30000
* 23961 v
      JOB.NUM = GXR.ID
      GOSUB 700
      ECD.NUM = 8
      GOSUB 20000
      GOSUB 30000
* ^
      IF ERRMSG # "" THEN GOTO 100
   CASE 1
      ERRMSG = '* * INVALID SEQUENCE # * *'
      GOSUB 91000
      GOTO 100
END CASE
LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED.FLAG ELSE INVOICED.FLAG = 0
MATREAD GJOB.REC FROM GANG.JOB, CONO:JOB.NUM ELSE MAT GJOB.REC=""
MORE = 1
LOOP
   IF CO.OPS = "Y" THEN
*T25682   IF PROG.FLAG = "I" THEN ECD.NUM = 43 ELSE ECD.NUM = 56
      IF PROG.FLAG = "I" OR MAST.SUB.FLAG THEN ECD.NUM = 43 ELSE ECD.NUM = 56
   END ELSE
*T25682   IF PROG.FLAG = "I" THEN ECD.NUM = 59 ELSE ECD.NUM = 45
      IF PROG.FLAG = "I" OR MAST.SUB.FLAG THEN ECD.NUM = 59 ELSE ECD.NUM = 45
   END
   SCV.REC(ECD.NUM)<1> = ''
   ECD.ACTION=4;CALL SCRN.EDIT
   REQUEST = ECD.RET.VALUE
   BEGIN CASE
      CASE REQUEST = 'END' OR REQUEST = 'E'
         MORE = 0
      CASE REQUEST = 'DS'
         GOSUB 1400
         ANCORE = 1
         LOOP
            ECD.NUM = 44
            SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
            ACTION = ECD.RET.VALUE
            BEGIN CASE
               CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
                  ANCORE = 0
               CASE ACTION = 'S'
                  LN = LN + PAGE.SIZE
                  IF LN > LINES THEN LN = 1
                  GOSUB 1400
            * T25978 v
               CASE ACTION = 'SR'
                  LN -= PAGE.SIZE
                  IF LN < 1 THEN LN = 1
                  GOSUB 1400
               CASE ACTION = 'ST'
                  LN = 1
                  GOSUB 1400
               CASE ACTION = 'SB'
                  LN = LINES
                  GOSUB 1400
            * T25978 ^
            END CASE
         WHILE ANCORE DO REPEAT
      CASE REQUEST = "TR"
         ECD.SCRN.NO = 14
         ECD.ACTION = 2 ; CALL SCRN.EDIT
         HOLD.PROG.FLAG = PROG.FLAG ;*T25682
         IF MAST.SUB.FLAG THEN PROG.FLAG = 'I' ;*T25682
*T26909 v
*           CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG)
         CALL JOB.TRACK.MAINT(PROG.FLAG,INVOICED.FLAG,CONO,CO.POS)
*T26909 ^
         PROG.FLAG = HOLD.PROG.FLAG ;*T25682
         ECD.SCRN.NO = 1; ECD.NUM=8; GOSUB 20000; GOSUB 35000
         IF PROG.FLAG = "R" THEN PROG.FLAG = "U"
      CASE REQUEST = 'CS' AND DEPT.AMT.NO = ''
         ERRMSG = 'NOTHING HAS BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'CS'
         ECD.SCRN.NO = 2; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.DEPT.COST.SUB(CONO,JOB.NUM)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'OP' AND CO.POS = "Y"
         ECD.SCRN.NO = 17
         SCV.REC(1)<17> = SCV.REC(7)<1>
         ECD.ACTION = 3; CALL SCRN.EDIT
         CALL JOB.OSP.INQ(CONO,JOB.NUM,PROG.FLAG,SUB.FLAG)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'SS' AND DEPT.AMT.NO = ''
         ERRMSG = 'NOTHING HAS BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'SS'
         ECD.SCRN.NO = 15; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.DEPT.SALE.SUB(CONO,JOB.NUM)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'RS' AND JOB.RESV.MATL = ''
         ERRMSG = 'NO MATERIAL HAS BEEN RESERVED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'RS'
         ECD.SCRN.NO = 3; ECD.ACTION=3;CALL SCRN.EDIT
         IF PROG.FLAG = "I" THEN
            DISPLAY = 2
         END ELSE
            DISPLAY = 1
         END
         CALL JOB.MATL.SUB(CONO,JOB.NUM,DISPLAY)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'FG' 
         ESN = ECD.SCRN.NO
         ECD.SCRN.NO = 18
         SCV.REC(1)<ECD.SCRN.NO>=SCV.REC(7)<ESN>
         SCV.REC(2)<ECD.SCRN.NO>=SCV.REC(8)<ESN>
         SCV.REC(3)<ECD.SCRN.NO>=SCV.REC(9)<ESN>
         SCV.REC(4)<ECD.SCRN.NO>=SCV.REC(10)<ESN>
         SEL = "I"
         ORDNO = ""
         CALL JOB.FNGD.INQ(CONO,ORDNO,JOB.NUM,SEL)
         ECD.SCRN.NO = ESN; GOSUB 35000
      CASE REQUEST = "JT"
         IF CO.JIS # "Y" THEN
            ERRMSG = "Job Informations System functionality not purchased"
            GOSUB 91000; GOTO 509
         END
         MATREAD SSJN.REC FROM JKT_NOTIFY, CONO:"JOB!":JOB.NUM THEN
            LCNT = DCOUNT(SSJN_TICKET,VM)
*      ID_VARS = SSJN_TICKET<1,LCNT>
**** CSF 28061
            ID_VARS = ""
            CHK_ID_VARS = SSJN_TICKET
            DONE = 0
            FOR PTR = LCNT TO 1 STEP -1 UNTIL DONE
               IF FIELD(CHK_ID_VARS<1,PTR>,"-",1) = JOB.NUM THEN
                  ID_VARS = CHK_ID_VARS<1,PTR>
                  DONE = 1
               END
            NEXT PTR
            IF NOT(DONE) THEN
               ERRMSG = "Ticket Number ":JOB.NUM:" is Not Released or is not valid for this Job"
               GOSUB 91000; GOTO 509
            END
**** ^
         END ELSE
            ERRMSG = "Cannot locate any setup tickets for this JOB"
            GOSUB 91000; GOTO 509
         END
         TKTDEF = "ACCT"
         CALL SYSVARS.SUB(TKTDEF)
         TKTDEF = FIELD(TKTDEF,"-",1)
         IF TKTDEF = "CBA" THEN TKTDEF = ""
         IF TKTDEF # "" THEN
            MATREAD STKD.REC FROM SYS_TKT_DEF, TKTDEF ELSE
               TKTDEF = ""
            END
         END
         LOOP WHILE TKTDEF = "" DO
*     X = 0
*     Y = 23
*     TYP = 1
*     MAXL = 30
*     PMSG = "Enter DocuSet Name :"
*     CALL EDIT.SUB
*P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*     TKTDEF = VALUE
            ECD.NUM = 60
            SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
            ECD.ACTION = 4
            CALL SCRN.EDIT
            TKTDEF = ECD.RET.VALUE
            IF TKTDEF # "END" THEN
               MATREAD STKD.REC FROM SYS_TKT_DEF, TKTDEF ELSE
                  ERRMSG = "Cannot locate Job Ticket definition - ":TKTDEF
                  GOSUB 91000
                  TKTDEF = ""
               END
            END
         REPEAT
         IF TKTDEF = "END" THEN GOTO 509
         CNT = DCOUNT(STKD_SCN,VM)
         SCN_NAMES = STKD_SCN<1,1>
         FOR I = 2 TO CNT
            SCN_NAMES = SCN_NAMES:",":STKD_SCN<1,I>
         NEXT I
         CNT = DCOUNT(STKD_PRT,VM)
         PRT_NAMES = STKD_PRT<1,1>
         FOR I = 2 TO CNT
            PRT_NAMES = PRT_NAMES:",":STKD_PRT<1,I>
         NEXT I
         READU IMGDEF FROM SYS_TKT_DEF, TKTDEF:"*FLD" ELSE IMGDEF = ""
         SCNT = DCOUNT(SCN_NAMES,",")
         FOR I = 1 TO SCNT
            SCN_NAME = FIELD(SCN_NAMES,",",I)
            MATREAD SSD.REC FROM SYS_SCN_DEF, SCN_NAME THEN
               CNT = DCOUNT(SSD_FIELDS,VM)
               FOR J = 1 TO CNT
                  FLDNAME = SSD_FIELDS<1,J>
                  LOCATE FLDNAME IN IMGDEF,1 SETTING P ELSE
                     IMGDEF<P> = FLDNAME
                  END
               NEXT J
            END
         NEXT I
         WRITE IMGDEF ON SYS_TKT_DEF, TKTDEF:"*FLD"
         SCN_LOC = 1
         EDITMODE = ""
         CHGMODE = ""
         UPDMODE = 0
         PRT_CRT = 1
         ERRFLG = 0
         FVAR_SIZE = 0
         PASS_VARS = "JOB.MAINT"
         PASS_VARS<2> = SCN_LOC
         PASS_VARS<3> = SCN_NAMES
         PASS_VARS<4> = PRT_NAMES
         PASS_VARS<5> = EDITMODE
         PASS_VARS<6> = CHGMODE
         PASS_VARS<7> = UPDMODE
         PASS_VARS<8> = PRT_CRT
         PASS_VARS<9> = ERRFLG
         PASS_VARS<10>= TKTDEF
         PASS_VARS<11> = ""
         OLD.M.SCREENS = M.SCREENS
         CALL SCREEN_MAINT(PASS_VARS,ID_VARS,M_REC,OLD_M_REC,IMGDEF,IMGSIZE,MAT IMGREC,USER.MAIL,FVAR_SIZE,FVAR_REC,OPN_FILES)
         M.SCREENS = OLD.M.SCREENS
         ECD.ACTION = 2; CALL SCRN.EDIT
         GOSUB 35000
509*
      CASE REQUEST = 'AC'
         ESN = ECD.SCRN.NO
         ECD.SCRN.NO = 19
         SEL = "I"
         CALL JOB.ADDL.CHG(CONO,JOB.NUM,SEL)
         ECD.SCRN.NO = ESN
         GOSUB 35000
      CASE REQUEST = 'G' AND GJOB.JOB<1,1>=""
         ERRMSG = 'OPTION VALID FOR GANG JOBS ONLY'
         GOSUB 91000
      CASE REQUEST = 'G'
         ECD.SCRN.NO = 20
         ECD.ACTION = 2; CALL SCRN.EDIT
         CALL GANG.JOB.SUB("I",CONO,JOB.NUM,JOB.CUST,MAT GJOB.REC,STATUS)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'RD' AND JOB.RESV.MATL = ''
         ERRMSG = 'NO MATERIAL IS REQUIRED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'RD'
         ECD.SCRN.NO = 16; ECD.ACTION=3;CALL SCRN.EDIT
         DISPLAY = 1
         CALL JOB.REQD.SUB(CONO,JOB.NUM,DISPLAY,SAVE.INV.JS.REC)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'LB' AND LB.DEPT.NO = ''
         ERRMSG = 'NO LABOR HAS BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'LB'
         ECD.SCRN.NO = 4; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.LB.SUB(CONO,JOB.NUM,SUB.CNT)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'MT' AND MT.DEPT.NO = ''
         ERRMSG = 'NO MATERIAL HAS BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'MT'
         ECD.SCRN.NO = 5; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.MT.SUB(CONO,JOB.NUM,SUB.CNT)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'OS' AND OS.DEPT.NO = ''
         ERRMSG = 'NO OUTSIDE PURCHASES HAVE BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'OS'
         ECD.SCRN.NO = 6; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.OS.SUB(CONO,JOB.NUM,SUB.CNT)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = 'SP' AND SP.DEPT.NO = ''
         ERRMSG = 'NO SHIPPING HAS BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'SP'
         ECD.SCRN.NO = 7; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.SP.SUB(CONO,JOB.NUM,SUB.CNT)
         ECD.SCRN.NO = 1; GOSUB 35000
*T25967 v
* T26731 v
         * CASE REQUEST = "MM" AND CSR.JOB.NUM = ''
      CASE REQUEST = "MM" AND JOB.CSR.MEMO = ''
* T26731 ^
         ERRMSG = 'NO CSR MEMO TRACK RECORD FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = "MM"
         ECD.SCRN.NO = 22; ECD.ACTION=3; CALL SCRN.EDIT
         CALL JOB.CSR.MEMO.INQ(CONO,JOB.NUM,MAT JOB.REC)
         ECD.SCRN.NO = 1; GOSUB 35000
*T25967 ^
      CASE REQUEST = 'MS' AND MS.DEPT.NO = ''
         ERRMSG = 'NO MISC. ENTRIES HAVE BEEN POSTED FOR THIS JOB YET..'
         GOSUB 91000
      CASE REQUEST = 'MS'
         ECD.SCRN.NO = 8; ECD.ACTION=3;CALL SCRN.EDIT
         CALL JOB.MS.SUB(CONO,JOB.NUM,SUB.CNT)
         ECD.SCRN.NO = 1; GOSUB 35000
      CASE REQUEST = "F"
*T24007 v
*              MATREADU JOB.REC FROM JOB, CONO : JOB.NUM ELSE
*                  RELEASE
*                  ERRMSG = "CANNOT LOCATE JOB - " : JOB.NUM
*                  GOSUB 91000; GOTO 501
*              END
*T24007 ^
         IF PROG.FLAG = "U" THEN GOSUB 700
*T25682 v
         IF NOT(MAST.SUB.FLAG) THEN
            MATWRITE JOB.REC ON JOB,CONO:JOB.NUM
         END ELSE RELEASE JOB, CONO:JOB.NUM
*T25682 ^
         MORE = 0
501 *
      CASE REQUEST = "CA" AND JOB.STATUS<1,1> # 9
*T25682 v
         IF MAST.SUB.FLAG THEN
            X = 0; Y = 23; TYP = 1; MAXL = 1; O.R = "O"
            PMSG = 'Cannot cancel a Master  - Sub Job combination'
            CALL EDIT.SUB
            P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            GOTO 502
         END
*T25682 ^
*T25950 v
         REVISE.RELEASE.CANCEL = FALSE
         AUTHORIZATION.REQUIRED = INDEX('1,2,3,5',JOB.STATUS<1,1>,1)
         IF AUTHORIZATION.REQUIRED THEN
            ECD.NUM = 4 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
            MATREAD TMP.REC FROM JOB.STAT.CODE, CONO:ECD.RET.VALUE THEN
               ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
               IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE
            END ELSE
               ERRMSG = "INVALID AUTHORIZATION CODE"
               GOSUB 91000
               GOTO 502
            END
         END ELSE
            ECD.NUM = 5 ; ECD.ACTION = 4 ; CALL SCRN.EDIT
            IF ECD.RET.VALUE = "Y" THEN REVISE.RELEASE.CANCEL = TRUE
         END
         IF NOT(REVISE.RELEASE.CANCEL) THEN GOTO 502
*T25950 ^
         MATREADU JOB.REC FROM JOB, CONO : JOB.NUM ELSE
            RELEASE
            ERRMSG = "CANNOT LOCATE JOB - " : JOB.NUM
            GOSUB 91000; GOTO 502
         END
         MATREADU CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
            RELEASE
            ERRMSG = "CANNOT LOCATE JOB - ": JOB.CUST
            GOSUB 91000; GOTO 502
         END
         IF PROG.FLAG = "U" THEN GOSUB 700
         IF JOB.WIP<1,1> > 0 THEN
            IF FR.CURR.PER = "" THEN
               MATREAD FISCAL.REC FROM CONTROL, CONO : "JCFISCAL" ELSE
                  RELEASE
                  ERRMSG = "CANNOT LOCATE CONTROL, JCFISCAL"
                  GOSUB 91000; GOTO 502
               END
            END
            WIP.TYPE = "ALL"; WIP.DATE = "ALL"; WIP.PER = "ALL"
            WIP.PERCENT = 10000
            CALL REVERSE.JOB.WIP(CONO,JOB.NUM,WIP.TYPE,WIP.PERCENT,WIP.DATE,WIP.PER,FR.CURR.PER)
         END
         RESV.ACTION = 'D'; RESV.LOC = 0
         CALL JOB.RESV.SUB(CONO,RESV.ACTION,RESV.LOC,JOB.NUM)
         MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
         FOR M = MCNT TO 1 STEP -1
            IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
               JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOB.NUM
               MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO:JSTAT.ID ELSE
                  JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
                  JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
                  JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
                  JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
                  JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
                  JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
                  JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
                  JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
                  JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
               END
            END
         NEXT M
         JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"9")
         JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
         LOCATE JOB.NUM IN CUST.JOB<1>,1 SETTING JFND ELSE
            CUST.JOB<1,JFND> = JOB.NUM
         END
         CUST.JOB.BAL<1,JFND> = 0
         MATWRITE CUST.REC ON CUSTOMER, CONO:JOB.CUST
         MATWRITE JOB.REC ON JOB,CONO:JOB.NUM
         MORE = 0
502 *
   END CASE
WHILE MORE DO REPEAT
GOTO 100
700 *
IF SCV.REC(6)<14> # "" THEN JOB.TRACK.DATE<1,1> = SCV.REC(6)<14>
IF SCV.REC(7)<14> # "" THEN JOB.TRACK.DATE<1,2> = SCV.REC(7)<14>
IF SCV.REC(17)<14> # "" THEN JOB.TRACK.DATE<1,3> = SCV.REC(17)<14>
IF SCV.REC(8)<14> # "" THEN JOB.TRACK.DATE<1,4> = SCV.REC(8)<14>
IF SCV.REC(18)<14> # "" THEN JOB.TRACK.DATE<1,5> = SCV.REC(18)<14>
IF SCV.REC(9)<14> # "" THEN JOB.TRACK.DATE<1,6> = SCV.REC(9)<14>
IF SCV.REC(10)<14> # "" THEN JOB.TRACK.DATE<1,7> = SCV.REC(10)<14>
IF SCV.REC(11)<14> # "" THEN JOB.TRACK.DATE<1,8> = SCV.REC(11)<14>
IF SCV.REC(12)<14> # "" THEN JOB.TRACK.DATE<1,9> = SCV.REC(12)<14>
IF SCV.REC(13)<14> # "" THEN JOB.TRACK.DATE<1,10> = SCV.REC(13)<14>
RETURN
1000 *
ECD.NUM = 9
ECD.VALDAT.CODE = 2
ECD.VALDAT.FILE = CUSTOMER
ECD.PREFIX.ID = CONO
ECD.ACTION=4;CALL SCRN.EDIT
IF ECD.RET.VALUE = '' THEN
   ECD.NUM = 10
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 1000
   GXR.CO = CONO
   GXR.NAME = "CUSTOMER"
   GXR.XREF = CUSTOMER.XREF
   GXR.FILE = CUSTOMER
   GXR.SRCH.ID = ECD.RET.VALUE
   CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
   ECD.ACTION=2;CALL SCRN.EDIT
   IF GXR.ID = '' THEN
      SCV.REC(10)<1> = ''
      GOSUB 35000
      GOTO 1000
   END ELSE
      MATREAD CUST.REC FROM CUSTOMER, CONO:GXR.ID ELSE
         ERRMSG = 'CUSTOMER ':GXR.ID:' IS MISSING'
         GOSUB 91000
         SCV.REC(10)<1> = ''
         GOSUB 35000
         GOTO 1000
      END
      JOB.CUST = GXR.ID
      SCV.REC(9)<1> = JOB.CUST
      SCV.REC(10)<1> = CUST.NAME
      GOSUB 35000
   END
END ELSE
   IF ECD.RET.VALUE # 'END' THEN
      JOB.CUST = ECD.RET.VALUE
      FOR I = 1 TO CUST.REC.SIZE
         CUST.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
      ECD.NUM = 10
      SCV.REC(ECD.NUM)<1> = CUST.NAME
      ECD.ACTION=5;CALL SCRN.EDIT
   END
END
RETURN
1400*
START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
LAST.LINE = START.LINE + PAGE.SIZE - 1
IF LAST.LINE > LINES THEN LAST.LINE = LINES
IF START.LINE = OLD.START.LINE THEN GOTO 1499
OLD.START.LINE = START.LINE
CNT = 1
FOR N = START.LINE TO LAST.LINE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
   P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:JOB.DESC<1,N> "L#70"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   CNT = CNT + 1
NEXT N
FOR M = CNT TO PAGE.SIZE
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
NEXT M
1499 RETURN
10000 *
GXR.XREF = CUSTOMER
GXR.FILE = JOB
*     GXR.TOP.LINE<1,1> = 'JOB XREF SEARCH'
*     GXR.TOP.LINE<1,2> = 'FOR CUSTOMER : ':CUST.NAME
GXR.ID = ''
GXR.NAME = "JOB"
GXR.SRCH.ID = JOB.CUST
*     CALL JOB.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
CALL JOB.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
ECD.ACTION=2;CALL SCRN.EDIT
IF GXR.ID # '' THEN
   MATREAD JOB.REC FROM JOB, CONO:GXR.ID ELSE
      ERRMSG = 'JOB ':GXR.ID:' IS MISSING'
      GOSUB 91000
   END
   JOB.NUM = GXR.ID
END
RETURN
20000 *
BEGIN CASE
   CASE JOB.STATUS<1,1>=""
      SCV.REC(ECD.NUM)<1>="BOOKED"
   CASE JOB.STATUS<1,1>="9"
      SCV.REC(ECD.NUM)<1>="CANCELLED"
   CASE JOB.STATUS<1,1>="7"
      SCV.REC(ECD.NUM)<1>="READY TO PURGE"
   CASE JOB.STATUS<1,1>="8"
      SCV.REC(ECD.NUM)<1>="WAS PURGED"
   CASE JOB.TRACK.DATE<1,10> # ""
      BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            SCV.REC(ECD.NUM)<1> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "3"
            SCV.REC(ECD.NUM)<1> = "INVOICED"
         CASE JOB.STATUS<1,1> = "5" 
            SCV.REC(ECD.NUM)<1>="REOPENED"
         CASE 1
            SCV.REC(ECD.NUM)<1> = "COMPLETED"
      END CASE
   CASE JOB.TRACK.DATE<1,9> # ""
      BEGIN CASE
         CASE JOB.STATUS<1,1> = "1"
            SCV.REC(ECD.NUM)<1> = "IN PROCESS"
         CASE JOB.STATUS<1,1> = "5"
            SCV.REC(ECD.NUM)<1>="REOPENED"
         CASE 1
            SCV.REC(ECD.NUM)<1> = "INVOICED"
      END CASE
   CASE JOB.TRACK.DATE<1,8> # ""
      SCV.REC(ECD.NUM)<1>="COSTED"
   CASE JOB.TRACK.DATE<1,7> # ""
      SCV.REC(ECD.NUM)<1>="RDY-TO-BILL"
   CASE JOB.TRACK.DATE<1,6> # ""
      SCV.REC(ECD.NUM)<1>="DELIVERED"
   CASE JOB.TRACK.DATE<1,5> # ""
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
   CASE JOB.TRACK.DATE<1,3> # ""
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
   CASE JOB.STATUS<1,1>="1"
      SCV.REC(ECD.NUM)<1>="IN PROCESS"
   CASE JOB.STATUS<1,1>="3"
      SCV.REC(ECD.NUM)<1>="INVOICED"
   CASE 1
      SCV.REC(ECD.NUM)<1>="UNKNOWN"
END CASE
RETURN
30000 *
MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
   MAT CUST.REC = ''
   CUST.NAME = UNKNOWN
END
MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE
   MAT SALESMAN.REC = ''
   SALS.NAME = UNKNOWN
END
MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIP.VIA ELSE
   SHPV.DESC = UNKNOWN
END
MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NUM ELSE
   MAT JFS.REC = ""
END
*T25967 v
* T26731  MATREAD CSR.MEMO.TRACK.REC FROM CSR.MEMO.TRACK,CONO:JOB.NUM ELSE
* T26731     MAT CSR.MEMO.TRACK.REC = ''
* T26731  END
*T25967 ^
MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE DIV.DESC = UNKNOWN
SUB.CNT = 1
IF JOB.SUBS # "" THEN
* T22417 v
* LOCATE "1" IN JOB.STATUS<1>,1 SETTING ADD.SUB ELSE
*P_X = 3 ; P_Y = 23 ; P_VALUE = "PROCESSING SUB JOBS" ; P_OPT = "CL"
*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*   CALL MASTER.SUMMARY.SUB(CONO,JOB.NUM,SAVE.INV.JS.REC)
*   ADD.SUB = 0; SUB.CNT = COUNT(JOB.SUBS,VM) + 2; SUB.FLAG = 1
* END
* IF ADD.SUB THEN
   ECD.NUM = 47; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "Y" THEN
      P_X  = 3 ; P_Y = 23 ; P_VALUE = "PROCESSING SUB JOBS" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CALL MASTER.SUMMARY.SUB(CONO,JOB.NUM,SAVE.INV.JS.REC)
      SUB.CNT = COUNT(JOB.SUBS,VM) + 2; SUB.FLAG = 1
      MAST.SUB.FLAG = 1 ;*T25682
   END ELSE SUB.FLAG = 0
* END
* T22417 ^
END
P_X  = 3 ; P_Y = 23 ; P_VALUE = "PROCESSING JOB" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
CALL JOB.SUMMARY.SUB(CONO)
P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
SCV.REC(7)<1> = JOB.NUM
SCV.REC(9)<1> = JOB.CUST
SCV.REC(10)<1> = CUST.NAME
SCV.REC(11)<1> = JOB.SLSMN
SCV.REC(12)<1> = SALS.NAME
MATREAD CSR.REC FROM CSR.CODE,CONO:JOB.CSR ELSE
   MAT CSR.REC = ''
END
SCV.REC(50)<1>=JOB.CSR
SCV.REC(51)<1>=CSR.DESC
SCV.REC(14)<1> = JOB.TRACK.DATE<1,4>
SCV.REC(15)<1> = JOB.TYPE
SCV.REC(17)<1> = JOB.MASTER
SCV.REC(18)<1> = JOB.QTY<1,1>
SCV.REC(19)<1> = JOB.DIV
SCV.REC(20)<1> = DIV.DESC
SCV.REC(21)<1> = JOB.MARKUP
SCV.REC(22)<1> = JOB.CUST.PO
SCV.REC(23)<1> = JOB.SHIP.VIA
SCV.REC(24)<1> = SHPV.DESC
SCV.REC(25)<1> = JOB.EST
SCV.REC(26)<1> = JOB.EST.COST
SCV.REC(27)<1,1> = JOB.COMMENTS<1,1>
SCV.REC(27)<1,2> = JOB.COMMENTS<1,2>
SCV.REC(35)<1> = JOB.CONF.AMT
SCV.REC(36)<1> = JOB.COLORS
IF JFS.PROD # "" THEN
   JOB.QTY<1,2> = SUM(JFS.F.QTY)/1000
END
SCV.REC(37)<1> = JOB.QTY<1,2>
IF JFS.PROD # "" THEN
   JOB.QTY<1,3> = SUM(JFS.S.QTY)/1000
END
SCV.REC(38)<1> = JOB.QTY<1,3>
SCV.REC(39)<1> = JOB.SALES.CODE
* T26973 v
MATREAD SLC.REC FROM SALES.CODE, CONO:JOB.SALES.CODE ELSE 
   MAT SLC.REC = ''
END
SCV.REC(40)<1> = SLC.DESC
* T26973 ^
SCV.REC(41)<1> = JOB.CATG
SCV.REC(1)<1> = JOB.PRIOR.JOB
SCV.REC(2)<1> = JOB.PRICE.PER.THOU
*T27885  SCV.REC(3)<1> = JOB.CREDIT
IF JOB.CATG # "" THEN
   REC = ""
   READ REC FROM JOB.CATEGORY, CONO:JOB.CATG ELSE REC = UNKNOWN
   SCV.REC(42)<1> = REC
END
BEGIN CASE
   CASE JOB.TYPE = "R"
      SCV.REC(34)<1> = "REGULAR"
   CASE JOB.TYPE = "S"
      SCV.REC(34)<1> = "SPOILAGE"
   CASE JOB.TYPE = "C"
      SCV.REC(34)<1> = "CUSTOMER CHANGE"
   CASE JOB.TYPE = "N"
      SCV.REC(34)<1> = "NON-CHARGEABLE"
   CASE 1
      SCV.REC(34)<1> = UNKNOWN
END CASE
SCV.REC(13)<2> = LB.TOT.COST
SCV.REC(14)<2> = MT.TOT.COST
SCV.REC(15)<2> = OS.TOT.COST
SCV.REC(16)<2> = SP.TOT.COST
SCV.REC(17)<2> = MS.TOT.COST
SCV.REC(18)<2> = JOB.TOT.COST
SCV.REC(1)<3> = JOB.NUM
SCV.REC(2)<3> = SCV.REC(8)<1>
SCV.REC(3)<3> = JOB.CUST
SCV.REC(4)<3> = CUST.NAME
SCV.REC(11)<4> = LB.TOT.CHG
SCV.REC(12)<4> = LB.TOT.NCHG
SCV.REC(13)<4> = LB.TOT.CORD
SCV.REC(14)<4> = LB.TOT.SPOIL
SCV.REC(15)<4> = LB.TOT.CNCR
SCV.REC(16)<4> = LB.TOT.COST
SCV.REC(17)<4> = LB.TOT.SALE
SCV.REC(11)<5> = MT.TOT.CHG
SCV.REC(12)<5> = MT.TOT.NCHG
SCV.REC(13)<5> = MT.TOT.CORD
SCV.REC(14)<5> = MT.TOT.SPOIL
SCV.REC(15)<5> = MT.TOT.COST
SCV.REC(16)<5> = MT.TOT.SALE
SCV.REC(11)<6> = OS.TOT.CHG
SCV.REC(12)<6> = OS.TOT.NCHG
SCV.REC(13)<6> = OS.TOT.CORD
SCV.REC(14)<6> = OS.TOT.SPOIL
SCV.REC(15)<6> = OS.TOT.COST
SCV.REC(16)<6> = OS.TOT.SALE
SCV.REC(11)<7> = SP.TOT.CHG
SCV.REC(12)<7> = SP.TOT.NCHG
SCV.REC(13)<7> = SP.TOT.CORD
SCV.REC(14)<7> = SP.TOT.SPOIL
SCV.REC(15)<7> = SP.TOT.COST
SCV.REC(16)<7> = SP.TOT.SALE
SCV.REC(11)<8> = MS.TOT.CHG
SCV.REC(12)<8> = MS.TOT.NCHG
SCV.REC(13)<8> = MS.TOT.COST
SCV.REC(14)<8> = MS.TOT.SALE
SCV.REC(1)<14> = JOB.NUM
SCV.REC(16)<14> = JOB.DESC<1,1>
SCV.REC(2)<14> = JOB.CUST
SCV.REC(3)<14> = CUST.NAME
SCV.REC(4)<14> = JOB.SLSMN
SCV.REC(5)<14> = SALS.NAME
SCV.REC(13)<15> = LB.TOT.SALE
SCV.REC(14)<15> = MT.TOT.SALE
SCV.REC(15)<15> = OS.TOT.SALE
SCV.REC(16)<15> = SP.TOT.SALE
SCV.REC(17)<15> = MS.TOT.SALE
SCV.REC(18)<15> = JOB.TOT.SALE
SCV.REC(1)<16> = JOB.NUM
SCV.REC(2)<16> = SCV.REC(8)<1>
SCV.REC(3)<16> = JOB.CUST
SCV.REC(4)<16> = CUST.NAME
LINES = COUNT(JOB.DESC,VM) + (JOB.DESC # "")
35000 *
ECD.ACTION = 3; CALL SCRN.EDIT
LN = 1; OLD.START.LINE = 0
GOSUB 1400
RETURN
91000 ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 ERR.TYPE = 2
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
