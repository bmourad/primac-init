   SUBROUTINE INV.ALLOC.MAINT (CONO, BAL.FLG, IVC.NO, JOB.NO, MENU, PROG.FLAG, REF.NO, COA.LEVEL)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.INVOICE
*********************************************************************
* REVISION - [10.0]
* Copyright 1994 by Computer Business Associates (Vercom Software, Inc.)
* SOURCE   - JCSBP
* PROGRAM  - INV.ALLOC.MAINT
* AUTHOR   - GORDON A.(TOMMY) THOMPSON, VERCOM SOFTWARE INC.
* DATE     - 10/31/94
* DESCRIPTION
* This program is used to allocate revenue from invoices.
* TASK 17927 GAT 10/31/94 ADD INVOICE ALLOC MAINT
* TASK 20703 CLS 07/23/96 CHECK COMP.REC FOR DEFAULT REVENUE DIST (E,J,M)
*T21177 diane 11/06/1996 * REV11 UPG
*T21596 lanny 02/17/1997 * ESTIMATE.JOB FILE NOT OPENED.
*T23441 gat 11/17/1998 * FIX DIV/DEPT PROBLEM
*T23449 gat 11/19/1998 * FIX MANUAL INVOICE SHOWING AMOUNT FOR LINE ITEM
*T23278 markt 12/15/1998 * Add check for divisional security.
*T25874 lanny 06/11/2001 * Eliminate imbedded decimal point in Alloc
*                          Amts.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T28607 lross 06/30/2005 * Divide by zero error.
*********************************************************************
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>INVOICE
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>PMC.CPYLIB>INVOICE.CODE
*COPY>PMC.CPYLIB>TAX
*COPY>PMC.CPYLIB>VOID.INVOICES
*COPY>PMC.CPYLIB>SALES.CODE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>CPYLIB>FILE.VARS
*COPY>JES.CPYLIB>JES.FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>JES.CPYLIB>ESTIMATE.JOB
*COPY>CPYLIB>SYSCOM
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*
*---- INITIALIZATION
*
   IF PROG.FLAG = "I" THEN 
      DISPLAY = 1
   END ELSE
      DISPLAY = 0
   END
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*T21596 v
   IF CO.REV.DIST = "E" AND MENU # "MANUAL" THEN
      OPEN 'ESTIMATE.JOB' TO ESTIMATE.JOB ELSE
         ERRMSG='CANNOT OPEN ESTIMATE.JOB FILE'
         GOTO 93000
      END
   END
*T21596 ^
   GCCT = "000"
   GDEP = "00"
   GDIV = "00"
   ECD.SCRN.NO=5
   FOR SCV = 1 TO SCV.REC.SIZE
      SCV.REC(SCV)<ECD.SCRN.NO>=""
   NEXT SCV
   ECD.ACTION=2;CALL SCRN.EDIT
   LINE.COUNT= 7
*      MAT EDIT.COM=""
* CALL EDIT.SUB
*      FILL="#"
   ERRMSG=""
   MODE=""
   DIM ALLOC.REC(7)
   EQU ALL.SEQ TO ALLOC.REC(1)
   EQU ALL.DIV TO ALLOC.REC(2)
   EQU ALL.DEP TO ALLOC.REC(3)
   EQU ALL.CCT TO ALLOC.REC(4)
   EQU ALL.EST TO ALLOC.REC(5)
   EQU ALL.DIS TO ALLOC.REC(6)
   EQU ALL.PER TO ALLOC.REC(7)
   MAT ALLOC.REC = ""
*
   ACTION = ""
   PAGE.SIZE = 7
   BEGIN.PAGE = 11
   LINE.SPACE = 1
   OLD.START.LINE = 0
   IF MENU = "MANUAL" THEN 
      LINE.AMT = SCV.REC(18)<1,REF.NO>
   END ELSE
      LINE.AMT = SCV.REC(17)<2,REF.NO>
   END
*
*---- MAIN PROCESSING
   IF MENU = "MANUAL" THEN
      GOSUB 6000
      GOTO 100
   END
*20703 v
   IF CO.REV.DIST # "" THEN
      BEGIN CASE
         CASE CO.REV.DIST = "E" 
            IF JOB.EST # "" THEN
               GOSUB 4000
            END ELSE
               IF JOB.NO # "" THEN
                  GOSUB 5000
               END ELSE
                  GOSUB 6000
               END
            END
         CASE CO.REV.DIST = "J" 
            IF JOB.NO # "" THEN
               GOSUB 5000
            END ELSE
               GOSUB 6000
            END
         CASE 1
            GOSUB 6000
      END CASE
   END ELSE
      BEGIN CASE
         CASE IVC.ALLOC.DIV<1,REF.NO> = ""
            BEGIN CASE 
               CASE JOB.EST # ""
                  GOSUB 4000
               CASE JOB.NO # ""
                  GOSUB 5000
            END CASE
         CASE 1
            GOSUB 6000
      END CASE
   END
*
*20703 ^
*
100 * PRINT HEADING
   SCV.REC(1)<ECD.SCRN.NO>=IVC.NO
   ECD.NUM=1;ECD.ACTION=5;CALL SCRN.EDIT
   SCV.REC(4)<ECD.SCRN.NO>=JOB.NO
   ECD.NUM=4;ECD.ACTION=5;CALL SCRN.EDIT
   IF MENU # "MANUAL" THEN
      AUTO.FLAG = "Y"
   END ELSE
      AUTO.FLAG = "N"
   END
   SCV.REC(2)<ECD.SCRN.NO>=AUTO.FLAG
   ECD.NUM=2;ECD.ACTION=5;CALL SCRN.EDIT
   SCV.REC(3)<ECD.SCRN.NO>=LINE.AMT
   AMT.REM = LINE.AMT
   ECD.NUM=3;ECD.ACTION=5;CALL SCRN.EDIT
   SCV.REC(5)<ECD.SCRN.NO>=AMT.REM
   ECD.NUM= 5; ECD.ACTION = 5; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      INV.CD = SCV.REC(15)<1,REF.NO>
   END ELSE
      INV.CD = SCV.REC(13)<2,REF.NO>
   END
   SCV.REC(6)<ECD.SCRN.NO>=INV.CD
   ECD.NUM= 6; ECD.ACTION = 5; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      IF MIV.TAX.JURS<1,REF.NO> = "" THEN
         JS.CODE = MIV.SALES.CODE
      END ELSE
         JS.CODE = MIV.TAX.JURS<1,REF.NO>
      END
   END ELSE
      IF IVC.TAX.JURS<1,REF.NO> = "" THEN
         JS.CODE = JOB.SALES.CODE
      END ELSE
         JS.CODE = IVC.TAX.JURS<1,REF.NO>
      END
   END
   SCV.REC(7)<ECD.SCRN.NO> = JS.CODE
   ECD.NUM = 7; ECD.ACTION = 5; CALL SCRN.EDIT
   SCV.REC(8)<ECD.SCRN.NO> = JOB.NO
   ECD.NUM = 8; ECD.ACTION = 5; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      LINE.QTY = SCV.REC(16)<1,REF.NO>
   END ELSE
      LINE.QTY = SCV.REC(14)<2,REF.NO>
   END
   SCV.REC(9)<ECD.SCRN.NO> = LINE.QTY
   ECD.NUM = 9; ECD.ACTION = 5 ; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      LINE.DESC = SCV.REC(17)<1,REF.NO>
   END ELSE
      LINE.DESC = SCV.REC(15)<2,REF.NO>
   END
   SCV.REC(10)<ECD.SCRN.NO> = LINE.DESC
   ECD.NUM = 10; ECD.ACTION = 5; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      LINE.UM = SCV.REC(30)<1,REF.NO>
   END ELSE
      LINE.UM = SCV.REC(30)<2,REF.NO>
   END
   SCV.REC(11)<ECD.SCRN.NO> = LINE.UM
   ECD.NUM = 11; ECD.ACTION = 5; CALL SCRN.EDIT
   IF MENU = "MANUAL" THEN
      LINE.PRICE = SCV.REC(31)<1,REF.NO>
   END ELSE
      LINE.PRICE = SCV.REC(31)<2,REF.NO>
   END
*T23449
   IF MENU = "MANUAL" THEN LINE.PRICE = LINE.PRICE/10
*T23449
   SCV.REC(12)<ECD.SCRN.NO> = LINE.PRICE
   ECD.NUM = 12; ECD.ACTION = 5; CALL SCRN.EDIT
   IF ALL.SEQ # "" THEN GOSUB 11000
200 * INPUT OPTIONS
*
   IF ALL.SEQ = "" AND DISPLAY = 0 THEN
      LINES = 0
      ACTION = 'A'
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 1000
      WHILE LINES > OLD.LINES DO
      REPEAT
      LN = LINES
   END ELSE
      LINES = DCOUNT(ALL.SEQ,VM)
      LN = 1
   END
   GOSUB 11000
   MORE = 1
   LOOP
      BEGIN CASE
         CASE DISPLAY = 0
            ECD.NUM = 22
         CASE 1
            ECD.NUM = 26
      END CASE
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''; ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            MORE = 0
            GOSUB 8000
            IF AMT.REM = 0 THEN
               BAL.FLG = "Y"
            END ELSE
               BAL.FLG = "N"
            END
            GOTO 99999
         CASE NUM(ACTION)
            GOSUB 11000
            IF ACTION > LAST.LINE OR ACTION < OLD.START.LINE THEN
               ERRMSG="Line Not Avalible On This Page"
               GOSUB 91000
            END ELSE
               LN=ACTION
               SLN = BEGIN.PAGE+LINE.SPACE*MOD(LN,PAGE.SIZE)
            END
         CASE ACTION = 'A' AND DISPLAY = "0"
            LOOP
               LN = LINES + 1
               OLD.LINES = LINES
               GOSUB 1000
            WHILE LINES > OLD.LINES DO
            REPEAT
            LN = LINES
            GOSUB 11000
         CASE ACTION = 'C' AND DISPLAY = "0"
            GOSUB 9000
            IF LN.NO THEN
               LN = LN.NO
               SLN = BEGIN.PAGE+LINE.SPACE*MOD(LN-1,PAGE.SIZE)
               GOSUB 1000
            END
         CASE ACTION = 'D' AND DISPLAY = 0
            GOSUB 2000
         CASE ACTION = "P"
            BAL.FLG = "P"
            GOSUB 8000
            GOTO 99999
         CASE ACTION = 'S'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE+PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 11000
      * T25978 v
         CASE ACTION = 'SR'
            LN = 1+INT((LN-1)/PAGE.SIZE)*PAGE.SIZE-PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 11000
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 11000
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 11000
      * T25978 ^
         CASE 1
            ERRMSG = "That is not a Valid Option  Please Try Again"
            GOSUB 91000
      END CASE
   WHILE MORE DO
   REPEAT
   GOTO 99999
1000 *
   GOSUB 11000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1100 *
   H.DIV = ALL.DIV<1,LN>
   H.DEP = ALL.DEP<1,LN>
   H.CCT = ALL.CCT<1,LN>
   H.DIS = ALL.DIS<1,LN>
   H.PER = ALL.PER<1,LN>
   H.EST = ALL.EST<1,LN>
   X = 4
   Y = SLN
   TYP = 3
   MAXL = 2 ; MINL = 2 ;*T21177
   O.R = 'O'
   DEFAULT = ALL.DIV<1,LN>
   IF MENU = "MANUAL" THEN
      IF DEFAULT = "" THEN DEFAULT = MIV.DIV
   END ELSE
      IF DEFAULT = "" THEN DEFAULT = JOB.DIV
   END
   IF COA.LEVEL < 1 THEN
      ALL.DIV<1,LN> = GDIV
      GOTO 1110
   END
   CALL EDIT.SUB
*T23278 v
   IF VALUE # 'END' THEN
      DIV.CODE = VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
         GOSUB 91000; GOTO 1100
      END
   END
*T23278 ^
   ALL.DIV<1,LN> = VALUE
   IF VALUE = 'END' OR VALUE = "" THEN
      IF ACTION = "A" THEN
         ALL.DIV = DELETE(ALL.DIV,1,LN,0)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF ACTION = "C" THEN GOSUB 2500
      GOTO 1999
   END
   IF VALUE = "00" THEN GOTO 1110
   IF MENU # "MANUAL" THEN
      IF VALUE # JOB.DIV THEN
         ERRMSG = "Invalid Division for Job "
         GOSUB 91000
         GOTO 1100
      END
   END
   MATREAD DIV.REC FROM DIVISION,CONO:VALUE ELSE MAT DIV.REC = ""
   IF DIV.REC(2) = "" THEN
      ERRMSG = "Invalid Division "
      GOSUB 91000
      ALL.DIV<1,LN> = H.DIV
      VALUE = H.DIV
      GOTO 1100
   END
   ALL.DIV<1,LN> = VALUE
1110 *
   P_X  = 4 ; P_Y = SLN ; P_VALUE = ALL.DIV<1,LN> "L#2" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1200 *
   X = 7
   Y = SLN
   TYP = 3
   MAXL = 2 ; MINL = 2 ;*T21177
   O.R = 'O'
   IF COA.LEVEL < 2 THEN 
      ALL.DEP<1,LN> = GDEP
      GOTO 1210
   END
   IF ALL.DEP<1,LN> = "" THEN
      DEFAULT = GDEP
   END ELSE
      DEFAULT = ALL.DEP<1,LN>
   END
   IF ALL.DIV<1,LN> = GDIV THEN
      ALL.DEP<1,LN> = GDEP
      VALUE = GDEP
      GOTO 1210
   END
   CALL EDIT.SUB
   ALL.DEP<1,LN> = VALUE
   IF VALUE = 'END' OR VALUE = "" THEN
      IF ACTION = "A" THEN
         ALL.DEP = DELETE(ALL.DEP,1,LN,0)
* T23441
         ALL.DIV = DELETE(ALL.DIV,1,LN,0)
* T23441
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF ACTION = "C" THEN GOSUB 2500
      GOTO 1999
   END
   IF VALUE = "00" THEN GOTO 1210
   MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE MAT DEPT.REC = ""
   IF DEPT.REC(1) = "" THEN
      ERRMSG = "Invalid Department "
      GOSUB 91000
      ALL.DEP<1,LN> = H.DEP
      VALUE = H.DEP
      GOTO 1200
   END
   DPX = 0
   LOCATE ALL.DIV<1,LN> IN DEPT.DIV<1>,1 SETTING DPX   ELSE DPX = 0
   IF DPX = 0 THEN
      ERRMSG = " Division/Department mismatch"
      GOSUB 91000
      ALL.DEP<1,LN> = H.DEP
      VALUE = H.DEP
      GOTO 1200
   END
1210 *
   P_X  = 7 ; P_Y = SLN ; P_VALUE = ALL.DEP<1,LN> "L#2" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1300 *
   X = 10
   Y = SLN
   TYP = 3
   MAXL = 3 ; MINL = 3 ;*T21177
   O.R = 'O'
   IF COA.LEVEL < 3 THEN 
      ALL.CCT<1,LN> = GCCT
      GOTO 1310
   END
   DEFAULT = ALL.CCT<1,LN>
   IF ALL.DIV<1,LN> = GDIV OR ALL.DEP<1,LN> = GDEP THEN
      ALL.CCT<1,LN> = GCCT
      GOTO 1310
   END
   CALL EDIT.SUB
   ALL.CCT<1,LN> = VALUE
   IF VALUE = 'END' OR VALUE = "" THEN
      IF ACTION = "A" THEN
         ALL.CCT = DELETE(ALL.CCT,1,LN,0)
         ALL.DEP = DELETE(ALL.DEP,1,LN,0)
* T23441
         ALL.DIV = DELETE(ALL.DIV,1,LN,0)
* T23441
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF ACTION = "C" THEN GOSUB 2500
      GOTO 1999
   END
   IF VALUE = "000" THEN  GOTO 1310
   MATREAD CCTR.REC FROM COST.CNTR , CONO:VALUE ELSE MAT CCTR.REC = "" 
   IF CCTR.REC(2) = "" THEN
      ERRMSG = "Invalid Cost Center "
      GOSUB 91000
      ALL.CCT<1,LN> = H.CCT
      VALUE = H.CCT
      GOTO 1300
   END
   DPC = 0 
   LOCATE ALL.DEP<1,LN> IN CCTR.DEPT<1>,1 SETTING DPC   ELSE DPC = 0
   IF DPC = 0 THEN
      ERRMSG = "Department/Cost Center mismatch"
      GOSUB 91000
      ALL.CCT<1,LN> = H.CCT
      VALUE = H.CCT
      GOTO 1300
   END
1310 *
   P_X  = 10 ; P_Y = SLN ; P_VALUE = ALL.CCT<1,LN> "L#3" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1400 *
   N = LN
   ERRMSG = ""
   GOSUB 3000
   IF ERRMSG # "" THEN
      ERRMSG = ""
      IF ACTION = "A" THEN
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 4 ; P_Y = SLN ; P_VALUE = H.DIV ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         ALL.DIV<1,LN> = H.DIV
         P_X  = 7 ; P_Y = SLN ; P_VALUE = H.DEP ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         ALL.DEP<1,LN> = H.DEP
         P_X  = 10 ; P_Y = SLN ; P_VALUE = H.CCT ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         ALL.CCT<1,LN> = H.CCT
      END
      ACTION = ""
      GOTO 1999
   END
   P_X  = 14 ; P_Y = SLN ; P_VALUE = GL.DESC "L#30" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1500 * SKIP ESTIMATE
   IF MENU = "MANUAL" THEN GOTO 1600
   IF H.DEP # ALL.DEP<1,LN> OR H.CCT # ALL.CCT<1,LN> THEN 
      ALL.EST<1,LN> = 0
   END
   IF ALL.EST<1,LN> = "" THEN ALL.EST<1,LN> = 0
   P_X  = 45 ; P_Y = SLN ; P_VALUE = OCONV(ALL.EST<1,LN>, "MD2") "R#12" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1600 * INPUT DISTRIBUTION
   X = 58; Y = SLN
   TYP = 4; MAXL = 12
   SCALER = 2
   O.R = 'O'
   DEFAULT = OCONV(ALL.DIS<1,LN>,"MD2")
   IF DEFAULT = "" OR DEFAULT = 0 THEN
      DEFAULT = OCONV(AMT.REM, "MD2")
   END
   HOLD.DIS = ALL.DIS<1,LN>
   CALL EDIT.SUB
   ALL.DIS<1,LN> = VALUE
   IF VALUE = 'END' OR VALUE = "" THEN
      IF ACTION = "A" THEN
         ALL.DIS = DELETE(ALL.DIS,1,LN,0)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      IF ACTION = "C" THEN GOSUB 2500
      GOTO 1999
   END
   P_X  = 58 ; P_Y = SLN ; P_VALUE = OCONV(ALL.DIS<1,LN>, "MD2") "R#12" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
1700 * PERCENT
   IF HOLD.DIS # ALL.DIS<1,LN> THEN
      DIS.PER = (ALL.DIS<1,LN>/LINE.AMT)*100 
   END ELSE
      DIS.PER = ALL.PER<1,LN>/10000
   END
   TYP = 4; SCALER = 4; MAXV = 9999999
   X = 71; Y = SLN; O.R = 'O'; MAXL = 8; MINV = 0
   HOLD.PER = DIS.PER
   DEFAULT = DIS.PER
   CALL EDIT.SUB
   IF VALUE = INT((HOLD.PER + .00005) * 10000) THEN GOTO 1750
   IF VALUE = 'END' OR VALUE = "" THEN
      IF ACTION = 'A' THEN
         ALL.PER = DELETE(ALL.PER,1,LN,0)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         GOTO 1000
      END
      IF ACTION = "C" THEN GOSUB 2500
      GOTO 1999
   END
   HOLD.VALUE = VALUE/10000
   IF DIS.PER # HOLD.VALUE THEN
      ALL.DIS<1,LN> = INT((LINE.AMT * VALUE)/1000000)
      P_X  = 58 ; P_Y = SLN ; P_VALUE = OCONV(ALL.DIS<1,LN>,"MD2") "R#12" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
1750 *
   ALL.PER<1,LN> = VALUE
   ALL.SEQ<1,LN> = LN
   LINES = DCOUNT(ALL.SEQ,VM)
   GOSUB 7000
1999 *
   RETURN
*
2000 * DELETE ALLOCATE LINE
   ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
   IF LN.NO THEN
      ALL.SEQ = DELETE(ALL.SEQ,1,LN.NO,0)
      ALL.DIV = DELETE(ALL.DIV,1,LN.NO,0)
      ALL.DEP = DELETE(ALL.DEP,1,LN.NO,0)
      ALL.CCT = DELETE(ALL.CCT,1,LN.NO,0)
      ALL.EST = DELETE(ALL.EST,1,LN.NO,0)
      ALL.DIS = DELETE(ALL.DIS,1,LN.NO,0)
      ALL.PER = DELETE(ALL.PER,1,LN.NO,0)
      LN = 1+INT((LN.NO-1)/PAGE.SIZE)*PAGE.SIZE
      LINES = DCOUNT(ALL.SEQ,VM)
      IF LN > LINES THEN LN = 1
      GOSUB 11000
   END
   RETURN
*
2500 * REPAINT LINE ESCAPED FROM
   P_X  = 4 ; P_Y = SLN ; P_VALUE = H.DIV ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.DIV<1,LN> =H.DIV
   P_X  = 7 ; P_Y = SLN ; P_VALUE = H.DEP ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.DEP<1,LN> =H.DEP
   P_X  = 10 ; P_Y = SLN ; P_VALUE = H.CCT ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.CCT<1,LN> = H.CCT
   N = LN
   GOSUB 3200
   P_X  = 14 ; P_Y = SLN ; P_VALUE = GL.DESC "L#30" ; P_OPT = ""
   P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(H.EST,"MD2") "R#12"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.EST<1,LN> = H.EST
   P_X  = 58 ; P_Y = SLN ; P_VALUE = OCONV(H.DIS,"MD2") "R#12" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.DIS<1,LN> = H.DIS
   P_X  = 71 ; P_Y = SLN ; P_VALUE = OCONV(H.PER,"MD4") "R#8" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   ALL.PER<1,LN> = H.PER
   RETURN
*
3000 *
   IF ACTION = "C" OR ACTION = "A" THEN
      GL.NO = ALL.DIV<1,LN>:ALL.DEP<1,LN>:ALL.CCT<1,LN>
      GL.CNT = DCOUNT(ALL.SEQ,VM)
      FOR G = 1 TO GL.CNT
         IF G = LN  AND ACTION = "A" THEN GOTO 3200
         IF G = LN THEN GOTO 3110
         ALL.GL = ALL.DIV<1,G>:ALL.DEP<1,G>:ALL.CCT<1,G>
         IF GL.NO = ALL.GL THEN
            IF COA.LEVEL = 0 THEN
               ERRMSG = "COA LEVEL   "
               RETURN
            END
            ERRMSG = "Div ":ALL.DIV<1,G>:" Dept ":ALL.DEP<1,G>:" Cctr ":ALL.CCT<1,G>:" already distributed on line ":G
            GOSUB 91000
            RETURN
         END
3110 *
      NEXT G
   END
3200 *
   IF ALL.DIV<1,N> = "00" THEN 
      DIV.DESC = "GEN DIV "
      GOTO 3210
   END
   READV DIV.DESC FROM DIVISION, CONO:ALL.DIV<1,N>, 1 ELSE DIV.DESC = "DIV ERR"
3210 *
   IF ALL.DEP<1,N> = "00" THEN
      DEPT.DESC = "GEN DEPT "
      GOTO 3220
   END
   READV DEPT.DESC FROM DEPARTMENT, CONO:ALL.DEP<1,N>, 2 ELSE DEPT.DESC = "DEPT ERR"
3220 *
   IF ALL.CCT<1,N> = "000" THEN
      CCTR.DESC = "GEN CCTR "
      GOTO 3230
   END
   READV CCTR.DESC FROM COST.CNTR, CONO:ALL.CCT<1,N>, 1 ELSE CCTR.DESC = "CCTR ERR"
3230 *
   GL.DESC = DIV.DESC:" ":DEPT.DESC:" ":CCTR.DESC
   RETURN
*
4000 * GET ESTIMATE
   MATREAD ESTJ.REC FROM ESTIMATE.JOB, CONO:JOB.NO ELSE
      ERRMSG = "No estimate for this job"
      GOSUB 91000
      GO 99999
   END
   LB.CNT = DCOUNT(ESTJ.LB.DEPT,VM)
   MT.CNT = DCOUNT(ESTJ.MT.DEPT,VM)
   OS.CNT = DCOUNT(ESTJ.OS.DEPT,VM)
   SP.CNT = DCOUNT(ESTJ.SP.DEPT,VM)
   MS.CNT = DCOUNT(ESTJ.MS.DEPT,VM)
*
   DIM EST.TOT(2)
   MAT EST.TOT = ""
   IF COA.LEVEL = 0 THEN 
      HOLD.DIV = GDIV
   END ELSE
      HOLD.DIV = JOB.DIV
   END
4200 *
   IF LB.CNT = 0 THEN GOTO 4210
   FOR X = 1 TO LB.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = ESTJ.LB.DEPT<1,X>:ESTJ.LB.CCTR<1,X>
         CASE COA.LEVEL = 2
            DEPT.CCST = ESTJ.LB.DEPT<1,X>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = ESTJ.LB.SALE<1,X>
      GOSUB 4500
   NEXT X
4210 *
   IF MT.CNT = 0 THEN GO 4220
   FOR Y = 1 TO MT.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = ESTJ.MT.DEPT<1,Y>:ESTJ.MT.CCTR<1,Y>
         CASE COA.LEVEL = 2
            DEPT.CCST = ESTJ.MT.DEPT<1,Y>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = ESTJ.MT.SALE<1,Y>
      GOSUB 4500
   NEXT Y
4220 *
   IF OS.CNT = 0 THEN GOTO 4230
   FOR Z = 1 TO OS.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = ESTJ.OS.DEPT<1,Z>:ESTJ.OS.CCTR<1,Z>
         CASE COA.LEVEL = 2
            DEPT.CCST = ESTJ.OS.DEPT<1,Z>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = ESTJ.OS.SALE<1,Z>
      GOSUB 4500
   NEXT Z
4230 *
   IF SP.CNT = 0 THEN GOTO 4240
   FOR R = 1 TO SP.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = ESTJ.SP.DEPT<1,R>:ESTJ.SP.CCTR<1,R>
         CASE COA.LEVEL = 2
            DEPT.CCST = ESTJ.SP.DEPT<1,R>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = ESTJ.SP.SALE<1,R>
      GOSUB 4500
   NEXT R
4240 *
   IF MS.CNT = 0 THEN GOTO 4250
   FOR S = 1 TO MS.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = ESTJ.MS.DEPT<1,S>:ESTJ.MS.CCTR<1,S>
         CASE COA.LEVEL = 2
            DEPT.CCST = ESTJ.MS.DEPT<1,S>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = ESTJ.MS.SALE<1,S>
      GOSUB 4500
   NEXT S
4250 *
   GOTO 4520
*
4500 * LOAD EST IN ARRAY
   LOCATE HOLD.DIV:DEPT.CCST IN EST.TOT(1)  SETTING DCP ELSE GOTO 4510
   EST.TOT(2)<DCP> = EST.TOT(2)<DCP> + DEPT.CCST.SALE
   GOTO 4515
*
4510 * INSERT NEW DEPT.CSST
   EST.TOT(1)<DCP> = HOLD.DIV:DEPT.CCST
   EST.TOT(2)<DCP> = DEPT.CCST.SALE
4515 *
   RETURN
4520 *
   IF EST.TOT(1) = "" THEN GOTO 4599
   DONE = 0
   E = 0
   LOOP
   WHILE DONE = 0
      E = E + 1
      IF EST.TOT(1)<E> = "" THEN DONE = 1
      ALL.SEQ<1,E> = E
      ALL.DIV<1,E> = EST.TOT(1)<E>[1,2]
      ALL.DEP<1,E> = EST.TOT(1)<E>[3,2]
      ALL.CCT<1,E> = EST.TOT(1)<E>[5,3]
      ALL.EST<1,E> = EST.TOT(2)<E>
      IF ESTJ.TOT.SALE+0 = 0 THEN ESTJ.TOT.SALE = 1 ;*T28607
      EST.PER = EST.TOT(2)<E> / ESTJ.TOT.SALE
*T25874 ALL.DIS<1,E> = INT(LINE.AMT * EST.PER)
      ALL.DIS<1,E> = ICONV((LINE.AMT * EST.PER),'MD0')
      ALL.PER<1,E> = EST.PER * 1000000
   REPEAT
   TOT.DIS = SUM(ALL.DIS)
   AMT.REM = LINE.AMT - TOT.DIS
   IF AMT.REM # 0 THEN
      ALL.DIS<1,1> = ALL.DIS<1,1> + AMT.REM
   END
   ALL.SEQ = DELETE(ALL.SEQ,1,E,0)
   LINES = E - 1
   LN = 1
4599 *
   RETURN
*
5000 * GET JOB ACTUAL
*
   MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
      ERRMSG = "No record for this job"
      GOSUB 91000
      GO 99999
   END
   IF COA.LEVEL = 0 THEN 
      HOLD.DIV = GDIV
   END ELSE
      HOLD.DIV = JOB.DIV
   END
   LB.CNT = DCOUNT(JOB.LB.DEPT,VM)
   MT.CNT = DCOUNT(JOB.MT.DEPT,VM)
   OS.CNT = DCOUNT(JOB.OS.DEPT,VM)
   SP.CNT = DCOUNT(JOB.SP.DEPT,VM)
   MS.CNT = DCOUNT(JOB.MS.DEPT,VM)
*
   DIM JOB.TOT(2)
   MAT JOB.TOT = ""
5200 *
   IF LB.CNT = 0 THEN GOTO 5210
   FOR X = 1 TO LB.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = JOB.LB.DEPT<1,X>:JOB.LB.CCTR<1,X>
         CASE COA.LEVEL = 2
            DEPT.CCST = JOB.LB.DEPT<1,X>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = JOB.LB.SALE<1,X>
      GOSUB 5500
   NEXT X
5210 *
   IF MT.CNT = 0 THEN GO 5220
   FOR Y = 1 TO MT.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = JOB.MT.DEPT<1,Y>:JOB.MT.CCTR<1,Y>
         CASE COA.LEVEL = 2
            DEPT.CCST = JOB.MT.DEPT<1,Y>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = JOB.MT.SALE<1,Y>
      GOSUB 5500
   NEXT Y
5220 *
   IF OS.CNT = 0 THEN GOTO 5230
   FOR Z = 1 TO OS.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = JOB.OS.DEPT<1,Z>:JOB.OS.CCTR<1,Z>
         CASE COA.LEVEL = 2
            DEPT.CCST = JOB.OS.DEPT<1,Z>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = JOB.OS.SALE<1,Z>
      GOSUB 5500
   NEXT Z
5230 *
   IF SP.CNT = 0 THEN GOTO 5240
   FOR R = 1 TO SP.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = JOB.SP.DEPT<1,R>:JOB.SP.CCTR<1,R>
         CASE COA.LEVEL = 2
            DEPT.CCST = JOB.SP.DEPT<1,R>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = JOB.SP.SALE<1,R>
      GOSUB 5500
   NEXT R
5240 *
   IF MS.CNT = 0 THEN GOTO 5250
   FOR S = 1 TO MS.CNT
      BEGIN CASE
         CASE COA.LEVEL = 3
            DEPT.CCST = JOB.MS.DEPT<1,S>:JOB.MS.CCTR<1,S>
         CASE COA.LEVEL = 2
            DEPT.CCST = JOB.MS.DEPT<1,S>:GCCT
         CASE COA.LEVEL < 2
            DEPT.CCST = GDEP:GCCT
      END CASE
      DEPT.CCST.SALE = JOB.MS.SALE<1,S>
      GOSUB 5500
   NEXT S
5250 *
   GOTO 5520
*
5500 * LOAD EST IN ARRAY
   LOCATE HOLD.DIV:DEPT.CCST IN JOB.TOT(1)  SETTING DCP ELSE GOTO 5510
   JOB.TOT(2)<DCP> = JOB.TOT(2)<DCP> + DEPT.CCST.SALE
   GOTO 5515
*
5510 * INSERT NEW DEPT.CSST
   JOB.TOT(1)<DCP> = HOLD.DIV:DEPT.CCST
   JOB.TOT(2)<DCP> = DEPT.CCST.SALE
5515*
   RETURN
5520 *
   IF SUM(JOB.TOT(2)) = 0 THEN GOTO 5599
   DONE = 0
   E = 0
   LOOP
   WHILE DONE = 0
      E = E + 1
      IF JOB.TOT(1)<E> = "" THEN DONE = 1
      ALL.SEQ<1,E> = E
      ALL.DIV<1,E> = JOB.TOT(1)<E>[1,2]
      ALL.DEP<1,E> = JOB.TOT(1)<E>[3,2]
      ALL.CCT<1,E> = JOB.TOT(1)<E>[5,3]
      ALL.EST<1,E> = JOB.TOT(2)<E>
      IF JOB.TOT.SALE+0 # 0 THEN
         JOB.PER = JOB.TOT(2)<E> / JOB.TOT.SALE
      END ELSE
         JOB.PER = 1
      END
*T25874 ALL.DIS<1,E> = INT(LINE.AMT * JOB.PER)
      ALL.DIS<1,E> = ICONV((LINE.AMT * JOB.PER),'MD0')
      ALL.PER<1,E> = JOB.PER * 1000000
   REPEAT
   TOT.DIS = SUM(ALL.DIS)
   AMT.REM = LINE.AMT - TOT.DIS
   IF AMT.REM # 0 THEN
      ALL.DIS<1,1> = ALL.DIS<1,1> + AMT.REM
   END
   ALL.SEQ = DELETE(ALL.SEQ,1,E,0)
   LINES = E - 1
   LN = 1
5599 *
   RETURN
*
6000 * GET INVOICE ALLOCATION
   IF MENU = "MANUAL" THEN
      ICNT = DCOUNT(MIV.ALLOC.DIV<1,REF.NO>,SVM)
      T.ALL = SUM(MIV.ALLOC.AMT<1,REF.NO>)
      FOR I = 1 TO ICNT
         ALL.SEQ<1,I> = I
         ALL.DIV<1,I> = MIV.ALLOC.DIV<1,REF.NO,I>[1,2]
         ALL.DEP<1,I> = MIV.ALLOC.DIV<1,REF.NO,I>[3,2]
         ALL.CCT<1,I> = MIV.ALLOC.DIV<1,REF.NO,I>[5,3]
         ALL.EST<1,I> = 0
         T.PER = MIV.ALLOC.AMT<1,REF.NO,I>/ T.ALL
*T25874   MIV.ALLOC.AMT<1,REF.NO,I> = (LINE.AMT * T.PER)
         MIV.ALLOC.AMT<1,REF.NO,I> = ICONV((LINE.AMT * T.PER),'MD0')
         ALL.DIS<1,I> = MIV.ALLOC.AMT<1,REF.NO,I>
         ALL.PER<1,I> = MIV.ALLOC.AMT<1,REF.NO,I> / LINE.AMT
         ALL.PER<1,I> = ALL.PER<1,I> * 1000000
      NEXT I
   END ELSE
      ICNT = DCOUNT(IVC.ALLOC.DIV<1,REF.NO>,SVM)
      T.ALL = SUM(IVC.ALLOC.AMT<1,REF.NO>)
      FOR I = 1 TO ICNT
         ALL.SEQ<1,I> = I
         ALL.DIV<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[1,2]
         ALL.DEP<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[3,2]
         ALL.CCT<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[5,3]
         ALL.EST<1,I> = 0
         T.PER = IVC.ALLOC.AMT<1,REF.NO,I>/ T.ALL
*T25874   IVC.ALLOC.AMT<1,REF.NO,I> = (LINE.AMT * T.PER)
         IVC.ALLOC.AMT<1,REF.NO,I> = ICONV((LINE.AMT * T.PER),'MD0')
         ALL.DIS<1,I> = IVC.ALLOC.AMT<1,REF.NO,I>
         ALL.PER<1,I> = IVC.ALLOC.AMT<1,REF.NO,I> / LINE.AMT
         ALL.PER<1,I> = ALL.PER<1,I> * 1000000
      NEXT I
   END
   LINES = ICNT
   LN = 1
*
7000 * TOTAL ALLOC
   TOT.EST = SUM(ALL.EST)
   TOT.DIS = SUM(ALL.DIS)
   TOT.PER = SUM(ALL.PER)
   AMT.REM = LINE.AMT - TOT.DIS
   P_X  = 67 ; P_Y = 4 ; P_VALUE = OCONV(AMT.REM,"MD2") "R#12" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF MENU # "MANUAL" THEN
      P_X  = 45 ; P_Y = 19 ; P_VALUE = OCONV(TOT.EST,"MD2") "R#12" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   P_X  = 58 ; P_Y = 19 ; P_VALUE = OCONV(TOT.DIS,"MD2") "R#12" ; P_OPT = ""
   P_X  := AM:71 ; P_Y := AM:19 ; P_VALUE := AM:OCONV(TOT.PER,"MD4") "R#8"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
8000 * WRITE ALLOC
   IF MENU = "MANUAL" THEN
      MIV.ALLOC.DIV<1,REF.NO> = ""
      MIV.ALLOC.AMT<1,REF.NO> = ""
   END ELSE
      IVC.ALLOC.DIV<1,REF.NO> = ""
      IVC.ALLOC.AMT<1,REF.NO> = ""
   END
   INV.CNT  = DCOUNT(ALL.SEQ,VM)
   FOR Q = 1 TO INV.CNT
      I.DIV = ALL.DIV<1,Q>
      I.DEP = ALL.DEP<1,Q>
      I.CCT = ALL.CCT<1,Q>
      I.DIS = ALL.DIS<1,Q>
      IF MENU = "MANUAL" THEN
         MIV.ALLOC.DIV<1,REF.NO,Q> = I.DIV:I.DEP:I.CCT
         MIV.ALLOC.AMT<1,REF.NO,Q> = I.DIS
      END ELSE
         IVC.ALLOC.DIV<1,REF.NO,Q> = I.DIV:I.DEP:I.CCT
         IVC.ALLOC.AMT<1,REF.NO,Q> = I.DIS
      END
   NEXT Q
   RETURN
9000 *
   GOSUB 11000
   ECD.NUM = 27; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.MINV = OLD.START.LINE; ECD.MAXV = LAST.LINE
   ECD.ACTION = 4; CALL SCRN.EDIT
   LN.NO = ECD.RET.VALUE
   IF LN.NO = '' OR LN.NO = 'END' THEN LN.NO = 0
   RETURN
11000 *
   START.LINE = 1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE = START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE = LINES
   IF ACTION # "D" THEN
      IF START.LINE = OLD.START.LINE THEN GOTO 11999
   END
   OLD.START.LINE = START.LINE
   CNT = 1
   FOR N = START.LINE TO LAST.LINE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:ALL.DIV<1,N> "L#2"
      P_X  := AM:7 ; P_Y := AM:SLN ; P_VALUE := AM:ALL.DEP<1,N> "L#2"
      P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:ALL.CCT<1,N> "L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOSUB 3000
      P_X  = 14 ; P_Y = SLN ; P_VALUE = GL.DESC "L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF MENU # "MANUAL" THEN
         P_X  = 45 ; P_Y = SLN ; P_VALUE = OCONV(ALL.EST<1,N>,"MD2") "R#12" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      P_X  = 58 ; P_Y = SLN ; P_VALUE = OCONV(ALL.DIS<1,N>,"MD2") "R#12" ; P_OPT = ""
      P_X  := AM:71 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(ALL.PER<1,N>,"MD4") "R#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR M = CNT TO PAGE.SIZE
      SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
   GOSUB 7000
11999 *
   RETURN
*
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
*---- END OF PROGRAM
*
99999*
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   RETURN
END
