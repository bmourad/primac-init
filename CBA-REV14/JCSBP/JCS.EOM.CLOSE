*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JCS.EOM.CLOSE
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
* TASK
*     19256 LLH 10/09/95 EOD/EOM PROCESS
*T20828 lanny 08/09/1996 * The IVC.GLA.DATE is getting overwritten with
*                          TODAY for all INVOICES processed in prior
*                          periods. 
*T20979 llh 09/12/1996 * PRODUCTION JOBS FOR THE NEXT YEAR NEED TO BE
*                        CREATED AT THE CLOSE OF THE LAST JCS FISCAL
*                        PERIOD AND NOT ATH GLS END OF YEAR. REMOVE FROM
*                        GLS.EOY.CLOSE
*T21059 lanny 10/03/1996 * Error in determining number of period for
*                          invoice purging.
*T21162 gat 10/31/1996 * FIX GLA.REF FIELD NOT BEING CLEARED
*T21177 diane 12/19/1996 * Add Close for GUI
*T21177 diane 01/22/1997 * REV11 UPG ADD CLOSE
*T21896 lanny 05/08/1997 * Fix clear hist sales data in CUST record.
*T22094 renee 08/06/1997 * Modifying program so that it will not clear
*                          data from fields 30 (sales period) or 31
*                          (sales) of the customer record at end of year.
*T22367 renee 11/25/1997 * Adding "EOM" status to FNGD.RECEIPT.HIST
*                          file.
*T22777 gat 04/23/1998 * INCREASE PURGE LIMIT TO 999 FROM 250
*T23278 markt 11/23/1998 * Make fiscal data multi-value by division
*                          code.
*T24118 cm 08/03/1999 * Correct posting problem where X-Jobs are not
*                       posting in the correct fiscal period
*T25005 lanny 04/05/2000 * Correct method of gen XJOBS
*T25670 cm 03/06/2001 * Correct leap year problem.
*T25667 lanny 03/07/2001 * Job detail files being processed and GLA
*                          dates updated regardless of DIV security.
*T25975 cmykleb 01/28/2002 * Save EOM transaction data so history
*                            reports can be run.
*T26334 epitka 03/11/2002 * REV12 - FNGDs
*T26685 lhelms 07/03/2002 * REV12 DIVISION SECURITY
*T28562 lross 05/24/2005 * Move Closing of XJOB's to this function from
*                          JCS.EOM.POST.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>SALESDATES
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>WIP.SALES.STATS
*COPY>PMC.CPYLIB>INVOICE.SALES.STATS
*COPY>PMC.CPYLIB>POST.REJECTS
*COPY>JCS.CPYLIB>JOB
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>INVOICE
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>PMC.CPYLIB>TAX
*COPY>OPS.CPYLIB>FNGD.WIP.HIST
*COPY>JCS.CPYLIB>JOB.TIME
*COPY>JCS.CPYLIB>JOB.MISC
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.MATL
*COPY>JCS.CPYLIB>JOB.SHIP
*COPY>GLS.CPYLIB>GLA
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>COA.SYS
*COPY>PMC.CPYLIB>EOM.TRANS
*COPY>PMC.CPYLIB>EOM.TRANS.HIST           ; * T25975
*COPY>ICS.CPYLIB>INV_RECEIPTS
*COPY>OPS.CPYLIB>JOB.FNGD.STATS       ; * T22367
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
***** SETUP ERRMSG ROUTINE
*
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*
*--- GET CONO
*
PROCREAD INBUFF ELSE
  ERRMSG = "MUST RUN FROM PROC"
  GOSUB 91000; GOTO 99999
END
CONO = INBUFF<1>
D.M.FLG = INBUFF<6>
IF D.M.FLG = "PERIOD" THEN
  RPT.ERR = "PERIOD"
END ELSE
  RPT.ERR = "DAY"
END
DIV.CODE = INBUFF<8>;* T23278
USER.ID = UPCASE(@LOGNAME) ;*T24507
*
**** INTITIALIZATION
*
MAT FILE.VARS = ""
MAT EDIT.COM.DRIVER = ""
TODAY = DATE()
SYS.FISCAL = "JCFISCAL"
UNKNOWN = "NOT ON FILE"
PROG.ID = @TTY[4,2]:"!":CONO:"!JCS.EOM"
*
***** OPEN FILES
*
OPEN "","CONTROL" TO CONTROL ELSE
  ERRMSG = "CONTROL FILE MISSING"
  GOSUB 91000; GOTO 99000
END
OPEN "",INBUFF<3> TO EOM.TRANS ELSE
  ERRMSG = "YOU NEED TO RUN END OF ":RPT.ERR:" POSTING BEFORE YOU CLOSE THE ":RPT.ERR
  GOSUB 91000; GOTO 99000
END
OPEN "",INBUFF<4> TO POST.REJECTS ELSE
  ERRMSG = "YOU NEED TO RUN END OF ":RPT.ERR:" REPORTS BEFORE YOU CLOSE THE MONTH"
  GOSUB 91000; GOTO 99000
END
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
OPEN "","PMC.SCREENS" TO M.SCREENS ELSE ERRMSG="PMC.SCREENS FILE IS MISSING";GOTO 93000
OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE MISSING";GOTO 93000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE MISSING";GOTO 93000
OPEN "","INVOICE" TO INVOICE ELSE ERRMSG="INVOICE FILE MISSING";GOTO 93000
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS MISSING";GOTO 93000
OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING";GOTO 93000
* T22367 v  Add open file statements
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG="JOB.FNGD.STATS FILE IS MISSING";GOTO 93000
IF FILEINFO(INV_RECEIPTS,0)=0 THEN                       
  OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE            
    ERRMSG="INV_RECEIPTS FILE IS MISSING";GOTO 93000     
  END                                                    
END                                                      
IF FILEINFO(INV_RECEIPTS_TEMP,0)=0 THEN                  
  OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE  
    ERRMSG="INV_RECEIPTS_TEMP FILE IS MISSING";GOTO 93000
  END                                                    
END                                                      
OPEN "","JOB.TIME" TO JOB.TIME ELSE ERRMSG="JOB.TIME FILE IS MISSING";GOTO 93000
OPEN "","JOB.MISC" TO JOB.MISC ELSE ERRMSG="JOB.MISC FILE IS MISSING";GOTO 93000
OPEN "","JOB.MATL" TO JOB.MATL ELSE ERRMSG="JOB.MATL FILE IS MISSING";GOTO 93000
OPEN "","JOB.OSP" TO JOB.OSP ELSE ERRMSG="JOB.OSP FILE IS MISSING";GOTO 93000
OPEN "","JOB.SHIP" TO JOB.SHIP ELSE ERRMSG="JOB.SHIP FILE IS MISSING";GOTO 93000
OPEN "","JOB.TIME.TAG" TO JOB.TIME.TAG ELSE ERRMSG="JOB.TIME.TAG FILE IS MISSING";GOTO 93000
OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS MISSING";GOTO 93000
OPEN "","INVOICE.SALES.STATS" TO INVOICE.SALES.STATS ELSE ERRMSG="INVOICE.SALES.STATS FILE IS MISSING"; GOTO 93000
OPEN "",INBUFF<7> TO WIP.SALES.STATS ELSE ERRMSG= INBUFF<7>:" FILE IS MISSING"; GOTO 93000
*T25975 v
OPEN "","JCS.EOM.TRANS.HIST" TO JCS.EOM.TRANS.HIST ELSE ERRMSG="JCS.EOM.TRANS.HIST FILE IS MISSING";GOTO 93000
*T25975 ^
*
***** GET CONO
*
MATREAD COMP.REC FROM COMPANY,CONO ELSE
  ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000
END
IF CO.ARS = "Y" THEN
  OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE MISSING";GOTO 93000
END
IF CO.OPS = 'Y' THEN
  OPEN "","FNGD.WIP.HIST" TO FNGD.WIP.HIST ELSE ERRMSG="FNGD.WIP.HIST FILE IS MISSING"; GOTO 93000
  OPEN "","FNGD_WIP_HIST_TAG" TO FNGD_WIP_HIST_TAG ELSE ERRMSG="FNGD_WIP_HIST_TAG FILE IS MISSING"; GOTO 93000
END
IF CO.GLS # "N" THEN
  IF CO.GL.LINK<1,6> = "Y" THEN
    OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93000
  END
  OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 93000
  EQV.FLG = 1
  OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
END
STMT.HEAD = "SALES & JOB COST"
*COPY>PMCBP>EOD.CLOSE
IF ECD.RET.VALUE = "END" THEN
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99000
END
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
READ CUTOFF.PER FROM CONTROL, CONO:"INVOICE.PURGE" ELSE CUTOFF.PER = 3
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE 
  PERIOD.REC = ""; PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3
IF CUTOFF.PER > NUM.PERIODS THEN
*T21059 v
* YY = INT(CUTOFF.PER / 12)
  YY = INT(CUTOFF.PER / NUM.PERIODS)
* MM = MOD(CUTOFF.PER,12)
  MM = MOD(CUTOFF.PER,NUM.PERIODS)
END ELSE
  YY = 0
  MM = CUTOFF.PER
END
*  IF FR.CURR.PER[5,2] > MM THEN;* T23278
IF FR.CURR.PER<1,POS>[5,2] > MM THEN;* T23278
*      CUTOFF.PER = FR.CURR.PER - MM;* T23278
  CUTOFF.PER = FR.CURR.PER<1,POS> - MM;* T23278
*      CUTOFF.PER = (FR.CURR.PER[1,4] - YY) : CUTOFF.PER[5,2];* T23278
  CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER[5,2];* T23278
END ELSE
  YY = YY + 1
* CUTOFF.PER = (FR.CURR.PER[5,2] + 12) - MM
*      CUTOFF.PER = (FR.CURR.PER[5,2] + NUM.PERIODS) - MM;* T23278
  CUTOFF.PER = (FR.CURR.PER<1,POS>[5,2] + NUM.PERIODS) - MM;* T23278
*T21059 ^
  CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER
*      CUTOFF.PER = (FR.CURR.PER[1,4] - YY) : CUTOFF.PER;* T23278
  CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER;* T23278
END
READ PURGE.PER FROM CONTROL, CONO:"JOB.TIME.TAG" ELSE PURGE.PER = 3
*  PURGE.PER = FR.CURR.PER[5,2] - PURGE.PER;* T23278
PURGE.PER = FR.CURR.PER<1,POS>[5,2] - PURGE.PER;* T23278
IF PURGE.PER < 1 THEN
  PURGE.PER = NUM.PERIODS + PURGE.PER
*      PURGE.PER = (FR.CURR.PER[1,4]-1):STR("0",2-LEN(PURGE.PER)):PURGE.PER;* T23278
  PURGE.PER = (FR.CURR.PER<1,POS>[1,4]-1):STR("0",2-LEN(PURGE.PER)):PURGE.PER;* T23278
END ELSE
*      PURGE.PER = FR.CURR.PER[1,4]:STR("0",2-LEN(PURGE.PER)):PURGE.PER;* T23278
  PURGE.PER = FR.CURR.PER<1,POS>[1,4]:STR("0",2-LEN(PURGE.PER)):PURGE.PER;* T23278
END
*T28562 v
FISCAL.YR=FR.CURR.PER<1,POS>[1,4]
FISCAL.PER=FR.CURR.PER<1,POS>[5,2]
LFISCAL.YR = FISCAL.YR
LFISCAL.PER = FISCAL.PER -1
IF LFISCAL.PER = 0 THEN
  LFISCAL.PER = NUM.PERIODS
  LFISCAL.YR -= 1
END
LFISCAL.PER = LFISCAL.PER'R%2'
*T28562 ^
*
***** MAIN PROCESSING
*
**** INVOICE ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING INVOICE FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
* TASK 19256
*
500 *
*
SELECT INVOICE
DATA = 1
LOOP
  READNEXT IVC.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # IVC.ID[1,3] THEN GOTO 599
  MATREADU IVC.REC FROM INVOICE, IVC.ID ELSE GOTO 599
  IF IVC.GLA.DATE = "" THEN
    RELEASE INVOICE, IVC.ID
    GOTO 599
  END
*T23278 v
  IF SECURITY.REC<2> # 'Y' THEN
    IF IVC.GLA.DATE<1,1> = "P" THEN IVC.GLA.DATE<1,1> = TODAY ; *T20828
    IF IVC.GLA.DATE<1,2> = "P" THEN IVC.GLA.DATE<1,2> = TODAY ; *T20828
  END ELSE
    READV JOBDIV FROM JOB, CONO:IVC.JOB.NO,6 THEN
      IF JOBDIV = DIV.CODE THEN
        IF IVC.GLA.DATE<1,1> = 'P' THEN IVC.GLA.DATE<1,1> = TODAY
        IF IVC.GLA.DATE<1,2> = 'P' THEN IVC.GLA.DATE<1,2> = TODAY
      END
    END
  END
*T23278 ^
  MATWRITE IVC.REC ON INVOICE, IVC.ID
599 REPEAT
*
SELECT INVOICE
WRITE "INVOICE" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT IVC.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # IVC.ID[1,3] THEN GOTO 1999
  IF CO.ARS = "Y" THEN
    READ DUMMY FROM OPEN.RECV, IVC.ID ELSE GOTO 1009
  END ELSE GOTO 1009
  GOTO 1999
1009 MATREADU IVC.REC FROM INVOICE, IVC.ID ELSE GOTO 1999
  IF IVC.GLA.DATE = "" THEN
    RELEASE INVOICE, IVC.ID
    GOTO 1999
  END
*T25667 v
  READV JOBDIV FROM JOB, CONO:IVC.JOB.NO,6 THEN
    IF SECURITY.REC<2> # "Y" OR JOBDIV = DIV.CODE THEN
      IF IVC.ID[LEN(IVC.ID)-1,2] = "PB" THEN
        IF IVC.PRE.BILL.MON # "" AND IVC.PRE.BILL.MON < CUTOFF.PER THEN
          DELETE INVOICE, IVC.ID
        END ELSE
          RELEASE INVOICE, IVC.ID
        END
      END ELSE
        IF IVC.PROC.MON < CUTOFF.PER THEN
          DELETE INVOICE, IVC.ID
        END ELSE
          RELEASE INVOICE, IVC.ID
        END
      END
    END ELSE RELEASE INVOICE, IVC.ID
  END ELSE RELEASE INVOICE, IVC.ID
*T25667 ^
1999 REPEAT
IF EOY THEN
  READ ARSFISCAL FROM CONTROL, CONO : "ARSFISCAL" ELSE
*          ARSFISCAL = FR.CURR.PER;* T23278
    ARSFISCAL<1,POS> = FR.CURR.PER<1,POS>;* T23278
  END
*      YEAR = FR.CURR.PER[1,4];* T23278
  YEAR = FR.CURR.PER<1,POS>[1,4];* T23278
  IF YEAR > ARSFISCAL<1,POS>[1,4] THEN
    YEAR = ARSFISCAL<1,POS>[1,4]
  END
  YEAR = YEAR - 2
END
**** CUSTOMER ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING CUSTOMER FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT CUSTOMER
WRITE "CUSTOMER" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT CUST.ID ELSE DATA = 0
WHILE DATA DO
  IF CUST.ID[1,3] # CONO THEN GOTO 2999
  MATREADU CUST.REC FROM CUSTOMER,CUST.ID ELSE
    RELEASE CUSTOMER, CUST.ID
    GOTO 2999
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR CUST.DIV = DIV.CODE THEN
    IF EOY THEN
      FND = 0
*T21896     FOR I = 1 TO NUM.PERIODS WHILE FND = 0
      FOR I = NUM.PERIODS TO 1 STEP -1 WHILE FND = 0
        PERIOD = YEAR : STR("0",2-LEN(I)) : I
        LOCATE PERIOD IN CUST.SALES.PER<1>,1 SETTING FND ELSE
          FND = 0
        END
      NEXT I
      IF FND THEN
        CNT = COUNT(CUST.SALES.PER,VM) + 1
        FOR I = CNT TO FND STEP -1
          IF YEAR = CUST.SALES.PER<1,I>[1,4] THEN
* T22094 v (commented out next 2 lines so that data wont clear at EOY)
*          CUST.SALES.PER = DELETE(CUST.SALES.PER,1,I,0)
*          CUST.SALES = DELETE(CUST.SALES,1,I,0)
* T22094 ^
          END
        NEXT I
      END
    END
    CJ.CNT = COUNT(CUST.JOB,VM) + (CUST.JOB # '')
* T22777
    IF CJ.CNT > 999 THEN
* T22777
      FOR CJ = CJ.CNT TO 1 STEP -1
        MATREAD JOB.REC FROM JOB, CONO : CUST.JOB<1,CJ> ELSE
          DEL CUST.JOB<1,CJ>
          DEL CUST.JOB.BAL<1,CJ>
          GOTO 2900
        END
        IF JOB.STATUS<1,1> = 9 THEN
          DEL CUST.JOB<1,CJ>
          DEL CUST.JOB.BAL<1,CJ>
        END ELSE
          IF (JOB.WIP<1,1>+0=0) AND (JOB.TOT.BAL+0=0) AND (JOB.INV.NO # "") THEN
            DEL CUST.JOB<1,CJ>
            DEL CUST.JOB.BAL<1,CJ>
          END
        END
2900  NEXT CJ
    END
  END
*25667 ^
  MATWRITE CUST.REC ON CUSTOMER,CUST.ID
2999 REPEAT
**** JOB.TIME.TAG ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING JOB DETAIL TRANS FILES FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
*
* T19256
*
SELECT JOB.MATL
DATA = 1
LOOP
  READNEXT JMT.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JMT.ID[1,3] THEN GOTO 3444
  MATREADU JMT.REC FROM JOB.MATL, JMT.ID ELSE
    RELEASE JOB.MATL, JMT.ID
    GOTO 3444
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JMT.DIV = DIV.CODE THEN
    NUM.WIP = DCOUNT(JMT.MON<1>,VM)
    FOR P = 1 TO NUM.WIP
  *          IF JMT.MON<1,P> = FR.CURR.PER THEN;* T23278
      IF JMT.MON<1,P> = FR.CURR.PER<1,POS> THEN;* T23278
        IF JMT.GLA.DATE<1,P> = 'P' THEN
          JMT.GLA.DATE<1,P> = TODAY
        END
      END
    NEXT P
  END
*T25667 ^
  MATWRITE JMT.REC ON JOB.MATL, JMT.ID
3444 REPEAT
*
*
SELECT JOB.MISC
DATA = 1
LOOP
  READNEXT JMS.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JMS.ID[1,3] THEN GOTO 3555
  MATREADU JMS.REC FROM JOB.MISC, JMS.ID ELSE
    RELEASE JOB.MISC, JMS.ID
    GOTO 3555
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JMS.DIV = DIV.CODE THEN
    NUM.WIP = DCOUNT(JMS.MON<1>,VM)
    FOR P = 1 TO NUM.WIP
  *          IF JMS.MON<1,P> = FR.CURR.PER THEN;* T23278
      IF JMS.MON<1,P> = FR.CURR.PER<1,POS> THEN;* T23278
        IF JMS.GLA.DATE<1,P> = 'P' THEN
          JMS.GLA.DATE<1,P> = TODAY
        END
      END
    NEXT P
  END
*T25667 ^
  MATWRITE JMS.REC ON JOB.MISC, JMS.ID
3555 REPEAT
*
*
SELECT JOB.OSP
DATA = 1
LOOP
  READNEXT JOS.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JOS.ID[1,3] THEN GOTO 3666
  MATREADU JOS.REC FROM JOB.OSP, JOS.ID ELSE
    RELEASE JOB.OSP, JOS.ID
    GOTO 3666
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JOS.DIV = DIV.CODE THEN
    NUM.WIP = DCOUNT(JOS.MON<1>,VM)
    FOR P = 1 TO NUM.WIP
  *          IF JOS.MON<1,P> = FR.CURR.PER THEN;* T23278
      IF JOS.MON<1,P> = FR.CURR.PER<1,POS> THEN;* T23278
        IF JOS.GLA.DATE<1,P> = 'P' THEN
          JOS.GLA.DATE<1,P> = TODAY
        END
      END
    NEXT P
  END
*T25667  ^
  MATWRITE JOS.REC ON JOB.OSP, JOS.ID
3666 REPEAT
*
*
SELECT JOB.SHIP
DATA = 1
LOOP
  READNEXT JSP.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JSP.ID[1,3] THEN GOTO 3777
  MATREADU JSP.REC FROM JOB.SHIP, JSP.ID ELSE
    RELEASE JOB.SHIP, JSP.ID
    GOTO 3777
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JSP.DIV = DIV.CODE THEN
    NUM.WIP = DCOUNT(JSP.MON<1>,VM)
    FOR P = 1 TO NUM.WIP
  *          IF JSP.MON<1,P> = FR.CURR.PER THEN;* T23278
      IF JSP.MON<1,P> = FR.CURR.PER<1,POS> THEN;* T23278
        IF JSP.GLA.DATE<1,P> = 'P' THEN
          JSP.GLA.DATE<1,P> = TODAY
        END
      END
    NEXT P
  END
*T25667  ^
  MATWRITE JSP.REC ON JOB.SHIP, JSP.ID
3777 REPEAT
*
*
SELECT JOB.TIME.TAG
DATA = 1
LOOP
  READNEXT JLB.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JLB.ID[1,3] THEN GOTO 3888
  MATREADU JLB.REC FROM JOB.TIME, JLB.ID ELSE
    RELEASE JOB.TIME, JLB.ID
    GOTO 3888
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JLB.DIV = DIV.CODE THEN
    NUM.WIP = DCOUNT(JLB.MON<1>,VM)
    FOR P = 1 TO NUM.WIP
  *          IF JLB.MON<1,P> = FR.CURR.PER THEN;* T23278
      IF JLB.MON<1,P> = FR.CURR.PER<1,POS> THEN;* T23278
        IF JLB.GLA.DATE<1,P> = 'P' THEN
          JLB.GLA.DATE<1,P> = TODAY
        END
      END
    NEXT P
  END
*T25667  ^
  MATWRITE JLB.REC ON JOB.TIME, JLB.ID
3888 REPEAT
SELECT JOB.TIME.TAG
WRITE "JOB.TIME.TAG" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT JLB.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # JLB.ID[1,3] THEN GOTO 3999
  MATREAD JLB.REC FROM JOB.TIME, JLB.ID ELSE
    MAT JLB.REC =""
  END
*T25667 v
  IF SECURITY.REC<2> # "Y" OR JLB.DIV = DIV.CODE THEN
    IF JLB.MON<1,1> > PURGE.PER THEN GOTO 3999
    TOT.WIP = 0; CNT = DCOUNT(JLB.WIP,VM)
    FOR I = 1 TO CNT
      TOT.WIP = TOT.WIP + SUM(JLB.WIP<1,I>)
    NEXT I
    IF TOT.WIP = 0 THEN
      READU DUMMY FROM JOB.TIME.TAG, JLB.ID ELSE NULL
      DELETE JOB.TIME.TAG, JLB.ID
    END
  END
*T25667  ^
3999 REPEAT
*** FNGD.WIP.HIST ***
IF CO.OPS = 'Y' THEN
  ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING FNGD_WIP_HIST_TAG FILE"
  ECD.ACTION = 5; CALL SCRN.EDIT
  WRITE "FNGD_WIP_HIST_TAG" ON CONTROL, PROG.ID
  SELECT FNGD_WIP_HIST_TAG
  DATA = 1
  LOOP
    READNEXT FWH.ID ELSE DATA = 0
  WHILE DATA DO
    IF CONO # FWH.ID[1,3] THEN GOTO 4599
    MATREADU FWH.REC FROM FNGD.WIP.HIST, FWH.ID ELSE
      MAT FWH.REC =""
    END
*T25667
    READV JOBDIV FROM JOB, FWH.ID,6 ELSE JOBDIV = ''
    IF SECURITY.REC<2> # "Y" OR JOBDIV = DIV.CODE THEN
*          LOCATE FR.CURR.PER IN FWH.GLA.PER<1>,1 SETTING PINDX THEN;* T23278
      LOCATE FR.CURR.PER<1,POS> IN FWH.GLA.PER<1>,1 SETTING PINDX THEN;* T23278
        FWH.GLA.AMT<1,PINDX> = FWH.GLA.AMT<1,PINDX> + FWH.GLA.EOD<1,PINDX>
      END
      MATWRITE FWH.REC ON FNGD.WIP.HIST, FWH.ID
      FLG = 0
      ICNT = DCOUNT(FWH.PERIOD,VM)
      FOR I = 1 TO ICNT UNTIL FLG
        JCNT = DCOUNT(FWH.PERIOD<1,I>,SVM)
        FOR J = 1 TO JCNT UNTIL FLG
*                  IF FWH.PERIOD<1,I,J> > FR.CURR.PER THEN FLG = 1;* T23278
          IF FWH.PERIOD<1,I,J> > FR.CURR.PER<1,POS> THEN FLG = 1;* T23278
        NEXT J
      NEXT I
      ICNT = DCOUNT(FWH.WIP.PER,VM)
      FOR I = 1 TO ICNT UNTIL FLG
*              IF FWH.WIP.PER<1,I> > FR.CURR.PER THEN FLG = 1;* T23278
        IF FWH.WIP.PER<1,I> > FR.CURR.PER<1,POS> THEN FLG = 1;* T23278
      NEXT I
      IF NOT(FLG) THEN
        DELETE FNGD_WIP_HIST_TAG, FWH.ID
      END
* T22367 v  Loop through JOB.FNGD.STATS and put status of "EOM"
      MATREAD JFS.REC FROM JOB.FNGD.STATS,FWH.ID ELSE MAT JFS.REC = ""
      PCNT = DCOUNT(JFS.PROD,VM)
      FOR A = 1 TO PCNT
        BCOUNT = DCOUNT(JFS.RECP<1,A>,SM)
        FOR B = 1 TO BCOUNT
          RECP = JFS.RECP<1,A,B>
          INVR.ID=CONO:RECP
          IF RECORDLOCKED(INV_RECEIPTS_TEMP,INVR.ID)=0 THEN    
            DELETE INV_RECEIPTS_TEMP,INVR.ID                   
          END                                                  
          MATREADU INVR.REC FROM INV_RECEIPTS_TEMP,INVR.ID ELSE
            MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID ELSE   
              MAT INVR.REC=''
            END                                                
          END                                                  
          IF INVR.STATUS NE "" THEN
            LOCATE "EOM" IN INVR.STATUS<1>,1 SETTING XX ELSE
              INS "EOM" BEFORE INVR.STATUS<1,1>
*              INS DATE() BEFORE INVR.STAT.DATE<1,1>
*              INS FR.CURR.PER<1,POS> BEFORE PLRS.STAT.PER<1,1>
            END
            MATWRITE INVR.REC ON INV_RECEIPTS,CONO:RECP
          END
        NEXT B
      NEXT A
    END ELSE RELEASE FNGD.WIP.HIST, FWH.ID
4599 *
  REPEAT
END
IF EOY = 0 THEN GOTO 7000
**** SHIP.VIA ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING SHIP.VIA FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT SHIP.VIA
WRITE "SHIP.VIA" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT SHPV.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # SHPV.ID[1,3] THEN GOTO 4999
  MATREADU SHIP.VIA.REC FROM SHIP.VIA, SHPV.ID ELSE
    RELEASE SHIP.VIA, SHPV.ID
    GOTO 4999
  END
  FND = 0
  FOR I = 1 TO NUM.PERIODS WHILE FND = 0
    PERIOD = YEAR : STR("0",2-LEN(I)) : I
    LOCATE PERIOD IN SHPV.PERIOD<1>,1 SETTING FND ELSE
      FND = 0
    END
  NEXT I
  IF FND THEN
    CNT = COUNT(SHPV.PERIOD,VM) + 1
    FOR I = CNT TO FND STEP -1
      IF YEAR = SHPV.PERIOD<1,I>[1,4] THEN
        SHPV.PERIOD = DELETE(SHPV.PERIOD,1,I,0)
        SHPV.SHPMT = DELETE(SHPV.SHPMT,1,I,0)
        SHPV.COST = DELETE(SHPV.COST,1,I,0)
        SHPV.SALE = DELETE(SHPV.SALE,1,I,0)
      END
    NEXT I
  END
  MATWRITE SHIP.VIA.REC ON SHIP.VIA, SHPV.ID
4999 REPEAT
**** TAX ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING TAX FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT TAX
WRITE "TAX" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT TAX.ID ELSE DATA = 0
WHILE DATA DO
  IF CONO # TAX.ID[1,3] THEN GOTO 5999
  MATREADU TAX.REC FROM TAX, TAX.ID ELSE
    RELEASE TAX, TAX.ID
    GOTO 5999
  END
  FND = 0
  FOR I = 1 TO NUM.PERIODS WHILE FND = 0
    PERIOD = YEAR : STR("0",2-LEN(I)) : I
    LOCATE PERIOD IN TAX.PERIOD<1>,1 SETTING FND ELSE
      FND = 0
    END
  NEXT I
  IF FND THEN
    CNT = COUNT(TAX.PERIOD,VM) + 1
    FOR I = CNT TO FND STEP -1
      IF YEAR = TAX.PERIOD<1,I>[1,4] THEN
        TAX.PERIOD = DELETE(TAX.PERIOD,1,I,0)
        TAX.TAXABLE = DELETE(TAX.TAXABLE,1,I,0)
        TAX.CHARGED = DELETE(TAX.CHARGED,1,I,0)
      END
    NEXT I
  END
  MATWRITE TAX.REC ON TAX, TAX.ID
5999 REPEAT
7000 IF CO.GLS = "N" THEN GOTO 8000
IF CO.GL.LINK<1,6> # "Y" THEN GOTO 8000
**** EOM.TRANS (1) ****
ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (1) FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
ACCOUNTS = ""; AMOUNTS = ""; SOURCES = ""
SELECT EOM.TRANS
WRITE "EOM.TRANS (1)" ON CONTROL, PROG.ID
MAT GLA.REC = ""
GLA.DATE = TODAY
GLA.MON = FR.CURR.PER<1,POS>;* T23278
ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/");* T23278
READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 0
WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
MATREAD CSY.REC FROM CONTROL, CONO : "COA.SYS" ELSE MAT CSY.REC = ""
DATA = 1
LOOP
  READNEXT ETR.ID ELSE DATA = 0
WHILE DATA DO
  IF ETR.ID[1,3] # CONO THEN GOTO 7200
  MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7100
  TYPE = FIELD(ETR.ID,"!",2)
  SRC = FIELD(TYPE,'-',1)
  TYPE = FIELD(FIELD(TYPE,'-',2),"*",1)
  ACCT = ETR.ID[1,ACCT.LEN]
  IF SRC = "SA" THEN
    SRC = "SJ"
  END ELSE
    SRC = "WP"
  END
  LOCATE SRC IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL
  L.GLA = CSY.LEVEL<1,FND>
  CUST.NO = ETR.REF
  IF EQV.FLG = 1 THEN
    READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
    ACCT = N.ACCT
  END
  COA.ID = ACCT[11,IN.ACCT.LEN]
  MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
    MAT COA.REC = ""
    COA.DESC = UNKNOWN
  END
  BEGIN CASE
    CASE L.GLA = "R"
      BEGIN CASE
        CASE COA.DETAIL = "R" OR COA.DETAIL = "D"
          LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
          WHILE DUMMY # "" DO REPEAT
          GLA.DESC = COA.DESC "L#25" : ODATE
          GLA.SRC = SRC
          GLA.AMT = ETR.AMT
          GLA.REF = CUST.NO
          MATWRITE GLA.REC ON GLA, GLA.ID
        CASE 1
          PTR = 1
          LOOP
            LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
              ACCOUNTS<FND> = ACCT
              AMOUNTS<FND> = ""
              SOURCES<FND> = SRC
            END
            IF SOURCES<FND> = SRC THEN
              PTR = 0
            END ELSE
              PTR = FND + 1
            END
          WHILE PTR DO REPEAT
          IF TYPE = "D" THEN
            AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
          END ELSE
            AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
          END
      END CASE
    CASE L.GLA = "D"
      JOB.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
      BEGIN CASE
        CASE COA.DETAIL = "D"
          TCNT = COUNT(ETR.TRAN,VM) + (ETR.TRAN # "")
          FOR I = 1 TO TCNT
            LOOP
              COUNTER = COUNTER + 1
              IF COUNTER > 999998 THEN COUNTER = 1
              GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
              READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
            WHILE DUMMY # "" DO REPEAT
            GLA.DESC = ETR.RDATE<1,I> "L#8" : ETR.TRAN<1,I> : "-" : JOB.NO
            GLA.SRC = SRC
            GLA.DESC = GLA.DESC "L#25" : " " : OCONV(ETR.DATE<1,I>,"D2/")
            GLA.AMT = ETR.TAMT<1,I>
            GLA.REF = CUST.NO
            MATWRITE GLA.REC ON GLA, GLA.ID
          NEXT I
        CASE COA.DETAIL = "R"
          LOOP
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
            READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
          WHILE DUMMY # "" DO REPEAT
          GLA.DESC = COA.DESC "L#25" : ODATE
          GLA.AMT = ETR.AMT
          GLA.SRC = SRC
          GLA.REF = CUST.NO
          MATWRITE GLA.REC ON GLA, GLA.ID
        CASE 1
          PTR = 1
          LOOP
            LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
              ACCOUNTS<FND> = ACCT
              AMOUNTS<FND> = ""
              SOURCES<FND> = SRC
            END
            IF SOURCES<FND> = SRC THEN
              PTR = 0
            END ELSE
              PTR = FND + 1
            END
          WHILE PTR DO REPEAT
          IF TYPE = "D" THEN
            AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
          END ELSE
            AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
          END
      END CASE
    CASE 1
      PTR = 1
      LOOP
        LOCATE ACCT IN ACCOUNTS,PTR SETTING FND ELSE
          ACCOUNTS<FND> = ACCT
          AMOUNTS<FND> = ""
          SOURCES<FND> = SRC
        END
        IF SOURCES<FND> = SRC THEN
          PTR = 0
        END ELSE
          PTR = FND + 1
        END
      WHILE PTR DO REPEAT
      IF TYPE = "D" THEN
        AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
      END ELSE
        AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
      END
  END CASE
7100 RELEASE EOM.TRANS, ETR.ID
7200 REPEAT
7400*       RELEASE EOM.TRANS, ETR.ID
7500*    REPEAT
GLA.REF = "" ; * T21162
ACNT = COUNT(ACCOUNTS,AM) + (ACCOUNTS # "")
FOR I = 1 TO ACNT
  IF EQV.FLG = 1 THEN
    READ ACCT FROM COA.EQUIV, ACCOUNTS<I> ELSE ACCT = ACCOUNTS<I>
  END ELSE
    ACCT = ACCOUNTS<I>
  END
  COA.ID = CONO : ACCT[11,IN.ACCT.LEN]
  MATREAD COA.REC FROM COA, COA.ID ELSE COA.DESC = UNKNOWN
  GLA.DESC = COA.DESC "L#25" : ODATE
  GLA.SRC = SOURCES<I>
  FOR J = 1 TO 2
    IF AMOUNTS<I,J> = "" THEN GOTO 7900
    LOOP
      COUNTER = COUNTER + 1
      IF COUNTER > 999998 THEN COUNTER = 1
      GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
      READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
    WHILE DUMMY # "" DO REPEAT
    GLA.AMT = AMOUNTS<I,J>
    MATWRITE GLA.REC ON GLA, GLA.ID
7900 NEXT J
NEXT I
ACCOUNTS = ""; AMOUNTS = ""; SOURCES = ""
WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
**** EOM.TRANS (2) ****
8000 ECD.NUM = 14; SCV.REC(ECD.NUM)<1> = "NOW PROCESSING EOM.TRANS (2) FILE"
ECD.ACTION = 5; CALL SCRN.EDIT
SELECT EOM.TRANS
WRITE "EOM.TRANS (2)" ON CONTROL, PROG.ID
DATA = 1
LOOP
  READNEXT ETR.ID ELSE DATA = 0
WHILE DATA DO
  IF ETR.ID[1,3] # CONO THEN GOTO 8999
  MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
    RELEASE EOM.TRANS, ETR.ID
    GOTO 8999
  END
  TYPE = FIELD(FIELD(ETR.ID,"!",2),"-",1)
  JOBNO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
  IF JOBNO # "" THEN
    JOB.ID = CONO : JOBNO
    MATREADU JOB.REC FROM JOB, JOB.ID ELSE
      RELEASE EOM.TRANS, ETR.ID
      RELEASE JOB, JOB.ID
      GOTO 8999
    END
    BEGIN CASE
      CASE TYPE = "SA"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
      CASE TYPE = "LB"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
        JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> - ETR.CNTR
      CASE TYPE = "MT"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
        JOB.MT.WIP<1,1> = JOB.MT.WIP<1,1> - ETR.CNTR
      CASE TYPE = "OS"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
        JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> - ETR.CNTR
      CASE TYPE = "SP"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
        JOB.SP.WIP<1,1> = JOB.SP.WIP<1,1> - ETR.CNTR
      CASE TYPE = "MS"
        JOB.WIP<1,1> = JOB.WIP<1,1> - ETR.CNTR
        JOB.MS.WIP<1,1> = JOB.MS.WIP<1,1> - ETR.CNTR
      CASE TYPE = "FG"
      CASE 1
        RELEASE EOM.TRANS, ETR.ID
        RELEASE JOB, JOB.ID
        GOTO 8999
    END CASE
    MATWRITE JOB.REC ON JOB, JOB.ID
  END
  CURR.PER = FR.CURR.PER<1,POS>
  MAT ETH.REC = MAT ETR.REC
  DONE = 0
  SEQ = 0
  ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER
  LOOP UNTIL DONE = 1 DO
    SEQ = SEQ + 1
    ETH.KEY = ETH.ID:"*":SEQ
    READ CHECKIT FROM JCS.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1
  REPEAT
  MATWRITE ETH.REC ON JCS.EOM.TRANS.HIST, ETH.KEY
  DELETE EOM.TRANS, ETR.ID
8999 REPEAT
WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
* T26685
* WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>;* T23278
WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID;* T23278
SELECT EOM.TRANS
READNEXT ETR.ID ELSE
  GOSUB 2000
  WRITE "UPDATE.SALES.STATS" ON CONTROL, PROG.ID
  IF D.M.FLG = "PERIOD" THEN
    GOSUB CLOSE.XJOBS ;*T28562
    FR.CURR.DATE<1,POS> = FR.NEXT.DATE<1,POS>
    FR.CURR.PER<1,POS> = FR.NEXT.PER<1,POS>
    FR.CLOSE.DATE<1,POS> = TODAY
***** T23278 ^
  END
  FR.NEXT.PER<1,POS> = ""; FR.NEXT.DATE<1,POS> = ""; FR.PRINT<1,POS> = ""
  FR.D.M.FLG<1,POS> = ""
***** T23278 ^
  MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
  IF EOY THEN
    READ PRODUCTION.REC FROM CONTROL, CONO:FR.CURR.PER<1,POS>[1,4]:"PRODUCTION.WEEKS" ELSE
*T24118 ^
      PRODUCTION.REC = ""
      WRITE PRODUCTION.REC ON CONTROL, CONO:FR.CURR.PER<1,POS>[1,4]:"PRODUCTION.WEEKS"
    END
*T25005 v
    NUM.DIV = DCOUNT(PRODUCTION.REC<7>,VM)
    NUM.PRODUCTION = DCOUNT(PRODUCTION.REC<1>,VM)
    PDATE     = OCONV(PRODUCTION.REC<1,1>,"D2-")
    YEAR.BUILD = FR.CURR.PER<1,POS>[3,2]
    FOR D = 1 TO NUM.DIV
      DIV.NUM = PRODUCTION.REC<7,D>
*T24507 v
      IF SECURITY.REC<2> = 'Y' THEN
        IF DIV.NUM # DIV.CODE THEN GOTO 19990
      END
      IF SECURITY.REC<1> = 'Y' THEN
        ERRMSG=''
        CALL CK.DIV.SEC.SUB(CONO,DIV.NUM,USER.ID,ERRMSG)
        IF ERRMSG # '' THEN GOTO 19990
      END
*T24507 ^
      FOR P = 1 TO NUM.PRODUCTION
        LOCATE PRODUCTION.REC<2,P> IN PRODUCTION.REC<2>,1 BY "AR" SETTING STRT ELSE STRT = P
        W = P - STRT + 1
        IF W > 5 THEN W = 5
        P.SEQ = W
        JOB.KEY = CONO:"X":YEAR.BUILD:PRODUCTION.REC<2,P>"R%2":DIV.NUM:P.SEQ
        MAT JOB.REC = ""
        MATREAD JOB.REC FROM JOB, JOB.KEY ELSE
          MAT JOB.REC = ""
          JOB.MASTER = JOB.KEY[4,8]
          JOB.CUST   = PRODUCTION.REC<3>
          JOB.SLSMN  = PRODUCTION.REC<4>
          JOB.DIV    = DIV.NUM
          JOB.COLORS = PRODUCTION.REC<6>
          JOB.CATG   = PRODUCTION.REC<5>
          JOB.TRACK.DATE<1,1> = PRODUCTION.REC<1,P>
          JOB.TRACK.DATE<1,2> = PRODUCTION.REC<1,P>
          JOB.TRACK.DATE<1,3> = PRODUCTION.REC<1,P>
          JOB.TYPE            = "N"
          MATWRITE JOB.REC ON JOB, JOB.KEY
          CFND = 1
          MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CFND = 0
          IF CFND THEN
            LOCATE JOB.KEY[4,8] IN CUST.JOB<1>,1 SETTING JFND ELSE NULL
            CUST.JOB.BAL<1,JFND> = JOB.CONF.AMT
            CUST.JOB<1,JFND> = JOB.KEY[4,8]
          END
          MATWRITE CUST.REC ON CUSTOMER,CONO:JOB.CUST
        END
      NEXT P
19990*
    NEXT D
*T25005 ^
    FOR K = 2 TO NUM.PERIODS+ 1
      NEW.DATE = OCONV(SALESDATES.REC(K)<1,1>,"D/")
*T25670 v
*           NEW.DATE = NEW.DATE[1,6] : NEW.DATE[7,4] + 1
      IF NEW.DATE[1,5] = '02/29' THEN
        NEW.DATE = '02/28/' : NEW.DATE[7,4] + 1
      END ELSE
        NEW.DATE = NEW.DATE[1,6] : NEW.DATE[7,4] + 1
      END
*T25670 ^
      SALESDATES.REC(K)<1,1> = ICONV(NEW.DATE,"D/")
    NEXT K
  END
***** T23278 v
*      SALD.CURR = FR.CURR.PER[5,2]:VM:SALESDATES.REC(FR.CURR.PER[5,2]+1)
*      MATWRITE SALESDATES.REC ON CONTROL,CONO:"SALESDATES"
  ALL.DIVS.CLOSED = 1
*C35297 23278 v
  LST.PER.CLOSED = FR.CURR.PER<1,1>
  IF SECURITY.REC<2> = 'Y' THEN
    FOR I = 2 TO ALL.DIVS.COUNT
      IF FR.CURR.PER<1,I> > LST.PER.CLOSED THEN LST.PER.CLOSED = FR.CURR.PER<1,I>
    NEXT I
    FOR I = 1 TO ALL.DIVS.COUNT UNTIL NOT(ALL.DIVS.CLOSED)
*          IF FR.CURR.PER<1,I>[5,2] <= SALD.CURR<1> THEN ALL.DIVS.CLOSED = 0
      IF FR.CURR.PER<1,I> < LST.PER.CLOSED THEN ALL.DIVS.CLOSED = 0
    NEXT I
  END
  IF ALL.DIVS.CLOSED THEN
*        SALD.CURR = FR.CURR.PER<1,POS>[5,2]:VM:SALESDATES.REC(FR.CURR.PER<1,POS>[5,2]+1)
    SALD.CURR = LST.PER.CLOSED[5,2]:VM:SALESDATES.REC(FR.CURR.PER<1,POS>[5,2]+1)
*C35297 23278 ^
    MATWRITE SALESDATES.REC ON CONTROL,CONO:"SALESDATES"
  END
***** T23278 ^
  DELETE CONTROL, PROG.ID
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  GOTO 99999
END
*  FR.PRINT = "X";* T23278
FR.PRINT<1,POS> = "X";* T23278
MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
ERRMSG = "E R R O R !!! CANNOT LOCATE ALL JOB TRANSACTIONS"
ECD.ACTION = 99 ; CALL SCRN.EDIT
GOTO 93000
*-----------
*
2000*    UPDATE SALES ANALYSIS
*
*-----------
SELECT WIP.SALES.STATS
LOOP
  READNEXT ID ELSE EXIT
  MATREAD WSS.REC FROM WIP.SALES.STATS,ID ELSE 
    MAT WSS.REC = ''
  END
  MATREADU ISS.REC FROM INVOICE.SALES.STATS,ID ELSE
    MAT ISS.REC=''
  END
  ISS.INVOICE.NO = FIELD(ID,"_",4)
  IF ISS.INVOICE.NO[7,2] = "XX" THEN ISS.INVOICE.NO = ISS.INVOICE.NO[1,6]
  ISS.INVOICE.DATE = WSS.INVOICE.DATE
  ISS.CUST.ID = WSS.CUST.ID
  ISS.SLSM.ID = WSS.SLSM.ID
  ISS.SALES.CODE = WSS.SALES.CODE
  ISS.JOB.CAT = WSS.JOB.CAT
  ISS.MASTER = WSS.MASTER
  ISS.NO.COLORS = WSS.NO.COLORS
  ISS.POSTING.MONTH = WSS.POSTING.MONTH
  ISS.LABOR.DCOST = ISS.LABOR.DCOST + WSS.LABOR.DCOST
  ISS.LABOR.FFOH = ISS.LABOR.FFOH + WSS.LABOR.FFOH
  ISS.LABOR.VFOH = ISS.LABOR.VFOH + WSS.LABOR.VFOH
  ISS.LABOR.SAOH = ISS.LABOR.SAOH + WSS.LABOR.SAOH
  ISS.OSP.DCOST = ISS.OSP.DCOST + WSS.OSP.DCOST
  ISS.OSP.FFOH = ISS.OSP.FFOH + WSS.OSP.FFOH
  ISS.MATL.DCOST = ISS.MATL.DCOST + WSS.MATL.DCOST
  ISS.MATL.FFOH = ISS.MATL.FFOH + WSS.MATL.FFOH
  ISS.MATL.VFOH = ISS.MATL.VFOH + WSS.MATL.VFOH
  ISS.SHIP.DCOST = ISS.SHIP.DCOST + WSS.SHIP.DCOST
  ISS.SHIP.FFOH = ISS.SHIP.FFOH + WSS.SHIP.FFOH
  ISS.MISC.DCOST = ISS.MISC.DCOST + WSS.MISC.DCOST
  ISS.MISC.FFOH = ISS.MISC.FFOH + WSS.MISC.FFOH
  ISS.COST.TOTAL = ( ISS.LABOR.DCOST + ISS.LABOR.FFOH  + ISS.LABOR.VFOH  + ISS.LABOR.SAOH  + ISS.MATL.DCOST  + ISS.MATL.FFOH   + ISS.MATL.VFOH   + ISS.OSP.DCOST   + ISS.OSP.FFOH    + ISS.SHIP.DCOST  + ISS.SHIP.FFOH   + ISS.MISC.DCOST  + ISS.MISC.FFOH   )
  MATWRITE ISS.REC ON INVOICE.SALES.STATS,ID
  DELETE WIP.SALES.STATS,ID
REPEAT
RETURN
*T28562 v
************
CLOSE.XJOBS:
************
SELECT JOB
LOOP
  READNEXT JOB.ID ELSE EXIT
  IF JOB.ID[1,4] # CONO:"X" THEN CONTINUE
  IF JOB.ID[5,4] > FISCAL.YR[3,2]:FISCAL.PER OR JOB.ID[5,4] < LFISCAL.YR[3,2]:LFISCAL.PER THEN CONTINUE
  MATREADU JOB.REC FROM JOB, JOB.ID ELSE RELEASE JOB,JOB.ID ; CONTINUE
  IF JOB.TYPE # 'N' THEN RELEASE JOB,JOB.ID; CONTINUE
  IF SECURITY.REC<2> = 'Y' THEN
    IF JOB.ID[9,2] # DIV.CODE THEN RELEASE JOB,JOB.ID ; CONTINUE
  END
  IF SECURITY.REC<1> = 'Y' THEN
    ERRMSG=''
    CALL CK.DIV.SEC.SUB(CONO,JOB.ID[9,2],USER.ID,ERRMSG)
    IF ERRMSG # '' THEN RELEASE JOB,JOB.ID ; CONTINUE
  END
  IF SUM(JOB.WIP<1,2>) = 0 THEN
    IF JOB.STATUS<1,1> # 4 AND JOB.STATUS<1,1> < 6 THEN
      JOB.TRACK.DATE<1,10> = DATE()
      INS '4' BEFORE JOB.STATUS<1,1>
      INS DATE() BEFORE JOB.STAT.DATE<1,1>
    END
  END
  MATWRITE JOB.REC ON JOB, JOB.ID
REPEAT
RETURN
*T28562 ^
********************************************************************
91000 ERR.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 WRITEV ERRMSG ON CONTROL, PROG.ID,2
ERR.TYPE = 3
CALL SYSCOM(MAT SYSCOM.REC)
99000 INBUFF<5> = "END"
PROCWRITE INBUFF
*** END OF JOB ***
99999 END
