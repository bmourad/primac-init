*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - OSP.MAINT
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 02/15/84
* DESCRIPTION -
* COMMENT     - REVISED TO REFLECT JOB.STATUS '5' - "REOPENED"
*             -   TASK #12907 (RRG)
* 04/16/92 DLG TASK 16414 - ALLOW MULTIPLE JOBS TO OUTSIDE.PO
*                         - ADDED COMMUNSCREEN & TAXABLE FLAG,NO AMOUNT
* 04/28/92 DLG TASK 16414 - CHECK JOB STATUS/GET AUTH IF NEEDED.
* 18746 RKB 01/27/94 * INV AMOUNT NOT CONSIDERING U/M OF M
* 18960 GAT 03/06/95 * FIX TO CCTR CHANGE TO THEN GOTO OPER CHANGE
*T21006 lanny 09/23/1996 * If unit-cost changed the extended cost/sale
*                          should also change accordingly.
*T21670 julie 03/04/1997 * A UNIT OF MEASURE IS NEEDED ON THE SCREEN FOR
*                          WHEN AN OPO WAS NOT ENTERED
*T21695 lanny 03/10/1997 * Update XREF on PO#.
*T21704 lanny 03/12/1997 * 1st line of line comment not appearing in
*                          scroll area.
*T21692 cls 05/15/1997 * Change the outside.po.xref to use a new screen
*T22025 lanny 06/19/1997 * Uninit var created by T21692.
*T22288 rick 10/15/1997 * Year 2000 compliance. check that date calcs
*                         use four digit year.
*T21177 diane 05/12/1998 * UPDATE FOR REV11 THAT WAS OVERLAID
*T23278 markt 10/01/1998 * Check for divisional security
*T25097 gat 04/19/2000 * If change of qty goto change unit price.
*T23319 alex 04/27/2000 * Fix calculation for UOM Type 'C', it's
*                         defaulting as a 'EA' Type.
*T25755 cm 04/16/2001 * Modify the pgm to recognize when there are two
*                       or more lines in a PO that have the same JOB
*                       and OPO.PROD.LINE The user will need to choose
*                       which detail line to use on this receipt. The
*                       seq number from the po will need to be stored
*                       in this record so that when the received
*                       number in OUTSIDE.PO is updated then the
*                       correct line can be updated.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26565 lhelms 04/25/2002 * Make change to default to open qty see task
*                           26557 Rev11
*T26556 ajibaly 05/10/2002 * Remove second vendor fields
*T26631 cmykleb 05/31/2002 * If job is an "OUTSIDE JOB" it should not
*                            check for a division match.
*T26620 cmykleb 06/05/2002 * If a line has already been received on
*                            an outside po, then a warning message
*                            should display warning the user that
*                            that line has already been received, but
*                            allow the user to continue if desired.
*T27521 cmykleb 06/24/2003 * Correct problem with entry of description
*                            line that only SAH would complain about.
*********************************************************************
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>JCS.CPYLIB>OPERATION
*COPY>JCS.CPYLIB>JOB.CUTOFF.NO
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.OSP
*COPY>PMC.CPYLIB>VEND
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>JCS.CPYLIB>WIP.LEVEL
*COPY>JCS.CPYLIB>FOH.TABLE
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>JCS.CPYLIB>JOB.STAT.CODE
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>CPYLIB>CHAR
   DIM L.VOU(5)
   SYS.TYPE=1
   CALL SYSCOM(MAT SYSCOM.REC)
   MAT FILE.VARS=''
   OPEN '', 'JCS.SCREENS' TO M.SCREENS ELSE ERRMSG='JCS.SCREENS FILE IS MISSING';GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE IS MISSING';GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG='PREFIX FILE IS MISSING';GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING';GOTO 93000
   OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG='JOB.STATS FILE IS MISSING';GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='DEPARTMENT FILE IS MISSING';GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE IS MISSING';GOTO 93000
   OPEN '','OPERATION' TO OPERATION ELSE ERRMSG='OPERATION FILE IS MISSING';GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG='VEND FILE IS MISSING';GOTO 93000
   OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG='SPOILAGE.CODES FILE IS MISSING';GOTO 93000
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG='CATEGORY.OSP FILE IS MISSING';GOTO 93000
   OPEN '','FOH.TABLE' TO FOH.TABLE ELSE ERRMSG='FOH.TABLE FILE IS MISSING';GOTO 93000
   OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG='VENDOR.XREF FILE IS MISSING';GOTO 93000
   OPEN '','DAILY.OSP' TO DAILY.OSP ELSE ERRMSG='DAILY.OSP FILE IS MISSING';GOTO 93000
   OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG='JOB.OSP FILE IS MISSING';GOTO 93000
   OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG='JOB.STAT.CODE FILE IS MISSING';GOTO 93000
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG='XREF.DATA FILE IS MISSING';GOTO 93000
*T25396
   VAL.CAT = ""
   PO.LINE.NO = ""
   PO.NUM = ""
   OPO.FND = 0
*T36922
   MAT COMP.REC=''
   CONO=''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO='END' THEN GOTO 99999
   IF CO.APS.O.INTRF > 2 THEN
      OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
         ERRMSG = 'VEND.PROD.STATS FILE IS MISSING'
         GOSUB 93000
      END
   END
   MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE
      MAT JOB.CUTOFF.REC=''
      J.CUTOFF.NUM=0
   END
   IF CO.POS="Y" THEN
      OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG='OUTSIDE.PO FILE IS MISSING';GOTO 93000
   END
   MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
      MAT WIP.LEVEL.REC=0
      WLR.OS.COST=2;WLR.OS.WIP=2
   END
   MAT EDIT.COM='' ;MAT EDIT.COM.DRIVER='' ;MAT GEN.XREF.REC=''
   DASHES=STR('-',80)
   ERRMSG=''
   UNKNOWN=STR('?',30)
   BEGIN.PAGE=19;PAGE.SIZE=2;LINE.SPACE=1
   GXR.CO=CONO
   ECD.SCRN.CNT=2
   ECD.SCRN.NAME<1>='OSP.MAINT'
*T21692
   ECD.SCRN.NAME<2> = 'OUTSIDE.PO.XREF'
   ECD.ACTION=1;CALL SCRN.EDIT
   ECD.SCRN.NO=1
100*
   RELEASE   ;* T26126
   MAT JOB.REC='';MAT DOS.REC='';MAT DIV.REC='';MAT DEPT.REC=''
   MAT CCTR.REC='';MAT OPER.REC='';MAT OPO.REC='';MAT CAOS.REC=''
   MAT JSI.REC='';MAT SCV.REC=''; MAT VPDS.REC = ''
   VPDS.PRESENT = 0; REQUEST = ''
   TST = 1
   COST.CHG=0 ;*T21006
   LINES=0;LN=1;OLD.START.LINE=0
   ECD.ACTION=6;CALL SCRN.EDIT
   ECD.NUM=5
   ECD.VALDAT.CODE=5;ECD.VALDAT.FILE=DAILY.OSP;ECD.PREFIX.ID=CONO   ;* T26126
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         GOTO 99999
      CASE ECD.RET.VALUE='N'
         DOS.SEQ.NO=ECD.RET.VALUE
         ECD.ACTION=5;CALL SCRN.EDIT
         GOSUB 200
         IF ECD.RET.VALUE="END" THEN GOTO 100
      CASE ECD.VALDAT.ITEM # ''
         FOR I=1 TO DOS.REC.SIZE
            DOS.REC(I)=ECD.VALDAT.ITEM<I>
         NEXT I
*T23278 v
         DIV.CODE = DOS.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
         CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
         IF ERRMSG # '' THEN
            GOSUB 91000; GOTO 100
         END
*T23278 ^
         DOS.SEQ.NO=ECD.RET.VALUE
         LINES=COUNT(DOS.DESC,VM) + (DOS.DESC # "")
         POST.OSJ=0
         MATREAD JOB.REC FROM JOB, CONO:DOS.JOB ELSE
            MAT JOB.REC=''
            FND=0
            IF NUM(DOS.JOB) THEN
               IF DOS.JOB < J.CUTOFF.NUM THEN FND=1
            END ELSE
               JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
               FOR L=1 TO JC.CNT WHILE FND=0
                  PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
                  IF J.CUTOFF.PREFIX<1,L>=DOS.JOB[1,PREFX.LEN] THEN
                     CHK.VALUE=DOS.JOB[PREFX.LEN+1,LEN(DOS.JOB)-PREFX.LEN]
                     IF NUM(CHK.VALUE) THEN
                        IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
                     END
                  END
               NEXT L
            END
            IF FND=1 THEN
               JOB.DESC<1,1>='* * OUTSIDE JOB * *'
               POST.OSJ=1
            END ELSE
               JOB.DESC<1,1>=UNKNOWN
            END
         END
         IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN
            MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
               CUST.NAME=UNKNOWN
            END
            JOB.DESC<1,1>=CUST.NAME
         END
         MATREAD DIV.REC FROM DIVISION, CONO:DOS.DIV ELSE DIV.DESC=UNKNOWN
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:DOS.DEPT ELSE DEPT.DESC=UNKNOWN
         MATREAD CCTR.REC FROM COST.CNTR, CONO:DOS.CCTR ELSE CCTR.DESC=UNKNOWN
         IF CCTR.TYPE='F' THEN CCTR.DESC="THIS COST CENTER IS FROZEN"
         MATREAD OPER.REC FROM OPERATION, CONO:DOS.OPER ELSE OPER.DESC=UNKNOWN
*T26556 v
*   IF LEN(DOS.VEND)=8 THEN
*     FOUND=1
*     MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0
*     IF FOUND THEN
*       SCV.REC(17)<1>=DOS.VEND
*       SCV.REC(19)<1>=VEND.DESC
*       SCV.REC(21)<1>=VEND.ADDR1
*       SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
*     END
*   END
*T26556 ^
         FOUND=1
         MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE
            MAT VEND.REC='';VEND.DESC=UNKNOWN
            VEND.DISC='';VEND.NET='';DISP.TERMS='';FOUND=0
         END
*T26556 v
*   IF FOUND THEN
*     SCV.REC(17)<1>=DOS.VEND
*     SCV.REC(19)<1>=VEND.DESC
*     SCV.REC(21)<1>=VEND.ADDR1
*     SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
*     ECD.ACTION = 3; CALL SCRN.EDIT
*   END
*T26556 ^
         IF CO.POS="Y" THEN
            MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE
               MAT OPO.REC=''
            END
         END
         MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:DOS.PRD.LINE ELSE
            MAT CAOS.REC=''
         END
         SCV.REC(6)<1>=DOS.JOB
         SCV.REC(7)<1>=JOB.DESC<1,1>
         SCV.REC(8)<1>=DOS.DIV
         SCV.REC(9)<1>=DIV.DESC
         SCV.REC(10)<1>=DOS.DEPT
         SCV.REC(11)<1>=DEPT.DESC
         SCV.REC(12)<1>=DOS.CCTR
         SCV.REC(13)<1>=CCTR.DESC
         SCV.REC(14)<1>=DOS.OPER
         SCV.REC(15)<1>=OPER.DESC
         SCV.REC(16)<1>=DOS.VEND
         SCV.REC(18)<1>=VEND.DESC
         SCV.REC(20)<1>=VEND.ADDR1
         SCV.REC(22)<1>=VEND.CT.ST:' ':VEND.ZIP
         SCV.REC(24)<1>=DOS.TYPE
         SCV.REC(25)<1>=DOS.SPOIL.CODE
         BEGIN CASE
            CASE DOS.TYPE='N'
               SCV.REC(40)<ECD.SCRN.NO>="NON CHARGEABLE"
            CASE DOS.TYPE='S'
               SCV.REC(40)<ECD.SCRN.NO>="SPOILAGE"
               READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:DOS.SPOIL.CODE ELSE SPOIL.CODE.DESC="SPOIL CODE UNKNOWN"
               SCV.REC(41)<1>=SPOIL.CODE.DESC
            CASE DOS.TYPE='C'
               SCV.REC(40)<ECD.SCRN.NO>="CHANGE ORDER"
            CASE 1
               SCV.REC(40)<ECD.SCRN.NO>="REGULAR"
         END CASE
         SCV.REC(42)<1>=CAOS.DESC
         SCV.REC(26)<1>=DOS.PO
         SCV.REC(27)<1>=DOS.QTY
         SCV.REC(43)<1>=DOS.DATE
         SCV.REC(28)<1>=DOS.INV
         SCV.REC(29)<1>=DOS.INV.DATE
         SCV.REC(30)<1>=DOS.GRS.AMT
         SCV.REC(37)<1>=DOS.PRD.LINE
         SCV.REC(38)<1>=DOS.SALE.AMT
         SCV.REC(56)<1>=DOS.U.PRICE
         SCV.REC(57)<1>=DOS.UOM ; * T21670
*T25755 v
         IF OPO.JOB.NO = '' THEN DOS.PRD.SEQ = 1
         SCV.REC(31)<1> = DOS.PRD.SEQ
*T25755 ^
         ECD.ACTION = 3; CALL SCRN.EDIT
         GOSUB 21000
         IF DOS.INIT="" THEN
            GOSUB 22000
            IF VALUE="END" THEN GOTO 100
         END
      CASE 1
         ERRMSG='* * INVALID SEQUENCE # * *'
         GOSUB 91000
         GOTO 100
   END CASE
   MORE=1
   LOOP
      IF DOS.ORIGIN THEN
         ECD.NUM = 55
      END ELSE
         ECD.NUM=36
      END
      SCV.REC(ECD.NUM)<1>=''
      ECD.ACTION=4;CALL SCRN.EDIT
      REQUEST=ECD.RET.VALUE
      BEGIN CASE
         CASE REQUEST='END' OR REQUEST='E'
            MORE=0
         CASE NUM(REQUEST)
            ON REQUEST GOSUB 250,300,3000,1000,2000,4000,5900,7000,9000,9500,9900,10000
         CASE REQUEST='D'
            DELETE DAILY.OSP, CONO:DOS.SEQ.NO
            MORE=0
         CASE REQUEST='F'
            IF DOS.SEQ.NO="N" THEN
               READU OSP.ENT.SEQ FROM CONTROL , CONO:"DAILY.OSP" ELSE OSP.ENT.SEQ=10001
               LOOP
                  READ CK.FLG FROM JOB.OSP , CONO:OSP.ENT.SEQ ELSE CK.FLG=""
               WHILE CK.FLG # "" DO
                  OSP.ENT.SEQ=OSP.ENT.SEQ + 1
               REPEAT
               DOS.SEQ.NO=OSP.ENT.SEQ
               OSP.ENT.SEQ=OSP.ENT.SEQ + 1
               WRITE OSP.ENT.SEQ ON CONTROL , CONO:"DAILY.OSP"
               SCV.REC(5)<1>=DOS.SEQ.NO
               ECD.NUM=5 ;ECD.ACTION=5 ;CALL SCRN.EDIT
               ERRMSG="Please Note Down New Sequence Number" ;GOSUB 91000
            END
            DOS.PRT.DATE = ""
            MATWRITE DOS.REC ON DAILY.OSP, CONO:DOS.SEQ.NO
            MORE=0
      END CASE
   WHILE MORE DO REPEAT
   GOTO 100
200*
   ECD.NUM=6
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE='END' THEN GOTO 299
   POST.OSJ=0
201*
   MATREAD JOB.REC FROM JOB, CONO : ECD.RET.VALUE ELSE
      MAT JOB.REC=''
      FND=0
      IF NUM(ECD.RET.VALUE) THEN
         IF ECD.RET.VALUE < J.CUTOFF.NUM THEN FND=1
      END ELSE
         JC.CNT=COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
         FOR L=1 TO JC.CNT WHILE FND=0
            PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
            IF J.CUTOFF.PREFIX<1,L>=ECD.RET.VALUE[1,PREFX.LEN] THEN
               CHK.VALUE=ECD.RET.VALUE[PREFX.LEN+1,LEN(ECD.RET.VALUE)-PREFX.LEN]
               IF NUM(CHK.VALUE) THEN
                  IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
               END
            END
         NEXT L
      END
      IF FND=1 THEN
         JOB.DESC<1,1>='* * OUTSIDE JOB * *'
         POST.OSJ=1
      END ELSE
         ERRMSG='JOB IS NOT ON FILE. TRY AGAIN !!'
         GOSUB 91000;GOTO 200
      END
   END
*T23278 v
   IF JOB.DIV # '' THEN
      DIV.CODE = JOB.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
         GOSUB 91000; GOTO 100
      END
   END
*T23278 ^
   BEGIN CASE
      CASE JOB.STATUS<1,1>=9
         ERRMSG="THIS JOB IS CANCELLED";GOSUB 91000;GOTO 200
      CASE JOB.STATUS<1,1>=7
         ERRMSG="THIS JOB IS READY TO BE PURGED";GOSUB 91000;GOTO 200
      CASE JOB.STATUS<1,1>=8
         ERRMSG="THIS JOB IS PURGED";GOSUB 91000;GOTO 200
   END CASE
   GOSUB 22000
   IF VALUE="END" THEN GOTO 200
   IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN
      MATREAD CUST.REC FROM CUSTOMER , CONO:JOB.CUST ELSE
         CUST.NAME=UNKNOWN
      END
      JOB.DESC<1,1>=CUST.NAME
   END
   DOS.JOB=ECD.RET.VALUE
   ECD.NUM=7 ;SCV.REC(ECD.NUM)<1>=JOB.DESC<1,1>;ECD.ACTION=5 ;CALL SCRN.EDIT
*
* GET OUTSIDE PO FOR THIS TRANS
250*
   ECD.NUM=26 ;ECD.ACTION=4 ;CALL SCRN.EDIT
   IF ECD.RET.VALUE='END' THEN GOTO 299
   DOS.PO=ECD.RET.VALUE
   PO.NUM = ''; PO.LINE.NO = '' ;*T22025
   IF ECD.RET.VALUE='???' AND CO.POS="Y" THEN
*T21695 v
      MATREAD JSTAT.REC FROM JOB.STATS,CONO:DOS.JOB ELSE MAT JSTAT.REC = ''
      PCNT = DCOUNT(JSTAT.OPO.NO,VM)
      IF PCNT THEN
         GXR.IDLIST=''
         FOR P = 1 TO PCNT
            LOCATE JSTAT.OPO.NO<1,P> IN GXR.IDLIST<1>,1 SETTING PFND ELSE
               GXR.IDLIST<1,PFND> = JSTAT.OPO.NO<1,P>
            END
         NEXT P
         ID.LIST = GXR.IDLIST
*T22025 PO.NUM = ''; PO.LINE.NO = ''
         JOB.NO = DOS.JOB
         CALL OUTSIDE.PO.XREF(CONO,JOB.NO,JOB.DESC,ID.LIST,PO.NUM,PO.LINE.NO)
         ECD.SCRN.NO = 1
         ECD.ACTION=2 ;CALL SCRN.EDIT
         GOSUB 21000
         IF PO.NUM = '' THEN GOTO 250
         DOS.PO = PO.NUM
         DOS.PRD.SEQ = 1
         SCV.REC(31)<1> = DOS.PRD.SEQ
         ECD.NUM=26
         SCV.REC(ECD.NUM)<ECD.SCRN.NO>=PO.NUM
         ECD.ACTION=5  ; CALL SCRN.EDIT
*T22025   END
      END ELSE
         ERRMSG="No OUTSIDE PO's exist for this job. "
         GOSUB 91000
         GOTO 250
      END
*T22025 ^
*T21695 ^
*T21692^
   END
   OPO.FND=0
   IF CO.POS="Y" THEN
      OPO.FND = 1
      MATREAD OPO.REC FROM OUTSIDE.PO , CONO:DOS.PO ELSE
         MAT OPO.REC=''
         OPO.FND = 0
*T25755 v
         DOS.PRD.SEQ = 1
         SCV.REC(31)<1> = DOS.PRD.SEQ
*T25755 ^
      END
   END
*T21692v
   VAL.CAT = ''
*T25755 v
   VAL.LINE.NO = ''
   VAL.SEQ = ''
   FND = 0
*T25755 ^
   FOR PTR = 1 TO DCOUNT(OPO.JOB.NO,VM)
      IF OPO.JOB.NO<1,PTR> = DOS.JOB THEN
*T25755  LOCATE OPO.PROD.LINE<1,PTR> IN VAL.CAT<1>, 1 SETTING FND ELSE
*T22025  VAL.CAT <1,PTR> = OPO.PROD.LINE<1,PTR>
         FND += 1 ; * T25755
         VAL.CAT <1,FND> = OPO.PROD.LINE<1,PTR>
*T25755 v
*        END
         VAL.LINE.NO<1,FND>=PTR
         VAL.SEQ<1,FND>=OPO.PROD.SEQ<1,PTR>
*T23499 ^
      END
   NEXT PTR
*T21692^
300*
   ECD.NUM = 37
*T21692v
   IF PO.LINE.NO # '' THEN ECD.DEFAULT = OPO.PROD.LINE<1,PO.LINE.NO>
   IF DCOUNT(VAL.CAT,VM) = 1 THEN ECD.DEFAULT = VAL.CAT
*T21692^
   ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
         GOTO 250
      CASE ECD.RET.VALUE = '???'
         GXR.FILE = CATEGORY.OSP
         GXR.XREF=CATEGORY.OSP
         GXR.NAME = 'CATEGORY.OSP'
         GXR.ID = ''
         GXR.SRCH.ID = ''
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         ECD.ACTION = 2;CALL SCRN.EDIT
         ECD.ACTION = 3;CALL SCRN.EDIT
         IF GXR.ID = '' THEN
            SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
            ECD.ACTION = 5;CALL SCRN.EDIT
            GOTO 300
         END ELSE
            MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:GXR.ID ELSE
               ERRMSG = "OSP Category Not on File"
               GOSUB 91000
               GOTO 300
            END
            SCV.REC(ECD.NUM)<ECD.SCRN.NO> = GXR.ID
         END
         DOS.PRD.LINE = GXR.ID
      CASE 1
         MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:ECD.RET.VALUE ELSE
            ERRMSG = ECD.RET.VALUE:' is not on file, Try again!'
            GOSUB 91000
            GOTO 300
         END
         DOS.PRD.LINE = ECD.RET.VALUE
   END CASE
   ECD.NUM=37
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DOS.PRD.LINE
   ECD.ACTION=5;CALL SCRN.EDIT
   ECD.NUM=42
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CAOS.DESC
   ECD.ACTION=5;CALL SCRN.EDIT
400 *
   IF OPO.FND # 0 THEN
*T25755 v
*     FOUND = 1
*     LOCATE DOS.JOB IN OPO.JOB.NO<1>,1 SETTING TST ELSE
*        FOUND = 0
*        ERRMSG = "JOB IS NOT VALID ON OUTSIDE P/O ":DOS.PO
*        GOSUB 91000
*        GOTO 250
*     END
* 401*
*     IF FOUND # 0 THEN
*        IF OPO.PROD.LINE<1,TST> = DOS.PRD.LINE THEN
*           FOUND = 1
*        END ELSE
*           TST = TST + 1
*           LOCATE DOS.JOB IN OPO.JOB.NO<1>,TST SETTING TST ELSE
*              ERRMSG = "CATEGORY IS NOT VALID ON OUTSIDE P/O ":DOS.PO
*              GOSUB 91000
*              GOTO 250
*           END
*           FOUND = 1
*           GOTO 401
*        END
*     END
401 *
      FND.MSG=""
      FND.CNT=0
      ALL.DONE=0
      VAL.LINE.LIST=""
      VAL.SEQ.LIST=""
      POS=1
      LOCAT=1
      LOOP
      UNTIL ALL.DONE DO
         LOCATE DOS.JOB IN OPO.JOB.NO<1>,POS SETTING POS THEN
            LOCATE DOS.PRD.LINE IN VAL.CAT<1>,LOCAT SETTING LOCAT THEN
               FND.CNT+=1
               VAL.LINE.LIST<1,-1>=VAL.LINE.NO<1,LOCAT>
               VAL.SEQ.LIST<1,-1>=VAL.SEQ<1,LOCAT>
               IF FND.CNT = 1 THEN
                  FND.MSG="This Job/Category exits on lines ":VAL.LINE.NO<1,LOCAT>
               END ELSE
                  FND.MSG:=",":VAL.LINE.NO<1,LOCAT>
               END
               LOCAT+=1
            END
            POS+=1
         END ELSE
            ALL.DONE=1
         END
      REPEAT
      IF FND.CNT > 1 THEN
         FND.MSG:=" Please choose:"
         VAL.RESP=0
         LOOP
         UNTIL VAL.RESP DO
            X=0;Y=22;MAXL=3;TYP=1
            PMSG=FND.MSG
            CALL EDIT.SUB
            P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            BEGIN CASE
               CASE VALUE = "END" 
*              start  prompt for category over
                  VAL.RESP = 1
               CASE VALUE # ""
                  LOCATE VALUE IN VAL.LINE.LIST<1>,1 SETTING OFFSET THEN
                     DOS.PRD.SEQ = VAL.SEQ.LIST<1,OFFSET>
                     VAL.RESP =1 
                  END ELSE
                     ERRMSG="Must choose a valid line number"
                     GOSUB 91000
                  END
               CASE 1
                  ERRMSG="You must choose a valid line number"
                  GOSUB 91000
            END CASE
         REPEAT
         IF VALUE = "END" THEN GOTO 300
         LOCATE DOS.PRD.SEQ IN OPO.PROD.SEQ<1>,1 SETTING TST ELSE TST=1
      END ELSE
         IF FND.CNT = 1 THEN
            TST = VAL.LINE.LIST
            DOS.PRD.SEQ = VAL.SEQ.LIST<1>
         END ELSE
            ERRMSG='Cannot locate JOB/CATEGORY combination on PO'
            GOSUB 91000
            GOTO 200
         END
      END
      SCV.REC(31)<ECD.SCRN.NO> = DOS.PRD.SEQ
*T25755 ^
      MATREAD VEND.REC FROM VEND,CONO:OPO.VEND.NO<1,1> ELSE MAT VEND.REC = ''
      MATREAD CCTR.REC FROM COST.CNTR,CONO:OPO.DVDPCC<1,3,TST> ELSE MAT CCTR.REC = ''
      MATREAD DIV.REC FROM DIVISION,CONO:OPO.DVDPCC<1,1,TST> ELSE MAT DIV.REC = ''
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:OPO.DVDPCC<1,2,TST> ELSE MAT DEPT.REC = ''
      DOS.VEND = OPO.VEND.NO<1,1>
      DOS.UOM = OPO.UOM<1,TST>; * T21670
      GOSUB 20000         ;* get VPDS record  Task 18690
*T26620 v
      IF VPDS.REC.DATE # "" THEN
         ECD.NUM = 58
         ECD.ACTION = 4 ; CALL SCRN.EDIT
         P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF ECD.RET.VALUE = 'END' OR ECD.RET.VALUE = 'N' THEN GOTO 300
      END
*T26620 ^
      SCV.REC(16)<ECD.SCRN.NO> = OPO.VEND.NO<1,1>
      SCV.REC(18)<ECD.SCRN.NO> = VEND.DESC
      SCV.REC(20)<ECD.SCRN.NO> = VEND.ADDR1
      SCV.REC(22)<ECD.SCRN.NO> = VEND.CT.ST:" ":VEND.ZIP
      SCV.REC(7)<ECD.SCRN.NO> = JOB.DESC
      SCV.REC(8)<ECD.SCRN.NO> = JOB.DIV
      SCV.REC(9)<ECD.SCRN.NO> = DIV.DESC
      SCV.REC(42)<ECD.SCRN.NO> = CAOS.DESC
      SCV.REC(10)<ECD.SCRN.NO> = OPO.DVDPCC<1,2,TST>
      SCV.REC(12)<ECD.SCRN.NO> = OPO.DVDPCC<1,3,TST>
      SCV.REC(11)<ECD.SCRN.NO> = DEPT.DESC
      SCV.REC(13)<ECD.SCRN.NO> = CCTR.DESC
      SCV.REC(24)<ECD.SCRN.NO> = JOB.TYPE
      IF DOS.DESC<1,1> = '' THEN DOS.DESC<1,1> = OPO.ITEM.COMM<1,TST,1>
      SCV.REC(33)<ECD.SCRN.NO,1> = DOS.DESC<1,1>
      ECD.ACTION=3;CALL SCRN.EDIT
      GOSUB 21000
      ECD.NUM=33; ECD.SUB.NUM=1; ECD.ACTION=7; CALL SCRN.EDIT ;* T21704
      DOS.DIV = JOB.DIV
      DOS.TYPE = JOB.TYPE
      FOR REQUEST=1 TO 9
         ON REQUEST GOSUB 1000,2000,4000,5900,7000,9000,9500,9900,10000
         IF ECD.RET.VALUE='END' THEN GOTO 299
      NEXT REQUEST
   END ELSE
      IF ECD.RET.VALUE='END' THEN GOTO 299
      GOSUB 3000
*T26556 v
* IF LEN(DOS.VEND)=8 THEN
*   FOUND=1
*   MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE FOUND=0
*   IF FOUND THEN
*     SCV.REC(17)<1>=DOS.VEND
*     SCV.REC(19)<1>=VEND.DESC
*     SCV.REC(21)<1>=VEND.ADDR1
*     SCV.REC(23)<1>=VEND.CT.ST:" ":VEND.ZIP
*   END
* END
*T26556 ^
      FOUND=1
      MATREAD VEND.REC FROM VEND, CONO:DOS.VEND ELSE
         MAT VEND.REC=''
      END
      SCV.REC(16)<1>=DOS.VEND
      SCV.REC(18)<1>=VEND.DESC
      SCV.REC(20)<1>=VEND.ADDR1
      SCV.REC(22)<1>=VEND.CT.ST:" ":VEND.ZIP
      SCV.REC(26)<1>=DOS.PO
      SCV.REC(37)<1>=DOS.PRD.LINE
      GOSUB 21000
      IF POST.OSJ=0 THEN
         ECD.NUM=7 ;SCV.REC(ECD.NUM)<1>=JOB.DESC<1,1>;ECD.ACTION=5;CALL SCRN.EDIT
         MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE DIV.DESC=UNKNOWN
         DOS.DIV=JOB.DIV
         ECD.NUM=8;SCV.REC(ECD.NUM)<1>=DOS.DIV;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=9;SCV.REC(ECD.NUM)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
         IF JOB.DEPT # "" THEN
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:JOB.DEPT ELSE MAT DEPT.REC="";DEPT.DESC=UNKNOWN
            ECD.NUM=10;SCV.REC(ECD.NUM)<1>=JOB.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
         END
      END
      IF DOS.DEPT='' THEN
         FOR REQUEST=1 TO 9
            ON REQUEST GOSUB 1000,2000,4000,5900,7000,9000,9500,9900,10000
            IF ECD.RET.VALUE='END' THEN GOTO 299
         NEXT REQUEST
      END
   END
299 
   RETURN
*
1000 ECD.NUM=12
   OLD.CCTR=DOS.CCTR;OLD.CCTR.DESC=CCTR.DESC
   OLD.DEPT=DOS.DEPT;OLD.DEPT.DESC=DEPT.DESC
   ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=COST.CNTR;ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         GOTO 1999
      CASE ECD.VALDAT.ITEM # ''
         FOR K=1 TO CCTR.REC.SIZE
            CCTR.REC(K)=ECD.VALDAT.ITEM<K>
         NEXT K
         IF CCTR.TYPE='F' THEN
            ERRMSG="COST CENTER IS FROZEN";GOSUB 91000;GOTO 1000
         END
         MATREAD DEPT.REC FROM DEPARTMENT, CONO:CCTR.DEPT ELSE
            MAT DEPT.REC=""
            ERRMSG="COST CNTR DEPARTMENT (":CCTR.DEPT:") IS MISSING"
            GOSUB 91000;GOTO 1000
         END
*T26631 v
*        LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING X ELSE
*           ERRMSG="JOB BELONGS TO DIFFERENT DEPARTMENT";GOSUB 91000;GOTO 1000
*        END
         IF POST.OSJ = 0 THEN
            LOCATE JOB.DIV IN DEPT.DIV<1>,1 SETTING X ELSE
               ERRMSG = "JOB BELONGS TO A DIFFERENT DIVISION"
               GOSUB 91000
               GOTO 1000
            END
         END
*T26631 ^
         DOS.CCTR=ECD.RET.VALUE
         DOS.DEPT=CCTR.DEPT
         ECD.NUM=10;SCV.REC(ECD.NUM)<1>=DOS.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=11;SCV.REC(ECD.NUM)<1>=DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=13;SCV.REC(ECD.NUM)<1>=CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.RET.VALUE=""
         IF OLD.CCTR # "" AND OLD.CCTR # DOS.CCTR THEN GOTO 2000
         IF ECD.RET.VALUE="END" THEN
            DOS.CCTR=OLD.CCTR
            DOS.DEPT=OLD.DEPT
            ECD.NUM=10;SCV.REC(ECD.NUM)<1>=DOS.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=12;SCV.REC(ECD.NUM)<1>=DOS.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=13;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            GOTO 1000
         END
      CASE ECD.RET.VALUE='???'
         IF JOB.DEPT # "" THEN
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:JOB.DEPT ELSE MAT DEPT.REC="";DEPT.DESC=UNKNOWN
            DOS.DEPT=JOB.DEPT
         END ELSE
            GXR.XREF=DIVISION
            GXR.FILE=DEPARTMENT
            GXR.NAME="DEPT.DIV"
            GXR.ID=''
            GXR.SRCH.ID=DOS.DIV
            CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
            IF GXR.ID='' THEN ECD.ACTION=2;CALL SCRN.EDIT;GOSUB 21000;GOTO 1000
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:GXR.ID ELSE
               ERRMSG='DEPARTMENT ':GXR.ID:' IS MISSING'
               ECD.ACTION=2;CALL SCRN.EDIT;GOSUB 91000;GOSUB 21000;GOTO 1000
            END
            DOS.DEPT=GXR.ID
         END
         SCV.REC(10)<1>=DOS.DEPT
         SCV.REC(11)<1>=DEPT.DESC
         GXR.XREF=DEPARTMENT
         GXR.FILE=COST.CNTR
         GXR.NAME="CCTR.DEPT"
         GXR.ID=''
         GXR.SRCH.ID=DOS.DEPT
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN GOSUB 21000;GOTO 1000
         MATREAD CCTR.REC FROM COST.CNTR, CONO:GXR.ID ELSE
            ERRMSG='COST.CNTR ':GXR.ID:' IS MISSING'
            GOSUB 91000;GOSUB 21000;GOTO 1000
         END
         IF CCTR.DEPT # DOS.DEPT THEN
            ERRMSG='INCORRECT DEPARTMENT FOR COST CENTER ':GXR.ID
            GOSUB 91000;GOSUB 21000;GOTO 1000
         END
         IF CCTR.TYPE='F' THEN
            ERRMSG='COST CENTER # ':GXR.ID:' IS FROZEN'
            GOSUB 91000;GOSUB 21000;GOTO 1000
         END
         IF JOB.DEPT # CCTR.DEPT[1,LEN(JOB.DEPT)] THEN
            ERRMSG="JOB BELONGS TO DIFFERENT DEPARTMENT"
            GOSUB 91000;GOSUB 21000;GOTO 1000
         END
         DOS.CCTR=GXR.ID
         SCV.REC(12)<1>=DOS.CCTR
         SCV.REC(13)<1>=CCTR.DESC
         GOSUB 21000
         ECD.RET.VALUE=""
         IF OLD.CCTR # "" AND OLD.CCTR # DOS.CCTR THEN GOTO 2000
         IF ECD.RET.VALUE="END" THEN
            DOS.CCTR=OLD.CCTR
            DOS.DEPT=OLD.DEPT
            ECD.NUM=10;SCV.REC(ECD.NUM)<1>=DOS.DEPT;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=11;SCV.REC(ECD.NUM)<1>=OLD.DEPT.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=12;SCV.REC(ECD.NUM)<1>=DOS.CCTR;ECD.ACTION=5;CALL SCRN.EDIT
            ECD.NUM=13;SCV.REC(ECD.NUM)<1>=OLD.CCTR.DESC;ECD.ACTION=5;CALL SCRN.EDIT
            GOTO 1000
         END
      CASE 1
         GOTO 1000
   END CASE
   IF POST.OSJ THEN
      DCNT=COUNT(DEPT.DIV,VM) + (DEPT.DIV # "")
      BEGIN CASE
         CASE DCNT < 1
            ERRMSG="NO DIVISIONS FOR COST CENTER DEPARTMENT"
            GOSUB 91000;GOTO 1000
         CASE DCNT=1
            ECD.NUM=8;SCV.REC(ECD.NUM)<1>=DEPT.DIV<1,1>;ECD.ACTION=5;CALL SCRN.EDIT
            MATREAD DIV.REC FROM DIVISION, CONO:DEPT.DIV<1,1> ELSE
               ERRMSG="DEPARTMENT DIVISION IS MISSING"
               GOSUB 91000;GOTO 1000
            END
            DOS.DIV=DEPT.DIV<1,1>
         CASE 1
1050        ECD.NUM=8
            ECD.VALDAT=DEPT.DIV<1,1>
            DV=1
            ECD.HMSG<1,1,DV>="VALID DIVISIONS - ":DEPT.DIV<1,1>
            FOR K=2 TO DCNT
               ECD.VALDAT=ECD.VALDAT :",":DEPT.DIV<1,K>
               IF LEN(ECD.HMSG<1,1,DV>) > 70 THEN DV=DV + 1
               ECD.HMSG<1,1,DV>=ECD.HMSG<1,1,DV>:", ":DEPT.DIV<1,K>
            NEXT K
            ECD.ACTION=4;CALL SCRN.EDIT
            BEGIN CASE
               CASE ECD.RET.VALUE="END"
                  GOTO 1000
               CASE ECD.RET.VALUE # ""
                  MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
                     ERRMSG=ECD.RET.VALUE:" IS NOT ON FILE"
                     GOSUB 91000;GOTO 1050
                  END
                  DOS.DIV=ECD.RET.VALUE
               CASE 1
                  GOTO 1050
            END CASE
      END CASE
      ECD.NUM=9;SCV.REC(ECD.NUM)<1>=DIV.DESC;ECD.ACTION=5;CALL SCRN.EDIT
   END
1999*
   RETURN
2000 ECD.NUM=14
*T25755 v
   IF DOS.OPER = '' AND TST # '' THEN
      ECD.DEFAULT = OPO.OPER.CODE<1,1,TST>
   END
*T25755 ^
   OLD.OPER=DOS.OPER;OLD.OPER.DESC=OPER.DESC
   ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=OPERATION;ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         DOS.OPER=OLD.OPER
         SCV.REC(14)<1>=OLD.OPER;ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
         SCV.REC(15)<1>=OLD.OPER.DESC;ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
      CASE ECD.VALDAT.ITEM # ''
         LOCATE ECD.RET.VALUE IN CCTR.OPER<1>,1 SETTING X ELSE
            ERRMSG='OPER # ':ECD.RET.VALUE:' DOES NOT BELONG UNDER CCTR # ':DOS.CCTR
            GOSUB 91000;GOTO 2000
         END
         FOR K=1 TO OPER.REC.SIZE
            OPER.REC(K)=ECD.VALDAT.ITEM<K>
         NEXT K
         DOS.OPER=ECD.RET.VALUE
         ECD.NUM=15;SCV.REC(ECD.NUM)<1>=OPER.DESC;ECD.ACTION=5;CALL SCRN.EDIT
      CASE ECD.RET.VALUE='???'
         MAT GEN.XREF.REC=''
         GXR.CO=CONO
         GXR.XREF=COST.CNTR
         GXR.FILE=OPERATION
         GXR.NAME="CCTR.OPER.1"
         GXR.ID=''
         GXR.SRCH.ID=DOS.CCTR
         CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
         ECD.ACTION=2;CALL SCRN.EDIT
         IF GXR.ID='' THEN GOSUB 21000;GOTO 2000
         MATREAD OPER.REC FROM OPERATION, CONO:GXR.ID ELSE
            ERRMSG='OPERATION ':GXR.ID:' IS MISSING'
            GOSUB 91000;GOSUB 21000;GOTO 2000
         END
         DOS.OPER=GXR.ID
         SCV.REC(14)<1>=DOS.OPER
         SCV.REC(15)<1>=OPER.DESC
         ECD.NUM=14;ECD.ACTION=5;CALL SCRN.EDIT
         ECD.NUM=15;ECD.ACTION=5;CALL SCRN.EDIT
         GOSUB 21000
      CASE 1
         GOTO 2000
   END CASE
   RETURN
3000 ECD.NUM=16
   ECD.VALDAT.CODE=2;ECD.VALDAT.FILE=VEND;ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE='' THEN
      ECD.NUM=18
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE='' OR ECD.RET.VALUE='END' THEN GOTO 3000
      GXR.XREF=VENDOR.XREF
      GXR.FILE=VEND
      GXR.NAME="VEND"
      GXR.ID=''
      GXR.SRCH.ID=ECD.RET.VALUE
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      ECD.ACTION=2;CALL SCRN.EDIT
      IF GXR.ID='' THEN SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
*T26556 v
* IF LEN(GXR.ID)=8 THEN
*   MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
*     ERRMSG='MAIN VENDOR ':GXR.ID:' IS MISSING'
*     GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
*   END
*   SCV.REC(17)<1>=GXR.ID
*   SCV.REC(19)<1>=VEND.DESC
*   SCV.REC(21)<1>=VEND.ADDR1
*   SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
* END
*T26556 ^
      MATREAD VEND.REC FROM VEND, CONO:GXR.ID ELSE
         ERRMSG='VENDOR ':GXR.ID:' IS MISSING'
         GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
      END
      DOS.VEND=GXR.ID
      SCV.REC(16)<1>=DOS.VEND
      SCV.REC(18)<1>=VEND.DESC
      SCV.REC(20)<1>=VEND.ADDR1
      SCV.REC(22)<1>=VEND.CT.ST:' ':VEND.ZIP
*T26556v
* SCV.REC(17)<1>=DOS.VEND
* SCV.REC(19)<1>=VEND.DESC
* SCV.REC(21)<1>=VEND.ADDR1
* SCV.REC(23)<1>=VEND.CT.ST:' ':VEND.ZIP
*T26556^
      GOSUB 21000
   END ELSE
      IF ECD.RET.VALUE # 'END' THEN
*T26556 v
*   IF LEN(ECD.RET.VALUE)=8 THEN
*     MATREAD VEND.REC FROM VEND, CONO:ECD.RET.VALUE ELSE
*       ERRMSG='MAIN VENDOR ':ECD.RET.VALUE:' IS MISSING'
*       GOSUB 91000;SCV.REC(18)<1>='';GOSUB 21000;GOTO 3000
*     END
*     ECD.NUM=17;SCV.REC(ECD.NUM)<1>=ECD.RET.VALUE;ECD.ACTION=5;CALL SCRN.EDIT
*     ECD.NUM=19;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CALL SCRN.EDIT
*     ECD.NUM=21;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;CALL SCRN.EDIT
*     ECD.NUM=23;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;ECD.ACTION=5;CALL SCRN.EDIT
*   END
*T26556 ^
      END
      DOS.VEND=ECD.RET.VALUE
      FOR I=1 TO VEND.REC.SIZE
         VEND.REC(I)=ECD.VALDAT.ITEM<I>
      NEXT I
      ECD.NUM=18;SCV.REC(ECD.NUM)<1>=VEND.DESC;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=20;SCV.REC(ECD.NUM)<1>=VEND.ADDR1;ECD.ACTION=5;CALL SCRN.EDIT
      ECD.NUM=22;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP;ECD.ACTION=5;CALL SCRN.EDIT
*T26556v
* ECD.NUM=17;SCV.REC(ECD.NUM)<1>=DOS.VEND
* ECD.ACTION=5;CALL SCRN.EDIT
* ECD.NUM=19;SCV.REC(ECD.NUM)<1>=VEND.DESC
* ECD.ACTION=5;CALL SCRN.EDIT
* ECD.NUM=21;SCV.REC(ECD.NUM)<1>=VEND.ADDR1
* ECD.ACTION=5;CALL SCRN.EDIT
* ECD.NUM=23;SCV.REC(ECD.NUM)<1>=VEND.CT.ST:' ':VEND.ZIP
* ECD.ACTION=5;CALL SCRN.EDIT
*T26556^
   END
   RETURN
4000 ECD.NUM=24
   BEGIN CASE
      CASE JOB.TYPE='N'
         SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION=5
         CALL SCRN.EDIT
         DOS.TYPE=JOB.TYPE
      CASE JOB.TYPE='S'
         SCV.REC(24)<1>=JOB.TYPE ;ECD.NUM=24 ;ECD.ACTION=5
         CALL SCRN.EDIT
         DOS.TYPE=JOB.TYPE
      CASE 1
         ECD.DEFAULT = JOB.TYPE
         ECD.ACTION=4 ;CALL SCRN.EDIT
         IF ECD.RET.VALUE # 'END' OR ECD.RET.VALUE # 'E' THEN
            DOS.TYPE = ECD.RET.VALUE
         END ELSE
            DOS.TYPE = JOB.TYPE
         END
   END CASE
   BEGIN CASE
      CASE DOS.TYPE='N'
         SCV.REC(40)<ECD.SCRN.NO>="NON CHARGEABLE"
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE DOS.TYPE='S'
         SCV.REC(40)<ECD.SCRN.NO>="SPOILAGE"
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE DOS.TYPE='C'
         SCV.REC(40)<ECD.SCRN.NO>="CHANGE ORDER"
      CASE 1
         SCV.REC(40)<ECD.SCRN.NO>="REGULAR"
   END CASE
   ECD.NUM=40;ECD.ACTION=5;CALL SCRN.EDIT
4001IF CO.SPOIL.FLG='Y' AND DOS.TYPE="S" THEN
   ECD.NUM=25;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE='END' OR ECD.RET.VALUE = 'E' THEN GOTO 4000
   READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:ECD.RET.VALUE ELSE
      ERRMSG="SPOILAGE CODE (":ECD.RET.VALUE:") NOT ON FILE"
      GOSUB 91000 ;GOTO 4001
   END
   DOS.SPOIL.CODE=ECD.RET.VALUE
   END ELSE
   DOS.SPOIL.CODE=''
   SPOIL.CODE.DESC=""
   SCV.REC(25)<1>=""
   ECD.NUM=25;ECD.ACTION=5;CALL SCRN.EDIT
   END
   SCV.REC(41)<1>=SPOIL.CODE.DESC
   ECD.NUM=41;ECD.ACTION=5;CALL SCRN.EDIT
   RETURN
5900*
   ECD.NUM = 43
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      DOS.DATE=ECD.RET.VALUE
   END
6000 ECD.NUM=27
   IF VPDS.PRESENT THEN
* T26565 ECD.DEFAULT = VPDS.ORD.QTY
      ECD.DEFAULT = VPDS.ORD.QTY - SUM(VPDS.REC.QTY)
   END ELSE
* T26565 ECD.DEFAULT = OPO.QTY<1,TST>
      ECD.DEFAULT = OPO.TOT.OPEN<1,TST>
   END
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      DOS.QTY=ECD.RET.VALUE
* T25097
      IF DOS.GRS.AMT # "" THEN
         GOTO 9000
      END
* T25097
   END
   RETURN
7000 
   ECD.NUM=28;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE="END" THEN GOTO 8999
   DOS.INV=ECD.RET.VALUE
*       RETURN
8000 
   ECD.NUM=29;ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN DOS.INV.DATE=ECD.RET.VALUE
   IF DOS.INV="PHONE" THEN
      DOS.DUE.DATE="HOLD"
   END ELSE
*T22288 v  change next two lines to use 4 digit year  
      DATE.INV=OCONV(DOS.INV.DATE, "D4/")
      MM=DATE.INV[1,2] ;DD=DATE.INV[4,2] ;YY=DATE.INV[7,4]
*T22288 ^   
      TRM.DAYS=VEND.TERMS<1,2>
      DISC=VEND.TERMS<1,1>
      IF TRM.DAYS[1,1]='P' THEN
         IF DD > CO.PROX.CUTOFF THEN
            NMM=MM + 2
         END ELSE
            NMM=MM + 1
         END
         IF NMM > 12 THEN
            NMM=NMM - 12
            YY=YY + 1
         END
*T22288 v  change next two lines to use 4 digit year  
         NMM=STR('0',2-LEN(NMM)):NMM:"/":TRM.DAYS[2,2]:"/":STR("0",4-LEN(YY)):YY
         DOS.DUE.DATE=ICONV(NMM, "D4/")
*T22288 ^      
      END ELSE
         DOS.DUE.DATE=DOS.INV.DATE + (DISC[5,2]*1)
      END
   END
8999 RETURN
*
9000*
   ECD.NUM = 56
   IF VPDS.PRESENT THEN
      ECD.DEFAULT = VPDS.ORD.UN.COST<1,1>
   END ELSE
      IF TST > 0 AND OPO.EST.COST<1,TST>+0 > 0 THEN
      *T23319 v
         BEGIN CASE                  
            CASE OPO.UOM<1,TST> = 'M'
               ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1,TST>/1000), 'MD0') * 100
            CASE OPO.UOM<1,TST> = 'C'
               ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / (OPO.QTY<1,TST>/100), 'MD0') * 100
            CASE 1
               ECD.DEFAULT = OCONV((OPO.EST.COST<1,TST> * 100) / OPO.QTY<1,TST>, "MD0") * 100
         END CASE
      *T23319 ^
      END
   END
***
*T25097  IF DOS.GRS.AMT+0 # 0 THEN
*T25097      ECD.DEFAULT=''; SCV.REC(56)<1> = ''
*T25097* T21670
*T25097* IF OPO.UOM<1,TST> = 'M' THEN
*T25097      IF DOS.UOM = "M" THEN
*T25097* T21670
*T25097          ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10000000) + .5)
*T25097      END ELSE
*T25097          ECD.DEFAULT = INT(DOS.GRS.AMT / (DOS.QTY / 10000) + .5)
*T25097      END
*T25097  END
***
   ECD.ACTION = 4
   CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
*T21006 v
      IF DOS.U.PRICE+0 # 0 THEN COST.CHG = 1
      DOS.U.PRICE = ECD.RET.VALUE
      GOSUB 9200
      IF COST.CHG THEN GOSUB 9500; COST.CHG = 0
*T21006 ^
   END
*END
   RETURN
*
*--- ENTER UNIT OF MEASURE
*
9200 *
   SCV.REC(57)<ECD.SCRN.NO> = DOS.UOM
   IF DOS.UOM = "" THEN
      ECD.DEFAULT = "EA"
   END
   ECD.NUM = 57; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
      CASE ECD.RET.VALUE = ""
         DOS.UOM = "EA"
         SCV.REC(57)<1> = DOS.UOM
         ECD.NUM = 57; ECD.ACTION = 5; CALL SCRN.EDIT
      CASE 1
         DOS.UOM = ECD.RET.VALUE
   END CASE
   RETURN
*
9500*
   ECD.NUM=30
   SCV.REC(30)<1> = ""
* 18746 v
* T21670
*IF OPO.UOM<1,TST> = 'M' THEN
*   UNIT.COSTT = DOS.U.PRICE /1000
*END ELSE
*   UNIT.COSTT = DOS.U.PRICE
*END
*ECD.DEFAULT = INT(((OCONV(UNIT.COSTT*10,"MD5") * OCONV(DOS.QTY,"MD2")) * 100 + .5))
  *T23319 v
   BEGIN CASE                     
      CASE DOS.UOM = "M"          
         REAL.QTY = DOS.QTY / 1000
      CASE DOS.UOM = "C"          
         REAL.QTY = DOS.QTY / 100 
      CASE 1                      
         REAL.QTY = DOS.QTY       
   END CASE                       
  * IF DOS.UOM = "M" THEN
  *   REAL.QTY = DOS.QTY / 1000
  * END ELSE
  *   REAL.QTY = DOS.QTY
  * END
  *T23319 ^
   ECD.DEFAULT = INT((DOS.U.PRICE/10000) * REAL.QTY + .5)
* T21670
*SAV.GRS.AMT = ECD.RET.VALUE
   SAV.GRS.AMT = DOS.GRS.AMT
*18746  ^
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
      DOS.GRS.AMT=ECD.RET.VALUE
      DOS.MER.AMT=ECD.RET.VALUE
      DISC=VEND.TERMS<1,1>
      DOS.DSC.AMT=INT((DOS.MER.AMT * DISC[1,4]) /10000 + .5)
      IF SAV.GRS.AMT+0 # 0 AND SAV.GRS.AMT # DOS.GRS.AMT AND NOT(COST.CHG) THEN ;*T21006
         GOSUB 9000
*    IF DOS.SALE.AMT + 0 # 0 THEN GOSUB 9900 ;*T21006
      END
      IF DOS.SALE.AMT + 0 # 0 AND SAV.GRS.AMT+0 # 0 AND SAV.GRS.AMT # DOS.GRS.AMT THEN GOSUB 9900 ;*T21006
   END
   RETURN
9900 ECD.NUM=38
   SCV.REC(38)<1> = ''
   BEGIN CASE
      CASE DOS.TYPE="S" OR DOS.TYPE="N"
         DOS.SALE.AMT=0;SCV.REC(ECD.NUM)<1>=DOS.SALE.AMT
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE WLR.OS.COST < 2
         DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.GRS.AMT) + .5)
         ECD.DEFAULT=DOS.SALE.AMT
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE # 'END' THEN
            DOS.SALE.AMT=ECD.RET.VALUE
         END
      CASE NUM(CAOS.FOH.PCT)
         DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ CAOS.FOH.PCT/10000)) + .5)
         DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + .5)
         ECD.DEFAULT=DOS.SALE.AMT
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE # 'END' THEN
            DOS.SALE.AMT=ECD.RET.VALUE
         END
      CASE 1
         MATREAD FTR.REC FROM FOH.TABLE, CONO : CAOS.FOH.PCT ELSE
            MAT FTR.REC=''
         END
         IF FTR.QTY='' THEN
            FOH.PCT=0
         END ELSE
            TOT.DCOST=DOS.GRS.AMT
            K=1
            LOOP
               LOCATE DOS.PRD.LINE IN JOB.OS.PLINE<1>,K SETTING CPTR ELSE CPTR=0
            WHILE CPTR DO
               TOT.DCOST=TOT.DCOST + JOB.OS.DCOST<1,CPTR>
               K=CPTR + 1
            REPEAT
            FTR.CNT=COUNT(FTR.QTY,VM) + 1
            IF TOT.DCOST >= FTR.QTY<1,FTR.CNT> THEN
               FOH.PCT=FTR.PCT<1,FTR.CNT>
            END ELSE
               FOH.PCT=0
               FOR FPR=1 TO FTR.CNT WHILE FOH.PCT=0
                  IF TOT.DCOST <= FTR.QTY<1,FPR> THEN
                     FOH.PCT=FTR.PCT<1,FPR>
                  END
               NEXT FPR
            END
         END
         DOS.SALE.AMT=INT((DOS.GRS.AMT * (1+ FOH.PCT/10000)) + .5)
         DOS.SALE.AMT=INT((((CAOS.MARKUP/10000)+1) * DOS.SALE.AMT) + .5)
         ECD.DEFAULT=DOS.SALE.AMT
         ECD.ACTION=4;CALL SCRN.EDIT
         IF ECD.RET.VALUE # 'END' THEN
            DOS.SALE.AMT=ECD.RET.VALUE
         END
   END CASE
   RETURN
10000 
*T27521   ANCORE=1
   IF DOS.DESC = '' THEN
      LINES=0
      ACTION='A'
      LOOP
         LN=LINES + 1
         OLD.LINES=LINES
         GOSUB 10100
      WHILE LINES > OLD.LINES DO REPEAT
      LN=LINES
*T27521 v
*  END ELSE
   END
*T27521 ^
   LINES = DCOUNT(DOS.DESC,VM)
   GOSUB 10900
   ANCORE=1
*T27521   END
   LOOP
      ECD.NUM=35
      SCV.REC(ECD.NUM)<ECD.SCRN.NO>='';ECD.ACTION=4;CALL SCRN.EDIT
      ACTION=ECD.RET.VALUE
      BEGIN CASE
         CASE ACTION = '' OR ACTION = 'E' OR ACTION = 'END'
            ANCORE=0
         CASE ACTION='A'
            LOOP
               LN=LINES + 1
               OLD.LINES=LINES
               GOSUB 10100
            WHILE LINES > OLD.LINES DO REPEAT
            LN=LINES
            GOSUB 10900
         CASE ACTION='C'
            GOSUB 10800
            IF LN.NO THEN
               LN=LN.NO
               GOSUB 10100
            END
         CASE ACTION='D'
            GOSUB 10800
            IF LN.NO THEN
               LN=LN.NO
               DOS.DESC=DELETE(DOS.DESC,1,LN,0)
               LINES=COUNT(DOS.DESC,VM) + (DOS.DESC # "")
               IF LN > 1 AND LN > LINES THEN LN=LN - 1
               IF LN < 1 THEN LN=1
               OLD.START.LINE=0
            END
            GOSUB 10900
         CASE ACTION='S'
            IF DOS.DESC # "" THEN
               LN=LN + PAGE.SIZE
               IF LN > LINES THEN LN=1
               GOSUB 10900
            END
      * T25978 v
         CASE ACTION = 'SR'
            LN -= PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 10900
         CASE ACTION = 'ST'
            LN = 1
            GOSUB 10900
         CASE ACTION = 'SB'
            LN = LINES
            GOSUB 10900
      * T25978 ^
      END CASE
   WHILE ANCORE DO REPEAT
   GOTO 10999
10100 GOSUB 10900
   SLN=BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 1 ; P_Y = SLN ; P_VALUE = LN "R#2" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
10200 X=5
   Y=SLN
   TYP=1
   MAXL=70
   O.R='O'
   JUSTIFY = 'L' ; * T27521
   DEFAULT=DOS.DESC<1,LN>
   CALL EDIT.SUB
   IF VALUE='END' THEN
      IF ACTION='A' THEN
         DOS.DESC=DELETE(DOS.DESC,1,LN,0)
      END
      P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10299
   END
   IF VALUE='' AND ACTION='A' THEN
      DOS.DESC=DELETE(DOS.DESC,1,LN,0)
      P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10299
   END
   DOS.DESC<1,LN>=VALUE
   LINES=COUNT(DOS.DESC,VM) + (DOS.DESC # '')
10299 RETURN
10800GOSUB 10900
   ECD.NUM=39;SCV.REC(ECD.NUM)<ECD.SCRN.NO>=''
   ECD.MINV=OLD.START.LINE;ECD.MAXV=LAST.LINE
   ECD.ACTION=4;CALL SCRN.EDIT
   LN.NO=ECD.RET.VALUE
   IF LN.NO='' OR LN.NO='END' THEN LN.NO=0
   RETURN
10900START.LINE=1 + INT((LN-1)/PAGE.SIZE)*PAGE.SIZE
   LAST.LINE=START.LINE + PAGE.SIZE - 1
   IF LAST.LINE > LINES THEN LAST.LINE=LINES
   IF START.LINE=OLD.START.LINE THEN GOTO 10990
   OLD.START.LINE=START.LINE
   CNT=1
   FOR N=START.LINE TO LAST.LINE
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 5 ; P_Y = SLN ; P_VALUE = DOS.DESC<1,N> "L#70" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT=CNT + 1
   NEXT N
   FOR M=CNT TO PAGE.SIZE
      SLN=BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
      P_X  = 1 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT M
10990 RETURN
10999 RETURN
*
* Get Vendor Prod Stats info   Task 18690
*
20000*
   IF CO.APS.O.INTRF > 2 THEN
*T25755 v
*    VPDS.KEY = CONO:DOS.VEND:'!O!':DOS.PO:'!':DOS.JOB:"!":DOS.PRD.LINE
      VPDS.KEY = CONO:DOS.VEND:'!O!':DOS.PO:'!':DOS.JOB:"!":DOS.PRD.LINE:"@":DOS.PRD.SEQ
*T25755 ^
      MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY THEN
         VPDS.PRESENT = 1
      END ELSE
         MAT VPDS.REC = ""
         VPDS.PRESENT = 0
      END
   END
   RETURN
21000*
   ECD.ACTION=3;CALL SCRN.EDIT
   OLD.START.LINE=0;GOSUB 10900
   RETURN
22000*
   VALUE=""
   IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
22010 X=0;Y=22;MAXL=3;TYP=1     ;*T21177
      PMSG="THIS JOB IS NOT IN PROCESS. ENTER AUTHORIZATION : "
      CALL EDIT.SUB
      P_X  = 0 ; P_Y = 22 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF VALUE="END" THEN GOTO 22999
      MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:VALUE ELSE
         MAT JSI.REC =""
         ERRMSG="INVALID INITIALS. TRY AGAIN"
         GOSUB 91000;GOTO 22010
      END
      DOS.INIT=VALUE
   END
22999*
   RETURN
91000ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
99999*
   ECD.ACTION = 99; CALL SCRN.EDIT
   RETURN
END
