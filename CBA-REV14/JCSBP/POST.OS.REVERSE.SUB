SUBROUTINE POST.OS.REVERSE.SUB(CONO,CO.POS,CO.APS.O.INTRF)
*COPY>CPYLIB>COM1
*COPY>JCS.CPYLIB>COM.JCS.LINK  
*COPY>ICS.CPYLIB>COM.INV.MAIN  
*COPY>ICS.CPYLIB>COM.INV.SERIAL
*COPY>JCS.CPYLIB>COM.INV.STATS 
*COPY>APS.CPYLIB>COM.APS.FILE.VARS
*********************************************************************
* REVISION     - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - JCSBP
* PROGRAM      - POST.OS.REVERSE.SUB
* BY           - WALID A. YAMOUT , C.B.A
* DESCRIPTION  -
*T22266 lanny 10/02/1997 * JOS.VEND s/b Multi-valued for Misc Vendors.
*T22650 lanny 03/02/1998 * JOB is multi-valued in OUTSIDE.PO.
*T25755 cm 04/19/2001 * Modify pgm to recognize new field for seq in
*                       OUTSIDE.PO
*T26565 lhelms 04/25/2002 * Rev12 Change to reverse/qty/unit price
*                           see task Rev11 26557 and 26833
*T23880 lross 10/16/2002 * Include offset acct in ALH record.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUETE
*
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>DAILY.REVERSE
*COPY>JCS.CPYLIB>JOB.OSP
*COPY>JCS.CPYLIB>JOB.REVERSE
*COPY>JCS.CPYLIB>PROD.STATS
*COPY>JCS.CPYLIB>COST.CNTR.WIP
*COPY>JCS.CPYLIB>SPOIL.STATS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>JCS.CPYLIB>CATEGORY.OSP
*COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
*
***** MAIN PROCESSING
*
SEQ.CNT = COUNT(DRV.SEQ,VM) + (DRV.SEQ # "")
1000*
FOR MLP = SEQ.CNT TO 1 STEP -1
  DEPT = DRV.DEPT<1,MLP>; CCTR = DRV.CCTR<1,MLP>
  PLINE = DRV.OPER<1,MLP>; SEQ = DRV.SEQ<1,MLP>
  OS.ID = CONO:DRV.JOB:"!":DEPT:"!":CCTR:"!":PLINE:"!"
  MATREAD JOS.REC FROM JOB.OSP, OS.ID : SEQ ELSE
    DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:SEQ
    GOTO 1999
  END
  PRD.SEQ = JOS.OPO.SEQ ; * T25755
  BEGIN CASE
    CASE JOS.VEND<1,1> # DRV.EMP<1,MLP>  ;*T22266
      DRV.STATUS<1,MLP> = "VENDOR MISMATCH"
      GOTO 1999
    CASE (JOS.COST-JOS.RC.COST) = DRV.COST<1,MLP>
      REV.ALL = 1
    CASE (JOS.COST-JOS.RC.COST) > DRV.COST<1,MLP>
      REV.ALL = 0
    CASE 1
      DRV.STATUS<1,MLP> = "COST MISMATCH"
      GOTO 1999
  END CASE
  PTR = 1
  LOOP
    LOCATE DEPT IN JOB.OS.DEPT<1>,PTR SETTING DFND ELSE
      DFND = 0; PTR = 0
    END
    IF DFND THEN
      BEGIN CASE
        CASE CCTR # JOB.OS.CCTR<1,DFND>
          PTR = DFND + 1
        CASE PLINE # JOB.OS.PLINE<1,DFND>
          PTR = DFND + 1
        CASE 1
          PTR = 0
      END CASE
    END
  WHILE PTR DO REPEAT
  IF DFND = 0 THEN
    DRV.STATUS<1,MLP> = "CANNOT LOCATE MAIN DEPT/CCTR/SEQ"
    GOTO 1999
  END
  WCNT = COUNT(JOS.WIP,VM) + (JOS.WIP # "")
  WPTR = 0; TOT.WIP = 0; INV.WIP = ""
  FOR I = 1 TO 2
    IF JOS.WIP<1,1,I> + 0 <> 0 THEN
      INV.WIP<1,1,I> = 0 - JOS.WIP<1,1,I>
      TOT.WIP = TOT.WIP + JOS.WIP<1,1,I>
      WPTR = I
    END
  NEXT I
  FOR W = 2 TO WCNT
    FOR I = 1 TO WPTR
      INV.WIP<1,1,I> = INV.WIP<1,1,I> - JOS.WIP<1,W,I>
    NEXT I
  NEXT W
  TOT.RC.DCOST = 0; TOT.RC.COST = 0; TOT.RC.SALE = 0
  TOT.RC.WIP = 0; REV.WIP = ""
  TOT.RC.QTY = 0 ;* T26557
  IF JOS.RC.COST + 0 <> 0 THEN
    FOR S = SEQ + 1 TO JOB.OS.SEQ<1,DFND>
      MATREAD JOS.REC FROM JOB.OSP, OS.ID : S ELSE
        DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:S
        GOTO 1999
      END
      IF JOS.RC.TRAN = DRV.TRAN<1,MLP> THEN
        FOR I = 1 TO WPTR
          REV.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>
          TOT.RC.WIP = TOT.RC.WIP - JOS.WIP<1,1,I>
        NEXT I
        TOT.RC.DCOST = TOT.RC.DCOST - JOS.DCOST
        TOT.RC.QTY -= JOS.QTY ;* T26565
        TOT.RC.COST = TOT.RC.COST - JOS.COST
        TOT.RC.SALE = TOT.RC.SALE - JOS.SALE
      END
    NEXT S
    MATREAD JOS.REC FROM JOB.OSP, OS.ID : SEQ ELSE
      DRV.STATUS<1,MLP> = "CANNOT LOCATE JOB.OSP - ":OS.ID:SEQ
      GOTO 1999
    END
    IF TOT.RC.COST <> JOS.RC.COST THEN
      DRV.STATUS<1,MLP> = "REVERSE COST MISMATCH ":OCONV(TOT.RC.WIP,"MD2")
      GOTO 1999
    END
  END
  NEW.WIP = ""
  IF REV.ALL THEN
*T26565  NEW.QTY = 0 - JOS.QTY
    NEW.QTY = TOT.RC.QTY - JOS.QTY
    NEW.DCOST = TOT.RC.DCOST - JOS.DCOST
    NEW.SALE = TOT.RC.SALE - JOS.SALE
    FOR I = 1 TO WPTR
      NEW.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>
    NEXT I
  END ELSE
* T26565 v
*        NEW.QTY = 0
*        PCT = DRV.COST<1,MLP> / (JOS.COST/1000)
    NEW.DCOST = TOT.RC.DCOST - JOS.DCOST
    IF NEW.DCOST # 0 THEN
      PCT = DRV.COST<1,MLP> / (0-NEW.DCOST/1000)
    END ELSE
      PCT = 1000
    END
    NEW.QTY = TOT.RC.QTY - JOS.QTY
    NEW.QTY = 0 - ICONV(0-NEW.QTY * (PCT/1000), 'MD0')
* T26565 ^
    IF JOS.COST = JOS.DCOST THEN
      NEW.DCOST = 0 - DRV.COST<1,MLP>
    END ELSE
      NEW.DCOST = 0 - INT((JOS.DCOST/1000) * PCT + .5)
      IF TOT.RC.DCOST - NEW.DCOST > JOS.DCOST THEN
        NEW.DCOST = TOT.RC.DCOST - JOS.DCOST
      END
    END
    IF JOS.SALE = JOS.COST THEN
      NEW.SALE = 0 - DRV.COST<1,MLP>
    END ELSE
      NEW.SALE = 0 - INT(((JOS.SALE-JOS.COST)/(JOS.COST/1000)) * (DRV.COST<1,MLP>/1000) + DRV.COST<1,MLP> + .5)
      IF TOT.RC.SALE - NEW.SALE > JOS.SALE THEN
        NEW.SALE = TOT.RC.SALE - JOS.SALE
      END
    END
    BEGIN CASE
      CASE TOT.WIP = JOS.COST
        CHK.WIP = DRV.COST<1,MLP>
      CASE TOT.WIP = JOS.DCOST
        CHK.WIP = 0 - NEW.DCOST
      CASE 1
        CHK.WIP = INT((TOT.WIP/1000) * PCT + .5)
        IF TOT.RC.WIP + CHK.WIP > TOT.WIP THEN
          CHK.WIP = TOT.WIP - TOT.RC.WIP
        END
    END CASE
    TOT.WIP = 0
    FOR I = 1 TO WPTR
      NEW.WIP<1,1,I> = 0 - INT((JOS.WIP<1,1,I>/1000) * PCT + .5)
      IF REV.WIP<1,1,I> - NEW.WIP<1,1,I> > JOS.WIP<1,1,I> THEN
        NEW.WIP<1,1,I> = REV.WIP<1,1,I> - JOS.WIP<1,1,I>
      END
      TOT.WIP = TOT.WIP - NEW.WIP<1,1,I>
    NEXT I
    DIFF = CHK.WIP - TOT.WIP
    BEGIN CASE
      CASE DIFF = 0
      CASE DIFF > 0
        FOR I = WPTR TO 1 STEP -1 WHILE DIFF > 0
          IF NEW.WIP<1,1,I> < 0 - DIFF THEN
            IF REV.WIP<1,1,I>-NEW.WIP<1,1,I>+DIFF <= JOS.WIP<1,1,I> THEN
              NEW.WIP<1,1,I> = NEW.WIP<1,1,I> - DIFF
              TOT.WIP = TOT.WIP + DIFF
              DIFF = 0
            END
          END
        NEXT I
      CASE 1
        FOR I = WPTR TO 1 STEP -1 WHILE DIFF < 0
          IF NEW.WIP<1,1,I> < DIFF THEN
            NEW.WIP<1,1,I> = NEW.WIP<1,1,I> - DIFF
            TOT.WIP = TOT.WIP + DIFF
            DIFF = 0
          END
        NEXT I
    END CASE
    IF TOT.WIP <> CHK.WIP THEN
      DRV.STATUS<1,MLP> = "WIP MISMATCH ":OCONV(TOT.WIP,"MD2")
      GOTO 1999
    END
  END
  ADD.MON = 0; WIP.CNTR = 0
  FOR I = 1 TO WPTR
    INV.WIP<1,1,I> = INV.WIP<1,1,I> + 0
    BEGIN CASE
      CASE INV.WIP<1,1,I> < NEW.WIP<1,1,I>
        INV.WIP<1,1,I> = NEW.WIP<1,1,I>
        ADD.MON = 1; WIP.CNTR = 3
      CASE INV.WIP<1,1,I> <> 0
        ADD.MON = 1; WIP.CNTR = 2
      CASE NEW.WIP<1,1,I> <> 0
        WIP.CNTR = 2
    END CASE
  NEXT I
  IF ADD.MON THEN
    IF JOS.MON<1,WCNT> > JRV.MON THEN
      NEW.MON = JOS.MON<1,WCNT>
    END ELSE
      NEW.MON = JRV.MON
    END
    WCNT = WCNT + 1
    JOS.MON<1,WCNT> = NEW.MON
    JOS.WIP<1,WCNT> = INV.WIP
    CCW.ID = CONO : JOS.DIV : DEPT : "!" : CCTR : NEW.MON
    MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC = ""
    FOR I = 1 TO WPTR
      CCW.OS.O<1,I> = CCW.OS.O<1,I> - INV.WIP<1,1,I>
    NEXT I
    MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
  END ELSE
    IF JOS.MON<1,1> > JRV.MON THEN
      NEW.MON = JOS.MON<1,1>
    END ELSE
      NEW.MON = JRV.MON
    END
  END
  IF WIP.CNTR THEN
    FOR I = 1 TO WPTR
      NEW.WIP<1,2,I> = 0 - NEW.WIP<1,1,I>
    NEXT I
    NEW.MON<1,2> = NEW.MON<1,1>
  END
  JOS.RC.COST = JOS.RC.COST + DRV.COST<1,MLP>
  OLD.DATE = JOS.DATE
  MATWRITE JOS.REC ON JOB.OSP, OS.ID : SEQ
  JOS.RC.COST = 0
  JOS.QTY = NEW.QTY
  JOS.DCOST = NEW.DCOST
  JOS.COST = 0 - DRV.COST<1,MLP>
  JOS.SALE = NEW.SALE
  JOS.DATE = DRV.DATE
  JOS.MON = NEW.MON
  JOS.WIP = NEW.WIP
  JOS.RC.TRAN = DRV.TRAN<1,MLP>
  JOS.RC.JOB = DRV.JOB
  JOS.RC.DESC = DRV.REASON<1,MLP>
  IF WIP.CNTR THEN
    JOB.OS.WIP<1,1> = JOB.OS.WIP<1,1> + WIP.CNTR
    JOB.WIP<1,1> = JOB.WIP<1,1> + WIP.CNTR
    FOR I = 1 TO WPTR
      JOB.OS.WIP<1,2,I> = JOB.OS.WIP<1,2,I> + INV.WIP<1,1,I>
      JOB.OS.WIP<1,3,I> = JOB.OS.WIP<1,3,I> - INV.WIP<1,1,I> + JOS.WIP<1,1,I>
      JOB.WIP<1,2,I> = JOB.WIP<1,2,I> + INV.WIP<1,1,I>
      JOB.WIP<1,3,I> = JOB.WIP<1,3,I> - INV.WIP<1,1,I> + JOS.WIP<1,1,I>
    NEXT I
  END
  IF JOS.MON<1,1> < JOB.OS.WIP<1,4> OR JOB.OS.WIP<1,4> = "" THEN
    JOB.OS.WIP<1,4> = JOS.MON<1,1>
    IF JOS.MON<1,1> < JOB.WIP<1,4> OR JOB.WIP<1,4> = "" THEN
      JOB.WIP<1,4> = JOS.MON<1,1>
    END
  END
  IF JOS.MON<1,1> > JOB.OS.WIP<1,5> THEN
    JOB.OS.WIP<1,5> = JOS.MON<1,1>
    IF JOS.MON<1,1> > JOB.WIP<1,5> THEN
      JOB.WIP<1,5> = JOS.MON<1,1>
    END
  END
  JOB.OS.QTY<1,DFND> = JOB.OS.QTY<1,DFND> + JOS.QTY
  JOB.OS.DCOST<1,DFND> = JOB.OS.DCOST<1,DFND> + JOS.DCOST
  JOB.OS.COST<1,DFND> = JOB.OS.COST<1,DFND> + JOS.COST
  JOB.OS.SALE<1,DFND> = JOB.OS.SALE<1,DFND> + JOS.SALE
  PRDS.ID = CONO:"*":JOS.DIV:"*":DEPT:"*":CCTR:"*":NEW.MON<1,1>:"*1*A"
  MATREADU PRDS.REC FROM PROD.STATS, PRDS.ID ELSE MAT PRDS.REC = ""
  BEGIN CASE
    CASE JOS.TYPE = "N"
      PTR = 2
      PRDS.OSP.NC.DCOST = PRDS.OSP.NC.DCOST + JOS.DCOST
      PRDS.OSP.NC.COST = PRDS.OSP.NC.COST + JOS.COST
    CASE JOS.TYPE = "C"
      PTR = 3
      PRDS.OSP.DCOST = PRDS.OSP.DCOST + JOS.DCOST
      PRDS.OSP.COST = PRDS.OSP.COST + JOS.COST
    CASE JOS.TYPE = "S"
      PTR = 4
      PRDS.OSP.SP.DCOST = PRDS.OSP.SP.DCOST + JOS.DCOST
      PRDS.OSP.SP.COST = PRDS.OSP.SP.COST + JOS.COST
      IF JOS.SPOIL.CODE # "" THEN
        SSR.ID=CONO:JOS.DIV:DEPT:"!":CCTR:NEW.MON<1,1>:JOS.SPOIL.CODE
        MATREADU SSR.REC FROM SPOIL.STATS,SSR.ID ELSE MAT SSR.REC = ""
        SSR.OS<1,1> = SSR.OS<1,1> + JOS.DCOST
        IF JOS.DCOST <> JOS.COST THEN
          SSR.OS<1,2> = SSR.OS<1,2> + JOS.COST - JOS.DCOST
        END
        MATWRITE SSR.REC ON SPOIL.STATS,SSR.ID
      END
    CASE 1
      PTR = 1
      PRDS.OSP.DCOST = PRDS.OSP.DCOST + JOS.DCOST
      PRDS.OSP.COST = PRDS.OSP.COST + JOS.COST
  END CASE
  MATWRITE PRDS.REC ON PROD.STATS, PRDS.ID
  JOB.OS.TCOST<1,DFND,PTR> = JOB.OS.TCOST<1,DFND,PTR> + JOS.COST
  JOB.TOT.DCOST = JOB.TOT.DCOST + JOS.DCOST
  JOB.TOT.COST = JOB.TOT.COST + JOS.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JOS.SALE
  READU JOS.SEQ FROM CONTROL, CONO:"DAILY.OSP" ELSE JOS.SEQ = 10001
  NEXT.SEQ = JOS.SEQ + 1
  WRITE NEXT.SEQ ON CONTROL,CONO:"DAILY.OSP"
  IF CO.APS.O.INTRF > 1 THEN GOSUB 2000
  JOB.OS.SEQ<1,DFND> = JOB.OS.SEQ<1,DFND> + 1
  JOS.GLA.DATE = ""
  MATWRITE JOS.REC ON JOB.OSP, OS.ID : JOB.OS.SEQ<1,DFND>
  PPTR = COUNT(JRV.TRAN,VM) + (JRV.TRAN # "") + 1
  JRV.TRAN<1,PPTR> = DRV.TRAN<1,MLP>
  JRV.TTRAN<1,PPTR> = JOS.SEQ
  JRV.REASON<1,PPTR> = DRV.REASON<1,MLP>
  JRV.COST<1,PPTR> = DRV.COST<1,MLP>
  JRV.QTY<1,PPTR> = 0 - JOS.QTY
  JRV.SEQ<1,PPTR> = SEQ
  JRV.TSEQ<1,PPTR> = JOB.OS.SEQ<1,DFND>
  DRV.DEPT = DELETE(DRV.DEPT,1,MLP,0)
  DRV.CCTR = DELETE(DRV.CCTR,1,MLP,0)
  DRV.OPER = DELETE(DRV.OPER,1,MLP,0)
  DRV.EMP = DELETE(DRV.EMP,1,MLP,0)
  DRV.TRAN = DELETE(DRV.TRAN,1,MLP,0)
  DRV.REASON = DELETE(DRV.REASON,1,MLP,0)
  DRV.COST = DELETE(DRV.COST,1,MLP,0)
  DRV.STATUS = DELETE(DRV.STATUS,1,MLP,0)
  DRV.CONV = DELETE(DRV.CONV,1,MLP,0)
  DRV.QTY = DELETE(DRV.QTY,1,MLP,0)
  DRV.SEQ = DELETE(DRV.SEQ,1,MLP,0)
1999*
NEXT MLP
GOTO 99999
*
*--- UPDATE OUTSIDE PO & VEND.STATS FILES
*
2000*
IF CO.POS # "Y" THEN GOTO 2500
MATREADU OPO.REC FROM OUTSIDE.PO, CONO : JOS.PO ELSE GOTO 2488
*T22650 v IF OPO.JOB.NO # DRV.JOB THEN GOTO 2488
*       Logic below takes care of this test
POPTR = 1
LOOP
  LOCATE DRV.JOB IN OPO.JOB.NO<1>,POPTR SETTING POFND THEN
*T25755 v
*           IF PLINE = OPO.PROD.LINE<1,POFND> THEN POPTR = 0
    IF PRD.SEQ = OPO.PROD.SEQ<1,POFND> THEN POPTR = 0
*T25755 ^
  END ELSE
    POPTR = 0; POFND = 0
  END
WHILE POPTR DO
  POPTR = POFND + 1
REPEAT
IF NOT(POFND) THEN GOTO 2488
*T22650 v Add POFND as index to OPO vars.
OPO.QTY.RECVD<1,POFND> = OPO.QTY.RECVD<1,POFND> + JOS.QTY
OPO.DATE.RECVD<1,POFND> = JOS.DATE
OPO.AMT.RECVD<1,POFND> = OPO.AMT.RECVD<1,POFND> + JOS.DCOST
IF OPO.EST.COST<1,POFND> # OPO.AMT.RECVD<1,POFND> THEN OPO.STATUS = 1
JFND = COUNT(OPO.JOB.TRAN<1,POFND>,SVM) + (OPO.JOB.TRAN<1,POFND> # "") + 1
OPO.JOB.TRAN<1,POFND,JFND> = JOS.SEQ
MATWRITE OPO.REC ON OUTSIDE.PO, CONO : JOS.PO
* 17919
* Upate Accrued Liability History
IF OPO.ACCRUE = "Y" THEN
  MATREAD CAOS.REC FROM CATEGORY.OSP, CONO:OPO.PROD.LINE<1,POFND> ELSE MAT CAOS.REC=""
  READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0
  ALH.CT = ALH.CT + 1
  IF ALH.CT > 999999 THEN ALH.CT = 1
  WRITE ALH.CT ON CONTROL,CONO:"ALHCOUNTER"
  MAT ALH.REC = ""
  ALH.ID = CONO:STR("0",6-LEN(ALH.CT)):ALH.CT
  ALH.DATE = DATE()
  ALH.REF = "O*":JOS.PO:"*":DRV.JOB
  ALH.SRC = "OA"
  ALH.MON = JRV.MON
  ALH.AMT = 0 - JOS.DCOST
  ALH.ACCT = CAOS.ACCRU.LIAB
* TASK 20080 v
  ALH.DV.DP.CC = JOS.DIV:DEPT:CCTR
* TASK 20080 ^
  ALH.OFF.ACCT = CAOS.WIP ;*T23880     
  MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID
END
GOTO 2500
2488*
RELEASE OUTSIDE.PO, CONO : JOS.PO
2500*
VSTAT.KEY = CONO : JOS.VEND<1,1> :"!O"  ;*T22266
VPS.KEY = VSTAT.KEY :"!": JOS.PO
*T25755 v
*     VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE
VPDS.KEY = VPS.KEY :"!": DRV.JOB :"!":PLINE:'@':PRD.SEQ
*T25755 ^
MATREADU VSTAT.REC FROM VEND.STATS, VSTAT.KEY ELSE MAT VSTAT.REC = ""
MATREADU VPS.REC FROM VEND.PO.STATS, VPS.KEY ELSE MAT VPS.REC = ""
MATREADU VPDS.REC FROM VEND.PROD.STATS, VPDS.KEY ELSE MAT VPDS.REC = ""
LOCATE JOS.PO IN VSTAT.PO<1>,1 SETTING JFND ELSE GOTO 2888
VSTAT.PO.RECV<1,JFND> = VSTAT.PO.RECV<1,JFND> + JOS.DCOST
*T26565 v Merged VPS from below update of VPDS
PPDD = 1
LOOP
  LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELSE JFND = 0
  BEGIN CASE
    CASE JFND = 0
      PPDD = 0
*T25755 v
*        CASE VPS.WHSE<1,JFND> # PLINE
    CASE VPS.WHSE<1,JFND> # PLINE:'@':PRD.SEQ
      PPDD = JFND + 1
    CASE 1
      VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + JOS.QTY
      VPS.REC.AMT<1,JFND> = VPS.REC.AMT<1,JFND> + JOS.DCOST
      PPDD = 0
  END CASE
WHILE PPDD DO
REPEAT
IF JFND = 0 THEN GOTO 2888
LOCATE OLD.DATE IN VPDS.REC.DATE<1>,1 SETTING JFND ELSE GOTO 2888
VPDS.REC.QTY<1,JFND> = VPDS.REC.QTY<1,JFND> + JOS.QTY
IF VPDS.REC.QTY<1,JFND> # 0 THEN
  UCOST = ICONV(VPS.REC.AMT<1,JFND> / VPS.REC.QTY<1,JFND>,'MD4')
END ELSE
  UCOST = VPDS.REC.UN.COST<1,JFND>
END
IF REV.ALL THEN
  VPDS.REC.UN.COST<1,JFND> = 0
END ELSE
  IF ABS(UCOST - VPDS.REC.UN.COST<1,JFND>) > 1 THEN
    VPDS.REC.UN.COST<1,JFND> = UCOST
  END
END
*T26565 ^
IF VPDS.REC.QTY<1,JFND> + 0 = 0 THEN
  VPDS.REC.DATE = DELETE(VPDS.REC.DATE,1,JFND,0)
  VPDS.REC.QTY = DELETE(VPDS.REC.QTY,1,JFND,0)
  VPDS.REC.UN.COST = DELETE(VPDS.REC.UN.COST,1,JFND,0)
END
*     PPDD = 1
*     LOOP
*        LOCATE DRV.JOB IN VPS.PROD<1>,PPDD SETTING JFND ELSE JFND = 0
*        BEGIN CASE
*        CASE JFND = 0
*           PPDD = 0
*T25755*v
**       CASE VPS.WHSE<1,JFND> # PLINE
*        CASE VPS.WHSE<1,JFND> # PLINE:'@':PRD.SEQ
*T25755*^
*           PPDD = JFND + 1
*        CASE 1
*           VPS.REC.QTY<1,JFND> = VPS.REC.QTY<1,JFND> + JOS.QTY
*           VPS.REC.AMT<1,JFND> = VPS.REC.AMT<1,JFND> + JOS.DCOST
*           PPDD = 0
*        END CASE
*     WHILE PPDD DO
*     REPEAT
*     IF JFND = 0 THEN GOTO 2888
MATWRITE VSTAT.REC ON VEND.STATS, VSTAT.KEY
MATWRITE VPS.REC ON VEND.PO.STATS, VPS.KEY
MATWRITE VPDS.REC ON VEND.PROD.STATS, VPDS.KEY
GOTO 2999
2888*
RELEASE VEND.STATS, VSTAT.KEY
RELEASE VEND.PO.STATS, VPS.KEY
RELEASE VEND.PROD.STATS, VPDS.KEY
2999*
RETURN
99999*
RETURN
END
