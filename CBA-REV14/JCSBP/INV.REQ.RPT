*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - INV.REQ.RPT
* DATE        - 12/09/86
* BY          - CURTIS WILLIAMS , C.B.A
* DESCRIPTION - This Program list detail inventory requirements for jobs.
*T26481 lross 03/08/2002 * Bypass Completed Jobs.
*T26493 cmykleb 03/22/2002 * Change report to use rpt # from proc.
*********************************************************************
*** INSERT EQUATE FROM CPYLIB
*COPY>JCS.CPYLIB>JOB
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>INV.JOB.STATS
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.CNV
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*** INITIALIZATION
   LINE.COUNT = 99 ; PAGE.NO = 0
   TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.JOB.USED = 0
   TOT.REQ.QTY = 0; TOT.AVLB= 0
   SP1 = SPACE(1)
   PRT.DESC = 0
   PRT.PROD = 0
   ICR.CNV = ""
   T.LINE = ""
   T.LINE = "------------------------------------------ --- ---------- -------- -------- ---------- ---------- ---------- ---------- ----------"
   HD.LINE = ""
   HD.LINE = SPACE(09): "PRODUCT NUM/FULL DESCRIPTION      U/M  ON-HAND    JOB NUM REQ DATE  REQ QTY   ALLOC QTY   RESV QTY   USED QTY    BALANCE"
*** SET UP FOR SYSCOM
   SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
*** OPEN FILES
   OPEN '','JOB' TO JOB ELSE
      ERRMSG = 'JOB FILE IS MISSING'
      GOTO 93000
   END
   OPEN '','INV.WHSE' TO INV.WHSE ELSE
      ERRMSG = 'INV.WHSE FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'INVENTORY' TO INVENTORY ELSE
      ERRMSG = 'INVENTORY FILE IS MISSING'
      GOTO 93000
   END
   OPEN '','INV.STATS' TO INV.STATS ELSE
      ERRMSG = 'INV.STATS FILE IS MISSING'
      GOTO 93000
   END
   OPEN '', 'INV.JOB.STATS' TO INV.JOB.STATS ELSE
      ERRMSG = 'INV.JOB.STATS FILE IS MISSING'
      GOTO 93000
   END
*** GET PROC VALUES
   PROCREAD ID ELSE
      ERRMSG = ' CANNOT PERFORM PROCREAD'
      GOTO 93000
   END
   CONO = ID<1>
*T26493 v
*  CONO.NAME = ID<2>
*  REPORT.NAME = "INVENTORY REQUIREMENT REPORT"
*  REPORT.NUMBER = "XXXX"
   CONO.NAME = ""
   REPORT.NAME = ""
   REPORT.NUMBER = ID<2>
*T26493 ^
   REPORT.DATE = DATE()
   HD1 = "" ; HD2 = ""
*** GET HEADING
   CALL GET.PROG.HEAD(CONO,CONO.NAME,REPORT.NAME,REPORT.NUMBER,REPORT.DATE,HD1,HD2)
*** PRINTER ON
   PRINTER ON
IF @LOGNAME ='epitka' THEN DEBUG
*** READ AND PROCESS FIRST RECORD
100*
   READNEXT KEY ELSE GOTO 999999
   GOSUB 200
   MATREAD IWH.REC FROM INV.WHSE,IWH.KEY ELSE GOTO 100
   MATREAD JOB.REC FROM JOB,CONO : JOB.NUM ELSE GOTO 100
*C40276 IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN GOTO 99 ;*T26481
   IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN GOTO 100 ;*T26481
   MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
      MAT INV.REC = ''
   END
   MATREAD INV.JS.REC FROM INV.JOB.STATS , KEY ELSE
      MAT INV.JS.REC = ""
   END
*** SET THE WHSE PRODUCT
   PREV.WHSE = WHSE
   PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
   PREV.PROD = PROD
   PREV.DESC = INV.FULL.DESC
*** PROCESS THE FILE
   GOSUB 2000
   IF AVLB < 1 THEN GOTO 100
*** PRINT THE RECORD
   PREV.CNV = ICR.CNV
   GOSUB 3000
*** READ AND PROCESS ALL THE FILES
*99 *C40276
   DATA = 0
   LOOP
      READNEXT KEY ELSE DATA = 1
   WHILE DATA = 0 DO
      GOSUB 200
      MATREAD IWH.REC FROM INV.WHSE,IWH.KEY ELSE GOTO 111
      MATREAD JOB.REC FROM JOB,CONO : JOB.NUM ELSE GOTO 111
      IF JOB.STATUS<1,1> > 3 AND JOB.STATUS<1,1> # 5 THEN GOTO 111 ;*T26481
      MATREAD INV.REC FROM INVENTORY,PROD.KEY ELSE
         MAT INV.REC = ''
      END
      MATREAD INV.JS.REC FROM INV.JOB.STATS,KEY ELSE
         MAT INV.JS.REC = ""
      END
*** PROCESS THEN FILE
      GOSUB 2000
      IF AVLB < 1 THEN GOTO 111
*** PRINT THE RECORD
      GOSUB 3000
111*
   REPEAT
   GOSUB 4000
*** END OF JOB
   PRINTER OFF
   GOTO 999999
*** SEPERATE THE KEY TO PRPDUCT , WHSE
200*
   PROD.KEY = FIELD(KEY,"!",1)
   PROD = PROD.KEY[4,99]
   WHSE    = FIELD(KEY,"!",2)
   JOB.NUM = FIELD(KEY,"!",3)
   IWH.KEY = PROD.KEY:"!":WHSE
   RETURN
*** PRINT HEADINGS
1000*
   PRINT CHAR(12)
   PAGE.NO = PAGE.NO + 1
   PRINT HD1:PAGE.NO
   PRINT HD2
   PRINT
   PRINT "WAREHOUSE : ":PREV.WHSE "L#8"
   PRINT "MLINE / PLINE : ":PREV.M.P.LINE
   PRINT
   PRINT HD.LINE
   PRINT T.LINE
   LINE.COUNT = 8
   RETURN
*** PROCESS THE RECORD
2000*
   ON.HAND = 0
   PREV.CNV = ICR.CNV; MAT INV.CNV.REC = ''
   BEGIN CASE
   CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
      ICR.CNV = "MD0"
      ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1
   CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
      ICR.CNV = "MD0"
      ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 10; ICR.DV2 = 1
   CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
      ICR.CNV = "MD0"
      ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100; ICR.DV2 = 12
   CASE 1
      ICR.CNV = "MD2"
      ICR.DV1 = 10; ICR.MT1 = 1; ICR.DV2 = 1
   END CASE
   USED.QTY = 0; PTR = 1
   LOOP
      LOCATE PROD IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
      BEGIN CASE
      CASE MFND = 0
         PTR = 0
      CASE WHSE = JOB.RESV.WHSE<1,MFND>
         PTR = 0
         USED.QTY = JOB.USED.QTY<1,MFND>
      CASE 1
         PTR = MFND + 1
      END CASE
   WHILE PTR DO REPEAT
   ON.HAND = INT((((IWH.ON.HAND/ICR.DV1) * ICR.MT1)/ICR.DV2)+.5)
   RESV.QTY = INT((((IJS.JOB.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2)+.5)
   REQ.QTY = INT((((IJS.REQ.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2)+.5)
   USED.QTY = INT((((USED.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2)+.5)
   ALOC.QTY = INT((((IJS.JOB.ALOC/ICR.DV1) * ICR.MT1)/ICR.DV2)+.5)
   AVLB = REQ.QTY - (USED.QTY + RESV.QTY + ALOC.QTY)
   IF AVLB < 1 THEN
      ICR.CNV = PREV.CNV; GOTO 2999
   END
   BEGIN CASE
   CASE WHSE # PREV.WHSE
      GOSUB 4000
      PREV.WHSE = WHSE
      PRT.DESC = 0
      PRT.PROD = 0
      PREV.PROD = PROD
      PREV.DESC = INV.FULL.DESC
      LINE.COUNT = 99
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
   CASE INV.M.LINE:" / ":INV.LINE # PREV.M.P.LINE
      GOSUB 4000
      PREV.M.P.LINE = INV.M.LINE:" / ":INV.LINE
      PRT.DESC = 0
      PRT.PROD = 0
      PREV.PROD = PROD
      PREV.DESC = INV.FULL.DESC
      LINE.COUNT = 99
   CASE PROD # PREV.PROD
      GOSUB 4000
      PRT.DESC = 0
      PRT.PROD = 0
      PREV.PROD = PROD
      PREV.DESC = INV.FULL.DESC
   END CASE
2999*
   RETURN
***   PRINT THE RECORD
3000*
   IF LINE.COUNT > 53 THEN
      GOSUB 1000
   END
   LINE.COUNT = LINE.COUNT + 1
   IF PRT.PROD = 0 THEN
      H.LINE = ''
      H.LINE = H.LINE :PROD "L#15"
      H.LINE = H.LINE :SPACE(28): INV.UNIT<1,2> "L#3"
*        H.LINE = H.LINE :SP1: INV.M.WT "R#6"
      H.LINE = H.LINE :SP1: OCONV(ON.HAND,ICR.CNV) "R#10"
      PRT.PROD = 1
   END ELSE
      IF PRT.DESC =0 THEN
         H.LINE = INV.FULL.DESC "L#45":SPACE(12)
         PRT.DESC = 1
      END ELSE
         H.LINE = SPACE(57)
      END
   END
   H.LINE = H.LINE :SP1: JOB.NUM "L#8"
   H.LINE = H.LINE :SP1:OCONV(IJS.REQ.DATE, "D2/") "L#8"
   H.LINE = H.LINE :SP1:OCONV(REQ.QTY,ICR.CNV)"R#10"
   H.LINE = H.LINE:SP1:OCONV(ALOC.QTY, ICR.CNV) "R#10"
   H.LINE = H.LINE:SP1:OCONV(RESV.QTY, ICR.CNV) "R#10"
   H.LINE = H.LINE:SP1:OCONV(USED.QTY,ICR.CNV) "R#10"
   H.LINE = H.LINE:SP1:OCONV(AVLB, ICR.CNV) "R#10"
   PRINT H.LINE
   TOT.RESRV = TOT.RESRV + RESV.QTY
   TOT.ALLOC = TOT.ALLOC + ALOC.QTY
   TOT.REQ.QTY = TOT.REQ.QTY + REQ.QTY
   TOT.JOB.USED = TOT.JOB.USED + USED.QTY
   TOT.AVLB = TOT.AVLB + AVLB
   AVLB = 0
3099*
   RETURN
*** CHECK FOR END OF PAGE
4000*
   IF LINE.COUNT + 3 > 53 THEN GOSUB 1000
   LINE.COUNT = LINE.COUNT + 3
   IF PRT.DESC =0 THEN
      PRINT PREV.DESC "L#76":"========== ========== ========== ========== =========="
      PRT.DESC = 1
   END ELSE
      PRINT SPACE(76):"========== ========== ========== ========== =========="
   END
   H.LINE = ""
   H.LINE = SPACE(75)
   H.LINE = H.LINE: SP1:OCONV(TOT.REQ.QTY,PREV.CNV)"R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.ALLOC, PREV.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.RESRV, PREV.CNV) "R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.JOB.USED,PREV.CNV)"R#10"
   H.LINE = H.LINE :SP1: OCONV(TOT.AVLB,PREV.CNV)"R#10"
   PRINT H.LINE
   PRINT
   TOT.RESRV = 0 ; TOT.ALLOC = 0 ; TOT.AVLB = 0
   TOT.REQ.QTY = 0; TOT.JOB.USED = 0
   RETURN
***   CALLS FOR SYSCOM
91000*
   ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000*
   ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000*
   PRINTER OFF
   ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
999999*
END
