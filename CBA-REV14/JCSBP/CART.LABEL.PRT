*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.1]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - DRSBP
* PROGRAM     - CART.LABEL.PRT
* AUTHOR      - L. ROSS, C.B.A.
* DATE        - 09/23/91
* DESCRIPTION
* This program prints the carton labels for a job.
*********************************************************************
*
***** INSERT FILES EQUATES
*
*COPY>JCS.CPYLIB>JCS.JOB.SPEC
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>CUST.TEMPLATE.LIST
*COPY>JCS.CPYLIB>SHIPTO.MASTER
*COPY>JCS.CPYLIB>TEMPLATE.DETAIL
*COPY>JCS.CPYLIB>FOLD.CODE
*COPY>JCS.CPYLIB>PACK.CODE
*COPY>JCS.CPYLIB>DISTRIBUTION.CODE
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
**** SETUP ERRMSG ROUTINE
*
      SYS.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
*
***** OPEN FILES
*
      OPEN '','JOB' TO JOB ELSE
         ERRMSG ='JOB FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','DRS.JOB.SPEC' TO DRS.JOB.SPEC ELSE
         ERRMSG ='DRS.JOB.SPEC FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUST.TEMPLATE.LIST' TO CUST.TEMPLATE.LIST ELSE
         ERRMSG = 'CUST.TEMPLATE.LIST FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SHIPTO.MASTER' TO SHIPTO.MASTER ELSE
         ERRMSG = 'SHIPTO.MASTER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','TEMPLATE.DETAIL' TO TEMPLATE.DETAIL ELSE
         ERRMSG = 'TEMPLATE.DETAIL FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','CUSTOMER' TO CUSTOMER ELSE
         ERRMSG = 'CUSTOMER FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','FOLD.CODE' TO FOLD.CODE ELSE
         ERRMSG = 'FOLD.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','PACK.CODE' TO PACK.CODE ELSE
         ERRMSG = 'PACK.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','DISTRIBUTION.CODE' TO DISTRIBUTION.CODE ELSE
         ERRMSG = 'DISTRIBUTION.CODE FILE IS MISSING'
         GOTO 93000
      END
      OPEN '','SHIP.VIA' TO SHIP.VIA ELSE
         ERRMSG = 'SHIP.VIA FILE IS MISSING'
         GOTO 93000
      END
*
**** READ PROC VALUES
*
      PROCREAD ID ELSE
         ERRMSG = 'CANNOT PERFORM PROCREAD'
         GOTO 93000
      END
      CONO = ID<1>
      CONO.NAME = ID<2>
      JOB.NO = ID<3>
      CUST.NO = ID<4>
      TEMP.NO = ID<3>
      COPIES = ID<5>
      FRMQ = ID<8>
      STRT = ID<6>
      LST = ID<7>
      IF STRT = 'A' THEN STRT = 1
      IF (NOT(NUM(STRT))) THEN STRT = 1
      IF LST = 'A' THEN LST = 9999
      IF (NOT(NUM(LST))) THEN LST = 9999
*
**** INITIALIZATION
*
      LN.CNT = 0
      HH.LINE1 = SPACE(5):CUST.NO 'L#6':SPACE(18)
*
      PROMPT''
      CRT @(-1)
*     LOOP
*        CRT @(0,10):CL:@(5,10):'Print (M)ask or (L)abels : ':
*        INPUT X:
*     WHILE X # 'M' AND X # 'L' DO REPEAT
*     IF X = 'M' THEN GOSUB 9000
      READNEXT DKEY ELSE
         ERRMSG = 'NO ITEMS PRESENT - HIT RETURN: '
         GOSUB 91000
         GOTO 99999
      END
      GOSUB 9000
*     IF COPIES > 1 THEN
*        PERFORM "SP-ASSIGN =STANDARD ":COPIES
**FOR ADDS EXECUTE "SP-ASSIGN F":FRMQ:" ":COPIES
*     END
*     PRINTER ON
FOR C = 1 TO COPIES
*
***** READ AND PROCESS FIRST RECORD
*
100 *
*     READNEXT KEY ELSE GOTO 99999
      MATREAD DJS.REC FROM DRS.JOB.SPEC,DKEY ELSE GOTO 99999
      MATREAD CUST.REC FROM CUSTOMER, CONO:DJS.CUST ELSE
         CUST.NAME = '??????????'
      END
      MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
         JOB.DESC = '??????????'
      END
      MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, CONO:CUST.NO:"!":TEMP.NO:"!001" ELSE
         ERRMSG = 'The CUST.TEMPLATE.LIST record for this job is missing'
         GOSUB 91000
         GOTO 99999
      END
      SHIPTO = CTL.SHIPS<1,1>
      IF SHIPTO = '' THEN
         ERRMSG = 'The first record of CUST.TEMPLATE.LIST has no shipto# - run resequencing'
         GOSUB 91000
         GOTO 99999
      END
      SHIP.CNT = DCOUNT(CTL.SHIPS,VM)
      MATREAD TDT.REC FROM TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO ELSE
         MAT TDT.REC = ''
      END
      RSEQ = '001'
      KEY = CONO:CUST.NO:"!":TEMP.NO:"!"
      CNT = 2
      PLLINS = ''
      PRLINS = ''
*
***** READ AND PROCESS ALL RECORDS
*
      DATA = 1
      RUN.NO = 0
      LOOP
         IF SHIP.CNT < 1 THEN
            RSEQ =RSEQ + 1
            IF LEN(RSEQ) < 3 THEN RSEQ = STR('0',3-LEN(RSEQ)):RSEQ
            MATREAD CTL.REC FROM CUST.TEMPLATE.LIST, KEY:RSEQ THEN
               SHIP.CNT = DCOUNT(CTL.SHIPS,VM)
            END ELSE DATA = 0
            IF SHIP.CNT < 1 THEN DATA = 0
         END
         IF RUN.NO >= LST THEN DATA = 0
      WHILE DATA = 1 DO
         FOR I = 1 TO SHIP.CNT
             SHIPTO = CTL.SHIPS<1,I>
             MATREAD SHM.REC FROM SHIPTO.MASTER, CONO:SHIPTO ELSE
                MAT SHM.REC = ''
             END
             MATREAD TDT.REC FROM TEMPLATE.DETAIL, CONO:SHIPTO:"!":TEMP.NO ELSE
                MAT TDT.REC = ''
             END
             RUN.NO = RUN.NO + 1
             IF TDT.QTY > 0 AND RUN.NO >= STRT AND RUN.NO <= LST THEN GOSUB 1000
          NEXT I
          SHIP.CNT = 0
       REPEAT
       IF PLLINS # '' THEN GOSUB 2000
NEXT C
       GOTO 99999
*
**** DETAIL ROUTINE
*
1000 *
*
      BOX.SUM = 0
      BOXES= 0
      RUN.TOT = OCONV(TDT.QTY, 'MD0,')
      MATREAD PCK.REC FROM PACK.CODE, CONO:TDT.PACK ELSE MAT PCK.REC = ''
      IF TDT.CART.LAB = 'Y' AND DJS.BOX.MAX > 0 THEN
         BOXES = INT(TDT.QTY / DJS.BOX.MAX)
         IF REM(TDT.QTY,DJS.BOX.MAX) >= DJS.BOX.MIN THEN BOXES = BOXES + 1
         FOR J = 1 TO BOXES
             IF CNT = 1 THEN CNT = 2 ELSE CNT = 1
             INST.LINES = ''
             LN = 1
             IF TDT.SP.INST.1.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.1;LN=LN+1
             IF TDT.SP.INST.2.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.2;LN=LN+1
             IF TDT.SP.INST.3.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.3;LN=LN+1
             IF TDT.SP.INST.4.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.4;LN=LN+1
             IF TDT.SP.INST.5.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.5;LN=LN+1
             IF TDT.SP.INST.6.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.6;LN=LN+1
             IF TDT.SP.INST.7.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.7;LN=LN+1
             IF TDT.SP.INST.8.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.8;LN=LN+1
             IF TDT.SP.INST.9.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.9;LN=LN+1
             IF TDT.SP.INST.10.USE<1,2> = 'Y' THEN INST.LINES<LN> = TDT.SP.INST.10
             BEGIN CASE
             CASE CNT = 1
                PLLINS = ''
                PLLINS<1> = SPACE(10):CUST.NO 'L#6'
                PLLINS<2> = SPACE(5):JOB.DESC 'L#30'
                PLLINS<3> = SPACE(5):JOB.NO 'L#30':SPACE(8):'ASSISTANT--------':SPACE(4)
                PLLINS<4>= ' '
                LRT = 'R#':LEN(RUN.TOT)
                PLLINS<5> = SPACE(5):'RUN #':RUN.NO 'R#5':'  RUN TOTAL ':RUN.TOT LRT:SPACE(16 - LEN(RUN.TOT)):'SHIPPER----------':SPACE(4)
                PLLINS<6> = ' '
                PLLINS<7> = SPACE(5):'BOX':J 'R#5':' OF':BOXES 'R#5':' BOX TOTAL '
                IF J < BOXES THEN
                   PLLINS<7> = PLLINS<7>:OCONV(DJS.BOX.MAX, 'MD0') 'R#6'
                   BOX.SUM = BOX.SUM + DJS.BOX.MAX
                END ELSE
                   PLLINS<7> = PLLINS<7>:OCONV(TDT.QTY - BOX.SUM, 'MD0') 'R#6'
                END
                PLLINS<8> = SPACE(14):'BOX SIZE * ':DJS.BOX 'R#3':' *'
                PLLINS<9> = ' '
                PLLINS<10> = ' ':STR("*",53)
                PLLINS<11> = ' * SHIP TO  ':SHM.DT.NAME 'L#40':' *'
                PLLINS<12> = ' *          ':SHM.DT.ADDR1 'L#40':' *'
                IF SHM.DT.ADDR2 # '' THEN
                   PLLINS<13> = ' *          ':SHM.DT.ADDR2 'L#40':' *'
                END ELSE
                   DUMMY1 = SHM.DT.CITY
                   DUMMY2 = SHM.DT.STATE
                   DUMMY3 = SHM.DT.ZIP
                   MXL = 40
                   GOSUB 1500
                   PLLINS<13> = ' *          ':DUMMY 'L#40':' *'
                END
                IF SHM.DT.ADDR2 # '' THEN
                   DUMMY1 = SHM.DT.CITY
                   DUMMY2 = SHM.DT.STATE
                   DUMMY3 = SHM.DT.ZIP
                   MXL = 40
                   GOSUB 1500
                   PLLINS<14> = ' *          ':DUMMY 'L#40':' *'
                   PLLINS<15> = ' ':STR("*",53)
                END ELSE
                   PLLINS<14> = ' ':STR("*",53)
                   PLLINS<15> = ' '
                END
                PLLINS<16> =' '
                IF INST.LINES<1> # '' THEN PLLINS<17> = SPACE(6):'TO NEWSPAPER BY  ':INST.LINES<1> 'L#40' ELSE PLLINS<17> = ' '
                IF INST.LINES<2> # '' THEN PLLINS<18> = SPACE(8):'FOR INSERTION  ':INST.LINES<2> 'L#40' ELSE PLLINS<18> = ' '
                IF INST.LINES<3> # '' THEN PLLINS<19> = SPACE(23):INST.LINES<3> 'L#40' ELSE PLLINS<19> = ' '
                FOR X = 20 TO 24
                   PLLINS<X> = ' '
                NEXT X
             CASE 1
                PRLINS = ''
                PRLINS<1> = SPACE(10):CUST.NO 'L#6'
                PRLINS<2> = SPACE(5):JOB.DESC 'L#30'
                PRLINS<3> = SPACE(5):JOB.NO 'L#30':SPACE(8):'ASSISTANT--------':SPACE(4)
                PRLINS<4>= ' '
                LRT = 'R#':LEN(RUN.TOT)
                PRLINS<5> = SPACE(5):'RUN #':RUN.NO 'R#5':'  RUN TOTAL ':RUN.TOT LRT:SPACE(16 - LEN(RUN.TOT)):'SHIPPER----------':SPACE(4)
                PRLINS<6> = ' '
                PRLINS<7> = SPACE(5):'BOX':J 'R#5':' OF':BOXES 'R#5':' BOX TOTAL '
                IF J < BOXES THEN
                   PRLINS<7> = PRLINS<7>:OCONV(DJS.BOX.MAX, 'MD0') 'R#6'
                   BOX.SUM = BOX.SUM + DJS.BOX.MAX
                END ELSE
                   PRLINS<7> = PRLINS<7>:OCONV(TDT.QTY - BOX.SUM, 'MD0') 'R#6'
                END
                PRLINS<8> = SPACE(14):'BOX SIZE * ':DJS.BOX 'R#3':' *'
                PRLINS<9> = ' '
                PRLINS<10> = ' ':STR("*",53)
                PRLINS<11> = ' * SHIP TO  ':SHM.DT.NAME 'L#40':' *'
                PRLINS<12> = ' *          ':SHM.DT.ADDR1 'L#40':' *'
                IF SHM.DT.ADDR2 # '' THEN
                   PRLINS<13> = ' *          ':SHM.DT.ADDR2 'L#40':' *'
                END ELSE
                   DUMMY1 = SHM.DT.CITY
                   DUMMY2 = SHM.DT.STATE
                   DUMMY3 = SHM.DT.ZIP
                   MXL = 40
                   GOSUB 1500
                   PRLINS<13> = ' *          ':DUMMY 'L#40':' *'
                END
                IF SHM.DT.ADDR2 # '' THEN
                   DUMMY1 = SHM.DT.CITY
                   DUMMY2 = SHM.DT.STATE
                   DUMMY3 = SHM.DT.ZIP
                   MXL = 40
                   GOSUB 1500
                   PRLINS<14> = ' *          ':DUMMY 'L#40':' *'
                   PRLINS<15> = ' ':STR("*",53)
                END ELSE
                   PRLINS<14> = ' ':STR("*",53)
                   PRLINS<15> = ' '
                END
                PRLINS<16> = ' '
                IF INST.LINES<1> # '' THEN PRLINS<17> = SPACE(6):'TO NEWSPAPER BY  ':INST.LINES<1> 'L#40' ELSE PRLINS<17> = ' '
                IF INST.LINES<2> # '' THEN PRLINS<18> = SPACE(8):'FOR INSERTION  ':INST.LINES<2> 'L#40' ELSE PRLINS<18> = ' '
                IF INST.LINES<3> # '' THEN PRLINS<19> = SPACE(23):INST.LINES<3> 'L#40' ELSE PRLINS<19> = ' '
                FOR X = 20 TO 24
                   PRLINS<X> = ' '
                NEXT X
            END CASE
            IF CNT = 2 THEN GOSUB 2000
         NEXT J
      END
      RETURN
*
**** SETUP C/S/Z LINE
*
1500 *
      DUMMY = ''
      DUMMY2 = DUMMY2[1,2]
      LC = MXL - LEN(DUMMY3) - LEN(DUMMY2) - 3
      DUMMY1 = DUMMY1[1,LC]
      DUMMY = (DUMMY1 : ' ':DUMMY2 : '  ' : DUMMY3)
      RETURN
*
*---- PRINT 2-UP LABELS
*
2000 *
      FOR P = 1 TO 24
          IF LEN(PLLINS<P>) < 66 THEN PLLINS<P> = PLLINS<P>:SPACE(66 - LEN(PLLINS<P>))
          PRINT PLLINS<P>:PRLINS<P>
      NEXT P
      PLLINS = ''
      PRLINS = ''
      RETURN
*
*---- PRINTER LINE-UP
*
9000 *
*     X = 'N'
*     LOOP
      PRINTER ON
      FOR X = 1 TO 2
         PRINT SPACE(10):'XXXXXX':SPACE(60):'XXXXXX'
         PRINT SPACE(5):STR('X',30):SPACE(36):STR('X',30)
         PRINT SPACE(5):'XXXXXXXXXX':SPACE(28):'XXXXXXXXX--------':SPACE(11):'XXXXXXXXXX':SPACE(28):'XXXXXXXXX--------'
         PRINT
         PRINT SPACE(5):'XXXXX   XXXXXXXXXXXXXXXXXXXX':SPACE(10):'XXXXXXX----------':SPACE(11):'XXXXX   XXXXXXXXXXXXXXXXXXXX':SPACE(10):'XXXXXXX----------'
         PRINT
         PRINT SPACE(5):'XXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXX':SPACE(33):'XXXXX  XXXXXXXXXXXXXXXXXXXXXXXXXX'
         PRINT SPACE(14):'XXXXXXXXXXXXXXXX':SPACE(50):'XXXXXXXXXXXXXXXX'
         PRINT
         PRINT SPACE(1):STR('*',53):SPACE(13):STR('*',53)
         PRINT SPACE(1):"* XXXX XX  XXXXXXX":SPACE(34):"*":SPACE(13):"* XXXX XX  XXXXXXX":SPACE(34):"*"
         FOR I = 1 TO 3
            PRINT SPACE(1):"*":SPACE(10):STR('X',37):SPACE(4):"*":SPACE(13):"*":SPACE(10):STR('X',37):SPACE(4):"*"
         NEXT I
         PRINT SPACE(1):STR("*",53):SPACE(13):STR("*",53)
         FOR I = 1 TO 9; PRINT; NEXT I
*       PRINTER OFF
*        PRINTER CLOSE
*        LOOP
*           PRINT @(0,10):CL:@(5,10):'Are the labels aligned? (RET/N) ':
*           INPUT X:
*        WHILE X # '' AND X # 'N' DO REPEAT
*     WHILE X = 'N' DO
*        SLEEP 5
*     REPEAT
      NEXT X
      CRT @(0,12):CL:@(5,12):'Carton Labels now printing'
*     SLEEP 20
      RETURN
*
***** CALL SYSCOM(MAT SYSCOM.REC)
*
91000 *
      ERR.TYPE = 1
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
92000 *
      ERR.TYPE = 2
      CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000 *
      ERR.TYPE = 3
      CALL SYSCOM(MAT SYSCOM.REC)
*
**** END OF JOB
*
99999 *
      PRINTER OFF
      END
