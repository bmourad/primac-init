*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - OPER.MAINT
* AUTHOR
* DATE        - 04/15/94
* DESCRIPTION -
*
*T23193 cindy 08/20/1998 * call to second screen not gui'd, error msgs
*T26210 cmykleb 02/05/2002 * Add a Operation Type field to screen.
*T25978 adelgado 02/14/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 03/07/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>JCS.CPYLIB>OPERATION
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>GEN.XREF.SUB
*COPY>ICS.CPYLIB>CATEGORY
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
  MAT FILE.VARS = ""
  OPEN "", "JCS.SCREENS" TO M.SCREENS ELSE
    ERRMSG = "JCS.SCREENS FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "OPERATION" TO OPERATION ELSE
    ERRMSG = "OPERATION FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "PREFIX" TO PREFIX ELSE
    ERRMSG = "PREFIX FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "CONTROL" TO CONTROL ELSE
    ERRMSG = "CONTROL FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "COMPANY" TO COMPANY ELSE
    ERRMSG = "COMPANY FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "CATEGORY" TO CATEGORY ELSE
    ERRMSG = "CATEGORY FILE IS MISSING"
    GOTO 93000
  END
*T26210 v
  OPEN "", "OPERATION.GROUP" TO OPERATION.GROUP ELSE
    ERRMSG = "OPERATION.GROUP FILE IS MISSING"
    GOTO 93000
  END
  OPEN "", "XREF.DATA" TO XREF.DATA ELSE
    ERRMSG = "XREF.DATA FILE IS MISSING"
    GOTO 93000
  END
*T26210 ^
  MAT COMP.REC = ""
  CONO = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 99999
******************
* INITIALIZATION *
******************
  MAT EDIT.COM.DRIVER = ""
  MAT GEN.XREF.REC = "" ; * T26210
  DASHES = STR("-",80)
  OLD.NAME = ""
  LINE.SPACE = 1
  PAGE.SIZE = 9
  BEGIN.PAGE = 11
  OPER.SF.PROMPT = ""
*******************
* MAIN PROCESSING *
*******************
100*
  ECD.SCRN.CNT = 2
  ECD.SCRN.NAME<1> = "OPER.MAINT"
  ECD.SCRN.NAME<2> = "OPER.MAINT.SUB"
  ECD.ACTION=1;CALL SCRN.EDIT
  ECD.SCRN.NO = 1
200*
  MAT OPER.REC = ""
  LINES = 0
  LN = 1
  OLD.START.LINE = 0
  START.LINE = 0
  OLD.LINES = 0
  PLINE.DESC = ""
  REQUEST = ""
  MAT SCV.REC = ""
  ECD.ACTION=6;CALL SCRN.EDIT
  ECD.NUM = 1
  ECD.VALDAT.CODE = "4"
  ECD.VALDAT.FILE = OPERATION
  ECD.PREFIX.ID = CONO
  ECD.ACTION=4;CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      GOTO 99999
    CASE ECD.RET.VALUE # "" AND  ECD.VALDAT.ITEM # ""
      * T26126 v
      READU DUMMY FROM OPERATION, CONO:ECD.RET.VALUE LOCKED
        ERRMSG = 'OPERATION record is locked by user - ':GETUSERNAME(STATUS())
        GOSUB 91000 ; GOTO 200
      END ELSE NULL
      * T26126 ^
      FOR I = 1 TO OPER.REC.SIZE
        OPER.REC(I) = ECD.VALDAT.ITEM<I>
      NEXT I
      OPER.ID = ECD.RET.VALUE
      GOSUB 20000
      ECD.ACTION=3;CALL SCRN.EDIT
      OLD.NAME = OPER.DESC
      IF OPER.PLINE = "ALL" THEN
        PLINE.DESC = "ALL PRODUCT LINES"
        LINES = 1
      END ELSE
        LINES = COUNT(OPER.PLINE,VM) + (OPER.PLINE # "")
        FOR I = 1 TO LINES
          MATREAD CATG.REC FROM CATEGORY,CONO:OPER.PLINE<1,I> ELSE CATG.DESC = "????????"
          PLINE.DESC<1,I> = CATG.DESC
        NEXT I
      END
      GOSUB 10000
    CASE ECD.RET.VALUE # "" AND ECD.VALDAT.ITEM = ""
      OPER.ID = ECD.RET.VALUE
*T26210 v
*        FOR REF = 1 TO 7
*           ON REF GOSUB 1100,1200,1300,1400,1500,1600,1900
      FOR REF = 1 TO 8
        ON REF GOSUB 1100,1200,1300,1400,1500,1600,1900,1950
*T26210 ^
        IF ECD.RET.VALUE = "END" THEN GOTO 200
        IF REF = 1 THEN GOSUB 20000;ECD.ACTION=3;CALL SCRN.EDIT
      NEXT REF
      IF OPER.MATL.REQ = "Y" THEN
        LOOP
          LN = LINES + 1
          OLD.LINES = LINES
          GOSUB 2000
        WHILE LINES > OLD.LINES AND OPER.PLINE # "ALL" DO REPEAT
        LN = LINES
        GOSUB 10000
      END
    CASE 1
      GOTO 200
  END CASE
  MORE = 1
  LOOP
    ECD.NUM = 5
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
    ECD.ACTION=4;CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = "END" OR REQUEST = "E"
        RELEASE OPERATION, CONO:OPER.ID       ;* T26126
        MORE = 0
      CASE NUM(REQUEST)
        IF REQUEST > 0 THEN
*T26210 v
*              ON REQUEST GOSUB 1100,1200,1300,1400,1500,1600,1900
          ON REQUEST GOSUB 1100,1200,1300,1400,1500,1600,1900,1950
*T26210 ^
        END
      CASE REQUEST = "F"
        MATWRITE OPER.REC ON OPERATION, CONO : OPER.ID
        MORE = 0
      CASE REQUEST = "A"
        IF OPER.PLINE = "ALL" THEN
          ERRMSG = "All product lines may be used. No need to add ";GOSUB 91000
        END ELSE
          LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 2000
          WHILE LINES > OLD.LINES AND OPER.PLINE # "ALL" DO REPEAT
          LN = LINES
          GOSUB 10000
        END
      CASE REQUEST = "S"
        LN = LN + PAGE.SIZE
        IF LN > LINES THEN LN = 1
        GOSUB 10000
      * T25978 v
      CASE REQUEST = 'SR'
        LN -= PAGE.SIZE
        IF LN < 1 THEN LN = 1
        GOSUB 10000
      CASE REQUEST = 'ST'
        LN = 1
        GOSUB 10000
      CASE REQUEST = 'SB'
        LN = LINES
        GOSUB 10000
      * T25978 ^
      CASE REQUEST = "C"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
          GOSUB 2001
        END
        GOSUB 10000
      CASE REQUEST = "D"
        GOSUB 70000
        IF LNO THEN
          LN = LNO
          OPER.PLINE = DELETE(OPER.PLINE,1,LN,0)
          PLINE.DESC = DELETE(PLINE.DESC,1,LN,0)
          LINES = COUNT(OPER.PLINE,VM) + (OPER.PLINE # "")
          IF LN > 1 AND LN > LINES THEN LN = LN - 1
          IF LN < 1 THEN LN = 1
          OLD.START.LINE = 0
        END
        GOSUB 10000
      CASE REQUEST = "P" AND OPER.SF.PROMPT<1,1> # "N"
        CALL OPER.MAINT.SUB(CONO,OPER.ID,MAT OPER.REC)
        LN = 1
        ECD.SCRN.NO = 1
*T123193 v
*          ECD.ACTION=1;CALL SCRN.EDIT
*T23193 ^
        ECD.ACTION=3;CALL SCRN.EDIT
        LN = 1
        OLD.START.LINE = 0
        GOSUB 10000
*         CASE OPER.MATL.REQ # "Y"
    END CASE
  WHILE MORE DO REPEAT
  GOTO 200
*
*---- GET DESCRIPTION
*
1100*
  ECD.NUM=2;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  OPER.DESC = ECD.RET.VALUE
  RETURN
*
*---- GET COST TYPE
*
1200*
  ECD.NUM=6;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  OPER.CTYPE = ECD.RET.VALUE
  RETURN
*
*---- GET SCHEDULED OPERATION
*
1300*
  ECD.NUM=4;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  OPER.SCHED.FLG = ECD.RET.VALUE
  IF ECD.RET.VALUE = "Y" THEN
1310 SCV.REC(7)<ECD.SCRN.NO> = OPER.SCHED
    ECD.NUM=7;ECD.ACTION=4;CALL SCRN.EDIT
    IF ECD.RET.VALUE = "END" THEN RETURN
    IF ECD.RET.VALUE # "" THEN
      READ REC FROM OPERATION, CONO:ECD.RET.VALUE ELSE
        ERRMSG = "Invalid operation. Try again! "
        GOSUB 91000
        GOTO 1310
      END
    END
    OPER.SCHED = ECD.RET.VALUE
  END
  RETURN
*
*---- GET MATERIAL REQUIRED FLAG
*
1400*
  ECD.NUM=3;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  OPER.MATL.REQ = ECD.RET.VALUE
  RETURN
*
*---- GET MATERIAL PROMPT MESSAGE
*
1500*
  ECD.NUM=8;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  OPER.PROMPT = ECD.RET.VALUE
  RETURN
*
*---- GET EQUIPMENT REPAIRS TYPE
1600 *
  ECD.NUM=11;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    OPER.RTYPE = ECD.RET.VALUE
  END
  RETURN
*
*
*
*--- ALLOW SPLITTING
*
1700*
*     IF OPER.TYPE = "R" THEN
*        OPER.SPLIT = "N"
*        ECD.NUM = 9; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = OPER.SPLIT
*        ECD.ACTION = 5; CALL SCRN.EDIT
*     END ELSE
*        ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
*        IF ECD.RET.VALUE = "END" THEN GOTO 1899
*        OPER.SPLIT = ECD.RET.VALUE
*     END
*
*--- DAYS GAP
*
1800*
*     IF OPER.SPLIT = "N" THEN
*        OPER.DAYS.GAP = 0
*        ECD.NUM = 10; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = OPER.DAYS.GAP
*        ECD.ACTION = 5; CALL SCRN.EDIT
*     END ELSE
*        ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
*        IF ECD.RET.VALUE # "END" THEN OPER.DAYS.GAP = ECD.RET.VALUE
*     END
1899*
*     RETURN
*
*---- GET ADDITIONAL PROMPTS FLAG
*
1900*
* OPER.SF.PROMPT WILL HOLD MULTIPLE OPTIONAL PROMPT CODE VALUES, OR 'N'
  ECD.NUM=9;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF NUM(OPER.SF.PROMPT<1,1>) THEN
    IF ECD.RET.VALUE = 'N' THEN
      OPER.SF.PROMPT = ECD.RET.VALUE
      OPER.SF.PROMPT='N'
    END
    IF ECD.RET.VALUE = 'Y' THEN
      CALL OPER.MAINT.SUB(CONO,OPER.ID,MAT OPER.REC)
      LN = 1
      ECD.SCRN.NO = 1
*T23193 v
*           ECD.ACTION=1;CALL SCRN.EDIT
*T23193 ^
      ECD.ACTION=3;CALL SCRN.EDIT
      LN = 1
      OLD.START.LINE = 0
      GOSUB 10000
    END
  END ELSE
    IF ECD.RET.VALUE = 'Y' THEN
      OPER.SF.PROMPT = 'Y'
      OPER.SF.PROMPT = ''
      CALL OPER.MAINT.SUB(CONO,OPER.ID,MAT OPER.REC)
      LN = 1
      ECD.SCRN.NO = 1
*T23193 v
*           ECD.ACTION=1;CALL SCRN.EDIT
*T23193 ^
      ECD.ACTION=3;CALL SCRN.EDIT
      LN = 1
      OLD.START.LINE = 0
      GOSUB 10000
    END ELSE
      OPER.SF.PROMPT = 'N'
      OPER.SF.PROMPT = 'N'
    END
  END
  RETURN
*T26210 v
*
*--- OPERATION TYPE
*
1950 *
  SCV.REC(16)<ECD.SCRN.NO> = OPER.GROUP
  ECD.NUM=16;ECD.ACTION=4;CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN RETURN
  IF ECD.RET.VALUE = "???" THEN
    GXR.CO = CONO
    GXR.NAME = "OPERATION.GROUP"
    GXR.FILE = OPERATION.GROUP
    GXR.SORT.FILE = OPERATION.GROUP
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC, PREFIX, XREF.DATA)
    ECD.ACTION = 2 ; CALL SCRN.EDIT
    ECD.ACTION = 3 ; CALL SCRN.EDIT
    START.LINE = 0
    OLD.START.LINE = 0
    GOSUB 10000
    IF GXR.ID = "" THEN GOTO 1950
    ECD.NUM = 16; SCV.REC(16)<ECD.SCRN.NO> = GXR.ID
    ECD.ACTION = 5 ; CALL SCRN.EDIT
    ECD.RET.VALUE = GXR.ID
  END
  IF ECD.RET.VALUE # "" THEN
    READV OPER.GRP.DESC FROM OPERATION.GROUP,CONO:ECD.RET.VALUE,1 ELSE
      ERRMSG = "Invalid Operation Group. Try again! "
      GOSUB 91000
      GOTO 1950
    END
  END
  OPER.GROUP = ECD.RET.VALUE
  RETURN
*T26210 ^
*
*--- GET ALL PRODUCT LINES
*
2000*
  GOSUB 10000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
  P_X  := AM:0 ; P_Y := AM:SLN ; P_VALUE := AM:LN "R#3"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2001*
  FILL = "#"
  X = 4; Y = SLN; TYP = 1; MAXL = 8; O.R = "O"; MAXV = ""; MINV = ""
  DEFAULT = OPER.PLINE<1,LN>; HMSG = "ENTER PLINE"
  CALL EDIT.SUB
  BEGIN CASE
    CASE VALUE = ""
      IF REQUEST = "C" THEN GOTO 2001
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2999
    CASE VALUE = "END"
*        IF REQUEST = "A" THEN PRINT @(0,SLN) : CL :; GOTO 2999
      IF REQUEST = "A" THEN 
        P_X = 4 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
        CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        GOTO 2999
      END
      P_X  = 4 ; P_Y = SLN ; P_VALUE = OPER.PLINE<1,LN> "L#8" ; P_OPT = ""
      P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:PLINE.DESC<1,LN> "L#30"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2999
    CASE VALUE = "ALL"
      OPER.PLINE = VALUE
      PLINE.DESC = "ALL PRODUCT LINES"
      OLD.START.LINE = 0
    CASE VALUE # "" AND VALUE # "ALL"
      LOCATE VALUE IN OPER.PLINE<1>,1 SETTING LL ELSE LL = LN
      IF LL # LN THEN
        ERRMSG = VALUE:" is already present on line ":LL
        GOSUB 91000
        GOTO 2001
      END
      MATREAD CATG.REC FROM CATEGORY, CONO:VALUE ELSE
        ERRMSG = "Invalid product line. Try again! ";GOSUB 91000;GOTO 2001
      END
      OPER.PLINE<1,LN> = VALUE
      PLINE.DESC<1,LN> = CATG.DESC
      P_X  = 13 ; P_Y = SLN ; P_VALUE = PLINE.DESC<1,LN> "L#30" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END CASE
  LINES = COUNT(OPER.PLINE,VM) + (OPER.PLINE # "")
2999*
  RETURN
*
*--- SCROLL ROUTINE
*
10000*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  IF START.LINE = OLD.START.LINE THEN GOTO 10001
  OLD.START.LINE = START.LINE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  CNT = 1
  FOR N = START.LINE TO LAST.LINE UNTIL N > LINES
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:OPER.PLINE<1,N> "L#8"
    P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:PLINE.DESC<1,N> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR M = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(M-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT M
10001*
  RETURN
*
*---- LOAD SCREEN DATA
*
20000*
  SCV.REC(1)<ECD.SCRN.NO> = OPER.ID
  SCV.REC(2)<ECD.SCRN.NO> = OPER.DESC
  SCV.REC(3)<ECD.SCRN.NO> = OPER.MATL.REQ
*     SCV.REC(4)<ECD.SCRN.NO> = OPER.TYPE
  SCV.REC(6)<ECD.SCRN.NO> = OPER.CTYPE
  SCV.REC(7)<ECD.SCRN.NO> = OPER.SCHED
  SCV.REC(4)<ECD.SCRN.NO> = OPER.SCHED.FLG
  SCV.REC(8)<ECD.SCRN.NO> = OPER.PROMPT
  IF OPER.SF.PROMPT = 'N' OR OPER.SF.PROMPT = '' THEN
    SCV.REC(9)<ECD.SCRN.NO> = 'N'
    OPER.SF.PROMPT = 'N'
  END ELSE
    SCV.REC(9)<ECD.SCRN.NO> = 'Y'
  END
*     SCV.REC(9)<ECD.SCRN.NO> = OPER.SPLIT
*     SCV.REC(10)<ECD.SCRN.NO> = OPER.DAYS.GAP
  SCV.REC(11)<ECD.SCRN.NO> = OPER.RTYPE
  SCV.REC(16)<ECD.SCRN.NO> = OPER.GROUP ; * T26210
  RETURN
*
*--- GET LINE NUMBER
*
70000*
  GOSUB 10000
  ECD.NUM = 15
  ECD.MINV = OLD.START.LINE
  IF LAST.LINE < LINES THEN
    ECD.MAXV = LAST.LINE
  END ELSE
    ECD.MAXV = LINES
  END
  CALL SCRN.EDIT
  LNO = ECD.RET.VALUE
  IF LNO = "" OR LNO = "END" THEN LNO = 0
  RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : CL : ERRMSG :
*       INPUT XX :
*       PRINT @(0,23) : CL :
*       RETURN
92000 ERR.TYPE=2;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 92000 ERR.TYPE = 2
*       CALL SYSCOM(MAT SYSCOM.REC)
*       RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000 ERR.TYPE = 3
*       CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1)
END
