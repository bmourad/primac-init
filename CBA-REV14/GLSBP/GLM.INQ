*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - GLM.INQ
* BY          - WALID YAMOUT , C.B.A
* DATE        - 10/15/86
* DESCRIPTION -
*   This program is an inquiry for G/L activities
******* renee 08/18/1997 * Transferring changes made to this program in
*                          Rev10b to Rev11 for T21331.
*MOD TASK 19234 CLS 9/95  ADD DET OPTIONS
*T21331 rick 12/13/1996 * Problem with display of totals for last period
*                         of year
*T22401 lanny 02/03/1998 * Expand Lines to 9999
*T23882 markt 04/15/1999 * Prevent user from selecting (D)etail when
*                          COA.DETAIL is not "D".
*T25656 lanny 02/28/2001 * Account Desc XREF doesn't work.
*T26006 alex 07/23/2001 * Allow inquiry of future period data.
*T26083 alex 09/05/2001 * Show the Open Balance and Ending Balance
*                         column data, even if there is no Debit/Credit
*                         activity for the period.
*T25978 adelgado 02/20/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
*********************************************************************
*
*--- INSERT FILES EQUETES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>APS.CPYLIB>SQV
*COPY>ARS.CPYLIB>MANUAL.INVOICE
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>GLS.CPYLIB>GLX
*COPY>JCS.CPYLIB>INVOICE
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
  ERRMSG = ""
*
*--- GET COMPANY
*
  MAT FILE.VARS = ""
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','INVOICE' TO INVOICE ELSE ERRMSG = 'INVOICE FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','SQV' TO SQV ELSE ERRMSG = 'SQV FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','MANUAL.INVOICE' TO MANUAL.INVOICE ELSE ERRMSG = 'MANUAL.INVOICE FILE IS MISSING'; GOSUB 91000; GOTO 999999
  CONO = ""
  MAT COMP.REC = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 999999
  READ FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE FISCAL.REC = ""
  READ PERIOD.REC FROM CONTROL, CONO : "ACCT.PERIODS" ELSE 
    PERIOD.REC = ""
    PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
  PERIOD = FISCAL.REC<1>[5,2] + 0
  ;* T26006 v
  SEL.PERIOD = FISCAL.REC<1>
  ;* T26006 ^
  IF PERIOD < 1 OR PERIOD > NUM.PERIODS THEN
    ERRMSG = "INVALID PERIOD ":PERIOD
    GOSUB 91000
    GOTO 999999
  END
  OPN = CB.OPN + PERIOD
*T21331 v
  IF PERIOD = NUM.PERIODS THEN
    OPNVAL = 55
  END ELSE
    OPNVAL = OPN+1
  END
*T21331 ^
  IN.ACCT.LEN = LEN(CO.ACCT.PIC)
  BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
  IF NOT(NUM(BASE.LEN)) OR BASE.LEN > IN.ACCT.LEN THEN
    ERRMSG = "ERROR IN THE ACCOUNT STRUCTURE"
    GOSUB 91000
    GOTO 999999
  END
*
*--- OPEN FILES
*
  OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'GLS.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLX' TO GLX ELSE ERRMSG = 'GLX FILE IS MISSING'; GOSUB 91000; GOTO 999999
  ;* T26006 v
  * OPEN '','GLM' TO GLM ELSE ERRMSG = 'GLM FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLM' TO GLM.FILE ELSE ERRMSG = 'GLM FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLA' TO GLA.FILE ELSE ERRMSG = 'GLA FILE IS MISSING'; GOSUB 91000; GOTO 999999
  GLM = GLM.FILE
  ;* T26006 ^
  OPEN '','COA' TO COA ELSE ERRMSG = 'COA FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','COA.XREF' TO COA.XREF ELSE ERRMSG = 'COA.XREF FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE ERRMSG = 'ACCT.TYPE FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.CATG' TO ACCT.CATG ELSE ERRMSG = 'ACCT.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE ERRMSG = 'ACCT.SUB.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE ERRMSG = 'CATG.AND.SUB FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE ERRMSG = 'CO.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE ERRMSG = 'DV.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE ERRMSG = 'DP.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE ERRMSG = 'CC.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
*
*--- INITIALIZATION
*
  LINE.SPACE = 1
  BEGIN.PAGE = 12
  PAGE.SIZE = 8
  LINES = 0
  LN = 1
  OLD.START = 0
  GEN.DIV = "00"
  GEN.DEPT = "00"
  GEN.CCTR = "000"
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GXR.LOC = 0
  UNKNOWN = "UNKNOWN"
*
*--- SCREEN
*
  FILL = "#"
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 8
  ECD.SCRN.NAME<1> = "GLM.INQ"
  ECD.SCRN.NAME<2> = "INVOICE.INQ"
  ECD.SCRN.NAME<3> = "MANUAL.INV.INQ"
  ECD.SCRN.NAME<4> = "VOUCHER.DET.INQ"
  ECD.SCRN.NAME<5> = "APS.CHECK.DET.INQ"
  ECD.SCRN.NAME<6> = "ARS.CHECK.DET.INQ"
  ECD.SCRN.NAME<7> = "DETAIL.REV.DIST"
  ECD.SCRN.NAME<8> = "VENDOR.MAINT.INQ"
  ECD.ACTION=1;CALL SCRN.EDIT
*
*--- MAIN PROCESS
*
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=2;CALL SCRN.EDIT
  ;* T26006 v
100*
  ECD.ACTION = 6 ; CALL SCRN.EDIT
  GOSUB GET.FISCAL         ;* Prompt for Fiscal Period.
  IF ECD.RET.VALUE = "END" THEN GOTO 999999
  ;* T26006 ^
110*
  ACCT.NO = ""
  GOSUB 1000
  IF ECD.RET.VALUE = "END" THEN
    GOTO 100            ;* T26006
  END
  GOSUB 4000
*
*--- ENTER OPTIONS
*
500*
  ECD.NUM = 9
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.ACTION=4;CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
  BEGIN CASE
    CASE OPTION = "END" OR OPTION = "E"
      GOTO 99990
    CASE OPTION = "AC"
      GOSUB 1000
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "DV"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        GOSUB 1100
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "DP"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        IF DIV.CODE = "" OR DIV.CODE = GEN.DIV THEN
          GOSUB 1100
        END ELSE
          GOSUB 1200
        END
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "CC"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        IF DIV.CODE = "" OR DIV.CODE = GEN.DIV THEN
          GOSUB 1100
        END ELSE
          IF DEPT.CODE = "" OR DEPT.CODE = GEN.DEPT THEN
            GOSUB 1200
          END ELSE
            GOSUB 1300
          END
        END
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
      ;* T26006 v
    CASE OPTION = "FP"
      GOSUB GET.FISCAL         ;* Prompt for Fiscal Period
      IF ECD.RET.VALUE = 'END' THEN GOTO 999999
      GOSUB 1000
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
      ;* T26006 ^
    CASE OPTION = "D"
***** T23882 v
      IF COA.DETAIL # "D" THEN
        ERRMSG = "CANNOT SELECT DETAIL FOR AN ACCOUNT WITH DETAIL LEVEL OTHER THAN 'D'"
        GOSUB 91000; GOTO 500
      END
***** T23882 ^
      GOSUB 30000
      IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0 THEN
        DPTR = ECD.RET.VALUE
        MATREAD GLM.REC FROM GLM,CONO:LINE.ID<DPTR> ELSE MAT GLM.REC = ""
        BEGIN CASE
          CASE GLM.SRC = "VR"
            VCH.AMT = GLM.AMT
            SQV.ID = GLM.DESC[1,6]
            ECD.SCRN.NO = 4
            CALL VOUCHER.DET.INQ(SQV.ID,VCH.AMT)
          CASE GLM.SRC = "CD"
            CHKNO = TRIM(FIELD(GLM.DESC,"-",1))
            CHKDATE = ICONV(FIELD(GLM.DESC,"-",2)[12,8],"D2/")
            VCH.NO = FIELD(GLM.DESC,"-",2)[1,6]
            MATREAD SQV.REC FROM SQV,CONO:VCH.NO ELSE MAT SQV.REC = ''
            FND = 1
            LOCATE CHKNO IN SQV.CHK.NO<1>,1 SETTING PTR ELSE FND = 0
            IF FND = 1 THEN ACCT.NO = SQV.DISB.ACCT<1,PTR>
            MCD.ID = "A":ACCT.NO:CHKDATE:CHKNO
            ECD.SCRN.NO = 5
            CALL APS.CHECK.DET.INQ(MCD.ID,CHKNO,ACCT.NO,GL.DESC)
          CASE GLM.SRC = "CR"
            CHKNO = TRIM(FIELD(GLM.DESC,"-",1))
            CHKDATE = TRIM(FIELD(FIELD(GLM.DESC,"-",2)," ",2))
            CHKDATE=GLM.DESC[27,8]
            CHKDATE = ICONV(CHKDATE,"D2/")
            INVNO = FIELD(FIELD(GLM.DESC,"-",2)," ",1)
            LINV = LEN(INVNO)
            IF INVNO[LINV-1,2] = "AC" THEN
              ERRMSG = "No invoice to display for ON ACCT cash receipt"
              GOSUB 91000
            END ELSE
              IF INVNO[LINV-1,2] # "MI" THEN
                MATREAD IVC.REC FROM INVOICE,CONO:INVNO ELSE MAT IVC.REC = ''
                CUSTNO = IVC.CUST.NO
              END ELSE
                MATREAD MIV.REC FROM MANUAL.INVOICE,CONO:INVNO ELSE MAT MIV.REC = ''
                CUSTNO = MIV.CUST.NO
              END
              CHR.ID = CUSTNO:"!":CHKDATE:"!":CHKNO:"!"
              ECD.SCRN.NO = 6
              CALL ARS.CHECK.DET.INQ(CHR.ID,CHKNO,ACCT.NO,GL.DESC)
            END
          CASE GLM.SRC = "SJ"
            INV.ID = TRIM(FIELD(GLM.DESC,"-",1))
            ECD.SCRN.NO = 2
            CALL INVOICE.INQ(INV.ID)
          CASE GLM.SRC = "MJ"
            MIV.ID = TRIM(FIELD(GLM.DESC,"-",1))
            ECD.SCRN.NO = 3
            CALL MANUAL.INV.INQ(MIV.ID)
        END CASE
        ECD.SCRN.NO = 1
        ECD.ACTION = 3; CALL SCRN.EDIT
        OLD.START = 0
        LN = 1
        GOSUB 80000
      END
    * T25978 v
    CASE OPTION = "S"
      LOOP.DONE = 0
      LOOP
        ECD.NUM = 21
        ECD.ACTION = 4; CALL SCRN.EDIT
        BEGIN CASE
          CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = "END" OR ECD.RET.VALUE = 0
            LOOP.DONE = 1
          CASE ECD.RET.VALUE = "S" OR ECD.RET.VALUE = "SF"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 80000
          CASE ECD.RET.VALUE = "SR"
            LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
            IF LN < 1 THEN LN = 1
            GOSUB 80000
          CASE ECD.RET.VALUE = "ST"
            LN = 1
            GOSUB 80000
          CASE ECD.RET.VALUE = "SB"
            LN = LINES
            GOSUB 80000
          CASE NUM(ECD.RET.VALUE) AND (ECD.RET.VALUE GT 0 AND ECD.RET.VALUE LE LINES)
            LN = ECD.RET.VALUE
            GOSUB 80000
          CASE 1
            ERRMSG = 'INVALID RESPONSE'
            GOSUB 91000
        END CASE
      UNTIL (LOOP.DONE) DO REPEAT
  END CASE
  GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- ACCOUNT NUMBER
*
1000*
  MAT COA.REC = ""
  ;* T26083 v
  LINE.CODE = ""
  ALL.CCTR = ""
  ALL.DIV = ""
  ALL.DEPT = ""
  ECD.NUM = 1
  TMP.VAR = SCV.REC(ECD.NUM)<ECD.SCRN.NO>
  * T26083 ^
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""  
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.MAXL = IN.ACCT.LEN
  * T26083 v    Used to default the account number.
  IF TMP.VAR # '' THEN
    ECD.DEFAULT = TRIM(FIELD(TMP.VAR,'-',1):FIELD(TMP.VAR,'-',2))
  END
  * T26083 ^
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      ACCT.NO = ""
      GOTO 1999
    CASE NOT(NUM(ECD.RET.VALUE))
      BEGIN CASE
        CASE ECD.RET.VALUE = "D"
          GXR.ACTION = ECD.RET.VALUE
          GOSUB 2000
        CASE ECD.RET.VALUE = "T"
          GXR.ACTION = "C"
          GOSUB 3000
        CASE 1
          ERRMSG = "** NUMERIC INPUT REQUIRED **"
          GOSUB 91000
          ECD.RET.VALUE = "END"
      END CASE
      IF ECD.RET.VALUE = "END" THEN GOTO 1000
      GXR.ID = ""
      GXR.SRCH.ID = ECD.RET.VALUE
      GXR.LOC = 1
      GXR.FILE = COA
      CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      IF GXR.ACTION # "X" THEN
        ECD.ACTION = 2
        CALL SCRN.EDIT
      END
      IF GXR.ID = "" THEN GOTO 1000
      ECD.RET.VALUE = GXR.ID
      ECD.NUM = 1
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE CO.ACCT.MASK
      ECD.ACTION = 5
      CALL SCRN.EDIT
      GXR.LOC = 0
    CASE LEN(ECD.RET.VALUE) < BASE.LEN
      ERRMSG = "MINIMUM LENGTH = ":BASE.LEN
      GOSUB 91000
      GOTO 1000
    CASE 1
      ECD.RET.VALUE = ECD.RET.VALUE : STR("0",IN.ACCT.LEN-LEN(ECD.RET.VALUE))
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE CO.ACCT.MASK
      ECD.ACTION = 5
      CALL SCRN.EDIT
  END CASE
  MATREAD COA.REC FROM COA, CONO : ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate account - " : ECD.RET.VALUE CO.ACCT.MASK
    GOSUB 91000
    GOTO 1000
  END
  ;* T26006 v
  IF SEL.PERIOD = FISCAL.REC<1> THEN
    READ ALL.DIV FROM GLX, CONO : ECD.RET.VALUE ELSE ALL.DIV = ""
  END ELSE
    SELID = CONO:ECD.RET.VALUE
    GOSUB GET.ALL.DIV          ;* Get ALL.DIV from GLA Items
  END
  ;* T26006 ^
  IF ALL.DIV = "" THEN
    ERRMSG = "No activities for account - " : ECD.RET.VALUE CO.ACCT.MASK
    GOSUB 91000
    * GOTO 1000     ;* T26083
  END
  ACCT.NO = ECD.RET.VALUE
  GL.DESC = COA.DESC
*
*--- DIVISION
*
1100*
  ECD.NUM = 6
  * SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""   ;* 26083 To not clear the field
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    DIV.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    DIV.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.DIV
    XDESC = ""
    XLINES = COUNT(ALL.DIV,AM) + (ALL.DIV # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<XLN> = GEN.DIV THEN
        MAT DIV.REC = ""
        DIV.DESC = "GENERAL DIVISION"
      END ELSE
        MATREAD DIV.REC FROM DIVISION, CONO : XCODE<XLN> ELSE
          MAT DIV.REC = ""
          DIV.DESC = UNKNOWN
        END
      END
      XDESC<XLN> = DIV.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1100
    ECD.RET.VALUE = ALL.DIV<ECD.RET.VALUE>
    ECD.NUM = 6
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.DIV,1 SETTING FND ELSE
    ERRMSG = "No activities for division - ":ECD.RET.VALUE
    GOSUB 91000
    ;* T26083 v
    * GOTO 1100
    GOTO 1199
    ;* T26083 ^
  END
  IF ECD.RET.VALUE = GEN.DIV THEN
    ;* T26006 v
    IF SEL.PERIOD = FISCAL.REC<1> THEN
      READ LINE.CODE FROM GLX, CONO : GEN.DIV : GEN.DEPT : GEN.CCTR : ACCT.NO ELSE LINE.CODE = ""
    END ELSE
      SELID = CONO:GEN.DIV:GEN.DEPT:GEN.CCTR:ACCT.NO
      GOSUB BUILD.LINE.CODE        ;* Build LINE.CODE from GLA Keys
    END
    ;* T26006 ^
    IF LINE.CODE = "" THEN
      ERRMSG = "No activities for division - ":ECD.RET.VALUE
      GOSUB 91000
      ;* T26083 v
      * GOTO 1100
      GOTO 1199
      ;* T26083 ^
    END
    DIV.CODE = GEN.DIV
    DEPT.CODE = GEN.DEPT
    CCTR.CODE = GEN.CCTR
    GOTO 1999
  END ELSE
    ;* T26006 v
    IF SEL.PERIOD = FISCAL.REC<1> THEN
      READ ALL.DEPT FROM GLX, CONO : ECD.RET.VALUE : ACCT.NO ELSE ALL.DEPT = ""
    END ELSE
      SELID = CONO:ECD.RET.VALUE:ACCT.NO
      GOSUB GET.ALL.DEPT      ;* Get ALL.DEPT from GLA Items
    END
    ;* T26006 ^
    IF ALL.DEPT = "" THEN
      ERRMSG = "No activities for division - ":ECD.RET.VALUE
      GOSUB 91000
      ;* T26083 v
      * GOTO 1100
      ;* T26083 ^
    END
  END
1199 * T26083
  DIV.CODE = ECD.RET.VALUE
*
*--- DEPARTMENT
*
1200*
  ECD.NUM = 7
  * SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""   ;* 26083 To not clear the field
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    DEPT.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    DEPT.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.DEPT
    XDESC = ""
    XLINES = COUNT(ALL.DEPT,AM) + (ALL.DEPT # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<XLN> = GEN.DEPT THEN
        MAT DEPT.REC = ""
        DEPT.DESC = "GENERAL DEPARTMENT"
      END ELSE
        MATREAD DEPT.REC FROM DEPARTMENT, CONO : XCODE<XLN> ELSE
          MAT DEPT.REC = ""
          DEPT.DESC = UNKNOWN
        END
      END
      XDESC<XLN> = DEPT.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1200
    ECD.RET.VALUE = ALL.DEPT<ECD.RET.VALUE>
    ECD.NUM = 7
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.DEPT,1 SETTING FND ELSE
    ERRMSG = "No activities for department - ":ECD.RET.VALUE
    GOSUB 91000
    ;* T26083 v
    * GOTO 1200
    GOTO 1299
    ;* T26083 ^
  END
  IF ECD.RET.VALUE = GEN.DEPT THEN
    ;* T26006 v
    IF SEL.PERIOD = FISCAL.REC<1> THEN
      READ LINE.CODE FROM GLX, CONO : DIV.CODE : GEN.DEPT : GEN.CCTR : ACCT.NO ELSE LINE.CODE = ""
    END ELSE
      SELID = CONO:DIV.CODE:GEN.DEPT:GEN.CCTR:ACCT.NO
      GOSUB BUILD.LINE.CODE
    END
    ;* T26006 ^
    IF LINE.CODE = "" THEN
      ERRMSG = "No activities for department - ":ECD.RET.VALUE
      GOSUB 91000
      ;* T26083 v
      * GOTO 1200
      GOTO 1299
      ;* T26083 ^
    END
    DEPT.CODE = GEN.DEPT
    CCTR.CODE = GEN.CCTR
    GOTO 1999
  END ELSE
    ;* T26006 v
    IF SEL.PERIOD = FISCAL.REC<1> THEN
      READ ALL.CCTR FROM GLX, CONO : DIV.CODE : ECD.RET.VALUE : ACCT.NO ELSE ALL.CCTR = ""
    END ELSE
      SELID = CONO:DIV.CODE:ECD.RET.VALUE:ACCT.NO
      GOSUB GET.ALL.CCTR         ;* Get ALL.CCTR from GLA Items
    END
    ;* T26006 ^
    IF ALL.CCTR = "" THEN
      ERRMSG = "No activities for department - ":ECD.RET.VALUE
      GOSUB 91000
      ;* T26083 v
      * GOTO 1200
      GOTO 1299
      ;* T26083 ^
    END
  END
1299 * T26083
  DEPT.CODE = ECD.RET.VALUE
*
*--- COST CENTER
*
1300*
  ECD.NUM = 8
  * SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""   ;* 26083 To not clear the field
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    CCTR.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    CCTR.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.CCTR
    XDESC = ""
    XLINES = COUNT(ALL.CCTR,AM) + (ALL.CCTR # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<XLN> = GEN.CCTR THEN
        MAT CCTR.REC = ""
        CCTR.DESC = "GENERAL COST CENTER"
      END ELSE
        MATREAD CCTR.REC FROM COST.CNTR, CONO : XCODE<XLN> ELSE
          MAT CCTR.REC = ""
          CCTR.DESC = UNKNOWN
        END
      END
      XDESC<XLN> = CCTR.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1300
    ECD.RET.VALUE = ALL.CCTR<ECD.RET.VALUE>
    ECD.NUM = 8
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.CCTR,1 SETTING FND ELSE
    ERRMSG = "No activities for cost center - ":ECD.RET.VALUE
    GOSUB 91000
    ;* T26083 v
    * GOTO 1300
    GOTO 1399
    ;* T26083 ^
  END
  ;* T26006 v
  IF SEL.PERIOD = FISCAL.REC<1> THEN
    READ LINE.CODE FROM GLX, CONO : DIV.CODE : DEPT.CODE : ECD.RET.VALUE : ACCT.NO ELSE LINE.CODE = ""
  END ELSE
    SELID = CONO:DIV.CODE:DEPT.CODE:ECD.RET.VALUE:ACCT.NO
    GOSUB BUILD.LINE.CODE
  END
  ;* T26006 ^
  IF LINE.CODE = "" THEN
    ERRMSG = "No activities for cost center - ":ECD.RET.VALUE
    GOSUB 91000
    * GOTO 1300       ;* T26083
  END
1399 * T26083
  CCTR.CODE = ECD.RET.VALUE
1999*
  RETURN
*
*--- GET COA.DESC
*
2000*
* ECD.NUM = 12
* ECD.ACTION = 4
* CALL SCRN.EDIT
* IF ECD.RET.VALUE # "END" THEN
*   COA.L.DESC = ECD.RET.VALUE
* END
* SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
* ECD.ACTION = 5
* CALL SCRN.EDIT
  X=0;Y=21;TYP=11;O.R="O";MAXL=30
  PMSG =  "Enter Description : "
  CALL EDIT.SUB
  IF VALUE # "END" THEN
    COA.L.DESC = VALUE
    ECD.RET.VALUE = VALUE  ;*T25656
  END
  RETURN
*
*--- GET ACCOUNT TYPE
*
3000*
  ECD.NUM = 13
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    MATREAD AT.REC FROM ACCT.TYPE, ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate account type - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 3000
    END
    COA.TYPE = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 5
  CALL SCRN.EDIT
  RETURN
*
*--- PROCESS AND PRINT
*
4000*
  P_X  = 3 ; P_Y = 23 ; P_VALUE = "PROCESSING" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  MATREAD CB.REC FROM CO.COA.BAL, CONO : ACCT.NO ELSE MAT CB.REC = ""
  ;* T26006 v
  IF SEL.PERIOD = FISCAL.REC<1> THEN
    SCV.REC(2)<ECD.SCRN.NO> = OCONV(CB.REC(OPN), "MD2Z,<")
    SCV.REC(3)<ECD.SCRN.NO> = OCONV(CB.DEBITS, "MD2Z,")
    SCV.REC(4)<ECD.SCRN.NO> = OCONV(CB.CREDITS, "MD2Z,")
    SCV.REC(5)<ECD.SCRN.NO> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
  END ELSE
    FOR SRI = 2 TO 5
      SCV.REC(SRI)<ECD.SCRN.NO> = ""
    NEXT SRI
  END
  ;* T26006 ^
  BEGIN CASE
    CASE DIV.CODE = "S"
      DIV.CODE = ""
      DEPT.CODE = ""
      CCTR.CODE = ""
      LINE.ID = ""
      LN = 0
      DVCNT = COUNT(ALL.DIV,AM) + (ALL.DIV # "")
      FOR DV = 1 TO DVCNT
        DIV = ALL.DIV<DV>
        ;* T26006 v
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ ALL.DEPT FROM GLX, CONO : DIV : ACCT.NO ELSE ALL.DEPT = ""
        END ELSE
          SELID = CONO:DIV:ACCT.NO
          GOSUB GET.ALL.DEPT
        END
        ;* T26006 ^
        DPCNT = COUNT(ALL.DEPT,AM) + (ALL.DEPT # "")
        FOR DP = 1 TO DPCNT
          DEPT = ALL.DEPT<DP>
          ;* T26006 v
          IF SEL.PERIOD = FISCAL.REC<1> THEN
            READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT.NO ELSE ALL.CCTR = ""
          END ELSE
            SELID = CONO:DIV:DEPT:ACCT.NO
            GOSUB GET.ALL.CCTR         ;* Get ALL.CCTR from GLA Items
          END
          ;* T26006 ^
          CCCNT = COUNT(ALL.CCTR,AM) + (ALL.CCTR # "")
          FOR CC = 1 TO CCCNT
            CCTR = ALL.CCTR<CC>
            ;* T26006 v
            IF SEL.PERIOD = FISCAL.REC<1> THEN
              READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
            END ELSE
              SELID = CONO:DIV:DEPT:CCTR:ACCT.NO
              GOSUB BUILD.LINE.CODE
            END
            ;* T26006 ^
            SSCNT = COUNT(LINE.CODE,AM) + (LINE.CODE # "")
            FOR SS = 1 TO SSCNT
              ;* T26006 v
              * LN = LN + 1
              * LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<SS>
              LINE.ID.TMP = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
              MATREAD GLM.REC FROM GLM,CONO:LINE.ID.TMP ELSE MAT GLM.REC = ''
              IF GLM.MON = SEL.PERIOD THEN
                LN = LN + 1
                LINE.ID<LN> = LINE.ID.TMP
              END
              ;* T26006 ^
            NEXT SS
          NEXT CC
        NEXT DP
      NEXT DV
      LINES = LN
    CASE DEPT.CODE = "S"
      DEPT.CODE = ""
      CCTR.CODE = ""
      DIV = DIV.CODE
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE
        FOR SRI = 2 TO 5
          SCV.REC(SRI)<ECD.SCRN.NO,2> = ""
        NEXT SRI
      END
      ;* T26006 ^
      LINE.ID = ""
      LN = 0
      DPCNT = COUNT(ALL.DEPT,AM) + (ALL.DEPT # "")
      FOR DP = 1 TO DPCNT
        DEPT = ALL.DEPT<DP>
        ;* T26006 v
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT.NO ELSE ALL.CCTR = ""
        END ELSE
          SELID = CONO:DIV:DEPT:ACCT.NO
          GOSUB GET.ALL.CCTR
        END
        ;* T26006 ^
        CCCNT = COUNT(ALL.CCTR,AM) + (ALL.CCTR # "")
        FOR CC = 1 TO CCCNT
          CCTR = ALL.CCTR<CC>
          ;* T26006 v
          IF SEL.PERIOD = FISCAL.REC<1> THEN
            READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
          END ELSE
            SELID = CONO:DIV:DEPT:CCTR:ACCT.NO
            GOSUB BUILD.LINE.CODE
          END
          ;* T26006 ^
          SSCNT = COUNT(LINE.CODE,AM) + (LINE.CODE # "")
          FOR SS = 1 TO SSCNT
            ;* T26006  v
            * LN = LN + 1
            * LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<SS>
            LINE.ID.TMP = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
            MATREAD GLM.REC FROM GLM, CONO:LINE.ID.TMP ELSE MAT GLM.REC = ''
            IF GLM.MON = SEL.PERIOD THEN
              LN = LN + 1
              LINE.ID<LN> = LINE.ID.TMP
            END
            ;* T26006 ^
          NEXT SS
        NEXT CC
      NEXT DP
      LINES = LN
    CASE CCTR.CODE = "S"
      CCTR.CODE = ""
      DIV = DIV.CODE
      DEPT = DEPT.CODE
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE
        FOR SRI = 2 TO 5
          SCV.REC(SRI)<ECD.SCRN.NO,2> = ""
        NEXT SRI
      END
      ;* T26006 ^
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV : DEPT : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,3> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,3> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE                        
        FOR SRI = 2 TO 5                
          SCV.REC(SRI)<ECD.SCRN.NO,3> = ""
        NEXT SRI                        
      END                             
      ;* T26006 ^                     
      LINE.ID = ""
      LN = 0
      CCCNT = COUNT(ALL.CCTR,AM) + (ALL.CCTR # "")
      FOR CC = 1 TO CCCNT
        CCTR = ALL.CCTR<CC>
        ;* T26006 v
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
        END ELSE
          SELID = CONO:DIV:DEPT:CCTR:ACCT.NO
          GOSUB BUILD.LINE.CODE
        END
        ;* T26006 ^
        SSCNT = COUNT(LINE.CODE,AM) + (LINE.CODE # "")
        FOR SS = 1 TO SSCNT
          ;* T26006 v
          * LN = LN + 1
          * LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<SS>
          LINE.ID.TMP = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
          MATREAD GLM.REC FROM GLM, CONO:LINE.ID.TMP ELSE MAT GLM.REC = ''
          IF GLM.MON = SEL.PERIOD THEN
            LN = LN + 1
            LINE.ID<LN> = LINE.ID.TMP
          END
          ;* T26006 ^
        NEXT SS
      NEXT CC
      LINES = LN
    CASE 1
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV.CODE : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE                        
        FOR SRI = 2 TO 5                
          SCV.REC(SRI)<ECD.SCRN.NO,2> = ""
        NEXT SRI                        
      END                             
      ;* T26006 ^                     
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV.CODE : DEPT.CODE : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,3> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,3> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE                        
        FOR SRI = 2 TO 5                
          SCV.REC(SRI)<ECD.SCRN.NO,3> = ""
        NEXT SRI                        
      END                             
      ;* T26006 ^                     
      MATREAD CB.REC FROM CC.COA.BAL, CONO : DIV.CODE : DEPT.CODE : CCTR.CODE : ACCT.NO ELSE MAT CB.REC = ""
      ;* T26006 v
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        SCV.REC(2)<ECD.SCRN.NO,4> = OCONV(CB.REC(OPN), "MD2Z,<")
        SCV.REC(3)<ECD.SCRN.NO,4> = OCONV(CB.DEBITS, "MD2Z,")
        SCV.REC(4)<ECD.SCRN.NO,4> = OCONV(CB.CREDITS, "MD2Z,")
        SCV.REC(5)<ECD.SCRN.NO,4> = OCONV(CB.REC(OPNVAL), "MD2Z,<") ; * T21331
      END ELSE                        
        FOR SRI = 2 TO 5                
          SCV.REC(SRI)<ECD.SCRN.NO,4> = ""
        NEXT SRI                        
      END                             
      ;* T26006 ^                     
      LINES = COUNT(LINE.CODE,AM) + (LINE.CODE # "")
      LINE.ID = ""
      ;* T26006 v
      * FOR LN = 1 TO LINES
      *   LINE.ID<LN> = DIV.CODE : DEPT.CODE : CCTR.CODE : ACCT.NO : LINE.CODE<LN>
      * NEXT LN
      LNI = 0
      FOR LN = 1 TO LINES
        LINE.ID.TMP = DIV.CODE:DEPT.CODE:CCTR.CODE:ACCT.NO:LINE.CODE<LN>
        MATREAD GLM.REC FROM GLM, CONO:LINE.ID.TMP ELSE MAT GLM.REC = ''
        IF GLM.MON = SEL.PERIOD THEN
          LNI = LNI + 1
          LINE.ID<LNI> = LINE.ID.TMP
        END
      NEXT LN
      ;* T26006 ^
  END CASE
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECD.NUM = 6
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DIV.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 7
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DEPT.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 8
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CCTR.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 2
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 3
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 4
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 5
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  LN = 1
  OLD.START = 0
  GOSUB 80000
  RETURN
*
*--- GET LINE NUMBER
*
30000*
  ECD.MINV = 1
  ECD.MAXV = LINES
  ECD.NUM = 10
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
*--- XREF SELECTION
*
50000*
  ;* T26083 v
  IF XLINES = 0 THEN ECD.RET.VALUE = "N"; RETURN
  ;* T26083 ^
  ECD.NUM = 11
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N"
      GOTO 59999
    CASE NUM(ECD.RET.VALUE)
      IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN
        ERRMSG = "* * * OUT OF RANGE * * *"
        GOSUB 91000
      END ELSE
        GOTO 59999
      END
    CASE ECD.RET.VALUE = "S"
      XLN = 1 + INT((XLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
      IF XLN > XLINES THEN XLN = 1
      GOSUB 85000
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      XLN = 1 + INT((XLN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
      IF XLN < 1 THEN XLN = 1
      GOSUB 85000
    CASE ECD.RET.VALUE = 'ST'
      XLN = 1
      GOSUB 85000
    CASE ECD.RET.VALUE = 'SB'
      XLN = XLINES
      GOSUB 85000
    * T25978 ^
  END CASE
  GOTO 50000
59999*
  CNT = 1
  GOSUB 85500
  RETURN
*
*--- SCROLL
*
80000*
  ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > LINES THEN LST.LINE = LINES
  IF ST.LINE = OLD.START THEN RETURN
  OLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#4" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    MATREAD GLM.REC FROM GLM, CONO : LINE.ID<N> ELSE
      MAT GLM.REC = ""
      GLM.DESC = LINE.ID<N>
    END
    P_X  = 5 ; P_Y = SSLN ; P_VALUE = GLM.DESC "L#35" ; P_OPT = ""
    P_X  := AM:41 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(GLM.DATE, "D2/") "L#8"
    P_X  := AM:50 ; P_Y := AM:SSLN ; P_VALUE := AM:GLM.SRC "L#2"
    P_X  := AM:53 ; P_Y := AM:SSLN ; P_VALUE := AM:GLM.REF "L#8"
    P_X  := AM:62 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(GLM.AMT, "MD2Z,<") "R#15"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- SCROLL XREF
*
85000*
  ST.LINE = 1 + INT((XLN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > XLINES THEN LST.LINE = XLINES
  IF ST.LINE = XOLD.START THEN RETURN
  XOLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X := AM:5; P_Y := AM:SSLN
    IF XCODE<N> = "" THEN
      P_VALUE := AM:XDESC<N> "L#30"
    END ELSE
      P_VALUE := AM:XCODE<N> "L#5" : XDESC<N> "L#30"
    END
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
85500*
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
  ;* T26006 v
*Build a list of future period GL items from GLA
*
BUILD.LINE.CODE: 
  PERFORM 'SELECT GLA WITH @ID = "':SELID:']" AND WITH PERIOD = "':SEL.PERIOD:'"' CAPTURING GARBAGE
  EOF = 0
  LINE.CODE = ''; LCD.CT = 1
  LOOP
    READNEXT GLAID ELSE EOF = 1
  UNTIL EOF DO
    ;* T26006 v
    * LINE.CODE<LCD.CT> = GLAID[17,99]
    LINE.CODE<LCD.CT> = GLAID[11+IN.ACCT.LEN,6]
    * T25978 ^
    LCD.CT = LCD.CT + 1
  REPEAT
  RETURN
*
*Get ALL.DIV list from GLA items
*
GET.ALL.DIV: 
  PERFORM 'SSELECT GLA WITH CONO_ACCT = "':SELID:'" AND WITH PERIOD = "':SEL.PERIOD:'"' CAPTURING GARBAGE
  EOF = 0; ALL.DIV = ''; LCD.CT = 1
  LOOP
    READNEXT GLAID ELSE EOF = 1
  UNTIL EOF DO
    LOCATE GLAID[4,2] IN ALL.DIV,1 SETTING DFND ELSE      ;* T26006
      ALL.DIV<LCD.CT> = GLAID[4,2]
      LCD.CT = LCD.CT + 1
    END                                                   ;* T26006
  REPEAT
  RETURN
*
*Get ALL.DEPT list from GLA items
*
GET.ALL.DEPT: 
  PERFORM 'SSELECT GLA WITH CONO_DV_ACCT = "':SELID:'" AND WITH PERIOD = "':SEL.PERIOD:'"' CAPTURING GARBAGE
  EOF = 0; ALL.DEPT = ''; LCD.CT = 1
  LOOP
    READNEXT GLAID ELSE EOF = 1
  UNTIL EOF DO
    LOCATE GLAID[6,2] IN ALL.DEPT,1 SETTING DFND ELSE     ;* T26006
      ALL.DEPT<LCD.CT> = GLAID[6,2]
      LCD.CT = LCD.CT + 1
    END                                                   ;* T26006
  REPEAT
  RETURN
*
*Get ALL.CCTR list from GLA items
*
GET.ALL.CCTR: 
  PERFORM 'SSELECT GLA WITH CONO_DV_DP_ACCT = "':SELID:'" AND WITH PERIOD = "':SEL.PERIOD:'"' CAPTURING GARBAGE
  EOF = 0; ALL.CCTR = ''; LCD.CT = 1
  LOOP
    READNEXT GLAID ELSE EOF = 1
  UNTIL EOF DO
    LOCATE GLAID[8,3] IN ALL.CCTR,1 SETTING DFND ELSE      ;* T26006
      ALL.CCTR<LCD.CT> = GLAID[8,3]
      LCD.CT = LCD.CT + 1
    END                                                    ;* T26006
  REPEAT
  RETURN
*
*Prompt for Fiscal Period
*
GET.FISCAL: 
  FP.ERR = 0
  ECD.NUM = 20; ECD.DEFAULT = FISCAL.REC<1>
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" AND ECD.RET.VALUE # "E" THEN
    IF ECD.RET.VALUE < FISCAL.REC<1> THEN
      ERRMSG = "This inquiry program cannot view past-period data."
      GOSUB 91000
      GOTO GET.FISCAL
    END ELSE
      SEL.PERIOD = ECD.RET.VALUE
      IF SEL.PERIOD # FISCAL.REC<1> THEN
        GLM = GLA.FILE
      END ELSE
        GLM = GLM.FILE
      END
      YR.OFFSET = (SEL.PERIOD[1,4] - FISCAL.REC<1>[1,4]) * NUM.PERIODS
      PER.OFFSET = SEL.PERIOD[5,2] + YR.OFFSET
      OPN = CB.OPN + PER.OFFSET
    END
  END
  RETURN
  ;* T26006 ^
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
99990 *                           
  ECD.ACTION = 99 ; CALL SCRN.EDIT
999999*
END
