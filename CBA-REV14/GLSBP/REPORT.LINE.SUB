   SUBROUTINE REPORT.LINE.SUB(CONO,IN.ACCT.LEN,CO.ACCT.MASK)
* REVISION    - [08.1]
*T21177 diane 04/09/1997 * REV11 UPG, REFORMAT FIXED AMOUNT
*T26007 ajibaly 12/03/2001 * INSERT ABILITY IN REVIEW SECTION
*
*COPY>CPYLIB>COM1
*COPY>GLS.CPYLIB>COM.GLS.REPORT
*COPY>GLS.CPYLIB>GLS.REPORT
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   DIM GL.DESC(999)
   DESC = 1
   TYPE = 2
   CATG = 3
   SUB.CATG = 4
   CURR = 5
   FIX = 6
   PROD = 7
   DV.X = 16
   DP.X = 20
   CC.X = 24
   GEN.DIV = "00"
   GEN.DEPT = "00"
   GEN.CCTR = "000"
   DX = 41
   D.MASK = "L#27"
   MV.PAGE.SIZE = 7
   MV.BEGIN.PAGE = 6
   MV.LINE.SPACE = 1
   MV.OLD.START.LINE = 0
   MV.ANS = ""
   FIX.FLG = 0
   PAGE.S = 7
   BEGIN.PAGE = 6
   LINE.SP = 1
   PP.NO = 6
   DS.X = 29
   SV.PAGE.SIZE = 4
   SV.BEGIN.PAGE = 16
   SV.LINE.SPACE = 1
   SV.OLD.START.LINE = 0
   SV.END.PAGE = SV.BEGIN.PAGE + SV.PAGE.SIZE - 1
   UNKNOWN = STR("?",27)
   MAT GEN.XREF.REC = ""
   GXR.CO = CONO
   GXR.LOC = 1
   MAT GL.DESC = ""
   SAVE.GLRP.REC = ''
   SAVE.ACCT.DESC = ""
   COL.CNT = COUNT(GLRP.COLUMN,VM) + (GLRP.COLUMN # '')
   ECD.ACTION = 3;CALL SCRN.EDIT
   MV.LINES = GLRP.BEG.LINE + 1
   LOOP WHILE GLRP.REC(MV.LINES) # '' DO
      MV.LINES = MV.LINES + 1
   REPEAT
   MV.LINES = MV.LINES - GLRP.BEG.LINE - 1
   IF MV.LINES < 1 THEN
      MV.ANS = 'A'
      MV.LINES = 0
      LOOP
         MV.LN = MV.LINES + 1
         MV.OLD.LINES = MV.LINES
         GOSUB 1000
      WHILE MV.LINES > MV.OLD.LINES DO
         GOSUB 100
      REPEAT
      MV.LN = MV.LINES
   END ELSE
      MV.LN = 1
   END
   GOSUB 30000
   MAIN.LOOP = 1
   LOOP
      ECD.NUM = 3; ECD.ACTION = 4; CALL SCRN.EDIT
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      MV.ANS = ECD.RET.VALUE
      BEGIN CASE
         CASE MV.ANS = 'E' OR MV.ANS = 'END'
            MAIN.LOOP = 0
         CASE MV.ANS = 'I'
            GOSUB 7000
            IF LNO THEN
               BLN = LNO + GLRP.BEG.LINE + 1
               ELN = MV.LINES + GLRP.BEG.LINE
               YLN = 0
               FOR I = BLN TO ELN
                  YLN = YLN + 1
                  SAVE.GLRP.REC<YLN> = GLRP.REC(I)
                  SAVE.ACCT.DESC<YLN> = GL.DESC(I)
                  GLRP.REC(I) = ''; GL.DESC(I) = ""
               NEXT I
               MV.ANS = 'A'
               MV.LINES = LNO; MV.OLD.START.LINE = 0
               LOOP
                  MV.LN = MV.LINES + 1
                  MV.OLD.LINES = MV.LINES
                  GOSUB 1000
               WHILE MV.LINES > MV.OLD.LINES DO
                  GOSUB 100
               REPEAT
               MV.ANS = 'I'
               ALN = MV.LINES - LNO
               BLN = MV.LINES + GLRP.BEG.LINE + 1
               MV.LINES = MV.LINES + YLN
               ELN = MV.LINES + GLRP.BEG.LINE
               YLN = 0
               FOR I = BLN TO ELN
                  YLN = YLN + 1
                  GLRP.REC(I) = SAVE.GLRP.REC<YLN>
                  GL.DESC(I) = SAVE.ACCT.DESC<YLN>
                  IF GLRP.REC(I)<1,GLRP.LINE.LINE> + 0 > LNO THEN
                     GLRP.REC(I)<1,GLRP.LINE.LINE> = GLRP.REC(I)<1,GLRP.LINE.LINE> + ALN
                  END
               NEXT I
               SAVE.GLRP.REC = ''
               SAVE.ACCT.DESC = ""
               FOR I = 1 TO COL.CNT
                  IF GLRP.COL.TLN<1,I> + 0 > LNO THEN
                     GLRP.COL.TLN<1,I> = GLRP.COL.TLN<1,I> + ALN
                  END
               NEXT I
               MV.LN = LNO
               MV.OLD.START.LINE = 0; GOSUB 30000
            END
         CASE MV.ANS = 'A'
            LOOP
               MV.LN = MV.LINES + 1
               MV.OLD.LINES = MV.LINES
               GOSUB 1000
            WHILE MV.LINES > MV.OLD.LINES DO
               GOSUB 100
            REPEAT
            MV.LN = MV.LINES
         CASE MV.ANS = 'R'
            GOSUB 7000 ;* ENTER AND VALIDATE LINE NO
            IF LNO THEN
               MV.LN = LNO
               MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(MV.LN - 1,MV.PAGE.SIZE)
               MV.XLN = MV.LN + GLRP.BEG.LINE
               GOSUB 100
            END
         CASE MV.ANS = 'C'
            GOSUB 7000
            IF LNO THEN
               MV.LN = LNO
               GOSUB 1000
*T21912            IF VALUE # 'END' THEN
*T21912               GOSUB 100
*T21912            END
*T21912 v
               IF VALUE = "END" THEN
                  MV.OLD.START.LINE = 0; GOSUB 30000
               END ELSE
                  GOSUB 100
               END
*T21912 ^
            END
         CASE MV.ANS = 'D'
            GOSUB 7000
            IF LNO THEN
               MV.LN = LNO
               XLN = MV.LN + GLRP.BEG.LINE
               LOOP
                  GLRP.REC(XLN) = GLRP.REC(XLN+1)
                  GL.DESC(XLN) = GL.DESC(XLN+1)
                  IF GLRP.REC(XLN)<1,GLRP.LINE.LINE> + 0 > LNO THEN
                     GLRP.REC(XLN)<1,GLRP.LINE.LINE> = GLRP.REC(XLN)<1,GLRP.LINE.LINE> - 1
                  END
               WHILE GLRP.REC(XLN) # '' DO
                  XLN = XLN + 1
               REPEAT
               FOR I = 1 TO COL.CNT
                  IF GLRP.COL.TLN<1,I> + 0 > LNO THEN
                     GLRP.COL.TLN<1,I> = GLRP.COL.TLN<1,I> - 1
                  END
               NEXT I
               MV.LINES = GLRP.BEG.LINE + 1
               LOOP WHILE GLRP.REC(MV.LINES) # '' DO
                  MV.LINES = MV.LINES + 1
               REPEAT
               MV.LINES = MV.LINES - GLRP.BEG.LINE - 1
               IF MV.LINES < 1 THEN MV.LINES = 0
               IF MV.LN > 1 AND MV.LN > MV.LINES THEN MV.LN = MV.LN - 1
               IF MV.LN < 1 THEN MV.LN = 1
               MV.OLD.START.LINE = 0
            END
            GOSUB 30000
         CASE MV.ANS = 'F'
            MV.LN = 1 + INT((MV.LN - 1)/MV.PAGE.SIZE) * MV.PAGE.SIZE + MV.PAGE.SIZE
            IF MV.LN > MV.LINES THEN MV.LN = 1
            GOSUB 30000
         CASE MV.ANS = 'B'
            MV.LN = 1 + INT((MV.LN - 1)/MV.PAGE.SIZE) * MV.PAGE.SIZE - MV.PAGE.SIZE
            IF MV.LN < 1 THEN MV.LN = MV.LINES
            GOSUB 30000
         CASE MV.ANS = 'S'
            GOSUB 7500
            IF LNO THEN
               MV.LN = LNO
               GOSUB 30000
            END
         CASE MV.ANS = 'FA'
            P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            FIX.FLG = 1
            MV.OLD.START.LINE = 0
            GOSUB 30000
         CASE MV.ANS = 'DS'
            P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            FIX.FLG = 0
            MV.OLD.START.LINE = 0
            GOSUB 30000
      END CASE
   WHILE MAIN.LOOP DO REPEAT
   GOTO 99999
100 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> # 'R' THEN    
      GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> = ''
      GL.DESC(MV.XLN) = ''
      GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN> = ''
      GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE> = ""
      GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE> = ""
      GOTO 199
   END
   P_X  = 3 ; P_Y = MV.SLN ; P_VALUE = "*" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> = '' THEN
      SV.ANS = 'A'
      SV.LINES = 0
      LOOP
         SV.LN = SV.LINES + 1
         SV.OLD.LINES = SV.LINES
         GOSUB 2000
      WHILE SV.LINES > SV.OLD.LINES DO REPEAT
      SV.LN = SV.LINES
   END ELSE
      SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + 1
      SV.OLD.START.LINE = 0
      SV.LN = 1
   END
   GOSUB  40000
   MORE = 1
   LOOP
      ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
      SV.ANS = ECD.RET.VALUE
      BEGIN CASE
         CASE SV.ANS = '' OR SV.ANS = 'END'
            MORE = 0
         CASE SV.ANS = 'A'
            LOOP
               SV.LN = SV.LINES + 1
               SV.OLD.LINES = SV.LINES
               GOSUB 2000
            WHILE SV.LINES > SV.OLD.LINES DO REPEAT
            SV.LN = SV.LINES
            GOSUB 40000
*T26007 v
         CASE SV.ANS = 'I'
            SV.ANS = 'A'
            GOSUB 8000 ;* ENTER AND VALIDATE LINE NO
            IF LNO THEN
              LOOP
                 SV.LN = LNO
                 INS '' BEFORE GL.DESC(MV.XLN)<1,SV.LN>
                 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN>
                 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN>
                 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN>
                 INS '' BEFORE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,SV.LN>
                 SV.LINES += 1
                 SV.OLD.LINES = SV.LINES
                 SV.OLD.START.LINE = 0
                 GOSUB 2000
                 SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> # '')
                 LNO += 1
              WHILE SV.LINES >= SV.OLD.LINES DO REPEAT
              SV.LINES = 0
              GOSUB 40000
              SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> # '')
              SV.OLD.START.LINE = 0
              GOSUB 40000
            END
*T26007 ^
         CASE SV.ANS = 'C'
            GOSUB 8000
            IF LNO THEN
               SV.LN = LNO
               GOSUB 2000
            END
            GOSUB 40000
         CASE SV.ANS = 'D'
            GOSUB 8000
            IF LNO THEN
               SV.LN = LNO
               GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.LINE.ACCT,SV.LN)
               GL.DESC(MV.XLN) = DELETE(GL.DESC(MV.XLN),1,SV.LN,0)
               GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.SIGN,SV.LN)
               GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.TYPE,SV.LN)
               GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.CODE,SV.LN)
               SV.LINES = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> # '')
               IF SV.LN > 1 AND SV.LN > SV.LINES THEN SV.LN=SV.LN - 1
               IF SV.LN < 1 THEN SV.LN=1
               SV.OLD.START.LINE=0
            END
            GOSUB 40000
         CASE SV.ANS = 'F'
            SV.LN = 1 + INT((SV.LN - 1)/SV.PAGE.SIZE) * SV.PAGE.SIZE + SV.PAGE.SIZE
            IF SV.LN > SV.LINES THEN SV.LN = 1
            GOSUB 40000
         CASE SV.ANS = 'B'
            SV.LN = 1 + INT((SV.LN - 1)/SV.PAGE.SIZE) * SV.PAGE.SIZE - SV.PAGE.SIZE
            IF SV.LN < 1 THEN SV.LN = SV.LINES
            GOSUB 40000
         CASE SV.ANS = 'S'
            GOSUB 8500
            IF LNO THEN
               SV.LN = LNO
               GOSUB 40000
            END
      END CASE
   WHILE MORE DO REPEAT
   P_X  = 3 ; P_Y = MV.SLN ; P_VALUE = " " ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
199 FOR SV.SLN = SV.BEGIN.PAGE TO SV.END.PAGE    
      P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT SV.SLN
   RETURN
1000 GOSUB 30000    
   MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(MV.LN - 1,MV.PAGE.SIZE)
   MV.XLN = MV.LN + GLRP.BEG.LINE
1100 *
   P_X  = 0 ; P_Y = MV.SLN ; P_VALUE = MV.LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   X = 4; Y = MV.SLN
   TYP = 1; MAXL = 1; O.R = 'O'
   IF MV.LN = 1 THEN
      VALDAT = 'R':VM:'C'
      HMSG = '(R)egular, (C)omments'
   END ELSE
      VALDAT = 'R':VM:'C':VM:'S':VM:'T'
      HMSG = '(R)egular, (C)omments, (S)ubtotal, (T)otal'
   END
   DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE>
   CALL EDIT.SUB
   IF VALUE = 'END' OR VALUE = '' THEN
      IF MV.ANS = 'A' THEN
         XLN = MV.XLN
         LOOP
            GLRP.REC(XLN) = GLRP.REC(XLN+1)
         WHILE GLRP.REC(XLN) # '' DO
            XLN = XLN + 1
         REPEAT
         P_X  = 0 ; P_Y = MV.SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      GOTO 1900
   END
   GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = VALUE
   IF MV.ANS = 'A' THEN MV.LINES = MV.LN
   IF VALUE # 'S' THEN
      GLRP.REC(MV.XLN)<1,GLRP.LINE.LINE> = ''
      P_X  = 6 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LINE.LINE> "L#3" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1200
   END
   X = 6; Y = MV.SLN
   TYP = 3; MAXL = 3; O.R = 'R'
   MINV = 1; MAXV = MV.LN -1
   IF GLRP.REC(MV.XLN)<1,GLRP.LINE.LINE> # '' THEN
      O.R = 'O'; DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.LINE>
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 1100
   GLRP.REC(MV.XLN)<1,GLRP.LINE.LINE> = VALUE
1200 X = 10; Y = MV.SLN    
   TYP = 3; MAXL = 1; O.R = 'O'
   IF GLRP.REC(MV.XLN)<1,GLRP.LINE.SKIP> = '' THEN
      DEFAULT = 0
   END ELSE
      DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.SKIP>
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 1100
   GLRP.REC(MV.XLN)<1,GLRP.LINE.SKIP> = VALUE
1250 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'R' THEN    
      GLRP.REC(MV.XLN)<1,GLRP.LINE.DASH> = ''
      P_X  = 12 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LINE.DASH> "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1300
   END
   X = 12; Y = MV.SLN
   TYP = 1; MAXL = 1; O.R = 'O'
   DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.DASH>
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 1100
   GLRP.REC(MV.XLN)<1,GLRP.LINE.DASH> = VALUE
1300 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' THEN    
      GLRP.REC(MV.XLN)<1,GLRP.LINE.REV> = ''
      P_X  = 14 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LINE.REV> "L#1" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1400
   END
   X = 14; Y = MV.SLN
   TYP = 8; MAXL = 1; O.R = 'O'
   DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.REV>
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 1100
   GLRP.REC(MV.XLN)<1,GLRP.LINE.REV> = VALUE
1400 * ENTER DIV, DEPT, CCTR    
   SLN = MV.SLN
   SAVE.MV.SLN = MV.SLN
   IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> # 'R' THEN
      DV.NO = ''; DP.NO = ''; CC.NO = ''
      P_X  = 16 ; P_Y = MV.SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
      P_X  := AM:20 ; P_Y := AM:MV.SLN ; P_VALUE := AM:DP.NO "L#2"
      P_X  := AM:24 ; P_Y := AM:MV.SLN ; P_VALUE := AM:CC.NO"L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 10500
   END
*      IF FIX.FLG = 1 THEN
*         P_X  = 16 ; P_Y = 4 ; P_VALUE = "Dv Dp Ctr " ; P_OPT = ""
*         P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"-- -- --- "
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      END
   COA.LEVEL = 3
   DV.NO = GLRP.REC(MV.XLN)<1,GLRP.LINE.DIV>
   DP.NO = GLRP.REC(MV.XLN)<1,GLRP.LINE.DEPT>
   CC.NO = GLRP.REC(MV.XLN)<1,GLRP.LINE.CCTR>
*COPY>PMCBP>DV.DP.CC.SUB    
   GOTO 10500
10100 MV.SLN = SAVE.MV.SLN
   IF FIX.FLG THEN
*         P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; P_OPT = ""
*         P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"------------ "
*         P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> "L#12"
      P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
      P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT>,"MD2") "R#12" :"   ": GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#35"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   GOTO 1000
10500 GLRP.REC(MV.XLN)<1,GLRP.LINE.DIV> = DV.NO    
   GLRP.REC(MV.XLN)<1,GLRP.LINE.DEPT> = DP.NO
   GLRP.REC(MV.XLN)<1,GLRP.LINE.CCTR> = CC.NO
   MV.SLN = SAVE.MV.SLN
1700 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' THEN    
      GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = ''
      P_X  = 29 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> "L#12" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1800
   END
*      P_X  = 16 ; P_Y = 4 ; P_VALUE = "Fixed Amount " ; P_OPT = ""
*      P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"------------ "
*      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      X = 16; Y = MV.SLN
   X = 0 ; Y = 21
   TYP = 14; SCALER = 2; MAXL = 12
   O.R = 'O'; DEFAULT = OCONV(GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT>,"MD2")
   PMSG = "Fixed Amount "
   CALL EDIT.SUB
*      IF FIX.FLG # 1 THEN
*         P_X  = 16 ; P_Y = 4 ; P_VALUE = "Dv Dp Ctr " ; P_OPT = ""
*         P_X  := AM:16 ; P_Y := AM:5 ; P_VALUE := AM:"-- -- --- "
*         P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.DIV> "L#2":" "
*         P_X  := AM:20 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.DEPT> "L#2":" "
*         P_X  := AM:24 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.CCTR> "L#3":" "
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      END
*      IF VALUE = 'END' THEN GOTO 1100
   IF VALUE = 'END' THEN
      IF FIX.FLG = 1 THEN
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT>,"MD2") "R#12" :"   ": GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#35"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#50"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      GOTO 1100
   END
   GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT> = VALUE
1800 IF GLRP.REC(MV.XLN)<1,GLRP.LINE.TYPE> = 'C' AND GLRP.REC(MV.XLN)<1,GLRP.LINE.DASH> # '' THEN    
      GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = ''
      IF FIX.FLG THEN
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT>,"MD2") "R#12" :"   ": GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#35"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#50"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
*         P_X  = 29 ; P_Y = MV.SLN ; P_VALUE = GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#50" ; P_OPT = ""
*         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 1900
   END
   X = 29; Y = MV.SLN
   TYP = 1; MAXL = GLRP.GRP.LEN; O.R = 'O'
   DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC>
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 1100
   GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> = VALUE
   IF FIX.FLG THEN
      P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
      P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.REC(MV.XLN)<1,GLRP.LINE.AMT>,"MD2") "R#12" :"   ": GLRP.REC(MV.XLN)<1,GLRP.LINE.DESC> "L#35"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
1900 MV.LINES = GLRP.BEG.LINE + 1    
   LOOP WHILE GLRP.REC(MV.LINES) # '' DO
      MV.LINES = MV.LINES + 1
   REPEAT
   MV.LINES = MV.LINES - GLRP.BEG.LINE - 1
1999 RETURN    
2000 GOSUB 40000    
   SV.SLN=SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(SV.LN - 1,SV.PAGE.SIZE)
2100 *
   P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = SV.LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   X = 5; Y = SV.SLN
   TYP = 1; MAXL = 1; O.R = 'O'
   VALDAT = 'B' : VM : 'E' : VM : 'C'
   HMSG = '(B)EGIN, (E)ND, (C)URRENT'
   DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN>
   CALL EDIT.SUB
   IF VALUE = 'END' THEN
      IF SV.ANS = 'A' THEN
         GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.LINE.ACCT,SV.LN)
         GL.DESC(MV.XLN)  = DELETE(GL.DESC(MV.XLN),1,SV.LN,0)
         GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.SIGN,SV.LN)
         GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.TYPE,SV.LN)
         GLRP.REC(MV.XLN) = DELETE(GLRP.REC(MV.XLN),1,GLRP.ACCT.CODE,SV.LN)
      END
      SV.OLD.START.LINE = 0
      GOTO 2999
   END
   GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> = VALUE
2200 NO.CODE = GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,SV.LN>    
   BEGIN CASE
      CASE NO.CODE = 1
         NO.ACCT = "ALL"
         NO.TYPE = GL.DESC(MV.XLN)<1,SV.LN,TYPE>
         NO.CATG = GL.DESC(MV.XLN)<1,SV.LN,CATG>
         NO.SUB.CATG = GL.DESC(MV.XLN)<1,SV.LN,SUB.CATG>
      CASE NO.CODE = 2
         NO.ACCT = "ALL"
         NO.TYPE = GL.DESC(MV.XLN)<1,SV.LN,TYPE>
         NO.CATG = GL.DESC(MV.XLN)<1,SV.LN,CATG>
         NO.SUB.CATG = "ALL"
      CASE NO.CODE = 3
         NO.ACCT = "ALL"
         NO.TYPE = GL.DESC(MV.XLN)<1,SV.LN,TYPE>
         NO.CATG = "ALL"
         NO.SUB.CATG = "ALL"
      CASE 1
         NO.ACCT = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN>
         NO.TYPE = GL.DESC(MV.XLN)<1,SV.LN,TYPE>
         NO.CATG = GL.DESC(MV.XLN)<1,SV.LN,CATG>
         NO.SUB.CATG = GL.DESC(MV.XLN)<1,SV.LN,SUB.CATG>
   END CASE
   NO.DESC = GL.DESC(MV.XLN)<1,SV.LN,DESC>
   NO.CURR = ""
   NO.FIX = ""
   NO.PROD = ""
   X = 26; Y = SV.SLN
   TYP = 1; MAXL = IN.ACCT.LEN; O.R = "O"
   DEFAULT = NO.ACCT
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 2100
   NO.ACCT = VALUE
   IF NO.ACCT = "" OR NO.ACCT = "ALL" THEN GOTO 2300
   NO.ACCT = NO.ACCT : STR("0",IN.ACCT.LEN - LEN(NO.ACCT))
   MATREAD COA.REC FROM COA, CONO:NO.ACCT ELSE
      MAT COA.REC = ""
      ERRMSG = 'INVALID ACCOUNT NUMBER'
      GOSUB 91000; GOTO 2200
   END
   NO.DESC = COA.DESC
   NO.TYPE = COA.TYPE
   NO.CATG = COA.CATG
   NO.SUB.CATG = COA.SUB.CATG
   NO.CURR = COA.CURR
   NO.FIX = COA.FIX
   NO.PROD = COA.PROD
   NO.CODE = ""
   GOTO 2800
2300 X = 9; Y = SV.SLN; TYP = 1; MAXL = 1; O.R = "O"; DEFAULT = NO.TYPE    
   VALDAT = "A" :VM: "E" :VM: "I" :VM: "L" :VM: "O"
   HMSG = "(A)sset, (E)xpense, (I)ncome, (L)iability, (O)wner's equity"
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 2100
   MATREAD AT.REC FROM ACCT.TYPE, VALUE ELSE
      ERRMSG = "INVALID ACCOUNT TYPE"; GOSUB 91000; GOTO 2300
   END
   NO.TYPE = VALUE
   NO.DESC = AT.DESC
   P_X  = 41 ; P_Y = SV.SLN ; P_VALUE = NO.DESC "L#27" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2400 X = 12; Y = SV.SLN ; TYP = 1; MINL = 3; MAXL = 3 ; O.R = "O"    
   DEFAULT = NO.CATG
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END"
         GOTO 2100
      CASE VALUE = "ALL"
         NO.CATG = VALUE
         NO.SUB.CATG = VALUE
         NO.ACCT = VALUE
         NO.CODE = 3
         GOTO 2800
      CASE VALUE = ""
         RET.VALUE = ""
         XX = 12
         CALL REPORT.LINE.XREF.SUB(CONO,"L#3",RET.VALUE,AT.CATG,1,XX,DX,D.MASK,SV.BEGIN.PAGE,SV.PAGE.SIZE)
         SV.OLD.START.LINE = 0
         GOSUB 40000
         SV.SLN=SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(SV.LN - 1,SV.PAGE.SIZE)
         P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = SV.LN "R#3" ; P_OPT = "CL"
         P_X  := AM:5 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> "L#1"
         P_X  := AM:9 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.TYPE "L#1"
         P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:RET.VALUE "L#3"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF RET.VALUE = "" THEN GOTO 2400
      CASE 1
         RET.VALUE = VALUE
   END CASE
   MATREAD AC.REC FROM ACCT.CATG, RET.VALUE ELSE
      MAT AC.REC = ""
      ERRMSG = "INVALID CATEGORY"; GOSUB 91000; GOTO 2400
   END
   IF AC.TYPE # NO.TYPE THEN
      ERRMSG = "THIS CATEGORY IS NOT FOR ACCOUNT TYPE ":NO.TYPE
      GOSUB 91000; GOTO 2400
   END
   NO.CATG = RET.VALUE
   NO.DESC = AC.DESC
   P_X  = 41 ; P_Y = SV.SLN ; P_VALUE = NO.DESC "L#27" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2500 X = 16; Y = SV.SLN ; TYP = 1; MINL = 3; MAXL = 3 ; O.R = "O"    
   DEFAULT = NO.SUB.CATG
   CALL EDIT.SUB
   BEGIN CASE
      CASE VALUE = "END"
         GOTO 2100
      CASE VALUE = "ALL"
         NO.SUB.CATG = VALUE
         NO.ACCT = VALUE
         NO.CODE = 2
         GOTO 2800
      CASE VALUE = ""
         RET.VALUE = ""
         XX = 16
         CALL REPORT.LINE.XREF.SUB(CONO,"L#3",RET.VALUE,AC.SUB,2,XX,DX,D.MASK,SV.BEGIN.PAGE,SV.PAGE.SIZE)
         SV.OLD.START.LINE = 0
         GOSUB 40000
         SV.SLN=SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(SV.LN - 1,SV.PAGE.SIZE)
         P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = SV.LN "R#3" ; P_OPT = "CL"
         P_X  := AM:5 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> "L#1"
         P_X  := AM:9 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.TYPE "L#1"
         P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.CATG "L#3"
         P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:RET.VALUE "L#3"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         IF RET.VALUE = "" THEN GOTO 2500
      CASE 1
         RET.VALUE = VALUE
   END CASE
   LOCATE RET.VALUE IN AC.SUB<1>,1 SETTING FND ELSE
      ERRMSG = "THIS SUB-CATEGORY IS NOT FOR CATEGORY ":NO.CATG
      GOSUB 91000; GOTO 2500
   END
   MATREAD ASC.REC FROM ACCT.SUB.CATG, RET.VALUE ELSE
      MAT ASC.REC = ""
      ERRMSG = "INVALID SUB-CATEGORY"; GOSUB 91000; GOTO 2500
   END
   MATREAD CAS.REC FROM CATG.AND.SUB, CONO:NO.CATG:RET.VALUE ELSE MAT CAS.REC = ""
   IF CAS.ACCT = "" THEN
      ERRMSG = "THERE ARE NO ACCOUNTS FOR THIS CATEGORY AND SUB COMBINATION"
      GOSUB 91000; GOTO 2500
   END
   NO.SUB.CATG = RET.VALUE
   IF NO.ACCT = "ALL" THEN
      NO.CODE = 1
      NO.CURR = CAS.CURR
      NO.FIX = CAS.FIX
      NO.PROD = CAS.PROD
   END ELSE
      RET.VALUE = ""
      XX = 26
      CALL REPORT.LINE.XREF.SUB(CONO,CO.ACCT.MASK,RET.VALUE,CAS.ACCT,3,XX,DX,D.MASK,SV.BEGIN.PAGE,SV.PAGE.SIZE)
      SV.OLD.START.LINE = 0
      GOSUB 40000
      SV.SLN=SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(SV.LN - 1,SV.PAGE.SIZE)
      P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = SV.LN "R#3" ; P_OPT = "CL"
      P_X  := AM:5 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> "L#1"
      P_X  := AM:9 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.TYPE "L#1"
      P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.CATG "L#3"
      P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.SUB.CATG "L#3"
      P_X  := AM:26 ; P_Y := AM:SV.SLN ; P_VALUE := AM:RET.VALUE CO.ACCT.MASK
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF RET.VALUE = "" THEN GOTO 2500
      MATREAD COA.REC FROM COA, CONO : RET.VALUE ELSE
         MAT COA.REC = ""
         ERRMSG = "INVALID ACCOUNT NUMBER"
         GOSUB 91000; GOTO 2500
      END
      NO.CODE = ""
      NO.TYPE = COA.TYPE
      NO.CATG = COA.CATG
      NO.SUB.CATG = COA.SUB.CATG
      NO.CURR = COA.CURR
      NO.FIX = COA.FIX
      NO.PROD = COA.PROD
      NO.DESC = COA.DESC
      NO.ACCT = RET.VALUE
   END
2800 BEGIN CASE    
      CASE NO.CODE = ""
      CASE NO.CODE = 1
      CASE NO.CODE = 2
      CASE NO.CODE = 3
      CASE 1
         ERRMSG = "INVALID LINE ENTER AGAIN"; GOSUB 91000; GOTO 2100
   END CASE
   PTR = 1
   LOOP
*T26007 v
*      XCNT = DCOUNT(GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE>,SVM)
       XCNT = COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> # '')
*T26007 ^
      FND = 0
      FOR X = PTR TO XCNT
         IF GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> = GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,X> THEN
            FND = X; XCNT = 0
         END
      NEXT X
      BEGIN CASE
         CASE FND = 0
         CASE FND = SV.LN
            PTR = FND + 1
         CASE NO.TYPE # GL.DESC(MV.XLN)<1,FND,TYPE>
            PTR = FND + 1
         CASE NO.CODE = GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,FND>
            BEGIN CASE
               CASE NO.CODE = "" AND NO.ACCT = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,FND>
                  PTR = 0
               CASE NO.CODE = 1 AND (NO.CATG:NO.SUB.CATG) = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,FND>
                  PTR = 0
               CASE NO.CODE = 2 AND NO.CATG = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,FND>
                  PTR = 0
               CASE NO.CODE = 3
                  PTR = 0
               CASE 1
                  PTR = FND + 1
            END CASE
         CASE NO.CODE > GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,FND>
            BEGIN CASE
               CASE NO.CODE = 1 AND NO.SUB.CATG = GL.DESC(MV.XLN)<1,FND,SUB.CATG> AND NO.CATG = GL.DESC(MV.XLN)<1,FND,CATG>
                  PTR = 0
               CASE NO.CODE = 2 AND NO.CATG = GL.DESC(MV.XLN)<1,FND,CATG>
                  PTR = 0
               CASE NO.CODE = 3
                  PTR = 0
               CASE 1
                  PTR = FND + 1
            END CASE
         CASE 1
            BEGIN CASE
               CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,FND> = 1 AND NO.SUB.CATG = GL.DESC(MV.XLN)<1,FND,SUB.CATG> AND NO.CATG = GL.DESC(MV.XLN)<1,FND,CATG>
                  PTR = 0
               CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,FND> = 2 AND NO.CATG = GL.DESC(MV.XLN)<1,FND,CATG>
                  PTR = 0
               CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,FND> = 3
                  PTR = 0
               CASE 1
                  PTR = FND + 1
            END CASE
      END CASE
   WHILE PTR AND FND DO REPEAT
   IF PTR = 0 THEN
      ERRMSG = "INVALID LINE CHECK LINE - ":FND
      GOSUB 91000; GOTO 2100
   END
   GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,SV.LN> = NO.CODE
   BEGIN CASE
      CASE NO.CODE = 1
         GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN> = NO.CATG:NO.SUB.CATG
      CASE NO.CODE = 2
         GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN> = NO.CATG
      CASE NO.CODE = 3
         GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN> = NO.TYPE
      CASE 1
         GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,SV.LN> = NO.ACCT
   END CASE
   P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = SV.LN "R#3" ; P_OPT = "CL"
   P_X  := AM:5 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,SV.LN> "L#1"
   P_X  := AM:9 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.TYPE "L#1"
   P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.CATG "L#3"
   P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.SUB.CATG "L#3"
   P_X  := AM:20 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.CURR "L#1"
   P_X  := AM:22 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.FIX "L#1"
   P_X  := AM:24 ; P_Y := AM:SV.SLN ; P_VALUE := AM:NO.PROD "L#1"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF NO.CODE = "" THEN
      P_X  = 26 ; P_Y = SV.SLN ; P_VALUE = NO.ACCT CO.ACCT.MASK ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END ELSE
      P_X  = 26 ; P_Y = SV.SLN ; P_VALUE = NO.ACCT "L#14" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   P_X  = 41 ; P_Y = SV.SLN ; P_VALUE = NO.DESC "L#27" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   GL.DESC(MV.XLN)<1,SV.LN,TYPE> = NO.TYPE
   IF NO.CATG = "ALL" THEN NO.CATG = ""
   GL.DESC(MV.XLN)<1,SV.LN,CATG> = NO.CATG
   IF NO.SUB.CATG = "ALL" THEN NO.SUB.CATG = ""
   GL.DESC(MV.XLN)<1,SV.LN,SUB.CATG> = NO.SUB.CATG
   GL.DESC(MV.XLN)<1,SV.LN,CURR> = NO.CURR
   GL.DESC(MV.XLN)<1,SV.LN,FIX> = NO.FIX
   GL.DESC(MV.XLN)<1,SV.LN,PROD> = NO.PROD
   GL.DESC(MV.XLN)<1,SV.LN,DESC> = NO.DESC
2900 X = 70; Y = SV.SLN    
   TYP = 1; MAXL = 1; O.R = 'O'
   VALDAT = '+' : VM : '-'
   BEGIN CASE
      CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN> # ''
         DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN>
      CASE SV.LN > 1
         DEFAULT = GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN-1>
      CASE 1
         DEFAULT = '+'
   END CASE
   CALL EDIT.SUB
   IF VALUE = 'END' THEN GOTO 2100
   GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,SV.LN> = VALUE
   SV.LINES=COUNT(GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT>,SVM) + (GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT> # '')
2999 RETURN    
7000 ECD.NUM = 5    
   ECD.MINV = MV.OLD.START.LINE
   IF MV.LAST.LINE < MV.LINES THEN
      ECD.MAXV = MV.LAST.LINE
   END ELSE
      ECD.MAXV = MV.LINES
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   LNO = ECD.RET.VALUE
   IF LNO = '' OR LNO = 'END' THEN LNO = 0
   RETURN
7500 ECD.NUM = 5    
   ECD.MINV = 1; ECD.MAXV = MV.LINES
   ECD.ACTION = 4; CALL SCRN.EDIT
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   LNO = ECD.RET.VALUE
   IF LNO = '' OR LNO = 'END' THEN LNO = 0
   RETURN
8000 ECD.NUM = 5    
   ECD.MINV = SV.OLD.START.LINE
   IF SV.LAST.LINE < SV.LINES THEN
      ECD.MAXV = SV.LAST.LINE
   END ELSE
      ECD.MAXV = SV.LINES
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   LNO = ECD.RET.VALUE
   IF LNO = '' OR LNO = 'END' THEN LNO = 0
   RETURN
8500 ECD.NUM = 5    
   ECD.MINV = 1; ECD.MAXV = SV.LINES
   ECD.ACTION = 4; CALL SCRN.EDIT
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   LNO = ECD.RET.VALUE
   IF LNO = '' OR LNO = 'END' THEN LNO = 0
   RETURN
30000 MV.START.LINE = 1 + INT((MV.LN-1)/MV.PAGE.SIZE) * MV.PAGE.SIZE    
   IF MV.START.LINE = MV.OLD.START.LINE THEN GOTO 30999
   MV.OLD.START.LINE = MV.START.LINE
   MV.LAST.LINE = MV.START.LINE + MV.PAGE.SIZE - 1
   CNT = 1
   FOR N = MV.START.LINE TO MV.LAST.LINE UNTIL N > MV.LINES
      MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(N-1,MV.PAGE.SIZE)
      XN = N + GLRP.BEG.LINE
      P_X  = 0 ; P_Y = MV.SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.TYPE> "L#1"
      P_X  := AM:6 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.LINE> "R#3"
      P_X  := AM:10 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.SKIP> "R#1"
      P_X  := AM:12 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.DASH> "L#1"
      P_X  := AM:14 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.REV> "L#1"
      P_X  := AM:16 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.DIV> "L#2":" "
      P_X  := AM:20 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.DEPT> "L#2":" "
      P_X  := AM:24 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.CCTR> "L#3":" "
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS = "C") OR (FIX.FLG = 0) THEN
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:GLRP.REC(XN)<1,GLRP.LINE.DESC> "L#50"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END ELSE
         P_X  = 29 ; P_Y = 4 ; P_VALUE = "Fixed Amount   Description " ; P_OPT = "CL"
         P_X  := AM:29 ; P_Y := AM:MV.SLN ; P_VALUE := AM:OCONV(GLRP.REC(XN)<1,GLRP.LINE.AMT>,"MD2") "R#12" :"   ": GLRP.REC(XN)<1,GLRP.LINE.DESC> "L#35"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO MV.PAGE.SIZE
      MV.SLN = MV.BEGIN.PAGE + MV.LINE.SPACE * MOD(N-1,MV.PAGE.SIZE)
      P_X  = 0 ; P_Y = MV.SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   IF (FIX.FLG = 1 AND MV.ANS = "A") OR (FIX.FLG = 1 AND MV.ANS = "C") THEN
      FIX.FLG = 0
   END
30999 RETURN    
40000 SV.START.LINE = 1 + INT((SV.LN-1)/SV.PAGE.SIZE) * SV.PAGE.SIZE    
   IF SV.START.LINE = SV.OLD.START.LINE THEN GOTO 40999
   SV.OLD.START.LINE = SV.START.LINE
   SV.LAST.LINE = SV.START.LINE + SV.PAGE.SIZE - 1
   CNT = 1
   FOR N = SV.START.LINE TO SV.LAST.LINE UNTIL N > SV.LINES
      SV.SLN = SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(N-1,SV.PAGE.SIZE)
      P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = N "R#3" ; P_OPT = ""
      P_X  := AM:5 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,N> "L#1"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BEGIN CASE
         CASE GL.DESC(MV.XLN)<1,N> # ""
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 1
            GL.DESC(MV.XLN)<1,N,CATG> = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N>[1,3]
            GL.DESC(MV.XLN)<1,N,SUB.CATG> = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N>[4,3]
            MATREAD CAS.REC FROM CATG.AND.SUB, CONO:GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> ELSE MAT CAS.REC = ""
            GL.DESC(MV.XLN)<1,N,CURR> = CAS.CURR
            GL.DESC(MV.XLN)<1,N,FIX> = CAS.FIX
            GL.DESC(MV.XLN)<1,N,PROD> = CAS.PROD
            MATREAD AC.REC FROM ACCT.CATG, GL.DESC(MV.XLN)<1,N,CATG> ELSE
               MAT AC.REC = ""; AC.DESC = UNKNOWN
            END
            GL.DESC(MV.XLN)<1,N,DESC> = AC.DESC
            GL.DESC(MV.XLN)<1,N,TYPE> = AC.TYPE
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 2
            MATREAD AC.REC FROM ACCT.CATG, GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> ELSE
               MAT AC.REC = ""; AC.DESC = UNKNOWN
            END
            GL.DESC(MV.XLN)<1,N,CATG> = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N>
            GL.DESC(MV.XLN)<1,N,DESC> = AC.DESC
            GL.DESC(MV.XLN)<1,N,TYPE> = AC.TYPE
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 3
            MATREAD AT.REC FROM ACCT.TYPE, GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> ELSE
               MAT AT.REC = ""; AT.DESC = UNKNOWN
            END
            GL.DESC(MV.XLN)<1,N,DESC> = AT.DESC
            GL.DESC(MV.XLN)<1,N,TYPE> = GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N>
         CASE 1
            MATREAD COA.REC FROM COA, CONO:GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> ELSE
               MAT COA.REC = ""
               COA.DESC = UNKNOWN
            END
            GL.DESC(MV.XLN)<1,N,DESC> = COA.DESC
            GL.DESC(MV.XLN)<1,N,TYPE> = COA.TYPE
            GL.DESC(MV.XLN)<1,N,CATG> = COA.CATG
            GL.DESC(MV.XLN)<1,N,SUB.CATG> = COA.SUB.CATG
            GL.DESC(MV.XLN)<1,N,CURR> = COA.CURR
            GL.DESC(MV.XLN)<1,N,FIX> = COA.FIX
            GL.DESC(MV.XLN)<1,N,PROD> = COA.PROD
      END CASE
      BEGIN CASE
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 1
            P_X  = 9 ; P_Y = SV.SLN ; P_VALUE = GL.DESC(MV.XLN)<1,N,TYPE> "L#1" ; P_OPT = ""
            P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CATG> "L#3"
            P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,SUB.CATG> "L#3"
            P_X  := AM:20 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CURR> "L#1"
            P_X  := AM:22 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,FIX> "L#1"
            P_X  := AM:24 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,PROD> "L#1"
            P_X  := AM:26 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL" "L#14"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 2
            P_X  = 9 ; P_Y = SV.SLN ; P_VALUE = GL.DESC(MV.XLN)<1,N,TYPE> "L#1" ; P_OPT = ""
            P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CATG> "L#3"
            P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL"
            P_X  := AM:20 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CURR> "L#1"
            P_X  := AM:22 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,FIX> "L#1"
            P_X  := AM:24 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,PROD> "L#1"
            P_X  := AM:26 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL" "L#14"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = 3
            P_X  = 9 ; P_Y = SV.SLN ; P_VALUE = GL.DESC(MV.XLN)<1,N,TYPE> "L#1" ; P_OPT = ""
            P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL"
            P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL"
            P_X  := AM:20 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CURR> "L#1"
            P_X  := AM:22 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,FIX> "L#1"
            P_X  := AM:24 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,PROD> "L#1"
            P_X  := AM:26 ; P_Y := AM:SV.SLN ; P_VALUE := AM:"ALL" "L#14"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CASE 1
            P_X  = 9 ; P_Y = SV.SLN ; P_VALUE = GL.DESC(MV.XLN)<1,N,TYPE> "L#1" ; P_OPT = ""
            P_X  := AM:12 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CATG> "L#3"
            P_X  := AM:16 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,SUB.CATG> "L#3"
            P_X  := AM:20 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,CURR> "L#1"
            P_X  := AM:22 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,FIX> "L#1"
            P_X  := AM:24 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GL.DESC(MV.XLN)<1,N,PROD> "L#1"
            P_X  := AM:26 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> CO.ACCT.MASK
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END CASE
      P_X  = 41 ; P_Y = SV.SLN ; P_VALUE = GL.DESC(MV.XLN)<1,N,DESC> "L#27" ; P_OPT = ""
      P_X  := AM:70 ; P_Y := AM:SV.SLN ; P_VALUE := AM:GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,N> "L#1"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO SV.PAGE.SIZE
      SV.SLN = SV.BEGIN.PAGE + SV.LINE.SPACE * MOD(N-1,SV.PAGE.SIZE)
      P_X  = 0 ; P_Y = SV.SLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
40999 RETURN    
***** SCROLL ROUTINE FOR DIV, DEPT, CCTR    
*T21876 *COPY>PMCBP>DV.DP.CC.SCROLL    
***** SCROLL SCREEN FOR DIV, DEP, CCTR    
80000 MV.OLD.START.LINE = OLD.START    
   GOSUB 30000
   RETURN
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000 PRINT @(0,23) : ERRMSG : CL :    
*      INPUT X :
*      PRINT @(0,23) : CL :
*      RETURN
99999 *
   ECD.ACTION=99;CALL SCRN.EDIT
   RETURN
END    
