      SUBROUTINE VOUCHER.DET.INQ(SQV.ID,VCH.AMT)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION    - [10A]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - VOUCHER.DET.INQ
* BY          - CINDY STRAIT
* DATE        - 08/29/95
* DESCRIPTION -
*   This program is an inquiry for voucher activities
*T23183 gat 08/14/1998 * FIX DRILL DOWN PROBEM
*T27378 thompson 04/18/2003 * USER CORRECT ACCT MASK IN DISPLAY OF DATA
*ENDDOC
*********************************************************************
*
*--- INSERT FILES EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>APS.CPYLIB>SQV
*COPY>GLS.CPYLIB>GLX
*COPY>PMC.CPYLIB>VEND
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
      OPEN "SQV" TO SQV ELSE ERRMSG = "SQV FILE IS MISSING";GOSUB 91000
      OPEN "VEND" TO VEND ELSE ERRMSG = "VEND FILE IS MISSING"; GOSUB 91000
*
      MATREAD SQV.REC FROM SQV,CONO:SQV.ID ELSE MAT SQV.REC = ''
*
      ACCT.DISP = CO.ACCT.PIC
      LN1=0
      LINES1=DCOUNT(SQV.CHK.NO,VM)
      OLD.START.LINE1 = 0
      OLD.START.LINE2 = 0
      OLD.START.LINE3 = 0
      PAGE.SIZE1 = 3
      BEGIN.PAGE1 = 7
      LINE.SPACE1 = 1
      LN2 = 0
      LINES2 = DCOUNT(SQV.AP.ACCT,VM)
      PAGE.SIZE2 = 6
      BEGIN.PAGE2 = 14
      LINE.SPACE2 = 1
      LN3 = 0
      LINES3 = DCOUNT(SQV.ACCT,VM)
      PAGE.SIZE3 = 6
      BEGIN.PAGE3 = 14
      LINE.SPACE3 = 1
      ERRMSG = ''
*
      VCH.NO = SQV.ID[3,4]
      SCV.REC(1)<ECD.SCRN.NO> = VCH.NO
      SCV.REC(4)<ECD.SCRN.NO> = VCH.AMT
      SCV.REC(2)<ECD.SCRN.NO> = SQV.VEND
      MATREAD VEND.REC FROM VEND,CONO:SQV.VEND ELSE MAT VEND.REC = ""
      SCV.REC(3)<ECD.SCRN.NO> = VEND.DESC
      ECD.ACTION = 3;CALL SCRN.EDIT
**
*
      GOSUB 1000
      GOSUB 2000
      GOSUB 3000
      GOTO 9000
*
1000  START.LINE = 1 + INT((LN1-1)/PAGE.SIZE1)*PAGE.SIZE1
      LAST.LINE = START.LINE + PAGE.SIZE1- 1
      IF LAST.LINE > LINES1 THEN LAST.LINE = LINES1
      IF START.LINE = OLD.START.LINE1 THEN GOTO 1999
      OLD.START.LINE1 = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE1 + LINE.SPACE1 * MOD(N-1,PAGE.SIZE1)
         P_X  = 1 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
         P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.CHK.NO<1,N> "L#12"
         P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.PAID.DATE<1,N>,"D2/") "L#8"
         P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.PAID.AMT<1,N>,"MD2") "R#15"
*         P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DISB.ACCT<1,N> "L#6"
         P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DISB.ACCT<1,N> ACCT.DISP; *T27378
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE1
         SLN = BEGIN.PAGE1 + LINE.SPACE1 * MOD(M-1,PAGE.SIZE1)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
1999  RETURN
*
2000  START.LINE = 1 + INT((LN2-1)/PAGE.SIZE2)*PAGE.SIZE2
      LAST.LINE = START.LINE + PAGE.SIZE2- 1
      IF LAST.LINE > LINES2 THEN LAST.LINE = LINES2
      IF START.LINE = OLD.START.LINE2 THEN GOTO 2999
      OLD.START.LINE2 = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE2 + LINE.SPACE2 * MOD(N-1,PAGE.SIZE2)
*         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "";*T27378
*         P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.ACCT<1,N> "L#6"
         P_X  := AM:3 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.ACCT<1,N> ACCT.DISP
*         P_X  := AM:13 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.DIV<1,N> "L#2"
         P_X  := AM:18 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.DIV<1,N> "L#2"
*         P_X  := AM:16 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.DEPT<1,N> "L#2"
         P_X  := AM:21 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.DEPT<1,N> "L#2";*T27378
*         P_X  := AM:19 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.CCTR<1,N> "L#3"
         P_X  := AM:24 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.AP.CCTR<1,N> "L#3"
*         P_X  := AM:23 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.AP.AMT<1,N>,"MD2") "R#15"
         P_X  := AM:28 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.AP.AMT<1,N>,"MD2") "R#11"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE2
         SLN = BEGIN.PAGE2 + LINE.SPACE2 * MOD(M-1,PAGE.SIZE2)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = " " "L#37" ; P_OPT = ""
         P_X  = 0 ; P_Y = SLN ; P_VALUE = " " "L#37" ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
2999  RETURN
*
3000  START.LINE = 1 + INT((LN3-1)/PAGE.SIZE3)*PAGE.SIZE3
      LAST.LINE = START.LINE + PAGE.SIZE3- 1
      IF LAST.LINE > LINES3 THEN LAST.LINE = LINES3
      IF START.LINE = OLD.START.LINE3 THEN GOTO 3999
      OLD.START.LINE3 = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE3 + LINE.SPACE3 * MOD(N-1,PAGE.SIZE3)
         P_X  = 41 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
         P_X  = 40 ; P_Y = SLN ; P_VALUE = N "R#2" ; P_OPT = "";*T27378
*         P_X  := AM:45 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.ACCT<1,N> "L#6"
         P_X  := AM:44 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.ACCT<1,N> ACCT.DISP;*T27378
*         P_X  := AM:54 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DIV<1,N> "L#2"
         P_X  := AM:59 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DIV<1,N> "L#2";*T27378
*         P_X  := AM:57 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DEPT<1,N> "L#2"
         P_X  := AM:62 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.DEPT<1,N> "L#2";*T27378
*         P_X  := AM:60 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.CCTR<1,N> "L#3"
         P_X  := AM:65 ; P_Y := AM:SLN ; P_VALUE := AM:SQV.CCTR<1,N> "L#3";*T27378
*         P_X  := AM:64 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DIST.AMT<1,N>,"MD2") "R#15"
         P_X  := AM:69 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(SQV.DIST.AMT<1,N>,"MD2") "R#11";*T27378
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR M = CNT TO PAGE.SIZE3
         SLN = BEGIN.PAGE3 + LINE.SPACE3 * MOD(M-1,PAGE.SIZE3)
         P_X  = 41 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT M
3999  RETURN
*
8000*
      ECD.MINV = 1
      ECD.MAXV = LINES1
      ECD.NUM = 51
      ECD.ACTION = 4; CALL SCRN.EDIT
      RETURN
9000*
      ECD.NUM=50;ECD.ACTION=4;CALL SCRN.EDIT
      BEGIN CASE
         CASE ECD.RET.VALUE = "E"
            GOTO 99999
         CASE ECD.RET.VALUE = "V"
* T23183
ECD.ACTION = 99; CALL SCRN.EDIT
* T23183
            ECD.SCRN.NO = 8
            CALL VENDOR.MAINT.INQ(SQV.VEND)
            ECD.SCRN.NO = 4
            ECD.ACTION=3;CALL SCRN.EDIT
            LN1=1; OLD.START.LINE1 = 0; GOSUB 1000
            LN2=1; OLD.START.LINE2 = 0; GOSUB 2000
            LN3=1; OLD.START.LINE3 = 0; GOSUB 3000
         CASE ECD.RET.VALUE = "C"
            GOSUB 8000
* T23183
ECD.ACTION=99;CALL SCRN.EDIT
* T23183
            IF NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0 THEN
               LNO = ECD.RET.VALUE
               CHK.NO=SQV.CHK.NO<1,LNO>
               MCD.ID = "A":SQV.DISB.ACCT<1,LNO>:SQV.PAID.DATE<1,LNO>:SQV.CHK.NO<1,LNO>
               MATREAD COA.REC FROM COA,CONO:SQV.DISB.ACCT<1,LNO> ELSE MAT COA.REC = ''
               ECD.SCRN.NO = 5
               CALL APS.CHECK.DET.INQ(MCD.ID,CHK.NO,SQV.DISB.ACCT<1,LNO>,COA.DESC)
            END
            GOTO 99999
         CASE ECD.RET.VALUE = "SA"
            LN2 = LN2 + PAGE.SIZE2
            IF LN2 > LINES2 THEN
               IF SQV.AP.ACCT<1,LN2> = "" THEN LN2 = 1
            END
            GOSUB 2000
         CASE ECD.RET.VALUE = "SE"
            LN3 = LN3 + PAGE.SIZE3
            IF LN3 > LINES3 THEN
               IF SQV.ACCT<1,LN3> = "" THEN LN3 = 1
            END
            GOSUB 3000
         CASE ECD.RET.VALUE = "SC"
            LN1 = LN1 + PAGE.SIZE1
            IF LN1 > LINES1 THEN
               IF SQV.CHK.NO<1,LN1> = "" THEN LN1 = 1
            END
            GOSUB 1000
         CASE 1
            GOTO 9000
      END CASE
      GOTO 9000
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
99999 *
      ECD.ACTION=99;CALL SCRN.EDIT
      RETURN
   END
