   SUBROUTINE COA.DIST.MAINT.SUB1(NEW,MAT COA.REC,MAT CDR.REC,M.TYPE,P.TYPE,P.NORM,T.TYPE,T.NORM,COA.DIST,KEY,OPER.ID,F.DIV)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION    - [08.0]
* SYSTEM   - PRIMAC
* SOURCE   - GLSBP
* PROGRAM  - COA.DIST.MAINT
* BY   - WALID YAMOUT , C.B.A
* DATE   - 09/09/85
* DESCRIPTION- HANDLES "%" TYPE DISTRIBUTION
*
*TASK 20731 CLS 8/96  ADD HEADER DIVISION..ONLY ALLOW SAME IN BODY 
*                     UNLESS 00 IS ENTERED AS HEADER DIVISION
*T21177 diane 11/06/1996 * REV11 UPG
*T21876 diane 05/07/1997 * USE GEN.XREF
*T23278 markt 12/10/1998 * Add check for divisional security.
*T25978 adelgado 02/20/2002 * Add the use of prompts (S,SR,SB,ST).
*T27624 lross 08/12/2003 * Fix dept lookup and eliminate T20731 from
*                          GL DIST.
*T28098 cmykleb 05/06/2004 * Change program to use GEN.XREF.SUB cpylib.
*ENDDOC
*********************************************************************
*--- INSERT FILES EQUETES
*COPY>GLS.CPYLIB>COA.DIST
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
**COPY>CPYLIB>GEN.XREF ;*T27624
*COPY>CPYLIB>GEN.XREF.SUB ;*T27624
*COPY>CPYLIB>XREF.DATA ;*T27624
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*--- INITIALIZATION
*
   DV.X = 51
   DP.X = 56
   CC.X = 60
   BEGIN.PAGE = 8
   LINE.SP = 1
   PAGE.S = 12
   GEN.DIV = "00"
   GEN.DEPT = "00"
   GEN.CCTR = "000"
   BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
   ACCT.LEN = LEN(CO.ACCT.PIC)
   SP1 = SPACE(1)
   SP2 = SPACE(2)
   SP15 = SPACE(15)
   PP.NO = 12
   UNKNOWN = "NOT ON FILE"
   D3 = STR("-",3)
   D4 = STR("-",4)
   D15 = STR("-",15)
   D30 = STR("-",30)
   MAT GEN.XREF.REC = ""; GXR.CO = CONO; GXR.LOC = 1
*
*--- MAIN PROCESS
*
100*
   ECD.ACTION=3;CALL SCRN.EDIT
*
*
200*
   LINE.SPACE = LINE.SP
   PAGE.SIZE = PAGE.S
   LN = 1
   LINES = 0
   OLD.START = 0
   LINE.DESC = ""
   PROP.DESC = ""
*
   IF NEW THEN
      LN = 1
      LINES = 0
      OLD.START = 0
      GOSUB 2000
      OPTION = "A"
      LOOP
         LN = LINES + 1
         OLD.LINES = LINES
         GOSUB 10000
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
   END ELSE
      ECD.NUM = 9; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CDR.F.PCNT
      ECD.ACTION = 5; CALL SCRN.EDIT
      LN = 1
      LINES = 0
      OLD.START = 0
      GOSUB 2000
      LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
      FOR I = 1 TO LINES
         MATREAD COA.REC FROM COA, CONO : CDR.ACCT<1,I> ELSE COA.DESC = UNKNOWN
         LINE.DESC<I> = COA.DESC
         IF I = 1 THEN
            T.TYPE = COA.TYPE
            T.NORM = COA.NORM
         END
      NEXT N
   END
*
   GOSUB 80000
*
*--- ENTER OPTIONS
*
500*
   ECD.NUM = 10
   SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
   ECD.ACTION=4;CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
         RELEASE COA.DIST, CONO:KEY
         GOTO 99999
      CASE OPTION = "A"
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 10000
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
         GOSUB 80000
      CASE OPTION = "C"
         IF LINES = 1 THEN LNO = 1 ELSE GOSUB 30000
         IF LNO THEN
            LN = LNO
            SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
            GOSUB 10100
         END
         GOSUB 80000
      CASE OPTION = "D"
         GOSUB 30000
         IF LNO THEN
            LN = LNO
            CDR.F.PCNT = CDR.F.PCNT - CDR.PCNT<1,LN>
            ECD.NUM = 9; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CDR.F.PCNT
            ECD.ACTION = 5; CALL SCRN.EDIT
            CDR.ACCT = DELETE(CDR.ACCT,1,LN,0)
            CDR.DIV = DELETE(CDR.DIV,1,LN,0)
            CDR.DEPT = DELETE(CDR.DEPT,1,LN,0)
            CDR.CCTR = DELETE(CDR.CCTR,1,LN,0)
            CDR.PCNT = DELETE(CDR.PCNT,1,LN,0)
            CDR.P.ACCT = DELETE(CDR.P.ACCT,1,LN,0)
            CDR.P.DIV = DELETE(CDR.P.DIV,1,LN,0)
            CDR.P.DEPT = DELETE(CDR.P.DEPT,1,LN,0)
            CDR.P.CCTR = DELETE(CDR.P.CCTR,1,LN,0)
            LINE.DESC = DELETE(LINE.DESC,LN,0,0)
            PROP.DESC = DELETE(PROP.DESC,LN,0,0)
            LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
            IF LN > LINES THEN LN = LINES
            IF LN < 1 THEN LN = 1
            OLD.START = 0
            GOSUB 80000
         END
    * T25978 v
      CASE OPTION[1,1] = "S"
         BEGIN CASE
            CASE OPTION = 'S'
               LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 80000
            CASE OPTION[2,1] = 'R'
               LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 80000
            CASE OPTION[2,1] = 'B'
               LN = LINES
               GOSUB 80000
            CASE OPTION[2,1] = 'T'
               LN = 1
               GOSUB 80000
            CASE NUM(TRIM(OPTION[2,10]))
               TEMP = TRIM(OPTION[2,10])
               IF TEMP > 0 AND TEMP LE LINES THEN
                  LN = TEMP
                  GOSUB 80000
               END
         END CASE
    * T25978 ^
      CASE OPTION = "F"
         IF CDR.ACCT = "" THEN
            IF NOT(NEW) THEN
               DELETE COA.DIST, CONO:KEY
            END
            RELEASE COA.DIST, CONO:KEY
            GOTO 99999
         END
         IF CDR.F.PCNT = 10000 THEN
            CDR.OPER = OPER.ID
            MATWRITE CDR.REC ON COA.DIST, CONO:KEY
            GOTO 99999
         END ELSE
            ERRMSG = "Cannot File Unless From Percent = 100.00"; GOSUB 91000
         END
   END CASE
   GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- PRINT SCROLL HEADING
*
2000*
   RETURN
   HEAD1 = "To Account Num "
   HEAD2 = D15
   HEAD1 = HEAD1 : "          Description           Div Dept Cctr  To %"
   HEAD2 = HEAD2 :SP1: D30 :SP1: D3 :SP1: D4 :SP1: D4 :SP1: D3:D3
   P_X  = 66 ; P_Y = 2 ; P_VALUE = "From %" ; P_OPT = ""
   P_X  := AM:66 ; P_Y := AM:3 ; P_VALUE := AM:D3:D3
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 4 ; P_Y = 6 ; P_VALUE = HEAD1 ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 4 ; P_Y = 7 ; P_VALUE = HEAD2 ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
*--- LINE ENTRY
*
10000*
   IF CDR.F.PCNT >= 10000 THEN GOTO 19999
   GOSUB 80000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LINES = LINES + 1
10100*
   P_X  = 4 ; P_Y = SLN ; P_VALUE = SP15 ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   X = 4; Y = SLN; TYP = 1; O.R = 'R'
   MAXL = ACCT.LEN; JUSTIFY = 'L'
   IF CDR.ACCT<1,LN> # '' THEN
      O.R = 'O'; DEFAULT = CDR.ACCT<1,LN>
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN
      IF OPTION = 'A' THEN
         CDR.ACCT = DELETE(CDR.ACCT,1,LN,0)
         CDR.DIV = DELETE(CDR.DIV,1,LN,0)
         CDR.DEPT = DELETE(CDR.DEPT,1,LN,0)
         CDR.CCTR = DELETE(CDR.CCTR,1,LN,0)
         CDR.PCNT = DELETE(CDR.PCNT,1,LN,0)
         CDR.P.ACCT = DELETE(CDR.P.ACCT,1,LN,0)
         CDR.P.DIV = DELETE(CDR.P.DIV,1,LN,0)
         CDR.P.DEPT = DELETE(CDR.P.DEPT,1,LN,0)
         CDR.P.CCTR = DELETE(CDR.P.CCTR,1,LN,0)
         PROP.DESC = DELETE(PROP.DESC,LN,0,0)
         LINE.DESC = DELETE(LINE.DESC,LN,0,0)
      END
      OLD.START = 0
      GOTO 19999
   END
   DS.X = 20; DS.Y = SLN
   GXR.ACTION = ""
   BEGIN CASE
      CASE VALUE = "D"
         X = DS.X; Y = DS.Y; TYP = 1; MAXL = 30; O.R = 'O'; DEFAULT = LINE.DESC<LN>
         CALL EDIT.SUB
         IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
         GXR.ACTION = "D"
      CASE VALUE = "T"
         X = DS.X; Y = DS.Y; TYP = 1; MAXL = 1
         P_X  = X ; P_Y = Y ; P_VALUE = SPACE(30) ; P_OPT = ""
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CALL EDIT.SUB
         IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
         MATREAD AT.REC FROM ACCT.TYPE, VALUE ELSE
            ERRMSG = 'INVALID ACCOUNT TYPE'
            GOSUB 91000; GOTO 10100
         END
         GXR.ACTION = "C"
      CASE LEN(VALUE) < BASE.LEN
         ERRMSG = "** MINIMUM LENGTH  = " : BASE.LEN : " **"
         GOSUB 91000; GOTO 10100
      CASE NOT(NUM(VALUE))
         ERRMSG = "** NUMERIC INPUT REQUIRED **"
         GOSUB 91000; GOTO 10100
   END CASE
   IF GXR.ACTION # "" THEN
      GXR.SRCH.ID = VALUE; GXR.ID = ''; GXR.FILE = COA
*T28098 v
*     CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      CALL COA.GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX)
*T28098 ^
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      GOSUB 2000; OLD.START = 0; GOSUB 80000
      IF GXR.ID = '' THEN GOTO 10100
      VALUE = GXR.ID
   END ELSE
      VALUE = VALUE : STR("0",ACCT.LEN-LEN(VALUE))
   END
   MATREAD COA.REC FROM COA, CONO:VALUE ELSE
      ERRMSG = 'CANNOT LOCATE ACCOUNT : ' : VALUE CO.ACCT.MASK
      GOSUB 91000; GOTO 10100
   END
   IF OPTION = "A" AND LN = 1 THEN
      IF COA.TYPE # M.TYPE THEN
         ERRMSG = "ACCOUNT TYPE SHOULD BE THE SAME AS THE FROM ACCOUNT TYPE"
         GOSUB 91000; GOTO 10100
      END
      T.TYPE = COA.TYPE
      T.NORM = COA.NORM
   END
   IF COA.TYPE # T.TYPE THEN
      ERRMSG = "ALL TO ACCOUNTS SHOULD HAVE THE SAME TYPE"
      GOSUB 91000; GOTO 10100
   END
   IF COA.NORM # T.NORM THEN
      ERRMSG = "ALL TO ACCOUNTS SHOULD HAVE THE SAME NORM EITHER DB OR CR"
      GOSUB 91000; GOTO 10100
   END
   CDR.ACCT<1,LN> = VALUE
   LINE.DESC<LN> = COA.DESC
   P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE CO.ACCT.MASK ; P_OPT = ""
   P_X  := AM:DS.X ; P_Y := AM:DS.Y ; P_VALUE := AM:COA.DESC "L#30"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LINE.LEVEL = COA.LEVEL
   DV.NO = CDR.DIV<1,LN>
   DP.NO = CDR.DEPT<1,LN>
   CC.NO = CDR.CCTR<1,LN>
*COPY>PMCBP>DV.DP.CC.MAINT
*
10500*
*TASK 20731 v T27624 Comment out 20731
* IF DV.NO # F.DIV AND F.DIV # "00" THEN
*   ERRMSG = "Division must match 'From Div' "
*   GOSUB 91000
*   CDR.DIV<1,LN>=''
*   CDR.DEPT<1,LN>=''
*   CDR.CCTR<1,LN>=''
*   GOTO 10100
* END
*TASK 20731 ^
   S.DIV = DV.NO ; S.DEPT = DP.NO ; S.CCTR = CC.NO ; S.ACCT.NO = CDR.ACCT<1,LN>
   GOSUB 40000
   IF UPD.FLG = 1 THEN
      CDR.ACCT<1,LN> = N.KEY[11,ACCT.LEN]
      LINE.DESC<LN> = COA.DESC
      P_X  = 4 ; P_Y = SLN ; P_VALUE = CDR.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
      P_X  := AM:DS.X ; P_Y := AM:DS.Y ; P_VALUE := AM:COA.DESC "L#30"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      DV.NO = N.KEY[4,2]
      DP.NO = N.KEY[6,2]
      CC.NO = N.KEY[8,3]
      P_X  = DV.X ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
      P_X  := AM:DP.X ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
      P_X  := AM:CC.X ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   PTR = 1
   LOOP
      LOCATE CDR.ACCT<1,LN> IN CDR.ACCT<1>,PTR SETTING FND ELSE FND = 0
      IF FND THEN
         IF FND = LN THEN
            PTR = FND + 1
         END ELSE
            IF CDR.DIV<1,FND> = DV.NO AND CDR.DEPT<1,FND> = DP.NO AND CDR.CCTR<1,FND> = CC.NO THEN PTR = 0 ELSE PTR = FND + 1
         END
      END
   WHILE PTR AND FND DO REPEAT
   IF PTR = 0 THEN
      ERRMSG = "THIS ACCOUNT ALREADY EXIST ON LINE ":FND
      GOSUB 91000; GOTO 10100
   END
   CDR.DIV<1,LN> = DV.NO
   CDR.DEPT<1,LN> = DP.NO
   CDR.CCTR<1,LN> = CC.NO
10600*
   X = 65; Y = SLN; TYP = 4; SCALER = 2; MAXL = 6; O.R = "O"
   MINV = 0; MAXV = 10000
   DEFAULT = OCONV((10000 - CDR.F.PCNT + CDR.PCNT<1,LN>), "MD2")
   CALL EDIT.SUB
   IF VALUE = "END" THEN GOTO 10100
   IF (VALUE + CDR.F.PCNT - CDR.PCNT<1,LN>) > 10000 THEN
      ERRMSG = "EXCEED 100.00 %"; GOSUB 91000; GOTO 10600
   END
   CDR.F.PCNT = CDR.F.PCNT + VALUE - CDR.PCNT<1,LN>
   CDR.PCNT<1,LN> = VALUE
   GOTO 19999
19999*
   ECD.NUM = 9; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CDR.F.PCNT
   ECD.ACTION = 5; CALL SCRN.EDIT
   LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
   RETURN
*
*--- GET LINE NUMBER
*
30000*
   GOSUB 80000
   ECD.MINV = ST.LINE
   ECD.MAXV = LST.LINE
   ECD.NUM = 11
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
   RETURN
*
*---- CHECK FOR EQUIVALENT ACCOUNT
*
40000*
   UPD.FLG = 0
   IF EQV.FLG = 1 THEN
      READ N.KEY FROM COA.EQUIV , CONO:S.DIV:S.DEPT:S.CCTR:S.ACCT.NO ELSE N.KEY = ""
      IF N.KEY # "" THEN
         UPD.FLG = 1
         MATREAD COA.REC FROM COA, CONO:N.KEY[11,ACCT.LEN] ELSE
            ERRMSG = "CANNOT LOCATE EQUIVALENT ACCOUNT : ": N.KEY[11,ACCT.LEN] CO.ACCT.MASK
            GOSUB 91000
            UPD.FLG = 0
         END
      END
   END
   RETURN
*
*--- SCROLL
*
80000*
   ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   IF LST.LINE > LINES THEN LST.LINE = LINES
   IF ST.LINE = OLD.START THEN RETURN
   OLD.START = ST.LINE
   CNT = 1
   FOR N = ST.LINE TO LST.LINE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
      P_X  := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.ACCT<1,N> CO.ACCT.MASK
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 20 ; P_Y = SSLN ; P_VALUE = LINE.DESC<N> "L#30" ; P_OPT = ""
      P_X  := AM:51 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.DIV<1,N> "L#2"
      P_X  := AM:56 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.DEPT<1,N> "L#2"
      P_X  := AM:60 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.CCTR<1,N> "L#3"
      P_X  := AM:65 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(CDR.PCNT<1,N>, "MD2") "R#6"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*--- SCROLL XREF
*
* *COPY>PMCBP>DV.DP.CC.SCROLL     ;* T21876
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*       PRINT @(0,23):ERRMSG:CL:
*       INPUT REPLY,1 :
*       PRINT @(0,23):CL:
*       RETURN
99999 * PRINT @(-1)
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   RETURN
END
