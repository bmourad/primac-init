**********************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* SOURCE       - GLSBP
*
* PROGRAM      _ REPORT.PRINT
*
* BY           - ZIAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE         - 11/05/84
*
* DESCRIPTION  -
*
*********************************************************************
*
**************************
* DIMENSIONS AND EQUATES *
**************************
*
*COPY>GLS.CPYLIB>GLS.REPORT
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>COA.BAL
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
     DIM ACCT.AMT(8)
     DIM LINES(20)
     DIM COL.ATT(20)
     DIM COL.CASE(20)
     DIM COL.PIC(20)
     DIM COL.SPC(20)
     DIM COL.CONV(20)
     DIM COL.PREC(20)
     DIM COL.LEN(20)
     DIM COL.TYPE(20)
     DIM COL.CC1(20)
     DIM COL.CC2(20)
     DIM COL.TLN(20)
     DIM LINE.DASH(20)
     SYS.TYPE = 1
     CALL SYSCOM(MAT SYSCOM.REC)
*
**************
* OPEN FILES *
**************
   OPEN "", "GLS.REPORT" TO GLS.REPORT ELSE
     ERRMSG = "GLS.REPORT FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "COMPANY" TO COMPANY ELSE
     ERRMSG = "COMPANY FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "CONTROL" TO CONTROL ELSE
     ERRMSG = "CONTROL FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "COA" TO COA ELSE
     ERRMSG = "COA FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "ACCT.TYPE" TO ACCT.TYPE ELSE
     ERRMSG = "ACCT.TYPE FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "ACCT.CATG" TO ACCT.CATG ELSE
     ERRMSG = "ACCT.CATG FILE IS MISSING"; GOTO 93000
   END
   OPEN "", "CATG.AND.SUB" TO CATG.AND.SUB ELSE
     ERRMSG = "CATG.AND.SUB FILE IS MISSING"; GOTO 93000
   END
******************
* INITIALIZATION *
******************
*
      PROCREAD BUFFER ELSE
         ERRMSG = "MUST RUN FROM A PROC"
         GOSUB 91000; GOTO 99999
      END
      CONO = BUFFER<1>
      MATREAD COMP.REC FROM COMPANY, CONO ELSE
         ERRMSG = "INVALID COMPANY # ":CONO
         GOSUB 91000; GOTO 99999
      END
      READ COMPANY.HEADING FROM CONTROL, CONO:"HEADING" ELSE
         ERRMSG = "CANNOT LOCATE COMPANY HEADING"
         GOSUB 91000; GOTO 99999
      END
      IN.ACCT.LEN = LEN(CO.ACCT.PIC)
      PERIOD = BUFFER<3>[5,2]
      ENDN.DATE = BUFFER<4>
      LEVEL = BUFFER<5>
      SEL.DV = BUFFER<6>
      SEL.DP = BUFFER<7>
      SEL.CC = BUFFER<8>
      BEGIN CASE
      CASE LEVEL > 7
         OPEN "", "ALL.COA.BAL" TO COA.BAL ELSE
           ERRMSG = "ALL.COA.BAL FILE IS MISSING"; GOTO 93000
         END
         CONO.KEY = ""
      CASE LEVEL < 1
         OPEN "", "CO.COA.BAL" TO COA.BAL ELSE
           ERRMSG = "CO.COA.BAL FILE IS MISSING"; GOTO 93000
         END
         CONO.KEY = CONO
      CASE LEVEL < 2
         OPEN "", "DV.COA.BAL" TO COA.BAL ELSE
           ERRMSG = "DV.COA.BAL FILE IS MISSING"; GOTO 93000
         END
         CONO.KEY = CONO : SEL.DV
      CASE LEVEL < 3
         OPEN "", "DP.COA.BAL" TO COA.BAL ELSE
           ERRMSG = "DP.COA.BAL FILE IS MISSING"; GOTO 93000
         END
         CONO.KEY = CONO : SEL.DV : SEL.DP
      CASE 1
         OPEN "", "CC.COA.BAL" TO COA.BAL ELSE
           ERRMSG = "CC.COA.BAL FILE IS MISSING"; GOTO 93000
         END
         CONO.KEY = CONO : SEL.DV : SEL.DP : SEL.CC
      END CASE
*     PORT.NO = BUFFER<9>
      PORT.NO = 'TTY'
      CALL SYSVARS.SUB(PORT.NO)
      TODAY = DATE()
      REPORT.LEN = 132
      PAGE.SIZE = 60
      CB.OPN = CB.OPN + PERIOD + 1
      BG.OPN = CB.OPN - 1
      CB.LYR = CB.LYR + PERIOD + 1
      BG.LYR = CB.LYR - 1
      CB.BUD = CB.BUD + PERIOD + 1
      BG.BUD = CB.BUD - 1
*
*---  OPEN TEMP FILE
*
      OPEN "",PORT.NO:"TEMP.REPORT" TO TEMP.REPORT ELSE
        ERRMSG = "TEMP.REPORT FILE IS MISSING"; GOTO 93000
      END
      LINE = ""
*
*******************
* MAIN PROCESSING *
*******************
      DATA = 1
      LOOP
         READNEXT GLRP.ID ELSE DATA = 0
      WHILE DATA DO
         DASHES = ""
         MAT LINE.DASH = ""
         TLINES = ""
         TLN.CNT = 0
         TLN.BEG = 1
         PAGE.NO = 0
         MATREAD GLRP.REC FROM GLS.REPORT, GLRP.ID ELSE
            GOTO 9999
         END
         COL.CNT = COUNT(GLRP.COLUMN,VM) + (GLRP.COLUMN # "")
         LN.CNT = GLRP.BEG.LINE + 1
         LOOP WHILE GLRP.REC(LN.CNT) # "" DO
            LN.CNT = LN.CNT + 1
         REPEAT
         LN.CNT = LN.CNT - GLRP.BEG.LINE - 1
         IF LN.CNT < 1 THEN GOTO 9999
         LINE.DESC.PIC = "L#" : GLRP.GRP.LEN + 1
         START.SPC = GLRP.GRP.LEN + 1
         MAT COL.SPC = ""; MAT COL.PIC = ""
         MAT COL.ATT = ""; MAT COL.CASE = ""; MAT COL.CONV = ""
         MAT COL.PREC = ""; MAT COL.LEN = ""; MAT COL.TYPE = ""
         MAT COL.CC1 = ""; MAT COL.CC2 = ""; MAT COL.TLN = ""
         FOR COL = 1 TO COL.CNT
            COL.TYPE(COL) = GLRP.COL.TYPE<1,COL>
            COL.CC1(COL) = GLRP.COL.CC1<1,COL>
            COL.CC2(COL) = GLRP.COL.CC2<1,COL>
            COL.TLN(COL) = GLRP.COL.TLN<1,COL>
            COL.PREC(COL) = GLRP.COL.PREC<1,COL>
            COL.LEN(COL) = GLRP.COL.LEN<1,COL>
            IF GLRP.COL.C.Y<1,COL> = "Y" THEN ADD = 0 ELSE ADD = 1
            BEGIN CASE
            CASE COL.CC1(COL) = "P" OR COL.CC2(COL) = "P"
               COL.ATT(COL) = 1 + ADD
            CASE COL.CC1(COL) = "L" OR COL.CC2(COL) = "L"
               COL.ATT(COL) = 3 + ADD
            CASE COL.CC1(COL) = "B" OR COL.CC2(COL) = "B"
               COL.ATT(COL) = 5 + ADD
            CASE COL.CC1(COL) = "F" OR COL.CC2(COL) = "F"
               COL.ATT(COL) = 7
            CASE 1
               COL.ATT(COL) = 8
            END CASE
            IF COL.CC1(COL) = "0" THEN COL.CC1(COL) = ""
            IF COL.CC2(COL) = "0" THEN COL.CC2(COL) = ""
            BEGIN CASE
            CASE COL.CC1(COL) = "" OR COL.CC2(COL) = ""
               COL.CASE(COL) = 0
            CASE NUM(COL.CC1(COL))
               BEGIN CASE
               CASE NUM(COL.CC2(COL))
                  COL.CASE(COL) = 1
               CASE COL.CC2(COL) # "T"
                  COL.CASE(COL) = 2
               CASE COL.TLN(COL) + 0 > 0
                  COL.CASE(COL) = 3
               CASE 1
                 COL.CASE(COL) = 4
               END CASE
            CASE NUM(COL.CC2(COL))
               BEGIN CASE
               CASE COL.CC1(COL) # "T"
                  COL.CASE(COL) = 5
               CASE COL.TLN(COL) + 0 > 0
                  COL.CASE(COL) = 6
               CASE 1
                  COL.CASE(COL) = 7
               END CASE
            CASE 1
               COL.CASE(COL) = 0
            END CASE
            COL.CONV(COL) = GLRP.COL.CONV<1,COL>
            PPTR = INDEX(COL.CONV(COL),"%",1)
            IF PPTR THEN
               COL.PIC(COL) = "R" : STR("#",COL.LEN(COL)-1)
               COL.PIC(COL)<1,2> = "%"
               COL.CONV(COL) = COL.CONV(COL)[1,PPTR-1] : COL.CONV(COL)[PPTR+1,99]
            END ELSE
               COL.PIC(COL) = "R#" : COL.LEN(COL)
            END
            IF COL.PREC(COL) < 1 THEN
               COL.CONV(COL) = "MD0":COL.CONV(COL)
            END ELSE
               COL.CONV(COL) = "MD" : COL.PREC(COL) : COL.CONV(COL)
            END
            COL.PREC(COL) = PWR(10,(2-COL.PREC(COL)))
            COL.SPC(COL) = GLRP.COLUMN<1,COL> - START.SPC
            START.SPC = GLRP.COLUMN<1,COL> + COL.LEN(COL)
         NEXT COL
         FOR XLN = 1 TO LN.CNT
             LN = XLN + GLRP.BEG.LINE
             LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>
PRINT @(0,23) : XLN :
            LINE = ""
            BEGIN CASE
            CASE LN.TYPE = "R"
               LN.ACCT = GLRP.REC(LN)<1,GLRP.LINE.ACCT>
               ACCT.CNT = COUNT(LN.ACCT,SVM) + (LN.ACCT # "")
               MAT ACCT.AMT = 0
               FOR ACCT = 1 TO ACCT.CNT
                  SIGN = GLRP.REC(LN)<1,GLRP.ACCT.SIGN,ACCT> : "1"
                  ATYPE = GLRP.REC(LN)<1,GLRP.ACCT.TYPE,ACCT>
                  BEGIN CASE
                  CASE GLRP.REC(LN)<1,GLRP.ACCT.CODE,ACCT> = ""
                    ACCT.NO = LN.ACCT<1,1,ACCT>
                    GOSUB 20000
                  CASE GLRP.REC(LN)<1,GLRP.ACCT.CODE,ACCT> = 1
                    MATREAD CAS.REC FROM CATG.AND.SUB, CONO : LN.ACCT<1,1,ACCT> ELSE MAT CAS.REC = ""
                    ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # "")
                    FOR AA = 1 TO ACNT
                      ACCT.NO = CAS.ACCT<1,AA>
                      GOSUB 20000
                    NEXT AA
                  CASE GLRP.REC(LN)<1,GLRP.ACCT.CODE,ACCT> = 2
                    MATREAD AC.REC FROM ACCT.CATG, LN.ACCT<1,1,ACCT> ELSE MAT AC.REC = ""
                    SCNT = COUNT(AC.SUB,VM) + (AC.SUB # "")
                    FOR SS = 1 TO SCNT
                      MATREAD CAS.REC FROM CATG.AND.SUB, CONO : LN.ACCT<1,1,ACCT> : AC.SUB<1,SS> ELSE MAT CAS.REC = ""
                      ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # "")
                      FOR AA = 1 TO ACNT
                        ACCT.NO = CAS.ACCT<1,AA>
                        GOSUB 20000
                      NEXT AA
                    NEXT SS
                  CASE GLRP.REC(LN)<1,GLRP.ACCT.CODE,ACCT> = 3
                    MATREAD AT.REC FROM ACCT.TYPE, LN.ACCT<1,1,ACCT> ELSE MAT AT.REC = ""
                    CCNT = COUNT(AT.CATG,VM) + (AT.CATG # "")
                    FOR CC = 1 TO CCNT
                      MATREAD AC.REC FROM ACCT.CATG, AT.CATG<1,CC> ELSE MAT AC.REC = ""
                      SCNT = COUNT(AC.SUB,VM) + (AC.SUB # "")
                      FOR SS = 1 TO SCNT
                        MATREAD CAS.REC FROM CATG.AND.SUB, CONO : AT.CATG<1,CC> : AC.SUB<1,SS> ELSE MAT CAS.REC = ""
                        ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # "")
                        FOR AA = 1 TO ACNT
                          ACCT.NO = CAS.ACCT<1,AA>
                          GOSUB 20000
                        NEXT AA
                      NEXT SS
                    NEXT CC
                  CASE 1
                  END CASE
               NEXT ACCT
               ACCT.AMT(7) = GLRP.REC(LN)<1,GLRP.LINE.AMT>
               FOR COL = 1 TO COL.CNT
                  LINE<1,COL> = ACCT.AMT(COL.ATT(COL))
               NEXT COL
            CASE LN.TYPE = "S"
               TO.LN = GLRP.REC(LN)<1,GLRP.LINE.LINE>
               FOR COL = 1 TO COL.CNT
                  BEGIN CASE
                  CASE COL.ATT(COL) = 7
                     LINE<1,COL> = GLRP.REC(LN)<1,GLRP.LINE.AMT>
                  CASE COL.ATT(COL) < 7
                     SLN = XLN - 1
                     LOOP
                        LTYPE = GLRP.REC(SLN+GLRP.BEG.LINE)<1,GLRP.LINE.TYPE>
                        LSLN = GLRP.REC(SLN+GLRP.BEG.LINE)<1,GLRP.LINE.LINE>
                        BEGIN CASE
                        CASE LTYPE = "R"
                           READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , SLN ELSE TEMP.LINE = ""
                           LINE<1,COL> = LINE<1,COL> + TEMP.LINE<1,COL>
                        CASE LTYPE = "S" AND TO.LN <= LSLN
                           READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , SLN ELSE TEMP.LINE = ""
                            LINE<1,COL> = LINE<1,COL> + TEMP.LINE<1,COL>
                            SLN = LSLN
                         END CASE
                         SLN = SLN - 1
                     WHILE SLN >= TO.LN DO REPEAT
                  END CASE
               NEXT COL
            CASE LN.TYPE = "T"
               FOR COL = 1 TO COL.CNT
                  BEGIN CASE
                  CASE COL.ATT(COL) = 7
                     LINE<1,COL> = GLRP.REC(LN)<1,GLRP.LINE.AMT>
                  CASE COL.ATT(COL) < 7
                     SLN = XLN - 1
                     LOOP
                        LTYPE = GLRP.REC(SLN+GLRP.BEG.LINE)<1,GLRP.LINE.TYPE>
                        LSLN = GLRP.REC(SLN+GLRP.BEG.LINE)<1,GLRP.LINE.LINE>
                        BEGIN CASE
                        CASE LTYPE = "R"
                           READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , SLN ELSE TEMP.LINE = ""
                           LINE<1,COL> = LINE<1,COL> + TEMP.LINE<1,COL>
                        CASE LTYPE = "S" AND TLN.BEG <= LSLN
                           READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , SLN ELSE TEMP.LINE = ""
                            LINE<1,COL> = LINE<1,COL> + TEMP.LINE<1,COL>
                            SLN = LSLN
                         END CASE
                         SLN = SLN - 1
                     WHILE SLN >= TLN.BEG DO REPEAT
                  END CASE
               NEXT COL
               TLN.CNT = TLN.CNT + 1
               TLINES<TLN.CNT> = XLN
               TLN.BEG = XLN + 1
            END CASE
            WRITEV LINE ON TEMP.REPORT, GLRP.ID , XLN
         NEXT XLN
PRINT
         MAT LINES = ""
         TITLE.CNT = COUNT(GLRP.TITLE,VM) + (GLRP.TITLE # "")
         HLN = 0
         FOR L = 1 TO TITLE.CNT
            IF TRIM(GLRP.TITLE<1,L>) # "" THEN
               HLN = HLN + 1
               TITLE = GLRP.TITLE<1,L>
               POS = INDEX(TITLE,"^P^",1)
               IF POS THEN TITLE = TITLE[1,POS-1]:PERIOD:TITLE[POS+3,999]
               POS = INDEX(TITLE,"^D^",1)
               IF POS THEN TITLE = TITLE[1,POS-1]:ENDN.DATE:TITLE[POS+3,999]
               POS = INDEX(TITLE,"^DV^",1)
               IF POS THEN
                  TITLE = TITLE[1,POS-1]:SEL.DV:TITLE[POS+4,999]
               END
               POS = INDEX(TITLE,"^DP^",1)
               IF POS THEN
                  TITLE = TITLE[1,POS-1]:SEL.DP:TITLE[POS+4,999]
               END
               POS = INDEX(TITLE,"^CC^",1)
               IF POS THEN
                  TITLE = TITLE[1,POS-1]:SEL.CC:TITLE[POS+4,999]
               END
               LINES(HLN) =  SPACE(INT((REPORT.LEN-LEN(TITLE))/2 + .5)) : TITLE
            END
         NEXT L
         HLN = HLN + 1
         LINES(HLN) = ""
         IF GLRP.HD.COL # "" THEN
            HLN = HLN + 1
            SUP.HD.CNT = COUNT(GLRP.HD.COL,VM) + 1
            FOR S = 1 TO SUP.HD.CNT
               LINES(HLN) = LINES(HLN) : SPACE(GLRP.HD.COL<1,S> - LEN(LINES(HLN))) : GLRP.HD.DESC<1,S>
            NEXT S
         END
         LINES(HLN+1) = SPACE(GLRP.GRP.LEN+1)
         LINES(HLN+2) = SPACE(GLRP.GRP.LEN+1)
         LINES(HLN+3) = SPACE(GLRP.GRP.LEN+1)
         FOR COL = 1 TO COL.CNT
            COL.HEAD1 = GLRP.COL.HEAD1<1,COL>
            COL.HEAD2 = GLRP.COL.HEAD2<1,COL>
            BEF.SPC = INT((COL.LEN(COL) - LEN(COL.HEAD1)) / 2 + .5)
            AFT.SPC = COL.LEN(COL) - LEN(COL.HEAD1) - BEF.SPC
            LINES(HLN+1) = LINES(HLN+1):SPACE(COL.SPC(COL)+BEF.SPC):COL.HEAD1:SPACE(AFT.SPC)
            BEF.SPC = INT((COL.LEN(COL) - LEN(COL.HEAD2)) / 2 + .5)
            AFT.SPC = COL.LEN(COL) - LEN(COL.HEAD2) - BEF.SPC
            LINES(HLN+2) = LINES(HLN+2):SPACE(COL.SPC(COL)+BEF.SPC):COL.HEAD2:SPACE(AFT.SPC)
            IF GLRP.COL.DASH<1,COL> = "" THEN
               LINES(HLN+3) = LINES(HLN+3) : SPACE(COL.SPC(COL)+COL.LEN(COL))
             END ELSE
               LINES(HLN+3) = LINES(HLN+3) : SPACE(COL.SPC(COL)) : STR(GLRP.COL.DASH<1,COL>,COL.LEN(COL))
            END
         NEXT COL
         FOR L = 1 TO 3
             LLL = HLN + 1
            IF TRIM(LINES(LLL)) = "" THEN
               FOR LL = LLL TO 19
                  LINES(LL) = LINES(LL+1)
               NEXT LL
               LINES(20) = ""
            END ELSE
               HLN = HLN + 1
            END
         NEXT L
        PRINTER ON
         GOSUB 10000
         IF TLN.CNT = 0 THEN
            TLN = 0
         END ELSE
            TLN = TLINES<1>
            TLN.CNT = TLN.CNT - 1
            TLINES = DELETE(TLINES,1,0,0)
         END
         FOR XLN = 1 TO LN.CNT
             LN = XLN + GLRP.BEG.LINE
             LN.TYPE = GLRP.REC(LN)<1,GLRP.LINE.TYPE>
             LN.DESC = GLRP.REC(LN)<1,GLRP.LINE.DESC>
             LN.DASH = GLRP.REC(LN)<1,GLRP.LINE.DASH>
             LN.SKIP = GLRP.REC(LN)<1,GLRP.LINE.SKIP>
            BEGIN CASE
            CASE LN.DASH # ""
               LOCATE LN.DASH IN DASHES,1 SETTING FND ELSE
                  DASHES<FND> = LN.DASH
                  LINE.DASH(FND) = SPACE(GLRP.GRP.LEN+1)
                  FOR COL = 1 TO COL.CNT
                     LINE.DASH(FND) = LINE.DASH(FND) : SPACE(COL.SPC(COL)) : STR(LN.DASH,COL.LEN(COL))
                  NEXT COL
               END
               PRINT LINE.DASH(FND)
               IF LN.TYPE = "C" THEN GOTO 999
               LN.PTR = LN.PTR + 1
            CASE LN.TYPE = "C"
               PLINE = LN.DESC LINE.DESC.PIC
               PRINT PLINE
               GOTO 999
            END CASE
            READV LINE FROM TEMP.REPORT, GLRP.ID , XLN ELSE LINE = ""
            PLINE = LN.DESC LINE.DESC.PIC
            FOR COL = 1 TO COL.CNT
               PLINE = PLINE : SPACE(COL.SPC(COL))
               PVALUE = LINE<1,COL>
               SPC.COL = 1
               IF COL.TYPE(COL) = "R" THEN
                  PVALUE = PVALUE / COL.PREC(COL)
               END ELSE
                  IF COL.CASE(COL) < 1 THEN
                     AVALUE = ""; BVALUE = ""
                  END ELSE
                     ON COL.CASE(COL) GOSUB 1100,1200,1300,1400,1500,1600,1700
                  END
                  BEGIN CASE
                  CASE AVALUE = "" OR BVALUE = ""
                     PVALUE = ""
                  CASE COL.TYPE(COL) = "P"
                     IF AVALUE = 0 OR BVALUE = 0 THEN
                        PVALUE = 0
                        LINE<1,COL> = 0
                     END ELSE
                        LINE<1,COL> = (AVALUE/BVALUE) * 10000
                        PVALUE = LINE<1,COL> / COL.PREC(COL)
                     END
                     SPC.COL = PVALUE
                  CASE COL.TYPE(COL) = "A"
                     PVALUE = (AVALUE + BVALUE) / COL.PREC(COL)
                  CASE COL.TYPE(COL) = "S"
                     PVALUE = (AVALUE - BVALUE) / COL.PREC(COL)
                  CASE 1
                     PVALUE = ""
                  END CASE
               END
               BEGIN CASE
               CASE COL.TYPE(COL) = "R" AND COL.PREC(COL) = 1
               CASE PVALUE > 0
                  PVALUE = INT(PVALUE + .5)
               CASE PVALUE < 0
                  PVALUE = INT(PVALUE - .5)
               END CASE
               BEGIN CASE
               CASE SPC.COL = 0
                  PLINE = PLINE : SPACE(COL.LEN(COL))
               CASE GLRP.REC(LN)<1,GLRP.LINE.REV> = "Y" AND COL.ATT(COL) # 7
                  PLINE = PLINE : OCONV((PVALUE * (-1)),COL.CONV(COL)) COL.PIC(COL)<1,1> : COL.PIC(COL)<1,2>
               CASE 1
                  PLINE = PLINE : OCONV(PVALUE,COL.CONV(COL)) COL.PIC(COL)<1,1> : COL.PIC(COL)<1,2>
               END CASE
            NEXT COL
            WRITEV LINE ON TEMP.REPORT, GLRP.ID , XLN
            IF LN.TYPE = "T" THEN
               IF TLN.CNT = 0 THEN
                  TLN = 0
               END ELSE
                  TLN = TLINES<1>
                  TLN.CNT = TLN.CNT - 1
                  TLINES = DELETE(TLINES,1,0,0)
               END
            END
            PRINT PLINE
999         FOR SKIP = 1 TO LN.SKIP
               PRINT
            NEXT SKIP
            LN.PTR = LN.PTR + LN.SKIP + 1
            IF LN.PTR > PAGE.SIZE THEN GOSUB 10000
         NEXT XLN
        PRINTER OFF
        PRINTER CLOSE
9999  REPEAT
      GOTO 99999
1100  AVALUE = LINE<1,COL.CC1(COL)>
      BVALUE = LINE<1,COL.CC2(COL)>
      RETURN
1200  AVALUE = LINE<1,COL.CC1(COL)>
      BVALUE = PVALUE
      RETURN
1300  AVALUE = LINE<1,COL.CC1(COL)>
      READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , COL.TLN(COL) ELSE TEMP.LINE = ""
      BVALUE = TEMP.LINE<1,COL.CC1(COL)>
      RETURN
1400  AVALUE = LINE<1,COL.CC1(COL)>
      READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , TLN ELSE TEMP.LINE = ""
      BVALUE = TEMP.LINE<1,COL.CC1(COL)>
      RETURN
1500  AVALUE = PVALUE
      BVALUE = LINE<1,COL.CC2(COL)>
      RETURN
1600  READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , COL.TLN(COL) ELSE TEMP.LINE = ""
     AVALUE = TEMP.LINE<1,COL>
      BVALUE = LINE<1,COL.CC2(COL)>
      RETURN
1700  IF TLN THEN
         READV TEMP.LINE FROM TEMP.REPORT, GLRP.ID , TLN ELSE TEMP.LINE = ""
         AVALUE = TEMP.LINE<1,COL>
         BVALUE = LINE<1,COL.CC2(COL)>
      END ELSE
         AVALUE = ""; BVALUE = ""
      END
      RETURN
10000 PRINT CHAR(12)
      PAGE.NO = PAGE.NO + 1
      IF LEN(PAGE.NO) < 2 THEN PAGE.NO = "0" : PAGE.NO
      PRINT COMPANY.HEADING
      PRINT " REPORT # : ": GLRP.ID[4,3] :
      PRINT SPACE(2) : "PAGE # : " : PAGE.NO "R#2" :
      PRINT SPACE(70) : "DATE : ":OCONV(DATE(),"D2/") :
      PRINT SPACE(2) : "TIME : ":OCONV(TIME(),"MTS")
      FOR PLN = 1 TO HLN
         PRINT LINES(PLN)
      NEXT PLN
      LN.PTR = HLN + 3
      RETURN
***************************
20000*
      MATREAD CB.REC FROM COA.BAL, CONO.KEY:ACCT.NO ELSE RETURN
      BEGIN CASE
        CASE ATYPE = ""
           ACCT.AMT(1) = ACCT.AMT(1) + (CB.REC(CB.OPN) * SIGN)
           ACCT.AMT(2) = ACCT.AMT(2) + ((CB.REC(CB.OPN) - CB.REC(BG.OPN)) * SIGN)
           ACCT.AMT(3) = ACCT.AMT(3) + (CB.REC(CB.LYR) * SIGN)
           ACCT.AMT(4) = ACCT.AMT(4) + ((CB.REC(CB.LYR) - CB.REC(BG.LYR)) * SIGN)
           ACCT.AMT(5) = ACCT.AMT(5) + (CB.REC(CB.BUD) * SIGN)
           ACCT.AMT(6) = ACCT.AMT(6) + ((CB.REC(CB.BUD) - CB.REC(BG.BUD)) * SIGN)
        CASE ATYPE = "B"
           ACCT.AMT(1) = ACCT.AMT(1) + (CB.OPN.01 * SIGN)
           ACCT.AMT(2) = ACCT.AMT(2) + (CB.REC(BG.OPN) * SIGN)
           ACCT.AMT(3) = ACCT.AMT(3) + (CB.LYR.01 * SIGN)
           ACCT.AMT(4) = ACCT.AMT(4) + (CB.REC(BG.LYR) * SIGN)
           ACCT.AMT(5) = ACCT.AMT(5) + (CB.BUD.01 * SIGN)
           ACCT.AMT(6) = ACCT.AMT(6) + (CB.REC(BG.BUD) * SIGN)
        CASE ATYPE = "E"
           ACCT.AMT(1) = ACCT.AMT(1) + (CB.REC(CB.OPN) * SIGN)
           ACCT.AMT(2) = ACCT.AMT(2) + (CB.REC(CB.OPN) * SIGN)
           ACCT.AMT(3) = ACCT.AMT(3) + (CB.REC(CB.LYR) * SIGN)
           ACCT.AMT(4) = ACCT.AMT(4) + (CB.REC(CB.LYR) * SIGN)
           ACCT.AMT(5) = ACCT.AMT(5) + (CB.REC(CB.BUD) * SIGN)
           ACCT.AMT(6) = ACCT.AMT(6) + (CB.REC(CB.BUD) * SIGN)
        CASE 1
           ACCT.AMT(1) = ACCT.AMT(1) + ((CB.REC(CB.OPN) - CB.OPN.01) * SIGN)
           ACCT.AMT(2) = ACCT.AMT(2) + ((CB.REC(CB.OPN) - CB.REC(BG.OPN)) * SIGN)
           ACCT.AMT(3) = ACCT.AMT(3) + ((CB.REC(CB.LYR) - CB.LYR.01) * SIGN)
           ACCT.AMT(4) = ACCT.AMT(4) + ((CB.REC(CB.LYR) - CB.REC(BG.LYR)) * SIGN)
           ACCT.AMT(5) = ACCT.AMT(5) + ((CB.REC(CB.BUD) - CB.BUD.01) * SIGN)
           ACCT.AMT(6) = ACCT.AMT(6) + ((CB.REC(CB.BUD) - CB.REC(BG.BUD)) * SIGN)
      END CASE
RETURN
***************************
91000 PRINT @(0,23) : CL : ERRMSG : ; INPUT XX :
      PRINT @(0,23) : CL :
      RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
      RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 PRINT @(-1)
      END
