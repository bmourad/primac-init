*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     - PRIMAC
* SOURCE     - GLSBP
* PROGRAM    - JE.REV.MAINT
* BY         - WALID YAMOUT , C.B.A
* DATE       - 09/09/85
* DESCRIPTION-
* LAST COMPILE  - 1128
*T21177 diane 11/06/1996 * REV11 UPG
*T21876 diane 05/06/1997 * Use Gen.xref
*T23278 markt 12/10/1998 * Add check for divisional security.
*T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T26685 adelgado 09/10/2002 * Revision of Divisional Security.
*T27624 lross 08/11/2003 * Fix dept lookup.
*T28098 cmykleb 05/05/2004 * Use GEN.XREF.SUB for Account # lookup.
*ENDDOC
**************************************************************************
*
*--- INSERT FILES EQUETES
*
*COPY>GLS.CPYLIB>JE
*COPY>GLS.CPYLIB>STATUS.JE
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
**COPY>CPYLIB>GEN.XREF ;*T27624
*COPY>CPYLIB>GEN.XREF.SUB ;*T27624
*COPY>CPYLIB>XREF.DATA ;*T27624
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*
*--- INITALIZE EDIT.SUB
*
* MAT EDIT.COM = ""
* TYP = 0; CALL EDIT.SUB
   FILL = "#"
   ERRMSG = ""
*
*--- GET COMPANY
*
   MAT FILE.VARS = ""
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
   CONO = ""
   MAT COMP.REC = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 999999
*
*--- OPEN FILES
*
   OPEN '','JE.REVERSE' TO JE.REVERSE ELSE ERRMSG = 'JE.REVERSE FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COA' TO COA ELSE ERRMSG = 'COA FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COA.XREF' TO COA.XREF ELSE ERRMSG = 'COA.XREF FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE ERRMSG = 'ACCT.TYPE FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.CATG' TO ACCT.CATG ELSE ERRMSG = 'ACCT.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE ERRMSG = 'ACCT.SUB.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE ERRMSG = 'CATG.AND.SUB FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOSUB 91000; GOTO 999999
   EQV.FLG = 1
   OPEN '','COA.EQUIV' TO COA.EQUIV ELSE EQV.FLG = 0
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG = 'XREF.DATA FILE IS MISSING'; GOSUB 91000; GOTO 999999 ;*T27624
*
*--- INITIALIZATION
*
   TODAY = DATE()
   LINE.SPACE = 2
   BEGIN.PAGE = 8
   PAGE.SIZE = 5
   LINE.SP = 1
   PAGE.S = 10
   GEN.DIV = "00"
   GEN.DEPT = "00"
   GEN.CCTR = "000"
   BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
   ACCT.LEN = LEN(CO.ACCT.PIC)
   SP16 = SPACE(16)
   PP.NO = 12
   DS.X = 52
   DV.X = 38
   DP.X = 43
   CC.X = 47
   MAT GEN.XREF.REC = ""; GXR.CO = CONO; GXR.LOC = 1
   UNKNOWN = "NOT ON FILE"
*
*--- GET FISCAL YEAR
*
   READ REC FROM CONTROL, CONO:"FISCAL" ELSE
      ERRMSG = "CONTROL FISCAL IS MISSING"; GOSUB 91000; GOTO 999999
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   YEAR = REC<1>[1,4]
   CURR = REC<1>[5,2]
   IF CURR < 1 OR CURR > NUM.PERIODS THEN
      ERRMSG = "INVALID CURRENT PERIOD IN CONTROL FISCAL"; GOSUB 91000; GOTO 999999
   END
   READ OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
      ERRMSG = 'NEED TO SETUP GLS OPEN DATES'
      GOSUB 91000; GOTO 999999
   END
***** T23278 v
   READ DIVISIONS.REC FROM  CONTROL, CONO:"DIVISIONS" ELSE
      ERRMSG = "CONTROL DIVISIONS RECORD IS MISSING"; GOSUB 91000; GOTO 999999
   END
   READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
      ERRMSG = "CONTROL DIV.SECURITY RECORD IS MISSING"; GOSUB 91000; GOTO 999999
   END
***** T23278 ^
*
*--- GET OPER.ID
*
*PORT.ACCT = OCONV(0,"U50BB")
*PORT.NO = FIELD(PORT.ACCT," ",1)
*PORT.NO = SYSTEM(18)
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
*PORT.NO = PORT.NO[INDEX(PORT.NO,"/",1)+4,99]
*IND.POS = INDEX(PORT.NO,'/',1)
*IF IND.POS = 0 THEN
*   PORT.NO = PORT.NO[4,(LEN(PORT.NO)-3)]
*END ELSE
*   PORT.NO = PORT.NO[4,IND.POS-4]
*END
   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = ""
   IF OPER.ID = "" THEN OPER.ID = PORT.NO :"-": DATE()
*
*--- SCREEN
*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'JE.REV.MAINT'
   ECD.ACTION=1;CALL SCRN.EDIT
*
*--- MAIN PROCESS
*
100*
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
*
*--- ENTER REFERENCE NUMBER
*
200*
   JE.NO = ""
   LN = 1
   LINES = 0
   OLD.START = 0
   LINE.DESC = ""
   LINE.TYPE = ""
   LINE.NORM = ""
   LINE.CAT = ""
   LINE.SUB = ""
   TOT.DEBIT = 0
   TOT.CREDIT = 0
   NEW = 0
   OLD.PERIOD = ""
   ECD.NUM = 1
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 999999
      CASE ECD.RET.VALUE = "N"
         JE.NO = ECD.RET.VALUE
         NEW = 1
      CASE NUM(ECD.RET.VALUE) AND ECD.RET.VALUE > 0
         JE.NO = STR("0",8-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
         ECD.NUM = 1; SCV.REC(1)<1> = JE.NO; ECD.ACTION = 5; CALL SCRN.EDIT
      * T26126 v
         MATREADU JE.REC FROM JE.REVERSE, CONO:JE.NO LOCKED
            ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;GOTO 100 
         END ELSE
            NEW = 1
         END
      * T26126 ^
*T23278 v
         IF NOT(NEW) THEN
            DIV.CODE = JE.HEAD.DIV; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
            CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
            IF ERRMSG # '' THEN
               GOSUB 91000; GOTO 100
            END
         END
*T23278 ^
      CASE 1
         ERRMSG = "INVALID INPUT"; GOSUB 91000; GOTO 100
   END CASE
   IF NEW THEN
      MAT JE.REC = ""
      GOSUB 1000
      IF ECD.RET.VALUE = "END" THEN
         IF JE.NO # "N" THEN
            RELEASE JE.REVERSE, CONO : JE.NO
         END
         GOTO 100
      END
   END ELSE
      OLD.PERIOD = JE.PERIOD
      GOSUB 87000
   END
*
*--- ENTER OPTIONS
*
500*
   ECD.NUM = 10
   SCV.REC(ECD.NUM)<1> = ''
   ECD.ACTION=4;CALL SCRN.EDIT
   OPTION = ECD.RET.VALUE
   BEGIN CASE
      CASE OPTION = "END" OR OPTION = "E"
*       X = 0; Y = 23; TYP = 18; MAXL = 1
*       PMSG = "Do you wish to exit without filing this entry (Y/N) : "
*       CALL EDIT.SUB
*       PRINT @(0,23) : CL :
*       IF VALUE = "Y" THEN
         IF JE.NO # "N" THEN
            RELEASE JE.REVERSE, CONO:JE.NO
         END
         GOTO 100
*       END
      CASE NUM(OPTION) AND OPTION > 0 AND JE.UDATE = ""
         ON OPTION GOSUB 1500,2000,3000,4000
      CASE OPTION = "A" AND JE.UDATE = ""
         LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 10000
         WHILE LINES > OLD.LINES DO REPEAT
         LN = LINES
         GOSUB 80000
      CASE OPTION = "C" AND JE.UDATE = ""
         IF LINES = 1 THEN LNO = 1 ELSE GOSUB 30000
         IF LNO THEN
            LN = LNO
            SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
            GOSUB 10100
         END
         GOSUB 80000
      CASE OPTION = "D" AND JE.UDATE = ""
         GOSUB 30000
         IF LNO THEN
            LN = LNO
            TOT.DEBIT = TOT.DEBIT - JE.DB.AMT<1,LN>
            TOT.CREDIT = TOT.CREDIT - JE.CR.AMT<1,LN>
            JE.ACCT = DELETE(JE.ACCT,1,LN,0)
            LINE.DESC = DELETE(LINE.DESC,LN,0,0)
            LINE.TYPE = DELETE(LINE.TYPE,LN,0,0)
            LINE.NORM = DELETE(LINE.NORM,LN,0,0)
            LINE.CAT = DELETE(LINE.CAT,LN,0,0)
            LINE.SUB = DELETE(LINE.SUB,LN,0,0)
            JE.DIV = DELETE(JE.DIV,1,LN,0)
            JE.DEPT = DELETE(JE.DEPT,1,LN,0)
            JE.CCTR = DELETE(JE.CCTR,1,LN,0)
            JE.DB.AMT = DELETE(JE.DB.AMT,1,LN,0)
            JE.CR.AMT = DELETE(JE.CR.AMT,1,LN,0)
            LINES = COUNT(JE.ACCT,VM) + (JE.ACCT # "")
            IF LN > LINES THEN LN = LINES
            IF LN < 1 THEN LN = 1
            OLD.START = 0
            GOSUB 80000
            GOSUB 20000
         END
    * T25978 v
      CASE OPTION[1,1] = "S"
         BEGIN CASE
            CASE OPTION = 'S'
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
               IF LN > LINES THEN LN = 1
               GOSUB 80000
            CASE OPTION[2,1] = "R"
               LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
               IF LN < 1 THEN LN = 1
               GOSUB 80000
            CASE OPTION[2,1] = "T"
               LN = 1
               GOSUB 80000
            CASE OPTION[2,1] = "B"
               LN = LINES
               GOSUB 80000
            CASE NUM(OPTION[2,10]) AND (OPTION[2,10] GT 0 AND OPTION[2,10] LE LINES)
               LN = OPTION[2,10]
               GOSUB 80000
         END CASE
      * T25978 ^
      CASE OPTION = "F" AND JE.UDATE = ""
***** T23278 v
* T26685 v
*     IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
         IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" AND JE.HEAD.DIV # "00" THEN
            LOCATE JE.HEAD.DIV IN DIVISIONS.REC<1>,1 SETTING POS ELSE
               ERRMSG = "DIVISION ":JE.HEAD.DIV:" NOT FOUND ON CONTROL RECORD"
               GOSUB 91000; GOTO 999999
            END
         END ELSE
            POS = 1
         END
***** T23278 ^
         IF JE.ACCT = "" THEN
            IF JE.NO = "N" THEN GOTO 100
            IF NOT(NEW) THEN
               DELETE JE.REVERSE, CONO:JE.NO
               CTL.KEY = CONO : "JE.REVERSE" : OLD.PERIOD
               MATREADU SJE.REC FROM CONTROL, CTL.KEY ELSE MAT SJE.REC = ""
***** T23278 v
*                  IF JE.PDATE = '' THEN SJE.PRT.NO = SJE.PRT.NO - 1
*                  SJE.POST.NO = SJE.POST.NO - 1
               IF JE.PDATE = '' THEN SJE.PRT.NO<1,POS> = SJE.PRT.NO<1,POS> - 1
               SJE.POST.NO<1,POS> = SJE.POST.NO<1,POS> - 1
***** T23278 ^
               GOSUB 89000
            END
            RELEASE JE.REVERSE, CONO:JE.NO
            GOTO 100
         END
         IF TOT.DEBIT = TOT.CREDIT THEN
            IF JE.NO = "N" THEN
               READU NEXT.NO FROM CONTROL, CONO:"JE.REVERSE" ELSE NEXT.NO = 1
               FND = 1
               LOOP
               WHILE FND DO
                  JE.NO = NEXT.NO
                  NEXT.NO = JE.NO + 1
                  IF NEXT.NO > 99999999 THEN NEXT.NO = 1
                  JE.NO = STR("0",8-LEN(JE.NO)):JE.NO
                  READU REC FROM JE.REVERSE, CONO:JE.NO ELSE
                     REC = ""; FND = 0
                  END
                  IF FND THEN RELEASE JE.REVERSE, CONO:JE.NO
               REPEAT
               WRITE NEXT.NO ON CONTROL, CONO:"JE.REVERSE"
               ECD.NUM = 1; SCV.REC(1)<1> = JE.NO; ECD.ACTION = 5; CALL SCRN.EDIT
               ERRMSG = "Note the Reference Number"; GOSUB 91000
            END
            JE.OPER = OPER.ID
            JE.CUR.PER = JE.PERIOD
            IF NEW THEN
               CTL.KEY = CONO : "JE.REVERSE" : JE.PERIOD
               MATREADU SJE.REC FROM CONTROL, CTL.KEY ELSE MAT SJE.REC = ""
***** T23278 v
*                  SJE.PRT.NO = SJE.PRT.NO + 1
*                  SJE.POST.NO = SJE.POST.NO + 1
               SJE.PRT.NO<1,POS> = SJE.PRT.NO<1,POS> + 1
               SJE.POST.NO<1,POS> = SJE.POST.NO<1,POS> + 1
***** T23278 ^
               GOSUB 89000
            END ELSE
               IF OLD.PERIOD # JE.PERIOD THEN
                  CTL.KEY = CONO : "JE.REVERSE" : OLD.PERIOD
                  MATREADU SJE.REC FROM CONTROL, CTL.KEY ELSE MAT SJE.REC = ""
***** T23278 v
*                      IF JE.PDATE = "" THEN SJE.PRT.NO = SJE.PRT.NO - 1
*                      SJE.POST.NO = SJE.POST.NO - 1
                  IF JE.PDATE = "" THEN SJE.PRT.NO<1,POS> = SJE.PRT.NO<1,POS> - 1
                  SJE.POST.NO<1,POS> = SJE.POST.NO<1,POS> - 1
***** T23278 ^
                  GOSUB 89000
                  CTL.KEY = CONO : "JE.REVERSE" : JE.PERIOD
                  MATREADU SJE.REC FROM CONTROL, CTL.KEY ELSE MAT SJE.REC = ""
***** T23278 v
*                      IF JE.PDATE = "" THEN SJE.PRT.NO = SJE.PRT.NO + 1
*                      SJE.POST.NO = SJE.POST.NO + 1
                  IF JE.PDATE = "" THEN SJE.PRT.NO<1,POS> = SJE.PRT.NO<1,POS> + 1
                  SJE.POST.NO<1,POS> = SJE.POST.NO<1,POS> + 1
***** T23278 ^
                  GOSUB 89000
               END
            END
            MATWRITE JE.REC ON JE.REVERSE, CONO:JE.NO
            GOTO 100
         END ELSE
            ERRMSG = "Cannot File When Record is OUT OF BALANCE";GOSUB 91000
         END
   END CASE
   GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- INPUT ALL VALUES
*
1000*
   FOR OPTION = 1 TO 4 UNTIL ECD.RET.VALUE = "END"
      ON OPTION GOSUB 1500,2000,3000,4000
   NEXT OPTION
   IF ECD.RET.VALUE = "END" THEN GOTO 1999
   OPTION = "A"
   LOOP
      LN = LINES + 1 
      OLD.LINES = LINES
      GOSUB 10000
   WHILE LINES > OLD.LINES DO REPEAT
   LN = LINES
   GOSUB 80000
1999*
   RETURN
*
*--- PERIOD
*
1500 *
*   IF SCV.REC(14)<1> # "" THEN ECD.DEFAULT = JE.HEAD.DIV;* T23278
   SCV.REC(14)<1> = JE.HEAD.DIV; ECD.DEFAULT = JE.HEAD.DIV;* T23278
   ECD.NUM = 14; ECD.ACTION = 4; CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE = "END" 
         GOTO 1999
      CASE ECD.RET.VALUE = "00"
      CASE ECD.RET.VALUE # ""
         MATREAD DIV.REC FROM DIVISION,CONO:ECD.RET.VALUE ELSE
            ERRMSG = "NOT A VALID DIVISION"
            GOSUB 91000
            GOTO 1500
         END
         IF JE.DIV # "" THEN
            FOR X = 1 TO DCOUNT(JE.DIV<1>,VM)
               IF JE.DIV<1,X> # ECD.RET.VALUE THEN
                  ERRMSG = ECD.RET.VALUE:" DOES NOT MATCH JE DIVISION(S) "
                  GOSUB 91000
                  GOTO 1500
               END
            NEXT X
         END
   END CASE
*T23278 v
   DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
   CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
   IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 1500
   END
*T23278 ^
   JE.HEAD.DIV = ECD.RET.VALUE
   RETURN
2000*
   IF SCV.REC(2)<1> = "" THEN ECD.DEFAULT = CURR
   IF CURR < (NUM.PERIODS - 1) THEN
      ECD.VALDAT = STR("0",(2-LEN(CURR))):CURR:","
      ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+1))):(CURR+1):","
      ECD.VALDAT = ECD.VALDAT:STR("0",(2-LEN(CURR+2))):(CURR+2)
   END ELSE
      IF CURR = (NUM.PERIODS - 1) THEN ECD.VALDAT = (NUM.PERIODS-1):",":NUM.PERIODS:",01"
      IF CURR = NUM.PERIODS THEN ECD.VALDAT = NUM.PERIODS:",01,02"
   END
   ECD.HMSG = "ENTER PERIOD ":ECD.VALDAT
   ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 2999
   IF ECD.RET.VALUE < 1 OR ECD.RET.VALUE > NUM.PERIODS OR NOT(NUM(ECD.RET.VALUE)) THEN GOTO 2000
   IF CURR > (NUM.PERIODS - 2) AND ECD.RET.VALUE < 3 THEN JE.PERIOD = YEAR + 1 ELSE JE.PERIOD = YEAR
   JE.PERIOD = JE.PERIOD:ECD.RET.VALUE
2999*
   RETURN
*
*--- DATE
*
3000 ECD.NUM = 3
   IF SCV.REC(ECD.NUM)<1> = "" THEN
      XYR = JE.PERIOD[1,4]; XPR = JE.PERIOD[5,2]
      BEGIN CASE
         CASE XYR = YEAR AND XPR < NUM.PERIODS
            ECD.DEFAULT = OPENDATES<XPR+1> - 1
         CASE XYR = YEAR
            ECD.DEFAULT = OCONV(OPENDATES<1>,"D/")
            ECD.DEFAULT = ECD.DEFAULT[1,6] : ECD.DEFAULT[7,4] + 1
            ECD.DEFAULT = ICONV(ECD.DEFAULT,"D/") - 1
         CASE XPR < NUM.PERIODS
            ECD.DEFAULT = OCONV(OPENDATES<XPR+1>,"D/")
            ECD.DEFAULT = ECD.DEFAULT[1,6] : ECD.DEFAULT[7,4] + 1
            ECD.DEFAULT = ICONV(ECD.DEFAULT,"D/") - 1
      END CASE
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 3999
   JE.DATE = ECD.RET.VALUE
3999*
   RETURN
*
*--- DESC
*
4000*
   ECD.NUM = 4; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 4999
   JE.DESC = ECD.RET.VALUE
4999*
   RETURN
*
*--- LINE ENTRY
*
10000*
   GOSUB 80000
   SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
   P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   LINES = LINES + 1
10100*
   P_X  = 4 ; P_Y = SLN ; P_VALUE = SP16 ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF JE.CR.AMT<1,LN> > 0 THEN AC.X = 6 ELSE AC.X = 4
*     X = AC.X; Y = SLN; TYP = 1; O.R = 'R'
   X = 4; Y = SLN; TYP = 1; O.R = 'R'
   MAXL = ACCT.LEN; JUSTIFY = 'L'
   IF JE.ACCT<1,LN> # '' THEN
      O.R = 'O'; DEFAULT = JE.ACCT<1,LN>
   END
   CALL EDIT.SUB
   IF VALUE = 'END' THEN
      IF OPTION = 'A' THEN
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         JE.ACCT = DELETE(JE.ACCT,1,LN,0)
         JE.DIV = DELETE(JE.DIV,1,LN,0)
         JE.DEPT = DELETE(JE.DEPT,1,LN,0)
         JE.CCTR = DELETE(JE.CCTR,1,LN,0)
         JE.DB.AMT = DELETE(JE.DB.AMT,1,LN,0)
         JE.CR.AMT = DELETE(JE.CR.AMT,1,LN,0)
         LINE.TYPE = DELETE(LINE.TYPE,LN,0,0)
         LINE.NORM = DELETE(LINE.NORM,LN,0,0)
         LINE.CAT = DELETE(LINE.CAT,LN,0,0)
         LINE.SUB = DELETE(LINE.SUB,LN,0,0)
         LINE.DESC = DELETE(LINE.DESC,LN,0,0)
      END ELSE
         P_X  = 4 ; P_Y = SLN ; P_VALUE = JE.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = "CL"
         P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.TYPE<LN> "L#1"
         P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.NORM<LN> "L#2"
         P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.CAT<LN> "L#3"
         P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:LINE.SUB<LN> "L#3"
         P_X  := AM:DV.X ; P_Y := AM:SLN ; P_VALUE := AM:JE.DIV<1,LN> "L#2"
         P_X  := AM:DP.X ; P_Y := AM:SLN ; P_VALUE := AM:JE.DEPT<1,LN> "L#2"
         P_X  := AM:CC.X ; P_Y := AM:SLN ; P_VALUE := AM:JE.CCTR<1,LN> "L#3"
         P_X  := AM:52 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(JE.DB.AMT<1,LN>,"MD2Z") "R#13"
         P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:OCONV(JE.CR.AMT<1,LN>,"MD2Z") "R#13"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = "CL"
         P_X  := AM:4 ; P_Y := AM:SLN+1 ; P_VALUE := AM:LINE.DESC<LN> "L#45"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      END
      GOTO 19999
   END
   GXR.ACTION = ""
   BEGIN CASE
      CASE VALUE = "D"
*        X = AC.X; Y = SLN + 1; TYP = 1; MAXL = 30; O.R = 'O'; DEFAULT = LINE.DESC<LN>
         X = 4; Y = SLN + 1; TYP = 1; MAXL = 30; O.R = 'O'; DEFAULT = LINE.DESC<LN>
         P_X  = 0 ; P_Y = Y ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CALL EDIT.SUB
         IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
         GXR.ACTION = "D"
      CASE VALUE = "T"
*        X = AC.X; Y = SLN + 1; TYP = 1; MAXL = 1; O.R = 'O'; DEFAULT = LINE.TYPE<LN>
         X = 4; Y = SLN + 1; TYP = 1; MAXL = 1; O.R = 'O'; DEFAULT = LINE.TYPE<LN>
         P_X  = 0 ; P_Y = Y ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CALL EDIT.SUB
         IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
         MATREAD AT.REC FROM ACCT.TYPE, VALUE ELSE
            ERRMSG = 'INVALID ACCOUNT TYPE'
            GOSUB 91000; GOTO 10100
         END
         GXR.ACTION = "C"
      CASE LEN(VALUE) < BASE.LEN
         ERRMSG = "** MINIMUM LENGTH  = " : BASE.LEN : " **"
         GOSUB 91000; GOTO 10100
      CASE NOT(NUM(VALUE))
         ERRMSG = "** NUMERIC INPUT REQUIRED **"
         GOSUB 91000; GOTO 10100
   END CASE
   IF GXR.ACTION # "" THEN
      GXR.SRCH.ID = VALUE; GXR.ID = ''; GXR.FILE = COA
*T28098 v
*     CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      CALL COA.GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX)
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      OLD.START = 0; GOSUB 80000
      IF GXR.ID = '' THEN
         GOTO 10100
      END
      VALUE = GXR.ID
   END ELSE
      VALUE = VALUE : STR("0",ACCT.LEN-LEN(VALUE))
   END
   MATREAD COA.REC FROM COA, CONO:VALUE ELSE
      ERRMSG = 'CANNOT LOCATE ACCOUNT : ' : VALUE CO.ACCT.MASK
      GOSUB 91000; GOTO 10100
   END
   JE.ACCT<1,LN> = VALUE
   GOSUB 40000
   DV.NO = JE.DIV<1,LN>
   DP.NO = JE.DEPT<1,LN>
   CC.NO = JE.CCTR<1,LN>
*COPY>PMCBP>DV.DP.CC.MAINT
*
10500*
   IF EQV.FLG = 1 THEN
      READ N.KEY FROM COA.EQUIV , CONO:DV.NO:DP.NO:CC.NO:JE.ACCT<1,LN> ELSE N.KEY = ""
      IF N.KEY # "" THEN
         UPD.FLG = 1
         MATREAD COA.REC FROM COA, CONO:N.KEY[11,ACCT.LEN] ELSE
            ERRMSG = "CANNOT LOCATE EQUIVALENT ACCOUNT : ": N.KEY[11,ACCT.LEN] CO.ACCT.MASK
            GOSUB 91000
            UPD.FLG = 0
         END
         IF UPD.FLG = 1 THEN
            JE.ACCT<1,LN> = N.KEY[11,ACCT.LEN]
            GOSUB 40000
            DV.NO = N.KEY[4,2]
            DP.NO = N.KEY[6,2]
            CC.NO = N.KEY[8,3]
            P_X  = DV.X ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
            P_X  := AM:DP.X ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
            P_X  := AM:CC.X ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         END
      END
   END
   JE.DIV<1,LN> = DV.NO
   JE.DEPT<1,LN> = DP.NO
   JE.CCTR<1,LN> = CC.NO
*
* TASK 20731 v
   IF JE.HEAD.DIV # "00" THEN
      IF DV.NO # JE.HEAD.DIV THEN
         ERRMSG = "DIVISION MUST MATCH THE DIVISION IN THE HEADER"
         GOSUB 91000
         JE.DIV<1,LN> = ""
         JE.DEPT<1,LN> = ""
         JE.CCTR<1,LN> = ""
         GOTO 10000
      END
   END
* TASK 20731 ^
*
   IF JE.CR.AMT<1,LN> > 0 THEN GOTO 10550
   IF JE.DB.AMT<1,LN> < 1 AND LINE.NORM<LN> = 'CR' THEN GOTO 10550
10510*
   IF AC.X = 6 THEN
      AC.X = 4
      P_X  = 4 ; P_Y = SLN ; P_VALUE = JE.ACCT<1,LN> CO.ACCT.MASK:SPACE(2) ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = LINE.DESC<LN> "L#47" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   X = 52; Y = SLN; TYP = 4; SCALER = 2
   MAXL = 11; MINV = 0; MAXV = 9999999999
   DEFAULT = OCONV(JE.DB.AMT<1,LN>,'MD2')
   O.R = "O"
   CALL EDIT.SUB
   IF VALUE = "END" THEN
      IF OPTION = "A" THEN GOTO 10100 ELSE VALUE = ""
   END
   TOT.DEBIT = TOT.DEBIT - JE.DB.AMT<1,LN> + VALUE
   JE.DB.AMT<1,LN> = VALUE
   P_X  = 52 ; P_Y = SLN ; P_VALUE = OCONV(VALUE,"MD2Z") "R#13" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF VALUE > 0 THEN
      TOT.CREDIT = TOT.CREDIT - JE.CR.AMT<1,LN>
      JE.CR.AMT<1,LN> = ""
      P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(JE.CR.AMT<1,LN>,"MD2Z") "R#13" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 19999
   END
10550*
   IF AC.X = 4 THEN
      AC.X = 6
      P_X  = 4 ; P_Y = SLN ; P_VALUE = SPACE(2):JE.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 4 ; P_Y = SLN+1 ; P_VALUE = SPACE(2):LINE.DESC<LN> "L#45" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END
   X = 66; Y = SLN; TYP = 4; SCALER = 2
   MAXL = 11; MINV = 0; MAXV = 9999999999
   DEFAULT = OCONV(JE.CR.AMT<1,LN>,'MD2')
   O.R = "O"
   CALL EDIT.SUB
   IF VALUE = "END" THEN
      IF OPTION = "A" THEN GOTO 10100 ELSE VALUE = ""
   END
   TOT.CREDIT = TOT.CREDIT - JE.CR.AMT<1,LN> + VALUE
   JE.CR.AMT<1,LN> = VALUE
   P_X  = 66 ; P_Y = SLN ; P_VALUE = OCONV(VALUE,"MD2Z") "R#13" ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   IF VALUE > 0 THEN
      TOT.DEBIT = TOT.DEBIT - JE.DB.AMT<1,LN>
      JE.DB.AMT<1,LN> = ""
      P_X  = 52 ; P_Y = SLN ; P_VALUE = OCONV(JE.DB.AMT<1,LN>,"MD2Z") "R#13" ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   END ELSE
      GOTO 10510
   END
19999*
   GOSUB 20000
   LINES = COUNT(JE.ACCT,VM) + (JE.ACCT # "")
   RETURN
*
*--- FIND BALANCE
*
20000*
   BEGIN CASE
      CASE TOT.DEBIT > TOT.CREDIT
         SCV.REC(5)<1> = "OUT OF"
         SCV.REC(6)<1> = TOT.DEBIT - TOT.CREDIT
         SCV.REC(7)<1> = "DB"
      CASE TOT.CREDIT > TOT.DEBIT
         SCV.REC(5)<1> = "OUT OF"
         SCV.REC(6)<1> = TOT.CREDIT - TOT.DEBIT
         SCV.REC(7)<1> = "CR"
      CASE 1
         SCV.REC(5)<1> = "IN"
         SCV.REC(6)<1> = ''
         SCV.REC(7)<1> = ""
   END CASE
   ECD.NUM = 5
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 6
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 7
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 8; SCV.REC(ECD.NUM)<1> = TOT.DEBIT
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 9; SCV.REC(ECD.NUM)<1> = TOT.CREDIT
   ECD.ACTION = 5; CALL SCRN.EDIT
   RETURN
*
*--- GET LINE NUMBER
*
30000*
   GOSUB 80000
   ECD.MINV = ST.LINE
   ECD.MAXV = LST.LINE
   ECD.NUM = 11
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
   RETURN
*
*---- MOVE AND PRINT ACCOUNT VALUES
*
40000*
   LINE.DESC<LN> = COA.L.DESC
   LINE.TYPE<LN> = COA.TYPE
   LINE.NORM<LN> = COA.NORM
   LINE.CAT<LN> = COA.CATG
   LINE.SUB<LN> = COA.SUB.CATG
   BEGIN CASE
      CASE JE.DB.AMT<1,LN> > 0
         AC.X = 4
      CASE JE.CR.AMT<1,LN> > 0
         AC.X = 6
      CASE LINE.NORM<LN> = 'CR'
         AC.X = 6
      CASE 1
         AC.X = 4
   END CASE
   P_X  = 4 ; P_Y = SLN ; P_VALUE = JE.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
   P_X  := AM:22 ; P_Y := AM:SLN ; P_VALUE := AM:COA.TYPE "L#1"
   P_X  := AM:26 ; P_Y := AM:SLN ; P_VALUE := AM:COA.NORM "L#2"
   P_X  := AM:30 ; P_Y := AM:SLN ; P_VALUE := AM:COA.CATG "L#3"
   P_X  := AM:34 ; P_Y := AM:SLN ; P_VALUE := AM:COA.SUB.CATG "L#3"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   P_X  = 0 ; P_Y = SLN+1 ; P_VALUE = "" ; P_OPT = ""
   P_X  := AM:4 ; P_Y := AM:SLN+1 ; P_VALUE := AM:COA.L.DESC "L#45"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   RETURN
*
*--- SCROLL
*
80000*
   ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   IF LST.LINE > LINES THEN LST.LINE = LINES
   IF ST.LINE = OLD.START THEN RETURN
   OLD.START = ST.LINE
   CNT = 1
   FOR N = ST.LINE TO LST.LINE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      BEGIN CASE
         CASE JE.DB.AMT<1,N> > 0
            X = 4
         CASE JE.CR.AMT<1,N> > 0
            X = 6
         CASE LINE.NORM<N> = 'CR'
            X = 6
         CASE 1
            X = 4
      END CASE
      P_X  = 4 ; P_Y = SSLN ; P_VALUE = JE.ACCT<1,N> CO.ACCT.MASK ; P_OPT = ""
      P_X  := AM:22 ; P_Y := AM:SSLN ; P_VALUE := AM:LINE.TYPE<N> "L#1"
      P_X  := AM:26 ; P_Y := AM:SSLN ; P_VALUE := AM:LINE.NORM<N> "L#2"
      P_X  := AM:30 ; P_Y := AM:SSLN ; P_VALUE := AM:LINE.CAT<N> "L#3"
      P_X  := AM:34 ; P_Y := AM:SSLN ; P_VALUE := AM:LINE.SUB<N> "L#3"
      P_X  := AM:38 ; P_Y := AM:SSLN ; P_VALUE := AM:JE.DIV<1,N> "L#3"
      P_X  := AM:43 ; P_Y := AM:SSLN ; P_VALUE := AM:JE.DEPT<1,N> "L#2"
      P_X  := AM:47 ; P_Y := AM:SSLN ; P_VALUE := AM:JE.CCTR<1,N> "L#3"
      P_X  := AM:52 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(JE.DB.AMT<1,N>, "MD2Z") "R#13"
      P_X  := AM:66 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(JE.CR.AMT<1,N>, "MD2Z") "R#13"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SSLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      P_X  := AM:4 ; P_Y := AM:SSLN+1 ; P_VALUE := AM:LINE.DESC<N> "L#40"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      P_X  = 0 ; P_Y = SSLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*--- SCROLL XREF
*
* *COPY>PMCBP>DV.DP.CC.SCROLL    ;* T21876
*
*--- MAT SCV.REC   
*   
87000*   
   SCV.REC(2)<1> = JE.PERIOD[5,2]
   SCV.REC(3)<1> = JE.DATE
   SCV.REC(4)<1> = JE.DESC
   SCV.REC(14)<1> = JE.HEAD.DIV
   LINES = COUNT(JE.ACCT,VM) + (JE.ACCT # "")
   FOR I = 1 TO LINES
      MATREAD COA.REC FROM COA, CONO : JE.ACCT<1,I> ELSE
         MAT COA.REC = ""; COA.L.DESC = UNKNOWN
      END
      LINE.DESC<I> = COA.L.DESC
      LINE.TYPE<I> = COA.TYPE
      LINE.NORM<I> = COA.NORM
      LINE.CAT<I> = COA.CATG
      LINE.SUB<I> = COA.SUB.CATG
      TOT.DEBIT = TOT.DEBIT + JE.DB.AMT<1,I>
      TOT.CREDIT = TOT.CREDIT + JE.CR.AMT<1,I>
   NEXT N
   SCV.REC(5)<1> = "IN"
   SCV.REC(6)<1> = 0
   SCV.REC(8)<1> = TOT.DEBIT
   SCV.REC(9)<1> = TOT.CREDIT
   ECD.ACTION = 3; CALL SCRN.EDIT
   GOSUB 80000
   RETURN
*
*--- UPDATE CONTROL FILE
*
89000*
*  SJE.DATE = TODAY ;* T23278
   SJE.DATE<1,POS> = TODAY ;* T23278
   BEGIN CASE
***** T23278 v
*      CASE SJE.POST.NO < 1
*          SJE.PRT.NO = 0
*          SJE.POST.NO = 0
*          SJE.STATUS = 'CLOSED'
*      CASE SJE.PRT.NO < 1
*          SJE.PRT.NO = 0
*          SJE.STATUS = 'PRINTED'
*      CASE 1
*          SJE.STATUS = 'ENTERED'
      CASE SJE.POST.NO<1,POS> < 1
         SJE.PRT.NO<1,POS> = 0
         SJE.POST.NO<1,POS> = 0
         SJE.STATUS<1,POS> = 'CLOSED'
      CASE SJE.PRT.NO<1,POS> < 1
         SJE.PRT.NO<1,POS> = 0
         SJE.STATUS<1,POS> = 'PRINTED'
      CASE 1
         SJE.STATUS<1,POS> = 'ENTERED'
***** T23278 ^
   END CASE
   MATWRITE SJE.REC ON CONTROL, CTL.KEY
   RETURN
*   
*--- ERROR ROUTINE
*   
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*    PRINT @(0,23):ERRMSG:CL:
*    INPUT REPLY,1 :
*    PRINT @(0,23):CL:
*    RETURN   
999999 * PRINT @(-1)   
END   
