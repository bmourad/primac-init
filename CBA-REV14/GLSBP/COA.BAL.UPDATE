*COPY>CPYLIB>COM1
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
*
* TASK 18573 LLH 4/95 - ACCOUNTING PERIODS 1-52
* CSF 25874
* T26556 adelgado 05/20/2002 * Add validation rules.
**************************************************************************
*COPY>PMC.CPYLIB>COMPANY
*COPY>GLS.CPYLIB>COA.BAL.SUM
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
*---- SETUP FOR SYSTEM ERROR MESSAGES
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
   PROMPT ""
   TODAY = DATE()
   PROCREAD BUFFER ELSE
      ERRMSG = 'MUST RUN FROM A PROC'
      GOSUB 91000; GOTO 99999
   END
   READNEXT GLM.ID ELSE GOTO 99999
   CONO = BUFFER<1>
   IF CONO <> GLM.ID[1,3] THEN GOTO 99999
   PERIOD = BUFFER<3>
   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL FILE'
      GOTO 91000; GOTO 88888
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = "" ; PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   FLG="N"
   WRITE FLG ON CONTROL,CONO:"EOM.FLG"
   TOT.DEBIT = 0 ; TOT.CREDIT = 0        ;* T26556
   TOT.BALANCE = 0                       ;* T26556
*
   MATREAD CBS.REC FROM CONTROL, 'COA.BAL.SUM' ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL, COA.BAL.SUM'
      GOSUB 91000; GOTO 88888
   END
   OPEN '','COMPANY' TO COMPANY ELSE
      ERRMSG = 'CANNOT LOCATE COMPANY FILE'
      GOTO 91000; GOTO 88888
   END
   MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = 'CANNOT LOCATE COMPANY, ':CONO
      GOSUB 91000; GOTO 88888
   END
   OPEN '','COA' TO COA ELSE
      ERRMSG = 'CANNOT LOCATE COA FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','GLR' TO GLR ELSE
      ERRMSG = 'CANNOT LOCATE GLR FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','GLM' TO GLM ELSE
      ERRMSG = 'CANNOT LOCATE GLM FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','GLA' TO GLA ELSE
      ERRMSG = 'CANNOT LOCATE GLA FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','GLX' TO GLX ELSE
      ERRMSG = 'CANNOT LOCATE GLX FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE CO.COA.BAL FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE DV.COA.BAL FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE DP.COA.BAL FILE'
      GOTO 91000; GOTO 88888
   END
   OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE CC.COA.BAL FILE'
      GOTO 91000; GOTO 88888
   END
   ACCT.DB = 0; ACCT.CR = 0
   ACCT.D.DB = 0; ACCT.D.CR = 0
   ACCT.SDB = ''; ACCT.SCR = ''
   DIV.DB = 0; DIV.CR = 0
   DIV.D.DB = 0; DIV.D.CR = 0
   DIV.SDB = ''; DIV.SCR = ''
   DEPT.DB = 0; DEPT.CR = 0
   DEPT.D.DB = 0; DEPT.D.CR = 0
   DEPT.SDB = ''; DEPT.SCR = ''
   CCTR.DB = 0; CCTR.CR = 0
   CCTR.D.DB = 0; CCTR.D.CR = 0
   CCTR.SDB = ''; CCTR.SCR = ''
   STRUC = CO.ACCT.MASK : STR('#',15-LEN(CO.ACCT.MASK))
   ACCT.LEN = LEN(CO.ACCT.PIC)
   PRINT @(0,0)  : CS : 'C.B.A' :
   PRINT @(28,0) : 'G/L BALANCE UPDATE' :
   PRINT @(73,0) : 'PRIMAC' :
   PRINT @(0,1)  : STR('-',79) :
   PRINT @(20,10): 'PERIOD ACCOUNT NUMBER  DIVISION DEPARTMENT COST CENTER' :
   PRINT @(20,11): '------ --------------- -------- ---------- -----------' :
   PRINT @(5,12) : 'NOW UPDATING :' :
   PRINT @(20,12) : PERIOD "L#6" :
   PRINT @(0,20) : STR('-',79) :
   PRINT @(0,22) : STR('-',79) :
   PERIOD = PERIOD[5,2]
   CB.OPN = CB.OPN + PERIOD
   CB.SDB = CB.SDB + (PERIOD * 2)
   CB.SCR = CB.SCR + (PERIOD * 2)
   DATA = 1
   DIV = GLM.ID[4,2]
   DEPT = GLM.ID[6,2]
   CCTR = GLM.ID[8,3]
   ACCT = GLM.ID[11,ACCT.LEN]
   OACCT = ACCT
   ODIV = DIV
   ODEPT = DEPT
   OCCTR = CCTR
   PRINT @(27,12) : ACCT STRUC :
   PRINT @(46,12) : DIV "L#2" :
   PRINT @(56,12) : DEPT "L#2" :
   PRINT @(67,12) : CCTR "L#3" :
*
   INVALID.TRANS = ''        ;* T26556
   LOOP
      BEGIN CASE
         CASE ACCT <> OACCT
            PRINT @(27,12) : ACCT STRUC :
            PRINT @(46,12) : DIV "L#2" :
            PRINT @(56,12) : DEPT "L#2" :
            PRINT @(67,12) : CCTR "L#3" :
            CCTR.ID = CONO : ODIV : ODEPT : OCCTR : OACCT
            OCCTR = CCTR
            MATREAD CB.REC FROM CC.COA.BAL, CCTR.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = CCTR.DB; CB.CREDITS = CCTR.CR
            CB.D.DEBITS = CCTR.D.DB; CB.D.CREDITS = CCTR.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = CCTR.SDB; CB.REC(CB.SCR) = CCTR.SCR
            TOT.BALANCE += CB.REC(CB.OPN+1)            ;* T26556
            MATWRITE CB.REC ON CC.COA.BAL, CCTR.ID
            CCTR.DB = 0; CCTR.CR = 0
            CCTR.D.DB = 0; CCTR.D.CR = 0
            CCTR.SDB = ''; CCTR.SCR = ''
            DEPT.ID = CONO : ODIV : ODEPT : OACCT
            ODEPT = DEPT
            MATREAD CB.REC FROM DP.COA.BAL, DEPT.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = DEPT.DB; CB.CREDITS = DEPT.CR
            CB.D.DEBITS = DEPT.D.DB; CB.D.CREDITS = DEPT.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = DEPT.SDB; CB.REC(CB.SCR) = DEPT.SCR
            MATWRITE CB.REC ON DP.COA.BAL, DEPT.ID
            DEPT.DB = 0; DEPT.CR = 0
            DEPT.D.DB = 0; DEPT.D.CR = 0
            DEPT.SDB = ''; DEPT.SCR = ''
            DIV.ID = CONO : ODIV : OACCT
            ODIV = DIV
            MATREAD CB.REC FROM DV.COA.BAL, DIV.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = DIV.DB; CB.CREDITS = DIV.CR
            CB.D.DEBITS = DIV.D.DB; CB.D.CREDITS = DIV.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = DIV.SDB; CB.REC(CB.SCR) = DIV.SCR
            MATWRITE CB.REC ON DV.COA.BAL, DIV.ID
            DIV.DB = 0; DIV.CR = 0
            DIV.D.DB = 0; DIV.D.CR = 0
            DIV.SDB = ''; DIV.SCR = ''
            ACCT.ID = CONO : OACCT
            OACCT = ACCT
            MATREAD CB.REC FROM CO.COA.BAL, ACCT.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = ACCT.DB; CB.CREDITS = ACCT.CR
            CB.D.DEBITS = ACCT.D.DB; CB.D.CREDITS = ACCT.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = ACCT.SDB; CB.REC(CB.SCR) = ACCT.SCR
            MATWRITE CB.REC ON CO.COA.BAL, ACCT.ID
            ACCT.DB = 0; ACCT.CR = 0
            ACCT.D.DB = 0; ACCT.D.CR = 0
            ACCT.SDB = ''; ACCT.SCR = ''
         CASE DIV <> ODIV
            PRINT @(46,12) : DIV "L#2" :
            PRINT @(56,12) : DEPT "L#2" :
            PRINT @(67,12) : CCTR "L#3" :
            CCTR.ID = CONO : ODIV : ODEPT : OCCTR : OACCT
            OCCTR = CCTR
            MATREAD CB.REC FROM CC.COA.BAL, CCTR.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = CCTR.DB; CB.CREDITS = CCTR.CR
            CB.D.DEBITS = CCTR.D.DB; CB.D.CREDITS = CCTR.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = CCTR.SDB; CB.REC(CB.SCR) = CCTR.SCR
            TOT.BALANCE += CB.REC(CB.OPN+1)            ;* T26556
            MATWRITE CB.REC ON CC.COA.BAL, CCTR.ID
            CCTR.DB = 0; CCTR.CR = 0
            CCTR.D.DB = 0; CCTR.D.CR = 0
            CCTR.SDB = ''; CCTR.SCR = ''
            DEPT.ID = CONO : ODIV : ODEPT : OACCT
            ODEPT = DEPT
            MATREAD CB.REC FROM DP.COA.BAL, DEPT.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = DEPT.DB; CB.CREDITS = DEPT.CR
            CB.D.DEBITS = DEPT.D.DB; CB.D.CREDITS = DEPT.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = DEPT.SDB; CB.REC(CB.SCR) = DEPT.SCR
            MATWRITE CB.REC ON DP.COA.BAL, DEPT.ID
            DEPT.DB = 0; DEPT.CR = 0
            DEPT.D.DB = 0; DEPT.D.CR = 0
            DEPT.SDB = ''; DEPT.SCR = ''
            DIV.ID = CONO : ODIV : OACCT
            ODIV = DIV
            MATREAD CB.REC FROM DV.COA.BAL, DIV.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = DIV.DB; CB.CREDITS = DIV.CR
            CB.D.DEBITS = DIV.D.DB; CB.D.CREDITS = DIV.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = DIV.SDB; CB.REC(CB.SCR) = DIV.SCR
            MATWRITE CB.REC ON DV.COA.BAL, DIV.ID
            DIV.DB = 0; DIV.CR = 0
            DIV.D.DB = 0; DIV.D.CR = 0
            DIV.SDB = ''; DIV.SCR = ''
         CASE DEPT <> ODEPT
            PRINT @(56,12) : DEPT "L#2" :
            PRINT @(67,12) : CCTR "L#3" :
            CCTR.ID = CONO : ODIV : ODEPT : OCCTR : OACCT
            OCCTR = CCTR
            MATREAD CB.REC FROM CC.COA.BAL, CCTR.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = CCTR.DB; CB.CREDITS = CCTR.CR
            CB.D.DEBITS = CCTR.D.DB; CB.D.CREDITS = CCTR.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = CCTR.SDB; CB.REC(CB.SCR) = CCTR.SCR
            TOT.BALANCE += CB.REC(CB.OPN+1)            ;* T26556
            MATWRITE CB.REC ON CC.COA.BAL, CCTR.ID
            CCTR.DB = 0; CCTR.CR = 0
            CCTR.D.DB = 0; CCTR.D.CR = 0
            CCTR.SDB = ''; CCTR.SCR = ''
            DEPT.ID = CONO : ODIV : ODEPT : OACCT
            ODEPT = DEPT
            MATREAD CB.REC FROM DP.COA.BAL, DEPT.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = DEPT.DB; CB.CREDITS = DEPT.CR
            CB.D.DEBITS = DEPT.D.DB; CB.D.CREDITS = DEPT.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = DEPT.SDB; CB.REC(CB.SCR) = DEPT.SCR
            MATWRITE CB.REC ON DP.COA.BAL, DEPT.ID
            DEPT.DB = 0; DEPT.CR = 0
            DEPT.D.DB = 0; DEPT.D.CR = 0
            DEPT.SDB = ''; DEPT.SCR = ''
         CASE CCTR <> OCCTR
            PRINT @(67,12) : CCTR "L#3" :
            CCTR.ID = CONO : ODIV : ODEPT : OCCTR : OACCT
            OCCTR = CCTR
            MATREAD CB.REC FROM CC.COA.BAL, CCTR.ID ELSE
               MAT CB.REC = ''
            END
            CB.DEBITS = CCTR.DB; CB.CREDITS = CCTR.CR
            CB.D.DEBITS = CCTR.D.DB; CB.D.CREDITS = CCTR.D.CR
            IF NUM.PERIODS = PERIOD THEN
               CB.REC(CB.LYR) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            END; *CSF 25874
            CB.REC(CB.OPN+1) = CB.REC(CB.OPN) + CB.DEBITS - CB.CREDITS
            CB.REC(CB.SDB) = CCTR.SDB; CB.REC(CB.SCR) = CCTR.SCR
            TOT.BALANCE += CB.REC(CB.OPN+1)            ;* T26556
            MATWRITE CB.REC ON CC.COA.BAL, CCTR.ID
            CCTR.DB = 0; CCTR.CR = 0
            CCTR.D.DB = 0; CCTR.D.CR = 0
            CCTR.SDB = ''; CCTR.SCR = ''
      END CASE
      READ TEST.REC FROM COA, CONO:ACCT THEN              ;* T26556
         MATREAD GLM.REC FROM GLR, GLM.ID ELSE
            MAT GLM.REC = ''
         END
         LOCATE GLM.SRC IN CBS.CODE<1>,1 SETTING PTR ELSE
            CBS.CODE<1,PTR> = GLM.SRC
            CBS.DESC<1,PTR> = GLM.SRC
         END
         BEGIN CASE
            CASE GLM.AMT > 0
               TOT.DEBIT += GLM.AMT         ;* T26556
               ACCT.DB = ACCT.DB + GLM.AMT
               ACCT.SDB<1,PTR> = ACCT.SDB<1,PTR> + GLM.AMT
               DIV.DB = DIV.DB + GLM.AMT
               DIV.SDB<1,PTR> = DIV.SDB<1,PTR> + GLM.AMT
               DEPT.DB = DEPT.DB + GLM.AMT
               DEPT.SDB<1,PTR> = DEPT.SDB<1,PTR> + GLM.AMT
               CCTR.DB = CCTR.DB + GLM.AMT
               CCTR.SDB<1,PTR> = CCTR.SDB<1,PTR> + GLM.AMT
               IF GLM.P.DATE = "" THEN
                  ACCT.D.DB = ACCT.D.DB + GLM.AMT
                  DIV.D.DB = DIV.D.DB + GLM.AMT
                  DEPT.D.DB = DEPT.D.DB + GLM.AMT
                  CCTR.D.DB = CCTR.D.DB + GLM.AMT
               END
            CASE GLM.AMT < 0
               TOT.CREDIT += GLM.AMT         ;* T26556
               ACCT.CR = ACCT.CR - GLM.AMT
               ACCT.SCR<1,PTR> = ACCT.SCR<1,PTR> - GLM.AMT
               DIV.CR = DIV.CR - GLM.AMT
               DIV.SCR<1,PTR> = DIV.SCR<1,PTR> - GLM.AMT
               DEPT.CR = DEPT.CR - GLM.AMT
               DEPT.SCR<1,PTR> = DEPT.SCR<1,PTR> - GLM.AMT
               CCTR.CR = CCTR.CR - GLM.AMT
               CCTR.SCR<1,PTR> = CCTR.SCR<1,PTR> - GLM.AMT
               IF GLM.P.DATE = "" THEN
                  ACCT.D.CR = ACCT.D.CR - GLM.AMT
                  DIV.D.CR = DIV.D.CR - GLM.AMT
                  DEPT.D.CR = DEPT.D.CR - GLM.AMT
                  CCTR.D.CR = CCTR.D.CR - GLM.AMT
               END
         END CASE
         SEQ = GLM.ID[11+ACCT.LEN,6]
         IF SEQ # "000000" AND SEQ # "XXXXXX" THEN
            FOUND = 1
            MATREADU GLM.REC FROM GLM, GLM.ID ELSE FOUND = 0
            IF FOUND THEN
               IF GLM.P.DATE = "" THEN
                  GLM.P.DATE = TODAY
                  MATWRITE GLM.REC ON GLM, GLM.ID
               END ELSE
                  RELEASE GLM, GLM.ID
               END
            END ELSE
               IF GLM.P.DATE = "" THEN GLM.P.DATE = TODAY
               MATWRITE GLM.REC ON GLM, GLM.ID
               DELETE GLA, GLM.ID
            END
            READU LINE.ID FROM GLX, CONO : ACCT ELSE LINE.ID = ""
            LOCATE DIV IN LINE.ID,1 SETTING XFND ELSE
               LINE.ID<XFND> = DIV
            END
            WRITE LINE.ID ON GLX, CONO : ACCT
            READU LINE.ID FROM GLX, CONO : DIV : ACCT ELSE LINE.ID = ""
            LOCATE DEPT IN LINE.ID,1 SETTING XFND ELSE
               LINE.ID<XFND> = DEPT
            END
            WRITE LINE.ID ON GLX, CONO : DIV : ACCT
            READU LINE.ID FROM GLX, CONO : DIV : DEPT : ACCT ELSE LINE.ID = ""
            LOCATE CCTR IN LINE.ID,1 SETTING XFND ELSE
               LINE.ID<XFND> = CCTR
            END
            WRITE LINE.ID ON GLX, CONO : DIV : DEPT : ACCT
            READU LINE.ID FROM GLX, CONO : DIV : DEPT : CCTR : ACCT ELSE LINE.ID = ""
            LOCATE SEQ IN LINE.ID,1 SETTING XFND ELSE
               LINE.ID<XFND> = SEQ
            END
            WRITE LINE.ID ON GLX, CONO : DIV : DEPT : CCTR : ACCT
         END
* T26556 v
      END ELSE
         LOCATE ACCT IN INVALID.TRANS<1> SETTING TOS ELSE
            IF ACCT # STR('X',ACCT.LEN) THEN
               INVALID.TRANS<1,-1> = ACCT
            END
         END
      END
* T26556 ^
   WHILE DATA DO
      READNEXT GLM.ID ELSE
         DATA = 0
         GLM.ID = CONO : STR('X',25)
      END
      IF CONO # GLM.ID[1,3] THEN
         DATA = 0
         GLM.ID = CONO : STR('X',25)
      END
      DIV = GLM.ID[4,2]
      DEPT = GLM.ID[6,2]
      CCTR = GLM.ID[8,3]
      ACCT = GLM.ID[11,ACCT.LEN]
   REPEAT  
*
* T26556 v
   IF INVALID.TRANS # '' THEN
      ERRMSG = 'TRANSACTIONS WITH INVALID ACCOUNT FOUND '
      GOSUB 91000
   END
   BEGIN CASE
      CASE (TOT.DEBIT+TOT.CREDIT) # 0
         ERRMSG = 'CR/DB IS OUT OF BALANCE, CR (':OCONV(TOT.CREDIT,"MD2,"):') & DB (':OCONV(TOT.DEBIT,"MD2,"):')'
         GOSUB 91000 ; GOTO 88888
      CASE TOT.BALANCE # 0
         ERRMSG = 'GENERAL LEDGER IS OUT OF BALANCE (':OCONV(TOT.BALANCE,"MD2,"):')'
         GOSUB 91000 ; GOTO 88888
      CASE 1
         GOTO 99999
   END CASE
* T26556 ^
*
91000 ERR.TYPE = 1 ; CALL SYSCOM(MAT SYSCOM.REC) ; RETURN
88888 BUFFER<3> = "END"
   PROCWRITE BUFFER
99999 END
