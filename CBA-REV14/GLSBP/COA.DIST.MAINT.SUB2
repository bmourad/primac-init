  SUBROUTINE COA.DIST.MAINT.SUB2(NEW,MAT COA.REC,MAT CDR.REC,M.TYPE,P.TYPE,P.NORM,T.TYPE,T.NORM,COA.DIST,KEY,OPER.ID,F.DIV)
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION    - [08.0]
* SYSTEM   - PRIMAC
* SOURCE   - GLSBP
* PROGRAM  - COA.DIST.MAINT
* BY   - WALID YAMOUT , C.B.A
* DATE   - 09/09/85
* DESCRIPTION- HANDLES "P" TYPE DISTRIBUTION
*
*TASK 20731 CLS 8/96  ADD HEADER DIVISION..ONLY ALLOW SAME IN BODY 
*                     UNLESS 00 IS ENTERED AS HEADER DIVISION
*T21177 diane 11/06/1996 * REV11 UPG
*T21876 diane 05/07/1997 * USE GEN.XREF
*T23278 markt 12/10/1998 * Add check for divisional security.
*T25978 adelgado 02/20/2002 * Add the use of prompts (S,SR,SB,ST).
*T27624 lross 08/12/2003 * Fix dept lookup and eliminate T20731 from GL DIST.
*ENDDOC
*********************************************************************
*--- INSERT FILES EQUETES
*COPY>GLS.CPYLIB>COA.DIST
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
**COPY>CPYLIB>GEN.XREF ;*T27624
*COPY>CPYLIB>GEN.XREF.SUB ;*T27624
*COPY>CPYLIB>XREF.DATA ;*T27624
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
*
  MAT SYSCOM.REC = ""; SYS.TYPE = 2
*
*--- INITIALIZATION
*
  LINE.SP = 2
  PAGE.S = 6
  DV.X = 21
  DP.X = 27
  CC.X = 32
  LINE.SPACE = 2
  PAGE.SIZE = 6
  BEGIN.PAGE = 8
  GEN.DIV = "00"
  GEN.DEPT = "00"
  GEN.CCTR = "000"
  BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
  ACCT.LEN = LEN(CO.ACCT.PIC)
  SP1 = SPACE(1)
  SP2 = SPACE(2)
  SP15 = SPACE(15)
  PP.NO = 12
  UNKNOWN = "NOT ON FILE"
  D3 = STR("-",3)
  D4 = STR("-",4)
  D15 = STR("-",15)
  D30 = STR("-",30)
  MAT GEN.XREF.REC = ""; GXR.CO = CONO; GXR.LOC = 1
*
*--- MAIN PROCESS
*
100*
  ECD.ACTION=3;CALL SCRN.EDIT
*
200*
  LINE.SPACE = LINE.SP
  PAGE.SIZE = PAGE.S
  LN = 1
  LINES = 0
  OLD.START = 0
  LINE.DESC = ""
  PROP.DESC = ""
*
  IF NEW THEN
    LN = 1
    LINES = 0
    OLD.START = 0
    GOSUB 2000
    OPTION = "A"
    LOOP
      LN = LINES + 1
      OLD.LINES = LINES
      GOSUB 10000
    WHILE LINES > OLD.LINES DO REPEAT
    LN = LINES
  END ELSE
    LN = 1
    LINES = 0
    OLD.START = 0
    GOSUB 2000
    LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
    FOR I = 1 TO LINES
      MATREAD COA.REC FROM COA, CONO : CDR.ACCT<1,I> ELSE COA.DESC = UNKNOWN
      LINE.DESC<I> = COA.DESC
      IF I = 1 THEN
        T.TYPE = COA.TYPE
        T.NORM = COA.NORM
      END
      MATREAD COA.REC FROM COA, CONO : CDR.P.ACCT<1,I> ELSE COA.DESC = UNKNOWN
      PROP.DESC<I> = COA.DESC
      IF I = 1 THEN
        P.TYPE = COA.TYPE
        P.NORM = COA.NORM
      END
    NEXT N
  END
*
  GOSUB 80000
*
*--- ENTER OPTIONS
*
500*
  ECD.NUM = 10
  SCV.REC(ECD.NUM)<1> = ''
  ECD.ACTION=4;CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
  BEGIN CASE
    CASE OPTION = "END" OR OPTION = "E"
      RELEASE COA.DIST, CONO:KEY
      GOTO 99999
    CASE OPTION = "A"
      LOOP
        LN = LINES + 1
        OLD.LINES = LINES
        GOSUB 10000
      WHILE LINES > OLD.LINES DO REPEAT
      LN = LINES
      GOSUB 80000
    CASE OPTION = "C"
      IF LINES = 1 THEN LNO = 1 ELSE GOSUB 30000
      IF LNO THEN
        LN = LNO
        SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
        GOSUB 10100
      END
      GOSUB 80000
    CASE OPTION = "D"
      GOSUB 30000
      IF LNO THEN
        LN = LNO
        CDR.ACCT = DELETE(CDR.ACCT,1,LN,0)
        CDR.DIV = DELETE(CDR.DIV,1,LN,0)
        CDR.DEPT = DELETE(CDR.DEPT,1,LN,0)
        CDR.CCTR = DELETE(CDR.CCTR,1,LN,0)
        CDR.PCNT = DELETE(CDR.PCNT,1,LN,0)
        CDR.P.ACCT = DELETE(CDR.P.ACCT,1,LN,0)
        CDR.P.DIV = DELETE(CDR.P.DIV,1,LN,0)
        CDR.P.DEPT = DELETE(CDR.P.DEPT,1,LN,0)
        CDR.P.CCTR = DELETE(CDR.P.CCTR,1,LN,0)
        LINE.DESC = DELETE(LINE.DESC,LN,0,0)
        PROP.DESC = DELETE(PROP.DESC,LN,0,0)
        LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
        IF LN > LINES THEN LN = LINES
        IF LN < 1 THEN LN = 1
        OLD.START = 0
        GOSUB 80000
      END
    * T25978 v
    CASE OPTION[1,1] = "S"
      BEGIN CASE
        CASE OPTION = 'S'
          LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          GOSUB 80000
        CASE OPTION[2,1] = 'R'
          LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 80000
        CASE OPTION[2,1] = 'B'
          LN = LINES
          GOSUB 80000
        CASE OPTION[2,1] = 'T'
          LN = 1
          GOSUB 80000
        CASE NUM(TRIM(OPTION[2,10]))
          TEMP = TRIM(OPTION[2,10])
          IF TEMP > 0 AND TEMP LE LINES THEN
            LN = TEMP
            GOSUB 80000
          END
      END CASE
    * T25978 ^
    CASE OPTION = "F"
      IF CDR.ACCT = "" THEN
        IF NOT(NEW) THEN
          DELETE COA.DIST, CONO:KEY
        END
        RELEASE COA.DIST, CONO:KEY
        GOTO 99999
      END
      CDR.OPER = OPER.ID
      MATWRITE CDR.REC ON COA.DIST, CONO:KEY
      GOTO 99999
  END CASE
  GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- PRINT SCROLL HEADING
*
2000*
  RETURN
  HEAD1 = "To Account Num "
  HEAD2 = D15
  HEAD1 = HEAD1 : "  Div  Dept  Cctr  Propor. By Acct  Div  Dept  Cctr"
  HEAD2 = HEAD2 :SP2: D3 :SP2: D4 :SP2: D4 :SP2: D15 :SP2: D3 :SP2: D4 :SP2: D4
  P_X  = 4 ; P_Y = 6 ; P_VALUE = HEAD1 ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  P_X  = 4 ; P_Y = 7 ; P_VALUE = HEAD2 ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  RETURN
*
*--- LINE ENTRY
*
10000*
  GOSUB 80000
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN-1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LINES = LINES + 1
10100*
  P_X  = 4 ; P_Y = SLN ; P_VALUE = SP15 ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  X = 4; Y = SLN; TYP = 1; O.R = 'R'
  MAXL = ACCT.LEN; JUSTIFY = 'L'
  IF CDR.ACCT<1,LN> # '' THEN
    O.R = 'O'; DEFAULT = CDR.ACCT<1,LN>
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN
    IF OPTION = 'A' THEN
      CDR.ACCT = DELETE(CDR.ACCT,1,LN,0)
      CDR.DIV = DELETE(CDR.DIV,1,LN,0)
      CDR.DEPT = DELETE(CDR.DEPT,1,LN,0)
      CDR.CCTR = DELETE(CDR.CCTR,1,LN,0)
      CDR.PCNT = DELETE(CDR.PCNT,1,LN,0)
      CDR.P.ACCT = DELETE(CDR.P.ACCT,1,LN,0)
      CDR.P.DIV = DELETE(CDR.P.DIV,1,LN,0)
      CDR.P.DEPT = DELETE(CDR.P.DEPT,1,LN,0)
      CDR.P.CCTR = DELETE(CDR.P.CCTR,1,LN,0)
      PROP.DESC = DELETE(PROP.DESC,LN,0,0)
      LINE.DESC = DELETE(LINE.DESC,LN,0,0)
    END
    OLD.START = 0
    GOTO 19999
  END
  DS.X = 4; DS.Y = SLN + 1
  GXR.ACTION = ""
  BEGIN CASE
    CASE VALUE = "D"
      X = DS.X; Y = DS.Y; TYP = 1; MAXL = 30; O.R = 'O'; DEFAULT = LINE.DESC<LN>
      CALL EDIT.SUB
      IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
      GXR.ACTION = "D"
    CASE VALUE = "T"
      X = DS.X; Y = DS.Y; TYP = 1; MAXL = 1
      P_X  = X ; P_Y = Y ; P_VALUE = SPACE(30) ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CALL EDIT.SUB
      IF VALUE = '' OR VALUE = 'END' THEN GOTO 10100
      MATREAD AT.REC FROM ACCT.TYPE, VALUE ELSE
        ERRMSG = 'INVALID ACCOUNT TYPE'
        GOSUB 91000; GOTO 10100
      END
      GXR.ACTION = "C"
    CASE LEN(VALUE) < BASE.LEN
      ERRMSG = "** MINIMUM LENGTH  = " : BASE.LEN : " **"
      GOSUB 91000; GOTO 10100
    CASE NOT(NUM(VALUE))
      ERRMSG = "** NUMERIC INPUT REQUIRED **"
      GOSUB 91000; GOTO 10100
  END CASE
  IF GXR.ACTION # "" THEN
    GXR.SRCH.ID = VALUE; GXR.ID = ''; GXR.FILE = COA
    CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    ECD.ACTION = 2; CALL SCRN.EDIT
    ECD.ACTION = 3; CALL SCRN.EDIT
    GOSUB 2000; OLD.START = 0; GOSUB 80000
    IF GXR.ID = '' THEN GOTO 10100
    VALUE = GXR.ID
  END ELSE
    VALUE = VALUE : STR("0",ACCT.LEN-LEN(VALUE))
  END
  MATREAD COA.REC FROM COA, CONO:VALUE ELSE
    ERRMSG = 'CANNOT LOCATE ACCOUNT : ' : VALUE CO.ACCT.MASK
    GOSUB 91000; GOTO 10100
  END
  IF OPTION = "A" AND LN = 1 THEN
    IF COA.TYPE # M.TYPE THEN
      ERRMSG = "ACCOUNT TYPE SHOULD BE THE SAME AS THE FROM ACCOUNT TYPE"
      GOSUB 91000; GOTO 10100
    END
    T.TYPE = COA.TYPE
    T.NORM = COA.NORM
  END
  IF COA.TYPE # T.TYPE THEN
    ERRMSG = "ALL TO ACCOUNTS SHOULD HAVE THE SAME TYPE"
    GOSUB 91000; GOTO 10100
  END
  IF COA.NORM # T.NORM THEN
    ERRMSG = "ALL TO ACCOUNTS SHOULD HAVE THE SAME NORM EITHER DB OR CR"
    GOSUB 91000; GOTO 10100
  END
  CDR.ACCT<1,LN> = VALUE
  LINE.DESC<LN> = COA.DESC
  P_X  = 4 ; P_Y = SLN ; P_VALUE = VALUE CO.ACCT.MASK ; P_OPT = ""
  P_X  := AM:DS.X ; P_Y := AM:DS.Y ; P_VALUE := AM:COA.DESC "L#30"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LINE.LEVEL = COA.LEVEL
  DV.NO = CDR.DIV<1,LN>
  DP.NO = CDR.DEPT<1,LN>
  CC.NO = CDR.CCTR<1,LN>
  DS.X = 38
*COPY>PMCBP>DV.DP.CC.MAINT
10500*
  DS.X = 4
  S.DIV = DV.NO ; S.DEPT = DP.NO ; S.CCTR = CC.NO ; S.ACCT.NO = CDR.ACCT<1,LN>
  GOSUB 40000
  IF UPD.FLG = 1 THEN
    CDR.ACCT<1,LN> = N.KEY[11,ACCT.LEN]
    LINE.DESC<LN> = COA.DESC
    P_X  = 4 ; P_Y = SLN ; P_VALUE = CDR.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
    P_X  := AM:DS.X ; P_Y := AM:DS.Y ; P_VALUE := AM:COA.DESC "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    DV.NO = N.KEY[4,2]
    DP.NO = N.KEY[6,2]
    CC.NO = N.KEY[8,3]
    P_X  = DV.X ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    P_X  := AM:DP.X ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
    P_X  := AM:CC.X ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  PTR = 1
  LOOP
    LOCATE CDR.ACCT<1,LN> IN CDR.ACCT<1>,PTR SETTING FND ELSE FND = 0
    IF FND THEN
      IF FND = LN THEN
        PTR = FND + 1
      END ELSE
        IF CDR.DIV<1,FND> = DV.NO AND CDR.DEPT<1,FND> = DP.NO AND CDR.CCTR<1,FND> = CC.NO THEN PTR = 0 ELSE PTR = FND + 1
      END
    END
  WHILE PTR AND FND DO REPEAT
  IF PTR = 0 THEN
    ERRMSG = "THIS ACCOUNT ALREADY EXISTS ON LINE ":FND
    GOSUB 91000; GOTO 10100
  END
  PTR = 1
  LOOP
    LOCATE CDR.ACCT<1,LN> IN CDR.P.ACCT<1>,PTR SETTING FND ELSE FND = 0
    IF FND THEN
      IF CDR.P.DIV<1,FND> = "S" THEN
        PTR = 0
      END ELSE
        IF CDR.P.DIV<1,FND> = DV.NO THEN
          IF CDR.P.DEPT<1,FND> = "S" THEN
            PTR = 0
          END ELSE
            IF CDR.P.DEPT<1,FND> = DP.NO THEN
              IF CDR.P.CCTR<1,FND> = "S" THEN
                PTR = 0
              END ELSE
                IF CDR.P.CCTR<1,FND> = CC.NO THEN PTR = 0 ELSE PTR = FND + 1
              END
            END ELSE
              PTR = FND + 1
            END
          END
        END ELSE
          PTR = FND + 1
        END
      END
    END
  WHILE PTR AND FND DO REPEAT
  IF PTR = 0 THEN
    ERRMSG = "THIS ACCOUNT IS A PROPORTION ACCOUNT LINE - ":FND
    GOSUB 91000; GOTO 10100
  END
  CDR.DIV<1,LN> = DV.NO
  CDR.DEPT<1,LN> = DP.NO
  CDR.CCTR<1,LN> = CC.NO
11000*
  P_X  = 38 ; P_Y = SLN ; P_VALUE = SP15 ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  X = 38; Y = SLN; TYP = 1; MAXL = ACCT.LEN; JUSTIFY = "L"
  IF CDR.P.ACCT<1,LN> # "" THEN
    O.R = "O"; DEFAULT = CDR.P.ACCT<1,LN>
  END
  CALL EDIT.SUB
  GXR.ACTION = ""
  BEGIN CASE
    CASE VALUE = 'END'
      GOTO 10100
    CASE VALUE = "D"
      X = 38; Y = SLN + 1; TYP = 1; MAXL = 30; O.R = 'O'; DEFAULT = PROP.DESC<LN>
      CALL EDIT.SUB
      IF VALUE = '' OR VALUE = 'END' THEN GOTO 11000
      GXR.ACTION = "D"
    CASE VALUE = "T"
      X = 38; Y = SLN + 1; TYP = 1; MAXL = 1
      P_X  = X ; P_Y = Y ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CALL EDIT.SUB
      IF VALUE = '' OR VALUE = 'END' THEN GOTO 11000
      MATREAD AT.REC FROM ACCT.TYPE, VALUE ELSE
        ERRMSG = 'INVALID ACCOUNT TYPE'
        GOSUB 91000; GOTO 11000
      END
      GXR.ACTION = "C"
    CASE LEN(VALUE) < BASE.LEN
      ERRMSG = "** MINIMUM LENGTH  = " : BASE.LEN : " **"
      GOSUB 91000; GOTO 11000
    CASE NOT(NUM(VALUE))
      ERRMSG = "** NUMERIC INPUT REQUIRED **"
      GOSUB 91000; GOTO 11000
  END CASE
  IF GXR.ACTION # "" THEN
    GXR.SRCH.ID = VALUE; GXR.ID = ''; GXR.FILE = COA
    CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    ECD.ACTION = 2; CALL SCRN.EDIT
    ECD.ACTION = 3; CALL SCRN.EDIT
    GOSUB 2000; OLD.START = 0; GOSUB 80000
    IF GXR.ID = '' THEN GOTO 11000
    VALUE = GXR.ID
  END ELSE
    VALUE = VALUE : STR("0",ACCT.LEN-LEN(VALUE))
  END
  IF VALUE = ACCT.NO THEN
    ERRMSG = "CANNOT ENTER PROPORTION ACCOUNT SAME AS FROM ACCOUNT"
    GOSUB 91000; GOTO 11000
  END
  MATREAD COA.REC FROM COA, CONO:VALUE ELSE
    ERRMSG = "CANNOT LOCATE ACCOUNT - " :VALUE CO.ACCT.MASK
    GOSUB 91000; GOTO 11000
  END
  IF OPTION = "A" AND LN = 1 THEN
    P.TYPE = COA.TYPE
    P.NORM = COA.NORM
  END
  IF COA.TYPE # P.TYPE THEN
    ERRMSG = "ALL PROPORTION ACCOUNTS SHOULD HAVE THE SAME TYPE"
    GOSUB 91000; GOTO 11000
  END
  IF COA.NORM # P.NORM THEN
    ERRMSG = "ALL PROPORTION ACCOUNTS SHOULD HAVE HE SAME NORM EITHER DB OR CR"
    GOSUB 91000; GOTO 11000
  END
  CDR.P.ACCT<1,LN> = VALUE
  PROP.DESC<LN> = COA.DESC
  P_X  = 38 ; P_Y = SLN ; P_VALUE = VALUE CO.ACCT.MASK ; P_OPT = ""
  P_X  := AM:38 ; P_Y := AM:SLN+1 ; P_VALUE := AM:COA.DESC "L#30"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  DS.X = 4
  DV.NO = CDR.P.DIV<1,LN>
  DP.NO = CDR.P.DEPT<1,LN>
  CC.NO = CDR.P.CCTR<1,LN>
11200*
  IF LINE.LEVEL = 0 THEN
    DV.NO = "S"
    DP.NO = ""
    CC.NO = ""
    P_X  = 55 ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11500
  END
  IF COA.LEVEL = 0 THEN
    DV.NO = GEN.DIV
    DP.NO = GEN.DEPT
    CC.NO = GEN.CCTR
    P_X  = 55 ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11450
  END
  X = 55
  Y = SLN
  TYP = 3
  MINL = 2
  MAXL = MINL
  O.R = 'O'
  DEFAULT = DV.NO
  HMSG = "Enter <RETURN> for XREF , OR VALID DIVISION"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 10100
  IF VALUE = "" THEN
*T21876 v
*      READ REC FROM CONTROL, CONO:"DIVISIONS" ELSE REC = ''
*      IF REC<1> = '' THEN GOTO 11200
*      S.LINES = COUNT(REC<1>,VM) + 1
*      S.NO = ''
*      S.DESC = ''
*      FOR I = 1 TO S.LINES
*         S.NO<I> = REC<1,I>
*         MATREAD DIV.REC FROM DIVISION, CONO:S.NO<I> ELSE DIV.DESC = UNKNOWN
*         S.DESC<I> = DIV.DESC
*      NEXT I
*      S.LN = 1
*      S.OLD.START = 0
       X1 = 55
*      GOSUB 55000
*      GOSUB 50000
    GXR.XREF=CONTROL
    GXR.FILE=DIVISION
*   GXR.LOC=1
*   GXR.TOP.LINE='DIVISION XREF SEARCH'
*   GXR.HEADING<1,1>='DIV'
*   GXR.HEADING<1,2>='DESCRIPTION'
*   GXR.LEN<1,1> = 5
*   GXR.ATT<1,1>=0
*   GXR.ATT<1,2>=1
*   GXR.LEN<1,2> = 30
    GXR.ID=''
    GXR.SRCH.ID="DIVISIONS"
    GXR.NAME='DIVISION15'
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
    S.NO = GXR.ID
    ECD.ACTION = 2 ; CALL SCRN.EDIT
    ECD.ACTION = 3 ; CALL SCRN.EDIT
    OLD.START = ""
    GOSUB 80000
*T21876 ^
    IF S.NO = '' THEN GOTO 11200
    VALUE = S.NO
    P_X  = 55 ; P_Y = SLN ; P_VALUE = VALUE "L#2" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF VALUE = GEN.DIV THEN
    DV.NO = GEN.DIV
    DP.NO = GEN.DEPT
    CC.NO = GEN.CCTR
    P_X  = 61 ; P_Y = SLN ; P_VALUE = DP.NO "L#2" ; P_OPT = ""
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11450
  END
  MATREAD DIV.REC FROM DIVISION, CONO:VALUE ELSE
    ERRMSG = 'CANNOT LOCATE DIVISION : ' : VALUE
    GOSUB 91000
    GOTO 11200
  END
  DV.NO = VALUE
11300*
  IF LINE.LEVEL = 1 THEN
    DP.NO = "S"
    CC.NO = ""
    P_X  = 61 ; P_Y = SLN ; P_VALUE = DP.NO "L#2" ; P_OPT = ""
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11500
  END
  IF COA.LEVEL = 1 THEN
    DP.NO = GEN.DEPT
    CC.NO = GEN.CCTR
    P_X  = 61 ; P_Y = SLN ; P_VALUE = DP.NO "L#2" ; P_OPT = ""
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11450
  END
  X = 61
  Y = SLN
  TYP = 3
  MINL = 2
  MAXL = MINL
  O.R = 'O'
  DEFAULT = DP.NO
  HMSG = "Enter <RETURN> for XREF , OR VALID DEPARTMENT"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 10100
  IF VALUE = "" THEN
    IF DIV.DEPT = '' THEN GOTO 11300
*T21876 v ;*T27624 Allow S.NO to get built.
       S.LINES = COUNT(DIV.DEPT,VM) + 1
       S.NO = ''
       S.DESC = ''
       II = 0
       FOR I = 1 TO S.LINES
          IF LEN(DIV.DEPT<1,I>) = 2 THEN
             II = II + 1
             S.NO<1,II> = DIV.DEPT<1,I>
             MATREAD DEPT.REC FROM DEPARTMENT, CONO:S.NO<II> ELSE DEPT.DESC = UNKNOWN
             S.DESC<II> = DEPT.DESC
          END
       NEXT I
       IF II < 1 THEN GOTO 11300
*      S.LINES = II
*      S.LN = 1
*      S.OLD.START = 0
       X1 = 61
*      GOSUB 55000
*      GOSUB 50000
    GXR.XREF = DIVISION
    GXR.FILE = DEPARTMENT
*   GXR.LOC = 2
*   GXR.TOP.LINE = 'DEPARTMENT XREF SEARCH'
*   GXR.HEADING<1,1> = 'DEPARTMENT'
*   GXR.ATT<1,2> = 2
    GXR.ID = ''
*   GXR.SRCH.ID = DIV.DEPT
    GXR.SRCH.ID = DV.NO
    GXR.IDLIST = S.NO
    GXR.NAME='DEPT.NON.JCS'
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
    S.NO = GXR.ID
    GXR.IDLIST=''
    ECD.ACTION = 2 ; CALL SCRN.EDIT
    ECD.ACTION = 3 ; CALL SCRN.EDIT
    OLD.START = ""
    GOSUB 80000
*T21876^
    P_X  = 55 ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF S.NO = '' THEN GOTO 11300
    VALUE = S.NO
    P_X  = 61 ; P_Y = SLN ; P_VALUE = VALUE "L#2" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF VALUE = GEN.DEPT THEN
    DP.NO = GEN.DEPT
    CC.NO = GEN.CCTR
    P_X  = 66 ; P_Y = SLN ; P_VALUE = CC.NO "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11450
  END
  LOCATE VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE
    ERRMSG = 'CANNOT LOCATE DEPARTMENT : ':VALUE:', UNDER DIVISION : ':DV.NO
    GOSUB 91000
    GOTO 11300
  END
  MATREAD DEPT.REC FROM DEPARTMENT, CONO:VALUE ELSE
    ERRMSG = 'CANNOT LOCATE DEPARTMENT : ' : VALUE
    GOSUB 91000
    GOTO 11300
  END
  DP.NO = VALUE
11400*
  IF LINE.LEVEL = 2 THEN
    CC.NO = "S"
    P_X  = 66 ; P_Y = SLN ; P_VALUE = CC.NO "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11500
  END
  IF COA.LEVEL = 2 THEN
    CC.NO = GEN.CCTR
    P_X  = 66 ; P_Y = SLN ; P_VALUE = CC.NO "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 11450
  END
  X = 66
  Y = SLN
  TYP = 3
  MINL = 3
  MAXL = MINL
  O.R = 'O'
  DEFAULT = CC.NO
  HMSG = "Enter <RETURN> for XREF , OR VALID COST CENTER"
  CALL EDIT.SUB
  IF VALUE = "END" THEN GOTO 10100
  IF VALUE = "" THEN
    IF DEPT.CCTRS = '' THEN GOTO 11400
*T21876 v
*      S.LINES = COUNT(DEPT.CCTRS,VM) + 1
*      S.NO = ''
*      S.DESC = ''
*      FOR I = 1 TO S.LINES
*         S.NO<I> = DEPT.CCTRS<1,I>
*         MATREAD CCTR.REC FROM COST.CNTR, CONO:S.NO<I> ELSE CCTR.DESC = UNKNOWN
*         S.DESC<I> = CCTR.DESC
*      NEXT I
*      S.LN = 1
*      S.OLD.START = 0
       X1 = 66
*      GOSUB 55000
*      GOSUB 50000
    GXR.XREF=DEPARTMENT
    GXR.FILE=COST.CNTR
*   GXR.TOP.LINE="COST CENTER XREF SEARCH"
*   GXR.HEADING<1,1>="CCTR"
*   GXR.ATT<1,2>=1
*   GXR.LOC=5
    GXR.ID=""
*   GXR.SRCH.ID=DEPT.CCTRS
    GXR.SRCH.ID=DP.NO
    GXR.NAME='CCTR.DEPT'
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
    CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
    ECD.ACTION=2;CALL SCRN.EDIT
    ECD.ACTION=3;CALL SCRN.EDIT
    OLD.START = ""
    GOSUB 80000
    S.NO = GXR.ID
*T21876 ^
    P_X  = 55 ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF S.NO = '' THEN GOTO 11400
    VALUE = S.NO
    P_X  = X1 ; P_Y = SLN ; P_VALUE = VALUE "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
  IF VALUE = GEN.CCTR THEN
    CC.NO = GEN.CCTR
    GOTO 11450
  END
  LOCATE VALUE IN DEPT.CCTRS<1>,1 SETTING FND ELSE
    ERRMSG = 'CANNOT LOCATE COST CENTER : ':VALUE:', UNDER DEPARTMENT : ':DP.NO
    GOSUB 91000
    GOTO 11400
  END
  MATREAD CCTR.REC FROM COST.CNTR, CONO:VALUE ELSE
    ERRMSG = 'CANNOT LOCATE COST CENTER : ':VALUE
    GOSUB 91000
    GOTO 11400
  END
  CC.NO = VALUE
11450*
* TASK 20731 v T27624 Comment out 20731
* IF DV.NO # F.DIV AND F.DIV # "00" THEN
*   ERRMSG = "Division must match 'From Division' "
*   GOSUB 91000
*   DV.NO=''; DP.NO=''; CC.NO=''
*   GOTO 11000
* END
* TASK 20731 ^
  S.DIV = DV.NO ; S.DEPT = DP.NO ; S.CCTR = CC.NO ; S.ACCT.NO = CDR.P.ACCT<1,LN>
  GOSUB 40000
  IF UPD.FLG = 1 THEN
    CDR.P.ACCT<1,LN> = N.KEY[11,ACCT.LEN]
    PROP.DESC<LN> = COA.DESC
    P_X  = 38 ; P_Y = SLN ; P_VALUE = CDR.P.ACCT<1,LN> CO.ACCT.MASK ; P_OPT = ""
    P_X  := AM:38 ; P_Y := AM:SLN+1 ; P_VALUE := AM:COA.DESC "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    DV.NO = N.KEY[4,2]
    DP.NO = N.KEY[6,2]
    CC.NO = N.KEY[8,3]
    P_X  = 55 ; P_Y = SLN ; P_VALUE = DV.NO "L#2" ; P_OPT = ""
    P_X  := AM:61 ; P_Y := AM:SLN ; P_VALUE := AM:DP.NO "L#2"
    P_X  := AM:66 ; P_Y := AM:SLN ; P_VALUE := AM:CC.NO "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  END
11500*
  PTR = 1
  LOOP
    LOCATE CDR.P.ACCT<1,LN> IN CDR.P.ACCT<1>,PTR SETTING FND ELSE FND = 0
    IF FND THEN
      IF FND = LN THEN
        PTR = FND + 1
      END ELSE
        IF DV.NO = "S" OR CDR.P.DIV<1,FND> = "S" THEN
          PTR = 0
        END ELSE
          IF DV.NO = CDR.P.DIV<1,FND> THEN
            IF DP.NO = "S" OR CDR.P.DEPT<1,FND> = "S" THEN
              PTR = 0
            END ELSE
              IF DP.NO = CDR.P.DEPT<1,FND> THEN
                IF CC.NO = "S" OR CDR.P.CCTR<1,FND> = "S" THEN
                  PTR = 0
                END ELSE
                  IF CC.NO = CDR.P.CCTR<1,FND> THEN PTR = 0 ELSE PTR = FND + 1
                END
              END ELSE
                PTR = FND + 1
              END
            END
          END ELSE
            PTR = FND + 1
          END
        END
      END
    END
  WHILE PTR AND FND DO REPEAT
  IF PTR = 0 THEN
    ERRMSG = "THIS ACCOUNT ALREADY EXIST ON LINE - ":FND
    GOSUB 91000; GOTO 11000
  END
  PTR = 1
  LOOP
    LOCATE CDR.P.ACCT<1,LN> IN CDR.ACCT<1>,PTR SETTING FND ELSE FND = 0
    IF FND THEN
      IF DV.NO = "S" THEN
        PTR = 0
      END ELSE
        IF CDR.DIV<1,FND> = DV.NO THEN
          IF DP.NO = "S" THEN
            PTR = 0
          END ELSE
            IF CDR.DEPT<1,FND> = DP.NO THEN
              IF CC.NO = "S" THEN
                PTR = 0
              END ELSE
                IF CDR.CCTR<1,FND> = CC.NO THEN PTR = 0 ELSE PTR = FND + 1
              END
            END ELSE
              PTR = FND + 1
            END
          END
        END ELSE
          PTR = FND + 1
        END
      END
    END
  WHILE PTR AND FND DO REPEAT
  IF PTR = 0 THEN
    ERRMSG = "THIS ACCOUNT WAS ENTERED AS TO ACCOUNT ON LINE - ":FND
    GOSUB 91000; GOTO 11000
  END
  CDR.P.DIV<1,LN> = DV.NO
  CDR.P.DEPT<1,LN> = DP.NO
  CDR.P.CCTR<1,LN> = CC.NO
19999*
  LINES = COUNT(CDR.ACCT,VM) + (CDR.ACCT # "")
  RETURN
*
*--- GET LINE NUMBER
*
30000*
  GOSUB 80000
  ECD.MINV = ST.LINE
  ECD.MAXV = LST.LINE
  ECD.NUM = 11
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN LNO = 0 ELSE LNO = ECD.RET.VALUE
  RETURN
*
*---- CHECK FOR EQUIVALENT ACCOUNT
*
40000*
  UPD.FLG = 0
  IF EQV.FLG = 1 THEN
    READ N.KEY FROM COA.EQUIV , CONO:S.DIV:S.DEPT:S.CCTR:S.ACCT.NO ELSE N.KEY = ""
    IF N.KEY # "" THEN
      UPD.FLG = 1
      MATREAD COA.REC FROM COA, CONO:N.KEY[11,ACCT.LEN] ELSE
        ERRMSG = "CANNOT LOCATE EQUIVALENT ACCOUNT : ": N.KEY[11,ACCT.LEN] CO.ACCT.MASK
        GOSUB 91000
        UPD.FLG = 0
      END
    END
  END
  RETURN
*
*--- SCROLL
*
80000*
  ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > LINES THEN LST.LINE = LINES
  IF ST.LINE = OLD.START THEN RETURN
  OLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.ACCT<1,N> CO.ACCT.MASK
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 21 ; P_Y = SSLN ; P_VALUE = CDR.DIV<1,N> "L#2" ; P_OPT = ""
    P_X  := AM:27 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.DEPT<1,N> "L#2"
    P_X  := AM:32 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.CCTR<1,N> "L#3"
    P_X  := AM:38 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.P.ACCT<1,N> CO.ACCT.MASK
    P_X  := AM:55 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.P.DIV<1,N> "L#2"
    P_X  := AM:61 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.P.DEPT<1,N> "L#2"
    P_X  := AM:66 ; P_Y := AM:SSLN ; P_VALUE := AM:CDR.P.CCTR<1,N> "L#3"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    P_X  = 0 ; P_Y = SSLN+1 ; P_VALUE = "" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SSLN+1 ; P_VALUE := AM:LINE.DESC<N> "L#30"
    P_X  := AM:38 ; P_Y := AM:SSLN+1 ; P_VALUE := AM:PROP.DESC<N> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    IF CDR.TYPE # "" THEN
      P_X  = 0 ; P_Y = SSLN+1 ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    END
  NEXT N
  RETURN
*
*--- SCROLL XREF
*
* *COPY>PMCBP>DV.DP.CC.SCROLL     ;* T21876
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*       PRINT @(0,23):ERRMSG:CL:
*       INPUT REPLY,1 :
*       PRINT @(0,23):CL:
*       RETURN
99999 * PRINT @(-1)
  ECD.ACTION = 99 ; CALL SCRN.EDIT
  RETURN
END
