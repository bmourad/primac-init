*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
*********************************************************************
* REVISION    - [08.0]
* SYSTEM   - PRIMAC
* SOURCE   - GLSBP
* PROGRAM  - COA.DIST.MAINT
* BY   - WALID YAMOUT , C.B.A
* DATE   - 09/09/85
* DESCRIPTION-
*TASK 20731 CLS 8/96  ADD HEADER DIVISION..ONLY ALLOW SAME IN BODY 
*                     UNLESS 00 IS ENTERED AS HEADER DIVISION
*T21177 diane 11/06/1996 * REV11 UPG
*T21876 diane 05/07/1997 * USE GEN.XREF FOR DIVISION SCROLL
*T23278 markt 12/10/1998 * Add check for divisional security.
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*T27624 lross 08/12/2003 * Fix dept lookup and eliminate T20731 from GL DIST.
*T28098 cmykleb 05/05/2004 * Use GEN.XREF.SUB for Account # lookup.
*ENDDOC
*********************************************************************
*--- INSERT FILES EQUETES
*COPY>GLS.CPYLIB>COA.DIST
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>COST.CNTR
**COPY>CPYLIB>GEN.XREF ;*T27624
*COPY>CPYLIB>GEN.XREF.SUB ;*T27624
*COPY>CPYLIB>XREF.DATA ;*T27624
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*
*--- INITALIZE EDIT.SUB
*
*     MAT EDIT.COM = ""
*     TYP = 0; CALL EDIT.SUB
   FILL = "#"
   ERRMSG = ""
*
*--- GET COMPANY
*
   MAT FILE.VARS = ""
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
   CONO = ""
   MAT COMP.REC = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 999999
*
*--- OPEN FILES
*
   OPEN '','COA.DIST' TO COA.DIST ELSE ERRMSG = 'COA.DIST FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'M.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COA' TO COA ELSE ERRMSG = 'COA FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','COA.XREF' TO COA.XREF ELSE ERRMSG = 'COA.XREF FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE ERRMSG = 'ACCT.TYPE FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.CATG' TO ACCT.CATG ELSE ERRMSG = 'ACCT.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE ERRMSG = 'ACCT.SUB.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE ERRMSG = 'CATG.AND.SUB FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOSUB 91000; GOTO 999999
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG = 'XREF.DATA FILE IS MISSING'; GOSUB 91000; GOTO 999999 ;*T27624
   EQV.FLG = 1
   OPEN '','COA.EQUIV' TO COA.EQUIV ELSE EQV.FLG = 0
*
*--- INITIALIZATION
*
   TODAY = DATE()
   BEGIN.PAGE = 8
   LINE.SP = 1
   PAGE.S = 12
   GEN.DIV = "00"
   GEN.DEPT = "00"
   GEN.CCTR = "000"
   BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
   ACCT.LEN = LEN(CO.ACCT.PIC)
   SP1 = SPACE(1)
   SP2 = SPACE(2)
   SP15 = SPACE(15)
   PP.NO = 12
   UNKNOWN = "NOT ON FILE"
   D3 = STR("-",3)
   D4 = STR("-",4)
   D15 = STR("-",15)
   D30 = STR("-",30)
   MAT GEN.XREF.REC = ""; GXR.CO = CONO; GXR.LOC = 1
*
*--- GET OPER.ID
*
*PORT.ACCT = OCONV(0,"U50BB")
*PORT.NO = FIELD(PORT.ACCT," ",1)
*PORT.NO = SYSTEM(18)
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
   READV OPER.ID FROM SECURITY, "R.":PORT.NO,2 ELSE OPER.ID = ""
   IF OPER.ID = "" THEN OPER.ID = PORT.NO :"-": DATE()
*
*--- SCREEN
*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 3
   ECD.SCRN.NAME<1> = 'COA.DIST.MAINT'
   ECD.SCRN.NAME<2> = 'COA.DIST.MAINT.SUB1'
   ECD.SCRN.NAME<3> = 'COA.DIST.MAINT.SUB2'
   ECD.ACTION=1;CALL SCRN.EDIT
*
*--- MAIN PROCESS
*
100*
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
*
*--- ENTER ACCOUNT NUMBER
*
200*
   RELEASE       ;* T26126
   LINE.SPACE = LINE.SP
   PAGE.SIZE = PAGE.S
   ACCT.NO = ""
   F.DIV = ""
   F.DEPT = ""
   F.CCTR = ""
   LN = 1
   LINES = 0
   OLD.START = 0
   LINE.DESC = ""
   PROP.DESC = ""
   MAT COA.REC = ""
   MAT CDR.REC = ""
   M.TYPE = ""
   P.TYPE = ""
   P.NORM = ""
   T.TYPE = ""
   T.NORM = ""
   NEW = 0
   ECD.NUM = 1; ECD.MAXL = ACCT.LEN
   ECD.ACTION=4;CALL SCRN.EDIT
   GXR.ACTION = ""
   BEGIN CASE
      CASE ECD.RET.VALUE = "END"
         GOTO 999999
      CASE ECD.RET.VALUE = "D"
         ECD.NUM = 2; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 200
         GXR.ACTION = "D"
      CASE ECD.RET.VALUE = "T"
         ECD.NUM = 2; ECD.MAXL = 1; ECD.ACTION = 4; CALL SCRN.EDIT
         IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 200
         MATREAD AT.REC FROM ACCT.TYPE, ECD.RET.VALUE ELSE
            ERRMSG = 'INVALID ACCOUNT TYPE'
            GOSUB 91000; GOTO 200
         END
         GXR.ACTION = "C"
      CASE LEN(ECD.RET.VALUE) < BASE.LEN
         ERRMSG = "** MINIMUM LENGTH  = " : BASE.LEN : " **"
         GOSUB 91000; GOTO 200
      CASE NOT(NUM(ECD.RET.VALUE))
         ERRMSG = "** NUMERIC INPUT REQUIRED **"
         GOSUB 91000; GOTO 200
   END CASE
   IF GXR.ACTION # "" THEN
      GXR.SRCH.ID = ECD.RET.VALUE; GXR.ID = ''; GXR.FILE = COA
*T28098 v
*     CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      CALL COA.GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX)
*T28098 ^
      ECD.ACTION = 2; CALL SCRN.EDIT
      ECD.ACTION = 3; CALL SCRN.EDIT
      IF GXR.ID = '' THEN GOTO 200
      ECD.RET.VALUE = GXR.ID
   END ELSE
      ECD.RET.VALUE = ECD.RET.VALUE : STR("0",ACCT.LEN-LEN(ECD.RET.VALUE))
   END
   MATREAD COA.REC FROM COA, CONO : ECD.RET.VALUE ELSE
      ERRMSG = "CANNOT LOCATE ACCOUNT ":ECD.RET.VALUE CO.ACCT.MASK
      GOSUB 91000; GOTO 200
   END
   ACCT.NO = ECD.RET.VALUE
   M.TYPE = COA.TYPE
   ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ACCT.NO CO.ACCT.MASK
   ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 2; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = COA.DESC
   ECD.ACTION = 5; CALL SCRN.EDIT
   GOSUB 1000
   IF ECD.RET.VALUE = "END" THEN GOTO 100
   KEY = F.DIV : F.DEPT : F.CCTR : ACCT.NO
   S.DIV = F.DIV ; S.DEPT = F.DEPT ; S.CCTR = F.CCTR ; S.ACCT.NO = ACCT.NO
   GOSUB 40000
   IF UPD.FLG = 1 THEN
      KEY = N.KEY
      ACCT.NO = N.KEY[11,ACCT.LEN]
      F.DIV = N.KEY[4,2]
      F.DEPT = N.KEY[6,2]
      F.CCTR = N.KEY[8,3]
      M.TYPE = COA.TYPE
      ECD.NUM = 1; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ACCT.NO CO.ACCT.MASK
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 2; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = COA.DESC
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 3; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DIV
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 4; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DEPT
      ECD.ACTION = 5; CALL SCRN.EDIT
      ECD.NUM = 5; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.CCTR
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
  * T26126 v
   MATREADU CDR.REC FROM COA.DIST, CONO:KEY LOCKED
      ERRMSG = 'ACCOUNT record is locked by user - ':GETUSERNAME(STATUS())
      GOSUB 91000;GOTO 200 
   END ELSE
      NEW = 1
   END
  * T26126 ^
   IF NEW THEN
      MAT CDR.REC = ""
      GOSUB 1500
      IF ECD.RET.VALUE = "END" THEN
         RELEASE COA.DIST, CONO:KEY
         GOTO 100
      END
   END ELSE
      SCV.REC(8)<1> = CDR.TYPE
      SCV.REC(9)<1> = CDR.F.PCNT
      ECD.ACTION = 3; CALL SCRN.EDIT
   END
*
*---- Call subroutine based on type
300*
   IF CDR.TYPE = "%" THEN
      ECD.SCRN.NO = 2
      SCV.REC(1)<2> = SCV.REC(1)<1>
      SCV.REC(2)<2> = SCV.REC(2)<1>
      SCV.REC(3)<2> = SCV.REC(3)<1>
      SCV.REC(4)<2> = SCV.REC(4)<1>
      SCV.REC(5)<2> = SCV.REC(5)<1>
      SCV.REC(8)<2> = SCV.REC(8)<1>
      CALL COA.DIST.MAINT.SUB1(NEW,MAT COA.REC,MAT CDR.REC,M.TYPE,P.TYPE,P.NORM,T.TYPE,T.NORM,COA.DIST,KEY,OPER.ID,F.DIV)
      ECD.SCRN.NO = 1
      GOSUB 81000
   END ELSE
      ECD.SCRN.NO = 3
      SCV.REC(1)<3> = SCV.REC(1)<1>
      SCV.REC(2)<3> = SCV.REC(2)<1>
      SCV.REC(3)<3> = SCV.REC(3)<1>
      SCV.REC(4)<3> = SCV.REC(4)<1>
      SCV.REC(5)<3> = SCV.REC(5)<1>
      SCV.REC(8)<3> = SCV.REC(8)<1>
      CALL COA.DIST.MAINT.SUB2(NEW,MAT COA.REC,MAT CDR.REC,M.TYPE,P.TYPE,P.NORM,T.TYPE,T.NORM,COA.DIST,KEY,OPER.ID,F.DIV)
      ECD.SCRN.NO = 1
      GOSUB 81000
   END
   GOTO 100
*
*--- INPUT FROM DIVISION
*
1000*
   ECD.NUM = 3
   IF COA.LEVEL < 1 THEN
      F.DIV = GEN.DIV
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DIV
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1200
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 1499
   IF ECD.RET.VALUE = "" THEN
*T21876 v
*      READ REC FROM CONTROL, CONO : "DIVISIONS" ELSE REC = ""
*      IF REC<1> = "" THEN GOTO 1000
*      S.LINES = COUNT(REC<1>,VM) + 1
*      S.NO = ""
*      S.DESC = ""
*      FOR I = 1 TO S.LINES
*         S.NO<I> = REC<1,I>
*         MATREAD DIV.REC FROM DIVISION, CONO:S.NO<I> ELSE DIV.DESC = UNKNOWN
*         S.DESC<I> = DIV.DESC
*      NEXT I
*      P_X  = 4 ; P_Y = 6 ; P_VALUE = "Div " ; P_OPT = ""
*      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
**      P_X  = 4 ; P_Y = 7 ; P_VALUE = D3:SP1:D30 ; P_OPT = "CL"
**      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      DS.X = 9
*      X1 = 5
*      S.LN = 1
*      S.OLD.START = 0
*      GOSUB 55000
*      GOSUB 50000
      GXR.XREF=CONTROL
      GXR.FILE=DIVISION
*   GXR.LOC=1
*   GXR.TOP.LINE='DIVISION XREF SEARCH'
*   GXR.HEADING<1,1>='DIV'
*   GXR.HEADING<1,2>='DESCRIPTION'
*   GXR.LEN<1,1> = 5
*   GXR.ATT<1,1>=0
*   GXR.ATT<1,2>=1
*   GXR.LEN<1,2> = 30
      GXR.ID=''
      GXR.SRCH.ID="DIVISIONS"
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      GXR.NAME='DIVISION15'
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      S.NO = GXR.ID
      ECD.ACTION = 2 ; CALL SCRN.EDIT
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      OLD.START = ""
      GOSUB 80000
*T21876 ^
      IF S.NO = "" THEN GOTO 1000
      ECD.RET.VALUE = S.NO
      ECD.NUM = 3
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = S.NO
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF ECD.RET.VALUE = GEN.DIV THEN
*T23278 v
      DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
         GOSUB 91000; GOTO 1000
      END
*T23278 ^
      ECD.NUM = 3
      F.DIV = GEN.DIV
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DIV
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1200
   END
   MATREAD DIV.REC FROM DIVISION, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "CANNOT LOCATE DIVISION - " : ECD.RET.VALUE
      GOSUB 91000; GOTO 1000
   END
*T23278 v
   DIV.CODE = ECD.RET.VALUE; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
   CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
   IF ERRMSG # '' THEN
      GOSUB 91000; GOTO 1000
   END
*T23278 ^
   F.DIV = ECD.RET.VALUE
*
*--- GET FROM DEPARTMENT
*
1200*
   ECD.NUM = 4
   IF COA.LEVEL < 2 OR F.DIV = GEN.DIV THEN
      F.DEPT = GEN.DEPT
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DEPT
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1300
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 1499
   IF ECD.RET.VALUE = "" THEN
      IF DIV.DEPT = "" THEN GOTO 1200
*T27624 v Leave routine in to get depts.
*T21876 v
      S.LINES = COUNT(DIV.DEPT,VM) + 1
      S.NO = ""
      S.DESC = ""
      II = 0
      FOR I = 1 TO S.LINES
         IF LEN(DIV.DEPT<1,I>) = 2 THEN
            II = II + 1
            S.NO<1,II> = DIV.DEPT<1,I>
            MATREAD DEPT.REC FROM DEPARTMENT, CONO:S.NO<II> ELSE DEPT.DESC = UNKNOWN
            S.DESC<II> = DEPT.DESC
         END
      NEXT I
      IF II < 1 THEN GOTO 1200
*      S.LINES = II
*      P_X  = 4 ; P_Y = 6 ; P_VALUE = "Dept" ; P_OPT = ""
*      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
**      P_X  = 4 ; P_Y = 7 ; P_VALUE = D4:SP1:D30 ; P_OPT = "CL"
**      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      DS.X = 9
*      X1 = 5
*      S.LN = 1
*      S.OLD.START = 0
*      GOSUB 55000
*      GOSUB 50000
      GXR.XREF = DIVISION
      GXR.FILE = DEPARTMENT
*   GXR.LOC = 2
*   GXR.TOP.LINE = 'DEPARTMENT XREF SEARCH'
*   GXR.HEADING<1,1> = 'DEPARTMENT'
*   GXR.ATT<1,2> = 2
      GXR.ID = ''
*   GXR.SRCH.ID = DIV.DEPT
      GXR.SRCH.ID = F.DIV
      GXR.IDLIST = S.NO
      GXR.NAME='DEPT.NON.JCS'
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      GXR.IDLIST=''
      S.NO = GXR.ID
      ECD.ACTION = 2 ; CALL SCRN.EDIT
      ECD.ACTION = 3 ; CALL SCRN.EDIT
      OLD.START = ""
      GOSUB 80000
*T21876^
      IF S.NO = "" THEN GOTO 1200
      ECD.RET.VALUE = S.NO
      ECD.NUM = 4
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = S.NO
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF ECD.RET.VALUE = GEN.DEPT THEN
      ECD.NUM = 4
      F.DEPT = GEN.DEPT
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.DEPT
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1300
   END
   LOCATE ECD.RET.VALUE IN DIV.DEPT<1>,1 SETTING FND ELSE
      ERRMSG = "CANNOT LOCATE DEPARTMENT - ":ECD.RET.VALUE: ", UNDER DIVISION - ":F.DIV
      GOSUB 91000; GOTO 1200
   END
   MATREAD DEPT.REC FROM DEPARTMENT, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "CANNOT LOCATE DEPARTMENT - " : ECD.RET.VALUE
      GOSUB 91000; GOTO 1200
   END
   F.DEPT = ECD.RET.VALUE
*
*--- ENTER FROM COST CENTER
*
1300*
   ECD.NUM = 5
   IF COA.LEVEL < 3 OR F.DEPT = GEN.DEPT THEN
      F.CCTR = GEN.CCTR
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.CCTR
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1499
   END
   ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 1499
   IF ECD.RET.VALUE = "" THEN
      IF DEPT.CCTRS = "" THEN GOTO 1300
*T21876 v
*      S.LINES = COUNT(DEPT.CCTRS,VM) + 1
*      S.NO = ""
*      S.DESC = ""
*      FOR I = 1 TO S.LINES
*         S.NO<I> = DEPT.CCTRS<1,I>
*         MATREAD CCTR.REC FROM COST.CNTR, CONO:S.NO<I> ELSE CCTR.DESC = UNKNOWN
*         S.DESC<I> = CCTR.DESC
*      NEXT I
*      P_X  = 4 ; P_Y = 6 ; P_VALUE = "Cctr" ; P_OPT = ""
*      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
**      P_X  = 4 ; P_Y = 7 ; P_VALUE = D4:SP1:D30 ; P_OPT = "CL"
**      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*      DS.X = 9
*      X1 = 5
*      S.LN = 1
*      S.OLD.START = 0
*      GOSUB 55000
*      GOSUB 50000
      GXR.XREF=DEPARTMENT
      GXR.FILE=COST.CNTR
      GXR.NAME='CCTR.DEPT'
*   GXR.TOP.LINE="COST CENTER XREF SEARCH"
*   GXR.HEADING<1,1>="CCTR"
*   GXR.ATT<1,2>=1
*   GXR.LOC=5
      GXR.ID=""
*   GXR.SRCH.ID=DEPT.CCTRS
      GXR.SRCH.ID=F.DEPT
*   CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      CALL GEN.XREF.SUB(MAT GEN.XREF.REC,PREFIX,XREF.DATA)
      ECD.ACTION=2;CALL SCRN.EDIT
      ECD.ACTION=3;CALL SCRN.EDIT
      OLD.START = ""
      GOSUB 80000
      S.NO = GXR.ID
*T21876 ^
      IF S.NO = "" THEN GOTO 1300
      ECD.RET.VALUE = S.NO
      ECD.NUM = 5
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = S.NO
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   IF ECD.RET.VALUE = GEN.CCTR THEN
      ECD.NUM = 5
      F.CCTR = GEN.CCTR
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = F.CCTR
      ECD.ACTION = 5; CALL SCRN.EDIT
      GOTO 1499
   END
   LOCATE ECD.RET.VALUE IN DEPT.CCTRS<1>,1 SETTING FND ELSE
      ERRMSG = "CANNOT LOCATE COST.CNTR - ":ECD.RET.VALUE: ", UNDER DEPARTMENT - ":F.DEPT
      GOSUB 91000; GOTO 1300
   END
   MATREAD CCTR.REC FROM COST.CNTR, CONO:ECD.RET.VALUE ELSE
      ERRMSG = "CANNOT LOCATE COST.CNTR - " : ECD.RET.VALUE
      GOSUB 91000; GOTO 1300
   END
   F.CCTR = ECD.RET.VALUE
1499*
   RETURN
*
*--- ENTER TYPE OF DISTRIBUTION
*
1500*
   ECD.NUM = 8; ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN CDR.TYPE = ECD.RET.VALUE
   RETURN
*
*---- CHECK FOR EQUIVALENT ACCOUNT
*
40000*
   UPD.FLG = 0
   IF EQV.FLG = 1 THEN
      READ N.KEY FROM COA.EQUIV , CONO:S.DIV:S.DEPT:S.CCTR:S.ACCT.NO ELSE N.KEY = ""
      IF N.KEY # "" THEN
         UPD.FLG = 1
         MATREAD COA.REC FROM COA, CONO:N.KEY[11,ACCT.LEN] ELSE
            ERRMSG = "CANNOT LOCATE EQUIVALENT ACCOUNT : ": N.KEY[11,ACCT.LEN] CO.ACCT.MASK
            GOSUB 91000
            UPD.FLG = 0
         END
      END
   END
   RETURN
*
*--- SCROLL XREF
*
* *COPY>PMCBP>DV.DP.CC.SCROLL    ;* T21876
*
*--- SCROLL BOTTOM TO CLEAR XREF
*
80000*
   LN = 1
   OLD.START = ''
   ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   IF LST.LINE > LINES THEN LST.LINE = LINES
   IF ST.LINE = OLD.START THEN RETURN
   OLD.START = ST.LINE
   CNT = 1
   FOR N = ST.LINE TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*---- SCROLL HEADING
81000 *
   ECD.NUM = 1 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 2 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 3 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 4 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 5 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   ECD.NUM = 8 ; SCV.REC(ECD.NUM)<1> = "" ; ECD.ACTION = 5; CALL SCRN.EDIT
   RETURN
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*       PRINT @(0,23):ERRMSG:CL:
*       INPUT REPLY,1 :
*       PRINT @(0,23):CL:
*       RETURN
999999 * PRINT @(-1)
END
