      SUBROUTINE REPORT.LINE.XREF.SUB(CONO,MASK,RET.VALUE,CODES,TYPE,XX,DX,D.MASK,BEGIN.PAGE,PAGE.SIZE)
***************************************************************************
*
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
*
* PROGRAM  - REPORT.LINE.XREF.SUB
*
* AUTHOR   - WALID YAMOUT, COMPUTER BUSINESS ASSOCIATES
*
* DATE     - 01/08/86
*
* REVISION - A.1.0
*
* DESCRIPTION
*
***************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>GLS.CPYLIB>COM.GLS.REPORT
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
      MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
*---- INITIALIZATION
*
      UNKNOWN = STR("?",10)
      LINE.SPACE = 1
      OLD.START = 0
      DESC = ""
*
*---- MAIN PROCESSING
*
100*
      LN = 1
      LINES = COUNT(CODES,VM) + (CODES # "")
      FOR I = 1 TO LINES
         BEGIN CASE
            CASE TYPE = 1
               MATREAD AC.REC FROM ACCT.CATG, CODES<1,I> ELSE
                  MAT AC.REC = ""; AC.DESC = UNKNOWN
               END
               DESC<1,I> = AC.DESC
            CASE TYPE = 2
               MATREAD ASC.REC FROM ACCT.SUB.CATG, CODES<1,I> ELSE
                  MAT ASC.REC = ""; ASC.DESC = UNKNOWN
               END
               DESC<1,I> = ASC.DESC
            CASE 1
               MATREAD COA.REC FROM COA, CONO : CODES<1,I> ELSE
                  MAT COA.REC = ""; COA.DESC = UNKNOWN
               END
               DESC<1,I> = COA.DESC
         END CASE
      NEXT I
      GOSUB 55000
*
*---- GET OPERATOR REPLY
*
50000*
      ECD.NUM = 6
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4
      CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "N"
            GOTO 999999
         CASE NUM(OPTION) AND OPTION > 0
            IF OPTION < START.LINE OR OPTION > LAST.LINE THEN
               ERRMSG = "** OUT OF RANGE **"
               GOSUB 90000
            END ELSE
               RET.VALUE = CODES<1,OPTION>
               GOTO 999999
            END
         CASE OPTION = "S"
            LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF LN > LINES THEN LN = 1
            GOSUB 55000
      END CASE
      GOTO 50000
*
*---- DISPLAY MULTI-LINE AREA
*
55000*
      START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
      LAST.LINE = START.LINE + PAGE.SIZE - 1
      IF LAST.LINE > LINES THEN LAST.LINE = LINES
      IF START.LINE = OLD.START THEN RETURN
      OLD.START = START.LINE
      CNT = 1
      FOR N = START.LINE TO LAST.LINE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
         P_X  := AM:XX ; P_Y := AM:SLN ; P_VALUE := AM:CODES<1,N> MASK
         P_X  := AM:DX ; P_Y := AM:SLN ; P_VALUE := AM:DESC<1,N> D.MASK
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
         CNT = CNT + 1
      NEXT N
      FOR N = CNT TO PAGE.SIZE
         SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
         P_X  = 0 ; P_Y = SLN ; P_VALUE = "" ; P_OPT = "CL"
         CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      NEXT N
      RETURN
*
*---- ERROR ROUTINE
*
90000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 90000*
*       PRINT @(0,23):CL:ERRMSG:
*       INPUT REPLY,1  _:
*       PRINT @(0,23):CL:
*       RETURN
999999*
*      ECD.ACTION=99;CALL SCRN.EDIT
      RETURN
   END
